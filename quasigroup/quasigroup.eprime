language ESSENCE' 1.0

given N : int(1..)
given initBoard : matrix indexed by [int(1..N), int(1..N)] of int(0..N)

find puzzle : matrix indexed by [int(1..N), int(1..N)] of int(1..N)

such that 

forAll i : int(1..N) .
    forAll j : int(1..N) . 
        initBoard[i,j] != 0 -> puzzle[i,j] = initBoard[i,j],

forAll i : int(1..N) .
    allDiff(puzzle[i, ..]),

forAll j : int(1..N) .
    allDiff(puzzle[..,j])