language ESSENCE' 1.0

given N : int(1..)
given initBoard : matrix indexed by [int(1..N), int(1..N)] of int(0..N)

find puzzle : matrix indexed by [int(1..N), int(1..N), int(1..N)] of int(0..1)

such that 

forAll i : int(1..N) .
    forAll j : int(1..N) . 
        initBoard[i,j] != 0 -> puzzle[i,j,initBoard[i,j]] = 1,

forAll i : int(1..N) .
    forAll k : int(1..N) .
        sum(puzzle[i,..,k]) = 1,

forAll j : int(1..N) .
    forAll k : int(1..N) .
        sum(puzzle[..,j,k]) = 1,

forAll i : int(1..N) .
    forAll j : int(1..N) .
        sum(puzzle[i,j,..]) = 1