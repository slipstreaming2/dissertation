predicate all_different_int(array [int] of var int: xs);
var {0,1}: instance_00001_00001_INTEGER :: output_var ;
var 0..2: instance_00001_00002:: output_var ;
var 0..3: instance_00001_00003:: output_var ;
var 0..4: instance_00001_00004:: output_var ;
var 0..5: instance_00001_00005:: output_var ;
var 0..6: instance_00001_00006:: output_var ;
var 0..7: instance_00001_00007:: output_var ;
var 0..8: instance_00001_00008:: output_var ;
var 0..9: instance_00001_00009:: output_var ;
var 0..10: instance_00001_00010:: output_var ;
var 0..10: instance_00002_00001:: output_var ;
var {0,1}: instance_00002_00002_INTEGER :: output_var ;
var 0..2: instance_00002_00003:: output_var ;
var 0..3: instance_00002_00004:: output_var ;
var 0..4: instance_00002_00005:: output_var ;
var 0..5: instance_00002_00006:: output_var ;
var 0..6: instance_00002_00007:: output_var ;
var 0..7: instance_00002_00008:: output_var ;
var 0..8: instance_00002_00009:: output_var ;
var 0..9: instance_00002_00010:: output_var ;
var 0..9: instance_00003_00001:: output_var ;
var 0..10: instance_00003_00002:: output_var ;
var {0,1}: instance_00003_00003_INTEGER :: output_var ;
var 0..2: instance_00003_00004:: output_var ;
var 0..3: instance_00003_00005:: output_var ;
var 0..4: instance_00003_00006:: output_var ;
var 0..5: instance_00003_00007:: output_var ;
var 0..6: instance_00003_00008:: output_var ;
var 0..7: instance_00003_00009:: output_var ;
var 0..8: instance_00003_00010:: output_var ;
var 0..8: instance_00004_00001:: output_var ;
var 0..9: instance_00004_00002:: output_var ;
var 0..10: instance_00004_00003:: output_var ;
var {0,1}: instance_00004_00004_INTEGER :: output_var ;
var 0..2: instance_00004_00005:: output_var ;
var 0..3: instance_00004_00006:: output_var ;
var 0..4: instance_00004_00007:: output_var ;
var 0..5: instance_00004_00008:: output_var ;
var 0..6: instance_00004_00009:: output_var ;
var 0..7: instance_00004_00010:: output_var ;
var 0..7: instance_00005_00001:: output_var ;
var 0..8: instance_00005_00002:: output_var ;
var 0..9: instance_00005_00003:: output_var ;
var 0..10: instance_00005_00004:: output_var ;
var {0,1}: instance_00005_00005_INTEGER :: output_var ;
var 0..2: instance_00005_00006:: output_var ;
var 0..3: instance_00005_00007:: output_var ;
var 0..4: instance_00005_00008:: output_var ;
var 0..5: instance_00005_00009:: output_var ;
var 0..6: instance_00005_00010:: output_var ;
var 0..6: instance_00006_00001:: output_var ;
var 0..7: instance_00006_00002:: output_var ;
var 0..8: instance_00006_00003:: output_var ;
var 0..9: instance_00006_00004:: output_var ;
var 0..10: instance_00006_00005:: output_var ;
var {0,1}: instance_00006_00006_INTEGER :: output_var ;
var 0..2: instance_00006_00007:: output_var ;
var 0..3: instance_00006_00008:: output_var ;
var 0..4: instance_00006_00009:: output_var ;
var 0..5: instance_00006_00010:: output_var ;
var 0..5: instance_00007_00001:: output_var ;
var 0..6: instance_00007_00002:: output_var ;
var 0..7: instance_00007_00003:: output_var ;
var 0..8: instance_00007_00004:: output_var ;
var 0..9: instance_00007_00005:: output_var ;
var 0..10: instance_00007_00006:: output_var ;
var {0,1}: instance_00007_00007_INTEGER :: output_var ;
var 0..2: instance_00007_00008:: output_var ;
var 0..3: instance_00007_00009:: output_var ;
var 0..4: instance_00007_00010:: output_var ;
var 0..4: instance_00008_00001:: output_var ;
var 0..5: instance_00008_00002:: output_var ;
var 0..6: instance_00008_00003:: output_var ;
var 0..7: instance_00008_00004:: output_var ;
var 0..8: instance_00008_00005:: output_var ;
var 0..9: instance_00008_00006:: output_var ;
var 0..10: instance_00008_00007:: output_var ;
var {0,1}: instance_00008_00008_INTEGER :: output_var ;
var 0..2: instance_00008_00009:: output_var ;
var 0..3: instance_00008_00010:: output_var ;
var 0..3: instance_00009_00001:: output_var ;
var 0..4: instance_00009_00002:: output_var ;
var 0..5: instance_00009_00003:: output_var ;
var 0..6: instance_00009_00004:: output_var ;
var 0..7: instance_00009_00005:: output_var ;
var 0..8: instance_00009_00006:: output_var ;
var 0..9: instance_00009_00007:: output_var ;
var 0..10: instance_00009_00008:: output_var ;
var {0,1}: instance_00009_00009_INTEGER :: output_var ;
var 0..2: instance_00009_00010:: output_var ;
var 0..2: instance_00010_00001:: output_var ;
var 0..3: instance_00010_00002:: output_var ;
var 0..4: instance_00010_00003:: output_var ;
var 0..5: instance_00010_00004:: output_var ;
var 0..6: instance_00010_00005:: output_var ;
var 0..7: instance_00010_00006:: output_var ;
var 0..8: instance_00010_00007:: output_var ;
var 0..9: instance_00010_00008:: output_var ;
var 0..10: instance_00010_00009:: output_var ;
var {0,1}: instance_00010_00010_INTEGER :: output_var ;
var 4..6: aux0:: var_is_introduced ;
var 4..6: aux1:: var_is_introduced ;
var 4..6: aux2:: var_is_introduced ;
var 4..6: aux3:: var_is_introduced ;
var 4..6: aux4:: var_is_introduced ;
var 4..6: aux5:: var_is_introduced ;
var 4..6: aux6:: var_is_introduced ;
var 4..6: aux7:: var_is_introduced ;
var 4..6: aux8:: var_is_introduced ;
var 4..6: aux9:: var_is_introduced ;
var 4..6: aux10:: var_is_introduced ;
var 4..6: aux11:: var_is_introduced ;
var 4..6: aux12:: var_is_introduced ;
var 4..6: aux13:: var_is_introduced ;
var 4..6: aux14:: var_is_introduced ;
var 4..6: aux15:: var_is_introduced ;
var 4..6: aux16:: var_is_introduced ;
var 4..6: aux17:: var_is_introduced ;
var 4..6: aux18:: var_is_introduced ;
var 4..6: aux19:: var_is_introduced ;
var bool: aux20_BOOL:: var_is_introduced ;
var {0,1}: aux20_INTEGER :: var_is_introduced ;
var bool: aux21_BOOL:: var_is_introduced ;
var {0,1}: aux21_INTEGER :: var_is_introduced ;
var bool: aux22_BOOL:: var_is_introduced ;
var {0,1}: aux22_INTEGER :: var_is_introduced ;
var bool: aux23_BOOL:: var_is_introduced ;
var {0,1}: aux23_INTEGER :: var_is_introduced ;
var bool: aux24_BOOL:: var_is_introduced ;
var {0,1}: aux24_INTEGER :: var_is_introduced ;
var bool: aux25_BOOL:: var_is_introduced ;
var {0,1}: aux25_INTEGER :: var_is_introduced ;
var bool: aux26_BOOL:: var_is_introduced ;
var {0,1}: aux26_INTEGER :: var_is_introduced ;
var bool: aux27_BOOL:: var_is_introduced ;
var {0,1}: aux27_INTEGER :: var_is_introduced ;
var bool: aux28_BOOL:: var_is_introduced ;
var {0,1}: aux28_INTEGER :: var_is_introduced ;
var bool: aux29_BOOL:: var_is_introduced ;
var {0,1}: aux29_INTEGER :: var_is_introduced ;
var bool: aux30_BOOL:: var_is_introduced ;
var {0,1}: aux30_INTEGER :: var_is_introduced ;
var bool: aux31_BOOL:: var_is_introduced ;
var {0,1}: aux31_INTEGER :: var_is_introduced ;
var bool: aux32_BOOL:: var_is_introduced ;
var {0,1}: aux32_INTEGER :: var_is_introduced ;
var bool: aux33_BOOL:: var_is_introduced ;
var {0,1}: aux33_INTEGER :: var_is_introduced ;
var bool: aux34_BOOL:: var_is_introduced ;
var {0,1}: aux34_INTEGER :: var_is_introduced ;
var bool: aux35_BOOL:: var_is_introduced ;
var {0,1}: aux35_INTEGER :: var_is_introduced ;
var bool: aux36_BOOL:: var_is_introduced ;
var {0,1}: aux36_INTEGER :: var_is_introduced ;
var bool: aux37_BOOL:: var_is_introduced ;
var {0,1}: aux37_INTEGER :: var_is_introduced ;
var bool: aux38_BOOL:: var_is_introduced ;
var {0,1}: aux38_INTEGER :: var_is_introduced ;
var bool: aux39_BOOL:: var_is_introduced ;
var {0,1}: aux39_INTEGER :: var_is_introduced ;
var bool: aux40_BOOL:: var_is_introduced ;
var {0,1}: aux40_INTEGER :: var_is_introduced ;
var bool: aux41_BOOL:: var_is_introduced ;
var {0,1}: aux41_INTEGER :: var_is_introduced ;
var bool: aux42_BOOL:: var_is_introduced ;
var {0,1}: aux42_INTEGER :: var_is_introduced ;
var bool: aux43_BOOL:: var_is_introduced ;
var {0,1}: aux43_INTEGER :: var_is_introduced ;
var bool: aux44_BOOL:: var_is_introduced ;
var {0,1}: aux44_INTEGER :: var_is_introduced ;
var bool: aux45_BOOL:: var_is_introduced ;
var {0,1}: aux45_INTEGER :: var_is_introduced ;
var bool: aux46_BOOL:: var_is_introduced ;
var {0,1}: aux46_INTEGER :: var_is_introduced ;
var bool: aux47_BOOL:: var_is_introduced ;
var {0,1}: aux47_INTEGER :: var_is_introduced ;
var bool: aux48_BOOL:: var_is_introduced ;
var {0,1}: aux48_INTEGER :: var_is_introduced ;
var bool: aux49_BOOL:: var_is_introduced ;
var {0,1}: aux49_INTEGER :: var_is_introduced ;
var bool: aux50_BOOL:: var_is_introduced ;
var {0,1}: aux50_INTEGER :: var_is_introduced ;
var bool: aux51_BOOL:: var_is_introduced ;
var {0,1}: aux51_INTEGER :: var_is_introduced ;
var bool: aux52_BOOL:: var_is_introduced ;
var {0,1}: aux52_INTEGER :: var_is_introduced ;
var bool: aux53_BOOL:: var_is_introduced ;
var {0,1}: aux53_INTEGER :: var_is_introduced ;
var bool: aux54_BOOL:: var_is_introduced ;
var {0,1}: aux54_INTEGER :: var_is_introduced ;
var bool: aux55_BOOL:: var_is_introduced ;
var {0,1}: aux55_INTEGER :: var_is_introduced ;
var bool: aux56_BOOL:: var_is_introduced ;
var {0,1}: aux56_INTEGER :: var_is_introduced ;
var bool: aux57_BOOL:: var_is_introduced ;
var {0,1}: aux57_INTEGER :: var_is_introduced ;
var bool: aux58_BOOL:: var_is_introduced ;
var {0,1}: aux58_INTEGER :: var_is_introduced ;
var bool: aux59_BOOL:: var_is_introduced ;
var {0,1}: aux59_INTEGER :: var_is_introduced ;
var bool: aux60_BOOL:: var_is_introduced ;
var {0,1}: aux60_INTEGER :: var_is_introduced ;
var bool: aux61_BOOL:: var_is_introduced ;
var {0,1}: aux61_INTEGER :: var_is_introduced ;
var bool: aux62_BOOL:: var_is_introduced ;
var {0,1}: aux62_INTEGER :: var_is_introduced ;
var bool: aux63_BOOL:: var_is_introduced ;
var {0,1}: aux63_INTEGER :: var_is_introduced ;
var bool: aux64_BOOL:: var_is_introduced ;
var {0,1}: aux64_INTEGER :: var_is_introduced ;
var bool: aux65_BOOL:: var_is_introduced ;
var {0,1}: aux65_INTEGER :: var_is_introduced ;
var bool: aux66_BOOL:: var_is_introduced ;
var {0,1}: aux66_INTEGER :: var_is_introduced ;
var bool: aux67_BOOL:: var_is_introduced ;
var {0,1}: aux67_INTEGER :: var_is_introduced ;
var bool: aux68_BOOL:: var_is_introduced ;
var {0,1}: aux68_INTEGER :: var_is_introduced ;
var bool: aux69_BOOL:: var_is_introduced ;
var {0,1}: aux69_INTEGER :: var_is_introduced ;
var bool: aux70_BOOL:: var_is_introduced ;
var {0,1}: aux70_INTEGER :: var_is_introduced ;
var bool: aux71_BOOL:: var_is_introduced ;
var {0,1}: aux71_INTEGER :: var_is_introduced ;
var bool: aux72_BOOL:: var_is_introduced ;
var {0,1}: aux72_INTEGER :: var_is_introduced ;
var bool: aux73_BOOL:: var_is_introduced ;
var {0,1}: aux73_INTEGER :: var_is_introduced ;
var bool: aux74_BOOL:: var_is_introduced ;
var {0,1}: aux74_INTEGER :: var_is_introduced ;
var bool: aux75_BOOL:: var_is_introduced ;
var {0,1}: aux75_INTEGER :: var_is_introduced ;
var bool: aux76_BOOL:: var_is_introduced ;
var {0,1}: aux76_INTEGER :: var_is_introduced ;
var bool: aux77_BOOL:: var_is_introduced ;
var {0,1}: aux77_INTEGER :: var_is_introduced ;
var bool: aux78_BOOL:: var_is_introduced ;
var {0,1}: aux78_INTEGER :: var_is_introduced ;
var bool: aux79_BOOL:: var_is_introduced ;
var {0,1}: aux79_INTEGER :: var_is_introduced ;
var bool: aux80_BOOL:: var_is_introduced ;
var {0,1}: aux80_INTEGER :: var_is_introduced ;
var bool: aux81_BOOL:: var_is_introduced ;
var {0,1}: aux81_INTEGER :: var_is_introduced ;
var bool: aux82_BOOL:: var_is_introduced ;
var {0,1}: aux82_INTEGER :: var_is_introduced ;
var bool: aux83_BOOL:: var_is_introduced ;
var {0,1}: aux83_INTEGER :: var_is_introduced ;
var bool: aux84_BOOL:: var_is_introduced ;
var {0,1}: aux84_INTEGER :: var_is_introduced ;
var bool: aux85_BOOL:: var_is_introduced ;
var {0,1}: aux85_INTEGER :: var_is_introduced ;
var bool: aux86_BOOL:: var_is_introduced ;
var {0,1}: aux86_INTEGER :: var_is_introduced ;
var bool: aux87_BOOL:: var_is_introduced ;
var {0,1}: aux87_INTEGER :: var_is_introduced ;
var bool: aux88_BOOL:: var_is_introduced ;
var {0,1}: aux88_INTEGER :: var_is_introduced ;
var bool: aux89_BOOL:: var_is_introduced ;
var {0,1}: aux89_INTEGER :: var_is_introduced ;
var bool: aux90_BOOL:: var_is_introduced ;
var {0,1}: aux90_INTEGER :: var_is_introduced ;
var bool: aux91_BOOL:: var_is_introduced ;
var {0,1}: aux91_INTEGER :: var_is_introduced ;
var bool: aux92_BOOL:: var_is_introduced ;
var {0,1}: aux92_INTEGER :: var_is_introduced ;
var bool: aux93_BOOL:: var_is_introduced ;
var {0,1}: aux93_INTEGER :: var_is_introduced ;
var bool: aux94_BOOL:: var_is_introduced ;
var {0,1}: aux94_INTEGER :: var_is_introduced ;
var bool: aux95_BOOL:: var_is_introduced ;
var {0,1}: aux95_INTEGER :: var_is_introduced ;
var bool: aux96_BOOL:: var_is_introduced ;
var {0,1}: aux96_INTEGER :: var_is_introduced ;
var bool: aux97_BOOL:: var_is_introduced ;
var {0,1}: aux97_INTEGER :: var_is_introduced ;
var bool: aux98_BOOL:: var_is_introduced ;
var {0,1}: aux98_INTEGER :: var_is_introduced ;
var bool: aux99_BOOL:: var_is_introduced ;
var {0,1}: aux99_INTEGER :: var_is_introduced ;
var bool: aux100_BOOL:: var_is_introduced ;
var {0,1}: aux100_INTEGER :: var_is_introduced ;
var bool: aux101_BOOL:: var_is_introduced ;
var {0,1}: aux101_INTEGER :: var_is_introduced ;
var bool: aux102_BOOL:: var_is_introduced ;
var {0,1}: aux102_INTEGER :: var_is_introduced ;
var bool: aux103_BOOL:: var_is_introduced ;
var {0,1}: aux103_INTEGER :: var_is_introduced ;
var bool: aux104_BOOL:: var_is_introduced ;
var {0,1}: aux104_INTEGER :: var_is_introduced ;
var bool: aux105_BOOL:: var_is_introduced ;
var {0,1}: aux105_INTEGER :: var_is_introduced ;
var bool: aux106_BOOL:: var_is_introduced ;
var {0,1}: aux106_INTEGER :: var_is_introduced ;
var bool: aux107_BOOL:: var_is_introduced ;
var {0,1}: aux107_INTEGER :: var_is_introduced ;
var bool: aux108_BOOL:: var_is_introduced ;
var {0,1}: aux108_INTEGER :: var_is_introduced ;
var bool: aux109_BOOL:: var_is_introduced ;
var {0,1}: aux109_INTEGER :: var_is_introduced ;
var bool: aux110_BOOL:: var_is_introduced ;
var {0,1}: aux110_INTEGER :: var_is_introduced ;
var bool: aux111_BOOL:: var_is_introduced ;
var {0,1}: aux111_INTEGER :: var_is_introduced ;
var bool: aux112_BOOL:: var_is_introduced ;
var {0,1}: aux112_INTEGER :: var_is_introduced ;
var bool: aux113_BOOL:: var_is_introduced ;
var {0,1}: aux113_INTEGER :: var_is_introduced ;
var bool: aux114_BOOL:: var_is_introduced ;
var {0,1}: aux114_INTEGER :: var_is_introduced ;
var bool: aux115_BOOL:: var_is_introduced ;
var {0,1}: aux115_INTEGER :: var_is_introduced ;
var bool: aux116_BOOL:: var_is_introduced ;
var {0,1}: aux116_INTEGER :: var_is_introduced ;
var bool: aux117_BOOL:: var_is_introduced ;
var {0,1}: aux117_INTEGER :: var_is_introduced ;
var bool: aux118_BOOL:: var_is_introduced ;
var {0,1}: aux118_INTEGER :: var_is_introduced ;
var bool: aux119_BOOL:: var_is_introduced ;
var {0,1}: aux119_INTEGER :: var_is_introduced ;
var bool: aux120_BOOL:: var_is_introduced ;
var {0,1}: aux120_INTEGER :: var_is_introduced ;
var bool: aux121_BOOL:: var_is_introduced ;
var {0,1}: aux121_INTEGER :: var_is_introduced ;
var bool: aux122_BOOL:: var_is_introduced ;
var {0,1}: aux122_INTEGER :: var_is_introduced ;
var bool: aux123_BOOL:: var_is_introduced ;
var {0,1}: aux123_INTEGER :: var_is_introduced ;
var bool: aux124_BOOL:: var_is_introduced ;
var {0,1}: aux124_INTEGER :: var_is_introduced ;
var bool: aux125_BOOL:: var_is_introduced ;
var {0,1}: aux125_INTEGER :: var_is_introduced ;
var bool: aux126_BOOL:: var_is_introduced ;
var {0,1}: aux126_INTEGER :: var_is_introduced ;
var bool: aux127_BOOL:: var_is_introduced ;
var {0,1}: aux127_INTEGER :: var_is_introduced ;
var bool: aux128_BOOL:: var_is_introduced ;
var {0,1}: aux128_INTEGER :: var_is_introduced ;
var bool: aux129_BOOL:: var_is_introduced ;
var {0,1}: aux129_INTEGER :: var_is_introduced ;
var bool: aux130_BOOL:: var_is_introduced ;
var {0,1}: aux130_INTEGER :: var_is_introduced ;
var bool: aux131_BOOL:: var_is_introduced ;
var {0,1}: aux131_INTEGER :: var_is_introduced ;
var bool: aux132_BOOL:: var_is_introduced ;
var {0,1}: aux132_INTEGER :: var_is_introduced ;
var bool: aux133_BOOL:: var_is_introduced ;
var {0,1}: aux133_INTEGER :: var_is_introduced ;
var bool: aux134_BOOL:: var_is_introduced ;
var {0,1}: aux134_INTEGER :: var_is_introduced ;
var bool: aux135_BOOL:: var_is_introduced ;
var {0,1}: aux135_INTEGER :: var_is_introduced ;
var bool: aux136_BOOL:: var_is_introduced ;
var {0,1}: aux136_INTEGER :: var_is_introduced ;
var bool: aux137_BOOL:: var_is_introduced ;
var {0,1}: aux137_INTEGER :: var_is_introduced ;
var bool: aux138_BOOL:: var_is_introduced ;
var {0,1}: aux138_INTEGER :: var_is_introduced ;
var bool: aux139_BOOL:: var_is_introduced ;
var {0,1}: aux139_INTEGER :: var_is_introduced ;
var bool: aux140_BOOL:: var_is_introduced ;
var {0,1}: aux140_INTEGER :: var_is_introduced ;
var bool: aux141_BOOL:: var_is_introduced ;
var {0,1}: aux141_INTEGER :: var_is_introduced ;
var bool: aux142_BOOL:: var_is_introduced ;
var {0,1}: aux142_INTEGER :: var_is_introduced ;
var bool: aux143_BOOL:: var_is_introduced ;
var {0,1}: aux143_INTEGER :: var_is_introduced ;
var bool: aux144_BOOL:: var_is_introduced ;
var {0,1}: aux144_INTEGER :: var_is_introduced ;
var bool: aux145_BOOL:: var_is_introduced ;
var {0,1}: aux145_INTEGER :: var_is_introduced ;
var bool: aux146_BOOL:: var_is_introduced ;
var {0,1}: aux146_INTEGER :: var_is_introduced ;
var bool: aux147_BOOL:: var_is_introduced ;
var {0,1}: aux147_INTEGER :: var_is_introduced ;
var bool: aux148_BOOL:: var_is_introduced ;
var {0,1}: aux148_INTEGER :: var_is_introduced ;
var bool: aux149_BOOL:: var_is_introduced ;
var {0,1}: aux149_INTEGER :: var_is_introduced ;
var bool: aux150_BOOL:: var_is_introduced ;
var {0,1}: aux150_INTEGER :: var_is_introduced ;
var bool: aux151_BOOL:: var_is_introduced ;
var {0,1}: aux151_INTEGER :: var_is_introduced ;
var bool: aux152_BOOL:: var_is_introduced ;
var {0,1}: aux152_INTEGER :: var_is_introduced ;
var bool: aux153_BOOL:: var_is_introduced ;
var {0,1}: aux153_INTEGER :: var_is_introduced ;
var bool: aux154_BOOL:: var_is_introduced ;
var {0,1}: aux154_INTEGER :: var_is_introduced ;
var bool: aux155_BOOL:: var_is_introduced ;
var {0,1}: aux155_INTEGER :: var_is_introduced ;
var bool: aux156_BOOL:: var_is_introduced ;
var {0,1}: aux156_INTEGER :: var_is_introduced ;
var bool: aux157_BOOL:: var_is_introduced ;
var {0,1}: aux157_INTEGER :: var_is_introduced ;
var bool: aux158_BOOL:: var_is_introduced ;
var {0,1}: aux158_INTEGER :: var_is_introduced ;
var bool: aux159_BOOL:: var_is_introduced ;
var {0,1}: aux159_INTEGER :: var_is_introduced ;
var bool: aux160_BOOL:: var_is_introduced ;
var {0,1}: aux160_INTEGER :: var_is_introduced ;
var bool: aux161_BOOL:: var_is_introduced ;
var {0,1}: aux161_INTEGER :: var_is_introduced ;
var bool: aux162_BOOL:: var_is_introduced ;
var {0,1}: aux162_INTEGER :: var_is_introduced ;
var bool: aux163_BOOL:: var_is_introduced ;
var {0,1}: aux163_INTEGER :: var_is_introduced ;
var bool: aux164_BOOL:: var_is_introduced ;
var {0,1}: aux164_INTEGER :: var_is_introduced ;
var bool: aux165_BOOL:: var_is_introduced ;
var {0,1}: aux165_INTEGER :: var_is_introduced ;
var bool: aux166_BOOL:: var_is_introduced ;
var {0,1}: aux166_INTEGER :: var_is_introduced ;
var bool: aux167_BOOL:: var_is_introduced ;
var {0,1}: aux167_INTEGER :: var_is_introduced ;
var bool: aux168_BOOL:: var_is_introduced ;
var {0,1}: aux168_INTEGER :: var_is_introduced ;
var bool: aux169_BOOL:: var_is_introduced ;
var {0,1}: aux169_INTEGER :: var_is_introduced ;
var bool: aux170_BOOL:: var_is_introduced ;
var {0,1}: aux170_INTEGER :: var_is_introduced ;
var bool: aux171_BOOL:: var_is_introduced ;
var {0,1}: aux171_INTEGER :: var_is_introduced ;
var bool: aux172_BOOL:: var_is_introduced ;
var {0,1}: aux172_INTEGER :: var_is_introduced ;
var bool: aux173_BOOL:: var_is_introduced ;
var {0,1}: aux173_INTEGER :: var_is_introduced ;
var bool: aux174_BOOL:: var_is_introduced ;
var {0,1}: aux174_INTEGER :: var_is_introduced ;
var bool: aux175_BOOL:: var_is_introduced ;
var {0,1}: aux175_INTEGER :: var_is_introduced ;
var bool: aux176_BOOL:: var_is_introduced ;
var {0,1}: aux176_INTEGER :: var_is_introduced ;
var bool: aux177_BOOL:: var_is_introduced ;
var {0,1}: aux177_INTEGER :: var_is_introduced ;
var bool: aux178_BOOL:: var_is_introduced ;
var {0,1}: aux178_INTEGER :: var_is_introduced ;
var bool: aux179_BOOL:: var_is_introduced ;
var {0,1}: aux179_INTEGER :: var_is_introduced ;
var bool: aux180_BOOL:: var_is_introduced ;
var {0,1}: aux180_INTEGER :: var_is_introduced ;
var bool: aux181_BOOL:: var_is_introduced ;
var {0,1}: aux181_INTEGER :: var_is_introduced ;
var bool: aux182_BOOL:: var_is_introduced ;
var {0,1}: aux182_INTEGER :: var_is_introduced ;
var bool: aux183_BOOL:: var_is_introduced ;
var {0,1}: aux183_INTEGER :: var_is_introduced ;
var bool: aux184_BOOL:: var_is_introduced ;
var {0,1}: aux184_INTEGER :: var_is_introduced ;
var bool: aux185_BOOL:: var_is_introduced ;
var {0,1}: aux185_INTEGER :: var_is_introduced ;
var bool: aux186_BOOL:: var_is_introduced ;
var {0,1}: aux186_INTEGER :: var_is_introduced ;
var bool: aux187_BOOL:: var_is_introduced ;
var {0,1}: aux187_INTEGER :: var_is_introduced ;
var bool: aux188_BOOL:: var_is_introduced ;
var {0,1}: aux188_INTEGER :: var_is_introduced ;
var bool: aux189_BOOL:: var_is_introduced ;
var {0,1}: aux189_INTEGER :: var_is_introduced ;
var bool: aux190_BOOL:: var_is_introduced ;
var {0,1}: aux190_INTEGER :: var_is_introduced ;
var bool: aux191_BOOL:: var_is_introduced ;
var {0,1}: aux191_INTEGER :: var_is_introduced ;
var bool: aux192_BOOL:: var_is_introduced ;
var {0,1}: aux192_INTEGER :: var_is_introduced ;
var bool: aux193_BOOL:: var_is_introduced ;
var {0,1}: aux193_INTEGER :: var_is_introduced ;
var bool: aux194_BOOL:: var_is_introduced ;
var {0,1}: aux194_INTEGER :: var_is_introduced ;
var bool: aux195_BOOL:: var_is_introduced ;
var {0,1}: aux195_INTEGER :: var_is_introduced ;
var bool: aux196_BOOL:: var_is_introduced ;
var {0,1}: aux196_INTEGER :: var_is_introduced ;
var bool: aux197_BOOL:: var_is_introduced ;
var {0,1}: aux197_INTEGER :: var_is_introduced ;
var bool: aux198_BOOL:: var_is_introduced ;
var {0,1}: aux198_INTEGER :: var_is_introduced ;
var bool: aux199_BOOL:: var_is_introduced ;
var {0,1}: aux199_INTEGER :: var_is_introduced ;
var bool: aux200_BOOL:: var_is_introduced ;
var {0,1}: aux200_INTEGER :: var_is_introduced ;
var bool: aux201_BOOL:: var_is_introduced ;
var {0,1}: aux201_INTEGER :: var_is_introduced ;
var bool: aux202_BOOL:: var_is_introduced ;
var {0,1}: aux202_INTEGER :: var_is_introduced ;
var bool: aux203_BOOL:: var_is_introduced ;
var {0,1}: aux203_INTEGER :: var_is_introduced ;
var bool: aux204_BOOL:: var_is_introduced ;
var {0,1}: aux204_INTEGER :: var_is_introduced ;
var bool: aux205_BOOL:: var_is_introduced ;
var {0,1}: aux205_INTEGER :: var_is_introduced ;
var bool: aux206_BOOL:: var_is_introduced ;
var {0,1}: aux206_INTEGER :: var_is_introduced ;
var bool: aux207_BOOL:: var_is_introduced ;
var {0,1}: aux207_INTEGER :: var_is_introduced ;
var bool: aux208_BOOL:: var_is_introduced ;
var {0,1}: aux208_INTEGER :: var_is_introduced ;
var bool: aux209_BOOL:: var_is_introduced ;
var {0,1}: aux209_INTEGER :: var_is_introduced ;
var bool: aux210_BOOL:: var_is_introduced ;
var {0,1}: aux210_INTEGER :: var_is_introduced ;
var bool: aux211_BOOL:: var_is_introduced ;
var {0,1}: aux211_INTEGER :: var_is_introduced ;
var bool: aux212_BOOL:: var_is_introduced ;
var {0,1}: aux212_INTEGER :: var_is_introduced ;
var bool: aux213_BOOL:: var_is_introduced ;
var {0,1}: aux213_INTEGER :: var_is_introduced ;
var bool: aux214_BOOL:: var_is_introduced ;
var {0,1}: aux214_INTEGER :: var_is_introduced ;
var bool: aux215_BOOL:: var_is_introduced ;
var {0,1}: aux215_INTEGER :: var_is_introduced ;
var bool: aux216_BOOL:: var_is_introduced ;
var {0,1}: aux216_INTEGER :: var_is_introduced ;
var bool: aux217_BOOL:: var_is_introduced ;
var {0,1}: aux217_INTEGER :: var_is_introduced ;
var bool: aux218_BOOL:: var_is_introduced ;
var {0,1}: aux218_INTEGER :: var_is_introduced ;
var bool: aux219_BOOL:: var_is_introduced ;
var {0,1}: aux219_INTEGER :: var_is_introduced ;
var bool: aux220_BOOL:: var_is_introduced ;
var {0,1}: aux220_INTEGER :: var_is_introduced ;
var bool: aux221_BOOL:: var_is_introduced ;
var {0,1}: aux221_INTEGER :: var_is_introduced ;
var bool: aux222_BOOL:: var_is_introduced ;
var {0,1}: aux222_INTEGER :: var_is_introduced ;
var bool: aux223_BOOL:: var_is_introduced ;
var {0,1}: aux223_INTEGER :: var_is_introduced ;
var bool: aux224_BOOL:: var_is_introduced ;
var {0,1}: aux224_INTEGER :: var_is_introduced ;
var bool: aux225_BOOL:: var_is_introduced ;
var {0,1}: aux225_INTEGER :: var_is_introduced ;
var bool: aux226_BOOL:: var_is_introduced ;
var {0,1}: aux226_INTEGER :: var_is_introduced ;
var bool: aux227_BOOL:: var_is_introduced ;
var {0,1}: aux227_INTEGER :: var_is_introduced ;
var bool: aux228_BOOL:: var_is_introduced ;
var {0,1}: aux228_INTEGER :: var_is_introduced ;
var bool: aux229_BOOL:: var_is_introduced ;
var {0,1}: aux229_INTEGER :: var_is_introduced ;
var bool: aux230_BOOL:: var_is_introduced ;
var {0,1}: aux230_INTEGER :: var_is_introduced ;
var bool: aux231_BOOL:: var_is_introduced ;
var {0,1}: aux231_INTEGER :: var_is_introduced ;
var bool: aux232_BOOL:: var_is_introduced ;
var {0,1}: aux232_INTEGER :: var_is_introduced ;
var bool: aux233_BOOL:: var_is_introduced ;
var {0,1}: aux233_INTEGER :: var_is_introduced ;
var bool: aux234_BOOL:: var_is_introduced ;
var {0,1}: aux234_INTEGER :: var_is_introduced ;
var bool: aux235_BOOL:: var_is_introduced ;
var {0,1}: aux235_INTEGER :: var_is_introduced ;
var bool: aux236_BOOL:: var_is_introduced ;
var {0,1}: aux236_INTEGER :: var_is_introduced ;
var bool: aux237_BOOL:: var_is_introduced ;
var {0,1}: aux237_INTEGER :: var_is_introduced ;
var bool: aux238_BOOL:: var_is_introduced ;
var {0,1}: aux238_INTEGER :: var_is_introduced ;
var bool: aux239_BOOL:: var_is_introduced ;
var {0,1}: aux239_INTEGER :: var_is_introduced ;
var bool: aux240_BOOL:: var_is_introduced ;
var {0,1}: aux240_INTEGER :: var_is_introduced ;
var bool: aux241_BOOL:: var_is_introduced ;
var {0,1}: aux241_INTEGER :: var_is_introduced ;
var bool: aux242_BOOL:: var_is_introduced ;
var {0,1}: aux242_INTEGER :: var_is_introduced ;
var bool: aux243_BOOL:: var_is_introduced ;
var {0,1}: aux243_INTEGER :: var_is_introduced ;
var bool: aux244_BOOL:: var_is_introduced ;
var {0,1}: aux244_INTEGER :: var_is_introduced ;
var bool: aux245_BOOL:: var_is_introduced ;
var {0,1}: aux245_INTEGER :: var_is_introduced ;
var bool: aux246_BOOL:: var_is_introduced ;
var {0,1}: aux246_INTEGER :: var_is_introduced ;
var bool: aux247_BOOL:: var_is_introduced ;
var {0,1}: aux247_INTEGER :: var_is_introduced ;
var bool: aux248_BOOL:: var_is_introduced ;
var {0,1}: aux248_INTEGER :: var_is_introduced ;
var bool: aux249_BOOL:: var_is_introduced ;
var {0,1}: aux249_INTEGER :: var_is_introduced ;
var bool: aux250_BOOL:: var_is_introduced ;
var {0,1}: aux250_INTEGER :: var_is_introduced ;
var bool: aux251_BOOL:: var_is_introduced ;
var {0,1}: aux251_INTEGER :: var_is_introduced ;
var bool: aux252_BOOL:: var_is_introduced ;
var {0,1}: aux252_INTEGER :: var_is_introduced ;
var bool: aux253_BOOL:: var_is_introduced ;
var {0,1}: aux253_INTEGER :: var_is_introduced ;
var bool: aux254_BOOL:: var_is_introduced ;
var {0,1}: aux254_INTEGER :: var_is_introduced ;
var bool: aux255_BOOL:: var_is_introduced ;
var {0,1}: aux255_INTEGER :: var_is_introduced ;
var bool: aux256_BOOL:: var_is_introduced ;
var {0,1}: aux256_INTEGER :: var_is_introduced ;
var bool: aux257_BOOL:: var_is_introduced ;
var {0,1}: aux257_INTEGER :: var_is_introduced ;
var bool: aux258_BOOL:: var_is_introduced ;
var {0,1}: aux258_INTEGER :: var_is_introduced ;
var bool: aux259_BOOL:: var_is_introduced ;
var {0,1}: aux259_INTEGER :: var_is_introduced ;
var bool: aux260_BOOL:: var_is_introduced ;
var {0,1}: aux260_INTEGER :: var_is_introduced ;
var bool: aux261_BOOL:: var_is_introduced ;
var {0,1}: aux261_INTEGER :: var_is_introduced ;
var bool: aux262_BOOL:: var_is_introduced ;
var {0,1}: aux262_INTEGER :: var_is_introduced ;
var bool: aux263_BOOL:: var_is_introduced ;
var {0,1}: aux263_INTEGER :: var_is_introduced ;
var bool: aux264_BOOL:: var_is_introduced ;
var {0,1}: aux264_INTEGER :: var_is_introduced ;
var bool: aux265_BOOL:: var_is_introduced ;
var {0,1}: aux265_INTEGER :: var_is_introduced ;
var bool: aux266_BOOL:: var_is_introduced ;
var {0,1}: aux266_INTEGER :: var_is_introduced ;
var bool: aux267_BOOL:: var_is_introduced ;
var {0,1}: aux267_INTEGER :: var_is_introduced ;
var bool: aux268_BOOL:: var_is_introduced ;
var {0,1}: aux268_INTEGER :: var_is_introduced ;
var bool: aux269_BOOL:: var_is_introduced ;
var {0,1}: aux269_INTEGER :: var_is_introduced ;
var bool: aux270_BOOL:: var_is_introduced ;
var {0,1}: aux270_INTEGER :: var_is_introduced ;
var bool: aux271_BOOL:: var_is_introduced ;
var {0,1}: aux271_INTEGER :: var_is_introduced ;
var bool: aux272_BOOL:: var_is_introduced ;
var {0,1}: aux272_INTEGER :: var_is_introduced ;
var bool: aux273_BOOL:: var_is_introduced ;
var {0,1}: aux273_INTEGER :: var_is_introduced ;
var bool: aux274_BOOL:: var_is_introduced ;
var {0,1}: aux274_INTEGER :: var_is_introduced ;
var bool: aux275_BOOL:: var_is_introduced ;
var {0,1}: aux275_INTEGER :: var_is_introduced ;
var bool: aux276_BOOL:: var_is_introduced ;
var {0,1}: aux276_INTEGER :: var_is_introduced ;
var bool: aux277_BOOL:: var_is_introduced ;
var {0,1}: aux277_INTEGER :: var_is_introduced ;
var bool: aux278_BOOL:: var_is_introduced ;
var {0,1}: aux278_INTEGER :: var_is_introduced ;
var bool: aux279_BOOL:: var_is_introduced ;
var {0,1}: aux279_INTEGER :: var_is_introduced ;
var bool: aux280_BOOL:: var_is_introduced ;
var {0,1}: aux280_INTEGER :: var_is_introduced ;
var bool: aux281_BOOL:: var_is_introduced ;
var {0,1}: aux281_INTEGER :: var_is_introduced ;
var bool: aux282_BOOL:: var_is_introduced ;
var {0,1}: aux282_INTEGER :: var_is_introduced ;
var bool: aux283_BOOL:: var_is_introduced ;
var {0,1}: aux283_INTEGER :: var_is_introduced ;
var bool: aux284_BOOL:: var_is_introduced ;
var {0,1}: aux284_INTEGER :: var_is_introduced ;
var bool: aux285_BOOL:: var_is_introduced ;
var {0,1}: aux285_INTEGER :: var_is_introduced ;
var bool: aux286_BOOL:: var_is_introduced ;
var {0,1}: aux286_INTEGER :: var_is_introduced ;
var bool: aux287_BOOL:: var_is_introduced ;
var {0,1}: aux287_INTEGER :: var_is_introduced ;
var bool: aux288_BOOL:: var_is_introduced ;
var {0,1}: aux288_INTEGER :: var_is_introduced ;
var bool: aux289_BOOL:: var_is_introduced ;
var {0,1}: aux289_INTEGER :: var_is_introduced ;
var bool: aux290_BOOL:: var_is_introduced ;
var {0,1}: aux290_INTEGER :: var_is_introduced ;
var bool: aux291_BOOL:: var_is_introduced ;
var {0,1}: aux291_INTEGER :: var_is_introduced ;
var bool: aux292_BOOL:: var_is_introduced ;
var {0,1}: aux292_INTEGER :: var_is_introduced ;
var bool: aux293_BOOL:: var_is_introduced ;
var {0,1}: aux293_INTEGER :: var_is_introduced ;
var bool: aux294_BOOL:: var_is_introduced ;
var {0,1}: aux294_INTEGER :: var_is_introduced ;
var bool: aux295_BOOL:: var_is_introduced ;
var {0,1}: aux295_INTEGER :: var_is_introduced ;
var bool: aux296_BOOL:: var_is_introduced ;
var {0,1}: aux296_INTEGER :: var_is_introduced ;
var bool: aux297_BOOL:: var_is_introduced ;
var {0,1}: aux297_INTEGER :: var_is_introduced ;
var bool: aux298_BOOL:: var_is_introduced ;
var {0,1}: aux298_INTEGER :: var_is_introduced ;
var bool: aux299_BOOL:: var_is_introduced ;
var {0,1}: aux299_INTEGER :: var_is_introduced ;
var bool: aux300_BOOL:: var_is_introduced ;
var {0,1}: aux300_INTEGER :: var_is_introduced ;
var bool: aux301_BOOL:: var_is_introduced ;
var {0,1}: aux301_INTEGER :: var_is_introduced ;
var bool: aux302_BOOL:: var_is_introduced ;
var {0,1}: aux302_INTEGER :: var_is_introduced ;
var bool: aux303_BOOL:: var_is_introduced ;
var {0,1}: aux303_INTEGER :: var_is_introduced ;
var bool: aux304_BOOL:: var_is_introduced ;
var {0,1}: aux304_INTEGER :: var_is_introduced ;
var bool: aux305_BOOL:: var_is_introduced ;
var {0,1}: aux305_INTEGER :: var_is_introduced ;
var bool: aux306_BOOL:: var_is_introduced ;
var {0,1}: aux306_INTEGER :: var_is_introduced ;
var bool: aux307_BOOL:: var_is_introduced ;
var {0,1}: aux307_INTEGER :: var_is_introduced ;
var bool: aux308_BOOL:: var_is_introduced ;
var {0,1}: aux308_INTEGER :: var_is_introduced ;
var bool: aux309_BOOL:: var_is_introduced ;
var {0,1}: aux309_INTEGER :: var_is_introduced ;
var bool: aux310_BOOL:: var_is_introduced ;
var {0,1}: aux310_INTEGER :: var_is_introduced ;
var bool: aux311_BOOL:: var_is_introduced ;
var {0,1}: aux311_INTEGER :: var_is_introduced ;
var bool: aux312_BOOL:: var_is_introduced ;
var {0,1}: aux312_INTEGER :: var_is_introduced ;
var bool: aux313_BOOL:: var_is_introduced ;
var {0,1}: aux313_INTEGER :: var_is_introduced ;
var bool: aux314_BOOL:: var_is_introduced ;
var {0,1}: aux314_INTEGER :: var_is_introduced ;
var bool: aux315_BOOL:: var_is_introduced ;
var {0,1}: aux315_INTEGER :: var_is_introduced ;
var bool: aux316_BOOL:: var_is_introduced ;
var {0,1}: aux316_INTEGER :: var_is_introduced ;
var bool: aux317_BOOL:: var_is_introduced ;
var {0,1}: aux317_INTEGER :: var_is_introduced ;
var bool: aux318_BOOL:: var_is_introduced ;
var {0,1}: aux318_INTEGER :: var_is_introduced ;
var bool: aux319_BOOL:: var_is_introduced ;
var {0,1}: aux319_INTEGER :: var_is_introduced ;
var bool: aux320_BOOL:: var_is_introduced ;
var bool: aux321_BOOL:: var_is_introduced ;
var bool: aux322_BOOL:: var_is_introduced ;
var bool: aux323_BOOL:: var_is_introduced ;
var bool: aux324_BOOL:: var_is_introduced ;
var bool: aux325_BOOL:: var_is_introduced ;
var bool: aux326_BOOL:: var_is_introduced ;
var bool: aux327_BOOL:: var_is_introduced ;
var bool: aux328_BOOL:: var_is_introduced ;
var bool: aux329_BOOL:: var_is_introduced ;
var bool: aux330_BOOL:: var_is_introduced ;
var bool: aux331_BOOL:: var_is_introduced ;
var bool: aux332_BOOL:: var_is_introduced ;
var bool: aux333_BOOL:: var_is_introduced ;
var bool: aux334_BOOL:: var_is_introduced ;
var bool: aux335_BOOL:: var_is_introduced ;
var bool: aux336_BOOL:: var_is_introduced ;
var bool: aux337_BOOL:: var_is_introduced ;
var bool: aux338_BOOL:: var_is_introduced ;
var bool: aux339_BOOL:: var_is_introduced ;
var bool: aux340_BOOL:: var_is_introduced ;
var bool: aux341_BOOL:: var_is_introduced ;
var bool: aux342_BOOL:: var_is_introduced ;
var bool: aux343_BOOL:: var_is_introduced ;
var bool: aux344_BOOL:: var_is_introduced ;
var bool: aux345_BOOL:: var_is_introduced ;
var bool: aux346_BOOL:: var_is_introduced ;
var bool: aux347_BOOL:: var_is_introduced ;
var bool: aux348_BOOL:: var_is_introduced ;
var bool: aux349_BOOL:: var_is_introduced ;
var bool: aux350_BOOL:: var_is_introduced ;
var bool: aux351_BOOL:: var_is_introduced ;
var bool: aux352_BOOL:: var_is_introduced ;
var bool: aux353_BOOL:: var_is_introduced ;
var bool: aux354_BOOL:: var_is_introduced ;
var bool: aux355_BOOL:: var_is_introduced ;
var bool: aux356_BOOL:: var_is_introduced ;
var bool: aux357_BOOL:: var_is_introduced ;
var bool: aux358_BOOL:: var_is_introduced ;
var bool: aux359_BOOL:: var_is_introduced ;
var bool: aux360_BOOL:: var_is_introduced ;
var bool: aux361_BOOL:: var_is_introduced ;
var bool: aux362_BOOL:: var_is_introduced ;
var bool: aux363_BOOL:: var_is_introduced ;
var bool: aux364_BOOL:: var_is_introduced ;
var bool: aux365_BOOL:: var_is_introduced ;
var bool: aux366_BOOL:: var_is_introduced ;
var bool: aux367_BOOL:: var_is_introduced ;
var bool: aux368_BOOL:: var_is_introduced ;
var bool: aux369_BOOL:: var_is_introduced ;
var bool: aux370_BOOL:: var_is_introduced ;
var bool: aux371_BOOL:: var_is_introduced ;
var bool: aux372_BOOL:: var_is_introduced ;
var bool: aux373_BOOL:: var_is_introduced ;
var bool: aux374_BOOL:: var_is_introduced ;
var bool: aux375_BOOL:: var_is_introduced ;
var bool: aux376_BOOL:: var_is_introduced ;
var bool: aux377_BOOL:: var_is_introduced ;
var bool: aux378_BOOL:: var_is_introduced ;
var bool: aux379_BOOL:: var_is_introduced ;
var bool: aux380_BOOL:: var_is_introduced ;
var bool: aux381_BOOL:: var_is_introduced ;
var bool: aux382_BOOL:: var_is_introduced ;
var bool: aux383_BOOL:: var_is_introduced ;
var bool: aux384_BOOL:: var_is_introduced ;
var bool: aux385_BOOL:: var_is_introduced ;
var bool: aux386_BOOL:: var_is_introduced ;
var bool: aux387_BOOL:: var_is_introduced ;
var bool: aux388_BOOL:: var_is_introduced ;
var bool: aux389_BOOL:: var_is_introduced ;
var bool: aux390_BOOL:: var_is_introduced ;
var bool: aux391_BOOL:: var_is_introduced ;
var bool: aux392_BOOL:: var_is_introduced ;
var bool: aux393_BOOL:: var_is_introduced ;
var bool: aux394_BOOL:: var_is_introduced ;
var bool: aux395_BOOL:: var_is_introduced ;
var bool: aux396_BOOL:: var_is_introduced ;
var bool: aux397_BOOL:: var_is_introduced ;
var bool: aux398_BOOL:: var_is_introduced ;
var bool: aux399_BOOL:: var_is_introduced ;
var bool: aux400_BOOL:: var_is_introduced ;
var bool: aux401_BOOL:: var_is_introduced ;
var bool: aux402_BOOL:: var_is_introduced ;
var bool: aux403_BOOL:: var_is_introduced ;
var bool: aux404_BOOL:: var_is_introduced ;
var bool: aux405_BOOL:: var_is_introduced ;
var bool: aux406_BOOL:: var_is_introduced ;
var bool: aux407_BOOL:: var_is_introduced ;
var bool: aux408_BOOL:: var_is_introduced ;
var bool: aux409_BOOL:: var_is_introduced ;
var bool: aux410_BOOL:: var_is_introduced ;
var bool: aux411_BOOL:: var_is_introduced ;
var bool: aux412_BOOL:: var_is_introduced ;
var bool: aux413_BOOL:: var_is_introduced ;
var bool: aux414_BOOL:: var_is_introduced ;
var bool: aux415_BOOL:: var_is_introduced ;
var bool: aux416_BOOL:: var_is_introduced ;
var bool: aux417_BOOL:: var_is_introduced ;
var bool: aux418_BOOL:: var_is_introduced ;
var bool: aux419_BOOL:: var_is_introduced ;
var bool: aux420_BOOL:: var_is_introduced ;
var bool: aux421_BOOL:: var_is_introduced ;
var bool: aux422_BOOL:: var_is_introduced ;
var bool: aux423_BOOL:: var_is_introduced ;
var bool: aux424_BOOL:: var_is_introduced ;
var bool: aux425_BOOL:: var_is_introduced ;
var bool: aux426_BOOL:: var_is_introduced ;
var bool: aux427_BOOL:: var_is_introduced ;
var bool: aux428_BOOL:: var_is_introduced ;
var bool: aux429_BOOL:: var_is_introduced ;
var bool: aux430_BOOL:: var_is_introduced ;
var bool: aux431_BOOL:: var_is_introduced ;
var bool: aux432_BOOL:: var_is_introduced ;
var bool: aux433_BOOL:: var_is_introduced ;
var bool: aux434_BOOL:: var_is_introduced ;
var bool: aux435_BOOL:: var_is_introduced ;
var bool: aux436_BOOL:: var_is_introduced ;
var bool: aux437_BOOL:: var_is_introduced ;
var bool: aux438_BOOL:: var_is_introduced ;
var bool: aux439_BOOL:: var_is_introduced ;
var bool: aux440_BOOL:: var_is_introduced ;
var bool: aux441_BOOL:: var_is_introduced ;
var bool: aux442_BOOL:: var_is_introduced ;
var bool: aux443_BOOL:: var_is_introduced ;
var bool: aux444_BOOL:: var_is_introduced ;
var bool: aux445_BOOL:: var_is_introduced ;
var bool: aux446_BOOL:: var_is_introduced ;
var bool: aux447_BOOL:: var_is_introduced ;
var bool: aux448_BOOL:: var_is_introduced ;
var bool: aux449_BOOL:: var_is_introduced ;
var bool: aux450_BOOL:: var_is_introduced ;
var bool: aux451_BOOL:: var_is_introduced ;
var bool: aux452_BOOL:: var_is_introduced ;
var bool: aux453_BOOL:: var_is_introduced ;
var bool: aux454_BOOL:: var_is_introduced ;
var bool: aux455_BOOL:: var_is_introduced ;
var bool: aux456_BOOL:: var_is_introduced ;
var bool: aux457_BOOL:: var_is_introduced ;
var bool: aux458_BOOL:: var_is_introduced ;
var bool: aux459_BOOL:: var_is_introduced ;
var bool: aux460_BOOL:: var_is_introduced ;
var bool: aux461_BOOL:: var_is_introduced ;
var bool: aux462_BOOL:: var_is_introduced ;
var bool: aux463_BOOL:: var_is_introduced ;
var bool: aux464_BOOL:: var_is_introduced ;
var bool: aux465_BOOL:: var_is_introduced ;
var bool: aux466_BOOL:: var_is_introduced ;
var bool: aux467_BOOL:: var_is_introduced ;
var bool: aux468_BOOL:: var_is_introduced ;
var bool: aux469_BOOL:: var_is_introduced ;
var bool: aux470_BOOL:: var_is_introduced ;
var bool: aux471_BOOL:: var_is_introduced ;
var bool: aux472_BOOL:: var_is_introduced ;
var bool: aux473_BOOL:: var_is_introduced ;
var bool: aux474_BOOL:: var_is_introduced ;
var bool: aux475_BOOL:: var_is_introduced ;
var bool: aux476_BOOL:: var_is_introduced ;
var bool: aux477_BOOL:: var_is_introduced ;
var bool: aux478_BOOL:: var_is_introduced ;
var bool: aux479_BOOL:: var_is_introduced ;
var bool: aux480_BOOL:: var_is_introduced ;
var bool: aux481_BOOL:: var_is_introduced ;
var bool: aux482_BOOL:: var_is_introduced ;
var bool: aux483_BOOL:: var_is_introduced ;
var bool: aux484_BOOL:: var_is_introduced ;
var bool: aux485_BOOL:: var_is_introduced ;
var bool: aux486_BOOL:: var_is_introduced ;
var bool: aux487_BOOL:: var_is_introduced ;
var bool: aux488_BOOL:: var_is_introduced ;
var bool: aux489_BOOL:: var_is_introduced ;
var bool: aux490_BOOL:: var_is_introduced ;
var bool: aux491_BOOL:: var_is_introduced ;
var bool: aux492_BOOL:: var_is_introduced ;
var bool: aux493_BOOL:: var_is_introduced ;
var bool: aux494_BOOL:: var_is_introduced ;
var bool: aux495_BOOL:: var_is_introduced ;
var bool: aux496_BOOL:: var_is_introduced ;
var bool: aux497_BOOL:: var_is_introduced ;
var bool: aux498_BOOL:: var_is_introduced ;
var bool: aux499_BOOL:: var_is_introduced ;
var bool: aux500_BOOL:: var_is_introduced ;
var bool: aux501_BOOL:: var_is_introduced ;
var bool: aux502_BOOL:: var_is_introduced ;
var bool: aux503_BOOL:: var_is_introduced ;
var bool: aux504_BOOL:: var_is_introduced ;
var bool: aux505_BOOL:: var_is_introduced ;
var bool: aux506_BOOL:: var_is_introduced ;
var bool: aux507_BOOL:: var_is_introduced ;
var bool: aux508_BOOL:: var_is_introduced ;
var bool: aux509_BOOL:: var_is_introduced ;
var bool: aux510_BOOL:: var_is_introduced ;
var bool: aux511_BOOL:: var_is_introduced ;
var bool: aux512_BOOL:: var_is_introduced ;
var bool: aux513_BOOL:: var_is_introduced ;
var bool: aux514_BOOL:: var_is_introduced ;
var bool: aux515_BOOL:: var_is_introduced ;
var bool: aux516_BOOL:: var_is_introduced ;
var bool: aux517_BOOL:: var_is_introduced ;
var bool: aux518_BOOL:: var_is_introduced ;
var bool: aux519_BOOL:: var_is_introduced ;
constraint bool2int(aux20_BOOL,aux20_INTEGER);
constraint bool2int(aux21_BOOL,aux21_INTEGER);
constraint bool2int(aux22_BOOL,aux22_INTEGER);
constraint bool2int(aux23_BOOL,aux23_INTEGER);
constraint bool2int(aux24_BOOL,aux24_INTEGER);
constraint bool2int(aux25_BOOL,aux25_INTEGER);
constraint bool2int(aux26_BOOL,aux26_INTEGER);
constraint bool2int(aux27_BOOL,aux27_INTEGER);
constraint bool2int(aux28_BOOL,aux28_INTEGER);
constraint bool2int(aux29_BOOL,aux29_INTEGER);
constraint bool2int(aux30_BOOL,aux30_INTEGER);
constraint bool2int(aux31_BOOL,aux31_INTEGER);
constraint bool2int(aux32_BOOL,aux32_INTEGER);
constraint bool2int(aux33_BOOL,aux33_INTEGER);
constraint bool2int(aux34_BOOL,aux34_INTEGER);
constraint bool2int(aux35_BOOL,aux35_INTEGER);
constraint bool2int(aux36_BOOL,aux36_INTEGER);
constraint bool2int(aux37_BOOL,aux37_INTEGER);
constraint bool2int(aux38_BOOL,aux38_INTEGER);
constraint bool2int(aux39_BOOL,aux39_INTEGER);
constraint bool2int(aux40_BOOL,aux40_INTEGER);
constraint bool2int(aux41_BOOL,aux41_INTEGER);
constraint bool2int(aux42_BOOL,aux42_INTEGER);
constraint bool2int(aux43_BOOL,aux43_INTEGER);
constraint bool2int(aux44_BOOL,aux44_INTEGER);
constraint bool2int(aux45_BOOL,aux45_INTEGER);
constraint bool2int(aux46_BOOL,aux46_INTEGER);
constraint bool2int(aux47_BOOL,aux47_INTEGER);
constraint bool2int(aux48_BOOL,aux48_INTEGER);
constraint bool2int(aux49_BOOL,aux49_INTEGER);
constraint bool2int(aux50_BOOL,aux50_INTEGER);
constraint bool2int(aux51_BOOL,aux51_INTEGER);
constraint bool2int(aux52_BOOL,aux52_INTEGER);
constraint bool2int(aux53_BOOL,aux53_INTEGER);
constraint bool2int(aux54_BOOL,aux54_INTEGER);
constraint bool2int(aux55_BOOL,aux55_INTEGER);
constraint bool2int(aux56_BOOL,aux56_INTEGER);
constraint bool2int(aux57_BOOL,aux57_INTEGER);
constraint bool2int(aux58_BOOL,aux58_INTEGER);
constraint bool2int(aux59_BOOL,aux59_INTEGER);
constraint bool2int(aux60_BOOL,aux60_INTEGER);
constraint bool2int(aux61_BOOL,aux61_INTEGER);
constraint bool2int(aux62_BOOL,aux62_INTEGER);
constraint bool2int(aux63_BOOL,aux63_INTEGER);
constraint bool2int(aux64_BOOL,aux64_INTEGER);
constraint bool2int(aux65_BOOL,aux65_INTEGER);
constraint bool2int(aux66_BOOL,aux66_INTEGER);
constraint bool2int(aux67_BOOL,aux67_INTEGER);
constraint bool2int(aux68_BOOL,aux68_INTEGER);
constraint bool2int(aux69_BOOL,aux69_INTEGER);
constraint bool2int(aux70_BOOL,aux70_INTEGER);
constraint bool2int(aux71_BOOL,aux71_INTEGER);
constraint bool2int(aux72_BOOL,aux72_INTEGER);
constraint bool2int(aux73_BOOL,aux73_INTEGER);
constraint bool2int(aux74_BOOL,aux74_INTEGER);
constraint bool2int(aux75_BOOL,aux75_INTEGER);
constraint bool2int(aux76_BOOL,aux76_INTEGER);
constraint bool2int(aux77_BOOL,aux77_INTEGER);
constraint bool2int(aux78_BOOL,aux78_INTEGER);
constraint bool2int(aux79_BOOL,aux79_INTEGER);
constraint bool2int(aux80_BOOL,aux80_INTEGER);
constraint bool2int(aux81_BOOL,aux81_INTEGER);
constraint bool2int(aux82_BOOL,aux82_INTEGER);
constraint bool2int(aux83_BOOL,aux83_INTEGER);
constraint bool2int(aux84_BOOL,aux84_INTEGER);
constraint bool2int(aux85_BOOL,aux85_INTEGER);
constraint bool2int(aux86_BOOL,aux86_INTEGER);
constraint bool2int(aux87_BOOL,aux87_INTEGER);
constraint bool2int(aux88_BOOL,aux88_INTEGER);
constraint bool2int(aux89_BOOL,aux89_INTEGER);
constraint bool2int(aux90_BOOL,aux90_INTEGER);
constraint bool2int(aux91_BOOL,aux91_INTEGER);
constraint bool2int(aux92_BOOL,aux92_INTEGER);
constraint bool2int(aux93_BOOL,aux93_INTEGER);
constraint bool2int(aux94_BOOL,aux94_INTEGER);
constraint bool2int(aux95_BOOL,aux95_INTEGER);
constraint bool2int(aux96_BOOL,aux96_INTEGER);
constraint bool2int(aux97_BOOL,aux97_INTEGER);
constraint bool2int(aux98_BOOL,aux98_INTEGER);
constraint bool2int(aux99_BOOL,aux99_INTEGER);
constraint bool2int(aux100_BOOL,aux100_INTEGER);
constraint bool2int(aux101_BOOL,aux101_INTEGER);
constraint bool2int(aux102_BOOL,aux102_INTEGER);
constraint bool2int(aux103_BOOL,aux103_INTEGER);
constraint bool2int(aux104_BOOL,aux104_INTEGER);
constraint bool2int(aux105_BOOL,aux105_INTEGER);
constraint bool2int(aux106_BOOL,aux106_INTEGER);
constraint bool2int(aux107_BOOL,aux107_INTEGER);
constraint bool2int(aux108_BOOL,aux108_INTEGER);
constraint bool2int(aux109_BOOL,aux109_INTEGER);
constraint bool2int(aux110_BOOL,aux110_INTEGER);
constraint bool2int(aux111_BOOL,aux111_INTEGER);
constraint bool2int(aux112_BOOL,aux112_INTEGER);
constraint bool2int(aux113_BOOL,aux113_INTEGER);
constraint bool2int(aux114_BOOL,aux114_INTEGER);
constraint bool2int(aux115_BOOL,aux115_INTEGER);
constraint bool2int(aux116_BOOL,aux116_INTEGER);
constraint bool2int(aux117_BOOL,aux117_INTEGER);
constraint bool2int(aux118_BOOL,aux118_INTEGER);
constraint bool2int(aux119_BOOL,aux119_INTEGER);
constraint bool2int(aux120_BOOL,aux120_INTEGER);
constraint bool2int(aux121_BOOL,aux121_INTEGER);
constraint bool2int(aux122_BOOL,aux122_INTEGER);
constraint bool2int(aux123_BOOL,aux123_INTEGER);
constraint bool2int(aux124_BOOL,aux124_INTEGER);
constraint bool2int(aux125_BOOL,aux125_INTEGER);
constraint bool2int(aux126_BOOL,aux126_INTEGER);
constraint bool2int(aux127_BOOL,aux127_INTEGER);
constraint bool2int(aux128_BOOL,aux128_INTEGER);
constraint bool2int(aux129_BOOL,aux129_INTEGER);
constraint bool2int(aux130_BOOL,aux130_INTEGER);
constraint bool2int(aux131_BOOL,aux131_INTEGER);
constraint bool2int(aux132_BOOL,aux132_INTEGER);
constraint bool2int(aux133_BOOL,aux133_INTEGER);
constraint bool2int(aux134_BOOL,aux134_INTEGER);
constraint bool2int(aux135_BOOL,aux135_INTEGER);
constraint bool2int(aux136_BOOL,aux136_INTEGER);
constraint bool2int(aux137_BOOL,aux137_INTEGER);
constraint bool2int(aux138_BOOL,aux138_INTEGER);
constraint bool2int(aux139_BOOL,aux139_INTEGER);
constraint bool2int(aux140_BOOL,aux140_INTEGER);
constraint bool2int(aux141_BOOL,aux141_INTEGER);
constraint bool2int(aux142_BOOL,aux142_INTEGER);
constraint bool2int(aux143_BOOL,aux143_INTEGER);
constraint bool2int(aux144_BOOL,aux144_INTEGER);
constraint bool2int(aux145_BOOL,aux145_INTEGER);
constraint bool2int(aux146_BOOL,aux146_INTEGER);
constraint bool2int(aux147_BOOL,aux147_INTEGER);
constraint bool2int(aux148_BOOL,aux148_INTEGER);
constraint bool2int(aux149_BOOL,aux149_INTEGER);
constraint bool2int(aux150_BOOL,aux150_INTEGER);
constraint bool2int(aux151_BOOL,aux151_INTEGER);
constraint bool2int(aux152_BOOL,aux152_INTEGER);
constraint bool2int(aux153_BOOL,aux153_INTEGER);
constraint bool2int(aux154_BOOL,aux154_INTEGER);
constraint bool2int(aux155_BOOL,aux155_INTEGER);
constraint bool2int(aux156_BOOL,aux156_INTEGER);
constraint bool2int(aux157_BOOL,aux157_INTEGER);
constraint bool2int(aux158_BOOL,aux158_INTEGER);
constraint bool2int(aux159_BOOL,aux159_INTEGER);
constraint bool2int(aux160_BOOL,aux160_INTEGER);
constraint bool2int(aux161_BOOL,aux161_INTEGER);
constraint bool2int(aux162_BOOL,aux162_INTEGER);
constraint bool2int(aux163_BOOL,aux163_INTEGER);
constraint bool2int(aux164_BOOL,aux164_INTEGER);
constraint bool2int(aux165_BOOL,aux165_INTEGER);
constraint bool2int(aux166_BOOL,aux166_INTEGER);
constraint bool2int(aux167_BOOL,aux167_INTEGER);
constraint bool2int(aux168_BOOL,aux168_INTEGER);
constraint bool2int(aux169_BOOL,aux169_INTEGER);
constraint bool2int(aux170_BOOL,aux170_INTEGER);
constraint bool2int(aux171_BOOL,aux171_INTEGER);
constraint bool2int(aux172_BOOL,aux172_INTEGER);
constraint bool2int(aux173_BOOL,aux173_INTEGER);
constraint bool2int(aux174_BOOL,aux174_INTEGER);
constraint bool2int(aux175_BOOL,aux175_INTEGER);
constraint bool2int(aux176_BOOL,aux176_INTEGER);
constraint bool2int(aux177_BOOL,aux177_INTEGER);
constraint bool2int(aux178_BOOL,aux178_INTEGER);
constraint bool2int(aux179_BOOL,aux179_INTEGER);
constraint bool2int(aux180_BOOL,aux180_INTEGER);
constraint bool2int(aux181_BOOL,aux181_INTEGER);
constraint bool2int(aux182_BOOL,aux182_INTEGER);
constraint bool2int(aux183_BOOL,aux183_INTEGER);
constraint bool2int(aux184_BOOL,aux184_INTEGER);
constraint bool2int(aux185_BOOL,aux185_INTEGER);
constraint bool2int(aux186_BOOL,aux186_INTEGER);
constraint bool2int(aux187_BOOL,aux187_INTEGER);
constraint bool2int(aux188_BOOL,aux188_INTEGER);
constraint bool2int(aux189_BOOL,aux189_INTEGER);
constraint bool2int(aux190_BOOL,aux190_INTEGER);
constraint bool2int(aux191_BOOL,aux191_INTEGER);
constraint bool2int(aux192_BOOL,aux192_INTEGER);
constraint bool2int(aux193_BOOL,aux193_INTEGER);
constraint bool2int(aux194_BOOL,aux194_INTEGER);
constraint bool2int(aux195_BOOL,aux195_INTEGER);
constraint bool2int(aux196_BOOL,aux196_INTEGER);
constraint bool2int(aux197_BOOL,aux197_INTEGER);
constraint bool2int(aux198_BOOL,aux198_INTEGER);
constraint bool2int(aux199_BOOL,aux199_INTEGER);
constraint bool2int(aux200_BOOL,aux200_INTEGER);
constraint bool2int(aux201_BOOL,aux201_INTEGER);
constraint bool2int(aux202_BOOL,aux202_INTEGER);
constraint bool2int(aux203_BOOL,aux203_INTEGER);
constraint bool2int(aux204_BOOL,aux204_INTEGER);
constraint bool2int(aux205_BOOL,aux205_INTEGER);
constraint bool2int(aux206_BOOL,aux206_INTEGER);
constraint bool2int(aux207_BOOL,aux207_INTEGER);
constraint bool2int(aux208_BOOL,aux208_INTEGER);
constraint bool2int(aux209_BOOL,aux209_INTEGER);
constraint bool2int(aux210_BOOL,aux210_INTEGER);
constraint bool2int(aux211_BOOL,aux211_INTEGER);
constraint bool2int(aux212_BOOL,aux212_INTEGER);
constraint bool2int(aux213_BOOL,aux213_INTEGER);
constraint bool2int(aux214_BOOL,aux214_INTEGER);
constraint bool2int(aux215_BOOL,aux215_INTEGER);
constraint bool2int(aux216_BOOL,aux216_INTEGER);
constraint bool2int(aux217_BOOL,aux217_INTEGER);
constraint bool2int(aux218_BOOL,aux218_INTEGER);
constraint bool2int(aux219_BOOL,aux219_INTEGER);
constraint bool2int(aux220_BOOL,aux220_INTEGER);
constraint bool2int(aux221_BOOL,aux221_INTEGER);
constraint bool2int(aux222_BOOL,aux222_INTEGER);
constraint bool2int(aux223_BOOL,aux223_INTEGER);
constraint bool2int(aux224_BOOL,aux224_INTEGER);
constraint bool2int(aux225_BOOL,aux225_INTEGER);
constraint bool2int(aux226_BOOL,aux226_INTEGER);
constraint bool2int(aux227_BOOL,aux227_INTEGER);
constraint bool2int(aux228_BOOL,aux228_INTEGER);
constraint bool2int(aux229_BOOL,aux229_INTEGER);
constraint bool2int(aux230_BOOL,aux230_INTEGER);
constraint bool2int(aux231_BOOL,aux231_INTEGER);
constraint bool2int(aux232_BOOL,aux232_INTEGER);
constraint bool2int(aux233_BOOL,aux233_INTEGER);
constraint bool2int(aux234_BOOL,aux234_INTEGER);
constraint bool2int(aux235_BOOL,aux235_INTEGER);
constraint bool2int(aux236_BOOL,aux236_INTEGER);
constraint bool2int(aux237_BOOL,aux237_INTEGER);
constraint bool2int(aux238_BOOL,aux238_INTEGER);
constraint bool2int(aux239_BOOL,aux239_INTEGER);
constraint bool2int(aux240_BOOL,aux240_INTEGER);
constraint bool2int(aux241_BOOL,aux241_INTEGER);
constraint bool2int(aux242_BOOL,aux242_INTEGER);
constraint bool2int(aux243_BOOL,aux243_INTEGER);
constraint bool2int(aux244_BOOL,aux244_INTEGER);
constraint bool2int(aux245_BOOL,aux245_INTEGER);
constraint bool2int(aux246_BOOL,aux246_INTEGER);
constraint bool2int(aux247_BOOL,aux247_INTEGER);
constraint bool2int(aux248_BOOL,aux248_INTEGER);
constraint bool2int(aux249_BOOL,aux249_INTEGER);
constraint bool2int(aux250_BOOL,aux250_INTEGER);
constraint bool2int(aux251_BOOL,aux251_INTEGER);
constraint bool2int(aux252_BOOL,aux252_INTEGER);
constraint bool2int(aux253_BOOL,aux253_INTEGER);
constraint bool2int(aux254_BOOL,aux254_INTEGER);
constraint bool2int(aux255_BOOL,aux255_INTEGER);
constraint bool2int(aux256_BOOL,aux256_INTEGER);
constraint bool2int(aux257_BOOL,aux257_INTEGER);
constraint bool2int(aux258_BOOL,aux258_INTEGER);
constraint bool2int(aux259_BOOL,aux259_INTEGER);
constraint bool2int(aux260_BOOL,aux260_INTEGER);
constraint bool2int(aux261_BOOL,aux261_INTEGER);
constraint bool2int(aux262_BOOL,aux262_INTEGER);
constraint bool2int(aux263_BOOL,aux263_INTEGER);
constraint bool2int(aux264_BOOL,aux264_INTEGER);
constraint bool2int(aux265_BOOL,aux265_INTEGER);
constraint bool2int(aux266_BOOL,aux266_INTEGER);
constraint bool2int(aux267_BOOL,aux267_INTEGER);
constraint bool2int(aux268_BOOL,aux268_INTEGER);
constraint bool2int(aux269_BOOL,aux269_INTEGER);
constraint bool2int(aux270_BOOL,aux270_INTEGER);
constraint bool2int(aux271_BOOL,aux271_INTEGER);
constraint bool2int(aux272_BOOL,aux272_INTEGER);
constraint bool2int(aux273_BOOL,aux273_INTEGER);
constraint bool2int(aux274_BOOL,aux274_INTEGER);
constraint bool2int(aux275_BOOL,aux275_INTEGER);
constraint bool2int(aux276_BOOL,aux276_INTEGER);
constraint bool2int(aux277_BOOL,aux277_INTEGER);
constraint bool2int(aux278_BOOL,aux278_INTEGER);
constraint bool2int(aux279_BOOL,aux279_INTEGER);
constraint bool2int(aux280_BOOL,aux280_INTEGER);
constraint bool2int(aux281_BOOL,aux281_INTEGER);
constraint bool2int(aux282_BOOL,aux282_INTEGER);
constraint bool2int(aux283_BOOL,aux283_INTEGER);
constraint bool2int(aux284_BOOL,aux284_INTEGER);
constraint bool2int(aux285_BOOL,aux285_INTEGER);
constraint bool2int(aux286_BOOL,aux286_INTEGER);
constraint bool2int(aux287_BOOL,aux287_INTEGER);
constraint bool2int(aux288_BOOL,aux288_INTEGER);
constraint bool2int(aux289_BOOL,aux289_INTEGER);
constraint bool2int(aux290_BOOL,aux290_INTEGER);
constraint bool2int(aux291_BOOL,aux291_INTEGER);
constraint bool2int(aux292_BOOL,aux292_INTEGER);
constraint bool2int(aux293_BOOL,aux293_INTEGER);
constraint bool2int(aux294_BOOL,aux294_INTEGER);
constraint bool2int(aux295_BOOL,aux295_INTEGER);
constraint bool2int(aux296_BOOL,aux296_INTEGER);
constraint bool2int(aux297_BOOL,aux297_INTEGER);
constraint bool2int(aux298_BOOL,aux298_INTEGER);
constraint bool2int(aux299_BOOL,aux299_INTEGER);
constraint bool2int(aux300_BOOL,aux300_INTEGER);
constraint bool2int(aux301_BOOL,aux301_INTEGER);
constraint bool2int(aux302_BOOL,aux302_INTEGER);
constraint bool2int(aux303_BOOL,aux303_INTEGER);
constraint bool2int(aux304_BOOL,aux304_INTEGER);
constraint bool2int(aux305_BOOL,aux305_INTEGER);
constraint bool2int(aux306_BOOL,aux306_INTEGER);
constraint bool2int(aux307_BOOL,aux307_INTEGER);
constraint bool2int(aux308_BOOL,aux308_INTEGER);
constraint bool2int(aux309_BOOL,aux309_INTEGER);
constraint bool2int(aux310_BOOL,aux310_INTEGER);
constraint bool2int(aux311_BOOL,aux311_INTEGER);
constraint bool2int(aux312_BOOL,aux312_INTEGER);
constraint bool2int(aux313_BOOL,aux313_INTEGER);
constraint bool2int(aux314_BOOL,aux314_INTEGER);
constraint bool2int(aux315_BOOL,aux315_INTEGER);
constraint bool2int(aux316_BOOL,aux316_INTEGER);
constraint bool2int(aux317_BOOL,aux317_INTEGER);
constraint bool2int(aux318_BOOL,aux318_INTEGER);
constraint bool2int(aux319_BOOL,aux319_INTEGER);
constraint bool_eq_reif(aux108_BOOL,false,aux120_BOOL);
constraint bool_eq_reif(aux26_BOOL,false,aux121_BOOL);
constraint bool_eq_reif(aux27_BOOL,false,aux122_BOOL);
constraint bool_eq_reif(aux62_BOOL,false,aux123_BOOL);
constraint bool_eq_reif(aux69_BOOL,false,aux124_BOOL);
constraint bool_eq_reif(aux72_BOOL,false,aux125_BOOL);
constraint bool_eq_reif(aux81_BOOL,false,aux126_BOOL);
constraint bool_eq_reif(aux85_BOOL,false,aux127_BOOL);
constraint bool_eq_reif(aux91_BOOL,false,aux128_BOOL);
constraint bool_eq_reif(aux96_BOOL,false,aux129_BOOL);
constraint bool_eq_reif(aux108_BOOL,false,aux130_BOOL);
constraint bool_eq_reif(aux116_BOOL,false,aux131_BOOL);
constraint bool_eq_reif(aux28_BOOL,false,aux132_BOOL);
constraint bool_eq_reif(aux34_BOOL,false,aux133_BOOL);
constraint bool_eq_reif(aux38_BOOL,false,aux134_BOOL);
constraint bool_eq_reif(aux40_BOOL,false,aux135_BOOL);
constraint bool_eq_reif(aux48_BOOL,false,aux136_BOOL);
constraint bool_eq_reif(aux67_BOOL,false,aux137_BOOL);
constraint bool_eq_reif(aux68_BOOL,false,aux138_BOOL);
constraint bool_eq_reif(aux70_BOOL,false,aux139_BOOL);
constraint bool_eq_reif(aux103_BOOL,false,aux140_BOOL);
constraint bool_eq_reif(aux107_BOOL,false,aux141_BOOL);
constraint bool_eq_reif(aux109_BOOL,false,aux142_BOOL);
constraint bool_eq_reif(aux113_BOOL,false,aux143_BOOL);
constraint bool_eq_reif(aux115_BOOL,false,aux144_BOOL);
constraint bool_eq_reif(aux35_BOOL,false,aux145_BOOL);
constraint bool_eq_reif(aux40_BOOL,false,aux146_BOOL);
constraint bool_eq_reif(aux44_BOOL,false,aux147_BOOL);
constraint bool_eq_reif(aux50_BOOL,false,aux148_BOOL);
constraint bool_eq_reif(aux55_BOOL,false,aux149_BOOL);
constraint bool_eq_reif(aux101_BOOL,false,aux150_BOOL);
constraint bool_eq_reif(aux33_BOOL,false,aux151_BOOL);
constraint bool_eq_reif(aux34_BOOL,false,aux152_BOOL);
constraint bool_eq_reif(aux47_BOOL,false,aux153_BOOL);
constraint bool_eq_reif(aux51_BOOL,false,aux154_BOOL);
constraint bool_eq_reif(aux54_BOOL,false,aux155_BOOL);
constraint bool_eq_reif(aux73_BOOL,false,aux156_BOOL);
constraint bool_eq_reif(aux77_BOOL,false,aux157_BOOL);
constraint bool_eq_reif(aux97_BOOL,false,aux158_BOOL);
constraint bool_eq_reif(aux99_BOOL,false,aux159_BOOL);
constraint bool_eq_reif(aux100_BOOL,false,aux160_BOOL);
constraint bool_eq_reif(aux106_BOOL,false,aux161_BOOL);
constraint bool_eq_reif(aux109_BOOL,false,aux162_BOOL);
constraint bool_eq_reif(aux25_BOOL,false,aux163_BOOL);
constraint bool_eq_reif(aux85_BOOL,false,aux164_BOOL);
constraint bool_eq_reif(aux86_BOOL,false,aux165_BOOL);
constraint bool_eq_reif(aux87_BOOL,false,aux166_BOOL);
constraint bool_eq_reif(aux88_BOOL,false,aux167_BOOL);
constraint bool_eq_reif(aux89_BOOL,false,aux168_BOOL);
constraint bool_eq_reif(aux99_BOOL,false,aux169_BOOL);
constraint bool_eq_reif(aux103_BOOL,false,aux170_BOOL);
constraint bool_eq_reif(aux118_BOOL,false,aux171_BOOL);
constraint bool_eq_reif(aux24_BOOL,false,aux172_BOOL);
constraint bool_eq_reif(aux26_BOOL,false,aux173_BOOL);
constraint bool_eq_reif(aux29_BOOL,false,aux174_BOOL);
constraint bool_eq_reif(aux31_BOOL,false,aux175_BOOL);
constraint bool_eq_reif(aux32_BOOL,false,aux176_BOOL);
constraint bool_eq_reif(aux73_BOOL,false,aux177_BOOL);
constraint bool_eq_reif(aux78_BOOL,false,aux178_BOOL);
constraint bool_eq_reif(aux95_BOOL,false,aux179_BOOL);
constraint bool_eq_reif(aux101_BOOL,false,aux180_BOOL);
constraint bool_eq_reif(aux102_BOOL,false,aux181_BOOL);
constraint bool_eq_reif(aux107_BOOL,false,aux182_BOOL);
constraint bool_eq_reif(aux110_BOOL,false,aux183_BOOL);
constraint bool_eq_reif(aux23_BOOL,false,aux184_BOOL);
constraint bool_eq_reif(aux90_BOOL,false,aux185_BOOL);
constraint bool_eq_reif(aux91_BOOL,false,aux186_BOOL);
constraint bool_eq_reif(aux92_BOOL,false,aux187_BOOL);
constraint bool_eq_reif(aux93_BOOL,false,aux188_BOOL);
constraint bool_eq_reif(aux94_BOOL,false,aux189_BOOL);
constraint bool_eq_reif(aux104_BOOL,false,aux190_BOOL);
constraint bool_eq_reif(aux105_BOOL,false,aux191_BOOL);
constraint bool_eq_reif(aux106_BOOL,false,aux192_BOOL);
constraint bool_eq_reif(aux110_BOOL,false,aux193_BOOL);
constraint bool_eq_reif(aux118_BOOL,false,aux194_BOOL);
constraint bool_eq_reif(aux22_BOOL,false,aux195_BOOL);
constraint bool_eq_reif(aux28_BOOL,false,aux196_BOOL);
constraint bool_eq_reif(aux45_BOOL,false,aux197_BOOL);
constraint bool_eq_reif(aux52_BOOL,false,aux198_BOOL);
constraint bool_eq_reif(aux57_BOOL,false,aux199_BOOL);
constraint bool_eq_reif(aux117_BOOL,false,aux200_BOOL);
constraint bool_eq_reif(aux21_BOOL,false,aux201_BOOL);
constraint bool_eq_reif(aux23_BOOL,false,aux202_BOOL);
constraint bool_eq_reif(aux25_BOOL,false,aux203_BOOL);
constraint bool_eq_reif(aux37_BOOL,false,aux204_BOOL);
constraint bool_eq_reif(aux42_BOOL,false,aux205_BOOL);
constraint bool_eq_reif(aux43_BOOL,false,aux206_BOOL);
constraint bool_eq_reif(aux46_BOOL,false,aux207_BOOL);
constraint bool_eq_reif(aux48_BOOL,false,aux208_BOOL);
constraint bool_eq_reif(aux95_BOOL,false,aux209_BOOL);
constraint bool_eq_reif(aux105_BOOL,false,aux210_BOOL);
constraint bool_eq_reif(aux113_BOOL,false,aux211_BOOL);
constraint bool_eq_reif(aux21_BOOL,false,aux212_BOOL);
constraint bool_eq_reif(aux80_BOOL,false,aux213_BOOL);
constraint bool_eq_reif(aux81_BOOL,false,aux214_BOOL);
constraint bool_eq_reif(aux82_BOOL,false,aux215_BOOL);
constraint bool_eq_reif(aux83_BOOL,false,aux216_BOOL);
constraint bool_eq_reif(aux84_BOOL,false,aux217_BOOL);
constraint bool_eq_reif(aux97_BOOL,false,aux218_BOOL);
constraint bool_eq_reif(aux98_BOOL,false,aux219_BOOL);
constraint bool_eq_reif(aux112_BOOL,false,aux220_BOOL);
constraint bool_eq_reif(aux24_BOOL,false,aux221_BOOL);
constraint bool_eq_reif(aux36_BOOL,false,aux222_BOOL);
constraint bool_eq_reif(aux60_BOOL,false,aux223_BOOL);
constraint bool_eq_reif(aux66_BOOL,false,aux224_BOOL);
constraint bool_eq_reif(aux67_BOOL,false,aux225_BOOL);
constraint bool_eq_reif(aux75_BOOL,false,aux226_BOOL);
constraint bool_eq_reif(aux84_BOOL,false,aux227_BOOL);
constraint bool_eq_reif(aux89_BOOL,false,aux228_BOOL);
constraint bool_eq_reif(aux90_BOOL,false,aux229_BOOL);
constraint bool_eq_reif(aux104_BOOL,false,aux230_BOOL);
constraint bool_eq_reif(aux115_BOOL,false,aux231_BOOL);
constraint bool_eq_reif(aux117_BOOL,false,aux232_BOOL);
constraint bool_eq_reif(aux27_BOOL,false,aux233_BOOL);
constraint bool_eq_reif(aux30_BOOL,false,aux234_BOOL);
constraint bool_eq_reif(aux36_BOOL,false,aux235_BOOL);
constraint bool_eq_reif(aux39_BOOL,false,aux236_BOOL);
constraint bool_eq_reif(aux41_BOOL,false,aux237_BOOL);
constraint bool_eq_reif(aux74_BOOL,false,aux238_BOOL);
constraint bool_eq_reif(aux77_BOOL,false,aux239_BOOL);
constraint bool_eq_reif(aux114_BOOL,false,aux240_BOOL);
constraint bool_eq_reif(aux116_BOOL,false,aux241_BOOL);
constraint bool_eq_reif(aux31_BOOL,false,aux242_BOOL);
constraint bool_eq_reif(aux39_BOOL,false,aux243_BOOL);
constraint bool_eq_reif(aux61_BOOL,false,aux244_BOOL);
constraint bool_eq_reif(aux63_BOOL,false,aux245_BOOL);
constraint bool_eq_reif(aux76_BOOL,false,aux246_BOOL);
constraint bool_eq_reif(aux83_BOOL,false,aux247_BOOL);
constraint bool_eq_reif(aux87_BOOL,false,aux248_BOOL);
constraint bool_eq_reif(aux93_BOOL,false,aux249_BOOL);
constraint bool_eq_reif(aux111_BOOL,false,aux250_BOOL);
constraint bool_eq_reif(aux29_BOOL,false,aux251_BOOL);
constraint bool_eq_reif(aux30_BOOL,false,aux252_BOOL);
constraint bool_eq_reif(aux58_BOOL,false,aux253_BOOL);
constraint bool_eq_reif(aux64_BOOL,false,aux254_BOOL);
constraint bool_eq_reif(aux68_BOOL,false,aux255_BOOL);
constraint bool_eq_reif(aux79_BOOL,false,aux256_BOOL);
constraint bool_eq_reif(aux80_BOOL,false,aux257_BOOL);
constraint bool_eq_reif(aux86_BOOL,false,aux258_BOOL);
constraint bool_eq_reif(aux92_BOOL,false,aux259_BOOL);
constraint bool_eq_reif(aux43_BOOL,false,aux260_BOOL);
constraint bool_eq_reif(aux50_BOOL,false,aux261_BOOL);
constraint bool_eq_reif(aux51_BOOL,false,aux262_BOOL);
constraint bool_eq_reif(aux52_BOOL,false,aux263_BOOL);
constraint bool_eq_reif(aux53_BOOL,false,aux264_BOOL);
constraint bool_eq_reif(aux62_BOOL,false,aux265_BOOL);
constraint bool_eq_reif(aux63_BOOL,false,aux266_BOOL);
constraint bool_eq_reif(aux71_BOOL,false,aux267_BOOL);
constraint bool_eq_reif(aux75_BOOL,false,aux268_BOOL);
constraint bool_eq_reif(aux79_BOOL,false,aux269_BOOL);
constraint bool_eq_reif(aux119_BOOL,false,aux270_BOOL);
constraint bool_eq_reif(aux32_BOOL,false,aux271_BOOL);
constraint bool_eq_reif(aux41_BOOL,false,aux272_BOOL);
constraint bool_eq_reif(aux59_BOOL,false,aux273_BOOL);
constraint bool_eq_reif(aux65_BOOL,false,aux274_BOOL);
constraint bool_eq_reif(aux70_BOOL,false,aux275_BOOL);
constraint bool_eq_reif(aux71_BOOL,false,aux276_BOOL);
constraint bool_eq_reif(aux82_BOOL,false,aux277_BOOL);
constraint bool_eq_reif(aux88_BOOL,false,aux278_BOOL);
constraint bool_eq_reif(aux94_BOOL,false,aux279_BOOL);
constraint bool_eq_reif(aux114_BOOL,false,aux280_BOOL);
constraint bool_eq_reif(aux37_BOOL,false,aux281_BOOL);
constraint bool_eq_reif(aux44_BOOL,false,aux282_BOOL);
constraint bool_eq_reif(aux45_BOOL,false,aux283_BOOL);
constraint bool_eq_reif(aux47_BOOL,false,aux284_BOOL);
constraint bool_eq_reif(aux49_BOOL,false,aux285_BOOL);
constraint bool_eq_reif(aux58_BOOL,false,aux286_BOOL);
constraint bool_eq_reif(aux59_BOOL,false,aux287_BOOL);
constraint bool_eq_reif(aux60_BOOL,false,aux288_BOOL);
constraint bool_eq_reif(aux96_BOOL,false,aux289_BOOL);
constraint bool_eq_reif(aux111_BOOL,false,aux290_BOOL);
constraint bool_eq_reif(aux112_BOOL,false,aux291_BOOL);
constraint bool_eq_reif(aux119_BOOL,false,aux292_BOOL);
constraint bool_eq_reif(aux20_BOOL,false,aux293_BOOL);
constraint bool_eq_reif(aux22_BOOL,false,aux294_BOOL);
constraint bool_eq_reif(aux33_BOOL,false,aux295_BOOL);
constraint bool_eq_reif(aux35_BOOL,false,aux296_BOOL);
constraint bool_eq_reif(aux42_BOOL,false,aux297_BOOL);
constraint bool_eq_reif(aux61_BOOL,false,aux298_BOOL);
constraint bool_eq_reif(aux69_BOOL,false,aux299_BOOL);
constraint bool_eq_reif(aux100_BOOL,false,aux300_BOOL);
constraint bool_eq_reif(aux102_BOOL,false,aux301_BOOL);
constraint bool_eq_reif(aux20_BOOL,false,aux302_BOOL);
constraint bool_eq_reif(aux38_BOOL,false,aux303_BOOL);
constraint bool_eq_reif(aux49_BOOL,false,aux304_BOOL);
constraint bool_eq_reif(aux53_BOOL,false,aux305_BOOL);
constraint bool_eq_reif(aux56_BOOL,false,aux306_BOOL);
constraint bool_eq_reif(aux74_BOOL,false,aux307_BOOL);
constraint bool_eq_reif(aux78_BOOL,false,aux308_BOOL);
constraint bool_eq_reif(aux98_BOOL,false,aux309_BOOL);
constraint bool_eq_reif(aux46_BOOL,false,aux310_BOOL);
constraint bool_eq_reif(aux54_BOOL,false,aux311_BOOL);
constraint bool_eq_reif(aux55_BOOL,false,aux312_BOOL);
constraint bool_eq_reif(aux56_BOOL,false,aux313_BOOL);
constraint bool_eq_reif(aux57_BOOL,false,aux314_BOOL);
constraint bool_eq_reif(aux64_BOOL,false,aux315_BOOL);
constraint bool_eq_reif(aux65_BOOL,false,aux316_BOOL);
constraint bool_eq_reif(aux66_BOOL,false,aux317_BOOL);
constraint bool_eq_reif(aux72_BOOL,false,aux318_BOOL);
constraint bool_eq_reif(aux76_BOOL,false,aux319_BOOL);
constraint bool_eq_reif(aux89_BOOL,false,aux320_BOOL);
constraint int_eq_reif(1,instance_00001_00001_INTEGER,aux321_BOOL);
constraint bool_eq_reif(aux106_BOOL,false,aux322_BOOL);
constraint int_eq_reif(2,instance_00001_00002,aux323_BOOL);
constraint bool_eq_reif(aux87_BOOL,false,aux324_BOOL);
constraint int_eq_reif(3,instance_00001_00003,aux325_BOOL);
constraint bool_eq_reif(aux100_BOOL,false,aux326_BOOL);
constraint int_eq_reif(4,instance_00001_00004,aux327_BOOL);
constraint bool_eq_reif(aux88_BOOL,false,aux328_BOOL);
constraint int_eq_reif(5,instance_00001_00005,aux329_BOOL);
constraint bool_eq_reif(aux109_BOOL,false,aux330_BOOL);
constraint int_eq_reif(6,instance_00001_00006,aux331_BOOL);
constraint bool_eq_reif(aux85_BOOL,false,aux332_BOOL);
constraint int_eq_reif(7,instance_00001_00007,aux333_BOOL);
constraint bool_eq_reif(aux99_BOOL,false,aux334_BOOL);
constraint int_eq_reif(8,instance_00001_00008,aux335_BOOL);
constraint bool_eq_reif(aux86_BOOL,false,aux336_BOOL);
constraint int_eq_reif(9,instance_00001_00009,aux337_BOOL);
constraint bool_eq_reif(aux25_BOOL,false,aux338_BOOL);
constraint int_eq_reif(10,instance_00001_00010,aux339_BOOL);
constraint bool_eq_reif(aux112_BOOL,false,aux340_BOOL);
constraint int_eq_reif(instance_00002_00001,10,aux341_BOOL);
constraint bool_eq_reif(aux22_BOOL,false,aux342_BOOL);
constraint int_eq_reif(instance_00002_00002_INTEGER,1,aux343_BOOL);
constraint bool_eq_reif(aux61_BOOL,false,aux344_BOOL);
constraint int_eq_reif(instance_00002_00003,2,aux345_BOOL);
constraint bool_eq_reif(aux20_BOOL,false,aux346_BOOL);
constraint int_eq_reif(instance_00002_00004,3,aux347_BOOL);
constraint bool_eq_reif(aux119_BOOL,false,aux348_BOOL);
constraint int_eq_reif(instance_00002_00005,4,aux349_BOOL);
constraint bool_eq_reif(aux35_BOOL,false,aux350_BOOL);
constraint int_eq_reif(instance_00002_00006,5,aux351_BOOL);
constraint bool_eq_reif(aux69_BOOL,false,aux352_BOOL);
constraint int_eq_reif(instance_00002_00007,6,aux353_BOOL);
constraint bool_eq_reif(aux33_BOOL,false,aux354_BOOL);
constraint int_eq_reif(instance_00002_00008,7,aux355_BOOL);
constraint bool_eq_reif(aux111_BOOL,false,aux356_BOOL);
constraint int_eq_reif(instance_00002_00009,8,aux357_BOOL);
constraint bool_eq_reif(aux42_BOOL,false,aux358_BOOL);
constraint int_eq_reif(instance_00002_00010,9,aux359_BOOL);
constraint bool_eq_reif(aux36_BOOL,false,aux360_BOOL);
constraint int_eq_reif(instance_00003_00001,9,aux361_BOOL);
constraint bool_eq_reif(aux104_BOOL,false,aux362_BOOL);
constraint int_eq_reif(instance_00003_00002,10,aux363_BOOL);
constraint bool_eq_reif(aux39_BOOL,false,aux364_BOOL);
constraint int_eq_reif(instance_00003_00003_INTEGER,1,aux365_BOOL);
constraint bool_eq_reif(aux74_BOOL,false,aux366_BOOL);
constraint int_eq_reif(instance_00003_00004,2,aux367_BOOL);
constraint bool_eq_reif(aux41_BOOL,false,aux368_BOOL);
constraint int_eq_reif(instance_00003_00005,3,aux369_BOOL);
constraint bool_eq_reif(aux115_BOOL,false,aux370_BOOL);
constraint int_eq_reif(instance_00003_00006,4,aux371_BOOL);
constraint bool_eq_reif(aux27_BOOL,false,aux372_BOOL);
constraint int_eq_reif(instance_00003_00007,5,aux373_BOOL);
constraint bool_eq_reif(aux77_BOOL,false,aux374_BOOL);
constraint int_eq_reif(instance_00003_00008,6,aux375_BOOL);
constraint bool_eq_reif(aux30_BOOL,false,aux376_BOOL);
constraint int_eq_reif(instance_00003_00009,7,aux377_BOOL);
constraint bool_eq_reif(aux117_BOOL,false,aux378_BOOL);
constraint int_eq_reif(instance_00003_00010,8,aux379_BOOL);
constraint bool_eq_reif(aux66_BOOL,false,aux380_BOOL);
constraint int_eq_reif(8,instance_00004_00001,aux381_BOOL);
constraint bool_eq_reif(aux57_BOOL,false,aux382_BOOL);
constraint int_eq_reif(9,instance_00004_00002,aux383_BOOL);
constraint bool_eq_reif(aux76_BOOL,false,aux384_BOOL);
constraint int_eq_reif(10,instance_00004_00003,aux385_BOOL);
constraint bool_eq_reif(aux56_BOOL,false,aux386_BOOL);
constraint int_eq_reif(1,instance_00004_00004_INTEGER,aux387_BOOL);
constraint bool_eq_reif(aux65_BOOL,false,aux388_BOOL);
constraint int_eq_reif(2,instance_00004_00005,aux389_BOOL);
constraint bool_eq_reif(aux55_BOOL,false,aux390_BOOL);
constraint int_eq_reif(3,instance_00004_00006,aux391_BOOL);
constraint bool_eq_reif(aux72_BOOL,false,aux392_BOOL);
constraint int_eq_reif(4,instance_00004_00007,aux393_BOOL);
constraint bool_eq_reif(aux54_BOOL,false,aux394_BOOL);
constraint int_eq_reif(5,instance_00004_00008,aux395_BOOL);
constraint bool_eq_reif(aux64_BOOL,false,aux396_BOOL);
constraint int_eq_reif(6,instance_00004_00009,aux397_BOOL);
constraint bool_eq_reif(aux46_BOOL,false,aux398_BOOL);
constraint int_eq_reif(7,instance_00004_00010,aux399_BOOL);
constraint bool_eq_reif(aux90_BOOL,false,aux400_BOOL);
constraint int_eq_reif(7,instance_00005_00001,aux401_BOOL);
constraint bool_eq_reif(aux110_BOOL,false,aux402_BOOL);
constraint int_eq_reif(8,instance_00005_00002,aux403_BOOL);
constraint bool_eq_reif(aux93_BOOL,false,aux404_BOOL);
constraint int_eq_reif(9,instance_00005_00003,aux405_BOOL);
constraint bool_eq_reif(aux102_BOOL,false,aux406_BOOL);
constraint int_eq_reif(10,instance_00005_00004,aux407_BOOL);
constraint bool_eq_reif(aux94_BOOL,false,aux408_BOOL);
constraint int_eq_reif(1,instance_00005_00005_INTEGER,aux409_BOOL);
constraint bool_eq_reif(aux107_BOOL,false,aux410_BOOL);
constraint int_eq_reif(2,instance_00005_00006,aux411_BOOL);
constraint bool_eq_reif(aux91_BOOL,false,aux412_BOOL);
constraint int_eq_reif(3,instance_00005_00007,aux413_BOOL);
constraint bool_eq_reif(aux101_BOOL,false,aux414_BOOL);
constraint int_eq_reif(4,instance_00005_00008,aux415_BOOL);
constraint bool_eq_reif(aux92_BOOL,false,aux416_BOOL);
constraint int_eq_reif(5,instance_00005_00009,aux417_BOOL);
constraint bool_eq_reif(aux23_BOOL,false,aux418_BOOL);
constraint int_eq_reif(6,instance_00005_00010,aux419_BOOL);
constraint bool_eq_reif(aux75_BOOL,false,aux420_BOOL);
constraint int_eq_reif(6,instance_00006_00001,aux421_BOOL);
constraint bool_eq_reif(aux52_BOOL,false,aux422_BOOL);
constraint int_eq_reif(7,instance_00006_00002,aux423_BOOL);
constraint bool_eq_reif(aux63_BOOL,false,aux424_BOOL);
constraint int_eq_reif(8,instance_00006_00003,aux425_BOOL);
constraint bool_eq_reif(aux53_BOOL,false,aux426_BOOL);
constraint int_eq_reif(9,instance_00006_00004,aux427_BOOL);
constraint bool_eq_reif(aux71_BOOL,false,aux428_BOOL);
constraint int_eq_reif(10,instance_00006_00005,aux429_BOOL);
constraint bool_eq_reif(aux50_BOOL,false,aux430_BOOL);
constraint int_eq_reif(1,instance_00006_00006_INTEGER,aux431_BOOL);
constraint bool_eq_reif(aux62_BOOL,false,aux432_BOOL);
constraint int_eq_reif(2,instance_00006_00007,aux433_BOOL);
constraint bool_eq_reif(aux51_BOOL,false,aux434_BOOL);
constraint int_eq_reif(3,instance_00006_00008,aux435_BOOL);
constraint bool_eq_reif(aux79_BOOL,false,aux436_BOOL);
constraint int_eq_reif(4,instance_00006_00009,aux437_BOOL);
constraint bool_eq_reif(aux43_BOOL,false,aux438_BOOL);
constraint int_eq_reif(5,instance_00006_00010,aux439_BOOL);
constraint bool_eq_reif(aux24_BOOL,false,aux440_BOOL);
constraint int_eq_reif(instance_00007_00001,5,aux441_BOOL);
constraint bool_eq_reif(aux118_BOOL,false,aux442_BOOL);
constraint int_eq_reif(instance_00007_00002,6,aux443_BOOL);
constraint bool_eq_reif(aux31_BOOL,false,aux444_BOOL);
constraint int_eq_reif(instance_00007_00003,7,aux445_BOOL);
constraint bool_eq_reif(aux78_BOOL,false,aux446_BOOL);
constraint int_eq_reif(instance_00007_00004,8,aux447_BOOL);
constraint bool_eq_reif(aux32_BOOL,false,aux448_BOOL);
constraint int_eq_reif(instance_00007_00005,9,aux449_BOOL);
constraint bool_eq_reif(aux103_BOOL,false,aux450_BOOL);
constraint int_eq_reif(instance_00007_00006,10,aux451_BOOL);
constraint bool_eq_reif(aux26_BOOL,false,aux452_BOOL);
constraint int_eq_reif(instance_00007_00007_INTEGER,1,aux453_BOOL);
constraint bool_eq_reif(aux73_BOOL,false,aux454_BOOL);
constraint int_eq_reif(instance_00007_00008,2,aux455_BOOL);
constraint bool_eq_reif(aux29_BOOL,false,aux456_BOOL);
constraint int_eq_reif(instance_00007_00009,3,aux457_BOOL);
constraint bool_eq_reif(aux95_BOOL,false,aux458_BOOL);
constraint int_eq_reif(instance_00007_00010,4,aux459_BOOL);
constraint bool_eq_reif(aux67_BOOL,false,aux460_BOOL);
constraint int_eq_reif(instance_00008_00001,4,aux461_BOOL);
constraint bool_eq_reif(aux28_BOOL,false,aux462_BOOL);
constraint int_eq_reif(instance_00008_00002,5,aux463_BOOL);
constraint bool_eq_reif(aux116_BOOL,false,aux464_BOOL);
constraint int_eq_reif(instance_00008_00003,6,aux465_BOOL);
constraint bool_eq_reif(aux38_BOOL,false,aux466_BOOL);
constraint int_eq_reif(instance_00008_00004,7,aux467_BOOL);
constraint bool_eq_reif(aux70_BOOL,false,aux468_BOOL);
constraint int_eq_reif(instance_00008_00005,8,aux469_BOOL);
constraint bool_eq_reif(aux40_BOOL,false,aux470_BOOL);
constraint int_eq_reif(instance_00008_00006,9,aux471_BOOL);
constraint bool_eq_reif(aux108_BOOL,false,aux472_BOOL);
constraint int_eq_reif(instance_00008_00007,10,aux473_BOOL);
constraint bool_eq_reif(aux34_BOOL,false,aux474_BOOL);
constraint int_eq_reif(instance_00008_00008_INTEGER,1,aux475_BOOL);
constraint bool_eq_reif(aux68_BOOL,false,aux476_BOOL);
constraint int_eq_reif(instance_00008_00009,2,aux477_BOOL);
constraint bool_eq_reif(aux48_BOOL,false,aux478_BOOL);
constraint int_eq_reif(instance_00008_00010,3,aux479_BOOL);
constraint bool_eq_reif(aux84_BOOL,false,aux480_BOOL);
constraint int_eq_reif(3,instance_00009_00001,aux481_BOOL);
constraint bool_eq_reif(aux105_BOOL,false,aux482_BOOL);
constraint int_eq_reif(4,instance_00009_00002,aux483_BOOL);
constraint bool_eq_reif(aux83_BOOL,false,aux484_BOOL);
constraint int_eq_reif(5,instance_00009_00003,aux485_BOOL);
constraint bool_eq_reif(aux98_BOOL,false,aux486_BOOL);
constraint int_eq_reif(6,instance_00009_00004,aux487_BOOL);
constraint bool_eq_reif(aux82_BOOL,false,aux488_BOOL);
constraint int_eq_reif(7,instance_00009_00005,aux489_BOOL);
constraint bool_eq_reif(aux113_BOOL,false,aux490_BOOL);
constraint int_eq_reif(8,instance_00009_00006,aux491_BOOL);
constraint bool_eq_reif(aux81_BOOL,false,aux492_BOOL);
constraint int_eq_reif(9,instance_00009_00007,aux493_BOOL);
constraint bool_eq_reif(aux97_BOOL,false,aux494_BOOL);
constraint int_eq_reif(10,instance_00009_00008,aux495_BOOL);
constraint bool_eq_reif(aux80_BOOL,false,aux496_BOOL);
constraint int_eq_reif(1,instance_00009_00009_INTEGER,aux497_BOOL);
constraint bool_eq_reif(aux21_BOOL,false,aux498_BOOL);
constraint int_eq_reif(2,instance_00009_00010,aux499_BOOL);
constraint bool_eq_reif(aux60_BOOL,false,aux500_BOOL);
constraint int_eq_reif(instance_00010_00001,2,aux501_BOOL);
constraint bool_eq_reif(aux45_BOOL,false,aux502_BOOL);
constraint int_eq_reif(instance_00010_00002,3,aux503_BOOL);
constraint bool_eq_reif(aux114_BOOL,false,aux504_BOOL);
constraint int_eq_reif(instance_00010_00003,4,aux505_BOOL);
constraint bool_eq_reif(aux49_BOOL,false,aux506_BOOL);
constraint int_eq_reif(instance_00010_00004,5,aux507_BOOL);
constraint bool_eq_reif(aux59_BOOL,false,aux508_BOOL);
constraint int_eq_reif(instance_00010_00005,6,aux509_BOOL);
constraint bool_eq_reif(aux44_BOOL,false,aux510_BOOL);
constraint int_eq_reif(instance_00010_00006,7,aux511_BOOL);
constraint bool_eq_reif(aux96_BOOL,false,aux512_BOOL);
constraint int_eq_reif(instance_00010_00007,8,aux513_BOOL);
constraint bool_eq_reif(aux47_BOOL,false,aux514_BOOL);
constraint int_eq_reif(instance_00010_00008,9,aux515_BOOL);
constraint bool_eq_reif(aux58_BOOL,false,aux516_BOOL);
constraint int_eq_reif(instance_00010_00009,10,aux517_BOOL);
constraint bool_eq_reif(aux37_BOOL,false,aux518_BOOL);
constraint int_eq_reif(instance_00010_00010_INTEGER,1,aux519_BOOL);
constraint int_lin_eq([1,1,1,1,1,1,1,1,1,1,-1],[aux120_INTEGER,aux121_INTEGER,aux122_INTEGER,aux123_INTEGER,aux124_INTEGER,aux125_INTEGER,aux126_INTEGER,aux127_INTEGER,aux128_INTEGER,aux129_INTEGER,aux0],0);
constraint int_lin_eq([1,1,1,1,1,1,1,1,1,1,-1],[aux130_INTEGER,aux131_INTEGER,aux132_INTEGER,aux133_INTEGER,aux134_INTEGER,aux135_INTEGER,aux136_INTEGER,aux137_INTEGER,aux138_INTEGER,aux139_INTEGER,aux1],0);
constraint int_lin_eq([1,1,1,1,1,1,1,1,1,1,-1],[aux140_INTEGER,aux141_INTEGER,aux142_INTEGER,aux143_INTEGER,aux144_INTEGER,aux145_INTEGER,aux146_INTEGER,aux147_INTEGER,aux148_INTEGER,aux149_INTEGER,aux2],0);
constraint int_lin_eq([1,1,1,1,1,1,1,1,1,1,-1],[aux150_INTEGER,aux151_INTEGER,aux152_INTEGER,aux153_INTEGER,aux154_INTEGER,aux155_INTEGER,aux156_INTEGER,aux157_INTEGER,aux158_INTEGER,aux159_INTEGER,aux3],0);
constraint int_lin_eq([1,1,1,1,1,1,1,1,1,1,-1],[aux160_INTEGER,aux161_INTEGER,aux162_INTEGER,aux163_INTEGER,aux164_INTEGER,aux165_INTEGER,aux166_INTEGER,aux167_INTEGER,aux168_INTEGER,aux169_INTEGER,aux4],0);
constraint int_lin_eq([1,1,1,1,1,1,1,1,1,1,-1],[aux170_INTEGER,aux171_INTEGER,aux172_INTEGER,aux173_INTEGER,aux174_INTEGER,aux175_INTEGER,aux176_INTEGER,aux177_INTEGER,aux178_INTEGER,aux179_INTEGER,aux5],0);
constraint int_lin_eq([1,1,1,1,1,1,1,1,1,1,-1],[aux180_INTEGER,aux181_INTEGER,aux182_INTEGER,aux183_INTEGER,aux184_INTEGER,aux185_INTEGER,aux186_INTEGER,aux187_INTEGER,aux188_INTEGER,aux189_INTEGER,aux6],0);
constraint int_lin_eq([1,1,1,1,1,1,1,1,1,1,-1],[aux190_INTEGER,aux191_INTEGER,aux192_INTEGER,aux193_INTEGER,aux194_INTEGER,aux195_INTEGER,aux196_INTEGER,aux197_INTEGER,aux198_INTEGER,aux199_INTEGER,aux7],0);
constraint int_lin_eq([1,1,1,1,1,1,1,1,1,1,-1],[aux200_INTEGER,aux201_INTEGER,aux202_INTEGER,aux203_INTEGER,aux204_INTEGER,aux205_INTEGER,aux206_INTEGER,aux207_INTEGER,aux208_INTEGER,aux209_INTEGER,aux8],0);
constraint int_lin_eq([1,1,1,1,1,1,1,1,1,1,-1],[aux210_INTEGER,aux211_INTEGER,aux212_INTEGER,aux213_INTEGER,aux214_INTEGER,aux215_INTEGER,aux216_INTEGER,aux217_INTEGER,aux218_INTEGER,aux219_INTEGER,aux9],0);
constraint int_lin_eq([1,1,1,1,1,1,1,1,1,1,-1],[aux220_INTEGER,aux221_INTEGER,aux222_INTEGER,aux223_INTEGER,aux224_INTEGER,aux225_INTEGER,aux226_INTEGER,aux227_INTEGER,aux228_INTEGER,aux229_INTEGER,aux10],0);
constraint int_lin_eq([1,1,1,1,1,1,1,1,1,1,-1],[aux230_INTEGER,aux231_INTEGER,aux232_INTEGER,aux233_INTEGER,aux234_INTEGER,aux235_INTEGER,aux236_INTEGER,aux237_INTEGER,aux238_INTEGER,aux239_INTEGER,aux11],0);
constraint int_lin_eq([1,1,1,1,1,1,1,1,1,1,-1],[aux240_INTEGER,aux241_INTEGER,aux242_INTEGER,aux243_INTEGER,aux244_INTEGER,aux245_INTEGER,aux246_INTEGER,aux247_INTEGER,aux248_INTEGER,aux249_INTEGER,aux12],0);
constraint int_lin_eq([1,1,1,1,1,1,1,1,1,1,-1],[aux250_INTEGER,aux251_INTEGER,aux252_INTEGER,aux253_INTEGER,aux254_INTEGER,aux255_INTEGER,aux256_INTEGER,aux257_INTEGER,aux258_INTEGER,aux259_INTEGER,aux13],0);
constraint int_lin_eq([1,1,1,1,1,1,1,1,1,1,-1],[aux260_INTEGER,aux261_INTEGER,aux262_INTEGER,aux263_INTEGER,aux264_INTEGER,aux265_INTEGER,aux266_INTEGER,aux267_INTEGER,aux268_INTEGER,aux269_INTEGER,aux14],0);
constraint int_lin_eq([1,1,1,1,1,1,1,1,1,1,-1],[aux270_INTEGER,aux271_INTEGER,aux272_INTEGER,aux273_INTEGER,aux274_INTEGER,aux275_INTEGER,aux276_INTEGER,aux277_INTEGER,aux278_INTEGER,aux279_INTEGER,aux15],0);
constraint int_lin_eq([1,1,1,1,1,1,1,1,1,1,-1],[aux280_INTEGER,aux281_INTEGER,aux282_INTEGER,aux283_INTEGER,aux284_INTEGER,aux285_INTEGER,aux286_INTEGER,aux287_INTEGER,aux288_INTEGER,aux289_INTEGER,aux16],0);
constraint int_lin_eq([1,1,1,1,1,1,1,1,1,1,-1],[aux290_INTEGER,aux291_INTEGER,aux292_INTEGER,aux293_INTEGER,aux294_INTEGER,aux295_INTEGER,aux296_INTEGER,aux297_INTEGER,aux298_INTEGER,aux299_INTEGER,aux17],0);
constraint int_lin_eq([1,1,1,1,1,1,1,1,1,1,-1],[aux300_INTEGER,aux301_INTEGER,aux302_INTEGER,aux303_INTEGER,aux304_INTEGER,aux305_INTEGER,aux306_INTEGER,aux307_INTEGER,aux308_INTEGER,aux309_INTEGER,aux18],0);
constraint int_lin_eq([1,1,1,1,1,1,1,1,1,1,-1],[aux310_INTEGER,aux311_INTEGER,aux312_INTEGER,aux313_INTEGER,aux314_INTEGER,aux315_INTEGER,aux316_INTEGER,aux317_INTEGER,aux318_INTEGER,aux319_INTEGER,aux19],0);
constraint int_ne_reif(instance_00002_00004,0,aux20_BOOL);
constraint int_ne_reif(0,instance_00009_00010,aux21_BOOL);
constraint int_ne_reif(instance_00002_00002_INTEGER,0,aux22_BOOL);
constraint int_ne_reif(0,instance_00005_00010,aux23_BOOL);
constraint int_ne_reif(instance_00007_00001,0,aux24_BOOL);
constraint int_ne_reif(0,instance_00001_00010,aux25_BOOL);
constraint int_ne_reif(instance_00007_00007_INTEGER,0,aux26_BOOL);
constraint int_ne_reif(instance_00003_00007,0,aux27_BOOL);
constraint int_ne_reif(instance_00008_00002,0,aux28_BOOL);
constraint int_ne_reif(instance_00007_00009,0,aux29_BOOL);
constraint int_ne_reif(instance_00003_00009,0,aux30_BOOL);
constraint int_ne_reif(instance_00007_00003,0,aux31_BOOL);
constraint int_ne_reif(instance_00007_00005,0,aux32_BOOL);
constraint int_ne_reif(instance_00002_00008,0,aux33_BOOL);
constraint int_ne_reif(instance_00008_00008_INTEGER,0,aux34_BOOL);
constraint int_ne_reif(instance_00002_00006,0,aux35_BOOL);
constraint int_ne_reif(instance_00003_00001,0,aux36_BOOL);
constraint int_ne_reif(instance_00010_00010_INTEGER,0,aux37_BOOL);
constraint int_ne_reif(instance_00008_00004,0,aux38_BOOL);
constraint int_ne_reif(instance_00003_00003_INTEGER,0,aux39_BOOL);
constraint int_ne_reif(instance_00008_00006,0,aux40_BOOL);
constraint int_ne_reif(instance_00003_00005,0,aux41_BOOL);
constraint int_ne_reif(instance_00002_00010,0,aux42_BOOL);
constraint int_ne_reif(0,instance_00006_00010,aux43_BOOL);
constraint int_ne_reif(instance_00010_00006,0,aux44_BOOL);
constraint int_ne_reif(instance_00010_00002,0,aux45_BOOL);
constraint int_ne_reif(0,instance_00004_00010,aux46_BOOL);
constraint int_ne_reif(instance_00010_00008,0,aux47_BOOL);
constraint int_ne_reif(instance_00008_00010,0,aux48_BOOL);
constraint int_ne_reif(instance_00010_00004,0,aux49_BOOL);
constraint int_ne_reif(0,instance_00006_00006_INTEGER,aux50_BOOL);
constraint int_ne_reif(0,instance_00006_00008,aux51_BOOL);
constraint int_ne_reif(0,instance_00006_00002,aux52_BOOL);
constraint int_ne_reif(0,instance_00006_00004,aux53_BOOL);
constraint int_ne_reif(0,instance_00004_00008,aux54_BOOL);
constraint int_ne_reif(0,instance_00004_00006,aux55_BOOL);
constraint int_ne_reif(0,instance_00004_00004_INTEGER,aux56_BOOL);
constraint int_ne_reif(0,instance_00004_00002,aux57_BOOL);
constraint int_ne_reif(instance_00010_00009,0,aux58_BOOL);
constraint int_ne_reif(instance_00010_00005,0,aux59_BOOL);
constraint int_ne_reif(instance_00010_00001,0,aux60_BOOL);
constraint int_ne_reif(instance_00002_00003,0,aux61_BOOL);
constraint int_ne_reif(0,instance_00006_00007,aux62_BOOL);
constraint int_ne_reif(0,instance_00006_00003,aux63_BOOL);
constraint int_ne_reif(0,instance_00004_00009,aux64_BOOL);
constraint int_ne_reif(0,instance_00004_00005,aux65_BOOL);
constraint int_ne_reif(0,instance_00004_00001,aux66_BOOL);
constraint int_ne_reif(instance_00008_00001,0,aux67_BOOL);
constraint int_ne_reif(instance_00008_00009,0,aux68_BOOL);
constraint int_ne_reif(instance_00002_00007,0,aux69_BOOL);
constraint int_ne_reif(instance_00008_00005,0,aux70_BOOL);
constraint int_ne_reif(0,instance_00006_00005,aux71_BOOL);
constraint int_ne_reif(0,instance_00004_00007,aux72_BOOL);
constraint int_ne_reif(instance_00007_00008,0,aux73_BOOL);
constraint int_ne_reif(instance_00003_00004,0,aux74_BOOL);
constraint int_ne_reif(0,instance_00006_00001,aux75_BOOL);
constraint int_ne_reif(0,instance_00004_00003,aux76_BOOL);
constraint int_ne_reif(instance_00003_00008,0,aux77_BOOL);
constraint int_ne_reif(instance_00007_00004,0,aux78_BOOL);
constraint int_ne_reif(0,instance_00006_00009,aux79_BOOL);
constraint int_ne_reif(0,instance_00009_00009_INTEGER,aux80_BOOL);
constraint int_ne_reif(0,instance_00009_00007,aux81_BOOL);
constraint int_ne_reif(0,instance_00009_00005,aux82_BOOL);
constraint int_ne_reif(0,instance_00009_00003,aux83_BOOL);
constraint int_ne_reif(0,instance_00009_00001,aux84_BOOL);
constraint int_ne_reif(0,instance_00001_00007,aux85_BOOL);
constraint int_ne_reif(0,instance_00001_00009,aux86_BOOL);
constraint int_ne_reif(0,instance_00001_00003,aux87_BOOL);
constraint int_ne_reif(0,instance_00001_00005,aux88_BOOL);
constraint int_ne_reif(0,instance_00001_00001_INTEGER,aux89_BOOL);
constraint int_ne_reif(0,instance_00005_00001,aux90_BOOL);
constraint int_ne_reif(0,instance_00005_00007,aux91_BOOL);
constraint int_ne_reif(0,instance_00005_00009,aux92_BOOL);
constraint int_ne_reif(0,instance_00005_00003,aux93_BOOL);
constraint int_ne_reif(0,instance_00005_00005_INTEGER,aux94_BOOL);
constraint int_ne_reif(instance_00007_00010,0,aux95_BOOL);
constraint int_ne_reif(instance_00010_00007,0,aux96_BOOL);
constraint int_ne_reif(0,instance_00009_00008,aux97_BOOL);
constraint int_ne_reif(0,instance_00009_00004,aux98_BOOL);
constraint int_ne_reif(0,instance_00001_00008,aux99_BOOL);
constraint int_ne_reif(0,instance_00001_00004,aux100_BOOL);
constraint int_ne_reif(0,instance_00005_00008,aux101_BOOL);
constraint int_ne_reif(0,instance_00005_00004,aux102_BOOL);
constraint int_ne_reif(instance_00007_00006,0,aux103_BOOL);
constraint int_ne_reif(instance_00003_00002,0,aux104_BOOL);
constraint int_ne_reif(0,instance_00009_00002,aux105_BOOL);
constraint int_ne_reif(0,instance_00001_00002,aux106_BOOL);
constraint int_ne_reif(0,instance_00005_00006,aux107_BOOL);
constraint int_ne_reif(instance_00008_00007,0,aux108_BOOL);
constraint int_ne_reif(0,instance_00001_00006,aux109_BOOL);
constraint int_ne_reif(0,instance_00005_00002,aux110_BOOL);
constraint int_ne_reif(instance_00002_00009,0,aux111_BOOL);
constraint int_ne_reif(instance_00002_00001,0,aux112_BOOL);
constraint int_ne_reif(0,instance_00009_00006,aux113_BOOL);
constraint int_ne_reif(instance_00010_00003,0,aux114_BOOL);
constraint int_ne_reif(instance_00003_00006,0,aux115_BOOL);
constraint int_ne_reif(instance_00008_00003,0,aux116_BOOL);
constraint int_ne_reif(instance_00003_00010,0,aux117_BOOL);
constraint int_ne_reif(instance_00007_00002,0,aux118_BOOL);
constraint int_ne_reif(instance_00002_00005,0,aux119_BOOL);
constraint int_lin_eq([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[aux100_INTEGER,aux101_INTEGER,aux102_INTEGER,aux103_INTEGER,aux104_INTEGER,aux105_INTEGER,aux106_INTEGER,aux107_INTEGER,aux108_INTEGER,aux109_INTEGER,aux110_INTEGER,aux111_INTEGER,aux112_INTEGER,aux113_INTEGER,aux114_INTEGER,aux115_INTEGER,aux116_INTEGER,aux117_INTEGER,aux118_INTEGER,aux119_INTEGER,aux20_INTEGER,aux21_INTEGER,aux22_INTEGER,aux23_INTEGER,aux24_INTEGER,aux25_INTEGER,aux26_INTEGER,aux27_INTEGER,aux28_INTEGER,aux29_INTEGER,aux30_INTEGER,aux31_INTEGER,aux32_INTEGER,aux33_INTEGER,aux34_INTEGER,aux35_INTEGER,aux36_INTEGER,aux37_INTEGER,aux38_INTEGER,aux39_INTEGER,aux40_INTEGER,aux41_INTEGER,aux42_INTEGER,aux43_INTEGER,aux44_INTEGER,aux45_INTEGER,aux46_INTEGER,aux47_INTEGER,aux48_INTEGER,aux49_INTEGER,aux50_INTEGER,aux51_INTEGER,aux52_INTEGER,aux53_INTEGER,aux54_INTEGER,aux55_INTEGER,aux56_INTEGER,aux57_INTEGER,aux58_INTEGER,aux59_INTEGER,aux60_INTEGER,aux61_INTEGER,aux62_INTEGER,aux63_INTEGER,aux64_INTEGER,aux65_INTEGER,aux66_INTEGER,aux67_INTEGER,aux68_INTEGER,aux69_INTEGER,aux70_INTEGER,aux71_INTEGER,aux72_INTEGER,aux73_INTEGER,aux74_INTEGER,aux75_INTEGER,aux76_INTEGER,aux77_INTEGER,aux78_INTEGER,aux79_INTEGER,aux80_INTEGER,aux81_INTEGER,aux82_INTEGER,aux83_INTEGER,aux84_INTEGER,aux85_INTEGER,aux86_INTEGER,aux87_INTEGER,aux88_INTEGER,aux89_INTEGER,aux90_INTEGER,aux91_INTEGER,aux92_INTEGER,aux93_INTEGER,aux94_INTEGER,aux95_INTEGER,aux96_INTEGER,aux97_INTEGER,aux98_INTEGER,aux99_INTEGER],42);
constraint array_bool_or([aux320_BOOL,aux321_BOOL],true);
constraint array_bool_or([aux322_BOOL,aux323_BOOL],true);
constraint array_bool_or([aux324_BOOL,aux325_BOOL],true);
constraint array_bool_or([aux326_BOOL,aux327_BOOL],true);
constraint array_bool_or([aux328_BOOL,aux329_BOOL],true);
constraint array_bool_or([aux330_BOOL,aux331_BOOL],true);
constraint array_bool_or([aux332_BOOL,aux333_BOOL],true);
constraint array_bool_or([aux334_BOOL,aux335_BOOL],true);
constraint array_bool_or([aux336_BOOL,aux337_BOOL],true);
constraint array_bool_or([aux338_BOOL,aux339_BOOL],true);
constraint array_bool_or([aux340_BOOL,aux341_BOOL],true);
constraint array_bool_or([aux342_BOOL,aux343_BOOL],true);
constraint array_bool_or([aux344_BOOL,aux345_BOOL],true);
constraint array_bool_or([aux346_BOOL,aux347_BOOL],true);
constraint array_bool_or([aux348_BOOL,aux349_BOOL],true);
constraint array_bool_or([aux350_BOOL,aux351_BOOL],true);
constraint array_bool_or([aux352_BOOL,aux353_BOOL],true);
constraint array_bool_or([aux354_BOOL,aux355_BOOL],true);
constraint array_bool_or([aux356_BOOL,aux357_BOOL],true);
constraint array_bool_or([aux358_BOOL,aux359_BOOL],true);
constraint array_bool_or([aux360_BOOL,aux361_BOOL],true);
constraint array_bool_or([aux362_BOOL,aux363_BOOL],true);
constraint array_bool_or([aux364_BOOL,aux365_BOOL],true);
constraint array_bool_or([aux366_BOOL,aux367_BOOL],true);
constraint array_bool_or([aux368_BOOL,aux369_BOOL],true);
constraint array_bool_or([aux370_BOOL,aux371_BOOL],true);
constraint array_bool_or([aux372_BOOL,aux373_BOOL],true);
constraint array_bool_or([aux374_BOOL,aux375_BOOL],true);
constraint array_bool_or([aux376_BOOL,aux377_BOOL],true);
constraint array_bool_or([aux378_BOOL,aux379_BOOL],true);
constraint array_bool_or([aux380_BOOL,aux381_BOOL],true);
constraint array_bool_or([aux382_BOOL,aux383_BOOL],true);
constraint array_bool_or([aux384_BOOL,aux385_BOOL],true);
constraint array_bool_or([aux386_BOOL,aux387_BOOL],true);
constraint array_bool_or([aux388_BOOL,aux389_BOOL],true);
constraint array_bool_or([aux390_BOOL,aux391_BOOL],true);
constraint array_bool_or([aux392_BOOL,aux393_BOOL],true);
constraint array_bool_or([aux394_BOOL,aux395_BOOL],true);
constraint array_bool_or([aux396_BOOL,aux397_BOOL],true);
constraint array_bool_or([aux398_BOOL,aux399_BOOL],true);
constraint array_bool_or([aux400_BOOL,aux401_BOOL],true);
constraint array_bool_or([aux402_BOOL,aux403_BOOL],true);
constraint array_bool_or([aux404_BOOL,aux405_BOOL],true);
constraint array_bool_or([aux406_BOOL,aux407_BOOL],true);
constraint array_bool_or([aux408_BOOL,aux409_BOOL],true);
constraint array_bool_or([aux410_BOOL,aux411_BOOL],true);
constraint array_bool_or([aux412_BOOL,aux413_BOOL],true);
constraint array_bool_or([aux414_BOOL,aux415_BOOL],true);
constraint array_bool_or([aux416_BOOL,aux417_BOOL],true);
constraint array_bool_or([aux418_BOOL,aux419_BOOL],true);
constraint array_bool_or([aux420_BOOL,aux421_BOOL],true);
constraint array_bool_or([aux422_BOOL,aux423_BOOL],true);
constraint array_bool_or([aux424_BOOL,aux425_BOOL],true);
constraint array_bool_or([aux426_BOOL,aux427_BOOL],true);
constraint array_bool_or([aux428_BOOL,aux429_BOOL],true);
constraint array_bool_or([aux430_BOOL,aux431_BOOL],true);
constraint array_bool_or([aux432_BOOL,aux433_BOOL],true);
constraint array_bool_or([aux434_BOOL,aux435_BOOL],true);
constraint array_bool_or([aux436_BOOL,aux437_BOOL],true);
constraint array_bool_or([aux438_BOOL,aux439_BOOL],true);
constraint array_bool_or([aux440_BOOL,aux441_BOOL],true);
constraint array_bool_or([aux442_BOOL,aux443_BOOL],true);
constraint array_bool_or([aux444_BOOL,aux445_BOOL],true);
constraint array_bool_or([aux446_BOOL,aux447_BOOL],true);
constraint array_bool_or([aux448_BOOL,aux449_BOOL],true);
constraint array_bool_or([aux450_BOOL,aux451_BOOL],true);
constraint array_bool_or([aux452_BOOL,aux453_BOOL],true);
constraint array_bool_or([aux454_BOOL,aux455_BOOL],true);
constraint array_bool_or([aux456_BOOL,aux457_BOOL],true);
constraint array_bool_or([aux458_BOOL,aux459_BOOL],true);
constraint array_bool_or([aux460_BOOL,aux461_BOOL],true);
constraint array_bool_or([aux462_BOOL,aux463_BOOL],true);
constraint array_bool_or([aux464_BOOL,aux465_BOOL],true);
constraint array_bool_or([aux466_BOOL,aux467_BOOL],true);
constraint array_bool_or([aux468_BOOL,aux469_BOOL],true);
constraint array_bool_or([aux470_BOOL,aux471_BOOL],true);
constraint array_bool_or([aux472_BOOL,aux473_BOOL],true);
constraint array_bool_or([aux474_BOOL,aux475_BOOL],true);
constraint array_bool_or([aux476_BOOL,aux477_BOOL],true);
constraint array_bool_or([aux478_BOOL,aux479_BOOL],true);
constraint array_bool_or([aux480_BOOL,aux481_BOOL],true);
constraint array_bool_or([aux482_BOOL,aux483_BOOL],true);
constraint array_bool_or([aux484_BOOL,aux485_BOOL],true);
constraint array_bool_or([aux486_BOOL,aux487_BOOL],true);
constraint array_bool_or([aux488_BOOL,aux489_BOOL],true);
constraint array_bool_or([aux490_BOOL,aux491_BOOL],true);
constraint array_bool_or([aux492_BOOL,aux493_BOOL],true);
constraint array_bool_or([aux494_BOOL,aux495_BOOL],true);
constraint array_bool_or([aux496_BOOL,aux497_BOOL],true);
constraint array_bool_or([aux498_BOOL,aux499_BOOL],true);
constraint array_bool_or([aux500_BOOL,aux501_BOOL],true);
constraint array_bool_or([aux502_BOOL,aux503_BOOL],true);
constraint array_bool_or([aux504_BOOL,aux505_BOOL],true);
constraint array_bool_or([aux506_BOOL,aux507_BOOL],true);
constraint array_bool_or([aux508_BOOL,aux509_BOOL],true);
constraint array_bool_or([aux510_BOOL,aux511_BOOL],true);
constraint array_bool_or([aux512_BOOL,aux513_BOOL],true);
constraint array_bool_or([aux514_BOOL,aux515_BOOL],true);
constraint array_bool_or([aux516_BOOL,aux517_BOOL],true);
constraint array_bool_or([aux518_BOOL,aux519_BOOL],true);

solve :: int_search([instance_00001_00001_INTEGER, instance_00001_00002, instance_00001_00003, instance_00001_00004, instance_00001_00005, instance_00001_00006, instance_00001_00007, instance_00001_00008, instance_00001_00009, instance_00001_00010, instance_00002_00001, instance_00002_00002_INTEGER, instance_00002_00003, instance_00002_00004, instance_00002_00005, instance_00002_00006, instance_00002_00007, instance_00002_00008, instance_00002_00009, instance_00002_00010, instance_00003_00001, instance_00003_00002, instance_00003_00003_INTEGER, instance_00003_00004, instance_00003_00005, instance_00003_00006, instance_00003_00007, instance_00003_00008, instance_00003_00009, instance_00003_00010, instance_00004_00001, instance_00004_00002, instance_00004_00003, instance_00004_00004_INTEGER, instance_00004_00005, instance_00004_00006, instance_00004_00007, instance_00004_00008, instance_00004_00009, instance_00004_00010, instance_00005_00001, instance_00005_00002, instance_00005_00003, instance_00005_00004, instance_00005_00005_INTEGER, instance_00005_00006, instance_00005_00007, instance_00005_00008, instance_00005_00009, instance_00005_00010, instance_00006_00001, instance_00006_00002, instance_00006_00003, instance_00006_00004, instance_00006_00005, instance_00006_00006_INTEGER, instance_00006_00007, instance_00006_00008, instance_00006_00009, instance_00006_00010, instance_00007_00001, instance_00007_00002, instance_00007_00003, instance_00007_00004, instance_00007_00005, instance_00007_00006, instance_00007_00007_INTEGER, instance_00007_00008, instance_00007_00009, instance_00007_00010, instance_00008_00001, instance_00008_00002, instance_00008_00003, instance_00008_00004, instance_00008_00005, instance_00008_00006, instance_00008_00007, instance_00008_00008_INTEGER, instance_00008_00009, instance_00008_00010, instance_00009_00001, instance_00009_00002, instance_00009_00003, instance_00009_00004, instance_00009_00005, instance_00009_00006, instance_00009_00007, instance_00009_00008, instance_00009_00009_INTEGER, instance_00009_00010, instance_00010_00001, instance_00010_00002, instance_00010_00003, instance_00010_00004, instance_00010_00005, instance_00010_00006, instance_00010_00007, instance_00010_00008, instance_00010_00009, instance_00010_00010_INTEGER], input_order, indomain_min, complete)
 satisfy;
