language ESSENCE' 1.0

$ given N : int
$ given numAssigned : int
$ given maxPerRow : int
$ given minPerRow : int

$ letting N = 5
$ letting numAssigned = 10
$ letting maxPerRow = 4
$ letting minPerRow = 2

$ letting N = 2
$ letting numAssigned = 3
$ letting maxPerRow = 1
$ letting minPerRow = 0

letting N = 10
letting numAssigned = 42
letting maxPerRow = 6
letting minPerRow = 4

$ N+1 reserved for 0th index
find instance : matrix indexed by [int(1..N), int(1..N), int(1..N+1)] of int(0..1)

such that

$ every row's number is distinct
forAll i : int(1..N) .
    forAll k : int(1..N) .
        sum(instance[i,..,k]) = 1
        \/
        sum(instance[i,..,k]) = 0,

$ every column's number is distinct
forAll j : int(1..N) .
    forAll k : int(1..N) .
        sum(instance[..,j,k]) = 1
        \/
        sum(instance[..,j,k]) = 0,

$ each "number" must have a number assigned
forAll i : int(1..N) .
    forAll j : int(1..N) .
        sum(instance[i,j,..]) = 1,

sum([instance[i, j, N+1] = 0 | i : int(1..N), j : int(1..N)]) = numAssigned,

forAll i : int(1..N) .
    sum([instance[i, j, N+1] = 1 | j : int(1..N)]) <= maxPerRow
    /\
    sum([instance[i, j, N+1] = 1 | j : int(1..N)]) >= minPerRow
    /\
    sum([instance[j, i, N+1] = 1 | j : int(1..N)]) <= maxPerRow
    /\
    sum([instance[j, i, N+1] = 1 | j : int(1..N)]) >= minPerRow

