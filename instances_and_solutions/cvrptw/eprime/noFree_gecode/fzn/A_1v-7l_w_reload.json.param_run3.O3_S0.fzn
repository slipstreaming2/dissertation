predicate gecode_global_cardinality(array[int] of var int: x, array[int] of int: cover, array[int] of var int: counts);
array [1..16] of int: aux0 = [80, 80, 80, 82, 81, 81, 65, 71, 71, 71, 71, 71, 71, 71, 71, 71];
array [1..1] of int: Capacity = [1085];
array [1..14] of int: Demand = [-57, -122, -145, -63, -146, -101, -31, 57, 122, 145, 63, 146, 101, 31];
var 2..14: successor_00001:: output_var ;
var {1,3,4,5,6,7,8,9,10,11,12,13,14}: successor_00002:: output_var ;
var {1,2,4,5,6,7,8,9,10,11,12,13,14}: successor_00003:: output_var ;
var {1,2,3,5,6,7,8,9,10,11,12,13,14}: successor_00004:: output_var ;
var {1,2,3,4,6,7,8,9,10,11,12,13,14}: successor_00005:: output_var ;
var {1,2,3,4,5,7,8,9,10,11,12,13,14,16}: successor_00006:: output_var ;
var {6,13,14,16}: successor_00007:: output_var ;
var {1,2,3,4,5,6,7,9,10,11,12,13,14}: successor_00008:: output_var ;
var {1,2,3,4,5,6,7,8,10,11,12,13,14}: successor_00009:: output_var ;
var {1,2,3,4,5,6,7,8,9,11,12,13,14}: successor_00010:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,12,13,14}: successor_00011:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,13,14}: successor_00012:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,14}: successor_00013:: output_var ;
var 1..13: successor_00014:: output_var ;
var 1..14: successor_00015:: output_var ;
var 2..15: predecessor_00001:: output_var ;
var {1,3,4,5,6,8,9,10,11,12,13,14,15}: predecessor_00002:: output_var ;
var {1,2,4,5,6,8,9,10,11,12,13,14,15}: predecessor_00003:: output_var ;
var {1,2,3,5,6,8,9,10,11,12,13,14,15}: predecessor_00004:: output_var ;
var {1,2,3,4,6,8,9,10,11,12,13,14,15}: predecessor_00005:: output_var ;
var {1,2,3,4,5,7,8,9,10,11,12,13,14,15}: predecessor_00006:: output_var ;
var {1,2,3,4,5,6,8,9,10,11,12,13,14,15}: predecessor_00007:: output_var ;
var {2,3,4,5,6,9,10,11,12,13,14,15}: predecessor_00008:: output_var ;
var {1,2,3,4,5,6,8,10,11,12,13,14,15}: predecessor_00009:: output_var ;
var {1,2,3,4,5,6,8,9,11,12,13,14,15}: predecessor_00010:: output_var ;
var {1,2,3,4,5,6,8,9,10,12,13,14,15}: predecessor_00011:: output_var ;
var {1,2,3,4,5,6,8,9,10,11,13,14,15}: predecessor_00012:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,14,15}: predecessor_00013:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,15}: predecessor_00014:: output_var ;
var 6..7: predecessor_00016:: output_var ;
var 57..1085: load_00001:: output_var ;
var 122..1085: load_00002:: output_var ;
var 145..1085: load_00003:: output_var ;
var 63..1085: load_00004:: output_var ;
var 146..1085: load_00005:: output_var ;
var 101..1085: load_00006:: output_var ;
var 31..1085: load_00007:: output_var ;
var 0..1028: load_00008:: output_var ;
var 0..963: load_00009:: output_var ;
var 0..940: load_00010:: output_var ;
var 0..1022: load_00011:: output_var ;
var 0..939: load_00012:: output_var ;
var 0..984: load_00013:: output_var ;
var 0..1054: load_00014:: output_var ;
var 0..1085: load_00015:: output_var ;
var 0..1054: load_00016:: output_var ;
var 83..323: arrivalTime_00001:: output_var ;
var 113..293: arrivalTime_00002:: output_var ;
var 143..323: arrivalTime_00003:: output_var ;
var 143..263: arrivalTime_00004:: output_var ;
var 83..263: arrivalTime_00005:: output_var ;
var 143..443: arrivalTime_00006:: output_var ;
var 353..503: arrivalTime_00007:: output_var ;
var 0..323: arrivalTime_00008:: output_var ;
var 0..293: arrivalTime_00009:: output_var ;
var 0..323: arrivalTime_00010:: output_var ;
var 0..263: arrivalTime_00011:: output_var ;
var 0..263: arrivalTime_00012:: output_var ;
var 0..443: arrivalTime_00013:: output_var ;
var 0..454: arrivalTime_00014:: output_var ;
var 0..443: arrivalTime_00015:: output_var ;
var 403..1148: arrivalTime_00016:: output_var ;
var 0..1148: departureTime_00001:: output_var ;
var 0..1148: departureTime_00002:: output_var ;
var 0..1148: departureTime_00003:: output_var ;
var 0..1148: departureTime_00004:: output_var ;
var 0..1148: departureTime_00005:: output_var ;
var 0..1148: departureTime_00006:: output_var ;
var 0..1148: departureTime_00007:: output_var ;
var 0..1148: departureTime_00008:: output_var ;
var 0..1148: departureTime_00009:: output_var ;
var 0..1148: departureTime_00010:: output_var ;
var 0..1148: departureTime_00011:: output_var ;
var 0..1148: departureTime_00012:: output_var ;
var 0..1148: departureTime_00013:: output_var ;
var 0..1148: departureTime_00014:: output_var ;
var 0..1148: departureTime_00015:: output_var ;
var 0..1148: departureTime_00016:: output_var ;
var 0..363: slack_00001:: output_var ;
var 0..333: slack_00002:: output_var ;
var 0..302: slack_00003:: output_var ;
var 0..301: slack_00004:: output_var ;
var 0..348: slack_00005:: output_var ;
var 0..665: slack_00006:: output_var ;
var 0..745: slack_00007:: output_var ;
var 0..454: slack_00008:: output_var ;
var 0..454: slack_00009:: output_var ;
var 0..454: slack_00010:: output_var ;
var 0..454: slack_00011:: output_var ;
var 0..454: slack_00012:: output_var ;
var 0..454: slack_00013:: output_var ;
var 0..454: slack_00014:: output_var ;
var 0..443: slack_00015:: output_var ;
var 0..1148: slack_00016:: output_var ;
var 50..1148: objective:: output_var ;
var 0..1085: start_load:: output_var ;
var 2..16: successorOrder_00002:: output_var ;
var 2..16: successorOrder_00003:: output_var ;
var 2..16: successorOrder_00004:: output_var ;
var 2..16: successorOrder_00005:: output_var ;
var 2..16: successorOrder_00006:: output_var ;
var 2..14: successorOrder_00007:: output_var ;
var 3..16: successorOrder_00008:: output_var ;
var 2..16: successorOrder_00009:: output_var ;
var 2..16: successorOrder_00010:: output_var ;
var 2..16: successorOrder_00011:: output_var ;
var 2..16: successorOrder_00012:: output_var ;
var 2..16: successorOrder_00013:: output_var ;
var 2..16: successorOrder_00014:: output_var ;
var 4..16: successorOrder_00015:: output_var ;
var 3..15: successorOrder_00016:: output_var ;
var 2..16: predecessorOrder_00002:: output_var ;
var 2..16: predecessorOrder_00003:: output_var ;
var 2..16: predecessorOrder_00004:: output_var ;
var 2..16: predecessorOrder_00005:: output_var ;
var 2..16: predecessorOrder_00006:: output_var ;
var 3..16: predecessorOrder_00007:: output_var ;
var 2..15: predecessorOrder_00008:: output_var ;
var 2..16: predecessorOrder_00009:: output_var ;
var 2..16: predecessorOrder_00010:: output_var ;
var 2..16: predecessorOrder_00011:: output_var ;
var 2..16: predecessorOrder_00012:: output_var ;
var 2..16: predecessorOrder_00013:: output_var ;
var 2..16: predecessorOrder_00014:: output_var ;
var 2..14: predecessorOrder_00015:: output_var ;
var 3..15: predecessorOrder_00016:: output_var ;
var {1,2,3,4,5,6,8,9,10,11,12,13}: aux32:: var_is_introduced ;
var {1,8,9,11}: aux33:: var_is_introduced ;
var {1,2,3,4,5,7,8,9,10,11,12,13,14}: aux34:: var_is_introduced ;
var {1,2,3,4,5,8,9,10,11,12,13,14}: aux35:: var_is_introduced ;
var 1..16: aux36:: var_is_introduced ;
var 1..16: aux37:: var_is_introduced ;
var 1..16: aux38:: var_is_introduced ;
var 1..16: aux39:: var_is_introduced ;
var 1..16: aux40:: var_is_introduced ;
var 1..16: aux41:: var_is_introduced ;
var 1..16: aux42:: var_is_introduced ;
var 1..16: aux43:: var_is_introduced ;
var 1..16: aux44:: var_is_introduced ;
var 1..16: aux45:: var_is_introduced ;
var 1..16: aux46:: var_is_introduced ;
var 1..16: aux47:: var_is_introduced ;
var 1..16: aux48:: var_is_introduced ;
var 1..16: aux49:: var_is_introduced ;
var 1..16: aux50:: var_is_introduced ;
var 1..16: aux51:: var_is_introduced ;
var 1..16: aux52:: var_is_introduced ;
var 1..16: aux53:: var_is_introduced ;
var 1..16: aux54:: var_is_introduced ;
var 1..16: aux55:: var_is_introduced ;
var 1..16: aux56:: var_is_introduced ;
var 1..16: aux57:: var_is_introduced ;
var 1..16: aux58:: var_is_introduced ;
var 1..16: aux59:: var_is_introduced ;
var 1..16: aux60:: var_is_introduced ;
var bool: aux61_BOOL:: var_is_introduced ;
var bool: aux62_BOOL:: var_is_introduced ;
var bool: aux63_BOOL:: var_is_introduced ;
var bool: aux64_BOOL:: var_is_introduced ;
var bool: aux65_BOOL:: var_is_introduced ;
var bool: aux66_BOOL:: var_is_introduced ;
var bool: aux67_BOOL:: var_is_introduced ;
var bool: aux68_BOOL:: var_is_introduced ;
var bool: aux69_BOOL:: var_is_introduced ;
var bool: aux70_BOOL:: var_is_introduced ;
var bool: aux71_BOOL:: var_is_introduced ;
var bool: aux72_BOOL:: var_is_introduced ;
var bool: aux73_BOOL:: var_is_introduced ;
var bool: aux74_BOOL:: var_is_introduced ;
var bool: aux75_BOOL:: var_is_introduced ;
var bool: aux76_BOOL:: var_is_introduced ;
var bool: aux77_BOOL:: var_is_introduced ;
var bool: aux78_BOOL:: var_is_introduced ;
var bool: aux79_BOOL:: var_is_introduced ;
var bool: aux80_BOOL:: var_is_introduced ;
var bool: aux81_BOOL:: var_is_introduced ;
var bool: aux82_BOOL:: var_is_introduced ;
var bool: aux83_BOOL:: var_is_introduced ;
var bool: aux84_BOOL:: var_is_introduced ;
var bool: aux85_BOOL:: var_is_introduced ;
var 3..15: aux86:: var_is_introduced ;
var 113..503: aux87:: var_is_introduced ;
var 3..16: aux88:: var_is_introduced ;
var 83..503: aux89:: var_is_introduced ;
var 31..1085: aux90:: var_is_introduced ;
var 0..963: aux91:: var_is_introduced ;
var 0..1022: aux92:: var_is_introduced ;
var 57..1085: aux93:: var_is_introduced ;
var 63..1085: aux94:: var_is_introduced ;
var 101..1085: aux95:: var_is_introduced ;
var 122..1085: aux96:: var_is_introduced ;
var 0..940: aux97:: var_is_introduced ;
var 0..939: aux98:: var_is_introduced ;
var 145..1085: aux99:: var_is_introduced ;
var 146..1085: aux100:: var_is_introduced ;
var 213..1148: aux101:: var_is_introduced ;
var 0..984: aux102:: var_is_introduced ;
var 353..1148: aux103:: var_is_introduced ;
var 0..503: aux104:: var_is_introduced ;
var 0..503: aux105:: var_is_introduced ;
var 0..503: aux106:: var_is_introduced ;
var 0..503: aux107:: var_is_introduced ;
var 0..503: aux108:: var_is_introduced ;
var 0..503: aux109:: var_is_introduced ;
var 0..503: aux110:: var_is_introduced ;
var 83..503: aux111:: var_is_introduced ;
var 143..503: aux112:: var_is_introduced ;
var 0..503: aux113:: var_is_introduced ;
var 0..1028: aux114:: var_is_introduced ;
var 0..1054: aux115:: var_is_introduced ;
var 143..503: aux116:: var_is_introduced ;
var 1..2: aux117:: var_is_introduced ;
var bool: aux118_BOOL:: var_is_introduced ;
var bool: aux119_BOOL:: var_is_introduced ;
var bool: aux120_BOOL:: var_is_introduced ;
var bool: aux121_BOOL:: var_is_introduced ;
var bool: aux122_BOOL:: var_is_introduced ;
var bool: aux123_BOOL:: var_is_introduced ;
var bool: aux124_BOOL:: var_is_introduced ;
var bool: aux125_BOOL:: var_is_introduced ;
var bool: aux126_BOOL:: var_is_introduced ;
var bool: aux127_BOOL:: var_is_introduced ;
var bool: aux128_BOOL:: var_is_introduced ;
var bool: aux129_BOOL:: var_is_introduced ;
var bool: aux130_BOOL:: var_is_introduced ;
var bool: aux131_BOOL:: var_is_introduced ;
var bool: aux132_BOOL:: var_is_introduced ;
var bool: aux133_BOOL:: var_is_introduced ;
var bool: aux134_BOOL:: var_is_introduced ;
var bool: aux135_BOOL:: var_is_introduced ;
var bool: aux136_BOOL:: var_is_introduced ;
var bool: aux137_BOOL:: var_is_introduced ;
var bool: aux138_BOOL:: var_is_introduced ;
var bool: aux139_BOOL:: var_is_introduced ;
var bool: aux140_BOOL:: var_is_introduced ;
var bool: aux141_BOOL:: var_is_introduced ;
var bool: aux142_BOOL:: var_is_introduced ;
var bool: aux143_BOOL:: var_is_introduced ;
var bool: aux144_BOOL:: var_is_introduced ;
var bool: aux145_BOOL:: var_is_introduced ;
var bool: aux146_BOOL:: var_is_introduced ;
var bool: aux147_BOOL:: var_is_introduced ;
var bool: aux148_BOOL:: var_is_introduced ;
var bool: aux149_BOOL:: var_is_introduced ;
var bool: aux150_BOOL:: var_is_introduced ;
var bool: aux151_BOOL:: var_is_introduced ;
var bool: aux152_BOOL:: var_is_introduced ;
var bool: aux153_BOOL:: var_is_introduced ;
var bool: aux154_BOOL:: var_is_introduced ;
var bool: aux155_BOOL:: var_is_introduced ;
var bool: aux156_BOOL:: var_is_introduced ;
var bool: aux157_BOOL:: var_is_introduced ;
var bool: aux158_BOOL:: var_is_introduced ;
var bool: aux159_BOOL:: var_is_introduced ;
var bool: aux160_BOOL:: var_is_introduced ;
var bool: aux161_BOOL:: var_is_introduced ;
var bool: aux162_BOOL:: var_is_introduced ;
var bool: aux163_BOOL:: var_is_introduced ;
var bool: aux164_BOOL:: var_is_introduced ;
var bool: aux165_BOOL:: var_is_introduced ;
var bool: aux166_BOOL:: var_is_introduced ;
var bool: aux167_BOOL:: var_is_introduced ;
var {0,2,26,44,57,80}: aux168:: var_is_introduced ;
var {0,56,58,59,61,72,81}: aux169:: var_is_introduced ;
var {58,70,79,80,81}: aux170:: var_is_introduced ;
var {0,50,60}: aux171:: var_is_introduced ;
var {0,26,28,49,59,71}: aux172:: var_is_introduced ;
var {0,26,28,49,59,71}: aux173:: var_is_introduced ;
var {0,26,28,49,59,71}: aux174:: var_is_introduced ;
var {0,26,28,49,59,71}: aux175:: var_is_introduced ;
var {0,26,28,49,59,71}: aux176:: var_is_introduced ;
var {0,26,28,49,59,71}: aux177:: var_is_introduced ;
var {0,26,28,49,59,71}: aux178:: var_is_introduced ;
var {0,2,26,44,57,80}: aux179:: var_is_introduced ;
var {0,1,27,42,58,80}: aux180:: var_is_introduced ;
var {0,26,28,49,59,71}: aux181:: var_is_introduced ;
var {0,10,13,30,42,59,82}: aux182:: var_is_introduced ;
constraint int_lin_eq([-1,1,1],[aux117,predecessor_00016,-5],0);
constraint int_lin_eq_reif([1,1,-1],[successorOrder_00006,1,aux36],0,aux118_BOOL);
constraint int_eq_reif(aux44,1,aux119_BOOL);
constraint int_eq_reif(aux45,1,aux120_BOOL);
constraint int_eq_reif(aux46,1,aux121_BOOL);
constraint int_eq_reif(aux47,1,aux122_BOOL);
constraint int_eq_reif(aux48,1,aux123_BOOL);
constraint int_eq_reif(aux42,1,aux124_BOOL);
constraint int_eq_reif(aux43,1,aux125_BOOL);
constraint int_eq_reif(aux38,1,aux126_BOOL);
constraint int_eq_reif(aux37,1,aux127_BOOL);
constraint int_eq_reif(aux40,1,aux128_BOOL);
constraint int_eq_reif(aux39,1,aux129_BOOL);
constraint int_eq_reif(aux41,1,aux130_BOOL);
constraint int_lin_eq_reif([1,-1,1],[1,aux44,predecessorOrder_00002],0,aux131_BOOL);
constraint int_lin_eq_reif([1,-1,1],[1,aux45,predecessorOrder_00003],0,aux132_BOOL);
constraint int_lin_eq_reif([1,-1,1],[1,aux46,predecessorOrder_00004],0,aux133_BOOL);
constraint int_lin_eq_reif([1,-1,1],[1,aux47,predecessorOrder_00005],0,aux134_BOOL);
constraint int_lin_eq_reif([1,-1,1],[1,aux48,predecessorOrder_00006],0,aux135_BOOL);
constraint int_lin_eq_reif([1,-1,1],[1,aux42,predecessorOrder_00007],0,aux136_BOOL);
constraint int_lin_eq_reif([1,-1,1],[1,aux43,predecessorOrder_00009],0,aux137_BOOL);
constraint int_lin_eq_reif([1,-1,1],[1,aux38,predecessorOrder_00010],0,aux138_BOOL);
constraint int_lin_eq_reif([1,-1,1],[1,aux37,predecessorOrder_00011],0,aux139_BOOL);
constraint int_lin_eq_reif([1,-1,1],[1,aux40,predecessorOrder_00012],0,aux140_BOOL);
constraint int_lin_eq_reif([1,-1,1],[1,aux39,predecessorOrder_00013],0,aux141_BOOL);
constraint int_lin_eq_reif([1,-1,1],[1,aux41,predecessorOrder_00014],0,aux142_BOOL);
constraint int_eq_reif(1,aux36,aux143_BOOL);
constraint int_lin_eq_reif([1,1,-1],[successorOrder_00002,1,aux50],0,aux144_BOOL);
constraint int_lin_eq_reif([1,1,-1],[successorOrder_00003,1,aux49],0,aux145_BOOL);
constraint int_lin_eq_reif([1,1,-1],[successorOrder_00004,1,aux52],0,aux146_BOOL);
constraint int_lin_eq_reif([1,1,-1],[successorOrder_00005,1,aux51],0,aux147_BOOL);
constraint int_lin_eq_reif([1,1,-1],[successorOrder_00008,1,aux58],0,aux148_BOOL);
constraint int_lin_eq_reif([1,1,-1],[successorOrder_00009,1,aux59],0,aux149_BOOL);
constraint int_lin_eq_reif([1,1,-1],[successorOrder_00010,1,aux53],0,aux150_BOOL);
constraint int_lin_eq_reif([1,1,-1],[successorOrder_00011,1,aux55],0,aux151_BOOL);
constraint int_lin_eq_reif([1,1,-1],[successorOrder_00012,1,aux56],0,aux152_BOOL);
constraint int_lin_eq_reif([1,1,-1],[successorOrder_00013,1,aux57],0,aux153_BOOL);
constraint int_lin_eq_reif([1,1,-1],[successorOrder_00015,1,aux54],0,aux154_BOOL);
constraint int_eq_reif(aux50,1,aux155_BOOL);
constraint int_eq_reif(aux49,1,aux156_BOOL);
constraint int_eq_reif(aux52,1,aux157_BOOL);
constraint int_eq_reif(aux51,1,aux158_BOOL);
constraint int_eq_reif(aux58,1,aux159_BOOL);
constraint int_eq_reif(aux59,1,aux160_BOOL);
constraint int_eq_reif(aux53,1,aux161_BOOL);
constraint int_eq_reif(aux55,1,aux162_BOOL);
constraint int_eq_reif(aux56,1,aux163_BOOL);
constraint int_eq_reif(aux57,1,aux164_BOOL);
constraint int_eq_reif(aux54,1,aux165_BOOL);
constraint int_lin_eq_reif([1,1,-1],[successorOrder_00014,1,aux60],0,aux166_BOOL);
constraint int_eq_reif(1,aux60,aux167_BOOL);
constraint array_var_int_element(successor_00002, [0, 0, 0, 2, 44, 80, 57, 26, 26, 26, 26, 26, 26, 26], aux168);
constraint array_var_int_element(successor_00005, [56, 56, 58, 61, 0, 81, 72, 59, 59, 59, 59, 59, 59, 59], aux169);
constraint array_var_int_element(successor_00006, [79, 79, 81, 79, 80, 0, 58, 70, 70, 70, 70, 70, 70, 70, 70, 70], aux170);
constraint array_var_int_element(aux33, [60, 0, 50, 50, 50, 50, 50, 50, 50, 50, 50], aux171);
constraint array_var_int_element(successor_00008, [26, 26, 28, 28, 59, 71, 49, 0, 0, 0, 0, 0, 0, 0], aux172);
constraint array_var_int_element(successor_00009, [26, 26, 28, 28, 59, 71, 49, 0, 0, 0, 0, 0, 0, 0], aux173);
constraint array_var_int_element(successor_00010, [26, 26, 28, 28, 59, 71, 49, 0, 0, 0, 0, 0, 0, 0], aux174);
constraint array_var_int_element(successor_00011, [26, 26, 28, 28, 59, 71, 49, 0, 0, 0, 0, 0, 0, 0], aux175);
constraint array_var_int_element(successor_00012, [26, 26, 28, 28, 59, 71, 49, 0, 0, 0, 0, 0, 0, 0], aux176);
constraint array_var_int_element(successor_00013, [26, 26, 28, 28, 59, 71, 49, 0, 0, 0, 0, 0, 0, 0], aux177);
constraint array_var_int_element(successor_00015, [26, 26, 28, 28, 59, 71, 49, 0, 0, 0, 0, 0, 0, 0], aux178);
constraint array_var_int_element(aux32, [0, 0, 2, 44, 80, 57, 26, 26, 26, 26, 26, 26, 26], aux179);
constraint array_var_int_element(successor_00003, [1, 1, 0, 0, 42, 80, 58, 27, 27, 27, 27, 27, 27, 27], aux180);
constraint array_var_int_element(successor_00014, [26, 26, 28, 28, 59, 71, 49, 0, 0, 0, 0, 0, 0], aux181);
constraint array_var_int_element(successor_00004, [10, 10, 13, 0, 42, 82, 59, 30, 30, 30, 30, 30, 30, 30], aux182);
constraint array_var_int_element(successor_00006, [1, successorOrder_00002, successorOrder_00003, successorOrder_00004, successorOrder_00005, successorOrder_00006, successorOrder_00007, successorOrder_00008, successorOrder_00009, successorOrder_00010, successorOrder_00011, successorOrder_00012, successorOrder_00013, successorOrder_00014, successorOrder_00015, successorOrder_00016], aux36);
constraint array_var_int_element(predecessor_00011, [1, predecessorOrder_00002, predecessorOrder_00003, predecessorOrder_00004, predecessorOrder_00005, predecessorOrder_00006, predecessorOrder_00007, predecessorOrder_00008, predecessorOrder_00009, predecessorOrder_00010, predecessorOrder_00011, predecessorOrder_00012, predecessorOrder_00013, predecessorOrder_00014, predecessorOrder_00015], aux37);
constraint array_var_int_element(predecessor_00010, [1, predecessorOrder_00002, predecessorOrder_00003, predecessorOrder_00004, predecessorOrder_00005, predecessorOrder_00006, predecessorOrder_00007, predecessorOrder_00008, predecessorOrder_00009, predecessorOrder_00010, predecessorOrder_00011, predecessorOrder_00012, predecessorOrder_00013, predecessorOrder_00014, predecessorOrder_00015], aux38);
constraint array_var_int_element(predecessor_00013, [1, predecessorOrder_00002, predecessorOrder_00003, predecessorOrder_00004, predecessorOrder_00005, predecessorOrder_00006, predecessorOrder_00007, predecessorOrder_00008, predecessorOrder_00009, predecessorOrder_00010, predecessorOrder_00011, predecessorOrder_00012, predecessorOrder_00013, predecessorOrder_00014, predecessorOrder_00015], aux39);
constraint array_var_int_element(predecessor_00012, [1, predecessorOrder_00002, predecessorOrder_00003, predecessorOrder_00004, predecessorOrder_00005, predecessorOrder_00006, predecessorOrder_00007, predecessorOrder_00008, predecessorOrder_00009, predecessorOrder_00010, predecessorOrder_00011, predecessorOrder_00012, predecessorOrder_00013, predecessorOrder_00014, predecessorOrder_00015], aux40);
constraint array_var_int_element(predecessor_00014, [1, predecessorOrder_00002, predecessorOrder_00003, predecessorOrder_00004, predecessorOrder_00005, predecessorOrder_00006, predecessorOrder_00007, predecessorOrder_00008, predecessorOrder_00009, predecessorOrder_00010, predecessorOrder_00011, predecessorOrder_00012, predecessorOrder_00013, predecessorOrder_00014, predecessorOrder_00015], aux41);
constraint array_var_int_element(predecessor_00007, [1, predecessorOrder_00002, predecessorOrder_00003, predecessorOrder_00004, predecessorOrder_00005, predecessorOrder_00006, predecessorOrder_00007, predecessorOrder_00008, predecessorOrder_00009, predecessorOrder_00010, predecessorOrder_00011, predecessorOrder_00012, predecessorOrder_00013, predecessorOrder_00014, predecessorOrder_00015], aux42);
constraint array_var_int_element(predecessor_00009, [1, predecessorOrder_00002, predecessorOrder_00003, predecessorOrder_00004, predecessorOrder_00005, predecessorOrder_00006, predecessorOrder_00007, predecessorOrder_00008, predecessorOrder_00009, predecessorOrder_00010, predecessorOrder_00011, predecessorOrder_00012, predecessorOrder_00013, predecessorOrder_00014, predecessorOrder_00015], aux43);
constraint array_var_int_element(predecessor_00002, [1, predecessorOrder_00002, predecessorOrder_00003, predecessorOrder_00004, predecessorOrder_00005, predecessorOrder_00006, predecessorOrder_00007, predecessorOrder_00008, predecessorOrder_00009, predecessorOrder_00010, predecessorOrder_00011, predecessorOrder_00012, predecessorOrder_00013, predecessorOrder_00014, predecessorOrder_00015], aux44);
constraint array_var_int_element(predecessor_00003, [1, predecessorOrder_00002, predecessorOrder_00003, predecessorOrder_00004, predecessorOrder_00005, predecessorOrder_00006, predecessorOrder_00007, predecessorOrder_00008, predecessorOrder_00009, predecessorOrder_00010, predecessorOrder_00011, predecessorOrder_00012, predecessorOrder_00013, predecessorOrder_00014, predecessorOrder_00015], aux45);
constraint array_var_int_element(predecessor_00004, [1, predecessorOrder_00002, predecessorOrder_00003, predecessorOrder_00004, predecessorOrder_00005, predecessorOrder_00006, predecessorOrder_00007, predecessorOrder_00008, predecessorOrder_00009, predecessorOrder_00010, predecessorOrder_00011, predecessorOrder_00012, predecessorOrder_00013, predecessorOrder_00014, predecessorOrder_00015], aux46);
constraint array_var_int_element(predecessor_00005, [1, predecessorOrder_00002, predecessorOrder_00003, predecessorOrder_00004, predecessorOrder_00005, predecessorOrder_00006, predecessorOrder_00007, predecessorOrder_00008, predecessorOrder_00009, predecessorOrder_00010, predecessorOrder_00011, predecessorOrder_00012, predecessorOrder_00013, predecessorOrder_00014, predecessorOrder_00015], aux47);
constraint array_var_int_element(predecessor_00006, [1, predecessorOrder_00002, predecessorOrder_00003, predecessorOrder_00004, predecessorOrder_00005, predecessorOrder_00006, predecessorOrder_00007, predecessorOrder_00008, predecessorOrder_00009, predecessorOrder_00010, predecessorOrder_00011, predecessorOrder_00012, predecessorOrder_00013, predecessorOrder_00014, predecessorOrder_00015], aux48);
constraint array_var_int_element(successor_00003, [1, successorOrder_00002, successorOrder_00003, successorOrder_00004, successorOrder_00005, successorOrder_00006, successorOrder_00007, successorOrder_00008, successorOrder_00009, successorOrder_00010, successorOrder_00011, successorOrder_00012, successorOrder_00013, successorOrder_00014], aux49);
constraint array_var_int_element(successor_00002, [1, successorOrder_00002, successorOrder_00003, successorOrder_00004, successorOrder_00005, successorOrder_00006, successorOrder_00007, successorOrder_00008, successorOrder_00009, successorOrder_00010, successorOrder_00011, successorOrder_00012, successorOrder_00013, successorOrder_00014], aux50);
constraint array_var_int_element(successor_00005, [1, successorOrder_00002, successorOrder_00003, successorOrder_00004, successorOrder_00005, successorOrder_00006, successorOrder_00007, successorOrder_00008, successorOrder_00009, successorOrder_00010, successorOrder_00011, successorOrder_00012, successorOrder_00013, successorOrder_00014], aux51);
constraint array_var_int_element(successor_00004, [1, successorOrder_00002, successorOrder_00003, successorOrder_00004, successorOrder_00005, successorOrder_00006, successorOrder_00007, successorOrder_00008, successorOrder_00009, successorOrder_00010, successorOrder_00011, successorOrder_00012, successorOrder_00013, successorOrder_00014], aux52);
constraint array_var_int_element(successor_00010, [1, successorOrder_00002, successorOrder_00003, successorOrder_00004, successorOrder_00005, successorOrder_00006, successorOrder_00007, successorOrder_00008, successorOrder_00009, successorOrder_00010, successorOrder_00011, successorOrder_00012, successorOrder_00013, successorOrder_00014], aux53);
constraint array_var_int_element(successor_00015, [1, successorOrder_00002, successorOrder_00003, successorOrder_00004, successorOrder_00005, successorOrder_00006, successorOrder_00007, successorOrder_00008, successorOrder_00009, successorOrder_00010, successorOrder_00011, successorOrder_00012, successorOrder_00013, successorOrder_00014], aux54);
constraint array_var_int_element(successor_00011, [1, successorOrder_00002, successorOrder_00003, successorOrder_00004, successorOrder_00005, successorOrder_00006, successorOrder_00007, successorOrder_00008, successorOrder_00009, successorOrder_00010, successorOrder_00011, successorOrder_00012, successorOrder_00013, successorOrder_00014], aux55);
constraint array_var_int_element(successor_00012, [1, successorOrder_00002, successorOrder_00003, successorOrder_00004, successorOrder_00005, successorOrder_00006, successorOrder_00007, successorOrder_00008, successorOrder_00009, successorOrder_00010, successorOrder_00011, successorOrder_00012, successorOrder_00013, successorOrder_00014], aux56);
constraint array_var_int_element(successor_00013, [1, successorOrder_00002, successorOrder_00003, successorOrder_00004, successorOrder_00005, successorOrder_00006, successorOrder_00007, successorOrder_00008, successorOrder_00009, successorOrder_00010, successorOrder_00011, successorOrder_00012, successorOrder_00013, successorOrder_00014], aux57);
constraint array_var_int_element(successor_00008, [1, successorOrder_00002, successorOrder_00003, successorOrder_00004, successorOrder_00005, successorOrder_00006, successorOrder_00007, successorOrder_00008, successorOrder_00009, successorOrder_00010, successorOrder_00011, successorOrder_00012, successorOrder_00013, successorOrder_00014], aux58);
constraint array_var_int_element(successor_00009, [1, successorOrder_00002, successorOrder_00003, successorOrder_00004, successorOrder_00005, successorOrder_00006, successorOrder_00007, successorOrder_00008, successorOrder_00009, successorOrder_00010, successorOrder_00011, successorOrder_00012, successorOrder_00013, successorOrder_00014], aux59);
constraint array_var_int_element(successor_00014, [1, successorOrder_00002, successorOrder_00003, successorOrder_00004, successorOrder_00005, successorOrder_00006, successorOrder_00007, successorOrder_00008, successorOrder_00009, successorOrder_00010, successorOrder_00011, successorOrder_00012, successorOrder_00013], aux60);
constraint int_ne_reif(successorOrder_00012,16,aux61_BOOL);
constraint int_ne_reif(successorOrder_00008,16,aux62_BOOL);
constraint int_ne_reif(successorOrder_00006,16,aux63_BOOL);
constraint int_ne_reif(successorOrder_00004,16,aux64_BOOL);
constraint int_ne_reif(successorOrder_00002,16,aux65_BOOL);
constraint int_ne_reif(successorOrder_00011,16,aux66_BOOL);
constraint int_ne_reif(16,predecessorOrder_00003,aux67_BOOL);
constraint int_ne_reif(16,predecessorOrder_00005,aux68_BOOL);
constraint int_ne_reif(16,predecessorOrder_00007,aux69_BOOL);
constraint int_ne_reif(16,predecessorOrder_00009,aux70_BOOL);
constraint int_ne_reif(successorOrder_00014,16,aux71_BOOL);
constraint int_ne_reif(16,predecessorOrder_00002,aux72_BOOL);
constraint int_ne_reif(16,predecessorOrder_00006,aux73_BOOL);
constraint int_ne_reif(16,predecessorOrder_00004,aux74_BOOL);
constraint int_ne_reif(successorOrder_00013,16,aux75_BOOL);
constraint int_ne_reif(16,predecessorOrder_00012,aux76_BOOL);
constraint int_ne_reif(16,predecessorOrder_00014,aux77_BOOL);
constraint int_ne_reif(16,predecessorOrder_00010,aux78_BOOL);
constraint int_ne_reif(16,predecessorOrder_00013,aux79_BOOL);
constraint int_ne_reif(successorOrder_00005,16,aux80_BOOL);
constraint int_ne_reif(successorOrder_00009,16,aux81_BOOL);
constraint int_ne_reif(16,predecessorOrder_00011,aux82_BOOL);
constraint int_ne_reif(successorOrder_00010,16,aux83_BOOL);
constraint int_ne_reif(successorOrder_00015,16,aux84_BOOL);
constraint int_ne_reif(successorOrder_00003,16,aux85_BOOL);
constraint int_lin_eq([1,-1,1],[-1,aux32,successor_00001],0);
constraint int_lin_eq([1,-1,1],[-5,aux33,successor_00007],0);
constraint int_lin_eq([1,1,-1],[predecessor_00001,-1,aux34],0);
constraint int_lin_eq([1,1,-1],[predecessor_00008,-1,aux35],0);
constraint array_var_int_element(successor_00014, [predecessor_00001, predecessor_00002, predecessor_00003, predecessor_00004, predecessor_00005, predecessor_00006, predecessor_00007, predecessor_00008, predecessor_00009, predecessor_00010, predecessor_00011, predecessor_00012, predecessor_00013], 14);
constraint gecode_table_int([predecessorOrder_00015, predecessorOrder_00016],[2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,]);
constraint array_var_int_element(aux117, [successor_00006, successor_00007], 16);
constraint bool_clause([aux118_BOOL],[aux63_BOOL]);
constraint bool_clause([aux72_BOOL,aux119_BOOL],[]);
constraint bool_clause([aux67_BOOL,aux120_BOOL],[]);
constraint bool_clause([aux74_BOOL,aux121_BOOL],[]);
constraint bool_clause([aux68_BOOL,aux122_BOOL],[]);
constraint bool_clause([aux73_BOOL,aux123_BOOL],[]);
constraint bool_clause([aux69_BOOL,aux124_BOOL],[]);
constraint bool_clause([aux70_BOOL,aux125_BOOL],[]);
constraint bool_clause([aux78_BOOL,aux126_BOOL],[]);
constraint bool_clause([aux82_BOOL,aux127_BOOL],[]);
constraint bool_clause([aux76_BOOL,aux128_BOOL],[]);
constraint bool_clause([aux79_BOOL,aux129_BOOL],[]);
constraint bool_clause([aux77_BOOL,aux130_BOOL],[]);
constraint bool_clause([aux131_BOOL],[aux72_BOOL]);
constraint bool_clause([aux132_BOOL],[aux67_BOOL]);
constraint bool_clause([aux133_BOOL],[aux74_BOOL]);
constraint bool_clause([aux134_BOOL],[aux68_BOOL]);
constraint bool_clause([aux135_BOOL],[aux73_BOOL]);
constraint bool_clause([aux136_BOOL],[aux69_BOOL]);
constraint bool_clause([aux137_BOOL],[aux70_BOOL]);
constraint bool_clause([aux138_BOOL],[aux78_BOOL]);
constraint bool_clause([aux139_BOOL],[aux82_BOOL]);
constraint bool_clause([aux140_BOOL],[aux76_BOOL]);
constraint bool_clause([aux141_BOOL],[aux79_BOOL]);
constraint bool_clause([aux142_BOOL],[aux77_BOOL]);
constraint bool_clause([aux63_BOOL,aux143_BOOL],[]);
constraint bool_clause([aux144_BOOL],[aux65_BOOL]);
constraint bool_clause([aux145_BOOL],[aux85_BOOL]);
constraint bool_clause([aux146_BOOL],[aux64_BOOL]);
constraint bool_clause([aux147_BOOL],[aux80_BOOL]);
constraint bool_clause([aux148_BOOL],[aux62_BOOL]);
constraint bool_clause([aux149_BOOL],[aux81_BOOL]);
constraint bool_clause([aux150_BOOL],[aux83_BOOL]);
constraint bool_clause([aux151_BOOL],[aux66_BOOL]);
constraint bool_clause([aux152_BOOL],[aux61_BOOL]);
constraint bool_clause([aux153_BOOL],[aux75_BOOL]);
constraint bool_clause([aux154_BOOL],[aux84_BOOL]);
constraint array_var_int_element(aux33, [predecessor_00006, predecessor_00007, predecessor_00008, predecessor_00009, predecessor_00010, predecessor_00011, predecessor_00012, predecessor_00013, predecessor_00014, 16, predecessor_00016], 7);
constraint gecode_table_int([successorOrder_00016, successorOrder_00015],[3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,16,]);
constraint int_le(arrivalTime_00008, arrivalTime_00001);
constraint int_le(arrivalTime_00009, arrivalTime_00002);
constraint int_le(arrivalTime_00010, arrivalTime_00003);
constraint int_le(arrivalTime_00011, arrivalTime_00004);
constraint int_le(arrivalTime_00012, arrivalTime_00005);
constraint int_le(arrivalTime_00013, arrivalTime_00006);
constraint int_le(arrivalTime_00014, arrivalTime_00007);
constraint bool_clause([aux65_BOOL,aux155_BOOL],[]);
constraint bool_clause([aux85_BOOL,aux156_BOOL],[]);
constraint bool_clause([aux64_BOOL,aux157_BOOL],[]);
constraint bool_clause([aux80_BOOL,aux158_BOOL],[]);
constraint bool_clause([aux62_BOOL,aux159_BOOL],[]);
constraint bool_clause([aux81_BOOL,aux160_BOOL],[]);
constraint bool_clause([aux83_BOOL,aux161_BOOL],[]);
constraint bool_clause([aux66_BOOL,aux162_BOOL],[]);
constraint bool_clause([aux61_BOOL,aux163_BOOL],[]);
constraint bool_clause([aux75_BOOL,aux164_BOOL],[]);
constraint bool_clause([aux84_BOOL,aux165_BOOL],[]);
constraint all_different_int([predecessorOrder_00002, predecessorOrder_00003, predecessorOrder_00004, predecessorOrder_00005, predecessorOrder_00006, predecessorOrder_00007, predecessorOrder_00008, predecessorOrder_00009, predecessorOrder_00010, predecessorOrder_00011, predecessorOrder_00012, predecessorOrder_00013, predecessorOrder_00014, predecessorOrder_00015, predecessorOrder_00016])::domain;
constraint array_var_int_element(predecessor_00002, [successor_00001, successor_00002, successor_00003, successor_00004, successor_00005, successor_00006, successor_00007, successor_00008, successor_00009, successor_00010, successor_00011, successor_00012, successor_00013, successor_00014, successor_00015], 2);
constraint array_var_int_element(predecessor_00003, [successor_00001, successor_00002, successor_00003, successor_00004, successor_00005, successor_00006, successor_00007, successor_00008, successor_00009, successor_00010, successor_00011, successor_00012, successor_00013, successor_00014, successor_00015], 3);
constraint array_var_int_element(predecessor_00004, [successor_00001, successor_00002, successor_00003, successor_00004, successor_00005, successor_00006, successor_00007, successor_00008, successor_00009, successor_00010, successor_00011, successor_00012, successor_00013, successor_00014, successor_00015], 4);
constraint array_var_int_element(predecessor_00005, [successor_00001, successor_00002, successor_00003, successor_00004, successor_00005, successor_00006, successor_00007, successor_00008, successor_00009, successor_00010, successor_00011, successor_00012, successor_00013, successor_00014, successor_00015], 5);
constraint array_var_int_element(predecessor_00006, [successor_00001, successor_00002, successor_00003, successor_00004, successor_00005, successor_00006, successor_00007, successor_00008, successor_00009, successor_00010, successor_00011, successor_00012, successor_00013, successor_00014, successor_00015], 6);
constraint array_var_int_element(predecessor_00007, [successor_00001, successor_00002, successor_00003, successor_00004, successor_00005, successor_00006, successor_00007, successor_00008, successor_00009, successor_00010, successor_00011, successor_00012, successor_00013, successor_00014, successor_00015], 7);
constraint array_var_int_element(predecessor_00009, [successor_00001, successor_00002, successor_00003, successor_00004, successor_00005, successor_00006, successor_00007, successor_00008, successor_00009, successor_00010, successor_00011, successor_00012, successor_00013, successor_00014, successor_00015], 9);
constraint array_var_int_element(predecessor_00010, [successor_00001, successor_00002, successor_00003, successor_00004, successor_00005, successor_00006, successor_00007, successor_00008, successor_00009, successor_00010, successor_00011, successor_00012, successor_00013, successor_00014, successor_00015], 10);
constraint array_var_int_element(predecessor_00011, [successor_00001, successor_00002, successor_00003, successor_00004, successor_00005, successor_00006, successor_00007, successor_00008, successor_00009, successor_00010, successor_00011, successor_00012, successor_00013, successor_00014, successor_00015], 11);
constraint array_var_int_element(predecessor_00012, [successor_00001, successor_00002, successor_00003, successor_00004, successor_00005, successor_00006, successor_00007, successor_00008, successor_00009, successor_00010, successor_00011, successor_00012, successor_00013, successor_00014, successor_00015], 12);
constraint array_var_int_element(predecessor_00013, [successor_00001, successor_00002, successor_00003, successor_00004, successor_00005, successor_00006, successor_00007, successor_00008, successor_00009, successor_00010, successor_00011, successor_00012, successor_00013, successor_00014, successor_00015], 13);
constraint array_var_int_element(predecessor_00014, [successor_00001, successor_00002, successor_00003, successor_00004, successor_00005, successor_00006, successor_00007, successor_00008, successor_00009, successor_00010, successor_00011, successor_00012, successor_00013, successor_00014, successor_00015], 14);
constraint array_var_int_element(aux34, [successor_00002, successor_00003, successor_00004, successor_00005, successor_00006, successor_00007, successor_00008, successor_00009, successor_00010, successor_00011, successor_00012, successor_00013, successor_00014, successor_00015], 1);
constraint array_var_int_element(aux35, [successor_00002, successor_00003, successor_00004, successor_00005, successor_00006, successor_00007, successor_00008, successor_00009, successor_00010, successor_00011, successor_00012, successor_00013, successor_00014, successor_00015], 8);
constraint array_var_int_element(aux32, [successorOrder_00002, successorOrder_00003, successorOrder_00004, successorOrder_00005, successorOrder_00006, successorOrder_00007, successorOrder_00008, successorOrder_00009, successorOrder_00010, successorOrder_00011, successorOrder_00012, successorOrder_00013, successorOrder_00014], 2);
constraint array_var_int_element(successor_00006, [predecessor_00001, predecessor_00002, predecessor_00003, predecessor_00004, predecessor_00005, predecessor_00006, predecessor_00007, predecessor_00008, predecessor_00009, predecessor_00010, predecessor_00011, predecessor_00012, predecessor_00013, predecessor_00014, 16, predecessor_00016], 6);
constraint array_var_int_element(successor_00015, [load_00001, load_00002, load_00003, load_00004, load_00005, load_00006, load_00007, load_00008, load_00009, load_00010, load_00011, load_00012, load_00013, load_00014], load_00015);
constraint all_different_int([successorOrder_00002, successorOrder_00003, successorOrder_00004, successorOrder_00005, successorOrder_00006, successorOrder_00007, successorOrder_00008, successorOrder_00009, successorOrder_00010, successorOrder_00011, successorOrder_00012, successorOrder_00013, successorOrder_00014, successorOrder_00015, successorOrder_00016])::domain;
constraint all_different_int([successor_00001, successor_00002, successor_00003, successor_00004, successor_00005, successor_00006, successor_00007, successor_00008, successor_00009, successor_00010, successor_00011, successor_00012, successor_00013, successor_00014, successor_00015])::domain;
constraint int_lin_eq([-1,-1,1],[objective,arrivalTime_00015,arrivalTime_00016],0);
constraint all_different_int([predecessor_00001, predecessor_00002, predecessor_00003, predecessor_00004, predecessor_00005, predecessor_00006, predecessor_00007, predecessor_00008, predecessor_00009, predecessor_00010, predecessor_00011, predecessor_00012, predecessor_00013, predecessor_00014, predecessor_00016])::domain;
constraint bool_clause([aux166_BOOL],[aux71_BOOL]);
constraint array_var_int_element(successor_00002, [predecessor_00001, predecessor_00002, predecessor_00003, predecessor_00004, predecessor_00005, predecessor_00006, predecessor_00007, predecessor_00008, predecessor_00009, predecessor_00010, predecessor_00011, predecessor_00012, predecessor_00013, predecessor_00014], 2);
constraint array_var_int_element(successor_00003, [predecessor_00001, predecessor_00002, predecessor_00003, predecessor_00004, predecessor_00005, predecessor_00006, predecessor_00007, predecessor_00008, predecessor_00009, predecessor_00010, predecessor_00011, predecessor_00012, predecessor_00013, predecessor_00014], 3);
constraint array_var_int_element(successor_00004, [predecessor_00001, predecessor_00002, predecessor_00003, predecessor_00004, predecessor_00005, predecessor_00006, predecessor_00007, predecessor_00008, predecessor_00009, predecessor_00010, predecessor_00011, predecessor_00012, predecessor_00013, predecessor_00014], 4);
constraint array_var_int_element(successor_00005, [predecessor_00001, predecessor_00002, predecessor_00003, predecessor_00004, predecessor_00005, predecessor_00006, predecessor_00007, predecessor_00008, predecessor_00009, predecessor_00010, predecessor_00011, predecessor_00012, predecessor_00013, predecessor_00014], 5);
constraint array_var_int_element(successor_00008, [predecessor_00001, predecessor_00002, predecessor_00003, predecessor_00004, predecessor_00005, predecessor_00006, predecessor_00007, predecessor_00008, predecessor_00009, predecessor_00010, predecessor_00011, predecessor_00012, predecessor_00013, predecessor_00014], 8);
constraint array_var_int_element(successor_00009, [predecessor_00001, predecessor_00002, predecessor_00003, predecessor_00004, predecessor_00005, predecessor_00006, predecessor_00007, predecessor_00008, predecessor_00009, predecessor_00010, predecessor_00011, predecessor_00012, predecessor_00013, predecessor_00014], 9);
constraint array_var_int_element(successor_00010, [predecessor_00001, predecessor_00002, predecessor_00003, predecessor_00004, predecessor_00005, predecessor_00006, predecessor_00007, predecessor_00008, predecessor_00009, predecessor_00010, predecessor_00011, predecessor_00012, predecessor_00013, predecessor_00014], 10);
constraint array_var_int_element(successor_00011, [predecessor_00001, predecessor_00002, predecessor_00003, predecessor_00004, predecessor_00005, predecessor_00006, predecessor_00007, predecessor_00008, predecessor_00009, predecessor_00010, predecessor_00011, predecessor_00012, predecessor_00013, predecessor_00014], 11);
constraint array_var_int_element(successor_00012, [predecessor_00001, predecessor_00002, predecessor_00003, predecessor_00004, predecessor_00005, predecessor_00006, predecessor_00007, predecessor_00008, predecessor_00009, predecessor_00010, predecessor_00011, predecessor_00012, predecessor_00013, predecessor_00014], 12);
constraint array_var_int_element(successor_00013, [predecessor_00001, predecessor_00002, predecessor_00003, predecessor_00004, predecessor_00005, predecessor_00006, predecessor_00007, predecessor_00008, predecessor_00009, predecessor_00010, predecessor_00011, predecessor_00012, predecessor_00013, predecessor_00014], 13);
constraint array_var_int_element(successor_00015, [predecessor_00001, predecessor_00002, predecessor_00003, predecessor_00004, predecessor_00005, predecessor_00006, predecessor_00007, predecessor_00008, predecessor_00009, predecessor_00010, predecessor_00011, predecessor_00012, predecessor_00013, predecessor_00014], 15);
constraint gecode_table_int([predecessorOrder_00016, predecessorOrder_00006, predecessorOrder_00007, predecessor_00016],[3,2,4,7,3,3,4,7,3,4,3,6,3,4,4,6,3,4,4,7,3,4,5,6,3,4,6,6,3,4,7,6,3,4,8,6,3,4,9,6,3,4,10,6,3,4,11,6,3,4,12,6,3,4,13,6,3,4,14,6,3,4,15,6,3,4,16,6,3,5,4,7,3,6,4,7,3,7,4,7,3,8,4,7,3,9,4,7,3,10,4,7,3,11,4,7,3,12,4,7,3,13,4,7,3,14,4,7,3,15,4,7,3,16,4,7,4,2,5,7,4,3,5,7,4,4,5,7,4,5,3,6,4,5,4,6,4,5,5,6,4,5,5,7,4,5,6,6,4,5,7,6,4,5,8,6,4,5,9,6,4,5,10,6,4,5,11,6,4,5,12,6,4,5,13,6,4,5,14,6,4,5,15,6,4,5,16,6,4,6,5,7,4,7,5,7,4,8,5,7,4,9,5,7,4,10,5,7,4,11,5,7,4,12,5,7,4,13,5,7,4,14,5,7,4,15,5,7,4,16,5,7,5,2,6,7,5,3,6,7,5,4,6,7,5,5,6,7,5,6,3,6,5,6,4,6,5,6,5,6,5,6,6,6,5,6,6,7,5,6,7,6,5,6,8,6,5,6,9,6,5,6,10,6,5,6,11,6,5,6,12,6,5,6,13,6,5,6,14,6,5,6,15,6,5,6,16,6,5,7,6,7,5,8,6,7,5,9,6,7,5,10,6,7,5,11,6,7,5,12,6,7,5,13,6,7,5,14,6,7,5,15,6,7,5,16,6,7,6,2,7,7,6,3,7,7,6,4,7,7,6,5,7,7,6,6,7,7,6,7,3,6,6,7,4,6,6,7,5,6,6,7,6,6,6,7,7,6,6,7,7,7,6,7,8,6,6,7,9,6,6,7,10,6,6,7,11,6,6,7,12,6,6,7,13,6,6,7,14,6,6,7,15,6,6,7,16,6,6,8,7,7,6,9,7,7,6,10,7,7,6,11,7,7,6,12,7,7,6,13,7,7,6,14,7,7,6,15,7,7,6,16,7,7,7,2,8,7,7,3,8,7,7,4,8,7,7,5,8,7,7,6,8,7,7,7,8,7,7,8,3,6,7,8,4,6,7,8,5,6,7,8,6,6,7,8,7,6,7,8,8,6,7,8,8,7,7,8,9,6,7,8,10,6,7,8,11,6,7,8,12,6,7,8,13,6,7,8,14,6,7,8,15,6,7,8,16,6,7,9,8,7,7,10,8,7,7,11,8,7,7,12,8,7,7,13,8,7,7,14,8,7,7,15,8,7,7,16,8,7,8,2,9,7,8,3,9,7,8,4,9,7,8,5,9,7,8,6,9,7,8,7,9,7,8,8,9,7,8,9,3,6,8,9,4,6,8,9,5,6,8,9,6,6,8,9,7,6,8,9,8,6,8,9,9,6,8,9,9,7,8,9,10,6,8,9,11,6,8,9,12,6,8,9,13,6,8,9,14,6,8,9,15,6,8,9,16,6,8,10,9,7,8,11,9,7,8,12,9,7,8,13,9,7,8,14,9,7,8,15,9,7,8,16,9,7,9,2,10,7,9,3,10,7,9,4,10,7,9,5,10,7,9,6,10,7,9,7,10,7,9,8,10,7,9,9,10,7,9,10,3,6,9,10,4,6,9,10,5,6,9,10,6,6,9,10,7,6,9,10,8,6,9,10,9,6,9,10,10,6,9,10,10,7,9,10,11,6,9,10,12,6,9,10,13,6,9,10,14,6,9,10,15,6,9,10,16,6,9,11,10,7,9,12,10,7,9,13,10,7,9,14,10,7,9,15,10,7,9,16,10,7,10,2,11,7,10,3,11,7,10,4,11,7,10,5,11,7,10,6,11,7,10,7,11,7,10,8,11,7,10,9,11,7,10,10,11,7,10,11,3,6,10,11,4,6,10,11,5,6,10,11,6,6,10,11,7,6,10,11,8,6,10,11,9,6,10,11,10,6,10,11,11,6,10,11,11,7,10,11,12,6,10,11,13,6,10,11,14,6,10,11,15,6,10,11,16,6,10,12,11,7,10,13,11,7,10,14,11,7,10,15,11,7,10,16,11,7,11,2,12,7,11,3,12,7,11,4,12,7,11,5,12,7,11,6,12,7,11,7,12,7,11,8,12,7,11,9,12,7,11,10,12,7,11,11,12,7,11,12,3,6,11,12,4,6,11,12,5,6,11,12,6,6,11,12,7,6,11,12,8,6,11,12,9,6,11,12,10,6,11,12,11,6,11,12,12,6,11,12,12,7,11,12,13,6,11,12,14,6,11,12,15,6,11,12,16,6,11,13,12,7,11,14,12,7,11,15,12,7,11,16,12,7,12,2,13,7,12,3,13,7,12,4,13,7,12,5,13,7,12,6,13,7,12,7,13,7,12,8,13,7,12,9,13,7,12,10,13,7,12,11,13,7,12,12,13,7,12,13,3,6,12,13,4,6,12,13,5,6,12,13,6,6,12,13,7,6,12,13,8,6,12,13,9,6,12,13,10,6,12,13,11,6,12,13,12,6,12,13,13,6,12,13,13,7,12,13,14,6,12,13,15,6,12,13,16,6,12,14,13,7,12,15,13,7,12,16,13,7,13,2,14,7,13,3,14,7,13,4,14,7,13,5,14,7,13,6,14,7,13,7,14,7,13,8,14,7,13,9,14,7,13,10,14,7,13,11,14,7,13,12,14,7,13,13,14,7,13,14,3,6,13,14,4,6,13,14,5,6,13,14,6,6,13,14,7,6,13,14,8,6,13,14,9,6,13,14,10,6,13,14,11,6,13,14,12,6,13,14,13,6,13,14,14,6,13,14,14,7,13,14,15,6,13,14,16,6,13,15,14,7,13,16,14,7,14,2,15,7,14,3,15,7,14,4,15,7,14,5,15,7,14,6,15,7,14,7,15,7,14,8,15,7,14,9,15,7,14,10,15,7,14,11,15,7,14,12,15,7,14,13,15,7,14,14,15,7,14,15,3,6,14,15,4,6,14,15,5,6,14,15,6,6,14,15,7,6,14,15,8,6,14,15,9,6,14,15,10,6,14,15,11,6,14,15,12,6,14,15,13,6,14,15,14,6,14,15,15,6,14,15,15,7,14,15,16,6,14,16,15,7,15,2,16,7,15,3,16,7,15,4,16,7,15,5,16,7,15,6,16,7,15,7,16,7,15,8,16,7,15,9,16,7,15,10,16,7,15,11,16,7,15,12,16,7,15,13,16,7,15,14,16,7,15,15,16,7,15,16,3,6,15,16,4,6,15,16,5,6,15,16,6,6,15,16,7,6,15,16,8,6,15,16,9,6,15,16,10,6,15,16,11,6,15,16,12,6,15,16,13,6,15,16,14,6,15,16,15,6,15,16,16,6,15,16,16,7,]);
constraint bool_clause([aux71_BOOL,aux167_BOOL],[]);
constraint array_var_int_element(aux32, [predecessor_00002, predecessor_00003, predecessor_00004, predecessor_00005, predecessor_00006, predecessor_00007, predecessor_00008, predecessor_00009, predecessor_00010, predecessor_00011, predecessor_00012, predecessor_00013, predecessor_00014], 1);
constraint array_var_int_element(aux34, [predecessorOrder_00002, predecessorOrder_00003, predecessorOrder_00004, predecessorOrder_00005, predecessorOrder_00006, predecessorOrder_00007, predecessorOrder_00008, predecessorOrder_00009, predecessorOrder_00010, predecessorOrder_00011, predecessorOrder_00012, predecessorOrder_00013, predecessorOrder_00014, predecessorOrder_00015], 2);
constraint int_lin_eq([1,1,-1],[successorOrder_00007,1,aux86],0);
constraint array_var_int_element(aux33, [successorOrder_00006, successorOrder_00007, successorOrder_00008, successorOrder_00009, successorOrder_00010, successorOrder_00011, successorOrder_00012, successorOrder_00013, successorOrder_00014, successorOrder_00015, successorOrder_00016], aux86);
constraint int_lin_eq([1,-1,1,1],[aux168,aux87,slack_00002,arrivalTime_00002],0);
constraint array_var_int_element(successor_00002, [arrivalTime_00001, arrivalTime_00002, arrivalTime_00003, arrivalTime_00004, arrivalTime_00005, arrivalTime_00006, arrivalTime_00007, arrivalTime_00008, arrivalTime_00009, arrivalTime_00010, arrivalTime_00011, arrivalTime_00012, arrivalTime_00013, arrivalTime_00014], aux87);
constraint array_var_int_element(aux35, [predecessorOrder_00002, predecessorOrder_00003, predecessorOrder_00004, predecessorOrder_00005, predecessorOrder_00006, predecessorOrder_00007, predecessorOrder_00008, predecessorOrder_00009, predecessorOrder_00010, predecessorOrder_00011, predecessorOrder_00012, predecessorOrder_00013, predecessorOrder_00014, predecessorOrder_00015], aux88);
constraint int_lin_eq([1,-1,1],[1,aux88,predecessorOrder_00008],0);
constraint int_lin_eq([1,-1,1,1],[aux169,aux89,slack_00005,arrivalTime_00005],0);
constraint array_var_int_element(successor_00005, [arrivalTime_00001, arrivalTime_00002, arrivalTime_00003, arrivalTime_00004, arrivalTime_00005, arrivalTime_00006, arrivalTime_00007, arrivalTime_00008, arrivalTime_00009, arrivalTime_00010, arrivalTime_00011, arrivalTime_00012, arrivalTime_00013, arrivalTime_00014], aux89);
constraint array_var_int_element(successor_00014, [load_00001, load_00002, load_00003, load_00004, load_00005, load_00006, load_00007, load_00008, load_00009, load_00010, load_00011, load_00012, load_00013], aux90);
constraint int_lin_eq([1,1,-1],[31,load_00014,aux90],0);
constraint int_lin_eq([1,1,-1],[-122,load_00002,aux91],0);
constraint array_var_int_element(successor_00002, [load_00001, load_00002, load_00003, load_00004, load_00005, load_00006, load_00007, load_00008, load_00009, load_00010, load_00011, load_00012, load_00013, load_00014], aux91);
constraint int_lin_eq([1,1,-1],[-63,load_00004,aux92],0);
constraint array_var_int_element(successor_00004, [load_00001, load_00002, load_00003, load_00004, load_00005, load_00006, load_00007, load_00008, load_00009, load_00010, load_00011, load_00012, load_00013, load_00014], aux92);
constraint int_lin_eq([1,1,-1],[57,load_00008,aux93],0);
constraint array_var_int_element(successor_00008, [load_00001, load_00002, load_00003, load_00004, load_00005, load_00006, load_00007, load_00008, load_00009, load_00010, load_00011, load_00012, load_00013, load_00014], aux93);
constraint int_lin_eq([1,1,-1],[63,load_00011,aux94],0);
constraint array_var_int_element(successor_00011, [load_00001, load_00002, load_00003, load_00004, load_00005, load_00006, load_00007, load_00008, load_00009, load_00010, load_00011, load_00012, load_00013, load_00014], aux94);
constraint int_lin_eq([1,1,-1],[101,load_00013,aux95],0);
constraint array_var_int_element(successor_00013, [load_00001, load_00002, load_00003, load_00004, load_00005, load_00006, load_00007, load_00008, load_00009, load_00010, load_00011, load_00012, load_00013, load_00014], aux95);
constraint int_lin_eq([1,1,-1],[122,load_00009,aux96],0);
constraint array_var_int_element(successor_00009, [load_00001, load_00002, load_00003, load_00004, load_00005, load_00006, load_00007, load_00008, load_00009, load_00010, load_00011, load_00012, load_00013, load_00014], aux96);
constraint int_lin_eq([1,1,-1],[-145,load_00003,aux97],0);
constraint array_var_int_element(successor_00003, [load_00001, load_00002, load_00003, load_00004, load_00005, load_00006, load_00007, load_00008, load_00009, load_00010, load_00011, load_00012, load_00013, load_00014], aux97);
constraint int_lin_eq([1,1,-1],[-146,load_00005,aux98],0);
constraint array_var_int_element(successor_00005, [load_00001, load_00002, load_00003, load_00004, load_00005, load_00006, load_00007, load_00008, load_00009, load_00010, load_00011, load_00012, load_00013, load_00014], aux98);
constraint int_lin_eq([1,1,-1],[145,load_00010,aux99],0);
constraint array_var_int_element(successor_00010, [load_00001, load_00002, load_00003, load_00004, load_00005, load_00006, load_00007, load_00008, load_00009, load_00010, load_00011, load_00012, load_00013, load_00014], aux99);
constraint int_lin_eq([-1,1,1],[aux100,146,load_00012],0);
constraint array_var_int_element(successor_00012, [load_00001, load_00002, load_00003, load_00004, load_00005, load_00006, load_00007, load_00008, load_00009, load_00010, load_00011, load_00012, load_00013, load_00014], aux100);
constraint int_lin_eq([-1,1,1,1],[aux101,aux170,slack_00006,arrivalTime_00006],0);
constraint array_var_int_element(successor_00006, [arrivalTime_00001, arrivalTime_00002, arrivalTime_00003, arrivalTime_00004, arrivalTime_00005, arrivalTime_00006, arrivalTime_00007, arrivalTime_00008, arrivalTime_00009, arrivalTime_00010, arrivalTime_00011, arrivalTime_00012, arrivalTime_00013, arrivalTime_00014, arrivalTime_00015, arrivalTime_00016], aux101);
constraint int_lin_eq([-1,1,1],[aux102,-101,load_00006],0);
constraint array_var_int_element(successor_00006, [load_00001, load_00002, load_00003, load_00004, load_00005, load_00006, load_00007, load_00008, load_00009, load_00010, load_00011, load_00012, load_00013, load_00014, load_00015, load_00016], aux102);
constraint int_lin_eq([-1,1,1,1],[aux103,aux171,slack_00007,arrivalTime_00007],0);
constraint array_var_int_element(aux33, [arrivalTime_00006, arrivalTime_00007, arrivalTime_00008, arrivalTime_00009, arrivalTime_00010, arrivalTime_00011, arrivalTime_00012, arrivalTime_00013, arrivalTime_00014, arrivalTime_00015, arrivalTime_00016], aux103);
constraint int_lin_eq([-1,1,1,1],[aux104,aux172,slack_00008,arrivalTime_00008],0);
constraint array_var_int_element(successor_00008, [arrivalTime_00001, arrivalTime_00002, arrivalTime_00003, arrivalTime_00004, arrivalTime_00005, arrivalTime_00006, arrivalTime_00007, arrivalTime_00008, arrivalTime_00009, arrivalTime_00010, arrivalTime_00011, arrivalTime_00012, arrivalTime_00013, arrivalTime_00014], aux104);
constraint int_lin_eq([-1,1,1,1],[aux105,aux173,slack_00009,arrivalTime_00009],0);
constraint array_var_int_element(successor_00009, [arrivalTime_00001, arrivalTime_00002, arrivalTime_00003, arrivalTime_00004, arrivalTime_00005, arrivalTime_00006, arrivalTime_00007, arrivalTime_00008, arrivalTime_00009, arrivalTime_00010, arrivalTime_00011, arrivalTime_00012, arrivalTime_00013, arrivalTime_00014], aux105);
constraint int_lin_eq([-1,1,1,1],[aux106,aux174,slack_00010,arrivalTime_00010],0);
constraint array_var_int_element(successor_00010, [arrivalTime_00001, arrivalTime_00002, arrivalTime_00003, arrivalTime_00004, arrivalTime_00005, arrivalTime_00006, arrivalTime_00007, arrivalTime_00008, arrivalTime_00009, arrivalTime_00010, arrivalTime_00011, arrivalTime_00012, arrivalTime_00013, arrivalTime_00014], aux106);
constraint int_lin_eq([-1,1,1,1],[aux107,aux175,slack_00011,arrivalTime_00011],0);
constraint array_var_int_element(successor_00011, [arrivalTime_00001, arrivalTime_00002, arrivalTime_00003, arrivalTime_00004, arrivalTime_00005, arrivalTime_00006, arrivalTime_00007, arrivalTime_00008, arrivalTime_00009, arrivalTime_00010, arrivalTime_00011, arrivalTime_00012, arrivalTime_00013, arrivalTime_00014], aux107);
constraint int_lin_eq([-1,1,1,1],[aux108,aux176,slack_00012,arrivalTime_00012],0);
constraint array_var_int_element(successor_00012, [arrivalTime_00001, arrivalTime_00002, arrivalTime_00003, arrivalTime_00004, arrivalTime_00005, arrivalTime_00006, arrivalTime_00007, arrivalTime_00008, arrivalTime_00009, arrivalTime_00010, arrivalTime_00011, arrivalTime_00012, arrivalTime_00013, arrivalTime_00014], aux108);
constraint int_lin_eq([-1,1,1,1],[aux109,aux177,slack_00013,arrivalTime_00013],0);
constraint array_var_int_element(successor_00013, [arrivalTime_00001, arrivalTime_00002, arrivalTime_00003, arrivalTime_00004, arrivalTime_00005, arrivalTime_00006, arrivalTime_00007, arrivalTime_00008, arrivalTime_00009, arrivalTime_00010, arrivalTime_00011, arrivalTime_00012, arrivalTime_00013, arrivalTime_00014], aux109);
constraint int_lin_eq([-1,1,1,1],[aux110,aux178,slack_00015,arrivalTime_00015],0);
constraint array_var_int_element(successor_00015, [arrivalTime_00001, arrivalTime_00002, arrivalTime_00003, arrivalTime_00004, arrivalTime_00005, arrivalTime_00006, arrivalTime_00007, arrivalTime_00008, arrivalTime_00009, arrivalTime_00010, arrivalTime_00011, arrivalTime_00012, arrivalTime_00013, arrivalTime_00014], aux110);
constraint int_lin_eq([-1,1,1,1],[aux111,aux179,slack_00001,arrivalTime_00001],0);
constraint array_var_int_element(aux32, [arrivalTime_00002, arrivalTime_00003, arrivalTime_00004, arrivalTime_00005, arrivalTime_00006, arrivalTime_00007, arrivalTime_00008, arrivalTime_00009, arrivalTime_00010, arrivalTime_00011, arrivalTime_00012, arrivalTime_00013, arrivalTime_00014], aux111);
constraint int_lin_eq([-1,1,1,1],[aux112,aux180,slack_00003,arrivalTime_00003],0);
constraint array_var_int_element(successor_00003, [arrivalTime_00001, arrivalTime_00002, arrivalTime_00003, arrivalTime_00004, arrivalTime_00005, arrivalTime_00006, arrivalTime_00007, arrivalTime_00008, arrivalTime_00009, arrivalTime_00010, arrivalTime_00011, arrivalTime_00012, arrivalTime_00013, arrivalTime_00014], aux112);
constraint array_var_int_element(successor_00014, [arrivalTime_00001, arrivalTime_00002, arrivalTime_00003, arrivalTime_00004, arrivalTime_00005, arrivalTime_00006, arrivalTime_00007, arrivalTime_00008, arrivalTime_00009, arrivalTime_00010, arrivalTime_00011, arrivalTime_00012, arrivalTime_00013], aux113);
constraint int_lin_eq([-1,1,1,1],[aux113,aux181,slack_00014,arrivalTime_00014],0);
constraint int_lin_eq([-1,1,1],[aux114,-57,load_00001],0);
constraint array_var_int_element(aux32, [load_00002, load_00003, load_00004, load_00005, load_00006, load_00007, load_00008, load_00009, load_00010, load_00011, load_00012, load_00013, load_00014], aux114);
constraint int_lin_eq([-1,1,1],[aux115,-31,load_00007],0);
constraint array_var_int_element(aux33, [load_00006, load_00007, load_00008, load_00009, load_00010, load_00011, load_00012, load_00013, load_00014, load_00015, load_00016], aux115);
constraint int_lin_eq([-1,1,1,1],[aux116,aux182,slack_00004,arrivalTime_00004],0);
constraint array_var_int_element(successor_00004, [arrivalTime_00001, arrivalTime_00002, arrivalTime_00003, arrivalTime_00004, arrivalTime_00005, arrivalTime_00006, arrivalTime_00007, arrivalTime_00008, arrivalTime_00009, arrivalTime_00010, arrivalTime_00011, arrivalTime_00012, arrivalTime_00013, arrivalTime_00014], aux116);

solve :: int_search([successor_00001, successor_00002, successor_00003, successor_00004, successor_00005, successor_00006, successor_00007, successor_00008, successor_00009, successor_00010, successor_00011, successor_00012, successor_00013, successor_00014, successor_00015, 15, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, arrivalTime_00001, arrivalTime_00002, arrivalTime_00003, arrivalTime_00004, arrivalTime_00005, arrivalTime_00006, arrivalTime_00007, arrivalTime_00008, arrivalTime_00009, arrivalTime_00010, arrivalTime_00011, arrivalTime_00012, arrivalTime_00013, arrivalTime_00014, arrivalTime_00015, arrivalTime_00016], input_order, indomain_min, complete)
minimize objective;
