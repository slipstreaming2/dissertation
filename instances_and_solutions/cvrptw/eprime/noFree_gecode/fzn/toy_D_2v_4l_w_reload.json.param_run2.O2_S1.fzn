predicate gecode_global_cardinality(array[int] of var int: x, array[int] of int: cover, array[int] of var int: counts);
array [1..8] of int: Demand = [15, 30, 10, 50, -15, -30, -10, -50];
array [1..12] of int: aux0 = [53, 53, 31, 29, 48, 48, 48, 48, 48, 48, 48, 48];
array [1..2] of int: Capacity = [180, 150];
var {2,3,4,5,6,7,8,11,12}: successor_00001:: output_var ;
var {1,3,4,5,6,7,8,11,12}: successor_00002:: output_var ;
var {1,2,4,5,6,7,8,11,12}: successor_00003:: output_var ;
var {1,2,3,5,6,7,8,11,12}: successor_00004:: output_var ;
var {1,2,3,4,6,7,8,11,12}: successor_00005:: output_var ;
var {1,2,3,4,5,7,8,11,12}: successor_00006:: output_var ;
var {1,2,3,4,5,6,8,11,12}: successor_00007:: output_var ;
var {1,2,3,4,5,6,7,11,12}: successor_00008:: output_var ;
var {1,2,3,4,5,6,7,8,11}: successor_00009:: output_var ;
var {1,2,3,4,5,6,7,8,12}: successor_00010:: output_var ;
var 2..10: predecessor_00001:: output_var ;
var {1,3,4,5,6,7,8,9,10}: predecessor_00002:: output_var ;
var {1,2,4,5,6,7,8,9,10}: predecessor_00003:: output_var ;
var {1,2,3,5,6,7,8,9,10}: predecessor_00004:: output_var ;
var {1,2,3,4,6,7,8,9,10}: predecessor_00005:: output_var ;
var {1,2,3,4,5,7,8,9,10}: predecessor_00006:: output_var ;
var {1,2,3,4,5,6,8,9,10}: predecessor_00007:: output_var ;
var {1,2,3,4,5,6,7,9,10}: predecessor_00008:: output_var ;
var 1..9: predecessor_00011:: output_var ;
var {1,2,3,4,5,6,7,8,10}: predecessor_00012:: output_var ;
var 1..2: vehicle_00001:: output_var ;
var 1..2: vehicle_00002:: output_var ;
var 1..2: vehicle_00003:: output_var ;
var 1..2: vehicle_00004:: output_var ;
var 0..165: load_00001:: output_var ;
var 0..150: load_00002:: output_var ;
var 0..170: load_00003:: output_var ;
var 0..130: load_00004:: output_var ;
var 15..180: load_00005:: output_var ;
var 30..180: load_00006:: output_var ;
var 10..180: load_00007:: output_var ;
var 50..180: load_00008:: output_var ;
var 0..180: load_00009:: output_var ;
var 0..180: load_00010:: output_var ;
var 0..180: load_00011:: output_var ;
var 0..180: load_00012:: output_var ;
var 54..594: arrivalTime_00001:: output_var ;
var 54..594: arrivalTime_00002:: output_var ;
var 54..594: arrivalTime_00003:: output_var ;
var 54..594: arrivalTime_00004:: output_var ;
var 0..594: arrivalTime_00005:: output_var ;
var 0..594: arrivalTime_00006:: output_var ;
var 0..594: arrivalTime_00007:: output_var ;
var 0..594: arrivalTime_00008:: output_var ;
var 0..460588: arrivalTime_00009:: output_var ;
var 0..460588: arrivalTime_00010:: output_var ;
var 0..460588: arrivalTime_00011:: output_var ;
var 0..460588: arrivalTime_00012:: output_var ;
var 0..460500: slack_00001:: output_var ;
var 0..460499: slack_00002:: output_var ;
var 0..460509: slack_00003:: output_var ;
var 0..460510: slack_00004:: output_var ;
var 0..460588: slack_00005:: output_var ;
var 0..460588: slack_00006:: output_var ;
var 0..460588: slack_00007:: output_var ;
var 0..460588: slack_00008:: output_var ;
var 0..460588: slack_00009:: output_var ;
var 0..460588: slack_00010:: output_var ;
var 0..460588: objective:: output_var ;
var 2..12: successorOrder_00002:: output_var ;
var 2..12: successorOrder_00003:: output_var ;
var 2..12: successorOrder_00004:: output_var ;
var 2..12: successorOrder_00005:: output_var ;
var 2..12: successorOrder_00006:: output_var ;
var 2..12: successorOrder_00007:: output_var ;
var 2..12: successorOrder_00008:: output_var ;
var 3..12: successorOrder_00009:: output_var ;
var 3..12: successorOrder_00010:: output_var ;
var 2..11: successorOrder_00011:: output_var ;
var 2..11: successorOrder_00012:: output_var ;
var 2..12: predecessorOrder_00002:: output_var ;
var 2..12: predecessorOrder_00003:: output_var ;
var 2..12: predecessorOrder_00004:: output_var ;
var 2..12: predecessorOrder_00005:: output_var ;
var 2..12: predecessorOrder_00006:: output_var ;
var 2..12: predecessorOrder_00007:: output_var ;
var 2..12: predecessorOrder_00008:: output_var ;
var 2..11: predecessorOrder_00009:: output_var ;
var 2..11: predecessorOrder_00010:: output_var ;
var 3..12: predecessorOrder_00011:: output_var ;
var 3..12: predecessorOrder_00012:: output_var ;
var 1..12: aux1:: var_is_introduced ;
var 1..12: aux2:: var_is_introduced ;
var 1..12: aux3:: var_is_introduced ;
var 1..12: aux4:: var_is_introduced ;
var 1..12: aux5:: var_is_introduced ;
var 1..12: aux6:: var_is_introduced ;
var 1..12: aux7:: var_is_introduced ;
var 1..12: aux8:: var_is_introduced ;
var 1..12: aux9:: var_is_introduced ;
var 1..12: aux10:: var_is_introduced ;
var 1..12: aux11:: var_is_introduced ;
var 1..12: aux12:: var_is_introduced ;
var 1..12: aux13:: var_is_introduced ;
var 1..12: aux14:: var_is_introduced ;
var 1..12: aux15:: var_is_introduced ;
var 1..12: aux16:: var_is_introduced ;
var 1..12: aux17:: var_is_introduced ;
var 1..12: aux18:: var_is_introduced ;
var {150,180}: aux19:: var_is_introduced ;
var {150,180}: aux20:: var_is_introduced ;
var bool: aux21_BOOL:: var_is_introduced ;
var bool: aux22_BOOL:: var_is_introduced ;
var bool: aux23_BOOL:: var_is_introduced ;
var bool: aux24_BOOL:: var_is_introduced ;
var bool: aux25_BOOL:: var_is_introduced ;
var bool: aux26_BOOL:: var_is_introduced ;
var bool: aux27_BOOL:: var_is_introduced ;
var bool: aux28_BOOL:: var_is_introduced ;
var bool: aux29_BOOL:: var_is_introduced ;
var bool: aux30_BOOL:: var_is_introduced ;
var bool: aux31_BOOL:: var_is_introduced ;
var bool: aux32_BOOL:: var_is_introduced ;
var bool: aux33_BOOL:: var_is_introduced ;
var bool: aux34_BOOL:: var_is_introduced ;
var bool: aux35_BOOL:: var_is_introduced ;
var bool: aux36_BOOL:: var_is_introduced ;
var bool: aux37_BOOL:: var_is_introduced ;
var bool: aux38_BOOL:: var_is_introduced ;
var 1..9: aux39:: var_is_introduced ;
var {1,2,3,4,5,6,7,10,11}: aux40:: var_is_introduced ;
var 54..460588: aux41:: var_is_introduced ;
var 54..460588: aux42:: var_is_introduced ;
var 55..460588: aux43:: var_is_introduced ;
var 55..460588: aux44:: var_is_introduced ;
var 0..460588: aux45:: var_is_introduced ;
var 0..460588: aux46:: var_is_introduced ;
var 0..460588: aux47:: var_is_introduced ;
var 0..460588: aux48:: var_is_introduced ;
var 0..460588: aux49:: var_is_introduced ;
var 0..460588: aux50:: var_is_introduced ;
var 15..180: aux51:: var_is_introduced ;
var 30..180: aux52:: var_is_introduced ;
var 10..180: aux53:: var_is_introduced ;
var 50..180: aux54:: var_is_introduced ;
var 0..165: aux55:: var_is_introduced ;
var 0..150: aux56:: var_is_introduced ;
var 0..170: aux57:: var_is_introduced ;
var 0..130: aux58:: var_is_introduced ;
var bool: aux59_BOOL:: var_is_introduced ;
var bool: aux60_BOOL:: var_is_introduced ;
var bool: aux61_BOOL:: var_is_introduced ;
var bool: aux62_BOOL:: var_is_introduced ;
var bool: aux63_BOOL:: var_is_introduced ;
var bool: aux64_BOOL:: var_is_introduced ;
var bool: aux65_BOOL:: var_is_introduced ;
var bool: aux66_BOOL:: var_is_introduced ;
var bool: aux67_BOOL:: var_is_introduced ;
var bool: aux68_BOOL:: var_is_introduced ;
var bool: aux69_BOOL:: var_is_introduced ;
var bool: aux70_BOOL:: var_is_introduced ;
var bool: aux71_BOOL:: var_is_introduced ;
var bool: aux72_BOOL:: var_is_introduced ;
var bool: aux73_BOOL:: var_is_introduced ;
var bool: aux74_BOOL:: var_is_introduced ;
var bool: aux75_BOOL:: var_is_introduced ;
var bool: aux76_BOOL:: var_is_introduced ;
var bool: aux77_BOOL:: var_is_introduced ;
var bool: aux78_BOOL:: var_is_introduced ;
var bool: aux79_BOOL:: var_is_introduced ;
var bool: aux80_BOOL:: var_is_introduced ;
var bool: aux81_BOOL:: var_is_introduced ;
var bool: aux82_BOOL:: var_is_introduced ;
var bool: aux83_BOOL:: var_is_introduced ;
var bool: aux84_BOOL:: var_is_introduced ;
var bool: aux85_BOOL:: var_is_introduced ;
var bool: aux86_BOOL:: var_is_introduced ;
var bool: aux87_BOOL:: var_is_introduced ;
var bool: aux88_BOOL:: var_is_introduced ;
var bool: aux89_BOOL:: var_is_introduced ;
var bool: aux90_BOOL:: var_is_introduced ;
var bool: aux91_BOOL:: var_is_introduced ;
var bool: aux92_BOOL:: var_is_introduced ;
var bool: aux93_BOOL:: var_is_introduced ;
var bool: aux94_BOOL:: var_is_introduced ;
var {150,180}: aux95:: var_is_introduced ;
var {150,180}: aux96:: var_is_introduced ;
var {0,34,36,53}: aux97:: var_is_introduced ;
var {0,35,36,53}: aux98:: var_is_introduced ;
var {1,25,30,31}: aux99:: var_is_introduced ;
var {1,24,28,29}: aux100:: var_is_introduced ;
var {0,25,48}: aux101:: var_is_introduced ;
var {0,25,48}: aux102:: var_is_introduced ;
var {0,25,48}: aux103:: var_is_introduced ;
var {0,25,48}: aux104:: var_is_introduced ;
var {0,25,48}: aux105:: var_is_introduced ;
var {0,25,48}: aux106:: var_is_introduced ;
constraint int_eq_reif(aux5,1,aux59_BOOL);
constraint int_lin_eq_reif([1,1,-1],[successorOrder_00002,1,aux5],0,aux60_BOOL);
constraint int_eq_reif(aux7,1,aux61_BOOL);
constraint int_lin_eq_reif([1,1,-1],[successorOrder_00003,1,aux7],0,aux62_BOOL);
constraint int_eq_reif(aux6,1,aux63_BOOL);
constraint int_lin_eq_reif([1,1,-1],[successorOrder_00004,1,aux6],0,aux64_BOOL);
constraint int_eq_reif(aux2,1,aux65_BOOL);
constraint int_lin_eq_reif([1,1,-1],[successorOrder_00005,1,aux2],0,aux66_BOOL);
constraint int_eq_reif(aux1,1,aux67_BOOL);
constraint int_lin_eq_reif([1,1,-1],[successorOrder_00006,1,aux1],0,aux68_BOOL);
constraint int_eq_reif(aux4,1,aux69_BOOL);
constraint int_lin_eq_reif([1,1,-1],[successorOrder_00007,1,aux4],0,aux70_BOOL);
constraint int_eq_reif(aux3,1,aux71_BOOL);
constraint int_lin_eq_reif([1,1,-1],[successorOrder_00008,1,aux3],0,aux72_BOOL);
constraint int_eq_reif(1,aux9,aux73_BOOL);
constraint int_lin_eq_reif([1,1,-1],[successorOrder_00009,1,aux9],0,aux74_BOOL);
constraint int_eq_reif(aux8,1,aux75_BOOL);
constraint int_lin_eq_reif([1,1,-1],[successorOrder_00010,1,aux8],0,aux76_BOOL);
constraint int_eq_reif(aux11,1,aux77_BOOL);
constraint int_lin_eq_reif([1,-1,1],[1,aux11,predecessorOrder_00002],0,aux78_BOOL);
constraint int_eq_reif(aux10,1,aux79_BOOL);
constraint int_lin_eq_reif([1,-1,1],[1,aux10,predecessorOrder_00003],0,aux80_BOOL);
constraint int_eq_reif(aux15,1,aux81_BOOL);
constraint int_lin_eq_reif([1,-1,1],[1,aux15,predecessorOrder_00004],0,aux82_BOOL);
constraint int_eq_reif(aux14,1,aux83_BOOL);
constraint int_lin_eq_reif([1,-1,1],[1,aux14,predecessorOrder_00005],0,aux84_BOOL);
constraint int_eq_reif(aux13,1,aux85_BOOL);
constraint int_lin_eq_reif([1,-1,1],[1,aux13,predecessorOrder_00006],0,aux86_BOOL);
constraint int_eq_reif(aux12,1,aux87_BOOL);
constraint int_lin_eq_reif([1,-1,1],[1,aux12,predecessorOrder_00007],0,aux88_BOOL);
constraint int_eq_reif(aux16,1,aux89_BOOL);
constraint int_lin_eq_reif([1,-1,1],[1,aux16,predecessorOrder_00008],0,aux90_BOOL);
constraint int_eq_reif(1,aux18,aux91_BOOL);
constraint int_lin_eq_reif([1,-1,1],[1,aux18,predecessorOrder_00011],0,aux92_BOOL);
constraint int_eq_reif(aux17,1,aux93_BOOL);
constraint int_lin_eq_reif([1,-1,1],[1,aux17,predecessorOrder_00012],0,aux94_BOOL);
constraint array_var_int_element(vehicle_00002, [180, 150], aux95);
constraint array_var_int_element(vehicle_00004, [180, 150], aux96);
constraint array_var_int_element(aux40, [0, 36, 34, 53, 53, 53, 53, 53, 53, 53, 53], aux97);
constraint array_var_int_element(successor_00002, [0, 0, 36, 35, 53, 53, 53, 53, 53, 53, 53, 53], aux98);
constraint array_var_int_element(successor_00003, [30, 31, 0, 1, 25, 25, 25, 25, 25, 25, 25, 25], aux99);
constraint array_var_int_element(successor_00004, [28, 29, 1, 0, 24, 24, 24, 24, 24, 24, 24, 24], aux100);
constraint array_var_int_element(successor_00005, [48, 48, 25, 25, 0, 0, 0, 0, 0, 0, 0, 0], aux101);
constraint array_var_int_element(successor_00006, [48, 48, 25, 25, 0, 0, 0, 0, 0, 0, 0, 0], aux102);
constraint array_var_int_element(successor_00007, [48, 48, 25, 25, 0, 0, 0, 0, 0, 0, 0, 0], aux103);
constraint array_var_int_element(successor_00008, [48, 48, 25, 25, 0, 0, 0, 0, 0, 0, 0, 0], aux104);
constraint array_var_int_element(successor_00009, [48, 48, 25, 25, 0, 0, 0, 0, 0, 0, 0], aux105);
constraint array_var_int_element(successor_00010, [48, 48, 25, 25, 0, 0, 0, 0, 0, 0, 0, 0], aux106);
constraint array_var_int_element(successor_00006, [1, successorOrder_00002, successorOrder_00003, successorOrder_00004, successorOrder_00005, successorOrder_00006, successorOrder_00007, successorOrder_00008, successorOrder_00009, successorOrder_00010, successorOrder_00011, successorOrder_00012], aux1);
constraint array_var_int_element(successor_00005, [1, successorOrder_00002, successorOrder_00003, successorOrder_00004, successorOrder_00005, successorOrder_00006, successorOrder_00007, successorOrder_00008, successorOrder_00009, successorOrder_00010, successorOrder_00011, successorOrder_00012], aux2);
constraint array_var_int_element(successor_00008, [1, successorOrder_00002, successorOrder_00003, successorOrder_00004, successorOrder_00005, successorOrder_00006, successorOrder_00007, successorOrder_00008, successorOrder_00009, successorOrder_00010, successorOrder_00011, successorOrder_00012], aux3);
constraint array_var_int_element(successor_00007, [1, successorOrder_00002, successorOrder_00003, successorOrder_00004, successorOrder_00005, successorOrder_00006, successorOrder_00007, successorOrder_00008, successorOrder_00009, successorOrder_00010, successorOrder_00011, successorOrder_00012], aux4);
constraint array_var_int_element(successor_00002, [1, successorOrder_00002, successorOrder_00003, successorOrder_00004, successorOrder_00005, successorOrder_00006, successorOrder_00007, successorOrder_00008, successorOrder_00009, successorOrder_00010, successorOrder_00011, successorOrder_00012], aux5);
constraint array_var_int_element(successor_00004, [1, successorOrder_00002, successorOrder_00003, successorOrder_00004, successorOrder_00005, successorOrder_00006, successorOrder_00007, successorOrder_00008, successorOrder_00009, successorOrder_00010, successorOrder_00011, successorOrder_00012], aux6);
constraint array_var_int_element(successor_00003, [1, successorOrder_00002, successorOrder_00003, successorOrder_00004, successorOrder_00005, successorOrder_00006, successorOrder_00007, successorOrder_00008, successorOrder_00009, successorOrder_00010, successorOrder_00011, successorOrder_00012], aux7);
constraint array_var_int_element(successor_00010, [1, successorOrder_00002, successorOrder_00003, successorOrder_00004, successorOrder_00005, successorOrder_00006, successorOrder_00007, successorOrder_00008, successorOrder_00009, successorOrder_00010, successorOrder_00011, successorOrder_00012], aux8);
constraint array_var_int_element(successor_00009, [1, successorOrder_00002, successorOrder_00003, successorOrder_00004, successorOrder_00005, successorOrder_00006, successorOrder_00007, successorOrder_00008, successorOrder_00009, successorOrder_00010, successorOrder_00011], aux9);
constraint array_var_int_element(predecessor_00003, [1, predecessorOrder_00002, predecessorOrder_00003, predecessorOrder_00004, predecessorOrder_00005, predecessorOrder_00006, predecessorOrder_00007, predecessorOrder_00008, predecessorOrder_00009, predecessorOrder_00010], aux10);
constraint array_var_int_element(predecessor_00002, [1, predecessorOrder_00002, predecessorOrder_00003, predecessorOrder_00004, predecessorOrder_00005, predecessorOrder_00006, predecessorOrder_00007, predecessorOrder_00008, predecessorOrder_00009, predecessorOrder_00010], aux11);
constraint array_var_int_element(predecessor_00007, [1, predecessorOrder_00002, predecessorOrder_00003, predecessorOrder_00004, predecessorOrder_00005, predecessorOrder_00006, predecessorOrder_00007, predecessorOrder_00008, predecessorOrder_00009, predecessorOrder_00010], aux12);
constraint array_var_int_element(predecessor_00006, [1, predecessorOrder_00002, predecessorOrder_00003, predecessorOrder_00004, predecessorOrder_00005, predecessorOrder_00006, predecessorOrder_00007, predecessorOrder_00008, predecessorOrder_00009, predecessorOrder_00010], aux13);
constraint array_var_int_element(predecessor_00005, [1, predecessorOrder_00002, predecessorOrder_00003, predecessorOrder_00004, predecessorOrder_00005, predecessorOrder_00006, predecessorOrder_00007, predecessorOrder_00008, predecessorOrder_00009, predecessorOrder_00010], aux14);
constraint array_var_int_element(predecessor_00004, [1, predecessorOrder_00002, predecessorOrder_00003, predecessorOrder_00004, predecessorOrder_00005, predecessorOrder_00006, predecessorOrder_00007, predecessorOrder_00008, predecessorOrder_00009, predecessorOrder_00010], aux15);
constraint array_var_int_element(predecessor_00008, [1, predecessorOrder_00002, predecessorOrder_00003, predecessorOrder_00004, predecessorOrder_00005, predecessorOrder_00006, predecessorOrder_00007, predecessorOrder_00008, predecessorOrder_00009, predecessorOrder_00010], aux16);
constraint array_var_int_element(predecessor_00012, [1, predecessorOrder_00002, predecessorOrder_00003, predecessorOrder_00004, predecessorOrder_00005, predecessorOrder_00006, predecessorOrder_00007, predecessorOrder_00008, predecessorOrder_00009, predecessorOrder_00010], aux17);
constraint array_var_int_element(predecessor_00011, [1, predecessorOrder_00002, predecessorOrder_00003, predecessorOrder_00004, predecessorOrder_00005, predecessorOrder_00006, predecessorOrder_00007, predecessorOrder_00008, predecessorOrder_00009], aux18);
constraint array_var_int_element(vehicle_00003, [180, 150], aux19);
constraint array_var_int_element(vehicle_00001, [180, 150], aux20);
constraint int_ne_reif(successorOrder_00002,12,aux21_BOOL);
constraint int_ne_reif(successorOrder_00008,12,aux22_BOOL);
constraint int_ne_reif(successorOrder_00006,12,aux23_BOOL);
constraint int_ne_reif(12,predecessorOrder_00003,aux24_BOOL);
constraint int_ne_reif(12,predecessorOrder_00005,aux25_BOOL);
constraint int_ne_reif(12,predecessorOrder_00007,aux26_BOOL);
constraint int_ne_reif(successorOrder_00004,12,aux27_BOOL);
constraint int_ne_reif(successorOrder_00010,12,aux28_BOOL);
constraint int_ne_reif(12,predecessorOrder_00002,aux29_BOOL);
constraint int_ne_reif(12,predecessorOrder_00006,aux30_BOOL);
constraint int_ne_reif(12,predecessorOrder_00008,aux31_BOOL);
constraint int_ne_reif(12,predecessorOrder_00004,aux32_BOOL);
constraint int_ne_reif(12,predecessorOrder_00012,aux33_BOOL);
constraint int_ne_reif(successorOrder_00009,12,aux34_BOOL);
constraint int_ne_reif(12,predecessorOrder_00011,aux35_BOOL);
constraint int_ne_reif(successorOrder_00005,12,aux36_BOOL);
constraint int_ne_reif(successorOrder_00007,12,aux37_BOOL);
constraint int_ne_reif(successorOrder_00003,12,aux38_BOOL);
constraint int_lin_eq([1,1,-1],[predecessor_00001,-1,aux39],0);
constraint int_lin_eq([1,-1,1],[-1,aux40,successor_00001],0);
constraint all_different_int([successor_00001, successor_00002, successor_00003, successor_00004, successor_00005, successor_00006, successor_00007, successor_00008, successor_00009, successor_00010])::domain;
constraint all_different_int([successorOrder_00002, successorOrder_00003, successorOrder_00004, successorOrder_00005, successorOrder_00006, successorOrder_00007, successorOrder_00008, successorOrder_00009, successorOrder_00010, successorOrder_00011, successorOrder_00012])::domain;
constraint all_different_int([predecessor_00001, predecessor_00002, predecessor_00003, predecessor_00004, predecessor_00005, predecessor_00006, predecessor_00007, predecessor_00008, predecessor_00011, predecessor_00012])::domain;
constraint all_different_int([predecessorOrder_00002, predecessorOrder_00003, predecessorOrder_00004, predecessorOrder_00005, predecessorOrder_00006, predecessorOrder_00007, predecessorOrder_00008, predecessorOrder_00009, predecessorOrder_00010, predecessorOrder_00011, predecessorOrder_00012])::domain;
constraint int_lin_eq([-1,-1,-1,1,1],[objective,arrivalTime_00009,arrivalTime_00010,arrivalTime_00011,arrivalTime_00012],0);
constraint array_var_int_element(aux39, [successor_00002, successor_00003, successor_00004, successor_00005, successor_00006, successor_00007, successor_00008, successor_00009, successor_00010], 1);
constraint array_var_int_element(predecessor_00002, [successor_00001, successor_00002, successor_00003, successor_00004, successor_00005, successor_00006, successor_00007, successor_00008, successor_00009, successor_00010], 2);
constraint array_var_int_element(predecessor_00003, [successor_00001, successor_00002, successor_00003, successor_00004, successor_00005, successor_00006, successor_00007, successor_00008, successor_00009, successor_00010], 3);
constraint array_var_int_element(predecessor_00004, [successor_00001, successor_00002, successor_00003, successor_00004, successor_00005, successor_00006, successor_00007, successor_00008, successor_00009, successor_00010], 4);
constraint array_var_int_element(predecessor_00005, [successor_00001, successor_00002, successor_00003, successor_00004, successor_00005, successor_00006, successor_00007, successor_00008, successor_00009, successor_00010], 5);
constraint array_var_int_element(predecessor_00006, [successor_00001, successor_00002, successor_00003, successor_00004, successor_00005, successor_00006, successor_00007, successor_00008, successor_00009, successor_00010], 6);
constraint array_var_int_element(predecessor_00007, [successor_00001, successor_00002, successor_00003, successor_00004, successor_00005, successor_00006, successor_00007, successor_00008, successor_00009, successor_00010], 7);
constraint array_var_int_element(predecessor_00008, [successor_00001, successor_00002, successor_00003, successor_00004, successor_00005, successor_00006, successor_00007, successor_00008, successor_00009, successor_00010], 8);
constraint array_var_int_element(predecessor_00011, [successor_00001, successor_00002, successor_00003, successor_00004, successor_00005, successor_00006, successor_00007, successor_00008, successor_00009], 11);
constraint array_var_int_element(predecessor_00012, [successor_00001, successor_00002, successor_00003, successor_00004, successor_00005, successor_00006, successor_00007, successor_00008, successor_00009, successor_00010], 12);
constraint array_var_int_element(aux40, [predecessor_00002, predecessor_00003, predecessor_00004, predecessor_00005, predecessor_00006, predecessor_00007, predecessor_00008, 12, 11, predecessor_00011, predecessor_00012], 1);
constraint array_var_int_element(successor_00002, [predecessor_00001, predecessor_00002, predecessor_00003, predecessor_00004, predecessor_00005, predecessor_00006, predecessor_00007, predecessor_00008, 12, 11, predecessor_00011, predecessor_00012], 2);
constraint array_var_int_element(successor_00003, [predecessor_00001, predecessor_00002, predecessor_00003, predecessor_00004, predecessor_00005, predecessor_00006, predecessor_00007, predecessor_00008, 12, 11, predecessor_00011, predecessor_00012], 3);
constraint array_var_int_element(successor_00004, [predecessor_00001, predecessor_00002, predecessor_00003, predecessor_00004, predecessor_00005, predecessor_00006, predecessor_00007, predecessor_00008, 12, 11, predecessor_00011, predecessor_00012], 4);
constraint array_var_int_element(successor_00005, [predecessor_00001, predecessor_00002, predecessor_00003, predecessor_00004, predecessor_00005, predecessor_00006, predecessor_00007, predecessor_00008, 12, 11, predecessor_00011, predecessor_00012], 5);
constraint array_var_int_element(successor_00006, [predecessor_00001, predecessor_00002, predecessor_00003, predecessor_00004, predecessor_00005, predecessor_00006, predecessor_00007, predecessor_00008, 12, 11, predecessor_00011, predecessor_00012], 6);
constraint array_var_int_element(successor_00007, [predecessor_00001, predecessor_00002, predecessor_00003, predecessor_00004, predecessor_00005, predecessor_00006, predecessor_00007, predecessor_00008, 12, 11, predecessor_00011, predecessor_00012], 7);
constraint array_var_int_element(successor_00008, [predecessor_00001, predecessor_00002, predecessor_00003, predecessor_00004, predecessor_00005, predecessor_00006, predecessor_00007, predecessor_00008, 12, 11, predecessor_00011, predecessor_00012], 8);
constraint array_var_int_element(successor_00009, [predecessor_00001, predecessor_00002, predecessor_00003, predecessor_00004, predecessor_00005, predecessor_00006, predecessor_00007, predecessor_00008, 12, 11, predecessor_00011], 9);
constraint array_var_int_element(successor_00010, [predecessor_00001, predecessor_00002, predecessor_00003, predecessor_00004, predecessor_00005, predecessor_00006, predecessor_00007, predecessor_00008, 12, 11, predecessor_00011, predecessor_00012], 10);
constraint array_var_int_element(aux40, [successorOrder_00002, successorOrder_00003, successorOrder_00004, successorOrder_00005, successorOrder_00006, successorOrder_00007, successorOrder_00008, successorOrder_00009, successorOrder_00010, successorOrder_00011, successorOrder_00012], 2);
constraint bool_clause([aux21_BOOL,aux59_BOOL],[]);
constraint bool_clause([aux60_BOOL],[aux21_BOOL]);
constraint bool_clause([aux38_BOOL,aux61_BOOL],[]);
constraint bool_clause([aux62_BOOL],[aux38_BOOL]);
constraint bool_clause([aux27_BOOL,aux63_BOOL],[]);
constraint bool_clause([aux64_BOOL],[aux27_BOOL]);
constraint bool_clause([aux36_BOOL,aux65_BOOL],[]);
constraint bool_clause([aux66_BOOL],[aux36_BOOL]);
constraint bool_clause([aux23_BOOL,aux67_BOOL],[]);
constraint bool_clause([aux68_BOOL],[aux23_BOOL]);
constraint bool_clause([aux37_BOOL,aux69_BOOL],[]);
constraint bool_clause([aux70_BOOL],[aux37_BOOL]);
constraint bool_clause([aux22_BOOL,aux71_BOOL],[]);
constraint bool_clause([aux72_BOOL],[aux22_BOOL]);
constraint bool_clause([aux34_BOOL,aux73_BOOL],[]);
constraint bool_clause([aux74_BOOL],[aux34_BOOL]);
constraint bool_clause([aux28_BOOL,aux75_BOOL],[]);
constraint bool_clause([aux76_BOOL],[aux28_BOOL]);
constraint int_lin_eq([-1,1,1],[successorOrder_00010,successorOrder_00011,1],0);
constraint int_lin_eq([-1,1,1],[successorOrder_00009,successorOrder_00012,1],0);
constraint array_var_int_element(aux39, [predecessorOrder_00002, predecessorOrder_00003, predecessorOrder_00004, predecessorOrder_00005, predecessorOrder_00006, predecessorOrder_00007, predecessorOrder_00008, predecessorOrder_00009, predecessorOrder_00010], 2);
constraint bool_clause([aux29_BOOL,aux77_BOOL],[]);
constraint bool_clause([aux78_BOOL],[aux29_BOOL]);
constraint bool_clause([aux24_BOOL,aux79_BOOL],[]);
constraint bool_clause([aux80_BOOL],[aux24_BOOL]);
constraint bool_clause([aux32_BOOL,aux81_BOOL],[]);
constraint bool_clause([aux82_BOOL],[aux32_BOOL]);
constraint bool_clause([aux25_BOOL,aux83_BOOL],[]);
constraint bool_clause([aux84_BOOL],[aux25_BOOL]);
constraint bool_clause([aux30_BOOL,aux85_BOOL],[]);
constraint bool_clause([aux86_BOOL],[aux30_BOOL]);
constraint bool_clause([aux26_BOOL,aux87_BOOL],[]);
constraint bool_clause([aux88_BOOL],[aux26_BOOL]);
constraint bool_clause([aux31_BOOL,aux89_BOOL],[]);
constraint bool_clause([aux90_BOOL],[aux31_BOOL]);
constraint int_lin_eq([1,1,-1],[1,predecessorOrder_00009,predecessorOrder_00012],0);
constraint int_lin_eq([1,1,-1],[1,predecessorOrder_00010,predecessorOrder_00011],0);
constraint bool_clause([aux35_BOOL,aux91_BOOL],[]);
constraint bool_clause([aux92_BOOL],[aux35_BOOL]);
constraint bool_clause([aux33_BOOL,aux93_BOOL],[]);
constraint bool_clause([aux94_BOOL],[aux33_BOOL]);
constraint array_var_int_element(aux39, [vehicle_00002, vehicle_00003, vehicle_00004, vehicle_00001, vehicle_00002, vehicle_00003, vehicle_00004, 1, 2], vehicle_00001);
constraint array_var_int_element(predecessor_00002, [vehicle_00001, vehicle_00002, vehicle_00003, vehicle_00004, vehicle_00001, vehicle_00002, vehicle_00003, vehicle_00004, 1, 2], vehicle_00002);
constraint array_var_int_element(predecessor_00003, [vehicle_00001, vehicle_00002, vehicle_00003, vehicle_00004, vehicle_00001, vehicle_00002, vehicle_00003, vehicle_00004, 1, 2], vehicle_00003);
constraint array_var_int_element(predecessor_00004, [vehicle_00001, vehicle_00002, vehicle_00003, vehicle_00004, vehicle_00001, vehicle_00002, vehicle_00003, vehicle_00004, 1, 2], vehicle_00004);
constraint array_var_int_element(predecessor_00005, [vehicle_00001, vehicle_00002, vehicle_00003, vehicle_00004, vehicle_00001, vehicle_00002, vehicle_00003, vehicle_00004, 1, 2], vehicle_00001);
constraint array_var_int_element(predecessor_00006, [vehicle_00001, vehicle_00002, vehicle_00003, vehicle_00004, vehicle_00001, vehicle_00002, vehicle_00003, vehicle_00004, 1, 2], vehicle_00002);
constraint array_var_int_element(predecessor_00007, [vehicle_00001, vehicle_00002, vehicle_00003, vehicle_00004, vehicle_00001, vehicle_00002, vehicle_00003, vehicle_00004, 1, 2], vehicle_00003);
constraint array_var_int_element(predecessor_00008, [vehicle_00001, vehicle_00002, vehicle_00003, vehicle_00004, vehicle_00001, vehicle_00002, vehicle_00003, vehicle_00004, 1, 2], vehicle_00004);
constraint array_var_int_element(aux40, [vehicle_00002, vehicle_00003, vehicle_00004, vehicle_00001, vehicle_00002, vehicle_00003, vehicle_00004, 1, 2, 1, 2], vehicle_00001);
constraint array_var_int_element(successor_00002, [vehicle_00001, vehicle_00002, vehicle_00003, vehicle_00004, vehicle_00001, vehicle_00002, vehicle_00003, vehicle_00004, 1, 2, 1, 2], vehicle_00002);
constraint array_var_int_element(successor_00003, [vehicle_00001, vehicle_00002, vehicle_00003, vehicle_00004, vehicle_00001, vehicle_00002, vehicle_00003, vehicle_00004, 1, 2, 1, 2], vehicle_00003);
constraint array_var_int_element(successor_00004, [vehicle_00001, vehicle_00002, vehicle_00003, vehicle_00004, vehicle_00001, vehicle_00002, vehicle_00003, vehicle_00004, 1, 2, 1, 2], vehicle_00004);
constraint array_var_int_element(successor_00005, [vehicle_00001, vehicle_00002, vehicle_00003, vehicle_00004, vehicle_00001, vehicle_00002, vehicle_00003, vehicle_00004, 1, 2, 1, 2], vehicle_00001);
constraint array_var_int_element(successor_00006, [vehicle_00001, vehicle_00002, vehicle_00003, vehicle_00004, vehicle_00001, vehicle_00002, vehicle_00003, vehicle_00004, 1, 2, 1, 2], vehicle_00002);
constraint array_var_int_element(successor_00007, [vehicle_00001, vehicle_00002, vehicle_00003, vehicle_00004, vehicle_00001, vehicle_00002, vehicle_00003, vehicle_00004, 1, 2, 1, 2], vehicle_00003);
constraint array_var_int_element(successor_00008, [vehicle_00001, vehicle_00002, vehicle_00003, vehicle_00004, vehicle_00001, vehicle_00002, vehicle_00003, vehicle_00004, 1, 2, 1, 2], vehicle_00004);
constraint int_le(arrivalTime_00005, arrivalTime_00001);
constraint int_le(arrivalTime_00006, arrivalTime_00002);
constraint int_le(arrivalTime_00007, arrivalTime_00003);
constraint int_le(arrivalTime_00008, arrivalTime_00004);
constraint array_var_int_element(successor_00009, [load_00001, load_00002, load_00003, load_00004, load_00005, load_00006, load_00007, load_00008, load_00009, load_00010, load_00011], load_00009);
constraint array_var_int_element(successor_00010, [load_00001, load_00002, load_00003, load_00004, load_00005, load_00006, load_00007, load_00008, load_00009, load_00010, load_00011, load_00012], load_00010);
constraint int_le(load_00001, aux20);
constraint int_le(load_00003, aux19);
constraint int_le(load_00005, aux20);
constraint int_le(load_00006, aux95);
constraint int_le(load_00007, aux19);
constraint int_le(load_00008, aux96);
constraint int_lin_eq([-1,1,1,1],[aux41,aux97,slack_00001,arrivalTime_00001],0);
constraint array_var_int_element(aux40, [arrivalTime_00002, arrivalTime_00003, arrivalTime_00004, arrivalTime_00005, arrivalTime_00006, arrivalTime_00007, arrivalTime_00008, arrivalTime_00009, arrivalTime_00010, arrivalTime_00011, arrivalTime_00012], aux41);
constraint int_lin_eq([-1,1,1,1],[aux42,aux98,slack_00002,arrivalTime_00002],0);
constraint array_var_int_element(successor_00002, [arrivalTime_00001, arrivalTime_00002, arrivalTime_00003, arrivalTime_00004, arrivalTime_00005, arrivalTime_00006, arrivalTime_00007, arrivalTime_00008, arrivalTime_00009, arrivalTime_00010, arrivalTime_00011, arrivalTime_00012], aux42);
constraint int_lin_eq([-1,1,1,1],[aux43,aux99,slack_00003,arrivalTime_00003],0);
constraint array_var_int_element(successor_00003, [arrivalTime_00001, arrivalTime_00002, arrivalTime_00003, arrivalTime_00004, arrivalTime_00005, arrivalTime_00006, arrivalTime_00007, arrivalTime_00008, arrivalTime_00009, arrivalTime_00010, arrivalTime_00011, arrivalTime_00012], aux43);
constraint int_lin_eq([1,-1,1,1],[aux100,aux44,slack_00004,arrivalTime_00004],0);
constraint array_var_int_element(successor_00004, [arrivalTime_00001, arrivalTime_00002, arrivalTime_00003, arrivalTime_00004, arrivalTime_00005, arrivalTime_00006, arrivalTime_00007, arrivalTime_00008, arrivalTime_00009, arrivalTime_00010, arrivalTime_00011, arrivalTime_00012], aux44);
constraint int_lin_eq([1,-1,1,1],[aux101,aux45,slack_00005,arrivalTime_00005],0);
constraint array_var_int_element(successor_00005, [arrivalTime_00001, arrivalTime_00002, arrivalTime_00003, arrivalTime_00004, arrivalTime_00005, arrivalTime_00006, arrivalTime_00007, arrivalTime_00008, arrivalTime_00009, arrivalTime_00010, arrivalTime_00011, arrivalTime_00012], aux45);
constraint int_lin_eq([1,-1,1,1],[aux102,aux46,slack_00006,arrivalTime_00006],0);
constraint array_var_int_element(successor_00006, [arrivalTime_00001, arrivalTime_00002, arrivalTime_00003, arrivalTime_00004, arrivalTime_00005, arrivalTime_00006, arrivalTime_00007, arrivalTime_00008, arrivalTime_00009, arrivalTime_00010, arrivalTime_00011, arrivalTime_00012], aux46);
constraint int_lin_eq([1,-1,1,1],[aux103,aux47,slack_00007,arrivalTime_00007],0);
constraint array_var_int_element(successor_00007, [arrivalTime_00001, arrivalTime_00002, arrivalTime_00003, arrivalTime_00004, arrivalTime_00005, arrivalTime_00006, arrivalTime_00007, arrivalTime_00008, arrivalTime_00009, arrivalTime_00010, arrivalTime_00011, arrivalTime_00012], aux47);
constraint int_lin_eq([1,-1,1,1],[aux104,aux48,slack_00008,arrivalTime_00008],0);
constraint array_var_int_element(successor_00008, [arrivalTime_00001, arrivalTime_00002, arrivalTime_00003, arrivalTime_00004, arrivalTime_00005, arrivalTime_00006, arrivalTime_00007, arrivalTime_00008, arrivalTime_00009, arrivalTime_00010, arrivalTime_00011, arrivalTime_00012], aux48);
constraint int_lin_eq([1,-1,1,1],[aux105,aux49,slack_00009,arrivalTime_00009],0);
constraint array_var_int_element(successor_00009, [arrivalTime_00001, arrivalTime_00002, arrivalTime_00003, arrivalTime_00004, arrivalTime_00005, arrivalTime_00006, arrivalTime_00007, arrivalTime_00008, arrivalTime_00009, arrivalTime_00010, arrivalTime_00011], aux49);
constraint int_lin_eq([1,-1,1,1],[aux106,aux50,slack_00010,arrivalTime_00010],0);
constraint array_var_int_element(successor_00010, [arrivalTime_00001, arrivalTime_00002, arrivalTime_00003, arrivalTime_00004, arrivalTime_00005, arrivalTime_00006, arrivalTime_00007, arrivalTime_00008, arrivalTime_00009, arrivalTime_00010, arrivalTime_00011, arrivalTime_00012], aux50);
constraint int_lin_eq([1,1,-1],[15,load_00001,aux51],0);
constraint array_var_int_element(aux40, [load_00002, load_00003, load_00004, load_00005, load_00006, load_00007, load_00008, load_00009, load_00010, load_00011, load_00012], aux51);
constraint int_lin_eq([1,1,-1],[30,load_00002,aux52],0);
constraint array_var_int_element(successor_00002, [load_00001, load_00002, load_00003, load_00004, load_00005, load_00006, load_00007, load_00008, load_00009, load_00010, load_00011, load_00012], aux52);
constraint int_lin_eq([1,1,-1],[10,load_00003,aux53],0);
constraint array_var_int_element(successor_00003, [load_00001, load_00002, load_00003, load_00004, load_00005, load_00006, load_00007, load_00008, load_00009, load_00010, load_00011, load_00012], aux53);
constraint int_lin_eq([1,1,-1],[50,load_00004,aux54],0);
constraint array_var_int_element(successor_00004, [load_00001, load_00002, load_00003, load_00004, load_00005, load_00006, load_00007, load_00008, load_00009, load_00010, load_00011, load_00012], aux54);
constraint int_lin_eq([1,1,-1],[-15,load_00005,aux55],0);
constraint array_var_int_element(successor_00005, [load_00001, load_00002, load_00003, load_00004, load_00005, load_00006, load_00007, load_00008, load_00009, load_00010, load_00011, load_00012], aux55);
constraint int_lin_eq([1,1,-1],[-30,load_00006,aux56],0);
constraint array_var_int_element(successor_00006, [load_00001, load_00002, load_00003, load_00004, load_00005, load_00006, load_00007, load_00008, load_00009, load_00010, load_00011, load_00012], aux56);
constraint int_lin_eq([1,1,-1],[-10,load_00007,aux57],0);
constraint array_var_int_element(successor_00007, [load_00001, load_00002, load_00003, load_00004, load_00005, load_00006, load_00007, load_00008, load_00009, load_00010, load_00011, load_00012], aux57);
constraint int_lin_eq([1,1,-1],[-50,load_00008,aux58],0);
constraint array_var_int_element(successor_00008, [load_00001, load_00002, load_00003, load_00004, load_00005, load_00006, load_00007, load_00008, load_00009, load_00010, load_00011, load_00012], aux58);

solve :: int_search([successor_00001, successor_00002, successor_00003, successor_00004, successor_00005, successor_00006, successor_00007, successor_00008, successor_00009, successor_00010, 10, 9, vehicle_00001, vehicle_00002, vehicle_00003, vehicle_00004, vehicle_00001, vehicle_00002, vehicle_00003, vehicle_00004, 1, 2, 1, 2, arrivalTime_00001, arrivalTime_00002, arrivalTime_00003, arrivalTime_00004, arrivalTime_00005, arrivalTime_00006, arrivalTime_00007, arrivalTime_00008, arrivalTime_00009, arrivalTime_00010, arrivalTime_00011, arrivalTime_00012], input_order, indomain_min, complete)
minimize objective;
