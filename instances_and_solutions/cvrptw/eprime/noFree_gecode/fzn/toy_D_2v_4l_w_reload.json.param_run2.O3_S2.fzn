predicate gecode_global_cardinality(array[int] of var int: x, array[int] of int: cover, array[int] of var int: counts);
array [1..8] of int: Demand = [15, 30, 10, 50, -15, -30, -10, -50];
array [1..12] of int: aux0 = [53, 53, 31, 29, 48, 48, 48, 48, 48, 48, 48, 48];
array [1..2] of int: Capacity = [180, 150];
var {2,3,4,5,6,7,8,11,12}: successor_00001:: output_var ;
var {1,3,4,5,6,7,8,11,12}: successor_00002:: output_var ;
var {1,2,4,5,6,7,8,11,12}: successor_00003:: output_var ;
var {1,2,3,5,6,7,8,11,12}: successor_00004:: output_var ;
var {1,2,3,4,6,7,8,11,12}: successor_00005:: output_var ;
var {1,2,3,4,5,7,8,11,12}: successor_00006:: output_var ;
var {1,2,3,4,5,6,8,11,12}: successor_00007:: output_var ;
var {1,2,3,4,5,6,7,11,12}: successor_00008:: output_var ;
var {1,2,3,4,5,6,7,8,11}: successor_00009:: output_var ;
var {1,2,3,4,5,6,7,8,12}: successor_00010:: output_var ;
var 2..10: predecessor_00001:: output_var ;
var {1,3,4,5,6,7,8,9,10}: predecessor_00002:: output_var ;
var {1,2,4,5,6,7,8,9,10}: predecessor_00003:: output_var ;
var {1,2,3,5,6,7,8,9,10}: predecessor_00004:: output_var ;
var {1,2,3,4,6,7,8,9,10}: predecessor_00005:: output_var ;
var {1,2,3,4,5,7,8,9,10}: predecessor_00006:: output_var ;
var {1,2,3,4,5,6,8,9,10}: predecessor_00007:: output_var ;
var {1,2,3,4,5,6,7,9,10}: predecessor_00008:: output_var ;
var 1..9: predecessor_00011:: output_var ;
var {1,2,3,4,5,6,7,8,10}: predecessor_00012:: output_var ;
var 1..2: vehicle_00001:: output_var ;
var 1..2: vehicle_00002:: output_var ;
var 1..2: vehicle_00003:: output_var ;
var 1..2: vehicle_00004:: output_var ;
var 0..165: load_00001:: output_var ;
var 0..150: load_00002:: output_var ;
var 0..170: load_00003:: output_var ;
var 0..130: load_00004:: output_var ;
var 15..180: load_00005:: output_var ;
var 30..180: load_00006:: output_var ;
var 10..180: load_00007:: output_var ;
var 50..180: load_00008:: output_var ;
var 0..180: load_00009:: output_var ;
var 0..180: load_00010:: output_var ;
var 0..180: load_00011:: output_var ;
var 0..180: load_00012:: output_var ;
var 54..594: arrivalTime_00001:: output_var ;
var 54..594: arrivalTime_00002:: output_var ;
var 54..594: arrivalTime_00003:: output_var ;
var 54..594: arrivalTime_00004:: output_var ;
var 0..594: arrivalTime_00005:: output_var ;
var 0..594: arrivalTime_00006:: output_var ;
var 0..594: arrivalTime_00007:: output_var ;
var 0..594: arrivalTime_00008:: output_var ;
var 0..460588: arrivalTime_00009:: output_var ;
var 0..460588: arrivalTime_00010:: output_var ;
var 0..460588: arrivalTime_00011:: output_var ;
var 0..460588: arrivalTime_00012:: output_var ;
var 0..460588: departureTime_00001:: output_var ;
var 0..460588: departureTime_00002:: output_var ;
var 0..460588: departureTime_00003:: output_var ;
var 0..460588: departureTime_00004:: output_var ;
var 0..460588: departureTime_00005:: output_var ;
var 0..460588: departureTime_00006:: output_var ;
var 0..460588: departureTime_00007:: output_var ;
var 0..460588: departureTime_00008:: output_var ;
var 0..460588: departureTime_00009:: output_var ;
var 0..460588: departureTime_00010:: output_var ;
var 0..460588: departureTime_00011:: output_var ;
var 0..460588: departureTime_00012:: output_var ;
var 0..460500: slack_00001:: output_var ;
var 0..460499: slack_00002:: output_var ;
var 0..460509: slack_00003:: output_var ;
var 0..460510: slack_00004:: output_var ;
var 0..460588: slack_00005:: output_var ;
var 0..460588: slack_00006:: output_var ;
var 0..460588: slack_00007:: output_var ;
var 0..460588: slack_00008:: output_var ;
var 0..460588: slack_00009:: output_var ;
var 0..460588: slack_00010:: output_var ;
var 0..460588: slack_00011:: output_var ;
var 0..460588: slack_00012:: output_var ;
var 0..460588: objective:: output_var ;
var 2..12: successorOrder_00002:: output_var ;
var 2..12: successorOrder_00003:: output_var ;
var 2..12: successorOrder_00004:: output_var ;
var 2..12: successorOrder_00005:: output_var ;
var 2..12: successorOrder_00006:: output_var ;
var 2..12: successorOrder_00007:: output_var ;
var 2..12: successorOrder_00008:: output_var ;
var 3..12: successorOrder_00009:: output_var ;
var 3..12: successorOrder_00010:: output_var ;
var 2..11: successorOrder_00011:: output_var ;
var 2..11: successorOrder_00012:: output_var ;
var 2..12: predecessorOrder_00002:: output_var ;
var 2..12: predecessorOrder_00003:: output_var ;
var 2..12: predecessorOrder_00004:: output_var ;
var 2..12: predecessorOrder_00005:: output_var ;
var 2..12: predecessorOrder_00006:: output_var ;
var 2..12: predecessorOrder_00007:: output_var ;
var 2..12: predecessorOrder_00008:: output_var ;
var 2..11: predecessorOrder_00009:: output_var ;
var 2..11: predecessorOrder_00010:: output_var ;
var 3..12: predecessorOrder_00011:: output_var ;
var 3..12: predecessorOrder_00012:: output_var ;
var {1,2,3,4,5,6,7,10,11}: aux18:: var_is_introduced ;
var 1..9: aux19:: var_is_introduced ;
var 1..12: aux20:: var_is_introduced ;
var 1..12: aux21:: var_is_introduced ;
var 1..12: aux22:: var_is_introduced ;
var 1..12: aux23:: var_is_introduced ;
var 1..12: aux24:: var_is_introduced ;
var 1..12: aux25:: var_is_introduced ;
var 1..12: aux26:: var_is_introduced ;
var 1..12: aux27:: var_is_introduced ;
var 1..12: aux28:: var_is_introduced ;
var 1..12: aux29:: var_is_introduced ;
var 1..12: aux30:: var_is_introduced ;
var 1..12: aux31:: var_is_introduced ;
var 1..12: aux32:: var_is_introduced ;
var 1..12: aux33:: var_is_introduced ;
var 1..12: aux34:: var_is_introduced ;
var 1..12: aux35:: var_is_introduced ;
var 1..12: aux36:: var_is_introduced ;
var 1..12: aux37:: var_is_introduced ;
var {150,180}: aux38:: var_is_introduced ;
var {150,180}: aux39:: var_is_introduced ;
var bool: aux40_BOOL:: var_is_introduced ;
var bool: aux41_BOOL:: var_is_introduced ;
var bool: aux42_BOOL:: var_is_introduced ;
var bool: aux43_BOOL:: var_is_introduced ;
var bool: aux44_BOOL:: var_is_introduced ;
var bool: aux45_BOOL:: var_is_introduced ;
var bool: aux46_BOOL:: var_is_introduced ;
var bool: aux47_BOOL:: var_is_introduced ;
var bool: aux48_BOOL:: var_is_introduced ;
var bool: aux49_BOOL:: var_is_introduced ;
var bool: aux50_BOOL:: var_is_introduced ;
var bool: aux51_BOOL:: var_is_introduced ;
var bool: aux52_BOOL:: var_is_introduced ;
var bool: aux53_BOOL:: var_is_introduced ;
var bool: aux54_BOOL:: var_is_introduced ;
var bool: aux55_BOOL:: var_is_introduced ;
var bool: aux56_BOOL:: var_is_introduced ;
var bool: aux57_BOOL:: var_is_introduced ;
var 55..460588: aux58:: var_is_introduced ;
var 54..460588: aux59:: var_is_introduced ;
var 0..130: aux60:: var_is_introduced ;
var 0..150: aux61:: var_is_introduced ;
var 0..165: aux62:: var_is_introduced ;
var 0..170: aux63:: var_is_introduced ;
var 10..180: aux64:: var_is_introduced ;
var 30..180: aux65:: var_is_introduced ;
var 50..180: aux66:: var_is_introduced ;
var 0..460588: aux67:: var_is_introduced ;
var 0..460588: aux68:: var_is_introduced ;
var 0..460588: aux69:: var_is_introduced ;
var 0..460588: aux70:: var_is_introduced ;
var 0..460588: aux71:: var_is_introduced ;
var 54..460588: aux72:: var_is_introduced ;
var 15..180: aux73:: var_is_introduced ;
var 55..460588: aux74:: var_is_introduced ;
var 0..460588: aux75:: var_is_introduced ;
var bool: aux76_BOOL:: var_is_introduced ;
var bool: aux77_BOOL:: var_is_introduced ;
var bool: aux78_BOOL:: var_is_introduced ;
var bool: aux79_BOOL:: var_is_introduced ;
var {150,180}: aux80:: var_is_introduced ;
var {150,180}: aux81:: var_is_introduced ;
var bool: aux82_BOOL:: var_is_introduced ;
var bool: aux83_BOOL:: var_is_introduced ;
var bool: aux84_BOOL:: var_is_introduced ;
var bool: aux85_BOOL:: var_is_introduced ;
var bool: aux86_BOOL:: var_is_introduced ;
var bool: aux87_BOOL:: var_is_introduced ;
var bool: aux88_BOOL:: var_is_introduced ;
var bool: aux89_BOOL:: var_is_introduced ;
var bool: aux90_BOOL:: var_is_introduced ;
var bool: aux91_BOOL:: var_is_introduced ;
var bool: aux92_BOOL:: var_is_introduced ;
var bool: aux93_BOOL:: var_is_introduced ;
var bool: aux94_BOOL:: var_is_introduced ;
var bool: aux95_BOOL:: var_is_introduced ;
var bool: aux96_BOOL:: var_is_introduced ;
var bool: aux97_BOOL:: var_is_introduced ;
var bool: aux98_BOOL:: var_is_introduced ;
var bool: aux99_BOOL:: var_is_introduced ;
var bool: aux100_BOOL:: var_is_introduced ;
var bool: aux101_BOOL:: var_is_introduced ;
var bool: aux102_BOOL:: var_is_introduced ;
var bool: aux103_BOOL:: var_is_introduced ;
var bool: aux104_BOOL:: var_is_introduced ;
var bool: aux105_BOOL:: var_is_introduced ;
var bool: aux106_BOOL:: var_is_introduced ;
var bool: aux107_BOOL:: var_is_introduced ;
var bool: aux108_BOOL:: var_is_introduced ;
var bool: aux109_BOOL:: var_is_introduced ;
var bool: aux110_BOOL:: var_is_introduced ;
var bool: aux111_BOOL:: var_is_introduced ;
var bool: aux112_BOOL:: var_is_introduced ;
var bool: aux113_BOOL:: var_is_introduced ;
var {1,24,28,29}: aux114:: var_is_introduced ;
var {0,34,36,53}: aux115:: var_is_introduced ;
var {0,25,48}: aux116:: var_is_introduced ;
var {0,25,48}: aux117:: var_is_introduced ;
var {0,25,48}: aux118:: var_is_introduced ;
var {0,25,48}: aux119:: var_is_introduced ;
var {0,25,48}: aux120:: var_is_introduced ;
var {0,35,36,53}: aux121:: var_is_introduced ;
var {1,25,30,31}: aux122:: var_is_introduced ;
var {0,25,48}: aux123:: var_is_introduced ;
constraint int_lin_eq_reif([1,1,-1],[successorOrder_00009,1,aux28],0,aux76_BOOL);
constraint int_eq_reif(1,aux28,aux77_BOOL);
constraint int_lin_eq_reif([1,-1,1],[1,aux37,predecessorOrder_00011],0,aux78_BOOL);
constraint int_eq_reif(1,aux37,aux79_BOOL);
constraint array_var_int_element(vehicle_00002, [180, 150], aux80);
constraint array_var_int_element(vehicle_00004, [180, 150], aux81);
constraint int_eq_reif(aux24,1,aux82_BOOL);
constraint int_eq_reif(aux26,1,aux83_BOOL);
constraint int_eq_reif(aux25,1,aux84_BOOL);
constraint int_eq_reif(aux21,1,aux85_BOOL);
constraint int_eq_reif(aux20,1,aux86_BOOL);
constraint int_eq_reif(aux23,1,aux87_BOOL);
constraint int_eq_reif(aux22,1,aux88_BOOL);
constraint int_eq_reif(aux27,1,aux89_BOOL);
constraint int_lin_eq_reif([1,1,-1],[successorOrder_00002,1,aux24],0,aux90_BOOL);
constraint int_lin_eq_reif([1,1,-1],[successorOrder_00003,1,aux26],0,aux91_BOOL);
constraint int_lin_eq_reif([1,1,-1],[successorOrder_00004,1,aux25],0,aux92_BOOL);
constraint int_lin_eq_reif([1,1,-1],[successorOrder_00005,1,aux21],0,aux93_BOOL);
constraint int_lin_eq_reif([1,1,-1],[successorOrder_00006,1,aux20],0,aux94_BOOL);
constraint int_lin_eq_reif([1,1,-1],[successorOrder_00007,1,aux23],0,aux95_BOOL);
constraint int_lin_eq_reif([1,1,-1],[successorOrder_00008,1,aux22],0,aux96_BOOL);
constraint int_lin_eq_reif([1,1,-1],[successorOrder_00010,1,aux27],0,aux97_BOOL);
constraint int_eq_reif(aux30,1,aux98_BOOL);
constraint int_eq_reif(aux29,1,aux99_BOOL);
constraint int_eq_reif(aux34,1,aux100_BOOL);
constraint int_eq_reif(aux33,1,aux101_BOOL);
constraint int_eq_reif(aux32,1,aux102_BOOL);
constraint int_eq_reif(aux31,1,aux103_BOOL);
constraint int_eq_reif(aux35,1,aux104_BOOL);
constraint int_eq_reif(aux36,1,aux105_BOOL);
constraint int_lin_eq_reif([1,-1,1],[1,aux30,predecessorOrder_00002],0,aux106_BOOL);
constraint int_lin_eq_reif([1,-1,1],[1,aux29,predecessorOrder_00003],0,aux107_BOOL);
constraint int_lin_eq_reif([1,-1,1],[1,aux34,predecessorOrder_00004],0,aux108_BOOL);
constraint int_lin_eq_reif([1,-1,1],[1,aux33,predecessorOrder_00005],0,aux109_BOOL);
constraint int_lin_eq_reif([1,-1,1],[1,aux32,predecessorOrder_00006],0,aux110_BOOL);
constraint int_lin_eq_reif([1,-1,1],[1,aux31,predecessorOrder_00007],0,aux111_BOOL);
constraint int_lin_eq_reif([1,-1,1],[1,aux35,predecessorOrder_00008],0,aux112_BOOL);
constraint int_lin_eq_reif([1,-1,1],[1,aux36,predecessorOrder_00012],0,aux113_BOOL);
constraint array_var_int_element(successor_00004, [28, 29, 1, 0, 24, 24, 24, 24, 24, 24, 24, 24], aux114);
constraint array_var_int_element(aux18, [0, 36, 34, 53, 53, 53, 53, 53, 53, 53, 53], aux115);
constraint array_var_int_element(successor_00005, [48, 48, 25, 25, 0, 0, 0, 0, 0, 0, 0, 0], aux116);
constraint array_var_int_element(successor_00006, [48, 48, 25, 25, 0, 0, 0, 0, 0, 0, 0, 0], aux117);
constraint array_var_int_element(successor_00007, [48, 48, 25, 25, 0, 0, 0, 0, 0, 0, 0, 0], aux118);
constraint array_var_int_element(successor_00008, [48, 48, 25, 25, 0, 0, 0, 0, 0, 0, 0, 0], aux119);
constraint array_var_int_element(successor_00010, [48, 48, 25, 25, 0, 0, 0, 0, 0, 0, 0, 0], aux120);
constraint array_var_int_element(successor_00002, [0, 0, 36, 35, 53, 53, 53, 53, 53, 53, 53, 53], aux121);
constraint array_var_int_element(successor_00003, [30, 31, 0, 1, 25, 25, 25, 25, 25, 25, 25, 25], aux122);
constraint array_var_int_element(successor_00009, [48, 48, 25, 25, 0, 0, 0, 0, 0, 0, 0], aux123);
constraint array_var_int_element(successor_00006, [1, successorOrder_00002, successorOrder_00003, successorOrder_00004, successorOrder_00005, successorOrder_00006, successorOrder_00007, successorOrder_00008, successorOrder_00009, successorOrder_00010, successorOrder_00011, successorOrder_00012], aux20);
constraint array_var_int_element(successor_00005, [1, successorOrder_00002, successorOrder_00003, successorOrder_00004, successorOrder_00005, successorOrder_00006, successorOrder_00007, successorOrder_00008, successorOrder_00009, successorOrder_00010, successorOrder_00011, successorOrder_00012], aux21);
constraint array_var_int_element(successor_00008, [1, successorOrder_00002, successorOrder_00003, successorOrder_00004, successorOrder_00005, successorOrder_00006, successorOrder_00007, successorOrder_00008, successorOrder_00009, successorOrder_00010, successorOrder_00011, successorOrder_00012], aux22);
constraint array_var_int_element(successor_00007, [1, successorOrder_00002, successorOrder_00003, successorOrder_00004, successorOrder_00005, successorOrder_00006, successorOrder_00007, successorOrder_00008, successorOrder_00009, successorOrder_00010, successorOrder_00011, successorOrder_00012], aux23);
constraint array_var_int_element(successor_00002, [1, successorOrder_00002, successorOrder_00003, successorOrder_00004, successorOrder_00005, successorOrder_00006, successorOrder_00007, successorOrder_00008, successorOrder_00009, successorOrder_00010, successorOrder_00011, successorOrder_00012], aux24);
constraint array_var_int_element(successor_00004, [1, successorOrder_00002, successorOrder_00003, successorOrder_00004, successorOrder_00005, successorOrder_00006, successorOrder_00007, successorOrder_00008, successorOrder_00009, successorOrder_00010, successorOrder_00011, successorOrder_00012], aux25);
constraint array_var_int_element(successor_00003, [1, successorOrder_00002, successorOrder_00003, successorOrder_00004, successorOrder_00005, successorOrder_00006, successorOrder_00007, successorOrder_00008, successorOrder_00009, successorOrder_00010, successorOrder_00011, successorOrder_00012], aux26);
constraint array_var_int_element(successor_00010, [1, successorOrder_00002, successorOrder_00003, successorOrder_00004, successorOrder_00005, successorOrder_00006, successorOrder_00007, successorOrder_00008, successorOrder_00009, successorOrder_00010, successorOrder_00011, successorOrder_00012], aux27);
constraint array_var_int_element(successor_00009, [1, successorOrder_00002, successorOrder_00003, successorOrder_00004, successorOrder_00005, successorOrder_00006, successorOrder_00007, successorOrder_00008, successorOrder_00009, successorOrder_00010, successorOrder_00011], aux28);
constraint array_var_int_element(predecessor_00003, [1, predecessorOrder_00002, predecessorOrder_00003, predecessorOrder_00004, predecessorOrder_00005, predecessorOrder_00006, predecessorOrder_00007, predecessorOrder_00008, predecessorOrder_00009, predecessorOrder_00010], aux29);
constraint array_var_int_element(predecessor_00002, [1, predecessorOrder_00002, predecessorOrder_00003, predecessorOrder_00004, predecessorOrder_00005, predecessorOrder_00006, predecessorOrder_00007, predecessorOrder_00008, predecessorOrder_00009, predecessorOrder_00010], aux30);
constraint array_var_int_element(predecessor_00007, [1, predecessorOrder_00002, predecessorOrder_00003, predecessorOrder_00004, predecessorOrder_00005, predecessorOrder_00006, predecessorOrder_00007, predecessorOrder_00008, predecessorOrder_00009, predecessorOrder_00010], aux31);
constraint array_var_int_element(predecessor_00006, [1, predecessorOrder_00002, predecessorOrder_00003, predecessorOrder_00004, predecessorOrder_00005, predecessorOrder_00006, predecessorOrder_00007, predecessorOrder_00008, predecessorOrder_00009, predecessorOrder_00010], aux32);
constraint array_var_int_element(predecessor_00005, [1, predecessorOrder_00002, predecessorOrder_00003, predecessorOrder_00004, predecessorOrder_00005, predecessorOrder_00006, predecessorOrder_00007, predecessorOrder_00008, predecessorOrder_00009, predecessorOrder_00010], aux33);
constraint array_var_int_element(predecessor_00004, [1, predecessorOrder_00002, predecessorOrder_00003, predecessorOrder_00004, predecessorOrder_00005, predecessorOrder_00006, predecessorOrder_00007, predecessorOrder_00008, predecessorOrder_00009, predecessorOrder_00010], aux34);
constraint array_var_int_element(predecessor_00008, [1, predecessorOrder_00002, predecessorOrder_00003, predecessorOrder_00004, predecessorOrder_00005, predecessorOrder_00006, predecessorOrder_00007, predecessorOrder_00008, predecessorOrder_00009, predecessorOrder_00010], aux35);
constraint array_var_int_element(predecessor_00012, [1, predecessorOrder_00002, predecessorOrder_00003, predecessorOrder_00004, predecessorOrder_00005, predecessorOrder_00006, predecessorOrder_00007, predecessorOrder_00008, predecessorOrder_00009, predecessorOrder_00010], aux36);
constraint array_var_int_element(predecessor_00011, [1, predecessorOrder_00002, predecessorOrder_00003, predecessorOrder_00004, predecessorOrder_00005, predecessorOrder_00006, predecessorOrder_00007, predecessorOrder_00008, predecessorOrder_00009], aux37);
constraint array_var_int_element(vehicle_00003, [180, 150], aux38);
constraint array_var_int_element(vehicle_00001, [180, 150], aux39);
constraint int_ne_reif(successorOrder_00002,12,aux40_BOOL);
constraint int_ne_reif(successorOrder_00008,12,aux41_BOOL);
constraint int_ne_reif(successorOrder_00006,12,aux42_BOOL);
constraint int_ne_reif(12,predecessorOrder_00003,aux43_BOOL);
constraint int_ne_reif(12,predecessorOrder_00005,aux44_BOOL);
constraint int_ne_reif(12,predecessorOrder_00007,aux45_BOOL);
constraint int_ne_reif(successorOrder_00004,12,aux46_BOOL);
constraint int_ne_reif(successorOrder_00010,12,aux47_BOOL);
constraint int_ne_reif(12,predecessorOrder_00002,aux48_BOOL);
constraint int_ne_reif(12,predecessorOrder_00006,aux49_BOOL);
constraint int_ne_reif(12,predecessorOrder_00008,aux50_BOOL);
constraint int_ne_reif(12,predecessorOrder_00004,aux51_BOOL);
constraint int_ne_reif(12,predecessorOrder_00012,aux52_BOOL);
constraint int_ne_reif(successorOrder_00009,12,aux53_BOOL);
constraint int_ne_reif(12,predecessorOrder_00011,aux54_BOOL);
constraint int_ne_reif(successorOrder_00005,12,aux55_BOOL);
constraint int_ne_reif(successorOrder_00007,12,aux56_BOOL);
constraint int_ne_reif(successorOrder_00003,12,aux57_BOOL);
constraint int_lin_eq([1,-1,1],[-1,aux18,successor_00001],0);
constraint int_lin_eq([1,1,-1],[predecessor_00001,-1,aux19],0);
constraint all_different_int([successorOrder_00002, successorOrder_00003, successorOrder_00004, successorOrder_00005, successorOrder_00006, successorOrder_00007, successorOrder_00008, successorOrder_00009, successorOrder_00010, successorOrder_00011, successorOrder_00012])::domain;
constraint bool_clause([aux76_BOOL],[aux53_BOOL]);
constraint gecode_table_int([vehicle_00001, vehicle_00002, vehicle_00003, vehicle_00004, successor_00002],[1,1,1,1,1,1,1,1,1,3,1,1,1,1,4,1,1,1,1,5,1,1,1,1,6,1,1,1,1,7,1,1,1,1,8,1,1,1,1,11,1,1,1,2,1,1,1,1,2,3,1,1,1,2,5,1,1,1,2,6,1,1,1,2,7,1,1,1,2,11,1,1,2,1,1,1,1,2,1,4,1,1,2,1,5,1,1,2,1,6,1,1,2,1,8,1,1,2,1,11,1,1,2,2,1,1,1,2,2,5,1,1,2,2,6,1,1,2,2,11,1,2,1,1,6,1,2,1,1,12,1,2,1,2,4,1,2,1,2,6,1,2,1,2,8,1,2,1,2,12,1,2,2,1,3,1,2,2,1,6,1,2,2,1,7,1,2,2,1,12,1,2,2,2,3,1,2,2,2,4,1,2,2,2,6,1,2,2,2,7,1,2,2,2,8,1,2,2,2,12,2,1,1,1,3,2,1,1,1,4,2,1,1,1,6,2,1,1,1,7,2,1,1,1,8,2,1,1,1,11,2,1,1,2,3,2,1,1,2,6,2,1,1,2,7,2,1,1,2,11,2,1,2,1,4,2,1,2,1,6,2,1,2,1,8,2,1,2,1,11,2,1,2,2,6,2,1,2,2,11,2,2,1,1,1,2,2,1,1,5,2,2,1,1,6,2,2,1,1,12,2,2,1,2,1,2,2,1,2,4,2,2,1,2,5,2,2,1,2,6,2,2,1,2,8,2,2,1,2,12,2,2,2,1,1,2,2,2,1,3,2,2,2,1,5,2,2,2,1,6,2,2,2,1,7,2,2,2,1,12,2,2,2,2,1,2,2,2,2,3,2,2,2,2,4,2,2,2,2,5,2,2,2,2,6,2,2,2,2,7,2,2,2,2,8,2,2,2,2,12,]);
constraint gecode_table_int([vehicle_00001, vehicle_00002, vehicle_00003, vehicle_00004, successor_00003],[1,1,1,1,1,1,1,1,1,2,1,1,1,1,4,1,1,1,1,5,1,1,1,1,6,1,1,1,1,7,1,1,1,1,8,1,1,1,1,11,1,1,1,2,1,1,1,1,2,2,1,1,1,2,5,1,1,1,2,6,1,1,1,2,7,1,1,1,2,11,1,1,2,1,7,1,1,2,1,12,1,1,2,2,4,1,1,2,2,7,1,1,2,2,8,1,1,2,2,12,1,2,1,1,1,1,2,1,1,4,1,2,1,1,5,1,2,1,1,7,1,2,1,1,8,1,2,1,1,11,1,2,1,2,1,1,2,1,2,5,1,2,1,2,7,1,2,1,2,11,1,2,2,1,2,1,2,2,1,6,1,2,2,1,7,1,2,2,1,12,1,2,2,2,2,1,2,2,2,4,1,2,2,2,6,1,2,2,2,7,1,2,2,2,8,1,2,2,2,12,2,1,1,1,2,2,1,1,1,4,2,1,1,1,6,2,1,1,1,7,2,1,1,1,8,2,1,1,1,11,2,1,1,2,2,2,1,1,2,6,2,1,1,2,7,2,1,1,2,11,2,1,2,1,1,2,1,2,1,5,2,1,2,1,7,2,1,2,1,12,2,1,2,2,1,2,1,2,2,4,2,1,2,2,5,2,1,2,2,7,2,1,2,2,8,2,1,2,2,12,2,2,1,1,4,2,2,1,1,7,2,2,1,1,8,2,2,1,1,11,2,2,1,2,7,2,2,1,2,11,2,2,2,1,1,2,2,2,1,2,2,2,2,1,5,2,2,2,1,6,2,2,2,1,7,2,2,2,1,12,2,2,2,2,1,2,2,2,2,2,2,2,2,2,4,2,2,2,2,5,2,2,2,2,6,2,2,2,2,7,2,2,2,2,8,2,2,2,2,12,]);
constraint gecode_table_int([vehicle_00001, vehicle_00002, vehicle_00003, vehicle_00004, successor_00004],[1,1,1,1,1,1,1,1,1,2,1,1,1,1,3,1,1,1,1,5,1,1,1,1,6,1,1,1,1,7,1,1,1,1,8,1,1,1,1,11,1,1,1,2,8,1,1,1,2,12,1,1,2,1,1,1,1,2,1,2,1,1,2,1,5,1,1,2,1,6,1,1,2,1,8,1,1,2,1,11,1,1,2,2,3,1,1,2,2,7,1,1,2,2,8,1,1,2,2,12,1,2,1,1,1,1,2,1,1,3,1,2,1,1,5,1,2,1,1,7,1,2,1,1,8,1,2,1,1,11,1,2,1,2,2,1,2,1,2,6,1,2,1,2,8,1,2,1,2,12,1,2,2,1,1,1,2,2,1,5,1,2,2,1,8,1,2,2,1,11,1,2,2,2,2,1,2,2,2,3,1,2,2,2,6,1,2,2,2,7,1,2,2,2,8,1,2,2,2,12,2,1,1,1,2,2,1,1,1,3,2,1,1,1,6,2,1,1,1,7,2,1,1,1,8,2,1,1,1,11,2,1,1,2,1,2,1,1,2,5,2,1,1,2,8,2,1,1,2,12,2,1,2,1,2,2,1,2,1,6,2,1,2,1,8,2,1,2,1,11,2,1,2,2,1,2,1,2,2,3,2,1,2,2,5,2,1,2,2,7,2,1,2,2,8,2,1,2,2,12,2,2,1,1,3,2,2,1,1,7,2,2,1,1,8,2,2,1,1,11,2,2,1,2,1,2,2,1,2,2,2,2,1,2,5,2,2,1,2,6,2,2,1,2,8,2,2,1,2,12,2,2,2,1,8,2,2,2,1,11,2,2,2,2,1,2,2,2,2,2,2,2,2,2,3,2,2,2,2,5,2,2,2,2,6,2,2,2,2,7,2,2,2,2,8,2,2,2,2,12,]);
constraint gecode_table_int([vehicle_00001, vehicle_00002, vehicle_00003, vehicle_00004, successor_00005],[1,1,1,1,1,1,1,1,1,2,1,1,1,1,3,1,1,1,1,4,1,1,1,1,6,1,1,1,1,7,1,1,1,1,8,1,1,1,1,11,1,1,1,2,1,1,1,1,2,2,1,1,1,2,3,1,1,1,2,6,1,1,1,2,7,1,1,1,2,11,1,1,2,1,1,1,1,2,1,2,1,1,2,1,4,1,1,2,1,6,1,1,2,1,8,1,1,2,1,11,1,1,2,2,1,1,1,2,2,2,1,1,2,2,6,1,1,2,2,11,1,2,1,1,1,1,2,1,1,3,1,2,1,1,4,1,2,1,1,7,1,2,1,1,8,1,2,1,1,11,1,2,1,2,1,1,2,1,2,3,1,2,1,2,7,1,2,1,2,11,1,2,2,1,1,1,2,2,1,4,1,2,2,1,8,1,2,2,1,11,1,2,2,2,1,1,2,2,2,11,2,1,1,1,1,2,1,1,1,12,2,1,1,2,1,2,1,1,2,4,2,1,1,2,8,2,1,1,2,12,2,1,2,1,1,2,1,2,1,3,2,1,2,1,7,2,1,2,1,12,2,1,2,2,1,2,1,2,2,3,2,1,2,2,4,2,1,2,2,7,2,1,2,2,8,2,1,2,2,12,2,2,1,1,1,2,2,1,1,2,2,2,1,1,6,2,2,1,1,12,2,2,1,2,1,2,2,1,2,2,2,2,1,2,4,2,2,1,2,6,2,2,1,2,8,2,2,1,2,12,2,2,2,1,1,2,2,2,1,2,2,2,2,1,3,2,2,2,1,6,2,2,2,1,7,2,2,2,1,12,2,2,2,2,1,2,2,2,2,2,2,2,2,2,3,2,2,2,2,4,2,2,2,2,6,2,2,2,2,7,2,2,2,2,8,2,2,2,2,12,]);
constraint gecode_table_int([vehicle_00001, vehicle_00002, vehicle_00003, vehicle_00004, successor_00006],[1,1,1,1,1,1,1,1,1,2,1,1,1,1,3,1,1,1,1,4,1,1,1,1,5,1,1,1,1,7,1,1,1,1,8,1,1,1,1,11,1,1,1,2,1,1,1,1,2,2,1,1,1,2,3,1,1,1,2,5,1,1,1,2,7,1,1,1,2,11,1,1,2,1,1,1,1,2,1,2,1,1,2,1,4,1,1,2,1,5,1,1,2,1,8,1,1,2,1,11,1,1,2,2,1,1,1,2,2,2,1,1,2,2,5,1,1,2,2,11,1,2,1,1,2,1,2,1,1,12,1,2,1,2,2,1,2,1,2,4,1,2,1,2,8,1,2,1,2,12,1,2,2,1,2,1,2,2,1,3,1,2,2,1,7,1,2,2,1,12,1,2,2,2,2,1,2,2,2,3,1,2,2,2,4,1,2,2,2,7,1,2,2,2,8,1,2,2,2,12,2,1,1,1,2,2,1,1,1,3,2,1,1,1,4,2,1,1,1,7,2,1,1,1,8,2,1,1,1,11,2,1,1,2,2,2,1,1,2,3,2,1,1,2,7,2,1,1,2,11,2,1,2,1,2,2,1,2,1,4,2,1,2,1,8,2,1,2,1,11,2,1,2,2,2,2,1,2,2,11,2,2,1,1,1,2,2,1,1,2,2,2,1,1,5,2,2,1,1,12,2,2,1,2,1,2,2,1,2,2,2,2,1,2,4,2,2,1,2,5,2,2,1,2,8,2,2,1,2,12,2,2,2,1,1,2,2,2,1,2,2,2,2,1,3,2,2,2,1,5,2,2,2,1,7,2,2,2,1,12,2,2,2,2,1,2,2,2,2,2,2,2,2,2,3,2,2,2,2,4,2,2,2,2,5,2,2,2,2,7,2,2,2,2,8,2,2,2,2,12,]);
constraint gecode_table_int([vehicle_00001, vehicle_00002, vehicle_00003, vehicle_00004, successor_00007],[1,1,1,1,1,1,1,1,1,2,1,1,1,1,3,1,1,1,1,4,1,1,1,1,5,1,1,1,1,6,1,1,1,1,8,1,1,1,1,11,1,1,1,2,1,1,1,1,2,2,1,1,1,2,3,1,1,1,2,5,1,1,1,2,6,1,1,1,2,11,1,1,2,1,3,1,1,2,1,12,1,1,2,2,3,1,1,2,2,4,1,1,2,2,8,1,1,2,2,12,1,2,1,1,1,1,2,1,1,3,1,2,1,1,4,1,2,1,1,5,1,2,1,1,8,1,2,1,1,11,1,2,1,2,1,1,2,1,2,3,1,2,1,2,5,1,2,1,2,11,1,2,2,1,2,1,2,2,1,3,1,2,2,1,6,1,2,2,1,12,1,2,2,2,2,1,2,2,2,3,1,2,2,2,4,1,2,2,2,6,1,2,2,2,8,1,2,2,2,12,2,1,1,1,2,2,1,1,1,3,2,1,1,1,4,2,1,1,1,6,2,1,1,1,8,2,1,1,1,11,2,1,1,2,2,2,1,1,2,3,2,1,1,2,6,2,1,1,2,11,2,1,2,1,1,2,1,2,1,3,2,1,2,1,5,2,1,2,1,12,2,1,2,2,1,2,1,2,2,3,2,1,2,2,4,2,1,2,2,5,2,1,2,2,8,2,1,2,2,12,2,2,1,1,3,2,2,1,1,4,2,2,1,1,8,2,2,1,1,11,2,2,1,2,3,2,2,1,2,11,2,2,2,1,1,2,2,2,1,2,2,2,2,1,3,2,2,2,1,5,2,2,2,1,6,2,2,2,1,12,2,2,2,2,1,2,2,2,2,2,2,2,2,2,3,2,2,2,2,4,2,2,2,2,5,2,2,2,2,6,2,2,2,2,8,2,2,2,2,12,]);
constraint gecode_table_int([vehicle_00001, vehicle_00002, vehicle_00003, vehicle_00004, successor_00008],[1,1,1,1,1,1,1,1,1,2,1,1,1,1,3,1,1,1,1,4,1,1,1,1,5,1,1,1,1,6,1,1,1,1,7,1,1,1,1,11,1,1,1,2,4,1,1,1,2,12,1,1,2,1,1,1,1,2,1,2,1,1,2,1,4,1,1,2,1,5,1,1,2,1,6,1,1,2,1,11,1,1,2,2,3,1,1,2,2,4,1,1,2,2,7,1,1,2,2,12,1,2,1,1,1,1,2,1,1,3,1,2,1,1,4,1,2,1,1,5,1,2,1,1,7,1,2,1,1,11,1,2,1,2,2,1,2,1,2,4,1,2,1,2,6,1,2,1,2,12,1,2,2,1,1,1,2,2,1,4,1,2,2,1,5,1,2,2,1,11,1,2,2,2,2,1,2,2,2,3,1,2,2,2,4,1,2,2,2,6,1,2,2,2,7,1,2,2,2,12,2,1,1,1,2,2,1,1,1,3,2,1,1,1,4,2,1,1,1,6,2,1,1,1,7,2,1,1,1,11,2,1,1,2,1,2,1,1,2,4,2,1,1,2,5,2,1,1,2,12,2,1,2,1,2,2,1,2,1,4,2,1,2,1,6,2,1,2,1,11,2,1,2,2,1,2,1,2,2,3,2,1,2,2,4,2,1,2,2,5,2,1,2,2,7,2,1,2,2,12,2,2,1,1,3,2,2,1,1,4,2,2,1,1,7,2,2,1,1,11,2,2,1,2,1,2,2,1,2,2,2,2,1,2,4,2,2,1,2,5,2,2,1,2,6,2,2,1,2,12,2,2,2,1,4,2,2,2,1,11,2,2,2,2,1,2,2,2,2,2,2,2,2,2,3,2,2,2,2,4,2,2,2,2,5,2,2,2,2,6,2,2,2,2,7,2,2,2,2,12,]);
constraint gecode_table_int([vehicle_00002, vehicle_00003, vehicle_00004, vehicle_00001, successor_00001],[1,1,1,1,2,1,1,1,1,3,1,1,1,1,4,1,1,1,1,5,1,1,1,1,6,1,1,1,1,7,1,1,1,1,8,1,1,1,1,11,1,1,1,2,5,1,1,1,2,12,1,1,2,1,2,1,1,2,1,3,1,1,2,1,5,1,1,2,1,6,1,1,2,1,7,1,1,2,1,11,1,1,2,2,4,1,1,2,2,5,1,1,2,2,8,1,1,2,2,12,1,2,1,1,2,1,2,1,1,4,1,2,1,1,5,1,2,1,1,6,1,2,1,1,8,1,2,1,1,11,1,2,1,2,3,1,2,1,2,5,1,2,1,2,7,1,2,1,2,12,1,2,2,1,2,1,2,2,1,5,1,2,2,1,6,1,2,2,1,11,1,2,2,2,3,1,2,2,2,4,1,2,2,2,5,1,2,2,2,7,1,2,2,2,8,1,2,2,2,12,2,1,1,1,3,2,1,1,1,4,2,1,1,1,5,2,1,1,1,7,2,1,1,1,8,2,1,1,1,11,2,1,1,2,2,2,1,1,2,5,2,1,1,2,6,2,1,1,2,12,2,1,2,1,3,2,1,2,1,5,2,1,2,1,7,2,1,2,1,11,2,1,2,2,2,2,1,2,2,4,2,1,2,2,5,2,1,2,2,6,2,1,2,2,8,2,1,2,2,12,2,2,1,1,4,2,2,1,1,5,2,2,1,1,8,2,2,1,1,11,2,2,1,2,2,2,2,1,2,3,2,2,1,2,5,2,2,1,2,6,2,2,1,2,7,2,2,1,2,12,2,2,2,1,5,2,2,2,1,11,2,2,2,2,2,2,2,2,2,3,2,2,2,2,4,2,2,2,2,5,2,2,2,2,6,2,2,2,2,7,2,2,2,2,8,2,2,2,2,12,]);
constraint array_int_lq([departureTime_00001, departureTime_00002, departureTime_00003, departureTime_00004, departureTime_00005, departureTime_00006, departureTime_00007, departureTime_00008, departureTime_00009, departureTime_00010, departureTime_00011, departureTime_00012, slack_00011],[departureTime_00002, departureTime_00003, departureTime_00004, departureTime_00005, departureTime_00006, departureTime_00007, departureTime_00008, departureTime_00009, departureTime_00010, departureTime_00011, departureTime_00012, slack_00011, slack_00012]);
constraint array_int_lq([departureTime_00005, departureTime_00006, departureTime_00007, departureTime_00008, departureTime_00009, departureTime_00010, departureTime_00011, departureTime_00012, slack_00011],[departureTime_00006, departureTime_00007, departureTime_00008, departureTime_00009, departureTime_00010, departureTime_00011, departureTime_00012, slack_00011, slack_00012]);
constraint array_int_lq([departureTime_00012, slack_00011],[slack_00011, slack_00012]);
constraint bool_clause([aux53_BOOL,aux77_BOOL],[]);
constraint bool_clause([aux78_BOOL],[aux54_BOOL]);
constraint array_var_int_element(aux19, [successor_00002, successor_00003, successor_00004, successor_00005, successor_00006, successor_00007, successor_00008, successor_00009, successor_00010], 1);
constraint gecode_table_int([predecessorOrder_00009, predecessorOrder_00012],[2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,]);
constraint gecode_table_int([predecessorOrder_00010, predecessorOrder_00011],[2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,]);
constraint array_var_int_element(aux19, [predecessorOrder_00002, predecessorOrder_00003, predecessorOrder_00004, predecessorOrder_00005, predecessorOrder_00006, predecessorOrder_00007, predecessorOrder_00008, predecessorOrder_00009, predecessorOrder_00010], 2);
constraint array_var_int_element(predecessor_00011, [successor_00001, successor_00002, successor_00003, successor_00004, successor_00005, successor_00006, successor_00007, successor_00008, successor_00009], 11);
constraint array_var_int_element(aux18, [predecessor_00002, predecessor_00003, predecessor_00004, predecessor_00005, predecessor_00006, predecessor_00007, predecessor_00008, 12, 11, predecessor_00011, predecessor_00012], 1);
constraint array_var_int_element(successor_00002, [predecessor_00001, predecessor_00002, predecessor_00003, predecessor_00004, predecessor_00005, predecessor_00006, predecessor_00007, predecessor_00008, 12, 11, predecessor_00011, predecessor_00012], 2);
constraint array_var_int_element(successor_00003, [predecessor_00001, predecessor_00002, predecessor_00003, predecessor_00004, predecessor_00005, predecessor_00006, predecessor_00007, predecessor_00008, 12, 11, predecessor_00011, predecessor_00012], 3);
constraint array_var_int_element(successor_00004, [predecessor_00001, predecessor_00002, predecessor_00003, predecessor_00004, predecessor_00005, predecessor_00006, predecessor_00007, predecessor_00008, 12, 11, predecessor_00011, predecessor_00012], 4);
constraint array_var_int_element(successor_00005, [predecessor_00001, predecessor_00002, predecessor_00003, predecessor_00004, predecessor_00005, predecessor_00006, predecessor_00007, predecessor_00008, 12, 11, predecessor_00011, predecessor_00012], 5);
constraint array_var_int_element(successor_00006, [predecessor_00001, predecessor_00002, predecessor_00003, predecessor_00004, predecessor_00005, predecessor_00006, predecessor_00007, predecessor_00008, 12, 11, predecessor_00011, predecessor_00012], 6);
constraint array_var_int_element(successor_00007, [predecessor_00001, predecessor_00002, predecessor_00003, predecessor_00004, predecessor_00005, predecessor_00006, predecessor_00007, predecessor_00008, 12, 11, predecessor_00011, predecessor_00012], 7);
constraint array_var_int_element(successor_00008, [predecessor_00001, predecessor_00002, predecessor_00003, predecessor_00004, predecessor_00005, predecessor_00006, predecessor_00007, predecessor_00008, 12, 11, predecessor_00011, predecessor_00012], 8);
constraint array_var_int_element(successor_00010, [predecessor_00001, predecessor_00002, predecessor_00003, predecessor_00004, predecessor_00005, predecessor_00006, predecessor_00007, predecessor_00008, 12, 11, predecessor_00011, predecessor_00012], 10);
constraint bool_clause([aux54_BOOL,aux79_BOOL],[]);
constraint all_different_int([successor_00001, successor_00002, successor_00003, successor_00004, successor_00005, successor_00006, successor_00007, successor_00008, successor_00009, successor_00010])::domain;
constraint gecode_table_int([successorOrder_00011, successorOrder_00010],[2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,]);
constraint gecode_table_int([successorOrder_00012, successorOrder_00009],[2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,]);
constraint int_le(slack_00011, slack_00012);
constraint int_le(arrivalTime_00005, arrivalTime_00001);
constraint int_le(arrivalTime_00006, arrivalTime_00002);
constraint int_le(arrivalTime_00007, arrivalTime_00003);
constraint int_le(arrivalTime_00008, arrivalTime_00004);
constraint array_int_lq([departureTime_00007, departureTime_00008, departureTime_00009, departureTime_00010, departureTime_00011, departureTime_00012, slack_00011],[departureTime_00008, departureTime_00009, departureTime_00010, departureTime_00011, departureTime_00012, slack_00011, slack_00012]);
constraint gecode_table_int([vehicle_00001, vehicle_00002, vehicle_00003, vehicle_00004, predecessor_00002],[1,1,1,1,1,1,1,1,1,3,1,1,1,1,4,1,1,1,1,5,1,1,1,1,6,1,1,1,1,7,1,1,1,1,8,1,1,1,1,9,1,1,1,2,1,1,1,1,2,3,1,1,1,2,5,1,1,1,2,6,1,1,1,2,7,1,1,1,2,9,1,1,2,1,1,1,1,2,1,4,1,1,2,1,5,1,1,2,1,6,1,1,2,1,8,1,1,2,1,9,1,1,2,2,1,1,1,2,2,5,1,1,2,2,6,1,1,2,2,9,1,2,1,1,6,1,2,1,1,10,1,2,1,2,4,1,2,1,2,6,1,2,1,2,8,1,2,1,2,10,1,2,2,1,3,1,2,2,1,6,1,2,2,1,7,1,2,2,1,10,1,2,2,2,3,1,2,2,2,4,1,2,2,2,6,1,2,2,2,7,1,2,2,2,8,1,2,2,2,10,2,1,1,1,3,2,1,1,1,4,2,1,1,1,6,2,1,1,1,7,2,1,1,1,8,2,1,1,1,9,2,1,1,2,3,2,1,1,2,6,2,1,1,2,7,2,1,1,2,9,2,1,2,1,4,2,1,2,1,6,2,1,2,1,8,2,1,2,1,9,2,1,2,2,6,2,1,2,2,9,2,2,1,1,1,2,2,1,1,5,2,2,1,1,6,2,2,1,1,10,2,2,1,2,1,2,2,1,2,4,2,2,1,2,5,2,2,1,2,6,2,2,1,2,8,2,2,1,2,10,2,2,2,1,1,2,2,2,1,3,2,2,2,1,5,2,2,2,1,6,2,2,2,1,7,2,2,2,1,10,2,2,2,2,1,2,2,2,2,3,2,2,2,2,4,2,2,2,2,5,2,2,2,2,6,2,2,2,2,7,2,2,2,2,8,2,2,2,2,10,]);
constraint gecode_table_int([vehicle_00001, vehicle_00002, vehicle_00003, vehicle_00004, predecessor_00003],[1,1,1,1,1,1,1,1,1,2,1,1,1,1,4,1,1,1,1,5,1,1,1,1,6,1,1,1,1,7,1,1,1,1,8,1,1,1,1,9,1,1,1,2,1,1,1,1,2,2,1,1,1,2,5,1,1,1,2,6,1,1,1,2,7,1,1,1,2,9,1,1,2,1,7,1,1,2,1,10,1,1,2,2,4,1,1,2,2,7,1,1,2,2,8,1,1,2,2,10,1,2,1,1,1,1,2,1,1,4,1,2,1,1,5,1,2,1,1,7,1,2,1,1,8,1,2,1,1,9,1,2,1,2,1,1,2,1,2,5,1,2,1,2,7,1,2,1,2,9,1,2,2,1,2,1,2,2,1,6,1,2,2,1,7,1,2,2,1,10,1,2,2,2,2,1,2,2,2,4,1,2,2,2,6,1,2,2,2,7,1,2,2,2,8,1,2,2,2,10,2,1,1,1,2,2,1,1,1,4,2,1,1,1,6,2,1,1,1,7,2,1,1,1,8,2,1,1,1,9,2,1,1,2,2,2,1,1,2,6,2,1,1,2,7,2,1,1,2,9,2,1,2,1,1,2,1,2,1,5,2,1,2,1,7,2,1,2,1,10,2,1,2,2,1,2,1,2,2,4,2,1,2,2,5,2,1,2,2,7,2,1,2,2,8,2,1,2,2,10,2,2,1,1,4,2,2,1,1,7,2,2,1,1,8,2,2,1,1,9,2,2,1,2,7,2,2,1,2,9,2,2,2,1,1,2,2,2,1,2,2,2,2,1,5,2,2,2,1,6,2,2,2,1,7,2,2,2,1,10,2,2,2,2,1,2,2,2,2,2,2,2,2,2,4,2,2,2,2,5,2,2,2,2,6,2,2,2,2,7,2,2,2,2,8,2,2,2,2,10,]);
constraint gecode_table_int([vehicle_00001, vehicle_00002, vehicle_00003, vehicle_00004, predecessor_00004],[1,1,1,1,1,1,1,1,1,2,1,1,1,1,3,1,1,1,1,5,1,1,1,1,6,1,1,1,1,7,1,1,1,1,8,1,1,1,1,9,1,1,1,2,8,1,1,1,2,10,1,1,2,1,1,1,1,2,1,2,1,1,2,1,5,1,1,2,1,6,1,1,2,1,8,1,1,2,1,9,1,1,2,2,3,1,1,2,2,7,1,1,2,2,8,1,1,2,2,10,1,2,1,1,1,1,2,1,1,3,1,2,1,1,5,1,2,1,1,7,1,2,1,1,8,1,2,1,1,9,1,2,1,2,2,1,2,1,2,6,1,2,1,2,8,1,2,1,2,10,1,2,2,1,1,1,2,2,1,5,1,2,2,1,8,1,2,2,1,9,1,2,2,2,2,1,2,2,2,3,1,2,2,2,6,1,2,2,2,7,1,2,2,2,8,1,2,2,2,10,2,1,1,1,2,2,1,1,1,3,2,1,1,1,6,2,1,1,1,7,2,1,1,1,8,2,1,1,1,9,2,1,1,2,1,2,1,1,2,5,2,1,1,2,8,2,1,1,2,10,2,1,2,1,2,2,1,2,1,6,2,1,2,1,8,2,1,2,1,9,2,1,2,2,1,2,1,2,2,3,2,1,2,2,5,2,1,2,2,7,2,1,2,2,8,2,1,2,2,10,2,2,1,1,3,2,2,1,1,7,2,2,1,1,8,2,2,1,1,9,2,2,1,2,1,2,2,1,2,2,2,2,1,2,5,2,2,1,2,6,2,2,1,2,8,2,2,1,2,10,2,2,2,1,8,2,2,2,1,9,2,2,2,2,1,2,2,2,2,2,2,2,2,2,3,2,2,2,2,5,2,2,2,2,6,2,2,2,2,7,2,2,2,2,8,2,2,2,2,10,]);
constraint gecode_table_int([vehicle_00001, vehicle_00002, vehicle_00003, vehicle_00004, predecessor_00005],[1,1,1,1,1,1,1,1,1,2,1,1,1,1,3,1,1,1,1,4,1,1,1,1,6,1,1,1,1,7,1,1,1,1,8,1,1,1,1,9,1,1,1,2,1,1,1,1,2,2,1,1,1,2,3,1,1,1,2,6,1,1,1,2,7,1,1,1,2,9,1,1,2,1,1,1,1,2,1,2,1,1,2,1,4,1,1,2,1,6,1,1,2,1,8,1,1,2,1,9,1,1,2,2,1,1,1,2,2,2,1,1,2,2,6,1,1,2,2,9,1,2,1,1,1,1,2,1,1,3,1,2,1,1,4,1,2,1,1,7,1,2,1,1,8,1,2,1,1,9,1,2,1,2,1,1,2,1,2,3,1,2,1,2,7,1,2,1,2,9,1,2,2,1,1,1,2,2,1,4,1,2,2,1,8,1,2,2,1,9,1,2,2,2,1,1,2,2,2,9,2,1,1,1,1,2,1,1,1,10,2,1,1,2,1,2,1,1,2,4,2,1,1,2,8,2,1,1,2,10,2,1,2,1,1,2,1,2,1,3,2,1,2,1,7,2,1,2,1,10,2,1,2,2,1,2,1,2,2,3,2,1,2,2,4,2,1,2,2,7,2,1,2,2,8,2,1,2,2,10,2,2,1,1,1,2,2,1,1,2,2,2,1,1,6,2,2,1,1,10,2,2,1,2,1,2,2,1,2,2,2,2,1,2,4,2,2,1,2,6,2,2,1,2,8,2,2,1,2,10,2,2,2,1,1,2,2,2,1,2,2,2,2,1,3,2,2,2,1,6,2,2,2,1,7,2,2,2,1,10,2,2,2,2,1,2,2,2,2,2,2,2,2,2,3,2,2,2,2,4,2,2,2,2,6,2,2,2,2,7,2,2,2,2,8,2,2,2,2,10,]);
constraint gecode_table_int([vehicle_00001, vehicle_00002, vehicle_00003, vehicle_00004, predecessor_00006],[1,1,1,1,1,1,1,1,1,2,1,1,1,1,3,1,1,1,1,4,1,1,1,1,5,1,1,1,1,7,1,1,1,1,8,1,1,1,1,9,1,1,1,2,1,1,1,1,2,2,1,1,1,2,3,1,1,1,2,5,1,1,1,2,7,1,1,1,2,9,1,1,2,1,1,1,1,2,1,2,1,1,2,1,4,1,1,2,1,5,1,1,2,1,8,1,1,2,1,9,1,1,2,2,1,1,1,2,2,2,1,1,2,2,5,1,1,2,2,9,1,2,1,1,2,1,2,1,1,10,1,2,1,2,2,1,2,1,2,4,1,2,1,2,8,1,2,1,2,10,1,2,2,1,2,1,2,2,1,3,1,2,2,1,7,1,2,2,1,10,1,2,2,2,2,1,2,2,2,3,1,2,2,2,4,1,2,2,2,7,1,2,2,2,8,1,2,2,2,10,2,1,1,1,2,2,1,1,1,3,2,1,1,1,4,2,1,1,1,7,2,1,1,1,8,2,1,1,1,9,2,1,1,2,2,2,1,1,2,3,2,1,1,2,7,2,1,1,2,9,2,1,2,1,2,2,1,2,1,4,2,1,2,1,8,2,1,2,1,9,2,1,2,2,2,2,1,2,2,9,2,2,1,1,1,2,2,1,1,2,2,2,1,1,5,2,2,1,1,10,2,2,1,2,1,2,2,1,2,2,2,2,1,2,4,2,2,1,2,5,2,2,1,2,8,2,2,1,2,10,2,2,2,1,1,2,2,2,1,2,2,2,2,1,3,2,2,2,1,5,2,2,2,1,7,2,2,2,1,10,2,2,2,2,1,2,2,2,2,2,2,2,2,2,3,2,2,2,2,4,2,2,2,2,5,2,2,2,2,7,2,2,2,2,8,2,2,2,2,10,]);
constraint gecode_table_int([vehicle_00001, vehicle_00002, vehicle_00003, vehicle_00004, predecessor_00007],[1,1,1,1,1,1,1,1,1,2,1,1,1,1,3,1,1,1,1,4,1,1,1,1,5,1,1,1,1,6,1,1,1,1,8,1,1,1,1,9,1,1,1,2,1,1,1,1,2,2,1,1,1,2,3,1,1,1,2,5,1,1,1,2,6,1,1,1,2,9,1,1,2,1,3,1,1,2,1,10,1,1,2,2,3,1,1,2,2,4,1,1,2,2,8,1,1,2,2,10,1,2,1,1,1,1,2,1,1,3,1,2,1,1,4,1,2,1,1,5,1,2,1,1,8,1,2,1,1,9,1,2,1,2,1,1,2,1,2,3,1,2,1,2,5,1,2,1,2,9,1,2,2,1,2,1,2,2,1,3,1,2,2,1,6,1,2,2,1,10,1,2,2,2,2,1,2,2,2,3,1,2,2,2,4,1,2,2,2,6,1,2,2,2,8,1,2,2,2,10,2,1,1,1,2,2,1,1,1,3,2,1,1,1,4,2,1,1,1,6,2,1,1,1,8,2,1,1,1,9,2,1,1,2,2,2,1,1,2,3,2,1,1,2,6,2,1,1,2,9,2,1,2,1,1,2,1,2,1,3,2,1,2,1,5,2,1,2,1,10,2,1,2,2,1,2,1,2,2,3,2,1,2,2,4,2,1,2,2,5,2,1,2,2,8,2,1,2,2,10,2,2,1,1,3,2,2,1,1,4,2,2,1,1,8,2,2,1,1,9,2,2,1,2,3,2,2,1,2,9,2,2,2,1,1,2,2,2,1,2,2,2,2,1,3,2,2,2,1,5,2,2,2,1,6,2,2,2,1,10,2,2,2,2,1,2,2,2,2,2,2,2,2,2,3,2,2,2,2,4,2,2,2,2,5,2,2,2,2,6,2,2,2,2,8,2,2,2,2,10,]);
constraint gecode_table_int([vehicle_00001, vehicle_00002, vehicle_00003, vehicle_00004, predecessor_00008],[1,1,1,1,1,1,1,1,1,2,1,1,1,1,3,1,1,1,1,4,1,1,1,1,5,1,1,1,1,6,1,1,1,1,7,1,1,1,1,9,1,1,1,2,4,1,1,1,2,10,1,1,2,1,1,1,1,2,1,2,1,1,2,1,4,1,1,2,1,5,1,1,2,1,6,1,1,2,1,9,1,1,2,2,3,1,1,2,2,4,1,1,2,2,7,1,1,2,2,10,1,2,1,1,1,1,2,1,1,3,1,2,1,1,4,1,2,1,1,5,1,2,1,1,7,1,2,1,1,9,1,2,1,2,2,1,2,1,2,4,1,2,1,2,6,1,2,1,2,10,1,2,2,1,1,1,2,2,1,4,1,2,2,1,5,1,2,2,1,9,1,2,2,2,2,1,2,2,2,3,1,2,2,2,4,1,2,2,2,6,1,2,2,2,7,1,2,2,2,10,2,1,1,1,2,2,1,1,1,3,2,1,1,1,4,2,1,1,1,6,2,1,1,1,7,2,1,1,1,9,2,1,1,2,1,2,1,1,2,4,2,1,1,2,5,2,1,1,2,10,2,1,2,1,2,2,1,2,1,4,2,1,2,1,6,2,1,2,1,9,2,1,2,2,1,2,1,2,2,3,2,1,2,2,4,2,1,2,2,5,2,1,2,2,7,2,1,2,2,10,2,2,1,1,3,2,2,1,1,4,2,2,1,1,7,2,2,1,1,9,2,2,1,2,1,2,2,1,2,2,2,2,1,2,4,2,2,1,2,5,2,2,1,2,6,2,2,1,2,10,2,2,2,1,4,2,2,2,1,9,2,2,2,2,1,2,2,2,2,2,2,2,2,2,3,2,2,2,2,4,2,2,2,2,5,2,2,2,2,6,2,2,2,2,7,2,2,2,2,10,]);
constraint array_int_lq([departureTime_00011, departureTime_00012, slack_00011],[departureTime_00012, slack_00011, slack_00012]);
constraint gecode_table_int([vehicle_00002, vehicle_00003, vehicle_00004, vehicle_00001, predecessor_00001],[1,1,1,1,2,1,1,1,1,3,1,1,1,1,4,1,1,1,1,5,1,1,1,1,6,1,1,1,1,7,1,1,1,1,8,1,1,1,1,9,1,1,1,2,5,1,1,1,2,10,1,1,2,1,2,1,1,2,1,3,1,1,2,1,5,1,1,2,1,6,1,1,2,1,7,1,1,2,1,9,1,1,2,2,4,1,1,2,2,5,1,1,2,2,8,1,1,2,2,10,1,2,1,1,2,1,2,1,1,4,1,2,1,1,5,1,2,1,1,6,1,2,1,1,8,1,2,1,1,9,1,2,1,2,3,1,2,1,2,5,1,2,1,2,7,1,2,1,2,10,1,2,2,1,2,1,2,2,1,5,1,2,2,1,6,1,2,2,1,9,1,2,2,2,3,1,2,2,2,4,1,2,2,2,5,1,2,2,2,7,1,2,2,2,8,1,2,2,2,10,2,1,1,1,3,2,1,1,1,4,2,1,1,1,5,2,1,1,1,7,2,1,1,1,8,2,1,1,1,9,2,1,1,2,2,2,1,1,2,5,2,1,1,2,6,2,1,1,2,10,2,1,2,1,3,2,1,2,1,5,2,1,2,1,7,2,1,2,1,9,2,1,2,2,2,2,1,2,2,4,2,1,2,2,5,2,1,2,2,6,2,1,2,2,8,2,1,2,2,10,2,2,1,1,4,2,2,1,1,5,2,2,1,1,8,2,2,1,1,9,2,2,1,2,2,2,2,1,2,3,2,2,1,2,5,2,2,1,2,6,2,2,1,2,7,2,2,1,2,10,2,2,2,1,5,2,2,2,1,9,2,2,2,2,2,2,2,2,2,3,2,2,2,2,4,2,2,2,2,5,2,2,2,2,6,2,2,2,2,7,2,2,2,2,8,2,2,2,2,10,]);
constraint array_var_int_element(predecessor_00002, [successor_00001, successor_00002, successor_00003, successor_00004, successor_00005, successor_00006, successor_00007, successor_00008, successor_00009, successor_00010], 2);
constraint array_var_int_element(predecessor_00003, [successor_00001, successor_00002, successor_00003, successor_00004, successor_00005, successor_00006, successor_00007, successor_00008, successor_00009, successor_00010], 3);
constraint array_var_int_element(predecessor_00004, [successor_00001, successor_00002, successor_00003, successor_00004, successor_00005, successor_00006, successor_00007, successor_00008, successor_00009, successor_00010], 4);
constraint array_var_int_element(predecessor_00005, [successor_00001, successor_00002, successor_00003, successor_00004, successor_00005, successor_00006, successor_00007, successor_00008, successor_00009, successor_00010], 5);
constraint array_var_int_element(predecessor_00006, [successor_00001, successor_00002, successor_00003, successor_00004, successor_00005, successor_00006, successor_00007, successor_00008, successor_00009, successor_00010], 6);
constraint array_var_int_element(predecessor_00007, [successor_00001, successor_00002, successor_00003, successor_00004, successor_00005, successor_00006, successor_00007, successor_00008, successor_00009, successor_00010], 7);
constraint array_var_int_element(predecessor_00008, [successor_00001, successor_00002, successor_00003, successor_00004, successor_00005, successor_00006, successor_00007, successor_00008, successor_00009, successor_00010], 8);
constraint array_var_int_element(predecessor_00012, [successor_00001, successor_00002, successor_00003, successor_00004, successor_00005, successor_00006, successor_00007, successor_00008, successor_00009, successor_00010], 12);
constraint array_var_int_element(successor_00009, [load_00001, load_00002, load_00003, load_00004, load_00005, load_00006, load_00007, load_00008, load_00009, load_00010, load_00011], load_00009);
constraint array_var_int_element(successor_00010, [load_00001, load_00002, load_00003, load_00004, load_00005, load_00006, load_00007, load_00008, load_00009, load_00010, load_00011, load_00012], load_00010);
constraint array_int_lq([departureTime_00004, departureTime_00005, departureTime_00006, departureTime_00007, departureTime_00008, departureTime_00009, departureTime_00010, departureTime_00011, departureTime_00012, slack_00011],[departureTime_00005, departureTime_00006, departureTime_00007, departureTime_00008, departureTime_00009, departureTime_00010, departureTime_00011, departureTime_00012, slack_00011, slack_00012]);
constraint all_different_int([predecessor_00001, predecessor_00002, predecessor_00003, predecessor_00004, predecessor_00005, predecessor_00006, predecessor_00007, predecessor_00008, predecessor_00011, predecessor_00012])::domain;
constraint int_le(load_00001, aux39);
constraint int_le(load_00003, aux38);
constraint int_le(load_00005, aux39);
constraint int_le(load_00006, aux80);
constraint int_le(load_00007, aux38);
constraint int_le(load_00008, aux81);
constraint int_lin_eq([-1,-1,-1,1,1],[objective,arrivalTime_00009,arrivalTime_00010,arrivalTime_00011,arrivalTime_00012],0);
constraint array_int_lq([departureTime_00006, departureTime_00007, departureTime_00008, departureTime_00009, departureTime_00010, departureTime_00011, departureTime_00012, slack_00011],[departureTime_00007, departureTime_00008, departureTime_00009, departureTime_00010, departureTime_00011, departureTime_00012, slack_00011, slack_00012]);
constraint array_var_int_element(aux18, [successorOrder_00002, successorOrder_00003, successorOrder_00004, successorOrder_00005, successorOrder_00006, successorOrder_00007, successorOrder_00008, successorOrder_00009, successorOrder_00010, successorOrder_00011, successorOrder_00012], 2);
constraint array_int_lq([departureTime_00003, departureTime_00004, departureTime_00005, departureTime_00006, departureTime_00007, departureTime_00008, departureTime_00009, departureTime_00010, departureTime_00011, departureTime_00012, slack_00011],[departureTime_00004, departureTime_00005, departureTime_00006, departureTime_00007, departureTime_00008, departureTime_00009, departureTime_00010, departureTime_00011, departureTime_00012, slack_00011, slack_00012]);
constraint array_int_lq([departureTime_00009, departureTime_00010, departureTime_00011, departureTime_00012, slack_00011],[departureTime_00010, departureTime_00011, departureTime_00012, slack_00011, slack_00012]);
constraint bool_clause([aux40_BOOL,aux82_BOOL],[]);
constraint bool_clause([aux57_BOOL,aux83_BOOL],[]);
constraint bool_clause([aux46_BOOL,aux84_BOOL],[]);
constraint bool_clause([aux55_BOOL,aux85_BOOL],[]);
constraint bool_clause([aux42_BOOL,aux86_BOOL],[]);
constraint bool_clause([aux56_BOOL,aux87_BOOL],[]);
constraint bool_clause([aux41_BOOL,aux88_BOOL],[]);
constraint bool_clause([aux47_BOOL,aux89_BOOL],[]);
constraint bool_clause([aux90_BOOL],[aux40_BOOL]);
constraint bool_clause([aux91_BOOL],[aux57_BOOL]);
constraint bool_clause([aux92_BOOL],[aux46_BOOL]);
constraint bool_clause([aux93_BOOL],[aux55_BOOL]);
constraint bool_clause([aux94_BOOL],[aux42_BOOL]);
constraint bool_clause([aux95_BOOL],[aux56_BOOL]);
constraint bool_clause([aux96_BOOL],[aux41_BOOL]);
constraint bool_clause([aux97_BOOL],[aux47_BOOL]);
constraint array_int_lq([departureTime_00010, departureTime_00011, departureTime_00012, slack_00011],[departureTime_00011, departureTime_00012, slack_00011, slack_00012]);
constraint all_different_int([predecessorOrder_00002, predecessorOrder_00003, predecessorOrder_00004, predecessorOrder_00005, predecessorOrder_00006, predecessorOrder_00007, predecessorOrder_00008, predecessorOrder_00009, predecessorOrder_00010, predecessorOrder_00011, predecessorOrder_00012])::domain;
constraint array_var_int_element(successor_00009, [predecessor_00001, predecessor_00002, predecessor_00003, predecessor_00004, predecessor_00005, predecessor_00006, predecessor_00007, predecessor_00008, 12, 11, predecessor_00011], 9);
constraint array_int_lq([departureTime_00002, departureTime_00003, departureTime_00004, departureTime_00005, departureTime_00006, departureTime_00007, departureTime_00008, departureTime_00009, departureTime_00010, departureTime_00011, departureTime_00012, slack_00011],[departureTime_00003, departureTime_00004, departureTime_00005, departureTime_00006, departureTime_00007, departureTime_00008, departureTime_00009, departureTime_00010, departureTime_00011, departureTime_00012, slack_00011, slack_00012]);
constraint array_int_lq([departureTime_00008, departureTime_00009, departureTime_00010, departureTime_00011, departureTime_00012, slack_00011],[departureTime_00009, departureTime_00010, departureTime_00011, departureTime_00012, slack_00011, slack_00012]);
constraint bool_clause([aux48_BOOL,aux98_BOOL],[]);
constraint bool_clause([aux43_BOOL,aux99_BOOL],[]);
constraint bool_clause([aux51_BOOL,aux100_BOOL],[]);
constraint bool_clause([aux44_BOOL,aux101_BOOL],[]);
constraint bool_clause([aux49_BOOL,aux102_BOOL],[]);
constraint bool_clause([aux45_BOOL,aux103_BOOL],[]);
constraint bool_clause([aux50_BOOL,aux104_BOOL],[]);
constraint bool_clause([aux52_BOOL,aux105_BOOL],[]);
constraint bool_clause([aux106_BOOL],[aux48_BOOL]);
constraint bool_clause([aux107_BOOL],[aux43_BOOL]);
constraint bool_clause([aux108_BOOL],[aux51_BOOL]);
constraint bool_clause([aux109_BOOL],[aux44_BOOL]);
constraint bool_clause([aux110_BOOL],[aux49_BOOL]);
constraint bool_clause([aux111_BOOL],[aux45_BOOL]);
constraint bool_clause([aux112_BOOL],[aux50_BOOL]);
constraint bool_clause([aux113_BOOL],[aux52_BOOL]);
constraint int_lin_eq([1,-1,1,1],[aux114,aux58,slack_00004,arrivalTime_00004],0);
constraint array_var_int_element(successor_00004, [arrivalTime_00001, arrivalTime_00002, arrivalTime_00003, arrivalTime_00004, arrivalTime_00005, arrivalTime_00006, arrivalTime_00007, arrivalTime_00008, arrivalTime_00009, arrivalTime_00010, arrivalTime_00011, arrivalTime_00012], aux58);
constraint int_lin_eq([1,-1,1,1],[aux115,aux59,slack_00001,arrivalTime_00001],0);
constraint array_var_int_element(aux18, [arrivalTime_00002, arrivalTime_00003, arrivalTime_00004, arrivalTime_00005, arrivalTime_00006, arrivalTime_00007, arrivalTime_00008, arrivalTime_00009, arrivalTime_00010, arrivalTime_00011, arrivalTime_00012], aux59);
constraint int_lin_eq([1,1,-1],[-50,load_00008,aux60],0);
constraint array_var_int_element(successor_00008, [load_00001, load_00002, load_00003, load_00004, load_00005, load_00006, load_00007, load_00008, load_00009, load_00010, load_00011, load_00012], aux60);
constraint int_lin_eq([1,1,-1],[-30,load_00006,aux61],0);
constraint array_var_int_element(successor_00006, [load_00001, load_00002, load_00003, load_00004, load_00005, load_00006, load_00007, load_00008, load_00009, load_00010, load_00011, load_00012], aux61);
constraint int_lin_eq([1,1,-1],[-15,load_00005,aux62],0);
constraint array_var_int_element(successor_00005, [load_00001, load_00002, load_00003, load_00004, load_00005, load_00006, load_00007, load_00008, load_00009, load_00010, load_00011, load_00012], aux62);
constraint int_lin_eq([1,1,-1],[-10,load_00007,aux63],0);
constraint array_var_int_element(successor_00007, [load_00001, load_00002, load_00003, load_00004, load_00005, load_00006, load_00007, load_00008, load_00009, load_00010, load_00011, load_00012], aux63);
constraint int_lin_eq([1,1,-1],[10,load_00003,aux64],0);
constraint array_var_int_element(successor_00003, [load_00001, load_00002, load_00003, load_00004, load_00005, load_00006, load_00007, load_00008, load_00009, load_00010, load_00011, load_00012], aux64);
constraint int_lin_eq([1,1,-1],[30,load_00002,aux65],0);
constraint array_var_int_element(successor_00002, [load_00001, load_00002, load_00003, load_00004, load_00005, load_00006, load_00007, load_00008, load_00009, load_00010, load_00011, load_00012], aux65);
constraint int_lin_eq([1,1,-1],[50,load_00004,aux66],0);
constraint array_var_int_element(successor_00004, [load_00001, load_00002, load_00003, load_00004, load_00005, load_00006, load_00007, load_00008, load_00009, load_00010, load_00011, load_00012], aux66);
constraint int_lin_eq([1,-1,1,1],[aux116,aux67,slack_00005,arrivalTime_00005],0);
constraint array_var_int_element(successor_00005, [arrivalTime_00001, arrivalTime_00002, arrivalTime_00003, arrivalTime_00004, arrivalTime_00005, arrivalTime_00006, arrivalTime_00007, arrivalTime_00008, arrivalTime_00009, arrivalTime_00010, arrivalTime_00011, arrivalTime_00012], aux67);
constraint int_lin_eq([1,-1,1,1],[aux117,aux68,slack_00006,arrivalTime_00006],0);
constraint array_var_int_element(successor_00006, [arrivalTime_00001, arrivalTime_00002, arrivalTime_00003, arrivalTime_00004, arrivalTime_00005, arrivalTime_00006, arrivalTime_00007, arrivalTime_00008, arrivalTime_00009, arrivalTime_00010, arrivalTime_00011, arrivalTime_00012], aux68);
constraint int_lin_eq([1,-1,1,1],[aux118,aux69,slack_00007,arrivalTime_00007],0);
constraint array_var_int_element(successor_00007, [arrivalTime_00001, arrivalTime_00002, arrivalTime_00003, arrivalTime_00004, arrivalTime_00005, arrivalTime_00006, arrivalTime_00007, arrivalTime_00008, arrivalTime_00009, arrivalTime_00010, arrivalTime_00011, arrivalTime_00012], aux69);
constraint int_lin_eq([1,-1,1,1],[aux119,aux70,slack_00008,arrivalTime_00008],0);
constraint array_var_int_element(successor_00008, [arrivalTime_00001, arrivalTime_00002, arrivalTime_00003, arrivalTime_00004, arrivalTime_00005, arrivalTime_00006, arrivalTime_00007, arrivalTime_00008, arrivalTime_00009, arrivalTime_00010, arrivalTime_00011, arrivalTime_00012], aux70);
constraint int_lin_eq([1,-1,1,1],[aux120,aux71,slack_00010,arrivalTime_00010],0);
constraint array_var_int_element(successor_00010, [arrivalTime_00001, arrivalTime_00002, arrivalTime_00003, arrivalTime_00004, arrivalTime_00005, arrivalTime_00006, arrivalTime_00007, arrivalTime_00008, arrivalTime_00009, arrivalTime_00010, arrivalTime_00011, arrivalTime_00012], aux71);
constraint int_lin_eq([1,-1,1,1],[aux121,aux72,slack_00002,arrivalTime_00002],0);
constraint array_var_int_element(successor_00002, [arrivalTime_00001, arrivalTime_00002, arrivalTime_00003, arrivalTime_00004, arrivalTime_00005, arrivalTime_00006, arrivalTime_00007, arrivalTime_00008, arrivalTime_00009, arrivalTime_00010, arrivalTime_00011, arrivalTime_00012], aux72);
constraint int_lin_eq([1,1,-1],[15,load_00001,aux73],0);
constraint array_var_int_element(aux18, [load_00002, load_00003, load_00004, load_00005, load_00006, load_00007, load_00008, load_00009, load_00010, load_00011, load_00012], aux73);
constraint int_lin_eq([1,-1,1,1],[aux122,aux74,slack_00003,arrivalTime_00003],0);
constraint array_var_int_element(successor_00003, [arrivalTime_00001, arrivalTime_00002, arrivalTime_00003, arrivalTime_00004, arrivalTime_00005, arrivalTime_00006, arrivalTime_00007, arrivalTime_00008, arrivalTime_00009, arrivalTime_00010, arrivalTime_00011, arrivalTime_00012], aux74);
constraint int_lin_eq([1,-1,1,1],[aux123,aux75,slack_00009,arrivalTime_00009],0);
constraint array_var_int_element(successor_00009, [arrivalTime_00001, arrivalTime_00002, arrivalTime_00003, arrivalTime_00004, arrivalTime_00005, arrivalTime_00006, arrivalTime_00007, arrivalTime_00008, arrivalTime_00009, arrivalTime_00010, arrivalTime_00011], aux75);

solve :: int_search([successor_00001, successor_00002, successor_00003, successor_00004, successor_00005, successor_00006, successor_00007, successor_00008, successor_00009, successor_00010, 10, 9, vehicle_00001, vehicle_00002, vehicle_00003, vehicle_00004, vehicle_00001, vehicle_00002, vehicle_00003, vehicle_00004, 1, 2, 1, 2, arrivalTime_00001, arrivalTime_00002, arrivalTime_00003, arrivalTime_00004, arrivalTime_00005, arrivalTime_00006, arrivalTime_00007, arrivalTime_00008, arrivalTime_00009, arrivalTime_00010, arrivalTime_00011, arrivalTime_00012], input_order, indomain_min, complete)
minimize objective;
