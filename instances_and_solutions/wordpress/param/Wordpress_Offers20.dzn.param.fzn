predicate all_different_int(array [int] of var int: xs);
array [1..20] of int: VMPrice = [8403, 9152, 16000, 4105, 4576, 1373, 1430, 5400, 3079, 1470, 1301, 1288, 402, 827, 379, 146, 128, 58, 93, 98];
var {0,1}: AssignmentMatrix_00001_00001_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00001_00002_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00001_00003_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00001_00004_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00001_00005_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00001_00006_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00001_00007_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00001_00008_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00002_00001_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00002_00002_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00002_00003_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00002_00004_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00002_00005_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00002_00006_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00002_00007_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00002_00008_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00003_00001_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00003_00002_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00003_00003_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00003_00004_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00003_00005_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00003_00006_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00003_00007_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00003_00008_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00004_00001_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00004_00002_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00004_00003_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00004_00004_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00004_00005_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00004_00006_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00004_00007_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00004_00008_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00005_00001_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00005_00002_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00005_00003_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00005_00004_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00005_00005_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00005_00006_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00005_00007_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00005_00008_INTEGER :: output_var ;
var 1..17: VMType_00001:: output_var ;
var 1..17: VMType_00002:: output_var ;
var 1..17: VMType_00003:: output_var ;
var 1..17: VMType_00004:: output_var ;
var 1..17: VMType_00005:: output_var ;
var 1..17: VMType_00006:: output_var ;
var 1..17: VMType_00007:: output_var ;
var 1..17: VMType_00008:: output_var ;
var 1..64: CPU_00001:: output_var ;
var 1..64: CPU_00002:: output_var ;
var 1..64: CPU_00003:: output_var ;
var 1..64: CPU_00004:: output_var ;
var 1..64: CPU_00005:: output_var ;
var 1..64: CPU_00006:: output_var ;
var 1..64: CPU_00007:: output_var ;
var 1..64: CPU_00008:: output_var ;
var 1700..976000: Memory_00001:: output_var ;
var 1700..976000: Memory_00002:: output_var ;
var 1700..976000: Memory_00003:: output_var ;
var 1700..976000: Memory_00004:: output_var ;
var 1700..976000: Memory_00005:: output_var ;
var 1700..976000: Memory_00006:: output_var ;
var 1700..976000: Memory_00007:: output_var ;
var 1700..976000: Memory_00008:: output_var ;
var 1000..24000: Storage_00001:: output_var ;
var 1000..24000: Storage_00002:: output_var ;
var 1000..24000: Storage_00003:: output_var ;
var 1000..24000: Storage_00004:: output_var ;
var 1000..24000: Storage_00005:: output_var ;
var 1000..24000: Storage_00006:: output_var ;
var 1000..24000: Storage_00007:: output_var ;
var 1000..24000: Storage_00008:: output_var ;
var 0..16000: Price_00001:: output_var ;
var 0..16000: Price_00002:: output_var ;
var 0..16000: Price_00003:: output_var ;
var 0..16000: Price_00004:: output_var ;
var 128..16000: Price_00005:: output_var ;
var 128..16000: Price_00006:: output_var ;
var 128..16000: Price_00007:: output_var ;
var 128..16000: Price_00008:: output_var ;
var 512..128000: aux0:: var_is_introduced ;
var {1952,3750,7500,15000,30000,30500,61000,68400,117000,122000,244000,488000,976000}: aux1:: var_is_introduced ;
var {1952,3750,7500,15000,30000,30500,61000,68400,117000,122000,244000,488000,976000}: aux2:: var_is_introduced ;
var {1952,3750,7500,15000,30000,30500,61000,68400,117000,122000,244000,488000,976000}: aux3:: var_is_introduced ;
var {1952,3750,7500,15000,30000,30500,61000,68400,117000,122000,244000,488000,976000}: aux4:: var_is_introduced ;
var {1952,3750,7500,15000,30000,30500,61000,68400,117000,122000,244000,488000,976000}: aux5:: var_is_introduced ;
var {1952,3750,7500,15000,30000,30500,61000,68400,117000,122000,244000,488000,976000}: aux6:: var_is_introduced ;
var {1952,3750,7500,15000,30000,30500,61000,68400,117000,122000,244000,488000,976000}: aux7:: var_is_introduced ;
var {1952,3750,7500,15000,30000,30500,61000,68400,117000,122000,244000,488000,976000}: aux8:: var_is_introduced ;
var {1000,2000,3000,4000,6000,8000,24000}: aux9:: var_is_introduced ;
var {1000,2000,3000,4000,6000,8000,24000}: aux10:: var_is_introduced ;
var {1000,2000,3000,4000,6000,8000,24000}: aux11:: var_is_introduced ;
var {1000,2000,3000,4000,6000,8000,24000}: aux12:: var_is_introduced ;
var {1000,2000,3000,4000,6000,8000,24000}: aux13:: var_is_introduced ;
var {1000,2000,3000,4000,6000,8000,24000}: aux14:: var_is_introduced ;
var {1000,2000,3000,4000,6000,8000,24000}: aux15:: var_is_introduced ;
var {1000,2000,3000,4000,6000,8000,24000}: aux16:: var_is_introduced ;
var {2,4,8,16,17,32,64}: aux17:: var_is_introduced ;
var {2,4,8,16,17,32,64}: aux18:: var_is_introduced ;
var {2,4,8,16,17,32,64}: aux19:: var_is_introduced ;
var {2,4,8,16,17,32,64}: aux20:: var_is_introduced ;
var {2,4,8,16,17,32,64}: aux21:: var_is_introduced ;
var {2,4,8,16,17,32,64}: aux22:: var_is_introduced ;
var {2,4,8,16,17,32,64}: aux23:: var_is_introduced ;
var {2,4,8,16,17,32,64}: aux24:: var_is_introduced ;
var bool: aux25_BOOL:: var_is_introduced ;
var bool: aux26_BOOL:: var_is_introduced ;
var 0..7: aux27:: var_is_introduced ;
var bool: aux28_BOOL:: var_is_introduced ;
var {0,1}: aux28_INTEGER :: var_is_introduced ;
var 0..4: aux29:: var_is_introduced ;
var 0..4: aux30:: var_is_introduced ;
var 0..4: aux31:: var_is_introduced ;
var 0..4: aux32:: var_is_introduced ;
var 0..4: aux33:: var_is_introduced ;
var 0..4: aux34:: var_is_introduced ;
var 0..4: aux35:: var_is_introduced ;
var 0..4: aux36:: var_is_introduced ;
var bool: aux37_BOOL:: var_is_introduced ;
var bool: aux38_BOOL:: var_is_introduced ;
var bool: aux39_BOOL:: var_is_introduced ;
var bool: aux40_BOOL:: var_is_introduced ;
var bool: aux41_BOOL:: var_is_introduced ;
var bool: aux42_BOOL:: var_is_introduced ;
var bool: aux43_BOOL:: var_is_introduced ;
var bool: aux44_BOOL:: var_is_introduced ;
var bool: aux45_BOOL:: var_is_introduced ;
var bool: aux46_BOOL:: var_is_introduced ;
var bool: aux47_BOOL:: var_is_introduced ;
var bool: aux48_BOOL:: var_is_introduced ;
var bool: aux49_BOOL:: var_is_introduced ;
var bool: aux50_BOOL:: var_is_introduced ;
var bool: aux51_BOOL:: var_is_introduced ;
var bool: aux52_BOOL:: var_is_introduced ;
var bool: aux53_BOOL:: var_is_introduced ;
var bool: aux54_BOOL:: var_is_introduced ;
var bool: aux55_BOOL:: var_is_introduced ;
var bool: aux56_BOOL:: var_is_introduced ;
var bool: aux57_BOOL:: var_is_introduced ;
var bool: aux58_BOOL:: var_is_introduced ;
var bool: aux59_BOOL:: var_is_introduced ;
var bool: aux60_BOOL:: var_is_introduced ;
var bool: aux61_BOOL:: var_is_introduced ;
var bool: aux62_BOOL:: var_is_introduced ;
var bool: aux63_BOOL:: var_is_introduced ;
var bool: aux64_BOOL:: var_is_introduced ;
var bool: aux65_BOOL:: var_is_introduced ;
var bool: aux66_BOOL:: var_is_introduced ;
var bool: aux67_BOOL:: var_is_introduced ;
var bool: aux68_BOOL:: var_is_introduced ;
var bool: aux69_BOOL:: var_is_introduced ;
var bool: aux70_BOOL:: var_is_introduced ;
var bool: aux71_BOOL:: var_is_introduced ;
var bool: aux72_BOOL:: var_is_introduced ;
var bool: aux73_BOOL:: var_is_introduced ;
var bool: aux74_BOOL:: var_is_introduced ;
var bool: aux75_BOOL:: var_is_introduced ;
var bool: aux76_BOOL:: var_is_introduced ;
var bool: aux77_BOOL:: var_is_introduced ;
var bool: aux78_BOOL:: var_is_introduced ;
var bool: aux79_BOOL:: var_is_introduced ;
var bool: aux80_BOOL:: var_is_introduced ;
var bool: aux81_BOOL:: var_is_introduced ;
var bool: aux82_BOOL:: var_is_introduced ;
var bool: aux83_BOOL:: var_is_introduced ;
var bool: aux84_BOOL:: var_is_introduced ;
var bool: aux85_BOOL:: var_is_introduced ;
var bool: aux86_BOOL:: var_is_introduced ;
var bool: aux87_BOOL:: var_is_introduced ;
var bool: aux88_BOOL:: var_is_introduced ;
var bool: aux89_BOOL:: var_is_introduced ;
var bool: aux90_BOOL:: var_is_introduced ;
var bool: aux91_BOOL:: var_is_introduced ;
var bool: aux92_BOOL:: var_is_introduced ;
var bool: aux93_BOOL:: var_is_introduced ;
var bool: aux94_BOOL:: var_is_introduced ;
var bool: aux95_BOOL:: var_is_introduced ;
var bool: aux96_BOOL:: var_is_introduced ;
var bool: aux97_BOOL:: var_is_introduced ;
var bool: aux98_BOOL:: var_is_introduced ;
var bool: aux99_BOOL:: var_is_introduced ;
var bool: aux100_BOOL:: var_is_introduced ;
var bool: aux101_BOOL:: var_is_introduced ;
var bool: aux102_BOOL:: var_is_introduced ;
var bool: aux103_BOOL:: var_is_introduced ;
var bool: aux104_BOOL:: var_is_introduced ;
var bool: aux105_BOOL:: var_is_introduced ;
var bool: aux106_BOOL:: var_is_introduced ;
var bool: aux107_BOOL:: var_is_introduced ;
var {128,146,379,402,827,1288,1301,1373,1430,1470,3079,4105,4576,5400,8403,9152,16000}: aux108:: var_is_introduced ;
var {128,146,379,402,827,1288,1301,1373,1430,1470,3079,4105,4576,5400,8403,9152,16000}: aux109:: var_is_introduced ;
var {128,146,379,402,827,1288,1301,1373,1430,1470,3079,4105,4576,5400,8403,9152,16000}: aux110:: var_is_introduced ;
var {128,146,379,402,827,1288,1301,1373,1430,1470,3079,4105,4576,5400,8403,9152,16000}: aux111:: var_is_introduced ;
var {128,146,379,402,827,1288,1301,1373,1430,1470,3079,4105,4576,5400,8403,9152,16000}: aux112:: var_is_introduced ;
var {128,146,379,402,827,1288,1301,1373,1430,1470,3079,4105,4576,5400,8403,9152,16000}: aux113:: var_is_introduced ;
var {128,146,379,402,827,1288,1301,1373,1430,1470,3079,4105,4576,5400,8403,9152,16000}: aux114:: var_is_introduced ;
var {128,146,379,402,827,1288,1301,1373,1430,1470,3079,4105,4576,5400,8403,9152,16000}: aux115:: var_is_introduced ;
constraint bool2int(aux28_BOOL,aux28_INTEGER);
constraint array_var_int_element(VMType_00005, [8403, 9152, 16000, 4105, 4576, 1373, 1430, 5400, 3079, 1470, 1301, 1288, 402, 827, 379, 146, 128], aux108);
constraint array_var_int_element(VMType_00001, [8403, 9152, 16000, 4105, 4576, 1373, 1430, 5400, 3079, 1470, 1301, 1288, 402, 827, 379, 146, 128], aux109);
constraint array_var_int_element(VMType_00006, [8403, 9152, 16000, 4105, 4576, 1373, 1430, 5400, 3079, 1470, 1301, 1288, 402, 827, 379, 146, 128], aux110);
constraint array_var_int_element(VMType_00002, [8403, 9152, 16000, 4105, 4576, 1373, 1430, 5400, 3079, 1470, 1301, 1288, 402, 827, 379, 146, 128], aux111);
constraint array_var_int_element(VMType_00007, [8403, 9152, 16000, 4105, 4576, 1373, 1430, 5400, 3079, 1470, 1301, 1288, 402, 827, 379, 146, 128], aux112);
constraint array_var_int_element(VMType_00003, [8403, 9152, 16000, 4105, 4576, 1373, 1430, 5400, 3079, 1470, 1301, 1288, 402, 827, 379, 146, 128], aux113);
constraint array_var_int_element(VMType_00008, [8403, 9152, 16000, 4105, 4576, 1373, 1430, 5400, 3079, 1470, 1301, 1288, 402, 827, 379, 146, 128], aux114);
constraint array_var_int_element(VMType_00004, [8403, 9152, 16000, 4105, 4576, 1373, 1430, 5400, 3079, 1470, 1301, 1288, 402, 827, 379, 146, 128], aux115);
constraint int_ne_reif(0,aux31,aux37_BOOL);
constraint int_eq_reif(VMType_00001,1,aux38_BOOL);
constraint int_ne_reif(0,aux29,aux39_BOOL);
constraint int_eq_reif(VMType_00002,1,aux40_BOOL);
constraint int_ne_reif(0,aux30,aux41_BOOL);
constraint int_eq_reif(VMType_00003,1,aux42_BOOL);
constraint int_ne_reif(0,aux35,aux43_BOOL);
constraint int_eq_reif(VMType_00004,1,aux44_BOOL);
constraint int_ne_reif(0,aux36,aux45_BOOL);
constraint int_eq_reif(VMType_00005,1,aux46_BOOL);
constraint int_ne_reif(0,aux32,aux47_BOOL);
constraint int_eq_reif(VMType_00006,1,aux48_BOOL);
constraint int_ne_reif(0,aux34,aux49_BOOL);
constraint int_eq_reif(VMType_00007,1,aux50_BOOL);
constraint int_ne_reif(0,aux33,aux51_BOOL);
constraint int_eq_reif(VMType_00008,1,aux52_BOOL);
constraint int_lin_le_reif([-3,-3,-3,-3,-3,-3,-3,-3,1,1,1,1,1,1,1,1,-1],[AssignmentMatrix_00004_00001_INTEGER,AssignmentMatrix_00004_00002_INTEGER,AssignmentMatrix_00004_00003_INTEGER,AssignmentMatrix_00004_00004_INTEGER,AssignmentMatrix_00004_00005_INTEGER,AssignmentMatrix_00004_00006_INTEGER,AssignmentMatrix_00004_00007_INTEGER,AssignmentMatrix_00004_00008_INTEGER,AssignmentMatrix_00001_00001_INTEGER,AssignmentMatrix_00001_00002_INTEGER,AssignmentMatrix_00001_00003_INTEGER,AssignmentMatrix_00001_00004_INTEGER,AssignmentMatrix_00001_00005_INTEGER,AssignmentMatrix_00001_00006_INTEGER,AssignmentMatrix_00001_00007_INTEGER,AssignmentMatrix_00001_00008_INTEGER,0],0,aux53_BOOL);
constraint bool_eq_reif(aux26_BOOL,false,aux54_BOOL);
constraint int_eq_reif(aux27,0,aux55_BOOL);
constraint int_le_reif(aux36, 0,aux56_BOOL);
constraint int_eq_reif(Storage_00005,aux14,aux57_BOOL);
constraint int_eq_reif(aux22,CPU_00005,aux58_BOOL);
constraint int_eq_reif(aux108,Price_00005,aux59_BOOL);
constraint int_eq_reif(aux8,Memory_00005,aux60_BOOL);
constraint array_bool_and([aux57_BOOL,aux58_BOOL,aux59_BOOL,aux60_BOOL],aux61_BOOL);
constraint int_le_reif(aux31, 0,aux62_BOOL);
constraint int_eq_reif(Storage_00001,aux10,aux63_BOOL);
constraint int_eq_reif(aux19,CPU_00001,aux64_BOOL);
constraint int_eq_reif(aux109,Price_00001,aux65_BOOL);
constraint int_eq_reif(aux2,Memory_00001,aux66_BOOL);
constraint array_bool_and([aux63_BOOL,aux64_BOOL,aux65_BOOL,aux66_BOOL],aux67_BOOL);
constraint int_le_reif(aux32, 0,aux68_BOOL);
constraint int_eq_reif(Storage_00006,aux13,aux69_BOOL);
constraint int_eq_reif(aux21,CPU_00006,aux70_BOOL);
constraint int_eq_reif(aux110,Price_00006,aux71_BOOL);
constraint int_eq_reif(aux7,Memory_00006,aux72_BOOL);
constraint array_bool_and([aux69_BOOL,aux70_BOOL,aux71_BOOL,aux72_BOOL],aux73_BOOL);
constraint bool_eq_reif(aux28_BOOL,false,aux74_BOOL);
constraint int_le_reif(aux29, 0,aux75_BOOL);
constraint int_eq_reif(Storage_00002,aux9,aux76_BOOL);
constraint int_eq_reif(aux18,CPU_00002,aux77_BOOL);
constraint int_eq_reif(aux111,Price_00002,aux78_BOOL);
constraint int_eq_reif(aux1,Memory_00002,aux79_BOOL);
constraint array_bool_and([aux76_BOOL,aux77_BOOL,aux78_BOOL,aux79_BOOL],aux80_BOOL);
constraint bool_eq_reif(aux26_BOOL,false,aux81_BOOL);
constraint int_lin_le_reif([-7,-7,-7,-7,-7,-7,-7,-7,1,1,1,1,1,1,1,1,-1],[AssignmentMatrix_00003_00001_INTEGER,AssignmentMatrix_00003_00002_INTEGER,AssignmentMatrix_00003_00003_INTEGER,AssignmentMatrix_00003_00004_INTEGER,AssignmentMatrix_00003_00005_INTEGER,AssignmentMatrix_00003_00006_INTEGER,AssignmentMatrix_00003_00007_INTEGER,AssignmentMatrix_00003_00008_INTEGER,AssignmentMatrix_00001_00001_INTEGER,AssignmentMatrix_00001_00002_INTEGER,AssignmentMatrix_00001_00003_INTEGER,AssignmentMatrix_00001_00004_INTEGER,AssignmentMatrix_00001_00005_INTEGER,AssignmentMatrix_00001_00006_INTEGER,AssignmentMatrix_00001_00007_INTEGER,AssignmentMatrix_00001_00008_INTEGER,0],0,aux82_BOOL);
constraint int_le_reif(aux34, 0,aux83_BOOL);
constraint int_eq_reif(Storage_00007,aux16,aux84_BOOL);
constraint int_eq_reif(aux20,CPU_00007,aux85_BOOL);
constraint int_eq_reif(aux112,Price_00007,aux86_BOOL);
constraint int_eq_reif(aux4,Memory_00007,aux87_BOOL);
constraint array_bool_and([aux84_BOOL,aux85_BOOL,aux86_BOOL,aux87_BOOL],aux88_BOOL);
constraint int_le_reif(aux30, 0,aux89_BOOL);
constraint int_eq_reif(Storage_00003,aux12,aux90_BOOL);
constraint int_eq_reif(aux17,CPU_00003,aux91_BOOL);
constraint int_eq_reif(aux113,Price_00003,aux92_BOOL);
constraint int_eq_reif(aux6,Memory_00003,aux93_BOOL);
constraint array_bool_and([aux90_BOOL,aux91_BOOL,aux92_BOOL,aux93_BOOL],aux94_BOOL);
constraint int_le_reif(aux33, 0,aux95_BOOL);
constraint int_eq_reif(Storage_00008,aux15,aux96_BOOL);
constraint int_eq_reif(aux24,CPU_00008,aux97_BOOL);
constraint int_eq_reif(aux114,Price_00008,aux98_BOOL);
constraint int_eq_reif(aux3,Memory_00008,aux99_BOOL);
constraint array_bool_and([aux96_BOOL,aux97_BOOL,aux98_BOOL,aux99_BOOL],aux100_BOOL);
constraint bool_eq_reif(aux25_BOOL,false,aux101_BOOL);
constraint int_le_reif(aux35, 0,aux102_BOOL);
constraint int_eq_reif(Storage_00004,aux11,aux103_BOOL);
constraint int_eq_reif(aux23,CPU_00004,aux104_BOOL);
constraint int_eq_reif(aux115,Price_00004,aux105_BOOL);
constraint int_eq_reif(aux5,Memory_00004,aux106_BOOL);
constraint array_bool_and([aux103_BOOL,aux104_BOOL,aux105_BOOL,aux106_BOOL],aux107_BOOL);
constraint array_var_int_element(VMType_00002, [976000, 488000, 1952, 244000, 244000, 122000, 30000, 117000, 122000, 61000, 68400, 68400, 15000, 30500, 30500, 7500, 3750], aux1);
constraint array_var_int_element(VMType_00001, [976000, 488000, 1952, 244000, 244000, 122000, 30000, 117000, 122000, 61000, 68400, 68400, 15000, 30500, 30500, 7500, 3750], aux2);
constraint array_var_int_element(VMType_00008, [976000, 488000, 1952, 244000, 244000, 122000, 30000, 117000, 122000, 61000, 68400, 68400, 15000, 30500, 30500, 7500, 3750], aux3);
constraint array_var_int_element(VMType_00007, [976000, 488000, 1952, 244000, 244000, 122000, 30000, 117000, 122000, 61000, 68400, 68400, 15000, 30500, 30500, 7500, 3750], aux4);
constraint array_var_int_element(VMType_00004, [976000, 488000, 1952, 244000, 244000, 122000, 30000, 117000, 122000, 61000, 68400, 68400, 15000, 30500, 30500, 7500, 3750], aux5);
constraint array_var_int_element(VMType_00003, [976000, 488000, 1952, 244000, 244000, 122000, 30000, 117000, 122000, 61000, 68400, 68400, 15000, 30500, 30500, 7500, 3750], aux6);
constraint array_var_int_element(VMType_00006, [976000, 488000, 1952, 244000, 244000, 122000, 30000, 117000, 122000, 61000, 68400, 68400, 15000, 30500, 30500, 7500, 3750], aux7);
constraint array_var_int_element(VMType_00005, [976000, 488000, 1952, 244000, 244000, 122000, 30000, 117000, 122000, 61000, 68400, 68400, 15000, 30500, 30500, 7500, 3750], aux8);
constraint array_var_int_element(VMType_00002, [1000, 8000, 1000, 2000, 4000, 2000, 2000, 24000, 1000, 6000, 2000, 2000, 2000, 3000, 1000, 1000, 2000], aux9);
constraint array_var_int_element(VMType_00001, [1000, 8000, 1000, 2000, 4000, 2000, 2000, 24000, 1000, 6000, 2000, 2000, 2000, 3000, 1000, 1000, 2000], aux10);
constraint array_var_int_element(VMType_00004, [1000, 8000, 1000, 2000, 4000, 2000, 2000, 24000, 1000, 6000, 2000, 2000, 2000, 3000, 1000, 1000, 2000], aux11);
constraint array_var_int_element(VMType_00003, [1000, 8000, 1000, 2000, 4000, 2000, 2000, 24000, 1000, 6000, 2000, 2000, 2000, 3000, 1000, 1000, 2000], aux12);
constraint array_var_int_element(VMType_00006, [1000, 8000, 1000, 2000, 4000, 2000, 2000, 24000, 1000, 6000, 2000, 2000, 2000, 3000, 1000, 1000, 2000], aux13);
constraint array_var_int_element(VMType_00005, [1000, 8000, 1000, 2000, 4000, 2000, 2000, 24000, 1000, 6000, 2000, 2000, 2000, 3000, 1000, 1000, 2000], aux14);
constraint array_var_int_element(VMType_00008, [1000, 8000, 1000, 2000, 4000, 2000, 2000, 24000, 1000, 6000, 2000, 2000, 2000, 3000, 1000, 1000, 2000], aux15);
constraint array_var_int_element(VMType_00007, [1000, 8000, 1000, 2000, 4000, 2000, 2000, 24000, 1000, 6000, 2000, 2000, 2000, 3000, 1000, 1000, 2000], aux16);
constraint array_var_int_element(VMType_00003, [64, 64, 64, 32, 32, 16, 16, 17, 16, 8, 8, 8, 4, 4, 4, 2, 2], aux17);
constraint array_var_int_element(VMType_00002, [64, 64, 64, 32, 32, 16, 16, 17, 16, 8, 8, 8, 4, 4, 4, 2, 2], aux18);
constraint array_var_int_element(VMType_00001, [64, 64, 64, 32, 32, 16, 16, 17, 16, 8, 8, 8, 4, 4, 4, 2, 2], aux19);
constraint array_var_int_element(VMType_00007, [64, 64, 64, 32, 32, 16, 16, 17, 16, 8, 8, 8, 4, 4, 4, 2, 2], aux20);
constraint array_var_int_element(VMType_00006, [64, 64, 64, 32, 32, 16, 16, 17, 16, 8, 8, 8, 4, 4, 4, 2, 2], aux21);
constraint array_var_int_element(VMType_00005, [64, 64, 64, 32, 32, 16, 16, 17, 16, 8, 8, 8, 4, 4, 4, 2, 2], aux22);
constraint array_var_int_element(VMType_00004, [64, 64, 64, 32, 32, 16, 16, 17, 16, 8, 8, 8, 4, 4, 4, 2, 2], aux23);
constraint array_var_int_element(VMType_00008, [64, 64, 64, 32, 32, 16, 16, 17, 16, 8, 8, 8, 4, 4, 4, 2, 2], aux24);
constraint int_le_reif(aux27, 0,aux25_BOOL);
constraint int_le_reif(1, aux28_INTEGER,aux26_BOOL);
constraint int_lin_eq([1,1,1,1,1,1,1,1,-1],[AssignmentMatrix_00004_00001_INTEGER,AssignmentMatrix_00004_00002_INTEGER,AssignmentMatrix_00004_00003_INTEGER,AssignmentMatrix_00004_00004_INTEGER,AssignmentMatrix_00004_00005_INTEGER,AssignmentMatrix_00004_00006_INTEGER,AssignmentMatrix_00004_00007_INTEGER,AssignmentMatrix_00004_00008_INTEGER,aux27],0);
constraint int_lin_eq([1,1,1,1,1,1,1,1,-1],[AssignmentMatrix_00003_00001_INTEGER,AssignmentMatrix_00003_00002_INTEGER,AssignmentMatrix_00003_00003_INTEGER,AssignmentMatrix_00003_00004_INTEGER,AssignmentMatrix_00003_00005_INTEGER,AssignmentMatrix_00003_00006_INTEGER,AssignmentMatrix_00003_00007_INTEGER,AssignmentMatrix_00003_00008_INTEGER,aux28_INTEGER],0);
constraint int_lin_eq([1,1,1,-1,1,1],[AssignmentMatrix_00003_00002_INTEGER,AssignmentMatrix_00004_00002_INTEGER,AssignmentMatrix_00005_00002_INTEGER,aux29,AssignmentMatrix_00001_00002_INTEGER,AssignmentMatrix_00002_00002_INTEGER],0);
constraint int_lin_eq([1,1,1,-1,1,1],[AssignmentMatrix_00003_00003_INTEGER,AssignmentMatrix_00004_00003_INTEGER,AssignmentMatrix_00005_00003_INTEGER,aux30,AssignmentMatrix_00001_00003_INTEGER,AssignmentMatrix_00002_00003_INTEGER],0);
constraint int_lin_eq([1,1,1,-1,1,1],[AssignmentMatrix_00003_00001_INTEGER,AssignmentMatrix_00004_00001_INTEGER,AssignmentMatrix_00005_00001_INTEGER,aux31,AssignmentMatrix_00001_00001_INTEGER,AssignmentMatrix_00002_00001_INTEGER],0);
constraint int_lin_eq([1,1,1,-1,1,1],[AssignmentMatrix_00003_00006_INTEGER,AssignmentMatrix_00004_00006_INTEGER,AssignmentMatrix_00005_00006_INTEGER,aux32,AssignmentMatrix_00001_00006_INTEGER,AssignmentMatrix_00002_00006_INTEGER],0);
constraint int_lin_eq([1,1,1,-1,1,1],[AssignmentMatrix_00003_00008_INTEGER,AssignmentMatrix_00004_00008_INTEGER,AssignmentMatrix_00005_00008_INTEGER,aux33,AssignmentMatrix_00001_00008_INTEGER,AssignmentMatrix_00002_00008_INTEGER],0);
constraint int_lin_eq([1,1,1,-1,1,1],[AssignmentMatrix_00003_00007_INTEGER,AssignmentMatrix_00004_00007_INTEGER,AssignmentMatrix_00005_00007_INTEGER,aux34,AssignmentMatrix_00001_00007_INTEGER,AssignmentMatrix_00002_00007_INTEGER],0);
constraint int_lin_eq([1,1,1,-1,1,1],[AssignmentMatrix_00003_00004_INTEGER,AssignmentMatrix_00004_00004_INTEGER,AssignmentMatrix_00005_00004_INTEGER,aux35,AssignmentMatrix_00001_00004_INTEGER,AssignmentMatrix_00002_00004_INTEGER],0);
constraint int_lin_eq([1,1,1,-1,1,1],[AssignmentMatrix_00003_00005_INTEGER,AssignmentMatrix_00004_00005_INTEGER,AssignmentMatrix_00005_00005_INTEGER,aux36,AssignmentMatrix_00001_00005_INTEGER,AssignmentMatrix_00002_00005_INTEGER],0);
constraint int_lin_eq([1,1,1,1,1,1,1,1,-1],[Price_00001,Price_00002,Price_00003,Price_00004,Price_00005,Price_00006,Price_00007,Price_00008,aux0],0);
constraint array_bool_or([aux37_BOOL,aux38_BOOL],true);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-1,-1,1],[AssignmentMatrix_00005_00001_INTEGER,AssignmentMatrix_00005_00002_INTEGER,AssignmentMatrix_00005_00003_INTEGER,AssignmentMatrix_00005_00004_INTEGER,AssignmentMatrix_00005_00005_INTEGER,AssignmentMatrix_00005_00006_INTEGER,AssignmentMatrix_00005_00007_INTEGER,AssignmentMatrix_00005_00008_INTEGER,2],0);
constraint array_bool_or([aux39_BOOL,aux40_BOOL],true);
constraint array_bool_or([aux41_BOOL,aux42_BOOL],true);
constraint array_bool_or([aux43_BOOL,aux44_BOOL],true);
constraint array_bool_or([aux45_BOOL,aux46_BOOL],true);
constraint array_bool_or([aux47_BOOL,aux48_BOOL],true);
constraint array_bool_or([aux49_BOOL,aux50_BOOL],true);
constraint array_bool_or([aux51_BOOL,aux52_BOOL],true);
constraint array_bool_or([aux25_BOOL,aux53_BOOL],true);
constraint array_bool_or([aux54_BOOL,aux55_BOOL],true);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00004_00001_INTEGER,AssignmentMatrix_00002_00001_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00004_00002_INTEGER,AssignmentMatrix_00002_00002_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00004_00003_INTEGER,AssignmentMatrix_00002_00003_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00004_00004_INTEGER,AssignmentMatrix_00002_00004_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00004_00005_INTEGER,AssignmentMatrix_00002_00005_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00004_00006_INTEGER,AssignmentMatrix_00002_00006_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00004_00007_INTEGER,AssignmentMatrix_00002_00007_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00004_00008_INTEGER,AssignmentMatrix_00002_00008_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00003_00001_INTEGER,AssignmentMatrix_00001_00001_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00003_00002_INTEGER,AssignmentMatrix_00001_00002_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00003_00003_INTEGER,AssignmentMatrix_00001_00003_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00003_00004_INTEGER,AssignmentMatrix_00001_00004_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00003_00005_INTEGER,AssignmentMatrix_00001_00005_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00003_00006_INTEGER,AssignmentMatrix_00001_00006_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00003_00007_INTEGER,AssignmentMatrix_00001_00007_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00003_00008_INTEGER,AssignmentMatrix_00001_00008_INTEGER,1],0);
constraint array_bool_or([aux56_BOOL,aux61_BOOL],true);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-1,-1,1],[AssignmentMatrix_00002_00001_INTEGER,AssignmentMatrix_00002_00002_INTEGER,AssignmentMatrix_00002_00003_INTEGER,AssignmentMatrix_00002_00004_INTEGER,AssignmentMatrix_00002_00005_INTEGER,AssignmentMatrix_00002_00006_INTEGER,AssignmentMatrix_00002_00007_INTEGER,AssignmentMatrix_00002_00008_INTEGER,2],0);
constraint array_bool_or([aux62_BOOL,aux67_BOOL],true);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00004_00001_INTEGER,AssignmentMatrix_00005_00001_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00004_00002_INTEGER,AssignmentMatrix_00005_00002_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00004_00003_INTEGER,AssignmentMatrix_00005_00003_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00004_00004_INTEGER,AssignmentMatrix_00005_00004_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00004_00005_INTEGER,AssignmentMatrix_00005_00005_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00004_00006_INTEGER,AssignmentMatrix_00005_00006_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00004_00007_INTEGER,AssignmentMatrix_00005_00007_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00004_00008_INTEGER,AssignmentMatrix_00005_00008_INTEGER,1],0);
constraint array_bool_or([aux68_BOOL,aux73_BOOL],true);
constraint int_lin_le([2,2,2,2,2,2,2,2,-3,-3,-3,-3,-3,-3,-3,-3,-1],[AssignmentMatrix_00001_00001_INTEGER,AssignmentMatrix_00001_00002_INTEGER,AssignmentMatrix_00001_00003_INTEGER,AssignmentMatrix_00001_00004_INTEGER,AssignmentMatrix_00001_00005_INTEGER,AssignmentMatrix_00001_00006_INTEGER,AssignmentMatrix_00001_00007_INTEGER,AssignmentMatrix_00001_00008_INTEGER,AssignmentMatrix_00002_00001_INTEGER,AssignmentMatrix_00002_00002_INTEGER,AssignmentMatrix_00002_00003_INTEGER,AssignmentMatrix_00002_00004_INTEGER,AssignmentMatrix_00002_00005_INTEGER,AssignmentMatrix_00002_00006_INTEGER,AssignmentMatrix_00002_00007_INTEGER,AssignmentMatrix_00002_00008_INTEGER,0],0);
constraint array_bool_or([aux74_BOOL,aux25_BOOL],true);
constraint int_lin_le([4,4,4,2,2,-1],[AssignmentMatrix_00003_00001_INTEGER,AssignmentMatrix_00004_00001_INTEGER,AssignmentMatrix_00005_00001_INTEGER,AssignmentMatrix_00001_00001_INTEGER,AssignmentMatrix_00002_00001_INTEGER,aux19],0);
constraint int_lin_le([4,4,4,2,2,-1],[AssignmentMatrix_00003_00002_INTEGER,AssignmentMatrix_00004_00002_INTEGER,AssignmentMatrix_00005_00002_INTEGER,AssignmentMatrix_00001_00002_INTEGER,AssignmentMatrix_00002_00002_INTEGER,aux18],0);
constraint int_lin_le([4,4,4,2,2,-1],[AssignmentMatrix_00003_00003_INTEGER,AssignmentMatrix_00004_00003_INTEGER,AssignmentMatrix_00005_00003_INTEGER,AssignmentMatrix_00001_00003_INTEGER,AssignmentMatrix_00002_00003_INTEGER,aux17],0);
constraint array_bool_or([aux75_BOOL,aux80_BOOL],true);
constraint int_lin_le([4,4,4,2,2,-1],[AssignmentMatrix_00003_00004_INTEGER,AssignmentMatrix_00004_00004_INTEGER,AssignmentMatrix_00005_00004_INTEGER,AssignmentMatrix_00001_00004_INTEGER,AssignmentMatrix_00002_00004_INTEGER,aux23],0);
constraint int_lin_le([2048,2048,4000,512,512,-1],[AssignmentMatrix_00003_00001_INTEGER,AssignmentMatrix_00004_00001_INTEGER,AssignmentMatrix_00005_00001_INTEGER,AssignmentMatrix_00001_00001_INTEGER,AssignmentMatrix_00002_00001_INTEGER,aux2],0);
constraint int_lin_le([4,4,4,2,2,-1],[AssignmentMatrix_00003_00005_INTEGER,AssignmentMatrix_00004_00005_INTEGER,AssignmentMatrix_00005_00005_INTEGER,AssignmentMatrix_00001_00005_INTEGER,AssignmentMatrix_00002_00005_INTEGER,aux22],0);
constraint int_lin_le([2048,2048,4000,512,512,-1],[AssignmentMatrix_00003_00002_INTEGER,AssignmentMatrix_00004_00002_INTEGER,AssignmentMatrix_00005_00002_INTEGER,AssignmentMatrix_00001_00002_INTEGER,AssignmentMatrix_00002_00002_INTEGER,aux1],0);
constraint int_lin_le([4,4,4,2,2,-1],[AssignmentMatrix_00003_00006_INTEGER,AssignmentMatrix_00004_00006_INTEGER,AssignmentMatrix_00005_00006_INTEGER,AssignmentMatrix_00001_00006_INTEGER,AssignmentMatrix_00002_00006_INTEGER,aux21],0);
constraint int_lin_le([2048,2048,4000,512,512,-1],[AssignmentMatrix_00003_00003_INTEGER,AssignmentMatrix_00004_00003_INTEGER,AssignmentMatrix_00005_00003_INTEGER,AssignmentMatrix_00001_00003_INTEGER,AssignmentMatrix_00002_00003_INTEGER,aux6],0);
constraint int_lin_le([4,4,4,2,2,-1],[AssignmentMatrix_00003_00007_INTEGER,AssignmentMatrix_00004_00007_INTEGER,AssignmentMatrix_00005_00007_INTEGER,AssignmentMatrix_00001_00007_INTEGER,AssignmentMatrix_00002_00007_INTEGER,aux20],0);
constraint int_lin_le([2048,2048,4000,512,512,-1],[AssignmentMatrix_00003_00004_INTEGER,AssignmentMatrix_00004_00004_INTEGER,AssignmentMatrix_00005_00004_INTEGER,AssignmentMatrix_00001_00004_INTEGER,AssignmentMatrix_00002_00004_INTEGER,aux5],0);
constraint array_bool_or([aux81_BOOL,aux82_BOOL],true);
constraint int_lin_le([4,4,4,2,2,-1],[AssignmentMatrix_00003_00008_INTEGER,AssignmentMatrix_00004_00008_INTEGER,AssignmentMatrix_00005_00008_INTEGER,AssignmentMatrix_00001_00008_INTEGER,AssignmentMatrix_00002_00008_INTEGER,aux24],0);
constraint int_lin_le([2048,2048,4000,512,512,-1],[AssignmentMatrix_00003_00005_INTEGER,AssignmentMatrix_00004_00005_INTEGER,AssignmentMatrix_00005_00005_INTEGER,AssignmentMatrix_00001_00005_INTEGER,AssignmentMatrix_00002_00005_INTEGER,aux8],0);
constraint int_lin_le([2048,2048,4000,512,512,-1],[AssignmentMatrix_00003_00006_INTEGER,AssignmentMatrix_00004_00006_INTEGER,AssignmentMatrix_00005_00006_INTEGER,AssignmentMatrix_00001_00006_INTEGER,AssignmentMatrix_00002_00006_INTEGER,aux7],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00003_00001_INTEGER,AssignmentMatrix_00002_00001_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00003_00002_INTEGER,AssignmentMatrix_00002_00002_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00003_00003_INTEGER,AssignmentMatrix_00002_00003_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00003_00004_INTEGER,AssignmentMatrix_00002_00004_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00003_00005_INTEGER,AssignmentMatrix_00002_00005_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00003_00006_INTEGER,AssignmentMatrix_00002_00006_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00003_00007_INTEGER,AssignmentMatrix_00002_00007_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00003_00008_INTEGER,AssignmentMatrix_00002_00008_INTEGER,1],0);
constraint int_lin_le([2048,2048,4000,512,512,-1],[AssignmentMatrix_00003_00007_INTEGER,AssignmentMatrix_00004_00007_INTEGER,AssignmentMatrix_00005_00007_INTEGER,AssignmentMatrix_00001_00007_INTEGER,AssignmentMatrix_00002_00007_INTEGER,aux4],0);
constraint int_lin_le([2048,2048,4000,512,512,-1],[AssignmentMatrix_00003_00008_INTEGER,AssignmentMatrix_00004_00008_INTEGER,AssignmentMatrix_00005_00008_INTEGER,AssignmentMatrix_00001_00008_INTEGER,AssignmentMatrix_00002_00008_INTEGER,aux3],0);
constraint array_bool_or([aux83_BOOL,aux88_BOOL],true);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-1,-1,1],[AssignmentMatrix_00001_00001_INTEGER,AssignmentMatrix_00001_00002_INTEGER,AssignmentMatrix_00001_00003_INTEGER,AssignmentMatrix_00001_00004_INTEGER,AssignmentMatrix_00001_00005_INTEGER,AssignmentMatrix_00001_00006_INTEGER,AssignmentMatrix_00001_00007_INTEGER,AssignmentMatrix_00001_00008_INTEGER,3],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00005_00001_INTEGER,AssignmentMatrix_00002_00001_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00005_00002_INTEGER,AssignmentMatrix_00002_00002_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00005_00003_INTEGER,AssignmentMatrix_00002_00003_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00005_00004_INTEGER,AssignmentMatrix_00002_00004_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00005_00005_INTEGER,AssignmentMatrix_00002_00005_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00005_00006_INTEGER,AssignmentMatrix_00002_00006_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00005_00007_INTEGER,AssignmentMatrix_00002_00007_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00005_00008_INTEGER,AssignmentMatrix_00002_00008_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00004_00001_INTEGER,AssignmentMatrix_00001_00001_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00004_00002_INTEGER,AssignmentMatrix_00001_00002_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00004_00003_INTEGER,AssignmentMatrix_00001_00003_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00004_00004_INTEGER,AssignmentMatrix_00001_00004_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00004_00005_INTEGER,AssignmentMatrix_00001_00005_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00004_00006_INTEGER,AssignmentMatrix_00001_00006_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00004_00007_INTEGER,AssignmentMatrix_00001_00007_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00004_00008_INTEGER,AssignmentMatrix_00001_00008_INTEGER,1],0);
constraint array_bool_or([aux89_BOOL,aux94_BOOL],true);
constraint int_le(Price_00001, Price_00002);
constraint int_le(Price_00002, Price_00003);
constraint int_le(Price_00003, Price_00004);
constraint int_le(Price_00004, Price_00005);
constraint int_le(Price_00005, Price_00006);
constraint int_le(Price_00006, Price_00007);
constraint int_le(Price_00007, Price_00008);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00003_00001_INTEGER,AssignmentMatrix_00005_00001_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00003_00002_INTEGER,AssignmentMatrix_00005_00002_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00003_00003_INTEGER,AssignmentMatrix_00005_00003_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00003_00004_INTEGER,AssignmentMatrix_00005_00004_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00003_00005_INTEGER,AssignmentMatrix_00005_00005_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00003_00006_INTEGER,AssignmentMatrix_00005_00006_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00003_00007_INTEGER,AssignmentMatrix_00005_00007_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00003_00008_INTEGER,AssignmentMatrix_00005_00008_INTEGER,1],0);
constraint array_bool_or([aux95_BOOL,aux100_BOOL],true);
constraint int_lin_le([500,500,500,1000,2000,-1],[AssignmentMatrix_00003_00001_INTEGER,AssignmentMatrix_00004_00001_INTEGER,AssignmentMatrix_00005_00001_INTEGER,AssignmentMatrix_00001_00001_INTEGER,AssignmentMatrix_00002_00001_INTEGER,aux10],0);
constraint int_lin_le([500,500,500,1000,2000,-1],[AssignmentMatrix_00003_00002_INTEGER,AssignmentMatrix_00004_00002_INTEGER,AssignmentMatrix_00005_00002_INTEGER,AssignmentMatrix_00001_00002_INTEGER,AssignmentMatrix_00002_00002_INTEGER,aux9],0);
constraint array_bool_or([aux101_BOOL,aux26_BOOL],true);
constraint int_lin_le([500,500,500,1000,2000,-1],[AssignmentMatrix_00003_00003_INTEGER,AssignmentMatrix_00004_00003_INTEGER,AssignmentMatrix_00005_00003_INTEGER,AssignmentMatrix_00001_00003_INTEGER,AssignmentMatrix_00002_00003_INTEGER,aux12],0);
constraint int_lin_le([500,500,500,1000,2000,-1],[AssignmentMatrix_00003_00004_INTEGER,AssignmentMatrix_00004_00004_INTEGER,AssignmentMatrix_00005_00004_INTEGER,AssignmentMatrix_00001_00004_INTEGER,AssignmentMatrix_00002_00004_INTEGER,aux11],0);
constraint int_lin_le([500,500,500,1000,2000,-1],[AssignmentMatrix_00003_00005_INTEGER,AssignmentMatrix_00004_00005_INTEGER,AssignmentMatrix_00005_00005_INTEGER,AssignmentMatrix_00001_00005_INTEGER,AssignmentMatrix_00002_00005_INTEGER,aux14],0);
constraint int_lin_le([500,500,500,1000,2000,-1],[AssignmentMatrix_00003_00006_INTEGER,AssignmentMatrix_00004_00006_INTEGER,AssignmentMatrix_00005_00006_INTEGER,AssignmentMatrix_00001_00006_INTEGER,AssignmentMatrix_00002_00006_INTEGER,aux13],0);
constraint int_lin_le([500,500,500,1000,2000,-1],[AssignmentMatrix_00003_00007_INTEGER,AssignmentMatrix_00004_00007_INTEGER,AssignmentMatrix_00005_00007_INTEGER,AssignmentMatrix_00001_00007_INTEGER,AssignmentMatrix_00002_00007_INTEGER,aux16],0);
constraint int_lin_le([500,500,500,1000,2000,-1],[AssignmentMatrix_00003_00008_INTEGER,AssignmentMatrix_00004_00008_INTEGER,AssignmentMatrix_00005_00008_INTEGER,AssignmentMatrix_00001_00008_INTEGER,AssignmentMatrix_00002_00008_INTEGER,aux15],0);
constraint array_bool_or([aux102_BOOL,aux107_BOOL],true);

solve :: int_search([AssignmentMatrix_00001_00001_INTEGER, AssignmentMatrix_00001_00002_INTEGER, AssignmentMatrix_00001_00003_INTEGER, AssignmentMatrix_00001_00004_INTEGER, AssignmentMatrix_00001_00005_INTEGER, AssignmentMatrix_00001_00006_INTEGER, AssignmentMatrix_00001_00007_INTEGER, AssignmentMatrix_00001_00008_INTEGER, AssignmentMatrix_00002_00001_INTEGER, AssignmentMatrix_00002_00002_INTEGER, AssignmentMatrix_00002_00003_INTEGER, AssignmentMatrix_00002_00004_INTEGER, AssignmentMatrix_00002_00005_INTEGER, AssignmentMatrix_00002_00006_INTEGER, AssignmentMatrix_00002_00007_INTEGER, AssignmentMatrix_00002_00008_INTEGER, AssignmentMatrix_00003_00001_INTEGER, AssignmentMatrix_00003_00002_INTEGER, AssignmentMatrix_00003_00003_INTEGER, AssignmentMatrix_00003_00004_INTEGER, AssignmentMatrix_00003_00005_INTEGER, AssignmentMatrix_00003_00006_INTEGER, AssignmentMatrix_00003_00007_INTEGER, AssignmentMatrix_00003_00008_INTEGER, AssignmentMatrix_00004_00001_INTEGER, AssignmentMatrix_00004_00002_INTEGER, AssignmentMatrix_00004_00003_INTEGER, AssignmentMatrix_00004_00004_INTEGER, AssignmentMatrix_00004_00005_INTEGER, AssignmentMatrix_00004_00006_INTEGER, AssignmentMatrix_00004_00007_INTEGER, AssignmentMatrix_00004_00008_INTEGER, AssignmentMatrix_00005_00001_INTEGER, AssignmentMatrix_00005_00002_INTEGER, AssignmentMatrix_00005_00003_INTEGER, AssignmentMatrix_00005_00004_INTEGER, AssignmentMatrix_00005_00005_INTEGER, AssignmentMatrix_00005_00006_INTEGER, AssignmentMatrix_00005_00007_INTEGER, AssignmentMatrix_00005_00008_INTEGER, VMType_00001, VMType_00002, VMType_00003, VMType_00004, VMType_00005, VMType_00006, VMType_00007, VMType_00008, CPU_00001, CPU_00002, CPU_00003, CPU_00004, CPU_00005, CPU_00006, CPU_00007, CPU_00008, Memory_00001, Memory_00002, Memory_00003, Memory_00004, Memory_00005, Memory_00006, Memory_00007, Memory_00008, Storage_00001, Storage_00002, Storage_00003, Storage_00004, Storage_00005, Storage_00006, Storage_00007, Storage_00008, Price_00001, Price_00002, Price_00003, Price_00004, Price_00005, Price_00006, Price_00007, Price_00008], input_order, indomain_min, complete)
minimize aux0;
