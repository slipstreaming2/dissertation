predicate all_different_int(array [int] of var int: xs);
array [1..40] of int: VMPrice = [8403, 9152, 10638, 16000, 13005, 4105, 2752, 4576, 6672, 5570, 1373, 1430, 5400, 1654, 5520, 3079, 1637, 1470, 1301, 665, 632, 1288, 402, 827, 266, 252, 252, 809, 379, 146, 207, 293, 220, 197, 180, 275, 128, 58, 93, 98];
var {0,1}: AssignmentMatrix_00001_00004_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00001_00005_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00001_00006_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00001_00007_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00002_00001_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00002_00002_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00002_00003_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00002_00004_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00002_00005_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00002_00006_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00002_00007_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00002_00008_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00003_00004_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00003_00005_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00003_00006_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00003_00007_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00003_00008_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00004_00004_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00004_00005_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00004_00006_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00004_00007_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00004_00008_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00005_00001_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00005_00002_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00005_00003_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00005_00004_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00005_00005_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00005_00006_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00005_00007_INTEGER :: output_var ;
var {0,1}: AssignmentMatrix_00005_00008_INTEGER :: output_var ;
var 1..37: VMType_00001:: output_var ;
var 1..37: VMType_00002:: output_var ;
var 1..37: VMType_00003:: output_var ;
var 1..37: VMType_00004:: output_var ;
var 1..37: VMType_00005:: output_var ;
var 1..37: VMType_00006:: output_var ;
var 1..37: VMType_00007:: output_var ;
var 1..37: VMType_00008:: output_var ;
var {2,4,8,16,17,32,64}: CPU_00001:: output_var ;
var {2,4,8,16,17,32,64}: CPU_00002:: output_var ;
var {2,4,8,16,17,32,64}: CPU_00003:: output_var ;
var {2,4,8,16,17,32,64}: CPU_00004:: output_var ;
var 1..64: CPU_00005:: output_var ;
var 1..64: CPU_00006:: output_var ;
var 1..64: CPU_00007:: output_var ;
var 1..64: CPU_00008:: output_var ;
var {1700,1952,3750,7000,7500,15000,15250,17100,30000,30500,61000,68400,117000,122000,244000,488000,976000}: Memory_00001:: output_var ;
var {1700,1952,3750,7000,7500,15000,15250,17100,30000,30500,61000,68400,117000,122000,244000,488000,976000}: Memory_00002:: output_var ;
var {1700,1952,3750,7000,7500,15000,15250,17100,30000,30500,61000,68400,117000,122000,244000,488000,976000}: Memory_00003:: output_var ;
var {1700,1952,3750,7000,7500,15000,15250,17100,30000,30500,61000,68400,117000,122000,244000,488000,976000}: Memory_00004:: output_var ;
var 1700..976000: Memory_00005:: output_var ;
var 1700..976000: Memory_00006:: output_var ;
var 1700..976000: Memory_00007:: output_var ;
var 1700..976000: Memory_00008:: output_var ;
var {1000,2000,3000,4000,6000,8000,24000}: Storage_00001:: output_var ;
var {1000,2000,3000,4000,6000,8000,24000}: Storage_00002:: output_var ;
var {1000,2000,3000,4000,6000,8000,24000}: Storage_00003:: output_var ;
var {1000,2000,3000,4000,6000,8000,24000}: Storage_00004:: output_var ;
var 1000..24000: Storage_00005:: output_var ;
var 1000..24000: Storage_00006:: output_var ;
var 1000..24000: Storage_00007:: output_var ;
var 1000..24000: Storage_00008:: output_var ;
var 128..16000: Price_00001:: output_var ;
var 128..16000: Price_00002:: output_var ;
var 128..16000: Price_00003:: output_var ;
var 128..16000: Price_00004:: output_var ;
var 0..16000: Price_00005:: output_var ;
var 0..16000: Price_00006:: output_var ;
var 0..16000: Price_00007:: output_var ;
var 0..16000: Price_00008:: output_var ;
var 513..128000: aux0:: var_is_introduced ;
var {1000,2000,3000,4000,6000,8000,24000}: aux5:: var_is_introduced ;
var {1000,2000,3000,4000,6000,8000,24000}: aux6:: var_is_introduced ;
var {1000,2000,3000,4000,6000,8000,24000}: aux7:: var_is_introduced ;
var {1000,2000,3000,4000,6000,8000,24000}: aux8:: var_is_introduced ;
var {2,4,8,16,17,32,64}: aux12:: var_is_introduced ;
var {2,4,8,16,17,32,64}: aux13:: var_is_introduced ;
var {2,4,8,16,17,32,64}: aux14:: var_is_introduced ;
var {2,4,8,16,17,32,64}: aux15:: var_is_introduced ;
var {1700,1952,3750,7000,7500,15000,15250,17100,30000,30500,61000,68400,117000,122000,244000,488000,976000}: aux19:: var_is_introduced ;
var {1700,1952,3750,7000,7500,15000,15250,17100,30000,30500,61000,68400,117000,122000,244000,488000,976000}: aux20:: var_is_introduced ;
var {1700,1952,3750,7000,7500,15000,15250,17100,30000,30500,61000,68400,117000,122000,244000,488000,976000}: aux23:: var_is_introduced ;
var {1700,1952,3750,7000,7500,15000,15250,17100,30000,30500,61000,68400,117000,122000,244000,488000,976000}: aux24:: var_is_introduced ;
var bool: aux25_BOOL:: var_is_introduced ;
var bool: aux26_BOOL:: var_is_introduced ;
var 0..4: aux27:: var_is_introduced ;
var 0..4: aux28:: var_is_introduced ;
var 1..4: aux29:: var_is_introduced ;
var 0..4: aux30:: var_is_introduced ;
var {0,1}: aux31_INTEGER :: var_is_introduced ;
var 0..5: aux32:: var_is_introduced ;
var 0..4: aux33:: var_is_introduced ;
var bool: aux34_BOOL:: var_is_introduced ;
var bool: aux35_BOOL:: var_is_introduced ;
var bool: aux36_BOOL:: var_is_introduced ;
var bool: aux37_BOOL:: var_is_introduced ;
var bool: aux38_BOOL:: var_is_introduced ;
var bool: aux39_BOOL:: var_is_introduced ;
var bool: aux40_BOOL:: var_is_introduced ;
var bool: aux41_BOOL:: var_is_introduced ;
var bool: aux42_BOOL:: var_is_introduced ;
var bool: aux43_BOOL:: var_is_introduced ;
var bool: aux44_BOOL:: var_is_introduced ;
var bool: aux45_BOOL:: var_is_introduced ;
var bool: aux46_BOOL:: var_is_introduced ;
var bool: aux47_BOOL:: var_is_introduced ;
var bool: aux48_BOOL:: var_is_introduced ;
var bool: aux49_BOOL:: var_is_introduced ;
var bool: aux50_BOOL:: var_is_introduced ;
var bool: aux51_BOOL:: var_is_introduced ;
var bool: aux52_BOOL:: var_is_introduced ;
var bool: aux53_BOOL:: var_is_introduced ;
var bool: aux54_BOOL:: var_is_introduced ;
var bool: aux55_BOOL:: var_is_introduced ;
var bool: aux56_BOOL:: var_is_introduced ;
var bool: aux57_BOOL:: var_is_introduced ;
var bool: aux58_BOOL:: var_is_introduced ;
var bool: aux59_BOOL:: var_is_introduced ;
var bool: aux60_BOOL:: var_is_introduced ;
var bool: aux61_BOOL:: var_is_introduced ;
var bool: aux62_BOOL:: var_is_introduced ;
var bool: aux63_BOOL:: var_is_introduced ;
var bool: aux64_BOOL:: var_is_introduced ;
var bool: aux65_BOOL:: var_is_introduced ;
var bool: aux66_BOOL:: var_is_introduced ;
var bool: aux67_BOOL:: var_is_introduced ;
var bool: aux68_BOOL:: var_is_introduced ;
var bool: aux69_BOOL:: var_is_introduced ;
var bool: aux70_BOOL:: var_is_introduced ;
var bool: aux71_BOOL:: var_is_introduced ;
var {128,146,180,197,207,220,252,266,275,293,379,402,632,665,809,827,1288,1301,1373,1430,1470,1637,1654,2752,3079,4105,4576,5400,5520,5570,6672,8403,9152,10638,13005,16000}: aux72:: var_is_introduced ;
var {128,146,180,197,207,220,252,266,275,293,379,402,632,665,809,827,1288,1301,1373,1430,1470,1637,1654,2752,3079,4105,4576,5400,5520,5570,6672,8403,9152,10638,13005,16000}: aux73:: var_is_introduced ;
var {128,146,180,197,207,220,252,266,275,293,379,402,632,665,809,827,1288,1301,1373,1430,1470,1637,1654,2752,3079,4105,4576,5400,5520,5570,6672,8403,9152,10638,13005,16000}: aux74:: var_is_introduced ;
var {128,146,180,197,207,220,252,266,275,293,379,402,632,665,809,827,1288,1301,1373,1430,1470,1637,1654,2752,3079,4105,4576,5400,5520,5570,6672,8403,9152,10638,13005,16000}: aux75:: var_is_introduced ;
constraint array_var_int_element(VMType_00005, [8403, 9152, 10638, 16000, 13005, 4105, 2752, 4576, 6672, 5570, 1373, 1430, 5400, 1654, 5520, 3079, 1637, 1470, 1301, 665, 632, 1288, 402, 827, 266, 252, 252, 809, 379, 146, 207, 293, 220, 197, 180, 275, 128], aux72);
constraint array_var_int_element(VMType_00006, [8403, 9152, 10638, 16000, 13005, 4105, 2752, 4576, 6672, 5570, 1373, 1430, 5400, 1654, 5520, 3079, 1637, 1470, 1301, 665, 632, 1288, 402, 827, 266, 252, 252, 809, 379, 146, 207, 293, 220, 197, 180, 275, 128], aux73);
constraint array_var_int_element(VMType_00007, [8403, 9152, 10638, 16000, 13005, 4105, 2752, 4576, 6672, 5570, 1373, 1430, 5400, 1654, 5520, 3079, 1637, 1470, 1301, 665, 632, 1288, 402, 827, 266, 252, 252, 809, 379, 146, 207, 293, 220, 197, 180, 275, 128], aux74);
constraint array_var_int_element(VMType_00008, [8403, 9152, 10638, 16000, 13005, 4105, 2752, 4576, 6672, 5570, 1373, 1430, 5400, 1654, 5520, 3079, 1637, 1470, 1301, 665, 632, 1288, 402, 827, 266, 252, 252, 809, 379, 146, 207, 293, 220, 197, 180, 275, 128], aux75);
constraint int_le_reif(aux30, 0,aux34_BOOL);
constraint int_eq_reif(aux72,Price_00005,aux35_BOOL);
constraint int_eq_reif(aux12,CPU_00005,aux36_BOOL);
constraint int_eq_reif(aux20,Memory_00005,aux37_BOOL);
constraint int_eq_reif(Storage_00005,aux5,aux38_BOOL);
constraint array_bool_and([aux35_BOOL,aux36_BOOL,aux37_BOOL,aux38_BOOL],aux39_BOOL);
constraint int_ne_reif(0,aux30,aux40_BOOL);
constraint int_eq_reif(VMType_00005,1,aux41_BOOL);
constraint int_ne_reif(0,aux27,aux42_BOOL);
constraint int_eq_reif(VMType_00006,1,aux43_BOOL);
constraint int_ne_reif(0,aux28,aux44_BOOL);
constraint int_eq_reif(VMType_00007,1,aux45_BOOL);
constraint int_ne_reif(aux33,0,aux46_BOOL);
constraint int_eq_reif(VMType_00008,1,aux47_BOOL);
constraint int_lin_le_reif([-3,-3,-3,-3,-3,1,1,1,1,-1],[AssignmentMatrix_00004_00004_INTEGER,AssignmentMatrix_00004_00005_INTEGER,AssignmentMatrix_00004_00006_INTEGER,AssignmentMatrix_00004_00007_INTEGER,AssignmentMatrix_00004_00008_INTEGER,AssignmentMatrix_00001_00004_INTEGER,AssignmentMatrix_00001_00005_INTEGER,AssignmentMatrix_00001_00006_INTEGER,AssignmentMatrix_00001_00007_INTEGER,-3],0,aux48_BOOL);
constraint int_eq_reif(aux32,0,aux49_BOOL);
constraint int_le_reif(aux27, 0,aux50_BOOL);
constraint int_eq_reif(aux73,Price_00006,aux51_BOOL);
constraint int_eq_reif(aux13,CPU_00006,aux52_BOOL);
constraint int_eq_reif(aux19,Memory_00006,aux53_BOOL);
constraint int_eq_reif(Storage_00006,aux6,aux54_BOOL);
constraint array_bool_and([aux51_BOOL,aux52_BOOL,aux53_BOOL,aux54_BOOL],aux55_BOOL);
constraint int_le_reif(aux28, 0,aux56_BOOL);
constraint int_eq_reif(aux74,Price_00007,aux57_BOOL);
constraint int_eq_reif(aux14,CPU_00007,aux58_BOOL);
constraint int_eq_reif(aux24,Memory_00007,aux59_BOOL);
constraint int_eq_reif(Storage_00007,aux7,aux60_BOOL);
constraint array_bool_and([aux57_BOOL,aux58_BOOL,aux59_BOOL,aux60_BOOL],aux61_BOOL);
constraint int_eq_reif(0,aux31_INTEGER,aux62_BOOL);
constraint int_lin_le_reif([-7,-7,-7,-7,-7,1,1,1,1,-1],[AssignmentMatrix_00003_00004_INTEGER,AssignmentMatrix_00003_00005_INTEGER,AssignmentMatrix_00003_00006_INTEGER,AssignmentMatrix_00003_00007_INTEGER,AssignmentMatrix_00003_00008_INTEGER,AssignmentMatrix_00001_00004_INTEGER,AssignmentMatrix_00001_00005_INTEGER,AssignmentMatrix_00001_00006_INTEGER,AssignmentMatrix_00001_00007_INTEGER,-3],0,aux63_BOOL);
constraint int_le_reif(aux33, 0,aux64_BOOL);
constraint int_eq_reif(aux75,Price_00008,aux65_BOOL);
constraint int_eq_reif(aux15,CPU_00008,aux66_BOOL);
constraint int_eq_reif(aux23,Memory_00008,aux67_BOOL);
constraint int_eq_reif(Storage_00008,aux8,aux68_BOOL);
constraint array_bool_and([aux65_BOOL,aux66_BOOL,aux67_BOOL,aux68_BOOL],aux69_BOOL);
constraint bool_eq_reif(aux26_BOOL,false,aux70_BOOL);
constraint bool_eq_reif(aux25_BOOL,false,aux71_BOOL);
constraint array_var_int_element(VMType_00003, [1000, 8000, 1000, 1000, 1000, 2000, 4000, 4000, 1000, 24000, 2000, 2000, 24000, 2000, 24000, 1000, 2000, 6000, 2000, 1000, 4000, 2000, 2000, 3000, 2000, 2000, 2000, 3000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 2000], Storage_00003);
constraint array_var_int_element(VMType_00004, [1000, 8000, 1000, 1000, 1000, 2000, 4000, 4000, 1000, 24000, 2000, 2000, 24000, 2000, 24000, 1000, 2000, 6000, 2000, 1000, 4000, 2000, 2000, 3000, 2000, 2000, 2000, 3000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 2000], Storage_00004);
constraint array_var_int_element(VMType_00002, [1000, 8000, 1000, 1000, 1000, 2000, 4000, 4000, 1000, 24000, 2000, 2000, 24000, 2000, 24000, 1000, 2000, 6000, 2000, 1000, 4000, 2000, 2000, 3000, 2000, 2000, 2000, 3000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 2000], Storage_00002);
constraint array_var_int_element(VMType_00001, [1000, 8000, 1000, 1000, 1000, 2000, 4000, 4000, 1000, 24000, 2000, 2000, 24000, 2000, 24000, 1000, 2000, 6000, 2000, 1000, 4000, 2000, 2000, 3000, 2000, 2000, 2000, 3000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 2000], Storage_00001);
constraint array_var_int_element(VMType_00005, [1000, 8000, 1000, 1000, 1000, 2000, 4000, 4000, 1000, 24000, 2000, 2000, 24000, 2000, 24000, 1000, 2000, 6000, 2000, 1000, 4000, 2000, 2000, 3000, 2000, 2000, 2000, 3000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 2000], aux5);
constraint array_var_int_element(VMType_00006, [1000, 8000, 1000, 1000, 1000, 2000, 4000, 4000, 1000, 24000, 2000, 2000, 24000, 2000, 24000, 1000, 2000, 6000, 2000, 1000, 4000, 2000, 2000, 3000, 2000, 2000, 2000, 3000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 2000], aux6);
constraint array_var_int_element(VMType_00007, [1000, 8000, 1000, 1000, 1000, 2000, 4000, 4000, 1000, 24000, 2000, 2000, 24000, 2000, 24000, 1000, 2000, 6000, 2000, 1000, 4000, 2000, 2000, 3000, 2000, 2000, 2000, 3000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 2000], aux7);
constraint array_var_int_element(VMType_00008, [1000, 8000, 1000, 1000, 1000, 2000, 4000, 4000, 1000, 24000, 2000, 2000, 24000, 2000, 24000, 1000, 2000, 6000, 2000, 1000, 4000, 2000, 2000, 3000, 2000, 2000, 2000, 3000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 2000], aux8);
constraint array_var_int_element(VMType_00002, [64, 64, 64, 64, 64, 32, 32, 32, 32, 17, 16, 16, 17, 16, 17, 16, 16, 8, 8, 8, 8, 8, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2], CPU_00002);
constraint array_var_int_element(VMType_00003, [64, 64, 64, 64, 64, 32, 32, 32, 32, 17, 16, 16, 17, 16, 17, 16, 16, 8, 8, 8, 8, 8, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2], CPU_00003);
constraint array_var_int_element(VMType_00004, [64, 64, 64, 64, 64, 32, 32, 32, 32, 17, 16, 16, 17, 16, 17, 16, 16, 8, 8, 8, 8, 8, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2], CPU_00004);
constraint array_var_int_element(VMType_00005, [64, 64, 64, 64, 64, 32, 32, 32, 32, 17, 16, 16, 17, 16, 17, 16, 16, 8, 8, 8, 8, 8, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2], aux12);
constraint array_var_int_element(VMType_00006, [64, 64, 64, 64, 64, 32, 32, 32, 32, 17, 16, 16, 17, 16, 17, 16, 16, 8, 8, 8, 8, 8, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2], aux13);
constraint array_var_int_element(VMType_00007, [64, 64, 64, 64, 64, 32, 32, 32, 32, 17, 16, 16, 17, 16, 17, 16, 16, 8, 8, 8, 8, 8, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2], aux14);
constraint array_var_int_element(VMType_00008, [64, 64, 64, 64, 64, 32, 32, 32, 32, 17, 16, 16, 17, 16, 17, 16, 16, 8, 8, 8, 8, 8, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2], aux15);
constraint array_var_int_element(VMType_00001, [64, 64, 64, 64, 64, 32, 32, 32, 32, 17, 16, 16, 17, 16, 17, 16, 16, 8, 8, 8, 8, 8, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2], CPU_00001);
constraint array_var_int_element(VMType_00002, [976000, 488000, 976000, 1952, 976000, 244000, 244000, 244000, 976000, 117000, 122000, 30000, 117000, 122000, 117000, 122000, 122000, 61000, 68400, 61000, 7000, 68400, 15000, 30500, 15000, 7500, 7500, 30500, 30500, 7500, 15250, 17100, 15250, 1700, 1700, 17100, 3750], Memory_00002);
constraint array_var_int_element(VMType_00001, [976000, 488000, 976000, 1952, 976000, 244000, 244000, 244000, 976000, 117000, 122000, 30000, 117000, 122000, 117000, 122000, 122000, 61000, 68400, 61000, 7000, 68400, 15000, 30500, 15000, 7500, 7500, 30500, 30500, 7500, 15250, 17100, 15250, 1700, 1700, 17100, 3750], Memory_00001);
constraint array_var_int_element(VMType_00006, [976000, 488000, 976000, 1952, 976000, 244000, 244000, 244000, 976000, 117000, 122000, 30000, 117000, 122000, 117000, 122000, 122000, 61000, 68400, 61000, 7000, 68400, 15000, 30500, 15000, 7500, 7500, 30500, 30500, 7500, 15250, 17100, 15250, 1700, 1700, 17100, 3750], aux19);
constraint array_var_int_element(VMType_00005, [976000, 488000, 976000, 1952, 976000, 244000, 244000, 244000, 976000, 117000, 122000, 30000, 117000, 122000, 117000, 122000, 122000, 61000, 68400, 61000, 7000, 68400, 15000, 30500, 15000, 7500, 7500, 30500, 30500, 7500, 15250, 17100, 15250, 1700, 1700, 17100, 3750], aux20);
constraint array_var_int_element(VMType_00004, [976000, 488000, 976000, 1952, 976000, 244000, 244000, 244000, 976000, 117000, 122000, 30000, 117000, 122000, 117000, 122000, 122000, 61000, 68400, 61000, 7000, 68400, 15000, 30500, 15000, 7500, 7500, 30500, 30500, 7500, 15250, 17100, 15250, 1700, 1700, 17100, 3750], Memory_00004);
constraint array_var_int_element(VMType_00003, [976000, 488000, 976000, 1952, 976000, 244000, 244000, 244000, 976000, 117000, 122000, 30000, 117000, 122000, 117000, 122000, 122000, 61000, 68400, 61000, 7000, 68400, 15000, 30500, 15000, 7500, 7500, 30500, 30500, 7500, 15250, 17100, 15250, 1700, 1700, 17100, 3750], Memory_00003);
constraint array_var_int_element(VMType_00008, [976000, 488000, 976000, 1952, 976000, 244000, 244000, 244000, 976000, 117000, 122000, 30000, 117000, 122000, 117000, 122000, 122000, 61000, 68400, 61000, 7000, 68400, 15000, 30500, 15000, 7500, 7500, 30500, 30500, 7500, 15250, 17100, 15250, 1700, 1700, 17100, 3750], aux23);
constraint array_var_int_element(VMType_00007, [976000, 488000, 976000, 1952, 976000, 244000, 244000, 244000, 976000, 117000, 122000, 30000, 117000, 122000, 117000, 122000, 122000, 61000, 68400, 61000, 7000, 68400, 15000, 30500, 15000, 7500, 7500, 30500, 30500, 7500, 15250, 17100, 15250, 1700, 1700, 17100, 3750], aux24);
constraint int_le_reif(aux32, 0,aux25_BOOL);
constraint int_le_reif(aux31_INTEGER, 0,aux26_BOOL);
constraint int_lin_eq([1,1,1,-1,1,1],[AssignmentMatrix_00003_00006_INTEGER,AssignmentMatrix_00004_00006_INTEGER,AssignmentMatrix_00005_00006_INTEGER,aux27,AssignmentMatrix_00001_00006_INTEGER,AssignmentMatrix_00002_00006_INTEGER],0);
constraint int_lin_eq([1,1,1,-1,1,1],[AssignmentMatrix_00003_00007_INTEGER,AssignmentMatrix_00004_00007_INTEGER,AssignmentMatrix_00005_00007_INTEGER,aux28,AssignmentMatrix_00001_00007_INTEGER,AssignmentMatrix_00002_00007_INTEGER],0);
constraint int_lin_eq([1,1,1,-1,1,1],[AssignmentMatrix_00003_00004_INTEGER,AssignmentMatrix_00004_00004_INTEGER,AssignmentMatrix_00005_00004_INTEGER,aux29,AssignmentMatrix_00001_00004_INTEGER,AssignmentMatrix_00002_00004_INTEGER],0);
constraint int_lin_eq([1,1,1,-1,1,1],[AssignmentMatrix_00003_00005_INTEGER,AssignmentMatrix_00004_00005_INTEGER,AssignmentMatrix_00005_00005_INTEGER,aux30,AssignmentMatrix_00001_00005_INTEGER,AssignmentMatrix_00002_00005_INTEGER],0);
constraint int_lin_eq([1,1,1,1,1,-1],[AssignmentMatrix_00003_00004_INTEGER,AssignmentMatrix_00003_00005_INTEGER,AssignmentMatrix_00003_00006_INTEGER,AssignmentMatrix_00003_00007_INTEGER,AssignmentMatrix_00003_00008_INTEGER,aux31_INTEGER],0);
constraint int_lin_eq([1,1,1,1,1,-1],[AssignmentMatrix_00004_00004_INTEGER,AssignmentMatrix_00004_00005_INTEGER,AssignmentMatrix_00004_00006_INTEGER,AssignmentMatrix_00004_00007_INTEGER,AssignmentMatrix_00004_00008_INTEGER,aux32],0);
constraint int_lin_eq([1,1,1,-1,1],[AssignmentMatrix_00003_00008_INTEGER,AssignmentMatrix_00004_00008_INTEGER,AssignmentMatrix_00005_00008_INTEGER,aux33,AssignmentMatrix_00002_00008_INTEGER],0);
constraint int_lin_eq([1,1,1,1,1,1,1,1,-1],[Price_00001,Price_00002,Price_00003,Price_00004,Price_00005,Price_00006,Price_00007,Price_00008,aux0],0);
constraint int_lin_le([4,4,4,2,2,-1],[AssignmentMatrix_00003_00005_INTEGER,AssignmentMatrix_00004_00005_INTEGER,AssignmentMatrix_00005_00005_INTEGER,AssignmentMatrix_00001_00005_INTEGER,AssignmentMatrix_00002_00005_INTEGER,aux12],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-1,-1,1],[AssignmentMatrix_00005_00001_INTEGER,AssignmentMatrix_00005_00002_INTEGER,AssignmentMatrix_00005_00003_INTEGER,AssignmentMatrix_00005_00004_INTEGER,AssignmentMatrix_00005_00005_INTEGER,AssignmentMatrix_00005_00006_INTEGER,AssignmentMatrix_00005_00007_INTEGER,AssignmentMatrix_00005_00008_INTEGER,2],0);
constraint int_lin_le([4,4,4,2,2,-1],[AssignmentMatrix_00003_00006_INTEGER,AssignmentMatrix_00004_00006_INTEGER,AssignmentMatrix_00005_00006_INTEGER,AssignmentMatrix_00001_00006_INTEGER,AssignmentMatrix_00002_00006_INTEGER,aux13],0);
constraint int_lin_le([4,4,4,2,2,-1],[AssignmentMatrix_00003_00007_INTEGER,AssignmentMatrix_00004_00007_INTEGER,AssignmentMatrix_00005_00007_INTEGER,AssignmentMatrix_00001_00007_INTEGER,AssignmentMatrix_00002_00007_INTEGER,aux14],0);
constraint array_bool_or([aux34_BOOL,aux39_BOOL],true);
constraint int_lin_le([4,4,4,2,-1],[AssignmentMatrix_00003_00008_INTEGER,AssignmentMatrix_00004_00008_INTEGER,AssignmentMatrix_00005_00008_INTEGER,AssignmentMatrix_00002_00008_INTEGER,aux15],0);
constraint array_bool_or([aux40_BOOL,aux41_BOOL],true);
constraint array_bool_or([aux42_BOOL,aux43_BOOL],true);
constraint array_bool_or([aux44_BOOL,aux45_BOOL],true);
constraint array_bool_or([aux46_BOOL,aux47_BOOL],true);
constraint array_bool_or([aux48_BOOL,aux25_BOOL],true);
constraint array_bool_or([aux49_BOOL,aux26_BOOL],true);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00004_00004_INTEGER,AssignmentMatrix_00002_00004_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00004_00005_INTEGER,AssignmentMatrix_00002_00005_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00004_00006_INTEGER,AssignmentMatrix_00002_00006_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00004_00007_INTEGER,AssignmentMatrix_00002_00007_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00004_00008_INTEGER,AssignmentMatrix_00002_00008_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00003_00004_INTEGER,AssignmentMatrix_00001_00004_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00003_00005_INTEGER,AssignmentMatrix_00001_00005_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00003_00006_INTEGER,AssignmentMatrix_00001_00006_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00003_00007_INTEGER,AssignmentMatrix_00001_00007_INTEGER,1],0);
constraint array_bool_or([aux50_BOOL,aux55_BOOL],true);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-1,-1,1],[AssignmentMatrix_00002_00001_INTEGER,AssignmentMatrix_00002_00002_INTEGER,AssignmentMatrix_00002_00003_INTEGER,AssignmentMatrix_00002_00004_INTEGER,AssignmentMatrix_00002_00005_INTEGER,AssignmentMatrix_00002_00006_INTEGER,AssignmentMatrix_00002_00007_INTEGER,AssignmentMatrix_00002_00008_INTEGER,2],0);
constraint int_lin_le([500,1,2000,-1],[AssignmentMatrix_00005_00001_INTEGER,1000,AssignmentMatrix_00002_00001_INTEGER,Storage_00001],0);
constraint int_lin_le([500,1,2000,-1],[AssignmentMatrix_00005_00002_INTEGER,1000,AssignmentMatrix_00002_00002_INTEGER,Storage_00002],0);
constraint int_lin_le([500,1,2000,-1],[AssignmentMatrix_00005_00003_INTEGER,1000,AssignmentMatrix_00002_00003_INTEGER,Storage_00003],0);
constraint int_lin_le([500,500,500,1000,2000,-1],[AssignmentMatrix_00003_00004_INTEGER,AssignmentMatrix_00004_00004_INTEGER,AssignmentMatrix_00005_00004_INTEGER,AssignmentMatrix_00001_00004_INTEGER,AssignmentMatrix_00002_00004_INTEGER,Storage_00004],0);
constraint int_lin_le([500,500,500,1000,2000,-1],[AssignmentMatrix_00003_00005_INTEGER,AssignmentMatrix_00004_00005_INTEGER,AssignmentMatrix_00005_00005_INTEGER,AssignmentMatrix_00001_00005_INTEGER,AssignmentMatrix_00002_00005_INTEGER,aux5],0);
constraint int_lin_le([500,500,500,1000,2000,-1],[AssignmentMatrix_00003_00006_INTEGER,AssignmentMatrix_00004_00006_INTEGER,AssignmentMatrix_00005_00006_INTEGER,AssignmentMatrix_00001_00006_INTEGER,AssignmentMatrix_00002_00006_INTEGER,aux6],0);
constraint int_lin_le([500,500,500,1000,2000,-1],[AssignmentMatrix_00003_00007_INTEGER,AssignmentMatrix_00004_00007_INTEGER,AssignmentMatrix_00005_00007_INTEGER,AssignmentMatrix_00001_00007_INTEGER,AssignmentMatrix_00002_00007_INTEGER,aux7],0);
constraint int_lin_le([500,500,500,2000,-1],[AssignmentMatrix_00003_00008_INTEGER,AssignmentMatrix_00004_00008_INTEGER,AssignmentMatrix_00005_00008_INTEGER,AssignmentMatrix_00002_00008_INTEGER,aux8],0);
constraint array_var_int_element(VMType_00001, [8403, 9152, 10638, 16000, 13005, 4105, 2752, 4576, 6672, 5570, 1373, 1430, 5400, 1654, 5520, 3079, 1637, 1470, 1301, 665, 632, 1288, 402, 827, 266, 252, 252, 809, 379, 146, 207, 293, 220, 197, 180, 275, 128], Price_00001);
constraint array_var_int_element(VMType_00002, [8403, 9152, 10638, 16000, 13005, 4105, 2752, 4576, 6672, 5570, 1373, 1430, 5400, 1654, 5520, 3079, 1637, 1470, 1301, 665, 632, 1288, 402, 827, 266, 252, 252, 809, 379, 146, 207, 293, 220, 197, 180, 275, 128], Price_00002);
constraint array_var_int_element(VMType_00003, [8403, 9152, 10638, 16000, 13005, 4105, 2752, 4576, 6672, 5570, 1373, 1430, 5400, 1654, 5520, 3079, 1637, 1470, 1301, 665, 632, 1288, 402, 827, 266, 252, 252, 809, 379, 146, 207, 293, 220, 197, 180, 275, 128], Price_00003);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00004_00004_INTEGER,AssignmentMatrix_00005_00004_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00004_00005_INTEGER,AssignmentMatrix_00005_00005_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00004_00006_INTEGER,AssignmentMatrix_00005_00006_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00004_00007_INTEGER,AssignmentMatrix_00005_00007_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00004_00008_INTEGER,AssignmentMatrix_00005_00008_INTEGER,1],0);
constraint int_lin_le([2,2,2,2,-3,-3,-3,-3,-3,-3,-3,-3,-1],[AssignmentMatrix_00001_00004_INTEGER,AssignmentMatrix_00001_00005_INTEGER,AssignmentMatrix_00001_00006_INTEGER,AssignmentMatrix_00001_00007_INTEGER,AssignmentMatrix_00002_00001_INTEGER,AssignmentMatrix_00002_00002_INTEGER,AssignmentMatrix_00002_00003_INTEGER,AssignmentMatrix_00002_00004_INTEGER,AssignmentMatrix_00002_00005_INTEGER,AssignmentMatrix_00002_00006_INTEGER,AssignmentMatrix_00002_00007_INTEGER,AssignmentMatrix_00002_00008_INTEGER,-6],0);
constraint array_bool_or([aux56_BOOL,aux61_BOOL],true);
constraint array_bool_or([aux62_BOOL,aux25_BOOL],true);
constraint array_bool_or([aux63_BOOL,aux26_BOOL],true);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00003_00004_INTEGER,AssignmentMatrix_00002_00004_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00003_00005_INTEGER,AssignmentMatrix_00002_00005_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00003_00006_INTEGER,AssignmentMatrix_00002_00006_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00003_00007_INTEGER,AssignmentMatrix_00002_00007_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00003_00008_INTEGER,AssignmentMatrix_00002_00008_INTEGER,1],0);
constraint int_lin_le([4000,1,512,-1],[AssignmentMatrix_00005_00001_INTEGER,512,AssignmentMatrix_00002_00001_INTEGER,Memory_00001],0);
constraint int_lin_le([4000,1,512,-1],[AssignmentMatrix_00005_00002_INTEGER,512,AssignmentMatrix_00002_00002_INTEGER,Memory_00002],0);
constraint int_lin_le([4000,1,512,-1],[AssignmentMatrix_00005_00003_INTEGER,512,AssignmentMatrix_00002_00003_INTEGER,Memory_00003],0);
constraint int_lin_le([2048,2048,4000,512,512,-1],[AssignmentMatrix_00003_00004_INTEGER,AssignmentMatrix_00004_00004_INTEGER,AssignmentMatrix_00005_00004_INTEGER,AssignmentMatrix_00001_00004_INTEGER,AssignmentMatrix_00002_00004_INTEGER,Memory_00004],0);
constraint int_lin_le([2048,2048,4000,512,512,-1],[AssignmentMatrix_00003_00005_INTEGER,AssignmentMatrix_00004_00005_INTEGER,AssignmentMatrix_00005_00005_INTEGER,AssignmentMatrix_00001_00005_INTEGER,AssignmentMatrix_00002_00005_INTEGER,aux20],0);
constraint array_bool_or([aux64_BOOL,aux69_BOOL],true);
constraint int_lin_le([2048,2048,4000,512,512,-1],[AssignmentMatrix_00003_00006_INTEGER,AssignmentMatrix_00004_00006_INTEGER,AssignmentMatrix_00005_00006_INTEGER,AssignmentMatrix_00001_00006_INTEGER,AssignmentMatrix_00002_00006_INTEGER,aux19],0);
constraint lex_lesseq_int([AssignmentMatrix_00002_00002_INTEGER, AssignmentMatrix_00005_00002_INTEGER],[AssignmentMatrix_00002_00001_INTEGER, AssignmentMatrix_00005_00001_INTEGER]);
constraint int_lin_le([2048,2048,4000,512,512,-1],[AssignmentMatrix_00003_00007_INTEGER,AssignmentMatrix_00004_00007_INTEGER,AssignmentMatrix_00005_00007_INTEGER,AssignmentMatrix_00001_00007_INTEGER,AssignmentMatrix_00002_00007_INTEGER,aux24],0);
constraint lex_lesseq_int([AssignmentMatrix_00002_00003_INTEGER, AssignmentMatrix_00005_00003_INTEGER],[AssignmentMatrix_00002_00002_INTEGER, AssignmentMatrix_00005_00002_INTEGER]);
constraint int_lin_le([2048,2048,4000,512,-1],[AssignmentMatrix_00003_00008_INTEGER,AssignmentMatrix_00004_00008_INTEGER,AssignmentMatrix_00005_00008_INTEGER,AssignmentMatrix_00002_00008_INTEGER,aux23],0);
constraint lex_lesseq_int([AssignmentMatrix_00001_00004_INTEGER, AssignmentMatrix_00002_00004_INTEGER, AssignmentMatrix_00003_00004_INTEGER, AssignmentMatrix_00004_00004_INTEGER, AssignmentMatrix_00005_00004_INTEGER],[1, AssignmentMatrix_00002_00003_INTEGER, 0, 0, AssignmentMatrix_00005_00003_INTEGER]);
constraint lex_lesseq_int([AssignmentMatrix_00001_00005_INTEGER, AssignmentMatrix_00002_00005_INTEGER, AssignmentMatrix_00003_00005_INTEGER, AssignmentMatrix_00004_00005_INTEGER, AssignmentMatrix_00005_00005_INTEGER],[AssignmentMatrix_00001_00004_INTEGER, AssignmentMatrix_00002_00004_INTEGER, AssignmentMatrix_00003_00004_INTEGER, AssignmentMatrix_00004_00004_INTEGER, AssignmentMatrix_00005_00004_INTEGER]);
constraint lex_lesseq_int([AssignmentMatrix_00001_00006_INTEGER, AssignmentMatrix_00002_00006_INTEGER, AssignmentMatrix_00003_00006_INTEGER, AssignmentMatrix_00004_00006_INTEGER, AssignmentMatrix_00005_00006_INTEGER],[AssignmentMatrix_00001_00005_INTEGER, AssignmentMatrix_00002_00005_INTEGER, AssignmentMatrix_00003_00005_INTEGER, AssignmentMatrix_00004_00005_INTEGER, AssignmentMatrix_00005_00005_INTEGER]);
constraint lex_lesseq_int([AssignmentMatrix_00001_00007_INTEGER, AssignmentMatrix_00002_00007_INTEGER, AssignmentMatrix_00003_00007_INTEGER, AssignmentMatrix_00004_00007_INTEGER, AssignmentMatrix_00005_00007_INTEGER],[AssignmentMatrix_00001_00006_INTEGER, AssignmentMatrix_00002_00006_INTEGER, AssignmentMatrix_00003_00006_INTEGER, AssignmentMatrix_00004_00006_INTEGER, AssignmentMatrix_00005_00006_INTEGER]);
constraint lex_lesseq_int([0, AssignmentMatrix_00002_00008_INTEGER, AssignmentMatrix_00003_00008_INTEGER, AssignmentMatrix_00004_00008_INTEGER, AssignmentMatrix_00005_00008_INTEGER],[AssignmentMatrix_00001_00007_INTEGER, AssignmentMatrix_00002_00007_INTEGER, AssignmentMatrix_00003_00007_INTEGER, AssignmentMatrix_00004_00007_INTEGER, AssignmentMatrix_00005_00007_INTEGER]);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00005_00001_INTEGER,AssignmentMatrix_00002_00001_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00005_00002_INTEGER,AssignmentMatrix_00002_00002_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00005_00003_INTEGER,AssignmentMatrix_00002_00003_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00005_00004_INTEGER,AssignmentMatrix_00002_00004_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00005_00005_INTEGER,AssignmentMatrix_00002_00005_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00005_00006_INTEGER,AssignmentMatrix_00002_00006_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00005_00007_INTEGER,AssignmentMatrix_00002_00007_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00005_00008_INTEGER,AssignmentMatrix_00002_00008_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00004_00004_INTEGER,AssignmentMatrix_00001_00004_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00004_00005_INTEGER,AssignmentMatrix_00001_00005_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00004_00006_INTEGER,AssignmentMatrix_00001_00006_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00004_00007_INTEGER,AssignmentMatrix_00001_00007_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00003_00004_INTEGER,AssignmentMatrix_00005_00004_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00003_00005_INTEGER,AssignmentMatrix_00005_00005_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00003_00006_INTEGER,AssignmentMatrix_00005_00006_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00003_00007_INTEGER,AssignmentMatrix_00005_00007_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[AssignmentMatrix_00003_00008_INTEGER,AssignmentMatrix_00005_00008_INTEGER,1],0);
constraint array_bool_or([aux70_BOOL,aux71_BOOL],true);
constraint int_lin_le([4,1,2,-1],[AssignmentMatrix_00005_00001_INTEGER,2,AssignmentMatrix_00002_00001_INTEGER,CPU_00001],0);
constraint int_lin_le([4,1,2,-1],[AssignmentMatrix_00005_00002_INTEGER,2,AssignmentMatrix_00002_00002_INTEGER,CPU_00002],0);
constraint int_lin_le([4,1,2,-1],[AssignmentMatrix_00005_00003_INTEGER,2,AssignmentMatrix_00002_00003_INTEGER,CPU_00003],0);
constraint int_lin_le([4,4,4,2,2,-1],[AssignmentMatrix_00003_00004_INTEGER,AssignmentMatrix_00004_00004_INTEGER,AssignmentMatrix_00005_00004_INTEGER,AssignmentMatrix_00001_00004_INTEGER,AssignmentMatrix_00002_00004_INTEGER,CPU_00004],0);
constraint array_var_int_element(VMType_00004, [8403, 9152, 10638, 16000, 13005, 4105, 2752, 4576, 6672, 5570, 1373, 1430, 5400, 1654, 5520, 3079, 1637, 1470, 1301, 665, 632, 1288, 402, 827, 266, 252, 252, 809, 379, 146, 207, 293, 220, 197, 180, 275, 128], Price_00004);

solve :: int_search([1, 1, 1, AssignmentMatrix_00001_00004_INTEGER, AssignmentMatrix_00001_00005_INTEGER, AssignmentMatrix_00001_00006_INTEGER, AssignmentMatrix_00001_00007_INTEGER, 0, AssignmentMatrix_00002_00001_INTEGER, AssignmentMatrix_00002_00002_INTEGER, AssignmentMatrix_00002_00003_INTEGER, AssignmentMatrix_00002_00004_INTEGER, AssignmentMatrix_00002_00005_INTEGER, AssignmentMatrix_00002_00006_INTEGER, AssignmentMatrix_00002_00007_INTEGER, AssignmentMatrix_00002_00008_INTEGER, 0, 0, 0, AssignmentMatrix_00003_00004_INTEGER, AssignmentMatrix_00003_00005_INTEGER, AssignmentMatrix_00003_00006_INTEGER, AssignmentMatrix_00003_00007_INTEGER, AssignmentMatrix_00003_00008_INTEGER, 0, 0, 0, AssignmentMatrix_00004_00004_INTEGER, AssignmentMatrix_00004_00005_INTEGER, AssignmentMatrix_00004_00006_INTEGER, AssignmentMatrix_00004_00007_INTEGER, AssignmentMatrix_00004_00008_INTEGER, AssignmentMatrix_00005_00001_INTEGER, AssignmentMatrix_00005_00002_INTEGER, AssignmentMatrix_00005_00003_INTEGER, AssignmentMatrix_00005_00004_INTEGER, AssignmentMatrix_00005_00005_INTEGER, AssignmentMatrix_00005_00006_INTEGER, AssignmentMatrix_00005_00007_INTEGER, AssignmentMatrix_00005_00008_INTEGER, VMType_00001, VMType_00002, VMType_00003, VMType_00004, VMType_00005, VMType_00006, VMType_00007, VMType_00008, CPU_00001, CPU_00002, CPU_00003, CPU_00004, CPU_00005, CPU_00006, CPU_00007, CPU_00008, Memory_00001, Memory_00002, Memory_00003, Memory_00004, Memory_00005, Memory_00006, Memory_00007, Memory_00008, Storage_00001, Storage_00002, Storage_00003, Storage_00004, Storage_00005, Storage_00006, Storage_00007, Storage_00008, Price_00001, Price_00002, Price_00003, Price_00004, Price_00005, Price_00006, Price_00007, Price_00008], input_order, indomain_min, complete)
minimize aux0;
