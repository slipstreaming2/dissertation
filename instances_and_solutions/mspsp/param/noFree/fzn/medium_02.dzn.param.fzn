predicate all_different_int(array [int] of var int: xs);
array [1..1] of int: aux1 = [1];
array [1..14] of int: aux0 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0];
array [1..8] of int: aux3 = [1, 1, 1, 1, 2, 2, 1, 1];
array [1..14] of int: aux2 = [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0];
array [1..14] of int: d = [2, 6, 1, 2, 1, 4, 2, 2, 2, 1, 2, 3, 3, 3];
array [1..5] of int: rc = [1, 4, 2, 5, 3];
array [1..2] of int: aux9 = [2, 1];
array [1..14] of int: aux8 = [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0];
array [1..3] of int: aux5 = [1, 1, 1];
array [1..14] of int: aux4 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1];
array [1..8] of int: aux7 = [1, 1, 1, 1, 1, 1, 1, 1];
array [1..14] of int: aux6 = [1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1];
var 0..34: s_00001:: output_var ;
var 0..34: s_00002:: output_var ;
var 0..34: s_00003:: output_var ;
var 0..34: s_00004:: output_var ;
var 0..34: s_00005:: output_var ;
var 0..34: s_00006:: output_var ;
var 0..34: s_00007:: output_var ;
var 0..34: s_00008:: output_var ;
var 0..34: s_00009:: output_var ;
var 0..34: s_00010:: output_var ;
var 0..34: s_00011:: output_var ;
var 0..34: s_00012:: output_var ;
var 0..34: s_00013:: output_var ;
var 0..34: s_00014:: output_var ;
var bool: w_00001_00001_BOOL;
var {0,1}: w_00001_00001_INTEGER :: output_var ;
var bool: w_00001_00002_BOOL;
var {0,1}: w_00001_00002_INTEGER :: output_var ;
var bool: w_00001_00003_BOOL;
var {0,1}: w_00001_00003_INTEGER :: output_var ;
var bool: w_00001_00004_BOOL;
var {0,1}: w_00001_00004_INTEGER :: output_var ;
var bool: w_00001_00005_BOOL;
var {0,1}: w_00001_00005_INTEGER :: output_var ;
var bool: w_00001_00006_BOOL;
var {0,1}: w_00001_00006_INTEGER :: output_var ;
var bool: w_00001_00007_BOOL;
var {0,1}: w_00001_00007_INTEGER :: output_var ;
var bool: w_00001_00008_BOOL;
var {0,1}: w_00001_00008_INTEGER :: output_var ;
var bool: w_00001_00009_BOOL;
var {0,1}: w_00001_00009_INTEGER :: output_var ;
var bool: w_00001_00010_BOOL;
var {0,1}: w_00001_00010_INTEGER :: output_var ;
var bool: w_00001_00011_BOOL;
var {0,1}: w_00001_00011_INTEGER :: output_var ;
var bool: w_00001_00012_BOOL;
var {0,1}: w_00001_00012_INTEGER :: output_var ;
var bool: w_00001_00013_BOOL;
var {0,1}: w_00001_00013_INTEGER :: output_var ;
var bool: w_00001_00014_BOOL;
var {0,1}: w_00001_00014_INTEGER :: output_var ;
var bool: w_00002_00001_BOOL;
var {0,1}: w_00002_00001_INTEGER :: output_var ;
var bool: w_00002_00002_BOOL;
var {0,1}: w_00002_00002_INTEGER :: output_var ;
var bool: w_00002_00003_BOOL;
var {0,1}: w_00002_00003_INTEGER :: output_var ;
var bool: w_00002_00004_BOOL;
var {0,1}: w_00002_00004_INTEGER :: output_var ;
var bool: w_00002_00005_BOOL;
var {0,1}: w_00002_00005_INTEGER :: output_var ;
var bool: w_00002_00006_BOOL;
var {0,1}: w_00002_00006_INTEGER :: output_var ;
var bool: w_00002_00007_BOOL;
var {0,1}: w_00002_00007_INTEGER :: output_var ;
var bool: w_00002_00008_BOOL;
var {0,1}: w_00002_00008_INTEGER :: output_var ;
var bool: w_00002_00009_BOOL;
var {0,1}: w_00002_00009_INTEGER :: output_var ;
var bool: w_00002_00010_BOOL;
var {0,1}: w_00002_00010_INTEGER :: output_var ;
var bool: w_00002_00011_BOOL;
var {0,1}: w_00002_00011_INTEGER :: output_var ;
var bool: w_00002_00012_BOOL;
var {0,1}: w_00002_00012_INTEGER :: output_var ;
var bool: w_00002_00013_BOOL;
var {0,1}: w_00002_00013_INTEGER :: output_var ;
var bool: w_00002_00014_BOOL;
var {0,1}: w_00002_00014_INTEGER :: output_var ;
var bool: w_00003_00001_BOOL;
var {0,1}: w_00003_00001_INTEGER :: output_var ;
var bool: w_00003_00002_BOOL;
var {0,1}: w_00003_00002_INTEGER :: output_var ;
var bool: w_00003_00003_BOOL;
var {0,1}: w_00003_00003_INTEGER :: output_var ;
var bool: w_00003_00004_BOOL;
var {0,1}: w_00003_00004_INTEGER :: output_var ;
var bool: w_00003_00005_BOOL;
var {0,1}: w_00003_00005_INTEGER :: output_var ;
var bool: w_00003_00006_BOOL;
var {0,1}: w_00003_00006_INTEGER :: output_var ;
var bool: w_00003_00007_BOOL;
var {0,1}: w_00003_00007_INTEGER :: output_var ;
var bool: w_00003_00008_BOOL;
var {0,1}: w_00003_00008_INTEGER :: output_var ;
var bool: w_00003_00009_BOOL;
var {0,1}: w_00003_00009_INTEGER :: output_var ;
var bool: w_00003_00010_BOOL;
var {0,1}: w_00003_00010_INTEGER :: output_var ;
var bool: w_00003_00011_BOOL;
var {0,1}: w_00003_00011_INTEGER :: output_var ;
var bool: w_00003_00012_BOOL;
var {0,1}: w_00003_00012_INTEGER :: output_var ;
var bool: w_00003_00013_BOOL;
var {0,1}: w_00003_00013_INTEGER :: output_var ;
var bool: w_00003_00014_BOOL;
var {0,1}: w_00003_00014_INTEGER :: output_var ;
var bool: w_00004_00001_BOOL;
var {0,1}: w_00004_00001_INTEGER :: output_var ;
var bool: w_00004_00002_BOOL;
var {0,1}: w_00004_00002_INTEGER :: output_var ;
var bool: w_00004_00003_BOOL;
var {0,1}: w_00004_00003_INTEGER :: output_var ;
var bool: w_00004_00004_BOOL;
var {0,1}: w_00004_00004_INTEGER :: output_var ;
var bool: w_00004_00005_BOOL;
var {0,1}: w_00004_00005_INTEGER :: output_var ;
var bool: w_00004_00006_BOOL;
var {0,1}: w_00004_00006_INTEGER :: output_var ;
var bool: w_00004_00007_BOOL;
var {0,1}: w_00004_00007_INTEGER :: output_var ;
var bool: w_00004_00008_BOOL;
var {0,1}: w_00004_00008_INTEGER :: output_var ;
var bool: w_00004_00009_BOOL;
var {0,1}: w_00004_00009_INTEGER :: output_var ;
var bool: w_00004_00010_BOOL;
var {0,1}: w_00004_00010_INTEGER :: output_var ;
var bool: w_00004_00011_BOOL;
var {0,1}: w_00004_00011_INTEGER :: output_var ;
var bool: w_00004_00012_BOOL;
var {0,1}: w_00004_00012_INTEGER :: output_var ;
var bool: w_00004_00013_BOOL;
var {0,1}: w_00004_00013_INTEGER :: output_var ;
var bool: w_00004_00014_BOOL;
var {0,1}: w_00004_00014_INTEGER :: output_var ;
var bool: w_00005_00001_BOOL;
var {0,1}: w_00005_00001_INTEGER :: output_var ;
var bool: w_00005_00002_BOOL;
var {0,1}: w_00005_00002_INTEGER :: output_var ;
var bool: w_00005_00003_BOOL;
var {0,1}: w_00005_00003_INTEGER :: output_var ;
var bool: w_00005_00004_BOOL;
var {0,1}: w_00005_00004_INTEGER :: output_var ;
var bool: w_00005_00005_BOOL;
var {0,1}: w_00005_00005_INTEGER :: output_var ;
var bool: w_00005_00006_BOOL;
var {0,1}: w_00005_00006_INTEGER :: output_var ;
var bool: w_00005_00007_BOOL;
var {0,1}: w_00005_00007_INTEGER :: output_var ;
var bool: w_00005_00008_BOOL;
var {0,1}: w_00005_00008_INTEGER :: output_var ;
var bool: w_00005_00009_BOOL;
var {0,1}: w_00005_00009_INTEGER :: output_var ;
var bool: w_00005_00010_BOOL;
var {0,1}: w_00005_00010_INTEGER :: output_var ;
var bool: w_00005_00011_BOOL;
var {0,1}: w_00005_00011_INTEGER :: output_var ;
var bool: w_00005_00012_BOOL;
var {0,1}: w_00005_00012_INTEGER :: output_var ;
var bool: w_00005_00013_BOOL;
var {0,1}: w_00005_00013_INTEGER :: output_var ;
var bool: w_00005_00014_BOOL;
var {0,1}: w_00005_00014_INTEGER :: output_var ;
var bool: w_00006_00001_BOOL;
var {0,1}: w_00006_00001_INTEGER :: output_var ;
var bool: w_00006_00002_BOOL;
var {0,1}: w_00006_00002_INTEGER :: output_var ;
var bool: w_00006_00003_BOOL;
var {0,1}: w_00006_00003_INTEGER :: output_var ;
var bool: w_00006_00004_BOOL;
var {0,1}: w_00006_00004_INTEGER :: output_var ;
var bool: w_00006_00005_BOOL;
var {0,1}: w_00006_00005_INTEGER :: output_var ;
var bool: w_00006_00006_BOOL;
var {0,1}: w_00006_00006_INTEGER :: output_var ;
var bool: w_00006_00007_BOOL;
var {0,1}: w_00006_00007_INTEGER :: output_var ;
var bool: w_00006_00008_BOOL;
var {0,1}: w_00006_00008_INTEGER :: output_var ;
var bool: w_00006_00009_BOOL;
var {0,1}: w_00006_00009_INTEGER :: output_var ;
var bool: w_00006_00010_BOOL;
var {0,1}: w_00006_00010_INTEGER :: output_var ;
var bool: w_00006_00011_BOOL;
var {0,1}: w_00006_00011_INTEGER :: output_var ;
var bool: w_00006_00012_BOOL;
var {0,1}: w_00006_00012_INTEGER :: output_var ;
var bool: w_00006_00013_BOOL;
var {0,1}: w_00006_00013_INTEGER :: output_var ;
var bool: w_00006_00014_BOOL;
var {0,1}: w_00006_00014_INTEGER :: output_var ;
var 0..34: objective:: output_var ;
var {0,1}: TWorkers_00001_00001_INTEGER :: output_var ;
var {0,1}: TWorkers_00001_00002_INTEGER :: output_var ;
var {0,1}: TWorkers_00001_00003_INTEGER :: output_var ;
var {0,1}: TWorkers_00001_00004_INTEGER :: output_var ;
var {0,1}: TWorkers_00001_00005_INTEGER :: output_var ;
var {0,1}: TWorkers_00001_00006_INTEGER :: output_var ;
var {0,1}: TWorkers_00001_00007_INTEGER :: output_var ;
var {0,1}: TWorkers_00001_00008_INTEGER :: output_var ;
var {0,1}: TWorkers_00001_00009_INTEGER :: output_var ;
var {0,1}: TWorkers_00001_00010_INTEGER :: output_var ;
var {0,1}: TWorkers_00001_00011_INTEGER :: output_var ;
var {0,1}: TWorkers_00001_00012_INTEGER :: output_var ;
var {0,1}: TWorkers_00001_00013_INTEGER :: output_var ;
var {0,1}: TWorkers_00001_00014_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00001_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00002_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00003_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00004_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00005_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00006_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00007_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00008_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00009_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00010_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00011_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00012_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00013_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00014_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00001_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00002_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00003_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00004_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00005_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00006_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00007_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00008_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00009_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00010_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00011_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00012_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00013_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00014_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00001_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00002_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00003_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00004_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00005_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00006_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00007_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00008_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00009_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00010_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00011_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00012_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00013_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00014_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00001_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00002_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00003_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00004_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00005_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00006_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00007_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00008_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00009_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00010_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00011_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00012_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00013_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00014_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00001_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00002_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00003_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00004_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00005_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00006_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00007_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00008_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00009_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00010_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00011_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00012_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00013_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00014_INTEGER :: output_var ;
var bool: aux10_BOOL:: var_is_introduced ;
var bool: aux11_BOOL:: var_is_introduced ;
var {0,1}: aux11_INTEGER :: var_is_introduced ;
var bool: aux12_BOOL:: var_is_introduced ;
var bool: aux13_BOOL:: var_is_introduced ;
var {0,1}: aux13_INTEGER :: var_is_introduced ;
var bool: aux14_BOOL:: var_is_introduced ;
var bool: aux15_BOOL:: var_is_introduced ;
var {0,1}: aux15_INTEGER :: var_is_introduced ;
var bool: aux16_BOOL:: var_is_introduced ;
var bool: aux17_BOOL:: var_is_introduced ;
var {0,1}: aux17_INTEGER :: var_is_introduced ;
var bool: aux18_BOOL:: var_is_introduced ;
var bool: aux19_BOOL:: var_is_introduced ;
var {0,1}: aux19_INTEGER :: var_is_introduced ;
var bool: aux20_BOOL:: var_is_introduced ;
var bool: aux21_BOOL:: var_is_introduced ;
var {0,1}: aux21_INTEGER :: var_is_introduced ;
var bool: aux22_BOOL:: var_is_introduced ;
var bool: aux23_BOOL:: var_is_introduced ;
var {0,1}: aux23_INTEGER :: var_is_introduced ;
var bool: aux24_BOOL:: var_is_introduced ;
var bool: aux25_BOOL:: var_is_introduced ;
var {0,1}: aux25_INTEGER :: var_is_introduced ;
var bool: aux26_BOOL:: var_is_introduced ;
var bool: aux27_BOOL:: var_is_introduced ;
var {0,1}: aux27_INTEGER :: var_is_introduced ;
var bool: aux28_BOOL:: var_is_introduced ;
var bool: aux29_BOOL:: var_is_introduced ;
var {0,1}: aux29_INTEGER :: var_is_introduced ;
var bool: aux30_BOOL:: var_is_introduced ;
var bool: aux31_BOOL:: var_is_introduced ;
var {0,1}: aux31_INTEGER :: var_is_introduced ;
var bool: aux32_BOOL:: var_is_introduced ;
var bool: aux33_BOOL:: var_is_introduced ;
var {0,1}: aux33_INTEGER :: var_is_introduced ;
var bool: aux34_BOOL:: var_is_introduced ;
var bool: aux35_BOOL:: var_is_introduced ;
var {0,1}: aux35_INTEGER :: var_is_introduced ;
var bool: aux36_BOOL:: var_is_introduced ;
var bool: aux37_BOOL:: var_is_introduced ;
var {0,1}: aux37_INTEGER :: var_is_introduced ;
var bool: aux38_BOOL:: var_is_introduced ;
var bool: aux39_BOOL:: var_is_introduced ;
var {0,1}: aux39_INTEGER :: var_is_introduced ;
var bool: aux40_BOOL:: var_is_introduced ;
var bool: aux41_BOOL:: var_is_introduced ;
var {0,1}: aux41_INTEGER :: var_is_introduced ;
var bool: aux42_BOOL:: var_is_introduced ;
var bool: aux43_BOOL:: var_is_introduced ;
var {0,1}: aux43_INTEGER :: var_is_introduced ;
var bool: aux44_BOOL:: var_is_introduced ;
var bool: aux45_BOOL:: var_is_introduced ;
var {0,1}: aux45_INTEGER :: var_is_introduced ;
var bool: aux46_BOOL:: var_is_introduced ;
var bool: aux47_BOOL:: var_is_introduced ;
var {0,1}: aux47_INTEGER :: var_is_introduced ;
var bool: aux48_BOOL:: var_is_introduced ;
var bool: aux49_BOOL:: var_is_introduced ;
var {0,1}: aux49_INTEGER :: var_is_introduced ;
var bool: aux50_BOOL:: var_is_introduced ;
var bool: aux51_BOOL:: var_is_introduced ;
var {0,1}: aux51_INTEGER :: var_is_introduced ;
var bool: aux52_BOOL:: var_is_introduced ;
var bool: aux53_BOOL:: var_is_introduced ;
var {0,1}: aux53_INTEGER :: var_is_introduced ;
var bool: aux54_BOOL:: var_is_introduced ;
var bool: aux55_BOOL:: var_is_introduced ;
var {0,1}: aux55_INTEGER :: var_is_introduced ;
var bool: aux56_BOOL:: var_is_introduced ;
var bool: aux57_BOOL:: var_is_introduced ;
var {0,1}: aux57_INTEGER :: var_is_introduced ;
var bool: aux58_BOOL:: var_is_introduced ;
var bool: aux59_BOOL:: var_is_introduced ;
var {0,1}: aux59_INTEGER :: var_is_introduced ;
var bool: aux60_BOOL:: var_is_introduced ;
var bool: aux61_BOOL:: var_is_introduced ;
var {0,1}: aux61_INTEGER :: var_is_introduced ;
var bool: aux62_BOOL:: var_is_introduced ;
var bool: aux63_BOOL:: var_is_introduced ;
var {0,1}: aux63_INTEGER :: var_is_introduced ;
var bool: aux64_BOOL:: var_is_introduced ;
var bool: aux65_BOOL:: var_is_introduced ;
var {0,1}: aux65_INTEGER :: var_is_introduced ;
var bool: aux66_BOOL:: var_is_introduced ;
var bool: aux67_BOOL:: var_is_introduced ;
var {0,1}: aux67_INTEGER :: var_is_introduced ;
var bool: aux68_BOOL:: var_is_introduced ;
var bool: aux69_BOOL:: var_is_introduced ;
var {0,1}: aux69_INTEGER :: var_is_introduced ;
var bool: aux70_BOOL:: var_is_introduced ;
var bool: aux71_BOOL:: var_is_introduced ;
var {0,1}: aux71_INTEGER :: var_is_introduced ;
var bool: aux72_BOOL:: var_is_introduced ;
var bool: aux73_BOOL:: var_is_introduced ;
var {0,1}: aux73_INTEGER :: var_is_introduced ;
var bool: aux74_BOOL:: var_is_introduced ;
var bool: aux75_BOOL:: var_is_introduced ;
var {0,1}: aux75_INTEGER :: var_is_introduced ;
var bool: aux76_BOOL:: var_is_introduced ;
var bool: aux77_BOOL:: var_is_introduced ;
var {0,1}: aux77_INTEGER :: var_is_introduced ;
var bool: aux78_BOOL:: var_is_introduced ;
var bool: aux79_BOOL:: var_is_introduced ;
var {0,1}: aux79_INTEGER :: var_is_introduced ;
var bool: aux80_BOOL:: var_is_introduced ;
var bool: aux81_BOOL:: var_is_introduced ;
var {0,1}: aux81_INTEGER :: var_is_introduced ;
var bool: aux82_BOOL:: var_is_introduced ;
var bool: aux83_BOOL:: var_is_introduced ;
var {0,1}: aux83_INTEGER :: var_is_introduced ;
var bool: aux84_BOOL:: var_is_introduced ;
var bool: aux85_BOOL:: var_is_introduced ;
var {0,1}: aux85_INTEGER :: var_is_introduced ;
var bool: aux86_BOOL:: var_is_introduced ;
var bool: aux87_BOOL:: var_is_introduced ;
var {0,1}: aux87_INTEGER :: var_is_introduced ;
var bool: aux88_BOOL:: var_is_introduced ;
var bool: aux89_BOOL:: var_is_introduced ;
var {0,1}: aux89_INTEGER :: var_is_introduced ;
var bool: aux90_BOOL:: var_is_introduced ;
var bool: aux91_BOOL:: var_is_introduced ;
var {0,1}: aux91_INTEGER :: var_is_introduced ;
var bool: aux92_BOOL:: var_is_introduced ;
var bool: aux93_BOOL:: var_is_introduced ;
var {0,1}: aux93_INTEGER :: var_is_introduced ;
var bool: aux94_BOOL:: var_is_introduced ;
var bool: aux95_BOOL:: var_is_introduced ;
var {0,1}: aux95_INTEGER :: var_is_introduced ;
var bool: aux96_BOOL:: var_is_introduced ;
var bool: aux97_BOOL:: var_is_introduced ;
var {0,1}: aux97_INTEGER :: var_is_introduced ;
var bool: aux98_BOOL:: var_is_introduced ;
var bool: aux99_BOOL:: var_is_introduced ;
var {0,1}: aux99_INTEGER :: var_is_introduced ;
var bool: aux100_BOOL:: var_is_introduced ;
var bool: aux101_BOOL:: var_is_introduced ;
var {0,1}: aux101_INTEGER :: var_is_introduced ;
var bool: aux102_BOOL:: var_is_introduced ;
var bool: aux103_BOOL:: var_is_introduced ;
var {0,1}: aux103_INTEGER :: var_is_introduced ;
var bool: aux104_BOOL:: var_is_introduced ;
var bool: aux105_BOOL:: var_is_introduced ;
var {0,1}: aux105_INTEGER :: var_is_introduced ;
var bool: aux106_BOOL:: var_is_introduced ;
var bool: aux107_BOOL:: var_is_introduced ;
var {0,1}: aux107_INTEGER :: var_is_introduced ;
var bool: aux108_BOOL:: var_is_introduced ;
var bool: aux109_BOOL:: var_is_introduced ;
var {0,1}: aux109_INTEGER :: var_is_introduced ;
var bool: aux110_BOOL:: var_is_introduced ;
var bool: aux111_BOOL:: var_is_introduced ;
var {0,1}: aux111_INTEGER :: var_is_introduced ;
var bool: aux112_BOOL:: var_is_introduced ;
var bool: aux113_BOOL:: var_is_introduced ;
var {0,1}: aux113_INTEGER :: var_is_introduced ;
var bool: aux114_BOOL:: var_is_introduced ;
var bool: aux115_BOOL:: var_is_introduced ;
var {0,1}: aux115_INTEGER :: var_is_introduced ;
var bool: aux116_BOOL:: var_is_introduced ;
var bool: aux117_BOOL:: var_is_introduced ;
var {0,1}: aux117_INTEGER :: var_is_introduced ;
var bool: aux118_BOOL:: var_is_introduced ;
var bool: aux119_BOOL:: var_is_introduced ;
var {0,1}: aux119_INTEGER :: var_is_introduced ;
var bool: aux120_BOOL:: var_is_introduced ;
var bool: aux121_BOOL:: var_is_introduced ;
var {0,1}: aux121_INTEGER :: var_is_introduced ;
var bool: aux122_BOOL:: var_is_introduced ;
var bool: aux123_BOOL:: var_is_introduced ;
var {0,1}: aux123_INTEGER :: var_is_introduced ;
var bool: aux124_BOOL:: var_is_introduced ;
var bool: aux125_BOOL:: var_is_introduced ;
var {0,1}: aux125_INTEGER :: var_is_introduced ;
var bool: aux126_BOOL:: var_is_introduced ;
var bool: aux127_BOOL:: var_is_introduced ;
var {0,1}: aux127_INTEGER :: var_is_introduced ;
var bool: aux128_BOOL:: var_is_introduced ;
var bool: aux129_BOOL:: var_is_introduced ;
var {0,1}: aux129_INTEGER :: var_is_introduced ;
var bool: aux130_BOOL:: var_is_introduced ;
var bool: aux131_BOOL:: var_is_introduced ;
var {0,1}: aux131_INTEGER :: var_is_introduced ;
var bool: aux132_BOOL:: var_is_introduced ;
var bool: aux133_BOOL:: var_is_introduced ;
var {0,1}: aux133_INTEGER :: var_is_introduced ;
var bool: aux134_BOOL:: var_is_introduced ;
var bool: aux135_BOOL:: var_is_introduced ;
var {0,1}: aux135_INTEGER :: var_is_introduced ;
var bool: aux136_BOOL:: var_is_introduced ;
var bool: aux137_BOOL:: var_is_introduced ;
var {0,1}: aux137_INTEGER :: var_is_introduced ;
var bool: aux138_BOOL:: var_is_introduced ;
var bool: aux139_BOOL:: var_is_introduced ;
var {0,1}: aux139_INTEGER :: var_is_introduced ;
var bool: aux140_BOOL:: var_is_introduced ;
var bool: aux141_BOOL:: var_is_introduced ;
var {0,1}: aux141_INTEGER :: var_is_introduced ;
var bool: aux142_BOOL:: var_is_introduced ;
var bool: aux143_BOOL:: var_is_introduced ;
var {0,1}: aux143_INTEGER :: var_is_introduced ;
var bool: aux144_BOOL:: var_is_introduced ;
var bool: aux145_BOOL:: var_is_introduced ;
var {0,1}: aux145_INTEGER :: var_is_introduced ;
var bool: aux146_BOOL:: var_is_introduced ;
var bool: aux147_BOOL:: var_is_introduced ;
var {0,1}: aux147_INTEGER :: var_is_introduced ;
var bool: aux148_BOOL:: var_is_introduced ;
var bool: aux149_BOOL:: var_is_introduced ;
var {0,1}: aux149_INTEGER :: var_is_introduced ;
var bool: aux150_BOOL:: var_is_introduced ;
var bool: aux151_BOOL:: var_is_introduced ;
var {0,1}: aux151_INTEGER :: var_is_introduced ;
var bool: aux152_BOOL:: var_is_introduced ;
var bool: aux153_BOOL:: var_is_introduced ;
var {0,1}: aux153_INTEGER :: var_is_introduced ;
var bool: aux154_BOOL:: var_is_introduced ;
var bool: aux155_BOOL:: var_is_introduced ;
var {0,1}: aux155_INTEGER :: var_is_introduced ;
var bool: aux156_BOOL:: var_is_introduced ;
var bool: aux157_BOOL:: var_is_introduced ;
var {0,1}: aux157_INTEGER :: var_is_introduced ;
var bool: aux158_BOOL:: var_is_introduced ;
var bool: aux159_BOOL:: var_is_introduced ;
var {0,1}: aux159_INTEGER :: var_is_introduced ;
var bool: aux160_BOOL:: var_is_introduced ;
var bool: aux161_BOOL:: var_is_introduced ;
var {0,1}: aux161_INTEGER :: var_is_introduced ;
var bool: aux162_BOOL:: var_is_introduced ;
var bool: aux163_BOOL:: var_is_introduced ;
var {0,1}: aux163_INTEGER :: var_is_introduced ;
var bool: aux164_BOOL:: var_is_introduced ;
var bool: aux165_BOOL:: var_is_introduced ;
var {0,1}: aux165_INTEGER :: var_is_introduced ;
var bool: aux166_BOOL:: var_is_introduced ;
var bool: aux167_BOOL:: var_is_introduced ;
var {0,1}: aux167_INTEGER :: var_is_introduced ;
var bool: aux168_BOOL:: var_is_introduced ;
var bool: aux169_BOOL:: var_is_introduced ;
var {0,1}: aux169_INTEGER :: var_is_introduced ;
var bool: aux170_BOOL:: var_is_introduced ;
var bool: aux171_BOOL:: var_is_introduced ;
var {0,1}: aux171_INTEGER :: var_is_introduced ;
var bool: aux172_BOOL:: var_is_introduced ;
var bool: aux173_BOOL:: var_is_introduced ;
var {0,1}: aux173_INTEGER :: var_is_introduced ;
var bool: aux174_BOOL:: var_is_introduced ;
var bool: aux175_BOOL:: var_is_introduced ;
var {0,1}: aux175_INTEGER :: var_is_introduced ;
var bool: aux176_BOOL:: var_is_introduced ;
var bool: aux177_BOOL:: var_is_introduced ;
var {0,1}: aux177_INTEGER :: var_is_introduced ;
var bool: aux178_BOOL:: var_is_introduced ;
var bool: aux179_BOOL:: var_is_introduced ;
var {0,1}: aux179_INTEGER :: var_is_introduced ;
var bool: aux180_BOOL:: var_is_introduced ;
var bool: aux181_BOOL:: var_is_introduced ;
var bool: aux182_BOOL:: var_is_introduced ;
var bool: aux183_BOOL:: var_is_introduced ;
var bool: aux184_BOOL:: var_is_introduced ;
var bool: aux185_BOOL:: var_is_introduced ;
var bool: aux186_BOOL:: var_is_introduced ;
var bool: aux187_BOOL:: var_is_introduced ;
var bool: aux188_BOOL:: var_is_introduced ;
var bool: aux189_BOOL:: var_is_introduced ;
var bool: aux190_BOOL:: var_is_introduced ;
var bool: aux191_BOOL:: var_is_introduced ;
var bool: aux192_BOOL:: var_is_introduced ;
var bool: aux193_BOOL:: var_is_introduced ;
var bool: aux194_BOOL:: var_is_introduced ;
var bool: aux195_BOOL:: var_is_introduced ;
var bool: aux196_BOOL:: var_is_introduced ;
var bool: aux197_BOOL:: var_is_introduced ;
var bool: aux198_BOOL:: var_is_introduced ;
var bool: aux199_BOOL:: var_is_introduced ;
var bool: aux200_BOOL:: var_is_introduced ;
var bool: aux201_BOOL:: var_is_introduced ;
var bool: aux202_BOOL:: var_is_introduced ;
var bool: aux203_BOOL:: var_is_introduced ;
var bool: aux204_BOOL:: var_is_introduced ;
var bool: aux205_BOOL:: var_is_introduced ;
var bool: aux206_BOOL:: var_is_introduced ;
var bool: aux207_BOOL:: var_is_introduced ;
var bool: aux208_BOOL:: var_is_introduced ;
var bool: aux209_BOOL:: var_is_introduced ;
var bool: aux210_BOOL:: var_is_introduced ;
var bool: aux211_BOOL:: var_is_introduced ;
var bool: aux212_BOOL:: var_is_introduced ;
var bool: aux213_BOOL:: var_is_introduced ;
var bool: aux214_BOOL:: var_is_introduced ;
var bool: aux215_BOOL:: var_is_introduced ;
var bool: aux216_BOOL:: var_is_introduced ;
var bool: aux217_BOOL:: var_is_introduced ;
var bool: aux218_BOOL:: var_is_introduced ;
var bool: aux219_BOOL:: var_is_introduced ;
var bool: aux220_BOOL:: var_is_introduced ;
var bool: aux221_BOOL:: var_is_introduced ;
var bool: aux222_BOOL:: var_is_introduced ;
var bool: aux223_BOOL:: var_is_introduced ;
var bool: aux224_BOOL:: var_is_introduced ;
var bool: aux225_BOOL:: var_is_introduced ;
var bool: aux226_BOOL:: var_is_introduced ;
var bool: aux227_BOOL:: var_is_introduced ;
var bool: aux228_BOOL:: var_is_introduced ;
var bool: aux229_BOOL:: var_is_introduced ;
var bool: aux230_BOOL:: var_is_introduced ;
var bool: aux231_BOOL:: var_is_introduced ;
var bool: aux232_BOOL:: var_is_introduced ;
var bool: aux233_BOOL:: var_is_introduced ;
var bool: aux234_BOOL:: var_is_introduced ;
var bool: aux235_BOOL:: var_is_introduced ;
var bool: aux236_BOOL:: var_is_introduced ;
var bool: aux237_BOOL:: var_is_introduced ;
var bool: aux238_BOOL:: var_is_introduced ;
var bool: aux239_BOOL:: var_is_introduced ;
var bool: aux240_BOOL:: var_is_introduced ;
var bool: aux241_BOOL:: var_is_introduced ;
var bool: aux242_BOOL:: var_is_introduced ;
var bool: aux243_BOOL:: var_is_introduced ;
var bool: aux244_BOOL:: var_is_introduced ;
var bool: aux245_BOOL:: var_is_introduced ;
var bool: aux246_BOOL:: var_is_introduced ;
var bool: aux247_BOOL:: var_is_introduced ;
var bool: aux248_BOOL:: var_is_introduced ;
var bool: aux249_BOOL:: var_is_introduced ;
var bool: aux250_BOOL:: var_is_introduced ;
var bool: aux251_BOOL:: var_is_introduced ;
var bool: aux252_BOOL:: var_is_introduced ;
var bool: aux253_BOOL:: var_is_introduced ;
var bool: aux254_BOOL:: var_is_introduced ;
var bool: aux255_BOOL:: var_is_introduced ;
var bool: aux256_BOOL:: var_is_introduced ;
var bool: aux257_BOOL:: var_is_introduced ;
var bool: aux258_BOOL:: var_is_introduced ;
var bool: aux259_BOOL:: var_is_introduced ;
var bool: aux260_BOOL:: var_is_introduced ;
var bool: aux261_BOOL:: var_is_introduced ;
var bool: aux262_BOOL:: var_is_introduced ;
var bool: aux263_BOOL:: var_is_introduced ;
var bool: aux264_BOOL:: var_is_introduced ;
var 1..35: aux265:: var_is_introduced ;
var bool: aux266_BOOL:: var_is_introduced ;
var bool: aux267_BOOL:: var_is_introduced ;
var {0,1}: aux267_INTEGER :: var_is_introduced ;
var bool: aux268_BOOL:: var_is_introduced ;
var bool: aux269_BOOL:: var_is_introduced ;
var 2..36: aux270:: var_is_introduced ;
var bool: aux271_BOOL:: var_is_introduced ;
var bool: aux272_BOOL:: var_is_introduced ;
var bool: aux273_BOOL:: var_is_introduced ;
var {0,1}: aux273_INTEGER :: var_is_introduced ;
var bool: aux274_BOOL:: var_is_introduced ;
var bool: aux275_BOOL:: var_is_introduced ;
var 6..40: aux276:: var_is_introduced ;
var bool: aux277_BOOL:: var_is_introduced ;
var bool: aux278_BOOL:: var_is_introduced ;
var bool: aux279_BOOL:: var_is_introduced ;
var {0,1}: aux279_INTEGER :: var_is_introduced ;
var bool: aux280_BOOL:: var_is_introduced ;
var bool: aux281_BOOL:: var_is_introduced ;
var 1..35: aux282:: var_is_introduced ;
var bool: aux283_BOOL:: var_is_introduced ;
var bool: aux284_BOOL:: var_is_introduced ;
var bool: aux285_BOOL:: var_is_introduced ;
var {0,1}: aux285_INTEGER :: var_is_introduced ;
var bool: aux286_BOOL:: var_is_introduced ;
var bool: aux287_BOOL:: var_is_introduced ;
var 2..36: aux288:: var_is_introduced ;
var bool: aux289_BOOL:: var_is_introduced ;
var bool: aux290_BOOL:: var_is_introduced ;
var bool: aux291_BOOL:: var_is_introduced ;
var {0,1}: aux291_INTEGER :: var_is_introduced ;
var bool: aux292_BOOL:: var_is_introduced ;
var bool: aux293_BOOL:: var_is_introduced ;
var 1..35: aux294:: var_is_introduced ;
var bool: aux295_BOOL:: var_is_introduced ;
var bool: aux296_BOOL:: var_is_introduced ;
var bool: aux297_BOOL:: var_is_introduced ;
var {0,1}: aux297_INTEGER :: var_is_introduced ;
var bool: aux298_BOOL:: var_is_introduced ;
var bool: aux299_BOOL:: var_is_introduced ;
var 4..38: aux300:: var_is_introduced ;
var bool: aux301_BOOL:: var_is_introduced ;
var bool: aux302_BOOL:: var_is_introduced ;
var bool: aux303_BOOL:: var_is_introduced ;
var {0,1}: aux303_INTEGER :: var_is_introduced ;
var bool: aux304_BOOL:: var_is_introduced ;
var bool: aux305_BOOL:: var_is_introduced ;
var 2..36: aux306:: var_is_introduced ;
var bool: aux307_BOOL:: var_is_introduced ;
var bool: aux308_BOOL:: var_is_introduced ;
var bool: aux309_BOOL:: var_is_introduced ;
var {0,1}: aux309_INTEGER :: var_is_introduced ;
var bool: aux310_BOOL:: var_is_introduced ;
var bool: aux311_BOOL:: var_is_introduced ;
var 2..36: aux312:: var_is_introduced ;
var bool: aux313_BOOL:: var_is_introduced ;
var bool: aux314_BOOL:: var_is_introduced ;
var bool: aux315_BOOL:: var_is_introduced ;
var {0,1}: aux315_INTEGER :: var_is_introduced ;
var bool: aux316_BOOL:: var_is_introduced ;
var bool: aux317_BOOL:: var_is_introduced ;
var 2..36: aux318:: var_is_introduced ;
var bool: aux319_BOOL:: var_is_introduced ;
var bool: aux320_BOOL:: var_is_introduced ;
var bool: aux321_BOOL:: var_is_introduced ;
var {0,1}: aux321_INTEGER :: var_is_introduced ;
var bool: aux322_BOOL:: var_is_introduced ;
var bool: aux323_BOOL:: var_is_introduced ;
var 2..36: aux324:: var_is_introduced ;
var bool: aux325_BOOL:: var_is_introduced ;
var bool: aux326_BOOL:: var_is_introduced ;
var bool: aux327_BOOL:: var_is_introduced ;
var {0,1}: aux327_INTEGER :: var_is_introduced ;
var bool: aux328_BOOL:: var_is_introduced ;
var bool: aux329_BOOL:: var_is_introduced ;
var 3..37: aux330:: var_is_introduced ;
var bool: aux331_BOOL:: var_is_introduced ;
var bool: aux332_BOOL:: var_is_introduced ;
var bool: aux333_BOOL:: var_is_introduced ;
var {0,1}: aux333_INTEGER :: var_is_introduced ;
var bool: aux334_BOOL:: var_is_introduced ;
var bool: aux335_BOOL:: var_is_introduced ;
var 3..37: aux336:: var_is_introduced ;
var bool: aux337_BOOL:: var_is_introduced ;
var bool: aux338_BOOL:: var_is_introduced ;
var bool: aux339_BOOL:: var_is_introduced ;
var {0,1}: aux339_INTEGER :: var_is_introduced ;
var bool: aux340_BOOL:: var_is_introduced ;
var bool: aux341_BOOL:: var_is_introduced ;
var 3..37: aux342:: var_is_introduced ;
var bool: aux343_BOOL:: var_is_introduced ;
var bool: aux344_BOOL:: var_is_introduced ;
var bool: aux345_BOOL:: var_is_introduced ;
var {0,1}: aux345_INTEGER :: var_is_introduced ;
var bool: aux346_BOOL:: var_is_introduced ;
var bool: aux347_BOOL:: var_is_introduced ;
var 2..36: aux348:: var_is_introduced ;
var bool: aux349_BOOL:: var_is_introduced ;
var bool: aux350_BOOL:: var_is_introduced ;
var {0,1}: aux350_INTEGER :: var_is_introduced ;
var bool: aux351_BOOL:: var_is_introduced ;
var bool: aux352_BOOL:: var_is_introduced ;
var 2..36: aux353:: var_is_introduced ;
var bool: aux354_BOOL:: var_is_introduced ;
var bool: aux355_BOOL:: var_is_introduced ;
var bool: aux356_BOOL:: var_is_introduced ;
var {0,1}: aux356_INTEGER :: var_is_introduced ;
var bool: aux357_BOOL:: var_is_introduced ;
var bool: aux358_BOOL:: var_is_introduced ;
var 6..40: aux359:: var_is_introduced ;
var bool: aux360_BOOL:: var_is_introduced ;
var bool: aux361_BOOL:: var_is_introduced ;
var bool: aux362_BOOL:: var_is_introduced ;
var {0,1}: aux362_INTEGER :: var_is_introduced ;
var bool: aux363_BOOL:: var_is_introduced ;
var bool: aux364_BOOL:: var_is_introduced ;
var 1..35: aux365:: var_is_introduced ;
var bool: aux366_BOOL:: var_is_introduced ;
var bool: aux367_BOOL:: var_is_introduced ;
var bool: aux368_BOOL:: var_is_introduced ;
var {0,1}: aux368_INTEGER :: var_is_introduced ;
var bool: aux369_BOOL:: var_is_introduced ;
var bool: aux370_BOOL:: var_is_introduced ;
var 2..36: aux371:: var_is_introduced ;
var bool: aux372_BOOL:: var_is_introduced ;
var bool: aux373_BOOL:: var_is_introduced ;
var bool: aux374_BOOL:: var_is_introduced ;
var {0,1}: aux374_INTEGER :: var_is_introduced ;
var bool: aux375_BOOL:: var_is_introduced ;
var bool: aux376_BOOL:: var_is_introduced ;
var 1..35: aux377:: var_is_introduced ;
var bool: aux378_BOOL:: var_is_introduced ;
var bool: aux379_BOOL:: var_is_introduced ;
var bool: aux380_BOOL:: var_is_introduced ;
var {0,1}: aux380_INTEGER :: var_is_introduced ;
var bool: aux381_BOOL:: var_is_introduced ;
var bool: aux382_BOOL:: var_is_introduced ;
var 4..38: aux383:: var_is_introduced ;
var bool: aux384_BOOL:: var_is_introduced ;
var bool: aux385_BOOL:: var_is_introduced ;
var bool: aux386_BOOL:: var_is_introduced ;
var {0,1}: aux386_INTEGER :: var_is_introduced ;
var bool: aux387_BOOL:: var_is_introduced ;
var bool: aux388_BOOL:: var_is_introduced ;
var 2..36: aux389:: var_is_introduced ;
var bool: aux390_BOOL:: var_is_introduced ;
var bool: aux391_BOOL:: var_is_introduced ;
var bool: aux392_BOOL:: var_is_introduced ;
var {0,1}: aux392_INTEGER :: var_is_introduced ;
var bool: aux393_BOOL:: var_is_introduced ;
var bool: aux394_BOOL:: var_is_introduced ;
var 2..36: aux395:: var_is_introduced ;
var bool: aux396_BOOL:: var_is_introduced ;
var bool: aux397_BOOL:: var_is_introduced ;
var bool: aux398_BOOL:: var_is_introduced ;
var {0,1}: aux398_INTEGER :: var_is_introduced ;
var bool: aux399_BOOL:: var_is_introduced ;
var bool: aux400_BOOL:: var_is_introduced ;
var 1..35: aux401:: var_is_introduced ;
var bool: aux402_BOOL:: var_is_introduced ;
var bool: aux403_BOOL:: var_is_introduced ;
var bool: aux404_BOOL:: var_is_introduced ;
var {0,1}: aux404_INTEGER :: var_is_introduced ;
var bool: aux405_BOOL:: var_is_introduced ;
var bool: aux406_BOOL:: var_is_introduced ;
var 2..36: aux407:: var_is_introduced ;
var bool: aux408_BOOL:: var_is_introduced ;
var bool: aux409_BOOL:: var_is_introduced ;
var bool: aux410_BOOL:: var_is_introduced ;
var {0,1}: aux410_INTEGER :: var_is_introduced ;
var bool: aux411_BOOL:: var_is_introduced ;
var bool: aux412_BOOL:: var_is_introduced ;
var 3..37: aux413:: var_is_introduced ;
var bool: aux414_BOOL:: var_is_introduced ;
var bool: aux415_BOOL:: var_is_introduced ;
var bool: aux416_BOOL:: var_is_introduced ;
var {0,1}: aux416_INTEGER :: var_is_introduced ;
var bool: aux417_BOOL:: var_is_introduced ;
var bool: aux418_BOOL:: var_is_introduced ;
var 3..37: aux419:: var_is_introduced ;
var bool: aux420_BOOL:: var_is_introduced ;
var bool: aux421_BOOL:: var_is_introduced ;
var bool: aux422_BOOL:: var_is_introduced ;
var {0,1}: aux422_INTEGER :: var_is_introduced ;
var bool: aux423_BOOL:: var_is_introduced ;
var bool: aux424_BOOL:: var_is_introduced ;
var 3..37: aux425:: var_is_introduced ;
var bool: aux426_BOOL:: var_is_introduced ;
var bool: aux427_BOOL:: var_is_introduced ;
var bool: aux428_BOOL:: var_is_introduced ;
var {0,1}: aux428_INTEGER :: var_is_introduced ;
var bool: aux429_BOOL:: var_is_introduced ;
var bool: aux430_BOOL:: var_is_introduced ;
var 6..40: aux431:: var_is_introduced ;
var bool: aux432_BOOL:: var_is_introduced ;
var bool: aux433_BOOL:: var_is_introduced ;
var {0,1}: aux433_INTEGER :: var_is_introduced ;
var bool: aux434_BOOL:: var_is_introduced ;
var bool: aux435_BOOL:: var_is_introduced ;
var 2..36: aux436:: var_is_introduced ;
var bool: aux437_BOOL:: var_is_introduced ;
var bool: aux438_BOOL:: var_is_introduced ;
var bool: aux439_BOOL:: var_is_introduced ;
var {0,1}: aux439_INTEGER :: var_is_introduced ;
var bool: aux440_BOOL:: var_is_introduced ;
var bool: aux441_BOOL:: var_is_introduced ;
var 1..35: aux442:: var_is_introduced ;
var bool: aux443_BOOL:: var_is_introduced ;
var bool: aux444_BOOL:: var_is_introduced ;
var bool: aux445_BOOL:: var_is_introduced ;
var {0,1}: aux445_INTEGER :: var_is_introduced ;
var bool: aux446_BOOL:: var_is_introduced ;
var bool: aux447_BOOL:: var_is_introduced ;
var 2..36: aux448:: var_is_introduced ;
var bool: aux449_BOOL:: var_is_introduced ;
var bool: aux450_BOOL:: var_is_introduced ;
var bool: aux451_BOOL:: var_is_introduced ;
var {0,1}: aux451_INTEGER :: var_is_introduced ;
var bool: aux452_BOOL:: var_is_introduced ;
var bool: aux453_BOOL:: var_is_introduced ;
var 1..35: aux454:: var_is_introduced ;
var bool: aux455_BOOL:: var_is_introduced ;
var bool: aux456_BOOL:: var_is_introduced ;
var bool: aux457_BOOL:: var_is_introduced ;
var {0,1}: aux457_INTEGER :: var_is_introduced ;
var bool: aux458_BOOL:: var_is_introduced ;
var bool: aux459_BOOL:: var_is_introduced ;
var 2..36: aux460:: var_is_introduced ;
var bool: aux461_BOOL:: var_is_introduced ;
var bool: aux462_BOOL:: var_is_introduced ;
var bool: aux463_BOOL:: var_is_introduced ;
var {0,1}: aux463_INTEGER :: var_is_introduced ;
var bool: aux464_BOOL:: var_is_introduced ;
var bool: aux465_BOOL:: var_is_introduced ;
var 4..38: aux466:: var_is_introduced ;
var bool: aux467_BOOL:: var_is_introduced ;
var bool: aux468_BOOL:: var_is_introduced ;
var bool: aux469_BOOL:: var_is_introduced ;
var {0,1}: aux469_INTEGER :: var_is_introduced ;
var bool: aux470_BOOL:: var_is_introduced ;
var bool: aux471_BOOL:: var_is_introduced ;
var 2..36: aux472:: var_is_introduced ;
var bool: aux473_BOOL:: var_is_introduced ;
var bool: aux474_BOOL:: var_is_introduced ;
var bool: aux475_BOOL:: var_is_introduced ;
var {0,1}: aux475_INTEGER :: var_is_introduced ;
var bool: aux476_BOOL:: var_is_introduced ;
var bool: aux477_BOOL:: var_is_introduced ;
var 2..36: aux478:: var_is_introduced ;
var bool: aux479_BOOL:: var_is_introduced ;
var bool: aux480_BOOL:: var_is_introduced ;
var bool: aux481_BOOL:: var_is_introduced ;
var {0,1}: aux481_INTEGER :: var_is_introduced ;
var bool: aux482_BOOL:: var_is_introduced ;
var bool: aux483_BOOL:: var_is_introduced ;
var 1..35: aux484:: var_is_introduced ;
var bool: aux485_BOOL:: var_is_introduced ;
var bool: aux486_BOOL:: var_is_introduced ;
var bool: aux487_BOOL:: var_is_introduced ;
var {0,1}: aux487_INTEGER :: var_is_introduced ;
var bool: aux488_BOOL:: var_is_introduced ;
var bool: aux489_BOOL:: var_is_introduced ;
var 2..36: aux490:: var_is_introduced ;
var bool: aux491_BOOL:: var_is_introduced ;
var bool: aux492_BOOL:: var_is_introduced ;
var bool: aux493_BOOL:: var_is_introduced ;
var {0,1}: aux493_INTEGER :: var_is_introduced ;
var bool: aux494_BOOL:: var_is_introduced ;
var bool: aux495_BOOL:: var_is_introduced ;
var 3..37: aux496:: var_is_introduced ;
var bool: aux497_BOOL:: var_is_introduced ;
var bool: aux498_BOOL:: var_is_introduced ;
var bool: aux499_BOOL:: var_is_introduced ;
var {0,1}: aux499_INTEGER :: var_is_introduced ;
var bool: aux500_BOOL:: var_is_introduced ;
var bool: aux501_BOOL:: var_is_introduced ;
var 3..37: aux502:: var_is_introduced ;
var bool: aux503_BOOL:: var_is_introduced ;
var bool: aux504_BOOL:: var_is_introduced ;
var bool: aux505_BOOL:: var_is_introduced ;
var {0,1}: aux505_INTEGER :: var_is_introduced ;
var bool: aux506_BOOL:: var_is_introduced ;
var bool: aux507_BOOL:: var_is_introduced ;
var 3..37: aux508:: var_is_introduced ;
var bool: aux509_BOOL:: var_is_introduced ;
var bool: aux510_BOOL:: var_is_introduced ;
var bool: aux511_BOOL:: var_is_introduced ;
var {0,1}: aux511_INTEGER :: var_is_introduced ;
var bool: aux512_BOOL:: var_is_introduced ;
var bool: aux513_BOOL:: var_is_introduced ;
var 2..36: aux514:: var_is_introduced ;
var bool: aux515_BOOL:: var_is_introduced ;
var bool: aux516_BOOL:: var_is_introduced ;
var {0,1}: aux516_INTEGER :: var_is_introduced ;
var bool: aux517_BOOL:: var_is_introduced ;
var bool: aux518_BOOL:: var_is_introduced ;
var 2..36: aux519:: var_is_introduced ;
var bool: aux520_BOOL:: var_is_introduced ;
var bool: aux521_BOOL:: var_is_introduced ;
var bool: aux522_BOOL:: var_is_introduced ;
var {0,1}: aux522_INTEGER :: var_is_introduced ;
var bool: aux523_BOOL:: var_is_introduced ;
var bool: aux524_BOOL:: var_is_introduced ;
var 6..40: aux525:: var_is_introduced ;
var bool: aux526_BOOL:: var_is_introduced ;
var bool: aux527_BOOL:: var_is_introduced ;
var bool: aux528_BOOL:: var_is_introduced ;
var {0,1}: aux528_INTEGER :: var_is_introduced ;
var bool: aux529_BOOL:: var_is_introduced ;
var bool: aux530_BOOL:: var_is_introduced ;
var 1..35: aux531:: var_is_introduced ;
var bool: aux532_BOOL:: var_is_introduced ;
var bool: aux533_BOOL:: var_is_introduced ;
var bool: aux534_BOOL:: var_is_introduced ;
var {0,1}: aux534_INTEGER :: var_is_introduced ;
var bool: aux535_BOOL:: var_is_introduced ;
var bool: aux536_BOOL:: var_is_introduced ;
var 2..36: aux537:: var_is_introduced ;
var bool: aux538_BOOL:: var_is_introduced ;
var bool: aux539_BOOL:: var_is_introduced ;
var bool: aux540_BOOL:: var_is_introduced ;
var {0,1}: aux540_INTEGER :: var_is_introduced ;
var bool: aux541_BOOL:: var_is_introduced ;
var bool: aux542_BOOL:: var_is_introduced ;
var 1..35: aux543:: var_is_introduced ;
var bool: aux544_BOOL:: var_is_introduced ;
var bool: aux545_BOOL:: var_is_introduced ;
var bool: aux546_BOOL:: var_is_introduced ;
var {0,1}: aux546_INTEGER :: var_is_introduced ;
var bool: aux547_BOOL:: var_is_introduced ;
var bool: aux548_BOOL:: var_is_introduced ;
var 4..38: aux549:: var_is_introduced ;
var bool: aux550_BOOL:: var_is_introduced ;
var bool: aux551_BOOL:: var_is_introduced ;
var bool: aux552_BOOL:: var_is_introduced ;
var {0,1}: aux552_INTEGER :: var_is_introduced ;
var bool: aux553_BOOL:: var_is_introduced ;
var bool: aux554_BOOL:: var_is_introduced ;
var 2..36: aux555:: var_is_introduced ;
var bool: aux556_BOOL:: var_is_introduced ;
var bool: aux557_BOOL:: var_is_introduced ;
var bool: aux558_BOOL:: var_is_introduced ;
var {0,1}: aux558_INTEGER :: var_is_introduced ;
var bool: aux559_BOOL:: var_is_introduced ;
var bool: aux560_BOOL:: var_is_introduced ;
var 2..36: aux561:: var_is_introduced ;
var bool: aux562_BOOL:: var_is_introduced ;
var bool: aux563_BOOL:: var_is_introduced ;
var bool: aux564_BOOL:: var_is_introduced ;
var {0,1}: aux564_INTEGER :: var_is_introduced ;
var bool: aux565_BOOL:: var_is_introduced ;
var bool: aux566_BOOL:: var_is_introduced ;
var 1..35: aux567:: var_is_introduced ;
var bool: aux568_BOOL:: var_is_introduced ;
var bool: aux569_BOOL:: var_is_introduced ;
var bool: aux570_BOOL:: var_is_introduced ;
var {0,1}: aux570_INTEGER :: var_is_introduced ;
var bool: aux571_BOOL:: var_is_introduced ;
var bool: aux572_BOOL:: var_is_introduced ;
var 2..36: aux573:: var_is_introduced ;
var bool: aux574_BOOL:: var_is_introduced ;
var bool: aux575_BOOL:: var_is_introduced ;
var bool: aux576_BOOL:: var_is_introduced ;
var {0,1}: aux576_INTEGER :: var_is_introduced ;
var bool: aux577_BOOL:: var_is_introduced ;
var bool: aux578_BOOL:: var_is_introduced ;
var 3..37: aux579:: var_is_introduced ;
var bool: aux580_BOOL:: var_is_introduced ;
var bool: aux581_BOOL:: var_is_introduced ;
var bool: aux582_BOOL:: var_is_introduced ;
var {0,1}: aux582_INTEGER :: var_is_introduced ;
var bool: aux583_BOOL:: var_is_introduced ;
var bool: aux584_BOOL:: var_is_introduced ;
var 3..37: aux585:: var_is_introduced ;
var bool: aux586_BOOL:: var_is_introduced ;
var bool: aux587_BOOL:: var_is_introduced ;
var bool: aux588_BOOL:: var_is_introduced ;
var {0,1}: aux588_INTEGER :: var_is_introduced ;
var bool: aux589_BOOL:: var_is_introduced ;
var bool: aux590_BOOL:: var_is_introduced ;
var 3..37: aux591:: var_is_introduced ;
var bool: aux592_BOOL:: var_is_introduced ;
var bool: aux593_BOOL:: var_is_introduced ;
var bool: aux594_BOOL:: var_is_introduced ;
var {0,1}: aux594_INTEGER :: var_is_introduced ;
var bool: aux595_BOOL:: var_is_introduced ;
var bool: aux596_BOOL:: var_is_introduced ;
var 1..35: aux597:: var_is_introduced ;
var bool: aux598_BOOL:: var_is_introduced ;
var bool: aux599_BOOL:: var_is_introduced ;
var {0,1}: aux599_INTEGER :: var_is_introduced ;
var bool: aux600_BOOL:: var_is_introduced ;
var bool: aux601_BOOL:: var_is_introduced ;
var 2..36: aux602:: var_is_introduced ;
var bool: aux603_BOOL:: var_is_introduced ;
var bool: aux604_BOOL:: var_is_introduced ;
var bool: aux605_BOOL:: var_is_introduced ;
var {0,1}: aux605_INTEGER :: var_is_introduced ;
var bool: aux606_BOOL:: var_is_introduced ;
var bool: aux607_BOOL:: var_is_introduced ;
var 6..40: aux608:: var_is_introduced ;
var bool: aux609_BOOL:: var_is_introduced ;
var bool: aux610_BOOL:: var_is_introduced ;
var bool: aux611_BOOL:: var_is_introduced ;
var {0,1}: aux611_INTEGER :: var_is_introduced ;
var bool: aux612_BOOL:: var_is_introduced ;
var bool: aux613_BOOL:: var_is_introduced ;
var 2..36: aux614:: var_is_introduced ;
var bool: aux615_BOOL:: var_is_introduced ;
var bool: aux616_BOOL:: var_is_introduced ;
var bool: aux617_BOOL:: var_is_introduced ;
var {0,1}: aux617_INTEGER :: var_is_introduced ;
var bool: aux618_BOOL:: var_is_introduced ;
var bool: aux619_BOOL:: var_is_introduced ;
var 1..35: aux620:: var_is_introduced ;
var bool: aux621_BOOL:: var_is_introduced ;
var bool: aux622_BOOL:: var_is_introduced ;
var bool: aux623_BOOL:: var_is_introduced ;
var {0,1}: aux623_INTEGER :: var_is_introduced ;
var bool: aux624_BOOL:: var_is_introduced ;
var bool: aux625_BOOL:: var_is_introduced ;
var 2..36: aux626:: var_is_introduced ;
var bool: aux627_BOOL:: var_is_introduced ;
var bool: aux628_BOOL:: var_is_introduced ;
var bool: aux629_BOOL:: var_is_introduced ;
var {0,1}: aux629_INTEGER :: var_is_introduced ;
var bool: aux630_BOOL:: var_is_introduced ;
var bool: aux631_BOOL:: var_is_introduced ;
var 4..38: aux632:: var_is_introduced ;
var bool: aux633_BOOL:: var_is_introduced ;
var bool: aux634_BOOL:: var_is_introduced ;
var bool: aux635_BOOL:: var_is_introduced ;
var {0,1}: aux635_INTEGER :: var_is_introduced ;
var bool: aux636_BOOL:: var_is_introduced ;
var bool: aux637_BOOL:: var_is_introduced ;
var 2..36: aux638:: var_is_introduced ;
var bool: aux639_BOOL:: var_is_introduced ;
var bool: aux640_BOOL:: var_is_introduced ;
var bool: aux641_BOOL:: var_is_introduced ;
var {0,1}: aux641_INTEGER :: var_is_introduced ;
var bool: aux642_BOOL:: var_is_introduced ;
var bool: aux643_BOOL:: var_is_introduced ;
var 2..36: aux644:: var_is_introduced ;
var bool: aux645_BOOL:: var_is_introduced ;
var bool: aux646_BOOL:: var_is_introduced ;
var bool: aux647_BOOL:: var_is_introduced ;
var {0,1}: aux647_INTEGER :: var_is_introduced ;
var bool: aux648_BOOL:: var_is_introduced ;
var bool: aux649_BOOL:: var_is_introduced ;
var 1..35: aux650:: var_is_introduced ;
var bool: aux651_BOOL:: var_is_introduced ;
var bool: aux652_BOOL:: var_is_introduced ;
var bool: aux653_BOOL:: var_is_introduced ;
var {0,1}: aux653_INTEGER :: var_is_introduced ;
var bool: aux654_BOOL:: var_is_introduced ;
var bool: aux655_BOOL:: var_is_introduced ;
var 2..36: aux656:: var_is_introduced ;
var bool: aux657_BOOL:: var_is_introduced ;
var bool: aux658_BOOL:: var_is_introduced ;
var bool: aux659_BOOL:: var_is_introduced ;
var {0,1}: aux659_INTEGER :: var_is_introduced ;
var bool: aux660_BOOL:: var_is_introduced ;
var bool: aux661_BOOL:: var_is_introduced ;
var 3..37: aux662:: var_is_introduced ;
var bool: aux663_BOOL:: var_is_introduced ;
var bool: aux664_BOOL:: var_is_introduced ;
var bool: aux665_BOOL:: var_is_introduced ;
var {0,1}: aux665_INTEGER :: var_is_introduced ;
var bool: aux666_BOOL:: var_is_introduced ;
var bool: aux667_BOOL:: var_is_introduced ;
var 3..37: aux668:: var_is_introduced ;
var bool: aux669_BOOL:: var_is_introduced ;
var bool: aux670_BOOL:: var_is_introduced ;
var bool: aux671_BOOL:: var_is_introduced ;
var {0,1}: aux671_INTEGER :: var_is_introduced ;
var bool: aux672_BOOL:: var_is_introduced ;
var bool: aux673_BOOL:: var_is_introduced ;
var 3..37: aux674:: var_is_introduced ;
var bool: aux675_BOOL:: var_is_introduced ;
var bool: aux676_BOOL:: var_is_introduced ;
var bool: aux677_BOOL:: var_is_introduced ;
var {0,1}: aux677_INTEGER :: var_is_introduced ;
var bool: aux678_BOOL:: var_is_introduced ;
var bool: aux679_BOOL:: var_is_introduced ;
var 2..36: aux680:: var_is_introduced ;
var bool: aux681_BOOL:: var_is_introduced ;
var bool: aux682_BOOL:: var_is_introduced ;
var {0,1}: aux682_INTEGER :: var_is_introduced ;
var bool: aux683_BOOL:: var_is_introduced ;
var bool: aux684_BOOL:: var_is_introduced ;
var 2..36: aux685:: var_is_introduced ;
var bool: aux686_BOOL:: var_is_introduced ;
var bool: aux687_BOOL:: var_is_introduced ;
var bool: aux688_BOOL:: var_is_introduced ;
var {0,1}: aux688_INTEGER :: var_is_introduced ;
var bool: aux689_BOOL:: var_is_introduced ;
var bool: aux690_BOOL:: var_is_introduced ;
var 6..40: aux691:: var_is_introduced ;
var bool: aux692_BOOL:: var_is_introduced ;
var bool: aux693_BOOL:: var_is_introduced ;
var bool: aux694_BOOL:: var_is_introduced ;
var {0,1}: aux694_INTEGER :: var_is_introduced ;
var bool: aux695_BOOL:: var_is_introduced ;
var bool: aux696_BOOL:: var_is_introduced ;
var 1..35: aux697:: var_is_introduced ;
var bool: aux698_BOOL:: var_is_introduced ;
var bool: aux699_BOOL:: var_is_introduced ;
var bool: aux700_BOOL:: var_is_introduced ;
var {0,1}: aux700_INTEGER :: var_is_introduced ;
var bool: aux701_BOOL:: var_is_introduced ;
var bool: aux702_BOOL:: var_is_introduced ;
var 2..36: aux703:: var_is_introduced ;
var bool: aux704_BOOL:: var_is_introduced ;
var bool: aux705_BOOL:: var_is_introduced ;
var bool: aux706_BOOL:: var_is_introduced ;
var {0,1}: aux706_INTEGER :: var_is_introduced ;
var bool: aux707_BOOL:: var_is_introduced ;
var bool: aux708_BOOL:: var_is_introduced ;
var 1..35: aux709:: var_is_introduced ;
var bool: aux710_BOOL:: var_is_introduced ;
var bool: aux711_BOOL:: var_is_introduced ;
var bool: aux712_BOOL:: var_is_introduced ;
var {0,1}: aux712_INTEGER :: var_is_introduced ;
var bool: aux713_BOOL:: var_is_introduced ;
var bool: aux714_BOOL:: var_is_introduced ;
var 4..38: aux715:: var_is_introduced ;
var bool: aux716_BOOL:: var_is_introduced ;
var bool: aux717_BOOL:: var_is_introduced ;
var bool: aux718_BOOL:: var_is_introduced ;
var {0,1}: aux718_INTEGER :: var_is_introduced ;
var bool: aux719_BOOL:: var_is_introduced ;
var bool: aux720_BOOL:: var_is_introduced ;
var 2..36: aux721:: var_is_introduced ;
var bool: aux722_BOOL:: var_is_introduced ;
var bool: aux723_BOOL:: var_is_introduced ;
var bool: aux724_BOOL:: var_is_introduced ;
var {0,1}: aux724_INTEGER :: var_is_introduced ;
var bool: aux725_BOOL:: var_is_introduced ;
var bool: aux726_BOOL:: var_is_introduced ;
var 2..36: aux727:: var_is_introduced ;
var bool: aux728_BOOL:: var_is_introduced ;
var bool: aux729_BOOL:: var_is_introduced ;
var bool: aux730_BOOL:: var_is_introduced ;
var {0,1}: aux730_INTEGER :: var_is_introduced ;
var bool: aux731_BOOL:: var_is_introduced ;
var bool: aux732_BOOL:: var_is_introduced ;
var 2..36: aux733:: var_is_introduced ;
var bool: aux734_BOOL:: var_is_introduced ;
var bool: aux735_BOOL:: var_is_introduced ;
var bool: aux736_BOOL:: var_is_introduced ;
var {0,1}: aux736_INTEGER :: var_is_introduced ;
var bool: aux737_BOOL:: var_is_introduced ;
var bool: aux738_BOOL:: var_is_introduced ;
var 1..35: aux739:: var_is_introduced ;
var bool: aux740_BOOL:: var_is_introduced ;
var bool: aux741_BOOL:: var_is_introduced ;
var bool: aux742_BOOL:: var_is_introduced ;
var {0,1}: aux742_INTEGER :: var_is_introduced ;
var bool: aux743_BOOL:: var_is_introduced ;
var bool: aux744_BOOL:: var_is_introduced ;
var 3..37: aux745:: var_is_introduced ;
var bool: aux746_BOOL:: var_is_introduced ;
var bool: aux747_BOOL:: var_is_introduced ;
var bool: aux748_BOOL:: var_is_introduced ;
var {0,1}: aux748_INTEGER :: var_is_introduced ;
var bool: aux749_BOOL:: var_is_introduced ;
var bool: aux750_BOOL:: var_is_introduced ;
var 3..37: aux751:: var_is_introduced ;
var bool: aux752_BOOL:: var_is_introduced ;
var bool: aux753_BOOL:: var_is_introduced ;
var bool: aux754_BOOL:: var_is_introduced ;
var {0,1}: aux754_INTEGER :: var_is_introduced ;
var bool: aux755_BOOL:: var_is_introduced ;
var bool: aux756_BOOL:: var_is_introduced ;
var 3..37: aux757:: var_is_introduced ;
var bool: aux758_BOOL:: var_is_introduced ;
var bool: aux759_BOOL:: var_is_introduced ;
var bool: aux760_BOOL:: var_is_introduced ;
var {0,1}: aux760_INTEGER :: var_is_introduced ;
var bool: aux761_BOOL:: var_is_introduced ;
var bool: aux762_BOOL:: var_is_introduced ;
var 4..38: aux763:: var_is_introduced ;
var bool: aux764_BOOL:: var_is_introduced ;
var bool: aux765_BOOL:: var_is_introduced ;
var {0,1}: aux765_INTEGER :: var_is_introduced ;
var bool: aux766_BOOL:: var_is_introduced ;
var bool: aux767_BOOL:: var_is_introduced ;
var 2..36: aux768:: var_is_introduced ;
var bool: aux769_BOOL:: var_is_introduced ;
var bool: aux770_BOOL:: var_is_introduced ;
var bool: aux771_BOOL:: var_is_introduced ;
var {0,1}: aux771_INTEGER :: var_is_introduced ;
var bool: aux772_BOOL:: var_is_introduced ;
var bool: aux773_BOOL:: var_is_introduced ;
var 6..40: aux774:: var_is_introduced ;
var bool: aux775_BOOL:: var_is_introduced ;
var bool: aux776_BOOL:: var_is_introduced ;
var bool: aux777_BOOL:: var_is_introduced ;
var {0,1}: aux777_INTEGER :: var_is_introduced ;
var bool: aux778_BOOL:: var_is_introduced ;
var bool: aux779_BOOL:: var_is_introduced ;
var 1..35: aux780:: var_is_introduced ;
var bool: aux781_BOOL:: var_is_introduced ;
var bool: aux782_BOOL:: var_is_introduced ;
var bool: aux783_BOOL:: var_is_introduced ;
var {0,1}: aux783_INTEGER :: var_is_introduced ;
var bool: aux784_BOOL:: var_is_introduced ;
var bool: aux785_BOOL:: var_is_introduced ;
var 2..36: aux786:: var_is_introduced ;
var bool: aux787_BOOL:: var_is_introduced ;
var bool: aux788_BOOL:: var_is_introduced ;
var bool: aux789_BOOL:: var_is_introduced ;
var {0,1}: aux789_INTEGER :: var_is_introduced ;
var bool: aux790_BOOL:: var_is_introduced ;
var bool: aux791_BOOL:: var_is_introduced ;
var 1..35: aux792:: var_is_introduced ;
var bool: aux793_BOOL:: var_is_introduced ;
var bool: aux794_BOOL:: var_is_introduced ;
var bool: aux795_BOOL:: var_is_introduced ;
var {0,1}: aux795_INTEGER :: var_is_introduced ;
var bool: aux796_BOOL:: var_is_introduced ;
var bool: aux797_BOOL:: var_is_introduced ;
var 2..36: aux798:: var_is_introduced ;
var bool: aux799_BOOL:: var_is_introduced ;
var bool: aux800_BOOL:: var_is_introduced ;
var bool: aux801_BOOL:: var_is_introduced ;
var {0,1}: aux801_INTEGER :: var_is_introduced ;
var bool: aux802_BOOL:: var_is_introduced ;
var bool: aux803_BOOL:: var_is_introduced ;
var 2..36: aux804:: var_is_introduced ;
var bool: aux805_BOOL:: var_is_introduced ;
var bool: aux806_BOOL:: var_is_introduced ;
var bool: aux807_BOOL:: var_is_introduced ;
var {0,1}: aux807_INTEGER :: var_is_introduced ;
var bool: aux808_BOOL:: var_is_introduced ;
var bool: aux809_BOOL:: var_is_introduced ;
var 2..36: aux810:: var_is_introduced ;
var bool: aux811_BOOL:: var_is_introduced ;
var bool: aux812_BOOL:: var_is_introduced ;
var bool: aux813_BOOL:: var_is_introduced ;
var {0,1}: aux813_INTEGER :: var_is_introduced ;
var bool: aux814_BOOL:: var_is_introduced ;
var bool: aux815_BOOL:: var_is_introduced ;
var 1..35: aux816:: var_is_introduced ;
var bool: aux817_BOOL:: var_is_introduced ;
var bool: aux818_BOOL:: var_is_introduced ;
var bool: aux819_BOOL:: var_is_introduced ;
var {0,1}: aux819_INTEGER :: var_is_introduced ;
var bool: aux820_BOOL:: var_is_introduced ;
var bool: aux821_BOOL:: var_is_introduced ;
var 2..36: aux822:: var_is_introduced ;
var bool: aux823_BOOL:: var_is_introduced ;
var bool: aux824_BOOL:: var_is_introduced ;
var bool: aux825_BOOL:: var_is_introduced ;
var {0,1}: aux825_INTEGER :: var_is_introduced ;
var bool: aux826_BOOL:: var_is_introduced ;
var bool: aux827_BOOL:: var_is_introduced ;
var 3..37: aux828:: var_is_introduced ;
var bool: aux829_BOOL:: var_is_introduced ;
var bool: aux830_BOOL:: var_is_introduced ;
var bool: aux831_BOOL:: var_is_introduced ;
var {0,1}: aux831_INTEGER :: var_is_introduced ;
var bool: aux832_BOOL:: var_is_introduced ;
var bool: aux833_BOOL:: var_is_introduced ;
var 3..37: aux834:: var_is_introduced ;
var bool: aux835_BOOL:: var_is_introduced ;
var bool: aux836_BOOL:: var_is_introduced ;
var bool: aux837_BOOL:: var_is_introduced ;
var {0,1}: aux837_INTEGER :: var_is_introduced ;
var bool: aux838_BOOL:: var_is_introduced ;
var bool: aux839_BOOL:: var_is_introduced ;
var 3..37: aux840:: var_is_introduced ;
var bool: aux841_BOOL:: var_is_introduced ;
var bool: aux842_BOOL:: var_is_introduced ;
var bool: aux843_BOOL:: var_is_introduced ;
var {0,1}: aux843_INTEGER :: var_is_introduced ;
var bool: aux844_BOOL:: var_is_introduced ;
var bool: aux845_BOOL:: var_is_introduced ;
var 3..37: aux846:: var_is_introduced ;
var bool: aux847_BOOL:: var_is_introduced ;
var bool: aux848_BOOL:: var_is_introduced ;
var {0,1}: aux848_INTEGER :: var_is_introduced ;
var bool: aux849_BOOL:: var_is_introduced ;
var bool: aux850_BOOL:: var_is_introduced ;
var 2..36: aux851:: var_is_introduced ;
var bool: aux852_BOOL:: var_is_introduced ;
var bool: aux853_BOOL:: var_is_introduced ;
var bool: aux854_BOOL:: var_is_introduced ;
var {0,1}: aux854_INTEGER :: var_is_introduced ;
var bool: aux855_BOOL:: var_is_introduced ;
var bool: aux856_BOOL:: var_is_introduced ;
var 6..40: aux857:: var_is_introduced ;
var bool: aux858_BOOL:: var_is_introduced ;
var bool: aux859_BOOL:: var_is_introduced ;
var bool: aux860_BOOL:: var_is_introduced ;
var {0,1}: aux860_INTEGER :: var_is_introduced ;
var bool: aux861_BOOL:: var_is_introduced ;
var bool: aux862_BOOL:: var_is_introduced ;
var 1..35: aux863:: var_is_introduced ;
var bool: aux864_BOOL:: var_is_introduced ;
var bool: aux865_BOOL:: var_is_introduced ;
var bool: aux866_BOOL:: var_is_introduced ;
var {0,1}: aux866_INTEGER :: var_is_introduced ;
var bool: aux867_BOOL:: var_is_introduced ;
var bool: aux868_BOOL:: var_is_introduced ;
var 2..36: aux869:: var_is_introduced ;
var bool: aux870_BOOL:: var_is_introduced ;
var bool: aux871_BOOL:: var_is_introduced ;
var bool: aux872_BOOL:: var_is_introduced ;
var {0,1}: aux872_INTEGER :: var_is_introduced ;
var bool: aux873_BOOL:: var_is_introduced ;
var bool: aux874_BOOL:: var_is_introduced ;
var 1..35: aux875:: var_is_introduced ;
var bool: aux876_BOOL:: var_is_introduced ;
var bool: aux877_BOOL:: var_is_introduced ;
var bool: aux878_BOOL:: var_is_introduced ;
var {0,1}: aux878_INTEGER :: var_is_introduced ;
var bool: aux879_BOOL:: var_is_introduced ;
var bool: aux880_BOOL:: var_is_introduced ;
var 4..38: aux881:: var_is_introduced ;
var bool: aux882_BOOL:: var_is_introduced ;
var bool: aux883_BOOL:: var_is_introduced ;
var bool: aux884_BOOL:: var_is_introduced ;
var {0,1}: aux884_INTEGER :: var_is_introduced ;
var bool: aux885_BOOL:: var_is_introduced ;
var bool: aux886_BOOL:: var_is_introduced ;
var 2..36: aux887:: var_is_introduced ;
var bool: aux888_BOOL:: var_is_introduced ;
var bool: aux889_BOOL:: var_is_introduced ;
var bool: aux890_BOOL:: var_is_introduced ;
var {0,1}: aux890_INTEGER :: var_is_introduced ;
var bool: aux891_BOOL:: var_is_introduced ;
var bool: aux892_BOOL:: var_is_introduced ;
var 2..36: aux893:: var_is_introduced ;
var bool: aux894_BOOL:: var_is_introduced ;
var bool: aux895_BOOL:: var_is_introduced ;
var bool: aux896_BOOL:: var_is_introduced ;
var {0,1}: aux896_INTEGER :: var_is_introduced ;
var bool: aux897_BOOL:: var_is_introduced ;
var bool: aux898_BOOL:: var_is_introduced ;
var 2..36: aux899:: var_is_introduced ;
var bool: aux900_BOOL:: var_is_introduced ;
var bool: aux901_BOOL:: var_is_introduced ;
var bool: aux902_BOOL:: var_is_introduced ;
var {0,1}: aux902_INTEGER :: var_is_introduced ;
var bool: aux903_BOOL:: var_is_introduced ;
var bool: aux904_BOOL:: var_is_introduced ;
var 1..35: aux905:: var_is_introduced ;
var bool: aux906_BOOL:: var_is_introduced ;
var bool: aux907_BOOL:: var_is_introduced ;
var bool: aux908_BOOL:: var_is_introduced ;
var {0,1}: aux908_INTEGER :: var_is_introduced ;
var bool: aux909_BOOL:: var_is_introduced ;
var bool: aux910_BOOL:: var_is_introduced ;
var 2..36: aux911:: var_is_introduced ;
var bool: aux912_BOOL:: var_is_introduced ;
var bool: aux913_BOOL:: var_is_introduced ;
var bool: aux914_BOOL:: var_is_introduced ;
var {0,1}: aux914_INTEGER :: var_is_introduced ;
var bool: aux915_BOOL:: var_is_introduced ;
var bool: aux916_BOOL:: var_is_introduced ;
var 3..37: aux917:: var_is_introduced ;
var bool: aux918_BOOL:: var_is_introduced ;
var bool: aux919_BOOL:: var_is_introduced ;
var bool: aux920_BOOL:: var_is_introduced ;
var {0,1}: aux920_INTEGER :: var_is_introduced ;
var bool: aux921_BOOL:: var_is_introduced ;
var bool: aux922_BOOL:: var_is_introduced ;
var 3..37: aux923:: var_is_introduced ;
var bool: aux924_BOOL:: var_is_introduced ;
var bool: aux925_BOOL:: var_is_introduced ;
var bool: aux926_BOOL:: var_is_introduced ;
var {0,1}: aux926_INTEGER :: var_is_introduced ;
var bool: aux927_BOOL:: var_is_introduced ;
var bool: aux928_BOOL:: var_is_introduced ;
var 2..36: aux929:: var_is_introduced ;
var bool: aux930_BOOL:: var_is_introduced ;
var bool: aux931_BOOL:: var_is_introduced ;
var {0,1}: aux931_INTEGER :: var_is_introduced ;
var bool: aux932_BOOL:: var_is_introduced ;
var bool: aux933_BOOL:: var_is_introduced ;
var 2..36: aux934:: var_is_introduced ;
var bool: aux935_BOOL:: var_is_introduced ;
var bool: aux936_BOOL:: var_is_introduced ;
var bool: aux937_BOOL:: var_is_introduced ;
var {0,1}: aux937_INTEGER :: var_is_introduced ;
var bool: aux938_BOOL:: var_is_introduced ;
var bool: aux939_BOOL:: var_is_introduced ;
var 6..40: aux940:: var_is_introduced ;
var bool: aux941_BOOL:: var_is_introduced ;
var bool: aux942_BOOL:: var_is_introduced ;
var bool: aux943_BOOL:: var_is_introduced ;
var {0,1}: aux943_INTEGER :: var_is_introduced ;
var bool: aux944_BOOL:: var_is_introduced ;
var bool: aux945_BOOL:: var_is_introduced ;
var 1..35: aux946:: var_is_introduced ;
var bool: aux947_BOOL:: var_is_introduced ;
var bool: aux948_BOOL:: var_is_introduced ;
var bool: aux949_BOOL:: var_is_introduced ;
var {0,1}: aux949_INTEGER :: var_is_introduced ;
var bool: aux950_BOOL:: var_is_introduced ;
var bool: aux951_BOOL:: var_is_introduced ;
var 1..35: aux952:: var_is_introduced ;
var bool: aux953_BOOL:: var_is_introduced ;
var bool: aux954_BOOL:: var_is_introduced ;
var bool: aux955_BOOL:: var_is_introduced ;
var {0,1}: aux955_INTEGER :: var_is_introduced ;
var bool: aux956_BOOL:: var_is_introduced ;
var bool: aux957_BOOL:: var_is_introduced ;
var 2..36: aux958:: var_is_introduced ;
var bool: aux959_BOOL:: var_is_introduced ;
var bool: aux960_BOOL:: var_is_introduced ;
var bool: aux961_BOOL:: var_is_introduced ;
var {0,1}: aux961_INTEGER :: var_is_introduced ;
var bool: aux962_BOOL:: var_is_introduced ;
var bool: aux963_BOOL:: var_is_introduced ;
var 4..38: aux964:: var_is_introduced ;
var bool: aux965_BOOL:: var_is_introduced ;
var bool: aux966_BOOL:: var_is_introduced ;
var bool: aux967_BOOL:: var_is_introduced ;
var {0,1}: aux967_INTEGER :: var_is_introduced ;
var bool: aux968_BOOL:: var_is_introduced ;
var bool: aux969_BOOL:: var_is_introduced ;
var 2..36: aux970:: var_is_introduced ;
var bool: aux971_BOOL:: var_is_introduced ;
var bool: aux972_BOOL:: var_is_introduced ;
var bool: aux973_BOOL:: var_is_introduced ;
var {0,1}: aux973_INTEGER :: var_is_introduced ;
var bool: aux974_BOOL:: var_is_introduced ;
var bool: aux975_BOOL:: var_is_introduced ;
var 2..36: aux976:: var_is_introduced ;
var bool: aux977_BOOL:: var_is_introduced ;
var bool: aux978_BOOL:: var_is_introduced ;
var bool: aux979_BOOL:: var_is_introduced ;
var {0,1}: aux979_INTEGER :: var_is_introduced ;
var bool: aux980_BOOL:: var_is_introduced ;
var bool: aux981_BOOL:: var_is_introduced ;
var 1..35: aux982:: var_is_introduced ;
var bool: aux983_BOOL:: var_is_introduced ;
var bool: aux984_BOOL:: var_is_introduced ;
var bool: aux985_BOOL:: var_is_introduced ;
var {0,1}: aux985_INTEGER :: var_is_introduced ;
var bool: aux986_BOOL:: var_is_introduced ;
var bool: aux987_BOOL:: var_is_introduced ;
var 2..36: aux988:: var_is_introduced ;
var bool: aux989_BOOL:: var_is_introduced ;
var bool: aux990_BOOL:: var_is_introduced ;
var bool: aux991_BOOL:: var_is_introduced ;
var {0,1}: aux991_INTEGER :: var_is_introduced ;
var bool: aux992_BOOL:: var_is_introduced ;
var bool: aux993_BOOL:: var_is_introduced ;
var 3..37: aux994:: var_is_introduced ;
var bool: aux995_BOOL:: var_is_introduced ;
var bool: aux996_BOOL:: var_is_introduced ;
var bool: aux997_BOOL:: var_is_introduced ;
var {0,1}: aux997_INTEGER :: var_is_introduced ;
var bool: aux998_BOOL:: var_is_introduced ;
var bool: aux999_BOOL:: var_is_introduced ;
var 3..37: aux1000:: var_is_introduced ;
var bool: aux1001_BOOL:: var_is_introduced ;
var bool: aux1002_BOOL:: var_is_introduced ;
var bool: aux1003_BOOL:: var_is_introduced ;
var {0,1}: aux1003_INTEGER :: var_is_introduced ;
var bool: aux1004_BOOL:: var_is_introduced ;
var bool: aux1005_BOOL:: var_is_introduced ;
var 3..37: aux1006:: var_is_introduced ;
var bool: aux1007_BOOL:: var_is_introduced ;
var bool: aux1008_BOOL:: var_is_introduced ;
var bool: aux1009_BOOL:: var_is_introduced ;
var {0,1}: aux1009_INTEGER :: var_is_introduced ;
var bool: aux1010_BOOL:: var_is_introduced ;
var bool: aux1011_BOOL:: var_is_introduced ;
var 3..37: aux1012:: var_is_introduced ;
var bool: aux1013_BOOL:: var_is_introduced ;
var bool: aux1014_BOOL:: var_is_introduced ;
var {0,1}: aux1014_INTEGER :: var_is_introduced ;
var bool: aux1015_BOOL:: var_is_introduced ;
var bool: aux1016_BOOL:: var_is_introduced ;
var 2..36: aux1017:: var_is_introduced ;
var bool: aux1018_BOOL:: var_is_introduced ;
var bool: aux1019_BOOL:: var_is_introduced ;
var bool: aux1020_BOOL:: var_is_introduced ;
var {0,1}: aux1020_INTEGER :: var_is_introduced ;
var bool: aux1021_BOOL:: var_is_introduced ;
var bool: aux1022_BOOL:: var_is_introduced ;
var 6..40: aux1023:: var_is_introduced ;
var bool: aux1024_BOOL:: var_is_introduced ;
var bool: aux1025_BOOL:: var_is_introduced ;
var bool: aux1026_BOOL:: var_is_introduced ;
var {0,1}: aux1026_INTEGER :: var_is_introduced ;
var bool: aux1027_BOOL:: var_is_introduced ;
var bool: aux1028_BOOL:: var_is_introduced ;
var 1..35: aux1029:: var_is_introduced ;
var bool: aux1030_BOOL:: var_is_introduced ;
var bool: aux1031_BOOL:: var_is_introduced ;
var bool: aux1032_BOOL:: var_is_introduced ;
var {0,1}: aux1032_INTEGER :: var_is_introduced ;
var bool: aux1033_BOOL:: var_is_introduced ;
var bool: aux1034_BOOL:: var_is_introduced ;
var 2..36: aux1035:: var_is_introduced ;
var bool: aux1036_BOOL:: var_is_introduced ;
var bool: aux1037_BOOL:: var_is_introduced ;
var bool: aux1038_BOOL:: var_is_introduced ;
var {0,1}: aux1038_INTEGER :: var_is_introduced ;
var bool: aux1039_BOOL:: var_is_introduced ;
var bool: aux1040_BOOL:: var_is_introduced ;
var 1..35: aux1041:: var_is_introduced ;
var bool: aux1042_BOOL:: var_is_introduced ;
var bool: aux1043_BOOL:: var_is_introduced ;
var bool: aux1044_BOOL:: var_is_introduced ;
var {0,1}: aux1044_INTEGER :: var_is_introduced ;
var bool: aux1045_BOOL:: var_is_introduced ;
var bool: aux1046_BOOL:: var_is_introduced ;
var 4..38: aux1047:: var_is_introduced ;
var bool: aux1048_BOOL:: var_is_introduced ;
var bool: aux1049_BOOL:: var_is_introduced ;
var bool: aux1050_BOOL:: var_is_introduced ;
var {0,1}: aux1050_INTEGER :: var_is_introduced ;
var bool: aux1051_BOOL:: var_is_introduced ;
var bool: aux1052_BOOL:: var_is_introduced ;
var 2..36: aux1053:: var_is_introduced ;
var bool: aux1054_BOOL:: var_is_introduced ;
var bool: aux1055_BOOL:: var_is_introduced ;
var bool: aux1056_BOOL:: var_is_introduced ;
var {0,1}: aux1056_INTEGER :: var_is_introduced ;
var bool: aux1057_BOOL:: var_is_introduced ;
var bool: aux1058_BOOL:: var_is_introduced ;
var 2..36: aux1059:: var_is_introduced ;
var bool: aux1060_BOOL:: var_is_introduced ;
var bool: aux1061_BOOL:: var_is_introduced ;
var bool: aux1062_BOOL:: var_is_introduced ;
var {0,1}: aux1062_INTEGER :: var_is_introduced ;
var bool: aux1063_BOOL:: var_is_introduced ;
var bool: aux1064_BOOL:: var_is_introduced ;
var 2..36: aux1065:: var_is_introduced ;
var bool: aux1066_BOOL:: var_is_introduced ;
var bool: aux1067_BOOL:: var_is_introduced ;
var bool: aux1068_BOOL:: var_is_introduced ;
var {0,1}: aux1068_INTEGER :: var_is_introduced ;
var bool: aux1069_BOOL:: var_is_introduced ;
var bool: aux1070_BOOL:: var_is_introduced ;
var 1..35: aux1071:: var_is_introduced ;
var bool: aux1072_BOOL:: var_is_introduced ;
var bool: aux1073_BOOL:: var_is_introduced ;
var bool: aux1074_BOOL:: var_is_introduced ;
var {0,1}: aux1074_INTEGER :: var_is_introduced ;
var bool: aux1075_BOOL:: var_is_introduced ;
var bool: aux1076_BOOL:: var_is_introduced ;
var 2..36: aux1077:: var_is_introduced ;
var bool: aux1078_BOOL:: var_is_introduced ;
var bool: aux1079_BOOL:: var_is_introduced ;
var bool: aux1080_BOOL:: var_is_introduced ;
var {0,1}: aux1080_INTEGER :: var_is_introduced ;
var bool: aux1081_BOOL:: var_is_introduced ;
var bool: aux1082_BOOL:: var_is_introduced ;
var 3..37: aux1083:: var_is_introduced ;
var bool: aux1084_BOOL:: var_is_introduced ;
var bool: aux1085_BOOL:: var_is_introduced ;
var bool: aux1086_BOOL:: var_is_introduced ;
var {0,1}: aux1086_INTEGER :: var_is_introduced ;
var bool: aux1087_BOOL:: var_is_introduced ;
var bool: aux1088_BOOL:: var_is_introduced ;
var 3..37: aux1089:: var_is_introduced ;
var bool: aux1090_BOOL:: var_is_introduced ;
var bool: aux1091_BOOL:: var_is_introduced ;
var bool: aux1092_BOOL:: var_is_introduced ;
var {0,1}: aux1092_INTEGER :: var_is_introduced ;
var bool: aux1093_BOOL:: var_is_introduced ;
var bool: aux1094_BOOL:: var_is_introduced ;
var 3..37: aux1095:: var_is_introduced ;
var bool: aux1096_BOOL:: var_is_introduced ;
var bool: aux1097_BOOL:: var_is_introduced ;
var {0,1}: aux1097_INTEGER :: var_is_introduced ;
var bool: aux1098_BOOL:: var_is_introduced ;
var bool: aux1099_BOOL:: var_is_introduced ;
var 2..36: aux1100:: var_is_introduced ;
var bool: aux1101_BOOL:: var_is_introduced ;
var bool: aux1102_BOOL:: var_is_introduced ;
var bool: aux1103_BOOL:: var_is_introduced ;
var {0,1}: aux1103_INTEGER :: var_is_introduced ;
var bool: aux1104_BOOL:: var_is_introduced ;
var bool: aux1105_BOOL:: var_is_introduced ;
var 6..40: aux1106:: var_is_introduced ;
var bool: aux1107_BOOL:: var_is_introduced ;
var bool: aux1108_BOOL:: var_is_introduced ;
var bool: aux1109_BOOL:: var_is_introduced ;
var {0,1}: aux1109_INTEGER :: var_is_introduced ;
var bool: aux1110_BOOL:: var_is_introduced ;
var bool: aux1111_BOOL:: var_is_introduced ;
var 1..35: aux1112:: var_is_introduced ;
var bool: aux1113_BOOL:: var_is_introduced ;
var bool: aux1114_BOOL:: var_is_introduced ;
var bool: aux1115_BOOL:: var_is_introduced ;
var {0,1}: aux1115_INTEGER :: var_is_introduced ;
var bool: aux1116_BOOL:: var_is_introduced ;
var bool: aux1117_BOOL:: var_is_introduced ;
var 2..36: aux1118:: var_is_introduced ;
var bool: aux1119_BOOL:: var_is_introduced ;
var bool: aux1120_BOOL:: var_is_introduced ;
var bool: aux1121_BOOL:: var_is_introduced ;
var {0,1}: aux1121_INTEGER :: var_is_introduced ;
var bool: aux1122_BOOL:: var_is_introduced ;
var bool: aux1123_BOOL:: var_is_introduced ;
var 1..35: aux1124:: var_is_introduced ;
var bool: aux1125_BOOL:: var_is_introduced ;
var bool: aux1126_BOOL:: var_is_introduced ;
var bool: aux1127_BOOL:: var_is_introduced ;
var {0,1}: aux1127_INTEGER :: var_is_introduced ;
var bool: aux1128_BOOL:: var_is_introduced ;
var bool: aux1129_BOOL:: var_is_introduced ;
var 4..38: aux1130:: var_is_introduced ;
var bool: aux1131_BOOL:: var_is_introduced ;
var bool: aux1132_BOOL:: var_is_introduced ;
var bool: aux1133_BOOL:: var_is_introduced ;
var {0,1}: aux1133_INTEGER :: var_is_introduced ;
var bool: aux1134_BOOL:: var_is_introduced ;
var bool: aux1135_BOOL:: var_is_introduced ;
var 2..36: aux1136:: var_is_introduced ;
var bool: aux1137_BOOL:: var_is_introduced ;
var bool: aux1138_BOOL:: var_is_introduced ;
var bool: aux1139_BOOL:: var_is_introduced ;
var {0,1}: aux1139_INTEGER :: var_is_introduced ;
var bool: aux1140_BOOL:: var_is_introduced ;
var bool: aux1141_BOOL:: var_is_introduced ;
var 2..36: aux1142:: var_is_introduced ;
var bool: aux1143_BOOL:: var_is_introduced ;
var bool: aux1144_BOOL:: var_is_introduced ;
var bool: aux1145_BOOL:: var_is_introduced ;
var {0,1}: aux1145_INTEGER :: var_is_introduced ;
var bool: aux1146_BOOL:: var_is_introduced ;
var bool: aux1147_BOOL:: var_is_introduced ;
var 2..36: aux1148:: var_is_introduced ;
var bool: aux1149_BOOL:: var_is_introduced ;
var bool: aux1150_BOOL:: var_is_introduced ;
var bool: aux1151_BOOL:: var_is_introduced ;
var {0,1}: aux1151_INTEGER :: var_is_introduced ;
var bool: aux1152_BOOL:: var_is_introduced ;
var bool: aux1153_BOOL:: var_is_introduced ;
var 1..35: aux1154:: var_is_introduced ;
var bool: aux1155_BOOL:: var_is_introduced ;
var bool: aux1156_BOOL:: var_is_introduced ;
var bool: aux1157_BOOL:: var_is_introduced ;
var {0,1}: aux1157_INTEGER :: var_is_introduced ;
var bool: aux1158_BOOL:: var_is_introduced ;
var bool: aux1159_BOOL:: var_is_introduced ;
var 2..36: aux1160:: var_is_introduced ;
var bool: aux1161_BOOL:: var_is_introduced ;
var bool: aux1162_BOOL:: var_is_introduced ;
var bool: aux1163_BOOL:: var_is_introduced ;
var {0,1}: aux1163_INTEGER :: var_is_introduced ;
var bool: aux1164_BOOL:: var_is_introduced ;
var bool: aux1165_BOOL:: var_is_introduced ;
var 3..37: aux1166:: var_is_introduced ;
var bool: aux1167_BOOL:: var_is_introduced ;
var bool: aux1168_BOOL:: var_is_introduced ;
var bool: aux1169_BOOL:: var_is_introduced ;
var {0,1}: aux1169_INTEGER :: var_is_introduced ;
var bool: aux1170_BOOL:: var_is_introduced ;
var bool: aux1171_BOOL:: var_is_introduced ;
var 3..37: aux1172:: var_is_introduced ;
var bool: aux1173_BOOL:: var_is_introduced ;
var bool: aux1174_BOOL:: var_is_introduced ;
var bool: aux1175_BOOL:: var_is_introduced ;
var {0,1}: aux1175_INTEGER :: var_is_introduced ;
var bool: aux1176_BOOL:: var_is_introduced ;
var bool: aux1177_BOOL:: var_is_introduced ;
var 2..36: aux1178:: var_is_introduced ;
var bool: aux1179_BOOL:: var_is_introduced ;
var bool: aux1180_BOOL:: var_is_introduced ;
var {0,1}: aux1180_INTEGER :: var_is_introduced ;
var bool: aux1181_BOOL:: var_is_introduced ;
var bool: aux1182_BOOL:: var_is_introduced ;
var 2..36: aux1183:: var_is_introduced ;
var bool: aux1184_BOOL:: var_is_introduced ;
var bool: aux1185_BOOL:: var_is_introduced ;
var bool: aux1186_BOOL:: var_is_introduced ;
var {0,1}: aux1186_INTEGER :: var_is_introduced ;
var bool: aux1187_BOOL:: var_is_introduced ;
var bool: aux1188_BOOL:: var_is_introduced ;
var 6..40: aux1189:: var_is_introduced ;
var bool: aux1190_BOOL:: var_is_introduced ;
var bool: aux1191_BOOL:: var_is_introduced ;
var bool: aux1192_BOOL:: var_is_introduced ;
var {0,1}: aux1192_INTEGER :: var_is_introduced ;
var bool: aux1193_BOOL:: var_is_introduced ;
var bool: aux1194_BOOL:: var_is_introduced ;
var 1..35: aux1195:: var_is_introduced ;
var bool: aux1196_BOOL:: var_is_introduced ;
var bool: aux1197_BOOL:: var_is_introduced ;
var bool: aux1198_BOOL:: var_is_introduced ;
var {0,1}: aux1198_INTEGER :: var_is_introduced ;
var bool: aux1199_BOOL:: var_is_introduced ;
var bool: aux1200_BOOL:: var_is_introduced ;
var 2..36: aux1201:: var_is_introduced ;
var bool: aux1202_BOOL:: var_is_introduced ;
var bool: aux1203_BOOL:: var_is_introduced ;
var bool: aux1204_BOOL:: var_is_introduced ;
var {0,1}: aux1204_INTEGER :: var_is_introduced ;
var bool: aux1205_BOOL:: var_is_introduced ;
var bool: aux1206_BOOL:: var_is_introduced ;
var 1..35: aux1207:: var_is_introduced ;
var bool: aux1208_BOOL:: var_is_introduced ;
var bool: aux1209_BOOL:: var_is_introduced ;
var bool: aux1210_BOOL:: var_is_introduced ;
var {0,1}: aux1210_INTEGER :: var_is_introduced ;
var bool: aux1211_BOOL:: var_is_introduced ;
var bool: aux1212_BOOL:: var_is_introduced ;
var 4..38: aux1213:: var_is_introduced ;
var bool: aux1214_BOOL:: var_is_introduced ;
var bool: aux1215_BOOL:: var_is_introduced ;
var bool: aux1216_BOOL:: var_is_introduced ;
var {0,1}: aux1216_INTEGER :: var_is_introduced ;
var bool: aux1217_BOOL:: var_is_introduced ;
var bool: aux1218_BOOL:: var_is_introduced ;
var 2..36: aux1219:: var_is_introduced ;
var bool: aux1220_BOOL:: var_is_introduced ;
var bool: aux1221_BOOL:: var_is_introduced ;
var bool: aux1222_BOOL:: var_is_introduced ;
var {0,1}: aux1222_INTEGER :: var_is_introduced ;
var bool: aux1223_BOOL:: var_is_introduced ;
var bool: aux1224_BOOL:: var_is_introduced ;
var 2..36: aux1225:: var_is_introduced ;
var bool: aux1226_BOOL:: var_is_introduced ;
var bool: aux1227_BOOL:: var_is_introduced ;
var bool: aux1228_BOOL:: var_is_introduced ;
var {0,1}: aux1228_INTEGER :: var_is_introduced ;
var bool: aux1229_BOOL:: var_is_introduced ;
var bool: aux1230_BOOL:: var_is_introduced ;
var 1..35: aux1231:: var_is_introduced ;
var bool: aux1232_BOOL:: var_is_introduced ;
var bool: aux1233_BOOL:: var_is_introduced ;
var bool: aux1234_BOOL:: var_is_introduced ;
var {0,1}: aux1234_INTEGER :: var_is_introduced ;
var bool: aux1235_BOOL:: var_is_introduced ;
var bool: aux1236_BOOL:: var_is_introduced ;
var 2..36: aux1237:: var_is_introduced ;
var bool: aux1238_BOOL:: var_is_introduced ;
var bool: aux1239_BOOL:: var_is_introduced ;
var bool: aux1240_BOOL:: var_is_introduced ;
var {0,1}: aux1240_INTEGER :: var_is_introduced ;
var bool: aux1241_BOOL:: var_is_introduced ;
var bool: aux1242_BOOL:: var_is_introduced ;
var 3..37: aux1243:: var_is_introduced ;
var bool: aux1244_BOOL:: var_is_introduced ;
var bool: aux1245_BOOL:: var_is_introduced ;
var bool: aux1246_BOOL:: var_is_introduced ;
var {0,1}: aux1246_INTEGER :: var_is_introduced ;
var bool: aux1247_BOOL:: var_is_introduced ;
var bool: aux1248_BOOL:: var_is_introduced ;
var 3..37: aux1249:: var_is_introduced ;
var bool: aux1250_BOOL:: var_is_introduced ;
var bool: aux1251_BOOL:: var_is_introduced ;
var bool: aux1252_BOOL:: var_is_introduced ;
var {0,1}: aux1252_INTEGER :: var_is_introduced ;
var bool: aux1253_BOOL:: var_is_introduced ;
var bool: aux1254_BOOL:: var_is_introduced ;
var 3..37: aux1255:: var_is_introduced ;
var bool: aux1256_BOOL:: var_is_introduced ;
var bool: aux1257_BOOL:: var_is_introduced ;
var bool: aux1258_BOOL:: var_is_introduced ;
var {0,1}: aux1258_INTEGER :: var_is_introduced ;
var bool: aux1259_BOOL:: var_is_introduced ;
var bool: aux1260_BOOL:: var_is_introduced ;
var 2..36: aux1261:: var_is_introduced ;
var bool: aux1262_BOOL:: var_is_introduced ;
var bool: aux1263_BOOL:: var_is_introduced ;
var {0,1}: aux1263_INTEGER :: var_is_introduced ;
var bool: aux1264_BOOL:: var_is_introduced ;
var bool: aux1265_BOOL:: var_is_introduced ;
var 1..35: aux1266:: var_is_introduced ;
var bool: aux1267_BOOL:: var_is_introduced ;
var bool: aux1268_BOOL:: var_is_introduced ;
var bool: aux1269_BOOL:: var_is_introduced ;
var {0,1}: aux1269_INTEGER :: var_is_introduced ;
var bool: aux1270_BOOL:: var_is_introduced ;
var bool: aux1271_BOOL:: var_is_introduced ;
var 2..36: aux1272:: var_is_introduced ;
var bool: aux1273_BOOL:: var_is_introduced ;
var bool: aux1274_BOOL:: var_is_introduced ;
var bool: aux1275_BOOL:: var_is_introduced ;
var {0,1}: aux1275_INTEGER :: var_is_introduced ;
var bool: aux1276_BOOL:: var_is_introduced ;
var bool: aux1277_BOOL:: var_is_introduced ;
var 1..35: aux1278:: var_is_introduced ;
var bool: aux1279_BOOL:: var_is_introduced ;
var bool: aux1280_BOOL:: var_is_introduced ;
var bool: aux1281_BOOL:: var_is_introduced ;
var {0,1}: aux1281_INTEGER :: var_is_introduced ;
var bool: aux1282_BOOL:: var_is_introduced ;
var bool: aux1283_BOOL:: var_is_introduced ;
var 6..40: aux1284:: var_is_introduced ;
var bool: aux1285_BOOL:: var_is_introduced ;
var bool: aux1286_BOOL:: var_is_introduced ;
var bool: aux1287_BOOL:: var_is_introduced ;
var {0,1}: aux1287_INTEGER :: var_is_introduced ;
var bool: aux1288_BOOL:: var_is_introduced ;
var bool: aux1289_BOOL:: var_is_introduced ;
var 2..36: aux1290:: var_is_introduced ;
var bool: aux1291_BOOL:: var_is_introduced ;
var bool: aux1292_BOOL:: var_is_introduced ;
var bool: aux1293_BOOL:: var_is_introduced ;
var {0,1}: aux1293_INTEGER :: var_is_introduced ;
var bool: aux1294_BOOL:: var_is_introduced ;
var bool: aux1295_BOOL:: var_is_introduced ;
var 4..38: aux1296:: var_is_introduced ;
var bool: aux1297_BOOL:: var_is_introduced ;
var bool: aux1298_BOOL:: var_is_introduced ;
var bool: aux1299_BOOL:: var_is_introduced ;
var {0,1}: aux1299_INTEGER :: var_is_introduced ;
var bool: aux1300_BOOL:: var_is_introduced ;
var bool: aux1301_BOOL:: var_is_introduced ;
var 2..36: aux1302:: var_is_introduced ;
var bool: aux1303_BOOL:: var_is_introduced ;
var bool: aux1304_BOOL:: var_is_introduced ;
var bool: aux1305_BOOL:: var_is_introduced ;
var {0,1}: aux1305_INTEGER :: var_is_introduced ;
var bool: aux1306_BOOL:: var_is_introduced ;
var bool: aux1307_BOOL:: var_is_introduced ;
var 2..36: aux1308:: var_is_introduced ;
var bool: aux1309_BOOL:: var_is_introduced ;
var bool: aux1310_BOOL:: var_is_introduced ;
var bool: aux1311_BOOL:: var_is_introduced ;
var {0,1}: aux1311_INTEGER :: var_is_introduced ;
var bool: aux1312_BOOL:: var_is_introduced ;
var bool: aux1313_BOOL:: var_is_introduced ;
var 1..35: aux1314:: var_is_introduced ;
var bool: aux1315_BOOL:: var_is_introduced ;
var bool: aux1316_BOOL:: var_is_introduced ;
var bool: aux1317_BOOL:: var_is_introduced ;
var {0,1}: aux1317_INTEGER :: var_is_introduced ;
var bool: aux1318_BOOL:: var_is_introduced ;
var bool: aux1319_BOOL:: var_is_introduced ;
var 2..36: aux1320:: var_is_introduced ;
var bool: aux1321_BOOL:: var_is_introduced ;
var bool: aux1322_BOOL:: var_is_introduced ;
var bool: aux1323_BOOL:: var_is_introduced ;
var {0,1}: aux1323_INTEGER :: var_is_introduced ;
var bool: aux1324_BOOL:: var_is_introduced ;
var bool: aux1325_BOOL:: var_is_introduced ;
var 3..37: aux1326:: var_is_introduced ;
var bool: aux1327_BOOL:: var_is_introduced ;
var bool: aux1328_BOOL:: var_is_introduced ;
var bool: aux1329_BOOL:: var_is_introduced ;
var {0,1}: aux1329_INTEGER :: var_is_introduced ;
var bool: aux1330_BOOL:: var_is_introduced ;
var bool: aux1331_BOOL:: var_is_introduced ;
var 3..37: aux1332:: var_is_introduced ;
var bool: aux1333_BOOL:: var_is_introduced ;
var bool: aux1334_BOOL:: var_is_introduced ;
var bool: aux1335_BOOL:: var_is_introduced ;
var {0,1}: aux1335_INTEGER :: var_is_introduced ;
var bool: aux1336_BOOL:: var_is_introduced ;
var bool: aux1337_BOOL:: var_is_introduced ;
var 3..37: aux1338:: var_is_introduced ;
var bool: aux1339_BOOL:: var_is_introduced ;
var bool: aux1340_BOOL:: var_is_introduced ;
var bool: aux1341_BOOL:: var_is_introduced ;
var {0,1}: aux1341_INTEGER :: var_is_introduced ;
var bool: aux1342_BOOL:: var_is_introduced ;
var bool: aux1343_BOOL:: var_is_introduced ;
var 1..35: aux1344:: var_is_introduced ;
var bool: aux1345_BOOL:: var_is_introduced ;
var bool: aux1346_BOOL:: var_is_introduced ;
var {0,1}: aux1346_INTEGER :: var_is_introduced ;
var bool: aux1347_BOOL:: var_is_introduced ;
var bool: aux1348_BOOL:: var_is_introduced ;
var 2..36: aux1349:: var_is_introduced ;
var bool: aux1350_BOOL:: var_is_introduced ;
var bool: aux1351_BOOL:: var_is_introduced ;
var bool: aux1352_BOOL:: var_is_introduced ;
var {0,1}: aux1352_INTEGER :: var_is_introduced ;
var bool: aux1353_BOOL:: var_is_introduced ;
var bool: aux1354_BOOL:: var_is_introduced ;
var 6..40: aux1355:: var_is_introduced ;
var bool: aux1356_BOOL:: var_is_introduced ;
var bool: aux1357_BOOL:: var_is_introduced ;
var bool: aux1358_BOOL:: var_is_introduced ;
var {0,1}: aux1358_INTEGER :: var_is_introduced ;
var bool: aux1359_BOOL:: var_is_introduced ;
var bool: aux1360_BOOL:: var_is_introduced ;
var 1..35: aux1361:: var_is_introduced ;
var bool: aux1362_BOOL:: var_is_introduced ;
var bool: aux1363_BOOL:: var_is_introduced ;
var bool: aux1364_BOOL:: var_is_introduced ;
var {0,1}: aux1364_INTEGER :: var_is_introduced ;
var bool: aux1365_BOOL:: var_is_introduced ;
var bool: aux1366_BOOL:: var_is_introduced ;
var 2..36: aux1367:: var_is_introduced ;
var bool: aux1368_BOOL:: var_is_introduced ;
var bool: aux1369_BOOL:: var_is_introduced ;
var bool: aux1370_BOOL:: var_is_introduced ;
var {0,1}: aux1370_INTEGER :: var_is_introduced ;
var bool: aux1371_BOOL:: var_is_introduced ;
var bool: aux1372_BOOL:: var_is_introduced ;
var 2..36: aux1373:: var_is_introduced ;
var bool: aux1374_BOOL:: var_is_introduced ;
var bool: aux1375_BOOL:: var_is_introduced ;
var bool: aux1376_BOOL:: var_is_introduced ;
var {0,1}: aux1376_INTEGER :: var_is_introduced ;
var bool: aux1377_BOOL:: var_is_introduced ;
var bool: aux1378_BOOL:: var_is_introduced ;
var 4..38: aux1379:: var_is_introduced ;
var bool: aux1380_BOOL:: var_is_introduced ;
var bool: aux1381_BOOL:: var_is_introduced ;
var bool: aux1382_BOOL:: var_is_introduced ;
var {0,1}: aux1382_INTEGER :: var_is_introduced ;
var bool: aux1383_BOOL:: var_is_introduced ;
var bool: aux1384_BOOL:: var_is_introduced ;
var 2..36: aux1385:: var_is_introduced ;
var bool: aux1386_BOOL:: var_is_introduced ;
var bool: aux1387_BOOL:: var_is_introduced ;
var bool: aux1388_BOOL:: var_is_introduced ;
var {0,1}: aux1388_INTEGER :: var_is_introduced ;
var bool: aux1389_BOOL:: var_is_introduced ;
var bool: aux1390_BOOL:: var_is_introduced ;
var 2..36: aux1391:: var_is_introduced ;
var bool: aux1392_BOOL:: var_is_introduced ;
var bool: aux1393_BOOL:: var_is_introduced ;
var bool: aux1394_BOOL:: var_is_introduced ;
var {0,1}: aux1394_INTEGER :: var_is_introduced ;
var bool: aux1395_BOOL:: var_is_introduced ;
var bool: aux1396_BOOL:: var_is_introduced ;
var 1..35: aux1397:: var_is_introduced ;
var bool: aux1398_BOOL:: var_is_introduced ;
var bool: aux1399_BOOL:: var_is_introduced ;
var bool: aux1400_BOOL:: var_is_introduced ;
var {0,1}: aux1400_INTEGER :: var_is_introduced ;
var bool: aux1401_BOOL:: var_is_introduced ;
var bool: aux1402_BOOL:: var_is_introduced ;
var 2..36: aux1403:: var_is_introduced ;
var bool: aux1404_BOOL:: var_is_introduced ;
var bool: aux1405_BOOL:: var_is_introduced ;
var bool: aux1406_BOOL:: var_is_introduced ;
var {0,1}: aux1406_INTEGER :: var_is_introduced ;
var bool: aux1407_BOOL:: var_is_introduced ;
var bool: aux1408_BOOL:: var_is_introduced ;
var 3..37: aux1409:: var_is_introduced ;
var bool: aux1410_BOOL:: var_is_introduced ;
var bool: aux1411_BOOL:: var_is_introduced ;
var bool: aux1412_BOOL:: var_is_introduced ;
var {0,1}: aux1412_INTEGER :: var_is_introduced ;
var bool: aux1413_BOOL:: var_is_introduced ;
var bool: aux1414_BOOL:: var_is_introduced ;
var 3..37: aux1415:: var_is_introduced ;
var bool: aux1416_BOOL:: var_is_introduced ;
var bool: aux1417_BOOL:: var_is_introduced ;
var bool: aux1418_BOOL:: var_is_introduced ;
var {0,1}: aux1418_INTEGER :: var_is_introduced ;
var bool: aux1419_BOOL:: var_is_introduced ;
var bool: aux1420_BOOL:: var_is_introduced ;
var 3..37: aux1421:: var_is_introduced ;
var bool: aux1422_BOOL:: var_is_introduced ;
var bool: aux1423_BOOL:: var_is_introduced ;
var bool: aux1424_BOOL:: var_is_introduced ;
var {0,1}: aux1424_INTEGER :: var_is_introduced ;
var bool: aux1425_BOOL:: var_is_introduced ;
var bool: aux1426_BOOL:: var_is_introduced ;
var bool: aux1427_BOOL:: var_is_introduced ;
var bool: aux1428_BOOL:: var_is_introduced ;
var 2..36: aux1429:: var_is_introduced ;
var bool: aux1430_BOOL:: var_is_introduced ;
var bool: aux1431_BOOL:: var_is_introduced ;
var {0,1}: aux1431_INTEGER :: var_is_introduced ;
var bool: aux1432_BOOL:: var_is_introduced ;
var bool: aux1433_BOOL:: var_is_introduced ;
var 2..36: aux1434:: var_is_introduced ;
var bool: aux1435_BOOL:: var_is_introduced ;
var bool: aux1436_BOOL:: var_is_introduced ;
var bool: aux1437_BOOL:: var_is_introduced ;
var {0,1}: aux1437_INTEGER :: var_is_introduced ;
var bool: aux1438_BOOL:: var_is_introduced ;
var bool: aux1439_BOOL:: var_is_introduced ;
var 6..40: aux1440:: var_is_introduced ;
var bool: aux1441_BOOL:: var_is_introduced ;
var bool: aux1442_BOOL:: var_is_introduced ;
var bool: aux1443_BOOL:: var_is_introduced ;
var {0,1}: aux1443_INTEGER :: var_is_introduced ;
var bool: aux1444_BOOL:: var_is_introduced ;
var bool: aux1445_BOOL:: var_is_introduced ;
var 1..35: aux1446:: var_is_introduced ;
var bool: aux1447_BOOL:: var_is_introduced ;
var bool: aux1448_BOOL:: var_is_introduced ;
var bool: aux1449_BOOL:: var_is_introduced ;
var {0,1}: aux1449_INTEGER :: var_is_introduced ;
var bool: aux1450_BOOL:: var_is_introduced ;
var bool: aux1451_BOOL:: var_is_introduced ;
var 1..35: aux1452:: var_is_introduced ;
var bool: aux1453_BOOL:: var_is_introduced ;
var bool: aux1454_BOOL:: var_is_introduced ;
var bool: aux1455_BOOL:: var_is_introduced ;
var {0,1}: aux1455_INTEGER :: var_is_introduced ;
var bool: aux1456_BOOL:: var_is_introduced ;
var bool: aux1457_BOOL:: var_is_introduced ;
var 4..38: aux1458:: var_is_introduced ;
var bool: aux1459_BOOL:: var_is_introduced ;
var bool: aux1460_BOOL:: var_is_introduced ;
var bool: aux1461_BOOL:: var_is_introduced ;
var {0,1}: aux1461_INTEGER :: var_is_introduced ;
var bool: aux1462_BOOL:: var_is_introduced ;
var bool: aux1463_BOOL:: var_is_introduced ;
var 2..36: aux1464:: var_is_introduced ;
var bool: aux1465_BOOL:: var_is_introduced ;
var bool: aux1466_BOOL:: var_is_introduced ;
var bool: aux1467_BOOL:: var_is_introduced ;
var {0,1}: aux1467_INTEGER :: var_is_introduced ;
var bool: aux1468_BOOL:: var_is_introduced ;
var bool: aux1469_BOOL:: var_is_introduced ;
var 2..36: aux1470:: var_is_introduced ;
var bool: aux1471_BOOL:: var_is_introduced ;
var bool: aux1472_BOOL:: var_is_introduced ;
var bool: aux1473_BOOL:: var_is_introduced ;
var {0,1}: aux1473_INTEGER :: var_is_introduced ;
var bool: aux1474_BOOL:: var_is_introduced ;
var bool: aux1475_BOOL:: var_is_introduced ;
var 2..36: aux1476:: var_is_introduced ;
var bool: aux1477_BOOL:: var_is_introduced ;
var bool: aux1478_BOOL:: var_is_introduced ;
var bool: aux1479_BOOL:: var_is_introduced ;
var {0,1}: aux1479_INTEGER :: var_is_introduced ;
var bool: aux1480_BOOL:: var_is_introduced ;
var bool: aux1481_BOOL:: var_is_introduced ;
var 1..35: aux1482:: var_is_introduced ;
var bool: aux1483_BOOL:: var_is_introduced ;
var bool: aux1484_BOOL:: var_is_introduced ;
var bool: aux1485_BOOL:: var_is_introduced ;
var {0,1}: aux1485_INTEGER :: var_is_introduced ;
var bool: aux1486_BOOL:: var_is_introduced ;
var bool: aux1487_BOOL:: var_is_introduced ;
var 2..36: aux1488:: var_is_introduced ;
var bool: aux1489_BOOL:: var_is_introduced ;
var bool: aux1490_BOOL:: var_is_introduced ;
var bool: aux1491_BOOL:: var_is_introduced ;
var {0,1}: aux1491_INTEGER :: var_is_introduced ;
var bool: aux1492_BOOL:: var_is_introduced ;
var bool: aux1493_BOOL:: var_is_introduced ;
var 3..37: aux1494:: var_is_introduced ;
var bool: aux1495_BOOL:: var_is_introduced ;
var bool: aux1496_BOOL:: var_is_introduced ;
var bool: aux1497_BOOL:: var_is_introduced ;
var {0,1}: aux1497_INTEGER :: var_is_introduced ;
var bool: aux1498_BOOL:: var_is_introduced ;
var bool: aux1499_BOOL:: var_is_introduced ;
var 3..37: aux1500:: var_is_introduced ;
var bool: aux1501_BOOL:: var_is_introduced ;
var bool: aux1502_BOOL:: var_is_introduced ;
var bool: aux1503_BOOL:: var_is_introduced ;
var {0,1}: aux1503_INTEGER :: var_is_introduced ;
var bool: aux1504_BOOL:: var_is_introduced ;
var bool: aux1505_BOOL:: var_is_introduced ;
var 3..37: aux1506:: var_is_introduced ;
var bool: aux1507_BOOL:: var_is_introduced ;
var bool: aux1508_BOOL:: var_is_introduced ;
var bool: aux1509_BOOL:: var_is_introduced ;
var {0,1}: aux1509_INTEGER :: var_is_introduced ;
var bool: aux1510_BOOL:: var_is_introduced ;
var bool: aux1511_BOOL:: var_is_introduced ;
var 2..36: aux1512:: var_is_introduced ;
var bool: aux1513_BOOL:: var_is_introduced ;
var bool: aux1514_BOOL:: var_is_introduced ;
var {0,1}: aux1514_INTEGER :: var_is_introduced ;
var bool: aux1515_BOOL:: var_is_introduced ;
var bool: aux1516_BOOL:: var_is_introduced ;
var 2..36: aux1517:: var_is_introduced ;
var bool: aux1518_BOOL:: var_is_introduced ;
var bool: aux1519_BOOL:: var_is_introduced ;
var bool: aux1520_BOOL:: var_is_introduced ;
var {0,1}: aux1520_INTEGER :: var_is_introduced ;
var bool: aux1521_BOOL:: var_is_introduced ;
var bool: aux1522_BOOL:: var_is_introduced ;
var 6..40: aux1523:: var_is_introduced ;
var bool: aux1524_BOOL:: var_is_introduced ;
var bool: aux1525_BOOL:: var_is_introduced ;
var bool: aux1526_BOOL:: var_is_introduced ;
var {0,1}: aux1526_INTEGER :: var_is_introduced ;
var bool: aux1527_BOOL:: var_is_introduced ;
var bool: aux1528_BOOL:: var_is_introduced ;
var 1..35: aux1529:: var_is_introduced ;
var bool: aux1530_BOOL:: var_is_introduced ;
var bool: aux1531_BOOL:: var_is_introduced ;
var bool: aux1532_BOOL:: var_is_introduced ;
var {0,1}: aux1532_INTEGER :: var_is_introduced ;
var bool: aux1533_BOOL:: var_is_introduced ;
var bool: aux1534_BOOL:: var_is_introduced ;
var 2..36: aux1535:: var_is_introduced ;
var bool: aux1536_BOOL:: var_is_introduced ;
var bool: aux1537_BOOL:: var_is_introduced ;
var bool: aux1538_BOOL:: var_is_introduced ;
var {0,1}: aux1538_INTEGER :: var_is_introduced ;
var bool: aux1539_BOOL:: var_is_introduced ;
var bool: aux1540_BOOL:: var_is_introduced ;
var 1..35: aux1541:: var_is_introduced ;
var bool: aux1542_BOOL:: var_is_introduced ;
var bool: aux1543_BOOL:: var_is_introduced ;
var bool: aux1544_BOOL:: var_is_introduced ;
var {0,1}: aux1544_INTEGER :: var_is_introduced ;
var bool: aux1545_BOOL:: var_is_introduced ;
var bool: aux1546_BOOL:: var_is_introduced ;
var 4..38: aux1547:: var_is_introduced ;
var bool: aux1548_BOOL:: var_is_introduced ;
var bool: aux1549_BOOL:: var_is_introduced ;
var bool: aux1550_BOOL:: var_is_introduced ;
var {0,1}: aux1550_INTEGER :: var_is_introduced ;
var bool: aux1551_BOOL:: var_is_introduced ;
var bool: aux1552_BOOL:: var_is_introduced ;
var 2..36: aux1553:: var_is_introduced ;
var bool: aux1554_BOOL:: var_is_introduced ;
var bool: aux1555_BOOL:: var_is_introduced ;
var bool: aux1556_BOOL:: var_is_introduced ;
var {0,1}: aux1556_INTEGER :: var_is_introduced ;
var bool: aux1557_BOOL:: var_is_introduced ;
var bool: aux1558_BOOL:: var_is_introduced ;
var 2..36: aux1559:: var_is_introduced ;
var bool: aux1560_BOOL:: var_is_introduced ;
var bool: aux1561_BOOL:: var_is_introduced ;
var bool: aux1562_BOOL:: var_is_introduced ;
var {0,1}: aux1562_INTEGER :: var_is_introduced ;
var bool: aux1563_BOOL:: var_is_introduced ;
var bool: aux1564_BOOL:: var_is_introduced ;
var 1..35: aux1565:: var_is_introduced ;
var bool: aux1566_BOOL:: var_is_introduced ;
var bool: aux1567_BOOL:: var_is_introduced ;
var bool: aux1568_BOOL:: var_is_introduced ;
var {0,1}: aux1568_INTEGER :: var_is_introduced ;
var bool: aux1569_BOOL:: var_is_introduced ;
var bool: aux1570_BOOL:: var_is_introduced ;
var 2..36: aux1571:: var_is_introduced ;
var bool: aux1572_BOOL:: var_is_introduced ;
var bool: aux1573_BOOL:: var_is_introduced ;
var bool: aux1574_BOOL:: var_is_introduced ;
var {0,1}: aux1574_INTEGER :: var_is_introduced ;
var bool: aux1575_BOOL:: var_is_introduced ;
var bool: aux1576_BOOL:: var_is_introduced ;
var 3..37: aux1577:: var_is_introduced ;
var bool: aux1578_BOOL:: var_is_introduced ;
var bool: aux1579_BOOL:: var_is_introduced ;
var bool: aux1580_BOOL:: var_is_introduced ;
var {0,1}: aux1580_INTEGER :: var_is_introduced ;
var bool: aux1581_BOOL:: var_is_introduced ;
var bool: aux1582_BOOL:: var_is_introduced ;
var 3..37: aux1583:: var_is_introduced ;
var bool: aux1584_BOOL:: var_is_introduced ;
var bool: aux1585_BOOL:: var_is_introduced ;
var bool: aux1586_BOOL:: var_is_introduced ;
var {0,1}: aux1586_INTEGER :: var_is_introduced ;
var bool: aux1587_BOOL:: var_is_introduced ;
var bool: aux1588_BOOL:: var_is_introduced ;
var 3..37: aux1589:: var_is_introduced ;
var bool: aux1590_BOOL:: var_is_introduced ;
var bool: aux1591_BOOL:: var_is_introduced ;
var bool: aux1592_BOOL:: var_is_introduced ;
var {0,1}: aux1592_INTEGER :: var_is_introduced ;
var bool: aux1593_BOOL:: var_is_introduced ;
var bool: aux1594_BOOL:: var_is_introduced ;
var 2..36: aux1595:: var_is_introduced ;
var bool: aux1596_BOOL:: var_is_introduced ;
var bool: aux1597_BOOL:: var_is_introduced ;
var {0,1}: aux1597_INTEGER :: var_is_introduced ;
var bool: aux1598_BOOL:: var_is_introduced ;
var bool: aux1599_BOOL:: var_is_introduced ;
var 6..40: aux1600:: var_is_introduced ;
var bool: aux1601_BOOL:: var_is_introduced ;
var bool: aux1602_BOOL:: var_is_introduced ;
var bool: aux1603_BOOL:: var_is_introduced ;
var {0,1}: aux1603_INTEGER :: var_is_introduced ;
var bool: aux1604_BOOL:: var_is_introduced ;
var bool: aux1605_BOOL:: var_is_introduced ;
var 1..35: aux1606:: var_is_introduced ;
var bool: aux1607_BOOL:: var_is_introduced ;
var bool: aux1608_BOOL:: var_is_introduced ;
var bool: aux1609_BOOL:: var_is_introduced ;
var {0,1}: aux1609_INTEGER :: var_is_introduced ;
var bool: aux1610_BOOL:: var_is_introduced ;
var bool: aux1611_BOOL:: var_is_introduced ;
var 2..36: aux1612:: var_is_introduced ;
var bool: aux1613_BOOL:: var_is_introduced ;
var bool: aux1614_BOOL:: var_is_introduced ;
var bool: aux1615_BOOL:: var_is_introduced ;
var {0,1}: aux1615_INTEGER :: var_is_introduced ;
var bool: aux1616_BOOL:: var_is_introduced ;
var bool: aux1617_BOOL:: var_is_introduced ;
var 1..35: aux1618:: var_is_introduced ;
var bool: aux1619_BOOL:: var_is_introduced ;
var bool: aux1620_BOOL:: var_is_introduced ;
var bool: aux1621_BOOL:: var_is_introduced ;
var {0,1}: aux1621_INTEGER :: var_is_introduced ;
var bool: aux1622_BOOL:: var_is_introduced ;
var bool: aux1623_BOOL:: var_is_introduced ;
var 4..38: aux1624:: var_is_introduced ;
var bool: aux1625_BOOL:: var_is_introduced ;
var bool: aux1626_BOOL:: var_is_introduced ;
var bool: aux1627_BOOL:: var_is_introduced ;
var {0,1}: aux1627_INTEGER :: var_is_introduced ;
var bool: aux1628_BOOL:: var_is_introduced ;
var bool: aux1629_BOOL:: var_is_introduced ;
var 2..36: aux1630:: var_is_introduced ;
var bool: aux1631_BOOL:: var_is_introduced ;
var bool: aux1632_BOOL:: var_is_introduced ;
var bool: aux1633_BOOL:: var_is_introduced ;
var {0,1}: aux1633_INTEGER :: var_is_introduced ;
var bool: aux1634_BOOL:: var_is_introduced ;
var bool: aux1635_BOOL:: var_is_introduced ;
var 2..36: aux1636:: var_is_introduced ;
var bool: aux1637_BOOL:: var_is_introduced ;
var bool: aux1638_BOOL:: var_is_introduced ;
var bool: aux1639_BOOL:: var_is_introduced ;
var {0,1}: aux1639_INTEGER :: var_is_introduced ;
var bool: aux1640_BOOL:: var_is_introduced ;
var bool: aux1641_BOOL:: var_is_introduced ;
var 2..36: aux1642:: var_is_introduced ;
var bool: aux1643_BOOL:: var_is_introduced ;
var bool: aux1644_BOOL:: var_is_introduced ;
var bool: aux1645_BOOL:: var_is_introduced ;
var {0,1}: aux1645_INTEGER :: var_is_introduced ;
var bool: aux1646_BOOL:: var_is_introduced ;
var bool: aux1647_BOOL:: var_is_introduced ;
var 1..35: aux1648:: var_is_introduced ;
var bool: aux1649_BOOL:: var_is_introduced ;
var bool: aux1650_BOOL:: var_is_introduced ;
var bool: aux1651_BOOL:: var_is_introduced ;
var {0,1}: aux1651_INTEGER :: var_is_introduced ;
var bool: aux1652_BOOL:: var_is_introduced ;
var bool: aux1653_BOOL:: var_is_introduced ;
var 2..36: aux1654:: var_is_introduced ;
var bool: aux1655_BOOL:: var_is_introduced ;
var bool: aux1656_BOOL:: var_is_introduced ;
var bool: aux1657_BOOL:: var_is_introduced ;
var {0,1}: aux1657_INTEGER :: var_is_introduced ;
var bool: aux1658_BOOL:: var_is_introduced ;
var bool: aux1659_BOOL:: var_is_introduced ;
var 3..37: aux1660:: var_is_introduced ;
var bool: aux1661_BOOL:: var_is_introduced ;
var bool: aux1662_BOOL:: var_is_introduced ;
var bool: aux1663_BOOL:: var_is_introduced ;
var {0,1}: aux1663_INTEGER :: var_is_introduced ;
var bool: aux1664_BOOL:: var_is_introduced ;
var bool: aux1665_BOOL:: var_is_introduced ;
var 3..37: aux1666:: var_is_introduced ;
var bool: aux1667_BOOL:: var_is_introduced ;
var bool: aux1668_BOOL:: var_is_introduced ;
var bool: aux1669_BOOL:: var_is_introduced ;
var {0,1}: aux1669_INTEGER :: var_is_introduced ;
var bool: aux1670_BOOL:: var_is_introduced ;
var bool: aux1671_BOOL:: var_is_introduced ;
var 3..37: aux1672:: var_is_introduced ;
var bool: aux1673_BOOL:: var_is_introduced ;
var bool: aux1674_BOOL:: var_is_introduced ;
var bool: aux1675_BOOL:: var_is_introduced ;
var {0,1}: aux1675_INTEGER :: var_is_introduced ;
var bool: aux1676_BOOL:: var_is_introduced ;
var bool: aux1677_BOOL:: var_is_introduced ;
var 1..35: aux1678:: var_is_introduced ;
var bool: aux1679_BOOL:: var_is_introduced ;
var bool: aux1680_BOOL:: var_is_introduced ;
var {0,1}: aux1680_INTEGER :: var_is_introduced ;
var bool: aux1681_BOOL:: var_is_introduced ;
var bool: aux1682_BOOL:: var_is_introduced ;
var 2..36: aux1683:: var_is_introduced ;
var bool: aux1684_BOOL:: var_is_introduced ;
var bool: aux1685_BOOL:: var_is_introduced ;
var bool: aux1686_BOOL:: var_is_introduced ;
var {0,1}: aux1686_INTEGER :: var_is_introduced ;
var bool: aux1687_BOOL:: var_is_introduced ;
var bool: aux1688_BOOL:: var_is_introduced ;
var 6..40: aux1689:: var_is_introduced ;
var bool: aux1690_BOOL:: var_is_introduced ;
var bool: aux1691_BOOL:: var_is_introduced ;
var bool: aux1692_BOOL:: var_is_introduced ;
var {0,1}: aux1692_INTEGER :: var_is_introduced ;
var bool: aux1693_BOOL:: var_is_introduced ;
var bool: aux1694_BOOL:: var_is_introduced ;
var 2..36: aux1695:: var_is_introduced ;
var bool: aux1696_BOOL:: var_is_introduced ;
var bool: aux1697_BOOL:: var_is_introduced ;
var bool: aux1698_BOOL:: var_is_introduced ;
var {0,1}: aux1698_INTEGER :: var_is_introduced ;
var bool: aux1699_BOOL:: var_is_introduced ;
var bool: aux1700_BOOL:: var_is_introduced ;
var 1..35: aux1701:: var_is_introduced ;
var bool: aux1702_BOOL:: var_is_introduced ;
var bool: aux1703_BOOL:: var_is_introduced ;
var bool: aux1704_BOOL:: var_is_introduced ;
var {0,1}: aux1704_INTEGER :: var_is_introduced ;
var bool: aux1705_BOOL:: var_is_introduced ;
var bool: aux1706_BOOL:: var_is_introduced ;
var 4..38: aux1707:: var_is_introduced ;
var bool: aux1708_BOOL:: var_is_introduced ;
var bool: aux1709_BOOL:: var_is_introduced ;
var bool: aux1710_BOOL:: var_is_introduced ;
var {0,1}: aux1710_INTEGER :: var_is_introduced ;
var bool: aux1711_BOOL:: var_is_introduced ;
var bool: aux1712_BOOL:: var_is_introduced ;
var 2..36: aux1713:: var_is_introduced ;
var bool: aux1714_BOOL:: var_is_introduced ;
var bool: aux1715_BOOL:: var_is_introduced ;
var bool: aux1716_BOOL:: var_is_introduced ;
var {0,1}: aux1716_INTEGER :: var_is_introduced ;
var bool: aux1717_BOOL:: var_is_introduced ;
var bool: aux1718_BOOL:: var_is_introduced ;
var 2..36: aux1719:: var_is_introduced ;
var bool: aux1720_BOOL:: var_is_introduced ;
var bool: aux1721_BOOL:: var_is_introduced ;
var bool: aux1722_BOOL:: var_is_introduced ;
var {0,1}: aux1722_INTEGER :: var_is_introduced ;
var bool: aux1723_BOOL:: var_is_introduced ;
var bool: aux1724_BOOL:: var_is_introduced ;
var 2..36: aux1725:: var_is_introduced ;
var bool: aux1726_BOOL:: var_is_introduced ;
var bool: aux1727_BOOL:: var_is_introduced ;
var bool: aux1728_BOOL:: var_is_introduced ;
var {0,1}: aux1728_INTEGER :: var_is_introduced ;
var bool: aux1729_BOOL:: var_is_introduced ;
var bool: aux1730_BOOL:: var_is_introduced ;
var 1..35: aux1731:: var_is_introduced ;
var bool: aux1732_BOOL:: var_is_introduced ;
var bool: aux1733_BOOL:: var_is_introduced ;
var bool: aux1734_BOOL:: var_is_introduced ;
var {0,1}: aux1734_INTEGER :: var_is_introduced ;
var bool: aux1735_BOOL:: var_is_introduced ;
var bool: aux1736_BOOL:: var_is_introduced ;
var 2..36: aux1737:: var_is_introduced ;
var bool: aux1738_BOOL:: var_is_introduced ;
var bool: aux1739_BOOL:: var_is_introduced ;
var bool: aux1740_BOOL:: var_is_introduced ;
var {0,1}: aux1740_INTEGER :: var_is_introduced ;
var bool: aux1741_BOOL:: var_is_introduced ;
var bool: aux1742_BOOL:: var_is_introduced ;
var 3..37: aux1743:: var_is_introduced ;
var bool: aux1744_BOOL:: var_is_introduced ;
var bool: aux1745_BOOL:: var_is_introduced ;
var bool: aux1746_BOOL:: var_is_introduced ;
var {0,1}: aux1746_INTEGER :: var_is_introduced ;
var bool: aux1747_BOOL:: var_is_introduced ;
var bool: aux1748_BOOL:: var_is_introduced ;
var 3..37: aux1749:: var_is_introduced ;
var bool: aux1750_BOOL:: var_is_introduced ;
var bool: aux1751_BOOL:: var_is_introduced ;
var bool: aux1752_BOOL:: var_is_introduced ;
var {0,1}: aux1752_INTEGER :: var_is_introduced ;
var bool: aux1753_BOOL:: var_is_introduced ;
var bool: aux1754_BOOL:: var_is_introduced ;
var 3..37: aux1755:: var_is_introduced ;
var bool: aux1756_BOOL:: var_is_introduced ;
var bool: aux1757_BOOL:: var_is_introduced ;
var bool: aux1758_BOOL:: var_is_introduced ;
var {0,1}: aux1758_INTEGER :: var_is_introduced ;
var bool: aux1759_BOOL:: var_is_introduced ;
var bool: aux1760_BOOL:: var_is_introduced ;
var 6..40: aux1761:: var_is_introduced ;
var bool: aux1762_BOOL:: var_is_introduced ;
var bool: aux1763_BOOL:: var_is_introduced ;
var {0,1}: aux1763_INTEGER :: var_is_introduced ;
var bool: aux1764_BOOL:: var_is_introduced ;
var bool: aux1765_BOOL:: var_is_introduced ;
var 2..36: aux1766:: var_is_introduced ;
var bool: aux1767_BOOL:: var_is_introduced ;
var bool: aux1768_BOOL:: var_is_introduced ;
var bool: aux1769_BOOL:: var_is_introduced ;
var {0,1}: aux1769_INTEGER :: var_is_introduced ;
var bool: aux1770_BOOL:: var_is_introduced ;
var bool: aux1771_BOOL:: var_is_introduced ;
var 1..35: aux1772:: var_is_introduced ;
var bool: aux1773_BOOL:: var_is_introduced ;
var bool: aux1774_BOOL:: var_is_introduced ;
var bool: aux1775_BOOL:: var_is_introduced ;
var {0,1}: aux1775_INTEGER :: var_is_introduced ;
var bool: aux1776_BOOL:: var_is_introduced ;
var bool: aux1777_BOOL:: var_is_introduced ;
var 2..36: aux1778:: var_is_introduced ;
var bool: aux1779_BOOL:: var_is_introduced ;
var bool: aux1780_BOOL:: var_is_introduced ;
var bool: aux1781_BOOL:: var_is_introduced ;
var {0,1}: aux1781_INTEGER :: var_is_introduced ;
var bool: aux1782_BOOL:: var_is_introduced ;
var bool: aux1783_BOOL:: var_is_introduced ;
var 1..35: aux1784:: var_is_introduced ;
var bool: aux1785_BOOL:: var_is_introduced ;
var bool: aux1786_BOOL:: var_is_introduced ;
var bool: aux1787_BOOL:: var_is_introduced ;
var {0,1}: aux1787_INTEGER :: var_is_introduced ;
var bool: aux1788_BOOL:: var_is_introduced ;
var bool: aux1789_BOOL:: var_is_introduced ;
var 4..38: aux1790:: var_is_introduced ;
var bool: aux1791_BOOL:: var_is_introduced ;
var bool: aux1792_BOOL:: var_is_introduced ;
var bool: aux1793_BOOL:: var_is_introduced ;
var {0,1}: aux1793_INTEGER :: var_is_introduced ;
var bool: aux1794_BOOL:: var_is_introduced ;
var bool: aux1795_BOOL:: var_is_introduced ;
var 2..36: aux1796:: var_is_introduced ;
var bool: aux1797_BOOL:: var_is_introduced ;
var bool: aux1798_BOOL:: var_is_introduced ;
var bool: aux1799_BOOL:: var_is_introduced ;
var {0,1}: aux1799_INTEGER :: var_is_introduced ;
var bool: aux1800_BOOL:: var_is_introduced ;
var bool: aux1801_BOOL:: var_is_introduced ;
var 2..36: aux1802:: var_is_introduced ;
var bool: aux1803_BOOL:: var_is_introduced ;
var bool: aux1804_BOOL:: var_is_introduced ;
var bool: aux1805_BOOL:: var_is_introduced ;
var {0,1}: aux1805_INTEGER :: var_is_introduced ;
var bool: aux1806_BOOL:: var_is_introduced ;
var bool: aux1807_BOOL:: var_is_introduced ;
var 2..36: aux1808:: var_is_introduced ;
var bool: aux1809_BOOL:: var_is_introduced ;
var bool: aux1810_BOOL:: var_is_introduced ;
var bool: aux1811_BOOL:: var_is_introduced ;
var {0,1}: aux1811_INTEGER :: var_is_introduced ;
var bool: aux1812_BOOL:: var_is_introduced ;
var bool: aux1813_BOOL:: var_is_introduced ;
var 1..35: aux1814:: var_is_introduced ;
var bool: aux1815_BOOL:: var_is_introduced ;
var bool: aux1816_BOOL:: var_is_introduced ;
var bool: aux1817_BOOL:: var_is_introduced ;
var {0,1}: aux1817_INTEGER :: var_is_introduced ;
var bool: aux1818_BOOL:: var_is_introduced ;
var bool: aux1819_BOOL:: var_is_introduced ;
var 2..36: aux1820:: var_is_introduced ;
var bool: aux1821_BOOL:: var_is_introduced ;
var bool: aux1822_BOOL:: var_is_introduced ;
var bool: aux1823_BOOL:: var_is_introduced ;
var {0,1}: aux1823_INTEGER :: var_is_introduced ;
var bool: aux1824_BOOL:: var_is_introduced ;
var bool: aux1825_BOOL:: var_is_introduced ;
var 3..37: aux1826:: var_is_introduced ;
var bool: aux1827_BOOL:: var_is_introduced ;
var bool: aux1828_BOOL:: var_is_introduced ;
var bool: aux1829_BOOL:: var_is_introduced ;
var {0,1}: aux1829_INTEGER :: var_is_introduced ;
var bool: aux1830_BOOL:: var_is_introduced ;
var bool: aux1831_BOOL:: var_is_introduced ;
var 3..37: aux1832:: var_is_introduced ;
var bool: aux1833_BOOL:: var_is_introduced ;
var bool: aux1834_BOOL:: var_is_introduced ;
var bool: aux1835_BOOL:: var_is_introduced ;
var {0,1}: aux1835_INTEGER :: var_is_introduced ;
var bool: aux1836_BOOL:: var_is_introduced ;
var bool: aux1837_BOOL:: var_is_introduced ;
var 3..37: aux1838:: var_is_introduced ;
var bool: aux1839_BOOL:: var_is_introduced ;
var bool: aux1840_BOOL:: var_is_introduced ;
var bool: aux1841_BOOL:: var_is_introduced ;
var {0,1}: aux1841_INTEGER :: var_is_introduced ;
var bool: aux1842_BOOL:: var_is_introduced ;
var bool: aux1843_BOOL:: var_is_introduced ;
var 2..36: aux1844:: var_is_introduced ;
var bool: aux1845_BOOL:: var_is_introduced ;
var bool: aux1846_BOOL:: var_is_introduced ;
var {0,1}: aux1846_INTEGER :: var_is_introduced ;
var bool: aux1847_BOOL:: var_is_introduced ;
var bool: aux1848_BOOL:: var_is_introduced ;
var 2..36: aux1849:: var_is_introduced ;
var bool: aux1850_BOOL:: var_is_introduced ;
var bool: aux1851_BOOL:: var_is_introduced ;
var bool: aux1852_BOOL:: var_is_introduced ;
var {0,1}: aux1852_INTEGER :: var_is_introduced ;
var bool: aux1853_BOOL:: var_is_introduced ;
var bool: aux1854_BOOL:: var_is_introduced ;
var 6..40: aux1855:: var_is_introduced ;
var bool: aux1856_BOOL:: var_is_introduced ;
var bool: aux1857_BOOL:: var_is_introduced ;
var bool: aux1858_BOOL:: var_is_introduced ;
var {0,1}: aux1858_INTEGER :: var_is_introduced ;
var bool: aux1859_BOOL:: var_is_introduced ;
var bool: aux1860_BOOL:: var_is_introduced ;
var 1..35: aux1861:: var_is_introduced ;
var bool: aux1862_BOOL:: var_is_introduced ;
var bool: aux1863_BOOL:: var_is_introduced ;
var bool: aux1864_BOOL:: var_is_introduced ;
var {0,1}: aux1864_INTEGER :: var_is_introduced ;
var bool: aux1865_BOOL:: var_is_introduced ;
var bool: aux1866_BOOL:: var_is_introduced ;
var 2..36: aux1867:: var_is_introduced ;
var bool: aux1868_BOOL:: var_is_introduced ;
var bool: aux1869_BOOL:: var_is_introduced ;
var bool: aux1870_BOOL:: var_is_introduced ;
var {0,1}: aux1870_INTEGER :: var_is_introduced ;
var bool: aux1871_BOOL:: var_is_introduced ;
var bool: aux1872_BOOL:: var_is_introduced ;
var 1..35: aux1873:: var_is_introduced ;
var bool: aux1874_BOOL:: var_is_introduced ;
var bool: aux1875_BOOL:: var_is_introduced ;
var bool: aux1876_BOOL:: var_is_introduced ;
var {0,1}: aux1876_INTEGER :: var_is_introduced ;
var bool: aux1877_BOOL:: var_is_introduced ;
var bool: aux1878_BOOL:: var_is_introduced ;
var 4..38: aux1879:: var_is_introduced ;
var bool: aux1880_BOOL:: var_is_introduced ;
var bool: aux1881_BOOL:: var_is_introduced ;
var bool: aux1882_BOOL:: var_is_introduced ;
var {0,1}: aux1882_INTEGER :: var_is_introduced ;
var bool: aux1883_BOOL:: var_is_introduced ;
var bool: aux1884_BOOL:: var_is_introduced ;
var 2..36: aux1885:: var_is_introduced ;
var bool: aux1886_BOOL:: var_is_introduced ;
var bool: aux1887_BOOL:: var_is_introduced ;
var bool: aux1888_BOOL:: var_is_introduced ;
var {0,1}: aux1888_INTEGER :: var_is_introduced ;
var bool: aux1889_BOOL:: var_is_introduced ;
var bool: aux1890_BOOL:: var_is_introduced ;
var 2..36: aux1891:: var_is_introduced ;
var bool: aux1892_BOOL:: var_is_introduced ;
var bool: aux1893_BOOL:: var_is_introduced ;
var bool: aux1894_BOOL:: var_is_introduced ;
var {0,1}: aux1894_INTEGER :: var_is_introduced ;
var bool: aux1895_BOOL:: var_is_introduced ;
var bool: aux1896_BOOL:: var_is_introduced ;
var 2..36: aux1897:: var_is_introduced ;
var bool: aux1898_BOOL:: var_is_introduced ;
var bool: aux1899_BOOL:: var_is_introduced ;
var bool: aux1900_BOOL:: var_is_introduced ;
var {0,1}: aux1900_INTEGER :: var_is_introduced ;
var bool: aux1901_BOOL:: var_is_introduced ;
var bool: aux1902_BOOL:: var_is_introduced ;
var 1..35: aux1903:: var_is_introduced ;
var bool: aux1904_BOOL:: var_is_introduced ;
var bool: aux1905_BOOL:: var_is_introduced ;
var bool: aux1906_BOOL:: var_is_introduced ;
var {0,1}: aux1906_INTEGER :: var_is_introduced ;
var bool: aux1907_BOOL:: var_is_introduced ;
var bool: aux1908_BOOL:: var_is_introduced ;
var 3..37: aux1909:: var_is_introduced ;
var bool: aux1910_BOOL:: var_is_introduced ;
var bool: aux1911_BOOL:: var_is_introduced ;
var bool: aux1912_BOOL:: var_is_introduced ;
var {0,1}: aux1912_INTEGER :: var_is_introduced ;
var bool: aux1913_BOOL:: var_is_introduced ;
var bool: aux1914_BOOL:: var_is_introduced ;
var 3..37: aux1915:: var_is_introduced ;
var bool: aux1916_BOOL:: var_is_introduced ;
var bool: aux1917_BOOL:: var_is_introduced ;
var bool: aux1918_BOOL:: var_is_introduced ;
var {0,1}: aux1918_INTEGER :: var_is_introduced ;
var bool: aux1919_BOOL:: var_is_introduced ;
var bool: aux1920_BOOL:: var_is_introduced ;
var 3..37: aux1921:: var_is_introduced ;
var bool: aux1922_BOOL:: var_is_introduced ;
var bool: aux1923_BOOL:: var_is_introduced ;
var bool: aux1924_BOOL:: var_is_introduced ;
var {0,1}: aux1924_INTEGER :: var_is_introduced ;
var bool: aux1925_BOOL:: var_is_introduced ;
var bool: aux1926_BOOL:: var_is_introduced ;
var 2..36: aux1927:: var_is_introduced ;
var bool: aux1928_BOOL:: var_is_introduced ;
var bool: aux1929_BOOL:: var_is_introduced ;
var {0,1}: aux1929_INTEGER :: var_is_introduced ;
var bool: aux1930_BOOL:: var_is_introduced ;
var bool: aux1931_BOOL:: var_is_introduced ;
var 2..36: aux1932:: var_is_introduced ;
var bool: aux1933_BOOL:: var_is_introduced ;
var bool: aux1934_BOOL:: var_is_introduced ;
var bool: aux1935_BOOL:: var_is_introduced ;
var {0,1}: aux1935_INTEGER :: var_is_introduced ;
var bool: aux1936_BOOL:: var_is_introduced ;
var bool: aux1937_BOOL:: var_is_introduced ;
var 6..40: aux1938:: var_is_introduced ;
var bool: aux1939_BOOL:: var_is_introduced ;
var bool: aux1940_BOOL:: var_is_introduced ;
var bool: aux1941_BOOL:: var_is_introduced ;
var {0,1}: aux1941_INTEGER :: var_is_introduced ;
var bool: aux1942_BOOL:: var_is_introduced ;
var bool: aux1943_BOOL:: var_is_introduced ;
var 1..35: aux1944:: var_is_introduced ;
var bool: aux1945_BOOL:: var_is_introduced ;
var bool: aux1946_BOOL:: var_is_introduced ;
var bool: aux1947_BOOL:: var_is_introduced ;
var {0,1}: aux1947_INTEGER :: var_is_introduced ;
var bool: aux1948_BOOL:: var_is_introduced ;
var bool: aux1949_BOOL:: var_is_introduced ;
var 2..36: aux1950:: var_is_introduced ;
var bool: aux1951_BOOL:: var_is_introduced ;
var bool: aux1952_BOOL:: var_is_introduced ;
var bool: aux1953_BOOL:: var_is_introduced ;
var {0,1}: aux1953_INTEGER :: var_is_introduced ;
var bool: aux1954_BOOL:: var_is_introduced ;
var bool: aux1955_BOOL:: var_is_introduced ;
var 1..35: aux1956:: var_is_introduced ;
var bool: aux1957_BOOL:: var_is_introduced ;
var bool: aux1958_BOOL:: var_is_introduced ;
var bool: aux1959_BOOL:: var_is_introduced ;
var {0,1}: aux1959_INTEGER :: var_is_introduced ;
var bool: aux1960_BOOL:: var_is_introduced ;
var bool: aux1961_BOOL:: var_is_introduced ;
var 4..38: aux1962:: var_is_introduced ;
var bool: aux1963_BOOL:: var_is_introduced ;
var bool: aux1964_BOOL:: var_is_introduced ;
var bool: aux1965_BOOL:: var_is_introduced ;
var {0,1}: aux1965_INTEGER :: var_is_introduced ;
var bool: aux1966_BOOL:: var_is_introduced ;
var bool: aux1967_BOOL:: var_is_introduced ;
var 2..36: aux1968:: var_is_introduced ;
var bool: aux1969_BOOL:: var_is_introduced ;
var bool: aux1970_BOOL:: var_is_introduced ;
var bool: aux1971_BOOL:: var_is_introduced ;
var {0,1}: aux1971_INTEGER :: var_is_introduced ;
var bool: aux1972_BOOL:: var_is_introduced ;
var bool: aux1973_BOOL:: var_is_introduced ;
var 2..36: aux1974:: var_is_introduced ;
var bool: aux1975_BOOL:: var_is_introduced ;
var bool: aux1976_BOOL:: var_is_introduced ;
var bool: aux1977_BOOL:: var_is_introduced ;
var {0,1}: aux1977_INTEGER :: var_is_introduced ;
var bool: aux1978_BOOL:: var_is_introduced ;
var bool: aux1979_BOOL:: var_is_introduced ;
var 1..35: aux1980:: var_is_introduced ;
var bool: aux1981_BOOL:: var_is_introduced ;
var bool: aux1982_BOOL:: var_is_introduced ;
var bool: aux1983_BOOL:: var_is_introduced ;
var {0,1}: aux1983_INTEGER :: var_is_introduced ;
var bool: aux1984_BOOL:: var_is_introduced ;
var bool: aux1985_BOOL:: var_is_introduced ;
var 2..36: aux1986:: var_is_introduced ;
var bool: aux1987_BOOL:: var_is_introduced ;
var bool: aux1988_BOOL:: var_is_introduced ;
var bool: aux1989_BOOL:: var_is_introduced ;
var {0,1}: aux1989_INTEGER :: var_is_introduced ;
var bool: aux1990_BOOL:: var_is_introduced ;
var bool: aux1991_BOOL:: var_is_introduced ;
var 3..37: aux1992:: var_is_introduced ;
var bool: aux1993_BOOL:: var_is_introduced ;
var bool: aux1994_BOOL:: var_is_introduced ;
var bool: aux1995_BOOL:: var_is_introduced ;
var {0,1}: aux1995_INTEGER :: var_is_introduced ;
var bool: aux1996_BOOL:: var_is_introduced ;
var bool: aux1997_BOOL:: var_is_introduced ;
var 3..37: aux1998:: var_is_introduced ;
var bool: aux1999_BOOL:: var_is_introduced ;
var bool: aux2000_BOOL:: var_is_introduced ;
var bool: aux2001_BOOL:: var_is_introduced ;
var {0,1}: aux2001_INTEGER :: var_is_introduced ;
var bool: aux2002_BOOL:: var_is_introduced ;
var bool: aux2003_BOOL:: var_is_introduced ;
var 3..37: aux2004:: var_is_introduced ;
var bool: aux2005_BOOL:: var_is_introduced ;
var bool: aux2006_BOOL:: var_is_introduced ;
var bool: aux2007_BOOL:: var_is_introduced ;
var {0,1}: aux2007_INTEGER :: var_is_introduced ;
var bool: aux2008_BOOL:: var_is_introduced ;
var bool: aux2009_BOOL:: var_is_introduced ;
var 1..35: aux2010:: var_is_introduced ;
var bool: aux2011_BOOL:: var_is_introduced ;
var bool: aux2012_BOOL:: var_is_introduced ;
var {0,1}: aux2012_INTEGER :: var_is_introduced ;
var bool: aux2013_BOOL:: var_is_introduced ;
var bool: aux2014_BOOL:: var_is_introduced ;
var 2..36: aux2015:: var_is_introduced ;
var bool: aux2016_BOOL:: var_is_introduced ;
var bool: aux2017_BOOL:: var_is_introduced ;
var bool: aux2018_BOOL:: var_is_introduced ;
var {0,1}: aux2018_INTEGER :: var_is_introduced ;
var bool: aux2019_BOOL:: var_is_introduced ;
var bool: aux2020_BOOL:: var_is_introduced ;
var 6..40: aux2021:: var_is_introduced ;
var bool: aux2022_BOOL:: var_is_introduced ;
var bool: aux2023_BOOL:: var_is_introduced ;
var bool: aux2024_BOOL:: var_is_introduced ;
var {0,1}: aux2024_INTEGER :: var_is_introduced ;
var bool: aux2025_BOOL:: var_is_introduced ;
var bool: aux2026_BOOL:: var_is_introduced ;
var 1..35: aux2027:: var_is_introduced ;
var bool: aux2028_BOOL:: var_is_introduced ;
var bool: aux2029_BOOL:: var_is_introduced ;
var bool: aux2030_BOOL:: var_is_introduced ;
var {0,1}: aux2030_INTEGER :: var_is_introduced ;
var bool: aux2031_BOOL:: var_is_introduced ;
var bool: aux2032_BOOL:: var_is_introduced ;
var 2..36: aux2033:: var_is_introduced ;
var bool: aux2034_BOOL:: var_is_introduced ;
var bool: aux2035_BOOL:: var_is_introduced ;
var bool: aux2036_BOOL:: var_is_introduced ;
var {0,1}: aux2036_INTEGER :: var_is_introduced ;
var bool: aux2037_BOOL:: var_is_introduced ;
var bool: aux2038_BOOL:: var_is_introduced ;
var 4..38: aux2039:: var_is_introduced ;
var bool: aux2040_BOOL:: var_is_introduced ;
var bool: aux2041_BOOL:: var_is_introduced ;
var bool: aux2042_BOOL:: var_is_introduced ;
var {0,1}: aux2042_INTEGER :: var_is_introduced ;
var bool: aux2043_BOOL:: var_is_introduced ;
var bool: aux2044_BOOL:: var_is_introduced ;
var 2..36: aux2045:: var_is_introduced ;
var bool: aux2046_BOOL:: var_is_introduced ;
var bool: aux2047_BOOL:: var_is_introduced ;
var bool: aux2048_BOOL:: var_is_introduced ;
var {0,1}: aux2048_INTEGER :: var_is_introduced ;
var bool: aux2049_BOOL:: var_is_introduced ;
var bool: aux2050_BOOL:: var_is_introduced ;
var 2..36: aux2051:: var_is_introduced ;
var bool: aux2052_BOOL:: var_is_introduced ;
var bool: aux2053_BOOL:: var_is_introduced ;
var bool: aux2054_BOOL:: var_is_introduced ;
var {0,1}: aux2054_INTEGER :: var_is_introduced ;
var bool: aux2055_BOOL:: var_is_introduced ;
var bool: aux2056_BOOL:: var_is_introduced ;
var 2..36: aux2057:: var_is_introduced ;
var bool: aux2058_BOOL:: var_is_introduced ;
var bool: aux2059_BOOL:: var_is_introduced ;
var bool: aux2060_BOOL:: var_is_introduced ;
var {0,1}: aux2060_INTEGER :: var_is_introduced ;
var bool: aux2061_BOOL:: var_is_introduced ;
var bool: aux2062_BOOL:: var_is_introduced ;
var 1..35: aux2063:: var_is_introduced ;
var bool: aux2064_BOOL:: var_is_introduced ;
var bool: aux2065_BOOL:: var_is_introduced ;
var bool: aux2066_BOOL:: var_is_introduced ;
var {0,1}: aux2066_INTEGER :: var_is_introduced ;
var bool: aux2067_BOOL:: var_is_introduced ;
var bool: aux2068_BOOL:: var_is_introduced ;
var 2..36: aux2069:: var_is_introduced ;
var bool: aux2070_BOOL:: var_is_introduced ;
var bool: aux2071_BOOL:: var_is_introduced ;
var bool: aux2072_BOOL:: var_is_introduced ;
var {0,1}: aux2072_INTEGER :: var_is_introduced ;
var bool: aux2073_BOOL:: var_is_introduced ;
var bool: aux2074_BOOL:: var_is_introduced ;
var 3..37: aux2075:: var_is_introduced ;
var bool: aux2076_BOOL:: var_is_introduced ;
var bool: aux2077_BOOL:: var_is_introduced ;
var bool: aux2078_BOOL:: var_is_introduced ;
var {0,1}: aux2078_INTEGER :: var_is_introduced ;
var bool: aux2079_BOOL:: var_is_introduced ;
var bool: aux2080_BOOL:: var_is_introduced ;
var 3..37: aux2081:: var_is_introduced ;
var bool: aux2082_BOOL:: var_is_introduced ;
var bool: aux2083_BOOL:: var_is_introduced ;
var bool: aux2084_BOOL:: var_is_introduced ;
var {0,1}: aux2084_INTEGER :: var_is_introduced ;
var bool: aux2085_BOOL:: var_is_introduced ;
var bool: aux2086_BOOL:: var_is_introduced ;
var 3..37: aux2087:: var_is_introduced ;
var bool: aux2088_BOOL:: var_is_introduced ;
var bool: aux2089_BOOL:: var_is_introduced ;
var bool: aux2090_BOOL:: var_is_introduced ;
var {0,1}: aux2090_INTEGER :: var_is_introduced ;
var bool: aux2091_BOOL:: var_is_introduced ;
var bool: aux2092_BOOL:: var_is_introduced ;
var 3..37: aux2093:: var_is_introduced ;
var bool: aux2094_BOOL:: var_is_introduced ;
var bool: aux2095_BOOL:: var_is_introduced ;
var {0,1}: aux2095_INTEGER :: var_is_introduced ;
var bool: aux2096_BOOL:: var_is_introduced ;
var bool: aux2097_BOOL:: var_is_introduced ;
var 2..36: aux2098:: var_is_introduced ;
var bool: aux2099_BOOL:: var_is_introduced ;
var bool: aux2100_BOOL:: var_is_introduced ;
var bool: aux2101_BOOL:: var_is_introduced ;
var {0,1}: aux2101_INTEGER :: var_is_introduced ;
var bool: aux2102_BOOL:: var_is_introduced ;
var bool: aux2103_BOOL:: var_is_introduced ;
var 6..40: aux2104:: var_is_introduced ;
var bool: aux2105_BOOL:: var_is_introduced ;
var bool: aux2106_BOOL:: var_is_introduced ;
var bool: aux2107_BOOL:: var_is_introduced ;
var {0,1}: aux2107_INTEGER :: var_is_introduced ;
var bool: aux2108_BOOL:: var_is_introduced ;
var bool: aux2109_BOOL:: var_is_introduced ;
var 1..35: aux2110:: var_is_introduced ;
var bool: aux2111_BOOL:: var_is_introduced ;
var bool: aux2112_BOOL:: var_is_introduced ;
var bool: aux2113_BOOL:: var_is_introduced ;
var {0,1}: aux2113_INTEGER :: var_is_introduced ;
var bool: aux2114_BOOL:: var_is_introduced ;
var bool: aux2115_BOOL:: var_is_introduced ;
var 2..36: aux2116:: var_is_introduced ;
var bool: aux2117_BOOL:: var_is_introduced ;
var bool: aux2118_BOOL:: var_is_introduced ;
var bool: aux2119_BOOL:: var_is_introduced ;
var {0,1}: aux2119_INTEGER :: var_is_introduced ;
var bool: aux2120_BOOL:: var_is_introduced ;
var bool: aux2121_BOOL:: var_is_introduced ;
var 1..35: aux2122:: var_is_introduced ;
var bool: aux2123_BOOL:: var_is_introduced ;
var bool: aux2124_BOOL:: var_is_introduced ;
var bool: aux2125_BOOL:: var_is_introduced ;
var {0,1}: aux2125_INTEGER :: var_is_introduced ;
var bool: aux2126_BOOL:: var_is_introduced ;
var bool: aux2127_BOOL:: var_is_introduced ;
var 4..38: aux2128:: var_is_introduced ;
var bool: aux2129_BOOL:: var_is_introduced ;
var bool: aux2130_BOOL:: var_is_introduced ;
var bool: aux2131_BOOL:: var_is_introduced ;
var {0,1}: aux2131_INTEGER :: var_is_introduced ;
var bool: aux2132_BOOL:: var_is_introduced ;
var bool: aux2133_BOOL:: var_is_introduced ;
var 2..36: aux2134:: var_is_introduced ;
var bool: aux2135_BOOL:: var_is_introduced ;
var bool: aux2136_BOOL:: var_is_introduced ;
var bool: aux2137_BOOL:: var_is_introduced ;
var {0,1}: aux2137_INTEGER :: var_is_introduced ;
var bool: aux2138_BOOL:: var_is_introduced ;
var bool: aux2139_BOOL:: var_is_introduced ;
var 2..36: aux2140:: var_is_introduced ;
var bool: aux2141_BOOL:: var_is_introduced ;
var bool: aux2142_BOOL:: var_is_introduced ;
var bool: aux2143_BOOL:: var_is_introduced ;
var {0,1}: aux2143_INTEGER :: var_is_introduced ;
var bool: aux2144_BOOL:: var_is_introduced ;
var bool: aux2145_BOOL:: var_is_introduced ;
var 2..36: aux2146:: var_is_introduced ;
var bool: aux2147_BOOL:: var_is_introduced ;
var bool: aux2148_BOOL:: var_is_introduced ;
var bool: aux2149_BOOL:: var_is_introduced ;
var {0,1}: aux2149_INTEGER :: var_is_introduced ;
var bool: aux2150_BOOL:: var_is_introduced ;
var bool: aux2151_BOOL:: var_is_introduced ;
var 1..35: aux2152:: var_is_introduced ;
var bool: aux2153_BOOL:: var_is_introduced ;
var bool: aux2154_BOOL:: var_is_introduced ;
var bool: aux2155_BOOL:: var_is_introduced ;
var {0,1}: aux2155_INTEGER :: var_is_introduced ;
var bool: aux2156_BOOL:: var_is_introduced ;
var bool: aux2157_BOOL:: var_is_introduced ;
var 2..36: aux2158:: var_is_introduced ;
var bool: aux2159_BOOL:: var_is_introduced ;
var bool: aux2160_BOOL:: var_is_introduced ;
var bool: aux2161_BOOL:: var_is_introduced ;
var {0,1}: aux2161_INTEGER :: var_is_introduced ;
var bool: aux2162_BOOL:: var_is_introduced ;
var bool: aux2163_BOOL:: var_is_introduced ;
var 3..37: aux2164:: var_is_introduced ;
var bool: aux2165_BOOL:: var_is_introduced ;
var bool: aux2166_BOOL:: var_is_introduced ;
var bool: aux2167_BOOL:: var_is_introduced ;
var {0,1}: aux2167_INTEGER :: var_is_introduced ;
var bool: aux2168_BOOL:: var_is_introduced ;
var bool: aux2169_BOOL:: var_is_introduced ;
var 3..37: aux2170:: var_is_introduced ;
var bool: aux2171_BOOL:: var_is_introduced ;
var bool: aux2172_BOOL:: var_is_introduced ;
var bool: aux2173_BOOL:: var_is_introduced ;
var {0,1}: aux2173_INTEGER :: var_is_introduced ;
var bool: aux2174_BOOL:: var_is_introduced ;
var bool: aux2175_BOOL:: var_is_introduced ;
var 3..37: aux2176:: var_is_introduced ;
var bool: aux2177_BOOL:: var_is_introduced ;
var bool: aux2178_BOOL:: var_is_introduced ;
var {0,1}: aux2178_INTEGER :: var_is_introduced ;
var bool: aux2179_BOOL:: var_is_introduced ;
var bool: aux2180_BOOL:: var_is_introduced ;
var 2..36: aux2181:: var_is_introduced ;
var bool: aux2182_BOOL:: var_is_introduced ;
var bool: aux2183_BOOL:: var_is_introduced ;
var bool: aux2184_BOOL:: var_is_introduced ;
var {0,1}: aux2184_INTEGER :: var_is_introduced ;
var bool: aux2185_BOOL:: var_is_introduced ;
var bool: aux2186_BOOL:: var_is_introduced ;
var 6..40: aux2187:: var_is_introduced ;
var bool: aux2188_BOOL:: var_is_introduced ;
var bool: aux2189_BOOL:: var_is_introduced ;
var bool: aux2190_BOOL:: var_is_introduced ;
var {0,1}: aux2190_INTEGER :: var_is_introduced ;
var bool: aux2191_BOOL:: var_is_introduced ;
var bool: aux2192_BOOL:: var_is_introduced ;
var 1..35: aux2193:: var_is_introduced ;
var bool: aux2194_BOOL:: var_is_introduced ;
var bool: aux2195_BOOL:: var_is_introduced ;
var bool: aux2196_BOOL:: var_is_introduced ;
var {0,1}: aux2196_INTEGER :: var_is_introduced ;
var bool: aux2197_BOOL:: var_is_introduced ;
var bool: aux2198_BOOL:: var_is_introduced ;
var 2..36: aux2199:: var_is_introduced ;
var bool: aux2200_BOOL:: var_is_introduced ;
var bool: aux2201_BOOL:: var_is_introduced ;
var bool: aux2202_BOOL:: var_is_introduced ;
var {0,1}: aux2202_INTEGER :: var_is_introduced ;
var bool: aux2203_BOOL:: var_is_introduced ;
var bool: aux2204_BOOL:: var_is_introduced ;
var 1..35: aux2205:: var_is_introduced ;
var bool: aux2206_BOOL:: var_is_introduced ;
var bool: aux2207_BOOL:: var_is_introduced ;
var bool: aux2208_BOOL:: var_is_introduced ;
var {0,1}: aux2208_INTEGER :: var_is_introduced ;
var bool: aux2209_BOOL:: var_is_introduced ;
var bool: aux2210_BOOL:: var_is_introduced ;
var 4..38: aux2211:: var_is_introduced ;
var bool: aux2212_BOOL:: var_is_introduced ;
var bool: aux2213_BOOL:: var_is_introduced ;
var bool: aux2214_BOOL:: var_is_introduced ;
var {0,1}: aux2214_INTEGER :: var_is_introduced ;
var bool: aux2215_BOOL:: var_is_introduced ;
var bool: aux2216_BOOL:: var_is_introduced ;
var 2..36: aux2217:: var_is_introduced ;
var bool: aux2218_BOOL:: var_is_introduced ;
var bool: aux2219_BOOL:: var_is_introduced ;
var bool: aux2220_BOOL:: var_is_introduced ;
var {0,1}: aux2220_INTEGER :: var_is_introduced ;
var bool: aux2221_BOOL:: var_is_introduced ;
var bool: aux2222_BOOL:: var_is_introduced ;
var 2..36: aux2223:: var_is_introduced ;
var bool: aux2224_BOOL:: var_is_introduced ;
var bool: aux2225_BOOL:: var_is_introduced ;
var bool: aux2226_BOOL:: var_is_introduced ;
var {0,1}: aux2226_INTEGER :: var_is_introduced ;
var bool: aux2227_BOOL:: var_is_introduced ;
var bool: aux2228_BOOL:: var_is_introduced ;
var 2..36: aux2229:: var_is_introduced ;
var bool: aux2230_BOOL:: var_is_introduced ;
var bool: aux2231_BOOL:: var_is_introduced ;
var bool: aux2232_BOOL:: var_is_introduced ;
var {0,1}: aux2232_INTEGER :: var_is_introduced ;
var bool: aux2233_BOOL:: var_is_introduced ;
var bool: aux2234_BOOL:: var_is_introduced ;
var 1..35: aux2235:: var_is_introduced ;
var bool: aux2236_BOOL:: var_is_introduced ;
var bool: aux2237_BOOL:: var_is_introduced ;
var bool: aux2238_BOOL:: var_is_introduced ;
var {0,1}: aux2238_INTEGER :: var_is_introduced ;
var bool: aux2239_BOOL:: var_is_introduced ;
var bool: aux2240_BOOL:: var_is_introduced ;
var 2..36: aux2241:: var_is_introduced ;
var bool: aux2242_BOOL:: var_is_introduced ;
var bool: aux2243_BOOL:: var_is_introduced ;
var bool: aux2244_BOOL:: var_is_introduced ;
var {0,1}: aux2244_INTEGER :: var_is_introduced ;
var bool: aux2245_BOOL:: var_is_introduced ;
var bool: aux2246_BOOL:: var_is_introduced ;
var 3..37: aux2247:: var_is_introduced ;
var bool: aux2248_BOOL:: var_is_introduced ;
var bool: aux2249_BOOL:: var_is_introduced ;
var bool: aux2250_BOOL:: var_is_introduced ;
var {0,1}: aux2250_INTEGER :: var_is_introduced ;
var bool: aux2251_BOOL:: var_is_introduced ;
var bool: aux2252_BOOL:: var_is_introduced ;
var 3..37: aux2253:: var_is_introduced ;
var bool: aux2254_BOOL:: var_is_introduced ;
var bool: aux2255_BOOL:: var_is_introduced ;
var bool: aux2256_BOOL:: var_is_introduced ;
var {0,1}: aux2256_INTEGER :: var_is_introduced ;
var bool: aux2257_BOOL:: var_is_introduced ;
var bool: aux2258_BOOL:: var_is_introduced ;
var 4..38: aux2259:: var_is_introduced ;
var bool: aux2260_BOOL:: var_is_introduced ;
var bool: aux2261_BOOL:: var_is_introduced ;
var {0,1}: aux2261_INTEGER :: var_is_introduced ;
var bool: aux2262_BOOL:: var_is_introduced ;
var bool: aux2263_BOOL:: var_is_introduced ;
var 2..36: aux2264:: var_is_introduced ;
var bool: aux2265_BOOL:: var_is_introduced ;
var bool: aux2266_BOOL:: var_is_introduced ;
var bool: aux2267_BOOL:: var_is_introduced ;
var {0,1}: aux2267_INTEGER :: var_is_introduced ;
var bool: aux2268_BOOL:: var_is_introduced ;
var bool: aux2269_BOOL:: var_is_introduced ;
var 6..40: aux2270:: var_is_introduced ;
var bool: aux2271_BOOL:: var_is_introduced ;
var bool: aux2272_BOOL:: var_is_introduced ;
var bool: aux2273_BOOL:: var_is_introduced ;
var {0,1}: aux2273_INTEGER :: var_is_introduced ;
var bool: aux2274_BOOL:: var_is_introduced ;
var bool: aux2275_BOOL:: var_is_introduced ;
var 1..35: aux2276:: var_is_introduced ;
var bool: aux2277_BOOL:: var_is_introduced ;
var bool: aux2278_BOOL:: var_is_introduced ;
var bool: aux2279_BOOL:: var_is_introduced ;
var {0,1}: aux2279_INTEGER :: var_is_introduced ;
var bool: aux2280_BOOL:: var_is_introduced ;
var bool: aux2281_BOOL:: var_is_introduced ;
var 2..36: aux2282:: var_is_introduced ;
var bool: aux2283_BOOL:: var_is_introduced ;
var bool: aux2284_BOOL:: var_is_introduced ;
var bool: aux2285_BOOL:: var_is_introduced ;
var {0,1}: aux2285_INTEGER :: var_is_introduced ;
var bool: aux2286_BOOL:: var_is_introduced ;
var bool: aux2287_BOOL:: var_is_introduced ;
var 1..35: aux2288:: var_is_introduced ;
var bool: aux2289_BOOL:: var_is_introduced ;
var bool: aux2290_BOOL:: var_is_introduced ;
var bool: aux2291_BOOL:: var_is_introduced ;
var {0,1}: aux2291_INTEGER :: var_is_introduced ;
var bool: aux2292_BOOL:: var_is_introduced ;
var bool: aux2293_BOOL:: var_is_introduced ;
var 2..36: aux2294:: var_is_introduced ;
var bool: aux2295_BOOL:: var_is_introduced ;
var bool: aux2296_BOOL:: var_is_introduced ;
var bool: aux2297_BOOL:: var_is_introduced ;
var {0,1}: aux2297_INTEGER :: var_is_introduced ;
var bool: aux2298_BOOL:: var_is_introduced ;
var bool: aux2299_BOOL:: var_is_introduced ;
var 2..36: aux2300:: var_is_introduced ;
var bool: aux2301_BOOL:: var_is_introduced ;
var bool: aux2302_BOOL:: var_is_introduced ;
var bool: aux2303_BOOL:: var_is_introduced ;
var {0,1}: aux2303_INTEGER :: var_is_introduced ;
var bool: aux2304_BOOL:: var_is_introduced ;
var bool: aux2305_BOOL:: var_is_introduced ;
var 2..36: aux2306:: var_is_introduced ;
var bool: aux2307_BOOL:: var_is_introduced ;
var bool: aux2308_BOOL:: var_is_introduced ;
var bool: aux2309_BOOL:: var_is_introduced ;
var {0,1}: aux2309_INTEGER :: var_is_introduced ;
var bool: aux2310_BOOL:: var_is_introduced ;
var bool: aux2311_BOOL:: var_is_introduced ;
var 1..35: aux2312:: var_is_introduced ;
var bool: aux2313_BOOL:: var_is_introduced ;
var bool: aux2314_BOOL:: var_is_introduced ;
var bool: aux2315_BOOL:: var_is_introduced ;
var {0,1}: aux2315_INTEGER :: var_is_introduced ;
var bool: aux2316_BOOL:: var_is_introduced ;
var bool: aux2317_BOOL:: var_is_introduced ;
var 2..36: aux2318:: var_is_introduced ;
var bool: aux2319_BOOL:: var_is_introduced ;
var bool: aux2320_BOOL:: var_is_introduced ;
var bool: aux2321_BOOL:: var_is_introduced ;
var {0,1}: aux2321_INTEGER :: var_is_introduced ;
var bool: aux2322_BOOL:: var_is_introduced ;
var bool: aux2323_BOOL:: var_is_introduced ;
var 3..37: aux2324:: var_is_introduced ;
var bool: aux2325_BOOL:: var_is_introduced ;
var bool: aux2326_BOOL:: var_is_introduced ;
var bool: aux2327_BOOL:: var_is_introduced ;
var {0,1}: aux2327_INTEGER :: var_is_introduced ;
var bool: aux2328_BOOL:: var_is_introduced ;
var bool: aux2329_BOOL:: var_is_introduced ;
var 3..37: aux2330:: var_is_introduced ;
var bool: aux2331_BOOL:: var_is_introduced ;
var bool: aux2332_BOOL:: var_is_introduced ;
var bool: aux2333_BOOL:: var_is_introduced ;
var {0,1}: aux2333_INTEGER :: var_is_introduced ;
var bool: aux2334_BOOL:: var_is_introduced ;
var bool: aux2335_BOOL:: var_is_introduced ;
var 3..37: aux2336:: var_is_introduced ;
var bool: aux2337_BOOL:: var_is_introduced ;
var bool: aux2338_BOOL:: var_is_introduced ;
var bool: aux2339_BOOL:: var_is_introduced ;
var {0,1}: aux2339_INTEGER :: var_is_introduced ;
var bool: aux2340_BOOL:: var_is_introduced ;
var bool: aux2341_BOOL:: var_is_introduced ;
var 1..35: aux2342:: var_is_introduced ;
var bool: aux2343_BOOL:: var_is_introduced ;
var bool: aux2344_BOOL:: var_is_introduced ;
var {0,1}: aux2344_INTEGER :: var_is_introduced ;
var bool: aux2345_BOOL:: var_is_introduced ;
var bool: aux2346_BOOL:: var_is_introduced ;
var 2..36: aux2347:: var_is_introduced ;
var bool: aux2348_BOOL:: var_is_introduced ;
var bool: aux2349_BOOL:: var_is_introduced ;
var bool: aux2350_BOOL:: var_is_introduced ;
var {0,1}: aux2350_INTEGER :: var_is_introduced ;
var bool: aux2351_BOOL:: var_is_introduced ;
var bool: aux2352_BOOL:: var_is_introduced ;
var 6..40: aux2353:: var_is_introduced ;
var bool: aux2354_BOOL:: var_is_introduced ;
var bool: aux2355_BOOL:: var_is_introduced ;
var bool: aux2356_BOOL:: var_is_introduced ;
var {0,1}: aux2356_INTEGER :: var_is_introduced ;
var bool: aux2357_BOOL:: var_is_introduced ;
var bool: aux2358_BOOL:: var_is_introduced ;
var 1..35: aux2359:: var_is_introduced ;
var bool: aux2360_BOOL:: var_is_introduced ;
var bool: aux2361_BOOL:: var_is_introduced ;
var bool: aux2362_BOOL:: var_is_introduced ;
var {0,1}: aux2362_INTEGER :: var_is_introduced ;
var bool: aux2363_BOOL:: var_is_introduced ;
var bool: aux2364_BOOL:: var_is_introduced ;
var 2..36: aux2365:: var_is_introduced ;
var bool: aux2366_BOOL:: var_is_introduced ;
var bool: aux2367_BOOL:: var_is_introduced ;
var bool: aux2368_BOOL:: var_is_introduced ;
var {0,1}: aux2368_INTEGER :: var_is_introduced ;
var bool: aux2369_BOOL:: var_is_introduced ;
var bool: aux2370_BOOL:: var_is_introduced ;
var 1..35: aux2371:: var_is_introduced ;
var bool: aux2372_BOOL:: var_is_introduced ;
var bool: aux2373_BOOL:: var_is_introduced ;
var bool: aux2374_BOOL:: var_is_introduced ;
var {0,1}: aux2374_INTEGER :: var_is_introduced ;
var bool: aux2375_BOOL:: var_is_introduced ;
var bool: aux2376_BOOL:: var_is_introduced ;
var 4..38: aux2377:: var_is_introduced ;
var bool: aux2378_BOOL:: var_is_introduced ;
var bool: aux2379_BOOL:: var_is_introduced ;
var bool: aux2380_BOOL:: var_is_introduced ;
var {0,1}: aux2380_INTEGER :: var_is_introduced ;
var bool: aux2381_BOOL:: var_is_introduced ;
var bool: aux2382_BOOL:: var_is_introduced ;
var 2..36: aux2383:: var_is_introduced ;
var bool: aux2384_BOOL:: var_is_introduced ;
var bool: aux2385_BOOL:: var_is_introduced ;
var bool: aux2386_BOOL:: var_is_introduced ;
var {0,1}: aux2386_INTEGER :: var_is_introduced ;
var bool: aux2387_BOOL:: var_is_introduced ;
var bool: aux2388_BOOL:: var_is_introduced ;
var 2..36: aux2389:: var_is_introduced ;
var bool: aux2390_BOOL:: var_is_introduced ;
var bool: aux2391_BOOL:: var_is_introduced ;
var bool: aux2392_BOOL:: var_is_introduced ;
var {0,1}: aux2392_INTEGER :: var_is_introduced ;
var bool: aux2393_BOOL:: var_is_introduced ;
var bool: aux2394_BOOL:: var_is_introduced ;
var 2..36: aux2395:: var_is_introduced ;
var bool: aux2396_BOOL:: var_is_introduced ;
var bool: aux2397_BOOL:: var_is_introduced ;
var bool: aux2398_BOOL:: var_is_introduced ;
var {0,1}: aux2398_INTEGER :: var_is_introduced ;
var bool: aux2399_BOOL:: var_is_introduced ;
var bool: aux2400_BOOL:: var_is_introduced ;
var 2..36: aux2401:: var_is_introduced ;
var bool: aux2402_BOOL:: var_is_introduced ;
var bool: aux2403_BOOL:: var_is_introduced ;
var bool: aux2404_BOOL:: var_is_introduced ;
var {0,1}: aux2404_INTEGER :: var_is_introduced ;
var bool: aux2405_BOOL:: var_is_introduced ;
var bool: aux2406_BOOL:: var_is_introduced ;
var 3..37: aux2407:: var_is_introduced ;
var bool: aux2408_BOOL:: var_is_introduced ;
var bool: aux2409_BOOL:: var_is_introduced ;
var bool: aux2410_BOOL:: var_is_introduced ;
var {0,1}: aux2410_INTEGER :: var_is_introduced ;
var bool: aux2411_BOOL:: var_is_introduced ;
var bool: aux2412_BOOL:: var_is_introduced ;
var 3..37: aux2413:: var_is_introduced ;
var bool: aux2414_BOOL:: var_is_introduced ;
var bool: aux2415_BOOL:: var_is_introduced ;
var bool: aux2416_BOOL:: var_is_introduced ;
var {0,1}: aux2416_INTEGER :: var_is_introduced ;
var bool: aux2417_BOOL:: var_is_introduced ;
var bool: aux2418_BOOL:: var_is_introduced ;
var 3..37: aux2419:: var_is_introduced ;
var bool: aux2420_BOOL:: var_is_introduced ;
var bool: aux2421_BOOL:: var_is_introduced ;
var bool: aux2422_BOOL:: var_is_introduced ;
var {0,1}: aux2422_INTEGER :: var_is_introduced ;
var bool: aux2423_BOOL:: var_is_introduced ;
var bool: aux2424_BOOL:: var_is_introduced ;
var 2..36: aux2425:: var_is_introduced ;
var bool: aux2426_BOOL:: var_is_introduced ;
var bool: aux2427_BOOL:: var_is_introduced ;
var {0,1}: aux2427_INTEGER :: var_is_introduced ;
var bool: aux2428_BOOL:: var_is_introduced ;
var bool: aux2429_BOOL:: var_is_introduced ;
var 2..36: aux2430:: var_is_introduced ;
var bool: aux2431_BOOL:: var_is_introduced ;
var bool: aux2432_BOOL:: var_is_introduced ;
var bool: aux2433_BOOL:: var_is_introduced ;
var {0,1}: aux2433_INTEGER :: var_is_introduced ;
var bool: aux2434_BOOL:: var_is_introduced ;
var bool: aux2435_BOOL:: var_is_introduced ;
var 6..40: aux2436:: var_is_introduced ;
var bool: aux2437_BOOL:: var_is_introduced ;
var bool: aux2438_BOOL:: var_is_introduced ;
var bool: aux2439_BOOL:: var_is_introduced ;
var {0,1}: aux2439_INTEGER :: var_is_introduced ;
var bool: aux2440_BOOL:: var_is_introduced ;
var bool: aux2441_BOOL:: var_is_introduced ;
var 1..35: aux2442:: var_is_introduced ;
var bool: aux2443_BOOL:: var_is_introduced ;
var bool: aux2444_BOOL:: var_is_introduced ;
var bool: aux2445_BOOL:: var_is_introduced ;
var {0,1}: aux2445_INTEGER :: var_is_introduced ;
var bool: aux2446_BOOL:: var_is_introduced ;
var bool: aux2447_BOOL:: var_is_introduced ;
var 2..36: aux2448:: var_is_introduced ;
var bool: aux2449_BOOL:: var_is_introduced ;
var bool: aux2450_BOOL:: var_is_introduced ;
var bool: aux2451_BOOL:: var_is_introduced ;
var {0,1}: aux2451_INTEGER :: var_is_introduced ;
var bool: aux2452_BOOL:: var_is_introduced ;
var bool: aux2453_BOOL:: var_is_introduced ;
var 1..35: aux2454:: var_is_introduced ;
var bool: aux2455_BOOL:: var_is_introduced ;
var bool: aux2456_BOOL:: var_is_introduced ;
var bool: aux2457_BOOL:: var_is_introduced ;
var {0,1}: aux2457_INTEGER :: var_is_introduced ;
var bool: aux2458_BOOL:: var_is_introduced ;
var bool: aux2459_BOOL:: var_is_introduced ;
var 4..38: aux2460:: var_is_introduced ;
var bool: aux2461_BOOL:: var_is_introduced ;
var bool: aux2462_BOOL:: var_is_introduced ;
var bool: aux2463_BOOL:: var_is_introduced ;
var {0,1}: aux2463_INTEGER :: var_is_introduced ;
var bool: aux2464_BOOL:: var_is_introduced ;
var bool: aux2465_BOOL:: var_is_introduced ;
var 2..36: aux2466:: var_is_introduced ;
var bool: aux2467_BOOL:: var_is_introduced ;
var bool: aux2468_BOOL:: var_is_introduced ;
var bool: aux2469_BOOL:: var_is_introduced ;
var {0,1}: aux2469_INTEGER :: var_is_introduced ;
var bool: aux2470_BOOL:: var_is_introduced ;
var bool: aux2471_BOOL:: var_is_introduced ;
var 2..36: aux2472:: var_is_introduced ;
var bool: aux2473_BOOL:: var_is_introduced ;
var bool: aux2474_BOOL:: var_is_introduced ;
var bool: aux2475_BOOL:: var_is_introduced ;
var {0,1}: aux2475_INTEGER :: var_is_introduced ;
var bool: aux2476_BOOL:: var_is_introduced ;
var bool: aux2477_BOOL:: var_is_introduced ;
var 1..35: aux2478:: var_is_introduced ;
var bool: aux2479_BOOL:: var_is_introduced ;
var bool: aux2480_BOOL:: var_is_introduced ;
var bool: aux2481_BOOL:: var_is_introduced ;
var {0,1}: aux2481_INTEGER :: var_is_introduced ;
var bool: aux2482_BOOL:: var_is_introduced ;
var bool: aux2483_BOOL:: var_is_introduced ;
var 2..36: aux2484:: var_is_introduced ;
var bool: aux2485_BOOL:: var_is_introduced ;
var bool: aux2486_BOOL:: var_is_introduced ;
var bool: aux2487_BOOL:: var_is_introduced ;
var {0,1}: aux2487_INTEGER :: var_is_introduced ;
var bool: aux2488_BOOL:: var_is_introduced ;
var bool: aux2489_BOOL:: var_is_introduced ;
var 3..37: aux2490:: var_is_introduced ;
var bool: aux2491_BOOL:: var_is_introduced ;
var bool: aux2492_BOOL:: var_is_introduced ;
var bool: aux2493_BOOL:: var_is_introduced ;
var {0,1}: aux2493_INTEGER :: var_is_introduced ;
var bool: aux2494_BOOL:: var_is_introduced ;
var bool: aux2495_BOOL:: var_is_introduced ;
var 3..37: aux2496:: var_is_introduced ;
var bool: aux2497_BOOL:: var_is_introduced ;
var bool: aux2498_BOOL:: var_is_introduced ;
var bool: aux2499_BOOL:: var_is_introduced ;
var {0,1}: aux2499_INTEGER :: var_is_introduced ;
var bool: aux2500_BOOL:: var_is_introduced ;
var bool: aux2501_BOOL:: var_is_introduced ;
var 3..37: aux2502:: var_is_introduced ;
var bool: aux2503_BOOL:: var_is_introduced ;
var bool: aux2504_BOOL:: var_is_introduced ;
var bool: aux2505_BOOL:: var_is_introduced ;
var {0,1}: aux2505_INTEGER :: var_is_introduced ;
var bool: aux2506_BOOL:: var_is_introduced ;
var bool: aux2507_BOOL:: var_is_introduced ;
var 3..37: aux2508:: var_is_introduced ;
var bool: aux2509_BOOL:: var_is_introduced ;
var bool: aux2510_BOOL:: var_is_introduced ;
var {0,1}: aux2510_INTEGER :: var_is_introduced ;
var bool: aux2511_BOOL:: var_is_introduced ;
var bool: aux2512_BOOL:: var_is_introduced ;
var 2..36: aux2513:: var_is_introduced ;
var bool: aux2514_BOOL:: var_is_introduced ;
var bool: aux2515_BOOL:: var_is_introduced ;
var bool: aux2516_BOOL:: var_is_introduced ;
var {0,1}: aux2516_INTEGER :: var_is_introduced ;
var bool: aux2517_BOOL:: var_is_introduced ;
var bool: aux2518_BOOL:: var_is_introduced ;
var 6..40: aux2519:: var_is_introduced ;
var bool: aux2520_BOOL:: var_is_introduced ;
var bool: aux2521_BOOL:: var_is_introduced ;
var bool: aux2522_BOOL:: var_is_introduced ;
var {0,1}: aux2522_INTEGER :: var_is_introduced ;
var bool: aux2523_BOOL:: var_is_introduced ;
var bool: aux2524_BOOL:: var_is_introduced ;
var 1..35: aux2525:: var_is_introduced ;
var bool: aux2526_BOOL:: var_is_introduced ;
var bool: aux2527_BOOL:: var_is_introduced ;
var bool: aux2528_BOOL:: var_is_introduced ;
var {0,1}: aux2528_INTEGER :: var_is_introduced ;
var bool: aux2529_BOOL:: var_is_introduced ;
var bool: aux2530_BOOL:: var_is_introduced ;
var 2..36: aux2531:: var_is_introduced ;
var bool: aux2532_BOOL:: var_is_introduced ;
var bool: aux2533_BOOL:: var_is_introduced ;
var bool: aux2534_BOOL:: var_is_introduced ;
var {0,1}: aux2534_INTEGER :: var_is_introduced ;
var bool: aux2535_BOOL:: var_is_introduced ;
var bool: aux2536_BOOL:: var_is_introduced ;
var 1..35: aux2537:: var_is_introduced ;
var bool: aux2538_BOOL:: var_is_introduced ;
var bool: aux2539_BOOL:: var_is_introduced ;
var bool: aux2540_BOOL:: var_is_introduced ;
var {0,1}: aux2540_INTEGER :: var_is_introduced ;
var bool: aux2541_BOOL:: var_is_introduced ;
var bool: aux2542_BOOL:: var_is_introduced ;
var 4..38: aux2543:: var_is_introduced ;
var bool: aux2544_BOOL:: var_is_introduced ;
var bool: aux2545_BOOL:: var_is_introduced ;
var bool: aux2546_BOOL:: var_is_introduced ;
var {0,1}: aux2546_INTEGER :: var_is_introduced ;
var bool: aux2547_BOOL:: var_is_introduced ;
var bool: aux2548_BOOL:: var_is_introduced ;
var 2..36: aux2549:: var_is_introduced ;
var bool: aux2550_BOOL:: var_is_introduced ;
var bool: aux2551_BOOL:: var_is_introduced ;
var bool: aux2552_BOOL:: var_is_introduced ;
var {0,1}: aux2552_INTEGER :: var_is_introduced ;
var bool: aux2553_BOOL:: var_is_introduced ;
var bool: aux2554_BOOL:: var_is_introduced ;
var 2..36: aux2555:: var_is_introduced ;
var bool: aux2556_BOOL:: var_is_introduced ;
var bool: aux2557_BOOL:: var_is_introduced ;
var bool: aux2558_BOOL:: var_is_introduced ;
var {0,1}: aux2558_INTEGER :: var_is_introduced ;
var bool: aux2559_BOOL:: var_is_introduced ;
var bool: aux2560_BOOL:: var_is_introduced ;
var 2..36: aux2561:: var_is_introduced ;
var bool: aux2562_BOOL:: var_is_introduced ;
var bool: aux2563_BOOL:: var_is_introduced ;
var bool: aux2564_BOOL:: var_is_introduced ;
var {0,1}: aux2564_INTEGER :: var_is_introduced ;
var bool: aux2565_BOOL:: var_is_introduced ;
var bool: aux2566_BOOL:: var_is_introduced ;
var 1..35: aux2567:: var_is_introduced ;
var bool: aux2568_BOOL:: var_is_introduced ;
var bool: aux2569_BOOL:: var_is_introduced ;
var bool: aux2570_BOOL:: var_is_introduced ;
var {0,1}: aux2570_INTEGER :: var_is_introduced ;
var bool: aux2571_BOOL:: var_is_introduced ;
var bool: aux2572_BOOL:: var_is_introduced ;
var 2..36: aux2573:: var_is_introduced ;
var bool: aux2574_BOOL:: var_is_introduced ;
var bool: aux2575_BOOL:: var_is_introduced ;
var bool: aux2576_BOOL:: var_is_introduced ;
var {0,1}: aux2576_INTEGER :: var_is_introduced ;
var bool: aux2577_BOOL:: var_is_introduced ;
var bool: aux2578_BOOL:: var_is_introduced ;
var 3..37: aux2579:: var_is_introduced ;
var bool: aux2580_BOOL:: var_is_introduced ;
var bool: aux2581_BOOL:: var_is_introduced ;
var bool: aux2582_BOOL:: var_is_introduced ;
var {0,1}: aux2582_INTEGER :: var_is_introduced ;
var bool: aux2583_BOOL:: var_is_introduced ;
var bool: aux2584_BOOL:: var_is_introduced ;
var 3..37: aux2585:: var_is_introduced ;
var bool: aux2586_BOOL:: var_is_introduced ;
var bool: aux2587_BOOL:: var_is_introduced ;
var bool: aux2588_BOOL:: var_is_introduced ;
var {0,1}: aux2588_INTEGER :: var_is_introduced ;
var bool: aux2589_BOOL:: var_is_introduced ;
var bool: aux2590_BOOL:: var_is_introduced ;
var bool: aux2591_BOOL:: var_is_introduced ;
var bool: aux2592_BOOL:: var_is_introduced ;
var 2..36: aux2593:: var_is_introduced ;
var bool: aux2594_BOOL:: var_is_introduced ;
var bool: aux2595_BOOL:: var_is_introduced ;
var bool: aux2596_BOOL:: var_is_introduced ;
var bool: aux2597_BOOL:: var_is_introduced ;
var bool: aux2598_BOOL:: var_is_introduced ;
var {0,1}: aux2598_INTEGER :: var_is_introduced ;
var 2..36: aux2599:: var_is_introduced ;
var bool: aux2600_BOOL:: var_is_introduced ;
var bool: aux2601_BOOL:: var_is_introduced ;
var bool: aux2602_BOOL:: var_is_introduced ;
var bool: aux2603_BOOL:: var_is_introduced ;
var bool: aux2604_BOOL:: var_is_introduced ;
var {0,1}: aux2604_INTEGER :: var_is_introduced ;
var 1..35: aux2605:: var_is_introduced ;
var bool: aux2606_BOOL:: var_is_introduced ;
var bool: aux2607_BOOL:: var_is_introduced ;
var bool: aux2608_BOOL:: var_is_introduced ;
var bool: aux2609_BOOL:: var_is_introduced ;
var bool: aux2610_BOOL:: var_is_introduced ;
var {0,1}: aux2610_INTEGER :: var_is_introduced ;
var 6..40: aux2611:: var_is_introduced ;
var bool: aux2612_BOOL:: var_is_introduced ;
var bool: aux2613_BOOL:: var_is_introduced ;
var bool: aux2614_BOOL:: var_is_introduced ;
var bool: aux2615_BOOL:: var_is_introduced ;
var bool: aux2616_BOOL:: var_is_introduced ;
var {0,1}: aux2616_INTEGER :: var_is_introduced ;
var 2..36: aux2617:: var_is_introduced ;
var bool: aux2618_BOOL:: var_is_introduced ;
var bool: aux2619_BOOL:: var_is_introduced ;
var bool: aux2620_BOOL:: var_is_introduced ;
var bool: aux2621_BOOL:: var_is_introduced ;
var bool: aux2622_BOOL:: var_is_introduced ;
var {0,1}: aux2622_INTEGER :: var_is_introduced ;
var 4..38: aux2623:: var_is_introduced ;
var bool: aux2624_BOOL:: var_is_introduced ;
var bool: aux2625_BOOL:: var_is_introduced ;
var bool: aux2626_BOOL:: var_is_introduced ;
var bool: aux2627_BOOL:: var_is_introduced ;
var bool: aux2628_BOOL:: var_is_introduced ;
var {0,1}: aux2628_INTEGER :: var_is_introduced ;
var 2..36: aux2629:: var_is_introduced ;
var bool: aux2630_BOOL:: var_is_introduced ;
var bool: aux2631_BOOL:: var_is_introduced ;
var bool: aux2632_BOOL:: var_is_introduced ;
var bool: aux2633_BOOL:: var_is_introduced ;
var bool: aux2634_BOOL:: var_is_introduced ;
var {0,1}: aux2634_INTEGER :: var_is_introduced ;
var 2..36: aux2635:: var_is_introduced ;
var bool: aux2636_BOOL:: var_is_introduced ;
var bool: aux2637_BOOL:: var_is_introduced ;
var bool: aux2638_BOOL:: var_is_introduced ;
var bool: aux2639_BOOL:: var_is_introduced ;
var bool: aux2640_BOOL:: var_is_introduced ;
var {0,1}: aux2640_INTEGER :: var_is_introduced ;
var 1..35: aux2641:: var_is_introduced ;
var bool: aux2642_BOOL:: var_is_introduced ;
var bool: aux2643_BOOL:: var_is_introduced ;
var bool: aux2644_BOOL:: var_is_introduced ;
var bool: aux2645_BOOL:: var_is_introduced ;
var bool: aux2646_BOOL:: var_is_introduced ;
var {0,1}: aux2646_INTEGER :: var_is_introduced ;
var 2..36: aux2647:: var_is_introduced ;
var bool: aux2648_BOOL:: var_is_introduced ;
var bool: aux2649_BOOL:: var_is_introduced ;
var bool: aux2650_BOOL:: var_is_introduced ;
var bool: aux2651_BOOL:: var_is_introduced ;
var bool: aux2652_BOOL:: var_is_introduced ;
var {0,1}: aux2652_INTEGER :: var_is_introduced ;
var 3..37: aux2653:: var_is_introduced ;
var bool: aux2654_BOOL:: var_is_introduced ;
var bool: aux2655_BOOL:: var_is_introduced ;
var bool: aux2656_BOOL:: var_is_introduced ;
var bool: aux2657_BOOL:: var_is_introduced ;
var bool: aux2658_BOOL:: var_is_introduced ;
var {0,1}: aux2658_INTEGER :: var_is_introduced ;
var 3..37: aux2659:: var_is_introduced ;
var bool: aux2660_BOOL:: var_is_introduced ;
var bool: aux2661_BOOL:: var_is_introduced ;
var bool: aux2662_BOOL:: var_is_introduced ;
var bool: aux2663_BOOL:: var_is_introduced ;
var bool: aux2664_BOOL:: var_is_introduced ;
var {0,1}: aux2664_INTEGER :: var_is_introduced ;
var 3..37: aux2665:: var_is_introduced ;
var bool: aux2666_BOOL:: var_is_introduced ;
var bool: aux2667_BOOL:: var_is_introduced ;
var bool: aux2668_BOOL:: var_is_introduced ;
var bool: aux2669_BOOL:: var_is_introduced ;
var bool: aux2670_BOOL:: var_is_introduced ;
var {0,1}: aux2670_INTEGER :: var_is_introduced ;
var 1..35: aux2671:: var_is_introduced ;
var bool: aux2672_BOOL:: var_is_introduced ;
var bool: aux2673_BOOL:: var_is_introduced ;
var bool: aux2674_BOOL:: var_is_introduced ;
var {0,1}: aux2674_INTEGER :: var_is_introduced ;
var bool: aux2675_BOOL:: var_is_introduced ;
var 2..36: aux2676:: var_is_introduced ;
var bool: aux2677_BOOL:: var_is_introduced ;
var bool: aux2678_BOOL:: var_is_introduced ;
var bool: aux2679_BOOL:: var_is_introduced ;
var bool: aux2680_BOOL:: var_is_introduced ;
var bool: aux2681_BOOL:: var_is_introduced ;
var {0,1}: aux2681_INTEGER :: var_is_introduced ;
var 1..35: aux2682:: var_is_introduced ;
var bool: aux2683_BOOL:: var_is_introduced ;
var bool: aux2684_BOOL:: var_is_introduced ;
var bool: aux2685_BOOL:: var_is_introduced ;
var bool: aux2686_BOOL:: var_is_introduced ;
var bool: aux2687_BOOL:: var_is_introduced ;
var {0,1}: aux2687_INTEGER :: var_is_introduced ;
var 2..36: aux2688:: var_is_introduced ;
var bool: aux2689_BOOL:: var_is_introduced ;
var bool: aux2690_BOOL:: var_is_introduced ;
var bool: aux2691_BOOL:: var_is_introduced ;
var bool: aux2692_BOOL:: var_is_introduced ;
var bool: aux2693_BOOL:: var_is_introduced ;
var {0,1}: aux2693_INTEGER :: var_is_introduced ;
var 1..35: aux2694:: var_is_introduced ;
var bool: aux2695_BOOL:: var_is_introduced ;
var bool: aux2696_BOOL:: var_is_introduced ;
var bool: aux2697_BOOL:: var_is_introduced ;
var bool: aux2698_BOOL:: var_is_introduced ;
var bool: aux2699_BOOL:: var_is_introduced ;
var {0,1}: aux2699_INTEGER :: var_is_introduced ;
var 6..40: aux2700:: var_is_introduced ;
var bool: aux2701_BOOL:: var_is_introduced ;
var bool: aux2702_BOOL:: var_is_introduced ;
var bool: aux2703_BOOL:: var_is_introduced ;
var bool: aux2704_BOOL:: var_is_introduced ;
var bool: aux2705_BOOL:: var_is_introduced ;
var {0,1}: aux2705_INTEGER :: var_is_introduced ;
var 2..36: aux2706:: var_is_introduced ;
var bool: aux2707_BOOL:: var_is_introduced ;
var bool: aux2708_BOOL:: var_is_introduced ;
var bool: aux2709_BOOL:: var_is_introduced ;
var bool: aux2710_BOOL:: var_is_introduced ;
var bool: aux2711_BOOL:: var_is_introduced ;
var {0,1}: aux2711_INTEGER :: var_is_introduced ;
var 4..38: aux2712:: var_is_introduced ;
var bool: aux2713_BOOL:: var_is_introduced ;
var bool: aux2714_BOOL:: var_is_introduced ;
var bool: aux2715_BOOL:: var_is_introduced ;
var bool: aux2716_BOOL:: var_is_introduced ;
var bool: aux2717_BOOL:: var_is_introduced ;
var {0,1}: aux2717_INTEGER :: var_is_introduced ;
var 2..36: aux2718:: var_is_introduced ;
var bool: aux2719_BOOL:: var_is_introduced ;
var bool: aux2720_BOOL:: var_is_introduced ;
var bool: aux2721_BOOL:: var_is_introduced ;
var bool: aux2722_BOOL:: var_is_introduced ;
var bool: aux2723_BOOL:: var_is_introduced ;
var {0,1}: aux2723_INTEGER :: var_is_introduced ;
var 1..35: aux2724:: var_is_introduced ;
var bool: aux2725_BOOL:: var_is_introduced ;
var bool: aux2726_BOOL:: var_is_introduced ;
var bool: aux2727_BOOL:: var_is_introduced ;
var bool: aux2728_BOOL:: var_is_introduced ;
var bool: aux2729_BOOL:: var_is_introduced ;
var {0,1}: aux2729_INTEGER :: var_is_introduced ;
var 2..36: aux2730:: var_is_introduced ;
var bool: aux2731_BOOL:: var_is_introduced ;
var bool: aux2732_BOOL:: var_is_introduced ;
var bool: aux2733_BOOL:: var_is_introduced ;
var bool: aux2734_BOOL:: var_is_introduced ;
var bool: aux2735_BOOL:: var_is_introduced ;
var {0,1}: aux2735_INTEGER :: var_is_introduced ;
var 3..37: aux2736:: var_is_introduced ;
var bool: aux2737_BOOL:: var_is_introduced ;
var bool: aux2738_BOOL:: var_is_introduced ;
var bool: aux2739_BOOL:: var_is_introduced ;
var bool: aux2740_BOOL:: var_is_introduced ;
var bool: aux2741_BOOL:: var_is_introduced ;
var {0,1}: aux2741_INTEGER :: var_is_introduced ;
var 3..37: aux2742:: var_is_introduced ;
var bool: aux2743_BOOL:: var_is_introduced ;
var bool: aux2744_BOOL:: var_is_introduced ;
var bool: aux2745_BOOL:: var_is_introduced ;
var bool: aux2746_BOOL:: var_is_introduced ;
var bool: aux2747_BOOL:: var_is_introduced ;
var {0,1}: aux2747_INTEGER :: var_is_introduced ;
var 3..37: aux2748:: var_is_introduced ;
var bool: aux2749_BOOL:: var_is_introduced ;
var bool: aux2750_BOOL:: var_is_introduced ;
var bool: aux2751_BOOL:: var_is_introduced ;
var bool: aux2752_BOOL:: var_is_introduced ;
var bool: aux2753_BOOL:: var_is_introduced ;
var {0,1}: aux2753_INTEGER :: var_is_introduced ;
var 2..36: aux2754:: var_is_introduced ;
var bool: aux2755_BOOL:: var_is_introduced ;
var bool: aux2756_BOOL:: var_is_introduced ;
var bool: aux2757_BOOL:: var_is_introduced ;
var {0,1}: aux2757_INTEGER :: var_is_introduced ;
var bool: aux2758_BOOL:: var_is_introduced ;
var 2..36: aux2759:: var_is_introduced ;
var bool: aux2760_BOOL:: var_is_introduced ;
var bool: aux2761_BOOL:: var_is_introduced ;
var bool: aux2762_BOOL:: var_is_introduced ;
var bool: aux2763_BOOL:: var_is_introduced ;
var bool: aux2764_BOOL:: var_is_introduced ;
var {0,1}: aux2764_INTEGER :: var_is_introduced ;
var 1..35: aux2765:: var_is_introduced ;
var bool: aux2766_BOOL:: var_is_introduced ;
var bool: aux2767_BOOL:: var_is_introduced ;
var bool: aux2768_BOOL:: var_is_introduced ;
var bool: aux2769_BOOL:: var_is_introduced ;
var bool: aux2770_BOOL:: var_is_introduced ;
var {0,1}: aux2770_INTEGER :: var_is_introduced ;
var 2..36: aux2771:: var_is_introduced ;
var bool: aux2772_BOOL:: var_is_introduced ;
var bool: aux2773_BOOL:: var_is_introduced ;
var bool: aux2774_BOOL:: var_is_introduced ;
var bool: aux2775_BOOL:: var_is_introduced ;
var bool: aux2776_BOOL:: var_is_introduced ;
var {0,1}: aux2776_INTEGER :: var_is_introduced ;
var 1..35: aux2777:: var_is_introduced ;
var bool: aux2778_BOOL:: var_is_introduced ;
var bool: aux2779_BOOL:: var_is_introduced ;
var bool: aux2780_BOOL:: var_is_introduced ;
var bool: aux2781_BOOL:: var_is_introduced ;
var bool: aux2782_BOOL:: var_is_introduced ;
var {0,1}: aux2782_INTEGER :: var_is_introduced ;
var 6..40: aux2783:: var_is_introduced ;
var bool: aux2784_BOOL:: var_is_introduced ;
var bool: aux2785_BOOL:: var_is_introduced ;
var bool: aux2786_BOOL:: var_is_introduced ;
var bool: aux2787_BOOL:: var_is_introduced ;
var bool: aux2788_BOOL:: var_is_introduced ;
var {0,1}: aux2788_INTEGER :: var_is_introduced ;
var 2..36: aux2789:: var_is_introduced ;
var bool: aux2790_BOOL:: var_is_introduced ;
var bool: aux2791_BOOL:: var_is_introduced ;
var bool: aux2792_BOOL:: var_is_introduced ;
var bool: aux2793_BOOL:: var_is_introduced ;
var bool: aux2794_BOOL:: var_is_introduced ;
var {0,1}: aux2794_INTEGER :: var_is_introduced ;
var 4..38: aux2795:: var_is_introduced ;
var bool: aux2796_BOOL:: var_is_introduced ;
var bool: aux2797_BOOL:: var_is_introduced ;
var bool: aux2798_BOOL:: var_is_introduced ;
var bool: aux2799_BOOL:: var_is_introduced ;
var bool: aux2800_BOOL:: var_is_introduced ;
var {0,1}: aux2800_INTEGER :: var_is_introduced ;
var 2..36: aux2801:: var_is_introduced ;
var bool: aux2802_BOOL:: var_is_introduced ;
var bool: aux2803_BOOL:: var_is_introduced ;
var bool: aux2804_BOOL:: var_is_introduced ;
var bool: aux2805_BOOL:: var_is_introduced ;
var bool: aux2806_BOOL:: var_is_introduced ;
var {0,1}: aux2806_INTEGER :: var_is_introduced ;
var 2..36: aux2807:: var_is_introduced ;
var bool: aux2808_BOOL:: var_is_introduced ;
var bool: aux2809_BOOL:: var_is_introduced ;
var bool: aux2810_BOOL:: var_is_introduced ;
var bool: aux2811_BOOL:: var_is_introduced ;
var bool: aux2812_BOOL:: var_is_introduced ;
var {0,1}: aux2812_INTEGER :: var_is_introduced ;
var 2..36: aux2813:: var_is_introduced ;
var bool: aux2814_BOOL:: var_is_introduced ;
var bool: aux2815_BOOL:: var_is_introduced ;
var bool: aux2816_BOOL:: var_is_introduced ;
var bool: aux2817_BOOL:: var_is_introduced ;
var bool: aux2818_BOOL:: var_is_introduced ;
var {0,1}: aux2818_INTEGER :: var_is_introduced ;
var 3..37: aux2819:: var_is_introduced ;
var bool: aux2820_BOOL:: var_is_introduced ;
var bool: aux2821_BOOL:: var_is_introduced ;
var bool: aux2822_BOOL:: var_is_introduced ;
var bool: aux2823_BOOL:: var_is_introduced ;
var bool: aux2824_BOOL:: var_is_introduced ;
var {0,1}: aux2824_INTEGER :: var_is_introduced ;
var 3..37: aux2825:: var_is_introduced ;
var bool: aux2826_BOOL:: var_is_introduced ;
var bool: aux2827_BOOL:: var_is_introduced ;
var bool: aux2828_BOOL:: var_is_introduced ;
var bool: aux2829_BOOL:: var_is_introduced ;
var bool: aux2830_BOOL:: var_is_introduced ;
var {0,1}: aux2830_INTEGER :: var_is_introduced ;
var 3..37: aux2831:: var_is_introduced ;
var bool: aux2832_BOOL:: var_is_introduced ;
var bool: aux2833_BOOL:: var_is_introduced ;
var bool: aux2834_BOOL:: var_is_introduced ;
var bool: aux2835_BOOL:: var_is_introduced ;
var bool: aux2836_BOOL:: var_is_introduced ;
var {0,1}: aux2836_INTEGER :: var_is_introduced ;
var 1..35: aux2837:: var_is_introduced ;
var bool: aux2838_BOOL:: var_is_introduced ;
var bool: aux2839_BOOL:: var_is_introduced ;
var bool: aux2840_BOOL:: var_is_introduced ;
var {0,1}: aux2840_INTEGER :: var_is_introduced ;
var bool: aux2841_BOOL:: var_is_introduced ;
var 2..36: aux2842:: var_is_introduced ;
var bool: aux2843_BOOL:: var_is_introduced ;
var bool: aux2844_BOOL:: var_is_introduced ;
var bool: aux2845_BOOL:: var_is_introduced ;
var bool: aux2846_BOOL:: var_is_introduced ;
var bool: aux2847_BOOL:: var_is_introduced ;
var {0,1}: aux2847_INTEGER :: var_is_introduced ;
var 1..35: aux2848:: var_is_introduced ;
var bool: aux2849_BOOL:: var_is_introduced ;
var bool: aux2850_BOOL:: var_is_introduced ;
var bool: aux2851_BOOL:: var_is_introduced ;
var bool: aux2852_BOOL:: var_is_introduced ;
var bool: aux2853_BOOL:: var_is_introduced ;
var {0,1}: aux2853_INTEGER :: var_is_introduced ;
var 2..36: aux2854:: var_is_introduced ;
var bool: aux2855_BOOL:: var_is_introduced ;
var bool: aux2856_BOOL:: var_is_introduced ;
var bool: aux2857_BOOL:: var_is_introduced ;
var bool: aux2858_BOOL:: var_is_introduced ;
var bool: aux2859_BOOL:: var_is_introduced ;
var {0,1}: aux2859_INTEGER :: var_is_introduced ;
var 1..35: aux2860:: var_is_introduced ;
var bool: aux2861_BOOL:: var_is_introduced ;
var bool: aux2862_BOOL:: var_is_introduced ;
var bool: aux2863_BOOL:: var_is_introduced ;
var bool: aux2864_BOOL:: var_is_introduced ;
var bool: aux2865_BOOL:: var_is_introduced ;
var {0,1}: aux2865_INTEGER :: var_is_introduced ;
var 6..40: aux2866:: var_is_introduced ;
var bool: aux2867_BOOL:: var_is_introduced ;
var bool: aux2868_BOOL:: var_is_introduced ;
var bool: aux2869_BOOL:: var_is_introduced ;
var bool: aux2870_BOOL:: var_is_introduced ;
var bool: aux2871_BOOL:: var_is_introduced ;
var {0,1}: aux2871_INTEGER :: var_is_introduced ;
var 2..36: aux2872:: var_is_introduced ;
var bool: aux2873_BOOL:: var_is_introduced ;
var bool: aux2874_BOOL:: var_is_introduced ;
var bool: aux2875_BOOL:: var_is_introduced ;
var bool: aux2876_BOOL:: var_is_introduced ;
var bool: aux2877_BOOL:: var_is_introduced ;
var {0,1}: aux2877_INTEGER :: var_is_introduced ;
var 4..38: aux2878:: var_is_introduced ;
var bool: aux2879_BOOL:: var_is_introduced ;
var bool: aux2880_BOOL:: var_is_introduced ;
var bool: aux2881_BOOL:: var_is_introduced ;
var bool: aux2882_BOOL:: var_is_introduced ;
var bool: aux2883_BOOL:: var_is_introduced ;
var {0,1}: aux2883_INTEGER :: var_is_introduced ;
var 2..36: aux2884:: var_is_introduced ;
var bool: aux2885_BOOL:: var_is_introduced ;
var bool: aux2886_BOOL:: var_is_introduced ;
var bool: aux2887_BOOL:: var_is_introduced ;
var bool: aux2888_BOOL:: var_is_introduced ;
var bool: aux2889_BOOL:: var_is_introduced ;
var {0,1}: aux2889_INTEGER :: var_is_introduced ;
var 2..36: aux2890:: var_is_introduced ;
var bool: aux2891_BOOL:: var_is_introduced ;
var bool: aux2892_BOOL:: var_is_introduced ;
var bool: aux2893_BOOL:: var_is_introduced ;
var bool: aux2894_BOOL:: var_is_introduced ;
var bool: aux2895_BOOL:: var_is_introduced ;
var {0,1}: aux2895_INTEGER :: var_is_introduced ;
var 1..35: aux2896:: var_is_introduced ;
var bool: aux2897_BOOL:: var_is_introduced ;
var bool: aux2898_BOOL:: var_is_introduced ;
var bool: aux2899_BOOL:: var_is_introduced ;
var bool: aux2900_BOOL:: var_is_introduced ;
var bool: aux2901_BOOL:: var_is_introduced ;
var {0,1}: aux2901_INTEGER :: var_is_introduced ;
var 2..36: aux2902:: var_is_introduced ;
var bool: aux2903_BOOL:: var_is_introduced ;
var bool: aux2904_BOOL:: var_is_introduced ;
var bool: aux2905_BOOL:: var_is_introduced ;
var bool: aux2906_BOOL:: var_is_introduced ;
var bool: aux2907_BOOL:: var_is_introduced ;
var {0,1}: aux2907_INTEGER :: var_is_introduced ;
var 3..37: aux2908:: var_is_introduced ;
var bool: aux2909_BOOL:: var_is_introduced ;
var bool: aux2910_BOOL:: var_is_introduced ;
var bool: aux2911_BOOL:: var_is_introduced ;
var bool: aux2912_BOOL:: var_is_introduced ;
var bool: aux2913_BOOL:: var_is_introduced ;
var {0,1}: aux2913_INTEGER :: var_is_introduced ;
var 3..37: aux2914:: var_is_introduced ;
var bool: aux2915_BOOL:: var_is_introduced ;
var bool: aux2916_BOOL:: var_is_introduced ;
var bool: aux2917_BOOL:: var_is_introduced ;
var bool: aux2918_BOOL:: var_is_introduced ;
var bool: aux2919_BOOL:: var_is_introduced ;
var {0,1}: aux2919_INTEGER :: var_is_introduced ;
var 3..37: aux2920:: var_is_introduced ;
var bool: aux2921_BOOL:: var_is_introduced ;
var bool: aux2922_BOOL:: var_is_introduced ;
var bool: aux2923_BOOL:: var_is_introduced ;
var {0,1}: aux2923_INTEGER :: var_is_introduced ;
var bool: aux2924_BOOL:: var_is_introduced ;
var 2..36: aux2925:: var_is_introduced ;
var bool: aux2926_BOOL:: var_is_introduced ;
var bool: aux2927_BOOL:: var_is_introduced ;
var bool: aux2928_BOOL:: var_is_introduced ;
var bool: aux2929_BOOL:: var_is_introduced ;
var bool: aux2930_BOOL:: var_is_introduced ;
var {0,1}: aux2930_INTEGER :: var_is_introduced ;
var 1..35: aux2931:: var_is_introduced ;
var bool: aux2932_BOOL:: var_is_introduced ;
var bool: aux2933_BOOL:: var_is_introduced ;
var bool: aux2934_BOOL:: var_is_introduced ;
var bool: aux2935_BOOL:: var_is_introduced ;
var bool: aux2936_BOOL:: var_is_introduced ;
var {0,1}: aux2936_INTEGER :: var_is_introduced ;
var 2..36: aux2937:: var_is_introduced ;
var bool: aux2938_BOOL:: var_is_introduced ;
var bool: aux2939_BOOL:: var_is_introduced ;
var bool: aux2940_BOOL:: var_is_introduced ;
var bool: aux2941_BOOL:: var_is_introduced ;
var bool: aux2942_BOOL:: var_is_introduced ;
var {0,1}: aux2942_INTEGER :: var_is_introduced ;
var 1..35: aux2943:: var_is_introduced ;
var bool: aux2944_BOOL:: var_is_introduced ;
var bool: aux2945_BOOL:: var_is_introduced ;
var bool: aux2946_BOOL:: var_is_introduced ;
var bool: aux2947_BOOL:: var_is_introduced ;
var bool: aux2948_BOOL:: var_is_introduced ;
var {0,1}: aux2948_INTEGER :: var_is_introduced ;
var 6..40: aux2949:: var_is_introduced ;
var bool: aux2950_BOOL:: var_is_introduced ;
var bool: aux2951_BOOL:: var_is_introduced ;
var bool: aux2952_BOOL:: var_is_introduced ;
var bool: aux2953_BOOL:: var_is_introduced ;
var bool: aux2954_BOOL:: var_is_introduced ;
var {0,1}: aux2954_INTEGER :: var_is_introduced ;
var 4..38: aux2955:: var_is_introduced ;
var bool: aux2956_BOOL:: var_is_introduced ;
var bool: aux2957_BOOL:: var_is_introduced ;
var bool: aux2958_BOOL:: var_is_introduced ;
var bool: aux2959_BOOL:: var_is_introduced ;
var bool: aux2960_BOOL:: var_is_introduced ;
var {0,1}: aux2960_INTEGER :: var_is_introduced ;
var 2..36: aux2961:: var_is_introduced ;
var bool: aux2962_BOOL:: var_is_introduced ;
var bool: aux2963_BOOL:: var_is_introduced ;
var bool: aux2964_BOOL:: var_is_introduced ;
var bool: aux2965_BOOL:: var_is_introduced ;
var bool: aux2966_BOOL:: var_is_introduced ;
var {0,1}: aux2966_INTEGER :: var_is_introduced ;
var 2..36: aux2967:: var_is_introduced ;
var bool: aux2968_BOOL:: var_is_introduced ;
var bool: aux2969_BOOL:: var_is_introduced ;
var bool: aux2970_BOOL:: var_is_introduced ;
var bool: aux2971_BOOL:: var_is_introduced ;
var bool: aux2972_BOOL:: var_is_introduced ;
var {0,1}: aux2972_INTEGER :: var_is_introduced ;
var 1..35: aux2973:: var_is_introduced ;
var bool: aux2974_BOOL:: var_is_introduced ;
var bool: aux2975_BOOL:: var_is_introduced ;
var bool: aux2976_BOOL:: var_is_introduced ;
var bool: aux2977_BOOL:: var_is_introduced ;
var bool: aux2978_BOOL:: var_is_introduced ;
var {0,1}: aux2978_INTEGER :: var_is_introduced ;
var 2..36: aux2979:: var_is_introduced ;
var bool: aux2980_BOOL:: var_is_introduced ;
var bool: aux2981_BOOL:: var_is_introduced ;
var bool: aux2982_BOOL:: var_is_introduced ;
var bool: aux2983_BOOL:: var_is_introduced ;
var bool: aux2984_BOOL:: var_is_introduced ;
var {0,1}: aux2984_INTEGER :: var_is_introduced ;
var 3..37: aux2985:: var_is_introduced ;
var bool: aux2986_BOOL:: var_is_introduced ;
var bool: aux2987_BOOL:: var_is_introduced ;
var bool: aux2988_BOOL:: var_is_introduced ;
var bool: aux2989_BOOL:: var_is_introduced ;
var bool: aux2990_BOOL:: var_is_introduced ;
var {0,1}: aux2990_INTEGER :: var_is_introduced ;
var 3..37: aux2991:: var_is_introduced ;
var bool: aux2992_BOOL:: var_is_introduced ;
var bool: aux2993_BOOL:: var_is_introduced ;
var bool: aux2994_BOOL:: var_is_introduced ;
var bool: aux2995_BOOL:: var_is_introduced ;
var bool: aux2996_BOOL:: var_is_introduced ;
var {0,1}: aux2996_INTEGER :: var_is_introduced ;
var 3..37: aux2997:: var_is_introduced ;
var bool: aux2998_BOOL:: var_is_introduced ;
var bool: aux2999_BOOL:: var_is_introduced ;
var bool: aux3000_BOOL:: var_is_introduced ;
var bool: aux3001_BOOL:: var_is_introduced ;
var bool: aux3002_BOOL:: var_is_introduced ;
var {0,1}: aux3002_INTEGER :: var_is_introduced ;
var 2..36: aux3003:: var_is_introduced ;
var bool: aux3004_BOOL:: var_is_introduced ;
var bool: aux3005_BOOL:: var_is_introduced ;
var bool: aux3006_BOOL:: var_is_introduced ;
var {0,1}: aux3006_INTEGER :: var_is_introduced ;
var bool: aux3007_BOOL:: var_is_introduced ;
var 2..36: aux3008:: var_is_introduced ;
var bool: aux3009_BOOL:: var_is_introduced ;
var bool: aux3010_BOOL:: var_is_introduced ;
var bool: aux3011_BOOL:: var_is_introduced ;
var bool: aux3012_BOOL:: var_is_introduced ;
var bool: aux3013_BOOL:: var_is_introduced ;
var {0,1}: aux3013_INTEGER :: var_is_introduced ;
var 1..35: aux3014:: var_is_introduced ;
var bool: aux3015_BOOL:: var_is_introduced ;
var bool: aux3016_BOOL:: var_is_introduced ;
var bool: aux3017_BOOL:: var_is_introduced ;
var bool: aux3018_BOOL:: var_is_introduced ;
var bool: aux3019_BOOL:: var_is_introduced ;
var {0,1}: aux3019_INTEGER :: var_is_introduced ;
var 2..36: aux3020:: var_is_introduced ;
var bool: aux3021_BOOL:: var_is_introduced ;
var bool: aux3022_BOOL:: var_is_introduced ;
var bool: aux3023_BOOL:: var_is_introduced ;
var bool: aux3024_BOOL:: var_is_introduced ;
var bool: aux3025_BOOL:: var_is_introduced ;
var {0,1}: aux3025_INTEGER :: var_is_introduced ;
var 1..35: aux3026:: var_is_introduced ;
var bool: aux3027_BOOL:: var_is_introduced ;
var bool: aux3028_BOOL:: var_is_introduced ;
var bool: aux3029_BOOL:: var_is_introduced ;
var bool: aux3030_BOOL:: var_is_introduced ;
var bool: aux3031_BOOL:: var_is_introduced ;
var {0,1}: aux3031_INTEGER :: var_is_introduced ;
var 6..40: aux3032:: var_is_introduced ;
var bool: aux3033_BOOL:: var_is_introduced ;
var bool: aux3034_BOOL:: var_is_introduced ;
var bool: aux3035_BOOL:: var_is_introduced ;
var bool: aux3036_BOOL:: var_is_introduced ;
var bool: aux3037_BOOL:: var_is_introduced ;
var {0,1}: aux3037_INTEGER :: var_is_introduced ;
var 2..36: aux3038:: var_is_introduced ;
var bool: aux3039_BOOL:: var_is_introduced ;
var bool: aux3040_BOOL:: var_is_introduced ;
var bool: aux3041_BOOL:: var_is_introduced ;
var bool: aux3042_BOOL:: var_is_introduced ;
var bool: aux3043_BOOL:: var_is_introduced ;
var {0,1}: aux3043_INTEGER :: var_is_introduced ;
var 4..38: aux3044:: var_is_introduced ;
var bool: aux3045_BOOL:: var_is_introduced ;
var bool: aux3046_BOOL:: var_is_introduced ;
var bool: aux3047_BOOL:: var_is_introduced ;
var bool: aux3048_BOOL:: var_is_introduced ;
var bool: aux3049_BOOL:: var_is_introduced ;
var {0,1}: aux3049_INTEGER :: var_is_introduced ;
var 2..36: aux3050:: var_is_introduced ;
var bool: aux3051_BOOL:: var_is_introduced ;
var bool: aux3052_BOOL:: var_is_introduced ;
var bool: aux3053_BOOL:: var_is_introduced ;
var bool: aux3054_BOOL:: var_is_introduced ;
var bool: aux3055_BOOL:: var_is_introduced ;
var {0,1}: aux3055_INTEGER :: var_is_introduced ;
var 2..36: aux3056:: var_is_introduced ;
var bool: aux3057_BOOL:: var_is_introduced ;
var bool: aux3058_BOOL:: var_is_introduced ;
var bool: aux3059_BOOL:: var_is_introduced ;
var bool: aux3060_BOOL:: var_is_introduced ;
var bool: aux3061_BOOL:: var_is_introduced ;
var {0,1}: aux3061_INTEGER :: var_is_introduced ;
var 1..35: aux3062:: var_is_introduced ;
var bool: aux3063_BOOL:: var_is_introduced ;
var bool: aux3064_BOOL:: var_is_introduced ;
var bool: aux3065_BOOL:: var_is_introduced ;
var bool: aux3066_BOOL:: var_is_introduced ;
var bool: aux3067_BOOL:: var_is_introduced ;
var {0,1}: aux3067_INTEGER :: var_is_introduced ;
var 2..36: aux3068:: var_is_introduced ;
var bool: aux3069_BOOL:: var_is_introduced ;
var bool: aux3070_BOOL:: var_is_introduced ;
var bool: aux3071_BOOL:: var_is_introduced ;
var bool: aux3072_BOOL:: var_is_introduced ;
var bool: aux3073_BOOL:: var_is_introduced ;
var {0,1}: aux3073_INTEGER :: var_is_introduced ;
var 3..37: aux3074:: var_is_introduced ;
var bool: aux3075_BOOL:: var_is_introduced ;
var bool: aux3076_BOOL:: var_is_introduced ;
var bool: aux3077_BOOL:: var_is_introduced ;
var bool: aux3078_BOOL:: var_is_introduced ;
var bool: aux3079_BOOL:: var_is_introduced ;
var {0,1}: aux3079_INTEGER :: var_is_introduced ;
var 3..37: aux3080:: var_is_introduced ;
var bool: aux3081_BOOL:: var_is_introduced ;
var bool: aux3082_BOOL:: var_is_introduced ;
var bool: aux3083_BOOL:: var_is_introduced ;
var bool: aux3084_BOOL:: var_is_introduced ;
var bool: aux3085_BOOL:: var_is_introduced ;
var {0,1}: aux3085_INTEGER :: var_is_introduced ;
var 3..37: aux3086:: var_is_introduced ;
var bool: aux3087_BOOL:: var_is_introduced ;
var bool: aux3088_BOOL:: var_is_introduced ;
var bool: aux3089_BOOL:: var_is_introduced ;
var {0,1}: aux3089_INTEGER :: var_is_introduced ;
var bool: aux3090_BOOL:: var_is_introduced ;
var 2..36: aux3091:: var_is_introduced ;
var bool: aux3092_BOOL:: var_is_introduced ;
var bool: aux3093_BOOL:: var_is_introduced ;
var bool: aux3094_BOOL:: var_is_introduced ;
var bool: aux3095_BOOL:: var_is_introduced ;
var bool: aux3096_BOOL:: var_is_introduced ;
var {0,1}: aux3096_INTEGER :: var_is_introduced ;
var 1..35: aux3097:: var_is_introduced ;
var bool: aux3098_BOOL:: var_is_introduced ;
var bool: aux3099_BOOL:: var_is_introduced ;
var bool: aux3100_BOOL:: var_is_introduced ;
var bool: aux3101_BOOL:: var_is_introduced ;
var bool: aux3102_BOOL:: var_is_introduced ;
var {0,1}: aux3102_INTEGER :: var_is_introduced ;
var 2..36: aux3103:: var_is_introduced ;
var bool: aux3104_BOOL:: var_is_introduced ;
var bool: aux3105_BOOL:: var_is_introduced ;
var bool: aux3106_BOOL:: var_is_introduced ;
var bool: aux3107_BOOL:: var_is_introduced ;
var bool: aux3108_BOOL:: var_is_introduced ;
var {0,1}: aux3108_INTEGER :: var_is_introduced ;
var 1..35: aux3109:: var_is_introduced ;
var bool: aux3110_BOOL:: var_is_introduced ;
var bool: aux3111_BOOL:: var_is_introduced ;
var bool: aux3112_BOOL:: var_is_introduced ;
var bool: aux3113_BOOL:: var_is_introduced ;
var bool: aux3114_BOOL:: var_is_introduced ;
var {0,1}: aux3114_INTEGER :: var_is_introduced ;
var 2..36: aux3115:: var_is_introduced ;
var bool: aux3116_BOOL:: var_is_introduced ;
var bool: aux3117_BOOL:: var_is_introduced ;
var bool: aux3118_BOOL:: var_is_introduced ;
var bool: aux3119_BOOL:: var_is_introduced ;
var bool: aux3120_BOOL:: var_is_introduced ;
var {0,1}: aux3120_INTEGER :: var_is_introduced ;
var 4..38: aux3121:: var_is_introduced ;
var bool: aux3122_BOOL:: var_is_introduced ;
var bool: aux3123_BOOL:: var_is_introduced ;
var bool: aux3124_BOOL:: var_is_introduced ;
var bool: aux3125_BOOL:: var_is_introduced ;
var bool: aux3126_BOOL:: var_is_introduced ;
var {0,1}: aux3126_INTEGER :: var_is_introduced ;
var 2..36: aux3127:: var_is_introduced ;
var bool: aux3128_BOOL:: var_is_introduced ;
var bool: aux3129_BOOL:: var_is_introduced ;
var bool: aux3130_BOOL:: var_is_introduced ;
var bool: aux3131_BOOL:: var_is_introduced ;
var bool: aux3132_BOOL:: var_is_introduced ;
var {0,1}: aux3132_INTEGER :: var_is_introduced ;
var 2..36: aux3133:: var_is_introduced ;
var bool: aux3134_BOOL:: var_is_introduced ;
var bool: aux3135_BOOL:: var_is_introduced ;
var bool: aux3136_BOOL:: var_is_introduced ;
var bool: aux3137_BOOL:: var_is_introduced ;
var bool: aux3138_BOOL:: var_is_introduced ;
var {0,1}: aux3138_INTEGER :: var_is_introduced ;
var 1..35: aux3139:: var_is_introduced ;
var bool: aux3140_BOOL:: var_is_introduced ;
var bool: aux3141_BOOL:: var_is_introduced ;
var bool: aux3142_BOOL:: var_is_introduced ;
var bool: aux3143_BOOL:: var_is_introduced ;
var bool: aux3144_BOOL:: var_is_introduced ;
var {0,1}: aux3144_INTEGER :: var_is_introduced ;
var 2..36: aux3145:: var_is_introduced ;
var bool: aux3146_BOOL:: var_is_introduced ;
var bool: aux3147_BOOL:: var_is_introduced ;
var bool: aux3148_BOOL:: var_is_introduced ;
var bool: aux3149_BOOL:: var_is_introduced ;
var bool: aux3150_BOOL:: var_is_introduced ;
var {0,1}: aux3150_INTEGER :: var_is_introduced ;
var 3..37: aux3151:: var_is_introduced ;
var bool: aux3152_BOOL:: var_is_introduced ;
var bool: aux3153_BOOL:: var_is_introduced ;
var bool: aux3154_BOOL:: var_is_introduced ;
var bool: aux3155_BOOL:: var_is_introduced ;
var bool: aux3156_BOOL:: var_is_introduced ;
var {0,1}: aux3156_INTEGER :: var_is_introduced ;
var 3..37: aux3157:: var_is_introduced ;
var bool: aux3158_BOOL:: var_is_introduced ;
var bool: aux3159_BOOL:: var_is_introduced ;
var bool: aux3160_BOOL:: var_is_introduced ;
var bool: aux3161_BOOL:: var_is_introduced ;
var bool: aux3162_BOOL:: var_is_introduced ;
var {0,1}: aux3162_INTEGER :: var_is_introduced ;
var 3..37: aux3163:: var_is_introduced ;
var bool: aux3164_BOOL:: var_is_introduced ;
var bool: aux3165_BOOL:: var_is_introduced ;
var bool: aux3166_BOOL:: var_is_introduced ;
var bool: aux3167_BOOL:: var_is_introduced ;
var bool: aux3168_BOOL:: var_is_introduced ;
var {0,1}: aux3168_INTEGER :: var_is_introduced ;
var 6..40: aux3169:: var_is_introduced ;
var bool: aux3170_BOOL:: var_is_introduced ;
var bool: aux3171_BOOL:: var_is_introduced ;
var bool: aux3172_BOOL:: var_is_introduced ;
var {0,1}: aux3172_INTEGER :: var_is_introduced ;
var bool: aux3173_BOOL:: var_is_introduced ;
var 2..36: aux3174:: var_is_introduced ;
var bool: aux3175_BOOL:: var_is_introduced ;
var bool: aux3176_BOOL:: var_is_introduced ;
var bool: aux3177_BOOL:: var_is_introduced ;
var bool: aux3178_BOOL:: var_is_introduced ;
var bool: aux3179_BOOL:: var_is_introduced ;
var {0,1}: aux3179_INTEGER :: var_is_introduced ;
var 1..35: aux3180:: var_is_introduced ;
var bool: aux3181_BOOL:: var_is_introduced ;
var bool: aux3182_BOOL:: var_is_introduced ;
var bool: aux3183_BOOL:: var_is_introduced ;
var bool: aux3184_BOOL:: var_is_introduced ;
var bool: aux3185_BOOL:: var_is_introduced ;
var {0,1}: aux3185_INTEGER :: var_is_introduced ;
var 2..36: aux3186:: var_is_introduced ;
var bool: aux3187_BOOL:: var_is_introduced ;
var bool: aux3188_BOOL:: var_is_introduced ;
var bool: aux3189_BOOL:: var_is_introduced ;
var bool: aux3190_BOOL:: var_is_introduced ;
var bool: aux3191_BOOL:: var_is_introduced ;
var {0,1}: aux3191_INTEGER :: var_is_introduced ;
var 6..40: aux3192:: var_is_introduced ;
var bool: aux3193_BOOL:: var_is_introduced ;
var bool: aux3194_BOOL:: var_is_introduced ;
var bool: aux3195_BOOL:: var_is_introduced ;
var bool: aux3196_BOOL:: var_is_introduced ;
var bool: aux3197_BOOL:: var_is_introduced ;
var {0,1}: aux3197_INTEGER :: var_is_introduced ;
var 2..36: aux3198:: var_is_introduced ;
var bool: aux3199_BOOL:: var_is_introduced ;
var bool: aux3200_BOOL:: var_is_introduced ;
var bool: aux3201_BOOL:: var_is_introduced ;
var bool: aux3202_BOOL:: var_is_introduced ;
var bool: aux3203_BOOL:: var_is_introduced ;
var {0,1}: aux3203_INTEGER :: var_is_introduced ;
var 4..38: aux3204:: var_is_introduced ;
var bool: aux3205_BOOL:: var_is_introduced ;
var bool: aux3206_BOOL:: var_is_introduced ;
var bool: aux3207_BOOL:: var_is_introduced ;
var bool: aux3208_BOOL:: var_is_introduced ;
var bool: aux3209_BOOL:: var_is_introduced ;
var {0,1}: aux3209_INTEGER :: var_is_introduced ;
var 2..36: aux3210:: var_is_introduced ;
var bool: aux3211_BOOL:: var_is_introduced ;
var bool: aux3212_BOOL:: var_is_introduced ;
var bool: aux3213_BOOL:: var_is_introduced ;
var bool: aux3214_BOOL:: var_is_introduced ;
var bool: aux3215_BOOL:: var_is_introduced ;
var {0,1}: aux3215_INTEGER :: var_is_introduced ;
var 2..36: aux3216:: var_is_introduced ;
var bool: aux3217_BOOL:: var_is_introduced ;
var bool: aux3218_BOOL:: var_is_introduced ;
var bool: aux3219_BOOL:: var_is_introduced ;
var bool: aux3220_BOOL:: var_is_introduced ;
var bool: aux3221_BOOL:: var_is_introduced ;
var {0,1}: aux3221_INTEGER :: var_is_introduced ;
var 1..35: aux3222:: var_is_introduced ;
var bool: aux3223_BOOL:: var_is_introduced ;
var bool: aux3224_BOOL:: var_is_introduced ;
var bool: aux3225_BOOL:: var_is_introduced ;
var bool: aux3226_BOOL:: var_is_introduced ;
var bool: aux3227_BOOL:: var_is_introduced ;
var {0,1}: aux3227_INTEGER :: var_is_introduced ;
var 2..36: aux3228:: var_is_introduced ;
var bool: aux3229_BOOL:: var_is_introduced ;
var bool: aux3230_BOOL:: var_is_introduced ;
var bool: aux3231_BOOL:: var_is_introduced ;
var bool: aux3232_BOOL:: var_is_introduced ;
var bool: aux3233_BOOL:: var_is_introduced ;
var {0,1}: aux3233_INTEGER :: var_is_introduced ;
var 3..37: aux3234:: var_is_introduced ;
var bool: aux3235_BOOL:: var_is_introduced ;
var bool: aux3236_BOOL:: var_is_introduced ;
var bool: aux3237_BOOL:: var_is_introduced ;
var bool: aux3238_BOOL:: var_is_introduced ;
var bool: aux3239_BOOL:: var_is_introduced ;
var {0,1}: aux3239_INTEGER :: var_is_introduced ;
var 3..37: aux3240:: var_is_introduced ;
var bool: aux3241_BOOL:: var_is_introduced ;
var bool: aux3242_BOOL:: var_is_introduced ;
var bool: aux3243_BOOL:: var_is_introduced ;
var bool: aux3244_BOOL:: var_is_introduced ;
var bool: aux3245_BOOL:: var_is_introduced ;
var {0,1}: aux3245_INTEGER :: var_is_introduced ;
var 3..37: aux3246:: var_is_introduced ;
var bool: aux3247_BOOL:: var_is_introduced ;
var bool: aux3248_BOOL:: var_is_introduced ;
var bool: aux3249_BOOL:: var_is_introduced ;
var bool: aux3250_BOOL:: var_is_introduced ;
var bool: aux3251_BOOL:: var_is_introduced ;
var {0,1}: aux3251_INTEGER :: var_is_introduced ;
var 1..35: aux3252:: var_is_introduced ;
var bool: aux3253_BOOL:: var_is_introduced ;
var bool: aux3254_BOOL:: var_is_introduced ;
var bool: aux3255_BOOL:: var_is_introduced ;
var {0,1}: aux3255_INTEGER :: var_is_introduced ;
var bool: aux3256_BOOL:: var_is_introduced ;
var 2..36: aux3257:: var_is_introduced ;
var bool: aux3258_BOOL:: var_is_introduced ;
var bool: aux3259_BOOL:: var_is_introduced ;
var bool: aux3260_BOOL:: var_is_introduced ;
var bool: aux3261_BOOL:: var_is_introduced ;
var bool: aux3262_BOOL:: var_is_introduced ;
var {0,1}: aux3262_INTEGER :: var_is_introduced ;
var 1..35: aux3263:: var_is_introduced ;
var bool: aux3264_BOOL:: var_is_introduced ;
var bool: aux3265_BOOL:: var_is_introduced ;
var bool: aux3266_BOOL:: var_is_introduced ;
var bool: aux3267_BOOL:: var_is_introduced ;
var bool: aux3268_BOOL:: var_is_introduced ;
var {0,1}: aux3268_INTEGER :: var_is_introduced ;
var 1..35: aux3269:: var_is_introduced ;
var bool: aux3270_BOOL:: var_is_introduced ;
var bool: aux3271_BOOL:: var_is_introduced ;
var bool: aux3272_BOOL:: var_is_introduced ;
var bool: aux3273_BOOL:: var_is_introduced ;
var bool: aux3274_BOOL:: var_is_introduced ;
var {0,1}: aux3274_INTEGER :: var_is_introduced ;
var 6..40: aux3275:: var_is_introduced ;
var bool: aux3276_BOOL:: var_is_introduced ;
var bool: aux3277_BOOL:: var_is_introduced ;
var bool: aux3278_BOOL:: var_is_introduced ;
var bool: aux3279_BOOL:: var_is_introduced ;
var bool: aux3280_BOOL:: var_is_introduced ;
var {0,1}: aux3280_INTEGER :: var_is_introduced ;
var 2..36: aux3281:: var_is_introduced ;
var bool: aux3282_BOOL:: var_is_introduced ;
var bool: aux3283_BOOL:: var_is_introduced ;
var bool: aux3284_BOOL:: var_is_introduced ;
var bool: aux3285_BOOL:: var_is_introduced ;
var bool: aux3286_BOOL:: var_is_introduced ;
var {0,1}: aux3286_INTEGER :: var_is_introduced ;
var 4..38: aux3287:: var_is_introduced ;
var bool: aux3288_BOOL:: var_is_introduced ;
var bool: aux3289_BOOL:: var_is_introduced ;
var bool: aux3290_BOOL:: var_is_introduced ;
var bool: aux3291_BOOL:: var_is_introduced ;
var bool: aux3292_BOOL:: var_is_introduced ;
var {0,1}: aux3292_INTEGER :: var_is_introduced ;
var 2..36: aux3293:: var_is_introduced ;
var bool: aux3294_BOOL:: var_is_introduced ;
var bool: aux3295_BOOL:: var_is_introduced ;
var bool: aux3296_BOOL:: var_is_introduced ;
var bool: aux3297_BOOL:: var_is_introduced ;
var bool: aux3298_BOOL:: var_is_introduced ;
var {0,1}: aux3298_INTEGER :: var_is_introduced ;
var 2..36: aux3299:: var_is_introduced ;
var bool: aux3300_BOOL:: var_is_introduced ;
var bool: aux3301_BOOL:: var_is_introduced ;
var bool: aux3302_BOOL:: var_is_introduced ;
var bool: aux3303_BOOL:: var_is_introduced ;
var bool: aux3304_BOOL:: var_is_introduced ;
var {0,1}: aux3304_INTEGER :: var_is_introduced ;
var 1..35: aux3305:: var_is_introduced ;
var bool: aux3306_BOOL:: var_is_introduced ;
var bool: aux3307_BOOL:: var_is_introduced ;
var bool: aux3308_BOOL:: var_is_introduced ;
var bool: aux3309_BOOL:: var_is_introduced ;
var bool: aux3310_BOOL:: var_is_introduced ;
var {0,1}: aux3310_INTEGER :: var_is_introduced ;
var 2..36: aux3311:: var_is_introduced ;
var bool: aux3312_BOOL:: var_is_introduced ;
var bool: aux3313_BOOL:: var_is_introduced ;
var bool: aux3314_BOOL:: var_is_introduced ;
var bool: aux3315_BOOL:: var_is_introduced ;
var bool: aux3316_BOOL:: var_is_introduced ;
var {0,1}: aux3316_INTEGER :: var_is_introduced ;
var 3..37: aux3317:: var_is_introduced ;
var bool: aux3318_BOOL:: var_is_introduced ;
var bool: aux3319_BOOL:: var_is_introduced ;
var bool: aux3320_BOOL:: var_is_introduced ;
var bool: aux3321_BOOL:: var_is_introduced ;
var bool: aux3322_BOOL:: var_is_introduced ;
var {0,1}: aux3322_INTEGER :: var_is_introduced ;
var 3..37: aux3323:: var_is_introduced ;
var bool: aux3324_BOOL:: var_is_introduced ;
var bool: aux3325_BOOL:: var_is_introduced ;
var bool: aux3326_BOOL:: var_is_introduced ;
var bool: aux3327_BOOL:: var_is_introduced ;
var bool: aux3328_BOOL:: var_is_introduced ;
var {0,1}: aux3328_INTEGER :: var_is_introduced ;
var 3..37: aux3329:: var_is_introduced ;
var bool: aux3330_BOOL:: var_is_introduced ;
var bool: aux3331_BOOL:: var_is_introduced ;
var bool: aux3332_BOOL:: var_is_introduced ;
var bool: aux3333_BOOL:: var_is_introduced ;
var bool: aux3334_BOOL:: var_is_introduced ;
var {0,1}: aux3334_INTEGER :: var_is_introduced ;
var 2..36: aux3335:: var_is_introduced ;
var bool: aux3336_BOOL:: var_is_introduced ;
var bool: aux3337_BOOL:: var_is_introduced ;
var bool: aux3338_BOOL:: var_is_introduced ;
var {0,1}: aux3338_INTEGER :: var_is_introduced ;
var bool: aux3339_BOOL:: var_is_introduced ;
var 1..35: aux3340:: var_is_introduced ;
var bool: aux3341_BOOL:: var_is_introduced ;
var bool: aux3342_BOOL:: var_is_introduced ;
var bool: aux3343_BOOL:: var_is_introduced ;
var bool: aux3344_BOOL:: var_is_introduced ;
var bool: aux3345_BOOL:: var_is_introduced ;
var {0,1}: aux3345_INTEGER :: var_is_introduced ;
var 2..36: aux3346:: var_is_introduced ;
var bool: aux3347_BOOL:: var_is_introduced ;
var bool: aux3348_BOOL:: var_is_introduced ;
var bool: aux3349_BOOL:: var_is_introduced ;
var bool: aux3350_BOOL:: var_is_introduced ;
var bool: aux3351_BOOL:: var_is_introduced ;
var {0,1}: aux3351_INTEGER :: var_is_introduced ;
var 1..35: aux3352:: var_is_introduced ;
var bool: aux3353_BOOL:: var_is_introduced ;
var bool: aux3354_BOOL:: var_is_introduced ;
var bool: aux3355_BOOL:: var_is_introduced ;
var bool: aux3356_BOOL:: var_is_introduced ;
var bool: aux3357_BOOL:: var_is_introduced ;
var {0,1}: aux3357_INTEGER :: var_is_introduced ;
var 6..40: aux3358:: var_is_introduced ;
var bool: aux3359_BOOL:: var_is_introduced ;
var bool: aux3360_BOOL:: var_is_introduced ;
var bool: aux3361_BOOL:: var_is_introduced ;
var bool: aux3362_BOOL:: var_is_introduced ;
var bool: aux3363_BOOL:: var_is_introduced ;
var {0,1}: aux3363_INTEGER :: var_is_introduced ;
var 2..36: aux3364:: var_is_introduced ;
var bool: aux3365_BOOL:: var_is_introduced ;
var bool: aux3366_BOOL:: var_is_introduced ;
var bool: aux3367_BOOL:: var_is_introduced ;
var bool: aux3368_BOOL:: var_is_introduced ;
var bool: aux3369_BOOL:: var_is_introduced ;
var {0,1}: aux3369_INTEGER :: var_is_introduced ;
var 4..38: aux3370:: var_is_introduced ;
var bool: aux3371_BOOL:: var_is_introduced ;
var bool: aux3372_BOOL:: var_is_introduced ;
var bool: aux3373_BOOL:: var_is_introduced ;
var bool: aux3374_BOOL:: var_is_introduced ;
var bool: aux3375_BOOL:: var_is_introduced ;
var {0,1}: aux3375_INTEGER :: var_is_introduced ;
var 2..36: aux3376:: var_is_introduced ;
var bool: aux3377_BOOL:: var_is_introduced ;
var bool: aux3378_BOOL:: var_is_introduced ;
var bool: aux3379_BOOL:: var_is_introduced ;
var bool: aux3380_BOOL:: var_is_introduced ;
var bool: aux3381_BOOL:: var_is_introduced ;
var {0,1}: aux3381_INTEGER :: var_is_introduced ;
var 2..36: aux3382:: var_is_introduced ;
var bool: aux3383_BOOL:: var_is_introduced ;
var bool: aux3384_BOOL:: var_is_introduced ;
var bool: aux3385_BOOL:: var_is_introduced ;
var bool: aux3386_BOOL:: var_is_introduced ;
var bool: aux3387_BOOL:: var_is_introduced ;
var {0,1}: aux3387_INTEGER :: var_is_introduced ;
var 1..35: aux3388:: var_is_introduced ;
var bool: aux3389_BOOL:: var_is_introduced ;
var bool: aux3390_BOOL:: var_is_introduced ;
var bool: aux3391_BOOL:: var_is_introduced ;
var bool: aux3392_BOOL:: var_is_introduced ;
var bool: aux3393_BOOL:: var_is_introduced ;
var {0,1}: aux3393_INTEGER :: var_is_introduced ;
var 2..36: aux3394:: var_is_introduced ;
var bool: aux3395_BOOL:: var_is_introduced ;
var bool: aux3396_BOOL:: var_is_introduced ;
var bool: aux3397_BOOL:: var_is_introduced ;
var bool: aux3398_BOOL:: var_is_introduced ;
var bool: aux3399_BOOL:: var_is_introduced ;
var {0,1}: aux3399_INTEGER :: var_is_introduced ;
var 3..37: aux3400:: var_is_introduced ;
var bool: aux3401_BOOL:: var_is_introduced ;
var bool: aux3402_BOOL:: var_is_introduced ;
var bool: aux3403_BOOL:: var_is_introduced ;
var bool: aux3404_BOOL:: var_is_introduced ;
var bool: aux3405_BOOL:: var_is_introduced ;
var {0,1}: aux3405_INTEGER :: var_is_introduced ;
var 3..37: aux3406:: var_is_introduced ;
var bool: aux3407_BOOL:: var_is_introduced ;
var bool: aux3408_BOOL:: var_is_introduced ;
var bool: aux3409_BOOL:: var_is_introduced ;
var bool: aux3410_BOOL:: var_is_introduced ;
var bool: aux3411_BOOL:: var_is_introduced ;
var {0,1}: aux3411_INTEGER :: var_is_introduced ;
var 3..37: aux3412:: var_is_introduced ;
var bool: aux3413_BOOL:: var_is_introduced ;
var bool: aux3414_BOOL:: var_is_introduced ;
var bool: aux3415_BOOL:: var_is_introduced ;
var bool: aux3416_BOOL:: var_is_introduced ;
var bool: aux3417_BOOL:: var_is_introduced ;
var {0,1}: aux3417_INTEGER :: var_is_introduced ;
var 2..36: aux3418:: var_is_introduced ;
var bool: aux3419_BOOL:: var_is_introduced ;
var bool: aux3420_BOOL:: var_is_introduced ;
var bool: aux3421_BOOL:: var_is_introduced ;
var {0,1}: aux3421_INTEGER :: var_is_introduced ;
var bool: aux3422_BOOL:: var_is_introduced ;
var 2..36: aux3423:: var_is_introduced ;
var bool: aux3424_BOOL:: var_is_introduced ;
var bool: aux3425_BOOL:: var_is_introduced ;
var bool: aux3426_BOOL:: var_is_introduced ;
var bool: aux3427_BOOL:: var_is_introduced ;
var bool: aux3428_BOOL:: var_is_introduced ;
var {0,1}: aux3428_INTEGER :: var_is_introduced ;
var 1..35: aux3429:: var_is_introduced ;
var bool: aux3430_BOOL:: var_is_introduced ;
var bool: aux3431_BOOL:: var_is_introduced ;
var bool: aux3432_BOOL:: var_is_introduced ;
var bool: aux3433_BOOL:: var_is_introduced ;
var bool: aux3434_BOOL:: var_is_introduced ;
var {0,1}: aux3434_INTEGER :: var_is_introduced ;
var 2..36: aux3435:: var_is_introduced ;
var bool: aux3436_BOOL:: var_is_introduced ;
var bool: aux3437_BOOL:: var_is_introduced ;
var bool: aux3438_BOOL:: var_is_introduced ;
var bool: aux3439_BOOL:: var_is_introduced ;
var bool: aux3440_BOOL:: var_is_introduced ;
var {0,1}: aux3440_INTEGER :: var_is_introduced ;
var 1..35: aux3441:: var_is_introduced ;
var bool: aux3442_BOOL:: var_is_introduced ;
var bool: aux3443_BOOL:: var_is_introduced ;
var bool: aux3444_BOOL:: var_is_introduced ;
var bool: aux3445_BOOL:: var_is_introduced ;
var bool: aux3446_BOOL:: var_is_introduced ;
var {0,1}: aux3446_INTEGER :: var_is_introduced ;
var 6..40: aux3447:: var_is_introduced ;
var bool: aux3448_BOOL:: var_is_introduced ;
var bool: aux3449_BOOL:: var_is_introduced ;
var bool: aux3450_BOOL:: var_is_introduced ;
var bool: aux3451_BOOL:: var_is_introduced ;
var bool: aux3452_BOOL:: var_is_introduced ;
var {0,1}: aux3452_INTEGER :: var_is_introduced ;
var 2..36: aux3453:: var_is_introduced ;
var bool: aux3454_BOOL:: var_is_introduced ;
var bool: aux3455_BOOL:: var_is_introduced ;
var bool: aux3456_BOOL:: var_is_introduced ;
var bool: aux3457_BOOL:: var_is_introduced ;
var bool: aux3458_BOOL:: var_is_introduced ;
var {0,1}: aux3458_INTEGER :: var_is_introduced ;
var 2..36: aux3459:: var_is_introduced ;
var bool: aux3460_BOOL:: var_is_introduced ;
var bool: aux3461_BOOL:: var_is_introduced ;
var bool: aux3462_BOOL:: var_is_introduced ;
var bool: aux3463_BOOL:: var_is_introduced ;
var bool: aux3464_BOOL:: var_is_introduced ;
var {0,1}: aux3464_INTEGER :: var_is_introduced ;
var 2..36: aux3465:: var_is_introduced ;
var bool: aux3466_BOOL:: var_is_introduced ;
var bool: aux3467_BOOL:: var_is_introduced ;
var bool: aux3468_BOOL:: var_is_introduced ;
var bool: aux3469_BOOL:: var_is_introduced ;
var bool: aux3470_BOOL:: var_is_introduced ;
var {0,1}: aux3470_INTEGER :: var_is_introduced ;
var 1..35: aux3471:: var_is_introduced ;
var bool: aux3472_BOOL:: var_is_introduced ;
var bool: aux3473_BOOL:: var_is_introduced ;
var bool: aux3474_BOOL:: var_is_introduced ;
var bool: aux3475_BOOL:: var_is_introduced ;
var bool: aux3476_BOOL:: var_is_introduced ;
var {0,1}: aux3476_INTEGER :: var_is_introduced ;
var 2..36: aux3477:: var_is_introduced ;
var bool: aux3478_BOOL:: var_is_introduced ;
var bool: aux3479_BOOL:: var_is_introduced ;
var bool: aux3480_BOOL:: var_is_introduced ;
var bool: aux3481_BOOL:: var_is_introduced ;
var bool: aux3482_BOOL:: var_is_introduced ;
var {0,1}: aux3482_INTEGER :: var_is_introduced ;
var 3..37: aux3483:: var_is_introduced ;
var bool: aux3484_BOOL:: var_is_introduced ;
var bool: aux3485_BOOL:: var_is_introduced ;
var bool: aux3486_BOOL:: var_is_introduced ;
var bool: aux3487_BOOL:: var_is_introduced ;
var bool: aux3488_BOOL:: var_is_introduced ;
var {0,1}: aux3488_INTEGER :: var_is_introduced ;
var 3..37: aux3489:: var_is_introduced ;
var bool: aux3490_BOOL:: var_is_introduced ;
var bool: aux3491_BOOL:: var_is_introduced ;
var bool: aux3492_BOOL:: var_is_introduced ;
var bool: aux3493_BOOL:: var_is_introduced ;
var bool: aux3494_BOOL:: var_is_introduced ;
var {0,1}: aux3494_INTEGER :: var_is_introduced ;
var 3..37: aux3495:: var_is_introduced ;
var bool: aux3496_BOOL:: var_is_introduced ;
var bool: aux3497_BOOL:: var_is_introduced ;
var bool: aux3498_BOOL:: var_is_introduced ;
var bool: aux3499_BOOL:: var_is_introduced ;
var bool: aux3500_BOOL:: var_is_introduced ;
var {0,1}: aux3500_INTEGER :: var_is_introduced ;
var 4..38: aux3501:: var_is_introduced ;
var bool: aux3502_BOOL:: var_is_introduced ;
var bool: aux3503_BOOL:: var_is_introduced ;
var bool: aux3504_BOOL:: var_is_introduced ;
var {0,1}: aux3504_INTEGER :: var_is_introduced ;
var bool: aux3505_BOOL:: var_is_introduced ;
var 2..36: aux3506:: var_is_introduced ;
var bool: aux3507_BOOL:: var_is_introduced ;
var bool: aux3508_BOOL:: var_is_introduced ;
var bool: aux3509_BOOL:: var_is_introduced ;
var bool: aux3510_BOOL:: var_is_introduced ;
var bool: aux3511_BOOL:: var_is_introduced ;
var {0,1}: aux3511_INTEGER :: var_is_introduced ;
var 1..35: aux3512:: var_is_introduced ;
var bool: aux3513_BOOL:: var_is_introduced ;
var bool: aux3514_BOOL:: var_is_introduced ;
var bool: aux3515_BOOL:: var_is_introduced ;
var bool: aux3516_BOOL:: var_is_introduced ;
var bool: aux3517_BOOL:: var_is_introduced ;
var {0,1}: aux3517_INTEGER :: var_is_introduced ;
var 2..36: aux3518:: var_is_introduced ;
var bool: aux3519_BOOL:: var_is_introduced ;
var bool: aux3520_BOOL:: var_is_introduced ;
var bool: aux3521_BOOL:: var_is_introduced ;
var bool: aux3522_BOOL:: var_is_introduced ;
var bool: aux3523_BOOL:: var_is_introduced ;
var {0,1}: aux3523_INTEGER :: var_is_introduced ;
var 1..35: aux3524:: var_is_introduced ;
var bool: aux3525_BOOL:: var_is_introduced ;
var bool: aux3526_BOOL:: var_is_introduced ;
var bool: aux3527_BOOL:: var_is_introduced ;
var bool: aux3528_BOOL:: var_is_introduced ;
var bool: aux3529_BOOL:: var_is_introduced ;
var {0,1}: aux3529_INTEGER :: var_is_introduced ;
var 6..40: aux3530:: var_is_introduced ;
var bool: aux3531_BOOL:: var_is_introduced ;
var bool: aux3532_BOOL:: var_is_introduced ;
var bool: aux3533_BOOL:: var_is_introduced ;
var bool: aux3534_BOOL:: var_is_introduced ;
var bool: aux3535_BOOL:: var_is_introduced ;
var {0,1}: aux3535_INTEGER :: var_is_introduced ;
var 2..36: aux3536:: var_is_introduced ;
var bool: aux3537_BOOL:: var_is_introduced ;
var bool: aux3538_BOOL:: var_is_introduced ;
var bool: aux3539_BOOL:: var_is_introduced ;
var bool: aux3540_BOOL:: var_is_introduced ;
var bool: aux3541_BOOL:: var_is_introduced ;
var {0,1}: aux3541_INTEGER :: var_is_introduced ;
var 4..38: aux3542:: var_is_introduced ;
var bool: aux3543_BOOL:: var_is_introduced ;
var bool: aux3544_BOOL:: var_is_introduced ;
var bool: aux3545_BOOL:: var_is_introduced ;
var bool: aux3546_BOOL:: var_is_introduced ;
var bool: aux3547_BOOL:: var_is_introduced ;
var {0,1}: aux3547_INTEGER :: var_is_introduced ;
var 2..36: aux3548:: var_is_introduced ;
var bool: aux3549_BOOL:: var_is_introduced ;
var bool: aux3550_BOOL:: var_is_introduced ;
var bool: aux3551_BOOL:: var_is_introduced ;
var bool: aux3552_BOOL:: var_is_introduced ;
var bool: aux3553_BOOL:: var_is_introduced ;
var {0,1}: aux3553_INTEGER :: var_is_introduced ;
var 1..35: aux3554:: var_is_introduced ;
var bool: aux3555_BOOL:: var_is_introduced ;
var bool: aux3556_BOOL:: var_is_introduced ;
var bool: aux3557_BOOL:: var_is_introduced ;
var bool: aux3558_BOOL:: var_is_introduced ;
var bool: aux3559_BOOL:: var_is_introduced ;
var {0,1}: aux3559_INTEGER :: var_is_introduced ;
var 2..36: aux3560:: var_is_introduced ;
var bool: aux3561_BOOL:: var_is_introduced ;
var bool: aux3562_BOOL:: var_is_introduced ;
var bool: aux3563_BOOL:: var_is_introduced ;
var bool: aux3564_BOOL:: var_is_introduced ;
var bool: aux3565_BOOL:: var_is_introduced ;
var {0,1}: aux3565_INTEGER :: var_is_introduced ;
var 3..37: aux3566:: var_is_introduced ;
var bool: aux3567_BOOL:: var_is_introduced ;
var bool: aux3568_BOOL:: var_is_introduced ;
var bool: aux3569_BOOL:: var_is_introduced ;
var bool: aux3570_BOOL:: var_is_introduced ;
var bool: aux3571_BOOL:: var_is_introduced ;
var {0,1}: aux3571_INTEGER :: var_is_introduced ;
var 3..37: aux3572:: var_is_introduced ;
var bool: aux3573_BOOL:: var_is_introduced ;
var bool: aux3574_BOOL:: var_is_introduced ;
var bool: aux3575_BOOL:: var_is_introduced ;
var bool: aux3576_BOOL:: var_is_introduced ;
var bool: aux3577_BOOL:: var_is_introduced ;
var {0,1}: aux3577_INTEGER :: var_is_introduced ;
var 3..37: aux3578:: var_is_introduced ;
var bool: aux3579_BOOL:: var_is_introduced ;
var bool: aux3580_BOOL:: var_is_introduced ;
var bool: aux3581_BOOL:: var_is_introduced ;
var bool: aux3582_BOOL:: var_is_introduced ;
var bool: aux3583_BOOL:: var_is_introduced ;
var {0,1}: aux3583_INTEGER :: var_is_introduced ;
var 2..36: aux3584:: var_is_introduced ;
var bool: aux3585_BOOL:: var_is_introduced ;
var bool: aux3586_BOOL:: var_is_introduced ;
var bool: aux3587_BOOL:: var_is_introduced ;
var {0,1}: aux3587_INTEGER :: var_is_introduced ;
var bool: aux3588_BOOL:: var_is_introduced ;
var 2..36: aux3589:: var_is_introduced ;
var bool: aux3590_BOOL:: var_is_introduced ;
var bool: aux3591_BOOL:: var_is_introduced ;
var bool: aux3592_BOOL:: var_is_introduced ;
var bool: aux3593_BOOL:: var_is_introduced ;
var bool: aux3594_BOOL:: var_is_introduced ;
var {0,1}: aux3594_INTEGER :: var_is_introduced ;
var 1..35: aux3595:: var_is_introduced ;
var bool: aux3596_BOOL:: var_is_introduced ;
var bool: aux3597_BOOL:: var_is_introduced ;
var bool: aux3598_BOOL:: var_is_introduced ;
var bool: aux3599_BOOL:: var_is_introduced ;
var bool: aux3600_BOOL:: var_is_introduced ;
var {0,1}: aux3600_INTEGER :: var_is_introduced ;
var 2..36: aux3601:: var_is_introduced ;
var bool: aux3602_BOOL:: var_is_introduced ;
var bool: aux3603_BOOL:: var_is_introduced ;
var bool: aux3604_BOOL:: var_is_introduced ;
var bool: aux3605_BOOL:: var_is_introduced ;
var bool: aux3606_BOOL:: var_is_introduced ;
var {0,1}: aux3606_INTEGER :: var_is_introduced ;
var 1..35: aux3607:: var_is_introduced ;
var bool: aux3608_BOOL:: var_is_introduced ;
var bool: aux3609_BOOL:: var_is_introduced ;
var bool: aux3610_BOOL:: var_is_introduced ;
var bool: aux3611_BOOL:: var_is_introduced ;
var bool: aux3612_BOOL:: var_is_introduced ;
var {0,1}: aux3612_INTEGER :: var_is_introduced ;
var 6..40: aux3613:: var_is_introduced ;
var bool: aux3614_BOOL:: var_is_introduced ;
var bool: aux3615_BOOL:: var_is_introduced ;
var bool: aux3616_BOOL:: var_is_introduced ;
var bool: aux3617_BOOL:: var_is_introduced ;
var bool: aux3618_BOOL:: var_is_introduced ;
var {0,1}: aux3618_INTEGER :: var_is_introduced ;
var 2..36: aux3619:: var_is_introduced ;
var bool: aux3620_BOOL:: var_is_introduced ;
var bool: aux3621_BOOL:: var_is_introduced ;
var bool: aux3622_BOOL:: var_is_introduced ;
var bool: aux3623_BOOL:: var_is_introduced ;
var bool: aux3624_BOOL:: var_is_introduced ;
var {0,1}: aux3624_INTEGER :: var_is_introduced ;
var 4..38: aux3625:: var_is_introduced ;
var bool: aux3626_BOOL:: var_is_introduced ;
var bool: aux3627_BOOL:: var_is_introduced ;
var bool: aux3628_BOOL:: var_is_introduced ;
var bool: aux3629_BOOL:: var_is_introduced ;
var bool: aux3630_BOOL:: var_is_introduced ;
var {0,1}: aux3630_INTEGER :: var_is_introduced ;
var 2..36: aux3631:: var_is_introduced ;
var bool: aux3632_BOOL:: var_is_introduced ;
var bool: aux3633_BOOL:: var_is_introduced ;
var bool: aux3634_BOOL:: var_is_introduced ;
var bool: aux3635_BOOL:: var_is_introduced ;
var bool: aux3636_BOOL:: var_is_introduced ;
var {0,1}: aux3636_INTEGER :: var_is_introduced ;
var 2..36: aux3637:: var_is_introduced ;
var bool: aux3638_BOOL:: var_is_introduced ;
var bool: aux3639_BOOL:: var_is_introduced ;
var bool: aux3640_BOOL:: var_is_introduced ;
var bool: aux3641_BOOL:: var_is_introduced ;
var bool: aux3642_BOOL:: var_is_introduced ;
var {0,1}: aux3642_INTEGER :: var_is_introduced ;
var 1..35: aux3643:: var_is_introduced ;
var bool: aux3644_BOOL:: var_is_introduced ;
var bool: aux3645_BOOL:: var_is_introduced ;
var bool: aux3646_BOOL:: var_is_introduced ;
var bool: aux3647_BOOL:: var_is_introduced ;
var bool: aux3648_BOOL:: var_is_introduced ;
var {0,1}: aux3648_INTEGER :: var_is_introduced ;
var 2..36: aux3649:: var_is_introduced ;
var bool: aux3650_BOOL:: var_is_introduced ;
var bool: aux3651_BOOL:: var_is_introduced ;
var bool: aux3652_BOOL:: var_is_introduced ;
var bool: aux3653_BOOL:: var_is_introduced ;
var bool: aux3654_BOOL:: var_is_introduced ;
var {0,1}: aux3654_INTEGER :: var_is_introduced ;
var 3..37: aux3655:: var_is_introduced ;
var bool: aux3656_BOOL:: var_is_introduced ;
var bool: aux3657_BOOL:: var_is_introduced ;
var bool: aux3658_BOOL:: var_is_introduced ;
var bool: aux3659_BOOL:: var_is_introduced ;
var bool: aux3660_BOOL:: var_is_introduced ;
var {0,1}: aux3660_INTEGER :: var_is_introduced ;
var 3..37: aux3661:: var_is_introduced ;
var bool: aux3662_BOOL:: var_is_introduced ;
var bool: aux3663_BOOL:: var_is_introduced ;
var bool: aux3664_BOOL:: var_is_introduced ;
var bool: aux3665_BOOL:: var_is_introduced ;
var bool: aux3666_BOOL:: var_is_introduced ;
var {0,1}: aux3666_INTEGER :: var_is_introduced ;
var 3..37: aux3667:: var_is_introduced ;
var bool: aux3668_BOOL:: var_is_introduced ;
var bool: aux3669_BOOL:: var_is_introduced ;
var bool: aux3670_BOOL:: var_is_introduced ;
var {0,1}: aux3670_INTEGER :: var_is_introduced ;
var bool: aux3671_BOOL:: var_is_introduced ;
var 2..36: aux3672:: var_is_introduced ;
var bool: aux3673_BOOL:: var_is_introduced ;
var bool: aux3674_BOOL:: var_is_introduced ;
var bool: aux3675_BOOL:: var_is_introduced ;
var bool: aux3676_BOOL:: var_is_introduced ;
var bool: aux3677_BOOL:: var_is_introduced ;
var {0,1}: aux3677_INTEGER :: var_is_introduced ;
var 1..35: aux3678:: var_is_introduced ;
var bool: aux3679_BOOL:: var_is_introduced ;
var bool: aux3680_BOOL:: var_is_introduced ;
var bool: aux3681_BOOL:: var_is_introduced ;
var bool: aux3682_BOOL:: var_is_introduced ;
var bool: aux3683_BOOL:: var_is_introduced ;
var {0,1}: aux3683_INTEGER :: var_is_introduced ;
var 2..36: aux3684:: var_is_introduced ;
var bool: aux3685_BOOL:: var_is_introduced ;
var bool: aux3686_BOOL:: var_is_introduced ;
var bool: aux3687_BOOL:: var_is_introduced ;
var bool: aux3688_BOOL:: var_is_introduced ;
var bool: aux3689_BOOL:: var_is_introduced ;
var {0,1}: aux3689_INTEGER :: var_is_introduced ;
var 1..35: aux3690:: var_is_introduced ;
var bool: aux3691_BOOL:: var_is_introduced ;
var bool: aux3692_BOOL:: var_is_introduced ;
var bool: aux3693_BOOL:: var_is_introduced ;
var bool: aux3694_BOOL:: var_is_introduced ;
var bool: aux3695_BOOL:: var_is_introduced ;
var {0,1}: aux3695_INTEGER :: var_is_introduced ;
var 6..40: aux3696:: var_is_introduced ;
var bool: aux3697_BOOL:: var_is_introduced ;
var bool: aux3698_BOOL:: var_is_introduced ;
var bool: aux3699_BOOL:: var_is_introduced ;
var bool: aux3700_BOOL:: var_is_introduced ;
var bool: aux3701_BOOL:: var_is_introduced ;
var {0,1}: aux3701_INTEGER :: var_is_introduced ;
var 2..36: aux3702:: var_is_introduced ;
var bool: aux3703_BOOL:: var_is_introduced ;
var bool: aux3704_BOOL:: var_is_introduced ;
var bool: aux3705_BOOL:: var_is_introduced ;
var bool: aux3706_BOOL:: var_is_introduced ;
var bool: aux3707_BOOL:: var_is_introduced ;
var {0,1}: aux3707_INTEGER :: var_is_introduced ;
var 4..38: aux3708:: var_is_introduced ;
var bool: aux3709_BOOL:: var_is_introduced ;
var bool: aux3710_BOOL:: var_is_introduced ;
var bool: aux3711_BOOL:: var_is_introduced ;
var bool: aux3712_BOOL:: var_is_introduced ;
var bool: aux3713_BOOL:: var_is_introduced ;
var {0,1}: aux3713_INTEGER :: var_is_introduced ;
var 2..36: aux3714:: var_is_introduced ;
var bool: aux3715_BOOL:: var_is_introduced ;
var bool: aux3716_BOOL:: var_is_introduced ;
var bool: aux3717_BOOL:: var_is_introduced ;
var bool: aux3718_BOOL:: var_is_introduced ;
var bool: aux3719_BOOL:: var_is_introduced ;
var {0,1}: aux3719_INTEGER :: var_is_introduced ;
var 2..36: aux3720:: var_is_introduced ;
var bool: aux3721_BOOL:: var_is_introduced ;
var bool: aux3722_BOOL:: var_is_introduced ;
var bool: aux3723_BOOL:: var_is_introduced ;
var bool: aux3724_BOOL:: var_is_introduced ;
var bool: aux3725_BOOL:: var_is_introduced ;
var {0,1}: aux3725_INTEGER :: var_is_introduced ;
var 1..35: aux3726:: var_is_introduced ;
var bool: aux3727_BOOL:: var_is_introduced ;
var bool: aux3728_BOOL:: var_is_introduced ;
var bool: aux3729_BOOL:: var_is_introduced ;
var bool: aux3730_BOOL:: var_is_introduced ;
var bool: aux3731_BOOL:: var_is_introduced ;
var {0,1}: aux3731_INTEGER :: var_is_introduced ;
var 3..37: aux3732:: var_is_introduced ;
var bool: aux3733_BOOL:: var_is_introduced ;
var bool: aux3734_BOOL:: var_is_introduced ;
var bool: aux3735_BOOL:: var_is_introduced ;
var bool: aux3736_BOOL:: var_is_introduced ;
var bool: aux3737_BOOL:: var_is_introduced ;
var {0,1}: aux3737_INTEGER :: var_is_introduced ;
var 3..37: aux3738:: var_is_introduced ;
var bool: aux3739_BOOL:: var_is_introduced ;
var bool: aux3740_BOOL:: var_is_introduced ;
var bool: aux3741_BOOL:: var_is_introduced ;
var bool: aux3742_BOOL:: var_is_introduced ;
var bool: aux3743_BOOL:: var_is_introduced ;
var {0,1}: aux3743_INTEGER :: var_is_introduced ;
var 3..37: aux3744:: var_is_introduced ;
var bool: aux3745_BOOL:: var_is_introduced ;
var bool: aux3746_BOOL:: var_is_introduced ;
var bool: aux3747_BOOL:: var_is_introduced ;
var bool: aux3748_BOOL:: var_is_introduced ;
var bool: aux3749_BOOL:: var_is_introduced ;
var {0,1}: aux3749_INTEGER :: var_is_introduced ;
var 2..36: aux3750:: var_is_introduced ;
var bool: aux3751_BOOL:: var_is_introduced ;
var bool: aux3752_BOOL:: var_is_introduced ;
var bool: aux3753_BOOL:: var_is_introduced ;
var {0,1}: aux3753_INTEGER :: var_is_introduced ;
var bool: aux3754_BOOL:: var_is_introduced ;
var bool: aux3755_BOOL:: var_is_introduced ;
var bool: aux3756_BOOL:: var_is_introduced ;
var bool: aux3757_BOOL:: var_is_introduced ;
var bool: aux3758_BOOL:: var_is_introduced ;
var 1..35: aux3759:: var_is_introduced ;
var bool: aux3760_BOOL:: var_is_introduced ;
var bool: aux3761_BOOL:: var_is_introduced ;
var bool: aux3762_BOOL:: var_is_introduced ;
var {0,1}: aux3762_INTEGER :: var_is_introduced ;
var bool: aux3763_BOOL:: var_is_introduced ;
var bool: aux3764_BOOL:: var_is_introduced ;
var 2..36: aux3765:: var_is_introduced ;
var bool: aux3766_BOOL:: var_is_introduced ;
var bool: aux3767_BOOL:: var_is_introduced ;
var bool: aux3768_BOOL:: var_is_introduced ;
var {0,1}: aux3768_INTEGER :: var_is_introduced ;
var bool: aux3769_BOOL:: var_is_introduced ;
var bool: aux3770_BOOL:: var_is_introduced ;
var 3..37: aux3771:: var_is_introduced ;
var bool: aux3772_BOOL:: var_is_introduced ;
var bool: aux3773_BOOL:: var_is_introduced ;
var bool: aux3774_BOOL:: var_is_introduced ;
var {0,1}: aux3774_INTEGER :: var_is_introduced ;
var bool: aux3775_BOOL:: var_is_introduced ;
var bool: aux3776_BOOL:: var_is_introduced ;
var 3..37: aux3777:: var_is_introduced ;
var bool: aux3778_BOOL:: var_is_introduced ;
var bool: aux3779_BOOL:: var_is_introduced ;
var bool: aux3780_BOOL:: var_is_introduced ;
var {0,1}: aux3780_INTEGER :: var_is_introduced ;
var bool: aux3781_BOOL:: var_is_introduced ;
var 3..37: aux3782:: var_is_introduced ;
var bool: aux3783_BOOL:: var_is_introduced ;
var bool: aux3784_BOOL:: var_is_introduced ;
var {0,1}: aux3784_INTEGER :: var_is_introduced ;
var bool: aux3785_BOOL:: var_is_introduced ;
var bool: aux3786_BOOL:: var_is_introduced ;
var 2..36: aux3787:: var_is_introduced ;
var bool: aux3788_BOOL:: var_is_introduced ;
var bool: aux3789_BOOL:: var_is_introduced ;
var bool: aux3790_BOOL:: var_is_introduced ;
var {0,1}: aux3790_INTEGER :: var_is_introduced ;
var bool: aux3791_BOOL:: var_is_introduced ;
var bool: aux3792_BOOL:: var_is_introduced ;
var 6..40: aux3793:: var_is_introduced ;
var bool: aux3794_BOOL:: var_is_introduced ;
var bool: aux3795_BOOL:: var_is_introduced ;
var bool: aux3796_BOOL:: var_is_introduced ;
var {0,1}: aux3796_INTEGER :: var_is_introduced ;
var bool: aux3797_BOOL:: var_is_introduced ;
var bool: aux3798_BOOL:: var_is_introduced ;
var 1..35: aux3799:: var_is_introduced ;
var bool: aux3800_BOOL:: var_is_introduced ;
var bool: aux3801_BOOL:: var_is_introduced ;
var bool: aux3802_BOOL:: var_is_introduced ;
var {0,1}: aux3802_INTEGER :: var_is_introduced ;
var bool: aux3803_BOOL:: var_is_introduced ;
var bool: aux3804_BOOL:: var_is_introduced ;
var 2..36: aux3805:: var_is_introduced ;
var bool: aux3806_BOOL:: var_is_introduced ;
var bool: aux3807_BOOL:: var_is_introduced ;
var bool: aux3808_BOOL:: var_is_introduced ;
var {0,1}: aux3808_INTEGER :: var_is_introduced ;
var bool: aux3809_BOOL:: var_is_introduced ;
var bool: aux3810_BOOL:: var_is_introduced ;
var 1..35: aux3811:: var_is_introduced ;
var bool: aux3812_BOOL:: var_is_introduced ;
var bool: aux3813_BOOL:: var_is_introduced ;
var bool: aux3814_BOOL:: var_is_introduced ;
var {0,1}: aux3814_INTEGER :: var_is_introduced ;
var bool: aux3815_BOOL:: var_is_introduced ;
var bool: aux3816_BOOL:: var_is_introduced ;
var 4..38: aux3817:: var_is_introduced ;
var bool: aux3818_BOOL:: var_is_introduced ;
var bool: aux3819_BOOL:: var_is_introduced ;
var bool: aux3820_BOOL:: var_is_introduced ;
var {0,1}: aux3820_INTEGER :: var_is_introduced ;
var bool: aux3821_BOOL:: var_is_introduced ;
var bool: aux3822_BOOL:: var_is_introduced ;
var 2..36: aux3823:: var_is_introduced ;
var bool: aux3824_BOOL:: var_is_introduced ;
var bool: aux3825_BOOL:: var_is_introduced ;
var bool: aux3826_BOOL:: var_is_introduced ;
var {0,1}: aux3826_INTEGER :: var_is_introduced ;
var bool: aux3827_BOOL:: var_is_introduced ;
var bool: aux3828_BOOL:: var_is_introduced ;
var 2..36: aux3829:: var_is_introduced ;
var bool: aux3830_BOOL:: var_is_introduced ;
var bool: aux3831_BOOL:: var_is_introduced ;
var bool: aux3832_BOOL:: var_is_introduced ;
var {0,1}: aux3832_INTEGER :: var_is_introduced ;
var bool: aux3833_BOOL:: var_is_introduced ;
var bool: aux3834_BOOL:: var_is_introduced ;
var 2..36: aux3835:: var_is_introduced ;
var bool: aux3836_BOOL:: var_is_introduced ;
var bool: aux3837_BOOL:: var_is_introduced ;
var bool: aux3838_BOOL:: var_is_introduced ;
var {0,1}: aux3838_INTEGER :: var_is_introduced ;
var bool: aux3839_BOOL:: var_is_introduced ;
var bool: aux3840_BOOL:: var_is_introduced ;
var 2..36: aux3841:: var_is_introduced ;
var bool: aux3842_BOOL:: var_is_introduced ;
var bool: aux3843_BOOL:: var_is_introduced ;
var {0,1}: aux3843_INTEGER :: var_is_introduced ;
var bool: aux3844_BOOL:: var_is_introduced ;
var bool: aux3845_BOOL:: var_is_introduced ;
var 2..36: aux3846:: var_is_introduced ;
var bool: aux3847_BOOL:: var_is_introduced ;
var bool: aux3848_BOOL:: var_is_introduced ;
var bool: aux3849_BOOL:: var_is_introduced ;
var {0,1}: aux3849_INTEGER :: var_is_introduced ;
var bool: aux3850_BOOL:: var_is_introduced ;
var bool: aux3851_BOOL:: var_is_introduced ;
var 6..40: aux3852:: var_is_introduced ;
var bool: aux3853_BOOL:: var_is_introduced ;
var bool: aux3854_BOOL:: var_is_introduced ;
var bool: aux3855_BOOL:: var_is_introduced ;
var {0,1}: aux3855_INTEGER :: var_is_introduced ;
var bool: aux3856_BOOL:: var_is_introduced ;
var bool: aux3857_BOOL:: var_is_introduced ;
var 1..35: aux3858:: var_is_introduced ;
var bool: aux3859_BOOL:: var_is_introduced ;
var bool: aux3860_BOOL:: var_is_introduced ;
var bool: aux3861_BOOL:: var_is_introduced ;
var {0,1}: aux3861_INTEGER :: var_is_introduced ;
var bool: aux3862_BOOL:: var_is_introduced ;
var bool: aux3863_BOOL:: var_is_introduced ;
var 2..36: aux3864:: var_is_introduced ;
var bool: aux3865_BOOL:: var_is_introduced ;
var bool: aux3866_BOOL:: var_is_introduced ;
var bool: aux3867_BOOL:: var_is_introduced ;
var {0,1}: aux3867_INTEGER :: var_is_introduced ;
var bool: aux3868_BOOL:: var_is_introduced ;
var bool: aux3869_BOOL:: var_is_introduced ;
var 1..35: aux3870:: var_is_introduced ;
var bool: aux3871_BOOL:: var_is_introduced ;
var bool: aux3872_BOOL:: var_is_introduced ;
var bool: aux3873_BOOL:: var_is_introduced ;
var {0,1}: aux3873_INTEGER :: var_is_introduced ;
var bool: aux3874_BOOL:: var_is_introduced ;
var bool: aux3875_BOOL:: var_is_introduced ;
var 4..38: aux3876:: var_is_introduced ;
var bool: aux3877_BOOL:: var_is_introduced ;
var bool: aux3878_BOOL:: var_is_introduced ;
var bool: aux3879_BOOL:: var_is_introduced ;
var {0,1}: aux3879_INTEGER :: var_is_introduced ;
var bool: aux3880_BOOL:: var_is_introduced ;
var bool: aux3881_BOOL:: var_is_introduced ;
var 2..36: aux3882:: var_is_introduced ;
var bool: aux3883_BOOL:: var_is_introduced ;
var bool: aux3884_BOOL:: var_is_introduced ;
var bool: aux3885_BOOL:: var_is_introduced ;
var {0,1}: aux3885_INTEGER :: var_is_introduced ;
var bool: aux3886_BOOL:: var_is_introduced ;
var bool: aux3887_BOOL:: var_is_introduced ;
var 2..36: aux3888:: var_is_introduced ;
var bool: aux3889_BOOL:: var_is_introduced ;
var bool: aux3890_BOOL:: var_is_introduced ;
var bool: aux3891_BOOL:: var_is_introduced ;
var {0,1}: aux3891_INTEGER :: var_is_introduced ;
var bool: aux3892_BOOL:: var_is_introduced ;
var bool: aux3893_BOOL:: var_is_introduced ;
var 1..35: aux3894:: var_is_introduced ;
var bool: aux3895_BOOL:: var_is_introduced ;
var bool: aux3896_BOOL:: var_is_introduced ;
var bool: aux3897_BOOL:: var_is_introduced ;
var {0,1}: aux3897_INTEGER :: var_is_introduced ;
var bool: aux3898_BOOL:: var_is_introduced ;
var bool: aux3899_BOOL:: var_is_introduced ;
var 2..36: aux3900:: var_is_introduced ;
var bool: aux3901_BOOL:: var_is_introduced ;
var bool: aux3902_BOOL:: var_is_introduced ;
var bool: aux3903_BOOL:: var_is_introduced ;
var {0,1}: aux3903_INTEGER :: var_is_introduced ;
var bool: aux3904_BOOL:: var_is_introduced ;
var bool: aux3905_BOOL:: var_is_introduced ;
var 3..37: aux3906:: var_is_introduced ;
var bool: aux3907_BOOL:: var_is_introduced ;
var bool: aux3908_BOOL:: var_is_introduced ;
var bool: aux3909_BOOL:: var_is_introduced ;
var {0,1}: aux3909_INTEGER :: var_is_introduced ;
var bool: aux3910_BOOL:: var_is_introduced ;
var bool: aux3911_BOOL:: var_is_introduced ;
var 3..37: aux3912:: var_is_introduced ;
var bool: aux3913_BOOL:: var_is_introduced ;
var bool: aux3914_BOOL:: var_is_introduced ;
var bool: aux3915_BOOL:: var_is_introduced ;
var {0,1}: aux3915_INTEGER :: var_is_introduced ;
var bool: aux3916_BOOL:: var_is_introduced ;
var bool: aux3917_BOOL:: var_is_introduced ;
var 3..37: aux3918:: var_is_introduced ;
var bool: aux3919_BOOL:: var_is_introduced ;
var bool: aux3920_BOOL:: var_is_introduced ;
var bool: aux3921_BOOL:: var_is_introduced ;
var {0,1}: aux3921_INTEGER :: var_is_introduced ;
var bool: aux3922_BOOL:: var_is_introduced ;
var bool: aux3923_BOOL:: var_is_introduced ;
var 2..36: aux3924:: var_is_introduced ;
var bool: aux3925_BOOL:: var_is_introduced ;
var bool: aux3926_BOOL:: var_is_introduced ;
var {0,1}: aux3926_INTEGER :: var_is_introduced ;
var bool: aux3927_BOOL:: var_is_introduced ;
var bool: aux3928_BOOL:: var_is_introduced ;
var 2..36: aux3929:: var_is_introduced ;
var bool: aux3930_BOOL:: var_is_introduced ;
var bool: aux3931_BOOL:: var_is_introduced ;
var bool: aux3932_BOOL:: var_is_introduced ;
var {0,1}: aux3932_INTEGER :: var_is_introduced ;
var bool: aux3933_BOOL:: var_is_introduced ;
var bool: aux3934_BOOL:: var_is_introduced ;
var 6..40: aux3935:: var_is_introduced ;
var bool: aux3936_BOOL:: var_is_introduced ;
var bool: aux3937_BOOL:: var_is_introduced ;
var bool: aux3938_BOOL:: var_is_introduced ;
var {0,1}: aux3938_INTEGER :: var_is_introduced ;
var bool: aux3939_BOOL:: var_is_introduced ;
var bool: aux3940_BOOL:: var_is_introduced ;
var 1..35: aux3941:: var_is_introduced ;
var bool: aux3942_BOOL:: var_is_introduced ;
var bool: aux3943_BOOL:: var_is_introduced ;
var bool: aux3944_BOOL:: var_is_introduced ;
var {0,1}: aux3944_INTEGER :: var_is_introduced ;
var bool: aux3945_BOOL:: var_is_introduced ;
var bool: aux3946_BOOL:: var_is_introduced ;
var 2..36: aux3947:: var_is_introduced ;
var bool: aux3948_BOOL:: var_is_introduced ;
var bool: aux3949_BOOL:: var_is_introduced ;
var bool: aux3950_BOOL:: var_is_introduced ;
var {0,1}: aux3950_INTEGER :: var_is_introduced ;
var bool: aux3951_BOOL:: var_is_introduced ;
var bool: aux3952_BOOL:: var_is_introduced ;
var 1..35: aux3953:: var_is_introduced ;
var bool: aux3954_BOOL:: var_is_introduced ;
var bool: aux3955_BOOL:: var_is_introduced ;
var bool: aux3956_BOOL:: var_is_introduced ;
var {0,1}: aux3956_INTEGER :: var_is_introduced ;
var bool: aux3957_BOOL:: var_is_introduced ;
var bool: aux3958_BOOL:: var_is_introduced ;
var 4..38: aux3959:: var_is_introduced ;
var bool: aux3960_BOOL:: var_is_introduced ;
var bool: aux3961_BOOL:: var_is_introduced ;
var bool: aux3962_BOOL:: var_is_introduced ;
var {0,1}: aux3962_INTEGER :: var_is_introduced ;
var bool: aux3963_BOOL:: var_is_introduced ;
var bool: aux3964_BOOL:: var_is_introduced ;
var 2..36: aux3965:: var_is_introduced ;
var bool: aux3966_BOOL:: var_is_introduced ;
var bool: aux3967_BOOL:: var_is_introduced ;
var bool: aux3968_BOOL:: var_is_introduced ;
var {0,1}: aux3968_INTEGER :: var_is_introduced ;
var bool: aux3969_BOOL:: var_is_introduced ;
var bool: aux3970_BOOL:: var_is_introduced ;
var 2..36: aux3971:: var_is_introduced ;
var bool: aux3972_BOOL:: var_is_introduced ;
var bool: aux3973_BOOL:: var_is_introduced ;
var bool: aux3974_BOOL:: var_is_introduced ;
var {0,1}: aux3974_INTEGER :: var_is_introduced ;
var bool: aux3975_BOOL:: var_is_introduced ;
var bool: aux3976_BOOL:: var_is_introduced ;
var 1..35: aux3977:: var_is_introduced ;
var bool: aux3978_BOOL:: var_is_introduced ;
var bool: aux3979_BOOL:: var_is_introduced ;
var bool: aux3980_BOOL:: var_is_introduced ;
var {0,1}: aux3980_INTEGER :: var_is_introduced ;
var bool: aux3981_BOOL:: var_is_introduced ;
var bool: aux3982_BOOL:: var_is_introduced ;
var 2..36: aux3983:: var_is_introduced ;
var bool: aux3984_BOOL:: var_is_introduced ;
var bool: aux3985_BOOL:: var_is_introduced ;
var bool: aux3986_BOOL:: var_is_introduced ;
var {0,1}: aux3986_INTEGER :: var_is_introduced ;
var bool: aux3987_BOOL:: var_is_introduced ;
var bool: aux3988_BOOL:: var_is_introduced ;
var 3..37: aux3989:: var_is_introduced ;
var bool: aux3990_BOOL:: var_is_introduced ;
var bool: aux3991_BOOL:: var_is_introduced ;
var bool: aux3992_BOOL:: var_is_introduced ;
var {0,1}: aux3992_INTEGER :: var_is_introduced ;
var bool: aux3993_BOOL:: var_is_introduced ;
var bool: aux3994_BOOL:: var_is_introduced ;
var 3..37: aux3995:: var_is_introduced ;
var bool: aux3996_BOOL:: var_is_introduced ;
var bool: aux3997_BOOL:: var_is_introduced ;
var bool: aux3998_BOOL:: var_is_introduced ;
var {0,1}: aux3998_INTEGER :: var_is_introduced ;
var bool: aux3999_BOOL:: var_is_introduced ;
var bool: aux4000_BOOL:: var_is_introduced ;
var 3..37: aux4001:: var_is_introduced ;
var bool: aux4002_BOOL:: var_is_introduced ;
var bool: aux4003_BOOL:: var_is_introduced ;
var bool: aux4004_BOOL:: var_is_introduced ;
var {0,1}: aux4004_INTEGER :: var_is_introduced ;
var bool: aux4005_BOOL:: var_is_introduced ;
var bool: aux4006_BOOL:: var_is_introduced ;
var bool: aux4007_BOOL:: var_is_introduced ;
var 1..35: aux4008:: var_is_introduced ;
var bool: aux4009_BOOL:: var_is_introduced ;
var bool: aux4010_BOOL:: var_is_introduced ;
var bool: aux4011_BOOL:: var_is_introduced ;
var {0,1}: aux4011_INTEGER :: var_is_introduced ;
var bool: aux4012_BOOL:: var_is_introduced ;
var bool: aux4013_BOOL:: var_is_introduced ;
var 2..36: aux4014:: var_is_introduced ;
var bool: aux4015_BOOL:: var_is_introduced ;
var bool: aux4016_BOOL:: var_is_introduced ;
var bool: aux4017_BOOL:: var_is_introduced ;
var {0,1}: aux4017_INTEGER :: var_is_introduced ;
var bool: aux4018_BOOL:: var_is_introduced ;
var bool: aux4019_BOOL:: var_is_introduced ;
var 3..37: aux4020:: var_is_introduced ;
var bool: aux4021_BOOL:: var_is_introduced ;
var bool: aux4022_BOOL:: var_is_introduced ;
var bool: aux4023_BOOL:: var_is_introduced ;
var {0,1}: aux4023_INTEGER :: var_is_introduced ;
var bool: aux4024_BOOL:: var_is_introduced ;
var bool: aux4025_BOOL:: var_is_introduced ;
var 3..37: aux4026:: var_is_introduced ;
var bool: aux4027_BOOL:: var_is_introduced ;
var bool: aux4028_BOOL:: var_is_introduced ;
var bool: aux4029_BOOL:: var_is_introduced ;
var {0,1}: aux4029_INTEGER :: var_is_introduced ;
var bool: aux4030_BOOL:: var_is_introduced ;
var 3..37: aux4031:: var_is_introduced ;
var bool: aux4032_BOOL:: var_is_introduced ;
var bool: aux4033_BOOL:: var_is_introduced ;
var {0,1}: aux4033_INTEGER :: var_is_introduced ;
var bool: aux4034_BOOL:: var_is_introduced ;
var bool: aux4035_BOOL:: var_is_introduced ;
var 2..36: aux4036:: var_is_introduced ;
var bool: aux4037_BOOL:: var_is_introduced ;
var bool: aux4038_BOOL:: var_is_introduced ;
var bool: aux4039_BOOL:: var_is_introduced ;
var {0,1}: aux4039_INTEGER :: var_is_introduced ;
var bool: aux4040_BOOL:: var_is_introduced ;
var bool: aux4041_BOOL:: var_is_introduced ;
var 6..40: aux4042:: var_is_introduced ;
var bool: aux4043_BOOL:: var_is_introduced ;
var bool: aux4044_BOOL:: var_is_introduced ;
var bool: aux4045_BOOL:: var_is_introduced ;
var {0,1}: aux4045_INTEGER :: var_is_introduced ;
var bool: aux4046_BOOL:: var_is_introduced ;
var bool: aux4047_BOOL:: var_is_introduced ;
var 1..35: aux4048:: var_is_introduced ;
var bool: aux4049_BOOL:: var_is_introduced ;
var bool: aux4050_BOOL:: var_is_introduced ;
var bool: aux4051_BOOL:: var_is_introduced ;
var {0,1}: aux4051_INTEGER :: var_is_introduced ;
var bool: aux4052_BOOL:: var_is_introduced ;
var bool: aux4053_BOOL:: var_is_introduced ;
var 2..36: aux4054:: var_is_introduced ;
var bool: aux4055_BOOL:: var_is_introduced ;
var bool: aux4056_BOOL:: var_is_introduced ;
var bool: aux4057_BOOL:: var_is_introduced ;
var {0,1}: aux4057_INTEGER :: var_is_introduced ;
var bool: aux4058_BOOL:: var_is_introduced ;
var bool: aux4059_BOOL:: var_is_introduced ;
var 1..35: aux4060:: var_is_introduced ;
var bool: aux4061_BOOL:: var_is_introduced ;
var bool: aux4062_BOOL:: var_is_introduced ;
var bool: aux4063_BOOL:: var_is_introduced ;
var {0,1}: aux4063_INTEGER :: var_is_introduced ;
var bool: aux4064_BOOL:: var_is_introduced ;
var bool: aux4065_BOOL:: var_is_introduced ;
var 4..38: aux4066:: var_is_introduced ;
var bool: aux4067_BOOL:: var_is_introduced ;
var bool: aux4068_BOOL:: var_is_introduced ;
var bool: aux4069_BOOL:: var_is_introduced ;
var {0,1}: aux4069_INTEGER :: var_is_introduced ;
var bool: aux4070_BOOL:: var_is_introduced ;
var bool: aux4071_BOOL:: var_is_introduced ;
var 2..36: aux4072:: var_is_introduced ;
var bool: aux4073_BOOL:: var_is_introduced ;
var bool: aux4074_BOOL:: var_is_introduced ;
var bool: aux4075_BOOL:: var_is_introduced ;
var {0,1}: aux4075_INTEGER :: var_is_introduced ;
var bool: aux4076_BOOL:: var_is_introduced ;
var bool: aux4077_BOOL:: var_is_introduced ;
var 2..36: aux4078:: var_is_introduced ;
var bool: aux4079_BOOL:: var_is_introduced ;
var bool: aux4080_BOOL:: var_is_introduced ;
var bool: aux4081_BOOL:: var_is_introduced ;
var {0,1}: aux4081_INTEGER :: var_is_introduced ;
var bool: aux4082_BOOL:: var_is_introduced ;
var bool: aux4083_BOOL:: var_is_introduced ;
var 2..36: aux4084:: var_is_introduced ;
var bool: aux4085_BOOL:: var_is_introduced ;
var bool: aux4086_BOOL:: var_is_introduced ;
var bool: aux4087_BOOL:: var_is_introduced ;
var {0,1}: aux4087_INTEGER :: var_is_introduced ;
var bool: aux4088_BOOL:: var_is_introduced ;
var bool: aux4089_BOOL:: var_is_introduced ;
var 2..36: aux4090:: var_is_introduced ;
var bool: aux4091_BOOL:: var_is_introduced ;
var bool: aux4092_BOOL:: var_is_introduced ;
var {0,1}: aux4092_INTEGER :: var_is_introduced ;
var bool: aux4093_BOOL:: var_is_introduced ;
var bool: aux4094_BOOL:: var_is_introduced ;
var 2..36: aux4095:: var_is_introduced ;
var bool: aux4096_BOOL:: var_is_introduced ;
var bool: aux4097_BOOL:: var_is_introduced ;
var bool: aux4098_BOOL:: var_is_introduced ;
var {0,1}: aux4098_INTEGER :: var_is_introduced ;
var bool: aux4099_BOOL:: var_is_introduced ;
var bool: aux4100_BOOL:: var_is_introduced ;
var 6..40: aux4101:: var_is_introduced ;
var bool: aux4102_BOOL:: var_is_introduced ;
var bool: aux4103_BOOL:: var_is_introduced ;
var bool: aux4104_BOOL:: var_is_introduced ;
var {0,1}: aux4104_INTEGER :: var_is_introduced ;
var bool: aux4105_BOOL:: var_is_introduced ;
var bool: aux4106_BOOL:: var_is_introduced ;
var 1..35: aux4107:: var_is_introduced ;
var bool: aux4108_BOOL:: var_is_introduced ;
var bool: aux4109_BOOL:: var_is_introduced ;
var bool: aux4110_BOOL:: var_is_introduced ;
var {0,1}: aux4110_INTEGER :: var_is_introduced ;
var bool: aux4111_BOOL:: var_is_introduced ;
var bool: aux4112_BOOL:: var_is_introduced ;
var 1..35: aux4113:: var_is_introduced ;
var bool: aux4114_BOOL:: var_is_introduced ;
var bool: aux4115_BOOL:: var_is_introduced ;
var bool: aux4116_BOOL:: var_is_introduced ;
var {0,1}: aux4116_INTEGER :: var_is_introduced ;
var bool: aux4117_BOOL:: var_is_introduced ;
var bool: aux4118_BOOL:: var_is_introduced ;
var 4..38: aux4119:: var_is_introduced ;
var bool: aux4120_BOOL:: var_is_introduced ;
var bool: aux4121_BOOL:: var_is_introduced ;
var bool: aux4122_BOOL:: var_is_introduced ;
var {0,1}: aux4122_INTEGER :: var_is_introduced ;
var bool: aux4123_BOOL:: var_is_introduced ;
var bool: aux4124_BOOL:: var_is_introduced ;
var 2..36: aux4125:: var_is_introduced ;
var bool: aux4126_BOOL:: var_is_introduced ;
var bool: aux4127_BOOL:: var_is_introduced ;
var bool: aux4128_BOOL:: var_is_introduced ;
var {0,1}: aux4128_INTEGER :: var_is_introduced ;
var bool: aux4129_BOOL:: var_is_introduced ;
var bool: aux4130_BOOL:: var_is_introduced ;
var 2..36: aux4131:: var_is_introduced ;
var bool: aux4132_BOOL:: var_is_introduced ;
var bool: aux4133_BOOL:: var_is_introduced ;
var bool: aux4134_BOOL:: var_is_introduced ;
var {0,1}: aux4134_INTEGER :: var_is_introduced ;
var bool: aux4135_BOOL:: var_is_introduced ;
var bool: aux4136_BOOL:: var_is_introduced ;
var 2..36: aux4137:: var_is_introduced ;
var bool: aux4138_BOOL:: var_is_introduced ;
var bool: aux4139_BOOL:: var_is_introduced ;
var bool: aux4140_BOOL:: var_is_introduced ;
var {0,1}: aux4140_INTEGER :: var_is_introduced ;
var bool: aux4141_BOOL:: var_is_introduced ;
var bool: aux4142_BOOL:: var_is_introduced ;
var 1..35: aux4143:: var_is_introduced ;
var bool: aux4144_BOOL:: var_is_introduced ;
var bool: aux4145_BOOL:: var_is_introduced ;
var bool: aux4146_BOOL:: var_is_introduced ;
var {0,1}: aux4146_INTEGER :: var_is_introduced ;
var bool: aux4147_BOOL:: var_is_introduced ;
var bool: aux4148_BOOL:: var_is_introduced ;
var 2..36: aux4149:: var_is_introduced ;
var bool: aux4150_BOOL:: var_is_introduced ;
var bool: aux4151_BOOL:: var_is_introduced ;
var bool: aux4152_BOOL:: var_is_introduced ;
var {0,1}: aux4152_INTEGER :: var_is_introduced ;
var bool: aux4153_BOOL:: var_is_introduced ;
var bool: aux4154_BOOL:: var_is_introduced ;
var 3..37: aux4155:: var_is_introduced ;
var bool: aux4156_BOOL:: var_is_introduced ;
var bool: aux4157_BOOL:: var_is_introduced ;
var bool: aux4158_BOOL:: var_is_introduced ;
var {0,1}: aux4158_INTEGER :: var_is_introduced ;
var bool: aux4159_BOOL:: var_is_introduced ;
var bool: aux4160_BOOL:: var_is_introduced ;
var 3..37: aux4161:: var_is_introduced ;
var bool: aux4162_BOOL:: var_is_introduced ;
var bool: aux4163_BOOL:: var_is_introduced ;
var bool: aux4164_BOOL:: var_is_introduced ;
var {0,1}: aux4164_INTEGER :: var_is_introduced ;
var bool: aux4165_BOOL:: var_is_introduced ;
var bool: aux4166_BOOL:: var_is_introduced ;
var 3..37: aux4167:: var_is_introduced ;
var bool: aux4168_BOOL:: var_is_introduced ;
var bool: aux4169_BOOL:: var_is_introduced ;
var bool: aux4170_BOOL:: var_is_introduced ;
var {0,1}: aux4170_INTEGER :: var_is_introduced ;
var bool: aux4171_BOOL:: var_is_introduced ;
var bool: aux4172_BOOL:: var_is_introduced ;
var bool: aux4173_BOOL:: var_is_introduced ;
var 1..35: aux4174:: var_is_introduced ;
var bool: aux4175_BOOL:: var_is_introduced ;
var bool: aux4176_BOOL:: var_is_introduced ;
var bool: aux4177_BOOL:: var_is_introduced ;
var {0,1}: aux4177_INTEGER :: var_is_introduced ;
var bool: aux4178_BOOL:: var_is_introduced ;
var bool: aux4179_BOOL:: var_is_introduced ;
var 2..36: aux4180:: var_is_introduced ;
var bool: aux4181_BOOL:: var_is_introduced ;
var bool: aux4182_BOOL:: var_is_introduced ;
var bool: aux4183_BOOL:: var_is_introduced ;
var {0,1}: aux4183_INTEGER :: var_is_introduced ;
var bool: aux4184_BOOL:: var_is_introduced ;
var bool: aux4185_BOOL:: var_is_introduced ;
var 3..37: aux4186:: var_is_introduced ;
var bool: aux4187_BOOL:: var_is_introduced ;
var bool: aux4188_BOOL:: var_is_introduced ;
var bool: aux4189_BOOL:: var_is_introduced ;
var {0,1}: aux4189_INTEGER :: var_is_introduced ;
var bool: aux4190_BOOL:: var_is_introduced ;
var bool: aux4191_BOOL:: var_is_introduced ;
var 3..37: aux4192:: var_is_introduced ;
var bool: aux4193_BOOL:: var_is_introduced ;
var bool: aux4194_BOOL:: var_is_introduced ;
var bool: aux4195_BOOL:: var_is_introduced ;
var {0,1}: aux4195_INTEGER :: var_is_introduced ;
var bool: aux4196_BOOL:: var_is_introduced ;
var 3..37: aux4197:: var_is_introduced ;
var bool: aux4198_BOOL:: var_is_introduced ;
var bool: aux4199_BOOL:: var_is_introduced ;
var {0,1}: aux4199_INTEGER :: var_is_introduced ;
var bool: aux4200_BOOL:: var_is_introduced ;
var bool: aux4201_BOOL:: var_is_introduced ;
var 2..36: aux4202:: var_is_introduced ;
var bool: aux4203_BOOL:: var_is_introduced ;
var bool: aux4204_BOOL:: var_is_introduced ;
var bool: aux4205_BOOL:: var_is_introduced ;
var {0,1}: aux4205_INTEGER :: var_is_introduced ;
var bool: aux4206_BOOL:: var_is_introduced ;
var bool: aux4207_BOOL:: var_is_introduced ;
var 6..40: aux4208:: var_is_introduced ;
var bool: aux4209_BOOL:: var_is_introduced ;
var bool: aux4210_BOOL:: var_is_introduced ;
var bool: aux4211_BOOL:: var_is_introduced ;
var {0,1}: aux4211_INTEGER :: var_is_introduced ;
var bool: aux4212_BOOL:: var_is_introduced ;
var bool: aux4213_BOOL:: var_is_introduced ;
var 1..35: aux4214:: var_is_introduced ;
var bool: aux4215_BOOL:: var_is_introduced ;
var bool: aux4216_BOOL:: var_is_introduced ;
var bool: aux4217_BOOL:: var_is_introduced ;
var {0,1}: aux4217_INTEGER :: var_is_introduced ;
var bool: aux4218_BOOL:: var_is_introduced ;
var bool: aux4219_BOOL:: var_is_introduced ;
var 2..36: aux4220:: var_is_introduced ;
var bool: aux4221_BOOL:: var_is_introduced ;
var bool: aux4222_BOOL:: var_is_introduced ;
var bool: aux4223_BOOL:: var_is_introduced ;
var {0,1}: aux4223_INTEGER :: var_is_introduced ;
var bool: aux4224_BOOL:: var_is_introduced ;
var bool: aux4225_BOOL:: var_is_introduced ;
var 1..35: aux4226:: var_is_introduced ;
var bool: aux4227_BOOL:: var_is_introduced ;
var bool: aux4228_BOOL:: var_is_introduced ;
var bool: aux4229_BOOL:: var_is_introduced ;
var {0,1}: aux4229_INTEGER :: var_is_introduced ;
var bool: aux4230_BOOL:: var_is_introduced ;
var bool: aux4231_BOOL:: var_is_introduced ;
var 4..38: aux4232:: var_is_introduced ;
var bool: aux4233_BOOL:: var_is_introduced ;
var bool: aux4234_BOOL:: var_is_introduced ;
var bool: aux4235_BOOL:: var_is_introduced ;
var {0,1}: aux4235_INTEGER :: var_is_introduced ;
var bool: aux4236_BOOL:: var_is_introduced ;
var bool: aux4237_BOOL:: var_is_introduced ;
var 2..36: aux4238:: var_is_introduced ;
var bool: aux4239_BOOL:: var_is_introduced ;
var bool: aux4240_BOOL:: var_is_introduced ;
var bool: aux4241_BOOL:: var_is_introduced ;
var {0,1}: aux4241_INTEGER :: var_is_introduced ;
var bool: aux4242_BOOL:: var_is_introduced ;
var bool: aux4243_BOOL:: var_is_introduced ;
var 2..36: aux4244:: var_is_introduced ;
var bool: aux4245_BOOL:: var_is_introduced ;
var bool: aux4246_BOOL:: var_is_introduced ;
var bool: aux4247_BOOL:: var_is_introduced ;
var {0,1}: aux4247_INTEGER :: var_is_introduced ;
var bool: aux4248_BOOL:: var_is_introduced ;
var bool: aux4249_BOOL:: var_is_introduced ;
var 2..36: aux4250:: var_is_introduced ;
var bool: aux4251_BOOL:: var_is_introduced ;
var bool: aux4252_BOOL:: var_is_introduced ;
var bool: aux4253_BOOL:: var_is_introduced ;
var {0,1}: aux4253_INTEGER :: var_is_introduced ;
var bool: aux4254_BOOL:: var_is_introduced ;
var bool: aux4255_BOOL:: var_is_introduced ;
var 6..40: aux4256:: var_is_introduced ;
var bool: aux4257_BOOL:: var_is_introduced ;
var bool: aux4258_BOOL:: var_is_introduced ;
var {0,1}: aux4258_INTEGER :: var_is_introduced ;
var bool: aux4259_BOOL:: var_is_introduced ;
var bool: aux4260_BOOL:: var_is_introduced ;
var 2..36: aux4261:: var_is_introduced ;
var bool: aux4262_BOOL:: var_is_introduced ;
var bool: aux4263_BOOL:: var_is_introduced ;
var bool: aux4264_BOOL:: var_is_introduced ;
var {0,1}: aux4264_INTEGER :: var_is_introduced ;
var bool: aux4265_BOOL:: var_is_introduced ;
var bool: aux4266_BOOL:: var_is_introduced ;
var 1..35: aux4267:: var_is_introduced ;
var bool: aux4268_BOOL:: var_is_introduced ;
var bool: aux4269_BOOL:: var_is_introduced ;
var bool: aux4270_BOOL:: var_is_introduced ;
var {0,1}: aux4270_INTEGER :: var_is_introduced ;
var bool: aux4271_BOOL:: var_is_introduced ;
var bool: aux4272_BOOL:: var_is_introduced ;
var 2..36: aux4273:: var_is_introduced ;
var bool: aux4274_BOOL:: var_is_introduced ;
var bool: aux4275_BOOL:: var_is_introduced ;
var bool: aux4276_BOOL:: var_is_introduced ;
var {0,1}: aux4276_INTEGER :: var_is_introduced ;
var bool: aux4277_BOOL:: var_is_introduced ;
var bool: aux4278_BOOL:: var_is_introduced ;
var 1..35: aux4279:: var_is_introduced ;
var bool: aux4280_BOOL:: var_is_introduced ;
var bool: aux4281_BOOL:: var_is_introduced ;
var bool: aux4282_BOOL:: var_is_introduced ;
var {0,1}: aux4282_INTEGER :: var_is_introduced ;
var bool: aux4283_BOOL:: var_is_introduced ;
var bool: aux4284_BOOL:: var_is_introduced ;
var 4..38: aux4285:: var_is_introduced ;
var bool: aux4286_BOOL:: var_is_introduced ;
var bool: aux4287_BOOL:: var_is_introduced ;
var bool: aux4288_BOOL:: var_is_introduced ;
var {0,1}: aux4288_INTEGER :: var_is_introduced ;
var bool: aux4289_BOOL:: var_is_introduced ;
var bool: aux4290_BOOL:: var_is_introduced ;
var 2..36: aux4291:: var_is_introduced ;
var bool: aux4292_BOOL:: var_is_introduced ;
var bool: aux4293_BOOL:: var_is_introduced ;
var bool: aux4294_BOOL:: var_is_introduced ;
var {0,1}: aux4294_INTEGER :: var_is_introduced ;
var bool: aux4295_BOOL:: var_is_introduced ;
var bool: aux4296_BOOL:: var_is_introduced ;
var 2..36: aux4297:: var_is_introduced ;
var bool: aux4298_BOOL:: var_is_introduced ;
var bool: aux4299_BOOL:: var_is_introduced ;
var bool: aux4300_BOOL:: var_is_introduced ;
var {0,1}: aux4300_INTEGER :: var_is_introduced ;
var bool: aux4301_BOOL:: var_is_introduced ;
var bool: aux4302_BOOL:: var_is_introduced ;
var 2..36: aux4303:: var_is_introduced ;
var bool: aux4304_BOOL:: var_is_introduced ;
var bool: aux4305_BOOL:: var_is_introduced ;
var bool: aux4306_BOOL:: var_is_introduced ;
var {0,1}: aux4306_INTEGER :: var_is_introduced ;
var bool: aux4307_BOOL:: var_is_introduced ;
var bool: aux4308_BOOL:: var_is_introduced ;
var 1..35: aux4309:: var_is_introduced ;
var bool: aux4310_BOOL:: var_is_introduced ;
var bool: aux4311_BOOL:: var_is_introduced ;
var bool: aux4312_BOOL:: var_is_introduced ;
var {0,1}: aux4312_INTEGER :: var_is_introduced ;
var bool: aux4313_BOOL:: var_is_introduced ;
var bool: aux4314_BOOL:: var_is_introduced ;
var 2..36: aux4315:: var_is_introduced ;
var bool: aux4316_BOOL:: var_is_introduced ;
var bool: aux4317_BOOL:: var_is_introduced ;
var bool: aux4318_BOOL:: var_is_introduced ;
var {0,1}: aux4318_INTEGER :: var_is_introduced ;
var bool: aux4319_BOOL:: var_is_introduced ;
var bool: aux4320_BOOL:: var_is_introduced ;
var 3..37: aux4321:: var_is_introduced ;
var bool: aux4322_BOOL:: var_is_introduced ;
var bool: aux4323_BOOL:: var_is_introduced ;
var bool: aux4324_BOOL:: var_is_introduced ;
var {0,1}: aux4324_INTEGER :: var_is_introduced ;
var bool: aux4325_BOOL:: var_is_introduced ;
var bool: aux4326_BOOL:: var_is_introduced ;
var 3..37: aux4327:: var_is_introduced ;
var bool: aux4328_BOOL:: var_is_introduced ;
var bool: aux4329_BOOL:: var_is_introduced ;
var bool: aux4330_BOOL:: var_is_introduced ;
var {0,1}: aux4330_INTEGER :: var_is_introduced ;
var bool: aux4331_BOOL:: var_is_introduced ;
var bool: aux4332_BOOL:: var_is_introduced ;
var 3..37: aux4333:: var_is_introduced ;
var bool: aux4334_BOOL:: var_is_introduced ;
var bool: aux4335_BOOL:: var_is_introduced ;
var bool: aux4336_BOOL:: var_is_introduced ;
var {0,1}: aux4336_INTEGER :: var_is_introduced ;
var bool: aux4337_BOOL:: var_is_introduced ;
var bool: aux4338_BOOL:: var_is_introduced ;
var 1..35: aux4339:: var_is_introduced ;
var bool: aux4340_BOOL:: var_is_introduced ;
var bool: aux4341_BOOL:: var_is_introduced ;
var {0,1}: aux4341_INTEGER :: var_is_introduced ;
var bool: aux4342_BOOL:: var_is_introduced ;
var bool: aux4343_BOOL:: var_is_introduced ;
var 2..36: aux4344:: var_is_introduced ;
var bool: aux4345_BOOL:: var_is_introduced ;
var bool: aux4346_BOOL:: var_is_introduced ;
var bool: aux4347_BOOL:: var_is_introduced ;
var {0,1}: aux4347_INTEGER :: var_is_introduced ;
var bool: aux4348_BOOL:: var_is_introduced ;
var bool: aux4349_BOOL:: var_is_introduced ;
var 6..40: aux4350:: var_is_introduced ;
var bool: aux4351_BOOL:: var_is_introduced ;
var bool: aux4352_BOOL:: var_is_introduced ;
var bool: aux4353_BOOL:: var_is_introduced ;
var {0,1}: aux4353_INTEGER :: var_is_introduced ;
var bool: aux4354_BOOL:: var_is_introduced ;
var bool: aux4355_BOOL:: var_is_introduced ;
var 1..35: aux4356:: var_is_introduced ;
var bool: aux4357_BOOL:: var_is_introduced ;
var bool: aux4358_BOOL:: var_is_introduced ;
var bool: aux4359_BOOL:: var_is_introduced ;
var {0,1}: aux4359_INTEGER :: var_is_introduced ;
var bool: aux4360_BOOL:: var_is_introduced ;
var bool: aux4361_BOOL:: var_is_introduced ;
var 2..36: aux4362:: var_is_introduced ;
var bool: aux4363_BOOL:: var_is_introduced ;
var bool: aux4364_BOOL:: var_is_introduced ;
var bool: aux4365_BOOL:: var_is_introduced ;
var {0,1}: aux4365_INTEGER :: var_is_introduced ;
var bool: aux4366_BOOL:: var_is_introduced ;
var bool: aux4367_BOOL:: var_is_introduced ;
var 4..38: aux4368:: var_is_introduced ;
var bool: aux4369_BOOL:: var_is_introduced ;
var bool: aux4370_BOOL:: var_is_introduced ;
var bool: aux4371_BOOL:: var_is_introduced ;
var {0,1}: aux4371_INTEGER :: var_is_introduced ;
var bool: aux4372_BOOL:: var_is_introduced ;
var bool: aux4373_BOOL:: var_is_introduced ;
var 2..36: aux4374:: var_is_introduced ;
var bool: aux4375_BOOL:: var_is_introduced ;
var bool: aux4376_BOOL:: var_is_introduced ;
var bool: aux4377_BOOL:: var_is_introduced ;
var {0,1}: aux4377_INTEGER :: var_is_introduced ;
var bool: aux4378_BOOL:: var_is_introduced ;
var bool: aux4379_BOOL:: var_is_introduced ;
var 2..36: aux4380:: var_is_introduced ;
var bool: aux4381_BOOL:: var_is_introduced ;
var bool: aux4382_BOOL:: var_is_introduced ;
var bool: aux4383_BOOL:: var_is_introduced ;
var {0,1}: aux4383_INTEGER :: var_is_introduced ;
var bool: aux4384_BOOL:: var_is_introduced ;
var bool: aux4385_BOOL:: var_is_introduced ;
var 2..36: aux4386:: var_is_introduced ;
var bool: aux4387_BOOL:: var_is_introduced ;
var bool: aux4388_BOOL:: var_is_introduced ;
var bool: aux4389_BOOL:: var_is_introduced ;
var {0,1}: aux4389_INTEGER :: var_is_introduced ;
var bool: aux4390_BOOL:: var_is_introduced ;
var bool: aux4391_BOOL:: var_is_introduced ;
var 1..35: aux4392:: var_is_introduced ;
var bool: aux4393_BOOL:: var_is_introduced ;
var bool: aux4394_BOOL:: var_is_introduced ;
var bool: aux4395_BOOL:: var_is_introduced ;
var {0,1}: aux4395_INTEGER :: var_is_introduced ;
var bool: aux4396_BOOL:: var_is_introduced ;
var bool: aux4397_BOOL:: var_is_introduced ;
var 2..36: aux4398:: var_is_introduced ;
var bool: aux4399_BOOL:: var_is_introduced ;
var bool: aux4400_BOOL:: var_is_introduced ;
var bool: aux4401_BOOL:: var_is_introduced ;
var {0,1}: aux4401_INTEGER :: var_is_introduced ;
var bool: aux4402_BOOL:: var_is_introduced ;
var bool: aux4403_BOOL:: var_is_introduced ;
var 3..37: aux4404:: var_is_introduced ;
var bool: aux4405_BOOL:: var_is_introduced ;
var bool: aux4406_BOOL:: var_is_introduced ;
var bool: aux4407_BOOL:: var_is_introduced ;
var {0,1}: aux4407_INTEGER :: var_is_introduced ;
var bool: aux4408_BOOL:: var_is_introduced ;
var bool: aux4409_BOOL:: var_is_introduced ;
var 3..37: aux4410:: var_is_introduced ;
var bool: aux4411_BOOL:: var_is_introduced ;
var bool: aux4412_BOOL:: var_is_introduced ;
var bool: aux4413_BOOL:: var_is_introduced ;
var {0,1}: aux4413_INTEGER :: var_is_introduced ;
var bool: aux4414_BOOL:: var_is_introduced ;
var bool: aux4415_BOOL:: var_is_introduced ;
var 3..37: aux4416:: var_is_introduced ;
var bool: aux4417_BOOL:: var_is_introduced ;
var bool: aux4418_BOOL:: var_is_introduced ;
var bool: aux4419_BOOL:: var_is_introduced ;
var {0,1}: aux4419_INTEGER :: var_is_introduced ;
var bool: aux4420_BOOL:: var_is_introduced ;
var bool: aux4421_BOOL:: var_is_introduced ;
var bool: aux4422_BOOL:: var_is_introduced ;
var 2..36: aux4423:: var_is_introduced ;
var bool: aux4424_BOOL:: var_is_introduced ;
var bool: aux4425_BOOL:: var_is_introduced ;
var bool: aux4426_BOOL:: var_is_introduced ;
var {0,1}: aux4426_INTEGER :: var_is_introduced ;
var bool: aux4427_BOOL:: var_is_introduced ;
var bool: aux4428_BOOL:: var_is_introduced ;
var 3..37: aux4429:: var_is_introduced ;
var bool: aux4430_BOOL:: var_is_introduced ;
var bool: aux4431_BOOL:: var_is_introduced ;
var bool: aux4432_BOOL:: var_is_introduced ;
var {0,1}: aux4432_INTEGER :: var_is_introduced ;
var bool: aux4433_BOOL:: var_is_introduced ;
var bool: aux4434_BOOL:: var_is_introduced ;
var 3..37: aux4435:: var_is_introduced ;
var bool: aux4436_BOOL:: var_is_introduced ;
var bool: aux4437_BOOL:: var_is_introduced ;
var bool: aux4438_BOOL:: var_is_introduced ;
var {0,1}: aux4438_INTEGER :: var_is_introduced ;
var bool: aux4439_BOOL:: var_is_introduced ;
var bool: aux4440_BOOL:: var_is_introduced ;
var 3..37: aux4441:: var_is_introduced ;
var bool: aux4442_BOOL:: var_is_introduced ;
var bool: aux4443_BOOL:: var_is_introduced ;
var bool: aux4444_BOOL:: var_is_introduced ;
var {0,1}: aux4444_INTEGER :: var_is_introduced ;
var bool: aux4445_BOOL:: var_is_introduced ;
var 1..35: aux4446:: var_is_introduced ;
var bool: aux4447_BOOL:: var_is_introduced ;
var bool: aux4448_BOOL:: var_is_introduced ;
var {0,1}: aux4448_INTEGER :: var_is_introduced ;
var bool: aux4449_BOOL:: var_is_introduced ;
var bool: aux4450_BOOL:: var_is_introduced ;
var 2..36: aux4451:: var_is_introduced ;
var bool: aux4452_BOOL:: var_is_introduced ;
var bool: aux4453_BOOL:: var_is_introduced ;
var bool: aux4454_BOOL:: var_is_introduced ;
var {0,1}: aux4454_INTEGER :: var_is_introduced ;
var bool: aux4455_BOOL:: var_is_introduced ;
var bool: aux4456_BOOL:: var_is_introduced ;
var 6..40: aux4457:: var_is_introduced ;
var bool: aux4458_BOOL:: var_is_introduced ;
var bool: aux4459_BOOL:: var_is_introduced ;
var bool: aux4460_BOOL:: var_is_introduced ;
var {0,1}: aux4460_INTEGER :: var_is_introduced ;
var bool: aux4461_BOOL:: var_is_introduced ;
var bool: aux4462_BOOL:: var_is_introduced ;
var 1..35: aux4463:: var_is_introduced ;
var bool: aux4464_BOOL:: var_is_introduced ;
var bool: aux4465_BOOL:: var_is_introduced ;
var bool: aux4466_BOOL:: var_is_introduced ;
var {0,1}: aux4466_INTEGER :: var_is_introduced ;
var bool: aux4467_BOOL:: var_is_introduced ;
var bool: aux4468_BOOL:: var_is_introduced ;
var 2..36: aux4469:: var_is_introduced ;
var bool: aux4470_BOOL:: var_is_introduced ;
var bool: aux4471_BOOL:: var_is_introduced ;
var bool: aux4472_BOOL:: var_is_introduced ;
var {0,1}: aux4472_INTEGER :: var_is_introduced ;
var bool: aux4473_BOOL:: var_is_introduced ;
var bool: aux4474_BOOL:: var_is_introduced ;
var 1..35: aux4475:: var_is_introduced ;
var bool: aux4476_BOOL:: var_is_introduced ;
var bool: aux4477_BOOL:: var_is_introduced ;
var bool: aux4478_BOOL:: var_is_introduced ;
var {0,1}: aux4478_INTEGER :: var_is_introduced ;
var bool: aux4479_BOOL:: var_is_introduced ;
var bool: aux4480_BOOL:: var_is_introduced ;
var 4..38: aux4481:: var_is_introduced ;
var bool: aux4482_BOOL:: var_is_introduced ;
var bool: aux4483_BOOL:: var_is_introduced ;
var bool: aux4484_BOOL:: var_is_introduced ;
var {0,1}: aux4484_INTEGER :: var_is_introduced ;
var bool: aux4485_BOOL:: var_is_introduced ;
var bool: aux4486_BOOL:: var_is_introduced ;
var 2..36: aux4487:: var_is_introduced ;
var bool: aux4488_BOOL:: var_is_introduced ;
var bool: aux4489_BOOL:: var_is_introduced ;
var bool: aux4490_BOOL:: var_is_introduced ;
var {0,1}: aux4490_INTEGER :: var_is_introduced ;
var bool: aux4491_BOOL:: var_is_introduced ;
var bool: aux4492_BOOL:: var_is_introduced ;
var 2..36: aux4493:: var_is_introduced ;
var bool: aux4494_BOOL:: var_is_introduced ;
var bool: aux4495_BOOL:: var_is_introduced ;
var bool: aux4496_BOOL:: var_is_introduced ;
var {0,1}: aux4496_INTEGER :: var_is_introduced ;
var bool: aux4497_BOOL:: var_is_introduced ;
var bool: aux4498_BOOL:: var_is_introduced ;
var 2..36: aux4499:: var_is_introduced ;
var bool: aux4500_BOOL:: var_is_introduced ;
var bool: aux4501_BOOL:: var_is_introduced ;
var bool: aux4502_BOOL:: var_is_introduced ;
var {0,1}: aux4502_INTEGER :: var_is_introduced ;
var bool: aux4503_BOOL:: var_is_introduced ;
var bool: aux4504_BOOL:: var_is_introduced ;
var 1..35: aux4505:: var_is_introduced ;
var bool: aux4506_BOOL:: var_is_introduced ;
var bool: aux4507_BOOL:: var_is_introduced ;
var {0,1}: aux4507_INTEGER :: var_is_introduced ;
var bool: aux4508_BOOL:: var_is_introduced ;
var bool: aux4509_BOOL:: var_is_introduced ;
var 2..36: aux4510:: var_is_introduced ;
var bool: aux4511_BOOL:: var_is_introduced ;
var bool: aux4512_BOOL:: var_is_introduced ;
var bool: aux4513_BOOL:: var_is_introduced ;
var {0,1}: aux4513_INTEGER :: var_is_introduced ;
var bool: aux4514_BOOL:: var_is_introduced ;
var bool: aux4515_BOOL:: var_is_introduced ;
var 6..40: aux4516:: var_is_introduced ;
var bool: aux4517_BOOL:: var_is_introduced ;
var bool: aux4518_BOOL:: var_is_introduced ;
var bool: aux4519_BOOL:: var_is_introduced ;
var {0,1}: aux4519_INTEGER :: var_is_introduced ;
var bool: aux4520_BOOL:: var_is_introduced ;
var bool: aux4521_BOOL:: var_is_introduced ;
var 2..36: aux4522:: var_is_introduced ;
var bool: aux4523_BOOL:: var_is_introduced ;
var bool: aux4524_BOOL:: var_is_introduced ;
var bool: aux4525_BOOL:: var_is_introduced ;
var {0,1}: aux4525_INTEGER :: var_is_introduced ;
var bool: aux4526_BOOL:: var_is_introduced ;
var bool: aux4527_BOOL:: var_is_introduced ;
var 1..35: aux4528:: var_is_introduced ;
var bool: aux4529_BOOL:: var_is_introduced ;
var bool: aux4530_BOOL:: var_is_introduced ;
var bool: aux4531_BOOL:: var_is_introduced ;
var {0,1}: aux4531_INTEGER :: var_is_introduced ;
var bool: aux4532_BOOL:: var_is_introduced ;
var bool: aux4533_BOOL:: var_is_introduced ;
var 4..38: aux4534:: var_is_introduced ;
var bool: aux4535_BOOL:: var_is_introduced ;
var bool: aux4536_BOOL:: var_is_introduced ;
var bool: aux4537_BOOL:: var_is_introduced ;
var {0,1}: aux4537_INTEGER :: var_is_introduced ;
var bool: aux4538_BOOL:: var_is_introduced ;
var bool: aux4539_BOOL:: var_is_introduced ;
var 2..36: aux4540:: var_is_introduced ;
var bool: aux4541_BOOL:: var_is_introduced ;
var bool: aux4542_BOOL:: var_is_introduced ;
var bool: aux4543_BOOL:: var_is_introduced ;
var {0,1}: aux4543_INTEGER :: var_is_introduced ;
var bool: aux4544_BOOL:: var_is_introduced ;
var bool: aux4545_BOOL:: var_is_introduced ;
var 2..36: aux4546:: var_is_introduced ;
var bool: aux4547_BOOL:: var_is_introduced ;
var bool: aux4548_BOOL:: var_is_introduced ;
var bool: aux4549_BOOL:: var_is_introduced ;
var {0,1}: aux4549_INTEGER :: var_is_introduced ;
var bool: aux4550_BOOL:: var_is_introduced ;
var bool: aux4551_BOOL:: var_is_introduced ;
var 2..36: aux4552:: var_is_introduced ;
var bool: aux4553_BOOL:: var_is_introduced ;
var bool: aux4554_BOOL:: var_is_introduced ;
var bool: aux4555_BOOL:: var_is_introduced ;
var {0,1}: aux4555_INTEGER :: var_is_introduced ;
var bool: aux4556_BOOL:: var_is_introduced ;
var bool: aux4557_BOOL:: var_is_introduced ;
var 1..35: aux4558:: var_is_introduced ;
var bool: aux4559_BOOL:: var_is_introduced ;
var bool: aux4560_BOOL:: var_is_introduced ;
var bool: aux4561_BOOL:: var_is_introduced ;
var {0,1}: aux4561_INTEGER :: var_is_introduced ;
var bool: aux4562_BOOL:: var_is_introduced ;
var bool: aux4563_BOOL:: var_is_introduced ;
var 2..36: aux4564:: var_is_introduced ;
var bool: aux4565_BOOL:: var_is_introduced ;
var bool: aux4566_BOOL:: var_is_introduced ;
var bool: aux4567_BOOL:: var_is_introduced ;
var {0,1}: aux4567_INTEGER :: var_is_introduced ;
var bool: aux4568_BOOL:: var_is_introduced ;
var bool: aux4569_BOOL:: var_is_introduced ;
var 3..37: aux4570:: var_is_introduced ;
var bool: aux4571_BOOL:: var_is_introduced ;
var bool: aux4572_BOOL:: var_is_introduced ;
var bool: aux4573_BOOL:: var_is_introduced ;
var {0,1}: aux4573_INTEGER :: var_is_introduced ;
var bool: aux4574_BOOL:: var_is_introduced ;
var bool: aux4575_BOOL:: var_is_introduced ;
var 3..37: aux4576:: var_is_introduced ;
var bool: aux4577_BOOL:: var_is_introduced ;
var bool: aux4578_BOOL:: var_is_introduced ;
var bool: aux4579_BOOL:: var_is_introduced ;
var {0,1}: aux4579_INTEGER :: var_is_introduced ;
var bool: aux4580_BOOL:: var_is_introduced ;
var bool: aux4581_BOOL:: var_is_introduced ;
var 3..37: aux4582:: var_is_introduced ;
var bool: aux4583_BOOL:: var_is_introduced ;
var bool: aux4584_BOOL:: var_is_introduced ;
var bool: aux4585_BOOL:: var_is_introduced ;
var {0,1}: aux4585_INTEGER :: var_is_introduced ;
var bool: aux4586_BOOL:: var_is_introduced ;
var bool: aux4587_BOOL:: var_is_introduced ;
var 2..36: aux4588:: var_is_introduced ;
var bool: aux4589_BOOL:: var_is_introduced ;
var bool: aux4590_BOOL:: var_is_introduced ;
var {0,1}: aux4590_INTEGER :: var_is_introduced ;
var bool: aux4591_BOOL:: var_is_introduced ;
var bool: aux4592_BOOL:: var_is_introduced ;
var 2..36: aux4593:: var_is_introduced ;
var bool: aux4594_BOOL:: var_is_introduced ;
var bool: aux4595_BOOL:: var_is_introduced ;
var bool: aux4596_BOOL:: var_is_introduced ;
var {0,1}: aux4596_INTEGER :: var_is_introduced ;
var bool: aux4597_BOOL:: var_is_introduced ;
var bool: aux4598_BOOL:: var_is_introduced ;
var 6..40: aux4599:: var_is_introduced ;
var bool: aux4600_BOOL:: var_is_introduced ;
var bool: aux4601_BOOL:: var_is_introduced ;
var bool: aux4602_BOOL:: var_is_introduced ;
var {0,1}: aux4602_INTEGER :: var_is_introduced ;
var bool: aux4603_BOOL:: var_is_introduced ;
var bool: aux4604_BOOL:: var_is_introduced ;
var 1..35: aux4605:: var_is_introduced ;
var bool: aux4606_BOOL:: var_is_introduced ;
var bool: aux4607_BOOL:: var_is_introduced ;
var bool: aux4608_BOOL:: var_is_introduced ;
var {0,1}: aux4608_INTEGER :: var_is_introduced ;
var bool: aux4609_BOOL:: var_is_introduced ;
var bool: aux4610_BOOL:: var_is_introduced ;
var 2..36: aux4611:: var_is_introduced ;
var bool: aux4612_BOOL:: var_is_introduced ;
var bool: aux4613_BOOL:: var_is_introduced ;
var bool: aux4614_BOOL:: var_is_introduced ;
var {0,1}: aux4614_INTEGER :: var_is_introduced ;
var bool: aux4615_BOOL:: var_is_introduced ;
var bool: aux4616_BOOL:: var_is_introduced ;
var 1..35: aux4617:: var_is_introduced ;
var bool: aux4618_BOOL:: var_is_introduced ;
var bool: aux4619_BOOL:: var_is_introduced ;
var bool: aux4620_BOOL:: var_is_introduced ;
var {0,1}: aux4620_INTEGER :: var_is_introduced ;
var bool: aux4621_BOOL:: var_is_introduced ;
var bool: aux4622_BOOL:: var_is_introduced ;
var 4..38: aux4623:: var_is_introduced ;
var bool: aux4624_BOOL:: var_is_introduced ;
var bool: aux4625_BOOL:: var_is_introduced ;
var bool: aux4626_BOOL:: var_is_introduced ;
var {0,1}: aux4626_INTEGER :: var_is_introduced ;
var bool: aux4627_BOOL:: var_is_introduced ;
var bool: aux4628_BOOL:: var_is_introduced ;
var 2..36: aux4629:: var_is_introduced ;
var bool: aux4630_BOOL:: var_is_introduced ;
var bool: aux4631_BOOL:: var_is_introduced ;
var bool: aux4632_BOOL:: var_is_introduced ;
var {0,1}: aux4632_INTEGER :: var_is_introduced ;
var bool: aux4633_BOOL:: var_is_introduced ;
var bool: aux4634_BOOL:: var_is_introduced ;
var 2..36: aux4635:: var_is_introduced ;
var bool: aux4636_BOOL:: var_is_introduced ;
var bool: aux4637_BOOL:: var_is_introduced ;
var bool: aux4638_BOOL:: var_is_introduced ;
var {0,1}: aux4638_INTEGER :: var_is_introduced ;
var bool: aux4639_BOOL:: var_is_introduced ;
var bool: aux4640_BOOL:: var_is_introduced ;
var 1..35: aux4641:: var_is_introduced ;
var bool: aux4642_BOOL:: var_is_introduced ;
var bool: aux4643_BOOL:: var_is_introduced ;
var bool: aux4644_BOOL:: var_is_introduced ;
var {0,1}: aux4644_INTEGER :: var_is_introduced ;
var bool: aux4645_BOOL:: var_is_introduced ;
var bool: aux4646_BOOL:: var_is_introduced ;
var 2..36: aux4647:: var_is_introduced ;
var bool: aux4648_BOOL:: var_is_introduced ;
var bool: aux4649_BOOL:: var_is_introduced ;
var bool: aux4650_BOOL:: var_is_introduced ;
var {0,1}: aux4650_INTEGER :: var_is_introduced ;
var bool: aux4651_BOOL:: var_is_introduced ;
var bool: aux4652_BOOL:: var_is_introduced ;
var 3..37: aux4653:: var_is_introduced ;
var bool: aux4654_BOOL:: var_is_introduced ;
var bool: aux4655_BOOL:: var_is_introduced ;
var bool: aux4656_BOOL:: var_is_introduced ;
var {0,1}: aux4656_INTEGER :: var_is_introduced ;
var bool: aux4657_BOOL:: var_is_introduced ;
var bool: aux4658_BOOL:: var_is_introduced ;
var 3..37: aux4659:: var_is_introduced ;
var bool: aux4660_BOOL:: var_is_introduced ;
var bool: aux4661_BOOL:: var_is_introduced ;
var bool: aux4662_BOOL:: var_is_introduced ;
var {0,1}: aux4662_INTEGER :: var_is_introduced ;
var bool: aux4663_BOOL:: var_is_introduced ;
var bool: aux4664_BOOL:: var_is_introduced ;
var 3..37: aux4665:: var_is_introduced ;
var bool: aux4666_BOOL:: var_is_introduced ;
var bool: aux4667_BOOL:: var_is_introduced ;
var bool: aux4668_BOOL:: var_is_introduced ;
var {0,1}: aux4668_INTEGER :: var_is_introduced ;
var bool: aux4669_BOOL:: var_is_introduced ;
var bool: aux4670_BOOL:: var_is_introduced ;
var 2..36: aux4671:: var_is_introduced ;
var bool: aux4672_BOOL:: var_is_introduced ;
var bool: aux4673_BOOL:: var_is_introduced ;
var {0,1}: aux4673_INTEGER :: var_is_introduced ;
var bool: aux4674_BOOL:: var_is_introduced ;
var bool: aux4675_BOOL:: var_is_introduced ;
var 6..40: aux4676:: var_is_introduced ;
var bool: aux4677_BOOL:: var_is_introduced ;
var bool: aux4678_BOOL:: var_is_introduced ;
var bool: aux4679_BOOL:: var_is_introduced ;
var {0,1}: aux4679_INTEGER :: var_is_introduced ;
var bool: aux4680_BOOL:: var_is_introduced ;
var bool: aux4681_BOOL:: var_is_introduced ;
var 1..35: aux4682:: var_is_introduced ;
var bool: aux4683_BOOL:: var_is_introduced ;
var bool: aux4684_BOOL:: var_is_introduced ;
var bool: aux4685_BOOL:: var_is_introduced ;
var {0,1}: aux4685_INTEGER :: var_is_introduced ;
var bool: aux4686_BOOL:: var_is_introduced ;
var bool: aux4687_BOOL:: var_is_introduced ;
var 2..36: aux4688:: var_is_introduced ;
var bool: aux4689_BOOL:: var_is_introduced ;
var bool: aux4690_BOOL:: var_is_introduced ;
var bool: aux4691_BOOL:: var_is_introduced ;
var {0,1}: aux4691_INTEGER :: var_is_introduced ;
var bool: aux4692_BOOL:: var_is_introduced ;
var bool: aux4693_BOOL:: var_is_introduced ;
var 1..35: aux4694:: var_is_introduced ;
var bool: aux4695_BOOL:: var_is_introduced ;
var bool: aux4696_BOOL:: var_is_introduced ;
var bool: aux4697_BOOL:: var_is_introduced ;
var {0,1}: aux4697_INTEGER :: var_is_introduced ;
var bool: aux4698_BOOL:: var_is_introduced ;
var bool: aux4699_BOOL:: var_is_introduced ;
var 4..38: aux4700:: var_is_introduced ;
var bool: aux4701_BOOL:: var_is_introduced ;
var bool: aux4702_BOOL:: var_is_introduced ;
var bool: aux4703_BOOL:: var_is_introduced ;
var {0,1}: aux4703_INTEGER :: var_is_introduced ;
var bool: aux4704_BOOL:: var_is_introduced ;
var bool: aux4705_BOOL:: var_is_introduced ;
var 2..36: aux4706:: var_is_introduced ;
var bool: aux4707_BOOL:: var_is_introduced ;
var bool: aux4708_BOOL:: var_is_introduced ;
var bool: aux4709_BOOL:: var_is_introduced ;
var {0,1}: aux4709_INTEGER :: var_is_introduced ;
var bool: aux4710_BOOL:: var_is_introduced ;
var bool: aux4711_BOOL:: var_is_introduced ;
var 2..36: aux4712:: var_is_introduced ;
var bool: aux4713_BOOL:: var_is_introduced ;
var bool: aux4714_BOOL:: var_is_introduced ;
var bool: aux4715_BOOL:: var_is_introduced ;
var {0,1}: aux4715_INTEGER :: var_is_introduced ;
var bool: aux4716_BOOL:: var_is_introduced ;
var bool: aux4717_BOOL:: var_is_introduced ;
var 2..36: aux4718:: var_is_introduced ;
var bool: aux4719_BOOL:: var_is_introduced ;
var bool: aux4720_BOOL:: var_is_introduced ;
var bool: aux4721_BOOL:: var_is_introduced ;
var {0,1}: aux4721_INTEGER :: var_is_introduced ;
var bool: aux4722_BOOL:: var_is_introduced ;
var bool: aux4723_BOOL:: var_is_introduced ;
var 1..35: aux4724:: var_is_introduced ;
var bool: aux4725_BOOL:: var_is_introduced ;
var bool: aux4726_BOOL:: var_is_introduced ;
var bool: aux4727_BOOL:: var_is_introduced ;
var {0,1}: aux4727_INTEGER :: var_is_introduced ;
var bool: aux4728_BOOL:: var_is_introduced ;
var bool: aux4729_BOOL:: var_is_introduced ;
var 2..36: aux4730:: var_is_introduced ;
var bool: aux4731_BOOL:: var_is_introduced ;
var bool: aux4732_BOOL:: var_is_introduced ;
var bool: aux4733_BOOL:: var_is_introduced ;
var {0,1}: aux4733_INTEGER :: var_is_introduced ;
var bool: aux4734_BOOL:: var_is_introduced ;
var bool: aux4735_BOOL:: var_is_introduced ;
var 3..37: aux4736:: var_is_introduced ;
var bool: aux4737_BOOL:: var_is_introduced ;
var bool: aux4738_BOOL:: var_is_introduced ;
var bool: aux4739_BOOL:: var_is_introduced ;
var {0,1}: aux4739_INTEGER :: var_is_introduced ;
var bool: aux4740_BOOL:: var_is_introduced ;
var bool: aux4741_BOOL:: var_is_introduced ;
var 3..37: aux4742:: var_is_introduced ;
var bool: aux4743_BOOL:: var_is_introduced ;
var bool: aux4744_BOOL:: var_is_introduced ;
var bool: aux4745_BOOL:: var_is_introduced ;
var {0,1}: aux4745_INTEGER :: var_is_introduced ;
var bool: aux4746_BOOL:: var_is_introduced ;
var bool: aux4747_BOOL:: var_is_introduced ;
var 3..37: aux4748:: var_is_introduced ;
var bool: aux4749_BOOL:: var_is_introduced ;
var bool: aux4750_BOOL:: var_is_introduced ;
var bool: aux4751_BOOL:: var_is_introduced ;
var {0,1}: aux4751_INTEGER :: var_is_introduced ;
var bool: aux4752_BOOL:: var_is_introduced ;
var bool: aux4753_BOOL:: var_is_introduced ;
var bool: aux4754_BOOL:: var_is_introduced ;
var 1..35: aux4755:: var_is_introduced ;
var bool: aux4756_BOOL:: var_is_introduced ;
var bool: aux4757_BOOL:: var_is_introduced ;
var bool: aux4758_BOOL:: var_is_introduced ;
var {0,1}: aux4758_INTEGER :: var_is_introduced ;
var bool: aux4759_BOOL:: var_is_introduced ;
var bool: aux4760_BOOL:: var_is_introduced ;
var 3..37: aux4761:: var_is_introduced ;
var bool: aux4762_BOOL:: var_is_introduced ;
var bool: aux4763_BOOL:: var_is_introduced ;
var bool: aux4764_BOOL:: var_is_introduced ;
var {0,1}: aux4764_INTEGER :: var_is_introduced ;
var bool: aux4765_BOOL:: var_is_introduced ;
var bool: aux4766_BOOL:: var_is_introduced ;
var 3..37: aux4767:: var_is_introduced ;
var bool: aux4768_BOOL:: var_is_introduced ;
var bool: aux4769_BOOL:: var_is_introduced ;
var bool: aux4770_BOOL:: var_is_introduced ;
var {0,1}: aux4770_INTEGER :: var_is_introduced ;
var bool: aux4771_BOOL:: var_is_introduced ;
var bool: aux4772_BOOL:: var_is_introduced ;
var 3..37: aux4773:: var_is_introduced ;
var bool: aux4774_BOOL:: var_is_introduced ;
var bool: aux4775_BOOL:: var_is_introduced ;
var bool: aux4776_BOOL:: var_is_introduced ;
var {0,1}: aux4776_INTEGER :: var_is_introduced ;
var bool: aux4777_BOOL:: var_is_introduced ;
var 2..36: aux4778:: var_is_introduced ;
var bool: aux4779_BOOL:: var_is_introduced ;
var bool: aux4780_BOOL:: var_is_introduced ;
var {0,1}: aux4780_INTEGER :: var_is_introduced ;
var bool: aux4781_BOOL:: var_is_introduced ;
var bool: aux4782_BOOL:: var_is_introduced ;
var 2..36: aux4783:: var_is_introduced ;
var bool: aux4784_BOOL:: var_is_introduced ;
var bool: aux4785_BOOL:: var_is_introduced ;
var bool: aux4786_BOOL:: var_is_introduced ;
var {0,1}: aux4786_INTEGER :: var_is_introduced ;
var bool: aux4787_BOOL:: var_is_introduced ;
var bool: aux4788_BOOL:: var_is_introduced ;
var 6..40: aux4789:: var_is_introduced ;
var bool: aux4790_BOOL:: var_is_introduced ;
var bool: aux4791_BOOL:: var_is_introduced ;
var bool: aux4792_BOOL:: var_is_introduced ;
var {0,1}: aux4792_INTEGER :: var_is_introduced ;
var bool: aux4793_BOOL:: var_is_introduced ;
var bool: aux4794_BOOL:: var_is_introduced ;
var 1..35: aux4795:: var_is_introduced ;
var bool: aux4796_BOOL:: var_is_introduced ;
var bool: aux4797_BOOL:: var_is_introduced ;
var bool: aux4798_BOOL:: var_is_introduced ;
var {0,1}: aux4798_INTEGER :: var_is_introduced ;
var bool: aux4799_BOOL:: var_is_introduced ;
var bool: aux4800_BOOL:: var_is_introduced ;
var 2..36: aux4801:: var_is_introduced ;
var bool: aux4802_BOOL:: var_is_introduced ;
var bool: aux4803_BOOL:: var_is_introduced ;
var bool: aux4804_BOOL:: var_is_introduced ;
var {0,1}: aux4804_INTEGER :: var_is_introduced ;
var bool: aux4805_BOOL:: var_is_introduced ;
var bool: aux4806_BOOL:: var_is_introduced ;
var 1..35: aux4807:: var_is_introduced ;
var bool: aux4808_BOOL:: var_is_introduced ;
var bool: aux4809_BOOL:: var_is_introduced ;
var bool: aux4810_BOOL:: var_is_introduced ;
var {0,1}: aux4810_INTEGER :: var_is_introduced ;
var bool: aux4811_BOOL:: var_is_introduced ;
var bool: aux4812_BOOL:: var_is_introduced ;
var 4..38: aux4813:: var_is_introduced ;
var bool: aux4814_BOOL:: var_is_introduced ;
var bool: aux4815_BOOL:: var_is_introduced ;
var bool: aux4816_BOOL:: var_is_introduced ;
var {0,1}: aux4816_INTEGER :: var_is_introduced ;
var bool: aux4817_BOOL:: var_is_introduced ;
var bool: aux4818_BOOL:: var_is_introduced ;
var 2..36: aux4819:: var_is_introduced ;
var bool: aux4820_BOOL:: var_is_introduced ;
var bool: aux4821_BOOL:: var_is_introduced ;
var bool: aux4822_BOOL:: var_is_introduced ;
var {0,1}: aux4822_INTEGER :: var_is_introduced ;
var bool: aux4823_BOOL:: var_is_introduced ;
var bool: aux4824_BOOL:: var_is_introduced ;
var 2..36: aux4825:: var_is_introduced ;
var bool: aux4826_BOOL:: var_is_introduced ;
var bool: aux4827_BOOL:: var_is_introduced ;
var bool: aux4828_BOOL:: var_is_introduced ;
var {0,1}: aux4828_INTEGER :: var_is_introduced ;
var bool: aux4829_BOOL:: var_is_introduced ;
var bool: aux4830_BOOL:: var_is_introduced ;
var 2..36: aux4831:: var_is_introduced ;
var bool: aux4832_BOOL:: var_is_introduced ;
var bool: aux4833_BOOL:: var_is_introduced ;
var bool: aux4834_BOOL:: var_is_introduced ;
var {0,1}: aux4834_INTEGER :: var_is_introduced ;
var bool: aux4835_BOOL:: var_is_introduced ;
var bool: aux4836_BOOL:: var_is_introduced ;
var 4..38: aux4837:: var_is_introduced ;
var bool: aux4838_BOOL:: var_is_introduced ;
var bool: aux4839_BOOL:: var_is_introduced ;
var {0,1}: aux4839_INTEGER :: var_is_introduced ;
var bool: aux4840_BOOL:: var_is_introduced ;
var bool: aux4841_BOOL:: var_is_introduced ;
var 2..36: aux4842:: var_is_introduced ;
var bool: aux4843_BOOL:: var_is_introduced ;
var bool: aux4844_BOOL:: var_is_introduced ;
var bool: aux4845_BOOL:: var_is_introduced ;
var {0,1}: aux4845_INTEGER :: var_is_introduced ;
var bool: aux4846_BOOL:: var_is_introduced ;
var bool: aux4847_BOOL:: var_is_introduced ;
var 6..40: aux4848:: var_is_introduced ;
var bool: aux4849_BOOL:: var_is_introduced ;
var bool: aux4850_BOOL:: var_is_introduced ;
var bool: aux4851_BOOL:: var_is_introduced ;
var {0,1}: aux4851_INTEGER :: var_is_introduced ;
var bool: aux4852_BOOL:: var_is_introduced ;
var bool: aux4853_BOOL:: var_is_introduced ;
var 1..35: aux4854:: var_is_introduced ;
var bool: aux4855_BOOL:: var_is_introduced ;
var bool: aux4856_BOOL:: var_is_introduced ;
var bool: aux4857_BOOL:: var_is_introduced ;
var {0,1}: aux4857_INTEGER :: var_is_introduced ;
var bool: aux4858_BOOL:: var_is_introduced ;
var bool: aux4859_BOOL:: var_is_introduced ;
var 2..36: aux4860:: var_is_introduced ;
var bool: aux4861_BOOL:: var_is_introduced ;
var bool: aux4862_BOOL:: var_is_introduced ;
var bool: aux4863_BOOL:: var_is_introduced ;
var {0,1}: aux4863_INTEGER :: var_is_introduced ;
var bool: aux4864_BOOL:: var_is_introduced ;
var bool: aux4865_BOOL:: var_is_introduced ;
var 1..35: aux4866:: var_is_introduced ;
var bool: aux4867_BOOL:: var_is_introduced ;
var bool: aux4868_BOOL:: var_is_introduced ;
var bool: aux4869_BOOL:: var_is_introduced ;
var {0,1}: aux4869_INTEGER :: var_is_introduced ;
var bool: aux4870_BOOL:: var_is_introduced ;
var bool: aux4871_BOOL:: var_is_introduced ;
var 2..36: aux4872:: var_is_introduced ;
var bool: aux4873_BOOL:: var_is_introduced ;
var bool: aux4874_BOOL:: var_is_introduced ;
var bool: aux4875_BOOL:: var_is_introduced ;
var {0,1}: aux4875_INTEGER :: var_is_introduced ;
var bool: aux4876_BOOL:: var_is_introduced ;
var bool: aux4877_BOOL:: var_is_introduced ;
var 2..36: aux4878:: var_is_introduced ;
var bool: aux4879_BOOL:: var_is_introduced ;
var bool: aux4880_BOOL:: var_is_introduced ;
var bool: aux4881_BOOL:: var_is_introduced ;
var {0,1}: aux4881_INTEGER :: var_is_introduced ;
var bool: aux4882_BOOL:: var_is_introduced ;
var bool: aux4883_BOOL:: var_is_introduced ;
var 2..36: aux4884:: var_is_introduced ;
var bool: aux4885_BOOL:: var_is_introduced ;
var bool: aux4886_BOOL:: var_is_introduced ;
var bool: aux4887_BOOL:: var_is_introduced ;
var {0,1}: aux4887_INTEGER :: var_is_introduced ;
var bool: aux4888_BOOL:: var_is_introduced ;
var bool: aux4889_BOOL:: var_is_introduced ;
var 1..35: aux4890:: var_is_introduced ;
var bool: aux4891_BOOL:: var_is_introduced ;
var bool: aux4892_BOOL:: var_is_introduced ;
var bool: aux4893_BOOL:: var_is_introduced ;
var {0,1}: aux4893_INTEGER :: var_is_introduced ;
var bool: aux4894_BOOL:: var_is_introduced ;
var bool: aux4895_BOOL:: var_is_introduced ;
var 2..36: aux4896:: var_is_introduced ;
var bool: aux4897_BOOL:: var_is_introduced ;
var bool: aux4898_BOOL:: var_is_introduced ;
var bool: aux4899_BOOL:: var_is_introduced ;
var {0,1}: aux4899_INTEGER :: var_is_introduced ;
var bool: aux4900_BOOL:: var_is_introduced ;
var bool: aux4901_BOOL:: var_is_introduced ;
var 3..37: aux4902:: var_is_introduced ;
var bool: aux4903_BOOL:: var_is_introduced ;
var bool: aux4904_BOOL:: var_is_introduced ;
var bool: aux4905_BOOL:: var_is_introduced ;
var {0,1}: aux4905_INTEGER :: var_is_introduced ;
var bool: aux4906_BOOL:: var_is_introduced ;
var bool: aux4907_BOOL:: var_is_introduced ;
var 3..37: aux4908:: var_is_introduced ;
var bool: aux4909_BOOL:: var_is_introduced ;
var bool: aux4910_BOOL:: var_is_introduced ;
var bool: aux4911_BOOL:: var_is_introduced ;
var {0,1}: aux4911_INTEGER :: var_is_introduced ;
var bool: aux4912_BOOL:: var_is_introduced ;
var bool: aux4913_BOOL:: var_is_introduced ;
var 3..37: aux4914:: var_is_introduced ;
var bool: aux4915_BOOL:: var_is_introduced ;
var bool: aux4916_BOOL:: var_is_introduced ;
var bool: aux4917_BOOL:: var_is_introduced ;
var {0,1}: aux4917_INTEGER :: var_is_introduced ;
var bool: aux4918_BOOL:: var_is_introduced ;
var bool: aux4919_BOOL:: var_is_introduced ;
var bool: aux4920_BOOL:: var_is_introduced ;
var 1..35: aux4921:: var_is_introduced ;
var bool: aux4922_BOOL:: var_is_introduced ;
var bool: aux4923_BOOL:: var_is_introduced ;
var bool: aux4924_BOOL:: var_is_introduced ;
var bool: aux4925_BOOL:: var_is_introduced ;
var bool: aux4926_BOOL:: var_is_introduced ;
var {0,1}: aux4926_INTEGER :: var_is_introduced ;
var 2..36: aux4927:: var_is_introduced ;
var bool: aux4928_BOOL:: var_is_introduced ;
var bool: aux4929_BOOL:: var_is_introduced ;
var bool: aux4930_BOOL:: var_is_introduced ;
var bool: aux4931_BOOL:: var_is_introduced ;
var bool: aux4932_BOOL:: var_is_introduced ;
var {0,1}: aux4932_INTEGER :: var_is_introduced ;
var 1..35: aux4933:: var_is_introduced ;
var bool: aux4934_BOOL:: var_is_introduced ;
var bool: aux4935_BOOL:: var_is_introduced ;
var bool: aux4936_BOOL:: var_is_introduced ;
var bool: aux4937_BOOL:: var_is_introduced ;
var bool: aux4938_BOOL:: var_is_introduced ;
var {0,1}: aux4938_INTEGER :: var_is_introduced ;
var 2..36: aux4939:: var_is_introduced ;
var bool: aux4940_BOOL:: var_is_introduced ;
var bool: aux4941_BOOL:: var_is_introduced ;
var bool: aux4942_BOOL:: var_is_introduced ;
var bool: aux4943_BOOL:: var_is_introduced ;
var bool: aux4944_BOOL:: var_is_introduced ;
var {0,1}: aux4944_INTEGER :: var_is_introduced ;
var 2..36: aux4945:: var_is_introduced ;
var bool: aux4946_BOOL:: var_is_introduced ;
var bool: aux4947_BOOL:: var_is_introduced ;
var bool: aux4948_BOOL:: var_is_introduced ;
var bool: aux4949_BOOL:: var_is_introduced ;
var bool: aux4950_BOOL:: var_is_introduced ;
var {0,1}: aux4950_INTEGER :: var_is_introduced ;
var 2..36: aux4951:: var_is_introduced ;
var bool: aux4952_BOOL:: var_is_introduced ;
var bool: aux4953_BOOL:: var_is_introduced ;
var bool: aux4954_BOOL:: var_is_introduced ;
var bool: aux4955_BOOL:: var_is_introduced ;
var bool: aux4956_BOOL:: var_is_introduced ;
var {0,1}: aux4956_INTEGER :: var_is_introduced ;
var 2..36: aux4957:: var_is_introduced ;
var bool: aux4958_BOOL:: var_is_introduced ;
var bool: aux4959_BOOL:: var_is_introduced ;
var bool: aux4960_BOOL:: var_is_introduced ;
var bool: aux4961_BOOL:: var_is_introduced ;
var bool: aux4962_BOOL:: var_is_introduced ;
var {0,1}: aux4962_INTEGER :: var_is_introduced ;
var 2..36: aux4963:: var_is_introduced ;
var bool: aux4964_BOOL:: var_is_introduced ;
var bool: aux4965_BOOL:: var_is_introduced ;
var bool: aux4966_BOOL:: var_is_introduced ;
var bool: aux4967_BOOL:: var_is_introduced ;
var bool: aux4968_BOOL:: var_is_introduced ;
var {0,1}: aux4968_INTEGER :: var_is_introduced ;
var 3..37: aux4969:: var_is_introduced ;
var bool: aux4970_BOOL:: var_is_introduced ;
var bool: aux4971_BOOL:: var_is_introduced ;
var bool: aux4972_BOOL:: var_is_introduced ;
var bool: aux4973_BOOL:: var_is_introduced ;
var bool: aux4974_BOOL:: var_is_introduced ;
var {0,1}: aux4974_INTEGER :: var_is_introduced ;
var 3..37: aux4975:: var_is_introduced ;
var bool: aux4976_BOOL:: var_is_introduced ;
var bool: aux4977_BOOL:: var_is_introduced ;
var bool: aux4978_BOOL:: var_is_introduced ;
var bool: aux4979_BOOL:: var_is_introduced ;
var bool: aux4980_BOOL:: var_is_introduced ;
var {0,1}: aux4980_INTEGER :: var_is_introduced ;
var 3..37: aux4981:: var_is_introduced ;
var bool: aux4982_BOOL:: var_is_introduced ;
var bool: aux4983_BOOL:: var_is_introduced ;
var bool: aux4984_BOOL:: var_is_introduced ;
var bool: aux4985_BOOL:: var_is_introduced ;
var bool: aux4986_BOOL:: var_is_introduced ;
var {0,1}: aux4986_INTEGER :: var_is_introduced ;
var 4..38: aux4987:: var_is_introduced ;
var bool: aux4988_BOOL:: var_is_introduced ;
var bool: aux4989_BOOL:: var_is_introduced ;
var bool: aux4990_BOOL:: var_is_introduced ;
var bool: aux4991_BOOL:: var_is_introduced ;
var bool: aux4992_BOOL:: var_is_introduced ;
var {0,1}: aux4992_INTEGER :: var_is_introduced ;
var 6..40: aux4993:: var_is_introduced ;
var bool: aux4994_BOOL:: var_is_introduced ;
var bool: aux4995_BOOL:: var_is_introduced ;
var bool: aux4996_BOOL:: var_is_introduced ;
var bool: aux4997_BOOL:: var_is_introduced ;
var bool: aux4998_BOOL:: var_is_introduced ;
var {0,1}: aux4998_INTEGER :: var_is_introduced ;
var 1..35: aux4999:: var_is_introduced ;
var bool: aux5000_BOOL:: var_is_introduced ;
var bool: aux5001_BOOL:: var_is_introduced ;
var bool: aux5002_BOOL:: var_is_introduced ;
var {0,1}: aux5002_INTEGER :: var_is_introduced ;
var bool: aux5003_BOOL:: var_is_introduced ;
var 1..35: aux5004:: var_is_introduced ;
var bool: aux5005_BOOL:: var_is_introduced ;
var bool: aux5006_BOOL:: var_is_introduced ;
var bool: aux5007_BOOL:: var_is_introduced ;
var bool: aux5008_BOOL:: var_is_introduced ;
var bool: aux5009_BOOL:: var_is_introduced ;
var {0,1}: aux5009_INTEGER :: var_is_introduced ;
var 1..35: aux5010:: var_is_introduced ;
var bool: aux5011_BOOL:: var_is_introduced ;
var bool: aux5012_BOOL:: var_is_introduced ;
var bool: aux5013_BOOL:: var_is_introduced ;
var bool: aux5014_BOOL:: var_is_introduced ;
var bool: aux5015_BOOL:: var_is_introduced ;
var {0,1}: aux5015_INTEGER :: var_is_introduced ;
var 2..36: aux5016:: var_is_introduced ;
var bool: aux5017_BOOL:: var_is_introduced ;
var bool: aux5018_BOOL:: var_is_introduced ;
var bool: aux5019_BOOL:: var_is_introduced ;
var bool: aux5020_BOOL:: var_is_introduced ;
var bool: aux5021_BOOL:: var_is_introduced ;
var {0,1}: aux5021_INTEGER :: var_is_introduced ;
var 2..36: aux5022:: var_is_introduced ;
var bool: aux5023_BOOL:: var_is_introduced ;
var bool: aux5024_BOOL:: var_is_introduced ;
var bool: aux5025_BOOL:: var_is_introduced ;
var bool: aux5026_BOOL:: var_is_introduced ;
var bool: aux5027_BOOL:: var_is_introduced ;
var {0,1}: aux5027_INTEGER :: var_is_introduced ;
var 2..36: aux5028:: var_is_introduced ;
var bool: aux5029_BOOL:: var_is_introduced ;
var bool: aux5030_BOOL:: var_is_introduced ;
var bool: aux5031_BOOL:: var_is_introduced ;
var bool: aux5032_BOOL:: var_is_introduced ;
var bool: aux5033_BOOL:: var_is_introduced ;
var {0,1}: aux5033_INTEGER :: var_is_introduced ;
var 2..36: aux5034:: var_is_introduced ;
var bool: aux5035_BOOL:: var_is_introduced ;
var bool: aux5036_BOOL:: var_is_introduced ;
var bool: aux5037_BOOL:: var_is_introduced ;
var bool: aux5038_BOOL:: var_is_introduced ;
var bool: aux5039_BOOL:: var_is_introduced ;
var {0,1}: aux5039_INTEGER :: var_is_introduced ;
var 2..36: aux5040:: var_is_introduced ;
var bool: aux5041_BOOL:: var_is_introduced ;
var bool: aux5042_BOOL:: var_is_introduced ;
var bool: aux5043_BOOL:: var_is_introduced ;
var bool: aux5044_BOOL:: var_is_introduced ;
var bool: aux5045_BOOL:: var_is_introduced ;
var {0,1}: aux5045_INTEGER :: var_is_introduced ;
var 1..35: aux5046:: var_is_introduced ;
var bool: aux5047_BOOL:: var_is_introduced ;
var bool: aux5048_BOOL:: var_is_introduced ;
var bool: aux5049_BOOL:: var_is_introduced ;
var bool: aux5050_BOOL:: var_is_introduced ;
var bool: aux5051_BOOL:: var_is_introduced ;
var {0,1}: aux5051_INTEGER :: var_is_introduced ;
var 4..38: aux5052:: var_is_introduced ;
var bool: aux5053_BOOL:: var_is_introduced ;
var bool: aux5054_BOOL:: var_is_introduced ;
var bool: aux5055_BOOL:: var_is_introduced ;
var bool: aux5056_BOOL:: var_is_introduced ;
var bool: aux5057_BOOL:: var_is_introduced ;
var {0,1}: aux5057_INTEGER :: var_is_introduced ;
var 3..37: aux5058:: var_is_introduced ;
var bool: aux5059_BOOL:: var_is_introduced ;
var bool: aux5060_BOOL:: var_is_introduced ;
var bool: aux5061_BOOL:: var_is_introduced ;
var bool: aux5062_BOOL:: var_is_introduced ;
var bool: aux5063_BOOL:: var_is_introduced ;
var {0,1}: aux5063_INTEGER :: var_is_introduced ;
var 3..37: aux5064:: var_is_introduced ;
var bool: aux5065_BOOL:: var_is_introduced ;
var bool: aux5066_BOOL:: var_is_introduced ;
var bool: aux5067_BOOL:: var_is_introduced ;
var bool: aux5068_BOOL:: var_is_introduced ;
var bool: aux5069_BOOL:: var_is_introduced ;
var {0,1}: aux5069_INTEGER :: var_is_introduced ;
var 3..37: aux5070:: var_is_introduced ;
var bool: aux5071_BOOL:: var_is_introduced ;
var bool: aux5072_BOOL:: var_is_introduced ;
var bool: aux5073_BOOL:: var_is_introduced ;
var bool: aux5074_BOOL:: var_is_introduced ;
var bool: aux5075_BOOL:: var_is_introduced ;
var {0,1}: aux5075_INTEGER :: var_is_introduced ;
var 6..40: aux5076:: var_is_introduced ;
var bool: aux5077_BOOL:: var_is_introduced ;
var bool: aux5078_BOOL:: var_is_introduced ;
var bool: aux5079_BOOL:: var_is_introduced ;
var bool: aux5080_BOOL:: var_is_introduced ;
var bool: aux5081_BOOL:: var_is_introduced ;
var {0,1}: aux5081_INTEGER :: var_is_introduced ;
var 2..36: aux5082:: var_is_introduced ;
var bool: aux5083_BOOL:: var_is_introduced ;
var bool: aux5084_BOOL:: var_is_introduced ;
var bool: aux5085_BOOL:: var_is_introduced ;
var {0,1}: aux5085_INTEGER :: var_is_introduced ;
var bool: aux5086_BOOL:: var_is_introduced ;
var 1..35: aux5087:: var_is_introduced ;
var bool: aux5088_BOOL:: var_is_introduced ;
var bool: aux5089_BOOL:: var_is_introduced ;
var bool: aux5090_BOOL:: var_is_introduced ;
var bool: aux5091_BOOL:: var_is_introduced ;
var bool: aux5092_BOOL:: var_is_introduced ;
var {0,1}: aux5092_INTEGER :: var_is_introduced ;
var 1..35: aux5093:: var_is_introduced ;
var bool: aux5094_BOOL:: var_is_introduced ;
var bool: aux5095_BOOL:: var_is_introduced ;
var bool: aux5096_BOOL:: var_is_introduced ;
var bool: aux5097_BOOL:: var_is_introduced ;
var bool: aux5098_BOOL:: var_is_introduced ;
var {0,1}: aux5098_INTEGER :: var_is_introduced ;
var 2..36: aux5099:: var_is_introduced ;
var bool: aux5100_BOOL:: var_is_introduced ;
var bool: aux5101_BOOL:: var_is_introduced ;
var bool: aux5102_BOOL:: var_is_introduced ;
var bool: aux5103_BOOL:: var_is_introduced ;
var bool: aux5104_BOOL:: var_is_introduced ;
var {0,1}: aux5104_INTEGER :: var_is_introduced ;
var 2..36: aux5105:: var_is_introduced ;
var bool: aux5106_BOOL:: var_is_introduced ;
var bool: aux5107_BOOL:: var_is_introduced ;
var bool: aux5108_BOOL:: var_is_introduced ;
var bool: aux5109_BOOL:: var_is_introduced ;
var bool: aux5110_BOOL:: var_is_introduced ;
var {0,1}: aux5110_INTEGER :: var_is_introduced ;
var 2..36: aux5111:: var_is_introduced ;
var bool: aux5112_BOOL:: var_is_introduced ;
var bool: aux5113_BOOL:: var_is_introduced ;
var bool: aux5114_BOOL:: var_is_introduced ;
var bool: aux5115_BOOL:: var_is_introduced ;
var bool: aux5116_BOOL:: var_is_introduced ;
var {0,1}: aux5116_INTEGER :: var_is_introduced ;
var 2..36: aux5117:: var_is_introduced ;
var bool: aux5118_BOOL:: var_is_introduced ;
var bool: aux5119_BOOL:: var_is_introduced ;
var bool: aux5120_BOOL:: var_is_introduced ;
var bool: aux5121_BOOL:: var_is_introduced ;
var bool: aux5122_BOOL:: var_is_introduced ;
var {0,1}: aux5122_INTEGER :: var_is_introduced ;
var 2..36: aux5123:: var_is_introduced ;
var bool: aux5124_BOOL:: var_is_introduced ;
var bool: aux5125_BOOL:: var_is_introduced ;
var bool: aux5126_BOOL:: var_is_introduced ;
var bool: aux5127_BOOL:: var_is_introduced ;
var bool: aux5128_BOOL:: var_is_introduced ;
var {0,1}: aux5128_INTEGER :: var_is_introduced ;
var 1..35: aux5129:: var_is_introduced ;
var bool: aux5130_BOOL:: var_is_introduced ;
var bool: aux5131_BOOL:: var_is_introduced ;
var bool: aux5132_BOOL:: var_is_introduced ;
var bool: aux5133_BOOL:: var_is_introduced ;
var bool: aux5134_BOOL:: var_is_introduced ;
var {0,1}: aux5134_INTEGER :: var_is_introduced ;
var 2..36: aux5135:: var_is_introduced ;
var bool: aux5136_BOOL:: var_is_introduced ;
var bool: aux5137_BOOL:: var_is_introduced ;
var bool: aux5138_BOOL:: var_is_introduced ;
var bool: aux5139_BOOL:: var_is_introduced ;
var bool: aux5140_BOOL:: var_is_introduced ;
var {0,1}: aux5140_INTEGER :: var_is_introduced ;
var 4..38: aux5141:: var_is_introduced ;
var bool: aux5142_BOOL:: var_is_introduced ;
var bool: aux5143_BOOL:: var_is_introduced ;
var bool: aux5144_BOOL:: var_is_introduced ;
var bool: aux5145_BOOL:: var_is_introduced ;
var bool: aux5146_BOOL:: var_is_introduced ;
var {0,1}: aux5146_INTEGER :: var_is_introduced ;
var 3..37: aux5147:: var_is_introduced ;
var bool: aux5148_BOOL:: var_is_introduced ;
var bool: aux5149_BOOL:: var_is_introduced ;
var bool: aux5150_BOOL:: var_is_introduced ;
var bool: aux5151_BOOL:: var_is_introduced ;
var bool: aux5152_BOOL:: var_is_introduced ;
var {0,1}: aux5152_INTEGER :: var_is_introduced ;
var 3..37: aux5153:: var_is_introduced ;
var bool: aux5154_BOOL:: var_is_introduced ;
var bool: aux5155_BOOL:: var_is_introduced ;
var bool: aux5156_BOOL:: var_is_introduced ;
var bool: aux5157_BOOL:: var_is_introduced ;
var bool: aux5158_BOOL:: var_is_introduced ;
var {0,1}: aux5158_INTEGER :: var_is_introduced ;
var 6..40: aux5159:: var_is_introduced ;
var bool: aux5160_BOOL:: var_is_introduced ;
var bool: aux5161_BOOL:: var_is_introduced ;
var bool: aux5162_BOOL:: var_is_introduced ;
var bool: aux5163_BOOL:: var_is_introduced ;
var bool: aux5164_BOOL:: var_is_introduced ;
var {0,1}: aux5164_INTEGER :: var_is_introduced ;
var 3..37: aux5165:: var_is_introduced ;
var bool: aux5166_BOOL:: var_is_introduced ;
var bool: aux5167_BOOL:: var_is_introduced ;
var bool: aux5168_BOOL:: var_is_introduced ;
var {0,1}: aux5168_INTEGER :: var_is_introduced ;
var bool: aux5169_BOOL:: var_is_introduced ;
var 1..35: aux5170:: var_is_introduced ;
var bool: aux5171_BOOL:: var_is_introduced ;
var bool: aux5172_BOOL:: var_is_introduced ;
var bool: aux5173_BOOL:: var_is_introduced ;
var bool: aux5174_BOOL:: var_is_introduced ;
var bool: aux5175_BOOL:: var_is_introduced ;
var {0,1}: aux5175_INTEGER :: var_is_introduced ;
var 1..35: aux5176:: var_is_introduced ;
var bool: aux5177_BOOL:: var_is_introduced ;
var bool: aux5178_BOOL:: var_is_introduced ;
var bool: aux5179_BOOL:: var_is_introduced ;
var bool: aux5180_BOOL:: var_is_introduced ;
var bool: aux5181_BOOL:: var_is_introduced ;
var {0,1}: aux5181_INTEGER :: var_is_introduced ;
var 2..36: aux5182:: var_is_introduced ;
var bool: aux5183_BOOL:: var_is_introduced ;
var bool: aux5184_BOOL:: var_is_introduced ;
var bool: aux5185_BOOL:: var_is_introduced ;
var bool: aux5186_BOOL:: var_is_introduced ;
var bool: aux5187_BOOL:: var_is_introduced ;
var {0,1}: aux5187_INTEGER :: var_is_introduced ;
var 2..36: aux5188:: var_is_introduced ;
var bool: aux5189_BOOL:: var_is_introduced ;
var bool: aux5190_BOOL:: var_is_introduced ;
var bool: aux5191_BOOL:: var_is_introduced ;
var bool: aux5192_BOOL:: var_is_introduced ;
var bool: aux5193_BOOL:: var_is_introduced ;
var {0,1}: aux5193_INTEGER :: var_is_introduced ;
var 2..36: aux5194:: var_is_introduced ;
var bool: aux5195_BOOL:: var_is_introduced ;
var bool: aux5196_BOOL:: var_is_introduced ;
var bool: aux5197_BOOL:: var_is_introduced ;
var bool: aux5198_BOOL:: var_is_introduced ;
var bool: aux5199_BOOL:: var_is_introduced ;
var {0,1}: aux5199_INTEGER :: var_is_introduced ;
var 2..36: aux5200:: var_is_introduced ;
var bool: aux5201_BOOL:: var_is_introduced ;
var bool: aux5202_BOOL:: var_is_introduced ;
var bool: aux5203_BOOL:: var_is_introduced ;
var bool: aux5204_BOOL:: var_is_introduced ;
var bool: aux5205_BOOL:: var_is_introduced ;
var {0,1}: aux5205_INTEGER :: var_is_introduced ;
var 2..36: aux5206:: var_is_introduced ;
var bool: aux5207_BOOL:: var_is_introduced ;
var bool: aux5208_BOOL:: var_is_introduced ;
var bool: aux5209_BOOL:: var_is_introduced ;
var bool: aux5210_BOOL:: var_is_introduced ;
var bool: aux5211_BOOL:: var_is_introduced ;
var {0,1}: aux5211_INTEGER :: var_is_introduced ;
var 1..35: aux5212:: var_is_introduced ;
var bool: aux5213_BOOL:: var_is_introduced ;
var bool: aux5214_BOOL:: var_is_introduced ;
var bool: aux5215_BOOL:: var_is_introduced ;
var bool: aux5216_BOOL:: var_is_introduced ;
var bool: aux5217_BOOL:: var_is_introduced ;
var {0,1}: aux5217_INTEGER :: var_is_introduced ;
var 2..36: aux5218:: var_is_introduced ;
var bool: aux5219_BOOL:: var_is_introduced ;
var bool: aux5220_BOOL:: var_is_introduced ;
var bool: aux5221_BOOL:: var_is_introduced ;
var bool: aux5222_BOOL:: var_is_introduced ;
var bool: aux5223_BOOL:: var_is_introduced ;
var {0,1}: aux5223_INTEGER :: var_is_introduced ;
var 4..38: aux5224:: var_is_introduced ;
var bool: aux5225_BOOL:: var_is_introduced ;
var bool: aux5226_BOOL:: var_is_introduced ;
var bool: aux5227_BOOL:: var_is_introduced ;
var bool: aux5228_BOOL:: var_is_introduced ;
var bool: aux5229_BOOL:: var_is_introduced ;
var {0,1}: aux5229_INTEGER :: var_is_introduced ;
var 3..37: aux5230:: var_is_introduced ;
var bool: aux5231_BOOL:: var_is_introduced ;
var bool: aux5232_BOOL:: var_is_introduced ;
var bool: aux5233_BOOL:: var_is_introduced ;
var bool: aux5234_BOOL:: var_is_introduced ;
var bool: aux5235_BOOL:: var_is_introduced ;
var {0,1}: aux5235_INTEGER :: var_is_introduced ;
var 3..37: aux5236:: var_is_introduced ;
var bool: aux5237_BOOL:: var_is_introduced ;
var bool: aux5238_BOOL:: var_is_introduced ;
var bool: aux5239_BOOL:: var_is_introduced ;
var bool: aux5240_BOOL:: var_is_introduced ;
var bool: aux5241_BOOL:: var_is_introduced ;
var {0,1}: aux5241_INTEGER :: var_is_introduced ;
var 6..40: aux5242:: var_is_introduced ;
var bool: aux5243_BOOL:: var_is_introduced ;
var bool: aux5244_BOOL:: var_is_introduced ;
var bool: aux5245_BOOL:: var_is_introduced ;
var bool: aux5246_BOOL:: var_is_introduced ;
var bool: aux5247_BOOL:: var_is_introduced ;
var {0,1}: aux5247_INTEGER :: var_is_introduced ;
var 3..37: aux5248:: var_is_introduced ;
var bool: aux5249_BOOL:: var_is_introduced ;
var bool: aux5250_BOOL:: var_is_introduced ;
var bool: aux5251_BOOL:: var_is_introduced ;
var {0,1}: aux5251_INTEGER :: var_is_introduced ;
var bool: aux5252_BOOL:: var_is_introduced ;
var 1..35: aux5253:: var_is_introduced ;
var bool: aux5254_BOOL:: var_is_introduced ;
var bool: aux5255_BOOL:: var_is_introduced ;
var bool: aux5256_BOOL:: var_is_introduced ;
var bool: aux5257_BOOL:: var_is_introduced ;
var bool: aux5258_BOOL:: var_is_introduced ;
var {0,1}: aux5258_INTEGER :: var_is_introduced ;
var 1..35: aux5259:: var_is_introduced ;
var bool: aux5260_BOOL:: var_is_introduced ;
var bool: aux5261_BOOL:: var_is_introduced ;
var bool: aux5262_BOOL:: var_is_introduced ;
var bool: aux5263_BOOL:: var_is_introduced ;
var bool: aux5264_BOOL:: var_is_introduced ;
var {0,1}: aux5264_INTEGER :: var_is_introduced ;
var 1..35: aux5265:: var_is_introduced ;
var bool: aux5266_BOOL:: var_is_introduced ;
var bool: aux5267_BOOL:: var_is_introduced ;
var bool: aux5268_BOOL:: var_is_introduced ;
var bool: aux5269_BOOL:: var_is_introduced ;
var bool: aux5270_BOOL:: var_is_introduced ;
var {0,1}: aux5270_INTEGER :: var_is_introduced ;
var 2..36: aux5271:: var_is_introduced ;
var bool: aux5272_BOOL:: var_is_introduced ;
var bool: aux5273_BOOL:: var_is_introduced ;
var bool: aux5274_BOOL:: var_is_introduced ;
var bool: aux5275_BOOL:: var_is_introduced ;
var bool: aux5276_BOOL:: var_is_introduced ;
var {0,1}: aux5276_INTEGER :: var_is_introduced ;
var 2..36: aux5277:: var_is_introduced ;
var bool: aux5278_BOOL:: var_is_introduced ;
var bool: aux5279_BOOL:: var_is_introduced ;
var bool: aux5280_BOOL:: var_is_introduced ;
var bool: aux5281_BOOL:: var_is_introduced ;
var bool: aux5282_BOOL:: var_is_introduced ;
var {0,1}: aux5282_INTEGER :: var_is_introduced ;
var 2..36: aux5283:: var_is_introduced ;
var bool: aux5284_BOOL:: var_is_introduced ;
var bool: aux5285_BOOL:: var_is_introduced ;
var bool: aux5286_BOOL:: var_is_introduced ;
var bool: aux5287_BOOL:: var_is_introduced ;
var bool: aux5288_BOOL:: var_is_introduced ;
var {0,1}: aux5288_INTEGER :: var_is_introduced ;
var 2..36: aux5289:: var_is_introduced ;
var bool: aux5290_BOOL:: var_is_introduced ;
var bool: aux5291_BOOL:: var_is_introduced ;
var bool: aux5292_BOOL:: var_is_introduced ;
var bool: aux5293_BOOL:: var_is_introduced ;
var bool: aux5294_BOOL:: var_is_introduced ;
var {0,1}: aux5294_INTEGER :: var_is_introduced ;
var 2..36: aux5295:: var_is_introduced ;
var bool: aux5296_BOOL:: var_is_introduced ;
var bool: aux5297_BOOL:: var_is_introduced ;
var bool: aux5298_BOOL:: var_is_introduced ;
var bool: aux5299_BOOL:: var_is_introduced ;
var bool: aux5300_BOOL:: var_is_introduced ;
var {0,1}: aux5300_INTEGER :: var_is_introduced ;
var 3..37: aux5301:: var_is_introduced ;
var bool: aux5302_BOOL:: var_is_introduced ;
var bool: aux5303_BOOL:: var_is_introduced ;
var bool: aux5304_BOOL:: var_is_introduced ;
var bool: aux5305_BOOL:: var_is_introduced ;
var bool: aux5306_BOOL:: var_is_introduced ;
var {0,1}: aux5306_INTEGER :: var_is_introduced ;
var 3..37: aux5307:: var_is_introduced ;
var bool: aux5308_BOOL:: var_is_introduced ;
var bool: aux5309_BOOL:: var_is_introduced ;
var bool: aux5310_BOOL:: var_is_introduced ;
var bool: aux5311_BOOL:: var_is_introduced ;
var bool: aux5312_BOOL:: var_is_introduced ;
var {0,1}: aux5312_INTEGER :: var_is_introduced ;
var 3..37: aux5313:: var_is_introduced ;
var bool: aux5314_BOOL:: var_is_introduced ;
var bool: aux5315_BOOL:: var_is_introduced ;
var bool: aux5316_BOOL:: var_is_introduced ;
var bool: aux5317_BOOL:: var_is_introduced ;
var bool: aux5318_BOOL:: var_is_introduced ;
var {0,1}: aux5318_INTEGER :: var_is_introduced ;
var 4..38: aux5319:: var_is_introduced ;
var bool: aux5320_BOOL:: var_is_introduced ;
var bool: aux5321_BOOL:: var_is_introduced ;
var bool: aux5322_BOOL:: var_is_introduced ;
var bool: aux5323_BOOL:: var_is_introduced ;
var bool: aux5324_BOOL:: var_is_introduced ;
var {0,1}: aux5324_INTEGER :: var_is_introduced ;
var 6..40: aux5325:: var_is_introduced ;
var bool: aux5326_BOOL:: var_is_introduced ;
var bool: aux5327_BOOL:: var_is_introduced ;
var bool: aux5328_BOOL:: var_is_introduced ;
var bool: aux5329_BOOL:: var_is_introduced ;
var bool: aux5330_BOOL:: var_is_introduced ;
var {0,1}: aux5330_INTEGER :: var_is_introduced ;
var 2..36: aux5331:: var_is_introduced ;
var bool: aux5332_BOOL:: var_is_introduced ;
var bool: aux5333_BOOL:: var_is_introduced ;
var bool: aux5334_BOOL:: var_is_introduced ;
var {0,1}: aux5334_INTEGER :: var_is_introduced ;
var bool: aux5335_BOOL:: var_is_introduced ;
var 1..35: aux5336:: var_is_introduced ;
var bool: aux5337_BOOL:: var_is_introduced ;
var bool: aux5338_BOOL:: var_is_introduced ;
var bool: aux5339_BOOL:: var_is_introduced ;
var bool: aux5340_BOOL:: var_is_introduced ;
var bool: aux5341_BOOL:: var_is_introduced ;
var {0,1}: aux5341_INTEGER :: var_is_introduced ;
var 1..35: aux5342:: var_is_introduced ;
var bool: aux5343_BOOL:: var_is_introduced ;
var bool: aux5344_BOOL:: var_is_introduced ;
var bool: aux5345_BOOL:: var_is_introduced ;
var bool: aux5346_BOOL:: var_is_introduced ;
var bool: aux5347_BOOL:: var_is_introduced ;
var {0,1}: aux5347_INTEGER :: var_is_introduced ;
var 2..36: aux5348:: var_is_introduced ;
var bool: aux5349_BOOL:: var_is_introduced ;
var bool: aux5350_BOOL:: var_is_introduced ;
var bool: aux5351_BOOL:: var_is_introduced ;
var bool: aux5352_BOOL:: var_is_introduced ;
var bool: aux5353_BOOL:: var_is_introduced ;
var {0,1}: aux5353_INTEGER :: var_is_introduced ;
var 2..36: aux5354:: var_is_introduced ;
var bool: aux5355_BOOL:: var_is_introduced ;
var bool: aux5356_BOOL:: var_is_introduced ;
var bool: aux5357_BOOL:: var_is_introduced ;
var bool: aux5358_BOOL:: var_is_introduced ;
var bool: aux5359_BOOL:: var_is_introduced ;
var {0,1}: aux5359_INTEGER :: var_is_introduced ;
var 1..35: aux5360:: var_is_introduced ;
var bool: aux5361_BOOL:: var_is_introduced ;
var bool: aux5362_BOOL:: var_is_introduced ;
var bool: aux5363_BOOL:: var_is_introduced ;
var bool: aux5364_BOOL:: var_is_introduced ;
var bool: aux5365_BOOL:: var_is_introduced ;
var {0,1}: aux5365_INTEGER :: var_is_introduced ;
var 2..36: aux5366:: var_is_introduced ;
var bool: aux5367_BOOL:: var_is_introduced ;
var bool: aux5368_BOOL:: var_is_introduced ;
var bool: aux5369_BOOL:: var_is_introduced ;
var bool: aux5370_BOOL:: var_is_introduced ;
var bool: aux5371_BOOL:: var_is_introduced ;
var {0,1}: aux5371_INTEGER :: var_is_introduced ;
var 2..36: aux5372:: var_is_introduced ;
var bool: aux5373_BOOL:: var_is_introduced ;
var bool: aux5374_BOOL:: var_is_introduced ;
var bool: aux5375_BOOL:: var_is_introduced ;
var bool: aux5376_BOOL:: var_is_introduced ;
var bool: aux5377_BOOL:: var_is_introduced ;
var {0,1}: aux5377_INTEGER :: var_is_introduced ;
var 2..36: aux5378:: var_is_introduced ;
var bool: aux5379_BOOL:: var_is_introduced ;
var bool: aux5380_BOOL:: var_is_introduced ;
var bool: aux5381_BOOL:: var_is_introduced ;
var bool: aux5382_BOOL:: var_is_introduced ;
var bool: aux5383_BOOL:: var_is_introduced ;
var {0,1}: aux5383_INTEGER :: var_is_introduced ;
var 3..37: aux5384:: var_is_introduced ;
var bool: aux5385_BOOL:: var_is_introduced ;
var bool: aux5386_BOOL:: var_is_introduced ;
var bool: aux5387_BOOL:: var_is_introduced ;
var bool: aux5388_BOOL:: var_is_introduced ;
var bool: aux5389_BOOL:: var_is_introduced ;
var {0,1}: aux5389_INTEGER :: var_is_introduced ;
var 4..38: aux5390:: var_is_introduced ;
var bool: aux5391_BOOL:: var_is_introduced ;
var bool: aux5392_BOOL:: var_is_introduced ;
var bool: aux5393_BOOL:: var_is_introduced ;
var bool: aux5394_BOOL:: var_is_introduced ;
var bool: aux5395_BOOL:: var_is_introduced ;
var {0,1}: aux5395_INTEGER :: var_is_introduced ;
var 3..37: aux5396:: var_is_introduced ;
var bool: aux5397_BOOL:: var_is_introduced ;
var bool: aux5398_BOOL:: var_is_introduced ;
var bool: aux5399_BOOL:: var_is_introduced ;
var bool: aux5400_BOOL:: var_is_introduced ;
var bool: aux5401_BOOL:: var_is_introduced ;
var {0,1}: aux5401_INTEGER :: var_is_introduced ;
var 3..37: aux5402:: var_is_introduced ;
var bool: aux5403_BOOL:: var_is_introduced ;
var bool: aux5404_BOOL:: var_is_introduced ;
var bool: aux5405_BOOL:: var_is_introduced ;
var bool: aux5406_BOOL:: var_is_introduced ;
var bool: aux5407_BOOL:: var_is_introduced ;
var {0,1}: aux5407_INTEGER :: var_is_introduced ;
var 6..40: aux5408:: var_is_introduced ;
var bool: aux5409_BOOL:: var_is_introduced ;
var bool: aux5410_BOOL:: var_is_introduced ;
var bool: aux5411_BOOL:: var_is_introduced ;
var bool: aux5412_BOOL:: var_is_introduced ;
var bool: aux5413_BOOL:: var_is_introduced ;
var {0,1}: aux5413_INTEGER :: var_is_introduced ;
var 2..36: aux5414:: var_is_introduced ;
var bool: aux5415_BOOL:: var_is_introduced ;
var bool: aux5416_BOOL:: var_is_introduced ;
var bool: aux5417_BOOL:: var_is_introduced ;
var {0,1}: aux5417_INTEGER :: var_is_introduced ;
var bool: aux5418_BOOL:: var_is_introduced ;
var 1..35: aux5419:: var_is_introduced ;
var bool: aux5420_BOOL:: var_is_introduced ;
var bool: aux5421_BOOL:: var_is_introduced ;
var bool: aux5422_BOOL:: var_is_introduced ;
var bool: aux5423_BOOL:: var_is_introduced ;
var bool: aux5424_BOOL:: var_is_introduced ;
var {0,1}: aux5424_INTEGER :: var_is_introduced ;
var 1..35: aux5425:: var_is_introduced ;
var bool: aux5426_BOOL:: var_is_introduced ;
var bool: aux5427_BOOL:: var_is_introduced ;
var bool: aux5428_BOOL:: var_is_introduced ;
var bool: aux5429_BOOL:: var_is_introduced ;
var bool: aux5430_BOOL:: var_is_introduced ;
var {0,1}: aux5430_INTEGER :: var_is_introduced ;
var 2..36: aux5431:: var_is_introduced ;
var bool: aux5432_BOOL:: var_is_introduced ;
var bool: aux5433_BOOL:: var_is_introduced ;
var bool: aux5434_BOOL:: var_is_introduced ;
var bool: aux5435_BOOL:: var_is_introduced ;
var bool: aux5436_BOOL:: var_is_introduced ;
var {0,1}: aux5436_INTEGER :: var_is_introduced ;
var 1..35: aux5437:: var_is_introduced ;
var bool: aux5438_BOOL:: var_is_introduced ;
var bool: aux5439_BOOL:: var_is_introduced ;
var bool: aux5440_BOOL:: var_is_introduced ;
var bool: aux5441_BOOL:: var_is_introduced ;
var bool: aux5442_BOOL:: var_is_introduced ;
var {0,1}: aux5442_INTEGER :: var_is_introduced ;
var 2..36: aux5443:: var_is_introduced ;
var bool: aux5444_BOOL:: var_is_introduced ;
var bool: aux5445_BOOL:: var_is_introduced ;
var bool: aux5446_BOOL:: var_is_introduced ;
var bool: aux5447_BOOL:: var_is_introduced ;
var bool: aux5448_BOOL:: var_is_introduced ;
var {0,1}: aux5448_INTEGER :: var_is_introduced ;
var 2..36: aux5449:: var_is_introduced ;
var bool: aux5450_BOOL:: var_is_introduced ;
var bool: aux5451_BOOL:: var_is_introduced ;
var bool: aux5452_BOOL:: var_is_introduced ;
var bool: aux5453_BOOL:: var_is_introduced ;
var bool: aux5454_BOOL:: var_is_introduced ;
var {0,1}: aux5454_INTEGER :: var_is_introduced ;
var 2..36: aux5455:: var_is_introduced ;
var bool: aux5456_BOOL:: var_is_introduced ;
var bool: aux5457_BOOL:: var_is_introduced ;
var bool: aux5458_BOOL:: var_is_introduced ;
var bool: aux5459_BOOL:: var_is_introduced ;
var bool: aux5460_BOOL:: var_is_introduced ;
var {0,1}: aux5460_INTEGER :: var_is_introduced ;
var 2..36: aux5461:: var_is_introduced ;
var bool: aux5462_BOOL:: var_is_introduced ;
var bool: aux5463_BOOL:: var_is_introduced ;
var bool: aux5464_BOOL:: var_is_introduced ;
var bool: aux5465_BOOL:: var_is_introduced ;
var bool: aux5466_BOOL:: var_is_introduced ;
var {0,1}: aux5466_INTEGER :: var_is_introduced ;
var 3..37: aux5467:: var_is_introduced ;
var bool: aux5468_BOOL:: var_is_introduced ;
var bool: aux5469_BOOL:: var_is_introduced ;
var bool: aux5470_BOOL:: var_is_introduced ;
var bool: aux5471_BOOL:: var_is_introduced ;
var bool: aux5472_BOOL:: var_is_introduced ;
var {0,1}: aux5472_INTEGER :: var_is_introduced ;
var 3..37: aux5473:: var_is_introduced ;
var bool: aux5474_BOOL:: var_is_introduced ;
var bool: aux5475_BOOL:: var_is_introduced ;
var bool: aux5476_BOOL:: var_is_introduced ;
var bool: aux5477_BOOL:: var_is_introduced ;
var bool: aux5478_BOOL:: var_is_introduced ;
var {0,1}: aux5478_INTEGER :: var_is_introduced ;
var 3..37: aux5479:: var_is_introduced ;
var bool: aux5480_BOOL:: var_is_introduced ;
var bool: aux5481_BOOL:: var_is_introduced ;
var bool: aux5482_BOOL:: var_is_introduced ;
var bool: aux5483_BOOL:: var_is_introduced ;
var bool: aux5484_BOOL:: var_is_introduced ;
var {0,1}: aux5484_INTEGER :: var_is_introduced ;
var 4..38: aux5485:: var_is_introduced ;
var bool: aux5486_BOOL:: var_is_introduced ;
var bool: aux5487_BOOL:: var_is_introduced ;
var bool: aux5488_BOOL:: var_is_introduced ;
var bool: aux5489_BOOL:: var_is_introduced ;
var bool: aux5490_BOOL:: var_is_introduced ;
var {0,1}: aux5490_INTEGER :: var_is_introduced ;
var 6..40: aux5491:: var_is_introduced ;
var bool: aux5492_BOOL:: var_is_introduced ;
var bool: aux5493_BOOL:: var_is_introduced ;
var bool: aux5494_BOOL:: var_is_introduced ;
var bool: aux5495_BOOL:: var_is_introduced ;
var bool: aux5496_BOOL:: var_is_introduced ;
var {0,1}: aux5496_INTEGER :: var_is_introduced ;
var 2..36: aux5497:: var_is_introduced ;
var bool: aux5498_BOOL:: var_is_introduced ;
var bool: aux5499_BOOL:: var_is_introduced ;
var bool: aux5500_BOOL:: var_is_introduced ;
var {0,1}: aux5500_INTEGER :: var_is_introduced ;
var bool: aux5501_BOOL:: var_is_introduced ;
var 1..35: aux5502:: var_is_introduced ;
var bool: aux5503_BOOL:: var_is_introduced ;
var bool: aux5504_BOOL:: var_is_introduced ;
var bool: aux5505_BOOL:: var_is_introduced ;
var bool: aux5506_BOOL:: var_is_introduced ;
var bool: aux5507_BOOL:: var_is_introduced ;
var {0,1}: aux5507_INTEGER :: var_is_introduced ;
var 1..35: aux5508:: var_is_introduced ;
var bool: aux5509_BOOL:: var_is_introduced ;
var bool: aux5510_BOOL:: var_is_introduced ;
var bool: aux5511_BOOL:: var_is_introduced ;
var bool: aux5512_BOOL:: var_is_introduced ;
var bool: aux5513_BOOL:: var_is_introduced ;
var {0,1}: aux5513_INTEGER :: var_is_introduced ;
var 2..36: aux5514:: var_is_introduced ;
var bool: aux5515_BOOL:: var_is_introduced ;
var bool: aux5516_BOOL:: var_is_introduced ;
var bool: aux5517_BOOL:: var_is_introduced ;
var bool: aux5518_BOOL:: var_is_introduced ;
var bool: aux5519_BOOL:: var_is_introduced ;
var {0,1}: aux5519_INTEGER :: var_is_introduced ;
var 2..36: aux5520:: var_is_introduced ;
var bool: aux5521_BOOL:: var_is_introduced ;
var bool: aux5522_BOOL:: var_is_introduced ;
var bool: aux5523_BOOL:: var_is_introduced ;
var bool: aux5524_BOOL:: var_is_introduced ;
var bool: aux5525_BOOL:: var_is_introduced ;
var {0,1}: aux5525_INTEGER :: var_is_introduced ;
var 1..35: aux5526:: var_is_introduced ;
var bool: aux5527_BOOL:: var_is_introduced ;
var bool: aux5528_BOOL:: var_is_introduced ;
var bool: aux5529_BOOL:: var_is_introduced ;
var bool: aux5530_BOOL:: var_is_introduced ;
var bool: aux5531_BOOL:: var_is_introduced ;
var {0,1}: aux5531_INTEGER :: var_is_introduced ;
var 2..36: aux5532:: var_is_introduced ;
var bool: aux5533_BOOL:: var_is_introduced ;
var bool: aux5534_BOOL:: var_is_introduced ;
var bool: aux5535_BOOL:: var_is_introduced ;
var bool: aux5536_BOOL:: var_is_introduced ;
var bool: aux5537_BOOL:: var_is_introduced ;
var {0,1}: aux5537_INTEGER :: var_is_introduced ;
var 2..36: aux5538:: var_is_introduced ;
var bool: aux5539_BOOL:: var_is_introduced ;
var bool: aux5540_BOOL:: var_is_introduced ;
var bool: aux5541_BOOL:: var_is_introduced ;
var bool: aux5542_BOOL:: var_is_introduced ;
var bool: aux5543_BOOL:: var_is_introduced ;
var {0,1}: aux5543_INTEGER :: var_is_introduced ;
var 2..36: aux5544:: var_is_introduced ;
var bool: aux5545_BOOL:: var_is_introduced ;
var bool: aux5546_BOOL:: var_is_introduced ;
var bool: aux5547_BOOL:: var_is_introduced ;
var bool: aux5548_BOOL:: var_is_introduced ;
var bool: aux5549_BOOL:: var_is_introduced ;
var {0,1}: aux5549_INTEGER :: var_is_introduced ;
var 3..37: aux5550:: var_is_introduced ;
var bool: aux5551_BOOL:: var_is_introduced ;
var bool: aux5552_BOOL:: var_is_introduced ;
var bool: aux5553_BOOL:: var_is_introduced ;
var bool: aux5554_BOOL:: var_is_introduced ;
var bool: aux5555_BOOL:: var_is_introduced ;
var {0,1}: aux5555_INTEGER :: var_is_introduced ;
var 3..37: aux5556:: var_is_introduced ;
var bool: aux5557_BOOL:: var_is_introduced ;
var bool: aux5558_BOOL:: var_is_introduced ;
var bool: aux5559_BOOL:: var_is_introduced ;
var bool: aux5560_BOOL:: var_is_introduced ;
var bool: aux5561_BOOL:: var_is_introduced ;
var {0,1}: aux5561_INTEGER :: var_is_introduced ;
var 4..38: aux5562:: var_is_introduced ;
var bool: aux5563_BOOL:: var_is_introduced ;
var bool: aux5564_BOOL:: var_is_introduced ;
var bool: aux5565_BOOL:: var_is_introduced ;
var bool: aux5566_BOOL:: var_is_introduced ;
var bool: aux5567_BOOL:: var_is_introduced ;
var {0,1}: aux5567_INTEGER :: var_is_introduced ;
var 3..37: aux5568:: var_is_introduced ;
var bool: aux5569_BOOL:: var_is_introduced ;
var bool: aux5570_BOOL:: var_is_introduced ;
var bool: aux5571_BOOL:: var_is_introduced ;
var bool: aux5572_BOOL:: var_is_introduced ;
var bool: aux5573_BOOL:: var_is_introduced ;
var {0,1}: aux5573_INTEGER :: var_is_introduced ;
var 6..40: aux5574:: var_is_introduced ;
var bool: aux5575_BOOL:: var_is_introduced ;
var bool: aux5576_BOOL:: var_is_introduced ;
var bool: aux5577_BOOL:: var_is_introduced ;
var bool: aux5578_BOOL:: var_is_introduced ;
var bool: aux5579_BOOL:: var_is_introduced ;
var {0,1}: aux5579_INTEGER :: var_is_introduced ;
var 2..36: aux5580:: var_is_introduced ;
var bool: aux5581_BOOL:: var_is_introduced ;
var bool: aux5582_BOOL:: var_is_introduced ;
var bool: aux5583_BOOL:: var_is_introduced ;
var {0,1}: aux5583_INTEGER :: var_is_introduced ;
var bool: aux5584_BOOL:: var_is_introduced ;
var 1..35: aux5585:: var_is_introduced ;
var bool: aux5586_BOOL:: var_is_introduced ;
var bool: aux5587_BOOL:: var_is_introduced ;
var bool: aux5588_BOOL:: var_is_introduced ;
var bool: aux5589_BOOL:: var_is_introduced ;
var bool: aux5590_BOOL:: var_is_introduced ;
var {0,1}: aux5590_INTEGER :: var_is_introduced ;
var 1..35: aux5591:: var_is_introduced ;
var bool: aux5592_BOOL:: var_is_introduced ;
var bool: aux5593_BOOL:: var_is_introduced ;
var bool: aux5594_BOOL:: var_is_introduced ;
var bool: aux5595_BOOL:: var_is_introduced ;
var bool: aux5596_BOOL:: var_is_introduced ;
var {0,1}: aux5596_INTEGER :: var_is_introduced ;
var 2..36: aux5597:: var_is_introduced ;
var bool: aux5598_BOOL:: var_is_introduced ;
var bool: aux5599_BOOL:: var_is_introduced ;
var bool: aux5600_BOOL:: var_is_introduced ;
var bool: aux5601_BOOL:: var_is_introduced ;
var bool: aux5602_BOOL:: var_is_introduced ;
var {0,1}: aux5602_INTEGER :: var_is_introduced ;
var 1..35: aux5603:: var_is_introduced ;
var bool: aux5604_BOOL:: var_is_introduced ;
var bool: aux5605_BOOL:: var_is_introduced ;
var bool: aux5606_BOOL:: var_is_introduced ;
var bool: aux5607_BOOL:: var_is_introduced ;
var bool: aux5608_BOOL:: var_is_introduced ;
var {0,1}: aux5608_INTEGER :: var_is_introduced ;
var 2..36: aux5609:: var_is_introduced ;
var bool: aux5610_BOOL:: var_is_introduced ;
var bool: aux5611_BOOL:: var_is_introduced ;
var bool: aux5612_BOOL:: var_is_introduced ;
var bool: aux5613_BOOL:: var_is_introduced ;
var bool: aux5614_BOOL:: var_is_introduced ;
var {0,1}: aux5614_INTEGER :: var_is_introduced ;
var 2..36: aux5615:: var_is_introduced ;
var bool: aux5616_BOOL:: var_is_introduced ;
var bool: aux5617_BOOL:: var_is_introduced ;
var bool: aux5618_BOOL:: var_is_introduced ;
var bool: aux5619_BOOL:: var_is_introduced ;
var bool: aux5620_BOOL:: var_is_introduced ;
var {0,1}: aux5620_INTEGER :: var_is_introduced ;
var 2..36: aux5621:: var_is_introduced ;
var bool: aux5622_BOOL:: var_is_introduced ;
var bool: aux5623_BOOL:: var_is_introduced ;
var bool: aux5624_BOOL:: var_is_introduced ;
var bool: aux5625_BOOL:: var_is_introduced ;
var bool: aux5626_BOOL:: var_is_introduced ;
var {0,1}: aux5626_INTEGER :: var_is_introduced ;
var 2..36: aux5627:: var_is_introduced ;
var bool: aux5628_BOOL:: var_is_introduced ;
var bool: aux5629_BOOL:: var_is_introduced ;
var bool: aux5630_BOOL:: var_is_introduced ;
var bool: aux5631_BOOL:: var_is_introduced ;
var bool: aux5632_BOOL:: var_is_introduced ;
var {0,1}: aux5632_INTEGER :: var_is_introduced ;
var 2..36: aux5633:: var_is_introduced ;
var bool: aux5634_BOOL:: var_is_introduced ;
var bool: aux5635_BOOL:: var_is_introduced ;
var bool: aux5636_BOOL:: var_is_introduced ;
var bool: aux5637_BOOL:: var_is_introduced ;
var bool: aux5638_BOOL:: var_is_introduced ;
var {0,1}: aux5638_INTEGER :: var_is_introduced ;
var 3..37: aux5639:: var_is_introduced ;
var bool: aux5640_BOOL:: var_is_introduced ;
var bool: aux5641_BOOL:: var_is_introduced ;
var bool: aux5642_BOOL:: var_is_introduced ;
var bool: aux5643_BOOL:: var_is_introduced ;
var bool: aux5644_BOOL:: var_is_introduced ;
var {0,1}: aux5644_INTEGER :: var_is_introduced ;
var 3..37: aux5645:: var_is_introduced ;
var bool: aux5646_BOOL:: var_is_introduced ;
var bool: aux5647_BOOL:: var_is_introduced ;
var bool: aux5648_BOOL:: var_is_introduced ;
var bool: aux5649_BOOL:: var_is_introduced ;
var bool: aux5650_BOOL:: var_is_introduced ;
var {0,1}: aux5650_INTEGER :: var_is_introduced ;
var 3..37: aux5651:: var_is_introduced ;
var bool: aux5652_BOOL:: var_is_introduced ;
var bool: aux5653_BOOL:: var_is_introduced ;
var bool: aux5654_BOOL:: var_is_introduced ;
var bool: aux5655_BOOL:: var_is_introduced ;
var bool: aux5656_BOOL:: var_is_introduced ;
var {0,1}: aux5656_INTEGER :: var_is_introduced ;
var 6..40: aux5657:: var_is_introduced ;
var bool: aux5658_BOOL:: var_is_introduced ;
var bool: aux5659_BOOL:: var_is_introduced ;
var bool: aux5660_BOOL:: var_is_introduced ;
var bool: aux5661_BOOL:: var_is_introduced ;
var bool: aux5662_BOOL:: var_is_introduced ;
var {0,1}: aux5662_INTEGER :: var_is_introduced ;
var 4..38: aux5663:: var_is_introduced ;
var bool: aux5664_BOOL:: var_is_introduced ;
var bool: aux5665_BOOL:: var_is_introduced ;
var bool: aux5666_BOOL:: var_is_introduced ;
var {0,1}: aux5666_INTEGER :: var_is_introduced ;
var bool: aux5667_BOOL:: var_is_introduced ;
var 1..35: aux5668:: var_is_introduced ;
var bool: aux5669_BOOL:: var_is_introduced ;
var bool: aux5670_BOOL:: var_is_introduced ;
var bool: aux5671_BOOL:: var_is_introduced ;
var bool: aux5672_BOOL:: var_is_introduced ;
var bool: aux5673_BOOL:: var_is_introduced ;
var {0,1}: aux5673_INTEGER :: var_is_introduced ;
var 2..36: aux5674:: var_is_introduced ;
var bool: aux5675_BOOL:: var_is_introduced ;
var bool: aux5676_BOOL:: var_is_introduced ;
var bool: aux5677_BOOL:: var_is_introduced ;
var bool: aux5678_BOOL:: var_is_introduced ;
var bool: aux5679_BOOL:: var_is_introduced ;
var {0,1}: aux5679_INTEGER :: var_is_introduced ;
var 1..35: aux5680:: var_is_introduced ;
var bool: aux5681_BOOL:: var_is_introduced ;
var bool: aux5682_BOOL:: var_is_introduced ;
var bool: aux5683_BOOL:: var_is_introduced ;
var bool: aux5684_BOOL:: var_is_introduced ;
var bool: aux5685_BOOL:: var_is_introduced ;
var {0,1}: aux5685_INTEGER :: var_is_introduced ;
var 2..36: aux5686:: var_is_introduced ;
var bool: aux5687_BOOL:: var_is_introduced ;
var bool: aux5688_BOOL:: var_is_introduced ;
var bool: aux5689_BOOL:: var_is_introduced ;
var bool: aux5690_BOOL:: var_is_introduced ;
var bool: aux5691_BOOL:: var_is_introduced ;
var {0,1}: aux5691_INTEGER :: var_is_introduced ;
var 2..36: aux5692:: var_is_introduced ;
var bool: aux5693_BOOL:: var_is_introduced ;
var bool: aux5694_BOOL:: var_is_introduced ;
var bool: aux5695_BOOL:: var_is_introduced ;
var bool: aux5696_BOOL:: var_is_introduced ;
var bool: aux5697_BOOL:: var_is_introduced ;
var {0,1}: aux5697_INTEGER :: var_is_introduced ;
var 2..36: aux5698:: var_is_introduced ;
var bool: aux5699_BOOL:: var_is_introduced ;
var bool: aux5700_BOOL:: var_is_introduced ;
var bool: aux5701_BOOL:: var_is_introduced ;
var bool: aux5702_BOOL:: var_is_introduced ;
var bool: aux5703_BOOL:: var_is_introduced ;
var {0,1}: aux5703_INTEGER :: var_is_introduced ;
var 2..36: aux5704:: var_is_introduced ;
var bool: aux5705_BOOL:: var_is_introduced ;
var bool: aux5706_BOOL:: var_is_introduced ;
var bool: aux5707_BOOL:: var_is_introduced ;
var bool: aux5708_BOOL:: var_is_introduced ;
var bool: aux5709_BOOL:: var_is_introduced ;
var {0,1}: aux5709_INTEGER :: var_is_introduced ;
var 2..36: aux5710:: var_is_introduced ;
var bool: aux5711_BOOL:: var_is_introduced ;
var bool: aux5712_BOOL:: var_is_introduced ;
var bool: aux5713_BOOL:: var_is_introduced ;
var bool: aux5714_BOOL:: var_is_introduced ;
var bool: aux5715_BOOL:: var_is_introduced ;
var {0,1}: aux5715_INTEGER :: var_is_introduced ;
var 3..37: aux5716:: var_is_introduced ;
var bool: aux5717_BOOL:: var_is_introduced ;
var bool: aux5718_BOOL:: var_is_introduced ;
var bool: aux5719_BOOL:: var_is_introduced ;
var bool: aux5720_BOOL:: var_is_introduced ;
var bool: aux5721_BOOL:: var_is_introduced ;
var {0,1}: aux5721_INTEGER :: var_is_introduced ;
var 3..37: aux5722:: var_is_introduced ;
var bool: aux5723_BOOL:: var_is_introduced ;
var bool: aux5724_BOOL:: var_is_introduced ;
var bool: aux5725_BOOL:: var_is_introduced ;
var bool: aux5726_BOOL:: var_is_introduced ;
var bool: aux5727_BOOL:: var_is_introduced ;
var {0,1}: aux5727_INTEGER :: var_is_introduced ;
var 3..37: aux5728:: var_is_introduced ;
var bool: aux5729_BOOL:: var_is_introduced ;
var bool: aux5730_BOOL:: var_is_introduced ;
var bool: aux5731_BOOL:: var_is_introduced ;
var bool: aux5732_BOOL:: var_is_introduced ;
var bool: aux5733_BOOL:: var_is_introduced ;
var {0,1}: aux5733_INTEGER :: var_is_introduced ;
var 4..38: aux5734:: var_is_introduced ;
var bool: aux5735_BOOL:: var_is_introduced ;
var bool: aux5736_BOOL:: var_is_introduced ;
var bool: aux5737_BOOL:: var_is_introduced ;
var bool: aux5738_BOOL:: var_is_introduced ;
var bool: aux5739_BOOL:: var_is_introduced ;
var {0,1}: aux5739_INTEGER :: var_is_introduced ;
var 6..40: aux5740:: var_is_introduced ;
var bool: aux5741_BOOL:: var_is_introduced ;
var bool: aux5742_BOOL:: var_is_introduced ;
var bool: aux5743_BOOL:: var_is_introduced ;
var bool: aux5744_BOOL:: var_is_introduced ;
var bool: aux5745_BOOL:: var_is_introduced ;
var {0,1}: aux5745_INTEGER :: var_is_introduced ;
var 1..35: aux5746:: var_is_introduced ;
var bool: aux5747_BOOL:: var_is_introduced ;
var bool: aux5748_BOOL:: var_is_introduced ;
var bool: aux5749_BOOL:: var_is_introduced ;
var {0,1}: aux5749_INTEGER :: var_is_introduced ;
var bool: aux5750_BOOL:: var_is_introduced ;
var 1..35: aux5751:: var_is_introduced ;
var bool: aux5752_BOOL:: var_is_introduced ;
var bool: aux5753_BOOL:: var_is_introduced ;
var bool: aux5754_BOOL:: var_is_introduced ;
var bool: aux5755_BOOL:: var_is_introduced ;
var bool: aux5756_BOOL:: var_is_introduced ;
var {0,1}: aux5756_INTEGER :: var_is_introduced ;
var 1..35: aux5757:: var_is_introduced ;
var bool: aux5758_BOOL:: var_is_introduced ;
var bool: aux5759_BOOL:: var_is_introduced ;
var bool: aux5760_BOOL:: var_is_introduced ;
var bool: aux5761_BOOL:: var_is_introduced ;
var bool: aux5762_BOOL:: var_is_introduced ;
var {0,1}: aux5762_INTEGER :: var_is_introduced ;
var 2..36: aux5763:: var_is_introduced ;
var bool: aux5764_BOOL:: var_is_introduced ;
var bool: aux5765_BOOL:: var_is_introduced ;
var bool: aux5766_BOOL:: var_is_introduced ;
var bool: aux5767_BOOL:: var_is_introduced ;
var bool: aux5768_BOOL:: var_is_introduced ;
var {0,1}: aux5768_INTEGER :: var_is_introduced ;
var 1..35: aux5769:: var_is_introduced ;
var bool: aux5770_BOOL:: var_is_introduced ;
var bool: aux5771_BOOL:: var_is_introduced ;
var bool: aux5772_BOOL:: var_is_introduced ;
var bool: aux5773_BOOL:: var_is_introduced ;
var bool: aux5774_BOOL:: var_is_introduced ;
var {0,1}: aux5774_INTEGER :: var_is_introduced ;
var 2..36: aux5775:: var_is_introduced ;
var bool: aux5776_BOOL:: var_is_introduced ;
var bool: aux5777_BOOL:: var_is_introduced ;
var bool: aux5778_BOOL:: var_is_introduced ;
var bool: aux5779_BOOL:: var_is_introduced ;
var bool: aux5780_BOOL:: var_is_introduced ;
var {0,1}: aux5780_INTEGER :: var_is_introduced ;
var 2..36: aux5781:: var_is_introduced ;
var bool: aux5782_BOOL:: var_is_introduced ;
var bool: aux5783_BOOL:: var_is_introduced ;
var bool: aux5784_BOOL:: var_is_introduced ;
var bool: aux5785_BOOL:: var_is_introduced ;
var bool: aux5786_BOOL:: var_is_introduced ;
var {0,1}: aux5786_INTEGER :: var_is_introduced ;
var 2..36: aux5787:: var_is_introduced ;
var bool: aux5788_BOOL:: var_is_introduced ;
var bool: aux5789_BOOL:: var_is_introduced ;
var bool: aux5790_BOOL:: var_is_introduced ;
var bool: aux5791_BOOL:: var_is_introduced ;
var bool: aux5792_BOOL:: var_is_introduced ;
var {0,1}: aux5792_INTEGER :: var_is_introduced ;
var 2..36: aux5793:: var_is_introduced ;
var bool: aux5794_BOOL:: var_is_introduced ;
var bool: aux5795_BOOL:: var_is_introduced ;
var bool: aux5796_BOOL:: var_is_introduced ;
var bool: aux5797_BOOL:: var_is_introduced ;
var bool: aux5798_BOOL:: var_is_introduced ;
var {0,1}: aux5798_INTEGER :: var_is_introduced ;
var 2..36: aux5799:: var_is_introduced ;
var bool: aux5800_BOOL:: var_is_introduced ;
var bool: aux5801_BOOL:: var_is_introduced ;
var bool: aux5802_BOOL:: var_is_introduced ;
var bool: aux5803_BOOL:: var_is_introduced ;
var bool: aux5804_BOOL:: var_is_introduced ;
var {0,1}: aux5804_INTEGER :: var_is_introduced ;
var 3..37: aux5805:: var_is_introduced ;
var bool: aux5806_BOOL:: var_is_introduced ;
var bool: aux5807_BOOL:: var_is_introduced ;
var bool: aux5808_BOOL:: var_is_introduced ;
var bool: aux5809_BOOL:: var_is_introduced ;
var bool: aux5810_BOOL:: var_is_introduced ;
var {0,1}: aux5810_INTEGER :: var_is_introduced ;
var 3..37: aux5811:: var_is_introduced ;
var bool: aux5812_BOOL:: var_is_introduced ;
var bool: aux5813_BOOL:: var_is_introduced ;
var bool: aux5814_BOOL:: var_is_introduced ;
var bool: aux5815_BOOL:: var_is_introduced ;
var bool: aux5816_BOOL:: var_is_introduced ;
var {0,1}: aux5816_INTEGER :: var_is_introduced ;
var 3..37: aux5817:: var_is_introduced ;
var bool: aux5818_BOOL:: var_is_introduced ;
var bool: aux5819_BOOL:: var_is_introduced ;
var bool: aux5820_BOOL:: var_is_introduced ;
var bool: aux5821_BOOL:: var_is_introduced ;
var bool: aux5822_BOOL:: var_is_introduced ;
var {0,1}: aux5822_INTEGER :: var_is_introduced ;
var 4..38: aux5823:: var_is_introduced ;
var bool: aux5824_BOOL:: var_is_introduced ;
var bool: aux5825_BOOL:: var_is_introduced ;
var bool: aux5826_BOOL:: var_is_introduced ;
var bool: aux5827_BOOL:: var_is_introduced ;
var bool: aux5828_BOOL:: var_is_introduced ;
var {0,1}: aux5828_INTEGER :: var_is_introduced ;
var 6..40: aux5829:: var_is_introduced ;
var bool: aux5830_BOOL:: var_is_introduced ;
var bool: aux5831_BOOL:: var_is_introduced ;
var bool: aux5832_BOOL:: var_is_introduced ;
var {0,1}: aux5832_INTEGER :: var_is_introduced ;
var bool: aux5833_BOOL:: var_is_introduced ;
var 1..35: aux5834:: var_is_introduced ;
var bool: aux5835_BOOL:: var_is_introduced ;
var bool: aux5836_BOOL:: var_is_introduced ;
var bool: aux5837_BOOL:: var_is_introduced ;
var bool: aux5838_BOOL:: var_is_introduced ;
var bool: aux5839_BOOL:: var_is_introduced ;
var {0,1}: aux5839_INTEGER :: var_is_introduced ;
var 1..35: aux5840:: var_is_introduced ;
var bool: aux5841_BOOL:: var_is_introduced ;
var bool: aux5842_BOOL:: var_is_introduced ;
var bool: aux5843_BOOL:: var_is_introduced ;
var bool: aux5844_BOOL:: var_is_introduced ;
var bool: aux5845_BOOL:: var_is_introduced ;
var {0,1}: aux5845_INTEGER :: var_is_introduced ;
var 2..36: aux5846:: var_is_introduced ;
var bool: aux5847_BOOL:: var_is_introduced ;
var bool: aux5848_BOOL:: var_is_introduced ;
var bool: aux5849_BOOL:: var_is_introduced ;
var bool: aux5850_BOOL:: var_is_introduced ;
var bool: aux5851_BOOL:: var_is_introduced ;
var {0,1}: aux5851_INTEGER :: var_is_introduced ;
var 2..36: aux5852:: var_is_introduced ;
var bool: aux5853_BOOL:: var_is_introduced ;
var bool: aux5854_BOOL:: var_is_introduced ;
var bool: aux5855_BOOL:: var_is_introduced ;
var bool: aux5856_BOOL:: var_is_introduced ;
var bool: aux5857_BOOL:: var_is_introduced ;
var {0,1}: aux5857_INTEGER :: var_is_introduced ;
var 2..36: aux5858:: var_is_introduced ;
var bool: aux5859_BOOL:: var_is_introduced ;
var bool: aux5860_BOOL:: var_is_introduced ;
var bool: aux5861_BOOL:: var_is_introduced ;
var bool: aux5862_BOOL:: var_is_introduced ;
var bool: aux5863_BOOL:: var_is_introduced ;
var {0,1}: aux5863_INTEGER :: var_is_introduced ;
var 2..36: aux5864:: var_is_introduced ;
var bool: aux5865_BOOL:: var_is_introduced ;
var bool: aux5866_BOOL:: var_is_introduced ;
var bool: aux5867_BOOL:: var_is_introduced ;
var bool: aux5868_BOOL:: var_is_introduced ;
var bool: aux5869_BOOL:: var_is_introduced ;
var {0,1}: aux5869_INTEGER :: var_is_introduced ;
var 2..36: aux5870:: var_is_introduced ;
var bool: aux5871_BOOL:: var_is_introduced ;
var bool: aux5872_BOOL:: var_is_introduced ;
var bool: aux5873_BOOL:: var_is_introduced ;
var bool: aux5874_BOOL:: var_is_introduced ;
var bool: aux5875_BOOL:: var_is_introduced ;
var {0,1}: aux5875_INTEGER :: var_is_introduced ;
var 1..35: aux5876:: var_is_introduced ;
var bool: aux5877_BOOL:: var_is_introduced ;
var bool: aux5878_BOOL:: var_is_introduced ;
var bool: aux5879_BOOL:: var_is_introduced ;
var bool: aux5880_BOOL:: var_is_introduced ;
var bool: aux5881_BOOL:: var_is_introduced ;
var {0,1}: aux5881_INTEGER :: var_is_introduced ;
var 2..36: aux5882:: var_is_introduced ;
var bool: aux5883_BOOL:: var_is_introduced ;
var bool: aux5884_BOOL:: var_is_introduced ;
var bool: aux5885_BOOL:: var_is_introduced ;
var bool: aux5886_BOOL:: var_is_introduced ;
var bool: aux5887_BOOL:: var_is_introduced ;
var {0,1}: aux5887_INTEGER :: var_is_introduced ;
var 4..38: aux5888:: var_is_introduced ;
var bool: aux5889_BOOL:: var_is_introduced ;
var bool: aux5890_BOOL:: var_is_introduced ;
var bool: aux5891_BOOL:: var_is_introduced ;
var bool: aux5892_BOOL:: var_is_introduced ;
var bool: aux5893_BOOL:: var_is_introduced ;
var {0,1}: aux5893_INTEGER :: var_is_introduced ;
var 3..37: aux5894:: var_is_introduced ;
var bool: aux5895_BOOL:: var_is_introduced ;
var bool: aux5896_BOOL:: var_is_introduced ;
var bool: aux5897_BOOL:: var_is_introduced ;
var bool: aux5898_BOOL:: var_is_introduced ;
var bool: aux5899_BOOL:: var_is_introduced ;
var {0,1}: aux5899_INTEGER :: var_is_introduced ;
var 3..37: aux5900:: var_is_introduced ;
var bool: aux5901_BOOL:: var_is_introduced ;
var bool: aux5902_BOOL:: var_is_introduced ;
var bool: aux5903_BOOL:: var_is_introduced ;
var bool: aux5904_BOOL:: var_is_introduced ;
var bool: aux5905_BOOL:: var_is_introduced ;
var {0,1}: aux5905_INTEGER :: var_is_introduced ;
var 6..40: aux5906:: var_is_introduced ;
var bool: aux5907_BOOL:: var_is_introduced ;
var bool: aux5908_BOOL:: var_is_introduced ;
var bool: aux5909_BOOL:: var_is_introduced ;
var bool: aux5910_BOOL:: var_is_introduced ;
var bool: aux5911_BOOL:: var_is_introduced ;
var {0,1}: aux5911_INTEGER :: var_is_introduced ;
var 3..37: aux5912:: var_is_introduced ;
var bool: aux5913_BOOL:: var_is_introduced ;
var bool: aux5914_BOOL:: var_is_introduced ;
var bool: aux5915_BOOL:: var_is_introduced ;
var {0,1}: aux5915_INTEGER :: var_is_introduced ;
var bool: aux5916_BOOL:: var_is_introduced ;
var 1..35: aux5917:: var_is_introduced ;
var bool: aux5918_BOOL:: var_is_introduced ;
var bool: aux5919_BOOL:: var_is_introduced ;
var bool: aux5920_BOOL:: var_is_introduced ;
var bool: aux5921_BOOL:: var_is_introduced ;
var bool: aux5922_BOOL:: var_is_introduced ;
var {0,1}: aux5922_INTEGER :: var_is_introduced ;
var 1..35: aux5923:: var_is_introduced ;
var bool: aux5924_BOOL:: var_is_introduced ;
var bool: aux5925_BOOL:: var_is_introduced ;
var bool: aux5926_BOOL:: var_is_introduced ;
var bool: aux5927_BOOL:: var_is_introduced ;
var bool: aux5928_BOOL:: var_is_introduced ;
var {0,1}: aux5928_INTEGER :: var_is_introduced ;
var 2..36: aux5929:: var_is_introduced ;
var bool: aux5930_BOOL:: var_is_introduced ;
var bool: aux5931_BOOL:: var_is_introduced ;
var bool: aux5932_BOOL:: var_is_introduced ;
var bool: aux5933_BOOL:: var_is_introduced ;
var bool: aux5934_BOOL:: var_is_introduced ;
var {0,1}: aux5934_INTEGER :: var_is_introduced ;
var 1..35: aux5935:: var_is_introduced ;
var bool: aux5936_BOOL:: var_is_introduced ;
var bool: aux5937_BOOL:: var_is_introduced ;
var bool: aux5938_BOOL:: var_is_introduced ;
var bool: aux5939_BOOL:: var_is_introduced ;
var bool: aux5940_BOOL:: var_is_introduced ;
var {0,1}: aux5940_INTEGER :: var_is_introduced ;
var 2..36: aux5941:: var_is_introduced ;
var bool: aux5942_BOOL:: var_is_introduced ;
var bool: aux5943_BOOL:: var_is_introduced ;
var bool: aux5944_BOOL:: var_is_introduced ;
var bool: aux5945_BOOL:: var_is_introduced ;
var bool: aux5946_BOOL:: var_is_introduced ;
var {0,1}: aux5946_INTEGER :: var_is_introduced ;
var 2..36: aux5947:: var_is_introduced ;
var bool: aux5948_BOOL:: var_is_introduced ;
var bool: aux5949_BOOL:: var_is_introduced ;
var bool: aux5950_BOOL:: var_is_introduced ;
var bool: aux5951_BOOL:: var_is_introduced ;
var bool: aux5952_BOOL:: var_is_introduced ;
var {0,1}: aux5952_INTEGER :: var_is_introduced ;
var 2..36: aux5953:: var_is_introduced ;
var bool: aux5954_BOOL:: var_is_introduced ;
var bool: aux5955_BOOL:: var_is_introduced ;
var bool: aux5956_BOOL:: var_is_introduced ;
var bool: aux5957_BOOL:: var_is_introduced ;
var bool: aux5958_BOOL:: var_is_introduced ;
var {0,1}: aux5958_INTEGER :: var_is_introduced ;
var 2..36: aux5959:: var_is_introduced ;
var bool: aux5960_BOOL:: var_is_introduced ;
var bool: aux5961_BOOL:: var_is_introduced ;
var bool: aux5962_BOOL:: var_is_introduced ;
var bool: aux5963_BOOL:: var_is_introduced ;
var bool: aux5964_BOOL:: var_is_introduced ;
var {0,1}: aux5964_INTEGER :: var_is_introduced ;
var 3..37: aux5965:: var_is_introduced ;
var bool: aux5966_BOOL:: var_is_introduced ;
var bool: aux5967_BOOL:: var_is_introduced ;
var bool: aux5968_BOOL:: var_is_introduced ;
var bool: aux5969_BOOL:: var_is_introduced ;
var bool: aux5970_BOOL:: var_is_introduced ;
var {0,1}: aux5970_INTEGER :: var_is_introduced ;
var 3..37: aux5971:: var_is_introduced ;
var bool: aux5972_BOOL:: var_is_introduced ;
var bool: aux5973_BOOL:: var_is_introduced ;
var bool: aux5974_BOOL:: var_is_introduced ;
var bool: aux5975_BOOL:: var_is_introduced ;
var bool: aux5976_BOOL:: var_is_introduced ;
var {0,1}: aux5976_INTEGER :: var_is_introduced ;
var 3..37: aux5977:: var_is_introduced ;
var bool: aux5978_BOOL:: var_is_introduced ;
var bool: aux5979_BOOL:: var_is_introduced ;
var bool: aux5980_BOOL:: var_is_introduced ;
var bool: aux5981_BOOL:: var_is_introduced ;
var bool: aux5982_BOOL:: var_is_introduced ;
var {0,1}: aux5982_INTEGER :: var_is_introduced ;
var 4..38: aux5983:: var_is_introduced ;
var bool: aux5984_BOOL:: var_is_introduced ;
var bool: aux5985_BOOL:: var_is_introduced ;
var bool: aux5986_BOOL:: var_is_introduced ;
var bool: aux5987_BOOL:: var_is_introduced ;
var bool: aux5988_BOOL:: var_is_introduced ;
var {0,1}: aux5988_INTEGER :: var_is_introduced ;
var 6..40: aux5989:: var_is_introduced ;
var bool: aux5990_BOOL:: var_is_introduced ;
var bool: aux5991_BOOL:: var_is_introduced ;
var bool: aux5992_BOOL:: var_is_introduced ;
var bool: aux5993_BOOL:: var_is_introduced ;
var bool: aux5994_BOOL:: var_is_introduced ;
var {0,1}: aux5994_INTEGER :: var_is_introduced ;
var 2..36: aux5995:: var_is_introduced ;
var bool: aux5996_BOOL:: var_is_introduced ;
var bool: aux5997_BOOL:: var_is_introduced ;
var bool: aux5998_BOOL:: var_is_introduced ;
var {0,1}: aux5998_INTEGER :: var_is_introduced ;
var bool: aux5999_BOOL:: var_is_introduced ;
var 1..35: aux6000:: var_is_introduced ;
var bool: aux6001_BOOL:: var_is_introduced ;
var bool: aux6002_BOOL:: var_is_introduced ;
var bool: aux6003_BOOL:: var_is_introduced ;
var bool: aux6004_BOOL:: var_is_introduced ;
var bool: aux6005_BOOL:: var_is_introduced ;
var {0,1}: aux6005_INTEGER :: var_is_introduced ;
var 1..35: aux6006:: var_is_introduced ;
var bool: aux6007_BOOL:: var_is_introduced ;
var bool: aux6008_BOOL:: var_is_introduced ;
var bool: aux6009_BOOL:: var_is_introduced ;
var bool: aux6010_BOOL:: var_is_introduced ;
var bool: aux6011_BOOL:: var_is_introduced ;
var {0,1}: aux6011_INTEGER :: var_is_introduced ;
var 2..36: aux6012:: var_is_introduced ;
var bool: aux6013_BOOL:: var_is_introduced ;
var bool: aux6014_BOOL:: var_is_introduced ;
var bool: aux6015_BOOL:: var_is_introduced ;
var bool: aux6016_BOOL:: var_is_introduced ;
var bool: aux6017_BOOL:: var_is_introduced ;
var {0,1}: aux6017_INTEGER :: var_is_introduced ;
var 2..36: aux6018:: var_is_introduced ;
var bool: aux6019_BOOL:: var_is_introduced ;
var bool: aux6020_BOOL:: var_is_introduced ;
var bool: aux6021_BOOL:: var_is_introduced ;
var bool: aux6022_BOOL:: var_is_introduced ;
var bool: aux6023_BOOL:: var_is_introduced ;
var {0,1}: aux6023_INTEGER :: var_is_introduced ;
var 2..36: aux6024:: var_is_introduced ;
var bool: aux6025_BOOL:: var_is_introduced ;
var bool: aux6026_BOOL:: var_is_introduced ;
var bool: aux6027_BOOL:: var_is_introduced ;
var bool: aux6028_BOOL:: var_is_introduced ;
var bool: aux6029_BOOL:: var_is_introduced ;
var {0,1}: aux6029_INTEGER :: var_is_introduced ;
var 2..36: aux6030:: var_is_introduced ;
var bool: aux6031_BOOL:: var_is_introduced ;
var bool: aux6032_BOOL:: var_is_introduced ;
var bool: aux6033_BOOL:: var_is_introduced ;
var bool: aux6034_BOOL:: var_is_introduced ;
var bool: aux6035_BOOL:: var_is_introduced ;
var {0,1}: aux6035_INTEGER :: var_is_introduced ;
var 2..36: aux6036:: var_is_introduced ;
var bool: aux6037_BOOL:: var_is_introduced ;
var bool: aux6038_BOOL:: var_is_introduced ;
var bool: aux6039_BOOL:: var_is_introduced ;
var bool: aux6040_BOOL:: var_is_introduced ;
var bool: aux6041_BOOL:: var_is_introduced ;
var {0,1}: aux6041_INTEGER :: var_is_introduced ;
var 2..36: aux6042:: var_is_introduced ;
var bool: aux6043_BOOL:: var_is_introduced ;
var bool: aux6044_BOOL:: var_is_introduced ;
var bool: aux6045_BOOL:: var_is_introduced ;
var bool: aux6046_BOOL:: var_is_introduced ;
var bool: aux6047_BOOL:: var_is_introduced ;
var {0,1}: aux6047_INTEGER :: var_is_introduced ;
var 4..38: aux6048:: var_is_introduced ;
var bool: aux6049_BOOL:: var_is_introduced ;
var bool: aux6050_BOOL:: var_is_introduced ;
var bool: aux6051_BOOL:: var_is_introduced ;
var bool: aux6052_BOOL:: var_is_introduced ;
var bool: aux6053_BOOL:: var_is_introduced ;
var {0,1}: aux6053_INTEGER :: var_is_introduced ;
var 3..37: aux6054:: var_is_introduced ;
var bool: aux6055_BOOL:: var_is_introduced ;
var bool: aux6056_BOOL:: var_is_introduced ;
var bool: aux6057_BOOL:: var_is_introduced ;
var bool: aux6058_BOOL:: var_is_introduced ;
var bool: aux6059_BOOL:: var_is_introduced ;
var {0,1}: aux6059_INTEGER :: var_is_introduced ;
var 3..37: aux6060:: var_is_introduced ;
var bool: aux6061_BOOL:: var_is_introduced ;
var bool: aux6062_BOOL:: var_is_introduced ;
var bool: aux6063_BOOL:: var_is_introduced ;
var bool: aux6064_BOOL:: var_is_introduced ;
var bool: aux6065_BOOL:: var_is_introduced ;
var {0,1}: aux6065_INTEGER :: var_is_introduced ;
var 3..37: aux6066:: var_is_introduced ;
var bool: aux6067_BOOL:: var_is_introduced ;
var bool: aux6068_BOOL:: var_is_introduced ;
var bool: aux6069_BOOL:: var_is_introduced ;
var bool: aux6070_BOOL:: var_is_introduced ;
var bool: aux6071_BOOL:: var_is_introduced ;
var {0,1}: aux6071_INTEGER :: var_is_introduced ;
var 6..40: aux6072:: var_is_introduced ;
var bool: aux6073_BOOL:: var_is_introduced ;
var bool: aux6074_BOOL:: var_is_introduced ;
var bool: aux6075_BOOL:: var_is_introduced ;
var bool: aux6076_BOOL:: var_is_introduced ;
var bool: aux6077_BOOL:: var_is_introduced ;
var {0,1}: aux6077_INTEGER :: var_is_introduced ;
var 1..35: aux6078:: var_is_introduced ;
var bool: aux6079_BOOL:: var_is_introduced ;
var bool: aux6080_BOOL:: var_is_introduced ;
var bool: aux6081_BOOL:: var_is_introduced ;
var {0,1}: aux6081_INTEGER :: var_is_introduced ;
var bool: aux6082_BOOL:: var_is_introduced ;
var bool: aux6083_BOOL:: var_is_introduced ;
var bool: aux6084_BOOL:: var_is_introduced ;
var bool: aux6085_BOOL:: var_is_introduced ;
var bool: aux6086_BOOL:: var_is_introduced ;
var 2..36: aux6087:: var_is_introduced ;
var bool: aux6088_BOOL:: var_is_introduced ;
var bool: aux6089_BOOL:: var_is_introduced ;
var bool: aux6090_BOOL:: var_is_introduced ;
var {0,1}: aux6090_INTEGER :: var_is_introduced ;
var bool: aux6091_BOOL:: var_is_introduced ;
var bool: aux6092_BOOL:: var_is_introduced ;
var 6..40: aux6093:: var_is_introduced ;
var bool: aux6094_BOOL:: var_is_introduced ;
var bool: aux6095_BOOL:: var_is_introduced ;
var bool: aux6096_BOOL:: var_is_introduced ;
var {0,1}: aux6096_INTEGER :: var_is_introduced ;
var bool: aux6097_BOOL:: var_is_introduced ;
var bool: aux6098_BOOL:: var_is_introduced ;
var 1..35: aux6099:: var_is_introduced ;
var bool: aux6100_BOOL:: var_is_introduced ;
var bool: aux6101_BOOL:: var_is_introduced ;
var bool: aux6102_BOOL:: var_is_introduced ;
var {0,1}: aux6102_INTEGER :: var_is_introduced ;
var bool: aux6103_BOOL:: var_is_introduced ;
var bool: aux6104_BOOL:: var_is_introduced ;
var 2..36: aux6105:: var_is_introduced ;
var bool: aux6106_BOOL:: var_is_introduced ;
var bool: aux6107_BOOL:: var_is_introduced ;
var bool: aux6108_BOOL:: var_is_introduced ;
var {0,1}: aux6108_INTEGER :: var_is_introduced ;
var bool: aux6109_BOOL:: var_is_introduced ;
var bool: aux6110_BOOL:: var_is_introduced ;
var 4..38: aux6111:: var_is_introduced ;
var bool: aux6112_BOOL:: var_is_introduced ;
var bool: aux6113_BOOL:: var_is_introduced ;
var bool: aux6114_BOOL:: var_is_introduced ;
var {0,1}: aux6114_INTEGER :: var_is_introduced ;
var bool: aux6115_BOOL:: var_is_introduced ;
var bool: aux6116_BOOL:: var_is_introduced ;
var 2..36: aux6117:: var_is_introduced ;
var bool: aux6118_BOOL:: var_is_introduced ;
var bool: aux6119_BOOL:: var_is_introduced ;
var bool: aux6120_BOOL:: var_is_introduced ;
var {0,1}: aux6120_INTEGER :: var_is_introduced ;
var bool: aux6121_BOOL:: var_is_introduced ;
var bool: aux6122_BOOL:: var_is_introduced ;
var 2..36: aux6123:: var_is_introduced ;
var bool: aux6124_BOOL:: var_is_introduced ;
var bool: aux6125_BOOL:: var_is_introduced ;
var bool: aux6126_BOOL:: var_is_introduced ;
var {0,1}: aux6126_INTEGER :: var_is_introduced ;
var bool: aux6127_BOOL:: var_is_introduced ;
var bool: aux6128_BOOL:: var_is_introduced ;
var 2..36: aux6129:: var_is_introduced ;
var bool: aux6130_BOOL:: var_is_introduced ;
var bool: aux6131_BOOL:: var_is_introduced ;
var bool: aux6132_BOOL:: var_is_introduced ;
var {0,1}: aux6132_INTEGER :: var_is_introduced ;
var bool: aux6133_BOOL:: var_is_introduced ;
var bool: aux6134_BOOL:: var_is_introduced ;
var 1..35: aux6135:: var_is_introduced ;
var bool: aux6136_BOOL:: var_is_introduced ;
var bool: aux6137_BOOL:: var_is_introduced ;
var bool: aux6138_BOOL:: var_is_introduced ;
var {0,1}: aux6138_INTEGER :: var_is_introduced ;
var bool: aux6139_BOOL:: var_is_introduced ;
var bool: aux6140_BOOL:: var_is_introduced ;
var 2..36: aux6141:: var_is_introduced ;
var bool: aux6142_BOOL:: var_is_introduced ;
var bool: aux6143_BOOL:: var_is_introduced ;
var bool: aux6144_BOOL:: var_is_introduced ;
var {0,1}: aux6144_INTEGER :: var_is_introduced ;
var bool: aux6145_BOOL:: var_is_introduced ;
var bool: aux6146_BOOL:: var_is_introduced ;
var 3..37: aux6147:: var_is_introduced ;
var bool: aux6148_BOOL:: var_is_introduced ;
var bool: aux6149_BOOL:: var_is_introduced ;
var bool: aux6150_BOOL:: var_is_introduced ;
var {0,1}: aux6150_INTEGER :: var_is_introduced ;
var bool: aux6151_BOOL:: var_is_introduced ;
var bool: aux6152_BOOL:: var_is_introduced ;
var 3..37: aux6153:: var_is_introduced ;
var bool: aux6154_BOOL:: var_is_introduced ;
var bool: aux6155_BOOL:: var_is_introduced ;
var bool: aux6156_BOOL:: var_is_introduced ;
var {0,1}: aux6156_INTEGER :: var_is_introduced ;
var bool: aux6157_BOOL:: var_is_introduced ;
var bool: aux6158_BOOL:: var_is_introduced ;
var 3..37: aux6159:: var_is_introduced ;
var bool: aux6160_BOOL:: var_is_introduced ;
var bool: aux6161_BOOL:: var_is_introduced ;
var bool: aux6162_BOOL:: var_is_introduced ;
var {0,1}: aux6162_INTEGER :: var_is_introduced ;
var bool: aux6163_BOOL:: var_is_introduced ;
var 1..35: aux6164:: var_is_introduced ;
var bool: aux6165_BOOL:: var_is_introduced ;
var bool: aux6166_BOOL:: var_is_introduced ;
var {0,1}: aux6166_INTEGER :: var_is_introduced ;
var bool: aux6167_BOOL:: var_is_introduced ;
var bool: aux6168_BOOL:: var_is_introduced ;
var bool: aux6169_BOOL:: var_is_introduced ;
var 2..36: aux6170:: var_is_introduced ;
var bool: aux6171_BOOL:: var_is_introduced ;
var bool: aux6172_BOOL:: var_is_introduced ;
var bool: aux6173_BOOL:: var_is_introduced ;
var {0,1}: aux6173_INTEGER :: var_is_introduced ;
var bool: aux6174_BOOL:: var_is_introduced ;
var bool: aux6175_BOOL:: var_is_introduced ;
var 6..40: aux6176:: var_is_introduced ;
var bool: aux6177_BOOL:: var_is_introduced ;
var bool: aux6178_BOOL:: var_is_introduced ;
var bool: aux6179_BOOL:: var_is_introduced ;
var {0,1}: aux6179_INTEGER :: var_is_introduced ;
var bool: aux6180_BOOL:: var_is_introduced ;
var bool: aux6181_BOOL:: var_is_introduced ;
var 1..35: aux6182:: var_is_introduced ;
var bool: aux6183_BOOL:: var_is_introduced ;
var bool: aux6184_BOOL:: var_is_introduced ;
var bool: aux6185_BOOL:: var_is_introduced ;
var {0,1}: aux6185_INTEGER :: var_is_introduced ;
var bool: aux6186_BOOL:: var_is_introduced ;
var bool: aux6187_BOOL:: var_is_introduced ;
var 2..36: aux6188:: var_is_introduced ;
var bool: aux6189_BOOL:: var_is_introduced ;
var bool: aux6190_BOOL:: var_is_introduced ;
var bool: aux6191_BOOL:: var_is_introduced ;
var {0,1}: aux6191_INTEGER :: var_is_introduced ;
var bool: aux6192_BOOL:: var_is_introduced ;
var bool: aux6193_BOOL:: var_is_introduced ;
var 1..35: aux6194:: var_is_introduced ;
var bool: aux6195_BOOL:: var_is_introduced ;
var bool: aux6196_BOOL:: var_is_introduced ;
var bool: aux6197_BOOL:: var_is_introduced ;
var {0,1}: aux6197_INTEGER :: var_is_introduced ;
var bool: aux6198_BOOL:: var_is_introduced ;
var bool: aux6199_BOOL:: var_is_introduced ;
var 4..38: aux6200:: var_is_introduced ;
var bool: aux6201_BOOL:: var_is_introduced ;
var bool: aux6202_BOOL:: var_is_introduced ;
var bool: aux6203_BOOL:: var_is_introduced ;
var {0,1}: aux6203_INTEGER :: var_is_introduced ;
var bool: aux6204_BOOL:: var_is_introduced ;
var bool: aux6205_BOOL:: var_is_introduced ;
var 2..36: aux6206:: var_is_introduced ;
var bool: aux6207_BOOL:: var_is_introduced ;
var bool: aux6208_BOOL:: var_is_introduced ;
var bool: aux6209_BOOL:: var_is_introduced ;
var {0,1}: aux6209_INTEGER :: var_is_introduced ;
var bool: aux6210_BOOL:: var_is_introduced ;
var bool: aux6211_BOOL:: var_is_introduced ;
var 2..36: aux6212:: var_is_introduced ;
var bool: aux6213_BOOL:: var_is_introduced ;
var bool: aux6214_BOOL:: var_is_introduced ;
var bool: aux6215_BOOL:: var_is_introduced ;
var {0,1}: aux6215_INTEGER :: var_is_introduced ;
var bool: aux6216_BOOL:: var_is_introduced ;
var bool: aux6217_BOOL:: var_is_introduced ;
var 1..35: aux6218:: var_is_introduced ;
var bool: aux6219_BOOL:: var_is_introduced ;
var bool: aux6220_BOOL:: var_is_introduced ;
var bool: aux6221_BOOL:: var_is_introduced ;
var {0,1}: aux6221_INTEGER :: var_is_introduced ;
var bool: aux6222_BOOL:: var_is_introduced ;
var bool: aux6223_BOOL:: var_is_introduced ;
var 2..36: aux6224:: var_is_introduced ;
var bool: aux6225_BOOL:: var_is_introduced ;
var bool: aux6226_BOOL:: var_is_introduced ;
var bool: aux6227_BOOL:: var_is_introduced ;
var {0,1}: aux6227_INTEGER :: var_is_introduced ;
var bool: aux6228_BOOL:: var_is_introduced ;
var bool: aux6229_BOOL:: var_is_introduced ;
var 3..37: aux6230:: var_is_introduced ;
var bool: aux6231_BOOL:: var_is_introduced ;
var bool: aux6232_BOOL:: var_is_introduced ;
var bool: aux6233_BOOL:: var_is_introduced ;
var {0,1}: aux6233_INTEGER :: var_is_introduced ;
var bool: aux6234_BOOL:: var_is_introduced ;
var bool: aux6235_BOOL:: var_is_introduced ;
var 3..37: aux6236:: var_is_introduced ;
var bool: aux6237_BOOL:: var_is_introduced ;
var bool: aux6238_BOOL:: var_is_introduced ;
var bool: aux6239_BOOL:: var_is_introduced ;
var {0,1}: aux6239_INTEGER :: var_is_introduced ;
var bool: aux6240_BOOL:: var_is_introduced ;
var bool: aux6241_BOOL:: var_is_introduced ;
var 3..37: aux6242:: var_is_introduced ;
var bool: aux6243_BOOL:: var_is_introduced ;
var bool: aux6244_BOOL:: var_is_introduced ;
var bool: aux6245_BOOL:: var_is_introduced ;
var {0,1}: aux6245_INTEGER :: var_is_introduced ;
var bool: aux6246_BOOL:: var_is_introduced ;
var 2..36: aux6247:: var_is_introduced ;
var bool: aux6248_BOOL:: var_is_introduced ;
var bool: aux6249_BOOL:: var_is_introduced ;
var {0,1}: aux6249_INTEGER :: var_is_introduced ;
var bool: aux6250_BOOL:: var_is_introduced ;
var bool: aux6251_BOOL:: var_is_introduced ;
var bool: aux6252_BOOL:: var_is_introduced ;
var 2..36: aux6253:: var_is_introduced ;
var bool: aux6254_BOOL:: var_is_introduced ;
var bool: aux6255_BOOL:: var_is_introduced ;
var bool: aux6256_BOOL:: var_is_introduced ;
var {0,1}: aux6256_INTEGER :: var_is_introduced ;
var bool: aux6257_BOOL:: var_is_introduced ;
var bool: aux6258_BOOL:: var_is_introduced ;
var 6..40: aux6259:: var_is_introduced ;
var bool: aux6260_BOOL:: var_is_introduced ;
var bool: aux6261_BOOL:: var_is_introduced ;
var bool: aux6262_BOOL:: var_is_introduced ;
var {0,1}: aux6262_INTEGER :: var_is_introduced ;
var bool: aux6263_BOOL:: var_is_introduced ;
var bool: aux6264_BOOL:: var_is_introduced ;
var 1..35: aux6265:: var_is_introduced ;
var bool: aux6266_BOOL:: var_is_introduced ;
var bool: aux6267_BOOL:: var_is_introduced ;
var bool: aux6268_BOOL:: var_is_introduced ;
var {0,1}: aux6268_INTEGER :: var_is_introduced ;
var bool: aux6269_BOOL:: var_is_introduced ;
var bool: aux6270_BOOL:: var_is_introduced ;
var 2..36: aux6271:: var_is_introduced ;
var bool: aux6272_BOOL:: var_is_introduced ;
var bool: aux6273_BOOL:: var_is_introduced ;
var bool: aux6274_BOOL:: var_is_introduced ;
var {0,1}: aux6274_INTEGER :: var_is_introduced ;
var bool: aux6275_BOOL:: var_is_introduced ;
var bool: aux6276_BOOL:: var_is_introduced ;
var 1..35: aux6277:: var_is_introduced ;
var bool: aux6278_BOOL:: var_is_introduced ;
var bool: aux6279_BOOL:: var_is_introduced ;
var bool: aux6280_BOOL:: var_is_introduced ;
var {0,1}: aux6280_INTEGER :: var_is_introduced ;
var bool: aux6281_BOOL:: var_is_introduced ;
var bool: aux6282_BOOL:: var_is_introduced ;
var 4..38: aux6283:: var_is_introduced ;
var bool: aux6284_BOOL:: var_is_introduced ;
var bool: aux6285_BOOL:: var_is_introduced ;
var bool: aux6286_BOOL:: var_is_introduced ;
var {0,1}: aux6286_INTEGER :: var_is_introduced ;
var bool: aux6287_BOOL:: var_is_introduced ;
var bool: aux6288_BOOL:: var_is_introduced ;
var 2..36: aux6289:: var_is_introduced ;
var bool: aux6290_BOOL:: var_is_introduced ;
var bool: aux6291_BOOL:: var_is_introduced ;
var bool: aux6292_BOOL:: var_is_introduced ;
var {0,1}: aux6292_INTEGER :: var_is_introduced ;
var bool: aux6293_BOOL:: var_is_introduced ;
var bool: aux6294_BOOL:: var_is_introduced ;
var 2..36: aux6295:: var_is_introduced ;
var bool: aux6296_BOOL:: var_is_introduced ;
var bool: aux6297_BOOL:: var_is_introduced ;
var bool: aux6298_BOOL:: var_is_introduced ;
var {0,1}: aux6298_INTEGER :: var_is_introduced ;
var bool: aux6299_BOOL:: var_is_introduced ;
var bool: aux6300_BOOL:: var_is_introduced ;
var 2..36: aux6301:: var_is_introduced ;
var bool: aux6302_BOOL:: var_is_introduced ;
var bool: aux6303_BOOL:: var_is_introduced ;
var bool: aux6304_BOOL:: var_is_introduced ;
var {0,1}: aux6304_INTEGER :: var_is_introduced ;
var bool: aux6305_BOOL:: var_is_introduced ;
var bool: aux6306_BOOL:: var_is_introduced ;
var 1..35: aux6307:: var_is_introduced ;
var bool: aux6308_BOOL:: var_is_introduced ;
var bool: aux6309_BOOL:: var_is_introduced ;
var bool: aux6310_BOOL:: var_is_introduced ;
var {0,1}: aux6310_INTEGER :: var_is_introduced ;
var bool: aux6311_BOOL:: var_is_introduced ;
var bool: aux6312_BOOL:: var_is_introduced ;
var 2..36: aux6313:: var_is_introduced ;
var bool: aux6314_BOOL:: var_is_introduced ;
var bool: aux6315_BOOL:: var_is_introduced ;
var bool: aux6316_BOOL:: var_is_introduced ;
var {0,1}: aux6316_INTEGER :: var_is_introduced ;
var bool: aux6317_BOOL:: var_is_introduced ;
var bool: aux6318_BOOL:: var_is_introduced ;
var 3..37: aux6319:: var_is_introduced ;
var bool: aux6320_BOOL:: var_is_introduced ;
var bool: aux6321_BOOL:: var_is_introduced ;
var bool: aux6322_BOOL:: var_is_introduced ;
var {0,1}: aux6322_INTEGER :: var_is_introduced ;
var bool: aux6323_BOOL:: var_is_introduced ;
var bool: aux6324_BOOL:: var_is_introduced ;
var 3..37: aux6325:: var_is_introduced ;
var bool: aux6326_BOOL:: var_is_introduced ;
var bool: aux6327_BOOL:: var_is_introduced ;
var bool: aux6328_BOOL:: var_is_introduced ;
var {0,1}: aux6328_INTEGER :: var_is_introduced ;
var bool: aux6329_BOOL:: var_is_introduced ;
var 3..37: aux6330:: var_is_introduced ;
var bool: aux6331_BOOL:: var_is_introduced ;
var bool: aux6332_BOOL:: var_is_introduced ;
var {0,1}: aux6332_INTEGER :: var_is_introduced ;
var bool: aux6333_BOOL:: var_is_introduced ;
var bool: aux6334_BOOL:: var_is_introduced ;
var bool: aux6335_BOOL:: var_is_introduced ;
var 2..36: aux6336:: var_is_introduced ;
var bool: aux6337_BOOL:: var_is_introduced ;
var bool: aux6338_BOOL:: var_is_introduced ;
var bool: aux6339_BOOL:: var_is_introduced ;
var {0,1}: aux6339_INTEGER :: var_is_introduced ;
var bool: aux6340_BOOL:: var_is_introduced ;
var bool: aux6341_BOOL:: var_is_introduced ;
var 6..40: aux6342:: var_is_introduced ;
var bool: aux6343_BOOL:: var_is_introduced ;
var bool: aux6344_BOOL:: var_is_introduced ;
var bool: aux6345_BOOL:: var_is_introduced ;
var {0,1}: aux6345_INTEGER :: var_is_introduced ;
var bool: aux6346_BOOL:: var_is_introduced ;
var bool: aux6347_BOOL:: var_is_introduced ;
var 1..35: aux6348:: var_is_introduced ;
var bool: aux6349_BOOL:: var_is_introduced ;
var bool: aux6350_BOOL:: var_is_introduced ;
var bool: aux6351_BOOL:: var_is_introduced ;
var {0,1}: aux6351_INTEGER :: var_is_introduced ;
var bool: aux6352_BOOL:: var_is_introduced ;
var bool: aux6353_BOOL:: var_is_introduced ;
var 2..36: aux6354:: var_is_introduced ;
var bool: aux6355_BOOL:: var_is_introduced ;
var bool: aux6356_BOOL:: var_is_introduced ;
var bool: aux6357_BOOL:: var_is_introduced ;
var {0,1}: aux6357_INTEGER :: var_is_introduced ;
var bool: aux6358_BOOL:: var_is_introduced ;
var bool: aux6359_BOOL:: var_is_introduced ;
var 1..35: aux6360:: var_is_introduced ;
var bool: aux6361_BOOL:: var_is_introduced ;
var bool: aux6362_BOOL:: var_is_introduced ;
var bool: aux6363_BOOL:: var_is_introduced ;
var {0,1}: aux6363_INTEGER :: var_is_introduced ;
var bool: aux6364_BOOL:: var_is_introduced ;
var bool: aux6365_BOOL:: var_is_introduced ;
var 4..38: aux6366:: var_is_introduced ;
var bool: aux6367_BOOL:: var_is_introduced ;
var bool: aux6368_BOOL:: var_is_introduced ;
var bool: aux6369_BOOL:: var_is_introduced ;
var {0,1}: aux6369_INTEGER :: var_is_introduced ;
var bool: aux6370_BOOL:: var_is_introduced ;
var bool: aux6371_BOOL:: var_is_introduced ;
var 2..36: aux6372:: var_is_introduced ;
var bool: aux6373_BOOL:: var_is_introduced ;
var bool: aux6374_BOOL:: var_is_introduced ;
var bool: aux6375_BOOL:: var_is_introduced ;
var {0,1}: aux6375_INTEGER :: var_is_introduced ;
var bool: aux6376_BOOL:: var_is_introduced ;
var bool: aux6377_BOOL:: var_is_introduced ;
var 2..36: aux6378:: var_is_introduced ;
var bool: aux6379_BOOL:: var_is_introduced ;
var bool: aux6380_BOOL:: var_is_introduced ;
var bool: aux6381_BOOL:: var_is_introduced ;
var {0,1}: aux6381_INTEGER :: var_is_introduced ;
var bool: aux6382_BOOL:: var_is_introduced ;
var bool: aux6383_BOOL:: var_is_introduced ;
var 2..36: aux6384:: var_is_introduced ;
var bool: aux6385_BOOL:: var_is_introduced ;
var bool: aux6386_BOOL:: var_is_introduced ;
var bool: aux6387_BOOL:: var_is_introduced ;
var {0,1}: aux6387_INTEGER :: var_is_introduced ;
var bool: aux6388_BOOL:: var_is_introduced ;
var bool: aux6389_BOOL:: var_is_introduced ;
var 2..36: aux6390:: var_is_introduced ;
var bool: aux6391_BOOL:: var_is_introduced ;
var bool: aux6392_BOOL:: var_is_introduced ;
var bool: aux6393_BOOL:: var_is_introduced ;
var {0,1}: aux6393_INTEGER :: var_is_introduced ;
var bool: aux6394_BOOL:: var_is_introduced ;
var bool: aux6395_BOOL:: var_is_introduced ;
var 3..37: aux6396:: var_is_introduced ;
var bool: aux6397_BOOL:: var_is_introduced ;
var bool: aux6398_BOOL:: var_is_introduced ;
var bool: aux6399_BOOL:: var_is_introduced ;
var {0,1}: aux6399_INTEGER :: var_is_introduced ;
var bool: aux6400_BOOL:: var_is_introduced ;
var bool: aux6401_BOOL:: var_is_introduced ;
var 3..37: aux6402:: var_is_introduced ;
var bool: aux6403_BOOL:: var_is_introduced ;
var bool: aux6404_BOOL:: var_is_introduced ;
var bool: aux6405_BOOL:: var_is_introduced ;
var {0,1}: aux6405_INTEGER :: var_is_introduced ;
var bool: aux6406_BOOL:: var_is_introduced ;
var bool: aux6407_BOOL:: var_is_introduced ;
var 3..37: aux6408:: var_is_introduced ;
var bool: aux6409_BOOL:: var_is_introduced ;
var bool: aux6410_BOOL:: var_is_introduced ;
var bool: aux6411_BOOL:: var_is_introduced ;
var {0,1}: aux6411_INTEGER :: var_is_introduced ;
var bool: aux6412_BOOL:: var_is_introduced ;
var 1..35: aux6413:: var_is_introduced ;
var bool: aux6414_BOOL:: var_is_introduced ;
var bool: aux6415_BOOL:: var_is_introduced ;
var {0,1}: aux6415_INTEGER :: var_is_introduced ;
var bool: aux6416_BOOL:: var_is_introduced ;
var bool: aux6417_BOOL:: var_is_introduced ;
var bool: aux6418_BOOL:: var_is_introduced ;
var 6..40: aux6419:: var_is_introduced ;
var bool: aux6420_BOOL:: var_is_introduced ;
var bool: aux6421_BOOL:: var_is_introduced ;
var bool: aux6422_BOOL:: var_is_introduced ;
var {0,1}: aux6422_INTEGER :: var_is_introduced ;
var bool: aux6423_BOOL:: var_is_introduced ;
var bool: aux6424_BOOL:: var_is_introduced ;
var 1..35: aux6425:: var_is_introduced ;
var bool: aux6426_BOOL:: var_is_introduced ;
var bool: aux6427_BOOL:: var_is_introduced ;
var bool: aux6428_BOOL:: var_is_introduced ;
var {0,1}: aux6428_INTEGER :: var_is_introduced ;
var bool: aux6429_BOOL:: var_is_introduced ;
var bool: aux6430_BOOL:: var_is_introduced ;
var 2..36: aux6431:: var_is_introduced ;
var bool: aux6432_BOOL:: var_is_introduced ;
var bool: aux6433_BOOL:: var_is_introduced ;
var bool: aux6434_BOOL:: var_is_introduced ;
var {0,1}: aux6434_INTEGER :: var_is_introduced ;
var bool: aux6435_BOOL:: var_is_introduced ;
var bool: aux6436_BOOL:: var_is_introduced ;
var 1..35: aux6437:: var_is_introduced ;
var bool: aux6438_BOOL:: var_is_introduced ;
var bool: aux6439_BOOL:: var_is_introduced ;
var bool: aux6440_BOOL:: var_is_introduced ;
var {0,1}: aux6440_INTEGER :: var_is_introduced ;
var bool: aux6441_BOOL:: var_is_introduced ;
var bool: aux6442_BOOL:: var_is_introduced ;
var 4..38: aux6443:: var_is_introduced ;
var bool: aux6444_BOOL:: var_is_introduced ;
var bool: aux6445_BOOL:: var_is_introduced ;
var bool: aux6446_BOOL:: var_is_introduced ;
var {0,1}: aux6446_INTEGER :: var_is_introduced ;
var bool: aux6447_BOOL:: var_is_introduced ;
var bool: aux6448_BOOL:: var_is_introduced ;
var 2..36: aux6449:: var_is_introduced ;
var bool: aux6450_BOOL:: var_is_introduced ;
var bool: aux6451_BOOL:: var_is_introduced ;
var bool: aux6452_BOOL:: var_is_introduced ;
var {0,1}: aux6452_INTEGER :: var_is_introduced ;
var bool: aux6453_BOOL:: var_is_introduced ;
var bool: aux6454_BOOL:: var_is_introduced ;
var 2..36: aux6455:: var_is_introduced ;
var bool: aux6456_BOOL:: var_is_introduced ;
var bool: aux6457_BOOL:: var_is_introduced ;
var bool: aux6458_BOOL:: var_is_introduced ;
var {0,1}: aux6458_INTEGER :: var_is_introduced ;
var bool: aux6459_BOOL:: var_is_introduced ;
var bool: aux6460_BOOL:: var_is_introduced ;
var 2..36: aux6461:: var_is_introduced ;
var bool: aux6462_BOOL:: var_is_introduced ;
var bool: aux6463_BOOL:: var_is_introduced ;
var bool: aux6464_BOOL:: var_is_introduced ;
var {0,1}: aux6464_INTEGER :: var_is_introduced ;
var bool: aux6465_BOOL:: var_is_introduced ;
var bool: aux6466_BOOL:: var_is_introduced ;
var 1..35: aux6467:: var_is_introduced ;
var bool: aux6468_BOOL:: var_is_introduced ;
var bool: aux6469_BOOL:: var_is_introduced ;
var bool: aux6470_BOOL:: var_is_introduced ;
var {0,1}: aux6470_INTEGER :: var_is_introduced ;
var bool: aux6471_BOOL:: var_is_introduced ;
var bool: aux6472_BOOL:: var_is_introduced ;
var 2..36: aux6473:: var_is_introduced ;
var bool: aux6474_BOOL:: var_is_introduced ;
var bool: aux6475_BOOL:: var_is_introduced ;
var bool: aux6476_BOOL:: var_is_introduced ;
var {0,1}: aux6476_INTEGER :: var_is_introduced ;
var bool: aux6477_BOOL:: var_is_introduced ;
var bool: aux6478_BOOL:: var_is_introduced ;
var 3..37: aux6479:: var_is_introduced ;
var bool: aux6480_BOOL:: var_is_introduced ;
var bool: aux6481_BOOL:: var_is_introduced ;
var bool: aux6482_BOOL:: var_is_introduced ;
var {0,1}: aux6482_INTEGER :: var_is_introduced ;
var bool: aux6483_BOOL:: var_is_introduced ;
var bool: aux6484_BOOL:: var_is_introduced ;
var 3..37: aux6485:: var_is_introduced ;
var bool: aux6486_BOOL:: var_is_introduced ;
var bool: aux6487_BOOL:: var_is_introduced ;
var bool: aux6488_BOOL:: var_is_introduced ;
var {0,1}: aux6488_INTEGER :: var_is_introduced ;
var bool: aux6489_BOOL:: var_is_introduced ;
var bool: aux6490_BOOL:: var_is_introduced ;
var 3..37: aux6491:: var_is_introduced ;
var bool: aux6492_BOOL:: var_is_introduced ;
var bool: aux6493_BOOL:: var_is_introduced ;
var bool: aux6494_BOOL:: var_is_introduced ;
var {0,1}: aux6494_INTEGER :: var_is_introduced ;
var bool: aux6495_BOOL:: var_is_introduced ;
var 2..36: aux6496:: var_is_introduced ;
var bool: aux6497_BOOL:: var_is_introduced ;
var bool: aux6498_BOOL:: var_is_introduced ;
var {0,1}: aux6498_INTEGER :: var_is_introduced ;
var bool: aux6499_BOOL:: var_is_introduced ;
var bool: aux6500_BOOL:: var_is_introduced ;
var bool: aux6501_BOOL:: var_is_introduced ;
var 2..36: aux6502:: var_is_introduced ;
var bool: aux6503_BOOL:: var_is_introduced ;
var bool: aux6504_BOOL:: var_is_introduced ;
var bool: aux6505_BOOL:: var_is_introduced ;
var {0,1}: aux6505_INTEGER :: var_is_introduced ;
var bool: aux6506_BOOL:: var_is_introduced ;
var bool: aux6507_BOOL:: var_is_introduced ;
var 6..40: aux6508:: var_is_introduced ;
var bool: aux6509_BOOL:: var_is_introduced ;
var bool: aux6510_BOOL:: var_is_introduced ;
var bool: aux6511_BOOL:: var_is_introduced ;
var {0,1}: aux6511_INTEGER :: var_is_introduced ;
var bool: aux6512_BOOL:: var_is_introduced ;
var bool: aux6513_BOOL:: var_is_introduced ;
var 1..35: aux6514:: var_is_introduced ;
var bool: aux6515_BOOL:: var_is_introduced ;
var bool: aux6516_BOOL:: var_is_introduced ;
var bool: aux6517_BOOL:: var_is_introduced ;
var {0,1}: aux6517_INTEGER :: var_is_introduced ;
var bool: aux6518_BOOL:: var_is_introduced ;
var bool: aux6519_BOOL:: var_is_introduced ;
var 2..36: aux6520:: var_is_introduced ;
var bool: aux6521_BOOL:: var_is_introduced ;
var bool: aux6522_BOOL:: var_is_introduced ;
var bool: aux6523_BOOL:: var_is_introduced ;
var {0,1}: aux6523_INTEGER :: var_is_introduced ;
var bool: aux6524_BOOL:: var_is_introduced ;
var bool: aux6525_BOOL:: var_is_introduced ;
var 1..35: aux6526:: var_is_introduced ;
var bool: aux6527_BOOL:: var_is_introduced ;
var bool: aux6528_BOOL:: var_is_introduced ;
var bool: aux6529_BOOL:: var_is_introduced ;
var {0,1}: aux6529_INTEGER :: var_is_introduced ;
var bool: aux6530_BOOL:: var_is_introduced ;
var bool: aux6531_BOOL:: var_is_introduced ;
var 4..38: aux6532:: var_is_introduced ;
var bool: aux6533_BOOL:: var_is_introduced ;
var bool: aux6534_BOOL:: var_is_introduced ;
var bool: aux6535_BOOL:: var_is_introduced ;
var {0,1}: aux6535_INTEGER :: var_is_introduced ;
var bool: aux6536_BOOL:: var_is_introduced ;
var bool: aux6537_BOOL:: var_is_introduced ;
var 2..36: aux6538:: var_is_introduced ;
var bool: aux6539_BOOL:: var_is_introduced ;
var bool: aux6540_BOOL:: var_is_introduced ;
var bool: aux6541_BOOL:: var_is_introduced ;
var {0,1}: aux6541_INTEGER :: var_is_introduced ;
var bool: aux6542_BOOL:: var_is_introduced ;
var bool: aux6543_BOOL:: var_is_introduced ;
var 2..36: aux6544:: var_is_introduced ;
var bool: aux6545_BOOL:: var_is_introduced ;
var bool: aux6546_BOOL:: var_is_introduced ;
var bool: aux6547_BOOL:: var_is_introduced ;
var {0,1}: aux6547_INTEGER :: var_is_introduced ;
var bool: aux6548_BOOL:: var_is_introduced ;
var bool: aux6549_BOOL:: var_is_introduced ;
var 1..35: aux6550:: var_is_introduced ;
var bool: aux6551_BOOL:: var_is_introduced ;
var bool: aux6552_BOOL:: var_is_introduced ;
var bool: aux6553_BOOL:: var_is_introduced ;
var {0,1}: aux6553_INTEGER :: var_is_introduced ;
var bool: aux6554_BOOL:: var_is_introduced ;
var bool: aux6555_BOOL:: var_is_introduced ;
var 2..36: aux6556:: var_is_introduced ;
var bool: aux6557_BOOL:: var_is_introduced ;
var bool: aux6558_BOOL:: var_is_introduced ;
var bool: aux6559_BOOL:: var_is_introduced ;
var {0,1}: aux6559_INTEGER :: var_is_introduced ;
var bool: aux6560_BOOL:: var_is_introduced ;
var bool: aux6561_BOOL:: var_is_introduced ;
var 3..37: aux6562:: var_is_introduced ;
var bool: aux6563_BOOL:: var_is_introduced ;
var bool: aux6564_BOOL:: var_is_introduced ;
var bool: aux6565_BOOL:: var_is_introduced ;
var {0,1}: aux6565_INTEGER :: var_is_introduced ;
var bool: aux6566_BOOL:: var_is_introduced ;
var bool: aux6567_BOOL:: var_is_introduced ;
var 3..37: aux6568:: var_is_introduced ;
var bool: aux6569_BOOL:: var_is_introduced ;
var bool: aux6570_BOOL:: var_is_introduced ;
var bool: aux6571_BOOL:: var_is_introduced ;
var {0,1}: aux6571_INTEGER :: var_is_introduced ;
var bool: aux6572_BOOL:: var_is_introduced ;
var bool: aux6573_BOOL:: var_is_introduced ;
var 3..37: aux6574:: var_is_introduced ;
var bool: aux6575_BOOL:: var_is_introduced ;
var bool: aux6576_BOOL:: var_is_introduced ;
var bool: aux6577_BOOL:: var_is_introduced ;
var {0,1}: aux6577_INTEGER :: var_is_introduced ;
var bool: aux6578_BOOL:: var_is_introduced ;
var 2..36: aux6579:: var_is_introduced ;
var bool: aux6580_BOOL:: var_is_introduced ;
var bool: aux6581_BOOL:: var_is_introduced ;
var {0,1}: aux6581_INTEGER :: var_is_introduced ;
var bool: aux6582_BOOL:: var_is_introduced ;
var bool: aux6583_BOOL:: var_is_introduced ;
var bool: aux6584_BOOL:: var_is_introduced ;
var 2..36: aux6585:: var_is_introduced ;
var bool: aux6586_BOOL:: var_is_introduced ;
var bool: aux6587_BOOL:: var_is_introduced ;
var bool: aux6588_BOOL:: var_is_introduced ;
var {0,1}: aux6588_INTEGER :: var_is_introduced ;
var bool: aux6589_BOOL:: var_is_introduced ;
var bool: aux6590_BOOL:: var_is_introduced ;
var 6..40: aux6591:: var_is_introduced ;
var bool: aux6592_BOOL:: var_is_introduced ;
var bool: aux6593_BOOL:: var_is_introduced ;
var bool: aux6594_BOOL:: var_is_introduced ;
var {0,1}: aux6594_INTEGER :: var_is_introduced ;
var bool: aux6595_BOOL:: var_is_introduced ;
var bool: aux6596_BOOL:: var_is_introduced ;
var 1..35: aux6597:: var_is_introduced ;
var bool: aux6598_BOOL:: var_is_introduced ;
var bool: aux6599_BOOL:: var_is_introduced ;
var bool: aux6600_BOOL:: var_is_introduced ;
var {0,1}: aux6600_INTEGER :: var_is_introduced ;
var bool: aux6601_BOOL:: var_is_introduced ;
var bool: aux6602_BOOL:: var_is_introduced ;
var 2..36: aux6603:: var_is_introduced ;
var bool: aux6604_BOOL:: var_is_introduced ;
var bool: aux6605_BOOL:: var_is_introduced ;
var bool: aux6606_BOOL:: var_is_introduced ;
var {0,1}: aux6606_INTEGER :: var_is_introduced ;
var bool: aux6607_BOOL:: var_is_introduced ;
var bool: aux6608_BOOL:: var_is_introduced ;
var 1..35: aux6609:: var_is_introduced ;
var bool: aux6610_BOOL:: var_is_introduced ;
var bool: aux6611_BOOL:: var_is_introduced ;
var bool: aux6612_BOOL:: var_is_introduced ;
var {0,1}: aux6612_INTEGER :: var_is_introduced ;
var bool: aux6613_BOOL:: var_is_introduced ;
var bool: aux6614_BOOL:: var_is_introduced ;
var 4..38: aux6615:: var_is_introduced ;
var bool: aux6616_BOOL:: var_is_introduced ;
var bool: aux6617_BOOL:: var_is_introduced ;
var bool: aux6618_BOOL:: var_is_introduced ;
var {0,1}: aux6618_INTEGER :: var_is_introduced ;
var bool: aux6619_BOOL:: var_is_introduced ;
var bool: aux6620_BOOL:: var_is_introduced ;
var 2..36: aux6621:: var_is_introduced ;
var bool: aux6622_BOOL:: var_is_introduced ;
var bool: aux6623_BOOL:: var_is_introduced ;
var bool: aux6624_BOOL:: var_is_introduced ;
var {0,1}: aux6624_INTEGER :: var_is_introduced ;
var bool: aux6625_BOOL:: var_is_introduced ;
var bool: aux6626_BOOL:: var_is_introduced ;
var 2..36: aux6627:: var_is_introduced ;
var bool: aux6628_BOOL:: var_is_introduced ;
var bool: aux6629_BOOL:: var_is_introduced ;
var bool: aux6630_BOOL:: var_is_introduced ;
var {0,1}: aux6630_INTEGER :: var_is_introduced ;
var bool: aux6631_BOOL:: var_is_introduced ;
var bool: aux6632_BOOL:: var_is_introduced ;
var 1..35: aux6633:: var_is_introduced ;
var bool: aux6634_BOOL:: var_is_introduced ;
var bool: aux6635_BOOL:: var_is_introduced ;
var bool: aux6636_BOOL:: var_is_introduced ;
var {0,1}: aux6636_INTEGER :: var_is_introduced ;
var bool: aux6637_BOOL:: var_is_introduced ;
var bool: aux6638_BOOL:: var_is_introduced ;
var 2..36: aux6639:: var_is_introduced ;
var bool: aux6640_BOOL:: var_is_introduced ;
var bool: aux6641_BOOL:: var_is_introduced ;
var bool: aux6642_BOOL:: var_is_introduced ;
var {0,1}: aux6642_INTEGER :: var_is_introduced ;
var bool: aux6643_BOOL:: var_is_introduced ;
var bool: aux6644_BOOL:: var_is_introduced ;
var 3..37: aux6645:: var_is_introduced ;
var bool: aux6646_BOOL:: var_is_introduced ;
var bool: aux6647_BOOL:: var_is_introduced ;
var bool: aux6648_BOOL:: var_is_introduced ;
var {0,1}: aux6648_INTEGER :: var_is_introduced ;
var bool: aux6649_BOOL:: var_is_introduced ;
var bool: aux6650_BOOL:: var_is_introduced ;
var 3..37: aux6651:: var_is_introduced ;
var bool: aux6652_BOOL:: var_is_introduced ;
var bool: aux6653_BOOL:: var_is_introduced ;
var bool: aux6654_BOOL:: var_is_introduced ;
var {0,1}: aux6654_INTEGER :: var_is_introduced ;
var bool: aux6655_BOOL:: var_is_introduced ;
var bool: aux6656_BOOL:: var_is_introduced ;
var 3..37: aux6657:: var_is_introduced ;
var bool: aux6658_BOOL:: var_is_introduced ;
var bool: aux6659_BOOL:: var_is_introduced ;
var bool: aux6660_BOOL:: var_is_introduced ;
var {0,1}: aux6660_INTEGER :: var_is_introduced ;
var bool: aux6661_BOOL:: var_is_introduced ;
var 2..36: aux6662:: var_is_introduced ;
var bool: aux6663_BOOL:: var_is_introduced ;
var bool: aux6664_BOOL:: var_is_introduced ;
var {0,1}: aux6664_INTEGER :: var_is_introduced ;
var bool: aux6665_BOOL:: var_is_introduced ;
var bool: aux6666_BOOL:: var_is_introduced ;
var bool: aux6667_BOOL:: var_is_introduced ;
var 2..36: aux6668:: var_is_introduced ;
var bool: aux6669_BOOL:: var_is_introduced ;
var bool: aux6670_BOOL:: var_is_introduced ;
var bool: aux6671_BOOL:: var_is_introduced ;
var {0,1}: aux6671_INTEGER :: var_is_introduced ;
var bool: aux6672_BOOL:: var_is_introduced ;
var bool: aux6673_BOOL:: var_is_introduced ;
var 6..40: aux6674:: var_is_introduced ;
var bool: aux6675_BOOL:: var_is_introduced ;
var bool: aux6676_BOOL:: var_is_introduced ;
var bool: aux6677_BOOL:: var_is_introduced ;
var {0,1}: aux6677_INTEGER :: var_is_introduced ;
var bool: aux6678_BOOL:: var_is_introduced ;
var bool: aux6679_BOOL:: var_is_introduced ;
var 1..35: aux6680:: var_is_introduced ;
var bool: aux6681_BOOL:: var_is_introduced ;
var bool: aux6682_BOOL:: var_is_introduced ;
var bool: aux6683_BOOL:: var_is_introduced ;
var {0,1}: aux6683_INTEGER :: var_is_introduced ;
var bool: aux6684_BOOL:: var_is_introduced ;
var bool: aux6685_BOOL:: var_is_introduced ;
var 1..35: aux6686:: var_is_introduced ;
var bool: aux6687_BOOL:: var_is_introduced ;
var bool: aux6688_BOOL:: var_is_introduced ;
var bool: aux6689_BOOL:: var_is_introduced ;
var {0,1}: aux6689_INTEGER :: var_is_introduced ;
var bool: aux6690_BOOL:: var_is_introduced ;
var bool: aux6691_BOOL:: var_is_introduced ;
var 4..38: aux6692:: var_is_introduced ;
var bool: aux6693_BOOL:: var_is_introduced ;
var bool: aux6694_BOOL:: var_is_introduced ;
var bool: aux6695_BOOL:: var_is_introduced ;
var {0,1}: aux6695_INTEGER :: var_is_introduced ;
var bool: aux6696_BOOL:: var_is_introduced ;
var bool: aux6697_BOOL:: var_is_introduced ;
var 2..36: aux6698:: var_is_introduced ;
var bool: aux6699_BOOL:: var_is_introduced ;
var bool: aux6700_BOOL:: var_is_introduced ;
var bool: aux6701_BOOL:: var_is_introduced ;
var {0,1}: aux6701_INTEGER :: var_is_introduced ;
var bool: aux6702_BOOL:: var_is_introduced ;
var bool: aux6703_BOOL:: var_is_introduced ;
var 2..36: aux6704:: var_is_introduced ;
var bool: aux6705_BOOL:: var_is_introduced ;
var bool: aux6706_BOOL:: var_is_introduced ;
var bool: aux6707_BOOL:: var_is_introduced ;
var {0,1}: aux6707_INTEGER :: var_is_introduced ;
var bool: aux6708_BOOL:: var_is_introduced ;
var bool: aux6709_BOOL:: var_is_introduced ;
var 2..36: aux6710:: var_is_introduced ;
var bool: aux6711_BOOL:: var_is_introduced ;
var bool: aux6712_BOOL:: var_is_introduced ;
var bool: aux6713_BOOL:: var_is_introduced ;
var {0,1}: aux6713_INTEGER :: var_is_introduced ;
var bool: aux6714_BOOL:: var_is_introduced ;
var bool: aux6715_BOOL:: var_is_introduced ;
var 1..35: aux6716:: var_is_introduced ;
var bool: aux6717_BOOL:: var_is_introduced ;
var bool: aux6718_BOOL:: var_is_introduced ;
var bool: aux6719_BOOL:: var_is_introduced ;
var {0,1}: aux6719_INTEGER :: var_is_introduced ;
var bool: aux6720_BOOL:: var_is_introduced ;
var bool: aux6721_BOOL:: var_is_introduced ;
var 2..36: aux6722:: var_is_introduced ;
var bool: aux6723_BOOL:: var_is_introduced ;
var bool: aux6724_BOOL:: var_is_introduced ;
var bool: aux6725_BOOL:: var_is_introduced ;
var {0,1}: aux6725_INTEGER :: var_is_introduced ;
var bool: aux6726_BOOL:: var_is_introduced ;
var bool: aux6727_BOOL:: var_is_introduced ;
var 3..37: aux6728:: var_is_introduced ;
var bool: aux6729_BOOL:: var_is_introduced ;
var bool: aux6730_BOOL:: var_is_introduced ;
var bool: aux6731_BOOL:: var_is_introduced ;
var {0,1}: aux6731_INTEGER :: var_is_introduced ;
var bool: aux6732_BOOL:: var_is_introduced ;
var bool: aux6733_BOOL:: var_is_introduced ;
var 3..37: aux6734:: var_is_introduced ;
var bool: aux6735_BOOL:: var_is_introduced ;
var bool: aux6736_BOOL:: var_is_introduced ;
var bool: aux6737_BOOL:: var_is_introduced ;
var {0,1}: aux6737_INTEGER :: var_is_introduced ;
var bool: aux6738_BOOL:: var_is_introduced ;
var bool: aux6739_BOOL:: var_is_introduced ;
var 3..37: aux6740:: var_is_introduced ;
var bool: aux6741_BOOL:: var_is_introduced ;
var bool: aux6742_BOOL:: var_is_introduced ;
var bool: aux6743_BOOL:: var_is_introduced ;
var {0,1}: aux6743_INTEGER :: var_is_introduced ;
var bool: aux6744_BOOL:: var_is_introduced ;
var 2..36: aux6745:: var_is_introduced ;
var bool: aux6746_BOOL:: var_is_introduced ;
var bool: aux6747_BOOL:: var_is_introduced ;
var {0,1}: aux6747_INTEGER :: var_is_introduced ;
var bool: aux6748_BOOL:: var_is_introduced ;
var bool: aux6749_BOOL:: var_is_introduced ;
var bool: aux6750_BOOL:: var_is_introduced ;
var 2..36: aux6751:: var_is_introduced ;
var bool: aux6752_BOOL:: var_is_introduced ;
var bool: aux6753_BOOL:: var_is_introduced ;
var bool: aux6754_BOOL:: var_is_introduced ;
var {0,1}: aux6754_INTEGER :: var_is_introduced ;
var bool: aux6755_BOOL:: var_is_introduced ;
var bool: aux6756_BOOL:: var_is_introduced ;
var 6..40: aux6757:: var_is_introduced ;
var bool: aux6758_BOOL:: var_is_introduced ;
var bool: aux6759_BOOL:: var_is_introduced ;
var bool: aux6760_BOOL:: var_is_introduced ;
var {0,1}: aux6760_INTEGER :: var_is_introduced ;
var bool: aux6761_BOOL:: var_is_introduced ;
var bool: aux6762_BOOL:: var_is_introduced ;
var 1..35: aux6763:: var_is_introduced ;
var bool: aux6764_BOOL:: var_is_introduced ;
var bool: aux6765_BOOL:: var_is_introduced ;
var bool: aux6766_BOOL:: var_is_introduced ;
var {0,1}: aux6766_INTEGER :: var_is_introduced ;
var bool: aux6767_BOOL:: var_is_introduced ;
var bool: aux6768_BOOL:: var_is_introduced ;
var 2..36: aux6769:: var_is_introduced ;
var bool: aux6770_BOOL:: var_is_introduced ;
var bool: aux6771_BOOL:: var_is_introduced ;
var bool: aux6772_BOOL:: var_is_introduced ;
var {0,1}: aux6772_INTEGER :: var_is_introduced ;
var bool: aux6773_BOOL:: var_is_introduced ;
var bool: aux6774_BOOL:: var_is_introduced ;
var 1..35: aux6775:: var_is_introduced ;
var bool: aux6776_BOOL:: var_is_introduced ;
var bool: aux6777_BOOL:: var_is_introduced ;
var bool: aux6778_BOOL:: var_is_introduced ;
var {0,1}: aux6778_INTEGER :: var_is_introduced ;
var bool: aux6779_BOOL:: var_is_introduced ;
var bool: aux6780_BOOL:: var_is_introduced ;
var 4..38: aux6781:: var_is_introduced ;
var bool: aux6782_BOOL:: var_is_introduced ;
var bool: aux6783_BOOL:: var_is_introduced ;
var bool: aux6784_BOOL:: var_is_introduced ;
var {0,1}: aux6784_INTEGER :: var_is_introduced ;
var bool: aux6785_BOOL:: var_is_introduced ;
var bool: aux6786_BOOL:: var_is_introduced ;
var 2..36: aux6787:: var_is_introduced ;
var bool: aux6788_BOOL:: var_is_introduced ;
var bool: aux6789_BOOL:: var_is_introduced ;
var bool: aux6790_BOOL:: var_is_introduced ;
var {0,1}: aux6790_INTEGER :: var_is_introduced ;
var bool: aux6791_BOOL:: var_is_introduced ;
var bool: aux6792_BOOL:: var_is_introduced ;
var 2..36: aux6793:: var_is_introduced ;
var bool: aux6794_BOOL:: var_is_introduced ;
var bool: aux6795_BOOL:: var_is_introduced ;
var bool: aux6796_BOOL:: var_is_introduced ;
var {0,1}: aux6796_INTEGER :: var_is_introduced ;
var bool: aux6797_BOOL:: var_is_introduced ;
var bool: aux6798_BOOL:: var_is_introduced ;
var 2..36: aux6799:: var_is_introduced ;
var bool: aux6800_BOOL:: var_is_introduced ;
var bool: aux6801_BOOL:: var_is_introduced ;
var bool: aux6802_BOOL:: var_is_introduced ;
var {0,1}: aux6802_INTEGER :: var_is_introduced ;
var bool: aux6803_BOOL:: var_is_introduced ;
var bool: aux6804_BOOL:: var_is_introduced ;
var 1..35: aux6805:: var_is_introduced ;
var bool: aux6806_BOOL:: var_is_introduced ;
var bool: aux6807_BOOL:: var_is_introduced ;
var bool: aux6808_BOOL:: var_is_introduced ;
var {0,1}: aux6808_INTEGER :: var_is_introduced ;
var bool: aux6809_BOOL:: var_is_introduced ;
var bool: aux6810_BOOL:: var_is_introduced ;
var 3..37: aux6811:: var_is_introduced ;
var bool: aux6812_BOOL:: var_is_introduced ;
var bool: aux6813_BOOL:: var_is_introduced ;
var bool: aux6814_BOOL:: var_is_introduced ;
var {0,1}: aux6814_INTEGER :: var_is_introduced ;
var bool: aux6815_BOOL:: var_is_introduced ;
var bool: aux6816_BOOL:: var_is_introduced ;
var 3..37: aux6817:: var_is_introduced ;
var bool: aux6818_BOOL:: var_is_introduced ;
var bool: aux6819_BOOL:: var_is_introduced ;
var bool: aux6820_BOOL:: var_is_introduced ;
var {0,1}: aux6820_INTEGER :: var_is_introduced ;
var bool: aux6821_BOOL:: var_is_introduced ;
var bool: aux6822_BOOL:: var_is_introduced ;
var 3..37: aux6823:: var_is_introduced ;
var bool: aux6824_BOOL:: var_is_introduced ;
var bool: aux6825_BOOL:: var_is_introduced ;
var bool: aux6826_BOOL:: var_is_introduced ;
var {0,1}: aux6826_INTEGER :: var_is_introduced ;
var bool: aux6827_BOOL:: var_is_introduced ;
var 2..36: aux6828:: var_is_introduced ;
var bool: aux6829_BOOL:: var_is_introduced ;
var bool: aux6830_BOOL:: var_is_introduced ;
var {0,1}: aux6830_INTEGER :: var_is_introduced ;
var bool: aux6831_BOOL:: var_is_introduced ;
var bool: aux6832_BOOL:: var_is_introduced ;
var bool: aux6833_BOOL:: var_is_introduced ;
var 2..36: aux6834:: var_is_introduced ;
var bool: aux6835_BOOL:: var_is_introduced ;
var bool: aux6836_BOOL:: var_is_introduced ;
var bool: aux6837_BOOL:: var_is_introduced ;
var {0,1}: aux6837_INTEGER :: var_is_introduced ;
var bool: aux6838_BOOL:: var_is_introduced ;
var bool: aux6839_BOOL:: var_is_introduced ;
var 1..35: aux6840:: var_is_introduced ;
var bool: aux6841_BOOL:: var_is_introduced ;
var bool: aux6842_BOOL:: var_is_introduced ;
var bool: aux6843_BOOL:: var_is_introduced ;
var {0,1}: aux6843_INTEGER :: var_is_introduced ;
var bool: aux6844_BOOL:: var_is_introduced ;
var bool: aux6845_BOOL:: var_is_introduced ;
var 2..36: aux6846:: var_is_introduced ;
var bool: aux6847_BOOL:: var_is_introduced ;
var bool: aux6848_BOOL:: var_is_introduced ;
var bool: aux6849_BOOL:: var_is_introduced ;
var {0,1}: aux6849_INTEGER :: var_is_introduced ;
var bool: aux6850_BOOL:: var_is_introduced ;
var bool: aux6851_BOOL:: var_is_introduced ;
var 1..35: aux6852:: var_is_introduced ;
var bool: aux6853_BOOL:: var_is_introduced ;
var bool: aux6854_BOOL:: var_is_introduced ;
var bool: aux6855_BOOL:: var_is_introduced ;
var {0,1}: aux6855_INTEGER :: var_is_introduced ;
var bool: aux6856_BOOL:: var_is_introduced ;
var bool: aux6857_BOOL:: var_is_introduced ;
var 4..38: aux6858:: var_is_introduced ;
var bool: aux6859_BOOL:: var_is_introduced ;
var bool: aux6860_BOOL:: var_is_introduced ;
var bool: aux6861_BOOL:: var_is_introduced ;
var {0,1}: aux6861_INTEGER :: var_is_introduced ;
var bool: aux6862_BOOL:: var_is_introduced ;
var bool: aux6863_BOOL:: var_is_introduced ;
var 2..36: aux6864:: var_is_introduced ;
var bool: aux6865_BOOL:: var_is_introduced ;
var bool: aux6866_BOOL:: var_is_introduced ;
var bool: aux6867_BOOL:: var_is_introduced ;
var {0,1}: aux6867_INTEGER :: var_is_introduced ;
var bool: aux6868_BOOL:: var_is_introduced ;
var bool: aux6869_BOOL:: var_is_introduced ;
var 2..36: aux6870:: var_is_introduced ;
var bool: aux6871_BOOL:: var_is_introduced ;
var bool: aux6872_BOOL:: var_is_introduced ;
var bool: aux6873_BOOL:: var_is_introduced ;
var {0,1}: aux6873_INTEGER :: var_is_introduced ;
var bool: aux6874_BOOL:: var_is_introduced ;
var bool: aux6875_BOOL:: var_is_introduced ;
var 2..36: aux6876:: var_is_introduced ;
var bool: aux6877_BOOL:: var_is_introduced ;
var bool: aux6878_BOOL:: var_is_introduced ;
var bool: aux6879_BOOL:: var_is_introduced ;
var {0,1}: aux6879_INTEGER :: var_is_introduced ;
var bool: aux6880_BOOL:: var_is_introduced ;
var bool: aux6881_BOOL:: var_is_introduced ;
var 1..35: aux6882:: var_is_introduced ;
var bool: aux6883_BOOL:: var_is_introduced ;
var bool: aux6884_BOOL:: var_is_introduced ;
var bool: aux6885_BOOL:: var_is_introduced ;
var {0,1}: aux6885_INTEGER :: var_is_introduced ;
var bool: aux6886_BOOL:: var_is_introduced ;
var bool: aux6887_BOOL:: var_is_introduced ;
var 2..36: aux6888:: var_is_introduced ;
var bool: aux6889_BOOL:: var_is_introduced ;
var bool: aux6890_BOOL:: var_is_introduced ;
var bool: aux6891_BOOL:: var_is_introduced ;
var {0,1}: aux6891_INTEGER :: var_is_introduced ;
var bool: aux6892_BOOL:: var_is_introduced ;
var bool: aux6893_BOOL:: var_is_introduced ;
var 3..37: aux6894:: var_is_introduced ;
var bool: aux6895_BOOL:: var_is_introduced ;
var bool: aux6896_BOOL:: var_is_introduced ;
var bool: aux6897_BOOL:: var_is_introduced ;
var {0,1}: aux6897_INTEGER :: var_is_introduced ;
var bool: aux6898_BOOL:: var_is_introduced ;
var bool: aux6899_BOOL:: var_is_introduced ;
var 3..37: aux6900:: var_is_introduced ;
var bool: aux6901_BOOL:: var_is_introduced ;
var bool: aux6902_BOOL:: var_is_introduced ;
var bool: aux6903_BOOL:: var_is_introduced ;
var {0,1}: aux6903_INTEGER :: var_is_introduced ;
var bool: aux6904_BOOL:: var_is_introduced ;
var bool: aux6905_BOOL:: var_is_introduced ;
var 3..37: aux6906:: var_is_introduced ;
var bool: aux6907_BOOL:: var_is_introduced ;
var bool: aux6908_BOOL:: var_is_introduced ;
var bool: aux6909_BOOL:: var_is_introduced ;
var {0,1}: aux6909_INTEGER :: var_is_introduced ;
var bool: aux6910_BOOL:: var_is_introduced ;
var 6..40: aux6911:: var_is_introduced ;
var bool: aux6912_BOOL:: var_is_introduced ;
var bool: aux6913_BOOL:: var_is_introduced ;
var {0,1}: aux6913_INTEGER :: var_is_introduced ;
var bool: aux6914_BOOL:: var_is_introduced ;
var bool: aux6915_BOOL:: var_is_introduced ;
var bool: aux6916_BOOL:: var_is_introduced ;
var 2..36: aux6917:: var_is_introduced ;
var bool: aux6918_BOOL:: var_is_introduced ;
var bool: aux6919_BOOL:: var_is_introduced ;
var bool: aux6920_BOOL:: var_is_introduced ;
var {0,1}: aux6920_INTEGER :: var_is_introduced ;
var bool: aux6921_BOOL:: var_is_introduced ;
var bool: aux6922_BOOL:: var_is_introduced ;
var 6..40: aux6923:: var_is_introduced ;
var bool: aux6924_BOOL:: var_is_introduced ;
var bool: aux6925_BOOL:: var_is_introduced ;
var bool: aux6926_BOOL:: var_is_introduced ;
var {0,1}: aux6926_INTEGER :: var_is_introduced ;
var bool: aux6927_BOOL:: var_is_introduced ;
var bool: aux6928_BOOL:: var_is_introduced ;
var 2..36: aux6929:: var_is_introduced ;
var bool: aux6930_BOOL:: var_is_introduced ;
var bool: aux6931_BOOL:: var_is_introduced ;
var bool: aux6932_BOOL:: var_is_introduced ;
var {0,1}: aux6932_INTEGER :: var_is_introduced ;
var bool: aux6933_BOOL:: var_is_introduced ;
var bool: aux6934_BOOL:: var_is_introduced ;
var 1..35: aux6935:: var_is_introduced ;
var bool: aux6936_BOOL:: var_is_introduced ;
var bool: aux6937_BOOL:: var_is_introduced ;
var bool: aux6938_BOOL:: var_is_introduced ;
var {0,1}: aux6938_INTEGER :: var_is_introduced ;
var bool: aux6939_BOOL:: var_is_introduced ;
var bool: aux6940_BOOL:: var_is_introduced ;
var 4..38: aux6941:: var_is_introduced ;
var bool: aux6942_BOOL:: var_is_introduced ;
var bool: aux6943_BOOL:: var_is_introduced ;
var bool: aux6944_BOOL:: var_is_introduced ;
var {0,1}: aux6944_INTEGER :: var_is_introduced ;
var bool: aux6945_BOOL:: var_is_introduced ;
var bool: aux6946_BOOL:: var_is_introduced ;
var 2..36: aux6947:: var_is_introduced ;
var bool: aux6948_BOOL:: var_is_introduced ;
var bool: aux6949_BOOL:: var_is_introduced ;
var bool: aux6950_BOOL:: var_is_introduced ;
var {0,1}: aux6950_INTEGER :: var_is_introduced ;
var bool: aux6951_BOOL:: var_is_introduced ;
var bool: aux6952_BOOL:: var_is_introduced ;
var 2..36: aux6953:: var_is_introduced ;
var bool: aux6954_BOOL:: var_is_introduced ;
var bool: aux6955_BOOL:: var_is_introduced ;
var bool: aux6956_BOOL:: var_is_introduced ;
var {0,1}: aux6956_INTEGER :: var_is_introduced ;
var bool: aux6957_BOOL:: var_is_introduced ;
var bool: aux6958_BOOL:: var_is_introduced ;
var 2..36: aux6959:: var_is_introduced ;
var bool: aux6960_BOOL:: var_is_introduced ;
var bool: aux6961_BOOL:: var_is_introduced ;
var bool: aux6962_BOOL:: var_is_introduced ;
var {0,1}: aux6962_INTEGER :: var_is_introduced ;
var bool: aux6963_BOOL:: var_is_introduced ;
var bool: aux6964_BOOL:: var_is_introduced ;
var 1..35: aux6965:: var_is_introduced ;
var bool: aux6966_BOOL:: var_is_introduced ;
var bool: aux6967_BOOL:: var_is_introduced ;
var bool: aux6968_BOOL:: var_is_introduced ;
var {0,1}: aux6968_INTEGER :: var_is_introduced ;
var bool: aux6969_BOOL:: var_is_introduced ;
var bool: aux6970_BOOL:: var_is_introduced ;
var 2..36: aux6971:: var_is_introduced ;
var bool: aux6972_BOOL:: var_is_introduced ;
var bool: aux6973_BOOL:: var_is_introduced ;
var bool: aux6974_BOOL:: var_is_introduced ;
var {0,1}: aux6974_INTEGER :: var_is_introduced ;
var bool: aux6975_BOOL:: var_is_introduced ;
var bool: aux6976_BOOL:: var_is_introduced ;
var 3..37: aux6977:: var_is_introduced ;
var bool: aux6978_BOOL:: var_is_introduced ;
var bool: aux6979_BOOL:: var_is_introduced ;
var bool: aux6980_BOOL:: var_is_introduced ;
var {0,1}: aux6980_INTEGER :: var_is_introduced ;
var bool: aux6981_BOOL:: var_is_introduced ;
var bool: aux6982_BOOL:: var_is_introduced ;
var 3..37: aux6983:: var_is_introduced ;
var bool: aux6984_BOOL:: var_is_introduced ;
var bool: aux6985_BOOL:: var_is_introduced ;
var bool: aux6986_BOOL:: var_is_introduced ;
var {0,1}: aux6986_INTEGER :: var_is_introduced ;
var bool: aux6987_BOOL:: var_is_introduced ;
var bool: aux6988_BOOL:: var_is_introduced ;
var 3..37: aux6989:: var_is_introduced ;
var bool: aux6990_BOOL:: var_is_introduced ;
var bool: aux6991_BOOL:: var_is_introduced ;
var bool: aux6992_BOOL:: var_is_introduced ;
var {0,1}: aux6992_INTEGER :: var_is_introduced ;
var bool: aux6993_BOOL:: var_is_introduced ;
var 1..35: aux6994:: var_is_introduced ;
var bool: aux6995_BOOL:: var_is_introduced ;
var bool: aux6996_BOOL:: var_is_introduced ;
var {0,1}: aux6996_INTEGER :: var_is_introduced ;
var bool: aux6997_BOOL:: var_is_introduced ;
var bool: aux6998_BOOL:: var_is_introduced ;
var bool: aux6999_BOOL:: var_is_introduced ;
var 2..36: aux7000:: var_is_introduced ;
var bool: aux7001_BOOL:: var_is_introduced ;
var bool: aux7002_BOOL:: var_is_introduced ;
var bool: aux7003_BOOL:: var_is_introduced ;
var {0,1}: aux7003_INTEGER :: var_is_introduced ;
var bool: aux7004_BOOL:: var_is_introduced ;
var bool: aux7005_BOOL:: var_is_introduced ;
var 6..40: aux7006:: var_is_introduced ;
var bool: aux7007_BOOL:: var_is_introduced ;
var bool: aux7008_BOOL:: var_is_introduced ;
var bool: aux7009_BOOL:: var_is_introduced ;
var {0,1}: aux7009_INTEGER :: var_is_introduced ;
var bool: aux7010_BOOL:: var_is_introduced ;
var bool: aux7011_BOOL:: var_is_introduced ;
var 1..35: aux7012:: var_is_introduced ;
var bool: aux7013_BOOL:: var_is_introduced ;
var bool: aux7014_BOOL:: var_is_introduced ;
var bool: aux7015_BOOL:: var_is_introduced ;
var {0,1}: aux7015_INTEGER :: var_is_introduced ;
var bool: aux7016_BOOL:: var_is_introduced ;
var bool: aux7017_BOOL:: var_is_introduced ;
var 2..36: aux7018:: var_is_introduced ;
var bool: aux7019_BOOL:: var_is_introduced ;
var bool: aux7020_BOOL:: var_is_introduced ;
var bool: aux7021_BOOL:: var_is_introduced ;
var {0,1}: aux7021_INTEGER :: var_is_introduced ;
var bool: aux7022_BOOL:: var_is_introduced ;
var bool: aux7023_BOOL:: var_is_introduced ;
var 1..35: aux7024:: var_is_introduced ;
var bool: aux7025_BOOL:: var_is_introduced ;
var bool: aux7026_BOOL:: var_is_introduced ;
var bool: aux7027_BOOL:: var_is_introduced ;
var {0,1}: aux7027_INTEGER :: var_is_introduced ;
var bool: aux7028_BOOL:: var_is_introduced ;
var bool: aux7029_BOOL:: var_is_introduced ;
var 4..38: aux7030:: var_is_introduced ;
var bool: aux7031_BOOL:: var_is_introduced ;
var bool: aux7032_BOOL:: var_is_introduced ;
var bool: aux7033_BOOL:: var_is_introduced ;
var {0,1}: aux7033_INTEGER :: var_is_introduced ;
var bool: aux7034_BOOL:: var_is_introduced ;
var bool: aux7035_BOOL:: var_is_introduced ;
var 2..36: aux7036:: var_is_introduced ;
var bool: aux7037_BOOL:: var_is_introduced ;
var bool: aux7038_BOOL:: var_is_introduced ;
var bool: aux7039_BOOL:: var_is_introduced ;
var {0,1}: aux7039_INTEGER :: var_is_introduced ;
var bool: aux7040_BOOL:: var_is_introduced ;
var bool: aux7041_BOOL:: var_is_introduced ;
var 2..36: aux7042:: var_is_introduced ;
var bool: aux7043_BOOL:: var_is_introduced ;
var bool: aux7044_BOOL:: var_is_introduced ;
var bool: aux7045_BOOL:: var_is_introduced ;
var {0,1}: aux7045_INTEGER :: var_is_introduced ;
var bool: aux7046_BOOL:: var_is_introduced ;
var bool: aux7047_BOOL:: var_is_introduced ;
var 2..36: aux7048:: var_is_introduced ;
var bool: aux7049_BOOL:: var_is_introduced ;
var bool: aux7050_BOOL:: var_is_introduced ;
var bool: aux7051_BOOL:: var_is_introduced ;
var {0,1}: aux7051_INTEGER :: var_is_introduced ;
var bool: aux7052_BOOL:: var_is_introduced ;
var bool: aux7053_BOOL:: var_is_introduced ;
var 1..35: aux7054:: var_is_introduced ;
var bool: aux7055_BOOL:: var_is_introduced ;
var bool: aux7056_BOOL:: var_is_introduced ;
var bool: aux7057_BOOL:: var_is_introduced ;
var {0,1}: aux7057_INTEGER :: var_is_introduced ;
var bool: aux7058_BOOL:: var_is_introduced ;
var bool: aux7059_BOOL:: var_is_introduced ;
var 2..36: aux7060:: var_is_introduced ;
var bool: aux7061_BOOL:: var_is_introduced ;
var bool: aux7062_BOOL:: var_is_introduced ;
var bool: aux7063_BOOL:: var_is_introduced ;
var {0,1}: aux7063_INTEGER :: var_is_introduced ;
var bool: aux7064_BOOL:: var_is_introduced ;
var bool: aux7065_BOOL:: var_is_introduced ;
var 3..37: aux7066:: var_is_introduced ;
var bool: aux7067_BOOL:: var_is_introduced ;
var bool: aux7068_BOOL:: var_is_introduced ;
var bool: aux7069_BOOL:: var_is_introduced ;
var {0,1}: aux7069_INTEGER :: var_is_introduced ;
var bool: aux7070_BOOL:: var_is_introduced ;
var bool: aux7071_BOOL:: var_is_introduced ;
var 3..37: aux7072:: var_is_introduced ;
var bool: aux7073_BOOL:: var_is_introduced ;
var bool: aux7074_BOOL:: var_is_introduced ;
var bool: aux7075_BOOL:: var_is_introduced ;
var {0,1}: aux7075_INTEGER :: var_is_introduced ;
var bool: aux7076_BOOL:: var_is_introduced ;
var 3..37: aux7077:: var_is_introduced ;
var bool: aux7078_BOOL:: var_is_introduced ;
var bool: aux7079_BOOL:: var_is_introduced ;
var {0,1}: aux7079_INTEGER :: var_is_introduced ;
var bool: aux7080_BOOL:: var_is_introduced ;
var bool: aux7081_BOOL:: var_is_introduced ;
var bool: aux7082_BOOL:: var_is_introduced ;
var 2..36: aux7083:: var_is_introduced ;
var bool: aux7084_BOOL:: var_is_introduced ;
var bool: aux7085_BOOL:: var_is_introduced ;
var bool: aux7086_BOOL:: var_is_introduced ;
var {0,1}: aux7086_INTEGER :: var_is_introduced ;
var bool: aux7087_BOOL:: var_is_introduced ;
var bool: aux7088_BOOL:: var_is_introduced ;
var 6..40: aux7089:: var_is_introduced ;
var bool: aux7090_BOOL:: var_is_introduced ;
var bool: aux7091_BOOL:: var_is_introduced ;
var bool: aux7092_BOOL:: var_is_introduced ;
var {0,1}: aux7092_INTEGER :: var_is_introduced ;
var bool: aux7093_BOOL:: var_is_introduced ;
var bool: aux7094_BOOL:: var_is_introduced ;
var 1..35: aux7095:: var_is_introduced ;
var bool: aux7096_BOOL:: var_is_introduced ;
var bool: aux7097_BOOL:: var_is_introduced ;
var bool: aux7098_BOOL:: var_is_introduced ;
var {0,1}: aux7098_INTEGER :: var_is_introduced ;
var bool: aux7099_BOOL:: var_is_introduced ;
var bool: aux7100_BOOL:: var_is_introduced ;
var 2..36: aux7101:: var_is_introduced ;
var bool: aux7102_BOOL:: var_is_introduced ;
var bool: aux7103_BOOL:: var_is_introduced ;
var bool: aux7104_BOOL:: var_is_introduced ;
var {0,1}: aux7104_INTEGER :: var_is_introduced ;
var bool: aux7105_BOOL:: var_is_introduced ;
var bool: aux7106_BOOL:: var_is_introduced ;
var 1..35: aux7107:: var_is_introduced ;
var bool: aux7108_BOOL:: var_is_introduced ;
var bool: aux7109_BOOL:: var_is_introduced ;
var bool: aux7110_BOOL:: var_is_introduced ;
var {0,1}: aux7110_INTEGER :: var_is_introduced ;
var bool: aux7111_BOOL:: var_is_introduced ;
var bool: aux7112_BOOL:: var_is_introduced ;
var 4..38: aux7113:: var_is_introduced ;
var bool: aux7114_BOOL:: var_is_introduced ;
var bool: aux7115_BOOL:: var_is_introduced ;
var bool: aux7116_BOOL:: var_is_introduced ;
var {0,1}: aux7116_INTEGER :: var_is_introduced ;
var bool: aux7117_BOOL:: var_is_introduced ;
var bool: aux7118_BOOL:: var_is_introduced ;
var 2..36: aux7119:: var_is_introduced ;
var bool: aux7120_BOOL:: var_is_introduced ;
var bool: aux7121_BOOL:: var_is_introduced ;
var bool: aux7122_BOOL:: var_is_introduced ;
var {0,1}: aux7122_INTEGER :: var_is_introduced ;
var bool: aux7123_BOOL:: var_is_introduced ;
var bool: aux7124_BOOL:: var_is_introduced ;
var 2..36: aux7125:: var_is_introduced ;
var bool: aux7126_BOOL:: var_is_introduced ;
var bool: aux7127_BOOL:: var_is_introduced ;
var bool: aux7128_BOOL:: var_is_introduced ;
var {0,1}: aux7128_INTEGER :: var_is_introduced ;
var bool: aux7129_BOOL:: var_is_introduced ;
var bool: aux7130_BOOL:: var_is_introduced ;
var 2..36: aux7131:: var_is_introduced ;
var bool: aux7132_BOOL:: var_is_introduced ;
var bool: aux7133_BOOL:: var_is_introduced ;
var bool: aux7134_BOOL:: var_is_introduced ;
var {0,1}: aux7134_INTEGER :: var_is_introduced ;
var bool: aux7135_BOOL:: var_is_introduced ;
var bool: aux7136_BOOL:: var_is_introduced ;
var 1..35: aux7137:: var_is_introduced ;
var bool: aux7138_BOOL:: var_is_introduced ;
var bool: aux7139_BOOL:: var_is_introduced ;
var bool: aux7140_BOOL:: var_is_introduced ;
var {0,1}: aux7140_INTEGER :: var_is_introduced ;
var bool: aux7141_BOOL:: var_is_introduced ;
var bool: aux7142_BOOL:: var_is_introduced ;
var 2..36: aux7143:: var_is_introduced ;
var bool: aux7144_BOOL:: var_is_introduced ;
var bool: aux7145_BOOL:: var_is_introduced ;
var bool: aux7146_BOOL:: var_is_introduced ;
var {0,1}: aux7146_INTEGER :: var_is_introduced ;
var bool: aux7147_BOOL:: var_is_introduced ;
var bool: aux7148_BOOL:: var_is_introduced ;
var 3..37: aux7149:: var_is_introduced ;
var bool: aux7150_BOOL:: var_is_introduced ;
var bool: aux7151_BOOL:: var_is_introduced ;
var bool: aux7152_BOOL:: var_is_introduced ;
var {0,1}: aux7152_INTEGER :: var_is_introduced ;
var bool: aux7153_BOOL:: var_is_introduced ;
var bool: aux7154_BOOL:: var_is_introduced ;
var 3..37: aux7155:: var_is_introduced ;
var bool: aux7156_BOOL:: var_is_introduced ;
var bool: aux7157_BOOL:: var_is_introduced ;
var bool: aux7158_BOOL:: var_is_introduced ;
var {0,1}: aux7158_INTEGER :: var_is_introduced ;
var bool: aux7159_BOOL:: var_is_introduced ;
var 3..37: aux7160:: var_is_introduced ;
var bool: aux7161_BOOL:: var_is_introduced ;
var bool: aux7162_BOOL:: var_is_introduced ;
var {0,1}: aux7162_INTEGER :: var_is_introduced ;
var bool: aux7163_BOOL:: var_is_introduced ;
var bool: aux7164_BOOL:: var_is_introduced ;
var bool: aux7165_BOOL:: var_is_introduced ;
var 2..36: aux7166:: var_is_introduced ;
var bool: aux7167_BOOL:: var_is_introduced ;
var bool: aux7168_BOOL:: var_is_introduced ;
var bool: aux7169_BOOL:: var_is_introduced ;
var {0,1}: aux7169_INTEGER :: var_is_introduced ;
var bool: aux7170_BOOL:: var_is_introduced ;
var bool: aux7171_BOOL:: var_is_introduced ;
var 6..40: aux7172:: var_is_introduced ;
var bool: aux7173_BOOL:: var_is_introduced ;
var bool: aux7174_BOOL:: var_is_introduced ;
var bool: aux7175_BOOL:: var_is_introduced ;
var {0,1}: aux7175_INTEGER :: var_is_introduced ;
var bool: aux7176_BOOL:: var_is_introduced ;
var bool: aux7177_BOOL:: var_is_introduced ;
var 1..35: aux7178:: var_is_introduced ;
var bool: aux7179_BOOL:: var_is_introduced ;
var bool: aux7180_BOOL:: var_is_introduced ;
var bool: aux7181_BOOL:: var_is_introduced ;
var {0,1}: aux7181_INTEGER :: var_is_introduced ;
var bool: aux7182_BOOL:: var_is_introduced ;
var bool: aux7183_BOOL:: var_is_introduced ;
var 2..36: aux7184:: var_is_introduced ;
var bool: aux7185_BOOL:: var_is_introduced ;
var bool: aux7186_BOOL:: var_is_introduced ;
var bool: aux7187_BOOL:: var_is_introduced ;
var {0,1}: aux7187_INTEGER :: var_is_introduced ;
var bool: aux7188_BOOL:: var_is_introduced ;
var bool: aux7189_BOOL:: var_is_introduced ;
var 1..35: aux7190:: var_is_introduced ;
var bool: aux7191_BOOL:: var_is_introduced ;
var bool: aux7192_BOOL:: var_is_introduced ;
var bool: aux7193_BOOL:: var_is_introduced ;
var {0,1}: aux7193_INTEGER :: var_is_introduced ;
var bool: aux7194_BOOL:: var_is_introduced ;
var bool: aux7195_BOOL:: var_is_introduced ;
var 2..36: aux7196:: var_is_introduced ;
var bool: aux7197_BOOL:: var_is_introduced ;
var bool: aux7198_BOOL:: var_is_introduced ;
var bool: aux7199_BOOL:: var_is_introduced ;
var {0,1}: aux7199_INTEGER :: var_is_introduced ;
var bool: aux7200_BOOL:: var_is_introduced ;
var bool: aux7201_BOOL:: var_is_introduced ;
var 2..36: aux7202:: var_is_introduced ;
var bool: aux7203_BOOL:: var_is_introduced ;
var bool: aux7204_BOOL:: var_is_introduced ;
var bool: aux7205_BOOL:: var_is_introduced ;
var {0,1}: aux7205_INTEGER :: var_is_introduced ;
var bool: aux7206_BOOL:: var_is_introduced ;
var bool: aux7207_BOOL:: var_is_introduced ;
var 2..36: aux7208:: var_is_introduced ;
var bool: aux7209_BOOL:: var_is_introduced ;
var bool: aux7210_BOOL:: var_is_introduced ;
var bool: aux7211_BOOL:: var_is_introduced ;
var {0,1}: aux7211_INTEGER :: var_is_introduced ;
var bool: aux7212_BOOL:: var_is_introduced ;
var bool: aux7213_BOOL:: var_is_introduced ;
var 1..35: aux7214:: var_is_introduced ;
var bool: aux7215_BOOL:: var_is_introduced ;
var bool: aux7216_BOOL:: var_is_introduced ;
var bool: aux7217_BOOL:: var_is_introduced ;
var {0,1}: aux7217_INTEGER :: var_is_introduced ;
var bool: aux7218_BOOL:: var_is_introduced ;
var bool: aux7219_BOOL:: var_is_introduced ;
var 2..36: aux7220:: var_is_introduced ;
var bool: aux7221_BOOL:: var_is_introduced ;
var bool: aux7222_BOOL:: var_is_introduced ;
var bool: aux7223_BOOL:: var_is_introduced ;
var {0,1}: aux7223_INTEGER :: var_is_introduced ;
var bool: aux7224_BOOL:: var_is_introduced ;
var bool: aux7225_BOOL:: var_is_introduced ;
var 3..37: aux7226:: var_is_introduced ;
var bool: aux7227_BOOL:: var_is_introduced ;
var bool: aux7228_BOOL:: var_is_introduced ;
var bool: aux7229_BOOL:: var_is_introduced ;
var {0,1}: aux7229_INTEGER :: var_is_introduced ;
var bool: aux7230_BOOL:: var_is_introduced ;
var bool: aux7231_BOOL:: var_is_introduced ;
var 3..37: aux7232:: var_is_introduced ;
var bool: aux7233_BOOL:: var_is_introduced ;
var bool: aux7234_BOOL:: var_is_introduced ;
var bool: aux7235_BOOL:: var_is_introduced ;
var {0,1}: aux7235_INTEGER :: var_is_introduced ;
var bool: aux7236_BOOL:: var_is_introduced ;
var bool: aux7237_BOOL:: var_is_introduced ;
var 3..37: aux7238:: var_is_introduced ;
var bool: aux7239_BOOL:: var_is_introduced ;
var bool: aux7240_BOOL:: var_is_introduced ;
var bool: aux7241_BOOL:: var_is_introduced ;
var {0,1}: aux7241_INTEGER :: var_is_introduced ;
var bool: aux7242_BOOL:: var_is_introduced ;
var 4..38: aux7243:: var_is_introduced ;
var bool: aux7244_BOOL:: var_is_introduced ;
var bool: aux7245_BOOL:: var_is_introduced ;
var {0,1}: aux7245_INTEGER :: var_is_introduced ;
var bool: aux7246_BOOL:: var_is_introduced ;
var bool: aux7247_BOOL:: var_is_introduced ;
var 1..35: aux7248:: var_is_introduced ;
var bool: aux7249_BOOL:: var_is_introduced ;
var bool: aux7250_BOOL:: var_is_introduced ;
var bool: aux7251_BOOL:: var_is_introduced ;
var {0,1}: aux7251_INTEGER :: var_is_introduced ;
var 2..36: aux7252:: var_is_introduced ;
var bool: aux7253_BOOL:: var_is_introduced ;
var bool: aux7254_BOOL:: var_is_introduced ;
var bool: aux7255_BOOL:: var_is_introduced ;
var {0,1}: aux7255_INTEGER :: var_is_introduced ;
var 2..36: aux7256:: var_is_introduced ;
var bool: aux7257_BOOL:: var_is_introduced ;
var bool: aux7258_BOOL:: var_is_introduced ;
var bool: aux7259_BOOL:: var_is_introduced ;
var {0,1}: aux7259_INTEGER :: var_is_introduced ;
var 1..35: aux7260:: var_is_introduced ;
var bool: aux7261_BOOL:: var_is_introduced ;
var bool: aux7262_BOOL:: var_is_introduced ;
var bool: aux7263_BOOL:: var_is_introduced ;
var {0,1}: aux7263_INTEGER :: var_is_introduced ;
var 2..36: aux7264:: var_is_introduced ;
var bool: aux7265_BOOL:: var_is_introduced ;
var bool: aux7266_BOOL:: var_is_introduced ;
var bool: aux7267_BOOL:: var_is_introduced ;
var {0,1}: aux7267_INTEGER :: var_is_introduced ;
var 4..38: aux7268:: var_is_introduced ;
var bool: aux7269_BOOL:: var_is_introduced ;
var bool: aux7270_BOOL:: var_is_introduced ;
var bool: aux7271_BOOL:: var_is_introduced ;
var {0,1}: aux7271_INTEGER :: var_is_introduced ;
var 3..37: aux7272:: var_is_introduced ;
var bool: aux7273_BOOL:: var_is_introduced ;
var bool: aux7274_BOOL:: var_is_introduced ;
var bool: aux7275_BOOL:: var_is_introduced ;
var {0,1}: aux7275_INTEGER :: var_is_introduced ;
var 2..36: aux7276:: var_is_introduced ;
var bool: aux7277_BOOL:: var_is_introduced ;
var {0,1}: aux7277_INTEGER :: var_is_introduced ;
var 2..36: aux7278:: var_is_introduced ;
var bool: aux7279_BOOL:: var_is_introduced ;
var bool: aux7280_BOOL:: var_is_introduced ;
var bool: aux7281_BOOL:: var_is_introduced ;
var {0,1}: aux7281_INTEGER :: var_is_introduced ;
var 2..36: aux7282:: var_is_introduced ;
var bool: aux7283_BOOL:: var_is_introduced ;
var bool: aux7284_BOOL:: var_is_introduced ;
var bool: aux7285_BOOL:: var_is_introduced ;
var {0,1}: aux7285_INTEGER :: var_is_introduced ;
var 2..36: aux7286:: var_is_introduced ;
var bool: aux7287_BOOL:: var_is_introduced ;
var bool: aux7288_BOOL:: var_is_introduced ;
var bool: aux7289_BOOL:: var_is_introduced ;
var {0,1}: aux7289_INTEGER :: var_is_introduced ;
var 1..35: aux7290:: var_is_introduced ;
var bool: aux7291_BOOL:: var_is_introduced ;
var bool: aux7292_BOOL:: var_is_introduced ;
var bool: aux7293_BOOL:: var_is_introduced ;
var {0,1}: aux7293_INTEGER :: var_is_introduced ;
var 2..36: aux7294:: var_is_introduced ;
var bool: aux7295_BOOL:: var_is_introduced ;
var bool: aux7296_BOOL:: var_is_introduced ;
var bool: aux7297_BOOL:: var_is_introduced ;
var {0,1}: aux7297_INTEGER :: var_is_introduced ;
var 4..38: aux7298:: var_is_introduced ;
var bool: aux7299_BOOL:: var_is_introduced ;
var bool: aux7300_BOOL:: var_is_introduced ;
var bool: aux7301_BOOL:: var_is_introduced ;
var {0,1}: aux7301_INTEGER :: var_is_introduced ;
var 3..37: aux7302:: var_is_introduced ;
var bool: aux7303_BOOL:: var_is_introduced ;
var bool: aux7304_BOOL:: var_is_introduced ;
var bool: aux7305_BOOL:: var_is_introduced ;
var {0,1}: aux7305_INTEGER :: var_is_introduced ;
var 1..35: aux7306:: var_is_introduced ;
var bool: aux7307_BOOL:: var_is_introduced ;
var {0,1}: aux7307_INTEGER :: var_is_introduced ;
var 1..35: aux7308:: var_is_introduced ;
var bool: aux7309_BOOL:: var_is_introduced ;
var bool: aux7310_BOOL:: var_is_introduced ;
var bool: aux7311_BOOL:: var_is_introduced ;
var {0,1}: aux7311_INTEGER :: var_is_introduced ;
var 2..36: aux7312:: var_is_introduced ;
var bool: aux7313_BOOL:: var_is_introduced ;
var bool: aux7314_BOOL:: var_is_introduced ;
var bool: aux7315_BOOL:: var_is_introduced ;
var {0,1}: aux7315_INTEGER :: var_is_introduced ;
var 2..36: aux7316:: var_is_introduced ;
var bool: aux7317_BOOL:: var_is_introduced ;
var bool: aux7318_BOOL:: var_is_introduced ;
var bool: aux7319_BOOL:: var_is_introduced ;
var {0,1}: aux7319_INTEGER :: var_is_introduced ;
var 2..36: aux7320:: var_is_introduced ;
var bool: aux7321_BOOL:: var_is_introduced ;
var bool: aux7322_BOOL:: var_is_introduced ;
var bool: aux7323_BOOL:: var_is_introduced ;
var {0,1}: aux7323_INTEGER :: var_is_introduced ;
var 1..35: aux7324:: var_is_introduced ;
var bool: aux7325_BOOL:: var_is_introduced ;
var bool: aux7326_BOOL:: var_is_introduced ;
var bool: aux7327_BOOL:: var_is_introduced ;
var {0,1}: aux7327_INTEGER :: var_is_introduced ;
var 2..36: aux7328:: var_is_introduced ;
var bool: aux7329_BOOL:: var_is_introduced ;
var bool: aux7330_BOOL:: var_is_introduced ;
var bool: aux7331_BOOL:: var_is_introduced ;
var {0,1}: aux7331_INTEGER :: var_is_introduced ;
var 3..37: aux7332:: var_is_introduced ;
var bool: aux7333_BOOL:: var_is_introduced ;
var bool: aux7334_BOOL:: var_is_introduced ;
var bool: aux7335_BOOL:: var_is_introduced ;
var {0,1}: aux7335_INTEGER :: var_is_introduced ;
var 4..38: aux7336:: var_is_introduced ;
var bool: aux7337_BOOL:: var_is_introduced ;
var {0,1}: aux7337_INTEGER :: var_is_introduced ;
var 1..35: aux7338:: var_is_introduced ;
var bool: aux7339_BOOL:: var_is_introduced ;
var bool: aux7340_BOOL:: var_is_introduced ;
var bool: aux7341_BOOL:: var_is_introduced ;
var {0,1}: aux7341_INTEGER :: var_is_introduced ;
var 2..36: aux7342:: var_is_introduced ;
var bool: aux7343_BOOL:: var_is_introduced ;
var bool: aux7344_BOOL:: var_is_introduced ;
var bool: aux7345_BOOL:: var_is_introduced ;
var {0,1}: aux7345_INTEGER :: var_is_introduced ;
var 2..36: aux7346:: var_is_introduced ;
var bool: aux7347_BOOL:: var_is_introduced ;
var bool: aux7348_BOOL:: var_is_introduced ;
var bool: aux7349_BOOL:: var_is_introduced ;
var {0,1}: aux7349_INTEGER :: var_is_introduced ;
var 1..35: aux7350:: var_is_introduced ;
var bool: aux7351_BOOL:: var_is_introduced ;
var bool: aux7352_BOOL:: var_is_introduced ;
var bool: aux7353_BOOL:: var_is_introduced ;
var {0,1}: aux7353_INTEGER :: var_is_introduced ;
var 2..36: aux7354:: var_is_introduced ;
var bool: aux7355_BOOL:: var_is_introduced ;
var bool: aux7356_BOOL:: var_is_introduced ;
var bool: aux7357_BOOL:: var_is_introduced ;
var {0,1}: aux7357_INTEGER :: var_is_introduced ;
var 4..38: aux7358:: var_is_introduced ;
var bool: aux7359_BOOL:: var_is_introduced ;
var bool: aux7360_BOOL:: var_is_introduced ;
var bool: aux7361_BOOL:: var_is_introduced ;
var {0,1}: aux7361_INTEGER :: var_is_introduced ;
var 3..37: aux7362:: var_is_introduced ;
var bool: aux7363_BOOL:: var_is_introduced ;
var bool: aux7364_BOOL:: var_is_introduced ;
var bool: aux7365_BOOL:: var_is_introduced ;
var {0,1}: aux7365_INTEGER :: var_is_introduced ;
var 2..36: aux7366:: var_is_introduced ;
var bool: aux7367_BOOL:: var_is_introduced ;
var {0,1}: aux7367_INTEGER :: var_is_introduced ;
var 1..35: aux7368:: var_is_introduced ;
var bool: aux7369_BOOL:: var_is_introduced ;
var bool: aux7370_BOOL:: var_is_introduced ;
var bool: aux7371_BOOL:: var_is_introduced ;
var {0,1}: aux7371_INTEGER :: var_is_introduced ;
var 2..36: aux7372:: var_is_introduced ;
var bool: aux7373_BOOL:: var_is_introduced ;
var bool: aux7374_BOOL:: var_is_introduced ;
var bool: aux7375_BOOL:: var_is_introduced ;
var {0,1}: aux7375_INTEGER :: var_is_introduced ;
var 2..36: aux7376:: var_is_introduced ;
var bool: aux7377_BOOL:: var_is_introduced ;
var bool: aux7378_BOOL:: var_is_introduced ;
var bool: aux7379_BOOL:: var_is_introduced ;
var {0,1}: aux7379_INTEGER :: var_is_introduced ;
var 1..35: aux7380:: var_is_introduced ;
var bool: aux7381_BOOL:: var_is_introduced ;
var bool: aux7382_BOOL:: var_is_introduced ;
var bool: aux7383_BOOL:: var_is_introduced ;
var {0,1}: aux7383_INTEGER :: var_is_introduced ;
var 2..36: aux7384:: var_is_introduced ;
var bool: aux7385_BOOL:: var_is_introduced ;
var bool: aux7386_BOOL:: var_is_introduced ;
var bool: aux7387_BOOL:: var_is_introduced ;
var {0,1}: aux7387_INTEGER :: var_is_introduced ;
var 4..38: aux7388:: var_is_introduced ;
var bool: aux7389_BOOL:: var_is_introduced ;
var bool: aux7390_BOOL:: var_is_introduced ;
var bool: aux7391_BOOL:: var_is_introduced ;
var {0,1}: aux7391_INTEGER :: var_is_introduced ;
var 3..37: aux7392:: var_is_introduced ;
var bool: aux7393_BOOL:: var_is_introduced ;
var bool: aux7394_BOOL:: var_is_introduced ;
var bool: aux7395_BOOL:: var_is_introduced ;
var {0,1}: aux7395_INTEGER :: var_is_introduced ;
var 2..36: aux7396:: var_is_introduced ;
var bool: aux7397_BOOL:: var_is_introduced ;
var {0,1}: aux7397_INTEGER :: var_is_introduced ;
var 1..35: aux7398:: var_is_introduced ;
var bool: aux7399_BOOL:: var_is_introduced ;
var bool: aux7400_BOOL:: var_is_introduced ;
var bool: aux7401_BOOL:: var_is_introduced ;
var {0,1}: aux7401_INTEGER :: var_is_introduced ;
var 2..36: aux7402:: var_is_introduced ;
var bool: aux7403_BOOL:: var_is_introduced ;
var bool: aux7404_BOOL:: var_is_introduced ;
var bool: aux7405_BOOL:: var_is_introduced ;
var {0,1}: aux7405_INTEGER :: var_is_introduced ;
var 2..36: aux7406:: var_is_introduced ;
var bool: aux7407_BOOL:: var_is_introduced ;
var bool: aux7408_BOOL:: var_is_introduced ;
var bool: aux7409_BOOL:: var_is_introduced ;
var {0,1}: aux7409_INTEGER :: var_is_introduced ;
var 2..36: aux7410:: var_is_introduced ;
var bool: aux7411_BOOL:: var_is_introduced ;
var bool: aux7412_BOOL:: var_is_introduced ;
var bool: aux7413_BOOL:: var_is_introduced ;
var {0,1}: aux7413_INTEGER :: var_is_introduced ;
var 2..36: aux7414:: var_is_introduced ;
var bool: aux7415_BOOL:: var_is_introduced ;
var bool: aux7416_BOOL:: var_is_introduced ;
var bool: aux7417_BOOL:: var_is_introduced ;
var {0,1}: aux7417_INTEGER :: var_is_introduced ;
var 4..38: aux7418:: var_is_introduced ;
var bool: aux7419_BOOL:: var_is_introduced ;
var bool: aux7420_BOOL:: var_is_introduced ;
var bool: aux7421_BOOL:: var_is_introduced ;
var {0,1}: aux7421_INTEGER :: var_is_introduced ;
var 3..37: aux7422:: var_is_introduced ;
var bool: aux7423_BOOL:: var_is_introduced ;
var bool: aux7424_BOOL:: var_is_introduced ;
var bool: aux7425_BOOL:: var_is_introduced ;
var {0,1}: aux7425_INTEGER :: var_is_introduced ;
var 1..35: aux7426:: var_is_introduced ;
var bool: aux7427_BOOL:: var_is_introduced ;
var {0,1}: aux7427_INTEGER :: var_is_introduced ;
var 1..35: aux7428:: var_is_introduced ;
var bool: aux7429_BOOL:: var_is_introduced ;
var bool: aux7430_BOOL:: var_is_introduced ;
var bool: aux7431_BOOL:: var_is_introduced ;
var {0,1}: aux7431_INTEGER :: var_is_introduced ;
var 2..36: aux7432:: var_is_introduced ;
var bool: aux7433_BOOL:: var_is_introduced ;
var bool: aux7434_BOOL:: var_is_introduced ;
var bool: aux7435_BOOL:: var_is_introduced ;
var {0,1}: aux7435_INTEGER :: var_is_introduced ;
var 2..36: aux7436:: var_is_introduced ;
var bool: aux7437_BOOL:: var_is_introduced ;
var bool: aux7438_BOOL:: var_is_introduced ;
var bool: aux7439_BOOL:: var_is_introduced ;
var {0,1}: aux7439_INTEGER :: var_is_introduced ;
var 2..36: aux7440:: var_is_introduced ;
var bool: aux7441_BOOL:: var_is_introduced ;
var bool: aux7442_BOOL:: var_is_introduced ;
var bool: aux7443_BOOL:: var_is_introduced ;
var {0,1}: aux7443_INTEGER :: var_is_introduced ;
var 1..35: aux7444:: var_is_introduced ;
var bool: aux7445_BOOL:: var_is_introduced ;
var bool: aux7446_BOOL:: var_is_introduced ;
var bool: aux7447_BOOL:: var_is_introduced ;
var {0,1}: aux7447_INTEGER :: var_is_introduced ;
var 4..38: aux7448:: var_is_introduced ;
var bool: aux7449_BOOL:: var_is_introduced ;
var bool: aux7450_BOOL:: var_is_introduced ;
var bool: aux7451_BOOL:: var_is_introduced ;
var {0,1}: aux7451_INTEGER :: var_is_introduced ;
var 3..37: aux7452:: var_is_introduced ;
var bool: aux7453_BOOL:: var_is_introduced ;
var bool: aux7454_BOOL:: var_is_introduced ;
var bool: aux7455_BOOL:: var_is_introduced ;
var {0,1}: aux7455_INTEGER :: var_is_introduced ;
var 2..36: aux7456:: var_is_introduced ;
var bool: aux7457_BOOL:: var_is_introduced ;
var {0,1}: aux7457_INTEGER :: var_is_introduced ;
var 1..35: aux7458:: var_is_introduced ;
var bool: aux7459_BOOL:: var_is_introduced ;
var bool: aux7460_BOOL:: var_is_introduced ;
var bool: aux7461_BOOL:: var_is_introduced ;
var {0,1}: aux7461_INTEGER :: var_is_introduced ;
var 2..36: aux7462:: var_is_introduced ;
var bool: aux7463_BOOL:: var_is_introduced ;
var bool: aux7464_BOOL:: var_is_introduced ;
var bool: aux7465_BOOL:: var_is_introduced ;
var {0,1}: aux7465_INTEGER :: var_is_introduced ;
var 2..36: aux7466:: var_is_introduced ;
var bool: aux7467_BOOL:: var_is_introduced ;
var bool: aux7468_BOOL:: var_is_introduced ;
var bool: aux7469_BOOL:: var_is_introduced ;
var {0,1}: aux7469_INTEGER :: var_is_introduced ;
var 2..36: aux7470:: var_is_introduced ;
var bool: aux7471_BOOL:: var_is_introduced ;
var bool: aux7472_BOOL:: var_is_introduced ;
var bool: aux7473_BOOL:: var_is_introduced ;
var {0,1}: aux7473_INTEGER :: var_is_introduced ;
var 1..35: aux7474:: var_is_introduced ;
var bool: aux7475_BOOL:: var_is_introduced ;
var bool: aux7476_BOOL:: var_is_introduced ;
var bool: aux7477_BOOL:: var_is_introduced ;
var {0,1}: aux7477_INTEGER :: var_is_introduced ;
var 2..36: aux7478:: var_is_introduced ;
var bool: aux7479_BOOL:: var_is_introduced ;
var bool: aux7480_BOOL:: var_is_introduced ;
var bool: aux7481_BOOL:: var_is_introduced ;
var {0,1}: aux7481_INTEGER :: var_is_introduced ;
var 4..38: aux7482:: var_is_introduced ;
var bool: aux7483_BOOL:: var_is_introduced ;
var bool: aux7484_BOOL:: var_is_introduced ;
var bool: aux7485_BOOL:: var_is_introduced ;
var {0,1}: aux7485_INTEGER :: var_is_introduced ;
var 3..37: aux7486:: var_is_introduced ;
var bool: aux7487_BOOL:: var_is_introduced ;
var {0,1}: aux7487_INTEGER :: var_is_introduced ;
var 2..36: aux7488:: var_is_introduced ;
var bool: aux7489_BOOL:: var_is_introduced ;
var bool: aux7490_BOOL:: var_is_introduced ;
var bool: aux7491_BOOL:: var_is_introduced ;
var {0,1}: aux7491_INTEGER :: var_is_introduced ;
var 3..37: aux7492:: var_is_introduced ;
var bool: aux7493_BOOL:: var_is_introduced ;
var bool: aux7494_BOOL:: var_is_introduced ;
var bool: aux7495_BOOL:: var_is_introduced ;
var {0,1}: aux7495_INTEGER :: var_is_introduced ;
var 4..38: aux7496:: var_is_introduced ;
var bool: aux7497_BOOL:: var_is_introduced ;
var {0,1}: aux7497_INTEGER :: var_is_introduced ;
var 4..38: aux7498:: var_is_introduced ;
var bool: aux7499_BOOL:: var_is_introduced ;
var bool: aux7500_BOOL:: var_is_introduced ;
var bool: aux7501_BOOL:: var_is_introduced ;
var {0,1}: aux7501_INTEGER :: var_is_introduced ;
var 3..37: aux7502:: var_is_introduced ;
var bool: aux7503_BOOL:: var_is_introduced ;
var bool: aux7504_BOOL:: var_is_introduced ;
var bool: aux7505_BOOL:: var_is_introduced ;
var {0,1}: aux7505_INTEGER :: var_is_introduced ;
var 2..36: aux7506:: var_is_introduced ;
var bool: aux7507_BOOL:: var_is_introduced ;
var {0,1}: aux7507_INTEGER :: var_is_introduced ;
var 2..36: aux7508:: var_is_introduced ;
var bool: aux7509_BOOL:: var_is_introduced ;
var bool: aux7510_BOOL:: var_is_introduced ;
var bool: aux7511_BOOL:: var_is_introduced ;
var {0,1}: aux7511_INTEGER :: var_is_introduced ;
var 4..38: aux7512:: var_is_introduced ;
var bool: aux7513_BOOL:: var_is_introduced ;
var bool: aux7514_BOOL:: var_is_introduced ;
var bool: aux7515_BOOL:: var_is_introduced ;
var {0,1}: aux7515_INTEGER :: var_is_introduced ;
var 3..37: aux7516:: var_is_introduced ;
var bool: aux7517_BOOL:: var_is_introduced ;
var {0,1}: aux7517_INTEGER :: var_is_introduced ;
var 1..35: aux7518:: var_is_introduced ;
var bool: aux7519_BOOL:: var_is_introduced ;
var bool: aux7520_BOOL:: var_is_introduced ;
var bool: aux7521_BOOL:: var_is_introduced ;
var {0,1}: aux7521_INTEGER :: var_is_introduced ;
var 2..36: aux7522:: var_is_introduced ;
var bool: aux7523_BOOL:: var_is_introduced ;
var bool: aux7524_BOOL:: var_is_introduced ;
var bool: aux7525_BOOL:: var_is_introduced ;
var {0,1}: aux7525_INTEGER :: var_is_introduced ;
var 2..36: aux7526:: var_is_introduced ;
var bool: aux7527_BOOL:: var_is_introduced ;
var bool: aux7528_BOOL:: var_is_introduced ;
var bool: aux7529_BOOL:: var_is_introduced ;
var {0,1}: aux7529_INTEGER :: var_is_introduced ;
var 3..37: aux7530:: var_is_introduced ;
var bool: aux7531_BOOL:: var_is_introduced ;
var bool: aux7532_BOOL:: var_is_introduced ;
var bool: aux7533_BOOL:: var_is_introduced ;
var {0,1}: aux7533_INTEGER :: var_is_introduced ;
var 3..37: aux7534:: var_is_introduced ;
var bool: aux7535_BOOL:: var_is_introduced ;
var bool: aux7536_BOOL:: var_is_introduced ;
var bool: aux7537_BOOL:: var_is_introduced ;
var {0,1}: aux7537_INTEGER :: var_is_introduced ;
var 3..37: aux7538:: var_is_introduced ;
var bool: aux7539_BOOL:: var_is_introduced ;
var bool: aux7540_BOOL:: var_is_introduced ;
var bool: aux7541_BOOL:: var_is_introduced ;
var {0,1}: aux7541_INTEGER :: var_is_introduced ;
var 6..40: aux7542:: var_is_introduced ;
var bool: aux7543_BOOL:: var_is_introduced ;
var bool: aux7544_BOOL:: var_is_introduced ;
var bool: aux7545_BOOL:: var_is_introduced ;
var {0,1}: aux7545_INTEGER :: var_is_introduced ;
var 2..36: aux7546:: var_is_introduced ;
var bool: aux7547_BOOL:: var_is_introduced ;
var {0,1}: aux7547_INTEGER :: var_is_introduced ;
var 1..35: aux7548:: var_is_introduced ;
var bool: aux7549_BOOL:: var_is_introduced ;
var bool: aux7550_BOOL:: var_is_introduced ;
var bool: aux7551_BOOL:: var_is_introduced ;
var {0,1}: aux7551_INTEGER :: var_is_introduced ;
var 2..36: aux7552:: var_is_introduced ;
var bool: aux7553_BOOL:: var_is_introduced ;
var bool: aux7554_BOOL:: var_is_introduced ;
var bool: aux7555_BOOL:: var_is_introduced ;
var {0,1}: aux7555_INTEGER :: var_is_introduced ;
var 2..36: aux7556:: var_is_introduced ;
var bool: aux7557_BOOL:: var_is_introduced ;
var bool: aux7558_BOOL:: var_is_introduced ;
var bool: aux7559_BOOL:: var_is_introduced ;
var {0,1}: aux7559_INTEGER :: var_is_introduced ;
var 2..36: aux7560:: var_is_introduced ;
var bool: aux7561_BOOL:: var_is_introduced ;
var bool: aux7562_BOOL:: var_is_introduced ;
var bool: aux7563_BOOL:: var_is_introduced ;
var {0,1}: aux7563_INTEGER :: var_is_introduced ;
var 3..37: aux7564:: var_is_introduced ;
var bool: aux7565_BOOL:: var_is_introduced ;
var bool: aux7566_BOOL:: var_is_introduced ;
var bool: aux7567_BOOL:: var_is_introduced ;
var {0,1}: aux7567_INTEGER :: var_is_introduced ;
var 3..37: aux7568:: var_is_introduced ;
var bool: aux7569_BOOL:: var_is_introduced ;
var bool: aux7570_BOOL:: var_is_introduced ;
var bool: aux7571_BOOL:: var_is_introduced ;
var {0,1}: aux7571_INTEGER :: var_is_introduced ;
var 3..37: aux7572:: var_is_introduced ;
var bool: aux7573_BOOL:: var_is_introduced ;
var bool: aux7574_BOOL:: var_is_introduced ;
var bool: aux7575_BOOL:: var_is_introduced ;
var {0,1}: aux7575_INTEGER :: var_is_introduced ;
var 6..40: aux7576:: var_is_introduced ;
var bool: aux7577_BOOL:: var_is_introduced ;
var {0,1}: aux7577_INTEGER :: var_is_introduced ;
var 1..35: aux7578:: var_is_introduced ;
var bool: aux7579_BOOL:: var_is_introduced ;
var bool: aux7580_BOOL:: var_is_introduced ;
var bool: aux7581_BOOL:: var_is_introduced ;
var {0,1}: aux7581_INTEGER :: var_is_introduced ;
var 2..36: aux7582:: var_is_introduced ;
var bool: aux7583_BOOL:: var_is_introduced ;
var bool: aux7584_BOOL:: var_is_introduced ;
var bool: aux7585_BOOL:: var_is_introduced ;
var {0,1}: aux7585_INTEGER :: var_is_introduced ;
var 2..36: aux7586:: var_is_introduced ;
var bool: aux7587_BOOL:: var_is_introduced ;
var bool: aux7588_BOOL:: var_is_introduced ;
var bool: aux7589_BOOL:: var_is_introduced ;
var {0,1}: aux7589_INTEGER :: var_is_introduced ;
var 3..37: aux7590:: var_is_introduced ;
var bool: aux7591_BOOL:: var_is_introduced ;
var bool: aux7592_BOOL:: var_is_introduced ;
var bool: aux7593_BOOL:: var_is_introduced ;
var {0,1}: aux7593_INTEGER :: var_is_introduced ;
var 3..37: aux7594:: var_is_introduced ;
var bool: aux7595_BOOL:: var_is_introduced ;
var bool: aux7596_BOOL:: var_is_introduced ;
var bool: aux7597_BOOL:: var_is_introduced ;
var {0,1}: aux7597_INTEGER :: var_is_introduced ;
var 3..37: aux7598:: var_is_introduced ;
var bool: aux7599_BOOL:: var_is_introduced ;
var bool: aux7600_BOOL:: var_is_introduced ;
var bool: aux7601_BOOL:: var_is_introduced ;
var {0,1}: aux7601_INTEGER :: var_is_introduced ;
var 6..40: aux7602:: var_is_introduced ;
var bool: aux7603_BOOL:: var_is_introduced ;
var bool: aux7604_BOOL:: var_is_introduced ;
var bool: aux7605_BOOL:: var_is_introduced ;
var {0,1}: aux7605_INTEGER :: var_is_introduced ;
var 2..36: aux7606:: var_is_introduced ;
var bool: aux7607_BOOL:: var_is_introduced ;
var {0,1}: aux7607_INTEGER :: var_is_introduced ;
var 2..36: aux7608:: var_is_introduced ;
var bool: aux7609_BOOL:: var_is_introduced ;
var bool: aux7610_BOOL:: var_is_introduced ;
var bool: aux7611_BOOL:: var_is_introduced ;
var {0,1}: aux7611_INTEGER :: var_is_introduced ;
var 2..36: aux7612:: var_is_introduced ;
var bool: aux7613_BOOL:: var_is_introduced ;
var bool: aux7614_BOOL:: var_is_introduced ;
var bool: aux7615_BOOL:: var_is_introduced ;
var {0,1}: aux7615_INTEGER :: var_is_introduced ;
var 2..36: aux7616:: var_is_introduced ;
var bool: aux7617_BOOL:: var_is_introduced ;
var bool: aux7618_BOOL:: var_is_introduced ;
var bool: aux7619_BOOL:: var_is_introduced ;
var {0,1}: aux7619_INTEGER :: var_is_introduced ;
var 3..37: aux7620:: var_is_introduced ;
var bool: aux7621_BOOL:: var_is_introduced ;
var bool: aux7622_BOOL:: var_is_introduced ;
var bool: aux7623_BOOL:: var_is_introduced ;
var {0,1}: aux7623_INTEGER :: var_is_introduced ;
var 3..37: aux7624:: var_is_introduced ;
var bool: aux7625_BOOL:: var_is_introduced ;
var bool: aux7626_BOOL:: var_is_introduced ;
var bool: aux7627_BOOL:: var_is_introduced ;
var {0,1}: aux7627_INTEGER :: var_is_introduced ;
var 3..37: aux7628:: var_is_introduced ;
var bool: aux7629_BOOL:: var_is_introduced ;
var bool: aux7630_BOOL:: var_is_introduced ;
var bool: aux7631_BOOL:: var_is_introduced ;
var {0,1}: aux7631_INTEGER :: var_is_introduced ;
var 6..40: aux7632:: var_is_introduced ;
var bool: aux7633_BOOL:: var_is_introduced ;
var bool: aux7634_BOOL:: var_is_introduced ;
var bool: aux7635_BOOL:: var_is_introduced ;
var {0,1}: aux7635_INTEGER :: var_is_introduced ;
var 1..35: aux7636:: var_is_introduced ;
var bool: aux7637_BOOL:: var_is_introduced ;
var {0,1}: aux7637_INTEGER :: var_is_introduced ;
var 1..35: aux7638:: var_is_introduced ;
var bool: aux7639_BOOL:: var_is_introduced ;
var bool: aux7640_BOOL:: var_is_introduced ;
var bool: aux7641_BOOL:: var_is_introduced ;
var {0,1}: aux7641_INTEGER :: var_is_introduced ;
var 2..36: aux7642:: var_is_introduced ;
var bool: aux7643_BOOL:: var_is_introduced ;
var bool: aux7644_BOOL:: var_is_introduced ;
var bool: aux7645_BOOL:: var_is_introduced ;
var {0,1}: aux7645_INTEGER :: var_is_introduced ;
var 2..36: aux7646:: var_is_introduced ;
var bool: aux7647_BOOL:: var_is_introduced ;
var bool: aux7648_BOOL:: var_is_introduced ;
var bool: aux7649_BOOL:: var_is_introduced ;
var {0,1}: aux7649_INTEGER :: var_is_introduced ;
var 3..37: aux7650:: var_is_introduced ;
var bool: aux7651_BOOL:: var_is_introduced ;
var bool: aux7652_BOOL:: var_is_introduced ;
var bool: aux7653_BOOL:: var_is_introduced ;
var {0,1}: aux7653_INTEGER :: var_is_introduced ;
var 3..37: aux7654:: var_is_introduced ;
var bool: aux7655_BOOL:: var_is_introduced ;
var bool: aux7656_BOOL:: var_is_introduced ;
var bool: aux7657_BOOL:: var_is_introduced ;
var {0,1}: aux7657_INTEGER :: var_is_introduced ;
var 3..37: aux7658:: var_is_introduced ;
var bool: aux7659_BOOL:: var_is_introduced ;
var bool: aux7660_BOOL:: var_is_introduced ;
var bool: aux7661_BOOL:: var_is_introduced ;
var {0,1}: aux7661_INTEGER :: var_is_introduced ;
var 6..40: aux7662:: var_is_introduced ;
var bool: aux7663_BOOL:: var_is_introduced ;
var bool: aux7664_BOOL:: var_is_introduced ;
var bool: aux7665_BOOL:: var_is_introduced ;
var {0,1}: aux7665_INTEGER :: var_is_introduced ;
var 2..36: aux7666:: var_is_introduced ;
var bool: aux7667_BOOL:: var_is_introduced ;
var {0,1}: aux7667_INTEGER :: var_is_introduced ;
var 1..35: aux7668:: var_is_introduced ;
var bool: aux7669_BOOL:: var_is_introduced ;
var bool: aux7670_BOOL:: var_is_introduced ;
var bool: aux7671_BOOL:: var_is_introduced ;
var {0,1}: aux7671_INTEGER :: var_is_introduced ;
var 2..36: aux7672:: var_is_introduced ;
var bool: aux7673_BOOL:: var_is_introduced ;
var bool: aux7674_BOOL:: var_is_introduced ;
var bool: aux7675_BOOL:: var_is_introduced ;
var {0,1}: aux7675_INTEGER :: var_is_introduced ;
var 2..36: aux7676:: var_is_introduced ;
var bool: aux7677_BOOL:: var_is_introduced ;
var bool: aux7678_BOOL:: var_is_introduced ;
var bool: aux7679_BOOL:: var_is_introduced ;
var {0,1}: aux7679_INTEGER :: var_is_introduced ;
var 2..36: aux7680:: var_is_introduced ;
var bool: aux7681_BOOL:: var_is_introduced ;
var bool: aux7682_BOOL:: var_is_introduced ;
var bool: aux7683_BOOL:: var_is_introduced ;
var {0,1}: aux7683_INTEGER :: var_is_introduced ;
var 3..37: aux7684:: var_is_introduced ;
var bool: aux7685_BOOL:: var_is_introduced ;
var bool: aux7686_BOOL:: var_is_introduced ;
var bool: aux7687_BOOL:: var_is_introduced ;
var {0,1}: aux7687_INTEGER :: var_is_introduced ;
var 3..37: aux7688:: var_is_introduced ;
var bool: aux7689_BOOL:: var_is_introduced ;
var bool: aux7690_BOOL:: var_is_introduced ;
var bool: aux7691_BOOL:: var_is_introduced ;
var {0,1}: aux7691_INTEGER :: var_is_introduced ;
var 6..40: aux7692:: var_is_introduced ;
var bool: aux7693_BOOL:: var_is_introduced ;
var bool: aux7694_BOOL:: var_is_introduced ;
var bool: aux7695_BOOL:: var_is_introduced ;
var {0,1}: aux7695_INTEGER :: var_is_introduced ;
var 3..37: aux7696:: var_is_introduced ;
var bool: aux7697_BOOL:: var_is_introduced ;
var {0,1}: aux7697_INTEGER :: var_is_introduced ;
var 1..35: aux7698:: var_is_introduced ;
var bool: aux7699_BOOL:: var_is_introduced ;
var bool: aux7700_BOOL:: var_is_introduced ;
var bool: aux7701_BOOL:: var_is_introduced ;
var {0,1}: aux7701_INTEGER :: var_is_introduced ;
var 2..36: aux7702:: var_is_introduced ;
var bool: aux7703_BOOL:: var_is_introduced ;
var bool: aux7704_BOOL:: var_is_introduced ;
var bool: aux7705_BOOL:: var_is_introduced ;
var {0,1}: aux7705_INTEGER :: var_is_introduced ;
var 2..36: aux7706:: var_is_introduced ;
var bool: aux7707_BOOL:: var_is_introduced ;
var bool: aux7708_BOOL:: var_is_introduced ;
var bool: aux7709_BOOL:: var_is_introduced ;
var {0,1}: aux7709_INTEGER :: var_is_introduced ;
var 2..36: aux7710:: var_is_introduced ;
var bool: aux7711_BOOL:: var_is_introduced ;
var bool: aux7712_BOOL:: var_is_introduced ;
var bool: aux7713_BOOL:: var_is_introduced ;
var {0,1}: aux7713_INTEGER :: var_is_introduced ;
var 3..37: aux7714:: var_is_introduced ;
var bool: aux7715_BOOL:: var_is_introduced ;
var bool: aux7716_BOOL:: var_is_introduced ;
var bool: aux7717_BOOL:: var_is_introduced ;
var {0,1}: aux7717_INTEGER :: var_is_introduced ;
var 3..37: aux7718:: var_is_introduced ;
var bool: aux7719_BOOL:: var_is_introduced ;
var bool: aux7720_BOOL:: var_is_introduced ;
var bool: aux7721_BOOL:: var_is_introduced ;
var {0,1}: aux7721_INTEGER :: var_is_introduced ;
var 6..40: aux7722:: var_is_introduced ;
var bool: aux7723_BOOL:: var_is_introduced ;
var bool: aux7724_BOOL:: var_is_introduced ;
var bool: aux7725_BOOL:: var_is_introduced ;
var {0,1}: aux7725_INTEGER :: var_is_introduced ;
var 3..37: aux7726:: var_is_introduced ;
var bool: aux7727_BOOL:: var_is_introduced ;
var {0,1}: aux7727_INTEGER :: var_is_introduced ;
var 1..35: aux7728:: var_is_introduced ;
var bool: aux7729_BOOL:: var_is_introduced ;
var bool: aux7730_BOOL:: var_is_introduced ;
var bool: aux7731_BOOL:: var_is_introduced ;
var {0,1}: aux7731_INTEGER :: var_is_introduced ;
var 2..36: aux7732:: var_is_introduced ;
var bool: aux7733_BOOL:: var_is_introduced ;
var bool: aux7734_BOOL:: var_is_introduced ;
var bool: aux7735_BOOL:: var_is_introduced ;
var {0,1}: aux7735_INTEGER :: var_is_introduced ;
var 2..36: aux7736:: var_is_introduced ;
var bool: aux7737_BOOL:: var_is_introduced ;
var bool: aux7738_BOOL:: var_is_introduced ;
var bool: aux7739_BOOL:: var_is_introduced ;
var {0,1}: aux7739_INTEGER :: var_is_introduced ;
var 2..36: aux7740:: var_is_introduced ;
var bool: aux7741_BOOL:: var_is_introduced ;
var bool: aux7742_BOOL:: var_is_introduced ;
var bool: aux7743_BOOL:: var_is_introduced ;
var {0,1}: aux7743_INTEGER :: var_is_introduced ;
var 3..37: aux7744:: var_is_introduced ;
var bool: aux7745_BOOL:: var_is_introduced ;
var bool: aux7746_BOOL:: var_is_introduced ;
var bool: aux7747_BOOL:: var_is_introduced ;
var {0,1}: aux7747_INTEGER :: var_is_introduced ;
var 3..37: aux7748:: var_is_introduced ;
var bool: aux7749_BOOL:: var_is_introduced ;
var bool: aux7750_BOOL:: var_is_introduced ;
var bool: aux7751_BOOL:: var_is_introduced ;
var {0,1}: aux7751_INTEGER :: var_is_introduced ;
var 6..40: aux7752:: var_is_introduced ;
var bool: aux7753_BOOL:: var_is_introduced ;
var bool: aux7754_BOOL:: var_is_introduced ;
var bool: aux7755_BOOL:: var_is_introduced ;
var {0,1}: aux7755_INTEGER :: var_is_introduced ;
var 3..37: aux7756:: var_is_introduced ;
var bool: aux7757_BOOL:: var_is_introduced ;
var {0,1}: aux7757_INTEGER :: var_is_introduced ;
constraint bool2int(w_00001_00001_BOOL,w_00001_00001_INTEGER);
constraint bool2int(w_00001_00002_BOOL,w_00001_00002_INTEGER);
constraint bool2int(w_00001_00003_BOOL,w_00001_00003_INTEGER);
constraint bool2int(w_00001_00004_BOOL,w_00001_00004_INTEGER);
constraint bool2int(w_00001_00005_BOOL,w_00001_00005_INTEGER);
constraint bool2int(w_00001_00006_BOOL,w_00001_00006_INTEGER);
constraint bool2int(w_00001_00007_BOOL,w_00001_00007_INTEGER);
constraint bool2int(w_00001_00008_BOOL,w_00001_00008_INTEGER);
constraint bool2int(w_00001_00009_BOOL,w_00001_00009_INTEGER);
constraint bool2int(w_00001_00010_BOOL,w_00001_00010_INTEGER);
constraint bool2int(w_00001_00011_BOOL,w_00001_00011_INTEGER);
constraint bool2int(w_00001_00012_BOOL,w_00001_00012_INTEGER);
constraint bool2int(w_00001_00013_BOOL,w_00001_00013_INTEGER);
constraint bool2int(w_00001_00014_BOOL,w_00001_00014_INTEGER);
constraint bool2int(w_00002_00001_BOOL,w_00002_00001_INTEGER);
constraint bool2int(w_00002_00002_BOOL,w_00002_00002_INTEGER);
constraint bool2int(w_00002_00003_BOOL,w_00002_00003_INTEGER);
constraint bool2int(w_00002_00004_BOOL,w_00002_00004_INTEGER);
constraint bool2int(w_00002_00005_BOOL,w_00002_00005_INTEGER);
constraint bool2int(w_00002_00006_BOOL,w_00002_00006_INTEGER);
constraint bool2int(w_00002_00007_BOOL,w_00002_00007_INTEGER);
constraint bool2int(w_00002_00008_BOOL,w_00002_00008_INTEGER);
constraint bool2int(w_00002_00009_BOOL,w_00002_00009_INTEGER);
constraint bool2int(w_00002_00010_BOOL,w_00002_00010_INTEGER);
constraint bool2int(w_00002_00011_BOOL,w_00002_00011_INTEGER);
constraint bool2int(w_00002_00012_BOOL,w_00002_00012_INTEGER);
constraint bool2int(w_00002_00013_BOOL,w_00002_00013_INTEGER);
constraint bool2int(w_00002_00014_BOOL,w_00002_00014_INTEGER);
constraint bool2int(w_00003_00001_BOOL,w_00003_00001_INTEGER);
constraint bool2int(w_00003_00002_BOOL,w_00003_00002_INTEGER);
constraint bool2int(w_00003_00003_BOOL,w_00003_00003_INTEGER);
constraint bool2int(w_00003_00004_BOOL,w_00003_00004_INTEGER);
constraint bool2int(w_00003_00005_BOOL,w_00003_00005_INTEGER);
constraint bool2int(w_00003_00006_BOOL,w_00003_00006_INTEGER);
constraint bool2int(w_00003_00007_BOOL,w_00003_00007_INTEGER);
constraint bool2int(w_00003_00008_BOOL,w_00003_00008_INTEGER);
constraint bool2int(w_00003_00009_BOOL,w_00003_00009_INTEGER);
constraint bool2int(w_00003_00010_BOOL,w_00003_00010_INTEGER);
constraint bool2int(w_00003_00011_BOOL,w_00003_00011_INTEGER);
constraint bool2int(w_00003_00012_BOOL,w_00003_00012_INTEGER);
constraint bool2int(w_00003_00013_BOOL,w_00003_00013_INTEGER);
constraint bool2int(w_00003_00014_BOOL,w_00003_00014_INTEGER);
constraint bool2int(w_00004_00001_BOOL,w_00004_00001_INTEGER);
constraint bool2int(w_00004_00002_BOOL,w_00004_00002_INTEGER);
constraint bool2int(w_00004_00003_BOOL,w_00004_00003_INTEGER);
constraint bool2int(w_00004_00004_BOOL,w_00004_00004_INTEGER);
constraint bool2int(w_00004_00005_BOOL,w_00004_00005_INTEGER);
constraint bool2int(w_00004_00006_BOOL,w_00004_00006_INTEGER);
constraint bool2int(w_00004_00007_BOOL,w_00004_00007_INTEGER);
constraint bool2int(w_00004_00008_BOOL,w_00004_00008_INTEGER);
constraint bool2int(w_00004_00009_BOOL,w_00004_00009_INTEGER);
constraint bool2int(w_00004_00010_BOOL,w_00004_00010_INTEGER);
constraint bool2int(w_00004_00011_BOOL,w_00004_00011_INTEGER);
constraint bool2int(w_00004_00012_BOOL,w_00004_00012_INTEGER);
constraint bool2int(w_00004_00013_BOOL,w_00004_00013_INTEGER);
constraint bool2int(w_00004_00014_BOOL,w_00004_00014_INTEGER);
constraint bool2int(w_00005_00001_BOOL,w_00005_00001_INTEGER);
constraint bool2int(w_00005_00002_BOOL,w_00005_00002_INTEGER);
constraint bool2int(w_00005_00003_BOOL,w_00005_00003_INTEGER);
constraint bool2int(w_00005_00004_BOOL,w_00005_00004_INTEGER);
constraint bool2int(w_00005_00005_BOOL,w_00005_00005_INTEGER);
constraint bool2int(w_00005_00006_BOOL,w_00005_00006_INTEGER);
constraint bool2int(w_00005_00007_BOOL,w_00005_00007_INTEGER);
constraint bool2int(w_00005_00008_BOOL,w_00005_00008_INTEGER);
constraint bool2int(w_00005_00009_BOOL,w_00005_00009_INTEGER);
constraint bool2int(w_00005_00010_BOOL,w_00005_00010_INTEGER);
constraint bool2int(w_00005_00011_BOOL,w_00005_00011_INTEGER);
constraint bool2int(w_00005_00012_BOOL,w_00005_00012_INTEGER);
constraint bool2int(w_00005_00013_BOOL,w_00005_00013_INTEGER);
constraint bool2int(w_00005_00014_BOOL,w_00005_00014_INTEGER);
constraint bool2int(w_00006_00001_BOOL,w_00006_00001_INTEGER);
constraint bool2int(w_00006_00002_BOOL,w_00006_00002_INTEGER);
constraint bool2int(w_00006_00003_BOOL,w_00006_00003_INTEGER);
constraint bool2int(w_00006_00004_BOOL,w_00006_00004_INTEGER);
constraint bool2int(w_00006_00005_BOOL,w_00006_00005_INTEGER);
constraint bool2int(w_00006_00006_BOOL,w_00006_00006_INTEGER);
constraint bool2int(w_00006_00007_BOOL,w_00006_00007_INTEGER);
constraint bool2int(w_00006_00008_BOOL,w_00006_00008_INTEGER);
constraint bool2int(w_00006_00009_BOOL,w_00006_00009_INTEGER);
constraint bool2int(w_00006_00010_BOOL,w_00006_00010_INTEGER);
constraint bool2int(w_00006_00011_BOOL,w_00006_00011_INTEGER);
constraint bool2int(w_00006_00012_BOOL,w_00006_00012_INTEGER);
constraint bool2int(w_00006_00013_BOOL,w_00006_00013_INTEGER);
constraint bool2int(w_00006_00014_BOOL,w_00006_00014_INTEGER);
constraint bool2int(aux11_BOOL,aux11_INTEGER);
constraint bool2int(aux13_BOOL,aux13_INTEGER);
constraint bool2int(aux15_BOOL,aux15_INTEGER);
constraint bool2int(aux17_BOOL,aux17_INTEGER);
constraint bool2int(aux19_BOOL,aux19_INTEGER);
constraint bool2int(aux21_BOOL,aux21_INTEGER);
constraint bool2int(aux23_BOOL,aux23_INTEGER);
constraint bool2int(aux25_BOOL,aux25_INTEGER);
constraint bool2int(aux27_BOOL,aux27_INTEGER);
constraint bool2int(aux29_BOOL,aux29_INTEGER);
constraint bool2int(aux31_BOOL,aux31_INTEGER);
constraint bool2int(aux33_BOOL,aux33_INTEGER);
constraint bool2int(aux35_BOOL,aux35_INTEGER);
constraint bool2int(aux37_BOOL,aux37_INTEGER);
constraint bool2int(aux39_BOOL,aux39_INTEGER);
constraint bool2int(aux41_BOOL,aux41_INTEGER);
constraint bool2int(aux43_BOOL,aux43_INTEGER);
constraint bool2int(aux45_BOOL,aux45_INTEGER);
constraint bool2int(aux47_BOOL,aux47_INTEGER);
constraint bool2int(aux49_BOOL,aux49_INTEGER);
constraint bool2int(aux51_BOOL,aux51_INTEGER);
constraint bool2int(aux53_BOOL,aux53_INTEGER);
constraint bool2int(aux55_BOOL,aux55_INTEGER);
constraint bool2int(aux57_BOOL,aux57_INTEGER);
constraint bool2int(aux59_BOOL,aux59_INTEGER);
constraint bool2int(aux61_BOOL,aux61_INTEGER);
constraint bool2int(aux63_BOOL,aux63_INTEGER);
constraint bool2int(aux65_BOOL,aux65_INTEGER);
constraint bool2int(aux67_BOOL,aux67_INTEGER);
constraint bool2int(aux69_BOOL,aux69_INTEGER);
constraint bool2int(aux71_BOOL,aux71_INTEGER);
constraint bool2int(aux73_BOOL,aux73_INTEGER);
constraint bool2int(aux75_BOOL,aux75_INTEGER);
constraint bool2int(aux77_BOOL,aux77_INTEGER);
constraint bool2int(aux79_BOOL,aux79_INTEGER);
constraint bool2int(aux81_BOOL,aux81_INTEGER);
constraint bool2int(aux83_BOOL,aux83_INTEGER);
constraint bool2int(aux85_BOOL,aux85_INTEGER);
constraint bool2int(aux87_BOOL,aux87_INTEGER);
constraint bool2int(aux89_BOOL,aux89_INTEGER);
constraint bool2int(aux91_BOOL,aux91_INTEGER);
constraint bool2int(aux93_BOOL,aux93_INTEGER);
constraint bool2int(aux95_BOOL,aux95_INTEGER);
constraint bool2int(aux97_BOOL,aux97_INTEGER);
constraint bool2int(aux99_BOOL,aux99_INTEGER);
constraint bool2int(aux101_BOOL,aux101_INTEGER);
constraint bool2int(aux103_BOOL,aux103_INTEGER);
constraint bool2int(aux105_BOOL,aux105_INTEGER);
constraint bool2int(aux107_BOOL,aux107_INTEGER);
constraint bool2int(aux109_BOOL,aux109_INTEGER);
constraint bool2int(aux111_BOOL,aux111_INTEGER);
constraint bool2int(aux113_BOOL,aux113_INTEGER);
constraint bool2int(aux115_BOOL,aux115_INTEGER);
constraint bool2int(aux117_BOOL,aux117_INTEGER);
constraint bool2int(aux119_BOOL,aux119_INTEGER);
constraint bool2int(aux121_BOOL,aux121_INTEGER);
constraint bool2int(aux123_BOOL,aux123_INTEGER);
constraint bool2int(aux125_BOOL,aux125_INTEGER);
constraint bool2int(aux127_BOOL,aux127_INTEGER);
constraint bool2int(aux129_BOOL,aux129_INTEGER);
constraint bool2int(aux131_BOOL,aux131_INTEGER);
constraint bool2int(aux133_BOOL,aux133_INTEGER);
constraint bool2int(aux135_BOOL,aux135_INTEGER);
constraint bool2int(aux137_BOOL,aux137_INTEGER);
constraint bool2int(aux139_BOOL,aux139_INTEGER);
constraint bool2int(aux141_BOOL,aux141_INTEGER);
constraint bool2int(aux143_BOOL,aux143_INTEGER);
constraint bool2int(aux145_BOOL,aux145_INTEGER);
constraint bool2int(aux147_BOOL,aux147_INTEGER);
constraint bool2int(aux149_BOOL,aux149_INTEGER);
constraint bool2int(aux151_BOOL,aux151_INTEGER);
constraint bool2int(aux153_BOOL,aux153_INTEGER);
constraint bool2int(aux155_BOOL,aux155_INTEGER);
constraint bool2int(aux157_BOOL,aux157_INTEGER);
constraint bool2int(aux159_BOOL,aux159_INTEGER);
constraint bool2int(aux161_BOOL,aux161_INTEGER);
constraint bool2int(aux163_BOOL,aux163_INTEGER);
constraint bool2int(aux165_BOOL,aux165_INTEGER);
constraint bool2int(aux167_BOOL,aux167_INTEGER);
constraint bool2int(aux169_BOOL,aux169_INTEGER);
constraint bool2int(aux171_BOOL,aux171_INTEGER);
constraint bool2int(aux173_BOOL,aux173_INTEGER);
constraint bool2int(aux175_BOOL,aux175_INTEGER);
constraint bool2int(aux177_BOOL,aux177_INTEGER);
constraint bool2int(aux179_BOOL,aux179_INTEGER);
constraint bool2int(aux267_BOOL,aux267_INTEGER);
constraint bool2int(aux273_BOOL,aux273_INTEGER);
constraint bool2int(aux279_BOOL,aux279_INTEGER);
constraint bool2int(aux285_BOOL,aux285_INTEGER);
constraint bool2int(aux291_BOOL,aux291_INTEGER);
constraint bool2int(aux297_BOOL,aux297_INTEGER);
constraint bool2int(aux303_BOOL,aux303_INTEGER);
constraint bool2int(aux309_BOOL,aux309_INTEGER);
constraint bool2int(aux315_BOOL,aux315_INTEGER);
constraint bool2int(aux321_BOOL,aux321_INTEGER);
constraint bool2int(aux327_BOOL,aux327_INTEGER);
constraint bool2int(aux333_BOOL,aux333_INTEGER);
constraint bool2int(aux339_BOOL,aux339_INTEGER);
constraint bool2int(aux345_BOOL,aux345_INTEGER);
constraint bool2int(aux350_BOOL,aux350_INTEGER);
constraint bool2int(aux356_BOOL,aux356_INTEGER);
constraint bool2int(aux362_BOOL,aux362_INTEGER);
constraint bool2int(aux368_BOOL,aux368_INTEGER);
constraint bool2int(aux374_BOOL,aux374_INTEGER);
constraint bool2int(aux380_BOOL,aux380_INTEGER);
constraint bool2int(aux386_BOOL,aux386_INTEGER);
constraint bool2int(aux392_BOOL,aux392_INTEGER);
constraint bool2int(aux398_BOOL,aux398_INTEGER);
constraint bool2int(aux404_BOOL,aux404_INTEGER);
constraint bool2int(aux410_BOOL,aux410_INTEGER);
constraint bool2int(aux416_BOOL,aux416_INTEGER);
constraint bool2int(aux422_BOOL,aux422_INTEGER);
constraint bool2int(aux428_BOOL,aux428_INTEGER);
constraint bool2int(aux433_BOOL,aux433_INTEGER);
constraint bool2int(aux439_BOOL,aux439_INTEGER);
constraint bool2int(aux445_BOOL,aux445_INTEGER);
constraint bool2int(aux451_BOOL,aux451_INTEGER);
constraint bool2int(aux457_BOOL,aux457_INTEGER);
constraint bool2int(aux463_BOOL,aux463_INTEGER);
constraint bool2int(aux469_BOOL,aux469_INTEGER);
constraint bool2int(aux475_BOOL,aux475_INTEGER);
constraint bool2int(aux481_BOOL,aux481_INTEGER);
constraint bool2int(aux487_BOOL,aux487_INTEGER);
constraint bool2int(aux493_BOOL,aux493_INTEGER);
constraint bool2int(aux499_BOOL,aux499_INTEGER);
constraint bool2int(aux505_BOOL,aux505_INTEGER);
constraint bool2int(aux511_BOOL,aux511_INTEGER);
constraint bool2int(aux516_BOOL,aux516_INTEGER);
constraint bool2int(aux522_BOOL,aux522_INTEGER);
constraint bool2int(aux528_BOOL,aux528_INTEGER);
constraint bool2int(aux534_BOOL,aux534_INTEGER);
constraint bool2int(aux540_BOOL,aux540_INTEGER);
constraint bool2int(aux546_BOOL,aux546_INTEGER);
constraint bool2int(aux552_BOOL,aux552_INTEGER);
constraint bool2int(aux558_BOOL,aux558_INTEGER);
constraint bool2int(aux564_BOOL,aux564_INTEGER);
constraint bool2int(aux570_BOOL,aux570_INTEGER);
constraint bool2int(aux576_BOOL,aux576_INTEGER);
constraint bool2int(aux582_BOOL,aux582_INTEGER);
constraint bool2int(aux588_BOOL,aux588_INTEGER);
constraint bool2int(aux594_BOOL,aux594_INTEGER);
constraint bool2int(aux599_BOOL,aux599_INTEGER);
constraint bool2int(aux605_BOOL,aux605_INTEGER);
constraint bool2int(aux611_BOOL,aux611_INTEGER);
constraint bool2int(aux617_BOOL,aux617_INTEGER);
constraint bool2int(aux623_BOOL,aux623_INTEGER);
constraint bool2int(aux629_BOOL,aux629_INTEGER);
constraint bool2int(aux635_BOOL,aux635_INTEGER);
constraint bool2int(aux641_BOOL,aux641_INTEGER);
constraint bool2int(aux647_BOOL,aux647_INTEGER);
constraint bool2int(aux653_BOOL,aux653_INTEGER);
constraint bool2int(aux659_BOOL,aux659_INTEGER);
constraint bool2int(aux665_BOOL,aux665_INTEGER);
constraint bool2int(aux671_BOOL,aux671_INTEGER);
constraint bool2int(aux677_BOOL,aux677_INTEGER);
constraint bool2int(aux682_BOOL,aux682_INTEGER);
constraint bool2int(aux688_BOOL,aux688_INTEGER);
constraint bool2int(aux694_BOOL,aux694_INTEGER);
constraint bool2int(aux700_BOOL,aux700_INTEGER);
constraint bool2int(aux706_BOOL,aux706_INTEGER);
constraint bool2int(aux712_BOOL,aux712_INTEGER);
constraint bool2int(aux718_BOOL,aux718_INTEGER);
constraint bool2int(aux724_BOOL,aux724_INTEGER);
constraint bool2int(aux730_BOOL,aux730_INTEGER);
constraint bool2int(aux736_BOOL,aux736_INTEGER);
constraint bool2int(aux742_BOOL,aux742_INTEGER);
constraint bool2int(aux748_BOOL,aux748_INTEGER);
constraint bool2int(aux754_BOOL,aux754_INTEGER);
constraint bool2int(aux760_BOOL,aux760_INTEGER);
constraint bool2int(aux765_BOOL,aux765_INTEGER);
constraint bool2int(aux771_BOOL,aux771_INTEGER);
constraint bool2int(aux777_BOOL,aux777_INTEGER);
constraint bool2int(aux783_BOOL,aux783_INTEGER);
constraint bool2int(aux789_BOOL,aux789_INTEGER);
constraint bool2int(aux795_BOOL,aux795_INTEGER);
constraint bool2int(aux801_BOOL,aux801_INTEGER);
constraint bool2int(aux807_BOOL,aux807_INTEGER);
constraint bool2int(aux813_BOOL,aux813_INTEGER);
constraint bool2int(aux819_BOOL,aux819_INTEGER);
constraint bool2int(aux825_BOOL,aux825_INTEGER);
constraint bool2int(aux831_BOOL,aux831_INTEGER);
constraint bool2int(aux837_BOOL,aux837_INTEGER);
constraint bool2int(aux843_BOOL,aux843_INTEGER);
constraint bool2int(aux848_BOOL,aux848_INTEGER);
constraint bool2int(aux854_BOOL,aux854_INTEGER);
constraint bool2int(aux860_BOOL,aux860_INTEGER);
constraint bool2int(aux866_BOOL,aux866_INTEGER);
constraint bool2int(aux872_BOOL,aux872_INTEGER);
constraint bool2int(aux878_BOOL,aux878_INTEGER);
constraint bool2int(aux884_BOOL,aux884_INTEGER);
constraint bool2int(aux890_BOOL,aux890_INTEGER);
constraint bool2int(aux896_BOOL,aux896_INTEGER);
constraint bool2int(aux902_BOOL,aux902_INTEGER);
constraint bool2int(aux908_BOOL,aux908_INTEGER);
constraint bool2int(aux914_BOOL,aux914_INTEGER);
constraint bool2int(aux920_BOOL,aux920_INTEGER);
constraint bool2int(aux926_BOOL,aux926_INTEGER);
constraint bool2int(aux931_BOOL,aux931_INTEGER);
constraint bool2int(aux937_BOOL,aux937_INTEGER);
constraint bool2int(aux943_BOOL,aux943_INTEGER);
constraint bool2int(aux949_BOOL,aux949_INTEGER);
constraint bool2int(aux955_BOOL,aux955_INTEGER);
constraint bool2int(aux961_BOOL,aux961_INTEGER);
constraint bool2int(aux967_BOOL,aux967_INTEGER);
constraint bool2int(aux973_BOOL,aux973_INTEGER);
constraint bool2int(aux979_BOOL,aux979_INTEGER);
constraint bool2int(aux985_BOOL,aux985_INTEGER);
constraint bool2int(aux991_BOOL,aux991_INTEGER);
constraint bool2int(aux997_BOOL,aux997_INTEGER);
constraint bool2int(aux1003_BOOL,aux1003_INTEGER);
constraint bool2int(aux1009_BOOL,aux1009_INTEGER);
constraint bool2int(aux1014_BOOL,aux1014_INTEGER);
constraint bool2int(aux1020_BOOL,aux1020_INTEGER);
constraint bool2int(aux1026_BOOL,aux1026_INTEGER);
constraint bool2int(aux1032_BOOL,aux1032_INTEGER);
constraint bool2int(aux1038_BOOL,aux1038_INTEGER);
constraint bool2int(aux1044_BOOL,aux1044_INTEGER);
constraint bool2int(aux1050_BOOL,aux1050_INTEGER);
constraint bool2int(aux1056_BOOL,aux1056_INTEGER);
constraint bool2int(aux1062_BOOL,aux1062_INTEGER);
constraint bool2int(aux1068_BOOL,aux1068_INTEGER);
constraint bool2int(aux1074_BOOL,aux1074_INTEGER);
constraint bool2int(aux1080_BOOL,aux1080_INTEGER);
constraint bool2int(aux1086_BOOL,aux1086_INTEGER);
constraint bool2int(aux1092_BOOL,aux1092_INTEGER);
constraint bool2int(aux1097_BOOL,aux1097_INTEGER);
constraint bool2int(aux1103_BOOL,aux1103_INTEGER);
constraint bool2int(aux1109_BOOL,aux1109_INTEGER);
constraint bool2int(aux1115_BOOL,aux1115_INTEGER);
constraint bool2int(aux1121_BOOL,aux1121_INTEGER);
constraint bool2int(aux1127_BOOL,aux1127_INTEGER);
constraint bool2int(aux1133_BOOL,aux1133_INTEGER);
constraint bool2int(aux1139_BOOL,aux1139_INTEGER);
constraint bool2int(aux1145_BOOL,aux1145_INTEGER);
constraint bool2int(aux1151_BOOL,aux1151_INTEGER);
constraint bool2int(aux1157_BOOL,aux1157_INTEGER);
constraint bool2int(aux1163_BOOL,aux1163_INTEGER);
constraint bool2int(aux1169_BOOL,aux1169_INTEGER);
constraint bool2int(aux1175_BOOL,aux1175_INTEGER);
constraint bool2int(aux1180_BOOL,aux1180_INTEGER);
constraint bool2int(aux1186_BOOL,aux1186_INTEGER);
constraint bool2int(aux1192_BOOL,aux1192_INTEGER);
constraint bool2int(aux1198_BOOL,aux1198_INTEGER);
constraint bool2int(aux1204_BOOL,aux1204_INTEGER);
constraint bool2int(aux1210_BOOL,aux1210_INTEGER);
constraint bool2int(aux1216_BOOL,aux1216_INTEGER);
constraint bool2int(aux1222_BOOL,aux1222_INTEGER);
constraint bool2int(aux1228_BOOL,aux1228_INTEGER);
constraint bool2int(aux1234_BOOL,aux1234_INTEGER);
constraint bool2int(aux1240_BOOL,aux1240_INTEGER);
constraint bool2int(aux1246_BOOL,aux1246_INTEGER);
constraint bool2int(aux1252_BOOL,aux1252_INTEGER);
constraint bool2int(aux1258_BOOL,aux1258_INTEGER);
constraint bool2int(aux1263_BOOL,aux1263_INTEGER);
constraint bool2int(aux1269_BOOL,aux1269_INTEGER);
constraint bool2int(aux1275_BOOL,aux1275_INTEGER);
constraint bool2int(aux1281_BOOL,aux1281_INTEGER);
constraint bool2int(aux1287_BOOL,aux1287_INTEGER);
constraint bool2int(aux1293_BOOL,aux1293_INTEGER);
constraint bool2int(aux1299_BOOL,aux1299_INTEGER);
constraint bool2int(aux1305_BOOL,aux1305_INTEGER);
constraint bool2int(aux1311_BOOL,aux1311_INTEGER);
constraint bool2int(aux1317_BOOL,aux1317_INTEGER);
constraint bool2int(aux1323_BOOL,aux1323_INTEGER);
constraint bool2int(aux1329_BOOL,aux1329_INTEGER);
constraint bool2int(aux1335_BOOL,aux1335_INTEGER);
constraint bool2int(aux1341_BOOL,aux1341_INTEGER);
constraint bool2int(aux1346_BOOL,aux1346_INTEGER);
constraint bool2int(aux1352_BOOL,aux1352_INTEGER);
constraint bool2int(aux1358_BOOL,aux1358_INTEGER);
constraint bool2int(aux1364_BOOL,aux1364_INTEGER);
constraint bool2int(aux1370_BOOL,aux1370_INTEGER);
constraint bool2int(aux1376_BOOL,aux1376_INTEGER);
constraint bool2int(aux1382_BOOL,aux1382_INTEGER);
constraint bool2int(aux1388_BOOL,aux1388_INTEGER);
constraint bool2int(aux1394_BOOL,aux1394_INTEGER);
constraint bool2int(aux1400_BOOL,aux1400_INTEGER);
constraint bool2int(aux1406_BOOL,aux1406_INTEGER);
constraint bool2int(aux1412_BOOL,aux1412_INTEGER);
constraint bool2int(aux1418_BOOL,aux1418_INTEGER);
constraint bool2int(aux1424_BOOL,aux1424_INTEGER);
constraint bool2int(aux1431_BOOL,aux1431_INTEGER);
constraint bool2int(aux1437_BOOL,aux1437_INTEGER);
constraint bool2int(aux1443_BOOL,aux1443_INTEGER);
constraint bool2int(aux1449_BOOL,aux1449_INTEGER);
constraint bool2int(aux1455_BOOL,aux1455_INTEGER);
constraint bool2int(aux1461_BOOL,aux1461_INTEGER);
constraint bool2int(aux1467_BOOL,aux1467_INTEGER);
constraint bool2int(aux1473_BOOL,aux1473_INTEGER);
constraint bool2int(aux1479_BOOL,aux1479_INTEGER);
constraint bool2int(aux1485_BOOL,aux1485_INTEGER);
constraint bool2int(aux1491_BOOL,aux1491_INTEGER);
constraint bool2int(aux1497_BOOL,aux1497_INTEGER);
constraint bool2int(aux1503_BOOL,aux1503_INTEGER);
constraint bool2int(aux1509_BOOL,aux1509_INTEGER);
constraint bool2int(aux1514_BOOL,aux1514_INTEGER);
constraint bool2int(aux1520_BOOL,aux1520_INTEGER);
constraint bool2int(aux1526_BOOL,aux1526_INTEGER);
constraint bool2int(aux1532_BOOL,aux1532_INTEGER);
constraint bool2int(aux1538_BOOL,aux1538_INTEGER);
constraint bool2int(aux1544_BOOL,aux1544_INTEGER);
constraint bool2int(aux1550_BOOL,aux1550_INTEGER);
constraint bool2int(aux1556_BOOL,aux1556_INTEGER);
constraint bool2int(aux1562_BOOL,aux1562_INTEGER);
constraint bool2int(aux1568_BOOL,aux1568_INTEGER);
constraint bool2int(aux1574_BOOL,aux1574_INTEGER);
constraint bool2int(aux1580_BOOL,aux1580_INTEGER);
constraint bool2int(aux1586_BOOL,aux1586_INTEGER);
constraint bool2int(aux1592_BOOL,aux1592_INTEGER);
constraint bool2int(aux1597_BOOL,aux1597_INTEGER);
constraint bool2int(aux1603_BOOL,aux1603_INTEGER);
constraint bool2int(aux1609_BOOL,aux1609_INTEGER);
constraint bool2int(aux1615_BOOL,aux1615_INTEGER);
constraint bool2int(aux1621_BOOL,aux1621_INTEGER);
constraint bool2int(aux1627_BOOL,aux1627_INTEGER);
constraint bool2int(aux1633_BOOL,aux1633_INTEGER);
constraint bool2int(aux1639_BOOL,aux1639_INTEGER);
constraint bool2int(aux1645_BOOL,aux1645_INTEGER);
constraint bool2int(aux1651_BOOL,aux1651_INTEGER);
constraint bool2int(aux1657_BOOL,aux1657_INTEGER);
constraint bool2int(aux1663_BOOL,aux1663_INTEGER);
constraint bool2int(aux1669_BOOL,aux1669_INTEGER);
constraint bool2int(aux1675_BOOL,aux1675_INTEGER);
constraint bool2int(aux1680_BOOL,aux1680_INTEGER);
constraint bool2int(aux1686_BOOL,aux1686_INTEGER);
constraint bool2int(aux1692_BOOL,aux1692_INTEGER);
constraint bool2int(aux1698_BOOL,aux1698_INTEGER);
constraint bool2int(aux1704_BOOL,aux1704_INTEGER);
constraint bool2int(aux1710_BOOL,aux1710_INTEGER);
constraint bool2int(aux1716_BOOL,aux1716_INTEGER);
constraint bool2int(aux1722_BOOL,aux1722_INTEGER);
constraint bool2int(aux1728_BOOL,aux1728_INTEGER);
constraint bool2int(aux1734_BOOL,aux1734_INTEGER);
constraint bool2int(aux1740_BOOL,aux1740_INTEGER);
constraint bool2int(aux1746_BOOL,aux1746_INTEGER);
constraint bool2int(aux1752_BOOL,aux1752_INTEGER);
constraint bool2int(aux1758_BOOL,aux1758_INTEGER);
constraint bool2int(aux1763_BOOL,aux1763_INTEGER);
constraint bool2int(aux1769_BOOL,aux1769_INTEGER);
constraint bool2int(aux1775_BOOL,aux1775_INTEGER);
constraint bool2int(aux1781_BOOL,aux1781_INTEGER);
constraint bool2int(aux1787_BOOL,aux1787_INTEGER);
constraint bool2int(aux1793_BOOL,aux1793_INTEGER);
constraint bool2int(aux1799_BOOL,aux1799_INTEGER);
constraint bool2int(aux1805_BOOL,aux1805_INTEGER);
constraint bool2int(aux1811_BOOL,aux1811_INTEGER);
constraint bool2int(aux1817_BOOL,aux1817_INTEGER);
constraint bool2int(aux1823_BOOL,aux1823_INTEGER);
constraint bool2int(aux1829_BOOL,aux1829_INTEGER);
constraint bool2int(aux1835_BOOL,aux1835_INTEGER);
constraint bool2int(aux1841_BOOL,aux1841_INTEGER);
constraint bool2int(aux1846_BOOL,aux1846_INTEGER);
constraint bool2int(aux1852_BOOL,aux1852_INTEGER);
constraint bool2int(aux1858_BOOL,aux1858_INTEGER);
constraint bool2int(aux1864_BOOL,aux1864_INTEGER);
constraint bool2int(aux1870_BOOL,aux1870_INTEGER);
constraint bool2int(aux1876_BOOL,aux1876_INTEGER);
constraint bool2int(aux1882_BOOL,aux1882_INTEGER);
constraint bool2int(aux1888_BOOL,aux1888_INTEGER);
constraint bool2int(aux1894_BOOL,aux1894_INTEGER);
constraint bool2int(aux1900_BOOL,aux1900_INTEGER);
constraint bool2int(aux1906_BOOL,aux1906_INTEGER);
constraint bool2int(aux1912_BOOL,aux1912_INTEGER);
constraint bool2int(aux1918_BOOL,aux1918_INTEGER);
constraint bool2int(aux1924_BOOL,aux1924_INTEGER);
constraint bool2int(aux1929_BOOL,aux1929_INTEGER);
constraint bool2int(aux1935_BOOL,aux1935_INTEGER);
constraint bool2int(aux1941_BOOL,aux1941_INTEGER);
constraint bool2int(aux1947_BOOL,aux1947_INTEGER);
constraint bool2int(aux1953_BOOL,aux1953_INTEGER);
constraint bool2int(aux1959_BOOL,aux1959_INTEGER);
constraint bool2int(aux1965_BOOL,aux1965_INTEGER);
constraint bool2int(aux1971_BOOL,aux1971_INTEGER);
constraint bool2int(aux1977_BOOL,aux1977_INTEGER);
constraint bool2int(aux1983_BOOL,aux1983_INTEGER);
constraint bool2int(aux1989_BOOL,aux1989_INTEGER);
constraint bool2int(aux1995_BOOL,aux1995_INTEGER);
constraint bool2int(aux2001_BOOL,aux2001_INTEGER);
constraint bool2int(aux2007_BOOL,aux2007_INTEGER);
constraint bool2int(aux2012_BOOL,aux2012_INTEGER);
constraint bool2int(aux2018_BOOL,aux2018_INTEGER);
constraint bool2int(aux2024_BOOL,aux2024_INTEGER);
constraint bool2int(aux2030_BOOL,aux2030_INTEGER);
constraint bool2int(aux2036_BOOL,aux2036_INTEGER);
constraint bool2int(aux2042_BOOL,aux2042_INTEGER);
constraint bool2int(aux2048_BOOL,aux2048_INTEGER);
constraint bool2int(aux2054_BOOL,aux2054_INTEGER);
constraint bool2int(aux2060_BOOL,aux2060_INTEGER);
constraint bool2int(aux2066_BOOL,aux2066_INTEGER);
constraint bool2int(aux2072_BOOL,aux2072_INTEGER);
constraint bool2int(aux2078_BOOL,aux2078_INTEGER);
constraint bool2int(aux2084_BOOL,aux2084_INTEGER);
constraint bool2int(aux2090_BOOL,aux2090_INTEGER);
constraint bool2int(aux2095_BOOL,aux2095_INTEGER);
constraint bool2int(aux2101_BOOL,aux2101_INTEGER);
constraint bool2int(aux2107_BOOL,aux2107_INTEGER);
constraint bool2int(aux2113_BOOL,aux2113_INTEGER);
constraint bool2int(aux2119_BOOL,aux2119_INTEGER);
constraint bool2int(aux2125_BOOL,aux2125_INTEGER);
constraint bool2int(aux2131_BOOL,aux2131_INTEGER);
constraint bool2int(aux2137_BOOL,aux2137_INTEGER);
constraint bool2int(aux2143_BOOL,aux2143_INTEGER);
constraint bool2int(aux2149_BOOL,aux2149_INTEGER);
constraint bool2int(aux2155_BOOL,aux2155_INTEGER);
constraint bool2int(aux2161_BOOL,aux2161_INTEGER);
constraint bool2int(aux2167_BOOL,aux2167_INTEGER);
constraint bool2int(aux2173_BOOL,aux2173_INTEGER);
constraint bool2int(aux2178_BOOL,aux2178_INTEGER);
constraint bool2int(aux2184_BOOL,aux2184_INTEGER);
constraint bool2int(aux2190_BOOL,aux2190_INTEGER);
constraint bool2int(aux2196_BOOL,aux2196_INTEGER);
constraint bool2int(aux2202_BOOL,aux2202_INTEGER);
constraint bool2int(aux2208_BOOL,aux2208_INTEGER);
constraint bool2int(aux2214_BOOL,aux2214_INTEGER);
constraint bool2int(aux2220_BOOL,aux2220_INTEGER);
constraint bool2int(aux2226_BOOL,aux2226_INTEGER);
constraint bool2int(aux2232_BOOL,aux2232_INTEGER);
constraint bool2int(aux2238_BOOL,aux2238_INTEGER);
constraint bool2int(aux2244_BOOL,aux2244_INTEGER);
constraint bool2int(aux2250_BOOL,aux2250_INTEGER);
constraint bool2int(aux2256_BOOL,aux2256_INTEGER);
constraint bool2int(aux2261_BOOL,aux2261_INTEGER);
constraint bool2int(aux2267_BOOL,aux2267_INTEGER);
constraint bool2int(aux2273_BOOL,aux2273_INTEGER);
constraint bool2int(aux2279_BOOL,aux2279_INTEGER);
constraint bool2int(aux2285_BOOL,aux2285_INTEGER);
constraint bool2int(aux2291_BOOL,aux2291_INTEGER);
constraint bool2int(aux2297_BOOL,aux2297_INTEGER);
constraint bool2int(aux2303_BOOL,aux2303_INTEGER);
constraint bool2int(aux2309_BOOL,aux2309_INTEGER);
constraint bool2int(aux2315_BOOL,aux2315_INTEGER);
constraint bool2int(aux2321_BOOL,aux2321_INTEGER);
constraint bool2int(aux2327_BOOL,aux2327_INTEGER);
constraint bool2int(aux2333_BOOL,aux2333_INTEGER);
constraint bool2int(aux2339_BOOL,aux2339_INTEGER);
constraint bool2int(aux2344_BOOL,aux2344_INTEGER);
constraint bool2int(aux2350_BOOL,aux2350_INTEGER);
constraint bool2int(aux2356_BOOL,aux2356_INTEGER);
constraint bool2int(aux2362_BOOL,aux2362_INTEGER);
constraint bool2int(aux2368_BOOL,aux2368_INTEGER);
constraint bool2int(aux2374_BOOL,aux2374_INTEGER);
constraint bool2int(aux2380_BOOL,aux2380_INTEGER);
constraint bool2int(aux2386_BOOL,aux2386_INTEGER);
constraint bool2int(aux2392_BOOL,aux2392_INTEGER);
constraint bool2int(aux2398_BOOL,aux2398_INTEGER);
constraint bool2int(aux2404_BOOL,aux2404_INTEGER);
constraint bool2int(aux2410_BOOL,aux2410_INTEGER);
constraint bool2int(aux2416_BOOL,aux2416_INTEGER);
constraint bool2int(aux2422_BOOL,aux2422_INTEGER);
constraint bool2int(aux2427_BOOL,aux2427_INTEGER);
constraint bool2int(aux2433_BOOL,aux2433_INTEGER);
constraint bool2int(aux2439_BOOL,aux2439_INTEGER);
constraint bool2int(aux2445_BOOL,aux2445_INTEGER);
constraint bool2int(aux2451_BOOL,aux2451_INTEGER);
constraint bool2int(aux2457_BOOL,aux2457_INTEGER);
constraint bool2int(aux2463_BOOL,aux2463_INTEGER);
constraint bool2int(aux2469_BOOL,aux2469_INTEGER);
constraint bool2int(aux2475_BOOL,aux2475_INTEGER);
constraint bool2int(aux2481_BOOL,aux2481_INTEGER);
constraint bool2int(aux2487_BOOL,aux2487_INTEGER);
constraint bool2int(aux2493_BOOL,aux2493_INTEGER);
constraint bool2int(aux2499_BOOL,aux2499_INTEGER);
constraint bool2int(aux2505_BOOL,aux2505_INTEGER);
constraint bool2int(aux2510_BOOL,aux2510_INTEGER);
constraint bool2int(aux2516_BOOL,aux2516_INTEGER);
constraint bool2int(aux2522_BOOL,aux2522_INTEGER);
constraint bool2int(aux2528_BOOL,aux2528_INTEGER);
constraint bool2int(aux2534_BOOL,aux2534_INTEGER);
constraint bool2int(aux2540_BOOL,aux2540_INTEGER);
constraint bool2int(aux2546_BOOL,aux2546_INTEGER);
constraint bool2int(aux2552_BOOL,aux2552_INTEGER);
constraint bool2int(aux2558_BOOL,aux2558_INTEGER);
constraint bool2int(aux2564_BOOL,aux2564_INTEGER);
constraint bool2int(aux2570_BOOL,aux2570_INTEGER);
constraint bool2int(aux2576_BOOL,aux2576_INTEGER);
constraint bool2int(aux2582_BOOL,aux2582_INTEGER);
constraint bool2int(aux2588_BOOL,aux2588_INTEGER);
constraint bool2int(aux2598_BOOL,aux2598_INTEGER);
constraint bool2int(aux2604_BOOL,aux2604_INTEGER);
constraint bool2int(aux2610_BOOL,aux2610_INTEGER);
constraint bool2int(aux2616_BOOL,aux2616_INTEGER);
constraint bool2int(aux2622_BOOL,aux2622_INTEGER);
constraint bool2int(aux2628_BOOL,aux2628_INTEGER);
constraint bool2int(aux2634_BOOL,aux2634_INTEGER);
constraint bool2int(aux2640_BOOL,aux2640_INTEGER);
constraint bool2int(aux2646_BOOL,aux2646_INTEGER);
constraint bool2int(aux2652_BOOL,aux2652_INTEGER);
constraint bool2int(aux2658_BOOL,aux2658_INTEGER);
constraint bool2int(aux2664_BOOL,aux2664_INTEGER);
constraint bool2int(aux2670_BOOL,aux2670_INTEGER);
constraint bool2int(aux2674_BOOL,aux2674_INTEGER);
constraint bool2int(aux2681_BOOL,aux2681_INTEGER);
constraint bool2int(aux2687_BOOL,aux2687_INTEGER);
constraint bool2int(aux2693_BOOL,aux2693_INTEGER);
constraint bool2int(aux2699_BOOL,aux2699_INTEGER);
constraint bool2int(aux2705_BOOL,aux2705_INTEGER);
constraint bool2int(aux2711_BOOL,aux2711_INTEGER);
constraint bool2int(aux2717_BOOL,aux2717_INTEGER);
constraint bool2int(aux2723_BOOL,aux2723_INTEGER);
constraint bool2int(aux2729_BOOL,aux2729_INTEGER);
constraint bool2int(aux2735_BOOL,aux2735_INTEGER);
constraint bool2int(aux2741_BOOL,aux2741_INTEGER);
constraint bool2int(aux2747_BOOL,aux2747_INTEGER);
constraint bool2int(aux2753_BOOL,aux2753_INTEGER);
constraint bool2int(aux2757_BOOL,aux2757_INTEGER);
constraint bool2int(aux2764_BOOL,aux2764_INTEGER);
constraint bool2int(aux2770_BOOL,aux2770_INTEGER);
constraint bool2int(aux2776_BOOL,aux2776_INTEGER);
constraint bool2int(aux2782_BOOL,aux2782_INTEGER);
constraint bool2int(aux2788_BOOL,aux2788_INTEGER);
constraint bool2int(aux2794_BOOL,aux2794_INTEGER);
constraint bool2int(aux2800_BOOL,aux2800_INTEGER);
constraint bool2int(aux2806_BOOL,aux2806_INTEGER);
constraint bool2int(aux2812_BOOL,aux2812_INTEGER);
constraint bool2int(aux2818_BOOL,aux2818_INTEGER);
constraint bool2int(aux2824_BOOL,aux2824_INTEGER);
constraint bool2int(aux2830_BOOL,aux2830_INTEGER);
constraint bool2int(aux2836_BOOL,aux2836_INTEGER);
constraint bool2int(aux2840_BOOL,aux2840_INTEGER);
constraint bool2int(aux2847_BOOL,aux2847_INTEGER);
constraint bool2int(aux2853_BOOL,aux2853_INTEGER);
constraint bool2int(aux2859_BOOL,aux2859_INTEGER);
constraint bool2int(aux2865_BOOL,aux2865_INTEGER);
constraint bool2int(aux2871_BOOL,aux2871_INTEGER);
constraint bool2int(aux2877_BOOL,aux2877_INTEGER);
constraint bool2int(aux2883_BOOL,aux2883_INTEGER);
constraint bool2int(aux2889_BOOL,aux2889_INTEGER);
constraint bool2int(aux2895_BOOL,aux2895_INTEGER);
constraint bool2int(aux2901_BOOL,aux2901_INTEGER);
constraint bool2int(aux2907_BOOL,aux2907_INTEGER);
constraint bool2int(aux2913_BOOL,aux2913_INTEGER);
constraint bool2int(aux2919_BOOL,aux2919_INTEGER);
constraint bool2int(aux2923_BOOL,aux2923_INTEGER);
constraint bool2int(aux2930_BOOL,aux2930_INTEGER);
constraint bool2int(aux2936_BOOL,aux2936_INTEGER);
constraint bool2int(aux2942_BOOL,aux2942_INTEGER);
constraint bool2int(aux2948_BOOL,aux2948_INTEGER);
constraint bool2int(aux2954_BOOL,aux2954_INTEGER);
constraint bool2int(aux2960_BOOL,aux2960_INTEGER);
constraint bool2int(aux2966_BOOL,aux2966_INTEGER);
constraint bool2int(aux2972_BOOL,aux2972_INTEGER);
constraint bool2int(aux2978_BOOL,aux2978_INTEGER);
constraint bool2int(aux2984_BOOL,aux2984_INTEGER);
constraint bool2int(aux2990_BOOL,aux2990_INTEGER);
constraint bool2int(aux2996_BOOL,aux2996_INTEGER);
constraint bool2int(aux3002_BOOL,aux3002_INTEGER);
constraint bool2int(aux3006_BOOL,aux3006_INTEGER);
constraint bool2int(aux3013_BOOL,aux3013_INTEGER);
constraint bool2int(aux3019_BOOL,aux3019_INTEGER);
constraint bool2int(aux3025_BOOL,aux3025_INTEGER);
constraint bool2int(aux3031_BOOL,aux3031_INTEGER);
constraint bool2int(aux3037_BOOL,aux3037_INTEGER);
constraint bool2int(aux3043_BOOL,aux3043_INTEGER);
constraint bool2int(aux3049_BOOL,aux3049_INTEGER);
constraint bool2int(aux3055_BOOL,aux3055_INTEGER);
constraint bool2int(aux3061_BOOL,aux3061_INTEGER);
constraint bool2int(aux3067_BOOL,aux3067_INTEGER);
constraint bool2int(aux3073_BOOL,aux3073_INTEGER);
constraint bool2int(aux3079_BOOL,aux3079_INTEGER);
constraint bool2int(aux3085_BOOL,aux3085_INTEGER);
constraint bool2int(aux3089_BOOL,aux3089_INTEGER);
constraint bool2int(aux3096_BOOL,aux3096_INTEGER);
constraint bool2int(aux3102_BOOL,aux3102_INTEGER);
constraint bool2int(aux3108_BOOL,aux3108_INTEGER);
constraint bool2int(aux3114_BOOL,aux3114_INTEGER);
constraint bool2int(aux3120_BOOL,aux3120_INTEGER);
constraint bool2int(aux3126_BOOL,aux3126_INTEGER);
constraint bool2int(aux3132_BOOL,aux3132_INTEGER);
constraint bool2int(aux3138_BOOL,aux3138_INTEGER);
constraint bool2int(aux3144_BOOL,aux3144_INTEGER);
constraint bool2int(aux3150_BOOL,aux3150_INTEGER);
constraint bool2int(aux3156_BOOL,aux3156_INTEGER);
constraint bool2int(aux3162_BOOL,aux3162_INTEGER);
constraint bool2int(aux3168_BOOL,aux3168_INTEGER);
constraint bool2int(aux3172_BOOL,aux3172_INTEGER);
constraint bool2int(aux3179_BOOL,aux3179_INTEGER);
constraint bool2int(aux3185_BOOL,aux3185_INTEGER);
constraint bool2int(aux3191_BOOL,aux3191_INTEGER);
constraint bool2int(aux3197_BOOL,aux3197_INTEGER);
constraint bool2int(aux3203_BOOL,aux3203_INTEGER);
constraint bool2int(aux3209_BOOL,aux3209_INTEGER);
constraint bool2int(aux3215_BOOL,aux3215_INTEGER);
constraint bool2int(aux3221_BOOL,aux3221_INTEGER);
constraint bool2int(aux3227_BOOL,aux3227_INTEGER);
constraint bool2int(aux3233_BOOL,aux3233_INTEGER);
constraint bool2int(aux3239_BOOL,aux3239_INTEGER);
constraint bool2int(aux3245_BOOL,aux3245_INTEGER);
constraint bool2int(aux3251_BOOL,aux3251_INTEGER);
constraint bool2int(aux3255_BOOL,aux3255_INTEGER);
constraint bool2int(aux3262_BOOL,aux3262_INTEGER);
constraint bool2int(aux3268_BOOL,aux3268_INTEGER);
constraint bool2int(aux3274_BOOL,aux3274_INTEGER);
constraint bool2int(aux3280_BOOL,aux3280_INTEGER);
constraint bool2int(aux3286_BOOL,aux3286_INTEGER);
constraint bool2int(aux3292_BOOL,aux3292_INTEGER);
constraint bool2int(aux3298_BOOL,aux3298_INTEGER);
constraint bool2int(aux3304_BOOL,aux3304_INTEGER);
constraint bool2int(aux3310_BOOL,aux3310_INTEGER);
constraint bool2int(aux3316_BOOL,aux3316_INTEGER);
constraint bool2int(aux3322_BOOL,aux3322_INTEGER);
constraint bool2int(aux3328_BOOL,aux3328_INTEGER);
constraint bool2int(aux3334_BOOL,aux3334_INTEGER);
constraint bool2int(aux3338_BOOL,aux3338_INTEGER);
constraint bool2int(aux3345_BOOL,aux3345_INTEGER);
constraint bool2int(aux3351_BOOL,aux3351_INTEGER);
constraint bool2int(aux3357_BOOL,aux3357_INTEGER);
constraint bool2int(aux3363_BOOL,aux3363_INTEGER);
constraint bool2int(aux3369_BOOL,aux3369_INTEGER);
constraint bool2int(aux3375_BOOL,aux3375_INTEGER);
constraint bool2int(aux3381_BOOL,aux3381_INTEGER);
constraint bool2int(aux3387_BOOL,aux3387_INTEGER);
constraint bool2int(aux3393_BOOL,aux3393_INTEGER);
constraint bool2int(aux3399_BOOL,aux3399_INTEGER);
constraint bool2int(aux3405_BOOL,aux3405_INTEGER);
constraint bool2int(aux3411_BOOL,aux3411_INTEGER);
constraint bool2int(aux3417_BOOL,aux3417_INTEGER);
constraint bool2int(aux3421_BOOL,aux3421_INTEGER);
constraint bool2int(aux3428_BOOL,aux3428_INTEGER);
constraint bool2int(aux3434_BOOL,aux3434_INTEGER);
constraint bool2int(aux3440_BOOL,aux3440_INTEGER);
constraint bool2int(aux3446_BOOL,aux3446_INTEGER);
constraint bool2int(aux3452_BOOL,aux3452_INTEGER);
constraint bool2int(aux3458_BOOL,aux3458_INTEGER);
constraint bool2int(aux3464_BOOL,aux3464_INTEGER);
constraint bool2int(aux3470_BOOL,aux3470_INTEGER);
constraint bool2int(aux3476_BOOL,aux3476_INTEGER);
constraint bool2int(aux3482_BOOL,aux3482_INTEGER);
constraint bool2int(aux3488_BOOL,aux3488_INTEGER);
constraint bool2int(aux3494_BOOL,aux3494_INTEGER);
constraint bool2int(aux3500_BOOL,aux3500_INTEGER);
constraint bool2int(aux3504_BOOL,aux3504_INTEGER);
constraint bool2int(aux3511_BOOL,aux3511_INTEGER);
constraint bool2int(aux3517_BOOL,aux3517_INTEGER);
constraint bool2int(aux3523_BOOL,aux3523_INTEGER);
constraint bool2int(aux3529_BOOL,aux3529_INTEGER);
constraint bool2int(aux3535_BOOL,aux3535_INTEGER);
constraint bool2int(aux3541_BOOL,aux3541_INTEGER);
constraint bool2int(aux3547_BOOL,aux3547_INTEGER);
constraint bool2int(aux3553_BOOL,aux3553_INTEGER);
constraint bool2int(aux3559_BOOL,aux3559_INTEGER);
constraint bool2int(aux3565_BOOL,aux3565_INTEGER);
constraint bool2int(aux3571_BOOL,aux3571_INTEGER);
constraint bool2int(aux3577_BOOL,aux3577_INTEGER);
constraint bool2int(aux3583_BOOL,aux3583_INTEGER);
constraint bool2int(aux3587_BOOL,aux3587_INTEGER);
constraint bool2int(aux3594_BOOL,aux3594_INTEGER);
constraint bool2int(aux3600_BOOL,aux3600_INTEGER);
constraint bool2int(aux3606_BOOL,aux3606_INTEGER);
constraint bool2int(aux3612_BOOL,aux3612_INTEGER);
constraint bool2int(aux3618_BOOL,aux3618_INTEGER);
constraint bool2int(aux3624_BOOL,aux3624_INTEGER);
constraint bool2int(aux3630_BOOL,aux3630_INTEGER);
constraint bool2int(aux3636_BOOL,aux3636_INTEGER);
constraint bool2int(aux3642_BOOL,aux3642_INTEGER);
constraint bool2int(aux3648_BOOL,aux3648_INTEGER);
constraint bool2int(aux3654_BOOL,aux3654_INTEGER);
constraint bool2int(aux3660_BOOL,aux3660_INTEGER);
constraint bool2int(aux3666_BOOL,aux3666_INTEGER);
constraint bool2int(aux3670_BOOL,aux3670_INTEGER);
constraint bool2int(aux3677_BOOL,aux3677_INTEGER);
constraint bool2int(aux3683_BOOL,aux3683_INTEGER);
constraint bool2int(aux3689_BOOL,aux3689_INTEGER);
constraint bool2int(aux3695_BOOL,aux3695_INTEGER);
constraint bool2int(aux3701_BOOL,aux3701_INTEGER);
constraint bool2int(aux3707_BOOL,aux3707_INTEGER);
constraint bool2int(aux3713_BOOL,aux3713_INTEGER);
constraint bool2int(aux3719_BOOL,aux3719_INTEGER);
constraint bool2int(aux3725_BOOL,aux3725_INTEGER);
constraint bool2int(aux3731_BOOL,aux3731_INTEGER);
constraint bool2int(aux3737_BOOL,aux3737_INTEGER);
constraint bool2int(aux3743_BOOL,aux3743_INTEGER);
constraint bool2int(aux3749_BOOL,aux3749_INTEGER);
constraint bool2int(aux3753_BOOL,aux3753_INTEGER);
constraint bool2int(aux3762_BOOL,aux3762_INTEGER);
constraint bool2int(aux3768_BOOL,aux3768_INTEGER);
constraint bool2int(aux3774_BOOL,aux3774_INTEGER);
constraint bool2int(aux3780_BOOL,aux3780_INTEGER);
constraint bool2int(aux3784_BOOL,aux3784_INTEGER);
constraint bool2int(aux3790_BOOL,aux3790_INTEGER);
constraint bool2int(aux3796_BOOL,aux3796_INTEGER);
constraint bool2int(aux3802_BOOL,aux3802_INTEGER);
constraint bool2int(aux3808_BOOL,aux3808_INTEGER);
constraint bool2int(aux3814_BOOL,aux3814_INTEGER);
constraint bool2int(aux3820_BOOL,aux3820_INTEGER);
constraint bool2int(aux3826_BOOL,aux3826_INTEGER);
constraint bool2int(aux3832_BOOL,aux3832_INTEGER);
constraint bool2int(aux3838_BOOL,aux3838_INTEGER);
constraint bool2int(aux3843_BOOL,aux3843_INTEGER);
constraint bool2int(aux3849_BOOL,aux3849_INTEGER);
constraint bool2int(aux3855_BOOL,aux3855_INTEGER);
constraint bool2int(aux3861_BOOL,aux3861_INTEGER);
constraint bool2int(aux3867_BOOL,aux3867_INTEGER);
constraint bool2int(aux3873_BOOL,aux3873_INTEGER);
constraint bool2int(aux3879_BOOL,aux3879_INTEGER);
constraint bool2int(aux3885_BOOL,aux3885_INTEGER);
constraint bool2int(aux3891_BOOL,aux3891_INTEGER);
constraint bool2int(aux3897_BOOL,aux3897_INTEGER);
constraint bool2int(aux3903_BOOL,aux3903_INTEGER);
constraint bool2int(aux3909_BOOL,aux3909_INTEGER);
constraint bool2int(aux3915_BOOL,aux3915_INTEGER);
constraint bool2int(aux3921_BOOL,aux3921_INTEGER);
constraint bool2int(aux3926_BOOL,aux3926_INTEGER);
constraint bool2int(aux3932_BOOL,aux3932_INTEGER);
constraint bool2int(aux3938_BOOL,aux3938_INTEGER);
constraint bool2int(aux3944_BOOL,aux3944_INTEGER);
constraint bool2int(aux3950_BOOL,aux3950_INTEGER);
constraint bool2int(aux3956_BOOL,aux3956_INTEGER);
constraint bool2int(aux3962_BOOL,aux3962_INTEGER);
constraint bool2int(aux3968_BOOL,aux3968_INTEGER);
constraint bool2int(aux3974_BOOL,aux3974_INTEGER);
constraint bool2int(aux3980_BOOL,aux3980_INTEGER);
constraint bool2int(aux3986_BOOL,aux3986_INTEGER);
constraint bool2int(aux3992_BOOL,aux3992_INTEGER);
constraint bool2int(aux3998_BOOL,aux3998_INTEGER);
constraint bool2int(aux4004_BOOL,aux4004_INTEGER);
constraint bool2int(aux4011_BOOL,aux4011_INTEGER);
constraint bool2int(aux4017_BOOL,aux4017_INTEGER);
constraint bool2int(aux4023_BOOL,aux4023_INTEGER);
constraint bool2int(aux4029_BOOL,aux4029_INTEGER);
constraint bool2int(aux4033_BOOL,aux4033_INTEGER);
constraint bool2int(aux4039_BOOL,aux4039_INTEGER);
constraint bool2int(aux4045_BOOL,aux4045_INTEGER);
constraint bool2int(aux4051_BOOL,aux4051_INTEGER);
constraint bool2int(aux4057_BOOL,aux4057_INTEGER);
constraint bool2int(aux4063_BOOL,aux4063_INTEGER);
constraint bool2int(aux4069_BOOL,aux4069_INTEGER);
constraint bool2int(aux4075_BOOL,aux4075_INTEGER);
constraint bool2int(aux4081_BOOL,aux4081_INTEGER);
constraint bool2int(aux4087_BOOL,aux4087_INTEGER);
constraint bool2int(aux4092_BOOL,aux4092_INTEGER);
constraint bool2int(aux4098_BOOL,aux4098_INTEGER);
constraint bool2int(aux4104_BOOL,aux4104_INTEGER);
constraint bool2int(aux4110_BOOL,aux4110_INTEGER);
constraint bool2int(aux4116_BOOL,aux4116_INTEGER);
constraint bool2int(aux4122_BOOL,aux4122_INTEGER);
constraint bool2int(aux4128_BOOL,aux4128_INTEGER);
constraint bool2int(aux4134_BOOL,aux4134_INTEGER);
constraint bool2int(aux4140_BOOL,aux4140_INTEGER);
constraint bool2int(aux4146_BOOL,aux4146_INTEGER);
constraint bool2int(aux4152_BOOL,aux4152_INTEGER);
constraint bool2int(aux4158_BOOL,aux4158_INTEGER);
constraint bool2int(aux4164_BOOL,aux4164_INTEGER);
constraint bool2int(aux4170_BOOL,aux4170_INTEGER);
constraint bool2int(aux4177_BOOL,aux4177_INTEGER);
constraint bool2int(aux4183_BOOL,aux4183_INTEGER);
constraint bool2int(aux4189_BOOL,aux4189_INTEGER);
constraint bool2int(aux4195_BOOL,aux4195_INTEGER);
constraint bool2int(aux4199_BOOL,aux4199_INTEGER);
constraint bool2int(aux4205_BOOL,aux4205_INTEGER);
constraint bool2int(aux4211_BOOL,aux4211_INTEGER);
constraint bool2int(aux4217_BOOL,aux4217_INTEGER);
constraint bool2int(aux4223_BOOL,aux4223_INTEGER);
constraint bool2int(aux4229_BOOL,aux4229_INTEGER);
constraint bool2int(aux4235_BOOL,aux4235_INTEGER);
constraint bool2int(aux4241_BOOL,aux4241_INTEGER);
constraint bool2int(aux4247_BOOL,aux4247_INTEGER);
constraint bool2int(aux4253_BOOL,aux4253_INTEGER);
constraint bool2int(aux4258_BOOL,aux4258_INTEGER);
constraint bool2int(aux4264_BOOL,aux4264_INTEGER);
constraint bool2int(aux4270_BOOL,aux4270_INTEGER);
constraint bool2int(aux4276_BOOL,aux4276_INTEGER);
constraint bool2int(aux4282_BOOL,aux4282_INTEGER);
constraint bool2int(aux4288_BOOL,aux4288_INTEGER);
constraint bool2int(aux4294_BOOL,aux4294_INTEGER);
constraint bool2int(aux4300_BOOL,aux4300_INTEGER);
constraint bool2int(aux4306_BOOL,aux4306_INTEGER);
constraint bool2int(aux4312_BOOL,aux4312_INTEGER);
constraint bool2int(aux4318_BOOL,aux4318_INTEGER);
constraint bool2int(aux4324_BOOL,aux4324_INTEGER);
constraint bool2int(aux4330_BOOL,aux4330_INTEGER);
constraint bool2int(aux4336_BOOL,aux4336_INTEGER);
constraint bool2int(aux4341_BOOL,aux4341_INTEGER);
constraint bool2int(aux4347_BOOL,aux4347_INTEGER);
constraint bool2int(aux4353_BOOL,aux4353_INTEGER);
constraint bool2int(aux4359_BOOL,aux4359_INTEGER);
constraint bool2int(aux4365_BOOL,aux4365_INTEGER);
constraint bool2int(aux4371_BOOL,aux4371_INTEGER);
constraint bool2int(aux4377_BOOL,aux4377_INTEGER);
constraint bool2int(aux4383_BOOL,aux4383_INTEGER);
constraint bool2int(aux4389_BOOL,aux4389_INTEGER);
constraint bool2int(aux4395_BOOL,aux4395_INTEGER);
constraint bool2int(aux4401_BOOL,aux4401_INTEGER);
constraint bool2int(aux4407_BOOL,aux4407_INTEGER);
constraint bool2int(aux4413_BOOL,aux4413_INTEGER);
constraint bool2int(aux4419_BOOL,aux4419_INTEGER);
constraint bool2int(aux4426_BOOL,aux4426_INTEGER);
constraint bool2int(aux4432_BOOL,aux4432_INTEGER);
constraint bool2int(aux4438_BOOL,aux4438_INTEGER);
constraint bool2int(aux4444_BOOL,aux4444_INTEGER);
constraint bool2int(aux4448_BOOL,aux4448_INTEGER);
constraint bool2int(aux4454_BOOL,aux4454_INTEGER);
constraint bool2int(aux4460_BOOL,aux4460_INTEGER);
constraint bool2int(aux4466_BOOL,aux4466_INTEGER);
constraint bool2int(aux4472_BOOL,aux4472_INTEGER);
constraint bool2int(aux4478_BOOL,aux4478_INTEGER);
constraint bool2int(aux4484_BOOL,aux4484_INTEGER);
constraint bool2int(aux4490_BOOL,aux4490_INTEGER);
constraint bool2int(aux4496_BOOL,aux4496_INTEGER);
constraint bool2int(aux4502_BOOL,aux4502_INTEGER);
constraint bool2int(aux4507_BOOL,aux4507_INTEGER);
constraint bool2int(aux4513_BOOL,aux4513_INTEGER);
constraint bool2int(aux4519_BOOL,aux4519_INTEGER);
constraint bool2int(aux4525_BOOL,aux4525_INTEGER);
constraint bool2int(aux4531_BOOL,aux4531_INTEGER);
constraint bool2int(aux4537_BOOL,aux4537_INTEGER);
constraint bool2int(aux4543_BOOL,aux4543_INTEGER);
constraint bool2int(aux4549_BOOL,aux4549_INTEGER);
constraint bool2int(aux4555_BOOL,aux4555_INTEGER);
constraint bool2int(aux4561_BOOL,aux4561_INTEGER);
constraint bool2int(aux4567_BOOL,aux4567_INTEGER);
constraint bool2int(aux4573_BOOL,aux4573_INTEGER);
constraint bool2int(aux4579_BOOL,aux4579_INTEGER);
constraint bool2int(aux4585_BOOL,aux4585_INTEGER);
constraint bool2int(aux4590_BOOL,aux4590_INTEGER);
constraint bool2int(aux4596_BOOL,aux4596_INTEGER);
constraint bool2int(aux4602_BOOL,aux4602_INTEGER);
constraint bool2int(aux4608_BOOL,aux4608_INTEGER);
constraint bool2int(aux4614_BOOL,aux4614_INTEGER);
constraint bool2int(aux4620_BOOL,aux4620_INTEGER);
constraint bool2int(aux4626_BOOL,aux4626_INTEGER);
constraint bool2int(aux4632_BOOL,aux4632_INTEGER);
constraint bool2int(aux4638_BOOL,aux4638_INTEGER);
constraint bool2int(aux4644_BOOL,aux4644_INTEGER);
constraint bool2int(aux4650_BOOL,aux4650_INTEGER);
constraint bool2int(aux4656_BOOL,aux4656_INTEGER);
constraint bool2int(aux4662_BOOL,aux4662_INTEGER);
constraint bool2int(aux4668_BOOL,aux4668_INTEGER);
constraint bool2int(aux4673_BOOL,aux4673_INTEGER);
constraint bool2int(aux4679_BOOL,aux4679_INTEGER);
constraint bool2int(aux4685_BOOL,aux4685_INTEGER);
constraint bool2int(aux4691_BOOL,aux4691_INTEGER);
constraint bool2int(aux4697_BOOL,aux4697_INTEGER);
constraint bool2int(aux4703_BOOL,aux4703_INTEGER);
constraint bool2int(aux4709_BOOL,aux4709_INTEGER);
constraint bool2int(aux4715_BOOL,aux4715_INTEGER);
constraint bool2int(aux4721_BOOL,aux4721_INTEGER);
constraint bool2int(aux4727_BOOL,aux4727_INTEGER);
constraint bool2int(aux4733_BOOL,aux4733_INTEGER);
constraint bool2int(aux4739_BOOL,aux4739_INTEGER);
constraint bool2int(aux4745_BOOL,aux4745_INTEGER);
constraint bool2int(aux4751_BOOL,aux4751_INTEGER);
constraint bool2int(aux4758_BOOL,aux4758_INTEGER);
constraint bool2int(aux4764_BOOL,aux4764_INTEGER);
constraint bool2int(aux4770_BOOL,aux4770_INTEGER);
constraint bool2int(aux4776_BOOL,aux4776_INTEGER);
constraint bool2int(aux4780_BOOL,aux4780_INTEGER);
constraint bool2int(aux4786_BOOL,aux4786_INTEGER);
constraint bool2int(aux4792_BOOL,aux4792_INTEGER);
constraint bool2int(aux4798_BOOL,aux4798_INTEGER);
constraint bool2int(aux4804_BOOL,aux4804_INTEGER);
constraint bool2int(aux4810_BOOL,aux4810_INTEGER);
constraint bool2int(aux4816_BOOL,aux4816_INTEGER);
constraint bool2int(aux4822_BOOL,aux4822_INTEGER);
constraint bool2int(aux4828_BOOL,aux4828_INTEGER);
constraint bool2int(aux4834_BOOL,aux4834_INTEGER);
constraint bool2int(aux4839_BOOL,aux4839_INTEGER);
constraint bool2int(aux4845_BOOL,aux4845_INTEGER);
constraint bool2int(aux4851_BOOL,aux4851_INTEGER);
constraint bool2int(aux4857_BOOL,aux4857_INTEGER);
constraint bool2int(aux4863_BOOL,aux4863_INTEGER);
constraint bool2int(aux4869_BOOL,aux4869_INTEGER);
constraint bool2int(aux4875_BOOL,aux4875_INTEGER);
constraint bool2int(aux4881_BOOL,aux4881_INTEGER);
constraint bool2int(aux4887_BOOL,aux4887_INTEGER);
constraint bool2int(aux4893_BOOL,aux4893_INTEGER);
constraint bool2int(aux4899_BOOL,aux4899_INTEGER);
constraint bool2int(aux4905_BOOL,aux4905_INTEGER);
constraint bool2int(aux4911_BOOL,aux4911_INTEGER);
constraint bool2int(aux4917_BOOL,aux4917_INTEGER);
constraint bool2int(aux4926_BOOL,aux4926_INTEGER);
constraint bool2int(aux4932_BOOL,aux4932_INTEGER);
constraint bool2int(aux4938_BOOL,aux4938_INTEGER);
constraint bool2int(aux4944_BOOL,aux4944_INTEGER);
constraint bool2int(aux4950_BOOL,aux4950_INTEGER);
constraint bool2int(aux4956_BOOL,aux4956_INTEGER);
constraint bool2int(aux4962_BOOL,aux4962_INTEGER);
constraint bool2int(aux4968_BOOL,aux4968_INTEGER);
constraint bool2int(aux4974_BOOL,aux4974_INTEGER);
constraint bool2int(aux4980_BOOL,aux4980_INTEGER);
constraint bool2int(aux4986_BOOL,aux4986_INTEGER);
constraint bool2int(aux4992_BOOL,aux4992_INTEGER);
constraint bool2int(aux4998_BOOL,aux4998_INTEGER);
constraint bool2int(aux5002_BOOL,aux5002_INTEGER);
constraint bool2int(aux5009_BOOL,aux5009_INTEGER);
constraint bool2int(aux5015_BOOL,aux5015_INTEGER);
constraint bool2int(aux5021_BOOL,aux5021_INTEGER);
constraint bool2int(aux5027_BOOL,aux5027_INTEGER);
constraint bool2int(aux5033_BOOL,aux5033_INTEGER);
constraint bool2int(aux5039_BOOL,aux5039_INTEGER);
constraint bool2int(aux5045_BOOL,aux5045_INTEGER);
constraint bool2int(aux5051_BOOL,aux5051_INTEGER);
constraint bool2int(aux5057_BOOL,aux5057_INTEGER);
constraint bool2int(aux5063_BOOL,aux5063_INTEGER);
constraint bool2int(aux5069_BOOL,aux5069_INTEGER);
constraint bool2int(aux5075_BOOL,aux5075_INTEGER);
constraint bool2int(aux5081_BOOL,aux5081_INTEGER);
constraint bool2int(aux5085_BOOL,aux5085_INTEGER);
constraint bool2int(aux5092_BOOL,aux5092_INTEGER);
constraint bool2int(aux5098_BOOL,aux5098_INTEGER);
constraint bool2int(aux5104_BOOL,aux5104_INTEGER);
constraint bool2int(aux5110_BOOL,aux5110_INTEGER);
constraint bool2int(aux5116_BOOL,aux5116_INTEGER);
constraint bool2int(aux5122_BOOL,aux5122_INTEGER);
constraint bool2int(aux5128_BOOL,aux5128_INTEGER);
constraint bool2int(aux5134_BOOL,aux5134_INTEGER);
constraint bool2int(aux5140_BOOL,aux5140_INTEGER);
constraint bool2int(aux5146_BOOL,aux5146_INTEGER);
constraint bool2int(aux5152_BOOL,aux5152_INTEGER);
constraint bool2int(aux5158_BOOL,aux5158_INTEGER);
constraint bool2int(aux5164_BOOL,aux5164_INTEGER);
constraint bool2int(aux5168_BOOL,aux5168_INTEGER);
constraint bool2int(aux5175_BOOL,aux5175_INTEGER);
constraint bool2int(aux5181_BOOL,aux5181_INTEGER);
constraint bool2int(aux5187_BOOL,aux5187_INTEGER);
constraint bool2int(aux5193_BOOL,aux5193_INTEGER);
constraint bool2int(aux5199_BOOL,aux5199_INTEGER);
constraint bool2int(aux5205_BOOL,aux5205_INTEGER);
constraint bool2int(aux5211_BOOL,aux5211_INTEGER);
constraint bool2int(aux5217_BOOL,aux5217_INTEGER);
constraint bool2int(aux5223_BOOL,aux5223_INTEGER);
constraint bool2int(aux5229_BOOL,aux5229_INTEGER);
constraint bool2int(aux5235_BOOL,aux5235_INTEGER);
constraint bool2int(aux5241_BOOL,aux5241_INTEGER);
constraint bool2int(aux5247_BOOL,aux5247_INTEGER);
constraint bool2int(aux5251_BOOL,aux5251_INTEGER);
constraint bool2int(aux5258_BOOL,aux5258_INTEGER);
constraint bool2int(aux5264_BOOL,aux5264_INTEGER);
constraint bool2int(aux5270_BOOL,aux5270_INTEGER);
constraint bool2int(aux5276_BOOL,aux5276_INTEGER);
constraint bool2int(aux5282_BOOL,aux5282_INTEGER);
constraint bool2int(aux5288_BOOL,aux5288_INTEGER);
constraint bool2int(aux5294_BOOL,aux5294_INTEGER);
constraint bool2int(aux5300_BOOL,aux5300_INTEGER);
constraint bool2int(aux5306_BOOL,aux5306_INTEGER);
constraint bool2int(aux5312_BOOL,aux5312_INTEGER);
constraint bool2int(aux5318_BOOL,aux5318_INTEGER);
constraint bool2int(aux5324_BOOL,aux5324_INTEGER);
constraint bool2int(aux5330_BOOL,aux5330_INTEGER);
constraint bool2int(aux5334_BOOL,aux5334_INTEGER);
constraint bool2int(aux5341_BOOL,aux5341_INTEGER);
constraint bool2int(aux5347_BOOL,aux5347_INTEGER);
constraint bool2int(aux5353_BOOL,aux5353_INTEGER);
constraint bool2int(aux5359_BOOL,aux5359_INTEGER);
constraint bool2int(aux5365_BOOL,aux5365_INTEGER);
constraint bool2int(aux5371_BOOL,aux5371_INTEGER);
constraint bool2int(aux5377_BOOL,aux5377_INTEGER);
constraint bool2int(aux5383_BOOL,aux5383_INTEGER);
constraint bool2int(aux5389_BOOL,aux5389_INTEGER);
constraint bool2int(aux5395_BOOL,aux5395_INTEGER);
constraint bool2int(aux5401_BOOL,aux5401_INTEGER);
constraint bool2int(aux5407_BOOL,aux5407_INTEGER);
constraint bool2int(aux5413_BOOL,aux5413_INTEGER);
constraint bool2int(aux5417_BOOL,aux5417_INTEGER);
constraint bool2int(aux5424_BOOL,aux5424_INTEGER);
constraint bool2int(aux5430_BOOL,aux5430_INTEGER);
constraint bool2int(aux5436_BOOL,aux5436_INTEGER);
constraint bool2int(aux5442_BOOL,aux5442_INTEGER);
constraint bool2int(aux5448_BOOL,aux5448_INTEGER);
constraint bool2int(aux5454_BOOL,aux5454_INTEGER);
constraint bool2int(aux5460_BOOL,aux5460_INTEGER);
constraint bool2int(aux5466_BOOL,aux5466_INTEGER);
constraint bool2int(aux5472_BOOL,aux5472_INTEGER);
constraint bool2int(aux5478_BOOL,aux5478_INTEGER);
constraint bool2int(aux5484_BOOL,aux5484_INTEGER);
constraint bool2int(aux5490_BOOL,aux5490_INTEGER);
constraint bool2int(aux5496_BOOL,aux5496_INTEGER);
constraint bool2int(aux5500_BOOL,aux5500_INTEGER);
constraint bool2int(aux5507_BOOL,aux5507_INTEGER);
constraint bool2int(aux5513_BOOL,aux5513_INTEGER);
constraint bool2int(aux5519_BOOL,aux5519_INTEGER);
constraint bool2int(aux5525_BOOL,aux5525_INTEGER);
constraint bool2int(aux5531_BOOL,aux5531_INTEGER);
constraint bool2int(aux5537_BOOL,aux5537_INTEGER);
constraint bool2int(aux5543_BOOL,aux5543_INTEGER);
constraint bool2int(aux5549_BOOL,aux5549_INTEGER);
constraint bool2int(aux5555_BOOL,aux5555_INTEGER);
constraint bool2int(aux5561_BOOL,aux5561_INTEGER);
constraint bool2int(aux5567_BOOL,aux5567_INTEGER);
constraint bool2int(aux5573_BOOL,aux5573_INTEGER);
constraint bool2int(aux5579_BOOL,aux5579_INTEGER);
constraint bool2int(aux5583_BOOL,aux5583_INTEGER);
constraint bool2int(aux5590_BOOL,aux5590_INTEGER);
constraint bool2int(aux5596_BOOL,aux5596_INTEGER);
constraint bool2int(aux5602_BOOL,aux5602_INTEGER);
constraint bool2int(aux5608_BOOL,aux5608_INTEGER);
constraint bool2int(aux5614_BOOL,aux5614_INTEGER);
constraint bool2int(aux5620_BOOL,aux5620_INTEGER);
constraint bool2int(aux5626_BOOL,aux5626_INTEGER);
constraint bool2int(aux5632_BOOL,aux5632_INTEGER);
constraint bool2int(aux5638_BOOL,aux5638_INTEGER);
constraint bool2int(aux5644_BOOL,aux5644_INTEGER);
constraint bool2int(aux5650_BOOL,aux5650_INTEGER);
constraint bool2int(aux5656_BOOL,aux5656_INTEGER);
constraint bool2int(aux5662_BOOL,aux5662_INTEGER);
constraint bool2int(aux5666_BOOL,aux5666_INTEGER);
constraint bool2int(aux5673_BOOL,aux5673_INTEGER);
constraint bool2int(aux5679_BOOL,aux5679_INTEGER);
constraint bool2int(aux5685_BOOL,aux5685_INTEGER);
constraint bool2int(aux5691_BOOL,aux5691_INTEGER);
constraint bool2int(aux5697_BOOL,aux5697_INTEGER);
constraint bool2int(aux5703_BOOL,aux5703_INTEGER);
constraint bool2int(aux5709_BOOL,aux5709_INTEGER);
constraint bool2int(aux5715_BOOL,aux5715_INTEGER);
constraint bool2int(aux5721_BOOL,aux5721_INTEGER);
constraint bool2int(aux5727_BOOL,aux5727_INTEGER);
constraint bool2int(aux5733_BOOL,aux5733_INTEGER);
constraint bool2int(aux5739_BOOL,aux5739_INTEGER);
constraint bool2int(aux5745_BOOL,aux5745_INTEGER);
constraint bool2int(aux5749_BOOL,aux5749_INTEGER);
constraint bool2int(aux5756_BOOL,aux5756_INTEGER);
constraint bool2int(aux5762_BOOL,aux5762_INTEGER);
constraint bool2int(aux5768_BOOL,aux5768_INTEGER);
constraint bool2int(aux5774_BOOL,aux5774_INTEGER);
constraint bool2int(aux5780_BOOL,aux5780_INTEGER);
constraint bool2int(aux5786_BOOL,aux5786_INTEGER);
constraint bool2int(aux5792_BOOL,aux5792_INTEGER);
constraint bool2int(aux5798_BOOL,aux5798_INTEGER);
constraint bool2int(aux5804_BOOL,aux5804_INTEGER);
constraint bool2int(aux5810_BOOL,aux5810_INTEGER);
constraint bool2int(aux5816_BOOL,aux5816_INTEGER);
constraint bool2int(aux5822_BOOL,aux5822_INTEGER);
constraint bool2int(aux5828_BOOL,aux5828_INTEGER);
constraint bool2int(aux5832_BOOL,aux5832_INTEGER);
constraint bool2int(aux5839_BOOL,aux5839_INTEGER);
constraint bool2int(aux5845_BOOL,aux5845_INTEGER);
constraint bool2int(aux5851_BOOL,aux5851_INTEGER);
constraint bool2int(aux5857_BOOL,aux5857_INTEGER);
constraint bool2int(aux5863_BOOL,aux5863_INTEGER);
constraint bool2int(aux5869_BOOL,aux5869_INTEGER);
constraint bool2int(aux5875_BOOL,aux5875_INTEGER);
constraint bool2int(aux5881_BOOL,aux5881_INTEGER);
constraint bool2int(aux5887_BOOL,aux5887_INTEGER);
constraint bool2int(aux5893_BOOL,aux5893_INTEGER);
constraint bool2int(aux5899_BOOL,aux5899_INTEGER);
constraint bool2int(aux5905_BOOL,aux5905_INTEGER);
constraint bool2int(aux5911_BOOL,aux5911_INTEGER);
constraint bool2int(aux5915_BOOL,aux5915_INTEGER);
constraint bool2int(aux5922_BOOL,aux5922_INTEGER);
constraint bool2int(aux5928_BOOL,aux5928_INTEGER);
constraint bool2int(aux5934_BOOL,aux5934_INTEGER);
constraint bool2int(aux5940_BOOL,aux5940_INTEGER);
constraint bool2int(aux5946_BOOL,aux5946_INTEGER);
constraint bool2int(aux5952_BOOL,aux5952_INTEGER);
constraint bool2int(aux5958_BOOL,aux5958_INTEGER);
constraint bool2int(aux5964_BOOL,aux5964_INTEGER);
constraint bool2int(aux5970_BOOL,aux5970_INTEGER);
constraint bool2int(aux5976_BOOL,aux5976_INTEGER);
constraint bool2int(aux5982_BOOL,aux5982_INTEGER);
constraint bool2int(aux5988_BOOL,aux5988_INTEGER);
constraint bool2int(aux5994_BOOL,aux5994_INTEGER);
constraint bool2int(aux5998_BOOL,aux5998_INTEGER);
constraint bool2int(aux6005_BOOL,aux6005_INTEGER);
constraint bool2int(aux6011_BOOL,aux6011_INTEGER);
constraint bool2int(aux6017_BOOL,aux6017_INTEGER);
constraint bool2int(aux6023_BOOL,aux6023_INTEGER);
constraint bool2int(aux6029_BOOL,aux6029_INTEGER);
constraint bool2int(aux6035_BOOL,aux6035_INTEGER);
constraint bool2int(aux6041_BOOL,aux6041_INTEGER);
constraint bool2int(aux6047_BOOL,aux6047_INTEGER);
constraint bool2int(aux6053_BOOL,aux6053_INTEGER);
constraint bool2int(aux6059_BOOL,aux6059_INTEGER);
constraint bool2int(aux6065_BOOL,aux6065_INTEGER);
constraint bool2int(aux6071_BOOL,aux6071_INTEGER);
constraint bool2int(aux6077_BOOL,aux6077_INTEGER);
constraint bool2int(aux6081_BOOL,aux6081_INTEGER);
constraint bool2int(aux6090_BOOL,aux6090_INTEGER);
constraint bool2int(aux6096_BOOL,aux6096_INTEGER);
constraint bool2int(aux6102_BOOL,aux6102_INTEGER);
constraint bool2int(aux6108_BOOL,aux6108_INTEGER);
constraint bool2int(aux6114_BOOL,aux6114_INTEGER);
constraint bool2int(aux6120_BOOL,aux6120_INTEGER);
constraint bool2int(aux6126_BOOL,aux6126_INTEGER);
constraint bool2int(aux6132_BOOL,aux6132_INTEGER);
constraint bool2int(aux6138_BOOL,aux6138_INTEGER);
constraint bool2int(aux6144_BOOL,aux6144_INTEGER);
constraint bool2int(aux6150_BOOL,aux6150_INTEGER);
constraint bool2int(aux6156_BOOL,aux6156_INTEGER);
constraint bool2int(aux6162_BOOL,aux6162_INTEGER);
constraint bool2int(aux6166_BOOL,aux6166_INTEGER);
constraint bool2int(aux6173_BOOL,aux6173_INTEGER);
constraint bool2int(aux6179_BOOL,aux6179_INTEGER);
constraint bool2int(aux6185_BOOL,aux6185_INTEGER);
constraint bool2int(aux6191_BOOL,aux6191_INTEGER);
constraint bool2int(aux6197_BOOL,aux6197_INTEGER);
constraint bool2int(aux6203_BOOL,aux6203_INTEGER);
constraint bool2int(aux6209_BOOL,aux6209_INTEGER);
constraint bool2int(aux6215_BOOL,aux6215_INTEGER);
constraint bool2int(aux6221_BOOL,aux6221_INTEGER);
constraint bool2int(aux6227_BOOL,aux6227_INTEGER);
constraint bool2int(aux6233_BOOL,aux6233_INTEGER);
constraint bool2int(aux6239_BOOL,aux6239_INTEGER);
constraint bool2int(aux6245_BOOL,aux6245_INTEGER);
constraint bool2int(aux6249_BOOL,aux6249_INTEGER);
constraint bool2int(aux6256_BOOL,aux6256_INTEGER);
constraint bool2int(aux6262_BOOL,aux6262_INTEGER);
constraint bool2int(aux6268_BOOL,aux6268_INTEGER);
constraint bool2int(aux6274_BOOL,aux6274_INTEGER);
constraint bool2int(aux6280_BOOL,aux6280_INTEGER);
constraint bool2int(aux6286_BOOL,aux6286_INTEGER);
constraint bool2int(aux6292_BOOL,aux6292_INTEGER);
constraint bool2int(aux6298_BOOL,aux6298_INTEGER);
constraint bool2int(aux6304_BOOL,aux6304_INTEGER);
constraint bool2int(aux6310_BOOL,aux6310_INTEGER);
constraint bool2int(aux6316_BOOL,aux6316_INTEGER);
constraint bool2int(aux6322_BOOL,aux6322_INTEGER);
constraint bool2int(aux6328_BOOL,aux6328_INTEGER);
constraint bool2int(aux6332_BOOL,aux6332_INTEGER);
constraint bool2int(aux6339_BOOL,aux6339_INTEGER);
constraint bool2int(aux6345_BOOL,aux6345_INTEGER);
constraint bool2int(aux6351_BOOL,aux6351_INTEGER);
constraint bool2int(aux6357_BOOL,aux6357_INTEGER);
constraint bool2int(aux6363_BOOL,aux6363_INTEGER);
constraint bool2int(aux6369_BOOL,aux6369_INTEGER);
constraint bool2int(aux6375_BOOL,aux6375_INTEGER);
constraint bool2int(aux6381_BOOL,aux6381_INTEGER);
constraint bool2int(aux6387_BOOL,aux6387_INTEGER);
constraint bool2int(aux6393_BOOL,aux6393_INTEGER);
constraint bool2int(aux6399_BOOL,aux6399_INTEGER);
constraint bool2int(aux6405_BOOL,aux6405_INTEGER);
constraint bool2int(aux6411_BOOL,aux6411_INTEGER);
constraint bool2int(aux6415_BOOL,aux6415_INTEGER);
constraint bool2int(aux6422_BOOL,aux6422_INTEGER);
constraint bool2int(aux6428_BOOL,aux6428_INTEGER);
constraint bool2int(aux6434_BOOL,aux6434_INTEGER);
constraint bool2int(aux6440_BOOL,aux6440_INTEGER);
constraint bool2int(aux6446_BOOL,aux6446_INTEGER);
constraint bool2int(aux6452_BOOL,aux6452_INTEGER);
constraint bool2int(aux6458_BOOL,aux6458_INTEGER);
constraint bool2int(aux6464_BOOL,aux6464_INTEGER);
constraint bool2int(aux6470_BOOL,aux6470_INTEGER);
constraint bool2int(aux6476_BOOL,aux6476_INTEGER);
constraint bool2int(aux6482_BOOL,aux6482_INTEGER);
constraint bool2int(aux6488_BOOL,aux6488_INTEGER);
constraint bool2int(aux6494_BOOL,aux6494_INTEGER);
constraint bool2int(aux6498_BOOL,aux6498_INTEGER);
constraint bool2int(aux6505_BOOL,aux6505_INTEGER);
constraint bool2int(aux6511_BOOL,aux6511_INTEGER);
constraint bool2int(aux6517_BOOL,aux6517_INTEGER);
constraint bool2int(aux6523_BOOL,aux6523_INTEGER);
constraint bool2int(aux6529_BOOL,aux6529_INTEGER);
constraint bool2int(aux6535_BOOL,aux6535_INTEGER);
constraint bool2int(aux6541_BOOL,aux6541_INTEGER);
constraint bool2int(aux6547_BOOL,aux6547_INTEGER);
constraint bool2int(aux6553_BOOL,aux6553_INTEGER);
constraint bool2int(aux6559_BOOL,aux6559_INTEGER);
constraint bool2int(aux6565_BOOL,aux6565_INTEGER);
constraint bool2int(aux6571_BOOL,aux6571_INTEGER);
constraint bool2int(aux6577_BOOL,aux6577_INTEGER);
constraint bool2int(aux6581_BOOL,aux6581_INTEGER);
constraint bool2int(aux6588_BOOL,aux6588_INTEGER);
constraint bool2int(aux6594_BOOL,aux6594_INTEGER);
constraint bool2int(aux6600_BOOL,aux6600_INTEGER);
constraint bool2int(aux6606_BOOL,aux6606_INTEGER);
constraint bool2int(aux6612_BOOL,aux6612_INTEGER);
constraint bool2int(aux6618_BOOL,aux6618_INTEGER);
constraint bool2int(aux6624_BOOL,aux6624_INTEGER);
constraint bool2int(aux6630_BOOL,aux6630_INTEGER);
constraint bool2int(aux6636_BOOL,aux6636_INTEGER);
constraint bool2int(aux6642_BOOL,aux6642_INTEGER);
constraint bool2int(aux6648_BOOL,aux6648_INTEGER);
constraint bool2int(aux6654_BOOL,aux6654_INTEGER);
constraint bool2int(aux6660_BOOL,aux6660_INTEGER);
constraint bool2int(aux6664_BOOL,aux6664_INTEGER);
constraint bool2int(aux6671_BOOL,aux6671_INTEGER);
constraint bool2int(aux6677_BOOL,aux6677_INTEGER);
constraint bool2int(aux6683_BOOL,aux6683_INTEGER);
constraint bool2int(aux6689_BOOL,aux6689_INTEGER);
constraint bool2int(aux6695_BOOL,aux6695_INTEGER);
constraint bool2int(aux6701_BOOL,aux6701_INTEGER);
constraint bool2int(aux6707_BOOL,aux6707_INTEGER);
constraint bool2int(aux6713_BOOL,aux6713_INTEGER);
constraint bool2int(aux6719_BOOL,aux6719_INTEGER);
constraint bool2int(aux6725_BOOL,aux6725_INTEGER);
constraint bool2int(aux6731_BOOL,aux6731_INTEGER);
constraint bool2int(aux6737_BOOL,aux6737_INTEGER);
constraint bool2int(aux6743_BOOL,aux6743_INTEGER);
constraint bool2int(aux6747_BOOL,aux6747_INTEGER);
constraint bool2int(aux6754_BOOL,aux6754_INTEGER);
constraint bool2int(aux6760_BOOL,aux6760_INTEGER);
constraint bool2int(aux6766_BOOL,aux6766_INTEGER);
constraint bool2int(aux6772_BOOL,aux6772_INTEGER);
constraint bool2int(aux6778_BOOL,aux6778_INTEGER);
constraint bool2int(aux6784_BOOL,aux6784_INTEGER);
constraint bool2int(aux6790_BOOL,aux6790_INTEGER);
constraint bool2int(aux6796_BOOL,aux6796_INTEGER);
constraint bool2int(aux6802_BOOL,aux6802_INTEGER);
constraint bool2int(aux6808_BOOL,aux6808_INTEGER);
constraint bool2int(aux6814_BOOL,aux6814_INTEGER);
constraint bool2int(aux6820_BOOL,aux6820_INTEGER);
constraint bool2int(aux6826_BOOL,aux6826_INTEGER);
constraint bool2int(aux6830_BOOL,aux6830_INTEGER);
constraint bool2int(aux6837_BOOL,aux6837_INTEGER);
constraint bool2int(aux6843_BOOL,aux6843_INTEGER);
constraint bool2int(aux6849_BOOL,aux6849_INTEGER);
constraint bool2int(aux6855_BOOL,aux6855_INTEGER);
constraint bool2int(aux6861_BOOL,aux6861_INTEGER);
constraint bool2int(aux6867_BOOL,aux6867_INTEGER);
constraint bool2int(aux6873_BOOL,aux6873_INTEGER);
constraint bool2int(aux6879_BOOL,aux6879_INTEGER);
constraint bool2int(aux6885_BOOL,aux6885_INTEGER);
constraint bool2int(aux6891_BOOL,aux6891_INTEGER);
constraint bool2int(aux6897_BOOL,aux6897_INTEGER);
constraint bool2int(aux6903_BOOL,aux6903_INTEGER);
constraint bool2int(aux6909_BOOL,aux6909_INTEGER);
constraint bool2int(aux6913_BOOL,aux6913_INTEGER);
constraint bool2int(aux6920_BOOL,aux6920_INTEGER);
constraint bool2int(aux6926_BOOL,aux6926_INTEGER);
constraint bool2int(aux6932_BOOL,aux6932_INTEGER);
constraint bool2int(aux6938_BOOL,aux6938_INTEGER);
constraint bool2int(aux6944_BOOL,aux6944_INTEGER);
constraint bool2int(aux6950_BOOL,aux6950_INTEGER);
constraint bool2int(aux6956_BOOL,aux6956_INTEGER);
constraint bool2int(aux6962_BOOL,aux6962_INTEGER);
constraint bool2int(aux6968_BOOL,aux6968_INTEGER);
constraint bool2int(aux6974_BOOL,aux6974_INTEGER);
constraint bool2int(aux6980_BOOL,aux6980_INTEGER);
constraint bool2int(aux6986_BOOL,aux6986_INTEGER);
constraint bool2int(aux6992_BOOL,aux6992_INTEGER);
constraint bool2int(aux6996_BOOL,aux6996_INTEGER);
constraint bool2int(aux7003_BOOL,aux7003_INTEGER);
constraint bool2int(aux7009_BOOL,aux7009_INTEGER);
constraint bool2int(aux7015_BOOL,aux7015_INTEGER);
constraint bool2int(aux7021_BOOL,aux7021_INTEGER);
constraint bool2int(aux7027_BOOL,aux7027_INTEGER);
constraint bool2int(aux7033_BOOL,aux7033_INTEGER);
constraint bool2int(aux7039_BOOL,aux7039_INTEGER);
constraint bool2int(aux7045_BOOL,aux7045_INTEGER);
constraint bool2int(aux7051_BOOL,aux7051_INTEGER);
constraint bool2int(aux7057_BOOL,aux7057_INTEGER);
constraint bool2int(aux7063_BOOL,aux7063_INTEGER);
constraint bool2int(aux7069_BOOL,aux7069_INTEGER);
constraint bool2int(aux7075_BOOL,aux7075_INTEGER);
constraint bool2int(aux7079_BOOL,aux7079_INTEGER);
constraint bool2int(aux7086_BOOL,aux7086_INTEGER);
constraint bool2int(aux7092_BOOL,aux7092_INTEGER);
constraint bool2int(aux7098_BOOL,aux7098_INTEGER);
constraint bool2int(aux7104_BOOL,aux7104_INTEGER);
constraint bool2int(aux7110_BOOL,aux7110_INTEGER);
constraint bool2int(aux7116_BOOL,aux7116_INTEGER);
constraint bool2int(aux7122_BOOL,aux7122_INTEGER);
constraint bool2int(aux7128_BOOL,aux7128_INTEGER);
constraint bool2int(aux7134_BOOL,aux7134_INTEGER);
constraint bool2int(aux7140_BOOL,aux7140_INTEGER);
constraint bool2int(aux7146_BOOL,aux7146_INTEGER);
constraint bool2int(aux7152_BOOL,aux7152_INTEGER);
constraint bool2int(aux7158_BOOL,aux7158_INTEGER);
constraint bool2int(aux7162_BOOL,aux7162_INTEGER);
constraint bool2int(aux7169_BOOL,aux7169_INTEGER);
constraint bool2int(aux7175_BOOL,aux7175_INTEGER);
constraint bool2int(aux7181_BOOL,aux7181_INTEGER);
constraint bool2int(aux7187_BOOL,aux7187_INTEGER);
constraint bool2int(aux7193_BOOL,aux7193_INTEGER);
constraint bool2int(aux7199_BOOL,aux7199_INTEGER);
constraint bool2int(aux7205_BOOL,aux7205_INTEGER);
constraint bool2int(aux7211_BOOL,aux7211_INTEGER);
constraint bool2int(aux7217_BOOL,aux7217_INTEGER);
constraint bool2int(aux7223_BOOL,aux7223_INTEGER);
constraint bool2int(aux7229_BOOL,aux7229_INTEGER);
constraint bool2int(aux7235_BOOL,aux7235_INTEGER);
constraint bool2int(aux7241_BOOL,aux7241_INTEGER);
constraint bool2int(aux7245_BOOL,aux7245_INTEGER);
constraint bool2int(aux7251_BOOL,aux7251_INTEGER);
constraint bool2int(aux7255_BOOL,aux7255_INTEGER);
constraint bool2int(aux7259_BOOL,aux7259_INTEGER);
constraint bool2int(aux7263_BOOL,aux7263_INTEGER);
constraint bool2int(aux7267_BOOL,aux7267_INTEGER);
constraint bool2int(aux7271_BOOL,aux7271_INTEGER);
constraint bool2int(aux7275_BOOL,aux7275_INTEGER);
constraint bool2int(aux7277_BOOL,aux7277_INTEGER);
constraint bool2int(aux7281_BOOL,aux7281_INTEGER);
constraint bool2int(aux7285_BOOL,aux7285_INTEGER);
constraint bool2int(aux7289_BOOL,aux7289_INTEGER);
constraint bool2int(aux7293_BOOL,aux7293_INTEGER);
constraint bool2int(aux7297_BOOL,aux7297_INTEGER);
constraint bool2int(aux7301_BOOL,aux7301_INTEGER);
constraint bool2int(aux7305_BOOL,aux7305_INTEGER);
constraint bool2int(aux7307_BOOL,aux7307_INTEGER);
constraint bool2int(aux7311_BOOL,aux7311_INTEGER);
constraint bool2int(aux7315_BOOL,aux7315_INTEGER);
constraint bool2int(aux7319_BOOL,aux7319_INTEGER);
constraint bool2int(aux7323_BOOL,aux7323_INTEGER);
constraint bool2int(aux7327_BOOL,aux7327_INTEGER);
constraint bool2int(aux7331_BOOL,aux7331_INTEGER);
constraint bool2int(aux7335_BOOL,aux7335_INTEGER);
constraint bool2int(aux7337_BOOL,aux7337_INTEGER);
constraint bool2int(aux7341_BOOL,aux7341_INTEGER);
constraint bool2int(aux7345_BOOL,aux7345_INTEGER);
constraint bool2int(aux7349_BOOL,aux7349_INTEGER);
constraint bool2int(aux7353_BOOL,aux7353_INTEGER);
constraint bool2int(aux7357_BOOL,aux7357_INTEGER);
constraint bool2int(aux7361_BOOL,aux7361_INTEGER);
constraint bool2int(aux7365_BOOL,aux7365_INTEGER);
constraint bool2int(aux7367_BOOL,aux7367_INTEGER);
constraint bool2int(aux7371_BOOL,aux7371_INTEGER);
constraint bool2int(aux7375_BOOL,aux7375_INTEGER);
constraint bool2int(aux7379_BOOL,aux7379_INTEGER);
constraint bool2int(aux7383_BOOL,aux7383_INTEGER);
constraint bool2int(aux7387_BOOL,aux7387_INTEGER);
constraint bool2int(aux7391_BOOL,aux7391_INTEGER);
constraint bool2int(aux7395_BOOL,aux7395_INTEGER);
constraint bool2int(aux7397_BOOL,aux7397_INTEGER);
constraint bool2int(aux7401_BOOL,aux7401_INTEGER);
constraint bool2int(aux7405_BOOL,aux7405_INTEGER);
constraint bool2int(aux7409_BOOL,aux7409_INTEGER);
constraint bool2int(aux7413_BOOL,aux7413_INTEGER);
constraint bool2int(aux7417_BOOL,aux7417_INTEGER);
constraint bool2int(aux7421_BOOL,aux7421_INTEGER);
constraint bool2int(aux7425_BOOL,aux7425_INTEGER);
constraint bool2int(aux7427_BOOL,aux7427_INTEGER);
constraint bool2int(aux7431_BOOL,aux7431_INTEGER);
constraint bool2int(aux7435_BOOL,aux7435_INTEGER);
constraint bool2int(aux7439_BOOL,aux7439_INTEGER);
constraint bool2int(aux7443_BOOL,aux7443_INTEGER);
constraint bool2int(aux7447_BOOL,aux7447_INTEGER);
constraint bool2int(aux7451_BOOL,aux7451_INTEGER);
constraint bool2int(aux7455_BOOL,aux7455_INTEGER);
constraint bool2int(aux7457_BOOL,aux7457_INTEGER);
constraint bool2int(aux7461_BOOL,aux7461_INTEGER);
constraint bool2int(aux7465_BOOL,aux7465_INTEGER);
constraint bool2int(aux7469_BOOL,aux7469_INTEGER);
constraint bool2int(aux7473_BOOL,aux7473_INTEGER);
constraint bool2int(aux7477_BOOL,aux7477_INTEGER);
constraint bool2int(aux7481_BOOL,aux7481_INTEGER);
constraint bool2int(aux7485_BOOL,aux7485_INTEGER);
constraint bool2int(aux7487_BOOL,aux7487_INTEGER);
constraint bool2int(aux7491_BOOL,aux7491_INTEGER);
constraint bool2int(aux7495_BOOL,aux7495_INTEGER);
constraint bool2int(aux7497_BOOL,aux7497_INTEGER);
constraint bool2int(aux7501_BOOL,aux7501_INTEGER);
constraint bool2int(aux7505_BOOL,aux7505_INTEGER);
constraint bool2int(aux7507_BOOL,aux7507_INTEGER);
constraint bool2int(aux7511_BOOL,aux7511_INTEGER);
constraint bool2int(aux7515_BOOL,aux7515_INTEGER);
constraint bool2int(aux7517_BOOL,aux7517_INTEGER);
constraint bool2int(aux7521_BOOL,aux7521_INTEGER);
constraint bool2int(aux7525_BOOL,aux7525_INTEGER);
constraint bool2int(aux7529_BOOL,aux7529_INTEGER);
constraint bool2int(aux7533_BOOL,aux7533_INTEGER);
constraint bool2int(aux7537_BOOL,aux7537_INTEGER);
constraint bool2int(aux7541_BOOL,aux7541_INTEGER);
constraint bool2int(aux7545_BOOL,aux7545_INTEGER);
constraint bool2int(aux7547_BOOL,aux7547_INTEGER);
constraint bool2int(aux7551_BOOL,aux7551_INTEGER);
constraint bool2int(aux7555_BOOL,aux7555_INTEGER);
constraint bool2int(aux7559_BOOL,aux7559_INTEGER);
constraint bool2int(aux7563_BOOL,aux7563_INTEGER);
constraint bool2int(aux7567_BOOL,aux7567_INTEGER);
constraint bool2int(aux7571_BOOL,aux7571_INTEGER);
constraint bool2int(aux7575_BOOL,aux7575_INTEGER);
constraint bool2int(aux7577_BOOL,aux7577_INTEGER);
constraint bool2int(aux7581_BOOL,aux7581_INTEGER);
constraint bool2int(aux7585_BOOL,aux7585_INTEGER);
constraint bool2int(aux7589_BOOL,aux7589_INTEGER);
constraint bool2int(aux7593_BOOL,aux7593_INTEGER);
constraint bool2int(aux7597_BOOL,aux7597_INTEGER);
constraint bool2int(aux7601_BOOL,aux7601_INTEGER);
constraint bool2int(aux7605_BOOL,aux7605_INTEGER);
constraint bool2int(aux7607_BOOL,aux7607_INTEGER);
constraint bool2int(aux7611_BOOL,aux7611_INTEGER);
constraint bool2int(aux7615_BOOL,aux7615_INTEGER);
constraint bool2int(aux7619_BOOL,aux7619_INTEGER);
constraint bool2int(aux7623_BOOL,aux7623_INTEGER);
constraint bool2int(aux7627_BOOL,aux7627_INTEGER);
constraint bool2int(aux7631_BOOL,aux7631_INTEGER);
constraint bool2int(aux7635_BOOL,aux7635_INTEGER);
constraint bool2int(aux7637_BOOL,aux7637_INTEGER);
constraint bool2int(aux7641_BOOL,aux7641_INTEGER);
constraint bool2int(aux7645_BOOL,aux7645_INTEGER);
constraint bool2int(aux7649_BOOL,aux7649_INTEGER);
constraint bool2int(aux7653_BOOL,aux7653_INTEGER);
constraint bool2int(aux7657_BOOL,aux7657_INTEGER);
constraint bool2int(aux7661_BOOL,aux7661_INTEGER);
constraint bool2int(aux7665_BOOL,aux7665_INTEGER);
constraint bool2int(aux7667_BOOL,aux7667_INTEGER);
constraint bool2int(aux7671_BOOL,aux7671_INTEGER);
constraint bool2int(aux7675_BOOL,aux7675_INTEGER);
constraint bool2int(aux7679_BOOL,aux7679_INTEGER);
constraint bool2int(aux7683_BOOL,aux7683_INTEGER);
constraint bool2int(aux7687_BOOL,aux7687_INTEGER);
constraint bool2int(aux7691_BOOL,aux7691_INTEGER);
constraint bool2int(aux7695_BOOL,aux7695_INTEGER);
constraint bool2int(aux7697_BOOL,aux7697_INTEGER);
constraint bool2int(aux7701_BOOL,aux7701_INTEGER);
constraint bool2int(aux7705_BOOL,aux7705_INTEGER);
constraint bool2int(aux7709_BOOL,aux7709_INTEGER);
constraint bool2int(aux7713_BOOL,aux7713_INTEGER);
constraint bool2int(aux7717_BOOL,aux7717_INTEGER);
constraint bool2int(aux7721_BOOL,aux7721_INTEGER);
constraint bool2int(aux7725_BOOL,aux7725_INTEGER);
constraint bool2int(aux7727_BOOL,aux7727_INTEGER);
constraint bool2int(aux7731_BOOL,aux7731_INTEGER);
constraint bool2int(aux7735_BOOL,aux7735_INTEGER);
constraint bool2int(aux7739_BOOL,aux7739_INTEGER);
constraint bool2int(aux7743_BOOL,aux7743_INTEGER);
constraint bool2int(aux7747_BOOL,aux7747_INTEGER);
constraint bool2int(aux7751_BOOL,aux7751_INTEGER);
constraint bool2int(aux7755_BOOL,aux7755_INTEGER);
constraint bool2int(aux7757_BOOL,aux7757_INTEGER);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux10_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux10_BOOL],aux11_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux12_BOOL);
constraint array_bool_and([aux12_BOOL,w_00005_00002_BOOL],aux13_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux14_BOOL);
constraint array_bool_and([aux14_BOOL,w_00004_00002_BOOL],aux15_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux16_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux16_BOOL],aux17_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux18_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux18_BOOL],aux19_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux20_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux20_BOOL],aux21_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux22_BOOL);
constraint array_bool_and([aux22_BOOL,w_00001_00003_BOOL],aux23_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux24_BOOL);
constraint array_bool_and([aux24_BOOL,w_00005_00003_BOOL],aux25_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux26_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux26_BOOL],aux27_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux28_BOOL);
constraint array_bool_and([aux28_BOOL,w_00005_00004_BOOL],aux29_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux30_BOOL);
constraint array_bool_and([aux30_BOOL,w_00004_00004_BOOL],aux31_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux32_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux32_BOOL],aux33_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux34_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux34_BOOL],aux35_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux36_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux36_BOOL],aux37_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux38_BOOL);
constraint array_bool_and([aux38_BOOL,w_00001_00008_BOOL],aux39_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux40_BOOL);
constraint array_bool_and([aux40_BOOL,w_00005_00008_BOOL],aux41_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux42_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux42_BOOL],aux43_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux44_BOOL);
constraint array_bool_and([aux44_BOOL,w_00001_00009_BOOL],aux45_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux46_BOOL);
constraint array_bool_and([aux46_BOOL,w_00005_00009_BOOL],aux47_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux48_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux48_BOOL],aux49_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux50_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux50_BOOL],aux51_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux52_BOOL);
constraint array_bool_and([aux52_BOOL,w_00001_00010_BOOL],aux53_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux54_BOOL);
constraint array_bool_and([aux54_BOOL,w_00005_00010_BOOL],aux55_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux56_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux56_BOOL],aux57_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux58_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux58_BOOL],aux59_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux60_BOOL);
constraint array_bool_and([aux60_BOOL,w_00001_00001_BOOL],aux61_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux62_BOOL);
constraint array_bool_and([aux62_BOOL,w_00005_00001_BOOL],aux63_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux64_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux64_BOOL],aux65_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux66_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux66_BOOL],aux67_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux68_BOOL);
constraint array_bool_and([aux68_BOOL,w_00005_00001_BOOL],aux69_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux70_BOOL);
constraint array_bool_and([aux70_BOOL,w_00004_00001_BOOL],aux71_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux72_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux72_BOOL],aux73_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux74_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux74_BOOL],aux75_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux76_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux76_BOOL],aux77_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux78_BOOL);
constraint array_bool_and([aux78_BOOL,w_00001_00005_BOOL],aux79_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux80_BOOL);
constraint array_bool_and([aux80_BOOL,w_00005_00005_BOOL],aux81_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux82_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux82_BOOL],aux83_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux84_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux84_BOOL],aux85_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux86_BOOL);
constraint array_bool_and([aux86_BOOL,w_00005_00005_BOOL],aux87_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux88_BOOL);
constraint array_bool_and([aux88_BOOL,w_00004_00005_BOOL],aux89_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux90_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux90_BOOL],aux91_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux92_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux92_BOOL],aux93_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux94_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux94_BOOL],aux95_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux96_BOOL);
constraint array_bool_and([aux96_BOOL,w_00001_00006_BOOL],aux97_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux98_BOOL);
constraint array_bool_and([aux98_BOOL,w_00005_00006_BOOL],aux99_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux100_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux100_BOOL],aux101_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux102_BOOL);
constraint array_bool_and([aux102_BOOL,w_00004_00006_BOOL],aux103_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux104_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux104_BOOL],aux105_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux106_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux106_BOOL],aux107_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux108_BOOL);
constraint array_bool_and([aux108_BOOL,w_00001_00007_BOOL],aux109_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux110_BOOL);
constraint array_bool_and([aux110_BOOL,w_00005_00007_BOOL],aux111_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux112_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux112_BOOL],aux113_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux114_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux114_BOOL],aux115_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux116_BOOL);
constraint array_bool_and([aux116_BOOL,w_00005_00007_BOOL],aux117_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux118_BOOL);
constraint array_bool_and([aux118_BOOL,w_00004_00007_BOOL],aux119_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux120_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux120_BOOL],aux121_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux122_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux122_BOOL],aux123_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux124_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux124_BOOL],aux125_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux126_BOOL);
constraint array_bool_and([aux126_BOOL,w_00001_00011_BOOL],aux127_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux128_BOOL);
constraint array_bool_and([aux128_BOOL,w_00005_00011_BOOL],aux129_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux130_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux130_BOOL],aux131_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux132_BOOL);
constraint array_bool_and([aux132_BOOL,w_00004_00011_BOOL],aux133_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux134_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux134_BOOL],aux135_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux136_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux136_BOOL],aux137_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux138_BOOL);
constraint array_bool_and([aux138_BOOL,w_00001_00012_BOOL],aux139_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux140_BOOL);
constraint array_bool_and([aux140_BOOL,w_00005_00012_BOOL],aux141_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux142_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux142_BOOL],aux143_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux144_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux144_BOOL],aux145_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux146_BOOL);
constraint array_bool_and([aux146_BOOL,w_00005_00012_BOOL],aux147_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux148_BOOL);
constraint array_bool_and([aux148_BOOL,w_00004_00012_BOOL],aux149_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux150_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux150_BOOL],aux151_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux152_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux152_BOOL],aux153_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux154_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux154_BOOL],aux155_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux156_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux156_BOOL],aux157_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux158_BOOL);
constraint array_bool_and([aux158_BOOL,w_00005_00013_BOOL],aux159_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux160_BOOL);
constraint array_bool_and([aux160_BOOL,w_00004_00013_BOOL],aux161_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux162_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux162_BOOL],aux163_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux164_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux164_BOOL],aux165_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux166_BOOL);
constraint array_bool_and([aux166_BOOL,w_00004_00014_BOOL],aux167_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux168_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux168_BOOL],aux169_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux170_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux170_BOOL],aux171_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux172_BOOL);
constraint array_bool_and([aux172_BOOL,w_00005_00014_BOOL],aux173_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux174_BOOL);
constraint array_bool_and([aux174_BOOL,w_00004_00014_BOOL],aux175_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux176_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux176_BOOL],aux177_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux178_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux178_BOOL],aux179_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00001_INTEGER,aux180_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00001_INTEGER,aux181_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,0,aux182_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,0,aux183_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,0,aux184_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00001_INTEGER,aux185_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00002_INTEGER,aux186_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00002_INTEGER,aux187_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,0,aux188_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,0,aux189_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,0,aux190_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00002_INTEGER,aux191_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00003_INTEGER,aux192_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00003_INTEGER,aux193_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,0,aux194_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,0,aux195_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,0,aux196_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00003_INTEGER,aux197_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00004_INTEGER,aux198_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00004_INTEGER,aux199_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,0,aux200_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,0,aux201_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,0,aux202_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00004_INTEGER,aux203_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00005_INTEGER,aux204_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00005_INTEGER,aux205_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,0,aux206_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,0,aux207_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,0,aux208_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00005_INTEGER,aux209_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00006_INTEGER,aux210_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00006_INTEGER,aux211_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,0,aux212_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,0,aux213_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,0,aux214_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00006_INTEGER,aux215_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00007_INTEGER,aux216_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00007_INTEGER,aux217_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,0,aux218_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,0,aux219_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,0,aux220_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00007_INTEGER,aux221_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00008_INTEGER,aux222_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00008_INTEGER,aux223_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,0,aux224_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,0,aux225_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,0,aux226_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00008_INTEGER,aux227_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00009_INTEGER,aux228_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00009_INTEGER,aux229_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,0,aux230_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,0,aux231_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,0,aux232_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00009_INTEGER,aux233_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00010_INTEGER,aux234_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00010_INTEGER,aux235_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,0,aux236_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,0,aux237_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,0,aux238_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00010_INTEGER,aux239_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00011_INTEGER,aux240_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00011_INTEGER,aux241_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,0,aux242_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,0,aux243_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,0,aux244_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00011_INTEGER,aux245_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00012_INTEGER,aux246_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00012_INTEGER,aux247_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,0,aux248_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,0,aux249_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,0,aux250_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00012_INTEGER,aux251_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00013_INTEGER,aux252_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00013_INTEGER,aux253_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,0,aux254_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,0,aux255_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,0,aux256_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00013_INTEGER,aux257_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00014_INTEGER,aux258_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00014_INTEGER,aux259_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,0,aux260_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,0,aux261_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,0,aux262_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00014_INTEGER,aux263_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux264_BOOL);
constraint int_lin_eq([-1,1,1],[aux265,1,s_00010],0);
constraint int_lt_reif(s_00010,aux265,aux266_BOOL);
constraint array_bool_and([aux264_BOOL,aux266_BOOL,w_00001_00010_BOOL],aux267_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux268_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux269_BOOL);
constraint int_lin_eq([-1,1,1],[aux270,2,s_00001],0);
constraint int_lt_reif(s_00010,aux270,aux271_BOOL);
constraint int_le_reif(s_00001, s_00010,aux272_BOOL);
constraint array_bool_and([aux268_BOOL,aux269_BOOL,aux271_BOOL,aux272_BOOL,w_00001_00001_BOOL],aux273_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux274_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux275_BOOL);
constraint int_lin_eq([-1,1,1],[aux276,6,s_00002],0);
constraint int_lt_reif(s_00010,aux276,aux277_BOOL);
constraint int_le_reif(s_00002, s_00010,aux278_BOOL);
constraint array_bool_and([aux274_BOOL,aux275_BOOL,aux277_BOOL,aux278_BOOL,w_00001_00002_BOOL],aux279_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux280_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux281_BOOL);
constraint int_lin_eq([-1,1,1],[aux282,1,s_00003],0);
constraint int_lt_reif(s_00010,aux282,aux283_BOOL);
constraint int_le_reif(s_00003, s_00010,aux284_BOOL);
constraint array_bool_and([aux280_BOOL,aux281_BOOL,aux283_BOOL,aux284_BOOL,w_00001_00003_BOOL],aux285_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux286_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux287_BOOL);
constraint int_lin_eq([-1,1,1],[aux288,2,s_00004],0);
constraint int_lt_reif(s_00010,aux288,aux289_BOOL);
constraint int_le_reif(s_00004, s_00010,aux290_BOOL);
constraint array_bool_and([aux286_BOOL,aux287_BOOL,aux289_BOOL,aux290_BOOL,w_00001_00004_BOOL],aux291_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux292_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux293_BOOL);
constraint int_lin_eq([-1,1,1],[aux294,1,s_00005],0);
constraint int_lt_reif(s_00010,aux294,aux295_BOOL);
constraint int_le_reif(s_00005, s_00010,aux296_BOOL);
constraint array_bool_and([aux292_BOOL,aux293_BOOL,aux295_BOOL,aux296_BOOL,w_00001_00005_BOOL],aux297_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux298_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux299_BOOL);
constraint int_lin_eq([-1,1,1],[aux300,4,s_00006],0);
constraint int_lt_reif(s_00010,aux300,aux301_BOOL);
constraint int_le_reif(s_00006, s_00010,aux302_BOOL);
constraint array_bool_and([aux298_BOOL,aux299_BOOL,aux301_BOOL,aux302_BOOL,w_00001_00006_BOOL],aux303_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux304_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux305_BOOL);
constraint int_lin_eq([-1,1,1],[aux306,2,s_00007],0);
constraint int_lt_reif(s_00010,aux306,aux307_BOOL);
constraint int_le_reif(s_00007, s_00010,aux308_BOOL);
constraint array_bool_and([aux304_BOOL,aux305_BOOL,aux307_BOOL,aux308_BOOL,w_00001_00007_BOOL],aux309_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux310_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux311_BOOL);
constraint int_lin_eq([-1,1,1],[aux312,2,s_00008],0);
constraint int_lt_reif(s_00010,aux312,aux313_BOOL);
constraint int_le_reif(s_00008, s_00010,aux314_BOOL);
constraint array_bool_and([aux310_BOOL,aux311_BOOL,aux313_BOOL,aux314_BOOL,w_00001_00008_BOOL],aux315_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux316_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux317_BOOL);
constraint int_lin_eq([-1,1,1],[aux318,2,s_00009],0);
constraint int_lt_reif(s_00010,aux318,aux319_BOOL);
constraint int_le_reif(s_00009, s_00010,aux320_BOOL);
constraint array_bool_and([aux316_BOOL,aux317_BOOL,aux319_BOOL,aux320_BOOL,w_00001_00009_BOOL],aux321_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux322_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux323_BOOL);
constraint int_lin_eq([-1,1,1],[aux324,2,s_00011],0);
constraint int_lt_reif(s_00010,aux324,aux325_BOOL);
constraint int_le_reif(s_00011, s_00010,aux326_BOOL);
constraint array_bool_and([aux322_BOOL,aux323_BOOL,aux325_BOOL,aux326_BOOL,w_00001_00011_BOOL],aux327_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux328_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux329_BOOL);
constraint int_lin_eq([-1,1,1],[aux330,3,s_00012],0);
constraint int_lt_reif(s_00010,aux330,aux331_BOOL);
constraint int_le_reif(s_00012, s_00010,aux332_BOOL);
constraint array_bool_and([aux328_BOOL,aux329_BOOL,aux331_BOOL,aux332_BOOL,w_00001_00012_BOOL],aux333_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux334_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux335_BOOL);
constraint int_lin_eq([-1,1,1],[aux336,3,s_00013],0);
constraint int_lt_reif(s_00010,aux336,aux337_BOOL);
constraint int_le_reif(s_00013, s_00010,aux338_BOOL);
constraint array_bool_and([aux334_BOOL,aux335_BOOL,aux337_BOOL,aux338_BOOL,w_00001_00013_BOOL],aux339_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux340_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux341_BOOL);
constraint int_lin_eq([-1,1,1],[aux342,3,s_00014],0);
constraint int_lt_reif(s_00010,aux342,aux343_BOOL);
constraint int_le_reif(s_00014, s_00010,aux344_BOOL);
constraint array_bool_and([aux340_BOOL,aux341_BOOL,aux343_BOOL,aux344_BOOL,w_00001_00014_BOOL],aux345_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux267_INTEGER,aux273_INTEGER,aux279_INTEGER,aux285_INTEGER,aux291_INTEGER,aux297_INTEGER,aux303_INTEGER,aux309_INTEGER,aux315_INTEGER,aux321_INTEGER,aux327_INTEGER,aux333_INTEGER,aux339_INTEGER,aux345_INTEGER,1],0,aux346_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux347_BOOL);
constraint int_lin_eq([-1,1,1],[aux348,2,s_00008],0);
constraint int_lt_reif(s_00008,aux348,aux349_BOOL);
constraint array_bool_and([aux347_BOOL,aux349_BOOL,w_00001_00008_BOOL],aux350_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux351_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux352_BOOL);
constraint int_lin_eq([-1,1,1],[aux353,2,s_00001],0);
constraint int_lt_reif(s_00008,aux353,aux354_BOOL);
constraint int_le_reif(s_00001, s_00008,aux355_BOOL);
constraint array_bool_and([aux351_BOOL,aux352_BOOL,aux354_BOOL,aux355_BOOL,w_00001_00001_BOOL],aux356_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux357_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux358_BOOL);
constraint int_lin_eq([-1,1,1],[aux359,6,s_00002],0);
constraint int_lt_reif(s_00008,aux359,aux360_BOOL);
constraint int_le_reif(s_00002, s_00008,aux361_BOOL);
constraint array_bool_and([aux357_BOOL,aux358_BOOL,aux360_BOOL,aux361_BOOL,w_00001_00002_BOOL],aux362_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux363_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux364_BOOL);
constraint int_lin_eq([-1,1,1],[aux365,1,s_00003],0);
constraint int_lt_reif(s_00008,aux365,aux366_BOOL);
constraint int_le_reif(s_00003, s_00008,aux367_BOOL);
constraint array_bool_and([aux363_BOOL,aux364_BOOL,aux366_BOOL,aux367_BOOL,w_00001_00003_BOOL],aux368_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux369_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux370_BOOL);
constraint int_lin_eq([-1,1,1],[aux371,2,s_00004],0);
constraint int_lt_reif(s_00008,aux371,aux372_BOOL);
constraint int_le_reif(s_00004, s_00008,aux373_BOOL);
constraint array_bool_and([aux369_BOOL,aux370_BOOL,aux372_BOOL,aux373_BOOL,w_00001_00004_BOOL],aux374_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux375_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux376_BOOL);
constraint int_lin_eq([-1,1,1],[aux377,1,s_00005],0);
constraint int_lt_reif(s_00008,aux377,aux378_BOOL);
constraint int_le_reif(s_00005, s_00008,aux379_BOOL);
constraint array_bool_and([aux375_BOOL,aux376_BOOL,aux378_BOOL,aux379_BOOL,w_00001_00005_BOOL],aux380_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux381_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux382_BOOL);
constraint int_lin_eq([-1,1,1],[aux383,4,s_00006],0);
constraint int_lt_reif(s_00008,aux383,aux384_BOOL);
constraint int_le_reif(s_00006, s_00008,aux385_BOOL);
constraint array_bool_and([aux381_BOOL,aux382_BOOL,aux384_BOOL,aux385_BOOL,w_00001_00006_BOOL],aux386_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux387_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux388_BOOL);
constraint int_lin_eq([-1,1,1],[aux389,2,s_00007],0);
constraint int_lt_reif(s_00008,aux389,aux390_BOOL);
constraint int_le_reif(s_00007, s_00008,aux391_BOOL);
constraint array_bool_and([aux387_BOOL,aux388_BOOL,aux390_BOOL,aux391_BOOL,w_00001_00007_BOOL],aux392_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux393_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux394_BOOL);
constraint int_lin_eq([-1,1,1],[aux395,2,s_00009],0);
constraint int_lt_reif(s_00008,aux395,aux396_BOOL);
constraint int_le_reif(s_00009, s_00008,aux397_BOOL);
constraint array_bool_and([aux393_BOOL,aux394_BOOL,aux396_BOOL,aux397_BOOL,w_00001_00009_BOOL],aux398_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux399_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux400_BOOL);
constraint int_lin_eq([-1,1,1],[aux401,1,s_00010],0);
constraint int_lt_reif(s_00008,aux401,aux402_BOOL);
constraint int_le_reif(s_00010, s_00008,aux403_BOOL);
constraint array_bool_and([aux399_BOOL,aux400_BOOL,aux402_BOOL,aux403_BOOL,w_00001_00010_BOOL],aux404_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux405_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux406_BOOL);
constraint int_lin_eq([-1,1,1],[aux407,2,s_00011],0);
constraint int_lt_reif(s_00008,aux407,aux408_BOOL);
constraint int_le_reif(s_00011, s_00008,aux409_BOOL);
constraint array_bool_and([aux405_BOOL,aux406_BOOL,aux408_BOOL,aux409_BOOL,w_00001_00011_BOOL],aux410_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux411_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux412_BOOL);
constraint int_lin_eq([-1,1,1],[aux413,3,s_00012],0);
constraint int_lt_reif(s_00008,aux413,aux414_BOOL);
constraint int_le_reif(s_00012, s_00008,aux415_BOOL);
constraint array_bool_and([aux411_BOOL,aux412_BOOL,aux414_BOOL,aux415_BOOL,w_00001_00012_BOOL],aux416_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux417_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux418_BOOL);
constraint int_lin_eq([-1,1,1],[aux419,3,s_00013],0);
constraint int_lt_reif(s_00008,aux419,aux420_BOOL);
constraint int_le_reif(s_00013, s_00008,aux421_BOOL);
constraint array_bool_and([aux417_BOOL,aux418_BOOL,aux420_BOOL,aux421_BOOL,w_00001_00013_BOOL],aux422_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux423_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux424_BOOL);
constraint int_lin_eq([-1,1,1],[aux425,3,s_00014],0);
constraint int_lt_reif(s_00008,aux425,aux426_BOOL);
constraint int_le_reif(s_00014, s_00008,aux427_BOOL);
constraint array_bool_and([aux423_BOOL,aux424_BOOL,aux426_BOOL,aux427_BOOL,w_00001_00014_BOOL],aux428_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux350_INTEGER,aux356_INTEGER,aux362_INTEGER,aux368_INTEGER,aux374_INTEGER,aux380_INTEGER,aux386_INTEGER,aux392_INTEGER,aux398_INTEGER,aux404_INTEGER,aux410_INTEGER,aux416_INTEGER,aux422_INTEGER,aux428_INTEGER,1],0,aux429_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux430_BOOL);
constraint int_lin_eq([-1,1,1],[aux431,6,s_00002],0);
constraint int_lt_reif(s_00002,aux431,aux432_BOOL);
constraint array_bool_and([aux430_BOOL,aux432_BOOL,w_00001_00002_BOOL],aux433_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux434_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux435_BOOL);
constraint int_lin_eq([-1,1,1],[aux436,2,s_00001],0);
constraint int_lt_reif(s_00002,aux436,aux437_BOOL);
constraint int_le_reif(s_00001, s_00002,aux438_BOOL);
constraint array_bool_and([aux434_BOOL,aux435_BOOL,aux437_BOOL,aux438_BOOL,w_00001_00001_BOOL],aux439_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux440_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux441_BOOL);
constraint int_lin_eq([-1,1,1],[aux442,1,s_00003],0);
constraint int_lt_reif(s_00002,aux442,aux443_BOOL);
constraint int_le_reif(s_00003, s_00002,aux444_BOOL);
constraint array_bool_and([aux440_BOOL,aux441_BOOL,aux443_BOOL,aux444_BOOL,w_00001_00003_BOOL],aux445_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux446_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux447_BOOL);
constraint int_lin_eq([-1,1,1],[aux448,2,s_00004],0);
constraint int_lt_reif(s_00002,aux448,aux449_BOOL);
constraint int_le_reif(s_00004, s_00002,aux450_BOOL);
constraint array_bool_and([aux446_BOOL,aux447_BOOL,aux449_BOOL,aux450_BOOL,w_00001_00004_BOOL],aux451_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux452_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux453_BOOL);
constraint int_lin_eq([-1,1,1],[aux454,1,s_00005],0);
constraint int_lt_reif(s_00002,aux454,aux455_BOOL);
constraint int_le_reif(s_00005, s_00002,aux456_BOOL);
constraint array_bool_and([aux452_BOOL,aux453_BOOL,aux455_BOOL,aux456_BOOL,w_00001_00005_BOOL],aux457_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux458_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux459_BOOL);
constraint int_lin_eq([-1,1,1],[aux460,2,s_00007],0);
constraint int_lt_reif(s_00002,aux460,aux461_BOOL);
constraint int_le_reif(s_00007, s_00002,aux462_BOOL);
constraint array_bool_and([aux458_BOOL,aux459_BOOL,aux461_BOOL,aux462_BOOL,w_00001_00007_BOOL],aux463_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux464_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux465_BOOL);
constraint int_lin_eq([-1,1,1],[aux466,4,s_00006],0);
constraint int_lt_reif(s_00002,aux466,aux467_BOOL);
constraint int_le_reif(s_00006, s_00002,aux468_BOOL);
constraint array_bool_and([aux464_BOOL,aux465_BOOL,aux467_BOOL,aux468_BOOL,w_00001_00006_BOOL],aux469_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux470_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux471_BOOL);
constraint int_lin_eq([-1,1,1],[aux472,2,s_00008],0);
constraint int_lt_reif(s_00002,aux472,aux473_BOOL);
constraint int_le_reif(s_00008, s_00002,aux474_BOOL);
constraint array_bool_and([aux470_BOOL,aux471_BOOL,aux473_BOOL,aux474_BOOL,w_00001_00008_BOOL],aux475_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux476_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux477_BOOL);
constraint int_lin_eq([-1,1,1],[aux478,2,s_00009],0);
constraint int_lt_reif(s_00002,aux478,aux479_BOOL);
constraint int_le_reif(s_00009, s_00002,aux480_BOOL);
constraint array_bool_and([aux476_BOOL,aux477_BOOL,aux479_BOOL,aux480_BOOL,w_00001_00009_BOOL],aux481_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux482_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux483_BOOL);
constraint int_lin_eq([-1,1,1],[aux484,1,s_00010],0);
constraint int_lt_reif(s_00002,aux484,aux485_BOOL);
constraint int_le_reif(s_00010, s_00002,aux486_BOOL);
constraint array_bool_and([aux482_BOOL,aux483_BOOL,aux485_BOOL,aux486_BOOL,w_00001_00010_BOOL],aux487_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux488_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux489_BOOL);
constraint int_lin_eq([-1,1,1],[aux490,2,s_00011],0);
constraint int_lt_reif(s_00002,aux490,aux491_BOOL);
constraint int_le_reif(s_00011, s_00002,aux492_BOOL);
constraint array_bool_and([aux488_BOOL,aux489_BOOL,aux491_BOOL,aux492_BOOL,w_00001_00011_BOOL],aux493_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux494_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux495_BOOL);
constraint int_lin_eq([-1,1,1],[aux496,3,s_00012],0);
constraint int_lt_reif(s_00002,aux496,aux497_BOOL);
constraint int_le_reif(s_00012, s_00002,aux498_BOOL);
constraint array_bool_and([aux494_BOOL,aux495_BOOL,aux497_BOOL,aux498_BOOL,w_00001_00012_BOOL],aux499_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux500_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux501_BOOL);
constraint int_lin_eq([-1,1,1],[aux502,3,s_00013],0);
constraint int_lt_reif(s_00002,aux502,aux503_BOOL);
constraint int_le_reif(s_00013, s_00002,aux504_BOOL);
constraint array_bool_and([aux500_BOOL,aux501_BOOL,aux503_BOOL,aux504_BOOL,w_00001_00013_BOOL],aux505_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux506_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux507_BOOL);
constraint int_lin_eq([-1,1,1],[aux508,3,s_00014],0);
constraint int_lt_reif(s_00002,aux508,aux509_BOOL);
constraint int_le_reif(s_00014, s_00002,aux510_BOOL);
constraint array_bool_and([aux506_BOOL,aux507_BOOL,aux509_BOOL,aux510_BOOL,w_00001_00014_BOOL],aux511_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux433_INTEGER,aux439_INTEGER,aux445_INTEGER,aux451_INTEGER,aux457_INTEGER,aux463_INTEGER,aux469_INTEGER,aux475_INTEGER,aux481_INTEGER,aux487_INTEGER,aux493_INTEGER,aux499_INTEGER,aux505_INTEGER,aux511_INTEGER,1],0,aux512_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux513_BOOL);
constraint int_lin_eq([-1,1,1],[aux514,2,s_00007],0);
constraint int_lt_reif(s_00007,aux514,aux515_BOOL);
constraint array_bool_and([aux513_BOOL,aux515_BOOL,w_00001_00007_BOOL],aux516_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux517_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux518_BOOL);
constraint int_lin_eq([-1,1,1],[aux519,2,s_00001],0);
constraint int_lt_reif(s_00007,aux519,aux520_BOOL);
constraint int_le_reif(s_00001, s_00007,aux521_BOOL);
constraint array_bool_and([aux517_BOOL,aux518_BOOL,aux520_BOOL,aux521_BOOL,w_00001_00001_BOOL],aux522_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux523_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux524_BOOL);
constraint int_lin_eq([-1,1,1],[aux525,6,s_00002],0);
constraint int_lt_reif(s_00007,aux525,aux526_BOOL);
constraint int_le_reif(s_00002, s_00007,aux527_BOOL);
constraint array_bool_and([aux523_BOOL,aux524_BOOL,aux526_BOOL,aux527_BOOL,w_00001_00002_BOOL],aux528_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux529_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux530_BOOL);
constraint int_lin_eq([-1,1,1],[aux531,1,s_00003],0);
constraint int_lt_reif(s_00007,aux531,aux532_BOOL);
constraint int_le_reif(s_00003, s_00007,aux533_BOOL);
constraint array_bool_and([aux529_BOOL,aux530_BOOL,aux532_BOOL,aux533_BOOL,w_00001_00003_BOOL],aux534_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux535_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux536_BOOL);
constraint int_lin_eq([-1,1,1],[aux537,2,s_00004],0);
constraint int_lt_reif(s_00007,aux537,aux538_BOOL);
constraint int_le_reif(s_00004, s_00007,aux539_BOOL);
constraint array_bool_and([aux535_BOOL,aux536_BOOL,aux538_BOOL,aux539_BOOL,w_00001_00004_BOOL],aux540_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux541_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux542_BOOL);
constraint int_lin_eq([-1,1,1],[aux543,1,s_00005],0);
constraint int_lt_reif(s_00007,aux543,aux544_BOOL);
constraint int_le_reif(s_00005, s_00007,aux545_BOOL);
constraint array_bool_and([aux541_BOOL,aux542_BOOL,aux544_BOOL,aux545_BOOL,w_00001_00005_BOOL],aux546_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux547_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux548_BOOL);
constraint int_lin_eq([-1,1,1],[aux549,4,s_00006],0);
constraint int_lt_reif(s_00007,aux549,aux550_BOOL);
constraint int_le_reif(s_00006, s_00007,aux551_BOOL);
constraint array_bool_and([aux547_BOOL,aux548_BOOL,aux550_BOOL,aux551_BOOL,w_00001_00006_BOOL],aux552_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux553_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux554_BOOL);
constraint int_lin_eq([-1,1,1],[aux555,2,s_00008],0);
constraint int_lt_reif(s_00007,aux555,aux556_BOOL);
constraint int_le_reif(s_00008, s_00007,aux557_BOOL);
constraint array_bool_and([aux553_BOOL,aux554_BOOL,aux556_BOOL,aux557_BOOL,w_00001_00008_BOOL],aux558_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux559_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux560_BOOL);
constraint int_lin_eq([-1,1,1],[aux561,2,s_00009],0);
constraint int_lt_reif(s_00007,aux561,aux562_BOOL);
constraint int_le_reif(s_00009, s_00007,aux563_BOOL);
constraint array_bool_and([aux559_BOOL,aux560_BOOL,aux562_BOOL,aux563_BOOL,w_00001_00009_BOOL],aux564_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux565_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux566_BOOL);
constraint int_lin_eq([-1,1,1],[aux567,1,s_00010],0);
constraint int_lt_reif(s_00007,aux567,aux568_BOOL);
constraint int_le_reif(s_00010, s_00007,aux569_BOOL);
constraint array_bool_and([aux565_BOOL,aux566_BOOL,aux568_BOOL,aux569_BOOL,w_00001_00010_BOOL],aux570_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux571_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux572_BOOL);
constraint int_lin_eq([-1,1,1],[aux573,2,s_00011],0);
constraint int_lt_reif(s_00007,aux573,aux574_BOOL);
constraint int_le_reif(s_00011, s_00007,aux575_BOOL);
constraint array_bool_and([aux571_BOOL,aux572_BOOL,aux574_BOOL,aux575_BOOL,w_00001_00011_BOOL],aux576_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux577_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux578_BOOL);
constraint int_lin_eq([-1,1,1],[aux579,3,s_00012],0);
constraint int_lt_reif(s_00007,aux579,aux580_BOOL);
constraint int_le_reif(s_00012, s_00007,aux581_BOOL);
constraint array_bool_and([aux577_BOOL,aux578_BOOL,aux580_BOOL,aux581_BOOL,w_00001_00012_BOOL],aux582_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux583_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux584_BOOL);
constraint int_lin_eq([-1,1,1],[aux585,3,s_00013],0);
constraint int_lt_reif(s_00007,aux585,aux586_BOOL);
constraint int_le_reif(s_00013, s_00007,aux587_BOOL);
constraint array_bool_and([aux583_BOOL,aux584_BOOL,aux586_BOOL,aux587_BOOL,w_00001_00013_BOOL],aux588_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux589_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux590_BOOL);
constraint int_lin_eq([-1,1,1],[aux591,3,s_00014],0);
constraint int_lt_reif(s_00007,aux591,aux592_BOOL);
constraint int_le_reif(s_00014, s_00007,aux593_BOOL);
constraint array_bool_and([aux589_BOOL,aux590_BOOL,aux592_BOOL,aux593_BOOL,w_00001_00014_BOOL],aux594_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux516_INTEGER,aux522_INTEGER,aux528_INTEGER,aux534_INTEGER,aux540_INTEGER,aux546_INTEGER,aux552_INTEGER,aux558_INTEGER,aux564_INTEGER,aux570_INTEGER,aux576_INTEGER,aux582_INTEGER,aux588_INTEGER,aux594_INTEGER,1],0,aux595_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux596_BOOL);
constraint int_lin_eq([-1,1,1],[aux597,1,s_00003],0);
constraint int_lt_reif(s_00003,aux597,aux598_BOOL);
constraint array_bool_and([aux596_BOOL,aux598_BOOL,w_00001_00003_BOOL],aux599_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux600_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux601_BOOL);
constraint int_lin_eq([-1,1,1],[aux602,2,s_00001],0);
constraint int_lt_reif(s_00003,aux602,aux603_BOOL);
constraint int_le_reif(s_00001, s_00003,aux604_BOOL);
constraint array_bool_and([aux600_BOOL,aux601_BOOL,aux603_BOOL,aux604_BOOL,w_00001_00001_BOOL],aux605_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux606_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux607_BOOL);
constraint int_lin_eq([-1,1,1],[aux608,6,s_00002],0);
constraint int_lt_reif(s_00003,aux608,aux609_BOOL);
constraint int_le_reif(s_00002, s_00003,aux610_BOOL);
constraint array_bool_and([aux606_BOOL,aux607_BOOL,aux609_BOOL,aux610_BOOL,w_00001_00002_BOOL],aux611_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux612_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux613_BOOL);
constraint int_lin_eq([-1,1,1],[aux614,2,s_00004],0);
constraint int_lt_reif(s_00003,aux614,aux615_BOOL);
constraint int_le_reif(s_00004, s_00003,aux616_BOOL);
constraint array_bool_and([aux612_BOOL,aux613_BOOL,aux615_BOOL,aux616_BOOL,w_00001_00004_BOOL],aux617_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux618_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux619_BOOL);
constraint int_lin_eq([-1,1,1],[aux620,1,s_00005],0);
constraint int_lt_reif(s_00003,aux620,aux621_BOOL);
constraint int_le_reif(s_00005, s_00003,aux622_BOOL);
constraint array_bool_and([aux618_BOOL,aux619_BOOL,aux621_BOOL,aux622_BOOL,w_00001_00005_BOOL],aux623_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux624_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux625_BOOL);
constraint int_lin_eq([-1,1,1],[aux626,2,s_00007],0);
constraint int_lt_reif(s_00003,aux626,aux627_BOOL);
constraint int_le_reif(s_00007, s_00003,aux628_BOOL);
constraint array_bool_and([aux624_BOOL,aux625_BOOL,aux627_BOOL,aux628_BOOL,w_00001_00007_BOOL],aux629_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux630_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux631_BOOL);
constraint int_lin_eq([-1,1,1],[aux632,4,s_00006],0);
constraint int_lt_reif(s_00003,aux632,aux633_BOOL);
constraint int_le_reif(s_00006, s_00003,aux634_BOOL);
constraint array_bool_and([aux630_BOOL,aux631_BOOL,aux633_BOOL,aux634_BOOL,w_00001_00006_BOOL],aux635_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux636_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux637_BOOL);
constraint int_lin_eq([-1,1,1],[aux638,2,s_00008],0);
constraint int_lt_reif(s_00003,aux638,aux639_BOOL);
constraint int_le_reif(s_00008, s_00003,aux640_BOOL);
constraint array_bool_and([aux636_BOOL,aux637_BOOL,aux639_BOOL,aux640_BOOL,w_00001_00008_BOOL],aux641_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux642_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux643_BOOL);
constraint int_lin_eq([-1,1,1],[aux644,2,s_00009],0);
constraint int_lt_reif(s_00003,aux644,aux645_BOOL);
constraint int_le_reif(s_00009, s_00003,aux646_BOOL);
constraint array_bool_and([aux642_BOOL,aux643_BOOL,aux645_BOOL,aux646_BOOL,w_00001_00009_BOOL],aux647_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux648_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux649_BOOL);
constraint int_lin_eq([-1,1,1],[aux650,1,s_00010],0);
constraint int_lt_reif(s_00003,aux650,aux651_BOOL);
constraint int_le_reif(s_00010, s_00003,aux652_BOOL);
constraint array_bool_and([aux648_BOOL,aux649_BOOL,aux651_BOOL,aux652_BOOL,w_00001_00010_BOOL],aux653_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux654_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux655_BOOL);
constraint int_lin_eq([-1,1,1],[aux656,2,s_00011],0);
constraint int_lt_reif(s_00003,aux656,aux657_BOOL);
constraint int_le_reif(s_00011, s_00003,aux658_BOOL);
constraint array_bool_and([aux654_BOOL,aux655_BOOL,aux657_BOOL,aux658_BOOL,w_00001_00011_BOOL],aux659_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux660_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux661_BOOL);
constraint int_lin_eq([-1,1,1],[aux662,3,s_00012],0);
constraint int_lt_reif(s_00003,aux662,aux663_BOOL);
constraint int_le_reif(s_00012, s_00003,aux664_BOOL);
constraint array_bool_and([aux660_BOOL,aux661_BOOL,aux663_BOOL,aux664_BOOL,w_00001_00012_BOOL],aux665_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux666_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux667_BOOL);
constraint int_lin_eq([-1,1,1],[aux668,3,s_00013],0);
constraint int_lt_reif(s_00003,aux668,aux669_BOOL);
constraint int_le_reif(s_00013, s_00003,aux670_BOOL);
constraint array_bool_and([aux666_BOOL,aux667_BOOL,aux669_BOOL,aux670_BOOL,w_00001_00013_BOOL],aux671_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux672_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux673_BOOL);
constraint int_lin_eq([-1,1,1],[aux674,3,s_00014],0);
constraint int_lt_reif(s_00003,aux674,aux675_BOOL);
constraint int_le_reif(s_00014, s_00003,aux676_BOOL);
constraint array_bool_and([aux672_BOOL,aux673_BOOL,aux675_BOOL,aux676_BOOL,w_00001_00014_BOOL],aux677_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux599_INTEGER,aux605_INTEGER,aux611_INTEGER,aux617_INTEGER,aux623_INTEGER,aux629_INTEGER,aux635_INTEGER,aux641_INTEGER,aux647_INTEGER,aux653_INTEGER,aux659_INTEGER,aux665_INTEGER,aux671_INTEGER,aux677_INTEGER,1],0,aux678_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux679_BOOL);
constraint int_lin_eq([-1,1,1],[aux680,2,s_00011],0);
constraint int_lt_reif(s_00011,aux680,aux681_BOOL);
constraint array_bool_and([aux679_BOOL,aux681_BOOL,w_00001_00011_BOOL],aux682_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux683_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux684_BOOL);
constraint int_lin_eq([-1,1,1],[aux685,2,s_00001],0);
constraint int_lt_reif(s_00011,aux685,aux686_BOOL);
constraint int_le_reif(s_00001, s_00011,aux687_BOOL);
constraint array_bool_and([aux683_BOOL,aux684_BOOL,aux686_BOOL,aux687_BOOL,w_00001_00001_BOOL],aux688_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux689_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux690_BOOL);
constraint int_lin_eq([-1,1,1],[aux691,6,s_00002],0);
constraint int_lt_reif(s_00011,aux691,aux692_BOOL);
constraint int_le_reif(s_00002, s_00011,aux693_BOOL);
constraint array_bool_and([aux689_BOOL,aux690_BOOL,aux692_BOOL,aux693_BOOL,w_00001_00002_BOOL],aux694_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux695_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux696_BOOL);
constraint int_lin_eq([-1,1,1],[aux697,1,s_00003],0);
constraint int_lt_reif(s_00011,aux697,aux698_BOOL);
constraint int_le_reif(s_00003, s_00011,aux699_BOOL);
constraint array_bool_and([aux695_BOOL,aux696_BOOL,aux698_BOOL,aux699_BOOL,w_00001_00003_BOOL],aux700_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux701_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux702_BOOL);
constraint int_lin_eq([-1,1,1],[aux703,2,s_00004],0);
constraint int_lt_reif(s_00011,aux703,aux704_BOOL);
constraint int_le_reif(s_00004, s_00011,aux705_BOOL);
constraint array_bool_and([aux701_BOOL,aux702_BOOL,aux704_BOOL,aux705_BOOL,w_00001_00004_BOOL],aux706_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux707_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux708_BOOL);
constraint int_lin_eq([-1,1,1],[aux709,1,s_00005],0);
constraint int_lt_reif(s_00011,aux709,aux710_BOOL);
constraint int_le_reif(s_00005, s_00011,aux711_BOOL);
constraint array_bool_and([aux707_BOOL,aux708_BOOL,aux710_BOOL,aux711_BOOL,w_00001_00005_BOOL],aux712_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux713_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux714_BOOL);
constraint int_lin_eq([-1,1,1],[aux715,4,s_00006],0);
constraint int_lt_reif(s_00011,aux715,aux716_BOOL);
constraint int_le_reif(s_00006, s_00011,aux717_BOOL);
constraint array_bool_and([aux713_BOOL,aux714_BOOL,aux716_BOOL,aux717_BOOL,w_00001_00006_BOOL],aux718_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux719_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux720_BOOL);
constraint int_lin_eq([-1,1,1],[aux721,2,s_00007],0);
constraint int_lt_reif(s_00011,aux721,aux722_BOOL);
constraint int_le_reif(s_00007, s_00011,aux723_BOOL);
constraint array_bool_and([aux719_BOOL,aux720_BOOL,aux722_BOOL,aux723_BOOL,w_00001_00007_BOOL],aux724_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux725_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux726_BOOL);
constraint int_lin_eq([-1,1,1],[aux727,2,s_00008],0);
constraint int_lt_reif(s_00011,aux727,aux728_BOOL);
constraint int_le_reif(s_00008, s_00011,aux729_BOOL);
constraint array_bool_and([aux725_BOOL,aux726_BOOL,aux728_BOOL,aux729_BOOL,w_00001_00008_BOOL],aux730_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux731_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux732_BOOL);
constraint int_lin_eq([-1,1,1],[aux733,2,s_00009],0);
constraint int_lt_reif(s_00011,aux733,aux734_BOOL);
constraint int_le_reif(s_00009, s_00011,aux735_BOOL);
constraint array_bool_and([aux731_BOOL,aux732_BOOL,aux734_BOOL,aux735_BOOL,w_00001_00009_BOOL],aux736_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux737_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux738_BOOL);
constraint int_lin_eq([-1,1,1],[aux739,1,s_00010],0);
constraint int_lt_reif(s_00011,aux739,aux740_BOOL);
constraint int_le_reif(s_00010, s_00011,aux741_BOOL);
constraint array_bool_and([aux737_BOOL,aux738_BOOL,aux740_BOOL,aux741_BOOL,w_00001_00010_BOOL],aux742_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux743_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux744_BOOL);
constraint int_lin_eq([-1,1,1],[aux745,3,s_00012],0);
constraint int_lt_reif(s_00011,aux745,aux746_BOOL);
constraint int_le_reif(s_00012, s_00011,aux747_BOOL);
constraint array_bool_and([aux743_BOOL,aux744_BOOL,aux746_BOOL,aux747_BOOL,w_00001_00012_BOOL],aux748_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux749_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux750_BOOL);
constraint int_lin_eq([-1,1,1],[aux751,3,s_00013],0);
constraint int_lt_reif(s_00011,aux751,aux752_BOOL);
constraint int_le_reif(s_00013, s_00011,aux753_BOOL);
constraint array_bool_and([aux749_BOOL,aux750_BOOL,aux752_BOOL,aux753_BOOL,w_00001_00013_BOOL],aux754_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux755_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux756_BOOL);
constraint int_lin_eq([-1,1,1],[aux757,3,s_00014],0);
constraint int_lt_reif(s_00011,aux757,aux758_BOOL);
constraint int_le_reif(s_00014, s_00011,aux759_BOOL);
constraint array_bool_and([aux755_BOOL,aux756_BOOL,aux758_BOOL,aux759_BOOL,w_00001_00014_BOOL],aux760_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux682_INTEGER,aux688_INTEGER,aux694_INTEGER,aux700_INTEGER,aux706_INTEGER,aux712_INTEGER,aux718_INTEGER,aux724_INTEGER,aux730_INTEGER,aux736_INTEGER,aux742_INTEGER,aux748_INTEGER,aux754_INTEGER,aux760_INTEGER,1],0,aux761_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux762_BOOL);
constraint int_lin_eq([-1,1,1],[aux763,4,s_00006],0);
constraint int_lt_reif(s_00006,aux763,aux764_BOOL);
constraint array_bool_and([aux762_BOOL,aux764_BOOL,w_00001_00006_BOOL],aux765_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux766_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux767_BOOL);
constraint int_lin_eq([-1,1,1],[aux768,2,s_00001],0);
constraint int_lt_reif(s_00006,aux768,aux769_BOOL);
constraint int_le_reif(s_00001, s_00006,aux770_BOOL);
constraint array_bool_and([aux766_BOOL,aux767_BOOL,aux769_BOOL,aux770_BOOL,w_00001_00001_BOOL],aux771_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux772_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux773_BOOL);
constraint int_lin_eq([-1,1,1],[aux774,6,s_00002],0);
constraint int_lt_reif(s_00006,aux774,aux775_BOOL);
constraint int_le_reif(s_00002, s_00006,aux776_BOOL);
constraint array_bool_and([aux772_BOOL,aux773_BOOL,aux775_BOOL,aux776_BOOL,w_00001_00002_BOOL],aux777_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux778_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux779_BOOL);
constraint int_lin_eq([-1,1,1],[aux780,1,s_00003],0);
constraint int_lt_reif(s_00006,aux780,aux781_BOOL);
constraint int_le_reif(s_00003, s_00006,aux782_BOOL);
constraint array_bool_and([aux778_BOOL,aux779_BOOL,aux781_BOOL,aux782_BOOL,w_00001_00003_BOOL],aux783_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux784_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux785_BOOL);
constraint int_lin_eq([-1,1,1],[aux786,2,s_00004],0);
constraint int_lt_reif(s_00006,aux786,aux787_BOOL);
constraint int_le_reif(s_00004, s_00006,aux788_BOOL);
constraint array_bool_and([aux784_BOOL,aux785_BOOL,aux787_BOOL,aux788_BOOL,w_00001_00004_BOOL],aux789_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux790_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux791_BOOL);
constraint int_lin_eq([-1,1,1],[aux792,1,s_00005],0);
constraint int_lt_reif(s_00006,aux792,aux793_BOOL);
constraint int_le_reif(s_00005, s_00006,aux794_BOOL);
constraint array_bool_and([aux790_BOOL,aux791_BOOL,aux793_BOOL,aux794_BOOL,w_00001_00005_BOOL],aux795_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux796_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux797_BOOL);
constraint int_lin_eq([-1,1,1],[aux798,2,s_00007],0);
constraint int_lt_reif(s_00006,aux798,aux799_BOOL);
constraint int_le_reif(s_00007, s_00006,aux800_BOOL);
constraint array_bool_and([aux796_BOOL,aux797_BOOL,aux799_BOOL,aux800_BOOL,w_00001_00007_BOOL],aux801_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux802_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux803_BOOL);
constraint int_lin_eq([-1,1,1],[aux804,2,s_00008],0);
constraint int_lt_reif(s_00006,aux804,aux805_BOOL);
constraint int_le_reif(s_00008, s_00006,aux806_BOOL);
constraint array_bool_and([aux802_BOOL,aux803_BOOL,aux805_BOOL,aux806_BOOL,w_00001_00008_BOOL],aux807_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux808_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux809_BOOL);
constraint int_lin_eq([-1,1,1],[aux810,2,s_00009],0);
constraint int_lt_reif(s_00006,aux810,aux811_BOOL);
constraint int_le_reif(s_00009, s_00006,aux812_BOOL);
constraint array_bool_and([aux808_BOOL,aux809_BOOL,aux811_BOOL,aux812_BOOL,w_00001_00009_BOOL],aux813_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux814_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux815_BOOL);
constraint int_lin_eq([-1,1,1],[aux816,1,s_00010],0);
constraint int_lt_reif(s_00006,aux816,aux817_BOOL);
constraint int_le_reif(s_00010, s_00006,aux818_BOOL);
constraint array_bool_and([aux814_BOOL,aux815_BOOL,aux817_BOOL,aux818_BOOL,w_00001_00010_BOOL],aux819_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux820_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux821_BOOL);
constraint int_lin_eq([-1,1,1],[aux822,2,s_00011],0);
constraint int_lt_reif(s_00006,aux822,aux823_BOOL);
constraint int_le_reif(s_00011, s_00006,aux824_BOOL);
constraint array_bool_and([aux820_BOOL,aux821_BOOL,aux823_BOOL,aux824_BOOL,w_00001_00011_BOOL],aux825_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux826_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux827_BOOL);
constraint int_lin_eq([-1,1,1],[aux828,3,s_00012],0);
constraint int_lt_reif(s_00006,aux828,aux829_BOOL);
constraint int_le_reif(s_00012, s_00006,aux830_BOOL);
constraint array_bool_and([aux826_BOOL,aux827_BOOL,aux829_BOOL,aux830_BOOL,w_00001_00012_BOOL],aux831_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux832_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux833_BOOL);
constraint int_lin_eq([-1,1,1],[aux834,3,s_00013],0);
constraint int_lt_reif(s_00006,aux834,aux835_BOOL);
constraint int_le_reif(s_00013, s_00006,aux836_BOOL);
constraint array_bool_and([aux832_BOOL,aux833_BOOL,aux835_BOOL,aux836_BOOL,w_00001_00013_BOOL],aux837_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux838_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux839_BOOL);
constraint int_lin_eq([-1,1,1],[aux840,3,s_00014],0);
constraint int_lt_reif(s_00006,aux840,aux841_BOOL);
constraint int_le_reif(s_00014, s_00006,aux842_BOOL);
constraint array_bool_and([aux838_BOOL,aux839_BOOL,aux841_BOOL,aux842_BOOL,w_00001_00014_BOOL],aux843_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux765_INTEGER,aux771_INTEGER,aux777_INTEGER,aux783_INTEGER,aux789_INTEGER,aux795_INTEGER,aux801_INTEGER,aux807_INTEGER,aux813_INTEGER,aux819_INTEGER,aux825_INTEGER,aux831_INTEGER,aux837_INTEGER,aux843_INTEGER,1],0,aux844_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux845_BOOL);
constraint int_lin_eq([-1,1,1],[aux846,3,s_00012],0);
constraint int_lt_reif(s_00012,aux846,aux847_BOOL);
constraint array_bool_and([aux845_BOOL,aux847_BOOL,w_00001_00012_BOOL],aux848_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux849_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux850_BOOL);
constraint int_lin_eq([-1,1,1],[aux851,2,s_00001],0);
constraint int_lt_reif(s_00012,aux851,aux852_BOOL);
constraint int_le_reif(s_00001, s_00012,aux853_BOOL);
constraint array_bool_and([aux849_BOOL,aux850_BOOL,aux852_BOOL,aux853_BOOL,w_00001_00001_BOOL],aux854_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux855_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux856_BOOL);
constraint int_lin_eq([-1,1,1],[aux857,6,s_00002],0);
constraint int_lt_reif(s_00012,aux857,aux858_BOOL);
constraint int_le_reif(s_00002, s_00012,aux859_BOOL);
constraint array_bool_and([aux855_BOOL,aux856_BOOL,aux858_BOOL,aux859_BOOL,w_00001_00002_BOOL],aux860_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux861_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux862_BOOL);
constraint int_lin_eq([-1,1,1],[aux863,1,s_00003],0);
constraint int_lt_reif(s_00012,aux863,aux864_BOOL);
constraint int_le_reif(s_00003, s_00012,aux865_BOOL);
constraint array_bool_and([aux861_BOOL,aux862_BOOL,aux864_BOOL,aux865_BOOL,w_00001_00003_BOOL],aux866_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux867_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux868_BOOL);
constraint int_lin_eq([-1,1,1],[aux869,2,s_00004],0);
constraint int_lt_reif(s_00012,aux869,aux870_BOOL);
constraint int_le_reif(s_00004, s_00012,aux871_BOOL);
constraint array_bool_and([aux867_BOOL,aux868_BOOL,aux870_BOOL,aux871_BOOL,w_00001_00004_BOOL],aux872_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux873_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux874_BOOL);
constraint int_lin_eq([-1,1,1],[aux875,1,s_00005],0);
constraint int_lt_reif(s_00012,aux875,aux876_BOOL);
constraint int_le_reif(s_00005, s_00012,aux877_BOOL);
constraint array_bool_and([aux873_BOOL,aux874_BOOL,aux876_BOOL,aux877_BOOL,w_00001_00005_BOOL],aux878_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux879_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux880_BOOL);
constraint int_lin_eq([-1,1,1],[aux881,4,s_00006],0);
constraint int_lt_reif(s_00012,aux881,aux882_BOOL);
constraint int_le_reif(s_00006, s_00012,aux883_BOOL);
constraint array_bool_and([aux879_BOOL,aux880_BOOL,aux882_BOOL,aux883_BOOL,w_00001_00006_BOOL],aux884_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux885_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux886_BOOL);
constraint int_lin_eq([-1,1,1],[aux887,2,s_00007],0);
constraint int_lt_reif(s_00012,aux887,aux888_BOOL);
constraint int_le_reif(s_00007, s_00012,aux889_BOOL);
constraint array_bool_and([aux885_BOOL,aux886_BOOL,aux888_BOOL,aux889_BOOL,w_00001_00007_BOOL],aux890_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux891_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux892_BOOL);
constraint int_lin_eq([-1,1,1],[aux893,2,s_00008],0);
constraint int_lt_reif(s_00012,aux893,aux894_BOOL);
constraint int_le_reif(s_00008, s_00012,aux895_BOOL);
constraint array_bool_and([aux891_BOOL,aux892_BOOL,aux894_BOOL,aux895_BOOL,w_00001_00008_BOOL],aux896_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux897_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux898_BOOL);
constraint int_lin_eq([-1,1,1],[aux899,2,s_00009],0);
constraint int_lt_reif(s_00012,aux899,aux900_BOOL);
constraint int_le_reif(s_00009, s_00012,aux901_BOOL);
constraint array_bool_and([aux897_BOOL,aux898_BOOL,aux900_BOOL,aux901_BOOL,w_00001_00009_BOOL],aux902_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux903_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux904_BOOL);
constraint int_lin_eq([-1,1,1],[aux905,1,s_00010],0);
constraint int_lt_reif(s_00012,aux905,aux906_BOOL);
constraint int_le_reif(s_00010, s_00012,aux907_BOOL);
constraint array_bool_and([aux903_BOOL,aux904_BOOL,aux906_BOOL,aux907_BOOL,w_00001_00010_BOOL],aux908_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux909_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux910_BOOL);
constraint int_lin_eq([-1,1,1],[aux911,2,s_00011],0);
constraint int_lt_reif(s_00012,aux911,aux912_BOOL);
constraint int_le_reif(s_00011, s_00012,aux913_BOOL);
constraint array_bool_and([aux909_BOOL,aux910_BOOL,aux912_BOOL,aux913_BOOL,w_00001_00011_BOOL],aux914_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux915_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux916_BOOL);
constraint int_lin_eq([-1,1,1],[aux917,3,s_00013],0);
constraint int_lt_reif(s_00012,aux917,aux918_BOOL);
constraint int_le_reif(s_00013, s_00012,aux919_BOOL);
constraint array_bool_and([aux915_BOOL,aux916_BOOL,aux918_BOOL,aux919_BOOL,w_00001_00013_BOOL],aux920_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux921_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux922_BOOL);
constraint int_lin_eq([-1,1,1],[aux923,3,s_00014],0);
constraint int_lt_reif(s_00012,aux923,aux924_BOOL);
constraint int_le_reif(s_00014, s_00012,aux925_BOOL);
constraint array_bool_and([aux921_BOOL,aux922_BOOL,aux924_BOOL,aux925_BOOL,w_00001_00014_BOOL],aux926_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux848_INTEGER,aux854_INTEGER,aux860_INTEGER,aux866_INTEGER,aux872_INTEGER,aux878_INTEGER,aux884_INTEGER,aux890_INTEGER,aux896_INTEGER,aux902_INTEGER,aux908_INTEGER,aux914_INTEGER,aux920_INTEGER,aux926_INTEGER,1],0,aux927_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux928_BOOL);
constraint int_lin_eq([-1,1,1],[aux929,2,s_00004],0);
constraint int_lt_reif(s_00004,aux929,aux930_BOOL);
constraint array_bool_and([aux928_BOOL,aux930_BOOL,w_00001_00004_BOOL],aux931_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux932_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux933_BOOL);
constraint int_lin_eq([-1,1,1],[aux934,2,s_00001],0);
constraint int_lt_reif(s_00004,aux934,aux935_BOOL);
constraint int_le_reif(s_00001, s_00004,aux936_BOOL);
constraint array_bool_and([aux932_BOOL,aux933_BOOL,aux935_BOOL,aux936_BOOL,w_00001_00001_BOOL],aux937_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux938_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux939_BOOL);
constraint int_lin_eq([-1,1,1],[aux940,6,s_00002],0);
constraint int_lt_reif(s_00004,aux940,aux941_BOOL);
constraint int_le_reif(s_00002, s_00004,aux942_BOOL);
constraint array_bool_and([aux938_BOOL,aux939_BOOL,aux941_BOOL,aux942_BOOL,w_00001_00002_BOOL],aux943_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux944_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux945_BOOL);
constraint int_lin_eq([-1,1,1],[aux946,1,s_00003],0);
constraint int_lt_reif(s_00004,aux946,aux947_BOOL);
constraint int_le_reif(s_00003, s_00004,aux948_BOOL);
constraint array_bool_and([aux944_BOOL,aux945_BOOL,aux947_BOOL,aux948_BOOL,w_00001_00003_BOOL],aux949_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux950_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux951_BOOL);
constraint int_lin_eq([-1,1,1],[aux952,1,s_00005],0);
constraint int_lt_reif(s_00004,aux952,aux953_BOOL);
constraint int_le_reif(s_00005, s_00004,aux954_BOOL);
constraint array_bool_and([aux950_BOOL,aux951_BOOL,aux953_BOOL,aux954_BOOL,w_00001_00005_BOOL],aux955_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux956_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux957_BOOL);
constraint int_lin_eq([-1,1,1],[aux958,2,s_00007],0);
constraint int_lt_reif(s_00004,aux958,aux959_BOOL);
constraint int_le_reif(s_00007, s_00004,aux960_BOOL);
constraint array_bool_and([aux956_BOOL,aux957_BOOL,aux959_BOOL,aux960_BOOL,w_00001_00007_BOOL],aux961_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux962_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux963_BOOL);
constraint int_lin_eq([-1,1,1],[aux964,4,s_00006],0);
constraint int_lt_reif(s_00004,aux964,aux965_BOOL);
constraint int_le_reif(s_00006, s_00004,aux966_BOOL);
constraint array_bool_and([aux962_BOOL,aux963_BOOL,aux965_BOOL,aux966_BOOL,w_00001_00006_BOOL],aux967_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux968_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux969_BOOL);
constraint int_lin_eq([-1,1,1],[aux970,2,s_00008],0);
constraint int_lt_reif(s_00004,aux970,aux971_BOOL);
constraint int_le_reif(s_00008, s_00004,aux972_BOOL);
constraint array_bool_and([aux968_BOOL,aux969_BOOL,aux971_BOOL,aux972_BOOL,w_00001_00008_BOOL],aux973_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux974_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux975_BOOL);
constraint int_lin_eq([-1,1,1],[aux976,2,s_00009],0);
constraint int_lt_reif(s_00004,aux976,aux977_BOOL);
constraint int_le_reif(s_00009, s_00004,aux978_BOOL);
constraint array_bool_and([aux974_BOOL,aux975_BOOL,aux977_BOOL,aux978_BOOL,w_00001_00009_BOOL],aux979_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux980_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux981_BOOL);
constraint int_lin_eq([-1,1,1],[aux982,1,s_00010],0);
constraint int_lt_reif(s_00004,aux982,aux983_BOOL);
constraint int_le_reif(s_00010, s_00004,aux984_BOOL);
constraint array_bool_and([aux980_BOOL,aux981_BOOL,aux983_BOOL,aux984_BOOL,w_00001_00010_BOOL],aux985_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux986_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux987_BOOL);
constraint int_lin_eq([-1,1,1],[aux988,2,s_00011],0);
constraint int_lt_reif(s_00004,aux988,aux989_BOOL);
constraint int_le_reif(s_00011, s_00004,aux990_BOOL);
constraint array_bool_and([aux986_BOOL,aux987_BOOL,aux989_BOOL,aux990_BOOL,w_00001_00011_BOOL],aux991_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux992_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux993_BOOL);
constraint int_lin_eq([-1,1,1],[aux994,3,s_00012],0);
constraint int_lt_reif(s_00004,aux994,aux995_BOOL);
constraint int_le_reif(s_00012, s_00004,aux996_BOOL);
constraint array_bool_and([aux992_BOOL,aux993_BOOL,aux995_BOOL,aux996_BOOL,w_00001_00012_BOOL],aux997_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux998_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux999_BOOL);
constraint int_lin_eq([-1,1,1],[aux1000,3,s_00013],0);
constraint int_lt_reif(s_00004,aux1000,aux1001_BOOL);
constraint int_le_reif(s_00013, s_00004,aux1002_BOOL);
constraint array_bool_and([aux998_BOOL,aux999_BOOL,aux1001_BOOL,aux1002_BOOL,w_00001_00013_BOOL],aux1003_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux1004_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1005_BOOL);
constraint int_lin_eq([-1,1,1],[aux1006,3,s_00014],0);
constraint int_lt_reif(s_00004,aux1006,aux1007_BOOL);
constraint int_le_reif(s_00014, s_00004,aux1008_BOOL);
constraint array_bool_and([aux1004_BOOL,aux1005_BOOL,aux1007_BOOL,aux1008_BOOL,w_00001_00014_BOOL],aux1009_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux931_INTEGER,aux937_INTEGER,aux943_INTEGER,aux949_INTEGER,aux955_INTEGER,aux961_INTEGER,aux967_INTEGER,aux973_INTEGER,aux979_INTEGER,aux985_INTEGER,aux991_INTEGER,aux997_INTEGER,aux1003_INTEGER,aux1009_INTEGER,1],0,aux1010_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1011_BOOL);
constraint int_lin_eq([-1,1,1],[aux1012,3,s_00013],0);
constraint int_lt_reif(s_00013,aux1012,aux1013_BOOL);
constraint array_bool_and([aux1011_BOOL,aux1013_BOOL,w_00001_00013_BOOL],aux1014_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux1015_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1016_BOOL);
constraint int_lin_eq([-1,1,1],[aux1017,2,s_00001],0);
constraint int_lt_reif(s_00013,aux1017,aux1018_BOOL);
constraint int_le_reif(s_00001, s_00013,aux1019_BOOL);
constraint array_bool_and([aux1015_BOOL,aux1016_BOOL,aux1018_BOOL,aux1019_BOOL,w_00001_00001_BOOL],aux1020_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1021_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1022_BOOL);
constraint int_lin_eq([-1,1,1],[aux1023,6,s_00002],0);
constraint int_lt_reif(s_00013,aux1023,aux1024_BOOL);
constraint int_le_reif(s_00002, s_00013,aux1025_BOOL);
constraint array_bool_and([aux1021_BOOL,aux1022_BOOL,aux1024_BOOL,aux1025_BOOL,w_00001_00002_BOOL],aux1026_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux1027_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1028_BOOL);
constraint int_lin_eq([-1,1,1],[aux1029,1,s_00003],0);
constraint int_lt_reif(s_00013,aux1029,aux1030_BOOL);
constraint int_le_reif(s_00003, s_00013,aux1031_BOOL);
constraint array_bool_and([aux1027_BOOL,aux1028_BOOL,aux1030_BOOL,aux1031_BOOL,w_00001_00003_BOOL],aux1032_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux1033_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1034_BOOL);
constraint int_lin_eq([-1,1,1],[aux1035,2,s_00004],0);
constraint int_lt_reif(s_00013,aux1035,aux1036_BOOL);
constraint int_le_reif(s_00004, s_00013,aux1037_BOOL);
constraint array_bool_and([aux1033_BOOL,aux1034_BOOL,aux1036_BOOL,aux1037_BOOL,w_00001_00004_BOOL],aux1038_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux1039_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1040_BOOL);
constraint int_lin_eq([-1,1,1],[aux1041,1,s_00005],0);
constraint int_lt_reif(s_00013,aux1041,aux1042_BOOL);
constraint int_le_reif(s_00005, s_00013,aux1043_BOOL);
constraint array_bool_and([aux1039_BOOL,aux1040_BOOL,aux1042_BOOL,aux1043_BOOL,w_00001_00005_BOOL],aux1044_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1045_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1046_BOOL);
constraint int_lin_eq([-1,1,1],[aux1047,4,s_00006],0);
constraint int_lt_reif(s_00013,aux1047,aux1048_BOOL);
constraint int_le_reif(s_00006, s_00013,aux1049_BOOL);
constraint array_bool_and([aux1045_BOOL,aux1046_BOOL,aux1048_BOOL,aux1049_BOOL,w_00001_00006_BOOL],aux1050_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux1051_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1052_BOOL);
constraint int_lin_eq([-1,1,1],[aux1053,2,s_00007],0);
constraint int_lt_reif(s_00013,aux1053,aux1054_BOOL);
constraint int_le_reif(s_00007, s_00013,aux1055_BOOL);
constraint array_bool_and([aux1051_BOOL,aux1052_BOOL,aux1054_BOOL,aux1055_BOOL,w_00001_00007_BOOL],aux1056_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux1057_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1058_BOOL);
constraint int_lin_eq([-1,1,1],[aux1059,2,s_00008],0);
constraint int_lt_reif(s_00013,aux1059,aux1060_BOOL);
constraint int_le_reif(s_00008, s_00013,aux1061_BOOL);
constraint array_bool_and([aux1057_BOOL,aux1058_BOOL,aux1060_BOOL,aux1061_BOOL,w_00001_00008_BOOL],aux1062_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux1063_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1064_BOOL);
constraint int_lin_eq([-1,1,1],[aux1065,2,s_00009],0);
constraint int_lt_reif(s_00013,aux1065,aux1066_BOOL);
constraint int_le_reif(s_00009, s_00013,aux1067_BOOL);
constraint array_bool_and([aux1063_BOOL,aux1064_BOOL,aux1066_BOOL,aux1067_BOOL,w_00001_00009_BOOL],aux1068_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1069_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1070_BOOL);
constraint int_lin_eq([-1,1,1],[aux1071,1,s_00010],0);
constraint int_lt_reif(s_00013,aux1071,aux1072_BOOL);
constraint int_le_reif(s_00010, s_00013,aux1073_BOOL);
constraint array_bool_and([aux1069_BOOL,aux1070_BOOL,aux1072_BOOL,aux1073_BOOL,w_00001_00010_BOOL],aux1074_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux1075_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1076_BOOL);
constraint int_lin_eq([-1,1,1],[aux1077,2,s_00011],0);
constraint int_lt_reif(s_00013,aux1077,aux1078_BOOL);
constraint int_le_reif(s_00011, s_00013,aux1079_BOOL);
constraint array_bool_and([aux1075_BOOL,aux1076_BOOL,aux1078_BOOL,aux1079_BOOL,w_00001_00011_BOOL],aux1080_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux1081_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1082_BOOL);
constraint int_lin_eq([-1,1,1],[aux1083,3,s_00012],0);
constraint int_lt_reif(s_00013,aux1083,aux1084_BOOL);
constraint int_le_reif(s_00012, s_00013,aux1085_BOOL);
constraint array_bool_and([aux1081_BOOL,aux1082_BOOL,aux1084_BOOL,aux1085_BOOL,w_00001_00012_BOOL],aux1086_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1087_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1088_BOOL);
constraint int_lin_eq([-1,1,1],[aux1089,3,s_00014],0);
constraint int_lt_reif(s_00013,aux1089,aux1090_BOOL);
constraint int_le_reif(s_00014, s_00013,aux1091_BOOL);
constraint array_bool_and([aux1087_BOOL,aux1088_BOOL,aux1090_BOOL,aux1091_BOOL,w_00001_00014_BOOL],aux1092_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux1014_INTEGER,aux1020_INTEGER,aux1026_INTEGER,aux1032_INTEGER,aux1038_INTEGER,aux1044_INTEGER,aux1050_INTEGER,aux1056_INTEGER,aux1062_INTEGER,aux1068_INTEGER,aux1074_INTEGER,aux1080_INTEGER,aux1086_INTEGER,aux1092_INTEGER,1],0,aux1093_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1094_BOOL);
constraint int_lin_eq([-1,1,1],[aux1095,3,s_00014],0);
constraint int_lt_reif(s_00014,aux1095,aux1096_BOOL);
constraint array_bool_and([aux1094_BOOL,aux1096_BOOL,w_00001_00014_BOOL],aux1097_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux1098_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1099_BOOL);
constraint int_lin_eq([-1,1,1],[aux1100,2,s_00001],0);
constraint int_lt_reif(s_00014,aux1100,aux1101_BOOL);
constraint int_le_reif(s_00001, s_00014,aux1102_BOOL);
constraint array_bool_and([aux1098_BOOL,aux1099_BOOL,aux1101_BOOL,aux1102_BOOL,w_00001_00001_BOOL],aux1103_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1104_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1105_BOOL);
constraint int_lin_eq([-1,1,1],[aux1106,6,s_00002],0);
constraint int_lt_reif(s_00014,aux1106,aux1107_BOOL);
constraint int_le_reif(s_00002, s_00014,aux1108_BOOL);
constraint array_bool_and([aux1104_BOOL,aux1105_BOOL,aux1107_BOOL,aux1108_BOOL,w_00001_00002_BOOL],aux1109_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux1110_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1111_BOOL);
constraint int_lin_eq([-1,1,1],[aux1112,1,s_00003],0);
constraint int_lt_reif(s_00014,aux1112,aux1113_BOOL);
constraint int_le_reif(s_00003, s_00014,aux1114_BOOL);
constraint array_bool_and([aux1110_BOOL,aux1111_BOOL,aux1113_BOOL,aux1114_BOOL,w_00001_00003_BOOL],aux1115_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux1116_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1117_BOOL);
constraint int_lin_eq([-1,1,1],[aux1118,2,s_00004],0);
constraint int_lt_reif(s_00014,aux1118,aux1119_BOOL);
constraint int_le_reif(s_00004, s_00014,aux1120_BOOL);
constraint array_bool_and([aux1116_BOOL,aux1117_BOOL,aux1119_BOOL,aux1120_BOOL,w_00001_00004_BOOL],aux1121_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux1122_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1123_BOOL);
constraint int_lin_eq([-1,1,1],[aux1124,1,s_00005],0);
constraint int_lt_reif(s_00014,aux1124,aux1125_BOOL);
constraint int_le_reif(s_00005, s_00014,aux1126_BOOL);
constraint array_bool_and([aux1122_BOOL,aux1123_BOOL,aux1125_BOOL,aux1126_BOOL,w_00001_00005_BOOL],aux1127_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1128_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1129_BOOL);
constraint int_lin_eq([-1,1,1],[aux1130,4,s_00006],0);
constraint int_lt_reif(s_00014,aux1130,aux1131_BOOL);
constraint int_le_reif(s_00006, s_00014,aux1132_BOOL);
constraint array_bool_and([aux1128_BOOL,aux1129_BOOL,aux1131_BOOL,aux1132_BOOL,w_00001_00006_BOOL],aux1133_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux1134_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1135_BOOL);
constraint int_lin_eq([-1,1,1],[aux1136,2,s_00007],0);
constraint int_lt_reif(s_00014,aux1136,aux1137_BOOL);
constraint int_le_reif(s_00007, s_00014,aux1138_BOOL);
constraint array_bool_and([aux1134_BOOL,aux1135_BOOL,aux1137_BOOL,aux1138_BOOL,w_00001_00007_BOOL],aux1139_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux1140_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1141_BOOL);
constraint int_lin_eq([-1,1,1],[aux1142,2,s_00008],0);
constraint int_lt_reif(s_00014,aux1142,aux1143_BOOL);
constraint int_le_reif(s_00008, s_00014,aux1144_BOOL);
constraint array_bool_and([aux1140_BOOL,aux1141_BOOL,aux1143_BOOL,aux1144_BOOL,w_00001_00008_BOOL],aux1145_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux1146_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1147_BOOL);
constraint int_lin_eq([-1,1,1],[aux1148,2,s_00009],0);
constraint int_lt_reif(s_00014,aux1148,aux1149_BOOL);
constraint int_le_reif(s_00009, s_00014,aux1150_BOOL);
constraint array_bool_and([aux1146_BOOL,aux1147_BOOL,aux1149_BOOL,aux1150_BOOL,w_00001_00009_BOOL],aux1151_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1152_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1153_BOOL);
constraint int_lin_eq([-1,1,1],[aux1154,1,s_00010],0);
constraint int_lt_reif(s_00014,aux1154,aux1155_BOOL);
constraint int_le_reif(s_00010, s_00014,aux1156_BOOL);
constraint array_bool_and([aux1152_BOOL,aux1153_BOOL,aux1155_BOOL,aux1156_BOOL,w_00001_00010_BOOL],aux1157_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux1158_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1159_BOOL);
constraint int_lin_eq([-1,1,1],[aux1160,2,s_00011],0);
constraint int_lt_reif(s_00014,aux1160,aux1161_BOOL);
constraint int_le_reif(s_00011, s_00014,aux1162_BOOL);
constraint array_bool_and([aux1158_BOOL,aux1159_BOOL,aux1161_BOOL,aux1162_BOOL,w_00001_00011_BOOL],aux1163_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux1164_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1165_BOOL);
constraint int_lin_eq([-1,1,1],[aux1166,3,s_00012],0);
constraint int_lt_reif(s_00014,aux1166,aux1167_BOOL);
constraint int_le_reif(s_00012, s_00014,aux1168_BOOL);
constraint array_bool_and([aux1164_BOOL,aux1165_BOOL,aux1167_BOOL,aux1168_BOOL,w_00001_00012_BOOL],aux1169_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1170_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1171_BOOL);
constraint int_lin_eq([-1,1,1],[aux1172,3,s_00013],0);
constraint int_lt_reif(s_00014,aux1172,aux1173_BOOL);
constraint int_le_reif(s_00013, s_00014,aux1174_BOOL);
constraint array_bool_and([aux1170_BOOL,aux1171_BOOL,aux1173_BOOL,aux1174_BOOL,w_00001_00013_BOOL],aux1175_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux1097_INTEGER,aux1103_INTEGER,aux1109_INTEGER,aux1115_INTEGER,aux1121_INTEGER,aux1127_INTEGER,aux1133_INTEGER,aux1139_INTEGER,aux1145_INTEGER,aux1151_INTEGER,aux1157_INTEGER,aux1163_INTEGER,aux1169_INTEGER,aux1175_INTEGER,1],0,aux1176_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux1177_BOOL);
constraint int_lin_eq([-1,1,1],[aux1178,2,s_00009],0);
constraint int_lt_reif(s_00009,aux1178,aux1179_BOOL);
constraint array_bool_and([aux1177_BOOL,aux1179_BOOL,w_00001_00009_BOOL],aux1180_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux1181_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux1182_BOOL);
constraint int_lin_eq([-1,1,1],[aux1183,2,s_00001],0);
constraint int_lt_reif(s_00009,aux1183,aux1184_BOOL);
constraint int_le_reif(s_00001, s_00009,aux1185_BOOL);
constraint array_bool_and([aux1181_BOOL,aux1182_BOOL,aux1184_BOOL,aux1185_BOOL,w_00001_00001_BOOL],aux1186_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1187_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux1188_BOOL);
constraint int_lin_eq([-1,1,1],[aux1189,6,s_00002],0);
constraint int_lt_reif(s_00009,aux1189,aux1190_BOOL);
constraint int_le_reif(s_00002, s_00009,aux1191_BOOL);
constraint array_bool_and([aux1187_BOOL,aux1188_BOOL,aux1190_BOOL,aux1191_BOOL,w_00001_00002_BOOL],aux1192_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux1193_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux1194_BOOL);
constraint int_lin_eq([-1,1,1],[aux1195,1,s_00003],0);
constraint int_lt_reif(s_00009,aux1195,aux1196_BOOL);
constraint int_le_reif(s_00003, s_00009,aux1197_BOOL);
constraint array_bool_and([aux1193_BOOL,aux1194_BOOL,aux1196_BOOL,aux1197_BOOL,w_00001_00003_BOOL],aux1198_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux1199_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux1200_BOOL);
constraint int_lin_eq([-1,1,1],[aux1201,2,s_00004],0);
constraint int_lt_reif(s_00009,aux1201,aux1202_BOOL);
constraint int_le_reif(s_00004, s_00009,aux1203_BOOL);
constraint array_bool_and([aux1199_BOOL,aux1200_BOOL,aux1202_BOOL,aux1203_BOOL,w_00001_00004_BOOL],aux1204_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux1205_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux1206_BOOL);
constraint int_lin_eq([-1,1,1],[aux1207,1,s_00005],0);
constraint int_lt_reif(s_00009,aux1207,aux1208_BOOL);
constraint int_le_reif(s_00005, s_00009,aux1209_BOOL);
constraint array_bool_and([aux1205_BOOL,aux1206_BOOL,aux1208_BOOL,aux1209_BOOL,w_00001_00005_BOOL],aux1210_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1211_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux1212_BOOL);
constraint int_lin_eq([-1,1,1],[aux1213,4,s_00006],0);
constraint int_lt_reif(s_00009,aux1213,aux1214_BOOL);
constraint int_le_reif(s_00006, s_00009,aux1215_BOOL);
constraint array_bool_and([aux1211_BOOL,aux1212_BOOL,aux1214_BOOL,aux1215_BOOL,w_00001_00006_BOOL],aux1216_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux1217_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux1218_BOOL);
constraint int_lin_eq([-1,1,1],[aux1219,2,s_00007],0);
constraint int_lt_reif(s_00009,aux1219,aux1220_BOOL);
constraint int_le_reif(s_00007, s_00009,aux1221_BOOL);
constraint array_bool_and([aux1217_BOOL,aux1218_BOOL,aux1220_BOOL,aux1221_BOOL,w_00001_00007_BOOL],aux1222_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux1223_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux1224_BOOL);
constraint int_lin_eq([-1,1,1],[aux1225,2,s_00008],0);
constraint int_lt_reif(s_00009,aux1225,aux1226_BOOL);
constraint int_le_reif(s_00008, s_00009,aux1227_BOOL);
constraint array_bool_and([aux1223_BOOL,aux1224_BOOL,aux1226_BOOL,aux1227_BOOL,w_00001_00008_BOOL],aux1228_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux1229_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1230_BOOL);
constraint int_lin_eq([-1,1,1],[aux1231,1,s_00010],0);
constraint int_lt_reif(s_00009,aux1231,aux1232_BOOL);
constraint int_le_reif(s_00010, s_00009,aux1233_BOOL);
constraint array_bool_and([aux1229_BOOL,aux1230_BOOL,aux1232_BOOL,aux1233_BOOL,w_00001_00010_BOOL],aux1234_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux1235_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux1236_BOOL);
constraint int_lin_eq([-1,1,1],[aux1237,2,s_00011],0);
constraint int_lt_reif(s_00009,aux1237,aux1238_BOOL);
constraint int_le_reif(s_00011, s_00009,aux1239_BOOL);
constraint array_bool_and([aux1235_BOOL,aux1236_BOOL,aux1238_BOOL,aux1239_BOOL,w_00001_00011_BOOL],aux1240_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux1241_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux1242_BOOL);
constraint int_lin_eq([-1,1,1],[aux1243,3,s_00012],0);
constraint int_lt_reif(s_00009,aux1243,aux1244_BOOL);
constraint int_le_reif(s_00012, s_00009,aux1245_BOOL);
constraint array_bool_and([aux1241_BOOL,aux1242_BOOL,aux1244_BOOL,aux1245_BOOL,w_00001_00012_BOOL],aux1246_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux1247_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1248_BOOL);
constraint int_lin_eq([-1,1,1],[aux1249,3,s_00013],0);
constraint int_lt_reif(s_00009,aux1249,aux1250_BOOL);
constraint int_le_reif(s_00013, s_00009,aux1251_BOOL);
constraint array_bool_and([aux1247_BOOL,aux1248_BOOL,aux1250_BOOL,aux1251_BOOL,w_00001_00013_BOOL],aux1252_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux1253_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1254_BOOL);
constraint int_lin_eq([-1,1,1],[aux1255,3,s_00014],0);
constraint int_lt_reif(s_00009,aux1255,aux1256_BOOL);
constraint int_le_reif(s_00014, s_00009,aux1257_BOOL);
constraint array_bool_and([aux1253_BOOL,aux1254_BOOL,aux1256_BOOL,aux1257_BOOL,w_00001_00014_BOOL],aux1258_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux1180_INTEGER,aux1186_INTEGER,aux1192_INTEGER,aux1198_INTEGER,aux1204_INTEGER,aux1210_INTEGER,aux1216_INTEGER,aux1222_INTEGER,aux1228_INTEGER,aux1234_INTEGER,aux1240_INTEGER,aux1246_INTEGER,aux1252_INTEGER,aux1258_INTEGER,1],0,aux1259_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux1260_BOOL);
constraint int_lin_eq([-1,1,1],[aux1261,2,s_00001],0);
constraint int_lt_reif(s_00001,aux1261,aux1262_BOOL);
constraint array_bool_and([aux1260_BOOL,aux1262_BOOL,w_00001_00001_BOOL],aux1263_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux1264_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux1265_BOOL);
constraint int_lin_eq([-1,1,1],[aux1266,1,s_00003],0);
constraint int_lt_reif(s_00001,aux1266,aux1267_BOOL);
constraint int_le_reif(s_00003, s_00001,aux1268_BOOL);
constraint array_bool_and([aux1264_BOOL,aux1265_BOOL,aux1267_BOOL,aux1268_BOOL,w_00001_00003_BOOL],aux1269_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux1270_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux1271_BOOL);
constraint int_lin_eq([-1,1,1],[aux1272,2,s_00004],0);
constraint int_lt_reif(s_00001,aux1272,aux1273_BOOL);
constraint int_le_reif(s_00004, s_00001,aux1274_BOOL);
constraint array_bool_and([aux1270_BOOL,aux1271_BOOL,aux1273_BOOL,aux1274_BOOL,w_00001_00004_BOOL],aux1275_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux1276_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux1277_BOOL);
constraint int_lin_eq([-1,1,1],[aux1278,1,s_00005],0);
constraint int_lt_reif(s_00001,aux1278,aux1279_BOOL);
constraint int_le_reif(s_00005, s_00001,aux1280_BOOL);
constraint array_bool_and([aux1276_BOOL,aux1277_BOOL,aux1279_BOOL,aux1280_BOOL,w_00001_00005_BOOL],aux1281_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux1282_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1283_BOOL);
constraint int_lin_eq([-1,1,1],[aux1284,6,s_00002],0);
constraint int_lt_reif(s_00001,aux1284,aux1285_BOOL);
constraint int_le_reif(s_00002, s_00001,aux1286_BOOL);
constraint array_bool_and([aux1282_BOOL,aux1283_BOOL,aux1285_BOOL,aux1286_BOOL,w_00001_00002_BOOL],aux1287_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux1288_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux1289_BOOL);
constraint int_lin_eq([-1,1,1],[aux1290,2,s_00007],0);
constraint int_lt_reif(s_00001,aux1290,aux1291_BOOL);
constraint int_le_reif(s_00007, s_00001,aux1292_BOOL);
constraint array_bool_and([aux1288_BOOL,aux1289_BOOL,aux1291_BOOL,aux1292_BOOL,w_00001_00007_BOOL],aux1293_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux1294_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1295_BOOL);
constraint int_lin_eq([-1,1,1],[aux1296,4,s_00006],0);
constraint int_lt_reif(s_00001,aux1296,aux1297_BOOL);
constraint int_le_reif(s_00006, s_00001,aux1298_BOOL);
constraint array_bool_and([aux1294_BOOL,aux1295_BOOL,aux1297_BOOL,aux1298_BOOL,w_00001_00006_BOOL],aux1299_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux1300_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux1301_BOOL);
constraint int_lin_eq([-1,1,1],[aux1302,2,s_00008],0);
constraint int_lt_reif(s_00001,aux1302,aux1303_BOOL);
constraint int_le_reif(s_00008, s_00001,aux1304_BOOL);
constraint array_bool_and([aux1300_BOOL,aux1301_BOOL,aux1303_BOOL,aux1304_BOOL,w_00001_00008_BOOL],aux1305_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux1306_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux1307_BOOL);
constraint int_lin_eq([-1,1,1],[aux1308,2,s_00009],0);
constraint int_lt_reif(s_00001,aux1308,aux1309_BOOL);
constraint int_le_reif(s_00009, s_00001,aux1310_BOOL);
constraint array_bool_and([aux1306_BOOL,aux1307_BOOL,aux1309_BOOL,aux1310_BOOL,w_00001_00009_BOOL],aux1311_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux1312_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1313_BOOL);
constraint int_lin_eq([-1,1,1],[aux1314,1,s_00010],0);
constraint int_lt_reif(s_00001,aux1314,aux1315_BOOL);
constraint int_le_reif(s_00010, s_00001,aux1316_BOOL);
constraint array_bool_and([aux1312_BOOL,aux1313_BOOL,aux1315_BOOL,aux1316_BOOL,w_00001_00010_BOOL],aux1317_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux1318_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux1319_BOOL);
constraint int_lin_eq([-1,1,1],[aux1320,2,s_00011],0);
constraint int_lt_reif(s_00001,aux1320,aux1321_BOOL);
constraint int_le_reif(s_00011, s_00001,aux1322_BOOL);
constraint array_bool_and([aux1318_BOOL,aux1319_BOOL,aux1321_BOOL,aux1322_BOOL,w_00001_00011_BOOL],aux1323_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux1324_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux1325_BOOL);
constraint int_lin_eq([-1,1,1],[aux1326,3,s_00012],0);
constraint int_lt_reif(s_00001,aux1326,aux1327_BOOL);
constraint int_le_reif(s_00012, s_00001,aux1328_BOOL);
constraint array_bool_and([aux1324_BOOL,aux1325_BOOL,aux1327_BOOL,aux1328_BOOL,w_00001_00012_BOOL],aux1329_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux1330_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1331_BOOL);
constraint int_lin_eq([-1,1,1],[aux1332,3,s_00013],0);
constraint int_lt_reif(s_00001,aux1332,aux1333_BOOL);
constraint int_le_reif(s_00013, s_00001,aux1334_BOOL);
constraint array_bool_and([aux1330_BOOL,aux1331_BOOL,aux1333_BOOL,aux1334_BOOL,w_00001_00013_BOOL],aux1335_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux1336_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1337_BOOL);
constraint int_lin_eq([-1,1,1],[aux1338,3,s_00014],0);
constraint int_lt_reif(s_00001,aux1338,aux1339_BOOL);
constraint int_le_reif(s_00014, s_00001,aux1340_BOOL);
constraint array_bool_and([aux1336_BOOL,aux1337_BOOL,aux1339_BOOL,aux1340_BOOL,w_00001_00014_BOOL],aux1341_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux1263_INTEGER,aux1269_INTEGER,aux1275_INTEGER,aux1281_INTEGER,aux1287_INTEGER,aux1293_INTEGER,aux1299_INTEGER,aux1305_INTEGER,aux1311_INTEGER,aux1317_INTEGER,aux1323_INTEGER,aux1329_INTEGER,aux1335_INTEGER,aux1341_INTEGER,1],0,aux1342_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux1343_BOOL);
constraint int_lin_eq([-1,1,1],[aux1344,1,s_00005],0);
constraint int_lt_reif(s_00005,aux1344,aux1345_BOOL);
constraint array_bool_and([aux1343_BOOL,aux1345_BOOL,w_00001_00005_BOOL],aux1346_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux1347_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux1348_BOOL);
constraint int_lin_eq([-1,1,1],[aux1349,2,s_00001],0);
constraint int_lt_reif(s_00005,aux1349,aux1350_BOOL);
constraint int_le_reif(s_00001, s_00005,aux1351_BOOL);
constraint array_bool_and([aux1347_BOOL,aux1348_BOOL,aux1350_BOOL,aux1351_BOOL,w_00001_00001_BOOL],aux1352_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1353_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux1354_BOOL);
constraint int_lin_eq([-1,1,1],[aux1355,6,s_00002],0);
constraint int_lt_reif(s_00005,aux1355,aux1356_BOOL);
constraint int_le_reif(s_00002, s_00005,aux1357_BOOL);
constraint array_bool_and([aux1353_BOOL,aux1354_BOOL,aux1356_BOOL,aux1357_BOOL,w_00001_00002_BOOL],aux1358_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux1359_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux1360_BOOL);
constraint int_lin_eq([-1,1,1],[aux1361,1,s_00003],0);
constraint int_lt_reif(s_00005,aux1361,aux1362_BOOL);
constraint int_le_reif(s_00003, s_00005,aux1363_BOOL);
constraint array_bool_and([aux1359_BOOL,aux1360_BOOL,aux1362_BOOL,aux1363_BOOL,w_00001_00003_BOOL],aux1364_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux1365_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux1366_BOOL);
constraint int_lin_eq([-1,1,1],[aux1367,2,s_00004],0);
constraint int_lt_reif(s_00005,aux1367,aux1368_BOOL);
constraint int_le_reif(s_00004, s_00005,aux1369_BOOL);
constraint array_bool_and([aux1365_BOOL,aux1366_BOOL,aux1368_BOOL,aux1369_BOOL,w_00001_00004_BOOL],aux1370_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux1371_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux1372_BOOL);
constraint int_lin_eq([-1,1,1],[aux1373,2,s_00007],0);
constraint int_lt_reif(s_00005,aux1373,aux1374_BOOL);
constraint int_le_reif(s_00007, s_00005,aux1375_BOOL);
constraint array_bool_and([aux1371_BOOL,aux1372_BOOL,aux1374_BOOL,aux1375_BOOL,w_00001_00007_BOOL],aux1376_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux1377_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1378_BOOL);
constraint int_lin_eq([-1,1,1],[aux1379,4,s_00006],0);
constraint int_lt_reif(s_00005,aux1379,aux1380_BOOL);
constraint int_le_reif(s_00006, s_00005,aux1381_BOOL);
constraint array_bool_and([aux1377_BOOL,aux1378_BOOL,aux1380_BOOL,aux1381_BOOL,w_00001_00006_BOOL],aux1382_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux1383_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux1384_BOOL);
constraint int_lin_eq([-1,1,1],[aux1385,2,s_00008],0);
constraint int_lt_reif(s_00005,aux1385,aux1386_BOOL);
constraint int_le_reif(s_00008, s_00005,aux1387_BOOL);
constraint array_bool_and([aux1383_BOOL,aux1384_BOOL,aux1386_BOOL,aux1387_BOOL,w_00001_00008_BOOL],aux1388_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux1389_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux1390_BOOL);
constraint int_lin_eq([-1,1,1],[aux1391,2,s_00009],0);
constraint int_lt_reif(s_00005,aux1391,aux1392_BOOL);
constraint int_le_reif(s_00009, s_00005,aux1393_BOOL);
constraint array_bool_and([aux1389_BOOL,aux1390_BOOL,aux1392_BOOL,aux1393_BOOL,w_00001_00009_BOOL],aux1394_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux1395_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1396_BOOL);
constraint int_lin_eq([-1,1,1],[aux1397,1,s_00010],0);
constraint int_lt_reif(s_00005,aux1397,aux1398_BOOL);
constraint int_le_reif(s_00010, s_00005,aux1399_BOOL);
constraint array_bool_and([aux1395_BOOL,aux1396_BOOL,aux1398_BOOL,aux1399_BOOL,w_00001_00010_BOOL],aux1400_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux1401_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux1402_BOOL);
constraint int_lin_eq([-1,1,1],[aux1403,2,s_00011],0);
constraint int_lt_reif(s_00005,aux1403,aux1404_BOOL);
constraint int_le_reif(s_00011, s_00005,aux1405_BOOL);
constraint array_bool_and([aux1401_BOOL,aux1402_BOOL,aux1404_BOOL,aux1405_BOOL,w_00001_00011_BOOL],aux1406_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux1407_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux1408_BOOL);
constraint int_lin_eq([-1,1,1],[aux1409,3,s_00012],0);
constraint int_lt_reif(s_00005,aux1409,aux1410_BOOL);
constraint int_le_reif(s_00012, s_00005,aux1411_BOOL);
constraint array_bool_and([aux1407_BOOL,aux1408_BOOL,aux1410_BOOL,aux1411_BOOL,w_00001_00012_BOOL],aux1412_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux1413_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1414_BOOL);
constraint int_lin_eq([-1,1,1],[aux1415,3,s_00013],0);
constraint int_lt_reif(s_00005,aux1415,aux1416_BOOL);
constraint int_le_reif(s_00013, s_00005,aux1417_BOOL);
constraint array_bool_and([aux1413_BOOL,aux1414_BOOL,aux1416_BOOL,aux1417_BOOL,w_00001_00013_BOOL],aux1418_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux1419_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1420_BOOL);
constraint int_lin_eq([-1,1,1],[aux1421,3,s_00014],0);
constraint int_lt_reif(s_00005,aux1421,aux1422_BOOL);
constraint int_le_reif(s_00014, s_00005,aux1423_BOOL);
constraint array_bool_and([aux1419_BOOL,aux1420_BOOL,aux1422_BOOL,aux1423_BOOL,w_00001_00014_BOOL],aux1424_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux1346_INTEGER,aux1352_INTEGER,aux1358_INTEGER,aux1364_INTEGER,aux1370_INTEGER,aux1376_INTEGER,aux1382_INTEGER,aux1388_INTEGER,aux1394_INTEGER,aux1400_INTEGER,aux1406_INTEGER,aux1412_INTEGER,aux1418_INTEGER,aux1424_INTEGER,1],0,aux1425_BOOL);
constraint array_bool_and([aux346_BOOL,aux429_BOOL,aux512_BOOL,aux595_BOOL,aux678_BOOL,aux761_BOOL,aux844_BOOL,aux927_BOOL,aux1010_BOOL,aux1093_BOOL,aux1176_BOOL,aux1259_BOOL,aux1342_BOOL,aux1425_BOOL],aux1426_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[TWorkers_00001_00001_INTEGER,TWorkers_00001_00002_INTEGER,TWorkers_00001_00003_INTEGER,TWorkers_00001_00004_INTEGER,TWorkers_00001_00005_INTEGER,TWorkers_00001_00006_INTEGER,TWorkers_00001_00007_INTEGER,TWorkers_00001_00008_INTEGER,TWorkers_00001_00009_INTEGER,TWorkers_00001_00010_INTEGER,TWorkers_00001_00011_INTEGER,TWorkers_00001_00012_INTEGER,TWorkers_00001_00013_INTEGER,TWorkers_00001_00014_INTEGER,1],0,aux1427_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux1428_BOOL);
constraint int_lin_eq([-1,1,1],[aux1429,2,s_00004],0);
constraint int_lt_reif(s_00004,aux1429,aux1430_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux1428_BOOL,aux1430_BOOL],aux1431_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux1432_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux1433_BOOL);
constraint int_lin_eq([-1,1,1],[aux1434,2,s_00001],0);
constraint int_lt_reif(s_00004,aux1434,aux1435_BOOL);
constraint int_le_reif(s_00001, s_00004,aux1436_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux1432_BOOL,aux1433_BOOL,aux1435_BOOL,aux1436_BOOL],aux1437_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux1438_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux1439_BOOL);
constraint int_lin_eq([-1,1,1],[aux1440,6,s_00002],0);
constraint int_lt_reif(s_00004,aux1440,aux1441_BOOL);
constraint int_le_reif(s_00002, s_00004,aux1442_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux1438_BOOL,aux1439_BOOL,aux1441_BOOL,aux1442_BOOL],aux1443_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux1444_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux1445_BOOL);
constraint int_lin_eq([-1,1,1],[aux1446,1,s_00003],0);
constraint int_lt_reif(s_00004,aux1446,aux1447_BOOL);
constraint int_le_reif(s_00003, s_00004,aux1448_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux1444_BOOL,aux1445_BOOL,aux1447_BOOL,aux1448_BOOL],aux1449_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux1450_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux1451_BOOL);
constraint int_lin_eq([-1,1,1],[aux1452,1,s_00005],0);
constraint int_lt_reif(s_00004,aux1452,aux1453_BOOL);
constraint int_le_reif(s_00005, s_00004,aux1454_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux1450_BOOL,aux1451_BOOL,aux1453_BOOL,aux1454_BOOL],aux1455_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux1456_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux1457_BOOL);
constraint int_lin_eq([-1,1,1],[aux1458,4,s_00006],0);
constraint int_lt_reif(s_00004,aux1458,aux1459_BOOL);
constraint int_le_reif(s_00006, s_00004,aux1460_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux1456_BOOL,aux1457_BOOL,aux1459_BOOL,aux1460_BOOL],aux1461_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux1462_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux1463_BOOL);
constraint int_lin_eq([-1,1,1],[aux1464,2,s_00007],0);
constraint int_lt_reif(s_00004,aux1464,aux1465_BOOL);
constraint int_le_reif(s_00007, s_00004,aux1466_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux1462_BOOL,aux1463_BOOL,aux1465_BOOL,aux1466_BOOL],aux1467_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux1468_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux1469_BOOL);
constraint int_lin_eq([-1,1,1],[aux1470,2,s_00008],0);
constraint int_lt_reif(s_00004,aux1470,aux1471_BOOL);
constraint int_le_reif(s_00008, s_00004,aux1472_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux1468_BOOL,aux1469_BOOL,aux1471_BOOL,aux1472_BOOL],aux1473_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux1474_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux1475_BOOL);
constraint int_lin_eq([-1,1,1],[aux1476,2,s_00009],0);
constraint int_lt_reif(s_00004,aux1476,aux1477_BOOL);
constraint int_le_reif(s_00009, s_00004,aux1478_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux1474_BOOL,aux1475_BOOL,aux1477_BOOL,aux1478_BOOL],aux1479_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux1480_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux1481_BOOL);
constraint int_lin_eq([-1,1,1],[aux1482,1,s_00010],0);
constraint int_lt_reif(s_00004,aux1482,aux1483_BOOL);
constraint int_le_reif(s_00010, s_00004,aux1484_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux1480_BOOL,aux1481_BOOL,aux1483_BOOL,aux1484_BOOL],aux1485_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux1486_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux1487_BOOL);
constraint int_lin_eq([-1,1,1],[aux1488,2,s_00011],0);
constraint int_lt_reif(s_00004,aux1488,aux1489_BOOL);
constraint int_le_reif(s_00011, s_00004,aux1490_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux1486_BOOL,aux1487_BOOL,aux1489_BOOL,aux1490_BOOL],aux1491_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux1492_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux1493_BOOL);
constraint int_lin_eq([-1,1,1],[aux1494,3,s_00012],0);
constraint int_lt_reif(s_00004,aux1494,aux1495_BOOL);
constraint int_le_reif(s_00012, s_00004,aux1496_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux1492_BOOL,aux1493_BOOL,aux1495_BOOL,aux1496_BOOL],aux1497_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux1498_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux1499_BOOL);
constraint int_lin_eq([-1,1,1],[aux1500,3,s_00013],0);
constraint int_lt_reif(s_00004,aux1500,aux1501_BOOL);
constraint int_le_reif(s_00013, s_00004,aux1502_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux1498_BOOL,aux1499_BOOL,aux1501_BOOL,aux1502_BOOL],aux1503_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux1504_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux1505_BOOL);
constraint int_lin_eq([-1,1,1],[aux1506,3,s_00014],0);
constraint int_lt_reif(s_00004,aux1506,aux1507_BOOL);
constraint int_le_reif(s_00014, s_00004,aux1508_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux1504_BOOL,aux1505_BOOL,aux1507_BOOL,aux1508_BOOL],aux1509_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux1431_INTEGER,aux1437_INTEGER,aux1443_INTEGER,aux1449_INTEGER,aux1455_INTEGER,aux1461_INTEGER,aux1467_INTEGER,aux1473_INTEGER,aux1479_INTEGER,aux1485_INTEGER,aux1491_INTEGER,aux1497_INTEGER,aux1503_INTEGER,aux1509_INTEGER,1],0,aux1510_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux1511_BOOL);
constraint int_lin_eq([-1,1,1],[aux1512,2,s_00008],0);
constraint int_lt_reif(s_00008,aux1512,aux1513_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux1511_BOOL,aux1513_BOOL],aux1514_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux1515_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux1516_BOOL);
constraint int_lin_eq([-1,1,1],[aux1517,2,s_00001],0);
constraint int_lt_reif(s_00008,aux1517,aux1518_BOOL);
constraint int_le_reif(s_00001, s_00008,aux1519_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux1515_BOOL,aux1516_BOOL,aux1518_BOOL,aux1519_BOOL],aux1520_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux1521_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux1522_BOOL);
constraint int_lin_eq([-1,1,1],[aux1523,6,s_00002],0);
constraint int_lt_reif(s_00008,aux1523,aux1524_BOOL);
constraint int_le_reif(s_00002, s_00008,aux1525_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux1521_BOOL,aux1522_BOOL,aux1524_BOOL,aux1525_BOOL],aux1526_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux1527_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux1528_BOOL);
constraint int_lin_eq([-1,1,1],[aux1529,1,s_00003],0);
constraint int_lt_reif(s_00008,aux1529,aux1530_BOOL);
constraint int_le_reif(s_00003, s_00008,aux1531_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux1527_BOOL,aux1528_BOOL,aux1530_BOOL,aux1531_BOOL],aux1532_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux1533_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux1534_BOOL);
constraint int_lin_eq([-1,1,1],[aux1535,2,s_00004],0);
constraint int_lt_reif(s_00008,aux1535,aux1536_BOOL);
constraint int_le_reif(s_00004, s_00008,aux1537_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux1533_BOOL,aux1534_BOOL,aux1536_BOOL,aux1537_BOOL],aux1538_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux1539_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux1540_BOOL);
constraint int_lin_eq([-1,1,1],[aux1541,1,s_00005],0);
constraint int_lt_reif(s_00008,aux1541,aux1542_BOOL);
constraint int_le_reif(s_00005, s_00008,aux1543_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux1539_BOOL,aux1540_BOOL,aux1542_BOOL,aux1543_BOOL],aux1544_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux1545_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux1546_BOOL);
constraint int_lin_eq([-1,1,1],[aux1547,4,s_00006],0);
constraint int_lt_reif(s_00008,aux1547,aux1548_BOOL);
constraint int_le_reif(s_00006, s_00008,aux1549_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux1545_BOOL,aux1546_BOOL,aux1548_BOOL,aux1549_BOOL],aux1550_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux1551_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux1552_BOOL);
constraint int_lin_eq([-1,1,1],[aux1553,2,s_00007],0);
constraint int_lt_reif(s_00008,aux1553,aux1554_BOOL);
constraint int_le_reif(s_00007, s_00008,aux1555_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux1551_BOOL,aux1552_BOOL,aux1554_BOOL,aux1555_BOOL],aux1556_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux1557_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux1558_BOOL);
constraint int_lin_eq([-1,1,1],[aux1559,2,s_00009],0);
constraint int_lt_reif(s_00008,aux1559,aux1560_BOOL);
constraint int_le_reif(s_00009, s_00008,aux1561_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux1557_BOOL,aux1558_BOOL,aux1560_BOOL,aux1561_BOOL],aux1562_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux1563_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux1564_BOOL);
constraint int_lin_eq([-1,1,1],[aux1565,1,s_00010],0);
constraint int_lt_reif(s_00008,aux1565,aux1566_BOOL);
constraint int_le_reif(s_00010, s_00008,aux1567_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux1563_BOOL,aux1564_BOOL,aux1566_BOOL,aux1567_BOOL],aux1568_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux1569_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux1570_BOOL);
constraint int_lin_eq([-1,1,1],[aux1571,2,s_00011],0);
constraint int_lt_reif(s_00008,aux1571,aux1572_BOOL);
constraint int_le_reif(s_00011, s_00008,aux1573_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux1569_BOOL,aux1570_BOOL,aux1572_BOOL,aux1573_BOOL],aux1574_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux1575_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux1576_BOOL);
constraint int_lin_eq([-1,1,1],[aux1577,3,s_00012],0);
constraint int_lt_reif(s_00008,aux1577,aux1578_BOOL);
constraint int_le_reif(s_00012, s_00008,aux1579_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux1575_BOOL,aux1576_BOOL,aux1578_BOOL,aux1579_BOOL],aux1580_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux1581_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux1582_BOOL);
constraint int_lin_eq([-1,1,1],[aux1583,3,s_00013],0);
constraint int_lt_reif(s_00008,aux1583,aux1584_BOOL);
constraint int_le_reif(s_00013, s_00008,aux1585_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux1581_BOOL,aux1582_BOOL,aux1584_BOOL,aux1585_BOOL],aux1586_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux1587_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux1588_BOOL);
constraint int_lin_eq([-1,1,1],[aux1589,3,s_00014],0);
constraint int_lt_reif(s_00008,aux1589,aux1590_BOOL);
constraint int_le_reif(s_00014, s_00008,aux1591_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux1587_BOOL,aux1588_BOOL,aux1590_BOOL,aux1591_BOOL],aux1592_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux1514_INTEGER,aux1520_INTEGER,aux1526_INTEGER,aux1532_INTEGER,aux1538_INTEGER,aux1544_INTEGER,aux1550_INTEGER,aux1556_INTEGER,aux1562_INTEGER,aux1568_INTEGER,aux1574_INTEGER,aux1580_INTEGER,aux1586_INTEGER,aux1592_INTEGER,1],0,aux1593_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux1594_BOOL);
constraint int_lin_eq([-1,1,1],[aux1595,2,s_00001],0);
constraint int_lt_reif(s_00001,aux1595,aux1596_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux1594_BOOL,aux1596_BOOL],aux1597_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux1598_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux1599_BOOL);
constraint int_lin_eq([-1,1,1],[aux1600,6,s_00002],0);
constraint int_lt_reif(s_00001,aux1600,aux1601_BOOL);
constraint int_le_reif(s_00002, s_00001,aux1602_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux1598_BOOL,aux1599_BOOL,aux1601_BOOL,aux1602_BOOL],aux1603_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux1604_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux1605_BOOL);
constraint int_lin_eq([-1,1,1],[aux1606,1,s_00003],0);
constraint int_lt_reif(s_00001,aux1606,aux1607_BOOL);
constraint int_le_reif(s_00003, s_00001,aux1608_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux1604_BOOL,aux1605_BOOL,aux1607_BOOL,aux1608_BOOL],aux1609_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux1610_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux1611_BOOL);
constraint int_lin_eq([-1,1,1],[aux1612,2,s_00004],0);
constraint int_lt_reif(s_00001,aux1612,aux1613_BOOL);
constraint int_le_reif(s_00004, s_00001,aux1614_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux1610_BOOL,aux1611_BOOL,aux1613_BOOL,aux1614_BOOL],aux1615_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux1616_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux1617_BOOL);
constraint int_lin_eq([-1,1,1],[aux1618,1,s_00005],0);
constraint int_lt_reif(s_00001,aux1618,aux1619_BOOL);
constraint int_le_reif(s_00005, s_00001,aux1620_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux1616_BOOL,aux1617_BOOL,aux1619_BOOL,aux1620_BOOL],aux1621_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux1622_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux1623_BOOL);
constraint int_lin_eq([-1,1,1],[aux1624,4,s_00006],0);
constraint int_lt_reif(s_00001,aux1624,aux1625_BOOL);
constraint int_le_reif(s_00006, s_00001,aux1626_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux1622_BOOL,aux1623_BOOL,aux1625_BOOL,aux1626_BOOL],aux1627_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux1628_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux1629_BOOL);
constraint int_lin_eq([-1,1,1],[aux1630,2,s_00007],0);
constraint int_lt_reif(s_00001,aux1630,aux1631_BOOL);
constraint int_le_reif(s_00007, s_00001,aux1632_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux1628_BOOL,aux1629_BOOL,aux1631_BOOL,aux1632_BOOL],aux1633_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux1634_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux1635_BOOL);
constraint int_lin_eq([-1,1,1],[aux1636,2,s_00008],0);
constraint int_lt_reif(s_00001,aux1636,aux1637_BOOL);
constraint int_le_reif(s_00008, s_00001,aux1638_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux1634_BOOL,aux1635_BOOL,aux1637_BOOL,aux1638_BOOL],aux1639_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux1640_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux1641_BOOL);
constraint int_lin_eq([-1,1,1],[aux1642,2,s_00009],0);
constraint int_lt_reif(s_00001,aux1642,aux1643_BOOL);
constraint int_le_reif(s_00009, s_00001,aux1644_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux1640_BOOL,aux1641_BOOL,aux1643_BOOL,aux1644_BOOL],aux1645_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux1646_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux1647_BOOL);
constraint int_lin_eq([-1,1,1],[aux1648,1,s_00010],0);
constraint int_lt_reif(s_00001,aux1648,aux1649_BOOL);
constraint int_le_reif(s_00010, s_00001,aux1650_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux1646_BOOL,aux1647_BOOL,aux1649_BOOL,aux1650_BOOL],aux1651_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux1652_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux1653_BOOL);
constraint int_lin_eq([-1,1,1],[aux1654,2,s_00011],0);
constraint int_lt_reif(s_00001,aux1654,aux1655_BOOL);
constraint int_le_reif(s_00011, s_00001,aux1656_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux1652_BOOL,aux1653_BOOL,aux1655_BOOL,aux1656_BOOL],aux1657_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux1658_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux1659_BOOL);
constraint int_lin_eq([-1,1,1],[aux1660,3,s_00012],0);
constraint int_lt_reif(s_00001,aux1660,aux1661_BOOL);
constraint int_le_reif(s_00012, s_00001,aux1662_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux1658_BOOL,aux1659_BOOL,aux1661_BOOL,aux1662_BOOL],aux1663_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux1664_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux1665_BOOL);
constraint int_lin_eq([-1,1,1],[aux1666,3,s_00013],0);
constraint int_lt_reif(s_00001,aux1666,aux1667_BOOL);
constraint int_le_reif(s_00013, s_00001,aux1668_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux1664_BOOL,aux1665_BOOL,aux1667_BOOL,aux1668_BOOL],aux1669_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux1670_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux1671_BOOL);
constraint int_lin_eq([-1,1,1],[aux1672,3,s_00014],0);
constraint int_lt_reif(s_00001,aux1672,aux1673_BOOL);
constraint int_le_reif(s_00014, s_00001,aux1674_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux1670_BOOL,aux1671_BOOL,aux1673_BOOL,aux1674_BOOL],aux1675_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux1597_INTEGER,aux1603_INTEGER,aux1609_INTEGER,aux1615_INTEGER,aux1621_INTEGER,aux1627_INTEGER,aux1633_INTEGER,aux1639_INTEGER,aux1645_INTEGER,aux1651_INTEGER,aux1657_INTEGER,aux1663_INTEGER,aux1669_INTEGER,aux1675_INTEGER,1],0,aux1676_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux1677_BOOL);
constraint int_lin_eq([-1,1,1],[aux1678,1,s_00003],0);
constraint int_lt_reif(s_00003,aux1678,aux1679_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux1677_BOOL,aux1679_BOOL],aux1680_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux1681_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux1682_BOOL);
constraint int_lin_eq([-1,1,1],[aux1683,2,s_00001],0);
constraint int_lt_reif(s_00003,aux1683,aux1684_BOOL);
constraint int_le_reif(s_00001, s_00003,aux1685_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux1681_BOOL,aux1682_BOOL,aux1684_BOOL,aux1685_BOOL],aux1686_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux1687_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux1688_BOOL);
constraint int_lin_eq([-1,1,1],[aux1689,6,s_00002],0);
constraint int_lt_reif(s_00003,aux1689,aux1690_BOOL);
constraint int_le_reif(s_00002, s_00003,aux1691_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux1687_BOOL,aux1688_BOOL,aux1690_BOOL,aux1691_BOOL],aux1692_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux1693_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux1694_BOOL);
constraint int_lin_eq([-1,1,1],[aux1695,2,s_00004],0);
constraint int_lt_reif(s_00003,aux1695,aux1696_BOOL);
constraint int_le_reif(s_00004, s_00003,aux1697_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux1693_BOOL,aux1694_BOOL,aux1696_BOOL,aux1697_BOOL],aux1698_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux1699_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux1700_BOOL);
constraint int_lin_eq([-1,1,1],[aux1701,1,s_00005],0);
constraint int_lt_reif(s_00003,aux1701,aux1702_BOOL);
constraint int_le_reif(s_00005, s_00003,aux1703_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux1699_BOOL,aux1700_BOOL,aux1702_BOOL,aux1703_BOOL],aux1704_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux1705_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux1706_BOOL);
constraint int_lin_eq([-1,1,1],[aux1707,4,s_00006],0);
constraint int_lt_reif(s_00003,aux1707,aux1708_BOOL);
constraint int_le_reif(s_00006, s_00003,aux1709_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux1705_BOOL,aux1706_BOOL,aux1708_BOOL,aux1709_BOOL],aux1710_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux1711_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux1712_BOOL);
constraint int_lin_eq([-1,1,1],[aux1713,2,s_00007],0);
constraint int_lt_reif(s_00003,aux1713,aux1714_BOOL);
constraint int_le_reif(s_00007, s_00003,aux1715_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux1711_BOOL,aux1712_BOOL,aux1714_BOOL,aux1715_BOOL],aux1716_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux1717_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux1718_BOOL);
constraint int_lin_eq([-1,1,1],[aux1719,2,s_00008],0);
constraint int_lt_reif(s_00003,aux1719,aux1720_BOOL);
constraint int_le_reif(s_00008, s_00003,aux1721_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux1717_BOOL,aux1718_BOOL,aux1720_BOOL,aux1721_BOOL],aux1722_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux1723_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux1724_BOOL);
constraint int_lin_eq([-1,1,1],[aux1725,2,s_00009],0);
constraint int_lt_reif(s_00003,aux1725,aux1726_BOOL);
constraint int_le_reif(s_00009, s_00003,aux1727_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux1723_BOOL,aux1724_BOOL,aux1726_BOOL,aux1727_BOOL],aux1728_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux1729_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux1730_BOOL);
constraint int_lin_eq([-1,1,1],[aux1731,1,s_00010],0);
constraint int_lt_reif(s_00003,aux1731,aux1732_BOOL);
constraint int_le_reif(s_00010, s_00003,aux1733_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux1729_BOOL,aux1730_BOOL,aux1732_BOOL,aux1733_BOOL],aux1734_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux1735_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux1736_BOOL);
constraint int_lin_eq([-1,1,1],[aux1737,2,s_00011],0);
constraint int_lt_reif(s_00003,aux1737,aux1738_BOOL);
constraint int_le_reif(s_00011, s_00003,aux1739_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux1735_BOOL,aux1736_BOOL,aux1738_BOOL,aux1739_BOOL],aux1740_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux1741_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux1742_BOOL);
constraint int_lin_eq([-1,1,1],[aux1743,3,s_00012],0);
constraint int_lt_reif(s_00003,aux1743,aux1744_BOOL);
constraint int_le_reif(s_00012, s_00003,aux1745_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux1741_BOOL,aux1742_BOOL,aux1744_BOOL,aux1745_BOOL],aux1746_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux1747_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux1748_BOOL);
constraint int_lin_eq([-1,1,1],[aux1749,3,s_00013],0);
constraint int_lt_reif(s_00003,aux1749,aux1750_BOOL);
constraint int_le_reif(s_00013, s_00003,aux1751_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux1747_BOOL,aux1748_BOOL,aux1750_BOOL,aux1751_BOOL],aux1752_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux1753_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux1754_BOOL);
constraint int_lin_eq([-1,1,1],[aux1755,3,s_00014],0);
constraint int_lt_reif(s_00003,aux1755,aux1756_BOOL);
constraint int_le_reif(s_00014, s_00003,aux1757_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux1753_BOOL,aux1754_BOOL,aux1756_BOOL,aux1757_BOOL],aux1758_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux1680_INTEGER,aux1686_INTEGER,aux1692_INTEGER,aux1698_INTEGER,aux1704_INTEGER,aux1710_INTEGER,aux1716_INTEGER,aux1722_INTEGER,aux1728_INTEGER,aux1734_INTEGER,aux1740_INTEGER,aux1746_INTEGER,aux1752_INTEGER,aux1758_INTEGER,1],0,aux1759_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux1760_BOOL);
constraint int_lin_eq([-1,1,1],[aux1761,6,s_00002],0);
constraint int_lt_reif(s_00002,aux1761,aux1762_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux1760_BOOL,aux1762_BOOL],aux1763_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux1764_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux1765_BOOL);
constraint int_lin_eq([-1,1,1],[aux1766,2,s_00001],0);
constraint int_lt_reif(s_00002,aux1766,aux1767_BOOL);
constraint int_le_reif(s_00001, s_00002,aux1768_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux1764_BOOL,aux1765_BOOL,aux1767_BOOL,aux1768_BOOL],aux1769_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux1770_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux1771_BOOL);
constraint int_lin_eq([-1,1,1],[aux1772,1,s_00003],0);
constraint int_lt_reif(s_00002,aux1772,aux1773_BOOL);
constraint int_le_reif(s_00003, s_00002,aux1774_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux1770_BOOL,aux1771_BOOL,aux1773_BOOL,aux1774_BOOL],aux1775_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux1776_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux1777_BOOL);
constraint int_lin_eq([-1,1,1],[aux1778,2,s_00004],0);
constraint int_lt_reif(s_00002,aux1778,aux1779_BOOL);
constraint int_le_reif(s_00004, s_00002,aux1780_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux1776_BOOL,aux1777_BOOL,aux1779_BOOL,aux1780_BOOL],aux1781_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux1782_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux1783_BOOL);
constraint int_lin_eq([-1,1,1],[aux1784,1,s_00005],0);
constraint int_lt_reif(s_00002,aux1784,aux1785_BOOL);
constraint int_le_reif(s_00005, s_00002,aux1786_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux1782_BOOL,aux1783_BOOL,aux1785_BOOL,aux1786_BOOL],aux1787_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux1788_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux1789_BOOL);
constraint int_lin_eq([-1,1,1],[aux1790,4,s_00006],0);
constraint int_lt_reif(s_00002,aux1790,aux1791_BOOL);
constraint int_le_reif(s_00006, s_00002,aux1792_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux1788_BOOL,aux1789_BOOL,aux1791_BOOL,aux1792_BOOL],aux1793_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux1794_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux1795_BOOL);
constraint int_lin_eq([-1,1,1],[aux1796,2,s_00007],0);
constraint int_lt_reif(s_00002,aux1796,aux1797_BOOL);
constraint int_le_reif(s_00007, s_00002,aux1798_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux1794_BOOL,aux1795_BOOL,aux1797_BOOL,aux1798_BOOL],aux1799_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux1800_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux1801_BOOL);
constraint int_lin_eq([-1,1,1],[aux1802,2,s_00008],0);
constraint int_lt_reif(s_00002,aux1802,aux1803_BOOL);
constraint int_le_reif(s_00008, s_00002,aux1804_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux1800_BOOL,aux1801_BOOL,aux1803_BOOL,aux1804_BOOL],aux1805_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux1806_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux1807_BOOL);
constraint int_lin_eq([-1,1,1],[aux1808,2,s_00009],0);
constraint int_lt_reif(s_00002,aux1808,aux1809_BOOL);
constraint int_le_reif(s_00009, s_00002,aux1810_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux1806_BOOL,aux1807_BOOL,aux1809_BOOL,aux1810_BOOL],aux1811_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux1812_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux1813_BOOL);
constraint int_lin_eq([-1,1,1],[aux1814,1,s_00010],0);
constraint int_lt_reif(s_00002,aux1814,aux1815_BOOL);
constraint int_le_reif(s_00010, s_00002,aux1816_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux1812_BOOL,aux1813_BOOL,aux1815_BOOL,aux1816_BOOL],aux1817_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux1818_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux1819_BOOL);
constraint int_lin_eq([-1,1,1],[aux1820,2,s_00011],0);
constraint int_lt_reif(s_00002,aux1820,aux1821_BOOL);
constraint int_le_reif(s_00011, s_00002,aux1822_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux1818_BOOL,aux1819_BOOL,aux1821_BOOL,aux1822_BOOL],aux1823_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux1824_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux1825_BOOL);
constraint int_lin_eq([-1,1,1],[aux1826,3,s_00012],0);
constraint int_lt_reif(s_00002,aux1826,aux1827_BOOL);
constraint int_le_reif(s_00012, s_00002,aux1828_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux1824_BOOL,aux1825_BOOL,aux1827_BOOL,aux1828_BOOL],aux1829_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux1830_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux1831_BOOL);
constraint int_lin_eq([-1,1,1],[aux1832,3,s_00013],0);
constraint int_lt_reif(s_00002,aux1832,aux1833_BOOL);
constraint int_le_reif(s_00013, s_00002,aux1834_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux1830_BOOL,aux1831_BOOL,aux1833_BOOL,aux1834_BOOL],aux1835_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux1836_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux1837_BOOL);
constraint int_lin_eq([-1,1,1],[aux1838,3,s_00014],0);
constraint int_lt_reif(s_00002,aux1838,aux1839_BOOL);
constraint int_le_reif(s_00014, s_00002,aux1840_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux1836_BOOL,aux1837_BOOL,aux1839_BOOL,aux1840_BOOL],aux1841_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux1763_INTEGER,aux1769_INTEGER,aux1775_INTEGER,aux1781_INTEGER,aux1787_INTEGER,aux1793_INTEGER,aux1799_INTEGER,aux1805_INTEGER,aux1811_INTEGER,aux1817_INTEGER,aux1823_INTEGER,aux1829_INTEGER,aux1835_INTEGER,aux1841_INTEGER,1],0,aux1842_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux1843_BOOL);
constraint int_lin_eq([-1,1,1],[aux1844,2,s_00011],0);
constraint int_lt_reif(s_00011,aux1844,aux1845_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux1843_BOOL,aux1845_BOOL],aux1846_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux1847_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux1848_BOOL);
constraint int_lin_eq([-1,1,1],[aux1849,2,s_00001],0);
constraint int_lt_reif(s_00011,aux1849,aux1850_BOOL);
constraint int_le_reif(s_00001, s_00011,aux1851_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux1847_BOOL,aux1848_BOOL,aux1850_BOOL,aux1851_BOOL],aux1852_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux1853_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux1854_BOOL);
constraint int_lin_eq([-1,1,1],[aux1855,6,s_00002],0);
constraint int_lt_reif(s_00011,aux1855,aux1856_BOOL);
constraint int_le_reif(s_00002, s_00011,aux1857_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux1853_BOOL,aux1854_BOOL,aux1856_BOOL,aux1857_BOOL],aux1858_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux1859_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux1860_BOOL);
constraint int_lin_eq([-1,1,1],[aux1861,1,s_00003],0);
constraint int_lt_reif(s_00011,aux1861,aux1862_BOOL);
constraint int_le_reif(s_00003, s_00011,aux1863_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux1859_BOOL,aux1860_BOOL,aux1862_BOOL,aux1863_BOOL],aux1864_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux1865_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux1866_BOOL);
constraint int_lin_eq([-1,1,1],[aux1867,2,s_00004],0);
constraint int_lt_reif(s_00011,aux1867,aux1868_BOOL);
constraint int_le_reif(s_00004, s_00011,aux1869_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux1865_BOOL,aux1866_BOOL,aux1868_BOOL,aux1869_BOOL],aux1870_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux1871_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux1872_BOOL);
constraint int_lin_eq([-1,1,1],[aux1873,1,s_00005],0);
constraint int_lt_reif(s_00011,aux1873,aux1874_BOOL);
constraint int_le_reif(s_00005, s_00011,aux1875_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux1871_BOOL,aux1872_BOOL,aux1874_BOOL,aux1875_BOOL],aux1876_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux1877_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux1878_BOOL);
constraint int_lin_eq([-1,1,1],[aux1879,4,s_00006],0);
constraint int_lt_reif(s_00011,aux1879,aux1880_BOOL);
constraint int_le_reif(s_00006, s_00011,aux1881_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux1877_BOOL,aux1878_BOOL,aux1880_BOOL,aux1881_BOOL],aux1882_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux1883_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux1884_BOOL);
constraint int_lin_eq([-1,1,1],[aux1885,2,s_00007],0);
constraint int_lt_reif(s_00011,aux1885,aux1886_BOOL);
constraint int_le_reif(s_00007, s_00011,aux1887_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux1883_BOOL,aux1884_BOOL,aux1886_BOOL,aux1887_BOOL],aux1888_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux1889_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux1890_BOOL);
constraint int_lin_eq([-1,1,1],[aux1891,2,s_00008],0);
constraint int_lt_reif(s_00011,aux1891,aux1892_BOOL);
constraint int_le_reif(s_00008, s_00011,aux1893_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux1889_BOOL,aux1890_BOOL,aux1892_BOOL,aux1893_BOOL],aux1894_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux1895_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux1896_BOOL);
constraint int_lin_eq([-1,1,1],[aux1897,2,s_00009],0);
constraint int_lt_reif(s_00011,aux1897,aux1898_BOOL);
constraint int_le_reif(s_00009, s_00011,aux1899_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux1895_BOOL,aux1896_BOOL,aux1898_BOOL,aux1899_BOOL],aux1900_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux1901_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux1902_BOOL);
constraint int_lin_eq([-1,1,1],[aux1903,1,s_00010],0);
constraint int_lt_reif(s_00011,aux1903,aux1904_BOOL);
constraint int_le_reif(s_00010, s_00011,aux1905_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux1901_BOOL,aux1902_BOOL,aux1904_BOOL,aux1905_BOOL],aux1906_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux1907_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux1908_BOOL);
constraint int_lin_eq([-1,1,1],[aux1909,3,s_00012],0);
constraint int_lt_reif(s_00011,aux1909,aux1910_BOOL);
constraint int_le_reif(s_00012, s_00011,aux1911_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux1907_BOOL,aux1908_BOOL,aux1910_BOOL,aux1911_BOOL],aux1912_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux1913_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux1914_BOOL);
constraint int_lin_eq([-1,1,1],[aux1915,3,s_00013],0);
constraint int_lt_reif(s_00011,aux1915,aux1916_BOOL);
constraint int_le_reif(s_00013, s_00011,aux1917_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux1913_BOOL,aux1914_BOOL,aux1916_BOOL,aux1917_BOOL],aux1918_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux1919_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux1920_BOOL);
constraint int_lin_eq([-1,1,1],[aux1921,3,s_00014],0);
constraint int_lt_reif(s_00011,aux1921,aux1922_BOOL);
constraint int_le_reif(s_00014, s_00011,aux1923_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux1919_BOOL,aux1920_BOOL,aux1922_BOOL,aux1923_BOOL],aux1924_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux1846_INTEGER,aux1852_INTEGER,aux1858_INTEGER,aux1864_INTEGER,aux1870_INTEGER,aux1876_INTEGER,aux1882_INTEGER,aux1888_INTEGER,aux1894_INTEGER,aux1900_INTEGER,aux1906_INTEGER,aux1912_INTEGER,aux1918_INTEGER,aux1924_INTEGER,1],0,aux1925_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux1926_BOOL);
constraint int_lin_eq([-1,1,1],[aux1927,2,s_00009],0);
constraint int_lt_reif(s_00009,aux1927,aux1928_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux1926_BOOL,aux1928_BOOL],aux1929_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux1930_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux1931_BOOL);
constraint int_lin_eq([-1,1,1],[aux1932,2,s_00001],0);
constraint int_lt_reif(s_00009,aux1932,aux1933_BOOL);
constraint int_le_reif(s_00001, s_00009,aux1934_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux1930_BOOL,aux1931_BOOL,aux1933_BOOL,aux1934_BOOL],aux1935_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux1936_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux1937_BOOL);
constraint int_lin_eq([-1,1,1],[aux1938,6,s_00002],0);
constraint int_lt_reif(s_00009,aux1938,aux1939_BOOL);
constraint int_le_reif(s_00002, s_00009,aux1940_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux1936_BOOL,aux1937_BOOL,aux1939_BOOL,aux1940_BOOL],aux1941_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux1942_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux1943_BOOL);
constraint int_lin_eq([-1,1,1],[aux1944,1,s_00003],0);
constraint int_lt_reif(s_00009,aux1944,aux1945_BOOL);
constraint int_le_reif(s_00003, s_00009,aux1946_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux1942_BOOL,aux1943_BOOL,aux1945_BOOL,aux1946_BOOL],aux1947_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux1948_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux1949_BOOL);
constraint int_lin_eq([-1,1,1],[aux1950,2,s_00004],0);
constraint int_lt_reif(s_00009,aux1950,aux1951_BOOL);
constraint int_le_reif(s_00004, s_00009,aux1952_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux1948_BOOL,aux1949_BOOL,aux1951_BOOL,aux1952_BOOL],aux1953_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux1954_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux1955_BOOL);
constraint int_lin_eq([-1,1,1],[aux1956,1,s_00005],0);
constraint int_lt_reif(s_00009,aux1956,aux1957_BOOL);
constraint int_le_reif(s_00005, s_00009,aux1958_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux1954_BOOL,aux1955_BOOL,aux1957_BOOL,aux1958_BOOL],aux1959_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux1960_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux1961_BOOL);
constraint int_lin_eq([-1,1,1],[aux1962,4,s_00006],0);
constraint int_lt_reif(s_00009,aux1962,aux1963_BOOL);
constraint int_le_reif(s_00006, s_00009,aux1964_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux1960_BOOL,aux1961_BOOL,aux1963_BOOL,aux1964_BOOL],aux1965_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux1966_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux1967_BOOL);
constraint int_lin_eq([-1,1,1],[aux1968,2,s_00007],0);
constraint int_lt_reif(s_00009,aux1968,aux1969_BOOL);
constraint int_le_reif(s_00007, s_00009,aux1970_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux1966_BOOL,aux1967_BOOL,aux1969_BOOL,aux1970_BOOL],aux1971_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux1972_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux1973_BOOL);
constraint int_lin_eq([-1,1,1],[aux1974,2,s_00008],0);
constraint int_lt_reif(s_00009,aux1974,aux1975_BOOL);
constraint int_le_reif(s_00008, s_00009,aux1976_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux1972_BOOL,aux1973_BOOL,aux1975_BOOL,aux1976_BOOL],aux1977_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux1978_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux1979_BOOL);
constraint int_lin_eq([-1,1,1],[aux1980,1,s_00010],0);
constraint int_lt_reif(s_00009,aux1980,aux1981_BOOL);
constraint int_le_reif(s_00010, s_00009,aux1982_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux1978_BOOL,aux1979_BOOL,aux1981_BOOL,aux1982_BOOL],aux1983_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux1984_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux1985_BOOL);
constraint int_lin_eq([-1,1,1],[aux1986,2,s_00011],0);
constraint int_lt_reif(s_00009,aux1986,aux1987_BOOL);
constraint int_le_reif(s_00011, s_00009,aux1988_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux1984_BOOL,aux1985_BOOL,aux1987_BOOL,aux1988_BOOL],aux1989_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux1990_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux1991_BOOL);
constraint int_lin_eq([-1,1,1],[aux1992,3,s_00012],0);
constraint int_lt_reif(s_00009,aux1992,aux1993_BOOL);
constraint int_le_reif(s_00012, s_00009,aux1994_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux1990_BOOL,aux1991_BOOL,aux1993_BOOL,aux1994_BOOL],aux1995_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux1996_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux1997_BOOL);
constraint int_lin_eq([-1,1,1],[aux1998,3,s_00013],0);
constraint int_lt_reif(s_00009,aux1998,aux1999_BOOL);
constraint int_le_reif(s_00013, s_00009,aux2000_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux1996_BOOL,aux1997_BOOL,aux1999_BOOL,aux2000_BOOL],aux2001_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux2002_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux2003_BOOL);
constraint int_lin_eq([-1,1,1],[aux2004,3,s_00014],0);
constraint int_lt_reif(s_00009,aux2004,aux2005_BOOL);
constraint int_le_reif(s_00014, s_00009,aux2006_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux2002_BOOL,aux2003_BOOL,aux2005_BOOL,aux2006_BOOL],aux2007_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux1929_INTEGER,aux1935_INTEGER,aux1941_INTEGER,aux1947_INTEGER,aux1953_INTEGER,aux1959_INTEGER,aux1965_INTEGER,aux1971_INTEGER,aux1977_INTEGER,aux1983_INTEGER,aux1989_INTEGER,aux1995_INTEGER,aux2001_INTEGER,aux2007_INTEGER,1],0,aux2008_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux2009_BOOL);
constraint int_lin_eq([-1,1,1],[aux2010,1,s_00005],0);
constraint int_lt_reif(s_00005,aux2010,aux2011_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux2009_BOOL,aux2011_BOOL],aux2012_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux2013_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux2014_BOOL);
constraint int_lin_eq([-1,1,1],[aux2015,2,s_00001],0);
constraint int_lt_reif(s_00005,aux2015,aux2016_BOOL);
constraint int_le_reif(s_00001, s_00005,aux2017_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux2013_BOOL,aux2014_BOOL,aux2016_BOOL,aux2017_BOOL],aux2018_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux2019_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux2020_BOOL);
constraint int_lin_eq([-1,1,1],[aux2021,6,s_00002],0);
constraint int_lt_reif(s_00005,aux2021,aux2022_BOOL);
constraint int_le_reif(s_00002, s_00005,aux2023_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux2019_BOOL,aux2020_BOOL,aux2022_BOOL,aux2023_BOOL],aux2024_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux2025_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux2026_BOOL);
constraint int_lin_eq([-1,1,1],[aux2027,1,s_00003],0);
constraint int_lt_reif(s_00005,aux2027,aux2028_BOOL);
constraint int_le_reif(s_00003, s_00005,aux2029_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux2025_BOOL,aux2026_BOOL,aux2028_BOOL,aux2029_BOOL],aux2030_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux2031_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux2032_BOOL);
constraint int_lin_eq([-1,1,1],[aux2033,2,s_00004],0);
constraint int_lt_reif(s_00005,aux2033,aux2034_BOOL);
constraint int_le_reif(s_00004, s_00005,aux2035_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux2031_BOOL,aux2032_BOOL,aux2034_BOOL,aux2035_BOOL],aux2036_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux2037_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux2038_BOOL);
constraint int_lin_eq([-1,1,1],[aux2039,4,s_00006],0);
constraint int_lt_reif(s_00005,aux2039,aux2040_BOOL);
constraint int_le_reif(s_00006, s_00005,aux2041_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux2037_BOOL,aux2038_BOOL,aux2040_BOOL,aux2041_BOOL],aux2042_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux2043_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux2044_BOOL);
constraint int_lin_eq([-1,1,1],[aux2045,2,s_00007],0);
constraint int_lt_reif(s_00005,aux2045,aux2046_BOOL);
constraint int_le_reif(s_00007, s_00005,aux2047_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux2043_BOOL,aux2044_BOOL,aux2046_BOOL,aux2047_BOOL],aux2048_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux2049_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux2050_BOOL);
constraint int_lin_eq([-1,1,1],[aux2051,2,s_00008],0);
constraint int_lt_reif(s_00005,aux2051,aux2052_BOOL);
constraint int_le_reif(s_00008, s_00005,aux2053_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux2049_BOOL,aux2050_BOOL,aux2052_BOOL,aux2053_BOOL],aux2054_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux2055_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux2056_BOOL);
constraint int_lin_eq([-1,1,1],[aux2057,2,s_00009],0);
constraint int_lt_reif(s_00005,aux2057,aux2058_BOOL);
constraint int_le_reif(s_00009, s_00005,aux2059_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux2055_BOOL,aux2056_BOOL,aux2058_BOOL,aux2059_BOOL],aux2060_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux2061_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux2062_BOOL);
constraint int_lin_eq([-1,1,1],[aux2063,1,s_00010],0);
constraint int_lt_reif(s_00005,aux2063,aux2064_BOOL);
constraint int_le_reif(s_00010, s_00005,aux2065_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux2061_BOOL,aux2062_BOOL,aux2064_BOOL,aux2065_BOOL],aux2066_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux2067_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux2068_BOOL);
constraint int_lin_eq([-1,1,1],[aux2069,2,s_00011],0);
constraint int_lt_reif(s_00005,aux2069,aux2070_BOOL);
constraint int_le_reif(s_00011, s_00005,aux2071_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux2067_BOOL,aux2068_BOOL,aux2070_BOOL,aux2071_BOOL],aux2072_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux2073_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux2074_BOOL);
constraint int_lin_eq([-1,1,1],[aux2075,3,s_00012],0);
constraint int_lt_reif(s_00005,aux2075,aux2076_BOOL);
constraint int_le_reif(s_00012, s_00005,aux2077_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux2073_BOOL,aux2074_BOOL,aux2076_BOOL,aux2077_BOOL],aux2078_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux2079_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux2080_BOOL);
constraint int_lin_eq([-1,1,1],[aux2081,3,s_00013],0);
constraint int_lt_reif(s_00005,aux2081,aux2082_BOOL);
constraint int_le_reif(s_00013, s_00005,aux2083_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux2079_BOOL,aux2080_BOOL,aux2082_BOOL,aux2083_BOOL],aux2084_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux2085_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux2086_BOOL);
constraint int_lin_eq([-1,1,1],[aux2087,3,s_00014],0);
constraint int_lt_reif(s_00005,aux2087,aux2088_BOOL);
constraint int_le_reif(s_00014, s_00005,aux2089_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux2085_BOOL,aux2086_BOOL,aux2088_BOOL,aux2089_BOOL],aux2090_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux2012_INTEGER,aux2018_INTEGER,aux2024_INTEGER,aux2030_INTEGER,aux2036_INTEGER,aux2042_INTEGER,aux2048_INTEGER,aux2054_INTEGER,aux2060_INTEGER,aux2066_INTEGER,aux2072_INTEGER,aux2078_INTEGER,aux2084_INTEGER,aux2090_INTEGER,1],0,aux2091_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux2092_BOOL);
constraint int_lin_eq([-1,1,1],[aux2093,3,s_00012],0);
constraint int_lt_reif(s_00012,aux2093,aux2094_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux2092_BOOL,aux2094_BOOL],aux2095_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux2096_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux2097_BOOL);
constraint int_lin_eq([-1,1,1],[aux2098,2,s_00001],0);
constraint int_lt_reif(s_00012,aux2098,aux2099_BOOL);
constraint int_le_reif(s_00001, s_00012,aux2100_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux2096_BOOL,aux2097_BOOL,aux2099_BOOL,aux2100_BOOL],aux2101_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux2102_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux2103_BOOL);
constraint int_lin_eq([-1,1,1],[aux2104,6,s_00002],0);
constraint int_lt_reif(s_00012,aux2104,aux2105_BOOL);
constraint int_le_reif(s_00002, s_00012,aux2106_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux2102_BOOL,aux2103_BOOL,aux2105_BOOL,aux2106_BOOL],aux2107_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux2108_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux2109_BOOL);
constraint int_lin_eq([-1,1,1],[aux2110,1,s_00003],0);
constraint int_lt_reif(s_00012,aux2110,aux2111_BOOL);
constraint int_le_reif(s_00003, s_00012,aux2112_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux2108_BOOL,aux2109_BOOL,aux2111_BOOL,aux2112_BOOL],aux2113_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux2114_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux2115_BOOL);
constraint int_lin_eq([-1,1,1],[aux2116,2,s_00004],0);
constraint int_lt_reif(s_00012,aux2116,aux2117_BOOL);
constraint int_le_reif(s_00004, s_00012,aux2118_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux2114_BOOL,aux2115_BOOL,aux2117_BOOL,aux2118_BOOL],aux2119_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux2120_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux2121_BOOL);
constraint int_lin_eq([-1,1,1],[aux2122,1,s_00005],0);
constraint int_lt_reif(s_00012,aux2122,aux2123_BOOL);
constraint int_le_reif(s_00005, s_00012,aux2124_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux2120_BOOL,aux2121_BOOL,aux2123_BOOL,aux2124_BOOL],aux2125_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux2126_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux2127_BOOL);
constraint int_lin_eq([-1,1,1],[aux2128,4,s_00006],0);
constraint int_lt_reif(s_00012,aux2128,aux2129_BOOL);
constraint int_le_reif(s_00006, s_00012,aux2130_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux2126_BOOL,aux2127_BOOL,aux2129_BOOL,aux2130_BOOL],aux2131_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux2132_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux2133_BOOL);
constraint int_lin_eq([-1,1,1],[aux2134,2,s_00007],0);
constraint int_lt_reif(s_00012,aux2134,aux2135_BOOL);
constraint int_le_reif(s_00007, s_00012,aux2136_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux2132_BOOL,aux2133_BOOL,aux2135_BOOL,aux2136_BOOL],aux2137_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux2138_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux2139_BOOL);
constraint int_lin_eq([-1,1,1],[aux2140,2,s_00008],0);
constraint int_lt_reif(s_00012,aux2140,aux2141_BOOL);
constraint int_le_reif(s_00008, s_00012,aux2142_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux2138_BOOL,aux2139_BOOL,aux2141_BOOL,aux2142_BOOL],aux2143_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux2144_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux2145_BOOL);
constraint int_lin_eq([-1,1,1],[aux2146,2,s_00009],0);
constraint int_lt_reif(s_00012,aux2146,aux2147_BOOL);
constraint int_le_reif(s_00009, s_00012,aux2148_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux2144_BOOL,aux2145_BOOL,aux2147_BOOL,aux2148_BOOL],aux2149_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux2150_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux2151_BOOL);
constraint int_lin_eq([-1,1,1],[aux2152,1,s_00010],0);
constraint int_lt_reif(s_00012,aux2152,aux2153_BOOL);
constraint int_le_reif(s_00010, s_00012,aux2154_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux2150_BOOL,aux2151_BOOL,aux2153_BOOL,aux2154_BOOL],aux2155_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux2156_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux2157_BOOL);
constraint int_lin_eq([-1,1,1],[aux2158,2,s_00011],0);
constraint int_lt_reif(s_00012,aux2158,aux2159_BOOL);
constraint int_le_reif(s_00011, s_00012,aux2160_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux2156_BOOL,aux2157_BOOL,aux2159_BOOL,aux2160_BOOL],aux2161_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux2162_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux2163_BOOL);
constraint int_lin_eq([-1,1,1],[aux2164,3,s_00013],0);
constraint int_lt_reif(s_00012,aux2164,aux2165_BOOL);
constraint int_le_reif(s_00013, s_00012,aux2166_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux2162_BOOL,aux2163_BOOL,aux2165_BOOL,aux2166_BOOL],aux2167_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux2168_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux2169_BOOL);
constraint int_lin_eq([-1,1,1],[aux2170,3,s_00014],0);
constraint int_lt_reif(s_00012,aux2170,aux2171_BOOL);
constraint int_le_reif(s_00014, s_00012,aux2172_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux2168_BOOL,aux2169_BOOL,aux2171_BOOL,aux2172_BOOL],aux2173_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux2095_INTEGER,aux2101_INTEGER,aux2107_INTEGER,aux2113_INTEGER,aux2119_INTEGER,aux2125_INTEGER,aux2131_INTEGER,aux2137_INTEGER,aux2143_INTEGER,aux2149_INTEGER,aux2155_INTEGER,aux2161_INTEGER,aux2167_INTEGER,aux2173_INTEGER,1],0,aux2174_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux2175_BOOL);
constraint int_lin_eq([-1,1,1],[aux2176,3,s_00014],0);
constraint int_lt_reif(s_00014,aux2176,aux2177_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux2175_BOOL,aux2177_BOOL],aux2178_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux2179_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux2180_BOOL);
constraint int_lin_eq([-1,1,1],[aux2181,2,s_00001],0);
constraint int_lt_reif(s_00014,aux2181,aux2182_BOOL);
constraint int_le_reif(s_00001, s_00014,aux2183_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux2179_BOOL,aux2180_BOOL,aux2182_BOOL,aux2183_BOOL],aux2184_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux2185_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux2186_BOOL);
constraint int_lin_eq([-1,1,1],[aux2187,6,s_00002],0);
constraint int_lt_reif(s_00014,aux2187,aux2188_BOOL);
constraint int_le_reif(s_00002, s_00014,aux2189_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux2185_BOOL,aux2186_BOOL,aux2188_BOOL,aux2189_BOOL],aux2190_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux2191_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux2192_BOOL);
constraint int_lin_eq([-1,1,1],[aux2193,1,s_00003],0);
constraint int_lt_reif(s_00014,aux2193,aux2194_BOOL);
constraint int_le_reif(s_00003, s_00014,aux2195_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux2191_BOOL,aux2192_BOOL,aux2194_BOOL,aux2195_BOOL],aux2196_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux2197_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux2198_BOOL);
constraint int_lin_eq([-1,1,1],[aux2199,2,s_00004],0);
constraint int_lt_reif(s_00014,aux2199,aux2200_BOOL);
constraint int_le_reif(s_00004, s_00014,aux2201_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux2197_BOOL,aux2198_BOOL,aux2200_BOOL,aux2201_BOOL],aux2202_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux2203_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux2204_BOOL);
constraint int_lin_eq([-1,1,1],[aux2205,1,s_00005],0);
constraint int_lt_reif(s_00014,aux2205,aux2206_BOOL);
constraint int_le_reif(s_00005, s_00014,aux2207_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux2203_BOOL,aux2204_BOOL,aux2206_BOOL,aux2207_BOOL],aux2208_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux2209_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux2210_BOOL);
constraint int_lin_eq([-1,1,1],[aux2211,4,s_00006],0);
constraint int_lt_reif(s_00014,aux2211,aux2212_BOOL);
constraint int_le_reif(s_00006, s_00014,aux2213_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux2209_BOOL,aux2210_BOOL,aux2212_BOOL,aux2213_BOOL],aux2214_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux2215_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux2216_BOOL);
constraint int_lin_eq([-1,1,1],[aux2217,2,s_00007],0);
constraint int_lt_reif(s_00014,aux2217,aux2218_BOOL);
constraint int_le_reif(s_00007, s_00014,aux2219_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux2215_BOOL,aux2216_BOOL,aux2218_BOOL,aux2219_BOOL],aux2220_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux2221_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux2222_BOOL);
constraint int_lin_eq([-1,1,1],[aux2223,2,s_00008],0);
constraint int_lt_reif(s_00014,aux2223,aux2224_BOOL);
constraint int_le_reif(s_00008, s_00014,aux2225_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux2221_BOOL,aux2222_BOOL,aux2224_BOOL,aux2225_BOOL],aux2226_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux2227_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux2228_BOOL);
constraint int_lin_eq([-1,1,1],[aux2229,2,s_00009],0);
constraint int_lt_reif(s_00014,aux2229,aux2230_BOOL);
constraint int_le_reif(s_00009, s_00014,aux2231_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux2227_BOOL,aux2228_BOOL,aux2230_BOOL,aux2231_BOOL],aux2232_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux2233_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux2234_BOOL);
constraint int_lin_eq([-1,1,1],[aux2235,1,s_00010],0);
constraint int_lt_reif(s_00014,aux2235,aux2236_BOOL);
constraint int_le_reif(s_00010, s_00014,aux2237_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux2233_BOOL,aux2234_BOOL,aux2236_BOOL,aux2237_BOOL],aux2238_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux2239_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux2240_BOOL);
constraint int_lin_eq([-1,1,1],[aux2241,2,s_00011],0);
constraint int_lt_reif(s_00014,aux2241,aux2242_BOOL);
constraint int_le_reif(s_00011, s_00014,aux2243_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux2239_BOOL,aux2240_BOOL,aux2242_BOOL,aux2243_BOOL],aux2244_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux2245_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux2246_BOOL);
constraint int_lin_eq([-1,1,1],[aux2247,3,s_00012],0);
constraint int_lt_reif(s_00014,aux2247,aux2248_BOOL);
constraint int_le_reif(s_00012, s_00014,aux2249_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux2245_BOOL,aux2246_BOOL,aux2248_BOOL,aux2249_BOOL],aux2250_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux2251_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux2252_BOOL);
constraint int_lin_eq([-1,1,1],[aux2253,3,s_00013],0);
constraint int_lt_reif(s_00014,aux2253,aux2254_BOOL);
constraint int_le_reif(s_00013, s_00014,aux2255_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux2251_BOOL,aux2252_BOOL,aux2254_BOOL,aux2255_BOOL],aux2256_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux2178_INTEGER,aux2184_INTEGER,aux2190_INTEGER,aux2196_INTEGER,aux2202_INTEGER,aux2208_INTEGER,aux2214_INTEGER,aux2220_INTEGER,aux2226_INTEGER,aux2232_INTEGER,aux2238_INTEGER,aux2244_INTEGER,aux2250_INTEGER,aux2256_INTEGER,1],0,aux2257_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux2258_BOOL);
constraint int_lin_eq([-1,1,1],[aux2259,4,s_00006],0);
constraint int_lt_reif(s_00006,aux2259,aux2260_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux2258_BOOL,aux2260_BOOL],aux2261_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux2262_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux2263_BOOL);
constraint int_lin_eq([-1,1,1],[aux2264,2,s_00001],0);
constraint int_lt_reif(s_00006,aux2264,aux2265_BOOL);
constraint int_le_reif(s_00001, s_00006,aux2266_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux2262_BOOL,aux2263_BOOL,aux2265_BOOL,aux2266_BOOL],aux2267_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux2268_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux2269_BOOL);
constraint int_lin_eq([-1,1,1],[aux2270,6,s_00002],0);
constraint int_lt_reif(s_00006,aux2270,aux2271_BOOL);
constraint int_le_reif(s_00002, s_00006,aux2272_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux2268_BOOL,aux2269_BOOL,aux2271_BOOL,aux2272_BOOL],aux2273_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux2274_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux2275_BOOL);
constraint int_lin_eq([-1,1,1],[aux2276,1,s_00003],0);
constraint int_lt_reif(s_00006,aux2276,aux2277_BOOL);
constraint int_le_reif(s_00003, s_00006,aux2278_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux2274_BOOL,aux2275_BOOL,aux2277_BOOL,aux2278_BOOL],aux2279_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux2280_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux2281_BOOL);
constraint int_lin_eq([-1,1,1],[aux2282,2,s_00004],0);
constraint int_lt_reif(s_00006,aux2282,aux2283_BOOL);
constraint int_le_reif(s_00004, s_00006,aux2284_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux2280_BOOL,aux2281_BOOL,aux2283_BOOL,aux2284_BOOL],aux2285_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux2286_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux2287_BOOL);
constraint int_lin_eq([-1,1,1],[aux2288,1,s_00005],0);
constraint int_lt_reif(s_00006,aux2288,aux2289_BOOL);
constraint int_le_reif(s_00005, s_00006,aux2290_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux2286_BOOL,aux2287_BOOL,aux2289_BOOL,aux2290_BOOL],aux2291_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux2292_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux2293_BOOL);
constraint int_lin_eq([-1,1,1],[aux2294,2,s_00007],0);
constraint int_lt_reif(s_00006,aux2294,aux2295_BOOL);
constraint int_le_reif(s_00007, s_00006,aux2296_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux2292_BOOL,aux2293_BOOL,aux2295_BOOL,aux2296_BOOL],aux2297_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux2298_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux2299_BOOL);
constraint int_lin_eq([-1,1,1],[aux2300,2,s_00008],0);
constraint int_lt_reif(s_00006,aux2300,aux2301_BOOL);
constraint int_le_reif(s_00008, s_00006,aux2302_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux2298_BOOL,aux2299_BOOL,aux2301_BOOL,aux2302_BOOL],aux2303_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux2304_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux2305_BOOL);
constraint int_lin_eq([-1,1,1],[aux2306,2,s_00009],0);
constraint int_lt_reif(s_00006,aux2306,aux2307_BOOL);
constraint int_le_reif(s_00009, s_00006,aux2308_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux2304_BOOL,aux2305_BOOL,aux2307_BOOL,aux2308_BOOL],aux2309_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux2310_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux2311_BOOL);
constraint int_lin_eq([-1,1,1],[aux2312,1,s_00010],0);
constraint int_lt_reif(s_00006,aux2312,aux2313_BOOL);
constraint int_le_reif(s_00010, s_00006,aux2314_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux2310_BOOL,aux2311_BOOL,aux2313_BOOL,aux2314_BOOL],aux2315_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux2316_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux2317_BOOL);
constraint int_lin_eq([-1,1,1],[aux2318,2,s_00011],0);
constraint int_lt_reif(s_00006,aux2318,aux2319_BOOL);
constraint int_le_reif(s_00011, s_00006,aux2320_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux2316_BOOL,aux2317_BOOL,aux2319_BOOL,aux2320_BOOL],aux2321_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux2322_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux2323_BOOL);
constraint int_lin_eq([-1,1,1],[aux2324,3,s_00012],0);
constraint int_lt_reif(s_00006,aux2324,aux2325_BOOL);
constraint int_le_reif(s_00012, s_00006,aux2326_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux2322_BOOL,aux2323_BOOL,aux2325_BOOL,aux2326_BOOL],aux2327_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux2328_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux2329_BOOL);
constraint int_lin_eq([-1,1,1],[aux2330,3,s_00013],0);
constraint int_lt_reif(s_00006,aux2330,aux2331_BOOL);
constraint int_le_reif(s_00013, s_00006,aux2332_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux2328_BOOL,aux2329_BOOL,aux2331_BOOL,aux2332_BOOL],aux2333_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux2334_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux2335_BOOL);
constraint int_lin_eq([-1,1,1],[aux2336,3,s_00014],0);
constraint int_lt_reif(s_00006,aux2336,aux2337_BOOL);
constraint int_le_reif(s_00014, s_00006,aux2338_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux2334_BOOL,aux2335_BOOL,aux2337_BOOL,aux2338_BOOL],aux2339_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux2261_INTEGER,aux2267_INTEGER,aux2273_INTEGER,aux2279_INTEGER,aux2285_INTEGER,aux2291_INTEGER,aux2297_INTEGER,aux2303_INTEGER,aux2309_INTEGER,aux2315_INTEGER,aux2321_INTEGER,aux2327_INTEGER,aux2333_INTEGER,aux2339_INTEGER,1],0,aux2340_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux2341_BOOL);
constraint int_lin_eq([-1,1,1],[aux2342,1,s_00010],0);
constraint int_lt_reif(s_00010,aux2342,aux2343_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux2341_BOOL,aux2343_BOOL],aux2344_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux2345_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux2346_BOOL);
constraint int_lin_eq([-1,1,1],[aux2347,2,s_00001],0);
constraint int_lt_reif(s_00010,aux2347,aux2348_BOOL);
constraint int_le_reif(s_00001, s_00010,aux2349_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux2345_BOOL,aux2346_BOOL,aux2348_BOOL,aux2349_BOOL],aux2350_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux2351_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux2352_BOOL);
constraint int_lin_eq([-1,1,1],[aux2353,6,s_00002],0);
constraint int_lt_reif(s_00010,aux2353,aux2354_BOOL);
constraint int_le_reif(s_00002, s_00010,aux2355_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux2351_BOOL,aux2352_BOOL,aux2354_BOOL,aux2355_BOOL],aux2356_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux2357_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux2358_BOOL);
constraint int_lin_eq([-1,1,1],[aux2359,1,s_00003],0);
constraint int_lt_reif(s_00010,aux2359,aux2360_BOOL);
constraint int_le_reif(s_00003, s_00010,aux2361_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux2357_BOOL,aux2358_BOOL,aux2360_BOOL,aux2361_BOOL],aux2362_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux2363_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux2364_BOOL);
constraint int_lin_eq([-1,1,1],[aux2365,2,s_00004],0);
constraint int_lt_reif(s_00010,aux2365,aux2366_BOOL);
constraint int_le_reif(s_00004, s_00010,aux2367_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux2363_BOOL,aux2364_BOOL,aux2366_BOOL,aux2367_BOOL],aux2368_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux2369_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux2370_BOOL);
constraint int_lin_eq([-1,1,1],[aux2371,1,s_00005],0);
constraint int_lt_reif(s_00010,aux2371,aux2372_BOOL);
constraint int_le_reif(s_00005, s_00010,aux2373_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux2369_BOOL,aux2370_BOOL,aux2372_BOOL,aux2373_BOOL],aux2374_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux2375_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux2376_BOOL);
constraint int_lin_eq([-1,1,1],[aux2377,4,s_00006],0);
constraint int_lt_reif(s_00010,aux2377,aux2378_BOOL);
constraint int_le_reif(s_00006, s_00010,aux2379_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux2375_BOOL,aux2376_BOOL,aux2378_BOOL,aux2379_BOOL],aux2380_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux2381_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux2382_BOOL);
constraint int_lin_eq([-1,1,1],[aux2383,2,s_00007],0);
constraint int_lt_reif(s_00010,aux2383,aux2384_BOOL);
constraint int_le_reif(s_00007, s_00010,aux2385_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux2381_BOOL,aux2382_BOOL,aux2384_BOOL,aux2385_BOOL],aux2386_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux2387_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux2388_BOOL);
constraint int_lin_eq([-1,1,1],[aux2389,2,s_00008],0);
constraint int_lt_reif(s_00010,aux2389,aux2390_BOOL);
constraint int_le_reif(s_00008, s_00010,aux2391_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux2387_BOOL,aux2388_BOOL,aux2390_BOOL,aux2391_BOOL],aux2392_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux2393_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux2394_BOOL);
constraint int_lin_eq([-1,1,1],[aux2395,2,s_00009],0);
constraint int_lt_reif(s_00010,aux2395,aux2396_BOOL);
constraint int_le_reif(s_00009, s_00010,aux2397_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux2393_BOOL,aux2394_BOOL,aux2396_BOOL,aux2397_BOOL],aux2398_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux2399_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux2400_BOOL);
constraint int_lin_eq([-1,1,1],[aux2401,2,s_00011],0);
constraint int_lt_reif(s_00010,aux2401,aux2402_BOOL);
constraint int_le_reif(s_00011, s_00010,aux2403_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux2399_BOOL,aux2400_BOOL,aux2402_BOOL,aux2403_BOOL],aux2404_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux2405_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux2406_BOOL);
constraint int_lin_eq([-1,1,1],[aux2407,3,s_00012],0);
constraint int_lt_reif(s_00010,aux2407,aux2408_BOOL);
constraint int_le_reif(s_00012, s_00010,aux2409_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux2405_BOOL,aux2406_BOOL,aux2408_BOOL,aux2409_BOOL],aux2410_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux2411_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux2412_BOOL);
constraint int_lin_eq([-1,1,1],[aux2413,3,s_00013],0);
constraint int_lt_reif(s_00010,aux2413,aux2414_BOOL);
constraint int_le_reif(s_00013, s_00010,aux2415_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux2411_BOOL,aux2412_BOOL,aux2414_BOOL,aux2415_BOOL],aux2416_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux2417_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux2418_BOOL);
constraint int_lin_eq([-1,1,1],[aux2419,3,s_00014],0);
constraint int_lt_reif(s_00010,aux2419,aux2420_BOOL);
constraint int_le_reif(s_00014, s_00010,aux2421_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux2417_BOOL,aux2418_BOOL,aux2420_BOOL,aux2421_BOOL],aux2422_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux2344_INTEGER,aux2350_INTEGER,aux2356_INTEGER,aux2362_INTEGER,aux2368_INTEGER,aux2374_INTEGER,aux2380_INTEGER,aux2386_INTEGER,aux2392_INTEGER,aux2398_INTEGER,aux2404_INTEGER,aux2410_INTEGER,aux2416_INTEGER,aux2422_INTEGER,1],0,aux2423_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux2424_BOOL);
constraint int_lin_eq([-1,1,1],[aux2425,2,s_00007],0);
constraint int_lt_reif(s_00007,aux2425,aux2426_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux2424_BOOL,aux2426_BOOL],aux2427_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux2428_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux2429_BOOL);
constraint int_lin_eq([-1,1,1],[aux2430,2,s_00001],0);
constraint int_lt_reif(s_00007,aux2430,aux2431_BOOL);
constraint int_le_reif(s_00001, s_00007,aux2432_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux2428_BOOL,aux2429_BOOL,aux2431_BOOL,aux2432_BOOL],aux2433_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux2434_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux2435_BOOL);
constraint int_lin_eq([-1,1,1],[aux2436,6,s_00002],0);
constraint int_lt_reif(s_00007,aux2436,aux2437_BOOL);
constraint int_le_reif(s_00002, s_00007,aux2438_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux2434_BOOL,aux2435_BOOL,aux2437_BOOL,aux2438_BOOL],aux2439_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux2440_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux2441_BOOL);
constraint int_lin_eq([-1,1,1],[aux2442,1,s_00003],0);
constraint int_lt_reif(s_00007,aux2442,aux2443_BOOL);
constraint int_le_reif(s_00003, s_00007,aux2444_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux2440_BOOL,aux2441_BOOL,aux2443_BOOL,aux2444_BOOL],aux2445_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux2446_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux2447_BOOL);
constraint int_lin_eq([-1,1,1],[aux2448,2,s_00004],0);
constraint int_lt_reif(s_00007,aux2448,aux2449_BOOL);
constraint int_le_reif(s_00004, s_00007,aux2450_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux2446_BOOL,aux2447_BOOL,aux2449_BOOL,aux2450_BOOL],aux2451_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux2452_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux2453_BOOL);
constraint int_lin_eq([-1,1,1],[aux2454,1,s_00005],0);
constraint int_lt_reif(s_00007,aux2454,aux2455_BOOL);
constraint int_le_reif(s_00005, s_00007,aux2456_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux2452_BOOL,aux2453_BOOL,aux2455_BOOL,aux2456_BOOL],aux2457_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux2458_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux2459_BOOL);
constraint int_lin_eq([-1,1,1],[aux2460,4,s_00006],0);
constraint int_lt_reif(s_00007,aux2460,aux2461_BOOL);
constraint int_le_reif(s_00006, s_00007,aux2462_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux2458_BOOL,aux2459_BOOL,aux2461_BOOL,aux2462_BOOL],aux2463_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux2464_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux2465_BOOL);
constraint int_lin_eq([-1,1,1],[aux2466,2,s_00008],0);
constraint int_lt_reif(s_00007,aux2466,aux2467_BOOL);
constraint int_le_reif(s_00008, s_00007,aux2468_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux2464_BOOL,aux2465_BOOL,aux2467_BOOL,aux2468_BOOL],aux2469_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux2470_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux2471_BOOL);
constraint int_lin_eq([-1,1,1],[aux2472,2,s_00009],0);
constraint int_lt_reif(s_00007,aux2472,aux2473_BOOL);
constraint int_le_reif(s_00009, s_00007,aux2474_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux2470_BOOL,aux2471_BOOL,aux2473_BOOL,aux2474_BOOL],aux2475_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux2476_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux2477_BOOL);
constraint int_lin_eq([-1,1,1],[aux2478,1,s_00010],0);
constraint int_lt_reif(s_00007,aux2478,aux2479_BOOL);
constraint int_le_reif(s_00010, s_00007,aux2480_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux2476_BOOL,aux2477_BOOL,aux2479_BOOL,aux2480_BOOL],aux2481_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux2482_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux2483_BOOL);
constraint int_lin_eq([-1,1,1],[aux2484,2,s_00011],0);
constraint int_lt_reif(s_00007,aux2484,aux2485_BOOL);
constraint int_le_reif(s_00011, s_00007,aux2486_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux2482_BOOL,aux2483_BOOL,aux2485_BOOL,aux2486_BOOL],aux2487_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux2488_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux2489_BOOL);
constraint int_lin_eq([-1,1,1],[aux2490,3,s_00012],0);
constraint int_lt_reif(s_00007,aux2490,aux2491_BOOL);
constraint int_le_reif(s_00012, s_00007,aux2492_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux2488_BOOL,aux2489_BOOL,aux2491_BOOL,aux2492_BOOL],aux2493_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux2494_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux2495_BOOL);
constraint int_lin_eq([-1,1,1],[aux2496,3,s_00013],0);
constraint int_lt_reif(s_00007,aux2496,aux2497_BOOL);
constraint int_le_reif(s_00013, s_00007,aux2498_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux2494_BOOL,aux2495_BOOL,aux2497_BOOL,aux2498_BOOL],aux2499_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux2500_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux2501_BOOL);
constraint int_lin_eq([-1,1,1],[aux2502,3,s_00014],0);
constraint int_lt_reif(s_00007,aux2502,aux2503_BOOL);
constraint int_le_reif(s_00014, s_00007,aux2504_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux2500_BOOL,aux2501_BOOL,aux2503_BOOL,aux2504_BOOL],aux2505_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux2427_INTEGER,aux2433_INTEGER,aux2439_INTEGER,aux2445_INTEGER,aux2451_INTEGER,aux2457_INTEGER,aux2463_INTEGER,aux2469_INTEGER,aux2475_INTEGER,aux2481_INTEGER,aux2487_INTEGER,aux2493_INTEGER,aux2499_INTEGER,aux2505_INTEGER,1],0,aux2506_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux2507_BOOL);
constraint int_lin_eq([-1,1,1],[aux2508,3,s_00013],0);
constraint int_lt_reif(s_00013,aux2508,aux2509_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux2507_BOOL,aux2509_BOOL],aux2510_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux2511_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux2512_BOOL);
constraint int_lin_eq([-1,1,1],[aux2513,2,s_00001],0);
constraint int_lt_reif(s_00013,aux2513,aux2514_BOOL);
constraint int_le_reif(s_00001, s_00013,aux2515_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux2511_BOOL,aux2512_BOOL,aux2514_BOOL,aux2515_BOOL],aux2516_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux2517_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux2518_BOOL);
constraint int_lin_eq([-1,1,1],[aux2519,6,s_00002],0);
constraint int_lt_reif(s_00013,aux2519,aux2520_BOOL);
constraint int_le_reif(s_00002, s_00013,aux2521_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux2517_BOOL,aux2518_BOOL,aux2520_BOOL,aux2521_BOOL],aux2522_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux2523_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux2524_BOOL);
constraint int_lin_eq([-1,1,1],[aux2525,1,s_00003],0);
constraint int_lt_reif(s_00013,aux2525,aux2526_BOOL);
constraint int_le_reif(s_00003, s_00013,aux2527_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux2523_BOOL,aux2524_BOOL,aux2526_BOOL,aux2527_BOOL],aux2528_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux2529_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux2530_BOOL);
constraint int_lin_eq([-1,1,1],[aux2531,2,s_00004],0);
constraint int_lt_reif(s_00013,aux2531,aux2532_BOOL);
constraint int_le_reif(s_00004, s_00013,aux2533_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux2529_BOOL,aux2530_BOOL,aux2532_BOOL,aux2533_BOOL],aux2534_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux2535_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux2536_BOOL);
constraint int_lin_eq([-1,1,1],[aux2537,1,s_00005],0);
constraint int_lt_reif(s_00013,aux2537,aux2538_BOOL);
constraint int_le_reif(s_00005, s_00013,aux2539_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux2535_BOOL,aux2536_BOOL,aux2538_BOOL,aux2539_BOOL],aux2540_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux2541_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux2542_BOOL);
constraint int_lin_eq([-1,1,1],[aux2543,4,s_00006],0);
constraint int_lt_reif(s_00013,aux2543,aux2544_BOOL);
constraint int_le_reif(s_00006, s_00013,aux2545_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux2541_BOOL,aux2542_BOOL,aux2544_BOOL,aux2545_BOOL],aux2546_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux2547_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux2548_BOOL);
constraint int_lin_eq([-1,1,1],[aux2549,2,s_00007],0);
constraint int_lt_reif(s_00013,aux2549,aux2550_BOOL);
constraint int_le_reif(s_00007, s_00013,aux2551_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux2547_BOOL,aux2548_BOOL,aux2550_BOOL,aux2551_BOOL],aux2552_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux2553_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux2554_BOOL);
constraint int_lin_eq([-1,1,1],[aux2555,2,s_00008],0);
constraint int_lt_reif(s_00013,aux2555,aux2556_BOOL);
constraint int_le_reif(s_00008, s_00013,aux2557_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux2553_BOOL,aux2554_BOOL,aux2556_BOOL,aux2557_BOOL],aux2558_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux2559_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux2560_BOOL);
constraint int_lin_eq([-1,1,1],[aux2561,2,s_00009],0);
constraint int_lt_reif(s_00013,aux2561,aux2562_BOOL);
constraint int_le_reif(s_00009, s_00013,aux2563_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux2559_BOOL,aux2560_BOOL,aux2562_BOOL,aux2563_BOOL],aux2564_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux2565_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux2566_BOOL);
constraint int_lin_eq([-1,1,1],[aux2567,1,s_00010],0);
constraint int_lt_reif(s_00013,aux2567,aux2568_BOOL);
constraint int_le_reif(s_00010, s_00013,aux2569_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux2565_BOOL,aux2566_BOOL,aux2568_BOOL,aux2569_BOOL],aux2570_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux2571_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux2572_BOOL);
constraint int_lin_eq([-1,1,1],[aux2573,2,s_00011],0);
constraint int_lt_reif(s_00013,aux2573,aux2574_BOOL);
constraint int_le_reif(s_00011, s_00013,aux2575_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux2571_BOOL,aux2572_BOOL,aux2574_BOOL,aux2575_BOOL],aux2576_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux2577_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux2578_BOOL);
constraint int_lin_eq([-1,1,1],[aux2579,3,s_00012],0);
constraint int_lt_reif(s_00013,aux2579,aux2580_BOOL);
constraint int_le_reif(s_00012, s_00013,aux2581_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux2577_BOOL,aux2578_BOOL,aux2580_BOOL,aux2581_BOOL],aux2582_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux2583_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux2584_BOOL);
constraint int_lin_eq([-1,1,1],[aux2585,3,s_00014],0);
constraint int_lt_reif(s_00013,aux2585,aux2586_BOOL);
constraint int_le_reif(s_00014, s_00013,aux2587_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux2583_BOOL,aux2584_BOOL,aux2586_BOOL,aux2587_BOOL],aux2588_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux2510_INTEGER,aux2516_INTEGER,aux2522_INTEGER,aux2528_INTEGER,aux2534_INTEGER,aux2540_INTEGER,aux2546_INTEGER,aux2552_INTEGER,aux2558_INTEGER,aux2564_INTEGER,aux2570_INTEGER,aux2576_INTEGER,aux2582_INTEGER,aux2588_INTEGER,1],0,aux2589_BOOL);
constraint array_bool_and([aux1510_BOOL,aux1593_BOOL,aux1676_BOOL,aux1759_BOOL,aux1842_BOOL,aux1925_BOOL,aux2008_BOOL,aux2091_BOOL,aux2174_BOOL,aux2257_BOOL,aux2340_BOOL,aux2423_BOOL,aux2506_BOOL,aux2589_BOOL],aux2590_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[TWorkers_00002_00001_INTEGER,TWorkers_00002_00002_INTEGER,TWorkers_00002_00003_INTEGER,TWorkers_00002_00004_INTEGER,TWorkers_00002_00005_INTEGER,TWorkers_00002_00006_INTEGER,TWorkers_00002_00007_INTEGER,TWorkers_00002_00008_INTEGER,TWorkers_00002_00009_INTEGER,TWorkers_00002_00010_INTEGER,TWorkers_00002_00011_INTEGER,TWorkers_00002_00012_INTEGER,TWorkers_00002_00013_INTEGER,TWorkers_00002_00014_INTEGER,1],0,aux2591_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[TWorkers_00003_00001_INTEGER,TWorkers_00003_00002_INTEGER,TWorkers_00003_00003_INTEGER,TWorkers_00003_00004_INTEGER,TWorkers_00003_00005_INTEGER,TWorkers_00003_00006_INTEGER,TWorkers_00003_00007_INTEGER,TWorkers_00003_00008_INTEGER,TWorkers_00003_00009_INTEGER,TWorkers_00003_00010_INTEGER,TWorkers_00003_00011_INTEGER,TWorkers_00003_00012_INTEGER,TWorkers_00003_00013_INTEGER,TWorkers_00003_00014_INTEGER,1],0,aux2592_BOOL);
constraint int_lin_eq([-1,1,1],[aux2593,2,s_00001],0);
constraint int_lt_reif(s_00003,aux2593,aux2594_BOOL);
constraint int_le_reif(s_00001, s_00003,aux2595_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux2596_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux2597_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux2594_BOOL,aux2595_BOOL,aux2596_BOOL,aux2597_BOOL],aux2598_BOOL);
constraint int_lin_eq([-1,1,1],[aux2599,2,s_00004],0);
constraint int_lt_reif(s_00003,aux2599,aux2600_BOOL);
constraint int_le_reif(s_00004, s_00003,aux2601_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux2602_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux2603_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux2600_BOOL,aux2601_BOOL,aux2602_BOOL,aux2603_BOOL],aux2604_BOOL);
constraint int_lin_eq([-1,1,1],[aux2605,1,s_00005],0);
constraint int_lt_reif(s_00003,aux2605,aux2606_BOOL);
constraint int_le_reif(s_00005, s_00003,aux2607_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux2608_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux2609_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux2606_BOOL,aux2607_BOOL,aux2608_BOOL,aux2609_BOOL],aux2610_BOOL);
constraint int_lin_eq([-1,1,1],[aux2611,6,s_00002],0);
constraint int_lt_reif(s_00003,aux2611,aux2612_BOOL);
constraint int_le_reif(s_00002, s_00003,aux2613_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux2614_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux2615_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux2612_BOOL,aux2613_BOOL,aux2614_BOOL,aux2615_BOOL],aux2616_BOOL);
constraint int_lin_eq([-1,1,1],[aux2617,2,s_00007],0);
constraint int_lt_reif(s_00003,aux2617,aux2618_BOOL);
constraint int_le_reif(s_00007, s_00003,aux2619_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux2620_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux2621_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux2618_BOOL,aux2619_BOOL,aux2620_BOOL,aux2621_BOOL],aux2622_BOOL);
constraint int_lin_eq([-1,1,1],[aux2623,4,s_00006],0);
constraint int_lt_reif(s_00003,aux2623,aux2624_BOOL);
constraint int_le_reif(s_00006, s_00003,aux2625_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux2626_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux2627_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux2624_BOOL,aux2625_BOOL,aux2626_BOOL,aux2627_BOOL],aux2628_BOOL);
constraint int_lin_eq([-1,1,1],[aux2629,2,s_00008],0);
constraint int_lt_reif(s_00003,aux2629,aux2630_BOOL);
constraint int_le_reif(s_00008, s_00003,aux2631_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux2632_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux2633_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux2630_BOOL,aux2631_BOOL,aux2632_BOOL,aux2633_BOOL],aux2634_BOOL);
constraint int_lin_eq([-1,1,1],[aux2635,2,s_00009],0);
constraint int_lt_reif(s_00003,aux2635,aux2636_BOOL);
constraint int_le_reif(s_00009, s_00003,aux2637_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux2638_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux2639_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux2636_BOOL,aux2637_BOOL,aux2638_BOOL,aux2639_BOOL],aux2640_BOOL);
constraint int_lin_eq([-1,1,1],[aux2641,1,s_00010],0);
constraint int_lt_reif(s_00003,aux2641,aux2642_BOOL);
constraint int_le_reif(s_00010, s_00003,aux2643_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux2644_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux2645_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux2642_BOOL,aux2643_BOOL,aux2644_BOOL,aux2645_BOOL],aux2646_BOOL);
constraint int_lin_eq([-1,1,1],[aux2647,2,s_00011],0);
constraint int_lt_reif(s_00003,aux2647,aux2648_BOOL);
constraint int_le_reif(s_00011, s_00003,aux2649_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux2650_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux2651_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux2648_BOOL,aux2649_BOOL,aux2650_BOOL,aux2651_BOOL],aux2652_BOOL);
constraint int_lin_eq([-1,1,1],[aux2653,3,s_00012],0);
constraint int_lt_reif(s_00003,aux2653,aux2654_BOOL);
constraint int_le_reif(s_00012, s_00003,aux2655_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux2656_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux2657_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux2654_BOOL,aux2655_BOOL,aux2656_BOOL,aux2657_BOOL],aux2658_BOOL);
constraint int_lin_eq([-1,1,1],[aux2659,3,s_00013],0);
constraint int_lt_reif(s_00003,aux2659,aux2660_BOOL);
constraint int_le_reif(s_00013, s_00003,aux2661_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux2662_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux2663_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux2660_BOOL,aux2661_BOOL,aux2662_BOOL,aux2663_BOOL],aux2664_BOOL);
constraint int_lin_eq([-1,1,1],[aux2665,3,s_00014],0);
constraint int_lt_reif(s_00003,aux2665,aux2666_BOOL);
constraint int_le_reif(s_00014, s_00003,aux2667_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux2668_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux2669_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux2666_BOOL,aux2667_BOOL,aux2668_BOOL,aux2669_BOOL],aux2670_BOOL);
constraint int_lin_eq([-1,1,1],[aux2671,1,s_00003],0);
constraint int_lt_reif(s_00003,aux2671,aux2672_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux2673_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux2672_BOOL,aux2673_BOOL],aux2674_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux2598_INTEGER,aux2604_INTEGER,aux2610_INTEGER,aux2616_INTEGER,aux2622_INTEGER,aux2628_INTEGER,aux2634_INTEGER,aux2640_INTEGER,aux2646_INTEGER,aux2652_INTEGER,aux2658_INTEGER,aux2664_INTEGER,aux2670_INTEGER,aux2674_INTEGER,1],0,aux2675_BOOL);
constraint int_lin_eq([-1,1,1],[aux2676,2,s_00001],0);
constraint int_lt_reif(s_00008,aux2676,aux2677_BOOL);
constraint int_le_reif(s_00001, s_00008,aux2678_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux2679_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux2680_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux2677_BOOL,aux2678_BOOL,aux2679_BOOL,aux2680_BOOL],aux2681_BOOL);
constraint int_lin_eq([-1,1,1],[aux2682,1,s_00003],0);
constraint int_lt_reif(s_00008,aux2682,aux2683_BOOL);
constraint int_le_reif(s_00003, s_00008,aux2684_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux2685_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux2686_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux2683_BOOL,aux2684_BOOL,aux2685_BOOL,aux2686_BOOL],aux2687_BOOL);
constraint int_lin_eq([-1,1,1],[aux2688,2,s_00004],0);
constraint int_lt_reif(s_00008,aux2688,aux2689_BOOL);
constraint int_le_reif(s_00004, s_00008,aux2690_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux2691_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux2692_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux2689_BOOL,aux2690_BOOL,aux2691_BOOL,aux2692_BOOL],aux2693_BOOL);
constraint int_lin_eq([-1,1,1],[aux2694,1,s_00005],0);
constraint int_lt_reif(s_00008,aux2694,aux2695_BOOL);
constraint int_le_reif(s_00005, s_00008,aux2696_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux2697_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux2698_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux2695_BOOL,aux2696_BOOL,aux2697_BOOL,aux2698_BOOL],aux2699_BOOL);
constraint int_lin_eq([-1,1,1],[aux2700,6,s_00002],0);
constraint int_lt_reif(s_00008,aux2700,aux2701_BOOL);
constraint int_le_reif(s_00002, s_00008,aux2702_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux2703_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux2704_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux2701_BOOL,aux2702_BOOL,aux2703_BOOL,aux2704_BOOL],aux2705_BOOL);
constraint int_lin_eq([-1,1,1],[aux2706,2,s_00007],0);
constraint int_lt_reif(s_00008,aux2706,aux2707_BOOL);
constraint int_le_reif(s_00007, s_00008,aux2708_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux2709_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux2710_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux2707_BOOL,aux2708_BOOL,aux2709_BOOL,aux2710_BOOL],aux2711_BOOL);
constraint int_lin_eq([-1,1,1],[aux2712,4,s_00006],0);
constraint int_lt_reif(s_00008,aux2712,aux2713_BOOL);
constraint int_le_reif(s_00006, s_00008,aux2714_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux2715_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux2716_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux2713_BOOL,aux2714_BOOL,aux2715_BOOL,aux2716_BOOL],aux2717_BOOL);
constraint int_lin_eq([-1,1,1],[aux2718,2,s_00009],0);
constraint int_lt_reif(s_00008,aux2718,aux2719_BOOL);
constraint int_le_reif(s_00009, s_00008,aux2720_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux2721_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux2722_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux2719_BOOL,aux2720_BOOL,aux2721_BOOL,aux2722_BOOL],aux2723_BOOL);
constraint int_lin_eq([-1,1,1],[aux2724,1,s_00010],0);
constraint int_lt_reif(s_00008,aux2724,aux2725_BOOL);
constraint int_le_reif(s_00010, s_00008,aux2726_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux2727_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux2728_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux2725_BOOL,aux2726_BOOL,aux2727_BOOL,aux2728_BOOL],aux2729_BOOL);
constraint int_lin_eq([-1,1,1],[aux2730,2,s_00011],0);
constraint int_lt_reif(s_00008,aux2730,aux2731_BOOL);
constraint int_le_reif(s_00011, s_00008,aux2732_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux2733_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux2734_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux2731_BOOL,aux2732_BOOL,aux2733_BOOL,aux2734_BOOL],aux2735_BOOL);
constraint int_lin_eq([-1,1,1],[aux2736,3,s_00012],0);
constraint int_lt_reif(s_00008,aux2736,aux2737_BOOL);
constraint int_le_reif(s_00012, s_00008,aux2738_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux2739_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux2740_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux2737_BOOL,aux2738_BOOL,aux2739_BOOL,aux2740_BOOL],aux2741_BOOL);
constraint int_lin_eq([-1,1,1],[aux2742,3,s_00013],0);
constraint int_lt_reif(s_00008,aux2742,aux2743_BOOL);
constraint int_le_reif(s_00013, s_00008,aux2744_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux2745_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux2746_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux2743_BOOL,aux2744_BOOL,aux2745_BOOL,aux2746_BOOL],aux2747_BOOL);
constraint int_lin_eq([-1,1,1],[aux2748,3,s_00014],0);
constraint int_lt_reif(s_00008,aux2748,aux2749_BOOL);
constraint int_le_reif(s_00014, s_00008,aux2750_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux2751_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux2752_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux2749_BOOL,aux2750_BOOL,aux2751_BOOL,aux2752_BOOL],aux2753_BOOL);
constraint int_lin_eq([-1,1,1],[aux2754,2,s_00008],0);
constraint int_lt_reif(s_00008,aux2754,aux2755_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux2756_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux2755_BOOL,aux2756_BOOL],aux2757_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux2681_INTEGER,aux2687_INTEGER,aux2693_INTEGER,aux2699_INTEGER,aux2705_INTEGER,aux2711_INTEGER,aux2717_INTEGER,aux2723_INTEGER,aux2729_INTEGER,aux2735_INTEGER,aux2741_INTEGER,aux2747_INTEGER,aux2753_INTEGER,aux2757_INTEGER,1],0,aux2758_BOOL);
constraint int_lin_eq([-1,1,1],[aux2759,2,s_00001],0);
constraint int_lt_reif(s_00010,aux2759,aux2760_BOOL);
constraint int_le_reif(s_00001, s_00010,aux2761_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux2762_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux2763_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux2760_BOOL,aux2761_BOOL,aux2762_BOOL,aux2763_BOOL],aux2764_BOOL);
constraint int_lin_eq([-1,1,1],[aux2765,1,s_00003],0);
constraint int_lt_reif(s_00010,aux2765,aux2766_BOOL);
constraint int_le_reif(s_00003, s_00010,aux2767_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux2768_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux2769_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux2766_BOOL,aux2767_BOOL,aux2768_BOOL,aux2769_BOOL],aux2770_BOOL);
constraint int_lin_eq([-1,1,1],[aux2771,2,s_00004],0);
constraint int_lt_reif(s_00010,aux2771,aux2772_BOOL);
constraint int_le_reif(s_00004, s_00010,aux2773_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux2774_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux2775_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux2772_BOOL,aux2773_BOOL,aux2774_BOOL,aux2775_BOOL],aux2776_BOOL);
constraint int_lin_eq([-1,1,1],[aux2777,1,s_00005],0);
constraint int_lt_reif(s_00010,aux2777,aux2778_BOOL);
constraint int_le_reif(s_00005, s_00010,aux2779_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux2780_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux2781_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux2778_BOOL,aux2779_BOOL,aux2780_BOOL,aux2781_BOOL],aux2782_BOOL);
constraint int_lin_eq([-1,1,1],[aux2783,6,s_00002],0);
constraint int_lt_reif(s_00010,aux2783,aux2784_BOOL);
constraint int_le_reif(s_00002, s_00010,aux2785_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux2786_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux2787_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux2784_BOOL,aux2785_BOOL,aux2786_BOOL,aux2787_BOOL],aux2788_BOOL);
constraint int_lin_eq([-1,1,1],[aux2789,2,s_00007],0);
constraint int_lt_reif(s_00010,aux2789,aux2790_BOOL);
constraint int_le_reif(s_00007, s_00010,aux2791_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux2792_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux2793_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux2790_BOOL,aux2791_BOOL,aux2792_BOOL,aux2793_BOOL],aux2794_BOOL);
constraint int_lin_eq([-1,1,1],[aux2795,4,s_00006],0);
constraint int_lt_reif(s_00010,aux2795,aux2796_BOOL);
constraint int_le_reif(s_00006, s_00010,aux2797_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux2798_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux2799_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux2796_BOOL,aux2797_BOOL,aux2798_BOOL,aux2799_BOOL],aux2800_BOOL);
constraint int_lin_eq([-1,1,1],[aux2801,2,s_00008],0);
constraint int_lt_reif(s_00010,aux2801,aux2802_BOOL);
constraint int_le_reif(s_00008, s_00010,aux2803_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux2804_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux2805_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux2802_BOOL,aux2803_BOOL,aux2804_BOOL,aux2805_BOOL],aux2806_BOOL);
constraint int_lin_eq([-1,1,1],[aux2807,2,s_00009],0);
constraint int_lt_reif(s_00010,aux2807,aux2808_BOOL);
constraint int_le_reif(s_00009, s_00010,aux2809_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux2810_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux2811_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux2808_BOOL,aux2809_BOOL,aux2810_BOOL,aux2811_BOOL],aux2812_BOOL);
constraint int_lin_eq([-1,1,1],[aux2813,2,s_00011],0);
constraint int_lt_reif(s_00010,aux2813,aux2814_BOOL);
constraint int_le_reif(s_00011, s_00010,aux2815_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux2816_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux2817_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux2814_BOOL,aux2815_BOOL,aux2816_BOOL,aux2817_BOOL],aux2818_BOOL);
constraint int_lin_eq([-1,1,1],[aux2819,3,s_00012],0);
constraint int_lt_reif(s_00010,aux2819,aux2820_BOOL);
constraint int_le_reif(s_00012, s_00010,aux2821_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux2822_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux2823_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux2820_BOOL,aux2821_BOOL,aux2822_BOOL,aux2823_BOOL],aux2824_BOOL);
constraint int_lin_eq([-1,1,1],[aux2825,3,s_00013],0);
constraint int_lt_reif(s_00010,aux2825,aux2826_BOOL);
constraint int_le_reif(s_00013, s_00010,aux2827_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux2828_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux2829_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux2826_BOOL,aux2827_BOOL,aux2828_BOOL,aux2829_BOOL],aux2830_BOOL);
constraint int_lin_eq([-1,1,1],[aux2831,3,s_00014],0);
constraint int_lt_reif(s_00010,aux2831,aux2832_BOOL);
constraint int_le_reif(s_00014, s_00010,aux2833_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux2834_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux2835_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux2832_BOOL,aux2833_BOOL,aux2834_BOOL,aux2835_BOOL],aux2836_BOOL);
constraint int_lin_eq([-1,1,1],[aux2837,1,s_00010],0);
constraint int_lt_reif(s_00010,aux2837,aux2838_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux2839_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux2838_BOOL,aux2839_BOOL],aux2840_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux2764_INTEGER,aux2770_INTEGER,aux2776_INTEGER,aux2782_INTEGER,aux2788_INTEGER,aux2794_INTEGER,aux2800_INTEGER,aux2806_INTEGER,aux2812_INTEGER,aux2818_INTEGER,aux2824_INTEGER,aux2830_INTEGER,aux2836_INTEGER,aux2840_INTEGER,1],0,aux2841_BOOL);
constraint int_lin_eq([-1,1,1],[aux2842,2,s_00001],0);
constraint int_lt_reif(s_00013,aux2842,aux2843_BOOL);
constraint int_le_reif(s_00001, s_00013,aux2844_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux2845_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux2846_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux2843_BOOL,aux2844_BOOL,aux2845_BOOL,aux2846_BOOL],aux2847_BOOL);
constraint int_lin_eq([-1,1,1],[aux2848,1,s_00003],0);
constraint int_lt_reif(s_00013,aux2848,aux2849_BOOL);
constraint int_le_reif(s_00003, s_00013,aux2850_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux2851_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux2852_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux2849_BOOL,aux2850_BOOL,aux2851_BOOL,aux2852_BOOL],aux2853_BOOL);
constraint int_lin_eq([-1,1,1],[aux2854,2,s_00004],0);
constraint int_lt_reif(s_00013,aux2854,aux2855_BOOL);
constraint int_le_reif(s_00004, s_00013,aux2856_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux2857_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux2858_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux2855_BOOL,aux2856_BOOL,aux2857_BOOL,aux2858_BOOL],aux2859_BOOL);
constraint int_lin_eq([-1,1,1],[aux2860,1,s_00005],0);
constraint int_lt_reif(s_00013,aux2860,aux2861_BOOL);
constraint int_le_reif(s_00005, s_00013,aux2862_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux2863_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux2864_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux2861_BOOL,aux2862_BOOL,aux2863_BOOL,aux2864_BOOL],aux2865_BOOL);
constraint int_lin_eq([-1,1,1],[aux2866,6,s_00002],0);
constraint int_lt_reif(s_00013,aux2866,aux2867_BOOL);
constraint int_le_reif(s_00002, s_00013,aux2868_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux2869_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux2870_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux2867_BOOL,aux2868_BOOL,aux2869_BOOL,aux2870_BOOL],aux2871_BOOL);
constraint int_lin_eq([-1,1,1],[aux2872,2,s_00007],0);
constraint int_lt_reif(s_00013,aux2872,aux2873_BOOL);
constraint int_le_reif(s_00007, s_00013,aux2874_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux2875_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux2876_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux2873_BOOL,aux2874_BOOL,aux2875_BOOL,aux2876_BOOL],aux2877_BOOL);
constraint int_lin_eq([-1,1,1],[aux2878,4,s_00006],0);
constraint int_lt_reif(s_00013,aux2878,aux2879_BOOL);
constraint int_le_reif(s_00006, s_00013,aux2880_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux2881_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux2882_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux2879_BOOL,aux2880_BOOL,aux2881_BOOL,aux2882_BOOL],aux2883_BOOL);
constraint int_lin_eq([-1,1,1],[aux2884,2,s_00008],0);
constraint int_lt_reif(s_00013,aux2884,aux2885_BOOL);
constraint int_le_reif(s_00008, s_00013,aux2886_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux2887_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux2888_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux2885_BOOL,aux2886_BOOL,aux2887_BOOL,aux2888_BOOL],aux2889_BOOL);
constraint int_lin_eq([-1,1,1],[aux2890,2,s_00009],0);
constraint int_lt_reif(s_00013,aux2890,aux2891_BOOL);
constraint int_le_reif(s_00009, s_00013,aux2892_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux2893_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux2894_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux2891_BOOL,aux2892_BOOL,aux2893_BOOL,aux2894_BOOL],aux2895_BOOL);
constraint int_lin_eq([-1,1,1],[aux2896,1,s_00010],0);
constraint int_lt_reif(s_00013,aux2896,aux2897_BOOL);
constraint int_le_reif(s_00010, s_00013,aux2898_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux2899_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux2900_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux2897_BOOL,aux2898_BOOL,aux2899_BOOL,aux2900_BOOL],aux2901_BOOL);
constraint int_lin_eq([-1,1,1],[aux2902,2,s_00011],0);
constraint int_lt_reif(s_00013,aux2902,aux2903_BOOL);
constraint int_le_reif(s_00011, s_00013,aux2904_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux2905_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux2906_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux2903_BOOL,aux2904_BOOL,aux2905_BOOL,aux2906_BOOL],aux2907_BOOL);
constraint int_lin_eq([-1,1,1],[aux2908,3,s_00012],0);
constraint int_lt_reif(s_00013,aux2908,aux2909_BOOL);
constraint int_le_reif(s_00012, s_00013,aux2910_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux2911_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux2912_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux2909_BOOL,aux2910_BOOL,aux2911_BOOL,aux2912_BOOL],aux2913_BOOL);
constraint int_lin_eq([-1,1,1],[aux2914,3,s_00014],0);
constraint int_lt_reif(s_00013,aux2914,aux2915_BOOL);
constraint int_le_reif(s_00014, s_00013,aux2916_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux2917_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux2918_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux2915_BOOL,aux2916_BOOL,aux2917_BOOL,aux2918_BOOL],aux2919_BOOL);
constraint int_lin_eq([-1,1,1],[aux2920,3,s_00013],0);
constraint int_lt_reif(s_00013,aux2920,aux2921_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux2922_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux2921_BOOL,aux2922_BOOL],aux2923_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux2847_INTEGER,aux2853_INTEGER,aux2859_INTEGER,aux2865_INTEGER,aux2871_INTEGER,aux2877_INTEGER,aux2883_INTEGER,aux2889_INTEGER,aux2895_INTEGER,aux2901_INTEGER,aux2907_INTEGER,aux2913_INTEGER,aux2919_INTEGER,aux2923_INTEGER,1],0,aux2924_BOOL);
constraint int_lin_eq([-1,1,1],[aux2925,2,s_00001],0);
constraint int_lt_reif(s_00007,aux2925,aux2926_BOOL);
constraint int_le_reif(s_00001, s_00007,aux2927_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux2928_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux2929_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux2926_BOOL,aux2927_BOOL,aux2928_BOOL,aux2929_BOOL],aux2930_BOOL);
constraint int_lin_eq([-1,1,1],[aux2931,1,s_00003],0);
constraint int_lt_reif(s_00007,aux2931,aux2932_BOOL);
constraint int_le_reif(s_00003, s_00007,aux2933_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux2934_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux2935_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux2932_BOOL,aux2933_BOOL,aux2934_BOOL,aux2935_BOOL],aux2936_BOOL);
constraint int_lin_eq([-1,1,1],[aux2937,2,s_00004],0);
constraint int_lt_reif(s_00007,aux2937,aux2938_BOOL);
constraint int_le_reif(s_00004, s_00007,aux2939_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux2940_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux2941_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux2938_BOOL,aux2939_BOOL,aux2940_BOOL,aux2941_BOOL],aux2942_BOOL);
constraint int_lin_eq([-1,1,1],[aux2943,1,s_00005],0);
constraint int_lt_reif(s_00007,aux2943,aux2944_BOOL);
constraint int_le_reif(s_00005, s_00007,aux2945_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux2946_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux2947_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux2944_BOOL,aux2945_BOOL,aux2946_BOOL,aux2947_BOOL],aux2948_BOOL);
constraint int_lin_eq([-1,1,1],[aux2949,6,s_00002],0);
constraint int_lt_reif(s_00007,aux2949,aux2950_BOOL);
constraint int_le_reif(s_00002, s_00007,aux2951_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux2952_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux2953_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux2950_BOOL,aux2951_BOOL,aux2952_BOOL,aux2953_BOOL],aux2954_BOOL);
constraint int_lin_eq([-1,1,1],[aux2955,4,s_00006],0);
constraint int_lt_reif(s_00007,aux2955,aux2956_BOOL);
constraint int_le_reif(s_00006, s_00007,aux2957_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux2958_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux2959_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux2956_BOOL,aux2957_BOOL,aux2958_BOOL,aux2959_BOOL],aux2960_BOOL);
constraint int_lin_eq([-1,1,1],[aux2961,2,s_00008],0);
constraint int_lt_reif(s_00007,aux2961,aux2962_BOOL);
constraint int_le_reif(s_00008, s_00007,aux2963_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux2964_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux2965_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux2962_BOOL,aux2963_BOOL,aux2964_BOOL,aux2965_BOOL],aux2966_BOOL);
constraint int_lin_eq([-1,1,1],[aux2967,2,s_00009],0);
constraint int_lt_reif(s_00007,aux2967,aux2968_BOOL);
constraint int_le_reif(s_00009, s_00007,aux2969_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux2970_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux2971_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux2968_BOOL,aux2969_BOOL,aux2970_BOOL,aux2971_BOOL],aux2972_BOOL);
constraint int_lin_eq([-1,1,1],[aux2973,1,s_00010],0);
constraint int_lt_reif(s_00007,aux2973,aux2974_BOOL);
constraint int_le_reif(s_00010, s_00007,aux2975_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux2976_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux2977_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux2974_BOOL,aux2975_BOOL,aux2976_BOOL,aux2977_BOOL],aux2978_BOOL);
constraint int_lin_eq([-1,1,1],[aux2979,2,s_00011],0);
constraint int_lt_reif(s_00007,aux2979,aux2980_BOOL);
constraint int_le_reif(s_00011, s_00007,aux2981_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux2982_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux2983_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux2980_BOOL,aux2981_BOOL,aux2982_BOOL,aux2983_BOOL],aux2984_BOOL);
constraint int_lin_eq([-1,1,1],[aux2985,3,s_00012],0);
constraint int_lt_reif(s_00007,aux2985,aux2986_BOOL);
constraint int_le_reif(s_00012, s_00007,aux2987_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux2988_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux2989_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux2986_BOOL,aux2987_BOOL,aux2988_BOOL,aux2989_BOOL],aux2990_BOOL);
constraint int_lin_eq([-1,1,1],[aux2991,3,s_00013],0);
constraint int_lt_reif(s_00007,aux2991,aux2992_BOOL);
constraint int_le_reif(s_00013, s_00007,aux2993_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux2994_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux2995_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux2992_BOOL,aux2993_BOOL,aux2994_BOOL,aux2995_BOOL],aux2996_BOOL);
constraint int_lin_eq([-1,1,1],[aux2997,3,s_00014],0);
constraint int_lt_reif(s_00007,aux2997,aux2998_BOOL);
constraint int_le_reif(s_00014, s_00007,aux2999_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux3000_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux3001_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux2998_BOOL,aux2999_BOOL,aux3000_BOOL,aux3001_BOOL],aux3002_BOOL);
constraint int_lin_eq([-1,1,1],[aux3003,2,s_00007],0);
constraint int_lt_reif(s_00007,aux3003,aux3004_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux3005_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux3004_BOOL,aux3005_BOOL],aux3006_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux2930_INTEGER,aux2936_INTEGER,aux2942_INTEGER,aux2948_INTEGER,aux2954_INTEGER,aux2960_INTEGER,aux2966_INTEGER,aux2972_INTEGER,aux2978_INTEGER,aux2984_INTEGER,aux2990_INTEGER,aux2996_INTEGER,aux3002_INTEGER,aux3006_INTEGER,1],0,aux3007_BOOL);
constraint int_lin_eq([-1,1,1],[aux3008,2,s_00001],0);
constraint int_lt_reif(s_00012,aux3008,aux3009_BOOL);
constraint int_le_reif(s_00001, s_00012,aux3010_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux3011_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux3012_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux3009_BOOL,aux3010_BOOL,aux3011_BOOL,aux3012_BOOL],aux3013_BOOL);
constraint int_lin_eq([-1,1,1],[aux3014,1,s_00003],0);
constraint int_lt_reif(s_00012,aux3014,aux3015_BOOL);
constraint int_le_reif(s_00003, s_00012,aux3016_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux3017_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux3018_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux3015_BOOL,aux3016_BOOL,aux3017_BOOL,aux3018_BOOL],aux3019_BOOL);
constraint int_lin_eq([-1,1,1],[aux3020,2,s_00004],0);
constraint int_lt_reif(s_00012,aux3020,aux3021_BOOL);
constraint int_le_reif(s_00004, s_00012,aux3022_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux3023_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux3024_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux3021_BOOL,aux3022_BOOL,aux3023_BOOL,aux3024_BOOL],aux3025_BOOL);
constraint int_lin_eq([-1,1,1],[aux3026,1,s_00005],0);
constraint int_lt_reif(s_00012,aux3026,aux3027_BOOL);
constraint int_le_reif(s_00005, s_00012,aux3028_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux3029_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux3030_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux3027_BOOL,aux3028_BOOL,aux3029_BOOL,aux3030_BOOL],aux3031_BOOL);
constraint int_lin_eq([-1,1,1],[aux3032,6,s_00002],0);
constraint int_lt_reif(s_00012,aux3032,aux3033_BOOL);
constraint int_le_reif(s_00002, s_00012,aux3034_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux3035_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux3036_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux3033_BOOL,aux3034_BOOL,aux3035_BOOL,aux3036_BOOL],aux3037_BOOL);
constraint int_lin_eq([-1,1,1],[aux3038,2,s_00007],0);
constraint int_lt_reif(s_00012,aux3038,aux3039_BOOL);
constraint int_le_reif(s_00007, s_00012,aux3040_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux3041_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux3042_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux3039_BOOL,aux3040_BOOL,aux3041_BOOL,aux3042_BOOL],aux3043_BOOL);
constraint int_lin_eq([-1,1,1],[aux3044,4,s_00006],0);
constraint int_lt_reif(s_00012,aux3044,aux3045_BOOL);
constraint int_le_reif(s_00006, s_00012,aux3046_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux3047_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux3048_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux3045_BOOL,aux3046_BOOL,aux3047_BOOL,aux3048_BOOL],aux3049_BOOL);
constraint int_lin_eq([-1,1,1],[aux3050,2,s_00008],0);
constraint int_lt_reif(s_00012,aux3050,aux3051_BOOL);
constraint int_le_reif(s_00008, s_00012,aux3052_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux3053_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux3054_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux3051_BOOL,aux3052_BOOL,aux3053_BOOL,aux3054_BOOL],aux3055_BOOL);
constraint int_lin_eq([-1,1,1],[aux3056,2,s_00009],0);
constraint int_lt_reif(s_00012,aux3056,aux3057_BOOL);
constraint int_le_reif(s_00009, s_00012,aux3058_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux3059_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux3060_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux3057_BOOL,aux3058_BOOL,aux3059_BOOL,aux3060_BOOL],aux3061_BOOL);
constraint int_lin_eq([-1,1,1],[aux3062,1,s_00010],0);
constraint int_lt_reif(s_00012,aux3062,aux3063_BOOL);
constraint int_le_reif(s_00010, s_00012,aux3064_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux3065_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux3066_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux3063_BOOL,aux3064_BOOL,aux3065_BOOL,aux3066_BOOL],aux3067_BOOL);
constraint int_lin_eq([-1,1,1],[aux3068,2,s_00011],0);
constraint int_lt_reif(s_00012,aux3068,aux3069_BOOL);
constraint int_le_reif(s_00011, s_00012,aux3070_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux3071_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux3072_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux3069_BOOL,aux3070_BOOL,aux3071_BOOL,aux3072_BOOL],aux3073_BOOL);
constraint int_lin_eq([-1,1,1],[aux3074,3,s_00013],0);
constraint int_lt_reif(s_00012,aux3074,aux3075_BOOL);
constraint int_le_reif(s_00013, s_00012,aux3076_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux3077_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux3078_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux3075_BOOL,aux3076_BOOL,aux3077_BOOL,aux3078_BOOL],aux3079_BOOL);
constraint int_lin_eq([-1,1,1],[aux3080,3,s_00014],0);
constraint int_lt_reif(s_00012,aux3080,aux3081_BOOL);
constraint int_le_reif(s_00014, s_00012,aux3082_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux3083_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux3084_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux3081_BOOL,aux3082_BOOL,aux3083_BOOL,aux3084_BOOL],aux3085_BOOL);
constraint int_lin_eq([-1,1,1],[aux3086,3,s_00012],0);
constraint int_lt_reif(s_00012,aux3086,aux3087_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux3088_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux3087_BOOL,aux3088_BOOL],aux3089_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux3013_INTEGER,aux3019_INTEGER,aux3025_INTEGER,aux3031_INTEGER,aux3037_INTEGER,aux3043_INTEGER,aux3049_INTEGER,aux3055_INTEGER,aux3061_INTEGER,aux3067_INTEGER,aux3073_INTEGER,aux3079_INTEGER,aux3085_INTEGER,aux3089_INTEGER,1],0,aux3090_BOOL);
constraint int_lin_eq([-1,1,1],[aux3091,2,s_00001],0);
constraint int_lt_reif(s_00002,aux3091,aux3092_BOOL);
constraint int_le_reif(s_00001, s_00002,aux3093_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux3094_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux3095_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux3092_BOOL,aux3093_BOOL,aux3094_BOOL,aux3095_BOOL],aux3096_BOOL);
constraint int_lin_eq([-1,1,1],[aux3097,1,s_00003],0);
constraint int_lt_reif(s_00002,aux3097,aux3098_BOOL);
constraint int_le_reif(s_00003, s_00002,aux3099_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux3100_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux3101_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux3098_BOOL,aux3099_BOOL,aux3100_BOOL,aux3101_BOOL],aux3102_BOOL);
constraint int_lin_eq([-1,1,1],[aux3103,2,s_00004],0);
constraint int_lt_reif(s_00002,aux3103,aux3104_BOOL);
constraint int_le_reif(s_00004, s_00002,aux3105_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux3106_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux3107_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux3104_BOOL,aux3105_BOOL,aux3106_BOOL,aux3107_BOOL],aux3108_BOOL);
constraint int_lin_eq([-1,1,1],[aux3109,1,s_00005],0);
constraint int_lt_reif(s_00002,aux3109,aux3110_BOOL);
constraint int_le_reif(s_00005, s_00002,aux3111_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux3112_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux3113_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux3110_BOOL,aux3111_BOOL,aux3112_BOOL,aux3113_BOOL],aux3114_BOOL);
constraint int_lin_eq([-1,1,1],[aux3115,2,s_00007],0);
constraint int_lt_reif(s_00002,aux3115,aux3116_BOOL);
constraint int_le_reif(s_00007, s_00002,aux3117_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux3118_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux3119_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux3116_BOOL,aux3117_BOOL,aux3118_BOOL,aux3119_BOOL],aux3120_BOOL);
constraint int_lin_eq([-1,1,1],[aux3121,4,s_00006],0);
constraint int_lt_reif(s_00002,aux3121,aux3122_BOOL);
constraint int_le_reif(s_00006, s_00002,aux3123_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux3124_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux3125_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux3122_BOOL,aux3123_BOOL,aux3124_BOOL,aux3125_BOOL],aux3126_BOOL);
constraint int_lin_eq([-1,1,1],[aux3127,2,s_00008],0);
constraint int_lt_reif(s_00002,aux3127,aux3128_BOOL);
constraint int_le_reif(s_00008, s_00002,aux3129_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux3130_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux3131_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux3128_BOOL,aux3129_BOOL,aux3130_BOOL,aux3131_BOOL],aux3132_BOOL);
constraint int_lin_eq([-1,1,1],[aux3133,2,s_00009],0);
constraint int_lt_reif(s_00002,aux3133,aux3134_BOOL);
constraint int_le_reif(s_00009, s_00002,aux3135_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux3136_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux3137_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux3134_BOOL,aux3135_BOOL,aux3136_BOOL,aux3137_BOOL],aux3138_BOOL);
constraint int_lin_eq([-1,1,1],[aux3139,1,s_00010],0);
constraint int_lt_reif(s_00002,aux3139,aux3140_BOOL);
constraint int_le_reif(s_00010, s_00002,aux3141_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux3142_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux3143_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux3140_BOOL,aux3141_BOOL,aux3142_BOOL,aux3143_BOOL],aux3144_BOOL);
constraint int_lin_eq([-1,1,1],[aux3145,2,s_00011],0);
constraint int_lt_reif(s_00002,aux3145,aux3146_BOOL);
constraint int_le_reif(s_00011, s_00002,aux3147_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux3148_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux3149_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux3146_BOOL,aux3147_BOOL,aux3148_BOOL,aux3149_BOOL],aux3150_BOOL);
constraint int_lin_eq([-1,1,1],[aux3151,3,s_00012],0);
constraint int_lt_reif(s_00002,aux3151,aux3152_BOOL);
constraint int_le_reif(s_00012, s_00002,aux3153_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux3154_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux3155_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux3152_BOOL,aux3153_BOOL,aux3154_BOOL,aux3155_BOOL],aux3156_BOOL);
constraint int_lin_eq([-1,1,1],[aux3157,3,s_00013],0);
constraint int_lt_reif(s_00002,aux3157,aux3158_BOOL);
constraint int_le_reif(s_00013, s_00002,aux3159_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux3160_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux3161_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux3158_BOOL,aux3159_BOOL,aux3160_BOOL,aux3161_BOOL],aux3162_BOOL);
constraint int_lin_eq([-1,1,1],[aux3163,3,s_00014],0);
constraint int_lt_reif(s_00002,aux3163,aux3164_BOOL);
constraint int_le_reif(s_00014, s_00002,aux3165_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux3166_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux3167_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux3164_BOOL,aux3165_BOOL,aux3166_BOOL,aux3167_BOOL],aux3168_BOOL);
constraint int_lin_eq([-1,1,1],[aux3169,6,s_00002],0);
constraint int_lt_reif(s_00002,aux3169,aux3170_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux3171_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux3170_BOOL,aux3171_BOOL],aux3172_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux3096_INTEGER,aux3102_INTEGER,aux3108_INTEGER,aux3114_INTEGER,aux3120_INTEGER,aux3126_INTEGER,aux3132_INTEGER,aux3138_INTEGER,aux3144_INTEGER,aux3150_INTEGER,aux3156_INTEGER,aux3162_INTEGER,aux3168_INTEGER,aux3172_INTEGER,1],0,aux3173_BOOL);
constraint int_lin_eq([-1,1,1],[aux3174,2,s_00001],0);
constraint int_lt_reif(s_00005,aux3174,aux3175_BOOL);
constraint int_le_reif(s_00001, s_00005,aux3176_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux3177_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux3178_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux3175_BOOL,aux3176_BOOL,aux3177_BOOL,aux3178_BOOL],aux3179_BOOL);
constraint int_lin_eq([-1,1,1],[aux3180,1,s_00003],0);
constraint int_lt_reif(s_00005,aux3180,aux3181_BOOL);
constraint int_le_reif(s_00003, s_00005,aux3182_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux3183_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux3184_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux3181_BOOL,aux3182_BOOL,aux3183_BOOL,aux3184_BOOL],aux3185_BOOL);
constraint int_lin_eq([-1,1,1],[aux3186,2,s_00004],0);
constraint int_lt_reif(s_00005,aux3186,aux3187_BOOL);
constraint int_le_reif(s_00004, s_00005,aux3188_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux3189_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux3190_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux3187_BOOL,aux3188_BOOL,aux3189_BOOL,aux3190_BOOL],aux3191_BOOL);
constraint int_lin_eq([-1,1,1],[aux3192,6,s_00002],0);
constraint int_lt_reif(s_00005,aux3192,aux3193_BOOL);
constraint int_le_reif(s_00002, s_00005,aux3194_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux3195_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux3196_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux3193_BOOL,aux3194_BOOL,aux3195_BOOL,aux3196_BOOL],aux3197_BOOL);
constraint int_lin_eq([-1,1,1],[aux3198,2,s_00007],0);
constraint int_lt_reif(s_00005,aux3198,aux3199_BOOL);
constraint int_le_reif(s_00007, s_00005,aux3200_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux3201_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux3202_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux3199_BOOL,aux3200_BOOL,aux3201_BOOL,aux3202_BOOL],aux3203_BOOL);
constraint int_lin_eq([-1,1,1],[aux3204,4,s_00006],0);
constraint int_lt_reif(s_00005,aux3204,aux3205_BOOL);
constraint int_le_reif(s_00006, s_00005,aux3206_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux3207_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux3208_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux3205_BOOL,aux3206_BOOL,aux3207_BOOL,aux3208_BOOL],aux3209_BOOL);
constraint int_lin_eq([-1,1,1],[aux3210,2,s_00008],0);
constraint int_lt_reif(s_00005,aux3210,aux3211_BOOL);
constraint int_le_reif(s_00008, s_00005,aux3212_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux3213_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux3214_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux3211_BOOL,aux3212_BOOL,aux3213_BOOL,aux3214_BOOL],aux3215_BOOL);
constraint int_lin_eq([-1,1,1],[aux3216,2,s_00009],0);
constraint int_lt_reif(s_00005,aux3216,aux3217_BOOL);
constraint int_le_reif(s_00009, s_00005,aux3218_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux3219_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux3220_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux3217_BOOL,aux3218_BOOL,aux3219_BOOL,aux3220_BOOL],aux3221_BOOL);
constraint int_lin_eq([-1,1,1],[aux3222,1,s_00010],0);
constraint int_lt_reif(s_00005,aux3222,aux3223_BOOL);
constraint int_le_reif(s_00010, s_00005,aux3224_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux3225_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux3226_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux3223_BOOL,aux3224_BOOL,aux3225_BOOL,aux3226_BOOL],aux3227_BOOL);
constraint int_lin_eq([-1,1,1],[aux3228,2,s_00011],0);
constraint int_lt_reif(s_00005,aux3228,aux3229_BOOL);
constraint int_le_reif(s_00011, s_00005,aux3230_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux3231_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux3232_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux3229_BOOL,aux3230_BOOL,aux3231_BOOL,aux3232_BOOL],aux3233_BOOL);
constraint int_lin_eq([-1,1,1],[aux3234,3,s_00012],0);
constraint int_lt_reif(s_00005,aux3234,aux3235_BOOL);
constraint int_le_reif(s_00012, s_00005,aux3236_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux3237_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux3238_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux3235_BOOL,aux3236_BOOL,aux3237_BOOL,aux3238_BOOL],aux3239_BOOL);
constraint int_lin_eq([-1,1,1],[aux3240,3,s_00013],0);
constraint int_lt_reif(s_00005,aux3240,aux3241_BOOL);
constraint int_le_reif(s_00013, s_00005,aux3242_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux3243_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux3244_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux3241_BOOL,aux3242_BOOL,aux3243_BOOL,aux3244_BOOL],aux3245_BOOL);
constraint int_lin_eq([-1,1,1],[aux3246,3,s_00014],0);
constraint int_lt_reif(s_00005,aux3246,aux3247_BOOL);
constraint int_le_reif(s_00014, s_00005,aux3248_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux3249_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux3250_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux3247_BOOL,aux3248_BOOL,aux3249_BOOL,aux3250_BOOL],aux3251_BOOL);
constraint int_lin_eq([-1,1,1],[aux3252,1,s_00005],0);
constraint int_lt_reif(s_00005,aux3252,aux3253_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux3254_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux3253_BOOL,aux3254_BOOL],aux3255_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux3179_INTEGER,aux3185_INTEGER,aux3191_INTEGER,aux3197_INTEGER,aux3203_INTEGER,aux3209_INTEGER,aux3215_INTEGER,aux3221_INTEGER,aux3227_INTEGER,aux3233_INTEGER,aux3239_INTEGER,aux3245_INTEGER,aux3251_INTEGER,aux3255_INTEGER,1],0,aux3256_BOOL);
constraint int_lin_eq([-1,1,1],[aux3257,2,s_00001],0);
constraint int_lt_reif(s_00004,aux3257,aux3258_BOOL);
constraint int_le_reif(s_00001, s_00004,aux3259_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux3260_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux3261_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux3258_BOOL,aux3259_BOOL,aux3260_BOOL,aux3261_BOOL],aux3262_BOOL);
constraint int_lin_eq([-1,1,1],[aux3263,1,s_00003],0);
constraint int_lt_reif(s_00004,aux3263,aux3264_BOOL);
constraint int_le_reif(s_00003, s_00004,aux3265_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux3266_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux3267_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux3264_BOOL,aux3265_BOOL,aux3266_BOOL,aux3267_BOOL],aux3268_BOOL);
constraint int_lin_eq([-1,1,1],[aux3269,1,s_00005],0);
constraint int_lt_reif(s_00004,aux3269,aux3270_BOOL);
constraint int_le_reif(s_00005, s_00004,aux3271_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux3272_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux3273_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux3270_BOOL,aux3271_BOOL,aux3272_BOOL,aux3273_BOOL],aux3274_BOOL);
constraint int_lin_eq([-1,1,1],[aux3275,6,s_00002],0);
constraint int_lt_reif(s_00004,aux3275,aux3276_BOOL);
constraint int_le_reif(s_00002, s_00004,aux3277_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux3278_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux3279_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux3276_BOOL,aux3277_BOOL,aux3278_BOOL,aux3279_BOOL],aux3280_BOOL);
constraint int_lin_eq([-1,1,1],[aux3281,2,s_00007],0);
constraint int_lt_reif(s_00004,aux3281,aux3282_BOOL);
constraint int_le_reif(s_00007, s_00004,aux3283_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux3284_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux3285_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux3282_BOOL,aux3283_BOOL,aux3284_BOOL,aux3285_BOOL],aux3286_BOOL);
constraint int_lin_eq([-1,1,1],[aux3287,4,s_00006],0);
constraint int_lt_reif(s_00004,aux3287,aux3288_BOOL);
constraint int_le_reif(s_00006, s_00004,aux3289_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux3290_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux3291_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux3288_BOOL,aux3289_BOOL,aux3290_BOOL,aux3291_BOOL],aux3292_BOOL);
constraint int_lin_eq([-1,1,1],[aux3293,2,s_00008],0);
constraint int_lt_reif(s_00004,aux3293,aux3294_BOOL);
constraint int_le_reif(s_00008, s_00004,aux3295_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux3296_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux3297_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux3294_BOOL,aux3295_BOOL,aux3296_BOOL,aux3297_BOOL],aux3298_BOOL);
constraint int_lin_eq([-1,1,1],[aux3299,2,s_00009],0);
constraint int_lt_reif(s_00004,aux3299,aux3300_BOOL);
constraint int_le_reif(s_00009, s_00004,aux3301_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux3302_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux3303_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux3300_BOOL,aux3301_BOOL,aux3302_BOOL,aux3303_BOOL],aux3304_BOOL);
constraint int_lin_eq([-1,1,1],[aux3305,1,s_00010],0);
constraint int_lt_reif(s_00004,aux3305,aux3306_BOOL);
constraint int_le_reif(s_00010, s_00004,aux3307_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux3308_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux3309_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux3306_BOOL,aux3307_BOOL,aux3308_BOOL,aux3309_BOOL],aux3310_BOOL);
constraint int_lin_eq([-1,1,1],[aux3311,2,s_00011],0);
constraint int_lt_reif(s_00004,aux3311,aux3312_BOOL);
constraint int_le_reif(s_00011, s_00004,aux3313_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux3314_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux3315_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux3312_BOOL,aux3313_BOOL,aux3314_BOOL,aux3315_BOOL],aux3316_BOOL);
constraint int_lin_eq([-1,1,1],[aux3317,3,s_00012],0);
constraint int_lt_reif(s_00004,aux3317,aux3318_BOOL);
constraint int_le_reif(s_00012, s_00004,aux3319_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux3320_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux3321_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux3318_BOOL,aux3319_BOOL,aux3320_BOOL,aux3321_BOOL],aux3322_BOOL);
constraint int_lin_eq([-1,1,1],[aux3323,3,s_00013],0);
constraint int_lt_reif(s_00004,aux3323,aux3324_BOOL);
constraint int_le_reif(s_00013, s_00004,aux3325_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux3326_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux3327_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux3324_BOOL,aux3325_BOOL,aux3326_BOOL,aux3327_BOOL],aux3328_BOOL);
constraint int_lin_eq([-1,1,1],[aux3329,3,s_00014],0);
constraint int_lt_reif(s_00004,aux3329,aux3330_BOOL);
constraint int_le_reif(s_00014, s_00004,aux3331_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux3332_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux3333_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux3330_BOOL,aux3331_BOOL,aux3332_BOOL,aux3333_BOOL],aux3334_BOOL);
constraint int_lin_eq([-1,1,1],[aux3335,2,s_00004],0);
constraint int_lt_reif(s_00004,aux3335,aux3336_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux3337_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux3336_BOOL,aux3337_BOOL],aux3338_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux3262_INTEGER,aux3268_INTEGER,aux3274_INTEGER,aux3280_INTEGER,aux3286_INTEGER,aux3292_INTEGER,aux3298_INTEGER,aux3304_INTEGER,aux3310_INTEGER,aux3316_INTEGER,aux3322_INTEGER,aux3328_INTEGER,aux3334_INTEGER,aux3338_INTEGER,1],0,aux3339_BOOL);
constraint int_lin_eq([-1,1,1],[aux3340,1,s_00003],0);
constraint int_lt_reif(s_00001,aux3340,aux3341_BOOL);
constraint int_le_reif(s_00003, s_00001,aux3342_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux3343_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux3344_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux3341_BOOL,aux3342_BOOL,aux3343_BOOL,aux3344_BOOL],aux3345_BOOL);
constraint int_lin_eq([-1,1,1],[aux3346,2,s_00004],0);
constraint int_lt_reif(s_00001,aux3346,aux3347_BOOL);
constraint int_le_reif(s_00004, s_00001,aux3348_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux3349_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux3350_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux3347_BOOL,aux3348_BOOL,aux3349_BOOL,aux3350_BOOL],aux3351_BOOL);
constraint int_lin_eq([-1,1,1],[aux3352,1,s_00005],0);
constraint int_lt_reif(s_00001,aux3352,aux3353_BOOL);
constraint int_le_reif(s_00005, s_00001,aux3354_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux3355_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux3356_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux3353_BOOL,aux3354_BOOL,aux3355_BOOL,aux3356_BOOL],aux3357_BOOL);
constraint int_lin_eq([-1,1,1],[aux3358,6,s_00002],0);
constraint int_lt_reif(s_00001,aux3358,aux3359_BOOL);
constraint int_le_reif(s_00002, s_00001,aux3360_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux3361_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux3362_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux3359_BOOL,aux3360_BOOL,aux3361_BOOL,aux3362_BOOL],aux3363_BOOL);
constraint int_lin_eq([-1,1,1],[aux3364,2,s_00007],0);
constraint int_lt_reif(s_00001,aux3364,aux3365_BOOL);
constraint int_le_reif(s_00007, s_00001,aux3366_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux3367_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux3368_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux3365_BOOL,aux3366_BOOL,aux3367_BOOL,aux3368_BOOL],aux3369_BOOL);
constraint int_lin_eq([-1,1,1],[aux3370,4,s_00006],0);
constraint int_lt_reif(s_00001,aux3370,aux3371_BOOL);
constraint int_le_reif(s_00006, s_00001,aux3372_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux3373_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux3374_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux3371_BOOL,aux3372_BOOL,aux3373_BOOL,aux3374_BOOL],aux3375_BOOL);
constraint int_lin_eq([-1,1,1],[aux3376,2,s_00008],0);
constraint int_lt_reif(s_00001,aux3376,aux3377_BOOL);
constraint int_le_reif(s_00008, s_00001,aux3378_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux3379_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux3380_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux3377_BOOL,aux3378_BOOL,aux3379_BOOL,aux3380_BOOL],aux3381_BOOL);
constraint int_lin_eq([-1,1,1],[aux3382,2,s_00009],0);
constraint int_lt_reif(s_00001,aux3382,aux3383_BOOL);
constraint int_le_reif(s_00009, s_00001,aux3384_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux3385_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux3386_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux3383_BOOL,aux3384_BOOL,aux3385_BOOL,aux3386_BOOL],aux3387_BOOL);
constraint int_lin_eq([-1,1,1],[aux3388,1,s_00010],0);
constraint int_lt_reif(s_00001,aux3388,aux3389_BOOL);
constraint int_le_reif(s_00010, s_00001,aux3390_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux3391_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux3392_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux3389_BOOL,aux3390_BOOL,aux3391_BOOL,aux3392_BOOL],aux3393_BOOL);
constraint int_lin_eq([-1,1,1],[aux3394,2,s_00011],0);
constraint int_lt_reif(s_00001,aux3394,aux3395_BOOL);
constraint int_le_reif(s_00011, s_00001,aux3396_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux3397_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux3398_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux3395_BOOL,aux3396_BOOL,aux3397_BOOL,aux3398_BOOL],aux3399_BOOL);
constraint int_lin_eq([-1,1,1],[aux3400,3,s_00012],0);
constraint int_lt_reif(s_00001,aux3400,aux3401_BOOL);
constraint int_le_reif(s_00012, s_00001,aux3402_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux3403_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux3404_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux3401_BOOL,aux3402_BOOL,aux3403_BOOL,aux3404_BOOL],aux3405_BOOL);
constraint int_lin_eq([-1,1,1],[aux3406,3,s_00013],0);
constraint int_lt_reif(s_00001,aux3406,aux3407_BOOL);
constraint int_le_reif(s_00013, s_00001,aux3408_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux3409_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux3410_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux3407_BOOL,aux3408_BOOL,aux3409_BOOL,aux3410_BOOL],aux3411_BOOL);
constraint int_lin_eq([-1,1,1],[aux3412,3,s_00014],0);
constraint int_lt_reif(s_00001,aux3412,aux3413_BOOL);
constraint int_le_reif(s_00014, s_00001,aux3414_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux3415_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux3416_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux3413_BOOL,aux3414_BOOL,aux3415_BOOL,aux3416_BOOL],aux3417_BOOL);
constraint int_lin_eq([-1,1,1],[aux3418,2,s_00001],0);
constraint int_lt_reif(s_00001,aux3418,aux3419_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux3420_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux3419_BOOL,aux3420_BOOL],aux3421_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux3345_INTEGER,aux3351_INTEGER,aux3357_INTEGER,aux3363_INTEGER,aux3369_INTEGER,aux3375_INTEGER,aux3381_INTEGER,aux3387_INTEGER,aux3393_INTEGER,aux3399_INTEGER,aux3405_INTEGER,aux3411_INTEGER,aux3417_INTEGER,aux3421_INTEGER,1],0,aux3422_BOOL);
constraint int_lin_eq([-1,1,1],[aux3423,2,s_00001],0);
constraint int_lt_reif(s_00006,aux3423,aux3424_BOOL);
constraint int_le_reif(s_00001, s_00006,aux3425_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux3426_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux3427_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux3424_BOOL,aux3425_BOOL,aux3426_BOOL,aux3427_BOOL],aux3428_BOOL);
constraint int_lin_eq([-1,1,1],[aux3429,1,s_00003],0);
constraint int_lt_reif(s_00006,aux3429,aux3430_BOOL);
constraint int_le_reif(s_00003, s_00006,aux3431_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux3432_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux3433_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux3430_BOOL,aux3431_BOOL,aux3432_BOOL,aux3433_BOOL],aux3434_BOOL);
constraint int_lin_eq([-1,1,1],[aux3435,2,s_00004],0);
constraint int_lt_reif(s_00006,aux3435,aux3436_BOOL);
constraint int_le_reif(s_00004, s_00006,aux3437_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux3438_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux3439_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux3436_BOOL,aux3437_BOOL,aux3438_BOOL,aux3439_BOOL],aux3440_BOOL);
constraint int_lin_eq([-1,1,1],[aux3441,1,s_00005],0);
constraint int_lt_reif(s_00006,aux3441,aux3442_BOOL);
constraint int_le_reif(s_00005, s_00006,aux3443_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux3444_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux3445_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux3442_BOOL,aux3443_BOOL,aux3444_BOOL,aux3445_BOOL],aux3446_BOOL);
constraint int_lin_eq([-1,1,1],[aux3447,6,s_00002],0);
constraint int_lt_reif(s_00006,aux3447,aux3448_BOOL);
constraint int_le_reif(s_00002, s_00006,aux3449_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux3450_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux3451_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux3448_BOOL,aux3449_BOOL,aux3450_BOOL,aux3451_BOOL],aux3452_BOOL);
constraint int_lin_eq([-1,1,1],[aux3453,2,s_00007],0);
constraint int_lt_reif(s_00006,aux3453,aux3454_BOOL);
constraint int_le_reif(s_00007, s_00006,aux3455_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux3456_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux3457_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux3454_BOOL,aux3455_BOOL,aux3456_BOOL,aux3457_BOOL],aux3458_BOOL);
constraint int_lin_eq([-1,1,1],[aux3459,2,s_00008],0);
constraint int_lt_reif(s_00006,aux3459,aux3460_BOOL);
constraint int_le_reif(s_00008, s_00006,aux3461_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux3462_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux3463_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux3460_BOOL,aux3461_BOOL,aux3462_BOOL,aux3463_BOOL],aux3464_BOOL);
constraint int_lin_eq([-1,1,1],[aux3465,2,s_00009],0);
constraint int_lt_reif(s_00006,aux3465,aux3466_BOOL);
constraint int_le_reif(s_00009, s_00006,aux3467_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux3468_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux3469_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux3466_BOOL,aux3467_BOOL,aux3468_BOOL,aux3469_BOOL],aux3470_BOOL);
constraint int_lin_eq([-1,1,1],[aux3471,1,s_00010],0);
constraint int_lt_reif(s_00006,aux3471,aux3472_BOOL);
constraint int_le_reif(s_00010, s_00006,aux3473_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux3474_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux3475_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux3472_BOOL,aux3473_BOOL,aux3474_BOOL,aux3475_BOOL],aux3476_BOOL);
constraint int_lin_eq([-1,1,1],[aux3477,2,s_00011],0);
constraint int_lt_reif(s_00006,aux3477,aux3478_BOOL);
constraint int_le_reif(s_00011, s_00006,aux3479_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux3480_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux3481_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux3478_BOOL,aux3479_BOOL,aux3480_BOOL,aux3481_BOOL],aux3482_BOOL);
constraint int_lin_eq([-1,1,1],[aux3483,3,s_00012],0);
constraint int_lt_reif(s_00006,aux3483,aux3484_BOOL);
constraint int_le_reif(s_00012, s_00006,aux3485_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux3486_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux3487_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux3484_BOOL,aux3485_BOOL,aux3486_BOOL,aux3487_BOOL],aux3488_BOOL);
constraint int_lin_eq([-1,1,1],[aux3489,3,s_00013],0);
constraint int_lt_reif(s_00006,aux3489,aux3490_BOOL);
constraint int_le_reif(s_00013, s_00006,aux3491_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux3492_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux3493_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux3490_BOOL,aux3491_BOOL,aux3492_BOOL,aux3493_BOOL],aux3494_BOOL);
constraint int_lin_eq([-1,1,1],[aux3495,3,s_00014],0);
constraint int_lt_reif(s_00006,aux3495,aux3496_BOOL);
constraint int_le_reif(s_00014, s_00006,aux3497_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux3498_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux3499_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux3496_BOOL,aux3497_BOOL,aux3498_BOOL,aux3499_BOOL],aux3500_BOOL);
constraint int_lin_eq([-1,1,1],[aux3501,4,s_00006],0);
constraint int_lt_reif(s_00006,aux3501,aux3502_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux3503_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux3502_BOOL,aux3503_BOOL],aux3504_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux3428_INTEGER,aux3434_INTEGER,aux3440_INTEGER,aux3446_INTEGER,aux3452_INTEGER,aux3458_INTEGER,aux3464_INTEGER,aux3470_INTEGER,aux3476_INTEGER,aux3482_INTEGER,aux3488_INTEGER,aux3494_INTEGER,aux3500_INTEGER,aux3504_INTEGER,1],0,aux3505_BOOL);
constraint int_lin_eq([-1,1,1],[aux3506,2,s_00001],0);
constraint int_lt_reif(s_00009,aux3506,aux3507_BOOL);
constraint int_le_reif(s_00001, s_00009,aux3508_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux3509_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux3510_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux3507_BOOL,aux3508_BOOL,aux3509_BOOL,aux3510_BOOL],aux3511_BOOL);
constraint int_lin_eq([-1,1,1],[aux3512,1,s_00003],0);
constraint int_lt_reif(s_00009,aux3512,aux3513_BOOL);
constraint int_le_reif(s_00003, s_00009,aux3514_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux3515_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux3516_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux3513_BOOL,aux3514_BOOL,aux3515_BOOL,aux3516_BOOL],aux3517_BOOL);
constraint int_lin_eq([-1,1,1],[aux3518,2,s_00004],0);
constraint int_lt_reif(s_00009,aux3518,aux3519_BOOL);
constraint int_le_reif(s_00004, s_00009,aux3520_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux3521_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux3522_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux3519_BOOL,aux3520_BOOL,aux3521_BOOL,aux3522_BOOL],aux3523_BOOL);
constraint int_lin_eq([-1,1,1],[aux3524,1,s_00005],0);
constraint int_lt_reif(s_00009,aux3524,aux3525_BOOL);
constraint int_le_reif(s_00005, s_00009,aux3526_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux3527_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux3528_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux3525_BOOL,aux3526_BOOL,aux3527_BOOL,aux3528_BOOL],aux3529_BOOL);
constraint int_lin_eq([-1,1,1],[aux3530,6,s_00002],0);
constraint int_lt_reif(s_00009,aux3530,aux3531_BOOL);
constraint int_le_reif(s_00002, s_00009,aux3532_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux3533_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux3534_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux3531_BOOL,aux3532_BOOL,aux3533_BOOL,aux3534_BOOL],aux3535_BOOL);
constraint int_lin_eq([-1,1,1],[aux3536,2,s_00007],0);
constraint int_lt_reif(s_00009,aux3536,aux3537_BOOL);
constraint int_le_reif(s_00007, s_00009,aux3538_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux3539_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux3540_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux3537_BOOL,aux3538_BOOL,aux3539_BOOL,aux3540_BOOL],aux3541_BOOL);
constraint int_lin_eq([-1,1,1],[aux3542,4,s_00006],0);
constraint int_lt_reif(s_00009,aux3542,aux3543_BOOL);
constraint int_le_reif(s_00006, s_00009,aux3544_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux3545_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux3546_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux3543_BOOL,aux3544_BOOL,aux3545_BOOL,aux3546_BOOL],aux3547_BOOL);
constraint int_lin_eq([-1,1,1],[aux3548,2,s_00008],0);
constraint int_lt_reif(s_00009,aux3548,aux3549_BOOL);
constraint int_le_reif(s_00008, s_00009,aux3550_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux3551_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux3552_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux3549_BOOL,aux3550_BOOL,aux3551_BOOL,aux3552_BOOL],aux3553_BOOL);
constraint int_lin_eq([-1,1,1],[aux3554,1,s_00010],0);
constraint int_lt_reif(s_00009,aux3554,aux3555_BOOL);
constraint int_le_reif(s_00010, s_00009,aux3556_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux3557_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux3558_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux3555_BOOL,aux3556_BOOL,aux3557_BOOL,aux3558_BOOL],aux3559_BOOL);
constraint int_lin_eq([-1,1,1],[aux3560,2,s_00011],0);
constraint int_lt_reif(s_00009,aux3560,aux3561_BOOL);
constraint int_le_reif(s_00011, s_00009,aux3562_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux3563_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux3564_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux3561_BOOL,aux3562_BOOL,aux3563_BOOL,aux3564_BOOL],aux3565_BOOL);
constraint int_lin_eq([-1,1,1],[aux3566,3,s_00012],0);
constraint int_lt_reif(s_00009,aux3566,aux3567_BOOL);
constraint int_le_reif(s_00012, s_00009,aux3568_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux3569_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux3570_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux3567_BOOL,aux3568_BOOL,aux3569_BOOL,aux3570_BOOL],aux3571_BOOL);
constraint int_lin_eq([-1,1,1],[aux3572,3,s_00013],0);
constraint int_lt_reif(s_00009,aux3572,aux3573_BOOL);
constraint int_le_reif(s_00013, s_00009,aux3574_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux3575_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux3576_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux3573_BOOL,aux3574_BOOL,aux3575_BOOL,aux3576_BOOL],aux3577_BOOL);
constraint int_lin_eq([-1,1,1],[aux3578,3,s_00014],0);
constraint int_lt_reif(s_00009,aux3578,aux3579_BOOL);
constraint int_le_reif(s_00014, s_00009,aux3580_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux3581_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux3582_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux3579_BOOL,aux3580_BOOL,aux3581_BOOL,aux3582_BOOL],aux3583_BOOL);
constraint int_lin_eq([-1,1,1],[aux3584,2,s_00009],0);
constraint int_lt_reif(s_00009,aux3584,aux3585_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux3586_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux3585_BOOL,aux3586_BOOL],aux3587_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux3511_INTEGER,aux3517_INTEGER,aux3523_INTEGER,aux3529_INTEGER,aux3535_INTEGER,aux3541_INTEGER,aux3547_INTEGER,aux3553_INTEGER,aux3559_INTEGER,aux3565_INTEGER,aux3571_INTEGER,aux3577_INTEGER,aux3583_INTEGER,aux3587_INTEGER,1],0,aux3588_BOOL);
constraint int_lin_eq([-1,1,1],[aux3589,2,s_00001],0);
constraint int_lt_reif(s_00014,aux3589,aux3590_BOOL);
constraint int_le_reif(s_00001, s_00014,aux3591_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux3592_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux3593_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux3590_BOOL,aux3591_BOOL,aux3592_BOOL,aux3593_BOOL],aux3594_BOOL);
constraint int_lin_eq([-1,1,1],[aux3595,1,s_00003],0);
constraint int_lt_reif(s_00014,aux3595,aux3596_BOOL);
constraint int_le_reif(s_00003, s_00014,aux3597_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux3598_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux3599_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux3596_BOOL,aux3597_BOOL,aux3598_BOOL,aux3599_BOOL],aux3600_BOOL);
constraint int_lin_eq([-1,1,1],[aux3601,2,s_00004],0);
constraint int_lt_reif(s_00014,aux3601,aux3602_BOOL);
constraint int_le_reif(s_00004, s_00014,aux3603_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux3604_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux3605_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux3602_BOOL,aux3603_BOOL,aux3604_BOOL,aux3605_BOOL],aux3606_BOOL);
constraint int_lin_eq([-1,1,1],[aux3607,1,s_00005],0);
constraint int_lt_reif(s_00014,aux3607,aux3608_BOOL);
constraint int_le_reif(s_00005, s_00014,aux3609_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux3610_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux3611_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux3608_BOOL,aux3609_BOOL,aux3610_BOOL,aux3611_BOOL],aux3612_BOOL);
constraint int_lin_eq([-1,1,1],[aux3613,6,s_00002],0);
constraint int_lt_reif(s_00014,aux3613,aux3614_BOOL);
constraint int_le_reif(s_00002, s_00014,aux3615_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux3616_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux3617_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux3614_BOOL,aux3615_BOOL,aux3616_BOOL,aux3617_BOOL],aux3618_BOOL);
constraint int_lin_eq([-1,1,1],[aux3619,2,s_00007],0);
constraint int_lt_reif(s_00014,aux3619,aux3620_BOOL);
constraint int_le_reif(s_00007, s_00014,aux3621_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux3622_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux3623_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux3620_BOOL,aux3621_BOOL,aux3622_BOOL,aux3623_BOOL],aux3624_BOOL);
constraint int_lin_eq([-1,1,1],[aux3625,4,s_00006],0);
constraint int_lt_reif(s_00014,aux3625,aux3626_BOOL);
constraint int_le_reif(s_00006, s_00014,aux3627_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux3628_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux3629_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux3626_BOOL,aux3627_BOOL,aux3628_BOOL,aux3629_BOOL],aux3630_BOOL);
constraint int_lin_eq([-1,1,1],[aux3631,2,s_00008],0);
constraint int_lt_reif(s_00014,aux3631,aux3632_BOOL);
constraint int_le_reif(s_00008, s_00014,aux3633_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux3634_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux3635_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux3632_BOOL,aux3633_BOOL,aux3634_BOOL,aux3635_BOOL],aux3636_BOOL);
constraint int_lin_eq([-1,1,1],[aux3637,2,s_00009],0);
constraint int_lt_reif(s_00014,aux3637,aux3638_BOOL);
constraint int_le_reif(s_00009, s_00014,aux3639_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux3640_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux3641_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux3638_BOOL,aux3639_BOOL,aux3640_BOOL,aux3641_BOOL],aux3642_BOOL);
constraint int_lin_eq([-1,1,1],[aux3643,1,s_00010],0);
constraint int_lt_reif(s_00014,aux3643,aux3644_BOOL);
constraint int_le_reif(s_00010, s_00014,aux3645_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux3646_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux3647_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux3644_BOOL,aux3645_BOOL,aux3646_BOOL,aux3647_BOOL],aux3648_BOOL);
constraint int_lin_eq([-1,1,1],[aux3649,2,s_00011],0);
constraint int_lt_reif(s_00014,aux3649,aux3650_BOOL);
constraint int_le_reif(s_00011, s_00014,aux3651_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux3652_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux3653_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux3650_BOOL,aux3651_BOOL,aux3652_BOOL,aux3653_BOOL],aux3654_BOOL);
constraint int_lin_eq([-1,1,1],[aux3655,3,s_00012],0);
constraint int_lt_reif(s_00014,aux3655,aux3656_BOOL);
constraint int_le_reif(s_00012, s_00014,aux3657_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux3658_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux3659_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux3656_BOOL,aux3657_BOOL,aux3658_BOOL,aux3659_BOOL],aux3660_BOOL);
constraint int_lin_eq([-1,1,1],[aux3661,3,s_00013],0);
constraint int_lt_reif(s_00014,aux3661,aux3662_BOOL);
constraint int_le_reif(s_00013, s_00014,aux3663_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux3664_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux3665_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux3662_BOOL,aux3663_BOOL,aux3664_BOOL,aux3665_BOOL],aux3666_BOOL);
constraint int_lin_eq([-1,1,1],[aux3667,3,s_00014],0);
constraint int_lt_reif(s_00014,aux3667,aux3668_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux3669_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux3668_BOOL,aux3669_BOOL],aux3670_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux3594_INTEGER,aux3600_INTEGER,aux3606_INTEGER,aux3612_INTEGER,aux3618_INTEGER,aux3624_INTEGER,aux3630_INTEGER,aux3636_INTEGER,aux3642_INTEGER,aux3648_INTEGER,aux3654_INTEGER,aux3660_INTEGER,aux3666_INTEGER,aux3670_INTEGER,1],0,aux3671_BOOL);
constraint int_lin_eq([-1,1,1],[aux3672,2,s_00001],0);
constraint int_lt_reif(s_00011,aux3672,aux3673_BOOL);
constraint int_le_reif(s_00001, s_00011,aux3674_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux3675_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux3676_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux3673_BOOL,aux3674_BOOL,aux3675_BOOL,aux3676_BOOL],aux3677_BOOL);
constraint int_lin_eq([-1,1,1],[aux3678,1,s_00003],0);
constraint int_lt_reif(s_00011,aux3678,aux3679_BOOL);
constraint int_le_reif(s_00003, s_00011,aux3680_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux3681_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux3682_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux3679_BOOL,aux3680_BOOL,aux3681_BOOL,aux3682_BOOL],aux3683_BOOL);
constraint int_lin_eq([-1,1,1],[aux3684,2,s_00004],0);
constraint int_lt_reif(s_00011,aux3684,aux3685_BOOL);
constraint int_le_reif(s_00004, s_00011,aux3686_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux3687_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux3688_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux3685_BOOL,aux3686_BOOL,aux3687_BOOL,aux3688_BOOL],aux3689_BOOL);
constraint int_lin_eq([-1,1,1],[aux3690,1,s_00005],0);
constraint int_lt_reif(s_00011,aux3690,aux3691_BOOL);
constraint int_le_reif(s_00005, s_00011,aux3692_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux3693_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux3694_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux3691_BOOL,aux3692_BOOL,aux3693_BOOL,aux3694_BOOL],aux3695_BOOL);
constraint int_lin_eq([-1,1,1],[aux3696,6,s_00002],0);
constraint int_lt_reif(s_00011,aux3696,aux3697_BOOL);
constraint int_le_reif(s_00002, s_00011,aux3698_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux3699_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux3700_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux3697_BOOL,aux3698_BOOL,aux3699_BOOL,aux3700_BOOL],aux3701_BOOL);
constraint int_lin_eq([-1,1,1],[aux3702,2,s_00007],0);
constraint int_lt_reif(s_00011,aux3702,aux3703_BOOL);
constraint int_le_reif(s_00007, s_00011,aux3704_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux3705_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux3706_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux3703_BOOL,aux3704_BOOL,aux3705_BOOL,aux3706_BOOL],aux3707_BOOL);
constraint int_lin_eq([-1,1,1],[aux3708,4,s_00006],0);
constraint int_lt_reif(s_00011,aux3708,aux3709_BOOL);
constraint int_le_reif(s_00006, s_00011,aux3710_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux3711_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux3712_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux3709_BOOL,aux3710_BOOL,aux3711_BOOL,aux3712_BOOL],aux3713_BOOL);
constraint int_lin_eq([-1,1,1],[aux3714,2,s_00008],0);
constraint int_lt_reif(s_00011,aux3714,aux3715_BOOL);
constraint int_le_reif(s_00008, s_00011,aux3716_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux3717_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux3718_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux3715_BOOL,aux3716_BOOL,aux3717_BOOL,aux3718_BOOL],aux3719_BOOL);
constraint int_lin_eq([-1,1,1],[aux3720,2,s_00009],0);
constraint int_lt_reif(s_00011,aux3720,aux3721_BOOL);
constraint int_le_reif(s_00009, s_00011,aux3722_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux3723_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux3724_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux3721_BOOL,aux3722_BOOL,aux3723_BOOL,aux3724_BOOL],aux3725_BOOL);
constraint int_lin_eq([-1,1,1],[aux3726,1,s_00010],0);
constraint int_lt_reif(s_00011,aux3726,aux3727_BOOL);
constraint int_le_reif(s_00010, s_00011,aux3728_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux3729_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux3730_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux3727_BOOL,aux3728_BOOL,aux3729_BOOL,aux3730_BOOL],aux3731_BOOL);
constraint int_lin_eq([-1,1,1],[aux3732,3,s_00012],0);
constraint int_lt_reif(s_00011,aux3732,aux3733_BOOL);
constraint int_le_reif(s_00012, s_00011,aux3734_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux3735_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux3736_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux3733_BOOL,aux3734_BOOL,aux3735_BOOL,aux3736_BOOL],aux3737_BOOL);
constraint int_lin_eq([-1,1,1],[aux3738,3,s_00013],0);
constraint int_lt_reif(s_00011,aux3738,aux3739_BOOL);
constraint int_le_reif(s_00013, s_00011,aux3740_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux3741_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux3742_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux3739_BOOL,aux3740_BOOL,aux3741_BOOL,aux3742_BOOL],aux3743_BOOL);
constraint int_lin_eq([-1,1,1],[aux3744,3,s_00014],0);
constraint int_lt_reif(s_00011,aux3744,aux3745_BOOL);
constraint int_le_reif(s_00014, s_00011,aux3746_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux3747_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux3748_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux3745_BOOL,aux3746_BOOL,aux3747_BOOL,aux3748_BOOL],aux3749_BOOL);
constraint int_lin_eq([-1,1,1],[aux3750,2,s_00011],0);
constraint int_lt_reif(s_00011,aux3750,aux3751_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux3752_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux3751_BOOL,aux3752_BOOL],aux3753_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux3677_INTEGER,aux3683_INTEGER,aux3689_INTEGER,aux3695_INTEGER,aux3701_INTEGER,aux3707_INTEGER,aux3713_INTEGER,aux3719_INTEGER,aux3725_INTEGER,aux3731_INTEGER,aux3737_INTEGER,aux3743_INTEGER,aux3749_INTEGER,aux3753_INTEGER,1],0,aux3754_BOOL);
constraint array_bool_and([aux2675_BOOL,aux2758_BOOL,aux2841_BOOL,aux2924_BOOL,aux3007_BOOL,aux3090_BOOL,aux3173_BOOL,aux3256_BOOL,aux3339_BOOL,aux3422_BOOL,aux3505_BOOL,aux3588_BOOL,aux3671_BOOL,aux3754_BOOL],aux3755_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[TWorkers_00004_00001_INTEGER,TWorkers_00004_00002_INTEGER,TWorkers_00004_00003_INTEGER,TWorkers_00004_00004_INTEGER,TWorkers_00004_00005_INTEGER,TWorkers_00004_00006_INTEGER,TWorkers_00004_00007_INTEGER,TWorkers_00004_00008_INTEGER,TWorkers_00004_00009_INTEGER,TWorkers_00004_00010_INTEGER,TWorkers_00004_00011_INTEGER,TWorkers_00004_00012_INTEGER,TWorkers_00004_00013_INTEGER,TWorkers_00004_00014_INTEGER,1],0,aux3756_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux3757_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux3758_BOOL);
constraint int_lin_eq([-1,1,1],[aux3759,1,s_00010],0);
constraint int_lt_reif(s_00012,aux3759,aux3760_BOOL);
constraint int_le_reif(s_00010, s_00012,aux3761_BOOL);
constraint array_bool_and([aux3757_BOOL,aux3758_BOOL,w_00004_00010_BOOL,aux3760_BOOL,aux3761_BOOL],aux3762_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux3763_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux3764_BOOL);
constraint int_lin_eq([-1,1,1],[aux3765,2,s_00011],0);
constraint int_lt_reif(s_00012,aux3765,aux3766_BOOL);
constraint int_le_reif(s_00011, s_00012,aux3767_BOOL);
constraint array_bool_and([aux3763_BOOL,aux3764_BOOL,w_00004_00011_BOOL,aux3766_BOOL,aux3767_BOOL],aux3768_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux3769_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux3770_BOOL);
constraint int_lin_eq([-1,1,1],[aux3771,3,s_00013],0);
constraint int_lt_reif(s_00012,aux3771,aux3772_BOOL);
constraint int_le_reif(s_00013, s_00012,aux3773_BOOL);
constraint array_bool_and([aux3769_BOOL,aux3770_BOOL,w_00004_00013_BOOL,aux3772_BOOL,aux3773_BOOL],aux3774_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux3775_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux3776_BOOL);
constraint int_lin_eq([-1,1,1],[aux3777,3,s_00014],0);
constraint int_lt_reif(s_00012,aux3777,aux3778_BOOL);
constraint int_le_reif(s_00014, s_00012,aux3779_BOOL);
constraint array_bool_and([aux3775_BOOL,aux3776_BOOL,w_00004_00014_BOOL,aux3778_BOOL,aux3779_BOOL],aux3780_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux3781_BOOL);
constraint int_lin_eq([-1,1,1],[aux3782,3,s_00012],0);
constraint int_lt_reif(s_00012,aux3782,aux3783_BOOL);
constraint array_bool_and([aux3781_BOOL,w_00004_00012_BOOL,aux3783_BOOL],aux3784_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux3785_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux3786_BOOL);
constraint int_lin_eq([-1,1,1],[aux3787,2,s_00001],0);
constraint int_lt_reif(s_00012,aux3787,aux3788_BOOL);
constraint int_le_reif(s_00001, s_00012,aux3789_BOOL);
constraint array_bool_and([aux3785_BOOL,aux3786_BOOL,w_00004_00001_BOOL,aux3788_BOOL,aux3789_BOOL],aux3790_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux3791_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux3792_BOOL);
constraint int_lin_eq([-1,1,1],[aux3793,6,s_00002],0);
constraint int_lt_reif(s_00012,aux3793,aux3794_BOOL);
constraint int_le_reif(s_00002, s_00012,aux3795_BOOL);
constraint array_bool_and([aux3791_BOOL,aux3792_BOOL,w_00004_00002_BOOL,aux3794_BOOL,aux3795_BOOL],aux3796_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux3797_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux3798_BOOL);
constraint int_lin_eq([-1,1,1],[aux3799,1,s_00003],0);
constraint int_lt_reif(s_00012,aux3799,aux3800_BOOL);
constraint int_le_reif(s_00003, s_00012,aux3801_BOOL);
constraint array_bool_and([aux3797_BOOL,aux3798_BOOL,w_00004_00003_BOOL,aux3800_BOOL,aux3801_BOOL],aux3802_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux3803_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux3804_BOOL);
constraint int_lin_eq([-1,1,1],[aux3805,2,s_00004],0);
constraint int_lt_reif(s_00012,aux3805,aux3806_BOOL);
constraint int_le_reif(s_00004, s_00012,aux3807_BOOL);
constraint array_bool_and([aux3803_BOOL,aux3804_BOOL,w_00004_00004_BOOL,aux3806_BOOL,aux3807_BOOL],aux3808_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux3809_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux3810_BOOL);
constraint int_lin_eq([-1,1,1],[aux3811,1,s_00005],0);
constraint int_lt_reif(s_00012,aux3811,aux3812_BOOL);
constraint int_le_reif(s_00005, s_00012,aux3813_BOOL);
constraint array_bool_and([aux3809_BOOL,aux3810_BOOL,w_00004_00005_BOOL,aux3812_BOOL,aux3813_BOOL],aux3814_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux3815_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux3816_BOOL);
constraint int_lin_eq([-1,1,1],[aux3817,4,s_00006],0);
constraint int_lt_reif(s_00012,aux3817,aux3818_BOOL);
constraint int_le_reif(s_00006, s_00012,aux3819_BOOL);
constraint array_bool_and([aux3815_BOOL,aux3816_BOOL,w_00004_00006_BOOL,aux3818_BOOL,aux3819_BOOL],aux3820_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux3821_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux3822_BOOL);
constraint int_lin_eq([-1,1,1],[aux3823,2,s_00007],0);
constraint int_lt_reif(s_00012,aux3823,aux3824_BOOL);
constraint int_le_reif(s_00007, s_00012,aux3825_BOOL);
constraint array_bool_and([aux3821_BOOL,aux3822_BOOL,w_00004_00007_BOOL,aux3824_BOOL,aux3825_BOOL],aux3826_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux3827_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux3828_BOOL);
constraint int_lin_eq([-1,1,1],[aux3829,2,s_00008],0);
constraint int_lt_reif(s_00012,aux3829,aux3830_BOOL);
constraint int_le_reif(s_00008, s_00012,aux3831_BOOL);
constraint array_bool_and([aux3827_BOOL,aux3828_BOOL,w_00004_00008_BOOL,aux3830_BOOL,aux3831_BOOL],aux3832_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux3833_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux3834_BOOL);
constraint int_lin_eq([-1,1,1],[aux3835,2,s_00009],0);
constraint int_lt_reif(s_00012,aux3835,aux3836_BOOL);
constraint int_le_reif(s_00009, s_00012,aux3837_BOOL);
constraint array_bool_and([aux3833_BOOL,aux3834_BOOL,w_00004_00009_BOOL,aux3836_BOOL,aux3837_BOOL],aux3838_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux3762_INTEGER,aux3768_INTEGER,aux3774_INTEGER,aux3780_INTEGER,aux3784_INTEGER,aux3790_INTEGER,aux3796_INTEGER,aux3802_INTEGER,aux3808_INTEGER,aux3814_INTEGER,aux3820_INTEGER,aux3826_INTEGER,aux3832_INTEGER,aux3838_INTEGER,1],0,aux3839_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux3840_BOOL);
constraint int_lin_eq([-1,1,1],[aux3841,2,s_00007],0);
constraint int_lt_reif(s_00007,aux3841,aux3842_BOOL);
constraint array_bool_and([aux3840_BOOL,w_00004_00007_BOOL,aux3842_BOOL],aux3843_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux3844_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux3845_BOOL);
constraint int_lin_eq([-1,1,1],[aux3846,2,s_00001],0);
constraint int_lt_reif(s_00007,aux3846,aux3847_BOOL);
constraint int_le_reif(s_00001, s_00007,aux3848_BOOL);
constraint array_bool_and([aux3844_BOOL,aux3845_BOOL,w_00004_00001_BOOL,aux3847_BOOL,aux3848_BOOL],aux3849_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux3850_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux3851_BOOL);
constraint int_lin_eq([-1,1,1],[aux3852,6,s_00002],0);
constraint int_lt_reif(s_00007,aux3852,aux3853_BOOL);
constraint int_le_reif(s_00002, s_00007,aux3854_BOOL);
constraint array_bool_and([aux3850_BOOL,aux3851_BOOL,w_00004_00002_BOOL,aux3853_BOOL,aux3854_BOOL],aux3855_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux3856_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux3857_BOOL);
constraint int_lin_eq([-1,1,1],[aux3858,1,s_00003],0);
constraint int_lt_reif(s_00007,aux3858,aux3859_BOOL);
constraint int_le_reif(s_00003, s_00007,aux3860_BOOL);
constraint array_bool_and([aux3856_BOOL,aux3857_BOOL,w_00004_00003_BOOL,aux3859_BOOL,aux3860_BOOL],aux3861_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux3862_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux3863_BOOL);
constraint int_lin_eq([-1,1,1],[aux3864,2,s_00004],0);
constraint int_lt_reif(s_00007,aux3864,aux3865_BOOL);
constraint int_le_reif(s_00004, s_00007,aux3866_BOOL);
constraint array_bool_and([aux3862_BOOL,aux3863_BOOL,w_00004_00004_BOOL,aux3865_BOOL,aux3866_BOOL],aux3867_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux3868_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux3869_BOOL);
constraint int_lin_eq([-1,1,1],[aux3870,1,s_00005],0);
constraint int_lt_reif(s_00007,aux3870,aux3871_BOOL);
constraint int_le_reif(s_00005, s_00007,aux3872_BOOL);
constraint array_bool_and([aux3868_BOOL,aux3869_BOOL,w_00004_00005_BOOL,aux3871_BOOL,aux3872_BOOL],aux3873_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux3874_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux3875_BOOL);
constraint int_lin_eq([-1,1,1],[aux3876,4,s_00006],0);
constraint int_lt_reif(s_00007,aux3876,aux3877_BOOL);
constraint int_le_reif(s_00006, s_00007,aux3878_BOOL);
constraint array_bool_and([aux3874_BOOL,aux3875_BOOL,w_00004_00006_BOOL,aux3877_BOOL,aux3878_BOOL],aux3879_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux3880_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux3881_BOOL);
constraint int_lin_eq([-1,1,1],[aux3882,2,s_00008],0);
constraint int_lt_reif(s_00007,aux3882,aux3883_BOOL);
constraint int_le_reif(s_00008, s_00007,aux3884_BOOL);
constraint array_bool_and([aux3880_BOOL,aux3881_BOOL,w_00004_00008_BOOL,aux3883_BOOL,aux3884_BOOL],aux3885_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux3886_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux3887_BOOL);
constraint int_lin_eq([-1,1,1],[aux3888,2,s_00009],0);
constraint int_lt_reif(s_00007,aux3888,aux3889_BOOL);
constraint int_le_reif(s_00009, s_00007,aux3890_BOOL);
constraint array_bool_and([aux3886_BOOL,aux3887_BOOL,w_00004_00009_BOOL,aux3889_BOOL,aux3890_BOOL],aux3891_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux3892_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux3893_BOOL);
constraint int_lin_eq([-1,1,1],[aux3894,1,s_00010],0);
constraint int_lt_reif(s_00007,aux3894,aux3895_BOOL);
constraint int_le_reif(s_00010, s_00007,aux3896_BOOL);
constraint array_bool_and([aux3892_BOOL,aux3893_BOOL,w_00004_00010_BOOL,aux3895_BOOL,aux3896_BOOL],aux3897_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux3898_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux3899_BOOL);
constraint int_lin_eq([-1,1,1],[aux3900,2,s_00011],0);
constraint int_lt_reif(s_00007,aux3900,aux3901_BOOL);
constraint int_le_reif(s_00011, s_00007,aux3902_BOOL);
constraint array_bool_and([aux3898_BOOL,aux3899_BOOL,w_00004_00011_BOOL,aux3901_BOOL,aux3902_BOOL],aux3903_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux3904_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux3905_BOOL);
constraint int_lin_eq([-1,1,1],[aux3906,3,s_00012],0);
constraint int_lt_reif(s_00007,aux3906,aux3907_BOOL);
constraint int_le_reif(s_00012, s_00007,aux3908_BOOL);
constraint array_bool_and([aux3904_BOOL,aux3905_BOOL,w_00004_00012_BOOL,aux3907_BOOL,aux3908_BOOL],aux3909_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux3910_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux3911_BOOL);
constraint int_lin_eq([-1,1,1],[aux3912,3,s_00013],0);
constraint int_lt_reif(s_00007,aux3912,aux3913_BOOL);
constraint int_le_reif(s_00013, s_00007,aux3914_BOOL);
constraint array_bool_and([aux3910_BOOL,aux3911_BOOL,w_00004_00013_BOOL,aux3913_BOOL,aux3914_BOOL],aux3915_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux3916_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux3917_BOOL);
constraint int_lin_eq([-1,1,1],[aux3918,3,s_00014],0);
constraint int_lt_reif(s_00007,aux3918,aux3919_BOOL);
constraint int_le_reif(s_00014, s_00007,aux3920_BOOL);
constraint array_bool_and([aux3916_BOOL,aux3917_BOOL,w_00004_00014_BOOL,aux3919_BOOL,aux3920_BOOL],aux3921_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux3843_INTEGER,aux3849_INTEGER,aux3855_INTEGER,aux3861_INTEGER,aux3867_INTEGER,aux3873_INTEGER,aux3879_INTEGER,aux3885_INTEGER,aux3891_INTEGER,aux3897_INTEGER,aux3903_INTEGER,aux3909_INTEGER,aux3915_INTEGER,aux3921_INTEGER,1],0,aux3922_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux3923_BOOL);
constraint int_lin_eq([-1,1,1],[aux3924,2,s_00008],0);
constraint int_lt_reif(s_00008,aux3924,aux3925_BOOL);
constraint array_bool_and([aux3923_BOOL,w_00004_00008_BOOL,aux3925_BOOL],aux3926_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux3927_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux3928_BOOL);
constraint int_lin_eq([-1,1,1],[aux3929,2,s_00001],0);
constraint int_lt_reif(s_00008,aux3929,aux3930_BOOL);
constraint int_le_reif(s_00001, s_00008,aux3931_BOOL);
constraint array_bool_and([aux3927_BOOL,aux3928_BOOL,w_00004_00001_BOOL,aux3930_BOOL,aux3931_BOOL],aux3932_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux3933_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux3934_BOOL);
constraint int_lin_eq([-1,1,1],[aux3935,6,s_00002],0);
constraint int_lt_reif(s_00008,aux3935,aux3936_BOOL);
constraint int_le_reif(s_00002, s_00008,aux3937_BOOL);
constraint array_bool_and([aux3933_BOOL,aux3934_BOOL,w_00004_00002_BOOL,aux3936_BOOL,aux3937_BOOL],aux3938_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux3939_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux3940_BOOL);
constraint int_lin_eq([-1,1,1],[aux3941,1,s_00003],0);
constraint int_lt_reif(s_00008,aux3941,aux3942_BOOL);
constraint int_le_reif(s_00003, s_00008,aux3943_BOOL);
constraint array_bool_and([aux3939_BOOL,aux3940_BOOL,w_00004_00003_BOOL,aux3942_BOOL,aux3943_BOOL],aux3944_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux3945_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux3946_BOOL);
constraint int_lin_eq([-1,1,1],[aux3947,2,s_00004],0);
constraint int_lt_reif(s_00008,aux3947,aux3948_BOOL);
constraint int_le_reif(s_00004, s_00008,aux3949_BOOL);
constraint array_bool_and([aux3945_BOOL,aux3946_BOOL,w_00004_00004_BOOL,aux3948_BOOL,aux3949_BOOL],aux3950_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux3951_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux3952_BOOL);
constraint int_lin_eq([-1,1,1],[aux3953,1,s_00005],0);
constraint int_lt_reif(s_00008,aux3953,aux3954_BOOL);
constraint int_le_reif(s_00005, s_00008,aux3955_BOOL);
constraint array_bool_and([aux3951_BOOL,aux3952_BOOL,w_00004_00005_BOOL,aux3954_BOOL,aux3955_BOOL],aux3956_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux3957_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux3958_BOOL);
constraint int_lin_eq([-1,1,1],[aux3959,4,s_00006],0);
constraint int_lt_reif(s_00008,aux3959,aux3960_BOOL);
constraint int_le_reif(s_00006, s_00008,aux3961_BOOL);
constraint array_bool_and([aux3957_BOOL,aux3958_BOOL,w_00004_00006_BOOL,aux3960_BOOL,aux3961_BOOL],aux3962_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux3963_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux3964_BOOL);
constraint int_lin_eq([-1,1,1],[aux3965,2,s_00007],0);
constraint int_lt_reif(s_00008,aux3965,aux3966_BOOL);
constraint int_le_reif(s_00007, s_00008,aux3967_BOOL);
constraint array_bool_and([aux3963_BOOL,aux3964_BOOL,w_00004_00007_BOOL,aux3966_BOOL,aux3967_BOOL],aux3968_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux3969_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux3970_BOOL);
constraint int_lin_eq([-1,1,1],[aux3971,2,s_00009],0);
constraint int_lt_reif(s_00008,aux3971,aux3972_BOOL);
constraint int_le_reif(s_00009, s_00008,aux3973_BOOL);
constraint array_bool_and([aux3969_BOOL,aux3970_BOOL,w_00004_00009_BOOL,aux3972_BOOL,aux3973_BOOL],aux3974_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux3975_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux3976_BOOL);
constraint int_lin_eq([-1,1,1],[aux3977,1,s_00010],0);
constraint int_lt_reif(s_00008,aux3977,aux3978_BOOL);
constraint int_le_reif(s_00010, s_00008,aux3979_BOOL);
constraint array_bool_and([aux3975_BOOL,aux3976_BOOL,w_00004_00010_BOOL,aux3978_BOOL,aux3979_BOOL],aux3980_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux3981_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux3982_BOOL);
constraint int_lin_eq([-1,1,1],[aux3983,2,s_00011],0);
constraint int_lt_reif(s_00008,aux3983,aux3984_BOOL);
constraint int_le_reif(s_00011, s_00008,aux3985_BOOL);
constraint array_bool_and([aux3981_BOOL,aux3982_BOOL,w_00004_00011_BOOL,aux3984_BOOL,aux3985_BOOL],aux3986_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux3987_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux3988_BOOL);
constraint int_lin_eq([-1,1,1],[aux3989,3,s_00012],0);
constraint int_lt_reif(s_00008,aux3989,aux3990_BOOL);
constraint int_le_reif(s_00012, s_00008,aux3991_BOOL);
constraint array_bool_and([aux3987_BOOL,aux3988_BOOL,w_00004_00012_BOOL,aux3990_BOOL,aux3991_BOOL],aux3992_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux3993_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux3994_BOOL);
constraint int_lin_eq([-1,1,1],[aux3995,3,s_00013],0);
constraint int_lt_reif(s_00008,aux3995,aux3996_BOOL);
constraint int_le_reif(s_00013, s_00008,aux3997_BOOL);
constraint array_bool_and([aux3993_BOOL,aux3994_BOOL,w_00004_00013_BOOL,aux3996_BOOL,aux3997_BOOL],aux3998_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux3999_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux4000_BOOL);
constraint int_lin_eq([-1,1,1],[aux4001,3,s_00014],0);
constraint int_lt_reif(s_00008,aux4001,aux4002_BOOL);
constraint int_le_reif(s_00014, s_00008,aux4003_BOOL);
constraint array_bool_and([aux3999_BOOL,aux4000_BOOL,w_00004_00014_BOOL,aux4002_BOOL,aux4003_BOOL],aux4004_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux3926_INTEGER,aux3932_INTEGER,aux3938_INTEGER,aux3944_INTEGER,aux3950_INTEGER,aux3956_INTEGER,aux3962_INTEGER,aux3968_INTEGER,aux3974_INTEGER,aux3980_INTEGER,aux3986_INTEGER,aux3992_INTEGER,aux3998_INTEGER,aux4004_INTEGER,1],0,aux4005_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux4006_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux4007_BOOL);
constraint int_lin_eq([-1,1,1],[aux4008,1,s_00010],0);
constraint int_lt_reif(s_00014,aux4008,aux4009_BOOL);
constraint int_le_reif(s_00010, s_00014,aux4010_BOOL);
constraint array_bool_and([aux4006_BOOL,aux4007_BOOL,w_00004_00010_BOOL,aux4009_BOOL,aux4010_BOOL],aux4011_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux4012_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux4013_BOOL);
constraint int_lin_eq([-1,1,1],[aux4014,2,s_00011],0);
constraint int_lt_reif(s_00014,aux4014,aux4015_BOOL);
constraint int_le_reif(s_00011, s_00014,aux4016_BOOL);
constraint array_bool_and([aux4012_BOOL,aux4013_BOOL,w_00004_00011_BOOL,aux4015_BOOL,aux4016_BOOL],aux4017_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux4018_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux4019_BOOL);
constraint int_lin_eq([-1,1,1],[aux4020,3,s_00012],0);
constraint int_lt_reif(s_00014,aux4020,aux4021_BOOL);
constraint int_le_reif(s_00012, s_00014,aux4022_BOOL);
constraint array_bool_and([aux4018_BOOL,aux4019_BOOL,w_00004_00012_BOOL,aux4021_BOOL,aux4022_BOOL],aux4023_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux4024_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux4025_BOOL);
constraint int_lin_eq([-1,1,1],[aux4026,3,s_00013],0);
constraint int_lt_reif(s_00014,aux4026,aux4027_BOOL);
constraint int_le_reif(s_00013, s_00014,aux4028_BOOL);
constraint array_bool_and([aux4024_BOOL,aux4025_BOOL,w_00004_00013_BOOL,aux4027_BOOL,aux4028_BOOL],aux4029_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux4030_BOOL);
constraint int_lin_eq([-1,1,1],[aux4031,3,s_00014],0);
constraint int_lt_reif(s_00014,aux4031,aux4032_BOOL);
constraint array_bool_and([aux4030_BOOL,w_00004_00014_BOOL,aux4032_BOOL],aux4033_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux4034_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux4035_BOOL);
constraint int_lin_eq([-1,1,1],[aux4036,2,s_00001],0);
constraint int_lt_reif(s_00014,aux4036,aux4037_BOOL);
constraint int_le_reif(s_00001, s_00014,aux4038_BOOL);
constraint array_bool_and([aux4034_BOOL,aux4035_BOOL,w_00004_00001_BOOL,aux4037_BOOL,aux4038_BOOL],aux4039_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux4040_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux4041_BOOL);
constraint int_lin_eq([-1,1,1],[aux4042,6,s_00002],0);
constraint int_lt_reif(s_00014,aux4042,aux4043_BOOL);
constraint int_le_reif(s_00002, s_00014,aux4044_BOOL);
constraint array_bool_and([aux4040_BOOL,aux4041_BOOL,w_00004_00002_BOOL,aux4043_BOOL,aux4044_BOOL],aux4045_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux4046_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux4047_BOOL);
constraint int_lin_eq([-1,1,1],[aux4048,1,s_00003],0);
constraint int_lt_reif(s_00014,aux4048,aux4049_BOOL);
constraint int_le_reif(s_00003, s_00014,aux4050_BOOL);
constraint array_bool_and([aux4046_BOOL,aux4047_BOOL,w_00004_00003_BOOL,aux4049_BOOL,aux4050_BOOL],aux4051_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux4052_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux4053_BOOL);
constraint int_lin_eq([-1,1,1],[aux4054,2,s_00004],0);
constraint int_lt_reif(s_00014,aux4054,aux4055_BOOL);
constraint int_le_reif(s_00004, s_00014,aux4056_BOOL);
constraint array_bool_and([aux4052_BOOL,aux4053_BOOL,w_00004_00004_BOOL,aux4055_BOOL,aux4056_BOOL],aux4057_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux4058_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux4059_BOOL);
constraint int_lin_eq([-1,1,1],[aux4060,1,s_00005],0);
constraint int_lt_reif(s_00014,aux4060,aux4061_BOOL);
constraint int_le_reif(s_00005, s_00014,aux4062_BOOL);
constraint array_bool_and([aux4058_BOOL,aux4059_BOOL,w_00004_00005_BOOL,aux4061_BOOL,aux4062_BOOL],aux4063_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux4064_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux4065_BOOL);
constraint int_lin_eq([-1,1,1],[aux4066,4,s_00006],0);
constraint int_lt_reif(s_00014,aux4066,aux4067_BOOL);
constraint int_le_reif(s_00006, s_00014,aux4068_BOOL);
constraint array_bool_and([aux4064_BOOL,aux4065_BOOL,w_00004_00006_BOOL,aux4067_BOOL,aux4068_BOOL],aux4069_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux4070_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux4071_BOOL);
constraint int_lin_eq([-1,1,1],[aux4072,2,s_00007],0);
constraint int_lt_reif(s_00014,aux4072,aux4073_BOOL);
constraint int_le_reif(s_00007, s_00014,aux4074_BOOL);
constraint array_bool_and([aux4070_BOOL,aux4071_BOOL,w_00004_00007_BOOL,aux4073_BOOL,aux4074_BOOL],aux4075_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux4076_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux4077_BOOL);
constraint int_lin_eq([-1,1,1],[aux4078,2,s_00008],0);
constraint int_lt_reif(s_00014,aux4078,aux4079_BOOL);
constraint int_le_reif(s_00008, s_00014,aux4080_BOOL);
constraint array_bool_and([aux4076_BOOL,aux4077_BOOL,w_00004_00008_BOOL,aux4079_BOOL,aux4080_BOOL],aux4081_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux4082_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux4083_BOOL);
constraint int_lin_eq([-1,1,1],[aux4084,2,s_00009],0);
constraint int_lt_reif(s_00014,aux4084,aux4085_BOOL);
constraint int_le_reif(s_00009, s_00014,aux4086_BOOL);
constraint array_bool_and([aux4082_BOOL,aux4083_BOOL,w_00004_00009_BOOL,aux4085_BOOL,aux4086_BOOL],aux4087_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux4011_INTEGER,aux4017_INTEGER,aux4023_INTEGER,aux4029_INTEGER,aux4033_INTEGER,aux4039_INTEGER,aux4045_INTEGER,aux4051_INTEGER,aux4057_INTEGER,aux4063_INTEGER,aux4069_INTEGER,aux4075_INTEGER,aux4081_INTEGER,aux4087_INTEGER,1],0,aux4088_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux4089_BOOL);
constraint int_lin_eq([-1,1,1],[aux4090,2,s_00004],0);
constraint int_lt_reif(s_00004,aux4090,aux4091_BOOL);
constraint array_bool_and([aux4089_BOOL,w_00004_00004_BOOL,aux4091_BOOL],aux4092_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux4093_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux4094_BOOL);
constraint int_lin_eq([-1,1,1],[aux4095,2,s_00001],0);
constraint int_lt_reif(s_00004,aux4095,aux4096_BOOL);
constraint int_le_reif(s_00001, s_00004,aux4097_BOOL);
constraint array_bool_and([aux4093_BOOL,aux4094_BOOL,w_00004_00001_BOOL,aux4096_BOOL,aux4097_BOOL],aux4098_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux4099_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux4100_BOOL);
constraint int_lin_eq([-1,1,1],[aux4101,6,s_00002],0);
constraint int_lt_reif(s_00004,aux4101,aux4102_BOOL);
constraint int_le_reif(s_00002, s_00004,aux4103_BOOL);
constraint array_bool_and([aux4099_BOOL,aux4100_BOOL,w_00004_00002_BOOL,aux4102_BOOL,aux4103_BOOL],aux4104_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux4105_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux4106_BOOL);
constraint int_lin_eq([-1,1,1],[aux4107,1,s_00003],0);
constraint int_lt_reif(s_00004,aux4107,aux4108_BOOL);
constraint int_le_reif(s_00003, s_00004,aux4109_BOOL);
constraint array_bool_and([aux4105_BOOL,aux4106_BOOL,w_00004_00003_BOOL,aux4108_BOOL,aux4109_BOOL],aux4110_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux4111_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux4112_BOOL);
constraint int_lin_eq([-1,1,1],[aux4113,1,s_00005],0);
constraint int_lt_reif(s_00004,aux4113,aux4114_BOOL);
constraint int_le_reif(s_00005, s_00004,aux4115_BOOL);
constraint array_bool_and([aux4111_BOOL,aux4112_BOOL,w_00004_00005_BOOL,aux4114_BOOL,aux4115_BOOL],aux4116_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux4117_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux4118_BOOL);
constraint int_lin_eq([-1,1,1],[aux4119,4,s_00006],0);
constraint int_lt_reif(s_00004,aux4119,aux4120_BOOL);
constraint int_le_reif(s_00006, s_00004,aux4121_BOOL);
constraint array_bool_and([aux4117_BOOL,aux4118_BOOL,w_00004_00006_BOOL,aux4120_BOOL,aux4121_BOOL],aux4122_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux4123_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux4124_BOOL);
constraint int_lin_eq([-1,1,1],[aux4125,2,s_00007],0);
constraint int_lt_reif(s_00004,aux4125,aux4126_BOOL);
constraint int_le_reif(s_00007, s_00004,aux4127_BOOL);
constraint array_bool_and([aux4123_BOOL,aux4124_BOOL,w_00004_00007_BOOL,aux4126_BOOL,aux4127_BOOL],aux4128_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux4129_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux4130_BOOL);
constraint int_lin_eq([-1,1,1],[aux4131,2,s_00008],0);
constraint int_lt_reif(s_00004,aux4131,aux4132_BOOL);
constraint int_le_reif(s_00008, s_00004,aux4133_BOOL);
constraint array_bool_and([aux4129_BOOL,aux4130_BOOL,w_00004_00008_BOOL,aux4132_BOOL,aux4133_BOOL],aux4134_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux4135_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux4136_BOOL);
constraint int_lin_eq([-1,1,1],[aux4137,2,s_00009],0);
constraint int_lt_reif(s_00004,aux4137,aux4138_BOOL);
constraint int_le_reif(s_00009, s_00004,aux4139_BOOL);
constraint array_bool_and([aux4135_BOOL,aux4136_BOOL,w_00004_00009_BOOL,aux4138_BOOL,aux4139_BOOL],aux4140_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux4141_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux4142_BOOL);
constraint int_lin_eq([-1,1,1],[aux4143,1,s_00010],0);
constraint int_lt_reif(s_00004,aux4143,aux4144_BOOL);
constraint int_le_reif(s_00010, s_00004,aux4145_BOOL);
constraint array_bool_and([aux4141_BOOL,aux4142_BOOL,w_00004_00010_BOOL,aux4144_BOOL,aux4145_BOOL],aux4146_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux4147_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux4148_BOOL);
constraint int_lin_eq([-1,1,1],[aux4149,2,s_00011],0);
constraint int_lt_reif(s_00004,aux4149,aux4150_BOOL);
constraint int_le_reif(s_00011, s_00004,aux4151_BOOL);
constraint array_bool_and([aux4147_BOOL,aux4148_BOOL,w_00004_00011_BOOL,aux4150_BOOL,aux4151_BOOL],aux4152_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux4153_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux4154_BOOL);
constraint int_lin_eq([-1,1,1],[aux4155,3,s_00012],0);
constraint int_lt_reif(s_00004,aux4155,aux4156_BOOL);
constraint int_le_reif(s_00012, s_00004,aux4157_BOOL);
constraint array_bool_and([aux4153_BOOL,aux4154_BOOL,w_00004_00012_BOOL,aux4156_BOOL,aux4157_BOOL],aux4158_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux4159_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux4160_BOOL);
constraint int_lin_eq([-1,1,1],[aux4161,3,s_00013],0);
constraint int_lt_reif(s_00004,aux4161,aux4162_BOOL);
constraint int_le_reif(s_00013, s_00004,aux4163_BOOL);
constraint array_bool_and([aux4159_BOOL,aux4160_BOOL,w_00004_00013_BOOL,aux4162_BOOL,aux4163_BOOL],aux4164_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux4165_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux4166_BOOL);
constraint int_lin_eq([-1,1,1],[aux4167,3,s_00014],0);
constraint int_lt_reif(s_00004,aux4167,aux4168_BOOL);
constraint int_le_reif(s_00014, s_00004,aux4169_BOOL);
constraint array_bool_and([aux4165_BOOL,aux4166_BOOL,w_00004_00014_BOOL,aux4168_BOOL,aux4169_BOOL],aux4170_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux4092_INTEGER,aux4098_INTEGER,aux4104_INTEGER,aux4110_INTEGER,aux4116_INTEGER,aux4122_INTEGER,aux4128_INTEGER,aux4134_INTEGER,aux4140_INTEGER,aux4146_INTEGER,aux4152_INTEGER,aux4158_INTEGER,aux4164_INTEGER,aux4170_INTEGER,1],0,aux4171_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux4172_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux4173_BOOL);
constraint int_lin_eq([-1,1,1],[aux4174,1,s_00010],0);
constraint int_lt_reif(s_00013,aux4174,aux4175_BOOL);
constraint int_le_reif(s_00010, s_00013,aux4176_BOOL);
constraint array_bool_and([aux4172_BOOL,aux4173_BOOL,w_00004_00010_BOOL,aux4175_BOOL,aux4176_BOOL],aux4177_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux4178_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux4179_BOOL);
constraint int_lin_eq([-1,1,1],[aux4180,2,s_00011],0);
constraint int_lt_reif(s_00013,aux4180,aux4181_BOOL);
constraint int_le_reif(s_00011, s_00013,aux4182_BOOL);
constraint array_bool_and([aux4178_BOOL,aux4179_BOOL,w_00004_00011_BOOL,aux4181_BOOL,aux4182_BOOL],aux4183_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux4184_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux4185_BOOL);
constraint int_lin_eq([-1,1,1],[aux4186,3,s_00012],0);
constraint int_lt_reif(s_00013,aux4186,aux4187_BOOL);
constraint int_le_reif(s_00012, s_00013,aux4188_BOOL);
constraint array_bool_and([aux4184_BOOL,aux4185_BOOL,w_00004_00012_BOOL,aux4187_BOOL,aux4188_BOOL],aux4189_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux4190_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux4191_BOOL);
constraint int_lin_eq([-1,1,1],[aux4192,3,s_00014],0);
constraint int_lt_reif(s_00013,aux4192,aux4193_BOOL);
constraint int_le_reif(s_00014, s_00013,aux4194_BOOL);
constraint array_bool_and([aux4190_BOOL,aux4191_BOOL,w_00004_00014_BOOL,aux4193_BOOL,aux4194_BOOL],aux4195_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux4196_BOOL);
constraint int_lin_eq([-1,1,1],[aux4197,3,s_00013],0);
constraint int_lt_reif(s_00013,aux4197,aux4198_BOOL);
constraint array_bool_and([aux4196_BOOL,w_00004_00013_BOOL,aux4198_BOOL],aux4199_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux4200_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux4201_BOOL);
constraint int_lin_eq([-1,1,1],[aux4202,2,s_00001],0);
constraint int_lt_reif(s_00013,aux4202,aux4203_BOOL);
constraint int_le_reif(s_00001, s_00013,aux4204_BOOL);
constraint array_bool_and([aux4200_BOOL,aux4201_BOOL,w_00004_00001_BOOL,aux4203_BOOL,aux4204_BOOL],aux4205_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux4206_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux4207_BOOL);
constraint int_lin_eq([-1,1,1],[aux4208,6,s_00002],0);
constraint int_lt_reif(s_00013,aux4208,aux4209_BOOL);
constraint int_le_reif(s_00002, s_00013,aux4210_BOOL);
constraint array_bool_and([aux4206_BOOL,aux4207_BOOL,w_00004_00002_BOOL,aux4209_BOOL,aux4210_BOOL],aux4211_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux4212_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux4213_BOOL);
constraint int_lin_eq([-1,1,1],[aux4214,1,s_00003],0);
constraint int_lt_reif(s_00013,aux4214,aux4215_BOOL);
constraint int_le_reif(s_00003, s_00013,aux4216_BOOL);
constraint array_bool_and([aux4212_BOOL,aux4213_BOOL,w_00004_00003_BOOL,aux4215_BOOL,aux4216_BOOL],aux4217_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux4218_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux4219_BOOL);
constraint int_lin_eq([-1,1,1],[aux4220,2,s_00004],0);
constraint int_lt_reif(s_00013,aux4220,aux4221_BOOL);
constraint int_le_reif(s_00004, s_00013,aux4222_BOOL);
constraint array_bool_and([aux4218_BOOL,aux4219_BOOL,w_00004_00004_BOOL,aux4221_BOOL,aux4222_BOOL],aux4223_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux4224_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux4225_BOOL);
constraint int_lin_eq([-1,1,1],[aux4226,1,s_00005],0);
constraint int_lt_reif(s_00013,aux4226,aux4227_BOOL);
constraint int_le_reif(s_00005, s_00013,aux4228_BOOL);
constraint array_bool_and([aux4224_BOOL,aux4225_BOOL,w_00004_00005_BOOL,aux4227_BOOL,aux4228_BOOL],aux4229_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux4230_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux4231_BOOL);
constraint int_lin_eq([-1,1,1],[aux4232,4,s_00006],0);
constraint int_lt_reif(s_00013,aux4232,aux4233_BOOL);
constraint int_le_reif(s_00006, s_00013,aux4234_BOOL);
constraint array_bool_and([aux4230_BOOL,aux4231_BOOL,w_00004_00006_BOOL,aux4233_BOOL,aux4234_BOOL],aux4235_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux4236_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux4237_BOOL);
constraint int_lin_eq([-1,1,1],[aux4238,2,s_00007],0);
constraint int_lt_reif(s_00013,aux4238,aux4239_BOOL);
constraint int_le_reif(s_00007, s_00013,aux4240_BOOL);
constraint array_bool_and([aux4236_BOOL,aux4237_BOOL,w_00004_00007_BOOL,aux4239_BOOL,aux4240_BOOL],aux4241_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux4242_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux4243_BOOL);
constraint int_lin_eq([-1,1,1],[aux4244,2,s_00008],0);
constraint int_lt_reif(s_00013,aux4244,aux4245_BOOL);
constraint int_le_reif(s_00008, s_00013,aux4246_BOOL);
constraint array_bool_and([aux4242_BOOL,aux4243_BOOL,w_00004_00008_BOOL,aux4245_BOOL,aux4246_BOOL],aux4247_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux4248_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux4249_BOOL);
constraint int_lin_eq([-1,1,1],[aux4250,2,s_00009],0);
constraint int_lt_reif(s_00013,aux4250,aux4251_BOOL);
constraint int_le_reif(s_00009, s_00013,aux4252_BOOL);
constraint array_bool_and([aux4248_BOOL,aux4249_BOOL,w_00004_00009_BOOL,aux4251_BOOL,aux4252_BOOL],aux4253_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux4177_INTEGER,aux4183_INTEGER,aux4189_INTEGER,aux4195_INTEGER,aux4199_INTEGER,aux4205_INTEGER,aux4211_INTEGER,aux4217_INTEGER,aux4223_INTEGER,aux4229_INTEGER,aux4235_INTEGER,aux4241_INTEGER,aux4247_INTEGER,aux4253_INTEGER,1],0,aux4254_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux4255_BOOL);
constraint int_lin_eq([-1,1,1],[aux4256,6,s_00002],0);
constraint int_lt_reif(s_00002,aux4256,aux4257_BOOL);
constraint array_bool_and([aux4255_BOOL,w_00004_00002_BOOL,aux4257_BOOL],aux4258_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux4259_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux4260_BOOL);
constraint int_lin_eq([-1,1,1],[aux4261,2,s_00001],0);
constraint int_lt_reif(s_00002,aux4261,aux4262_BOOL);
constraint int_le_reif(s_00001, s_00002,aux4263_BOOL);
constraint array_bool_and([aux4259_BOOL,aux4260_BOOL,w_00004_00001_BOOL,aux4262_BOOL,aux4263_BOOL],aux4264_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux4265_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux4266_BOOL);
constraint int_lin_eq([-1,1,1],[aux4267,1,s_00003],0);
constraint int_lt_reif(s_00002,aux4267,aux4268_BOOL);
constraint int_le_reif(s_00003, s_00002,aux4269_BOOL);
constraint array_bool_and([aux4265_BOOL,aux4266_BOOL,w_00004_00003_BOOL,aux4268_BOOL,aux4269_BOOL],aux4270_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux4271_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux4272_BOOL);
constraint int_lin_eq([-1,1,1],[aux4273,2,s_00004],0);
constraint int_lt_reif(s_00002,aux4273,aux4274_BOOL);
constraint int_le_reif(s_00004, s_00002,aux4275_BOOL);
constraint array_bool_and([aux4271_BOOL,aux4272_BOOL,w_00004_00004_BOOL,aux4274_BOOL,aux4275_BOOL],aux4276_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux4277_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux4278_BOOL);
constraint int_lin_eq([-1,1,1],[aux4279,1,s_00005],0);
constraint int_lt_reif(s_00002,aux4279,aux4280_BOOL);
constraint int_le_reif(s_00005, s_00002,aux4281_BOOL);
constraint array_bool_and([aux4277_BOOL,aux4278_BOOL,w_00004_00005_BOOL,aux4280_BOOL,aux4281_BOOL],aux4282_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux4283_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux4284_BOOL);
constraint int_lin_eq([-1,1,1],[aux4285,4,s_00006],0);
constraint int_lt_reif(s_00002,aux4285,aux4286_BOOL);
constraint int_le_reif(s_00006, s_00002,aux4287_BOOL);
constraint array_bool_and([aux4283_BOOL,aux4284_BOOL,w_00004_00006_BOOL,aux4286_BOOL,aux4287_BOOL],aux4288_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux4289_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux4290_BOOL);
constraint int_lin_eq([-1,1,1],[aux4291,2,s_00007],0);
constraint int_lt_reif(s_00002,aux4291,aux4292_BOOL);
constraint int_le_reif(s_00007, s_00002,aux4293_BOOL);
constraint array_bool_and([aux4289_BOOL,aux4290_BOOL,w_00004_00007_BOOL,aux4292_BOOL,aux4293_BOOL],aux4294_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux4295_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux4296_BOOL);
constraint int_lin_eq([-1,1,1],[aux4297,2,s_00008],0);
constraint int_lt_reif(s_00002,aux4297,aux4298_BOOL);
constraint int_le_reif(s_00008, s_00002,aux4299_BOOL);
constraint array_bool_and([aux4295_BOOL,aux4296_BOOL,w_00004_00008_BOOL,aux4298_BOOL,aux4299_BOOL],aux4300_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux4301_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux4302_BOOL);
constraint int_lin_eq([-1,1,1],[aux4303,2,s_00009],0);
constraint int_lt_reif(s_00002,aux4303,aux4304_BOOL);
constraint int_le_reif(s_00009, s_00002,aux4305_BOOL);
constraint array_bool_and([aux4301_BOOL,aux4302_BOOL,w_00004_00009_BOOL,aux4304_BOOL,aux4305_BOOL],aux4306_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux4307_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux4308_BOOL);
constraint int_lin_eq([-1,1,1],[aux4309,1,s_00010],0);
constraint int_lt_reif(s_00002,aux4309,aux4310_BOOL);
constraint int_le_reif(s_00010, s_00002,aux4311_BOOL);
constraint array_bool_and([aux4307_BOOL,aux4308_BOOL,w_00004_00010_BOOL,aux4310_BOOL,aux4311_BOOL],aux4312_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux4313_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux4314_BOOL);
constraint int_lin_eq([-1,1,1],[aux4315,2,s_00011],0);
constraint int_lt_reif(s_00002,aux4315,aux4316_BOOL);
constraint int_le_reif(s_00011, s_00002,aux4317_BOOL);
constraint array_bool_and([aux4313_BOOL,aux4314_BOOL,w_00004_00011_BOOL,aux4316_BOOL,aux4317_BOOL],aux4318_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux4319_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux4320_BOOL);
constraint int_lin_eq([-1,1,1],[aux4321,3,s_00012],0);
constraint int_lt_reif(s_00002,aux4321,aux4322_BOOL);
constraint int_le_reif(s_00012, s_00002,aux4323_BOOL);
constraint array_bool_and([aux4319_BOOL,aux4320_BOOL,w_00004_00012_BOOL,aux4322_BOOL,aux4323_BOOL],aux4324_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux4325_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux4326_BOOL);
constraint int_lin_eq([-1,1,1],[aux4327,3,s_00013],0);
constraint int_lt_reif(s_00002,aux4327,aux4328_BOOL);
constraint int_le_reif(s_00013, s_00002,aux4329_BOOL);
constraint array_bool_and([aux4325_BOOL,aux4326_BOOL,w_00004_00013_BOOL,aux4328_BOOL,aux4329_BOOL],aux4330_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux4331_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux4332_BOOL);
constraint int_lin_eq([-1,1,1],[aux4333,3,s_00014],0);
constraint int_lt_reif(s_00002,aux4333,aux4334_BOOL);
constraint int_le_reif(s_00014, s_00002,aux4335_BOOL);
constraint array_bool_and([aux4331_BOOL,aux4332_BOOL,w_00004_00014_BOOL,aux4334_BOOL,aux4335_BOOL],aux4336_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux4258_INTEGER,aux4264_INTEGER,aux4270_INTEGER,aux4276_INTEGER,aux4282_INTEGER,aux4288_INTEGER,aux4294_INTEGER,aux4300_INTEGER,aux4306_INTEGER,aux4312_INTEGER,aux4318_INTEGER,aux4324_INTEGER,aux4330_INTEGER,aux4336_INTEGER,1],0,aux4337_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux4338_BOOL);
constraint int_lin_eq([-1,1,1],[aux4339,1,s_00005],0);
constraint int_lt_reif(s_00005,aux4339,aux4340_BOOL);
constraint array_bool_and([aux4338_BOOL,w_00004_00005_BOOL,aux4340_BOOL],aux4341_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux4342_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux4343_BOOL);
constraint int_lin_eq([-1,1,1],[aux4344,2,s_00001],0);
constraint int_lt_reif(s_00005,aux4344,aux4345_BOOL);
constraint int_le_reif(s_00001, s_00005,aux4346_BOOL);
constraint array_bool_and([aux4342_BOOL,aux4343_BOOL,w_00004_00001_BOOL,aux4345_BOOL,aux4346_BOOL],aux4347_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux4348_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux4349_BOOL);
constraint int_lin_eq([-1,1,1],[aux4350,6,s_00002],0);
constraint int_lt_reif(s_00005,aux4350,aux4351_BOOL);
constraint int_le_reif(s_00002, s_00005,aux4352_BOOL);
constraint array_bool_and([aux4348_BOOL,aux4349_BOOL,w_00004_00002_BOOL,aux4351_BOOL,aux4352_BOOL],aux4353_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux4354_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux4355_BOOL);
constraint int_lin_eq([-1,1,1],[aux4356,1,s_00003],0);
constraint int_lt_reif(s_00005,aux4356,aux4357_BOOL);
constraint int_le_reif(s_00003, s_00005,aux4358_BOOL);
constraint array_bool_and([aux4354_BOOL,aux4355_BOOL,w_00004_00003_BOOL,aux4357_BOOL,aux4358_BOOL],aux4359_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux4360_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux4361_BOOL);
constraint int_lin_eq([-1,1,1],[aux4362,2,s_00004],0);
constraint int_lt_reif(s_00005,aux4362,aux4363_BOOL);
constraint int_le_reif(s_00004, s_00005,aux4364_BOOL);
constraint array_bool_and([aux4360_BOOL,aux4361_BOOL,w_00004_00004_BOOL,aux4363_BOOL,aux4364_BOOL],aux4365_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux4366_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux4367_BOOL);
constraint int_lin_eq([-1,1,1],[aux4368,4,s_00006],0);
constraint int_lt_reif(s_00005,aux4368,aux4369_BOOL);
constraint int_le_reif(s_00006, s_00005,aux4370_BOOL);
constraint array_bool_and([aux4366_BOOL,aux4367_BOOL,w_00004_00006_BOOL,aux4369_BOOL,aux4370_BOOL],aux4371_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux4372_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux4373_BOOL);
constraint int_lin_eq([-1,1,1],[aux4374,2,s_00007],0);
constraint int_lt_reif(s_00005,aux4374,aux4375_BOOL);
constraint int_le_reif(s_00007, s_00005,aux4376_BOOL);
constraint array_bool_and([aux4372_BOOL,aux4373_BOOL,w_00004_00007_BOOL,aux4375_BOOL,aux4376_BOOL],aux4377_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux4378_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux4379_BOOL);
constraint int_lin_eq([-1,1,1],[aux4380,2,s_00008],0);
constraint int_lt_reif(s_00005,aux4380,aux4381_BOOL);
constraint int_le_reif(s_00008, s_00005,aux4382_BOOL);
constraint array_bool_and([aux4378_BOOL,aux4379_BOOL,w_00004_00008_BOOL,aux4381_BOOL,aux4382_BOOL],aux4383_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux4384_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux4385_BOOL);
constraint int_lin_eq([-1,1,1],[aux4386,2,s_00009],0);
constraint int_lt_reif(s_00005,aux4386,aux4387_BOOL);
constraint int_le_reif(s_00009, s_00005,aux4388_BOOL);
constraint array_bool_and([aux4384_BOOL,aux4385_BOOL,w_00004_00009_BOOL,aux4387_BOOL,aux4388_BOOL],aux4389_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux4390_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux4391_BOOL);
constraint int_lin_eq([-1,1,1],[aux4392,1,s_00010],0);
constraint int_lt_reif(s_00005,aux4392,aux4393_BOOL);
constraint int_le_reif(s_00010, s_00005,aux4394_BOOL);
constraint array_bool_and([aux4390_BOOL,aux4391_BOOL,w_00004_00010_BOOL,aux4393_BOOL,aux4394_BOOL],aux4395_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux4396_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux4397_BOOL);
constraint int_lin_eq([-1,1,1],[aux4398,2,s_00011],0);
constraint int_lt_reif(s_00005,aux4398,aux4399_BOOL);
constraint int_le_reif(s_00011, s_00005,aux4400_BOOL);
constraint array_bool_and([aux4396_BOOL,aux4397_BOOL,w_00004_00011_BOOL,aux4399_BOOL,aux4400_BOOL],aux4401_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux4402_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux4403_BOOL);
constraint int_lin_eq([-1,1,1],[aux4404,3,s_00012],0);
constraint int_lt_reif(s_00005,aux4404,aux4405_BOOL);
constraint int_le_reif(s_00012, s_00005,aux4406_BOOL);
constraint array_bool_and([aux4402_BOOL,aux4403_BOOL,w_00004_00012_BOOL,aux4405_BOOL,aux4406_BOOL],aux4407_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux4408_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux4409_BOOL);
constraint int_lin_eq([-1,1,1],[aux4410,3,s_00013],0);
constraint int_lt_reif(s_00005,aux4410,aux4411_BOOL);
constraint int_le_reif(s_00013, s_00005,aux4412_BOOL);
constraint array_bool_and([aux4408_BOOL,aux4409_BOOL,w_00004_00013_BOOL,aux4411_BOOL,aux4412_BOOL],aux4413_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux4414_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux4415_BOOL);
constraint int_lin_eq([-1,1,1],[aux4416,3,s_00014],0);
constraint int_lt_reif(s_00005,aux4416,aux4417_BOOL);
constraint int_le_reif(s_00014, s_00005,aux4418_BOOL);
constraint array_bool_and([aux4414_BOOL,aux4415_BOOL,w_00004_00014_BOOL,aux4417_BOOL,aux4418_BOOL],aux4419_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux4341_INTEGER,aux4347_INTEGER,aux4353_INTEGER,aux4359_INTEGER,aux4365_INTEGER,aux4371_INTEGER,aux4377_INTEGER,aux4383_INTEGER,aux4389_INTEGER,aux4395_INTEGER,aux4401_INTEGER,aux4407_INTEGER,aux4413_INTEGER,aux4419_INTEGER,1],0,aux4420_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux4421_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux4422_BOOL);
constraint int_lin_eq([-1,1,1],[aux4423,2,s_00011],0);
constraint int_lt_reif(s_00010,aux4423,aux4424_BOOL);
constraint int_le_reif(s_00011, s_00010,aux4425_BOOL);
constraint array_bool_and([aux4421_BOOL,aux4422_BOOL,w_00004_00011_BOOL,aux4424_BOOL,aux4425_BOOL],aux4426_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux4427_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux4428_BOOL);
constraint int_lin_eq([-1,1,1],[aux4429,3,s_00012],0);
constraint int_lt_reif(s_00010,aux4429,aux4430_BOOL);
constraint int_le_reif(s_00012, s_00010,aux4431_BOOL);
constraint array_bool_and([aux4427_BOOL,aux4428_BOOL,w_00004_00012_BOOL,aux4430_BOOL,aux4431_BOOL],aux4432_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux4433_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux4434_BOOL);
constraint int_lin_eq([-1,1,1],[aux4435,3,s_00013],0);
constraint int_lt_reif(s_00010,aux4435,aux4436_BOOL);
constraint int_le_reif(s_00013, s_00010,aux4437_BOOL);
constraint array_bool_and([aux4433_BOOL,aux4434_BOOL,w_00004_00013_BOOL,aux4436_BOOL,aux4437_BOOL],aux4438_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux4439_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux4440_BOOL);
constraint int_lin_eq([-1,1,1],[aux4441,3,s_00014],0);
constraint int_lt_reif(s_00010,aux4441,aux4442_BOOL);
constraint int_le_reif(s_00014, s_00010,aux4443_BOOL);
constraint array_bool_and([aux4439_BOOL,aux4440_BOOL,w_00004_00014_BOOL,aux4442_BOOL,aux4443_BOOL],aux4444_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux4445_BOOL);
constraint int_lin_eq([-1,1,1],[aux4446,1,s_00010],0);
constraint int_lt_reif(s_00010,aux4446,aux4447_BOOL);
constraint array_bool_and([aux4445_BOOL,w_00004_00010_BOOL,aux4447_BOOL],aux4448_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux4449_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux4450_BOOL);
constraint int_lin_eq([-1,1,1],[aux4451,2,s_00001],0);
constraint int_lt_reif(s_00010,aux4451,aux4452_BOOL);
constraint int_le_reif(s_00001, s_00010,aux4453_BOOL);
constraint array_bool_and([aux4449_BOOL,aux4450_BOOL,w_00004_00001_BOOL,aux4452_BOOL,aux4453_BOOL],aux4454_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux4455_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux4456_BOOL);
constraint int_lin_eq([-1,1,1],[aux4457,6,s_00002],0);
constraint int_lt_reif(s_00010,aux4457,aux4458_BOOL);
constraint int_le_reif(s_00002, s_00010,aux4459_BOOL);
constraint array_bool_and([aux4455_BOOL,aux4456_BOOL,w_00004_00002_BOOL,aux4458_BOOL,aux4459_BOOL],aux4460_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux4461_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux4462_BOOL);
constraint int_lin_eq([-1,1,1],[aux4463,1,s_00003],0);
constraint int_lt_reif(s_00010,aux4463,aux4464_BOOL);
constraint int_le_reif(s_00003, s_00010,aux4465_BOOL);
constraint array_bool_and([aux4461_BOOL,aux4462_BOOL,w_00004_00003_BOOL,aux4464_BOOL,aux4465_BOOL],aux4466_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux4467_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux4468_BOOL);
constraint int_lin_eq([-1,1,1],[aux4469,2,s_00004],0);
constraint int_lt_reif(s_00010,aux4469,aux4470_BOOL);
constraint int_le_reif(s_00004, s_00010,aux4471_BOOL);
constraint array_bool_and([aux4467_BOOL,aux4468_BOOL,w_00004_00004_BOOL,aux4470_BOOL,aux4471_BOOL],aux4472_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux4473_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux4474_BOOL);
constraint int_lin_eq([-1,1,1],[aux4475,1,s_00005],0);
constraint int_lt_reif(s_00010,aux4475,aux4476_BOOL);
constraint int_le_reif(s_00005, s_00010,aux4477_BOOL);
constraint array_bool_and([aux4473_BOOL,aux4474_BOOL,w_00004_00005_BOOL,aux4476_BOOL,aux4477_BOOL],aux4478_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux4479_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux4480_BOOL);
constraint int_lin_eq([-1,1,1],[aux4481,4,s_00006],0);
constraint int_lt_reif(s_00010,aux4481,aux4482_BOOL);
constraint int_le_reif(s_00006, s_00010,aux4483_BOOL);
constraint array_bool_and([aux4479_BOOL,aux4480_BOOL,w_00004_00006_BOOL,aux4482_BOOL,aux4483_BOOL],aux4484_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux4485_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux4486_BOOL);
constraint int_lin_eq([-1,1,1],[aux4487,2,s_00007],0);
constraint int_lt_reif(s_00010,aux4487,aux4488_BOOL);
constraint int_le_reif(s_00007, s_00010,aux4489_BOOL);
constraint array_bool_and([aux4485_BOOL,aux4486_BOOL,w_00004_00007_BOOL,aux4488_BOOL,aux4489_BOOL],aux4490_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux4491_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux4492_BOOL);
constraint int_lin_eq([-1,1,1],[aux4493,2,s_00008],0);
constraint int_lt_reif(s_00010,aux4493,aux4494_BOOL);
constraint int_le_reif(s_00008, s_00010,aux4495_BOOL);
constraint array_bool_and([aux4491_BOOL,aux4492_BOOL,w_00004_00008_BOOL,aux4494_BOOL,aux4495_BOOL],aux4496_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux4497_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux4498_BOOL);
constraint int_lin_eq([-1,1,1],[aux4499,2,s_00009],0);
constraint int_lt_reif(s_00010,aux4499,aux4500_BOOL);
constraint int_le_reif(s_00009, s_00010,aux4501_BOOL);
constraint array_bool_and([aux4497_BOOL,aux4498_BOOL,w_00004_00009_BOOL,aux4500_BOOL,aux4501_BOOL],aux4502_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux4426_INTEGER,aux4432_INTEGER,aux4438_INTEGER,aux4444_INTEGER,aux4448_INTEGER,aux4454_INTEGER,aux4460_INTEGER,aux4466_INTEGER,aux4472_INTEGER,aux4478_INTEGER,aux4484_INTEGER,aux4490_INTEGER,aux4496_INTEGER,aux4502_INTEGER,1],0,aux4503_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux4504_BOOL);
constraint int_lin_eq([-1,1,1],[aux4505,1,s_00003],0);
constraint int_lt_reif(s_00003,aux4505,aux4506_BOOL);
constraint array_bool_and([aux4504_BOOL,w_00004_00003_BOOL,aux4506_BOOL],aux4507_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux4508_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux4509_BOOL);
constraint int_lin_eq([-1,1,1],[aux4510,2,s_00001],0);
constraint int_lt_reif(s_00003,aux4510,aux4511_BOOL);
constraint int_le_reif(s_00001, s_00003,aux4512_BOOL);
constraint array_bool_and([aux4508_BOOL,aux4509_BOOL,w_00004_00001_BOOL,aux4511_BOOL,aux4512_BOOL],aux4513_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux4514_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux4515_BOOL);
constraint int_lin_eq([-1,1,1],[aux4516,6,s_00002],0);
constraint int_lt_reif(s_00003,aux4516,aux4517_BOOL);
constraint int_le_reif(s_00002, s_00003,aux4518_BOOL);
constraint array_bool_and([aux4514_BOOL,aux4515_BOOL,w_00004_00002_BOOL,aux4517_BOOL,aux4518_BOOL],aux4519_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux4520_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux4521_BOOL);
constraint int_lin_eq([-1,1,1],[aux4522,2,s_00004],0);
constraint int_lt_reif(s_00003,aux4522,aux4523_BOOL);
constraint int_le_reif(s_00004, s_00003,aux4524_BOOL);
constraint array_bool_and([aux4520_BOOL,aux4521_BOOL,w_00004_00004_BOOL,aux4523_BOOL,aux4524_BOOL],aux4525_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux4526_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux4527_BOOL);
constraint int_lin_eq([-1,1,1],[aux4528,1,s_00005],0);
constraint int_lt_reif(s_00003,aux4528,aux4529_BOOL);
constraint int_le_reif(s_00005, s_00003,aux4530_BOOL);
constraint array_bool_and([aux4526_BOOL,aux4527_BOOL,w_00004_00005_BOOL,aux4529_BOOL,aux4530_BOOL],aux4531_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux4532_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux4533_BOOL);
constraint int_lin_eq([-1,1,1],[aux4534,4,s_00006],0);
constraint int_lt_reif(s_00003,aux4534,aux4535_BOOL);
constraint int_le_reif(s_00006, s_00003,aux4536_BOOL);
constraint array_bool_and([aux4532_BOOL,aux4533_BOOL,w_00004_00006_BOOL,aux4535_BOOL,aux4536_BOOL],aux4537_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux4538_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux4539_BOOL);
constraint int_lin_eq([-1,1,1],[aux4540,2,s_00007],0);
constraint int_lt_reif(s_00003,aux4540,aux4541_BOOL);
constraint int_le_reif(s_00007, s_00003,aux4542_BOOL);
constraint array_bool_and([aux4538_BOOL,aux4539_BOOL,w_00004_00007_BOOL,aux4541_BOOL,aux4542_BOOL],aux4543_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux4544_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux4545_BOOL);
constraint int_lin_eq([-1,1,1],[aux4546,2,s_00008],0);
constraint int_lt_reif(s_00003,aux4546,aux4547_BOOL);
constraint int_le_reif(s_00008, s_00003,aux4548_BOOL);
constraint array_bool_and([aux4544_BOOL,aux4545_BOOL,w_00004_00008_BOOL,aux4547_BOOL,aux4548_BOOL],aux4549_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux4550_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux4551_BOOL);
constraint int_lin_eq([-1,1,1],[aux4552,2,s_00009],0);
constraint int_lt_reif(s_00003,aux4552,aux4553_BOOL);
constraint int_le_reif(s_00009, s_00003,aux4554_BOOL);
constraint array_bool_and([aux4550_BOOL,aux4551_BOOL,w_00004_00009_BOOL,aux4553_BOOL,aux4554_BOOL],aux4555_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux4556_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux4557_BOOL);
constraint int_lin_eq([-1,1,1],[aux4558,1,s_00010],0);
constraint int_lt_reif(s_00003,aux4558,aux4559_BOOL);
constraint int_le_reif(s_00010, s_00003,aux4560_BOOL);
constraint array_bool_and([aux4556_BOOL,aux4557_BOOL,w_00004_00010_BOOL,aux4559_BOOL,aux4560_BOOL],aux4561_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux4562_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux4563_BOOL);
constraint int_lin_eq([-1,1,1],[aux4564,2,s_00011],0);
constraint int_lt_reif(s_00003,aux4564,aux4565_BOOL);
constraint int_le_reif(s_00011, s_00003,aux4566_BOOL);
constraint array_bool_and([aux4562_BOOL,aux4563_BOOL,w_00004_00011_BOOL,aux4565_BOOL,aux4566_BOOL],aux4567_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux4568_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux4569_BOOL);
constraint int_lin_eq([-1,1,1],[aux4570,3,s_00012],0);
constraint int_lt_reif(s_00003,aux4570,aux4571_BOOL);
constraint int_le_reif(s_00012, s_00003,aux4572_BOOL);
constraint array_bool_and([aux4568_BOOL,aux4569_BOOL,w_00004_00012_BOOL,aux4571_BOOL,aux4572_BOOL],aux4573_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux4574_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux4575_BOOL);
constraint int_lin_eq([-1,1,1],[aux4576,3,s_00013],0);
constraint int_lt_reif(s_00003,aux4576,aux4577_BOOL);
constraint int_le_reif(s_00013, s_00003,aux4578_BOOL);
constraint array_bool_and([aux4574_BOOL,aux4575_BOOL,w_00004_00013_BOOL,aux4577_BOOL,aux4578_BOOL],aux4579_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux4580_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux4581_BOOL);
constraint int_lin_eq([-1,1,1],[aux4582,3,s_00014],0);
constraint int_lt_reif(s_00003,aux4582,aux4583_BOOL);
constraint int_le_reif(s_00014, s_00003,aux4584_BOOL);
constraint array_bool_and([aux4580_BOOL,aux4581_BOOL,w_00004_00014_BOOL,aux4583_BOOL,aux4584_BOOL],aux4585_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux4507_INTEGER,aux4513_INTEGER,aux4519_INTEGER,aux4525_INTEGER,aux4531_INTEGER,aux4537_INTEGER,aux4543_INTEGER,aux4549_INTEGER,aux4555_INTEGER,aux4561_INTEGER,aux4567_INTEGER,aux4573_INTEGER,aux4579_INTEGER,aux4585_INTEGER,1],0,aux4586_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux4587_BOOL);
constraint int_lin_eq([-1,1,1],[aux4588,2,s_00009],0);
constraint int_lt_reif(s_00009,aux4588,aux4589_BOOL);
constraint array_bool_and([aux4587_BOOL,w_00004_00009_BOOL,aux4589_BOOL],aux4590_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux4591_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux4592_BOOL);
constraint int_lin_eq([-1,1,1],[aux4593,2,s_00001],0);
constraint int_lt_reif(s_00009,aux4593,aux4594_BOOL);
constraint int_le_reif(s_00001, s_00009,aux4595_BOOL);
constraint array_bool_and([aux4591_BOOL,aux4592_BOOL,w_00004_00001_BOOL,aux4594_BOOL,aux4595_BOOL],aux4596_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux4597_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux4598_BOOL);
constraint int_lin_eq([-1,1,1],[aux4599,6,s_00002],0);
constraint int_lt_reif(s_00009,aux4599,aux4600_BOOL);
constraint int_le_reif(s_00002, s_00009,aux4601_BOOL);
constraint array_bool_and([aux4597_BOOL,aux4598_BOOL,w_00004_00002_BOOL,aux4600_BOOL,aux4601_BOOL],aux4602_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux4603_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux4604_BOOL);
constraint int_lin_eq([-1,1,1],[aux4605,1,s_00003],0);
constraint int_lt_reif(s_00009,aux4605,aux4606_BOOL);
constraint int_le_reif(s_00003, s_00009,aux4607_BOOL);
constraint array_bool_and([aux4603_BOOL,aux4604_BOOL,w_00004_00003_BOOL,aux4606_BOOL,aux4607_BOOL],aux4608_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux4609_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux4610_BOOL);
constraint int_lin_eq([-1,1,1],[aux4611,2,s_00004],0);
constraint int_lt_reif(s_00009,aux4611,aux4612_BOOL);
constraint int_le_reif(s_00004, s_00009,aux4613_BOOL);
constraint array_bool_and([aux4609_BOOL,aux4610_BOOL,w_00004_00004_BOOL,aux4612_BOOL,aux4613_BOOL],aux4614_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux4615_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux4616_BOOL);
constraint int_lin_eq([-1,1,1],[aux4617,1,s_00005],0);
constraint int_lt_reif(s_00009,aux4617,aux4618_BOOL);
constraint int_le_reif(s_00005, s_00009,aux4619_BOOL);
constraint array_bool_and([aux4615_BOOL,aux4616_BOOL,w_00004_00005_BOOL,aux4618_BOOL,aux4619_BOOL],aux4620_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux4621_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux4622_BOOL);
constraint int_lin_eq([-1,1,1],[aux4623,4,s_00006],0);
constraint int_lt_reif(s_00009,aux4623,aux4624_BOOL);
constraint int_le_reif(s_00006, s_00009,aux4625_BOOL);
constraint array_bool_and([aux4621_BOOL,aux4622_BOOL,w_00004_00006_BOOL,aux4624_BOOL,aux4625_BOOL],aux4626_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux4627_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux4628_BOOL);
constraint int_lin_eq([-1,1,1],[aux4629,2,s_00007],0);
constraint int_lt_reif(s_00009,aux4629,aux4630_BOOL);
constraint int_le_reif(s_00007, s_00009,aux4631_BOOL);
constraint array_bool_and([aux4627_BOOL,aux4628_BOOL,w_00004_00007_BOOL,aux4630_BOOL,aux4631_BOOL],aux4632_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux4633_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux4634_BOOL);
constraint int_lin_eq([-1,1,1],[aux4635,2,s_00008],0);
constraint int_lt_reif(s_00009,aux4635,aux4636_BOOL);
constraint int_le_reif(s_00008, s_00009,aux4637_BOOL);
constraint array_bool_and([aux4633_BOOL,aux4634_BOOL,w_00004_00008_BOOL,aux4636_BOOL,aux4637_BOOL],aux4638_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux4639_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux4640_BOOL);
constraint int_lin_eq([-1,1,1],[aux4641,1,s_00010],0);
constraint int_lt_reif(s_00009,aux4641,aux4642_BOOL);
constraint int_le_reif(s_00010, s_00009,aux4643_BOOL);
constraint array_bool_and([aux4639_BOOL,aux4640_BOOL,w_00004_00010_BOOL,aux4642_BOOL,aux4643_BOOL],aux4644_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux4645_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux4646_BOOL);
constraint int_lin_eq([-1,1,1],[aux4647,2,s_00011],0);
constraint int_lt_reif(s_00009,aux4647,aux4648_BOOL);
constraint int_le_reif(s_00011, s_00009,aux4649_BOOL);
constraint array_bool_and([aux4645_BOOL,aux4646_BOOL,w_00004_00011_BOOL,aux4648_BOOL,aux4649_BOOL],aux4650_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux4651_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux4652_BOOL);
constraint int_lin_eq([-1,1,1],[aux4653,3,s_00012],0);
constraint int_lt_reif(s_00009,aux4653,aux4654_BOOL);
constraint int_le_reif(s_00012, s_00009,aux4655_BOOL);
constraint array_bool_and([aux4651_BOOL,aux4652_BOOL,w_00004_00012_BOOL,aux4654_BOOL,aux4655_BOOL],aux4656_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux4657_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux4658_BOOL);
constraint int_lin_eq([-1,1,1],[aux4659,3,s_00013],0);
constraint int_lt_reif(s_00009,aux4659,aux4660_BOOL);
constraint int_le_reif(s_00013, s_00009,aux4661_BOOL);
constraint array_bool_and([aux4657_BOOL,aux4658_BOOL,w_00004_00013_BOOL,aux4660_BOOL,aux4661_BOOL],aux4662_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux4663_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux4664_BOOL);
constraint int_lin_eq([-1,1,1],[aux4665,3,s_00014],0);
constraint int_lt_reif(s_00009,aux4665,aux4666_BOOL);
constraint int_le_reif(s_00014, s_00009,aux4667_BOOL);
constraint array_bool_and([aux4663_BOOL,aux4664_BOOL,w_00004_00014_BOOL,aux4666_BOOL,aux4667_BOOL],aux4668_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux4590_INTEGER,aux4596_INTEGER,aux4602_INTEGER,aux4608_INTEGER,aux4614_INTEGER,aux4620_INTEGER,aux4626_INTEGER,aux4632_INTEGER,aux4638_INTEGER,aux4644_INTEGER,aux4650_INTEGER,aux4656_INTEGER,aux4662_INTEGER,aux4668_INTEGER,1],0,aux4669_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux4670_BOOL);
constraint int_lin_eq([-1,1,1],[aux4671,2,s_00001],0);
constraint int_lt_reif(s_00001,aux4671,aux4672_BOOL);
constraint array_bool_and([aux4670_BOOL,w_00004_00001_BOOL,aux4672_BOOL],aux4673_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux4674_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux4675_BOOL);
constraint int_lin_eq([-1,1,1],[aux4676,6,s_00002],0);
constraint int_lt_reif(s_00001,aux4676,aux4677_BOOL);
constraint int_le_reif(s_00002, s_00001,aux4678_BOOL);
constraint array_bool_and([aux4674_BOOL,aux4675_BOOL,w_00004_00002_BOOL,aux4677_BOOL,aux4678_BOOL],aux4679_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux4680_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux4681_BOOL);
constraint int_lin_eq([-1,1,1],[aux4682,1,s_00003],0);
constraint int_lt_reif(s_00001,aux4682,aux4683_BOOL);
constraint int_le_reif(s_00003, s_00001,aux4684_BOOL);
constraint array_bool_and([aux4680_BOOL,aux4681_BOOL,w_00004_00003_BOOL,aux4683_BOOL,aux4684_BOOL],aux4685_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux4686_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux4687_BOOL);
constraint int_lin_eq([-1,1,1],[aux4688,2,s_00004],0);
constraint int_lt_reif(s_00001,aux4688,aux4689_BOOL);
constraint int_le_reif(s_00004, s_00001,aux4690_BOOL);
constraint array_bool_and([aux4686_BOOL,aux4687_BOOL,w_00004_00004_BOOL,aux4689_BOOL,aux4690_BOOL],aux4691_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux4692_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux4693_BOOL);
constraint int_lin_eq([-1,1,1],[aux4694,1,s_00005],0);
constraint int_lt_reif(s_00001,aux4694,aux4695_BOOL);
constraint int_le_reif(s_00005, s_00001,aux4696_BOOL);
constraint array_bool_and([aux4692_BOOL,aux4693_BOOL,w_00004_00005_BOOL,aux4695_BOOL,aux4696_BOOL],aux4697_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux4698_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux4699_BOOL);
constraint int_lin_eq([-1,1,1],[aux4700,4,s_00006],0);
constraint int_lt_reif(s_00001,aux4700,aux4701_BOOL);
constraint int_le_reif(s_00006, s_00001,aux4702_BOOL);
constraint array_bool_and([aux4698_BOOL,aux4699_BOOL,w_00004_00006_BOOL,aux4701_BOOL,aux4702_BOOL],aux4703_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux4704_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux4705_BOOL);
constraint int_lin_eq([-1,1,1],[aux4706,2,s_00007],0);
constraint int_lt_reif(s_00001,aux4706,aux4707_BOOL);
constraint int_le_reif(s_00007, s_00001,aux4708_BOOL);
constraint array_bool_and([aux4704_BOOL,aux4705_BOOL,w_00004_00007_BOOL,aux4707_BOOL,aux4708_BOOL],aux4709_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux4710_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux4711_BOOL);
constraint int_lin_eq([-1,1,1],[aux4712,2,s_00008],0);
constraint int_lt_reif(s_00001,aux4712,aux4713_BOOL);
constraint int_le_reif(s_00008, s_00001,aux4714_BOOL);
constraint array_bool_and([aux4710_BOOL,aux4711_BOOL,w_00004_00008_BOOL,aux4713_BOOL,aux4714_BOOL],aux4715_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux4716_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux4717_BOOL);
constraint int_lin_eq([-1,1,1],[aux4718,2,s_00009],0);
constraint int_lt_reif(s_00001,aux4718,aux4719_BOOL);
constraint int_le_reif(s_00009, s_00001,aux4720_BOOL);
constraint array_bool_and([aux4716_BOOL,aux4717_BOOL,w_00004_00009_BOOL,aux4719_BOOL,aux4720_BOOL],aux4721_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux4722_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux4723_BOOL);
constraint int_lin_eq([-1,1,1],[aux4724,1,s_00010],0);
constraint int_lt_reif(s_00001,aux4724,aux4725_BOOL);
constraint int_le_reif(s_00010, s_00001,aux4726_BOOL);
constraint array_bool_and([aux4722_BOOL,aux4723_BOOL,w_00004_00010_BOOL,aux4725_BOOL,aux4726_BOOL],aux4727_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux4728_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux4729_BOOL);
constraint int_lin_eq([-1,1,1],[aux4730,2,s_00011],0);
constraint int_lt_reif(s_00001,aux4730,aux4731_BOOL);
constraint int_le_reif(s_00011, s_00001,aux4732_BOOL);
constraint array_bool_and([aux4728_BOOL,aux4729_BOOL,w_00004_00011_BOOL,aux4731_BOOL,aux4732_BOOL],aux4733_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux4734_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux4735_BOOL);
constraint int_lin_eq([-1,1,1],[aux4736,3,s_00012],0);
constraint int_lt_reif(s_00001,aux4736,aux4737_BOOL);
constraint int_le_reif(s_00012, s_00001,aux4738_BOOL);
constraint array_bool_and([aux4734_BOOL,aux4735_BOOL,w_00004_00012_BOOL,aux4737_BOOL,aux4738_BOOL],aux4739_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux4740_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux4741_BOOL);
constraint int_lin_eq([-1,1,1],[aux4742,3,s_00013],0);
constraint int_lt_reif(s_00001,aux4742,aux4743_BOOL);
constraint int_le_reif(s_00013, s_00001,aux4744_BOOL);
constraint array_bool_and([aux4740_BOOL,aux4741_BOOL,w_00004_00013_BOOL,aux4743_BOOL,aux4744_BOOL],aux4745_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux4746_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux4747_BOOL);
constraint int_lin_eq([-1,1,1],[aux4748,3,s_00014],0);
constraint int_lt_reif(s_00001,aux4748,aux4749_BOOL);
constraint int_le_reif(s_00014, s_00001,aux4750_BOOL);
constraint array_bool_and([aux4746_BOOL,aux4747_BOOL,w_00004_00014_BOOL,aux4749_BOOL,aux4750_BOOL],aux4751_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux4673_INTEGER,aux4679_INTEGER,aux4685_INTEGER,aux4691_INTEGER,aux4697_INTEGER,aux4703_INTEGER,aux4709_INTEGER,aux4715_INTEGER,aux4721_INTEGER,aux4727_INTEGER,aux4733_INTEGER,aux4739_INTEGER,aux4745_INTEGER,aux4751_INTEGER,1],0,aux4752_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux4753_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux4754_BOOL);
constraint int_lin_eq([-1,1,1],[aux4755,1,s_00010],0);
constraint int_lt_reif(s_00011,aux4755,aux4756_BOOL);
constraint int_le_reif(s_00010, s_00011,aux4757_BOOL);
constraint array_bool_and([aux4753_BOOL,aux4754_BOOL,w_00004_00010_BOOL,aux4756_BOOL,aux4757_BOOL],aux4758_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux4759_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux4760_BOOL);
constraint int_lin_eq([-1,1,1],[aux4761,3,s_00012],0);
constraint int_lt_reif(s_00011,aux4761,aux4762_BOOL);
constraint int_le_reif(s_00012, s_00011,aux4763_BOOL);
constraint array_bool_and([aux4759_BOOL,aux4760_BOOL,w_00004_00012_BOOL,aux4762_BOOL,aux4763_BOOL],aux4764_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux4765_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux4766_BOOL);
constraint int_lin_eq([-1,1,1],[aux4767,3,s_00013],0);
constraint int_lt_reif(s_00011,aux4767,aux4768_BOOL);
constraint int_le_reif(s_00013, s_00011,aux4769_BOOL);
constraint array_bool_and([aux4765_BOOL,aux4766_BOOL,w_00004_00013_BOOL,aux4768_BOOL,aux4769_BOOL],aux4770_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux4771_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux4772_BOOL);
constraint int_lin_eq([-1,1,1],[aux4773,3,s_00014],0);
constraint int_lt_reif(s_00011,aux4773,aux4774_BOOL);
constraint int_le_reif(s_00014, s_00011,aux4775_BOOL);
constraint array_bool_and([aux4771_BOOL,aux4772_BOOL,w_00004_00014_BOOL,aux4774_BOOL,aux4775_BOOL],aux4776_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux4777_BOOL);
constraint int_lin_eq([-1,1,1],[aux4778,2,s_00011],0);
constraint int_lt_reif(s_00011,aux4778,aux4779_BOOL);
constraint array_bool_and([aux4777_BOOL,w_00004_00011_BOOL,aux4779_BOOL],aux4780_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux4781_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux4782_BOOL);
constraint int_lin_eq([-1,1,1],[aux4783,2,s_00001],0);
constraint int_lt_reif(s_00011,aux4783,aux4784_BOOL);
constraint int_le_reif(s_00001, s_00011,aux4785_BOOL);
constraint array_bool_and([aux4781_BOOL,aux4782_BOOL,w_00004_00001_BOOL,aux4784_BOOL,aux4785_BOOL],aux4786_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux4787_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux4788_BOOL);
constraint int_lin_eq([-1,1,1],[aux4789,6,s_00002],0);
constraint int_lt_reif(s_00011,aux4789,aux4790_BOOL);
constraint int_le_reif(s_00002, s_00011,aux4791_BOOL);
constraint array_bool_and([aux4787_BOOL,aux4788_BOOL,w_00004_00002_BOOL,aux4790_BOOL,aux4791_BOOL],aux4792_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux4793_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux4794_BOOL);
constraint int_lin_eq([-1,1,1],[aux4795,1,s_00003],0);
constraint int_lt_reif(s_00011,aux4795,aux4796_BOOL);
constraint int_le_reif(s_00003, s_00011,aux4797_BOOL);
constraint array_bool_and([aux4793_BOOL,aux4794_BOOL,w_00004_00003_BOOL,aux4796_BOOL,aux4797_BOOL],aux4798_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux4799_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux4800_BOOL);
constraint int_lin_eq([-1,1,1],[aux4801,2,s_00004],0);
constraint int_lt_reif(s_00011,aux4801,aux4802_BOOL);
constraint int_le_reif(s_00004, s_00011,aux4803_BOOL);
constraint array_bool_and([aux4799_BOOL,aux4800_BOOL,w_00004_00004_BOOL,aux4802_BOOL,aux4803_BOOL],aux4804_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux4805_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux4806_BOOL);
constraint int_lin_eq([-1,1,1],[aux4807,1,s_00005],0);
constraint int_lt_reif(s_00011,aux4807,aux4808_BOOL);
constraint int_le_reif(s_00005, s_00011,aux4809_BOOL);
constraint array_bool_and([aux4805_BOOL,aux4806_BOOL,w_00004_00005_BOOL,aux4808_BOOL,aux4809_BOOL],aux4810_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux4811_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux4812_BOOL);
constraint int_lin_eq([-1,1,1],[aux4813,4,s_00006],0);
constraint int_lt_reif(s_00011,aux4813,aux4814_BOOL);
constraint int_le_reif(s_00006, s_00011,aux4815_BOOL);
constraint array_bool_and([aux4811_BOOL,aux4812_BOOL,w_00004_00006_BOOL,aux4814_BOOL,aux4815_BOOL],aux4816_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux4817_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux4818_BOOL);
constraint int_lin_eq([-1,1,1],[aux4819,2,s_00007],0);
constraint int_lt_reif(s_00011,aux4819,aux4820_BOOL);
constraint int_le_reif(s_00007, s_00011,aux4821_BOOL);
constraint array_bool_and([aux4817_BOOL,aux4818_BOOL,w_00004_00007_BOOL,aux4820_BOOL,aux4821_BOOL],aux4822_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux4823_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux4824_BOOL);
constraint int_lin_eq([-1,1,1],[aux4825,2,s_00008],0);
constraint int_lt_reif(s_00011,aux4825,aux4826_BOOL);
constraint int_le_reif(s_00008, s_00011,aux4827_BOOL);
constraint array_bool_and([aux4823_BOOL,aux4824_BOOL,w_00004_00008_BOOL,aux4826_BOOL,aux4827_BOOL],aux4828_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux4829_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux4830_BOOL);
constraint int_lin_eq([-1,1,1],[aux4831,2,s_00009],0);
constraint int_lt_reif(s_00011,aux4831,aux4832_BOOL);
constraint int_le_reif(s_00009, s_00011,aux4833_BOOL);
constraint array_bool_and([aux4829_BOOL,aux4830_BOOL,w_00004_00009_BOOL,aux4832_BOOL,aux4833_BOOL],aux4834_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux4758_INTEGER,aux4764_INTEGER,aux4770_INTEGER,aux4776_INTEGER,aux4780_INTEGER,aux4786_INTEGER,aux4792_INTEGER,aux4798_INTEGER,aux4804_INTEGER,aux4810_INTEGER,aux4816_INTEGER,aux4822_INTEGER,aux4828_INTEGER,aux4834_INTEGER,1],0,aux4835_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux4836_BOOL);
constraint int_lin_eq([-1,1,1],[aux4837,4,s_00006],0);
constraint int_lt_reif(s_00006,aux4837,aux4838_BOOL);
constraint array_bool_and([aux4836_BOOL,w_00004_00006_BOOL,aux4838_BOOL],aux4839_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux4840_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux4841_BOOL);
constraint int_lin_eq([-1,1,1],[aux4842,2,s_00001],0);
constraint int_lt_reif(s_00006,aux4842,aux4843_BOOL);
constraint int_le_reif(s_00001, s_00006,aux4844_BOOL);
constraint array_bool_and([aux4840_BOOL,aux4841_BOOL,w_00004_00001_BOOL,aux4843_BOOL,aux4844_BOOL],aux4845_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux4846_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux4847_BOOL);
constraint int_lin_eq([-1,1,1],[aux4848,6,s_00002],0);
constraint int_lt_reif(s_00006,aux4848,aux4849_BOOL);
constraint int_le_reif(s_00002, s_00006,aux4850_BOOL);
constraint array_bool_and([aux4846_BOOL,aux4847_BOOL,w_00004_00002_BOOL,aux4849_BOOL,aux4850_BOOL],aux4851_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux4852_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux4853_BOOL);
constraint int_lin_eq([-1,1,1],[aux4854,1,s_00003],0);
constraint int_lt_reif(s_00006,aux4854,aux4855_BOOL);
constraint int_le_reif(s_00003, s_00006,aux4856_BOOL);
constraint array_bool_and([aux4852_BOOL,aux4853_BOOL,w_00004_00003_BOOL,aux4855_BOOL,aux4856_BOOL],aux4857_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux4858_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux4859_BOOL);
constraint int_lin_eq([-1,1,1],[aux4860,2,s_00004],0);
constraint int_lt_reif(s_00006,aux4860,aux4861_BOOL);
constraint int_le_reif(s_00004, s_00006,aux4862_BOOL);
constraint array_bool_and([aux4858_BOOL,aux4859_BOOL,w_00004_00004_BOOL,aux4861_BOOL,aux4862_BOOL],aux4863_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux4864_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux4865_BOOL);
constraint int_lin_eq([-1,1,1],[aux4866,1,s_00005],0);
constraint int_lt_reif(s_00006,aux4866,aux4867_BOOL);
constraint int_le_reif(s_00005, s_00006,aux4868_BOOL);
constraint array_bool_and([aux4864_BOOL,aux4865_BOOL,w_00004_00005_BOOL,aux4867_BOOL,aux4868_BOOL],aux4869_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux4870_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux4871_BOOL);
constraint int_lin_eq([-1,1,1],[aux4872,2,s_00007],0);
constraint int_lt_reif(s_00006,aux4872,aux4873_BOOL);
constraint int_le_reif(s_00007, s_00006,aux4874_BOOL);
constraint array_bool_and([aux4870_BOOL,aux4871_BOOL,w_00004_00007_BOOL,aux4873_BOOL,aux4874_BOOL],aux4875_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux4876_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux4877_BOOL);
constraint int_lin_eq([-1,1,1],[aux4878,2,s_00008],0);
constraint int_lt_reif(s_00006,aux4878,aux4879_BOOL);
constraint int_le_reif(s_00008, s_00006,aux4880_BOOL);
constraint array_bool_and([aux4876_BOOL,aux4877_BOOL,w_00004_00008_BOOL,aux4879_BOOL,aux4880_BOOL],aux4881_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux4882_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux4883_BOOL);
constraint int_lin_eq([-1,1,1],[aux4884,2,s_00009],0);
constraint int_lt_reif(s_00006,aux4884,aux4885_BOOL);
constraint int_le_reif(s_00009, s_00006,aux4886_BOOL);
constraint array_bool_and([aux4882_BOOL,aux4883_BOOL,w_00004_00009_BOOL,aux4885_BOOL,aux4886_BOOL],aux4887_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux4888_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux4889_BOOL);
constraint int_lin_eq([-1,1,1],[aux4890,1,s_00010],0);
constraint int_lt_reif(s_00006,aux4890,aux4891_BOOL);
constraint int_le_reif(s_00010, s_00006,aux4892_BOOL);
constraint array_bool_and([aux4888_BOOL,aux4889_BOOL,w_00004_00010_BOOL,aux4891_BOOL,aux4892_BOOL],aux4893_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux4894_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux4895_BOOL);
constraint int_lin_eq([-1,1,1],[aux4896,2,s_00011],0);
constraint int_lt_reif(s_00006,aux4896,aux4897_BOOL);
constraint int_le_reif(s_00011, s_00006,aux4898_BOOL);
constraint array_bool_and([aux4894_BOOL,aux4895_BOOL,w_00004_00011_BOOL,aux4897_BOOL,aux4898_BOOL],aux4899_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux4900_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux4901_BOOL);
constraint int_lin_eq([-1,1,1],[aux4902,3,s_00012],0);
constraint int_lt_reif(s_00006,aux4902,aux4903_BOOL);
constraint int_le_reif(s_00012, s_00006,aux4904_BOOL);
constraint array_bool_and([aux4900_BOOL,aux4901_BOOL,w_00004_00012_BOOL,aux4903_BOOL,aux4904_BOOL],aux4905_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux4906_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux4907_BOOL);
constraint int_lin_eq([-1,1,1],[aux4908,3,s_00013],0);
constraint int_lt_reif(s_00006,aux4908,aux4909_BOOL);
constraint int_le_reif(s_00013, s_00006,aux4910_BOOL);
constraint array_bool_and([aux4906_BOOL,aux4907_BOOL,w_00004_00013_BOOL,aux4909_BOOL,aux4910_BOOL],aux4911_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux4912_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux4913_BOOL);
constraint int_lin_eq([-1,1,1],[aux4914,3,s_00014],0);
constraint int_lt_reif(s_00006,aux4914,aux4915_BOOL);
constraint int_le_reif(s_00014, s_00006,aux4916_BOOL);
constraint array_bool_and([aux4912_BOOL,aux4913_BOOL,w_00004_00014_BOOL,aux4915_BOOL,aux4916_BOOL],aux4917_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux4839_INTEGER,aux4845_INTEGER,aux4851_INTEGER,aux4857_INTEGER,aux4863_INTEGER,aux4869_INTEGER,aux4875_INTEGER,aux4881_INTEGER,aux4887_INTEGER,aux4893_INTEGER,aux4899_INTEGER,aux4905_INTEGER,aux4911_INTEGER,aux4917_INTEGER,1],0,aux4918_BOOL);
constraint array_bool_and([aux3839_BOOL,aux3922_BOOL,aux4005_BOOL,aux4088_BOOL,aux4171_BOOL,aux4254_BOOL,aux4337_BOOL,aux4420_BOOL,aux4503_BOOL,aux4586_BOOL,aux4669_BOOL,aux4752_BOOL,aux4835_BOOL,aux4918_BOOL],aux4919_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[TWorkers_00005_00001_INTEGER,TWorkers_00005_00002_INTEGER,TWorkers_00005_00003_INTEGER,TWorkers_00005_00004_INTEGER,TWorkers_00005_00005_INTEGER,TWorkers_00005_00006_INTEGER,TWorkers_00005_00007_INTEGER,TWorkers_00005_00008_INTEGER,TWorkers_00005_00009_INTEGER,TWorkers_00005_00010_INTEGER,TWorkers_00005_00011_INTEGER,TWorkers_00005_00012_INTEGER,TWorkers_00005_00013_INTEGER,TWorkers_00005_00014_INTEGER,1],0,aux4920_BOOL);
constraint int_lin_eq([-1,1,1],[aux4921,1,s_00003],0);
constraint int_lt_reif(s_00005,aux4921,aux4922_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux4923_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux4924_BOOL);
constraint int_le_reif(s_00003, s_00005,aux4925_BOOL);
constraint array_bool_and([aux4922_BOOL,aux4923_BOOL,aux4924_BOOL,w_00005_00003_BOOL,aux4925_BOOL],aux4926_BOOL);
constraint int_lin_eq([-1,1,1],[aux4927,2,s_00001],0);
constraint int_lt_reif(s_00005,aux4927,aux4928_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux4929_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux4930_BOOL);
constraint int_le_reif(s_00001, s_00005,aux4931_BOOL);
constraint array_bool_and([aux4928_BOOL,aux4929_BOOL,aux4930_BOOL,w_00005_00001_BOOL,aux4931_BOOL],aux4932_BOOL);
constraint int_lin_eq([-1,1,1],[aux4933,1,s_00010],0);
constraint int_lt_reif(s_00005,aux4933,aux4934_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux4935_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux4936_BOOL);
constraint int_le_reif(s_00010, s_00005,aux4937_BOOL);
constraint array_bool_and([aux4934_BOOL,aux4935_BOOL,aux4936_BOOL,w_00005_00010_BOOL,aux4937_BOOL],aux4938_BOOL);
constraint int_lin_eq([-1,1,1],[aux4939,2,s_00004],0);
constraint int_lt_reif(s_00005,aux4939,aux4940_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux4941_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux4942_BOOL);
constraint int_le_reif(s_00004, s_00005,aux4943_BOOL);
constraint array_bool_and([aux4940_BOOL,aux4941_BOOL,aux4942_BOOL,w_00005_00004_BOOL,aux4943_BOOL],aux4944_BOOL);
constraint int_lin_eq([-1,1,1],[aux4945,2,s_00007],0);
constraint int_lt_reif(s_00005,aux4945,aux4946_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux4947_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux4948_BOOL);
constraint int_le_reif(s_00007, s_00005,aux4949_BOOL);
constraint array_bool_and([aux4946_BOOL,aux4947_BOOL,aux4948_BOOL,w_00005_00007_BOOL,aux4949_BOOL],aux4950_BOOL);
constraint int_lin_eq([-1,1,1],[aux4951,2,s_00008],0);
constraint int_lt_reif(s_00005,aux4951,aux4952_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux4953_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux4954_BOOL);
constraint int_le_reif(s_00008, s_00005,aux4955_BOOL);
constraint array_bool_and([aux4952_BOOL,aux4953_BOOL,aux4954_BOOL,w_00005_00008_BOOL,aux4955_BOOL],aux4956_BOOL);
constraint int_lin_eq([-1,1,1],[aux4957,2,s_00009],0);
constraint int_lt_reif(s_00005,aux4957,aux4958_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux4959_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux4960_BOOL);
constraint int_le_reif(s_00009, s_00005,aux4961_BOOL);
constraint array_bool_and([aux4958_BOOL,aux4959_BOOL,aux4960_BOOL,w_00005_00009_BOOL,aux4961_BOOL],aux4962_BOOL);
constraint int_lin_eq([-1,1,1],[aux4963,2,s_00011],0);
constraint int_lt_reif(s_00005,aux4963,aux4964_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux4965_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux4966_BOOL);
constraint int_le_reif(s_00011, s_00005,aux4967_BOOL);
constraint array_bool_and([aux4964_BOOL,aux4965_BOOL,aux4966_BOOL,w_00005_00011_BOOL,aux4967_BOOL],aux4968_BOOL);
constraint int_lin_eq([-1,1,1],[aux4969,3,s_00012],0);
constraint int_lt_reif(s_00005,aux4969,aux4970_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux4971_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux4972_BOOL);
constraint int_le_reif(s_00012, s_00005,aux4973_BOOL);
constraint array_bool_and([aux4970_BOOL,aux4971_BOOL,aux4972_BOOL,w_00005_00012_BOOL,aux4973_BOOL],aux4974_BOOL);
constraint int_lin_eq([-1,1,1],[aux4975,3,s_00013],0);
constraint int_lt_reif(s_00005,aux4975,aux4976_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux4977_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux4978_BOOL);
constraint int_le_reif(s_00013, s_00005,aux4979_BOOL);
constraint array_bool_and([aux4976_BOOL,aux4977_BOOL,aux4978_BOOL,w_00005_00013_BOOL,aux4979_BOOL],aux4980_BOOL);
constraint int_lin_eq([-1,1,1],[aux4981,3,s_00014],0);
constraint int_lt_reif(s_00005,aux4981,aux4982_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux4983_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux4984_BOOL);
constraint int_le_reif(s_00014, s_00005,aux4985_BOOL);
constraint array_bool_and([aux4982_BOOL,aux4983_BOOL,aux4984_BOOL,w_00005_00014_BOOL,aux4985_BOOL],aux4986_BOOL);
constraint int_lin_eq([-1,1,1],[aux4987,4,s_00006],0);
constraint int_lt_reif(s_00005,aux4987,aux4988_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux4989_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux4990_BOOL);
constraint int_le_reif(s_00006, s_00005,aux4991_BOOL);
constraint array_bool_and([aux4988_BOOL,aux4989_BOOL,aux4990_BOOL,w_00005_00006_BOOL,aux4991_BOOL],aux4992_BOOL);
constraint int_lin_eq([-1,1,1],[aux4993,6,s_00002],0);
constraint int_lt_reif(s_00005,aux4993,aux4994_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux4995_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux4996_BOOL);
constraint int_le_reif(s_00002, s_00005,aux4997_BOOL);
constraint array_bool_and([aux4994_BOOL,aux4995_BOOL,aux4996_BOOL,w_00005_00002_BOOL,aux4997_BOOL],aux4998_BOOL);
constraint int_lin_eq([-1,1,1],[aux4999,1,s_00005],0);
constraint int_lt_reif(s_00005,aux4999,aux5000_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux5001_BOOL);
constraint array_bool_and([aux5000_BOOL,aux5001_BOOL,w_00005_00005_BOOL],aux5002_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux4926_INTEGER,aux4932_INTEGER,aux4938_INTEGER,aux4944_INTEGER,aux4950_INTEGER,aux4956_INTEGER,aux4962_INTEGER,aux4968_INTEGER,aux4974_INTEGER,aux4980_INTEGER,aux4986_INTEGER,aux4992_INTEGER,aux4998_INTEGER,aux5002_INTEGER,1],0,aux5003_BOOL);
constraint int_lin_eq([-1,1,1],[aux5004,1,s_00003],0);
constraint int_lt_reif(s_00011,aux5004,aux5005_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux5006_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux5007_BOOL);
constraint int_le_reif(s_00003, s_00011,aux5008_BOOL);
constraint array_bool_and([aux5005_BOOL,aux5006_BOOL,aux5007_BOOL,w_00005_00003_BOOL,aux5008_BOOL],aux5009_BOOL);
constraint int_lin_eq([-1,1,1],[aux5010,1,s_00005],0);
constraint int_lt_reif(s_00011,aux5010,aux5011_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux5012_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux5013_BOOL);
constraint int_le_reif(s_00005, s_00011,aux5014_BOOL);
constraint array_bool_and([aux5011_BOOL,aux5012_BOOL,aux5013_BOOL,w_00005_00005_BOOL,aux5014_BOOL],aux5015_BOOL);
constraint int_lin_eq([-1,1,1],[aux5016,2,s_00001],0);
constraint int_lt_reif(s_00011,aux5016,aux5017_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux5018_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux5019_BOOL);
constraint int_le_reif(s_00001, s_00011,aux5020_BOOL);
constraint array_bool_and([aux5017_BOOL,aux5018_BOOL,aux5019_BOOL,w_00005_00001_BOOL,aux5020_BOOL],aux5021_BOOL);
constraint int_lin_eq([-1,1,1],[aux5022,2,s_00004],0);
constraint int_lt_reif(s_00011,aux5022,aux5023_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux5024_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux5025_BOOL);
constraint int_le_reif(s_00004, s_00011,aux5026_BOOL);
constraint array_bool_and([aux5023_BOOL,aux5024_BOOL,aux5025_BOOL,w_00005_00004_BOOL,aux5026_BOOL],aux5027_BOOL);
constraint int_lin_eq([-1,1,1],[aux5028,2,s_00007],0);
constraint int_lt_reif(s_00011,aux5028,aux5029_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux5030_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux5031_BOOL);
constraint int_le_reif(s_00007, s_00011,aux5032_BOOL);
constraint array_bool_and([aux5029_BOOL,aux5030_BOOL,aux5031_BOOL,w_00005_00007_BOOL,aux5032_BOOL],aux5033_BOOL);
constraint int_lin_eq([-1,1,1],[aux5034,2,s_00008],0);
constraint int_lt_reif(s_00011,aux5034,aux5035_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux5036_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux5037_BOOL);
constraint int_le_reif(s_00008, s_00011,aux5038_BOOL);
constraint array_bool_and([aux5035_BOOL,aux5036_BOOL,aux5037_BOOL,w_00005_00008_BOOL,aux5038_BOOL],aux5039_BOOL);
constraint int_lin_eq([-1,1,1],[aux5040,2,s_00009],0);
constraint int_lt_reif(s_00011,aux5040,aux5041_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux5042_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux5043_BOOL);
constraint int_le_reif(s_00009, s_00011,aux5044_BOOL);
constraint array_bool_and([aux5041_BOOL,aux5042_BOOL,aux5043_BOOL,w_00005_00009_BOOL,aux5044_BOOL],aux5045_BOOL);
constraint int_lin_eq([-1,1,1],[aux5046,1,s_00010],0);
constraint int_lt_reif(s_00011,aux5046,aux5047_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux5048_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux5049_BOOL);
constraint int_le_reif(s_00010, s_00011,aux5050_BOOL);
constraint array_bool_and([aux5047_BOOL,aux5048_BOOL,aux5049_BOOL,w_00005_00010_BOOL,aux5050_BOOL],aux5051_BOOL);
constraint int_lin_eq([-1,1,1],[aux5052,4,s_00006],0);
constraint int_lt_reif(s_00011,aux5052,aux5053_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux5054_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux5055_BOOL);
constraint int_le_reif(s_00006, s_00011,aux5056_BOOL);
constraint array_bool_and([aux5053_BOOL,aux5054_BOOL,aux5055_BOOL,w_00005_00006_BOOL,aux5056_BOOL],aux5057_BOOL);
constraint int_lin_eq([-1,1,1],[aux5058,3,s_00012],0);
constraint int_lt_reif(s_00011,aux5058,aux5059_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux5060_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux5061_BOOL);
constraint int_le_reif(s_00012, s_00011,aux5062_BOOL);
constraint array_bool_and([aux5059_BOOL,aux5060_BOOL,aux5061_BOOL,w_00005_00012_BOOL,aux5062_BOOL],aux5063_BOOL);
constraint int_lin_eq([-1,1,1],[aux5064,3,s_00013],0);
constraint int_lt_reif(s_00011,aux5064,aux5065_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux5066_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux5067_BOOL);
constraint int_le_reif(s_00013, s_00011,aux5068_BOOL);
constraint array_bool_and([aux5065_BOOL,aux5066_BOOL,aux5067_BOOL,w_00005_00013_BOOL,aux5068_BOOL],aux5069_BOOL);
constraint int_lin_eq([-1,1,1],[aux5070,3,s_00014],0);
constraint int_lt_reif(s_00011,aux5070,aux5071_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux5072_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux5073_BOOL);
constraint int_le_reif(s_00014, s_00011,aux5074_BOOL);
constraint array_bool_and([aux5071_BOOL,aux5072_BOOL,aux5073_BOOL,w_00005_00014_BOOL,aux5074_BOOL],aux5075_BOOL);
constraint int_lin_eq([-1,1,1],[aux5076,6,s_00002],0);
constraint int_lt_reif(s_00011,aux5076,aux5077_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux5078_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux5079_BOOL);
constraint int_le_reif(s_00002, s_00011,aux5080_BOOL);
constraint array_bool_and([aux5077_BOOL,aux5078_BOOL,aux5079_BOOL,w_00005_00002_BOOL,aux5080_BOOL],aux5081_BOOL);
constraint int_lin_eq([-1,1,1],[aux5082,2,s_00011],0);
constraint int_lt_reif(s_00011,aux5082,aux5083_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux5084_BOOL);
constraint array_bool_and([aux5083_BOOL,aux5084_BOOL,w_00005_00011_BOOL],aux5085_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux5009_INTEGER,aux5015_INTEGER,aux5021_INTEGER,aux5027_INTEGER,aux5033_INTEGER,aux5039_INTEGER,aux5045_INTEGER,aux5051_INTEGER,aux5057_INTEGER,aux5063_INTEGER,aux5069_INTEGER,aux5075_INTEGER,aux5081_INTEGER,aux5085_INTEGER,1],0,aux5086_BOOL);
constraint int_lin_eq([-1,1,1],[aux5087,1,s_00003],0);
constraint int_lt_reif(s_00012,aux5087,aux5088_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux5089_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux5090_BOOL);
constraint int_le_reif(s_00003, s_00012,aux5091_BOOL);
constraint array_bool_and([aux5088_BOOL,aux5089_BOOL,aux5090_BOOL,w_00005_00003_BOOL,aux5091_BOOL],aux5092_BOOL);
constraint int_lin_eq([-1,1,1],[aux5093,1,s_00005],0);
constraint int_lt_reif(s_00012,aux5093,aux5094_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux5095_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux5096_BOOL);
constraint int_le_reif(s_00005, s_00012,aux5097_BOOL);
constraint array_bool_and([aux5094_BOOL,aux5095_BOOL,aux5096_BOOL,w_00005_00005_BOOL,aux5097_BOOL],aux5098_BOOL);
constraint int_lin_eq([-1,1,1],[aux5099,2,s_00001],0);
constraint int_lt_reif(s_00012,aux5099,aux5100_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux5101_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux5102_BOOL);
constraint int_le_reif(s_00001, s_00012,aux5103_BOOL);
constraint array_bool_and([aux5100_BOOL,aux5101_BOOL,aux5102_BOOL,w_00005_00001_BOOL,aux5103_BOOL],aux5104_BOOL);
constraint int_lin_eq([-1,1,1],[aux5105,2,s_00004],0);
constraint int_lt_reif(s_00012,aux5105,aux5106_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux5107_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux5108_BOOL);
constraint int_le_reif(s_00004, s_00012,aux5109_BOOL);
constraint array_bool_and([aux5106_BOOL,aux5107_BOOL,aux5108_BOOL,w_00005_00004_BOOL,aux5109_BOOL],aux5110_BOOL);
constraint int_lin_eq([-1,1,1],[aux5111,2,s_00007],0);
constraint int_lt_reif(s_00012,aux5111,aux5112_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux5113_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux5114_BOOL);
constraint int_le_reif(s_00007, s_00012,aux5115_BOOL);
constraint array_bool_and([aux5112_BOOL,aux5113_BOOL,aux5114_BOOL,w_00005_00007_BOOL,aux5115_BOOL],aux5116_BOOL);
constraint int_lin_eq([-1,1,1],[aux5117,2,s_00008],0);
constraint int_lt_reif(s_00012,aux5117,aux5118_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux5119_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux5120_BOOL);
constraint int_le_reif(s_00008, s_00012,aux5121_BOOL);
constraint array_bool_and([aux5118_BOOL,aux5119_BOOL,aux5120_BOOL,w_00005_00008_BOOL,aux5121_BOOL],aux5122_BOOL);
constraint int_lin_eq([-1,1,1],[aux5123,2,s_00009],0);
constraint int_lt_reif(s_00012,aux5123,aux5124_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux5125_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux5126_BOOL);
constraint int_le_reif(s_00009, s_00012,aux5127_BOOL);
constraint array_bool_and([aux5124_BOOL,aux5125_BOOL,aux5126_BOOL,w_00005_00009_BOOL,aux5127_BOOL],aux5128_BOOL);
constraint int_lin_eq([-1,1,1],[aux5129,1,s_00010],0);
constraint int_lt_reif(s_00012,aux5129,aux5130_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux5131_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux5132_BOOL);
constraint int_le_reif(s_00010, s_00012,aux5133_BOOL);
constraint array_bool_and([aux5130_BOOL,aux5131_BOOL,aux5132_BOOL,w_00005_00010_BOOL,aux5133_BOOL],aux5134_BOOL);
constraint int_lin_eq([-1,1,1],[aux5135,2,s_00011],0);
constraint int_lt_reif(s_00012,aux5135,aux5136_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux5137_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux5138_BOOL);
constraint int_le_reif(s_00011, s_00012,aux5139_BOOL);
constraint array_bool_and([aux5136_BOOL,aux5137_BOOL,aux5138_BOOL,w_00005_00011_BOOL,aux5139_BOOL],aux5140_BOOL);
constraint int_lin_eq([-1,1,1],[aux5141,4,s_00006],0);
constraint int_lt_reif(s_00012,aux5141,aux5142_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux5143_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux5144_BOOL);
constraint int_le_reif(s_00006, s_00012,aux5145_BOOL);
constraint array_bool_and([aux5142_BOOL,aux5143_BOOL,aux5144_BOOL,w_00005_00006_BOOL,aux5145_BOOL],aux5146_BOOL);
constraint int_lin_eq([-1,1,1],[aux5147,3,s_00013],0);
constraint int_lt_reif(s_00012,aux5147,aux5148_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux5149_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux5150_BOOL);
constraint int_le_reif(s_00013, s_00012,aux5151_BOOL);
constraint array_bool_and([aux5148_BOOL,aux5149_BOOL,aux5150_BOOL,w_00005_00013_BOOL,aux5151_BOOL],aux5152_BOOL);
constraint int_lin_eq([-1,1,1],[aux5153,3,s_00014],0);
constraint int_lt_reif(s_00012,aux5153,aux5154_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux5155_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux5156_BOOL);
constraint int_le_reif(s_00014, s_00012,aux5157_BOOL);
constraint array_bool_and([aux5154_BOOL,aux5155_BOOL,aux5156_BOOL,w_00005_00014_BOOL,aux5157_BOOL],aux5158_BOOL);
constraint int_lin_eq([-1,1,1],[aux5159,6,s_00002],0);
constraint int_lt_reif(s_00012,aux5159,aux5160_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux5161_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux5162_BOOL);
constraint int_le_reif(s_00002, s_00012,aux5163_BOOL);
constraint array_bool_and([aux5160_BOOL,aux5161_BOOL,aux5162_BOOL,w_00005_00002_BOOL,aux5163_BOOL],aux5164_BOOL);
constraint int_lin_eq([-1,1,1],[aux5165,3,s_00012],0);
constraint int_lt_reif(s_00012,aux5165,aux5166_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux5167_BOOL);
constraint array_bool_and([aux5166_BOOL,aux5167_BOOL,w_00005_00012_BOOL],aux5168_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux5092_INTEGER,aux5098_INTEGER,aux5104_INTEGER,aux5110_INTEGER,aux5116_INTEGER,aux5122_INTEGER,aux5128_INTEGER,aux5134_INTEGER,aux5140_INTEGER,aux5146_INTEGER,aux5152_INTEGER,aux5158_INTEGER,aux5164_INTEGER,aux5168_INTEGER,1],0,aux5169_BOOL);
constraint int_lin_eq([-1,1,1],[aux5170,1,s_00003],0);
constraint int_lt_reif(s_00014,aux5170,aux5171_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux5172_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux5173_BOOL);
constraint int_le_reif(s_00003, s_00014,aux5174_BOOL);
constraint array_bool_and([aux5171_BOOL,aux5172_BOOL,aux5173_BOOL,w_00005_00003_BOOL,aux5174_BOOL],aux5175_BOOL);
constraint int_lin_eq([-1,1,1],[aux5176,1,s_00005],0);
constraint int_lt_reif(s_00014,aux5176,aux5177_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux5178_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux5179_BOOL);
constraint int_le_reif(s_00005, s_00014,aux5180_BOOL);
constraint array_bool_and([aux5177_BOOL,aux5178_BOOL,aux5179_BOOL,w_00005_00005_BOOL,aux5180_BOOL],aux5181_BOOL);
constraint int_lin_eq([-1,1,1],[aux5182,2,s_00001],0);
constraint int_lt_reif(s_00014,aux5182,aux5183_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux5184_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux5185_BOOL);
constraint int_le_reif(s_00001, s_00014,aux5186_BOOL);
constraint array_bool_and([aux5183_BOOL,aux5184_BOOL,aux5185_BOOL,w_00005_00001_BOOL,aux5186_BOOL],aux5187_BOOL);
constraint int_lin_eq([-1,1,1],[aux5188,2,s_00004],0);
constraint int_lt_reif(s_00014,aux5188,aux5189_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux5190_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux5191_BOOL);
constraint int_le_reif(s_00004, s_00014,aux5192_BOOL);
constraint array_bool_and([aux5189_BOOL,aux5190_BOOL,aux5191_BOOL,w_00005_00004_BOOL,aux5192_BOOL],aux5193_BOOL);
constraint int_lin_eq([-1,1,1],[aux5194,2,s_00007],0);
constraint int_lt_reif(s_00014,aux5194,aux5195_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux5196_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux5197_BOOL);
constraint int_le_reif(s_00007, s_00014,aux5198_BOOL);
constraint array_bool_and([aux5195_BOOL,aux5196_BOOL,aux5197_BOOL,w_00005_00007_BOOL,aux5198_BOOL],aux5199_BOOL);
constraint int_lin_eq([-1,1,1],[aux5200,2,s_00008],0);
constraint int_lt_reif(s_00014,aux5200,aux5201_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux5202_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux5203_BOOL);
constraint int_le_reif(s_00008, s_00014,aux5204_BOOL);
constraint array_bool_and([aux5201_BOOL,aux5202_BOOL,aux5203_BOOL,w_00005_00008_BOOL,aux5204_BOOL],aux5205_BOOL);
constraint int_lin_eq([-1,1,1],[aux5206,2,s_00009],0);
constraint int_lt_reif(s_00014,aux5206,aux5207_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux5208_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux5209_BOOL);
constraint int_le_reif(s_00009, s_00014,aux5210_BOOL);
constraint array_bool_and([aux5207_BOOL,aux5208_BOOL,aux5209_BOOL,w_00005_00009_BOOL,aux5210_BOOL],aux5211_BOOL);
constraint int_lin_eq([-1,1,1],[aux5212,1,s_00010],0);
constraint int_lt_reif(s_00014,aux5212,aux5213_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux5214_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux5215_BOOL);
constraint int_le_reif(s_00010, s_00014,aux5216_BOOL);
constraint array_bool_and([aux5213_BOOL,aux5214_BOOL,aux5215_BOOL,w_00005_00010_BOOL,aux5216_BOOL],aux5217_BOOL);
constraint int_lin_eq([-1,1,1],[aux5218,2,s_00011],0);
constraint int_lt_reif(s_00014,aux5218,aux5219_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux5220_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux5221_BOOL);
constraint int_le_reif(s_00011, s_00014,aux5222_BOOL);
constraint array_bool_and([aux5219_BOOL,aux5220_BOOL,aux5221_BOOL,w_00005_00011_BOOL,aux5222_BOOL],aux5223_BOOL);
constraint int_lin_eq([-1,1,1],[aux5224,4,s_00006],0);
constraint int_lt_reif(s_00014,aux5224,aux5225_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux5226_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux5227_BOOL);
constraint int_le_reif(s_00006, s_00014,aux5228_BOOL);
constraint array_bool_and([aux5225_BOOL,aux5226_BOOL,aux5227_BOOL,w_00005_00006_BOOL,aux5228_BOOL],aux5229_BOOL);
constraint int_lin_eq([-1,1,1],[aux5230,3,s_00012],0);
constraint int_lt_reif(s_00014,aux5230,aux5231_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux5232_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux5233_BOOL);
constraint int_le_reif(s_00012, s_00014,aux5234_BOOL);
constraint array_bool_and([aux5231_BOOL,aux5232_BOOL,aux5233_BOOL,w_00005_00012_BOOL,aux5234_BOOL],aux5235_BOOL);
constraint int_lin_eq([-1,1,1],[aux5236,3,s_00013],0);
constraint int_lt_reif(s_00014,aux5236,aux5237_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux5238_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux5239_BOOL);
constraint int_le_reif(s_00013, s_00014,aux5240_BOOL);
constraint array_bool_and([aux5237_BOOL,aux5238_BOOL,aux5239_BOOL,w_00005_00013_BOOL,aux5240_BOOL],aux5241_BOOL);
constraint int_lin_eq([-1,1,1],[aux5242,6,s_00002],0);
constraint int_lt_reif(s_00014,aux5242,aux5243_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux5244_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux5245_BOOL);
constraint int_le_reif(s_00002, s_00014,aux5246_BOOL);
constraint array_bool_and([aux5243_BOOL,aux5244_BOOL,aux5245_BOOL,w_00005_00002_BOOL,aux5246_BOOL],aux5247_BOOL);
constraint int_lin_eq([-1,1,1],[aux5248,3,s_00014],0);
constraint int_lt_reif(s_00014,aux5248,aux5249_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux5250_BOOL);
constraint array_bool_and([aux5249_BOOL,aux5250_BOOL,w_00005_00014_BOOL],aux5251_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux5175_INTEGER,aux5181_INTEGER,aux5187_INTEGER,aux5193_INTEGER,aux5199_INTEGER,aux5205_INTEGER,aux5211_INTEGER,aux5217_INTEGER,aux5223_INTEGER,aux5229_INTEGER,aux5235_INTEGER,aux5241_INTEGER,aux5247_INTEGER,aux5251_INTEGER,1],0,aux5252_BOOL);
constraint int_lin_eq([-1,1,1],[aux5253,1,s_00003],0);
constraint int_lt_reif(s_00001,aux5253,aux5254_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux5255_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux5256_BOOL);
constraint int_le_reif(s_00003, s_00001,aux5257_BOOL);
constraint array_bool_and([aux5254_BOOL,aux5255_BOOL,aux5256_BOOL,w_00005_00003_BOOL,aux5257_BOOL],aux5258_BOOL);
constraint int_lin_eq([-1,1,1],[aux5259,1,s_00005],0);
constraint int_lt_reif(s_00001,aux5259,aux5260_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux5261_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux5262_BOOL);
constraint int_le_reif(s_00005, s_00001,aux5263_BOOL);
constraint array_bool_and([aux5260_BOOL,aux5261_BOOL,aux5262_BOOL,w_00005_00005_BOOL,aux5263_BOOL],aux5264_BOOL);
constraint int_lin_eq([-1,1,1],[aux5265,1,s_00010],0);
constraint int_lt_reif(s_00001,aux5265,aux5266_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux5267_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux5268_BOOL);
constraint int_le_reif(s_00010, s_00001,aux5269_BOOL);
constraint array_bool_and([aux5266_BOOL,aux5267_BOOL,aux5268_BOOL,w_00005_00010_BOOL,aux5269_BOOL],aux5270_BOOL);
constraint int_lin_eq([-1,1,1],[aux5271,2,s_00004],0);
constraint int_lt_reif(s_00001,aux5271,aux5272_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux5273_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux5274_BOOL);
constraint int_le_reif(s_00004, s_00001,aux5275_BOOL);
constraint array_bool_and([aux5272_BOOL,aux5273_BOOL,aux5274_BOOL,w_00005_00004_BOOL,aux5275_BOOL],aux5276_BOOL);
constraint int_lin_eq([-1,1,1],[aux5277,2,s_00007],0);
constraint int_lt_reif(s_00001,aux5277,aux5278_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux5279_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux5280_BOOL);
constraint int_le_reif(s_00007, s_00001,aux5281_BOOL);
constraint array_bool_and([aux5278_BOOL,aux5279_BOOL,aux5280_BOOL,w_00005_00007_BOOL,aux5281_BOOL],aux5282_BOOL);
constraint int_lin_eq([-1,1,1],[aux5283,2,s_00008],0);
constraint int_lt_reif(s_00001,aux5283,aux5284_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux5285_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux5286_BOOL);
constraint int_le_reif(s_00008, s_00001,aux5287_BOOL);
constraint array_bool_and([aux5284_BOOL,aux5285_BOOL,aux5286_BOOL,w_00005_00008_BOOL,aux5287_BOOL],aux5288_BOOL);
constraint int_lin_eq([-1,1,1],[aux5289,2,s_00009],0);
constraint int_lt_reif(s_00001,aux5289,aux5290_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux5291_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux5292_BOOL);
constraint int_le_reif(s_00009, s_00001,aux5293_BOOL);
constraint array_bool_and([aux5290_BOOL,aux5291_BOOL,aux5292_BOOL,w_00005_00009_BOOL,aux5293_BOOL],aux5294_BOOL);
constraint int_lin_eq([-1,1,1],[aux5295,2,s_00011],0);
constraint int_lt_reif(s_00001,aux5295,aux5296_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux5297_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux5298_BOOL);
constraint int_le_reif(s_00011, s_00001,aux5299_BOOL);
constraint array_bool_and([aux5296_BOOL,aux5297_BOOL,aux5298_BOOL,w_00005_00011_BOOL,aux5299_BOOL],aux5300_BOOL);
constraint int_lin_eq([-1,1,1],[aux5301,3,s_00012],0);
constraint int_lt_reif(s_00001,aux5301,aux5302_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux5303_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux5304_BOOL);
constraint int_le_reif(s_00012, s_00001,aux5305_BOOL);
constraint array_bool_and([aux5302_BOOL,aux5303_BOOL,aux5304_BOOL,w_00005_00012_BOOL,aux5305_BOOL],aux5306_BOOL);
constraint int_lin_eq([-1,1,1],[aux5307,3,s_00013],0);
constraint int_lt_reif(s_00001,aux5307,aux5308_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux5309_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux5310_BOOL);
constraint int_le_reif(s_00013, s_00001,aux5311_BOOL);
constraint array_bool_and([aux5308_BOOL,aux5309_BOOL,aux5310_BOOL,w_00005_00013_BOOL,aux5311_BOOL],aux5312_BOOL);
constraint int_lin_eq([-1,1,1],[aux5313,3,s_00014],0);
constraint int_lt_reif(s_00001,aux5313,aux5314_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux5315_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux5316_BOOL);
constraint int_le_reif(s_00014, s_00001,aux5317_BOOL);
constraint array_bool_and([aux5314_BOOL,aux5315_BOOL,aux5316_BOOL,w_00005_00014_BOOL,aux5317_BOOL],aux5318_BOOL);
constraint int_lin_eq([-1,1,1],[aux5319,4,s_00006],0);
constraint int_lt_reif(s_00001,aux5319,aux5320_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux5321_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux5322_BOOL);
constraint int_le_reif(s_00006, s_00001,aux5323_BOOL);
constraint array_bool_and([aux5320_BOOL,aux5321_BOOL,aux5322_BOOL,w_00005_00006_BOOL,aux5323_BOOL],aux5324_BOOL);
constraint int_lin_eq([-1,1,1],[aux5325,6,s_00002],0);
constraint int_lt_reif(s_00001,aux5325,aux5326_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux5327_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux5328_BOOL);
constraint int_le_reif(s_00002, s_00001,aux5329_BOOL);
constraint array_bool_and([aux5326_BOOL,aux5327_BOOL,aux5328_BOOL,w_00005_00002_BOOL,aux5329_BOOL],aux5330_BOOL);
constraint int_lin_eq([-1,1,1],[aux5331,2,s_00001],0);
constraint int_lt_reif(s_00001,aux5331,aux5332_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux5333_BOOL);
constraint array_bool_and([aux5332_BOOL,aux5333_BOOL,w_00005_00001_BOOL],aux5334_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux5258_INTEGER,aux5264_INTEGER,aux5270_INTEGER,aux5276_INTEGER,aux5282_INTEGER,aux5288_INTEGER,aux5294_INTEGER,aux5300_INTEGER,aux5306_INTEGER,aux5312_INTEGER,aux5318_INTEGER,aux5324_INTEGER,aux5330_INTEGER,aux5334_INTEGER,1],0,aux5335_BOOL);
constraint int_lin_eq([-1,1,1],[aux5336,1,s_00003],0);
constraint int_lt_reif(s_00009,aux5336,aux5337_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux5338_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux5339_BOOL);
constraint int_le_reif(s_00003, s_00009,aux5340_BOOL);
constraint array_bool_and([aux5337_BOOL,aux5338_BOOL,aux5339_BOOL,w_00005_00003_BOOL,aux5340_BOOL],aux5341_BOOL);
constraint int_lin_eq([-1,1,1],[aux5342,1,s_00005],0);
constraint int_lt_reif(s_00009,aux5342,aux5343_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux5344_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux5345_BOOL);
constraint int_le_reif(s_00005, s_00009,aux5346_BOOL);
constraint array_bool_and([aux5343_BOOL,aux5344_BOOL,aux5345_BOOL,w_00005_00005_BOOL,aux5346_BOOL],aux5347_BOOL);
constraint int_lin_eq([-1,1,1],[aux5348,2,s_00001],0);
constraint int_lt_reif(s_00009,aux5348,aux5349_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux5350_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux5351_BOOL);
constraint int_le_reif(s_00001, s_00009,aux5352_BOOL);
constraint array_bool_and([aux5349_BOOL,aux5350_BOOL,aux5351_BOOL,w_00005_00001_BOOL,aux5352_BOOL],aux5353_BOOL);
constraint int_lin_eq([-1,1,1],[aux5354,2,s_00004],0);
constraint int_lt_reif(s_00009,aux5354,aux5355_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux5356_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux5357_BOOL);
constraint int_le_reif(s_00004, s_00009,aux5358_BOOL);
constraint array_bool_and([aux5355_BOOL,aux5356_BOOL,aux5357_BOOL,w_00005_00004_BOOL,aux5358_BOOL],aux5359_BOOL);
constraint int_lin_eq([-1,1,1],[aux5360,1,s_00010],0);
constraint int_lt_reif(s_00009,aux5360,aux5361_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux5362_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux5363_BOOL);
constraint int_le_reif(s_00010, s_00009,aux5364_BOOL);
constraint array_bool_and([aux5361_BOOL,aux5362_BOOL,aux5363_BOOL,w_00005_00010_BOOL,aux5364_BOOL],aux5365_BOOL);
constraint int_lin_eq([-1,1,1],[aux5366,2,s_00007],0);
constraint int_lt_reif(s_00009,aux5366,aux5367_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux5368_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux5369_BOOL);
constraint int_le_reif(s_00007, s_00009,aux5370_BOOL);
constraint array_bool_and([aux5367_BOOL,aux5368_BOOL,aux5369_BOOL,w_00005_00007_BOOL,aux5370_BOOL],aux5371_BOOL);
constraint int_lin_eq([-1,1,1],[aux5372,2,s_00008],0);
constraint int_lt_reif(s_00009,aux5372,aux5373_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux5374_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux5375_BOOL);
constraint int_le_reif(s_00008, s_00009,aux5376_BOOL);
constraint array_bool_and([aux5373_BOOL,aux5374_BOOL,aux5375_BOOL,w_00005_00008_BOOL,aux5376_BOOL],aux5377_BOOL);
constraint int_lin_eq([-1,1,1],[aux5378,2,s_00011],0);
constraint int_lt_reif(s_00009,aux5378,aux5379_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux5380_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux5381_BOOL);
constraint int_le_reif(s_00011, s_00009,aux5382_BOOL);
constraint array_bool_and([aux5379_BOOL,aux5380_BOOL,aux5381_BOOL,w_00005_00011_BOOL,aux5382_BOOL],aux5383_BOOL);
constraint int_lin_eq([-1,1,1],[aux5384,3,s_00012],0);
constraint int_lt_reif(s_00009,aux5384,aux5385_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux5386_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux5387_BOOL);
constraint int_le_reif(s_00012, s_00009,aux5388_BOOL);
constraint array_bool_and([aux5385_BOOL,aux5386_BOOL,aux5387_BOOL,w_00005_00012_BOOL,aux5388_BOOL],aux5389_BOOL);
constraint int_lin_eq([-1,1,1],[aux5390,4,s_00006],0);
constraint int_lt_reif(s_00009,aux5390,aux5391_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux5392_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux5393_BOOL);
constraint int_le_reif(s_00006, s_00009,aux5394_BOOL);
constraint array_bool_and([aux5391_BOOL,aux5392_BOOL,aux5393_BOOL,w_00005_00006_BOOL,aux5394_BOOL],aux5395_BOOL);
constraint int_lin_eq([-1,1,1],[aux5396,3,s_00013],0);
constraint int_lt_reif(s_00009,aux5396,aux5397_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux5398_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux5399_BOOL);
constraint int_le_reif(s_00013, s_00009,aux5400_BOOL);
constraint array_bool_and([aux5397_BOOL,aux5398_BOOL,aux5399_BOOL,w_00005_00013_BOOL,aux5400_BOOL],aux5401_BOOL);
constraint int_lin_eq([-1,1,1],[aux5402,3,s_00014],0);
constraint int_lt_reif(s_00009,aux5402,aux5403_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux5404_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux5405_BOOL);
constraint int_le_reif(s_00014, s_00009,aux5406_BOOL);
constraint array_bool_and([aux5403_BOOL,aux5404_BOOL,aux5405_BOOL,w_00005_00014_BOOL,aux5406_BOOL],aux5407_BOOL);
constraint int_lin_eq([-1,1,1],[aux5408,6,s_00002],0);
constraint int_lt_reif(s_00009,aux5408,aux5409_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux5410_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux5411_BOOL);
constraint int_le_reif(s_00002, s_00009,aux5412_BOOL);
constraint array_bool_and([aux5409_BOOL,aux5410_BOOL,aux5411_BOOL,w_00005_00002_BOOL,aux5412_BOOL],aux5413_BOOL);
constraint int_lin_eq([-1,1,1],[aux5414,2,s_00009],0);
constraint int_lt_reif(s_00009,aux5414,aux5415_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux5416_BOOL);
constraint array_bool_and([aux5415_BOOL,aux5416_BOOL,w_00005_00009_BOOL],aux5417_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux5341_INTEGER,aux5347_INTEGER,aux5353_INTEGER,aux5359_INTEGER,aux5365_INTEGER,aux5371_INTEGER,aux5377_INTEGER,aux5383_INTEGER,aux5389_INTEGER,aux5395_INTEGER,aux5401_INTEGER,aux5407_INTEGER,aux5413_INTEGER,aux5417_INTEGER,1],0,aux5418_BOOL);
constraint int_lin_eq([-1,1,1],[aux5419,1,s_00003],0);
constraint int_lt_reif(s_00007,aux5419,aux5420_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux5421_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux5422_BOOL);
constraint int_le_reif(s_00003, s_00007,aux5423_BOOL);
constraint array_bool_and([aux5420_BOOL,aux5421_BOOL,aux5422_BOOL,w_00005_00003_BOOL,aux5423_BOOL],aux5424_BOOL);
constraint int_lin_eq([-1,1,1],[aux5425,1,s_00005],0);
constraint int_lt_reif(s_00007,aux5425,aux5426_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux5427_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux5428_BOOL);
constraint int_le_reif(s_00005, s_00007,aux5429_BOOL);
constraint array_bool_and([aux5426_BOOL,aux5427_BOOL,aux5428_BOOL,w_00005_00005_BOOL,aux5429_BOOL],aux5430_BOOL);
constraint int_lin_eq([-1,1,1],[aux5431,2,s_00001],0);
constraint int_lt_reif(s_00007,aux5431,aux5432_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux5433_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux5434_BOOL);
constraint int_le_reif(s_00001, s_00007,aux5435_BOOL);
constraint array_bool_and([aux5432_BOOL,aux5433_BOOL,aux5434_BOOL,w_00005_00001_BOOL,aux5435_BOOL],aux5436_BOOL);
constraint int_lin_eq([-1,1,1],[aux5437,1,s_00010],0);
constraint int_lt_reif(s_00007,aux5437,aux5438_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux5439_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux5440_BOOL);
constraint int_le_reif(s_00010, s_00007,aux5441_BOOL);
constraint array_bool_and([aux5438_BOOL,aux5439_BOOL,aux5440_BOOL,w_00005_00010_BOOL,aux5441_BOOL],aux5442_BOOL);
constraint int_lin_eq([-1,1,1],[aux5443,2,s_00004],0);
constraint int_lt_reif(s_00007,aux5443,aux5444_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux5445_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux5446_BOOL);
constraint int_le_reif(s_00004, s_00007,aux5447_BOOL);
constraint array_bool_and([aux5444_BOOL,aux5445_BOOL,aux5446_BOOL,w_00005_00004_BOOL,aux5447_BOOL],aux5448_BOOL);
constraint int_lin_eq([-1,1,1],[aux5449,2,s_00008],0);
constraint int_lt_reif(s_00007,aux5449,aux5450_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux5451_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux5452_BOOL);
constraint int_le_reif(s_00008, s_00007,aux5453_BOOL);
constraint array_bool_and([aux5450_BOOL,aux5451_BOOL,aux5452_BOOL,w_00005_00008_BOOL,aux5453_BOOL],aux5454_BOOL);
constraint int_lin_eq([-1,1,1],[aux5455,2,s_00009],0);
constraint int_lt_reif(s_00007,aux5455,aux5456_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux5457_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux5458_BOOL);
constraint int_le_reif(s_00009, s_00007,aux5459_BOOL);
constraint array_bool_and([aux5456_BOOL,aux5457_BOOL,aux5458_BOOL,w_00005_00009_BOOL,aux5459_BOOL],aux5460_BOOL);
constraint int_lin_eq([-1,1,1],[aux5461,2,s_00011],0);
constraint int_lt_reif(s_00007,aux5461,aux5462_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux5463_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux5464_BOOL);
constraint int_le_reif(s_00011, s_00007,aux5465_BOOL);
constraint array_bool_and([aux5462_BOOL,aux5463_BOOL,aux5464_BOOL,w_00005_00011_BOOL,aux5465_BOOL],aux5466_BOOL);
constraint int_lin_eq([-1,1,1],[aux5467,3,s_00012],0);
constraint int_lt_reif(s_00007,aux5467,aux5468_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux5469_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux5470_BOOL);
constraint int_le_reif(s_00012, s_00007,aux5471_BOOL);
constraint array_bool_and([aux5468_BOOL,aux5469_BOOL,aux5470_BOOL,w_00005_00012_BOOL,aux5471_BOOL],aux5472_BOOL);
constraint int_lin_eq([-1,1,1],[aux5473,3,s_00013],0);
constraint int_lt_reif(s_00007,aux5473,aux5474_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux5475_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux5476_BOOL);
constraint int_le_reif(s_00013, s_00007,aux5477_BOOL);
constraint array_bool_and([aux5474_BOOL,aux5475_BOOL,aux5476_BOOL,w_00005_00013_BOOL,aux5477_BOOL],aux5478_BOOL);
constraint int_lin_eq([-1,1,1],[aux5479,3,s_00014],0);
constraint int_lt_reif(s_00007,aux5479,aux5480_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux5481_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux5482_BOOL);
constraint int_le_reif(s_00014, s_00007,aux5483_BOOL);
constraint array_bool_and([aux5480_BOOL,aux5481_BOOL,aux5482_BOOL,w_00005_00014_BOOL,aux5483_BOOL],aux5484_BOOL);
constraint int_lin_eq([-1,1,1],[aux5485,4,s_00006],0);
constraint int_lt_reif(s_00007,aux5485,aux5486_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux5487_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux5488_BOOL);
constraint int_le_reif(s_00006, s_00007,aux5489_BOOL);
constraint array_bool_and([aux5486_BOOL,aux5487_BOOL,aux5488_BOOL,w_00005_00006_BOOL,aux5489_BOOL],aux5490_BOOL);
constraint int_lin_eq([-1,1,1],[aux5491,6,s_00002],0);
constraint int_lt_reif(s_00007,aux5491,aux5492_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux5493_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux5494_BOOL);
constraint int_le_reif(s_00002, s_00007,aux5495_BOOL);
constraint array_bool_and([aux5492_BOOL,aux5493_BOOL,aux5494_BOOL,w_00005_00002_BOOL,aux5495_BOOL],aux5496_BOOL);
constraint int_lin_eq([-1,1,1],[aux5497,2,s_00007],0);
constraint int_lt_reif(s_00007,aux5497,aux5498_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux5499_BOOL);
constraint array_bool_and([aux5498_BOOL,aux5499_BOOL,w_00005_00007_BOOL],aux5500_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux5424_INTEGER,aux5430_INTEGER,aux5436_INTEGER,aux5442_INTEGER,aux5448_INTEGER,aux5454_INTEGER,aux5460_INTEGER,aux5466_INTEGER,aux5472_INTEGER,aux5478_INTEGER,aux5484_INTEGER,aux5490_INTEGER,aux5496_INTEGER,aux5500_INTEGER,1],0,aux5501_BOOL);
constraint int_lin_eq([-1,1,1],[aux5502,1,s_00003],0);
constraint int_lt_reif(s_00008,aux5502,aux5503_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux5504_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux5505_BOOL);
constraint int_le_reif(s_00003, s_00008,aux5506_BOOL);
constraint array_bool_and([aux5503_BOOL,aux5504_BOOL,aux5505_BOOL,w_00005_00003_BOOL,aux5506_BOOL],aux5507_BOOL);
constraint int_lin_eq([-1,1,1],[aux5508,1,s_00005],0);
constraint int_lt_reif(s_00008,aux5508,aux5509_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux5510_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux5511_BOOL);
constraint int_le_reif(s_00005, s_00008,aux5512_BOOL);
constraint array_bool_and([aux5509_BOOL,aux5510_BOOL,aux5511_BOOL,w_00005_00005_BOOL,aux5512_BOOL],aux5513_BOOL);
constraint int_lin_eq([-1,1,1],[aux5514,2,s_00001],0);
constraint int_lt_reif(s_00008,aux5514,aux5515_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux5516_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux5517_BOOL);
constraint int_le_reif(s_00001, s_00008,aux5518_BOOL);
constraint array_bool_and([aux5515_BOOL,aux5516_BOOL,aux5517_BOOL,w_00005_00001_BOOL,aux5518_BOOL],aux5519_BOOL);
constraint int_lin_eq([-1,1,1],[aux5520,2,s_00004],0);
constraint int_lt_reif(s_00008,aux5520,aux5521_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux5522_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux5523_BOOL);
constraint int_le_reif(s_00004, s_00008,aux5524_BOOL);
constraint array_bool_and([aux5521_BOOL,aux5522_BOOL,aux5523_BOOL,w_00005_00004_BOOL,aux5524_BOOL],aux5525_BOOL);
constraint int_lin_eq([-1,1,1],[aux5526,1,s_00010],0);
constraint int_lt_reif(s_00008,aux5526,aux5527_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux5528_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux5529_BOOL);
constraint int_le_reif(s_00010, s_00008,aux5530_BOOL);
constraint array_bool_and([aux5527_BOOL,aux5528_BOOL,aux5529_BOOL,w_00005_00010_BOOL,aux5530_BOOL],aux5531_BOOL);
constraint int_lin_eq([-1,1,1],[aux5532,2,s_00007],0);
constraint int_lt_reif(s_00008,aux5532,aux5533_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux5534_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux5535_BOOL);
constraint int_le_reif(s_00007, s_00008,aux5536_BOOL);
constraint array_bool_and([aux5533_BOOL,aux5534_BOOL,aux5535_BOOL,w_00005_00007_BOOL,aux5536_BOOL],aux5537_BOOL);
constraint int_lin_eq([-1,1,1],[aux5538,2,s_00009],0);
constraint int_lt_reif(s_00008,aux5538,aux5539_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux5540_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux5541_BOOL);
constraint int_le_reif(s_00009, s_00008,aux5542_BOOL);
constraint array_bool_and([aux5539_BOOL,aux5540_BOOL,aux5541_BOOL,w_00005_00009_BOOL,aux5542_BOOL],aux5543_BOOL);
constraint int_lin_eq([-1,1,1],[aux5544,2,s_00011],0);
constraint int_lt_reif(s_00008,aux5544,aux5545_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux5546_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux5547_BOOL);
constraint int_le_reif(s_00011, s_00008,aux5548_BOOL);
constraint array_bool_and([aux5545_BOOL,aux5546_BOOL,aux5547_BOOL,w_00005_00011_BOOL,aux5548_BOOL],aux5549_BOOL);
constraint int_lin_eq([-1,1,1],[aux5550,3,s_00012],0);
constraint int_lt_reif(s_00008,aux5550,aux5551_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux5552_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux5553_BOOL);
constraint int_le_reif(s_00012, s_00008,aux5554_BOOL);
constraint array_bool_and([aux5551_BOOL,aux5552_BOOL,aux5553_BOOL,w_00005_00012_BOOL,aux5554_BOOL],aux5555_BOOL);
constraint int_lin_eq([-1,1,1],[aux5556,3,s_00013],0);
constraint int_lt_reif(s_00008,aux5556,aux5557_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux5558_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux5559_BOOL);
constraint int_le_reif(s_00013, s_00008,aux5560_BOOL);
constraint array_bool_and([aux5557_BOOL,aux5558_BOOL,aux5559_BOOL,w_00005_00013_BOOL,aux5560_BOOL],aux5561_BOOL);
constraint int_lin_eq([-1,1,1],[aux5562,4,s_00006],0);
constraint int_lt_reif(s_00008,aux5562,aux5563_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux5564_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux5565_BOOL);
constraint int_le_reif(s_00006, s_00008,aux5566_BOOL);
constraint array_bool_and([aux5563_BOOL,aux5564_BOOL,aux5565_BOOL,w_00005_00006_BOOL,aux5566_BOOL],aux5567_BOOL);
constraint int_lin_eq([-1,1,1],[aux5568,3,s_00014],0);
constraint int_lt_reif(s_00008,aux5568,aux5569_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux5570_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux5571_BOOL);
constraint int_le_reif(s_00014, s_00008,aux5572_BOOL);
constraint array_bool_and([aux5569_BOOL,aux5570_BOOL,aux5571_BOOL,w_00005_00014_BOOL,aux5572_BOOL],aux5573_BOOL);
constraint int_lin_eq([-1,1,1],[aux5574,6,s_00002],0);
constraint int_lt_reif(s_00008,aux5574,aux5575_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux5576_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux5577_BOOL);
constraint int_le_reif(s_00002, s_00008,aux5578_BOOL);
constraint array_bool_and([aux5575_BOOL,aux5576_BOOL,aux5577_BOOL,w_00005_00002_BOOL,aux5578_BOOL],aux5579_BOOL);
constraint int_lin_eq([-1,1,1],[aux5580,2,s_00008],0);
constraint int_lt_reif(s_00008,aux5580,aux5581_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux5582_BOOL);
constraint array_bool_and([aux5581_BOOL,aux5582_BOOL,w_00005_00008_BOOL],aux5583_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux5507_INTEGER,aux5513_INTEGER,aux5519_INTEGER,aux5525_INTEGER,aux5531_INTEGER,aux5537_INTEGER,aux5543_INTEGER,aux5549_INTEGER,aux5555_INTEGER,aux5561_INTEGER,aux5567_INTEGER,aux5573_INTEGER,aux5579_INTEGER,aux5583_INTEGER,1],0,aux5584_BOOL);
constraint int_lin_eq([-1,1,1],[aux5585,1,s_00003],0);
constraint int_lt_reif(s_00006,aux5585,aux5586_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux5587_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux5588_BOOL);
constraint int_le_reif(s_00003, s_00006,aux5589_BOOL);
constraint array_bool_and([aux5586_BOOL,aux5587_BOOL,aux5588_BOOL,w_00005_00003_BOOL,aux5589_BOOL],aux5590_BOOL);
constraint int_lin_eq([-1,1,1],[aux5591,1,s_00005],0);
constraint int_lt_reif(s_00006,aux5591,aux5592_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux5593_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux5594_BOOL);
constraint int_le_reif(s_00005, s_00006,aux5595_BOOL);
constraint array_bool_and([aux5592_BOOL,aux5593_BOOL,aux5594_BOOL,w_00005_00005_BOOL,aux5595_BOOL],aux5596_BOOL);
constraint int_lin_eq([-1,1,1],[aux5597,2,s_00001],0);
constraint int_lt_reif(s_00006,aux5597,aux5598_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux5599_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux5600_BOOL);
constraint int_le_reif(s_00001, s_00006,aux5601_BOOL);
constraint array_bool_and([aux5598_BOOL,aux5599_BOOL,aux5600_BOOL,w_00005_00001_BOOL,aux5601_BOOL],aux5602_BOOL);
constraint int_lin_eq([-1,1,1],[aux5603,1,s_00010],0);
constraint int_lt_reif(s_00006,aux5603,aux5604_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux5605_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux5606_BOOL);
constraint int_le_reif(s_00010, s_00006,aux5607_BOOL);
constraint array_bool_and([aux5604_BOOL,aux5605_BOOL,aux5606_BOOL,w_00005_00010_BOOL,aux5607_BOOL],aux5608_BOOL);
constraint int_lin_eq([-1,1,1],[aux5609,2,s_00004],0);
constraint int_lt_reif(s_00006,aux5609,aux5610_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux5611_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux5612_BOOL);
constraint int_le_reif(s_00004, s_00006,aux5613_BOOL);
constraint array_bool_and([aux5610_BOOL,aux5611_BOOL,aux5612_BOOL,w_00005_00004_BOOL,aux5613_BOOL],aux5614_BOOL);
constraint int_lin_eq([-1,1,1],[aux5615,2,s_00007],0);
constraint int_lt_reif(s_00006,aux5615,aux5616_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux5617_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux5618_BOOL);
constraint int_le_reif(s_00007, s_00006,aux5619_BOOL);
constraint array_bool_and([aux5616_BOOL,aux5617_BOOL,aux5618_BOOL,w_00005_00007_BOOL,aux5619_BOOL],aux5620_BOOL);
constraint int_lin_eq([-1,1,1],[aux5621,2,s_00008],0);
constraint int_lt_reif(s_00006,aux5621,aux5622_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux5623_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux5624_BOOL);
constraint int_le_reif(s_00008, s_00006,aux5625_BOOL);
constraint array_bool_and([aux5622_BOOL,aux5623_BOOL,aux5624_BOOL,w_00005_00008_BOOL,aux5625_BOOL],aux5626_BOOL);
constraint int_lin_eq([-1,1,1],[aux5627,2,s_00009],0);
constraint int_lt_reif(s_00006,aux5627,aux5628_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux5629_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux5630_BOOL);
constraint int_le_reif(s_00009, s_00006,aux5631_BOOL);
constraint array_bool_and([aux5628_BOOL,aux5629_BOOL,aux5630_BOOL,w_00005_00009_BOOL,aux5631_BOOL],aux5632_BOOL);
constraint int_lin_eq([-1,1,1],[aux5633,2,s_00011],0);
constraint int_lt_reif(s_00006,aux5633,aux5634_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux5635_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux5636_BOOL);
constraint int_le_reif(s_00011, s_00006,aux5637_BOOL);
constraint array_bool_and([aux5634_BOOL,aux5635_BOOL,aux5636_BOOL,w_00005_00011_BOOL,aux5637_BOOL],aux5638_BOOL);
constraint int_lin_eq([-1,1,1],[aux5639,3,s_00012],0);
constraint int_lt_reif(s_00006,aux5639,aux5640_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux5641_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux5642_BOOL);
constraint int_le_reif(s_00012, s_00006,aux5643_BOOL);
constraint array_bool_and([aux5640_BOOL,aux5641_BOOL,aux5642_BOOL,w_00005_00012_BOOL,aux5643_BOOL],aux5644_BOOL);
constraint int_lin_eq([-1,1,1],[aux5645,3,s_00013],0);
constraint int_lt_reif(s_00006,aux5645,aux5646_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux5647_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux5648_BOOL);
constraint int_le_reif(s_00013, s_00006,aux5649_BOOL);
constraint array_bool_and([aux5646_BOOL,aux5647_BOOL,aux5648_BOOL,w_00005_00013_BOOL,aux5649_BOOL],aux5650_BOOL);
constraint int_lin_eq([-1,1,1],[aux5651,3,s_00014],0);
constraint int_lt_reif(s_00006,aux5651,aux5652_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux5653_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux5654_BOOL);
constraint int_le_reif(s_00014, s_00006,aux5655_BOOL);
constraint array_bool_and([aux5652_BOOL,aux5653_BOOL,aux5654_BOOL,w_00005_00014_BOOL,aux5655_BOOL],aux5656_BOOL);
constraint int_lin_eq([-1,1,1],[aux5657,6,s_00002],0);
constraint int_lt_reif(s_00006,aux5657,aux5658_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux5659_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux5660_BOOL);
constraint int_le_reif(s_00002, s_00006,aux5661_BOOL);
constraint array_bool_and([aux5658_BOOL,aux5659_BOOL,aux5660_BOOL,w_00005_00002_BOOL,aux5661_BOOL],aux5662_BOOL);
constraint int_lin_eq([-1,1,1],[aux5663,4,s_00006],0);
constraint int_lt_reif(s_00006,aux5663,aux5664_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux5665_BOOL);
constraint array_bool_and([aux5664_BOOL,aux5665_BOOL,w_00005_00006_BOOL],aux5666_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux5590_INTEGER,aux5596_INTEGER,aux5602_INTEGER,aux5608_INTEGER,aux5614_INTEGER,aux5620_INTEGER,aux5626_INTEGER,aux5632_INTEGER,aux5638_INTEGER,aux5644_INTEGER,aux5650_INTEGER,aux5656_INTEGER,aux5662_INTEGER,aux5666_INTEGER,1],0,aux5667_BOOL);
constraint int_lin_eq([-1,1,1],[aux5668,1,s_00005],0);
constraint int_lt_reif(s_00003,aux5668,aux5669_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux5670_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux5671_BOOL);
constraint int_le_reif(s_00005, s_00003,aux5672_BOOL);
constraint array_bool_and([aux5669_BOOL,aux5670_BOOL,aux5671_BOOL,w_00005_00005_BOOL,aux5672_BOOL],aux5673_BOOL);
constraint int_lin_eq([-1,1,1],[aux5674,2,s_00001],0);
constraint int_lt_reif(s_00003,aux5674,aux5675_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux5676_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux5677_BOOL);
constraint int_le_reif(s_00001, s_00003,aux5678_BOOL);
constraint array_bool_and([aux5675_BOOL,aux5676_BOOL,aux5677_BOOL,w_00005_00001_BOOL,aux5678_BOOL],aux5679_BOOL);
constraint int_lin_eq([-1,1,1],[aux5680,1,s_00010],0);
constraint int_lt_reif(s_00003,aux5680,aux5681_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux5682_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux5683_BOOL);
constraint int_le_reif(s_00010, s_00003,aux5684_BOOL);
constraint array_bool_and([aux5681_BOOL,aux5682_BOOL,aux5683_BOOL,w_00005_00010_BOOL,aux5684_BOOL],aux5685_BOOL);
constraint int_lin_eq([-1,1,1],[aux5686,2,s_00004],0);
constraint int_lt_reif(s_00003,aux5686,aux5687_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux5688_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux5689_BOOL);
constraint int_le_reif(s_00004, s_00003,aux5690_BOOL);
constraint array_bool_and([aux5687_BOOL,aux5688_BOOL,aux5689_BOOL,w_00005_00004_BOOL,aux5690_BOOL],aux5691_BOOL);
constraint int_lin_eq([-1,1,1],[aux5692,2,s_00007],0);
constraint int_lt_reif(s_00003,aux5692,aux5693_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux5694_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux5695_BOOL);
constraint int_le_reif(s_00007, s_00003,aux5696_BOOL);
constraint array_bool_and([aux5693_BOOL,aux5694_BOOL,aux5695_BOOL,w_00005_00007_BOOL,aux5696_BOOL],aux5697_BOOL);
constraint int_lin_eq([-1,1,1],[aux5698,2,s_00008],0);
constraint int_lt_reif(s_00003,aux5698,aux5699_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux5700_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux5701_BOOL);
constraint int_le_reif(s_00008, s_00003,aux5702_BOOL);
constraint array_bool_and([aux5699_BOOL,aux5700_BOOL,aux5701_BOOL,w_00005_00008_BOOL,aux5702_BOOL],aux5703_BOOL);
constraint int_lin_eq([-1,1,1],[aux5704,2,s_00009],0);
constraint int_lt_reif(s_00003,aux5704,aux5705_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux5706_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux5707_BOOL);
constraint int_le_reif(s_00009, s_00003,aux5708_BOOL);
constraint array_bool_and([aux5705_BOOL,aux5706_BOOL,aux5707_BOOL,w_00005_00009_BOOL,aux5708_BOOL],aux5709_BOOL);
constraint int_lin_eq([-1,1,1],[aux5710,2,s_00011],0);
constraint int_lt_reif(s_00003,aux5710,aux5711_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux5712_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux5713_BOOL);
constraint int_le_reif(s_00011, s_00003,aux5714_BOOL);
constraint array_bool_and([aux5711_BOOL,aux5712_BOOL,aux5713_BOOL,w_00005_00011_BOOL,aux5714_BOOL],aux5715_BOOL);
constraint int_lin_eq([-1,1,1],[aux5716,3,s_00012],0);
constraint int_lt_reif(s_00003,aux5716,aux5717_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux5718_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux5719_BOOL);
constraint int_le_reif(s_00012, s_00003,aux5720_BOOL);
constraint array_bool_and([aux5717_BOOL,aux5718_BOOL,aux5719_BOOL,w_00005_00012_BOOL,aux5720_BOOL],aux5721_BOOL);
constraint int_lin_eq([-1,1,1],[aux5722,3,s_00013],0);
constraint int_lt_reif(s_00003,aux5722,aux5723_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux5724_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux5725_BOOL);
constraint int_le_reif(s_00013, s_00003,aux5726_BOOL);
constraint array_bool_and([aux5723_BOOL,aux5724_BOOL,aux5725_BOOL,w_00005_00013_BOOL,aux5726_BOOL],aux5727_BOOL);
constraint int_lin_eq([-1,1,1],[aux5728,3,s_00014],0);
constraint int_lt_reif(s_00003,aux5728,aux5729_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux5730_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux5731_BOOL);
constraint int_le_reif(s_00014, s_00003,aux5732_BOOL);
constraint array_bool_and([aux5729_BOOL,aux5730_BOOL,aux5731_BOOL,w_00005_00014_BOOL,aux5732_BOOL],aux5733_BOOL);
constraint int_lin_eq([-1,1,1],[aux5734,4,s_00006],0);
constraint int_lt_reif(s_00003,aux5734,aux5735_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux5736_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux5737_BOOL);
constraint int_le_reif(s_00006, s_00003,aux5738_BOOL);
constraint array_bool_and([aux5735_BOOL,aux5736_BOOL,aux5737_BOOL,w_00005_00006_BOOL,aux5738_BOOL],aux5739_BOOL);
constraint int_lin_eq([-1,1,1],[aux5740,6,s_00002],0);
constraint int_lt_reif(s_00003,aux5740,aux5741_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux5742_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux5743_BOOL);
constraint int_le_reif(s_00002, s_00003,aux5744_BOOL);
constraint array_bool_and([aux5741_BOOL,aux5742_BOOL,aux5743_BOOL,w_00005_00002_BOOL,aux5744_BOOL],aux5745_BOOL);
constraint int_lin_eq([-1,1,1],[aux5746,1,s_00003],0);
constraint int_lt_reif(s_00003,aux5746,aux5747_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux5748_BOOL);
constraint array_bool_and([aux5747_BOOL,aux5748_BOOL,w_00005_00003_BOOL],aux5749_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux5673_INTEGER,aux5679_INTEGER,aux5685_INTEGER,aux5691_INTEGER,aux5697_INTEGER,aux5703_INTEGER,aux5709_INTEGER,aux5715_INTEGER,aux5721_INTEGER,aux5727_INTEGER,aux5733_INTEGER,aux5739_INTEGER,aux5745_INTEGER,aux5749_INTEGER,1],0,aux5750_BOOL);
constraint int_lin_eq([-1,1,1],[aux5751,1,s_00003],0);
constraint int_lt_reif(s_00002,aux5751,aux5752_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux5753_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux5754_BOOL);
constraint int_le_reif(s_00003, s_00002,aux5755_BOOL);
constraint array_bool_and([aux5752_BOOL,aux5753_BOOL,aux5754_BOOL,w_00005_00003_BOOL,aux5755_BOOL],aux5756_BOOL);
constraint int_lin_eq([-1,1,1],[aux5757,1,s_00005],0);
constraint int_lt_reif(s_00002,aux5757,aux5758_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux5759_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux5760_BOOL);
constraint int_le_reif(s_00005, s_00002,aux5761_BOOL);
constraint array_bool_and([aux5758_BOOL,aux5759_BOOL,aux5760_BOOL,w_00005_00005_BOOL,aux5761_BOOL],aux5762_BOOL);
constraint int_lin_eq([-1,1,1],[aux5763,2,s_00001],0);
constraint int_lt_reif(s_00002,aux5763,aux5764_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux5765_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux5766_BOOL);
constraint int_le_reif(s_00001, s_00002,aux5767_BOOL);
constraint array_bool_and([aux5764_BOOL,aux5765_BOOL,aux5766_BOOL,w_00005_00001_BOOL,aux5767_BOOL],aux5768_BOOL);
constraint int_lin_eq([-1,1,1],[aux5769,1,s_00010],0);
constraint int_lt_reif(s_00002,aux5769,aux5770_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux5771_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux5772_BOOL);
constraint int_le_reif(s_00010, s_00002,aux5773_BOOL);
constraint array_bool_and([aux5770_BOOL,aux5771_BOOL,aux5772_BOOL,w_00005_00010_BOOL,aux5773_BOOL],aux5774_BOOL);
constraint int_lin_eq([-1,1,1],[aux5775,2,s_00004],0);
constraint int_lt_reif(s_00002,aux5775,aux5776_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux5777_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux5778_BOOL);
constraint int_le_reif(s_00004, s_00002,aux5779_BOOL);
constraint array_bool_and([aux5776_BOOL,aux5777_BOOL,aux5778_BOOL,w_00005_00004_BOOL,aux5779_BOOL],aux5780_BOOL);
constraint int_lin_eq([-1,1,1],[aux5781,2,s_00007],0);
constraint int_lt_reif(s_00002,aux5781,aux5782_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux5783_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux5784_BOOL);
constraint int_le_reif(s_00007, s_00002,aux5785_BOOL);
constraint array_bool_and([aux5782_BOOL,aux5783_BOOL,aux5784_BOOL,w_00005_00007_BOOL,aux5785_BOOL],aux5786_BOOL);
constraint int_lin_eq([-1,1,1],[aux5787,2,s_00008],0);
constraint int_lt_reif(s_00002,aux5787,aux5788_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux5789_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux5790_BOOL);
constraint int_le_reif(s_00008, s_00002,aux5791_BOOL);
constraint array_bool_and([aux5788_BOOL,aux5789_BOOL,aux5790_BOOL,w_00005_00008_BOOL,aux5791_BOOL],aux5792_BOOL);
constraint int_lin_eq([-1,1,1],[aux5793,2,s_00009],0);
constraint int_lt_reif(s_00002,aux5793,aux5794_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux5795_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux5796_BOOL);
constraint int_le_reif(s_00009, s_00002,aux5797_BOOL);
constraint array_bool_and([aux5794_BOOL,aux5795_BOOL,aux5796_BOOL,w_00005_00009_BOOL,aux5797_BOOL],aux5798_BOOL);
constraint int_lin_eq([-1,1,1],[aux5799,2,s_00011],0);
constraint int_lt_reif(s_00002,aux5799,aux5800_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux5801_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux5802_BOOL);
constraint int_le_reif(s_00011, s_00002,aux5803_BOOL);
constraint array_bool_and([aux5800_BOOL,aux5801_BOOL,aux5802_BOOL,w_00005_00011_BOOL,aux5803_BOOL],aux5804_BOOL);
constraint int_lin_eq([-1,1,1],[aux5805,3,s_00012],0);
constraint int_lt_reif(s_00002,aux5805,aux5806_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux5807_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux5808_BOOL);
constraint int_le_reif(s_00012, s_00002,aux5809_BOOL);
constraint array_bool_and([aux5806_BOOL,aux5807_BOOL,aux5808_BOOL,w_00005_00012_BOOL,aux5809_BOOL],aux5810_BOOL);
constraint int_lin_eq([-1,1,1],[aux5811,3,s_00013],0);
constraint int_lt_reif(s_00002,aux5811,aux5812_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux5813_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux5814_BOOL);
constraint int_le_reif(s_00013, s_00002,aux5815_BOOL);
constraint array_bool_and([aux5812_BOOL,aux5813_BOOL,aux5814_BOOL,w_00005_00013_BOOL,aux5815_BOOL],aux5816_BOOL);
constraint int_lin_eq([-1,1,1],[aux5817,3,s_00014],0);
constraint int_lt_reif(s_00002,aux5817,aux5818_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux5819_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux5820_BOOL);
constraint int_le_reif(s_00014, s_00002,aux5821_BOOL);
constraint array_bool_and([aux5818_BOOL,aux5819_BOOL,aux5820_BOOL,w_00005_00014_BOOL,aux5821_BOOL],aux5822_BOOL);
constraint int_lin_eq([-1,1,1],[aux5823,4,s_00006],0);
constraint int_lt_reif(s_00002,aux5823,aux5824_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux5825_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux5826_BOOL);
constraint int_le_reif(s_00006, s_00002,aux5827_BOOL);
constraint array_bool_and([aux5824_BOOL,aux5825_BOOL,aux5826_BOOL,w_00005_00006_BOOL,aux5827_BOOL],aux5828_BOOL);
constraint int_lin_eq([-1,1,1],[aux5829,6,s_00002],0);
constraint int_lt_reif(s_00002,aux5829,aux5830_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux5831_BOOL);
constraint array_bool_and([aux5830_BOOL,aux5831_BOOL,w_00005_00002_BOOL],aux5832_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux5756_INTEGER,aux5762_INTEGER,aux5768_INTEGER,aux5774_INTEGER,aux5780_INTEGER,aux5786_INTEGER,aux5792_INTEGER,aux5798_INTEGER,aux5804_INTEGER,aux5810_INTEGER,aux5816_INTEGER,aux5822_INTEGER,aux5828_INTEGER,aux5832_INTEGER,1],0,aux5833_BOOL);
constraint int_lin_eq([-1,1,1],[aux5834,1,s_00003],0);
constraint int_lt_reif(s_00013,aux5834,aux5835_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux5836_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux5837_BOOL);
constraint int_le_reif(s_00003, s_00013,aux5838_BOOL);
constraint array_bool_and([aux5835_BOOL,aux5836_BOOL,aux5837_BOOL,w_00005_00003_BOOL,aux5838_BOOL],aux5839_BOOL);
constraint int_lin_eq([-1,1,1],[aux5840,1,s_00005],0);
constraint int_lt_reif(s_00013,aux5840,aux5841_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux5842_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux5843_BOOL);
constraint int_le_reif(s_00005, s_00013,aux5844_BOOL);
constraint array_bool_and([aux5841_BOOL,aux5842_BOOL,aux5843_BOOL,w_00005_00005_BOOL,aux5844_BOOL],aux5845_BOOL);
constraint int_lin_eq([-1,1,1],[aux5846,2,s_00001],0);
constraint int_lt_reif(s_00013,aux5846,aux5847_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux5848_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux5849_BOOL);
constraint int_le_reif(s_00001, s_00013,aux5850_BOOL);
constraint array_bool_and([aux5847_BOOL,aux5848_BOOL,aux5849_BOOL,w_00005_00001_BOOL,aux5850_BOOL],aux5851_BOOL);
constraint int_lin_eq([-1,1,1],[aux5852,2,s_00004],0);
constraint int_lt_reif(s_00013,aux5852,aux5853_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux5854_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux5855_BOOL);
constraint int_le_reif(s_00004, s_00013,aux5856_BOOL);
constraint array_bool_and([aux5853_BOOL,aux5854_BOOL,aux5855_BOOL,w_00005_00004_BOOL,aux5856_BOOL],aux5857_BOOL);
constraint int_lin_eq([-1,1,1],[aux5858,2,s_00007],0);
constraint int_lt_reif(s_00013,aux5858,aux5859_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux5860_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux5861_BOOL);
constraint int_le_reif(s_00007, s_00013,aux5862_BOOL);
constraint array_bool_and([aux5859_BOOL,aux5860_BOOL,aux5861_BOOL,w_00005_00007_BOOL,aux5862_BOOL],aux5863_BOOL);
constraint int_lin_eq([-1,1,1],[aux5864,2,s_00008],0);
constraint int_lt_reif(s_00013,aux5864,aux5865_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux5866_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux5867_BOOL);
constraint int_le_reif(s_00008, s_00013,aux5868_BOOL);
constraint array_bool_and([aux5865_BOOL,aux5866_BOOL,aux5867_BOOL,w_00005_00008_BOOL,aux5868_BOOL],aux5869_BOOL);
constraint int_lin_eq([-1,1,1],[aux5870,2,s_00009],0);
constraint int_lt_reif(s_00013,aux5870,aux5871_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux5872_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux5873_BOOL);
constraint int_le_reif(s_00009, s_00013,aux5874_BOOL);
constraint array_bool_and([aux5871_BOOL,aux5872_BOOL,aux5873_BOOL,w_00005_00009_BOOL,aux5874_BOOL],aux5875_BOOL);
constraint int_lin_eq([-1,1,1],[aux5876,1,s_00010],0);
constraint int_lt_reif(s_00013,aux5876,aux5877_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux5878_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux5879_BOOL);
constraint int_le_reif(s_00010, s_00013,aux5880_BOOL);
constraint array_bool_and([aux5877_BOOL,aux5878_BOOL,aux5879_BOOL,w_00005_00010_BOOL,aux5880_BOOL],aux5881_BOOL);
constraint int_lin_eq([-1,1,1],[aux5882,2,s_00011],0);
constraint int_lt_reif(s_00013,aux5882,aux5883_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux5884_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux5885_BOOL);
constraint int_le_reif(s_00011, s_00013,aux5886_BOOL);
constraint array_bool_and([aux5883_BOOL,aux5884_BOOL,aux5885_BOOL,w_00005_00011_BOOL,aux5886_BOOL],aux5887_BOOL);
constraint int_lin_eq([-1,1,1],[aux5888,4,s_00006],0);
constraint int_lt_reif(s_00013,aux5888,aux5889_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux5890_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux5891_BOOL);
constraint int_le_reif(s_00006, s_00013,aux5892_BOOL);
constraint array_bool_and([aux5889_BOOL,aux5890_BOOL,aux5891_BOOL,w_00005_00006_BOOL,aux5892_BOOL],aux5893_BOOL);
constraint int_lin_eq([-1,1,1],[aux5894,3,s_00012],0);
constraint int_lt_reif(s_00013,aux5894,aux5895_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux5896_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux5897_BOOL);
constraint int_le_reif(s_00012, s_00013,aux5898_BOOL);
constraint array_bool_and([aux5895_BOOL,aux5896_BOOL,aux5897_BOOL,w_00005_00012_BOOL,aux5898_BOOL],aux5899_BOOL);
constraint int_lin_eq([-1,1,1],[aux5900,3,s_00014],0);
constraint int_lt_reif(s_00013,aux5900,aux5901_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux5902_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux5903_BOOL);
constraint int_le_reif(s_00014, s_00013,aux5904_BOOL);
constraint array_bool_and([aux5901_BOOL,aux5902_BOOL,aux5903_BOOL,w_00005_00014_BOOL,aux5904_BOOL],aux5905_BOOL);
constraint int_lin_eq([-1,1,1],[aux5906,6,s_00002],0);
constraint int_lt_reif(s_00013,aux5906,aux5907_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux5908_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux5909_BOOL);
constraint int_le_reif(s_00002, s_00013,aux5910_BOOL);
constraint array_bool_and([aux5907_BOOL,aux5908_BOOL,aux5909_BOOL,w_00005_00002_BOOL,aux5910_BOOL],aux5911_BOOL);
constraint int_lin_eq([-1,1,1],[aux5912,3,s_00013],0);
constraint int_lt_reif(s_00013,aux5912,aux5913_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux5914_BOOL);
constraint array_bool_and([aux5913_BOOL,aux5914_BOOL,w_00005_00013_BOOL],aux5915_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux5839_INTEGER,aux5845_INTEGER,aux5851_INTEGER,aux5857_INTEGER,aux5863_INTEGER,aux5869_INTEGER,aux5875_INTEGER,aux5881_INTEGER,aux5887_INTEGER,aux5893_INTEGER,aux5899_INTEGER,aux5905_INTEGER,aux5911_INTEGER,aux5915_INTEGER,1],0,aux5916_BOOL);
constraint int_lin_eq([-1,1,1],[aux5917,1,s_00003],0);
constraint int_lt_reif(s_00004,aux5917,aux5918_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux5919_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux5920_BOOL);
constraint int_le_reif(s_00003, s_00004,aux5921_BOOL);
constraint array_bool_and([aux5918_BOOL,aux5919_BOOL,aux5920_BOOL,w_00005_00003_BOOL,aux5921_BOOL],aux5922_BOOL);
constraint int_lin_eq([-1,1,1],[aux5923,1,s_00005],0);
constraint int_lt_reif(s_00004,aux5923,aux5924_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux5925_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux5926_BOOL);
constraint int_le_reif(s_00005, s_00004,aux5927_BOOL);
constraint array_bool_and([aux5924_BOOL,aux5925_BOOL,aux5926_BOOL,w_00005_00005_BOOL,aux5927_BOOL],aux5928_BOOL);
constraint int_lin_eq([-1,1,1],[aux5929,2,s_00001],0);
constraint int_lt_reif(s_00004,aux5929,aux5930_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux5931_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux5932_BOOL);
constraint int_le_reif(s_00001, s_00004,aux5933_BOOL);
constraint array_bool_and([aux5930_BOOL,aux5931_BOOL,aux5932_BOOL,w_00005_00001_BOOL,aux5933_BOOL],aux5934_BOOL);
constraint int_lin_eq([-1,1,1],[aux5935,1,s_00010],0);
constraint int_lt_reif(s_00004,aux5935,aux5936_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux5937_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux5938_BOOL);
constraint int_le_reif(s_00010, s_00004,aux5939_BOOL);
constraint array_bool_and([aux5936_BOOL,aux5937_BOOL,aux5938_BOOL,w_00005_00010_BOOL,aux5939_BOOL],aux5940_BOOL);
constraint int_lin_eq([-1,1,1],[aux5941,2,s_00007],0);
constraint int_lt_reif(s_00004,aux5941,aux5942_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux5943_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux5944_BOOL);
constraint int_le_reif(s_00007, s_00004,aux5945_BOOL);
constraint array_bool_and([aux5942_BOOL,aux5943_BOOL,aux5944_BOOL,w_00005_00007_BOOL,aux5945_BOOL],aux5946_BOOL);
constraint int_lin_eq([-1,1,1],[aux5947,2,s_00008],0);
constraint int_lt_reif(s_00004,aux5947,aux5948_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux5949_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux5950_BOOL);
constraint int_le_reif(s_00008, s_00004,aux5951_BOOL);
constraint array_bool_and([aux5948_BOOL,aux5949_BOOL,aux5950_BOOL,w_00005_00008_BOOL,aux5951_BOOL],aux5952_BOOL);
constraint int_lin_eq([-1,1,1],[aux5953,2,s_00009],0);
constraint int_lt_reif(s_00004,aux5953,aux5954_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux5955_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux5956_BOOL);
constraint int_le_reif(s_00009, s_00004,aux5957_BOOL);
constraint array_bool_and([aux5954_BOOL,aux5955_BOOL,aux5956_BOOL,w_00005_00009_BOOL,aux5957_BOOL],aux5958_BOOL);
constraint int_lin_eq([-1,1,1],[aux5959,2,s_00011],0);
constraint int_lt_reif(s_00004,aux5959,aux5960_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux5961_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux5962_BOOL);
constraint int_le_reif(s_00011, s_00004,aux5963_BOOL);
constraint array_bool_and([aux5960_BOOL,aux5961_BOOL,aux5962_BOOL,w_00005_00011_BOOL,aux5963_BOOL],aux5964_BOOL);
constraint int_lin_eq([-1,1,1],[aux5965,3,s_00012],0);
constraint int_lt_reif(s_00004,aux5965,aux5966_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux5967_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux5968_BOOL);
constraint int_le_reif(s_00012, s_00004,aux5969_BOOL);
constraint array_bool_and([aux5966_BOOL,aux5967_BOOL,aux5968_BOOL,w_00005_00012_BOOL,aux5969_BOOL],aux5970_BOOL);
constraint int_lin_eq([-1,1,1],[aux5971,3,s_00013],0);
constraint int_lt_reif(s_00004,aux5971,aux5972_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux5973_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux5974_BOOL);
constraint int_le_reif(s_00013, s_00004,aux5975_BOOL);
constraint array_bool_and([aux5972_BOOL,aux5973_BOOL,aux5974_BOOL,w_00005_00013_BOOL,aux5975_BOOL],aux5976_BOOL);
constraint int_lin_eq([-1,1,1],[aux5977,3,s_00014],0);
constraint int_lt_reif(s_00004,aux5977,aux5978_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux5979_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux5980_BOOL);
constraint int_le_reif(s_00014, s_00004,aux5981_BOOL);
constraint array_bool_and([aux5978_BOOL,aux5979_BOOL,aux5980_BOOL,w_00005_00014_BOOL,aux5981_BOOL],aux5982_BOOL);
constraint int_lin_eq([-1,1,1],[aux5983,4,s_00006],0);
constraint int_lt_reif(s_00004,aux5983,aux5984_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux5985_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux5986_BOOL);
constraint int_le_reif(s_00006, s_00004,aux5987_BOOL);
constraint array_bool_and([aux5984_BOOL,aux5985_BOOL,aux5986_BOOL,w_00005_00006_BOOL,aux5987_BOOL],aux5988_BOOL);
constraint int_lin_eq([-1,1,1],[aux5989,6,s_00002],0);
constraint int_lt_reif(s_00004,aux5989,aux5990_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux5991_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux5992_BOOL);
constraint int_le_reif(s_00002, s_00004,aux5993_BOOL);
constraint array_bool_and([aux5990_BOOL,aux5991_BOOL,aux5992_BOOL,w_00005_00002_BOOL,aux5993_BOOL],aux5994_BOOL);
constraint int_lin_eq([-1,1,1],[aux5995,2,s_00004],0);
constraint int_lt_reif(s_00004,aux5995,aux5996_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux5997_BOOL);
constraint array_bool_and([aux5996_BOOL,aux5997_BOOL,w_00005_00004_BOOL],aux5998_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux5922_INTEGER,aux5928_INTEGER,aux5934_INTEGER,aux5940_INTEGER,aux5946_INTEGER,aux5952_INTEGER,aux5958_INTEGER,aux5964_INTEGER,aux5970_INTEGER,aux5976_INTEGER,aux5982_INTEGER,aux5988_INTEGER,aux5994_INTEGER,aux5998_INTEGER,1],0,aux5999_BOOL);
constraint int_lin_eq([-1,1,1],[aux6000,1,s_00003],0);
constraint int_lt_reif(s_00010,aux6000,aux6001_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux6002_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux6003_BOOL);
constraint int_le_reif(s_00003, s_00010,aux6004_BOOL);
constraint array_bool_and([aux6001_BOOL,aux6002_BOOL,aux6003_BOOL,w_00005_00003_BOOL,aux6004_BOOL],aux6005_BOOL);
constraint int_lin_eq([-1,1,1],[aux6006,1,s_00005],0);
constraint int_lt_reif(s_00010,aux6006,aux6007_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux6008_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux6009_BOOL);
constraint int_le_reif(s_00005, s_00010,aux6010_BOOL);
constraint array_bool_and([aux6007_BOOL,aux6008_BOOL,aux6009_BOOL,w_00005_00005_BOOL,aux6010_BOOL],aux6011_BOOL);
constraint int_lin_eq([-1,1,1],[aux6012,2,s_00001],0);
constraint int_lt_reif(s_00010,aux6012,aux6013_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux6014_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux6015_BOOL);
constraint int_le_reif(s_00001, s_00010,aux6016_BOOL);
constraint array_bool_and([aux6013_BOOL,aux6014_BOOL,aux6015_BOOL,w_00005_00001_BOOL,aux6016_BOOL],aux6017_BOOL);
constraint int_lin_eq([-1,1,1],[aux6018,2,s_00004],0);
constraint int_lt_reif(s_00010,aux6018,aux6019_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux6020_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux6021_BOOL);
constraint int_le_reif(s_00004, s_00010,aux6022_BOOL);
constraint array_bool_and([aux6019_BOOL,aux6020_BOOL,aux6021_BOOL,w_00005_00004_BOOL,aux6022_BOOL],aux6023_BOOL);
constraint int_lin_eq([-1,1,1],[aux6024,2,s_00007],0);
constraint int_lt_reif(s_00010,aux6024,aux6025_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux6026_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux6027_BOOL);
constraint int_le_reif(s_00007, s_00010,aux6028_BOOL);
constraint array_bool_and([aux6025_BOOL,aux6026_BOOL,aux6027_BOOL,w_00005_00007_BOOL,aux6028_BOOL],aux6029_BOOL);
constraint int_lin_eq([-1,1,1],[aux6030,2,s_00008],0);
constraint int_lt_reif(s_00010,aux6030,aux6031_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux6032_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux6033_BOOL);
constraint int_le_reif(s_00008, s_00010,aux6034_BOOL);
constraint array_bool_and([aux6031_BOOL,aux6032_BOOL,aux6033_BOOL,w_00005_00008_BOOL,aux6034_BOOL],aux6035_BOOL);
constraint int_lin_eq([-1,1,1],[aux6036,2,s_00009],0);
constraint int_lt_reif(s_00010,aux6036,aux6037_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux6038_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux6039_BOOL);
constraint int_le_reif(s_00009, s_00010,aux6040_BOOL);
constraint array_bool_and([aux6037_BOOL,aux6038_BOOL,aux6039_BOOL,w_00005_00009_BOOL,aux6040_BOOL],aux6041_BOOL);
constraint int_lin_eq([-1,1,1],[aux6042,2,s_00011],0);
constraint int_lt_reif(s_00010,aux6042,aux6043_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux6044_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux6045_BOOL);
constraint int_le_reif(s_00011, s_00010,aux6046_BOOL);
constraint array_bool_and([aux6043_BOOL,aux6044_BOOL,aux6045_BOOL,w_00005_00011_BOOL,aux6046_BOOL],aux6047_BOOL);
constraint int_lin_eq([-1,1,1],[aux6048,4,s_00006],0);
constraint int_lt_reif(s_00010,aux6048,aux6049_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux6050_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux6051_BOOL);
constraint int_le_reif(s_00006, s_00010,aux6052_BOOL);
constraint array_bool_and([aux6049_BOOL,aux6050_BOOL,aux6051_BOOL,w_00005_00006_BOOL,aux6052_BOOL],aux6053_BOOL);
constraint int_lin_eq([-1,1,1],[aux6054,3,s_00012],0);
constraint int_lt_reif(s_00010,aux6054,aux6055_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux6056_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux6057_BOOL);
constraint int_le_reif(s_00012, s_00010,aux6058_BOOL);
constraint array_bool_and([aux6055_BOOL,aux6056_BOOL,aux6057_BOOL,w_00005_00012_BOOL,aux6058_BOOL],aux6059_BOOL);
constraint int_lin_eq([-1,1,1],[aux6060,3,s_00013],0);
constraint int_lt_reif(s_00010,aux6060,aux6061_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux6062_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux6063_BOOL);
constraint int_le_reif(s_00013, s_00010,aux6064_BOOL);
constraint array_bool_and([aux6061_BOOL,aux6062_BOOL,aux6063_BOOL,w_00005_00013_BOOL,aux6064_BOOL],aux6065_BOOL);
constraint int_lin_eq([-1,1,1],[aux6066,3,s_00014],0);
constraint int_lt_reif(s_00010,aux6066,aux6067_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux6068_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux6069_BOOL);
constraint int_le_reif(s_00014, s_00010,aux6070_BOOL);
constraint array_bool_and([aux6067_BOOL,aux6068_BOOL,aux6069_BOOL,w_00005_00014_BOOL,aux6070_BOOL],aux6071_BOOL);
constraint int_lin_eq([-1,1,1],[aux6072,6,s_00002],0);
constraint int_lt_reif(s_00010,aux6072,aux6073_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux6074_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux6075_BOOL);
constraint int_le_reif(s_00002, s_00010,aux6076_BOOL);
constraint array_bool_and([aux6073_BOOL,aux6074_BOOL,aux6075_BOOL,w_00005_00002_BOOL,aux6076_BOOL],aux6077_BOOL);
constraint int_lin_eq([-1,1,1],[aux6078,1,s_00010],0);
constraint int_lt_reif(s_00010,aux6078,aux6079_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux6080_BOOL);
constraint array_bool_and([aux6079_BOOL,aux6080_BOOL,w_00005_00010_BOOL],aux6081_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux6005_INTEGER,aux6011_INTEGER,aux6017_INTEGER,aux6023_INTEGER,aux6029_INTEGER,aux6035_INTEGER,aux6041_INTEGER,aux6047_INTEGER,aux6053_INTEGER,aux6059_INTEGER,aux6065_INTEGER,aux6071_INTEGER,aux6077_INTEGER,aux6081_INTEGER,1],0,aux6082_BOOL);
constraint array_bool_and([aux5003_BOOL,aux5086_BOOL,aux5169_BOOL,aux5252_BOOL,aux5335_BOOL,aux5418_BOOL,aux5501_BOOL,aux5584_BOOL,aux5667_BOOL,aux5750_BOOL,aux5833_BOOL,aux5916_BOOL,aux5999_BOOL,aux6082_BOOL],aux6083_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[TWorkers_00006_00001_INTEGER,TWorkers_00006_00002_INTEGER,TWorkers_00006_00003_INTEGER,TWorkers_00006_00004_INTEGER,TWorkers_00006_00005_INTEGER,TWorkers_00006_00006_INTEGER,TWorkers_00006_00007_INTEGER,TWorkers_00006_00008_INTEGER,TWorkers_00006_00009_INTEGER,TWorkers_00006_00010_INTEGER,TWorkers_00006_00011_INTEGER,TWorkers_00006_00012_INTEGER,TWorkers_00006_00013_INTEGER,TWorkers_00006_00014_INTEGER,1],0,aux6084_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux6085_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux6086_BOOL);
constraint int_lin_eq([-1,1,1],[aux6087,2,s_00001],0);
constraint int_lt_reif(s_00005,aux6087,aux6088_BOOL);
constraint int_le_reif(s_00001, s_00005,aux6089_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux6085_BOOL,aux6086_BOOL,aux6088_BOOL,aux6089_BOOL],aux6090_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux6091_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux6092_BOOL);
constraint int_lin_eq([-1,1,1],[aux6093,6,s_00002],0);
constraint int_lt_reif(s_00005,aux6093,aux6094_BOOL);
constraint int_le_reif(s_00002, s_00005,aux6095_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux6091_BOOL,aux6092_BOOL,aux6094_BOOL,aux6095_BOOL],aux6096_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux6097_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux6098_BOOL);
constraint int_lin_eq([-1,1,1],[aux6099,1,s_00003],0);
constraint int_lt_reif(s_00005,aux6099,aux6100_BOOL);
constraint int_le_reif(s_00003, s_00005,aux6101_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux6097_BOOL,aux6098_BOOL,aux6100_BOOL,aux6101_BOOL],aux6102_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux6103_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux6104_BOOL);
constraint int_lin_eq([-1,1,1],[aux6105,2,s_00004],0);
constraint int_lt_reif(s_00005,aux6105,aux6106_BOOL);
constraint int_le_reif(s_00004, s_00005,aux6107_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux6103_BOOL,aux6104_BOOL,aux6106_BOOL,aux6107_BOOL],aux6108_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux6109_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux6110_BOOL);
constraint int_lin_eq([-1,1,1],[aux6111,4,s_00006],0);
constraint int_lt_reif(s_00005,aux6111,aux6112_BOOL);
constraint int_le_reif(s_00006, s_00005,aux6113_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux6109_BOOL,aux6110_BOOL,aux6112_BOOL,aux6113_BOOL],aux6114_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux6115_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux6116_BOOL);
constraint int_lin_eq([-1,1,1],[aux6117,2,s_00007],0);
constraint int_lt_reif(s_00005,aux6117,aux6118_BOOL);
constraint int_le_reif(s_00007, s_00005,aux6119_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux6115_BOOL,aux6116_BOOL,aux6118_BOOL,aux6119_BOOL],aux6120_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux6121_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux6122_BOOL);
constraint int_lin_eq([-1,1,1],[aux6123,2,s_00008],0);
constraint int_lt_reif(s_00005,aux6123,aux6124_BOOL);
constraint int_le_reif(s_00008, s_00005,aux6125_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux6121_BOOL,aux6122_BOOL,aux6124_BOOL,aux6125_BOOL],aux6126_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux6127_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux6128_BOOL);
constraint int_lin_eq([-1,1,1],[aux6129,2,s_00009],0);
constraint int_lt_reif(s_00005,aux6129,aux6130_BOOL);
constraint int_le_reif(s_00009, s_00005,aux6131_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux6127_BOOL,aux6128_BOOL,aux6130_BOOL,aux6131_BOOL],aux6132_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux6133_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux6134_BOOL);
constraint int_lin_eq([-1,1,1],[aux6135,1,s_00010],0);
constraint int_lt_reif(s_00005,aux6135,aux6136_BOOL);
constraint int_le_reif(s_00010, s_00005,aux6137_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux6133_BOOL,aux6134_BOOL,aux6136_BOOL,aux6137_BOOL],aux6138_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux6139_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux6140_BOOL);
constraint int_lin_eq([-1,1,1],[aux6141,2,s_00011],0);
constraint int_lt_reif(s_00005,aux6141,aux6142_BOOL);
constraint int_le_reif(s_00011, s_00005,aux6143_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux6139_BOOL,aux6140_BOOL,aux6142_BOOL,aux6143_BOOL],aux6144_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux6145_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux6146_BOOL);
constraint int_lin_eq([-1,1,1],[aux6147,3,s_00012],0);
constraint int_lt_reif(s_00005,aux6147,aux6148_BOOL);
constraint int_le_reif(s_00012, s_00005,aux6149_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux6145_BOOL,aux6146_BOOL,aux6148_BOOL,aux6149_BOOL],aux6150_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux6151_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux6152_BOOL);
constraint int_lin_eq([-1,1,1],[aux6153,3,s_00013],0);
constraint int_lt_reif(s_00005,aux6153,aux6154_BOOL);
constraint int_le_reif(s_00013, s_00005,aux6155_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux6151_BOOL,aux6152_BOOL,aux6154_BOOL,aux6155_BOOL],aux6156_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux6157_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux6158_BOOL);
constraint int_lin_eq([-1,1,1],[aux6159,3,s_00014],0);
constraint int_lt_reif(s_00005,aux6159,aux6160_BOOL);
constraint int_le_reif(s_00014, s_00005,aux6161_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux6157_BOOL,aux6158_BOOL,aux6160_BOOL,aux6161_BOOL],aux6162_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux6163_BOOL);
constraint int_lin_eq([-1,1,1],[aux6164,1,s_00005],0);
constraint int_lt_reif(s_00005,aux6164,aux6165_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux6163_BOOL,aux6165_BOOL],aux6166_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux6090_INTEGER,aux6096_INTEGER,aux6102_INTEGER,aux6108_INTEGER,aux6114_INTEGER,aux6120_INTEGER,aux6126_INTEGER,aux6132_INTEGER,aux6138_INTEGER,aux6144_INTEGER,aux6150_INTEGER,aux6156_INTEGER,aux6162_INTEGER,aux6166_INTEGER,1],0,aux6167_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux6168_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux6169_BOOL);
constraint int_lin_eq([-1,1,1],[aux6170,2,s_00001],0);
constraint int_lt_reif(s_00007,aux6170,aux6171_BOOL);
constraint int_le_reif(s_00001, s_00007,aux6172_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux6168_BOOL,aux6169_BOOL,aux6171_BOOL,aux6172_BOOL],aux6173_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux6174_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux6175_BOOL);
constraint int_lin_eq([-1,1,1],[aux6176,6,s_00002],0);
constraint int_lt_reif(s_00007,aux6176,aux6177_BOOL);
constraint int_le_reif(s_00002, s_00007,aux6178_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux6174_BOOL,aux6175_BOOL,aux6177_BOOL,aux6178_BOOL],aux6179_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux6180_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux6181_BOOL);
constraint int_lin_eq([-1,1,1],[aux6182,1,s_00003],0);
constraint int_lt_reif(s_00007,aux6182,aux6183_BOOL);
constraint int_le_reif(s_00003, s_00007,aux6184_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux6180_BOOL,aux6181_BOOL,aux6183_BOOL,aux6184_BOOL],aux6185_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux6186_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux6187_BOOL);
constraint int_lin_eq([-1,1,1],[aux6188,2,s_00004],0);
constraint int_lt_reif(s_00007,aux6188,aux6189_BOOL);
constraint int_le_reif(s_00004, s_00007,aux6190_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux6186_BOOL,aux6187_BOOL,aux6189_BOOL,aux6190_BOOL],aux6191_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux6192_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux6193_BOOL);
constraint int_lin_eq([-1,1,1],[aux6194,1,s_00005],0);
constraint int_lt_reif(s_00007,aux6194,aux6195_BOOL);
constraint int_le_reif(s_00005, s_00007,aux6196_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux6192_BOOL,aux6193_BOOL,aux6195_BOOL,aux6196_BOOL],aux6197_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux6198_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux6199_BOOL);
constraint int_lin_eq([-1,1,1],[aux6200,4,s_00006],0);
constraint int_lt_reif(s_00007,aux6200,aux6201_BOOL);
constraint int_le_reif(s_00006, s_00007,aux6202_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux6198_BOOL,aux6199_BOOL,aux6201_BOOL,aux6202_BOOL],aux6203_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux6204_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux6205_BOOL);
constraint int_lin_eq([-1,1,1],[aux6206,2,s_00008],0);
constraint int_lt_reif(s_00007,aux6206,aux6207_BOOL);
constraint int_le_reif(s_00008, s_00007,aux6208_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux6204_BOOL,aux6205_BOOL,aux6207_BOOL,aux6208_BOOL],aux6209_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux6210_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux6211_BOOL);
constraint int_lin_eq([-1,1,1],[aux6212,2,s_00009],0);
constraint int_lt_reif(s_00007,aux6212,aux6213_BOOL);
constraint int_le_reif(s_00009, s_00007,aux6214_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux6210_BOOL,aux6211_BOOL,aux6213_BOOL,aux6214_BOOL],aux6215_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux6216_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux6217_BOOL);
constraint int_lin_eq([-1,1,1],[aux6218,1,s_00010],0);
constraint int_lt_reif(s_00007,aux6218,aux6219_BOOL);
constraint int_le_reif(s_00010, s_00007,aux6220_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux6216_BOOL,aux6217_BOOL,aux6219_BOOL,aux6220_BOOL],aux6221_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux6222_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux6223_BOOL);
constraint int_lin_eq([-1,1,1],[aux6224,2,s_00011],0);
constraint int_lt_reif(s_00007,aux6224,aux6225_BOOL);
constraint int_le_reif(s_00011, s_00007,aux6226_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux6222_BOOL,aux6223_BOOL,aux6225_BOOL,aux6226_BOOL],aux6227_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux6228_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux6229_BOOL);
constraint int_lin_eq([-1,1,1],[aux6230,3,s_00012],0);
constraint int_lt_reif(s_00007,aux6230,aux6231_BOOL);
constraint int_le_reif(s_00012, s_00007,aux6232_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux6228_BOOL,aux6229_BOOL,aux6231_BOOL,aux6232_BOOL],aux6233_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux6234_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux6235_BOOL);
constraint int_lin_eq([-1,1,1],[aux6236,3,s_00013],0);
constraint int_lt_reif(s_00007,aux6236,aux6237_BOOL);
constraint int_le_reif(s_00013, s_00007,aux6238_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux6234_BOOL,aux6235_BOOL,aux6237_BOOL,aux6238_BOOL],aux6239_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux6240_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux6241_BOOL);
constraint int_lin_eq([-1,1,1],[aux6242,3,s_00014],0);
constraint int_lt_reif(s_00007,aux6242,aux6243_BOOL);
constraint int_le_reif(s_00014, s_00007,aux6244_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux6240_BOOL,aux6241_BOOL,aux6243_BOOL,aux6244_BOOL],aux6245_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux6246_BOOL);
constraint int_lin_eq([-1,1,1],[aux6247,2,s_00007],0);
constraint int_lt_reif(s_00007,aux6247,aux6248_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux6246_BOOL,aux6248_BOOL],aux6249_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux6173_INTEGER,aux6179_INTEGER,aux6185_INTEGER,aux6191_INTEGER,aux6197_INTEGER,aux6203_INTEGER,aux6209_INTEGER,aux6215_INTEGER,aux6221_INTEGER,aux6227_INTEGER,aux6233_INTEGER,aux6239_INTEGER,aux6245_INTEGER,aux6249_INTEGER,1],0,aux6250_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux6251_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux6252_BOOL);
constraint int_lin_eq([-1,1,1],[aux6253,2,s_00001],0);
constraint int_lt_reif(s_00012,aux6253,aux6254_BOOL);
constraint int_le_reif(s_00001, s_00012,aux6255_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux6251_BOOL,aux6252_BOOL,aux6254_BOOL,aux6255_BOOL],aux6256_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux6257_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux6258_BOOL);
constraint int_lin_eq([-1,1,1],[aux6259,6,s_00002],0);
constraint int_lt_reif(s_00012,aux6259,aux6260_BOOL);
constraint int_le_reif(s_00002, s_00012,aux6261_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux6257_BOOL,aux6258_BOOL,aux6260_BOOL,aux6261_BOOL],aux6262_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux6263_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux6264_BOOL);
constraint int_lin_eq([-1,1,1],[aux6265,1,s_00003],0);
constraint int_lt_reif(s_00012,aux6265,aux6266_BOOL);
constraint int_le_reif(s_00003, s_00012,aux6267_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux6263_BOOL,aux6264_BOOL,aux6266_BOOL,aux6267_BOOL],aux6268_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux6269_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux6270_BOOL);
constraint int_lin_eq([-1,1,1],[aux6271,2,s_00004],0);
constraint int_lt_reif(s_00012,aux6271,aux6272_BOOL);
constraint int_le_reif(s_00004, s_00012,aux6273_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux6269_BOOL,aux6270_BOOL,aux6272_BOOL,aux6273_BOOL],aux6274_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux6275_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux6276_BOOL);
constraint int_lin_eq([-1,1,1],[aux6277,1,s_00005],0);
constraint int_lt_reif(s_00012,aux6277,aux6278_BOOL);
constraint int_le_reif(s_00005, s_00012,aux6279_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux6275_BOOL,aux6276_BOOL,aux6278_BOOL,aux6279_BOOL],aux6280_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux6281_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux6282_BOOL);
constraint int_lin_eq([-1,1,1],[aux6283,4,s_00006],0);
constraint int_lt_reif(s_00012,aux6283,aux6284_BOOL);
constraint int_le_reif(s_00006, s_00012,aux6285_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux6281_BOOL,aux6282_BOOL,aux6284_BOOL,aux6285_BOOL],aux6286_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux6287_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux6288_BOOL);
constraint int_lin_eq([-1,1,1],[aux6289,2,s_00007],0);
constraint int_lt_reif(s_00012,aux6289,aux6290_BOOL);
constraint int_le_reif(s_00007, s_00012,aux6291_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux6287_BOOL,aux6288_BOOL,aux6290_BOOL,aux6291_BOOL],aux6292_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux6293_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux6294_BOOL);
constraint int_lin_eq([-1,1,1],[aux6295,2,s_00008],0);
constraint int_lt_reif(s_00012,aux6295,aux6296_BOOL);
constraint int_le_reif(s_00008, s_00012,aux6297_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux6293_BOOL,aux6294_BOOL,aux6296_BOOL,aux6297_BOOL],aux6298_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux6299_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux6300_BOOL);
constraint int_lin_eq([-1,1,1],[aux6301,2,s_00009],0);
constraint int_lt_reif(s_00012,aux6301,aux6302_BOOL);
constraint int_le_reif(s_00009, s_00012,aux6303_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux6299_BOOL,aux6300_BOOL,aux6302_BOOL,aux6303_BOOL],aux6304_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux6305_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux6306_BOOL);
constraint int_lin_eq([-1,1,1],[aux6307,1,s_00010],0);
constraint int_lt_reif(s_00012,aux6307,aux6308_BOOL);
constraint int_le_reif(s_00010, s_00012,aux6309_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux6305_BOOL,aux6306_BOOL,aux6308_BOOL,aux6309_BOOL],aux6310_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux6311_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux6312_BOOL);
constraint int_lin_eq([-1,1,1],[aux6313,2,s_00011],0);
constraint int_lt_reif(s_00012,aux6313,aux6314_BOOL);
constraint int_le_reif(s_00011, s_00012,aux6315_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux6311_BOOL,aux6312_BOOL,aux6314_BOOL,aux6315_BOOL],aux6316_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux6317_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux6318_BOOL);
constraint int_lin_eq([-1,1,1],[aux6319,3,s_00013],0);
constraint int_lt_reif(s_00012,aux6319,aux6320_BOOL);
constraint int_le_reif(s_00013, s_00012,aux6321_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux6317_BOOL,aux6318_BOOL,aux6320_BOOL,aux6321_BOOL],aux6322_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux6323_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux6324_BOOL);
constraint int_lin_eq([-1,1,1],[aux6325,3,s_00014],0);
constraint int_lt_reif(s_00012,aux6325,aux6326_BOOL);
constraint int_le_reif(s_00014, s_00012,aux6327_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux6323_BOOL,aux6324_BOOL,aux6326_BOOL,aux6327_BOOL],aux6328_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux6329_BOOL);
constraint int_lin_eq([-1,1,1],[aux6330,3,s_00012],0);
constraint int_lt_reif(s_00012,aux6330,aux6331_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux6329_BOOL,aux6331_BOOL],aux6332_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux6256_INTEGER,aux6262_INTEGER,aux6268_INTEGER,aux6274_INTEGER,aux6280_INTEGER,aux6286_INTEGER,aux6292_INTEGER,aux6298_INTEGER,aux6304_INTEGER,aux6310_INTEGER,aux6316_INTEGER,aux6322_INTEGER,aux6328_INTEGER,aux6332_INTEGER,1],0,aux6333_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux6334_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux6335_BOOL);
constraint int_lin_eq([-1,1,1],[aux6336,2,s_00001],0);
constraint int_lt_reif(s_00010,aux6336,aux6337_BOOL);
constraint int_le_reif(s_00001, s_00010,aux6338_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux6334_BOOL,aux6335_BOOL,aux6337_BOOL,aux6338_BOOL],aux6339_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux6340_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux6341_BOOL);
constraint int_lin_eq([-1,1,1],[aux6342,6,s_00002],0);
constraint int_lt_reif(s_00010,aux6342,aux6343_BOOL);
constraint int_le_reif(s_00002, s_00010,aux6344_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux6340_BOOL,aux6341_BOOL,aux6343_BOOL,aux6344_BOOL],aux6345_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux6346_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux6347_BOOL);
constraint int_lin_eq([-1,1,1],[aux6348,1,s_00003],0);
constraint int_lt_reif(s_00010,aux6348,aux6349_BOOL);
constraint int_le_reif(s_00003, s_00010,aux6350_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux6346_BOOL,aux6347_BOOL,aux6349_BOOL,aux6350_BOOL],aux6351_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux6352_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux6353_BOOL);
constraint int_lin_eq([-1,1,1],[aux6354,2,s_00004],0);
constraint int_lt_reif(s_00010,aux6354,aux6355_BOOL);
constraint int_le_reif(s_00004, s_00010,aux6356_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux6352_BOOL,aux6353_BOOL,aux6355_BOOL,aux6356_BOOL],aux6357_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux6358_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux6359_BOOL);
constraint int_lin_eq([-1,1,1],[aux6360,1,s_00005],0);
constraint int_lt_reif(s_00010,aux6360,aux6361_BOOL);
constraint int_le_reif(s_00005, s_00010,aux6362_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux6358_BOOL,aux6359_BOOL,aux6361_BOOL,aux6362_BOOL],aux6363_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux6364_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux6365_BOOL);
constraint int_lin_eq([-1,1,1],[aux6366,4,s_00006],0);
constraint int_lt_reif(s_00010,aux6366,aux6367_BOOL);
constraint int_le_reif(s_00006, s_00010,aux6368_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux6364_BOOL,aux6365_BOOL,aux6367_BOOL,aux6368_BOOL],aux6369_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux6370_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux6371_BOOL);
constraint int_lin_eq([-1,1,1],[aux6372,2,s_00007],0);
constraint int_lt_reif(s_00010,aux6372,aux6373_BOOL);
constraint int_le_reif(s_00007, s_00010,aux6374_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux6370_BOOL,aux6371_BOOL,aux6373_BOOL,aux6374_BOOL],aux6375_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux6376_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux6377_BOOL);
constraint int_lin_eq([-1,1,1],[aux6378,2,s_00008],0);
constraint int_lt_reif(s_00010,aux6378,aux6379_BOOL);
constraint int_le_reif(s_00008, s_00010,aux6380_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux6376_BOOL,aux6377_BOOL,aux6379_BOOL,aux6380_BOOL],aux6381_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux6382_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux6383_BOOL);
constraint int_lin_eq([-1,1,1],[aux6384,2,s_00009],0);
constraint int_lt_reif(s_00010,aux6384,aux6385_BOOL);
constraint int_le_reif(s_00009, s_00010,aux6386_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux6382_BOOL,aux6383_BOOL,aux6385_BOOL,aux6386_BOOL],aux6387_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux6388_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux6389_BOOL);
constraint int_lin_eq([-1,1,1],[aux6390,2,s_00011],0);
constraint int_lt_reif(s_00010,aux6390,aux6391_BOOL);
constraint int_le_reif(s_00011, s_00010,aux6392_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux6388_BOOL,aux6389_BOOL,aux6391_BOOL,aux6392_BOOL],aux6393_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux6394_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux6395_BOOL);
constraint int_lin_eq([-1,1,1],[aux6396,3,s_00012],0);
constraint int_lt_reif(s_00010,aux6396,aux6397_BOOL);
constraint int_le_reif(s_00012, s_00010,aux6398_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux6394_BOOL,aux6395_BOOL,aux6397_BOOL,aux6398_BOOL],aux6399_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux6400_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux6401_BOOL);
constraint int_lin_eq([-1,1,1],[aux6402,3,s_00013],0);
constraint int_lt_reif(s_00010,aux6402,aux6403_BOOL);
constraint int_le_reif(s_00013, s_00010,aux6404_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux6400_BOOL,aux6401_BOOL,aux6403_BOOL,aux6404_BOOL],aux6405_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux6406_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux6407_BOOL);
constraint int_lin_eq([-1,1,1],[aux6408,3,s_00014],0);
constraint int_lt_reif(s_00010,aux6408,aux6409_BOOL);
constraint int_le_reif(s_00014, s_00010,aux6410_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux6406_BOOL,aux6407_BOOL,aux6409_BOOL,aux6410_BOOL],aux6411_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux6412_BOOL);
constraint int_lin_eq([-1,1,1],[aux6413,1,s_00010],0);
constraint int_lt_reif(s_00010,aux6413,aux6414_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux6412_BOOL,aux6414_BOOL],aux6415_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux6339_INTEGER,aux6345_INTEGER,aux6351_INTEGER,aux6357_INTEGER,aux6363_INTEGER,aux6369_INTEGER,aux6375_INTEGER,aux6381_INTEGER,aux6387_INTEGER,aux6393_INTEGER,aux6399_INTEGER,aux6405_INTEGER,aux6411_INTEGER,aux6415_INTEGER,1],0,aux6416_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux6417_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux6418_BOOL);
constraint int_lin_eq([-1,1,1],[aux6419,6,s_00002],0);
constraint int_lt_reif(s_00001,aux6419,aux6420_BOOL);
constraint int_le_reif(s_00002, s_00001,aux6421_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux6417_BOOL,aux6418_BOOL,aux6420_BOOL,aux6421_BOOL],aux6422_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux6423_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux6424_BOOL);
constraint int_lin_eq([-1,1,1],[aux6425,1,s_00003],0);
constraint int_lt_reif(s_00001,aux6425,aux6426_BOOL);
constraint int_le_reif(s_00003, s_00001,aux6427_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux6423_BOOL,aux6424_BOOL,aux6426_BOOL,aux6427_BOOL],aux6428_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux6429_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux6430_BOOL);
constraint int_lin_eq([-1,1,1],[aux6431,2,s_00004],0);
constraint int_lt_reif(s_00001,aux6431,aux6432_BOOL);
constraint int_le_reif(s_00004, s_00001,aux6433_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux6429_BOOL,aux6430_BOOL,aux6432_BOOL,aux6433_BOOL],aux6434_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux6435_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux6436_BOOL);
constraint int_lin_eq([-1,1,1],[aux6437,1,s_00005],0);
constraint int_lt_reif(s_00001,aux6437,aux6438_BOOL);
constraint int_le_reif(s_00005, s_00001,aux6439_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux6435_BOOL,aux6436_BOOL,aux6438_BOOL,aux6439_BOOL],aux6440_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux6441_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux6442_BOOL);
constraint int_lin_eq([-1,1,1],[aux6443,4,s_00006],0);
constraint int_lt_reif(s_00001,aux6443,aux6444_BOOL);
constraint int_le_reif(s_00006, s_00001,aux6445_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux6441_BOOL,aux6442_BOOL,aux6444_BOOL,aux6445_BOOL],aux6446_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux6447_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux6448_BOOL);
constraint int_lin_eq([-1,1,1],[aux6449,2,s_00007],0);
constraint int_lt_reif(s_00001,aux6449,aux6450_BOOL);
constraint int_le_reif(s_00007, s_00001,aux6451_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux6447_BOOL,aux6448_BOOL,aux6450_BOOL,aux6451_BOOL],aux6452_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux6453_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux6454_BOOL);
constraint int_lin_eq([-1,1,1],[aux6455,2,s_00008],0);
constraint int_lt_reif(s_00001,aux6455,aux6456_BOOL);
constraint int_le_reif(s_00008, s_00001,aux6457_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux6453_BOOL,aux6454_BOOL,aux6456_BOOL,aux6457_BOOL],aux6458_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux6459_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux6460_BOOL);
constraint int_lin_eq([-1,1,1],[aux6461,2,s_00009],0);
constraint int_lt_reif(s_00001,aux6461,aux6462_BOOL);
constraint int_le_reif(s_00009, s_00001,aux6463_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux6459_BOOL,aux6460_BOOL,aux6462_BOOL,aux6463_BOOL],aux6464_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux6465_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux6466_BOOL);
constraint int_lin_eq([-1,1,1],[aux6467,1,s_00010],0);
constraint int_lt_reif(s_00001,aux6467,aux6468_BOOL);
constraint int_le_reif(s_00010, s_00001,aux6469_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux6465_BOOL,aux6466_BOOL,aux6468_BOOL,aux6469_BOOL],aux6470_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux6471_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux6472_BOOL);
constraint int_lin_eq([-1,1,1],[aux6473,2,s_00011],0);
constraint int_lt_reif(s_00001,aux6473,aux6474_BOOL);
constraint int_le_reif(s_00011, s_00001,aux6475_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux6471_BOOL,aux6472_BOOL,aux6474_BOOL,aux6475_BOOL],aux6476_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux6477_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux6478_BOOL);
constraint int_lin_eq([-1,1,1],[aux6479,3,s_00012],0);
constraint int_lt_reif(s_00001,aux6479,aux6480_BOOL);
constraint int_le_reif(s_00012, s_00001,aux6481_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux6477_BOOL,aux6478_BOOL,aux6480_BOOL,aux6481_BOOL],aux6482_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux6483_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux6484_BOOL);
constraint int_lin_eq([-1,1,1],[aux6485,3,s_00013],0);
constraint int_lt_reif(s_00001,aux6485,aux6486_BOOL);
constraint int_le_reif(s_00013, s_00001,aux6487_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux6483_BOOL,aux6484_BOOL,aux6486_BOOL,aux6487_BOOL],aux6488_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux6489_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux6490_BOOL);
constraint int_lin_eq([-1,1,1],[aux6491,3,s_00014],0);
constraint int_lt_reif(s_00001,aux6491,aux6492_BOOL);
constraint int_le_reif(s_00014, s_00001,aux6493_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux6489_BOOL,aux6490_BOOL,aux6492_BOOL,aux6493_BOOL],aux6494_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux6495_BOOL);
constraint int_lin_eq([-1,1,1],[aux6496,2,s_00001],0);
constraint int_lt_reif(s_00001,aux6496,aux6497_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux6495_BOOL,aux6497_BOOL],aux6498_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux6422_INTEGER,aux6428_INTEGER,aux6434_INTEGER,aux6440_INTEGER,aux6446_INTEGER,aux6452_INTEGER,aux6458_INTEGER,aux6464_INTEGER,aux6470_INTEGER,aux6476_INTEGER,aux6482_INTEGER,aux6488_INTEGER,aux6494_INTEGER,aux6498_INTEGER,1],0,aux6499_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux6500_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux6501_BOOL);
constraint int_lin_eq([-1,1,1],[aux6502,2,s_00001],0);
constraint int_lt_reif(s_00009,aux6502,aux6503_BOOL);
constraint int_le_reif(s_00001, s_00009,aux6504_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux6500_BOOL,aux6501_BOOL,aux6503_BOOL,aux6504_BOOL],aux6505_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux6506_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux6507_BOOL);
constraint int_lin_eq([-1,1,1],[aux6508,6,s_00002],0);
constraint int_lt_reif(s_00009,aux6508,aux6509_BOOL);
constraint int_le_reif(s_00002, s_00009,aux6510_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux6506_BOOL,aux6507_BOOL,aux6509_BOOL,aux6510_BOOL],aux6511_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux6512_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux6513_BOOL);
constraint int_lin_eq([-1,1,1],[aux6514,1,s_00003],0);
constraint int_lt_reif(s_00009,aux6514,aux6515_BOOL);
constraint int_le_reif(s_00003, s_00009,aux6516_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux6512_BOOL,aux6513_BOOL,aux6515_BOOL,aux6516_BOOL],aux6517_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux6518_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux6519_BOOL);
constraint int_lin_eq([-1,1,1],[aux6520,2,s_00004],0);
constraint int_lt_reif(s_00009,aux6520,aux6521_BOOL);
constraint int_le_reif(s_00004, s_00009,aux6522_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux6518_BOOL,aux6519_BOOL,aux6521_BOOL,aux6522_BOOL],aux6523_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux6524_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux6525_BOOL);
constraint int_lin_eq([-1,1,1],[aux6526,1,s_00005],0);
constraint int_lt_reif(s_00009,aux6526,aux6527_BOOL);
constraint int_le_reif(s_00005, s_00009,aux6528_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux6524_BOOL,aux6525_BOOL,aux6527_BOOL,aux6528_BOOL],aux6529_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux6530_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux6531_BOOL);
constraint int_lin_eq([-1,1,1],[aux6532,4,s_00006],0);
constraint int_lt_reif(s_00009,aux6532,aux6533_BOOL);
constraint int_le_reif(s_00006, s_00009,aux6534_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux6530_BOOL,aux6531_BOOL,aux6533_BOOL,aux6534_BOOL],aux6535_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux6536_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux6537_BOOL);
constraint int_lin_eq([-1,1,1],[aux6538,2,s_00007],0);
constraint int_lt_reif(s_00009,aux6538,aux6539_BOOL);
constraint int_le_reif(s_00007, s_00009,aux6540_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux6536_BOOL,aux6537_BOOL,aux6539_BOOL,aux6540_BOOL],aux6541_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux6542_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux6543_BOOL);
constraint int_lin_eq([-1,1,1],[aux6544,2,s_00008],0);
constraint int_lt_reif(s_00009,aux6544,aux6545_BOOL);
constraint int_le_reif(s_00008, s_00009,aux6546_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux6542_BOOL,aux6543_BOOL,aux6545_BOOL,aux6546_BOOL],aux6547_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux6548_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux6549_BOOL);
constraint int_lin_eq([-1,1,1],[aux6550,1,s_00010],0);
constraint int_lt_reif(s_00009,aux6550,aux6551_BOOL);
constraint int_le_reif(s_00010, s_00009,aux6552_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux6548_BOOL,aux6549_BOOL,aux6551_BOOL,aux6552_BOOL],aux6553_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux6554_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux6555_BOOL);
constraint int_lin_eq([-1,1,1],[aux6556,2,s_00011],0);
constraint int_lt_reif(s_00009,aux6556,aux6557_BOOL);
constraint int_le_reif(s_00011, s_00009,aux6558_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux6554_BOOL,aux6555_BOOL,aux6557_BOOL,aux6558_BOOL],aux6559_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux6560_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux6561_BOOL);
constraint int_lin_eq([-1,1,1],[aux6562,3,s_00012],0);
constraint int_lt_reif(s_00009,aux6562,aux6563_BOOL);
constraint int_le_reif(s_00012, s_00009,aux6564_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux6560_BOOL,aux6561_BOOL,aux6563_BOOL,aux6564_BOOL],aux6565_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux6566_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux6567_BOOL);
constraint int_lin_eq([-1,1,1],[aux6568,3,s_00013],0);
constraint int_lt_reif(s_00009,aux6568,aux6569_BOOL);
constraint int_le_reif(s_00013, s_00009,aux6570_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux6566_BOOL,aux6567_BOOL,aux6569_BOOL,aux6570_BOOL],aux6571_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux6572_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux6573_BOOL);
constraint int_lin_eq([-1,1,1],[aux6574,3,s_00014],0);
constraint int_lt_reif(s_00009,aux6574,aux6575_BOOL);
constraint int_le_reif(s_00014, s_00009,aux6576_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux6572_BOOL,aux6573_BOOL,aux6575_BOOL,aux6576_BOOL],aux6577_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux6578_BOOL);
constraint int_lin_eq([-1,1,1],[aux6579,2,s_00009],0);
constraint int_lt_reif(s_00009,aux6579,aux6580_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux6578_BOOL,aux6580_BOOL],aux6581_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux6505_INTEGER,aux6511_INTEGER,aux6517_INTEGER,aux6523_INTEGER,aux6529_INTEGER,aux6535_INTEGER,aux6541_INTEGER,aux6547_INTEGER,aux6553_INTEGER,aux6559_INTEGER,aux6565_INTEGER,aux6571_INTEGER,aux6577_INTEGER,aux6581_INTEGER,1],0,aux6582_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux6583_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux6584_BOOL);
constraint int_lin_eq([-1,1,1],[aux6585,2,s_00001],0);
constraint int_lt_reif(s_00008,aux6585,aux6586_BOOL);
constraint int_le_reif(s_00001, s_00008,aux6587_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux6583_BOOL,aux6584_BOOL,aux6586_BOOL,aux6587_BOOL],aux6588_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux6589_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux6590_BOOL);
constraint int_lin_eq([-1,1,1],[aux6591,6,s_00002],0);
constraint int_lt_reif(s_00008,aux6591,aux6592_BOOL);
constraint int_le_reif(s_00002, s_00008,aux6593_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux6589_BOOL,aux6590_BOOL,aux6592_BOOL,aux6593_BOOL],aux6594_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux6595_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux6596_BOOL);
constraint int_lin_eq([-1,1,1],[aux6597,1,s_00003],0);
constraint int_lt_reif(s_00008,aux6597,aux6598_BOOL);
constraint int_le_reif(s_00003, s_00008,aux6599_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux6595_BOOL,aux6596_BOOL,aux6598_BOOL,aux6599_BOOL],aux6600_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux6601_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux6602_BOOL);
constraint int_lin_eq([-1,1,1],[aux6603,2,s_00004],0);
constraint int_lt_reif(s_00008,aux6603,aux6604_BOOL);
constraint int_le_reif(s_00004, s_00008,aux6605_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux6601_BOOL,aux6602_BOOL,aux6604_BOOL,aux6605_BOOL],aux6606_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux6607_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux6608_BOOL);
constraint int_lin_eq([-1,1,1],[aux6609,1,s_00005],0);
constraint int_lt_reif(s_00008,aux6609,aux6610_BOOL);
constraint int_le_reif(s_00005, s_00008,aux6611_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux6607_BOOL,aux6608_BOOL,aux6610_BOOL,aux6611_BOOL],aux6612_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux6613_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux6614_BOOL);
constraint int_lin_eq([-1,1,1],[aux6615,4,s_00006],0);
constraint int_lt_reif(s_00008,aux6615,aux6616_BOOL);
constraint int_le_reif(s_00006, s_00008,aux6617_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux6613_BOOL,aux6614_BOOL,aux6616_BOOL,aux6617_BOOL],aux6618_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux6619_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux6620_BOOL);
constraint int_lin_eq([-1,1,1],[aux6621,2,s_00007],0);
constraint int_lt_reif(s_00008,aux6621,aux6622_BOOL);
constraint int_le_reif(s_00007, s_00008,aux6623_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux6619_BOOL,aux6620_BOOL,aux6622_BOOL,aux6623_BOOL],aux6624_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux6625_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux6626_BOOL);
constraint int_lin_eq([-1,1,1],[aux6627,2,s_00009],0);
constraint int_lt_reif(s_00008,aux6627,aux6628_BOOL);
constraint int_le_reif(s_00009, s_00008,aux6629_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux6625_BOOL,aux6626_BOOL,aux6628_BOOL,aux6629_BOOL],aux6630_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux6631_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux6632_BOOL);
constraint int_lin_eq([-1,1,1],[aux6633,1,s_00010],0);
constraint int_lt_reif(s_00008,aux6633,aux6634_BOOL);
constraint int_le_reif(s_00010, s_00008,aux6635_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux6631_BOOL,aux6632_BOOL,aux6634_BOOL,aux6635_BOOL],aux6636_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux6637_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux6638_BOOL);
constraint int_lin_eq([-1,1,1],[aux6639,2,s_00011],0);
constraint int_lt_reif(s_00008,aux6639,aux6640_BOOL);
constraint int_le_reif(s_00011, s_00008,aux6641_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux6637_BOOL,aux6638_BOOL,aux6640_BOOL,aux6641_BOOL],aux6642_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux6643_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux6644_BOOL);
constraint int_lin_eq([-1,1,1],[aux6645,3,s_00012],0);
constraint int_lt_reif(s_00008,aux6645,aux6646_BOOL);
constraint int_le_reif(s_00012, s_00008,aux6647_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux6643_BOOL,aux6644_BOOL,aux6646_BOOL,aux6647_BOOL],aux6648_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux6649_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux6650_BOOL);
constraint int_lin_eq([-1,1,1],[aux6651,3,s_00013],0);
constraint int_lt_reif(s_00008,aux6651,aux6652_BOOL);
constraint int_le_reif(s_00013, s_00008,aux6653_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux6649_BOOL,aux6650_BOOL,aux6652_BOOL,aux6653_BOOL],aux6654_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux6655_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux6656_BOOL);
constraint int_lin_eq([-1,1,1],[aux6657,3,s_00014],0);
constraint int_lt_reif(s_00008,aux6657,aux6658_BOOL);
constraint int_le_reif(s_00014, s_00008,aux6659_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux6655_BOOL,aux6656_BOOL,aux6658_BOOL,aux6659_BOOL],aux6660_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux6661_BOOL);
constraint int_lin_eq([-1,1,1],[aux6662,2,s_00008],0);
constraint int_lt_reif(s_00008,aux6662,aux6663_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux6661_BOOL,aux6663_BOOL],aux6664_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux6588_INTEGER,aux6594_INTEGER,aux6600_INTEGER,aux6606_INTEGER,aux6612_INTEGER,aux6618_INTEGER,aux6624_INTEGER,aux6630_INTEGER,aux6636_INTEGER,aux6642_INTEGER,aux6648_INTEGER,aux6654_INTEGER,aux6660_INTEGER,aux6664_INTEGER,1],0,aux6665_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux6666_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux6667_BOOL);
constraint int_lin_eq([-1,1,1],[aux6668,2,s_00001],0);
constraint int_lt_reif(s_00004,aux6668,aux6669_BOOL);
constraint int_le_reif(s_00001, s_00004,aux6670_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux6666_BOOL,aux6667_BOOL,aux6669_BOOL,aux6670_BOOL],aux6671_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux6672_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux6673_BOOL);
constraint int_lin_eq([-1,1,1],[aux6674,6,s_00002],0);
constraint int_lt_reif(s_00004,aux6674,aux6675_BOOL);
constraint int_le_reif(s_00002, s_00004,aux6676_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux6672_BOOL,aux6673_BOOL,aux6675_BOOL,aux6676_BOOL],aux6677_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux6678_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux6679_BOOL);
constraint int_lin_eq([-1,1,1],[aux6680,1,s_00003],0);
constraint int_lt_reif(s_00004,aux6680,aux6681_BOOL);
constraint int_le_reif(s_00003, s_00004,aux6682_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux6678_BOOL,aux6679_BOOL,aux6681_BOOL,aux6682_BOOL],aux6683_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux6684_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux6685_BOOL);
constraint int_lin_eq([-1,1,1],[aux6686,1,s_00005],0);
constraint int_lt_reif(s_00004,aux6686,aux6687_BOOL);
constraint int_le_reif(s_00005, s_00004,aux6688_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux6684_BOOL,aux6685_BOOL,aux6687_BOOL,aux6688_BOOL],aux6689_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux6690_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux6691_BOOL);
constraint int_lin_eq([-1,1,1],[aux6692,4,s_00006],0);
constraint int_lt_reif(s_00004,aux6692,aux6693_BOOL);
constraint int_le_reif(s_00006, s_00004,aux6694_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux6690_BOOL,aux6691_BOOL,aux6693_BOOL,aux6694_BOOL],aux6695_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux6696_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux6697_BOOL);
constraint int_lin_eq([-1,1,1],[aux6698,2,s_00007],0);
constraint int_lt_reif(s_00004,aux6698,aux6699_BOOL);
constraint int_le_reif(s_00007, s_00004,aux6700_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux6696_BOOL,aux6697_BOOL,aux6699_BOOL,aux6700_BOOL],aux6701_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux6702_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux6703_BOOL);
constraint int_lin_eq([-1,1,1],[aux6704,2,s_00008],0);
constraint int_lt_reif(s_00004,aux6704,aux6705_BOOL);
constraint int_le_reif(s_00008, s_00004,aux6706_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux6702_BOOL,aux6703_BOOL,aux6705_BOOL,aux6706_BOOL],aux6707_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux6708_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux6709_BOOL);
constraint int_lin_eq([-1,1,1],[aux6710,2,s_00009],0);
constraint int_lt_reif(s_00004,aux6710,aux6711_BOOL);
constraint int_le_reif(s_00009, s_00004,aux6712_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux6708_BOOL,aux6709_BOOL,aux6711_BOOL,aux6712_BOOL],aux6713_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux6714_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux6715_BOOL);
constraint int_lin_eq([-1,1,1],[aux6716,1,s_00010],0);
constraint int_lt_reif(s_00004,aux6716,aux6717_BOOL);
constraint int_le_reif(s_00010, s_00004,aux6718_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux6714_BOOL,aux6715_BOOL,aux6717_BOOL,aux6718_BOOL],aux6719_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux6720_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux6721_BOOL);
constraint int_lin_eq([-1,1,1],[aux6722,2,s_00011],0);
constraint int_lt_reif(s_00004,aux6722,aux6723_BOOL);
constraint int_le_reif(s_00011, s_00004,aux6724_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux6720_BOOL,aux6721_BOOL,aux6723_BOOL,aux6724_BOOL],aux6725_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux6726_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux6727_BOOL);
constraint int_lin_eq([-1,1,1],[aux6728,3,s_00012],0);
constraint int_lt_reif(s_00004,aux6728,aux6729_BOOL);
constraint int_le_reif(s_00012, s_00004,aux6730_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux6726_BOOL,aux6727_BOOL,aux6729_BOOL,aux6730_BOOL],aux6731_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux6732_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux6733_BOOL);
constraint int_lin_eq([-1,1,1],[aux6734,3,s_00013],0);
constraint int_lt_reif(s_00004,aux6734,aux6735_BOOL);
constraint int_le_reif(s_00013, s_00004,aux6736_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux6732_BOOL,aux6733_BOOL,aux6735_BOOL,aux6736_BOOL],aux6737_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux6738_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux6739_BOOL);
constraint int_lin_eq([-1,1,1],[aux6740,3,s_00014],0);
constraint int_lt_reif(s_00004,aux6740,aux6741_BOOL);
constraint int_le_reif(s_00014, s_00004,aux6742_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux6738_BOOL,aux6739_BOOL,aux6741_BOOL,aux6742_BOOL],aux6743_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux6744_BOOL);
constraint int_lin_eq([-1,1,1],[aux6745,2,s_00004],0);
constraint int_lt_reif(s_00004,aux6745,aux6746_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux6744_BOOL,aux6746_BOOL],aux6747_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux6671_INTEGER,aux6677_INTEGER,aux6683_INTEGER,aux6689_INTEGER,aux6695_INTEGER,aux6701_INTEGER,aux6707_INTEGER,aux6713_INTEGER,aux6719_INTEGER,aux6725_INTEGER,aux6731_INTEGER,aux6737_INTEGER,aux6743_INTEGER,aux6747_INTEGER,1],0,aux6748_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux6749_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux6750_BOOL);
constraint int_lin_eq([-1,1,1],[aux6751,2,s_00001],0);
constraint int_lt_reif(s_00011,aux6751,aux6752_BOOL);
constraint int_le_reif(s_00001, s_00011,aux6753_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux6749_BOOL,aux6750_BOOL,aux6752_BOOL,aux6753_BOOL],aux6754_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux6755_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux6756_BOOL);
constraint int_lin_eq([-1,1,1],[aux6757,6,s_00002],0);
constraint int_lt_reif(s_00011,aux6757,aux6758_BOOL);
constraint int_le_reif(s_00002, s_00011,aux6759_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux6755_BOOL,aux6756_BOOL,aux6758_BOOL,aux6759_BOOL],aux6760_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux6761_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux6762_BOOL);
constraint int_lin_eq([-1,1,1],[aux6763,1,s_00003],0);
constraint int_lt_reif(s_00011,aux6763,aux6764_BOOL);
constraint int_le_reif(s_00003, s_00011,aux6765_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux6761_BOOL,aux6762_BOOL,aux6764_BOOL,aux6765_BOOL],aux6766_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux6767_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux6768_BOOL);
constraint int_lin_eq([-1,1,1],[aux6769,2,s_00004],0);
constraint int_lt_reif(s_00011,aux6769,aux6770_BOOL);
constraint int_le_reif(s_00004, s_00011,aux6771_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux6767_BOOL,aux6768_BOOL,aux6770_BOOL,aux6771_BOOL],aux6772_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux6773_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux6774_BOOL);
constraint int_lin_eq([-1,1,1],[aux6775,1,s_00005],0);
constraint int_lt_reif(s_00011,aux6775,aux6776_BOOL);
constraint int_le_reif(s_00005, s_00011,aux6777_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux6773_BOOL,aux6774_BOOL,aux6776_BOOL,aux6777_BOOL],aux6778_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux6779_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux6780_BOOL);
constraint int_lin_eq([-1,1,1],[aux6781,4,s_00006],0);
constraint int_lt_reif(s_00011,aux6781,aux6782_BOOL);
constraint int_le_reif(s_00006, s_00011,aux6783_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux6779_BOOL,aux6780_BOOL,aux6782_BOOL,aux6783_BOOL],aux6784_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux6785_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux6786_BOOL);
constraint int_lin_eq([-1,1,1],[aux6787,2,s_00007],0);
constraint int_lt_reif(s_00011,aux6787,aux6788_BOOL);
constraint int_le_reif(s_00007, s_00011,aux6789_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux6785_BOOL,aux6786_BOOL,aux6788_BOOL,aux6789_BOOL],aux6790_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux6791_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux6792_BOOL);
constraint int_lin_eq([-1,1,1],[aux6793,2,s_00008],0);
constraint int_lt_reif(s_00011,aux6793,aux6794_BOOL);
constraint int_le_reif(s_00008, s_00011,aux6795_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux6791_BOOL,aux6792_BOOL,aux6794_BOOL,aux6795_BOOL],aux6796_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux6797_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux6798_BOOL);
constraint int_lin_eq([-1,1,1],[aux6799,2,s_00009],0);
constraint int_lt_reif(s_00011,aux6799,aux6800_BOOL);
constraint int_le_reif(s_00009, s_00011,aux6801_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux6797_BOOL,aux6798_BOOL,aux6800_BOOL,aux6801_BOOL],aux6802_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux6803_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux6804_BOOL);
constraint int_lin_eq([-1,1,1],[aux6805,1,s_00010],0);
constraint int_lt_reif(s_00011,aux6805,aux6806_BOOL);
constraint int_le_reif(s_00010, s_00011,aux6807_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux6803_BOOL,aux6804_BOOL,aux6806_BOOL,aux6807_BOOL],aux6808_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux6809_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux6810_BOOL);
constraint int_lin_eq([-1,1,1],[aux6811,3,s_00012],0);
constraint int_lt_reif(s_00011,aux6811,aux6812_BOOL);
constraint int_le_reif(s_00012, s_00011,aux6813_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux6809_BOOL,aux6810_BOOL,aux6812_BOOL,aux6813_BOOL],aux6814_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux6815_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux6816_BOOL);
constraint int_lin_eq([-1,1,1],[aux6817,3,s_00013],0);
constraint int_lt_reif(s_00011,aux6817,aux6818_BOOL);
constraint int_le_reif(s_00013, s_00011,aux6819_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux6815_BOOL,aux6816_BOOL,aux6818_BOOL,aux6819_BOOL],aux6820_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux6821_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux6822_BOOL);
constraint int_lin_eq([-1,1,1],[aux6823,3,s_00014],0);
constraint int_lt_reif(s_00011,aux6823,aux6824_BOOL);
constraint int_le_reif(s_00014, s_00011,aux6825_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux6821_BOOL,aux6822_BOOL,aux6824_BOOL,aux6825_BOOL],aux6826_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux6827_BOOL);
constraint int_lin_eq([-1,1,1],[aux6828,2,s_00011],0);
constraint int_lt_reif(s_00011,aux6828,aux6829_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux6827_BOOL,aux6829_BOOL],aux6830_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux6754_INTEGER,aux6760_INTEGER,aux6766_INTEGER,aux6772_INTEGER,aux6778_INTEGER,aux6784_INTEGER,aux6790_INTEGER,aux6796_INTEGER,aux6802_INTEGER,aux6808_INTEGER,aux6814_INTEGER,aux6820_INTEGER,aux6826_INTEGER,aux6830_INTEGER,1],0,aux6831_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux6832_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux6833_BOOL);
constraint int_lin_eq([-1,1,1],[aux6834,2,s_00001],0);
constraint int_lt_reif(s_00002,aux6834,aux6835_BOOL);
constraint int_le_reif(s_00001, s_00002,aux6836_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux6832_BOOL,aux6833_BOOL,aux6835_BOOL,aux6836_BOOL],aux6837_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux6838_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux6839_BOOL);
constraint int_lin_eq([-1,1,1],[aux6840,1,s_00003],0);
constraint int_lt_reif(s_00002,aux6840,aux6841_BOOL);
constraint int_le_reif(s_00003, s_00002,aux6842_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux6838_BOOL,aux6839_BOOL,aux6841_BOOL,aux6842_BOOL],aux6843_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux6844_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux6845_BOOL);
constraint int_lin_eq([-1,1,1],[aux6846,2,s_00004],0);
constraint int_lt_reif(s_00002,aux6846,aux6847_BOOL);
constraint int_le_reif(s_00004, s_00002,aux6848_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux6844_BOOL,aux6845_BOOL,aux6847_BOOL,aux6848_BOOL],aux6849_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux6850_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux6851_BOOL);
constraint int_lin_eq([-1,1,1],[aux6852,1,s_00005],0);
constraint int_lt_reif(s_00002,aux6852,aux6853_BOOL);
constraint int_le_reif(s_00005, s_00002,aux6854_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux6850_BOOL,aux6851_BOOL,aux6853_BOOL,aux6854_BOOL],aux6855_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux6856_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux6857_BOOL);
constraint int_lin_eq([-1,1,1],[aux6858,4,s_00006],0);
constraint int_lt_reif(s_00002,aux6858,aux6859_BOOL);
constraint int_le_reif(s_00006, s_00002,aux6860_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux6856_BOOL,aux6857_BOOL,aux6859_BOOL,aux6860_BOOL],aux6861_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux6862_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux6863_BOOL);
constraint int_lin_eq([-1,1,1],[aux6864,2,s_00007],0);
constraint int_lt_reif(s_00002,aux6864,aux6865_BOOL);
constraint int_le_reif(s_00007, s_00002,aux6866_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux6862_BOOL,aux6863_BOOL,aux6865_BOOL,aux6866_BOOL],aux6867_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux6868_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux6869_BOOL);
constraint int_lin_eq([-1,1,1],[aux6870,2,s_00008],0);
constraint int_lt_reif(s_00002,aux6870,aux6871_BOOL);
constraint int_le_reif(s_00008, s_00002,aux6872_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux6868_BOOL,aux6869_BOOL,aux6871_BOOL,aux6872_BOOL],aux6873_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux6874_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux6875_BOOL);
constraint int_lin_eq([-1,1,1],[aux6876,2,s_00009],0);
constraint int_lt_reif(s_00002,aux6876,aux6877_BOOL);
constraint int_le_reif(s_00009, s_00002,aux6878_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux6874_BOOL,aux6875_BOOL,aux6877_BOOL,aux6878_BOOL],aux6879_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux6880_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux6881_BOOL);
constraint int_lin_eq([-1,1,1],[aux6882,1,s_00010],0);
constraint int_lt_reif(s_00002,aux6882,aux6883_BOOL);
constraint int_le_reif(s_00010, s_00002,aux6884_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux6880_BOOL,aux6881_BOOL,aux6883_BOOL,aux6884_BOOL],aux6885_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux6886_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux6887_BOOL);
constraint int_lin_eq([-1,1,1],[aux6888,2,s_00011],0);
constraint int_lt_reif(s_00002,aux6888,aux6889_BOOL);
constraint int_le_reif(s_00011, s_00002,aux6890_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux6886_BOOL,aux6887_BOOL,aux6889_BOOL,aux6890_BOOL],aux6891_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux6892_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux6893_BOOL);
constraint int_lin_eq([-1,1,1],[aux6894,3,s_00012],0);
constraint int_lt_reif(s_00002,aux6894,aux6895_BOOL);
constraint int_le_reif(s_00012, s_00002,aux6896_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux6892_BOOL,aux6893_BOOL,aux6895_BOOL,aux6896_BOOL],aux6897_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux6898_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux6899_BOOL);
constraint int_lin_eq([-1,1,1],[aux6900,3,s_00013],0);
constraint int_lt_reif(s_00002,aux6900,aux6901_BOOL);
constraint int_le_reif(s_00013, s_00002,aux6902_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux6898_BOOL,aux6899_BOOL,aux6901_BOOL,aux6902_BOOL],aux6903_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux6904_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux6905_BOOL);
constraint int_lin_eq([-1,1,1],[aux6906,3,s_00014],0);
constraint int_lt_reif(s_00002,aux6906,aux6907_BOOL);
constraint int_le_reif(s_00014, s_00002,aux6908_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux6904_BOOL,aux6905_BOOL,aux6907_BOOL,aux6908_BOOL],aux6909_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux6910_BOOL);
constraint int_lin_eq([-1,1,1],[aux6911,6,s_00002],0);
constraint int_lt_reif(s_00002,aux6911,aux6912_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux6910_BOOL,aux6912_BOOL],aux6913_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux6837_INTEGER,aux6843_INTEGER,aux6849_INTEGER,aux6855_INTEGER,aux6861_INTEGER,aux6867_INTEGER,aux6873_INTEGER,aux6879_INTEGER,aux6885_INTEGER,aux6891_INTEGER,aux6897_INTEGER,aux6903_INTEGER,aux6909_INTEGER,aux6913_INTEGER,1],0,aux6914_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux6915_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux6916_BOOL);
constraint int_lin_eq([-1,1,1],[aux6917,2,s_00001],0);
constraint int_lt_reif(s_00003,aux6917,aux6918_BOOL);
constraint int_le_reif(s_00001, s_00003,aux6919_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux6915_BOOL,aux6916_BOOL,aux6918_BOOL,aux6919_BOOL],aux6920_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux6921_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux6922_BOOL);
constraint int_lin_eq([-1,1,1],[aux6923,6,s_00002],0);
constraint int_lt_reif(s_00003,aux6923,aux6924_BOOL);
constraint int_le_reif(s_00002, s_00003,aux6925_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux6921_BOOL,aux6922_BOOL,aux6924_BOOL,aux6925_BOOL],aux6926_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux6927_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux6928_BOOL);
constraint int_lin_eq([-1,1,1],[aux6929,2,s_00004],0);
constraint int_lt_reif(s_00003,aux6929,aux6930_BOOL);
constraint int_le_reif(s_00004, s_00003,aux6931_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux6927_BOOL,aux6928_BOOL,aux6930_BOOL,aux6931_BOOL],aux6932_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux6933_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux6934_BOOL);
constraint int_lin_eq([-1,1,1],[aux6935,1,s_00005],0);
constraint int_lt_reif(s_00003,aux6935,aux6936_BOOL);
constraint int_le_reif(s_00005, s_00003,aux6937_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux6933_BOOL,aux6934_BOOL,aux6936_BOOL,aux6937_BOOL],aux6938_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux6939_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux6940_BOOL);
constraint int_lin_eq([-1,1,1],[aux6941,4,s_00006],0);
constraint int_lt_reif(s_00003,aux6941,aux6942_BOOL);
constraint int_le_reif(s_00006, s_00003,aux6943_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux6939_BOOL,aux6940_BOOL,aux6942_BOOL,aux6943_BOOL],aux6944_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux6945_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux6946_BOOL);
constraint int_lin_eq([-1,1,1],[aux6947,2,s_00007],0);
constraint int_lt_reif(s_00003,aux6947,aux6948_BOOL);
constraint int_le_reif(s_00007, s_00003,aux6949_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux6945_BOOL,aux6946_BOOL,aux6948_BOOL,aux6949_BOOL],aux6950_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux6951_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux6952_BOOL);
constraint int_lin_eq([-1,1,1],[aux6953,2,s_00008],0);
constraint int_lt_reif(s_00003,aux6953,aux6954_BOOL);
constraint int_le_reif(s_00008, s_00003,aux6955_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux6951_BOOL,aux6952_BOOL,aux6954_BOOL,aux6955_BOOL],aux6956_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux6957_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux6958_BOOL);
constraint int_lin_eq([-1,1,1],[aux6959,2,s_00009],0);
constraint int_lt_reif(s_00003,aux6959,aux6960_BOOL);
constraint int_le_reif(s_00009, s_00003,aux6961_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux6957_BOOL,aux6958_BOOL,aux6960_BOOL,aux6961_BOOL],aux6962_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux6963_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux6964_BOOL);
constraint int_lin_eq([-1,1,1],[aux6965,1,s_00010],0);
constraint int_lt_reif(s_00003,aux6965,aux6966_BOOL);
constraint int_le_reif(s_00010, s_00003,aux6967_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux6963_BOOL,aux6964_BOOL,aux6966_BOOL,aux6967_BOOL],aux6968_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux6969_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux6970_BOOL);
constraint int_lin_eq([-1,1,1],[aux6971,2,s_00011],0);
constraint int_lt_reif(s_00003,aux6971,aux6972_BOOL);
constraint int_le_reif(s_00011, s_00003,aux6973_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux6969_BOOL,aux6970_BOOL,aux6972_BOOL,aux6973_BOOL],aux6974_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux6975_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux6976_BOOL);
constraint int_lin_eq([-1,1,1],[aux6977,3,s_00012],0);
constraint int_lt_reif(s_00003,aux6977,aux6978_BOOL);
constraint int_le_reif(s_00012, s_00003,aux6979_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux6975_BOOL,aux6976_BOOL,aux6978_BOOL,aux6979_BOOL],aux6980_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux6981_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux6982_BOOL);
constraint int_lin_eq([-1,1,1],[aux6983,3,s_00013],0);
constraint int_lt_reif(s_00003,aux6983,aux6984_BOOL);
constraint int_le_reif(s_00013, s_00003,aux6985_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux6981_BOOL,aux6982_BOOL,aux6984_BOOL,aux6985_BOOL],aux6986_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux6987_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux6988_BOOL);
constraint int_lin_eq([-1,1,1],[aux6989,3,s_00014],0);
constraint int_lt_reif(s_00003,aux6989,aux6990_BOOL);
constraint int_le_reif(s_00014, s_00003,aux6991_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux6987_BOOL,aux6988_BOOL,aux6990_BOOL,aux6991_BOOL],aux6992_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux6993_BOOL);
constraint int_lin_eq([-1,1,1],[aux6994,1,s_00003],0);
constraint int_lt_reif(s_00003,aux6994,aux6995_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux6993_BOOL,aux6995_BOOL],aux6996_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux6920_INTEGER,aux6926_INTEGER,aux6932_INTEGER,aux6938_INTEGER,aux6944_INTEGER,aux6950_INTEGER,aux6956_INTEGER,aux6962_INTEGER,aux6968_INTEGER,aux6974_INTEGER,aux6980_INTEGER,aux6986_INTEGER,aux6992_INTEGER,aux6996_INTEGER,1],0,aux6997_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux6998_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux6999_BOOL);
constraint int_lin_eq([-1,1,1],[aux7000,2,s_00001],0);
constraint int_lt_reif(s_00014,aux7000,aux7001_BOOL);
constraint int_le_reif(s_00001, s_00014,aux7002_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux6998_BOOL,aux6999_BOOL,aux7001_BOOL,aux7002_BOOL],aux7003_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux7004_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux7005_BOOL);
constraint int_lin_eq([-1,1,1],[aux7006,6,s_00002],0);
constraint int_lt_reif(s_00014,aux7006,aux7007_BOOL);
constraint int_le_reif(s_00002, s_00014,aux7008_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux7004_BOOL,aux7005_BOOL,aux7007_BOOL,aux7008_BOOL],aux7009_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux7010_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux7011_BOOL);
constraint int_lin_eq([-1,1,1],[aux7012,1,s_00003],0);
constraint int_lt_reif(s_00014,aux7012,aux7013_BOOL);
constraint int_le_reif(s_00003, s_00014,aux7014_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux7010_BOOL,aux7011_BOOL,aux7013_BOOL,aux7014_BOOL],aux7015_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux7016_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux7017_BOOL);
constraint int_lin_eq([-1,1,1],[aux7018,2,s_00004],0);
constraint int_lt_reif(s_00014,aux7018,aux7019_BOOL);
constraint int_le_reif(s_00004, s_00014,aux7020_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux7016_BOOL,aux7017_BOOL,aux7019_BOOL,aux7020_BOOL],aux7021_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux7022_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux7023_BOOL);
constraint int_lin_eq([-1,1,1],[aux7024,1,s_00005],0);
constraint int_lt_reif(s_00014,aux7024,aux7025_BOOL);
constraint int_le_reif(s_00005, s_00014,aux7026_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux7022_BOOL,aux7023_BOOL,aux7025_BOOL,aux7026_BOOL],aux7027_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux7028_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux7029_BOOL);
constraint int_lin_eq([-1,1,1],[aux7030,4,s_00006],0);
constraint int_lt_reif(s_00014,aux7030,aux7031_BOOL);
constraint int_le_reif(s_00006, s_00014,aux7032_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux7028_BOOL,aux7029_BOOL,aux7031_BOOL,aux7032_BOOL],aux7033_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux7034_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux7035_BOOL);
constraint int_lin_eq([-1,1,1],[aux7036,2,s_00007],0);
constraint int_lt_reif(s_00014,aux7036,aux7037_BOOL);
constraint int_le_reif(s_00007, s_00014,aux7038_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux7034_BOOL,aux7035_BOOL,aux7037_BOOL,aux7038_BOOL],aux7039_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux7040_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux7041_BOOL);
constraint int_lin_eq([-1,1,1],[aux7042,2,s_00008],0);
constraint int_lt_reif(s_00014,aux7042,aux7043_BOOL);
constraint int_le_reif(s_00008, s_00014,aux7044_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux7040_BOOL,aux7041_BOOL,aux7043_BOOL,aux7044_BOOL],aux7045_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux7046_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux7047_BOOL);
constraint int_lin_eq([-1,1,1],[aux7048,2,s_00009],0);
constraint int_lt_reif(s_00014,aux7048,aux7049_BOOL);
constraint int_le_reif(s_00009, s_00014,aux7050_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux7046_BOOL,aux7047_BOOL,aux7049_BOOL,aux7050_BOOL],aux7051_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux7052_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux7053_BOOL);
constraint int_lin_eq([-1,1,1],[aux7054,1,s_00010],0);
constraint int_lt_reif(s_00014,aux7054,aux7055_BOOL);
constraint int_le_reif(s_00010, s_00014,aux7056_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux7052_BOOL,aux7053_BOOL,aux7055_BOOL,aux7056_BOOL],aux7057_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux7058_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux7059_BOOL);
constraint int_lin_eq([-1,1,1],[aux7060,2,s_00011],0);
constraint int_lt_reif(s_00014,aux7060,aux7061_BOOL);
constraint int_le_reif(s_00011, s_00014,aux7062_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux7058_BOOL,aux7059_BOOL,aux7061_BOOL,aux7062_BOOL],aux7063_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux7064_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux7065_BOOL);
constraint int_lin_eq([-1,1,1],[aux7066,3,s_00012],0);
constraint int_lt_reif(s_00014,aux7066,aux7067_BOOL);
constraint int_le_reif(s_00012, s_00014,aux7068_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux7064_BOOL,aux7065_BOOL,aux7067_BOOL,aux7068_BOOL],aux7069_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux7070_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux7071_BOOL);
constraint int_lin_eq([-1,1,1],[aux7072,3,s_00013],0);
constraint int_lt_reif(s_00014,aux7072,aux7073_BOOL);
constraint int_le_reif(s_00013, s_00014,aux7074_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux7070_BOOL,aux7071_BOOL,aux7073_BOOL,aux7074_BOOL],aux7075_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux7076_BOOL);
constraint int_lin_eq([-1,1,1],[aux7077,3,s_00014],0);
constraint int_lt_reif(s_00014,aux7077,aux7078_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux7076_BOOL,aux7078_BOOL],aux7079_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux7003_INTEGER,aux7009_INTEGER,aux7015_INTEGER,aux7021_INTEGER,aux7027_INTEGER,aux7033_INTEGER,aux7039_INTEGER,aux7045_INTEGER,aux7051_INTEGER,aux7057_INTEGER,aux7063_INTEGER,aux7069_INTEGER,aux7075_INTEGER,aux7079_INTEGER,1],0,aux7080_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux7081_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux7082_BOOL);
constraint int_lin_eq([-1,1,1],[aux7083,2,s_00001],0);
constraint int_lt_reif(s_00013,aux7083,aux7084_BOOL);
constraint int_le_reif(s_00001, s_00013,aux7085_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux7081_BOOL,aux7082_BOOL,aux7084_BOOL,aux7085_BOOL],aux7086_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux7087_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux7088_BOOL);
constraint int_lin_eq([-1,1,1],[aux7089,6,s_00002],0);
constraint int_lt_reif(s_00013,aux7089,aux7090_BOOL);
constraint int_le_reif(s_00002, s_00013,aux7091_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux7087_BOOL,aux7088_BOOL,aux7090_BOOL,aux7091_BOOL],aux7092_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux7093_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux7094_BOOL);
constraint int_lin_eq([-1,1,1],[aux7095,1,s_00003],0);
constraint int_lt_reif(s_00013,aux7095,aux7096_BOOL);
constraint int_le_reif(s_00003, s_00013,aux7097_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux7093_BOOL,aux7094_BOOL,aux7096_BOOL,aux7097_BOOL],aux7098_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux7099_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux7100_BOOL);
constraint int_lin_eq([-1,1,1],[aux7101,2,s_00004],0);
constraint int_lt_reif(s_00013,aux7101,aux7102_BOOL);
constraint int_le_reif(s_00004, s_00013,aux7103_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux7099_BOOL,aux7100_BOOL,aux7102_BOOL,aux7103_BOOL],aux7104_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux7105_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux7106_BOOL);
constraint int_lin_eq([-1,1,1],[aux7107,1,s_00005],0);
constraint int_lt_reif(s_00013,aux7107,aux7108_BOOL);
constraint int_le_reif(s_00005, s_00013,aux7109_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux7105_BOOL,aux7106_BOOL,aux7108_BOOL,aux7109_BOOL],aux7110_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux7111_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux7112_BOOL);
constraint int_lin_eq([-1,1,1],[aux7113,4,s_00006],0);
constraint int_lt_reif(s_00013,aux7113,aux7114_BOOL);
constraint int_le_reif(s_00006, s_00013,aux7115_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux7111_BOOL,aux7112_BOOL,aux7114_BOOL,aux7115_BOOL],aux7116_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux7117_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux7118_BOOL);
constraint int_lin_eq([-1,1,1],[aux7119,2,s_00007],0);
constraint int_lt_reif(s_00013,aux7119,aux7120_BOOL);
constraint int_le_reif(s_00007, s_00013,aux7121_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux7117_BOOL,aux7118_BOOL,aux7120_BOOL,aux7121_BOOL],aux7122_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux7123_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux7124_BOOL);
constraint int_lin_eq([-1,1,1],[aux7125,2,s_00008],0);
constraint int_lt_reif(s_00013,aux7125,aux7126_BOOL);
constraint int_le_reif(s_00008, s_00013,aux7127_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux7123_BOOL,aux7124_BOOL,aux7126_BOOL,aux7127_BOOL],aux7128_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux7129_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux7130_BOOL);
constraint int_lin_eq([-1,1,1],[aux7131,2,s_00009],0);
constraint int_lt_reif(s_00013,aux7131,aux7132_BOOL);
constraint int_le_reif(s_00009, s_00013,aux7133_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux7129_BOOL,aux7130_BOOL,aux7132_BOOL,aux7133_BOOL],aux7134_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux7135_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux7136_BOOL);
constraint int_lin_eq([-1,1,1],[aux7137,1,s_00010],0);
constraint int_lt_reif(s_00013,aux7137,aux7138_BOOL);
constraint int_le_reif(s_00010, s_00013,aux7139_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux7135_BOOL,aux7136_BOOL,aux7138_BOOL,aux7139_BOOL],aux7140_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux7141_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux7142_BOOL);
constraint int_lin_eq([-1,1,1],[aux7143,2,s_00011],0);
constraint int_lt_reif(s_00013,aux7143,aux7144_BOOL);
constraint int_le_reif(s_00011, s_00013,aux7145_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux7141_BOOL,aux7142_BOOL,aux7144_BOOL,aux7145_BOOL],aux7146_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux7147_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux7148_BOOL);
constraint int_lin_eq([-1,1,1],[aux7149,3,s_00012],0);
constraint int_lt_reif(s_00013,aux7149,aux7150_BOOL);
constraint int_le_reif(s_00012, s_00013,aux7151_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux7147_BOOL,aux7148_BOOL,aux7150_BOOL,aux7151_BOOL],aux7152_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux7153_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux7154_BOOL);
constraint int_lin_eq([-1,1,1],[aux7155,3,s_00014],0);
constraint int_lt_reif(s_00013,aux7155,aux7156_BOOL);
constraint int_le_reif(s_00014, s_00013,aux7157_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux7153_BOOL,aux7154_BOOL,aux7156_BOOL,aux7157_BOOL],aux7158_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux7159_BOOL);
constraint int_lin_eq([-1,1,1],[aux7160,3,s_00013],0);
constraint int_lt_reif(s_00013,aux7160,aux7161_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux7159_BOOL,aux7161_BOOL],aux7162_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux7086_INTEGER,aux7092_INTEGER,aux7098_INTEGER,aux7104_INTEGER,aux7110_INTEGER,aux7116_INTEGER,aux7122_INTEGER,aux7128_INTEGER,aux7134_INTEGER,aux7140_INTEGER,aux7146_INTEGER,aux7152_INTEGER,aux7158_INTEGER,aux7162_INTEGER,1],0,aux7163_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux7164_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux7165_BOOL);
constraint int_lin_eq([-1,1,1],[aux7166,2,s_00001],0);
constraint int_lt_reif(s_00006,aux7166,aux7167_BOOL);
constraint int_le_reif(s_00001, s_00006,aux7168_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux7164_BOOL,aux7165_BOOL,aux7167_BOOL,aux7168_BOOL],aux7169_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux7170_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux7171_BOOL);
constraint int_lin_eq([-1,1,1],[aux7172,6,s_00002],0);
constraint int_lt_reif(s_00006,aux7172,aux7173_BOOL);
constraint int_le_reif(s_00002, s_00006,aux7174_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux7170_BOOL,aux7171_BOOL,aux7173_BOOL,aux7174_BOOL],aux7175_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux7176_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux7177_BOOL);
constraint int_lin_eq([-1,1,1],[aux7178,1,s_00003],0);
constraint int_lt_reif(s_00006,aux7178,aux7179_BOOL);
constraint int_le_reif(s_00003, s_00006,aux7180_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux7176_BOOL,aux7177_BOOL,aux7179_BOOL,aux7180_BOOL],aux7181_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux7182_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux7183_BOOL);
constraint int_lin_eq([-1,1,1],[aux7184,2,s_00004],0);
constraint int_lt_reif(s_00006,aux7184,aux7185_BOOL);
constraint int_le_reif(s_00004, s_00006,aux7186_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux7182_BOOL,aux7183_BOOL,aux7185_BOOL,aux7186_BOOL],aux7187_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux7188_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux7189_BOOL);
constraint int_lin_eq([-1,1,1],[aux7190,1,s_00005],0);
constraint int_lt_reif(s_00006,aux7190,aux7191_BOOL);
constraint int_le_reif(s_00005, s_00006,aux7192_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux7188_BOOL,aux7189_BOOL,aux7191_BOOL,aux7192_BOOL],aux7193_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux7194_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux7195_BOOL);
constraint int_lin_eq([-1,1,1],[aux7196,2,s_00007],0);
constraint int_lt_reif(s_00006,aux7196,aux7197_BOOL);
constraint int_le_reif(s_00007, s_00006,aux7198_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux7194_BOOL,aux7195_BOOL,aux7197_BOOL,aux7198_BOOL],aux7199_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux7200_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux7201_BOOL);
constraint int_lin_eq([-1,1,1],[aux7202,2,s_00008],0);
constraint int_lt_reif(s_00006,aux7202,aux7203_BOOL);
constraint int_le_reif(s_00008, s_00006,aux7204_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux7200_BOOL,aux7201_BOOL,aux7203_BOOL,aux7204_BOOL],aux7205_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux7206_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux7207_BOOL);
constraint int_lin_eq([-1,1,1],[aux7208,2,s_00009],0);
constraint int_lt_reif(s_00006,aux7208,aux7209_BOOL);
constraint int_le_reif(s_00009, s_00006,aux7210_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux7206_BOOL,aux7207_BOOL,aux7209_BOOL,aux7210_BOOL],aux7211_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux7212_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux7213_BOOL);
constraint int_lin_eq([-1,1,1],[aux7214,1,s_00010],0);
constraint int_lt_reif(s_00006,aux7214,aux7215_BOOL);
constraint int_le_reif(s_00010, s_00006,aux7216_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux7212_BOOL,aux7213_BOOL,aux7215_BOOL,aux7216_BOOL],aux7217_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux7218_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux7219_BOOL);
constraint int_lin_eq([-1,1,1],[aux7220,2,s_00011],0);
constraint int_lt_reif(s_00006,aux7220,aux7221_BOOL);
constraint int_le_reif(s_00011, s_00006,aux7222_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux7218_BOOL,aux7219_BOOL,aux7221_BOOL,aux7222_BOOL],aux7223_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux7224_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux7225_BOOL);
constraint int_lin_eq([-1,1,1],[aux7226,3,s_00012],0);
constraint int_lt_reif(s_00006,aux7226,aux7227_BOOL);
constraint int_le_reif(s_00012, s_00006,aux7228_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux7224_BOOL,aux7225_BOOL,aux7227_BOOL,aux7228_BOOL],aux7229_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux7230_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux7231_BOOL);
constraint int_lin_eq([-1,1,1],[aux7232,3,s_00013],0);
constraint int_lt_reif(s_00006,aux7232,aux7233_BOOL);
constraint int_le_reif(s_00013, s_00006,aux7234_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux7230_BOOL,aux7231_BOOL,aux7233_BOOL,aux7234_BOOL],aux7235_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux7236_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux7237_BOOL);
constraint int_lin_eq([-1,1,1],[aux7238,3,s_00014],0);
constraint int_lt_reif(s_00006,aux7238,aux7239_BOOL);
constraint int_le_reif(s_00014, s_00006,aux7240_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux7236_BOOL,aux7237_BOOL,aux7239_BOOL,aux7240_BOOL],aux7241_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux7242_BOOL);
constraint int_lin_eq([-1,1,1],[aux7243,4,s_00006],0);
constraint int_lt_reif(s_00006,aux7243,aux7244_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux7242_BOOL,aux7244_BOOL],aux7245_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux7169_INTEGER,aux7175_INTEGER,aux7181_INTEGER,aux7187_INTEGER,aux7193_INTEGER,aux7199_INTEGER,aux7205_INTEGER,aux7211_INTEGER,aux7217_INTEGER,aux7223_INTEGER,aux7229_INTEGER,aux7235_INTEGER,aux7241_INTEGER,aux7245_INTEGER,1],0,aux7246_BOOL);
constraint array_bool_and([aux6167_BOOL,aux6250_BOOL,aux6333_BOOL,aux6416_BOOL,aux6499_BOOL,aux6582_BOOL,aux6665_BOOL,aux6748_BOOL,aux6831_BOOL,aux6914_BOOL,aux6997_BOOL,aux7080_BOOL,aux7163_BOOL,aux7246_BOOL],aux7247_BOOL);
constraint int_lin_eq([-1,1,1],[aux7248,1,s_00005],0);
constraint int_lt_reif(s_00001,aux7248,aux7249_BOOL);
constraint int_le_reif(s_00005, s_00001,aux7250_BOOL);
constraint array_bool_and([aux7249_BOOL,aux7250_BOOL],aux7251_BOOL);
constraint int_lin_eq([-1,1,1],[aux7252,2,s_00007],0);
constraint int_lt_reif(s_00001,aux7252,aux7253_BOOL);
constraint int_le_reif(s_00007, s_00001,aux7254_BOOL);
constraint array_bool_and([aux7253_BOOL,aux7254_BOOL],aux7255_BOOL);
constraint int_lin_eq([-1,1,1],[aux7256,2,s_00009],0);
constraint int_lt_reif(s_00001,aux7256,aux7257_BOOL);
constraint int_le_reif(s_00009, s_00001,aux7258_BOOL);
constraint array_bool_and([aux7257_BOOL,aux7258_BOOL],aux7259_BOOL);
constraint int_lin_eq([-1,1,1],[aux7260,1,s_00010],0);
constraint int_lt_reif(s_00001,aux7260,aux7261_BOOL);
constraint int_le_reif(s_00010, s_00001,aux7262_BOOL);
constraint array_bool_and([aux7261_BOOL,aux7262_BOOL],aux7263_BOOL);
constraint int_lin_eq([-1,1,1],[aux7264,2,s_00011],0);
constraint int_lt_reif(s_00001,aux7264,aux7265_BOOL);
constraint int_le_reif(s_00011, s_00001,aux7266_BOOL);
constraint array_bool_and([aux7265_BOOL,aux7266_BOOL],aux7267_BOOL);
constraint int_lin_eq([-1,1,1],[aux7268,4,s_00006],0);
constraint int_lt_reif(s_00001,aux7268,aux7269_BOOL);
constraint int_le_reif(s_00006, s_00001,aux7270_BOOL);
constraint array_bool_and([aux7269_BOOL,aux7270_BOOL],aux7271_BOOL);
constraint int_lin_eq([-1,1,1],[aux7272,3,s_00012],0);
constraint int_lt_reif(s_00001,aux7272,aux7273_BOOL);
constraint int_le_reif(s_00012, s_00001,aux7274_BOOL);
constraint array_bool_and([aux7273_BOOL,aux7274_BOOL],aux7275_BOOL);
constraint int_lin_eq([-1,1,1],[aux7276,2,s_00001],0);
constraint int_lt_reif(s_00001,aux7276,aux7277_BOOL);
constraint int_lin_eq([-1,1,1],[aux7278,2,s_00001],0);
constraint int_lt_reif(s_00005,aux7278,aux7279_BOOL);
constraint int_le_reif(s_00001, s_00005,aux7280_BOOL);
constraint array_bool_and([aux7279_BOOL,aux7280_BOOL],aux7281_BOOL);
constraint int_lin_eq([-1,1,1],[aux7282,2,s_00007],0);
constraint int_lt_reif(s_00005,aux7282,aux7283_BOOL);
constraint int_le_reif(s_00007, s_00005,aux7284_BOOL);
constraint array_bool_and([aux7283_BOOL,aux7284_BOOL],aux7285_BOOL);
constraint int_lin_eq([-1,1,1],[aux7286,2,s_00009],0);
constraint int_lt_reif(s_00005,aux7286,aux7287_BOOL);
constraint int_le_reif(s_00009, s_00005,aux7288_BOOL);
constraint array_bool_and([aux7287_BOOL,aux7288_BOOL],aux7289_BOOL);
constraint int_lin_eq([-1,1,1],[aux7290,1,s_00010],0);
constraint int_lt_reif(s_00005,aux7290,aux7291_BOOL);
constraint int_le_reif(s_00010, s_00005,aux7292_BOOL);
constraint array_bool_and([aux7291_BOOL,aux7292_BOOL],aux7293_BOOL);
constraint int_lin_eq([-1,1,1],[aux7294,2,s_00011],0);
constraint int_lt_reif(s_00005,aux7294,aux7295_BOOL);
constraint int_le_reif(s_00011, s_00005,aux7296_BOOL);
constraint array_bool_and([aux7295_BOOL,aux7296_BOOL],aux7297_BOOL);
constraint int_lin_eq([-1,1,1],[aux7298,4,s_00006],0);
constraint int_lt_reif(s_00005,aux7298,aux7299_BOOL);
constraint int_le_reif(s_00006, s_00005,aux7300_BOOL);
constraint array_bool_and([aux7299_BOOL,aux7300_BOOL],aux7301_BOOL);
constraint int_lin_eq([-1,1,1],[aux7302,3,s_00012],0);
constraint int_lt_reif(s_00005,aux7302,aux7303_BOOL);
constraint int_le_reif(s_00012, s_00005,aux7304_BOOL);
constraint array_bool_and([aux7303_BOOL,aux7304_BOOL],aux7305_BOOL);
constraint int_lin_eq([-1,1,1],[aux7306,1,s_00005],0);
constraint int_lt_reif(s_00005,aux7306,aux7307_BOOL);
constraint int_lin_eq([-1,1,1],[aux7308,1,s_00005],0);
constraint int_lt_reif(s_00006,aux7308,aux7309_BOOL);
constraint int_le_reif(s_00005, s_00006,aux7310_BOOL);
constraint array_bool_and([aux7309_BOOL,aux7310_BOOL],aux7311_BOOL);
constraint int_lin_eq([-1,1,1],[aux7312,2,s_00001],0);
constraint int_lt_reif(s_00006,aux7312,aux7313_BOOL);
constraint int_le_reif(s_00001, s_00006,aux7314_BOOL);
constraint array_bool_and([aux7313_BOOL,aux7314_BOOL],aux7315_BOOL);
constraint int_lin_eq([-1,1,1],[aux7316,2,s_00007],0);
constraint int_lt_reif(s_00006,aux7316,aux7317_BOOL);
constraint int_le_reif(s_00007, s_00006,aux7318_BOOL);
constraint array_bool_and([aux7317_BOOL,aux7318_BOOL],aux7319_BOOL);
constraint int_lin_eq([-1,1,1],[aux7320,2,s_00009],0);
constraint int_lt_reif(s_00006,aux7320,aux7321_BOOL);
constraint int_le_reif(s_00009, s_00006,aux7322_BOOL);
constraint array_bool_and([aux7321_BOOL,aux7322_BOOL],aux7323_BOOL);
constraint int_lin_eq([-1,1,1],[aux7324,1,s_00010],0);
constraint int_lt_reif(s_00006,aux7324,aux7325_BOOL);
constraint int_le_reif(s_00010, s_00006,aux7326_BOOL);
constraint array_bool_and([aux7325_BOOL,aux7326_BOOL],aux7327_BOOL);
constraint int_lin_eq([-1,1,1],[aux7328,2,s_00011],0);
constraint int_lt_reif(s_00006,aux7328,aux7329_BOOL);
constraint int_le_reif(s_00011, s_00006,aux7330_BOOL);
constraint array_bool_and([aux7329_BOOL,aux7330_BOOL],aux7331_BOOL);
constraint int_lin_eq([-1,1,1],[aux7332,3,s_00012],0);
constraint int_lt_reif(s_00006,aux7332,aux7333_BOOL);
constraint int_le_reif(s_00012, s_00006,aux7334_BOOL);
constraint array_bool_and([aux7333_BOOL,aux7334_BOOL],aux7335_BOOL);
constraint int_lin_eq([-1,1,1],[aux7336,4,s_00006],0);
constraint int_lt_reif(s_00006,aux7336,aux7337_BOOL);
constraint int_lin_eq([-1,1,1],[aux7338,1,s_00005],0);
constraint int_lt_reif(s_00007,aux7338,aux7339_BOOL);
constraint int_le_reif(s_00005, s_00007,aux7340_BOOL);
constraint array_bool_and([aux7339_BOOL,aux7340_BOOL],aux7341_BOOL);
constraint int_lin_eq([-1,1,1],[aux7342,2,s_00001],0);
constraint int_lt_reif(s_00007,aux7342,aux7343_BOOL);
constraint int_le_reif(s_00001, s_00007,aux7344_BOOL);
constraint array_bool_and([aux7343_BOOL,aux7344_BOOL],aux7345_BOOL);
constraint int_lin_eq([-1,1,1],[aux7346,2,s_00009],0);
constraint int_lt_reif(s_00007,aux7346,aux7347_BOOL);
constraint int_le_reif(s_00009, s_00007,aux7348_BOOL);
constraint array_bool_and([aux7347_BOOL,aux7348_BOOL],aux7349_BOOL);
constraint int_lin_eq([-1,1,1],[aux7350,1,s_00010],0);
constraint int_lt_reif(s_00007,aux7350,aux7351_BOOL);
constraint int_le_reif(s_00010, s_00007,aux7352_BOOL);
constraint array_bool_and([aux7351_BOOL,aux7352_BOOL],aux7353_BOOL);
constraint int_lin_eq([-1,1,1],[aux7354,2,s_00011],0);
constraint int_lt_reif(s_00007,aux7354,aux7355_BOOL);
constraint int_le_reif(s_00011, s_00007,aux7356_BOOL);
constraint array_bool_and([aux7355_BOOL,aux7356_BOOL],aux7357_BOOL);
constraint int_lin_eq([-1,1,1],[aux7358,4,s_00006],0);
constraint int_lt_reif(s_00007,aux7358,aux7359_BOOL);
constraint int_le_reif(s_00006, s_00007,aux7360_BOOL);
constraint array_bool_and([aux7359_BOOL,aux7360_BOOL],aux7361_BOOL);
constraint int_lin_eq([-1,1,1],[aux7362,3,s_00012],0);
constraint int_lt_reif(s_00007,aux7362,aux7363_BOOL);
constraint int_le_reif(s_00012, s_00007,aux7364_BOOL);
constraint array_bool_and([aux7363_BOOL,aux7364_BOOL],aux7365_BOOL);
constraint int_lin_eq([-1,1,1],[aux7366,2,s_00007],0);
constraint int_lt_reif(s_00007,aux7366,aux7367_BOOL);
constraint int_lin_eq([-1,1,1],[aux7368,1,s_00005],0);
constraint int_lt_reif(s_00009,aux7368,aux7369_BOOL);
constraint int_le_reif(s_00005, s_00009,aux7370_BOOL);
constraint array_bool_and([aux7369_BOOL,aux7370_BOOL],aux7371_BOOL);
constraint int_lin_eq([-1,1,1],[aux7372,2,s_00001],0);
constraint int_lt_reif(s_00009,aux7372,aux7373_BOOL);
constraint int_le_reif(s_00001, s_00009,aux7374_BOOL);
constraint array_bool_and([aux7373_BOOL,aux7374_BOOL],aux7375_BOOL);
constraint int_lin_eq([-1,1,1],[aux7376,2,s_00007],0);
constraint int_lt_reif(s_00009,aux7376,aux7377_BOOL);
constraint int_le_reif(s_00007, s_00009,aux7378_BOOL);
constraint array_bool_and([aux7377_BOOL,aux7378_BOOL],aux7379_BOOL);
constraint int_lin_eq([-1,1,1],[aux7380,1,s_00010],0);
constraint int_lt_reif(s_00009,aux7380,aux7381_BOOL);
constraint int_le_reif(s_00010, s_00009,aux7382_BOOL);
constraint array_bool_and([aux7381_BOOL,aux7382_BOOL],aux7383_BOOL);
constraint int_lin_eq([-1,1,1],[aux7384,2,s_00011],0);
constraint int_lt_reif(s_00009,aux7384,aux7385_BOOL);
constraint int_le_reif(s_00011, s_00009,aux7386_BOOL);
constraint array_bool_and([aux7385_BOOL,aux7386_BOOL],aux7387_BOOL);
constraint int_lin_eq([-1,1,1],[aux7388,4,s_00006],0);
constraint int_lt_reif(s_00009,aux7388,aux7389_BOOL);
constraint int_le_reif(s_00006, s_00009,aux7390_BOOL);
constraint array_bool_and([aux7389_BOOL,aux7390_BOOL],aux7391_BOOL);
constraint int_lin_eq([-1,1,1],[aux7392,3,s_00012],0);
constraint int_lt_reif(s_00009,aux7392,aux7393_BOOL);
constraint int_le_reif(s_00012, s_00009,aux7394_BOOL);
constraint array_bool_and([aux7393_BOOL,aux7394_BOOL],aux7395_BOOL);
constraint int_lin_eq([-1,1,1],[aux7396,2,s_00009],0);
constraint int_lt_reif(s_00009,aux7396,aux7397_BOOL);
constraint int_lin_eq([-1,1,1],[aux7398,1,s_00005],0);
constraint int_lt_reif(s_00010,aux7398,aux7399_BOOL);
constraint int_le_reif(s_00005, s_00010,aux7400_BOOL);
constraint array_bool_and([aux7399_BOOL,aux7400_BOOL],aux7401_BOOL);
constraint int_lin_eq([-1,1,1],[aux7402,2,s_00001],0);
constraint int_lt_reif(s_00010,aux7402,aux7403_BOOL);
constraint int_le_reif(s_00001, s_00010,aux7404_BOOL);
constraint array_bool_and([aux7403_BOOL,aux7404_BOOL],aux7405_BOOL);
constraint int_lin_eq([-1,1,1],[aux7406,2,s_00007],0);
constraint int_lt_reif(s_00010,aux7406,aux7407_BOOL);
constraint int_le_reif(s_00007, s_00010,aux7408_BOOL);
constraint array_bool_and([aux7407_BOOL,aux7408_BOOL],aux7409_BOOL);
constraint int_lin_eq([-1,1,1],[aux7410,2,s_00009],0);
constraint int_lt_reif(s_00010,aux7410,aux7411_BOOL);
constraint int_le_reif(s_00009, s_00010,aux7412_BOOL);
constraint array_bool_and([aux7411_BOOL,aux7412_BOOL],aux7413_BOOL);
constraint int_lin_eq([-1,1,1],[aux7414,2,s_00011],0);
constraint int_lt_reif(s_00010,aux7414,aux7415_BOOL);
constraint int_le_reif(s_00011, s_00010,aux7416_BOOL);
constraint array_bool_and([aux7415_BOOL,aux7416_BOOL],aux7417_BOOL);
constraint int_lin_eq([-1,1,1],[aux7418,4,s_00006],0);
constraint int_lt_reif(s_00010,aux7418,aux7419_BOOL);
constraint int_le_reif(s_00006, s_00010,aux7420_BOOL);
constraint array_bool_and([aux7419_BOOL,aux7420_BOOL],aux7421_BOOL);
constraint int_lin_eq([-1,1,1],[aux7422,3,s_00012],0);
constraint int_lt_reif(s_00010,aux7422,aux7423_BOOL);
constraint int_le_reif(s_00012, s_00010,aux7424_BOOL);
constraint array_bool_and([aux7423_BOOL,aux7424_BOOL],aux7425_BOOL);
constraint int_lin_eq([-1,1,1],[aux7426,1,s_00010],0);
constraint int_lt_reif(s_00010,aux7426,aux7427_BOOL);
constraint int_lin_eq([-1,1,1],[aux7428,1,s_00005],0);
constraint int_lt_reif(s_00011,aux7428,aux7429_BOOL);
constraint int_le_reif(s_00005, s_00011,aux7430_BOOL);
constraint array_bool_and([aux7429_BOOL,aux7430_BOOL],aux7431_BOOL);
constraint int_lin_eq([-1,1,1],[aux7432,2,s_00001],0);
constraint int_lt_reif(s_00011,aux7432,aux7433_BOOL);
constraint int_le_reif(s_00001, s_00011,aux7434_BOOL);
constraint array_bool_and([aux7433_BOOL,aux7434_BOOL],aux7435_BOOL);
constraint int_lin_eq([-1,1,1],[aux7436,2,s_00007],0);
constraint int_lt_reif(s_00011,aux7436,aux7437_BOOL);
constraint int_le_reif(s_00007, s_00011,aux7438_BOOL);
constraint array_bool_and([aux7437_BOOL,aux7438_BOOL],aux7439_BOOL);
constraint int_lin_eq([-1,1,1],[aux7440,2,s_00009],0);
constraint int_lt_reif(s_00011,aux7440,aux7441_BOOL);
constraint int_le_reif(s_00009, s_00011,aux7442_BOOL);
constraint array_bool_and([aux7441_BOOL,aux7442_BOOL],aux7443_BOOL);
constraint int_lin_eq([-1,1,1],[aux7444,1,s_00010],0);
constraint int_lt_reif(s_00011,aux7444,aux7445_BOOL);
constraint int_le_reif(s_00010, s_00011,aux7446_BOOL);
constraint array_bool_and([aux7445_BOOL,aux7446_BOOL],aux7447_BOOL);
constraint int_lin_eq([-1,1,1],[aux7448,4,s_00006],0);
constraint int_lt_reif(s_00011,aux7448,aux7449_BOOL);
constraint int_le_reif(s_00006, s_00011,aux7450_BOOL);
constraint array_bool_and([aux7449_BOOL,aux7450_BOOL],aux7451_BOOL);
constraint int_lin_eq([-1,1,1],[aux7452,3,s_00012],0);
constraint int_lt_reif(s_00011,aux7452,aux7453_BOOL);
constraint int_le_reif(s_00012, s_00011,aux7454_BOOL);
constraint array_bool_and([aux7453_BOOL,aux7454_BOOL],aux7455_BOOL);
constraint int_lin_eq([-1,1,1],[aux7456,2,s_00011],0);
constraint int_lt_reif(s_00011,aux7456,aux7457_BOOL);
constraint int_lin_eq([-1,1,1],[aux7458,1,s_00005],0);
constraint int_lt_reif(s_00012,aux7458,aux7459_BOOL);
constraint int_le_reif(s_00005, s_00012,aux7460_BOOL);
constraint array_bool_and([aux7459_BOOL,aux7460_BOOL],aux7461_BOOL);
constraint int_lin_eq([-1,1,1],[aux7462,2,s_00001],0);
constraint int_lt_reif(s_00012,aux7462,aux7463_BOOL);
constraint int_le_reif(s_00001, s_00012,aux7464_BOOL);
constraint array_bool_and([aux7463_BOOL,aux7464_BOOL],aux7465_BOOL);
constraint int_lin_eq([-1,1,1],[aux7466,2,s_00007],0);
constraint int_lt_reif(s_00012,aux7466,aux7467_BOOL);
constraint int_le_reif(s_00007, s_00012,aux7468_BOOL);
constraint array_bool_and([aux7467_BOOL,aux7468_BOOL],aux7469_BOOL);
constraint int_lin_eq([-1,1,1],[aux7470,2,s_00009],0);
constraint int_lt_reif(s_00012,aux7470,aux7471_BOOL);
constraint int_le_reif(s_00009, s_00012,aux7472_BOOL);
constraint array_bool_and([aux7471_BOOL,aux7472_BOOL],aux7473_BOOL);
constraint int_lin_eq([-1,1,1],[aux7474,1,s_00010],0);
constraint int_lt_reif(s_00012,aux7474,aux7475_BOOL);
constraint int_le_reif(s_00010, s_00012,aux7476_BOOL);
constraint array_bool_and([aux7475_BOOL,aux7476_BOOL],aux7477_BOOL);
constraint int_lin_eq([-1,1,1],[aux7478,2,s_00011],0);
constraint int_lt_reif(s_00012,aux7478,aux7479_BOOL);
constraint int_le_reif(s_00011, s_00012,aux7480_BOOL);
constraint array_bool_and([aux7479_BOOL,aux7480_BOOL],aux7481_BOOL);
constraint int_lin_eq([-1,1,1],[aux7482,4,s_00006],0);
constraint int_lt_reif(s_00012,aux7482,aux7483_BOOL);
constraint int_le_reif(s_00006, s_00012,aux7484_BOOL);
constraint array_bool_and([aux7483_BOOL,aux7484_BOOL],aux7485_BOOL);
constraint int_lin_eq([-1,1,1],[aux7486,3,s_00012],0);
constraint int_lt_reif(s_00012,aux7486,aux7487_BOOL);
constraint int_lin_eq([-1,1,1],[aux7488,2,s_00011],0);
constraint int_lt_reif(s_00006,aux7488,aux7489_BOOL);
constraint int_le_reif(s_00011, s_00006,aux7490_BOOL);
constraint array_bool_and([aux7489_BOOL,aux7490_BOOL],aux7491_BOOL);
constraint int_lin_eq([-1,1,1],[aux7492,3,s_00014],0);
constraint int_lt_reif(s_00006,aux7492,aux7493_BOOL);
constraint int_le_reif(s_00014, s_00006,aux7494_BOOL);
constraint array_bool_and([aux7493_BOOL,aux7494_BOOL],aux7495_BOOL);
constraint int_lin_eq([-1,1,1],[aux7496,4,s_00006],0);
constraint int_lt_reif(s_00006,aux7496,aux7497_BOOL);
constraint int_lin_eq([-1,1,1],[aux7498,4,s_00006],0);
constraint int_lt_reif(s_00011,aux7498,aux7499_BOOL);
constraint int_le_reif(s_00006, s_00011,aux7500_BOOL);
constraint array_bool_and([aux7499_BOOL,aux7500_BOOL],aux7501_BOOL);
constraint int_lin_eq([-1,1,1],[aux7502,3,s_00014],0);
constraint int_lt_reif(s_00011,aux7502,aux7503_BOOL);
constraint int_le_reif(s_00014, s_00011,aux7504_BOOL);
constraint array_bool_and([aux7503_BOOL,aux7504_BOOL],aux7505_BOOL);
constraint int_lin_eq([-1,1,1],[aux7506,2,s_00011],0);
constraint int_lt_reif(s_00011,aux7506,aux7507_BOOL);
constraint int_lin_eq([-1,1,1],[aux7508,2,s_00011],0);
constraint int_lt_reif(s_00014,aux7508,aux7509_BOOL);
constraint int_le_reif(s_00011, s_00014,aux7510_BOOL);
constraint array_bool_and([aux7509_BOOL,aux7510_BOOL],aux7511_BOOL);
constraint int_lin_eq([-1,1,1],[aux7512,4,s_00006],0);
constraint int_lt_reif(s_00014,aux7512,aux7513_BOOL);
constraint int_le_reif(s_00006, s_00014,aux7514_BOOL);
constraint array_bool_and([aux7513_BOOL,aux7514_BOOL],aux7515_BOOL);
constraint int_lin_eq([-1,1,1],[aux7516,3,s_00014],0);
constraint int_lt_reif(s_00014,aux7516,aux7517_BOOL);
constraint int_lin_eq([-1,1,1],[aux7518,1,s_00005],0);
constraint int_lt_reif(s_00001,aux7518,aux7519_BOOL);
constraint int_le_reif(s_00005, s_00001,aux7520_BOOL);
constraint array_bool_and([aux7519_BOOL,aux7520_BOOL],aux7521_BOOL);
constraint int_lin_eq([-1,1,1],[aux7522,2,s_00004],0);
constraint int_lt_reif(s_00001,aux7522,aux7523_BOOL);
constraint int_le_reif(s_00004, s_00001,aux7524_BOOL);
constraint array_bool_and([aux7523_BOOL,aux7524_BOOL],aux7525_BOOL);
constraint int_lin_eq([-1,1,1],[aux7526,2,s_00007],0);
constraint int_lt_reif(s_00001,aux7526,aux7527_BOOL);
constraint int_le_reif(s_00007, s_00001,aux7528_BOOL);
constraint array_bool_and([aux7527_BOOL,aux7528_BOOL],aux7529_BOOL);
constraint int_lin_eq([-1,1,1],[aux7530,3,s_00012],0);
constraint int_lt_reif(s_00001,aux7530,aux7531_BOOL);
constraint int_le_reif(s_00012, s_00001,aux7532_BOOL);
constraint array_bool_and([aux7531_BOOL,aux7532_BOOL],aux7533_BOOL);
constraint int_lin_eq([-1,1,1],[aux7534,3,s_00013],0);
constraint int_lt_reif(s_00001,aux7534,aux7535_BOOL);
constraint int_le_reif(s_00013, s_00001,aux7536_BOOL);
constraint array_bool_and([aux7535_BOOL,aux7536_BOOL],aux7537_BOOL);
constraint int_lin_eq([-1,1,1],[aux7538,3,s_00014],0);
constraint int_lt_reif(s_00001,aux7538,aux7539_BOOL);
constraint int_le_reif(s_00014, s_00001,aux7540_BOOL);
constraint array_bool_and([aux7539_BOOL,aux7540_BOOL],aux7541_BOOL);
constraint int_lin_eq([-1,1,1],[aux7542,6,s_00002],0);
constraint int_lt_reif(s_00001,aux7542,aux7543_BOOL);
constraint int_le_reif(s_00002, s_00001,aux7544_BOOL);
constraint array_bool_and([aux7543_BOOL,aux7544_BOOL],aux7545_BOOL);
constraint int_lin_eq([-1,1,1],[aux7546,2,s_00001],0);
constraint int_lt_reif(s_00001,aux7546,aux7547_BOOL);
constraint int_lin_eq([-1,1,1],[aux7548,1,s_00005],0);
constraint int_lt_reif(s_00002,aux7548,aux7549_BOOL);
constraint int_le_reif(s_00005, s_00002,aux7550_BOOL);
constraint array_bool_and([aux7549_BOOL,aux7550_BOOL],aux7551_BOOL);
constraint int_lin_eq([-1,1,1],[aux7552,2,s_00001],0);
constraint int_lt_reif(s_00002,aux7552,aux7553_BOOL);
constraint int_le_reif(s_00001, s_00002,aux7554_BOOL);
constraint array_bool_and([aux7553_BOOL,aux7554_BOOL],aux7555_BOOL);
constraint int_lin_eq([-1,1,1],[aux7556,2,s_00004],0);
constraint int_lt_reif(s_00002,aux7556,aux7557_BOOL);
constraint int_le_reif(s_00004, s_00002,aux7558_BOOL);
constraint array_bool_and([aux7557_BOOL,aux7558_BOOL],aux7559_BOOL);
constraint int_lin_eq([-1,1,1],[aux7560,2,s_00007],0);
constraint int_lt_reif(s_00002,aux7560,aux7561_BOOL);
constraint int_le_reif(s_00007, s_00002,aux7562_BOOL);
constraint array_bool_and([aux7561_BOOL,aux7562_BOOL],aux7563_BOOL);
constraint int_lin_eq([-1,1,1],[aux7564,3,s_00012],0);
constraint int_lt_reif(s_00002,aux7564,aux7565_BOOL);
constraint int_le_reif(s_00012, s_00002,aux7566_BOOL);
constraint array_bool_and([aux7565_BOOL,aux7566_BOOL],aux7567_BOOL);
constraint int_lin_eq([-1,1,1],[aux7568,3,s_00013],0);
constraint int_lt_reif(s_00002,aux7568,aux7569_BOOL);
constraint int_le_reif(s_00013, s_00002,aux7570_BOOL);
constraint array_bool_and([aux7569_BOOL,aux7570_BOOL],aux7571_BOOL);
constraint int_lin_eq([-1,1,1],[aux7572,3,s_00014],0);
constraint int_lt_reif(s_00002,aux7572,aux7573_BOOL);
constraint int_le_reif(s_00014, s_00002,aux7574_BOOL);
constraint array_bool_and([aux7573_BOOL,aux7574_BOOL],aux7575_BOOL);
constraint int_lin_eq([-1,1,1],[aux7576,6,s_00002],0);
constraint int_lt_reif(s_00002,aux7576,aux7577_BOOL);
constraint int_lin_eq([-1,1,1],[aux7578,1,s_00005],0);
constraint int_lt_reif(s_00004,aux7578,aux7579_BOOL);
constraint int_le_reif(s_00005, s_00004,aux7580_BOOL);
constraint array_bool_and([aux7579_BOOL,aux7580_BOOL],aux7581_BOOL);
constraint int_lin_eq([-1,1,1],[aux7582,2,s_00001],0);
constraint int_lt_reif(s_00004,aux7582,aux7583_BOOL);
constraint int_le_reif(s_00001, s_00004,aux7584_BOOL);
constraint array_bool_and([aux7583_BOOL,aux7584_BOOL],aux7585_BOOL);
constraint int_lin_eq([-1,1,1],[aux7586,2,s_00007],0);
constraint int_lt_reif(s_00004,aux7586,aux7587_BOOL);
constraint int_le_reif(s_00007, s_00004,aux7588_BOOL);
constraint array_bool_and([aux7587_BOOL,aux7588_BOOL],aux7589_BOOL);
constraint int_lin_eq([-1,1,1],[aux7590,3,s_00012],0);
constraint int_lt_reif(s_00004,aux7590,aux7591_BOOL);
constraint int_le_reif(s_00012, s_00004,aux7592_BOOL);
constraint array_bool_and([aux7591_BOOL,aux7592_BOOL],aux7593_BOOL);
constraint int_lin_eq([-1,1,1],[aux7594,3,s_00013],0);
constraint int_lt_reif(s_00004,aux7594,aux7595_BOOL);
constraint int_le_reif(s_00013, s_00004,aux7596_BOOL);
constraint array_bool_and([aux7595_BOOL,aux7596_BOOL],aux7597_BOOL);
constraint int_lin_eq([-1,1,1],[aux7598,3,s_00014],0);
constraint int_lt_reif(s_00004,aux7598,aux7599_BOOL);
constraint int_le_reif(s_00014, s_00004,aux7600_BOOL);
constraint array_bool_and([aux7599_BOOL,aux7600_BOOL],aux7601_BOOL);
constraint int_lin_eq([-1,1,1],[aux7602,6,s_00002],0);
constraint int_lt_reif(s_00004,aux7602,aux7603_BOOL);
constraint int_le_reif(s_00002, s_00004,aux7604_BOOL);
constraint array_bool_and([aux7603_BOOL,aux7604_BOOL],aux7605_BOOL);
constraint int_lin_eq([-1,1,1],[aux7606,2,s_00004],0);
constraint int_lt_reif(s_00004,aux7606,aux7607_BOOL);
constraint int_lin_eq([-1,1,1],[aux7608,2,s_00001],0);
constraint int_lt_reif(s_00005,aux7608,aux7609_BOOL);
constraint int_le_reif(s_00001, s_00005,aux7610_BOOL);
constraint array_bool_and([aux7609_BOOL,aux7610_BOOL],aux7611_BOOL);
constraint int_lin_eq([-1,1,1],[aux7612,2,s_00004],0);
constraint int_lt_reif(s_00005,aux7612,aux7613_BOOL);
constraint int_le_reif(s_00004, s_00005,aux7614_BOOL);
constraint array_bool_and([aux7613_BOOL,aux7614_BOOL],aux7615_BOOL);
constraint int_lin_eq([-1,1,1],[aux7616,2,s_00007],0);
constraint int_lt_reif(s_00005,aux7616,aux7617_BOOL);
constraint int_le_reif(s_00007, s_00005,aux7618_BOOL);
constraint array_bool_and([aux7617_BOOL,aux7618_BOOL],aux7619_BOOL);
constraint int_lin_eq([-1,1,1],[aux7620,3,s_00012],0);
constraint int_lt_reif(s_00005,aux7620,aux7621_BOOL);
constraint int_le_reif(s_00012, s_00005,aux7622_BOOL);
constraint array_bool_and([aux7621_BOOL,aux7622_BOOL],aux7623_BOOL);
constraint int_lin_eq([-1,1,1],[aux7624,3,s_00013],0);
constraint int_lt_reif(s_00005,aux7624,aux7625_BOOL);
constraint int_le_reif(s_00013, s_00005,aux7626_BOOL);
constraint array_bool_and([aux7625_BOOL,aux7626_BOOL],aux7627_BOOL);
constraint int_lin_eq([-1,1,1],[aux7628,3,s_00014],0);
constraint int_lt_reif(s_00005,aux7628,aux7629_BOOL);
constraint int_le_reif(s_00014, s_00005,aux7630_BOOL);
constraint array_bool_and([aux7629_BOOL,aux7630_BOOL],aux7631_BOOL);
constraint int_lin_eq([-1,1,1],[aux7632,6,s_00002],0);
constraint int_lt_reif(s_00005,aux7632,aux7633_BOOL);
constraint int_le_reif(s_00002, s_00005,aux7634_BOOL);
constraint array_bool_and([aux7633_BOOL,aux7634_BOOL],aux7635_BOOL);
constraint int_lin_eq([-1,1,1],[aux7636,1,s_00005],0);
constraint int_lt_reif(s_00005,aux7636,aux7637_BOOL);
constraint int_lin_eq([-1,1,1],[aux7638,1,s_00005],0);
constraint int_lt_reif(s_00007,aux7638,aux7639_BOOL);
constraint int_le_reif(s_00005, s_00007,aux7640_BOOL);
constraint array_bool_and([aux7639_BOOL,aux7640_BOOL],aux7641_BOOL);
constraint int_lin_eq([-1,1,1],[aux7642,2,s_00001],0);
constraint int_lt_reif(s_00007,aux7642,aux7643_BOOL);
constraint int_le_reif(s_00001, s_00007,aux7644_BOOL);
constraint array_bool_and([aux7643_BOOL,aux7644_BOOL],aux7645_BOOL);
constraint int_lin_eq([-1,1,1],[aux7646,2,s_00004],0);
constraint int_lt_reif(s_00007,aux7646,aux7647_BOOL);
constraint int_le_reif(s_00004, s_00007,aux7648_BOOL);
constraint array_bool_and([aux7647_BOOL,aux7648_BOOL],aux7649_BOOL);
constraint int_lin_eq([-1,1,1],[aux7650,3,s_00012],0);
constraint int_lt_reif(s_00007,aux7650,aux7651_BOOL);
constraint int_le_reif(s_00012, s_00007,aux7652_BOOL);
constraint array_bool_and([aux7651_BOOL,aux7652_BOOL],aux7653_BOOL);
constraint int_lin_eq([-1,1,1],[aux7654,3,s_00013],0);
constraint int_lt_reif(s_00007,aux7654,aux7655_BOOL);
constraint int_le_reif(s_00013, s_00007,aux7656_BOOL);
constraint array_bool_and([aux7655_BOOL,aux7656_BOOL],aux7657_BOOL);
constraint int_lin_eq([-1,1,1],[aux7658,3,s_00014],0);
constraint int_lt_reif(s_00007,aux7658,aux7659_BOOL);
constraint int_le_reif(s_00014, s_00007,aux7660_BOOL);
constraint array_bool_and([aux7659_BOOL,aux7660_BOOL],aux7661_BOOL);
constraint int_lin_eq([-1,1,1],[aux7662,6,s_00002],0);
constraint int_lt_reif(s_00007,aux7662,aux7663_BOOL);
constraint int_le_reif(s_00002, s_00007,aux7664_BOOL);
constraint array_bool_and([aux7663_BOOL,aux7664_BOOL],aux7665_BOOL);
constraint int_lin_eq([-1,1,1],[aux7666,2,s_00007],0);
constraint int_lt_reif(s_00007,aux7666,aux7667_BOOL);
constraint int_lin_eq([-1,1,1],[aux7668,1,s_00005],0);
constraint int_lt_reif(s_00012,aux7668,aux7669_BOOL);
constraint int_le_reif(s_00005, s_00012,aux7670_BOOL);
constraint array_bool_and([aux7669_BOOL,aux7670_BOOL],aux7671_BOOL);
constraint int_lin_eq([-1,1,1],[aux7672,2,s_00001],0);
constraint int_lt_reif(s_00012,aux7672,aux7673_BOOL);
constraint int_le_reif(s_00001, s_00012,aux7674_BOOL);
constraint array_bool_and([aux7673_BOOL,aux7674_BOOL],aux7675_BOOL);
constraint int_lin_eq([-1,1,1],[aux7676,2,s_00004],0);
constraint int_lt_reif(s_00012,aux7676,aux7677_BOOL);
constraint int_le_reif(s_00004, s_00012,aux7678_BOOL);
constraint array_bool_and([aux7677_BOOL,aux7678_BOOL],aux7679_BOOL);
constraint int_lin_eq([-1,1,1],[aux7680,2,s_00007],0);
constraint int_lt_reif(s_00012,aux7680,aux7681_BOOL);
constraint int_le_reif(s_00007, s_00012,aux7682_BOOL);
constraint array_bool_and([aux7681_BOOL,aux7682_BOOL],aux7683_BOOL);
constraint int_lin_eq([-1,1,1],[aux7684,3,s_00013],0);
constraint int_lt_reif(s_00012,aux7684,aux7685_BOOL);
constraint int_le_reif(s_00013, s_00012,aux7686_BOOL);
constraint array_bool_and([aux7685_BOOL,aux7686_BOOL],aux7687_BOOL);
constraint int_lin_eq([-1,1,1],[aux7688,3,s_00014],0);
constraint int_lt_reif(s_00012,aux7688,aux7689_BOOL);
constraint int_le_reif(s_00014, s_00012,aux7690_BOOL);
constraint array_bool_and([aux7689_BOOL,aux7690_BOOL],aux7691_BOOL);
constraint int_lin_eq([-1,1,1],[aux7692,6,s_00002],0);
constraint int_lt_reif(s_00012,aux7692,aux7693_BOOL);
constraint int_le_reif(s_00002, s_00012,aux7694_BOOL);
constraint array_bool_and([aux7693_BOOL,aux7694_BOOL],aux7695_BOOL);
constraint int_lin_eq([-1,1,1],[aux7696,3,s_00012],0);
constraint int_lt_reif(s_00012,aux7696,aux7697_BOOL);
constraint int_lin_eq([-1,1,1],[aux7698,1,s_00005],0);
constraint int_lt_reif(s_00013,aux7698,aux7699_BOOL);
constraint int_le_reif(s_00005, s_00013,aux7700_BOOL);
constraint array_bool_and([aux7699_BOOL,aux7700_BOOL],aux7701_BOOL);
constraint int_lin_eq([-1,1,1],[aux7702,2,s_00001],0);
constraint int_lt_reif(s_00013,aux7702,aux7703_BOOL);
constraint int_le_reif(s_00001, s_00013,aux7704_BOOL);
constraint array_bool_and([aux7703_BOOL,aux7704_BOOL],aux7705_BOOL);
constraint int_lin_eq([-1,1,1],[aux7706,2,s_00004],0);
constraint int_lt_reif(s_00013,aux7706,aux7707_BOOL);
constraint int_le_reif(s_00004, s_00013,aux7708_BOOL);
constraint array_bool_and([aux7707_BOOL,aux7708_BOOL],aux7709_BOOL);
constraint int_lin_eq([-1,1,1],[aux7710,2,s_00007],0);
constraint int_lt_reif(s_00013,aux7710,aux7711_BOOL);
constraint int_le_reif(s_00007, s_00013,aux7712_BOOL);
constraint array_bool_and([aux7711_BOOL,aux7712_BOOL],aux7713_BOOL);
constraint int_lin_eq([-1,1,1],[aux7714,3,s_00012],0);
constraint int_lt_reif(s_00013,aux7714,aux7715_BOOL);
constraint int_le_reif(s_00012, s_00013,aux7716_BOOL);
constraint array_bool_and([aux7715_BOOL,aux7716_BOOL],aux7717_BOOL);
constraint int_lin_eq([-1,1,1],[aux7718,3,s_00014],0);
constraint int_lt_reif(s_00013,aux7718,aux7719_BOOL);
constraint int_le_reif(s_00014, s_00013,aux7720_BOOL);
constraint array_bool_and([aux7719_BOOL,aux7720_BOOL],aux7721_BOOL);
constraint int_lin_eq([-1,1,1],[aux7722,6,s_00002],0);
constraint int_lt_reif(s_00013,aux7722,aux7723_BOOL);
constraint int_le_reif(s_00002, s_00013,aux7724_BOOL);
constraint array_bool_and([aux7723_BOOL,aux7724_BOOL],aux7725_BOOL);
constraint int_lin_eq([-1,1,1],[aux7726,3,s_00013],0);
constraint int_lt_reif(s_00013,aux7726,aux7727_BOOL);
constraint int_lin_eq([-1,1,1],[aux7728,1,s_00005],0);
constraint int_lt_reif(s_00014,aux7728,aux7729_BOOL);
constraint int_le_reif(s_00005, s_00014,aux7730_BOOL);
constraint array_bool_and([aux7729_BOOL,aux7730_BOOL],aux7731_BOOL);
constraint int_lin_eq([-1,1,1],[aux7732,2,s_00001],0);
constraint int_lt_reif(s_00014,aux7732,aux7733_BOOL);
constraint int_le_reif(s_00001, s_00014,aux7734_BOOL);
constraint array_bool_and([aux7733_BOOL,aux7734_BOOL],aux7735_BOOL);
constraint int_lin_eq([-1,1,1],[aux7736,2,s_00004],0);
constraint int_lt_reif(s_00014,aux7736,aux7737_BOOL);
constraint int_le_reif(s_00004, s_00014,aux7738_BOOL);
constraint array_bool_and([aux7737_BOOL,aux7738_BOOL],aux7739_BOOL);
constraint int_lin_eq([-1,1,1],[aux7740,2,s_00007],0);
constraint int_lt_reif(s_00014,aux7740,aux7741_BOOL);
constraint int_le_reif(s_00007, s_00014,aux7742_BOOL);
constraint array_bool_and([aux7741_BOOL,aux7742_BOOL],aux7743_BOOL);
constraint int_lin_eq([-1,1,1],[aux7744,3,s_00012],0);
constraint int_lt_reif(s_00014,aux7744,aux7745_BOOL);
constraint int_le_reif(s_00012, s_00014,aux7746_BOOL);
constraint array_bool_and([aux7745_BOOL,aux7746_BOOL],aux7747_BOOL);
constraint int_lin_eq([-1,1,1],[aux7748,3,s_00013],0);
constraint int_lt_reif(s_00014,aux7748,aux7749_BOOL);
constraint int_le_reif(s_00013, s_00014,aux7750_BOOL);
constraint array_bool_and([aux7749_BOOL,aux7750_BOOL],aux7751_BOOL);
constraint int_lin_eq([-1,1,1],[aux7752,6,s_00002],0);
constraint int_lt_reif(s_00014,aux7752,aux7753_BOOL);
constraint int_le_reif(s_00002, s_00014,aux7754_BOOL);
constraint array_bool_and([aux7753_BOOL,aux7754_BOOL],aux7755_BOOL);
constraint int_lin_eq([-1,1,1],[aux7756,3,s_00014],0);
constraint int_lt_reif(s_00014,aux7756,aux7757_BOOL);
constraint int_lin_le([1,1,-1],[2,s_00008,s_00010],0);
constraint int_lin_le([1,1,-1],[2,s_00009,s_00014],0);
constraint int_lin_le([1,1,-1],[2,s_00011,s_00014],0);
constraint int_lin_le([1,1,-1],[2,s_00001,s_00005],0);
constraint int_lin_le([1,1,-1],[2,s_00001,s_00006],0);
constraint int_lin_le([1,1,-1],[2,s_00001,s_00008],0);
constraint int_lin_le([1,1,-1],[6,s_00002,s_00006],0);
constraint int_lin_le([1,1,-1],[6,s_00002,s_00007],0);
constraint int_lin_le([1,1,-1],[1,s_00003,s_00004],0);
constraint int_lin_le([1,1,-1],[1,s_00003,s_00006],0);
constraint int_lin_le([1,1,-1],[1,s_00003,s_00012],0);
constraint int_lin_le([1,1,-1],[2,s_00004,s_00013],0);
constraint int_lin_le([1,1,-1],[2,s_00004,s_00014],0);
constraint int_lin_le([1,1,-1],[1,s_00005,s_00011],0);
constraint int_lin_le([1,1,-1],[1,s_00005,s_00012],0);
constraint int_lin_le([1,1,-1],[1,s_00005,s_00013],0);
constraint int_lin_le([1,1,-1],[4,s_00006,s_00009],0);
constraint int_lin_le([1,1,-1],[4,s_00006,s_00011],0);
constraint int_lin_le([1,1,-1],[2,s_00007,s_00009],0);
constraint int_lin_le([1,1,-1],[2,s_00007,s_00010],0);
constraint int_lin_le([1,1,-1],[1,s_00010,s_00011],0);
constraint int_lin_le([1,1,-1],[1,s_00010,s_00012],0);
constraint int_lin_le([1,1,-1],[1,s_00010,s_00013],0);
constraint int_eq(1,TWorkers_00001_00001_INTEGER);
constraint int_eq(1,TWorkers_00002_00001_INTEGER);
constraint int_eq(TWorkers_00003_00001_INTEGER,1);
constraint int_eq(TWorkers_00004_00001_INTEGER,1);
constraint int_eq(TWorkers_00005_00001_INTEGER,1);
constraint int_eq(1,TWorkers_00006_00001_INTEGER);
constraint int_ne(1,TWorkers_00001_00002_INTEGER);
constraint int_eq(1,TWorkers_00002_00002_INTEGER);
constraint int_eq(TWorkers_00003_00002_INTEGER,1);
constraint int_eq(TWorkers_00004_00002_INTEGER,1);
constraint int_eq(TWorkers_00005_00002_INTEGER,1);
constraint int_eq(1,TWorkers_00006_00002_INTEGER);
constraint int_eq(1,TWorkers_00001_00003_INTEGER);
constraint int_ne(1,TWorkers_00002_00003_INTEGER);
constraint int_ne(TWorkers_00003_00003_INTEGER,1);
constraint int_ne(TWorkers_00004_00003_INTEGER,1);
constraint int_eq(TWorkers_00005_00003_INTEGER,1);
constraint int_eq(1,TWorkers_00006_00003_INTEGER);
constraint int_ne(1,TWorkers_00001_00004_INTEGER);
constraint int_eq(1,TWorkers_00002_00004_INTEGER);
constraint int_eq(TWorkers_00003_00004_INTEGER,1);
constraint int_eq(TWorkers_00004_00004_INTEGER,1);
constraint int_eq(TWorkers_00005_00004_INTEGER,1);
constraint int_eq(1,TWorkers_00006_00004_INTEGER);
constraint int_eq(1,TWorkers_00001_00005_INTEGER);
constraint int_eq(1,TWorkers_00002_00005_INTEGER);
constraint int_eq(TWorkers_00003_00005_INTEGER,1);
constraint int_eq(TWorkers_00004_00005_INTEGER,1);
constraint int_eq(TWorkers_00005_00005_INTEGER,1);
constraint int_eq(1,TWorkers_00006_00005_INTEGER);
constraint int_eq(1,TWorkers_00001_00006_INTEGER);
constraint int_ne(1,TWorkers_00002_00006_INTEGER);
constraint int_eq(TWorkers_00003_00006_INTEGER,1);
constraint int_eq(TWorkers_00004_00006_INTEGER,1);
constraint int_eq(TWorkers_00005_00006_INTEGER,1);
constraint int_eq(1,TWorkers_00006_00006_INTEGER);
constraint int_eq(1,TWorkers_00001_00007_INTEGER);
constraint int_eq(1,TWorkers_00002_00007_INTEGER);
constraint int_eq(TWorkers_00003_00007_INTEGER,1);
constraint int_eq(TWorkers_00004_00007_INTEGER,1);
constraint int_eq(TWorkers_00005_00007_INTEGER,1);
constraint int_eq(1,TWorkers_00006_00007_INTEGER);
constraint int_eq(1,TWorkers_00001_00008_INTEGER);
constraint int_ne(1,TWorkers_00002_00008_INTEGER);
constraint int_ne(TWorkers_00003_00008_INTEGER,1);
constraint int_ne(TWorkers_00004_00008_INTEGER,1);
constraint int_eq(TWorkers_00005_00008_INTEGER,1);
constraint int_eq(1,TWorkers_00006_00008_INTEGER);
constraint int_eq(1,TWorkers_00001_00009_INTEGER);
constraint int_ne(1,TWorkers_00002_00009_INTEGER);
constraint int_eq(TWorkers_00003_00009_INTEGER,1);
constraint int_ne(TWorkers_00004_00009_INTEGER,1);
constraint int_eq(TWorkers_00005_00009_INTEGER,1);
constraint int_eq(1,TWorkers_00006_00009_INTEGER);
constraint int_eq(1,TWorkers_00001_00010_INTEGER);
constraint int_ne(1,TWorkers_00002_00010_INTEGER);
constraint int_eq(TWorkers_00003_00010_INTEGER,1);
constraint int_ne(TWorkers_00004_00010_INTEGER,1);
constraint int_eq(TWorkers_00005_00010_INTEGER,1);
constraint int_eq(1,TWorkers_00006_00010_INTEGER);
constraint int_eq(1,TWorkers_00001_00011_INTEGER);
constraint int_ne(1,TWorkers_00002_00011_INTEGER);
constraint int_eq(TWorkers_00003_00011_INTEGER,1);
constraint int_eq(TWorkers_00004_00011_INTEGER,1);
constraint int_eq(TWorkers_00005_00011_INTEGER,1);
constraint int_eq(1,TWorkers_00006_00011_INTEGER);
constraint int_eq(1,TWorkers_00001_00012_INTEGER);
constraint int_eq(1,TWorkers_00002_00012_INTEGER);
constraint int_eq(TWorkers_00003_00012_INTEGER,1);
constraint int_eq(TWorkers_00004_00012_INTEGER,1);
constraint int_eq(TWorkers_00005_00012_INTEGER,1);
constraint int_eq(1,TWorkers_00006_00012_INTEGER);
constraint int_ne(1,TWorkers_00001_00013_INTEGER);
constraint int_eq(1,TWorkers_00002_00013_INTEGER);
constraint int_eq(TWorkers_00003_00013_INTEGER,1);
constraint int_eq(TWorkers_00004_00013_INTEGER,1);
constraint int_eq(TWorkers_00005_00013_INTEGER,1);
constraint int_eq(1,TWorkers_00006_00013_INTEGER);
constraint int_ne(1,TWorkers_00001_00014_INTEGER);
constraint int_eq(1,TWorkers_00002_00014_INTEGER);
constraint int_eq(TWorkers_00003_00014_INTEGER,1);
constraint int_eq(TWorkers_00004_00014_INTEGER,1);
constraint int_eq(TWorkers_00005_00014_INTEGER,1);
constraint int_eq(1,TWorkers_00006_00014_INTEGER);
constraint int_lin_le([-1,-1,-1,-1,-1,1],[aux11_INTEGER,aux13_INTEGER,aux15_INTEGER,aux17_INTEGER,aux19_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux21_INTEGER,aux23_INTEGER,aux25_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,1],[aux27_INTEGER,aux29_INTEGER,aux31_INTEGER,aux33_INTEGER,aux35_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux37_INTEGER,aux39_INTEGER,aux41_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,-1,1],[aux43_INTEGER,aux45_INTEGER,aux47_INTEGER,aux49_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,1],[aux51_INTEGER,aux53_INTEGER,aux55_INTEGER,aux57_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,1],[aux59_INTEGER,aux61_INTEGER,aux63_INTEGER,aux65_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,-1,-1,1],[aux67_INTEGER,aux69_INTEGER,aux71_INTEGER,aux73_INTEGER,aux75_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,-1,1],[aux77_INTEGER,aux79_INTEGER,aux81_INTEGER,aux83_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,-1,-1,1],[aux85_INTEGER,aux87_INTEGER,aux89_INTEGER,aux91_INTEGER,aux93_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,-1,1],[aux101_INTEGER,aux95_INTEGER,aux97_INTEGER,aux99_INTEGER,1],0);
constraint int_lin_le([-1,-1,1],[aux103_INTEGER,aux105_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,-1,1],[aux107_INTEGER,aux109_INTEGER,aux111_INTEGER,aux113_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,-1,-1,1],[aux115_INTEGER,aux117_INTEGER,aux119_INTEGER,aux121_INTEGER,aux123_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,-1,1],[aux125_INTEGER,aux127_INTEGER,aux129_INTEGER,aux131_INTEGER,1],0);
constraint int_lin_le([-1,-1,1],[aux133_INTEGER,aux135_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,-1,1],[aux137_INTEGER,aux139_INTEGER,aux141_INTEGER,aux143_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,-1,-1,1],[aux145_INTEGER,aux147_INTEGER,aux149_INTEGER,aux151_INTEGER,aux153_INTEGER,1],0);
constraint int_le(1, aux155_INTEGER);
constraint int_lin_le([-1,-1,-1,-1,-1,1],[aux157_INTEGER,aux159_INTEGER,aux161_INTEGER,aux163_INTEGER,aux165_INTEGER,1],0);
constraint int_lin_le([-1,-1,1],[aux167_INTEGER,aux169_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,-1,-1,1],[aux171_INTEGER,aux173_INTEGER,aux175_INTEGER,aux177_INTEGER,aux179_INTEGER,1],0);
constraint bool_clause([],[aux180_BOOL,w_00001_00001_BOOL]);
constraint bool_clause([],[aux181_BOOL,w_00002_00001_BOOL]);
constraint bool_clause([],[aux182_BOOL,w_00003_00001_BOOL]);
constraint bool_clause([],[aux183_BOOL,w_00004_00001_BOOL]);
constraint bool_clause([],[aux184_BOOL,w_00005_00001_BOOL]);
constraint bool_clause([],[aux185_BOOL,w_00006_00001_BOOL]);
constraint bool_clause([],[aux186_BOOL,w_00001_00002_BOOL]);
constraint bool_clause([],[aux187_BOOL,w_00002_00002_BOOL]);
constraint bool_clause([],[aux188_BOOL,w_00003_00002_BOOL]);
constraint bool_clause([],[aux189_BOOL,w_00004_00002_BOOL]);
constraint bool_clause([],[aux190_BOOL,w_00005_00002_BOOL]);
constraint bool_clause([],[aux191_BOOL,w_00006_00002_BOOL]);
constraint bool_clause([],[aux192_BOOL,w_00001_00003_BOOL]);
constraint bool_clause([],[aux193_BOOL,w_00002_00003_BOOL]);
constraint bool_clause([],[aux194_BOOL,w_00003_00003_BOOL]);
constraint bool_clause([],[aux195_BOOL,w_00004_00003_BOOL]);
constraint bool_clause([],[aux196_BOOL,w_00005_00003_BOOL]);
constraint bool_clause([],[aux197_BOOL,w_00006_00003_BOOL]);
constraint bool_clause([],[aux198_BOOL,w_00001_00004_BOOL]);
constraint bool_clause([],[aux199_BOOL,w_00002_00004_BOOL]);
constraint bool_clause([],[aux200_BOOL,w_00003_00004_BOOL]);
constraint bool_clause([],[aux201_BOOL,w_00004_00004_BOOL]);
constraint bool_clause([],[aux202_BOOL,w_00005_00004_BOOL]);
constraint bool_clause([],[aux203_BOOL,w_00006_00004_BOOL]);
constraint bool_clause([],[aux204_BOOL,w_00001_00005_BOOL]);
constraint bool_clause([],[aux205_BOOL,w_00002_00005_BOOL]);
constraint bool_clause([],[aux206_BOOL,w_00003_00005_BOOL]);
constraint bool_clause([],[aux207_BOOL,w_00004_00005_BOOL]);
constraint bool_clause([],[aux208_BOOL,w_00005_00005_BOOL]);
constraint bool_clause([],[aux209_BOOL,w_00006_00005_BOOL]);
constraint bool_clause([],[aux210_BOOL,w_00001_00006_BOOL]);
constraint bool_clause([],[aux211_BOOL,w_00002_00006_BOOL]);
constraint bool_clause([],[aux212_BOOL,w_00003_00006_BOOL]);
constraint bool_clause([],[aux213_BOOL,w_00004_00006_BOOL]);
constraint bool_clause([],[aux214_BOOL,w_00005_00006_BOOL]);
constraint bool_clause([],[aux215_BOOL,w_00006_00006_BOOL]);
constraint bool_clause([],[aux216_BOOL,w_00001_00007_BOOL]);
constraint bool_clause([],[aux217_BOOL,w_00002_00007_BOOL]);
constraint bool_clause([],[aux218_BOOL,w_00003_00007_BOOL]);
constraint bool_clause([],[aux219_BOOL,w_00004_00007_BOOL]);
constraint bool_clause([],[aux220_BOOL,w_00005_00007_BOOL]);
constraint bool_clause([],[aux221_BOOL,w_00006_00007_BOOL]);
constraint bool_clause([],[aux222_BOOL,w_00001_00008_BOOL]);
constraint bool_clause([],[aux223_BOOL,w_00002_00008_BOOL]);
constraint bool_clause([],[aux224_BOOL,w_00003_00008_BOOL]);
constraint bool_clause([],[aux225_BOOL,w_00004_00008_BOOL]);
constraint bool_clause([],[aux226_BOOL,w_00005_00008_BOOL]);
constraint bool_clause([],[aux227_BOOL,w_00006_00008_BOOL]);
constraint bool_clause([],[aux228_BOOL,w_00001_00009_BOOL]);
constraint bool_clause([],[aux229_BOOL,w_00002_00009_BOOL]);
constraint bool_clause([],[aux230_BOOL,w_00003_00009_BOOL]);
constraint bool_clause([],[aux231_BOOL,w_00004_00009_BOOL]);
constraint bool_clause([],[aux232_BOOL,w_00005_00009_BOOL]);
constraint bool_clause([],[aux233_BOOL,w_00006_00009_BOOL]);
constraint bool_clause([],[aux234_BOOL,w_00001_00010_BOOL]);
constraint bool_clause([],[aux235_BOOL,w_00002_00010_BOOL]);
constraint bool_clause([],[aux236_BOOL,w_00003_00010_BOOL]);
constraint bool_clause([],[aux237_BOOL,w_00004_00010_BOOL]);
constraint bool_clause([],[aux238_BOOL,w_00005_00010_BOOL]);
constraint bool_clause([],[aux239_BOOL,w_00006_00010_BOOL]);
constraint bool_clause([],[aux240_BOOL,w_00001_00011_BOOL]);
constraint bool_clause([],[aux241_BOOL,w_00002_00011_BOOL]);
constraint bool_clause([],[aux242_BOOL,w_00003_00011_BOOL]);
constraint bool_clause([],[aux243_BOOL,w_00004_00011_BOOL]);
constraint bool_clause([],[aux244_BOOL,w_00005_00011_BOOL]);
constraint bool_clause([],[aux245_BOOL,w_00006_00011_BOOL]);
constraint bool_clause([],[aux246_BOOL,w_00001_00012_BOOL]);
constraint bool_clause([],[aux247_BOOL,w_00002_00012_BOOL]);
constraint bool_clause([],[aux248_BOOL,w_00003_00012_BOOL]);
constraint bool_clause([],[aux249_BOOL,w_00004_00012_BOOL]);
constraint bool_clause([],[aux250_BOOL,w_00005_00012_BOOL]);
constraint bool_clause([],[aux251_BOOL,w_00006_00012_BOOL]);
constraint bool_clause([],[aux252_BOOL,w_00001_00013_BOOL]);
constraint bool_clause([],[aux253_BOOL,w_00002_00013_BOOL]);
constraint bool_clause([],[aux254_BOOL,w_00003_00013_BOOL]);
constraint bool_clause([],[aux255_BOOL,w_00004_00013_BOOL]);
constraint bool_clause([],[aux256_BOOL,w_00005_00013_BOOL]);
constraint bool_clause([],[aux257_BOOL,w_00006_00013_BOOL]);
constraint bool_clause([],[aux258_BOOL,w_00001_00014_BOOL]);
constraint bool_clause([],[aux259_BOOL,w_00002_00014_BOOL]);
constraint bool_clause([],[aux260_BOOL,w_00003_00014_BOOL]);
constraint bool_clause([],[aux261_BOOL,w_00004_00014_BOOL]);
constraint bool_clause([],[aux262_BOOL,w_00005_00014_BOOL]);
constraint bool_clause([],[aux263_BOOL,w_00006_00014_BOOL]);
constraint array_bool_or([aux1426_BOOL,aux1427_BOOL],true);
constraint array_bool_or([aux2590_BOOL,aux2591_BOOL],true);
constraint array_bool_or([aux2592_BOOL,aux3755_BOOL],true);
constraint array_bool_or([aux3756_BOOL,aux4919_BOOL],true);
constraint array_bool_or([aux4920_BOOL,aux6083_BOOL],true);
constraint array_bool_or([aux6084_BOOL,aux7247_BOOL],true);
constraint int_lin_le([1,1,2,2,1,1,1,1,-1],[aux7251_INTEGER,aux7255_INTEGER,aux7259_INTEGER,aux7263_INTEGER,aux7267_INTEGER,aux7271_INTEGER,aux7275_INTEGER,aux7277_INTEGER,4],0);
constraint int_lin_le([1,1,2,2,1,1,1,1,-1],[aux7281_INTEGER,aux7285_INTEGER,aux7289_INTEGER,aux7293_INTEGER,aux7297_INTEGER,aux7301_INTEGER,aux7305_INTEGER,aux7307_INTEGER,4],0);
constraint int_lin_le([1,1,1,2,2,1,1,1,-1],[aux7311_INTEGER,aux7315_INTEGER,aux7319_INTEGER,aux7323_INTEGER,aux7327_INTEGER,aux7331_INTEGER,aux7335_INTEGER,aux7337_INTEGER,4],0);
constraint int_lin_le([1,1,2,2,1,1,1,1,-1],[aux7341_INTEGER,aux7345_INTEGER,aux7349_INTEGER,aux7353_INTEGER,aux7357_INTEGER,aux7361_INTEGER,aux7365_INTEGER,aux7367_INTEGER,4],0);
constraint int_lin_le([1,1,1,2,1,1,1,2,-1],[aux7371_INTEGER,aux7375_INTEGER,aux7379_INTEGER,aux7383_INTEGER,aux7387_INTEGER,aux7391_INTEGER,aux7395_INTEGER,aux7397_INTEGER,4],0);
constraint int_lin_le([1,1,1,2,1,1,1,2,-1],[aux7401_INTEGER,aux7405_INTEGER,aux7409_INTEGER,aux7413_INTEGER,aux7417_INTEGER,aux7421_INTEGER,aux7425_INTEGER,aux7427_INTEGER,4],0);
constraint int_lin_le([1,1,1,2,2,1,1,1,-1],[aux7431_INTEGER,aux7435_INTEGER,aux7439_INTEGER,aux7443_INTEGER,aux7447_INTEGER,aux7451_INTEGER,aux7455_INTEGER,aux7457_INTEGER,4],0);
constraint int_lin_le([1,1,1,2,2,1,1,1,-1],[aux7461_INTEGER,aux7465_INTEGER,aux7469_INTEGER,aux7473_INTEGER,aux7477_INTEGER,aux7481_INTEGER,aux7485_INTEGER,aux7487_INTEGER,4],0);
constraint int_lin_le([1,1,1,-1],[aux7491_INTEGER,aux7495_INTEGER,aux7497_INTEGER,2],0);
constraint int_lin_le([1,1,1,-1],[aux7501_INTEGER,aux7505_INTEGER,aux7507_INTEGER,2],0);
constraint int_lin_le([1,1,1,-1],[aux7511_INTEGER,aux7515_INTEGER,aux7517_INTEGER,2],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,-1],[aux7521_INTEGER,aux7525_INTEGER,aux7529_INTEGER,aux7533_INTEGER,aux7537_INTEGER,aux7541_INTEGER,aux7545_INTEGER,aux7547_INTEGER,5],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,-1],[aux7551_INTEGER,aux7555_INTEGER,aux7559_INTEGER,aux7563_INTEGER,aux7567_INTEGER,aux7571_INTEGER,aux7575_INTEGER,aux7577_INTEGER,5],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,-1],[aux7581_INTEGER,aux7585_INTEGER,aux7589_INTEGER,aux7593_INTEGER,aux7597_INTEGER,aux7601_INTEGER,aux7605_INTEGER,aux7607_INTEGER,5],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,-1],[aux7611_INTEGER,aux7615_INTEGER,aux7619_INTEGER,aux7623_INTEGER,aux7627_INTEGER,aux7631_INTEGER,aux7635_INTEGER,aux7637_INTEGER,5],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,-1],[aux7641_INTEGER,aux7645_INTEGER,aux7649_INTEGER,aux7653_INTEGER,aux7657_INTEGER,aux7661_INTEGER,aux7665_INTEGER,aux7667_INTEGER,5],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,-1],[aux7671_INTEGER,aux7675_INTEGER,aux7679_INTEGER,aux7683_INTEGER,aux7687_INTEGER,aux7691_INTEGER,aux7695_INTEGER,aux7697_INTEGER,5],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,-1],[aux7701_INTEGER,aux7705_INTEGER,aux7709_INTEGER,aux7713_INTEGER,aux7717_INTEGER,aux7721_INTEGER,aux7725_INTEGER,aux7727_INTEGER,5],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,-1],[aux7731_INTEGER,aux7735_INTEGER,aux7739_INTEGER,aux7743_INTEGER,aux7747_INTEGER,aux7751_INTEGER,aux7755_INTEGER,aux7757_INTEGER,5],0);
constraint int_lin_le([1,1,-1],[3,s_00012,objective],0);
constraint int_lin_le([1,1,-1],[3,s_00013,objective],0);
constraint int_lin_le([1,1,-1],[3,s_00014,objective],0);

solve :: int_search([s_00001, s_00002, s_00003, s_00004, s_00005, s_00006, s_00007, s_00008, s_00009, s_00010, s_00011, s_00012, s_00013, s_00014, w_00001_00001_INTEGER, w_00001_00002_INTEGER, w_00001_00003_INTEGER, w_00001_00004_INTEGER, w_00001_00005_INTEGER, w_00001_00006_INTEGER, w_00001_00007_INTEGER, w_00001_00008_INTEGER, w_00001_00009_INTEGER, w_00001_00010_INTEGER, w_00001_00011_INTEGER, w_00001_00012_INTEGER, w_00001_00013_INTEGER, w_00001_00014_INTEGER, w_00002_00001_INTEGER, w_00002_00002_INTEGER, w_00002_00003_INTEGER, w_00002_00004_INTEGER, w_00002_00005_INTEGER, w_00002_00006_INTEGER, w_00002_00007_INTEGER, w_00002_00008_INTEGER, w_00002_00009_INTEGER, w_00002_00010_INTEGER, w_00002_00011_INTEGER, w_00002_00012_INTEGER, w_00002_00013_INTEGER, w_00002_00014_INTEGER, w_00003_00001_INTEGER, w_00003_00002_INTEGER, w_00003_00003_INTEGER, w_00003_00004_INTEGER, w_00003_00005_INTEGER, w_00003_00006_INTEGER, w_00003_00007_INTEGER, w_00003_00008_INTEGER, w_00003_00009_INTEGER, w_00003_00010_INTEGER, w_00003_00011_INTEGER, w_00003_00012_INTEGER, w_00003_00013_INTEGER, w_00003_00014_INTEGER, w_00004_00001_INTEGER, w_00004_00002_INTEGER, w_00004_00003_INTEGER, w_00004_00004_INTEGER, w_00004_00005_INTEGER, w_00004_00006_INTEGER, w_00004_00007_INTEGER, w_00004_00008_INTEGER, w_00004_00009_INTEGER, w_00004_00010_INTEGER, w_00004_00011_INTEGER, w_00004_00012_INTEGER, w_00004_00013_INTEGER, w_00004_00014_INTEGER, w_00005_00001_INTEGER, w_00005_00002_INTEGER, w_00005_00003_INTEGER, w_00005_00004_INTEGER, w_00005_00005_INTEGER, w_00005_00006_INTEGER, w_00005_00007_INTEGER, w_00005_00008_INTEGER, w_00005_00009_INTEGER, w_00005_00010_INTEGER, w_00005_00011_INTEGER, w_00005_00012_INTEGER, w_00005_00013_INTEGER, w_00005_00014_INTEGER, w_00006_00001_INTEGER, w_00006_00002_INTEGER, w_00006_00003_INTEGER, w_00006_00004_INTEGER, w_00006_00005_INTEGER, w_00006_00006_INTEGER, w_00006_00007_INTEGER, w_00006_00008_INTEGER, w_00006_00009_INTEGER, w_00006_00010_INTEGER, w_00006_00011_INTEGER, w_00006_00012_INTEGER, w_00006_00013_INTEGER, w_00006_00014_INTEGER, objective], input_order, indomain_min, complete)
minimize objective;
