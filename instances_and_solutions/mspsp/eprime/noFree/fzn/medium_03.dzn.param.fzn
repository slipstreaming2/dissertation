predicate all_different_int(array [int] of var int: xs);
array [1..3] of int: aux1 = [1, 1, 1];
array [1..20] of int: aux0 = [1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
array [1..5] of int: aux3 = [1, 2, 1, 2, 1];
array [1..20] of int: aux2 = [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0];
array [1..20] of int: d = [4, 4, 3, 2, 3, 2, 3, 2, 2, 5, 3, 4, 3, 2, 1, 3, 4, 1, 4, 2];
array [1..5] of int: rc = [1, 4, 4, 3, 5];
array [1..12] of int: aux9 = [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1];
array [1..20] of int: aux8 = [1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1];
array [1..5] of int: aux5 = [1, 2, 1, 1, 1];
array [1..20] of int: aux4 = [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1];
array [1..10] of int: aux7 = [1, 1, 2, 1, 1, 1, 1, 1, 1, 1];
array [1..20] of int: aux6 = [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0];
var 0..57: s_00001:: output_var ;
var 0..57: s_00002:: output_var ;
var 0..57: s_00003:: output_var ;
var 0..57: s_00004:: output_var ;
var 0..57: s_00005:: output_var ;
var 0..57: s_00006:: output_var ;
var 0..57: s_00007:: output_var ;
var 0..57: s_00008:: output_var ;
var 0..57: s_00009:: output_var ;
var 0..57: s_00010:: output_var ;
var 0..57: s_00011:: output_var ;
var 0..57: s_00012:: output_var ;
var 0..57: s_00013:: output_var ;
var 0..57: s_00014:: output_var ;
var 0..57: s_00015:: output_var ;
var 0..57: s_00016:: output_var ;
var 0..57: s_00017:: output_var ;
var 0..57: s_00018:: output_var ;
var 0..57: s_00019:: output_var ;
var 0..57: s_00020:: output_var ;
var bool: w_00001_00001_BOOL;
var {0,1}: w_00001_00001_INTEGER :: output_var ;
var bool: w_00001_00002_BOOL;
var {0,1}: w_00001_00002_INTEGER :: output_var ;
var bool: w_00001_00003_BOOL;
var {0,1}: w_00001_00003_INTEGER :: output_var ;
var bool: w_00001_00004_BOOL;
var {0,1}: w_00001_00004_INTEGER :: output_var ;
var bool: w_00001_00005_BOOL;
var {0,1}: w_00001_00005_INTEGER :: output_var ;
var bool: w_00001_00006_BOOL;
var {0,1}: w_00001_00006_INTEGER :: output_var ;
var bool: w_00001_00007_BOOL;
var {0,1}: w_00001_00007_INTEGER :: output_var ;
var bool: w_00001_00008_BOOL;
var {0,1}: w_00001_00008_INTEGER :: output_var ;
var bool: w_00001_00009_BOOL;
var {0,1}: w_00001_00009_INTEGER :: output_var ;
var bool: w_00001_00010_BOOL;
var {0,1}: w_00001_00010_INTEGER :: output_var ;
var bool: w_00001_00011_BOOL;
var {0,1}: w_00001_00011_INTEGER :: output_var ;
var bool: w_00001_00012_BOOL;
var {0,1}: w_00001_00012_INTEGER :: output_var ;
var bool: w_00001_00013_BOOL;
var {0,1}: w_00001_00013_INTEGER :: output_var ;
var bool: w_00001_00014_BOOL;
var {0,1}: w_00001_00014_INTEGER :: output_var ;
var bool: w_00001_00015_BOOL;
var {0,1}: w_00001_00015_INTEGER :: output_var ;
var bool: w_00001_00016_BOOL;
var {0,1}: w_00001_00016_INTEGER :: output_var ;
var bool: w_00001_00017_BOOL;
var {0,1}: w_00001_00017_INTEGER :: output_var ;
var bool: w_00001_00018_BOOL;
var {0,1}: w_00001_00018_INTEGER :: output_var ;
var bool: w_00001_00019_BOOL;
var {0,1}: w_00001_00019_INTEGER :: output_var ;
var bool: w_00001_00020_BOOL;
var {0,1}: w_00001_00020_INTEGER :: output_var ;
var bool: w_00002_00001_BOOL;
var {0,1}: w_00002_00001_INTEGER :: output_var ;
var bool: w_00002_00002_BOOL;
var {0,1}: w_00002_00002_INTEGER :: output_var ;
var bool: w_00002_00003_BOOL;
var {0,1}: w_00002_00003_INTEGER :: output_var ;
var bool: w_00002_00004_BOOL;
var {0,1}: w_00002_00004_INTEGER :: output_var ;
var bool: w_00002_00005_BOOL;
var {0,1}: w_00002_00005_INTEGER :: output_var ;
var bool: w_00002_00006_BOOL;
var {0,1}: w_00002_00006_INTEGER :: output_var ;
var bool: w_00002_00007_BOOL;
var {0,1}: w_00002_00007_INTEGER :: output_var ;
var bool: w_00002_00008_BOOL;
var {0,1}: w_00002_00008_INTEGER :: output_var ;
var bool: w_00002_00009_BOOL;
var {0,1}: w_00002_00009_INTEGER :: output_var ;
var bool: w_00002_00010_BOOL;
var {0,1}: w_00002_00010_INTEGER :: output_var ;
var bool: w_00002_00011_BOOL;
var {0,1}: w_00002_00011_INTEGER :: output_var ;
var bool: w_00002_00012_BOOL;
var {0,1}: w_00002_00012_INTEGER :: output_var ;
var bool: w_00002_00013_BOOL;
var {0,1}: w_00002_00013_INTEGER :: output_var ;
var bool: w_00002_00014_BOOL;
var {0,1}: w_00002_00014_INTEGER :: output_var ;
var bool: w_00002_00015_BOOL;
var {0,1}: w_00002_00015_INTEGER :: output_var ;
var bool: w_00002_00016_BOOL;
var {0,1}: w_00002_00016_INTEGER :: output_var ;
var bool: w_00002_00017_BOOL;
var {0,1}: w_00002_00017_INTEGER :: output_var ;
var bool: w_00002_00018_BOOL;
var {0,1}: w_00002_00018_INTEGER :: output_var ;
var bool: w_00002_00019_BOOL;
var {0,1}: w_00002_00019_INTEGER :: output_var ;
var bool: w_00002_00020_BOOL;
var {0,1}: w_00002_00020_INTEGER :: output_var ;
var bool: w_00003_00001_BOOL;
var {0,1}: w_00003_00001_INTEGER :: output_var ;
var bool: w_00003_00002_BOOL;
var {0,1}: w_00003_00002_INTEGER :: output_var ;
var bool: w_00003_00003_BOOL;
var {0,1}: w_00003_00003_INTEGER :: output_var ;
var bool: w_00003_00004_BOOL;
var {0,1}: w_00003_00004_INTEGER :: output_var ;
var bool: w_00003_00005_BOOL;
var {0,1}: w_00003_00005_INTEGER :: output_var ;
var bool: w_00003_00006_BOOL;
var {0,1}: w_00003_00006_INTEGER :: output_var ;
var bool: w_00003_00007_BOOL;
var {0,1}: w_00003_00007_INTEGER :: output_var ;
var bool: w_00003_00008_BOOL;
var {0,1}: w_00003_00008_INTEGER :: output_var ;
var bool: w_00003_00009_BOOL;
var {0,1}: w_00003_00009_INTEGER :: output_var ;
var bool: w_00003_00010_BOOL;
var {0,1}: w_00003_00010_INTEGER :: output_var ;
var bool: w_00003_00011_BOOL;
var {0,1}: w_00003_00011_INTEGER :: output_var ;
var bool: w_00003_00012_BOOL;
var {0,1}: w_00003_00012_INTEGER :: output_var ;
var bool: w_00003_00013_BOOL;
var {0,1}: w_00003_00013_INTEGER :: output_var ;
var bool: w_00003_00014_BOOL;
var {0,1}: w_00003_00014_INTEGER :: output_var ;
var bool: w_00003_00015_BOOL;
var {0,1}: w_00003_00015_INTEGER :: output_var ;
var bool: w_00003_00016_BOOL;
var {0,1}: w_00003_00016_INTEGER :: output_var ;
var bool: w_00003_00017_BOOL;
var {0,1}: w_00003_00017_INTEGER :: output_var ;
var bool: w_00003_00018_BOOL;
var {0,1}: w_00003_00018_INTEGER :: output_var ;
var bool: w_00003_00019_BOOL;
var {0,1}: w_00003_00019_INTEGER :: output_var ;
var bool: w_00003_00020_BOOL;
var {0,1}: w_00003_00020_INTEGER :: output_var ;
var bool: w_00004_00001_BOOL;
var {0,1}: w_00004_00001_INTEGER :: output_var ;
var bool: w_00004_00002_BOOL;
var {0,1}: w_00004_00002_INTEGER :: output_var ;
var bool: w_00004_00003_BOOL;
var {0,1}: w_00004_00003_INTEGER :: output_var ;
var bool: w_00004_00004_BOOL;
var {0,1}: w_00004_00004_INTEGER :: output_var ;
var bool: w_00004_00005_BOOL;
var {0,1}: w_00004_00005_INTEGER :: output_var ;
var bool: w_00004_00006_BOOL;
var {0,1}: w_00004_00006_INTEGER :: output_var ;
var bool: w_00004_00007_BOOL;
var {0,1}: w_00004_00007_INTEGER :: output_var ;
var bool: w_00004_00008_BOOL;
var {0,1}: w_00004_00008_INTEGER :: output_var ;
var bool: w_00004_00009_BOOL;
var {0,1}: w_00004_00009_INTEGER :: output_var ;
var bool: w_00004_00010_BOOL;
var {0,1}: w_00004_00010_INTEGER :: output_var ;
var bool: w_00004_00011_BOOL;
var {0,1}: w_00004_00011_INTEGER :: output_var ;
var bool: w_00004_00012_BOOL;
var {0,1}: w_00004_00012_INTEGER :: output_var ;
var bool: w_00004_00013_BOOL;
var {0,1}: w_00004_00013_INTEGER :: output_var ;
var bool: w_00004_00014_BOOL;
var {0,1}: w_00004_00014_INTEGER :: output_var ;
var bool: w_00004_00015_BOOL;
var {0,1}: w_00004_00015_INTEGER :: output_var ;
var bool: w_00004_00016_BOOL;
var {0,1}: w_00004_00016_INTEGER :: output_var ;
var bool: w_00004_00017_BOOL;
var {0,1}: w_00004_00017_INTEGER :: output_var ;
var bool: w_00004_00018_BOOL;
var {0,1}: w_00004_00018_INTEGER :: output_var ;
var bool: w_00004_00019_BOOL;
var {0,1}: w_00004_00019_INTEGER :: output_var ;
var bool: w_00004_00020_BOOL;
var {0,1}: w_00004_00020_INTEGER :: output_var ;
var bool: w_00005_00001_BOOL;
var {0,1}: w_00005_00001_INTEGER :: output_var ;
var bool: w_00005_00002_BOOL;
var {0,1}: w_00005_00002_INTEGER :: output_var ;
var bool: w_00005_00003_BOOL;
var {0,1}: w_00005_00003_INTEGER :: output_var ;
var bool: w_00005_00004_BOOL;
var {0,1}: w_00005_00004_INTEGER :: output_var ;
var bool: w_00005_00005_BOOL;
var {0,1}: w_00005_00005_INTEGER :: output_var ;
var bool: w_00005_00006_BOOL;
var {0,1}: w_00005_00006_INTEGER :: output_var ;
var bool: w_00005_00007_BOOL;
var {0,1}: w_00005_00007_INTEGER :: output_var ;
var bool: w_00005_00008_BOOL;
var {0,1}: w_00005_00008_INTEGER :: output_var ;
var bool: w_00005_00009_BOOL;
var {0,1}: w_00005_00009_INTEGER :: output_var ;
var bool: w_00005_00010_BOOL;
var {0,1}: w_00005_00010_INTEGER :: output_var ;
var bool: w_00005_00011_BOOL;
var {0,1}: w_00005_00011_INTEGER :: output_var ;
var bool: w_00005_00012_BOOL;
var {0,1}: w_00005_00012_INTEGER :: output_var ;
var bool: w_00005_00013_BOOL;
var {0,1}: w_00005_00013_INTEGER :: output_var ;
var bool: w_00005_00014_BOOL;
var {0,1}: w_00005_00014_INTEGER :: output_var ;
var bool: w_00005_00015_BOOL;
var {0,1}: w_00005_00015_INTEGER :: output_var ;
var bool: w_00005_00016_BOOL;
var {0,1}: w_00005_00016_INTEGER :: output_var ;
var bool: w_00005_00017_BOOL;
var {0,1}: w_00005_00017_INTEGER :: output_var ;
var bool: w_00005_00018_BOOL;
var {0,1}: w_00005_00018_INTEGER :: output_var ;
var bool: w_00005_00019_BOOL;
var {0,1}: w_00005_00019_INTEGER :: output_var ;
var bool: w_00005_00020_BOOL;
var {0,1}: w_00005_00020_INTEGER :: output_var ;
var bool: w_00006_00001_BOOL;
var {0,1}: w_00006_00001_INTEGER :: output_var ;
var bool: w_00006_00002_BOOL;
var {0,1}: w_00006_00002_INTEGER :: output_var ;
var bool: w_00006_00003_BOOL;
var {0,1}: w_00006_00003_INTEGER :: output_var ;
var bool: w_00006_00004_BOOL;
var {0,1}: w_00006_00004_INTEGER :: output_var ;
var bool: w_00006_00005_BOOL;
var {0,1}: w_00006_00005_INTEGER :: output_var ;
var bool: w_00006_00006_BOOL;
var {0,1}: w_00006_00006_INTEGER :: output_var ;
var bool: w_00006_00007_BOOL;
var {0,1}: w_00006_00007_INTEGER :: output_var ;
var bool: w_00006_00008_BOOL;
var {0,1}: w_00006_00008_INTEGER :: output_var ;
var bool: w_00006_00009_BOOL;
var {0,1}: w_00006_00009_INTEGER :: output_var ;
var bool: w_00006_00010_BOOL;
var {0,1}: w_00006_00010_INTEGER :: output_var ;
var bool: w_00006_00011_BOOL;
var {0,1}: w_00006_00011_INTEGER :: output_var ;
var bool: w_00006_00012_BOOL;
var {0,1}: w_00006_00012_INTEGER :: output_var ;
var bool: w_00006_00013_BOOL;
var {0,1}: w_00006_00013_INTEGER :: output_var ;
var bool: w_00006_00014_BOOL;
var {0,1}: w_00006_00014_INTEGER :: output_var ;
var bool: w_00006_00015_BOOL;
var {0,1}: w_00006_00015_INTEGER :: output_var ;
var bool: w_00006_00016_BOOL;
var {0,1}: w_00006_00016_INTEGER :: output_var ;
var bool: w_00006_00017_BOOL;
var {0,1}: w_00006_00017_INTEGER :: output_var ;
var bool: w_00006_00018_BOOL;
var {0,1}: w_00006_00018_INTEGER :: output_var ;
var bool: w_00006_00019_BOOL;
var {0,1}: w_00006_00019_INTEGER :: output_var ;
var bool: w_00006_00020_BOOL;
var {0,1}: w_00006_00020_INTEGER :: output_var ;
var bool: w_00007_00001_BOOL;
var {0,1}: w_00007_00001_INTEGER :: output_var ;
var bool: w_00007_00002_BOOL;
var {0,1}: w_00007_00002_INTEGER :: output_var ;
var bool: w_00007_00003_BOOL;
var {0,1}: w_00007_00003_INTEGER :: output_var ;
var bool: w_00007_00004_BOOL;
var {0,1}: w_00007_00004_INTEGER :: output_var ;
var bool: w_00007_00005_BOOL;
var {0,1}: w_00007_00005_INTEGER :: output_var ;
var bool: w_00007_00006_BOOL;
var {0,1}: w_00007_00006_INTEGER :: output_var ;
var bool: w_00007_00007_BOOL;
var {0,1}: w_00007_00007_INTEGER :: output_var ;
var bool: w_00007_00008_BOOL;
var {0,1}: w_00007_00008_INTEGER :: output_var ;
var bool: w_00007_00009_BOOL;
var {0,1}: w_00007_00009_INTEGER :: output_var ;
var bool: w_00007_00010_BOOL;
var {0,1}: w_00007_00010_INTEGER :: output_var ;
var bool: w_00007_00011_BOOL;
var {0,1}: w_00007_00011_INTEGER :: output_var ;
var bool: w_00007_00012_BOOL;
var {0,1}: w_00007_00012_INTEGER :: output_var ;
var bool: w_00007_00013_BOOL;
var {0,1}: w_00007_00013_INTEGER :: output_var ;
var bool: w_00007_00014_BOOL;
var {0,1}: w_00007_00014_INTEGER :: output_var ;
var bool: w_00007_00015_BOOL;
var {0,1}: w_00007_00015_INTEGER :: output_var ;
var bool: w_00007_00016_BOOL;
var {0,1}: w_00007_00016_INTEGER :: output_var ;
var bool: w_00007_00017_BOOL;
var {0,1}: w_00007_00017_INTEGER :: output_var ;
var bool: w_00007_00018_BOOL;
var {0,1}: w_00007_00018_INTEGER :: output_var ;
var bool: w_00007_00019_BOOL;
var {0,1}: w_00007_00019_INTEGER :: output_var ;
var bool: w_00007_00020_BOOL;
var {0,1}: w_00007_00020_INTEGER :: output_var ;
var bool: w_00008_00001_BOOL;
var {0,1}: w_00008_00001_INTEGER :: output_var ;
var bool: w_00008_00002_BOOL;
var {0,1}: w_00008_00002_INTEGER :: output_var ;
var bool: w_00008_00003_BOOL;
var {0,1}: w_00008_00003_INTEGER :: output_var ;
var bool: w_00008_00004_BOOL;
var {0,1}: w_00008_00004_INTEGER :: output_var ;
var bool: w_00008_00005_BOOL;
var {0,1}: w_00008_00005_INTEGER :: output_var ;
var bool: w_00008_00006_BOOL;
var {0,1}: w_00008_00006_INTEGER :: output_var ;
var bool: w_00008_00007_BOOL;
var {0,1}: w_00008_00007_INTEGER :: output_var ;
var bool: w_00008_00008_BOOL;
var {0,1}: w_00008_00008_INTEGER :: output_var ;
var bool: w_00008_00009_BOOL;
var {0,1}: w_00008_00009_INTEGER :: output_var ;
var bool: w_00008_00010_BOOL;
var {0,1}: w_00008_00010_INTEGER :: output_var ;
var bool: w_00008_00011_BOOL;
var {0,1}: w_00008_00011_INTEGER :: output_var ;
var bool: w_00008_00012_BOOL;
var {0,1}: w_00008_00012_INTEGER :: output_var ;
var bool: w_00008_00013_BOOL;
var {0,1}: w_00008_00013_INTEGER :: output_var ;
var bool: w_00008_00014_BOOL;
var {0,1}: w_00008_00014_INTEGER :: output_var ;
var bool: w_00008_00015_BOOL;
var {0,1}: w_00008_00015_INTEGER :: output_var ;
var bool: w_00008_00016_BOOL;
var {0,1}: w_00008_00016_INTEGER :: output_var ;
var bool: w_00008_00017_BOOL;
var {0,1}: w_00008_00017_INTEGER :: output_var ;
var bool: w_00008_00018_BOOL;
var {0,1}: w_00008_00018_INTEGER :: output_var ;
var bool: w_00008_00019_BOOL;
var {0,1}: w_00008_00019_INTEGER :: output_var ;
var bool: w_00008_00020_BOOL;
var {0,1}: w_00008_00020_INTEGER :: output_var ;
var bool: w_00009_00001_BOOL;
var {0,1}: w_00009_00001_INTEGER :: output_var ;
var bool: w_00009_00002_BOOL;
var {0,1}: w_00009_00002_INTEGER :: output_var ;
var bool: w_00009_00003_BOOL;
var {0,1}: w_00009_00003_INTEGER :: output_var ;
var bool: w_00009_00004_BOOL;
var {0,1}: w_00009_00004_INTEGER :: output_var ;
var bool: w_00009_00005_BOOL;
var {0,1}: w_00009_00005_INTEGER :: output_var ;
var bool: w_00009_00006_BOOL;
var {0,1}: w_00009_00006_INTEGER :: output_var ;
var bool: w_00009_00007_BOOL;
var {0,1}: w_00009_00007_INTEGER :: output_var ;
var bool: w_00009_00008_BOOL;
var {0,1}: w_00009_00008_INTEGER :: output_var ;
var bool: w_00009_00009_BOOL;
var {0,1}: w_00009_00009_INTEGER :: output_var ;
var bool: w_00009_00010_BOOL;
var {0,1}: w_00009_00010_INTEGER :: output_var ;
var bool: w_00009_00011_BOOL;
var {0,1}: w_00009_00011_INTEGER :: output_var ;
var bool: w_00009_00012_BOOL;
var {0,1}: w_00009_00012_INTEGER :: output_var ;
var bool: w_00009_00013_BOOL;
var {0,1}: w_00009_00013_INTEGER :: output_var ;
var bool: w_00009_00014_BOOL;
var {0,1}: w_00009_00014_INTEGER :: output_var ;
var bool: w_00009_00015_BOOL;
var {0,1}: w_00009_00015_INTEGER :: output_var ;
var bool: w_00009_00016_BOOL;
var {0,1}: w_00009_00016_INTEGER :: output_var ;
var bool: w_00009_00017_BOOL;
var {0,1}: w_00009_00017_INTEGER :: output_var ;
var bool: w_00009_00018_BOOL;
var {0,1}: w_00009_00018_INTEGER :: output_var ;
var bool: w_00009_00019_BOOL;
var {0,1}: w_00009_00019_INTEGER :: output_var ;
var bool: w_00009_00020_BOOL;
var {0,1}: w_00009_00020_INTEGER :: output_var ;
var 0..57: objective:: output_var ;
var {0,1}: TWorkers_00001_00001_INTEGER :: output_var ;
var {0,1}: TWorkers_00001_00002_INTEGER :: output_var ;
var {0,1}: TWorkers_00001_00003_INTEGER :: output_var ;
var {0,1}: TWorkers_00001_00004_INTEGER :: output_var ;
var {0,1}: TWorkers_00001_00005_INTEGER :: output_var ;
var {0,1}: TWorkers_00001_00006_INTEGER :: output_var ;
var {0,1}: TWorkers_00001_00007_INTEGER :: output_var ;
var {0,1}: TWorkers_00001_00008_INTEGER :: output_var ;
var {0,1}: TWorkers_00001_00009_INTEGER :: output_var ;
var {0,1}: TWorkers_00001_00010_INTEGER :: output_var ;
var {0,1}: TWorkers_00001_00011_INTEGER :: output_var ;
var {0,1}: TWorkers_00001_00012_INTEGER :: output_var ;
var {0,1}: TWorkers_00001_00013_INTEGER :: output_var ;
var {0,1}: TWorkers_00001_00014_INTEGER :: output_var ;
var {0,1}: TWorkers_00001_00015_INTEGER :: output_var ;
var {0,1}: TWorkers_00001_00016_INTEGER :: output_var ;
var {0,1}: TWorkers_00001_00017_INTEGER :: output_var ;
var {0,1}: TWorkers_00001_00018_INTEGER :: output_var ;
var {0,1}: TWorkers_00001_00019_INTEGER :: output_var ;
var {0,1}: TWorkers_00001_00020_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00001_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00002_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00003_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00004_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00005_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00006_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00007_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00008_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00009_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00010_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00011_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00012_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00013_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00014_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00015_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00016_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00017_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00018_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00019_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00020_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00001_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00002_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00003_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00004_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00005_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00006_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00007_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00008_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00009_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00010_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00011_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00012_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00013_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00014_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00015_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00016_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00017_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00018_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00019_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00020_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00001_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00002_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00003_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00004_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00005_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00006_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00007_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00008_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00009_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00010_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00011_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00012_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00013_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00014_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00015_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00016_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00017_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00018_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00019_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00020_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00001_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00002_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00003_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00004_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00005_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00006_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00007_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00008_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00009_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00010_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00011_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00012_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00013_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00014_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00015_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00016_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00017_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00018_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00019_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00020_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00001_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00002_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00003_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00004_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00005_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00006_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00007_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00008_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00009_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00010_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00011_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00012_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00013_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00014_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00015_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00016_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00017_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00018_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00019_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00020_INTEGER :: output_var ;
var {0,1}: TWorkers_00007_00001_INTEGER :: output_var ;
var {0,1}: TWorkers_00007_00002_INTEGER :: output_var ;
var {0,1}: TWorkers_00007_00003_INTEGER :: output_var ;
var {0,1}: TWorkers_00007_00004_INTEGER :: output_var ;
var {0,1}: TWorkers_00007_00005_INTEGER :: output_var ;
var {0,1}: TWorkers_00007_00006_INTEGER :: output_var ;
var {0,1}: TWorkers_00007_00007_INTEGER :: output_var ;
var {0,1}: TWorkers_00007_00008_INTEGER :: output_var ;
var {0,1}: TWorkers_00007_00009_INTEGER :: output_var ;
var {0,1}: TWorkers_00007_00010_INTEGER :: output_var ;
var {0,1}: TWorkers_00007_00011_INTEGER :: output_var ;
var {0,1}: TWorkers_00007_00012_INTEGER :: output_var ;
var {0,1}: TWorkers_00007_00013_INTEGER :: output_var ;
var {0,1}: TWorkers_00007_00014_INTEGER :: output_var ;
var {0,1}: TWorkers_00007_00015_INTEGER :: output_var ;
var {0,1}: TWorkers_00007_00016_INTEGER :: output_var ;
var {0,1}: TWorkers_00007_00017_INTEGER :: output_var ;
var {0,1}: TWorkers_00007_00018_INTEGER :: output_var ;
var {0,1}: TWorkers_00007_00019_INTEGER :: output_var ;
var {0,1}: TWorkers_00007_00020_INTEGER :: output_var ;
var {0,1}: TWorkers_00008_00001_INTEGER :: output_var ;
var {0,1}: TWorkers_00008_00002_INTEGER :: output_var ;
var {0,1}: TWorkers_00008_00003_INTEGER :: output_var ;
var {0,1}: TWorkers_00008_00004_INTEGER :: output_var ;
var {0,1}: TWorkers_00008_00005_INTEGER :: output_var ;
var {0,1}: TWorkers_00008_00006_INTEGER :: output_var ;
var {0,1}: TWorkers_00008_00007_INTEGER :: output_var ;
var {0,1}: TWorkers_00008_00008_INTEGER :: output_var ;
var {0,1}: TWorkers_00008_00009_INTEGER :: output_var ;
var {0,1}: TWorkers_00008_00010_INTEGER :: output_var ;
var {0,1}: TWorkers_00008_00011_INTEGER :: output_var ;
var {0,1}: TWorkers_00008_00012_INTEGER :: output_var ;
var {0,1}: TWorkers_00008_00013_INTEGER :: output_var ;
var {0,1}: TWorkers_00008_00014_INTEGER :: output_var ;
var {0,1}: TWorkers_00008_00015_INTEGER :: output_var ;
var {0,1}: TWorkers_00008_00016_INTEGER :: output_var ;
var {0,1}: TWorkers_00008_00017_INTEGER :: output_var ;
var {0,1}: TWorkers_00008_00018_INTEGER :: output_var ;
var {0,1}: TWorkers_00008_00019_INTEGER :: output_var ;
var {0,1}: TWorkers_00008_00020_INTEGER :: output_var ;
var {0,1}: TWorkers_00009_00001_INTEGER :: output_var ;
var {0,1}: TWorkers_00009_00002_INTEGER :: output_var ;
var {0,1}: TWorkers_00009_00003_INTEGER :: output_var ;
var {0,1}: TWorkers_00009_00004_INTEGER :: output_var ;
var {0,1}: TWorkers_00009_00005_INTEGER :: output_var ;
var {0,1}: TWorkers_00009_00006_INTEGER :: output_var ;
var {0,1}: TWorkers_00009_00007_INTEGER :: output_var ;
var {0,1}: TWorkers_00009_00008_INTEGER :: output_var ;
var {0,1}: TWorkers_00009_00009_INTEGER :: output_var ;
var {0,1}: TWorkers_00009_00010_INTEGER :: output_var ;
var {0,1}: TWorkers_00009_00011_INTEGER :: output_var ;
var {0,1}: TWorkers_00009_00012_INTEGER :: output_var ;
var {0,1}: TWorkers_00009_00013_INTEGER :: output_var ;
var {0,1}: TWorkers_00009_00014_INTEGER :: output_var ;
var {0,1}: TWorkers_00009_00015_INTEGER :: output_var ;
var {0,1}: TWorkers_00009_00016_INTEGER :: output_var ;
var {0,1}: TWorkers_00009_00017_INTEGER :: output_var ;
var {0,1}: TWorkers_00009_00018_INTEGER :: output_var ;
var {0,1}: TWorkers_00009_00019_INTEGER :: output_var ;
var {0,1}: TWorkers_00009_00020_INTEGER :: output_var ;
var bool: aux10_BOOL:: var_is_introduced ;
var bool: aux11_BOOL:: var_is_introduced ;
var {0,1}: aux11_INTEGER :: var_is_introduced ;
var bool: aux12_BOOL:: var_is_introduced ;
var bool: aux13_BOOL:: var_is_introduced ;
var {0,1}: aux13_INTEGER :: var_is_introduced ;
var bool: aux14_BOOL:: var_is_introduced ;
var bool: aux15_BOOL:: var_is_introduced ;
var {0,1}: aux15_INTEGER :: var_is_introduced ;
var bool: aux16_BOOL:: var_is_introduced ;
var bool: aux17_BOOL:: var_is_introduced ;
var {0,1}: aux17_INTEGER :: var_is_introduced ;
var bool: aux18_BOOL:: var_is_introduced ;
var bool: aux19_BOOL:: var_is_introduced ;
var {0,1}: aux19_INTEGER :: var_is_introduced ;
var bool: aux20_BOOL:: var_is_introduced ;
var bool: aux21_BOOL:: var_is_introduced ;
var {0,1}: aux21_INTEGER :: var_is_introduced ;
var bool: aux22_BOOL:: var_is_introduced ;
var bool: aux23_BOOL:: var_is_introduced ;
var {0,1}: aux23_INTEGER :: var_is_introduced ;
var bool: aux24_BOOL:: var_is_introduced ;
var bool: aux25_BOOL:: var_is_introduced ;
var {0,1}: aux25_INTEGER :: var_is_introduced ;
var bool: aux26_BOOL:: var_is_introduced ;
var bool: aux27_BOOL:: var_is_introduced ;
var {0,1}: aux27_INTEGER :: var_is_introduced ;
var bool: aux28_BOOL:: var_is_introduced ;
var bool: aux29_BOOL:: var_is_introduced ;
var {0,1}: aux29_INTEGER :: var_is_introduced ;
var bool: aux30_BOOL:: var_is_introduced ;
var bool: aux31_BOOL:: var_is_introduced ;
var {0,1}: aux31_INTEGER :: var_is_introduced ;
var bool: aux32_BOOL:: var_is_introduced ;
var bool: aux33_BOOL:: var_is_introduced ;
var {0,1}: aux33_INTEGER :: var_is_introduced ;
var bool: aux34_BOOL:: var_is_introduced ;
var bool: aux35_BOOL:: var_is_introduced ;
var {0,1}: aux35_INTEGER :: var_is_introduced ;
var bool: aux36_BOOL:: var_is_introduced ;
var bool: aux37_BOOL:: var_is_introduced ;
var {0,1}: aux37_INTEGER :: var_is_introduced ;
var bool: aux38_BOOL:: var_is_introduced ;
var bool: aux39_BOOL:: var_is_introduced ;
var {0,1}: aux39_INTEGER :: var_is_introduced ;
var bool: aux40_BOOL:: var_is_introduced ;
var bool: aux41_BOOL:: var_is_introduced ;
var {0,1}: aux41_INTEGER :: var_is_introduced ;
var bool: aux42_BOOL:: var_is_introduced ;
var bool: aux43_BOOL:: var_is_introduced ;
var {0,1}: aux43_INTEGER :: var_is_introduced ;
var bool: aux44_BOOL:: var_is_introduced ;
var bool: aux45_BOOL:: var_is_introduced ;
var {0,1}: aux45_INTEGER :: var_is_introduced ;
var bool: aux46_BOOL:: var_is_introduced ;
var bool: aux47_BOOL:: var_is_introduced ;
var {0,1}: aux47_INTEGER :: var_is_introduced ;
var bool: aux48_BOOL:: var_is_introduced ;
var bool: aux49_BOOL:: var_is_introduced ;
var {0,1}: aux49_INTEGER :: var_is_introduced ;
var bool: aux50_BOOL:: var_is_introduced ;
var bool: aux51_BOOL:: var_is_introduced ;
var {0,1}: aux51_INTEGER :: var_is_introduced ;
var bool: aux52_BOOL:: var_is_introduced ;
var bool: aux53_BOOL:: var_is_introduced ;
var {0,1}: aux53_INTEGER :: var_is_introduced ;
var bool: aux54_BOOL:: var_is_introduced ;
var bool: aux55_BOOL:: var_is_introduced ;
var {0,1}: aux55_INTEGER :: var_is_introduced ;
var bool: aux56_BOOL:: var_is_introduced ;
var bool: aux57_BOOL:: var_is_introduced ;
var {0,1}: aux57_INTEGER :: var_is_introduced ;
var bool: aux58_BOOL:: var_is_introduced ;
var bool: aux59_BOOL:: var_is_introduced ;
var {0,1}: aux59_INTEGER :: var_is_introduced ;
var bool: aux60_BOOL:: var_is_introduced ;
var bool: aux61_BOOL:: var_is_introduced ;
var {0,1}: aux61_INTEGER :: var_is_introduced ;
var bool: aux62_BOOL:: var_is_introduced ;
var bool: aux63_BOOL:: var_is_introduced ;
var {0,1}: aux63_INTEGER :: var_is_introduced ;
var bool: aux64_BOOL:: var_is_introduced ;
var bool: aux65_BOOL:: var_is_introduced ;
var {0,1}: aux65_INTEGER :: var_is_introduced ;
var bool: aux66_BOOL:: var_is_introduced ;
var bool: aux67_BOOL:: var_is_introduced ;
var {0,1}: aux67_INTEGER :: var_is_introduced ;
var bool: aux68_BOOL:: var_is_introduced ;
var bool: aux69_BOOL:: var_is_introduced ;
var {0,1}: aux69_INTEGER :: var_is_introduced ;
var bool: aux70_BOOL:: var_is_introduced ;
var bool: aux71_BOOL:: var_is_introduced ;
var {0,1}: aux71_INTEGER :: var_is_introduced ;
var bool: aux72_BOOL:: var_is_introduced ;
var bool: aux73_BOOL:: var_is_introduced ;
var {0,1}: aux73_INTEGER :: var_is_introduced ;
var bool: aux74_BOOL:: var_is_introduced ;
var bool: aux75_BOOL:: var_is_introduced ;
var {0,1}: aux75_INTEGER :: var_is_introduced ;
var bool: aux76_BOOL:: var_is_introduced ;
var bool: aux77_BOOL:: var_is_introduced ;
var {0,1}: aux77_INTEGER :: var_is_introduced ;
var bool: aux78_BOOL:: var_is_introduced ;
var bool: aux79_BOOL:: var_is_introduced ;
var {0,1}: aux79_INTEGER :: var_is_introduced ;
var bool: aux80_BOOL:: var_is_introduced ;
var bool: aux81_BOOL:: var_is_introduced ;
var {0,1}: aux81_INTEGER :: var_is_introduced ;
var bool: aux82_BOOL:: var_is_introduced ;
var bool: aux83_BOOL:: var_is_introduced ;
var {0,1}: aux83_INTEGER :: var_is_introduced ;
var bool: aux84_BOOL:: var_is_introduced ;
var bool: aux85_BOOL:: var_is_introduced ;
var {0,1}: aux85_INTEGER :: var_is_introduced ;
var bool: aux86_BOOL:: var_is_introduced ;
var bool: aux87_BOOL:: var_is_introduced ;
var {0,1}: aux87_INTEGER :: var_is_introduced ;
var bool: aux88_BOOL:: var_is_introduced ;
var bool: aux89_BOOL:: var_is_introduced ;
var {0,1}: aux89_INTEGER :: var_is_introduced ;
var bool: aux90_BOOL:: var_is_introduced ;
var bool: aux91_BOOL:: var_is_introduced ;
var {0,1}: aux91_INTEGER :: var_is_introduced ;
var bool: aux92_BOOL:: var_is_introduced ;
var bool: aux93_BOOL:: var_is_introduced ;
var {0,1}: aux93_INTEGER :: var_is_introduced ;
var bool: aux94_BOOL:: var_is_introduced ;
var bool: aux95_BOOL:: var_is_introduced ;
var {0,1}: aux95_INTEGER :: var_is_introduced ;
var bool: aux96_BOOL:: var_is_introduced ;
var bool: aux97_BOOL:: var_is_introduced ;
var {0,1}: aux97_INTEGER :: var_is_introduced ;
var bool: aux98_BOOL:: var_is_introduced ;
var bool: aux99_BOOL:: var_is_introduced ;
var {0,1}: aux99_INTEGER :: var_is_introduced ;
var bool: aux100_BOOL:: var_is_introduced ;
var bool: aux101_BOOL:: var_is_introduced ;
var {0,1}: aux101_INTEGER :: var_is_introduced ;
var bool: aux102_BOOL:: var_is_introduced ;
var bool: aux103_BOOL:: var_is_introduced ;
var {0,1}: aux103_INTEGER :: var_is_introduced ;
var bool: aux104_BOOL:: var_is_introduced ;
var bool: aux105_BOOL:: var_is_introduced ;
var {0,1}: aux105_INTEGER :: var_is_introduced ;
var bool: aux106_BOOL:: var_is_introduced ;
var bool: aux107_BOOL:: var_is_introduced ;
var {0,1}: aux107_INTEGER :: var_is_introduced ;
var bool: aux108_BOOL:: var_is_introduced ;
var bool: aux109_BOOL:: var_is_introduced ;
var {0,1}: aux109_INTEGER :: var_is_introduced ;
var bool: aux110_BOOL:: var_is_introduced ;
var bool: aux111_BOOL:: var_is_introduced ;
var {0,1}: aux111_INTEGER :: var_is_introduced ;
var bool: aux112_BOOL:: var_is_introduced ;
var bool: aux113_BOOL:: var_is_introduced ;
var {0,1}: aux113_INTEGER :: var_is_introduced ;
var bool: aux114_BOOL:: var_is_introduced ;
var bool: aux115_BOOL:: var_is_introduced ;
var {0,1}: aux115_INTEGER :: var_is_introduced ;
var bool: aux116_BOOL:: var_is_introduced ;
var bool: aux117_BOOL:: var_is_introduced ;
var {0,1}: aux117_INTEGER :: var_is_introduced ;
var bool: aux118_BOOL:: var_is_introduced ;
var bool: aux119_BOOL:: var_is_introduced ;
var {0,1}: aux119_INTEGER :: var_is_introduced ;
var bool: aux120_BOOL:: var_is_introduced ;
var bool: aux121_BOOL:: var_is_introduced ;
var {0,1}: aux121_INTEGER :: var_is_introduced ;
var bool: aux122_BOOL:: var_is_introduced ;
var bool: aux123_BOOL:: var_is_introduced ;
var {0,1}: aux123_INTEGER :: var_is_introduced ;
var bool: aux124_BOOL:: var_is_introduced ;
var bool: aux125_BOOL:: var_is_introduced ;
var {0,1}: aux125_INTEGER :: var_is_introduced ;
var bool: aux126_BOOL:: var_is_introduced ;
var bool: aux127_BOOL:: var_is_introduced ;
var {0,1}: aux127_INTEGER :: var_is_introduced ;
var bool: aux128_BOOL:: var_is_introduced ;
var bool: aux129_BOOL:: var_is_introduced ;
var {0,1}: aux129_INTEGER :: var_is_introduced ;
var bool: aux130_BOOL:: var_is_introduced ;
var bool: aux131_BOOL:: var_is_introduced ;
var {0,1}: aux131_INTEGER :: var_is_introduced ;
var bool: aux132_BOOL:: var_is_introduced ;
var bool: aux133_BOOL:: var_is_introduced ;
var {0,1}: aux133_INTEGER :: var_is_introduced ;
var bool: aux134_BOOL:: var_is_introduced ;
var bool: aux135_BOOL:: var_is_introduced ;
var {0,1}: aux135_INTEGER :: var_is_introduced ;
var bool: aux136_BOOL:: var_is_introduced ;
var bool: aux137_BOOL:: var_is_introduced ;
var {0,1}: aux137_INTEGER :: var_is_introduced ;
var bool: aux138_BOOL:: var_is_introduced ;
var bool: aux139_BOOL:: var_is_introduced ;
var {0,1}: aux139_INTEGER :: var_is_introduced ;
var bool: aux140_BOOL:: var_is_introduced ;
var bool: aux141_BOOL:: var_is_introduced ;
var {0,1}: aux141_INTEGER :: var_is_introduced ;
var bool: aux142_BOOL:: var_is_introduced ;
var bool: aux143_BOOL:: var_is_introduced ;
var {0,1}: aux143_INTEGER :: var_is_introduced ;
var bool: aux144_BOOL:: var_is_introduced ;
var bool: aux145_BOOL:: var_is_introduced ;
var {0,1}: aux145_INTEGER :: var_is_introduced ;
var bool: aux146_BOOL:: var_is_introduced ;
var bool: aux147_BOOL:: var_is_introduced ;
var {0,1}: aux147_INTEGER :: var_is_introduced ;
var bool: aux148_BOOL:: var_is_introduced ;
var bool: aux149_BOOL:: var_is_introduced ;
var {0,1}: aux149_INTEGER :: var_is_introduced ;
var bool: aux150_BOOL:: var_is_introduced ;
var bool: aux151_BOOL:: var_is_introduced ;
var {0,1}: aux151_INTEGER :: var_is_introduced ;
var bool: aux152_BOOL:: var_is_introduced ;
var bool: aux153_BOOL:: var_is_introduced ;
var {0,1}: aux153_INTEGER :: var_is_introduced ;
var bool: aux154_BOOL:: var_is_introduced ;
var bool: aux155_BOOL:: var_is_introduced ;
var {0,1}: aux155_INTEGER :: var_is_introduced ;
var bool: aux156_BOOL:: var_is_introduced ;
var bool: aux157_BOOL:: var_is_introduced ;
var {0,1}: aux157_INTEGER :: var_is_introduced ;
var bool: aux158_BOOL:: var_is_introduced ;
var bool: aux159_BOOL:: var_is_introduced ;
var {0,1}: aux159_INTEGER :: var_is_introduced ;
var bool: aux160_BOOL:: var_is_introduced ;
var bool: aux161_BOOL:: var_is_introduced ;
var {0,1}: aux161_INTEGER :: var_is_introduced ;
var bool: aux162_BOOL:: var_is_introduced ;
var bool: aux163_BOOL:: var_is_introduced ;
var {0,1}: aux163_INTEGER :: var_is_introduced ;
var bool: aux164_BOOL:: var_is_introduced ;
var bool: aux165_BOOL:: var_is_introduced ;
var {0,1}: aux165_INTEGER :: var_is_introduced ;
var bool: aux166_BOOL:: var_is_introduced ;
var bool: aux167_BOOL:: var_is_introduced ;
var {0,1}: aux167_INTEGER :: var_is_introduced ;
var bool: aux168_BOOL:: var_is_introduced ;
var bool: aux169_BOOL:: var_is_introduced ;
var {0,1}: aux169_INTEGER :: var_is_introduced ;
var bool: aux170_BOOL:: var_is_introduced ;
var bool: aux171_BOOL:: var_is_introduced ;
var {0,1}: aux171_INTEGER :: var_is_introduced ;
var bool: aux172_BOOL:: var_is_introduced ;
var bool: aux173_BOOL:: var_is_introduced ;
var {0,1}: aux173_INTEGER :: var_is_introduced ;
var bool: aux174_BOOL:: var_is_introduced ;
var bool: aux175_BOOL:: var_is_introduced ;
var {0,1}: aux175_INTEGER :: var_is_introduced ;
var bool: aux176_BOOL:: var_is_introduced ;
var bool: aux177_BOOL:: var_is_introduced ;
var {0,1}: aux177_INTEGER :: var_is_introduced ;
var bool: aux178_BOOL:: var_is_introduced ;
var bool: aux179_BOOL:: var_is_introduced ;
var {0,1}: aux179_INTEGER :: var_is_introduced ;
var bool: aux180_BOOL:: var_is_introduced ;
var bool: aux181_BOOL:: var_is_introduced ;
var {0,1}: aux181_INTEGER :: var_is_introduced ;
var bool: aux182_BOOL:: var_is_introduced ;
var bool: aux183_BOOL:: var_is_introduced ;
var {0,1}: aux183_INTEGER :: var_is_introduced ;
var bool: aux184_BOOL:: var_is_introduced ;
var bool: aux185_BOOL:: var_is_introduced ;
var {0,1}: aux185_INTEGER :: var_is_introduced ;
var bool: aux186_BOOL:: var_is_introduced ;
var bool: aux187_BOOL:: var_is_introduced ;
var {0,1}: aux187_INTEGER :: var_is_introduced ;
var bool: aux188_BOOL:: var_is_introduced ;
var bool: aux189_BOOL:: var_is_introduced ;
var {0,1}: aux189_INTEGER :: var_is_introduced ;
var bool: aux190_BOOL:: var_is_introduced ;
var bool: aux191_BOOL:: var_is_introduced ;
var {0,1}: aux191_INTEGER :: var_is_introduced ;
var bool: aux192_BOOL:: var_is_introduced ;
var bool: aux193_BOOL:: var_is_introduced ;
var {0,1}: aux193_INTEGER :: var_is_introduced ;
var bool: aux194_BOOL:: var_is_introduced ;
var bool: aux195_BOOL:: var_is_introduced ;
var {0,1}: aux195_INTEGER :: var_is_introduced ;
var bool: aux196_BOOL:: var_is_introduced ;
var bool: aux197_BOOL:: var_is_introduced ;
var {0,1}: aux197_INTEGER :: var_is_introduced ;
var bool: aux198_BOOL:: var_is_introduced ;
var bool: aux199_BOOL:: var_is_introduced ;
var {0,1}: aux199_INTEGER :: var_is_introduced ;
var bool: aux200_BOOL:: var_is_introduced ;
var bool: aux201_BOOL:: var_is_introduced ;
var {0,1}: aux201_INTEGER :: var_is_introduced ;
var bool: aux202_BOOL:: var_is_introduced ;
var bool: aux203_BOOL:: var_is_introduced ;
var {0,1}: aux203_INTEGER :: var_is_introduced ;
var bool: aux204_BOOL:: var_is_introduced ;
var bool: aux205_BOOL:: var_is_introduced ;
var {0,1}: aux205_INTEGER :: var_is_introduced ;
var bool: aux206_BOOL:: var_is_introduced ;
var bool: aux207_BOOL:: var_is_introduced ;
var {0,1}: aux207_INTEGER :: var_is_introduced ;
var bool: aux208_BOOL:: var_is_introduced ;
var bool: aux209_BOOL:: var_is_introduced ;
var {0,1}: aux209_INTEGER :: var_is_introduced ;
var bool: aux210_BOOL:: var_is_introduced ;
var bool: aux211_BOOL:: var_is_introduced ;
var {0,1}: aux211_INTEGER :: var_is_introduced ;
var bool: aux212_BOOL:: var_is_introduced ;
var bool: aux213_BOOL:: var_is_introduced ;
var {0,1}: aux213_INTEGER :: var_is_introduced ;
var bool: aux214_BOOL:: var_is_introduced ;
var bool: aux215_BOOL:: var_is_introduced ;
var {0,1}: aux215_INTEGER :: var_is_introduced ;
var bool: aux216_BOOL:: var_is_introduced ;
var bool: aux217_BOOL:: var_is_introduced ;
var {0,1}: aux217_INTEGER :: var_is_introduced ;
var bool: aux218_BOOL:: var_is_introduced ;
var bool: aux219_BOOL:: var_is_introduced ;
var {0,1}: aux219_INTEGER :: var_is_introduced ;
var bool: aux220_BOOL:: var_is_introduced ;
var bool: aux221_BOOL:: var_is_introduced ;
var {0,1}: aux221_INTEGER :: var_is_introduced ;
var bool: aux222_BOOL:: var_is_introduced ;
var bool: aux223_BOOL:: var_is_introduced ;
var {0,1}: aux223_INTEGER :: var_is_introduced ;
var bool: aux224_BOOL:: var_is_introduced ;
var bool: aux225_BOOL:: var_is_introduced ;
var {0,1}: aux225_INTEGER :: var_is_introduced ;
var bool: aux226_BOOL:: var_is_introduced ;
var bool: aux227_BOOL:: var_is_introduced ;
var {0,1}: aux227_INTEGER :: var_is_introduced ;
var bool: aux228_BOOL:: var_is_introduced ;
var bool: aux229_BOOL:: var_is_introduced ;
var {0,1}: aux229_INTEGER :: var_is_introduced ;
var bool: aux230_BOOL:: var_is_introduced ;
var bool: aux231_BOOL:: var_is_introduced ;
var {0,1}: aux231_INTEGER :: var_is_introduced ;
var bool: aux232_BOOL:: var_is_introduced ;
var bool: aux233_BOOL:: var_is_introduced ;
var {0,1}: aux233_INTEGER :: var_is_introduced ;
var bool: aux234_BOOL:: var_is_introduced ;
var bool: aux235_BOOL:: var_is_introduced ;
var {0,1}: aux235_INTEGER :: var_is_introduced ;
var bool: aux236_BOOL:: var_is_introduced ;
var bool: aux237_BOOL:: var_is_introduced ;
var {0,1}: aux237_INTEGER :: var_is_introduced ;
var bool: aux238_BOOL:: var_is_introduced ;
var bool: aux239_BOOL:: var_is_introduced ;
var {0,1}: aux239_INTEGER :: var_is_introduced ;
var bool: aux240_BOOL:: var_is_introduced ;
var bool: aux241_BOOL:: var_is_introduced ;
var {0,1}: aux241_INTEGER :: var_is_introduced ;
var bool: aux242_BOOL:: var_is_introduced ;
var bool: aux243_BOOL:: var_is_introduced ;
var {0,1}: aux243_INTEGER :: var_is_introduced ;
var bool: aux244_BOOL:: var_is_introduced ;
var bool: aux245_BOOL:: var_is_introduced ;
var {0,1}: aux245_INTEGER :: var_is_introduced ;
var bool: aux246_BOOL:: var_is_introduced ;
var bool: aux247_BOOL:: var_is_introduced ;
var {0,1}: aux247_INTEGER :: var_is_introduced ;
var bool: aux248_BOOL:: var_is_introduced ;
var bool: aux249_BOOL:: var_is_introduced ;
var {0,1}: aux249_INTEGER :: var_is_introduced ;
var bool: aux250_BOOL:: var_is_introduced ;
var bool: aux251_BOOL:: var_is_introduced ;
var {0,1}: aux251_INTEGER :: var_is_introduced ;
var bool: aux252_BOOL:: var_is_introduced ;
var bool: aux253_BOOL:: var_is_introduced ;
var {0,1}: aux253_INTEGER :: var_is_introduced ;
var bool: aux254_BOOL:: var_is_introduced ;
var bool: aux255_BOOL:: var_is_introduced ;
var {0,1}: aux255_INTEGER :: var_is_introduced ;
var bool: aux256_BOOL:: var_is_introduced ;
var bool: aux257_BOOL:: var_is_introduced ;
var {0,1}: aux257_INTEGER :: var_is_introduced ;
var bool: aux258_BOOL:: var_is_introduced ;
var bool: aux259_BOOL:: var_is_introduced ;
var {0,1}: aux259_INTEGER :: var_is_introduced ;
var bool: aux260_BOOL:: var_is_introduced ;
var bool: aux261_BOOL:: var_is_introduced ;
var {0,1}: aux261_INTEGER :: var_is_introduced ;
var bool: aux262_BOOL:: var_is_introduced ;
var bool: aux263_BOOL:: var_is_introduced ;
var {0,1}: aux263_INTEGER :: var_is_introduced ;
var bool: aux264_BOOL:: var_is_introduced ;
var bool: aux265_BOOL:: var_is_introduced ;
var {0,1}: aux265_INTEGER :: var_is_introduced ;
var bool: aux266_BOOL:: var_is_introduced ;
var bool: aux267_BOOL:: var_is_introduced ;
var {0,1}: aux267_INTEGER :: var_is_introduced ;
var bool: aux268_BOOL:: var_is_introduced ;
var bool: aux269_BOOL:: var_is_introduced ;
var {0,1}: aux269_INTEGER :: var_is_introduced ;
var bool: aux270_BOOL:: var_is_introduced ;
var bool: aux271_BOOL:: var_is_introduced ;
var {0,1}: aux271_INTEGER :: var_is_introduced ;
var bool: aux272_BOOL:: var_is_introduced ;
var bool: aux273_BOOL:: var_is_introduced ;
var {0,1}: aux273_INTEGER :: var_is_introduced ;
var bool: aux274_BOOL:: var_is_introduced ;
var bool: aux275_BOOL:: var_is_introduced ;
var {0,1}: aux275_INTEGER :: var_is_introduced ;
var bool: aux276_BOOL:: var_is_introduced ;
var bool: aux277_BOOL:: var_is_introduced ;
var bool: aux278_BOOL:: var_is_introduced ;
var bool: aux279_BOOL:: var_is_introduced ;
var bool: aux280_BOOL:: var_is_introduced ;
var bool: aux281_BOOL:: var_is_introduced ;
var bool: aux282_BOOL:: var_is_introduced ;
var bool: aux283_BOOL:: var_is_introduced ;
var bool: aux284_BOOL:: var_is_introduced ;
var bool: aux285_BOOL:: var_is_introduced ;
var bool: aux286_BOOL:: var_is_introduced ;
var bool: aux287_BOOL:: var_is_introduced ;
var bool: aux288_BOOL:: var_is_introduced ;
var bool: aux289_BOOL:: var_is_introduced ;
var bool: aux290_BOOL:: var_is_introduced ;
var bool: aux291_BOOL:: var_is_introduced ;
var bool: aux292_BOOL:: var_is_introduced ;
var bool: aux293_BOOL:: var_is_introduced ;
var bool: aux294_BOOL:: var_is_introduced ;
var bool: aux295_BOOL:: var_is_introduced ;
var bool: aux296_BOOL:: var_is_introduced ;
var bool: aux297_BOOL:: var_is_introduced ;
var bool: aux298_BOOL:: var_is_introduced ;
var bool: aux299_BOOL:: var_is_introduced ;
var bool: aux300_BOOL:: var_is_introduced ;
var bool: aux301_BOOL:: var_is_introduced ;
var bool: aux302_BOOL:: var_is_introduced ;
var bool: aux303_BOOL:: var_is_introduced ;
var bool: aux304_BOOL:: var_is_introduced ;
var bool: aux305_BOOL:: var_is_introduced ;
var bool: aux306_BOOL:: var_is_introduced ;
var bool: aux307_BOOL:: var_is_introduced ;
var bool: aux308_BOOL:: var_is_introduced ;
var bool: aux309_BOOL:: var_is_introduced ;
var bool: aux310_BOOL:: var_is_introduced ;
var bool: aux311_BOOL:: var_is_introduced ;
var bool: aux312_BOOL:: var_is_introduced ;
var bool: aux313_BOOL:: var_is_introduced ;
var bool: aux314_BOOL:: var_is_introduced ;
var bool: aux315_BOOL:: var_is_introduced ;
var bool: aux316_BOOL:: var_is_introduced ;
var bool: aux317_BOOL:: var_is_introduced ;
var bool: aux318_BOOL:: var_is_introduced ;
var bool: aux319_BOOL:: var_is_introduced ;
var bool: aux320_BOOL:: var_is_introduced ;
var bool: aux321_BOOL:: var_is_introduced ;
var bool: aux322_BOOL:: var_is_introduced ;
var bool: aux323_BOOL:: var_is_introduced ;
var bool: aux324_BOOL:: var_is_introduced ;
var bool: aux325_BOOL:: var_is_introduced ;
var bool: aux326_BOOL:: var_is_introduced ;
var bool: aux327_BOOL:: var_is_introduced ;
var bool: aux328_BOOL:: var_is_introduced ;
var bool: aux329_BOOL:: var_is_introduced ;
var bool: aux330_BOOL:: var_is_introduced ;
var bool: aux331_BOOL:: var_is_introduced ;
var bool: aux332_BOOL:: var_is_introduced ;
var bool: aux333_BOOL:: var_is_introduced ;
var bool: aux334_BOOL:: var_is_introduced ;
var bool: aux335_BOOL:: var_is_introduced ;
var bool: aux336_BOOL:: var_is_introduced ;
var bool: aux337_BOOL:: var_is_introduced ;
var bool: aux338_BOOL:: var_is_introduced ;
var bool: aux339_BOOL:: var_is_introduced ;
var bool: aux340_BOOL:: var_is_introduced ;
var bool: aux341_BOOL:: var_is_introduced ;
var bool: aux342_BOOL:: var_is_introduced ;
var bool: aux343_BOOL:: var_is_introduced ;
var bool: aux344_BOOL:: var_is_introduced ;
var bool: aux345_BOOL:: var_is_introduced ;
var bool: aux346_BOOL:: var_is_introduced ;
var bool: aux347_BOOL:: var_is_introduced ;
var bool: aux348_BOOL:: var_is_introduced ;
var bool: aux349_BOOL:: var_is_introduced ;
var bool: aux350_BOOL:: var_is_introduced ;
var bool: aux351_BOOL:: var_is_introduced ;
var bool: aux352_BOOL:: var_is_introduced ;
var bool: aux353_BOOL:: var_is_introduced ;
var bool: aux354_BOOL:: var_is_introduced ;
var bool: aux355_BOOL:: var_is_introduced ;
var bool: aux356_BOOL:: var_is_introduced ;
var bool: aux357_BOOL:: var_is_introduced ;
var bool: aux358_BOOL:: var_is_introduced ;
var bool: aux359_BOOL:: var_is_introduced ;
var bool: aux360_BOOL:: var_is_introduced ;
var bool: aux361_BOOL:: var_is_introduced ;
var bool: aux362_BOOL:: var_is_introduced ;
var bool: aux363_BOOL:: var_is_introduced ;
var bool: aux364_BOOL:: var_is_introduced ;
var bool: aux365_BOOL:: var_is_introduced ;
var bool: aux366_BOOL:: var_is_introduced ;
var bool: aux367_BOOL:: var_is_introduced ;
var bool: aux368_BOOL:: var_is_introduced ;
var bool: aux369_BOOL:: var_is_introduced ;
var bool: aux370_BOOL:: var_is_introduced ;
var bool: aux371_BOOL:: var_is_introduced ;
var bool: aux372_BOOL:: var_is_introduced ;
var bool: aux373_BOOL:: var_is_introduced ;
var bool: aux374_BOOL:: var_is_introduced ;
var bool: aux375_BOOL:: var_is_introduced ;
var bool: aux376_BOOL:: var_is_introduced ;
var bool: aux377_BOOL:: var_is_introduced ;
var bool: aux378_BOOL:: var_is_introduced ;
var bool: aux379_BOOL:: var_is_introduced ;
var bool: aux380_BOOL:: var_is_introduced ;
var bool: aux381_BOOL:: var_is_introduced ;
var bool: aux382_BOOL:: var_is_introduced ;
var bool: aux383_BOOL:: var_is_introduced ;
var bool: aux384_BOOL:: var_is_introduced ;
var bool: aux385_BOOL:: var_is_introduced ;
var bool: aux386_BOOL:: var_is_introduced ;
var bool: aux387_BOOL:: var_is_introduced ;
var bool: aux388_BOOL:: var_is_introduced ;
var bool: aux389_BOOL:: var_is_introduced ;
var bool: aux390_BOOL:: var_is_introduced ;
var bool: aux391_BOOL:: var_is_introduced ;
var bool: aux392_BOOL:: var_is_introduced ;
var bool: aux393_BOOL:: var_is_introduced ;
var bool: aux394_BOOL:: var_is_introduced ;
var bool: aux395_BOOL:: var_is_introduced ;
var bool: aux396_BOOL:: var_is_introduced ;
var bool: aux397_BOOL:: var_is_introduced ;
var bool: aux398_BOOL:: var_is_introduced ;
var bool: aux399_BOOL:: var_is_introduced ;
var bool: aux400_BOOL:: var_is_introduced ;
var bool: aux401_BOOL:: var_is_introduced ;
var bool: aux402_BOOL:: var_is_introduced ;
var bool: aux403_BOOL:: var_is_introduced ;
var bool: aux404_BOOL:: var_is_introduced ;
var bool: aux405_BOOL:: var_is_introduced ;
var bool: aux406_BOOL:: var_is_introduced ;
var bool: aux407_BOOL:: var_is_introduced ;
var bool: aux408_BOOL:: var_is_introduced ;
var bool: aux409_BOOL:: var_is_introduced ;
var bool: aux410_BOOL:: var_is_introduced ;
var bool: aux411_BOOL:: var_is_introduced ;
var bool: aux412_BOOL:: var_is_introduced ;
var bool: aux413_BOOL:: var_is_introduced ;
var bool: aux414_BOOL:: var_is_introduced ;
var bool: aux415_BOOL:: var_is_introduced ;
var bool: aux416_BOOL:: var_is_introduced ;
var bool: aux417_BOOL:: var_is_introduced ;
var bool: aux418_BOOL:: var_is_introduced ;
var bool: aux419_BOOL:: var_is_introduced ;
var bool: aux420_BOOL:: var_is_introduced ;
var bool: aux421_BOOL:: var_is_introduced ;
var bool: aux422_BOOL:: var_is_introduced ;
var bool: aux423_BOOL:: var_is_introduced ;
var bool: aux424_BOOL:: var_is_introduced ;
var bool: aux425_BOOL:: var_is_introduced ;
var bool: aux426_BOOL:: var_is_introduced ;
var bool: aux427_BOOL:: var_is_introduced ;
var bool: aux428_BOOL:: var_is_introduced ;
var bool: aux429_BOOL:: var_is_introduced ;
var bool: aux430_BOOL:: var_is_introduced ;
var bool: aux431_BOOL:: var_is_introduced ;
var bool: aux432_BOOL:: var_is_introduced ;
var bool: aux433_BOOL:: var_is_introduced ;
var bool: aux434_BOOL:: var_is_introduced ;
var bool: aux435_BOOL:: var_is_introduced ;
var bool: aux436_BOOL:: var_is_introduced ;
var bool: aux437_BOOL:: var_is_introduced ;
var bool: aux438_BOOL:: var_is_introduced ;
var bool: aux439_BOOL:: var_is_introduced ;
var bool: aux440_BOOL:: var_is_introduced ;
var bool: aux441_BOOL:: var_is_introduced ;
var bool: aux442_BOOL:: var_is_introduced ;
var bool: aux443_BOOL:: var_is_introduced ;
var bool: aux444_BOOL:: var_is_introduced ;
var bool: aux445_BOOL:: var_is_introduced ;
var bool: aux446_BOOL:: var_is_introduced ;
var bool: aux447_BOOL:: var_is_introduced ;
var bool: aux448_BOOL:: var_is_introduced ;
var bool: aux449_BOOL:: var_is_introduced ;
var bool: aux450_BOOL:: var_is_introduced ;
var bool: aux451_BOOL:: var_is_introduced ;
var bool: aux452_BOOL:: var_is_introduced ;
var bool: aux453_BOOL:: var_is_introduced ;
var bool: aux454_BOOL:: var_is_introduced ;
var bool: aux455_BOOL:: var_is_introduced ;
var bool: aux456_BOOL:: var_is_introduced ;
var bool: aux457_BOOL:: var_is_introduced ;
var 3..60: aux458:: var_is_introduced ;
var bool: aux459_BOOL:: var_is_introduced ;
var bool: aux460_BOOL:: var_is_introduced ;
var {0,1}: aux460_INTEGER :: var_is_introduced ;
var bool: aux461_BOOL:: var_is_introduced ;
var bool: aux462_BOOL:: var_is_introduced ;
var 4..61: aux463:: var_is_introduced ;
var bool: aux464_BOOL:: var_is_introduced ;
var bool: aux465_BOOL:: var_is_introduced ;
var bool: aux466_BOOL:: var_is_introduced ;
var {0,1}: aux466_INTEGER :: var_is_introduced ;
var bool: aux467_BOOL:: var_is_introduced ;
var bool: aux468_BOOL:: var_is_introduced ;
var 4..61: aux469:: var_is_introduced ;
var bool: aux470_BOOL:: var_is_introduced ;
var bool: aux471_BOOL:: var_is_introduced ;
var bool: aux472_BOOL:: var_is_introduced ;
var {0,1}: aux472_INTEGER :: var_is_introduced ;
var bool: aux473_BOOL:: var_is_introduced ;
var bool: aux474_BOOL:: var_is_introduced ;
var 3..60: aux475:: var_is_introduced ;
var bool: aux476_BOOL:: var_is_introduced ;
var bool: aux477_BOOL:: var_is_introduced ;
var bool: aux478_BOOL:: var_is_introduced ;
var {0,1}: aux478_INTEGER :: var_is_introduced ;
var bool: aux479_BOOL:: var_is_introduced ;
var bool: aux480_BOOL:: var_is_introduced ;
var 2..59: aux481:: var_is_introduced ;
var bool: aux482_BOOL:: var_is_introduced ;
var bool: aux483_BOOL:: var_is_introduced ;
var bool: aux484_BOOL:: var_is_introduced ;
var {0,1}: aux484_INTEGER :: var_is_introduced ;
var bool: aux485_BOOL:: var_is_introduced ;
var bool: aux486_BOOL:: var_is_introduced ;
var 3..60: aux487:: var_is_introduced ;
var bool: aux488_BOOL:: var_is_introduced ;
var bool: aux489_BOOL:: var_is_introduced ;
var bool: aux490_BOOL:: var_is_introduced ;
var {0,1}: aux490_INTEGER :: var_is_introduced ;
var bool: aux491_BOOL:: var_is_introduced ;
var bool: aux492_BOOL:: var_is_introduced ;
var 2..59: aux493:: var_is_introduced ;
var bool: aux494_BOOL:: var_is_introduced ;
var bool: aux495_BOOL:: var_is_introduced ;
var bool: aux496_BOOL:: var_is_introduced ;
var {0,1}: aux496_INTEGER :: var_is_introduced ;
var bool: aux497_BOOL:: var_is_introduced ;
var bool: aux498_BOOL:: var_is_introduced ;
var 3..60: aux499:: var_is_introduced ;
var bool: aux500_BOOL:: var_is_introduced ;
var bool: aux501_BOOL:: var_is_introduced ;
var bool: aux502_BOOL:: var_is_introduced ;
var {0,1}: aux502_INTEGER :: var_is_introduced ;
var bool: aux503_BOOL:: var_is_introduced ;
var bool: aux504_BOOL:: var_is_introduced ;
var 2..59: aux505:: var_is_introduced ;
var bool: aux506_BOOL:: var_is_introduced ;
var bool: aux507_BOOL:: var_is_introduced ;
var bool: aux508_BOOL:: var_is_introduced ;
var {0,1}: aux508_INTEGER :: var_is_introduced ;
var bool: aux509_BOOL:: var_is_introduced ;
var bool: aux510_BOOL:: var_is_introduced ;
var 2..59: aux511:: var_is_introduced ;
var bool: aux512_BOOL:: var_is_introduced ;
var bool: aux513_BOOL:: var_is_introduced ;
var bool: aux514_BOOL:: var_is_introduced ;
var {0,1}: aux514_INTEGER :: var_is_introduced ;
var bool: aux515_BOOL:: var_is_introduced ;
var bool: aux516_BOOL:: var_is_introduced ;
var 5..62: aux517:: var_is_introduced ;
var bool: aux518_BOOL:: var_is_introduced ;
var bool: aux519_BOOL:: var_is_introduced ;
var bool: aux520_BOOL:: var_is_introduced ;
var {0,1}: aux520_INTEGER :: var_is_introduced ;
var bool: aux521_BOOL:: var_is_introduced ;
var bool: aux522_BOOL:: var_is_introduced ;
var 4..61: aux523:: var_is_introduced ;
var bool: aux524_BOOL:: var_is_introduced ;
var bool: aux525_BOOL:: var_is_introduced ;
var bool: aux526_BOOL:: var_is_introduced ;
var {0,1}: aux526_INTEGER :: var_is_introduced ;
var bool: aux527_BOOL:: var_is_introduced ;
var bool: aux528_BOOL:: var_is_introduced ;
var 3..60: aux529:: var_is_introduced ;
var bool: aux530_BOOL:: var_is_introduced ;
var bool: aux531_BOOL:: var_is_introduced ;
var bool: aux532_BOOL:: var_is_introduced ;
var {0,1}: aux532_INTEGER :: var_is_introduced ;
var bool: aux533_BOOL:: var_is_introduced ;
var bool: aux534_BOOL:: var_is_introduced ;
var 2..59: aux535:: var_is_introduced ;
var bool: aux536_BOOL:: var_is_introduced ;
var bool: aux537_BOOL:: var_is_introduced ;
var bool: aux538_BOOL:: var_is_introduced ;
var {0,1}: aux538_INTEGER :: var_is_introduced ;
var bool: aux539_BOOL:: var_is_introduced ;
var bool: aux540_BOOL:: var_is_introduced ;
var 1..58: aux541:: var_is_introduced ;
var bool: aux542_BOOL:: var_is_introduced ;
var bool: aux543_BOOL:: var_is_introduced ;
var bool: aux544_BOOL:: var_is_introduced ;
var {0,1}: aux544_INTEGER :: var_is_introduced ;
var bool: aux545_BOOL:: var_is_introduced ;
var bool: aux546_BOOL:: var_is_introduced ;
var 3..60: aux547:: var_is_introduced ;
var bool: aux548_BOOL:: var_is_introduced ;
var bool: aux549_BOOL:: var_is_introduced ;
var bool: aux550_BOOL:: var_is_introduced ;
var {0,1}: aux550_INTEGER :: var_is_introduced ;
var bool: aux551_BOOL:: var_is_introduced ;
var bool: aux552_BOOL:: var_is_introduced ;
var 1..58: aux553:: var_is_introduced ;
var bool: aux554_BOOL:: var_is_introduced ;
var bool: aux555_BOOL:: var_is_introduced ;
var bool: aux556_BOOL:: var_is_introduced ;
var {0,1}: aux556_INTEGER :: var_is_introduced ;
var bool: aux557_BOOL:: var_is_introduced ;
var bool: aux558_BOOL:: var_is_introduced ;
var 4..61: aux559:: var_is_introduced ;
var bool: aux560_BOOL:: var_is_introduced ;
var bool: aux561_BOOL:: var_is_introduced ;
var bool: aux562_BOOL:: var_is_introduced ;
var {0,1}: aux562_INTEGER :: var_is_introduced ;
var bool: aux563_BOOL:: var_is_introduced ;
var bool: aux564_BOOL:: var_is_introduced ;
var 4..61: aux565:: var_is_introduced ;
var bool: aux566_BOOL:: var_is_introduced ;
var bool: aux567_BOOL:: var_is_introduced ;
var bool: aux568_BOOL:: var_is_introduced ;
var {0,1}: aux568_INTEGER :: var_is_introduced ;
var bool: aux569_BOOL:: var_is_introduced ;
var bool: aux570_BOOL:: var_is_introduced ;
var 2..59: aux571:: var_is_introduced ;
var bool: aux572_BOOL:: var_is_introduced ;
var bool: aux573_BOOL:: var_is_introduced ;
var bool: aux574_BOOL:: var_is_introduced ;
var {0,1}: aux574_INTEGER :: var_is_introduced ;
var bool: aux575_BOOL:: var_is_introduced ;
var bool: aux576_BOOL:: var_is_introduced ;
var 4..61: aux577:: var_is_introduced ;
var bool: aux578_BOOL:: var_is_introduced ;
var bool: aux579_BOOL:: var_is_introduced ;
var {0,1}: aux579_INTEGER :: var_is_introduced ;
var bool: aux580_BOOL:: var_is_introduced ;
var bool: aux581_BOOL:: var_is_introduced ;
var 4..61: aux582:: var_is_introduced ;
var bool: aux583_BOOL:: var_is_introduced ;
var bool: aux584_BOOL:: var_is_introduced ;
var bool: aux585_BOOL:: var_is_introduced ;
var {0,1}: aux585_INTEGER :: var_is_introduced ;
var bool: aux586_BOOL:: var_is_introduced ;
var bool: aux587_BOOL:: var_is_introduced ;
var 4..61: aux588:: var_is_introduced ;
var bool: aux589_BOOL:: var_is_introduced ;
var bool: aux590_BOOL:: var_is_introduced ;
var bool: aux591_BOOL:: var_is_introduced ;
var {0,1}: aux591_INTEGER :: var_is_introduced ;
var bool: aux592_BOOL:: var_is_introduced ;
var bool: aux593_BOOL:: var_is_introduced ;
var 3..60: aux594:: var_is_introduced ;
var bool: aux595_BOOL:: var_is_introduced ;
var bool: aux596_BOOL:: var_is_introduced ;
var bool: aux597_BOOL:: var_is_introduced ;
var {0,1}: aux597_INTEGER :: var_is_introduced ;
var bool: aux598_BOOL:: var_is_introduced ;
var bool: aux599_BOOL:: var_is_introduced ;
var 2..59: aux600:: var_is_introduced ;
var bool: aux601_BOOL:: var_is_introduced ;
var bool: aux602_BOOL:: var_is_introduced ;
var bool: aux603_BOOL:: var_is_introduced ;
var {0,1}: aux603_INTEGER :: var_is_introduced ;
var bool: aux604_BOOL:: var_is_introduced ;
var bool: aux605_BOOL:: var_is_introduced ;
var 3..60: aux606:: var_is_introduced ;
var bool: aux607_BOOL:: var_is_introduced ;
var bool: aux608_BOOL:: var_is_introduced ;
var bool: aux609_BOOL:: var_is_introduced ;
var {0,1}: aux609_INTEGER :: var_is_introduced ;
var bool: aux610_BOOL:: var_is_introduced ;
var bool: aux611_BOOL:: var_is_introduced ;
var 2..59: aux612:: var_is_introduced ;
var bool: aux613_BOOL:: var_is_introduced ;
var bool: aux614_BOOL:: var_is_introduced ;
var bool: aux615_BOOL:: var_is_introduced ;
var {0,1}: aux615_INTEGER :: var_is_introduced ;
var bool: aux616_BOOL:: var_is_introduced ;
var bool: aux617_BOOL:: var_is_introduced ;
var 3..60: aux618:: var_is_introduced ;
var bool: aux619_BOOL:: var_is_introduced ;
var bool: aux620_BOOL:: var_is_introduced ;
var bool: aux621_BOOL:: var_is_introduced ;
var {0,1}: aux621_INTEGER :: var_is_introduced ;
var bool: aux622_BOOL:: var_is_introduced ;
var bool: aux623_BOOL:: var_is_introduced ;
var 2..59: aux624:: var_is_introduced ;
var bool: aux625_BOOL:: var_is_introduced ;
var bool: aux626_BOOL:: var_is_introduced ;
var bool: aux627_BOOL:: var_is_introduced ;
var {0,1}: aux627_INTEGER :: var_is_introduced ;
var bool: aux628_BOOL:: var_is_introduced ;
var bool: aux629_BOOL:: var_is_introduced ;
var 2..59: aux630:: var_is_introduced ;
var bool: aux631_BOOL:: var_is_introduced ;
var bool: aux632_BOOL:: var_is_introduced ;
var bool: aux633_BOOL:: var_is_introduced ;
var {0,1}: aux633_INTEGER :: var_is_introduced ;
var bool: aux634_BOOL:: var_is_introduced ;
var bool: aux635_BOOL:: var_is_introduced ;
var 5..62: aux636:: var_is_introduced ;
var bool: aux637_BOOL:: var_is_introduced ;
var bool: aux638_BOOL:: var_is_introduced ;
var bool: aux639_BOOL:: var_is_introduced ;
var {0,1}: aux639_INTEGER :: var_is_introduced ;
var bool: aux640_BOOL:: var_is_introduced ;
var bool: aux641_BOOL:: var_is_introduced ;
var 3..60: aux642:: var_is_introduced ;
var bool: aux643_BOOL:: var_is_introduced ;
var bool: aux644_BOOL:: var_is_introduced ;
var bool: aux645_BOOL:: var_is_introduced ;
var {0,1}: aux645_INTEGER :: var_is_introduced ;
var bool: aux646_BOOL:: var_is_introduced ;
var bool: aux647_BOOL:: var_is_introduced ;
var 3..60: aux648:: var_is_introduced ;
var bool: aux649_BOOL:: var_is_introduced ;
var bool: aux650_BOOL:: var_is_introduced ;
var bool: aux651_BOOL:: var_is_introduced ;
var {0,1}: aux651_INTEGER :: var_is_introduced ;
var bool: aux652_BOOL:: var_is_introduced ;
var bool: aux653_BOOL:: var_is_introduced ;
var 2..59: aux654:: var_is_introduced ;
var bool: aux655_BOOL:: var_is_introduced ;
var bool: aux656_BOOL:: var_is_introduced ;
var bool: aux657_BOOL:: var_is_introduced ;
var {0,1}: aux657_INTEGER :: var_is_introduced ;
var bool: aux658_BOOL:: var_is_introduced ;
var bool: aux659_BOOL:: var_is_introduced ;
var 1..58: aux660:: var_is_introduced ;
var bool: aux661_BOOL:: var_is_introduced ;
var bool: aux662_BOOL:: var_is_introduced ;
var bool: aux663_BOOL:: var_is_introduced ;
var {0,1}: aux663_INTEGER :: var_is_introduced ;
var bool: aux664_BOOL:: var_is_introduced ;
var bool: aux665_BOOL:: var_is_introduced ;
var 3..60: aux666:: var_is_introduced ;
var bool: aux667_BOOL:: var_is_introduced ;
var bool: aux668_BOOL:: var_is_introduced ;
var bool: aux669_BOOL:: var_is_introduced ;
var {0,1}: aux669_INTEGER :: var_is_introduced ;
var bool: aux670_BOOL:: var_is_introduced ;
var bool: aux671_BOOL:: var_is_introduced ;
var 1..58: aux672:: var_is_introduced ;
var bool: aux673_BOOL:: var_is_introduced ;
var bool: aux674_BOOL:: var_is_introduced ;
var bool: aux675_BOOL:: var_is_introduced ;
var {0,1}: aux675_INTEGER :: var_is_introduced ;
var bool: aux676_BOOL:: var_is_introduced ;
var bool: aux677_BOOL:: var_is_introduced ;
var 4..61: aux678:: var_is_introduced ;
var bool: aux679_BOOL:: var_is_introduced ;
var bool: aux680_BOOL:: var_is_introduced ;
var bool: aux681_BOOL:: var_is_introduced ;
var {0,1}: aux681_INTEGER :: var_is_introduced ;
var bool: aux682_BOOL:: var_is_introduced ;
var bool: aux683_BOOL:: var_is_introduced ;
var 4..61: aux684:: var_is_introduced ;
var bool: aux685_BOOL:: var_is_introduced ;
var bool: aux686_BOOL:: var_is_introduced ;
var bool: aux687_BOOL:: var_is_introduced ;
var {0,1}: aux687_INTEGER :: var_is_introduced ;
var bool: aux688_BOOL:: var_is_introduced ;
var bool: aux689_BOOL:: var_is_introduced ;
var 2..59: aux690:: var_is_introduced ;
var bool: aux691_BOOL:: var_is_introduced ;
var bool: aux692_BOOL:: var_is_introduced ;
var bool: aux693_BOOL:: var_is_introduced ;
var {0,1}: aux693_INTEGER :: var_is_introduced ;
var bool: aux694_BOOL:: var_is_introduced ;
var bool: aux695_BOOL:: var_is_introduced ;
var 4..61: aux696:: var_is_introduced ;
var bool: aux697_BOOL:: var_is_introduced ;
var bool: aux698_BOOL:: var_is_introduced ;
var {0,1}: aux698_INTEGER :: var_is_introduced ;
var bool: aux699_BOOL:: var_is_introduced ;
var bool: aux700_BOOL:: var_is_introduced ;
var 4..61: aux701:: var_is_introduced ;
var bool: aux702_BOOL:: var_is_introduced ;
var bool: aux703_BOOL:: var_is_introduced ;
var bool: aux704_BOOL:: var_is_introduced ;
var {0,1}: aux704_INTEGER :: var_is_introduced ;
var bool: aux705_BOOL:: var_is_introduced ;
var bool: aux706_BOOL:: var_is_introduced ;
var 4..61: aux707:: var_is_introduced ;
var bool: aux708_BOOL:: var_is_introduced ;
var bool: aux709_BOOL:: var_is_introduced ;
var bool: aux710_BOOL:: var_is_introduced ;
var {0,1}: aux710_INTEGER :: var_is_introduced ;
var bool: aux711_BOOL:: var_is_introduced ;
var bool: aux712_BOOL:: var_is_introduced ;
var 3..60: aux713:: var_is_introduced ;
var bool: aux714_BOOL:: var_is_introduced ;
var bool: aux715_BOOL:: var_is_introduced ;
var bool: aux716_BOOL:: var_is_introduced ;
var {0,1}: aux716_INTEGER :: var_is_introduced ;
var bool: aux717_BOOL:: var_is_introduced ;
var bool: aux718_BOOL:: var_is_introduced ;
var 2..59: aux719:: var_is_introduced ;
var bool: aux720_BOOL:: var_is_introduced ;
var bool: aux721_BOOL:: var_is_introduced ;
var bool: aux722_BOOL:: var_is_introduced ;
var {0,1}: aux722_INTEGER :: var_is_introduced ;
var bool: aux723_BOOL:: var_is_introduced ;
var bool: aux724_BOOL:: var_is_introduced ;
var 3..60: aux725:: var_is_introduced ;
var bool: aux726_BOOL:: var_is_introduced ;
var bool: aux727_BOOL:: var_is_introduced ;
var bool: aux728_BOOL:: var_is_introduced ;
var {0,1}: aux728_INTEGER :: var_is_introduced ;
var bool: aux729_BOOL:: var_is_introduced ;
var bool: aux730_BOOL:: var_is_introduced ;
var 2..59: aux731:: var_is_introduced ;
var bool: aux732_BOOL:: var_is_introduced ;
var bool: aux733_BOOL:: var_is_introduced ;
var bool: aux734_BOOL:: var_is_introduced ;
var {0,1}: aux734_INTEGER :: var_is_introduced ;
var bool: aux735_BOOL:: var_is_introduced ;
var bool: aux736_BOOL:: var_is_introduced ;
var 3..60: aux737:: var_is_introduced ;
var bool: aux738_BOOL:: var_is_introduced ;
var bool: aux739_BOOL:: var_is_introduced ;
var bool: aux740_BOOL:: var_is_introduced ;
var {0,1}: aux740_INTEGER :: var_is_introduced ;
var bool: aux741_BOOL:: var_is_introduced ;
var bool: aux742_BOOL:: var_is_introduced ;
var 2..59: aux743:: var_is_introduced ;
var bool: aux744_BOOL:: var_is_introduced ;
var bool: aux745_BOOL:: var_is_introduced ;
var bool: aux746_BOOL:: var_is_introduced ;
var {0,1}: aux746_INTEGER :: var_is_introduced ;
var bool: aux747_BOOL:: var_is_introduced ;
var bool: aux748_BOOL:: var_is_introduced ;
var 2..59: aux749:: var_is_introduced ;
var bool: aux750_BOOL:: var_is_introduced ;
var bool: aux751_BOOL:: var_is_introduced ;
var bool: aux752_BOOL:: var_is_introduced ;
var {0,1}: aux752_INTEGER :: var_is_introduced ;
var bool: aux753_BOOL:: var_is_introduced ;
var bool: aux754_BOOL:: var_is_introduced ;
var 5..62: aux755:: var_is_introduced ;
var bool: aux756_BOOL:: var_is_introduced ;
var bool: aux757_BOOL:: var_is_introduced ;
var bool: aux758_BOOL:: var_is_introduced ;
var {0,1}: aux758_INTEGER :: var_is_introduced ;
var bool: aux759_BOOL:: var_is_introduced ;
var bool: aux760_BOOL:: var_is_introduced ;
var 3..60: aux761:: var_is_introduced ;
var bool: aux762_BOOL:: var_is_introduced ;
var bool: aux763_BOOL:: var_is_introduced ;
var bool: aux764_BOOL:: var_is_introduced ;
var {0,1}: aux764_INTEGER :: var_is_introduced ;
var bool: aux765_BOOL:: var_is_introduced ;
var bool: aux766_BOOL:: var_is_introduced ;
var 4..61: aux767:: var_is_introduced ;
var bool: aux768_BOOL:: var_is_introduced ;
var bool: aux769_BOOL:: var_is_introduced ;
var bool: aux770_BOOL:: var_is_introduced ;
var {0,1}: aux770_INTEGER :: var_is_introduced ;
var bool: aux771_BOOL:: var_is_introduced ;
var bool: aux772_BOOL:: var_is_introduced ;
var 3..60: aux773:: var_is_introduced ;
var bool: aux774_BOOL:: var_is_introduced ;
var bool: aux775_BOOL:: var_is_introduced ;
var bool: aux776_BOOL:: var_is_introduced ;
var {0,1}: aux776_INTEGER :: var_is_introduced ;
var bool: aux777_BOOL:: var_is_introduced ;
var bool: aux778_BOOL:: var_is_introduced ;
var 2..59: aux779:: var_is_introduced ;
var bool: aux780_BOOL:: var_is_introduced ;
var bool: aux781_BOOL:: var_is_introduced ;
var bool: aux782_BOOL:: var_is_introduced ;
var {0,1}: aux782_INTEGER :: var_is_introduced ;
var bool: aux783_BOOL:: var_is_introduced ;
var bool: aux784_BOOL:: var_is_introduced ;
var 1..58: aux785:: var_is_introduced ;
var bool: aux786_BOOL:: var_is_introduced ;
var bool: aux787_BOOL:: var_is_introduced ;
var bool: aux788_BOOL:: var_is_introduced ;
var {0,1}: aux788_INTEGER :: var_is_introduced ;
var bool: aux789_BOOL:: var_is_introduced ;
var bool: aux790_BOOL:: var_is_introduced ;
var 3..60: aux791:: var_is_introduced ;
var bool: aux792_BOOL:: var_is_introduced ;
var bool: aux793_BOOL:: var_is_introduced ;
var bool: aux794_BOOL:: var_is_introduced ;
var {0,1}: aux794_INTEGER :: var_is_introduced ;
var bool: aux795_BOOL:: var_is_introduced ;
var bool: aux796_BOOL:: var_is_introduced ;
var 1..58: aux797:: var_is_introduced ;
var bool: aux798_BOOL:: var_is_introduced ;
var bool: aux799_BOOL:: var_is_introduced ;
var bool: aux800_BOOL:: var_is_introduced ;
var {0,1}: aux800_INTEGER :: var_is_introduced ;
var bool: aux801_BOOL:: var_is_introduced ;
var bool: aux802_BOOL:: var_is_introduced ;
var 4..61: aux803:: var_is_introduced ;
var bool: aux804_BOOL:: var_is_introduced ;
var bool: aux805_BOOL:: var_is_introduced ;
var bool: aux806_BOOL:: var_is_introduced ;
var {0,1}: aux806_INTEGER :: var_is_introduced ;
var bool: aux807_BOOL:: var_is_introduced ;
var bool: aux808_BOOL:: var_is_introduced ;
var 2..59: aux809:: var_is_introduced ;
var bool: aux810_BOOL:: var_is_introduced ;
var bool: aux811_BOOL:: var_is_introduced ;
var bool: aux812_BOOL:: var_is_introduced ;
var {0,1}: aux812_INTEGER :: var_is_introduced ;
var bool: aux813_BOOL:: var_is_introduced ;
var bool: aux814_BOOL:: var_is_introduced ;
var 4..61: aux815:: var_is_introduced ;
var bool: aux816_BOOL:: var_is_introduced ;
var bool: aux817_BOOL:: var_is_introduced ;
var {0,1}: aux817_INTEGER :: var_is_introduced ;
var bool: aux818_BOOL:: var_is_introduced ;
var bool: aux819_BOOL:: var_is_introduced ;
var 4..61: aux820:: var_is_introduced ;
var bool: aux821_BOOL:: var_is_introduced ;
var bool: aux822_BOOL:: var_is_introduced ;
var bool: aux823_BOOL:: var_is_introduced ;
var {0,1}: aux823_INTEGER :: var_is_introduced ;
var bool: aux824_BOOL:: var_is_introduced ;
var bool: aux825_BOOL:: var_is_introduced ;
var 4..61: aux826:: var_is_introduced ;
var bool: aux827_BOOL:: var_is_introduced ;
var bool: aux828_BOOL:: var_is_introduced ;
var bool: aux829_BOOL:: var_is_introduced ;
var {0,1}: aux829_INTEGER :: var_is_introduced ;
var bool: aux830_BOOL:: var_is_introduced ;
var bool: aux831_BOOL:: var_is_introduced ;
var 3..60: aux832:: var_is_introduced ;
var bool: aux833_BOOL:: var_is_introduced ;
var bool: aux834_BOOL:: var_is_introduced ;
var bool: aux835_BOOL:: var_is_introduced ;
var {0,1}: aux835_INTEGER :: var_is_introduced ;
var bool: aux836_BOOL:: var_is_introduced ;
var bool: aux837_BOOL:: var_is_introduced ;
var 2..59: aux838:: var_is_introduced ;
var bool: aux839_BOOL:: var_is_introduced ;
var bool: aux840_BOOL:: var_is_introduced ;
var bool: aux841_BOOL:: var_is_introduced ;
var {0,1}: aux841_INTEGER :: var_is_introduced ;
var bool: aux842_BOOL:: var_is_introduced ;
var bool: aux843_BOOL:: var_is_introduced ;
var 3..60: aux844:: var_is_introduced ;
var bool: aux845_BOOL:: var_is_introduced ;
var bool: aux846_BOOL:: var_is_introduced ;
var bool: aux847_BOOL:: var_is_introduced ;
var {0,1}: aux847_INTEGER :: var_is_introduced ;
var bool: aux848_BOOL:: var_is_introduced ;
var bool: aux849_BOOL:: var_is_introduced ;
var 2..59: aux850:: var_is_introduced ;
var bool: aux851_BOOL:: var_is_introduced ;
var bool: aux852_BOOL:: var_is_introduced ;
var bool: aux853_BOOL:: var_is_introduced ;
var {0,1}: aux853_INTEGER :: var_is_introduced ;
var bool: aux854_BOOL:: var_is_introduced ;
var bool: aux855_BOOL:: var_is_introduced ;
var 3..60: aux856:: var_is_introduced ;
var bool: aux857_BOOL:: var_is_introduced ;
var bool: aux858_BOOL:: var_is_introduced ;
var bool: aux859_BOOL:: var_is_introduced ;
var {0,1}: aux859_INTEGER :: var_is_introduced ;
var bool: aux860_BOOL:: var_is_introduced ;
var bool: aux861_BOOL:: var_is_introduced ;
var 2..59: aux862:: var_is_introduced ;
var bool: aux863_BOOL:: var_is_introduced ;
var bool: aux864_BOOL:: var_is_introduced ;
var bool: aux865_BOOL:: var_is_introduced ;
var {0,1}: aux865_INTEGER :: var_is_introduced ;
var bool: aux866_BOOL:: var_is_introduced ;
var bool: aux867_BOOL:: var_is_introduced ;
var 2..59: aux868:: var_is_introduced ;
var bool: aux869_BOOL:: var_is_introduced ;
var bool: aux870_BOOL:: var_is_introduced ;
var bool: aux871_BOOL:: var_is_introduced ;
var {0,1}: aux871_INTEGER :: var_is_introduced ;
var bool: aux872_BOOL:: var_is_introduced ;
var bool: aux873_BOOL:: var_is_introduced ;
var 5..62: aux874:: var_is_introduced ;
var bool: aux875_BOOL:: var_is_introduced ;
var bool: aux876_BOOL:: var_is_introduced ;
var bool: aux877_BOOL:: var_is_introduced ;
var {0,1}: aux877_INTEGER :: var_is_introduced ;
var bool: aux878_BOOL:: var_is_introduced ;
var bool: aux879_BOOL:: var_is_introduced ;
var 3..60: aux880:: var_is_introduced ;
var bool: aux881_BOOL:: var_is_introduced ;
var bool: aux882_BOOL:: var_is_introduced ;
var bool: aux883_BOOL:: var_is_introduced ;
var {0,1}: aux883_INTEGER :: var_is_introduced ;
var bool: aux884_BOOL:: var_is_introduced ;
var bool: aux885_BOOL:: var_is_introduced ;
var 4..61: aux886:: var_is_introduced ;
var bool: aux887_BOOL:: var_is_introduced ;
var bool: aux888_BOOL:: var_is_introduced ;
var bool: aux889_BOOL:: var_is_introduced ;
var {0,1}: aux889_INTEGER :: var_is_introduced ;
var bool: aux890_BOOL:: var_is_introduced ;
var bool: aux891_BOOL:: var_is_introduced ;
var 3..60: aux892:: var_is_introduced ;
var bool: aux893_BOOL:: var_is_introduced ;
var bool: aux894_BOOL:: var_is_introduced ;
var bool: aux895_BOOL:: var_is_introduced ;
var {0,1}: aux895_INTEGER :: var_is_introduced ;
var bool: aux896_BOOL:: var_is_introduced ;
var bool: aux897_BOOL:: var_is_introduced ;
var 2..59: aux898:: var_is_introduced ;
var bool: aux899_BOOL:: var_is_introduced ;
var bool: aux900_BOOL:: var_is_introduced ;
var bool: aux901_BOOL:: var_is_introduced ;
var {0,1}: aux901_INTEGER :: var_is_introduced ;
var bool: aux902_BOOL:: var_is_introduced ;
var bool: aux903_BOOL:: var_is_introduced ;
var 1..58: aux904:: var_is_introduced ;
var bool: aux905_BOOL:: var_is_introduced ;
var bool: aux906_BOOL:: var_is_introduced ;
var bool: aux907_BOOL:: var_is_introduced ;
var {0,1}: aux907_INTEGER :: var_is_introduced ;
var bool: aux908_BOOL:: var_is_introduced ;
var bool: aux909_BOOL:: var_is_introduced ;
var 3..60: aux910:: var_is_introduced ;
var bool: aux911_BOOL:: var_is_introduced ;
var bool: aux912_BOOL:: var_is_introduced ;
var bool: aux913_BOOL:: var_is_introduced ;
var {0,1}: aux913_INTEGER :: var_is_introduced ;
var bool: aux914_BOOL:: var_is_introduced ;
var bool: aux915_BOOL:: var_is_introduced ;
var 4..61: aux916:: var_is_introduced ;
var bool: aux917_BOOL:: var_is_introduced ;
var bool: aux918_BOOL:: var_is_introduced ;
var bool: aux919_BOOL:: var_is_introduced ;
var {0,1}: aux919_INTEGER :: var_is_introduced ;
var bool: aux920_BOOL:: var_is_introduced ;
var bool: aux921_BOOL:: var_is_introduced ;
var 1..58: aux922:: var_is_introduced ;
var bool: aux923_BOOL:: var_is_introduced ;
var bool: aux924_BOOL:: var_is_introduced ;
var bool: aux925_BOOL:: var_is_introduced ;
var {0,1}: aux925_INTEGER :: var_is_introduced ;
var bool: aux926_BOOL:: var_is_introduced ;
var bool: aux927_BOOL:: var_is_introduced ;
var 2..59: aux928:: var_is_introduced ;
var bool: aux929_BOOL:: var_is_introduced ;
var bool: aux930_BOOL:: var_is_introduced ;
var bool: aux931_BOOL:: var_is_introduced ;
var {0,1}: aux931_INTEGER :: var_is_introduced ;
var bool: aux932_BOOL:: var_is_introduced ;
var bool: aux933_BOOL:: var_is_introduced ;
var 2..59: aux934:: var_is_introduced ;
var bool: aux935_BOOL:: var_is_introduced ;
var bool: aux936_BOOL:: var_is_introduced ;
var {0,1}: aux936_INTEGER :: var_is_introduced ;
var bool: aux937_BOOL:: var_is_introduced ;
var bool: aux938_BOOL:: var_is_introduced ;
var 4..61: aux939:: var_is_introduced ;
var bool: aux940_BOOL:: var_is_introduced ;
var bool: aux941_BOOL:: var_is_introduced ;
var bool: aux942_BOOL:: var_is_introduced ;
var {0,1}: aux942_INTEGER :: var_is_introduced ;
var bool: aux943_BOOL:: var_is_introduced ;
var bool: aux944_BOOL:: var_is_introduced ;
var 4..61: aux945:: var_is_introduced ;
var bool: aux946_BOOL:: var_is_introduced ;
var bool: aux947_BOOL:: var_is_introduced ;
var bool: aux948_BOOL:: var_is_introduced ;
var {0,1}: aux948_INTEGER :: var_is_introduced ;
var bool: aux949_BOOL:: var_is_introduced ;
var bool: aux950_BOOL:: var_is_introduced ;
var 3..60: aux951:: var_is_introduced ;
var bool: aux952_BOOL:: var_is_introduced ;
var bool: aux953_BOOL:: var_is_introduced ;
var bool: aux954_BOOL:: var_is_introduced ;
var {0,1}: aux954_INTEGER :: var_is_introduced ;
var bool: aux955_BOOL:: var_is_introduced ;
var bool: aux956_BOOL:: var_is_introduced ;
var 3..60: aux957:: var_is_introduced ;
var bool: aux958_BOOL:: var_is_introduced ;
var bool: aux959_BOOL:: var_is_introduced ;
var bool: aux960_BOOL:: var_is_introduced ;
var {0,1}: aux960_INTEGER :: var_is_introduced ;
var bool: aux961_BOOL:: var_is_introduced ;
var bool: aux962_BOOL:: var_is_introduced ;
var 2..59: aux963:: var_is_introduced ;
var bool: aux964_BOOL:: var_is_introduced ;
var bool: aux965_BOOL:: var_is_introduced ;
var bool: aux966_BOOL:: var_is_introduced ;
var {0,1}: aux966_INTEGER :: var_is_introduced ;
var bool: aux967_BOOL:: var_is_introduced ;
var bool: aux968_BOOL:: var_is_introduced ;
var 3..60: aux969:: var_is_introduced ;
var bool: aux970_BOOL:: var_is_introduced ;
var bool: aux971_BOOL:: var_is_introduced ;
var bool: aux972_BOOL:: var_is_introduced ;
var {0,1}: aux972_INTEGER :: var_is_introduced ;
var bool: aux973_BOOL:: var_is_introduced ;
var bool: aux974_BOOL:: var_is_introduced ;
var 2..59: aux975:: var_is_introduced ;
var bool: aux976_BOOL:: var_is_introduced ;
var bool: aux977_BOOL:: var_is_introduced ;
var bool: aux978_BOOL:: var_is_introduced ;
var {0,1}: aux978_INTEGER :: var_is_introduced ;
var bool: aux979_BOOL:: var_is_introduced ;
var bool: aux980_BOOL:: var_is_introduced ;
var 2..59: aux981:: var_is_introduced ;
var bool: aux982_BOOL:: var_is_introduced ;
var bool: aux983_BOOL:: var_is_introduced ;
var bool: aux984_BOOL:: var_is_introduced ;
var {0,1}: aux984_INTEGER :: var_is_introduced ;
var bool: aux985_BOOL:: var_is_introduced ;
var bool: aux986_BOOL:: var_is_introduced ;
var 3..60: aux987:: var_is_introduced ;
var bool: aux988_BOOL:: var_is_introduced ;
var bool: aux989_BOOL:: var_is_introduced ;
var bool: aux990_BOOL:: var_is_introduced ;
var {0,1}: aux990_INTEGER :: var_is_introduced ;
var bool: aux991_BOOL:: var_is_introduced ;
var bool: aux992_BOOL:: var_is_introduced ;
var 5..62: aux993:: var_is_introduced ;
var bool: aux994_BOOL:: var_is_introduced ;
var bool: aux995_BOOL:: var_is_introduced ;
var bool: aux996_BOOL:: var_is_introduced ;
var {0,1}: aux996_INTEGER :: var_is_introduced ;
var bool: aux997_BOOL:: var_is_introduced ;
var bool: aux998_BOOL:: var_is_introduced ;
var 4..61: aux999:: var_is_introduced ;
var bool: aux1000_BOOL:: var_is_introduced ;
var bool: aux1001_BOOL:: var_is_introduced ;
var bool: aux1002_BOOL:: var_is_introduced ;
var {0,1}: aux1002_INTEGER :: var_is_introduced ;
var bool: aux1003_BOOL:: var_is_introduced ;
var bool: aux1004_BOOL:: var_is_introduced ;
var 3..60: aux1005:: var_is_introduced ;
var bool: aux1006_BOOL:: var_is_introduced ;
var bool: aux1007_BOOL:: var_is_introduced ;
var bool: aux1008_BOOL:: var_is_introduced ;
var {0,1}: aux1008_INTEGER :: var_is_introduced ;
var bool: aux1009_BOOL:: var_is_introduced ;
var bool: aux1010_BOOL:: var_is_introduced ;
var 2..59: aux1011:: var_is_introduced ;
var bool: aux1012_BOOL:: var_is_introduced ;
var bool: aux1013_BOOL:: var_is_introduced ;
var bool: aux1014_BOOL:: var_is_introduced ;
var {0,1}: aux1014_INTEGER :: var_is_introduced ;
var bool: aux1015_BOOL:: var_is_introduced ;
var bool: aux1016_BOOL:: var_is_introduced ;
var 1..58: aux1017:: var_is_introduced ;
var bool: aux1018_BOOL:: var_is_introduced ;
var bool: aux1019_BOOL:: var_is_introduced ;
var bool: aux1020_BOOL:: var_is_introduced ;
var {0,1}: aux1020_INTEGER :: var_is_introduced ;
var bool: aux1021_BOOL:: var_is_introduced ;
var bool: aux1022_BOOL:: var_is_introduced ;
var 3..60: aux1023:: var_is_introduced ;
var bool: aux1024_BOOL:: var_is_introduced ;
var bool: aux1025_BOOL:: var_is_introduced ;
var bool: aux1026_BOOL:: var_is_introduced ;
var {0,1}: aux1026_INTEGER :: var_is_introduced ;
var bool: aux1027_BOOL:: var_is_introduced ;
var bool: aux1028_BOOL:: var_is_introduced ;
var 1..58: aux1029:: var_is_introduced ;
var bool: aux1030_BOOL:: var_is_introduced ;
var bool: aux1031_BOOL:: var_is_introduced ;
var bool: aux1032_BOOL:: var_is_introduced ;
var {0,1}: aux1032_INTEGER :: var_is_introduced ;
var bool: aux1033_BOOL:: var_is_introduced ;
var bool: aux1034_BOOL:: var_is_introduced ;
var 4..61: aux1035:: var_is_introduced ;
var bool: aux1036_BOOL:: var_is_introduced ;
var bool: aux1037_BOOL:: var_is_introduced ;
var bool: aux1038_BOOL:: var_is_introduced ;
var {0,1}: aux1038_INTEGER :: var_is_introduced ;
var bool: aux1039_BOOL:: var_is_introduced ;
var bool: aux1040_BOOL:: var_is_introduced ;
var 4..61: aux1041:: var_is_introduced ;
var bool: aux1042_BOOL:: var_is_introduced ;
var bool: aux1043_BOOL:: var_is_introduced ;
var bool: aux1044_BOOL:: var_is_introduced ;
var {0,1}: aux1044_INTEGER :: var_is_introduced ;
var bool: aux1045_BOOL:: var_is_introduced ;
var bool: aux1046_BOOL:: var_is_introduced ;
var 2..59: aux1047:: var_is_introduced ;
var bool: aux1048_BOOL:: var_is_introduced ;
var bool: aux1049_BOOL:: var_is_introduced ;
var bool: aux1050_BOOL:: var_is_introduced ;
var {0,1}: aux1050_INTEGER :: var_is_introduced ;
var bool: aux1051_BOOL:: var_is_introduced ;
var bool: aux1052_BOOL:: var_is_introduced ;
var 4..61: aux1053:: var_is_introduced ;
var bool: aux1054_BOOL:: var_is_introduced ;
var bool: aux1055_BOOL:: var_is_introduced ;
var {0,1}: aux1055_INTEGER :: var_is_introduced ;
var bool: aux1056_BOOL:: var_is_introduced ;
var bool: aux1057_BOOL:: var_is_introduced ;
var 4..61: aux1058:: var_is_introduced ;
var bool: aux1059_BOOL:: var_is_introduced ;
var bool: aux1060_BOOL:: var_is_introduced ;
var bool: aux1061_BOOL:: var_is_introduced ;
var {0,1}: aux1061_INTEGER :: var_is_introduced ;
var bool: aux1062_BOOL:: var_is_introduced ;
var bool: aux1063_BOOL:: var_is_introduced ;
var 3..60: aux1064:: var_is_introduced ;
var bool: aux1065_BOOL:: var_is_introduced ;
var bool: aux1066_BOOL:: var_is_introduced ;
var bool: aux1067_BOOL:: var_is_introduced ;
var {0,1}: aux1067_INTEGER :: var_is_introduced ;
var bool: aux1068_BOOL:: var_is_introduced ;
var bool: aux1069_BOOL:: var_is_introduced ;
var 2..59: aux1070:: var_is_introduced ;
var bool: aux1071_BOOL:: var_is_introduced ;
var bool: aux1072_BOOL:: var_is_introduced ;
var bool: aux1073_BOOL:: var_is_introduced ;
var {0,1}: aux1073_INTEGER :: var_is_introduced ;
var bool: aux1074_BOOL:: var_is_introduced ;
var bool: aux1075_BOOL:: var_is_introduced ;
var 3..60: aux1076:: var_is_introduced ;
var bool: aux1077_BOOL:: var_is_introduced ;
var bool: aux1078_BOOL:: var_is_introduced ;
var bool: aux1079_BOOL:: var_is_introduced ;
var {0,1}: aux1079_INTEGER :: var_is_introduced ;
var bool: aux1080_BOOL:: var_is_introduced ;
var bool: aux1081_BOOL:: var_is_introduced ;
var 2..59: aux1082:: var_is_introduced ;
var bool: aux1083_BOOL:: var_is_introduced ;
var bool: aux1084_BOOL:: var_is_introduced ;
var bool: aux1085_BOOL:: var_is_introduced ;
var {0,1}: aux1085_INTEGER :: var_is_introduced ;
var bool: aux1086_BOOL:: var_is_introduced ;
var bool: aux1087_BOOL:: var_is_introduced ;
var 3..60: aux1088:: var_is_introduced ;
var bool: aux1089_BOOL:: var_is_introduced ;
var bool: aux1090_BOOL:: var_is_introduced ;
var bool: aux1091_BOOL:: var_is_introduced ;
var {0,1}: aux1091_INTEGER :: var_is_introduced ;
var bool: aux1092_BOOL:: var_is_introduced ;
var bool: aux1093_BOOL:: var_is_introduced ;
var 2..59: aux1094:: var_is_introduced ;
var bool: aux1095_BOOL:: var_is_introduced ;
var bool: aux1096_BOOL:: var_is_introduced ;
var bool: aux1097_BOOL:: var_is_introduced ;
var {0,1}: aux1097_INTEGER :: var_is_introduced ;
var bool: aux1098_BOOL:: var_is_introduced ;
var bool: aux1099_BOOL:: var_is_introduced ;
var 2..59: aux1100:: var_is_introduced ;
var bool: aux1101_BOOL:: var_is_introduced ;
var bool: aux1102_BOOL:: var_is_introduced ;
var bool: aux1103_BOOL:: var_is_introduced ;
var {0,1}: aux1103_INTEGER :: var_is_introduced ;
var bool: aux1104_BOOL:: var_is_introduced ;
var bool: aux1105_BOOL:: var_is_introduced ;
var 3..60: aux1106:: var_is_introduced ;
var bool: aux1107_BOOL:: var_is_introduced ;
var bool: aux1108_BOOL:: var_is_introduced ;
var bool: aux1109_BOOL:: var_is_introduced ;
var {0,1}: aux1109_INTEGER :: var_is_introduced ;
var bool: aux1110_BOOL:: var_is_introduced ;
var bool: aux1111_BOOL:: var_is_introduced ;
var 5..62: aux1112:: var_is_introduced ;
var bool: aux1113_BOOL:: var_is_introduced ;
var bool: aux1114_BOOL:: var_is_introduced ;
var bool: aux1115_BOOL:: var_is_introduced ;
var {0,1}: aux1115_INTEGER :: var_is_introduced ;
var bool: aux1116_BOOL:: var_is_introduced ;
var bool: aux1117_BOOL:: var_is_introduced ;
var 4..61: aux1118:: var_is_introduced ;
var bool: aux1119_BOOL:: var_is_introduced ;
var bool: aux1120_BOOL:: var_is_introduced ;
var bool: aux1121_BOOL:: var_is_introduced ;
var {0,1}: aux1121_INTEGER :: var_is_introduced ;
var bool: aux1122_BOOL:: var_is_introduced ;
var bool: aux1123_BOOL:: var_is_introduced ;
var 3..60: aux1124:: var_is_introduced ;
var bool: aux1125_BOOL:: var_is_introduced ;
var bool: aux1126_BOOL:: var_is_introduced ;
var bool: aux1127_BOOL:: var_is_introduced ;
var {0,1}: aux1127_INTEGER :: var_is_introduced ;
var bool: aux1128_BOOL:: var_is_introduced ;
var bool: aux1129_BOOL:: var_is_introduced ;
var 2..59: aux1130:: var_is_introduced ;
var bool: aux1131_BOOL:: var_is_introduced ;
var bool: aux1132_BOOL:: var_is_introduced ;
var bool: aux1133_BOOL:: var_is_introduced ;
var {0,1}: aux1133_INTEGER :: var_is_introduced ;
var bool: aux1134_BOOL:: var_is_introduced ;
var bool: aux1135_BOOL:: var_is_introduced ;
var 1..58: aux1136:: var_is_introduced ;
var bool: aux1137_BOOL:: var_is_introduced ;
var bool: aux1138_BOOL:: var_is_introduced ;
var bool: aux1139_BOOL:: var_is_introduced ;
var {0,1}: aux1139_INTEGER :: var_is_introduced ;
var bool: aux1140_BOOL:: var_is_introduced ;
var bool: aux1141_BOOL:: var_is_introduced ;
var 3..60: aux1142:: var_is_introduced ;
var bool: aux1143_BOOL:: var_is_introduced ;
var bool: aux1144_BOOL:: var_is_introduced ;
var bool: aux1145_BOOL:: var_is_introduced ;
var {0,1}: aux1145_INTEGER :: var_is_introduced ;
var bool: aux1146_BOOL:: var_is_introduced ;
var bool: aux1147_BOOL:: var_is_introduced ;
var 1..58: aux1148:: var_is_introduced ;
var bool: aux1149_BOOL:: var_is_introduced ;
var bool: aux1150_BOOL:: var_is_introduced ;
var bool: aux1151_BOOL:: var_is_introduced ;
var {0,1}: aux1151_INTEGER :: var_is_introduced ;
var bool: aux1152_BOOL:: var_is_introduced ;
var bool: aux1153_BOOL:: var_is_introduced ;
var 4..61: aux1154:: var_is_introduced ;
var bool: aux1155_BOOL:: var_is_introduced ;
var bool: aux1156_BOOL:: var_is_introduced ;
var bool: aux1157_BOOL:: var_is_introduced ;
var {0,1}: aux1157_INTEGER :: var_is_introduced ;
var bool: aux1158_BOOL:: var_is_introduced ;
var bool: aux1159_BOOL:: var_is_introduced ;
var 4..61: aux1160:: var_is_introduced ;
var bool: aux1161_BOOL:: var_is_introduced ;
var bool: aux1162_BOOL:: var_is_introduced ;
var bool: aux1163_BOOL:: var_is_introduced ;
var {0,1}: aux1163_INTEGER :: var_is_introduced ;
var bool: aux1164_BOOL:: var_is_introduced ;
var bool: aux1165_BOOL:: var_is_introduced ;
var 2..59: aux1166:: var_is_introduced ;
var bool: aux1167_BOOL:: var_is_introduced ;
var bool: aux1168_BOOL:: var_is_introduced ;
var bool: aux1169_BOOL:: var_is_introduced ;
var {0,1}: aux1169_INTEGER :: var_is_introduced ;
var bool: aux1170_BOOL:: var_is_introduced ;
var bool: aux1171_BOOL:: var_is_introduced ;
var 2..59: aux1172:: var_is_introduced ;
var bool: aux1173_BOOL:: var_is_introduced ;
var bool: aux1174_BOOL:: var_is_introduced ;
var {0,1}: aux1174_INTEGER :: var_is_introduced ;
var bool: aux1175_BOOL:: var_is_introduced ;
var bool: aux1176_BOOL:: var_is_introduced ;
var 4..61: aux1177:: var_is_introduced ;
var bool: aux1178_BOOL:: var_is_introduced ;
var bool: aux1179_BOOL:: var_is_introduced ;
var bool: aux1180_BOOL:: var_is_introduced ;
var {0,1}: aux1180_INTEGER :: var_is_introduced ;
var bool: aux1181_BOOL:: var_is_introduced ;
var bool: aux1182_BOOL:: var_is_introduced ;
var 4..61: aux1183:: var_is_introduced ;
var bool: aux1184_BOOL:: var_is_introduced ;
var bool: aux1185_BOOL:: var_is_introduced ;
var bool: aux1186_BOOL:: var_is_introduced ;
var {0,1}: aux1186_INTEGER :: var_is_introduced ;
var bool: aux1187_BOOL:: var_is_introduced ;
var bool: aux1188_BOOL:: var_is_introduced ;
var 3..60: aux1189:: var_is_introduced ;
var bool: aux1190_BOOL:: var_is_introduced ;
var bool: aux1191_BOOL:: var_is_introduced ;
var bool: aux1192_BOOL:: var_is_introduced ;
var {0,1}: aux1192_INTEGER :: var_is_introduced ;
var bool: aux1193_BOOL:: var_is_introduced ;
var bool: aux1194_BOOL:: var_is_introduced ;
var 2..59: aux1195:: var_is_introduced ;
var bool: aux1196_BOOL:: var_is_introduced ;
var bool: aux1197_BOOL:: var_is_introduced ;
var bool: aux1198_BOOL:: var_is_introduced ;
var {0,1}: aux1198_INTEGER :: var_is_introduced ;
var bool: aux1199_BOOL:: var_is_introduced ;
var bool: aux1200_BOOL:: var_is_introduced ;
var 3..60: aux1201:: var_is_introduced ;
var bool: aux1202_BOOL:: var_is_introduced ;
var bool: aux1203_BOOL:: var_is_introduced ;
var bool: aux1204_BOOL:: var_is_introduced ;
var {0,1}: aux1204_INTEGER :: var_is_introduced ;
var bool: aux1205_BOOL:: var_is_introduced ;
var bool: aux1206_BOOL:: var_is_introduced ;
var 3..60: aux1207:: var_is_introduced ;
var bool: aux1208_BOOL:: var_is_introduced ;
var bool: aux1209_BOOL:: var_is_introduced ;
var bool: aux1210_BOOL:: var_is_introduced ;
var {0,1}: aux1210_INTEGER :: var_is_introduced ;
var bool: aux1211_BOOL:: var_is_introduced ;
var bool: aux1212_BOOL:: var_is_introduced ;
var 2..59: aux1213:: var_is_introduced ;
var bool: aux1214_BOOL:: var_is_introduced ;
var bool: aux1215_BOOL:: var_is_introduced ;
var bool: aux1216_BOOL:: var_is_introduced ;
var {0,1}: aux1216_INTEGER :: var_is_introduced ;
var bool: aux1217_BOOL:: var_is_introduced ;
var bool: aux1218_BOOL:: var_is_introduced ;
var 2..59: aux1219:: var_is_introduced ;
var bool: aux1220_BOOL:: var_is_introduced ;
var bool: aux1221_BOOL:: var_is_introduced ;
var bool: aux1222_BOOL:: var_is_introduced ;
var {0,1}: aux1222_INTEGER :: var_is_introduced ;
var bool: aux1223_BOOL:: var_is_introduced ;
var bool: aux1224_BOOL:: var_is_introduced ;
var 3..60: aux1225:: var_is_introduced ;
var bool: aux1226_BOOL:: var_is_introduced ;
var bool: aux1227_BOOL:: var_is_introduced ;
var bool: aux1228_BOOL:: var_is_introduced ;
var {0,1}: aux1228_INTEGER :: var_is_introduced ;
var bool: aux1229_BOOL:: var_is_introduced ;
var bool: aux1230_BOOL:: var_is_introduced ;
var 5..62: aux1231:: var_is_introduced ;
var bool: aux1232_BOOL:: var_is_introduced ;
var bool: aux1233_BOOL:: var_is_introduced ;
var bool: aux1234_BOOL:: var_is_introduced ;
var {0,1}: aux1234_INTEGER :: var_is_introduced ;
var bool: aux1235_BOOL:: var_is_introduced ;
var bool: aux1236_BOOL:: var_is_introduced ;
var 4..61: aux1237:: var_is_introduced ;
var bool: aux1238_BOOL:: var_is_introduced ;
var bool: aux1239_BOOL:: var_is_introduced ;
var bool: aux1240_BOOL:: var_is_introduced ;
var {0,1}: aux1240_INTEGER :: var_is_introduced ;
var bool: aux1241_BOOL:: var_is_introduced ;
var bool: aux1242_BOOL:: var_is_introduced ;
var 3..60: aux1243:: var_is_introduced ;
var bool: aux1244_BOOL:: var_is_introduced ;
var bool: aux1245_BOOL:: var_is_introduced ;
var bool: aux1246_BOOL:: var_is_introduced ;
var {0,1}: aux1246_INTEGER :: var_is_introduced ;
var bool: aux1247_BOOL:: var_is_introduced ;
var bool: aux1248_BOOL:: var_is_introduced ;
var 2..59: aux1249:: var_is_introduced ;
var bool: aux1250_BOOL:: var_is_introduced ;
var bool: aux1251_BOOL:: var_is_introduced ;
var bool: aux1252_BOOL:: var_is_introduced ;
var {0,1}: aux1252_INTEGER :: var_is_introduced ;
var bool: aux1253_BOOL:: var_is_introduced ;
var bool: aux1254_BOOL:: var_is_introduced ;
var 1..58: aux1255:: var_is_introduced ;
var bool: aux1256_BOOL:: var_is_introduced ;
var bool: aux1257_BOOL:: var_is_introduced ;
var bool: aux1258_BOOL:: var_is_introduced ;
var {0,1}: aux1258_INTEGER :: var_is_introduced ;
var bool: aux1259_BOOL:: var_is_introduced ;
var bool: aux1260_BOOL:: var_is_introduced ;
var 3..60: aux1261:: var_is_introduced ;
var bool: aux1262_BOOL:: var_is_introduced ;
var bool: aux1263_BOOL:: var_is_introduced ;
var bool: aux1264_BOOL:: var_is_introduced ;
var {0,1}: aux1264_INTEGER :: var_is_introduced ;
var bool: aux1265_BOOL:: var_is_introduced ;
var bool: aux1266_BOOL:: var_is_introduced ;
var 1..58: aux1267:: var_is_introduced ;
var bool: aux1268_BOOL:: var_is_introduced ;
var bool: aux1269_BOOL:: var_is_introduced ;
var bool: aux1270_BOOL:: var_is_introduced ;
var {0,1}: aux1270_INTEGER :: var_is_introduced ;
var bool: aux1271_BOOL:: var_is_introduced ;
var bool: aux1272_BOOL:: var_is_introduced ;
var 4..61: aux1273:: var_is_introduced ;
var bool: aux1274_BOOL:: var_is_introduced ;
var bool: aux1275_BOOL:: var_is_introduced ;
var bool: aux1276_BOOL:: var_is_introduced ;
var {0,1}: aux1276_INTEGER :: var_is_introduced ;
var bool: aux1277_BOOL:: var_is_introduced ;
var bool: aux1278_BOOL:: var_is_introduced ;
var 4..61: aux1279:: var_is_introduced ;
var bool: aux1280_BOOL:: var_is_introduced ;
var bool: aux1281_BOOL:: var_is_introduced ;
var bool: aux1282_BOOL:: var_is_introduced ;
var {0,1}: aux1282_INTEGER :: var_is_introduced ;
var bool: aux1283_BOOL:: var_is_introduced ;
var bool: aux1284_BOOL:: var_is_introduced ;
var 2..59: aux1285:: var_is_introduced ;
var bool: aux1286_BOOL:: var_is_introduced ;
var bool: aux1287_BOOL:: var_is_introduced ;
var bool: aux1288_BOOL:: var_is_introduced ;
var {0,1}: aux1288_INTEGER :: var_is_introduced ;
var bool: aux1289_BOOL:: var_is_introduced ;
var bool: aux1290_BOOL:: var_is_introduced ;
var 3..60: aux1291:: var_is_introduced ;
var bool: aux1292_BOOL:: var_is_introduced ;
var bool: aux1293_BOOL:: var_is_introduced ;
var {0,1}: aux1293_INTEGER :: var_is_introduced ;
var bool: aux1294_BOOL:: var_is_introduced ;
var bool: aux1295_BOOL:: var_is_introduced ;
var 4..61: aux1296:: var_is_introduced ;
var bool: aux1297_BOOL:: var_is_introduced ;
var bool: aux1298_BOOL:: var_is_introduced ;
var bool: aux1299_BOOL:: var_is_introduced ;
var {0,1}: aux1299_INTEGER :: var_is_introduced ;
var bool: aux1300_BOOL:: var_is_introduced ;
var bool: aux1301_BOOL:: var_is_introduced ;
var 4..61: aux1302:: var_is_introduced ;
var bool: aux1303_BOOL:: var_is_introduced ;
var bool: aux1304_BOOL:: var_is_introduced ;
var bool: aux1305_BOOL:: var_is_introduced ;
var {0,1}: aux1305_INTEGER :: var_is_introduced ;
var bool: aux1306_BOOL:: var_is_introduced ;
var bool: aux1307_BOOL:: var_is_introduced ;
var 2..59: aux1308:: var_is_introduced ;
var bool: aux1309_BOOL:: var_is_introduced ;
var bool: aux1310_BOOL:: var_is_introduced ;
var bool: aux1311_BOOL:: var_is_introduced ;
var {0,1}: aux1311_INTEGER :: var_is_introduced ;
var bool: aux1312_BOOL:: var_is_introduced ;
var bool: aux1313_BOOL:: var_is_introduced ;
var 3..60: aux1314:: var_is_introduced ;
var bool: aux1315_BOOL:: var_is_introduced ;
var bool: aux1316_BOOL:: var_is_introduced ;
var bool: aux1317_BOOL:: var_is_introduced ;
var {0,1}: aux1317_INTEGER :: var_is_introduced ;
var bool: aux1318_BOOL:: var_is_introduced ;
var bool: aux1319_BOOL:: var_is_introduced ;
var 2..59: aux1320:: var_is_introduced ;
var bool: aux1321_BOOL:: var_is_introduced ;
var bool: aux1322_BOOL:: var_is_introduced ;
var bool: aux1323_BOOL:: var_is_introduced ;
var {0,1}: aux1323_INTEGER :: var_is_introduced ;
var bool: aux1324_BOOL:: var_is_introduced ;
var bool: aux1325_BOOL:: var_is_introduced ;
var 3..60: aux1326:: var_is_introduced ;
var bool: aux1327_BOOL:: var_is_introduced ;
var bool: aux1328_BOOL:: var_is_introduced ;
var bool: aux1329_BOOL:: var_is_introduced ;
var {0,1}: aux1329_INTEGER :: var_is_introduced ;
var bool: aux1330_BOOL:: var_is_introduced ;
var bool: aux1331_BOOL:: var_is_introduced ;
var 2..59: aux1332:: var_is_introduced ;
var bool: aux1333_BOOL:: var_is_introduced ;
var bool: aux1334_BOOL:: var_is_introduced ;
var bool: aux1335_BOOL:: var_is_introduced ;
var {0,1}: aux1335_INTEGER :: var_is_introduced ;
var bool: aux1336_BOOL:: var_is_introduced ;
var bool: aux1337_BOOL:: var_is_introduced ;
var 2..59: aux1338:: var_is_introduced ;
var bool: aux1339_BOOL:: var_is_introduced ;
var bool: aux1340_BOOL:: var_is_introduced ;
var bool: aux1341_BOOL:: var_is_introduced ;
var {0,1}: aux1341_INTEGER :: var_is_introduced ;
var bool: aux1342_BOOL:: var_is_introduced ;
var bool: aux1343_BOOL:: var_is_introduced ;
var 3..60: aux1344:: var_is_introduced ;
var bool: aux1345_BOOL:: var_is_introduced ;
var bool: aux1346_BOOL:: var_is_introduced ;
var bool: aux1347_BOOL:: var_is_introduced ;
var {0,1}: aux1347_INTEGER :: var_is_introduced ;
var bool: aux1348_BOOL:: var_is_introduced ;
var bool: aux1349_BOOL:: var_is_introduced ;
var 5..62: aux1350:: var_is_introduced ;
var bool: aux1351_BOOL:: var_is_introduced ;
var bool: aux1352_BOOL:: var_is_introduced ;
var bool: aux1353_BOOL:: var_is_introduced ;
var {0,1}: aux1353_INTEGER :: var_is_introduced ;
var bool: aux1354_BOOL:: var_is_introduced ;
var bool: aux1355_BOOL:: var_is_introduced ;
var 4..61: aux1356:: var_is_introduced ;
var bool: aux1357_BOOL:: var_is_introduced ;
var bool: aux1358_BOOL:: var_is_introduced ;
var bool: aux1359_BOOL:: var_is_introduced ;
var {0,1}: aux1359_INTEGER :: var_is_introduced ;
var bool: aux1360_BOOL:: var_is_introduced ;
var bool: aux1361_BOOL:: var_is_introduced ;
var 3..60: aux1362:: var_is_introduced ;
var bool: aux1363_BOOL:: var_is_introduced ;
var bool: aux1364_BOOL:: var_is_introduced ;
var bool: aux1365_BOOL:: var_is_introduced ;
var {0,1}: aux1365_INTEGER :: var_is_introduced ;
var bool: aux1366_BOOL:: var_is_introduced ;
var bool: aux1367_BOOL:: var_is_introduced ;
var 2..59: aux1368:: var_is_introduced ;
var bool: aux1369_BOOL:: var_is_introduced ;
var bool: aux1370_BOOL:: var_is_introduced ;
var bool: aux1371_BOOL:: var_is_introduced ;
var {0,1}: aux1371_INTEGER :: var_is_introduced ;
var bool: aux1372_BOOL:: var_is_introduced ;
var bool: aux1373_BOOL:: var_is_introduced ;
var 1..58: aux1374:: var_is_introduced ;
var bool: aux1375_BOOL:: var_is_introduced ;
var bool: aux1376_BOOL:: var_is_introduced ;
var bool: aux1377_BOOL:: var_is_introduced ;
var {0,1}: aux1377_INTEGER :: var_is_introduced ;
var bool: aux1378_BOOL:: var_is_introduced ;
var bool: aux1379_BOOL:: var_is_introduced ;
var 3..60: aux1380:: var_is_introduced ;
var bool: aux1381_BOOL:: var_is_introduced ;
var bool: aux1382_BOOL:: var_is_introduced ;
var bool: aux1383_BOOL:: var_is_introduced ;
var {0,1}: aux1383_INTEGER :: var_is_introduced ;
var bool: aux1384_BOOL:: var_is_introduced ;
var bool: aux1385_BOOL:: var_is_introduced ;
var 1..58: aux1386:: var_is_introduced ;
var bool: aux1387_BOOL:: var_is_introduced ;
var bool: aux1388_BOOL:: var_is_introduced ;
var bool: aux1389_BOOL:: var_is_introduced ;
var {0,1}: aux1389_INTEGER :: var_is_introduced ;
var bool: aux1390_BOOL:: var_is_introduced ;
var bool: aux1391_BOOL:: var_is_introduced ;
var 4..61: aux1392:: var_is_introduced ;
var bool: aux1393_BOOL:: var_is_introduced ;
var bool: aux1394_BOOL:: var_is_introduced ;
var bool: aux1395_BOOL:: var_is_introduced ;
var {0,1}: aux1395_INTEGER :: var_is_introduced ;
var bool: aux1396_BOOL:: var_is_introduced ;
var bool: aux1397_BOOL:: var_is_introduced ;
var 4..61: aux1398:: var_is_introduced ;
var bool: aux1399_BOOL:: var_is_introduced ;
var bool: aux1400_BOOL:: var_is_introduced ;
var bool: aux1401_BOOL:: var_is_introduced ;
var {0,1}: aux1401_INTEGER :: var_is_introduced ;
var bool: aux1402_BOOL:: var_is_introduced ;
var bool: aux1403_BOOL:: var_is_introduced ;
var 2..59: aux1404:: var_is_introduced ;
var bool: aux1405_BOOL:: var_is_introduced ;
var bool: aux1406_BOOL:: var_is_introduced ;
var bool: aux1407_BOOL:: var_is_introduced ;
var {0,1}: aux1407_INTEGER :: var_is_introduced ;
var bool: aux1408_BOOL:: var_is_introduced ;
var bool: aux1409_BOOL:: var_is_introduced ;
var 3..60: aux1410:: var_is_introduced ;
var bool: aux1411_BOOL:: var_is_introduced ;
var bool: aux1412_BOOL:: var_is_introduced ;
var {0,1}: aux1412_INTEGER :: var_is_introduced ;
var bool: aux1413_BOOL:: var_is_introduced ;
var bool: aux1414_BOOL:: var_is_introduced ;
var 4..61: aux1415:: var_is_introduced ;
var bool: aux1416_BOOL:: var_is_introduced ;
var bool: aux1417_BOOL:: var_is_introduced ;
var bool: aux1418_BOOL:: var_is_introduced ;
var {0,1}: aux1418_INTEGER :: var_is_introduced ;
var bool: aux1419_BOOL:: var_is_introduced ;
var bool: aux1420_BOOL:: var_is_introduced ;
var 4..61: aux1421:: var_is_introduced ;
var bool: aux1422_BOOL:: var_is_introduced ;
var bool: aux1423_BOOL:: var_is_introduced ;
var bool: aux1424_BOOL:: var_is_introduced ;
var {0,1}: aux1424_INTEGER :: var_is_introduced ;
var bool: aux1425_BOOL:: var_is_introduced ;
var bool: aux1426_BOOL:: var_is_introduced ;
var 3..60: aux1427:: var_is_introduced ;
var bool: aux1428_BOOL:: var_is_introduced ;
var bool: aux1429_BOOL:: var_is_introduced ;
var bool: aux1430_BOOL:: var_is_introduced ;
var {0,1}: aux1430_INTEGER :: var_is_introduced ;
var bool: aux1431_BOOL:: var_is_introduced ;
var bool: aux1432_BOOL:: var_is_introduced ;
var 2..59: aux1433:: var_is_introduced ;
var bool: aux1434_BOOL:: var_is_introduced ;
var bool: aux1435_BOOL:: var_is_introduced ;
var bool: aux1436_BOOL:: var_is_introduced ;
var {0,1}: aux1436_INTEGER :: var_is_introduced ;
var bool: aux1437_BOOL:: var_is_introduced ;
var bool: aux1438_BOOL:: var_is_introduced ;
var 2..59: aux1439:: var_is_introduced ;
var bool: aux1440_BOOL:: var_is_introduced ;
var bool: aux1441_BOOL:: var_is_introduced ;
var bool: aux1442_BOOL:: var_is_introduced ;
var {0,1}: aux1442_INTEGER :: var_is_introduced ;
var bool: aux1443_BOOL:: var_is_introduced ;
var bool: aux1444_BOOL:: var_is_introduced ;
var 3..60: aux1445:: var_is_introduced ;
var bool: aux1446_BOOL:: var_is_introduced ;
var bool: aux1447_BOOL:: var_is_introduced ;
var bool: aux1448_BOOL:: var_is_introduced ;
var {0,1}: aux1448_INTEGER :: var_is_introduced ;
var bool: aux1449_BOOL:: var_is_introduced ;
var bool: aux1450_BOOL:: var_is_introduced ;
var 2..59: aux1451:: var_is_introduced ;
var bool: aux1452_BOOL:: var_is_introduced ;
var bool: aux1453_BOOL:: var_is_introduced ;
var bool: aux1454_BOOL:: var_is_introduced ;
var {0,1}: aux1454_INTEGER :: var_is_introduced ;
var bool: aux1455_BOOL:: var_is_introduced ;
var bool: aux1456_BOOL:: var_is_introduced ;
var 2..59: aux1457:: var_is_introduced ;
var bool: aux1458_BOOL:: var_is_introduced ;
var bool: aux1459_BOOL:: var_is_introduced ;
var bool: aux1460_BOOL:: var_is_introduced ;
var {0,1}: aux1460_INTEGER :: var_is_introduced ;
var bool: aux1461_BOOL:: var_is_introduced ;
var bool: aux1462_BOOL:: var_is_introduced ;
var 3..60: aux1463:: var_is_introduced ;
var bool: aux1464_BOOL:: var_is_introduced ;
var bool: aux1465_BOOL:: var_is_introduced ;
var bool: aux1466_BOOL:: var_is_introduced ;
var {0,1}: aux1466_INTEGER :: var_is_introduced ;
var bool: aux1467_BOOL:: var_is_introduced ;
var bool: aux1468_BOOL:: var_is_introduced ;
var 5..62: aux1469:: var_is_introduced ;
var bool: aux1470_BOOL:: var_is_introduced ;
var bool: aux1471_BOOL:: var_is_introduced ;
var bool: aux1472_BOOL:: var_is_introduced ;
var {0,1}: aux1472_INTEGER :: var_is_introduced ;
var bool: aux1473_BOOL:: var_is_introduced ;
var bool: aux1474_BOOL:: var_is_introduced ;
var 4..61: aux1475:: var_is_introduced ;
var bool: aux1476_BOOL:: var_is_introduced ;
var bool: aux1477_BOOL:: var_is_introduced ;
var bool: aux1478_BOOL:: var_is_introduced ;
var {0,1}: aux1478_INTEGER :: var_is_introduced ;
var bool: aux1479_BOOL:: var_is_introduced ;
var bool: aux1480_BOOL:: var_is_introduced ;
var 3..60: aux1481:: var_is_introduced ;
var bool: aux1482_BOOL:: var_is_introduced ;
var bool: aux1483_BOOL:: var_is_introduced ;
var bool: aux1484_BOOL:: var_is_introduced ;
var {0,1}: aux1484_INTEGER :: var_is_introduced ;
var bool: aux1485_BOOL:: var_is_introduced ;
var bool: aux1486_BOOL:: var_is_introduced ;
var 2..59: aux1487:: var_is_introduced ;
var bool: aux1488_BOOL:: var_is_introduced ;
var bool: aux1489_BOOL:: var_is_introduced ;
var bool: aux1490_BOOL:: var_is_introduced ;
var {0,1}: aux1490_INTEGER :: var_is_introduced ;
var bool: aux1491_BOOL:: var_is_introduced ;
var bool: aux1492_BOOL:: var_is_introduced ;
var 1..58: aux1493:: var_is_introduced ;
var bool: aux1494_BOOL:: var_is_introduced ;
var bool: aux1495_BOOL:: var_is_introduced ;
var bool: aux1496_BOOL:: var_is_introduced ;
var {0,1}: aux1496_INTEGER :: var_is_introduced ;
var bool: aux1497_BOOL:: var_is_introduced ;
var bool: aux1498_BOOL:: var_is_introduced ;
var 3..60: aux1499:: var_is_introduced ;
var bool: aux1500_BOOL:: var_is_introduced ;
var bool: aux1501_BOOL:: var_is_introduced ;
var bool: aux1502_BOOL:: var_is_introduced ;
var {0,1}: aux1502_INTEGER :: var_is_introduced ;
var bool: aux1503_BOOL:: var_is_introduced ;
var bool: aux1504_BOOL:: var_is_introduced ;
var 1..58: aux1505:: var_is_introduced ;
var bool: aux1506_BOOL:: var_is_introduced ;
var bool: aux1507_BOOL:: var_is_introduced ;
var bool: aux1508_BOOL:: var_is_introduced ;
var {0,1}: aux1508_INTEGER :: var_is_introduced ;
var bool: aux1509_BOOL:: var_is_introduced ;
var bool: aux1510_BOOL:: var_is_introduced ;
var 4..61: aux1511:: var_is_introduced ;
var bool: aux1512_BOOL:: var_is_introduced ;
var bool: aux1513_BOOL:: var_is_introduced ;
var bool: aux1514_BOOL:: var_is_introduced ;
var {0,1}: aux1514_INTEGER :: var_is_introduced ;
var bool: aux1515_BOOL:: var_is_introduced ;
var bool: aux1516_BOOL:: var_is_introduced ;
var 4..61: aux1517:: var_is_introduced ;
var bool: aux1518_BOOL:: var_is_introduced ;
var bool: aux1519_BOOL:: var_is_introduced ;
var bool: aux1520_BOOL:: var_is_introduced ;
var {0,1}: aux1520_INTEGER :: var_is_introduced ;
var bool: aux1521_BOOL:: var_is_introduced ;
var bool: aux1522_BOOL:: var_is_introduced ;
var 2..59: aux1523:: var_is_introduced ;
var bool: aux1524_BOOL:: var_is_introduced ;
var bool: aux1525_BOOL:: var_is_introduced ;
var bool: aux1526_BOOL:: var_is_introduced ;
var {0,1}: aux1526_INTEGER :: var_is_introduced ;
var bool: aux1527_BOOL:: var_is_introduced ;
var bool: aux1528_BOOL:: var_is_introduced ;
var 5..62: aux1529:: var_is_introduced ;
var bool: aux1530_BOOL:: var_is_introduced ;
var bool: aux1531_BOOL:: var_is_introduced ;
var {0,1}: aux1531_INTEGER :: var_is_introduced ;
var bool: aux1532_BOOL:: var_is_introduced ;
var bool: aux1533_BOOL:: var_is_introduced ;
var 4..61: aux1534:: var_is_introduced ;
var bool: aux1535_BOOL:: var_is_introduced ;
var bool: aux1536_BOOL:: var_is_introduced ;
var bool: aux1537_BOOL:: var_is_introduced ;
var {0,1}: aux1537_INTEGER :: var_is_introduced ;
var bool: aux1538_BOOL:: var_is_introduced ;
var bool: aux1539_BOOL:: var_is_introduced ;
var 4..61: aux1540:: var_is_introduced ;
var bool: aux1541_BOOL:: var_is_introduced ;
var bool: aux1542_BOOL:: var_is_introduced ;
var bool: aux1543_BOOL:: var_is_introduced ;
var {0,1}: aux1543_INTEGER :: var_is_introduced ;
var bool: aux1544_BOOL:: var_is_introduced ;
var bool: aux1545_BOOL:: var_is_introduced ;
var 3..60: aux1546:: var_is_introduced ;
var bool: aux1547_BOOL:: var_is_introduced ;
var bool: aux1548_BOOL:: var_is_introduced ;
var bool: aux1549_BOOL:: var_is_introduced ;
var {0,1}: aux1549_INTEGER :: var_is_introduced ;
var bool: aux1550_BOOL:: var_is_introduced ;
var bool: aux1551_BOOL:: var_is_introduced ;
var 2..59: aux1552:: var_is_introduced ;
var bool: aux1553_BOOL:: var_is_introduced ;
var bool: aux1554_BOOL:: var_is_introduced ;
var bool: aux1555_BOOL:: var_is_introduced ;
var {0,1}: aux1555_INTEGER :: var_is_introduced ;
var bool: aux1556_BOOL:: var_is_introduced ;
var bool: aux1557_BOOL:: var_is_introduced ;
var 3..60: aux1558:: var_is_introduced ;
var bool: aux1559_BOOL:: var_is_introduced ;
var bool: aux1560_BOOL:: var_is_introduced ;
var bool: aux1561_BOOL:: var_is_introduced ;
var {0,1}: aux1561_INTEGER :: var_is_introduced ;
var bool: aux1562_BOOL:: var_is_introduced ;
var bool: aux1563_BOOL:: var_is_introduced ;
var 2..59: aux1564:: var_is_introduced ;
var bool: aux1565_BOOL:: var_is_introduced ;
var bool: aux1566_BOOL:: var_is_introduced ;
var bool: aux1567_BOOL:: var_is_introduced ;
var {0,1}: aux1567_INTEGER :: var_is_introduced ;
var bool: aux1568_BOOL:: var_is_introduced ;
var bool: aux1569_BOOL:: var_is_introduced ;
var 3..60: aux1570:: var_is_introduced ;
var bool: aux1571_BOOL:: var_is_introduced ;
var bool: aux1572_BOOL:: var_is_introduced ;
var bool: aux1573_BOOL:: var_is_introduced ;
var {0,1}: aux1573_INTEGER :: var_is_introduced ;
var bool: aux1574_BOOL:: var_is_introduced ;
var bool: aux1575_BOOL:: var_is_introduced ;
var 2..59: aux1576:: var_is_introduced ;
var bool: aux1577_BOOL:: var_is_introduced ;
var bool: aux1578_BOOL:: var_is_introduced ;
var bool: aux1579_BOOL:: var_is_introduced ;
var {0,1}: aux1579_INTEGER :: var_is_introduced ;
var bool: aux1580_BOOL:: var_is_introduced ;
var bool: aux1581_BOOL:: var_is_introduced ;
var 2..59: aux1582:: var_is_introduced ;
var bool: aux1583_BOOL:: var_is_introduced ;
var bool: aux1584_BOOL:: var_is_introduced ;
var bool: aux1585_BOOL:: var_is_introduced ;
var {0,1}: aux1585_INTEGER :: var_is_introduced ;
var bool: aux1586_BOOL:: var_is_introduced ;
var bool: aux1587_BOOL:: var_is_introduced ;
var 3..60: aux1588:: var_is_introduced ;
var bool: aux1589_BOOL:: var_is_introduced ;
var bool: aux1590_BOOL:: var_is_introduced ;
var bool: aux1591_BOOL:: var_is_introduced ;
var {0,1}: aux1591_INTEGER :: var_is_introduced ;
var bool: aux1592_BOOL:: var_is_introduced ;
var bool: aux1593_BOOL:: var_is_introduced ;
var 4..61: aux1594:: var_is_introduced ;
var bool: aux1595_BOOL:: var_is_introduced ;
var bool: aux1596_BOOL:: var_is_introduced ;
var bool: aux1597_BOOL:: var_is_introduced ;
var {0,1}: aux1597_INTEGER :: var_is_introduced ;
var bool: aux1598_BOOL:: var_is_introduced ;
var bool: aux1599_BOOL:: var_is_introduced ;
var 3..60: aux1600:: var_is_introduced ;
var bool: aux1601_BOOL:: var_is_introduced ;
var bool: aux1602_BOOL:: var_is_introduced ;
var bool: aux1603_BOOL:: var_is_introduced ;
var {0,1}: aux1603_INTEGER :: var_is_introduced ;
var bool: aux1604_BOOL:: var_is_introduced ;
var bool: aux1605_BOOL:: var_is_introduced ;
var 2..59: aux1606:: var_is_introduced ;
var bool: aux1607_BOOL:: var_is_introduced ;
var bool: aux1608_BOOL:: var_is_introduced ;
var bool: aux1609_BOOL:: var_is_introduced ;
var {0,1}: aux1609_INTEGER :: var_is_introduced ;
var bool: aux1610_BOOL:: var_is_introduced ;
var bool: aux1611_BOOL:: var_is_introduced ;
var 1..58: aux1612:: var_is_introduced ;
var bool: aux1613_BOOL:: var_is_introduced ;
var bool: aux1614_BOOL:: var_is_introduced ;
var bool: aux1615_BOOL:: var_is_introduced ;
var {0,1}: aux1615_INTEGER :: var_is_introduced ;
var bool: aux1616_BOOL:: var_is_introduced ;
var bool: aux1617_BOOL:: var_is_introduced ;
var 3..60: aux1618:: var_is_introduced ;
var bool: aux1619_BOOL:: var_is_introduced ;
var bool: aux1620_BOOL:: var_is_introduced ;
var bool: aux1621_BOOL:: var_is_introduced ;
var {0,1}: aux1621_INTEGER :: var_is_introduced ;
var bool: aux1622_BOOL:: var_is_introduced ;
var bool: aux1623_BOOL:: var_is_introduced ;
var 1..58: aux1624:: var_is_introduced ;
var bool: aux1625_BOOL:: var_is_introduced ;
var bool: aux1626_BOOL:: var_is_introduced ;
var bool: aux1627_BOOL:: var_is_introduced ;
var {0,1}: aux1627_INTEGER :: var_is_introduced ;
var bool: aux1628_BOOL:: var_is_introduced ;
var bool: aux1629_BOOL:: var_is_introduced ;
var 4..61: aux1630:: var_is_introduced ;
var bool: aux1631_BOOL:: var_is_introduced ;
var bool: aux1632_BOOL:: var_is_introduced ;
var bool: aux1633_BOOL:: var_is_introduced ;
var {0,1}: aux1633_INTEGER :: var_is_introduced ;
var bool: aux1634_BOOL:: var_is_introduced ;
var bool: aux1635_BOOL:: var_is_introduced ;
var 4..61: aux1636:: var_is_introduced ;
var bool: aux1637_BOOL:: var_is_introduced ;
var bool: aux1638_BOOL:: var_is_introduced ;
var bool: aux1639_BOOL:: var_is_introduced ;
var {0,1}: aux1639_INTEGER :: var_is_introduced ;
var bool: aux1640_BOOL:: var_is_introduced ;
var bool: aux1641_BOOL:: var_is_introduced ;
var 2..59: aux1642:: var_is_introduced ;
var bool: aux1643_BOOL:: var_is_introduced ;
var bool: aux1644_BOOL:: var_is_introduced ;
var bool: aux1645_BOOL:: var_is_introduced ;
var {0,1}: aux1645_INTEGER :: var_is_introduced ;
var bool: aux1646_BOOL:: var_is_introduced ;
var bool: aux1647_BOOL:: var_is_introduced ;
var 2..59: aux1648:: var_is_introduced ;
var bool: aux1649_BOOL:: var_is_introduced ;
var bool: aux1650_BOOL:: var_is_introduced ;
var {0,1}: aux1650_INTEGER :: var_is_introduced ;
var bool: aux1651_BOOL:: var_is_introduced ;
var bool: aux1652_BOOL:: var_is_introduced ;
var 4..61: aux1653:: var_is_introduced ;
var bool: aux1654_BOOL:: var_is_introduced ;
var bool: aux1655_BOOL:: var_is_introduced ;
var bool: aux1656_BOOL:: var_is_introduced ;
var {0,1}: aux1656_INTEGER :: var_is_introduced ;
var bool: aux1657_BOOL:: var_is_introduced ;
var bool: aux1658_BOOL:: var_is_introduced ;
var 4..61: aux1659:: var_is_introduced ;
var bool: aux1660_BOOL:: var_is_introduced ;
var bool: aux1661_BOOL:: var_is_introduced ;
var bool: aux1662_BOOL:: var_is_introduced ;
var {0,1}: aux1662_INTEGER :: var_is_introduced ;
var bool: aux1663_BOOL:: var_is_introduced ;
var bool: aux1664_BOOL:: var_is_introduced ;
var 3..60: aux1665:: var_is_introduced ;
var bool: aux1666_BOOL:: var_is_introduced ;
var bool: aux1667_BOOL:: var_is_introduced ;
var bool: aux1668_BOOL:: var_is_introduced ;
var {0,1}: aux1668_INTEGER :: var_is_introduced ;
var bool: aux1669_BOOL:: var_is_introduced ;
var bool: aux1670_BOOL:: var_is_introduced ;
var 2..59: aux1671:: var_is_introduced ;
var bool: aux1672_BOOL:: var_is_introduced ;
var bool: aux1673_BOOL:: var_is_introduced ;
var bool: aux1674_BOOL:: var_is_introduced ;
var {0,1}: aux1674_INTEGER :: var_is_introduced ;
var bool: aux1675_BOOL:: var_is_introduced ;
var bool: aux1676_BOOL:: var_is_introduced ;
var 3..60: aux1677:: var_is_introduced ;
var bool: aux1678_BOOL:: var_is_introduced ;
var bool: aux1679_BOOL:: var_is_introduced ;
var bool: aux1680_BOOL:: var_is_introduced ;
var {0,1}: aux1680_INTEGER :: var_is_introduced ;
var bool: aux1681_BOOL:: var_is_introduced ;
var bool: aux1682_BOOL:: var_is_introduced ;
var 2..59: aux1683:: var_is_introduced ;
var bool: aux1684_BOOL:: var_is_introduced ;
var bool: aux1685_BOOL:: var_is_introduced ;
var bool: aux1686_BOOL:: var_is_introduced ;
var {0,1}: aux1686_INTEGER :: var_is_introduced ;
var bool: aux1687_BOOL:: var_is_introduced ;
var bool: aux1688_BOOL:: var_is_introduced ;
var 3..60: aux1689:: var_is_introduced ;
var bool: aux1690_BOOL:: var_is_introduced ;
var bool: aux1691_BOOL:: var_is_introduced ;
var bool: aux1692_BOOL:: var_is_introduced ;
var {0,1}: aux1692_INTEGER :: var_is_introduced ;
var bool: aux1693_BOOL:: var_is_introduced ;
var bool: aux1694_BOOL:: var_is_introduced ;
var 2..59: aux1695:: var_is_introduced ;
var bool: aux1696_BOOL:: var_is_introduced ;
var bool: aux1697_BOOL:: var_is_introduced ;
var bool: aux1698_BOOL:: var_is_introduced ;
var {0,1}: aux1698_INTEGER :: var_is_introduced ;
var bool: aux1699_BOOL:: var_is_introduced ;
var bool: aux1700_BOOL:: var_is_introduced ;
var 2..59: aux1701:: var_is_introduced ;
var bool: aux1702_BOOL:: var_is_introduced ;
var bool: aux1703_BOOL:: var_is_introduced ;
var bool: aux1704_BOOL:: var_is_introduced ;
var {0,1}: aux1704_INTEGER :: var_is_introduced ;
var bool: aux1705_BOOL:: var_is_introduced ;
var bool: aux1706_BOOL:: var_is_introduced ;
var 5..62: aux1707:: var_is_introduced ;
var bool: aux1708_BOOL:: var_is_introduced ;
var bool: aux1709_BOOL:: var_is_introduced ;
var bool: aux1710_BOOL:: var_is_introduced ;
var {0,1}: aux1710_INTEGER :: var_is_introduced ;
var bool: aux1711_BOOL:: var_is_introduced ;
var bool: aux1712_BOOL:: var_is_introduced ;
var 3..60: aux1713:: var_is_introduced ;
var bool: aux1714_BOOL:: var_is_introduced ;
var bool: aux1715_BOOL:: var_is_introduced ;
var bool: aux1716_BOOL:: var_is_introduced ;
var {0,1}: aux1716_INTEGER :: var_is_introduced ;
var bool: aux1717_BOOL:: var_is_introduced ;
var bool: aux1718_BOOL:: var_is_introduced ;
var 4..61: aux1719:: var_is_introduced ;
var bool: aux1720_BOOL:: var_is_introduced ;
var bool: aux1721_BOOL:: var_is_introduced ;
var bool: aux1722_BOOL:: var_is_introduced ;
var {0,1}: aux1722_INTEGER :: var_is_introduced ;
var bool: aux1723_BOOL:: var_is_introduced ;
var bool: aux1724_BOOL:: var_is_introduced ;
var 3..60: aux1725:: var_is_introduced ;
var bool: aux1726_BOOL:: var_is_introduced ;
var bool: aux1727_BOOL:: var_is_introduced ;
var bool: aux1728_BOOL:: var_is_introduced ;
var {0,1}: aux1728_INTEGER :: var_is_introduced ;
var bool: aux1729_BOOL:: var_is_introduced ;
var bool: aux1730_BOOL:: var_is_introduced ;
var 1..58: aux1731:: var_is_introduced ;
var bool: aux1732_BOOL:: var_is_introduced ;
var bool: aux1733_BOOL:: var_is_introduced ;
var bool: aux1734_BOOL:: var_is_introduced ;
var {0,1}: aux1734_INTEGER :: var_is_introduced ;
var bool: aux1735_BOOL:: var_is_introduced ;
var bool: aux1736_BOOL:: var_is_introduced ;
var 3..60: aux1737:: var_is_introduced ;
var bool: aux1738_BOOL:: var_is_introduced ;
var bool: aux1739_BOOL:: var_is_introduced ;
var bool: aux1740_BOOL:: var_is_introduced ;
var {0,1}: aux1740_INTEGER :: var_is_introduced ;
var bool: aux1741_BOOL:: var_is_introduced ;
var bool: aux1742_BOOL:: var_is_introduced ;
var 1..58: aux1743:: var_is_introduced ;
var bool: aux1744_BOOL:: var_is_introduced ;
var bool: aux1745_BOOL:: var_is_introduced ;
var bool: aux1746_BOOL:: var_is_introduced ;
var {0,1}: aux1746_INTEGER :: var_is_introduced ;
var bool: aux1747_BOOL:: var_is_introduced ;
var bool: aux1748_BOOL:: var_is_introduced ;
var 4..61: aux1749:: var_is_introduced ;
var bool: aux1750_BOOL:: var_is_introduced ;
var bool: aux1751_BOOL:: var_is_introduced ;
var bool: aux1752_BOOL:: var_is_introduced ;
var {0,1}: aux1752_INTEGER :: var_is_introduced ;
var bool: aux1753_BOOL:: var_is_introduced ;
var bool: aux1754_BOOL:: var_is_introduced ;
var 4..61: aux1755:: var_is_introduced ;
var bool: aux1756_BOOL:: var_is_introduced ;
var bool: aux1757_BOOL:: var_is_introduced ;
var bool: aux1758_BOOL:: var_is_introduced ;
var {0,1}: aux1758_INTEGER :: var_is_introduced ;
var bool: aux1759_BOOL:: var_is_introduced ;
var bool: aux1760_BOOL:: var_is_introduced ;
var 2..59: aux1761:: var_is_introduced ;
var bool: aux1762_BOOL:: var_is_introduced ;
var bool: aux1763_BOOL:: var_is_introduced ;
var bool: aux1764_BOOL:: var_is_introduced ;
var {0,1}: aux1764_INTEGER :: var_is_introduced ;
var bool: aux1765_BOOL:: var_is_introduced ;
var bool: aux1766_BOOL:: var_is_introduced ;
var 4..61: aux1767:: var_is_introduced ;
var bool: aux1768_BOOL:: var_is_introduced ;
var bool: aux1769_BOOL:: var_is_introduced ;
var {0,1}: aux1769_INTEGER :: var_is_introduced ;
var bool: aux1770_BOOL:: var_is_introduced ;
var bool: aux1771_BOOL:: var_is_introduced ;
var 4..61: aux1772:: var_is_introduced ;
var bool: aux1773_BOOL:: var_is_introduced ;
var bool: aux1774_BOOL:: var_is_introduced ;
var bool: aux1775_BOOL:: var_is_introduced ;
var {0,1}: aux1775_INTEGER :: var_is_introduced ;
var bool: aux1776_BOOL:: var_is_introduced ;
var bool: aux1777_BOOL:: var_is_introduced ;
var 3..60: aux1778:: var_is_introduced ;
var bool: aux1779_BOOL:: var_is_introduced ;
var bool: aux1780_BOOL:: var_is_introduced ;
var bool: aux1781_BOOL:: var_is_introduced ;
var {0,1}: aux1781_INTEGER :: var_is_introduced ;
var bool: aux1782_BOOL:: var_is_introduced ;
var bool: aux1783_BOOL:: var_is_introduced ;
var 2..59: aux1784:: var_is_introduced ;
var bool: aux1785_BOOL:: var_is_introduced ;
var bool: aux1786_BOOL:: var_is_introduced ;
var bool: aux1787_BOOL:: var_is_introduced ;
var {0,1}: aux1787_INTEGER :: var_is_introduced ;
var bool: aux1788_BOOL:: var_is_introduced ;
var bool: aux1789_BOOL:: var_is_introduced ;
var 3..60: aux1790:: var_is_introduced ;
var bool: aux1791_BOOL:: var_is_introduced ;
var bool: aux1792_BOOL:: var_is_introduced ;
var bool: aux1793_BOOL:: var_is_introduced ;
var {0,1}: aux1793_INTEGER :: var_is_introduced ;
var bool: aux1794_BOOL:: var_is_introduced ;
var bool: aux1795_BOOL:: var_is_introduced ;
var 2..59: aux1796:: var_is_introduced ;
var bool: aux1797_BOOL:: var_is_introduced ;
var bool: aux1798_BOOL:: var_is_introduced ;
var bool: aux1799_BOOL:: var_is_introduced ;
var {0,1}: aux1799_INTEGER :: var_is_introduced ;
var bool: aux1800_BOOL:: var_is_introduced ;
var bool: aux1801_BOOL:: var_is_introduced ;
var 3..60: aux1802:: var_is_introduced ;
var bool: aux1803_BOOL:: var_is_introduced ;
var bool: aux1804_BOOL:: var_is_introduced ;
var bool: aux1805_BOOL:: var_is_introduced ;
var {0,1}: aux1805_INTEGER :: var_is_introduced ;
var bool: aux1806_BOOL:: var_is_introduced ;
var bool: aux1807_BOOL:: var_is_introduced ;
var 2..59: aux1808:: var_is_introduced ;
var bool: aux1809_BOOL:: var_is_introduced ;
var bool: aux1810_BOOL:: var_is_introduced ;
var bool: aux1811_BOOL:: var_is_introduced ;
var {0,1}: aux1811_INTEGER :: var_is_introduced ;
var bool: aux1812_BOOL:: var_is_introduced ;
var bool: aux1813_BOOL:: var_is_introduced ;
var 2..59: aux1814:: var_is_introduced ;
var bool: aux1815_BOOL:: var_is_introduced ;
var bool: aux1816_BOOL:: var_is_introduced ;
var bool: aux1817_BOOL:: var_is_introduced ;
var {0,1}: aux1817_INTEGER :: var_is_introduced ;
var bool: aux1818_BOOL:: var_is_introduced ;
var bool: aux1819_BOOL:: var_is_introduced ;
var 3..60: aux1820:: var_is_introduced ;
var bool: aux1821_BOOL:: var_is_introduced ;
var bool: aux1822_BOOL:: var_is_introduced ;
var bool: aux1823_BOOL:: var_is_introduced ;
var {0,1}: aux1823_INTEGER :: var_is_introduced ;
var bool: aux1824_BOOL:: var_is_introduced ;
var bool: aux1825_BOOL:: var_is_introduced ;
var 5..62: aux1826:: var_is_introduced ;
var bool: aux1827_BOOL:: var_is_introduced ;
var bool: aux1828_BOOL:: var_is_introduced ;
var bool: aux1829_BOOL:: var_is_introduced ;
var {0,1}: aux1829_INTEGER :: var_is_introduced ;
var bool: aux1830_BOOL:: var_is_introduced ;
var bool: aux1831_BOOL:: var_is_introduced ;
var 4..61: aux1832:: var_is_introduced ;
var bool: aux1833_BOOL:: var_is_introduced ;
var bool: aux1834_BOOL:: var_is_introduced ;
var bool: aux1835_BOOL:: var_is_introduced ;
var {0,1}: aux1835_INTEGER :: var_is_introduced ;
var bool: aux1836_BOOL:: var_is_introduced ;
var bool: aux1837_BOOL:: var_is_introduced ;
var 3..60: aux1838:: var_is_introduced ;
var bool: aux1839_BOOL:: var_is_introduced ;
var bool: aux1840_BOOL:: var_is_introduced ;
var bool: aux1841_BOOL:: var_is_introduced ;
var {0,1}: aux1841_INTEGER :: var_is_introduced ;
var bool: aux1842_BOOL:: var_is_introduced ;
var bool: aux1843_BOOL:: var_is_introduced ;
var 2..59: aux1844:: var_is_introduced ;
var bool: aux1845_BOOL:: var_is_introduced ;
var bool: aux1846_BOOL:: var_is_introduced ;
var bool: aux1847_BOOL:: var_is_introduced ;
var {0,1}: aux1847_INTEGER :: var_is_introduced ;
var bool: aux1848_BOOL:: var_is_introduced ;
var bool: aux1849_BOOL:: var_is_introduced ;
var 1..58: aux1850:: var_is_introduced ;
var bool: aux1851_BOOL:: var_is_introduced ;
var bool: aux1852_BOOL:: var_is_introduced ;
var bool: aux1853_BOOL:: var_is_introduced ;
var {0,1}: aux1853_INTEGER :: var_is_introduced ;
var bool: aux1854_BOOL:: var_is_introduced ;
var bool: aux1855_BOOL:: var_is_introduced ;
var 3..60: aux1856:: var_is_introduced ;
var bool: aux1857_BOOL:: var_is_introduced ;
var bool: aux1858_BOOL:: var_is_introduced ;
var bool: aux1859_BOOL:: var_is_introduced ;
var {0,1}: aux1859_INTEGER :: var_is_introduced ;
var bool: aux1860_BOOL:: var_is_introduced ;
var bool: aux1861_BOOL:: var_is_introduced ;
var 1..58: aux1862:: var_is_introduced ;
var bool: aux1863_BOOL:: var_is_introduced ;
var bool: aux1864_BOOL:: var_is_introduced ;
var bool: aux1865_BOOL:: var_is_introduced ;
var {0,1}: aux1865_INTEGER :: var_is_introduced ;
var bool: aux1866_BOOL:: var_is_introduced ;
var bool: aux1867_BOOL:: var_is_introduced ;
var 4..61: aux1868:: var_is_introduced ;
var bool: aux1869_BOOL:: var_is_introduced ;
var bool: aux1870_BOOL:: var_is_introduced ;
var bool: aux1871_BOOL:: var_is_introduced ;
var {0,1}: aux1871_INTEGER :: var_is_introduced ;
var bool: aux1872_BOOL:: var_is_introduced ;
var bool: aux1873_BOOL:: var_is_introduced ;
var 4..61: aux1874:: var_is_introduced ;
var bool: aux1875_BOOL:: var_is_introduced ;
var bool: aux1876_BOOL:: var_is_introduced ;
var bool: aux1877_BOOL:: var_is_introduced ;
var {0,1}: aux1877_INTEGER :: var_is_introduced ;
var bool: aux1878_BOOL:: var_is_introduced ;
var bool: aux1879_BOOL:: var_is_introduced ;
var 2..59: aux1880:: var_is_introduced ;
var bool: aux1881_BOOL:: var_is_introduced ;
var bool: aux1882_BOOL:: var_is_introduced ;
var bool: aux1883_BOOL:: var_is_introduced ;
var {0,1}: aux1883_INTEGER :: var_is_introduced ;
var bool: aux1884_BOOL:: var_is_introduced ;
var bool: aux1885_BOOL:: var_is_introduced ;
var 1..58: aux1886:: var_is_introduced ;
var bool: aux1887_BOOL:: var_is_introduced ;
var bool: aux1888_BOOL:: var_is_introduced ;
var {0,1}: aux1888_INTEGER :: var_is_introduced ;
var bool: aux1889_BOOL:: var_is_introduced ;
var bool: aux1890_BOOL:: var_is_introduced ;
var 4..61: aux1891:: var_is_introduced ;
var bool: aux1892_BOOL:: var_is_introduced ;
var bool: aux1893_BOOL:: var_is_introduced ;
var bool: aux1894_BOOL:: var_is_introduced ;
var {0,1}: aux1894_INTEGER :: var_is_introduced ;
var bool: aux1895_BOOL:: var_is_introduced ;
var bool: aux1896_BOOL:: var_is_introduced ;
var 4..61: aux1897:: var_is_introduced ;
var bool: aux1898_BOOL:: var_is_introduced ;
var bool: aux1899_BOOL:: var_is_introduced ;
var bool: aux1900_BOOL:: var_is_introduced ;
var {0,1}: aux1900_INTEGER :: var_is_introduced ;
var bool: aux1901_BOOL:: var_is_introduced ;
var bool: aux1902_BOOL:: var_is_introduced ;
var 3..60: aux1903:: var_is_introduced ;
var bool: aux1904_BOOL:: var_is_introduced ;
var bool: aux1905_BOOL:: var_is_introduced ;
var bool: aux1906_BOOL:: var_is_introduced ;
var {0,1}: aux1906_INTEGER :: var_is_introduced ;
var bool: aux1907_BOOL:: var_is_introduced ;
var bool: aux1908_BOOL:: var_is_introduced ;
var 2..59: aux1909:: var_is_introduced ;
var bool: aux1910_BOOL:: var_is_introduced ;
var bool: aux1911_BOOL:: var_is_introduced ;
var bool: aux1912_BOOL:: var_is_introduced ;
var {0,1}: aux1912_INTEGER :: var_is_introduced ;
var bool: aux1913_BOOL:: var_is_introduced ;
var bool: aux1914_BOOL:: var_is_introduced ;
var 3..60: aux1915:: var_is_introduced ;
var bool: aux1916_BOOL:: var_is_introduced ;
var bool: aux1917_BOOL:: var_is_introduced ;
var bool: aux1918_BOOL:: var_is_introduced ;
var {0,1}: aux1918_INTEGER :: var_is_introduced ;
var bool: aux1919_BOOL:: var_is_introduced ;
var bool: aux1920_BOOL:: var_is_introduced ;
var 2..59: aux1921:: var_is_introduced ;
var bool: aux1922_BOOL:: var_is_introduced ;
var bool: aux1923_BOOL:: var_is_introduced ;
var bool: aux1924_BOOL:: var_is_introduced ;
var {0,1}: aux1924_INTEGER :: var_is_introduced ;
var bool: aux1925_BOOL:: var_is_introduced ;
var bool: aux1926_BOOL:: var_is_introduced ;
var 3..60: aux1927:: var_is_introduced ;
var bool: aux1928_BOOL:: var_is_introduced ;
var bool: aux1929_BOOL:: var_is_introduced ;
var bool: aux1930_BOOL:: var_is_introduced ;
var {0,1}: aux1930_INTEGER :: var_is_introduced ;
var bool: aux1931_BOOL:: var_is_introduced ;
var bool: aux1932_BOOL:: var_is_introduced ;
var 2..59: aux1933:: var_is_introduced ;
var bool: aux1934_BOOL:: var_is_introduced ;
var bool: aux1935_BOOL:: var_is_introduced ;
var bool: aux1936_BOOL:: var_is_introduced ;
var {0,1}: aux1936_INTEGER :: var_is_introduced ;
var bool: aux1937_BOOL:: var_is_introduced ;
var bool: aux1938_BOOL:: var_is_introduced ;
var 2..59: aux1939:: var_is_introduced ;
var bool: aux1940_BOOL:: var_is_introduced ;
var bool: aux1941_BOOL:: var_is_introduced ;
var bool: aux1942_BOOL:: var_is_introduced ;
var {0,1}: aux1942_INTEGER :: var_is_introduced ;
var bool: aux1943_BOOL:: var_is_introduced ;
var bool: aux1944_BOOL:: var_is_introduced ;
var 5..62: aux1945:: var_is_introduced ;
var bool: aux1946_BOOL:: var_is_introduced ;
var bool: aux1947_BOOL:: var_is_introduced ;
var bool: aux1948_BOOL:: var_is_introduced ;
var {0,1}: aux1948_INTEGER :: var_is_introduced ;
var bool: aux1949_BOOL:: var_is_introduced ;
var bool: aux1950_BOOL:: var_is_introduced ;
var 3..60: aux1951:: var_is_introduced ;
var bool: aux1952_BOOL:: var_is_introduced ;
var bool: aux1953_BOOL:: var_is_introduced ;
var bool: aux1954_BOOL:: var_is_introduced ;
var {0,1}: aux1954_INTEGER :: var_is_introduced ;
var bool: aux1955_BOOL:: var_is_introduced ;
var bool: aux1956_BOOL:: var_is_introduced ;
var 4..61: aux1957:: var_is_introduced ;
var bool: aux1958_BOOL:: var_is_introduced ;
var bool: aux1959_BOOL:: var_is_introduced ;
var bool: aux1960_BOOL:: var_is_introduced ;
var {0,1}: aux1960_INTEGER :: var_is_introduced ;
var bool: aux1961_BOOL:: var_is_introduced ;
var bool: aux1962_BOOL:: var_is_introduced ;
var 3..60: aux1963:: var_is_introduced ;
var bool: aux1964_BOOL:: var_is_introduced ;
var bool: aux1965_BOOL:: var_is_introduced ;
var bool: aux1966_BOOL:: var_is_introduced ;
var {0,1}: aux1966_INTEGER :: var_is_introduced ;
var bool: aux1967_BOOL:: var_is_introduced ;
var bool: aux1968_BOOL:: var_is_introduced ;
var 2..59: aux1969:: var_is_introduced ;
var bool: aux1970_BOOL:: var_is_introduced ;
var bool: aux1971_BOOL:: var_is_introduced ;
var bool: aux1972_BOOL:: var_is_introduced ;
var {0,1}: aux1972_INTEGER :: var_is_introduced ;
var bool: aux1973_BOOL:: var_is_introduced ;
var bool: aux1974_BOOL:: var_is_introduced ;
var 3..60: aux1975:: var_is_introduced ;
var bool: aux1976_BOOL:: var_is_introduced ;
var bool: aux1977_BOOL:: var_is_introduced ;
var bool: aux1978_BOOL:: var_is_introduced ;
var {0,1}: aux1978_INTEGER :: var_is_introduced ;
var bool: aux1979_BOOL:: var_is_introduced ;
var bool: aux1980_BOOL:: var_is_introduced ;
var 1..58: aux1981:: var_is_introduced ;
var bool: aux1982_BOOL:: var_is_introduced ;
var bool: aux1983_BOOL:: var_is_introduced ;
var bool: aux1984_BOOL:: var_is_introduced ;
var {0,1}: aux1984_INTEGER :: var_is_introduced ;
var bool: aux1985_BOOL:: var_is_introduced ;
var bool: aux1986_BOOL:: var_is_introduced ;
var 4..61: aux1987:: var_is_introduced ;
var bool: aux1988_BOOL:: var_is_introduced ;
var bool: aux1989_BOOL:: var_is_introduced ;
var bool: aux1990_BOOL:: var_is_introduced ;
var {0,1}: aux1990_INTEGER :: var_is_introduced ;
var bool: aux1991_BOOL:: var_is_introduced ;
var bool: aux1992_BOOL:: var_is_introduced ;
var 4..61: aux1993:: var_is_introduced ;
var bool: aux1994_BOOL:: var_is_introduced ;
var bool: aux1995_BOOL:: var_is_introduced ;
var bool: aux1996_BOOL:: var_is_introduced ;
var {0,1}: aux1996_INTEGER :: var_is_introduced ;
var bool: aux1997_BOOL:: var_is_introduced ;
var bool: aux1998_BOOL:: var_is_introduced ;
var 2..59: aux1999:: var_is_introduced ;
var bool: aux2000_BOOL:: var_is_introduced ;
var bool: aux2001_BOOL:: var_is_introduced ;
var bool: aux2002_BOOL:: var_is_introduced ;
var {0,1}: aux2002_INTEGER :: var_is_introduced ;
var bool: aux2003_BOOL:: var_is_introduced ;
var bool: aux2004_BOOL:: var_is_introduced ;
var 1..58: aux2005:: var_is_introduced ;
var bool: aux2006_BOOL:: var_is_introduced ;
var bool: aux2007_BOOL:: var_is_introduced ;
var {0,1}: aux2007_INTEGER :: var_is_introduced ;
var bool: aux2008_BOOL:: var_is_introduced ;
var bool: aux2009_BOOL:: var_is_introduced ;
var 4..61: aux2010:: var_is_introduced ;
var bool: aux2011_BOOL:: var_is_introduced ;
var bool: aux2012_BOOL:: var_is_introduced ;
var bool: aux2013_BOOL:: var_is_introduced ;
var {0,1}: aux2013_INTEGER :: var_is_introduced ;
var bool: aux2014_BOOL:: var_is_introduced ;
var bool: aux2015_BOOL:: var_is_introduced ;
var 4..61: aux2016:: var_is_introduced ;
var bool: aux2017_BOOL:: var_is_introduced ;
var bool: aux2018_BOOL:: var_is_introduced ;
var bool: aux2019_BOOL:: var_is_introduced ;
var {0,1}: aux2019_INTEGER :: var_is_introduced ;
var bool: aux2020_BOOL:: var_is_introduced ;
var bool: aux2021_BOOL:: var_is_introduced ;
var 3..60: aux2022:: var_is_introduced ;
var bool: aux2023_BOOL:: var_is_introduced ;
var bool: aux2024_BOOL:: var_is_introduced ;
var bool: aux2025_BOOL:: var_is_introduced ;
var {0,1}: aux2025_INTEGER :: var_is_introduced ;
var bool: aux2026_BOOL:: var_is_introduced ;
var bool: aux2027_BOOL:: var_is_introduced ;
var 2..59: aux2028:: var_is_introduced ;
var bool: aux2029_BOOL:: var_is_introduced ;
var bool: aux2030_BOOL:: var_is_introduced ;
var bool: aux2031_BOOL:: var_is_introduced ;
var {0,1}: aux2031_INTEGER :: var_is_introduced ;
var bool: aux2032_BOOL:: var_is_introduced ;
var bool: aux2033_BOOL:: var_is_introduced ;
var 3..60: aux2034:: var_is_introduced ;
var bool: aux2035_BOOL:: var_is_introduced ;
var bool: aux2036_BOOL:: var_is_introduced ;
var bool: aux2037_BOOL:: var_is_introduced ;
var {0,1}: aux2037_INTEGER :: var_is_introduced ;
var bool: aux2038_BOOL:: var_is_introduced ;
var bool: aux2039_BOOL:: var_is_introduced ;
var 2..59: aux2040:: var_is_introduced ;
var bool: aux2041_BOOL:: var_is_introduced ;
var bool: aux2042_BOOL:: var_is_introduced ;
var bool: aux2043_BOOL:: var_is_introduced ;
var {0,1}: aux2043_INTEGER :: var_is_introduced ;
var bool: aux2044_BOOL:: var_is_introduced ;
var bool: aux2045_BOOL:: var_is_introduced ;
var 3..60: aux2046:: var_is_introduced ;
var bool: aux2047_BOOL:: var_is_introduced ;
var bool: aux2048_BOOL:: var_is_introduced ;
var bool: aux2049_BOOL:: var_is_introduced ;
var {0,1}: aux2049_INTEGER :: var_is_introduced ;
var bool: aux2050_BOOL:: var_is_introduced ;
var bool: aux2051_BOOL:: var_is_introduced ;
var 2..59: aux2052:: var_is_introduced ;
var bool: aux2053_BOOL:: var_is_introduced ;
var bool: aux2054_BOOL:: var_is_introduced ;
var bool: aux2055_BOOL:: var_is_introduced ;
var {0,1}: aux2055_INTEGER :: var_is_introduced ;
var bool: aux2056_BOOL:: var_is_introduced ;
var bool: aux2057_BOOL:: var_is_introduced ;
var 2..59: aux2058:: var_is_introduced ;
var bool: aux2059_BOOL:: var_is_introduced ;
var bool: aux2060_BOOL:: var_is_introduced ;
var bool: aux2061_BOOL:: var_is_introduced ;
var {0,1}: aux2061_INTEGER :: var_is_introduced ;
var bool: aux2062_BOOL:: var_is_introduced ;
var bool: aux2063_BOOL:: var_is_introduced ;
var 5..62: aux2064:: var_is_introduced ;
var bool: aux2065_BOOL:: var_is_introduced ;
var bool: aux2066_BOOL:: var_is_introduced ;
var bool: aux2067_BOOL:: var_is_introduced ;
var {0,1}: aux2067_INTEGER :: var_is_introduced ;
var bool: aux2068_BOOL:: var_is_introduced ;
var bool: aux2069_BOOL:: var_is_introduced ;
var 3..60: aux2070:: var_is_introduced ;
var bool: aux2071_BOOL:: var_is_introduced ;
var bool: aux2072_BOOL:: var_is_introduced ;
var bool: aux2073_BOOL:: var_is_introduced ;
var {0,1}: aux2073_INTEGER :: var_is_introduced ;
var bool: aux2074_BOOL:: var_is_introduced ;
var bool: aux2075_BOOL:: var_is_introduced ;
var 4..61: aux2076:: var_is_introduced ;
var bool: aux2077_BOOL:: var_is_introduced ;
var bool: aux2078_BOOL:: var_is_introduced ;
var bool: aux2079_BOOL:: var_is_introduced ;
var {0,1}: aux2079_INTEGER :: var_is_introduced ;
var bool: aux2080_BOOL:: var_is_introduced ;
var bool: aux2081_BOOL:: var_is_introduced ;
var 3..60: aux2082:: var_is_introduced ;
var bool: aux2083_BOOL:: var_is_introduced ;
var bool: aux2084_BOOL:: var_is_introduced ;
var bool: aux2085_BOOL:: var_is_introduced ;
var {0,1}: aux2085_INTEGER :: var_is_introduced ;
var bool: aux2086_BOOL:: var_is_introduced ;
var bool: aux2087_BOOL:: var_is_introduced ;
var 2..59: aux2088:: var_is_introduced ;
var bool: aux2089_BOOL:: var_is_introduced ;
var bool: aux2090_BOOL:: var_is_introduced ;
var bool: aux2091_BOOL:: var_is_introduced ;
var {0,1}: aux2091_INTEGER :: var_is_introduced ;
var bool: aux2092_BOOL:: var_is_introduced ;
var bool: aux2093_BOOL:: var_is_introduced ;
var 1..58: aux2094:: var_is_introduced ;
var bool: aux2095_BOOL:: var_is_introduced ;
var bool: aux2096_BOOL:: var_is_introduced ;
var bool: aux2097_BOOL:: var_is_introduced ;
var {0,1}: aux2097_INTEGER :: var_is_introduced ;
var bool: aux2098_BOOL:: var_is_introduced ;
var bool: aux2099_BOOL:: var_is_introduced ;
var 3..60: aux2100:: var_is_introduced ;
var bool: aux2101_BOOL:: var_is_introduced ;
var bool: aux2102_BOOL:: var_is_introduced ;
var bool: aux2103_BOOL:: var_is_introduced ;
var {0,1}: aux2103_INTEGER :: var_is_introduced ;
var bool: aux2104_BOOL:: var_is_introduced ;
var bool: aux2105_BOOL:: var_is_introduced ;
var 4..61: aux2106:: var_is_introduced ;
var bool: aux2107_BOOL:: var_is_introduced ;
var bool: aux2108_BOOL:: var_is_introduced ;
var bool: aux2109_BOOL:: var_is_introduced ;
var {0,1}: aux2109_INTEGER :: var_is_introduced ;
var bool: aux2110_BOOL:: var_is_introduced ;
var bool: aux2111_BOOL:: var_is_introduced ;
var 4..61: aux2112:: var_is_introduced ;
var bool: aux2113_BOOL:: var_is_introduced ;
var bool: aux2114_BOOL:: var_is_introduced ;
var bool: aux2115_BOOL:: var_is_introduced ;
var {0,1}: aux2115_INTEGER :: var_is_introduced ;
var bool: aux2116_BOOL:: var_is_introduced ;
var bool: aux2117_BOOL:: var_is_introduced ;
var 2..59: aux2118:: var_is_introduced ;
var bool: aux2119_BOOL:: var_is_introduced ;
var bool: aux2120_BOOL:: var_is_introduced ;
var bool: aux2121_BOOL:: var_is_introduced ;
var {0,1}: aux2121_INTEGER :: var_is_introduced ;
var bool: aux2122_BOOL:: var_is_introduced ;
var bool: aux2123_BOOL:: var_is_introduced ;
var 3..60: aux2124:: var_is_introduced ;
var bool: aux2125_BOOL:: var_is_introduced ;
var bool: aux2126_BOOL:: var_is_introduced ;
var {0,1}: aux2126_INTEGER :: var_is_introduced ;
var bool: aux2127_BOOL:: var_is_introduced ;
var bool: aux2128_BOOL:: var_is_introduced ;
var 4..61: aux2129:: var_is_introduced ;
var bool: aux2130_BOOL:: var_is_introduced ;
var bool: aux2131_BOOL:: var_is_introduced ;
var bool: aux2132_BOOL:: var_is_introduced ;
var {0,1}: aux2132_INTEGER :: var_is_introduced ;
var bool: aux2133_BOOL:: var_is_introduced ;
var bool: aux2134_BOOL:: var_is_introduced ;
var 4..61: aux2135:: var_is_introduced ;
var bool: aux2136_BOOL:: var_is_introduced ;
var bool: aux2137_BOOL:: var_is_introduced ;
var bool: aux2138_BOOL:: var_is_introduced ;
var {0,1}: aux2138_INTEGER :: var_is_introduced ;
var bool: aux2139_BOOL:: var_is_introduced ;
var bool: aux2140_BOOL:: var_is_introduced ;
var 3..60: aux2141:: var_is_introduced ;
var bool: aux2142_BOOL:: var_is_introduced ;
var bool: aux2143_BOOL:: var_is_introduced ;
var bool: aux2144_BOOL:: var_is_introduced ;
var {0,1}: aux2144_INTEGER :: var_is_introduced ;
var bool: aux2145_BOOL:: var_is_introduced ;
var bool: aux2146_BOOL:: var_is_introduced ;
var 2..59: aux2147:: var_is_introduced ;
var bool: aux2148_BOOL:: var_is_introduced ;
var bool: aux2149_BOOL:: var_is_introduced ;
var bool: aux2150_BOOL:: var_is_introduced ;
var {0,1}: aux2150_INTEGER :: var_is_introduced ;
var bool: aux2151_BOOL:: var_is_introduced ;
var bool: aux2152_BOOL:: var_is_introduced ;
var 3..60: aux2153:: var_is_introduced ;
var bool: aux2154_BOOL:: var_is_introduced ;
var bool: aux2155_BOOL:: var_is_introduced ;
var bool: aux2156_BOOL:: var_is_introduced ;
var {0,1}: aux2156_INTEGER :: var_is_introduced ;
var bool: aux2157_BOOL:: var_is_introduced ;
var bool: aux2158_BOOL:: var_is_introduced ;
var 2..59: aux2159:: var_is_introduced ;
var bool: aux2160_BOOL:: var_is_introduced ;
var bool: aux2161_BOOL:: var_is_introduced ;
var bool: aux2162_BOOL:: var_is_introduced ;
var {0,1}: aux2162_INTEGER :: var_is_introduced ;
var bool: aux2163_BOOL:: var_is_introduced ;
var bool: aux2164_BOOL:: var_is_introduced ;
var 2..59: aux2165:: var_is_introduced ;
var bool: aux2166_BOOL:: var_is_introduced ;
var bool: aux2167_BOOL:: var_is_introduced ;
var bool: aux2168_BOOL:: var_is_introduced ;
var {0,1}: aux2168_INTEGER :: var_is_introduced ;
var bool: aux2169_BOOL:: var_is_introduced ;
var bool: aux2170_BOOL:: var_is_introduced ;
var 2..59: aux2171:: var_is_introduced ;
var bool: aux2172_BOOL:: var_is_introduced ;
var bool: aux2173_BOOL:: var_is_introduced ;
var bool: aux2174_BOOL:: var_is_introduced ;
var {0,1}: aux2174_INTEGER :: var_is_introduced ;
var bool: aux2175_BOOL:: var_is_introduced ;
var bool: aux2176_BOOL:: var_is_introduced ;
var 3..60: aux2177:: var_is_introduced ;
var bool: aux2178_BOOL:: var_is_introduced ;
var bool: aux2179_BOOL:: var_is_introduced ;
var bool: aux2180_BOOL:: var_is_introduced ;
var {0,1}: aux2180_INTEGER :: var_is_introduced ;
var bool: aux2181_BOOL:: var_is_introduced ;
var bool: aux2182_BOOL:: var_is_introduced ;
var 5..62: aux2183:: var_is_introduced ;
var bool: aux2184_BOOL:: var_is_introduced ;
var bool: aux2185_BOOL:: var_is_introduced ;
var bool: aux2186_BOOL:: var_is_introduced ;
var {0,1}: aux2186_INTEGER :: var_is_introduced ;
var bool: aux2187_BOOL:: var_is_introduced ;
var bool: aux2188_BOOL:: var_is_introduced ;
var 4..61: aux2189:: var_is_introduced ;
var bool: aux2190_BOOL:: var_is_introduced ;
var bool: aux2191_BOOL:: var_is_introduced ;
var bool: aux2192_BOOL:: var_is_introduced ;
var {0,1}: aux2192_INTEGER :: var_is_introduced ;
var bool: aux2193_BOOL:: var_is_introduced ;
var bool: aux2194_BOOL:: var_is_introduced ;
var 3..60: aux2195:: var_is_introduced ;
var bool: aux2196_BOOL:: var_is_introduced ;
var bool: aux2197_BOOL:: var_is_introduced ;
var bool: aux2198_BOOL:: var_is_introduced ;
var {0,1}: aux2198_INTEGER :: var_is_introduced ;
var bool: aux2199_BOOL:: var_is_introduced ;
var bool: aux2200_BOOL:: var_is_introduced ;
var 2..59: aux2201:: var_is_introduced ;
var bool: aux2202_BOOL:: var_is_introduced ;
var bool: aux2203_BOOL:: var_is_introduced ;
var bool: aux2204_BOOL:: var_is_introduced ;
var {0,1}: aux2204_INTEGER :: var_is_introduced ;
var bool: aux2205_BOOL:: var_is_introduced ;
var bool: aux2206_BOOL:: var_is_introduced ;
var 1..58: aux2207:: var_is_introduced ;
var bool: aux2208_BOOL:: var_is_introduced ;
var bool: aux2209_BOOL:: var_is_introduced ;
var bool: aux2210_BOOL:: var_is_introduced ;
var {0,1}: aux2210_INTEGER :: var_is_introduced ;
var bool: aux2211_BOOL:: var_is_introduced ;
var bool: aux2212_BOOL:: var_is_introduced ;
var 3..60: aux2213:: var_is_introduced ;
var bool: aux2214_BOOL:: var_is_introduced ;
var bool: aux2215_BOOL:: var_is_introduced ;
var bool: aux2216_BOOL:: var_is_introduced ;
var {0,1}: aux2216_INTEGER :: var_is_introduced ;
var bool: aux2217_BOOL:: var_is_introduced ;
var bool: aux2218_BOOL:: var_is_introduced ;
var 1..58: aux2219:: var_is_introduced ;
var bool: aux2220_BOOL:: var_is_introduced ;
var bool: aux2221_BOOL:: var_is_introduced ;
var bool: aux2222_BOOL:: var_is_introduced ;
var {0,1}: aux2222_INTEGER :: var_is_introduced ;
var bool: aux2223_BOOL:: var_is_introduced ;
var bool: aux2224_BOOL:: var_is_introduced ;
var 4..61: aux2225:: var_is_introduced ;
var bool: aux2226_BOOL:: var_is_introduced ;
var bool: aux2227_BOOL:: var_is_introduced ;
var bool: aux2228_BOOL:: var_is_introduced ;
var {0,1}: aux2228_INTEGER :: var_is_introduced ;
var bool: aux2229_BOOL:: var_is_introduced ;
var bool: aux2230_BOOL:: var_is_introduced ;
var 4..61: aux2231:: var_is_introduced ;
var bool: aux2232_BOOL:: var_is_introduced ;
var bool: aux2233_BOOL:: var_is_introduced ;
var bool: aux2234_BOOL:: var_is_introduced ;
var {0,1}: aux2234_INTEGER :: var_is_introduced ;
var bool: aux2235_BOOL:: var_is_introduced ;
var bool: aux2236_BOOL:: var_is_introduced ;
var 2..59: aux2237:: var_is_introduced ;
var bool: aux2238_BOOL:: var_is_introduced ;
var bool: aux2239_BOOL:: var_is_introduced ;
var bool: aux2240_BOOL:: var_is_introduced ;
var {0,1}: aux2240_INTEGER :: var_is_introduced ;
var bool: aux2241_BOOL:: var_is_introduced ;
var bool: aux2242_BOOL:: var_is_introduced ;
var 2..59: aux2243:: var_is_introduced ;
var bool: aux2244_BOOL:: var_is_introduced ;
var bool: aux2245_BOOL:: var_is_introduced ;
var {0,1}: aux2245_INTEGER :: var_is_introduced ;
var bool: aux2246_BOOL:: var_is_introduced ;
var bool: aux2247_BOOL:: var_is_introduced ;
var 4..61: aux2248:: var_is_introduced ;
var bool: aux2249_BOOL:: var_is_introduced ;
var bool: aux2250_BOOL:: var_is_introduced ;
var bool: aux2251_BOOL:: var_is_introduced ;
var {0,1}: aux2251_INTEGER :: var_is_introduced ;
var bool: aux2252_BOOL:: var_is_introduced ;
var bool: aux2253_BOOL:: var_is_introduced ;
var 4..61: aux2254:: var_is_introduced ;
var bool: aux2255_BOOL:: var_is_introduced ;
var bool: aux2256_BOOL:: var_is_introduced ;
var bool: aux2257_BOOL:: var_is_introduced ;
var {0,1}: aux2257_INTEGER :: var_is_introduced ;
var bool: aux2258_BOOL:: var_is_introduced ;
var bool: aux2259_BOOL:: var_is_introduced ;
var 3..60: aux2260:: var_is_introduced ;
var bool: aux2261_BOOL:: var_is_introduced ;
var bool: aux2262_BOOL:: var_is_introduced ;
var bool: aux2263_BOOL:: var_is_introduced ;
var {0,1}: aux2263_INTEGER :: var_is_introduced ;
var bool: aux2264_BOOL:: var_is_introduced ;
var bool: aux2265_BOOL:: var_is_introduced ;
var 2..59: aux2266:: var_is_introduced ;
var bool: aux2267_BOOL:: var_is_introduced ;
var bool: aux2268_BOOL:: var_is_introduced ;
var bool: aux2269_BOOL:: var_is_introduced ;
var {0,1}: aux2269_INTEGER :: var_is_introduced ;
var bool: aux2270_BOOL:: var_is_introduced ;
var bool: aux2271_BOOL:: var_is_introduced ;
var 3..60: aux2272:: var_is_introduced ;
var bool: aux2273_BOOL:: var_is_introduced ;
var bool: aux2274_BOOL:: var_is_introduced ;
var bool: aux2275_BOOL:: var_is_introduced ;
var {0,1}: aux2275_INTEGER :: var_is_introduced ;
var bool: aux2276_BOOL:: var_is_introduced ;
var bool: aux2277_BOOL:: var_is_introduced ;
var 2..59: aux2278:: var_is_introduced ;
var bool: aux2279_BOOL:: var_is_introduced ;
var bool: aux2280_BOOL:: var_is_introduced ;
var bool: aux2281_BOOL:: var_is_introduced ;
var {0,1}: aux2281_INTEGER :: var_is_introduced ;
var bool: aux2282_BOOL:: var_is_introduced ;
var bool: aux2283_BOOL:: var_is_introduced ;
var 3..60: aux2284:: var_is_introduced ;
var bool: aux2285_BOOL:: var_is_introduced ;
var bool: aux2286_BOOL:: var_is_introduced ;
var bool: aux2287_BOOL:: var_is_introduced ;
var {0,1}: aux2287_INTEGER :: var_is_introduced ;
var bool: aux2288_BOOL:: var_is_introduced ;
var bool: aux2289_BOOL:: var_is_introduced ;
var 2..59: aux2290:: var_is_introduced ;
var bool: aux2291_BOOL:: var_is_introduced ;
var bool: aux2292_BOOL:: var_is_introduced ;
var bool: aux2293_BOOL:: var_is_introduced ;
var {0,1}: aux2293_INTEGER :: var_is_introduced ;
var bool: aux2294_BOOL:: var_is_introduced ;
var bool: aux2295_BOOL:: var_is_introduced ;
var 3..60: aux2296:: var_is_introduced ;
var bool: aux2297_BOOL:: var_is_introduced ;
var bool: aux2298_BOOL:: var_is_introduced ;
var bool: aux2299_BOOL:: var_is_introduced ;
var {0,1}: aux2299_INTEGER :: var_is_introduced ;
var bool: aux2300_BOOL:: var_is_introduced ;
var bool: aux2301_BOOL:: var_is_introduced ;
var 5..62: aux2302:: var_is_introduced ;
var bool: aux2303_BOOL:: var_is_introduced ;
var bool: aux2304_BOOL:: var_is_introduced ;
var bool: aux2305_BOOL:: var_is_introduced ;
var {0,1}: aux2305_INTEGER :: var_is_introduced ;
var bool: aux2306_BOOL:: var_is_introduced ;
var bool: aux2307_BOOL:: var_is_introduced ;
var 4..61: aux2308:: var_is_introduced ;
var bool: aux2309_BOOL:: var_is_introduced ;
var bool: aux2310_BOOL:: var_is_introduced ;
var bool: aux2311_BOOL:: var_is_introduced ;
var {0,1}: aux2311_INTEGER :: var_is_introduced ;
var bool: aux2312_BOOL:: var_is_introduced ;
var bool: aux2313_BOOL:: var_is_introduced ;
var 3..60: aux2314:: var_is_introduced ;
var bool: aux2315_BOOL:: var_is_introduced ;
var bool: aux2316_BOOL:: var_is_introduced ;
var bool: aux2317_BOOL:: var_is_introduced ;
var {0,1}: aux2317_INTEGER :: var_is_introduced ;
var bool: aux2318_BOOL:: var_is_introduced ;
var bool: aux2319_BOOL:: var_is_introduced ;
var 2..59: aux2320:: var_is_introduced ;
var bool: aux2321_BOOL:: var_is_introduced ;
var bool: aux2322_BOOL:: var_is_introduced ;
var bool: aux2323_BOOL:: var_is_introduced ;
var {0,1}: aux2323_INTEGER :: var_is_introduced ;
var bool: aux2324_BOOL:: var_is_introduced ;
var bool: aux2325_BOOL:: var_is_introduced ;
var 1..58: aux2326:: var_is_introduced ;
var bool: aux2327_BOOL:: var_is_introduced ;
var bool: aux2328_BOOL:: var_is_introduced ;
var bool: aux2329_BOOL:: var_is_introduced ;
var {0,1}: aux2329_INTEGER :: var_is_introduced ;
var bool: aux2330_BOOL:: var_is_introduced ;
var bool: aux2331_BOOL:: var_is_introduced ;
var 3..60: aux2332:: var_is_introduced ;
var bool: aux2333_BOOL:: var_is_introduced ;
var bool: aux2334_BOOL:: var_is_introduced ;
var bool: aux2335_BOOL:: var_is_introduced ;
var {0,1}: aux2335_INTEGER :: var_is_introduced ;
var bool: aux2336_BOOL:: var_is_introduced ;
var bool: aux2337_BOOL:: var_is_introduced ;
var 1..58: aux2338:: var_is_introduced ;
var bool: aux2339_BOOL:: var_is_introduced ;
var bool: aux2340_BOOL:: var_is_introduced ;
var bool: aux2341_BOOL:: var_is_introduced ;
var {0,1}: aux2341_INTEGER :: var_is_introduced ;
var bool: aux2342_BOOL:: var_is_introduced ;
var bool: aux2343_BOOL:: var_is_introduced ;
var 4..61: aux2344:: var_is_introduced ;
var bool: aux2345_BOOL:: var_is_introduced ;
var bool: aux2346_BOOL:: var_is_introduced ;
var bool: aux2347_BOOL:: var_is_introduced ;
var {0,1}: aux2347_INTEGER :: var_is_introduced ;
var bool: aux2348_BOOL:: var_is_introduced ;
var bool: aux2349_BOOL:: var_is_introduced ;
var 4..61: aux2350:: var_is_introduced ;
var bool: aux2351_BOOL:: var_is_introduced ;
var bool: aux2352_BOOL:: var_is_introduced ;
var bool: aux2353_BOOL:: var_is_introduced ;
var {0,1}: aux2353_INTEGER :: var_is_introduced ;
var bool: aux2354_BOOL:: var_is_introduced ;
var bool: aux2355_BOOL:: var_is_introduced ;
var 2..59: aux2356:: var_is_introduced ;
var bool: aux2357_BOOL:: var_is_introduced ;
var bool: aux2358_BOOL:: var_is_introduced ;
var bool: aux2359_BOOL:: var_is_introduced ;
var {0,1}: aux2359_INTEGER :: var_is_introduced ;
var bool: aux2360_BOOL:: var_is_introduced ;
var bool: aux2361_BOOL:: var_is_introduced ;
var 2..59: aux2362:: var_is_introduced ;
var bool: aux2363_BOOL:: var_is_introduced ;
var bool: aux2364_BOOL:: var_is_introduced ;
var {0,1}: aux2364_INTEGER :: var_is_introduced ;
var bool: aux2365_BOOL:: var_is_introduced ;
var bool: aux2366_BOOL:: var_is_introduced ;
var 4..61: aux2367:: var_is_introduced ;
var bool: aux2368_BOOL:: var_is_introduced ;
var bool: aux2369_BOOL:: var_is_introduced ;
var bool: aux2370_BOOL:: var_is_introduced ;
var {0,1}: aux2370_INTEGER :: var_is_introduced ;
var bool: aux2371_BOOL:: var_is_introduced ;
var bool: aux2372_BOOL:: var_is_introduced ;
var 4..61: aux2373:: var_is_introduced ;
var bool: aux2374_BOOL:: var_is_introduced ;
var bool: aux2375_BOOL:: var_is_introduced ;
var bool: aux2376_BOOL:: var_is_introduced ;
var {0,1}: aux2376_INTEGER :: var_is_introduced ;
var bool: aux2377_BOOL:: var_is_introduced ;
var bool: aux2378_BOOL:: var_is_introduced ;
var 3..60: aux2379:: var_is_introduced ;
var bool: aux2380_BOOL:: var_is_introduced ;
var bool: aux2381_BOOL:: var_is_introduced ;
var bool: aux2382_BOOL:: var_is_introduced ;
var {0,1}: aux2382_INTEGER :: var_is_introduced ;
var bool: aux2383_BOOL:: var_is_introduced ;
var bool: aux2384_BOOL:: var_is_introduced ;
var 2..59: aux2385:: var_is_introduced ;
var bool: aux2386_BOOL:: var_is_introduced ;
var bool: aux2387_BOOL:: var_is_introduced ;
var bool: aux2388_BOOL:: var_is_introduced ;
var {0,1}: aux2388_INTEGER :: var_is_introduced ;
var bool: aux2389_BOOL:: var_is_introduced ;
var bool: aux2390_BOOL:: var_is_introduced ;
var 3..60: aux2391:: var_is_introduced ;
var bool: aux2392_BOOL:: var_is_introduced ;
var bool: aux2393_BOOL:: var_is_introduced ;
var bool: aux2394_BOOL:: var_is_introduced ;
var {0,1}: aux2394_INTEGER :: var_is_introduced ;
var bool: aux2395_BOOL:: var_is_introduced ;
var bool: aux2396_BOOL:: var_is_introduced ;
var 2..59: aux2397:: var_is_introduced ;
var bool: aux2398_BOOL:: var_is_introduced ;
var bool: aux2399_BOOL:: var_is_introduced ;
var bool: aux2400_BOOL:: var_is_introduced ;
var {0,1}: aux2400_INTEGER :: var_is_introduced ;
var bool: aux2401_BOOL:: var_is_introduced ;
var bool: aux2402_BOOL:: var_is_introduced ;
var 3..60: aux2403:: var_is_introduced ;
var bool: aux2404_BOOL:: var_is_introduced ;
var bool: aux2405_BOOL:: var_is_introduced ;
var bool: aux2406_BOOL:: var_is_introduced ;
var {0,1}: aux2406_INTEGER :: var_is_introduced ;
var bool: aux2407_BOOL:: var_is_introduced ;
var bool: aux2408_BOOL:: var_is_introduced ;
var 2..59: aux2409:: var_is_introduced ;
var bool: aux2410_BOOL:: var_is_introduced ;
var bool: aux2411_BOOL:: var_is_introduced ;
var bool: aux2412_BOOL:: var_is_introduced ;
var {0,1}: aux2412_INTEGER :: var_is_introduced ;
var bool: aux2413_BOOL:: var_is_introduced ;
var bool: aux2414_BOOL:: var_is_introduced ;
var 2..59: aux2415:: var_is_introduced ;
var bool: aux2416_BOOL:: var_is_introduced ;
var bool: aux2417_BOOL:: var_is_introduced ;
var bool: aux2418_BOOL:: var_is_introduced ;
var {0,1}: aux2418_INTEGER :: var_is_introduced ;
var bool: aux2419_BOOL:: var_is_introduced ;
var bool: aux2420_BOOL:: var_is_introduced ;
var 5..62: aux2421:: var_is_introduced ;
var bool: aux2422_BOOL:: var_is_introduced ;
var bool: aux2423_BOOL:: var_is_introduced ;
var bool: aux2424_BOOL:: var_is_introduced ;
var {0,1}: aux2424_INTEGER :: var_is_introduced ;
var bool: aux2425_BOOL:: var_is_introduced ;
var bool: aux2426_BOOL:: var_is_introduced ;
var 3..60: aux2427:: var_is_introduced ;
var bool: aux2428_BOOL:: var_is_introduced ;
var bool: aux2429_BOOL:: var_is_introduced ;
var bool: aux2430_BOOL:: var_is_introduced ;
var {0,1}: aux2430_INTEGER :: var_is_introduced ;
var bool: aux2431_BOOL:: var_is_introduced ;
var bool: aux2432_BOOL:: var_is_introduced ;
var 4..61: aux2433:: var_is_introduced ;
var bool: aux2434_BOOL:: var_is_introduced ;
var bool: aux2435_BOOL:: var_is_introduced ;
var bool: aux2436_BOOL:: var_is_introduced ;
var {0,1}: aux2436_INTEGER :: var_is_introduced ;
var bool: aux2437_BOOL:: var_is_introduced ;
var bool: aux2438_BOOL:: var_is_introduced ;
var 3..60: aux2439:: var_is_introduced ;
var bool: aux2440_BOOL:: var_is_introduced ;
var bool: aux2441_BOOL:: var_is_introduced ;
var bool: aux2442_BOOL:: var_is_introduced ;
var {0,1}: aux2442_INTEGER :: var_is_introduced ;
var bool: aux2443_BOOL:: var_is_introduced ;
var bool: aux2444_BOOL:: var_is_introduced ;
var 2..59: aux2445:: var_is_introduced ;
var bool: aux2446_BOOL:: var_is_introduced ;
var bool: aux2447_BOOL:: var_is_introduced ;
var bool: aux2448_BOOL:: var_is_introduced ;
var {0,1}: aux2448_INTEGER :: var_is_introduced ;
var bool: aux2449_BOOL:: var_is_introduced ;
var bool: aux2450_BOOL:: var_is_introduced ;
var 1..58: aux2451:: var_is_introduced ;
var bool: aux2452_BOOL:: var_is_introduced ;
var bool: aux2453_BOOL:: var_is_introduced ;
var bool: aux2454_BOOL:: var_is_introduced ;
var {0,1}: aux2454_INTEGER :: var_is_introduced ;
var bool: aux2455_BOOL:: var_is_introduced ;
var bool: aux2456_BOOL:: var_is_introduced ;
var 3..60: aux2457:: var_is_introduced ;
var bool: aux2458_BOOL:: var_is_introduced ;
var bool: aux2459_BOOL:: var_is_introduced ;
var bool: aux2460_BOOL:: var_is_introduced ;
var {0,1}: aux2460_INTEGER :: var_is_introduced ;
var bool: aux2461_BOOL:: var_is_introduced ;
var bool: aux2462_BOOL:: var_is_introduced ;
var 4..61: aux2463:: var_is_introduced ;
var bool: aux2464_BOOL:: var_is_introduced ;
var bool: aux2465_BOOL:: var_is_introduced ;
var bool: aux2466_BOOL:: var_is_introduced ;
var {0,1}: aux2466_INTEGER :: var_is_introduced ;
var bool: aux2467_BOOL:: var_is_introduced ;
var bool: aux2468_BOOL:: var_is_introduced ;
var 1..58: aux2469:: var_is_introduced ;
var bool: aux2470_BOOL:: var_is_introduced ;
var bool: aux2471_BOOL:: var_is_introduced ;
var bool: aux2472_BOOL:: var_is_introduced ;
var {0,1}: aux2472_INTEGER :: var_is_introduced ;
var bool: aux2473_BOOL:: var_is_introduced ;
var bool: aux2474_BOOL:: var_is_introduced ;
var 4..61: aux2475:: var_is_introduced ;
var bool: aux2476_BOOL:: var_is_introduced ;
var bool: aux2477_BOOL:: var_is_introduced ;
var bool: aux2478_BOOL:: var_is_introduced ;
var {0,1}: aux2478_INTEGER :: var_is_introduced ;
var bool: aux2479_BOOL:: var_is_introduced ;
var bool: aux2480_BOOL:: var_is_introduced ;
var 3..60: aux2481:: var_is_introduced ;
var bool: aux2482_BOOL:: var_is_introduced ;
var bool: aux2483_BOOL:: var_is_introduced ;
var {0,1}: aux2483_INTEGER :: var_is_introduced ;
var bool: aux2484_BOOL:: var_is_introduced ;
var bool: aux2485_BOOL:: var_is_introduced ;
var 4..61: aux2486:: var_is_introduced ;
var bool: aux2487_BOOL:: var_is_introduced ;
var bool: aux2488_BOOL:: var_is_introduced ;
var bool: aux2489_BOOL:: var_is_introduced ;
var {0,1}: aux2489_INTEGER :: var_is_introduced ;
var bool: aux2490_BOOL:: var_is_introduced ;
var bool: aux2491_BOOL:: var_is_introduced ;
var 4..61: aux2492:: var_is_introduced ;
var bool: aux2493_BOOL:: var_is_introduced ;
var bool: aux2494_BOOL:: var_is_introduced ;
var bool: aux2495_BOOL:: var_is_introduced ;
var {0,1}: aux2495_INTEGER :: var_is_introduced ;
var bool: aux2496_BOOL:: var_is_introduced ;
var bool: aux2497_BOOL:: var_is_introduced ;
var 3..60: aux2498:: var_is_introduced ;
var bool: aux2499_BOOL:: var_is_introduced ;
var bool: aux2500_BOOL:: var_is_introduced ;
var bool: aux2501_BOOL:: var_is_introduced ;
var {0,1}: aux2501_INTEGER :: var_is_introduced ;
var bool: aux2502_BOOL:: var_is_introduced ;
var bool: aux2503_BOOL:: var_is_introduced ;
var 2..59: aux2504:: var_is_introduced ;
var bool: aux2505_BOOL:: var_is_introduced ;
var bool: aux2506_BOOL:: var_is_introduced ;
var bool: aux2507_BOOL:: var_is_introduced ;
var {0,1}: aux2507_INTEGER :: var_is_introduced ;
var bool: aux2508_BOOL:: var_is_introduced ;
var bool: aux2509_BOOL:: var_is_introduced ;
var 3..60: aux2510:: var_is_introduced ;
var bool: aux2511_BOOL:: var_is_introduced ;
var bool: aux2512_BOOL:: var_is_introduced ;
var bool: aux2513_BOOL:: var_is_introduced ;
var {0,1}: aux2513_INTEGER :: var_is_introduced ;
var bool: aux2514_BOOL:: var_is_introduced ;
var bool: aux2515_BOOL:: var_is_introduced ;
var 2..59: aux2516:: var_is_introduced ;
var bool: aux2517_BOOL:: var_is_introduced ;
var bool: aux2518_BOOL:: var_is_introduced ;
var bool: aux2519_BOOL:: var_is_introduced ;
var {0,1}: aux2519_INTEGER :: var_is_introduced ;
var bool: aux2520_BOOL:: var_is_introduced ;
var bool: aux2521_BOOL:: var_is_introduced ;
var 3..60: aux2522:: var_is_introduced ;
var bool: aux2523_BOOL:: var_is_introduced ;
var bool: aux2524_BOOL:: var_is_introduced ;
var bool: aux2525_BOOL:: var_is_introduced ;
var {0,1}: aux2525_INTEGER :: var_is_introduced ;
var bool: aux2526_BOOL:: var_is_introduced ;
var bool: aux2527_BOOL:: var_is_introduced ;
var 2..59: aux2528:: var_is_introduced ;
var bool: aux2529_BOOL:: var_is_introduced ;
var bool: aux2530_BOOL:: var_is_introduced ;
var bool: aux2531_BOOL:: var_is_introduced ;
var {0,1}: aux2531_INTEGER :: var_is_introduced ;
var bool: aux2532_BOOL:: var_is_introduced ;
var bool: aux2533_BOOL:: var_is_introduced ;
var 2..59: aux2534:: var_is_introduced ;
var bool: aux2535_BOOL:: var_is_introduced ;
var bool: aux2536_BOOL:: var_is_introduced ;
var bool: aux2537_BOOL:: var_is_introduced ;
var {0,1}: aux2537_INTEGER :: var_is_introduced ;
var bool: aux2538_BOOL:: var_is_introduced ;
var bool: aux2539_BOOL:: var_is_introduced ;
var 5..62: aux2540:: var_is_introduced ;
var bool: aux2541_BOOL:: var_is_introduced ;
var bool: aux2542_BOOL:: var_is_introduced ;
var bool: aux2543_BOOL:: var_is_introduced ;
var {0,1}: aux2543_INTEGER :: var_is_introduced ;
var bool: aux2544_BOOL:: var_is_introduced ;
var bool: aux2545_BOOL:: var_is_introduced ;
var 3..60: aux2546:: var_is_introduced ;
var bool: aux2547_BOOL:: var_is_introduced ;
var bool: aux2548_BOOL:: var_is_introduced ;
var bool: aux2549_BOOL:: var_is_introduced ;
var {0,1}: aux2549_INTEGER :: var_is_introduced ;
var bool: aux2550_BOOL:: var_is_introduced ;
var bool: aux2551_BOOL:: var_is_introduced ;
var 4..61: aux2552:: var_is_introduced ;
var bool: aux2553_BOOL:: var_is_introduced ;
var bool: aux2554_BOOL:: var_is_introduced ;
var bool: aux2555_BOOL:: var_is_introduced ;
var {0,1}: aux2555_INTEGER :: var_is_introduced ;
var bool: aux2556_BOOL:: var_is_introduced ;
var bool: aux2557_BOOL:: var_is_introduced ;
var 2..59: aux2558:: var_is_introduced ;
var bool: aux2559_BOOL:: var_is_introduced ;
var bool: aux2560_BOOL:: var_is_introduced ;
var bool: aux2561_BOOL:: var_is_introduced ;
var {0,1}: aux2561_INTEGER :: var_is_introduced ;
var bool: aux2562_BOOL:: var_is_introduced ;
var bool: aux2563_BOOL:: var_is_introduced ;
var 1..58: aux2564:: var_is_introduced ;
var bool: aux2565_BOOL:: var_is_introduced ;
var bool: aux2566_BOOL:: var_is_introduced ;
var bool: aux2567_BOOL:: var_is_introduced ;
var {0,1}: aux2567_INTEGER :: var_is_introduced ;
var bool: aux2568_BOOL:: var_is_introduced ;
var bool: aux2569_BOOL:: var_is_introduced ;
var 3..60: aux2570:: var_is_introduced ;
var bool: aux2571_BOOL:: var_is_introduced ;
var bool: aux2572_BOOL:: var_is_introduced ;
var bool: aux2573_BOOL:: var_is_introduced ;
var {0,1}: aux2573_INTEGER :: var_is_introduced ;
var bool: aux2574_BOOL:: var_is_introduced ;
var bool: aux2575_BOOL:: var_is_introduced ;
var 1..58: aux2576:: var_is_introduced ;
var bool: aux2577_BOOL:: var_is_introduced ;
var bool: aux2578_BOOL:: var_is_introduced ;
var bool: aux2579_BOOL:: var_is_introduced ;
var {0,1}: aux2579_INTEGER :: var_is_introduced ;
var bool: aux2580_BOOL:: var_is_introduced ;
var bool: aux2581_BOOL:: var_is_introduced ;
var 4..61: aux2582:: var_is_introduced ;
var bool: aux2583_BOOL:: var_is_introduced ;
var bool: aux2584_BOOL:: var_is_introduced ;
var bool: aux2585_BOOL:: var_is_introduced ;
var {0,1}: aux2585_INTEGER :: var_is_introduced ;
var bool: aux2586_BOOL:: var_is_introduced ;
var bool: aux2587_BOOL:: var_is_introduced ;
var 4..61: aux2588:: var_is_introduced ;
var bool: aux2589_BOOL:: var_is_introduced ;
var bool: aux2590_BOOL:: var_is_introduced ;
var bool: aux2591_BOOL:: var_is_introduced ;
var {0,1}: aux2591_INTEGER :: var_is_introduced ;
var bool: aux2592_BOOL:: var_is_introduced ;
var bool: aux2593_BOOL:: var_is_introduced ;
var 2..59: aux2594:: var_is_introduced ;
var bool: aux2595_BOOL:: var_is_introduced ;
var bool: aux2596_BOOL:: var_is_introduced ;
var bool: aux2597_BOOL:: var_is_introduced ;
var {0,1}: aux2597_INTEGER :: var_is_introduced ;
var bool: aux2598_BOOL:: var_is_introduced ;
var bool: aux2599_BOOL:: var_is_introduced ;
var 2..59: aux2600:: var_is_introduced ;
var bool: aux2601_BOOL:: var_is_introduced ;
var bool: aux2602_BOOL:: var_is_introduced ;
var {0,1}: aux2602_INTEGER :: var_is_introduced ;
var bool: aux2603_BOOL:: var_is_introduced ;
var bool: aux2604_BOOL:: var_is_introduced ;
var 4..61: aux2605:: var_is_introduced ;
var bool: aux2606_BOOL:: var_is_introduced ;
var bool: aux2607_BOOL:: var_is_introduced ;
var bool: aux2608_BOOL:: var_is_introduced ;
var {0,1}: aux2608_INTEGER :: var_is_introduced ;
var bool: aux2609_BOOL:: var_is_introduced ;
var bool: aux2610_BOOL:: var_is_introduced ;
var 4..61: aux2611:: var_is_introduced ;
var bool: aux2612_BOOL:: var_is_introduced ;
var bool: aux2613_BOOL:: var_is_introduced ;
var bool: aux2614_BOOL:: var_is_introduced ;
var {0,1}: aux2614_INTEGER :: var_is_introduced ;
var bool: aux2615_BOOL:: var_is_introduced ;
var bool: aux2616_BOOL:: var_is_introduced ;
var 3..60: aux2617:: var_is_introduced ;
var bool: aux2618_BOOL:: var_is_introduced ;
var bool: aux2619_BOOL:: var_is_introduced ;
var bool: aux2620_BOOL:: var_is_introduced ;
var {0,1}: aux2620_INTEGER :: var_is_introduced ;
var bool: aux2621_BOOL:: var_is_introduced ;
var bool: aux2622_BOOL:: var_is_introduced ;
var 2..59: aux2623:: var_is_introduced ;
var bool: aux2624_BOOL:: var_is_introduced ;
var bool: aux2625_BOOL:: var_is_introduced ;
var bool: aux2626_BOOL:: var_is_introduced ;
var {0,1}: aux2626_INTEGER :: var_is_introduced ;
var bool: aux2627_BOOL:: var_is_introduced ;
var bool: aux2628_BOOL:: var_is_introduced ;
var 3..60: aux2629:: var_is_introduced ;
var bool: aux2630_BOOL:: var_is_introduced ;
var bool: aux2631_BOOL:: var_is_introduced ;
var bool: aux2632_BOOL:: var_is_introduced ;
var {0,1}: aux2632_INTEGER :: var_is_introduced ;
var bool: aux2633_BOOL:: var_is_introduced ;
var bool: aux2634_BOOL:: var_is_introduced ;
var 2..59: aux2635:: var_is_introduced ;
var bool: aux2636_BOOL:: var_is_introduced ;
var bool: aux2637_BOOL:: var_is_introduced ;
var bool: aux2638_BOOL:: var_is_introduced ;
var {0,1}: aux2638_INTEGER :: var_is_introduced ;
var bool: aux2639_BOOL:: var_is_introduced ;
var bool: aux2640_BOOL:: var_is_introduced ;
var 3..60: aux2641:: var_is_introduced ;
var bool: aux2642_BOOL:: var_is_introduced ;
var bool: aux2643_BOOL:: var_is_introduced ;
var bool: aux2644_BOOL:: var_is_introduced ;
var {0,1}: aux2644_INTEGER :: var_is_introduced ;
var bool: aux2645_BOOL:: var_is_introduced ;
var bool: aux2646_BOOL:: var_is_introduced ;
var 2..59: aux2647:: var_is_introduced ;
var bool: aux2648_BOOL:: var_is_introduced ;
var bool: aux2649_BOOL:: var_is_introduced ;
var bool: aux2650_BOOL:: var_is_introduced ;
var {0,1}: aux2650_INTEGER :: var_is_introduced ;
var bool: aux2651_BOOL:: var_is_introduced ;
var bool: aux2652_BOOL:: var_is_introduced ;
var 3..60: aux2653:: var_is_introduced ;
var bool: aux2654_BOOL:: var_is_introduced ;
var bool: aux2655_BOOL:: var_is_introduced ;
var bool: aux2656_BOOL:: var_is_introduced ;
var {0,1}: aux2656_INTEGER :: var_is_introduced ;
var bool: aux2657_BOOL:: var_is_introduced ;
var bool: aux2658_BOOL:: var_is_introduced ;
var 5..62: aux2659:: var_is_introduced ;
var bool: aux2660_BOOL:: var_is_introduced ;
var bool: aux2661_BOOL:: var_is_introduced ;
var bool: aux2662_BOOL:: var_is_introduced ;
var {0,1}: aux2662_INTEGER :: var_is_introduced ;
var bool: aux2663_BOOL:: var_is_introduced ;
var bool: aux2664_BOOL:: var_is_introduced ;
var 4..61: aux2665:: var_is_introduced ;
var bool: aux2666_BOOL:: var_is_introduced ;
var bool: aux2667_BOOL:: var_is_introduced ;
var bool: aux2668_BOOL:: var_is_introduced ;
var {0,1}: aux2668_INTEGER :: var_is_introduced ;
var bool: aux2669_BOOL:: var_is_introduced ;
var bool: aux2670_BOOL:: var_is_introduced ;
var 3..60: aux2671:: var_is_introduced ;
var bool: aux2672_BOOL:: var_is_introduced ;
var bool: aux2673_BOOL:: var_is_introduced ;
var bool: aux2674_BOOL:: var_is_introduced ;
var {0,1}: aux2674_INTEGER :: var_is_introduced ;
var bool: aux2675_BOOL:: var_is_introduced ;
var bool: aux2676_BOOL:: var_is_introduced ;
var 2..59: aux2677:: var_is_introduced ;
var bool: aux2678_BOOL:: var_is_introduced ;
var bool: aux2679_BOOL:: var_is_introduced ;
var bool: aux2680_BOOL:: var_is_introduced ;
var {0,1}: aux2680_INTEGER :: var_is_introduced ;
var bool: aux2681_BOOL:: var_is_introduced ;
var bool: aux2682_BOOL:: var_is_introduced ;
var 1..58: aux2683:: var_is_introduced ;
var bool: aux2684_BOOL:: var_is_introduced ;
var bool: aux2685_BOOL:: var_is_introduced ;
var bool: aux2686_BOOL:: var_is_introduced ;
var {0,1}: aux2686_INTEGER :: var_is_introduced ;
var bool: aux2687_BOOL:: var_is_introduced ;
var bool: aux2688_BOOL:: var_is_introduced ;
var 3..60: aux2689:: var_is_introduced ;
var bool: aux2690_BOOL:: var_is_introduced ;
var bool: aux2691_BOOL:: var_is_introduced ;
var bool: aux2692_BOOL:: var_is_introduced ;
var {0,1}: aux2692_INTEGER :: var_is_introduced ;
var bool: aux2693_BOOL:: var_is_introduced ;
var bool: aux2694_BOOL:: var_is_introduced ;
var 1..58: aux2695:: var_is_introduced ;
var bool: aux2696_BOOL:: var_is_introduced ;
var bool: aux2697_BOOL:: var_is_introduced ;
var bool: aux2698_BOOL:: var_is_introduced ;
var {0,1}: aux2698_INTEGER :: var_is_introduced ;
var bool: aux2699_BOOL:: var_is_introduced ;
var bool: aux2700_BOOL:: var_is_introduced ;
var 4..61: aux2701:: var_is_introduced ;
var bool: aux2702_BOOL:: var_is_introduced ;
var bool: aux2703_BOOL:: var_is_introduced ;
var bool: aux2704_BOOL:: var_is_introduced ;
var {0,1}: aux2704_INTEGER :: var_is_introduced ;
var bool: aux2705_BOOL:: var_is_introduced ;
var bool: aux2706_BOOL:: var_is_introduced ;
var 4..61: aux2707:: var_is_introduced ;
var bool: aux2708_BOOL:: var_is_introduced ;
var bool: aux2709_BOOL:: var_is_introduced ;
var bool: aux2710_BOOL:: var_is_introduced ;
var {0,1}: aux2710_INTEGER :: var_is_introduced ;
var bool: aux2711_BOOL:: var_is_introduced ;
var bool: aux2712_BOOL:: var_is_introduced ;
var 2..59: aux2713:: var_is_introduced ;
var bool: aux2714_BOOL:: var_is_introduced ;
var bool: aux2715_BOOL:: var_is_introduced ;
var bool: aux2716_BOOL:: var_is_introduced ;
var {0,1}: aux2716_INTEGER :: var_is_introduced ;
var bool: aux2717_BOOL:: var_is_introduced ;
var bool: aux2718_BOOL:: var_is_introduced ;
var 3..60: aux2719:: var_is_introduced ;
var bool: aux2720_BOOL:: var_is_introduced ;
var bool: aux2721_BOOL:: var_is_introduced ;
var {0,1}: aux2721_INTEGER :: var_is_introduced ;
var bool: aux2722_BOOL:: var_is_introduced ;
var bool: aux2723_BOOL:: var_is_introduced ;
var 4..61: aux2724:: var_is_introduced ;
var bool: aux2725_BOOL:: var_is_introduced ;
var bool: aux2726_BOOL:: var_is_introduced ;
var bool: aux2727_BOOL:: var_is_introduced ;
var {0,1}: aux2727_INTEGER :: var_is_introduced ;
var bool: aux2728_BOOL:: var_is_introduced ;
var bool: aux2729_BOOL:: var_is_introduced ;
var 4..61: aux2730:: var_is_introduced ;
var bool: aux2731_BOOL:: var_is_introduced ;
var bool: aux2732_BOOL:: var_is_introduced ;
var bool: aux2733_BOOL:: var_is_introduced ;
var {0,1}: aux2733_INTEGER :: var_is_introduced ;
var bool: aux2734_BOOL:: var_is_introduced ;
var bool: aux2735_BOOL:: var_is_introduced ;
var 3..60: aux2736:: var_is_introduced ;
var bool: aux2737_BOOL:: var_is_introduced ;
var bool: aux2738_BOOL:: var_is_introduced ;
var bool: aux2739_BOOL:: var_is_introduced ;
var {0,1}: aux2739_INTEGER :: var_is_introduced ;
var bool: aux2740_BOOL:: var_is_introduced ;
var bool: aux2741_BOOL:: var_is_introduced ;
var 2..59: aux2742:: var_is_introduced ;
var bool: aux2743_BOOL:: var_is_introduced ;
var bool: aux2744_BOOL:: var_is_introduced ;
var bool: aux2745_BOOL:: var_is_introduced ;
var {0,1}: aux2745_INTEGER :: var_is_introduced ;
var bool: aux2746_BOOL:: var_is_introduced ;
var bool: aux2747_BOOL:: var_is_introduced ;
var 3..60: aux2748:: var_is_introduced ;
var bool: aux2749_BOOL:: var_is_introduced ;
var bool: aux2750_BOOL:: var_is_introduced ;
var bool: aux2751_BOOL:: var_is_introduced ;
var {0,1}: aux2751_INTEGER :: var_is_introduced ;
var bool: aux2752_BOOL:: var_is_introduced ;
var bool: aux2753_BOOL:: var_is_introduced ;
var 2..59: aux2754:: var_is_introduced ;
var bool: aux2755_BOOL:: var_is_introduced ;
var bool: aux2756_BOOL:: var_is_introduced ;
var bool: aux2757_BOOL:: var_is_introduced ;
var {0,1}: aux2757_INTEGER :: var_is_introduced ;
var bool: aux2758_BOOL:: var_is_introduced ;
var bool: aux2759_BOOL:: var_is_introduced ;
var 3..60: aux2760:: var_is_introduced ;
var bool: aux2761_BOOL:: var_is_introduced ;
var bool: aux2762_BOOL:: var_is_introduced ;
var bool: aux2763_BOOL:: var_is_introduced ;
var {0,1}: aux2763_INTEGER :: var_is_introduced ;
var bool: aux2764_BOOL:: var_is_introduced ;
var bool: aux2765_BOOL:: var_is_introduced ;
var 2..59: aux2766:: var_is_introduced ;
var bool: aux2767_BOOL:: var_is_introduced ;
var bool: aux2768_BOOL:: var_is_introduced ;
var bool: aux2769_BOOL:: var_is_introduced ;
var {0,1}: aux2769_INTEGER :: var_is_introduced ;
var bool: aux2770_BOOL:: var_is_introduced ;
var bool: aux2771_BOOL:: var_is_introduced ;
var 2..59: aux2772:: var_is_introduced ;
var bool: aux2773_BOOL:: var_is_introduced ;
var bool: aux2774_BOOL:: var_is_introduced ;
var bool: aux2775_BOOL:: var_is_introduced ;
var {0,1}: aux2775_INTEGER :: var_is_introduced ;
var bool: aux2776_BOOL:: var_is_introduced ;
var bool: aux2777_BOOL:: var_is_introduced ;
var 5..62: aux2778:: var_is_introduced ;
var bool: aux2779_BOOL:: var_is_introduced ;
var bool: aux2780_BOOL:: var_is_introduced ;
var bool: aux2781_BOOL:: var_is_introduced ;
var {0,1}: aux2781_INTEGER :: var_is_introduced ;
var bool: aux2782_BOOL:: var_is_introduced ;
var bool: aux2783_BOOL:: var_is_introduced ;
var 3..60: aux2784:: var_is_introduced ;
var bool: aux2785_BOOL:: var_is_introduced ;
var bool: aux2786_BOOL:: var_is_introduced ;
var bool: aux2787_BOOL:: var_is_introduced ;
var {0,1}: aux2787_INTEGER :: var_is_introduced ;
var bool: aux2788_BOOL:: var_is_introduced ;
var bool: aux2789_BOOL:: var_is_introduced ;
var 4..61: aux2790:: var_is_introduced ;
var bool: aux2791_BOOL:: var_is_introduced ;
var bool: aux2792_BOOL:: var_is_introduced ;
var bool: aux2793_BOOL:: var_is_introduced ;
var {0,1}: aux2793_INTEGER :: var_is_introduced ;
var bool: aux2794_BOOL:: var_is_introduced ;
var bool: aux2795_BOOL:: var_is_introduced ;
var 3..60: aux2796:: var_is_introduced ;
var bool: aux2797_BOOL:: var_is_introduced ;
var bool: aux2798_BOOL:: var_is_introduced ;
var bool: aux2799_BOOL:: var_is_introduced ;
var {0,1}: aux2799_INTEGER :: var_is_introduced ;
var bool: aux2800_BOOL:: var_is_introduced ;
var bool: aux2801_BOOL:: var_is_introduced ;
var 2..59: aux2802:: var_is_introduced ;
var bool: aux2803_BOOL:: var_is_introduced ;
var bool: aux2804_BOOL:: var_is_introduced ;
var bool: aux2805_BOOL:: var_is_introduced ;
var {0,1}: aux2805_INTEGER :: var_is_introduced ;
var bool: aux2806_BOOL:: var_is_introduced ;
var bool: aux2807_BOOL:: var_is_introduced ;
var 1..58: aux2808:: var_is_introduced ;
var bool: aux2809_BOOL:: var_is_introduced ;
var bool: aux2810_BOOL:: var_is_introduced ;
var bool: aux2811_BOOL:: var_is_introduced ;
var {0,1}: aux2811_INTEGER :: var_is_introduced ;
var bool: aux2812_BOOL:: var_is_introduced ;
var bool: aux2813_BOOL:: var_is_introduced ;
var 1..58: aux2814:: var_is_introduced ;
var bool: aux2815_BOOL:: var_is_introduced ;
var bool: aux2816_BOOL:: var_is_introduced ;
var bool: aux2817_BOOL:: var_is_introduced ;
var {0,1}: aux2817_INTEGER :: var_is_introduced ;
var bool: aux2818_BOOL:: var_is_introduced ;
var bool: aux2819_BOOL:: var_is_introduced ;
var 4..61: aux2820:: var_is_introduced ;
var bool: aux2821_BOOL:: var_is_introduced ;
var bool: aux2822_BOOL:: var_is_introduced ;
var bool: aux2823_BOOL:: var_is_introduced ;
var {0,1}: aux2823_INTEGER :: var_is_introduced ;
var bool: aux2824_BOOL:: var_is_introduced ;
var bool: aux2825_BOOL:: var_is_introduced ;
var 4..61: aux2826:: var_is_introduced ;
var bool: aux2827_BOOL:: var_is_introduced ;
var bool: aux2828_BOOL:: var_is_introduced ;
var bool: aux2829_BOOL:: var_is_introduced ;
var {0,1}: aux2829_INTEGER :: var_is_introduced ;
var bool: aux2830_BOOL:: var_is_introduced ;
var bool: aux2831_BOOL:: var_is_introduced ;
var 2..59: aux2832:: var_is_introduced ;
var bool: aux2833_BOOL:: var_is_introduced ;
var bool: aux2834_BOOL:: var_is_introduced ;
var bool: aux2835_BOOL:: var_is_introduced ;
var {0,1}: aux2835_INTEGER :: var_is_introduced ;
var bool: aux2836_BOOL:: var_is_introduced ;
var bool: aux2837_BOOL:: var_is_introduced ;
var bool: aux2838_BOOL:: var_is_introduced ;
var 3..60: aux2839:: var_is_introduced ;
var bool: aux2840_BOOL:: var_is_introduced ;
var bool: aux2841_BOOL:: var_is_introduced ;
var {0,1}: aux2841_INTEGER :: var_is_introduced ;
var bool: aux2842_BOOL:: var_is_introduced ;
var bool: aux2843_BOOL:: var_is_introduced ;
var 4..61: aux2844:: var_is_introduced ;
var bool: aux2845_BOOL:: var_is_introduced ;
var bool: aux2846_BOOL:: var_is_introduced ;
var bool: aux2847_BOOL:: var_is_introduced ;
var {0,1}: aux2847_INTEGER :: var_is_introduced ;
var bool: aux2848_BOOL:: var_is_introduced ;
var bool: aux2849_BOOL:: var_is_introduced ;
var 4..61: aux2850:: var_is_introduced ;
var bool: aux2851_BOOL:: var_is_introduced ;
var bool: aux2852_BOOL:: var_is_introduced ;
var bool: aux2853_BOOL:: var_is_introduced ;
var {0,1}: aux2853_INTEGER :: var_is_introduced ;
var bool: aux2854_BOOL:: var_is_introduced ;
var bool: aux2855_BOOL:: var_is_introduced ;
var 3..60: aux2856:: var_is_introduced ;
var bool: aux2857_BOOL:: var_is_introduced ;
var bool: aux2858_BOOL:: var_is_introduced ;
var bool: aux2859_BOOL:: var_is_introduced ;
var {0,1}: aux2859_INTEGER :: var_is_introduced ;
var bool: aux2860_BOOL:: var_is_introduced ;
var bool: aux2861_BOOL:: var_is_introduced ;
var 2..59: aux2862:: var_is_introduced ;
var bool: aux2863_BOOL:: var_is_introduced ;
var bool: aux2864_BOOL:: var_is_introduced ;
var bool: aux2865_BOOL:: var_is_introduced ;
var {0,1}: aux2865_INTEGER :: var_is_introduced ;
var bool: aux2866_BOOL:: var_is_introduced ;
var bool: aux2867_BOOL:: var_is_introduced ;
var 3..60: aux2868:: var_is_introduced ;
var bool: aux2869_BOOL:: var_is_introduced ;
var bool: aux2870_BOOL:: var_is_introduced ;
var bool: aux2871_BOOL:: var_is_introduced ;
var {0,1}: aux2871_INTEGER :: var_is_introduced ;
var bool: aux2872_BOOL:: var_is_introduced ;
var bool: aux2873_BOOL:: var_is_introduced ;
var 2..59: aux2874:: var_is_introduced ;
var bool: aux2875_BOOL:: var_is_introduced ;
var bool: aux2876_BOOL:: var_is_introduced ;
var bool: aux2877_BOOL:: var_is_introduced ;
var {0,1}: aux2877_INTEGER :: var_is_introduced ;
var bool: aux2878_BOOL:: var_is_introduced ;
var bool: aux2879_BOOL:: var_is_introduced ;
var 3..60: aux2880:: var_is_introduced ;
var bool: aux2881_BOOL:: var_is_introduced ;
var bool: aux2882_BOOL:: var_is_introduced ;
var bool: aux2883_BOOL:: var_is_introduced ;
var {0,1}: aux2883_INTEGER :: var_is_introduced ;
var bool: aux2884_BOOL:: var_is_introduced ;
var bool: aux2885_BOOL:: var_is_introduced ;
var 2..59: aux2886:: var_is_introduced ;
var bool: aux2887_BOOL:: var_is_introduced ;
var bool: aux2888_BOOL:: var_is_introduced ;
var bool: aux2889_BOOL:: var_is_introduced ;
var {0,1}: aux2889_INTEGER :: var_is_introduced ;
var bool: aux2890_BOOL:: var_is_introduced ;
var bool: aux2891_BOOL:: var_is_introduced ;
var 2..59: aux2892:: var_is_introduced ;
var bool: aux2893_BOOL:: var_is_introduced ;
var bool: aux2894_BOOL:: var_is_introduced ;
var bool: aux2895_BOOL:: var_is_introduced ;
var {0,1}: aux2895_INTEGER :: var_is_introduced ;
var bool: aux2896_BOOL:: var_is_introduced ;
var bool: aux2897_BOOL:: var_is_introduced ;
var 5..62: aux2898:: var_is_introduced ;
var bool: aux2899_BOOL:: var_is_introduced ;
var bool: aux2900_BOOL:: var_is_introduced ;
var bool: aux2901_BOOL:: var_is_introduced ;
var {0,1}: aux2901_INTEGER :: var_is_introduced ;
var bool: aux2902_BOOL:: var_is_introduced ;
var bool: aux2903_BOOL:: var_is_introduced ;
var 3..60: aux2904:: var_is_introduced ;
var bool: aux2905_BOOL:: var_is_introduced ;
var bool: aux2906_BOOL:: var_is_introduced ;
var bool: aux2907_BOOL:: var_is_introduced ;
var {0,1}: aux2907_INTEGER :: var_is_introduced ;
var bool: aux2908_BOOL:: var_is_introduced ;
var bool: aux2909_BOOL:: var_is_introduced ;
var 4..61: aux2910:: var_is_introduced ;
var bool: aux2911_BOOL:: var_is_introduced ;
var bool: aux2912_BOOL:: var_is_introduced ;
var bool: aux2913_BOOL:: var_is_introduced ;
var {0,1}: aux2913_INTEGER :: var_is_introduced ;
var bool: aux2914_BOOL:: var_is_introduced ;
var bool: aux2915_BOOL:: var_is_introduced ;
var 3..60: aux2916:: var_is_introduced ;
var bool: aux2917_BOOL:: var_is_introduced ;
var bool: aux2918_BOOL:: var_is_introduced ;
var bool: aux2919_BOOL:: var_is_introduced ;
var {0,1}: aux2919_INTEGER :: var_is_introduced ;
var bool: aux2920_BOOL:: var_is_introduced ;
var bool: aux2921_BOOL:: var_is_introduced ;
var 2..59: aux2922:: var_is_introduced ;
var bool: aux2923_BOOL:: var_is_introduced ;
var bool: aux2924_BOOL:: var_is_introduced ;
var bool: aux2925_BOOL:: var_is_introduced ;
var {0,1}: aux2925_INTEGER :: var_is_introduced ;
var bool: aux2926_BOOL:: var_is_introduced ;
var bool: aux2927_BOOL:: var_is_introduced ;
var 1..58: aux2928:: var_is_introduced ;
var bool: aux2929_BOOL:: var_is_introduced ;
var bool: aux2930_BOOL:: var_is_introduced ;
var bool: aux2931_BOOL:: var_is_introduced ;
var {0,1}: aux2931_INTEGER :: var_is_introduced ;
var bool: aux2932_BOOL:: var_is_introduced ;
var bool: aux2933_BOOL:: var_is_introduced ;
var 4..61: aux2934:: var_is_introduced ;
var bool: aux2935_BOOL:: var_is_introduced ;
var bool: aux2936_BOOL:: var_is_introduced ;
var bool: aux2937_BOOL:: var_is_introduced ;
var {0,1}: aux2937_INTEGER :: var_is_introduced ;
var bool: aux2938_BOOL:: var_is_introduced ;
var bool: aux2939_BOOL:: var_is_introduced ;
var 1..58: aux2940:: var_is_introduced ;
var bool: aux2941_BOOL:: var_is_introduced ;
var bool: aux2942_BOOL:: var_is_introduced ;
var bool: aux2943_BOOL:: var_is_introduced ;
var {0,1}: aux2943_INTEGER :: var_is_introduced ;
var bool: aux2944_BOOL:: var_is_introduced ;
var bool: aux2945_BOOL:: var_is_introduced ;
var 4..61: aux2946:: var_is_introduced ;
var bool: aux2947_BOOL:: var_is_introduced ;
var bool: aux2948_BOOL:: var_is_introduced ;
var bool: aux2949_BOOL:: var_is_introduced ;
var {0,1}: aux2949_INTEGER :: var_is_introduced ;
var bool: aux2950_BOOL:: var_is_introduced ;
var bool: aux2951_BOOL:: var_is_introduced ;
var 2..59: aux2952:: var_is_introduced ;
var bool: aux2953_BOOL:: var_is_introduced ;
var bool: aux2954_BOOL:: var_is_introduced ;
var bool: aux2955_BOOL:: var_is_introduced ;
var {0,1}: aux2955_INTEGER :: var_is_introduced ;
var bool: aux2956_BOOL:: var_is_introduced ;
var bool: aux2957_BOOL:: var_is_introduced ;
var 4..61: aux2958:: var_is_introduced ;
var bool: aux2959_BOOL:: var_is_introduced ;
var bool: aux2960_BOOL:: var_is_introduced ;
var {0,1}: aux2960_INTEGER :: var_is_introduced ;
var bool: aux2961_BOOL:: var_is_introduced ;
var bool: aux2962_BOOL:: var_is_introduced ;
var 4..61: aux2963:: var_is_introduced ;
var bool: aux2964_BOOL:: var_is_introduced ;
var bool: aux2965_BOOL:: var_is_introduced ;
var bool: aux2966_BOOL:: var_is_introduced ;
var {0,1}: aux2966_INTEGER :: var_is_introduced ;
var bool: aux2967_BOOL:: var_is_introduced ;
var bool: aux2968_BOOL:: var_is_introduced ;
var 4..61: aux2969:: var_is_introduced ;
var bool: aux2970_BOOL:: var_is_introduced ;
var bool: aux2971_BOOL:: var_is_introduced ;
var bool: aux2972_BOOL:: var_is_introduced ;
var {0,1}: aux2972_INTEGER :: var_is_introduced ;
var bool: aux2973_BOOL:: var_is_introduced ;
var bool: aux2974_BOOL:: var_is_introduced ;
var 3..60: aux2975:: var_is_introduced ;
var bool: aux2976_BOOL:: var_is_introduced ;
var bool: aux2977_BOOL:: var_is_introduced ;
var bool: aux2978_BOOL:: var_is_introduced ;
var {0,1}: aux2978_INTEGER :: var_is_introduced ;
var bool: aux2979_BOOL:: var_is_introduced ;
var bool: aux2980_BOOL:: var_is_introduced ;
var 2..59: aux2981:: var_is_introduced ;
var bool: aux2982_BOOL:: var_is_introduced ;
var bool: aux2983_BOOL:: var_is_introduced ;
var bool: aux2984_BOOL:: var_is_introduced ;
var {0,1}: aux2984_INTEGER :: var_is_introduced ;
var bool: aux2985_BOOL:: var_is_introduced ;
var bool: aux2986_BOOL:: var_is_introduced ;
var 3..60: aux2987:: var_is_introduced ;
var bool: aux2988_BOOL:: var_is_introduced ;
var bool: aux2989_BOOL:: var_is_introduced ;
var bool: aux2990_BOOL:: var_is_introduced ;
var {0,1}: aux2990_INTEGER :: var_is_introduced ;
var bool: aux2991_BOOL:: var_is_introduced ;
var bool: aux2992_BOOL:: var_is_introduced ;
var 2..59: aux2993:: var_is_introduced ;
var bool: aux2994_BOOL:: var_is_introduced ;
var bool: aux2995_BOOL:: var_is_introduced ;
var bool: aux2996_BOOL:: var_is_introduced ;
var {0,1}: aux2996_INTEGER :: var_is_introduced ;
var bool: aux2997_BOOL:: var_is_introduced ;
var bool: aux2998_BOOL:: var_is_introduced ;
var 3..60: aux2999:: var_is_introduced ;
var bool: aux3000_BOOL:: var_is_introduced ;
var bool: aux3001_BOOL:: var_is_introduced ;
var bool: aux3002_BOOL:: var_is_introduced ;
var {0,1}: aux3002_INTEGER :: var_is_introduced ;
var bool: aux3003_BOOL:: var_is_introduced ;
var bool: aux3004_BOOL:: var_is_introduced ;
var 2..59: aux3005:: var_is_introduced ;
var bool: aux3006_BOOL:: var_is_introduced ;
var bool: aux3007_BOOL:: var_is_introduced ;
var bool: aux3008_BOOL:: var_is_introduced ;
var {0,1}: aux3008_INTEGER :: var_is_introduced ;
var bool: aux3009_BOOL:: var_is_introduced ;
var bool: aux3010_BOOL:: var_is_introduced ;
var 2..59: aux3011:: var_is_introduced ;
var bool: aux3012_BOOL:: var_is_introduced ;
var bool: aux3013_BOOL:: var_is_introduced ;
var bool: aux3014_BOOL:: var_is_introduced ;
var {0,1}: aux3014_INTEGER :: var_is_introduced ;
var bool: aux3015_BOOL:: var_is_introduced ;
var bool: aux3016_BOOL:: var_is_introduced ;
var 5..62: aux3017:: var_is_introduced ;
var bool: aux3018_BOOL:: var_is_introduced ;
var bool: aux3019_BOOL:: var_is_introduced ;
var bool: aux3020_BOOL:: var_is_introduced ;
var {0,1}: aux3020_INTEGER :: var_is_introduced ;
var bool: aux3021_BOOL:: var_is_introduced ;
var bool: aux3022_BOOL:: var_is_introduced ;
var 3..60: aux3023:: var_is_introduced ;
var bool: aux3024_BOOL:: var_is_introduced ;
var bool: aux3025_BOOL:: var_is_introduced ;
var bool: aux3026_BOOL:: var_is_introduced ;
var {0,1}: aux3026_INTEGER :: var_is_introduced ;
var bool: aux3027_BOOL:: var_is_introduced ;
var bool: aux3028_BOOL:: var_is_introduced ;
var 4..61: aux3029:: var_is_introduced ;
var bool: aux3030_BOOL:: var_is_introduced ;
var bool: aux3031_BOOL:: var_is_introduced ;
var bool: aux3032_BOOL:: var_is_introduced ;
var {0,1}: aux3032_INTEGER :: var_is_introduced ;
var bool: aux3033_BOOL:: var_is_introduced ;
var bool: aux3034_BOOL:: var_is_introduced ;
var 3..60: aux3035:: var_is_introduced ;
var bool: aux3036_BOOL:: var_is_introduced ;
var bool: aux3037_BOOL:: var_is_introduced ;
var bool: aux3038_BOOL:: var_is_introduced ;
var {0,1}: aux3038_INTEGER :: var_is_introduced ;
var bool: aux3039_BOOL:: var_is_introduced ;
var bool: aux3040_BOOL:: var_is_introduced ;
var 2..59: aux3041:: var_is_introduced ;
var bool: aux3042_BOOL:: var_is_introduced ;
var bool: aux3043_BOOL:: var_is_introduced ;
var bool: aux3044_BOOL:: var_is_introduced ;
var {0,1}: aux3044_INTEGER :: var_is_introduced ;
var bool: aux3045_BOOL:: var_is_introduced ;
var bool: aux3046_BOOL:: var_is_introduced ;
var 1..58: aux3047:: var_is_introduced ;
var bool: aux3048_BOOL:: var_is_introduced ;
var bool: aux3049_BOOL:: var_is_introduced ;
var bool: aux3050_BOOL:: var_is_introduced ;
var {0,1}: aux3050_INTEGER :: var_is_introduced ;
var bool: aux3051_BOOL:: var_is_introduced ;
var bool: aux3052_BOOL:: var_is_introduced ;
var 3..60: aux3053:: var_is_introduced ;
var bool: aux3054_BOOL:: var_is_introduced ;
var bool: aux3055_BOOL:: var_is_introduced ;
var bool: aux3056_BOOL:: var_is_introduced ;
var {0,1}: aux3056_INTEGER :: var_is_introduced ;
var bool: aux3057_BOOL:: var_is_introduced ;
var bool: aux3058_BOOL:: var_is_introduced ;
var 1..58: aux3059:: var_is_introduced ;
var bool: aux3060_BOOL:: var_is_introduced ;
var bool: aux3061_BOOL:: var_is_introduced ;
var bool: aux3062_BOOL:: var_is_introduced ;
var {0,1}: aux3062_INTEGER :: var_is_introduced ;
var bool: aux3063_BOOL:: var_is_introduced ;
var bool: aux3064_BOOL:: var_is_introduced ;
var 4..61: aux3065:: var_is_introduced ;
var bool: aux3066_BOOL:: var_is_introduced ;
var bool: aux3067_BOOL:: var_is_introduced ;
var bool: aux3068_BOOL:: var_is_introduced ;
var {0,1}: aux3068_INTEGER :: var_is_introduced ;
var bool: aux3069_BOOL:: var_is_introduced ;
var bool: aux3070_BOOL:: var_is_introduced ;
var 2..59: aux3071:: var_is_introduced ;
var bool: aux3072_BOOL:: var_is_introduced ;
var bool: aux3073_BOOL:: var_is_introduced ;
var bool: aux3074_BOOL:: var_is_introduced ;
var {0,1}: aux3074_INTEGER :: var_is_introduced ;
var bool: aux3075_BOOL:: var_is_introduced ;
var bool: aux3076_BOOL:: var_is_introduced ;
var 5..62: aux3077:: var_is_introduced ;
var bool: aux3078_BOOL:: var_is_introduced ;
var bool: aux3079_BOOL:: var_is_introduced ;
var {0,1}: aux3079_INTEGER :: var_is_introduced ;
var bool: aux3080_BOOL:: var_is_introduced ;
var bool: aux3081_BOOL:: var_is_introduced ;
var 4..61: aux3082:: var_is_introduced ;
var bool: aux3083_BOOL:: var_is_introduced ;
var bool: aux3084_BOOL:: var_is_introduced ;
var bool: aux3085_BOOL:: var_is_introduced ;
var {0,1}: aux3085_INTEGER :: var_is_introduced ;
var bool: aux3086_BOOL:: var_is_introduced ;
var bool: aux3087_BOOL:: var_is_introduced ;
var 4..61: aux3088:: var_is_introduced ;
var bool: aux3089_BOOL:: var_is_introduced ;
var bool: aux3090_BOOL:: var_is_introduced ;
var bool: aux3091_BOOL:: var_is_introduced ;
var {0,1}: aux3091_INTEGER :: var_is_introduced ;
var bool: aux3092_BOOL:: var_is_introduced ;
var bool: aux3093_BOOL:: var_is_introduced ;
var 3..60: aux3094:: var_is_introduced ;
var bool: aux3095_BOOL:: var_is_introduced ;
var bool: aux3096_BOOL:: var_is_introduced ;
var bool: aux3097_BOOL:: var_is_introduced ;
var {0,1}: aux3097_INTEGER :: var_is_introduced ;
var bool: aux3098_BOOL:: var_is_introduced ;
var bool: aux3099_BOOL:: var_is_introduced ;
var 2..59: aux3100:: var_is_introduced ;
var bool: aux3101_BOOL:: var_is_introduced ;
var bool: aux3102_BOOL:: var_is_introduced ;
var bool: aux3103_BOOL:: var_is_introduced ;
var {0,1}: aux3103_INTEGER :: var_is_introduced ;
var bool: aux3104_BOOL:: var_is_introduced ;
var bool: aux3105_BOOL:: var_is_introduced ;
var 3..60: aux3106:: var_is_introduced ;
var bool: aux3107_BOOL:: var_is_introduced ;
var bool: aux3108_BOOL:: var_is_introduced ;
var bool: aux3109_BOOL:: var_is_introduced ;
var {0,1}: aux3109_INTEGER :: var_is_introduced ;
var bool: aux3110_BOOL:: var_is_introduced ;
var bool: aux3111_BOOL:: var_is_introduced ;
var 2..59: aux3112:: var_is_introduced ;
var bool: aux3113_BOOL:: var_is_introduced ;
var bool: aux3114_BOOL:: var_is_introduced ;
var bool: aux3115_BOOL:: var_is_introduced ;
var {0,1}: aux3115_INTEGER :: var_is_introduced ;
var bool: aux3116_BOOL:: var_is_introduced ;
var bool: aux3117_BOOL:: var_is_introduced ;
var 3..60: aux3118:: var_is_introduced ;
var bool: aux3119_BOOL:: var_is_introduced ;
var bool: aux3120_BOOL:: var_is_introduced ;
var bool: aux3121_BOOL:: var_is_introduced ;
var {0,1}: aux3121_INTEGER :: var_is_introduced ;
var bool: aux3122_BOOL:: var_is_introduced ;
var bool: aux3123_BOOL:: var_is_introduced ;
var 2..59: aux3124:: var_is_introduced ;
var bool: aux3125_BOOL:: var_is_introduced ;
var bool: aux3126_BOOL:: var_is_introduced ;
var bool: aux3127_BOOL:: var_is_introduced ;
var {0,1}: aux3127_INTEGER :: var_is_introduced ;
var bool: aux3128_BOOL:: var_is_introduced ;
var bool: aux3129_BOOL:: var_is_introduced ;
var 2..59: aux3130:: var_is_introduced ;
var bool: aux3131_BOOL:: var_is_introduced ;
var bool: aux3132_BOOL:: var_is_introduced ;
var bool: aux3133_BOOL:: var_is_introduced ;
var {0,1}: aux3133_INTEGER :: var_is_introduced ;
var bool: aux3134_BOOL:: var_is_introduced ;
var bool: aux3135_BOOL:: var_is_introduced ;
var 3..60: aux3136:: var_is_introduced ;
var bool: aux3137_BOOL:: var_is_introduced ;
var bool: aux3138_BOOL:: var_is_introduced ;
var bool: aux3139_BOOL:: var_is_introduced ;
var {0,1}: aux3139_INTEGER :: var_is_introduced ;
var bool: aux3140_BOOL:: var_is_introduced ;
var bool: aux3141_BOOL:: var_is_introduced ;
var 4..61: aux3142:: var_is_introduced ;
var bool: aux3143_BOOL:: var_is_introduced ;
var bool: aux3144_BOOL:: var_is_introduced ;
var bool: aux3145_BOOL:: var_is_introduced ;
var {0,1}: aux3145_INTEGER :: var_is_introduced ;
var bool: aux3146_BOOL:: var_is_introduced ;
var bool: aux3147_BOOL:: var_is_introduced ;
var 3..60: aux3148:: var_is_introduced ;
var bool: aux3149_BOOL:: var_is_introduced ;
var bool: aux3150_BOOL:: var_is_introduced ;
var bool: aux3151_BOOL:: var_is_introduced ;
var {0,1}: aux3151_INTEGER :: var_is_introduced ;
var bool: aux3152_BOOL:: var_is_introduced ;
var bool: aux3153_BOOL:: var_is_introduced ;
var 2..59: aux3154:: var_is_introduced ;
var bool: aux3155_BOOL:: var_is_introduced ;
var bool: aux3156_BOOL:: var_is_introduced ;
var bool: aux3157_BOOL:: var_is_introduced ;
var {0,1}: aux3157_INTEGER :: var_is_introduced ;
var bool: aux3158_BOOL:: var_is_introduced ;
var bool: aux3159_BOOL:: var_is_introduced ;
var 1..58: aux3160:: var_is_introduced ;
var bool: aux3161_BOOL:: var_is_introduced ;
var bool: aux3162_BOOL:: var_is_introduced ;
var bool: aux3163_BOOL:: var_is_introduced ;
var {0,1}: aux3163_INTEGER :: var_is_introduced ;
var bool: aux3164_BOOL:: var_is_introduced ;
var bool: aux3165_BOOL:: var_is_introduced ;
var 3..60: aux3166:: var_is_introduced ;
var bool: aux3167_BOOL:: var_is_introduced ;
var bool: aux3168_BOOL:: var_is_introduced ;
var bool: aux3169_BOOL:: var_is_introduced ;
var {0,1}: aux3169_INTEGER :: var_is_introduced ;
var bool: aux3170_BOOL:: var_is_introduced ;
var bool: aux3171_BOOL:: var_is_introduced ;
var 4..61: aux3172:: var_is_introduced ;
var bool: aux3173_BOOL:: var_is_introduced ;
var bool: aux3174_BOOL:: var_is_introduced ;
var bool: aux3175_BOOL:: var_is_introduced ;
var {0,1}: aux3175_INTEGER :: var_is_introduced ;
var bool: aux3176_BOOL:: var_is_introduced ;
var bool: aux3177_BOOL:: var_is_introduced ;
var 1..58: aux3178:: var_is_introduced ;
var bool: aux3179_BOOL:: var_is_introduced ;
var bool: aux3180_BOOL:: var_is_introduced ;
var bool: aux3181_BOOL:: var_is_introduced ;
var {0,1}: aux3181_INTEGER :: var_is_introduced ;
var bool: aux3182_BOOL:: var_is_introduced ;
var bool: aux3183_BOOL:: var_is_introduced ;
var 4..61: aux3184:: var_is_introduced ;
var bool: aux3185_BOOL:: var_is_introduced ;
var bool: aux3186_BOOL:: var_is_introduced ;
var bool: aux3187_BOOL:: var_is_introduced ;
var {0,1}: aux3187_INTEGER :: var_is_introduced ;
var bool: aux3188_BOOL:: var_is_introduced ;
var bool: aux3189_BOOL:: var_is_introduced ;
var 2..59: aux3190:: var_is_introduced ;
var bool: aux3191_BOOL:: var_is_introduced ;
var bool: aux3192_BOOL:: var_is_introduced ;
var bool: aux3193_BOOL:: var_is_introduced ;
var {0,1}: aux3193_INTEGER :: var_is_introduced ;
var bool: aux3194_BOOL:: var_is_introduced ;
var bool: aux3195_BOOL:: var_is_introduced ;
var 4..61: aux3196:: var_is_introduced ;
var bool: aux3197_BOOL:: var_is_introduced ;
var bool: aux3198_BOOL:: var_is_introduced ;
var {0,1}: aux3198_INTEGER :: var_is_introduced ;
var bool: aux3199_BOOL:: var_is_introduced ;
var bool: aux3200_BOOL:: var_is_introduced ;
var 4..61: aux3201:: var_is_introduced ;
var bool: aux3202_BOOL:: var_is_introduced ;
var bool: aux3203_BOOL:: var_is_introduced ;
var bool: aux3204_BOOL:: var_is_introduced ;
var {0,1}: aux3204_INTEGER :: var_is_introduced ;
var bool: aux3205_BOOL:: var_is_introduced ;
var bool: aux3206_BOOL:: var_is_introduced ;
var 4..61: aux3207:: var_is_introduced ;
var bool: aux3208_BOOL:: var_is_introduced ;
var bool: aux3209_BOOL:: var_is_introduced ;
var bool: aux3210_BOOL:: var_is_introduced ;
var {0,1}: aux3210_INTEGER :: var_is_introduced ;
var bool: aux3211_BOOL:: var_is_introduced ;
var bool: aux3212_BOOL:: var_is_introduced ;
var 3..60: aux3213:: var_is_introduced ;
var bool: aux3214_BOOL:: var_is_introduced ;
var bool: aux3215_BOOL:: var_is_introduced ;
var bool: aux3216_BOOL:: var_is_introduced ;
var {0,1}: aux3216_INTEGER :: var_is_introduced ;
var bool: aux3217_BOOL:: var_is_introduced ;
var bool: aux3218_BOOL:: var_is_introduced ;
var 2..59: aux3219:: var_is_introduced ;
var bool: aux3220_BOOL:: var_is_introduced ;
var bool: aux3221_BOOL:: var_is_introduced ;
var bool: aux3222_BOOL:: var_is_introduced ;
var {0,1}: aux3222_INTEGER :: var_is_introduced ;
var bool: aux3223_BOOL:: var_is_introduced ;
var bool: aux3224_BOOL:: var_is_introduced ;
var 3..60: aux3225:: var_is_introduced ;
var bool: aux3226_BOOL:: var_is_introduced ;
var bool: aux3227_BOOL:: var_is_introduced ;
var bool: aux3228_BOOL:: var_is_introduced ;
var {0,1}: aux3228_INTEGER :: var_is_introduced ;
var bool: aux3229_BOOL:: var_is_introduced ;
var bool: aux3230_BOOL:: var_is_introduced ;
var 2..59: aux3231:: var_is_introduced ;
var bool: aux3232_BOOL:: var_is_introduced ;
var bool: aux3233_BOOL:: var_is_introduced ;
var bool: aux3234_BOOL:: var_is_introduced ;
var {0,1}: aux3234_INTEGER :: var_is_introduced ;
var bool: aux3235_BOOL:: var_is_introduced ;
var bool: aux3236_BOOL:: var_is_introduced ;
var 3..60: aux3237:: var_is_introduced ;
var bool: aux3238_BOOL:: var_is_introduced ;
var bool: aux3239_BOOL:: var_is_introduced ;
var bool: aux3240_BOOL:: var_is_introduced ;
var {0,1}: aux3240_INTEGER :: var_is_introduced ;
var bool: aux3241_BOOL:: var_is_introduced ;
var bool: aux3242_BOOL:: var_is_introduced ;
var 2..59: aux3243:: var_is_introduced ;
var bool: aux3244_BOOL:: var_is_introduced ;
var bool: aux3245_BOOL:: var_is_introduced ;
var bool: aux3246_BOOL:: var_is_introduced ;
var {0,1}: aux3246_INTEGER :: var_is_introduced ;
var bool: aux3247_BOOL:: var_is_introduced ;
var bool: aux3248_BOOL:: var_is_introduced ;
var 2..59: aux3249:: var_is_introduced ;
var bool: aux3250_BOOL:: var_is_introduced ;
var bool: aux3251_BOOL:: var_is_introduced ;
var bool: aux3252_BOOL:: var_is_introduced ;
var {0,1}: aux3252_INTEGER :: var_is_introduced ;
var bool: aux3253_BOOL:: var_is_introduced ;
var bool: aux3254_BOOL:: var_is_introduced ;
var 5..62: aux3255:: var_is_introduced ;
var bool: aux3256_BOOL:: var_is_introduced ;
var bool: aux3257_BOOL:: var_is_introduced ;
var bool: aux3258_BOOL:: var_is_introduced ;
var {0,1}: aux3258_INTEGER :: var_is_introduced ;
var bool: aux3259_BOOL:: var_is_introduced ;
var bool: aux3260_BOOL:: var_is_introduced ;
var 3..60: aux3261:: var_is_introduced ;
var bool: aux3262_BOOL:: var_is_introduced ;
var bool: aux3263_BOOL:: var_is_introduced ;
var bool: aux3264_BOOL:: var_is_introduced ;
var {0,1}: aux3264_INTEGER :: var_is_introduced ;
var bool: aux3265_BOOL:: var_is_introduced ;
var bool: aux3266_BOOL:: var_is_introduced ;
var 4..61: aux3267:: var_is_introduced ;
var bool: aux3268_BOOL:: var_is_introduced ;
var bool: aux3269_BOOL:: var_is_introduced ;
var bool: aux3270_BOOL:: var_is_introduced ;
var {0,1}: aux3270_INTEGER :: var_is_introduced ;
var bool: aux3271_BOOL:: var_is_introduced ;
var bool: aux3272_BOOL:: var_is_introduced ;
var 3..60: aux3273:: var_is_introduced ;
var bool: aux3274_BOOL:: var_is_introduced ;
var bool: aux3275_BOOL:: var_is_introduced ;
var bool: aux3276_BOOL:: var_is_introduced ;
var {0,1}: aux3276_INTEGER :: var_is_introduced ;
var bool: aux3277_BOOL:: var_is_introduced ;
var bool: aux3278_BOOL:: var_is_introduced ;
var 2..59: aux3279:: var_is_introduced ;
var bool: aux3280_BOOL:: var_is_introduced ;
var bool: aux3281_BOOL:: var_is_introduced ;
var bool: aux3282_BOOL:: var_is_introduced ;
var {0,1}: aux3282_INTEGER :: var_is_introduced ;
var bool: aux3283_BOOL:: var_is_introduced ;
var bool: aux3284_BOOL:: var_is_introduced ;
var 1..58: aux3285:: var_is_introduced ;
var bool: aux3286_BOOL:: var_is_introduced ;
var bool: aux3287_BOOL:: var_is_introduced ;
var bool: aux3288_BOOL:: var_is_introduced ;
var {0,1}: aux3288_INTEGER :: var_is_introduced ;
var bool: aux3289_BOOL:: var_is_introduced ;
var bool: aux3290_BOOL:: var_is_introduced ;
var 3..60: aux3291:: var_is_introduced ;
var bool: aux3292_BOOL:: var_is_introduced ;
var bool: aux3293_BOOL:: var_is_introduced ;
var bool: aux3294_BOOL:: var_is_introduced ;
var {0,1}: aux3294_INTEGER :: var_is_introduced ;
var bool: aux3295_BOOL:: var_is_introduced ;
var bool: aux3296_BOOL:: var_is_introduced ;
var 4..61: aux3297:: var_is_introduced ;
var bool: aux3298_BOOL:: var_is_introduced ;
var bool: aux3299_BOOL:: var_is_introduced ;
var bool: aux3300_BOOL:: var_is_introduced ;
var {0,1}: aux3300_INTEGER :: var_is_introduced ;
var bool: aux3301_BOOL:: var_is_introduced ;
var bool: aux3302_BOOL:: var_is_introduced ;
var 1..58: aux3303:: var_is_introduced ;
var bool: aux3304_BOOL:: var_is_introduced ;
var bool: aux3305_BOOL:: var_is_introduced ;
var bool: aux3306_BOOL:: var_is_introduced ;
var {0,1}: aux3306_INTEGER :: var_is_introduced ;
var bool: aux3307_BOOL:: var_is_introduced ;
var bool: aux3308_BOOL:: var_is_introduced ;
var 2..59: aux3309:: var_is_introduced ;
var bool: aux3310_BOOL:: var_is_introduced ;
var bool: aux3311_BOOL:: var_is_introduced ;
var bool: aux3312_BOOL:: var_is_introduced ;
var {0,1}: aux3312_INTEGER :: var_is_introduced ;
var bool: aux3313_BOOL:: var_is_introduced ;
var bool: aux3314_BOOL:: var_is_introduced ;
var 3..60: aux3315:: var_is_introduced ;
var bool: aux3316_BOOL:: var_is_introduced ;
var bool: aux3317_BOOL:: var_is_introduced ;
var {0,1}: aux3317_INTEGER :: var_is_introduced ;
var bool: aux3318_BOOL:: var_is_introduced ;
var bool: aux3319_BOOL:: var_is_introduced ;
var 4..61: aux3320:: var_is_introduced ;
var bool: aux3321_BOOL:: var_is_introduced ;
var bool: aux3322_BOOL:: var_is_introduced ;
var bool: aux3323_BOOL:: var_is_introduced ;
var {0,1}: aux3323_INTEGER :: var_is_introduced ;
var bool: aux3324_BOOL:: var_is_introduced ;
var bool: aux3325_BOOL:: var_is_introduced ;
var 4..61: aux3326:: var_is_introduced ;
var bool: aux3327_BOOL:: var_is_introduced ;
var bool: aux3328_BOOL:: var_is_introduced ;
var bool: aux3329_BOOL:: var_is_introduced ;
var {0,1}: aux3329_INTEGER :: var_is_introduced ;
var bool: aux3330_BOOL:: var_is_introduced ;
var bool: aux3331_BOOL:: var_is_introduced ;
var 3..60: aux3332:: var_is_introduced ;
var bool: aux3333_BOOL:: var_is_introduced ;
var bool: aux3334_BOOL:: var_is_introduced ;
var bool: aux3335_BOOL:: var_is_introduced ;
var {0,1}: aux3335_INTEGER :: var_is_introduced ;
var bool: aux3336_BOOL:: var_is_introduced ;
var bool: aux3337_BOOL:: var_is_introduced ;
var 2..59: aux3338:: var_is_introduced ;
var bool: aux3339_BOOL:: var_is_introduced ;
var bool: aux3340_BOOL:: var_is_introduced ;
var bool: aux3341_BOOL:: var_is_introduced ;
var {0,1}: aux3341_INTEGER :: var_is_introduced ;
var bool: aux3342_BOOL:: var_is_introduced ;
var bool: aux3343_BOOL:: var_is_introduced ;
var 3..60: aux3344:: var_is_introduced ;
var bool: aux3345_BOOL:: var_is_introduced ;
var bool: aux3346_BOOL:: var_is_introduced ;
var bool: aux3347_BOOL:: var_is_introduced ;
var {0,1}: aux3347_INTEGER :: var_is_introduced ;
var bool: aux3348_BOOL:: var_is_introduced ;
var bool: aux3349_BOOL:: var_is_introduced ;
var 2..59: aux3350:: var_is_introduced ;
var bool: aux3351_BOOL:: var_is_introduced ;
var bool: aux3352_BOOL:: var_is_introduced ;
var bool: aux3353_BOOL:: var_is_introduced ;
var {0,1}: aux3353_INTEGER :: var_is_introduced ;
var bool: aux3354_BOOL:: var_is_introduced ;
var bool: aux3355_BOOL:: var_is_introduced ;
var 3..60: aux3356:: var_is_introduced ;
var bool: aux3357_BOOL:: var_is_introduced ;
var bool: aux3358_BOOL:: var_is_introduced ;
var bool: aux3359_BOOL:: var_is_introduced ;
var {0,1}: aux3359_INTEGER :: var_is_introduced ;
var bool: aux3360_BOOL:: var_is_introduced ;
var bool: aux3361_BOOL:: var_is_introduced ;
var 2..59: aux3362:: var_is_introduced ;
var bool: aux3363_BOOL:: var_is_introduced ;
var bool: aux3364_BOOL:: var_is_introduced ;
var bool: aux3365_BOOL:: var_is_introduced ;
var {0,1}: aux3365_INTEGER :: var_is_introduced ;
var bool: aux3366_BOOL:: var_is_introduced ;
var bool: aux3367_BOOL:: var_is_introduced ;
var 2..59: aux3368:: var_is_introduced ;
var bool: aux3369_BOOL:: var_is_introduced ;
var bool: aux3370_BOOL:: var_is_introduced ;
var bool: aux3371_BOOL:: var_is_introduced ;
var {0,1}: aux3371_INTEGER :: var_is_introduced ;
var bool: aux3372_BOOL:: var_is_introduced ;
var bool: aux3373_BOOL:: var_is_introduced ;
var 5..62: aux3374:: var_is_introduced ;
var bool: aux3375_BOOL:: var_is_introduced ;
var bool: aux3376_BOOL:: var_is_introduced ;
var bool: aux3377_BOOL:: var_is_introduced ;
var {0,1}: aux3377_INTEGER :: var_is_introduced ;
var bool: aux3378_BOOL:: var_is_introduced ;
var bool: aux3379_BOOL:: var_is_introduced ;
var 3..60: aux3380:: var_is_introduced ;
var bool: aux3381_BOOL:: var_is_introduced ;
var bool: aux3382_BOOL:: var_is_introduced ;
var bool: aux3383_BOOL:: var_is_introduced ;
var {0,1}: aux3383_INTEGER :: var_is_introduced ;
var bool: aux3384_BOOL:: var_is_introduced ;
var bool: aux3385_BOOL:: var_is_introduced ;
var 4..61: aux3386:: var_is_introduced ;
var bool: aux3387_BOOL:: var_is_introduced ;
var bool: aux3388_BOOL:: var_is_introduced ;
var bool: aux3389_BOOL:: var_is_introduced ;
var {0,1}: aux3389_INTEGER :: var_is_introduced ;
var bool: aux3390_BOOL:: var_is_introduced ;
var bool: aux3391_BOOL:: var_is_introduced ;
var 2..59: aux3392:: var_is_introduced ;
var bool: aux3393_BOOL:: var_is_introduced ;
var bool: aux3394_BOOL:: var_is_introduced ;
var bool: aux3395_BOOL:: var_is_introduced ;
var {0,1}: aux3395_INTEGER :: var_is_introduced ;
var bool: aux3396_BOOL:: var_is_introduced ;
var bool: aux3397_BOOL:: var_is_introduced ;
var 1..58: aux3398:: var_is_introduced ;
var bool: aux3399_BOOL:: var_is_introduced ;
var bool: aux3400_BOOL:: var_is_introduced ;
var bool: aux3401_BOOL:: var_is_introduced ;
var {0,1}: aux3401_INTEGER :: var_is_introduced ;
var bool: aux3402_BOOL:: var_is_introduced ;
var bool: aux3403_BOOL:: var_is_introduced ;
var 3..60: aux3404:: var_is_introduced ;
var bool: aux3405_BOOL:: var_is_introduced ;
var bool: aux3406_BOOL:: var_is_introduced ;
var bool: aux3407_BOOL:: var_is_introduced ;
var {0,1}: aux3407_INTEGER :: var_is_introduced ;
var bool: aux3408_BOOL:: var_is_introduced ;
var bool: aux3409_BOOL:: var_is_introduced ;
var 4..61: aux3410:: var_is_introduced ;
var bool: aux3411_BOOL:: var_is_introduced ;
var bool: aux3412_BOOL:: var_is_introduced ;
var bool: aux3413_BOOL:: var_is_introduced ;
var {0,1}: aux3413_INTEGER :: var_is_introduced ;
var bool: aux3414_BOOL:: var_is_introduced ;
var bool: aux3415_BOOL:: var_is_introduced ;
var 1..58: aux3416:: var_is_introduced ;
var bool: aux3417_BOOL:: var_is_introduced ;
var bool: aux3418_BOOL:: var_is_introduced ;
var bool: aux3419_BOOL:: var_is_introduced ;
var {0,1}: aux3419_INTEGER :: var_is_introduced ;
var bool: aux3420_BOOL:: var_is_introduced ;
var bool: aux3421_BOOL:: var_is_introduced ;
var 4..61: aux3422:: var_is_introduced ;
var bool: aux3423_BOOL:: var_is_introduced ;
var bool: aux3424_BOOL:: var_is_introduced ;
var bool: aux3425_BOOL:: var_is_introduced ;
var {0,1}: aux3425_INTEGER :: var_is_introduced ;
var bool: aux3426_BOOL:: var_is_introduced ;
var bool: aux3427_BOOL:: var_is_introduced ;
var 2..59: aux3428:: var_is_introduced ;
var bool: aux3429_BOOL:: var_is_introduced ;
var bool: aux3430_BOOL:: var_is_introduced ;
var bool: aux3431_BOOL:: var_is_introduced ;
var {0,1}: aux3431_INTEGER :: var_is_introduced ;
var bool: aux3432_BOOL:: var_is_introduced ;
var bool: aux3433_BOOL:: var_is_introduced ;
var 4..61: aux3434:: var_is_introduced ;
var bool: aux3435_BOOL:: var_is_introduced ;
var bool: aux3436_BOOL:: var_is_introduced ;
var {0,1}: aux3436_INTEGER :: var_is_introduced ;
var bool: aux3437_BOOL:: var_is_introduced ;
var bool: aux3438_BOOL:: var_is_introduced ;
var 4..61: aux3439:: var_is_introduced ;
var bool: aux3440_BOOL:: var_is_introduced ;
var bool: aux3441_BOOL:: var_is_introduced ;
var bool: aux3442_BOOL:: var_is_introduced ;
var {0,1}: aux3442_INTEGER :: var_is_introduced ;
var bool: aux3443_BOOL:: var_is_introduced ;
var bool: aux3444_BOOL:: var_is_introduced ;
var 3..60: aux3445:: var_is_introduced ;
var bool: aux3446_BOOL:: var_is_introduced ;
var bool: aux3447_BOOL:: var_is_introduced ;
var bool: aux3448_BOOL:: var_is_introduced ;
var {0,1}: aux3448_INTEGER :: var_is_introduced ;
var bool: aux3449_BOOL:: var_is_introduced ;
var bool: aux3450_BOOL:: var_is_introduced ;
var 2..59: aux3451:: var_is_introduced ;
var bool: aux3452_BOOL:: var_is_introduced ;
var bool: aux3453_BOOL:: var_is_introduced ;
var bool: aux3454_BOOL:: var_is_introduced ;
var {0,1}: aux3454_INTEGER :: var_is_introduced ;
var bool: aux3455_BOOL:: var_is_introduced ;
var bool: aux3456_BOOL:: var_is_introduced ;
var 3..60: aux3457:: var_is_introduced ;
var bool: aux3458_BOOL:: var_is_introduced ;
var bool: aux3459_BOOL:: var_is_introduced ;
var bool: aux3460_BOOL:: var_is_introduced ;
var {0,1}: aux3460_INTEGER :: var_is_introduced ;
var bool: aux3461_BOOL:: var_is_introduced ;
var bool: aux3462_BOOL:: var_is_introduced ;
var 2..59: aux3463:: var_is_introduced ;
var bool: aux3464_BOOL:: var_is_introduced ;
var bool: aux3465_BOOL:: var_is_introduced ;
var bool: aux3466_BOOL:: var_is_introduced ;
var {0,1}: aux3466_INTEGER :: var_is_introduced ;
var bool: aux3467_BOOL:: var_is_introduced ;
var bool: aux3468_BOOL:: var_is_introduced ;
var 3..60: aux3469:: var_is_introduced ;
var bool: aux3470_BOOL:: var_is_introduced ;
var bool: aux3471_BOOL:: var_is_introduced ;
var bool: aux3472_BOOL:: var_is_introduced ;
var {0,1}: aux3472_INTEGER :: var_is_introduced ;
var bool: aux3473_BOOL:: var_is_introduced ;
var bool: aux3474_BOOL:: var_is_introduced ;
var 2..59: aux3475:: var_is_introduced ;
var bool: aux3476_BOOL:: var_is_introduced ;
var bool: aux3477_BOOL:: var_is_introduced ;
var bool: aux3478_BOOL:: var_is_introduced ;
var {0,1}: aux3478_INTEGER :: var_is_introduced ;
var bool: aux3479_BOOL:: var_is_introduced ;
var bool: aux3480_BOOL:: var_is_introduced ;
var 2..59: aux3481:: var_is_introduced ;
var bool: aux3482_BOOL:: var_is_introduced ;
var bool: aux3483_BOOL:: var_is_introduced ;
var bool: aux3484_BOOL:: var_is_introduced ;
var {0,1}: aux3484_INTEGER :: var_is_introduced ;
var bool: aux3485_BOOL:: var_is_introduced ;
var bool: aux3486_BOOL:: var_is_introduced ;
var 5..62: aux3487:: var_is_introduced ;
var bool: aux3488_BOOL:: var_is_introduced ;
var bool: aux3489_BOOL:: var_is_introduced ;
var bool: aux3490_BOOL:: var_is_introduced ;
var {0,1}: aux3490_INTEGER :: var_is_introduced ;
var bool: aux3491_BOOL:: var_is_introduced ;
var bool: aux3492_BOOL:: var_is_introduced ;
var 3..60: aux3493:: var_is_introduced ;
var bool: aux3494_BOOL:: var_is_introduced ;
var bool: aux3495_BOOL:: var_is_introduced ;
var bool: aux3496_BOOL:: var_is_introduced ;
var {0,1}: aux3496_INTEGER :: var_is_introduced ;
var bool: aux3497_BOOL:: var_is_introduced ;
var bool: aux3498_BOOL:: var_is_introduced ;
var 4..61: aux3499:: var_is_introduced ;
var bool: aux3500_BOOL:: var_is_introduced ;
var bool: aux3501_BOOL:: var_is_introduced ;
var bool: aux3502_BOOL:: var_is_introduced ;
var {0,1}: aux3502_INTEGER :: var_is_introduced ;
var bool: aux3503_BOOL:: var_is_introduced ;
var bool: aux3504_BOOL:: var_is_introduced ;
var 3..60: aux3505:: var_is_introduced ;
var bool: aux3506_BOOL:: var_is_introduced ;
var bool: aux3507_BOOL:: var_is_introduced ;
var bool: aux3508_BOOL:: var_is_introduced ;
var {0,1}: aux3508_INTEGER :: var_is_introduced ;
var bool: aux3509_BOOL:: var_is_introduced ;
var bool: aux3510_BOOL:: var_is_introduced ;
var 2..59: aux3511:: var_is_introduced ;
var bool: aux3512_BOOL:: var_is_introduced ;
var bool: aux3513_BOOL:: var_is_introduced ;
var bool: aux3514_BOOL:: var_is_introduced ;
var {0,1}: aux3514_INTEGER :: var_is_introduced ;
var bool: aux3515_BOOL:: var_is_introduced ;
var bool: aux3516_BOOL:: var_is_introduced ;
var 1..58: aux3517:: var_is_introduced ;
var bool: aux3518_BOOL:: var_is_introduced ;
var bool: aux3519_BOOL:: var_is_introduced ;
var bool: aux3520_BOOL:: var_is_introduced ;
var {0,1}: aux3520_INTEGER :: var_is_introduced ;
var bool: aux3521_BOOL:: var_is_introduced ;
var bool: aux3522_BOOL:: var_is_introduced ;
var 3..60: aux3523:: var_is_introduced ;
var bool: aux3524_BOOL:: var_is_introduced ;
var bool: aux3525_BOOL:: var_is_introduced ;
var bool: aux3526_BOOL:: var_is_introduced ;
var {0,1}: aux3526_INTEGER :: var_is_introduced ;
var bool: aux3527_BOOL:: var_is_introduced ;
var bool: aux3528_BOOL:: var_is_introduced ;
var 4..61: aux3529:: var_is_introduced ;
var bool: aux3530_BOOL:: var_is_introduced ;
var bool: aux3531_BOOL:: var_is_introduced ;
var bool: aux3532_BOOL:: var_is_introduced ;
var {0,1}: aux3532_INTEGER :: var_is_introduced ;
var bool: aux3533_BOOL:: var_is_introduced ;
var bool: aux3534_BOOL:: var_is_introduced ;
var 1..58: aux3535:: var_is_introduced ;
var bool: aux3536_BOOL:: var_is_introduced ;
var bool: aux3537_BOOL:: var_is_introduced ;
var bool: aux3538_BOOL:: var_is_introduced ;
var {0,1}: aux3538_INTEGER :: var_is_introduced ;
var bool: aux3539_BOOL:: var_is_introduced ;
var bool: aux3540_BOOL:: var_is_introduced ;
var 4..61: aux3541:: var_is_introduced ;
var bool: aux3542_BOOL:: var_is_introduced ;
var bool: aux3543_BOOL:: var_is_introduced ;
var bool: aux3544_BOOL:: var_is_introduced ;
var {0,1}: aux3544_INTEGER :: var_is_introduced ;
var bool: aux3545_BOOL:: var_is_introduced ;
var bool: aux3546_BOOL:: var_is_introduced ;
var 2..59: aux3547:: var_is_introduced ;
var bool: aux3548_BOOL:: var_is_introduced ;
var bool: aux3549_BOOL:: var_is_introduced ;
var bool: aux3550_BOOL:: var_is_introduced ;
var {0,1}: aux3550_INTEGER :: var_is_introduced ;
var bool: aux3551_BOOL:: var_is_introduced ;
var bool: aux3552_BOOL:: var_is_introduced ;
var 3..60: aux3553:: var_is_introduced ;
var bool: aux3554_BOOL:: var_is_introduced ;
var bool: aux3555_BOOL:: var_is_introduced ;
var {0,1}: aux3555_INTEGER :: var_is_introduced ;
var bool: aux3556_BOOL:: var_is_introduced ;
var bool: aux3557_BOOL:: var_is_introduced ;
var 4..61: aux3558:: var_is_introduced ;
var bool: aux3559_BOOL:: var_is_introduced ;
var bool: aux3560_BOOL:: var_is_introduced ;
var bool: aux3561_BOOL:: var_is_introduced ;
var {0,1}: aux3561_INTEGER :: var_is_introduced ;
var bool: aux3562_BOOL:: var_is_introduced ;
var bool: aux3563_BOOL:: var_is_introduced ;
var 4..61: aux3564:: var_is_introduced ;
var bool: aux3565_BOOL:: var_is_introduced ;
var bool: aux3566_BOOL:: var_is_introduced ;
var bool: aux3567_BOOL:: var_is_introduced ;
var {0,1}: aux3567_INTEGER :: var_is_introduced ;
var bool: aux3568_BOOL:: var_is_introduced ;
var bool: aux3569_BOOL:: var_is_introduced ;
var 2..59: aux3570:: var_is_introduced ;
var bool: aux3571_BOOL:: var_is_introduced ;
var bool: aux3572_BOOL:: var_is_introduced ;
var bool: aux3573_BOOL:: var_is_introduced ;
var {0,1}: aux3573_INTEGER :: var_is_introduced ;
var bool: aux3574_BOOL:: var_is_introduced ;
var bool: aux3575_BOOL:: var_is_introduced ;
var 3..60: aux3576:: var_is_introduced ;
var bool: aux3577_BOOL:: var_is_introduced ;
var bool: aux3578_BOOL:: var_is_introduced ;
var bool: aux3579_BOOL:: var_is_introduced ;
var {0,1}: aux3579_INTEGER :: var_is_introduced ;
var bool: aux3580_BOOL:: var_is_introduced ;
var bool: aux3581_BOOL:: var_is_introduced ;
var 2..59: aux3582:: var_is_introduced ;
var bool: aux3583_BOOL:: var_is_introduced ;
var bool: aux3584_BOOL:: var_is_introduced ;
var bool: aux3585_BOOL:: var_is_introduced ;
var {0,1}: aux3585_INTEGER :: var_is_introduced ;
var bool: aux3586_BOOL:: var_is_introduced ;
var bool: aux3587_BOOL:: var_is_introduced ;
var 3..60: aux3588:: var_is_introduced ;
var bool: aux3589_BOOL:: var_is_introduced ;
var bool: aux3590_BOOL:: var_is_introduced ;
var bool: aux3591_BOOL:: var_is_introduced ;
var {0,1}: aux3591_INTEGER :: var_is_introduced ;
var bool: aux3592_BOOL:: var_is_introduced ;
var bool: aux3593_BOOL:: var_is_introduced ;
var 2..59: aux3594:: var_is_introduced ;
var bool: aux3595_BOOL:: var_is_introduced ;
var bool: aux3596_BOOL:: var_is_introduced ;
var bool: aux3597_BOOL:: var_is_introduced ;
var {0,1}: aux3597_INTEGER :: var_is_introduced ;
var bool: aux3598_BOOL:: var_is_introduced ;
var bool: aux3599_BOOL:: var_is_introduced ;
var 2..59: aux3600:: var_is_introduced ;
var bool: aux3601_BOOL:: var_is_introduced ;
var bool: aux3602_BOOL:: var_is_introduced ;
var bool: aux3603_BOOL:: var_is_introduced ;
var {0,1}: aux3603_INTEGER :: var_is_introduced ;
var bool: aux3604_BOOL:: var_is_introduced ;
var bool: aux3605_BOOL:: var_is_introduced ;
var 5..62: aux3606:: var_is_introduced ;
var bool: aux3607_BOOL:: var_is_introduced ;
var bool: aux3608_BOOL:: var_is_introduced ;
var bool: aux3609_BOOL:: var_is_introduced ;
var {0,1}: aux3609_INTEGER :: var_is_introduced ;
var bool: aux3610_BOOL:: var_is_introduced ;
var bool: aux3611_BOOL:: var_is_introduced ;
var 3..60: aux3612:: var_is_introduced ;
var bool: aux3613_BOOL:: var_is_introduced ;
var bool: aux3614_BOOL:: var_is_introduced ;
var bool: aux3615_BOOL:: var_is_introduced ;
var {0,1}: aux3615_INTEGER :: var_is_introduced ;
var bool: aux3616_BOOL:: var_is_introduced ;
var bool: aux3617_BOOL:: var_is_introduced ;
var 4..61: aux3618:: var_is_introduced ;
var bool: aux3619_BOOL:: var_is_introduced ;
var bool: aux3620_BOOL:: var_is_introduced ;
var bool: aux3621_BOOL:: var_is_introduced ;
var {0,1}: aux3621_INTEGER :: var_is_introduced ;
var bool: aux3622_BOOL:: var_is_introduced ;
var bool: aux3623_BOOL:: var_is_introduced ;
var 3..60: aux3624:: var_is_introduced ;
var bool: aux3625_BOOL:: var_is_introduced ;
var bool: aux3626_BOOL:: var_is_introduced ;
var bool: aux3627_BOOL:: var_is_introduced ;
var {0,1}: aux3627_INTEGER :: var_is_introduced ;
var bool: aux3628_BOOL:: var_is_introduced ;
var bool: aux3629_BOOL:: var_is_introduced ;
var 2..59: aux3630:: var_is_introduced ;
var bool: aux3631_BOOL:: var_is_introduced ;
var bool: aux3632_BOOL:: var_is_introduced ;
var bool: aux3633_BOOL:: var_is_introduced ;
var {0,1}: aux3633_INTEGER :: var_is_introduced ;
var bool: aux3634_BOOL:: var_is_introduced ;
var bool: aux3635_BOOL:: var_is_introduced ;
var 1..58: aux3636:: var_is_introduced ;
var bool: aux3637_BOOL:: var_is_introduced ;
var bool: aux3638_BOOL:: var_is_introduced ;
var bool: aux3639_BOOL:: var_is_introduced ;
var {0,1}: aux3639_INTEGER :: var_is_introduced ;
var bool: aux3640_BOOL:: var_is_introduced ;
var bool: aux3641_BOOL:: var_is_introduced ;
var 3..60: aux3642:: var_is_introduced ;
var bool: aux3643_BOOL:: var_is_introduced ;
var bool: aux3644_BOOL:: var_is_introduced ;
var bool: aux3645_BOOL:: var_is_introduced ;
var {0,1}: aux3645_INTEGER :: var_is_introduced ;
var bool: aux3646_BOOL:: var_is_introduced ;
var bool: aux3647_BOOL:: var_is_introduced ;
var 4..61: aux3648:: var_is_introduced ;
var bool: aux3649_BOOL:: var_is_introduced ;
var bool: aux3650_BOOL:: var_is_introduced ;
var bool: aux3651_BOOL:: var_is_introduced ;
var {0,1}: aux3651_INTEGER :: var_is_introduced ;
var bool: aux3652_BOOL:: var_is_introduced ;
var bool: aux3653_BOOL:: var_is_introduced ;
var 1..58: aux3654:: var_is_introduced ;
var bool: aux3655_BOOL:: var_is_introduced ;
var bool: aux3656_BOOL:: var_is_introduced ;
var bool: aux3657_BOOL:: var_is_introduced ;
var {0,1}: aux3657_INTEGER :: var_is_introduced ;
var bool: aux3658_BOOL:: var_is_introduced ;
var bool: aux3659_BOOL:: var_is_introduced ;
var 4..61: aux3660:: var_is_introduced ;
var bool: aux3661_BOOL:: var_is_introduced ;
var bool: aux3662_BOOL:: var_is_introduced ;
var bool: aux3663_BOOL:: var_is_introduced ;
var {0,1}: aux3663_INTEGER :: var_is_introduced ;
var bool: aux3664_BOOL:: var_is_introduced ;
var bool: aux3665_BOOL:: var_is_introduced ;
var 2..59: aux3666:: var_is_introduced ;
var bool: aux3667_BOOL:: var_is_introduced ;
var bool: aux3668_BOOL:: var_is_introduced ;
var bool: aux3669_BOOL:: var_is_introduced ;
var {0,1}: aux3669_INTEGER :: var_is_introduced ;
var bool: aux3670_BOOL:: var_is_introduced ;
var bool: aux3671_BOOL:: var_is_introduced ;
var 3..60: aux3672:: var_is_introduced ;
var bool: aux3673_BOOL:: var_is_introduced ;
var bool: aux3674_BOOL:: var_is_introduced ;
var {0,1}: aux3674_INTEGER :: var_is_introduced ;
var bool: aux3675_BOOL:: var_is_introduced ;
var bool: aux3676_BOOL:: var_is_introduced ;
var 4..61: aux3677:: var_is_introduced ;
var bool: aux3678_BOOL:: var_is_introduced ;
var bool: aux3679_BOOL:: var_is_introduced ;
var bool: aux3680_BOOL:: var_is_introduced ;
var {0,1}: aux3680_INTEGER :: var_is_introduced ;
var bool: aux3681_BOOL:: var_is_introduced ;
var bool: aux3682_BOOL:: var_is_introduced ;
var 4..61: aux3683:: var_is_introduced ;
var bool: aux3684_BOOL:: var_is_introduced ;
var bool: aux3685_BOOL:: var_is_introduced ;
var bool: aux3686_BOOL:: var_is_introduced ;
var {0,1}: aux3686_INTEGER :: var_is_introduced ;
var bool: aux3687_BOOL:: var_is_introduced ;
var bool: aux3688_BOOL:: var_is_introduced ;
var 3..60: aux3689:: var_is_introduced ;
var bool: aux3690_BOOL:: var_is_introduced ;
var bool: aux3691_BOOL:: var_is_introduced ;
var bool: aux3692_BOOL:: var_is_introduced ;
var {0,1}: aux3692_INTEGER :: var_is_introduced ;
var bool: aux3693_BOOL:: var_is_introduced ;
var bool: aux3694_BOOL:: var_is_introduced ;
var 2..59: aux3695:: var_is_introduced ;
var bool: aux3696_BOOL:: var_is_introduced ;
var bool: aux3697_BOOL:: var_is_introduced ;
var bool: aux3698_BOOL:: var_is_introduced ;
var {0,1}: aux3698_INTEGER :: var_is_introduced ;
var bool: aux3699_BOOL:: var_is_introduced ;
var bool: aux3700_BOOL:: var_is_introduced ;
var 2..59: aux3701:: var_is_introduced ;
var bool: aux3702_BOOL:: var_is_introduced ;
var bool: aux3703_BOOL:: var_is_introduced ;
var bool: aux3704_BOOL:: var_is_introduced ;
var {0,1}: aux3704_INTEGER :: var_is_introduced ;
var bool: aux3705_BOOL:: var_is_introduced ;
var bool: aux3706_BOOL:: var_is_introduced ;
var 3..60: aux3707:: var_is_introduced ;
var bool: aux3708_BOOL:: var_is_introduced ;
var bool: aux3709_BOOL:: var_is_introduced ;
var bool: aux3710_BOOL:: var_is_introduced ;
var {0,1}: aux3710_INTEGER :: var_is_introduced ;
var bool: aux3711_BOOL:: var_is_introduced ;
var bool: aux3712_BOOL:: var_is_introduced ;
var 2..59: aux3713:: var_is_introduced ;
var bool: aux3714_BOOL:: var_is_introduced ;
var bool: aux3715_BOOL:: var_is_introduced ;
var bool: aux3716_BOOL:: var_is_introduced ;
var {0,1}: aux3716_INTEGER :: var_is_introduced ;
var bool: aux3717_BOOL:: var_is_introduced ;
var bool: aux3718_BOOL:: var_is_introduced ;
var 2..59: aux3719:: var_is_introduced ;
var bool: aux3720_BOOL:: var_is_introduced ;
var bool: aux3721_BOOL:: var_is_introduced ;
var bool: aux3722_BOOL:: var_is_introduced ;
var {0,1}: aux3722_INTEGER :: var_is_introduced ;
var bool: aux3723_BOOL:: var_is_introduced ;
var bool: aux3724_BOOL:: var_is_introduced ;
var 5..62: aux3725:: var_is_introduced ;
var bool: aux3726_BOOL:: var_is_introduced ;
var bool: aux3727_BOOL:: var_is_introduced ;
var bool: aux3728_BOOL:: var_is_introduced ;
var {0,1}: aux3728_INTEGER :: var_is_introduced ;
var bool: aux3729_BOOL:: var_is_introduced ;
var bool: aux3730_BOOL:: var_is_introduced ;
var 3..60: aux3731:: var_is_introduced ;
var bool: aux3732_BOOL:: var_is_introduced ;
var bool: aux3733_BOOL:: var_is_introduced ;
var bool: aux3734_BOOL:: var_is_introduced ;
var {0,1}: aux3734_INTEGER :: var_is_introduced ;
var bool: aux3735_BOOL:: var_is_introduced ;
var bool: aux3736_BOOL:: var_is_introduced ;
var 4..61: aux3737:: var_is_introduced ;
var bool: aux3738_BOOL:: var_is_introduced ;
var bool: aux3739_BOOL:: var_is_introduced ;
var bool: aux3740_BOOL:: var_is_introduced ;
var {0,1}: aux3740_INTEGER :: var_is_introduced ;
var bool: aux3741_BOOL:: var_is_introduced ;
var bool: aux3742_BOOL:: var_is_introduced ;
var 3..60: aux3743:: var_is_introduced ;
var bool: aux3744_BOOL:: var_is_introduced ;
var bool: aux3745_BOOL:: var_is_introduced ;
var bool: aux3746_BOOL:: var_is_introduced ;
var {0,1}: aux3746_INTEGER :: var_is_introduced ;
var bool: aux3747_BOOL:: var_is_introduced ;
var bool: aux3748_BOOL:: var_is_introduced ;
var 2..59: aux3749:: var_is_introduced ;
var bool: aux3750_BOOL:: var_is_introduced ;
var bool: aux3751_BOOL:: var_is_introduced ;
var bool: aux3752_BOOL:: var_is_introduced ;
var {0,1}: aux3752_INTEGER :: var_is_introduced ;
var bool: aux3753_BOOL:: var_is_introduced ;
var bool: aux3754_BOOL:: var_is_introduced ;
var 1..58: aux3755:: var_is_introduced ;
var bool: aux3756_BOOL:: var_is_introduced ;
var bool: aux3757_BOOL:: var_is_introduced ;
var bool: aux3758_BOOL:: var_is_introduced ;
var {0,1}: aux3758_INTEGER :: var_is_introduced ;
var bool: aux3759_BOOL:: var_is_introduced ;
var bool: aux3760_BOOL:: var_is_introduced ;
var 3..60: aux3761:: var_is_introduced ;
var bool: aux3762_BOOL:: var_is_introduced ;
var bool: aux3763_BOOL:: var_is_introduced ;
var bool: aux3764_BOOL:: var_is_introduced ;
var {0,1}: aux3764_INTEGER :: var_is_introduced ;
var bool: aux3765_BOOL:: var_is_introduced ;
var bool: aux3766_BOOL:: var_is_introduced ;
var 4..61: aux3767:: var_is_introduced ;
var bool: aux3768_BOOL:: var_is_introduced ;
var bool: aux3769_BOOL:: var_is_introduced ;
var bool: aux3770_BOOL:: var_is_introduced ;
var {0,1}: aux3770_INTEGER :: var_is_introduced ;
var bool: aux3771_BOOL:: var_is_introduced ;
var bool: aux3772_BOOL:: var_is_introduced ;
var 1..58: aux3773:: var_is_introduced ;
var bool: aux3774_BOOL:: var_is_introduced ;
var bool: aux3775_BOOL:: var_is_introduced ;
var bool: aux3776_BOOL:: var_is_introduced ;
var {0,1}: aux3776_INTEGER :: var_is_introduced ;
var bool: aux3777_BOOL:: var_is_introduced ;
var bool: aux3778_BOOL:: var_is_introduced ;
var 4..61: aux3779:: var_is_introduced ;
var bool: aux3780_BOOL:: var_is_introduced ;
var bool: aux3781_BOOL:: var_is_introduced ;
var bool: aux3782_BOOL:: var_is_introduced ;
var {0,1}: aux3782_INTEGER :: var_is_introduced ;
var bool: aux3783_BOOL:: var_is_introduced ;
var bool: aux3784_BOOL:: var_is_introduced ;
var 2..59: aux3785:: var_is_introduced ;
var bool: aux3786_BOOL:: var_is_introduced ;
var bool: aux3787_BOOL:: var_is_introduced ;
var bool: aux3788_BOOL:: var_is_introduced ;
var {0,1}: aux3788_INTEGER :: var_is_introduced ;
var bool: aux3789_BOOL:: var_is_introduced ;
var bool: aux3790_BOOL:: var_is_introduced ;
var 1..58: aux3791:: var_is_introduced ;
var bool: aux3792_BOOL:: var_is_introduced ;
var bool: aux3793_BOOL:: var_is_introduced ;
var {0,1}: aux3793_INTEGER :: var_is_introduced ;
var bool: aux3794_BOOL:: var_is_introduced ;
var bool: aux3795_BOOL:: var_is_introduced ;
var 4..61: aux3796:: var_is_introduced ;
var bool: aux3797_BOOL:: var_is_introduced ;
var bool: aux3798_BOOL:: var_is_introduced ;
var bool: aux3799_BOOL:: var_is_introduced ;
var {0,1}: aux3799_INTEGER :: var_is_introduced ;
var bool: aux3800_BOOL:: var_is_introduced ;
var bool: aux3801_BOOL:: var_is_introduced ;
var 4..61: aux3802:: var_is_introduced ;
var bool: aux3803_BOOL:: var_is_introduced ;
var bool: aux3804_BOOL:: var_is_introduced ;
var bool: aux3805_BOOL:: var_is_introduced ;
var {0,1}: aux3805_INTEGER :: var_is_introduced ;
var bool: aux3806_BOOL:: var_is_introduced ;
var bool: aux3807_BOOL:: var_is_introduced ;
var 3..60: aux3808:: var_is_introduced ;
var bool: aux3809_BOOL:: var_is_introduced ;
var bool: aux3810_BOOL:: var_is_introduced ;
var bool: aux3811_BOOL:: var_is_introduced ;
var {0,1}: aux3811_INTEGER :: var_is_introduced ;
var bool: aux3812_BOOL:: var_is_introduced ;
var bool: aux3813_BOOL:: var_is_introduced ;
var 2..59: aux3814:: var_is_introduced ;
var bool: aux3815_BOOL:: var_is_introduced ;
var bool: aux3816_BOOL:: var_is_introduced ;
var bool: aux3817_BOOL:: var_is_introduced ;
var {0,1}: aux3817_INTEGER :: var_is_introduced ;
var bool: aux3818_BOOL:: var_is_introduced ;
var bool: aux3819_BOOL:: var_is_introduced ;
var 3..60: aux3820:: var_is_introduced ;
var bool: aux3821_BOOL:: var_is_introduced ;
var bool: aux3822_BOOL:: var_is_introduced ;
var bool: aux3823_BOOL:: var_is_introduced ;
var {0,1}: aux3823_INTEGER :: var_is_introduced ;
var bool: aux3824_BOOL:: var_is_introduced ;
var bool: aux3825_BOOL:: var_is_introduced ;
var 2..59: aux3826:: var_is_introduced ;
var bool: aux3827_BOOL:: var_is_introduced ;
var bool: aux3828_BOOL:: var_is_introduced ;
var bool: aux3829_BOOL:: var_is_introduced ;
var {0,1}: aux3829_INTEGER :: var_is_introduced ;
var bool: aux3830_BOOL:: var_is_introduced ;
var bool: aux3831_BOOL:: var_is_introduced ;
var 3..60: aux3832:: var_is_introduced ;
var bool: aux3833_BOOL:: var_is_introduced ;
var bool: aux3834_BOOL:: var_is_introduced ;
var bool: aux3835_BOOL:: var_is_introduced ;
var {0,1}: aux3835_INTEGER :: var_is_introduced ;
var bool: aux3836_BOOL:: var_is_introduced ;
var bool: aux3837_BOOL:: var_is_introduced ;
var 2..59: aux3838:: var_is_introduced ;
var bool: aux3839_BOOL:: var_is_introduced ;
var bool: aux3840_BOOL:: var_is_introduced ;
var bool: aux3841_BOOL:: var_is_introduced ;
var {0,1}: aux3841_INTEGER :: var_is_introduced ;
var bool: aux3842_BOOL:: var_is_introduced ;
var bool: aux3843_BOOL:: var_is_introduced ;
var 2..59: aux3844:: var_is_introduced ;
var bool: aux3845_BOOL:: var_is_introduced ;
var bool: aux3846_BOOL:: var_is_introduced ;
var bool: aux3847_BOOL:: var_is_introduced ;
var {0,1}: aux3847_INTEGER :: var_is_introduced ;
var bool: aux3848_BOOL:: var_is_introduced ;
var bool: aux3849_BOOL:: var_is_introduced ;
var 5..62: aux3850:: var_is_introduced ;
var bool: aux3851_BOOL:: var_is_introduced ;
var bool: aux3852_BOOL:: var_is_introduced ;
var bool: aux3853_BOOL:: var_is_introduced ;
var {0,1}: aux3853_INTEGER :: var_is_introduced ;
var bool: aux3854_BOOL:: var_is_introduced ;
var bool: aux3855_BOOL:: var_is_introduced ;
var 3..60: aux3856:: var_is_introduced ;
var bool: aux3857_BOOL:: var_is_introduced ;
var bool: aux3858_BOOL:: var_is_introduced ;
var bool: aux3859_BOOL:: var_is_introduced ;
var {0,1}: aux3859_INTEGER :: var_is_introduced ;
var bool: aux3860_BOOL:: var_is_introduced ;
var bool: aux3861_BOOL:: var_is_introduced ;
var 4..61: aux3862:: var_is_introduced ;
var bool: aux3863_BOOL:: var_is_introduced ;
var bool: aux3864_BOOL:: var_is_introduced ;
var bool: aux3865_BOOL:: var_is_introduced ;
var {0,1}: aux3865_INTEGER :: var_is_introduced ;
var bool: aux3866_BOOL:: var_is_introduced ;
var bool: aux3867_BOOL:: var_is_introduced ;
var 3..60: aux3868:: var_is_introduced ;
var bool: aux3869_BOOL:: var_is_introduced ;
var bool: aux3870_BOOL:: var_is_introduced ;
var bool: aux3871_BOOL:: var_is_introduced ;
var {0,1}: aux3871_INTEGER :: var_is_introduced ;
var bool: aux3872_BOOL:: var_is_introduced ;
var bool: aux3873_BOOL:: var_is_introduced ;
var 2..59: aux3874:: var_is_introduced ;
var bool: aux3875_BOOL:: var_is_introduced ;
var bool: aux3876_BOOL:: var_is_introduced ;
var bool: aux3877_BOOL:: var_is_introduced ;
var {0,1}: aux3877_INTEGER :: var_is_introduced ;
var bool: aux3878_BOOL:: var_is_introduced ;
var bool: aux3879_BOOL:: var_is_introduced ;
var 1..58: aux3880:: var_is_introduced ;
var bool: aux3881_BOOL:: var_is_introduced ;
var bool: aux3882_BOOL:: var_is_introduced ;
var bool: aux3883_BOOL:: var_is_introduced ;
var {0,1}: aux3883_INTEGER :: var_is_introduced ;
var bool: aux3884_BOOL:: var_is_introduced ;
var bool: aux3885_BOOL:: var_is_introduced ;
var 3..60: aux3886:: var_is_introduced ;
var bool: aux3887_BOOL:: var_is_introduced ;
var bool: aux3888_BOOL:: var_is_introduced ;
var bool: aux3889_BOOL:: var_is_introduced ;
var {0,1}: aux3889_INTEGER :: var_is_introduced ;
var bool: aux3890_BOOL:: var_is_introduced ;
var bool: aux3891_BOOL:: var_is_introduced ;
var 4..61: aux3892:: var_is_introduced ;
var bool: aux3893_BOOL:: var_is_introduced ;
var bool: aux3894_BOOL:: var_is_introduced ;
var bool: aux3895_BOOL:: var_is_introduced ;
var {0,1}: aux3895_INTEGER :: var_is_introduced ;
var bool: aux3896_BOOL:: var_is_introduced ;
var bool: aux3897_BOOL:: var_is_introduced ;
var 4..61: aux3898:: var_is_introduced ;
var bool: aux3899_BOOL:: var_is_introduced ;
var bool: aux3900_BOOL:: var_is_introduced ;
var bool: aux3901_BOOL:: var_is_introduced ;
var {0,1}: aux3901_INTEGER :: var_is_introduced ;
var bool: aux3902_BOOL:: var_is_introduced ;
var bool: aux3903_BOOL:: var_is_introduced ;
var 2..59: aux3904:: var_is_introduced ;
var bool: aux3905_BOOL:: var_is_introduced ;
var bool: aux3906_BOOL:: var_is_introduced ;
var bool: aux3907_BOOL:: var_is_introduced ;
var {0,1}: aux3907_INTEGER :: var_is_introduced ;
var bool: aux3908_BOOL:: var_is_introduced ;
var bool: aux3909_BOOL:: var_is_introduced ;
var 3..60: aux3910:: var_is_introduced ;
var bool: aux3911_BOOL:: var_is_introduced ;
var bool: aux3912_BOOL:: var_is_introduced ;
var {0,1}: aux3912_INTEGER :: var_is_introduced ;
var bool: aux3913_BOOL:: var_is_introduced ;
var bool: aux3914_BOOL:: var_is_introduced ;
var 4..61: aux3915:: var_is_introduced ;
var bool: aux3916_BOOL:: var_is_introduced ;
var bool: aux3917_BOOL:: var_is_introduced ;
var bool: aux3918_BOOL:: var_is_introduced ;
var {0,1}: aux3918_INTEGER :: var_is_introduced ;
var bool: aux3919_BOOL:: var_is_introduced ;
var bool: aux3920_BOOL:: var_is_introduced ;
var 4..61: aux3921:: var_is_introduced ;
var bool: aux3922_BOOL:: var_is_introduced ;
var bool: aux3923_BOOL:: var_is_introduced ;
var bool: aux3924_BOOL:: var_is_introduced ;
var {0,1}: aux3924_INTEGER :: var_is_introduced ;
var bool: aux3925_BOOL:: var_is_introduced ;
var bool: aux3926_BOOL:: var_is_introduced ;
var 3..60: aux3927:: var_is_introduced ;
var bool: aux3928_BOOL:: var_is_introduced ;
var bool: aux3929_BOOL:: var_is_introduced ;
var bool: aux3930_BOOL:: var_is_introduced ;
var {0,1}: aux3930_INTEGER :: var_is_introduced ;
var bool: aux3931_BOOL:: var_is_introduced ;
var bool: aux3932_BOOL:: var_is_introduced ;
var 2..59: aux3933:: var_is_introduced ;
var bool: aux3934_BOOL:: var_is_introduced ;
var bool: aux3935_BOOL:: var_is_introduced ;
var bool: aux3936_BOOL:: var_is_introduced ;
var {0,1}: aux3936_INTEGER :: var_is_introduced ;
var bool: aux3937_BOOL:: var_is_introduced ;
var bool: aux3938_BOOL:: var_is_introduced ;
var 3..60: aux3939:: var_is_introduced ;
var bool: aux3940_BOOL:: var_is_introduced ;
var bool: aux3941_BOOL:: var_is_introduced ;
var bool: aux3942_BOOL:: var_is_introduced ;
var {0,1}: aux3942_INTEGER :: var_is_introduced ;
var bool: aux3943_BOOL:: var_is_introduced ;
var bool: aux3944_BOOL:: var_is_introduced ;
var 2..59: aux3945:: var_is_introduced ;
var bool: aux3946_BOOL:: var_is_introduced ;
var bool: aux3947_BOOL:: var_is_introduced ;
var bool: aux3948_BOOL:: var_is_introduced ;
var {0,1}: aux3948_INTEGER :: var_is_introduced ;
var bool: aux3949_BOOL:: var_is_introduced ;
var bool: aux3950_BOOL:: var_is_introduced ;
var 2..59: aux3951:: var_is_introduced ;
var bool: aux3952_BOOL:: var_is_introduced ;
var bool: aux3953_BOOL:: var_is_introduced ;
var bool: aux3954_BOOL:: var_is_introduced ;
var {0,1}: aux3954_INTEGER :: var_is_introduced ;
var bool: aux3955_BOOL:: var_is_introduced ;
var bool: aux3956_BOOL:: var_is_introduced ;
var 2..59: aux3957:: var_is_introduced ;
var bool: aux3958_BOOL:: var_is_introduced ;
var bool: aux3959_BOOL:: var_is_introduced ;
var bool: aux3960_BOOL:: var_is_introduced ;
var {0,1}: aux3960_INTEGER :: var_is_introduced ;
var bool: aux3961_BOOL:: var_is_introduced ;
var bool: aux3962_BOOL:: var_is_introduced ;
var 5..62: aux3963:: var_is_introduced ;
var bool: aux3964_BOOL:: var_is_introduced ;
var bool: aux3965_BOOL:: var_is_introduced ;
var bool: aux3966_BOOL:: var_is_introduced ;
var {0,1}: aux3966_INTEGER :: var_is_introduced ;
var bool: aux3967_BOOL:: var_is_introduced ;
var bool: aux3968_BOOL:: var_is_introduced ;
var 3..60: aux3969:: var_is_introduced ;
var bool: aux3970_BOOL:: var_is_introduced ;
var bool: aux3971_BOOL:: var_is_introduced ;
var bool: aux3972_BOOL:: var_is_introduced ;
var {0,1}: aux3972_INTEGER :: var_is_introduced ;
var bool: aux3973_BOOL:: var_is_introduced ;
var bool: aux3974_BOOL:: var_is_introduced ;
var 4..61: aux3975:: var_is_introduced ;
var bool: aux3976_BOOL:: var_is_introduced ;
var bool: aux3977_BOOL:: var_is_introduced ;
var bool: aux3978_BOOL:: var_is_introduced ;
var {0,1}: aux3978_INTEGER :: var_is_introduced ;
var bool: aux3979_BOOL:: var_is_introduced ;
var bool: aux3980_BOOL:: var_is_introduced ;
var 3..60: aux3981:: var_is_introduced ;
var bool: aux3982_BOOL:: var_is_introduced ;
var bool: aux3983_BOOL:: var_is_introduced ;
var bool: aux3984_BOOL:: var_is_introduced ;
var {0,1}: aux3984_INTEGER :: var_is_introduced ;
var bool: aux3985_BOOL:: var_is_introduced ;
var bool: aux3986_BOOL:: var_is_introduced ;
var 2..59: aux3987:: var_is_introduced ;
var bool: aux3988_BOOL:: var_is_introduced ;
var bool: aux3989_BOOL:: var_is_introduced ;
var bool: aux3990_BOOL:: var_is_introduced ;
var {0,1}: aux3990_INTEGER :: var_is_introduced ;
var bool: aux3991_BOOL:: var_is_introduced ;
var bool: aux3992_BOOL:: var_is_introduced ;
var 1..58: aux3993:: var_is_introduced ;
var bool: aux3994_BOOL:: var_is_introduced ;
var bool: aux3995_BOOL:: var_is_introduced ;
var bool: aux3996_BOOL:: var_is_introduced ;
var {0,1}: aux3996_INTEGER :: var_is_introduced ;
var bool: aux3997_BOOL:: var_is_introduced ;
var bool: aux3998_BOOL:: var_is_introduced ;
var 3..60: aux3999:: var_is_introduced ;
var bool: aux4000_BOOL:: var_is_introduced ;
var bool: aux4001_BOOL:: var_is_introduced ;
var bool: aux4002_BOOL:: var_is_introduced ;
var {0,1}: aux4002_INTEGER :: var_is_introduced ;
var bool: aux4003_BOOL:: var_is_introduced ;
var bool: aux4004_BOOL:: var_is_introduced ;
var 4..61: aux4005:: var_is_introduced ;
var bool: aux4006_BOOL:: var_is_introduced ;
var bool: aux4007_BOOL:: var_is_introduced ;
var bool: aux4008_BOOL:: var_is_introduced ;
var {0,1}: aux4008_INTEGER :: var_is_introduced ;
var bool: aux4009_BOOL:: var_is_introduced ;
var bool: aux4010_BOOL:: var_is_introduced ;
var 1..58: aux4011:: var_is_introduced ;
var bool: aux4012_BOOL:: var_is_introduced ;
var bool: aux4013_BOOL:: var_is_introduced ;
var bool: aux4014_BOOL:: var_is_introduced ;
var {0,1}: aux4014_INTEGER :: var_is_introduced ;
var bool: aux4015_BOOL:: var_is_introduced ;
var bool: aux4016_BOOL:: var_is_introduced ;
var 4..61: aux4017:: var_is_introduced ;
var bool: aux4018_BOOL:: var_is_introduced ;
var bool: aux4019_BOOL:: var_is_introduced ;
var bool: aux4020_BOOL:: var_is_introduced ;
var {0,1}: aux4020_INTEGER :: var_is_introduced ;
var bool: aux4021_BOOL:: var_is_introduced ;
var bool: aux4022_BOOL:: var_is_introduced ;
var 2..59: aux4023:: var_is_introduced ;
var bool: aux4024_BOOL:: var_is_introduced ;
var bool: aux4025_BOOL:: var_is_introduced ;
var bool: aux4026_BOOL:: var_is_introduced ;
var {0,1}: aux4026_INTEGER :: var_is_introduced ;
var bool: aux4027_BOOL:: var_is_introduced ;
var bool: aux4028_BOOL:: var_is_introduced ;
var 2..59: aux4029:: var_is_introduced ;
var bool: aux4030_BOOL:: var_is_introduced ;
var bool: aux4031_BOOL:: var_is_introduced ;
var {0,1}: aux4031_INTEGER :: var_is_introduced ;
var bool: aux4032_BOOL:: var_is_introduced ;
var bool: aux4033_BOOL:: var_is_introduced ;
var 4..61: aux4034:: var_is_introduced ;
var bool: aux4035_BOOL:: var_is_introduced ;
var bool: aux4036_BOOL:: var_is_introduced ;
var bool: aux4037_BOOL:: var_is_introduced ;
var {0,1}: aux4037_INTEGER :: var_is_introduced ;
var bool: aux4038_BOOL:: var_is_introduced ;
var bool: aux4039_BOOL:: var_is_introduced ;
var 4..61: aux4040:: var_is_introduced ;
var bool: aux4041_BOOL:: var_is_introduced ;
var bool: aux4042_BOOL:: var_is_introduced ;
var bool: aux4043_BOOL:: var_is_introduced ;
var {0,1}: aux4043_INTEGER :: var_is_introduced ;
var bool: aux4044_BOOL:: var_is_introduced ;
var bool: aux4045_BOOL:: var_is_introduced ;
var 3..60: aux4046:: var_is_introduced ;
var bool: aux4047_BOOL:: var_is_introduced ;
var bool: aux4048_BOOL:: var_is_introduced ;
var bool: aux4049_BOOL:: var_is_introduced ;
var {0,1}: aux4049_INTEGER :: var_is_introduced ;
var bool: aux4050_BOOL:: var_is_introduced ;
var bool: aux4051_BOOL:: var_is_introduced ;
var 2..59: aux4052:: var_is_introduced ;
var bool: aux4053_BOOL:: var_is_introduced ;
var bool: aux4054_BOOL:: var_is_introduced ;
var bool: aux4055_BOOL:: var_is_introduced ;
var {0,1}: aux4055_INTEGER :: var_is_introduced ;
var bool: aux4056_BOOL:: var_is_introduced ;
var bool: aux4057_BOOL:: var_is_introduced ;
var 3..60: aux4058:: var_is_introduced ;
var bool: aux4059_BOOL:: var_is_introduced ;
var bool: aux4060_BOOL:: var_is_introduced ;
var bool: aux4061_BOOL:: var_is_introduced ;
var {0,1}: aux4061_INTEGER :: var_is_introduced ;
var bool: aux4062_BOOL:: var_is_introduced ;
var bool: aux4063_BOOL:: var_is_introduced ;
var 3..60: aux4064:: var_is_introduced ;
var bool: aux4065_BOOL:: var_is_introduced ;
var bool: aux4066_BOOL:: var_is_introduced ;
var bool: aux4067_BOOL:: var_is_introduced ;
var {0,1}: aux4067_INTEGER :: var_is_introduced ;
var bool: aux4068_BOOL:: var_is_introduced ;
var bool: aux4069_BOOL:: var_is_introduced ;
var 2..59: aux4070:: var_is_introduced ;
var bool: aux4071_BOOL:: var_is_introduced ;
var bool: aux4072_BOOL:: var_is_introduced ;
var bool: aux4073_BOOL:: var_is_introduced ;
var {0,1}: aux4073_INTEGER :: var_is_introduced ;
var bool: aux4074_BOOL:: var_is_introduced ;
var bool: aux4075_BOOL:: var_is_introduced ;
var 2..59: aux4076:: var_is_introduced ;
var bool: aux4077_BOOL:: var_is_introduced ;
var bool: aux4078_BOOL:: var_is_introduced ;
var bool: aux4079_BOOL:: var_is_introduced ;
var {0,1}: aux4079_INTEGER :: var_is_introduced ;
var bool: aux4080_BOOL:: var_is_introduced ;
var bool: aux4081_BOOL:: var_is_introduced ;
var 5..62: aux4082:: var_is_introduced ;
var bool: aux4083_BOOL:: var_is_introduced ;
var bool: aux4084_BOOL:: var_is_introduced ;
var bool: aux4085_BOOL:: var_is_introduced ;
var {0,1}: aux4085_INTEGER :: var_is_introduced ;
var bool: aux4086_BOOL:: var_is_introduced ;
var bool: aux4087_BOOL:: var_is_introduced ;
var 3..60: aux4088:: var_is_introduced ;
var bool: aux4089_BOOL:: var_is_introduced ;
var bool: aux4090_BOOL:: var_is_introduced ;
var bool: aux4091_BOOL:: var_is_introduced ;
var {0,1}: aux4091_INTEGER :: var_is_introduced ;
var bool: aux4092_BOOL:: var_is_introduced ;
var bool: aux4093_BOOL:: var_is_introduced ;
var 4..61: aux4094:: var_is_introduced ;
var bool: aux4095_BOOL:: var_is_introduced ;
var bool: aux4096_BOOL:: var_is_introduced ;
var bool: aux4097_BOOL:: var_is_introduced ;
var {0,1}: aux4097_INTEGER :: var_is_introduced ;
var bool: aux4098_BOOL:: var_is_introduced ;
var bool: aux4099_BOOL:: var_is_introduced ;
var 3..60: aux4100:: var_is_introduced ;
var bool: aux4101_BOOL:: var_is_introduced ;
var bool: aux4102_BOOL:: var_is_introduced ;
var bool: aux4103_BOOL:: var_is_introduced ;
var {0,1}: aux4103_INTEGER :: var_is_introduced ;
var bool: aux4104_BOOL:: var_is_introduced ;
var bool: aux4105_BOOL:: var_is_introduced ;
var 2..59: aux4106:: var_is_introduced ;
var bool: aux4107_BOOL:: var_is_introduced ;
var bool: aux4108_BOOL:: var_is_introduced ;
var bool: aux4109_BOOL:: var_is_introduced ;
var {0,1}: aux4109_INTEGER :: var_is_introduced ;
var bool: aux4110_BOOL:: var_is_introduced ;
var bool: aux4111_BOOL:: var_is_introduced ;
var 1..58: aux4112:: var_is_introduced ;
var bool: aux4113_BOOL:: var_is_introduced ;
var bool: aux4114_BOOL:: var_is_introduced ;
var bool: aux4115_BOOL:: var_is_introduced ;
var {0,1}: aux4115_INTEGER :: var_is_introduced ;
var bool: aux4116_BOOL:: var_is_introduced ;
var bool: aux4117_BOOL:: var_is_introduced ;
var 3..60: aux4118:: var_is_introduced ;
var bool: aux4119_BOOL:: var_is_introduced ;
var bool: aux4120_BOOL:: var_is_introduced ;
var bool: aux4121_BOOL:: var_is_introduced ;
var {0,1}: aux4121_INTEGER :: var_is_introduced ;
var bool: aux4122_BOOL:: var_is_introduced ;
var bool: aux4123_BOOL:: var_is_introduced ;
var 4..61: aux4124:: var_is_introduced ;
var bool: aux4125_BOOL:: var_is_introduced ;
var bool: aux4126_BOOL:: var_is_introduced ;
var bool: aux4127_BOOL:: var_is_introduced ;
var {0,1}: aux4127_INTEGER :: var_is_introduced ;
var bool: aux4128_BOOL:: var_is_introduced ;
var bool: aux4129_BOOL:: var_is_introduced ;
var 1..58: aux4130:: var_is_introduced ;
var bool: aux4131_BOOL:: var_is_introduced ;
var bool: aux4132_BOOL:: var_is_introduced ;
var bool: aux4133_BOOL:: var_is_introduced ;
var {0,1}: aux4133_INTEGER :: var_is_introduced ;
var bool: aux4134_BOOL:: var_is_introduced ;
var bool: aux4135_BOOL:: var_is_introduced ;
var 4..61: aux4136:: var_is_introduced ;
var bool: aux4137_BOOL:: var_is_introduced ;
var bool: aux4138_BOOL:: var_is_introduced ;
var bool: aux4139_BOOL:: var_is_introduced ;
var {0,1}: aux4139_INTEGER :: var_is_introduced ;
var bool: aux4140_BOOL:: var_is_introduced ;
var bool: aux4141_BOOL:: var_is_introduced ;
var 2..59: aux4142:: var_is_introduced ;
var bool: aux4143_BOOL:: var_is_introduced ;
var bool: aux4144_BOOL:: var_is_introduced ;
var bool: aux4145_BOOL:: var_is_introduced ;
var {0,1}: aux4145_INTEGER :: var_is_introduced ;
var bool: aux4146_BOOL:: var_is_introduced ;
var bool: aux4147_BOOL:: var_is_introduced ;
var 2..59: aux4148:: var_is_introduced ;
var bool: aux4149_BOOL:: var_is_introduced ;
var bool: aux4150_BOOL:: var_is_introduced ;
var {0,1}: aux4150_INTEGER :: var_is_introduced ;
var bool: aux4151_BOOL:: var_is_introduced ;
var bool: aux4152_BOOL:: var_is_introduced ;
var 4..61: aux4153:: var_is_introduced ;
var bool: aux4154_BOOL:: var_is_introduced ;
var bool: aux4155_BOOL:: var_is_introduced ;
var bool: aux4156_BOOL:: var_is_introduced ;
var {0,1}: aux4156_INTEGER :: var_is_introduced ;
var bool: aux4157_BOOL:: var_is_introduced ;
var bool: aux4158_BOOL:: var_is_introduced ;
var 4..61: aux4159:: var_is_introduced ;
var bool: aux4160_BOOL:: var_is_introduced ;
var bool: aux4161_BOOL:: var_is_introduced ;
var bool: aux4162_BOOL:: var_is_introduced ;
var {0,1}: aux4162_INTEGER :: var_is_introduced ;
var bool: aux4163_BOOL:: var_is_introduced ;
var bool: aux4164_BOOL:: var_is_introduced ;
var 3..60: aux4165:: var_is_introduced ;
var bool: aux4166_BOOL:: var_is_introduced ;
var bool: aux4167_BOOL:: var_is_introduced ;
var bool: aux4168_BOOL:: var_is_introduced ;
var {0,1}: aux4168_INTEGER :: var_is_introduced ;
var bool: aux4169_BOOL:: var_is_introduced ;
var bool: aux4170_BOOL:: var_is_introduced ;
var 2..59: aux4171:: var_is_introduced ;
var bool: aux4172_BOOL:: var_is_introduced ;
var bool: aux4173_BOOL:: var_is_introduced ;
var bool: aux4174_BOOL:: var_is_introduced ;
var {0,1}: aux4174_INTEGER :: var_is_introduced ;
var bool: aux4175_BOOL:: var_is_introduced ;
var bool: aux4176_BOOL:: var_is_introduced ;
var 3..60: aux4177:: var_is_introduced ;
var bool: aux4178_BOOL:: var_is_introduced ;
var bool: aux4179_BOOL:: var_is_introduced ;
var bool: aux4180_BOOL:: var_is_introduced ;
var {0,1}: aux4180_INTEGER :: var_is_introduced ;
var bool: aux4181_BOOL:: var_is_introduced ;
var bool: aux4182_BOOL:: var_is_introduced ;
var 2..59: aux4183:: var_is_introduced ;
var bool: aux4184_BOOL:: var_is_introduced ;
var bool: aux4185_BOOL:: var_is_introduced ;
var bool: aux4186_BOOL:: var_is_introduced ;
var {0,1}: aux4186_INTEGER :: var_is_introduced ;
var bool: aux4187_BOOL:: var_is_introduced ;
var bool: aux4188_BOOL:: var_is_introduced ;
var 3..60: aux4189:: var_is_introduced ;
var bool: aux4190_BOOL:: var_is_introduced ;
var bool: aux4191_BOOL:: var_is_introduced ;
var bool: aux4192_BOOL:: var_is_introduced ;
var {0,1}: aux4192_INTEGER :: var_is_introduced ;
var bool: aux4193_BOOL:: var_is_introduced ;
var bool: aux4194_BOOL:: var_is_introduced ;
var 2..59: aux4195:: var_is_introduced ;
var bool: aux4196_BOOL:: var_is_introduced ;
var bool: aux4197_BOOL:: var_is_introduced ;
var bool: aux4198_BOOL:: var_is_introduced ;
var {0,1}: aux4198_INTEGER :: var_is_introduced ;
var bool: aux4199_BOOL:: var_is_introduced ;
var bool: aux4200_BOOL:: var_is_introduced ;
var 2..59: aux4201:: var_is_introduced ;
var bool: aux4202_BOOL:: var_is_introduced ;
var bool: aux4203_BOOL:: var_is_introduced ;
var bool: aux4204_BOOL:: var_is_introduced ;
var {0,1}: aux4204_INTEGER :: var_is_introduced ;
var bool: aux4205_BOOL:: var_is_introduced ;
var bool: aux4206_BOOL:: var_is_introduced ;
var 5..62: aux4207:: var_is_introduced ;
var bool: aux4208_BOOL:: var_is_introduced ;
var bool: aux4209_BOOL:: var_is_introduced ;
var bool: aux4210_BOOL:: var_is_introduced ;
var {0,1}: aux4210_INTEGER :: var_is_introduced ;
var bool: aux4211_BOOL:: var_is_introduced ;
var bool: aux4212_BOOL:: var_is_introduced ;
var 3..60: aux4213:: var_is_introduced ;
var bool: aux4214_BOOL:: var_is_introduced ;
var bool: aux4215_BOOL:: var_is_introduced ;
var bool: aux4216_BOOL:: var_is_introduced ;
var {0,1}: aux4216_INTEGER :: var_is_introduced ;
var bool: aux4217_BOOL:: var_is_introduced ;
var bool: aux4218_BOOL:: var_is_introduced ;
var 4..61: aux4219:: var_is_introduced ;
var bool: aux4220_BOOL:: var_is_introduced ;
var bool: aux4221_BOOL:: var_is_introduced ;
var bool: aux4222_BOOL:: var_is_introduced ;
var {0,1}: aux4222_INTEGER :: var_is_introduced ;
var bool: aux4223_BOOL:: var_is_introduced ;
var bool: aux4224_BOOL:: var_is_introduced ;
var 3..60: aux4225:: var_is_introduced ;
var bool: aux4226_BOOL:: var_is_introduced ;
var bool: aux4227_BOOL:: var_is_introduced ;
var bool: aux4228_BOOL:: var_is_introduced ;
var {0,1}: aux4228_INTEGER :: var_is_introduced ;
var bool: aux4229_BOOL:: var_is_introduced ;
var bool: aux4230_BOOL:: var_is_introduced ;
var 2..59: aux4231:: var_is_introduced ;
var bool: aux4232_BOOL:: var_is_introduced ;
var bool: aux4233_BOOL:: var_is_introduced ;
var bool: aux4234_BOOL:: var_is_introduced ;
var {0,1}: aux4234_INTEGER :: var_is_introduced ;
var bool: aux4235_BOOL:: var_is_introduced ;
var bool: aux4236_BOOL:: var_is_introduced ;
var 1..58: aux4237:: var_is_introduced ;
var bool: aux4238_BOOL:: var_is_introduced ;
var bool: aux4239_BOOL:: var_is_introduced ;
var bool: aux4240_BOOL:: var_is_introduced ;
var {0,1}: aux4240_INTEGER :: var_is_introduced ;
var bool: aux4241_BOOL:: var_is_introduced ;
var bool: aux4242_BOOL:: var_is_introduced ;
var 3..60: aux4243:: var_is_introduced ;
var bool: aux4244_BOOL:: var_is_introduced ;
var bool: aux4245_BOOL:: var_is_introduced ;
var bool: aux4246_BOOL:: var_is_introduced ;
var {0,1}: aux4246_INTEGER :: var_is_introduced ;
var bool: aux4247_BOOL:: var_is_introduced ;
var bool: aux4248_BOOL:: var_is_introduced ;
var 4..61: aux4249:: var_is_introduced ;
var bool: aux4250_BOOL:: var_is_introduced ;
var bool: aux4251_BOOL:: var_is_introduced ;
var bool: aux4252_BOOL:: var_is_introduced ;
var {0,1}: aux4252_INTEGER :: var_is_introduced ;
var bool: aux4253_BOOL:: var_is_introduced ;
var bool: aux4254_BOOL:: var_is_introduced ;
var 1..58: aux4255:: var_is_introduced ;
var bool: aux4256_BOOL:: var_is_introduced ;
var bool: aux4257_BOOL:: var_is_introduced ;
var bool: aux4258_BOOL:: var_is_introduced ;
var {0,1}: aux4258_INTEGER :: var_is_introduced ;
var bool: aux4259_BOOL:: var_is_introduced ;
var bool: aux4260_BOOL:: var_is_introduced ;
var 4..61: aux4261:: var_is_introduced ;
var bool: aux4262_BOOL:: var_is_introduced ;
var bool: aux4263_BOOL:: var_is_introduced ;
var bool: aux4264_BOOL:: var_is_introduced ;
var {0,1}: aux4264_INTEGER :: var_is_introduced ;
var bool: aux4265_BOOL:: var_is_introduced ;
var bool: aux4266_BOOL:: var_is_introduced ;
var 4..61: aux4267:: var_is_introduced ;
var bool: aux4268_BOOL:: var_is_introduced ;
var bool: aux4269_BOOL:: var_is_introduced ;
var {0,1}: aux4269_INTEGER :: var_is_introduced ;
var bool: aux4270_BOOL:: var_is_introduced ;
var bool: aux4271_BOOL:: var_is_introduced ;
var 4..61: aux4272:: var_is_introduced ;
var bool: aux4273_BOOL:: var_is_introduced ;
var bool: aux4274_BOOL:: var_is_introduced ;
var bool: aux4275_BOOL:: var_is_introduced ;
var {0,1}: aux4275_INTEGER :: var_is_introduced ;
var bool: aux4276_BOOL:: var_is_introduced ;
var bool: aux4277_BOOL:: var_is_introduced ;
var 3..60: aux4278:: var_is_introduced ;
var bool: aux4279_BOOL:: var_is_introduced ;
var bool: aux4280_BOOL:: var_is_introduced ;
var bool: aux4281_BOOL:: var_is_introduced ;
var {0,1}: aux4281_INTEGER :: var_is_introduced ;
var bool: aux4282_BOOL:: var_is_introduced ;
var bool: aux4283_BOOL:: var_is_introduced ;
var 2..59: aux4284:: var_is_introduced ;
var bool: aux4285_BOOL:: var_is_introduced ;
var bool: aux4286_BOOL:: var_is_introduced ;
var bool: aux4287_BOOL:: var_is_introduced ;
var {0,1}: aux4287_INTEGER :: var_is_introduced ;
var bool: aux4288_BOOL:: var_is_introduced ;
var bool: aux4289_BOOL:: var_is_introduced ;
var 3..60: aux4290:: var_is_introduced ;
var bool: aux4291_BOOL:: var_is_introduced ;
var bool: aux4292_BOOL:: var_is_introduced ;
var bool: aux4293_BOOL:: var_is_introduced ;
var {0,1}: aux4293_INTEGER :: var_is_introduced ;
var bool: aux4294_BOOL:: var_is_introduced ;
var bool: aux4295_BOOL:: var_is_introduced ;
var 2..59: aux4296:: var_is_introduced ;
var bool: aux4297_BOOL:: var_is_introduced ;
var bool: aux4298_BOOL:: var_is_introduced ;
var bool: aux4299_BOOL:: var_is_introduced ;
var {0,1}: aux4299_INTEGER :: var_is_introduced ;
var bool: aux4300_BOOL:: var_is_introduced ;
var bool: aux4301_BOOL:: var_is_introduced ;
var 3..60: aux4302:: var_is_introduced ;
var bool: aux4303_BOOL:: var_is_introduced ;
var bool: aux4304_BOOL:: var_is_introduced ;
var bool: aux4305_BOOL:: var_is_introduced ;
var {0,1}: aux4305_INTEGER :: var_is_introduced ;
var bool: aux4306_BOOL:: var_is_introduced ;
var bool: aux4307_BOOL:: var_is_introduced ;
var 2..59: aux4308:: var_is_introduced ;
var bool: aux4309_BOOL:: var_is_introduced ;
var bool: aux4310_BOOL:: var_is_introduced ;
var bool: aux4311_BOOL:: var_is_introduced ;
var {0,1}: aux4311_INTEGER :: var_is_introduced ;
var bool: aux4312_BOOL:: var_is_introduced ;
var bool: aux4313_BOOL:: var_is_introduced ;
var 2..59: aux4314:: var_is_introduced ;
var bool: aux4315_BOOL:: var_is_introduced ;
var bool: aux4316_BOOL:: var_is_introduced ;
var bool: aux4317_BOOL:: var_is_introduced ;
var {0,1}: aux4317_INTEGER :: var_is_introduced ;
var bool: aux4318_BOOL:: var_is_introduced ;
var bool: aux4319_BOOL:: var_is_introduced ;
var 5..62: aux4320:: var_is_introduced ;
var bool: aux4321_BOOL:: var_is_introduced ;
var bool: aux4322_BOOL:: var_is_introduced ;
var bool: aux4323_BOOL:: var_is_introduced ;
var {0,1}: aux4323_INTEGER :: var_is_introduced ;
var bool: aux4324_BOOL:: var_is_introduced ;
var bool: aux4325_BOOL:: var_is_introduced ;
var 3..60: aux4326:: var_is_introduced ;
var bool: aux4327_BOOL:: var_is_introduced ;
var bool: aux4328_BOOL:: var_is_introduced ;
var bool: aux4329_BOOL:: var_is_introduced ;
var {0,1}: aux4329_INTEGER :: var_is_introduced ;
var bool: aux4330_BOOL:: var_is_introduced ;
var bool: aux4331_BOOL:: var_is_introduced ;
var 4..61: aux4332:: var_is_introduced ;
var bool: aux4333_BOOL:: var_is_introduced ;
var bool: aux4334_BOOL:: var_is_introduced ;
var bool: aux4335_BOOL:: var_is_introduced ;
var {0,1}: aux4335_INTEGER :: var_is_introduced ;
var bool: aux4336_BOOL:: var_is_introduced ;
var bool: aux4337_BOOL:: var_is_introduced ;
var 3..60: aux4338:: var_is_introduced ;
var bool: aux4339_BOOL:: var_is_introduced ;
var bool: aux4340_BOOL:: var_is_introduced ;
var bool: aux4341_BOOL:: var_is_introduced ;
var {0,1}: aux4341_INTEGER :: var_is_introduced ;
var bool: aux4342_BOOL:: var_is_introduced ;
var bool: aux4343_BOOL:: var_is_introduced ;
var 2..59: aux4344:: var_is_introduced ;
var bool: aux4345_BOOL:: var_is_introduced ;
var bool: aux4346_BOOL:: var_is_introduced ;
var bool: aux4347_BOOL:: var_is_introduced ;
var {0,1}: aux4347_INTEGER :: var_is_introduced ;
var bool: aux4348_BOOL:: var_is_introduced ;
var bool: aux4349_BOOL:: var_is_introduced ;
var 1..58: aux4350:: var_is_introduced ;
var bool: aux4351_BOOL:: var_is_introduced ;
var bool: aux4352_BOOL:: var_is_introduced ;
var bool: aux4353_BOOL:: var_is_introduced ;
var {0,1}: aux4353_INTEGER :: var_is_introduced ;
var bool: aux4354_BOOL:: var_is_introduced ;
var bool: aux4355_BOOL:: var_is_introduced ;
var 3..60: aux4356:: var_is_introduced ;
var bool: aux4357_BOOL:: var_is_introduced ;
var bool: aux4358_BOOL:: var_is_introduced ;
var bool: aux4359_BOOL:: var_is_introduced ;
var {0,1}: aux4359_INTEGER :: var_is_introduced ;
var bool: aux4360_BOOL:: var_is_introduced ;
var bool: aux4361_BOOL:: var_is_introduced ;
var 4..61: aux4362:: var_is_introduced ;
var bool: aux4363_BOOL:: var_is_introduced ;
var bool: aux4364_BOOL:: var_is_introduced ;
var bool: aux4365_BOOL:: var_is_introduced ;
var {0,1}: aux4365_INTEGER :: var_is_introduced ;
var bool: aux4366_BOOL:: var_is_introduced ;
var bool: aux4367_BOOL:: var_is_introduced ;
var 1..58: aux4368:: var_is_introduced ;
var bool: aux4369_BOOL:: var_is_introduced ;
var bool: aux4370_BOOL:: var_is_introduced ;
var bool: aux4371_BOOL:: var_is_introduced ;
var {0,1}: aux4371_INTEGER :: var_is_introduced ;
var bool: aux4372_BOOL:: var_is_introduced ;
var bool: aux4373_BOOL:: var_is_introduced ;
var 4..61: aux4374:: var_is_introduced ;
var bool: aux4375_BOOL:: var_is_introduced ;
var bool: aux4376_BOOL:: var_is_introduced ;
var bool: aux4377_BOOL:: var_is_introduced ;
var {0,1}: aux4377_INTEGER :: var_is_introduced ;
var bool: aux4378_BOOL:: var_is_introduced ;
var bool: aux4379_BOOL:: var_is_introduced ;
var 2..59: aux4380:: var_is_introduced ;
var bool: aux4381_BOOL:: var_is_introduced ;
var bool: aux4382_BOOL:: var_is_introduced ;
var bool: aux4383_BOOL:: var_is_introduced ;
var {0,1}: aux4383_INTEGER :: var_is_introduced ;
var bool: aux4384_BOOL:: var_is_introduced ;
var bool: aux4385_BOOL:: var_is_introduced ;
var 4..61: aux4386:: var_is_introduced ;
var bool: aux4387_BOOL:: var_is_introduced ;
var bool: aux4388_BOOL:: var_is_introduced ;
var {0,1}: aux4388_INTEGER :: var_is_introduced ;
var bool: aux4389_BOOL:: var_is_introduced ;
var bool: aux4390_BOOL:: var_is_introduced ;
var 4..61: aux4391:: var_is_introduced ;
var bool: aux4392_BOOL:: var_is_introduced ;
var bool: aux4393_BOOL:: var_is_introduced ;
var bool: aux4394_BOOL:: var_is_introduced ;
var {0,1}: aux4394_INTEGER :: var_is_introduced ;
var bool: aux4395_BOOL:: var_is_introduced ;
var bool: aux4396_BOOL:: var_is_introduced ;
var 4..61: aux4397:: var_is_introduced ;
var bool: aux4398_BOOL:: var_is_introduced ;
var bool: aux4399_BOOL:: var_is_introduced ;
var bool: aux4400_BOOL:: var_is_introduced ;
var {0,1}: aux4400_INTEGER :: var_is_introduced ;
var bool: aux4401_BOOL:: var_is_introduced ;
var bool: aux4402_BOOL:: var_is_introduced ;
var 3..60: aux4403:: var_is_introduced ;
var bool: aux4404_BOOL:: var_is_introduced ;
var bool: aux4405_BOOL:: var_is_introduced ;
var bool: aux4406_BOOL:: var_is_introduced ;
var {0,1}: aux4406_INTEGER :: var_is_introduced ;
var bool: aux4407_BOOL:: var_is_introduced ;
var bool: aux4408_BOOL:: var_is_introduced ;
var 2..59: aux4409:: var_is_introduced ;
var bool: aux4410_BOOL:: var_is_introduced ;
var bool: aux4411_BOOL:: var_is_introduced ;
var bool: aux4412_BOOL:: var_is_introduced ;
var {0,1}: aux4412_INTEGER :: var_is_introduced ;
var bool: aux4413_BOOL:: var_is_introduced ;
var bool: aux4414_BOOL:: var_is_introduced ;
var 3..60: aux4415:: var_is_introduced ;
var bool: aux4416_BOOL:: var_is_introduced ;
var bool: aux4417_BOOL:: var_is_introduced ;
var bool: aux4418_BOOL:: var_is_introduced ;
var {0,1}: aux4418_INTEGER :: var_is_introduced ;
var bool: aux4419_BOOL:: var_is_introduced ;
var bool: aux4420_BOOL:: var_is_introduced ;
var 2..59: aux4421:: var_is_introduced ;
var bool: aux4422_BOOL:: var_is_introduced ;
var bool: aux4423_BOOL:: var_is_introduced ;
var bool: aux4424_BOOL:: var_is_introduced ;
var {0,1}: aux4424_INTEGER :: var_is_introduced ;
var bool: aux4425_BOOL:: var_is_introduced ;
var bool: aux4426_BOOL:: var_is_introduced ;
var 3..60: aux4427:: var_is_introduced ;
var bool: aux4428_BOOL:: var_is_introduced ;
var bool: aux4429_BOOL:: var_is_introduced ;
var bool: aux4430_BOOL:: var_is_introduced ;
var {0,1}: aux4430_INTEGER :: var_is_introduced ;
var bool: aux4431_BOOL:: var_is_introduced ;
var bool: aux4432_BOOL:: var_is_introduced ;
var 2..59: aux4433:: var_is_introduced ;
var bool: aux4434_BOOL:: var_is_introduced ;
var bool: aux4435_BOOL:: var_is_introduced ;
var bool: aux4436_BOOL:: var_is_introduced ;
var {0,1}: aux4436_INTEGER :: var_is_introduced ;
var bool: aux4437_BOOL:: var_is_introduced ;
var bool: aux4438_BOOL:: var_is_introduced ;
var 2..59: aux4439:: var_is_introduced ;
var bool: aux4440_BOOL:: var_is_introduced ;
var bool: aux4441_BOOL:: var_is_introduced ;
var bool: aux4442_BOOL:: var_is_introduced ;
var {0,1}: aux4442_INTEGER :: var_is_introduced ;
var bool: aux4443_BOOL:: var_is_introduced ;
var bool: aux4444_BOOL:: var_is_introduced ;
var 5..62: aux4445:: var_is_introduced ;
var bool: aux4446_BOOL:: var_is_introduced ;
var bool: aux4447_BOOL:: var_is_introduced ;
var bool: aux4448_BOOL:: var_is_introduced ;
var {0,1}: aux4448_INTEGER :: var_is_introduced ;
var bool: aux4449_BOOL:: var_is_introduced ;
var bool: aux4450_BOOL:: var_is_introduced ;
var 3..60: aux4451:: var_is_introduced ;
var bool: aux4452_BOOL:: var_is_introduced ;
var bool: aux4453_BOOL:: var_is_introduced ;
var bool: aux4454_BOOL:: var_is_introduced ;
var {0,1}: aux4454_INTEGER :: var_is_introduced ;
var bool: aux4455_BOOL:: var_is_introduced ;
var bool: aux4456_BOOL:: var_is_introduced ;
var 3..60: aux4457:: var_is_introduced ;
var bool: aux4458_BOOL:: var_is_introduced ;
var bool: aux4459_BOOL:: var_is_introduced ;
var bool: aux4460_BOOL:: var_is_introduced ;
var {0,1}: aux4460_INTEGER :: var_is_introduced ;
var bool: aux4461_BOOL:: var_is_introduced ;
var bool: aux4462_BOOL:: var_is_introduced ;
var 2..59: aux4463:: var_is_introduced ;
var bool: aux4464_BOOL:: var_is_introduced ;
var bool: aux4465_BOOL:: var_is_introduced ;
var bool: aux4466_BOOL:: var_is_introduced ;
var {0,1}: aux4466_INTEGER :: var_is_introduced ;
var bool: aux4467_BOOL:: var_is_introduced ;
var bool: aux4468_BOOL:: var_is_introduced ;
var 1..58: aux4469:: var_is_introduced ;
var bool: aux4470_BOOL:: var_is_introduced ;
var bool: aux4471_BOOL:: var_is_introduced ;
var bool: aux4472_BOOL:: var_is_introduced ;
var {0,1}: aux4472_INTEGER :: var_is_introduced ;
var bool: aux4473_BOOL:: var_is_introduced ;
var bool: aux4474_BOOL:: var_is_introduced ;
var 3..60: aux4475:: var_is_introduced ;
var bool: aux4476_BOOL:: var_is_introduced ;
var bool: aux4477_BOOL:: var_is_introduced ;
var bool: aux4478_BOOL:: var_is_introduced ;
var {0,1}: aux4478_INTEGER :: var_is_introduced ;
var bool: aux4479_BOOL:: var_is_introduced ;
var bool: aux4480_BOOL:: var_is_introduced ;
var 4..61: aux4481:: var_is_introduced ;
var bool: aux4482_BOOL:: var_is_introduced ;
var bool: aux4483_BOOL:: var_is_introduced ;
var bool: aux4484_BOOL:: var_is_introduced ;
var {0,1}: aux4484_INTEGER :: var_is_introduced ;
var bool: aux4485_BOOL:: var_is_introduced ;
var bool: aux4486_BOOL:: var_is_introduced ;
var 1..58: aux4487:: var_is_introduced ;
var bool: aux4488_BOOL:: var_is_introduced ;
var bool: aux4489_BOOL:: var_is_introduced ;
var bool: aux4490_BOOL:: var_is_introduced ;
var {0,1}: aux4490_INTEGER :: var_is_introduced ;
var bool: aux4491_BOOL:: var_is_introduced ;
var bool: aux4492_BOOL:: var_is_introduced ;
var 4..61: aux4493:: var_is_introduced ;
var bool: aux4494_BOOL:: var_is_introduced ;
var bool: aux4495_BOOL:: var_is_introduced ;
var bool: aux4496_BOOL:: var_is_introduced ;
var {0,1}: aux4496_INTEGER :: var_is_introduced ;
var bool: aux4497_BOOL:: var_is_introduced ;
var bool: aux4498_BOOL:: var_is_introduced ;
var 2..59: aux4499:: var_is_introduced ;
var bool: aux4500_BOOL:: var_is_introduced ;
var bool: aux4501_BOOL:: var_is_introduced ;
var bool: aux4502_BOOL:: var_is_introduced ;
var {0,1}: aux4502_INTEGER :: var_is_introduced ;
var bool: aux4503_BOOL:: var_is_introduced ;
var bool: aux4504_BOOL:: var_is_introduced ;
var 2..59: aux4505:: var_is_introduced ;
var bool: aux4506_BOOL:: var_is_introduced ;
var bool: aux4507_BOOL:: var_is_introduced ;
var {0,1}: aux4507_INTEGER :: var_is_introduced ;
var bool: aux4508_BOOL:: var_is_introduced ;
var bool: aux4509_BOOL:: var_is_introduced ;
var 4..61: aux4510:: var_is_introduced ;
var bool: aux4511_BOOL:: var_is_introduced ;
var bool: aux4512_BOOL:: var_is_introduced ;
var bool: aux4513_BOOL:: var_is_introduced ;
var {0,1}: aux4513_INTEGER :: var_is_introduced ;
var bool: aux4514_BOOL:: var_is_introduced ;
var bool: aux4515_BOOL:: var_is_introduced ;
var 4..61: aux4516:: var_is_introduced ;
var bool: aux4517_BOOL:: var_is_introduced ;
var bool: aux4518_BOOL:: var_is_introduced ;
var bool: aux4519_BOOL:: var_is_introduced ;
var {0,1}: aux4519_INTEGER :: var_is_introduced ;
var bool: aux4520_BOOL:: var_is_introduced ;
var bool: aux4521_BOOL:: var_is_introduced ;
var 3..60: aux4522:: var_is_introduced ;
var bool: aux4523_BOOL:: var_is_introduced ;
var bool: aux4524_BOOL:: var_is_introduced ;
var bool: aux4525_BOOL:: var_is_introduced ;
var {0,1}: aux4525_INTEGER :: var_is_introduced ;
var bool: aux4526_BOOL:: var_is_introduced ;
var bool: aux4527_BOOL:: var_is_introduced ;
var 2..59: aux4528:: var_is_introduced ;
var bool: aux4529_BOOL:: var_is_introduced ;
var bool: aux4530_BOOL:: var_is_introduced ;
var bool: aux4531_BOOL:: var_is_introduced ;
var {0,1}: aux4531_INTEGER :: var_is_introduced ;
var bool: aux4532_BOOL:: var_is_introduced ;
var bool: aux4533_BOOL:: var_is_introduced ;
var 3..60: aux4534:: var_is_introduced ;
var bool: aux4535_BOOL:: var_is_introduced ;
var bool: aux4536_BOOL:: var_is_introduced ;
var bool: aux4537_BOOL:: var_is_introduced ;
var {0,1}: aux4537_INTEGER :: var_is_introduced ;
var bool: aux4538_BOOL:: var_is_introduced ;
var bool: aux4539_BOOL:: var_is_introduced ;
var 2..59: aux4540:: var_is_introduced ;
var bool: aux4541_BOOL:: var_is_introduced ;
var bool: aux4542_BOOL:: var_is_introduced ;
var bool: aux4543_BOOL:: var_is_introduced ;
var {0,1}: aux4543_INTEGER :: var_is_introduced ;
var bool: aux4544_BOOL:: var_is_introduced ;
var bool: aux4545_BOOL:: var_is_introduced ;
var 3..60: aux4546:: var_is_introduced ;
var bool: aux4547_BOOL:: var_is_introduced ;
var bool: aux4548_BOOL:: var_is_introduced ;
var bool: aux4549_BOOL:: var_is_introduced ;
var {0,1}: aux4549_INTEGER :: var_is_introduced ;
var bool: aux4550_BOOL:: var_is_introduced ;
var bool: aux4551_BOOL:: var_is_introduced ;
var 2..59: aux4552:: var_is_introduced ;
var bool: aux4553_BOOL:: var_is_introduced ;
var bool: aux4554_BOOL:: var_is_introduced ;
var bool: aux4555_BOOL:: var_is_introduced ;
var {0,1}: aux4555_INTEGER :: var_is_introduced ;
var bool: aux4556_BOOL:: var_is_introduced ;
var bool: aux4557_BOOL:: var_is_introduced ;
var 5..62: aux4558:: var_is_introduced ;
var bool: aux4559_BOOL:: var_is_introduced ;
var bool: aux4560_BOOL:: var_is_introduced ;
var bool: aux4561_BOOL:: var_is_introduced ;
var {0,1}: aux4561_INTEGER :: var_is_introduced ;
var bool: aux4562_BOOL:: var_is_introduced ;
var bool: aux4563_BOOL:: var_is_introduced ;
var 3..60: aux4564:: var_is_introduced ;
var bool: aux4565_BOOL:: var_is_introduced ;
var bool: aux4566_BOOL:: var_is_introduced ;
var bool: aux4567_BOOL:: var_is_introduced ;
var {0,1}: aux4567_INTEGER :: var_is_introduced ;
var bool: aux4568_BOOL:: var_is_introduced ;
var bool: aux4569_BOOL:: var_is_introduced ;
var 4..61: aux4570:: var_is_introduced ;
var bool: aux4571_BOOL:: var_is_introduced ;
var bool: aux4572_BOOL:: var_is_introduced ;
var bool: aux4573_BOOL:: var_is_introduced ;
var {0,1}: aux4573_INTEGER :: var_is_introduced ;
var bool: aux4574_BOOL:: var_is_introduced ;
var bool: aux4575_BOOL:: var_is_introduced ;
var 3..60: aux4576:: var_is_introduced ;
var bool: aux4577_BOOL:: var_is_introduced ;
var bool: aux4578_BOOL:: var_is_introduced ;
var bool: aux4579_BOOL:: var_is_introduced ;
var {0,1}: aux4579_INTEGER :: var_is_introduced ;
var bool: aux4580_BOOL:: var_is_introduced ;
var bool: aux4581_BOOL:: var_is_introduced ;
var 2..59: aux4582:: var_is_introduced ;
var bool: aux4583_BOOL:: var_is_introduced ;
var bool: aux4584_BOOL:: var_is_introduced ;
var bool: aux4585_BOOL:: var_is_introduced ;
var {0,1}: aux4585_INTEGER :: var_is_introduced ;
var bool: aux4586_BOOL:: var_is_introduced ;
var bool: aux4587_BOOL:: var_is_introduced ;
var 1..58: aux4588:: var_is_introduced ;
var bool: aux4589_BOOL:: var_is_introduced ;
var bool: aux4590_BOOL:: var_is_introduced ;
var bool: aux4591_BOOL:: var_is_introduced ;
var {0,1}: aux4591_INTEGER :: var_is_introduced ;
var bool: aux4592_BOOL:: var_is_introduced ;
var bool: aux4593_BOOL:: var_is_introduced ;
var 3..60: aux4594:: var_is_introduced ;
var bool: aux4595_BOOL:: var_is_introduced ;
var bool: aux4596_BOOL:: var_is_introduced ;
var bool: aux4597_BOOL:: var_is_introduced ;
var {0,1}: aux4597_INTEGER :: var_is_introduced ;
var bool: aux4598_BOOL:: var_is_introduced ;
var bool: aux4599_BOOL:: var_is_introduced ;
var 4..61: aux4600:: var_is_introduced ;
var bool: aux4601_BOOL:: var_is_introduced ;
var bool: aux4602_BOOL:: var_is_introduced ;
var bool: aux4603_BOOL:: var_is_introduced ;
var {0,1}: aux4603_INTEGER :: var_is_introduced ;
var bool: aux4604_BOOL:: var_is_introduced ;
var bool: aux4605_BOOL:: var_is_introduced ;
var 1..58: aux4606:: var_is_introduced ;
var bool: aux4607_BOOL:: var_is_introduced ;
var bool: aux4608_BOOL:: var_is_introduced ;
var bool: aux4609_BOOL:: var_is_introduced ;
var {0,1}: aux4609_INTEGER :: var_is_introduced ;
var bool: aux4610_BOOL:: var_is_introduced ;
var bool: aux4611_BOOL:: var_is_introduced ;
var 4..61: aux4612:: var_is_introduced ;
var bool: aux4613_BOOL:: var_is_introduced ;
var bool: aux4614_BOOL:: var_is_introduced ;
var bool: aux4615_BOOL:: var_is_introduced ;
var {0,1}: aux4615_INTEGER :: var_is_introduced ;
var bool: aux4616_BOOL:: var_is_introduced ;
var bool: aux4617_BOOL:: var_is_introduced ;
var 2..59: aux4618:: var_is_introduced ;
var bool: aux4619_BOOL:: var_is_introduced ;
var bool: aux4620_BOOL:: var_is_introduced ;
var bool: aux4621_BOOL:: var_is_introduced ;
var {0,1}: aux4621_INTEGER :: var_is_introduced ;
var bool: aux4622_BOOL:: var_is_introduced ;
var bool: aux4623_BOOL:: var_is_introduced ;
var 2..59: aux4624:: var_is_introduced ;
var bool: aux4625_BOOL:: var_is_introduced ;
var bool: aux4626_BOOL:: var_is_introduced ;
var {0,1}: aux4626_INTEGER :: var_is_introduced ;
var bool: aux4627_BOOL:: var_is_introduced ;
var bool: aux4628_BOOL:: var_is_introduced ;
var 4..61: aux4629:: var_is_introduced ;
var bool: aux4630_BOOL:: var_is_introduced ;
var bool: aux4631_BOOL:: var_is_introduced ;
var bool: aux4632_BOOL:: var_is_introduced ;
var {0,1}: aux4632_INTEGER :: var_is_introduced ;
var bool: aux4633_BOOL:: var_is_introduced ;
var bool: aux4634_BOOL:: var_is_introduced ;
var 4..61: aux4635:: var_is_introduced ;
var bool: aux4636_BOOL:: var_is_introduced ;
var bool: aux4637_BOOL:: var_is_introduced ;
var bool: aux4638_BOOL:: var_is_introduced ;
var {0,1}: aux4638_INTEGER :: var_is_introduced ;
var bool: aux4639_BOOL:: var_is_introduced ;
var bool: aux4640_BOOL:: var_is_introduced ;
var 3..60: aux4641:: var_is_introduced ;
var bool: aux4642_BOOL:: var_is_introduced ;
var bool: aux4643_BOOL:: var_is_introduced ;
var bool: aux4644_BOOL:: var_is_introduced ;
var {0,1}: aux4644_INTEGER :: var_is_introduced ;
var bool: aux4645_BOOL:: var_is_introduced ;
var bool: aux4646_BOOL:: var_is_introduced ;
var 2..59: aux4647:: var_is_introduced ;
var bool: aux4648_BOOL:: var_is_introduced ;
var bool: aux4649_BOOL:: var_is_introduced ;
var bool: aux4650_BOOL:: var_is_introduced ;
var {0,1}: aux4650_INTEGER :: var_is_introduced ;
var bool: aux4651_BOOL:: var_is_introduced ;
var bool: aux4652_BOOL:: var_is_introduced ;
var 3..60: aux4653:: var_is_introduced ;
var bool: aux4654_BOOL:: var_is_introduced ;
var bool: aux4655_BOOL:: var_is_introduced ;
var bool: aux4656_BOOL:: var_is_introduced ;
var {0,1}: aux4656_INTEGER :: var_is_introduced ;
var bool: aux4657_BOOL:: var_is_introduced ;
var bool: aux4658_BOOL:: var_is_introduced ;
var 2..59: aux4659:: var_is_introduced ;
var bool: aux4660_BOOL:: var_is_introduced ;
var bool: aux4661_BOOL:: var_is_introduced ;
var bool: aux4662_BOOL:: var_is_introduced ;
var {0,1}: aux4662_INTEGER :: var_is_introduced ;
var bool: aux4663_BOOL:: var_is_introduced ;
var bool: aux4664_BOOL:: var_is_introduced ;
var 3..60: aux4665:: var_is_introduced ;
var bool: aux4666_BOOL:: var_is_introduced ;
var bool: aux4667_BOOL:: var_is_introduced ;
var bool: aux4668_BOOL:: var_is_introduced ;
var {0,1}: aux4668_INTEGER :: var_is_introduced ;
var bool: aux4669_BOOL:: var_is_introduced ;
var bool: aux4670_BOOL:: var_is_introduced ;
var 2..59: aux4671:: var_is_introduced ;
var bool: aux4672_BOOL:: var_is_introduced ;
var bool: aux4673_BOOL:: var_is_introduced ;
var bool: aux4674_BOOL:: var_is_introduced ;
var {0,1}: aux4674_INTEGER :: var_is_introduced ;
var bool: aux4675_BOOL:: var_is_introduced ;
var bool: aux4676_BOOL:: var_is_introduced ;
var 2..59: aux4677:: var_is_introduced ;
var bool: aux4678_BOOL:: var_is_introduced ;
var bool: aux4679_BOOL:: var_is_introduced ;
var bool: aux4680_BOOL:: var_is_introduced ;
var {0,1}: aux4680_INTEGER :: var_is_introduced ;
var bool: aux4681_BOOL:: var_is_introduced ;
var bool: aux4682_BOOL:: var_is_introduced ;
var 5..62: aux4683:: var_is_introduced ;
var bool: aux4684_BOOL:: var_is_introduced ;
var bool: aux4685_BOOL:: var_is_introduced ;
var bool: aux4686_BOOL:: var_is_introduced ;
var {0,1}: aux4686_INTEGER :: var_is_introduced ;
var bool: aux4687_BOOL:: var_is_introduced ;
var bool: aux4688_BOOL:: var_is_introduced ;
var 3..60: aux4689:: var_is_introduced ;
var bool: aux4690_BOOL:: var_is_introduced ;
var bool: aux4691_BOOL:: var_is_introduced ;
var bool: aux4692_BOOL:: var_is_introduced ;
var {0,1}: aux4692_INTEGER :: var_is_introduced ;
var bool: aux4693_BOOL:: var_is_introduced ;
var bool: aux4694_BOOL:: var_is_introduced ;
var 4..61: aux4695:: var_is_introduced ;
var bool: aux4696_BOOL:: var_is_introduced ;
var bool: aux4697_BOOL:: var_is_introduced ;
var bool: aux4698_BOOL:: var_is_introduced ;
var {0,1}: aux4698_INTEGER :: var_is_introduced ;
var bool: aux4699_BOOL:: var_is_introduced ;
var bool: aux4700_BOOL:: var_is_introduced ;
var 3..60: aux4701:: var_is_introduced ;
var bool: aux4702_BOOL:: var_is_introduced ;
var bool: aux4703_BOOL:: var_is_introduced ;
var bool: aux4704_BOOL:: var_is_introduced ;
var {0,1}: aux4704_INTEGER :: var_is_introduced ;
var bool: aux4705_BOOL:: var_is_introduced ;
var bool: aux4706_BOOL:: var_is_introduced ;
var 1..58: aux4707:: var_is_introduced ;
var bool: aux4708_BOOL:: var_is_introduced ;
var bool: aux4709_BOOL:: var_is_introduced ;
var bool: aux4710_BOOL:: var_is_introduced ;
var {0,1}: aux4710_INTEGER :: var_is_introduced ;
var bool: aux4711_BOOL:: var_is_introduced ;
var bool: aux4712_BOOL:: var_is_introduced ;
var 3..60: aux4713:: var_is_introduced ;
var bool: aux4714_BOOL:: var_is_introduced ;
var bool: aux4715_BOOL:: var_is_introduced ;
var bool: aux4716_BOOL:: var_is_introduced ;
var {0,1}: aux4716_INTEGER :: var_is_introduced ;
var bool: aux4717_BOOL:: var_is_introduced ;
var bool: aux4718_BOOL:: var_is_introduced ;
var 4..61: aux4719:: var_is_introduced ;
var bool: aux4720_BOOL:: var_is_introduced ;
var bool: aux4721_BOOL:: var_is_introduced ;
var bool: aux4722_BOOL:: var_is_introduced ;
var {0,1}: aux4722_INTEGER :: var_is_introduced ;
var bool: aux4723_BOOL:: var_is_introduced ;
var bool: aux4724_BOOL:: var_is_introduced ;
var 1..58: aux4725:: var_is_introduced ;
var bool: aux4726_BOOL:: var_is_introduced ;
var bool: aux4727_BOOL:: var_is_introduced ;
var bool: aux4728_BOOL:: var_is_introduced ;
var {0,1}: aux4728_INTEGER :: var_is_introduced ;
var bool: aux4729_BOOL:: var_is_introduced ;
var bool: aux4730_BOOL:: var_is_introduced ;
var 4..61: aux4731:: var_is_introduced ;
var bool: aux4732_BOOL:: var_is_introduced ;
var bool: aux4733_BOOL:: var_is_introduced ;
var bool: aux4734_BOOL:: var_is_introduced ;
var {0,1}: aux4734_INTEGER :: var_is_introduced ;
var bool: aux4735_BOOL:: var_is_introduced ;
var bool: aux4736_BOOL:: var_is_introduced ;
var 2..59: aux4737:: var_is_introduced ;
var bool: aux4738_BOOL:: var_is_introduced ;
var bool: aux4739_BOOL:: var_is_introduced ;
var bool: aux4740_BOOL:: var_is_introduced ;
var {0,1}: aux4740_INTEGER :: var_is_introduced ;
var bool: aux4741_BOOL:: var_is_introduced ;
var bool: aux4742_BOOL:: var_is_introduced ;
var 1..58: aux4743:: var_is_introduced ;
var bool: aux4744_BOOL:: var_is_introduced ;
var bool: aux4745_BOOL:: var_is_introduced ;
var {0,1}: aux4745_INTEGER :: var_is_introduced ;
var bool: aux4746_BOOL:: var_is_introduced ;
var bool: aux4747_BOOL:: var_is_introduced ;
var 4..61: aux4748:: var_is_introduced ;
var bool: aux4749_BOOL:: var_is_introduced ;
var bool: aux4750_BOOL:: var_is_introduced ;
var bool: aux4751_BOOL:: var_is_introduced ;
var {0,1}: aux4751_INTEGER :: var_is_introduced ;
var bool: aux4752_BOOL:: var_is_introduced ;
var bool: aux4753_BOOL:: var_is_introduced ;
var 4..61: aux4754:: var_is_introduced ;
var bool: aux4755_BOOL:: var_is_introduced ;
var bool: aux4756_BOOL:: var_is_introduced ;
var bool: aux4757_BOOL:: var_is_introduced ;
var {0,1}: aux4757_INTEGER :: var_is_introduced ;
var bool: aux4758_BOOL:: var_is_introduced ;
var bool: aux4759_BOOL:: var_is_introduced ;
var 3..60: aux4760:: var_is_introduced ;
var bool: aux4761_BOOL:: var_is_introduced ;
var bool: aux4762_BOOL:: var_is_introduced ;
var bool: aux4763_BOOL:: var_is_introduced ;
var {0,1}: aux4763_INTEGER :: var_is_introduced ;
var bool: aux4764_BOOL:: var_is_introduced ;
var bool: aux4765_BOOL:: var_is_introduced ;
var 2..59: aux4766:: var_is_introduced ;
var bool: aux4767_BOOL:: var_is_introduced ;
var bool: aux4768_BOOL:: var_is_introduced ;
var bool: aux4769_BOOL:: var_is_introduced ;
var {0,1}: aux4769_INTEGER :: var_is_introduced ;
var bool: aux4770_BOOL:: var_is_introduced ;
var bool: aux4771_BOOL:: var_is_introduced ;
var 3..60: aux4772:: var_is_introduced ;
var bool: aux4773_BOOL:: var_is_introduced ;
var bool: aux4774_BOOL:: var_is_introduced ;
var bool: aux4775_BOOL:: var_is_introduced ;
var {0,1}: aux4775_INTEGER :: var_is_introduced ;
var bool: aux4776_BOOL:: var_is_introduced ;
var bool: aux4777_BOOL:: var_is_introduced ;
var 2..59: aux4778:: var_is_introduced ;
var bool: aux4779_BOOL:: var_is_introduced ;
var bool: aux4780_BOOL:: var_is_introduced ;
var bool: aux4781_BOOL:: var_is_introduced ;
var {0,1}: aux4781_INTEGER :: var_is_introduced ;
var bool: aux4782_BOOL:: var_is_introduced ;
var bool: aux4783_BOOL:: var_is_introduced ;
var 3..60: aux4784:: var_is_introduced ;
var bool: aux4785_BOOL:: var_is_introduced ;
var bool: aux4786_BOOL:: var_is_introduced ;
var bool: aux4787_BOOL:: var_is_introduced ;
var {0,1}: aux4787_INTEGER :: var_is_introduced ;
var bool: aux4788_BOOL:: var_is_introduced ;
var bool: aux4789_BOOL:: var_is_introduced ;
var 2..59: aux4790:: var_is_introduced ;
var bool: aux4791_BOOL:: var_is_introduced ;
var bool: aux4792_BOOL:: var_is_introduced ;
var bool: aux4793_BOOL:: var_is_introduced ;
var {0,1}: aux4793_INTEGER :: var_is_introduced ;
var bool: aux4794_BOOL:: var_is_introduced ;
var bool: aux4795_BOOL:: var_is_introduced ;
var 2..59: aux4796:: var_is_introduced ;
var bool: aux4797_BOOL:: var_is_introduced ;
var bool: aux4798_BOOL:: var_is_introduced ;
var bool: aux4799_BOOL:: var_is_introduced ;
var {0,1}: aux4799_INTEGER :: var_is_introduced ;
var bool: aux4800_BOOL:: var_is_introduced ;
var bool: aux4801_BOOL:: var_is_introduced ;
var 5..62: aux4802:: var_is_introduced ;
var bool: aux4803_BOOL:: var_is_introduced ;
var bool: aux4804_BOOL:: var_is_introduced ;
var bool: aux4805_BOOL:: var_is_introduced ;
var {0,1}: aux4805_INTEGER :: var_is_introduced ;
var bool: aux4806_BOOL:: var_is_introduced ;
var bool: aux4807_BOOL:: var_is_introduced ;
var 3..60: aux4808:: var_is_introduced ;
var bool: aux4809_BOOL:: var_is_introduced ;
var bool: aux4810_BOOL:: var_is_introduced ;
var bool: aux4811_BOOL:: var_is_introduced ;
var {0,1}: aux4811_INTEGER :: var_is_introduced ;
var bool: aux4812_BOOL:: var_is_introduced ;
var bool: aux4813_BOOL:: var_is_introduced ;
var 4..61: aux4814:: var_is_introduced ;
var bool: aux4815_BOOL:: var_is_introduced ;
var bool: aux4816_BOOL:: var_is_introduced ;
var bool: aux4817_BOOL:: var_is_introduced ;
var {0,1}: aux4817_INTEGER :: var_is_introduced ;
var bool: aux4818_BOOL:: var_is_introduced ;
var bool: aux4819_BOOL:: var_is_introduced ;
var 3..60: aux4820:: var_is_introduced ;
var bool: aux4821_BOOL:: var_is_introduced ;
var bool: aux4822_BOOL:: var_is_introduced ;
var bool: aux4823_BOOL:: var_is_introduced ;
var {0,1}: aux4823_INTEGER :: var_is_introduced ;
var bool: aux4824_BOOL:: var_is_introduced ;
var bool: aux4825_BOOL:: var_is_introduced ;
var 2..59: aux4826:: var_is_introduced ;
var bool: aux4827_BOOL:: var_is_introduced ;
var bool: aux4828_BOOL:: var_is_introduced ;
var bool: aux4829_BOOL:: var_is_introduced ;
var {0,1}: aux4829_INTEGER :: var_is_introduced ;
var bool: aux4830_BOOL:: var_is_introduced ;
var bool: aux4831_BOOL:: var_is_introduced ;
var 3..60: aux4832:: var_is_introduced ;
var bool: aux4833_BOOL:: var_is_introduced ;
var bool: aux4834_BOOL:: var_is_introduced ;
var bool: aux4835_BOOL:: var_is_introduced ;
var {0,1}: aux4835_INTEGER :: var_is_introduced ;
var bool: aux4836_BOOL:: var_is_introduced ;
var bool: aux4837_BOOL:: var_is_introduced ;
var 4..61: aux4838:: var_is_introduced ;
var bool: aux4839_BOOL:: var_is_introduced ;
var bool: aux4840_BOOL:: var_is_introduced ;
var bool: aux4841_BOOL:: var_is_introduced ;
var {0,1}: aux4841_INTEGER :: var_is_introduced ;
var bool: aux4842_BOOL:: var_is_introduced ;
var bool: aux4843_BOOL:: var_is_introduced ;
var 1..58: aux4844:: var_is_introduced ;
var bool: aux4845_BOOL:: var_is_introduced ;
var bool: aux4846_BOOL:: var_is_introduced ;
var bool: aux4847_BOOL:: var_is_introduced ;
var {0,1}: aux4847_INTEGER :: var_is_introduced ;
var bool: aux4848_BOOL:: var_is_introduced ;
var bool: aux4849_BOOL:: var_is_introduced ;
var 4..61: aux4850:: var_is_introduced ;
var bool: aux4851_BOOL:: var_is_introduced ;
var bool: aux4852_BOOL:: var_is_introduced ;
var bool: aux4853_BOOL:: var_is_introduced ;
var {0,1}: aux4853_INTEGER :: var_is_introduced ;
var bool: aux4854_BOOL:: var_is_introduced ;
var bool: aux4855_BOOL:: var_is_introduced ;
var 2..59: aux4856:: var_is_introduced ;
var bool: aux4857_BOOL:: var_is_introduced ;
var bool: aux4858_BOOL:: var_is_introduced ;
var bool: aux4859_BOOL:: var_is_introduced ;
var {0,1}: aux4859_INTEGER :: var_is_introduced ;
var bool: aux4860_BOOL:: var_is_introduced ;
var bool: aux4861_BOOL:: var_is_introduced ;
var 3..60: aux4862:: var_is_introduced ;
var bool: aux4863_BOOL:: var_is_introduced ;
var bool: aux4864_BOOL:: var_is_introduced ;
var {0,1}: aux4864_INTEGER :: var_is_introduced ;
var bool: aux4865_BOOL:: var_is_introduced ;
var bool: aux4866_BOOL:: var_is_introduced ;
var 4..61: aux4867:: var_is_introduced ;
var bool: aux4868_BOOL:: var_is_introduced ;
var bool: aux4869_BOOL:: var_is_introduced ;
var bool: aux4870_BOOL:: var_is_introduced ;
var {0,1}: aux4870_INTEGER :: var_is_introduced ;
var bool: aux4871_BOOL:: var_is_introduced ;
var bool: aux4872_BOOL:: var_is_introduced ;
var 4..61: aux4873:: var_is_introduced ;
var bool: aux4874_BOOL:: var_is_introduced ;
var bool: aux4875_BOOL:: var_is_introduced ;
var bool: aux4876_BOOL:: var_is_introduced ;
var {0,1}: aux4876_INTEGER :: var_is_introduced ;
var bool: aux4877_BOOL:: var_is_introduced ;
var bool: aux4878_BOOL:: var_is_introduced ;
var 3..60: aux4879:: var_is_introduced ;
var bool: aux4880_BOOL:: var_is_introduced ;
var bool: aux4881_BOOL:: var_is_introduced ;
var bool: aux4882_BOOL:: var_is_introduced ;
var {0,1}: aux4882_INTEGER :: var_is_introduced ;
var bool: aux4883_BOOL:: var_is_introduced ;
var bool: aux4884_BOOL:: var_is_introduced ;
var 2..59: aux4885:: var_is_introduced ;
var bool: aux4886_BOOL:: var_is_introduced ;
var bool: aux4887_BOOL:: var_is_introduced ;
var bool: aux4888_BOOL:: var_is_introduced ;
var {0,1}: aux4888_INTEGER :: var_is_introduced ;
var bool: aux4889_BOOL:: var_is_introduced ;
var bool: aux4890_BOOL:: var_is_introduced ;
var 3..60: aux4891:: var_is_introduced ;
var bool: aux4892_BOOL:: var_is_introduced ;
var bool: aux4893_BOOL:: var_is_introduced ;
var bool: aux4894_BOOL:: var_is_introduced ;
var {0,1}: aux4894_INTEGER :: var_is_introduced ;
var bool: aux4895_BOOL:: var_is_introduced ;
var bool: aux4896_BOOL:: var_is_introduced ;
var 2..59: aux4897:: var_is_introduced ;
var bool: aux4898_BOOL:: var_is_introduced ;
var bool: aux4899_BOOL:: var_is_introduced ;
var bool: aux4900_BOOL:: var_is_introduced ;
var {0,1}: aux4900_INTEGER :: var_is_introduced ;
var bool: aux4901_BOOL:: var_is_introduced ;
var bool: aux4902_BOOL:: var_is_introduced ;
var 3..60: aux4903:: var_is_introduced ;
var bool: aux4904_BOOL:: var_is_introduced ;
var bool: aux4905_BOOL:: var_is_introduced ;
var bool: aux4906_BOOL:: var_is_introduced ;
var {0,1}: aux4906_INTEGER :: var_is_introduced ;
var bool: aux4907_BOOL:: var_is_introduced ;
var bool: aux4908_BOOL:: var_is_introduced ;
var 2..59: aux4909:: var_is_introduced ;
var bool: aux4910_BOOL:: var_is_introduced ;
var bool: aux4911_BOOL:: var_is_introduced ;
var bool: aux4912_BOOL:: var_is_introduced ;
var {0,1}: aux4912_INTEGER :: var_is_introduced ;
var bool: aux4913_BOOL:: var_is_introduced ;
var bool: aux4914_BOOL:: var_is_introduced ;
var 2..59: aux4915:: var_is_introduced ;
var bool: aux4916_BOOL:: var_is_introduced ;
var bool: aux4917_BOOL:: var_is_introduced ;
var bool: aux4918_BOOL:: var_is_introduced ;
var {0,1}: aux4918_INTEGER :: var_is_introduced ;
var bool: aux4919_BOOL:: var_is_introduced ;
var bool: aux4920_BOOL:: var_is_introduced ;
var 5..62: aux4921:: var_is_introduced ;
var bool: aux4922_BOOL:: var_is_introduced ;
var bool: aux4923_BOOL:: var_is_introduced ;
var bool: aux4924_BOOL:: var_is_introduced ;
var {0,1}: aux4924_INTEGER :: var_is_introduced ;
var bool: aux4925_BOOL:: var_is_introduced ;
var bool: aux4926_BOOL:: var_is_introduced ;
var 4..61: aux4927:: var_is_introduced ;
var bool: aux4928_BOOL:: var_is_introduced ;
var bool: aux4929_BOOL:: var_is_introduced ;
var bool: aux4930_BOOL:: var_is_introduced ;
var {0,1}: aux4930_INTEGER :: var_is_introduced ;
var bool: aux4931_BOOL:: var_is_introduced ;
var bool: aux4932_BOOL:: var_is_introduced ;
var 3..60: aux4933:: var_is_introduced ;
var bool: aux4934_BOOL:: var_is_introduced ;
var bool: aux4935_BOOL:: var_is_introduced ;
var bool: aux4936_BOOL:: var_is_introduced ;
var {0,1}: aux4936_INTEGER :: var_is_introduced ;
var bool: aux4937_BOOL:: var_is_introduced ;
var bool: aux4938_BOOL:: var_is_introduced ;
var 2..59: aux4939:: var_is_introduced ;
var bool: aux4940_BOOL:: var_is_introduced ;
var bool: aux4941_BOOL:: var_is_introduced ;
var bool: aux4942_BOOL:: var_is_introduced ;
var {0,1}: aux4942_INTEGER :: var_is_introduced ;
var bool: aux4943_BOOL:: var_is_introduced ;
var bool: aux4944_BOOL:: var_is_introduced ;
var 1..58: aux4945:: var_is_introduced ;
var bool: aux4946_BOOL:: var_is_introduced ;
var bool: aux4947_BOOL:: var_is_introduced ;
var bool: aux4948_BOOL:: var_is_introduced ;
var {0,1}: aux4948_INTEGER :: var_is_introduced ;
var bool: aux4949_BOOL:: var_is_introduced ;
var bool: aux4950_BOOL:: var_is_introduced ;
var 3..60: aux4951:: var_is_introduced ;
var bool: aux4952_BOOL:: var_is_introduced ;
var bool: aux4953_BOOL:: var_is_introduced ;
var bool: aux4954_BOOL:: var_is_introduced ;
var {0,1}: aux4954_INTEGER :: var_is_introduced ;
var bool: aux4955_BOOL:: var_is_introduced ;
var bool: aux4956_BOOL:: var_is_introduced ;
var 4..61: aux4957:: var_is_introduced ;
var bool: aux4958_BOOL:: var_is_introduced ;
var bool: aux4959_BOOL:: var_is_introduced ;
var bool: aux4960_BOOL:: var_is_introduced ;
var {0,1}: aux4960_INTEGER :: var_is_introduced ;
var bool: aux4961_BOOL:: var_is_introduced ;
var bool: aux4962_BOOL:: var_is_introduced ;
var 1..58: aux4963:: var_is_introduced ;
var bool: aux4964_BOOL:: var_is_introduced ;
var bool: aux4965_BOOL:: var_is_introduced ;
var bool: aux4966_BOOL:: var_is_introduced ;
var {0,1}: aux4966_INTEGER :: var_is_introduced ;
var bool: aux4967_BOOL:: var_is_introduced ;
var bool: aux4968_BOOL:: var_is_introduced ;
var 4..61: aux4969:: var_is_introduced ;
var bool: aux4970_BOOL:: var_is_introduced ;
var bool: aux4971_BOOL:: var_is_introduced ;
var bool: aux4972_BOOL:: var_is_introduced ;
var {0,1}: aux4972_INTEGER :: var_is_introduced ;
var bool: aux4973_BOOL:: var_is_introduced ;
var bool: aux4974_BOOL:: var_is_introduced ;
var 2..59: aux4975:: var_is_introduced ;
var bool: aux4976_BOOL:: var_is_introduced ;
var bool: aux4977_BOOL:: var_is_introduced ;
var bool: aux4978_BOOL:: var_is_introduced ;
var {0,1}: aux4978_INTEGER :: var_is_introduced ;
var bool: aux4979_BOOL:: var_is_introduced ;
var bool: aux4980_BOOL:: var_is_introduced ;
var 2..59: aux4981:: var_is_introduced ;
var bool: aux4982_BOOL:: var_is_introduced ;
var bool: aux4983_BOOL:: var_is_introduced ;
var {0,1}: aux4983_INTEGER :: var_is_introduced ;
var bool: aux4984_BOOL:: var_is_introduced ;
var bool: aux4985_BOOL:: var_is_introduced ;
var 4..61: aux4986:: var_is_introduced ;
var bool: aux4987_BOOL:: var_is_introduced ;
var bool: aux4988_BOOL:: var_is_introduced ;
var bool: aux4989_BOOL:: var_is_introduced ;
var {0,1}: aux4989_INTEGER :: var_is_introduced ;
var bool: aux4990_BOOL:: var_is_introduced ;
var bool: aux4991_BOOL:: var_is_introduced ;
var 4..61: aux4992:: var_is_introduced ;
var bool: aux4993_BOOL:: var_is_introduced ;
var bool: aux4994_BOOL:: var_is_introduced ;
var bool: aux4995_BOOL:: var_is_introduced ;
var {0,1}: aux4995_INTEGER :: var_is_introduced ;
var bool: aux4996_BOOL:: var_is_introduced ;
var bool: aux4997_BOOL:: var_is_introduced ;
var 3..60: aux4998:: var_is_introduced ;
var bool: aux4999_BOOL:: var_is_introduced ;
var bool: aux5000_BOOL:: var_is_introduced ;
var bool: aux5001_BOOL:: var_is_introduced ;
var {0,1}: aux5001_INTEGER :: var_is_introduced ;
var bool: aux5002_BOOL:: var_is_introduced ;
var bool: aux5003_BOOL:: var_is_introduced ;
var 3..60: aux5004:: var_is_introduced ;
var bool: aux5005_BOOL:: var_is_introduced ;
var bool: aux5006_BOOL:: var_is_introduced ;
var bool: aux5007_BOOL:: var_is_introduced ;
var {0,1}: aux5007_INTEGER :: var_is_introduced ;
var bool: aux5008_BOOL:: var_is_introduced ;
var bool: aux5009_BOOL:: var_is_introduced ;
var 2..59: aux5010:: var_is_introduced ;
var bool: aux5011_BOOL:: var_is_introduced ;
var bool: aux5012_BOOL:: var_is_introduced ;
var bool: aux5013_BOOL:: var_is_introduced ;
var {0,1}: aux5013_INTEGER :: var_is_introduced ;
var bool: aux5014_BOOL:: var_is_introduced ;
var bool: aux5015_BOOL:: var_is_introduced ;
var 3..60: aux5016:: var_is_introduced ;
var bool: aux5017_BOOL:: var_is_introduced ;
var bool: aux5018_BOOL:: var_is_introduced ;
var bool: aux5019_BOOL:: var_is_introduced ;
var {0,1}: aux5019_INTEGER :: var_is_introduced ;
var bool: aux5020_BOOL:: var_is_introduced ;
var bool: aux5021_BOOL:: var_is_introduced ;
var 2..59: aux5022:: var_is_introduced ;
var bool: aux5023_BOOL:: var_is_introduced ;
var bool: aux5024_BOOL:: var_is_introduced ;
var bool: aux5025_BOOL:: var_is_introduced ;
var {0,1}: aux5025_INTEGER :: var_is_introduced ;
var bool: aux5026_BOOL:: var_is_introduced ;
var bool: aux5027_BOOL:: var_is_introduced ;
var 2..59: aux5028:: var_is_introduced ;
var bool: aux5029_BOOL:: var_is_introduced ;
var bool: aux5030_BOOL:: var_is_introduced ;
var bool: aux5031_BOOL:: var_is_introduced ;
var {0,1}: aux5031_INTEGER :: var_is_introduced ;
var bool: aux5032_BOOL:: var_is_introduced ;
var bool: aux5033_BOOL:: var_is_introduced ;
var 5..62: aux5034:: var_is_introduced ;
var bool: aux5035_BOOL:: var_is_introduced ;
var bool: aux5036_BOOL:: var_is_introduced ;
var bool: aux5037_BOOL:: var_is_introduced ;
var {0,1}: aux5037_INTEGER :: var_is_introduced ;
var bool: aux5038_BOOL:: var_is_introduced ;
var bool: aux5039_BOOL:: var_is_introduced ;
var 3..60: aux5040:: var_is_introduced ;
var bool: aux5041_BOOL:: var_is_introduced ;
var bool: aux5042_BOOL:: var_is_introduced ;
var bool: aux5043_BOOL:: var_is_introduced ;
var {0,1}: aux5043_INTEGER :: var_is_introduced ;
var bool: aux5044_BOOL:: var_is_introduced ;
var bool: aux5045_BOOL:: var_is_introduced ;
var 4..61: aux5046:: var_is_introduced ;
var bool: aux5047_BOOL:: var_is_introduced ;
var bool: aux5048_BOOL:: var_is_introduced ;
var bool: aux5049_BOOL:: var_is_introduced ;
var {0,1}: aux5049_INTEGER :: var_is_introduced ;
var bool: aux5050_BOOL:: var_is_introduced ;
var bool: aux5051_BOOL:: var_is_introduced ;
var 3..60: aux5052:: var_is_introduced ;
var bool: aux5053_BOOL:: var_is_introduced ;
var bool: aux5054_BOOL:: var_is_introduced ;
var bool: aux5055_BOOL:: var_is_introduced ;
var {0,1}: aux5055_INTEGER :: var_is_introduced ;
var bool: aux5056_BOOL:: var_is_introduced ;
var bool: aux5057_BOOL:: var_is_introduced ;
var 2..59: aux5058:: var_is_introduced ;
var bool: aux5059_BOOL:: var_is_introduced ;
var bool: aux5060_BOOL:: var_is_introduced ;
var bool: aux5061_BOOL:: var_is_introduced ;
var {0,1}: aux5061_INTEGER :: var_is_introduced ;
var bool: aux5062_BOOL:: var_is_introduced ;
var bool: aux5063_BOOL:: var_is_introduced ;
var 1..58: aux5064:: var_is_introduced ;
var bool: aux5065_BOOL:: var_is_introduced ;
var bool: aux5066_BOOL:: var_is_introduced ;
var bool: aux5067_BOOL:: var_is_introduced ;
var {0,1}: aux5067_INTEGER :: var_is_introduced ;
var bool: aux5068_BOOL:: var_is_introduced ;
var bool: aux5069_BOOL:: var_is_introduced ;
var 3..60: aux5070:: var_is_introduced ;
var bool: aux5071_BOOL:: var_is_introduced ;
var bool: aux5072_BOOL:: var_is_introduced ;
var bool: aux5073_BOOL:: var_is_introduced ;
var {0,1}: aux5073_INTEGER :: var_is_introduced ;
var bool: aux5074_BOOL:: var_is_introduced ;
var bool: aux5075_BOOL:: var_is_introduced ;
var 4..61: aux5076:: var_is_introduced ;
var bool: aux5077_BOOL:: var_is_introduced ;
var bool: aux5078_BOOL:: var_is_introduced ;
var bool: aux5079_BOOL:: var_is_introduced ;
var {0,1}: aux5079_INTEGER :: var_is_introduced ;
var bool: aux5080_BOOL:: var_is_introduced ;
var bool: aux5081_BOOL:: var_is_introduced ;
var 1..58: aux5082:: var_is_introduced ;
var bool: aux5083_BOOL:: var_is_introduced ;
var bool: aux5084_BOOL:: var_is_introduced ;
var bool: aux5085_BOOL:: var_is_introduced ;
var {0,1}: aux5085_INTEGER :: var_is_introduced ;
var bool: aux5086_BOOL:: var_is_introduced ;
var bool: aux5087_BOOL:: var_is_introduced ;
var 4..61: aux5088:: var_is_introduced ;
var bool: aux5089_BOOL:: var_is_introduced ;
var bool: aux5090_BOOL:: var_is_introduced ;
var bool: aux5091_BOOL:: var_is_introduced ;
var {0,1}: aux5091_INTEGER :: var_is_introduced ;
var bool: aux5092_BOOL:: var_is_introduced ;
var bool: aux5093_BOOL:: var_is_introduced ;
var 2..59: aux5094:: var_is_introduced ;
var bool: aux5095_BOOL:: var_is_introduced ;
var bool: aux5096_BOOL:: var_is_introduced ;
var bool: aux5097_BOOL:: var_is_introduced ;
var {0,1}: aux5097_INTEGER :: var_is_introduced ;
var bool: aux5098_BOOL:: var_is_introduced ;
var bool: aux5099_BOOL:: var_is_introduced ;
var 2..59: aux5100:: var_is_introduced ;
var bool: aux5101_BOOL:: var_is_introduced ;
var bool: aux5102_BOOL:: var_is_introduced ;
var {0,1}: aux5102_INTEGER :: var_is_introduced ;
var bool: aux5103_BOOL:: var_is_introduced ;
var bool: aux5104_BOOL:: var_is_introduced ;
var 4..61: aux5105:: var_is_introduced ;
var bool: aux5106_BOOL:: var_is_introduced ;
var bool: aux5107_BOOL:: var_is_introduced ;
var bool: aux5108_BOOL:: var_is_introduced ;
var {0,1}: aux5108_INTEGER :: var_is_introduced ;
var bool: aux5109_BOOL:: var_is_introduced ;
var bool: aux5110_BOOL:: var_is_introduced ;
var 4..61: aux5111:: var_is_introduced ;
var bool: aux5112_BOOL:: var_is_introduced ;
var bool: aux5113_BOOL:: var_is_introduced ;
var bool: aux5114_BOOL:: var_is_introduced ;
var {0,1}: aux5114_INTEGER :: var_is_introduced ;
var bool: aux5115_BOOL:: var_is_introduced ;
var bool: aux5116_BOOL:: var_is_introduced ;
var 3..60: aux5117:: var_is_introduced ;
var bool: aux5118_BOOL:: var_is_introduced ;
var bool: aux5119_BOOL:: var_is_introduced ;
var bool: aux5120_BOOL:: var_is_introduced ;
var {0,1}: aux5120_INTEGER :: var_is_introduced ;
var bool: aux5121_BOOL:: var_is_introduced ;
var bool: aux5122_BOOL:: var_is_introduced ;
var 2..59: aux5123:: var_is_introduced ;
var bool: aux5124_BOOL:: var_is_introduced ;
var bool: aux5125_BOOL:: var_is_introduced ;
var bool: aux5126_BOOL:: var_is_introduced ;
var {0,1}: aux5126_INTEGER :: var_is_introduced ;
var bool: aux5127_BOOL:: var_is_introduced ;
var bool: aux5128_BOOL:: var_is_introduced ;
var 3..60: aux5129:: var_is_introduced ;
var bool: aux5130_BOOL:: var_is_introduced ;
var bool: aux5131_BOOL:: var_is_introduced ;
var bool: aux5132_BOOL:: var_is_introduced ;
var {0,1}: aux5132_INTEGER :: var_is_introduced ;
var bool: aux5133_BOOL:: var_is_introduced ;
var bool: aux5134_BOOL:: var_is_introduced ;
var 2..59: aux5135:: var_is_introduced ;
var bool: aux5136_BOOL:: var_is_introduced ;
var bool: aux5137_BOOL:: var_is_introduced ;
var bool: aux5138_BOOL:: var_is_introduced ;
var {0,1}: aux5138_INTEGER :: var_is_introduced ;
var bool: aux5139_BOOL:: var_is_introduced ;
var bool: aux5140_BOOL:: var_is_introduced ;
var 3..60: aux5141:: var_is_introduced ;
var bool: aux5142_BOOL:: var_is_introduced ;
var bool: aux5143_BOOL:: var_is_introduced ;
var bool: aux5144_BOOL:: var_is_introduced ;
var {0,1}: aux5144_INTEGER :: var_is_introduced ;
var bool: aux5145_BOOL:: var_is_introduced ;
var bool: aux5146_BOOL:: var_is_introduced ;
var 2..59: aux5147:: var_is_introduced ;
var bool: aux5148_BOOL:: var_is_introduced ;
var bool: aux5149_BOOL:: var_is_introduced ;
var bool: aux5150_BOOL:: var_is_introduced ;
var {0,1}: aux5150_INTEGER :: var_is_introduced ;
var bool: aux5151_BOOL:: var_is_introduced ;
var bool: aux5152_BOOL:: var_is_introduced ;
var 5..62: aux5153:: var_is_introduced ;
var bool: aux5154_BOOL:: var_is_introduced ;
var bool: aux5155_BOOL:: var_is_introduced ;
var bool: aux5156_BOOL:: var_is_introduced ;
var {0,1}: aux5156_INTEGER :: var_is_introduced ;
var bool: aux5157_BOOL:: var_is_introduced ;
var bool: aux5158_BOOL:: var_is_introduced ;
var 3..60: aux5159:: var_is_introduced ;
var bool: aux5160_BOOL:: var_is_introduced ;
var bool: aux5161_BOOL:: var_is_introduced ;
var bool: aux5162_BOOL:: var_is_introduced ;
var {0,1}: aux5162_INTEGER :: var_is_introduced ;
var bool: aux5163_BOOL:: var_is_introduced ;
var bool: aux5164_BOOL:: var_is_introduced ;
var 4..61: aux5165:: var_is_introduced ;
var bool: aux5166_BOOL:: var_is_introduced ;
var bool: aux5167_BOOL:: var_is_introduced ;
var bool: aux5168_BOOL:: var_is_introduced ;
var {0,1}: aux5168_INTEGER :: var_is_introduced ;
var bool: aux5169_BOOL:: var_is_introduced ;
var bool: aux5170_BOOL:: var_is_introduced ;
var 3..60: aux5171:: var_is_introduced ;
var bool: aux5172_BOOL:: var_is_introduced ;
var bool: aux5173_BOOL:: var_is_introduced ;
var bool: aux5174_BOOL:: var_is_introduced ;
var {0,1}: aux5174_INTEGER :: var_is_introduced ;
var bool: aux5175_BOOL:: var_is_introduced ;
var bool: aux5176_BOOL:: var_is_introduced ;
var 2..59: aux5177:: var_is_introduced ;
var bool: aux5178_BOOL:: var_is_introduced ;
var bool: aux5179_BOOL:: var_is_introduced ;
var bool: aux5180_BOOL:: var_is_introduced ;
var {0,1}: aux5180_INTEGER :: var_is_introduced ;
var bool: aux5181_BOOL:: var_is_introduced ;
var bool: aux5182_BOOL:: var_is_introduced ;
var 1..58: aux5183:: var_is_introduced ;
var bool: aux5184_BOOL:: var_is_introduced ;
var bool: aux5185_BOOL:: var_is_introduced ;
var bool: aux5186_BOOL:: var_is_introduced ;
var {0,1}: aux5186_INTEGER :: var_is_introduced ;
var bool: aux5187_BOOL:: var_is_introduced ;
var bool: aux5188_BOOL:: var_is_introduced ;
var 3..60: aux5189:: var_is_introduced ;
var bool: aux5190_BOOL:: var_is_introduced ;
var bool: aux5191_BOOL:: var_is_introduced ;
var bool: aux5192_BOOL:: var_is_introduced ;
var {0,1}: aux5192_INTEGER :: var_is_introduced ;
var bool: aux5193_BOOL:: var_is_introduced ;
var bool: aux5194_BOOL:: var_is_introduced ;
var 4..61: aux5195:: var_is_introduced ;
var bool: aux5196_BOOL:: var_is_introduced ;
var bool: aux5197_BOOL:: var_is_introduced ;
var bool: aux5198_BOOL:: var_is_introduced ;
var {0,1}: aux5198_INTEGER :: var_is_introduced ;
var bool: aux5199_BOOL:: var_is_introduced ;
var bool: aux5200_BOOL:: var_is_introduced ;
var 1..58: aux5201:: var_is_introduced ;
var bool: aux5202_BOOL:: var_is_introduced ;
var bool: aux5203_BOOL:: var_is_introduced ;
var bool: aux5204_BOOL:: var_is_introduced ;
var {0,1}: aux5204_INTEGER :: var_is_introduced ;
var bool: aux5205_BOOL:: var_is_introduced ;
var bool: aux5206_BOOL:: var_is_introduced ;
var 4..61: aux5207:: var_is_introduced ;
var bool: aux5208_BOOL:: var_is_introduced ;
var bool: aux5209_BOOL:: var_is_introduced ;
var bool: aux5210_BOOL:: var_is_introduced ;
var {0,1}: aux5210_INTEGER :: var_is_introduced ;
var bool: aux5211_BOOL:: var_is_introduced ;
var bool: aux5212_BOOL:: var_is_introduced ;
var 2..59: aux5213:: var_is_introduced ;
var bool: aux5214_BOOL:: var_is_introduced ;
var bool: aux5215_BOOL:: var_is_introduced ;
var bool: aux5216_BOOL:: var_is_introduced ;
var {0,1}: aux5216_INTEGER :: var_is_introduced ;
var bool: aux5217_BOOL:: var_is_introduced ;
var bool: aux5218_BOOL:: var_is_introduced ;
var bool: aux5219_BOOL:: var_is_introduced ;
var 4..61: aux5220:: var_is_introduced ;
var bool: aux5221_BOOL:: var_is_introduced ;
var bool: aux5222_BOOL:: var_is_introduced ;
var bool: aux5223_BOOL:: var_is_introduced ;
var bool: aux5224_BOOL:: var_is_introduced ;
var bool: aux5225_BOOL:: var_is_introduced ;
var {0,1}: aux5225_INTEGER :: var_is_introduced ;
var 4..61: aux5226:: var_is_introduced ;
var bool: aux5227_BOOL:: var_is_introduced ;
var bool: aux5228_BOOL:: var_is_introduced ;
var bool: aux5229_BOOL:: var_is_introduced ;
var bool: aux5230_BOOL:: var_is_introduced ;
var bool: aux5231_BOOL:: var_is_introduced ;
var {0,1}: aux5231_INTEGER :: var_is_introduced ;
var 3..60: aux5232:: var_is_introduced ;
var bool: aux5233_BOOL:: var_is_introduced ;
var bool: aux5234_BOOL:: var_is_introduced ;
var bool: aux5235_BOOL:: var_is_introduced ;
var bool: aux5236_BOOL:: var_is_introduced ;
var bool: aux5237_BOOL:: var_is_introduced ;
var {0,1}: aux5237_INTEGER :: var_is_introduced ;
var 3..60: aux5238:: var_is_introduced ;
var bool: aux5239_BOOL:: var_is_introduced ;
var bool: aux5240_BOOL:: var_is_introduced ;
var bool: aux5241_BOOL:: var_is_introduced ;
var bool: aux5242_BOOL:: var_is_introduced ;
var bool: aux5243_BOOL:: var_is_introduced ;
var {0,1}: aux5243_INTEGER :: var_is_introduced ;
var 2..59: aux5244:: var_is_introduced ;
var bool: aux5245_BOOL:: var_is_introduced ;
var bool: aux5246_BOOL:: var_is_introduced ;
var bool: aux5247_BOOL:: var_is_introduced ;
var bool: aux5248_BOOL:: var_is_introduced ;
var bool: aux5249_BOOL:: var_is_introduced ;
var {0,1}: aux5249_INTEGER :: var_is_introduced ;
var 3..60: aux5250:: var_is_introduced ;
var bool: aux5251_BOOL:: var_is_introduced ;
var bool: aux5252_BOOL:: var_is_introduced ;
var bool: aux5253_BOOL:: var_is_introduced ;
var bool: aux5254_BOOL:: var_is_introduced ;
var bool: aux5255_BOOL:: var_is_introduced ;
var {0,1}: aux5255_INTEGER :: var_is_introduced ;
var 2..59: aux5256:: var_is_introduced ;
var bool: aux5257_BOOL:: var_is_introduced ;
var bool: aux5258_BOOL:: var_is_introduced ;
var bool: aux5259_BOOL:: var_is_introduced ;
var bool: aux5260_BOOL:: var_is_introduced ;
var bool: aux5261_BOOL:: var_is_introduced ;
var {0,1}: aux5261_INTEGER :: var_is_introduced ;
var 2..59: aux5262:: var_is_introduced ;
var bool: aux5263_BOOL:: var_is_introduced ;
var bool: aux5264_BOOL:: var_is_introduced ;
var bool: aux5265_BOOL:: var_is_introduced ;
var bool: aux5266_BOOL:: var_is_introduced ;
var bool: aux5267_BOOL:: var_is_introduced ;
var {0,1}: aux5267_INTEGER :: var_is_introduced ;
var 3..60: aux5268:: var_is_introduced ;
var bool: aux5269_BOOL:: var_is_introduced ;
var bool: aux5270_BOOL:: var_is_introduced ;
var bool: aux5271_BOOL:: var_is_introduced ;
var bool: aux5272_BOOL:: var_is_introduced ;
var bool: aux5273_BOOL:: var_is_introduced ;
var {0,1}: aux5273_INTEGER :: var_is_introduced ;
var 5..62: aux5274:: var_is_introduced ;
var bool: aux5275_BOOL:: var_is_introduced ;
var bool: aux5276_BOOL:: var_is_introduced ;
var bool: aux5277_BOOL:: var_is_introduced ;
var bool: aux5278_BOOL:: var_is_introduced ;
var bool: aux5279_BOOL:: var_is_introduced ;
var {0,1}: aux5279_INTEGER :: var_is_introduced ;
var 4..61: aux5280:: var_is_introduced ;
var bool: aux5281_BOOL:: var_is_introduced ;
var bool: aux5282_BOOL:: var_is_introduced ;
var bool: aux5283_BOOL:: var_is_introduced ;
var bool: aux5284_BOOL:: var_is_introduced ;
var bool: aux5285_BOOL:: var_is_introduced ;
var {0,1}: aux5285_INTEGER :: var_is_introduced ;
var 3..60: aux5286:: var_is_introduced ;
var bool: aux5287_BOOL:: var_is_introduced ;
var bool: aux5288_BOOL:: var_is_introduced ;
var bool: aux5289_BOOL:: var_is_introduced ;
var bool: aux5290_BOOL:: var_is_introduced ;
var bool: aux5291_BOOL:: var_is_introduced ;
var {0,1}: aux5291_INTEGER :: var_is_introduced ;
var 2..59: aux5292:: var_is_introduced ;
var bool: aux5293_BOOL:: var_is_introduced ;
var bool: aux5294_BOOL:: var_is_introduced ;
var bool: aux5295_BOOL:: var_is_introduced ;
var bool: aux5296_BOOL:: var_is_introduced ;
var bool: aux5297_BOOL:: var_is_introduced ;
var {0,1}: aux5297_INTEGER :: var_is_introduced ;
var 1..58: aux5298:: var_is_introduced ;
var bool: aux5299_BOOL:: var_is_introduced ;
var bool: aux5300_BOOL:: var_is_introduced ;
var bool: aux5301_BOOL:: var_is_introduced ;
var bool: aux5302_BOOL:: var_is_introduced ;
var bool: aux5303_BOOL:: var_is_introduced ;
var {0,1}: aux5303_INTEGER :: var_is_introduced ;
var 3..60: aux5304:: var_is_introduced ;
var bool: aux5305_BOOL:: var_is_introduced ;
var bool: aux5306_BOOL:: var_is_introduced ;
var bool: aux5307_BOOL:: var_is_introduced ;
var bool: aux5308_BOOL:: var_is_introduced ;
var bool: aux5309_BOOL:: var_is_introduced ;
var {0,1}: aux5309_INTEGER :: var_is_introduced ;
var 1..58: aux5310:: var_is_introduced ;
var bool: aux5311_BOOL:: var_is_introduced ;
var bool: aux5312_BOOL:: var_is_introduced ;
var bool: aux5313_BOOL:: var_is_introduced ;
var bool: aux5314_BOOL:: var_is_introduced ;
var bool: aux5315_BOOL:: var_is_introduced ;
var {0,1}: aux5315_INTEGER :: var_is_introduced ;
var 4..61: aux5316:: var_is_introduced ;
var bool: aux5317_BOOL:: var_is_introduced ;
var bool: aux5318_BOOL:: var_is_introduced ;
var bool: aux5319_BOOL:: var_is_introduced ;
var bool: aux5320_BOOL:: var_is_introduced ;
var bool: aux5321_BOOL:: var_is_introduced ;
var {0,1}: aux5321_INTEGER :: var_is_introduced ;
var 4..61: aux5322:: var_is_introduced ;
var bool: aux5323_BOOL:: var_is_introduced ;
var bool: aux5324_BOOL:: var_is_introduced ;
var bool: aux5325_BOOL:: var_is_introduced ;
var bool: aux5326_BOOL:: var_is_introduced ;
var bool: aux5327_BOOL:: var_is_introduced ;
var {0,1}: aux5327_INTEGER :: var_is_introduced ;
var 2..59: aux5328:: var_is_introduced ;
var bool: aux5329_BOOL:: var_is_introduced ;
var bool: aux5330_BOOL:: var_is_introduced ;
var bool: aux5331_BOOL:: var_is_introduced ;
var bool: aux5332_BOOL:: var_is_introduced ;
var bool: aux5333_BOOL:: var_is_introduced ;
var {0,1}: aux5333_INTEGER :: var_is_introduced ;
var 2..59: aux5334:: var_is_introduced ;
var bool: aux5335_BOOL:: var_is_introduced ;
var bool: aux5336_BOOL:: var_is_introduced ;
var bool: aux5337_BOOL:: var_is_introduced ;
var {0,1}: aux5337_INTEGER :: var_is_introduced ;
var bool: aux5338_BOOL:: var_is_introduced ;
var 4..61: aux5339:: var_is_introduced ;
var bool: aux5340_BOOL:: var_is_introduced ;
var bool: aux5341_BOOL:: var_is_introduced ;
var bool: aux5342_BOOL:: var_is_introduced ;
var bool: aux5343_BOOL:: var_is_introduced ;
var bool: aux5344_BOOL:: var_is_introduced ;
var {0,1}: aux5344_INTEGER :: var_is_introduced ;
var 4..61: aux5345:: var_is_introduced ;
var bool: aux5346_BOOL:: var_is_introduced ;
var bool: aux5347_BOOL:: var_is_introduced ;
var bool: aux5348_BOOL:: var_is_introduced ;
var bool: aux5349_BOOL:: var_is_introduced ;
var bool: aux5350_BOOL:: var_is_introduced ;
var {0,1}: aux5350_INTEGER :: var_is_introduced ;
var 3..60: aux5351:: var_is_introduced ;
var bool: aux5352_BOOL:: var_is_introduced ;
var bool: aux5353_BOOL:: var_is_introduced ;
var bool: aux5354_BOOL:: var_is_introduced ;
var bool: aux5355_BOOL:: var_is_introduced ;
var bool: aux5356_BOOL:: var_is_introduced ;
var {0,1}: aux5356_INTEGER :: var_is_introduced ;
var 2..59: aux5357:: var_is_introduced ;
var bool: aux5358_BOOL:: var_is_introduced ;
var bool: aux5359_BOOL:: var_is_introduced ;
var bool: aux5360_BOOL:: var_is_introduced ;
var bool: aux5361_BOOL:: var_is_introduced ;
var bool: aux5362_BOOL:: var_is_introduced ;
var {0,1}: aux5362_INTEGER :: var_is_introduced ;
var 3..60: aux5363:: var_is_introduced ;
var bool: aux5364_BOOL:: var_is_introduced ;
var bool: aux5365_BOOL:: var_is_introduced ;
var bool: aux5366_BOOL:: var_is_introduced ;
var bool: aux5367_BOOL:: var_is_introduced ;
var bool: aux5368_BOOL:: var_is_introduced ;
var {0,1}: aux5368_INTEGER :: var_is_introduced ;
var 2..59: aux5369:: var_is_introduced ;
var bool: aux5370_BOOL:: var_is_introduced ;
var bool: aux5371_BOOL:: var_is_introduced ;
var bool: aux5372_BOOL:: var_is_introduced ;
var bool: aux5373_BOOL:: var_is_introduced ;
var bool: aux5374_BOOL:: var_is_introduced ;
var {0,1}: aux5374_INTEGER :: var_is_introduced ;
var 3..60: aux5375:: var_is_introduced ;
var bool: aux5376_BOOL:: var_is_introduced ;
var bool: aux5377_BOOL:: var_is_introduced ;
var bool: aux5378_BOOL:: var_is_introduced ;
var bool: aux5379_BOOL:: var_is_introduced ;
var bool: aux5380_BOOL:: var_is_introduced ;
var {0,1}: aux5380_INTEGER :: var_is_introduced ;
var 2..59: aux5381:: var_is_introduced ;
var bool: aux5382_BOOL:: var_is_introduced ;
var bool: aux5383_BOOL:: var_is_introduced ;
var bool: aux5384_BOOL:: var_is_introduced ;
var bool: aux5385_BOOL:: var_is_introduced ;
var bool: aux5386_BOOL:: var_is_introduced ;
var {0,1}: aux5386_INTEGER :: var_is_introduced ;
var 2..59: aux5387:: var_is_introduced ;
var bool: aux5388_BOOL:: var_is_introduced ;
var bool: aux5389_BOOL:: var_is_introduced ;
var bool: aux5390_BOOL:: var_is_introduced ;
var bool: aux5391_BOOL:: var_is_introduced ;
var bool: aux5392_BOOL:: var_is_introduced ;
var {0,1}: aux5392_INTEGER :: var_is_introduced ;
var 3..60: aux5393:: var_is_introduced ;
var bool: aux5394_BOOL:: var_is_introduced ;
var bool: aux5395_BOOL:: var_is_introduced ;
var bool: aux5396_BOOL:: var_is_introduced ;
var bool: aux5397_BOOL:: var_is_introduced ;
var bool: aux5398_BOOL:: var_is_introduced ;
var {0,1}: aux5398_INTEGER :: var_is_introduced ;
var 5..62: aux5399:: var_is_introduced ;
var bool: aux5400_BOOL:: var_is_introduced ;
var bool: aux5401_BOOL:: var_is_introduced ;
var bool: aux5402_BOOL:: var_is_introduced ;
var bool: aux5403_BOOL:: var_is_introduced ;
var bool: aux5404_BOOL:: var_is_introduced ;
var {0,1}: aux5404_INTEGER :: var_is_introduced ;
var 3..60: aux5405:: var_is_introduced ;
var bool: aux5406_BOOL:: var_is_introduced ;
var bool: aux5407_BOOL:: var_is_introduced ;
var bool: aux5408_BOOL:: var_is_introduced ;
var bool: aux5409_BOOL:: var_is_introduced ;
var bool: aux5410_BOOL:: var_is_introduced ;
var {0,1}: aux5410_INTEGER :: var_is_introduced ;
var 2..59: aux5411:: var_is_introduced ;
var bool: aux5412_BOOL:: var_is_introduced ;
var bool: aux5413_BOOL:: var_is_introduced ;
var bool: aux5414_BOOL:: var_is_introduced ;
var bool: aux5415_BOOL:: var_is_introduced ;
var bool: aux5416_BOOL:: var_is_introduced ;
var {0,1}: aux5416_INTEGER :: var_is_introduced ;
var 1..58: aux5417:: var_is_introduced ;
var bool: aux5418_BOOL:: var_is_introduced ;
var bool: aux5419_BOOL:: var_is_introduced ;
var bool: aux5420_BOOL:: var_is_introduced ;
var bool: aux5421_BOOL:: var_is_introduced ;
var bool: aux5422_BOOL:: var_is_introduced ;
var {0,1}: aux5422_INTEGER :: var_is_introduced ;
var 3..60: aux5423:: var_is_introduced ;
var bool: aux5424_BOOL:: var_is_introduced ;
var bool: aux5425_BOOL:: var_is_introduced ;
var bool: aux5426_BOOL:: var_is_introduced ;
var bool: aux5427_BOOL:: var_is_introduced ;
var bool: aux5428_BOOL:: var_is_introduced ;
var {0,1}: aux5428_INTEGER :: var_is_introduced ;
var 1..58: aux5429:: var_is_introduced ;
var bool: aux5430_BOOL:: var_is_introduced ;
var bool: aux5431_BOOL:: var_is_introduced ;
var bool: aux5432_BOOL:: var_is_introduced ;
var bool: aux5433_BOOL:: var_is_introduced ;
var bool: aux5434_BOOL:: var_is_introduced ;
var {0,1}: aux5434_INTEGER :: var_is_introduced ;
var 4..61: aux5435:: var_is_introduced ;
var bool: aux5436_BOOL:: var_is_introduced ;
var bool: aux5437_BOOL:: var_is_introduced ;
var bool: aux5438_BOOL:: var_is_introduced ;
var bool: aux5439_BOOL:: var_is_introduced ;
var bool: aux5440_BOOL:: var_is_introduced ;
var {0,1}: aux5440_INTEGER :: var_is_introduced ;
var 4..61: aux5441:: var_is_introduced ;
var bool: aux5442_BOOL:: var_is_introduced ;
var bool: aux5443_BOOL:: var_is_introduced ;
var bool: aux5444_BOOL:: var_is_introduced ;
var bool: aux5445_BOOL:: var_is_introduced ;
var bool: aux5446_BOOL:: var_is_introduced ;
var {0,1}: aux5446_INTEGER :: var_is_introduced ;
var 2..59: aux5447:: var_is_introduced ;
var bool: aux5448_BOOL:: var_is_introduced ;
var bool: aux5449_BOOL:: var_is_introduced ;
var bool: aux5450_BOOL:: var_is_introduced ;
var bool: aux5451_BOOL:: var_is_introduced ;
var bool: aux5452_BOOL:: var_is_introduced ;
var {0,1}: aux5452_INTEGER :: var_is_introduced ;
var 4..61: aux5453:: var_is_introduced ;
var bool: aux5454_BOOL:: var_is_introduced ;
var bool: aux5455_BOOL:: var_is_introduced ;
var bool: aux5456_BOOL:: var_is_introduced ;
var {0,1}: aux5456_INTEGER :: var_is_introduced ;
var bool: aux5457_BOOL:: var_is_introduced ;
var 4..61: aux5458:: var_is_introduced ;
var bool: aux5459_BOOL:: var_is_introduced ;
var bool: aux5460_BOOL:: var_is_introduced ;
var bool: aux5461_BOOL:: var_is_introduced ;
var bool: aux5462_BOOL:: var_is_introduced ;
var bool: aux5463_BOOL:: var_is_introduced ;
var {0,1}: aux5463_INTEGER :: var_is_introduced ;
var 4..61: aux5464:: var_is_introduced ;
var bool: aux5465_BOOL:: var_is_introduced ;
var bool: aux5466_BOOL:: var_is_introduced ;
var bool: aux5467_BOOL:: var_is_introduced ;
var bool: aux5468_BOOL:: var_is_introduced ;
var bool: aux5469_BOOL:: var_is_introduced ;
var {0,1}: aux5469_INTEGER :: var_is_introduced ;
var 3..60: aux5470:: var_is_introduced ;
var bool: aux5471_BOOL:: var_is_introduced ;
var bool: aux5472_BOOL:: var_is_introduced ;
var bool: aux5473_BOOL:: var_is_introduced ;
var bool: aux5474_BOOL:: var_is_introduced ;
var bool: aux5475_BOOL:: var_is_introduced ;
var {0,1}: aux5475_INTEGER :: var_is_introduced ;
var 2..59: aux5476:: var_is_introduced ;
var bool: aux5477_BOOL:: var_is_introduced ;
var bool: aux5478_BOOL:: var_is_introduced ;
var bool: aux5479_BOOL:: var_is_introduced ;
var bool: aux5480_BOOL:: var_is_introduced ;
var bool: aux5481_BOOL:: var_is_introduced ;
var {0,1}: aux5481_INTEGER :: var_is_introduced ;
var 3..60: aux5482:: var_is_introduced ;
var bool: aux5483_BOOL:: var_is_introduced ;
var bool: aux5484_BOOL:: var_is_introduced ;
var bool: aux5485_BOOL:: var_is_introduced ;
var bool: aux5486_BOOL:: var_is_introduced ;
var bool: aux5487_BOOL:: var_is_introduced ;
var {0,1}: aux5487_INTEGER :: var_is_introduced ;
var 2..59: aux5488:: var_is_introduced ;
var bool: aux5489_BOOL:: var_is_introduced ;
var bool: aux5490_BOOL:: var_is_introduced ;
var bool: aux5491_BOOL:: var_is_introduced ;
var bool: aux5492_BOOL:: var_is_introduced ;
var bool: aux5493_BOOL:: var_is_introduced ;
var {0,1}: aux5493_INTEGER :: var_is_introduced ;
var 3..60: aux5494:: var_is_introduced ;
var bool: aux5495_BOOL:: var_is_introduced ;
var bool: aux5496_BOOL:: var_is_introduced ;
var bool: aux5497_BOOL:: var_is_introduced ;
var bool: aux5498_BOOL:: var_is_introduced ;
var bool: aux5499_BOOL:: var_is_introduced ;
var {0,1}: aux5499_INTEGER :: var_is_introduced ;
var 2..59: aux5500:: var_is_introduced ;
var bool: aux5501_BOOL:: var_is_introduced ;
var bool: aux5502_BOOL:: var_is_introduced ;
var bool: aux5503_BOOL:: var_is_introduced ;
var bool: aux5504_BOOL:: var_is_introduced ;
var bool: aux5505_BOOL:: var_is_introduced ;
var {0,1}: aux5505_INTEGER :: var_is_introduced ;
var 2..59: aux5506:: var_is_introduced ;
var bool: aux5507_BOOL:: var_is_introduced ;
var bool: aux5508_BOOL:: var_is_introduced ;
var bool: aux5509_BOOL:: var_is_introduced ;
var bool: aux5510_BOOL:: var_is_introduced ;
var bool: aux5511_BOOL:: var_is_introduced ;
var {0,1}: aux5511_INTEGER :: var_is_introduced ;
var 3..60: aux5512:: var_is_introduced ;
var bool: aux5513_BOOL:: var_is_introduced ;
var bool: aux5514_BOOL:: var_is_introduced ;
var bool: aux5515_BOOL:: var_is_introduced ;
var bool: aux5516_BOOL:: var_is_introduced ;
var bool: aux5517_BOOL:: var_is_introduced ;
var {0,1}: aux5517_INTEGER :: var_is_introduced ;
var 5..62: aux5518:: var_is_introduced ;
var bool: aux5519_BOOL:: var_is_introduced ;
var bool: aux5520_BOOL:: var_is_introduced ;
var bool: aux5521_BOOL:: var_is_introduced ;
var bool: aux5522_BOOL:: var_is_introduced ;
var bool: aux5523_BOOL:: var_is_introduced ;
var {0,1}: aux5523_INTEGER :: var_is_introduced ;
var 4..61: aux5524:: var_is_introduced ;
var bool: aux5525_BOOL:: var_is_introduced ;
var bool: aux5526_BOOL:: var_is_introduced ;
var bool: aux5527_BOOL:: var_is_introduced ;
var bool: aux5528_BOOL:: var_is_introduced ;
var bool: aux5529_BOOL:: var_is_introduced ;
var {0,1}: aux5529_INTEGER :: var_is_introduced ;
var 3..60: aux5530:: var_is_introduced ;
var bool: aux5531_BOOL:: var_is_introduced ;
var bool: aux5532_BOOL:: var_is_introduced ;
var bool: aux5533_BOOL:: var_is_introduced ;
var bool: aux5534_BOOL:: var_is_introduced ;
var bool: aux5535_BOOL:: var_is_introduced ;
var {0,1}: aux5535_INTEGER :: var_is_introduced ;
var 2..59: aux5536:: var_is_introduced ;
var bool: aux5537_BOOL:: var_is_introduced ;
var bool: aux5538_BOOL:: var_is_introduced ;
var bool: aux5539_BOOL:: var_is_introduced ;
var bool: aux5540_BOOL:: var_is_introduced ;
var bool: aux5541_BOOL:: var_is_introduced ;
var {0,1}: aux5541_INTEGER :: var_is_introduced ;
var 1..58: aux5542:: var_is_introduced ;
var bool: aux5543_BOOL:: var_is_introduced ;
var bool: aux5544_BOOL:: var_is_introduced ;
var bool: aux5545_BOOL:: var_is_introduced ;
var bool: aux5546_BOOL:: var_is_introduced ;
var bool: aux5547_BOOL:: var_is_introduced ;
var {0,1}: aux5547_INTEGER :: var_is_introduced ;
var 3..60: aux5548:: var_is_introduced ;
var bool: aux5549_BOOL:: var_is_introduced ;
var bool: aux5550_BOOL:: var_is_introduced ;
var bool: aux5551_BOOL:: var_is_introduced ;
var bool: aux5552_BOOL:: var_is_introduced ;
var bool: aux5553_BOOL:: var_is_introduced ;
var {0,1}: aux5553_INTEGER :: var_is_introduced ;
var 1..58: aux5554:: var_is_introduced ;
var bool: aux5555_BOOL:: var_is_introduced ;
var bool: aux5556_BOOL:: var_is_introduced ;
var bool: aux5557_BOOL:: var_is_introduced ;
var bool: aux5558_BOOL:: var_is_introduced ;
var bool: aux5559_BOOL:: var_is_introduced ;
var {0,1}: aux5559_INTEGER :: var_is_introduced ;
var 4..61: aux5560:: var_is_introduced ;
var bool: aux5561_BOOL:: var_is_introduced ;
var bool: aux5562_BOOL:: var_is_introduced ;
var bool: aux5563_BOOL:: var_is_introduced ;
var bool: aux5564_BOOL:: var_is_introduced ;
var bool: aux5565_BOOL:: var_is_introduced ;
var {0,1}: aux5565_INTEGER :: var_is_introduced ;
var 4..61: aux5566:: var_is_introduced ;
var bool: aux5567_BOOL:: var_is_introduced ;
var bool: aux5568_BOOL:: var_is_introduced ;
var bool: aux5569_BOOL:: var_is_introduced ;
var bool: aux5570_BOOL:: var_is_introduced ;
var bool: aux5571_BOOL:: var_is_introduced ;
var {0,1}: aux5571_INTEGER :: var_is_introduced ;
var 2..59: aux5572:: var_is_introduced ;
var bool: aux5573_BOOL:: var_is_introduced ;
var bool: aux5574_BOOL:: var_is_introduced ;
var bool: aux5575_BOOL:: var_is_introduced ;
var {0,1}: aux5575_INTEGER :: var_is_introduced ;
var bool: aux5576_BOOL:: var_is_introduced ;
var 4..61: aux5577:: var_is_introduced ;
var bool: aux5578_BOOL:: var_is_introduced ;
var bool: aux5579_BOOL:: var_is_introduced ;
var bool: aux5580_BOOL:: var_is_introduced ;
var bool: aux5581_BOOL:: var_is_introduced ;
var bool: aux5582_BOOL:: var_is_introduced ;
var {0,1}: aux5582_INTEGER :: var_is_introduced ;
var 4..61: aux5583:: var_is_introduced ;
var bool: aux5584_BOOL:: var_is_introduced ;
var bool: aux5585_BOOL:: var_is_introduced ;
var bool: aux5586_BOOL:: var_is_introduced ;
var bool: aux5587_BOOL:: var_is_introduced ;
var bool: aux5588_BOOL:: var_is_introduced ;
var {0,1}: aux5588_INTEGER :: var_is_introduced ;
var 3..60: aux5589:: var_is_introduced ;
var bool: aux5590_BOOL:: var_is_introduced ;
var bool: aux5591_BOOL:: var_is_introduced ;
var bool: aux5592_BOOL:: var_is_introduced ;
var bool: aux5593_BOOL:: var_is_introduced ;
var bool: aux5594_BOOL:: var_is_introduced ;
var {0,1}: aux5594_INTEGER :: var_is_introduced ;
var 2..59: aux5595:: var_is_introduced ;
var bool: aux5596_BOOL:: var_is_introduced ;
var bool: aux5597_BOOL:: var_is_introduced ;
var bool: aux5598_BOOL:: var_is_introduced ;
var bool: aux5599_BOOL:: var_is_introduced ;
var bool: aux5600_BOOL:: var_is_introduced ;
var {0,1}: aux5600_INTEGER :: var_is_introduced ;
var 3..60: aux5601:: var_is_introduced ;
var bool: aux5602_BOOL:: var_is_introduced ;
var bool: aux5603_BOOL:: var_is_introduced ;
var bool: aux5604_BOOL:: var_is_introduced ;
var bool: aux5605_BOOL:: var_is_introduced ;
var bool: aux5606_BOOL:: var_is_introduced ;
var {0,1}: aux5606_INTEGER :: var_is_introduced ;
var 2..59: aux5607:: var_is_introduced ;
var bool: aux5608_BOOL:: var_is_introduced ;
var bool: aux5609_BOOL:: var_is_introduced ;
var bool: aux5610_BOOL:: var_is_introduced ;
var bool: aux5611_BOOL:: var_is_introduced ;
var bool: aux5612_BOOL:: var_is_introduced ;
var {0,1}: aux5612_INTEGER :: var_is_introduced ;
var 3..60: aux5613:: var_is_introduced ;
var bool: aux5614_BOOL:: var_is_introduced ;
var bool: aux5615_BOOL:: var_is_introduced ;
var bool: aux5616_BOOL:: var_is_introduced ;
var bool: aux5617_BOOL:: var_is_introduced ;
var bool: aux5618_BOOL:: var_is_introduced ;
var {0,1}: aux5618_INTEGER :: var_is_introduced ;
var 2..59: aux5619:: var_is_introduced ;
var bool: aux5620_BOOL:: var_is_introduced ;
var bool: aux5621_BOOL:: var_is_introduced ;
var bool: aux5622_BOOL:: var_is_introduced ;
var bool: aux5623_BOOL:: var_is_introduced ;
var bool: aux5624_BOOL:: var_is_introduced ;
var {0,1}: aux5624_INTEGER :: var_is_introduced ;
var 2..59: aux5625:: var_is_introduced ;
var bool: aux5626_BOOL:: var_is_introduced ;
var bool: aux5627_BOOL:: var_is_introduced ;
var bool: aux5628_BOOL:: var_is_introduced ;
var bool: aux5629_BOOL:: var_is_introduced ;
var bool: aux5630_BOOL:: var_is_introduced ;
var {0,1}: aux5630_INTEGER :: var_is_introduced ;
var 3..60: aux5631:: var_is_introduced ;
var bool: aux5632_BOOL:: var_is_introduced ;
var bool: aux5633_BOOL:: var_is_introduced ;
var bool: aux5634_BOOL:: var_is_introduced ;
var bool: aux5635_BOOL:: var_is_introduced ;
var bool: aux5636_BOOL:: var_is_introduced ;
var {0,1}: aux5636_INTEGER :: var_is_introduced ;
var 5..62: aux5637:: var_is_introduced ;
var bool: aux5638_BOOL:: var_is_introduced ;
var bool: aux5639_BOOL:: var_is_introduced ;
var bool: aux5640_BOOL:: var_is_introduced ;
var bool: aux5641_BOOL:: var_is_introduced ;
var bool: aux5642_BOOL:: var_is_introduced ;
var {0,1}: aux5642_INTEGER :: var_is_introduced ;
var 4..61: aux5643:: var_is_introduced ;
var bool: aux5644_BOOL:: var_is_introduced ;
var bool: aux5645_BOOL:: var_is_introduced ;
var bool: aux5646_BOOL:: var_is_introduced ;
var bool: aux5647_BOOL:: var_is_introduced ;
var bool: aux5648_BOOL:: var_is_introduced ;
var {0,1}: aux5648_INTEGER :: var_is_introduced ;
var 3..60: aux5649:: var_is_introduced ;
var bool: aux5650_BOOL:: var_is_introduced ;
var bool: aux5651_BOOL:: var_is_introduced ;
var bool: aux5652_BOOL:: var_is_introduced ;
var bool: aux5653_BOOL:: var_is_introduced ;
var bool: aux5654_BOOL:: var_is_introduced ;
var {0,1}: aux5654_INTEGER :: var_is_introduced ;
var 2..59: aux5655:: var_is_introduced ;
var bool: aux5656_BOOL:: var_is_introduced ;
var bool: aux5657_BOOL:: var_is_introduced ;
var bool: aux5658_BOOL:: var_is_introduced ;
var bool: aux5659_BOOL:: var_is_introduced ;
var bool: aux5660_BOOL:: var_is_introduced ;
var {0,1}: aux5660_INTEGER :: var_is_introduced ;
var 1..58: aux5661:: var_is_introduced ;
var bool: aux5662_BOOL:: var_is_introduced ;
var bool: aux5663_BOOL:: var_is_introduced ;
var bool: aux5664_BOOL:: var_is_introduced ;
var bool: aux5665_BOOL:: var_is_introduced ;
var bool: aux5666_BOOL:: var_is_introduced ;
var {0,1}: aux5666_INTEGER :: var_is_introduced ;
var 3..60: aux5667:: var_is_introduced ;
var bool: aux5668_BOOL:: var_is_introduced ;
var bool: aux5669_BOOL:: var_is_introduced ;
var bool: aux5670_BOOL:: var_is_introduced ;
var bool: aux5671_BOOL:: var_is_introduced ;
var bool: aux5672_BOOL:: var_is_introduced ;
var {0,1}: aux5672_INTEGER :: var_is_introduced ;
var 1..58: aux5673:: var_is_introduced ;
var bool: aux5674_BOOL:: var_is_introduced ;
var bool: aux5675_BOOL:: var_is_introduced ;
var bool: aux5676_BOOL:: var_is_introduced ;
var bool: aux5677_BOOL:: var_is_introduced ;
var bool: aux5678_BOOL:: var_is_introduced ;
var {0,1}: aux5678_INTEGER :: var_is_introduced ;
var 4..61: aux5679:: var_is_introduced ;
var bool: aux5680_BOOL:: var_is_introduced ;
var bool: aux5681_BOOL:: var_is_introduced ;
var bool: aux5682_BOOL:: var_is_introduced ;
var bool: aux5683_BOOL:: var_is_introduced ;
var bool: aux5684_BOOL:: var_is_introduced ;
var {0,1}: aux5684_INTEGER :: var_is_introduced ;
var 2..59: aux5685:: var_is_introduced ;
var bool: aux5686_BOOL:: var_is_introduced ;
var bool: aux5687_BOOL:: var_is_introduced ;
var bool: aux5688_BOOL:: var_is_introduced ;
var bool: aux5689_BOOL:: var_is_introduced ;
var bool: aux5690_BOOL:: var_is_introduced ;
var {0,1}: aux5690_INTEGER :: var_is_introduced ;
var 4..61: aux5691:: var_is_introduced ;
var bool: aux5692_BOOL:: var_is_introduced ;
var bool: aux5693_BOOL:: var_is_introduced ;
var bool: aux5694_BOOL:: var_is_introduced ;
var {0,1}: aux5694_INTEGER :: var_is_introduced ;
var bool: aux5695_BOOL:: var_is_introduced ;
var 4..61: aux5696:: var_is_introduced ;
var bool: aux5697_BOOL:: var_is_introduced ;
var bool: aux5698_BOOL:: var_is_introduced ;
var bool: aux5699_BOOL:: var_is_introduced ;
var bool: aux5700_BOOL:: var_is_introduced ;
var bool: aux5701_BOOL:: var_is_introduced ;
var {0,1}: aux5701_INTEGER :: var_is_introduced ;
var 4..61: aux5702:: var_is_introduced ;
var bool: aux5703_BOOL:: var_is_introduced ;
var bool: aux5704_BOOL:: var_is_introduced ;
var bool: aux5705_BOOL:: var_is_introduced ;
var bool: aux5706_BOOL:: var_is_introduced ;
var bool: aux5707_BOOL:: var_is_introduced ;
var {0,1}: aux5707_INTEGER :: var_is_introduced ;
var 3..60: aux5708:: var_is_introduced ;
var bool: aux5709_BOOL:: var_is_introduced ;
var bool: aux5710_BOOL:: var_is_introduced ;
var bool: aux5711_BOOL:: var_is_introduced ;
var bool: aux5712_BOOL:: var_is_introduced ;
var bool: aux5713_BOOL:: var_is_introduced ;
var {0,1}: aux5713_INTEGER :: var_is_introduced ;
var 2..59: aux5714:: var_is_introduced ;
var bool: aux5715_BOOL:: var_is_introduced ;
var bool: aux5716_BOOL:: var_is_introduced ;
var bool: aux5717_BOOL:: var_is_introduced ;
var bool: aux5718_BOOL:: var_is_introduced ;
var bool: aux5719_BOOL:: var_is_introduced ;
var {0,1}: aux5719_INTEGER :: var_is_introduced ;
var 3..60: aux5720:: var_is_introduced ;
var bool: aux5721_BOOL:: var_is_introduced ;
var bool: aux5722_BOOL:: var_is_introduced ;
var bool: aux5723_BOOL:: var_is_introduced ;
var bool: aux5724_BOOL:: var_is_introduced ;
var bool: aux5725_BOOL:: var_is_introduced ;
var {0,1}: aux5725_INTEGER :: var_is_introduced ;
var 3..60: aux5726:: var_is_introduced ;
var bool: aux5727_BOOL:: var_is_introduced ;
var bool: aux5728_BOOL:: var_is_introduced ;
var bool: aux5729_BOOL:: var_is_introduced ;
var bool: aux5730_BOOL:: var_is_introduced ;
var bool: aux5731_BOOL:: var_is_introduced ;
var {0,1}: aux5731_INTEGER :: var_is_introduced ;
var 2..59: aux5732:: var_is_introduced ;
var bool: aux5733_BOOL:: var_is_introduced ;
var bool: aux5734_BOOL:: var_is_introduced ;
var bool: aux5735_BOOL:: var_is_introduced ;
var bool: aux5736_BOOL:: var_is_introduced ;
var bool: aux5737_BOOL:: var_is_introduced ;
var {0,1}: aux5737_INTEGER :: var_is_introduced ;
var 2..59: aux5738:: var_is_introduced ;
var bool: aux5739_BOOL:: var_is_introduced ;
var bool: aux5740_BOOL:: var_is_introduced ;
var bool: aux5741_BOOL:: var_is_introduced ;
var bool: aux5742_BOOL:: var_is_introduced ;
var bool: aux5743_BOOL:: var_is_introduced ;
var {0,1}: aux5743_INTEGER :: var_is_introduced ;
var 3..60: aux5744:: var_is_introduced ;
var bool: aux5745_BOOL:: var_is_introduced ;
var bool: aux5746_BOOL:: var_is_introduced ;
var bool: aux5747_BOOL:: var_is_introduced ;
var bool: aux5748_BOOL:: var_is_introduced ;
var bool: aux5749_BOOL:: var_is_introduced ;
var {0,1}: aux5749_INTEGER :: var_is_introduced ;
var 5..62: aux5750:: var_is_introduced ;
var bool: aux5751_BOOL:: var_is_introduced ;
var bool: aux5752_BOOL:: var_is_introduced ;
var bool: aux5753_BOOL:: var_is_introduced ;
var bool: aux5754_BOOL:: var_is_introduced ;
var bool: aux5755_BOOL:: var_is_introduced ;
var {0,1}: aux5755_INTEGER :: var_is_introduced ;
var 4..61: aux5756:: var_is_introduced ;
var bool: aux5757_BOOL:: var_is_introduced ;
var bool: aux5758_BOOL:: var_is_introduced ;
var bool: aux5759_BOOL:: var_is_introduced ;
var bool: aux5760_BOOL:: var_is_introduced ;
var bool: aux5761_BOOL:: var_is_introduced ;
var {0,1}: aux5761_INTEGER :: var_is_introduced ;
var 3..60: aux5762:: var_is_introduced ;
var bool: aux5763_BOOL:: var_is_introduced ;
var bool: aux5764_BOOL:: var_is_introduced ;
var bool: aux5765_BOOL:: var_is_introduced ;
var bool: aux5766_BOOL:: var_is_introduced ;
var bool: aux5767_BOOL:: var_is_introduced ;
var {0,1}: aux5767_INTEGER :: var_is_introduced ;
var 2..59: aux5768:: var_is_introduced ;
var bool: aux5769_BOOL:: var_is_introduced ;
var bool: aux5770_BOOL:: var_is_introduced ;
var bool: aux5771_BOOL:: var_is_introduced ;
var bool: aux5772_BOOL:: var_is_introduced ;
var bool: aux5773_BOOL:: var_is_introduced ;
var {0,1}: aux5773_INTEGER :: var_is_introduced ;
var 1..58: aux5774:: var_is_introduced ;
var bool: aux5775_BOOL:: var_is_introduced ;
var bool: aux5776_BOOL:: var_is_introduced ;
var bool: aux5777_BOOL:: var_is_introduced ;
var bool: aux5778_BOOL:: var_is_introduced ;
var bool: aux5779_BOOL:: var_is_introduced ;
var {0,1}: aux5779_INTEGER :: var_is_introduced ;
var 3..60: aux5780:: var_is_introduced ;
var bool: aux5781_BOOL:: var_is_introduced ;
var bool: aux5782_BOOL:: var_is_introduced ;
var bool: aux5783_BOOL:: var_is_introduced ;
var bool: aux5784_BOOL:: var_is_introduced ;
var bool: aux5785_BOOL:: var_is_introduced ;
var {0,1}: aux5785_INTEGER :: var_is_introduced ;
var 1..58: aux5786:: var_is_introduced ;
var bool: aux5787_BOOL:: var_is_introduced ;
var bool: aux5788_BOOL:: var_is_introduced ;
var bool: aux5789_BOOL:: var_is_introduced ;
var bool: aux5790_BOOL:: var_is_introduced ;
var bool: aux5791_BOOL:: var_is_introduced ;
var {0,1}: aux5791_INTEGER :: var_is_introduced ;
var 4..61: aux5792:: var_is_introduced ;
var bool: aux5793_BOOL:: var_is_introduced ;
var bool: aux5794_BOOL:: var_is_introduced ;
var bool: aux5795_BOOL:: var_is_introduced ;
var bool: aux5796_BOOL:: var_is_introduced ;
var bool: aux5797_BOOL:: var_is_introduced ;
var {0,1}: aux5797_INTEGER :: var_is_introduced ;
var 4..61: aux5798:: var_is_introduced ;
var bool: aux5799_BOOL:: var_is_introduced ;
var bool: aux5800_BOOL:: var_is_introduced ;
var bool: aux5801_BOOL:: var_is_introduced ;
var bool: aux5802_BOOL:: var_is_introduced ;
var bool: aux5803_BOOL:: var_is_introduced ;
var {0,1}: aux5803_INTEGER :: var_is_introduced ;
var 2..59: aux5804:: var_is_introduced ;
var bool: aux5805_BOOL:: var_is_introduced ;
var bool: aux5806_BOOL:: var_is_introduced ;
var bool: aux5807_BOOL:: var_is_introduced ;
var bool: aux5808_BOOL:: var_is_introduced ;
var bool: aux5809_BOOL:: var_is_introduced ;
var {0,1}: aux5809_INTEGER :: var_is_introduced ;
var 2..59: aux5810:: var_is_introduced ;
var bool: aux5811_BOOL:: var_is_introduced ;
var bool: aux5812_BOOL:: var_is_introduced ;
var bool: aux5813_BOOL:: var_is_introduced ;
var {0,1}: aux5813_INTEGER :: var_is_introduced ;
var bool: aux5814_BOOL:: var_is_introduced ;
var 4..61: aux5815:: var_is_introduced ;
var bool: aux5816_BOOL:: var_is_introduced ;
var bool: aux5817_BOOL:: var_is_introduced ;
var bool: aux5818_BOOL:: var_is_introduced ;
var bool: aux5819_BOOL:: var_is_introduced ;
var bool: aux5820_BOOL:: var_is_introduced ;
var {0,1}: aux5820_INTEGER :: var_is_introduced ;
var 4..61: aux5821:: var_is_introduced ;
var bool: aux5822_BOOL:: var_is_introduced ;
var bool: aux5823_BOOL:: var_is_introduced ;
var bool: aux5824_BOOL:: var_is_introduced ;
var bool: aux5825_BOOL:: var_is_introduced ;
var bool: aux5826_BOOL:: var_is_introduced ;
var {0,1}: aux5826_INTEGER :: var_is_introduced ;
var 3..60: aux5827:: var_is_introduced ;
var bool: aux5828_BOOL:: var_is_introduced ;
var bool: aux5829_BOOL:: var_is_introduced ;
var bool: aux5830_BOOL:: var_is_introduced ;
var bool: aux5831_BOOL:: var_is_introduced ;
var bool: aux5832_BOOL:: var_is_introduced ;
var {0,1}: aux5832_INTEGER :: var_is_introduced ;
var 2..59: aux5833:: var_is_introduced ;
var bool: aux5834_BOOL:: var_is_introduced ;
var bool: aux5835_BOOL:: var_is_introduced ;
var bool: aux5836_BOOL:: var_is_introduced ;
var bool: aux5837_BOOL:: var_is_introduced ;
var bool: aux5838_BOOL:: var_is_introduced ;
var {0,1}: aux5838_INTEGER :: var_is_introduced ;
var 3..60: aux5839:: var_is_introduced ;
var bool: aux5840_BOOL:: var_is_introduced ;
var bool: aux5841_BOOL:: var_is_introduced ;
var bool: aux5842_BOOL:: var_is_introduced ;
var bool: aux5843_BOOL:: var_is_introduced ;
var bool: aux5844_BOOL:: var_is_introduced ;
var {0,1}: aux5844_INTEGER :: var_is_introduced ;
var 2..59: aux5845:: var_is_introduced ;
var bool: aux5846_BOOL:: var_is_introduced ;
var bool: aux5847_BOOL:: var_is_introduced ;
var bool: aux5848_BOOL:: var_is_introduced ;
var bool: aux5849_BOOL:: var_is_introduced ;
var bool: aux5850_BOOL:: var_is_introduced ;
var {0,1}: aux5850_INTEGER :: var_is_introduced ;
var 3..60: aux5851:: var_is_introduced ;
var bool: aux5852_BOOL:: var_is_introduced ;
var bool: aux5853_BOOL:: var_is_introduced ;
var bool: aux5854_BOOL:: var_is_introduced ;
var bool: aux5855_BOOL:: var_is_introduced ;
var bool: aux5856_BOOL:: var_is_introduced ;
var {0,1}: aux5856_INTEGER :: var_is_introduced ;
var 2..59: aux5857:: var_is_introduced ;
var bool: aux5858_BOOL:: var_is_introduced ;
var bool: aux5859_BOOL:: var_is_introduced ;
var bool: aux5860_BOOL:: var_is_introduced ;
var bool: aux5861_BOOL:: var_is_introduced ;
var bool: aux5862_BOOL:: var_is_introduced ;
var {0,1}: aux5862_INTEGER :: var_is_introduced ;
var 2..59: aux5863:: var_is_introduced ;
var bool: aux5864_BOOL:: var_is_introduced ;
var bool: aux5865_BOOL:: var_is_introduced ;
var bool: aux5866_BOOL:: var_is_introduced ;
var bool: aux5867_BOOL:: var_is_introduced ;
var bool: aux5868_BOOL:: var_is_introduced ;
var {0,1}: aux5868_INTEGER :: var_is_introduced ;
var 3..60: aux5869:: var_is_introduced ;
var bool: aux5870_BOOL:: var_is_introduced ;
var bool: aux5871_BOOL:: var_is_introduced ;
var bool: aux5872_BOOL:: var_is_introduced ;
var bool: aux5873_BOOL:: var_is_introduced ;
var bool: aux5874_BOOL:: var_is_introduced ;
var {0,1}: aux5874_INTEGER :: var_is_introduced ;
var 5..62: aux5875:: var_is_introduced ;
var bool: aux5876_BOOL:: var_is_introduced ;
var bool: aux5877_BOOL:: var_is_introduced ;
var bool: aux5878_BOOL:: var_is_introduced ;
var bool: aux5879_BOOL:: var_is_introduced ;
var bool: aux5880_BOOL:: var_is_introduced ;
var {0,1}: aux5880_INTEGER :: var_is_introduced ;
var 4..61: aux5881:: var_is_introduced ;
var bool: aux5882_BOOL:: var_is_introduced ;
var bool: aux5883_BOOL:: var_is_introduced ;
var bool: aux5884_BOOL:: var_is_introduced ;
var bool: aux5885_BOOL:: var_is_introduced ;
var bool: aux5886_BOOL:: var_is_introduced ;
var {0,1}: aux5886_INTEGER :: var_is_introduced ;
var 3..60: aux5887:: var_is_introduced ;
var bool: aux5888_BOOL:: var_is_introduced ;
var bool: aux5889_BOOL:: var_is_introduced ;
var bool: aux5890_BOOL:: var_is_introduced ;
var bool: aux5891_BOOL:: var_is_introduced ;
var bool: aux5892_BOOL:: var_is_introduced ;
var {0,1}: aux5892_INTEGER :: var_is_introduced ;
var 1..58: aux5893:: var_is_introduced ;
var bool: aux5894_BOOL:: var_is_introduced ;
var bool: aux5895_BOOL:: var_is_introduced ;
var bool: aux5896_BOOL:: var_is_introduced ;
var bool: aux5897_BOOL:: var_is_introduced ;
var bool: aux5898_BOOL:: var_is_introduced ;
var {0,1}: aux5898_INTEGER :: var_is_introduced ;
var 3..60: aux5899:: var_is_introduced ;
var bool: aux5900_BOOL:: var_is_introduced ;
var bool: aux5901_BOOL:: var_is_introduced ;
var bool: aux5902_BOOL:: var_is_introduced ;
var bool: aux5903_BOOL:: var_is_introduced ;
var bool: aux5904_BOOL:: var_is_introduced ;
var {0,1}: aux5904_INTEGER :: var_is_introduced ;
var 1..58: aux5905:: var_is_introduced ;
var bool: aux5906_BOOL:: var_is_introduced ;
var bool: aux5907_BOOL:: var_is_introduced ;
var bool: aux5908_BOOL:: var_is_introduced ;
var bool: aux5909_BOOL:: var_is_introduced ;
var bool: aux5910_BOOL:: var_is_introduced ;
var {0,1}: aux5910_INTEGER :: var_is_introduced ;
var 4..61: aux5911:: var_is_introduced ;
var bool: aux5912_BOOL:: var_is_introduced ;
var bool: aux5913_BOOL:: var_is_introduced ;
var bool: aux5914_BOOL:: var_is_introduced ;
var bool: aux5915_BOOL:: var_is_introduced ;
var bool: aux5916_BOOL:: var_is_introduced ;
var {0,1}: aux5916_INTEGER :: var_is_introduced ;
var 4..61: aux5917:: var_is_introduced ;
var bool: aux5918_BOOL:: var_is_introduced ;
var bool: aux5919_BOOL:: var_is_introduced ;
var bool: aux5920_BOOL:: var_is_introduced ;
var bool: aux5921_BOOL:: var_is_introduced ;
var bool: aux5922_BOOL:: var_is_introduced ;
var {0,1}: aux5922_INTEGER :: var_is_introduced ;
var 2..59: aux5923:: var_is_introduced ;
var bool: aux5924_BOOL:: var_is_introduced ;
var bool: aux5925_BOOL:: var_is_introduced ;
var bool: aux5926_BOOL:: var_is_introduced ;
var bool: aux5927_BOOL:: var_is_introduced ;
var bool: aux5928_BOOL:: var_is_introduced ;
var {0,1}: aux5928_INTEGER :: var_is_introduced ;
var 2..59: aux5929:: var_is_introduced ;
var bool: aux5930_BOOL:: var_is_introduced ;
var bool: aux5931_BOOL:: var_is_introduced ;
var bool: aux5932_BOOL:: var_is_introduced ;
var {0,1}: aux5932_INTEGER :: var_is_introduced ;
var bool: aux5933_BOOL:: var_is_introduced ;
var 4..61: aux5934:: var_is_introduced ;
var bool: aux5935_BOOL:: var_is_introduced ;
var bool: aux5936_BOOL:: var_is_introduced ;
var bool: aux5937_BOOL:: var_is_introduced ;
var bool: aux5938_BOOL:: var_is_introduced ;
var bool: aux5939_BOOL:: var_is_introduced ;
var {0,1}: aux5939_INTEGER :: var_is_introduced ;
var 3..60: aux5940:: var_is_introduced ;
var bool: aux5941_BOOL:: var_is_introduced ;
var bool: aux5942_BOOL:: var_is_introduced ;
var bool: aux5943_BOOL:: var_is_introduced ;
var bool: aux5944_BOOL:: var_is_introduced ;
var bool: aux5945_BOOL:: var_is_introduced ;
var {0,1}: aux5945_INTEGER :: var_is_introduced ;
var 2..59: aux5946:: var_is_introduced ;
var bool: aux5947_BOOL:: var_is_introduced ;
var bool: aux5948_BOOL:: var_is_introduced ;
var bool: aux5949_BOOL:: var_is_introduced ;
var bool: aux5950_BOOL:: var_is_introduced ;
var bool: aux5951_BOOL:: var_is_introduced ;
var {0,1}: aux5951_INTEGER :: var_is_introduced ;
var 3..60: aux5952:: var_is_introduced ;
var bool: aux5953_BOOL:: var_is_introduced ;
var bool: aux5954_BOOL:: var_is_introduced ;
var bool: aux5955_BOOL:: var_is_introduced ;
var bool: aux5956_BOOL:: var_is_introduced ;
var bool: aux5957_BOOL:: var_is_introduced ;
var {0,1}: aux5957_INTEGER :: var_is_introduced ;
var 2..59: aux5958:: var_is_introduced ;
var bool: aux5959_BOOL:: var_is_introduced ;
var bool: aux5960_BOOL:: var_is_introduced ;
var bool: aux5961_BOOL:: var_is_introduced ;
var bool: aux5962_BOOL:: var_is_introduced ;
var bool: aux5963_BOOL:: var_is_introduced ;
var {0,1}: aux5963_INTEGER :: var_is_introduced ;
var 3..60: aux5964:: var_is_introduced ;
var bool: aux5965_BOOL:: var_is_introduced ;
var bool: aux5966_BOOL:: var_is_introduced ;
var bool: aux5967_BOOL:: var_is_introduced ;
var bool: aux5968_BOOL:: var_is_introduced ;
var bool: aux5969_BOOL:: var_is_introduced ;
var {0,1}: aux5969_INTEGER :: var_is_introduced ;
var 2..59: aux5970:: var_is_introduced ;
var bool: aux5971_BOOL:: var_is_introduced ;
var bool: aux5972_BOOL:: var_is_introduced ;
var bool: aux5973_BOOL:: var_is_introduced ;
var bool: aux5974_BOOL:: var_is_introduced ;
var bool: aux5975_BOOL:: var_is_introduced ;
var {0,1}: aux5975_INTEGER :: var_is_introduced ;
var 2..59: aux5976:: var_is_introduced ;
var bool: aux5977_BOOL:: var_is_introduced ;
var bool: aux5978_BOOL:: var_is_introduced ;
var bool: aux5979_BOOL:: var_is_introduced ;
var bool: aux5980_BOOL:: var_is_introduced ;
var bool: aux5981_BOOL:: var_is_introduced ;
var {0,1}: aux5981_INTEGER :: var_is_introduced ;
var 3..60: aux5982:: var_is_introduced ;
var bool: aux5983_BOOL:: var_is_introduced ;
var bool: aux5984_BOOL:: var_is_introduced ;
var bool: aux5985_BOOL:: var_is_introduced ;
var bool: aux5986_BOOL:: var_is_introduced ;
var bool: aux5987_BOOL:: var_is_introduced ;
var {0,1}: aux5987_INTEGER :: var_is_introduced ;
var 5..62: aux5988:: var_is_introduced ;
var bool: aux5989_BOOL:: var_is_introduced ;
var bool: aux5990_BOOL:: var_is_introduced ;
var bool: aux5991_BOOL:: var_is_introduced ;
var bool: aux5992_BOOL:: var_is_introduced ;
var bool: aux5993_BOOL:: var_is_introduced ;
var {0,1}: aux5993_INTEGER :: var_is_introduced ;
var 4..61: aux5994:: var_is_introduced ;
var bool: aux5995_BOOL:: var_is_introduced ;
var bool: aux5996_BOOL:: var_is_introduced ;
var bool: aux5997_BOOL:: var_is_introduced ;
var bool: aux5998_BOOL:: var_is_introduced ;
var bool: aux5999_BOOL:: var_is_introduced ;
var {0,1}: aux5999_INTEGER :: var_is_introduced ;
var 3..60: aux6000:: var_is_introduced ;
var bool: aux6001_BOOL:: var_is_introduced ;
var bool: aux6002_BOOL:: var_is_introduced ;
var bool: aux6003_BOOL:: var_is_introduced ;
var bool: aux6004_BOOL:: var_is_introduced ;
var bool: aux6005_BOOL:: var_is_introduced ;
var {0,1}: aux6005_INTEGER :: var_is_introduced ;
var 2..59: aux6006:: var_is_introduced ;
var bool: aux6007_BOOL:: var_is_introduced ;
var bool: aux6008_BOOL:: var_is_introduced ;
var bool: aux6009_BOOL:: var_is_introduced ;
var bool: aux6010_BOOL:: var_is_introduced ;
var bool: aux6011_BOOL:: var_is_introduced ;
var {0,1}: aux6011_INTEGER :: var_is_introduced ;
var 1..58: aux6012:: var_is_introduced ;
var bool: aux6013_BOOL:: var_is_introduced ;
var bool: aux6014_BOOL:: var_is_introduced ;
var bool: aux6015_BOOL:: var_is_introduced ;
var bool: aux6016_BOOL:: var_is_introduced ;
var bool: aux6017_BOOL:: var_is_introduced ;
var {0,1}: aux6017_INTEGER :: var_is_introduced ;
var 3..60: aux6018:: var_is_introduced ;
var bool: aux6019_BOOL:: var_is_introduced ;
var bool: aux6020_BOOL:: var_is_introduced ;
var bool: aux6021_BOOL:: var_is_introduced ;
var bool: aux6022_BOOL:: var_is_introduced ;
var bool: aux6023_BOOL:: var_is_introduced ;
var {0,1}: aux6023_INTEGER :: var_is_introduced ;
var 1..58: aux6024:: var_is_introduced ;
var bool: aux6025_BOOL:: var_is_introduced ;
var bool: aux6026_BOOL:: var_is_introduced ;
var bool: aux6027_BOOL:: var_is_introduced ;
var bool: aux6028_BOOL:: var_is_introduced ;
var bool: aux6029_BOOL:: var_is_introduced ;
var {0,1}: aux6029_INTEGER :: var_is_introduced ;
var 4..61: aux6030:: var_is_introduced ;
var bool: aux6031_BOOL:: var_is_introduced ;
var bool: aux6032_BOOL:: var_is_introduced ;
var bool: aux6033_BOOL:: var_is_introduced ;
var bool: aux6034_BOOL:: var_is_introduced ;
var bool: aux6035_BOOL:: var_is_introduced ;
var {0,1}: aux6035_INTEGER :: var_is_introduced ;
var 4..61: aux6036:: var_is_introduced ;
var bool: aux6037_BOOL:: var_is_introduced ;
var bool: aux6038_BOOL:: var_is_introduced ;
var bool: aux6039_BOOL:: var_is_introduced ;
var bool: aux6040_BOOL:: var_is_introduced ;
var bool: aux6041_BOOL:: var_is_introduced ;
var {0,1}: aux6041_INTEGER :: var_is_introduced ;
var 2..59: aux6042:: var_is_introduced ;
var bool: aux6043_BOOL:: var_is_introduced ;
var bool: aux6044_BOOL:: var_is_introduced ;
var bool: aux6045_BOOL:: var_is_introduced ;
var bool: aux6046_BOOL:: var_is_introduced ;
var bool: aux6047_BOOL:: var_is_introduced ;
var {0,1}: aux6047_INTEGER :: var_is_introduced ;
var 4..61: aux6048:: var_is_introduced ;
var bool: aux6049_BOOL:: var_is_introduced ;
var bool: aux6050_BOOL:: var_is_introduced ;
var bool: aux6051_BOOL:: var_is_introduced ;
var {0,1}: aux6051_INTEGER :: var_is_introduced ;
var bool: aux6052_BOOL:: var_is_introduced ;
var 4..61: aux6053:: var_is_introduced ;
var bool: aux6054_BOOL:: var_is_introduced ;
var bool: aux6055_BOOL:: var_is_introduced ;
var bool: aux6056_BOOL:: var_is_introduced ;
var bool: aux6057_BOOL:: var_is_introduced ;
var bool: aux6058_BOOL:: var_is_introduced ;
var {0,1}: aux6058_INTEGER :: var_is_introduced ;
var 4..61: aux6059:: var_is_introduced ;
var bool: aux6060_BOOL:: var_is_introduced ;
var bool: aux6061_BOOL:: var_is_introduced ;
var bool: aux6062_BOOL:: var_is_introduced ;
var bool: aux6063_BOOL:: var_is_introduced ;
var bool: aux6064_BOOL:: var_is_introduced ;
var {0,1}: aux6064_INTEGER :: var_is_introduced ;
var 3..60: aux6065:: var_is_introduced ;
var bool: aux6066_BOOL:: var_is_introduced ;
var bool: aux6067_BOOL:: var_is_introduced ;
var bool: aux6068_BOOL:: var_is_introduced ;
var bool: aux6069_BOOL:: var_is_introduced ;
var bool: aux6070_BOOL:: var_is_introduced ;
var {0,1}: aux6070_INTEGER :: var_is_introduced ;
var 2..59: aux6071:: var_is_introduced ;
var bool: aux6072_BOOL:: var_is_introduced ;
var bool: aux6073_BOOL:: var_is_introduced ;
var bool: aux6074_BOOL:: var_is_introduced ;
var bool: aux6075_BOOL:: var_is_introduced ;
var bool: aux6076_BOOL:: var_is_introduced ;
var {0,1}: aux6076_INTEGER :: var_is_introduced ;
var 3..60: aux6077:: var_is_introduced ;
var bool: aux6078_BOOL:: var_is_introduced ;
var bool: aux6079_BOOL:: var_is_introduced ;
var bool: aux6080_BOOL:: var_is_introduced ;
var bool: aux6081_BOOL:: var_is_introduced ;
var bool: aux6082_BOOL:: var_is_introduced ;
var {0,1}: aux6082_INTEGER :: var_is_introduced ;
var 2..59: aux6083:: var_is_introduced ;
var bool: aux6084_BOOL:: var_is_introduced ;
var bool: aux6085_BOOL:: var_is_introduced ;
var bool: aux6086_BOOL:: var_is_introduced ;
var bool: aux6087_BOOL:: var_is_introduced ;
var bool: aux6088_BOOL:: var_is_introduced ;
var {0,1}: aux6088_INTEGER :: var_is_introduced ;
var 3..60: aux6089:: var_is_introduced ;
var bool: aux6090_BOOL:: var_is_introduced ;
var bool: aux6091_BOOL:: var_is_introduced ;
var bool: aux6092_BOOL:: var_is_introduced ;
var bool: aux6093_BOOL:: var_is_introduced ;
var bool: aux6094_BOOL:: var_is_introduced ;
var {0,1}: aux6094_INTEGER :: var_is_introduced ;
var 2..59: aux6095:: var_is_introduced ;
var bool: aux6096_BOOL:: var_is_introduced ;
var bool: aux6097_BOOL:: var_is_introduced ;
var bool: aux6098_BOOL:: var_is_introduced ;
var bool: aux6099_BOOL:: var_is_introduced ;
var bool: aux6100_BOOL:: var_is_introduced ;
var {0,1}: aux6100_INTEGER :: var_is_introduced ;
var 2..59: aux6101:: var_is_introduced ;
var bool: aux6102_BOOL:: var_is_introduced ;
var bool: aux6103_BOOL:: var_is_introduced ;
var bool: aux6104_BOOL:: var_is_introduced ;
var bool: aux6105_BOOL:: var_is_introduced ;
var bool: aux6106_BOOL:: var_is_introduced ;
var {0,1}: aux6106_INTEGER :: var_is_introduced ;
var 3..60: aux6107:: var_is_introduced ;
var bool: aux6108_BOOL:: var_is_introduced ;
var bool: aux6109_BOOL:: var_is_introduced ;
var bool: aux6110_BOOL:: var_is_introduced ;
var bool: aux6111_BOOL:: var_is_introduced ;
var bool: aux6112_BOOL:: var_is_introduced ;
var {0,1}: aux6112_INTEGER :: var_is_introduced ;
var 5..62: aux6113:: var_is_introduced ;
var bool: aux6114_BOOL:: var_is_introduced ;
var bool: aux6115_BOOL:: var_is_introduced ;
var bool: aux6116_BOOL:: var_is_introduced ;
var bool: aux6117_BOOL:: var_is_introduced ;
var bool: aux6118_BOOL:: var_is_introduced ;
var {0,1}: aux6118_INTEGER :: var_is_introduced ;
var 4..61: aux6119:: var_is_introduced ;
var bool: aux6120_BOOL:: var_is_introduced ;
var bool: aux6121_BOOL:: var_is_introduced ;
var bool: aux6122_BOOL:: var_is_introduced ;
var bool: aux6123_BOOL:: var_is_introduced ;
var bool: aux6124_BOOL:: var_is_introduced ;
var {0,1}: aux6124_INTEGER :: var_is_introduced ;
var 3..60: aux6125:: var_is_introduced ;
var bool: aux6126_BOOL:: var_is_introduced ;
var bool: aux6127_BOOL:: var_is_introduced ;
var bool: aux6128_BOOL:: var_is_introduced ;
var bool: aux6129_BOOL:: var_is_introduced ;
var bool: aux6130_BOOL:: var_is_introduced ;
var {0,1}: aux6130_INTEGER :: var_is_introduced ;
var 2..59: aux6131:: var_is_introduced ;
var bool: aux6132_BOOL:: var_is_introduced ;
var bool: aux6133_BOOL:: var_is_introduced ;
var bool: aux6134_BOOL:: var_is_introduced ;
var bool: aux6135_BOOL:: var_is_introduced ;
var bool: aux6136_BOOL:: var_is_introduced ;
var {0,1}: aux6136_INTEGER :: var_is_introduced ;
var 1..58: aux6137:: var_is_introduced ;
var bool: aux6138_BOOL:: var_is_introduced ;
var bool: aux6139_BOOL:: var_is_introduced ;
var bool: aux6140_BOOL:: var_is_introduced ;
var bool: aux6141_BOOL:: var_is_introduced ;
var bool: aux6142_BOOL:: var_is_introduced ;
var {0,1}: aux6142_INTEGER :: var_is_introduced ;
var 3..60: aux6143:: var_is_introduced ;
var bool: aux6144_BOOL:: var_is_introduced ;
var bool: aux6145_BOOL:: var_is_introduced ;
var bool: aux6146_BOOL:: var_is_introduced ;
var bool: aux6147_BOOL:: var_is_introduced ;
var bool: aux6148_BOOL:: var_is_introduced ;
var {0,1}: aux6148_INTEGER :: var_is_introduced ;
var 4..61: aux6149:: var_is_introduced ;
var bool: aux6150_BOOL:: var_is_introduced ;
var bool: aux6151_BOOL:: var_is_introduced ;
var bool: aux6152_BOOL:: var_is_introduced ;
var bool: aux6153_BOOL:: var_is_introduced ;
var bool: aux6154_BOOL:: var_is_introduced ;
var {0,1}: aux6154_INTEGER :: var_is_introduced ;
var 4..61: aux6155:: var_is_introduced ;
var bool: aux6156_BOOL:: var_is_introduced ;
var bool: aux6157_BOOL:: var_is_introduced ;
var bool: aux6158_BOOL:: var_is_introduced ;
var bool: aux6159_BOOL:: var_is_introduced ;
var bool: aux6160_BOOL:: var_is_introduced ;
var {0,1}: aux6160_INTEGER :: var_is_introduced ;
var 2..59: aux6161:: var_is_introduced ;
var bool: aux6162_BOOL:: var_is_introduced ;
var bool: aux6163_BOOL:: var_is_introduced ;
var bool: aux6164_BOOL:: var_is_introduced ;
var bool: aux6165_BOOL:: var_is_introduced ;
var bool: aux6166_BOOL:: var_is_introduced ;
var {0,1}: aux6166_INTEGER :: var_is_introduced ;
var 1..58: aux6167:: var_is_introduced ;
var bool: aux6168_BOOL:: var_is_introduced ;
var bool: aux6169_BOOL:: var_is_introduced ;
var bool: aux6170_BOOL:: var_is_introduced ;
var {0,1}: aux6170_INTEGER :: var_is_introduced ;
var bool: aux6171_BOOL:: var_is_introduced ;
var 4..61: aux6172:: var_is_introduced ;
var bool: aux6173_BOOL:: var_is_introduced ;
var bool: aux6174_BOOL:: var_is_introduced ;
var bool: aux6175_BOOL:: var_is_introduced ;
var bool: aux6176_BOOL:: var_is_introduced ;
var bool: aux6177_BOOL:: var_is_introduced ;
var {0,1}: aux6177_INTEGER :: var_is_introduced ;
var 4..61: aux6178:: var_is_introduced ;
var bool: aux6179_BOOL:: var_is_introduced ;
var bool: aux6180_BOOL:: var_is_introduced ;
var bool: aux6181_BOOL:: var_is_introduced ;
var bool: aux6182_BOOL:: var_is_introduced ;
var bool: aux6183_BOOL:: var_is_introduced ;
var {0,1}: aux6183_INTEGER :: var_is_introduced ;
var 3..60: aux6184:: var_is_introduced ;
var bool: aux6185_BOOL:: var_is_introduced ;
var bool: aux6186_BOOL:: var_is_introduced ;
var bool: aux6187_BOOL:: var_is_introduced ;
var bool: aux6188_BOOL:: var_is_introduced ;
var bool: aux6189_BOOL:: var_is_introduced ;
var {0,1}: aux6189_INTEGER :: var_is_introduced ;
var 2..59: aux6190:: var_is_introduced ;
var bool: aux6191_BOOL:: var_is_introduced ;
var bool: aux6192_BOOL:: var_is_introduced ;
var bool: aux6193_BOOL:: var_is_introduced ;
var bool: aux6194_BOOL:: var_is_introduced ;
var bool: aux6195_BOOL:: var_is_introduced ;
var {0,1}: aux6195_INTEGER :: var_is_introduced ;
var 3..60: aux6196:: var_is_introduced ;
var bool: aux6197_BOOL:: var_is_introduced ;
var bool: aux6198_BOOL:: var_is_introduced ;
var bool: aux6199_BOOL:: var_is_introduced ;
var bool: aux6200_BOOL:: var_is_introduced ;
var bool: aux6201_BOOL:: var_is_introduced ;
var {0,1}: aux6201_INTEGER :: var_is_introduced ;
var 2..59: aux6202:: var_is_introduced ;
var bool: aux6203_BOOL:: var_is_introduced ;
var bool: aux6204_BOOL:: var_is_introduced ;
var bool: aux6205_BOOL:: var_is_introduced ;
var bool: aux6206_BOOL:: var_is_introduced ;
var bool: aux6207_BOOL:: var_is_introduced ;
var {0,1}: aux6207_INTEGER :: var_is_introduced ;
var 3..60: aux6208:: var_is_introduced ;
var bool: aux6209_BOOL:: var_is_introduced ;
var bool: aux6210_BOOL:: var_is_introduced ;
var bool: aux6211_BOOL:: var_is_introduced ;
var bool: aux6212_BOOL:: var_is_introduced ;
var bool: aux6213_BOOL:: var_is_introduced ;
var {0,1}: aux6213_INTEGER :: var_is_introduced ;
var 2..59: aux6214:: var_is_introduced ;
var bool: aux6215_BOOL:: var_is_introduced ;
var bool: aux6216_BOOL:: var_is_introduced ;
var bool: aux6217_BOOL:: var_is_introduced ;
var bool: aux6218_BOOL:: var_is_introduced ;
var bool: aux6219_BOOL:: var_is_introduced ;
var {0,1}: aux6219_INTEGER :: var_is_introduced ;
var 2..59: aux6220:: var_is_introduced ;
var bool: aux6221_BOOL:: var_is_introduced ;
var bool: aux6222_BOOL:: var_is_introduced ;
var bool: aux6223_BOOL:: var_is_introduced ;
var bool: aux6224_BOOL:: var_is_introduced ;
var bool: aux6225_BOOL:: var_is_introduced ;
var {0,1}: aux6225_INTEGER :: var_is_introduced ;
var 3..60: aux6226:: var_is_introduced ;
var bool: aux6227_BOOL:: var_is_introduced ;
var bool: aux6228_BOOL:: var_is_introduced ;
var bool: aux6229_BOOL:: var_is_introduced ;
var bool: aux6230_BOOL:: var_is_introduced ;
var bool: aux6231_BOOL:: var_is_introduced ;
var {0,1}: aux6231_INTEGER :: var_is_introduced ;
var 5..62: aux6232:: var_is_introduced ;
var bool: aux6233_BOOL:: var_is_introduced ;
var bool: aux6234_BOOL:: var_is_introduced ;
var bool: aux6235_BOOL:: var_is_introduced ;
var bool: aux6236_BOOL:: var_is_introduced ;
var bool: aux6237_BOOL:: var_is_introduced ;
var {0,1}: aux6237_INTEGER :: var_is_introduced ;
var 4..61: aux6238:: var_is_introduced ;
var bool: aux6239_BOOL:: var_is_introduced ;
var bool: aux6240_BOOL:: var_is_introduced ;
var bool: aux6241_BOOL:: var_is_introduced ;
var bool: aux6242_BOOL:: var_is_introduced ;
var bool: aux6243_BOOL:: var_is_introduced ;
var {0,1}: aux6243_INTEGER :: var_is_introduced ;
var 3..60: aux6244:: var_is_introduced ;
var bool: aux6245_BOOL:: var_is_introduced ;
var bool: aux6246_BOOL:: var_is_introduced ;
var bool: aux6247_BOOL:: var_is_introduced ;
var bool: aux6248_BOOL:: var_is_introduced ;
var bool: aux6249_BOOL:: var_is_introduced ;
var {0,1}: aux6249_INTEGER :: var_is_introduced ;
var 2..59: aux6250:: var_is_introduced ;
var bool: aux6251_BOOL:: var_is_introduced ;
var bool: aux6252_BOOL:: var_is_introduced ;
var bool: aux6253_BOOL:: var_is_introduced ;
var bool: aux6254_BOOL:: var_is_introduced ;
var bool: aux6255_BOOL:: var_is_introduced ;
var {0,1}: aux6255_INTEGER :: var_is_introduced ;
var 1..58: aux6256:: var_is_introduced ;
var bool: aux6257_BOOL:: var_is_introduced ;
var bool: aux6258_BOOL:: var_is_introduced ;
var bool: aux6259_BOOL:: var_is_introduced ;
var bool: aux6260_BOOL:: var_is_introduced ;
var bool: aux6261_BOOL:: var_is_introduced ;
var {0,1}: aux6261_INTEGER :: var_is_introduced ;
var 3..60: aux6262:: var_is_introduced ;
var bool: aux6263_BOOL:: var_is_introduced ;
var bool: aux6264_BOOL:: var_is_introduced ;
var bool: aux6265_BOOL:: var_is_introduced ;
var bool: aux6266_BOOL:: var_is_introduced ;
var bool: aux6267_BOOL:: var_is_introduced ;
var {0,1}: aux6267_INTEGER :: var_is_introduced ;
var 1..58: aux6268:: var_is_introduced ;
var bool: aux6269_BOOL:: var_is_introduced ;
var bool: aux6270_BOOL:: var_is_introduced ;
var bool: aux6271_BOOL:: var_is_introduced ;
var bool: aux6272_BOOL:: var_is_introduced ;
var bool: aux6273_BOOL:: var_is_introduced ;
var {0,1}: aux6273_INTEGER :: var_is_introduced ;
var 4..61: aux6274:: var_is_introduced ;
var bool: aux6275_BOOL:: var_is_introduced ;
var bool: aux6276_BOOL:: var_is_introduced ;
var bool: aux6277_BOOL:: var_is_introduced ;
var bool: aux6278_BOOL:: var_is_introduced ;
var bool: aux6279_BOOL:: var_is_introduced ;
var {0,1}: aux6279_INTEGER :: var_is_introduced ;
var 2..59: aux6280:: var_is_introduced ;
var bool: aux6281_BOOL:: var_is_introduced ;
var bool: aux6282_BOOL:: var_is_introduced ;
var bool: aux6283_BOOL:: var_is_introduced ;
var bool: aux6284_BOOL:: var_is_introduced ;
var bool: aux6285_BOOL:: var_is_introduced ;
var {0,1}: aux6285_INTEGER :: var_is_introduced ;
var 4..61: aux6286:: var_is_introduced ;
var bool: aux6287_BOOL:: var_is_introduced ;
var bool: aux6288_BOOL:: var_is_introduced ;
var bool: aux6289_BOOL:: var_is_introduced ;
var {0,1}: aux6289_INTEGER :: var_is_introduced ;
var bool: aux6290_BOOL:: var_is_introduced ;
var 4..61: aux6291:: var_is_introduced ;
var bool: aux6292_BOOL:: var_is_introduced ;
var bool: aux6293_BOOL:: var_is_introduced ;
var bool: aux6294_BOOL:: var_is_introduced ;
var bool: aux6295_BOOL:: var_is_introduced ;
var bool: aux6296_BOOL:: var_is_introduced ;
var {0,1}: aux6296_INTEGER :: var_is_introduced ;
var 3..60: aux6297:: var_is_introduced ;
var bool: aux6298_BOOL:: var_is_introduced ;
var bool: aux6299_BOOL:: var_is_introduced ;
var bool: aux6300_BOOL:: var_is_introduced ;
var bool: aux6301_BOOL:: var_is_introduced ;
var bool: aux6302_BOOL:: var_is_introduced ;
var {0,1}: aux6302_INTEGER :: var_is_introduced ;
var 2..59: aux6303:: var_is_introduced ;
var bool: aux6304_BOOL:: var_is_introduced ;
var bool: aux6305_BOOL:: var_is_introduced ;
var bool: aux6306_BOOL:: var_is_introduced ;
var bool: aux6307_BOOL:: var_is_introduced ;
var bool: aux6308_BOOL:: var_is_introduced ;
var {0,1}: aux6308_INTEGER :: var_is_introduced ;
var 3..60: aux6309:: var_is_introduced ;
var bool: aux6310_BOOL:: var_is_introduced ;
var bool: aux6311_BOOL:: var_is_introduced ;
var bool: aux6312_BOOL:: var_is_introduced ;
var bool: aux6313_BOOL:: var_is_introduced ;
var bool: aux6314_BOOL:: var_is_introduced ;
var {0,1}: aux6314_INTEGER :: var_is_introduced ;
var 2..59: aux6315:: var_is_introduced ;
var bool: aux6316_BOOL:: var_is_introduced ;
var bool: aux6317_BOOL:: var_is_introduced ;
var bool: aux6318_BOOL:: var_is_introduced ;
var bool: aux6319_BOOL:: var_is_introduced ;
var bool: aux6320_BOOL:: var_is_introduced ;
var {0,1}: aux6320_INTEGER :: var_is_introduced ;
var 3..60: aux6321:: var_is_introduced ;
var bool: aux6322_BOOL:: var_is_introduced ;
var bool: aux6323_BOOL:: var_is_introduced ;
var bool: aux6324_BOOL:: var_is_introduced ;
var bool: aux6325_BOOL:: var_is_introduced ;
var bool: aux6326_BOOL:: var_is_introduced ;
var {0,1}: aux6326_INTEGER :: var_is_introduced ;
var 2..59: aux6327:: var_is_introduced ;
var bool: aux6328_BOOL:: var_is_introduced ;
var bool: aux6329_BOOL:: var_is_introduced ;
var bool: aux6330_BOOL:: var_is_introduced ;
var bool: aux6331_BOOL:: var_is_introduced ;
var bool: aux6332_BOOL:: var_is_introduced ;
var {0,1}: aux6332_INTEGER :: var_is_introduced ;
var 2..59: aux6333:: var_is_introduced ;
var bool: aux6334_BOOL:: var_is_introduced ;
var bool: aux6335_BOOL:: var_is_introduced ;
var bool: aux6336_BOOL:: var_is_introduced ;
var bool: aux6337_BOOL:: var_is_introduced ;
var bool: aux6338_BOOL:: var_is_introduced ;
var {0,1}: aux6338_INTEGER :: var_is_introduced ;
var 3..60: aux6339:: var_is_introduced ;
var bool: aux6340_BOOL:: var_is_introduced ;
var bool: aux6341_BOOL:: var_is_introduced ;
var bool: aux6342_BOOL:: var_is_introduced ;
var bool: aux6343_BOOL:: var_is_introduced ;
var bool: aux6344_BOOL:: var_is_introduced ;
var {0,1}: aux6344_INTEGER :: var_is_introduced ;
var 5..62: aux6345:: var_is_introduced ;
var bool: aux6346_BOOL:: var_is_introduced ;
var bool: aux6347_BOOL:: var_is_introduced ;
var bool: aux6348_BOOL:: var_is_introduced ;
var bool: aux6349_BOOL:: var_is_introduced ;
var bool: aux6350_BOOL:: var_is_introduced ;
var {0,1}: aux6350_INTEGER :: var_is_introduced ;
var 4..61: aux6351:: var_is_introduced ;
var bool: aux6352_BOOL:: var_is_introduced ;
var bool: aux6353_BOOL:: var_is_introduced ;
var bool: aux6354_BOOL:: var_is_introduced ;
var bool: aux6355_BOOL:: var_is_introduced ;
var bool: aux6356_BOOL:: var_is_introduced ;
var {0,1}: aux6356_INTEGER :: var_is_introduced ;
var 3..60: aux6357:: var_is_introduced ;
var bool: aux6358_BOOL:: var_is_introduced ;
var bool: aux6359_BOOL:: var_is_introduced ;
var bool: aux6360_BOOL:: var_is_introduced ;
var bool: aux6361_BOOL:: var_is_introduced ;
var bool: aux6362_BOOL:: var_is_introduced ;
var {0,1}: aux6362_INTEGER :: var_is_introduced ;
var 2..59: aux6363:: var_is_introduced ;
var bool: aux6364_BOOL:: var_is_introduced ;
var bool: aux6365_BOOL:: var_is_introduced ;
var bool: aux6366_BOOL:: var_is_introduced ;
var bool: aux6367_BOOL:: var_is_introduced ;
var bool: aux6368_BOOL:: var_is_introduced ;
var {0,1}: aux6368_INTEGER :: var_is_introduced ;
var 1..58: aux6369:: var_is_introduced ;
var bool: aux6370_BOOL:: var_is_introduced ;
var bool: aux6371_BOOL:: var_is_introduced ;
var bool: aux6372_BOOL:: var_is_introduced ;
var bool: aux6373_BOOL:: var_is_introduced ;
var bool: aux6374_BOOL:: var_is_introduced ;
var {0,1}: aux6374_INTEGER :: var_is_introduced ;
var 3..60: aux6375:: var_is_introduced ;
var bool: aux6376_BOOL:: var_is_introduced ;
var bool: aux6377_BOOL:: var_is_introduced ;
var bool: aux6378_BOOL:: var_is_introduced ;
var bool: aux6379_BOOL:: var_is_introduced ;
var bool: aux6380_BOOL:: var_is_introduced ;
var {0,1}: aux6380_INTEGER :: var_is_introduced ;
var 1..58: aux6381:: var_is_introduced ;
var bool: aux6382_BOOL:: var_is_introduced ;
var bool: aux6383_BOOL:: var_is_introduced ;
var bool: aux6384_BOOL:: var_is_introduced ;
var bool: aux6385_BOOL:: var_is_introduced ;
var bool: aux6386_BOOL:: var_is_introduced ;
var {0,1}: aux6386_INTEGER :: var_is_introduced ;
var 4..61: aux6387:: var_is_introduced ;
var bool: aux6388_BOOL:: var_is_introduced ;
var bool: aux6389_BOOL:: var_is_introduced ;
var bool: aux6390_BOOL:: var_is_introduced ;
var bool: aux6391_BOOL:: var_is_introduced ;
var bool: aux6392_BOOL:: var_is_introduced ;
var {0,1}: aux6392_INTEGER :: var_is_introduced ;
var 4..61: aux6393:: var_is_introduced ;
var bool: aux6394_BOOL:: var_is_introduced ;
var bool: aux6395_BOOL:: var_is_introduced ;
var bool: aux6396_BOOL:: var_is_introduced ;
var bool: aux6397_BOOL:: var_is_introduced ;
var bool: aux6398_BOOL:: var_is_introduced ;
var {0,1}: aux6398_INTEGER :: var_is_introduced ;
var 2..59: aux6399:: var_is_introduced ;
var bool: aux6400_BOOL:: var_is_introduced ;
var bool: aux6401_BOOL:: var_is_introduced ;
var bool: aux6402_BOOL:: var_is_introduced ;
var bool: aux6403_BOOL:: var_is_introduced ;
var bool: aux6404_BOOL:: var_is_introduced ;
var {0,1}: aux6404_INTEGER :: var_is_introduced ;
var 4..61: aux6405:: var_is_introduced ;
var bool: aux6406_BOOL:: var_is_introduced ;
var bool: aux6407_BOOL:: var_is_introduced ;
var bool: aux6408_BOOL:: var_is_introduced ;
var {0,1}: aux6408_INTEGER :: var_is_introduced ;
var bool: aux6409_BOOL:: var_is_introduced ;
var 4..61: aux6410:: var_is_introduced ;
var bool: aux6411_BOOL:: var_is_introduced ;
var bool: aux6412_BOOL:: var_is_introduced ;
var bool: aux6413_BOOL:: var_is_introduced ;
var bool: aux6414_BOOL:: var_is_introduced ;
var bool: aux6415_BOOL:: var_is_introduced ;
var {0,1}: aux6415_INTEGER :: var_is_introduced ;
var 4..61: aux6416:: var_is_introduced ;
var bool: aux6417_BOOL:: var_is_introduced ;
var bool: aux6418_BOOL:: var_is_introduced ;
var bool: aux6419_BOOL:: var_is_introduced ;
var bool: aux6420_BOOL:: var_is_introduced ;
var bool: aux6421_BOOL:: var_is_introduced ;
var {0,1}: aux6421_INTEGER :: var_is_introduced ;
var 3..60: aux6422:: var_is_introduced ;
var bool: aux6423_BOOL:: var_is_introduced ;
var bool: aux6424_BOOL:: var_is_introduced ;
var bool: aux6425_BOOL:: var_is_introduced ;
var bool: aux6426_BOOL:: var_is_introduced ;
var bool: aux6427_BOOL:: var_is_introduced ;
var {0,1}: aux6427_INTEGER :: var_is_introduced ;
var 2..59: aux6428:: var_is_introduced ;
var bool: aux6429_BOOL:: var_is_introduced ;
var bool: aux6430_BOOL:: var_is_introduced ;
var bool: aux6431_BOOL:: var_is_introduced ;
var bool: aux6432_BOOL:: var_is_introduced ;
var bool: aux6433_BOOL:: var_is_introduced ;
var {0,1}: aux6433_INTEGER :: var_is_introduced ;
var 3..60: aux6434:: var_is_introduced ;
var bool: aux6435_BOOL:: var_is_introduced ;
var bool: aux6436_BOOL:: var_is_introduced ;
var bool: aux6437_BOOL:: var_is_introduced ;
var bool: aux6438_BOOL:: var_is_introduced ;
var bool: aux6439_BOOL:: var_is_introduced ;
var {0,1}: aux6439_INTEGER :: var_is_introduced ;
var 2..59: aux6440:: var_is_introduced ;
var bool: aux6441_BOOL:: var_is_introduced ;
var bool: aux6442_BOOL:: var_is_introduced ;
var bool: aux6443_BOOL:: var_is_introduced ;
var bool: aux6444_BOOL:: var_is_introduced ;
var bool: aux6445_BOOL:: var_is_introduced ;
var {0,1}: aux6445_INTEGER :: var_is_introduced ;
var 2..59: aux6446:: var_is_introduced ;
var bool: aux6447_BOOL:: var_is_introduced ;
var bool: aux6448_BOOL:: var_is_introduced ;
var bool: aux6449_BOOL:: var_is_introduced ;
var bool: aux6450_BOOL:: var_is_introduced ;
var bool: aux6451_BOOL:: var_is_introduced ;
var {0,1}: aux6451_INTEGER :: var_is_introduced ;
var 2..59: aux6452:: var_is_introduced ;
var bool: aux6453_BOOL:: var_is_introduced ;
var bool: aux6454_BOOL:: var_is_introduced ;
var bool: aux6455_BOOL:: var_is_introduced ;
var bool: aux6456_BOOL:: var_is_introduced ;
var bool: aux6457_BOOL:: var_is_introduced ;
var {0,1}: aux6457_INTEGER :: var_is_introduced ;
var 3..60: aux6458:: var_is_introduced ;
var bool: aux6459_BOOL:: var_is_introduced ;
var bool: aux6460_BOOL:: var_is_introduced ;
var bool: aux6461_BOOL:: var_is_introduced ;
var bool: aux6462_BOOL:: var_is_introduced ;
var bool: aux6463_BOOL:: var_is_introduced ;
var {0,1}: aux6463_INTEGER :: var_is_introduced ;
var 5..62: aux6464:: var_is_introduced ;
var bool: aux6465_BOOL:: var_is_introduced ;
var bool: aux6466_BOOL:: var_is_introduced ;
var bool: aux6467_BOOL:: var_is_introduced ;
var bool: aux6468_BOOL:: var_is_introduced ;
var bool: aux6469_BOOL:: var_is_introduced ;
var {0,1}: aux6469_INTEGER :: var_is_introduced ;
var 4..61: aux6470:: var_is_introduced ;
var bool: aux6471_BOOL:: var_is_introduced ;
var bool: aux6472_BOOL:: var_is_introduced ;
var bool: aux6473_BOOL:: var_is_introduced ;
var bool: aux6474_BOOL:: var_is_introduced ;
var bool: aux6475_BOOL:: var_is_introduced ;
var {0,1}: aux6475_INTEGER :: var_is_introduced ;
var 3..60: aux6476:: var_is_introduced ;
var bool: aux6477_BOOL:: var_is_introduced ;
var bool: aux6478_BOOL:: var_is_introduced ;
var bool: aux6479_BOOL:: var_is_introduced ;
var bool: aux6480_BOOL:: var_is_introduced ;
var bool: aux6481_BOOL:: var_is_introduced ;
var {0,1}: aux6481_INTEGER :: var_is_introduced ;
var 2..59: aux6482:: var_is_introduced ;
var bool: aux6483_BOOL:: var_is_introduced ;
var bool: aux6484_BOOL:: var_is_introduced ;
var bool: aux6485_BOOL:: var_is_introduced ;
var bool: aux6486_BOOL:: var_is_introduced ;
var bool: aux6487_BOOL:: var_is_introduced ;
var {0,1}: aux6487_INTEGER :: var_is_introduced ;
var 1..58: aux6488:: var_is_introduced ;
var bool: aux6489_BOOL:: var_is_introduced ;
var bool: aux6490_BOOL:: var_is_introduced ;
var bool: aux6491_BOOL:: var_is_introduced ;
var bool: aux6492_BOOL:: var_is_introduced ;
var bool: aux6493_BOOL:: var_is_introduced ;
var {0,1}: aux6493_INTEGER :: var_is_introduced ;
var 3..60: aux6494:: var_is_introduced ;
var bool: aux6495_BOOL:: var_is_introduced ;
var bool: aux6496_BOOL:: var_is_introduced ;
var bool: aux6497_BOOL:: var_is_introduced ;
var bool: aux6498_BOOL:: var_is_introduced ;
var bool: aux6499_BOOL:: var_is_introduced ;
var {0,1}: aux6499_INTEGER :: var_is_introduced ;
var 1..58: aux6500:: var_is_introduced ;
var bool: aux6501_BOOL:: var_is_introduced ;
var bool: aux6502_BOOL:: var_is_introduced ;
var bool: aux6503_BOOL:: var_is_introduced ;
var bool: aux6504_BOOL:: var_is_introduced ;
var bool: aux6505_BOOL:: var_is_introduced ;
var {0,1}: aux6505_INTEGER :: var_is_introduced ;
var 4..61: aux6506:: var_is_introduced ;
var bool: aux6507_BOOL:: var_is_introduced ;
var bool: aux6508_BOOL:: var_is_introduced ;
var bool: aux6509_BOOL:: var_is_introduced ;
var bool: aux6510_BOOL:: var_is_introduced ;
var bool: aux6511_BOOL:: var_is_introduced ;
var {0,1}: aux6511_INTEGER :: var_is_introduced ;
var 4..61: aux6512:: var_is_introduced ;
var bool: aux6513_BOOL:: var_is_introduced ;
var bool: aux6514_BOOL:: var_is_introduced ;
var bool: aux6515_BOOL:: var_is_introduced ;
var bool: aux6516_BOOL:: var_is_introduced ;
var bool: aux6517_BOOL:: var_is_introduced ;
var {0,1}: aux6517_INTEGER :: var_is_introduced ;
var 2..59: aux6518:: var_is_introduced ;
var bool: aux6519_BOOL:: var_is_introduced ;
var bool: aux6520_BOOL:: var_is_introduced ;
var bool: aux6521_BOOL:: var_is_introduced ;
var bool: aux6522_BOOL:: var_is_introduced ;
var bool: aux6523_BOOL:: var_is_introduced ;
var {0,1}: aux6523_INTEGER :: var_is_introduced ;
var 3..60: aux6524:: var_is_introduced ;
var bool: aux6525_BOOL:: var_is_introduced ;
var bool: aux6526_BOOL:: var_is_introduced ;
var bool: aux6527_BOOL:: var_is_introduced ;
var {0,1}: aux6527_INTEGER :: var_is_introduced ;
var bool: aux6528_BOOL:: var_is_introduced ;
var 4..61: aux6529:: var_is_introduced ;
var bool: aux6530_BOOL:: var_is_introduced ;
var bool: aux6531_BOOL:: var_is_introduced ;
var bool: aux6532_BOOL:: var_is_introduced ;
var bool: aux6533_BOOL:: var_is_introduced ;
var bool: aux6534_BOOL:: var_is_introduced ;
var {0,1}: aux6534_INTEGER :: var_is_introduced ;
var 4..61: aux6535:: var_is_introduced ;
var bool: aux6536_BOOL:: var_is_introduced ;
var bool: aux6537_BOOL:: var_is_introduced ;
var bool: aux6538_BOOL:: var_is_introduced ;
var bool: aux6539_BOOL:: var_is_introduced ;
var bool: aux6540_BOOL:: var_is_introduced ;
var {0,1}: aux6540_INTEGER :: var_is_introduced ;
var 2..59: aux6541:: var_is_introduced ;
var bool: aux6542_BOOL:: var_is_introduced ;
var bool: aux6543_BOOL:: var_is_introduced ;
var bool: aux6544_BOOL:: var_is_introduced ;
var bool: aux6545_BOOL:: var_is_introduced ;
var bool: aux6546_BOOL:: var_is_introduced ;
var {0,1}: aux6546_INTEGER :: var_is_introduced ;
var 3..60: aux6547:: var_is_introduced ;
var bool: aux6548_BOOL:: var_is_introduced ;
var bool: aux6549_BOOL:: var_is_introduced ;
var bool: aux6550_BOOL:: var_is_introduced ;
var bool: aux6551_BOOL:: var_is_introduced ;
var bool: aux6552_BOOL:: var_is_introduced ;
var {0,1}: aux6552_INTEGER :: var_is_introduced ;
var 2..59: aux6553:: var_is_introduced ;
var bool: aux6554_BOOL:: var_is_introduced ;
var bool: aux6555_BOOL:: var_is_introduced ;
var bool: aux6556_BOOL:: var_is_introduced ;
var bool: aux6557_BOOL:: var_is_introduced ;
var bool: aux6558_BOOL:: var_is_introduced ;
var {0,1}: aux6558_INTEGER :: var_is_introduced ;
var 3..60: aux6559:: var_is_introduced ;
var bool: aux6560_BOOL:: var_is_introduced ;
var bool: aux6561_BOOL:: var_is_introduced ;
var bool: aux6562_BOOL:: var_is_introduced ;
var bool: aux6563_BOOL:: var_is_introduced ;
var bool: aux6564_BOOL:: var_is_introduced ;
var {0,1}: aux6564_INTEGER :: var_is_introduced ;
var 2..59: aux6565:: var_is_introduced ;
var bool: aux6566_BOOL:: var_is_introduced ;
var bool: aux6567_BOOL:: var_is_introduced ;
var bool: aux6568_BOOL:: var_is_introduced ;
var bool: aux6569_BOOL:: var_is_introduced ;
var bool: aux6570_BOOL:: var_is_introduced ;
var {0,1}: aux6570_INTEGER :: var_is_introduced ;
var 2..59: aux6571:: var_is_introduced ;
var bool: aux6572_BOOL:: var_is_introduced ;
var bool: aux6573_BOOL:: var_is_introduced ;
var bool: aux6574_BOOL:: var_is_introduced ;
var bool: aux6575_BOOL:: var_is_introduced ;
var bool: aux6576_BOOL:: var_is_introduced ;
var {0,1}: aux6576_INTEGER :: var_is_introduced ;
var 3..60: aux6577:: var_is_introduced ;
var bool: aux6578_BOOL:: var_is_introduced ;
var bool: aux6579_BOOL:: var_is_introduced ;
var bool: aux6580_BOOL:: var_is_introduced ;
var bool: aux6581_BOOL:: var_is_introduced ;
var bool: aux6582_BOOL:: var_is_introduced ;
var {0,1}: aux6582_INTEGER :: var_is_introduced ;
var 5..62: aux6583:: var_is_introduced ;
var bool: aux6584_BOOL:: var_is_introduced ;
var bool: aux6585_BOOL:: var_is_introduced ;
var bool: aux6586_BOOL:: var_is_introduced ;
var bool: aux6587_BOOL:: var_is_introduced ;
var bool: aux6588_BOOL:: var_is_introduced ;
var {0,1}: aux6588_INTEGER :: var_is_introduced ;
var 4..61: aux6589:: var_is_introduced ;
var bool: aux6590_BOOL:: var_is_introduced ;
var bool: aux6591_BOOL:: var_is_introduced ;
var bool: aux6592_BOOL:: var_is_introduced ;
var bool: aux6593_BOOL:: var_is_introduced ;
var bool: aux6594_BOOL:: var_is_introduced ;
var {0,1}: aux6594_INTEGER :: var_is_introduced ;
var 3..60: aux6595:: var_is_introduced ;
var bool: aux6596_BOOL:: var_is_introduced ;
var bool: aux6597_BOOL:: var_is_introduced ;
var bool: aux6598_BOOL:: var_is_introduced ;
var bool: aux6599_BOOL:: var_is_introduced ;
var bool: aux6600_BOOL:: var_is_introduced ;
var {0,1}: aux6600_INTEGER :: var_is_introduced ;
var 2..59: aux6601:: var_is_introduced ;
var bool: aux6602_BOOL:: var_is_introduced ;
var bool: aux6603_BOOL:: var_is_introduced ;
var bool: aux6604_BOOL:: var_is_introduced ;
var bool: aux6605_BOOL:: var_is_introduced ;
var bool: aux6606_BOOL:: var_is_introduced ;
var {0,1}: aux6606_INTEGER :: var_is_introduced ;
var 1..58: aux6607:: var_is_introduced ;
var bool: aux6608_BOOL:: var_is_introduced ;
var bool: aux6609_BOOL:: var_is_introduced ;
var bool: aux6610_BOOL:: var_is_introduced ;
var bool: aux6611_BOOL:: var_is_introduced ;
var bool: aux6612_BOOL:: var_is_introduced ;
var {0,1}: aux6612_INTEGER :: var_is_introduced ;
var 3..60: aux6613:: var_is_introduced ;
var bool: aux6614_BOOL:: var_is_introduced ;
var bool: aux6615_BOOL:: var_is_introduced ;
var bool: aux6616_BOOL:: var_is_introduced ;
var bool: aux6617_BOOL:: var_is_introduced ;
var bool: aux6618_BOOL:: var_is_introduced ;
var {0,1}: aux6618_INTEGER :: var_is_introduced ;
var 1..58: aux6619:: var_is_introduced ;
var bool: aux6620_BOOL:: var_is_introduced ;
var bool: aux6621_BOOL:: var_is_introduced ;
var bool: aux6622_BOOL:: var_is_introduced ;
var bool: aux6623_BOOL:: var_is_introduced ;
var bool: aux6624_BOOL:: var_is_introduced ;
var {0,1}: aux6624_INTEGER :: var_is_introduced ;
var 4..61: aux6625:: var_is_introduced ;
var bool: aux6626_BOOL:: var_is_introduced ;
var bool: aux6627_BOOL:: var_is_introduced ;
var bool: aux6628_BOOL:: var_is_introduced ;
var bool: aux6629_BOOL:: var_is_introduced ;
var bool: aux6630_BOOL:: var_is_introduced ;
var {0,1}: aux6630_INTEGER :: var_is_introduced ;
var 4..61: aux6631:: var_is_introduced ;
var bool: aux6632_BOOL:: var_is_introduced ;
var bool: aux6633_BOOL:: var_is_introduced ;
var bool: aux6634_BOOL:: var_is_introduced ;
var bool: aux6635_BOOL:: var_is_introduced ;
var bool: aux6636_BOOL:: var_is_introduced ;
var {0,1}: aux6636_INTEGER :: var_is_introduced ;
var 2..59: aux6637:: var_is_introduced ;
var bool: aux6638_BOOL:: var_is_introduced ;
var bool: aux6639_BOOL:: var_is_introduced ;
var bool: aux6640_BOOL:: var_is_introduced ;
var bool: aux6641_BOOL:: var_is_introduced ;
var bool: aux6642_BOOL:: var_is_introduced ;
var {0,1}: aux6642_INTEGER :: var_is_introduced ;
var 3..60: aux6643:: var_is_introduced ;
var bool: aux6644_BOOL:: var_is_introduced ;
var bool: aux6645_BOOL:: var_is_introduced ;
var bool: aux6646_BOOL:: var_is_introduced ;
var {0,1}: aux6646_INTEGER :: var_is_introduced ;
var bool: aux6647_BOOL:: var_is_introduced ;
var 4..61: aux6648:: var_is_introduced ;
var bool: aux6649_BOOL:: var_is_introduced ;
var bool: aux6650_BOOL:: var_is_introduced ;
var bool: aux6651_BOOL:: var_is_introduced ;
var bool: aux6652_BOOL:: var_is_introduced ;
var bool: aux6653_BOOL:: var_is_introduced ;
var {0,1}: aux6653_INTEGER :: var_is_introduced ;
var 4..61: aux6654:: var_is_introduced ;
var bool: aux6655_BOOL:: var_is_introduced ;
var bool: aux6656_BOOL:: var_is_introduced ;
var bool: aux6657_BOOL:: var_is_introduced ;
var bool: aux6658_BOOL:: var_is_introduced ;
var bool: aux6659_BOOL:: var_is_introduced ;
var {0,1}: aux6659_INTEGER :: var_is_introduced ;
var 3..60: aux6660:: var_is_introduced ;
var bool: aux6661_BOOL:: var_is_introduced ;
var bool: aux6662_BOOL:: var_is_introduced ;
var bool: aux6663_BOOL:: var_is_introduced ;
var bool: aux6664_BOOL:: var_is_introduced ;
var bool: aux6665_BOOL:: var_is_introduced ;
var {0,1}: aux6665_INTEGER :: var_is_introduced ;
var 2..59: aux6666:: var_is_introduced ;
var bool: aux6667_BOOL:: var_is_introduced ;
var bool: aux6668_BOOL:: var_is_introduced ;
var bool: aux6669_BOOL:: var_is_introduced ;
var bool: aux6670_BOOL:: var_is_introduced ;
var bool: aux6671_BOOL:: var_is_introduced ;
var {0,1}: aux6671_INTEGER :: var_is_introduced ;
var 2..59: aux6672:: var_is_introduced ;
var bool: aux6673_BOOL:: var_is_introduced ;
var bool: aux6674_BOOL:: var_is_introduced ;
var bool: aux6675_BOOL:: var_is_introduced ;
var bool: aux6676_BOOL:: var_is_introduced ;
var bool: aux6677_BOOL:: var_is_introduced ;
var {0,1}: aux6677_INTEGER :: var_is_introduced ;
var 3..60: aux6678:: var_is_introduced ;
var bool: aux6679_BOOL:: var_is_introduced ;
var bool: aux6680_BOOL:: var_is_introduced ;
var bool: aux6681_BOOL:: var_is_introduced ;
var bool: aux6682_BOOL:: var_is_introduced ;
var bool: aux6683_BOOL:: var_is_introduced ;
var {0,1}: aux6683_INTEGER :: var_is_introduced ;
var 2..59: aux6684:: var_is_introduced ;
var bool: aux6685_BOOL:: var_is_introduced ;
var bool: aux6686_BOOL:: var_is_introduced ;
var bool: aux6687_BOOL:: var_is_introduced ;
var bool: aux6688_BOOL:: var_is_introduced ;
var bool: aux6689_BOOL:: var_is_introduced ;
var {0,1}: aux6689_INTEGER :: var_is_introduced ;
var 2..59: aux6690:: var_is_introduced ;
var bool: aux6691_BOOL:: var_is_introduced ;
var bool: aux6692_BOOL:: var_is_introduced ;
var bool: aux6693_BOOL:: var_is_introduced ;
var bool: aux6694_BOOL:: var_is_introduced ;
var bool: aux6695_BOOL:: var_is_introduced ;
var {0,1}: aux6695_INTEGER :: var_is_introduced ;
var 3..60: aux6696:: var_is_introduced ;
var bool: aux6697_BOOL:: var_is_introduced ;
var bool: aux6698_BOOL:: var_is_introduced ;
var bool: aux6699_BOOL:: var_is_introduced ;
var bool: aux6700_BOOL:: var_is_introduced ;
var bool: aux6701_BOOL:: var_is_introduced ;
var {0,1}: aux6701_INTEGER :: var_is_introduced ;
var 5..62: aux6702:: var_is_introduced ;
var bool: aux6703_BOOL:: var_is_introduced ;
var bool: aux6704_BOOL:: var_is_introduced ;
var bool: aux6705_BOOL:: var_is_introduced ;
var bool: aux6706_BOOL:: var_is_introduced ;
var bool: aux6707_BOOL:: var_is_introduced ;
var {0,1}: aux6707_INTEGER :: var_is_introduced ;
var 4..61: aux6708:: var_is_introduced ;
var bool: aux6709_BOOL:: var_is_introduced ;
var bool: aux6710_BOOL:: var_is_introduced ;
var bool: aux6711_BOOL:: var_is_introduced ;
var bool: aux6712_BOOL:: var_is_introduced ;
var bool: aux6713_BOOL:: var_is_introduced ;
var {0,1}: aux6713_INTEGER :: var_is_introduced ;
var 3..60: aux6714:: var_is_introduced ;
var bool: aux6715_BOOL:: var_is_introduced ;
var bool: aux6716_BOOL:: var_is_introduced ;
var bool: aux6717_BOOL:: var_is_introduced ;
var bool: aux6718_BOOL:: var_is_introduced ;
var bool: aux6719_BOOL:: var_is_introduced ;
var {0,1}: aux6719_INTEGER :: var_is_introduced ;
var 2..59: aux6720:: var_is_introduced ;
var bool: aux6721_BOOL:: var_is_introduced ;
var bool: aux6722_BOOL:: var_is_introduced ;
var bool: aux6723_BOOL:: var_is_introduced ;
var bool: aux6724_BOOL:: var_is_introduced ;
var bool: aux6725_BOOL:: var_is_introduced ;
var {0,1}: aux6725_INTEGER :: var_is_introduced ;
var 1..58: aux6726:: var_is_introduced ;
var bool: aux6727_BOOL:: var_is_introduced ;
var bool: aux6728_BOOL:: var_is_introduced ;
var bool: aux6729_BOOL:: var_is_introduced ;
var bool: aux6730_BOOL:: var_is_introduced ;
var bool: aux6731_BOOL:: var_is_introduced ;
var {0,1}: aux6731_INTEGER :: var_is_introduced ;
var 3..60: aux6732:: var_is_introduced ;
var bool: aux6733_BOOL:: var_is_introduced ;
var bool: aux6734_BOOL:: var_is_introduced ;
var bool: aux6735_BOOL:: var_is_introduced ;
var bool: aux6736_BOOL:: var_is_introduced ;
var bool: aux6737_BOOL:: var_is_introduced ;
var {0,1}: aux6737_INTEGER :: var_is_introduced ;
var 1..58: aux6738:: var_is_introduced ;
var bool: aux6739_BOOL:: var_is_introduced ;
var bool: aux6740_BOOL:: var_is_introduced ;
var bool: aux6741_BOOL:: var_is_introduced ;
var bool: aux6742_BOOL:: var_is_introduced ;
var bool: aux6743_BOOL:: var_is_introduced ;
var {0,1}: aux6743_INTEGER :: var_is_introduced ;
var 4..61: aux6744:: var_is_introduced ;
var bool: aux6745_BOOL:: var_is_introduced ;
var bool: aux6746_BOOL:: var_is_introduced ;
var bool: aux6747_BOOL:: var_is_introduced ;
var bool: aux6748_BOOL:: var_is_introduced ;
var bool: aux6749_BOOL:: var_is_introduced ;
var {0,1}: aux6749_INTEGER :: var_is_introduced ;
var 4..61: aux6750:: var_is_introduced ;
var bool: aux6751_BOOL:: var_is_introduced ;
var bool: aux6752_BOOL:: var_is_introduced ;
var bool: aux6753_BOOL:: var_is_introduced ;
var bool: aux6754_BOOL:: var_is_introduced ;
var bool: aux6755_BOOL:: var_is_introduced ;
var {0,1}: aux6755_INTEGER :: var_is_introduced ;
var 2..59: aux6756:: var_is_introduced ;
var bool: aux6757_BOOL:: var_is_introduced ;
var bool: aux6758_BOOL:: var_is_introduced ;
var bool: aux6759_BOOL:: var_is_introduced ;
var bool: aux6760_BOOL:: var_is_introduced ;
var bool: aux6761_BOOL:: var_is_introduced ;
var {0,1}: aux6761_INTEGER :: var_is_introduced ;
var 3..60: aux6762:: var_is_introduced ;
var bool: aux6763_BOOL:: var_is_introduced ;
var bool: aux6764_BOOL:: var_is_introduced ;
var bool: aux6765_BOOL:: var_is_introduced ;
var {0,1}: aux6765_INTEGER :: var_is_introduced ;
var bool: aux6766_BOOL:: var_is_introduced ;
var 4..61: aux6767:: var_is_introduced ;
var bool: aux6768_BOOL:: var_is_introduced ;
var bool: aux6769_BOOL:: var_is_introduced ;
var bool: aux6770_BOOL:: var_is_introduced ;
var bool: aux6771_BOOL:: var_is_introduced ;
var bool: aux6772_BOOL:: var_is_introduced ;
var {0,1}: aux6772_INTEGER :: var_is_introduced ;
var 4..61: aux6773:: var_is_introduced ;
var bool: aux6774_BOOL:: var_is_introduced ;
var bool: aux6775_BOOL:: var_is_introduced ;
var bool: aux6776_BOOL:: var_is_introduced ;
var bool: aux6777_BOOL:: var_is_introduced ;
var bool: aux6778_BOOL:: var_is_introduced ;
var {0,1}: aux6778_INTEGER :: var_is_introduced ;
var 3..60: aux6779:: var_is_introduced ;
var bool: aux6780_BOOL:: var_is_introduced ;
var bool: aux6781_BOOL:: var_is_introduced ;
var bool: aux6782_BOOL:: var_is_introduced ;
var bool: aux6783_BOOL:: var_is_introduced ;
var bool: aux6784_BOOL:: var_is_introduced ;
var {0,1}: aux6784_INTEGER :: var_is_introduced ;
var 2..59: aux6785:: var_is_introduced ;
var bool: aux6786_BOOL:: var_is_introduced ;
var bool: aux6787_BOOL:: var_is_introduced ;
var bool: aux6788_BOOL:: var_is_introduced ;
var bool: aux6789_BOOL:: var_is_introduced ;
var bool: aux6790_BOOL:: var_is_introduced ;
var {0,1}: aux6790_INTEGER :: var_is_introduced ;
var 3..60: aux6791:: var_is_introduced ;
var bool: aux6792_BOOL:: var_is_introduced ;
var bool: aux6793_BOOL:: var_is_introduced ;
var bool: aux6794_BOOL:: var_is_introduced ;
var bool: aux6795_BOOL:: var_is_introduced ;
var bool: aux6796_BOOL:: var_is_introduced ;
var {0,1}: aux6796_INTEGER :: var_is_introduced ;
var 2..59: aux6797:: var_is_introduced ;
var bool: aux6798_BOOL:: var_is_introduced ;
var bool: aux6799_BOOL:: var_is_introduced ;
var bool: aux6800_BOOL:: var_is_introduced ;
var bool: aux6801_BOOL:: var_is_introduced ;
var bool: aux6802_BOOL:: var_is_introduced ;
var {0,1}: aux6802_INTEGER :: var_is_introduced ;
var 3..60: aux6803:: var_is_introduced ;
var bool: aux6804_BOOL:: var_is_introduced ;
var bool: aux6805_BOOL:: var_is_introduced ;
var bool: aux6806_BOOL:: var_is_introduced ;
var bool: aux6807_BOOL:: var_is_introduced ;
var bool: aux6808_BOOL:: var_is_introduced ;
var {0,1}: aux6808_INTEGER :: var_is_introduced ;
var 2..59: aux6809:: var_is_introduced ;
var bool: aux6810_BOOL:: var_is_introduced ;
var bool: aux6811_BOOL:: var_is_introduced ;
var bool: aux6812_BOOL:: var_is_introduced ;
var bool: aux6813_BOOL:: var_is_introduced ;
var bool: aux6814_BOOL:: var_is_introduced ;
var {0,1}: aux6814_INTEGER :: var_is_introduced ;
var 3..60: aux6815:: var_is_introduced ;
var bool: aux6816_BOOL:: var_is_introduced ;
var bool: aux6817_BOOL:: var_is_introduced ;
var bool: aux6818_BOOL:: var_is_introduced ;
var bool: aux6819_BOOL:: var_is_introduced ;
var bool: aux6820_BOOL:: var_is_introduced ;
var {0,1}: aux6820_INTEGER :: var_is_introduced ;
var 5..62: aux6821:: var_is_introduced ;
var bool: aux6822_BOOL:: var_is_introduced ;
var bool: aux6823_BOOL:: var_is_introduced ;
var bool: aux6824_BOOL:: var_is_introduced ;
var bool: aux6825_BOOL:: var_is_introduced ;
var bool: aux6826_BOOL:: var_is_introduced ;
var {0,1}: aux6826_INTEGER :: var_is_introduced ;
var 4..61: aux6827:: var_is_introduced ;
var bool: aux6828_BOOL:: var_is_introduced ;
var bool: aux6829_BOOL:: var_is_introduced ;
var bool: aux6830_BOOL:: var_is_introduced ;
var bool: aux6831_BOOL:: var_is_introduced ;
var bool: aux6832_BOOL:: var_is_introduced ;
var {0,1}: aux6832_INTEGER :: var_is_introduced ;
var 3..60: aux6833:: var_is_introduced ;
var bool: aux6834_BOOL:: var_is_introduced ;
var bool: aux6835_BOOL:: var_is_introduced ;
var bool: aux6836_BOOL:: var_is_introduced ;
var bool: aux6837_BOOL:: var_is_introduced ;
var bool: aux6838_BOOL:: var_is_introduced ;
var {0,1}: aux6838_INTEGER :: var_is_introduced ;
var 2..59: aux6839:: var_is_introduced ;
var bool: aux6840_BOOL:: var_is_introduced ;
var bool: aux6841_BOOL:: var_is_introduced ;
var bool: aux6842_BOOL:: var_is_introduced ;
var bool: aux6843_BOOL:: var_is_introduced ;
var bool: aux6844_BOOL:: var_is_introduced ;
var {0,1}: aux6844_INTEGER :: var_is_introduced ;
var 1..58: aux6845:: var_is_introduced ;
var bool: aux6846_BOOL:: var_is_introduced ;
var bool: aux6847_BOOL:: var_is_introduced ;
var bool: aux6848_BOOL:: var_is_introduced ;
var bool: aux6849_BOOL:: var_is_introduced ;
var bool: aux6850_BOOL:: var_is_introduced ;
var {0,1}: aux6850_INTEGER :: var_is_introduced ;
var 3..60: aux6851:: var_is_introduced ;
var bool: aux6852_BOOL:: var_is_introduced ;
var bool: aux6853_BOOL:: var_is_introduced ;
var bool: aux6854_BOOL:: var_is_introduced ;
var bool: aux6855_BOOL:: var_is_introduced ;
var bool: aux6856_BOOL:: var_is_introduced ;
var {0,1}: aux6856_INTEGER :: var_is_introduced ;
var 1..58: aux6857:: var_is_introduced ;
var bool: aux6858_BOOL:: var_is_introduced ;
var bool: aux6859_BOOL:: var_is_introduced ;
var bool: aux6860_BOOL:: var_is_introduced ;
var bool: aux6861_BOOL:: var_is_introduced ;
var bool: aux6862_BOOL:: var_is_introduced ;
var {0,1}: aux6862_INTEGER :: var_is_introduced ;
var 4..61: aux6863:: var_is_introduced ;
var bool: aux6864_BOOL:: var_is_introduced ;
var bool: aux6865_BOOL:: var_is_introduced ;
var bool: aux6866_BOOL:: var_is_introduced ;
var bool: aux6867_BOOL:: var_is_introduced ;
var bool: aux6868_BOOL:: var_is_introduced ;
var {0,1}: aux6868_INTEGER :: var_is_introduced ;
var 4..61: aux6869:: var_is_introduced ;
var bool: aux6870_BOOL:: var_is_introduced ;
var bool: aux6871_BOOL:: var_is_introduced ;
var bool: aux6872_BOOL:: var_is_introduced ;
var bool: aux6873_BOOL:: var_is_introduced ;
var bool: aux6874_BOOL:: var_is_introduced ;
var {0,1}: aux6874_INTEGER :: var_is_introduced ;
var 2..59: aux6875:: var_is_introduced ;
var bool: aux6876_BOOL:: var_is_introduced ;
var bool: aux6877_BOOL:: var_is_introduced ;
var bool: aux6878_BOOL:: var_is_introduced ;
var bool: aux6879_BOOL:: var_is_introduced ;
var bool: aux6880_BOOL:: var_is_introduced ;
var {0,1}: aux6880_INTEGER :: var_is_introduced ;
var 2..59: aux6881:: var_is_introduced ;
var bool: aux6882_BOOL:: var_is_introduced ;
var bool: aux6883_BOOL:: var_is_introduced ;
var bool: aux6884_BOOL:: var_is_introduced ;
var {0,1}: aux6884_INTEGER :: var_is_introduced ;
var bool: aux6885_BOOL:: var_is_introduced ;
var 4..61: aux6886:: var_is_introduced ;
var bool: aux6887_BOOL:: var_is_introduced ;
var bool: aux6888_BOOL:: var_is_introduced ;
var bool: aux6889_BOOL:: var_is_introduced ;
var bool: aux6890_BOOL:: var_is_introduced ;
var bool: aux6891_BOOL:: var_is_introduced ;
var {0,1}: aux6891_INTEGER :: var_is_introduced ;
var 4..61: aux6892:: var_is_introduced ;
var bool: aux6893_BOOL:: var_is_introduced ;
var bool: aux6894_BOOL:: var_is_introduced ;
var bool: aux6895_BOOL:: var_is_introduced ;
var bool: aux6896_BOOL:: var_is_introduced ;
var bool: aux6897_BOOL:: var_is_introduced ;
var {0,1}: aux6897_INTEGER :: var_is_introduced ;
var 3..60: aux6898:: var_is_introduced ;
var bool: aux6899_BOOL:: var_is_introduced ;
var bool: aux6900_BOOL:: var_is_introduced ;
var bool: aux6901_BOOL:: var_is_introduced ;
var bool: aux6902_BOOL:: var_is_introduced ;
var bool: aux6903_BOOL:: var_is_introduced ;
var {0,1}: aux6903_INTEGER :: var_is_introduced ;
var 2..59: aux6904:: var_is_introduced ;
var bool: aux6905_BOOL:: var_is_introduced ;
var bool: aux6906_BOOL:: var_is_introduced ;
var bool: aux6907_BOOL:: var_is_introduced ;
var bool: aux6908_BOOL:: var_is_introduced ;
var bool: aux6909_BOOL:: var_is_introduced ;
var {0,1}: aux6909_INTEGER :: var_is_introduced ;
var 3..60: aux6910:: var_is_introduced ;
var bool: aux6911_BOOL:: var_is_introduced ;
var bool: aux6912_BOOL:: var_is_introduced ;
var bool: aux6913_BOOL:: var_is_introduced ;
var bool: aux6914_BOOL:: var_is_introduced ;
var bool: aux6915_BOOL:: var_is_introduced ;
var {0,1}: aux6915_INTEGER :: var_is_introduced ;
var 2..59: aux6916:: var_is_introduced ;
var bool: aux6917_BOOL:: var_is_introduced ;
var bool: aux6918_BOOL:: var_is_introduced ;
var bool: aux6919_BOOL:: var_is_introduced ;
var bool: aux6920_BOOL:: var_is_introduced ;
var bool: aux6921_BOOL:: var_is_introduced ;
var {0,1}: aux6921_INTEGER :: var_is_introduced ;
var 3..60: aux6922:: var_is_introduced ;
var bool: aux6923_BOOL:: var_is_introduced ;
var bool: aux6924_BOOL:: var_is_introduced ;
var bool: aux6925_BOOL:: var_is_introduced ;
var bool: aux6926_BOOL:: var_is_introduced ;
var bool: aux6927_BOOL:: var_is_introduced ;
var {0,1}: aux6927_INTEGER :: var_is_introduced ;
var 2..59: aux6928:: var_is_introduced ;
var bool: aux6929_BOOL:: var_is_introduced ;
var bool: aux6930_BOOL:: var_is_introduced ;
var bool: aux6931_BOOL:: var_is_introduced ;
var bool: aux6932_BOOL:: var_is_introduced ;
var bool: aux6933_BOOL:: var_is_introduced ;
var {0,1}: aux6933_INTEGER :: var_is_introduced ;
var 2..59: aux6934:: var_is_introduced ;
var bool: aux6935_BOOL:: var_is_introduced ;
var bool: aux6936_BOOL:: var_is_introduced ;
var bool: aux6937_BOOL:: var_is_introduced ;
var bool: aux6938_BOOL:: var_is_introduced ;
var bool: aux6939_BOOL:: var_is_introduced ;
var {0,1}: aux6939_INTEGER :: var_is_introduced ;
var 5..62: aux6940:: var_is_introduced ;
var bool: aux6941_BOOL:: var_is_introduced ;
var bool: aux6942_BOOL:: var_is_introduced ;
var bool: aux6943_BOOL:: var_is_introduced ;
var bool: aux6944_BOOL:: var_is_introduced ;
var bool: aux6945_BOOL:: var_is_introduced ;
var {0,1}: aux6945_INTEGER :: var_is_introduced ;
var 4..61: aux6946:: var_is_introduced ;
var bool: aux6947_BOOL:: var_is_introduced ;
var bool: aux6948_BOOL:: var_is_introduced ;
var bool: aux6949_BOOL:: var_is_introduced ;
var bool: aux6950_BOOL:: var_is_introduced ;
var bool: aux6951_BOOL:: var_is_introduced ;
var {0,1}: aux6951_INTEGER :: var_is_introduced ;
var 3..60: aux6952:: var_is_introduced ;
var bool: aux6953_BOOL:: var_is_introduced ;
var bool: aux6954_BOOL:: var_is_introduced ;
var bool: aux6955_BOOL:: var_is_introduced ;
var bool: aux6956_BOOL:: var_is_introduced ;
var bool: aux6957_BOOL:: var_is_introduced ;
var {0,1}: aux6957_INTEGER :: var_is_introduced ;
var 2..59: aux6958:: var_is_introduced ;
var bool: aux6959_BOOL:: var_is_introduced ;
var bool: aux6960_BOOL:: var_is_introduced ;
var bool: aux6961_BOOL:: var_is_introduced ;
var bool: aux6962_BOOL:: var_is_introduced ;
var bool: aux6963_BOOL:: var_is_introduced ;
var {0,1}: aux6963_INTEGER :: var_is_introduced ;
var 1..58: aux6964:: var_is_introduced ;
var bool: aux6965_BOOL:: var_is_introduced ;
var bool: aux6966_BOOL:: var_is_introduced ;
var bool: aux6967_BOOL:: var_is_introduced ;
var bool: aux6968_BOOL:: var_is_introduced ;
var bool: aux6969_BOOL:: var_is_introduced ;
var {0,1}: aux6969_INTEGER :: var_is_introduced ;
var 3..60: aux6970:: var_is_introduced ;
var bool: aux6971_BOOL:: var_is_introduced ;
var bool: aux6972_BOOL:: var_is_introduced ;
var bool: aux6973_BOOL:: var_is_introduced ;
var bool: aux6974_BOOL:: var_is_introduced ;
var bool: aux6975_BOOL:: var_is_introduced ;
var {0,1}: aux6975_INTEGER :: var_is_introduced ;
var 1..58: aux6976:: var_is_introduced ;
var bool: aux6977_BOOL:: var_is_introduced ;
var bool: aux6978_BOOL:: var_is_introduced ;
var bool: aux6979_BOOL:: var_is_introduced ;
var bool: aux6980_BOOL:: var_is_introduced ;
var bool: aux6981_BOOL:: var_is_introduced ;
var {0,1}: aux6981_INTEGER :: var_is_introduced ;
var 4..61: aux6982:: var_is_introduced ;
var bool: aux6983_BOOL:: var_is_introduced ;
var bool: aux6984_BOOL:: var_is_introduced ;
var bool: aux6985_BOOL:: var_is_introduced ;
var bool: aux6986_BOOL:: var_is_introduced ;
var bool: aux6987_BOOL:: var_is_introduced ;
var {0,1}: aux6987_INTEGER :: var_is_introduced ;
var 4..61: aux6988:: var_is_introduced ;
var bool: aux6989_BOOL:: var_is_introduced ;
var bool: aux6990_BOOL:: var_is_introduced ;
var bool: aux6991_BOOL:: var_is_introduced ;
var bool: aux6992_BOOL:: var_is_introduced ;
var bool: aux6993_BOOL:: var_is_introduced ;
var {0,1}: aux6993_INTEGER :: var_is_introduced ;
var 2..59: aux6994:: var_is_introduced ;
var bool: aux6995_BOOL:: var_is_introduced ;
var bool: aux6996_BOOL:: var_is_introduced ;
var bool: aux6997_BOOL:: var_is_introduced ;
var bool: aux6998_BOOL:: var_is_introduced ;
var bool: aux6999_BOOL:: var_is_introduced ;
var {0,1}: aux6999_INTEGER :: var_is_introduced ;
var 3..60: aux7000:: var_is_introduced ;
var bool: aux7001_BOOL:: var_is_introduced ;
var bool: aux7002_BOOL:: var_is_introduced ;
var bool: aux7003_BOOL:: var_is_introduced ;
var {0,1}: aux7003_INTEGER :: var_is_introduced ;
var bool: aux7004_BOOL:: var_is_introduced ;
var 4..61: aux7005:: var_is_introduced ;
var bool: aux7006_BOOL:: var_is_introduced ;
var bool: aux7007_BOOL:: var_is_introduced ;
var bool: aux7008_BOOL:: var_is_introduced ;
var bool: aux7009_BOOL:: var_is_introduced ;
var bool: aux7010_BOOL:: var_is_introduced ;
var {0,1}: aux7010_INTEGER :: var_is_introduced ;
var 4..61: aux7011:: var_is_introduced ;
var bool: aux7012_BOOL:: var_is_introduced ;
var bool: aux7013_BOOL:: var_is_introduced ;
var bool: aux7014_BOOL:: var_is_introduced ;
var bool: aux7015_BOOL:: var_is_introduced ;
var bool: aux7016_BOOL:: var_is_introduced ;
var {0,1}: aux7016_INTEGER :: var_is_introduced ;
var 3..60: aux7017:: var_is_introduced ;
var bool: aux7018_BOOL:: var_is_introduced ;
var bool: aux7019_BOOL:: var_is_introduced ;
var bool: aux7020_BOOL:: var_is_introduced ;
var bool: aux7021_BOOL:: var_is_introduced ;
var bool: aux7022_BOOL:: var_is_introduced ;
var {0,1}: aux7022_INTEGER :: var_is_introduced ;
var 2..59: aux7023:: var_is_introduced ;
var bool: aux7024_BOOL:: var_is_introduced ;
var bool: aux7025_BOOL:: var_is_introduced ;
var bool: aux7026_BOOL:: var_is_introduced ;
var bool: aux7027_BOOL:: var_is_introduced ;
var bool: aux7028_BOOL:: var_is_introduced ;
var {0,1}: aux7028_INTEGER :: var_is_introduced ;
var 3..60: aux7029:: var_is_introduced ;
var bool: aux7030_BOOL:: var_is_introduced ;
var bool: aux7031_BOOL:: var_is_introduced ;
var bool: aux7032_BOOL:: var_is_introduced ;
var bool: aux7033_BOOL:: var_is_introduced ;
var bool: aux7034_BOOL:: var_is_introduced ;
var {0,1}: aux7034_INTEGER :: var_is_introduced ;
var 2..59: aux7035:: var_is_introduced ;
var bool: aux7036_BOOL:: var_is_introduced ;
var bool: aux7037_BOOL:: var_is_introduced ;
var bool: aux7038_BOOL:: var_is_introduced ;
var bool: aux7039_BOOL:: var_is_introduced ;
var bool: aux7040_BOOL:: var_is_introduced ;
var {0,1}: aux7040_INTEGER :: var_is_introduced ;
var 3..60: aux7041:: var_is_introduced ;
var bool: aux7042_BOOL:: var_is_introduced ;
var bool: aux7043_BOOL:: var_is_introduced ;
var bool: aux7044_BOOL:: var_is_introduced ;
var bool: aux7045_BOOL:: var_is_introduced ;
var bool: aux7046_BOOL:: var_is_introduced ;
var {0,1}: aux7046_INTEGER :: var_is_introduced ;
var 2..59: aux7047:: var_is_introduced ;
var bool: aux7048_BOOL:: var_is_introduced ;
var bool: aux7049_BOOL:: var_is_introduced ;
var bool: aux7050_BOOL:: var_is_introduced ;
var bool: aux7051_BOOL:: var_is_introduced ;
var bool: aux7052_BOOL:: var_is_introduced ;
var {0,1}: aux7052_INTEGER :: var_is_introduced ;
var 2..59: aux7053:: var_is_introduced ;
var bool: aux7054_BOOL:: var_is_introduced ;
var bool: aux7055_BOOL:: var_is_introduced ;
var bool: aux7056_BOOL:: var_is_introduced ;
var bool: aux7057_BOOL:: var_is_introduced ;
var bool: aux7058_BOOL:: var_is_introduced ;
var {0,1}: aux7058_INTEGER :: var_is_introduced ;
var 3..60: aux7059:: var_is_introduced ;
var bool: aux7060_BOOL:: var_is_introduced ;
var bool: aux7061_BOOL:: var_is_introduced ;
var bool: aux7062_BOOL:: var_is_introduced ;
var bool: aux7063_BOOL:: var_is_introduced ;
var bool: aux7064_BOOL:: var_is_introduced ;
var {0,1}: aux7064_INTEGER :: var_is_introduced ;
var 5..62: aux7065:: var_is_introduced ;
var bool: aux7066_BOOL:: var_is_introduced ;
var bool: aux7067_BOOL:: var_is_introduced ;
var bool: aux7068_BOOL:: var_is_introduced ;
var bool: aux7069_BOOL:: var_is_introduced ;
var bool: aux7070_BOOL:: var_is_introduced ;
var {0,1}: aux7070_INTEGER :: var_is_introduced ;
var 4..61: aux7071:: var_is_introduced ;
var bool: aux7072_BOOL:: var_is_introduced ;
var bool: aux7073_BOOL:: var_is_introduced ;
var bool: aux7074_BOOL:: var_is_introduced ;
var bool: aux7075_BOOL:: var_is_introduced ;
var bool: aux7076_BOOL:: var_is_introduced ;
var {0,1}: aux7076_INTEGER :: var_is_introduced ;
var 3..60: aux7077:: var_is_introduced ;
var bool: aux7078_BOOL:: var_is_introduced ;
var bool: aux7079_BOOL:: var_is_introduced ;
var bool: aux7080_BOOL:: var_is_introduced ;
var bool: aux7081_BOOL:: var_is_introduced ;
var bool: aux7082_BOOL:: var_is_introduced ;
var {0,1}: aux7082_INTEGER :: var_is_introduced ;
var 2..59: aux7083:: var_is_introduced ;
var bool: aux7084_BOOL:: var_is_introduced ;
var bool: aux7085_BOOL:: var_is_introduced ;
var bool: aux7086_BOOL:: var_is_introduced ;
var bool: aux7087_BOOL:: var_is_introduced ;
var bool: aux7088_BOOL:: var_is_introduced ;
var {0,1}: aux7088_INTEGER :: var_is_introduced ;
var 1..58: aux7089:: var_is_introduced ;
var bool: aux7090_BOOL:: var_is_introduced ;
var bool: aux7091_BOOL:: var_is_introduced ;
var bool: aux7092_BOOL:: var_is_introduced ;
var bool: aux7093_BOOL:: var_is_introduced ;
var bool: aux7094_BOOL:: var_is_introduced ;
var {0,1}: aux7094_INTEGER :: var_is_introduced ;
var 1..58: aux7095:: var_is_introduced ;
var bool: aux7096_BOOL:: var_is_introduced ;
var bool: aux7097_BOOL:: var_is_introduced ;
var bool: aux7098_BOOL:: var_is_introduced ;
var bool: aux7099_BOOL:: var_is_introduced ;
var bool: aux7100_BOOL:: var_is_introduced ;
var {0,1}: aux7100_INTEGER :: var_is_introduced ;
var 4..61: aux7101:: var_is_introduced ;
var bool: aux7102_BOOL:: var_is_introduced ;
var bool: aux7103_BOOL:: var_is_introduced ;
var bool: aux7104_BOOL:: var_is_introduced ;
var bool: aux7105_BOOL:: var_is_introduced ;
var bool: aux7106_BOOL:: var_is_introduced ;
var {0,1}: aux7106_INTEGER :: var_is_introduced ;
var 4..61: aux7107:: var_is_introduced ;
var bool: aux7108_BOOL:: var_is_introduced ;
var bool: aux7109_BOOL:: var_is_introduced ;
var bool: aux7110_BOOL:: var_is_introduced ;
var bool: aux7111_BOOL:: var_is_introduced ;
var bool: aux7112_BOOL:: var_is_introduced ;
var {0,1}: aux7112_INTEGER :: var_is_introduced ;
var 2..59: aux7113:: var_is_introduced ;
var bool: aux7114_BOOL:: var_is_introduced ;
var bool: aux7115_BOOL:: var_is_introduced ;
var bool: aux7116_BOOL:: var_is_introduced ;
var bool: aux7117_BOOL:: var_is_introduced ;
var bool: aux7118_BOOL:: var_is_introduced ;
var {0,1}: aux7118_INTEGER :: var_is_introduced ;
var 3..60: aux7119:: var_is_introduced ;
var bool: aux7120_BOOL:: var_is_introduced ;
var bool: aux7121_BOOL:: var_is_introduced ;
var bool: aux7122_BOOL:: var_is_introduced ;
var {0,1}: aux7122_INTEGER :: var_is_introduced ;
var bool: aux7123_BOOL:: var_is_introduced ;
var 4..61: aux7124:: var_is_introduced ;
var bool: aux7125_BOOL:: var_is_introduced ;
var bool: aux7126_BOOL:: var_is_introduced ;
var bool: aux7127_BOOL:: var_is_introduced ;
var bool: aux7128_BOOL:: var_is_introduced ;
var bool: aux7129_BOOL:: var_is_introduced ;
var {0,1}: aux7129_INTEGER :: var_is_introduced ;
var 4..61: aux7130:: var_is_introduced ;
var bool: aux7131_BOOL:: var_is_introduced ;
var bool: aux7132_BOOL:: var_is_introduced ;
var bool: aux7133_BOOL:: var_is_introduced ;
var bool: aux7134_BOOL:: var_is_introduced ;
var bool: aux7135_BOOL:: var_is_introduced ;
var {0,1}: aux7135_INTEGER :: var_is_introduced ;
var 3..60: aux7136:: var_is_introduced ;
var bool: aux7137_BOOL:: var_is_introduced ;
var bool: aux7138_BOOL:: var_is_introduced ;
var bool: aux7139_BOOL:: var_is_introduced ;
var bool: aux7140_BOOL:: var_is_introduced ;
var bool: aux7141_BOOL:: var_is_introduced ;
var {0,1}: aux7141_INTEGER :: var_is_introduced ;
var 2..59: aux7142:: var_is_introduced ;
var bool: aux7143_BOOL:: var_is_introduced ;
var bool: aux7144_BOOL:: var_is_introduced ;
var bool: aux7145_BOOL:: var_is_introduced ;
var bool: aux7146_BOOL:: var_is_introduced ;
var bool: aux7147_BOOL:: var_is_introduced ;
var {0,1}: aux7147_INTEGER :: var_is_introduced ;
var 3..60: aux7148:: var_is_introduced ;
var bool: aux7149_BOOL:: var_is_introduced ;
var bool: aux7150_BOOL:: var_is_introduced ;
var bool: aux7151_BOOL:: var_is_introduced ;
var bool: aux7152_BOOL:: var_is_introduced ;
var bool: aux7153_BOOL:: var_is_introduced ;
var {0,1}: aux7153_INTEGER :: var_is_introduced ;
var 2..59: aux7154:: var_is_introduced ;
var bool: aux7155_BOOL:: var_is_introduced ;
var bool: aux7156_BOOL:: var_is_introduced ;
var bool: aux7157_BOOL:: var_is_introduced ;
var bool: aux7158_BOOL:: var_is_introduced ;
var bool: aux7159_BOOL:: var_is_introduced ;
var {0,1}: aux7159_INTEGER :: var_is_introduced ;
var 3..60: aux7160:: var_is_introduced ;
var bool: aux7161_BOOL:: var_is_introduced ;
var bool: aux7162_BOOL:: var_is_introduced ;
var bool: aux7163_BOOL:: var_is_introduced ;
var bool: aux7164_BOOL:: var_is_introduced ;
var bool: aux7165_BOOL:: var_is_introduced ;
var {0,1}: aux7165_INTEGER :: var_is_introduced ;
var 2..59: aux7166:: var_is_introduced ;
var bool: aux7167_BOOL:: var_is_introduced ;
var bool: aux7168_BOOL:: var_is_introduced ;
var bool: aux7169_BOOL:: var_is_introduced ;
var bool: aux7170_BOOL:: var_is_introduced ;
var bool: aux7171_BOOL:: var_is_introduced ;
var {0,1}: aux7171_INTEGER :: var_is_introduced ;
var 3..60: aux7172:: var_is_introduced ;
var bool: aux7173_BOOL:: var_is_introduced ;
var bool: aux7174_BOOL:: var_is_introduced ;
var bool: aux7175_BOOL:: var_is_introduced ;
var bool: aux7176_BOOL:: var_is_introduced ;
var bool: aux7177_BOOL:: var_is_introduced ;
var {0,1}: aux7177_INTEGER :: var_is_introduced ;
var 5..62: aux7178:: var_is_introduced ;
var bool: aux7179_BOOL:: var_is_introduced ;
var bool: aux7180_BOOL:: var_is_introduced ;
var bool: aux7181_BOOL:: var_is_introduced ;
var bool: aux7182_BOOL:: var_is_introduced ;
var bool: aux7183_BOOL:: var_is_introduced ;
var {0,1}: aux7183_INTEGER :: var_is_introduced ;
var 4..61: aux7184:: var_is_introduced ;
var bool: aux7185_BOOL:: var_is_introduced ;
var bool: aux7186_BOOL:: var_is_introduced ;
var bool: aux7187_BOOL:: var_is_introduced ;
var bool: aux7188_BOOL:: var_is_introduced ;
var bool: aux7189_BOOL:: var_is_introduced ;
var {0,1}: aux7189_INTEGER :: var_is_introduced ;
var 3..60: aux7190:: var_is_introduced ;
var bool: aux7191_BOOL:: var_is_introduced ;
var bool: aux7192_BOOL:: var_is_introduced ;
var bool: aux7193_BOOL:: var_is_introduced ;
var bool: aux7194_BOOL:: var_is_introduced ;
var bool: aux7195_BOOL:: var_is_introduced ;
var {0,1}: aux7195_INTEGER :: var_is_introduced ;
var 2..59: aux7196:: var_is_introduced ;
var bool: aux7197_BOOL:: var_is_introduced ;
var bool: aux7198_BOOL:: var_is_introduced ;
var bool: aux7199_BOOL:: var_is_introduced ;
var bool: aux7200_BOOL:: var_is_introduced ;
var bool: aux7201_BOOL:: var_is_introduced ;
var {0,1}: aux7201_INTEGER :: var_is_introduced ;
var 1..58: aux7202:: var_is_introduced ;
var bool: aux7203_BOOL:: var_is_introduced ;
var bool: aux7204_BOOL:: var_is_introduced ;
var bool: aux7205_BOOL:: var_is_introduced ;
var bool: aux7206_BOOL:: var_is_introduced ;
var bool: aux7207_BOOL:: var_is_introduced ;
var {0,1}: aux7207_INTEGER :: var_is_introduced ;
var 3..60: aux7208:: var_is_introduced ;
var bool: aux7209_BOOL:: var_is_introduced ;
var bool: aux7210_BOOL:: var_is_introduced ;
var bool: aux7211_BOOL:: var_is_introduced ;
var bool: aux7212_BOOL:: var_is_introduced ;
var bool: aux7213_BOOL:: var_is_introduced ;
var {0,1}: aux7213_INTEGER :: var_is_introduced ;
var 1..58: aux7214:: var_is_introduced ;
var bool: aux7215_BOOL:: var_is_introduced ;
var bool: aux7216_BOOL:: var_is_introduced ;
var bool: aux7217_BOOL:: var_is_introduced ;
var bool: aux7218_BOOL:: var_is_introduced ;
var bool: aux7219_BOOL:: var_is_introduced ;
var {0,1}: aux7219_INTEGER :: var_is_introduced ;
var 4..61: aux7220:: var_is_introduced ;
var bool: aux7221_BOOL:: var_is_introduced ;
var bool: aux7222_BOOL:: var_is_introduced ;
var bool: aux7223_BOOL:: var_is_introduced ;
var bool: aux7224_BOOL:: var_is_introduced ;
var bool: aux7225_BOOL:: var_is_introduced ;
var {0,1}: aux7225_INTEGER :: var_is_introduced ;
var 4..61: aux7226:: var_is_introduced ;
var bool: aux7227_BOOL:: var_is_introduced ;
var bool: aux7228_BOOL:: var_is_introduced ;
var bool: aux7229_BOOL:: var_is_introduced ;
var bool: aux7230_BOOL:: var_is_introduced ;
var bool: aux7231_BOOL:: var_is_introduced ;
var {0,1}: aux7231_INTEGER :: var_is_introduced ;
var 2..59: aux7232:: var_is_introduced ;
var bool: aux7233_BOOL:: var_is_introduced ;
var bool: aux7234_BOOL:: var_is_introduced ;
var bool: aux7235_BOOL:: var_is_introduced ;
var bool: aux7236_BOOL:: var_is_introduced ;
var bool: aux7237_BOOL:: var_is_introduced ;
var {0,1}: aux7237_INTEGER :: var_is_introduced ;
var 2..59: aux7238:: var_is_introduced ;
var bool: aux7239_BOOL:: var_is_introduced ;
var bool: aux7240_BOOL:: var_is_introduced ;
var bool: aux7241_BOOL:: var_is_introduced ;
var {0,1}: aux7241_INTEGER :: var_is_introduced ;
var bool: aux7242_BOOL:: var_is_introduced ;
var 4..61: aux7243:: var_is_introduced ;
var bool: aux7244_BOOL:: var_is_introduced ;
var bool: aux7245_BOOL:: var_is_introduced ;
var bool: aux7246_BOOL:: var_is_introduced ;
var bool: aux7247_BOOL:: var_is_introduced ;
var bool: aux7248_BOOL:: var_is_introduced ;
var {0,1}: aux7248_INTEGER :: var_is_introduced ;
var 4..61: aux7249:: var_is_introduced ;
var bool: aux7250_BOOL:: var_is_introduced ;
var bool: aux7251_BOOL:: var_is_introduced ;
var bool: aux7252_BOOL:: var_is_introduced ;
var bool: aux7253_BOOL:: var_is_introduced ;
var bool: aux7254_BOOL:: var_is_introduced ;
var {0,1}: aux7254_INTEGER :: var_is_introduced ;
var 3..60: aux7255:: var_is_introduced ;
var bool: aux7256_BOOL:: var_is_introduced ;
var bool: aux7257_BOOL:: var_is_introduced ;
var bool: aux7258_BOOL:: var_is_introduced ;
var bool: aux7259_BOOL:: var_is_introduced ;
var bool: aux7260_BOOL:: var_is_introduced ;
var {0,1}: aux7260_INTEGER :: var_is_introduced ;
var 2..59: aux7261:: var_is_introduced ;
var bool: aux7262_BOOL:: var_is_introduced ;
var bool: aux7263_BOOL:: var_is_introduced ;
var bool: aux7264_BOOL:: var_is_introduced ;
var bool: aux7265_BOOL:: var_is_introduced ;
var bool: aux7266_BOOL:: var_is_introduced ;
var {0,1}: aux7266_INTEGER :: var_is_introduced ;
var 3..60: aux7267:: var_is_introduced ;
var bool: aux7268_BOOL:: var_is_introduced ;
var bool: aux7269_BOOL:: var_is_introduced ;
var bool: aux7270_BOOL:: var_is_introduced ;
var bool: aux7271_BOOL:: var_is_introduced ;
var bool: aux7272_BOOL:: var_is_introduced ;
var {0,1}: aux7272_INTEGER :: var_is_introduced ;
var 2..59: aux7273:: var_is_introduced ;
var bool: aux7274_BOOL:: var_is_introduced ;
var bool: aux7275_BOOL:: var_is_introduced ;
var bool: aux7276_BOOL:: var_is_introduced ;
var bool: aux7277_BOOL:: var_is_introduced ;
var bool: aux7278_BOOL:: var_is_introduced ;
var {0,1}: aux7278_INTEGER :: var_is_introduced ;
var 3..60: aux7279:: var_is_introduced ;
var bool: aux7280_BOOL:: var_is_introduced ;
var bool: aux7281_BOOL:: var_is_introduced ;
var bool: aux7282_BOOL:: var_is_introduced ;
var bool: aux7283_BOOL:: var_is_introduced ;
var bool: aux7284_BOOL:: var_is_introduced ;
var {0,1}: aux7284_INTEGER :: var_is_introduced ;
var 2..59: aux7285:: var_is_introduced ;
var bool: aux7286_BOOL:: var_is_introduced ;
var bool: aux7287_BOOL:: var_is_introduced ;
var bool: aux7288_BOOL:: var_is_introduced ;
var bool: aux7289_BOOL:: var_is_introduced ;
var bool: aux7290_BOOL:: var_is_introduced ;
var {0,1}: aux7290_INTEGER :: var_is_introduced ;
var 2..59: aux7291:: var_is_introduced ;
var bool: aux7292_BOOL:: var_is_introduced ;
var bool: aux7293_BOOL:: var_is_introduced ;
var bool: aux7294_BOOL:: var_is_introduced ;
var bool: aux7295_BOOL:: var_is_introduced ;
var bool: aux7296_BOOL:: var_is_introduced ;
var {0,1}: aux7296_INTEGER :: var_is_introduced ;
var 3..60: aux7297:: var_is_introduced ;
var bool: aux7298_BOOL:: var_is_introduced ;
var bool: aux7299_BOOL:: var_is_introduced ;
var bool: aux7300_BOOL:: var_is_introduced ;
var bool: aux7301_BOOL:: var_is_introduced ;
var bool: aux7302_BOOL:: var_is_introduced ;
var {0,1}: aux7302_INTEGER :: var_is_introduced ;
var 5..62: aux7303:: var_is_introduced ;
var bool: aux7304_BOOL:: var_is_introduced ;
var bool: aux7305_BOOL:: var_is_introduced ;
var bool: aux7306_BOOL:: var_is_introduced ;
var bool: aux7307_BOOL:: var_is_introduced ;
var bool: aux7308_BOOL:: var_is_introduced ;
var {0,1}: aux7308_INTEGER :: var_is_introduced ;
var 4..61: aux7309:: var_is_introduced ;
var bool: aux7310_BOOL:: var_is_introduced ;
var bool: aux7311_BOOL:: var_is_introduced ;
var bool: aux7312_BOOL:: var_is_introduced ;
var bool: aux7313_BOOL:: var_is_introduced ;
var bool: aux7314_BOOL:: var_is_introduced ;
var {0,1}: aux7314_INTEGER :: var_is_introduced ;
var 3..60: aux7315:: var_is_introduced ;
var bool: aux7316_BOOL:: var_is_introduced ;
var bool: aux7317_BOOL:: var_is_introduced ;
var bool: aux7318_BOOL:: var_is_introduced ;
var bool: aux7319_BOOL:: var_is_introduced ;
var bool: aux7320_BOOL:: var_is_introduced ;
var {0,1}: aux7320_INTEGER :: var_is_introduced ;
var 2..59: aux7321:: var_is_introduced ;
var bool: aux7322_BOOL:: var_is_introduced ;
var bool: aux7323_BOOL:: var_is_introduced ;
var bool: aux7324_BOOL:: var_is_introduced ;
var bool: aux7325_BOOL:: var_is_introduced ;
var bool: aux7326_BOOL:: var_is_introduced ;
var {0,1}: aux7326_INTEGER :: var_is_introduced ;
var 3..60: aux7327:: var_is_introduced ;
var bool: aux7328_BOOL:: var_is_introduced ;
var bool: aux7329_BOOL:: var_is_introduced ;
var bool: aux7330_BOOL:: var_is_introduced ;
var bool: aux7331_BOOL:: var_is_introduced ;
var bool: aux7332_BOOL:: var_is_introduced ;
var {0,1}: aux7332_INTEGER :: var_is_introduced ;
var 1..58: aux7333:: var_is_introduced ;
var bool: aux7334_BOOL:: var_is_introduced ;
var bool: aux7335_BOOL:: var_is_introduced ;
var bool: aux7336_BOOL:: var_is_introduced ;
var bool: aux7337_BOOL:: var_is_introduced ;
var bool: aux7338_BOOL:: var_is_introduced ;
var {0,1}: aux7338_INTEGER :: var_is_introduced ;
var 4..61: aux7339:: var_is_introduced ;
var bool: aux7340_BOOL:: var_is_introduced ;
var bool: aux7341_BOOL:: var_is_introduced ;
var bool: aux7342_BOOL:: var_is_introduced ;
var bool: aux7343_BOOL:: var_is_introduced ;
var bool: aux7344_BOOL:: var_is_introduced ;
var {0,1}: aux7344_INTEGER :: var_is_introduced ;
var 4..61: aux7345:: var_is_introduced ;
var bool: aux7346_BOOL:: var_is_introduced ;
var bool: aux7347_BOOL:: var_is_introduced ;
var bool: aux7348_BOOL:: var_is_introduced ;
var bool: aux7349_BOOL:: var_is_introduced ;
var bool: aux7350_BOOL:: var_is_introduced ;
var {0,1}: aux7350_INTEGER :: var_is_introduced ;
var 2..59: aux7351:: var_is_introduced ;
var bool: aux7352_BOOL:: var_is_introduced ;
var bool: aux7353_BOOL:: var_is_introduced ;
var bool: aux7354_BOOL:: var_is_introduced ;
var bool: aux7355_BOOL:: var_is_introduced ;
var bool: aux7356_BOOL:: var_is_introduced ;
var {0,1}: aux7356_INTEGER :: var_is_introduced ;
var 1..58: aux7357:: var_is_introduced ;
var bool: aux7358_BOOL:: var_is_introduced ;
var bool: aux7359_BOOL:: var_is_introduced ;
var bool: aux7360_BOOL:: var_is_introduced ;
var {0,1}: aux7360_INTEGER :: var_is_introduced ;
var bool: aux7361_BOOL:: var_is_introduced ;
var 4..61: aux7362:: var_is_introduced ;
var bool: aux7363_BOOL:: var_is_introduced ;
var bool: aux7364_BOOL:: var_is_introduced ;
var bool: aux7365_BOOL:: var_is_introduced ;
var bool: aux7366_BOOL:: var_is_introduced ;
var bool: aux7367_BOOL:: var_is_introduced ;
var {0,1}: aux7367_INTEGER :: var_is_introduced ;
var 4..61: aux7368:: var_is_introduced ;
var bool: aux7369_BOOL:: var_is_introduced ;
var bool: aux7370_BOOL:: var_is_introduced ;
var bool: aux7371_BOOL:: var_is_introduced ;
var bool: aux7372_BOOL:: var_is_introduced ;
var bool: aux7373_BOOL:: var_is_introduced ;
var {0,1}: aux7373_INTEGER :: var_is_introduced ;
var 3..60: aux7374:: var_is_introduced ;
var bool: aux7375_BOOL:: var_is_introduced ;
var bool: aux7376_BOOL:: var_is_introduced ;
var bool: aux7377_BOOL:: var_is_introduced ;
var bool: aux7378_BOOL:: var_is_introduced ;
var bool: aux7379_BOOL:: var_is_introduced ;
var {0,1}: aux7379_INTEGER :: var_is_introduced ;
var 2..59: aux7380:: var_is_introduced ;
var bool: aux7381_BOOL:: var_is_introduced ;
var bool: aux7382_BOOL:: var_is_introduced ;
var bool: aux7383_BOOL:: var_is_introduced ;
var bool: aux7384_BOOL:: var_is_introduced ;
var bool: aux7385_BOOL:: var_is_introduced ;
var {0,1}: aux7385_INTEGER :: var_is_introduced ;
var 3..60: aux7386:: var_is_introduced ;
var bool: aux7387_BOOL:: var_is_introduced ;
var bool: aux7388_BOOL:: var_is_introduced ;
var bool: aux7389_BOOL:: var_is_introduced ;
var bool: aux7390_BOOL:: var_is_introduced ;
var bool: aux7391_BOOL:: var_is_introduced ;
var {0,1}: aux7391_INTEGER :: var_is_introduced ;
var 2..59: aux7392:: var_is_introduced ;
var bool: aux7393_BOOL:: var_is_introduced ;
var bool: aux7394_BOOL:: var_is_introduced ;
var bool: aux7395_BOOL:: var_is_introduced ;
var bool: aux7396_BOOL:: var_is_introduced ;
var bool: aux7397_BOOL:: var_is_introduced ;
var {0,1}: aux7397_INTEGER :: var_is_introduced ;
var 3..60: aux7398:: var_is_introduced ;
var bool: aux7399_BOOL:: var_is_introduced ;
var bool: aux7400_BOOL:: var_is_introduced ;
var bool: aux7401_BOOL:: var_is_introduced ;
var bool: aux7402_BOOL:: var_is_introduced ;
var bool: aux7403_BOOL:: var_is_introduced ;
var {0,1}: aux7403_INTEGER :: var_is_introduced ;
var 2..59: aux7404:: var_is_introduced ;
var bool: aux7405_BOOL:: var_is_introduced ;
var bool: aux7406_BOOL:: var_is_introduced ;
var bool: aux7407_BOOL:: var_is_introduced ;
var bool: aux7408_BOOL:: var_is_introduced ;
var bool: aux7409_BOOL:: var_is_introduced ;
var {0,1}: aux7409_INTEGER :: var_is_introduced ;
var 2..59: aux7410:: var_is_introduced ;
var bool: aux7411_BOOL:: var_is_introduced ;
var bool: aux7412_BOOL:: var_is_introduced ;
var bool: aux7413_BOOL:: var_is_introduced ;
var bool: aux7414_BOOL:: var_is_introduced ;
var bool: aux7415_BOOL:: var_is_introduced ;
var {0,1}: aux7415_INTEGER :: var_is_introduced ;
var 3..60: aux7416:: var_is_introduced ;
var bool: aux7417_BOOL:: var_is_introduced ;
var bool: aux7418_BOOL:: var_is_introduced ;
var bool: aux7419_BOOL:: var_is_introduced ;
var bool: aux7420_BOOL:: var_is_introduced ;
var bool: aux7421_BOOL:: var_is_introduced ;
var {0,1}: aux7421_INTEGER :: var_is_introduced ;
var 4..61: aux7422:: var_is_introduced ;
var bool: aux7423_BOOL:: var_is_introduced ;
var bool: aux7424_BOOL:: var_is_introduced ;
var bool: aux7425_BOOL:: var_is_introduced ;
var bool: aux7426_BOOL:: var_is_introduced ;
var bool: aux7427_BOOL:: var_is_introduced ;
var {0,1}: aux7427_INTEGER :: var_is_introduced ;
var 3..60: aux7428:: var_is_introduced ;
var bool: aux7429_BOOL:: var_is_introduced ;
var bool: aux7430_BOOL:: var_is_introduced ;
var bool: aux7431_BOOL:: var_is_introduced ;
var bool: aux7432_BOOL:: var_is_introduced ;
var bool: aux7433_BOOL:: var_is_introduced ;
var {0,1}: aux7433_INTEGER :: var_is_introduced ;
var 2..59: aux7434:: var_is_introduced ;
var bool: aux7435_BOOL:: var_is_introduced ;
var bool: aux7436_BOOL:: var_is_introduced ;
var bool: aux7437_BOOL:: var_is_introduced ;
var bool: aux7438_BOOL:: var_is_introduced ;
var bool: aux7439_BOOL:: var_is_introduced ;
var {0,1}: aux7439_INTEGER :: var_is_introduced ;
var 1..58: aux7440:: var_is_introduced ;
var bool: aux7441_BOOL:: var_is_introduced ;
var bool: aux7442_BOOL:: var_is_introduced ;
var bool: aux7443_BOOL:: var_is_introduced ;
var bool: aux7444_BOOL:: var_is_introduced ;
var bool: aux7445_BOOL:: var_is_introduced ;
var {0,1}: aux7445_INTEGER :: var_is_introduced ;
var 3..60: aux7446:: var_is_introduced ;
var bool: aux7447_BOOL:: var_is_introduced ;
var bool: aux7448_BOOL:: var_is_introduced ;
var bool: aux7449_BOOL:: var_is_introduced ;
var bool: aux7450_BOOL:: var_is_introduced ;
var bool: aux7451_BOOL:: var_is_introduced ;
var {0,1}: aux7451_INTEGER :: var_is_introduced ;
var 1..58: aux7452:: var_is_introduced ;
var bool: aux7453_BOOL:: var_is_introduced ;
var bool: aux7454_BOOL:: var_is_introduced ;
var bool: aux7455_BOOL:: var_is_introduced ;
var bool: aux7456_BOOL:: var_is_introduced ;
var bool: aux7457_BOOL:: var_is_introduced ;
var {0,1}: aux7457_INTEGER :: var_is_introduced ;
var 4..61: aux7458:: var_is_introduced ;
var bool: aux7459_BOOL:: var_is_introduced ;
var bool: aux7460_BOOL:: var_is_introduced ;
var bool: aux7461_BOOL:: var_is_introduced ;
var bool: aux7462_BOOL:: var_is_introduced ;
var bool: aux7463_BOOL:: var_is_introduced ;
var {0,1}: aux7463_INTEGER :: var_is_introduced ;
var 4..61: aux7464:: var_is_introduced ;
var bool: aux7465_BOOL:: var_is_introduced ;
var bool: aux7466_BOOL:: var_is_introduced ;
var bool: aux7467_BOOL:: var_is_introduced ;
var bool: aux7468_BOOL:: var_is_introduced ;
var bool: aux7469_BOOL:: var_is_introduced ;
var {0,1}: aux7469_INTEGER :: var_is_introduced ;
var 2..59: aux7470:: var_is_introduced ;
var bool: aux7471_BOOL:: var_is_introduced ;
var bool: aux7472_BOOL:: var_is_introduced ;
var bool: aux7473_BOOL:: var_is_introduced ;
var bool: aux7474_BOOL:: var_is_introduced ;
var bool: aux7475_BOOL:: var_is_introduced ;
var {0,1}: aux7475_INTEGER :: var_is_introduced ;
var 5..62: aux7476:: var_is_introduced ;
var bool: aux7477_BOOL:: var_is_introduced ;
var bool: aux7478_BOOL:: var_is_introduced ;
var bool: aux7479_BOOL:: var_is_introduced ;
var {0,1}: aux7479_INTEGER :: var_is_introduced ;
var bool: aux7480_BOOL:: var_is_introduced ;
var 4..61: aux7481:: var_is_introduced ;
var bool: aux7482_BOOL:: var_is_introduced ;
var bool: aux7483_BOOL:: var_is_introduced ;
var bool: aux7484_BOOL:: var_is_introduced ;
var bool: aux7485_BOOL:: var_is_introduced ;
var bool: aux7486_BOOL:: var_is_introduced ;
var {0,1}: aux7486_INTEGER :: var_is_introduced ;
var 4..61: aux7487:: var_is_introduced ;
var bool: aux7488_BOOL:: var_is_introduced ;
var bool: aux7489_BOOL:: var_is_introduced ;
var bool: aux7490_BOOL:: var_is_introduced ;
var bool: aux7491_BOOL:: var_is_introduced ;
var bool: aux7492_BOOL:: var_is_introduced ;
var {0,1}: aux7492_INTEGER :: var_is_introduced ;
var 3..60: aux7493:: var_is_introduced ;
var bool: aux7494_BOOL:: var_is_introduced ;
var bool: aux7495_BOOL:: var_is_introduced ;
var bool: aux7496_BOOL:: var_is_introduced ;
var bool: aux7497_BOOL:: var_is_introduced ;
var bool: aux7498_BOOL:: var_is_introduced ;
var {0,1}: aux7498_INTEGER :: var_is_introduced ;
var 2..59: aux7499:: var_is_introduced ;
var bool: aux7500_BOOL:: var_is_introduced ;
var bool: aux7501_BOOL:: var_is_introduced ;
var bool: aux7502_BOOL:: var_is_introduced ;
var bool: aux7503_BOOL:: var_is_introduced ;
var bool: aux7504_BOOL:: var_is_introduced ;
var {0,1}: aux7504_INTEGER :: var_is_introduced ;
var 3..60: aux7505:: var_is_introduced ;
var bool: aux7506_BOOL:: var_is_introduced ;
var bool: aux7507_BOOL:: var_is_introduced ;
var bool: aux7508_BOOL:: var_is_introduced ;
var bool: aux7509_BOOL:: var_is_introduced ;
var bool: aux7510_BOOL:: var_is_introduced ;
var {0,1}: aux7510_INTEGER :: var_is_introduced ;
var 2..59: aux7511:: var_is_introduced ;
var bool: aux7512_BOOL:: var_is_introduced ;
var bool: aux7513_BOOL:: var_is_introduced ;
var bool: aux7514_BOOL:: var_is_introduced ;
var bool: aux7515_BOOL:: var_is_introduced ;
var bool: aux7516_BOOL:: var_is_introduced ;
var {0,1}: aux7516_INTEGER :: var_is_introduced ;
var 3..60: aux7517:: var_is_introduced ;
var bool: aux7518_BOOL:: var_is_introduced ;
var bool: aux7519_BOOL:: var_is_introduced ;
var bool: aux7520_BOOL:: var_is_introduced ;
var bool: aux7521_BOOL:: var_is_introduced ;
var bool: aux7522_BOOL:: var_is_introduced ;
var {0,1}: aux7522_INTEGER :: var_is_introduced ;
var 2..59: aux7523:: var_is_introduced ;
var bool: aux7524_BOOL:: var_is_introduced ;
var bool: aux7525_BOOL:: var_is_introduced ;
var bool: aux7526_BOOL:: var_is_introduced ;
var bool: aux7527_BOOL:: var_is_introduced ;
var bool: aux7528_BOOL:: var_is_introduced ;
var {0,1}: aux7528_INTEGER :: var_is_introduced ;
var 2..59: aux7529:: var_is_introduced ;
var bool: aux7530_BOOL:: var_is_introduced ;
var bool: aux7531_BOOL:: var_is_introduced ;
var bool: aux7532_BOOL:: var_is_introduced ;
var bool: aux7533_BOOL:: var_is_introduced ;
var bool: aux7534_BOOL:: var_is_introduced ;
var {0,1}: aux7534_INTEGER :: var_is_introduced ;
var 3..60: aux7535:: var_is_introduced ;
var bool: aux7536_BOOL:: var_is_introduced ;
var bool: aux7537_BOOL:: var_is_introduced ;
var bool: aux7538_BOOL:: var_is_introduced ;
var bool: aux7539_BOOL:: var_is_introduced ;
var bool: aux7540_BOOL:: var_is_introduced ;
var {0,1}: aux7540_INTEGER :: var_is_introduced ;
var 5..62: aux7541:: var_is_introduced ;
var bool: aux7542_BOOL:: var_is_introduced ;
var bool: aux7543_BOOL:: var_is_introduced ;
var bool: aux7544_BOOL:: var_is_introduced ;
var bool: aux7545_BOOL:: var_is_introduced ;
var bool: aux7546_BOOL:: var_is_introduced ;
var {0,1}: aux7546_INTEGER :: var_is_introduced ;
var 4..61: aux7547:: var_is_introduced ;
var bool: aux7548_BOOL:: var_is_introduced ;
var bool: aux7549_BOOL:: var_is_introduced ;
var bool: aux7550_BOOL:: var_is_introduced ;
var bool: aux7551_BOOL:: var_is_introduced ;
var bool: aux7552_BOOL:: var_is_introduced ;
var {0,1}: aux7552_INTEGER :: var_is_introduced ;
var 2..59: aux7553:: var_is_introduced ;
var bool: aux7554_BOOL:: var_is_introduced ;
var bool: aux7555_BOOL:: var_is_introduced ;
var bool: aux7556_BOOL:: var_is_introduced ;
var bool: aux7557_BOOL:: var_is_introduced ;
var bool: aux7558_BOOL:: var_is_introduced ;
var {0,1}: aux7558_INTEGER :: var_is_introduced ;
var 1..58: aux7559:: var_is_introduced ;
var bool: aux7560_BOOL:: var_is_introduced ;
var bool: aux7561_BOOL:: var_is_introduced ;
var bool: aux7562_BOOL:: var_is_introduced ;
var bool: aux7563_BOOL:: var_is_introduced ;
var bool: aux7564_BOOL:: var_is_introduced ;
var {0,1}: aux7564_INTEGER :: var_is_introduced ;
var 3..60: aux7565:: var_is_introduced ;
var bool: aux7566_BOOL:: var_is_introduced ;
var bool: aux7567_BOOL:: var_is_introduced ;
var bool: aux7568_BOOL:: var_is_introduced ;
var bool: aux7569_BOOL:: var_is_introduced ;
var bool: aux7570_BOOL:: var_is_introduced ;
var {0,1}: aux7570_INTEGER :: var_is_introduced ;
var 1..58: aux7571:: var_is_introduced ;
var bool: aux7572_BOOL:: var_is_introduced ;
var bool: aux7573_BOOL:: var_is_introduced ;
var bool: aux7574_BOOL:: var_is_introduced ;
var bool: aux7575_BOOL:: var_is_introduced ;
var bool: aux7576_BOOL:: var_is_introduced ;
var {0,1}: aux7576_INTEGER :: var_is_introduced ;
var 4..61: aux7577:: var_is_introduced ;
var bool: aux7578_BOOL:: var_is_introduced ;
var bool: aux7579_BOOL:: var_is_introduced ;
var bool: aux7580_BOOL:: var_is_introduced ;
var bool: aux7581_BOOL:: var_is_introduced ;
var bool: aux7582_BOOL:: var_is_introduced ;
var {0,1}: aux7582_INTEGER :: var_is_introduced ;
var 4..61: aux7583:: var_is_introduced ;
var bool: aux7584_BOOL:: var_is_introduced ;
var bool: aux7585_BOOL:: var_is_introduced ;
var bool: aux7586_BOOL:: var_is_introduced ;
var bool: aux7587_BOOL:: var_is_introduced ;
var bool: aux7588_BOOL:: var_is_introduced ;
var {0,1}: aux7588_INTEGER :: var_is_introduced ;
var 2..59: aux7589:: var_is_introduced ;
var bool: aux7590_BOOL:: var_is_introduced ;
var bool: aux7591_BOOL:: var_is_introduced ;
var bool: aux7592_BOOL:: var_is_introduced ;
var bool: aux7593_BOOL:: var_is_introduced ;
var bool: aux7594_BOOL:: var_is_introduced ;
var {0,1}: aux7594_INTEGER :: var_is_introduced ;
var 3..60: aux7595:: var_is_introduced ;
var bool: aux7596_BOOL:: var_is_introduced ;
var bool: aux7597_BOOL:: var_is_introduced ;
var bool: aux7598_BOOL:: var_is_introduced ;
var {0,1}: aux7598_INTEGER :: var_is_introduced ;
var bool: aux7599_BOOL:: var_is_introduced ;
var bool: aux7600_BOOL:: var_is_introduced ;
var bool: aux7601_BOOL:: var_is_introduced ;
var bool: aux7602_BOOL:: var_is_introduced ;
var 2..59: aux7603:: var_is_introduced ;
var bool: aux7604_BOOL:: var_is_introduced ;
var bool: aux7605_BOOL:: var_is_introduced ;
var {0,1}: aux7605_INTEGER :: var_is_introduced ;
var bool: aux7606_BOOL:: var_is_introduced ;
var bool: aux7607_BOOL:: var_is_introduced ;
var 4..61: aux7608:: var_is_introduced ;
var bool: aux7609_BOOL:: var_is_introduced ;
var bool: aux7610_BOOL:: var_is_introduced ;
var bool: aux7611_BOOL:: var_is_introduced ;
var {0,1}: aux7611_INTEGER :: var_is_introduced ;
var bool: aux7612_BOOL:: var_is_introduced ;
var bool: aux7613_BOOL:: var_is_introduced ;
var 4..61: aux7614:: var_is_introduced ;
var bool: aux7615_BOOL:: var_is_introduced ;
var bool: aux7616_BOOL:: var_is_introduced ;
var bool: aux7617_BOOL:: var_is_introduced ;
var {0,1}: aux7617_INTEGER :: var_is_introduced ;
var bool: aux7618_BOOL:: var_is_introduced ;
var bool: aux7619_BOOL:: var_is_introduced ;
var 3..60: aux7620:: var_is_introduced ;
var bool: aux7621_BOOL:: var_is_introduced ;
var bool: aux7622_BOOL:: var_is_introduced ;
var bool: aux7623_BOOL:: var_is_introduced ;
var {0,1}: aux7623_INTEGER :: var_is_introduced ;
var bool: aux7624_BOOL:: var_is_introduced ;
var bool: aux7625_BOOL:: var_is_introduced ;
var 3..60: aux7626:: var_is_introduced ;
var bool: aux7627_BOOL:: var_is_introduced ;
var bool: aux7628_BOOL:: var_is_introduced ;
var bool: aux7629_BOOL:: var_is_introduced ;
var {0,1}: aux7629_INTEGER :: var_is_introduced ;
var bool: aux7630_BOOL:: var_is_introduced ;
var bool: aux7631_BOOL:: var_is_introduced ;
var 2..59: aux7632:: var_is_introduced ;
var bool: aux7633_BOOL:: var_is_introduced ;
var bool: aux7634_BOOL:: var_is_introduced ;
var bool: aux7635_BOOL:: var_is_introduced ;
var {0,1}: aux7635_INTEGER :: var_is_introduced ;
var bool: aux7636_BOOL:: var_is_introduced ;
var bool: aux7637_BOOL:: var_is_introduced ;
var 3..60: aux7638:: var_is_introduced ;
var bool: aux7639_BOOL:: var_is_introduced ;
var bool: aux7640_BOOL:: var_is_introduced ;
var bool: aux7641_BOOL:: var_is_introduced ;
var {0,1}: aux7641_INTEGER :: var_is_introduced ;
var bool: aux7642_BOOL:: var_is_introduced ;
var bool: aux7643_BOOL:: var_is_introduced ;
var 2..59: aux7644:: var_is_introduced ;
var bool: aux7645_BOOL:: var_is_introduced ;
var bool: aux7646_BOOL:: var_is_introduced ;
var bool: aux7647_BOOL:: var_is_introduced ;
var {0,1}: aux7647_INTEGER :: var_is_introduced ;
var bool: aux7648_BOOL:: var_is_introduced ;
var bool: aux7649_BOOL:: var_is_introduced ;
var 2..59: aux7650:: var_is_introduced ;
var bool: aux7651_BOOL:: var_is_introduced ;
var bool: aux7652_BOOL:: var_is_introduced ;
var bool: aux7653_BOOL:: var_is_introduced ;
var {0,1}: aux7653_INTEGER :: var_is_introduced ;
var bool: aux7654_BOOL:: var_is_introduced ;
var bool: aux7655_BOOL:: var_is_introduced ;
var 5..62: aux7656:: var_is_introduced ;
var bool: aux7657_BOOL:: var_is_introduced ;
var bool: aux7658_BOOL:: var_is_introduced ;
var bool: aux7659_BOOL:: var_is_introduced ;
var {0,1}: aux7659_INTEGER :: var_is_introduced ;
var bool: aux7660_BOOL:: var_is_introduced ;
var bool: aux7661_BOOL:: var_is_introduced ;
var 3..60: aux7662:: var_is_introduced ;
var bool: aux7663_BOOL:: var_is_introduced ;
var bool: aux7664_BOOL:: var_is_introduced ;
var bool: aux7665_BOOL:: var_is_introduced ;
var {0,1}: aux7665_INTEGER :: var_is_introduced ;
var bool: aux7666_BOOL:: var_is_introduced ;
var bool: aux7667_BOOL:: var_is_introduced ;
var 4..61: aux7668:: var_is_introduced ;
var bool: aux7669_BOOL:: var_is_introduced ;
var bool: aux7670_BOOL:: var_is_introduced ;
var bool: aux7671_BOOL:: var_is_introduced ;
var {0,1}: aux7671_INTEGER :: var_is_introduced ;
var bool: aux7672_BOOL:: var_is_introduced ;
var bool: aux7673_BOOL:: var_is_introduced ;
var 3..60: aux7674:: var_is_introduced ;
var bool: aux7675_BOOL:: var_is_introduced ;
var bool: aux7676_BOOL:: var_is_introduced ;
var bool: aux7677_BOOL:: var_is_introduced ;
var {0,1}: aux7677_INTEGER :: var_is_introduced ;
var bool: aux7678_BOOL:: var_is_introduced ;
var bool: aux7679_BOOL:: var_is_introduced ;
var 2..59: aux7680:: var_is_introduced ;
var bool: aux7681_BOOL:: var_is_introduced ;
var bool: aux7682_BOOL:: var_is_introduced ;
var bool: aux7683_BOOL:: var_is_introduced ;
var {0,1}: aux7683_INTEGER :: var_is_introduced ;
var bool: aux7684_BOOL:: var_is_introduced ;
var bool: aux7685_BOOL:: var_is_introduced ;
var 1..58: aux7686:: var_is_introduced ;
var bool: aux7687_BOOL:: var_is_introduced ;
var bool: aux7688_BOOL:: var_is_introduced ;
var bool: aux7689_BOOL:: var_is_introduced ;
var {0,1}: aux7689_INTEGER :: var_is_introduced ;
var bool: aux7690_BOOL:: var_is_introduced ;
var bool: aux7691_BOOL:: var_is_introduced ;
var 3..60: aux7692:: var_is_introduced ;
var bool: aux7693_BOOL:: var_is_introduced ;
var bool: aux7694_BOOL:: var_is_introduced ;
var bool: aux7695_BOOL:: var_is_introduced ;
var {0,1}: aux7695_INTEGER :: var_is_introduced ;
var bool: aux7696_BOOL:: var_is_introduced ;
var bool: aux7697_BOOL:: var_is_introduced ;
var 4..61: aux7698:: var_is_introduced ;
var bool: aux7699_BOOL:: var_is_introduced ;
var bool: aux7700_BOOL:: var_is_introduced ;
var bool: aux7701_BOOL:: var_is_introduced ;
var {0,1}: aux7701_INTEGER :: var_is_introduced ;
var bool: aux7702_BOOL:: var_is_introduced ;
var bool: aux7703_BOOL:: var_is_introduced ;
var 1..58: aux7704:: var_is_introduced ;
var bool: aux7705_BOOL:: var_is_introduced ;
var bool: aux7706_BOOL:: var_is_introduced ;
var bool: aux7707_BOOL:: var_is_introduced ;
var {0,1}: aux7707_INTEGER :: var_is_introduced ;
var bool: aux7708_BOOL:: var_is_introduced ;
var bool: aux7709_BOOL:: var_is_introduced ;
var 4..61: aux7710:: var_is_introduced ;
var bool: aux7711_BOOL:: var_is_introduced ;
var bool: aux7712_BOOL:: var_is_introduced ;
var bool: aux7713_BOOL:: var_is_introduced ;
var {0,1}: aux7713_INTEGER :: var_is_introduced ;
var bool: aux7714_BOOL:: var_is_introduced ;
var bool: aux7715_BOOL:: var_is_introduced ;
var 2..59: aux7716:: var_is_introduced ;
var bool: aux7717_BOOL:: var_is_introduced ;
var bool: aux7718_BOOL:: var_is_introduced ;
var bool: aux7719_BOOL:: var_is_introduced ;
var {0,1}: aux7719_INTEGER :: var_is_introduced ;
var bool: aux7720_BOOL:: var_is_introduced ;
var bool: aux7721_BOOL:: var_is_introduced ;
var bool: aux7722_BOOL:: var_is_introduced ;
var 5..62: aux7723:: var_is_introduced ;
var bool: aux7724_BOOL:: var_is_introduced ;
var bool: aux7725_BOOL:: var_is_introduced ;
var bool: aux7726_BOOL:: var_is_introduced ;
var {0,1}: aux7726_INTEGER :: var_is_introduced ;
var bool: aux7727_BOOL:: var_is_introduced ;
var bool: aux7728_BOOL:: var_is_introduced ;
var 3..60: aux7729:: var_is_introduced ;
var bool: aux7730_BOOL:: var_is_introduced ;
var bool: aux7731_BOOL:: var_is_introduced ;
var bool: aux7732_BOOL:: var_is_introduced ;
var {0,1}: aux7732_INTEGER :: var_is_introduced ;
var bool: aux7733_BOOL:: var_is_introduced ;
var bool: aux7734_BOOL:: var_is_introduced ;
var 3..60: aux7735:: var_is_introduced ;
var bool: aux7736_BOOL:: var_is_introduced ;
var bool: aux7737_BOOL:: var_is_introduced ;
var bool: aux7738_BOOL:: var_is_introduced ;
var {0,1}: aux7738_INTEGER :: var_is_introduced ;
var bool: aux7739_BOOL:: var_is_introduced ;
var bool: aux7740_BOOL:: var_is_introduced ;
var 2..59: aux7741:: var_is_introduced ;
var bool: aux7742_BOOL:: var_is_introduced ;
var bool: aux7743_BOOL:: var_is_introduced ;
var bool: aux7744_BOOL:: var_is_introduced ;
var {0,1}: aux7744_INTEGER :: var_is_introduced ;
var bool: aux7745_BOOL:: var_is_introduced ;
var bool: aux7746_BOOL:: var_is_introduced ;
var 1..58: aux7747:: var_is_introduced ;
var bool: aux7748_BOOL:: var_is_introduced ;
var bool: aux7749_BOOL:: var_is_introduced ;
var bool: aux7750_BOOL:: var_is_introduced ;
var {0,1}: aux7750_INTEGER :: var_is_introduced ;
var bool: aux7751_BOOL:: var_is_introduced ;
var bool: aux7752_BOOL:: var_is_introduced ;
var 3..60: aux7753:: var_is_introduced ;
var bool: aux7754_BOOL:: var_is_introduced ;
var bool: aux7755_BOOL:: var_is_introduced ;
var bool: aux7756_BOOL:: var_is_introduced ;
var {0,1}: aux7756_INTEGER :: var_is_introduced ;
var bool: aux7757_BOOL:: var_is_introduced ;
var bool: aux7758_BOOL:: var_is_introduced ;
var 4..61: aux7759:: var_is_introduced ;
var bool: aux7760_BOOL:: var_is_introduced ;
var bool: aux7761_BOOL:: var_is_introduced ;
var bool: aux7762_BOOL:: var_is_introduced ;
var {0,1}: aux7762_INTEGER :: var_is_introduced ;
var bool: aux7763_BOOL:: var_is_introduced ;
var bool: aux7764_BOOL:: var_is_introduced ;
var 1..58: aux7765:: var_is_introduced ;
var bool: aux7766_BOOL:: var_is_introduced ;
var bool: aux7767_BOOL:: var_is_introduced ;
var bool: aux7768_BOOL:: var_is_introduced ;
var {0,1}: aux7768_INTEGER :: var_is_introduced ;
var bool: aux7769_BOOL:: var_is_introduced ;
var bool: aux7770_BOOL:: var_is_introduced ;
var 4..61: aux7771:: var_is_introduced ;
var bool: aux7772_BOOL:: var_is_introduced ;
var bool: aux7773_BOOL:: var_is_introduced ;
var bool: aux7774_BOOL:: var_is_introduced ;
var {0,1}: aux7774_INTEGER :: var_is_introduced ;
var bool: aux7775_BOOL:: var_is_introduced ;
var bool: aux7776_BOOL:: var_is_introduced ;
var 2..59: aux7777:: var_is_introduced ;
var bool: aux7778_BOOL:: var_is_introduced ;
var bool: aux7779_BOOL:: var_is_introduced ;
var bool: aux7780_BOOL:: var_is_introduced ;
var {0,1}: aux7780_INTEGER :: var_is_introduced ;
var bool: aux7781_BOOL:: var_is_introduced ;
var 4..61: aux7782:: var_is_introduced ;
var bool: aux7783_BOOL:: var_is_introduced ;
var bool: aux7784_BOOL:: var_is_introduced ;
var {0,1}: aux7784_INTEGER :: var_is_introduced ;
var bool: aux7785_BOOL:: var_is_introduced ;
var bool: aux7786_BOOL:: var_is_introduced ;
var 4..61: aux7787:: var_is_introduced ;
var bool: aux7788_BOOL:: var_is_introduced ;
var bool: aux7789_BOOL:: var_is_introduced ;
var bool: aux7790_BOOL:: var_is_introduced ;
var {0,1}: aux7790_INTEGER :: var_is_introduced ;
var bool: aux7791_BOOL:: var_is_introduced ;
var bool: aux7792_BOOL:: var_is_introduced ;
var 4..61: aux7793:: var_is_introduced ;
var bool: aux7794_BOOL:: var_is_introduced ;
var bool: aux7795_BOOL:: var_is_introduced ;
var bool: aux7796_BOOL:: var_is_introduced ;
var {0,1}: aux7796_INTEGER :: var_is_introduced ;
var bool: aux7797_BOOL:: var_is_introduced ;
var bool: aux7798_BOOL:: var_is_introduced ;
var 3..60: aux7799:: var_is_introduced ;
var bool: aux7800_BOOL:: var_is_introduced ;
var bool: aux7801_BOOL:: var_is_introduced ;
var bool: aux7802_BOOL:: var_is_introduced ;
var {0,1}: aux7802_INTEGER :: var_is_introduced ;
var bool: aux7803_BOOL:: var_is_introduced ;
var bool: aux7804_BOOL:: var_is_introduced ;
var 2..59: aux7805:: var_is_introduced ;
var bool: aux7806_BOOL:: var_is_introduced ;
var bool: aux7807_BOOL:: var_is_introduced ;
var bool: aux7808_BOOL:: var_is_introduced ;
var {0,1}: aux7808_INTEGER :: var_is_introduced ;
var bool: aux7809_BOOL:: var_is_introduced ;
var bool: aux7810_BOOL:: var_is_introduced ;
var 3..60: aux7811:: var_is_introduced ;
var bool: aux7812_BOOL:: var_is_introduced ;
var bool: aux7813_BOOL:: var_is_introduced ;
var bool: aux7814_BOOL:: var_is_introduced ;
var {0,1}: aux7814_INTEGER :: var_is_introduced ;
var bool: aux7815_BOOL:: var_is_introduced ;
var bool: aux7816_BOOL:: var_is_introduced ;
var 2..59: aux7817:: var_is_introduced ;
var bool: aux7818_BOOL:: var_is_introduced ;
var bool: aux7819_BOOL:: var_is_introduced ;
var bool: aux7820_BOOL:: var_is_introduced ;
var {0,1}: aux7820_INTEGER :: var_is_introduced ;
var bool: aux7821_BOOL:: var_is_introduced ;
var bool: aux7822_BOOL:: var_is_introduced ;
var 3..60: aux7823:: var_is_introduced ;
var bool: aux7824_BOOL:: var_is_introduced ;
var bool: aux7825_BOOL:: var_is_introduced ;
var bool: aux7826_BOOL:: var_is_introduced ;
var {0,1}: aux7826_INTEGER :: var_is_introduced ;
var bool: aux7827_BOOL:: var_is_introduced ;
var bool: aux7828_BOOL:: var_is_introduced ;
var 2..59: aux7829:: var_is_introduced ;
var bool: aux7830_BOOL:: var_is_introduced ;
var bool: aux7831_BOOL:: var_is_introduced ;
var bool: aux7832_BOOL:: var_is_introduced ;
var {0,1}: aux7832_INTEGER :: var_is_introduced ;
var bool: aux7833_BOOL:: var_is_introduced ;
var bool: aux7834_BOOL:: var_is_introduced ;
var 2..59: aux7835:: var_is_introduced ;
var bool: aux7836_BOOL:: var_is_introduced ;
var bool: aux7837_BOOL:: var_is_introduced ;
var bool: aux7838_BOOL:: var_is_introduced ;
var {0,1}: aux7838_INTEGER :: var_is_introduced ;
var bool: aux7839_BOOL:: var_is_introduced ;
var bool: aux7840_BOOL:: var_is_introduced ;
var bool: aux7841_BOOL:: var_is_introduced ;
var 5..62: aux7842:: var_is_introduced ;
var bool: aux7843_BOOL:: var_is_introduced ;
var bool: aux7844_BOOL:: var_is_introduced ;
var bool: aux7845_BOOL:: var_is_introduced ;
var {0,1}: aux7845_INTEGER :: var_is_introduced ;
var bool: aux7846_BOOL:: var_is_introduced ;
var bool: aux7847_BOOL:: var_is_introduced ;
var 3..60: aux7848:: var_is_introduced ;
var bool: aux7849_BOOL:: var_is_introduced ;
var bool: aux7850_BOOL:: var_is_introduced ;
var bool: aux7851_BOOL:: var_is_introduced ;
var {0,1}: aux7851_INTEGER :: var_is_introduced ;
var bool: aux7852_BOOL:: var_is_introduced ;
var bool: aux7853_BOOL:: var_is_introduced ;
var 4..61: aux7854:: var_is_introduced ;
var bool: aux7855_BOOL:: var_is_introduced ;
var bool: aux7856_BOOL:: var_is_introduced ;
var bool: aux7857_BOOL:: var_is_introduced ;
var {0,1}: aux7857_INTEGER :: var_is_introduced ;
var bool: aux7858_BOOL:: var_is_introduced ;
var bool: aux7859_BOOL:: var_is_introduced ;
var 2..59: aux7860:: var_is_introduced ;
var bool: aux7861_BOOL:: var_is_introduced ;
var bool: aux7862_BOOL:: var_is_introduced ;
var bool: aux7863_BOOL:: var_is_introduced ;
var {0,1}: aux7863_INTEGER :: var_is_introduced ;
var bool: aux7864_BOOL:: var_is_introduced ;
var bool: aux7865_BOOL:: var_is_introduced ;
var 1..58: aux7866:: var_is_introduced ;
var bool: aux7867_BOOL:: var_is_introduced ;
var bool: aux7868_BOOL:: var_is_introduced ;
var bool: aux7869_BOOL:: var_is_introduced ;
var {0,1}: aux7869_INTEGER :: var_is_introduced ;
var bool: aux7870_BOOL:: var_is_introduced ;
var bool: aux7871_BOOL:: var_is_introduced ;
var 3..60: aux7872:: var_is_introduced ;
var bool: aux7873_BOOL:: var_is_introduced ;
var bool: aux7874_BOOL:: var_is_introduced ;
var bool: aux7875_BOOL:: var_is_introduced ;
var {0,1}: aux7875_INTEGER :: var_is_introduced ;
var bool: aux7876_BOOL:: var_is_introduced ;
var bool: aux7877_BOOL:: var_is_introduced ;
var 4..61: aux7878:: var_is_introduced ;
var bool: aux7879_BOOL:: var_is_introduced ;
var bool: aux7880_BOOL:: var_is_introduced ;
var bool: aux7881_BOOL:: var_is_introduced ;
var {0,1}: aux7881_INTEGER :: var_is_introduced ;
var bool: aux7882_BOOL:: var_is_introduced ;
var bool: aux7883_BOOL:: var_is_introduced ;
var 1..58: aux7884:: var_is_introduced ;
var bool: aux7885_BOOL:: var_is_introduced ;
var bool: aux7886_BOOL:: var_is_introduced ;
var bool: aux7887_BOOL:: var_is_introduced ;
var {0,1}: aux7887_INTEGER :: var_is_introduced ;
var bool: aux7888_BOOL:: var_is_introduced ;
var bool: aux7889_BOOL:: var_is_introduced ;
var 4..61: aux7890:: var_is_introduced ;
var bool: aux7891_BOOL:: var_is_introduced ;
var bool: aux7892_BOOL:: var_is_introduced ;
var bool: aux7893_BOOL:: var_is_introduced ;
var {0,1}: aux7893_INTEGER :: var_is_introduced ;
var bool: aux7894_BOOL:: var_is_introduced ;
var bool: aux7895_BOOL:: var_is_introduced ;
var 2..59: aux7896:: var_is_introduced ;
var bool: aux7897_BOOL:: var_is_introduced ;
var bool: aux7898_BOOL:: var_is_introduced ;
var bool: aux7899_BOOL:: var_is_introduced ;
var {0,1}: aux7899_INTEGER :: var_is_introduced ;
var bool: aux7900_BOOL:: var_is_introduced ;
var 3..60: aux7901:: var_is_introduced ;
var bool: aux7902_BOOL:: var_is_introduced ;
var bool: aux7903_BOOL:: var_is_introduced ;
var {0,1}: aux7903_INTEGER :: var_is_introduced ;
var bool: aux7904_BOOL:: var_is_introduced ;
var bool: aux7905_BOOL:: var_is_introduced ;
var 4..61: aux7906:: var_is_introduced ;
var bool: aux7907_BOOL:: var_is_introduced ;
var bool: aux7908_BOOL:: var_is_introduced ;
var bool: aux7909_BOOL:: var_is_introduced ;
var {0,1}: aux7909_INTEGER :: var_is_introduced ;
var bool: aux7910_BOOL:: var_is_introduced ;
var bool: aux7911_BOOL:: var_is_introduced ;
var 4..61: aux7912:: var_is_introduced ;
var bool: aux7913_BOOL:: var_is_introduced ;
var bool: aux7914_BOOL:: var_is_introduced ;
var bool: aux7915_BOOL:: var_is_introduced ;
var {0,1}: aux7915_INTEGER :: var_is_introduced ;
var bool: aux7916_BOOL:: var_is_introduced ;
var bool: aux7917_BOOL:: var_is_introduced ;
var 3..60: aux7918:: var_is_introduced ;
var bool: aux7919_BOOL:: var_is_introduced ;
var bool: aux7920_BOOL:: var_is_introduced ;
var bool: aux7921_BOOL:: var_is_introduced ;
var {0,1}: aux7921_INTEGER :: var_is_introduced ;
var bool: aux7922_BOOL:: var_is_introduced ;
var bool: aux7923_BOOL:: var_is_introduced ;
var 2..59: aux7924:: var_is_introduced ;
var bool: aux7925_BOOL:: var_is_introduced ;
var bool: aux7926_BOOL:: var_is_introduced ;
var bool: aux7927_BOOL:: var_is_introduced ;
var {0,1}: aux7927_INTEGER :: var_is_introduced ;
var bool: aux7928_BOOL:: var_is_introduced ;
var bool: aux7929_BOOL:: var_is_introduced ;
var 3..60: aux7930:: var_is_introduced ;
var bool: aux7931_BOOL:: var_is_introduced ;
var bool: aux7932_BOOL:: var_is_introduced ;
var bool: aux7933_BOOL:: var_is_introduced ;
var {0,1}: aux7933_INTEGER :: var_is_introduced ;
var bool: aux7934_BOOL:: var_is_introduced ;
var bool: aux7935_BOOL:: var_is_introduced ;
var 2..59: aux7936:: var_is_introduced ;
var bool: aux7937_BOOL:: var_is_introduced ;
var bool: aux7938_BOOL:: var_is_introduced ;
var bool: aux7939_BOOL:: var_is_introduced ;
var {0,1}: aux7939_INTEGER :: var_is_introduced ;
var bool: aux7940_BOOL:: var_is_introduced ;
var bool: aux7941_BOOL:: var_is_introduced ;
var 3..60: aux7942:: var_is_introduced ;
var bool: aux7943_BOOL:: var_is_introduced ;
var bool: aux7944_BOOL:: var_is_introduced ;
var bool: aux7945_BOOL:: var_is_introduced ;
var {0,1}: aux7945_INTEGER :: var_is_introduced ;
var bool: aux7946_BOOL:: var_is_introduced ;
var bool: aux7947_BOOL:: var_is_introduced ;
var 2..59: aux7948:: var_is_introduced ;
var bool: aux7949_BOOL:: var_is_introduced ;
var bool: aux7950_BOOL:: var_is_introduced ;
var bool: aux7951_BOOL:: var_is_introduced ;
var {0,1}: aux7951_INTEGER :: var_is_introduced ;
var bool: aux7952_BOOL:: var_is_introduced ;
var bool: aux7953_BOOL:: var_is_introduced ;
var 2..59: aux7954:: var_is_introduced ;
var bool: aux7955_BOOL:: var_is_introduced ;
var bool: aux7956_BOOL:: var_is_introduced ;
var bool: aux7957_BOOL:: var_is_introduced ;
var {0,1}: aux7957_INTEGER :: var_is_introduced ;
var bool: aux7958_BOOL:: var_is_introduced ;
var bool: aux7959_BOOL:: var_is_introduced ;
var bool: aux7960_BOOL:: var_is_introduced ;
var 5..62: aux7961:: var_is_introduced ;
var bool: aux7962_BOOL:: var_is_introduced ;
var bool: aux7963_BOOL:: var_is_introduced ;
var bool: aux7964_BOOL:: var_is_introduced ;
var {0,1}: aux7964_INTEGER :: var_is_introduced ;
var bool: aux7965_BOOL:: var_is_introduced ;
var bool: aux7966_BOOL:: var_is_introduced ;
var 3..60: aux7967:: var_is_introduced ;
var bool: aux7968_BOOL:: var_is_introduced ;
var bool: aux7969_BOOL:: var_is_introduced ;
var bool: aux7970_BOOL:: var_is_introduced ;
var {0,1}: aux7970_INTEGER :: var_is_introduced ;
var bool: aux7971_BOOL:: var_is_introduced ;
var bool: aux7972_BOOL:: var_is_introduced ;
var 4..61: aux7973:: var_is_introduced ;
var bool: aux7974_BOOL:: var_is_introduced ;
var bool: aux7975_BOOL:: var_is_introduced ;
var bool: aux7976_BOOL:: var_is_introduced ;
var {0,1}: aux7976_INTEGER :: var_is_introduced ;
var bool: aux7977_BOOL:: var_is_introduced ;
var bool: aux7978_BOOL:: var_is_introduced ;
var 3..60: aux7979:: var_is_introduced ;
var bool: aux7980_BOOL:: var_is_introduced ;
var bool: aux7981_BOOL:: var_is_introduced ;
var bool: aux7982_BOOL:: var_is_introduced ;
var {0,1}: aux7982_INTEGER :: var_is_introduced ;
var bool: aux7983_BOOL:: var_is_introduced ;
var bool: aux7984_BOOL:: var_is_introduced ;
var 2..59: aux7985:: var_is_introduced ;
var bool: aux7986_BOOL:: var_is_introduced ;
var bool: aux7987_BOOL:: var_is_introduced ;
var bool: aux7988_BOOL:: var_is_introduced ;
var {0,1}: aux7988_INTEGER :: var_is_introduced ;
var bool: aux7989_BOOL:: var_is_introduced ;
var bool: aux7990_BOOL:: var_is_introduced ;
var 1..58: aux7991:: var_is_introduced ;
var bool: aux7992_BOOL:: var_is_introduced ;
var bool: aux7993_BOOL:: var_is_introduced ;
var bool: aux7994_BOOL:: var_is_introduced ;
var {0,1}: aux7994_INTEGER :: var_is_introduced ;
var bool: aux7995_BOOL:: var_is_introduced ;
var bool: aux7996_BOOL:: var_is_introduced ;
var 3..60: aux7997:: var_is_introduced ;
var bool: aux7998_BOOL:: var_is_introduced ;
var bool: aux7999_BOOL:: var_is_introduced ;
var bool: aux8000_BOOL:: var_is_introduced ;
var {0,1}: aux8000_INTEGER :: var_is_introduced ;
var bool: aux8001_BOOL:: var_is_introduced ;
var bool: aux8002_BOOL:: var_is_introduced ;
var 1..58: aux8003:: var_is_introduced ;
var bool: aux8004_BOOL:: var_is_introduced ;
var bool: aux8005_BOOL:: var_is_introduced ;
var bool: aux8006_BOOL:: var_is_introduced ;
var {0,1}: aux8006_INTEGER :: var_is_introduced ;
var bool: aux8007_BOOL:: var_is_introduced ;
var bool: aux8008_BOOL:: var_is_introduced ;
var 4..61: aux8009:: var_is_introduced ;
var bool: aux8010_BOOL:: var_is_introduced ;
var bool: aux8011_BOOL:: var_is_introduced ;
var bool: aux8012_BOOL:: var_is_introduced ;
var {0,1}: aux8012_INTEGER :: var_is_introduced ;
var bool: aux8013_BOOL:: var_is_introduced ;
var bool: aux8014_BOOL:: var_is_introduced ;
var 2..59: aux8015:: var_is_introduced ;
var bool: aux8016_BOOL:: var_is_introduced ;
var bool: aux8017_BOOL:: var_is_introduced ;
var bool: aux8018_BOOL:: var_is_introduced ;
var {0,1}: aux8018_INTEGER :: var_is_introduced ;
var bool: aux8019_BOOL:: var_is_introduced ;
var 4..61: aux8020:: var_is_introduced ;
var bool: aux8021_BOOL:: var_is_introduced ;
var bool: aux8022_BOOL:: var_is_introduced ;
var {0,1}: aux8022_INTEGER :: var_is_introduced ;
var bool: aux8023_BOOL:: var_is_introduced ;
var bool: aux8024_BOOL:: var_is_introduced ;
var 4..61: aux8025:: var_is_introduced ;
var bool: aux8026_BOOL:: var_is_introduced ;
var bool: aux8027_BOOL:: var_is_introduced ;
var bool: aux8028_BOOL:: var_is_introduced ;
var {0,1}: aux8028_INTEGER :: var_is_introduced ;
var bool: aux8029_BOOL:: var_is_introduced ;
var bool: aux8030_BOOL:: var_is_introduced ;
var 4..61: aux8031:: var_is_introduced ;
var bool: aux8032_BOOL:: var_is_introduced ;
var bool: aux8033_BOOL:: var_is_introduced ;
var bool: aux8034_BOOL:: var_is_introduced ;
var {0,1}: aux8034_INTEGER :: var_is_introduced ;
var bool: aux8035_BOOL:: var_is_introduced ;
var bool: aux8036_BOOL:: var_is_introduced ;
var 3..60: aux8037:: var_is_introduced ;
var bool: aux8038_BOOL:: var_is_introduced ;
var bool: aux8039_BOOL:: var_is_introduced ;
var bool: aux8040_BOOL:: var_is_introduced ;
var {0,1}: aux8040_INTEGER :: var_is_introduced ;
var bool: aux8041_BOOL:: var_is_introduced ;
var bool: aux8042_BOOL:: var_is_introduced ;
var 2..59: aux8043:: var_is_introduced ;
var bool: aux8044_BOOL:: var_is_introduced ;
var bool: aux8045_BOOL:: var_is_introduced ;
var bool: aux8046_BOOL:: var_is_introduced ;
var {0,1}: aux8046_INTEGER :: var_is_introduced ;
var bool: aux8047_BOOL:: var_is_introduced ;
var bool: aux8048_BOOL:: var_is_introduced ;
var 3..60: aux8049:: var_is_introduced ;
var bool: aux8050_BOOL:: var_is_introduced ;
var bool: aux8051_BOOL:: var_is_introduced ;
var bool: aux8052_BOOL:: var_is_introduced ;
var {0,1}: aux8052_INTEGER :: var_is_introduced ;
var bool: aux8053_BOOL:: var_is_introduced ;
var bool: aux8054_BOOL:: var_is_introduced ;
var 2..59: aux8055:: var_is_introduced ;
var bool: aux8056_BOOL:: var_is_introduced ;
var bool: aux8057_BOOL:: var_is_introduced ;
var bool: aux8058_BOOL:: var_is_introduced ;
var {0,1}: aux8058_INTEGER :: var_is_introduced ;
var bool: aux8059_BOOL:: var_is_introduced ;
var bool: aux8060_BOOL:: var_is_introduced ;
var 3..60: aux8061:: var_is_introduced ;
var bool: aux8062_BOOL:: var_is_introduced ;
var bool: aux8063_BOOL:: var_is_introduced ;
var bool: aux8064_BOOL:: var_is_introduced ;
var {0,1}: aux8064_INTEGER :: var_is_introduced ;
var bool: aux8065_BOOL:: var_is_introduced ;
var bool: aux8066_BOOL:: var_is_introduced ;
var 2..59: aux8067:: var_is_introduced ;
var bool: aux8068_BOOL:: var_is_introduced ;
var bool: aux8069_BOOL:: var_is_introduced ;
var bool: aux8070_BOOL:: var_is_introduced ;
var {0,1}: aux8070_INTEGER :: var_is_introduced ;
var bool: aux8071_BOOL:: var_is_introduced ;
var bool: aux8072_BOOL:: var_is_introduced ;
var 2..59: aux8073:: var_is_introduced ;
var bool: aux8074_BOOL:: var_is_introduced ;
var bool: aux8075_BOOL:: var_is_introduced ;
var bool: aux8076_BOOL:: var_is_introduced ;
var {0,1}: aux8076_INTEGER :: var_is_introduced ;
var bool: aux8077_BOOL:: var_is_introduced ;
var bool: aux8078_BOOL:: var_is_introduced ;
var 4..61: aux8079:: var_is_introduced ;
var bool: aux8080_BOOL:: var_is_introduced ;
var bool: aux8081_BOOL:: var_is_introduced ;
var {0,1}: aux8081_INTEGER :: var_is_introduced ;
var bool: aux8082_BOOL:: var_is_introduced ;
var bool: aux8083_BOOL:: var_is_introduced ;
var 4..61: aux8084:: var_is_introduced ;
var bool: aux8085_BOOL:: var_is_introduced ;
var bool: aux8086_BOOL:: var_is_introduced ;
var bool: aux8087_BOOL:: var_is_introduced ;
var {0,1}: aux8087_INTEGER :: var_is_introduced ;
var bool: aux8088_BOOL:: var_is_introduced ;
var bool: aux8089_BOOL:: var_is_introduced ;
var 3..60: aux8090:: var_is_introduced ;
var bool: aux8091_BOOL:: var_is_introduced ;
var bool: aux8092_BOOL:: var_is_introduced ;
var bool: aux8093_BOOL:: var_is_introduced ;
var {0,1}: aux8093_INTEGER :: var_is_introduced ;
var bool: aux8094_BOOL:: var_is_introduced ;
var bool: aux8095_BOOL:: var_is_introduced ;
var 2..59: aux8096:: var_is_introduced ;
var bool: aux8097_BOOL:: var_is_introduced ;
var bool: aux8098_BOOL:: var_is_introduced ;
var bool: aux8099_BOOL:: var_is_introduced ;
var {0,1}: aux8099_INTEGER :: var_is_introduced ;
var bool: aux8100_BOOL:: var_is_introduced ;
var bool: aux8101_BOOL:: var_is_introduced ;
var 3..60: aux8102:: var_is_introduced ;
var bool: aux8103_BOOL:: var_is_introduced ;
var bool: aux8104_BOOL:: var_is_introduced ;
var bool: aux8105_BOOL:: var_is_introduced ;
var {0,1}: aux8105_INTEGER :: var_is_introduced ;
var bool: aux8106_BOOL:: var_is_introduced ;
var bool: aux8107_BOOL:: var_is_introduced ;
var 2..59: aux8108:: var_is_introduced ;
var bool: aux8109_BOOL:: var_is_introduced ;
var bool: aux8110_BOOL:: var_is_introduced ;
var bool: aux8111_BOOL:: var_is_introduced ;
var {0,1}: aux8111_INTEGER :: var_is_introduced ;
var bool: aux8112_BOOL:: var_is_introduced ;
var bool: aux8113_BOOL:: var_is_introduced ;
var 3..60: aux8114:: var_is_introduced ;
var bool: aux8115_BOOL:: var_is_introduced ;
var bool: aux8116_BOOL:: var_is_introduced ;
var bool: aux8117_BOOL:: var_is_introduced ;
var {0,1}: aux8117_INTEGER :: var_is_introduced ;
var bool: aux8118_BOOL:: var_is_introduced ;
var bool: aux8119_BOOL:: var_is_introduced ;
var 2..59: aux8120:: var_is_introduced ;
var bool: aux8121_BOOL:: var_is_introduced ;
var bool: aux8122_BOOL:: var_is_introduced ;
var bool: aux8123_BOOL:: var_is_introduced ;
var {0,1}: aux8123_INTEGER :: var_is_introduced ;
var bool: aux8124_BOOL:: var_is_introduced ;
var bool: aux8125_BOOL:: var_is_introduced ;
var 2..59: aux8126:: var_is_introduced ;
var bool: aux8127_BOOL:: var_is_introduced ;
var bool: aux8128_BOOL:: var_is_introduced ;
var bool: aux8129_BOOL:: var_is_introduced ;
var {0,1}: aux8129_INTEGER :: var_is_introduced ;
var bool: aux8130_BOOL:: var_is_introduced ;
var bool: aux8131_BOOL:: var_is_introduced ;
var 5..62: aux8132:: var_is_introduced ;
var bool: aux8133_BOOL:: var_is_introduced ;
var bool: aux8134_BOOL:: var_is_introduced ;
var bool: aux8135_BOOL:: var_is_introduced ;
var {0,1}: aux8135_INTEGER :: var_is_introduced ;
var bool: aux8136_BOOL:: var_is_introduced ;
var bool: aux8137_BOOL:: var_is_introduced ;
var 3..60: aux8138:: var_is_introduced ;
var bool: aux8139_BOOL:: var_is_introduced ;
var bool: aux8140_BOOL:: var_is_introduced ;
var bool: aux8141_BOOL:: var_is_introduced ;
var {0,1}: aux8141_INTEGER :: var_is_introduced ;
var bool: aux8142_BOOL:: var_is_introduced ;
var bool: aux8143_BOOL:: var_is_introduced ;
var 4..61: aux8144:: var_is_introduced ;
var bool: aux8145_BOOL:: var_is_introduced ;
var bool: aux8146_BOOL:: var_is_introduced ;
var bool: aux8147_BOOL:: var_is_introduced ;
var {0,1}: aux8147_INTEGER :: var_is_introduced ;
var bool: aux8148_BOOL:: var_is_introduced ;
var bool: aux8149_BOOL:: var_is_introduced ;
var 3..60: aux8150:: var_is_introduced ;
var bool: aux8151_BOOL:: var_is_introduced ;
var bool: aux8152_BOOL:: var_is_introduced ;
var bool: aux8153_BOOL:: var_is_introduced ;
var {0,1}: aux8153_INTEGER :: var_is_introduced ;
var bool: aux8154_BOOL:: var_is_introduced ;
var bool: aux8155_BOOL:: var_is_introduced ;
var 2..59: aux8156:: var_is_introduced ;
var bool: aux8157_BOOL:: var_is_introduced ;
var bool: aux8158_BOOL:: var_is_introduced ;
var bool: aux8159_BOOL:: var_is_introduced ;
var {0,1}: aux8159_INTEGER :: var_is_introduced ;
var bool: aux8160_BOOL:: var_is_introduced ;
var bool: aux8161_BOOL:: var_is_introduced ;
var 1..58: aux8162:: var_is_introduced ;
var bool: aux8163_BOOL:: var_is_introduced ;
var bool: aux8164_BOOL:: var_is_introduced ;
var bool: aux8165_BOOL:: var_is_introduced ;
var {0,1}: aux8165_INTEGER :: var_is_introduced ;
var bool: aux8166_BOOL:: var_is_introduced ;
var bool: aux8167_BOOL:: var_is_introduced ;
var 3..60: aux8168:: var_is_introduced ;
var bool: aux8169_BOOL:: var_is_introduced ;
var bool: aux8170_BOOL:: var_is_introduced ;
var bool: aux8171_BOOL:: var_is_introduced ;
var {0,1}: aux8171_INTEGER :: var_is_introduced ;
var bool: aux8172_BOOL:: var_is_introduced ;
var bool: aux8173_BOOL:: var_is_introduced ;
var 4..61: aux8174:: var_is_introduced ;
var bool: aux8175_BOOL:: var_is_introduced ;
var bool: aux8176_BOOL:: var_is_introduced ;
var bool: aux8177_BOOL:: var_is_introduced ;
var {0,1}: aux8177_INTEGER :: var_is_introduced ;
var bool: aux8178_BOOL:: var_is_introduced ;
var bool: aux8179_BOOL:: var_is_introduced ;
var 1..58: aux8180:: var_is_introduced ;
var bool: aux8181_BOOL:: var_is_introduced ;
var bool: aux8182_BOOL:: var_is_introduced ;
var bool: aux8183_BOOL:: var_is_introduced ;
var {0,1}: aux8183_INTEGER :: var_is_introduced ;
var bool: aux8184_BOOL:: var_is_introduced ;
var bool: aux8185_BOOL:: var_is_introduced ;
var 4..61: aux8186:: var_is_introduced ;
var bool: aux8187_BOOL:: var_is_introduced ;
var bool: aux8188_BOOL:: var_is_introduced ;
var bool: aux8189_BOOL:: var_is_introduced ;
var {0,1}: aux8189_INTEGER :: var_is_introduced ;
var bool: aux8190_BOOL:: var_is_introduced ;
var bool: aux8191_BOOL:: var_is_introduced ;
var 2..59: aux8192:: var_is_introduced ;
var bool: aux8193_BOOL:: var_is_introduced ;
var bool: aux8194_BOOL:: var_is_introduced ;
var bool: aux8195_BOOL:: var_is_introduced ;
var {0,1}: aux8195_INTEGER :: var_is_introduced ;
var bool: aux8196_BOOL:: var_is_introduced ;
var bool: aux8197_BOOL:: var_is_introduced ;
var bool: aux8198_BOOL:: var_is_introduced ;
var 3..60: aux8199:: var_is_introduced ;
var bool: aux8200_BOOL:: var_is_introduced ;
var bool: aux8201_BOOL:: var_is_introduced ;
var bool: aux8202_BOOL:: var_is_introduced ;
var {0,1}: aux8202_INTEGER :: var_is_introduced ;
var bool: aux8203_BOOL:: var_is_introduced ;
var bool: aux8204_BOOL:: var_is_introduced ;
var 4..61: aux8205:: var_is_introduced ;
var bool: aux8206_BOOL:: var_is_introduced ;
var bool: aux8207_BOOL:: var_is_introduced ;
var bool: aux8208_BOOL:: var_is_introduced ;
var {0,1}: aux8208_INTEGER :: var_is_introduced ;
var bool: aux8209_BOOL:: var_is_introduced ;
var bool: aux8210_BOOL:: var_is_introduced ;
var 3..60: aux8211:: var_is_introduced ;
var bool: aux8212_BOOL:: var_is_introduced ;
var bool: aux8213_BOOL:: var_is_introduced ;
var bool: aux8214_BOOL:: var_is_introduced ;
var {0,1}: aux8214_INTEGER :: var_is_introduced ;
var bool: aux8215_BOOL:: var_is_introduced ;
var bool: aux8216_BOOL:: var_is_introduced ;
var 2..59: aux8217:: var_is_introduced ;
var bool: aux8218_BOOL:: var_is_introduced ;
var bool: aux8219_BOOL:: var_is_introduced ;
var bool: aux8220_BOOL:: var_is_introduced ;
var {0,1}: aux8220_INTEGER :: var_is_introduced ;
var bool: aux8221_BOOL:: var_is_introduced ;
var bool: aux8222_BOOL:: var_is_introduced ;
var 1..58: aux8223:: var_is_introduced ;
var bool: aux8224_BOOL:: var_is_introduced ;
var bool: aux8225_BOOL:: var_is_introduced ;
var bool: aux8226_BOOL:: var_is_introduced ;
var {0,1}: aux8226_INTEGER :: var_is_introduced ;
var bool: aux8227_BOOL:: var_is_introduced ;
var bool: aux8228_BOOL:: var_is_introduced ;
var 3..60: aux8229:: var_is_introduced ;
var bool: aux8230_BOOL:: var_is_introduced ;
var bool: aux8231_BOOL:: var_is_introduced ;
var bool: aux8232_BOOL:: var_is_introduced ;
var {0,1}: aux8232_INTEGER :: var_is_introduced ;
var bool: aux8233_BOOL:: var_is_introduced ;
var bool: aux8234_BOOL:: var_is_introduced ;
var 4..61: aux8235:: var_is_introduced ;
var bool: aux8236_BOOL:: var_is_introduced ;
var bool: aux8237_BOOL:: var_is_introduced ;
var bool: aux8238_BOOL:: var_is_introduced ;
var {0,1}: aux8238_INTEGER :: var_is_introduced ;
var bool: aux8239_BOOL:: var_is_introduced ;
var bool: aux8240_BOOL:: var_is_introduced ;
var 1..58: aux8241:: var_is_introduced ;
var bool: aux8242_BOOL:: var_is_introduced ;
var bool: aux8243_BOOL:: var_is_introduced ;
var bool: aux8244_BOOL:: var_is_introduced ;
var {0,1}: aux8244_INTEGER :: var_is_introduced ;
var bool: aux8245_BOOL:: var_is_introduced ;
var bool: aux8246_BOOL:: var_is_introduced ;
var 4..61: aux8247:: var_is_introduced ;
var bool: aux8248_BOOL:: var_is_introduced ;
var bool: aux8249_BOOL:: var_is_introduced ;
var bool: aux8250_BOOL:: var_is_introduced ;
var {0,1}: aux8250_INTEGER :: var_is_introduced ;
var bool: aux8251_BOOL:: var_is_introduced ;
var bool: aux8252_BOOL:: var_is_introduced ;
var 2..59: aux8253:: var_is_introduced ;
var bool: aux8254_BOOL:: var_is_introduced ;
var bool: aux8255_BOOL:: var_is_introduced ;
var bool: aux8256_BOOL:: var_is_introduced ;
var {0,1}: aux8256_INTEGER :: var_is_introduced ;
var bool: aux8257_BOOL:: var_is_introduced ;
var 5..62: aux8258:: var_is_introduced ;
var bool: aux8259_BOOL:: var_is_introduced ;
var bool: aux8260_BOOL:: var_is_introduced ;
var {0,1}: aux8260_INTEGER :: var_is_introduced ;
var bool: aux8261_BOOL:: var_is_introduced ;
var bool: aux8262_BOOL:: var_is_introduced ;
var 4..61: aux8263:: var_is_introduced ;
var bool: aux8264_BOOL:: var_is_introduced ;
var bool: aux8265_BOOL:: var_is_introduced ;
var bool: aux8266_BOOL:: var_is_introduced ;
var {0,1}: aux8266_INTEGER :: var_is_introduced ;
var bool: aux8267_BOOL:: var_is_introduced ;
var bool: aux8268_BOOL:: var_is_introduced ;
var 4..61: aux8269:: var_is_introduced ;
var bool: aux8270_BOOL:: var_is_introduced ;
var bool: aux8271_BOOL:: var_is_introduced ;
var bool: aux8272_BOOL:: var_is_introduced ;
var {0,1}: aux8272_INTEGER :: var_is_introduced ;
var bool: aux8273_BOOL:: var_is_introduced ;
var bool: aux8274_BOOL:: var_is_introduced ;
var 3..60: aux8275:: var_is_introduced ;
var bool: aux8276_BOOL:: var_is_introduced ;
var bool: aux8277_BOOL:: var_is_introduced ;
var bool: aux8278_BOOL:: var_is_introduced ;
var {0,1}: aux8278_INTEGER :: var_is_introduced ;
var bool: aux8279_BOOL:: var_is_introduced ;
var bool: aux8280_BOOL:: var_is_introduced ;
var 2..59: aux8281:: var_is_introduced ;
var bool: aux8282_BOOL:: var_is_introduced ;
var bool: aux8283_BOOL:: var_is_introduced ;
var bool: aux8284_BOOL:: var_is_introduced ;
var {0,1}: aux8284_INTEGER :: var_is_introduced ;
var bool: aux8285_BOOL:: var_is_introduced ;
var bool: aux8286_BOOL:: var_is_introduced ;
var 3..60: aux8287:: var_is_introduced ;
var bool: aux8288_BOOL:: var_is_introduced ;
var bool: aux8289_BOOL:: var_is_introduced ;
var bool: aux8290_BOOL:: var_is_introduced ;
var {0,1}: aux8290_INTEGER :: var_is_introduced ;
var bool: aux8291_BOOL:: var_is_introduced ;
var bool: aux8292_BOOL:: var_is_introduced ;
var 2..59: aux8293:: var_is_introduced ;
var bool: aux8294_BOOL:: var_is_introduced ;
var bool: aux8295_BOOL:: var_is_introduced ;
var bool: aux8296_BOOL:: var_is_introduced ;
var {0,1}: aux8296_INTEGER :: var_is_introduced ;
var bool: aux8297_BOOL:: var_is_introduced ;
var bool: aux8298_BOOL:: var_is_introduced ;
var 3..60: aux8299:: var_is_introduced ;
var bool: aux8300_BOOL:: var_is_introduced ;
var bool: aux8301_BOOL:: var_is_introduced ;
var bool: aux8302_BOOL:: var_is_introduced ;
var {0,1}: aux8302_INTEGER :: var_is_introduced ;
var bool: aux8303_BOOL:: var_is_introduced ;
var bool: aux8304_BOOL:: var_is_introduced ;
var 2..59: aux8305:: var_is_introduced ;
var bool: aux8306_BOOL:: var_is_introduced ;
var bool: aux8307_BOOL:: var_is_introduced ;
var bool: aux8308_BOOL:: var_is_introduced ;
var {0,1}: aux8308_INTEGER :: var_is_introduced ;
var bool: aux8309_BOOL:: var_is_introduced ;
var bool: aux8310_BOOL:: var_is_introduced ;
var 2..59: aux8311:: var_is_introduced ;
var bool: aux8312_BOOL:: var_is_introduced ;
var bool: aux8313_BOOL:: var_is_introduced ;
var bool: aux8314_BOOL:: var_is_introduced ;
var {0,1}: aux8314_INTEGER :: var_is_introduced ;
var bool: aux8315_BOOL:: var_is_introduced ;
var bool: aux8316_BOOL:: var_is_introduced ;
var bool: aux8317_BOOL:: var_is_introduced ;
var 5..62: aux8318:: var_is_introduced ;
var bool: aux8319_BOOL:: var_is_introduced ;
var bool: aux8320_BOOL:: var_is_introduced ;
var bool: aux8321_BOOL:: var_is_introduced ;
var {0,1}: aux8321_INTEGER :: var_is_introduced ;
var bool: aux8322_BOOL:: var_is_introduced ;
var bool: aux8323_BOOL:: var_is_introduced ;
var 3..60: aux8324:: var_is_introduced ;
var bool: aux8325_BOOL:: var_is_introduced ;
var bool: aux8326_BOOL:: var_is_introduced ;
var bool: aux8327_BOOL:: var_is_introduced ;
var {0,1}: aux8327_INTEGER :: var_is_introduced ;
var bool: aux8328_BOOL:: var_is_introduced ;
var bool: aux8329_BOOL:: var_is_introduced ;
var 4..61: aux8330:: var_is_introduced ;
var bool: aux8331_BOOL:: var_is_introduced ;
var bool: aux8332_BOOL:: var_is_introduced ;
var bool: aux8333_BOOL:: var_is_introduced ;
var {0,1}: aux8333_INTEGER :: var_is_introduced ;
var bool: aux8334_BOOL:: var_is_introduced ;
var bool: aux8335_BOOL:: var_is_introduced ;
var 3..60: aux8336:: var_is_introduced ;
var bool: aux8337_BOOL:: var_is_introduced ;
var bool: aux8338_BOOL:: var_is_introduced ;
var bool: aux8339_BOOL:: var_is_introduced ;
var {0,1}: aux8339_INTEGER :: var_is_introduced ;
var bool: aux8340_BOOL:: var_is_introduced ;
var bool: aux8341_BOOL:: var_is_introduced ;
var 1..58: aux8342:: var_is_introduced ;
var bool: aux8343_BOOL:: var_is_introduced ;
var bool: aux8344_BOOL:: var_is_introduced ;
var bool: aux8345_BOOL:: var_is_introduced ;
var {0,1}: aux8345_INTEGER :: var_is_introduced ;
var bool: aux8346_BOOL:: var_is_introduced ;
var bool: aux8347_BOOL:: var_is_introduced ;
var 3..60: aux8348:: var_is_introduced ;
var bool: aux8349_BOOL:: var_is_introduced ;
var bool: aux8350_BOOL:: var_is_introduced ;
var bool: aux8351_BOOL:: var_is_introduced ;
var {0,1}: aux8351_INTEGER :: var_is_introduced ;
var bool: aux8352_BOOL:: var_is_introduced ;
var bool: aux8353_BOOL:: var_is_introduced ;
var 4..61: aux8354:: var_is_introduced ;
var bool: aux8355_BOOL:: var_is_introduced ;
var bool: aux8356_BOOL:: var_is_introduced ;
var bool: aux8357_BOOL:: var_is_introduced ;
var {0,1}: aux8357_INTEGER :: var_is_introduced ;
var bool: aux8358_BOOL:: var_is_introduced ;
var bool: aux8359_BOOL:: var_is_introduced ;
var 1..58: aux8360:: var_is_introduced ;
var bool: aux8361_BOOL:: var_is_introduced ;
var bool: aux8362_BOOL:: var_is_introduced ;
var bool: aux8363_BOOL:: var_is_introduced ;
var {0,1}: aux8363_INTEGER :: var_is_introduced ;
var bool: aux8364_BOOL:: var_is_introduced ;
var bool: aux8365_BOOL:: var_is_introduced ;
var 4..61: aux8366:: var_is_introduced ;
var bool: aux8367_BOOL:: var_is_introduced ;
var bool: aux8368_BOOL:: var_is_introduced ;
var bool: aux8369_BOOL:: var_is_introduced ;
var {0,1}: aux8369_INTEGER :: var_is_introduced ;
var bool: aux8370_BOOL:: var_is_introduced ;
var bool: aux8371_BOOL:: var_is_introduced ;
var 2..59: aux8372:: var_is_introduced ;
var bool: aux8373_BOOL:: var_is_introduced ;
var bool: aux8374_BOOL:: var_is_introduced ;
var bool: aux8375_BOOL:: var_is_introduced ;
var {0,1}: aux8375_INTEGER :: var_is_introduced ;
var bool: aux8376_BOOL:: var_is_introduced ;
var 2..59: aux8377:: var_is_introduced ;
var bool: aux8378_BOOL:: var_is_introduced ;
var bool: aux8379_BOOL:: var_is_introduced ;
var {0,1}: aux8379_INTEGER :: var_is_introduced ;
var bool: aux8380_BOOL:: var_is_introduced ;
var bool: aux8381_BOOL:: var_is_introduced ;
var 4..61: aux8382:: var_is_introduced ;
var bool: aux8383_BOOL:: var_is_introduced ;
var bool: aux8384_BOOL:: var_is_introduced ;
var bool: aux8385_BOOL:: var_is_introduced ;
var {0,1}: aux8385_INTEGER :: var_is_introduced ;
var bool: aux8386_BOOL:: var_is_introduced ;
var bool: aux8387_BOOL:: var_is_introduced ;
var 4..61: aux8388:: var_is_introduced ;
var bool: aux8389_BOOL:: var_is_introduced ;
var bool: aux8390_BOOL:: var_is_introduced ;
var bool: aux8391_BOOL:: var_is_introduced ;
var {0,1}: aux8391_INTEGER :: var_is_introduced ;
var bool: aux8392_BOOL:: var_is_introduced ;
var bool: aux8393_BOOL:: var_is_introduced ;
var 3..60: aux8394:: var_is_introduced ;
var bool: aux8395_BOOL:: var_is_introduced ;
var bool: aux8396_BOOL:: var_is_introduced ;
var bool: aux8397_BOOL:: var_is_introduced ;
var {0,1}: aux8397_INTEGER :: var_is_introduced ;
var bool: aux8398_BOOL:: var_is_introduced ;
var bool: aux8399_BOOL:: var_is_introduced ;
var 2..59: aux8400:: var_is_introduced ;
var bool: aux8401_BOOL:: var_is_introduced ;
var bool: aux8402_BOOL:: var_is_introduced ;
var bool: aux8403_BOOL:: var_is_introduced ;
var {0,1}: aux8403_INTEGER :: var_is_introduced ;
var bool: aux8404_BOOL:: var_is_introduced ;
var bool: aux8405_BOOL:: var_is_introduced ;
var 3..60: aux8406:: var_is_introduced ;
var bool: aux8407_BOOL:: var_is_introduced ;
var bool: aux8408_BOOL:: var_is_introduced ;
var bool: aux8409_BOOL:: var_is_introduced ;
var {0,1}: aux8409_INTEGER :: var_is_introduced ;
var bool: aux8410_BOOL:: var_is_introduced ;
var bool: aux8411_BOOL:: var_is_introduced ;
var 2..59: aux8412:: var_is_introduced ;
var bool: aux8413_BOOL:: var_is_introduced ;
var bool: aux8414_BOOL:: var_is_introduced ;
var bool: aux8415_BOOL:: var_is_introduced ;
var {0,1}: aux8415_INTEGER :: var_is_introduced ;
var bool: aux8416_BOOL:: var_is_introduced ;
var bool: aux8417_BOOL:: var_is_introduced ;
var 3..60: aux8418:: var_is_introduced ;
var bool: aux8419_BOOL:: var_is_introduced ;
var bool: aux8420_BOOL:: var_is_introduced ;
var bool: aux8421_BOOL:: var_is_introduced ;
var {0,1}: aux8421_INTEGER :: var_is_introduced ;
var bool: aux8422_BOOL:: var_is_introduced ;
var bool: aux8423_BOOL:: var_is_introduced ;
var 2..59: aux8424:: var_is_introduced ;
var bool: aux8425_BOOL:: var_is_introduced ;
var bool: aux8426_BOOL:: var_is_introduced ;
var bool: aux8427_BOOL:: var_is_introduced ;
var {0,1}: aux8427_INTEGER :: var_is_introduced ;
var bool: aux8428_BOOL:: var_is_introduced ;
var bool: aux8429_BOOL:: var_is_introduced ;
var 2..59: aux8430:: var_is_introduced ;
var bool: aux8431_BOOL:: var_is_introduced ;
var bool: aux8432_BOOL:: var_is_introduced ;
var bool: aux8433_BOOL:: var_is_introduced ;
var {0,1}: aux8433_INTEGER :: var_is_introduced ;
var bool: aux8434_BOOL:: var_is_introduced ;
var bool: aux8435_BOOL:: var_is_introduced ;
var bool: aux8436_BOOL:: var_is_introduced ;
var 5..62: aux8437:: var_is_introduced ;
var bool: aux8438_BOOL:: var_is_introduced ;
var bool: aux8439_BOOL:: var_is_introduced ;
var bool: aux8440_BOOL:: var_is_introduced ;
var {0,1}: aux8440_INTEGER :: var_is_introduced ;
var bool: aux8441_BOOL:: var_is_introduced ;
var bool: aux8442_BOOL:: var_is_introduced ;
var 4..61: aux8443:: var_is_introduced ;
var bool: aux8444_BOOL:: var_is_introduced ;
var bool: aux8445_BOOL:: var_is_introduced ;
var bool: aux8446_BOOL:: var_is_introduced ;
var {0,1}: aux8446_INTEGER :: var_is_introduced ;
var bool: aux8447_BOOL:: var_is_introduced ;
var bool: aux8448_BOOL:: var_is_introduced ;
var 3..60: aux8449:: var_is_introduced ;
var bool: aux8450_BOOL:: var_is_introduced ;
var bool: aux8451_BOOL:: var_is_introduced ;
var bool: aux8452_BOOL:: var_is_introduced ;
var {0,1}: aux8452_INTEGER :: var_is_introduced ;
var bool: aux8453_BOOL:: var_is_introduced ;
var bool: aux8454_BOOL:: var_is_introduced ;
var 2..59: aux8455:: var_is_introduced ;
var bool: aux8456_BOOL:: var_is_introduced ;
var bool: aux8457_BOOL:: var_is_introduced ;
var bool: aux8458_BOOL:: var_is_introduced ;
var {0,1}: aux8458_INTEGER :: var_is_introduced ;
var bool: aux8459_BOOL:: var_is_introduced ;
var bool: aux8460_BOOL:: var_is_introduced ;
var 1..58: aux8461:: var_is_introduced ;
var bool: aux8462_BOOL:: var_is_introduced ;
var bool: aux8463_BOOL:: var_is_introduced ;
var bool: aux8464_BOOL:: var_is_introduced ;
var {0,1}: aux8464_INTEGER :: var_is_introduced ;
var bool: aux8465_BOOL:: var_is_introduced ;
var bool: aux8466_BOOL:: var_is_introduced ;
var 3..60: aux8467:: var_is_introduced ;
var bool: aux8468_BOOL:: var_is_introduced ;
var bool: aux8469_BOOL:: var_is_introduced ;
var bool: aux8470_BOOL:: var_is_introduced ;
var {0,1}: aux8470_INTEGER :: var_is_introduced ;
var bool: aux8471_BOOL:: var_is_introduced ;
var bool: aux8472_BOOL:: var_is_introduced ;
var 4..61: aux8473:: var_is_introduced ;
var bool: aux8474_BOOL:: var_is_introduced ;
var bool: aux8475_BOOL:: var_is_introduced ;
var bool: aux8476_BOOL:: var_is_introduced ;
var {0,1}: aux8476_INTEGER :: var_is_introduced ;
var bool: aux8477_BOOL:: var_is_introduced ;
var bool: aux8478_BOOL:: var_is_introduced ;
var 1..58: aux8479:: var_is_introduced ;
var bool: aux8480_BOOL:: var_is_introduced ;
var bool: aux8481_BOOL:: var_is_introduced ;
var bool: aux8482_BOOL:: var_is_introduced ;
var {0,1}: aux8482_INTEGER :: var_is_introduced ;
var bool: aux8483_BOOL:: var_is_introduced ;
var bool: aux8484_BOOL:: var_is_introduced ;
var 4..61: aux8485:: var_is_introduced ;
var bool: aux8486_BOOL:: var_is_introduced ;
var bool: aux8487_BOOL:: var_is_introduced ;
var bool: aux8488_BOOL:: var_is_introduced ;
var {0,1}: aux8488_INTEGER :: var_is_introduced ;
var bool: aux8489_BOOL:: var_is_introduced ;
var bool: aux8490_BOOL:: var_is_introduced ;
var 2..59: aux8491:: var_is_introduced ;
var bool: aux8492_BOOL:: var_is_introduced ;
var bool: aux8493_BOOL:: var_is_introduced ;
var bool: aux8494_BOOL:: var_is_introduced ;
var {0,1}: aux8494_INTEGER :: var_is_introduced ;
var bool: aux8495_BOOL:: var_is_introduced ;
var 3..60: aux8496:: var_is_introduced ;
var bool: aux8497_BOOL:: var_is_introduced ;
var bool: aux8498_BOOL:: var_is_introduced ;
var {0,1}: aux8498_INTEGER :: var_is_introduced ;
var bool: aux8499_BOOL:: var_is_introduced ;
var bool: aux8500_BOOL:: var_is_introduced ;
var 4..61: aux8501:: var_is_introduced ;
var bool: aux8502_BOOL:: var_is_introduced ;
var bool: aux8503_BOOL:: var_is_introduced ;
var bool: aux8504_BOOL:: var_is_introduced ;
var {0,1}: aux8504_INTEGER :: var_is_introduced ;
var bool: aux8505_BOOL:: var_is_introduced ;
var bool: aux8506_BOOL:: var_is_introduced ;
var 4..61: aux8507:: var_is_introduced ;
var bool: aux8508_BOOL:: var_is_introduced ;
var bool: aux8509_BOOL:: var_is_introduced ;
var bool: aux8510_BOOL:: var_is_introduced ;
var {0,1}: aux8510_INTEGER :: var_is_introduced ;
var bool: aux8511_BOOL:: var_is_introduced ;
var bool: aux8512_BOOL:: var_is_introduced ;
var 3..60: aux8513:: var_is_introduced ;
var bool: aux8514_BOOL:: var_is_introduced ;
var bool: aux8515_BOOL:: var_is_introduced ;
var bool: aux8516_BOOL:: var_is_introduced ;
var {0,1}: aux8516_INTEGER :: var_is_introduced ;
var bool: aux8517_BOOL:: var_is_introduced ;
var bool: aux8518_BOOL:: var_is_introduced ;
var 2..59: aux8519:: var_is_introduced ;
var bool: aux8520_BOOL:: var_is_introduced ;
var bool: aux8521_BOOL:: var_is_introduced ;
var bool: aux8522_BOOL:: var_is_introduced ;
var {0,1}: aux8522_INTEGER :: var_is_introduced ;
var bool: aux8523_BOOL:: var_is_introduced ;
var bool: aux8524_BOOL:: var_is_introduced ;
var 3..60: aux8525:: var_is_introduced ;
var bool: aux8526_BOOL:: var_is_introduced ;
var bool: aux8527_BOOL:: var_is_introduced ;
var bool: aux8528_BOOL:: var_is_introduced ;
var {0,1}: aux8528_INTEGER :: var_is_introduced ;
var bool: aux8529_BOOL:: var_is_introduced ;
var bool: aux8530_BOOL:: var_is_introduced ;
var 2..59: aux8531:: var_is_introduced ;
var bool: aux8532_BOOL:: var_is_introduced ;
var bool: aux8533_BOOL:: var_is_introduced ;
var bool: aux8534_BOOL:: var_is_introduced ;
var {0,1}: aux8534_INTEGER :: var_is_introduced ;
var bool: aux8535_BOOL:: var_is_introduced ;
var bool: aux8536_BOOL:: var_is_introduced ;
var 3..60: aux8537:: var_is_introduced ;
var bool: aux8538_BOOL:: var_is_introduced ;
var bool: aux8539_BOOL:: var_is_introduced ;
var bool: aux8540_BOOL:: var_is_introduced ;
var {0,1}: aux8540_INTEGER :: var_is_introduced ;
var bool: aux8541_BOOL:: var_is_introduced ;
var bool: aux8542_BOOL:: var_is_introduced ;
var 2..59: aux8543:: var_is_introduced ;
var bool: aux8544_BOOL:: var_is_introduced ;
var bool: aux8545_BOOL:: var_is_introduced ;
var bool: aux8546_BOOL:: var_is_introduced ;
var {0,1}: aux8546_INTEGER :: var_is_introduced ;
var bool: aux8547_BOOL:: var_is_introduced ;
var bool: aux8548_BOOL:: var_is_introduced ;
var 2..59: aux8549:: var_is_introduced ;
var bool: aux8550_BOOL:: var_is_introduced ;
var bool: aux8551_BOOL:: var_is_introduced ;
var bool: aux8552_BOOL:: var_is_introduced ;
var {0,1}: aux8552_INTEGER :: var_is_introduced ;
var bool: aux8553_BOOL:: var_is_introduced ;
var bool: aux8554_BOOL:: var_is_introduced ;
var 3..60: aux8555:: var_is_introduced ;
var bool: aux8556_BOOL:: var_is_introduced ;
var bool: aux8557_BOOL:: var_is_introduced ;
var {0,1}: aux8557_INTEGER :: var_is_introduced ;
var bool: aux8558_BOOL:: var_is_introduced ;
var bool: aux8559_BOOL:: var_is_introduced ;
var 4..61: aux8560:: var_is_introduced ;
var bool: aux8561_BOOL:: var_is_introduced ;
var bool: aux8562_BOOL:: var_is_introduced ;
var bool: aux8563_BOOL:: var_is_introduced ;
var {0,1}: aux8563_INTEGER :: var_is_introduced ;
var bool: aux8564_BOOL:: var_is_introduced ;
var bool: aux8565_BOOL:: var_is_introduced ;
var 4..61: aux8566:: var_is_introduced ;
var bool: aux8567_BOOL:: var_is_introduced ;
var bool: aux8568_BOOL:: var_is_introduced ;
var bool: aux8569_BOOL:: var_is_introduced ;
var {0,1}: aux8569_INTEGER :: var_is_introduced ;
var bool: aux8570_BOOL:: var_is_introduced ;
var bool: aux8571_BOOL:: var_is_introduced ;
var 3..60: aux8572:: var_is_introduced ;
var bool: aux8573_BOOL:: var_is_introduced ;
var bool: aux8574_BOOL:: var_is_introduced ;
var bool: aux8575_BOOL:: var_is_introduced ;
var {0,1}: aux8575_INTEGER :: var_is_introduced ;
var bool: aux8576_BOOL:: var_is_introduced ;
var bool: aux8577_BOOL:: var_is_introduced ;
var 2..59: aux8578:: var_is_introduced ;
var bool: aux8579_BOOL:: var_is_introduced ;
var bool: aux8580_BOOL:: var_is_introduced ;
var bool: aux8581_BOOL:: var_is_introduced ;
var {0,1}: aux8581_INTEGER :: var_is_introduced ;
var bool: aux8582_BOOL:: var_is_introduced ;
var bool: aux8583_BOOL:: var_is_introduced ;
var 3..60: aux8584:: var_is_introduced ;
var bool: aux8585_BOOL:: var_is_introduced ;
var bool: aux8586_BOOL:: var_is_introduced ;
var bool: aux8587_BOOL:: var_is_introduced ;
var {0,1}: aux8587_INTEGER :: var_is_introduced ;
var bool: aux8588_BOOL:: var_is_introduced ;
var bool: aux8589_BOOL:: var_is_introduced ;
var 2..59: aux8590:: var_is_introduced ;
var bool: aux8591_BOOL:: var_is_introduced ;
var bool: aux8592_BOOL:: var_is_introduced ;
var bool: aux8593_BOOL:: var_is_introduced ;
var {0,1}: aux8593_INTEGER :: var_is_introduced ;
var bool: aux8594_BOOL:: var_is_introduced ;
var bool: aux8595_BOOL:: var_is_introduced ;
var 2..59: aux8596:: var_is_introduced ;
var bool: aux8597_BOOL:: var_is_introduced ;
var bool: aux8598_BOOL:: var_is_introduced ;
var bool: aux8599_BOOL:: var_is_introduced ;
var {0,1}: aux8599_INTEGER :: var_is_introduced ;
var bool: aux8600_BOOL:: var_is_introduced ;
var bool: aux8601_BOOL:: var_is_introduced ;
var 2..59: aux8602:: var_is_introduced ;
var bool: aux8603_BOOL:: var_is_introduced ;
var bool: aux8604_BOOL:: var_is_introduced ;
var bool: aux8605_BOOL:: var_is_introduced ;
var {0,1}: aux8605_INTEGER :: var_is_introduced ;
var bool: aux8606_BOOL:: var_is_introduced ;
var bool: aux8607_BOOL:: var_is_introduced ;
var 5..62: aux8608:: var_is_introduced ;
var bool: aux8609_BOOL:: var_is_introduced ;
var bool: aux8610_BOOL:: var_is_introduced ;
var bool: aux8611_BOOL:: var_is_introduced ;
var {0,1}: aux8611_INTEGER :: var_is_introduced ;
var bool: aux8612_BOOL:: var_is_introduced ;
var bool: aux8613_BOOL:: var_is_introduced ;
var 3..60: aux8614:: var_is_introduced ;
var bool: aux8615_BOOL:: var_is_introduced ;
var bool: aux8616_BOOL:: var_is_introduced ;
var bool: aux8617_BOOL:: var_is_introduced ;
var {0,1}: aux8617_INTEGER :: var_is_introduced ;
var bool: aux8618_BOOL:: var_is_introduced ;
var bool: aux8619_BOOL:: var_is_introduced ;
var 4..61: aux8620:: var_is_introduced ;
var bool: aux8621_BOOL:: var_is_introduced ;
var bool: aux8622_BOOL:: var_is_introduced ;
var bool: aux8623_BOOL:: var_is_introduced ;
var {0,1}: aux8623_INTEGER :: var_is_introduced ;
var bool: aux8624_BOOL:: var_is_introduced ;
var bool: aux8625_BOOL:: var_is_introduced ;
var 3..60: aux8626:: var_is_introduced ;
var bool: aux8627_BOOL:: var_is_introduced ;
var bool: aux8628_BOOL:: var_is_introduced ;
var bool: aux8629_BOOL:: var_is_introduced ;
var {0,1}: aux8629_INTEGER :: var_is_introduced ;
var bool: aux8630_BOOL:: var_is_introduced ;
var bool: aux8631_BOOL:: var_is_introduced ;
var 2..59: aux8632:: var_is_introduced ;
var bool: aux8633_BOOL:: var_is_introduced ;
var bool: aux8634_BOOL:: var_is_introduced ;
var bool: aux8635_BOOL:: var_is_introduced ;
var {0,1}: aux8635_INTEGER :: var_is_introduced ;
var bool: aux8636_BOOL:: var_is_introduced ;
var bool: aux8637_BOOL:: var_is_introduced ;
var 1..58: aux8638:: var_is_introduced ;
var bool: aux8639_BOOL:: var_is_introduced ;
var bool: aux8640_BOOL:: var_is_introduced ;
var bool: aux8641_BOOL:: var_is_introduced ;
var {0,1}: aux8641_INTEGER :: var_is_introduced ;
var bool: aux8642_BOOL:: var_is_introduced ;
var bool: aux8643_BOOL:: var_is_introduced ;
var 3..60: aux8644:: var_is_introduced ;
var bool: aux8645_BOOL:: var_is_introduced ;
var bool: aux8646_BOOL:: var_is_introduced ;
var bool: aux8647_BOOL:: var_is_introduced ;
var {0,1}: aux8647_INTEGER :: var_is_introduced ;
var bool: aux8648_BOOL:: var_is_introduced ;
var bool: aux8649_BOOL:: var_is_introduced ;
var 4..61: aux8650:: var_is_introduced ;
var bool: aux8651_BOOL:: var_is_introduced ;
var bool: aux8652_BOOL:: var_is_introduced ;
var bool: aux8653_BOOL:: var_is_introduced ;
var {0,1}: aux8653_INTEGER :: var_is_introduced ;
var bool: aux8654_BOOL:: var_is_introduced ;
var bool: aux8655_BOOL:: var_is_introduced ;
var 1..58: aux8656:: var_is_introduced ;
var bool: aux8657_BOOL:: var_is_introduced ;
var bool: aux8658_BOOL:: var_is_introduced ;
var bool: aux8659_BOOL:: var_is_introduced ;
var {0,1}: aux8659_INTEGER :: var_is_introduced ;
var bool: aux8660_BOOL:: var_is_introduced ;
var bool: aux8661_BOOL:: var_is_introduced ;
var 4..61: aux8662:: var_is_introduced ;
var bool: aux8663_BOOL:: var_is_introduced ;
var bool: aux8664_BOOL:: var_is_introduced ;
var bool: aux8665_BOOL:: var_is_introduced ;
var {0,1}: aux8665_INTEGER :: var_is_introduced ;
var bool: aux8666_BOOL:: var_is_introduced ;
var bool: aux8667_BOOL:: var_is_introduced ;
var 2..59: aux8668:: var_is_introduced ;
var bool: aux8669_BOOL:: var_is_introduced ;
var bool: aux8670_BOOL:: var_is_introduced ;
var bool: aux8671_BOOL:: var_is_introduced ;
var {0,1}: aux8671_INTEGER :: var_is_introduced ;
var bool: aux8672_BOOL:: var_is_introduced ;
var bool: aux8673_BOOL:: var_is_introduced ;
var 2..59: aux8674:: var_is_introduced ;
var bool: aux8675_BOOL:: var_is_introduced ;
var bool: aux8676_BOOL:: var_is_introduced ;
var {0,1}: aux8676_INTEGER :: var_is_introduced ;
var bool: aux8677_BOOL:: var_is_introduced ;
var bool: aux8678_BOOL:: var_is_introduced ;
var 4..61: aux8679:: var_is_introduced ;
var bool: aux8680_BOOL:: var_is_introduced ;
var bool: aux8681_BOOL:: var_is_introduced ;
var bool: aux8682_BOOL:: var_is_introduced ;
var {0,1}: aux8682_INTEGER :: var_is_introduced ;
var bool: aux8683_BOOL:: var_is_introduced ;
var bool: aux8684_BOOL:: var_is_introduced ;
var 4..61: aux8685:: var_is_introduced ;
var bool: aux8686_BOOL:: var_is_introduced ;
var bool: aux8687_BOOL:: var_is_introduced ;
var bool: aux8688_BOOL:: var_is_introduced ;
var {0,1}: aux8688_INTEGER :: var_is_introduced ;
var bool: aux8689_BOOL:: var_is_introduced ;
var bool: aux8690_BOOL:: var_is_introduced ;
var 3..60: aux8691:: var_is_introduced ;
var bool: aux8692_BOOL:: var_is_introduced ;
var bool: aux8693_BOOL:: var_is_introduced ;
var bool: aux8694_BOOL:: var_is_introduced ;
var {0,1}: aux8694_INTEGER :: var_is_introduced ;
var bool: aux8695_BOOL:: var_is_introduced ;
var bool: aux8696_BOOL:: var_is_introduced ;
var 2..59: aux8697:: var_is_introduced ;
var bool: aux8698_BOOL:: var_is_introduced ;
var bool: aux8699_BOOL:: var_is_introduced ;
var bool: aux8700_BOOL:: var_is_introduced ;
var {0,1}: aux8700_INTEGER :: var_is_introduced ;
var bool: aux8701_BOOL:: var_is_introduced ;
var bool: aux8702_BOOL:: var_is_introduced ;
var 3..60: aux8703:: var_is_introduced ;
var bool: aux8704_BOOL:: var_is_introduced ;
var bool: aux8705_BOOL:: var_is_introduced ;
var bool: aux8706_BOOL:: var_is_introduced ;
var {0,1}: aux8706_INTEGER :: var_is_introduced ;
var bool: aux8707_BOOL:: var_is_introduced ;
var bool: aux8708_BOOL:: var_is_introduced ;
var 2..59: aux8709:: var_is_introduced ;
var bool: aux8710_BOOL:: var_is_introduced ;
var bool: aux8711_BOOL:: var_is_introduced ;
var bool: aux8712_BOOL:: var_is_introduced ;
var {0,1}: aux8712_INTEGER :: var_is_introduced ;
var bool: aux8713_BOOL:: var_is_introduced ;
var bool: aux8714_BOOL:: var_is_introduced ;
var 3..60: aux8715:: var_is_introduced ;
var bool: aux8716_BOOL:: var_is_introduced ;
var bool: aux8717_BOOL:: var_is_introduced ;
var bool: aux8718_BOOL:: var_is_introduced ;
var {0,1}: aux8718_INTEGER :: var_is_introduced ;
var bool: aux8719_BOOL:: var_is_introduced ;
var bool: aux8720_BOOL:: var_is_introduced ;
var 2..59: aux8721:: var_is_introduced ;
var bool: aux8722_BOOL:: var_is_introduced ;
var bool: aux8723_BOOL:: var_is_introduced ;
var bool: aux8724_BOOL:: var_is_introduced ;
var {0,1}: aux8724_INTEGER :: var_is_introduced ;
var bool: aux8725_BOOL:: var_is_introduced ;
var bool: aux8726_BOOL:: var_is_introduced ;
var 5..62: aux8727:: var_is_introduced ;
var bool: aux8728_BOOL:: var_is_introduced ;
var bool: aux8729_BOOL:: var_is_introduced ;
var bool: aux8730_BOOL:: var_is_introduced ;
var {0,1}: aux8730_INTEGER :: var_is_introduced ;
var bool: aux8731_BOOL:: var_is_introduced ;
var bool: aux8732_BOOL:: var_is_introduced ;
var 3..60: aux8733:: var_is_introduced ;
var bool: aux8734_BOOL:: var_is_introduced ;
var bool: aux8735_BOOL:: var_is_introduced ;
var bool: aux8736_BOOL:: var_is_introduced ;
var {0,1}: aux8736_INTEGER :: var_is_introduced ;
var bool: aux8737_BOOL:: var_is_introduced ;
var bool: aux8738_BOOL:: var_is_introduced ;
var 4..61: aux8739:: var_is_introduced ;
var bool: aux8740_BOOL:: var_is_introduced ;
var bool: aux8741_BOOL:: var_is_introduced ;
var bool: aux8742_BOOL:: var_is_introduced ;
var {0,1}: aux8742_INTEGER :: var_is_introduced ;
var bool: aux8743_BOOL:: var_is_introduced ;
var bool: aux8744_BOOL:: var_is_introduced ;
var 3..60: aux8745:: var_is_introduced ;
var bool: aux8746_BOOL:: var_is_introduced ;
var bool: aux8747_BOOL:: var_is_introduced ;
var bool: aux8748_BOOL:: var_is_introduced ;
var {0,1}: aux8748_INTEGER :: var_is_introduced ;
var bool: aux8749_BOOL:: var_is_introduced ;
var bool: aux8750_BOOL:: var_is_introduced ;
var 2..59: aux8751:: var_is_introduced ;
var bool: aux8752_BOOL:: var_is_introduced ;
var bool: aux8753_BOOL:: var_is_introduced ;
var bool: aux8754_BOOL:: var_is_introduced ;
var {0,1}: aux8754_INTEGER :: var_is_introduced ;
var bool: aux8755_BOOL:: var_is_introduced ;
var bool: aux8756_BOOL:: var_is_introduced ;
var 1..58: aux8757:: var_is_introduced ;
var bool: aux8758_BOOL:: var_is_introduced ;
var bool: aux8759_BOOL:: var_is_introduced ;
var bool: aux8760_BOOL:: var_is_introduced ;
var {0,1}: aux8760_INTEGER :: var_is_introduced ;
var bool: aux8761_BOOL:: var_is_introduced ;
var bool: aux8762_BOOL:: var_is_introduced ;
var 3..60: aux8763:: var_is_introduced ;
var bool: aux8764_BOOL:: var_is_introduced ;
var bool: aux8765_BOOL:: var_is_introduced ;
var bool: aux8766_BOOL:: var_is_introduced ;
var {0,1}: aux8766_INTEGER :: var_is_introduced ;
var bool: aux8767_BOOL:: var_is_introduced ;
var bool: aux8768_BOOL:: var_is_introduced ;
var 4..61: aux8769:: var_is_introduced ;
var bool: aux8770_BOOL:: var_is_introduced ;
var bool: aux8771_BOOL:: var_is_introduced ;
var bool: aux8772_BOOL:: var_is_introduced ;
var {0,1}: aux8772_INTEGER :: var_is_introduced ;
var bool: aux8773_BOOL:: var_is_introduced ;
var bool: aux8774_BOOL:: var_is_introduced ;
var 1..58: aux8775:: var_is_introduced ;
var bool: aux8776_BOOL:: var_is_introduced ;
var bool: aux8777_BOOL:: var_is_introduced ;
var bool: aux8778_BOOL:: var_is_introduced ;
var {0,1}: aux8778_INTEGER :: var_is_introduced ;
var bool: aux8779_BOOL:: var_is_introduced ;
var bool: aux8780_BOOL:: var_is_introduced ;
var 4..61: aux8781:: var_is_introduced ;
var bool: aux8782_BOOL:: var_is_introduced ;
var bool: aux8783_BOOL:: var_is_introduced ;
var bool: aux8784_BOOL:: var_is_introduced ;
var {0,1}: aux8784_INTEGER :: var_is_introduced ;
var bool: aux8785_BOOL:: var_is_introduced ;
var bool: aux8786_BOOL:: var_is_introduced ;
var 2..59: aux8787:: var_is_introduced ;
var bool: aux8788_BOOL:: var_is_introduced ;
var bool: aux8789_BOOL:: var_is_introduced ;
var bool: aux8790_BOOL:: var_is_introduced ;
var {0,1}: aux8790_INTEGER :: var_is_introduced ;
var bool: aux8791_BOOL:: var_is_introduced ;
var bool: aux8792_BOOL:: var_is_introduced ;
var bool: aux8793_BOOL:: var_is_introduced ;
var 5..62: aux8794:: var_is_introduced ;
var bool: aux8795_BOOL:: var_is_introduced ;
var bool: aux8796_BOOL:: var_is_introduced ;
var bool: aux8797_BOOL:: var_is_introduced ;
var {0,1}: aux8797_INTEGER :: var_is_introduced ;
var bool: aux8798_BOOL:: var_is_introduced ;
var bool: aux8799_BOOL:: var_is_introduced ;
var 3..60: aux8800:: var_is_introduced ;
var bool: aux8801_BOOL:: var_is_introduced ;
var bool: aux8802_BOOL:: var_is_introduced ;
var bool: aux8803_BOOL:: var_is_introduced ;
var {0,1}: aux8803_INTEGER :: var_is_introduced ;
var bool: aux8804_BOOL:: var_is_introduced ;
var bool: aux8805_BOOL:: var_is_introduced ;
var 4..61: aux8806:: var_is_introduced ;
var bool: aux8807_BOOL:: var_is_introduced ;
var bool: aux8808_BOOL:: var_is_introduced ;
var bool: aux8809_BOOL:: var_is_introduced ;
var {0,1}: aux8809_INTEGER :: var_is_introduced ;
var bool: aux8810_BOOL:: var_is_introduced ;
var bool: aux8811_BOOL:: var_is_introduced ;
var 3..60: aux8812:: var_is_introduced ;
var bool: aux8813_BOOL:: var_is_introduced ;
var bool: aux8814_BOOL:: var_is_introduced ;
var bool: aux8815_BOOL:: var_is_introduced ;
var {0,1}: aux8815_INTEGER :: var_is_introduced ;
var bool: aux8816_BOOL:: var_is_introduced ;
var bool: aux8817_BOOL:: var_is_introduced ;
var 2..59: aux8818:: var_is_introduced ;
var bool: aux8819_BOOL:: var_is_introduced ;
var bool: aux8820_BOOL:: var_is_introduced ;
var bool: aux8821_BOOL:: var_is_introduced ;
var {0,1}: aux8821_INTEGER :: var_is_introduced ;
var bool: aux8822_BOOL:: var_is_introduced ;
var bool: aux8823_BOOL:: var_is_introduced ;
var 1..58: aux8824:: var_is_introduced ;
var bool: aux8825_BOOL:: var_is_introduced ;
var bool: aux8826_BOOL:: var_is_introduced ;
var bool: aux8827_BOOL:: var_is_introduced ;
var {0,1}: aux8827_INTEGER :: var_is_introduced ;
var bool: aux8828_BOOL:: var_is_introduced ;
var bool: aux8829_BOOL:: var_is_introduced ;
var 4..61: aux8830:: var_is_introduced ;
var bool: aux8831_BOOL:: var_is_introduced ;
var bool: aux8832_BOOL:: var_is_introduced ;
var bool: aux8833_BOOL:: var_is_introduced ;
var {0,1}: aux8833_INTEGER :: var_is_introduced ;
var bool: aux8834_BOOL:: var_is_introduced ;
var bool: aux8835_BOOL:: var_is_introduced ;
var 1..58: aux8836:: var_is_introduced ;
var bool: aux8837_BOOL:: var_is_introduced ;
var bool: aux8838_BOOL:: var_is_introduced ;
var bool: aux8839_BOOL:: var_is_introduced ;
var {0,1}: aux8839_INTEGER :: var_is_introduced ;
var bool: aux8840_BOOL:: var_is_introduced ;
var bool: aux8841_BOOL:: var_is_introduced ;
var 4..61: aux8842:: var_is_introduced ;
var bool: aux8843_BOOL:: var_is_introduced ;
var bool: aux8844_BOOL:: var_is_introduced ;
var bool: aux8845_BOOL:: var_is_introduced ;
var {0,1}: aux8845_INTEGER :: var_is_introduced ;
var bool: aux8846_BOOL:: var_is_introduced ;
var bool: aux8847_BOOL:: var_is_introduced ;
var 2..59: aux8848:: var_is_introduced ;
var bool: aux8849_BOOL:: var_is_introduced ;
var bool: aux8850_BOOL:: var_is_introduced ;
var bool: aux8851_BOOL:: var_is_introduced ;
var {0,1}: aux8851_INTEGER :: var_is_introduced ;
var bool: aux8852_BOOL:: var_is_introduced ;
var 3..60: aux8853:: var_is_introduced ;
var bool: aux8854_BOOL:: var_is_introduced ;
var bool: aux8855_BOOL:: var_is_introduced ;
var {0,1}: aux8855_INTEGER :: var_is_introduced ;
var bool: aux8856_BOOL:: var_is_introduced ;
var bool: aux8857_BOOL:: var_is_introduced ;
var 4..61: aux8858:: var_is_introduced ;
var bool: aux8859_BOOL:: var_is_introduced ;
var bool: aux8860_BOOL:: var_is_introduced ;
var bool: aux8861_BOOL:: var_is_introduced ;
var {0,1}: aux8861_INTEGER :: var_is_introduced ;
var bool: aux8862_BOOL:: var_is_introduced ;
var bool: aux8863_BOOL:: var_is_introduced ;
var 4..61: aux8864:: var_is_introduced ;
var bool: aux8865_BOOL:: var_is_introduced ;
var bool: aux8866_BOOL:: var_is_introduced ;
var bool: aux8867_BOOL:: var_is_introduced ;
var {0,1}: aux8867_INTEGER :: var_is_introduced ;
var bool: aux8868_BOOL:: var_is_introduced ;
var bool: aux8869_BOOL:: var_is_introduced ;
var 3..60: aux8870:: var_is_introduced ;
var bool: aux8871_BOOL:: var_is_introduced ;
var bool: aux8872_BOOL:: var_is_introduced ;
var bool: aux8873_BOOL:: var_is_introduced ;
var {0,1}: aux8873_INTEGER :: var_is_introduced ;
var bool: aux8874_BOOL:: var_is_introduced ;
var bool: aux8875_BOOL:: var_is_introduced ;
var 2..59: aux8876:: var_is_introduced ;
var bool: aux8877_BOOL:: var_is_introduced ;
var bool: aux8878_BOOL:: var_is_introduced ;
var bool: aux8879_BOOL:: var_is_introduced ;
var {0,1}: aux8879_INTEGER :: var_is_introduced ;
var bool: aux8880_BOOL:: var_is_introduced ;
var bool: aux8881_BOOL:: var_is_introduced ;
var 3..60: aux8882:: var_is_introduced ;
var bool: aux8883_BOOL:: var_is_introduced ;
var bool: aux8884_BOOL:: var_is_introduced ;
var bool: aux8885_BOOL:: var_is_introduced ;
var {0,1}: aux8885_INTEGER :: var_is_introduced ;
var bool: aux8886_BOOL:: var_is_introduced ;
var bool: aux8887_BOOL:: var_is_introduced ;
var 2..59: aux8888:: var_is_introduced ;
var bool: aux8889_BOOL:: var_is_introduced ;
var bool: aux8890_BOOL:: var_is_introduced ;
var bool: aux8891_BOOL:: var_is_introduced ;
var {0,1}: aux8891_INTEGER :: var_is_introduced ;
var bool: aux8892_BOOL:: var_is_introduced ;
var bool: aux8893_BOOL:: var_is_introduced ;
var 3..60: aux8894:: var_is_introduced ;
var bool: aux8895_BOOL:: var_is_introduced ;
var bool: aux8896_BOOL:: var_is_introduced ;
var bool: aux8897_BOOL:: var_is_introduced ;
var {0,1}: aux8897_INTEGER :: var_is_introduced ;
var bool: aux8898_BOOL:: var_is_introduced ;
var bool: aux8899_BOOL:: var_is_introduced ;
var 2..59: aux8900:: var_is_introduced ;
var bool: aux8901_BOOL:: var_is_introduced ;
var bool: aux8902_BOOL:: var_is_introduced ;
var bool: aux8903_BOOL:: var_is_introduced ;
var {0,1}: aux8903_INTEGER :: var_is_introduced ;
var bool: aux8904_BOOL:: var_is_introduced ;
var bool: aux8905_BOOL:: var_is_introduced ;
var 2..59: aux8906:: var_is_introduced ;
var bool: aux8907_BOOL:: var_is_introduced ;
var bool: aux8908_BOOL:: var_is_introduced ;
var bool: aux8909_BOOL:: var_is_introduced ;
var {0,1}: aux8909_INTEGER :: var_is_introduced ;
var bool: aux8910_BOOL:: var_is_introduced ;
var bool: aux8911_BOOL:: var_is_introduced ;
var 2..59: aux8912:: var_is_introduced ;
var bool: aux8913_BOOL:: var_is_introduced ;
var bool: aux8914_BOOL:: var_is_introduced ;
var {0,1}: aux8914_INTEGER :: var_is_introduced ;
var bool: aux8915_BOOL:: var_is_introduced ;
var bool: aux8916_BOOL:: var_is_introduced ;
var 4..61: aux8917:: var_is_introduced ;
var bool: aux8918_BOOL:: var_is_introduced ;
var bool: aux8919_BOOL:: var_is_introduced ;
var bool: aux8920_BOOL:: var_is_introduced ;
var {0,1}: aux8920_INTEGER :: var_is_introduced ;
var bool: aux8921_BOOL:: var_is_introduced ;
var bool: aux8922_BOOL:: var_is_introduced ;
var 4..61: aux8923:: var_is_introduced ;
var bool: aux8924_BOOL:: var_is_introduced ;
var bool: aux8925_BOOL:: var_is_introduced ;
var bool: aux8926_BOOL:: var_is_introduced ;
var {0,1}: aux8926_INTEGER :: var_is_introduced ;
var bool: aux8927_BOOL:: var_is_introduced ;
var bool: aux8928_BOOL:: var_is_introduced ;
var 3..60: aux8929:: var_is_introduced ;
var bool: aux8930_BOOL:: var_is_introduced ;
var bool: aux8931_BOOL:: var_is_introduced ;
var bool: aux8932_BOOL:: var_is_introduced ;
var {0,1}: aux8932_INTEGER :: var_is_introduced ;
var bool: aux8933_BOOL:: var_is_introduced ;
var bool: aux8934_BOOL:: var_is_introduced ;
var 2..59: aux8935:: var_is_introduced ;
var bool: aux8936_BOOL:: var_is_introduced ;
var bool: aux8937_BOOL:: var_is_introduced ;
var bool: aux8938_BOOL:: var_is_introduced ;
var {0,1}: aux8938_INTEGER :: var_is_introduced ;
var bool: aux8939_BOOL:: var_is_introduced ;
var bool: aux8940_BOOL:: var_is_introduced ;
var 3..60: aux8941:: var_is_introduced ;
var bool: aux8942_BOOL:: var_is_introduced ;
var bool: aux8943_BOOL:: var_is_introduced ;
var bool: aux8944_BOOL:: var_is_introduced ;
var {0,1}: aux8944_INTEGER :: var_is_introduced ;
var bool: aux8945_BOOL:: var_is_introduced ;
var bool: aux8946_BOOL:: var_is_introduced ;
var 2..59: aux8947:: var_is_introduced ;
var bool: aux8948_BOOL:: var_is_introduced ;
var bool: aux8949_BOOL:: var_is_introduced ;
var bool: aux8950_BOOL:: var_is_introduced ;
var {0,1}: aux8950_INTEGER :: var_is_introduced ;
var bool: aux8951_BOOL:: var_is_introduced ;
var bool: aux8952_BOOL:: var_is_introduced ;
var 3..60: aux8953:: var_is_introduced ;
var bool: aux8954_BOOL:: var_is_introduced ;
var bool: aux8955_BOOL:: var_is_introduced ;
var bool: aux8956_BOOL:: var_is_introduced ;
var {0,1}: aux8956_INTEGER :: var_is_introduced ;
var bool: aux8957_BOOL:: var_is_introduced ;
var bool: aux8958_BOOL:: var_is_introduced ;
var 2..59: aux8959:: var_is_introduced ;
var bool: aux8960_BOOL:: var_is_introduced ;
var bool: aux8961_BOOL:: var_is_introduced ;
var bool: aux8962_BOOL:: var_is_introduced ;
var {0,1}: aux8962_INTEGER :: var_is_introduced ;
var bool: aux8963_BOOL:: var_is_introduced ;
var bool: aux8964_BOOL:: var_is_introduced ;
var 5..62: aux8965:: var_is_introduced ;
var bool: aux8966_BOOL:: var_is_introduced ;
var bool: aux8967_BOOL:: var_is_introduced ;
var bool: aux8968_BOOL:: var_is_introduced ;
var {0,1}: aux8968_INTEGER :: var_is_introduced ;
var bool: aux8969_BOOL:: var_is_introduced ;
var bool: aux8970_BOOL:: var_is_introduced ;
var 3..60: aux8971:: var_is_introduced ;
var bool: aux8972_BOOL:: var_is_introduced ;
var bool: aux8973_BOOL:: var_is_introduced ;
var bool: aux8974_BOOL:: var_is_introduced ;
var {0,1}: aux8974_INTEGER :: var_is_introduced ;
var bool: aux8975_BOOL:: var_is_introduced ;
var bool: aux8976_BOOL:: var_is_introduced ;
var 4..61: aux8977:: var_is_introduced ;
var bool: aux8978_BOOL:: var_is_introduced ;
var bool: aux8979_BOOL:: var_is_introduced ;
var bool: aux8980_BOOL:: var_is_introduced ;
var {0,1}: aux8980_INTEGER :: var_is_introduced ;
var bool: aux8981_BOOL:: var_is_introduced ;
var bool: aux8982_BOOL:: var_is_introduced ;
var 3..60: aux8983:: var_is_introduced ;
var bool: aux8984_BOOL:: var_is_introduced ;
var bool: aux8985_BOOL:: var_is_introduced ;
var bool: aux8986_BOOL:: var_is_introduced ;
var {0,1}: aux8986_INTEGER :: var_is_introduced ;
var bool: aux8987_BOOL:: var_is_introduced ;
var bool: aux8988_BOOL:: var_is_introduced ;
var 2..59: aux8989:: var_is_introduced ;
var bool: aux8990_BOOL:: var_is_introduced ;
var bool: aux8991_BOOL:: var_is_introduced ;
var bool: aux8992_BOOL:: var_is_introduced ;
var {0,1}: aux8992_INTEGER :: var_is_introduced ;
var bool: aux8993_BOOL:: var_is_introduced ;
var bool: aux8994_BOOL:: var_is_introduced ;
var 1..58: aux8995:: var_is_introduced ;
var bool: aux8996_BOOL:: var_is_introduced ;
var bool: aux8997_BOOL:: var_is_introduced ;
var bool: aux8998_BOOL:: var_is_introduced ;
var {0,1}: aux8998_INTEGER :: var_is_introduced ;
var bool: aux8999_BOOL:: var_is_introduced ;
var bool: aux9000_BOOL:: var_is_introduced ;
var 3..60: aux9001:: var_is_introduced ;
var bool: aux9002_BOOL:: var_is_introduced ;
var bool: aux9003_BOOL:: var_is_introduced ;
var bool: aux9004_BOOL:: var_is_introduced ;
var {0,1}: aux9004_INTEGER :: var_is_introduced ;
var bool: aux9005_BOOL:: var_is_introduced ;
var bool: aux9006_BOOL:: var_is_introduced ;
var 4..61: aux9007:: var_is_introduced ;
var bool: aux9008_BOOL:: var_is_introduced ;
var bool: aux9009_BOOL:: var_is_introduced ;
var bool: aux9010_BOOL:: var_is_introduced ;
var {0,1}: aux9010_INTEGER :: var_is_introduced ;
var bool: aux9011_BOOL:: var_is_introduced ;
var bool: aux9012_BOOL:: var_is_introduced ;
var 1..58: aux9013:: var_is_introduced ;
var bool: aux9014_BOOL:: var_is_introduced ;
var bool: aux9015_BOOL:: var_is_introduced ;
var bool: aux9016_BOOL:: var_is_introduced ;
var {0,1}: aux9016_INTEGER :: var_is_introduced ;
var bool: aux9017_BOOL:: var_is_introduced ;
var bool: aux9018_BOOL:: var_is_introduced ;
var 4..61: aux9019:: var_is_introduced ;
var bool: aux9020_BOOL:: var_is_introduced ;
var bool: aux9021_BOOL:: var_is_introduced ;
var bool: aux9022_BOOL:: var_is_introduced ;
var {0,1}: aux9022_INTEGER :: var_is_introduced ;
var bool: aux9023_BOOL:: var_is_introduced ;
var bool: aux9024_BOOL:: var_is_introduced ;
var 2..59: aux9025:: var_is_introduced ;
var bool: aux9026_BOOL:: var_is_introduced ;
var bool: aux9027_BOOL:: var_is_introduced ;
var bool: aux9028_BOOL:: var_is_introduced ;
var {0,1}: aux9028_INTEGER :: var_is_introduced ;
var bool: aux9029_BOOL:: var_is_introduced ;
var bool: aux9030_BOOL:: var_is_introduced ;
var bool: aux9031_BOOL:: var_is_introduced ;
var 5..62: aux9032:: var_is_introduced ;
var bool: aux9033_BOOL:: var_is_introduced ;
var bool: aux9034_BOOL:: var_is_introduced ;
var bool: aux9035_BOOL:: var_is_introduced ;
var {0,1}: aux9035_INTEGER :: var_is_introduced ;
var bool: aux9036_BOOL:: var_is_introduced ;
var bool: aux9037_BOOL:: var_is_introduced ;
var 3..60: aux9038:: var_is_introduced ;
var bool: aux9039_BOOL:: var_is_introduced ;
var bool: aux9040_BOOL:: var_is_introduced ;
var bool: aux9041_BOOL:: var_is_introduced ;
var {0,1}: aux9041_INTEGER :: var_is_introduced ;
var bool: aux9042_BOOL:: var_is_introduced ;
var bool: aux9043_BOOL:: var_is_introduced ;
var 4..61: aux9044:: var_is_introduced ;
var bool: aux9045_BOOL:: var_is_introduced ;
var bool: aux9046_BOOL:: var_is_introduced ;
var bool: aux9047_BOOL:: var_is_introduced ;
var {0,1}: aux9047_INTEGER :: var_is_introduced ;
var bool: aux9048_BOOL:: var_is_introduced ;
var bool: aux9049_BOOL:: var_is_introduced ;
var 3..60: aux9050:: var_is_introduced ;
var bool: aux9051_BOOL:: var_is_introduced ;
var bool: aux9052_BOOL:: var_is_introduced ;
var bool: aux9053_BOOL:: var_is_introduced ;
var {0,1}: aux9053_INTEGER :: var_is_introduced ;
var bool: aux9054_BOOL:: var_is_introduced ;
var bool: aux9055_BOOL:: var_is_introduced ;
var 2..59: aux9056:: var_is_introduced ;
var bool: aux9057_BOOL:: var_is_introduced ;
var bool: aux9058_BOOL:: var_is_introduced ;
var bool: aux9059_BOOL:: var_is_introduced ;
var {0,1}: aux9059_INTEGER :: var_is_introduced ;
var bool: aux9060_BOOL:: var_is_introduced ;
var bool: aux9061_BOOL:: var_is_introduced ;
var 3..60: aux9062:: var_is_introduced ;
var bool: aux9063_BOOL:: var_is_introduced ;
var bool: aux9064_BOOL:: var_is_introduced ;
var bool: aux9065_BOOL:: var_is_introduced ;
var {0,1}: aux9065_INTEGER :: var_is_introduced ;
var bool: aux9066_BOOL:: var_is_introduced ;
var bool: aux9067_BOOL:: var_is_introduced ;
var 4..61: aux9068:: var_is_introduced ;
var bool: aux9069_BOOL:: var_is_introduced ;
var bool: aux9070_BOOL:: var_is_introduced ;
var bool: aux9071_BOOL:: var_is_introduced ;
var {0,1}: aux9071_INTEGER :: var_is_introduced ;
var bool: aux9072_BOOL:: var_is_introduced ;
var bool: aux9073_BOOL:: var_is_introduced ;
var 1..58: aux9074:: var_is_introduced ;
var bool: aux9075_BOOL:: var_is_introduced ;
var bool: aux9076_BOOL:: var_is_introduced ;
var bool: aux9077_BOOL:: var_is_introduced ;
var {0,1}: aux9077_INTEGER :: var_is_introduced ;
var bool: aux9078_BOOL:: var_is_introduced ;
var bool: aux9079_BOOL:: var_is_introduced ;
var 4..61: aux9080:: var_is_introduced ;
var bool: aux9081_BOOL:: var_is_introduced ;
var bool: aux9082_BOOL:: var_is_introduced ;
var bool: aux9083_BOOL:: var_is_introduced ;
var {0,1}: aux9083_INTEGER :: var_is_introduced ;
var bool: aux9084_BOOL:: var_is_introduced ;
var bool: aux9085_BOOL:: var_is_introduced ;
var 2..59: aux9086:: var_is_introduced ;
var bool: aux9087_BOOL:: var_is_introduced ;
var bool: aux9088_BOOL:: var_is_introduced ;
var bool: aux9089_BOOL:: var_is_introduced ;
var {0,1}: aux9089_INTEGER :: var_is_introduced ;
var bool: aux9090_BOOL:: var_is_introduced ;
var 1..58: aux9091:: var_is_introduced ;
var bool: aux9092_BOOL:: var_is_introduced ;
var bool: aux9093_BOOL:: var_is_introduced ;
var {0,1}: aux9093_INTEGER :: var_is_introduced ;
var bool: aux9094_BOOL:: var_is_introduced ;
var bool: aux9095_BOOL:: var_is_introduced ;
var 4..61: aux9096:: var_is_introduced ;
var bool: aux9097_BOOL:: var_is_introduced ;
var bool: aux9098_BOOL:: var_is_introduced ;
var bool: aux9099_BOOL:: var_is_introduced ;
var {0,1}: aux9099_INTEGER :: var_is_introduced ;
var bool: aux9100_BOOL:: var_is_introduced ;
var bool: aux9101_BOOL:: var_is_introduced ;
var 4..61: aux9102:: var_is_introduced ;
var bool: aux9103_BOOL:: var_is_introduced ;
var bool: aux9104_BOOL:: var_is_introduced ;
var bool: aux9105_BOOL:: var_is_introduced ;
var {0,1}: aux9105_INTEGER :: var_is_introduced ;
var bool: aux9106_BOOL:: var_is_introduced ;
var bool: aux9107_BOOL:: var_is_introduced ;
var 3..60: aux9108:: var_is_introduced ;
var bool: aux9109_BOOL:: var_is_introduced ;
var bool: aux9110_BOOL:: var_is_introduced ;
var bool: aux9111_BOOL:: var_is_introduced ;
var {0,1}: aux9111_INTEGER :: var_is_introduced ;
var bool: aux9112_BOOL:: var_is_introduced ;
var bool: aux9113_BOOL:: var_is_introduced ;
var 2..59: aux9114:: var_is_introduced ;
var bool: aux9115_BOOL:: var_is_introduced ;
var bool: aux9116_BOOL:: var_is_introduced ;
var bool: aux9117_BOOL:: var_is_introduced ;
var {0,1}: aux9117_INTEGER :: var_is_introduced ;
var bool: aux9118_BOOL:: var_is_introduced ;
var bool: aux9119_BOOL:: var_is_introduced ;
var 3..60: aux9120:: var_is_introduced ;
var bool: aux9121_BOOL:: var_is_introduced ;
var bool: aux9122_BOOL:: var_is_introduced ;
var bool: aux9123_BOOL:: var_is_introduced ;
var {0,1}: aux9123_INTEGER :: var_is_introduced ;
var bool: aux9124_BOOL:: var_is_introduced ;
var bool: aux9125_BOOL:: var_is_introduced ;
var 2..59: aux9126:: var_is_introduced ;
var bool: aux9127_BOOL:: var_is_introduced ;
var bool: aux9128_BOOL:: var_is_introduced ;
var bool: aux9129_BOOL:: var_is_introduced ;
var {0,1}: aux9129_INTEGER :: var_is_introduced ;
var bool: aux9130_BOOL:: var_is_introduced ;
var bool: aux9131_BOOL:: var_is_introduced ;
var 3..60: aux9132:: var_is_introduced ;
var bool: aux9133_BOOL:: var_is_introduced ;
var bool: aux9134_BOOL:: var_is_introduced ;
var bool: aux9135_BOOL:: var_is_introduced ;
var {0,1}: aux9135_INTEGER :: var_is_introduced ;
var bool: aux9136_BOOL:: var_is_introduced ;
var bool: aux9137_BOOL:: var_is_introduced ;
var 2..59: aux9138:: var_is_introduced ;
var bool: aux9139_BOOL:: var_is_introduced ;
var bool: aux9140_BOOL:: var_is_introduced ;
var bool: aux9141_BOOL:: var_is_introduced ;
var {0,1}: aux9141_INTEGER :: var_is_introduced ;
var bool: aux9142_BOOL:: var_is_introduced ;
var bool: aux9143_BOOL:: var_is_introduced ;
var 2..59: aux9144:: var_is_introduced ;
var bool: aux9145_BOOL:: var_is_introduced ;
var bool: aux9146_BOOL:: var_is_introduced ;
var bool: aux9147_BOOL:: var_is_introduced ;
var {0,1}: aux9147_INTEGER :: var_is_introduced ;
var bool: aux9148_BOOL:: var_is_introduced ;
var bool: aux9149_BOOL:: var_is_introduced ;
var bool: aux9150_BOOL:: var_is_introduced ;
var 5..62: aux9151:: var_is_introduced ;
var bool: aux9152_BOOL:: var_is_introduced ;
var bool: aux9153_BOOL:: var_is_introduced ;
var bool: aux9154_BOOL:: var_is_introduced ;
var {0,1}: aux9154_INTEGER :: var_is_introduced ;
var bool: aux9155_BOOL:: var_is_introduced ;
var bool: aux9156_BOOL:: var_is_introduced ;
var 3..60: aux9157:: var_is_introduced ;
var bool: aux9158_BOOL:: var_is_introduced ;
var bool: aux9159_BOOL:: var_is_introduced ;
var bool: aux9160_BOOL:: var_is_introduced ;
var {0,1}: aux9160_INTEGER :: var_is_introduced ;
var bool: aux9161_BOOL:: var_is_introduced ;
var bool: aux9162_BOOL:: var_is_introduced ;
var 4..61: aux9163:: var_is_introduced ;
var bool: aux9164_BOOL:: var_is_introduced ;
var bool: aux9165_BOOL:: var_is_introduced ;
var bool: aux9166_BOOL:: var_is_introduced ;
var {0,1}: aux9166_INTEGER :: var_is_introduced ;
var bool: aux9167_BOOL:: var_is_introduced ;
var bool: aux9168_BOOL:: var_is_introduced ;
var 3..60: aux9169:: var_is_introduced ;
var bool: aux9170_BOOL:: var_is_introduced ;
var bool: aux9171_BOOL:: var_is_introduced ;
var bool: aux9172_BOOL:: var_is_introduced ;
var {0,1}: aux9172_INTEGER :: var_is_introduced ;
var bool: aux9173_BOOL:: var_is_introduced ;
var bool: aux9174_BOOL:: var_is_introduced ;
var 2..59: aux9175:: var_is_introduced ;
var bool: aux9176_BOOL:: var_is_introduced ;
var bool: aux9177_BOOL:: var_is_introduced ;
var bool: aux9178_BOOL:: var_is_introduced ;
var {0,1}: aux9178_INTEGER :: var_is_introduced ;
var bool: aux9179_BOOL:: var_is_introduced ;
var bool: aux9180_BOOL:: var_is_introduced ;
var 1..58: aux9181:: var_is_introduced ;
var bool: aux9182_BOOL:: var_is_introduced ;
var bool: aux9183_BOOL:: var_is_introduced ;
var bool: aux9184_BOOL:: var_is_introduced ;
var {0,1}: aux9184_INTEGER :: var_is_introduced ;
var bool: aux9185_BOOL:: var_is_introduced ;
var bool: aux9186_BOOL:: var_is_introduced ;
var 3..60: aux9187:: var_is_introduced ;
var bool: aux9188_BOOL:: var_is_introduced ;
var bool: aux9189_BOOL:: var_is_introduced ;
var bool: aux9190_BOOL:: var_is_introduced ;
var {0,1}: aux9190_INTEGER :: var_is_introduced ;
var bool: aux9191_BOOL:: var_is_introduced ;
var bool: aux9192_BOOL:: var_is_introduced ;
var 4..61: aux9193:: var_is_introduced ;
var bool: aux9194_BOOL:: var_is_introduced ;
var bool: aux9195_BOOL:: var_is_introduced ;
var bool: aux9196_BOOL:: var_is_introduced ;
var {0,1}: aux9196_INTEGER :: var_is_introduced ;
var bool: aux9197_BOOL:: var_is_introduced ;
var bool: aux9198_BOOL:: var_is_introduced ;
var 1..58: aux9199:: var_is_introduced ;
var bool: aux9200_BOOL:: var_is_introduced ;
var bool: aux9201_BOOL:: var_is_introduced ;
var bool: aux9202_BOOL:: var_is_introduced ;
var {0,1}: aux9202_INTEGER :: var_is_introduced ;
var bool: aux9203_BOOL:: var_is_introduced ;
var bool: aux9204_BOOL:: var_is_introduced ;
var 2..59: aux9205:: var_is_introduced ;
var bool: aux9206_BOOL:: var_is_introduced ;
var bool: aux9207_BOOL:: var_is_introduced ;
var bool: aux9208_BOOL:: var_is_introduced ;
var {0,1}: aux9208_INTEGER :: var_is_introduced ;
var bool: aux9209_BOOL:: var_is_introduced ;
var 4..61: aux9210:: var_is_introduced ;
var bool: aux9211_BOOL:: var_is_introduced ;
var bool: aux9212_BOOL:: var_is_introduced ;
var {0,1}: aux9212_INTEGER :: var_is_introduced ;
var bool: aux9213_BOOL:: var_is_introduced ;
var bool: aux9214_BOOL:: var_is_introduced ;
var 4..61: aux9215:: var_is_introduced ;
var bool: aux9216_BOOL:: var_is_introduced ;
var bool: aux9217_BOOL:: var_is_introduced ;
var bool: aux9218_BOOL:: var_is_introduced ;
var {0,1}: aux9218_INTEGER :: var_is_introduced ;
var bool: aux9219_BOOL:: var_is_introduced ;
var bool: aux9220_BOOL:: var_is_introduced ;
var 4..61: aux9221:: var_is_introduced ;
var bool: aux9222_BOOL:: var_is_introduced ;
var bool: aux9223_BOOL:: var_is_introduced ;
var bool: aux9224_BOOL:: var_is_introduced ;
var {0,1}: aux9224_INTEGER :: var_is_introduced ;
var bool: aux9225_BOOL:: var_is_introduced ;
var bool: aux9226_BOOL:: var_is_introduced ;
var 3..60: aux9227:: var_is_introduced ;
var bool: aux9228_BOOL:: var_is_introduced ;
var bool: aux9229_BOOL:: var_is_introduced ;
var bool: aux9230_BOOL:: var_is_introduced ;
var {0,1}: aux9230_INTEGER :: var_is_introduced ;
var bool: aux9231_BOOL:: var_is_introduced ;
var bool: aux9232_BOOL:: var_is_introduced ;
var 2..59: aux9233:: var_is_introduced ;
var bool: aux9234_BOOL:: var_is_introduced ;
var bool: aux9235_BOOL:: var_is_introduced ;
var bool: aux9236_BOOL:: var_is_introduced ;
var {0,1}: aux9236_INTEGER :: var_is_introduced ;
var bool: aux9237_BOOL:: var_is_introduced ;
var bool: aux9238_BOOL:: var_is_introduced ;
var 3..60: aux9239:: var_is_introduced ;
var bool: aux9240_BOOL:: var_is_introduced ;
var bool: aux9241_BOOL:: var_is_introduced ;
var bool: aux9242_BOOL:: var_is_introduced ;
var {0,1}: aux9242_INTEGER :: var_is_introduced ;
var bool: aux9243_BOOL:: var_is_introduced ;
var bool: aux9244_BOOL:: var_is_introduced ;
var 2..59: aux9245:: var_is_introduced ;
var bool: aux9246_BOOL:: var_is_introduced ;
var bool: aux9247_BOOL:: var_is_introduced ;
var bool: aux9248_BOOL:: var_is_introduced ;
var {0,1}: aux9248_INTEGER :: var_is_introduced ;
var bool: aux9249_BOOL:: var_is_introduced ;
var bool: aux9250_BOOL:: var_is_introduced ;
var 3..60: aux9251:: var_is_introduced ;
var bool: aux9252_BOOL:: var_is_introduced ;
var bool: aux9253_BOOL:: var_is_introduced ;
var bool: aux9254_BOOL:: var_is_introduced ;
var {0,1}: aux9254_INTEGER :: var_is_introduced ;
var bool: aux9255_BOOL:: var_is_introduced ;
var bool: aux9256_BOOL:: var_is_introduced ;
var 2..59: aux9257:: var_is_introduced ;
var bool: aux9258_BOOL:: var_is_introduced ;
var bool: aux9259_BOOL:: var_is_introduced ;
var bool: aux9260_BOOL:: var_is_introduced ;
var {0,1}: aux9260_INTEGER :: var_is_introduced ;
var bool: aux9261_BOOL:: var_is_introduced ;
var bool: aux9262_BOOL:: var_is_introduced ;
var 2..59: aux9263:: var_is_introduced ;
var bool: aux9264_BOOL:: var_is_introduced ;
var bool: aux9265_BOOL:: var_is_introduced ;
var bool: aux9266_BOOL:: var_is_introduced ;
var {0,1}: aux9266_INTEGER :: var_is_introduced ;
var bool: aux9267_BOOL:: var_is_introduced ;
var bool: aux9268_BOOL:: var_is_introduced ;
var 3..60: aux9269:: var_is_introduced ;
var bool: aux9270_BOOL:: var_is_introduced ;
var bool: aux9271_BOOL:: var_is_introduced ;
var {0,1}: aux9271_INTEGER :: var_is_introduced ;
var bool: aux9272_BOOL:: var_is_introduced ;
var bool: aux9273_BOOL:: var_is_introduced ;
var 4..61: aux9274:: var_is_introduced ;
var bool: aux9275_BOOL:: var_is_introduced ;
var bool: aux9276_BOOL:: var_is_introduced ;
var bool: aux9277_BOOL:: var_is_introduced ;
var {0,1}: aux9277_INTEGER :: var_is_introduced ;
var bool: aux9278_BOOL:: var_is_introduced ;
var bool: aux9279_BOOL:: var_is_introduced ;
var 4..61: aux9280:: var_is_introduced ;
var bool: aux9281_BOOL:: var_is_introduced ;
var bool: aux9282_BOOL:: var_is_introduced ;
var bool: aux9283_BOOL:: var_is_introduced ;
var {0,1}: aux9283_INTEGER :: var_is_introduced ;
var bool: aux9284_BOOL:: var_is_introduced ;
var bool: aux9285_BOOL:: var_is_introduced ;
var 3..60: aux9286:: var_is_introduced ;
var bool: aux9287_BOOL:: var_is_introduced ;
var bool: aux9288_BOOL:: var_is_introduced ;
var bool: aux9289_BOOL:: var_is_introduced ;
var {0,1}: aux9289_INTEGER :: var_is_introduced ;
var bool: aux9290_BOOL:: var_is_introduced ;
var bool: aux9291_BOOL:: var_is_introduced ;
var 2..59: aux9292:: var_is_introduced ;
var bool: aux9293_BOOL:: var_is_introduced ;
var bool: aux9294_BOOL:: var_is_introduced ;
var bool: aux9295_BOOL:: var_is_introduced ;
var {0,1}: aux9295_INTEGER :: var_is_introduced ;
var bool: aux9296_BOOL:: var_is_introduced ;
var bool: aux9297_BOOL:: var_is_introduced ;
var 2..59: aux9298:: var_is_introduced ;
var bool: aux9299_BOOL:: var_is_introduced ;
var bool: aux9300_BOOL:: var_is_introduced ;
var bool: aux9301_BOOL:: var_is_introduced ;
var {0,1}: aux9301_INTEGER :: var_is_introduced ;
var bool: aux9302_BOOL:: var_is_introduced ;
var bool: aux9303_BOOL:: var_is_introduced ;
var 3..60: aux9304:: var_is_introduced ;
var bool: aux9305_BOOL:: var_is_introduced ;
var bool: aux9306_BOOL:: var_is_introduced ;
var bool: aux9307_BOOL:: var_is_introduced ;
var {0,1}: aux9307_INTEGER :: var_is_introduced ;
var bool: aux9308_BOOL:: var_is_introduced ;
var bool: aux9309_BOOL:: var_is_introduced ;
var 2..59: aux9310:: var_is_introduced ;
var bool: aux9311_BOOL:: var_is_introduced ;
var bool: aux9312_BOOL:: var_is_introduced ;
var bool: aux9313_BOOL:: var_is_introduced ;
var {0,1}: aux9313_INTEGER :: var_is_introduced ;
var bool: aux9314_BOOL:: var_is_introduced ;
var bool: aux9315_BOOL:: var_is_introduced ;
var 2..59: aux9316:: var_is_introduced ;
var bool: aux9317_BOOL:: var_is_introduced ;
var bool: aux9318_BOOL:: var_is_introduced ;
var bool: aux9319_BOOL:: var_is_introduced ;
var {0,1}: aux9319_INTEGER :: var_is_introduced ;
var bool: aux9320_BOOL:: var_is_introduced ;
var bool: aux9321_BOOL:: var_is_introduced ;
var 5..62: aux9322:: var_is_introduced ;
var bool: aux9323_BOOL:: var_is_introduced ;
var bool: aux9324_BOOL:: var_is_introduced ;
var bool: aux9325_BOOL:: var_is_introduced ;
var {0,1}: aux9325_INTEGER :: var_is_introduced ;
var bool: aux9326_BOOL:: var_is_introduced ;
var bool: aux9327_BOOL:: var_is_introduced ;
var 3..60: aux9328:: var_is_introduced ;
var bool: aux9329_BOOL:: var_is_introduced ;
var bool: aux9330_BOOL:: var_is_introduced ;
var bool: aux9331_BOOL:: var_is_introduced ;
var {0,1}: aux9331_INTEGER :: var_is_introduced ;
var bool: aux9332_BOOL:: var_is_introduced ;
var bool: aux9333_BOOL:: var_is_introduced ;
var 4..61: aux9334:: var_is_introduced ;
var bool: aux9335_BOOL:: var_is_introduced ;
var bool: aux9336_BOOL:: var_is_introduced ;
var bool: aux9337_BOOL:: var_is_introduced ;
var {0,1}: aux9337_INTEGER :: var_is_introduced ;
var bool: aux9338_BOOL:: var_is_introduced ;
var bool: aux9339_BOOL:: var_is_introduced ;
var 3..60: aux9340:: var_is_introduced ;
var bool: aux9341_BOOL:: var_is_introduced ;
var bool: aux9342_BOOL:: var_is_introduced ;
var bool: aux9343_BOOL:: var_is_introduced ;
var {0,1}: aux9343_INTEGER :: var_is_introduced ;
var bool: aux9344_BOOL:: var_is_introduced ;
var bool: aux9345_BOOL:: var_is_introduced ;
var 2..59: aux9346:: var_is_introduced ;
var bool: aux9347_BOOL:: var_is_introduced ;
var bool: aux9348_BOOL:: var_is_introduced ;
var bool: aux9349_BOOL:: var_is_introduced ;
var {0,1}: aux9349_INTEGER :: var_is_introduced ;
var bool: aux9350_BOOL:: var_is_introduced ;
var bool: aux9351_BOOL:: var_is_introduced ;
var 1..58: aux9352:: var_is_introduced ;
var bool: aux9353_BOOL:: var_is_introduced ;
var bool: aux9354_BOOL:: var_is_introduced ;
var bool: aux9355_BOOL:: var_is_introduced ;
var {0,1}: aux9355_INTEGER :: var_is_introduced ;
var bool: aux9356_BOOL:: var_is_introduced ;
var bool: aux9357_BOOL:: var_is_introduced ;
var 3..60: aux9358:: var_is_introduced ;
var bool: aux9359_BOOL:: var_is_introduced ;
var bool: aux9360_BOOL:: var_is_introduced ;
var bool: aux9361_BOOL:: var_is_introduced ;
var {0,1}: aux9361_INTEGER :: var_is_introduced ;
var bool: aux9362_BOOL:: var_is_introduced ;
var bool: aux9363_BOOL:: var_is_introduced ;
var 4..61: aux9364:: var_is_introduced ;
var bool: aux9365_BOOL:: var_is_introduced ;
var bool: aux9366_BOOL:: var_is_introduced ;
var bool: aux9367_BOOL:: var_is_introduced ;
var {0,1}: aux9367_INTEGER :: var_is_introduced ;
var bool: aux9368_BOOL:: var_is_introduced ;
var bool: aux9369_BOOL:: var_is_introduced ;
var 1..58: aux9370:: var_is_introduced ;
var bool: aux9371_BOOL:: var_is_introduced ;
var bool: aux9372_BOOL:: var_is_introduced ;
var bool: aux9373_BOOL:: var_is_introduced ;
var {0,1}: aux9373_INTEGER :: var_is_introduced ;
var bool: aux9374_BOOL:: var_is_introduced ;
var bool: aux9375_BOOL:: var_is_introduced ;
var 4..61: aux9376:: var_is_introduced ;
var bool: aux9377_BOOL:: var_is_introduced ;
var bool: aux9378_BOOL:: var_is_introduced ;
var bool: aux9379_BOOL:: var_is_introduced ;
var {0,1}: aux9379_INTEGER :: var_is_introduced ;
var bool: aux9380_BOOL:: var_is_introduced ;
var bool: aux9381_BOOL:: var_is_introduced ;
var 2..59: aux9382:: var_is_introduced ;
var bool: aux9383_BOOL:: var_is_introduced ;
var bool: aux9384_BOOL:: var_is_introduced ;
var bool: aux9385_BOOL:: var_is_introduced ;
var {0,1}: aux9385_INTEGER :: var_is_introduced ;
var bool: aux9386_BOOL:: var_is_introduced ;
var bool: aux9387_BOOL:: var_is_introduced ;
var 3..60: aux9388:: var_is_introduced ;
var bool: aux9389_BOOL:: var_is_introduced ;
var bool: aux9390_BOOL:: var_is_introduced ;
var {0,1}: aux9390_INTEGER :: var_is_introduced ;
var bool: aux9391_BOOL:: var_is_introduced ;
var bool: aux9392_BOOL:: var_is_introduced ;
var 4..61: aux9393:: var_is_introduced ;
var bool: aux9394_BOOL:: var_is_introduced ;
var bool: aux9395_BOOL:: var_is_introduced ;
var bool: aux9396_BOOL:: var_is_introduced ;
var {0,1}: aux9396_INTEGER :: var_is_introduced ;
var bool: aux9397_BOOL:: var_is_introduced ;
var bool: aux9398_BOOL:: var_is_introduced ;
var 4..61: aux9399:: var_is_introduced ;
var bool: aux9400_BOOL:: var_is_introduced ;
var bool: aux9401_BOOL:: var_is_introduced ;
var bool: aux9402_BOOL:: var_is_introduced ;
var {0,1}: aux9402_INTEGER :: var_is_introduced ;
var bool: aux9403_BOOL:: var_is_introduced ;
var bool: aux9404_BOOL:: var_is_introduced ;
var 2..59: aux9405:: var_is_introduced ;
var bool: aux9406_BOOL:: var_is_introduced ;
var bool: aux9407_BOOL:: var_is_introduced ;
var bool: aux9408_BOOL:: var_is_introduced ;
var {0,1}: aux9408_INTEGER :: var_is_introduced ;
var bool: aux9409_BOOL:: var_is_introduced ;
var bool: aux9410_BOOL:: var_is_introduced ;
var 3..60: aux9411:: var_is_introduced ;
var bool: aux9412_BOOL:: var_is_introduced ;
var bool: aux9413_BOOL:: var_is_introduced ;
var bool: aux9414_BOOL:: var_is_introduced ;
var {0,1}: aux9414_INTEGER :: var_is_introduced ;
var bool: aux9415_BOOL:: var_is_introduced ;
var bool: aux9416_BOOL:: var_is_introduced ;
var 2..59: aux9417:: var_is_introduced ;
var bool: aux9418_BOOL:: var_is_introduced ;
var bool: aux9419_BOOL:: var_is_introduced ;
var bool: aux9420_BOOL:: var_is_introduced ;
var {0,1}: aux9420_INTEGER :: var_is_introduced ;
var bool: aux9421_BOOL:: var_is_introduced ;
var bool: aux9422_BOOL:: var_is_introduced ;
var 3..60: aux9423:: var_is_introduced ;
var bool: aux9424_BOOL:: var_is_introduced ;
var bool: aux9425_BOOL:: var_is_introduced ;
var bool: aux9426_BOOL:: var_is_introduced ;
var {0,1}: aux9426_INTEGER :: var_is_introduced ;
var bool: aux9427_BOOL:: var_is_introduced ;
var bool: aux9428_BOOL:: var_is_introduced ;
var 2..59: aux9429:: var_is_introduced ;
var bool: aux9430_BOOL:: var_is_introduced ;
var bool: aux9431_BOOL:: var_is_introduced ;
var bool: aux9432_BOOL:: var_is_introduced ;
var {0,1}: aux9432_INTEGER :: var_is_introduced ;
var bool: aux9433_BOOL:: var_is_introduced ;
var bool: aux9434_BOOL:: var_is_introduced ;
var 2..59: aux9435:: var_is_introduced ;
var bool: aux9436_BOOL:: var_is_introduced ;
var bool: aux9437_BOOL:: var_is_introduced ;
var bool: aux9438_BOOL:: var_is_introduced ;
var {0,1}: aux9438_INTEGER :: var_is_introduced ;
var bool: aux9439_BOOL:: var_is_introduced ;
var bool: aux9440_BOOL:: var_is_introduced ;
var 5..62: aux9441:: var_is_introduced ;
var bool: aux9442_BOOL:: var_is_introduced ;
var bool: aux9443_BOOL:: var_is_introduced ;
var bool: aux9444_BOOL:: var_is_introduced ;
var {0,1}: aux9444_INTEGER :: var_is_introduced ;
var bool: aux9445_BOOL:: var_is_introduced ;
var bool: aux9446_BOOL:: var_is_introduced ;
var 3..60: aux9447:: var_is_introduced ;
var bool: aux9448_BOOL:: var_is_introduced ;
var bool: aux9449_BOOL:: var_is_introduced ;
var bool: aux9450_BOOL:: var_is_introduced ;
var {0,1}: aux9450_INTEGER :: var_is_introduced ;
var bool: aux9451_BOOL:: var_is_introduced ;
var bool: aux9452_BOOL:: var_is_introduced ;
var 4..61: aux9453:: var_is_introduced ;
var bool: aux9454_BOOL:: var_is_introduced ;
var bool: aux9455_BOOL:: var_is_introduced ;
var bool: aux9456_BOOL:: var_is_introduced ;
var {0,1}: aux9456_INTEGER :: var_is_introduced ;
var bool: aux9457_BOOL:: var_is_introduced ;
var bool: aux9458_BOOL:: var_is_introduced ;
var 3..60: aux9459:: var_is_introduced ;
var bool: aux9460_BOOL:: var_is_introduced ;
var bool: aux9461_BOOL:: var_is_introduced ;
var bool: aux9462_BOOL:: var_is_introduced ;
var {0,1}: aux9462_INTEGER :: var_is_introduced ;
var bool: aux9463_BOOL:: var_is_introduced ;
var bool: aux9464_BOOL:: var_is_introduced ;
var 2..59: aux9465:: var_is_introduced ;
var bool: aux9466_BOOL:: var_is_introduced ;
var bool: aux9467_BOOL:: var_is_introduced ;
var bool: aux9468_BOOL:: var_is_introduced ;
var {0,1}: aux9468_INTEGER :: var_is_introduced ;
var bool: aux9469_BOOL:: var_is_introduced ;
var bool: aux9470_BOOL:: var_is_introduced ;
var 1..58: aux9471:: var_is_introduced ;
var bool: aux9472_BOOL:: var_is_introduced ;
var bool: aux9473_BOOL:: var_is_introduced ;
var bool: aux9474_BOOL:: var_is_introduced ;
var {0,1}: aux9474_INTEGER :: var_is_introduced ;
var bool: aux9475_BOOL:: var_is_introduced ;
var bool: aux9476_BOOL:: var_is_introduced ;
var 3..60: aux9477:: var_is_introduced ;
var bool: aux9478_BOOL:: var_is_introduced ;
var bool: aux9479_BOOL:: var_is_introduced ;
var bool: aux9480_BOOL:: var_is_introduced ;
var {0,1}: aux9480_INTEGER :: var_is_introduced ;
var bool: aux9481_BOOL:: var_is_introduced ;
var bool: aux9482_BOOL:: var_is_introduced ;
var 4..61: aux9483:: var_is_introduced ;
var bool: aux9484_BOOL:: var_is_introduced ;
var bool: aux9485_BOOL:: var_is_introduced ;
var bool: aux9486_BOOL:: var_is_introduced ;
var {0,1}: aux9486_INTEGER :: var_is_introduced ;
var bool: aux9487_BOOL:: var_is_introduced ;
var bool: aux9488_BOOL:: var_is_introduced ;
var 1..58: aux9489:: var_is_introduced ;
var bool: aux9490_BOOL:: var_is_introduced ;
var bool: aux9491_BOOL:: var_is_introduced ;
var bool: aux9492_BOOL:: var_is_introduced ;
var {0,1}: aux9492_INTEGER :: var_is_introduced ;
var bool: aux9493_BOOL:: var_is_introduced ;
var bool: aux9494_BOOL:: var_is_introduced ;
var 4..61: aux9495:: var_is_introduced ;
var bool: aux9496_BOOL:: var_is_introduced ;
var bool: aux9497_BOOL:: var_is_introduced ;
var bool: aux9498_BOOL:: var_is_introduced ;
var {0,1}: aux9498_INTEGER :: var_is_introduced ;
var bool: aux9499_BOOL:: var_is_introduced ;
var bool: aux9500_BOOL:: var_is_introduced ;
var 2..59: aux9501:: var_is_introduced ;
var bool: aux9502_BOOL:: var_is_introduced ;
var bool: aux9503_BOOL:: var_is_introduced ;
var bool: aux9504_BOOL:: var_is_introduced ;
var {0,1}: aux9504_INTEGER :: var_is_introduced ;
var bool: aux9505_BOOL:: var_is_introduced ;
var bool: aux9506_BOOL:: var_is_introduced ;
var 2..59: aux9507:: var_is_introduced ;
var bool: aux9508_BOOL:: var_is_introduced ;
var bool: aux9509_BOOL:: var_is_introduced ;
var {0,1}: aux9509_INTEGER :: var_is_introduced ;
var bool: aux9510_BOOL:: var_is_introduced ;
var bool: aux9511_BOOL:: var_is_introduced ;
var 4..61: aux9512:: var_is_introduced ;
var bool: aux9513_BOOL:: var_is_introduced ;
var bool: aux9514_BOOL:: var_is_introduced ;
var bool: aux9515_BOOL:: var_is_introduced ;
var {0,1}: aux9515_INTEGER :: var_is_introduced ;
var bool: aux9516_BOOL:: var_is_introduced ;
var bool: aux9517_BOOL:: var_is_introduced ;
var 4..61: aux9518:: var_is_introduced ;
var bool: aux9519_BOOL:: var_is_introduced ;
var bool: aux9520_BOOL:: var_is_introduced ;
var bool: aux9521_BOOL:: var_is_introduced ;
var {0,1}: aux9521_INTEGER :: var_is_introduced ;
var bool: aux9522_BOOL:: var_is_introduced ;
var bool: aux9523_BOOL:: var_is_introduced ;
var 3..60: aux9524:: var_is_introduced ;
var bool: aux9525_BOOL:: var_is_introduced ;
var bool: aux9526_BOOL:: var_is_introduced ;
var bool: aux9527_BOOL:: var_is_introduced ;
var {0,1}: aux9527_INTEGER :: var_is_introduced ;
var bool: aux9528_BOOL:: var_is_introduced ;
var bool: aux9529_BOOL:: var_is_introduced ;
var 2..59: aux9530:: var_is_introduced ;
var bool: aux9531_BOOL:: var_is_introduced ;
var bool: aux9532_BOOL:: var_is_introduced ;
var bool: aux9533_BOOL:: var_is_introduced ;
var {0,1}: aux9533_INTEGER :: var_is_introduced ;
var bool: aux9534_BOOL:: var_is_introduced ;
var bool: aux9535_BOOL:: var_is_introduced ;
var 3..60: aux9536:: var_is_introduced ;
var bool: aux9537_BOOL:: var_is_introduced ;
var bool: aux9538_BOOL:: var_is_introduced ;
var bool: aux9539_BOOL:: var_is_introduced ;
var {0,1}: aux9539_INTEGER :: var_is_introduced ;
var bool: aux9540_BOOL:: var_is_introduced ;
var bool: aux9541_BOOL:: var_is_introduced ;
var 3..60: aux9542:: var_is_introduced ;
var bool: aux9543_BOOL:: var_is_introduced ;
var bool: aux9544_BOOL:: var_is_introduced ;
var bool: aux9545_BOOL:: var_is_introduced ;
var {0,1}: aux9545_INTEGER :: var_is_introduced ;
var bool: aux9546_BOOL:: var_is_introduced ;
var bool: aux9547_BOOL:: var_is_introduced ;
var 2..59: aux9548:: var_is_introduced ;
var bool: aux9549_BOOL:: var_is_introduced ;
var bool: aux9550_BOOL:: var_is_introduced ;
var bool: aux9551_BOOL:: var_is_introduced ;
var {0,1}: aux9551_INTEGER :: var_is_introduced ;
var bool: aux9552_BOOL:: var_is_introduced ;
var bool: aux9553_BOOL:: var_is_introduced ;
var 2..59: aux9554:: var_is_introduced ;
var bool: aux9555_BOOL:: var_is_introduced ;
var bool: aux9556_BOOL:: var_is_introduced ;
var bool: aux9557_BOOL:: var_is_introduced ;
var {0,1}: aux9557_INTEGER :: var_is_introduced ;
var bool: aux9558_BOOL:: var_is_introduced ;
var bool: aux9559_BOOL:: var_is_introduced ;
var 5..62: aux9560:: var_is_introduced ;
var bool: aux9561_BOOL:: var_is_introduced ;
var bool: aux9562_BOOL:: var_is_introduced ;
var bool: aux9563_BOOL:: var_is_introduced ;
var {0,1}: aux9563_INTEGER :: var_is_introduced ;
var bool: aux9564_BOOL:: var_is_introduced ;
var bool: aux9565_BOOL:: var_is_introduced ;
var 3..60: aux9566:: var_is_introduced ;
var bool: aux9567_BOOL:: var_is_introduced ;
var bool: aux9568_BOOL:: var_is_introduced ;
var bool: aux9569_BOOL:: var_is_introduced ;
var {0,1}: aux9569_INTEGER :: var_is_introduced ;
var bool: aux9570_BOOL:: var_is_introduced ;
var bool: aux9571_BOOL:: var_is_introduced ;
var 4..61: aux9572:: var_is_introduced ;
var bool: aux9573_BOOL:: var_is_introduced ;
var bool: aux9574_BOOL:: var_is_introduced ;
var bool: aux9575_BOOL:: var_is_introduced ;
var {0,1}: aux9575_INTEGER :: var_is_introduced ;
var bool: aux9576_BOOL:: var_is_introduced ;
var bool: aux9577_BOOL:: var_is_introduced ;
var 3..60: aux9578:: var_is_introduced ;
var bool: aux9579_BOOL:: var_is_introduced ;
var bool: aux9580_BOOL:: var_is_introduced ;
var bool: aux9581_BOOL:: var_is_introduced ;
var {0,1}: aux9581_INTEGER :: var_is_introduced ;
var bool: aux9582_BOOL:: var_is_introduced ;
var bool: aux9583_BOOL:: var_is_introduced ;
var 2..59: aux9584:: var_is_introduced ;
var bool: aux9585_BOOL:: var_is_introduced ;
var bool: aux9586_BOOL:: var_is_introduced ;
var bool: aux9587_BOOL:: var_is_introduced ;
var {0,1}: aux9587_INTEGER :: var_is_introduced ;
var bool: aux9588_BOOL:: var_is_introduced ;
var bool: aux9589_BOOL:: var_is_introduced ;
var 1..58: aux9590:: var_is_introduced ;
var bool: aux9591_BOOL:: var_is_introduced ;
var bool: aux9592_BOOL:: var_is_introduced ;
var bool: aux9593_BOOL:: var_is_introduced ;
var {0,1}: aux9593_INTEGER :: var_is_introduced ;
var bool: aux9594_BOOL:: var_is_introduced ;
var bool: aux9595_BOOL:: var_is_introduced ;
var 3..60: aux9596:: var_is_introduced ;
var bool: aux9597_BOOL:: var_is_introduced ;
var bool: aux9598_BOOL:: var_is_introduced ;
var bool: aux9599_BOOL:: var_is_introduced ;
var {0,1}: aux9599_INTEGER :: var_is_introduced ;
var bool: aux9600_BOOL:: var_is_introduced ;
var bool: aux9601_BOOL:: var_is_introduced ;
var 4..61: aux9602:: var_is_introduced ;
var bool: aux9603_BOOL:: var_is_introduced ;
var bool: aux9604_BOOL:: var_is_introduced ;
var bool: aux9605_BOOL:: var_is_introduced ;
var {0,1}: aux9605_INTEGER :: var_is_introduced ;
var bool: aux9606_BOOL:: var_is_introduced ;
var bool: aux9607_BOOL:: var_is_introduced ;
var 1..58: aux9608:: var_is_introduced ;
var bool: aux9609_BOOL:: var_is_introduced ;
var bool: aux9610_BOOL:: var_is_introduced ;
var bool: aux9611_BOOL:: var_is_introduced ;
var {0,1}: aux9611_INTEGER :: var_is_introduced ;
var bool: aux9612_BOOL:: var_is_introduced ;
var bool: aux9613_BOOL:: var_is_introduced ;
var 4..61: aux9614:: var_is_introduced ;
var bool: aux9615_BOOL:: var_is_introduced ;
var bool: aux9616_BOOL:: var_is_introduced ;
var bool: aux9617_BOOL:: var_is_introduced ;
var {0,1}: aux9617_INTEGER :: var_is_introduced ;
var bool: aux9618_BOOL:: var_is_introduced ;
var bool: aux9619_BOOL:: var_is_introduced ;
var 2..59: aux9620:: var_is_introduced ;
var bool: aux9621_BOOL:: var_is_introduced ;
var bool: aux9622_BOOL:: var_is_introduced ;
var bool: aux9623_BOOL:: var_is_introduced ;
var {0,1}: aux9623_INTEGER :: var_is_introduced ;
var bool: aux9624_BOOL:: var_is_introduced ;
var bool: aux9625_BOOL:: var_is_introduced ;
var 4..61: aux9626:: var_is_introduced ;
var bool: aux9627_BOOL:: var_is_introduced ;
var bool: aux9628_BOOL:: var_is_introduced ;
var {0,1}: aux9628_INTEGER :: var_is_introduced ;
var bool: aux9629_BOOL:: var_is_introduced ;
var bool: aux9630_BOOL:: var_is_introduced ;
var 4..61: aux9631:: var_is_introduced ;
var bool: aux9632_BOOL:: var_is_introduced ;
var bool: aux9633_BOOL:: var_is_introduced ;
var bool: aux9634_BOOL:: var_is_introduced ;
var {0,1}: aux9634_INTEGER :: var_is_introduced ;
var bool: aux9635_BOOL:: var_is_introduced ;
var bool: aux9636_BOOL:: var_is_introduced ;
var 3..60: aux9637:: var_is_introduced ;
var bool: aux9638_BOOL:: var_is_introduced ;
var bool: aux9639_BOOL:: var_is_introduced ;
var bool: aux9640_BOOL:: var_is_introduced ;
var {0,1}: aux9640_INTEGER :: var_is_introduced ;
var bool: aux9641_BOOL:: var_is_introduced ;
var bool: aux9642_BOOL:: var_is_introduced ;
var 2..59: aux9643:: var_is_introduced ;
var bool: aux9644_BOOL:: var_is_introduced ;
var bool: aux9645_BOOL:: var_is_introduced ;
var bool: aux9646_BOOL:: var_is_introduced ;
var {0,1}: aux9646_INTEGER :: var_is_introduced ;
var bool: aux9647_BOOL:: var_is_introduced ;
var bool: aux9648_BOOL:: var_is_introduced ;
var 3..60: aux9649:: var_is_introduced ;
var bool: aux9650_BOOL:: var_is_introduced ;
var bool: aux9651_BOOL:: var_is_introduced ;
var bool: aux9652_BOOL:: var_is_introduced ;
var {0,1}: aux9652_INTEGER :: var_is_introduced ;
var bool: aux9653_BOOL:: var_is_introduced ;
var bool: aux9654_BOOL:: var_is_introduced ;
var 2..59: aux9655:: var_is_introduced ;
var bool: aux9656_BOOL:: var_is_introduced ;
var bool: aux9657_BOOL:: var_is_introduced ;
var bool: aux9658_BOOL:: var_is_introduced ;
var {0,1}: aux9658_INTEGER :: var_is_introduced ;
var bool: aux9659_BOOL:: var_is_introduced ;
var bool: aux9660_BOOL:: var_is_introduced ;
var 3..60: aux9661:: var_is_introduced ;
var bool: aux9662_BOOL:: var_is_introduced ;
var bool: aux9663_BOOL:: var_is_introduced ;
var bool: aux9664_BOOL:: var_is_introduced ;
var {0,1}: aux9664_INTEGER :: var_is_introduced ;
var bool: aux9665_BOOL:: var_is_introduced ;
var bool: aux9666_BOOL:: var_is_introduced ;
var 2..59: aux9667:: var_is_introduced ;
var bool: aux9668_BOOL:: var_is_introduced ;
var bool: aux9669_BOOL:: var_is_introduced ;
var bool: aux9670_BOOL:: var_is_introduced ;
var {0,1}: aux9670_INTEGER :: var_is_introduced ;
var bool: aux9671_BOOL:: var_is_introduced ;
var bool: aux9672_BOOL:: var_is_introduced ;
var 2..59: aux9673:: var_is_introduced ;
var bool: aux9674_BOOL:: var_is_introduced ;
var bool: aux9675_BOOL:: var_is_introduced ;
var bool: aux9676_BOOL:: var_is_introduced ;
var {0,1}: aux9676_INTEGER :: var_is_introduced ;
var bool: aux9677_BOOL:: var_is_introduced ;
var bool: aux9678_BOOL:: var_is_introduced ;
var 5..62: aux9679:: var_is_introduced ;
var bool: aux9680_BOOL:: var_is_introduced ;
var bool: aux9681_BOOL:: var_is_introduced ;
var bool: aux9682_BOOL:: var_is_introduced ;
var {0,1}: aux9682_INTEGER :: var_is_introduced ;
var bool: aux9683_BOOL:: var_is_introduced ;
var bool: aux9684_BOOL:: var_is_introduced ;
var 3..60: aux9685:: var_is_introduced ;
var bool: aux9686_BOOL:: var_is_introduced ;
var bool: aux9687_BOOL:: var_is_introduced ;
var bool: aux9688_BOOL:: var_is_introduced ;
var {0,1}: aux9688_INTEGER :: var_is_introduced ;
var bool: aux9689_BOOL:: var_is_introduced ;
var bool: aux9690_BOOL:: var_is_introduced ;
var 4..61: aux9691:: var_is_introduced ;
var bool: aux9692_BOOL:: var_is_introduced ;
var bool: aux9693_BOOL:: var_is_introduced ;
var bool: aux9694_BOOL:: var_is_introduced ;
var {0,1}: aux9694_INTEGER :: var_is_introduced ;
var bool: aux9695_BOOL:: var_is_introduced ;
var bool: aux9696_BOOL:: var_is_introduced ;
var 3..60: aux9697:: var_is_introduced ;
var bool: aux9698_BOOL:: var_is_introduced ;
var bool: aux9699_BOOL:: var_is_introduced ;
var bool: aux9700_BOOL:: var_is_introduced ;
var {0,1}: aux9700_INTEGER :: var_is_introduced ;
var bool: aux9701_BOOL:: var_is_introduced ;
var bool: aux9702_BOOL:: var_is_introduced ;
var 2..59: aux9703:: var_is_introduced ;
var bool: aux9704_BOOL:: var_is_introduced ;
var bool: aux9705_BOOL:: var_is_introduced ;
var bool: aux9706_BOOL:: var_is_introduced ;
var {0,1}: aux9706_INTEGER :: var_is_introduced ;
var bool: aux9707_BOOL:: var_is_introduced ;
var bool: aux9708_BOOL:: var_is_introduced ;
var 1..58: aux9709:: var_is_introduced ;
var bool: aux9710_BOOL:: var_is_introduced ;
var bool: aux9711_BOOL:: var_is_introduced ;
var bool: aux9712_BOOL:: var_is_introduced ;
var {0,1}: aux9712_INTEGER :: var_is_introduced ;
var bool: aux9713_BOOL:: var_is_introduced ;
var bool: aux9714_BOOL:: var_is_introduced ;
var 3..60: aux9715:: var_is_introduced ;
var bool: aux9716_BOOL:: var_is_introduced ;
var bool: aux9717_BOOL:: var_is_introduced ;
var bool: aux9718_BOOL:: var_is_introduced ;
var {0,1}: aux9718_INTEGER :: var_is_introduced ;
var bool: aux9719_BOOL:: var_is_introduced ;
var bool: aux9720_BOOL:: var_is_introduced ;
var 4..61: aux9721:: var_is_introduced ;
var bool: aux9722_BOOL:: var_is_introduced ;
var bool: aux9723_BOOL:: var_is_introduced ;
var bool: aux9724_BOOL:: var_is_introduced ;
var {0,1}: aux9724_INTEGER :: var_is_introduced ;
var bool: aux9725_BOOL:: var_is_introduced ;
var bool: aux9726_BOOL:: var_is_introduced ;
var 1..58: aux9727:: var_is_introduced ;
var bool: aux9728_BOOL:: var_is_introduced ;
var bool: aux9729_BOOL:: var_is_introduced ;
var bool: aux9730_BOOL:: var_is_introduced ;
var {0,1}: aux9730_INTEGER :: var_is_introduced ;
var bool: aux9731_BOOL:: var_is_introduced ;
var bool: aux9732_BOOL:: var_is_introduced ;
var 4..61: aux9733:: var_is_introduced ;
var bool: aux9734_BOOL:: var_is_introduced ;
var bool: aux9735_BOOL:: var_is_introduced ;
var bool: aux9736_BOOL:: var_is_introduced ;
var {0,1}: aux9736_INTEGER :: var_is_introduced ;
var bool: aux9737_BOOL:: var_is_introduced ;
var bool: aux9738_BOOL:: var_is_introduced ;
var 2..59: aux9739:: var_is_introduced ;
var bool: aux9740_BOOL:: var_is_introduced ;
var bool: aux9741_BOOL:: var_is_introduced ;
var bool: aux9742_BOOL:: var_is_introduced ;
var {0,1}: aux9742_INTEGER :: var_is_introduced ;
var bool: aux9743_BOOL:: var_is_introduced ;
var bool: aux9744_BOOL:: var_is_introduced ;
var bool: aux9745_BOOL:: var_is_introduced ;
var 5..62: aux9746:: var_is_introduced ;
var bool: aux9747_BOOL:: var_is_introduced ;
var bool: aux9748_BOOL:: var_is_introduced ;
var bool: aux9749_BOOL:: var_is_introduced ;
var {0,1}: aux9749_INTEGER :: var_is_introduced ;
var bool: aux9750_BOOL:: var_is_introduced ;
var bool: aux9751_BOOL:: var_is_introduced ;
var 3..60: aux9752:: var_is_introduced ;
var bool: aux9753_BOOL:: var_is_introduced ;
var bool: aux9754_BOOL:: var_is_introduced ;
var bool: aux9755_BOOL:: var_is_introduced ;
var {0,1}: aux9755_INTEGER :: var_is_introduced ;
var bool: aux9756_BOOL:: var_is_introduced ;
var bool: aux9757_BOOL:: var_is_introduced ;
var 4..61: aux9758:: var_is_introduced ;
var bool: aux9759_BOOL:: var_is_introduced ;
var bool: aux9760_BOOL:: var_is_introduced ;
var bool: aux9761_BOOL:: var_is_introduced ;
var {0,1}: aux9761_INTEGER :: var_is_introduced ;
var bool: aux9762_BOOL:: var_is_introduced ;
var bool: aux9763_BOOL:: var_is_introduced ;
var 3..60: aux9764:: var_is_introduced ;
var bool: aux9765_BOOL:: var_is_introduced ;
var bool: aux9766_BOOL:: var_is_introduced ;
var bool: aux9767_BOOL:: var_is_introduced ;
var {0,1}: aux9767_INTEGER :: var_is_introduced ;
var bool: aux9768_BOOL:: var_is_introduced ;
var bool: aux9769_BOOL:: var_is_introduced ;
var 2..59: aux9770:: var_is_introduced ;
var bool: aux9771_BOOL:: var_is_introduced ;
var bool: aux9772_BOOL:: var_is_introduced ;
var bool: aux9773_BOOL:: var_is_introduced ;
var {0,1}: aux9773_INTEGER :: var_is_introduced ;
var bool: aux9774_BOOL:: var_is_introduced ;
var bool: aux9775_BOOL:: var_is_introduced ;
var 1..58: aux9776:: var_is_introduced ;
var bool: aux9777_BOOL:: var_is_introduced ;
var bool: aux9778_BOOL:: var_is_introduced ;
var bool: aux9779_BOOL:: var_is_introduced ;
var {0,1}: aux9779_INTEGER :: var_is_introduced ;
var bool: aux9780_BOOL:: var_is_introduced ;
var bool: aux9781_BOOL:: var_is_introduced ;
var 3..60: aux9782:: var_is_introduced ;
var bool: aux9783_BOOL:: var_is_introduced ;
var bool: aux9784_BOOL:: var_is_introduced ;
var bool: aux9785_BOOL:: var_is_introduced ;
var {0,1}: aux9785_INTEGER :: var_is_introduced ;
var bool: aux9786_BOOL:: var_is_introduced ;
var bool: aux9787_BOOL:: var_is_introduced ;
var 4..61: aux9788:: var_is_introduced ;
var bool: aux9789_BOOL:: var_is_introduced ;
var bool: aux9790_BOOL:: var_is_introduced ;
var bool: aux9791_BOOL:: var_is_introduced ;
var {0,1}: aux9791_INTEGER :: var_is_introduced ;
var bool: aux9792_BOOL:: var_is_introduced ;
var bool: aux9793_BOOL:: var_is_introduced ;
var 4..61: aux9794:: var_is_introduced ;
var bool: aux9795_BOOL:: var_is_introduced ;
var bool: aux9796_BOOL:: var_is_introduced ;
var bool: aux9797_BOOL:: var_is_introduced ;
var {0,1}: aux9797_INTEGER :: var_is_introduced ;
var bool: aux9798_BOOL:: var_is_introduced ;
var bool: aux9799_BOOL:: var_is_introduced ;
var 2..59: aux9800:: var_is_introduced ;
var bool: aux9801_BOOL:: var_is_introduced ;
var bool: aux9802_BOOL:: var_is_introduced ;
var bool: aux9803_BOOL:: var_is_introduced ;
var {0,1}: aux9803_INTEGER :: var_is_introduced ;
var bool: aux9804_BOOL:: var_is_introduced ;
var 1..58: aux9805:: var_is_introduced ;
var bool: aux9806_BOOL:: var_is_introduced ;
var bool: aux9807_BOOL:: var_is_introduced ;
var {0,1}: aux9807_INTEGER :: var_is_introduced ;
var bool: aux9808_BOOL:: var_is_introduced ;
var bool: aux9809_BOOL:: var_is_introduced ;
var 4..61: aux9810:: var_is_introduced ;
var bool: aux9811_BOOL:: var_is_introduced ;
var bool: aux9812_BOOL:: var_is_introduced ;
var bool: aux9813_BOOL:: var_is_introduced ;
var {0,1}: aux9813_INTEGER :: var_is_introduced ;
var bool: aux9814_BOOL:: var_is_introduced ;
var bool: aux9815_BOOL:: var_is_introduced ;
var 4..61: aux9816:: var_is_introduced ;
var bool: aux9817_BOOL:: var_is_introduced ;
var bool: aux9818_BOOL:: var_is_introduced ;
var bool: aux9819_BOOL:: var_is_introduced ;
var {0,1}: aux9819_INTEGER :: var_is_introduced ;
var bool: aux9820_BOOL:: var_is_introduced ;
var bool: aux9821_BOOL:: var_is_introduced ;
var 3..60: aux9822:: var_is_introduced ;
var bool: aux9823_BOOL:: var_is_introduced ;
var bool: aux9824_BOOL:: var_is_introduced ;
var bool: aux9825_BOOL:: var_is_introduced ;
var {0,1}: aux9825_INTEGER :: var_is_introduced ;
var bool: aux9826_BOOL:: var_is_introduced ;
var bool: aux9827_BOOL:: var_is_introduced ;
var 2..59: aux9828:: var_is_introduced ;
var bool: aux9829_BOOL:: var_is_introduced ;
var bool: aux9830_BOOL:: var_is_introduced ;
var bool: aux9831_BOOL:: var_is_introduced ;
var {0,1}: aux9831_INTEGER :: var_is_introduced ;
var bool: aux9832_BOOL:: var_is_introduced ;
var bool: aux9833_BOOL:: var_is_introduced ;
var 3..60: aux9834:: var_is_introduced ;
var bool: aux9835_BOOL:: var_is_introduced ;
var bool: aux9836_BOOL:: var_is_introduced ;
var bool: aux9837_BOOL:: var_is_introduced ;
var {0,1}: aux9837_INTEGER :: var_is_introduced ;
var bool: aux9838_BOOL:: var_is_introduced ;
var bool: aux9839_BOOL:: var_is_introduced ;
var 2..59: aux9840:: var_is_introduced ;
var bool: aux9841_BOOL:: var_is_introduced ;
var bool: aux9842_BOOL:: var_is_introduced ;
var bool: aux9843_BOOL:: var_is_introduced ;
var {0,1}: aux9843_INTEGER :: var_is_introduced ;
var bool: aux9844_BOOL:: var_is_introduced ;
var bool: aux9845_BOOL:: var_is_introduced ;
var 3..60: aux9846:: var_is_introduced ;
var bool: aux9847_BOOL:: var_is_introduced ;
var bool: aux9848_BOOL:: var_is_introduced ;
var bool: aux9849_BOOL:: var_is_introduced ;
var {0,1}: aux9849_INTEGER :: var_is_introduced ;
var bool: aux9850_BOOL:: var_is_introduced ;
var bool: aux9851_BOOL:: var_is_introduced ;
var 2..59: aux9852:: var_is_introduced ;
var bool: aux9853_BOOL:: var_is_introduced ;
var bool: aux9854_BOOL:: var_is_introduced ;
var bool: aux9855_BOOL:: var_is_introduced ;
var {0,1}: aux9855_INTEGER :: var_is_introduced ;
var bool: aux9856_BOOL:: var_is_introduced ;
var bool: aux9857_BOOL:: var_is_introduced ;
var 2..59: aux9858:: var_is_introduced ;
var bool: aux9859_BOOL:: var_is_introduced ;
var bool: aux9860_BOOL:: var_is_introduced ;
var bool: aux9861_BOOL:: var_is_introduced ;
var {0,1}: aux9861_INTEGER :: var_is_introduced ;
var bool: aux9862_BOOL:: var_is_introduced ;
var bool: aux9863_BOOL:: var_is_introduced ;
var bool: aux9864_BOOL:: var_is_introduced ;
var 5..62: aux9865:: var_is_introduced ;
var bool: aux9866_BOOL:: var_is_introduced ;
var bool: aux9867_BOOL:: var_is_introduced ;
var bool: aux9868_BOOL:: var_is_introduced ;
var {0,1}: aux9868_INTEGER :: var_is_introduced ;
var bool: aux9869_BOOL:: var_is_introduced ;
var bool: aux9870_BOOL:: var_is_introduced ;
var 3..60: aux9871:: var_is_introduced ;
var bool: aux9872_BOOL:: var_is_introduced ;
var bool: aux9873_BOOL:: var_is_introduced ;
var bool: aux9874_BOOL:: var_is_introduced ;
var {0,1}: aux9874_INTEGER :: var_is_introduced ;
var bool: aux9875_BOOL:: var_is_introduced ;
var bool: aux9876_BOOL:: var_is_introduced ;
var 4..61: aux9877:: var_is_introduced ;
var bool: aux9878_BOOL:: var_is_introduced ;
var bool: aux9879_BOOL:: var_is_introduced ;
var bool: aux9880_BOOL:: var_is_introduced ;
var {0,1}: aux9880_INTEGER :: var_is_introduced ;
var bool: aux9881_BOOL:: var_is_introduced ;
var bool: aux9882_BOOL:: var_is_introduced ;
var 3..60: aux9883:: var_is_introduced ;
var bool: aux9884_BOOL:: var_is_introduced ;
var bool: aux9885_BOOL:: var_is_introduced ;
var bool: aux9886_BOOL:: var_is_introduced ;
var {0,1}: aux9886_INTEGER :: var_is_introduced ;
var bool: aux9887_BOOL:: var_is_introduced ;
var bool: aux9888_BOOL:: var_is_introduced ;
var 2..59: aux9889:: var_is_introduced ;
var bool: aux9890_BOOL:: var_is_introduced ;
var bool: aux9891_BOOL:: var_is_introduced ;
var bool: aux9892_BOOL:: var_is_introduced ;
var {0,1}: aux9892_INTEGER :: var_is_introduced ;
var bool: aux9893_BOOL:: var_is_introduced ;
var bool: aux9894_BOOL:: var_is_introduced ;
var 1..58: aux9895:: var_is_introduced ;
var bool: aux9896_BOOL:: var_is_introduced ;
var bool: aux9897_BOOL:: var_is_introduced ;
var bool: aux9898_BOOL:: var_is_introduced ;
var {0,1}: aux9898_INTEGER :: var_is_introduced ;
var bool: aux9899_BOOL:: var_is_introduced ;
var bool: aux9900_BOOL:: var_is_introduced ;
var 3..60: aux9901:: var_is_introduced ;
var bool: aux9902_BOOL:: var_is_introduced ;
var bool: aux9903_BOOL:: var_is_introduced ;
var bool: aux9904_BOOL:: var_is_introduced ;
var {0,1}: aux9904_INTEGER :: var_is_introduced ;
var bool: aux9905_BOOL:: var_is_introduced ;
var bool: aux9906_BOOL:: var_is_introduced ;
var 4..61: aux9907:: var_is_introduced ;
var bool: aux9908_BOOL:: var_is_introduced ;
var bool: aux9909_BOOL:: var_is_introduced ;
var bool: aux9910_BOOL:: var_is_introduced ;
var {0,1}: aux9910_INTEGER :: var_is_introduced ;
var bool: aux9911_BOOL:: var_is_introduced ;
var bool: aux9912_BOOL:: var_is_introduced ;
var 1..58: aux9913:: var_is_introduced ;
var bool: aux9914_BOOL:: var_is_introduced ;
var bool: aux9915_BOOL:: var_is_introduced ;
var bool: aux9916_BOOL:: var_is_introduced ;
var {0,1}: aux9916_INTEGER :: var_is_introduced ;
var bool: aux9917_BOOL:: var_is_introduced ;
var bool: aux9918_BOOL:: var_is_introduced ;
var 4..61: aux9919:: var_is_introduced ;
var bool: aux9920_BOOL:: var_is_introduced ;
var bool: aux9921_BOOL:: var_is_introduced ;
var bool: aux9922_BOOL:: var_is_introduced ;
var {0,1}: aux9922_INTEGER :: var_is_introduced ;
var bool: aux9923_BOOL:: var_is_introduced ;
var 2..59: aux9924:: var_is_introduced ;
var bool: aux9925_BOOL:: var_is_introduced ;
var bool: aux9926_BOOL:: var_is_introduced ;
var {0,1}: aux9926_INTEGER :: var_is_introduced ;
var bool: aux9927_BOOL:: var_is_introduced ;
var bool: aux9928_BOOL:: var_is_introduced ;
var 4..61: aux9929:: var_is_introduced ;
var bool: aux9930_BOOL:: var_is_introduced ;
var bool: aux9931_BOOL:: var_is_introduced ;
var bool: aux9932_BOOL:: var_is_introduced ;
var {0,1}: aux9932_INTEGER :: var_is_introduced ;
var bool: aux9933_BOOL:: var_is_introduced ;
var bool: aux9934_BOOL:: var_is_introduced ;
var 4..61: aux9935:: var_is_introduced ;
var bool: aux9936_BOOL:: var_is_introduced ;
var bool: aux9937_BOOL:: var_is_introduced ;
var bool: aux9938_BOOL:: var_is_introduced ;
var {0,1}: aux9938_INTEGER :: var_is_introduced ;
var bool: aux9939_BOOL:: var_is_introduced ;
var bool: aux9940_BOOL:: var_is_introduced ;
var 3..60: aux9941:: var_is_introduced ;
var bool: aux9942_BOOL:: var_is_introduced ;
var bool: aux9943_BOOL:: var_is_introduced ;
var bool: aux9944_BOOL:: var_is_introduced ;
var {0,1}: aux9944_INTEGER :: var_is_introduced ;
var bool: aux9945_BOOL:: var_is_introduced ;
var bool: aux9946_BOOL:: var_is_introduced ;
var 2..59: aux9947:: var_is_introduced ;
var bool: aux9948_BOOL:: var_is_introduced ;
var bool: aux9949_BOOL:: var_is_introduced ;
var bool: aux9950_BOOL:: var_is_introduced ;
var {0,1}: aux9950_INTEGER :: var_is_introduced ;
var bool: aux9951_BOOL:: var_is_introduced ;
var bool: aux9952_BOOL:: var_is_introduced ;
var 3..60: aux9953:: var_is_introduced ;
var bool: aux9954_BOOL:: var_is_introduced ;
var bool: aux9955_BOOL:: var_is_introduced ;
var bool: aux9956_BOOL:: var_is_introduced ;
var {0,1}: aux9956_INTEGER :: var_is_introduced ;
var bool: aux9957_BOOL:: var_is_introduced ;
var bool: aux9958_BOOL:: var_is_introduced ;
var 2..59: aux9959:: var_is_introduced ;
var bool: aux9960_BOOL:: var_is_introduced ;
var bool: aux9961_BOOL:: var_is_introduced ;
var bool: aux9962_BOOL:: var_is_introduced ;
var {0,1}: aux9962_INTEGER :: var_is_introduced ;
var bool: aux9963_BOOL:: var_is_introduced ;
var bool: aux9964_BOOL:: var_is_introduced ;
var 3..60: aux9965:: var_is_introduced ;
var bool: aux9966_BOOL:: var_is_introduced ;
var bool: aux9967_BOOL:: var_is_introduced ;
var bool: aux9968_BOOL:: var_is_introduced ;
var {0,1}: aux9968_INTEGER :: var_is_introduced ;
var bool: aux9969_BOOL:: var_is_introduced ;
var bool: aux9970_BOOL:: var_is_introduced ;
var 2..59: aux9971:: var_is_introduced ;
var bool: aux9972_BOOL:: var_is_introduced ;
var bool: aux9973_BOOL:: var_is_introduced ;
var bool: aux9974_BOOL:: var_is_introduced ;
var {0,1}: aux9974_INTEGER :: var_is_introduced ;
var bool: aux9975_BOOL:: var_is_introduced ;
var bool: aux9976_BOOL:: var_is_introduced ;
var 2..59: aux9977:: var_is_introduced ;
var bool: aux9978_BOOL:: var_is_introduced ;
var bool: aux9979_BOOL:: var_is_introduced ;
var bool: aux9980_BOOL:: var_is_introduced ;
var {0,1}: aux9980_INTEGER :: var_is_introduced ;
var bool: aux9981_BOOL:: var_is_introduced ;
var bool: aux9982_BOOL:: var_is_introduced ;
var bool: aux9983_BOOL:: var_is_introduced ;
var 2..59: aux9984:: var_is_introduced ;
var bool: aux9985_BOOL:: var_is_introduced ;
var bool: aux9986_BOOL:: var_is_introduced ;
var bool: aux9987_BOOL:: var_is_introduced ;
var bool: aux9988_BOOL:: var_is_introduced ;
var bool: aux9989_BOOL:: var_is_introduced ;
var {0,1}: aux9989_INTEGER :: var_is_introduced ;
var 2..59: aux9990:: var_is_introduced ;
var bool: aux9991_BOOL:: var_is_introduced ;
var bool: aux9992_BOOL:: var_is_introduced ;
var bool: aux9993_BOOL:: var_is_introduced ;
var bool: aux9994_BOOL:: var_is_introduced ;
var bool: aux9995_BOOL:: var_is_introduced ;
var {0,1}: aux9995_INTEGER :: var_is_introduced ;
var 2..59: aux9996:: var_is_introduced ;
var bool: aux9997_BOOL:: var_is_introduced ;
var bool: aux9998_BOOL:: var_is_introduced ;
var bool: aux9999_BOOL:: var_is_introduced ;
var bool: aux10000_BOOL:: var_is_introduced ;
var bool: aux10001_BOOL:: var_is_introduced ;
var {0,1}: aux10001_INTEGER :: var_is_introduced ;
var 2..59: aux10002:: var_is_introduced ;
var bool: aux10003_BOOL:: var_is_introduced ;
var bool: aux10004_BOOL:: var_is_introduced ;
var bool: aux10005_BOOL:: var_is_introduced ;
var bool: aux10006_BOOL:: var_is_introduced ;
var bool: aux10007_BOOL:: var_is_introduced ;
var {0,1}: aux10007_INTEGER :: var_is_introduced ;
var 3..60: aux10008:: var_is_introduced ;
var bool: aux10009_BOOL:: var_is_introduced ;
var bool: aux10010_BOOL:: var_is_introduced ;
var bool: aux10011_BOOL:: var_is_introduced ;
var bool: aux10012_BOOL:: var_is_introduced ;
var bool: aux10013_BOOL:: var_is_introduced ;
var {0,1}: aux10013_INTEGER :: var_is_introduced ;
var 3..60: aux10014:: var_is_introduced ;
var bool: aux10015_BOOL:: var_is_introduced ;
var bool: aux10016_BOOL:: var_is_introduced ;
var bool: aux10017_BOOL:: var_is_introduced ;
var bool: aux10018_BOOL:: var_is_introduced ;
var bool: aux10019_BOOL:: var_is_introduced ;
var {0,1}: aux10019_INTEGER :: var_is_introduced ;
var 1..58: aux10020:: var_is_introduced ;
var bool: aux10021_BOOL:: var_is_introduced ;
var bool: aux10022_BOOL:: var_is_introduced ;
var bool: aux10023_BOOL:: var_is_introduced ;
var bool: aux10024_BOOL:: var_is_introduced ;
var bool: aux10025_BOOL:: var_is_introduced ;
var {0,1}: aux10025_INTEGER :: var_is_introduced ;
var 3..60: aux10026:: var_is_introduced ;
var bool: aux10027_BOOL:: var_is_introduced ;
var bool: aux10028_BOOL:: var_is_introduced ;
var bool: aux10029_BOOL:: var_is_introduced ;
var bool: aux10030_BOOL:: var_is_introduced ;
var bool: aux10031_BOOL:: var_is_introduced ;
var {0,1}: aux10031_INTEGER :: var_is_introduced ;
var 4..61: aux10032:: var_is_introduced ;
var bool: aux10033_BOOL:: var_is_introduced ;
var bool: aux10034_BOOL:: var_is_introduced ;
var bool: aux10035_BOOL:: var_is_introduced ;
var bool: aux10036_BOOL:: var_is_introduced ;
var bool: aux10037_BOOL:: var_is_introduced ;
var {0,1}: aux10037_INTEGER :: var_is_introduced ;
var 4..61: aux10038:: var_is_introduced ;
var bool: aux10039_BOOL:: var_is_introduced ;
var bool: aux10040_BOOL:: var_is_introduced ;
var bool: aux10041_BOOL:: var_is_introduced ;
var bool: aux10042_BOOL:: var_is_introduced ;
var bool: aux10043_BOOL:: var_is_introduced ;
var {0,1}: aux10043_INTEGER :: var_is_introduced ;
var 2..59: aux10044:: var_is_introduced ;
var bool: aux10045_BOOL:: var_is_introduced ;
var bool: aux10046_BOOL:: var_is_introduced ;
var bool: aux10047_BOOL:: var_is_introduced ;
var bool: aux10048_BOOL:: var_is_introduced ;
var bool: aux10049_BOOL:: var_is_introduced ;
var {0,1}: aux10049_INTEGER :: var_is_introduced ;
var 3..60: aux10050:: var_is_introduced ;
var bool: aux10051_BOOL:: var_is_introduced ;
var bool: aux10052_BOOL:: var_is_introduced ;
var bool: aux10053_BOOL:: var_is_introduced ;
var bool: aux10054_BOOL:: var_is_introduced ;
var bool: aux10055_BOOL:: var_is_introduced ;
var {0,1}: aux10055_INTEGER :: var_is_introduced ;
var 3..60: aux10056:: var_is_introduced ;
var bool: aux10057_BOOL:: var_is_introduced ;
var bool: aux10058_BOOL:: var_is_introduced ;
var bool: aux10059_BOOL:: var_is_introduced ;
var bool: aux10060_BOOL:: var_is_introduced ;
var bool: aux10061_BOOL:: var_is_introduced ;
var {0,1}: aux10061_INTEGER :: var_is_introduced ;
var 2..59: aux10062:: var_is_introduced ;
var bool: aux10063_BOOL:: var_is_introduced ;
var bool: aux10064_BOOL:: var_is_introduced ;
var bool: aux10065_BOOL:: var_is_introduced ;
var bool: aux10066_BOOL:: var_is_introduced ;
var bool: aux10067_BOOL:: var_is_introduced ;
var {0,1}: aux10067_INTEGER :: var_is_introduced ;
var 3..60: aux10068:: var_is_introduced ;
var bool: aux10069_BOOL:: var_is_introduced ;
var bool: aux10070_BOOL:: var_is_introduced ;
var bool: aux10071_BOOL:: var_is_introduced ;
var bool: aux10072_BOOL:: var_is_introduced ;
var bool: aux10073_BOOL:: var_is_introduced ;
var {0,1}: aux10073_INTEGER :: var_is_introduced ;
var 4..61: aux10074:: var_is_introduced ;
var bool: aux10075_BOOL:: var_is_introduced ;
var bool: aux10076_BOOL:: var_is_introduced ;
var bool: aux10077_BOOL:: var_is_introduced ;
var bool: aux10078_BOOL:: var_is_introduced ;
var bool: aux10079_BOOL:: var_is_introduced ;
var {0,1}: aux10079_INTEGER :: var_is_introduced ;
var 4..61: aux10080:: var_is_introduced ;
var bool: aux10081_BOOL:: var_is_introduced ;
var bool: aux10082_BOOL:: var_is_introduced ;
var bool: aux10083_BOOL:: var_is_introduced ;
var bool: aux10084_BOOL:: var_is_introduced ;
var bool: aux10085_BOOL:: var_is_introduced ;
var {0,1}: aux10085_INTEGER :: var_is_introduced ;
var 4..61: aux10086:: var_is_introduced ;
var bool: aux10087_BOOL:: var_is_introduced ;
var bool: aux10088_BOOL:: var_is_introduced ;
var bool: aux10089_BOOL:: var_is_introduced ;
var bool: aux10090_BOOL:: var_is_introduced ;
var bool: aux10091_BOOL:: var_is_introduced ;
var {0,1}: aux10091_INTEGER :: var_is_introduced ;
var 5..62: aux10092:: var_is_introduced ;
var bool: aux10093_BOOL:: var_is_introduced ;
var bool: aux10094_BOOL:: var_is_introduced ;
var bool: aux10095_BOOL:: var_is_introduced ;
var bool: aux10096_BOOL:: var_is_introduced ;
var bool: aux10097_BOOL:: var_is_introduced ;
var {0,1}: aux10097_INTEGER :: var_is_introduced ;
var 1..58: aux10098:: var_is_introduced ;
var bool: aux10099_BOOL:: var_is_introduced ;
var bool: aux10100_BOOL:: var_is_introduced ;
var bool: aux10101_BOOL:: var_is_introduced ;
var {0,1}: aux10101_INTEGER :: var_is_introduced ;
var bool: aux10102_BOOL:: var_is_introduced ;
var 2..59: aux10103:: var_is_introduced ;
var bool: aux10104_BOOL:: var_is_introduced ;
var bool: aux10105_BOOL:: var_is_introduced ;
var bool: aux10106_BOOL:: var_is_introduced ;
var bool: aux10107_BOOL:: var_is_introduced ;
var bool: aux10108_BOOL:: var_is_introduced ;
var {0,1}: aux10108_INTEGER :: var_is_introduced ;
var 2..59: aux10109:: var_is_introduced ;
var bool: aux10110_BOOL:: var_is_introduced ;
var bool: aux10111_BOOL:: var_is_introduced ;
var bool: aux10112_BOOL:: var_is_introduced ;
var bool: aux10113_BOOL:: var_is_introduced ;
var bool: aux10114_BOOL:: var_is_introduced ;
var {0,1}: aux10114_INTEGER :: var_is_introduced ;
var 2..59: aux10115:: var_is_introduced ;
var bool: aux10116_BOOL:: var_is_introduced ;
var bool: aux10117_BOOL:: var_is_introduced ;
var bool: aux10118_BOOL:: var_is_introduced ;
var bool: aux10119_BOOL:: var_is_introduced ;
var bool: aux10120_BOOL:: var_is_introduced ;
var {0,1}: aux10120_INTEGER :: var_is_introduced ;
var 2..59: aux10121:: var_is_introduced ;
var bool: aux10122_BOOL:: var_is_introduced ;
var bool: aux10123_BOOL:: var_is_introduced ;
var bool: aux10124_BOOL:: var_is_introduced ;
var bool: aux10125_BOOL:: var_is_introduced ;
var bool: aux10126_BOOL:: var_is_introduced ;
var {0,1}: aux10126_INTEGER :: var_is_introduced ;
var 3..60: aux10127:: var_is_introduced ;
var bool: aux10128_BOOL:: var_is_introduced ;
var bool: aux10129_BOOL:: var_is_introduced ;
var bool: aux10130_BOOL:: var_is_introduced ;
var bool: aux10131_BOOL:: var_is_introduced ;
var bool: aux10132_BOOL:: var_is_introduced ;
var {0,1}: aux10132_INTEGER :: var_is_introduced ;
var 1..58: aux10133:: var_is_introduced ;
var bool: aux10134_BOOL:: var_is_introduced ;
var bool: aux10135_BOOL:: var_is_introduced ;
var bool: aux10136_BOOL:: var_is_introduced ;
var bool: aux10137_BOOL:: var_is_introduced ;
var bool: aux10138_BOOL:: var_is_introduced ;
var {0,1}: aux10138_INTEGER :: var_is_introduced ;
var 3..60: aux10139:: var_is_introduced ;
var bool: aux10140_BOOL:: var_is_introduced ;
var bool: aux10141_BOOL:: var_is_introduced ;
var bool: aux10142_BOOL:: var_is_introduced ;
var bool: aux10143_BOOL:: var_is_introduced ;
var bool: aux10144_BOOL:: var_is_introduced ;
var {0,1}: aux10144_INTEGER :: var_is_introduced ;
var 1..58: aux10145:: var_is_introduced ;
var bool: aux10146_BOOL:: var_is_introduced ;
var bool: aux10147_BOOL:: var_is_introduced ;
var bool: aux10148_BOOL:: var_is_introduced ;
var bool: aux10149_BOOL:: var_is_introduced ;
var bool: aux10150_BOOL:: var_is_introduced ;
var {0,1}: aux10150_INTEGER :: var_is_introduced ;
var 3..60: aux10151:: var_is_introduced ;
var bool: aux10152_BOOL:: var_is_introduced ;
var bool: aux10153_BOOL:: var_is_introduced ;
var bool: aux10154_BOOL:: var_is_introduced ;
var bool: aux10155_BOOL:: var_is_introduced ;
var bool: aux10156_BOOL:: var_is_introduced ;
var {0,1}: aux10156_INTEGER :: var_is_introduced ;
var 4..61: aux10157:: var_is_introduced ;
var bool: aux10158_BOOL:: var_is_introduced ;
var bool: aux10159_BOOL:: var_is_introduced ;
var bool: aux10160_BOOL:: var_is_introduced ;
var bool: aux10161_BOOL:: var_is_introduced ;
var bool: aux10162_BOOL:: var_is_introduced ;
var {0,1}: aux10162_INTEGER :: var_is_introduced ;
var 4..61: aux10163:: var_is_introduced ;
var bool: aux10164_BOOL:: var_is_introduced ;
var bool: aux10165_BOOL:: var_is_introduced ;
var bool: aux10166_BOOL:: var_is_introduced ;
var bool: aux10167_BOOL:: var_is_introduced ;
var bool: aux10168_BOOL:: var_is_introduced ;
var {0,1}: aux10168_INTEGER :: var_is_introduced ;
var 3..60: aux10169:: var_is_introduced ;
var bool: aux10170_BOOL:: var_is_introduced ;
var bool: aux10171_BOOL:: var_is_introduced ;
var bool: aux10172_BOOL:: var_is_introduced ;
var bool: aux10173_BOOL:: var_is_introduced ;
var bool: aux10174_BOOL:: var_is_introduced ;
var {0,1}: aux10174_INTEGER :: var_is_introduced ;
var 2..59: aux10175:: var_is_introduced ;
var bool: aux10176_BOOL:: var_is_introduced ;
var bool: aux10177_BOOL:: var_is_introduced ;
var bool: aux10178_BOOL:: var_is_introduced ;
var bool: aux10179_BOOL:: var_is_introduced ;
var bool: aux10180_BOOL:: var_is_introduced ;
var {0,1}: aux10180_INTEGER :: var_is_introduced ;
var 3..60: aux10181:: var_is_introduced ;
var bool: aux10182_BOOL:: var_is_introduced ;
var bool: aux10183_BOOL:: var_is_introduced ;
var bool: aux10184_BOOL:: var_is_introduced ;
var bool: aux10185_BOOL:: var_is_introduced ;
var bool: aux10186_BOOL:: var_is_introduced ;
var {0,1}: aux10186_INTEGER :: var_is_introduced ;
var 3..60: aux10187:: var_is_introduced ;
var bool: aux10188_BOOL:: var_is_introduced ;
var bool: aux10189_BOOL:: var_is_introduced ;
var bool: aux10190_BOOL:: var_is_introduced ;
var bool: aux10191_BOOL:: var_is_introduced ;
var bool: aux10192_BOOL:: var_is_introduced ;
var {0,1}: aux10192_INTEGER :: var_is_introduced ;
var 4..61: aux10193:: var_is_introduced ;
var bool: aux10194_BOOL:: var_is_introduced ;
var bool: aux10195_BOOL:: var_is_introduced ;
var bool: aux10196_BOOL:: var_is_introduced ;
var bool: aux10197_BOOL:: var_is_introduced ;
var bool: aux10198_BOOL:: var_is_introduced ;
var {0,1}: aux10198_INTEGER :: var_is_introduced ;
var 4..61: aux10199:: var_is_introduced ;
var bool: aux10200_BOOL:: var_is_introduced ;
var bool: aux10201_BOOL:: var_is_introduced ;
var bool: aux10202_BOOL:: var_is_introduced ;
var bool: aux10203_BOOL:: var_is_introduced ;
var bool: aux10204_BOOL:: var_is_introduced ;
var {0,1}: aux10204_INTEGER :: var_is_introduced ;
var 4..61: aux10205:: var_is_introduced ;
var bool: aux10206_BOOL:: var_is_introduced ;
var bool: aux10207_BOOL:: var_is_introduced ;
var bool: aux10208_BOOL:: var_is_introduced ;
var bool: aux10209_BOOL:: var_is_introduced ;
var bool: aux10210_BOOL:: var_is_introduced ;
var {0,1}: aux10210_INTEGER :: var_is_introduced ;
var 5..62: aux10211:: var_is_introduced ;
var bool: aux10212_BOOL:: var_is_introduced ;
var bool: aux10213_BOOL:: var_is_introduced ;
var bool: aux10214_BOOL:: var_is_introduced ;
var bool: aux10215_BOOL:: var_is_introduced ;
var bool: aux10216_BOOL:: var_is_introduced ;
var {0,1}: aux10216_INTEGER :: var_is_introduced ;
var 2..59: aux10217:: var_is_introduced ;
var bool: aux10218_BOOL:: var_is_introduced ;
var bool: aux10219_BOOL:: var_is_introduced ;
var bool: aux10220_BOOL:: var_is_introduced ;
var {0,1}: aux10220_INTEGER :: var_is_introduced ;
var bool: aux10221_BOOL:: var_is_introduced ;
var 2..59: aux10222:: var_is_introduced ;
var bool: aux10223_BOOL:: var_is_introduced ;
var bool: aux10224_BOOL:: var_is_introduced ;
var bool: aux10225_BOOL:: var_is_introduced ;
var bool: aux10226_BOOL:: var_is_introduced ;
var bool: aux10227_BOOL:: var_is_introduced ;
var {0,1}: aux10227_INTEGER :: var_is_introduced ;
var 1..58: aux10228:: var_is_introduced ;
var bool: aux10229_BOOL:: var_is_introduced ;
var bool: aux10230_BOOL:: var_is_introduced ;
var bool: aux10231_BOOL:: var_is_introduced ;
var bool: aux10232_BOOL:: var_is_introduced ;
var bool: aux10233_BOOL:: var_is_introduced ;
var {0,1}: aux10233_INTEGER :: var_is_introduced ;
var 2..59: aux10234:: var_is_introduced ;
var bool: aux10235_BOOL:: var_is_introduced ;
var bool: aux10236_BOOL:: var_is_introduced ;
var bool: aux10237_BOOL:: var_is_introduced ;
var bool: aux10238_BOOL:: var_is_introduced ;
var bool: aux10239_BOOL:: var_is_introduced ;
var {0,1}: aux10239_INTEGER :: var_is_introduced ;
var 2..59: aux10240:: var_is_introduced ;
var bool: aux10241_BOOL:: var_is_introduced ;
var bool: aux10242_BOOL:: var_is_introduced ;
var bool: aux10243_BOOL:: var_is_introduced ;
var bool: aux10244_BOOL:: var_is_introduced ;
var bool: aux10245_BOOL:: var_is_introduced ;
var {0,1}: aux10245_INTEGER :: var_is_introduced ;
var 1..58: aux10246:: var_is_introduced ;
var bool: aux10247_BOOL:: var_is_introduced ;
var bool: aux10248_BOOL:: var_is_introduced ;
var bool: aux10249_BOOL:: var_is_introduced ;
var bool: aux10250_BOOL:: var_is_introduced ;
var bool: aux10251_BOOL:: var_is_introduced ;
var {0,1}: aux10251_INTEGER :: var_is_introduced ;
var 2..59: aux10252:: var_is_introduced ;
var bool: aux10253_BOOL:: var_is_introduced ;
var bool: aux10254_BOOL:: var_is_introduced ;
var bool: aux10255_BOOL:: var_is_introduced ;
var bool: aux10256_BOOL:: var_is_introduced ;
var bool: aux10257_BOOL:: var_is_introduced ;
var {0,1}: aux10257_INTEGER :: var_is_introduced ;
var 3..60: aux10258:: var_is_introduced ;
var bool: aux10259_BOOL:: var_is_introduced ;
var bool: aux10260_BOOL:: var_is_introduced ;
var bool: aux10261_BOOL:: var_is_introduced ;
var bool: aux10262_BOOL:: var_is_introduced ;
var bool: aux10263_BOOL:: var_is_introduced ;
var {0,1}: aux10263_INTEGER :: var_is_introduced ;
var 2..59: aux10264:: var_is_introduced ;
var bool: aux10265_BOOL:: var_is_introduced ;
var bool: aux10266_BOOL:: var_is_introduced ;
var bool: aux10267_BOOL:: var_is_introduced ;
var bool: aux10268_BOOL:: var_is_introduced ;
var bool: aux10269_BOOL:: var_is_introduced ;
var {0,1}: aux10269_INTEGER :: var_is_introduced ;
var 3..60: aux10270:: var_is_introduced ;
var bool: aux10271_BOOL:: var_is_introduced ;
var bool: aux10272_BOOL:: var_is_introduced ;
var bool: aux10273_BOOL:: var_is_introduced ;
var bool: aux10274_BOOL:: var_is_introduced ;
var bool: aux10275_BOOL:: var_is_introduced ;
var {0,1}: aux10275_INTEGER :: var_is_introduced ;
var 4..61: aux10276:: var_is_introduced ;
var bool: aux10277_BOOL:: var_is_introduced ;
var bool: aux10278_BOOL:: var_is_introduced ;
var bool: aux10279_BOOL:: var_is_introduced ;
var bool: aux10280_BOOL:: var_is_introduced ;
var bool: aux10281_BOOL:: var_is_introduced ;
var {0,1}: aux10281_INTEGER :: var_is_introduced ;
var 4..61: aux10282:: var_is_introduced ;
var bool: aux10283_BOOL:: var_is_introduced ;
var bool: aux10284_BOOL:: var_is_introduced ;
var bool: aux10285_BOOL:: var_is_introduced ;
var bool: aux10286_BOOL:: var_is_introduced ;
var bool: aux10287_BOOL:: var_is_introduced ;
var {0,1}: aux10287_INTEGER :: var_is_introduced ;
var 2..59: aux10288:: var_is_introduced ;
var bool: aux10289_BOOL:: var_is_introduced ;
var bool: aux10290_BOOL:: var_is_introduced ;
var bool: aux10291_BOOL:: var_is_introduced ;
var bool: aux10292_BOOL:: var_is_introduced ;
var bool: aux10293_BOOL:: var_is_introduced ;
var {0,1}: aux10293_INTEGER :: var_is_introduced ;
var 3..60: aux10294:: var_is_introduced ;
var bool: aux10295_BOOL:: var_is_introduced ;
var bool: aux10296_BOOL:: var_is_introduced ;
var bool: aux10297_BOOL:: var_is_introduced ;
var bool: aux10298_BOOL:: var_is_introduced ;
var bool: aux10299_BOOL:: var_is_introduced ;
var {0,1}: aux10299_INTEGER :: var_is_introduced ;
var 3..60: aux10300:: var_is_introduced ;
var bool: aux10301_BOOL:: var_is_introduced ;
var bool: aux10302_BOOL:: var_is_introduced ;
var bool: aux10303_BOOL:: var_is_introduced ;
var bool: aux10304_BOOL:: var_is_introduced ;
var bool: aux10305_BOOL:: var_is_introduced ;
var {0,1}: aux10305_INTEGER :: var_is_introduced ;
var 3..60: aux10306:: var_is_introduced ;
var bool: aux10307_BOOL:: var_is_introduced ;
var bool: aux10308_BOOL:: var_is_introduced ;
var bool: aux10309_BOOL:: var_is_introduced ;
var bool: aux10310_BOOL:: var_is_introduced ;
var bool: aux10311_BOOL:: var_is_introduced ;
var {0,1}: aux10311_INTEGER :: var_is_introduced ;
var 4..61: aux10312:: var_is_introduced ;
var bool: aux10313_BOOL:: var_is_introduced ;
var bool: aux10314_BOOL:: var_is_introduced ;
var bool: aux10315_BOOL:: var_is_introduced ;
var bool: aux10316_BOOL:: var_is_introduced ;
var bool: aux10317_BOOL:: var_is_introduced ;
var {0,1}: aux10317_INTEGER :: var_is_introduced ;
var 4..61: aux10318:: var_is_introduced ;
var bool: aux10319_BOOL:: var_is_introduced ;
var bool: aux10320_BOOL:: var_is_introduced ;
var bool: aux10321_BOOL:: var_is_introduced ;
var bool: aux10322_BOOL:: var_is_introduced ;
var bool: aux10323_BOOL:: var_is_introduced ;
var {0,1}: aux10323_INTEGER :: var_is_introduced ;
var 4..61: aux10324:: var_is_introduced ;
var bool: aux10325_BOOL:: var_is_introduced ;
var bool: aux10326_BOOL:: var_is_introduced ;
var bool: aux10327_BOOL:: var_is_introduced ;
var bool: aux10328_BOOL:: var_is_introduced ;
var bool: aux10329_BOOL:: var_is_introduced ;
var {0,1}: aux10329_INTEGER :: var_is_introduced ;
var 5..62: aux10330:: var_is_introduced ;
var bool: aux10331_BOOL:: var_is_introduced ;
var bool: aux10332_BOOL:: var_is_introduced ;
var bool: aux10333_BOOL:: var_is_introduced ;
var bool: aux10334_BOOL:: var_is_introduced ;
var bool: aux10335_BOOL:: var_is_introduced ;
var {0,1}: aux10335_INTEGER :: var_is_introduced ;
var 3..60: aux10336:: var_is_introduced ;
var bool: aux10337_BOOL:: var_is_introduced ;
var bool: aux10338_BOOL:: var_is_introduced ;
var bool: aux10339_BOOL:: var_is_introduced ;
var {0,1}: aux10339_INTEGER :: var_is_introduced ;
var bool: aux10340_BOOL:: var_is_introduced ;
var 2..59: aux10341:: var_is_introduced ;
var bool: aux10342_BOOL:: var_is_introduced ;
var bool: aux10343_BOOL:: var_is_introduced ;
var bool: aux10344_BOOL:: var_is_introduced ;
var bool: aux10345_BOOL:: var_is_introduced ;
var bool: aux10346_BOOL:: var_is_introduced ;
var {0,1}: aux10346_INTEGER :: var_is_introduced ;
var 2..59: aux10347:: var_is_introduced ;
var bool: aux10348_BOOL:: var_is_introduced ;
var bool: aux10349_BOOL:: var_is_introduced ;
var bool: aux10350_BOOL:: var_is_introduced ;
var bool: aux10351_BOOL:: var_is_introduced ;
var bool: aux10352_BOOL:: var_is_introduced ;
var {0,1}: aux10352_INTEGER :: var_is_introduced ;
var 2..59: aux10353:: var_is_introduced ;
var bool: aux10354_BOOL:: var_is_introduced ;
var bool: aux10355_BOOL:: var_is_introduced ;
var bool: aux10356_BOOL:: var_is_introduced ;
var bool: aux10357_BOOL:: var_is_introduced ;
var bool: aux10358_BOOL:: var_is_introduced ;
var {0,1}: aux10358_INTEGER :: var_is_introduced ;
var 2..59: aux10359:: var_is_introduced ;
var bool: aux10360_BOOL:: var_is_introduced ;
var bool: aux10361_BOOL:: var_is_introduced ;
var bool: aux10362_BOOL:: var_is_introduced ;
var bool: aux10363_BOOL:: var_is_introduced ;
var bool: aux10364_BOOL:: var_is_introduced ;
var {0,1}: aux10364_INTEGER :: var_is_introduced ;
var 1..58: aux10365:: var_is_introduced ;
var bool: aux10366_BOOL:: var_is_introduced ;
var bool: aux10367_BOOL:: var_is_introduced ;
var bool: aux10368_BOOL:: var_is_introduced ;
var bool: aux10369_BOOL:: var_is_introduced ;
var bool: aux10370_BOOL:: var_is_introduced ;
var {0,1}: aux10370_INTEGER :: var_is_introduced ;
var 3..60: aux10371:: var_is_introduced ;
var bool: aux10372_BOOL:: var_is_introduced ;
var bool: aux10373_BOOL:: var_is_introduced ;
var bool: aux10374_BOOL:: var_is_introduced ;
var bool: aux10375_BOOL:: var_is_introduced ;
var bool: aux10376_BOOL:: var_is_introduced ;
var {0,1}: aux10376_INTEGER :: var_is_introduced ;
var 1..58: aux10377:: var_is_introduced ;
var bool: aux10378_BOOL:: var_is_introduced ;
var bool: aux10379_BOOL:: var_is_introduced ;
var bool: aux10380_BOOL:: var_is_introduced ;
var bool: aux10381_BOOL:: var_is_introduced ;
var bool: aux10382_BOOL:: var_is_introduced ;
var {0,1}: aux10382_INTEGER :: var_is_introduced ;
var 3..60: aux10383:: var_is_introduced ;
var bool: aux10384_BOOL:: var_is_introduced ;
var bool: aux10385_BOOL:: var_is_introduced ;
var bool: aux10386_BOOL:: var_is_introduced ;
var bool: aux10387_BOOL:: var_is_introduced ;
var bool: aux10388_BOOL:: var_is_introduced ;
var {0,1}: aux10388_INTEGER :: var_is_introduced ;
var 3..60: aux10389:: var_is_introduced ;
var bool: aux10390_BOOL:: var_is_introduced ;
var bool: aux10391_BOOL:: var_is_introduced ;
var bool: aux10392_BOOL:: var_is_introduced ;
var bool: aux10393_BOOL:: var_is_introduced ;
var bool: aux10394_BOOL:: var_is_introduced ;
var {0,1}: aux10394_INTEGER :: var_is_introduced ;
var 4..61: aux10395:: var_is_introduced ;
var bool: aux10396_BOOL:: var_is_introduced ;
var bool: aux10397_BOOL:: var_is_introduced ;
var bool: aux10398_BOOL:: var_is_introduced ;
var bool: aux10399_BOOL:: var_is_introduced ;
var bool: aux10400_BOOL:: var_is_introduced ;
var {0,1}: aux10400_INTEGER :: var_is_introduced ;
var 4..61: aux10401:: var_is_introduced ;
var bool: aux10402_BOOL:: var_is_introduced ;
var bool: aux10403_BOOL:: var_is_introduced ;
var bool: aux10404_BOOL:: var_is_introduced ;
var bool: aux10405_BOOL:: var_is_introduced ;
var bool: aux10406_BOOL:: var_is_introduced ;
var {0,1}: aux10406_INTEGER :: var_is_introduced ;
var 2..59: aux10407:: var_is_introduced ;
var bool: aux10408_BOOL:: var_is_introduced ;
var bool: aux10409_BOOL:: var_is_introduced ;
var bool: aux10410_BOOL:: var_is_introduced ;
var bool: aux10411_BOOL:: var_is_introduced ;
var bool: aux10412_BOOL:: var_is_introduced ;
var {0,1}: aux10412_INTEGER :: var_is_introduced ;
var 2..59: aux10413:: var_is_introduced ;
var bool: aux10414_BOOL:: var_is_introduced ;
var bool: aux10415_BOOL:: var_is_introduced ;
var bool: aux10416_BOOL:: var_is_introduced ;
var bool: aux10417_BOOL:: var_is_introduced ;
var bool: aux10418_BOOL:: var_is_introduced ;
var {0,1}: aux10418_INTEGER :: var_is_introduced ;
var 3..60: aux10419:: var_is_introduced ;
var bool: aux10420_BOOL:: var_is_introduced ;
var bool: aux10421_BOOL:: var_is_introduced ;
var bool: aux10422_BOOL:: var_is_introduced ;
var bool: aux10423_BOOL:: var_is_introduced ;
var bool: aux10424_BOOL:: var_is_introduced ;
var {0,1}: aux10424_INTEGER :: var_is_introduced ;
var 3..60: aux10425:: var_is_introduced ;
var bool: aux10426_BOOL:: var_is_introduced ;
var bool: aux10427_BOOL:: var_is_introduced ;
var bool: aux10428_BOOL:: var_is_introduced ;
var bool: aux10429_BOOL:: var_is_introduced ;
var bool: aux10430_BOOL:: var_is_introduced ;
var {0,1}: aux10430_INTEGER :: var_is_introduced ;
var 3..60: aux10431:: var_is_introduced ;
var bool: aux10432_BOOL:: var_is_introduced ;
var bool: aux10433_BOOL:: var_is_introduced ;
var bool: aux10434_BOOL:: var_is_introduced ;
var bool: aux10435_BOOL:: var_is_introduced ;
var bool: aux10436_BOOL:: var_is_introduced ;
var {0,1}: aux10436_INTEGER :: var_is_introduced ;
var 4..61: aux10437:: var_is_introduced ;
var bool: aux10438_BOOL:: var_is_introduced ;
var bool: aux10439_BOOL:: var_is_introduced ;
var bool: aux10440_BOOL:: var_is_introduced ;
var bool: aux10441_BOOL:: var_is_introduced ;
var bool: aux10442_BOOL:: var_is_introduced ;
var {0,1}: aux10442_INTEGER :: var_is_introduced ;
var 4..61: aux10443:: var_is_introduced ;
var bool: aux10444_BOOL:: var_is_introduced ;
var bool: aux10445_BOOL:: var_is_introduced ;
var bool: aux10446_BOOL:: var_is_introduced ;
var bool: aux10447_BOOL:: var_is_introduced ;
var bool: aux10448_BOOL:: var_is_introduced ;
var {0,1}: aux10448_INTEGER :: var_is_introduced ;
var 4..61: aux10449:: var_is_introduced ;
var bool: aux10450_BOOL:: var_is_introduced ;
var bool: aux10451_BOOL:: var_is_introduced ;
var bool: aux10452_BOOL:: var_is_introduced ;
var bool: aux10453_BOOL:: var_is_introduced ;
var bool: aux10454_BOOL:: var_is_introduced ;
var {0,1}: aux10454_INTEGER :: var_is_introduced ;
var 5..62: aux10455:: var_is_introduced ;
var bool: aux10456_BOOL:: var_is_introduced ;
var bool: aux10457_BOOL:: var_is_introduced ;
var bool: aux10458_BOOL:: var_is_introduced ;
var {0,1}: aux10458_INTEGER :: var_is_introduced ;
var bool: aux10459_BOOL:: var_is_introduced ;
var 2..59: aux10460:: var_is_introduced ;
var bool: aux10461_BOOL:: var_is_introduced ;
var bool: aux10462_BOOL:: var_is_introduced ;
var bool: aux10463_BOOL:: var_is_introduced ;
var bool: aux10464_BOOL:: var_is_introduced ;
var bool: aux10465_BOOL:: var_is_introduced ;
var {0,1}: aux10465_INTEGER :: var_is_introduced ;
var 2..59: aux10466:: var_is_introduced ;
var bool: aux10467_BOOL:: var_is_introduced ;
var bool: aux10468_BOOL:: var_is_introduced ;
var bool: aux10469_BOOL:: var_is_introduced ;
var bool: aux10470_BOOL:: var_is_introduced ;
var bool: aux10471_BOOL:: var_is_introduced ;
var {0,1}: aux10471_INTEGER :: var_is_introduced ;
var 1..58: aux10472:: var_is_introduced ;
var bool: aux10473_BOOL:: var_is_introduced ;
var bool: aux10474_BOOL:: var_is_introduced ;
var bool: aux10475_BOOL:: var_is_introduced ;
var bool: aux10476_BOOL:: var_is_introduced ;
var bool: aux10477_BOOL:: var_is_introduced ;
var {0,1}: aux10477_INTEGER :: var_is_introduced ;
var 2..59: aux10478:: var_is_introduced ;
var bool: aux10479_BOOL:: var_is_introduced ;
var bool: aux10480_BOOL:: var_is_introduced ;
var bool: aux10481_BOOL:: var_is_introduced ;
var bool: aux10482_BOOL:: var_is_introduced ;
var bool: aux10483_BOOL:: var_is_introduced ;
var {0,1}: aux10483_INTEGER :: var_is_introduced ;
var 1..58: aux10484:: var_is_introduced ;
var bool: aux10485_BOOL:: var_is_introduced ;
var bool: aux10486_BOOL:: var_is_introduced ;
var bool: aux10487_BOOL:: var_is_introduced ;
var bool: aux10488_BOOL:: var_is_introduced ;
var bool: aux10489_BOOL:: var_is_introduced ;
var {0,1}: aux10489_INTEGER :: var_is_introduced ;
var 3..60: aux10490:: var_is_introduced ;
var bool: aux10491_BOOL:: var_is_introduced ;
var bool: aux10492_BOOL:: var_is_introduced ;
var bool: aux10493_BOOL:: var_is_introduced ;
var bool: aux10494_BOOL:: var_is_introduced ;
var bool: aux10495_BOOL:: var_is_introduced ;
var {0,1}: aux10495_INTEGER :: var_is_introduced ;
var 3..60: aux10496:: var_is_introduced ;
var bool: aux10497_BOOL:: var_is_introduced ;
var bool: aux10498_BOOL:: var_is_introduced ;
var bool: aux10499_BOOL:: var_is_introduced ;
var bool: aux10500_BOOL:: var_is_introduced ;
var bool: aux10501_BOOL:: var_is_introduced ;
var {0,1}: aux10501_INTEGER :: var_is_introduced ;
var 2..59: aux10502:: var_is_introduced ;
var bool: aux10503_BOOL:: var_is_introduced ;
var bool: aux10504_BOOL:: var_is_introduced ;
var bool: aux10505_BOOL:: var_is_introduced ;
var bool: aux10506_BOOL:: var_is_introduced ;
var bool: aux10507_BOOL:: var_is_introduced ;
var {0,1}: aux10507_INTEGER :: var_is_introduced ;
var 3..60: aux10508:: var_is_introduced ;
var bool: aux10509_BOOL:: var_is_introduced ;
var bool: aux10510_BOOL:: var_is_introduced ;
var bool: aux10511_BOOL:: var_is_introduced ;
var bool: aux10512_BOOL:: var_is_introduced ;
var bool: aux10513_BOOL:: var_is_introduced ;
var {0,1}: aux10513_INTEGER :: var_is_introduced ;
var 4..61: aux10514:: var_is_introduced ;
var bool: aux10515_BOOL:: var_is_introduced ;
var bool: aux10516_BOOL:: var_is_introduced ;
var bool: aux10517_BOOL:: var_is_introduced ;
var bool: aux10518_BOOL:: var_is_introduced ;
var bool: aux10519_BOOL:: var_is_introduced ;
var {0,1}: aux10519_INTEGER :: var_is_introduced ;
var 4..61: aux10520:: var_is_introduced ;
var bool: aux10521_BOOL:: var_is_introduced ;
var bool: aux10522_BOOL:: var_is_introduced ;
var bool: aux10523_BOOL:: var_is_introduced ;
var bool: aux10524_BOOL:: var_is_introduced ;
var bool: aux10525_BOOL:: var_is_introduced ;
var {0,1}: aux10525_INTEGER :: var_is_introduced ;
var 2..59: aux10526:: var_is_introduced ;
var bool: aux10527_BOOL:: var_is_introduced ;
var bool: aux10528_BOOL:: var_is_introduced ;
var bool: aux10529_BOOL:: var_is_introduced ;
var bool: aux10530_BOOL:: var_is_introduced ;
var bool: aux10531_BOOL:: var_is_introduced ;
var {0,1}: aux10531_INTEGER :: var_is_introduced ;
var 3..60: aux10532:: var_is_introduced ;
var bool: aux10533_BOOL:: var_is_introduced ;
var bool: aux10534_BOOL:: var_is_introduced ;
var bool: aux10535_BOOL:: var_is_introduced ;
var bool: aux10536_BOOL:: var_is_introduced ;
var bool: aux10537_BOOL:: var_is_introduced ;
var {0,1}: aux10537_INTEGER :: var_is_introduced ;
var 3..60: aux10538:: var_is_introduced ;
var bool: aux10539_BOOL:: var_is_introduced ;
var bool: aux10540_BOOL:: var_is_introduced ;
var bool: aux10541_BOOL:: var_is_introduced ;
var bool: aux10542_BOOL:: var_is_introduced ;
var bool: aux10543_BOOL:: var_is_introduced ;
var {0,1}: aux10543_INTEGER :: var_is_introduced ;
var 3..60: aux10544:: var_is_introduced ;
var bool: aux10545_BOOL:: var_is_introduced ;
var bool: aux10546_BOOL:: var_is_introduced ;
var bool: aux10547_BOOL:: var_is_introduced ;
var bool: aux10548_BOOL:: var_is_introduced ;
var bool: aux10549_BOOL:: var_is_introduced ;
var {0,1}: aux10549_INTEGER :: var_is_introduced ;
var 4..61: aux10550:: var_is_introduced ;
var bool: aux10551_BOOL:: var_is_introduced ;
var bool: aux10552_BOOL:: var_is_introduced ;
var bool: aux10553_BOOL:: var_is_introduced ;
var bool: aux10554_BOOL:: var_is_introduced ;
var bool: aux10555_BOOL:: var_is_introduced ;
var {0,1}: aux10555_INTEGER :: var_is_introduced ;
var 4..61: aux10556:: var_is_introduced ;
var bool: aux10557_BOOL:: var_is_introduced ;
var bool: aux10558_BOOL:: var_is_introduced ;
var bool: aux10559_BOOL:: var_is_introduced ;
var bool: aux10560_BOOL:: var_is_introduced ;
var bool: aux10561_BOOL:: var_is_introduced ;
var {0,1}: aux10561_INTEGER :: var_is_introduced ;
var 4..61: aux10562:: var_is_introduced ;
var bool: aux10563_BOOL:: var_is_introduced ;
var bool: aux10564_BOOL:: var_is_introduced ;
var bool: aux10565_BOOL:: var_is_introduced ;
var bool: aux10566_BOOL:: var_is_introduced ;
var bool: aux10567_BOOL:: var_is_introduced ;
var {0,1}: aux10567_INTEGER :: var_is_introduced ;
var 5..62: aux10568:: var_is_introduced ;
var bool: aux10569_BOOL:: var_is_introduced ;
var bool: aux10570_BOOL:: var_is_introduced ;
var bool: aux10571_BOOL:: var_is_introduced ;
var bool: aux10572_BOOL:: var_is_introduced ;
var bool: aux10573_BOOL:: var_is_introduced ;
var {0,1}: aux10573_INTEGER :: var_is_introduced ;
var 2..59: aux10574:: var_is_introduced ;
var bool: aux10575_BOOL:: var_is_introduced ;
var bool: aux10576_BOOL:: var_is_introduced ;
var bool: aux10577_BOOL:: var_is_introduced ;
var {0,1}: aux10577_INTEGER :: var_is_introduced ;
var bool: aux10578_BOOL:: var_is_introduced ;
var 2..59: aux10579:: var_is_introduced ;
var bool: aux10580_BOOL:: var_is_introduced ;
var bool: aux10581_BOOL:: var_is_introduced ;
var bool: aux10582_BOOL:: var_is_introduced ;
var bool: aux10583_BOOL:: var_is_introduced ;
var bool: aux10584_BOOL:: var_is_introduced ;
var {0,1}: aux10584_INTEGER :: var_is_introduced ;
var 2..59: aux10585:: var_is_introduced ;
var bool: aux10586_BOOL:: var_is_introduced ;
var bool: aux10587_BOOL:: var_is_introduced ;
var bool: aux10588_BOOL:: var_is_introduced ;
var bool: aux10589_BOOL:: var_is_introduced ;
var bool: aux10590_BOOL:: var_is_introduced ;
var {0,1}: aux10590_INTEGER :: var_is_introduced ;
var 2..59: aux10591:: var_is_introduced ;
var bool: aux10592_BOOL:: var_is_introduced ;
var bool: aux10593_BOOL:: var_is_introduced ;
var bool: aux10594_BOOL:: var_is_introduced ;
var bool: aux10595_BOOL:: var_is_introduced ;
var bool: aux10596_BOOL:: var_is_introduced ;
var {0,1}: aux10596_INTEGER :: var_is_introduced ;
var 2..59: aux10597:: var_is_introduced ;
var bool: aux10598_BOOL:: var_is_introduced ;
var bool: aux10599_BOOL:: var_is_introduced ;
var bool: aux10600_BOOL:: var_is_introduced ;
var bool: aux10601_BOOL:: var_is_introduced ;
var bool: aux10602_BOOL:: var_is_introduced ;
var {0,1}: aux10602_INTEGER :: var_is_introduced ;
var 3..60: aux10603:: var_is_introduced ;
var bool: aux10604_BOOL:: var_is_introduced ;
var bool: aux10605_BOOL:: var_is_introduced ;
var bool: aux10606_BOOL:: var_is_introduced ;
var bool: aux10607_BOOL:: var_is_introduced ;
var bool: aux10608_BOOL:: var_is_introduced ;
var {0,1}: aux10608_INTEGER :: var_is_introduced ;
var 1..58: aux10609:: var_is_introduced ;
var bool: aux10610_BOOL:: var_is_introduced ;
var bool: aux10611_BOOL:: var_is_introduced ;
var bool: aux10612_BOOL:: var_is_introduced ;
var bool: aux10613_BOOL:: var_is_introduced ;
var bool: aux10614_BOOL:: var_is_introduced ;
var {0,1}: aux10614_INTEGER :: var_is_introduced ;
var 3..60: aux10615:: var_is_introduced ;
var bool: aux10616_BOOL:: var_is_introduced ;
var bool: aux10617_BOOL:: var_is_introduced ;
var bool: aux10618_BOOL:: var_is_introduced ;
var bool: aux10619_BOOL:: var_is_introduced ;
var bool: aux10620_BOOL:: var_is_introduced ;
var {0,1}: aux10620_INTEGER :: var_is_introduced ;
var 1..58: aux10621:: var_is_introduced ;
var bool: aux10622_BOOL:: var_is_introduced ;
var bool: aux10623_BOOL:: var_is_introduced ;
var bool: aux10624_BOOL:: var_is_introduced ;
var bool: aux10625_BOOL:: var_is_introduced ;
var bool: aux10626_BOOL:: var_is_introduced ;
var {0,1}: aux10626_INTEGER :: var_is_introduced ;
var 3..60: aux10627:: var_is_introduced ;
var bool: aux10628_BOOL:: var_is_introduced ;
var bool: aux10629_BOOL:: var_is_introduced ;
var bool: aux10630_BOOL:: var_is_introduced ;
var bool: aux10631_BOOL:: var_is_introduced ;
var bool: aux10632_BOOL:: var_is_introduced ;
var {0,1}: aux10632_INTEGER :: var_is_introduced ;
var 4..61: aux10633:: var_is_introduced ;
var bool: aux10634_BOOL:: var_is_introduced ;
var bool: aux10635_BOOL:: var_is_introduced ;
var bool: aux10636_BOOL:: var_is_introduced ;
var bool: aux10637_BOOL:: var_is_introduced ;
var bool: aux10638_BOOL:: var_is_introduced ;
var {0,1}: aux10638_INTEGER :: var_is_introduced ;
var 4..61: aux10639:: var_is_introduced ;
var bool: aux10640_BOOL:: var_is_introduced ;
var bool: aux10641_BOOL:: var_is_introduced ;
var bool: aux10642_BOOL:: var_is_introduced ;
var bool: aux10643_BOOL:: var_is_introduced ;
var bool: aux10644_BOOL:: var_is_introduced ;
var {0,1}: aux10644_INTEGER :: var_is_introduced ;
var 2..59: aux10645:: var_is_introduced ;
var bool: aux10646_BOOL:: var_is_introduced ;
var bool: aux10647_BOOL:: var_is_introduced ;
var bool: aux10648_BOOL:: var_is_introduced ;
var bool: aux10649_BOOL:: var_is_introduced ;
var bool: aux10650_BOOL:: var_is_introduced ;
var {0,1}: aux10650_INTEGER :: var_is_introduced ;
var 3..60: aux10651:: var_is_introduced ;
var bool: aux10652_BOOL:: var_is_introduced ;
var bool: aux10653_BOOL:: var_is_introduced ;
var bool: aux10654_BOOL:: var_is_introduced ;
var bool: aux10655_BOOL:: var_is_introduced ;
var bool: aux10656_BOOL:: var_is_introduced ;
var {0,1}: aux10656_INTEGER :: var_is_introduced ;
var 2..59: aux10657:: var_is_introduced ;
var bool: aux10658_BOOL:: var_is_introduced ;
var bool: aux10659_BOOL:: var_is_introduced ;
var bool: aux10660_BOOL:: var_is_introduced ;
var bool: aux10661_BOOL:: var_is_introduced ;
var bool: aux10662_BOOL:: var_is_introduced ;
var {0,1}: aux10662_INTEGER :: var_is_introduced ;
var 3..60: aux10663:: var_is_introduced ;
var bool: aux10664_BOOL:: var_is_introduced ;
var bool: aux10665_BOOL:: var_is_introduced ;
var bool: aux10666_BOOL:: var_is_introduced ;
var bool: aux10667_BOOL:: var_is_introduced ;
var bool: aux10668_BOOL:: var_is_introduced ;
var {0,1}: aux10668_INTEGER :: var_is_introduced ;
var 3..60: aux10669:: var_is_introduced ;
var bool: aux10670_BOOL:: var_is_introduced ;
var bool: aux10671_BOOL:: var_is_introduced ;
var bool: aux10672_BOOL:: var_is_introduced ;
var bool: aux10673_BOOL:: var_is_introduced ;
var bool: aux10674_BOOL:: var_is_introduced ;
var {0,1}: aux10674_INTEGER :: var_is_introduced ;
var 4..61: aux10675:: var_is_introduced ;
var bool: aux10676_BOOL:: var_is_introduced ;
var bool: aux10677_BOOL:: var_is_introduced ;
var bool: aux10678_BOOL:: var_is_introduced ;
var bool: aux10679_BOOL:: var_is_introduced ;
var bool: aux10680_BOOL:: var_is_introduced ;
var {0,1}: aux10680_INTEGER :: var_is_introduced ;
var 4..61: aux10681:: var_is_introduced ;
var bool: aux10682_BOOL:: var_is_introduced ;
var bool: aux10683_BOOL:: var_is_introduced ;
var bool: aux10684_BOOL:: var_is_introduced ;
var bool: aux10685_BOOL:: var_is_introduced ;
var bool: aux10686_BOOL:: var_is_introduced ;
var {0,1}: aux10686_INTEGER :: var_is_introduced ;
var 5..62: aux10687:: var_is_introduced ;
var bool: aux10688_BOOL:: var_is_introduced ;
var bool: aux10689_BOOL:: var_is_introduced ;
var bool: aux10690_BOOL:: var_is_introduced ;
var bool: aux10691_BOOL:: var_is_introduced ;
var bool: aux10692_BOOL:: var_is_introduced ;
var {0,1}: aux10692_INTEGER :: var_is_introduced ;
var 4..61: aux10693:: var_is_introduced ;
var bool: aux10694_BOOL:: var_is_introduced ;
var bool: aux10695_BOOL:: var_is_introduced ;
var bool: aux10696_BOOL:: var_is_introduced ;
var {0,1}: aux10696_INTEGER :: var_is_introduced ;
var bool: aux10697_BOOL:: var_is_introduced ;
var 2..59: aux10698:: var_is_introduced ;
var bool: aux10699_BOOL:: var_is_introduced ;
var bool: aux10700_BOOL:: var_is_introduced ;
var bool: aux10701_BOOL:: var_is_introduced ;
var bool: aux10702_BOOL:: var_is_introduced ;
var bool: aux10703_BOOL:: var_is_introduced ;
var {0,1}: aux10703_INTEGER :: var_is_introduced ;
var 2..59: aux10704:: var_is_introduced ;
var bool: aux10705_BOOL:: var_is_introduced ;
var bool: aux10706_BOOL:: var_is_introduced ;
var bool: aux10707_BOOL:: var_is_introduced ;
var bool: aux10708_BOOL:: var_is_introduced ;
var bool: aux10709_BOOL:: var_is_introduced ;
var {0,1}: aux10709_INTEGER :: var_is_introduced ;
var 2..59: aux10710:: var_is_introduced ;
var bool: aux10711_BOOL:: var_is_introduced ;
var bool: aux10712_BOOL:: var_is_introduced ;
var bool: aux10713_BOOL:: var_is_introduced ;
var bool: aux10714_BOOL:: var_is_introduced ;
var bool: aux10715_BOOL:: var_is_introduced ;
var {0,1}: aux10715_INTEGER :: var_is_introduced ;
var 2..59: aux10716:: var_is_introduced ;
var bool: aux10717_BOOL:: var_is_introduced ;
var bool: aux10718_BOOL:: var_is_introduced ;
var bool: aux10719_BOOL:: var_is_introduced ;
var bool: aux10720_BOOL:: var_is_introduced ;
var bool: aux10721_BOOL:: var_is_introduced ;
var {0,1}: aux10721_INTEGER :: var_is_introduced ;
var 3..60: aux10722:: var_is_introduced ;
var bool: aux10723_BOOL:: var_is_introduced ;
var bool: aux10724_BOOL:: var_is_introduced ;
var bool: aux10725_BOOL:: var_is_introduced ;
var bool: aux10726_BOOL:: var_is_introduced ;
var bool: aux10727_BOOL:: var_is_introduced ;
var {0,1}: aux10727_INTEGER :: var_is_introduced ;
var 3..60: aux10728:: var_is_introduced ;
var bool: aux10729_BOOL:: var_is_introduced ;
var bool: aux10730_BOOL:: var_is_introduced ;
var bool: aux10731_BOOL:: var_is_introduced ;
var bool: aux10732_BOOL:: var_is_introduced ;
var bool: aux10733_BOOL:: var_is_introduced ;
var {0,1}: aux10733_INTEGER :: var_is_introduced ;
var 1..58: aux10734:: var_is_introduced ;
var bool: aux10735_BOOL:: var_is_introduced ;
var bool: aux10736_BOOL:: var_is_introduced ;
var bool: aux10737_BOOL:: var_is_introduced ;
var bool: aux10738_BOOL:: var_is_introduced ;
var bool: aux10739_BOOL:: var_is_introduced ;
var {0,1}: aux10739_INTEGER :: var_is_introduced ;
var 3..60: aux10740:: var_is_introduced ;
var bool: aux10741_BOOL:: var_is_introduced ;
var bool: aux10742_BOOL:: var_is_introduced ;
var bool: aux10743_BOOL:: var_is_introduced ;
var bool: aux10744_BOOL:: var_is_introduced ;
var bool: aux10745_BOOL:: var_is_introduced ;
var {0,1}: aux10745_INTEGER :: var_is_introduced ;
var 1..58: aux10746:: var_is_introduced ;
var bool: aux10747_BOOL:: var_is_introduced ;
var bool: aux10748_BOOL:: var_is_introduced ;
var bool: aux10749_BOOL:: var_is_introduced ;
var bool: aux10750_BOOL:: var_is_introduced ;
var bool: aux10751_BOOL:: var_is_introduced ;
var {0,1}: aux10751_INTEGER :: var_is_introduced ;
var 4..61: aux10752:: var_is_introduced ;
var bool: aux10753_BOOL:: var_is_introduced ;
var bool: aux10754_BOOL:: var_is_introduced ;
var bool: aux10755_BOOL:: var_is_introduced ;
var bool: aux10756_BOOL:: var_is_introduced ;
var bool: aux10757_BOOL:: var_is_introduced ;
var {0,1}: aux10757_INTEGER :: var_is_introduced ;
var 4..61: aux10758:: var_is_introduced ;
var bool: aux10759_BOOL:: var_is_introduced ;
var bool: aux10760_BOOL:: var_is_introduced ;
var bool: aux10761_BOOL:: var_is_introduced ;
var bool: aux10762_BOOL:: var_is_introduced ;
var bool: aux10763_BOOL:: var_is_introduced ;
var {0,1}: aux10763_INTEGER :: var_is_introduced ;
var 2..59: aux10764:: var_is_introduced ;
var bool: aux10765_BOOL:: var_is_introduced ;
var bool: aux10766_BOOL:: var_is_introduced ;
var bool: aux10767_BOOL:: var_is_introduced ;
var bool: aux10768_BOOL:: var_is_introduced ;
var bool: aux10769_BOOL:: var_is_introduced ;
var {0,1}: aux10769_INTEGER :: var_is_introduced ;
var 3..60: aux10770:: var_is_introduced ;
var bool: aux10771_BOOL:: var_is_introduced ;
var bool: aux10772_BOOL:: var_is_introduced ;
var bool: aux10773_BOOL:: var_is_introduced ;
var bool: aux10774_BOOL:: var_is_introduced ;
var bool: aux10775_BOOL:: var_is_introduced ;
var {0,1}: aux10775_INTEGER :: var_is_introduced ;
var 3..60: aux10776:: var_is_introduced ;
var bool: aux10777_BOOL:: var_is_introduced ;
var bool: aux10778_BOOL:: var_is_introduced ;
var bool: aux10779_BOOL:: var_is_introduced ;
var bool: aux10780_BOOL:: var_is_introduced ;
var bool: aux10781_BOOL:: var_is_introduced ;
var {0,1}: aux10781_INTEGER :: var_is_introduced ;
var 2..59: aux10782:: var_is_introduced ;
var bool: aux10783_BOOL:: var_is_introduced ;
var bool: aux10784_BOOL:: var_is_introduced ;
var bool: aux10785_BOOL:: var_is_introduced ;
var bool: aux10786_BOOL:: var_is_introduced ;
var bool: aux10787_BOOL:: var_is_introduced ;
var {0,1}: aux10787_INTEGER :: var_is_introduced ;
var 4..61: aux10788:: var_is_introduced ;
var bool: aux10789_BOOL:: var_is_introduced ;
var bool: aux10790_BOOL:: var_is_introduced ;
var bool: aux10791_BOOL:: var_is_introduced ;
var bool: aux10792_BOOL:: var_is_introduced ;
var bool: aux10793_BOOL:: var_is_introduced ;
var {0,1}: aux10793_INTEGER :: var_is_introduced ;
var 4..61: aux10794:: var_is_introduced ;
var bool: aux10795_BOOL:: var_is_introduced ;
var bool: aux10796_BOOL:: var_is_introduced ;
var bool: aux10797_BOOL:: var_is_introduced ;
var bool: aux10798_BOOL:: var_is_introduced ;
var bool: aux10799_BOOL:: var_is_introduced ;
var {0,1}: aux10799_INTEGER :: var_is_introduced ;
var 4..61: aux10800:: var_is_introduced ;
var bool: aux10801_BOOL:: var_is_introduced ;
var bool: aux10802_BOOL:: var_is_introduced ;
var bool: aux10803_BOOL:: var_is_introduced ;
var bool: aux10804_BOOL:: var_is_introduced ;
var bool: aux10805_BOOL:: var_is_introduced ;
var {0,1}: aux10805_INTEGER :: var_is_introduced ;
var 5..62: aux10806:: var_is_introduced ;
var bool: aux10807_BOOL:: var_is_introduced ;
var bool: aux10808_BOOL:: var_is_introduced ;
var bool: aux10809_BOOL:: var_is_introduced ;
var bool: aux10810_BOOL:: var_is_introduced ;
var bool: aux10811_BOOL:: var_is_introduced ;
var {0,1}: aux10811_INTEGER :: var_is_introduced ;
var 3..60: aux10812:: var_is_introduced ;
var bool: aux10813_BOOL:: var_is_introduced ;
var bool: aux10814_BOOL:: var_is_introduced ;
var bool: aux10815_BOOL:: var_is_introduced ;
var {0,1}: aux10815_INTEGER :: var_is_introduced ;
var bool: aux10816_BOOL:: var_is_introduced ;
var 2..59: aux10817:: var_is_introduced ;
var bool: aux10818_BOOL:: var_is_introduced ;
var bool: aux10819_BOOL:: var_is_introduced ;
var bool: aux10820_BOOL:: var_is_introduced ;
var bool: aux10821_BOOL:: var_is_introduced ;
var bool: aux10822_BOOL:: var_is_introduced ;
var {0,1}: aux10822_INTEGER :: var_is_introduced ;
var 2..59: aux10823:: var_is_introduced ;
var bool: aux10824_BOOL:: var_is_introduced ;
var bool: aux10825_BOOL:: var_is_introduced ;
var bool: aux10826_BOOL:: var_is_introduced ;
var bool: aux10827_BOOL:: var_is_introduced ;
var bool: aux10828_BOOL:: var_is_introduced ;
var {0,1}: aux10828_INTEGER :: var_is_introduced ;
var 1..58: aux10829:: var_is_introduced ;
var bool: aux10830_BOOL:: var_is_introduced ;
var bool: aux10831_BOOL:: var_is_introduced ;
var bool: aux10832_BOOL:: var_is_introduced ;
var bool: aux10833_BOOL:: var_is_introduced ;
var bool: aux10834_BOOL:: var_is_introduced ;
var {0,1}: aux10834_INTEGER :: var_is_introduced ;
var 1..58: aux10835:: var_is_introduced ;
var bool: aux10836_BOOL:: var_is_introduced ;
var bool: aux10837_BOOL:: var_is_introduced ;
var bool: aux10838_BOOL:: var_is_introduced ;
var bool: aux10839_BOOL:: var_is_introduced ;
var bool: aux10840_BOOL:: var_is_introduced ;
var {0,1}: aux10840_INTEGER :: var_is_introduced ;
var 2..59: aux10841:: var_is_introduced ;
var bool: aux10842_BOOL:: var_is_introduced ;
var bool: aux10843_BOOL:: var_is_introduced ;
var bool: aux10844_BOOL:: var_is_introduced ;
var bool: aux10845_BOOL:: var_is_introduced ;
var bool: aux10846_BOOL:: var_is_introduced ;
var {0,1}: aux10846_INTEGER :: var_is_introduced ;
var 3..60: aux10847:: var_is_introduced ;
var bool: aux10848_BOOL:: var_is_introduced ;
var bool: aux10849_BOOL:: var_is_introduced ;
var bool: aux10850_BOOL:: var_is_introduced ;
var bool: aux10851_BOOL:: var_is_introduced ;
var bool: aux10852_BOOL:: var_is_introduced ;
var {0,1}: aux10852_INTEGER :: var_is_introduced ;
var 3..60: aux10853:: var_is_introduced ;
var bool: aux10854_BOOL:: var_is_introduced ;
var bool: aux10855_BOOL:: var_is_introduced ;
var bool: aux10856_BOOL:: var_is_introduced ;
var bool: aux10857_BOOL:: var_is_introduced ;
var bool: aux10858_BOOL:: var_is_introduced ;
var {0,1}: aux10858_INTEGER :: var_is_introduced ;
var 2..59: aux10859:: var_is_introduced ;
var bool: aux10860_BOOL:: var_is_introduced ;
var bool: aux10861_BOOL:: var_is_introduced ;
var bool: aux10862_BOOL:: var_is_introduced ;
var bool: aux10863_BOOL:: var_is_introduced ;
var bool: aux10864_BOOL:: var_is_introduced ;
var {0,1}: aux10864_INTEGER :: var_is_introduced ;
var 3..60: aux10865:: var_is_introduced ;
var bool: aux10866_BOOL:: var_is_introduced ;
var bool: aux10867_BOOL:: var_is_introduced ;
var bool: aux10868_BOOL:: var_is_introduced ;
var bool: aux10869_BOOL:: var_is_introduced ;
var bool: aux10870_BOOL:: var_is_introduced ;
var {0,1}: aux10870_INTEGER :: var_is_introduced ;
var 4..61: aux10871:: var_is_introduced ;
var bool: aux10872_BOOL:: var_is_introduced ;
var bool: aux10873_BOOL:: var_is_introduced ;
var bool: aux10874_BOOL:: var_is_introduced ;
var bool: aux10875_BOOL:: var_is_introduced ;
var bool: aux10876_BOOL:: var_is_introduced ;
var {0,1}: aux10876_INTEGER :: var_is_introduced ;
var 4..61: aux10877:: var_is_introduced ;
var bool: aux10878_BOOL:: var_is_introduced ;
var bool: aux10879_BOOL:: var_is_introduced ;
var bool: aux10880_BOOL:: var_is_introduced ;
var bool: aux10881_BOOL:: var_is_introduced ;
var bool: aux10882_BOOL:: var_is_introduced ;
var {0,1}: aux10882_INTEGER :: var_is_introduced ;
var 2..59: aux10883:: var_is_introduced ;
var bool: aux10884_BOOL:: var_is_introduced ;
var bool: aux10885_BOOL:: var_is_introduced ;
var bool: aux10886_BOOL:: var_is_introduced ;
var bool: aux10887_BOOL:: var_is_introduced ;
var bool: aux10888_BOOL:: var_is_introduced ;
var {0,1}: aux10888_INTEGER :: var_is_introduced ;
var 3..60: aux10889:: var_is_introduced ;
var bool: aux10890_BOOL:: var_is_introduced ;
var bool: aux10891_BOOL:: var_is_introduced ;
var bool: aux10892_BOOL:: var_is_introduced ;
var bool: aux10893_BOOL:: var_is_introduced ;
var bool: aux10894_BOOL:: var_is_introduced ;
var {0,1}: aux10894_INTEGER :: var_is_introduced ;
var 3..60: aux10895:: var_is_introduced ;
var bool: aux10896_BOOL:: var_is_introduced ;
var bool: aux10897_BOOL:: var_is_introduced ;
var bool: aux10898_BOOL:: var_is_introduced ;
var bool: aux10899_BOOL:: var_is_introduced ;
var bool: aux10900_BOOL:: var_is_introduced ;
var {0,1}: aux10900_INTEGER :: var_is_introduced ;
var 3..60: aux10901:: var_is_introduced ;
var bool: aux10902_BOOL:: var_is_introduced ;
var bool: aux10903_BOOL:: var_is_introduced ;
var bool: aux10904_BOOL:: var_is_introduced ;
var bool: aux10905_BOOL:: var_is_introduced ;
var bool: aux10906_BOOL:: var_is_introduced ;
var {0,1}: aux10906_INTEGER :: var_is_introduced ;
var 4..61: aux10907:: var_is_introduced ;
var bool: aux10908_BOOL:: var_is_introduced ;
var bool: aux10909_BOOL:: var_is_introduced ;
var bool: aux10910_BOOL:: var_is_introduced ;
var bool: aux10911_BOOL:: var_is_introduced ;
var bool: aux10912_BOOL:: var_is_introduced ;
var {0,1}: aux10912_INTEGER :: var_is_introduced ;
var 4..61: aux10913:: var_is_introduced ;
var bool: aux10914_BOOL:: var_is_introduced ;
var bool: aux10915_BOOL:: var_is_introduced ;
var bool: aux10916_BOOL:: var_is_introduced ;
var bool: aux10917_BOOL:: var_is_introduced ;
var bool: aux10918_BOOL:: var_is_introduced ;
var {0,1}: aux10918_INTEGER :: var_is_introduced ;
var 4..61: aux10919:: var_is_introduced ;
var bool: aux10920_BOOL:: var_is_introduced ;
var bool: aux10921_BOOL:: var_is_introduced ;
var bool: aux10922_BOOL:: var_is_introduced ;
var bool: aux10923_BOOL:: var_is_introduced ;
var bool: aux10924_BOOL:: var_is_introduced ;
var {0,1}: aux10924_INTEGER :: var_is_introduced ;
var 5..62: aux10925:: var_is_introduced ;
var bool: aux10926_BOOL:: var_is_introduced ;
var bool: aux10927_BOOL:: var_is_introduced ;
var bool: aux10928_BOOL:: var_is_introduced ;
var bool: aux10929_BOOL:: var_is_introduced ;
var bool: aux10930_BOOL:: var_is_introduced ;
var {0,1}: aux10930_INTEGER :: var_is_introduced ;
var 2..59: aux10931:: var_is_introduced ;
var bool: aux10932_BOOL:: var_is_introduced ;
var bool: aux10933_BOOL:: var_is_introduced ;
var bool: aux10934_BOOL:: var_is_introduced ;
var {0,1}: aux10934_INTEGER :: var_is_introduced ;
var bool: aux10935_BOOL:: var_is_introduced ;
var 2..59: aux10936:: var_is_introduced ;
var bool: aux10937_BOOL:: var_is_introduced ;
var bool: aux10938_BOOL:: var_is_introduced ;
var bool: aux10939_BOOL:: var_is_introduced ;
var bool: aux10940_BOOL:: var_is_introduced ;
var bool: aux10941_BOOL:: var_is_introduced ;
var {0,1}: aux10941_INTEGER :: var_is_introduced ;
var 2..59: aux10942:: var_is_introduced ;
var bool: aux10943_BOOL:: var_is_introduced ;
var bool: aux10944_BOOL:: var_is_introduced ;
var bool: aux10945_BOOL:: var_is_introduced ;
var bool: aux10946_BOOL:: var_is_introduced ;
var bool: aux10947_BOOL:: var_is_introduced ;
var {0,1}: aux10947_INTEGER :: var_is_introduced ;
var 2..59: aux10948:: var_is_introduced ;
var bool: aux10949_BOOL:: var_is_introduced ;
var bool: aux10950_BOOL:: var_is_introduced ;
var bool: aux10951_BOOL:: var_is_introduced ;
var bool: aux10952_BOOL:: var_is_introduced ;
var bool: aux10953_BOOL:: var_is_introduced ;
var {0,1}: aux10953_INTEGER :: var_is_introduced ;
var 2..59: aux10954:: var_is_introduced ;
var bool: aux10955_BOOL:: var_is_introduced ;
var bool: aux10956_BOOL:: var_is_introduced ;
var bool: aux10957_BOOL:: var_is_introduced ;
var bool: aux10958_BOOL:: var_is_introduced ;
var bool: aux10959_BOOL:: var_is_introduced ;
var {0,1}: aux10959_INTEGER :: var_is_introduced ;
var 3..60: aux10960:: var_is_introduced ;
var bool: aux10961_BOOL:: var_is_introduced ;
var bool: aux10962_BOOL:: var_is_introduced ;
var bool: aux10963_BOOL:: var_is_introduced ;
var bool: aux10964_BOOL:: var_is_introduced ;
var bool: aux10965_BOOL:: var_is_introduced ;
var {0,1}: aux10965_INTEGER :: var_is_introduced ;
var 3..60: aux10966:: var_is_introduced ;
var bool: aux10967_BOOL:: var_is_introduced ;
var bool: aux10968_BOOL:: var_is_introduced ;
var bool: aux10969_BOOL:: var_is_introduced ;
var bool: aux10970_BOOL:: var_is_introduced ;
var bool: aux10971_BOOL:: var_is_introduced ;
var {0,1}: aux10971_INTEGER :: var_is_introduced ;
var 1..58: aux10972:: var_is_introduced ;
var bool: aux10973_BOOL:: var_is_introduced ;
var bool: aux10974_BOOL:: var_is_introduced ;
var bool: aux10975_BOOL:: var_is_introduced ;
var bool: aux10976_BOOL:: var_is_introduced ;
var bool: aux10977_BOOL:: var_is_introduced ;
var {0,1}: aux10977_INTEGER :: var_is_introduced ;
var 3..60: aux10978:: var_is_introduced ;
var bool: aux10979_BOOL:: var_is_introduced ;
var bool: aux10980_BOOL:: var_is_introduced ;
var bool: aux10981_BOOL:: var_is_introduced ;
var bool: aux10982_BOOL:: var_is_introduced ;
var bool: aux10983_BOOL:: var_is_introduced ;
var {0,1}: aux10983_INTEGER :: var_is_introduced ;
var 4..61: aux10984:: var_is_introduced ;
var bool: aux10985_BOOL:: var_is_introduced ;
var bool: aux10986_BOOL:: var_is_introduced ;
var bool: aux10987_BOOL:: var_is_introduced ;
var bool: aux10988_BOOL:: var_is_introduced ;
var bool: aux10989_BOOL:: var_is_introduced ;
var {0,1}: aux10989_INTEGER :: var_is_introduced ;
var 4..61: aux10990:: var_is_introduced ;
var bool: aux10991_BOOL:: var_is_introduced ;
var bool: aux10992_BOOL:: var_is_introduced ;
var bool: aux10993_BOOL:: var_is_introduced ;
var bool: aux10994_BOOL:: var_is_introduced ;
var bool: aux10995_BOOL:: var_is_introduced ;
var {0,1}: aux10995_INTEGER :: var_is_introduced ;
var 2..59: aux10996:: var_is_introduced ;
var bool: aux10997_BOOL:: var_is_introduced ;
var bool: aux10998_BOOL:: var_is_introduced ;
var bool: aux10999_BOOL:: var_is_introduced ;
var bool: aux11000_BOOL:: var_is_introduced ;
var bool: aux11001_BOOL:: var_is_introduced ;
var {0,1}: aux11001_INTEGER :: var_is_introduced ;
var 3..60: aux11002:: var_is_introduced ;
var bool: aux11003_BOOL:: var_is_introduced ;
var bool: aux11004_BOOL:: var_is_introduced ;
var bool: aux11005_BOOL:: var_is_introduced ;
var bool: aux11006_BOOL:: var_is_introduced ;
var bool: aux11007_BOOL:: var_is_introduced ;
var {0,1}: aux11007_INTEGER :: var_is_introduced ;
var 2..59: aux11008:: var_is_introduced ;
var bool: aux11009_BOOL:: var_is_introduced ;
var bool: aux11010_BOOL:: var_is_introduced ;
var bool: aux11011_BOOL:: var_is_introduced ;
var bool: aux11012_BOOL:: var_is_introduced ;
var bool: aux11013_BOOL:: var_is_introduced ;
var {0,1}: aux11013_INTEGER :: var_is_introduced ;
var 3..60: aux11014:: var_is_introduced ;
var bool: aux11015_BOOL:: var_is_introduced ;
var bool: aux11016_BOOL:: var_is_introduced ;
var bool: aux11017_BOOL:: var_is_introduced ;
var bool: aux11018_BOOL:: var_is_introduced ;
var bool: aux11019_BOOL:: var_is_introduced ;
var {0,1}: aux11019_INTEGER :: var_is_introduced ;
var 3..60: aux11020:: var_is_introduced ;
var bool: aux11021_BOOL:: var_is_introduced ;
var bool: aux11022_BOOL:: var_is_introduced ;
var bool: aux11023_BOOL:: var_is_introduced ;
var bool: aux11024_BOOL:: var_is_introduced ;
var bool: aux11025_BOOL:: var_is_introduced ;
var {0,1}: aux11025_INTEGER :: var_is_introduced ;
var 4..61: aux11026:: var_is_introduced ;
var bool: aux11027_BOOL:: var_is_introduced ;
var bool: aux11028_BOOL:: var_is_introduced ;
var bool: aux11029_BOOL:: var_is_introduced ;
var bool: aux11030_BOOL:: var_is_introduced ;
var bool: aux11031_BOOL:: var_is_introduced ;
var {0,1}: aux11031_INTEGER :: var_is_introduced ;
var 4..61: aux11032:: var_is_introduced ;
var bool: aux11033_BOOL:: var_is_introduced ;
var bool: aux11034_BOOL:: var_is_introduced ;
var bool: aux11035_BOOL:: var_is_introduced ;
var bool: aux11036_BOOL:: var_is_introduced ;
var bool: aux11037_BOOL:: var_is_introduced ;
var {0,1}: aux11037_INTEGER :: var_is_introduced ;
var 4..61: aux11038:: var_is_introduced ;
var bool: aux11039_BOOL:: var_is_introduced ;
var bool: aux11040_BOOL:: var_is_introduced ;
var bool: aux11041_BOOL:: var_is_introduced ;
var bool: aux11042_BOOL:: var_is_introduced ;
var bool: aux11043_BOOL:: var_is_introduced ;
var {0,1}: aux11043_INTEGER :: var_is_introduced ;
var 5..62: aux11044:: var_is_introduced ;
var bool: aux11045_BOOL:: var_is_introduced ;
var bool: aux11046_BOOL:: var_is_introduced ;
var bool: aux11047_BOOL:: var_is_introduced ;
var bool: aux11048_BOOL:: var_is_introduced ;
var bool: aux11049_BOOL:: var_is_introduced ;
var {0,1}: aux11049_INTEGER :: var_is_introduced ;
var 1..58: aux11050:: var_is_introduced ;
var bool: aux11051_BOOL:: var_is_introduced ;
var bool: aux11052_BOOL:: var_is_introduced ;
var bool: aux11053_BOOL:: var_is_introduced ;
var {0,1}: aux11053_INTEGER :: var_is_introduced ;
var bool: aux11054_BOOL:: var_is_introduced ;
var 2..59: aux11055:: var_is_introduced ;
var bool: aux11056_BOOL:: var_is_introduced ;
var bool: aux11057_BOOL:: var_is_introduced ;
var bool: aux11058_BOOL:: var_is_introduced ;
var {0,1}: aux11058_INTEGER :: var_is_introduced ;
var 2..59: aux11059:: var_is_introduced ;
var bool: aux11060_BOOL:: var_is_introduced ;
var bool: aux11061_BOOL:: var_is_introduced ;
var bool: aux11062_BOOL:: var_is_introduced ;
var bool: aux11063_BOOL:: var_is_introduced ;
var bool: aux11064_BOOL:: var_is_introduced ;
var {0,1}: aux11064_INTEGER :: var_is_introduced ;
var 2..59: aux11065:: var_is_introduced ;
var bool: aux11066_BOOL:: var_is_introduced ;
var bool: aux11067_BOOL:: var_is_introduced ;
var bool: aux11068_BOOL:: var_is_introduced ;
var bool: aux11069_BOOL:: var_is_introduced ;
var bool: aux11070_BOOL:: var_is_introduced ;
var {0,1}: aux11070_INTEGER :: var_is_introduced ;
var 2..59: aux11071:: var_is_introduced ;
var bool: aux11072_BOOL:: var_is_introduced ;
var bool: aux11073_BOOL:: var_is_introduced ;
var bool: aux11074_BOOL:: var_is_introduced ;
var bool: aux11075_BOOL:: var_is_introduced ;
var bool: aux11076_BOOL:: var_is_introduced ;
var {0,1}: aux11076_INTEGER :: var_is_introduced ;
var 2..59: aux11077:: var_is_introduced ;
var bool: aux11078_BOOL:: var_is_introduced ;
var bool: aux11079_BOOL:: var_is_introduced ;
var bool: aux11080_BOOL:: var_is_introduced ;
var bool: aux11081_BOOL:: var_is_introduced ;
var bool: aux11082_BOOL:: var_is_introduced ;
var {0,1}: aux11082_INTEGER :: var_is_introduced ;
var 3..60: aux11083:: var_is_introduced ;
var bool: aux11084_BOOL:: var_is_introduced ;
var bool: aux11085_BOOL:: var_is_introduced ;
var bool: aux11086_BOOL:: var_is_introduced ;
var bool: aux11087_BOOL:: var_is_introduced ;
var bool: aux11088_BOOL:: var_is_introduced ;
var {0,1}: aux11088_INTEGER :: var_is_introduced ;
var 3..60: aux11089:: var_is_introduced ;
var bool: aux11090_BOOL:: var_is_introduced ;
var bool: aux11091_BOOL:: var_is_introduced ;
var bool: aux11092_BOOL:: var_is_introduced ;
var bool: aux11093_BOOL:: var_is_introduced ;
var bool: aux11094_BOOL:: var_is_introduced ;
var {0,1}: aux11094_INTEGER :: var_is_introduced ;
var 1..58: aux11095:: var_is_introduced ;
var bool: aux11096_BOOL:: var_is_introduced ;
var bool: aux11097_BOOL:: var_is_introduced ;
var bool: aux11098_BOOL:: var_is_introduced ;
var bool: aux11099_BOOL:: var_is_introduced ;
var bool: aux11100_BOOL:: var_is_introduced ;
var {0,1}: aux11100_INTEGER :: var_is_introduced ;
var 3..60: aux11101:: var_is_introduced ;
var bool: aux11102_BOOL:: var_is_introduced ;
var bool: aux11103_BOOL:: var_is_introduced ;
var bool: aux11104_BOOL:: var_is_introduced ;
var bool: aux11105_BOOL:: var_is_introduced ;
var bool: aux11106_BOOL:: var_is_introduced ;
var {0,1}: aux11106_INTEGER :: var_is_introduced ;
var 1..58: aux11107:: var_is_introduced ;
var bool: aux11108_BOOL:: var_is_introduced ;
var bool: aux11109_BOOL:: var_is_introduced ;
var bool: aux11110_BOOL:: var_is_introduced ;
var bool: aux11111_BOOL:: var_is_introduced ;
var bool: aux11112_BOOL:: var_is_introduced ;
var {0,1}: aux11112_INTEGER :: var_is_introduced ;
var 4..61: aux11113:: var_is_introduced ;
var bool: aux11114_BOOL:: var_is_introduced ;
var bool: aux11115_BOOL:: var_is_introduced ;
var bool: aux11116_BOOL:: var_is_introduced ;
var bool: aux11117_BOOL:: var_is_introduced ;
var bool: aux11118_BOOL:: var_is_introduced ;
var {0,1}: aux11118_INTEGER :: var_is_introduced ;
var 4..61: aux11119:: var_is_introduced ;
var bool: aux11120_BOOL:: var_is_introduced ;
var bool: aux11121_BOOL:: var_is_introduced ;
var bool: aux11122_BOOL:: var_is_introduced ;
var bool: aux11123_BOOL:: var_is_introduced ;
var bool: aux11124_BOOL:: var_is_introduced ;
var {0,1}: aux11124_INTEGER :: var_is_introduced ;
var 2..59: aux11125:: var_is_introduced ;
var bool: aux11126_BOOL:: var_is_introduced ;
var bool: aux11127_BOOL:: var_is_introduced ;
var bool: aux11128_BOOL:: var_is_introduced ;
var bool: aux11129_BOOL:: var_is_introduced ;
var bool: aux11130_BOOL:: var_is_introduced ;
var {0,1}: aux11130_INTEGER :: var_is_introduced ;
var 3..60: aux11131:: var_is_introduced ;
var bool: aux11132_BOOL:: var_is_introduced ;
var bool: aux11133_BOOL:: var_is_introduced ;
var bool: aux11134_BOOL:: var_is_introduced ;
var bool: aux11135_BOOL:: var_is_introduced ;
var bool: aux11136_BOOL:: var_is_introduced ;
var {0,1}: aux11136_INTEGER :: var_is_introduced ;
var 3..60: aux11137:: var_is_introduced ;
var bool: aux11138_BOOL:: var_is_introduced ;
var bool: aux11139_BOOL:: var_is_introduced ;
var bool: aux11140_BOOL:: var_is_introduced ;
var bool: aux11141_BOOL:: var_is_introduced ;
var bool: aux11142_BOOL:: var_is_introduced ;
var {0,1}: aux11142_INTEGER :: var_is_introduced ;
var 3..60: aux11143:: var_is_introduced ;
var bool: aux11144_BOOL:: var_is_introduced ;
var bool: aux11145_BOOL:: var_is_introduced ;
var bool: aux11146_BOOL:: var_is_introduced ;
var bool: aux11147_BOOL:: var_is_introduced ;
var bool: aux11148_BOOL:: var_is_introduced ;
var {0,1}: aux11148_INTEGER :: var_is_introduced ;
var 4..61: aux11149:: var_is_introduced ;
var bool: aux11150_BOOL:: var_is_introduced ;
var bool: aux11151_BOOL:: var_is_introduced ;
var bool: aux11152_BOOL:: var_is_introduced ;
var bool: aux11153_BOOL:: var_is_introduced ;
var bool: aux11154_BOOL:: var_is_introduced ;
var {0,1}: aux11154_INTEGER :: var_is_introduced ;
var 4..61: aux11155:: var_is_introduced ;
var bool: aux11156_BOOL:: var_is_introduced ;
var bool: aux11157_BOOL:: var_is_introduced ;
var bool: aux11158_BOOL:: var_is_introduced ;
var bool: aux11159_BOOL:: var_is_introduced ;
var bool: aux11160_BOOL:: var_is_introduced ;
var {0,1}: aux11160_INTEGER :: var_is_introduced ;
var 4..61: aux11161:: var_is_introduced ;
var bool: aux11162_BOOL:: var_is_introduced ;
var bool: aux11163_BOOL:: var_is_introduced ;
var bool: aux11164_BOOL:: var_is_introduced ;
var bool: aux11165_BOOL:: var_is_introduced ;
var bool: aux11166_BOOL:: var_is_introduced ;
var {0,1}: aux11166_INTEGER :: var_is_introduced ;
var 5..62: aux11167:: var_is_introduced ;
var bool: aux11168_BOOL:: var_is_introduced ;
var bool: aux11169_BOOL:: var_is_introduced ;
var bool: aux11170_BOOL:: var_is_introduced ;
var bool: aux11171_BOOL:: var_is_introduced ;
var bool: aux11172_BOOL:: var_is_introduced ;
var {0,1}: aux11172_INTEGER :: var_is_introduced ;
var bool: aux11173_BOOL:: var_is_introduced ;
var 2..59: aux11174:: var_is_introduced ;
var bool: aux11175_BOOL:: var_is_introduced ;
var bool: aux11176_BOOL:: var_is_introduced ;
var bool: aux11177_BOOL:: var_is_introduced ;
var bool: aux11178_BOOL:: var_is_introduced ;
var bool: aux11179_BOOL:: var_is_introduced ;
var {0,1}: aux11179_INTEGER :: var_is_introduced ;
var 2..59: aux11180:: var_is_introduced ;
var bool: aux11181_BOOL:: var_is_introduced ;
var bool: aux11182_BOOL:: var_is_introduced ;
var bool: aux11183_BOOL:: var_is_introduced ;
var bool: aux11184_BOOL:: var_is_introduced ;
var bool: aux11185_BOOL:: var_is_introduced ;
var {0,1}: aux11185_INTEGER :: var_is_introduced ;
var 2..59: aux11186:: var_is_introduced ;
var bool: aux11187_BOOL:: var_is_introduced ;
var bool: aux11188_BOOL:: var_is_introduced ;
var bool: aux11189_BOOL:: var_is_introduced ;
var bool: aux11190_BOOL:: var_is_introduced ;
var bool: aux11191_BOOL:: var_is_introduced ;
var {0,1}: aux11191_INTEGER :: var_is_introduced ;
var 2..59: aux11192:: var_is_introduced ;
var bool: aux11193_BOOL:: var_is_introduced ;
var bool: aux11194_BOOL:: var_is_introduced ;
var bool: aux11195_BOOL:: var_is_introduced ;
var bool: aux11196_BOOL:: var_is_introduced ;
var bool: aux11197_BOOL:: var_is_introduced ;
var {0,1}: aux11197_INTEGER :: var_is_introduced ;
var 3..60: aux11198:: var_is_introduced ;
var bool: aux11199_BOOL:: var_is_introduced ;
var bool: aux11200_BOOL:: var_is_introduced ;
var bool: aux11201_BOOL:: var_is_introduced ;
var bool: aux11202_BOOL:: var_is_introduced ;
var bool: aux11203_BOOL:: var_is_introduced ;
var {0,1}: aux11203_INTEGER :: var_is_introduced ;
var 3..60: aux11204:: var_is_introduced ;
var bool: aux11205_BOOL:: var_is_introduced ;
var bool: aux11206_BOOL:: var_is_introduced ;
var bool: aux11207_BOOL:: var_is_introduced ;
var bool: aux11208_BOOL:: var_is_introduced ;
var bool: aux11209_BOOL:: var_is_introduced ;
var {0,1}: aux11209_INTEGER :: var_is_introduced ;
var 1..58: aux11210:: var_is_introduced ;
var bool: aux11211_BOOL:: var_is_introduced ;
var bool: aux11212_BOOL:: var_is_introduced ;
var bool: aux11213_BOOL:: var_is_introduced ;
var bool: aux11214_BOOL:: var_is_introduced ;
var bool: aux11215_BOOL:: var_is_introduced ;
var {0,1}: aux11215_INTEGER :: var_is_introduced ;
var 3..60: aux11216:: var_is_introduced ;
var bool: aux11217_BOOL:: var_is_introduced ;
var bool: aux11218_BOOL:: var_is_introduced ;
var bool: aux11219_BOOL:: var_is_introduced ;
var bool: aux11220_BOOL:: var_is_introduced ;
var bool: aux11221_BOOL:: var_is_introduced ;
var {0,1}: aux11221_INTEGER :: var_is_introduced ;
var 1..58: aux11222:: var_is_introduced ;
var bool: aux11223_BOOL:: var_is_introduced ;
var bool: aux11224_BOOL:: var_is_introduced ;
var bool: aux11225_BOOL:: var_is_introduced ;
var bool: aux11226_BOOL:: var_is_introduced ;
var bool: aux11227_BOOL:: var_is_introduced ;
var {0,1}: aux11227_INTEGER :: var_is_introduced ;
var 4..61: aux11228:: var_is_introduced ;
var bool: aux11229_BOOL:: var_is_introduced ;
var bool: aux11230_BOOL:: var_is_introduced ;
var bool: aux11231_BOOL:: var_is_introduced ;
var bool: aux11232_BOOL:: var_is_introduced ;
var bool: aux11233_BOOL:: var_is_introduced ;
var {0,1}: aux11233_INTEGER :: var_is_introduced ;
var 4..61: aux11234:: var_is_introduced ;
var bool: aux11235_BOOL:: var_is_introduced ;
var bool: aux11236_BOOL:: var_is_introduced ;
var bool: aux11237_BOOL:: var_is_introduced ;
var bool: aux11238_BOOL:: var_is_introduced ;
var bool: aux11239_BOOL:: var_is_introduced ;
var {0,1}: aux11239_INTEGER :: var_is_introduced ;
var 2..59: aux11240:: var_is_introduced ;
var bool: aux11241_BOOL:: var_is_introduced ;
var bool: aux11242_BOOL:: var_is_introduced ;
var bool: aux11243_BOOL:: var_is_introduced ;
var bool: aux11244_BOOL:: var_is_introduced ;
var bool: aux11245_BOOL:: var_is_introduced ;
var {0,1}: aux11245_INTEGER :: var_is_introduced ;
var 3..60: aux11246:: var_is_introduced ;
var bool: aux11247_BOOL:: var_is_introduced ;
var bool: aux11248_BOOL:: var_is_introduced ;
var bool: aux11249_BOOL:: var_is_introduced ;
var bool: aux11250_BOOL:: var_is_introduced ;
var bool: aux11251_BOOL:: var_is_introduced ;
var {0,1}: aux11251_INTEGER :: var_is_introduced ;
var 3..60: aux11252:: var_is_introduced ;
var bool: aux11253_BOOL:: var_is_introduced ;
var bool: aux11254_BOOL:: var_is_introduced ;
var bool: aux11255_BOOL:: var_is_introduced ;
var bool: aux11256_BOOL:: var_is_introduced ;
var bool: aux11257_BOOL:: var_is_introduced ;
var {0,1}: aux11257_INTEGER :: var_is_introduced ;
var 2..59: aux11258:: var_is_introduced ;
var bool: aux11259_BOOL:: var_is_introduced ;
var bool: aux11260_BOOL:: var_is_introduced ;
var bool: aux11261_BOOL:: var_is_introduced ;
var bool: aux11262_BOOL:: var_is_introduced ;
var bool: aux11263_BOOL:: var_is_introduced ;
var {0,1}: aux11263_INTEGER :: var_is_introduced ;
var 3..60: aux11264:: var_is_introduced ;
var bool: aux11265_BOOL:: var_is_introduced ;
var bool: aux11266_BOOL:: var_is_introduced ;
var bool: aux11267_BOOL:: var_is_introduced ;
var bool: aux11268_BOOL:: var_is_introduced ;
var bool: aux11269_BOOL:: var_is_introduced ;
var {0,1}: aux11269_INTEGER :: var_is_introduced ;
var 4..61: aux11270:: var_is_introduced ;
var bool: aux11271_BOOL:: var_is_introduced ;
var bool: aux11272_BOOL:: var_is_introduced ;
var bool: aux11273_BOOL:: var_is_introduced ;
var bool: aux11274_BOOL:: var_is_introduced ;
var bool: aux11275_BOOL:: var_is_introduced ;
var {0,1}: aux11275_INTEGER :: var_is_introduced ;
var 4..61: aux11276:: var_is_introduced ;
var bool: aux11277_BOOL:: var_is_introduced ;
var bool: aux11278_BOOL:: var_is_introduced ;
var bool: aux11279_BOOL:: var_is_introduced ;
var bool: aux11280_BOOL:: var_is_introduced ;
var bool: aux11281_BOOL:: var_is_introduced ;
var {0,1}: aux11281_INTEGER :: var_is_introduced ;
var 5..62: aux11282:: var_is_introduced ;
var bool: aux11283_BOOL:: var_is_introduced ;
var bool: aux11284_BOOL:: var_is_introduced ;
var bool: aux11285_BOOL:: var_is_introduced ;
var bool: aux11286_BOOL:: var_is_introduced ;
var bool: aux11287_BOOL:: var_is_introduced ;
var {0,1}: aux11287_INTEGER :: var_is_introduced ;
var 4..61: aux11288:: var_is_introduced ;
var bool: aux11289_BOOL:: var_is_introduced ;
var bool: aux11290_BOOL:: var_is_introduced ;
var bool: aux11291_BOOL:: var_is_introduced ;
var {0,1}: aux11291_INTEGER :: var_is_introduced ;
var bool: aux11292_BOOL:: var_is_introduced ;
var 2..59: aux11293:: var_is_introduced ;
var bool: aux11294_BOOL:: var_is_introduced ;
var bool: aux11295_BOOL:: var_is_introduced ;
var bool: aux11296_BOOL:: var_is_introduced ;
var bool: aux11297_BOOL:: var_is_introduced ;
var bool: aux11298_BOOL:: var_is_introduced ;
var {0,1}: aux11298_INTEGER :: var_is_introduced ;
var 2..59: aux11299:: var_is_introduced ;
var bool: aux11300_BOOL:: var_is_introduced ;
var bool: aux11301_BOOL:: var_is_introduced ;
var bool: aux11302_BOOL:: var_is_introduced ;
var bool: aux11303_BOOL:: var_is_introduced ;
var bool: aux11304_BOOL:: var_is_introduced ;
var {0,1}: aux11304_INTEGER :: var_is_introduced ;
var 2..59: aux11305:: var_is_introduced ;
var bool: aux11306_BOOL:: var_is_introduced ;
var bool: aux11307_BOOL:: var_is_introduced ;
var bool: aux11308_BOOL:: var_is_introduced ;
var bool: aux11309_BOOL:: var_is_introduced ;
var bool: aux11310_BOOL:: var_is_introduced ;
var {0,1}: aux11310_INTEGER :: var_is_introduced ;
var 2..59: aux11311:: var_is_introduced ;
var bool: aux11312_BOOL:: var_is_introduced ;
var bool: aux11313_BOOL:: var_is_introduced ;
var bool: aux11314_BOOL:: var_is_introduced ;
var bool: aux11315_BOOL:: var_is_introduced ;
var bool: aux11316_BOOL:: var_is_introduced ;
var {0,1}: aux11316_INTEGER :: var_is_introduced ;
var 3..60: aux11317:: var_is_introduced ;
var bool: aux11318_BOOL:: var_is_introduced ;
var bool: aux11319_BOOL:: var_is_introduced ;
var bool: aux11320_BOOL:: var_is_introduced ;
var bool: aux11321_BOOL:: var_is_introduced ;
var bool: aux11322_BOOL:: var_is_introduced ;
var {0,1}: aux11322_INTEGER :: var_is_introduced ;
var 3..60: aux11323:: var_is_introduced ;
var bool: aux11324_BOOL:: var_is_introduced ;
var bool: aux11325_BOOL:: var_is_introduced ;
var bool: aux11326_BOOL:: var_is_introduced ;
var bool: aux11327_BOOL:: var_is_introduced ;
var bool: aux11328_BOOL:: var_is_introduced ;
var {0,1}: aux11328_INTEGER :: var_is_introduced ;
var 1..58: aux11329:: var_is_introduced ;
var bool: aux11330_BOOL:: var_is_introduced ;
var bool: aux11331_BOOL:: var_is_introduced ;
var bool: aux11332_BOOL:: var_is_introduced ;
var bool: aux11333_BOOL:: var_is_introduced ;
var bool: aux11334_BOOL:: var_is_introduced ;
var {0,1}: aux11334_INTEGER :: var_is_introduced ;
var 3..60: aux11335:: var_is_introduced ;
var bool: aux11336_BOOL:: var_is_introduced ;
var bool: aux11337_BOOL:: var_is_introduced ;
var bool: aux11338_BOOL:: var_is_introduced ;
var bool: aux11339_BOOL:: var_is_introduced ;
var bool: aux11340_BOOL:: var_is_introduced ;
var {0,1}: aux11340_INTEGER :: var_is_introduced ;
var 1..58: aux11341:: var_is_introduced ;
var bool: aux11342_BOOL:: var_is_introduced ;
var bool: aux11343_BOOL:: var_is_introduced ;
var bool: aux11344_BOOL:: var_is_introduced ;
var bool: aux11345_BOOL:: var_is_introduced ;
var bool: aux11346_BOOL:: var_is_introduced ;
var {0,1}: aux11346_INTEGER :: var_is_introduced ;
var 4..61: aux11347:: var_is_introduced ;
var bool: aux11348_BOOL:: var_is_introduced ;
var bool: aux11349_BOOL:: var_is_introduced ;
var bool: aux11350_BOOL:: var_is_introduced ;
var bool: aux11351_BOOL:: var_is_introduced ;
var bool: aux11352_BOOL:: var_is_introduced ;
var {0,1}: aux11352_INTEGER :: var_is_introduced ;
var 4..61: aux11353:: var_is_introduced ;
var bool: aux11354_BOOL:: var_is_introduced ;
var bool: aux11355_BOOL:: var_is_introduced ;
var bool: aux11356_BOOL:: var_is_introduced ;
var bool: aux11357_BOOL:: var_is_introduced ;
var bool: aux11358_BOOL:: var_is_introduced ;
var {0,1}: aux11358_INTEGER :: var_is_introduced ;
var 2..59: aux11359:: var_is_introduced ;
var bool: aux11360_BOOL:: var_is_introduced ;
var bool: aux11361_BOOL:: var_is_introduced ;
var bool: aux11362_BOOL:: var_is_introduced ;
var bool: aux11363_BOOL:: var_is_introduced ;
var bool: aux11364_BOOL:: var_is_introduced ;
var {0,1}: aux11364_INTEGER :: var_is_introduced ;
var 3..60: aux11365:: var_is_introduced ;
var bool: aux11366_BOOL:: var_is_introduced ;
var bool: aux11367_BOOL:: var_is_introduced ;
var bool: aux11368_BOOL:: var_is_introduced ;
var bool: aux11369_BOOL:: var_is_introduced ;
var bool: aux11370_BOOL:: var_is_introduced ;
var {0,1}: aux11370_INTEGER :: var_is_introduced ;
var 3..60: aux11371:: var_is_introduced ;
var bool: aux11372_BOOL:: var_is_introduced ;
var bool: aux11373_BOOL:: var_is_introduced ;
var bool: aux11374_BOOL:: var_is_introduced ;
var bool: aux11375_BOOL:: var_is_introduced ;
var bool: aux11376_BOOL:: var_is_introduced ;
var {0,1}: aux11376_INTEGER :: var_is_introduced ;
var 2..59: aux11377:: var_is_introduced ;
var bool: aux11378_BOOL:: var_is_introduced ;
var bool: aux11379_BOOL:: var_is_introduced ;
var bool: aux11380_BOOL:: var_is_introduced ;
var bool: aux11381_BOOL:: var_is_introduced ;
var bool: aux11382_BOOL:: var_is_introduced ;
var {0,1}: aux11382_INTEGER :: var_is_introduced ;
var 3..60: aux11383:: var_is_introduced ;
var bool: aux11384_BOOL:: var_is_introduced ;
var bool: aux11385_BOOL:: var_is_introduced ;
var bool: aux11386_BOOL:: var_is_introduced ;
var bool: aux11387_BOOL:: var_is_introduced ;
var bool: aux11388_BOOL:: var_is_introduced ;
var {0,1}: aux11388_INTEGER :: var_is_introduced ;
var 4..61: aux11389:: var_is_introduced ;
var bool: aux11390_BOOL:: var_is_introduced ;
var bool: aux11391_BOOL:: var_is_introduced ;
var bool: aux11392_BOOL:: var_is_introduced ;
var bool: aux11393_BOOL:: var_is_introduced ;
var bool: aux11394_BOOL:: var_is_introduced ;
var {0,1}: aux11394_INTEGER :: var_is_introduced ;
var 4..61: aux11395:: var_is_introduced ;
var bool: aux11396_BOOL:: var_is_introduced ;
var bool: aux11397_BOOL:: var_is_introduced ;
var bool: aux11398_BOOL:: var_is_introduced ;
var bool: aux11399_BOOL:: var_is_introduced ;
var bool: aux11400_BOOL:: var_is_introduced ;
var {0,1}: aux11400_INTEGER :: var_is_introduced ;
var 5..62: aux11401:: var_is_introduced ;
var bool: aux11402_BOOL:: var_is_introduced ;
var bool: aux11403_BOOL:: var_is_introduced ;
var bool: aux11404_BOOL:: var_is_introduced ;
var bool: aux11405_BOOL:: var_is_introduced ;
var bool: aux11406_BOOL:: var_is_introduced ;
var {0,1}: aux11406_INTEGER :: var_is_introduced ;
var 4..61: aux11407:: var_is_introduced ;
var bool: aux11408_BOOL:: var_is_introduced ;
var bool: aux11409_BOOL:: var_is_introduced ;
var bool: aux11410_BOOL:: var_is_introduced ;
var {0,1}: aux11410_INTEGER :: var_is_introduced ;
var bool: aux11411_BOOL:: var_is_introduced ;
var 2..59: aux11412:: var_is_introduced ;
var bool: aux11413_BOOL:: var_is_introduced ;
var bool: aux11414_BOOL:: var_is_introduced ;
var bool: aux11415_BOOL:: var_is_introduced ;
var bool: aux11416_BOOL:: var_is_introduced ;
var bool: aux11417_BOOL:: var_is_introduced ;
var {0,1}: aux11417_INTEGER :: var_is_introduced ;
var 2..59: aux11418:: var_is_introduced ;
var bool: aux11419_BOOL:: var_is_introduced ;
var bool: aux11420_BOOL:: var_is_introduced ;
var bool: aux11421_BOOL:: var_is_introduced ;
var bool: aux11422_BOOL:: var_is_introduced ;
var bool: aux11423_BOOL:: var_is_introduced ;
var {0,1}: aux11423_INTEGER :: var_is_introduced ;
var 1..58: aux11424:: var_is_introduced ;
var bool: aux11425_BOOL:: var_is_introduced ;
var bool: aux11426_BOOL:: var_is_introduced ;
var bool: aux11427_BOOL:: var_is_introduced ;
var bool: aux11428_BOOL:: var_is_introduced ;
var bool: aux11429_BOOL:: var_is_introduced ;
var {0,1}: aux11429_INTEGER :: var_is_introduced ;
var 2..59: aux11430:: var_is_introduced ;
var bool: aux11431_BOOL:: var_is_introduced ;
var bool: aux11432_BOOL:: var_is_introduced ;
var bool: aux11433_BOOL:: var_is_introduced ;
var bool: aux11434_BOOL:: var_is_introduced ;
var bool: aux11435_BOOL:: var_is_introduced ;
var {0,1}: aux11435_INTEGER :: var_is_introduced ;
var 1..58: aux11436:: var_is_introduced ;
var bool: aux11437_BOOL:: var_is_introduced ;
var bool: aux11438_BOOL:: var_is_introduced ;
var bool: aux11439_BOOL:: var_is_introduced ;
var bool: aux11440_BOOL:: var_is_introduced ;
var bool: aux11441_BOOL:: var_is_introduced ;
var {0,1}: aux11441_INTEGER :: var_is_introduced ;
var 2..59: aux11442:: var_is_introduced ;
var bool: aux11443_BOOL:: var_is_introduced ;
var bool: aux11444_BOOL:: var_is_introduced ;
var bool: aux11445_BOOL:: var_is_introduced ;
var bool: aux11446_BOOL:: var_is_introduced ;
var bool: aux11447_BOOL:: var_is_introduced ;
var {0,1}: aux11447_INTEGER :: var_is_introduced ;
var 3..60: aux11448:: var_is_introduced ;
var bool: aux11449_BOOL:: var_is_introduced ;
var bool: aux11450_BOOL:: var_is_introduced ;
var bool: aux11451_BOOL:: var_is_introduced ;
var bool: aux11452_BOOL:: var_is_introduced ;
var bool: aux11453_BOOL:: var_is_introduced ;
var {0,1}: aux11453_INTEGER :: var_is_introduced ;
var 3..60: aux11454:: var_is_introduced ;
var bool: aux11455_BOOL:: var_is_introduced ;
var bool: aux11456_BOOL:: var_is_introduced ;
var bool: aux11457_BOOL:: var_is_introduced ;
var bool: aux11458_BOOL:: var_is_introduced ;
var bool: aux11459_BOOL:: var_is_introduced ;
var {0,1}: aux11459_INTEGER :: var_is_introduced ;
var 2..59: aux11460:: var_is_introduced ;
var bool: aux11461_BOOL:: var_is_introduced ;
var bool: aux11462_BOOL:: var_is_introduced ;
var bool: aux11463_BOOL:: var_is_introduced ;
var bool: aux11464_BOOL:: var_is_introduced ;
var bool: aux11465_BOOL:: var_is_introduced ;
var {0,1}: aux11465_INTEGER :: var_is_introduced ;
var 4..61: aux11466:: var_is_introduced ;
var bool: aux11467_BOOL:: var_is_introduced ;
var bool: aux11468_BOOL:: var_is_introduced ;
var bool: aux11469_BOOL:: var_is_introduced ;
var bool: aux11470_BOOL:: var_is_introduced ;
var bool: aux11471_BOOL:: var_is_introduced ;
var {0,1}: aux11471_INTEGER :: var_is_introduced ;
var 4..61: aux11472:: var_is_introduced ;
var bool: aux11473_BOOL:: var_is_introduced ;
var bool: aux11474_BOOL:: var_is_introduced ;
var bool: aux11475_BOOL:: var_is_introduced ;
var bool: aux11476_BOOL:: var_is_introduced ;
var bool: aux11477_BOOL:: var_is_introduced ;
var {0,1}: aux11477_INTEGER :: var_is_introduced ;
var 2..59: aux11478:: var_is_introduced ;
var bool: aux11479_BOOL:: var_is_introduced ;
var bool: aux11480_BOOL:: var_is_introduced ;
var bool: aux11481_BOOL:: var_is_introduced ;
var bool: aux11482_BOOL:: var_is_introduced ;
var bool: aux11483_BOOL:: var_is_introduced ;
var {0,1}: aux11483_INTEGER :: var_is_introduced ;
var 3..60: aux11484:: var_is_introduced ;
var bool: aux11485_BOOL:: var_is_introduced ;
var bool: aux11486_BOOL:: var_is_introduced ;
var bool: aux11487_BOOL:: var_is_introduced ;
var bool: aux11488_BOOL:: var_is_introduced ;
var bool: aux11489_BOOL:: var_is_introduced ;
var {0,1}: aux11489_INTEGER :: var_is_introduced ;
var 3..60: aux11490:: var_is_introduced ;
var bool: aux11491_BOOL:: var_is_introduced ;
var bool: aux11492_BOOL:: var_is_introduced ;
var bool: aux11493_BOOL:: var_is_introduced ;
var bool: aux11494_BOOL:: var_is_introduced ;
var bool: aux11495_BOOL:: var_is_introduced ;
var {0,1}: aux11495_INTEGER :: var_is_introduced ;
var 3..60: aux11496:: var_is_introduced ;
var bool: aux11497_BOOL:: var_is_introduced ;
var bool: aux11498_BOOL:: var_is_introduced ;
var bool: aux11499_BOOL:: var_is_introduced ;
var bool: aux11500_BOOL:: var_is_introduced ;
var bool: aux11501_BOOL:: var_is_introduced ;
var {0,1}: aux11501_INTEGER :: var_is_introduced ;
var 4..61: aux11502:: var_is_introduced ;
var bool: aux11503_BOOL:: var_is_introduced ;
var bool: aux11504_BOOL:: var_is_introduced ;
var bool: aux11505_BOOL:: var_is_introduced ;
var bool: aux11506_BOOL:: var_is_introduced ;
var bool: aux11507_BOOL:: var_is_introduced ;
var {0,1}: aux11507_INTEGER :: var_is_introduced ;
var 4..61: aux11508:: var_is_introduced ;
var bool: aux11509_BOOL:: var_is_introduced ;
var bool: aux11510_BOOL:: var_is_introduced ;
var bool: aux11511_BOOL:: var_is_introduced ;
var bool: aux11512_BOOL:: var_is_introduced ;
var bool: aux11513_BOOL:: var_is_introduced ;
var {0,1}: aux11513_INTEGER :: var_is_introduced ;
var 4..61: aux11514:: var_is_introduced ;
var bool: aux11515_BOOL:: var_is_introduced ;
var bool: aux11516_BOOL:: var_is_introduced ;
var bool: aux11517_BOOL:: var_is_introduced ;
var bool: aux11518_BOOL:: var_is_introduced ;
var bool: aux11519_BOOL:: var_is_introduced ;
var {0,1}: aux11519_INTEGER :: var_is_introduced ;
var 5..62: aux11520:: var_is_introduced ;
var bool: aux11521_BOOL:: var_is_introduced ;
var bool: aux11522_BOOL:: var_is_introduced ;
var bool: aux11523_BOOL:: var_is_introduced ;
var bool: aux11524_BOOL:: var_is_introduced ;
var bool: aux11525_BOOL:: var_is_introduced ;
var {0,1}: aux11525_INTEGER :: var_is_introduced ;
var 3..60: aux11526:: var_is_introduced ;
var bool: aux11527_BOOL:: var_is_introduced ;
var bool: aux11528_BOOL:: var_is_introduced ;
var bool: aux11529_BOOL:: var_is_introduced ;
var {0,1}: aux11529_INTEGER :: var_is_introduced ;
var bool: aux11530_BOOL:: var_is_introduced ;
var 2..59: aux11531:: var_is_introduced ;
var bool: aux11532_BOOL:: var_is_introduced ;
var bool: aux11533_BOOL:: var_is_introduced ;
var bool: aux11534_BOOL:: var_is_introduced ;
var bool: aux11535_BOOL:: var_is_introduced ;
var bool: aux11536_BOOL:: var_is_introduced ;
var {0,1}: aux11536_INTEGER :: var_is_introduced ;
var 2..59: aux11537:: var_is_introduced ;
var bool: aux11538_BOOL:: var_is_introduced ;
var bool: aux11539_BOOL:: var_is_introduced ;
var bool: aux11540_BOOL:: var_is_introduced ;
var bool: aux11541_BOOL:: var_is_introduced ;
var bool: aux11542_BOOL:: var_is_introduced ;
var {0,1}: aux11542_INTEGER :: var_is_introduced ;
var 2..59: aux11543:: var_is_introduced ;
var bool: aux11544_BOOL:: var_is_introduced ;
var bool: aux11545_BOOL:: var_is_introduced ;
var bool: aux11546_BOOL:: var_is_introduced ;
var bool: aux11547_BOOL:: var_is_introduced ;
var bool: aux11548_BOOL:: var_is_introduced ;
var {0,1}: aux11548_INTEGER :: var_is_introduced ;
var 2..59: aux11549:: var_is_introduced ;
var bool: aux11550_BOOL:: var_is_introduced ;
var bool: aux11551_BOOL:: var_is_introduced ;
var bool: aux11552_BOOL:: var_is_introduced ;
var bool: aux11553_BOOL:: var_is_introduced ;
var bool: aux11554_BOOL:: var_is_introduced ;
var {0,1}: aux11554_INTEGER :: var_is_introduced ;
var 3..60: aux11555:: var_is_introduced ;
var bool: aux11556_BOOL:: var_is_introduced ;
var bool: aux11557_BOOL:: var_is_introduced ;
var bool: aux11558_BOOL:: var_is_introduced ;
var bool: aux11559_BOOL:: var_is_introduced ;
var bool: aux11560_BOOL:: var_is_introduced ;
var {0,1}: aux11560_INTEGER :: var_is_introduced ;
var 1..58: aux11561:: var_is_introduced ;
var bool: aux11562_BOOL:: var_is_introduced ;
var bool: aux11563_BOOL:: var_is_introduced ;
var bool: aux11564_BOOL:: var_is_introduced ;
var bool: aux11565_BOOL:: var_is_introduced ;
var bool: aux11566_BOOL:: var_is_introduced ;
var {0,1}: aux11566_INTEGER :: var_is_introduced ;
var 1..58: aux11567:: var_is_introduced ;
var bool: aux11568_BOOL:: var_is_introduced ;
var bool: aux11569_BOOL:: var_is_introduced ;
var bool: aux11570_BOOL:: var_is_introduced ;
var bool: aux11571_BOOL:: var_is_introduced ;
var bool: aux11572_BOOL:: var_is_introduced ;
var {0,1}: aux11572_INTEGER :: var_is_introduced ;
var 3..60: aux11573:: var_is_introduced ;
var bool: aux11574_BOOL:: var_is_introduced ;
var bool: aux11575_BOOL:: var_is_introduced ;
var bool: aux11576_BOOL:: var_is_introduced ;
var bool: aux11577_BOOL:: var_is_introduced ;
var bool: aux11578_BOOL:: var_is_introduced ;
var {0,1}: aux11578_INTEGER :: var_is_introduced ;
var 3..60: aux11579:: var_is_introduced ;
var bool: aux11580_BOOL:: var_is_introduced ;
var bool: aux11581_BOOL:: var_is_introduced ;
var bool: aux11582_BOOL:: var_is_introduced ;
var bool: aux11583_BOOL:: var_is_introduced ;
var bool: aux11584_BOOL:: var_is_introduced ;
var {0,1}: aux11584_INTEGER :: var_is_introduced ;
var 4..61: aux11585:: var_is_introduced ;
var bool: aux11586_BOOL:: var_is_introduced ;
var bool: aux11587_BOOL:: var_is_introduced ;
var bool: aux11588_BOOL:: var_is_introduced ;
var bool: aux11589_BOOL:: var_is_introduced ;
var bool: aux11590_BOOL:: var_is_introduced ;
var {0,1}: aux11590_INTEGER :: var_is_introduced ;
var 4..61: aux11591:: var_is_introduced ;
var bool: aux11592_BOOL:: var_is_introduced ;
var bool: aux11593_BOOL:: var_is_introduced ;
var bool: aux11594_BOOL:: var_is_introduced ;
var bool: aux11595_BOOL:: var_is_introduced ;
var bool: aux11596_BOOL:: var_is_introduced ;
var {0,1}: aux11596_INTEGER :: var_is_introduced ;
var 2..59: aux11597:: var_is_introduced ;
var bool: aux11598_BOOL:: var_is_introduced ;
var bool: aux11599_BOOL:: var_is_introduced ;
var bool: aux11600_BOOL:: var_is_introduced ;
var bool: aux11601_BOOL:: var_is_introduced ;
var bool: aux11602_BOOL:: var_is_introduced ;
var {0,1}: aux11602_INTEGER :: var_is_introduced ;
var 2..59: aux11603:: var_is_introduced ;
var bool: aux11604_BOOL:: var_is_introduced ;
var bool: aux11605_BOOL:: var_is_introduced ;
var bool: aux11606_BOOL:: var_is_introduced ;
var bool: aux11607_BOOL:: var_is_introduced ;
var bool: aux11608_BOOL:: var_is_introduced ;
var {0,1}: aux11608_INTEGER :: var_is_introduced ;
var 3..60: aux11609:: var_is_introduced ;
var bool: aux11610_BOOL:: var_is_introduced ;
var bool: aux11611_BOOL:: var_is_introduced ;
var bool: aux11612_BOOL:: var_is_introduced ;
var bool: aux11613_BOOL:: var_is_introduced ;
var bool: aux11614_BOOL:: var_is_introduced ;
var {0,1}: aux11614_INTEGER :: var_is_introduced ;
var 3..60: aux11615:: var_is_introduced ;
var bool: aux11616_BOOL:: var_is_introduced ;
var bool: aux11617_BOOL:: var_is_introduced ;
var bool: aux11618_BOOL:: var_is_introduced ;
var bool: aux11619_BOOL:: var_is_introduced ;
var bool: aux11620_BOOL:: var_is_introduced ;
var {0,1}: aux11620_INTEGER :: var_is_introduced ;
var 4..61: aux11621:: var_is_introduced ;
var bool: aux11622_BOOL:: var_is_introduced ;
var bool: aux11623_BOOL:: var_is_introduced ;
var bool: aux11624_BOOL:: var_is_introduced ;
var bool: aux11625_BOOL:: var_is_introduced ;
var bool: aux11626_BOOL:: var_is_introduced ;
var {0,1}: aux11626_INTEGER :: var_is_introduced ;
var 4..61: aux11627:: var_is_introduced ;
var bool: aux11628_BOOL:: var_is_introduced ;
var bool: aux11629_BOOL:: var_is_introduced ;
var bool: aux11630_BOOL:: var_is_introduced ;
var bool: aux11631_BOOL:: var_is_introduced ;
var bool: aux11632_BOOL:: var_is_introduced ;
var {0,1}: aux11632_INTEGER :: var_is_introduced ;
var 4..61: aux11633:: var_is_introduced ;
var bool: aux11634_BOOL:: var_is_introduced ;
var bool: aux11635_BOOL:: var_is_introduced ;
var bool: aux11636_BOOL:: var_is_introduced ;
var bool: aux11637_BOOL:: var_is_introduced ;
var bool: aux11638_BOOL:: var_is_introduced ;
var {0,1}: aux11638_INTEGER :: var_is_introduced ;
var 5..62: aux11639:: var_is_introduced ;
var bool: aux11640_BOOL:: var_is_introduced ;
var bool: aux11641_BOOL:: var_is_introduced ;
var bool: aux11642_BOOL:: var_is_introduced ;
var bool: aux11643_BOOL:: var_is_introduced ;
var bool: aux11644_BOOL:: var_is_introduced ;
var {0,1}: aux11644_INTEGER :: var_is_introduced ;
var 3..60: aux11645:: var_is_introduced ;
var bool: aux11646_BOOL:: var_is_introduced ;
var bool: aux11647_BOOL:: var_is_introduced ;
var bool: aux11648_BOOL:: var_is_introduced ;
var {0,1}: aux11648_INTEGER :: var_is_introduced ;
var bool: aux11649_BOOL:: var_is_introduced ;
var 1..58: aux11650:: var_is_introduced ;
var bool: aux11651_BOOL:: var_is_introduced ;
var bool: aux11652_BOOL:: var_is_introduced ;
var bool: aux11653_BOOL:: var_is_introduced ;
var bool: aux11654_BOOL:: var_is_introduced ;
var bool: aux11655_BOOL:: var_is_introduced ;
var {0,1}: aux11655_INTEGER :: var_is_introduced ;
var 2..59: aux11656:: var_is_introduced ;
var bool: aux11657_BOOL:: var_is_introduced ;
var bool: aux11658_BOOL:: var_is_introduced ;
var bool: aux11659_BOOL:: var_is_introduced ;
var bool: aux11660_BOOL:: var_is_introduced ;
var bool: aux11661_BOOL:: var_is_introduced ;
var {0,1}: aux11661_INTEGER :: var_is_introduced ;
var 2..59: aux11662:: var_is_introduced ;
var bool: aux11663_BOOL:: var_is_introduced ;
var bool: aux11664_BOOL:: var_is_introduced ;
var bool: aux11665_BOOL:: var_is_introduced ;
var bool: aux11666_BOOL:: var_is_introduced ;
var bool: aux11667_BOOL:: var_is_introduced ;
var {0,1}: aux11667_INTEGER :: var_is_introduced ;
var 1..58: aux11668:: var_is_introduced ;
var bool: aux11669_BOOL:: var_is_introduced ;
var bool: aux11670_BOOL:: var_is_introduced ;
var bool: aux11671_BOOL:: var_is_introduced ;
var bool: aux11672_BOOL:: var_is_introduced ;
var bool: aux11673_BOOL:: var_is_introduced ;
var {0,1}: aux11673_INTEGER :: var_is_introduced ;
var 2..59: aux11674:: var_is_introduced ;
var bool: aux11675_BOOL:: var_is_introduced ;
var bool: aux11676_BOOL:: var_is_introduced ;
var bool: aux11677_BOOL:: var_is_introduced ;
var bool: aux11678_BOOL:: var_is_introduced ;
var bool: aux11679_BOOL:: var_is_introduced ;
var {0,1}: aux11679_INTEGER :: var_is_introduced ;
var 3..60: aux11680:: var_is_introduced ;
var bool: aux11681_BOOL:: var_is_introduced ;
var bool: aux11682_BOOL:: var_is_introduced ;
var bool: aux11683_BOOL:: var_is_introduced ;
var bool: aux11684_BOOL:: var_is_introduced ;
var bool: aux11685_BOOL:: var_is_introduced ;
var {0,1}: aux11685_INTEGER :: var_is_introduced ;
var 2..59: aux11686:: var_is_introduced ;
var bool: aux11687_BOOL:: var_is_introduced ;
var bool: aux11688_BOOL:: var_is_introduced ;
var bool: aux11689_BOOL:: var_is_introduced ;
var bool: aux11690_BOOL:: var_is_introduced ;
var bool: aux11691_BOOL:: var_is_introduced ;
var {0,1}: aux11691_INTEGER :: var_is_introduced ;
var 3..60: aux11692:: var_is_introduced ;
var bool: aux11693_BOOL:: var_is_introduced ;
var bool: aux11694_BOOL:: var_is_introduced ;
var bool: aux11695_BOOL:: var_is_introduced ;
var bool: aux11696_BOOL:: var_is_introduced ;
var bool: aux11697_BOOL:: var_is_introduced ;
var {0,1}: aux11697_INTEGER :: var_is_introduced ;
var 3..60: aux11698:: var_is_introduced ;
var bool: aux11699_BOOL:: var_is_introduced ;
var bool: aux11700_BOOL:: var_is_introduced ;
var bool: aux11701_BOOL:: var_is_introduced ;
var bool: aux11702_BOOL:: var_is_introduced ;
var bool: aux11703_BOOL:: var_is_introduced ;
var {0,1}: aux11703_INTEGER :: var_is_introduced ;
var 4..61: aux11704:: var_is_introduced ;
var bool: aux11705_BOOL:: var_is_introduced ;
var bool: aux11706_BOOL:: var_is_introduced ;
var bool: aux11707_BOOL:: var_is_introduced ;
var bool: aux11708_BOOL:: var_is_introduced ;
var bool: aux11709_BOOL:: var_is_introduced ;
var {0,1}: aux11709_INTEGER :: var_is_introduced ;
var 4..61: aux11710:: var_is_introduced ;
var bool: aux11711_BOOL:: var_is_introduced ;
var bool: aux11712_BOOL:: var_is_introduced ;
var bool: aux11713_BOOL:: var_is_introduced ;
var bool: aux11714_BOOL:: var_is_introduced ;
var bool: aux11715_BOOL:: var_is_introduced ;
var {0,1}: aux11715_INTEGER :: var_is_introduced ;
var 2..59: aux11716:: var_is_introduced ;
var bool: aux11717_BOOL:: var_is_introduced ;
var bool: aux11718_BOOL:: var_is_introduced ;
var bool: aux11719_BOOL:: var_is_introduced ;
var bool: aux11720_BOOL:: var_is_introduced ;
var bool: aux11721_BOOL:: var_is_introduced ;
var {0,1}: aux11721_INTEGER :: var_is_introduced ;
var 3..60: aux11722:: var_is_introduced ;
var bool: aux11723_BOOL:: var_is_introduced ;
var bool: aux11724_BOOL:: var_is_introduced ;
var bool: aux11725_BOOL:: var_is_introduced ;
var bool: aux11726_BOOL:: var_is_introduced ;
var bool: aux11727_BOOL:: var_is_introduced ;
var {0,1}: aux11727_INTEGER :: var_is_introduced ;
var 3..60: aux11728:: var_is_introduced ;
var bool: aux11729_BOOL:: var_is_introduced ;
var bool: aux11730_BOOL:: var_is_introduced ;
var bool: aux11731_BOOL:: var_is_introduced ;
var bool: aux11732_BOOL:: var_is_introduced ;
var bool: aux11733_BOOL:: var_is_introduced ;
var {0,1}: aux11733_INTEGER :: var_is_introduced ;
var 3..60: aux11734:: var_is_introduced ;
var bool: aux11735_BOOL:: var_is_introduced ;
var bool: aux11736_BOOL:: var_is_introduced ;
var bool: aux11737_BOOL:: var_is_introduced ;
var bool: aux11738_BOOL:: var_is_introduced ;
var bool: aux11739_BOOL:: var_is_introduced ;
var {0,1}: aux11739_INTEGER :: var_is_introduced ;
var 4..61: aux11740:: var_is_introduced ;
var bool: aux11741_BOOL:: var_is_introduced ;
var bool: aux11742_BOOL:: var_is_introduced ;
var bool: aux11743_BOOL:: var_is_introduced ;
var bool: aux11744_BOOL:: var_is_introduced ;
var bool: aux11745_BOOL:: var_is_introduced ;
var {0,1}: aux11745_INTEGER :: var_is_introduced ;
var 4..61: aux11746:: var_is_introduced ;
var bool: aux11747_BOOL:: var_is_introduced ;
var bool: aux11748_BOOL:: var_is_introduced ;
var bool: aux11749_BOOL:: var_is_introduced ;
var bool: aux11750_BOOL:: var_is_introduced ;
var bool: aux11751_BOOL:: var_is_introduced ;
var {0,1}: aux11751_INTEGER :: var_is_introduced ;
var 4..61: aux11752:: var_is_introduced ;
var bool: aux11753_BOOL:: var_is_introduced ;
var bool: aux11754_BOOL:: var_is_introduced ;
var bool: aux11755_BOOL:: var_is_introduced ;
var bool: aux11756_BOOL:: var_is_introduced ;
var bool: aux11757_BOOL:: var_is_introduced ;
var {0,1}: aux11757_INTEGER :: var_is_introduced ;
var 5..62: aux11758:: var_is_introduced ;
var bool: aux11759_BOOL:: var_is_introduced ;
var bool: aux11760_BOOL:: var_is_introduced ;
var bool: aux11761_BOOL:: var_is_introduced ;
var bool: aux11762_BOOL:: var_is_introduced ;
var bool: aux11763_BOOL:: var_is_introduced ;
var {0,1}: aux11763_INTEGER :: var_is_introduced ;
var 2..59: aux11764:: var_is_introduced ;
var bool: aux11765_BOOL:: var_is_introduced ;
var bool: aux11766_BOOL:: var_is_introduced ;
var bool: aux11767_BOOL:: var_is_introduced ;
var {0,1}: aux11767_INTEGER :: var_is_introduced ;
var bool: aux11768_BOOL:: var_is_introduced ;
var 2..59: aux11769:: var_is_introduced ;
var bool: aux11770_BOOL:: var_is_introduced ;
var bool: aux11771_BOOL:: var_is_introduced ;
var bool: aux11772_BOOL:: var_is_introduced ;
var bool: aux11773_BOOL:: var_is_introduced ;
var bool: aux11774_BOOL:: var_is_introduced ;
var {0,1}: aux11774_INTEGER :: var_is_introduced ;
var 1..58: aux11775:: var_is_introduced ;
var bool: aux11776_BOOL:: var_is_introduced ;
var bool: aux11777_BOOL:: var_is_introduced ;
var bool: aux11778_BOOL:: var_is_introduced ;
var bool: aux11779_BOOL:: var_is_introduced ;
var bool: aux11780_BOOL:: var_is_introduced ;
var {0,1}: aux11780_INTEGER :: var_is_introduced ;
var 2..59: aux11781:: var_is_introduced ;
var bool: aux11782_BOOL:: var_is_introduced ;
var bool: aux11783_BOOL:: var_is_introduced ;
var bool: aux11784_BOOL:: var_is_introduced ;
var bool: aux11785_BOOL:: var_is_introduced ;
var bool: aux11786_BOOL:: var_is_introduced ;
var {0,1}: aux11786_INTEGER :: var_is_introduced ;
var 2..59: aux11787:: var_is_introduced ;
var bool: aux11788_BOOL:: var_is_introduced ;
var bool: aux11789_BOOL:: var_is_introduced ;
var bool: aux11790_BOOL:: var_is_introduced ;
var bool: aux11791_BOOL:: var_is_introduced ;
var bool: aux11792_BOOL:: var_is_introduced ;
var {0,1}: aux11792_INTEGER :: var_is_introduced ;
var 1..58: aux11793:: var_is_introduced ;
var bool: aux11794_BOOL:: var_is_introduced ;
var bool: aux11795_BOOL:: var_is_introduced ;
var bool: aux11796_BOOL:: var_is_introduced ;
var bool: aux11797_BOOL:: var_is_introduced ;
var bool: aux11798_BOOL:: var_is_introduced ;
var {0,1}: aux11798_INTEGER :: var_is_introduced ;
var 2..59: aux11799:: var_is_introduced ;
var bool: aux11800_BOOL:: var_is_introduced ;
var bool: aux11801_BOOL:: var_is_introduced ;
var bool: aux11802_BOOL:: var_is_introduced ;
var bool: aux11803_BOOL:: var_is_introduced ;
var bool: aux11804_BOOL:: var_is_introduced ;
var {0,1}: aux11804_INTEGER :: var_is_introduced ;
var 3..60: aux11805:: var_is_introduced ;
var bool: aux11806_BOOL:: var_is_introduced ;
var bool: aux11807_BOOL:: var_is_introduced ;
var bool: aux11808_BOOL:: var_is_introduced ;
var bool: aux11809_BOOL:: var_is_introduced ;
var bool: aux11810_BOOL:: var_is_introduced ;
var {0,1}: aux11810_INTEGER :: var_is_introduced ;
var 2..59: aux11811:: var_is_introduced ;
var bool: aux11812_BOOL:: var_is_introduced ;
var bool: aux11813_BOOL:: var_is_introduced ;
var bool: aux11814_BOOL:: var_is_introduced ;
var bool: aux11815_BOOL:: var_is_introduced ;
var bool: aux11816_BOOL:: var_is_introduced ;
var {0,1}: aux11816_INTEGER :: var_is_introduced ;
var 3..60: aux11817:: var_is_introduced ;
var bool: aux11818_BOOL:: var_is_introduced ;
var bool: aux11819_BOOL:: var_is_introduced ;
var bool: aux11820_BOOL:: var_is_introduced ;
var bool: aux11821_BOOL:: var_is_introduced ;
var bool: aux11822_BOOL:: var_is_introduced ;
var {0,1}: aux11822_INTEGER :: var_is_introduced ;
var 3..60: aux11823:: var_is_introduced ;
var bool: aux11824_BOOL:: var_is_introduced ;
var bool: aux11825_BOOL:: var_is_introduced ;
var bool: aux11826_BOOL:: var_is_introduced ;
var bool: aux11827_BOOL:: var_is_introduced ;
var bool: aux11828_BOOL:: var_is_introduced ;
var {0,1}: aux11828_INTEGER :: var_is_introduced ;
var 4..61: aux11829:: var_is_introduced ;
var bool: aux11830_BOOL:: var_is_introduced ;
var bool: aux11831_BOOL:: var_is_introduced ;
var bool: aux11832_BOOL:: var_is_introduced ;
var bool: aux11833_BOOL:: var_is_introduced ;
var bool: aux11834_BOOL:: var_is_introduced ;
var {0,1}: aux11834_INTEGER :: var_is_introduced ;
var 2..59: aux11835:: var_is_introduced ;
var bool: aux11836_BOOL:: var_is_introduced ;
var bool: aux11837_BOOL:: var_is_introduced ;
var bool: aux11838_BOOL:: var_is_introduced ;
var bool: aux11839_BOOL:: var_is_introduced ;
var bool: aux11840_BOOL:: var_is_introduced ;
var {0,1}: aux11840_INTEGER :: var_is_introduced ;
var 3..60: aux11841:: var_is_introduced ;
var bool: aux11842_BOOL:: var_is_introduced ;
var bool: aux11843_BOOL:: var_is_introduced ;
var bool: aux11844_BOOL:: var_is_introduced ;
var bool: aux11845_BOOL:: var_is_introduced ;
var bool: aux11846_BOOL:: var_is_introduced ;
var {0,1}: aux11846_INTEGER :: var_is_introduced ;
var 3..60: aux11847:: var_is_introduced ;
var bool: aux11848_BOOL:: var_is_introduced ;
var bool: aux11849_BOOL:: var_is_introduced ;
var bool: aux11850_BOOL:: var_is_introduced ;
var bool: aux11851_BOOL:: var_is_introduced ;
var bool: aux11852_BOOL:: var_is_introduced ;
var {0,1}: aux11852_INTEGER :: var_is_introduced ;
var 3..60: aux11853:: var_is_introduced ;
var bool: aux11854_BOOL:: var_is_introduced ;
var bool: aux11855_BOOL:: var_is_introduced ;
var bool: aux11856_BOOL:: var_is_introduced ;
var bool: aux11857_BOOL:: var_is_introduced ;
var bool: aux11858_BOOL:: var_is_introduced ;
var {0,1}: aux11858_INTEGER :: var_is_introduced ;
var 4..61: aux11859:: var_is_introduced ;
var bool: aux11860_BOOL:: var_is_introduced ;
var bool: aux11861_BOOL:: var_is_introduced ;
var bool: aux11862_BOOL:: var_is_introduced ;
var bool: aux11863_BOOL:: var_is_introduced ;
var bool: aux11864_BOOL:: var_is_introduced ;
var {0,1}: aux11864_INTEGER :: var_is_introduced ;
var 4..61: aux11865:: var_is_introduced ;
var bool: aux11866_BOOL:: var_is_introduced ;
var bool: aux11867_BOOL:: var_is_introduced ;
var bool: aux11868_BOOL:: var_is_introduced ;
var bool: aux11869_BOOL:: var_is_introduced ;
var bool: aux11870_BOOL:: var_is_introduced ;
var {0,1}: aux11870_INTEGER :: var_is_introduced ;
var 4..61: aux11871:: var_is_introduced ;
var bool: aux11872_BOOL:: var_is_introduced ;
var bool: aux11873_BOOL:: var_is_introduced ;
var bool: aux11874_BOOL:: var_is_introduced ;
var bool: aux11875_BOOL:: var_is_introduced ;
var bool: aux11876_BOOL:: var_is_introduced ;
var {0,1}: aux11876_INTEGER :: var_is_introduced ;
var 5..62: aux11877:: var_is_introduced ;
var bool: aux11878_BOOL:: var_is_introduced ;
var bool: aux11879_BOOL:: var_is_introduced ;
var bool: aux11880_BOOL:: var_is_introduced ;
var bool: aux11881_BOOL:: var_is_introduced ;
var bool: aux11882_BOOL:: var_is_introduced ;
var {0,1}: aux11882_INTEGER :: var_is_introduced ;
var 4..61: aux11883:: var_is_introduced ;
var bool: aux11884_BOOL:: var_is_introduced ;
var bool: aux11885_BOOL:: var_is_introduced ;
var bool: aux11886_BOOL:: var_is_introduced ;
var {0,1}: aux11886_INTEGER :: var_is_introduced ;
var bool: aux11887_BOOL:: var_is_introduced ;
var 2..59: aux11888:: var_is_introduced ;
var bool: aux11889_BOOL:: var_is_introduced ;
var bool: aux11890_BOOL:: var_is_introduced ;
var bool: aux11891_BOOL:: var_is_introduced ;
var bool: aux11892_BOOL:: var_is_introduced ;
var bool: aux11893_BOOL:: var_is_introduced ;
var {0,1}: aux11893_INTEGER :: var_is_introduced ;
var 1..58: aux11894:: var_is_introduced ;
var bool: aux11895_BOOL:: var_is_introduced ;
var bool: aux11896_BOOL:: var_is_introduced ;
var bool: aux11897_BOOL:: var_is_introduced ;
var bool: aux11898_BOOL:: var_is_introduced ;
var bool: aux11899_BOOL:: var_is_introduced ;
var {0,1}: aux11899_INTEGER :: var_is_introduced ;
var 2..59: aux11900:: var_is_introduced ;
var bool: aux11901_BOOL:: var_is_introduced ;
var bool: aux11902_BOOL:: var_is_introduced ;
var bool: aux11903_BOOL:: var_is_introduced ;
var bool: aux11904_BOOL:: var_is_introduced ;
var bool: aux11905_BOOL:: var_is_introduced ;
var {0,1}: aux11905_INTEGER :: var_is_introduced ;
var 2..59: aux11906:: var_is_introduced ;
var bool: aux11907_BOOL:: var_is_introduced ;
var bool: aux11908_BOOL:: var_is_introduced ;
var bool: aux11909_BOOL:: var_is_introduced ;
var bool: aux11910_BOOL:: var_is_introduced ;
var bool: aux11911_BOOL:: var_is_introduced ;
var {0,1}: aux11911_INTEGER :: var_is_introduced ;
var 1..58: aux11912:: var_is_introduced ;
var bool: aux11913_BOOL:: var_is_introduced ;
var bool: aux11914_BOOL:: var_is_introduced ;
var bool: aux11915_BOOL:: var_is_introduced ;
var bool: aux11916_BOOL:: var_is_introduced ;
var bool: aux11917_BOOL:: var_is_introduced ;
var {0,1}: aux11917_INTEGER :: var_is_introduced ;
var 2..59: aux11918:: var_is_introduced ;
var bool: aux11919_BOOL:: var_is_introduced ;
var bool: aux11920_BOOL:: var_is_introduced ;
var bool: aux11921_BOOL:: var_is_introduced ;
var bool: aux11922_BOOL:: var_is_introduced ;
var bool: aux11923_BOOL:: var_is_introduced ;
var {0,1}: aux11923_INTEGER :: var_is_introduced ;
var 3..60: aux11924:: var_is_introduced ;
var bool: aux11925_BOOL:: var_is_introduced ;
var bool: aux11926_BOOL:: var_is_introduced ;
var bool: aux11927_BOOL:: var_is_introduced ;
var bool: aux11928_BOOL:: var_is_introduced ;
var bool: aux11929_BOOL:: var_is_introduced ;
var {0,1}: aux11929_INTEGER :: var_is_introduced ;
var 2..59: aux11930:: var_is_introduced ;
var bool: aux11931_BOOL:: var_is_introduced ;
var bool: aux11932_BOOL:: var_is_introduced ;
var bool: aux11933_BOOL:: var_is_introduced ;
var bool: aux11934_BOOL:: var_is_introduced ;
var bool: aux11935_BOOL:: var_is_introduced ;
var {0,1}: aux11935_INTEGER :: var_is_introduced ;
var 3..60: aux11936:: var_is_introduced ;
var bool: aux11937_BOOL:: var_is_introduced ;
var bool: aux11938_BOOL:: var_is_introduced ;
var bool: aux11939_BOOL:: var_is_introduced ;
var bool: aux11940_BOOL:: var_is_introduced ;
var bool: aux11941_BOOL:: var_is_introduced ;
var {0,1}: aux11941_INTEGER :: var_is_introduced ;
var 3..60: aux11942:: var_is_introduced ;
var bool: aux11943_BOOL:: var_is_introduced ;
var bool: aux11944_BOOL:: var_is_introduced ;
var bool: aux11945_BOOL:: var_is_introduced ;
var bool: aux11946_BOOL:: var_is_introduced ;
var bool: aux11947_BOOL:: var_is_introduced ;
var {0,1}: aux11947_INTEGER :: var_is_introduced ;
var 2..59: aux11948:: var_is_introduced ;
var bool: aux11949_BOOL:: var_is_introduced ;
var bool: aux11950_BOOL:: var_is_introduced ;
var bool: aux11951_BOOL:: var_is_introduced ;
var bool: aux11952_BOOL:: var_is_introduced ;
var bool: aux11953_BOOL:: var_is_introduced ;
var {0,1}: aux11953_INTEGER :: var_is_introduced ;
var 3..60: aux11954:: var_is_introduced ;
var bool: aux11955_BOOL:: var_is_introduced ;
var bool: aux11956_BOOL:: var_is_introduced ;
var bool: aux11957_BOOL:: var_is_introduced ;
var bool: aux11958_BOOL:: var_is_introduced ;
var bool: aux11959_BOOL:: var_is_introduced ;
var {0,1}: aux11959_INTEGER :: var_is_introduced ;
var 4..61: aux11960:: var_is_introduced ;
var bool: aux11961_BOOL:: var_is_introduced ;
var bool: aux11962_BOOL:: var_is_introduced ;
var bool: aux11963_BOOL:: var_is_introduced ;
var bool: aux11964_BOOL:: var_is_introduced ;
var bool: aux11965_BOOL:: var_is_introduced ;
var {0,1}: aux11965_INTEGER :: var_is_introduced ;
var 3..60: aux11966:: var_is_introduced ;
var bool: aux11967_BOOL:: var_is_introduced ;
var bool: aux11968_BOOL:: var_is_introduced ;
var bool: aux11969_BOOL:: var_is_introduced ;
var bool: aux11970_BOOL:: var_is_introduced ;
var bool: aux11971_BOOL:: var_is_introduced ;
var {0,1}: aux11971_INTEGER :: var_is_introduced ;
var 3..60: aux11972:: var_is_introduced ;
var bool: aux11973_BOOL:: var_is_introduced ;
var bool: aux11974_BOOL:: var_is_introduced ;
var bool: aux11975_BOOL:: var_is_introduced ;
var bool: aux11976_BOOL:: var_is_introduced ;
var bool: aux11977_BOOL:: var_is_introduced ;
var {0,1}: aux11977_INTEGER :: var_is_introduced ;
var 4..61: aux11978:: var_is_introduced ;
var bool: aux11979_BOOL:: var_is_introduced ;
var bool: aux11980_BOOL:: var_is_introduced ;
var bool: aux11981_BOOL:: var_is_introduced ;
var bool: aux11982_BOOL:: var_is_introduced ;
var bool: aux11983_BOOL:: var_is_introduced ;
var {0,1}: aux11983_INTEGER :: var_is_introduced ;
var 4..61: aux11984:: var_is_introduced ;
var bool: aux11985_BOOL:: var_is_introduced ;
var bool: aux11986_BOOL:: var_is_introduced ;
var bool: aux11987_BOOL:: var_is_introduced ;
var bool: aux11988_BOOL:: var_is_introduced ;
var bool: aux11989_BOOL:: var_is_introduced ;
var {0,1}: aux11989_INTEGER :: var_is_introduced ;
var 4..61: aux11990:: var_is_introduced ;
var bool: aux11991_BOOL:: var_is_introduced ;
var bool: aux11992_BOOL:: var_is_introduced ;
var bool: aux11993_BOOL:: var_is_introduced ;
var bool: aux11994_BOOL:: var_is_introduced ;
var bool: aux11995_BOOL:: var_is_introduced ;
var {0,1}: aux11995_INTEGER :: var_is_introduced ;
var 5..62: aux11996:: var_is_introduced ;
var bool: aux11997_BOOL:: var_is_introduced ;
var bool: aux11998_BOOL:: var_is_introduced ;
var bool: aux11999_BOOL:: var_is_introduced ;
var bool: aux12000_BOOL:: var_is_introduced ;
var bool: aux12001_BOOL:: var_is_introduced ;
var {0,1}: aux12001_INTEGER :: var_is_introduced ;
var 4..61: aux12002:: var_is_introduced ;
var bool: aux12003_BOOL:: var_is_introduced ;
var bool: aux12004_BOOL:: var_is_introduced ;
var bool: aux12005_BOOL:: var_is_introduced ;
var {0,1}: aux12005_INTEGER :: var_is_introduced ;
var bool: aux12006_BOOL:: var_is_introduced ;
var 2..59: aux12007:: var_is_introduced ;
var bool: aux12008_BOOL:: var_is_introduced ;
var bool: aux12009_BOOL:: var_is_introduced ;
var bool: aux12010_BOOL:: var_is_introduced ;
var bool: aux12011_BOOL:: var_is_introduced ;
var bool: aux12012_BOOL:: var_is_introduced ;
var {0,1}: aux12012_INTEGER :: var_is_introduced ;
var 1..58: aux12013:: var_is_introduced ;
var bool: aux12014_BOOL:: var_is_introduced ;
var bool: aux12015_BOOL:: var_is_introduced ;
var bool: aux12016_BOOL:: var_is_introduced ;
var bool: aux12017_BOOL:: var_is_introduced ;
var bool: aux12018_BOOL:: var_is_introduced ;
var {0,1}: aux12018_INTEGER :: var_is_introduced ;
var 2..59: aux12019:: var_is_introduced ;
var bool: aux12020_BOOL:: var_is_introduced ;
var bool: aux12021_BOOL:: var_is_introduced ;
var bool: aux12022_BOOL:: var_is_introduced ;
var bool: aux12023_BOOL:: var_is_introduced ;
var bool: aux12024_BOOL:: var_is_introduced ;
var {0,1}: aux12024_INTEGER :: var_is_introduced ;
var 1..58: aux12025:: var_is_introduced ;
var bool: aux12026_BOOL:: var_is_introduced ;
var bool: aux12027_BOOL:: var_is_introduced ;
var bool: aux12028_BOOL:: var_is_introduced ;
var bool: aux12029_BOOL:: var_is_introduced ;
var bool: aux12030_BOOL:: var_is_introduced ;
var {0,1}: aux12030_INTEGER :: var_is_introduced ;
var 2..59: aux12031:: var_is_introduced ;
var bool: aux12032_BOOL:: var_is_introduced ;
var bool: aux12033_BOOL:: var_is_introduced ;
var bool: aux12034_BOOL:: var_is_introduced ;
var bool: aux12035_BOOL:: var_is_introduced ;
var bool: aux12036_BOOL:: var_is_introduced ;
var {0,1}: aux12036_INTEGER :: var_is_introduced ;
var 3..60: aux12037:: var_is_introduced ;
var bool: aux12038_BOOL:: var_is_introduced ;
var bool: aux12039_BOOL:: var_is_introduced ;
var bool: aux12040_BOOL:: var_is_introduced ;
var bool: aux12041_BOOL:: var_is_introduced ;
var bool: aux12042_BOOL:: var_is_introduced ;
var {0,1}: aux12042_INTEGER :: var_is_introduced ;
var 3..60: aux12043:: var_is_introduced ;
var bool: aux12044_BOOL:: var_is_introduced ;
var bool: aux12045_BOOL:: var_is_introduced ;
var bool: aux12046_BOOL:: var_is_introduced ;
var bool: aux12047_BOOL:: var_is_introduced ;
var bool: aux12048_BOOL:: var_is_introduced ;
var {0,1}: aux12048_INTEGER :: var_is_introduced ;
var 2..59: aux12049:: var_is_introduced ;
var bool: aux12050_BOOL:: var_is_introduced ;
var bool: aux12051_BOOL:: var_is_introduced ;
var bool: aux12052_BOOL:: var_is_introduced ;
var bool: aux12053_BOOL:: var_is_introduced ;
var bool: aux12054_BOOL:: var_is_introduced ;
var {0,1}: aux12054_INTEGER :: var_is_introduced ;
var 3..60: aux12055:: var_is_introduced ;
var bool: aux12056_BOOL:: var_is_introduced ;
var bool: aux12057_BOOL:: var_is_introduced ;
var bool: aux12058_BOOL:: var_is_introduced ;
var bool: aux12059_BOOL:: var_is_introduced ;
var bool: aux12060_BOOL:: var_is_introduced ;
var {0,1}: aux12060_INTEGER :: var_is_introduced ;
var 4..61: aux12061:: var_is_introduced ;
var bool: aux12062_BOOL:: var_is_introduced ;
var bool: aux12063_BOOL:: var_is_introduced ;
var bool: aux12064_BOOL:: var_is_introduced ;
var bool: aux12065_BOOL:: var_is_introduced ;
var bool: aux12066_BOOL:: var_is_introduced ;
var {0,1}: aux12066_INTEGER :: var_is_introduced ;
var 4..61: aux12067:: var_is_introduced ;
var bool: aux12068_BOOL:: var_is_introduced ;
var bool: aux12069_BOOL:: var_is_introduced ;
var bool: aux12070_BOOL:: var_is_introduced ;
var bool: aux12071_BOOL:: var_is_introduced ;
var bool: aux12072_BOOL:: var_is_introduced ;
var {0,1}: aux12072_INTEGER :: var_is_introduced ;
var 2..59: aux12073:: var_is_introduced ;
var bool: aux12074_BOOL:: var_is_introduced ;
var bool: aux12075_BOOL:: var_is_introduced ;
var bool: aux12076_BOOL:: var_is_introduced ;
var bool: aux12077_BOOL:: var_is_introduced ;
var bool: aux12078_BOOL:: var_is_introduced ;
var {0,1}: aux12078_INTEGER :: var_is_introduced ;
var 3..60: aux12079:: var_is_introduced ;
var bool: aux12080_BOOL:: var_is_introduced ;
var bool: aux12081_BOOL:: var_is_introduced ;
var bool: aux12082_BOOL:: var_is_introduced ;
var bool: aux12083_BOOL:: var_is_introduced ;
var bool: aux12084_BOOL:: var_is_introduced ;
var {0,1}: aux12084_INTEGER :: var_is_introduced ;
var 3..60: aux12085:: var_is_introduced ;
var bool: aux12086_BOOL:: var_is_introduced ;
var bool: aux12087_BOOL:: var_is_introduced ;
var bool: aux12088_BOOL:: var_is_introduced ;
var bool: aux12089_BOOL:: var_is_introduced ;
var bool: aux12090_BOOL:: var_is_introduced ;
var {0,1}: aux12090_INTEGER :: var_is_introduced ;
var 3..60: aux12091:: var_is_introduced ;
var bool: aux12092_BOOL:: var_is_introduced ;
var bool: aux12093_BOOL:: var_is_introduced ;
var bool: aux12094_BOOL:: var_is_introduced ;
var bool: aux12095_BOOL:: var_is_introduced ;
var bool: aux12096_BOOL:: var_is_introduced ;
var {0,1}: aux12096_INTEGER :: var_is_introduced ;
var 4..61: aux12097:: var_is_introduced ;
var bool: aux12098_BOOL:: var_is_introduced ;
var bool: aux12099_BOOL:: var_is_introduced ;
var bool: aux12100_BOOL:: var_is_introduced ;
var bool: aux12101_BOOL:: var_is_introduced ;
var bool: aux12102_BOOL:: var_is_introduced ;
var {0,1}: aux12102_INTEGER :: var_is_introduced ;
var 4..61: aux12103:: var_is_introduced ;
var bool: aux12104_BOOL:: var_is_introduced ;
var bool: aux12105_BOOL:: var_is_introduced ;
var bool: aux12106_BOOL:: var_is_introduced ;
var bool: aux12107_BOOL:: var_is_introduced ;
var bool: aux12108_BOOL:: var_is_introduced ;
var {0,1}: aux12108_INTEGER :: var_is_introduced ;
var 4..61: aux12109:: var_is_introduced ;
var bool: aux12110_BOOL:: var_is_introduced ;
var bool: aux12111_BOOL:: var_is_introduced ;
var bool: aux12112_BOOL:: var_is_introduced ;
var bool: aux12113_BOOL:: var_is_introduced ;
var bool: aux12114_BOOL:: var_is_introduced ;
var {0,1}: aux12114_INTEGER :: var_is_introduced ;
var 5..62: aux12115:: var_is_introduced ;
var bool: aux12116_BOOL:: var_is_introduced ;
var bool: aux12117_BOOL:: var_is_introduced ;
var bool: aux12118_BOOL:: var_is_introduced ;
var bool: aux12119_BOOL:: var_is_introduced ;
var bool: aux12120_BOOL:: var_is_introduced ;
var {0,1}: aux12120_INTEGER :: var_is_introduced ;
var 2..59: aux12121:: var_is_introduced ;
var bool: aux12122_BOOL:: var_is_introduced ;
var bool: aux12123_BOOL:: var_is_introduced ;
var bool: aux12124_BOOL:: var_is_introduced ;
var {0,1}: aux12124_INTEGER :: var_is_introduced ;
var bool: aux12125_BOOL:: var_is_introduced ;
var 2..59: aux12126:: var_is_introduced ;
var bool: aux12127_BOOL:: var_is_introduced ;
var bool: aux12128_BOOL:: var_is_introduced ;
var bool: aux12129_BOOL:: var_is_introduced ;
var bool: aux12130_BOOL:: var_is_introduced ;
var bool: aux12131_BOOL:: var_is_introduced ;
var {0,1}: aux12131_INTEGER :: var_is_introduced ;
var 2..59: aux12132:: var_is_introduced ;
var bool: aux12133_BOOL:: var_is_introduced ;
var bool: aux12134_BOOL:: var_is_introduced ;
var bool: aux12135_BOOL:: var_is_introduced ;
var bool: aux12136_BOOL:: var_is_introduced ;
var bool: aux12137_BOOL:: var_is_introduced ;
var {0,1}: aux12137_INTEGER :: var_is_introduced ;
var 2..59: aux12138:: var_is_introduced ;
var bool: aux12139_BOOL:: var_is_introduced ;
var bool: aux12140_BOOL:: var_is_introduced ;
var bool: aux12141_BOOL:: var_is_introduced ;
var bool: aux12142_BOOL:: var_is_introduced ;
var bool: aux12143_BOOL:: var_is_introduced ;
var {0,1}: aux12143_INTEGER :: var_is_introduced ;
var 2..59: aux12144:: var_is_introduced ;
var bool: aux12145_BOOL:: var_is_introduced ;
var bool: aux12146_BOOL:: var_is_introduced ;
var bool: aux12147_BOOL:: var_is_introduced ;
var bool: aux12148_BOOL:: var_is_introduced ;
var bool: aux12149_BOOL:: var_is_introduced ;
var {0,1}: aux12149_INTEGER :: var_is_introduced ;
var 3..60: aux12150:: var_is_introduced ;
var bool: aux12151_BOOL:: var_is_introduced ;
var bool: aux12152_BOOL:: var_is_introduced ;
var bool: aux12153_BOOL:: var_is_introduced ;
var bool: aux12154_BOOL:: var_is_introduced ;
var bool: aux12155_BOOL:: var_is_introduced ;
var {0,1}: aux12155_INTEGER :: var_is_introduced ;
var 1..58: aux12156:: var_is_introduced ;
var bool: aux12157_BOOL:: var_is_introduced ;
var bool: aux12158_BOOL:: var_is_introduced ;
var bool: aux12159_BOOL:: var_is_introduced ;
var bool: aux12160_BOOL:: var_is_introduced ;
var bool: aux12161_BOOL:: var_is_introduced ;
var {0,1}: aux12161_INTEGER :: var_is_introduced ;
var 3..60: aux12162:: var_is_introduced ;
var bool: aux12163_BOOL:: var_is_introduced ;
var bool: aux12164_BOOL:: var_is_introduced ;
var bool: aux12165_BOOL:: var_is_introduced ;
var bool: aux12166_BOOL:: var_is_introduced ;
var bool: aux12167_BOOL:: var_is_introduced ;
var {0,1}: aux12167_INTEGER :: var_is_introduced ;
var 1..58: aux12168:: var_is_introduced ;
var bool: aux12169_BOOL:: var_is_introduced ;
var bool: aux12170_BOOL:: var_is_introduced ;
var bool: aux12171_BOOL:: var_is_introduced ;
var bool: aux12172_BOOL:: var_is_introduced ;
var bool: aux12173_BOOL:: var_is_introduced ;
var {0,1}: aux12173_INTEGER :: var_is_introduced ;
var 3..60: aux12174:: var_is_introduced ;
var bool: aux12175_BOOL:: var_is_introduced ;
var bool: aux12176_BOOL:: var_is_introduced ;
var bool: aux12177_BOOL:: var_is_introduced ;
var bool: aux12178_BOOL:: var_is_introduced ;
var bool: aux12179_BOOL:: var_is_introduced ;
var {0,1}: aux12179_INTEGER :: var_is_introduced ;
var 4..61: aux12180:: var_is_introduced ;
var bool: aux12181_BOOL:: var_is_introduced ;
var bool: aux12182_BOOL:: var_is_introduced ;
var bool: aux12183_BOOL:: var_is_introduced ;
var bool: aux12184_BOOL:: var_is_introduced ;
var bool: aux12185_BOOL:: var_is_introduced ;
var {0,1}: aux12185_INTEGER :: var_is_introduced ;
var 4..61: aux12186:: var_is_introduced ;
var bool: aux12187_BOOL:: var_is_introduced ;
var bool: aux12188_BOOL:: var_is_introduced ;
var bool: aux12189_BOOL:: var_is_introduced ;
var bool: aux12190_BOOL:: var_is_introduced ;
var bool: aux12191_BOOL:: var_is_introduced ;
var {0,1}: aux12191_INTEGER :: var_is_introduced ;
var 2..59: aux12192:: var_is_introduced ;
var bool: aux12193_BOOL:: var_is_introduced ;
var bool: aux12194_BOOL:: var_is_introduced ;
var bool: aux12195_BOOL:: var_is_introduced ;
var bool: aux12196_BOOL:: var_is_introduced ;
var bool: aux12197_BOOL:: var_is_introduced ;
var {0,1}: aux12197_INTEGER :: var_is_introduced ;
var 3..60: aux12198:: var_is_introduced ;
var bool: aux12199_BOOL:: var_is_introduced ;
var bool: aux12200_BOOL:: var_is_introduced ;
var bool: aux12201_BOOL:: var_is_introduced ;
var bool: aux12202_BOOL:: var_is_introduced ;
var bool: aux12203_BOOL:: var_is_introduced ;
var {0,1}: aux12203_INTEGER :: var_is_introduced ;
var 2..59: aux12204:: var_is_introduced ;
var bool: aux12205_BOOL:: var_is_introduced ;
var bool: aux12206_BOOL:: var_is_introduced ;
var bool: aux12207_BOOL:: var_is_introduced ;
var bool: aux12208_BOOL:: var_is_introduced ;
var bool: aux12209_BOOL:: var_is_introduced ;
var {0,1}: aux12209_INTEGER :: var_is_introduced ;
var 3..60: aux12210:: var_is_introduced ;
var bool: aux12211_BOOL:: var_is_introduced ;
var bool: aux12212_BOOL:: var_is_introduced ;
var bool: aux12213_BOOL:: var_is_introduced ;
var bool: aux12214_BOOL:: var_is_introduced ;
var bool: aux12215_BOOL:: var_is_introduced ;
var {0,1}: aux12215_INTEGER :: var_is_introduced ;
var 4..61: aux12216:: var_is_introduced ;
var bool: aux12217_BOOL:: var_is_introduced ;
var bool: aux12218_BOOL:: var_is_introduced ;
var bool: aux12219_BOOL:: var_is_introduced ;
var bool: aux12220_BOOL:: var_is_introduced ;
var bool: aux12221_BOOL:: var_is_introduced ;
var {0,1}: aux12221_INTEGER :: var_is_introduced ;
var 4..61: aux12222:: var_is_introduced ;
var bool: aux12223_BOOL:: var_is_introduced ;
var bool: aux12224_BOOL:: var_is_introduced ;
var bool: aux12225_BOOL:: var_is_introduced ;
var bool: aux12226_BOOL:: var_is_introduced ;
var bool: aux12227_BOOL:: var_is_introduced ;
var {0,1}: aux12227_INTEGER :: var_is_introduced ;
var 4..61: aux12228:: var_is_introduced ;
var bool: aux12229_BOOL:: var_is_introduced ;
var bool: aux12230_BOOL:: var_is_introduced ;
var bool: aux12231_BOOL:: var_is_introduced ;
var bool: aux12232_BOOL:: var_is_introduced ;
var bool: aux12233_BOOL:: var_is_introduced ;
var {0,1}: aux12233_INTEGER :: var_is_introduced ;
var 5..62: aux12234:: var_is_introduced ;
var bool: aux12235_BOOL:: var_is_introduced ;
var bool: aux12236_BOOL:: var_is_introduced ;
var bool: aux12237_BOOL:: var_is_introduced ;
var bool: aux12238_BOOL:: var_is_introduced ;
var bool: aux12239_BOOL:: var_is_introduced ;
var {0,1}: aux12239_INTEGER :: var_is_introduced ;
var 3..60: aux12240:: var_is_introduced ;
var bool: aux12241_BOOL:: var_is_introduced ;
var bool: aux12242_BOOL:: var_is_introduced ;
var bool: aux12243_BOOL:: var_is_introduced ;
var {0,1}: aux12243_INTEGER :: var_is_introduced ;
var bool: aux12244_BOOL:: var_is_introduced ;
var 2..59: aux12245:: var_is_introduced ;
var bool: aux12246_BOOL:: var_is_introduced ;
var bool: aux12247_BOOL:: var_is_introduced ;
var bool: aux12248_BOOL:: var_is_introduced ;
var bool: aux12249_BOOL:: var_is_introduced ;
var bool: aux12250_BOOL:: var_is_introduced ;
var {0,1}: aux12250_INTEGER :: var_is_introduced ;
var 1..58: aux12251:: var_is_introduced ;
var bool: aux12252_BOOL:: var_is_introduced ;
var bool: aux12253_BOOL:: var_is_introduced ;
var bool: aux12254_BOOL:: var_is_introduced ;
var bool: aux12255_BOOL:: var_is_introduced ;
var bool: aux12256_BOOL:: var_is_introduced ;
var {0,1}: aux12256_INTEGER :: var_is_introduced ;
var 2..59: aux12257:: var_is_introduced ;
var bool: aux12258_BOOL:: var_is_introduced ;
var bool: aux12259_BOOL:: var_is_introduced ;
var bool: aux12260_BOOL:: var_is_introduced ;
var bool: aux12261_BOOL:: var_is_introduced ;
var bool: aux12262_BOOL:: var_is_introduced ;
var {0,1}: aux12262_INTEGER :: var_is_introduced ;
var 2..59: aux12263:: var_is_introduced ;
var bool: aux12264_BOOL:: var_is_introduced ;
var bool: aux12265_BOOL:: var_is_introduced ;
var bool: aux12266_BOOL:: var_is_introduced ;
var bool: aux12267_BOOL:: var_is_introduced ;
var bool: aux12268_BOOL:: var_is_introduced ;
var {0,1}: aux12268_INTEGER :: var_is_introduced ;
var 1..58: aux12269:: var_is_introduced ;
var bool: aux12270_BOOL:: var_is_introduced ;
var bool: aux12271_BOOL:: var_is_introduced ;
var bool: aux12272_BOOL:: var_is_introduced ;
var bool: aux12273_BOOL:: var_is_introduced ;
var bool: aux12274_BOOL:: var_is_introduced ;
var {0,1}: aux12274_INTEGER :: var_is_introduced ;
var 2..59: aux12275:: var_is_introduced ;
var bool: aux12276_BOOL:: var_is_introduced ;
var bool: aux12277_BOOL:: var_is_introduced ;
var bool: aux12278_BOOL:: var_is_introduced ;
var bool: aux12279_BOOL:: var_is_introduced ;
var bool: aux12280_BOOL:: var_is_introduced ;
var {0,1}: aux12280_INTEGER :: var_is_introduced ;
var 2..59: aux12281:: var_is_introduced ;
var bool: aux12282_BOOL:: var_is_introduced ;
var bool: aux12283_BOOL:: var_is_introduced ;
var bool: aux12284_BOOL:: var_is_introduced ;
var bool: aux12285_BOOL:: var_is_introduced ;
var bool: aux12286_BOOL:: var_is_introduced ;
var {0,1}: aux12286_INTEGER :: var_is_introduced ;
var 3..60: aux12287:: var_is_introduced ;
var bool: aux12288_BOOL:: var_is_introduced ;
var bool: aux12289_BOOL:: var_is_introduced ;
var bool: aux12290_BOOL:: var_is_introduced ;
var bool: aux12291_BOOL:: var_is_introduced ;
var bool: aux12292_BOOL:: var_is_introduced ;
var {0,1}: aux12292_INTEGER :: var_is_introduced ;
var 3..60: aux12293:: var_is_introduced ;
var bool: aux12294_BOOL:: var_is_introduced ;
var bool: aux12295_BOOL:: var_is_introduced ;
var bool: aux12296_BOOL:: var_is_introduced ;
var bool: aux12297_BOOL:: var_is_introduced ;
var bool: aux12298_BOOL:: var_is_introduced ;
var {0,1}: aux12298_INTEGER :: var_is_introduced ;
var 4..61: aux12299:: var_is_introduced ;
var bool: aux12300_BOOL:: var_is_introduced ;
var bool: aux12301_BOOL:: var_is_introduced ;
var bool: aux12302_BOOL:: var_is_introduced ;
var bool: aux12303_BOOL:: var_is_introduced ;
var bool: aux12304_BOOL:: var_is_introduced ;
var {0,1}: aux12304_INTEGER :: var_is_introduced ;
var 4..61: aux12305:: var_is_introduced ;
var bool: aux12306_BOOL:: var_is_introduced ;
var bool: aux12307_BOOL:: var_is_introduced ;
var bool: aux12308_BOOL:: var_is_introduced ;
var bool: aux12309_BOOL:: var_is_introduced ;
var bool: aux12310_BOOL:: var_is_introduced ;
var {0,1}: aux12310_INTEGER :: var_is_introduced ;
var 2..59: aux12311:: var_is_introduced ;
var bool: aux12312_BOOL:: var_is_introduced ;
var bool: aux12313_BOOL:: var_is_introduced ;
var bool: aux12314_BOOL:: var_is_introduced ;
var bool: aux12315_BOOL:: var_is_introduced ;
var bool: aux12316_BOOL:: var_is_introduced ;
var {0,1}: aux12316_INTEGER :: var_is_introduced ;
var 3..60: aux12317:: var_is_introduced ;
var bool: aux12318_BOOL:: var_is_introduced ;
var bool: aux12319_BOOL:: var_is_introduced ;
var bool: aux12320_BOOL:: var_is_introduced ;
var bool: aux12321_BOOL:: var_is_introduced ;
var bool: aux12322_BOOL:: var_is_introduced ;
var {0,1}: aux12322_INTEGER :: var_is_introduced ;
var 3..60: aux12323:: var_is_introduced ;
var bool: aux12324_BOOL:: var_is_introduced ;
var bool: aux12325_BOOL:: var_is_introduced ;
var bool: aux12326_BOOL:: var_is_introduced ;
var bool: aux12327_BOOL:: var_is_introduced ;
var bool: aux12328_BOOL:: var_is_introduced ;
var {0,1}: aux12328_INTEGER :: var_is_introduced ;
var 3..60: aux12329:: var_is_introduced ;
var bool: aux12330_BOOL:: var_is_introduced ;
var bool: aux12331_BOOL:: var_is_introduced ;
var bool: aux12332_BOOL:: var_is_introduced ;
var bool: aux12333_BOOL:: var_is_introduced ;
var bool: aux12334_BOOL:: var_is_introduced ;
var {0,1}: aux12334_INTEGER :: var_is_introduced ;
var 4..61: aux12335:: var_is_introduced ;
var bool: aux12336_BOOL:: var_is_introduced ;
var bool: aux12337_BOOL:: var_is_introduced ;
var bool: aux12338_BOOL:: var_is_introduced ;
var bool: aux12339_BOOL:: var_is_introduced ;
var bool: aux12340_BOOL:: var_is_introduced ;
var {0,1}: aux12340_INTEGER :: var_is_introduced ;
var 4..61: aux12341:: var_is_introduced ;
var bool: aux12342_BOOL:: var_is_introduced ;
var bool: aux12343_BOOL:: var_is_introduced ;
var bool: aux12344_BOOL:: var_is_introduced ;
var bool: aux12345_BOOL:: var_is_introduced ;
var bool: aux12346_BOOL:: var_is_introduced ;
var {0,1}: aux12346_INTEGER :: var_is_introduced ;
var 4..61: aux12347:: var_is_introduced ;
var bool: aux12348_BOOL:: var_is_introduced ;
var bool: aux12349_BOOL:: var_is_introduced ;
var bool: aux12350_BOOL:: var_is_introduced ;
var bool: aux12351_BOOL:: var_is_introduced ;
var bool: aux12352_BOOL:: var_is_introduced ;
var {0,1}: aux12352_INTEGER :: var_is_introduced ;
var 5..62: aux12353:: var_is_introduced ;
var bool: aux12354_BOOL:: var_is_introduced ;
var bool: aux12355_BOOL:: var_is_introduced ;
var bool: aux12356_BOOL:: var_is_introduced ;
var bool: aux12357_BOOL:: var_is_introduced ;
var bool: aux12358_BOOL:: var_is_introduced ;
var {0,1}: aux12358_INTEGER :: var_is_introduced ;
var 3..60: aux12359:: var_is_introduced ;
var bool: aux12360_BOOL:: var_is_introduced ;
var bool: aux12361_BOOL:: var_is_introduced ;
var bool: aux12362_BOOL:: var_is_introduced ;
var {0,1}: aux12362_INTEGER :: var_is_introduced ;
var bool: aux12363_BOOL:: var_is_introduced ;
var bool: aux12364_BOOL:: var_is_introduced ;
var bool: aux12365_BOOL:: var_is_introduced ;
var bool: aux12366_BOOL:: var_is_introduced ;
var bool: aux12367_BOOL:: var_is_introduced ;
var 4..61: aux12368:: var_is_introduced ;
var bool: aux12369_BOOL:: var_is_introduced ;
var bool: aux12370_BOOL:: var_is_introduced ;
var bool: aux12371_BOOL:: var_is_introduced ;
var {0,1}: aux12371_INTEGER :: var_is_introduced ;
var bool: aux12372_BOOL:: var_is_introduced ;
var bool: aux12373_BOOL:: var_is_introduced ;
var 4..61: aux12374:: var_is_introduced ;
var bool: aux12375_BOOL:: var_is_introduced ;
var bool: aux12376_BOOL:: var_is_introduced ;
var bool: aux12377_BOOL:: var_is_introduced ;
var {0,1}: aux12377_INTEGER :: var_is_introduced ;
var bool: aux12378_BOOL:: var_is_introduced ;
var bool: aux12379_BOOL:: var_is_introduced ;
var 3..60: aux12380:: var_is_introduced ;
var bool: aux12381_BOOL:: var_is_introduced ;
var bool: aux12382_BOOL:: var_is_introduced ;
var bool: aux12383_BOOL:: var_is_introduced ;
var {0,1}: aux12383_INTEGER :: var_is_introduced ;
var bool: aux12384_BOOL:: var_is_introduced ;
var bool: aux12385_BOOL:: var_is_introduced ;
var 2..59: aux12386:: var_is_introduced ;
var bool: aux12387_BOOL:: var_is_introduced ;
var bool: aux12388_BOOL:: var_is_introduced ;
var bool: aux12389_BOOL:: var_is_introduced ;
var {0,1}: aux12389_INTEGER :: var_is_introduced ;
var bool: aux12390_BOOL:: var_is_introduced ;
var bool: aux12391_BOOL:: var_is_introduced ;
var 3..60: aux12392:: var_is_introduced ;
var bool: aux12393_BOOL:: var_is_introduced ;
var bool: aux12394_BOOL:: var_is_introduced ;
var bool: aux12395_BOOL:: var_is_introduced ;
var {0,1}: aux12395_INTEGER :: var_is_introduced ;
var bool: aux12396_BOOL:: var_is_introduced ;
var bool: aux12397_BOOL:: var_is_introduced ;
var 2..59: aux12398:: var_is_introduced ;
var bool: aux12399_BOOL:: var_is_introduced ;
var bool: aux12400_BOOL:: var_is_introduced ;
var bool: aux12401_BOOL:: var_is_introduced ;
var {0,1}: aux12401_INTEGER :: var_is_introduced ;
var bool: aux12402_BOOL:: var_is_introduced ;
var bool: aux12403_BOOL:: var_is_introduced ;
var 3..60: aux12404:: var_is_introduced ;
var bool: aux12405_BOOL:: var_is_introduced ;
var bool: aux12406_BOOL:: var_is_introduced ;
var bool: aux12407_BOOL:: var_is_introduced ;
var {0,1}: aux12407_INTEGER :: var_is_introduced ;
var bool: aux12408_BOOL:: var_is_introduced ;
var bool: aux12409_BOOL:: var_is_introduced ;
var 2..59: aux12410:: var_is_introduced ;
var bool: aux12411_BOOL:: var_is_introduced ;
var bool: aux12412_BOOL:: var_is_introduced ;
var bool: aux12413_BOOL:: var_is_introduced ;
var {0,1}: aux12413_INTEGER :: var_is_introduced ;
var bool: aux12414_BOOL:: var_is_introduced ;
var bool: aux12415_BOOL:: var_is_introduced ;
var 2..59: aux12416:: var_is_introduced ;
var bool: aux12417_BOOL:: var_is_introduced ;
var bool: aux12418_BOOL:: var_is_introduced ;
var bool: aux12419_BOOL:: var_is_introduced ;
var {0,1}: aux12419_INTEGER :: var_is_introduced ;
var bool: aux12420_BOOL:: var_is_introduced ;
var bool: aux12421_BOOL:: var_is_introduced ;
var 5..62: aux12422:: var_is_introduced ;
var bool: aux12423_BOOL:: var_is_introduced ;
var bool: aux12424_BOOL:: var_is_introduced ;
var bool: aux12425_BOOL:: var_is_introduced ;
var {0,1}: aux12425_INTEGER :: var_is_introduced ;
var bool: aux12426_BOOL:: var_is_introduced ;
var bool: aux12427_BOOL:: var_is_introduced ;
var 3..60: aux12428:: var_is_introduced ;
var bool: aux12429_BOOL:: var_is_introduced ;
var bool: aux12430_BOOL:: var_is_introduced ;
var bool: aux12431_BOOL:: var_is_introduced ;
var {0,1}: aux12431_INTEGER :: var_is_introduced ;
var bool: aux12432_BOOL:: var_is_introduced ;
var bool: aux12433_BOOL:: var_is_introduced ;
var 4..61: aux12434:: var_is_introduced ;
var bool: aux12435_BOOL:: var_is_introduced ;
var bool: aux12436_BOOL:: var_is_introduced ;
var bool: aux12437_BOOL:: var_is_introduced ;
var {0,1}: aux12437_INTEGER :: var_is_introduced ;
var bool: aux12438_BOOL:: var_is_introduced ;
var bool: aux12439_BOOL:: var_is_introduced ;
var 3..60: aux12440:: var_is_introduced ;
var bool: aux12441_BOOL:: var_is_introduced ;
var bool: aux12442_BOOL:: var_is_introduced ;
var bool: aux12443_BOOL:: var_is_introduced ;
var {0,1}: aux12443_INTEGER :: var_is_introduced ;
var bool: aux12444_BOOL:: var_is_introduced ;
var bool: aux12445_BOOL:: var_is_introduced ;
var 2..59: aux12446:: var_is_introduced ;
var bool: aux12447_BOOL:: var_is_introduced ;
var bool: aux12448_BOOL:: var_is_introduced ;
var bool: aux12449_BOOL:: var_is_introduced ;
var {0,1}: aux12449_INTEGER :: var_is_introduced ;
var bool: aux12450_BOOL:: var_is_introduced ;
var bool: aux12451_BOOL:: var_is_introduced ;
var 1..58: aux12452:: var_is_introduced ;
var bool: aux12453_BOOL:: var_is_introduced ;
var bool: aux12454_BOOL:: var_is_introduced ;
var bool: aux12455_BOOL:: var_is_introduced ;
var {0,1}: aux12455_INTEGER :: var_is_introduced ;
var bool: aux12456_BOOL:: var_is_introduced ;
var bool: aux12457_BOOL:: var_is_introduced ;
var 4..61: aux12458:: var_is_introduced ;
var bool: aux12459_BOOL:: var_is_introduced ;
var bool: aux12460_BOOL:: var_is_introduced ;
var bool: aux12461_BOOL:: var_is_introduced ;
var {0,1}: aux12461_INTEGER :: var_is_introduced ;
var bool: aux12462_BOOL:: var_is_introduced ;
var bool: aux12463_BOOL:: var_is_introduced ;
var 1..58: aux12464:: var_is_introduced ;
var bool: aux12465_BOOL:: var_is_introduced ;
var bool: aux12466_BOOL:: var_is_introduced ;
var bool: aux12467_BOOL:: var_is_introduced ;
var {0,1}: aux12467_INTEGER :: var_is_introduced ;
var bool: aux12468_BOOL:: var_is_introduced ;
var bool: aux12469_BOOL:: var_is_introduced ;
var 4..61: aux12470:: var_is_introduced ;
var bool: aux12471_BOOL:: var_is_introduced ;
var bool: aux12472_BOOL:: var_is_introduced ;
var bool: aux12473_BOOL:: var_is_introduced ;
var {0,1}: aux12473_INTEGER :: var_is_introduced ;
var bool: aux12474_BOOL:: var_is_introduced ;
var bool: aux12475_BOOL:: var_is_introduced ;
var 2..59: aux12476:: var_is_introduced ;
var bool: aux12477_BOOL:: var_is_introduced ;
var bool: aux12478_BOOL:: var_is_introduced ;
var bool: aux12479_BOOL:: var_is_introduced ;
var {0,1}: aux12479_INTEGER :: var_is_introduced ;
var bool: aux12480_BOOL:: var_is_introduced ;
var 3..60: aux12481:: var_is_introduced ;
var bool: aux12482_BOOL:: var_is_introduced ;
var bool: aux12483_BOOL:: var_is_introduced ;
var {0,1}: aux12483_INTEGER :: var_is_introduced ;
var bool: aux12484_BOOL:: var_is_introduced ;
var bool: aux12485_BOOL:: var_is_introduced ;
var bool: aux12486_BOOL:: var_is_introduced ;
var 4..61: aux12487:: var_is_introduced ;
var bool: aux12488_BOOL:: var_is_introduced ;
var bool: aux12489_BOOL:: var_is_introduced ;
var bool: aux12490_BOOL:: var_is_introduced ;
var {0,1}: aux12490_INTEGER :: var_is_introduced ;
var bool: aux12491_BOOL:: var_is_introduced ;
var bool: aux12492_BOOL:: var_is_introduced ;
var 4..61: aux12493:: var_is_introduced ;
var bool: aux12494_BOOL:: var_is_introduced ;
var bool: aux12495_BOOL:: var_is_introduced ;
var bool: aux12496_BOOL:: var_is_introduced ;
var {0,1}: aux12496_INTEGER :: var_is_introduced ;
var bool: aux12497_BOOL:: var_is_introduced ;
var bool: aux12498_BOOL:: var_is_introduced ;
var 3..60: aux12499:: var_is_introduced ;
var bool: aux12500_BOOL:: var_is_introduced ;
var bool: aux12501_BOOL:: var_is_introduced ;
var bool: aux12502_BOOL:: var_is_introduced ;
var {0,1}: aux12502_INTEGER :: var_is_introduced ;
var bool: aux12503_BOOL:: var_is_introduced ;
var bool: aux12504_BOOL:: var_is_introduced ;
var 2..59: aux12505:: var_is_introduced ;
var bool: aux12506_BOOL:: var_is_introduced ;
var bool: aux12507_BOOL:: var_is_introduced ;
var bool: aux12508_BOOL:: var_is_introduced ;
var {0,1}: aux12508_INTEGER :: var_is_introduced ;
var bool: aux12509_BOOL:: var_is_introduced ;
var bool: aux12510_BOOL:: var_is_introduced ;
var 3..60: aux12511:: var_is_introduced ;
var bool: aux12512_BOOL:: var_is_introduced ;
var bool: aux12513_BOOL:: var_is_introduced ;
var bool: aux12514_BOOL:: var_is_introduced ;
var {0,1}: aux12514_INTEGER :: var_is_introduced ;
var bool: aux12515_BOOL:: var_is_introduced ;
var bool: aux12516_BOOL:: var_is_introduced ;
var 3..60: aux12517:: var_is_introduced ;
var bool: aux12518_BOOL:: var_is_introduced ;
var bool: aux12519_BOOL:: var_is_introduced ;
var bool: aux12520_BOOL:: var_is_introduced ;
var {0,1}: aux12520_INTEGER :: var_is_introduced ;
var bool: aux12521_BOOL:: var_is_introduced ;
var bool: aux12522_BOOL:: var_is_introduced ;
var 2..59: aux12523:: var_is_introduced ;
var bool: aux12524_BOOL:: var_is_introduced ;
var bool: aux12525_BOOL:: var_is_introduced ;
var bool: aux12526_BOOL:: var_is_introduced ;
var {0,1}: aux12526_INTEGER :: var_is_introduced ;
var bool: aux12527_BOOL:: var_is_introduced ;
var bool: aux12528_BOOL:: var_is_introduced ;
var 2..59: aux12529:: var_is_introduced ;
var bool: aux12530_BOOL:: var_is_introduced ;
var bool: aux12531_BOOL:: var_is_introduced ;
var bool: aux12532_BOOL:: var_is_introduced ;
var {0,1}: aux12532_INTEGER :: var_is_introduced ;
var bool: aux12533_BOOL:: var_is_introduced ;
var bool: aux12534_BOOL:: var_is_introduced ;
var 5..62: aux12535:: var_is_introduced ;
var bool: aux12536_BOOL:: var_is_introduced ;
var bool: aux12537_BOOL:: var_is_introduced ;
var bool: aux12538_BOOL:: var_is_introduced ;
var {0,1}: aux12538_INTEGER :: var_is_introduced ;
var bool: aux12539_BOOL:: var_is_introduced ;
var bool: aux12540_BOOL:: var_is_introduced ;
var 3..60: aux12541:: var_is_introduced ;
var bool: aux12542_BOOL:: var_is_introduced ;
var bool: aux12543_BOOL:: var_is_introduced ;
var bool: aux12544_BOOL:: var_is_introduced ;
var {0,1}: aux12544_INTEGER :: var_is_introduced ;
var bool: aux12545_BOOL:: var_is_introduced ;
var bool: aux12546_BOOL:: var_is_introduced ;
var 4..61: aux12547:: var_is_introduced ;
var bool: aux12548_BOOL:: var_is_introduced ;
var bool: aux12549_BOOL:: var_is_introduced ;
var bool: aux12550_BOOL:: var_is_introduced ;
var {0,1}: aux12550_INTEGER :: var_is_introduced ;
var bool: aux12551_BOOL:: var_is_introduced ;
var bool: aux12552_BOOL:: var_is_introduced ;
var 3..60: aux12553:: var_is_introduced ;
var bool: aux12554_BOOL:: var_is_introduced ;
var bool: aux12555_BOOL:: var_is_introduced ;
var bool: aux12556_BOOL:: var_is_introduced ;
var {0,1}: aux12556_INTEGER :: var_is_introduced ;
var bool: aux12557_BOOL:: var_is_introduced ;
var bool: aux12558_BOOL:: var_is_introduced ;
var 2..59: aux12559:: var_is_introduced ;
var bool: aux12560_BOOL:: var_is_introduced ;
var bool: aux12561_BOOL:: var_is_introduced ;
var bool: aux12562_BOOL:: var_is_introduced ;
var {0,1}: aux12562_INTEGER :: var_is_introduced ;
var bool: aux12563_BOOL:: var_is_introduced ;
var bool: aux12564_BOOL:: var_is_introduced ;
var 1..58: aux12565:: var_is_introduced ;
var bool: aux12566_BOOL:: var_is_introduced ;
var bool: aux12567_BOOL:: var_is_introduced ;
var bool: aux12568_BOOL:: var_is_introduced ;
var {0,1}: aux12568_INTEGER :: var_is_introduced ;
var bool: aux12569_BOOL:: var_is_introduced ;
var bool: aux12570_BOOL:: var_is_introduced ;
var 3..60: aux12571:: var_is_introduced ;
var bool: aux12572_BOOL:: var_is_introduced ;
var bool: aux12573_BOOL:: var_is_introduced ;
var bool: aux12574_BOOL:: var_is_introduced ;
var {0,1}: aux12574_INTEGER :: var_is_introduced ;
var bool: aux12575_BOOL:: var_is_introduced ;
var bool: aux12576_BOOL:: var_is_introduced ;
var 4..61: aux12577:: var_is_introduced ;
var bool: aux12578_BOOL:: var_is_introduced ;
var bool: aux12579_BOOL:: var_is_introduced ;
var bool: aux12580_BOOL:: var_is_introduced ;
var {0,1}: aux12580_INTEGER :: var_is_introduced ;
var bool: aux12581_BOOL:: var_is_introduced ;
var bool: aux12582_BOOL:: var_is_introduced ;
var 1..58: aux12583:: var_is_introduced ;
var bool: aux12584_BOOL:: var_is_introduced ;
var bool: aux12585_BOOL:: var_is_introduced ;
var bool: aux12586_BOOL:: var_is_introduced ;
var {0,1}: aux12586_INTEGER :: var_is_introduced ;
var bool: aux12587_BOOL:: var_is_introduced ;
var bool: aux12588_BOOL:: var_is_introduced ;
var 4..61: aux12589:: var_is_introduced ;
var bool: aux12590_BOOL:: var_is_introduced ;
var bool: aux12591_BOOL:: var_is_introduced ;
var bool: aux12592_BOOL:: var_is_introduced ;
var {0,1}: aux12592_INTEGER :: var_is_introduced ;
var bool: aux12593_BOOL:: var_is_introduced ;
var bool: aux12594_BOOL:: var_is_introduced ;
var 2..59: aux12595:: var_is_introduced ;
var bool: aux12596_BOOL:: var_is_introduced ;
var bool: aux12597_BOOL:: var_is_introduced ;
var bool: aux12598_BOOL:: var_is_introduced ;
var {0,1}: aux12598_INTEGER :: var_is_introduced ;
var bool: aux12599_BOOL:: var_is_introduced ;
var 2..59: aux12600:: var_is_introduced ;
var bool: aux12601_BOOL:: var_is_introduced ;
var bool: aux12602_BOOL:: var_is_introduced ;
var {0,1}: aux12602_INTEGER :: var_is_introduced ;
var bool: aux12603_BOOL:: var_is_introduced ;
var bool: aux12604_BOOL:: var_is_introduced ;
var bool: aux12605_BOOL:: var_is_introduced ;
var 4..61: aux12606:: var_is_introduced ;
var bool: aux12607_BOOL:: var_is_introduced ;
var bool: aux12608_BOOL:: var_is_introduced ;
var bool: aux12609_BOOL:: var_is_introduced ;
var {0,1}: aux12609_INTEGER :: var_is_introduced ;
var bool: aux12610_BOOL:: var_is_introduced ;
var bool: aux12611_BOOL:: var_is_introduced ;
var 3..60: aux12612:: var_is_introduced ;
var bool: aux12613_BOOL:: var_is_introduced ;
var bool: aux12614_BOOL:: var_is_introduced ;
var bool: aux12615_BOOL:: var_is_introduced ;
var {0,1}: aux12615_INTEGER :: var_is_introduced ;
var bool: aux12616_BOOL:: var_is_introduced ;
var bool: aux12617_BOOL:: var_is_introduced ;
var 2..59: aux12618:: var_is_introduced ;
var bool: aux12619_BOOL:: var_is_introduced ;
var bool: aux12620_BOOL:: var_is_introduced ;
var bool: aux12621_BOOL:: var_is_introduced ;
var {0,1}: aux12621_INTEGER :: var_is_introduced ;
var bool: aux12622_BOOL:: var_is_introduced ;
var bool: aux12623_BOOL:: var_is_introduced ;
var 3..60: aux12624:: var_is_introduced ;
var bool: aux12625_BOOL:: var_is_introduced ;
var bool: aux12626_BOOL:: var_is_introduced ;
var bool: aux12627_BOOL:: var_is_introduced ;
var {0,1}: aux12627_INTEGER :: var_is_introduced ;
var bool: aux12628_BOOL:: var_is_introduced ;
var bool: aux12629_BOOL:: var_is_introduced ;
var 2..59: aux12630:: var_is_introduced ;
var bool: aux12631_BOOL:: var_is_introduced ;
var bool: aux12632_BOOL:: var_is_introduced ;
var bool: aux12633_BOOL:: var_is_introduced ;
var {0,1}: aux12633_INTEGER :: var_is_introduced ;
var bool: aux12634_BOOL:: var_is_introduced ;
var bool: aux12635_BOOL:: var_is_introduced ;
var 3..60: aux12636:: var_is_introduced ;
var bool: aux12637_BOOL:: var_is_introduced ;
var bool: aux12638_BOOL:: var_is_introduced ;
var bool: aux12639_BOOL:: var_is_introduced ;
var {0,1}: aux12639_INTEGER :: var_is_introduced ;
var bool: aux12640_BOOL:: var_is_introduced ;
var bool: aux12641_BOOL:: var_is_introduced ;
var 2..59: aux12642:: var_is_introduced ;
var bool: aux12643_BOOL:: var_is_introduced ;
var bool: aux12644_BOOL:: var_is_introduced ;
var bool: aux12645_BOOL:: var_is_introduced ;
var {0,1}: aux12645_INTEGER :: var_is_introduced ;
var bool: aux12646_BOOL:: var_is_introduced ;
var bool: aux12647_BOOL:: var_is_introduced ;
var 2..59: aux12648:: var_is_introduced ;
var bool: aux12649_BOOL:: var_is_introduced ;
var bool: aux12650_BOOL:: var_is_introduced ;
var bool: aux12651_BOOL:: var_is_introduced ;
var {0,1}: aux12651_INTEGER :: var_is_introduced ;
var bool: aux12652_BOOL:: var_is_introduced ;
var bool: aux12653_BOOL:: var_is_introduced ;
var 5..62: aux12654:: var_is_introduced ;
var bool: aux12655_BOOL:: var_is_introduced ;
var bool: aux12656_BOOL:: var_is_introduced ;
var bool: aux12657_BOOL:: var_is_introduced ;
var {0,1}: aux12657_INTEGER :: var_is_introduced ;
var bool: aux12658_BOOL:: var_is_introduced ;
var bool: aux12659_BOOL:: var_is_introduced ;
var 3..60: aux12660:: var_is_introduced ;
var bool: aux12661_BOOL:: var_is_introduced ;
var bool: aux12662_BOOL:: var_is_introduced ;
var bool: aux12663_BOOL:: var_is_introduced ;
var {0,1}: aux12663_INTEGER :: var_is_introduced ;
var bool: aux12664_BOOL:: var_is_introduced ;
var bool: aux12665_BOOL:: var_is_introduced ;
var 4..61: aux12666:: var_is_introduced ;
var bool: aux12667_BOOL:: var_is_introduced ;
var bool: aux12668_BOOL:: var_is_introduced ;
var bool: aux12669_BOOL:: var_is_introduced ;
var {0,1}: aux12669_INTEGER :: var_is_introduced ;
var bool: aux12670_BOOL:: var_is_introduced ;
var bool: aux12671_BOOL:: var_is_introduced ;
var 3..60: aux12672:: var_is_introduced ;
var bool: aux12673_BOOL:: var_is_introduced ;
var bool: aux12674_BOOL:: var_is_introduced ;
var bool: aux12675_BOOL:: var_is_introduced ;
var {0,1}: aux12675_INTEGER :: var_is_introduced ;
var bool: aux12676_BOOL:: var_is_introduced ;
var bool: aux12677_BOOL:: var_is_introduced ;
var 2..59: aux12678:: var_is_introduced ;
var bool: aux12679_BOOL:: var_is_introduced ;
var bool: aux12680_BOOL:: var_is_introduced ;
var bool: aux12681_BOOL:: var_is_introduced ;
var {0,1}: aux12681_INTEGER :: var_is_introduced ;
var bool: aux12682_BOOL:: var_is_introduced ;
var bool: aux12683_BOOL:: var_is_introduced ;
var 1..58: aux12684:: var_is_introduced ;
var bool: aux12685_BOOL:: var_is_introduced ;
var bool: aux12686_BOOL:: var_is_introduced ;
var bool: aux12687_BOOL:: var_is_introduced ;
var {0,1}: aux12687_INTEGER :: var_is_introduced ;
var bool: aux12688_BOOL:: var_is_introduced ;
var bool: aux12689_BOOL:: var_is_introduced ;
var 3..60: aux12690:: var_is_introduced ;
var bool: aux12691_BOOL:: var_is_introduced ;
var bool: aux12692_BOOL:: var_is_introduced ;
var bool: aux12693_BOOL:: var_is_introduced ;
var {0,1}: aux12693_INTEGER :: var_is_introduced ;
var bool: aux12694_BOOL:: var_is_introduced ;
var bool: aux12695_BOOL:: var_is_introduced ;
var 4..61: aux12696:: var_is_introduced ;
var bool: aux12697_BOOL:: var_is_introduced ;
var bool: aux12698_BOOL:: var_is_introduced ;
var bool: aux12699_BOOL:: var_is_introduced ;
var {0,1}: aux12699_INTEGER :: var_is_introduced ;
var bool: aux12700_BOOL:: var_is_introduced ;
var bool: aux12701_BOOL:: var_is_introduced ;
var 1..58: aux12702:: var_is_introduced ;
var bool: aux12703_BOOL:: var_is_introduced ;
var bool: aux12704_BOOL:: var_is_introduced ;
var bool: aux12705_BOOL:: var_is_introduced ;
var {0,1}: aux12705_INTEGER :: var_is_introduced ;
var bool: aux12706_BOOL:: var_is_introduced ;
var bool: aux12707_BOOL:: var_is_introduced ;
var 4..61: aux12708:: var_is_introduced ;
var bool: aux12709_BOOL:: var_is_introduced ;
var bool: aux12710_BOOL:: var_is_introduced ;
var bool: aux12711_BOOL:: var_is_introduced ;
var {0,1}: aux12711_INTEGER :: var_is_introduced ;
var bool: aux12712_BOOL:: var_is_introduced ;
var bool: aux12713_BOOL:: var_is_introduced ;
var 2..59: aux12714:: var_is_introduced ;
var bool: aux12715_BOOL:: var_is_introduced ;
var bool: aux12716_BOOL:: var_is_introduced ;
var bool: aux12717_BOOL:: var_is_introduced ;
var {0,1}: aux12717_INTEGER :: var_is_introduced ;
var bool: aux12718_BOOL:: var_is_introduced ;
var 4..61: aux12719:: var_is_introduced ;
var bool: aux12720_BOOL:: var_is_introduced ;
var bool: aux12721_BOOL:: var_is_introduced ;
var {0,1}: aux12721_INTEGER :: var_is_introduced ;
var bool: aux12722_BOOL:: var_is_introduced ;
var bool: aux12723_BOOL:: var_is_introduced ;
var bool: aux12724_BOOL:: var_is_introduced ;
var 4..61: aux12725:: var_is_introduced ;
var bool: aux12726_BOOL:: var_is_introduced ;
var bool: aux12727_BOOL:: var_is_introduced ;
var bool: aux12728_BOOL:: var_is_introduced ;
var {0,1}: aux12728_INTEGER :: var_is_introduced ;
var bool: aux12729_BOOL:: var_is_introduced ;
var bool: aux12730_BOOL:: var_is_introduced ;
var 3..60: aux12731:: var_is_introduced ;
var bool: aux12732_BOOL:: var_is_introduced ;
var bool: aux12733_BOOL:: var_is_introduced ;
var bool: aux12734_BOOL:: var_is_introduced ;
var {0,1}: aux12734_INTEGER :: var_is_introduced ;
var bool: aux12735_BOOL:: var_is_introduced ;
var bool: aux12736_BOOL:: var_is_introduced ;
var 2..59: aux12737:: var_is_introduced ;
var bool: aux12738_BOOL:: var_is_introduced ;
var bool: aux12739_BOOL:: var_is_introduced ;
var bool: aux12740_BOOL:: var_is_introduced ;
var {0,1}: aux12740_INTEGER :: var_is_introduced ;
var bool: aux12741_BOOL:: var_is_introduced ;
var bool: aux12742_BOOL:: var_is_introduced ;
var 3..60: aux12743:: var_is_introduced ;
var bool: aux12744_BOOL:: var_is_introduced ;
var bool: aux12745_BOOL:: var_is_introduced ;
var bool: aux12746_BOOL:: var_is_introduced ;
var {0,1}: aux12746_INTEGER :: var_is_introduced ;
var bool: aux12747_BOOL:: var_is_introduced ;
var bool: aux12748_BOOL:: var_is_introduced ;
var 2..59: aux12749:: var_is_introduced ;
var bool: aux12750_BOOL:: var_is_introduced ;
var bool: aux12751_BOOL:: var_is_introduced ;
var bool: aux12752_BOOL:: var_is_introduced ;
var {0,1}: aux12752_INTEGER :: var_is_introduced ;
var bool: aux12753_BOOL:: var_is_introduced ;
var bool: aux12754_BOOL:: var_is_introduced ;
var 3..60: aux12755:: var_is_introduced ;
var bool: aux12756_BOOL:: var_is_introduced ;
var bool: aux12757_BOOL:: var_is_introduced ;
var bool: aux12758_BOOL:: var_is_introduced ;
var {0,1}: aux12758_INTEGER :: var_is_introduced ;
var bool: aux12759_BOOL:: var_is_introduced ;
var bool: aux12760_BOOL:: var_is_introduced ;
var 2..59: aux12761:: var_is_introduced ;
var bool: aux12762_BOOL:: var_is_introduced ;
var bool: aux12763_BOOL:: var_is_introduced ;
var bool: aux12764_BOOL:: var_is_introduced ;
var {0,1}: aux12764_INTEGER :: var_is_introduced ;
var bool: aux12765_BOOL:: var_is_introduced ;
var bool: aux12766_BOOL:: var_is_introduced ;
var 2..59: aux12767:: var_is_introduced ;
var bool: aux12768_BOOL:: var_is_introduced ;
var bool: aux12769_BOOL:: var_is_introduced ;
var bool: aux12770_BOOL:: var_is_introduced ;
var {0,1}: aux12770_INTEGER :: var_is_introduced ;
var bool: aux12771_BOOL:: var_is_introduced ;
var bool: aux12772_BOOL:: var_is_introduced ;
var 5..62: aux12773:: var_is_introduced ;
var bool: aux12774_BOOL:: var_is_introduced ;
var bool: aux12775_BOOL:: var_is_introduced ;
var bool: aux12776_BOOL:: var_is_introduced ;
var {0,1}: aux12776_INTEGER :: var_is_introduced ;
var bool: aux12777_BOOL:: var_is_introduced ;
var bool: aux12778_BOOL:: var_is_introduced ;
var 3..60: aux12779:: var_is_introduced ;
var bool: aux12780_BOOL:: var_is_introduced ;
var bool: aux12781_BOOL:: var_is_introduced ;
var bool: aux12782_BOOL:: var_is_introduced ;
var {0,1}: aux12782_INTEGER :: var_is_introduced ;
var bool: aux12783_BOOL:: var_is_introduced ;
var bool: aux12784_BOOL:: var_is_introduced ;
var 4..61: aux12785:: var_is_introduced ;
var bool: aux12786_BOOL:: var_is_introduced ;
var bool: aux12787_BOOL:: var_is_introduced ;
var bool: aux12788_BOOL:: var_is_introduced ;
var {0,1}: aux12788_INTEGER :: var_is_introduced ;
var bool: aux12789_BOOL:: var_is_introduced ;
var bool: aux12790_BOOL:: var_is_introduced ;
var 3..60: aux12791:: var_is_introduced ;
var bool: aux12792_BOOL:: var_is_introduced ;
var bool: aux12793_BOOL:: var_is_introduced ;
var bool: aux12794_BOOL:: var_is_introduced ;
var {0,1}: aux12794_INTEGER :: var_is_introduced ;
var bool: aux12795_BOOL:: var_is_introduced ;
var bool: aux12796_BOOL:: var_is_introduced ;
var 2..59: aux12797:: var_is_introduced ;
var bool: aux12798_BOOL:: var_is_introduced ;
var bool: aux12799_BOOL:: var_is_introduced ;
var bool: aux12800_BOOL:: var_is_introduced ;
var {0,1}: aux12800_INTEGER :: var_is_introduced ;
var bool: aux12801_BOOL:: var_is_introduced ;
var bool: aux12802_BOOL:: var_is_introduced ;
var 1..58: aux12803:: var_is_introduced ;
var bool: aux12804_BOOL:: var_is_introduced ;
var bool: aux12805_BOOL:: var_is_introduced ;
var bool: aux12806_BOOL:: var_is_introduced ;
var {0,1}: aux12806_INTEGER :: var_is_introduced ;
var bool: aux12807_BOOL:: var_is_introduced ;
var bool: aux12808_BOOL:: var_is_introduced ;
var 3..60: aux12809:: var_is_introduced ;
var bool: aux12810_BOOL:: var_is_introduced ;
var bool: aux12811_BOOL:: var_is_introduced ;
var bool: aux12812_BOOL:: var_is_introduced ;
var {0,1}: aux12812_INTEGER :: var_is_introduced ;
var bool: aux12813_BOOL:: var_is_introduced ;
var bool: aux12814_BOOL:: var_is_introduced ;
var 4..61: aux12815:: var_is_introduced ;
var bool: aux12816_BOOL:: var_is_introduced ;
var bool: aux12817_BOOL:: var_is_introduced ;
var bool: aux12818_BOOL:: var_is_introduced ;
var {0,1}: aux12818_INTEGER :: var_is_introduced ;
var bool: aux12819_BOOL:: var_is_introduced ;
var bool: aux12820_BOOL:: var_is_introduced ;
var 1..58: aux12821:: var_is_introduced ;
var bool: aux12822_BOOL:: var_is_introduced ;
var bool: aux12823_BOOL:: var_is_introduced ;
var bool: aux12824_BOOL:: var_is_introduced ;
var {0,1}: aux12824_INTEGER :: var_is_introduced ;
var bool: aux12825_BOOL:: var_is_introduced ;
var bool: aux12826_BOOL:: var_is_introduced ;
var 4..61: aux12827:: var_is_introduced ;
var bool: aux12828_BOOL:: var_is_introduced ;
var bool: aux12829_BOOL:: var_is_introduced ;
var bool: aux12830_BOOL:: var_is_introduced ;
var {0,1}: aux12830_INTEGER :: var_is_introduced ;
var bool: aux12831_BOOL:: var_is_introduced ;
var bool: aux12832_BOOL:: var_is_introduced ;
var 2..59: aux12833:: var_is_introduced ;
var bool: aux12834_BOOL:: var_is_introduced ;
var bool: aux12835_BOOL:: var_is_introduced ;
var bool: aux12836_BOOL:: var_is_introduced ;
var {0,1}: aux12836_INTEGER :: var_is_introduced ;
var bool: aux12837_BOOL:: var_is_introduced ;
var 4..61: aux12838:: var_is_introduced ;
var bool: aux12839_BOOL:: var_is_introduced ;
var bool: aux12840_BOOL:: var_is_introduced ;
var {0,1}: aux12840_INTEGER :: var_is_introduced ;
var bool: aux12841_BOOL:: var_is_introduced ;
var bool: aux12842_BOOL:: var_is_introduced ;
var bool: aux12843_BOOL:: var_is_introduced ;
var 4..61: aux12844:: var_is_introduced ;
var bool: aux12845_BOOL:: var_is_introduced ;
var bool: aux12846_BOOL:: var_is_introduced ;
var bool: aux12847_BOOL:: var_is_introduced ;
var {0,1}: aux12847_INTEGER :: var_is_introduced ;
var bool: aux12848_BOOL:: var_is_introduced ;
var bool: aux12849_BOOL:: var_is_introduced ;
var 4..61: aux12850:: var_is_introduced ;
var bool: aux12851_BOOL:: var_is_introduced ;
var bool: aux12852_BOOL:: var_is_introduced ;
var bool: aux12853_BOOL:: var_is_introduced ;
var {0,1}: aux12853_INTEGER :: var_is_introduced ;
var bool: aux12854_BOOL:: var_is_introduced ;
var bool: aux12855_BOOL:: var_is_introduced ;
var 2..59: aux12856:: var_is_introduced ;
var bool: aux12857_BOOL:: var_is_introduced ;
var bool: aux12858_BOOL:: var_is_introduced ;
var bool: aux12859_BOOL:: var_is_introduced ;
var {0,1}: aux12859_INTEGER :: var_is_introduced ;
var bool: aux12860_BOOL:: var_is_introduced ;
var bool: aux12861_BOOL:: var_is_introduced ;
var 3..60: aux12862:: var_is_introduced ;
var bool: aux12863_BOOL:: var_is_introduced ;
var bool: aux12864_BOOL:: var_is_introduced ;
var bool: aux12865_BOOL:: var_is_introduced ;
var {0,1}: aux12865_INTEGER :: var_is_introduced ;
var bool: aux12866_BOOL:: var_is_introduced ;
var bool: aux12867_BOOL:: var_is_introduced ;
var 2..59: aux12868:: var_is_introduced ;
var bool: aux12869_BOOL:: var_is_introduced ;
var bool: aux12870_BOOL:: var_is_introduced ;
var bool: aux12871_BOOL:: var_is_introduced ;
var {0,1}: aux12871_INTEGER :: var_is_introduced ;
var bool: aux12872_BOOL:: var_is_introduced ;
var bool: aux12873_BOOL:: var_is_introduced ;
var 3..60: aux12874:: var_is_introduced ;
var bool: aux12875_BOOL:: var_is_introduced ;
var bool: aux12876_BOOL:: var_is_introduced ;
var bool: aux12877_BOOL:: var_is_introduced ;
var {0,1}: aux12877_INTEGER :: var_is_introduced ;
var bool: aux12878_BOOL:: var_is_introduced ;
var bool: aux12879_BOOL:: var_is_introduced ;
var 2..59: aux12880:: var_is_introduced ;
var bool: aux12881_BOOL:: var_is_introduced ;
var bool: aux12882_BOOL:: var_is_introduced ;
var bool: aux12883_BOOL:: var_is_introduced ;
var {0,1}: aux12883_INTEGER :: var_is_introduced ;
var bool: aux12884_BOOL:: var_is_introduced ;
var bool: aux12885_BOOL:: var_is_introduced ;
var 2..59: aux12886:: var_is_introduced ;
var bool: aux12887_BOOL:: var_is_introduced ;
var bool: aux12888_BOOL:: var_is_introduced ;
var bool: aux12889_BOOL:: var_is_introduced ;
var {0,1}: aux12889_INTEGER :: var_is_introduced ;
var bool: aux12890_BOOL:: var_is_introduced ;
var bool: aux12891_BOOL:: var_is_introduced ;
var 5..62: aux12892:: var_is_introduced ;
var bool: aux12893_BOOL:: var_is_introduced ;
var bool: aux12894_BOOL:: var_is_introduced ;
var bool: aux12895_BOOL:: var_is_introduced ;
var {0,1}: aux12895_INTEGER :: var_is_introduced ;
var bool: aux12896_BOOL:: var_is_introduced ;
var bool: aux12897_BOOL:: var_is_introduced ;
var 3..60: aux12898:: var_is_introduced ;
var bool: aux12899_BOOL:: var_is_introduced ;
var bool: aux12900_BOOL:: var_is_introduced ;
var bool: aux12901_BOOL:: var_is_introduced ;
var {0,1}: aux12901_INTEGER :: var_is_introduced ;
var bool: aux12902_BOOL:: var_is_introduced ;
var bool: aux12903_BOOL:: var_is_introduced ;
var 4..61: aux12904:: var_is_introduced ;
var bool: aux12905_BOOL:: var_is_introduced ;
var bool: aux12906_BOOL:: var_is_introduced ;
var bool: aux12907_BOOL:: var_is_introduced ;
var {0,1}: aux12907_INTEGER :: var_is_introduced ;
var bool: aux12908_BOOL:: var_is_introduced ;
var bool: aux12909_BOOL:: var_is_introduced ;
var 3..60: aux12910:: var_is_introduced ;
var bool: aux12911_BOOL:: var_is_introduced ;
var bool: aux12912_BOOL:: var_is_introduced ;
var bool: aux12913_BOOL:: var_is_introduced ;
var {0,1}: aux12913_INTEGER :: var_is_introduced ;
var bool: aux12914_BOOL:: var_is_introduced ;
var bool: aux12915_BOOL:: var_is_introduced ;
var 2..59: aux12916:: var_is_introduced ;
var bool: aux12917_BOOL:: var_is_introduced ;
var bool: aux12918_BOOL:: var_is_introduced ;
var bool: aux12919_BOOL:: var_is_introduced ;
var {0,1}: aux12919_INTEGER :: var_is_introduced ;
var bool: aux12920_BOOL:: var_is_introduced ;
var bool: aux12921_BOOL:: var_is_introduced ;
var 1..58: aux12922:: var_is_introduced ;
var bool: aux12923_BOOL:: var_is_introduced ;
var bool: aux12924_BOOL:: var_is_introduced ;
var bool: aux12925_BOOL:: var_is_introduced ;
var {0,1}: aux12925_INTEGER :: var_is_introduced ;
var bool: aux12926_BOOL:: var_is_introduced ;
var bool: aux12927_BOOL:: var_is_introduced ;
var 3..60: aux12928:: var_is_introduced ;
var bool: aux12929_BOOL:: var_is_introduced ;
var bool: aux12930_BOOL:: var_is_introduced ;
var bool: aux12931_BOOL:: var_is_introduced ;
var {0,1}: aux12931_INTEGER :: var_is_introduced ;
var bool: aux12932_BOOL:: var_is_introduced ;
var bool: aux12933_BOOL:: var_is_introduced ;
var 4..61: aux12934:: var_is_introduced ;
var bool: aux12935_BOOL:: var_is_introduced ;
var bool: aux12936_BOOL:: var_is_introduced ;
var bool: aux12937_BOOL:: var_is_introduced ;
var {0,1}: aux12937_INTEGER :: var_is_introduced ;
var bool: aux12938_BOOL:: var_is_introduced ;
var bool: aux12939_BOOL:: var_is_introduced ;
var 1..58: aux12940:: var_is_introduced ;
var bool: aux12941_BOOL:: var_is_introduced ;
var bool: aux12942_BOOL:: var_is_introduced ;
var bool: aux12943_BOOL:: var_is_introduced ;
var {0,1}: aux12943_INTEGER :: var_is_introduced ;
var bool: aux12944_BOOL:: var_is_introduced ;
var bool: aux12945_BOOL:: var_is_introduced ;
var 4..61: aux12946:: var_is_introduced ;
var bool: aux12947_BOOL:: var_is_introduced ;
var bool: aux12948_BOOL:: var_is_introduced ;
var bool: aux12949_BOOL:: var_is_introduced ;
var {0,1}: aux12949_INTEGER :: var_is_introduced ;
var bool: aux12950_BOOL:: var_is_introduced ;
var bool: aux12951_BOOL:: var_is_introduced ;
var 2..59: aux12952:: var_is_introduced ;
var bool: aux12953_BOOL:: var_is_introduced ;
var bool: aux12954_BOOL:: var_is_introduced ;
var bool: aux12955_BOOL:: var_is_introduced ;
var {0,1}: aux12955_INTEGER :: var_is_introduced ;
var bool: aux12956_BOOL:: var_is_introduced ;
var 3..60: aux12957:: var_is_introduced ;
var bool: aux12958_BOOL:: var_is_introduced ;
var bool: aux12959_BOOL:: var_is_introduced ;
var {0,1}: aux12959_INTEGER :: var_is_introduced ;
var bool: aux12960_BOOL:: var_is_introduced ;
var bool: aux12961_BOOL:: var_is_introduced ;
var bool: aux12962_BOOL:: var_is_introduced ;
var 4..61: aux12963:: var_is_introduced ;
var bool: aux12964_BOOL:: var_is_introduced ;
var bool: aux12965_BOOL:: var_is_introduced ;
var bool: aux12966_BOOL:: var_is_introduced ;
var {0,1}: aux12966_INTEGER :: var_is_introduced ;
var bool: aux12967_BOOL:: var_is_introduced ;
var bool: aux12968_BOOL:: var_is_introduced ;
var 4..61: aux12969:: var_is_introduced ;
var bool: aux12970_BOOL:: var_is_introduced ;
var bool: aux12971_BOOL:: var_is_introduced ;
var bool: aux12972_BOOL:: var_is_introduced ;
var {0,1}: aux12972_INTEGER :: var_is_introduced ;
var bool: aux12973_BOOL:: var_is_introduced ;
var bool: aux12974_BOOL:: var_is_introduced ;
var 3..60: aux12975:: var_is_introduced ;
var bool: aux12976_BOOL:: var_is_introduced ;
var bool: aux12977_BOOL:: var_is_introduced ;
var bool: aux12978_BOOL:: var_is_introduced ;
var {0,1}: aux12978_INTEGER :: var_is_introduced ;
var bool: aux12979_BOOL:: var_is_introduced ;
var bool: aux12980_BOOL:: var_is_introduced ;
var 2..59: aux12981:: var_is_introduced ;
var bool: aux12982_BOOL:: var_is_introduced ;
var bool: aux12983_BOOL:: var_is_introduced ;
var bool: aux12984_BOOL:: var_is_introduced ;
var {0,1}: aux12984_INTEGER :: var_is_introduced ;
var bool: aux12985_BOOL:: var_is_introduced ;
var bool: aux12986_BOOL:: var_is_introduced ;
var 3..60: aux12987:: var_is_introduced ;
var bool: aux12988_BOOL:: var_is_introduced ;
var bool: aux12989_BOOL:: var_is_introduced ;
var bool: aux12990_BOOL:: var_is_introduced ;
var {0,1}: aux12990_INTEGER :: var_is_introduced ;
var bool: aux12991_BOOL:: var_is_introduced ;
var bool: aux12992_BOOL:: var_is_introduced ;
var 2..59: aux12993:: var_is_introduced ;
var bool: aux12994_BOOL:: var_is_introduced ;
var bool: aux12995_BOOL:: var_is_introduced ;
var bool: aux12996_BOOL:: var_is_introduced ;
var {0,1}: aux12996_INTEGER :: var_is_introduced ;
var bool: aux12997_BOOL:: var_is_introduced ;
var bool: aux12998_BOOL:: var_is_introduced ;
var 3..60: aux12999:: var_is_introduced ;
var bool: aux13000_BOOL:: var_is_introduced ;
var bool: aux13001_BOOL:: var_is_introduced ;
var bool: aux13002_BOOL:: var_is_introduced ;
var {0,1}: aux13002_INTEGER :: var_is_introduced ;
var bool: aux13003_BOOL:: var_is_introduced ;
var bool: aux13004_BOOL:: var_is_introduced ;
var 2..59: aux13005:: var_is_introduced ;
var bool: aux13006_BOOL:: var_is_introduced ;
var bool: aux13007_BOOL:: var_is_introduced ;
var bool: aux13008_BOOL:: var_is_introduced ;
var {0,1}: aux13008_INTEGER :: var_is_introduced ;
var bool: aux13009_BOOL:: var_is_introduced ;
var bool: aux13010_BOOL:: var_is_introduced ;
var 2..59: aux13011:: var_is_introduced ;
var bool: aux13012_BOOL:: var_is_introduced ;
var bool: aux13013_BOOL:: var_is_introduced ;
var bool: aux13014_BOOL:: var_is_introduced ;
var {0,1}: aux13014_INTEGER :: var_is_introduced ;
var bool: aux13015_BOOL:: var_is_introduced ;
var bool: aux13016_BOOL:: var_is_introduced ;
var 5..62: aux13017:: var_is_introduced ;
var bool: aux13018_BOOL:: var_is_introduced ;
var bool: aux13019_BOOL:: var_is_introduced ;
var bool: aux13020_BOOL:: var_is_introduced ;
var {0,1}: aux13020_INTEGER :: var_is_introduced ;
var bool: aux13021_BOOL:: var_is_introduced ;
var bool: aux13022_BOOL:: var_is_introduced ;
var 3..60: aux13023:: var_is_introduced ;
var bool: aux13024_BOOL:: var_is_introduced ;
var bool: aux13025_BOOL:: var_is_introduced ;
var bool: aux13026_BOOL:: var_is_introduced ;
var {0,1}: aux13026_INTEGER :: var_is_introduced ;
var bool: aux13027_BOOL:: var_is_introduced ;
var bool: aux13028_BOOL:: var_is_introduced ;
var 4..61: aux13029:: var_is_introduced ;
var bool: aux13030_BOOL:: var_is_introduced ;
var bool: aux13031_BOOL:: var_is_introduced ;
var bool: aux13032_BOOL:: var_is_introduced ;
var {0,1}: aux13032_INTEGER :: var_is_introduced ;
var bool: aux13033_BOOL:: var_is_introduced ;
var bool: aux13034_BOOL:: var_is_introduced ;
var 2..59: aux13035:: var_is_introduced ;
var bool: aux13036_BOOL:: var_is_introduced ;
var bool: aux13037_BOOL:: var_is_introduced ;
var bool: aux13038_BOOL:: var_is_introduced ;
var {0,1}: aux13038_INTEGER :: var_is_introduced ;
var bool: aux13039_BOOL:: var_is_introduced ;
var bool: aux13040_BOOL:: var_is_introduced ;
var 1..58: aux13041:: var_is_introduced ;
var bool: aux13042_BOOL:: var_is_introduced ;
var bool: aux13043_BOOL:: var_is_introduced ;
var bool: aux13044_BOOL:: var_is_introduced ;
var {0,1}: aux13044_INTEGER :: var_is_introduced ;
var bool: aux13045_BOOL:: var_is_introduced ;
var bool: aux13046_BOOL:: var_is_introduced ;
var 3..60: aux13047:: var_is_introduced ;
var bool: aux13048_BOOL:: var_is_introduced ;
var bool: aux13049_BOOL:: var_is_introduced ;
var bool: aux13050_BOOL:: var_is_introduced ;
var {0,1}: aux13050_INTEGER :: var_is_introduced ;
var bool: aux13051_BOOL:: var_is_introduced ;
var bool: aux13052_BOOL:: var_is_introduced ;
var 4..61: aux13053:: var_is_introduced ;
var bool: aux13054_BOOL:: var_is_introduced ;
var bool: aux13055_BOOL:: var_is_introduced ;
var bool: aux13056_BOOL:: var_is_introduced ;
var {0,1}: aux13056_INTEGER :: var_is_introduced ;
var bool: aux13057_BOOL:: var_is_introduced ;
var bool: aux13058_BOOL:: var_is_introduced ;
var 1..58: aux13059:: var_is_introduced ;
var bool: aux13060_BOOL:: var_is_introduced ;
var bool: aux13061_BOOL:: var_is_introduced ;
var bool: aux13062_BOOL:: var_is_introduced ;
var {0,1}: aux13062_INTEGER :: var_is_introduced ;
var bool: aux13063_BOOL:: var_is_introduced ;
var bool: aux13064_BOOL:: var_is_introduced ;
var 4..61: aux13065:: var_is_introduced ;
var bool: aux13066_BOOL:: var_is_introduced ;
var bool: aux13067_BOOL:: var_is_introduced ;
var bool: aux13068_BOOL:: var_is_introduced ;
var {0,1}: aux13068_INTEGER :: var_is_introduced ;
var bool: aux13069_BOOL:: var_is_introduced ;
var bool: aux13070_BOOL:: var_is_introduced ;
var 2..59: aux13071:: var_is_introduced ;
var bool: aux13072_BOOL:: var_is_introduced ;
var bool: aux13073_BOOL:: var_is_introduced ;
var bool: aux13074_BOOL:: var_is_introduced ;
var {0,1}: aux13074_INTEGER :: var_is_introduced ;
var bool: aux13075_BOOL:: var_is_introduced ;
var 3..60: aux13076:: var_is_introduced ;
var bool: aux13077_BOOL:: var_is_introduced ;
var bool: aux13078_BOOL:: var_is_introduced ;
var {0,1}: aux13078_INTEGER :: var_is_introduced ;
var bool: aux13079_BOOL:: var_is_introduced ;
var bool: aux13080_BOOL:: var_is_introduced ;
var bool: aux13081_BOOL:: var_is_introduced ;
var 4..61: aux13082:: var_is_introduced ;
var bool: aux13083_BOOL:: var_is_introduced ;
var bool: aux13084_BOOL:: var_is_introduced ;
var bool: aux13085_BOOL:: var_is_introduced ;
var {0,1}: aux13085_INTEGER :: var_is_introduced ;
var bool: aux13086_BOOL:: var_is_introduced ;
var bool: aux13087_BOOL:: var_is_introduced ;
var 4..61: aux13088:: var_is_introduced ;
var bool: aux13089_BOOL:: var_is_introduced ;
var bool: aux13090_BOOL:: var_is_introduced ;
var bool: aux13091_BOOL:: var_is_introduced ;
var {0,1}: aux13091_INTEGER :: var_is_introduced ;
var bool: aux13092_BOOL:: var_is_introduced ;
var bool: aux13093_BOOL:: var_is_introduced ;
var 3..60: aux13094:: var_is_introduced ;
var bool: aux13095_BOOL:: var_is_introduced ;
var bool: aux13096_BOOL:: var_is_introduced ;
var bool: aux13097_BOOL:: var_is_introduced ;
var {0,1}: aux13097_INTEGER :: var_is_introduced ;
var bool: aux13098_BOOL:: var_is_introduced ;
var bool: aux13099_BOOL:: var_is_introduced ;
var 2..59: aux13100:: var_is_introduced ;
var bool: aux13101_BOOL:: var_is_introduced ;
var bool: aux13102_BOOL:: var_is_introduced ;
var bool: aux13103_BOOL:: var_is_introduced ;
var {0,1}: aux13103_INTEGER :: var_is_introduced ;
var bool: aux13104_BOOL:: var_is_introduced ;
var bool: aux13105_BOOL:: var_is_introduced ;
var 2..59: aux13106:: var_is_introduced ;
var bool: aux13107_BOOL:: var_is_introduced ;
var bool: aux13108_BOOL:: var_is_introduced ;
var bool: aux13109_BOOL:: var_is_introduced ;
var {0,1}: aux13109_INTEGER :: var_is_introduced ;
var bool: aux13110_BOOL:: var_is_introduced ;
var bool: aux13111_BOOL:: var_is_introduced ;
var 3..60: aux13112:: var_is_introduced ;
var bool: aux13113_BOOL:: var_is_introduced ;
var bool: aux13114_BOOL:: var_is_introduced ;
var bool: aux13115_BOOL:: var_is_introduced ;
var {0,1}: aux13115_INTEGER :: var_is_introduced ;
var bool: aux13116_BOOL:: var_is_introduced ;
var bool: aux13117_BOOL:: var_is_introduced ;
var 2..59: aux13118:: var_is_introduced ;
var bool: aux13119_BOOL:: var_is_introduced ;
var bool: aux13120_BOOL:: var_is_introduced ;
var bool: aux13121_BOOL:: var_is_introduced ;
var {0,1}: aux13121_INTEGER :: var_is_introduced ;
var bool: aux13122_BOOL:: var_is_introduced ;
var bool: aux13123_BOOL:: var_is_introduced ;
var 2..59: aux13124:: var_is_introduced ;
var bool: aux13125_BOOL:: var_is_introduced ;
var bool: aux13126_BOOL:: var_is_introduced ;
var bool: aux13127_BOOL:: var_is_introduced ;
var {0,1}: aux13127_INTEGER :: var_is_introduced ;
var bool: aux13128_BOOL:: var_is_introduced ;
var bool: aux13129_BOOL:: var_is_introduced ;
var 5..62: aux13130:: var_is_introduced ;
var bool: aux13131_BOOL:: var_is_introduced ;
var bool: aux13132_BOOL:: var_is_introduced ;
var bool: aux13133_BOOL:: var_is_introduced ;
var {0,1}: aux13133_INTEGER :: var_is_introduced ;
var bool: aux13134_BOOL:: var_is_introduced ;
var bool: aux13135_BOOL:: var_is_introduced ;
var 3..60: aux13136:: var_is_introduced ;
var bool: aux13137_BOOL:: var_is_introduced ;
var bool: aux13138_BOOL:: var_is_introduced ;
var bool: aux13139_BOOL:: var_is_introduced ;
var {0,1}: aux13139_INTEGER :: var_is_introduced ;
var bool: aux13140_BOOL:: var_is_introduced ;
var bool: aux13141_BOOL:: var_is_introduced ;
var 4..61: aux13142:: var_is_introduced ;
var bool: aux13143_BOOL:: var_is_introduced ;
var bool: aux13144_BOOL:: var_is_introduced ;
var bool: aux13145_BOOL:: var_is_introduced ;
var {0,1}: aux13145_INTEGER :: var_is_introduced ;
var bool: aux13146_BOOL:: var_is_introduced ;
var bool: aux13147_BOOL:: var_is_introduced ;
var 3..60: aux13148:: var_is_introduced ;
var bool: aux13149_BOOL:: var_is_introduced ;
var bool: aux13150_BOOL:: var_is_introduced ;
var bool: aux13151_BOOL:: var_is_introduced ;
var {0,1}: aux13151_INTEGER :: var_is_introduced ;
var bool: aux13152_BOOL:: var_is_introduced ;
var bool: aux13153_BOOL:: var_is_introduced ;
var 2..59: aux13154:: var_is_introduced ;
var bool: aux13155_BOOL:: var_is_introduced ;
var bool: aux13156_BOOL:: var_is_introduced ;
var bool: aux13157_BOOL:: var_is_introduced ;
var {0,1}: aux13157_INTEGER :: var_is_introduced ;
var bool: aux13158_BOOL:: var_is_introduced ;
var bool: aux13159_BOOL:: var_is_introduced ;
var 1..58: aux13160:: var_is_introduced ;
var bool: aux13161_BOOL:: var_is_introduced ;
var bool: aux13162_BOOL:: var_is_introduced ;
var bool: aux13163_BOOL:: var_is_introduced ;
var {0,1}: aux13163_INTEGER :: var_is_introduced ;
var bool: aux13164_BOOL:: var_is_introduced ;
var bool: aux13165_BOOL:: var_is_introduced ;
var 3..60: aux13166:: var_is_introduced ;
var bool: aux13167_BOOL:: var_is_introduced ;
var bool: aux13168_BOOL:: var_is_introduced ;
var bool: aux13169_BOOL:: var_is_introduced ;
var {0,1}: aux13169_INTEGER :: var_is_introduced ;
var bool: aux13170_BOOL:: var_is_introduced ;
var bool: aux13171_BOOL:: var_is_introduced ;
var 4..61: aux13172:: var_is_introduced ;
var bool: aux13173_BOOL:: var_is_introduced ;
var bool: aux13174_BOOL:: var_is_introduced ;
var bool: aux13175_BOOL:: var_is_introduced ;
var {0,1}: aux13175_INTEGER :: var_is_introduced ;
var bool: aux13176_BOOL:: var_is_introduced ;
var bool: aux13177_BOOL:: var_is_introduced ;
var 1..58: aux13178:: var_is_introduced ;
var bool: aux13179_BOOL:: var_is_introduced ;
var bool: aux13180_BOOL:: var_is_introduced ;
var bool: aux13181_BOOL:: var_is_introduced ;
var {0,1}: aux13181_INTEGER :: var_is_introduced ;
var bool: aux13182_BOOL:: var_is_introduced ;
var bool: aux13183_BOOL:: var_is_introduced ;
var 4..61: aux13184:: var_is_introduced ;
var bool: aux13185_BOOL:: var_is_introduced ;
var bool: aux13186_BOOL:: var_is_introduced ;
var bool: aux13187_BOOL:: var_is_introduced ;
var {0,1}: aux13187_INTEGER :: var_is_introduced ;
var bool: aux13188_BOOL:: var_is_introduced ;
var bool: aux13189_BOOL:: var_is_introduced ;
var 2..59: aux13190:: var_is_introduced ;
var bool: aux13191_BOOL:: var_is_introduced ;
var bool: aux13192_BOOL:: var_is_introduced ;
var bool: aux13193_BOOL:: var_is_introduced ;
var {0,1}: aux13193_INTEGER :: var_is_introduced ;
var bool: aux13194_BOOL:: var_is_introduced ;
var 3..60: aux13195:: var_is_introduced ;
var bool: aux13196_BOOL:: var_is_introduced ;
var bool: aux13197_BOOL:: var_is_introduced ;
var {0,1}: aux13197_INTEGER :: var_is_introduced ;
var bool: aux13198_BOOL:: var_is_introduced ;
var bool: aux13199_BOOL:: var_is_introduced ;
var bool: aux13200_BOOL:: var_is_introduced ;
var 4..61: aux13201:: var_is_introduced ;
var bool: aux13202_BOOL:: var_is_introduced ;
var bool: aux13203_BOOL:: var_is_introduced ;
var bool: aux13204_BOOL:: var_is_introduced ;
var {0,1}: aux13204_INTEGER :: var_is_introduced ;
var bool: aux13205_BOOL:: var_is_introduced ;
var bool: aux13206_BOOL:: var_is_introduced ;
var 4..61: aux13207:: var_is_introduced ;
var bool: aux13208_BOOL:: var_is_introduced ;
var bool: aux13209_BOOL:: var_is_introduced ;
var bool: aux13210_BOOL:: var_is_introduced ;
var {0,1}: aux13210_INTEGER :: var_is_introduced ;
var bool: aux13211_BOOL:: var_is_introduced ;
var bool: aux13212_BOOL:: var_is_introduced ;
var 3..60: aux13213:: var_is_introduced ;
var bool: aux13214_BOOL:: var_is_introduced ;
var bool: aux13215_BOOL:: var_is_introduced ;
var bool: aux13216_BOOL:: var_is_introduced ;
var {0,1}: aux13216_INTEGER :: var_is_introduced ;
var bool: aux13217_BOOL:: var_is_introduced ;
var bool: aux13218_BOOL:: var_is_introduced ;
var 2..59: aux13219:: var_is_introduced ;
var bool: aux13220_BOOL:: var_is_introduced ;
var bool: aux13221_BOOL:: var_is_introduced ;
var bool: aux13222_BOOL:: var_is_introduced ;
var {0,1}: aux13222_INTEGER :: var_is_introduced ;
var bool: aux13223_BOOL:: var_is_introduced ;
var bool: aux13224_BOOL:: var_is_introduced ;
var 3..60: aux13225:: var_is_introduced ;
var bool: aux13226_BOOL:: var_is_introduced ;
var bool: aux13227_BOOL:: var_is_introduced ;
var bool: aux13228_BOOL:: var_is_introduced ;
var {0,1}: aux13228_INTEGER :: var_is_introduced ;
var bool: aux13229_BOOL:: var_is_introduced ;
var bool: aux13230_BOOL:: var_is_introduced ;
var 2..59: aux13231:: var_is_introduced ;
var bool: aux13232_BOOL:: var_is_introduced ;
var bool: aux13233_BOOL:: var_is_introduced ;
var bool: aux13234_BOOL:: var_is_introduced ;
var {0,1}: aux13234_INTEGER :: var_is_introduced ;
var bool: aux13235_BOOL:: var_is_introduced ;
var bool: aux13236_BOOL:: var_is_introduced ;
var 3..60: aux13237:: var_is_introduced ;
var bool: aux13238_BOOL:: var_is_introduced ;
var bool: aux13239_BOOL:: var_is_introduced ;
var bool: aux13240_BOOL:: var_is_introduced ;
var {0,1}: aux13240_INTEGER :: var_is_introduced ;
var bool: aux13241_BOOL:: var_is_introduced ;
var bool: aux13242_BOOL:: var_is_introduced ;
var 2..59: aux13243:: var_is_introduced ;
var bool: aux13244_BOOL:: var_is_introduced ;
var bool: aux13245_BOOL:: var_is_introduced ;
var bool: aux13246_BOOL:: var_is_introduced ;
var {0,1}: aux13246_INTEGER :: var_is_introduced ;
var bool: aux13247_BOOL:: var_is_introduced ;
var bool: aux13248_BOOL:: var_is_introduced ;
var 2..59: aux13249:: var_is_introduced ;
var bool: aux13250_BOOL:: var_is_introduced ;
var bool: aux13251_BOOL:: var_is_introduced ;
var bool: aux13252_BOOL:: var_is_introduced ;
var {0,1}: aux13252_INTEGER :: var_is_introduced ;
var bool: aux13253_BOOL:: var_is_introduced ;
var bool: aux13254_BOOL:: var_is_introduced ;
var 5..62: aux13255:: var_is_introduced ;
var bool: aux13256_BOOL:: var_is_introduced ;
var bool: aux13257_BOOL:: var_is_introduced ;
var bool: aux13258_BOOL:: var_is_introduced ;
var {0,1}: aux13258_INTEGER :: var_is_introduced ;
var bool: aux13259_BOOL:: var_is_introduced ;
var bool: aux13260_BOOL:: var_is_introduced ;
var 3..60: aux13261:: var_is_introduced ;
var bool: aux13262_BOOL:: var_is_introduced ;
var bool: aux13263_BOOL:: var_is_introduced ;
var bool: aux13264_BOOL:: var_is_introduced ;
var {0,1}: aux13264_INTEGER :: var_is_introduced ;
var bool: aux13265_BOOL:: var_is_introduced ;
var bool: aux13266_BOOL:: var_is_introduced ;
var 4..61: aux13267:: var_is_introduced ;
var bool: aux13268_BOOL:: var_is_introduced ;
var bool: aux13269_BOOL:: var_is_introduced ;
var bool: aux13270_BOOL:: var_is_introduced ;
var {0,1}: aux13270_INTEGER :: var_is_introduced ;
var bool: aux13271_BOOL:: var_is_introduced ;
var bool: aux13272_BOOL:: var_is_introduced ;
var 3..60: aux13273:: var_is_introduced ;
var bool: aux13274_BOOL:: var_is_introduced ;
var bool: aux13275_BOOL:: var_is_introduced ;
var bool: aux13276_BOOL:: var_is_introduced ;
var {0,1}: aux13276_INTEGER :: var_is_introduced ;
var bool: aux13277_BOOL:: var_is_introduced ;
var bool: aux13278_BOOL:: var_is_introduced ;
var 2..59: aux13279:: var_is_introduced ;
var bool: aux13280_BOOL:: var_is_introduced ;
var bool: aux13281_BOOL:: var_is_introduced ;
var bool: aux13282_BOOL:: var_is_introduced ;
var {0,1}: aux13282_INTEGER :: var_is_introduced ;
var bool: aux13283_BOOL:: var_is_introduced ;
var bool: aux13284_BOOL:: var_is_introduced ;
var 1..58: aux13285:: var_is_introduced ;
var bool: aux13286_BOOL:: var_is_introduced ;
var bool: aux13287_BOOL:: var_is_introduced ;
var bool: aux13288_BOOL:: var_is_introduced ;
var {0,1}: aux13288_INTEGER :: var_is_introduced ;
var bool: aux13289_BOOL:: var_is_introduced ;
var bool: aux13290_BOOL:: var_is_introduced ;
var 3..60: aux13291:: var_is_introduced ;
var bool: aux13292_BOOL:: var_is_introduced ;
var bool: aux13293_BOOL:: var_is_introduced ;
var bool: aux13294_BOOL:: var_is_introduced ;
var {0,1}: aux13294_INTEGER :: var_is_introduced ;
var bool: aux13295_BOOL:: var_is_introduced ;
var bool: aux13296_BOOL:: var_is_introduced ;
var 4..61: aux13297:: var_is_introduced ;
var bool: aux13298_BOOL:: var_is_introduced ;
var bool: aux13299_BOOL:: var_is_introduced ;
var bool: aux13300_BOOL:: var_is_introduced ;
var {0,1}: aux13300_INTEGER :: var_is_introduced ;
var bool: aux13301_BOOL:: var_is_introduced ;
var bool: aux13302_BOOL:: var_is_introduced ;
var 4..61: aux13303:: var_is_introduced ;
var bool: aux13304_BOOL:: var_is_introduced ;
var bool: aux13305_BOOL:: var_is_introduced ;
var bool: aux13306_BOOL:: var_is_introduced ;
var {0,1}: aux13306_INTEGER :: var_is_introduced ;
var bool: aux13307_BOOL:: var_is_introduced ;
var bool: aux13308_BOOL:: var_is_introduced ;
var 2..59: aux13309:: var_is_introduced ;
var bool: aux13310_BOOL:: var_is_introduced ;
var bool: aux13311_BOOL:: var_is_introduced ;
var bool: aux13312_BOOL:: var_is_introduced ;
var {0,1}: aux13312_INTEGER :: var_is_introduced ;
var bool: aux13313_BOOL:: var_is_introduced ;
var 1..58: aux13314:: var_is_introduced ;
var bool: aux13315_BOOL:: var_is_introduced ;
var bool: aux13316_BOOL:: var_is_introduced ;
var {0,1}: aux13316_INTEGER :: var_is_introduced ;
var bool: aux13317_BOOL:: var_is_introduced ;
var bool: aux13318_BOOL:: var_is_introduced ;
var bool: aux13319_BOOL:: var_is_introduced ;
var 4..61: aux13320:: var_is_introduced ;
var bool: aux13321_BOOL:: var_is_introduced ;
var bool: aux13322_BOOL:: var_is_introduced ;
var bool: aux13323_BOOL:: var_is_introduced ;
var {0,1}: aux13323_INTEGER :: var_is_introduced ;
var bool: aux13324_BOOL:: var_is_introduced ;
var bool: aux13325_BOOL:: var_is_introduced ;
var 4..61: aux13326:: var_is_introduced ;
var bool: aux13327_BOOL:: var_is_introduced ;
var bool: aux13328_BOOL:: var_is_introduced ;
var bool: aux13329_BOOL:: var_is_introduced ;
var {0,1}: aux13329_INTEGER :: var_is_introduced ;
var bool: aux13330_BOOL:: var_is_introduced ;
var bool: aux13331_BOOL:: var_is_introduced ;
var 3..60: aux13332:: var_is_introduced ;
var bool: aux13333_BOOL:: var_is_introduced ;
var bool: aux13334_BOOL:: var_is_introduced ;
var bool: aux13335_BOOL:: var_is_introduced ;
var {0,1}: aux13335_INTEGER :: var_is_introduced ;
var bool: aux13336_BOOL:: var_is_introduced ;
var bool: aux13337_BOOL:: var_is_introduced ;
var 2..59: aux13338:: var_is_introduced ;
var bool: aux13339_BOOL:: var_is_introduced ;
var bool: aux13340_BOOL:: var_is_introduced ;
var bool: aux13341_BOOL:: var_is_introduced ;
var {0,1}: aux13341_INTEGER :: var_is_introduced ;
var bool: aux13342_BOOL:: var_is_introduced ;
var bool: aux13343_BOOL:: var_is_introduced ;
var 3..60: aux13344:: var_is_introduced ;
var bool: aux13345_BOOL:: var_is_introduced ;
var bool: aux13346_BOOL:: var_is_introduced ;
var bool: aux13347_BOOL:: var_is_introduced ;
var {0,1}: aux13347_INTEGER :: var_is_introduced ;
var bool: aux13348_BOOL:: var_is_introduced ;
var bool: aux13349_BOOL:: var_is_introduced ;
var 2..59: aux13350:: var_is_introduced ;
var bool: aux13351_BOOL:: var_is_introduced ;
var bool: aux13352_BOOL:: var_is_introduced ;
var bool: aux13353_BOOL:: var_is_introduced ;
var {0,1}: aux13353_INTEGER :: var_is_introduced ;
var bool: aux13354_BOOL:: var_is_introduced ;
var bool: aux13355_BOOL:: var_is_introduced ;
var 2..59: aux13356:: var_is_introduced ;
var bool: aux13357_BOOL:: var_is_introduced ;
var bool: aux13358_BOOL:: var_is_introduced ;
var bool: aux13359_BOOL:: var_is_introduced ;
var {0,1}: aux13359_INTEGER :: var_is_introduced ;
var bool: aux13360_BOOL:: var_is_introduced ;
var bool: aux13361_BOOL:: var_is_introduced ;
var 2..59: aux13362:: var_is_introduced ;
var bool: aux13363_BOOL:: var_is_introduced ;
var bool: aux13364_BOOL:: var_is_introduced ;
var bool: aux13365_BOOL:: var_is_introduced ;
var {0,1}: aux13365_INTEGER :: var_is_introduced ;
var bool: aux13366_BOOL:: var_is_introduced ;
var bool: aux13367_BOOL:: var_is_introduced ;
var 5..62: aux13368:: var_is_introduced ;
var bool: aux13369_BOOL:: var_is_introduced ;
var bool: aux13370_BOOL:: var_is_introduced ;
var bool: aux13371_BOOL:: var_is_introduced ;
var {0,1}: aux13371_INTEGER :: var_is_introduced ;
var bool: aux13372_BOOL:: var_is_introduced ;
var bool: aux13373_BOOL:: var_is_introduced ;
var 3..60: aux13374:: var_is_introduced ;
var bool: aux13375_BOOL:: var_is_introduced ;
var bool: aux13376_BOOL:: var_is_introduced ;
var bool: aux13377_BOOL:: var_is_introduced ;
var {0,1}: aux13377_INTEGER :: var_is_introduced ;
var bool: aux13378_BOOL:: var_is_introduced ;
var bool: aux13379_BOOL:: var_is_introduced ;
var 4..61: aux13380:: var_is_introduced ;
var bool: aux13381_BOOL:: var_is_introduced ;
var bool: aux13382_BOOL:: var_is_introduced ;
var bool: aux13383_BOOL:: var_is_introduced ;
var {0,1}: aux13383_INTEGER :: var_is_introduced ;
var bool: aux13384_BOOL:: var_is_introduced ;
var bool: aux13385_BOOL:: var_is_introduced ;
var 3..60: aux13386:: var_is_introduced ;
var bool: aux13387_BOOL:: var_is_introduced ;
var bool: aux13388_BOOL:: var_is_introduced ;
var bool: aux13389_BOOL:: var_is_introduced ;
var {0,1}: aux13389_INTEGER :: var_is_introduced ;
var bool: aux13390_BOOL:: var_is_introduced ;
var bool: aux13391_BOOL:: var_is_introduced ;
var 2..59: aux13392:: var_is_introduced ;
var bool: aux13393_BOOL:: var_is_introduced ;
var bool: aux13394_BOOL:: var_is_introduced ;
var bool: aux13395_BOOL:: var_is_introduced ;
var {0,1}: aux13395_INTEGER :: var_is_introduced ;
var bool: aux13396_BOOL:: var_is_introduced ;
var bool: aux13397_BOOL:: var_is_introduced ;
var 1..58: aux13398:: var_is_introduced ;
var bool: aux13399_BOOL:: var_is_introduced ;
var bool: aux13400_BOOL:: var_is_introduced ;
var bool: aux13401_BOOL:: var_is_introduced ;
var {0,1}: aux13401_INTEGER :: var_is_introduced ;
var bool: aux13402_BOOL:: var_is_introduced ;
var bool: aux13403_BOOL:: var_is_introduced ;
var 3..60: aux13404:: var_is_introduced ;
var bool: aux13405_BOOL:: var_is_introduced ;
var bool: aux13406_BOOL:: var_is_introduced ;
var bool: aux13407_BOOL:: var_is_introduced ;
var {0,1}: aux13407_INTEGER :: var_is_introduced ;
var bool: aux13408_BOOL:: var_is_introduced ;
var bool: aux13409_BOOL:: var_is_introduced ;
var 4..61: aux13410:: var_is_introduced ;
var bool: aux13411_BOOL:: var_is_introduced ;
var bool: aux13412_BOOL:: var_is_introduced ;
var bool: aux13413_BOOL:: var_is_introduced ;
var {0,1}: aux13413_INTEGER :: var_is_introduced ;
var bool: aux13414_BOOL:: var_is_introduced ;
var bool: aux13415_BOOL:: var_is_introduced ;
var 1..58: aux13416:: var_is_introduced ;
var bool: aux13417_BOOL:: var_is_introduced ;
var bool: aux13418_BOOL:: var_is_introduced ;
var bool: aux13419_BOOL:: var_is_introduced ;
var {0,1}: aux13419_INTEGER :: var_is_introduced ;
var bool: aux13420_BOOL:: var_is_introduced ;
var bool: aux13421_BOOL:: var_is_introduced ;
var 4..61: aux13422:: var_is_introduced ;
var bool: aux13423_BOOL:: var_is_introduced ;
var bool: aux13424_BOOL:: var_is_introduced ;
var bool: aux13425_BOOL:: var_is_introduced ;
var {0,1}: aux13425_INTEGER :: var_is_introduced ;
var bool: aux13426_BOOL:: var_is_introduced ;
var bool: aux13427_BOOL:: var_is_introduced ;
var 2..59: aux13428:: var_is_introduced ;
var bool: aux13429_BOOL:: var_is_introduced ;
var bool: aux13430_BOOL:: var_is_introduced ;
var bool: aux13431_BOOL:: var_is_introduced ;
var {0,1}: aux13431_INTEGER :: var_is_introduced ;
var bool: aux13432_BOOL:: var_is_introduced ;
var 3..60: aux13433:: var_is_introduced ;
var bool: aux13434_BOOL:: var_is_introduced ;
var bool: aux13435_BOOL:: var_is_introduced ;
var {0,1}: aux13435_INTEGER :: var_is_introduced ;
var bool: aux13436_BOOL:: var_is_introduced ;
var bool: aux13437_BOOL:: var_is_introduced ;
var bool: aux13438_BOOL:: var_is_introduced ;
var 4..61: aux13439:: var_is_introduced ;
var bool: aux13440_BOOL:: var_is_introduced ;
var bool: aux13441_BOOL:: var_is_introduced ;
var bool: aux13442_BOOL:: var_is_introduced ;
var {0,1}: aux13442_INTEGER :: var_is_introduced ;
var bool: aux13443_BOOL:: var_is_introduced ;
var bool: aux13444_BOOL:: var_is_introduced ;
var 4..61: aux13445:: var_is_introduced ;
var bool: aux13446_BOOL:: var_is_introduced ;
var bool: aux13447_BOOL:: var_is_introduced ;
var bool: aux13448_BOOL:: var_is_introduced ;
var {0,1}: aux13448_INTEGER :: var_is_introduced ;
var bool: aux13449_BOOL:: var_is_introduced ;
var bool: aux13450_BOOL:: var_is_introduced ;
var 3..60: aux13451:: var_is_introduced ;
var bool: aux13452_BOOL:: var_is_introduced ;
var bool: aux13453_BOOL:: var_is_introduced ;
var bool: aux13454_BOOL:: var_is_introduced ;
var {0,1}: aux13454_INTEGER :: var_is_introduced ;
var bool: aux13455_BOOL:: var_is_introduced ;
var bool: aux13456_BOOL:: var_is_introduced ;
var 2..59: aux13457:: var_is_introduced ;
var bool: aux13458_BOOL:: var_is_introduced ;
var bool: aux13459_BOOL:: var_is_introduced ;
var bool: aux13460_BOOL:: var_is_introduced ;
var {0,1}: aux13460_INTEGER :: var_is_introduced ;
var bool: aux13461_BOOL:: var_is_introduced ;
var bool: aux13462_BOOL:: var_is_introduced ;
var 3..60: aux13463:: var_is_introduced ;
var bool: aux13464_BOOL:: var_is_introduced ;
var bool: aux13465_BOOL:: var_is_introduced ;
var bool: aux13466_BOOL:: var_is_introduced ;
var {0,1}: aux13466_INTEGER :: var_is_introduced ;
var bool: aux13467_BOOL:: var_is_introduced ;
var bool: aux13468_BOOL:: var_is_introduced ;
var 2..59: aux13469:: var_is_introduced ;
var bool: aux13470_BOOL:: var_is_introduced ;
var bool: aux13471_BOOL:: var_is_introduced ;
var bool: aux13472_BOOL:: var_is_introduced ;
var {0,1}: aux13472_INTEGER :: var_is_introduced ;
var bool: aux13473_BOOL:: var_is_introduced ;
var bool: aux13474_BOOL:: var_is_introduced ;
var 3..60: aux13475:: var_is_introduced ;
var bool: aux13476_BOOL:: var_is_introduced ;
var bool: aux13477_BOOL:: var_is_introduced ;
var bool: aux13478_BOOL:: var_is_introduced ;
var {0,1}: aux13478_INTEGER :: var_is_introduced ;
var bool: aux13479_BOOL:: var_is_introduced ;
var bool: aux13480_BOOL:: var_is_introduced ;
var 2..59: aux13481:: var_is_introduced ;
var bool: aux13482_BOOL:: var_is_introduced ;
var bool: aux13483_BOOL:: var_is_introduced ;
var bool: aux13484_BOOL:: var_is_introduced ;
var {0,1}: aux13484_INTEGER :: var_is_introduced ;
var bool: aux13485_BOOL:: var_is_introduced ;
var bool: aux13486_BOOL:: var_is_introduced ;
var 2..59: aux13487:: var_is_introduced ;
var bool: aux13488_BOOL:: var_is_introduced ;
var bool: aux13489_BOOL:: var_is_introduced ;
var bool: aux13490_BOOL:: var_is_introduced ;
var {0,1}: aux13490_INTEGER :: var_is_introduced ;
var bool: aux13491_BOOL:: var_is_introduced ;
var bool: aux13492_BOOL:: var_is_introduced ;
var 5..62: aux13493:: var_is_introduced ;
var bool: aux13494_BOOL:: var_is_introduced ;
var bool: aux13495_BOOL:: var_is_introduced ;
var bool: aux13496_BOOL:: var_is_introduced ;
var {0,1}: aux13496_INTEGER :: var_is_introduced ;
var bool: aux13497_BOOL:: var_is_introduced ;
var bool: aux13498_BOOL:: var_is_introduced ;
var 4..61: aux13499:: var_is_introduced ;
var bool: aux13500_BOOL:: var_is_introduced ;
var bool: aux13501_BOOL:: var_is_introduced ;
var bool: aux13502_BOOL:: var_is_introduced ;
var {0,1}: aux13502_INTEGER :: var_is_introduced ;
var bool: aux13503_BOOL:: var_is_introduced ;
var bool: aux13504_BOOL:: var_is_introduced ;
var 3..60: aux13505:: var_is_introduced ;
var bool: aux13506_BOOL:: var_is_introduced ;
var bool: aux13507_BOOL:: var_is_introduced ;
var bool: aux13508_BOOL:: var_is_introduced ;
var {0,1}: aux13508_INTEGER :: var_is_introduced ;
var bool: aux13509_BOOL:: var_is_introduced ;
var bool: aux13510_BOOL:: var_is_introduced ;
var 2..59: aux13511:: var_is_introduced ;
var bool: aux13512_BOOL:: var_is_introduced ;
var bool: aux13513_BOOL:: var_is_introduced ;
var bool: aux13514_BOOL:: var_is_introduced ;
var {0,1}: aux13514_INTEGER :: var_is_introduced ;
var bool: aux13515_BOOL:: var_is_introduced ;
var bool: aux13516_BOOL:: var_is_introduced ;
var 1..58: aux13517:: var_is_introduced ;
var bool: aux13518_BOOL:: var_is_introduced ;
var bool: aux13519_BOOL:: var_is_introduced ;
var bool: aux13520_BOOL:: var_is_introduced ;
var {0,1}: aux13520_INTEGER :: var_is_introduced ;
var bool: aux13521_BOOL:: var_is_introduced ;
var bool: aux13522_BOOL:: var_is_introduced ;
var 3..60: aux13523:: var_is_introduced ;
var bool: aux13524_BOOL:: var_is_introduced ;
var bool: aux13525_BOOL:: var_is_introduced ;
var bool: aux13526_BOOL:: var_is_introduced ;
var {0,1}: aux13526_INTEGER :: var_is_introduced ;
var bool: aux13527_BOOL:: var_is_introduced ;
var bool: aux13528_BOOL:: var_is_introduced ;
var 4..61: aux13529:: var_is_introduced ;
var bool: aux13530_BOOL:: var_is_introduced ;
var bool: aux13531_BOOL:: var_is_introduced ;
var bool: aux13532_BOOL:: var_is_introduced ;
var {0,1}: aux13532_INTEGER :: var_is_introduced ;
var bool: aux13533_BOOL:: var_is_introduced ;
var bool: aux13534_BOOL:: var_is_introduced ;
var 1..58: aux13535:: var_is_introduced ;
var bool: aux13536_BOOL:: var_is_introduced ;
var bool: aux13537_BOOL:: var_is_introduced ;
var bool: aux13538_BOOL:: var_is_introduced ;
var {0,1}: aux13538_INTEGER :: var_is_introduced ;
var bool: aux13539_BOOL:: var_is_introduced ;
var bool: aux13540_BOOL:: var_is_introduced ;
var 4..61: aux13541:: var_is_introduced ;
var bool: aux13542_BOOL:: var_is_introduced ;
var bool: aux13543_BOOL:: var_is_introduced ;
var bool: aux13544_BOOL:: var_is_introduced ;
var {0,1}: aux13544_INTEGER :: var_is_introduced ;
var bool: aux13545_BOOL:: var_is_introduced ;
var bool: aux13546_BOOL:: var_is_introduced ;
var 2..59: aux13547:: var_is_introduced ;
var bool: aux13548_BOOL:: var_is_introduced ;
var bool: aux13549_BOOL:: var_is_introduced ;
var bool: aux13550_BOOL:: var_is_introduced ;
var {0,1}: aux13550_INTEGER :: var_is_introduced ;
var bool: aux13551_BOOL:: var_is_introduced ;
var 3..60: aux13552:: var_is_introduced ;
var bool: aux13553_BOOL:: var_is_introduced ;
var bool: aux13554_BOOL:: var_is_introduced ;
var {0,1}: aux13554_INTEGER :: var_is_introduced ;
var bool: aux13555_BOOL:: var_is_introduced ;
var bool: aux13556_BOOL:: var_is_introduced ;
var bool: aux13557_BOOL:: var_is_introduced ;
var 4..61: aux13558:: var_is_introduced ;
var bool: aux13559_BOOL:: var_is_introduced ;
var bool: aux13560_BOOL:: var_is_introduced ;
var bool: aux13561_BOOL:: var_is_introduced ;
var {0,1}: aux13561_INTEGER :: var_is_introduced ;
var bool: aux13562_BOOL:: var_is_introduced ;
var bool: aux13563_BOOL:: var_is_introduced ;
var 4..61: aux13564:: var_is_introduced ;
var bool: aux13565_BOOL:: var_is_introduced ;
var bool: aux13566_BOOL:: var_is_introduced ;
var bool: aux13567_BOOL:: var_is_introduced ;
var {0,1}: aux13567_INTEGER :: var_is_introduced ;
var bool: aux13568_BOOL:: var_is_introduced ;
var bool: aux13569_BOOL:: var_is_introduced ;
var 3..60: aux13570:: var_is_introduced ;
var bool: aux13571_BOOL:: var_is_introduced ;
var bool: aux13572_BOOL:: var_is_introduced ;
var bool: aux13573_BOOL:: var_is_introduced ;
var {0,1}: aux13573_INTEGER :: var_is_introduced ;
var bool: aux13574_BOOL:: var_is_introduced ;
var bool: aux13575_BOOL:: var_is_introduced ;
var 2..59: aux13576:: var_is_introduced ;
var bool: aux13577_BOOL:: var_is_introduced ;
var bool: aux13578_BOOL:: var_is_introduced ;
var bool: aux13579_BOOL:: var_is_introduced ;
var {0,1}: aux13579_INTEGER :: var_is_introduced ;
var bool: aux13580_BOOL:: var_is_introduced ;
var bool: aux13581_BOOL:: var_is_introduced ;
var 3..60: aux13582:: var_is_introduced ;
var bool: aux13583_BOOL:: var_is_introduced ;
var bool: aux13584_BOOL:: var_is_introduced ;
var bool: aux13585_BOOL:: var_is_introduced ;
var {0,1}: aux13585_INTEGER :: var_is_introduced ;
var bool: aux13586_BOOL:: var_is_introduced ;
var bool: aux13587_BOOL:: var_is_introduced ;
var 2..59: aux13588:: var_is_introduced ;
var bool: aux13589_BOOL:: var_is_introduced ;
var bool: aux13590_BOOL:: var_is_introduced ;
var bool: aux13591_BOOL:: var_is_introduced ;
var {0,1}: aux13591_INTEGER :: var_is_introduced ;
var bool: aux13592_BOOL:: var_is_introduced ;
var bool: aux13593_BOOL:: var_is_introduced ;
var 3..60: aux13594:: var_is_introduced ;
var bool: aux13595_BOOL:: var_is_introduced ;
var bool: aux13596_BOOL:: var_is_introduced ;
var bool: aux13597_BOOL:: var_is_introduced ;
var {0,1}: aux13597_INTEGER :: var_is_introduced ;
var bool: aux13598_BOOL:: var_is_introduced ;
var bool: aux13599_BOOL:: var_is_introduced ;
var 2..59: aux13600:: var_is_introduced ;
var bool: aux13601_BOOL:: var_is_introduced ;
var bool: aux13602_BOOL:: var_is_introduced ;
var bool: aux13603_BOOL:: var_is_introduced ;
var {0,1}: aux13603_INTEGER :: var_is_introduced ;
var bool: aux13604_BOOL:: var_is_introduced ;
var bool: aux13605_BOOL:: var_is_introduced ;
var 2..59: aux13606:: var_is_introduced ;
var bool: aux13607_BOOL:: var_is_introduced ;
var bool: aux13608_BOOL:: var_is_introduced ;
var bool: aux13609_BOOL:: var_is_introduced ;
var {0,1}: aux13609_INTEGER :: var_is_introduced ;
var bool: aux13610_BOOL:: var_is_introduced ;
var bool: aux13611_BOOL:: var_is_introduced ;
var 5..62: aux13612:: var_is_introduced ;
var bool: aux13613_BOOL:: var_is_introduced ;
var bool: aux13614_BOOL:: var_is_introduced ;
var bool: aux13615_BOOL:: var_is_introduced ;
var {0,1}: aux13615_INTEGER :: var_is_introduced ;
var bool: aux13616_BOOL:: var_is_introduced ;
var bool: aux13617_BOOL:: var_is_introduced ;
var 3..60: aux13618:: var_is_introduced ;
var bool: aux13619_BOOL:: var_is_introduced ;
var bool: aux13620_BOOL:: var_is_introduced ;
var bool: aux13621_BOOL:: var_is_introduced ;
var {0,1}: aux13621_INTEGER :: var_is_introduced ;
var bool: aux13622_BOOL:: var_is_introduced ;
var bool: aux13623_BOOL:: var_is_introduced ;
var 4..61: aux13624:: var_is_introduced ;
var bool: aux13625_BOOL:: var_is_introduced ;
var bool: aux13626_BOOL:: var_is_introduced ;
var bool: aux13627_BOOL:: var_is_introduced ;
var {0,1}: aux13627_INTEGER :: var_is_introduced ;
var bool: aux13628_BOOL:: var_is_introduced ;
var bool: aux13629_BOOL:: var_is_introduced ;
var 3..60: aux13630:: var_is_introduced ;
var bool: aux13631_BOOL:: var_is_introduced ;
var bool: aux13632_BOOL:: var_is_introduced ;
var bool: aux13633_BOOL:: var_is_introduced ;
var {0,1}: aux13633_INTEGER :: var_is_introduced ;
var bool: aux13634_BOOL:: var_is_introduced ;
var bool: aux13635_BOOL:: var_is_introduced ;
var 2..59: aux13636:: var_is_introduced ;
var bool: aux13637_BOOL:: var_is_introduced ;
var bool: aux13638_BOOL:: var_is_introduced ;
var bool: aux13639_BOOL:: var_is_introduced ;
var {0,1}: aux13639_INTEGER :: var_is_introduced ;
var bool: aux13640_BOOL:: var_is_introduced ;
var bool: aux13641_BOOL:: var_is_introduced ;
var 1..58: aux13642:: var_is_introduced ;
var bool: aux13643_BOOL:: var_is_introduced ;
var bool: aux13644_BOOL:: var_is_introduced ;
var bool: aux13645_BOOL:: var_is_introduced ;
var {0,1}: aux13645_INTEGER :: var_is_introduced ;
var bool: aux13646_BOOL:: var_is_introduced ;
var bool: aux13647_BOOL:: var_is_introduced ;
var 3..60: aux13648:: var_is_introduced ;
var bool: aux13649_BOOL:: var_is_introduced ;
var bool: aux13650_BOOL:: var_is_introduced ;
var bool: aux13651_BOOL:: var_is_introduced ;
var {0,1}: aux13651_INTEGER :: var_is_introduced ;
var bool: aux13652_BOOL:: var_is_introduced ;
var bool: aux13653_BOOL:: var_is_introduced ;
var 4..61: aux13654:: var_is_introduced ;
var bool: aux13655_BOOL:: var_is_introduced ;
var bool: aux13656_BOOL:: var_is_introduced ;
var bool: aux13657_BOOL:: var_is_introduced ;
var {0,1}: aux13657_INTEGER :: var_is_introduced ;
var bool: aux13658_BOOL:: var_is_introduced ;
var bool: aux13659_BOOL:: var_is_introduced ;
var 1..58: aux13660:: var_is_introduced ;
var bool: aux13661_BOOL:: var_is_introduced ;
var bool: aux13662_BOOL:: var_is_introduced ;
var bool: aux13663_BOOL:: var_is_introduced ;
var {0,1}: aux13663_INTEGER :: var_is_introduced ;
var bool: aux13664_BOOL:: var_is_introduced ;
var bool: aux13665_BOOL:: var_is_introduced ;
var 2..59: aux13666:: var_is_introduced ;
var bool: aux13667_BOOL:: var_is_introduced ;
var bool: aux13668_BOOL:: var_is_introduced ;
var bool: aux13669_BOOL:: var_is_introduced ;
var {0,1}: aux13669_INTEGER :: var_is_introduced ;
var bool: aux13670_BOOL:: var_is_introduced ;
var 4..61: aux13671:: var_is_introduced ;
var bool: aux13672_BOOL:: var_is_introduced ;
var bool: aux13673_BOOL:: var_is_introduced ;
var {0,1}: aux13673_INTEGER :: var_is_introduced ;
var bool: aux13674_BOOL:: var_is_introduced ;
var bool: aux13675_BOOL:: var_is_introduced ;
var bool: aux13676_BOOL:: var_is_introduced ;
var 4..61: aux13677:: var_is_introduced ;
var bool: aux13678_BOOL:: var_is_introduced ;
var bool: aux13679_BOOL:: var_is_introduced ;
var bool: aux13680_BOOL:: var_is_introduced ;
var {0,1}: aux13680_INTEGER :: var_is_introduced ;
var bool: aux13681_BOOL:: var_is_introduced ;
var bool: aux13682_BOOL:: var_is_introduced ;
var 4..61: aux13683:: var_is_introduced ;
var bool: aux13684_BOOL:: var_is_introduced ;
var bool: aux13685_BOOL:: var_is_introduced ;
var bool: aux13686_BOOL:: var_is_introduced ;
var {0,1}: aux13686_INTEGER :: var_is_introduced ;
var bool: aux13687_BOOL:: var_is_introduced ;
var bool: aux13688_BOOL:: var_is_introduced ;
var 3..60: aux13689:: var_is_introduced ;
var bool: aux13690_BOOL:: var_is_introduced ;
var bool: aux13691_BOOL:: var_is_introduced ;
var bool: aux13692_BOOL:: var_is_introduced ;
var {0,1}: aux13692_INTEGER :: var_is_introduced ;
var bool: aux13693_BOOL:: var_is_introduced ;
var bool: aux13694_BOOL:: var_is_introduced ;
var 2..59: aux13695:: var_is_introduced ;
var bool: aux13696_BOOL:: var_is_introduced ;
var bool: aux13697_BOOL:: var_is_introduced ;
var bool: aux13698_BOOL:: var_is_introduced ;
var {0,1}: aux13698_INTEGER :: var_is_introduced ;
var bool: aux13699_BOOL:: var_is_introduced ;
var bool: aux13700_BOOL:: var_is_introduced ;
var 3..60: aux13701:: var_is_introduced ;
var bool: aux13702_BOOL:: var_is_introduced ;
var bool: aux13703_BOOL:: var_is_introduced ;
var bool: aux13704_BOOL:: var_is_introduced ;
var {0,1}: aux13704_INTEGER :: var_is_introduced ;
var bool: aux13705_BOOL:: var_is_introduced ;
var bool: aux13706_BOOL:: var_is_introduced ;
var 2..59: aux13707:: var_is_introduced ;
var bool: aux13708_BOOL:: var_is_introduced ;
var bool: aux13709_BOOL:: var_is_introduced ;
var bool: aux13710_BOOL:: var_is_introduced ;
var {0,1}: aux13710_INTEGER :: var_is_introduced ;
var bool: aux13711_BOOL:: var_is_introduced ;
var bool: aux13712_BOOL:: var_is_introduced ;
var 3..60: aux13713:: var_is_introduced ;
var bool: aux13714_BOOL:: var_is_introduced ;
var bool: aux13715_BOOL:: var_is_introduced ;
var bool: aux13716_BOOL:: var_is_introduced ;
var {0,1}: aux13716_INTEGER :: var_is_introduced ;
var bool: aux13717_BOOL:: var_is_introduced ;
var bool: aux13718_BOOL:: var_is_introduced ;
var 2..59: aux13719:: var_is_introduced ;
var bool: aux13720_BOOL:: var_is_introduced ;
var bool: aux13721_BOOL:: var_is_introduced ;
var bool: aux13722_BOOL:: var_is_introduced ;
var {0,1}: aux13722_INTEGER :: var_is_introduced ;
var bool: aux13723_BOOL:: var_is_introduced ;
var bool: aux13724_BOOL:: var_is_introduced ;
var 2..59: aux13725:: var_is_introduced ;
var bool: aux13726_BOOL:: var_is_introduced ;
var bool: aux13727_BOOL:: var_is_introduced ;
var bool: aux13728_BOOL:: var_is_introduced ;
var {0,1}: aux13728_INTEGER :: var_is_introduced ;
var bool: aux13729_BOOL:: var_is_introduced ;
var bool: aux13730_BOOL:: var_is_introduced ;
var 5..62: aux13731:: var_is_introduced ;
var bool: aux13732_BOOL:: var_is_introduced ;
var bool: aux13733_BOOL:: var_is_introduced ;
var bool: aux13734_BOOL:: var_is_introduced ;
var {0,1}: aux13734_INTEGER :: var_is_introduced ;
var bool: aux13735_BOOL:: var_is_introduced ;
var bool: aux13736_BOOL:: var_is_introduced ;
var 3..60: aux13737:: var_is_introduced ;
var bool: aux13738_BOOL:: var_is_introduced ;
var bool: aux13739_BOOL:: var_is_introduced ;
var bool: aux13740_BOOL:: var_is_introduced ;
var {0,1}: aux13740_INTEGER :: var_is_introduced ;
var bool: aux13741_BOOL:: var_is_introduced ;
var bool: aux13742_BOOL:: var_is_introduced ;
var 4..61: aux13743:: var_is_introduced ;
var bool: aux13744_BOOL:: var_is_introduced ;
var bool: aux13745_BOOL:: var_is_introduced ;
var bool: aux13746_BOOL:: var_is_introduced ;
var {0,1}: aux13746_INTEGER :: var_is_introduced ;
var bool: aux13747_BOOL:: var_is_introduced ;
var bool: aux13748_BOOL:: var_is_introduced ;
var 3..60: aux13749:: var_is_introduced ;
var bool: aux13750_BOOL:: var_is_introduced ;
var bool: aux13751_BOOL:: var_is_introduced ;
var bool: aux13752_BOOL:: var_is_introduced ;
var {0,1}: aux13752_INTEGER :: var_is_introduced ;
var bool: aux13753_BOOL:: var_is_introduced ;
var bool: aux13754_BOOL:: var_is_introduced ;
var 1..58: aux13755:: var_is_introduced ;
var bool: aux13756_BOOL:: var_is_introduced ;
var bool: aux13757_BOOL:: var_is_introduced ;
var bool: aux13758_BOOL:: var_is_introduced ;
var {0,1}: aux13758_INTEGER :: var_is_introduced ;
var bool: aux13759_BOOL:: var_is_introduced ;
var bool: aux13760_BOOL:: var_is_introduced ;
var 3..60: aux13761:: var_is_introduced ;
var bool: aux13762_BOOL:: var_is_introduced ;
var bool: aux13763_BOOL:: var_is_introduced ;
var bool: aux13764_BOOL:: var_is_introduced ;
var {0,1}: aux13764_INTEGER :: var_is_introduced ;
var bool: aux13765_BOOL:: var_is_introduced ;
var bool: aux13766_BOOL:: var_is_introduced ;
var 4..61: aux13767:: var_is_introduced ;
var bool: aux13768_BOOL:: var_is_introduced ;
var bool: aux13769_BOOL:: var_is_introduced ;
var bool: aux13770_BOOL:: var_is_introduced ;
var {0,1}: aux13770_INTEGER :: var_is_introduced ;
var bool: aux13771_BOOL:: var_is_introduced ;
var bool: aux13772_BOOL:: var_is_introduced ;
var 1..58: aux13773:: var_is_introduced ;
var bool: aux13774_BOOL:: var_is_introduced ;
var bool: aux13775_BOOL:: var_is_introduced ;
var bool: aux13776_BOOL:: var_is_introduced ;
var {0,1}: aux13776_INTEGER :: var_is_introduced ;
var bool: aux13777_BOOL:: var_is_introduced ;
var bool: aux13778_BOOL:: var_is_introduced ;
var 4..61: aux13779:: var_is_introduced ;
var bool: aux13780_BOOL:: var_is_introduced ;
var bool: aux13781_BOOL:: var_is_introduced ;
var bool: aux13782_BOOL:: var_is_introduced ;
var {0,1}: aux13782_INTEGER :: var_is_introduced ;
var bool: aux13783_BOOL:: var_is_introduced ;
var bool: aux13784_BOOL:: var_is_introduced ;
var 2..59: aux13785:: var_is_introduced ;
var bool: aux13786_BOOL:: var_is_introduced ;
var bool: aux13787_BOOL:: var_is_introduced ;
var bool: aux13788_BOOL:: var_is_introduced ;
var {0,1}: aux13788_INTEGER :: var_is_introduced ;
var bool: aux13789_BOOL:: var_is_introduced ;
var 2..59: aux13790:: var_is_introduced ;
var bool: aux13791_BOOL:: var_is_introduced ;
var bool: aux13792_BOOL:: var_is_introduced ;
var {0,1}: aux13792_INTEGER :: var_is_introduced ;
var bool: aux13793_BOOL:: var_is_introduced ;
var bool: aux13794_BOOL:: var_is_introduced ;
var bool: aux13795_BOOL:: var_is_introduced ;
var 4..61: aux13796:: var_is_introduced ;
var bool: aux13797_BOOL:: var_is_introduced ;
var bool: aux13798_BOOL:: var_is_introduced ;
var bool: aux13799_BOOL:: var_is_introduced ;
var {0,1}: aux13799_INTEGER :: var_is_introduced ;
var bool: aux13800_BOOL:: var_is_introduced ;
var bool: aux13801_BOOL:: var_is_introduced ;
var 4..61: aux13802:: var_is_introduced ;
var bool: aux13803_BOOL:: var_is_introduced ;
var bool: aux13804_BOOL:: var_is_introduced ;
var bool: aux13805_BOOL:: var_is_introduced ;
var {0,1}: aux13805_INTEGER :: var_is_introduced ;
var bool: aux13806_BOOL:: var_is_introduced ;
var bool: aux13807_BOOL:: var_is_introduced ;
var 3..60: aux13808:: var_is_introduced ;
var bool: aux13809_BOOL:: var_is_introduced ;
var bool: aux13810_BOOL:: var_is_introduced ;
var bool: aux13811_BOOL:: var_is_introduced ;
var {0,1}: aux13811_INTEGER :: var_is_introduced ;
var bool: aux13812_BOOL:: var_is_introduced ;
var bool: aux13813_BOOL:: var_is_introduced ;
var 2..59: aux13814:: var_is_introduced ;
var bool: aux13815_BOOL:: var_is_introduced ;
var bool: aux13816_BOOL:: var_is_introduced ;
var bool: aux13817_BOOL:: var_is_introduced ;
var {0,1}: aux13817_INTEGER :: var_is_introduced ;
var bool: aux13818_BOOL:: var_is_introduced ;
var bool: aux13819_BOOL:: var_is_introduced ;
var 3..60: aux13820:: var_is_introduced ;
var bool: aux13821_BOOL:: var_is_introduced ;
var bool: aux13822_BOOL:: var_is_introduced ;
var bool: aux13823_BOOL:: var_is_introduced ;
var {0,1}: aux13823_INTEGER :: var_is_introduced ;
var bool: aux13824_BOOL:: var_is_introduced ;
var bool: aux13825_BOOL:: var_is_introduced ;
var 2..59: aux13826:: var_is_introduced ;
var bool: aux13827_BOOL:: var_is_introduced ;
var bool: aux13828_BOOL:: var_is_introduced ;
var bool: aux13829_BOOL:: var_is_introduced ;
var {0,1}: aux13829_INTEGER :: var_is_introduced ;
var bool: aux13830_BOOL:: var_is_introduced ;
var bool: aux13831_BOOL:: var_is_introduced ;
var 3..60: aux13832:: var_is_introduced ;
var bool: aux13833_BOOL:: var_is_introduced ;
var bool: aux13834_BOOL:: var_is_introduced ;
var bool: aux13835_BOOL:: var_is_introduced ;
var {0,1}: aux13835_INTEGER :: var_is_introduced ;
var bool: aux13836_BOOL:: var_is_introduced ;
var bool: aux13837_BOOL:: var_is_introduced ;
var 2..59: aux13838:: var_is_introduced ;
var bool: aux13839_BOOL:: var_is_introduced ;
var bool: aux13840_BOOL:: var_is_introduced ;
var bool: aux13841_BOOL:: var_is_introduced ;
var {0,1}: aux13841_INTEGER :: var_is_introduced ;
var bool: aux13842_BOOL:: var_is_introduced ;
var bool: aux13843_BOOL:: var_is_introduced ;
var 2..59: aux13844:: var_is_introduced ;
var bool: aux13845_BOOL:: var_is_introduced ;
var bool: aux13846_BOOL:: var_is_introduced ;
var bool: aux13847_BOOL:: var_is_introduced ;
var {0,1}: aux13847_INTEGER :: var_is_introduced ;
var bool: aux13848_BOOL:: var_is_introduced ;
var bool: aux13849_BOOL:: var_is_introduced ;
var 5..62: aux13850:: var_is_introduced ;
var bool: aux13851_BOOL:: var_is_introduced ;
var bool: aux13852_BOOL:: var_is_introduced ;
var bool: aux13853_BOOL:: var_is_introduced ;
var {0,1}: aux13853_INTEGER :: var_is_introduced ;
var bool: aux13854_BOOL:: var_is_introduced ;
var bool: aux13855_BOOL:: var_is_introduced ;
var 3..60: aux13856:: var_is_introduced ;
var bool: aux13857_BOOL:: var_is_introduced ;
var bool: aux13858_BOOL:: var_is_introduced ;
var bool: aux13859_BOOL:: var_is_introduced ;
var {0,1}: aux13859_INTEGER :: var_is_introduced ;
var bool: aux13860_BOOL:: var_is_introduced ;
var bool: aux13861_BOOL:: var_is_introduced ;
var 3..60: aux13862:: var_is_introduced ;
var bool: aux13863_BOOL:: var_is_introduced ;
var bool: aux13864_BOOL:: var_is_introduced ;
var bool: aux13865_BOOL:: var_is_introduced ;
var {0,1}: aux13865_INTEGER :: var_is_introduced ;
var bool: aux13866_BOOL:: var_is_introduced ;
var bool: aux13867_BOOL:: var_is_introduced ;
var 2..59: aux13868:: var_is_introduced ;
var bool: aux13869_BOOL:: var_is_introduced ;
var bool: aux13870_BOOL:: var_is_introduced ;
var bool: aux13871_BOOL:: var_is_introduced ;
var {0,1}: aux13871_INTEGER :: var_is_introduced ;
var bool: aux13872_BOOL:: var_is_introduced ;
var bool: aux13873_BOOL:: var_is_introduced ;
var 1..58: aux13874:: var_is_introduced ;
var bool: aux13875_BOOL:: var_is_introduced ;
var bool: aux13876_BOOL:: var_is_introduced ;
var bool: aux13877_BOOL:: var_is_introduced ;
var {0,1}: aux13877_INTEGER :: var_is_introduced ;
var bool: aux13878_BOOL:: var_is_introduced ;
var bool: aux13879_BOOL:: var_is_introduced ;
var 3..60: aux13880:: var_is_introduced ;
var bool: aux13881_BOOL:: var_is_introduced ;
var bool: aux13882_BOOL:: var_is_introduced ;
var bool: aux13883_BOOL:: var_is_introduced ;
var {0,1}: aux13883_INTEGER :: var_is_introduced ;
var bool: aux13884_BOOL:: var_is_introduced ;
var bool: aux13885_BOOL:: var_is_introduced ;
var 4..61: aux13886:: var_is_introduced ;
var bool: aux13887_BOOL:: var_is_introduced ;
var bool: aux13888_BOOL:: var_is_introduced ;
var bool: aux13889_BOOL:: var_is_introduced ;
var {0,1}: aux13889_INTEGER :: var_is_introduced ;
var bool: aux13890_BOOL:: var_is_introduced ;
var bool: aux13891_BOOL:: var_is_introduced ;
var 1..58: aux13892:: var_is_introduced ;
var bool: aux13893_BOOL:: var_is_introduced ;
var bool: aux13894_BOOL:: var_is_introduced ;
var bool: aux13895_BOOL:: var_is_introduced ;
var {0,1}: aux13895_INTEGER :: var_is_introduced ;
var bool: aux13896_BOOL:: var_is_introduced ;
var bool: aux13897_BOOL:: var_is_introduced ;
var 4..61: aux13898:: var_is_introduced ;
var bool: aux13899_BOOL:: var_is_introduced ;
var bool: aux13900_BOOL:: var_is_introduced ;
var bool: aux13901_BOOL:: var_is_introduced ;
var {0,1}: aux13901_INTEGER :: var_is_introduced ;
var bool: aux13902_BOOL:: var_is_introduced ;
var bool: aux13903_BOOL:: var_is_introduced ;
var 2..59: aux13904:: var_is_introduced ;
var bool: aux13905_BOOL:: var_is_introduced ;
var bool: aux13906_BOOL:: var_is_introduced ;
var bool: aux13907_BOOL:: var_is_introduced ;
var {0,1}: aux13907_INTEGER :: var_is_introduced ;
var bool: aux13908_BOOL:: var_is_introduced ;
var 4..61: aux13909:: var_is_introduced ;
var bool: aux13910_BOOL:: var_is_introduced ;
var bool: aux13911_BOOL:: var_is_introduced ;
var {0,1}: aux13911_INTEGER :: var_is_introduced ;
var bool: aux13912_BOOL:: var_is_introduced ;
var bool: aux13913_BOOL:: var_is_introduced ;
var bool: aux13914_BOOL:: var_is_introduced ;
var 4..61: aux13915:: var_is_introduced ;
var bool: aux13916_BOOL:: var_is_introduced ;
var bool: aux13917_BOOL:: var_is_introduced ;
var bool: aux13918_BOOL:: var_is_introduced ;
var {0,1}: aux13918_INTEGER :: var_is_introduced ;
var bool: aux13919_BOOL:: var_is_introduced ;
var bool: aux13920_BOOL:: var_is_introduced ;
var 4..61: aux13921:: var_is_introduced ;
var bool: aux13922_BOOL:: var_is_introduced ;
var bool: aux13923_BOOL:: var_is_introduced ;
var bool: aux13924_BOOL:: var_is_introduced ;
var {0,1}: aux13924_INTEGER :: var_is_introduced ;
var bool: aux13925_BOOL:: var_is_introduced ;
var bool: aux13926_BOOL:: var_is_introduced ;
var 3..60: aux13927:: var_is_introduced ;
var bool: aux13928_BOOL:: var_is_introduced ;
var bool: aux13929_BOOL:: var_is_introduced ;
var bool: aux13930_BOOL:: var_is_introduced ;
var {0,1}: aux13930_INTEGER :: var_is_introduced ;
var bool: aux13931_BOOL:: var_is_introduced ;
var bool: aux13932_BOOL:: var_is_introduced ;
var 2..59: aux13933:: var_is_introduced ;
var bool: aux13934_BOOL:: var_is_introduced ;
var bool: aux13935_BOOL:: var_is_introduced ;
var bool: aux13936_BOOL:: var_is_introduced ;
var {0,1}: aux13936_INTEGER :: var_is_introduced ;
var bool: aux13937_BOOL:: var_is_introduced ;
var bool: aux13938_BOOL:: var_is_introduced ;
var 3..60: aux13939:: var_is_introduced ;
var bool: aux13940_BOOL:: var_is_introduced ;
var bool: aux13941_BOOL:: var_is_introduced ;
var bool: aux13942_BOOL:: var_is_introduced ;
var {0,1}: aux13942_INTEGER :: var_is_introduced ;
var bool: aux13943_BOOL:: var_is_introduced ;
var bool: aux13944_BOOL:: var_is_introduced ;
var 2..59: aux13945:: var_is_introduced ;
var bool: aux13946_BOOL:: var_is_introduced ;
var bool: aux13947_BOOL:: var_is_introduced ;
var bool: aux13948_BOOL:: var_is_introduced ;
var {0,1}: aux13948_INTEGER :: var_is_introduced ;
var bool: aux13949_BOOL:: var_is_introduced ;
var bool: aux13950_BOOL:: var_is_introduced ;
var 3..60: aux13951:: var_is_introduced ;
var bool: aux13952_BOOL:: var_is_introduced ;
var bool: aux13953_BOOL:: var_is_introduced ;
var bool: aux13954_BOOL:: var_is_introduced ;
var {0,1}: aux13954_INTEGER :: var_is_introduced ;
var bool: aux13955_BOOL:: var_is_introduced ;
var bool: aux13956_BOOL:: var_is_introduced ;
var 2..59: aux13957:: var_is_introduced ;
var bool: aux13958_BOOL:: var_is_introduced ;
var bool: aux13959_BOOL:: var_is_introduced ;
var bool: aux13960_BOOL:: var_is_introduced ;
var {0,1}: aux13960_INTEGER :: var_is_introduced ;
var bool: aux13961_BOOL:: var_is_introduced ;
var bool: aux13962_BOOL:: var_is_introduced ;
var 5..62: aux13963:: var_is_introduced ;
var bool: aux13964_BOOL:: var_is_introduced ;
var bool: aux13965_BOOL:: var_is_introduced ;
var bool: aux13966_BOOL:: var_is_introduced ;
var {0,1}: aux13966_INTEGER :: var_is_introduced ;
var bool: aux13967_BOOL:: var_is_introduced ;
var bool: aux13968_BOOL:: var_is_introduced ;
var 3..60: aux13969:: var_is_introduced ;
var bool: aux13970_BOOL:: var_is_introduced ;
var bool: aux13971_BOOL:: var_is_introduced ;
var bool: aux13972_BOOL:: var_is_introduced ;
var {0,1}: aux13972_INTEGER :: var_is_introduced ;
var bool: aux13973_BOOL:: var_is_introduced ;
var bool: aux13974_BOOL:: var_is_introduced ;
var 4..61: aux13975:: var_is_introduced ;
var bool: aux13976_BOOL:: var_is_introduced ;
var bool: aux13977_BOOL:: var_is_introduced ;
var bool: aux13978_BOOL:: var_is_introduced ;
var {0,1}: aux13978_INTEGER :: var_is_introduced ;
var bool: aux13979_BOOL:: var_is_introduced ;
var bool: aux13980_BOOL:: var_is_introduced ;
var 3..60: aux13981:: var_is_introduced ;
var bool: aux13982_BOOL:: var_is_introduced ;
var bool: aux13983_BOOL:: var_is_introduced ;
var bool: aux13984_BOOL:: var_is_introduced ;
var {0,1}: aux13984_INTEGER :: var_is_introduced ;
var bool: aux13985_BOOL:: var_is_introduced ;
var bool: aux13986_BOOL:: var_is_introduced ;
var 2..59: aux13987:: var_is_introduced ;
var bool: aux13988_BOOL:: var_is_introduced ;
var bool: aux13989_BOOL:: var_is_introduced ;
var bool: aux13990_BOOL:: var_is_introduced ;
var {0,1}: aux13990_INTEGER :: var_is_introduced ;
var bool: aux13991_BOOL:: var_is_introduced ;
var bool: aux13992_BOOL:: var_is_introduced ;
var 1..58: aux13993:: var_is_introduced ;
var bool: aux13994_BOOL:: var_is_introduced ;
var bool: aux13995_BOOL:: var_is_introduced ;
var bool: aux13996_BOOL:: var_is_introduced ;
var {0,1}: aux13996_INTEGER :: var_is_introduced ;
var bool: aux13997_BOOL:: var_is_introduced ;
var bool: aux13998_BOOL:: var_is_introduced ;
var 3..60: aux13999:: var_is_introduced ;
var bool: aux14000_BOOL:: var_is_introduced ;
var bool: aux14001_BOOL:: var_is_introduced ;
var bool: aux14002_BOOL:: var_is_introduced ;
var {0,1}: aux14002_INTEGER :: var_is_introduced ;
var bool: aux14003_BOOL:: var_is_introduced ;
var bool: aux14004_BOOL:: var_is_introduced ;
var 4..61: aux14005:: var_is_introduced ;
var bool: aux14006_BOOL:: var_is_introduced ;
var bool: aux14007_BOOL:: var_is_introduced ;
var bool: aux14008_BOOL:: var_is_introduced ;
var {0,1}: aux14008_INTEGER :: var_is_introduced ;
var bool: aux14009_BOOL:: var_is_introduced ;
var bool: aux14010_BOOL:: var_is_introduced ;
var 1..58: aux14011:: var_is_introduced ;
var bool: aux14012_BOOL:: var_is_introduced ;
var bool: aux14013_BOOL:: var_is_introduced ;
var bool: aux14014_BOOL:: var_is_introduced ;
var {0,1}: aux14014_INTEGER :: var_is_introduced ;
var bool: aux14015_BOOL:: var_is_introduced ;
var bool: aux14016_BOOL:: var_is_introduced ;
var 4..61: aux14017:: var_is_introduced ;
var bool: aux14018_BOOL:: var_is_introduced ;
var bool: aux14019_BOOL:: var_is_introduced ;
var bool: aux14020_BOOL:: var_is_introduced ;
var {0,1}: aux14020_INTEGER :: var_is_introduced ;
var bool: aux14021_BOOL:: var_is_introduced ;
var bool: aux14022_BOOL:: var_is_introduced ;
var 2..59: aux14023:: var_is_introduced ;
var bool: aux14024_BOOL:: var_is_introduced ;
var bool: aux14025_BOOL:: var_is_introduced ;
var bool: aux14026_BOOL:: var_is_introduced ;
var {0,1}: aux14026_INTEGER :: var_is_introduced ;
var bool: aux14027_BOOL:: var_is_introduced ;
var 2..59: aux14028:: var_is_introduced ;
var bool: aux14029_BOOL:: var_is_introduced ;
var bool: aux14030_BOOL:: var_is_introduced ;
var {0,1}: aux14030_INTEGER :: var_is_introduced ;
var bool: aux14031_BOOL:: var_is_introduced ;
var bool: aux14032_BOOL:: var_is_introduced ;
var bool: aux14033_BOOL:: var_is_introduced ;
var 4..61: aux14034:: var_is_introduced ;
var bool: aux14035_BOOL:: var_is_introduced ;
var bool: aux14036_BOOL:: var_is_introduced ;
var bool: aux14037_BOOL:: var_is_introduced ;
var {0,1}: aux14037_INTEGER :: var_is_introduced ;
var bool: aux14038_BOOL:: var_is_introduced ;
var bool: aux14039_BOOL:: var_is_introduced ;
var 4..61: aux14040:: var_is_introduced ;
var bool: aux14041_BOOL:: var_is_introduced ;
var bool: aux14042_BOOL:: var_is_introduced ;
var bool: aux14043_BOOL:: var_is_introduced ;
var {0,1}: aux14043_INTEGER :: var_is_introduced ;
var bool: aux14044_BOOL:: var_is_introduced ;
var bool: aux14045_BOOL:: var_is_introduced ;
var 3..60: aux14046:: var_is_introduced ;
var bool: aux14047_BOOL:: var_is_introduced ;
var bool: aux14048_BOOL:: var_is_introduced ;
var bool: aux14049_BOOL:: var_is_introduced ;
var {0,1}: aux14049_INTEGER :: var_is_introduced ;
var bool: aux14050_BOOL:: var_is_introduced ;
var bool: aux14051_BOOL:: var_is_introduced ;
var 3..60: aux14052:: var_is_introduced ;
var bool: aux14053_BOOL:: var_is_introduced ;
var bool: aux14054_BOOL:: var_is_introduced ;
var bool: aux14055_BOOL:: var_is_introduced ;
var {0,1}: aux14055_INTEGER :: var_is_introduced ;
var bool: aux14056_BOOL:: var_is_introduced ;
var bool: aux14057_BOOL:: var_is_introduced ;
var 2..59: aux14058:: var_is_introduced ;
var bool: aux14059_BOOL:: var_is_introduced ;
var bool: aux14060_BOOL:: var_is_introduced ;
var bool: aux14061_BOOL:: var_is_introduced ;
var {0,1}: aux14061_INTEGER :: var_is_introduced ;
var bool: aux14062_BOOL:: var_is_introduced ;
var bool: aux14063_BOOL:: var_is_introduced ;
var 3..60: aux14064:: var_is_introduced ;
var bool: aux14065_BOOL:: var_is_introduced ;
var bool: aux14066_BOOL:: var_is_introduced ;
var bool: aux14067_BOOL:: var_is_introduced ;
var {0,1}: aux14067_INTEGER :: var_is_introduced ;
var bool: aux14068_BOOL:: var_is_introduced ;
var bool: aux14069_BOOL:: var_is_introduced ;
var 2..59: aux14070:: var_is_introduced ;
var bool: aux14071_BOOL:: var_is_introduced ;
var bool: aux14072_BOOL:: var_is_introduced ;
var bool: aux14073_BOOL:: var_is_introduced ;
var {0,1}: aux14073_INTEGER :: var_is_introduced ;
var bool: aux14074_BOOL:: var_is_introduced ;
var bool: aux14075_BOOL:: var_is_introduced ;
var 2..59: aux14076:: var_is_introduced ;
var bool: aux14077_BOOL:: var_is_introduced ;
var bool: aux14078_BOOL:: var_is_introduced ;
var bool: aux14079_BOOL:: var_is_introduced ;
var {0,1}: aux14079_INTEGER :: var_is_introduced ;
var bool: aux14080_BOOL:: var_is_introduced ;
var bool: aux14081_BOOL:: var_is_introduced ;
var 5..62: aux14082:: var_is_introduced ;
var bool: aux14083_BOOL:: var_is_introduced ;
var bool: aux14084_BOOL:: var_is_introduced ;
var bool: aux14085_BOOL:: var_is_introduced ;
var {0,1}: aux14085_INTEGER :: var_is_introduced ;
var bool: aux14086_BOOL:: var_is_introduced ;
var bool: aux14087_BOOL:: var_is_introduced ;
var 3..60: aux14088:: var_is_introduced ;
var bool: aux14089_BOOL:: var_is_introduced ;
var bool: aux14090_BOOL:: var_is_introduced ;
var bool: aux14091_BOOL:: var_is_introduced ;
var {0,1}: aux14091_INTEGER :: var_is_introduced ;
var bool: aux14092_BOOL:: var_is_introduced ;
var bool: aux14093_BOOL:: var_is_introduced ;
var 4..61: aux14094:: var_is_introduced ;
var bool: aux14095_BOOL:: var_is_introduced ;
var bool: aux14096_BOOL:: var_is_introduced ;
var bool: aux14097_BOOL:: var_is_introduced ;
var {0,1}: aux14097_INTEGER :: var_is_introduced ;
var bool: aux14098_BOOL:: var_is_introduced ;
var bool: aux14099_BOOL:: var_is_introduced ;
var 3..60: aux14100:: var_is_introduced ;
var bool: aux14101_BOOL:: var_is_introduced ;
var bool: aux14102_BOOL:: var_is_introduced ;
var bool: aux14103_BOOL:: var_is_introduced ;
var {0,1}: aux14103_INTEGER :: var_is_introduced ;
var bool: aux14104_BOOL:: var_is_introduced ;
var bool: aux14105_BOOL:: var_is_introduced ;
var 2..59: aux14106:: var_is_introduced ;
var bool: aux14107_BOOL:: var_is_introduced ;
var bool: aux14108_BOOL:: var_is_introduced ;
var bool: aux14109_BOOL:: var_is_introduced ;
var {0,1}: aux14109_INTEGER :: var_is_introduced ;
var bool: aux14110_BOOL:: var_is_introduced ;
var bool: aux14111_BOOL:: var_is_introduced ;
var 1..58: aux14112:: var_is_introduced ;
var bool: aux14113_BOOL:: var_is_introduced ;
var bool: aux14114_BOOL:: var_is_introduced ;
var bool: aux14115_BOOL:: var_is_introduced ;
var {0,1}: aux14115_INTEGER :: var_is_introduced ;
var bool: aux14116_BOOL:: var_is_introduced ;
var bool: aux14117_BOOL:: var_is_introduced ;
var 3..60: aux14118:: var_is_introduced ;
var bool: aux14119_BOOL:: var_is_introduced ;
var bool: aux14120_BOOL:: var_is_introduced ;
var bool: aux14121_BOOL:: var_is_introduced ;
var {0,1}: aux14121_INTEGER :: var_is_introduced ;
var bool: aux14122_BOOL:: var_is_introduced ;
var bool: aux14123_BOOL:: var_is_introduced ;
var 4..61: aux14124:: var_is_introduced ;
var bool: aux14125_BOOL:: var_is_introduced ;
var bool: aux14126_BOOL:: var_is_introduced ;
var bool: aux14127_BOOL:: var_is_introduced ;
var {0,1}: aux14127_INTEGER :: var_is_introduced ;
var bool: aux14128_BOOL:: var_is_introduced ;
var bool: aux14129_BOOL:: var_is_introduced ;
var 1..58: aux14130:: var_is_introduced ;
var bool: aux14131_BOOL:: var_is_introduced ;
var bool: aux14132_BOOL:: var_is_introduced ;
var bool: aux14133_BOOL:: var_is_introduced ;
var {0,1}: aux14133_INTEGER :: var_is_introduced ;
var bool: aux14134_BOOL:: var_is_introduced ;
var bool: aux14135_BOOL:: var_is_introduced ;
var 4..61: aux14136:: var_is_introduced ;
var bool: aux14137_BOOL:: var_is_introduced ;
var bool: aux14138_BOOL:: var_is_introduced ;
var bool: aux14139_BOOL:: var_is_introduced ;
var {0,1}: aux14139_INTEGER :: var_is_introduced ;
var bool: aux14140_BOOL:: var_is_introduced ;
var bool: aux14141_BOOL:: var_is_introduced ;
var 2..59: aux14142:: var_is_introduced ;
var bool: aux14143_BOOL:: var_is_introduced ;
var bool: aux14144_BOOL:: var_is_introduced ;
var bool: aux14145_BOOL:: var_is_introduced ;
var {0,1}: aux14145_INTEGER :: var_is_introduced ;
var bool: aux14146_BOOL:: var_is_introduced ;
var 2..59: aux14147:: var_is_introduced ;
var bool: aux14148_BOOL:: var_is_introduced ;
var bool: aux14149_BOOL:: var_is_introduced ;
var {0,1}: aux14149_INTEGER :: var_is_introduced ;
var bool: aux14150_BOOL:: var_is_introduced ;
var bool: aux14151_BOOL:: var_is_introduced ;
var bool: aux14152_BOOL:: var_is_introduced ;
var 4..61: aux14153:: var_is_introduced ;
var bool: aux14154_BOOL:: var_is_introduced ;
var bool: aux14155_BOOL:: var_is_introduced ;
var bool: aux14156_BOOL:: var_is_introduced ;
var {0,1}: aux14156_INTEGER :: var_is_introduced ;
var bool: aux14157_BOOL:: var_is_introduced ;
var bool: aux14158_BOOL:: var_is_introduced ;
var 4..61: aux14159:: var_is_introduced ;
var bool: aux14160_BOOL:: var_is_introduced ;
var bool: aux14161_BOOL:: var_is_introduced ;
var bool: aux14162_BOOL:: var_is_introduced ;
var {0,1}: aux14162_INTEGER :: var_is_introduced ;
var bool: aux14163_BOOL:: var_is_introduced ;
var bool: aux14164_BOOL:: var_is_introduced ;
var 3..60: aux14165:: var_is_introduced ;
var bool: aux14166_BOOL:: var_is_introduced ;
var bool: aux14167_BOOL:: var_is_introduced ;
var bool: aux14168_BOOL:: var_is_introduced ;
var {0,1}: aux14168_INTEGER :: var_is_introduced ;
var bool: aux14169_BOOL:: var_is_introduced ;
var bool: aux14170_BOOL:: var_is_introduced ;
var 2..59: aux14171:: var_is_introduced ;
var bool: aux14172_BOOL:: var_is_introduced ;
var bool: aux14173_BOOL:: var_is_introduced ;
var bool: aux14174_BOOL:: var_is_introduced ;
var {0,1}: aux14174_INTEGER :: var_is_introduced ;
var bool: aux14175_BOOL:: var_is_introduced ;
var bool: aux14176_BOOL:: var_is_introduced ;
var 3..60: aux14177:: var_is_introduced ;
var bool: aux14178_BOOL:: var_is_introduced ;
var bool: aux14179_BOOL:: var_is_introduced ;
var bool: aux14180_BOOL:: var_is_introduced ;
var {0,1}: aux14180_INTEGER :: var_is_introduced ;
var bool: aux14181_BOOL:: var_is_introduced ;
var bool: aux14182_BOOL:: var_is_introduced ;
var 2..59: aux14183:: var_is_introduced ;
var bool: aux14184_BOOL:: var_is_introduced ;
var bool: aux14185_BOOL:: var_is_introduced ;
var bool: aux14186_BOOL:: var_is_introduced ;
var {0,1}: aux14186_INTEGER :: var_is_introduced ;
var bool: aux14187_BOOL:: var_is_introduced ;
var bool: aux14188_BOOL:: var_is_introduced ;
var 3..60: aux14189:: var_is_introduced ;
var bool: aux14190_BOOL:: var_is_introduced ;
var bool: aux14191_BOOL:: var_is_introduced ;
var bool: aux14192_BOOL:: var_is_introduced ;
var {0,1}: aux14192_INTEGER :: var_is_introduced ;
var bool: aux14193_BOOL:: var_is_introduced ;
var bool: aux14194_BOOL:: var_is_introduced ;
var 2..59: aux14195:: var_is_introduced ;
var bool: aux14196_BOOL:: var_is_introduced ;
var bool: aux14197_BOOL:: var_is_introduced ;
var bool: aux14198_BOOL:: var_is_introduced ;
var {0,1}: aux14198_INTEGER :: var_is_introduced ;
var bool: aux14199_BOOL:: var_is_introduced ;
var bool: aux14200_BOOL:: var_is_introduced ;
var 2..59: aux14201:: var_is_introduced ;
var bool: aux14202_BOOL:: var_is_introduced ;
var bool: aux14203_BOOL:: var_is_introduced ;
var bool: aux14204_BOOL:: var_is_introduced ;
var {0,1}: aux14204_INTEGER :: var_is_introduced ;
var bool: aux14205_BOOL:: var_is_introduced ;
var bool: aux14206_BOOL:: var_is_introduced ;
var 5..62: aux14207:: var_is_introduced ;
var bool: aux14208_BOOL:: var_is_introduced ;
var bool: aux14209_BOOL:: var_is_introduced ;
var bool: aux14210_BOOL:: var_is_introduced ;
var {0,1}: aux14210_INTEGER :: var_is_introduced ;
var bool: aux14211_BOOL:: var_is_introduced ;
var bool: aux14212_BOOL:: var_is_introduced ;
var 3..60: aux14213:: var_is_introduced ;
var bool: aux14214_BOOL:: var_is_introduced ;
var bool: aux14215_BOOL:: var_is_introduced ;
var bool: aux14216_BOOL:: var_is_introduced ;
var {0,1}: aux14216_INTEGER :: var_is_introduced ;
var bool: aux14217_BOOL:: var_is_introduced ;
var bool: aux14218_BOOL:: var_is_introduced ;
var 4..61: aux14219:: var_is_introduced ;
var bool: aux14220_BOOL:: var_is_introduced ;
var bool: aux14221_BOOL:: var_is_introduced ;
var bool: aux14222_BOOL:: var_is_introduced ;
var {0,1}: aux14222_INTEGER :: var_is_introduced ;
var bool: aux14223_BOOL:: var_is_introduced ;
var bool: aux14224_BOOL:: var_is_introduced ;
var 3..60: aux14225:: var_is_introduced ;
var bool: aux14226_BOOL:: var_is_introduced ;
var bool: aux14227_BOOL:: var_is_introduced ;
var bool: aux14228_BOOL:: var_is_introduced ;
var {0,1}: aux14228_INTEGER :: var_is_introduced ;
var bool: aux14229_BOOL:: var_is_introduced ;
var bool: aux14230_BOOL:: var_is_introduced ;
var 2..59: aux14231:: var_is_introduced ;
var bool: aux14232_BOOL:: var_is_introduced ;
var bool: aux14233_BOOL:: var_is_introduced ;
var bool: aux14234_BOOL:: var_is_introduced ;
var {0,1}: aux14234_INTEGER :: var_is_introduced ;
var bool: aux14235_BOOL:: var_is_introduced ;
var bool: aux14236_BOOL:: var_is_introduced ;
var 1..58: aux14237:: var_is_introduced ;
var bool: aux14238_BOOL:: var_is_introduced ;
var bool: aux14239_BOOL:: var_is_introduced ;
var bool: aux14240_BOOL:: var_is_introduced ;
var {0,1}: aux14240_INTEGER :: var_is_introduced ;
var bool: aux14241_BOOL:: var_is_introduced ;
var bool: aux14242_BOOL:: var_is_introduced ;
var 3..60: aux14243:: var_is_introduced ;
var bool: aux14244_BOOL:: var_is_introduced ;
var bool: aux14245_BOOL:: var_is_introduced ;
var bool: aux14246_BOOL:: var_is_introduced ;
var {0,1}: aux14246_INTEGER :: var_is_introduced ;
var bool: aux14247_BOOL:: var_is_introduced ;
var bool: aux14248_BOOL:: var_is_introduced ;
var 1..58: aux14249:: var_is_introduced ;
var bool: aux14250_BOOL:: var_is_introduced ;
var bool: aux14251_BOOL:: var_is_introduced ;
var bool: aux14252_BOOL:: var_is_introduced ;
var {0,1}: aux14252_INTEGER :: var_is_introduced ;
var bool: aux14253_BOOL:: var_is_introduced ;
var bool: aux14254_BOOL:: var_is_introduced ;
var 4..61: aux14255:: var_is_introduced ;
var bool: aux14256_BOOL:: var_is_introduced ;
var bool: aux14257_BOOL:: var_is_introduced ;
var bool: aux14258_BOOL:: var_is_introduced ;
var {0,1}: aux14258_INTEGER :: var_is_introduced ;
var bool: aux14259_BOOL:: var_is_introduced ;
var bool: aux14260_BOOL:: var_is_introduced ;
var 2..59: aux14261:: var_is_introduced ;
var bool: aux14262_BOOL:: var_is_introduced ;
var bool: aux14263_BOOL:: var_is_introduced ;
var bool: aux14264_BOOL:: var_is_introduced ;
var {0,1}: aux14264_INTEGER :: var_is_introduced ;
var bool: aux14265_BOOL:: var_is_introduced ;
var 4..61: aux14266:: var_is_introduced ;
var bool: aux14267_BOOL:: var_is_introduced ;
var bool: aux14268_BOOL:: var_is_introduced ;
var {0,1}: aux14268_INTEGER :: var_is_introduced ;
var bool: aux14269_BOOL:: var_is_introduced ;
var bool: aux14270_BOOL:: var_is_introduced ;
var bool: aux14271_BOOL:: var_is_introduced ;
var 4..61: aux14272:: var_is_introduced ;
var bool: aux14273_BOOL:: var_is_introduced ;
var bool: aux14274_BOOL:: var_is_introduced ;
var bool: aux14275_BOOL:: var_is_introduced ;
var {0,1}: aux14275_INTEGER :: var_is_introduced ;
var bool: aux14276_BOOL:: var_is_introduced ;
var bool: aux14277_BOOL:: var_is_introduced ;
var 4..61: aux14278:: var_is_introduced ;
var bool: aux14279_BOOL:: var_is_introduced ;
var bool: aux14280_BOOL:: var_is_introduced ;
var bool: aux14281_BOOL:: var_is_introduced ;
var {0,1}: aux14281_INTEGER :: var_is_introduced ;
var bool: aux14282_BOOL:: var_is_introduced ;
var bool: aux14283_BOOL:: var_is_introduced ;
var 3..60: aux14284:: var_is_introduced ;
var bool: aux14285_BOOL:: var_is_introduced ;
var bool: aux14286_BOOL:: var_is_introduced ;
var bool: aux14287_BOOL:: var_is_introduced ;
var {0,1}: aux14287_INTEGER :: var_is_introduced ;
var bool: aux14288_BOOL:: var_is_introduced ;
var bool: aux14289_BOOL:: var_is_introduced ;
var 2..59: aux14290:: var_is_introduced ;
var bool: aux14291_BOOL:: var_is_introduced ;
var bool: aux14292_BOOL:: var_is_introduced ;
var bool: aux14293_BOOL:: var_is_introduced ;
var {0,1}: aux14293_INTEGER :: var_is_introduced ;
var bool: aux14294_BOOL:: var_is_introduced ;
var bool: aux14295_BOOL:: var_is_introduced ;
var 3..60: aux14296:: var_is_introduced ;
var bool: aux14297_BOOL:: var_is_introduced ;
var bool: aux14298_BOOL:: var_is_introduced ;
var bool: aux14299_BOOL:: var_is_introduced ;
var {0,1}: aux14299_INTEGER :: var_is_introduced ;
var bool: aux14300_BOOL:: var_is_introduced ;
var bool: aux14301_BOOL:: var_is_introduced ;
var 2..59: aux14302:: var_is_introduced ;
var bool: aux14303_BOOL:: var_is_introduced ;
var bool: aux14304_BOOL:: var_is_introduced ;
var bool: aux14305_BOOL:: var_is_introduced ;
var {0,1}: aux14305_INTEGER :: var_is_introduced ;
var bool: aux14306_BOOL:: var_is_introduced ;
var bool: aux14307_BOOL:: var_is_introduced ;
var 3..60: aux14308:: var_is_introduced ;
var bool: aux14309_BOOL:: var_is_introduced ;
var bool: aux14310_BOOL:: var_is_introduced ;
var bool: aux14311_BOOL:: var_is_introduced ;
var {0,1}: aux14311_INTEGER :: var_is_introduced ;
var bool: aux14312_BOOL:: var_is_introduced ;
var bool: aux14313_BOOL:: var_is_introduced ;
var 2..59: aux14314:: var_is_introduced ;
var bool: aux14315_BOOL:: var_is_introduced ;
var bool: aux14316_BOOL:: var_is_introduced ;
var bool: aux14317_BOOL:: var_is_introduced ;
var {0,1}: aux14317_INTEGER :: var_is_introduced ;
var bool: aux14318_BOOL:: var_is_introduced ;
var bool: aux14319_BOOL:: var_is_introduced ;
var 2..59: aux14320:: var_is_introduced ;
var bool: aux14321_BOOL:: var_is_introduced ;
var bool: aux14322_BOOL:: var_is_introduced ;
var bool: aux14323_BOOL:: var_is_introduced ;
var {0,1}: aux14323_INTEGER :: var_is_introduced ;
var bool: aux14324_BOOL:: var_is_introduced ;
var bool: aux14325_BOOL:: var_is_introduced ;
var 5..62: aux14326:: var_is_introduced ;
var bool: aux14327_BOOL:: var_is_introduced ;
var bool: aux14328_BOOL:: var_is_introduced ;
var bool: aux14329_BOOL:: var_is_introduced ;
var {0,1}: aux14329_INTEGER :: var_is_introduced ;
var bool: aux14330_BOOL:: var_is_introduced ;
var bool: aux14331_BOOL:: var_is_introduced ;
var 3..60: aux14332:: var_is_introduced ;
var bool: aux14333_BOOL:: var_is_introduced ;
var bool: aux14334_BOOL:: var_is_introduced ;
var bool: aux14335_BOOL:: var_is_introduced ;
var {0,1}: aux14335_INTEGER :: var_is_introduced ;
var bool: aux14336_BOOL:: var_is_introduced ;
var bool: aux14337_BOOL:: var_is_introduced ;
var 4..61: aux14338:: var_is_introduced ;
var bool: aux14339_BOOL:: var_is_introduced ;
var bool: aux14340_BOOL:: var_is_introduced ;
var bool: aux14341_BOOL:: var_is_introduced ;
var {0,1}: aux14341_INTEGER :: var_is_introduced ;
var bool: aux14342_BOOL:: var_is_introduced ;
var bool: aux14343_BOOL:: var_is_introduced ;
var 3..60: aux14344:: var_is_introduced ;
var bool: aux14345_BOOL:: var_is_introduced ;
var bool: aux14346_BOOL:: var_is_introduced ;
var bool: aux14347_BOOL:: var_is_introduced ;
var {0,1}: aux14347_INTEGER :: var_is_introduced ;
var bool: aux14348_BOOL:: var_is_introduced ;
var bool: aux14349_BOOL:: var_is_introduced ;
var 2..59: aux14350:: var_is_introduced ;
var bool: aux14351_BOOL:: var_is_introduced ;
var bool: aux14352_BOOL:: var_is_introduced ;
var bool: aux14353_BOOL:: var_is_introduced ;
var {0,1}: aux14353_INTEGER :: var_is_introduced ;
var bool: aux14354_BOOL:: var_is_introduced ;
var bool: aux14355_BOOL:: var_is_introduced ;
var 1..58: aux14356:: var_is_introduced ;
var bool: aux14357_BOOL:: var_is_introduced ;
var bool: aux14358_BOOL:: var_is_introduced ;
var bool: aux14359_BOOL:: var_is_introduced ;
var {0,1}: aux14359_INTEGER :: var_is_introduced ;
var bool: aux14360_BOOL:: var_is_introduced ;
var bool: aux14361_BOOL:: var_is_introduced ;
var 3..60: aux14362:: var_is_introduced ;
var bool: aux14363_BOOL:: var_is_introduced ;
var bool: aux14364_BOOL:: var_is_introduced ;
var bool: aux14365_BOOL:: var_is_introduced ;
var {0,1}: aux14365_INTEGER :: var_is_introduced ;
var bool: aux14366_BOOL:: var_is_introduced ;
var bool: aux14367_BOOL:: var_is_introduced ;
var 4..61: aux14368:: var_is_introduced ;
var bool: aux14369_BOOL:: var_is_introduced ;
var bool: aux14370_BOOL:: var_is_introduced ;
var bool: aux14371_BOOL:: var_is_introduced ;
var {0,1}: aux14371_INTEGER :: var_is_introduced ;
var bool: aux14372_BOOL:: var_is_introduced ;
var bool: aux14373_BOOL:: var_is_introduced ;
var 1..58: aux14374:: var_is_introduced ;
var bool: aux14375_BOOL:: var_is_introduced ;
var bool: aux14376_BOOL:: var_is_introduced ;
var bool: aux14377_BOOL:: var_is_introduced ;
var {0,1}: aux14377_INTEGER :: var_is_introduced ;
var bool: aux14378_BOOL:: var_is_introduced ;
var bool: aux14379_BOOL:: var_is_introduced ;
var 4..61: aux14380:: var_is_introduced ;
var bool: aux14381_BOOL:: var_is_introduced ;
var bool: aux14382_BOOL:: var_is_introduced ;
var bool: aux14383_BOOL:: var_is_introduced ;
var {0,1}: aux14383_INTEGER :: var_is_introduced ;
var bool: aux14384_BOOL:: var_is_introduced ;
var 2..59: aux14385:: var_is_introduced ;
var bool: aux14386_BOOL:: var_is_introduced ;
var bool: aux14387_BOOL:: var_is_introduced ;
var {0,1}: aux14387_INTEGER :: var_is_introduced ;
var bool: aux14388_BOOL:: var_is_introduced ;
var bool: aux14389_BOOL:: var_is_introduced ;
var bool: aux14390_BOOL:: var_is_introduced ;
var 4..61: aux14391:: var_is_introduced ;
var bool: aux14392_BOOL:: var_is_introduced ;
var bool: aux14393_BOOL:: var_is_introduced ;
var bool: aux14394_BOOL:: var_is_introduced ;
var {0,1}: aux14394_INTEGER :: var_is_introduced ;
var bool: aux14395_BOOL:: var_is_introduced ;
var bool: aux14396_BOOL:: var_is_introduced ;
var 4..61: aux14397:: var_is_introduced ;
var bool: aux14398_BOOL:: var_is_introduced ;
var bool: aux14399_BOOL:: var_is_introduced ;
var bool: aux14400_BOOL:: var_is_introduced ;
var {0,1}: aux14400_INTEGER :: var_is_introduced ;
var bool: aux14401_BOOL:: var_is_introduced ;
var bool: aux14402_BOOL:: var_is_introduced ;
var 3..60: aux14403:: var_is_introduced ;
var bool: aux14404_BOOL:: var_is_introduced ;
var bool: aux14405_BOOL:: var_is_introduced ;
var bool: aux14406_BOOL:: var_is_introduced ;
var {0,1}: aux14406_INTEGER :: var_is_introduced ;
var bool: aux14407_BOOL:: var_is_introduced ;
var bool: aux14408_BOOL:: var_is_introduced ;
var 2..59: aux14409:: var_is_introduced ;
var bool: aux14410_BOOL:: var_is_introduced ;
var bool: aux14411_BOOL:: var_is_introduced ;
var bool: aux14412_BOOL:: var_is_introduced ;
var {0,1}: aux14412_INTEGER :: var_is_introduced ;
var bool: aux14413_BOOL:: var_is_introduced ;
var bool: aux14414_BOOL:: var_is_introduced ;
var 3..60: aux14415:: var_is_introduced ;
var bool: aux14416_BOOL:: var_is_introduced ;
var bool: aux14417_BOOL:: var_is_introduced ;
var bool: aux14418_BOOL:: var_is_introduced ;
var {0,1}: aux14418_INTEGER :: var_is_introduced ;
var bool: aux14419_BOOL:: var_is_introduced ;
var bool: aux14420_BOOL:: var_is_introduced ;
var 2..59: aux14421:: var_is_introduced ;
var bool: aux14422_BOOL:: var_is_introduced ;
var bool: aux14423_BOOL:: var_is_introduced ;
var bool: aux14424_BOOL:: var_is_introduced ;
var {0,1}: aux14424_INTEGER :: var_is_introduced ;
var bool: aux14425_BOOL:: var_is_introduced ;
var bool: aux14426_BOOL:: var_is_introduced ;
var 3..60: aux14427:: var_is_introduced ;
var bool: aux14428_BOOL:: var_is_introduced ;
var bool: aux14429_BOOL:: var_is_introduced ;
var bool: aux14430_BOOL:: var_is_introduced ;
var {0,1}: aux14430_INTEGER :: var_is_introduced ;
var bool: aux14431_BOOL:: var_is_introduced ;
var bool: aux14432_BOOL:: var_is_introduced ;
var 2..59: aux14433:: var_is_introduced ;
var bool: aux14434_BOOL:: var_is_introduced ;
var bool: aux14435_BOOL:: var_is_introduced ;
var bool: aux14436_BOOL:: var_is_introduced ;
var {0,1}: aux14436_INTEGER :: var_is_introduced ;
var bool: aux14437_BOOL:: var_is_introduced ;
var bool: aux14438_BOOL:: var_is_introduced ;
var 5..62: aux14439:: var_is_introduced ;
var bool: aux14440_BOOL:: var_is_introduced ;
var bool: aux14441_BOOL:: var_is_introduced ;
var bool: aux14442_BOOL:: var_is_introduced ;
var {0,1}: aux14442_INTEGER :: var_is_introduced ;
var bool: aux14443_BOOL:: var_is_introduced ;
var bool: aux14444_BOOL:: var_is_introduced ;
var 3..60: aux14445:: var_is_introduced ;
var bool: aux14446_BOOL:: var_is_introduced ;
var bool: aux14447_BOOL:: var_is_introduced ;
var bool: aux14448_BOOL:: var_is_introduced ;
var {0,1}: aux14448_INTEGER :: var_is_introduced ;
var bool: aux14449_BOOL:: var_is_introduced ;
var bool: aux14450_BOOL:: var_is_introduced ;
var 4..61: aux14451:: var_is_introduced ;
var bool: aux14452_BOOL:: var_is_introduced ;
var bool: aux14453_BOOL:: var_is_introduced ;
var bool: aux14454_BOOL:: var_is_introduced ;
var {0,1}: aux14454_INTEGER :: var_is_introduced ;
var bool: aux14455_BOOL:: var_is_introduced ;
var bool: aux14456_BOOL:: var_is_introduced ;
var 3..60: aux14457:: var_is_introduced ;
var bool: aux14458_BOOL:: var_is_introduced ;
var bool: aux14459_BOOL:: var_is_introduced ;
var bool: aux14460_BOOL:: var_is_introduced ;
var {0,1}: aux14460_INTEGER :: var_is_introduced ;
var bool: aux14461_BOOL:: var_is_introduced ;
var bool: aux14462_BOOL:: var_is_introduced ;
var 2..59: aux14463:: var_is_introduced ;
var bool: aux14464_BOOL:: var_is_introduced ;
var bool: aux14465_BOOL:: var_is_introduced ;
var bool: aux14466_BOOL:: var_is_introduced ;
var {0,1}: aux14466_INTEGER :: var_is_introduced ;
var bool: aux14467_BOOL:: var_is_introduced ;
var bool: aux14468_BOOL:: var_is_introduced ;
var 1..58: aux14469:: var_is_introduced ;
var bool: aux14470_BOOL:: var_is_introduced ;
var bool: aux14471_BOOL:: var_is_introduced ;
var bool: aux14472_BOOL:: var_is_introduced ;
var {0,1}: aux14472_INTEGER :: var_is_introduced ;
var bool: aux14473_BOOL:: var_is_introduced ;
var bool: aux14474_BOOL:: var_is_introduced ;
var 3..60: aux14475:: var_is_introduced ;
var bool: aux14476_BOOL:: var_is_introduced ;
var bool: aux14477_BOOL:: var_is_introduced ;
var bool: aux14478_BOOL:: var_is_introduced ;
var {0,1}: aux14478_INTEGER :: var_is_introduced ;
var bool: aux14479_BOOL:: var_is_introduced ;
var bool: aux14480_BOOL:: var_is_introduced ;
var 4..61: aux14481:: var_is_introduced ;
var bool: aux14482_BOOL:: var_is_introduced ;
var bool: aux14483_BOOL:: var_is_introduced ;
var bool: aux14484_BOOL:: var_is_introduced ;
var {0,1}: aux14484_INTEGER :: var_is_introduced ;
var bool: aux14485_BOOL:: var_is_introduced ;
var bool: aux14486_BOOL:: var_is_introduced ;
var 1..58: aux14487:: var_is_introduced ;
var bool: aux14488_BOOL:: var_is_introduced ;
var bool: aux14489_BOOL:: var_is_introduced ;
var bool: aux14490_BOOL:: var_is_introduced ;
var {0,1}: aux14490_INTEGER :: var_is_introduced ;
var bool: aux14491_BOOL:: var_is_introduced ;
var bool: aux14492_BOOL:: var_is_introduced ;
var 4..61: aux14493:: var_is_introduced ;
var bool: aux14494_BOOL:: var_is_introduced ;
var bool: aux14495_BOOL:: var_is_introduced ;
var bool: aux14496_BOOL:: var_is_introduced ;
var {0,1}: aux14496_INTEGER :: var_is_introduced ;
var bool: aux14497_BOOL:: var_is_introduced ;
var bool: aux14498_BOOL:: var_is_introduced ;
var 2..59: aux14499:: var_is_introduced ;
var bool: aux14500_BOOL:: var_is_introduced ;
var bool: aux14501_BOOL:: var_is_introduced ;
var bool: aux14502_BOOL:: var_is_introduced ;
var {0,1}: aux14502_INTEGER :: var_is_introduced ;
var bool: aux14503_BOOL:: var_is_introduced ;
var 2..59: aux14504:: var_is_introduced ;
var bool: aux14505_BOOL:: var_is_introduced ;
var bool: aux14506_BOOL:: var_is_introduced ;
var {0,1}: aux14506_INTEGER :: var_is_introduced ;
var bool: aux14507_BOOL:: var_is_introduced ;
var bool: aux14508_BOOL:: var_is_introduced ;
var bool: aux14509_BOOL:: var_is_introduced ;
var 4..61: aux14510:: var_is_introduced ;
var bool: aux14511_BOOL:: var_is_introduced ;
var bool: aux14512_BOOL:: var_is_introduced ;
var bool: aux14513_BOOL:: var_is_introduced ;
var {0,1}: aux14513_INTEGER :: var_is_introduced ;
var bool: aux14514_BOOL:: var_is_introduced ;
var bool: aux14515_BOOL:: var_is_introduced ;
var 4..61: aux14516:: var_is_introduced ;
var bool: aux14517_BOOL:: var_is_introduced ;
var bool: aux14518_BOOL:: var_is_introduced ;
var bool: aux14519_BOOL:: var_is_introduced ;
var {0,1}: aux14519_INTEGER :: var_is_introduced ;
var bool: aux14520_BOOL:: var_is_introduced ;
var bool: aux14521_BOOL:: var_is_introduced ;
var 3..60: aux14522:: var_is_introduced ;
var bool: aux14523_BOOL:: var_is_introduced ;
var bool: aux14524_BOOL:: var_is_introduced ;
var bool: aux14525_BOOL:: var_is_introduced ;
var {0,1}: aux14525_INTEGER :: var_is_introduced ;
var bool: aux14526_BOOL:: var_is_introduced ;
var bool: aux14527_BOOL:: var_is_introduced ;
var 2..59: aux14528:: var_is_introduced ;
var bool: aux14529_BOOL:: var_is_introduced ;
var bool: aux14530_BOOL:: var_is_introduced ;
var bool: aux14531_BOOL:: var_is_introduced ;
var {0,1}: aux14531_INTEGER :: var_is_introduced ;
var bool: aux14532_BOOL:: var_is_introduced ;
var bool: aux14533_BOOL:: var_is_introduced ;
var 3..60: aux14534:: var_is_introduced ;
var bool: aux14535_BOOL:: var_is_introduced ;
var bool: aux14536_BOOL:: var_is_introduced ;
var bool: aux14537_BOOL:: var_is_introduced ;
var {0,1}: aux14537_INTEGER :: var_is_introduced ;
var bool: aux14538_BOOL:: var_is_introduced ;
var bool: aux14539_BOOL:: var_is_introduced ;
var 2..59: aux14540:: var_is_introduced ;
var bool: aux14541_BOOL:: var_is_introduced ;
var bool: aux14542_BOOL:: var_is_introduced ;
var bool: aux14543_BOOL:: var_is_introduced ;
var {0,1}: aux14543_INTEGER :: var_is_introduced ;
var bool: aux14544_BOOL:: var_is_introduced ;
var bool: aux14545_BOOL:: var_is_introduced ;
var 3..60: aux14546:: var_is_introduced ;
var bool: aux14547_BOOL:: var_is_introduced ;
var bool: aux14548_BOOL:: var_is_introduced ;
var bool: aux14549_BOOL:: var_is_introduced ;
var {0,1}: aux14549_INTEGER :: var_is_introduced ;
var bool: aux14550_BOOL:: var_is_introduced ;
var bool: aux14551_BOOL:: var_is_introduced ;
var 2..59: aux14552:: var_is_introduced ;
var bool: aux14553_BOOL:: var_is_introduced ;
var bool: aux14554_BOOL:: var_is_introduced ;
var bool: aux14555_BOOL:: var_is_introduced ;
var {0,1}: aux14555_INTEGER :: var_is_introduced ;
var bool: aux14556_BOOL:: var_is_introduced ;
var bool: aux14557_BOOL:: var_is_introduced ;
var 2..59: aux14558:: var_is_introduced ;
var bool: aux14559_BOOL:: var_is_introduced ;
var bool: aux14560_BOOL:: var_is_introduced ;
var bool: aux14561_BOOL:: var_is_introduced ;
var {0,1}: aux14561_INTEGER :: var_is_introduced ;
var bool: aux14562_BOOL:: var_is_introduced ;
var bool: aux14563_BOOL:: var_is_introduced ;
var 3..60: aux14564:: var_is_introduced ;
var bool: aux14565_BOOL:: var_is_introduced ;
var bool: aux14566_BOOL:: var_is_introduced ;
var bool: aux14567_BOOL:: var_is_introduced ;
var {0,1}: aux14567_INTEGER :: var_is_introduced ;
var bool: aux14568_BOOL:: var_is_introduced ;
var bool: aux14569_BOOL:: var_is_introduced ;
var 4..61: aux14570:: var_is_introduced ;
var bool: aux14571_BOOL:: var_is_introduced ;
var bool: aux14572_BOOL:: var_is_introduced ;
var bool: aux14573_BOOL:: var_is_introduced ;
var {0,1}: aux14573_INTEGER :: var_is_introduced ;
var bool: aux14574_BOOL:: var_is_introduced ;
var bool: aux14575_BOOL:: var_is_introduced ;
var 3..60: aux14576:: var_is_introduced ;
var bool: aux14577_BOOL:: var_is_introduced ;
var bool: aux14578_BOOL:: var_is_introduced ;
var bool: aux14579_BOOL:: var_is_introduced ;
var {0,1}: aux14579_INTEGER :: var_is_introduced ;
var bool: aux14580_BOOL:: var_is_introduced ;
var bool: aux14581_BOOL:: var_is_introduced ;
var 2..59: aux14582:: var_is_introduced ;
var bool: aux14583_BOOL:: var_is_introduced ;
var bool: aux14584_BOOL:: var_is_introduced ;
var bool: aux14585_BOOL:: var_is_introduced ;
var {0,1}: aux14585_INTEGER :: var_is_introduced ;
var bool: aux14586_BOOL:: var_is_introduced ;
var bool: aux14587_BOOL:: var_is_introduced ;
var 1..58: aux14588:: var_is_introduced ;
var bool: aux14589_BOOL:: var_is_introduced ;
var bool: aux14590_BOOL:: var_is_introduced ;
var bool: aux14591_BOOL:: var_is_introduced ;
var {0,1}: aux14591_INTEGER :: var_is_introduced ;
var bool: aux14592_BOOL:: var_is_introduced ;
var bool: aux14593_BOOL:: var_is_introduced ;
var 3..60: aux14594:: var_is_introduced ;
var bool: aux14595_BOOL:: var_is_introduced ;
var bool: aux14596_BOOL:: var_is_introduced ;
var bool: aux14597_BOOL:: var_is_introduced ;
var {0,1}: aux14597_INTEGER :: var_is_introduced ;
var bool: aux14598_BOOL:: var_is_introduced ;
var bool: aux14599_BOOL:: var_is_introduced ;
var 4..61: aux14600:: var_is_introduced ;
var bool: aux14601_BOOL:: var_is_introduced ;
var bool: aux14602_BOOL:: var_is_introduced ;
var bool: aux14603_BOOL:: var_is_introduced ;
var {0,1}: aux14603_INTEGER :: var_is_introduced ;
var bool: aux14604_BOOL:: var_is_introduced ;
var bool: aux14605_BOOL:: var_is_introduced ;
var 1..58: aux14606:: var_is_introduced ;
var bool: aux14607_BOOL:: var_is_introduced ;
var bool: aux14608_BOOL:: var_is_introduced ;
var bool: aux14609_BOOL:: var_is_introduced ;
var {0,1}: aux14609_INTEGER :: var_is_introduced ;
var bool: aux14610_BOOL:: var_is_introduced ;
var bool: aux14611_BOOL:: var_is_introduced ;
var 4..61: aux14612:: var_is_introduced ;
var bool: aux14613_BOOL:: var_is_introduced ;
var bool: aux14614_BOOL:: var_is_introduced ;
var bool: aux14615_BOOL:: var_is_introduced ;
var {0,1}: aux14615_INTEGER :: var_is_introduced ;
var bool: aux14616_BOOL:: var_is_introduced ;
var bool: aux14617_BOOL:: var_is_introduced ;
var 2..59: aux14618:: var_is_introduced ;
var bool: aux14619_BOOL:: var_is_introduced ;
var bool: aux14620_BOOL:: var_is_introduced ;
var bool: aux14621_BOOL:: var_is_introduced ;
var {0,1}: aux14621_INTEGER :: var_is_introduced ;
var bool: aux14622_BOOL:: var_is_introduced ;
var 5..62: aux14623:: var_is_introduced ;
var bool: aux14624_BOOL:: var_is_introduced ;
var bool: aux14625_BOOL:: var_is_introduced ;
var {0,1}: aux14625_INTEGER :: var_is_introduced ;
var bool: aux14626_BOOL:: var_is_introduced ;
var bool: aux14627_BOOL:: var_is_introduced ;
var bool: aux14628_BOOL:: var_is_introduced ;
var 4..61: aux14629:: var_is_introduced ;
var bool: aux14630_BOOL:: var_is_introduced ;
var bool: aux14631_BOOL:: var_is_introduced ;
var bool: aux14632_BOOL:: var_is_introduced ;
var {0,1}: aux14632_INTEGER :: var_is_introduced ;
var bool: aux14633_BOOL:: var_is_introduced ;
var bool: aux14634_BOOL:: var_is_introduced ;
var 4..61: aux14635:: var_is_introduced ;
var bool: aux14636_BOOL:: var_is_introduced ;
var bool: aux14637_BOOL:: var_is_introduced ;
var bool: aux14638_BOOL:: var_is_introduced ;
var {0,1}: aux14638_INTEGER :: var_is_introduced ;
var bool: aux14639_BOOL:: var_is_introduced ;
var bool: aux14640_BOOL:: var_is_introduced ;
var 3..60: aux14641:: var_is_introduced ;
var bool: aux14642_BOOL:: var_is_introduced ;
var bool: aux14643_BOOL:: var_is_introduced ;
var bool: aux14644_BOOL:: var_is_introduced ;
var {0,1}: aux14644_INTEGER :: var_is_introduced ;
var bool: aux14645_BOOL:: var_is_introduced ;
var bool: aux14646_BOOL:: var_is_introduced ;
var 2..59: aux14647:: var_is_introduced ;
var bool: aux14648_BOOL:: var_is_introduced ;
var bool: aux14649_BOOL:: var_is_introduced ;
var bool: aux14650_BOOL:: var_is_introduced ;
var {0,1}: aux14650_INTEGER :: var_is_introduced ;
var bool: aux14651_BOOL:: var_is_introduced ;
var bool: aux14652_BOOL:: var_is_introduced ;
var 3..60: aux14653:: var_is_introduced ;
var bool: aux14654_BOOL:: var_is_introduced ;
var bool: aux14655_BOOL:: var_is_introduced ;
var bool: aux14656_BOOL:: var_is_introduced ;
var {0,1}: aux14656_INTEGER :: var_is_introduced ;
var bool: aux14657_BOOL:: var_is_introduced ;
var bool: aux14658_BOOL:: var_is_introduced ;
var 2..59: aux14659:: var_is_introduced ;
var bool: aux14660_BOOL:: var_is_introduced ;
var bool: aux14661_BOOL:: var_is_introduced ;
var bool: aux14662_BOOL:: var_is_introduced ;
var {0,1}: aux14662_INTEGER :: var_is_introduced ;
var bool: aux14663_BOOL:: var_is_introduced ;
var bool: aux14664_BOOL:: var_is_introduced ;
var 3..60: aux14665:: var_is_introduced ;
var bool: aux14666_BOOL:: var_is_introduced ;
var bool: aux14667_BOOL:: var_is_introduced ;
var bool: aux14668_BOOL:: var_is_introduced ;
var {0,1}: aux14668_INTEGER :: var_is_introduced ;
var bool: aux14669_BOOL:: var_is_introduced ;
var bool: aux14670_BOOL:: var_is_introduced ;
var 2..59: aux14671:: var_is_introduced ;
var bool: aux14672_BOOL:: var_is_introduced ;
var bool: aux14673_BOOL:: var_is_introduced ;
var bool: aux14674_BOOL:: var_is_introduced ;
var {0,1}: aux14674_INTEGER :: var_is_introduced ;
var bool: aux14675_BOOL:: var_is_introduced ;
var bool: aux14676_BOOL:: var_is_introduced ;
var 2..59: aux14677:: var_is_introduced ;
var bool: aux14678_BOOL:: var_is_introduced ;
var bool: aux14679_BOOL:: var_is_introduced ;
var bool: aux14680_BOOL:: var_is_introduced ;
var {0,1}: aux14680_INTEGER :: var_is_introduced ;
var bool: aux14681_BOOL:: var_is_introduced ;
var bool: aux14682_BOOL:: var_is_introduced ;
var 5..62: aux14683:: var_is_introduced ;
var bool: aux14684_BOOL:: var_is_introduced ;
var bool: aux14685_BOOL:: var_is_introduced ;
var bool: aux14686_BOOL:: var_is_introduced ;
var {0,1}: aux14686_INTEGER :: var_is_introduced ;
var bool: aux14687_BOOL:: var_is_introduced ;
var bool: aux14688_BOOL:: var_is_introduced ;
var 3..60: aux14689:: var_is_introduced ;
var bool: aux14690_BOOL:: var_is_introduced ;
var bool: aux14691_BOOL:: var_is_introduced ;
var bool: aux14692_BOOL:: var_is_introduced ;
var {0,1}: aux14692_INTEGER :: var_is_introduced ;
var bool: aux14693_BOOL:: var_is_introduced ;
var bool: aux14694_BOOL:: var_is_introduced ;
var 4..61: aux14695:: var_is_introduced ;
var bool: aux14696_BOOL:: var_is_introduced ;
var bool: aux14697_BOOL:: var_is_introduced ;
var bool: aux14698_BOOL:: var_is_introduced ;
var {0,1}: aux14698_INTEGER :: var_is_introduced ;
var bool: aux14699_BOOL:: var_is_introduced ;
var bool: aux14700_BOOL:: var_is_introduced ;
var 3..60: aux14701:: var_is_introduced ;
var bool: aux14702_BOOL:: var_is_introduced ;
var bool: aux14703_BOOL:: var_is_introduced ;
var bool: aux14704_BOOL:: var_is_introduced ;
var {0,1}: aux14704_INTEGER :: var_is_introduced ;
var bool: aux14705_BOOL:: var_is_introduced ;
var bool: aux14706_BOOL:: var_is_introduced ;
var 2..59: aux14707:: var_is_introduced ;
var bool: aux14708_BOOL:: var_is_introduced ;
var bool: aux14709_BOOL:: var_is_introduced ;
var bool: aux14710_BOOL:: var_is_introduced ;
var {0,1}: aux14710_INTEGER :: var_is_introduced ;
var bool: aux14711_BOOL:: var_is_introduced ;
var bool: aux14712_BOOL:: var_is_introduced ;
var 3..60: aux14713:: var_is_introduced ;
var bool: aux14714_BOOL:: var_is_introduced ;
var bool: aux14715_BOOL:: var_is_introduced ;
var bool: aux14716_BOOL:: var_is_introduced ;
var {0,1}: aux14716_INTEGER :: var_is_introduced ;
var bool: aux14717_BOOL:: var_is_introduced ;
var bool: aux14718_BOOL:: var_is_introduced ;
var 4..61: aux14719:: var_is_introduced ;
var bool: aux14720_BOOL:: var_is_introduced ;
var bool: aux14721_BOOL:: var_is_introduced ;
var bool: aux14722_BOOL:: var_is_introduced ;
var {0,1}: aux14722_INTEGER :: var_is_introduced ;
var bool: aux14723_BOOL:: var_is_introduced ;
var bool: aux14724_BOOL:: var_is_introduced ;
var 1..58: aux14725:: var_is_introduced ;
var bool: aux14726_BOOL:: var_is_introduced ;
var bool: aux14727_BOOL:: var_is_introduced ;
var bool: aux14728_BOOL:: var_is_introduced ;
var {0,1}: aux14728_INTEGER :: var_is_introduced ;
var bool: aux14729_BOOL:: var_is_introduced ;
var bool: aux14730_BOOL:: var_is_introduced ;
var 4..61: aux14731:: var_is_introduced ;
var bool: aux14732_BOOL:: var_is_introduced ;
var bool: aux14733_BOOL:: var_is_introduced ;
var bool: aux14734_BOOL:: var_is_introduced ;
var {0,1}: aux14734_INTEGER :: var_is_introduced ;
var bool: aux14735_BOOL:: var_is_introduced ;
var bool: aux14736_BOOL:: var_is_introduced ;
var 2..59: aux14737:: var_is_introduced ;
var bool: aux14738_BOOL:: var_is_introduced ;
var bool: aux14739_BOOL:: var_is_introduced ;
var bool: aux14740_BOOL:: var_is_introduced ;
var {0,1}: aux14740_INTEGER :: var_is_introduced ;
var bool: aux14741_BOOL:: var_is_introduced ;
var 1..58: aux14742:: var_is_introduced ;
var bool: aux14743_BOOL:: var_is_introduced ;
var bool: aux14744_BOOL:: var_is_introduced ;
var {0,1}: aux14744_INTEGER :: var_is_introduced ;
var bool: aux14745_BOOL:: var_is_introduced ;
var bool: aux14746_BOOL:: var_is_introduced ;
var bool: aux14747_BOOL:: var_is_introduced ;
var bool: aux14748_BOOL:: var_is_introduced ;
var bool: aux14749_BOOL:: var_is_introduced ;
var 4..61: aux14750:: var_is_introduced ;
var bool: aux14751_BOOL:: var_is_introduced ;
var bool: aux14752_BOOL:: var_is_introduced ;
var bool: aux14753_BOOL:: var_is_introduced ;
var {0,1}: aux14753_INTEGER :: var_is_introduced ;
var bool: aux14754_BOOL:: var_is_introduced ;
var bool: aux14755_BOOL:: var_is_introduced ;
var 4..61: aux14756:: var_is_introduced ;
var bool: aux14757_BOOL:: var_is_introduced ;
var bool: aux14758_BOOL:: var_is_introduced ;
var bool: aux14759_BOOL:: var_is_introduced ;
var {0,1}: aux14759_INTEGER :: var_is_introduced ;
var bool: aux14760_BOOL:: var_is_introduced ;
var bool: aux14761_BOOL:: var_is_introduced ;
var 3..60: aux14762:: var_is_introduced ;
var bool: aux14763_BOOL:: var_is_introduced ;
var bool: aux14764_BOOL:: var_is_introduced ;
var bool: aux14765_BOOL:: var_is_introduced ;
var {0,1}: aux14765_INTEGER :: var_is_introduced ;
var bool: aux14766_BOOL:: var_is_introduced ;
var bool: aux14767_BOOL:: var_is_introduced ;
var 2..59: aux14768:: var_is_introduced ;
var bool: aux14769_BOOL:: var_is_introduced ;
var bool: aux14770_BOOL:: var_is_introduced ;
var bool: aux14771_BOOL:: var_is_introduced ;
var {0,1}: aux14771_INTEGER :: var_is_introduced ;
var bool: aux14772_BOOL:: var_is_introduced ;
var bool: aux14773_BOOL:: var_is_introduced ;
var 3..60: aux14774:: var_is_introduced ;
var bool: aux14775_BOOL:: var_is_introduced ;
var bool: aux14776_BOOL:: var_is_introduced ;
var bool: aux14777_BOOL:: var_is_introduced ;
var {0,1}: aux14777_INTEGER :: var_is_introduced ;
var bool: aux14778_BOOL:: var_is_introduced ;
var bool: aux14779_BOOL:: var_is_introduced ;
var 3..60: aux14780:: var_is_introduced ;
var bool: aux14781_BOOL:: var_is_introduced ;
var bool: aux14782_BOOL:: var_is_introduced ;
var bool: aux14783_BOOL:: var_is_introduced ;
var {0,1}: aux14783_INTEGER :: var_is_introduced ;
var bool: aux14784_BOOL:: var_is_introduced ;
var bool: aux14785_BOOL:: var_is_introduced ;
var 2..59: aux14786:: var_is_introduced ;
var bool: aux14787_BOOL:: var_is_introduced ;
var bool: aux14788_BOOL:: var_is_introduced ;
var bool: aux14789_BOOL:: var_is_introduced ;
var {0,1}: aux14789_INTEGER :: var_is_introduced ;
var bool: aux14790_BOOL:: var_is_introduced ;
var bool: aux14791_BOOL:: var_is_introduced ;
var 2..59: aux14792:: var_is_introduced ;
var bool: aux14793_BOOL:: var_is_introduced ;
var bool: aux14794_BOOL:: var_is_introduced ;
var bool: aux14795_BOOL:: var_is_introduced ;
var {0,1}: aux14795_INTEGER :: var_is_introduced ;
var bool: aux14796_BOOL:: var_is_introduced ;
var bool: aux14797_BOOL:: var_is_introduced ;
var 5..62: aux14798:: var_is_introduced ;
var bool: aux14799_BOOL:: var_is_introduced ;
var bool: aux14800_BOOL:: var_is_introduced ;
var bool: aux14801_BOOL:: var_is_introduced ;
var {0,1}: aux14801_INTEGER :: var_is_introduced ;
var bool: aux14802_BOOL:: var_is_introduced ;
var bool: aux14803_BOOL:: var_is_introduced ;
var 3..60: aux14804:: var_is_introduced ;
var bool: aux14805_BOOL:: var_is_introduced ;
var bool: aux14806_BOOL:: var_is_introduced ;
var bool: aux14807_BOOL:: var_is_introduced ;
var {0,1}: aux14807_INTEGER :: var_is_introduced ;
var bool: aux14808_BOOL:: var_is_introduced ;
var bool: aux14809_BOOL:: var_is_introduced ;
var 4..61: aux14810:: var_is_introduced ;
var bool: aux14811_BOOL:: var_is_introduced ;
var bool: aux14812_BOOL:: var_is_introduced ;
var bool: aux14813_BOOL:: var_is_introduced ;
var {0,1}: aux14813_INTEGER :: var_is_introduced ;
var bool: aux14814_BOOL:: var_is_introduced ;
var bool: aux14815_BOOL:: var_is_introduced ;
var 3..60: aux14816:: var_is_introduced ;
var bool: aux14817_BOOL:: var_is_introduced ;
var bool: aux14818_BOOL:: var_is_introduced ;
var bool: aux14819_BOOL:: var_is_introduced ;
var {0,1}: aux14819_INTEGER :: var_is_introduced ;
var bool: aux14820_BOOL:: var_is_introduced ;
var bool: aux14821_BOOL:: var_is_introduced ;
var 2..59: aux14822:: var_is_introduced ;
var bool: aux14823_BOOL:: var_is_introduced ;
var bool: aux14824_BOOL:: var_is_introduced ;
var bool: aux14825_BOOL:: var_is_introduced ;
var {0,1}: aux14825_INTEGER :: var_is_introduced ;
var bool: aux14826_BOOL:: var_is_introduced ;
var bool: aux14827_BOOL:: var_is_introduced ;
var 1..58: aux14828:: var_is_introduced ;
var bool: aux14829_BOOL:: var_is_introduced ;
var bool: aux14830_BOOL:: var_is_introduced ;
var bool: aux14831_BOOL:: var_is_introduced ;
var {0,1}: aux14831_INTEGER :: var_is_introduced ;
var bool: aux14832_BOOL:: var_is_introduced ;
var bool: aux14833_BOOL:: var_is_introduced ;
var 3..60: aux14834:: var_is_introduced ;
var bool: aux14835_BOOL:: var_is_introduced ;
var bool: aux14836_BOOL:: var_is_introduced ;
var bool: aux14837_BOOL:: var_is_introduced ;
var {0,1}: aux14837_INTEGER :: var_is_introduced ;
var bool: aux14838_BOOL:: var_is_introduced ;
var bool: aux14839_BOOL:: var_is_introduced ;
var 4..61: aux14840:: var_is_introduced ;
var bool: aux14841_BOOL:: var_is_introduced ;
var bool: aux14842_BOOL:: var_is_introduced ;
var bool: aux14843_BOOL:: var_is_introduced ;
var {0,1}: aux14843_INTEGER :: var_is_introduced ;
var bool: aux14844_BOOL:: var_is_introduced ;
var bool: aux14845_BOOL:: var_is_introduced ;
var 1..58: aux14846:: var_is_introduced ;
var bool: aux14847_BOOL:: var_is_introduced ;
var bool: aux14848_BOOL:: var_is_introduced ;
var bool: aux14849_BOOL:: var_is_introduced ;
var {0,1}: aux14849_INTEGER :: var_is_introduced ;
var bool: aux14850_BOOL:: var_is_introduced ;
var bool: aux14851_BOOL:: var_is_introduced ;
var 4..61: aux14852:: var_is_introduced ;
var bool: aux14853_BOOL:: var_is_introduced ;
var bool: aux14854_BOOL:: var_is_introduced ;
var bool: aux14855_BOOL:: var_is_introduced ;
var {0,1}: aux14855_INTEGER :: var_is_introduced ;
var bool: aux14856_BOOL:: var_is_introduced ;
var bool: aux14857_BOOL:: var_is_introduced ;
var 2..59: aux14858:: var_is_introduced ;
var bool: aux14859_BOOL:: var_is_introduced ;
var bool: aux14860_BOOL:: var_is_introduced ;
var bool: aux14861_BOOL:: var_is_introduced ;
var {0,1}: aux14861_INTEGER :: var_is_introduced ;
var bool: aux14862_BOOL:: var_is_introduced ;
var 2..59: aux14863:: var_is_introduced ;
var bool: aux14864_BOOL:: var_is_introduced ;
var bool: aux14865_BOOL:: var_is_introduced ;
var {0,1}: aux14865_INTEGER :: var_is_introduced ;
var bool: aux14866_BOOL:: var_is_introduced ;
var bool: aux14867_BOOL:: var_is_introduced ;
var bool: aux14868_BOOL:: var_is_introduced ;
var 4..61: aux14869:: var_is_introduced ;
var bool: aux14870_BOOL:: var_is_introduced ;
var bool: aux14871_BOOL:: var_is_introduced ;
var bool: aux14872_BOOL:: var_is_introduced ;
var {0,1}: aux14872_INTEGER :: var_is_introduced ;
var bool: aux14873_BOOL:: var_is_introduced ;
var bool: aux14874_BOOL:: var_is_introduced ;
var 3..60: aux14875:: var_is_introduced ;
var bool: aux14876_BOOL:: var_is_introduced ;
var bool: aux14877_BOOL:: var_is_introduced ;
var bool: aux14878_BOOL:: var_is_introduced ;
var {0,1}: aux14878_INTEGER :: var_is_introduced ;
var bool: aux14879_BOOL:: var_is_introduced ;
var bool: aux14880_BOOL:: var_is_introduced ;
var 2..59: aux14881:: var_is_introduced ;
var bool: aux14882_BOOL:: var_is_introduced ;
var bool: aux14883_BOOL:: var_is_introduced ;
var bool: aux14884_BOOL:: var_is_introduced ;
var {0,1}: aux14884_INTEGER :: var_is_introduced ;
var bool: aux14885_BOOL:: var_is_introduced ;
var bool: aux14886_BOOL:: var_is_introduced ;
var 3..60: aux14887:: var_is_introduced ;
var bool: aux14888_BOOL:: var_is_introduced ;
var bool: aux14889_BOOL:: var_is_introduced ;
var bool: aux14890_BOOL:: var_is_introduced ;
var {0,1}: aux14890_INTEGER :: var_is_introduced ;
var bool: aux14891_BOOL:: var_is_introduced ;
var bool: aux14892_BOOL:: var_is_introduced ;
var 2..59: aux14893:: var_is_introduced ;
var bool: aux14894_BOOL:: var_is_introduced ;
var bool: aux14895_BOOL:: var_is_introduced ;
var bool: aux14896_BOOL:: var_is_introduced ;
var {0,1}: aux14896_INTEGER :: var_is_introduced ;
var bool: aux14897_BOOL:: var_is_introduced ;
var bool: aux14898_BOOL:: var_is_introduced ;
var 3..60: aux14899:: var_is_introduced ;
var bool: aux14900_BOOL:: var_is_introduced ;
var bool: aux14901_BOOL:: var_is_introduced ;
var bool: aux14902_BOOL:: var_is_introduced ;
var {0,1}: aux14902_INTEGER :: var_is_introduced ;
var bool: aux14903_BOOL:: var_is_introduced ;
var bool: aux14904_BOOL:: var_is_introduced ;
var 2..59: aux14905:: var_is_introduced ;
var bool: aux14906_BOOL:: var_is_introduced ;
var bool: aux14907_BOOL:: var_is_introduced ;
var bool: aux14908_BOOL:: var_is_introduced ;
var {0,1}: aux14908_INTEGER :: var_is_introduced ;
var bool: aux14909_BOOL:: var_is_introduced ;
var bool: aux14910_BOOL:: var_is_introduced ;
var 2..59: aux14911:: var_is_introduced ;
var bool: aux14912_BOOL:: var_is_introduced ;
var bool: aux14913_BOOL:: var_is_introduced ;
var bool: aux14914_BOOL:: var_is_introduced ;
var {0,1}: aux14914_INTEGER :: var_is_introduced ;
var bool: aux14915_BOOL:: var_is_introduced ;
var bool: aux14916_BOOL:: var_is_introduced ;
var 5..62: aux14917:: var_is_introduced ;
var bool: aux14918_BOOL:: var_is_introduced ;
var bool: aux14919_BOOL:: var_is_introduced ;
var bool: aux14920_BOOL:: var_is_introduced ;
var {0,1}: aux14920_INTEGER :: var_is_introduced ;
var bool: aux14921_BOOL:: var_is_introduced ;
var bool: aux14922_BOOL:: var_is_introduced ;
var 3..60: aux14923:: var_is_introduced ;
var bool: aux14924_BOOL:: var_is_introduced ;
var bool: aux14925_BOOL:: var_is_introduced ;
var bool: aux14926_BOOL:: var_is_introduced ;
var {0,1}: aux14926_INTEGER :: var_is_introduced ;
var bool: aux14927_BOOL:: var_is_introduced ;
var bool: aux14928_BOOL:: var_is_introduced ;
var 4..61: aux14929:: var_is_introduced ;
var bool: aux14930_BOOL:: var_is_introduced ;
var bool: aux14931_BOOL:: var_is_introduced ;
var bool: aux14932_BOOL:: var_is_introduced ;
var {0,1}: aux14932_INTEGER :: var_is_introduced ;
var bool: aux14933_BOOL:: var_is_introduced ;
var bool: aux14934_BOOL:: var_is_introduced ;
var 3..60: aux14935:: var_is_introduced ;
var bool: aux14936_BOOL:: var_is_introduced ;
var bool: aux14937_BOOL:: var_is_introduced ;
var bool: aux14938_BOOL:: var_is_introduced ;
var {0,1}: aux14938_INTEGER :: var_is_introduced ;
var bool: aux14939_BOOL:: var_is_introduced ;
var bool: aux14940_BOOL:: var_is_introduced ;
var 2..59: aux14941:: var_is_introduced ;
var bool: aux14942_BOOL:: var_is_introduced ;
var bool: aux14943_BOOL:: var_is_introduced ;
var bool: aux14944_BOOL:: var_is_introduced ;
var {0,1}: aux14944_INTEGER :: var_is_introduced ;
var bool: aux14945_BOOL:: var_is_introduced ;
var bool: aux14946_BOOL:: var_is_introduced ;
var 1..58: aux14947:: var_is_introduced ;
var bool: aux14948_BOOL:: var_is_introduced ;
var bool: aux14949_BOOL:: var_is_introduced ;
var bool: aux14950_BOOL:: var_is_introduced ;
var {0,1}: aux14950_INTEGER :: var_is_introduced ;
var bool: aux14951_BOOL:: var_is_introduced ;
var bool: aux14952_BOOL:: var_is_introduced ;
var 3..60: aux14953:: var_is_introduced ;
var bool: aux14954_BOOL:: var_is_introduced ;
var bool: aux14955_BOOL:: var_is_introduced ;
var bool: aux14956_BOOL:: var_is_introduced ;
var {0,1}: aux14956_INTEGER :: var_is_introduced ;
var bool: aux14957_BOOL:: var_is_introduced ;
var bool: aux14958_BOOL:: var_is_introduced ;
var 4..61: aux14959:: var_is_introduced ;
var bool: aux14960_BOOL:: var_is_introduced ;
var bool: aux14961_BOOL:: var_is_introduced ;
var bool: aux14962_BOOL:: var_is_introduced ;
var {0,1}: aux14962_INTEGER :: var_is_introduced ;
var bool: aux14963_BOOL:: var_is_introduced ;
var bool: aux14964_BOOL:: var_is_introduced ;
var 1..58: aux14965:: var_is_introduced ;
var bool: aux14966_BOOL:: var_is_introduced ;
var bool: aux14967_BOOL:: var_is_introduced ;
var bool: aux14968_BOOL:: var_is_introduced ;
var {0,1}: aux14968_INTEGER :: var_is_introduced ;
var bool: aux14969_BOOL:: var_is_introduced ;
var bool: aux14970_BOOL:: var_is_introduced ;
var 4..61: aux14971:: var_is_introduced ;
var bool: aux14972_BOOL:: var_is_introduced ;
var bool: aux14973_BOOL:: var_is_introduced ;
var bool: aux14974_BOOL:: var_is_introduced ;
var {0,1}: aux14974_INTEGER :: var_is_introduced ;
var bool: aux14975_BOOL:: var_is_introduced ;
var bool: aux14976_BOOL:: var_is_introduced ;
var 2..59: aux14977:: var_is_introduced ;
var bool: aux14978_BOOL:: var_is_introduced ;
var bool: aux14979_BOOL:: var_is_introduced ;
var bool: aux14980_BOOL:: var_is_introduced ;
var {0,1}: aux14980_INTEGER :: var_is_introduced ;
var bool: aux14981_BOOL:: var_is_introduced ;
var 4..61: aux14982:: var_is_introduced ;
var bool: aux14983_BOOL:: var_is_introduced ;
var bool: aux14984_BOOL:: var_is_introduced ;
var {0,1}: aux14984_INTEGER :: var_is_introduced ;
var bool: aux14985_BOOL:: var_is_introduced ;
var bool: aux14986_BOOL:: var_is_introduced ;
var bool: aux14987_BOOL:: var_is_introduced ;
var 4..61: aux14988:: var_is_introduced ;
var bool: aux14989_BOOL:: var_is_introduced ;
var bool: aux14990_BOOL:: var_is_introduced ;
var bool: aux14991_BOOL:: var_is_introduced ;
var {0,1}: aux14991_INTEGER :: var_is_introduced ;
var bool: aux14992_BOOL:: var_is_introduced ;
var bool: aux14993_BOOL:: var_is_introduced ;
var 3..60: aux14994:: var_is_introduced ;
var bool: aux14995_BOOL:: var_is_introduced ;
var bool: aux14996_BOOL:: var_is_introduced ;
var bool: aux14997_BOOL:: var_is_introduced ;
var {0,1}: aux14997_INTEGER :: var_is_introduced ;
var bool: aux14998_BOOL:: var_is_introduced ;
var bool: aux14999_BOOL:: var_is_introduced ;
var 2..59: aux15000:: var_is_introduced ;
var bool: aux15001_BOOL:: var_is_introduced ;
var bool: aux15002_BOOL:: var_is_introduced ;
var bool: aux15003_BOOL:: var_is_introduced ;
var {0,1}: aux15003_INTEGER :: var_is_introduced ;
var bool: aux15004_BOOL:: var_is_introduced ;
var bool: aux15005_BOOL:: var_is_introduced ;
var 3..60: aux15006:: var_is_introduced ;
var bool: aux15007_BOOL:: var_is_introduced ;
var bool: aux15008_BOOL:: var_is_introduced ;
var bool: aux15009_BOOL:: var_is_introduced ;
var {0,1}: aux15009_INTEGER :: var_is_introduced ;
var bool: aux15010_BOOL:: var_is_introduced ;
var bool: aux15011_BOOL:: var_is_introduced ;
var 2..59: aux15012:: var_is_introduced ;
var bool: aux15013_BOOL:: var_is_introduced ;
var bool: aux15014_BOOL:: var_is_introduced ;
var bool: aux15015_BOOL:: var_is_introduced ;
var {0,1}: aux15015_INTEGER :: var_is_introduced ;
var bool: aux15016_BOOL:: var_is_introduced ;
var bool: aux15017_BOOL:: var_is_introduced ;
var 3..60: aux15018:: var_is_introduced ;
var bool: aux15019_BOOL:: var_is_introduced ;
var bool: aux15020_BOOL:: var_is_introduced ;
var bool: aux15021_BOOL:: var_is_introduced ;
var {0,1}: aux15021_INTEGER :: var_is_introduced ;
var bool: aux15022_BOOL:: var_is_introduced ;
var bool: aux15023_BOOL:: var_is_introduced ;
var 2..59: aux15024:: var_is_introduced ;
var bool: aux15025_BOOL:: var_is_introduced ;
var bool: aux15026_BOOL:: var_is_introduced ;
var bool: aux15027_BOOL:: var_is_introduced ;
var {0,1}: aux15027_INTEGER :: var_is_introduced ;
var bool: aux15028_BOOL:: var_is_introduced ;
var bool: aux15029_BOOL:: var_is_introduced ;
var 2..59: aux15030:: var_is_introduced ;
var bool: aux15031_BOOL:: var_is_introduced ;
var bool: aux15032_BOOL:: var_is_introduced ;
var bool: aux15033_BOOL:: var_is_introduced ;
var {0,1}: aux15033_INTEGER :: var_is_introduced ;
var bool: aux15034_BOOL:: var_is_introduced ;
var bool: aux15035_BOOL:: var_is_introduced ;
var 5..62: aux15036:: var_is_introduced ;
var bool: aux15037_BOOL:: var_is_introduced ;
var bool: aux15038_BOOL:: var_is_introduced ;
var bool: aux15039_BOOL:: var_is_introduced ;
var {0,1}: aux15039_INTEGER :: var_is_introduced ;
var bool: aux15040_BOOL:: var_is_introduced ;
var bool: aux15041_BOOL:: var_is_introduced ;
var 3..60: aux15042:: var_is_introduced ;
var bool: aux15043_BOOL:: var_is_introduced ;
var bool: aux15044_BOOL:: var_is_introduced ;
var bool: aux15045_BOOL:: var_is_introduced ;
var {0,1}: aux15045_INTEGER :: var_is_introduced ;
var bool: aux15046_BOOL:: var_is_introduced ;
var bool: aux15047_BOOL:: var_is_introduced ;
var 4..61: aux15048:: var_is_introduced ;
var bool: aux15049_BOOL:: var_is_introduced ;
var bool: aux15050_BOOL:: var_is_introduced ;
var bool: aux15051_BOOL:: var_is_introduced ;
var {0,1}: aux15051_INTEGER :: var_is_introduced ;
var bool: aux15052_BOOL:: var_is_introduced ;
var bool: aux15053_BOOL:: var_is_introduced ;
var 3..60: aux15054:: var_is_introduced ;
var bool: aux15055_BOOL:: var_is_introduced ;
var bool: aux15056_BOOL:: var_is_introduced ;
var bool: aux15057_BOOL:: var_is_introduced ;
var {0,1}: aux15057_INTEGER :: var_is_introduced ;
var bool: aux15058_BOOL:: var_is_introduced ;
var bool: aux15059_BOOL:: var_is_introduced ;
var 2..59: aux15060:: var_is_introduced ;
var bool: aux15061_BOOL:: var_is_introduced ;
var bool: aux15062_BOOL:: var_is_introduced ;
var bool: aux15063_BOOL:: var_is_introduced ;
var {0,1}: aux15063_INTEGER :: var_is_introduced ;
var bool: aux15064_BOOL:: var_is_introduced ;
var bool: aux15065_BOOL:: var_is_introduced ;
var 1..58: aux15066:: var_is_introduced ;
var bool: aux15067_BOOL:: var_is_introduced ;
var bool: aux15068_BOOL:: var_is_introduced ;
var bool: aux15069_BOOL:: var_is_introduced ;
var {0,1}: aux15069_INTEGER :: var_is_introduced ;
var bool: aux15070_BOOL:: var_is_introduced ;
var bool: aux15071_BOOL:: var_is_introduced ;
var 3..60: aux15072:: var_is_introduced ;
var bool: aux15073_BOOL:: var_is_introduced ;
var bool: aux15074_BOOL:: var_is_introduced ;
var bool: aux15075_BOOL:: var_is_introduced ;
var {0,1}: aux15075_INTEGER :: var_is_introduced ;
var bool: aux15076_BOOL:: var_is_introduced ;
var bool: aux15077_BOOL:: var_is_introduced ;
var 4..61: aux15078:: var_is_introduced ;
var bool: aux15079_BOOL:: var_is_introduced ;
var bool: aux15080_BOOL:: var_is_introduced ;
var bool: aux15081_BOOL:: var_is_introduced ;
var {0,1}: aux15081_INTEGER :: var_is_introduced ;
var bool: aux15082_BOOL:: var_is_introduced ;
var bool: aux15083_BOOL:: var_is_introduced ;
var 1..58: aux15084:: var_is_introduced ;
var bool: aux15085_BOOL:: var_is_introduced ;
var bool: aux15086_BOOL:: var_is_introduced ;
var bool: aux15087_BOOL:: var_is_introduced ;
var {0,1}: aux15087_INTEGER :: var_is_introduced ;
var bool: aux15088_BOOL:: var_is_introduced ;
var bool: aux15089_BOOL:: var_is_introduced ;
var 4..61: aux15090:: var_is_introduced ;
var bool: aux15091_BOOL:: var_is_introduced ;
var bool: aux15092_BOOL:: var_is_introduced ;
var bool: aux15093_BOOL:: var_is_introduced ;
var {0,1}: aux15093_INTEGER :: var_is_introduced ;
var bool: aux15094_BOOL:: var_is_introduced ;
var bool: aux15095_BOOL:: var_is_introduced ;
var 2..59: aux15096:: var_is_introduced ;
var bool: aux15097_BOOL:: var_is_introduced ;
var bool: aux15098_BOOL:: var_is_introduced ;
var bool: aux15099_BOOL:: var_is_introduced ;
var {0,1}: aux15099_INTEGER :: var_is_introduced ;
var bool: aux15100_BOOL:: var_is_introduced ;
var 4..61: aux15101:: var_is_introduced ;
var bool: aux15102_BOOL:: var_is_introduced ;
var bool: aux15103_BOOL:: var_is_introduced ;
var {0,1}: aux15103_INTEGER :: var_is_introduced ;
var bool: aux15104_BOOL:: var_is_introduced ;
var bool: aux15105_BOOL:: var_is_introduced ;
var bool: aux15106_BOOL:: var_is_introduced ;
var 4..61: aux15107:: var_is_introduced ;
var bool: aux15108_BOOL:: var_is_introduced ;
var bool: aux15109_BOOL:: var_is_introduced ;
var bool: aux15110_BOOL:: var_is_introduced ;
var {0,1}: aux15110_INTEGER :: var_is_introduced ;
var bool: aux15111_BOOL:: var_is_introduced ;
var bool: aux15112_BOOL:: var_is_introduced ;
var 4..61: aux15113:: var_is_introduced ;
var bool: aux15114_BOOL:: var_is_introduced ;
var bool: aux15115_BOOL:: var_is_introduced ;
var bool: aux15116_BOOL:: var_is_introduced ;
var {0,1}: aux15116_INTEGER :: var_is_introduced ;
var bool: aux15117_BOOL:: var_is_introduced ;
var bool: aux15118_BOOL:: var_is_introduced ;
var 2..59: aux15119:: var_is_introduced ;
var bool: aux15120_BOOL:: var_is_introduced ;
var bool: aux15121_BOOL:: var_is_introduced ;
var bool: aux15122_BOOL:: var_is_introduced ;
var {0,1}: aux15122_INTEGER :: var_is_introduced ;
var bool: aux15123_BOOL:: var_is_introduced ;
var bool: aux15124_BOOL:: var_is_introduced ;
var 3..60: aux15125:: var_is_introduced ;
var bool: aux15126_BOOL:: var_is_introduced ;
var bool: aux15127_BOOL:: var_is_introduced ;
var bool: aux15128_BOOL:: var_is_introduced ;
var {0,1}: aux15128_INTEGER :: var_is_introduced ;
var bool: aux15129_BOOL:: var_is_introduced ;
var bool: aux15130_BOOL:: var_is_introduced ;
var 2..59: aux15131:: var_is_introduced ;
var bool: aux15132_BOOL:: var_is_introduced ;
var bool: aux15133_BOOL:: var_is_introduced ;
var bool: aux15134_BOOL:: var_is_introduced ;
var {0,1}: aux15134_INTEGER :: var_is_introduced ;
var bool: aux15135_BOOL:: var_is_introduced ;
var bool: aux15136_BOOL:: var_is_introduced ;
var 3..60: aux15137:: var_is_introduced ;
var bool: aux15138_BOOL:: var_is_introduced ;
var bool: aux15139_BOOL:: var_is_introduced ;
var bool: aux15140_BOOL:: var_is_introduced ;
var {0,1}: aux15140_INTEGER :: var_is_introduced ;
var bool: aux15141_BOOL:: var_is_introduced ;
var bool: aux15142_BOOL:: var_is_introduced ;
var 2..59: aux15143:: var_is_introduced ;
var bool: aux15144_BOOL:: var_is_introduced ;
var bool: aux15145_BOOL:: var_is_introduced ;
var bool: aux15146_BOOL:: var_is_introduced ;
var {0,1}: aux15146_INTEGER :: var_is_introduced ;
var bool: aux15147_BOOL:: var_is_introduced ;
var bool: aux15148_BOOL:: var_is_introduced ;
var 2..59: aux15149:: var_is_introduced ;
var bool: aux15150_BOOL:: var_is_introduced ;
var bool: aux15151_BOOL:: var_is_introduced ;
var bool: aux15152_BOOL:: var_is_introduced ;
var {0,1}: aux15152_INTEGER :: var_is_introduced ;
var bool: aux15153_BOOL:: var_is_introduced ;
var bool: aux15154_BOOL:: var_is_introduced ;
var 5..62: aux15155:: var_is_introduced ;
var bool: aux15156_BOOL:: var_is_introduced ;
var bool: aux15157_BOOL:: var_is_introduced ;
var bool: aux15158_BOOL:: var_is_introduced ;
var {0,1}: aux15158_INTEGER :: var_is_introduced ;
var bool: aux15159_BOOL:: var_is_introduced ;
var bool: aux15160_BOOL:: var_is_introduced ;
var 3..60: aux15161:: var_is_introduced ;
var bool: aux15162_BOOL:: var_is_introduced ;
var bool: aux15163_BOOL:: var_is_introduced ;
var bool: aux15164_BOOL:: var_is_introduced ;
var {0,1}: aux15164_INTEGER :: var_is_introduced ;
var bool: aux15165_BOOL:: var_is_introduced ;
var bool: aux15166_BOOL:: var_is_introduced ;
var 4..61: aux15167:: var_is_introduced ;
var bool: aux15168_BOOL:: var_is_introduced ;
var bool: aux15169_BOOL:: var_is_introduced ;
var bool: aux15170_BOOL:: var_is_introduced ;
var {0,1}: aux15170_INTEGER :: var_is_introduced ;
var bool: aux15171_BOOL:: var_is_introduced ;
var bool: aux15172_BOOL:: var_is_introduced ;
var 3..60: aux15173:: var_is_introduced ;
var bool: aux15174_BOOL:: var_is_introduced ;
var bool: aux15175_BOOL:: var_is_introduced ;
var bool: aux15176_BOOL:: var_is_introduced ;
var {0,1}: aux15176_INTEGER :: var_is_introduced ;
var bool: aux15177_BOOL:: var_is_introduced ;
var bool: aux15178_BOOL:: var_is_introduced ;
var 2..59: aux15179:: var_is_introduced ;
var bool: aux15180_BOOL:: var_is_introduced ;
var bool: aux15181_BOOL:: var_is_introduced ;
var bool: aux15182_BOOL:: var_is_introduced ;
var {0,1}: aux15182_INTEGER :: var_is_introduced ;
var bool: aux15183_BOOL:: var_is_introduced ;
var bool: aux15184_BOOL:: var_is_introduced ;
var 1..58: aux15185:: var_is_introduced ;
var bool: aux15186_BOOL:: var_is_introduced ;
var bool: aux15187_BOOL:: var_is_introduced ;
var bool: aux15188_BOOL:: var_is_introduced ;
var {0,1}: aux15188_INTEGER :: var_is_introduced ;
var bool: aux15189_BOOL:: var_is_introduced ;
var bool: aux15190_BOOL:: var_is_introduced ;
var 3..60: aux15191:: var_is_introduced ;
var bool: aux15192_BOOL:: var_is_introduced ;
var bool: aux15193_BOOL:: var_is_introduced ;
var bool: aux15194_BOOL:: var_is_introduced ;
var {0,1}: aux15194_INTEGER :: var_is_introduced ;
var bool: aux15195_BOOL:: var_is_introduced ;
var bool: aux15196_BOOL:: var_is_introduced ;
var 4..61: aux15197:: var_is_introduced ;
var bool: aux15198_BOOL:: var_is_introduced ;
var bool: aux15199_BOOL:: var_is_introduced ;
var bool: aux15200_BOOL:: var_is_introduced ;
var {0,1}: aux15200_INTEGER :: var_is_introduced ;
var bool: aux15201_BOOL:: var_is_introduced ;
var bool: aux15202_BOOL:: var_is_introduced ;
var 1..58: aux15203:: var_is_introduced ;
var bool: aux15204_BOOL:: var_is_introduced ;
var bool: aux15205_BOOL:: var_is_introduced ;
var bool: aux15206_BOOL:: var_is_introduced ;
var {0,1}: aux15206_INTEGER :: var_is_introduced ;
var bool: aux15207_BOOL:: var_is_introduced ;
var bool: aux15208_BOOL:: var_is_introduced ;
var 4..61: aux15209:: var_is_introduced ;
var bool: aux15210_BOOL:: var_is_introduced ;
var bool: aux15211_BOOL:: var_is_introduced ;
var bool: aux15212_BOOL:: var_is_introduced ;
var {0,1}: aux15212_INTEGER :: var_is_introduced ;
var bool: aux15213_BOOL:: var_is_introduced ;
var bool: aux15214_BOOL:: var_is_introduced ;
var 2..59: aux15215:: var_is_introduced ;
var bool: aux15216_BOOL:: var_is_introduced ;
var bool: aux15217_BOOL:: var_is_introduced ;
var bool: aux15218_BOOL:: var_is_introduced ;
var {0,1}: aux15218_INTEGER :: var_is_introduced ;
var bool: aux15219_BOOL:: var_is_introduced ;
var 3..60: aux15220:: var_is_introduced ;
var bool: aux15221_BOOL:: var_is_introduced ;
var bool: aux15222_BOOL:: var_is_introduced ;
var {0,1}: aux15222_INTEGER :: var_is_introduced ;
var bool: aux15223_BOOL:: var_is_introduced ;
var bool: aux15224_BOOL:: var_is_introduced ;
var bool: aux15225_BOOL:: var_is_introduced ;
var 4..61: aux15226:: var_is_introduced ;
var bool: aux15227_BOOL:: var_is_introduced ;
var bool: aux15228_BOOL:: var_is_introduced ;
var bool: aux15229_BOOL:: var_is_introduced ;
var {0,1}: aux15229_INTEGER :: var_is_introduced ;
var bool: aux15230_BOOL:: var_is_introduced ;
var bool: aux15231_BOOL:: var_is_introduced ;
var 4..61: aux15232:: var_is_introduced ;
var bool: aux15233_BOOL:: var_is_introduced ;
var bool: aux15234_BOOL:: var_is_introduced ;
var bool: aux15235_BOOL:: var_is_introduced ;
var {0,1}: aux15235_INTEGER :: var_is_introduced ;
var bool: aux15236_BOOL:: var_is_introduced ;
var bool: aux15237_BOOL:: var_is_introduced ;
var 3..60: aux15238:: var_is_introduced ;
var bool: aux15239_BOOL:: var_is_introduced ;
var bool: aux15240_BOOL:: var_is_introduced ;
var bool: aux15241_BOOL:: var_is_introduced ;
var {0,1}: aux15241_INTEGER :: var_is_introduced ;
var bool: aux15242_BOOL:: var_is_introduced ;
var bool: aux15243_BOOL:: var_is_introduced ;
var 2..59: aux15244:: var_is_introduced ;
var bool: aux15245_BOOL:: var_is_introduced ;
var bool: aux15246_BOOL:: var_is_introduced ;
var bool: aux15247_BOOL:: var_is_introduced ;
var {0,1}: aux15247_INTEGER :: var_is_introduced ;
var bool: aux15248_BOOL:: var_is_introduced ;
var bool: aux15249_BOOL:: var_is_introduced ;
var 3..60: aux15250:: var_is_introduced ;
var bool: aux15251_BOOL:: var_is_introduced ;
var bool: aux15252_BOOL:: var_is_introduced ;
var bool: aux15253_BOOL:: var_is_introduced ;
var {0,1}: aux15253_INTEGER :: var_is_introduced ;
var bool: aux15254_BOOL:: var_is_introduced ;
var bool: aux15255_BOOL:: var_is_introduced ;
var 2..59: aux15256:: var_is_introduced ;
var bool: aux15257_BOOL:: var_is_introduced ;
var bool: aux15258_BOOL:: var_is_introduced ;
var bool: aux15259_BOOL:: var_is_introduced ;
var {0,1}: aux15259_INTEGER :: var_is_introduced ;
var bool: aux15260_BOOL:: var_is_introduced ;
var bool: aux15261_BOOL:: var_is_introduced ;
var 3..60: aux15262:: var_is_introduced ;
var bool: aux15263_BOOL:: var_is_introduced ;
var bool: aux15264_BOOL:: var_is_introduced ;
var bool: aux15265_BOOL:: var_is_introduced ;
var {0,1}: aux15265_INTEGER :: var_is_introduced ;
var bool: aux15266_BOOL:: var_is_introduced ;
var bool: aux15267_BOOL:: var_is_introduced ;
var 2..59: aux15268:: var_is_introduced ;
var bool: aux15269_BOOL:: var_is_introduced ;
var bool: aux15270_BOOL:: var_is_introduced ;
var bool: aux15271_BOOL:: var_is_introduced ;
var {0,1}: aux15271_INTEGER :: var_is_introduced ;
var bool: aux15272_BOOL:: var_is_introduced ;
var bool: aux15273_BOOL:: var_is_introduced ;
var 2..59: aux15274:: var_is_introduced ;
var bool: aux15275_BOOL:: var_is_introduced ;
var bool: aux15276_BOOL:: var_is_introduced ;
var bool: aux15277_BOOL:: var_is_introduced ;
var {0,1}: aux15277_INTEGER :: var_is_introduced ;
var bool: aux15278_BOOL:: var_is_introduced ;
var bool: aux15279_BOOL:: var_is_introduced ;
var 5..62: aux15280:: var_is_introduced ;
var bool: aux15281_BOOL:: var_is_introduced ;
var bool: aux15282_BOOL:: var_is_introduced ;
var bool: aux15283_BOOL:: var_is_introduced ;
var {0,1}: aux15283_INTEGER :: var_is_introduced ;
var bool: aux15284_BOOL:: var_is_introduced ;
var bool: aux15285_BOOL:: var_is_introduced ;
var 3..60: aux15286:: var_is_introduced ;
var bool: aux15287_BOOL:: var_is_introduced ;
var bool: aux15288_BOOL:: var_is_introduced ;
var bool: aux15289_BOOL:: var_is_introduced ;
var {0,1}: aux15289_INTEGER :: var_is_introduced ;
var bool: aux15290_BOOL:: var_is_introduced ;
var bool: aux15291_BOOL:: var_is_introduced ;
var 4..61: aux15292:: var_is_introduced ;
var bool: aux15293_BOOL:: var_is_introduced ;
var bool: aux15294_BOOL:: var_is_introduced ;
var bool: aux15295_BOOL:: var_is_introduced ;
var {0,1}: aux15295_INTEGER :: var_is_introduced ;
var bool: aux15296_BOOL:: var_is_introduced ;
var bool: aux15297_BOOL:: var_is_introduced ;
var 2..59: aux15298:: var_is_introduced ;
var bool: aux15299_BOOL:: var_is_introduced ;
var bool: aux15300_BOOL:: var_is_introduced ;
var bool: aux15301_BOOL:: var_is_introduced ;
var {0,1}: aux15301_INTEGER :: var_is_introduced ;
var bool: aux15302_BOOL:: var_is_introduced ;
var bool: aux15303_BOOL:: var_is_introduced ;
var 1..58: aux15304:: var_is_introduced ;
var bool: aux15305_BOOL:: var_is_introduced ;
var bool: aux15306_BOOL:: var_is_introduced ;
var bool: aux15307_BOOL:: var_is_introduced ;
var {0,1}: aux15307_INTEGER :: var_is_introduced ;
var bool: aux15308_BOOL:: var_is_introduced ;
var bool: aux15309_BOOL:: var_is_introduced ;
var 3..60: aux15310:: var_is_introduced ;
var bool: aux15311_BOOL:: var_is_introduced ;
var bool: aux15312_BOOL:: var_is_introduced ;
var bool: aux15313_BOOL:: var_is_introduced ;
var {0,1}: aux15313_INTEGER :: var_is_introduced ;
var bool: aux15314_BOOL:: var_is_introduced ;
var bool: aux15315_BOOL:: var_is_introduced ;
var 4..61: aux15316:: var_is_introduced ;
var bool: aux15317_BOOL:: var_is_introduced ;
var bool: aux15318_BOOL:: var_is_introduced ;
var bool: aux15319_BOOL:: var_is_introduced ;
var {0,1}: aux15319_INTEGER :: var_is_introduced ;
var bool: aux15320_BOOL:: var_is_introduced ;
var bool: aux15321_BOOL:: var_is_introduced ;
var 1..58: aux15322:: var_is_introduced ;
var bool: aux15323_BOOL:: var_is_introduced ;
var bool: aux15324_BOOL:: var_is_introduced ;
var bool: aux15325_BOOL:: var_is_introduced ;
var {0,1}: aux15325_INTEGER :: var_is_introduced ;
var bool: aux15326_BOOL:: var_is_introduced ;
var bool: aux15327_BOOL:: var_is_introduced ;
var 4..61: aux15328:: var_is_introduced ;
var bool: aux15329_BOOL:: var_is_introduced ;
var bool: aux15330_BOOL:: var_is_introduced ;
var bool: aux15331_BOOL:: var_is_introduced ;
var {0,1}: aux15331_INTEGER :: var_is_introduced ;
var bool: aux15332_BOOL:: var_is_introduced ;
var bool: aux15333_BOOL:: var_is_introduced ;
var 2..59: aux15334:: var_is_introduced ;
var bool: aux15335_BOOL:: var_is_introduced ;
var bool: aux15336_BOOL:: var_is_introduced ;
var bool: aux15337_BOOL:: var_is_introduced ;
var {0,1}: aux15337_INTEGER :: var_is_introduced ;
var bool: aux15338_BOOL:: var_is_introduced ;
var 3..60: aux15339:: var_is_introduced ;
var bool: aux15340_BOOL:: var_is_introduced ;
var bool: aux15341_BOOL:: var_is_introduced ;
var {0,1}: aux15341_INTEGER :: var_is_introduced ;
var bool: aux15342_BOOL:: var_is_introduced ;
var bool: aux15343_BOOL:: var_is_introduced ;
var bool: aux15344_BOOL:: var_is_introduced ;
var 4..61: aux15345:: var_is_introduced ;
var bool: aux15346_BOOL:: var_is_introduced ;
var bool: aux15347_BOOL:: var_is_introduced ;
var bool: aux15348_BOOL:: var_is_introduced ;
var {0,1}: aux15348_INTEGER :: var_is_introduced ;
var bool: aux15349_BOOL:: var_is_introduced ;
var bool: aux15350_BOOL:: var_is_introduced ;
var 4..61: aux15351:: var_is_introduced ;
var bool: aux15352_BOOL:: var_is_introduced ;
var bool: aux15353_BOOL:: var_is_introduced ;
var bool: aux15354_BOOL:: var_is_introduced ;
var {0,1}: aux15354_INTEGER :: var_is_introduced ;
var bool: aux15355_BOOL:: var_is_introduced ;
var bool: aux15356_BOOL:: var_is_introduced ;
var 3..60: aux15357:: var_is_introduced ;
var bool: aux15358_BOOL:: var_is_introduced ;
var bool: aux15359_BOOL:: var_is_introduced ;
var bool: aux15360_BOOL:: var_is_introduced ;
var {0,1}: aux15360_INTEGER :: var_is_introduced ;
var bool: aux15361_BOOL:: var_is_introduced ;
var bool: aux15362_BOOL:: var_is_introduced ;
var 2..59: aux15363:: var_is_introduced ;
var bool: aux15364_BOOL:: var_is_introduced ;
var bool: aux15365_BOOL:: var_is_introduced ;
var bool: aux15366_BOOL:: var_is_introduced ;
var {0,1}: aux15366_INTEGER :: var_is_introduced ;
var bool: aux15367_BOOL:: var_is_introduced ;
var bool: aux15368_BOOL:: var_is_introduced ;
var 2..59: aux15369:: var_is_introduced ;
var bool: aux15370_BOOL:: var_is_introduced ;
var bool: aux15371_BOOL:: var_is_introduced ;
var bool: aux15372_BOOL:: var_is_introduced ;
var {0,1}: aux15372_INTEGER :: var_is_introduced ;
var bool: aux15373_BOOL:: var_is_introduced ;
var bool: aux15374_BOOL:: var_is_introduced ;
var 3..60: aux15375:: var_is_introduced ;
var bool: aux15376_BOOL:: var_is_introduced ;
var bool: aux15377_BOOL:: var_is_introduced ;
var bool: aux15378_BOOL:: var_is_introduced ;
var {0,1}: aux15378_INTEGER :: var_is_introduced ;
var bool: aux15379_BOOL:: var_is_introduced ;
var bool: aux15380_BOOL:: var_is_introduced ;
var 2..59: aux15381:: var_is_introduced ;
var bool: aux15382_BOOL:: var_is_introduced ;
var bool: aux15383_BOOL:: var_is_introduced ;
var bool: aux15384_BOOL:: var_is_introduced ;
var {0,1}: aux15384_INTEGER :: var_is_introduced ;
var bool: aux15385_BOOL:: var_is_introduced ;
var bool: aux15386_BOOL:: var_is_introduced ;
var 2..59: aux15387:: var_is_introduced ;
var bool: aux15388_BOOL:: var_is_introduced ;
var bool: aux15389_BOOL:: var_is_introduced ;
var bool: aux15390_BOOL:: var_is_introduced ;
var {0,1}: aux15390_INTEGER :: var_is_introduced ;
var bool: aux15391_BOOL:: var_is_introduced ;
var bool: aux15392_BOOL:: var_is_introduced ;
var 5..62: aux15393:: var_is_introduced ;
var bool: aux15394_BOOL:: var_is_introduced ;
var bool: aux15395_BOOL:: var_is_introduced ;
var bool: aux15396_BOOL:: var_is_introduced ;
var {0,1}: aux15396_INTEGER :: var_is_introduced ;
var bool: aux15397_BOOL:: var_is_introduced ;
var bool: aux15398_BOOL:: var_is_introduced ;
var 3..60: aux15399:: var_is_introduced ;
var bool: aux15400_BOOL:: var_is_introduced ;
var bool: aux15401_BOOL:: var_is_introduced ;
var bool: aux15402_BOOL:: var_is_introduced ;
var {0,1}: aux15402_INTEGER :: var_is_introduced ;
var bool: aux15403_BOOL:: var_is_introduced ;
var bool: aux15404_BOOL:: var_is_introduced ;
var 4..61: aux15405:: var_is_introduced ;
var bool: aux15406_BOOL:: var_is_introduced ;
var bool: aux15407_BOOL:: var_is_introduced ;
var bool: aux15408_BOOL:: var_is_introduced ;
var {0,1}: aux15408_INTEGER :: var_is_introduced ;
var bool: aux15409_BOOL:: var_is_introduced ;
var bool: aux15410_BOOL:: var_is_introduced ;
var 3..60: aux15411:: var_is_introduced ;
var bool: aux15412_BOOL:: var_is_introduced ;
var bool: aux15413_BOOL:: var_is_introduced ;
var bool: aux15414_BOOL:: var_is_introduced ;
var {0,1}: aux15414_INTEGER :: var_is_introduced ;
var bool: aux15415_BOOL:: var_is_introduced ;
var bool: aux15416_BOOL:: var_is_introduced ;
var 2..59: aux15417:: var_is_introduced ;
var bool: aux15418_BOOL:: var_is_introduced ;
var bool: aux15419_BOOL:: var_is_introduced ;
var bool: aux15420_BOOL:: var_is_introduced ;
var {0,1}: aux15420_INTEGER :: var_is_introduced ;
var bool: aux15421_BOOL:: var_is_introduced ;
var bool: aux15422_BOOL:: var_is_introduced ;
var 1..58: aux15423:: var_is_introduced ;
var bool: aux15424_BOOL:: var_is_introduced ;
var bool: aux15425_BOOL:: var_is_introduced ;
var bool: aux15426_BOOL:: var_is_introduced ;
var {0,1}: aux15426_INTEGER :: var_is_introduced ;
var bool: aux15427_BOOL:: var_is_introduced ;
var bool: aux15428_BOOL:: var_is_introduced ;
var 3..60: aux15429:: var_is_introduced ;
var bool: aux15430_BOOL:: var_is_introduced ;
var bool: aux15431_BOOL:: var_is_introduced ;
var bool: aux15432_BOOL:: var_is_introduced ;
var {0,1}: aux15432_INTEGER :: var_is_introduced ;
var bool: aux15433_BOOL:: var_is_introduced ;
var bool: aux15434_BOOL:: var_is_introduced ;
var 4..61: aux15435:: var_is_introduced ;
var bool: aux15436_BOOL:: var_is_introduced ;
var bool: aux15437_BOOL:: var_is_introduced ;
var bool: aux15438_BOOL:: var_is_introduced ;
var {0,1}: aux15438_INTEGER :: var_is_introduced ;
var bool: aux15439_BOOL:: var_is_introduced ;
var bool: aux15440_BOOL:: var_is_introduced ;
var 1..58: aux15441:: var_is_introduced ;
var bool: aux15442_BOOL:: var_is_introduced ;
var bool: aux15443_BOOL:: var_is_introduced ;
var bool: aux15444_BOOL:: var_is_introduced ;
var {0,1}: aux15444_INTEGER :: var_is_introduced ;
var bool: aux15445_BOOL:: var_is_introduced ;
var bool: aux15446_BOOL:: var_is_introduced ;
var 4..61: aux15447:: var_is_introduced ;
var bool: aux15448_BOOL:: var_is_introduced ;
var bool: aux15449_BOOL:: var_is_introduced ;
var bool: aux15450_BOOL:: var_is_introduced ;
var {0,1}: aux15450_INTEGER :: var_is_introduced ;
var bool: aux15451_BOOL:: var_is_introduced ;
var bool: aux15452_BOOL:: var_is_introduced ;
var 2..59: aux15453:: var_is_introduced ;
var bool: aux15454_BOOL:: var_is_introduced ;
var bool: aux15455_BOOL:: var_is_introduced ;
var bool: aux15456_BOOL:: var_is_introduced ;
var {0,1}: aux15456_INTEGER :: var_is_introduced ;
var bool: aux15457_BOOL:: var_is_introduced ;
var 3..60: aux15458:: var_is_introduced ;
var bool: aux15459_BOOL:: var_is_introduced ;
var bool: aux15460_BOOL:: var_is_introduced ;
var {0,1}: aux15460_INTEGER :: var_is_introduced ;
var bool: aux15461_BOOL:: var_is_introduced ;
var bool: aux15462_BOOL:: var_is_introduced ;
var bool: aux15463_BOOL:: var_is_introduced ;
var 4..61: aux15464:: var_is_introduced ;
var bool: aux15465_BOOL:: var_is_introduced ;
var bool: aux15466_BOOL:: var_is_introduced ;
var bool: aux15467_BOOL:: var_is_introduced ;
var {0,1}: aux15467_INTEGER :: var_is_introduced ;
var bool: aux15468_BOOL:: var_is_introduced ;
var bool: aux15469_BOOL:: var_is_introduced ;
var 4..61: aux15470:: var_is_introduced ;
var bool: aux15471_BOOL:: var_is_introduced ;
var bool: aux15472_BOOL:: var_is_introduced ;
var bool: aux15473_BOOL:: var_is_introduced ;
var {0,1}: aux15473_INTEGER :: var_is_introduced ;
var bool: aux15474_BOOL:: var_is_introduced ;
var bool: aux15475_BOOL:: var_is_introduced ;
var 3..60: aux15476:: var_is_introduced ;
var bool: aux15477_BOOL:: var_is_introduced ;
var bool: aux15478_BOOL:: var_is_introduced ;
var bool: aux15479_BOOL:: var_is_introduced ;
var {0,1}: aux15479_INTEGER :: var_is_introduced ;
var bool: aux15480_BOOL:: var_is_introduced ;
var bool: aux15481_BOOL:: var_is_introduced ;
var 2..59: aux15482:: var_is_introduced ;
var bool: aux15483_BOOL:: var_is_introduced ;
var bool: aux15484_BOOL:: var_is_introduced ;
var bool: aux15485_BOOL:: var_is_introduced ;
var {0,1}: aux15485_INTEGER :: var_is_introduced ;
var bool: aux15486_BOOL:: var_is_introduced ;
var bool: aux15487_BOOL:: var_is_introduced ;
var 3..60: aux15488:: var_is_introduced ;
var bool: aux15489_BOOL:: var_is_introduced ;
var bool: aux15490_BOOL:: var_is_introduced ;
var bool: aux15491_BOOL:: var_is_introduced ;
var {0,1}: aux15491_INTEGER :: var_is_introduced ;
var bool: aux15492_BOOL:: var_is_introduced ;
var bool: aux15493_BOOL:: var_is_introduced ;
var 2..59: aux15494:: var_is_introduced ;
var bool: aux15495_BOOL:: var_is_introduced ;
var bool: aux15496_BOOL:: var_is_introduced ;
var bool: aux15497_BOOL:: var_is_introduced ;
var {0,1}: aux15497_INTEGER :: var_is_introduced ;
var bool: aux15498_BOOL:: var_is_introduced ;
var bool: aux15499_BOOL:: var_is_introduced ;
var 3..60: aux15500:: var_is_introduced ;
var bool: aux15501_BOOL:: var_is_introduced ;
var bool: aux15502_BOOL:: var_is_introduced ;
var bool: aux15503_BOOL:: var_is_introduced ;
var {0,1}: aux15503_INTEGER :: var_is_introduced ;
var bool: aux15504_BOOL:: var_is_introduced ;
var bool: aux15505_BOOL:: var_is_introduced ;
var 2..59: aux15506:: var_is_introduced ;
var bool: aux15507_BOOL:: var_is_introduced ;
var bool: aux15508_BOOL:: var_is_introduced ;
var bool: aux15509_BOOL:: var_is_introduced ;
var {0,1}: aux15509_INTEGER :: var_is_introduced ;
var bool: aux15510_BOOL:: var_is_introduced ;
var bool: aux15511_BOOL:: var_is_introduced ;
var 2..59: aux15512:: var_is_introduced ;
var bool: aux15513_BOOL:: var_is_introduced ;
var bool: aux15514_BOOL:: var_is_introduced ;
var bool: aux15515_BOOL:: var_is_introduced ;
var {0,1}: aux15515_INTEGER :: var_is_introduced ;
var bool: aux15516_BOOL:: var_is_introduced ;
var bool: aux15517_BOOL:: var_is_introduced ;
var 5..62: aux15518:: var_is_introduced ;
var bool: aux15519_BOOL:: var_is_introduced ;
var bool: aux15520_BOOL:: var_is_introduced ;
var bool: aux15521_BOOL:: var_is_introduced ;
var {0,1}: aux15521_INTEGER :: var_is_introduced ;
var bool: aux15522_BOOL:: var_is_introduced ;
var bool: aux15523_BOOL:: var_is_introduced ;
var 3..60: aux15524:: var_is_introduced ;
var bool: aux15525_BOOL:: var_is_introduced ;
var bool: aux15526_BOOL:: var_is_introduced ;
var bool: aux15527_BOOL:: var_is_introduced ;
var {0,1}: aux15527_INTEGER :: var_is_introduced ;
var bool: aux15528_BOOL:: var_is_introduced ;
var bool: aux15529_BOOL:: var_is_introduced ;
var 4..61: aux15530:: var_is_introduced ;
var bool: aux15531_BOOL:: var_is_introduced ;
var bool: aux15532_BOOL:: var_is_introduced ;
var bool: aux15533_BOOL:: var_is_introduced ;
var {0,1}: aux15533_INTEGER :: var_is_introduced ;
var bool: aux15534_BOOL:: var_is_introduced ;
var bool: aux15535_BOOL:: var_is_introduced ;
var 3..60: aux15536:: var_is_introduced ;
var bool: aux15537_BOOL:: var_is_introduced ;
var bool: aux15538_BOOL:: var_is_introduced ;
var bool: aux15539_BOOL:: var_is_introduced ;
var {0,1}: aux15539_INTEGER :: var_is_introduced ;
var bool: aux15540_BOOL:: var_is_introduced ;
var bool: aux15541_BOOL:: var_is_introduced ;
var 2..59: aux15542:: var_is_introduced ;
var bool: aux15543_BOOL:: var_is_introduced ;
var bool: aux15544_BOOL:: var_is_introduced ;
var bool: aux15545_BOOL:: var_is_introduced ;
var {0,1}: aux15545_INTEGER :: var_is_introduced ;
var bool: aux15546_BOOL:: var_is_introduced ;
var bool: aux15547_BOOL:: var_is_introduced ;
var 1..58: aux15548:: var_is_introduced ;
var bool: aux15549_BOOL:: var_is_introduced ;
var bool: aux15550_BOOL:: var_is_introduced ;
var bool: aux15551_BOOL:: var_is_introduced ;
var {0,1}: aux15551_INTEGER :: var_is_introduced ;
var bool: aux15552_BOOL:: var_is_introduced ;
var bool: aux15553_BOOL:: var_is_introduced ;
var 3..60: aux15554:: var_is_introduced ;
var bool: aux15555_BOOL:: var_is_introduced ;
var bool: aux15556_BOOL:: var_is_introduced ;
var bool: aux15557_BOOL:: var_is_introduced ;
var {0,1}: aux15557_INTEGER :: var_is_introduced ;
var bool: aux15558_BOOL:: var_is_introduced ;
var bool: aux15559_BOOL:: var_is_introduced ;
var 4..61: aux15560:: var_is_introduced ;
var bool: aux15561_BOOL:: var_is_introduced ;
var bool: aux15562_BOOL:: var_is_introduced ;
var bool: aux15563_BOOL:: var_is_introduced ;
var {0,1}: aux15563_INTEGER :: var_is_introduced ;
var bool: aux15564_BOOL:: var_is_introduced ;
var bool: aux15565_BOOL:: var_is_introduced ;
var 4..61: aux15566:: var_is_introduced ;
var bool: aux15567_BOOL:: var_is_introduced ;
var bool: aux15568_BOOL:: var_is_introduced ;
var bool: aux15569_BOOL:: var_is_introduced ;
var {0,1}: aux15569_INTEGER :: var_is_introduced ;
var bool: aux15570_BOOL:: var_is_introduced ;
var bool: aux15571_BOOL:: var_is_introduced ;
var 2..59: aux15572:: var_is_introduced ;
var bool: aux15573_BOOL:: var_is_introduced ;
var bool: aux15574_BOOL:: var_is_introduced ;
var bool: aux15575_BOOL:: var_is_introduced ;
var {0,1}: aux15575_INTEGER :: var_is_introduced ;
var bool: aux15576_BOOL:: var_is_introduced ;
var 1..58: aux15577:: var_is_introduced ;
var bool: aux15578_BOOL:: var_is_introduced ;
var bool: aux15579_BOOL:: var_is_introduced ;
var {0,1}: aux15579_INTEGER :: var_is_introduced ;
var bool: aux15580_BOOL:: var_is_introduced ;
var bool: aux15581_BOOL:: var_is_introduced ;
var bool: aux15582_BOOL:: var_is_introduced ;
var 4..61: aux15583:: var_is_introduced ;
var bool: aux15584_BOOL:: var_is_introduced ;
var bool: aux15585_BOOL:: var_is_introduced ;
var bool: aux15586_BOOL:: var_is_introduced ;
var {0,1}: aux15586_INTEGER :: var_is_introduced ;
var bool: aux15587_BOOL:: var_is_introduced ;
var bool: aux15588_BOOL:: var_is_introduced ;
var 4..61: aux15589:: var_is_introduced ;
var bool: aux15590_BOOL:: var_is_introduced ;
var bool: aux15591_BOOL:: var_is_introduced ;
var bool: aux15592_BOOL:: var_is_introduced ;
var {0,1}: aux15592_INTEGER :: var_is_introduced ;
var bool: aux15593_BOOL:: var_is_introduced ;
var bool: aux15594_BOOL:: var_is_introduced ;
var 3..60: aux15595:: var_is_introduced ;
var bool: aux15596_BOOL:: var_is_introduced ;
var bool: aux15597_BOOL:: var_is_introduced ;
var bool: aux15598_BOOL:: var_is_introduced ;
var {0,1}: aux15598_INTEGER :: var_is_introduced ;
var bool: aux15599_BOOL:: var_is_introduced ;
var bool: aux15600_BOOL:: var_is_introduced ;
var 2..59: aux15601:: var_is_introduced ;
var bool: aux15602_BOOL:: var_is_introduced ;
var bool: aux15603_BOOL:: var_is_introduced ;
var bool: aux15604_BOOL:: var_is_introduced ;
var {0,1}: aux15604_INTEGER :: var_is_introduced ;
var bool: aux15605_BOOL:: var_is_introduced ;
var bool: aux15606_BOOL:: var_is_introduced ;
var 3..60: aux15607:: var_is_introduced ;
var bool: aux15608_BOOL:: var_is_introduced ;
var bool: aux15609_BOOL:: var_is_introduced ;
var bool: aux15610_BOOL:: var_is_introduced ;
var {0,1}: aux15610_INTEGER :: var_is_introduced ;
var bool: aux15611_BOOL:: var_is_introduced ;
var bool: aux15612_BOOL:: var_is_introduced ;
var 2..59: aux15613:: var_is_introduced ;
var bool: aux15614_BOOL:: var_is_introduced ;
var bool: aux15615_BOOL:: var_is_introduced ;
var bool: aux15616_BOOL:: var_is_introduced ;
var {0,1}: aux15616_INTEGER :: var_is_introduced ;
var bool: aux15617_BOOL:: var_is_introduced ;
var bool: aux15618_BOOL:: var_is_introduced ;
var 2..59: aux15619:: var_is_introduced ;
var bool: aux15620_BOOL:: var_is_introduced ;
var bool: aux15621_BOOL:: var_is_introduced ;
var bool: aux15622_BOOL:: var_is_introduced ;
var {0,1}: aux15622_INTEGER :: var_is_introduced ;
var bool: aux15623_BOOL:: var_is_introduced ;
var bool: aux15624_BOOL:: var_is_introduced ;
var 2..59: aux15625:: var_is_introduced ;
var bool: aux15626_BOOL:: var_is_introduced ;
var bool: aux15627_BOOL:: var_is_introduced ;
var bool: aux15628_BOOL:: var_is_introduced ;
var {0,1}: aux15628_INTEGER :: var_is_introduced ;
var bool: aux15629_BOOL:: var_is_introduced ;
var bool: aux15630_BOOL:: var_is_introduced ;
var 5..62: aux15631:: var_is_introduced ;
var bool: aux15632_BOOL:: var_is_introduced ;
var bool: aux15633_BOOL:: var_is_introduced ;
var bool: aux15634_BOOL:: var_is_introduced ;
var {0,1}: aux15634_INTEGER :: var_is_introduced ;
var bool: aux15635_BOOL:: var_is_introduced ;
var bool: aux15636_BOOL:: var_is_introduced ;
var 3..60: aux15637:: var_is_introduced ;
var bool: aux15638_BOOL:: var_is_introduced ;
var bool: aux15639_BOOL:: var_is_introduced ;
var bool: aux15640_BOOL:: var_is_introduced ;
var {0,1}: aux15640_INTEGER :: var_is_introduced ;
var bool: aux15641_BOOL:: var_is_introduced ;
var bool: aux15642_BOOL:: var_is_introduced ;
var 4..61: aux15643:: var_is_introduced ;
var bool: aux15644_BOOL:: var_is_introduced ;
var bool: aux15645_BOOL:: var_is_introduced ;
var bool: aux15646_BOOL:: var_is_introduced ;
var {0,1}: aux15646_INTEGER :: var_is_introduced ;
var bool: aux15647_BOOL:: var_is_introduced ;
var bool: aux15648_BOOL:: var_is_introduced ;
var 3..60: aux15649:: var_is_introduced ;
var bool: aux15650_BOOL:: var_is_introduced ;
var bool: aux15651_BOOL:: var_is_introduced ;
var bool: aux15652_BOOL:: var_is_introduced ;
var {0,1}: aux15652_INTEGER :: var_is_introduced ;
var bool: aux15653_BOOL:: var_is_introduced ;
var bool: aux15654_BOOL:: var_is_introduced ;
var 2..59: aux15655:: var_is_introduced ;
var bool: aux15656_BOOL:: var_is_introduced ;
var bool: aux15657_BOOL:: var_is_introduced ;
var bool: aux15658_BOOL:: var_is_introduced ;
var {0,1}: aux15658_INTEGER :: var_is_introduced ;
var bool: aux15659_BOOL:: var_is_introduced ;
var bool: aux15660_BOOL:: var_is_introduced ;
var 1..58: aux15661:: var_is_introduced ;
var bool: aux15662_BOOL:: var_is_introduced ;
var bool: aux15663_BOOL:: var_is_introduced ;
var bool: aux15664_BOOL:: var_is_introduced ;
var {0,1}: aux15664_INTEGER :: var_is_introduced ;
var bool: aux15665_BOOL:: var_is_introduced ;
var bool: aux15666_BOOL:: var_is_introduced ;
var 3..60: aux15667:: var_is_introduced ;
var bool: aux15668_BOOL:: var_is_introduced ;
var bool: aux15669_BOOL:: var_is_introduced ;
var bool: aux15670_BOOL:: var_is_introduced ;
var {0,1}: aux15670_INTEGER :: var_is_introduced ;
var bool: aux15671_BOOL:: var_is_introduced ;
var bool: aux15672_BOOL:: var_is_introduced ;
var 4..61: aux15673:: var_is_introduced ;
var bool: aux15674_BOOL:: var_is_introduced ;
var bool: aux15675_BOOL:: var_is_introduced ;
var bool: aux15676_BOOL:: var_is_introduced ;
var {0,1}: aux15676_INTEGER :: var_is_introduced ;
var bool: aux15677_BOOL:: var_is_introduced ;
var bool: aux15678_BOOL:: var_is_introduced ;
var 1..58: aux15679:: var_is_introduced ;
var bool: aux15680_BOOL:: var_is_introduced ;
var bool: aux15681_BOOL:: var_is_introduced ;
var bool: aux15682_BOOL:: var_is_introduced ;
var {0,1}: aux15682_INTEGER :: var_is_introduced ;
var bool: aux15683_BOOL:: var_is_introduced ;
var bool: aux15684_BOOL:: var_is_introduced ;
var 4..61: aux15685:: var_is_introduced ;
var bool: aux15686_BOOL:: var_is_introduced ;
var bool: aux15687_BOOL:: var_is_introduced ;
var bool: aux15688_BOOL:: var_is_introduced ;
var {0,1}: aux15688_INTEGER :: var_is_introduced ;
var bool: aux15689_BOOL:: var_is_introduced ;
var bool: aux15690_BOOL:: var_is_introduced ;
var 2..59: aux15691:: var_is_introduced ;
var bool: aux15692_BOOL:: var_is_introduced ;
var bool: aux15693_BOOL:: var_is_introduced ;
var bool: aux15694_BOOL:: var_is_introduced ;
var {0,1}: aux15694_INTEGER :: var_is_introduced ;
var bool: aux15695_BOOL:: var_is_introduced ;
var 3..60: aux15696:: var_is_introduced ;
var bool: aux15697_BOOL:: var_is_introduced ;
var bool: aux15698_BOOL:: var_is_introduced ;
var {0,1}: aux15698_INTEGER :: var_is_introduced ;
var bool: aux15699_BOOL:: var_is_introduced ;
var bool: aux15700_BOOL:: var_is_introduced ;
var bool: aux15701_BOOL:: var_is_introduced ;
var 4..61: aux15702:: var_is_introduced ;
var bool: aux15703_BOOL:: var_is_introduced ;
var bool: aux15704_BOOL:: var_is_introduced ;
var bool: aux15705_BOOL:: var_is_introduced ;
var {0,1}: aux15705_INTEGER :: var_is_introduced ;
var bool: aux15706_BOOL:: var_is_introduced ;
var bool: aux15707_BOOL:: var_is_introduced ;
var 4..61: aux15708:: var_is_introduced ;
var bool: aux15709_BOOL:: var_is_introduced ;
var bool: aux15710_BOOL:: var_is_introduced ;
var bool: aux15711_BOOL:: var_is_introduced ;
var {0,1}: aux15711_INTEGER :: var_is_introduced ;
var bool: aux15712_BOOL:: var_is_introduced ;
var bool: aux15713_BOOL:: var_is_introduced ;
var 3..60: aux15714:: var_is_introduced ;
var bool: aux15715_BOOL:: var_is_introduced ;
var bool: aux15716_BOOL:: var_is_introduced ;
var bool: aux15717_BOOL:: var_is_introduced ;
var {0,1}: aux15717_INTEGER :: var_is_introduced ;
var bool: aux15718_BOOL:: var_is_introduced ;
var bool: aux15719_BOOL:: var_is_introduced ;
var 2..59: aux15720:: var_is_introduced ;
var bool: aux15721_BOOL:: var_is_introduced ;
var bool: aux15722_BOOL:: var_is_introduced ;
var bool: aux15723_BOOL:: var_is_introduced ;
var {0,1}: aux15723_INTEGER :: var_is_introduced ;
var bool: aux15724_BOOL:: var_is_introduced ;
var bool: aux15725_BOOL:: var_is_introduced ;
var 3..60: aux15726:: var_is_introduced ;
var bool: aux15727_BOOL:: var_is_introduced ;
var bool: aux15728_BOOL:: var_is_introduced ;
var bool: aux15729_BOOL:: var_is_introduced ;
var {0,1}: aux15729_INTEGER :: var_is_introduced ;
var bool: aux15730_BOOL:: var_is_introduced ;
var bool: aux15731_BOOL:: var_is_introduced ;
var 2..59: aux15732:: var_is_introduced ;
var bool: aux15733_BOOL:: var_is_introduced ;
var bool: aux15734_BOOL:: var_is_introduced ;
var bool: aux15735_BOOL:: var_is_introduced ;
var {0,1}: aux15735_INTEGER :: var_is_introduced ;
var bool: aux15736_BOOL:: var_is_introduced ;
var bool: aux15737_BOOL:: var_is_introduced ;
var 3..60: aux15738:: var_is_introduced ;
var bool: aux15739_BOOL:: var_is_introduced ;
var bool: aux15740_BOOL:: var_is_introduced ;
var bool: aux15741_BOOL:: var_is_introduced ;
var {0,1}: aux15741_INTEGER :: var_is_introduced ;
var bool: aux15742_BOOL:: var_is_introduced ;
var bool: aux15743_BOOL:: var_is_introduced ;
var 2..59: aux15744:: var_is_introduced ;
var bool: aux15745_BOOL:: var_is_introduced ;
var bool: aux15746_BOOL:: var_is_introduced ;
var bool: aux15747_BOOL:: var_is_introduced ;
var {0,1}: aux15747_INTEGER :: var_is_introduced ;
var bool: aux15748_BOOL:: var_is_introduced ;
var bool: aux15749_BOOL:: var_is_introduced ;
var 2..59: aux15750:: var_is_introduced ;
var bool: aux15751_BOOL:: var_is_introduced ;
var bool: aux15752_BOOL:: var_is_introduced ;
var bool: aux15753_BOOL:: var_is_introduced ;
var {0,1}: aux15753_INTEGER :: var_is_introduced ;
var bool: aux15754_BOOL:: var_is_introduced ;
var bool: aux15755_BOOL:: var_is_introduced ;
var 5..62: aux15756:: var_is_introduced ;
var bool: aux15757_BOOL:: var_is_introduced ;
var bool: aux15758_BOOL:: var_is_introduced ;
var bool: aux15759_BOOL:: var_is_introduced ;
var {0,1}: aux15759_INTEGER :: var_is_introduced ;
var bool: aux15760_BOOL:: var_is_introduced ;
var bool: aux15761_BOOL:: var_is_introduced ;
var 4..61: aux15762:: var_is_introduced ;
var bool: aux15763_BOOL:: var_is_introduced ;
var bool: aux15764_BOOL:: var_is_introduced ;
var bool: aux15765_BOOL:: var_is_introduced ;
var {0,1}: aux15765_INTEGER :: var_is_introduced ;
var bool: aux15766_BOOL:: var_is_introduced ;
var bool: aux15767_BOOL:: var_is_introduced ;
var 3..60: aux15768:: var_is_introduced ;
var bool: aux15769_BOOL:: var_is_introduced ;
var bool: aux15770_BOOL:: var_is_introduced ;
var bool: aux15771_BOOL:: var_is_introduced ;
var {0,1}: aux15771_INTEGER :: var_is_introduced ;
var bool: aux15772_BOOL:: var_is_introduced ;
var bool: aux15773_BOOL:: var_is_introduced ;
var 2..59: aux15774:: var_is_introduced ;
var bool: aux15775_BOOL:: var_is_introduced ;
var bool: aux15776_BOOL:: var_is_introduced ;
var bool: aux15777_BOOL:: var_is_introduced ;
var {0,1}: aux15777_INTEGER :: var_is_introduced ;
var bool: aux15778_BOOL:: var_is_introduced ;
var bool: aux15779_BOOL:: var_is_introduced ;
var 1..58: aux15780:: var_is_introduced ;
var bool: aux15781_BOOL:: var_is_introduced ;
var bool: aux15782_BOOL:: var_is_introduced ;
var bool: aux15783_BOOL:: var_is_introduced ;
var {0,1}: aux15783_INTEGER :: var_is_introduced ;
var bool: aux15784_BOOL:: var_is_introduced ;
var bool: aux15785_BOOL:: var_is_introduced ;
var 3..60: aux15786:: var_is_introduced ;
var bool: aux15787_BOOL:: var_is_introduced ;
var bool: aux15788_BOOL:: var_is_introduced ;
var bool: aux15789_BOOL:: var_is_introduced ;
var {0,1}: aux15789_INTEGER :: var_is_introduced ;
var bool: aux15790_BOOL:: var_is_introduced ;
var bool: aux15791_BOOL:: var_is_introduced ;
var 4..61: aux15792:: var_is_introduced ;
var bool: aux15793_BOOL:: var_is_introduced ;
var bool: aux15794_BOOL:: var_is_introduced ;
var bool: aux15795_BOOL:: var_is_introduced ;
var {0,1}: aux15795_INTEGER :: var_is_introduced ;
var bool: aux15796_BOOL:: var_is_introduced ;
var bool: aux15797_BOOL:: var_is_introduced ;
var 1..58: aux15798:: var_is_introduced ;
var bool: aux15799_BOOL:: var_is_introduced ;
var bool: aux15800_BOOL:: var_is_introduced ;
var bool: aux15801_BOOL:: var_is_introduced ;
var {0,1}: aux15801_INTEGER :: var_is_introduced ;
var bool: aux15802_BOOL:: var_is_introduced ;
var bool: aux15803_BOOL:: var_is_introduced ;
var 4..61: aux15804:: var_is_introduced ;
var bool: aux15805_BOOL:: var_is_introduced ;
var bool: aux15806_BOOL:: var_is_introduced ;
var bool: aux15807_BOOL:: var_is_introduced ;
var {0,1}: aux15807_INTEGER :: var_is_introduced ;
var bool: aux15808_BOOL:: var_is_introduced ;
var bool: aux15809_BOOL:: var_is_introduced ;
var 2..59: aux15810:: var_is_introduced ;
var bool: aux15811_BOOL:: var_is_introduced ;
var bool: aux15812_BOOL:: var_is_introduced ;
var bool: aux15813_BOOL:: var_is_introduced ;
var {0,1}: aux15813_INTEGER :: var_is_introduced ;
var bool: aux15814_BOOL:: var_is_introduced ;
var 3..60: aux15815:: var_is_introduced ;
var bool: aux15816_BOOL:: var_is_introduced ;
var bool: aux15817_BOOL:: var_is_introduced ;
var {0,1}: aux15817_INTEGER :: var_is_introduced ;
var bool: aux15818_BOOL:: var_is_introduced ;
var bool: aux15819_BOOL:: var_is_introduced ;
var bool: aux15820_BOOL:: var_is_introduced ;
var 4..61: aux15821:: var_is_introduced ;
var bool: aux15822_BOOL:: var_is_introduced ;
var bool: aux15823_BOOL:: var_is_introduced ;
var bool: aux15824_BOOL:: var_is_introduced ;
var {0,1}: aux15824_INTEGER :: var_is_introduced ;
var bool: aux15825_BOOL:: var_is_introduced ;
var bool: aux15826_BOOL:: var_is_introduced ;
var 4..61: aux15827:: var_is_introduced ;
var bool: aux15828_BOOL:: var_is_introduced ;
var bool: aux15829_BOOL:: var_is_introduced ;
var bool: aux15830_BOOL:: var_is_introduced ;
var {0,1}: aux15830_INTEGER :: var_is_introduced ;
var bool: aux15831_BOOL:: var_is_introduced ;
var bool: aux15832_BOOL:: var_is_introduced ;
var 3..60: aux15833:: var_is_introduced ;
var bool: aux15834_BOOL:: var_is_introduced ;
var bool: aux15835_BOOL:: var_is_introduced ;
var bool: aux15836_BOOL:: var_is_introduced ;
var {0,1}: aux15836_INTEGER :: var_is_introduced ;
var bool: aux15837_BOOL:: var_is_introduced ;
var bool: aux15838_BOOL:: var_is_introduced ;
var 2..59: aux15839:: var_is_introduced ;
var bool: aux15840_BOOL:: var_is_introduced ;
var bool: aux15841_BOOL:: var_is_introduced ;
var bool: aux15842_BOOL:: var_is_introduced ;
var {0,1}: aux15842_INTEGER :: var_is_introduced ;
var bool: aux15843_BOOL:: var_is_introduced ;
var bool: aux15844_BOOL:: var_is_introduced ;
var 3..60: aux15845:: var_is_introduced ;
var bool: aux15846_BOOL:: var_is_introduced ;
var bool: aux15847_BOOL:: var_is_introduced ;
var bool: aux15848_BOOL:: var_is_introduced ;
var {0,1}: aux15848_INTEGER :: var_is_introduced ;
var bool: aux15849_BOOL:: var_is_introduced ;
var bool: aux15850_BOOL:: var_is_introduced ;
var 2..59: aux15851:: var_is_introduced ;
var bool: aux15852_BOOL:: var_is_introduced ;
var bool: aux15853_BOOL:: var_is_introduced ;
var bool: aux15854_BOOL:: var_is_introduced ;
var {0,1}: aux15854_INTEGER :: var_is_introduced ;
var bool: aux15855_BOOL:: var_is_introduced ;
var bool: aux15856_BOOL:: var_is_introduced ;
var 3..60: aux15857:: var_is_introduced ;
var bool: aux15858_BOOL:: var_is_introduced ;
var bool: aux15859_BOOL:: var_is_introduced ;
var bool: aux15860_BOOL:: var_is_introduced ;
var {0,1}: aux15860_INTEGER :: var_is_introduced ;
var bool: aux15861_BOOL:: var_is_introduced ;
var bool: aux15862_BOOL:: var_is_introduced ;
var 2..59: aux15863:: var_is_introduced ;
var bool: aux15864_BOOL:: var_is_introduced ;
var bool: aux15865_BOOL:: var_is_introduced ;
var bool: aux15866_BOOL:: var_is_introduced ;
var {0,1}: aux15866_INTEGER :: var_is_introduced ;
var bool: aux15867_BOOL:: var_is_introduced ;
var bool: aux15868_BOOL:: var_is_introduced ;
var 2..59: aux15869:: var_is_introduced ;
var bool: aux15870_BOOL:: var_is_introduced ;
var bool: aux15871_BOOL:: var_is_introduced ;
var bool: aux15872_BOOL:: var_is_introduced ;
var {0,1}: aux15872_INTEGER :: var_is_introduced ;
var bool: aux15873_BOOL:: var_is_introduced ;
var bool: aux15874_BOOL:: var_is_introduced ;
var 5..62: aux15875:: var_is_introduced ;
var bool: aux15876_BOOL:: var_is_introduced ;
var bool: aux15877_BOOL:: var_is_introduced ;
var bool: aux15878_BOOL:: var_is_introduced ;
var {0,1}: aux15878_INTEGER :: var_is_introduced ;
var bool: aux15879_BOOL:: var_is_introduced ;
var bool: aux15880_BOOL:: var_is_introduced ;
var 3..60: aux15881:: var_is_introduced ;
var bool: aux15882_BOOL:: var_is_introduced ;
var bool: aux15883_BOOL:: var_is_introduced ;
var bool: aux15884_BOOL:: var_is_introduced ;
var {0,1}: aux15884_INTEGER :: var_is_introduced ;
var bool: aux15885_BOOL:: var_is_introduced ;
var bool: aux15886_BOOL:: var_is_introduced ;
var 4..61: aux15887:: var_is_introduced ;
var bool: aux15888_BOOL:: var_is_introduced ;
var bool: aux15889_BOOL:: var_is_introduced ;
var bool: aux15890_BOOL:: var_is_introduced ;
var {0,1}: aux15890_INTEGER :: var_is_introduced ;
var bool: aux15891_BOOL:: var_is_introduced ;
var bool: aux15892_BOOL:: var_is_introduced ;
var 3..60: aux15893:: var_is_introduced ;
var bool: aux15894_BOOL:: var_is_introduced ;
var bool: aux15895_BOOL:: var_is_introduced ;
var bool: aux15896_BOOL:: var_is_introduced ;
var {0,1}: aux15896_INTEGER :: var_is_introduced ;
var bool: aux15897_BOOL:: var_is_introduced ;
var bool: aux15898_BOOL:: var_is_introduced ;
var 2..59: aux15899:: var_is_introduced ;
var bool: aux15900_BOOL:: var_is_introduced ;
var bool: aux15901_BOOL:: var_is_introduced ;
var bool: aux15902_BOOL:: var_is_introduced ;
var {0,1}: aux15902_INTEGER :: var_is_introduced ;
var bool: aux15903_BOOL:: var_is_introduced ;
var bool: aux15904_BOOL:: var_is_introduced ;
var 1..58: aux15905:: var_is_introduced ;
var bool: aux15906_BOOL:: var_is_introduced ;
var bool: aux15907_BOOL:: var_is_introduced ;
var bool: aux15908_BOOL:: var_is_introduced ;
var {0,1}: aux15908_INTEGER :: var_is_introduced ;
var bool: aux15909_BOOL:: var_is_introduced ;
var bool: aux15910_BOOL:: var_is_introduced ;
var 3..60: aux15911:: var_is_introduced ;
var bool: aux15912_BOOL:: var_is_introduced ;
var bool: aux15913_BOOL:: var_is_introduced ;
var bool: aux15914_BOOL:: var_is_introduced ;
var {0,1}: aux15914_INTEGER :: var_is_introduced ;
var bool: aux15915_BOOL:: var_is_introduced ;
var bool: aux15916_BOOL:: var_is_introduced ;
var 4..61: aux15917:: var_is_introduced ;
var bool: aux15918_BOOL:: var_is_introduced ;
var bool: aux15919_BOOL:: var_is_introduced ;
var bool: aux15920_BOOL:: var_is_introduced ;
var {0,1}: aux15920_INTEGER :: var_is_introduced ;
var bool: aux15921_BOOL:: var_is_introduced ;
var bool: aux15922_BOOL:: var_is_introduced ;
var 1..58: aux15923:: var_is_introduced ;
var bool: aux15924_BOOL:: var_is_introduced ;
var bool: aux15925_BOOL:: var_is_introduced ;
var bool: aux15926_BOOL:: var_is_introduced ;
var {0,1}: aux15926_INTEGER :: var_is_introduced ;
var bool: aux15927_BOOL:: var_is_introduced ;
var bool: aux15928_BOOL:: var_is_introduced ;
var 2..59: aux15929:: var_is_introduced ;
var bool: aux15930_BOOL:: var_is_introduced ;
var bool: aux15931_BOOL:: var_is_introduced ;
var bool: aux15932_BOOL:: var_is_introduced ;
var {0,1}: aux15932_INTEGER :: var_is_introduced ;
var bool: aux15933_BOOL:: var_is_introduced ;
var 4..61: aux15934:: var_is_introduced ;
var bool: aux15935_BOOL:: var_is_introduced ;
var bool: aux15936_BOOL:: var_is_introduced ;
var {0,1}: aux15936_INTEGER :: var_is_introduced ;
var bool: aux15937_BOOL:: var_is_introduced ;
var bool: aux15938_BOOL:: var_is_introduced ;
var bool: aux15939_BOOL:: var_is_introduced ;
var 4..61: aux15940:: var_is_introduced ;
var bool: aux15941_BOOL:: var_is_introduced ;
var bool: aux15942_BOOL:: var_is_introduced ;
var bool: aux15943_BOOL:: var_is_introduced ;
var {0,1}: aux15943_INTEGER :: var_is_introduced ;
var bool: aux15944_BOOL:: var_is_introduced ;
var bool: aux15945_BOOL:: var_is_introduced ;
var 4..61: aux15946:: var_is_introduced ;
var bool: aux15947_BOOL:: var_is_introduced ;
var bool: aux15948_BOOL:: var_is_introduced ;
var bool: aux15949_BOOL:: var_is_introduced ;
var {0,1}: aux15949_INTEGER :: var_is_introduced ;
var bool: aux15950_BOOL:: var_is_introduced ;
var bool: aux15951_BOOL:: var_is_introduced ;
var 3..60: aux15952:: var_is_introduced ;
var bool: aux15953_BOOL:: var_is_introduced ;
var bool: aux15954_BOOL:: var_is_introduced ;
var bool: aux15955_BOOL:: var_is_introduced ;
var {0,1}: aux15955_INTEGER :: var_is_introduced ;
var bool: aux15956_BOOL:: var_is_introduced ;
var bool: aux15957_BOOL:: var_is_introduced ;
var 2..59: aux15958:: var_is_introduced ;
var bool: aux15959_BOOL:: var_is_introduced ;
var bool: aux15960_BOOL:: var_is_introduced ;
var bool: aux15961_BOOL:: var_is_introduced ;
var {0,1}: aux15961_INTEGER :: var_is_introduced ;
var bool: aux15962_BOOL:: var_is_introduced ;
var bool: aux15963_BOOL:: var_is_introduced ;
var 3..60: aux15964:: var_is_introduced ;
var bool: aux15965_BOOL:: var_is_introduced ;
var bool: aux15966_BOOL:: var_is_introduced ;
var bool: aux15967_BOOL:: var_is_introduced ;
var {0,1}: aux15967_INTEGER :: var_is_introduced ;
var bool: aux15968_BOOL:: var_is_introduced ;
var bool: aux15969_BOOL:: var_is_introduced ;
var 2..59: aux15970:: var_is_introduced ;
var bool: aux15971_BOOL:: var_is_introduced ;
var bool: aux15972_BOOL:: var_is_introduced ;
var bool: aux15973_BOOL:: var_is_introduced ;
var {0,1}: aux15973_INTEGER :: var_is_introduced ;
var bool: aux15974_BOOL:: var_is_introduced ;
var bool: aux15975_BOOL:: var_is_introduced ;
var 3..60: aux15976:: var_is_introduced ;
var bool: aux15977_BOOL:: var_is_introduced ;
var bool: aux15978_BOOL:: var_is_introduced ;
var bool: aux15979_BOOL:: var_is_introduced ;
var {0,1}: aux15979_INTEGER :: var_is_introduced ;
var bool: aux15980_BOOL:: var_is_introduced ;
var bool: aux15981_BOOL:: var_is_introduced ;
var 2..59: aux15982:: var_is_introduced ;
var bool: aux15983_BOOL:: var_is_introduced ;
var bool: aux15984_BOOL:: var_is_introduced ;
var bool: aux15985_BOOL:: var_is_introduced ;
var {0,1}: aux15985_INTEGER :: var_is_introduced ;
var bool: aux15986_BOOL:: var_is_introduced ;
var bool: aux15987_BOOL:: var_is_introduced ;
var 2..59: aux15988:: var_is_introduced ;
var bool: aux15989_BOOL:: var_is_introduced ;
var bool: aux15990_BOOL:: var_is_introduced ;
var bool: aux15991_BOOL:: var_is_introduced ;
var {0,1}: aux15991_INTEGER :: var_is_introduced ;
var bool: aux15992_BOOL:: var_is_introduced ;
var bool: aux15993_BOOL:: var_is_introduced ;
var 5..62: aux15994:: var_is_introduced ;
var bool: aux15995_BOOL:: var_is_introduced ;
var bool: aux15996_BOOL:: var_is_introduced ;
var bool: aux15997_BOOL:: var_is_introduced ;
var {0,1}: aux15997_INTEGER :: var_is_introduced ;
var bool: aux15998_BOOL:: var_is_introduced ;
var bool: aux15999_BOOL:: var_is_introduced ;
var 3..60: aux16000:: var_is_introduced ;
var bool: aux16001_BOOL:: var_is_introduced ;
var bool: aux16002_BOOL:: var_is_introduced ;
var bool: aux16003_BOOL:: var_is_introduced ;
var {0,1}: aux16003_INTEGER :: var_is_introduced ;
var bool: aux16004_BOOL:: var_is_introduced ;
var bool: aux16005_BOOL:: var_is_introduced ;
var 4..61: aux16006:: var_is_introduced ;
var bool: aux16007_BOOL:: var_is_introduced ;
var bool: aux16008_BOOL:: var_is_introduced ;
var bool: aux16009_BOOL:: var_is_introduced ;
var {0,1}: aux16009_INTEGER :: var_is_introduced ;
var bool: aux16010_BOOL:: var_is_introduced ;
var bool: aux16011_BOOL:: var_is_introduced ;
var 3..60: aux16012:: var_is_introduced ;
var bool: aux16013_BOOL:: var_is_introduced ;
var bool: aux16014_BOOL:: var_is_introduced ;
var bool: aux16015_BOOL:: var_is_introduced ;
var {0,1}: aux16015_INTEGER :: var_is_introduced ;
var bool: aux16016_BOOL:: var_is_introduced ;
var bool: aux16017_BOOL:: var_is_introduced ;
var 1..58: aux16018:: var_is_introduced ;
var bool: aux16019_BOOL:: var_is_introduced ;
var bool: aux16020_BOOL:: var_is_introduced ;
var bool: aux16021_BOOL:: var_is_introduced ;
var {0,1}: aux16021_INTEGER :: var_is_introduced ;
var bool: aux16022_BOOL:: var_is_introduced ;
var bool: aux16023_BOOL:: var_is_introduced ;
var 3..60: aux16024:: var_is_introduced ;
var bool: aux16025_BOOL:: var_is_introduced ;
var bool: aux16026_BOOL:: var_is_introduced ;
var bool: aux16027_BOOL:: var_is_introduced ;
var {0,1}: aux16027_INTEGER :: var_is_introduced ;
var bool: aux16028_BOOL:: var_is_introduced ;
var bool: aux16029_BOOL:: var_is_introduced ;
var 4..61: aux16030:: var_is_introduced ;
var bool: aux16031_BOOL:: var_is_introduced ;
var bool: aux16032_BOOL:: var_is_introduced ;
var bool: aux16033_BOOL:: var_is_introduced ;
var {0,1}: aux16033_INTEGER :: var_is_introduced ;
var bool: aux16034_BOOL:: var_is_introduced ;
var bool: aux16035_BOOL:: var_is_introduced ;
var 1..58: aux16036:: var_is_introduced ;
var bool: aux16037_BOOL:: var_is_introduced ;
var bool: aux16038_BOOL:: var_is_introduced ;
var bool: aux16039_BOOL:: var_is_introduced ;
var {0,1}: aux16039_INTEGER :: var_is_introduced ;
var bool: aux16040_BOOL:: var_is_introduced ;
var bool: aux16041_BOOL:: var_is_introduced ;
var 4..61: aux16042:: var_is_introduced ;
var bool: aux16043_BOOL:: var_is_introduced ;
var bool: aux16044_BOOL:: var_is_introduced ;
var bool: aux16045_BOOL:: var_is_introduced ;
var {0,1}: aux16045_INTEGER :: var_is_introduced ;
var bool: aux16046_BOOL:: var_is_introduced ;
var bool: aux16047_BOOL:: var_is_introduced ;
var 2..59: aux16048:: var_is_introduced ;
var bool: aux16049_BOOL:: var_is_introduced ;
var bool: aux16050_BOOL:: var_is_introduced ;
var bool: aux16051_BOOL:: var_is_introduced ;
var {0,1}: aux16051_INTEGER :: var_is_introduced ;
var bool: aux16052_BOOL:: var_is_introduced ;
var 2..59: aux16053:: var_is_introduced ;
var bool: aux16054_BOOL:: var_is_introduced ;
var bool: aux16055_BOOL:: var_is_introduced ;
var {0,1}: aux16055_INTEGER :: var_is_introduced ;
var bool: aux16056_BOOL:: var_is_introduced ;
var bool: aux16057_BOOL:: var_is_introduced ;
var bool: aux16058_BOOL:: var_is_introduced ;
var 4..61: aux16059:: var_is_introduced ;
var bool: aux16060_BOOL:: var_is_introduced ;
var bool: aux16061_BOOL:: var_is_introduced ;
var bool: aux16062_BOOL:: var_is_introduced ;
var {0,1}: aux16062_INTEGER :: var_is_introduced ;
var bool: aux16063_BOOL:: var_is_introduced ;
var bool: aux16064_BOOL:: var_is_introduced ;
var 4..61: aux16065:: var_is_introduced ;
var bool: aux16066_BOOL:: var_is_introduced ;
var bool: aux16067_BOOL:: var_is_introduced ;
var bool: aux16068_BOOL:: var_is_introduced ;
var {0,1}: aux16068_INTEGER :: var_is_introduced ;
var bool: aux16069_BOOL:: var_is_introduced ;
var bool: aux16070_BOOL:: var_is_introduced ;
var 3..60: aux16071:: var_is_introduced ;
var bool: aux16072_BOOL:: var_is_introduced ;
var bool: aux16073_BOOL:: var_is_introduced ;
var bool: aux16074_BOOL:: var_is_introduced ;
var {0,1}: aux16074_INTEGER :: var_is_introduced ;
var bool: aux16075_BOOL:: var_is_introduced ;
var bool: aux16076_BOOL:: var_is_introduced ;
var 2..59: aux16077:: var_is_introduced ;
var bool: aux16078_BOOL:: var_is_introduced ;
var bool: aux16079_BOOL:: var_is_introduced ;
var bool: aux16080_BOOL:: var_is_introduced ;
var {0,1}: aux16080_INTEGER :: var_is_introduced ;
var bool: aux16081_BOOL:: var_is_introduced ;
var bool: aux16082_BOOL:: var_is_introduced ;
var 3..60: aux16083:: var_is_introduced ;
var bool: aux16084_BOOL:: var_is_introduced ;
var bool: aux16085_BOOL:: var_is_introduced ;
var bool: aux16086_BOOL:: var_is_introduced ;
var {0,1}: aux16086_INTEGER :: var_is_introduced ;
var bool: aux16087_BOOL:: var_is_introduced ;
var bool: aux16088_BOOL:: var_is_introduced ;
var 2..59: aux16089:: var_is_introduced ;
var bool: aux16090_BOOL:: var_is_introduced ;
var bool: aux16091_BOOL:: var_is_introduced ;
var bool: aux16092_BOOL:: var_is_introduced ;
var {0,1}: aux16092_INTEGER :: var_is_introduced ;
var bool: aux16093_BOOL:: var_is_introduced ;
var bool: aux16094_BOOL:: var_is_introduced ;
var 3..60: aux16095:: var_is_introduced ;
var bool: aux16096_BOOL:: var_is_introduced ;
var bool: aux16097_BOOL:: var_is_introduced ;
var bool: aux16098_BOOL:: var_is_introduced ;
var {0,1}: aux16098_INTEGER :: var_is_introduced ;
var bool: aux16099_BOOL:: var_is_introduced ;
var bool: aux16100_BOOL:: var_is_introduced ;
var 2..59: aux16101:: var_is_introduced ;
var bool: aux16102_BOOL:: var_is_introduced ;
var bool: aux16103_BOOL:: var_is_introduced ;
var bool: aux16104_BOOL:: var_is_introduced ;
var {0,1}: aux16104_INTEGER :: var_is_introduced ;
var bool: aux16105_BOOL:: var_is_introduced ;
var bool: aux16106_BOOL:: var_is_introduced ;
var 2..59: aux16107:: var_is_introduced ;
var bool: aux16108_BOOL:: var_is_introduced ;
var bool: aux16109_BOOL:: var_is_introduced ;
var bool: aux16110_BOOL:: var_is_introduced ;
var {0,1}: aux16110_INTEGER :: var_is_introduced ;
var bool: aux16111_BOOL:: var_is_introduced ;
var bool: aux16112_BOOL:: var_is_introduced ;
var 5..62: aux16113:: var_is_introduced ;
var bool: aux16114_BOOL:: var_is_introduced ;
var bool: aux16115_BOOL:: var_is_introduced ;
var bool: aux16116_BOOL:: var_is_introduced ;
var {0,1}: aux16116_INTEGER :: var_is_introduced ;
var bool: aux16117_BOOL:: var_is_introduced ;
var bool: aux16118_BOOL:: var_is_introduced ;
var 3..60: aux16119:: var_is_introduced ;
var bool: aux16120_BOOL:: var_is_introduced ;
var bool: aux16121_BOOL:: var_is_introduced ;
var bool: aux16122_BOOL:: var_is_introduced ;
var {0,1}: aux16122_INTEGER :: var_is_introduced ;
var bool: aux16123_BOOL:: var_is_introduced ;
var bool: aux16124_BOOL:: var_is_introduced ;
var 3..60: aux16125:: var_is_introduced ;
var bool: aux16126_BOOL:: var_is_introduced ;
var bool: aux16127_BOOL:: var_is_introduced ;
var bool: aux16128_BOOL:: var_is_introduced ;
var {0,1}: aux16128_INTEGER :: var_is_introduced ;
var bool: aux16129_BOOL:: var_is_introduced ;
var bool: aux16130_BOOL:: var_is_introduced ;
var 2..59: aux16131:: var_is_introduced ;
var bool: aux16132_BOOL:: var_is_introduced ;
var bool: aux16133_BOOL:: var_is_introduced ;
var bool: aux16134_BOOL:: var_is_introduced ;
var {0,1}: aux16134_INTEGER :: var_is_introduced ;
var bool: aux16135_BOOL:: var_is_introduced ;
var bool: aux16136_BOOL:: var_is_introduced ;
var 1..58: aux16137:: var_is_introduced ;
var bool: aux16138_BOOL:: var_is_introduced ;
var bool: aux16139_BOOL:: var_is_introduced ;
var bool: aux16140_BOOL:: var_is_introduced ;
var {0,1}: aux16140_INTEGER :: var_is_introduced ;
var bool: aux16141_BOOL:: var_is_introduced ;
var bool: aux16142_BOOL:: var_is_introduced ;
var 3..60: aux16143:: var_is_introduced ;
var bool: aux16144_BOOL:: var_is_introduced ;
var bool: aux16145_BOOL:: var_is_introduced ;
var bool: aux16146_BOOL:: var_is_introduced ;
var {0,1}: aux16146_INTEGER :: var_is_introduced ;
var bool: aux16147_BOOL:: var_is_introduced ;
var bool: aux16148_BOOL:: var_is_introduced ;
var 4..61: aux16149:: var_is_introduced ;
var bool: aux16150_BOOL:: var_is_introduced ;
var bool: aux16151_BOOL:: var_is_introduced ;
var bool: aux16152_BOOL:: var_is_introduced ;
var {0,1}: aux16152_INTEGER :: var_is_introduced ;
var bool: aux16153_BOOL:: var_is_introduced ;
var bool: aux16154_BOOL:: var_is_introduced ;
var 1..58: aux16155:: var_is_introduced ;
var bool: aux16156_BOOL:: var_is_introduced ;
var bool: aux16157_BOOL:: var_is_introduced ;
var bool: aux16158_BOOL:: var_is_introduced ;
var {0,1}: aux16158_INTEGER :: var_is_introduced ;
var bool: aux16159_BOOL:: var_is_introduced ;
var bool: aux16160_BOOL:: var_is_introduced ;
var 4..61: aux16161:: var_is_introduced ;
var bool: aux16162_BOOL:: var_is_introduced ;
var bool: aux16163_BOOL:: var_is_introduced ;
var bool: aux16164_BOOL:: var_is_introduced ;
var {0,1}: aux16164_INTEGER :: var_is_introduced ;
var bool: aux16165_BOOL:: var_is_introduced ;
var bool: aux16166_BOOL:: var_is_introduced ;
var 2..59: aux16167:: var_is_introduced ;
var bool: aux16168_BOOL:: var_is_introduced ;
var bool: aux16169_BOOL:: var_is_introduced ;
var bool: aux16170_BOOL:: var_is_introduced ;
var {0,1}: aux16170_INTEGER :: var_is_introduced ;
var bool: aux16171_BOOL:: var_is_introduced ;
var 4..61: aux16172:: var_is_introduced ;
var bool: aux16173_BOOL:: var_is_introduced ;
var bool: aux16174_BOOL:: var_is_introduced ;
var {0,1}: aux16174_INTEGER :: var_is_introduced ;
var bool: aux16175_BOOL:: var_is_introduced ;
var bool: aux16176_BOOL:: var_is_introduced ;
var bool: aux16177_BOOL:: var_is_introduced ;
var 4..61: aux16178:: var_is_introduced ;
var bool: aux16179_BOOL:: var_is_introduced ;
var bool: aux16180_BOOL:: var_is_introduced ;
var bool: aux16181_BOOL:: var_is_introduced ;
var {0,1}: aux16181_INTEGER :: var_is_introduced ;
var bool: aux16182_BOOL:: var_is_introduced ;
var bool: aux16183_BOOL:: var_is_introduced ;
var 4..61: aux16184:: var_is_introduced ;
var bool: aux16185_BOOL:: var_is_introduced ;
var bool: aux16186_BOOL:: var_is_introduced ;
var bool: aux16187_BOOL:: var_is_introduced ;
var {0,1}: aux16187_INTEGER :: var_is_introduced ;
var bool: aux16188_BOOL:: var_is_introduced ;
var bool: aux16189_BOOL:: var_is_introduced ;
var 3..60: aux16190:: var_is_introduced ;
var bool: aux16191_BOOL:: var_is_introduced ;
var bool: aux16192_BOOL:: var_is_introduced ;
var bool: aux16193_BOOL:: var_is_introduced ;
var {0,1}: aux16193_INTEGER :: var_is_introduced ;
var bool: aux16194_BOOL:: var_is_introduced ;
var bool: aux16195_BOOL:: var_is_introduced ;
var 2..59: aux16196:: var_is_introduced ;
var bool: aux16197_BOOL:: var_is_introduced ;
var bool: aux16198_BOOL:: var_is_introduced ;
var bool: aux16199_BOOL:: var_is_introduced ;
var {0,1}: aux16199_INTEGER :: var_is_introduced ;
var bool: aux16200_BOOL:: var_is_introduced ;
var bool: aux16201_BOOL:: var_is_introduced ;
var 3..60: aux16202:: var_is_introduced ;
var bool: aux16203_BOOL:: var_is_introduced ;
var bool: aux16204_BOOL:: var_is_introduced ;
var bool: aux16205_BOOL:: var_is_introduced ;
var {0,1}: aux16205_INTEGER :: var_is_introduced ;
var bool: aux16206_BOOL:: var_is_introduced ;
var bool: aux16207_BOOL:: var_is_introduced ;
var 2..59: aux16208:: var_is_introduced ;
var bool: aux16209_BOOL:: var_is_introduced ;
var bool: aux16210_BOOL:: var_is_introduced ;
var bool: aux16211_BOOL:: var_is_introduced ;
var {0,1}: aux16211_INTEGER :: var_is_introduced ;
var bool: aux16212_BOOL:: var_is_introduced ;
var bool: aux16213_BOOL:: var_is_introduced ;
var 3..60: aux16214:: var_is_introduced ;
var bool: aux16215_BOOL:: var_is_introduced ;
var bool: aux16216_BOOL:: var_is_introduced ;
var bool: aux16217_BOOL:: var_is_introduced ;
var {0,1}: aux16217_INTEGER :: var_is_introduced ;
var bool: aux16218_BOOL:: var_is_introduced ;
var bool: aux16219_BOOL:: var_is_introduced ;
var 2..59: aux16220:: var_is_introduced ;
var bool: aux16221_BOOL:: var_is_introduced ;
var bool: aux16222_BOOL:: var_is_introduced ;
var bool: aux16223_BOOL:: var_is_introduced ;
var {0,1}: aux16223_INTEGER :: var_is_introduced ;
var bool: aux16224_BOOL:: var_is_introduced ;
var bool: aux16225_BOOL:: var_is_introduced ;
var 5..62: aux16226:: var_is_introduced ;
var bool: aux16227_BOOL:: var_is_introduced ;
var bool: aux16228_BOOL:: var_is_introduced ;
var bool: aux16229_BOOL:: var_is_introduced ;
var {0,1}: aux16229_INTEGER :: var_is_introduced ;
var bool: aux16230_BOOL:: var_is_introduced ;
var bool: aux16231_BOOL:: var_is_introduced ;
var 3..60: aux16232:: var_is_introduced ;
var bool: aux16233_BOOL:: var_is_introduced ;
var bool: aux16234_BOOL:: var_is_introduced ;
var bool: aux16235_BOOL:: var_is_introduced ;
var {0,1}: aux16235_INTEGER :: var_is_introduced ;
var bool: aux16236_BOOL:: var_is_introduced ;
var bool: aux16237_BOOL:: var_is_introduced ;
var 4..61: aux16238:: var_is_introduced ;
var bool: aux16239_BOOL:: var_is_introduced ;
var bool: aux16240_BOOL:: var_is_introduced ;
var bool: aux16241_BOOL:: var_is_introduced ;
var {0,1}: aux16241_INTEGER :: var_is_introduced ;
var bool: aux16242_BOOL:: var_is_introduced ;
var bool: aux16243_BOOL:: var_is_introduced ;
var 3..60: aux16244:: var_is_introduced ;
var bool: aux16245_BOOL:: var_is_introduced ;
var bool: aux16246_BOOL:: var_is_introduced ;
var bool: aux16247_BOOL:: var_is_introduced ;
var {0,1}: aux16247_INTEGER :: var_is_introduced ;
var bool: aux16248_BOOL:: var_is_introduced ;
var bool: aux16249_BOOL:: var_is_introduced ;
var 2..59: aux16250:: var_is_introduced ;
var bool: aux16251_BOOL:: var_is_introduced ;
var bool: aux16252_BOOL:: var_is_introduced ;
var bool: aux16253_BOOL:: var_is_introduced ;
var {0,1}: aux16253_INTEGER :: var_is_introduced ;
var bool: aux16254_BOOL:: var_is_introduced ;
var bool: aux16255_BOOL:: var_is_introduced ;
var 1..58: aux16256:: var_is_introduced ;
var bool: aux16257_BOOL:: var_is_introduced ;
var bool: aux16258_BOOL:: var_is_introduced ;
var bool: aux16259_BOOL:: var_is_introduced ;
var {0,1}: aux16259_INTEGER :: var_is_introduced ;
var bool: aux16260_BOOL:: var_is_introduced ;
var bool: aux16261_BOOL:: var_is_introduced ;
var 3..60: aux16262:: var_is_introduced ;
var bool: aux16263_BOOL:: var_is_introduced ;
var bool: aux16264_BOOL:: var_is_introduced ;
var bool: aux16265_BOOL:: var_is_introduced ;
var {0,1}: aux16265_INTEGER :: var_is_introduced ;
var bool: aux16266_BOOL:: var_is_introduced ;
var bool: aux16267_BOOL:: var_is_introduced ;
var 4..61: aux16268:: var_is_introduced ;
var bool: aux16269_BOOL:: var_is_introduced ;
var bool: aux16270_BOOL:: var_is_introduced ;
var bool: aux16271_BOOL:: var_is_introduced ;
var {0,1}: aux16271_INTEGER :: var_is_introduced ;
var bool: aux16272_BOOL:: var_is_introduced ;
var bool: aux16273_BOOL:: var_is_introduced ;
var 1..58: aux16274:: var_is_introduced ;
var bool: aux16275_BOOL:: var_is_introduced ;
var bool: aux16276_BOOL:: var_is_introduced ;
var bool: aux16277_BOOL:: var_is_introduced ;
var {0,1}: aux16277_INTEGER :: var_is_introduced ;
var bool: aux16278_BOOL:: var_is_introduced ;
var bool: aux16279_BOOL:: var_is_introduced ;
var 4..61: aux16280:: var_is_introduced ;
var bool: aux16281_BOOL:: var_is_introduced ;
var bool: aux16282_BOOL:: var_is_introduced ;
var bool: aux16283_BOOL:: var_is_introduced ;
var {0,1}: aux16283_INTEGER :: var_is_introduced ;
var bool: aux16284_BOOL:: var_is_introduced ;
var bool: aux16285_BOOL:: var_is_introduced ;
var 2..59: aux16286:: var_is_introduced ;
var bool: aux16287_BOOL:: var_is_introduced ;
var bool: aux16288_BOOL:: var_is_introduced ;
var bool: aux16289_BOOL:: var_is_introduced ;
var {0,1}: aux16289_INTEGER :: var_is_introduced ;
var bool: aux16290_BOOL:: var_is_introduced ;
var 2..59: aux16291:: var_is_introduced ;
var bool: aux16292_BOOL:: var_is_introduced ;
var bool: aux16293_BOOL:: var_is_introduced ;
var {0,1}: aux16293_INTEGER :: var_is_introduced ;
var bool: aux16294_BOOL:: var_is_introduced ;
var bool: aux16295_BOOL:: var_is_introduced ;
var bool: aux16296_BOOL:: var_is_introduced ;
var 4..61: aux16297:: var_is_introduced ;
var bool: aux16298_BOOL:: var_is_introduced ;
var bool: aux16299_BOOL:: var_is_introduced ;
var bool: aux16300_BOOL:: var_is_introduced ;
var {0,1}: aux16300_INTEGER :: var_is_introduced ;
var bool: aux16301_BOOL:: var_is_introduced ;
var bool: aux16302_BOOL:: var_is_introduced ;
var 4..61: aux16303:: var_is_introduced ;
var bool: aux16304_BOOL:: var_is_introduced ;
var bool: aux16305_BOOL:: var_is_introduced ;
var bool: aux16306_BOOL:: var_is_introduced ;
var {0,1}: aux16306_INTEGER :: var_is_introduced ;
var bool: aux16307_BOOL:: var_is_introduced ;
var bool: aux16308_BOOL:: var_is_introduced ;
var 3..60: aux16309:: var_is_introduced ;
var bool: aux16310_BOOL:: var_is_introduced ;
var bool: aux16311_BOOL:: var_is_introduced ;
var bool: aux16312_BOOL:: var_is_introduced ;
var {0,1}: aux16312_INTEGER :: var_is_introduced ;
var bool: aux16313_BOOL:: var_is_introduced ;
var bool: aux16314_BOOL:: var_is_introduced ;
var 3..60: aux16315:: var_is_introduced ;
var bool: aux16316_BOOL:: var_is_introduced ;
var bool: aux16317_BOOL:: var_is_introduced ;
var bool: aux16318_BOOL:: var_is_introduced ;
var {0,1}: aux16318_INTEGER :: var_is_introduced ;
var bool: aux16319_BOOL:: var_is_introduced ;
var bool: aux16320_BOOL:: var_is_introduced ;
var 2..59: aux16321:: var_is_introduced ;
var bool: aux16322_BOOL:: var_is_introduced ;
var bool: aux16323_BOOL:: var_is_introduced ;
var bool: aux16324_BOOL:: var_is_introduced ;
var {0,1}: aux16324_INTEGER :: var_is_introduced ;
var bool: aux16325_BOOL:: var_is_introduced ;
var bool: aux16326_BOOL:: var_is_introduced ;
var 3..60: aux16327:: var_is_introduced ;
var bool: aux16328_BOOL:: var_is_introduced ;
var bool: aux16329_BOOL:: var_is_introduced ;
var bool: aux16330_BOOL:: var_is_introduced ;
var {0,1}: aux16330_INTEGER :: var_is_introduced ;
var bool: aux16331_BOOL:: var_is_introduced ;
var bool: aux16332_BOOL:: var_is_introduced ;
var 2..59: aux16333:: var_is_introduced ;
var bool: aux16334_BOOL:: var_is_introduced ;
var bool: aux16335_BOOL:: var_is_introduced ;
var bool: aux16336_BOOL:: var_is_introduced ;
var {0,1}: aux16336_INTEGER :: var_is_introduced ;
var bool: aux16337_BOOL:: var_is_introduced ;
var bool: aux16338_BOOL:: var_is_introduced ;
var 2..59: aux16339:: var_is_introduced ;
var bool: aux16340_BOOL:: var_is_introduced ;
var bool: aux16341_BOOL:: var_is_introduced ;
var bool: aux16342_BOOL:: var_is_introduced ;
var {0,1}: aux16342_INTEGER :: var_is_introduced ;
var bool: aux16343_BOOL:: var_is_introduced ;
var bool: aux16344_BOOL:: var_is_introduced ;
var 5..62: aux16345:: var_is_introduced ;
var bool: aux16346_BOOL:: var_is_introduced ;
var bool: aux16347_BOOL:: var_is_introduced ;
var bool: aux16348_BOOL:: var_is_introduced ;
var {0,1}: aux16348_INTEGER :: var_is_introduced ;
var bool: aux16349_BOOL:: var_is_introduced ;
var bool: aux16350_BOOL:: var_is_introduced ;
var 3..60: aux16351:: var_is_introduced ;
var bool: aux16352_BOOL:: var_is_introduced ;
var bool: aux16353_BOOL:: var_is_introduced ;
var bool: aux16354_BOOL:: var_is_introduced ;
var {0,1}: aux16354_INTEGER :: var_is_introduced ;
var bool: aux16355_BOOL:: var_is_introduced ;
var bool: aux16356_BOOL:: var_is_introduced ;
var 4..61: aux16357:: var_is_introduced ;
var bool: aux16358_BOOL:: var_is_introduced ;
var bool: aux16359_BOOL:: var_is_introduced ;
var bool: aux16360_BOOL:: var_is_introduced ;
var {0,1}: aux16360_INTEGER :: var_is_introduced ;
var bool: aux16361_BOOL:: var_is_introduced ;
var bool: aux16362_BOOL:: var_is_introduced ;
var 3..60: aux16363:: var_is_introduced ;
var bool: aux16364_BOOL:: var_is_introduced ;
var bool: aux16365_BOOL:: var_is_introduced ;
var bool: aux16366_BOOL:: var_is_introduced ;
var {0,1}: aux16366_INTEGER :: var_is_introduced ;
var bool: aux16367_BOOL:: var_is_introduced ;
var bool: aux16368_BOOL:: var_is_introduced ;
var 2..59: aux16369:: var_is_introduced ;
var bool: aux16370_BOOL:: var_is_introduced ;
var bool: aux16371_BOOL:: var_is_introduced ;
var bool: aux16372_BOOL:: var_is_introduced ;
var {0,1}: aux16372_INTEGER :: var_is_introduced ;
var bool: aux16373_BOOL:: var_is_introduced ;
var bool: aux16374_BOOL:: var_is_introduced ;
var 1..58: aux16375:: var_is_introduced ;
var bool: aux16376_BOOL:: var_is_introduced ;
var bool: aux16377_BOOL:: var_is_introduced ;
var bool: aux16378_BOOL:: var_is_introduced ;
var {0,1}: aux16378_INTEGER :: var_is_introduced ;
var bool: aux16379_BOOL:: var_is_introduced ;
var bool: aux16380_BOOL:: var_is_introduced ;
var 3..60: aux16381:: var_is_introduced ;
var bool: aux16382_BOOL:: var_is_introduced ;
var bool: aux16383_BOOL:: var_is_introduced ;
var bool: aux16384_BOOL:: var_is_introduced ;
var {0,1}: aux16384_INTEGER :: var_is_introduced ;
var bool: aux16385_BOOL:: var_is_introduced ;
var bool: aux16386_BOOL:: var_is_introduced ;
var 4..61: aux16387:: var_is_introduced ;
var bool: aux16388_BOOL:: var_is_introduced ;
var bool: aux16389_BOOL:: var_is_introduced ;
var bool: aux16390_BOOL:: var_is_introduced ;
var {0,1}: aux16390_INTEGER :: var_is_introduced ;
var bool: aux16391_BOOL:: var_is_introduced ;
var bool: aux16392_BOOL:: var_is_introduced ;
var 1..58: aux16393:: var_is_introduced ;
var bool: aux16394_BOOL:: var_is_introduced ;
var bool: aux16395_BOOL:: var_is_introduced ;
var bool: aux16396_BOOL:: var_is_introduced ;
var {0,1}: aux16396_INTEGER :: var_is_introduced ;
var bool: aux16397_BOOL:: var_is_introduced ;
var bool: aux16398_BOOL:: var_is_introduced ;
var 4..61: aux16399:: var_is_introduced ;
var bool: aux16400_BOOL:: var_is_introduced ;
var bool: aux16401_BOOL:: var_is_introduced ;
var bool: aux16402_BOOL:: var_is_introduced ;
var {0,1}: aux16402_INTEGER :: var_is_introduced ;
var bool: aux16403_BOOL:: var_is_introduced ;
var bool: aux16404_BOOL:: var_is_introduced ;
var 2..59: aux16405:: var_is_introduced ;
var bool: aux16406_BOOL:: var_is_introduced ;
var bool: aux16407_BOOL:: var_is_introduced ;
var bool: aux16408_BOOL:: var_is_introduced ;
var {0,1}: aux16408_INTEGER :: var_is_introduced ;
var bool: aux16409_BOOL:: var_is_introduced ;
var 2..59: aux16410:: var_is_introduced ;
var bool: aux16411_BOOL:: var_is_introduced ;
var bool: aux16412_BOOL:: var_is_introduced ;
var {0,1}: aux16412_INTEGER :: var_is_introduced ;
var bool: aux16413_BOOL:: var_is_introduced ;
var bool: aux16414_BOOL:: var_is_introduced ;
var bool: aux16415_BOOL:: var_is_introduced ;
var 4..61: aux16416:: var_is_introduced ;
var bool: aux16417_BOOL:: var_is_introduced ;
var bool: aux16418_BOOL:: var_is_introduced ;
var bool: aux16419_BOOL:: var_is_introduced ;
var {0,1}: aux16419_INTEGER :: var_is_introduced ;
var bool: aux16420_BOOL:: var_is_introduced ;
var bool: aux16421_BOOL:: var_is_introduced ;
var 4..61: aux16422:: var_is_introduced ;
var bool: aux16423_BOOL:: var_is_introduced ;
var bool: aux16424_BOOL:: var_is_introduced ;
var bool: aux16425_BOOL:: var_is_introduced ;
var {0,1}: aux16425_INTEGER :: var_is_introduced ;
var bool: aux16426_BOOL:: var_is_introduced ;
var bool: aux16427_BOOL:: var_is_introduced ;
var 3..60: aux16428:: var_is_introduced ;
var bool: aux16429_BOOL:: var_is_introduced ;
var bool: aux16430_BOOL:: var_is_introduced ;
var bool: aux16431_BOOL:: var_is_introduced ;
var {0,1}: aux16431_INTEGER :: var_is_introduced ;
var bool: aux16432_BOOL:: var_is_introduced ;
var bool: aux16433_BOOL:: var_is_introduced ;
var 2..59: aux16434:: var_is_introduced ;
var bool: aux16435_BOOL:: var_is_introduced ;
var bool: aux16436_BOOL:: var_is_introduced ;
var bool: aux16437_BOOL:: var_is_introduced ;
var {0,1}: aux16437_INTEGER :: var_is_introduced ;
var bool: aux16438_BOOL:: var_is_introduced ;
var bool: aux16439_BOOL:: var_is_introduced ;
var 3..60: aux16440:: var_is_introduced ;
var bool: aux16441_BOOL:: var_is_introduced ;
var bool: aux16442_BOOL:: var_is_introduced ;
var bool: aux16443_BOOL:: var_is_introduced ;
var {0,1}: aux16443_INTEGER :: var_is_introduced ;
var bool: aux16444_BOOL:: var_is_introduced ;
var bool: aux16445_BOOL:: var_is_introduced ;
var 2..59: aux16446:: var_is_introduced ;
var bool: aux16447_BOOL:: var_is_introduced ;
var bool: aux16448_BOOL:: var_is_introduced ;
var bool: aux16449_BOOL:: var_is_introduced ;
var {0,1}: aux16449_INTEGER :: var_is_introduced ;
var bool: aux16450_BOOL:: var_is_introduced ;
var bool: aux16451_BOOL:: var_is_introduced ;
var 3..60: aux16452:: var_is_introduced ;
var bool: aux16453_BOOL:: var_is_introduced ;
var bool: aux16454_BOOL:: var_is_introduced ;
var bool: aux16455_BOOL:: var_is_introduced ;
var {0,1}: aux16455_INTEGER :: var_is_introduced ;
var bool: aux16456_BOOL:: var_is_introduced ;
var bool: aux16457_BOOL:: var_is_introduced ;
var 2..59: aux16458:: var_is_introduced ;
var bool: aux16459_BOOL:: var_is_introduced ;
var bool: aux16460_BOOL:: var_is_introduced ;
var bool: aux16461_BOOL:: var_is_introduced ;
var {0,1}: aux16461_INTEGER :: var_is_introduced ;
var bool: aux16462_BOOL:: var_is_introduced ;
var bool: aux16463_BOOL:: var_is_introduced ;
var 2..59: aux16464:: var_is_introduced ;
var bool: aux16465_BOOL:: var_is_introduced ;
var bool: aux16466_BOOL:: var_is_introduced ;
var bool: aux16467_BOOL:: var_is_introduced ;
var {0,1}: aux16467_INTEGER :: var_is_introduced ;
var bool: aux16468_BOOL:: var_is_introduced ;
var bool: aux16469_BOOL:: var_is_introduced ;
var 5..62: aux16470:: var_is_introduced ;
var bool: aux16471_BOOL:: var_is_introduced ;
var bool: aux16472_BOOL:: var_is_introduced ;
var bool: aux16473_BOOL:: var_is_introduced ;
var {0,1}: aux16473_INTEGER :: var_is_introduced ;
var bool: aux16474_BOOL:: var_is_introduced ;
var bool: aux16475_BOOL:: var_is_introduced ;
var 3..60: aux16476:: var_is_introduced ;
var bool: aux16477_BOOL:: var_is_introduced ;
var bool: aux16478_BOOL:: var_is_introduced ;
var bool: aux16479_BOOL:: var_is_introduced ;
var {0,1}: aux16479_INTEGER :: var_is_introduced ;
var bool: aux16480_BOOL:: var_is_introduced ;
var bool: aux16481_BOOL:: var_is_introduced ;
var 4..61: aux16482:: var_is_introduced ;
var bool: aux16483_BOOL:: var_is_introduced ;
var bool: aux16484_BOOL:: var_is_introduced ;
var bool: aux16485_BOOL:: var_is_introduced ;
var {0,1}: aux16485_INTEGER :: var_is_introduced ;
var bool: aux16486_BOOL:: var_is_introduced ;
var bool: aux16487_BOOL:: var_is_introduced ;
var 3..60: aux16488:: var_is_introduced ;
var bool: aux16489_BOOL:: var_is_introduced ;
var bool: aux16490_BOOL:: var_is_introduced ;
var bool: aux16491_BOOL:: var_is_introduced ;
var {0,1}: aux16491_INTEGER :: var_is_introduced ;
var bool: aux16492_BOOL:: var_is_introduced ;
var bool: aux16493_BOOL:: var_is_introduced ;
var 2..59: aux16494:: var_is_introduced ;
var bool: aux16495_BOOL:: var_is_introduced ;
var bool: aux16496_BOOL:: var_is_introduced ;
var bool: aux16497_BOOL:: var_is_introduced ;
var {0,1}: aux16497_INTEGER :: var_is_introduced ;
var bool: aux16498_BOOL:: var_is_introduced ;
var bool: aux16499_BOOL:: var_is_introduced ;
var 1..58: aux16500:: var_is_introduced ;
var bool: aux16501_BOOL:: var_is_introduced ;
var bool: aux16502_BOOL:: var_is_introduced ;
var bool: aux16503_BOOL:: var_is_introduced ;
var {0,1}: aux16503_INTEGER :: var_is_introduced ;
var bool: aux16504_BOOL:: var_is_introduced ;
var bool: aux16505_BOOL:: var_is_introduced ;
var 3..60: aux16506:: var_is_introduced ;
var bool: aux16507_BOOL:: var_is_introduced ;
var bool: aux16508_BOOL:: var_is_introduced ;
var bool: aux16509_BOOL:: var_is_introduced ;
var {0,1}: aux16509_INTEGER :: var_is_introduced ;
var bool: aux16510_BOOL:: var_is_introduced ;
var bool: aux16511_BOOL:: var_is_introduced ;
var 1..58: aux16512:: var_is_introduced ;
var bool: aux16513_BOOL:: var_is_introduced ;
var bool: aux16514_BOOL:: var_is_introduced ;
var bool: aux16515_BOOL:: var_is_introduced ;
var {0,1}: aux16515_INTEGER :: var_is_introduced ;
var bool: aux16516_BOOL:: var_is_introduced ;
var bool: aux16517_BOOL:: var_is_introduced ;
var 4..61: aux16518:: var_is_introduced ;
var bool: aux16519_BOOL:: var_is_introduced ;
var bool: aux16520_BOOL:: var_is_introduced ;
var bool: aux16521_BOOL:: var_is_introduced ;
var {0,1}: aux16521_INTEGER :: var_is_introduced ;
var bool: aux16522_BOOL:: var_is_introduced ;
var bool: aux16523_BOOL:: var_is_introduced ;
var 2..59: aux16524:: var_is_introduced ;
var bool: aux16525_BOOL:: var_is_introduced ;
var bool: aux16526_BOOL:: var_is_introduced ;
var bool: aux16527_BOOL:: var_is_introduced ;
var {0,1}: aux16527_INTEGER :: var_is_introduced ;
var bool: aux16528_BOOL:: var_is_introduced ;
var 4..61: aux16529:: var_is_introduced ;
var bool: aux16530_BOOL:: var_is_introduced ;
var bool: aux16531_BOOL:: var_is_introduced ;
var {0,1}: aux16531_INTEGER :: var_is_introduced ;
var bool: aux16532_BOOL:: var_is_introduced ;
var bool: aux16533_BOOL:: var_is_introduced ;
var bool: aux16534_BOOL:: var_is_introduced ;
var 4..61: aux16535:: var_is_introduced ;
var bool: aux16536_BOOL:: var_is_introduced ;
var bool: aux16537_BOOL:: var_is_introduced ;
var bool: aux16538_BOOL:: var_is_introduced ;
var {0,1}: aux16538_INTEGER :: var_is_introduced ;
var bool: aux16539_BOOL:: var_is_introduced ;
var bool: aux16540_BOOL:: var_is_introduced ;
var 4..61: aux16541:: var_is_introduced ;
var bool: aux16542_BOOL:: var_is_introduced ;
var bool: aux16543_BOOL:: var_is_introduced ;
var bool: aux16544_BOOL:: var_is_introduced ;
var {0,1}: aux16544_INTEGER :: var_is_introduced ;
var bool: aux16545_BOOL:: var_is_introduced ;
var bool: aux16546_BOOL:: var_is_introduced ;
var 3..60: aux16547:: var_is_introduced ;
var bool: aux16548_BOOL:: var_is_introduced ;
var bool: aux16549_BOOL:: var_is_introduced ;
var bool: aux16550_BOOL:: var_is_introduced ;
var {0,1}: aux16550_INTEGER :: var_is_introduced ;
var bool: aux16551_BOOL:: var_is_introduced ;
var bool: aux16552_BOOL:: var_is_introduced ;
var 2..59: aux16553:: var_is_introduced ;
var bool: aux16554_BOOL:: var_is_introduced ;
var bool: aux16555_BOOL:: var_is_introduced ;
var bool: aux16556_BOOL:: var_is_introduced ;
var {0,1}: aux16556_INTEGER :: var_is_introduced ;
var bool: aux16557_BOOL:: var_is_introduced ;
var bool: aux16558_BOOL:: var_is_introduced ;
var 3..60: aux16559:: var_is_introduced ;
var bool: aux16560_BOOL:: var_is_introduced ;
var bool: aux16561_BOOL:: var_is_introduced ;
var bool: aux16562_BOOL:: var_is_introduced ;
var {0,1}: aux16562_INTEGER :: var_is_introduced ;
var bool: aux16563_BOOL:: var_is_introduced ;
var bool: aux16564_BOOL:: var_is_introduced ;
var 2..59: aux16565:: var_is_introduced ;
var bool: aux16566_BOOL:: var_is_introduced ;
var bool: aux16567_BOOL:: var_is_introduced ;
var bool: aux16568_BOOL:: var_is_introduced ;
var {0,1}: aux16568_INTEGER :: var_is_introduced ;
var bool: aux16569_BOOL:: var_is_introduced ;
var bool: aux16570_BOOL:: var_is_introduced ;
var 3..60: aux16571:: var_is_introduced ;
var bool: aux16572_BOOL:: var_is_introduced ;
var bool: aux16573_BOOL:: var_is_introduced ;
var bool: aux16574_BOOL:: var_is_introduced ;
var {0,1}: aux16574_INTEGER :: var_is_introduced ;
var bool: aux16575_BOOL:: var_is_introduced ;
var bool: aux16576_BOOL:: var_is_introduced ;
var 2..59: aux16577:: var_is_introduced ;
var bool: aux16578_BOOL:: var_is_introduced ;
var bool: aux16579_BOOL:: var_is_introduced ;
var bool: aux16580_BOOL:: var_is_introduced ;
var {0,1}: aux16580_INTEGER :: var_is_introduced ;
var bool: aux16581_BOOL:: var_is_introduced ;
var bool: aux16582_BOOL:: var_is_introduced ;
var 2..59: aux16583:: var_is_introduced ;
var bool: aux16584_BOOL:: var_is_introduced ;
var bool: aux16585_BOOL:: var_is_introduced ;
var bool: aux16586_BOOL:: var_is_introduced ;
var {0,1}: aux16586_INTEGER :: var_is_introduced ;
var bool: aux16587_BOOL:: var_is_introduced ;
var bool: aux16588_BOOL:: var_is_introduced ;
var 5..62: aux16589:: var_is_introduced ;
var bool: aux16590_BOOL:: var_is_introduced ;
var bool: aux16591_BOOL:: var_is_introduced ;
var bool: aux16592_BOOL:: var_is_introduced ;
var {0,1}: aux16592_INTEGER :: var_is_introduced ;
var bool: aux16593_BOOL:: var_is_introduced ;
var bool: aux16594_BOOL:: var_is_introduced ;
var 3..60: aux16595:: var_is_introduced ;
var bool: aux16596_BOOL:: var_is_introduced ;
var bool: aux16597_BOOL:: var_is_introduced ;
var bool: aux16598_BOOL:: var_is_introduced ;
var {0,1}: aux16598_INTEGER :: var_is_introduced ;
var bool: aux16599_BOOL:: var_is_introduced ;
var bool: aux16600_BOOL:: var_is_introduced ;
var 4..61: aux16601:: var_is_introduced ;
var bool: aux16602_BOOL:: var_is_introduced ;
var bool: aux16603_BOOL:: var_is_introduced ;
var bool: aux16604_BOOL:: var_is_introduced ;
var {0,1}: aux16604_INTEGER :: var_is_introduced ;
var bool: aux16605_BOOL:: var_is_introduced ;
var bool: aux16606_BOOL:: var_is_introduced ;
var 3..60: aux16607:: var_is_introduced ;
var bool: aux16608_BOOL:: var_is_introduced ;
var bool: aux16609_BOOL:: var_is_introduced ;
var bool: aux16610_BOOL:: var_is_introduced ;
var {0,1}: aux16610_INTEGER :: var_is_introduced ;
var bool: aux16611_BOOL:: var_is_introduced ;
var bool: aux16612_BOOL:: var_is_introduced ;
var 2..59: aux16613:: var_is_introduced ;
var bool: aux16614_BOOL:: var_is_introduced ;
var bool: aux16615_BOOL:: var_is_introduced ;
var bool: aux16616_BOOL:: var_is_introduced ;
var {0,1}: aux16616_INTEGER :: var_is_introduced ;
var bool: aux16617_BOOL:: var_is_introduced ;
var bool: aux16618_BOOL:: var_is_introduced ;
var 1..58: aux16619:: var_is_introduced ;
var bool: aux16620_BOOL:: var_is_introduced ;
var bool: aux16621_BOOL:: var_is_introduced ;
var bool: aux16622_BOOL:: var_is_introduced ;
var {0,1}: aux16622_INTEGER :: var_is_introduced ;
var bool: aux16623_BOOL:: var_is_introduced ;
var bool: aux16624_BOOL:: var_is_introduced ;
var 3..60: aux16625:: var_is_introduced ;
var bool: aux16626_BOOL:: var_is_introduced ;
var bool: aux16627_BOOL:: var_is_introduced ;
var bool: aux16628_BOOL:: var_is_introduced ;
var {0,1}: aux16628_INTEGER :: var_is_introduced ;
var bool: aux16629_BOOL:: var_is_introduced ;
var bool: aux16630_BOOL:: var_is_introduced ;
var 4..61: aux16631:: var_is_introduced ;
var bool: aux16632_BOOL:: var_is_introduced ;
var bool: aux16633_BOOL:: var_is_introduced ;
var bool: aux16634_BOOL:: var_is_introduced ;
var {0,1}: aux16634_INTEGER :: var_is_introduced ;
var bool: aux16635_BOOL:: var_is_introduced ;
var bool: aux16636_BOOL:: var_is_introduced ;
var 1..58: aux16637:: var_is_introduced ;
var bool: aux16638_BOOL:: var_is_introduced ;
var bool: aux16639_BOOL:: var_is_introduced ;
var bool: aux16640_BOOL:: var_is_introduced ;
var {0,1}: aux16640_INTEGER :: var_is_introduced ;
var bool: aux16641_BOOL:: var_is_introduced ;
var bool: aux16642_BOOL:: var_is_introduced ;
var 4..61: aux16643:: var_is_introduced ;
var bool: aux16644_BOOL:: var_is_introduced ;
var bool: aux16645_BOOL:: var_is_introduced ;
var bool: aux16646_BOOL:: var_is_introduced ;
var {0,1}: aux16646_INTEGER :: var_is_introduced ;
var bool: aux16647_BOOL:: var_is_introduced ;
var 2..59: aux16648:: var_is_introduced ;
var bool: aux16649_BOOL:: var_is_introduced ;
var bool: aux16650_BOOL:: var_is_introduced ;
var {0,1}: aux16650_INTEGER :: var_is_introduced ;
var bool: aux16651_BOOL:: var_is_introduced ;
var bool: aux16652_BOOL:: var_is_introduced ;
var bool: aux16653_BOOL:: var_is_introduced ;
var 4..61: aux16654:: var_is_introduced ;
var bool: aux16655_BOOL:: var_is_introduced ;
var bool: aux16656_BOOL:: var_is_introduced ;
var bool: aux16657_BOOL:: var_is_introduced ;
var {0,1}: aux16657_INTEGER :: var_is_introduced ;
var bool: aux16658_BOOL:: var_is_introduced ;
var bool: aux16659_BOOL:: var_is_introduced ;
var 4..61: aux16660:: var_is_introduced ;
var bool: aux16661_BOOL:: var_is_introduced ;
var bool: aux16662_BOOL:: var_is_introduced ;
var bool: aux16663_BOOL:: var_is_introduced ;
var {0,1}: aux16663_INTEGER :: var_is_introduced ;
var bool: aux16664_BOOL:: var_is_introduced ;
var bool: aux16665_BOOL:: var_is_introduced ;
var 3..60: aux16666:: var_is_introduced ;
var bool: aux16667_BOOL:: var_is_introduced ;
var bool: aux16668_BOOL:: var_is_introduced ;
var bool: aux16669_BOOL:: var_is_introduced ;
var {0,1}: aux16669_INTEGER :: var_is_introduced ;
var bool: aux16670_BOOL:: var_is_introduced ;
var bool: aux16671_BOOL:: var_is_introduced ;
var 2..59: aux16672:: var_is_introduced ;
var bool: aux16673_BOOL:: var_is_introduced ;
var bool: aux16674_BOOL:: var_is_introduced ;
var bool: aux16675_BOOL:: var_is_introduced ;
var {0,1}: aux16675_INTEGER :: var_is_introduced ;
var bool: aux16676_BOOL:: var_is_introduced ;
var bool: aux16677_BOOL:: var_is_introduced ;
var 3..60: aux16678:: var_is_introduced ;
var bool: aux16679_BOOL:: var_is_introduced ;
var bool: aux16680_BOOL:: var_is_introduced ;
var bool: aux16681_BOOL:: var_is_introduced ;
var {0,1}: aux16681_INTEGER :: var_is_introduced ;
var bool: aux16682_BOOL:: var_is_introduced ;
var bool: aux16683_BOOL:: var_is_introduced ;
var 2..59: aux16684:: var_is_introduced ;
var bool: aux16685_BOOL:: var_is_introduced ;
var bool: aux16686_BOOL:: var_is_introduced ;
var bool: aux16687_BOOL:: var_is_introduced ;
var {0,1}: aux16687_INTEGER :: var_is_introduced ;
var bool: aux16688_BOOL:: var_is_introduced ;
var bool: aux16689_BOOL:: var_is_introduced ;
var 3..60: aux16690:: var_is_introduced ;
var bool: aux16691_BOOL:: var_is_introduced ;
var bool: aux16692_BOOL:: var_is_introduced ;
var bool: aux16693_BOOL:: var_is_introduced ;
var {0,1}: aux16693_INTEGER :: var_is_introduced ;
var bool: aux16694_BOOL:: var_is_introduced ;
var bool: aux16695_BOOL:: var_is_introduced ;
var 2..59: aux16696:: var_is_introduced ;
var bool: aux16697_BOOL:: var_is_introduced ;
var bool: aux16698_BOOL:: var_is_introduced ;
var bool: aux16699_BOOL:: var_is_introduced ;
var {0,1}: aux16699_INTEGER :: var_is_introduced ;
var bool: aux16700_BOOL:: var_is_introduced ;
var bool: aux16701_BOOL:: var_is_introduced ;
var 5..62: aux16702:: var_is_introduced ;
var bool: aux16703_BOOL:: var_is_introduced ;
var bool: aux16704_BOOL:: var_is_introduced ;
var bool: aux16705_BOOL:: var_is_introduced ;
var {0,1}: aux16705_INTEGER :: var_is_introduced ;
var bool: aux16706_BOOL:: var_is_introduced ;
var bool: aux16707_BOOL:: var_is_introduced ;
var 3..60: aux16708:: var_is_introduced ;
var bool: aux16709_BOOL:: var_is_introduced ;
var bool: aux16710_BOOL:: var_is_introduced ;
var bool: aux16711_BOOL:: var_is_introduced ;
var {0,1}: aux16711_INTEGER :: var_is_introduced ;
var bool: aux16712_BOOL:: var_is_introduced ;
var bool: aux16713_BOOL:: var_is_introduced ;
var 4..61: aux16714:: var_is_introduced ;
var bool: aux16715_BOOL:: var_is_introduced ;
var bool: aux16716_BOOL:: var_is_introduced ;
var bool: aux16717_BOOL:: var_is_introduced ;
var {0,1}: aux16717_INTEGER :: var_is_introduced ;
var bool: aux16718_BOOL:: var_is_introduced ;
var bool: aux16719_BOOL:: var_is_introduced ;
var 3..60: aux16720:: var_is_introduced ;
var bool: aux16721_BOOL:: var_is_introduced ;
var bool: aux16722_BOOL:: var_is_introduced ;
var bool: aux16723_BOOL:: var_is_introduced ;
var {0,1}: aux16723_INTEGER :: var_is_introduced ;
var bool: aux16724_BOOL:: var_is_introduced ;
var bool: aux16725_BOOL:: var_is_introduced ;
var 2..59: aux16726:: var_is_introduced ;
var bool: aux16727_BOOL:: var_is_introduced ;
var bool: aux16728_BOOL:: var_is_introduced ;
var bool: aux16729_BOOL:: var_is_introduced ;
var {0,1}: aux16729_INTEGER :: var_is_introduced ;
var bool: aux16730_BOOL:: var_is_introduced ;
var bool: aux16731_BOOL:: var_is_introduced ;
var 1..58: aux16732:: var_is_introduced ;
var bool: aux16733_BOOL:: var_is_introduced ;
var bool: aux16734_BOOL:: var_is_introduced ;
var bool: aux16735_BOOL:: var_is_introduced ;
var {0,1}: aux16735_INTEGER :: var_is_introduced ;
var bool: aux16736_BOOL:: var_is_introduced ;
var bool: aux16737_BOOL:: var_is_introduced ;
var 3..60: aux16738:: var_is_introduced ;
var bool: aux16739_BOOL:: var_is_introduced ;
var bool: aux16740_BOOL:: var_is_introduced ;
var bool: aux16741_BOOL:: var_is_introduced ;
var {0,1}: aux16741_INTEGER :: var_is_introduced ;
var bool: aux16742_BOOL:: var_is_introduced ;
var bool: aux16743_BOOL:: var_is_introduced ;
var 4..61: aux16744:: var_is_introduced ;
var bool: aux16745_BOOL:: var_is_introduced ;
var bool: aux16746_BOOL:: var_is_introduced ;
var bool: aux16747_BOOL:: var_is_introduced ;
var {0,1}: aux16747_INTEGER :: var_is_introduced ;
var bool: aux16748_BOOL:: var_is_introduced ;
var bool: aux16749_BOOL:: var_is_introduced ;
var 1..58: aux16750:: var_is_introduced ;
var bool: aux16751_BOOL:: var_is_introduced ;
var bool: aux16752_BOOL:: var_is_introduced ;
var bool: aux16753_BOOL:: var_is_introduced ;
var {0,1}: aux16753_INTEGER :: var_is_introduced ;
var bool: aux16754_BOOL:: var_is_introduced ;
var bool: aux16755_BOOL:: var_is_introduced ;
var 4..61: aux16756:: var_is_introduced ;
var bool: aux16757_BOOL:: var_is_introduced ;
var bool: aux16758_BOOL:: var_is_introduced ;
var bool: aux16759_BOOL:: var_is_introduced ;
var {0,1}: aux16759_INTEGER :: var_is_introduced ;
var bool: aux16760_BOOL:: var_is_introduced ;
var bool: aux16761_BOOL:: var_is_introduced ;
var 2..59: aux16762:: var_is_introduced ;
var bool: aux16763_BOOL:: var_is_introduced ;
var bool: aux16764_BOOL:: var_is_introduced ;
var bool: aux16765_BOOL:: var_is_introduced ;
var {0,1}: aux16765_INTEGER :: var_is_introduced ;
var bool: aux16766_BOOL:: var_is_introduced ;
var 2..59: aux16767:: var_is_introduced ;
var bool: aux16768_BOOL:: var_is_introduced ;
var bool: aux16769_BOOL:: var_is_introduced ;
var {0,1}: aux16769_INTEGER :: var_is_introduced ;
var bool: aux16770_BOOL:: var_is_introduced ;
var bool: aux16771_BOOL:: var_is_introduced ;
var bool: aux16772_BOOL:: var_is_introduced ;
var 4..61: aux16773:: var_is_introduced ;
var bool: aux16774_BOOL:: var_is_introduced ;
var bool: aux16775_BOOL:: var_is_introduced ;
var bool: aux16776_BOOL:: var_is_introduced ;
var {0,1}: aux16776_INTEGER :: var_is_introduced ;
var bool: aux16777_BOOL:: var_is_introduced ;
var bool: aux16778_BOOL:: var_is_introduced ;
var 4..61: aux16779:: var_is_introduced ;
var bool: aux16780_BOOL:: var_is_introduced ;
var bool: aux16781_BOOL:: var_is_introduced ;
var bool: aux16782_BOOL:: var_is_introduced ;
var {0,1}: aux16782_INTEGER :: var_is_introduced ;
var bool: aux16783_BOOL:: var_is_introduced ;
var bool: aux16784_BOOL:: var_is_introduced ;
var 3..60: aux16785:: var_is_introduced ;
var bool: aux16786_BOOL:: var_is_introduced ;
var bool: aux16787_BOOL:: var_is_introduced ;
var bool: aux16788_BOOL:: var_is_introduced ;
var {0,1}: aux16788_INTEGER :: var_is_introduced ;
var bool: aux16789_BOOL:: var_is_introduced ;
var bool: aux16790_BOOL:: var_is_introduced ;
var 2..59: aux16791:: var_is_introduced ;
var bool: aux16792_BOOL:: var_is_introduced ;
var bool: aux16793_BOOL:: var_is_introduced ;
var bool: aux16794_BOOL:: var_is_introduced ;
var {0,1}: aux16794_INTEGER :: var_is_introduced ;
var bool: aux16795_BOOL:: var_is_introduced ;
var bool: aux16796_BOOL:: var_is_introduced ;
var 3..60: aux16797:: var_is_introduced ;
var bool: aux16798_BOOL:: var_is_introduced ;
var bool: aux16799_BOOL:: var_is_introduced ;
var bool: aux16800_BOOL:: var_is_introduced ;
var {0,1}: aux16800_INTEGER :: var_is_introduced ;
var bool: aux16801_BOOL:: var_is_introduced ;
var bool: aux16802_BOOL:: var_is_introduced ;
var 2..59: aux16803:: var_is_introduced ;
var bool: aux16804_BOOL:: var_is_introduced ;
var bool: aux16805_BOOL:: var_is_introduced ;
var bool: aux16806_BOOL:: var_is_introduced ;
var {0,1}: aux16806_INTEGER :: var_is_introduced ;
var bool: aux16807_BOOL:: var_is_introduced ;
var bool: aux16808_BOOL:: var_is_introduced ;
var 3..60: aux16809:: var_is_introduced ;
var bool: aux16810_BOOL:: var_is_introduced ;
var bool: aux16811_BOOL:: var_is_introduced ;
var bool: aux16812_BOOL:: var_is_introduced ;
var {0,1}: aux16812_INTEGER :: var_is_introduced ;
var bool: aux16813_BOOL:: var_is_introduced ;
var bool: aux16814_BOOL:: var_is_introduced ;
var 2..59: aux16815:: var_is_introduced ;
var bool: aux16816_BOOL:: var_is_introduced ;
var bool: aux16817_BOOL:: var_is_introduced ;
var bool: aux16818_BOOL:: var_is_introduced ;
var {0,1}: aux16818_INTEGER :: var_is_introduced ;
var bool: aux16819_BOOL:: var_is_introduced ;
var bool: aux16820_BOOL:: var_is_introduced ;
var 2..59: aux16821:: var_is_introduced ;
var bool: aux16822_BOOL:: var_is_introduced ;
var bool: aux16823_BOOL:: var_is_introduced ;
var bool: aux16824_BOOL:: var_is_introduced ;
var {0,1}: aux16824_INTEGER :: var_is_introduced ;
var bool: aux16825_BOOL:: var_is_introduced ;
var bool: aux16826_BOOL:: var_is_introduced ;
var 3..60: aux16827:: var_is_introduced ;
var bool: aux16828_BOOL:: var_is_introduced ;
var bool: aux16829_BOOL:: var_is_introduced ;
var bool: aux16830_BOOL:: var_is_introduced ;
var {0,1}: aux16830_INTEGER :: var_is_introduced ;
var bool: aux16831_BOOL:: var_is_introduced ;
var bool: aux16832_BOOL:: var_is_introduced ;
var 4..61: aux16833:: var_is_introduced ;
var bool: aux16834_BOOL:: var_is_introduced ;
var bool: aux16835_BOOL:: var_is_introduced ;
var bool: aux16836_BOOL:: var_is_introduced ;
var {0,1}: aux16836_INTEGER :: var_is_introduced ;
var bool: aux16837_BOOL:: var_is_introduced ;
var bool: aux16838_BOOL:: var_is_introduced ;
var 3..60: aux16839:: var_is_introduced ;
var bool: aux16840_BOOL:: var_is_introduced ;
var bool: aux16841_BOOL:: var_is_introduced ;
var bool: aux16842_BOOL:: var_is_introduced ;
var {0,1}: aux16842_INTEGER :: var_is_introduced ;
var bool: aux16843_BOOL:: var_is_introduced ;
var bool: aux16844_BOOL:: var_is_introduced ;
var 2..59: aux16845:: var_is_introduced ;
var bool: aux16846_BOOL:: var_is_introduced ;
var bool: aux16847_BOOL:: var_is_introduced ;
var bool: aux16848_BOOL:: var_is_introduced ;
var {0,1}: aux16848_INTEGER :: var_is_introduced ;
var bool: aux16849_BOOL:: var_is_introduced ;
var bool: aux16850_BOOL:: var_is_introduced ;
var 1..58: aux16851:: var_is_introduced ;
var bool: aux16852_BOOL:: var_is_introduced ;
var bool: aux16853_BOOL:: var_is_introduced ;
var bool: aux16854_BOOL:: var_is_introduced ;
var {0,1}: aux16854_INTEGER :: var_is_introduced ;
var bool: aux16855_BOOL:: var_is_introduced ;
var bool: aux16856_BOOL:: var_is_introduced ;
var 3..60: aux16857:: var_is_introduced ;
var bool: aux16858_BOOL:: var_is_introduced ;
var bool: aux16859_BOOL:: var_is_introduced ;
var bool: aux16860_BOOL:: var_is_introduced ;
var {0,1}: aux16860_INTEGER :: var_is_introduced ;
var bool: aux16861_BOOL:: var_is_introduced ;
var bool: aux16862_BOOL:: var_is_introduced ;
var 4..61: aux16863:: var_is_introduced ;
var bool: aux16864_BOOL:: var_is_introduced ;
var bool: aux16865_BOOL:: var_is_introduced ;
var bool: aux16866_BOOL:: var_is_introduced ;
var {0,1}: aux16866_INTEGER :: var_is_introduced ;
var bool: aux16867_BOOL:: var_is_introduced ;
var bool: aux16868_BOOL:: var_is_introduced ;
var 1..58: aux16869:: var_is_introduced ;
var bool: aux16870_BOOL:: var_is_introduced ;
var bool: aux16871_BOOL:: var_is_introduced ;
var bool: aux16872_BOOL:: var_is_introduced ;
var {0,1}: aux16872_INTEGER :: var_is_introduced ;
var bool: aux16873_BOOL:: var_is_introduced ;
var bool: aux16874_BOOL:: var_is_introduced ;
var 4..61: aux16875:: var_is_introduced ;
var bool: aux16876_BOOL:: var_is_introduced ;
var bool: aux16877_BOOL:: var_is_introduced ;
var bool: aux16878_BOOL:: var_is_introduced ;
var {0,1}: aux16878_INTEGER :: var_is_introduced ;
var bool: aux16879_BOOL:: var_is_introduced ;
var bool: aux16880_BOOL:: var_is_introduced ;
var 2..59: aux16881:: var_is_introduced ;
var bool: aux16882_BOOL:: var_is_introduced ;
var bool: aux16883_BOOL:: var_is_introduced ;
var bool: aux16884_BOOL:: var_is_introduced ;
var {0,1}: aux16884_INTEGER :: var_is_introduced ;
var bool: aux16885_BOOL:: var_is_introduced ;
var 5..62: aux16886:: var_is_introduced ;
var bool: aux16887_BOOL:: var_is_introduced ;
var bool: aux16888_BOOL:: var_is_introduced ;
var {0,1}: aux16888_INTEGER :: var_is_introduced ;
var bool: aux16889_BOOL:: var_is_introduced ;
var bool: aux16890_BOOL:: var_is_introduced ;
var bool: aux16891_BOOL:: var_is_introduced ;
var 4..61: aux16892:: var_is_introduced ;
var bool: aux16893_BOOL:: var_is_introduced ;
var bool: aux16894_BOOL:: var_is_introduced ;
var bool: aux16895_BOOL:: var_is_introduced ;
var {0,1}: aux16895_INTEGER :: var_is_introduced ;
var bool: aux16896_BOOL:: var_is_introduced ;
var bool: aux16897_BOOL:: var_is_introduced ;
var 4..61: aux16898:: var_is_introduced ;
var bool: aux16899_BOOL:: var_is_introduced ;
var bool: aux16900_BOOL:: var_is_introduced ;
var bool: aux16901_BOOL:: var_is_introduced ;
var {0,1}: aux16901_INTEGER :: var_is_introduced ;
var bool: aux16902_BOOL:: var_is_introduced ;
var bool: aux16903_BOOL:: var_is_introduced ;
var 3..60: aux16904:: var_is_introduced ;
var bool: aux16905_BOOL:: var_is_introduced ;
var bool: aux16906_BOOL:: var_is_introduced ;
var bool: aux16907_BOOL:: var_is_introduced ;
var {0,1}: aux16907_INTEGER :: var_is_introduced ;
var bool: aux16908_BOOL:: var_is_introduced ;
var bool: aux16909_BOOL:: var_is_introduced ;
var 2..59: aux16910:: var_is_introduced ;
var bool: aux16911_BOOL:: var_is_introduced ;
var bool: aux16912_BOOL:: var_is_introduced ;
var bool: aux16913_BOOL:: var_is_introduced ;
var {0,1}: aux16913_INTEGER :: var_is_introduced ;
var bool: aux16914_BOOL:: var_is_introduced ;
var bool: aux16915_BOOL:: var_is_introduced ;
var 3..60: aux16916:: var_is_introduced ;
var bool: aux16917_BOOL:: var_is_introduced ;
var bool: aux16918_BOOL:: var_is_introduced ;
var bool: aux16919_BOOL:: var_is_introduced ;
var {0,1}: aux16919_INTEGER :: var_is_introduced ;
var bool: aux16920_BOOL:: var_is_introduced ;
var bool: aux16921_BOOL:: var_is_introduced ;
var 2..59: aux16922:: var_is_introduced ;
var bool: aux16923_BOOL:: var_is_introduced ;
var bool: aux16924_BOOL:: var_is_introduced ;
var bool: aux16925_BOOL:: var_is_introduced ;
var {0,1}: aux16925_INTEGER :: var_is_introduced ;
var bool: aux16926_BOOL:: var_is_introduced ;
var bool: aux16927_BOOL:: var_is_introduced ;
var 3..60: aux16928:: var_is_introduced ;
var bool: aux16929_BOOL:: var_is_introduced ;
var bool: aux16930_BOOL:: var_is_introduced ;
var bool: aux16931_BOOL:: var_is_introduced ;
var {0,1}: aux16931_INTEGER :: var_is_introduced ;
var bool: aux16932_BOOL:: var_is_introduced ;
var bool: aux16933_BOOL:: var_is_introduced ;
var 2..59: aux16934:: var_is_introduced ;
var bool: aux16935_BOOL:: var_is_introduced ;
var bool: aux16936_BOOL:: var_is_introduced ;
var bool: aux16937_BOOL:: var_is_introduced ;
var {0,1}: aux16937_INTEGER :: var_is_introduced ;
var bool: aux16938_BOOL:: var_is_introduced ;
var bool: aux16939_BOOL:: var_is_introduced ;
var 2..59: aux16940:: var_is_introduced ;
var bool: aux16941_BOOL:: var_is_introduced ;
var bool: aux16942_BOOL:: var_is_introduced ;
var bool: aux16943_BOOL:: var_is_introduced ;
var {0,1}: aux16943_INTEGER :: var_is_introduced ;
var bool: aux16944_BOOL:: var_is_introduced ;
var bool: aux16945_BOOL:: var_is_introduced ;
var 5..62: aux16946:: var_is_introduced ;
var bool: aux16947_BOOL:: var_is_introduced ;
var bool: aux16948_BOOL:: var_is_introduced ;
var bool: aux16949_BOOL:: var_is_introduced ;
var {0,1}: aux16949_INTEGER :: var_is_introduced ;
var bool: aux16950_BOOL:: var_is_introduced ;
var bool: aux16951_BOOL:: var_is_introduced ;
var 3..60: aux16952:: var_is_introduced ;
var bool: aux16953_BOOL:: var_is_introduced ;
var bool: aux16954_BOOL:: var_is_introduced ;
var bool: aux16955_BOOL:: var_is_introduced ;
var {0,1}: aux16955_INTEGER :: var_is_introduced ;
var bool: aux16956_BOOL:: var_is_introduced ;
var bool: aux16957_BOOL:: var_is_introduced ;
var 4..61: aux16958:: var_is_introduced ;
var bool: aux16959_BOOL:: var_is_introduced ;
var bool: aux16960_BOOL:: var_is_introduced ;
var bool: aux16961_BOOL:: var_is_introduced ;
var {0,1}: aux16961_INTEGER :: var_is_introduced ;
var bool: aux16962_BOOL:: var_is_introduced ;
var bool: aux16963_BOOL:: var_is_introduced ;
var 3..60: aux16964:: var_is_introduced ;
var bool: aux16965_BOOL:: var_is_introduced ;
var bool: aux16966_BOOL:: var_is_introduced ;
var bool: aux16967_BOOL:: var_is_introduced ;
var {0,1}: aux16967_INTEGER :: var_is_introduced ;
var bool: aux16968_BOOL:: var_is_introduced ;
var bool: aux16969_BOOL:: var_is_introduced ;
var 2..59: aux16970:: var_is_introduced ;
var bool: aux16971_BOOL:: var_is_introduced ;
var bool: aux16972_BOOL:: var_is_introduced ;
var bool: aux16973_BOOL:: var_is_introduced ;
var {0,1}: aux16973_INTEGER :: var_is_introduced ;
var bool: aux16974_BOOL:: var_is_introduced ;
var bool: aux16975_BOOL:: var_is_introduced ;
var 3..60: aux16976:: var_is_introduced ;
var bool: aux16977_BOOL:: var_is_introduced ;
var bool: aux16978_BOOL:: var_is_introduced ;
var bool: aux16979_BOOL:: var_is_introduced ;
var {0,1}: aux16979_INTEGER :: var_is_introduced ;
var bool: aux16980_BOOL:: var_is_introduced ;
var bool: aux16981_BOOL:: var_is_introduced ;
var 4..61: aux16982:: var_is_introduced ;
var bool: aux16983_BOOL:: var_is_introduced ;
var bool: aux16984_BOOL:: var_is_introduced ;
var bool: aux16985_BOOL:: var_is_introduced ;
var {0,1}: aux16985_INTEGER :: var_is_introduced ;
var bool: aux16986_BOOL:: var_is_introduced ;
var bool: aux16987_BOOL:: var_is_introduced ;
var 1..58: aux16988:: var_is_introduced ;
var bool: aux16989_BOOL:: var_is_introduced ;
var bool: aux16990_BOOL:: var_is_introduced ;
var bool: aux16991_BOOL:: var_is_introduced ;
var {0,1}: aux16991_INTEGER :: var_is_introduced ;
var bool: aux16992_BOOL:: var_is_introduced ;
var bool: aux16993_BOOL:: var_is_introduced ;
var 4..61: aux16994:: var_is_introduced ;
var bool: aux16995_BOOL:: var_is_introduced ;
var bool: aux16996_BOOL:: var_is_introduced ;
var bool: aux16997_BOOL:: var_is_introduced ;
var {0,1}: aux16997_INTEGER :: var_is_introduced ;
var bool: aux16998_BOOL:: var_is_introduced ;
var bool: aux16999_BOOL:: var_is_introduced ;
var 2..59: aux17000:: var_is_introduced ;
var bool: aux17001_BOOL:: var_is_introduced ;
var bool: aux17002_BOOL:: var_is_introduced ;
var bool: aux17003_BOOL:: var_is_introduced ;
var {0,1}: aux17003_INTEGER :: var_is_introduced ;
var bool: aux17004_BOOL:: var_is_introduced ;
var 1..58: aux17005:: var_is_introduced ;
var bool: aux17006_BOOL:: var_is_introduced ;
var bool: aux17007_BOOL:: var_is_introduced ;
var {0,1}: aux17007_INTEGER :: var_is_introduced ;
var bool: aux17008_BOOL:: var_is_introduced ;
var bool: aux17009_BOOL:: var_is_introduced ;
var bool: aux17010_BOOL:: var_is_introduced ;
var 4..61: aux17011:: var_is_introduced ;
var bool: aux17012_BOOL:: var_is_introduced ;
var bool: aux17013_BOOL:: var_is_introduced ;
var bool: aux17014_BOOL:: var_is_introduced ;
var {0,1}: aux17014_INTEGER :: var_is_introduced ;
var bool: aux17015_BOOL:: var_is_introduced ;
var bool: aux17016_BOOL:: var_is_introduced ;
var 4..61: aux17017:: var_is_introduced ;
var bool: aux17018_BOOL:: var_is_introduced ;
var bool: aux17019_BOOL:: var_is_introduced ;
var bool: aux17020_BOOL:: var_is_introduced ;
var {0,1}: aux17020_INTEGER :: var_is_introduced ;
var bool: aux17021_BOOL:: var_is_introduced ;
var bool: aux17022_BOOL:: var_is_introduced ;
var 3..60: aux17023:: var_is_introduced ;
var bool: aux17024_BOOL:: var_is_introduced ;
var bool: aux17025_BOOL:: var_is_introduced ;
var bool: aux17026_BOOL:: var_is_introduced ;
var {0,1}: aux17026_INTEGER :: var_is_introduced ;
var bool: aux17027_BOOL:: var_is_introduced ;
var bool: aux17028_BOOL:: var_is_introduced ;
var 2..59: aux17029:: var_is_introduced ;
var bool: aux17030_BOOL:: var_is_introduced ;
var bool: aux17031_BOOL:: var_is_introduced ;
var bool: aux17032_BOOL:: var_is_introduced ;
var {0,1}: aux17032_INTEGER :: var_is_introduced ;
var bool: aux17033_BOOL:: var_is_introduced ;
var bool: aux17034_BOOL:: var_is_introduced ;
var 3..60: aux17035:: var_is_introduced ;
var bool: aux17036_BOOL:: var_is_introduced ;
var bool: aux17037_BOOL:: var_is_introduced ;
var bool: aux17038_BOOL:: var_is_introduced ;
var {0,1}: aux17038_INTEGER :: var_is_introduced ;
var bool: aux17039_BOOL:: var_is_introduced ;
var bool: aux17040_BOOL:: var_is_introduced ;
var 2..59: aux17041:: var_is_introduced ;
var bool: aux17042_BOOL:: var_is_introduced ;
var bool: aux17043_BOOL:: var_is_introduced ;
var bool: aux17044_BOOL:: var_is_introduced ;
var {0,1}: aux17044_INTEGER :: var_is_introduced ;
var bool: aux17045_BOOL:: var_is_introduced ;
var bool: aux17046_BOOL:: var_is_introduced ;
var 3..60: aux17047:: var_is_introduced ;
var bool: aux17048_BOOL:: var_is_introduced ;
var bool: aux17049_BOOL:: var_is_introduced ;
var bool: aux17050_BOOL:: var_is_introduced ;
var {0,1}: aux17050_INTEGER :: var_is_introduced ;
var bool: aux17051_BOOL:: var_is_introduced ;
var bool: aux17052_BOOL:: var_is_introduced ;
var 2..59: aux17053:: var_is_introduced ;
var bool: aux17054_BOOL:: var_is_introduced ;
var bool: aux17055_BOOL:: var_is_introduced ;
var bool: aux17056_BOOL:: var_is_introduced ;
var {0,1}: aux17056_INTEGER :: var_is_introduced ;
var bool: aux17057_BOOL:: var_is_introduced ;
var bool: aux17058_BOOL:: var_is_introduced ;
var 2..59: aux17059:: var_is_introduced ;
var bool: aux17060_BOOL:: var_is_introduced ;
var bool: aux17061_BOOL:: var_is_introduced ;
var bool: aux17062_BOOL:: var_is_introduced ;
var {0,1}: aux17062_INTEGER :: var_is_introduced ;
var bool: aux17063_BOOL:: var_is_introduced ;
var bool: aux17064_BOOL:: var_is_introduced ;
var 5..62: aux17065:: var_is_introduced ;
var bool: aux17066_BOOL:: var_is_introduced ;
var bool: aux17067_BOOL:: var_is_introduced ;
var bool: aux17068_BOOL:: var_is_introduced ;
var {0,1}: aux17068_INTEGER :: var_is_introduced ;
var bool: aux17069_BOOL:: var_is_introduced ;
var bool: aux17070_BOOL:: var_is_introduced ;
var 3..60: aux17071:: var_is_introduced ;
var bool: aux17072_BOOL:: var_is_introduced ;
var bool: aux17073_BOOL:: var_is_introduced ;
var bool: aux17074_BOOL:: var_is_introduced ;
var {0,1}: aux17074_INTEGER :: var_is_introduced ;
var bool: aux17075_BOOL:: var_is_introduced ;
var bool: aux17076_BOOL:: var_is_introduced ;
var 4..61: aux17077:: var_is_introduced ;
var bool: aux17078_BOOL:: var_is_introduced ;
var bool: aux17079_BOOL:: var_is_introduced ;
var bool: aux17080_BOOL:: var_is_introduced ;
var {0,1}: aux17080_INTEGER :: var_is_introduced ;
var bool: aux17081_BOOL:: var_is_introduced ;
var bool: aux17082_BOOL:: var_is_introduced ;
var 3..60: aux17083:: var_is_introduced ;
var bool: aux17084_BOOL:: var_is_introduced ;
var bool: aux17085_BOOL:: var_is_introduced ;
var bool: aux17086_BOOL:: var_is_introduced ;
var {0,1}: aux17086_INTEGER :: var_is_introduced ;
var bool: aux17087_BOOL:: var_is_introduced ;
var bool: aux17088_BOOL:: var_is_introduced ;
var 2..59: aux17089:: var_is_introduced ;
var bool: aux17090_BOOL:: var_is_introduced ;
var bool: aux17091_BOOL:: var_is_introduced ;
var bool: aux17092_BOOL:: var_is_introduced ;
var {0,1}: aux17092_INTEGER :: var_is_introduced ;
var bool: aux17093_BOOL:: var_is_introduced ;
var bool: aux17094_BOOL:: var_is_introduced ;
var 1..58: aux17095:: var_is_introduced ;
var bool: aux17096_BOOL:: var_is_introduced ;
var bool: aux17097_BOOL:: var_is_introduced ;
var bool: aux17098_BOOL:: var_is_introduced ;
var {0,1}: aux17098_INTEGER :: var_is_introduced ;
var bool: aux17099_BOOL:: var_is_introduced ;
var bool: aux17100_BOOL:: var_is_introduced ;
var 4..61: aux17101:: var_is_introduced ;
var bool: aux17102_BOOL:: var_is_introduced ;
var bool: aux17103_BOOL:: var_is_introduced ;
var bool: aux17104_BOOL:: var_is_introduced ;
var {0,1}: aux17104_INTEGER :: var_is_introduced ;
var bool: aux17105_BOOL:: var_is_introduced ;
var bool: aux17106_BOOL:: var_is_introduced ;
var 1..58: aux17107:: var_is_introduced ;
var bool: aux17108_BOOL:: var_is_introduced ;
var bool: aux17109_BOOL:: var_is_introduced ;
var bool: aux17110_BOOL:: var_is_introduced ;
var {0,1}: aux17110_INTEGER :: var_is_introduced ;
var bool: aux17111_BOOL:: var_is_introduced ;
var bool: aux17112_BOOL:: var_is_introduced ;
var 4..61: aux17113:: var_is_introduced ;
var bool: aux17114_BOOL:: var_is_introduced ;
var bool: aux17115_BOOL:: var_is_introduced ;
var bool: aux17116_BOOL:: var_is_introduced ;
var {0,1}: aux17116_INTEGER :: var_is_introduced ;
var bool: aux17117_BOOL:: var_is_introduced ;
var bool: aux17118_BOOL:: var_is_introduced ;
var 2..59: aux17119:: var_is_introduced ;
var bool: aux17120_BOOL:: var_is_introduced ;
var bool: aux17121_BOOL:: var_is_introduced ;
var bool: aux17122_BOOL:: var_is_introduced ;
var {0,1}: aux17122_INTEGER :: var_is_introduced ;
var bool: aux17123_BOOL:: var_is_introduced ;
var 3..60: aux17124:: var_is_introduced ;
var bool: aux17125_BOOL:: var_is_introduced ;
var bool: aux17126_BOOL:: var_is_introduced ;
var {0,1}: aux17126_INTEGER :: var_is_introduced ;
var bool: aux17127_BOOL:: var_is_introduced ;
var bool: aux17128_BOOL:: var_is_introduced ;
var bool: aux17129_BOOL:: var_is_introduced ;
var bool: aux17130_BOOL:: var_is_introduced ;
var 2..59: aux17131:: var_is_introduced ;
var bool: aux17132_BOOL:: var_is_introduced ;
var bool: aux17133_BOOL:: var_is_introduced ;
var bool: aux17134_BOOL:: var_is_introduced ;
var {0,1}: aux17134_INTEGER :: var_is_introduced ;
var 4..61: aux17135:: var_is_introduced ;
var bool: aux17136_BOOL:: var_is_introduced ;
var bool: aux17137_BOOL:: var_is_introduced ;
var bool: aux17138_BOOL:: var_is_introduced ;
var bool: aux17139_BOOL:: var_is_introduced ;
var bool: aux17140_BOOL:: var_is_introduced ;
var {0,1}: aux17140_INTEGER :: var_is_introduced ;
var 4..61: aux17141:: var_is_introduced ;
var bool: aux17142_BOOL:: var_is_introduced ;
var bool: aux17143_BOOL:: var_is_introduced ;
var bool: aux17144_BOOL:: var_is_introduced ;
var bool: aux17145_BOOL:: var_is_introduced ;
var bool: aux17146_BOOL:: var_is_introduced ;
var {0,1}: aux17146_INTEGER :: var_is_introduced ;
var 3..60: aux17147:: var_is_introduced ;
var bool: aux17148_BOOL:: var_is_introduced ;
var bool: aux17149_BOOL:: var_is_introduced ;
var bool: aux17150_BOOL:: var_is_introduced ;
var bool: aux17151_BOOL:: var_is_introduced ;
var bool: aux17152_BOOL:: var_is_introduced ;
var {0,1}: aux17152_INTEGER :: var_is_introduced ;
var 2..59: aux17153:: var_is_introduced ;
var bool: aux17154_BOOL:: var_is_introduced ;
var bool: aux17155_BOOL:: var_is_introduced ;
var bool: aux17156_BOOL:: var_is_introduced ;
var bool: aux17157_BOOL:: var_is_introduced ;
var bool: aux17158_BOOL:: var_is_introduced ;
var {0,1}: aux17158_INTEGER :: var_is_introduced ;
var 3..60: aux17159:: var_is_introduced ;
var bool: aux17160_BOOL:: var_is_introduced ;
var bool: aux17161_BOOL:: var_is_introduced ;
var bool: aux17162_BOOL:: var_is_introduced ;
var bool: aux17163_BOOL:: var_is_introduced ;
var bool: aux17164_BOOL:: var_is_introduced ;
var {0,1}: aux17164_INTEGER :: var_is_introduced ;
var 2..59: aux17165:: var_is_introduced ;
var bool: aux17166_BOOL:: var_is_introduced ;
var bool: aux17167_BOOL:: var_is_introduced ;
var bool: aux17168_BOOL:: var_is_introduced ;
var bool: aux17169_BOOL:: var_is_introduced ;
var bool: aux17170_BOOL:: var_is_introduced ;
var {0,1}: aux17170_INTEGER :: var_is_introduced ;
var 3..60: aux17171:: var_is_introduced ;
var bool: aux17172_BOOL:: var_is_introduced ;
var bool: aux17173_BOOL:: var_is_introduced ;
var bool: aux17174_BOOL:: var_is_introduced ;
var bool: aux17175_BOOL:: var_is_introduced ;
var bool: aux17176_BOOL:: var_is_introduced ;
var {0,1}: aux17176_INTEGER :: var_is_introduced ;
var 2..59: aux17177:: var_is_introduced ;
var bool: aux17178_BOOL:: var_is_introduced ;
var bool: aux17179_BOOL:: var_is_introduced ;
var bool: aux17180_BOOL:: var_is_introduced ;
var bool: aux17181_BOOL:: var_is_introduced ;
var bool: aux17182_BOOL:: var_is_introduced ;
var {0,1}: aux17182_INTEGER :: var_is_introduced ;
var 2..59: aux17183:: var_is_introduced ;
var bool: aux17184_BOOL:: var_is_introduced ;
var bool: aux17185_BOOL:: var_is_introduced ;
var bool: aux17186_BOOL:: var_is_introduced ;
var bool: aux17187_BOOL:: var_is_introduced ;
var bool: aux17188_BOOL:: var_is_introduced ;
var {0,1}: aux17188_INTEGER :: var_is_introduced ;
var 3..60: aux17189:: var_is_introduced ;
var bool: aux17190_BOOL:: var_is_introduced ;
var bool: aux17191_BOOL:: var_is_introduced ;
var bool: aux17192_BOOL:: var_is_introduced ;
var bool: aux17193_BOOL:: var_is_introduced ;
var bool: aux17194_BOOL:: var_is_introduced ;
var {0,1}: aux17194_INTEGER :: var_is_introduced ;
var 5..62: aux17195:: var_is_introduced ;
var bool: aux17196_BOOL:: var_is_introduced ;
var bool: aux17197_BOOL:: var_is_introduced ;
var bool: aux17198_BOOL:: var_is_introduced ;
var bool: aux17199_BOOL:: var_is_introduced ;
var bool: aux17200_BOOL:: var_is_introduced ;
var {0,1}: aux17200_INTEGER :: var_is_introduced ;
var 4..61: aux17201:: var_is_introduced ;
var bool: aux17202_BOOL:: var_is_introduced ;
var bool: aux17203_BOOL:: var_is_introduced ;
var bool: aux17204_BOOL:: var_is_introduced ;
var bool: aux17205_BOOL:: var_is_introduced ;
var bool: aux17206_BOOL:: var_is_introduced ;
var {0,1}: aux17206_INTEGER :: var_is_introduced ;
var 3..60: aux17207:: var_is_introduced ;
var bool: aux17208_BOOL:: var_is_introduced ;
var bool: aux17209_BOOL:: var_is_introduced ;
var bool: aux17210_BOOL:: var_is_introduced ;
var bool: aux17211_BOOL:: var_is_introduced ;
var bool: aux17212_BOOL:: var_is_introduced ;
var {0,1}: aux17212_INTEGER :: var_is_introduced ;
var 2..59: aux17213:: var_is_introduced ;
var bool: aux17214_BOOL:: var_is_introduced ;
var bool: aux17215_BOOL:: var_is_introduced ;
var bool: aux17216_BOOL:: var_is_introduced ;
var bool: aux17217_BOOL:: var_is_introduced ;
var bool: aux17218_BOOL:: var_is_introduced ;
var {0,1}: aux17218_INTEGER :: var_is_introduced ;
var 1..58: aux17219:: var_is_introduced ;
var bool: aux17220_BOOL:: var_is_introduced ;
var bool: aux17221_BOOL:: var_is_introduced ;
var bool: aux17222_BOOL:: var_is_introduced ;
var bool: aux17223_BOOL:: var_is_introduced ;
var bool: aux17224_BOOL:: var_is_introduced ;
var {0,1}: aux17224_INTEGER :: var_is_introduced ;
var 3..60: aux17225:: var_is_introduced ;
var bool: aux17226_BOOL:: var_is_introduced ;
var bool: aux17227_BOOL:: var_is_introduced ;
var bool: aux17228_BOOL:: var_is_introduced ;
var bool: aux17229_BOOL:: var_is_introduced ;
var bool: aux17230_BOOL:: var_is_introduced ;
var {0,1}: aux17230_INTEGER :: var_is_introduced ;
var 1..58: aux17231:: var_is_introduced ;
var bool: aux17232_BOOL:: var_is_introduced ;
var bool: aux17233_BOOL:: var_is_introduced ;
var bool: aux17234_BOOL:: var_is_introduced ;
var bool: aux17235_BOOL:: var_is_introduced ;
var bool: aux17236_BOOL:: var_is_introduced ;
var {0,1}: aux17236_INTEGER :: var_is_introduced ;
var 4..61: aux17237:: var_is_introduced ;
var bool: aux17238_BOOL:: var_is_introduced ;
var bool: aux17239_BOOL:: var_is_introduced ;
var bool: aux17240_BOOL:: var_is_introduced ;
var bool: aux17241_BOOL:: var_is_introduced ;
var bool: aux17242_BOOL:: var_is_introduced ;
var {0,1}: aux17242_INTEGER :: var_is_introduced ;
var 4..61: aux17243:: var_is_introduced ;
var bool: aux17244_BOOL:: var_is_introduced ;
var bool: aux17245_BOOL:: var_is_introduced ;
var bool: aux17246_BOOL:: var_is_introduced ;
var bool: aux17247_BOOL:: var_is_introduced ;
var bool: aux17248_BOOL:: var_is_introduced ;
var {0,1}: aux17248_INTEGER :: var_is_introduced ;
var bool: aux17249_BOOL:: var_is_introduced ;
var 4..61: aux17250:: var_is_introduced ;
var bool: aux17251_BOOL:: var_is_introduced ;
var bool: aux17252_BOOL:: var_is_introduced ;
var bool: aux17253_BOOL:: var_is_introduced ;
var {0,1}: aux17253_INTEGER :: var_is_introduced ;
var 4..61: aux17254:: var_is_introduced ;
var bool: aux17255_BOOL:: var_is_introduced ;
var bool: aux17256_BOOL:: var_is_introduced ;
var bool: aux17257_BOOL:: var_is_introduced ;
var bool: aux17258_BOOL:: var_is_introduced ;
var bool: aux17259_BOOL:: var_is_introduced ;
var {0,1}: aux17259_INTEGER :: var_is_introduced ;
var 4..61: aux17260:: var_is_introduced ;
var bool: aux17261_BOOL:: var_is_introduced ;
var bool: aux17262_BOOL:: var_is_introduced ;
var bool: aux17263_BOOL:: var_is_introduced ;
var bool: aux17264_BOOL:: var_is_introduced ;
var bool: aux17265_BOOL:: var_is_introduced ;
var {0,1}: aux17265_INTEGER :: var_is_introduced ;
var 3..60: aux17266:: var_is_introduced ;
var bool: aux17267_BOOL:: var_is_introduced ;
var bool: aux17268_BOOL:: var_is_introduced ;
var bool: aux17269_BOOL:: var_is_introduced ;
var bool: aux17270_BOOL:: var_is_introduced ;
var bool: aux17271_BOOL:: var_is_introduced ;
var {0,1}: aux17271_INTEGER :: var_is_introduced ;
var 2..59: aux17272:: var_is_introduced ;
var bool: aux17273_BOOL:: var_is_introduced ;
var bool: aux17274_BOOL:: var_is_introduced ;
var bool: aux17275_BOOL:: var_is_introduced ;
var bool: aux17276_BOOL:: var_is_introduced ;
var bool: aux17277_BOOL:: var_is_introduced ;
var {0,1}: aux17277_INTEGER :: var_is_introduced ;
var 3..60: aux17278:: var_is_introduced ;
var bool: aux17279_BOOL:: var_is_introduced ;
var bool: aux17280_BOOL:: var_is_introduced ;
var bool: aux17281_BOOL:: var_is_introduced ;
var bool: aux17282_BOOL:: var_is_introduced ;
var bool: aux17283_BOOL:: var_is_introduced ;
var {0,1}: aux17283_INTEGER :: var_is_introduced ;
var 2..59: aux17284:: var_is_introduced ;
var bool: aux17285_BOOL:: var_is_introduced ;
var bool: aux17286_BOOL:: var_is_introduced ;
var bool: aux17287_BOOL:: var_is_introduced ;
var bool: aux17288_BOOL:: var_is_introduced ;
var bool: aux17289_BOOL:: var_is_introduced ;
var {0,1}: aux17289_INTEGER :: var_is_introduced ;
var 3..60: aux17290:: var_is_introduced ;
var bool: aux17291_BOOL:: var_is_introduced ;
var bool: aux17292_BOOL:: var_is_introduced ;
var bool: aux17293_BOOL:: var_is_introduced ;
var bool: aux17294_BOOL:: var_is_introduced ;
var bool: aux17295_BOOL:: var_is_introduced ;
var {0,1}: aux17295_INTEGER :: var_is_introduced ;
var 2..59: aux17296:: var_is_introduced ;
var bool: aux17297_BOOL:: var_is_introduced ;
var bool: aux17298_BOOL:: var_is_introduced ;
var bool: aux17299_BOOL:: var_is_introduced ;
var bool: aux17300_BOOL:: var_is_introduced ;
var bool: aux17301_BOOL:: var_is_introduced ;
var {0,1}: aux17301_INTEGER :: var_is_introduced ;
var 2..59: aux17302:: var_is_introduced ;
var bool: aux17303_BOOL:: var_is_introduced ;
var bool: aux17304_BOOL:: var_is_introduced ;
var bool: aux17305_BOOL:: var_is_introduced ;
var bool: aux17306_BOOL:: var_is_introduced ;
var bool: aux17307_BOOL:: var_is_introduced ;
var {0,1}: aux17307_INTEGER :: var_is_introduced ;
var 3..60: aux17308:: var_is_introduced ;
var bool: aux17309_BOOL:: var_is_introduced ;
var bool: aux17310_BOOL:: var_is_introduced ;
var bool: aux17311_BOOL:: var_is_introduced ;
var bool: aux17312_BOOL:: var_is_introduced ;
var bool: aux17313_BOOL:: var_is_introduced ;
var {0,1}: aux17313_INTEGER :: var_is_introduced ;
var 5..62: aux17314:: var_is_introduced ;
var bool: aux17315_BOOL:: var_is_introduced ;
var bool: aux17316_BOOL:: var_is_introduced ;
var bool: aux17317_BOOL:: var_is_introduced ;
var bool: aux17318_BOOL:: var_is_introduced ;
var bool: aux17319_BOOL:: var_is_introduced ;
var {0,1}: aux17319_INTEGER :: var_is_introduced ;
var 3..60: aux17320:: var_is_introduced ;
var bool: aux17321_BOOL:: var_is_introduced ;
var bool: aux17322_BOOL:: var_is_introduced ;
var bool: aux17323_BOOL:: var_is_introduced ;
var bool: aux17324_BOOL:: var_is_introduced ;
var bool: aux17325_BOOL:: var_is_introduced ;
var {0,1}: aux17325_INTEGER :: var_is_introduced ;
var 2..59: aux17326:: var_is_introduced ;
var bool: aux17327_BOOL:: var_is_introduced ;
var bool: aux17328_BOOL:: var_is_introduced ;
var bool: aux17329_BOOL:: var_is_introduced ;
var bool: aux17330_BOOL:: var_is_introduced ;
var bool: aux17331_BOOL:: var_is_introduced ;
var {0,1}: aux17331_INTEGER :: var_is_introduced ;
var 1..58: aux17332:: var_is_introduced ;
var bool: aux17333_BOOL:: var_is_introduced ;
var bool: aux17334_BOOL:: var_is_introduced ;
var bool: aux17335_BOOL:: var_is_introduced ;
var bool: aux17336_BOOL:: var_is_introduced ;
var bool: aux17337_BOOL:: var_is_introduced ;
var {0,1}: aux17337_INTEGER :: var_is_introduced ;
var 3..60: aux17338:: var_is_introduced ;
var bool: aux17339_BOOL:: var_is_introduced ;
var bool: aux17340_BOOL:: var_is_introduced ;
var bool: aux17341_BOOL:: var_is_introduced ;
var bool: aux17342_BOOL:: var_is_introduced ;
var bool: aux17343_BOOL:: var_is_introduced ;
var {0,1}: aux17343_INTEGER :: var_is_introduced ;
var 1..58: aux17344:: var_is_introduced ;
var bool: aux17345_BOOL:: var_is_introduced ;
var bool: aux17346_BOOL:: var_is_introduced ;
var bool: aux17347_BOOL:: var_is_introduced ;
var bool: aux17348_BOOL:: var_is_introduced ;
var bool: aux17349_BOOL:: var_is_introduced ;
var {0,1}: aux17349_INTEGER :: var_is_introduced ;
var 4..61: aux17350:: var_is_introduced ;
var bool: aux17351_BOOL:: var_is_introduced ;
var bool: aux17352_BOOL:: var_is_introduced ;
var bool: aux17353_BOOL:: var_is_introduced ;
var bool: aux17354_BOOL:: var_is_introduced ;
var bool: aux17355_BOOL:: var_is_introduced ;
var {0,1}: aux17355_INTEGER :: var_is_introduced ;
var 4..61: aux17356:: var_is_introduced ;
var bool: aux17357_BOOL:: var_is_introduced ;
var bool: aux17358_BOOL:: var_is_introduced ;
var bool: aux17359_BOOL:: var_is_introduced ;
var bool: aux17360_BOOL:: var_is_introduced ;
var bool: aux17361_BOOL:: var_is_introduced ;
var {0,1}: aux17361_INTEGER :: var_is_introduced ;
var 2..59: aux17362:: var_is_introduced ;
var bool: aux17363_BOOL:: var_is_introduced ;
var bool: aux17364_BOOL:: var_is_introduced ;
var bool: aux17365_BOOL:: var_is_introduced ;
var bool: aux17366_BOOL:: var_is_introduced ;
var bool: aux17367_BOOL:: var_is_introduced ;
var {0,1}: aux17367_INTEGER :: var_is_introduced ;
var bool: aux17368_BOOL:: var_is_introduced ;
var 2..59: aux17369:: var_is_introduced ;
var bool: aux17370_BOOL:: var_is_introduced ;
var bool: aux17371_BOOL:: var_is_introduced ;
var bool: aux17372_BOOL:: var_is_introduced ;
var {0,1}: aux17372_INTEGER :: var_is_introduced ;
var 4..61: aux17373:: var_is_introduced ;
var bool: aux17374_BOOL:: var_is_introduced ;
var bool: aux17375_BOOL:: var_is_introduced ;
var bool: aux17376_BOOL:: var_is_introduced ;
var bool: aux17377_BOOL:: var_is_introduced ;
var bool: aux17378_BOOL:: var_is_introduced ;
var {0,1}: aux17378_INTEGER :: var_is_introduced ;
var 4..61: aux17379:: var_is_introduced ;
var bool: aux17380_BOOL:: var_is_introduced ;
var bool: aux17381_BOOL:: var_is_introduced ;
var bool: aux17382_BOOL:: var_is_introduced ;
var bool: aux17383_BOOL:: var_is_introduced ;
var bool: aux17384_BOOL:: var_is_introduced ;
var {0,1}: aux17384_INTEGER :: var_is_introduced ;
var 3..60: aux17385:: var_is_introduced ;
var bool: aux17386_BOOL:: var_is_introduced ;
var bool: aux17387_BOOL:: var_is_introduced ;
var bool: aux17388_BOOL:: var_is_introduced ;
var bool: aux17389_BOOL:: var_is_introduced ;
var bool: aux17390_BOOL:: var_is_introduced ;
var {0,1}: aux17390_INTEGER :: var_is_introduced ;
var 2..59: aux17391:: var_is_introduced ;
var bool: aux17392_BOOL:: var_is_introduced ;
var bool: aux17393_BOOL:: var_is_introduced ;
var bool: aux17394_BOOL:: var_is_introduced ;
var bool: aux17395_BOOL:: var_is_introduced ;
var bool: aux17396_BOOL:: var_is_introduced ;
var {0,1}: aux17396_INTEGER :: var_is_introduced ;
var 3..60: aux17397:: var_is_introduced ;
var bool: aux17398_BOOL:: var_is_introduced ;
var bool: aux17399_BOOL:: var_is_introduced ;
var bool: aux17400_BOOL:: var_is_introduced ;
var bool: aux17401_BOOL:: var_is_introduced ;
var bool: aux17402_BOOL:: var_is_introduced ;
var {0,1}: aux17402_INTEGER :: var_is_introduced ;
var 2..59: aux17403:: var_is_introduced ;
var bool: aux17404_BOOL:: var_is_introduced ;
var bool: aux17405_BOOL:: var_is_introduced ;
var bool: aux17406_BOOL:: var_is_introduced ;
var bool: aux17407_BOOL:: var_is_introduced ;
var bool: aux17408_BOOL:: var_is_introduced ;
var {0,1}: aux17408_INTEGER :: var_is_introduced ;
var 3..60: aux17409:: var_is_introduced ;
var bool: aux17410_BOOL:: var_is_introduced ;
var bool: aux17411_BOOL:: var_is_introduced ;
var bool: aux17412_BOOL:: var_is_introduced ;
var bool: aux17413_BOOL:: var_is_introduced ;
var bool: aux17414_BOOL:: var_is_introduced ;
var {0,1}: aux17414_INTEGER :: var_is_introduced ;
var 2..59: aux17415:: var_is_introduced ;
var bool: aux17416_BOOL:: var_is_introduced ;
var bool: aux17417_BOOL:: var_is_introduced ;
var bool: aux17418_BOOL:: var_is_introduced ;
var bool: aux17419_BOOL:: var_is_introduced ;
var bool: aux17420_BOOL:: var_is_introduced ;
var {0,1}: aux17420_INTEGER :: var_is_introduced ;
var 2..59: aux17421:: var_is_introduced ;
var bool: aux17422_BOOL:: var_is_introduced ;
var bool: aux17423_BOOL:: var_is_introduced ;
var bool: aux17424_BOOL:: var_is_introduced ;
var bool: aux17425_BOOL:: var_is_introduced ;
var bool: aux17426_BOOL:: var_is_introduced ;
var {0,1}: aux17426_INTEGER :: var_is_introduced ;
var 3..60: aux17427:: var_is_introduced ;
var bool: aux17428_BOOL:: var_is_introduced ;
var bool: aux17429_BOOL:: var_is_introduced ;
var bool: aux17430_BOOL:: var_is_introduced ;
var bool: aux17431_BOOL:: var_is_introduced ;
var bool: aux17432_BOOL:: var_is_introduced ;
var {0,1}: aux17432_INTEGER :: var_is_introduced ;
var 5..62: aux17433:: var_is_introduced ;
var bool: aux17434_BOOL:: var_is_introduced ;
var bool: aux17435_BOOL:: var_is_introduced ;
var bool: aux17436_BOOL:: var_is_introduced ;
var bool: aux17437_BOOL:: var_is_introduced ;
var bool: aux17438_BOOL:: var_is_introduced ;
var {0,1}: aux17438_INTEGER :: var_is_introduced ;
var 4..61: aux17439:: var_is_introduced ;
var bool: aux17440_BOOL:: var_is_introduced ;
var bool: aux17441_BOOL:: var_is_introduced ;
var bool: aux17442_BOOL:: var_is_introduced ;
var bool: aux17443_BOOL:: var_is_introduced ;
var bool: aux17444_BOOL:: var_is_introduced ;
var {0,1}: aux17444_INTEGER :: var_is_introduced ;
var 3..60: aux17445:: var_is_introduced ;
var bool: aux17446_BOOL:: var_is_introduced ;
var bool: aux17447_BOOL:: var_is_introduced ;
var bool: aux17448_BOOL:: var_is_introduced ;
var bool: aux17449_BOOL:: var_is_introduced ;
var bool: aux17450_BOOL:: var_is_introduced ;
var {0,1}: aux17450_INTEGER :: var_is_introduced ;
var 1..58: aux17451:: var_is_introduced ;
var bool: aux17452_BOOL:: var_is_introduced ;
var bool: aux17453_BOOL:: var_is_introduced ;
var bool: aux17454_BOOL:: var_is_introduced ;
var bool: aux17455_BOOL:: var_is_introduced ;
var bool: aux17456_BOOL:: var_is_introduced ;
var {0,1}: aux17456_INTEGER :: var_is_introduced ;
var 3..60: aux17457:: var_is_introduced ;
var bool: aux17458_BOOL:: var_is_introduced ;
var bool: aux17459_BOOL:: var_is_introduced ;
var bool: aux17460_BOOL:: var_is_introduced ;
var bool: aux17461_BOOL:: var_is_introduced ;
var bool: aux17462_BOOL:: var_is_introduced ;
var {0,1}: aux17462_INTEGER :: var_is_introduced ;
var 1..58: aux17463:: var_is_introduced ;
var bool: aux17464_BOOL:: var_is_introduced ;
var bool: aux17465_BOOL:: var_is_introduced ;
var bool: aux17466_BOOL:: var_is_introduced ;
var bool: aux17467_BOOL:: var_is_introduced ;
var bool: aux17468_BOOL:: var_is_introduced ;
var {0,1}: aux17468_INTEGER :: var_is_introduced ;
var 4..61: aux17469:: var_is_introduced ;
var bool: aux17470_BOOL:: var_is_introduced ;
var bool: aux17471_BOOL:: var_is_introduced ;
var bool: aux17472_BOOL:: var_is_introduced ;
var bool: aux17473_BOOL:: var_is_introduced ;
var bool: aux17474_BOOL:: var_is_introduced ;
var {0,1}: aux17474_INTEGER :: var_is_introduced ;
var 4..61: aux17475:: var_is_introduced ;
var bool: aux17476_BOOL:: var_is_introduced ;
var bool: aux17477_BOOL:: var_is_introduced ;
var bool: aux17478_BOOL:: var_is_introduced ;
var bool: aux17479_BOOL:: var_is_introduced ;
var bool: aux17480_BOOL:: var_is_introduced ;
var {0,1}: aux17480_INTEGER :: var_is_introduced ;
var 2..59: aux17481:: var_is_introduced ;
var bool: aux17482_BOOL:: var_is_introduced ;
var bool: aux17483_BOOL:: var_is_introduced ;
var bool: aux17484_BOOL:: var_is_introduced ;
var bool: aux17485_BOOL:: var_is_introduced ;
var bool: aux17486_BOOL:: var_is_introduced ;
var {0,1}: aux17486_INTEGER :: var_is_introduced ;
var bool: aux17487_BOOL:: var_is_introduced ;
var 3..60: aux17488:: var_is_introduced ;
var bool: aux17489_BOOL:: var_is_introduced ;
var bool: aux17490_BOOL:: var_is_introduced ;
var bool: aux17491_BOOL:: var_is_introduced ;
var {0,1}: aux17491_INTEGER :: var_is_introduced ;
var 4..61: aux17492:: var_is_introduced ;
var bool: aux17493_BOOL:: var_is_introduced ;
var bool: aux17494_BOOL:: var_is_introduced ;
var bool: aux17495_BOOL:: var_is_introduced ;
var bool: aux17496_BOOL:: var_is_introduced ;
var bool: aux17497_BOOL:: var_is_introduced ;
var {0,1}: aux17497_INTEGER :: var_is_introduced ;
var 4..61: aux17498:: var_is_introduced ;
var bool: aux17499_BOOL:: var_is_introduced ;
var bool: aux17500_BOOL:: var_is_introduced ;
var bool: aux17501_BOOL:: var_is_introduced ;
var bool: aux17502_BOOL:: var_is_introduced ;
var bool: aux17503_BOOL:: var_is_introduced ;
var {0,1}: aux17503_INTEGER :: var_is_introduced ;
var 3..60: aux17504:: var_is_introduced ;
var bool: aux17505_BOOL:: var_is_introduced ;
var bool: aux17506_BOOL:: var_is_introduced ;
var bool: aux17507_BOOL:: var_is_introduced ;
var bool: aux17508_BOOL:: var_is_introduced ;
var bool: aux17509_BOOL:: var_is_introduced ;
var {0,1}: aux17509_INTEGER :: var_is_introduced ;
var 2..59: aux17510:: var_is_introduced ;
var bool: aux17511_BOOL:: var_is_introduced ;
var bool: aux17512_BOOL:: var_is_introduced ;
var bool: aux17513_BOOL:: var_is_introduced ;
var bool: aux17514_BOOL:: var_is_introduced ;
var bool: aux17515_BOOL:: var_is_introduced ;
var {0,1}: aux17515_INTEGER :: var_is_introduced ;
var 3..60: aux17516:: var_is_introduced ;
var bool: aux17517_BOOL:: var_is_introduced ;
var bool: aux17518_BOOL:: var_is_introduced ;
var bool: aux17519_BOOL:: var_is_introduced ;
var bool: aux17520_BOOL:: var_is_introduced ;
var bool: aux17521_BOOL:: var_is_introduced ;
var {0,1}: aux17521_INTEGER :: var_is_introduced ;
var 2..59: aux17522:: var_is_introduced ;
var bool: aux17523_BOOL:: var_is_introduced ;
var bool: aux17524_BOOL:: var_is_introduced ;
var bool: aux17525_BOOL:: var_is_introduced ;
var bool: aux17526_BOOL:: var_is_introduced ;
var bool: aux17527_BOOL:: var_is_introduced ;
var {0,1}: aux17527_INTEGER :: var_is_introduced ;
var 3..60: aux17528:: var_is_introduced ;
var bool: aux17529_BOOL:: var_is_introduced ;
var bool: aux17530_BOOL:: var_is_introduced ;
var bool: aux17531_BOOL:: var_is_introduced ;
var bool: aux17532_BOOL:: var_is_introduced ;
var bool: aux17533_BOOL:: var_is_introduced ;
var {0,1}: aux17533_INTEGER :: var_is_introduced ;
var 2..59: aux17534:: var_is_introduced ;
var bool: aux17535_BOOL:: var_is_introduced ;
var bool: aux17536_BOOL:: var_is_introduced ;
var bool: aux17537_BOOL:: var_is_introduced ;
var bool: aux17538_BOOL:: var_is_introduced ;
var bool: aux17539_BOOL:: var_is_introduced ;
var {0,1}: aux17539_INTEGER :: var_is_introduced ;
var 2..59: aux17540:: var_is_introduced ;
var bool: aux17541_BOOL:: var_is_introduced ;
var bool: aux17542_BOOL:: var_is_introduced ;
var bool: aux17543_BOOL:: var_is_introduced ;
var bool: aux17544_BOOL:: var_is_introduced ;
var bool: aux17545_BOOL:: var_is_introduced ;
var {0,1}: aux17545_INTEGER :: var_is_introduced ;
var 5..62: aux17546:: var_is_introduced ;
var bool: aux17547_BOOL:: var_is_introduced ;
var bool: aux17548_BOOL:: var_is_introduced ;
var bool: aux17549_BOOL:: var_is_introduced ;
var bool: aux17550_BOOL:: var_is_introduced ;
var bool: aux17551_BOOL:: var_is_introduced ;
var {0,1}: aux17551_INTEGER :: var_is_introduced ;
var 4..61: aux17552:: var_is_introduced ;
var bool: aux17553_BOOL:: var_is_introduced ;
var bool: aux17554_BOOL:: var_is_introduced ;
var bool: aux17555_BOOL:: var_is_introduced ;
var bool: aux17556_BOOL:: var_is_introduced ;
var bool: aux17557_BOOL:: var_is_introduced ;
var {0,1}: aux17557_INTEGER :: var_is_introduced ;
var 3..60: aux17558:: var_is_introduced ;
var bool: aux17559_BOOL:: var_is_introduced ;
var bool: aux17560_BOOL:: var_is_introduced ;
var bool: aux17561_BOOL:: var_is_introduced ;
var bool: aux17562_BOOL:: var_is_introduced ;
var bool: aux17563_BOOL:: var_is_introduced ;
var {0,1}: aux17563_INTEGER :: var_is_introduced ;
var 2..59: aux17564:: var_is_introduced ;
var bool: aux17565_BOOL:: var_is_introduced ;
var bool: aux17566_BOOL:: var_is_introduced ;
var bool: aux17567_BOOL:: var_is_introduced ;
var bool: aux17568_BOOL:: var_is_introduced ;
var bool: aux17569_BOOL:: var_is_introduced ;
var {0,1}: aux17569_INTEGER :: var_is_introduced ;
var 1..58: aux17570:: var_is_introduced ;
var bool: aux17571_BOOL:: var_is_introduced ;
var bool: aux17572_BOOL:: var_is_introduced ;
var bool: aux17573_BOOL:: var_is_introduced ;
var bool: aux17574_BOOL:: var_is_introduced ;
var bool: aux17575_BOOL:: var_is_introduced ;
var {0,1}: aux17575_INTEGER :: var_is_introduced ;
var 3..60: aux17576:: var_is_introduced ;
var bool: aux17577_BOOL:: var_is_introduced ;
var bool: aux17578_BOOL:: var_is_introduced ;
var bool: aux17579_BOOL:: var_is_introduced ;
var bool: aux17580_BOOL:: var_is_introduced ;
var bool: aux17581_BOOL:: var_is_introduced ;
var {0,1}: aux17581_INTEGER :: var_is_introduced ;
var 1..58: aux17582:: var_is_introduced ;
var bool: aux17583_BOOL:: var_is_introduced ;
var bool: aux17584_BOOL:: var_is_introduced ;
var bool: aux17585_BOOL:: var_is_introduced ;
var bool: aux17586_BOOL:: var_is_introduced ;
var bool: aux17587_BOOL:: var_is_introduced ;
var {0,1}: aux17587_INTEGER :: var_is_introduced ;
var 4..61: aux17588:: var_is_introduced ;
var bool: aux17589_BOOL:: var_is_introduced ;
var bool: aux17590_BOOL:: var_is_introduced ;
var bool: aux17591_BOOL:: var_is_introduced ;
var bool: aux17592_BOOL:: var_is_introduced ;
var bool: aux17593_BOOL:: var_is_introduced ;
var {0,1}: aux17593_INTEGER :: var_is_introduced ;
var 4..61: aux17594:: var_is_introduced ;
var bool: aux17595_BOOL:: var_is_introduced ;
var bool: aux17596_BOOL:: var_is_introduced ;
var bool: aux17597_BOOL:: var_is_introduced ;
var bool: aux17598_BOOL:: var_is_introduced ;
var bool: aux17599_BOOL:: var_is_introduced ;
var {0,1}: aux17599_INTEGER :: var_is_introduced ;
var 2..59: aux17600:: var_is_introduced ;
var bool: aux17601_BOOL:: var_is_introduced ;
var bool: aux17602_BOOL:: var_is_introduced ;
var bool: aux17603_BOOL:: var_is_introduced ;
var bool: aux17604_BOOL:: var_is_introduced ;
var bool: aux17605_BOOL:: var_is_introduced ;
var {0,1}: aux17605_INTEGER :: var_is_introduced ;
var bool: aux17606_BOOL:: var_is_introduced ;
var 2..59: aux17607:: var_is_introduced ;
var bool: aux17608_BOOL:: var_is_introduced ;
var bool: aux17609_BOOL:: var_is_introduced ;
var bool: aux17610_BOOL:: var_is_introduced ;
var {0,1}: aux17610_INTEGER :: var_is_introduced ;
var 4..61: aux17611:: var_is_introduced ;
var bool: aux17612_BOOL:: var_is_introduced ;
var bool: aux17613_BOOL:: var_is_introduced ;
var bool: aux17614_BOOL:: var_is_introduced ;
var bool: aux17615_BOOL:: var_is_introduced ;
var bool: aux17616_BOOL:: var_is_introduced ;
var {0,1}: aux17616_INTEGER :: var_is_introduced ;
var 4..61: aux17617:: var_is_introduced ;
var bool: aux17618_BOOL:: var_is_introduced ;
var bool: aux17619_BOOL:: var_is_introduced ;
var bool: aux17620_BOOL:: var_is_introduced ;
var bool: aux17621_BOOL:: var_is_introduced ;
var bool: aux17622_BOOL:: var_is_introduced ;
var {0,1}: aux17622_INTEGER :: var_is_introduced ;
var 3..60: aux17623:: var_is_introduced ;
var bool: aux17624_BOOL:: var_is_introduced ;
var bool: aux17625_BOOL:: var_is_introduced ;
var bool: aux17626_BOOL:: var_is_introduced ;
var bool: aux17627_BOOL:: var_is_introduced ;
var bool: aux17628_BOOL:: var_is_introduced ;
var {0,1}: aux17628_INTEGER :: var_is_introduced ;
var 2..59: aux17629:: var_is_introduced ;
var bool: aux17630_BOOL:: var_is_introduced ;
var bool: aux17631_BOOL:: var_is_introduced ;
var bool: aux17632_BOOL:: var_is_introduced ;
var bool: aux17633_BOOL:: var_is_introduced ;
var bool: aux17634_BOOL:: var_is_introduced ;
var {0,1}: aux17634_INTEGER :: var_is_introduced ;
var 3..60: aux17635:: var_is_introduced ;
var bool: aux17636_BOOL:: var_is_introduced ;
var bool: aux17637_BOOL:: var_is_introduced ;
var bool: aux17638_BOOL:: var_is_introduced ;
var bool: aux17639_BOOL:: var_is_introduced ;
var bool: aux17640_BOOL:: var_is_introduced ;
var {0,1}: aux17640_INTEGER :: var_is_introduced ;
var 2..59: aux17641:: var_is_introduced ;
var bool: aux17642_BOOL:: var_is_introduced ;
var bool: aux17643_BOOL:: var_is_introduced ;
var bool: aux17644_BOOL:: var_is_introduced ;
var bool: aux17645_BOOL:: var_is_introduced ;
var bool: aux17646_BOOL:: var_is_introduced ;
var {0,1}: aux17646_INTEGER :: var_is_introduced ;
var 3..60: aux17647:: var_is_introduced ;
var bool: aux17648_BOOL:: var_is_introduced ;
var bool: aux17649_BOOL:: var_is_introduced ;
var bool: aux17650_BOOL:: var_is_introduced ;
var bool: aux17651_BOOL:: var_is_introduced ;
var bool: aux17652_BOOL:: var_is_introduced ;
var {0,1}: aux17652_INTEGER :: var_is_introduced ;
var 2..59: aux17653:: var_is_introduced ;
var bool: aux17654_BOOL:: var_is_introduced ;
var bool: aux17655_BOOL:: var_is_introduced ;
var bool: aux17656_BOOL:: var_is_introduced ;
var bool: aux17657_BOOL:: var_is_introduced ;
var bool: aux17658_BOOL:: var_is_introduced ;
var {0,1}: aux17658_INTEGER :: var_is_introduced ;
var 3..60: aux17659:: var_is_introduced ;
var bool: aux17660_BOOL:: var_is_introduced ;
var bool: aux17661_BOOL:: var_is_introduced ;
var bool: aux17662_BOOL:: var_is_introduced ;
var bool: aux17663_BOOL:: var_is_introduced ;
var bool: aux17664_BOOL:: var_is_introduced ;
var {0,1}: aux17664_INTEGER :: var_is_introduced ;
var 5..62: aux17665:: var_is_introduced ;
var bool: aux17666_BOOL:: var_is_introduced ;
var bool: aux17667_BOOL:: var_is_introduced ;
var bool: aux17668_BOOL:: var_is_introduced ;
var bool: aux17669_BOOL:: var_is_introduced ;
var bool: aux17670_BOOL:: var_is_introduced ;
var {0,1}: aux17670_INTEGER :: var_is_introduced ;
var 4..61: aux17671:: var_is_introduced ;
var bool: aux17672_BOOL:: var_is_introduced ;
var bool: aux17673_BOOL:: var_is_introduced ;
var bool: aux17674_BOOL:: var_is_introduced ;
var bool: aux17675_BOOL:: var_is_introduced ;
var bool: aux17676_BOOL:: var_is_introduced ;
var {0,1}: aux17676_INTEGER :: var_is_introduced ;
var 3..60: aux17677:: var_is_introduced ;
var bool: aux17678_BOOL:: var_is_introduced ;
var bool: aux17679_BOOL:: var_is_introduced ;
var bool: aux17680_BOOL:: var_is_introduced ;
var bool: aux17681_BOOL:: var_is_introduced ;
var bool: aux17682_BOOL:: var_is_introduced ;
var {0,1}: aux17682_INTEGER :: var_is_introduced ;
var 2..59: aux17683:: var_is_introduced ;
var bool: aux17684_BOOL:: var_is_introduced ;
var bool: aux17685_BOOL:: var_is_introduced ;
var bool: aux17686_BOOL:: var_is_introduced ;
var bool: aux17687_BOOL:: var_is_introduced ;
var bool: aux17688_BOOL:: var_is_introduced ;
var {0,1}: aux17688_INTEGER :: var_is_introduced ;
var 1..58: aux17689:: var_is_introduced ;
var bool: aux17690_BOOL:: var_is_introduced ;
var bool: aux17691_BOOL:: var_is_introduced ;
var bool: aux17692_BOOL:: var_is_introduced ;
var bool: aux17693_BOOL:: var_is_introduced ;
var bool: aux17694_BOOL:: var_is_introduced ;
var {0,1}: aux17694_INTEGER :: var_is_introduced ;
var 3..60: aux17695:: var_is_introduced ;
var bool: aux17696_BOOL:: var_is_introduced ;
var bool: aux17697_BOOL:: var_is_introduced ;
var bool: aux17698_BOOL:: var_is_introduced ;
var bool: aux17699_BOOL:: var_is_introduced ;
var bool: aux17700_BOOL:: var_is_introduced ;
var {0,1}: aux17700_INTEGER :: var_is_introduced ;
var 1..58: aux17701:: var_is_introduced ;
var bool: aux17702_BOOL:: var_is_introduced ;
var bool: aux17703_BOOL:: var_is_introduced ;
var bool: aux17704_BOOL:: var_is_introduced ;
var bool: aux17705_BOOL:: var_is_introduced ;
var bool: aux17706_BOOL:: var_is_introduced ;
var {0,1}: aux17706_INTEGER :: var_is_introduced ;
var 4..61: aux17707:: var_is_introduced ;
var bool: aux17708_BOOL:: var_is_introduced ;
var bool: aux17709_BOOL:: var_is_introduced ;
var bool: aux17710_BOOL:: var_is_introduced ;
var bool: aux17711_BOOL:: var_is_introduced ;
var bool: aux17712_BOOL:: var_is_introduced ;
var {0,1}: aux17712_INTEGER :: var_is_introduced ;
var 4..61: aux17713:: var_is_introduced ;
var bool: aux17714_BOOL:: var_is_introduced ;
var bool: aux17715_BOOL:: var_is_introduced ;
var bool: aux17716_BOOL:: var_is_introduced ;
var bool: aux17717_BOOL:: var_is_introduced ;
var bool: aux17718_BOOL:: var_is_introduced ;
var {0,1}: aux17718_INTEGER :: var_is_introduced ;
var 2..59: aux17719:: var_is_introduced ;
var bool: aux17720_BOOL:: var_is_introduced ;
var bool: aux17721_BOOL:: var_is_introduced ;
var bool: aux17722_BOOL:: var_is_introduced ;
var bool: aux17723_BOOL:: var_is_introduced ;
var bool: aux17724_BOOL:: var_is_introduced ;
var {0,1}: aux17724_INTEGER :: var_is_introduced ;
var bool: aux17725_BOOL:: var_is_introduced ;
var 5..62: aux17726:: var_is_introduced ;
var bool: aux17727_BOOL:: var_is_introduced ;
var bool: aux17728_BOOL:: var_is_introduced ;
var bool: aux17729_BOOL:: var_is_introduced ;
var {0,1}: aux17729_INTEGER :: var_is_introduced ;
var 4..61: aux17730:: var_is_introduced ;
var bool: aux17731_BOOL:: var_is_introduced ;
var bool: aux17732_BOOL:: var_is_introduced ;
var bool: aux17733_BOOL:: var_is_introduced ;
var bool: aux17734_BOOL:: var_is_introduced ;
var bool: aux17735_BOOL:: var_is_introduced ;
var {0,1}: aux17735_INTEGER :: var_is_introduced ;
var 4..61: aux17736:: var_is_introduced ;
var bool: aux17737_BOOL:: var_is_introduced ;
var bool: aux17738_BOOL:: var_is_introduced ;
var bool: aux17739_BOOL:: var_is_introduced ;
var bool: aux17740_BOOL:: var_is_introduced ;
var bool: aux17741_BOOL:: var_is_introduced ;
var {0,1}: aux17741_INTEGER :: var_is_introduced ;
var 3..60: aux17742:: var_is_introduced ;
var bool: aux17743_BOOL:: var_is_introduced ;
var bool: aux17744_BOOL:: var_is_introduced ;
var bool: aux17745_BOOL:: var_is_introduced ;
var bool: aux17746_BOOL:: var_is_introduced ;
var bool: aux17747_BOOL:: var_is_introduced ;
var {0,1}: aux17747_INTEGER :: var_is_introduced ;
var 2..59: aux17748:: var_is_introduced ;
var bool: aux17749_BOOL:: var_is_introduced ;
var bool: aux17750_BOOL:: var_is_introduced ;
var bool: aux17751_BOOL:: var_is_introduced ;
var bool: aux17752_BOOL:: var_is_introduced ;
var bool: aux17753_BOOL:: var_is_introduced ;
var {0,1}: aux17753_INTEGER :: var_is_introduced ;
var 3..60: aux17754:: var_is_introduced ;
var bool: aux17755_BOOL:: var_is_introduced ;
var bool: aux17756_BOOL:: var_is_introduced ;
var bool: aux17757_BOOL:: var_is_introduced ;
var bool: aux17758_BOOL:: var_is_introduced ;
var bool: aux17759_BOOL:: var_is_introduced ;
var {0,1}: aux17759_INTEGER :: var_is_introduced ;
var 2..59: aux17760:: var_is_introduced ;
var bool: aux17761_BOOL:: var_is_introduced ;
var bool: aux17762_BOOL:: var_is_introduced ;
var bool: aux17763_BOOL:: var_is_introduced ;
var bool: aux17764_BOOL:: var_is_introduced ;
var bool: aux17765_BOOL:: var_is_introduced ;
var {0,1}: aux17765_INTEGER :: var_is_introduced ;
var 3..60: aux17766:: var_is_introduced ;
var bool: aux17767_BOOL:: var_is_introduced ;
var bool: aux17768_BOOL:: var_is_introduced ;
var bool: aux17769_BOOL:: var_is_introduced ;
var bool: aux17770_BOOL:: var_is_introduced ;
var bool: aux17771_BOOL:: var_is_introduced ;
var {0,1}: aux17771_INTEGER :: var_is_introduced ;
var 2..59: aux17772:: var_is_introduced ;
var bool: aux17773_BOOL:: var_is_introduced ;
var bool: aux17774_BOOL:: var_is_introduced ;
var bool: aux17775_BOOL:: var_is_introduced ;
var bool: aux17776_BOOL:: var_is_introduced ;
var bool: aux17777_BOOL:: var_is_introduced ;
var {0,1}: aux17777_INTEGER :: var_is_introduced ;
var 2..59: aux17778:: var_is_introduced ;
var bool: aux17779_BOOL:: var_is_introduced ;
var bool: aux17780_BOOL:: var_is_introduced ;
var bool: aux17781_BOOL:: var_is_introduced ;
var bool: aux17782_BOOL:: var_is_introduced ;
var bool: aux17783_BOOL:: var_is_introduced ;
var {0,1}: aux17783_INTEGER :: var_is_introduced ;
var 3..60: aux17784:: var_is_introduced ;
var bool: aux17785_BOOL:: var_is_introduced ;
var bool: aux17786_BOOL:: var_is_introduced ;
var bool: aux17787_BOOL:: var_is_introduced ;
var bool: aux17788_BOOL:: var_is_introduced ;
var bool: aux17789_BOOL:: var_is_introduced ;
var {0,1}: aux17789_INTEGER :: var_is_introduced ;
var 4..61: aux17790:: var_is_introduced ;
var bool: aux17791_BOOL:: var_is_introduced ;
var bool: aux17792_BOOL:: var_is_introduced ;
var bool: aux17793_BOOL:: var_is_introduced ;
var bool: aux17794_BOOL:: var_is_introduced ;
var bool: aux17795_BOOL:: var_is_introduced ;
var {0,1}: aux17795_INTEGER :: var_is_introduced ;
var 3..60: aux17796:: var_is_introduced ;
var bool: aux17797_BOOL:: var_is_introduced ;
var bool: aux17798_BOOL:: var_is_introduced ;
var bool: aux17799_BOOL:: var_is_introduced ;
var bool: aux17800_BOOL:: var_is_introduced ;
var bool: aux17801_BOOL:: var_is_introduced ;
var {0,1}: aux17801_INTEGER :: var_is_introduced ;
var 2..59: aux17802:: var_is_introduced ;
var bool: aux17803_BOOL:: var_is_introduced ;
var bool: aux17804_BOOL:: var_is_introduced ;
var bool: aux17805_BOOL:: var_is_introduced ;
var bool: aux17806_BOOL:: var_is_introduced ;
var bool: aux17807_BOOL:: var_is_introduced ;
var {0,1}: aux17807_INTEGER :: var_is_introduced ;
var 1..58: aux17808:: var_is_introduced ;
var bool: aux17809_BOOL:: var_is_introduced ;
var bool: aux17810_BOOL:: var_is_introduced ;
var bool: aux17811_BOOL:: var_is_introduced ;
var bool: aux17812_BOOL:: var_is_introduced ;
var bool: aux17813_BOOL:: var_is_introduced ;
var {0,1}: aux17813_INTEGER :: var_is_introduced ;
var 3..60: aux17814:: var_is_introduced ;
var bool: aux17815_BOOL:: var_is_introduced ;
var bool: aux17816_BOOL:: var_is_introduced ;
var bool: aux17817_BOOL:: var_is_introduced ;
var bool: aux17818_BOOL:: var_is_introduced ;
var bool: aux17819_BOOL:: var_is_introduced ;
var {0,1}: aux17819_INTEGER :: var_is_introduced ;
var 1..58: aux17820:: var_is_introduced ;
var bool: aux17821_BOOL:: var_is_introduced ;
var bool: aux17822_BOOL:: var_is_introduced ;
var bool: aux17823_BOOL:: var_is_introduced ;
var bool: aux17824_BOOL:: var_is_introduced ;
var bool: aux17825_BOOL:: var_is_introduced ;
var {0,1}: aux17825_INTEGER :: var_is_introduced ;
var 4..61: aux17826:: var_is_introduced ;
var bool: aux17827_BOOL:: var_is_introduced ;
var bool: aux17828_BOOL:: var_is_introduced ;
var bool: aux17829_BOOL:: var_is_introduced ;
var bool: aux17830_BOOL:: var_is_introduced ;
var bool: aux17831_BOOL:: var_is_introduced ;
var {0,1}: aux17831_INTEGER :: var_is_introduced ;
var 4..61: aux17832:: var_is_introduced ;
var bool: aux17833_BOOL:: var_is_introduced ;
var bool: aux17834_BOOL:: var_is_introduced ;
var bool: aux17835_BOOL:: var_is_introduced ;
var bool: aux17836_BOOL:: var_is_introduced ;
var bool: aux17837_BOOL:: var_is_introduced ;
var {0,1}: aux17837_INTEGER :: var_is_introduced ;
var 2..59: aux17838:: var_is_introduced ;
var bool: aux17839_BOOL:: var_is_introduced ;
var bool: aux17840_BOOL:: var_is_introduced ;
var bool: aux17841_BOOL:: var_is_introduced ;
var bool: aux17842_BOOL:: var_is_introduced ;
var bool: aux17843_BOOL:: var_is_introduced ;
var {0,1}: aux17843_INTEGER :: var_is_introduced ;
var bool: aux17844_BOOL:: var_is_introduced ;
var 3..60: aux17845:: var_is_introduced ;
var bool: aux17846_BOOL:: var_is_introduced ;
var bool: aux17847_BOOL:: var_is_introduced ;
var bool: aux17848_BOOL:: var_is_introduced ;
var {0,1}: aux17848_INTEGER :: var_is_introduced ;
var 4..61: aux17849:: var_is_introduced ;
var bool: aux17850_BOOL:: var_is_introduced ;
var bool: aux17851_BOOL:: var_is_introduced ;
var bool: aux17852_BOOL:: var_is_introduced ;
var bool: aux17853_BOOL:: var_is_introduced ;
var bool: aux17854_BOOL:: var_is_introduced ;
var {0,1}: aux17854_INTEGER :: var_is_introduced ;
var 4..61: aux17855:: var_is_introduced ;
var bool: aux17856_BOOL:: var_is_introduced ;
var bool: aux17857_BOOL:: var_is_introduced ;
var bool: aux17858_BOOL:: var_is_introduced ;
var bool: aux17859_BOOL:: var_is_introduced ;
var bool: aux17860_BOOL:: var_is_introduced ;
var {0,1}: aux17860_INTEGER :: var_is_introduced ;
var 3..60: aux17861:: var_is_introduced ;
var bool: aux17862_BOOL:: var_is_introduced ;
var bool: aux17863_BOOL:: var_is_introduced ;
var bool: aux17864_BOOL:: var_is_introduced ;
var bool: aux17865_BOOL:: var_is_introduced ;
var bool: aux17866_BOOL:: var_is_introduced ;
var {0,1}: aux17866_INTEGER :: var_is_introduced ;
var 2..59: aux17867:: var_is_introduced ;
var bool: aux17868_BOOL:: var_is_introduced ;
var bool: aux17869_BOOL:: var_is_introduced ;
var bool: aux17870_BOOL:: var_is_introduced ;
var bool: aux17871_BOOL:: var_is_introduced ;
var bool: aux17872_BOOL:: var_is_introduced ;
var {0,1}: aux17872_INTEGER :: var_is_introduced ;
var 3..60: aux17873:: var_is_introduced ;
var bool: aux17874_BOOL:: var_is_introduced ;
var bool: aux17875_BOOL:: var_is_introduced ;
var bool: aux17876_BOOL:: var_is_introduced ;
var bool: aux17877_BOOL:: var_is_introduced ;
var bool: aux17878_BOOL:: var_is_introduced ;
var {0,1}: aux17878_INTEGER :: var_is_introduced ;
var 2..59: aux17879:: var_is_introduced ;
var bool: aux17880_BOOL:: var_is_introduced ;
var bool: aux17881_BOOL:: var_is_introduced ;
var bool: aux17882_BOOL:: var_is_introduced ;
var bool: aux17883_BOOL:: var_is_introduced ;
var bool: aux17884_BOOL:: var_is_introduced ;
var {0,1}: aux17884_INTEGER :: var_is_introduced ;
var 3..60: aux17885:: var_is_introduced ;
var bool: aux17886_BOOL:: var_is_introduced ;
var bool: aux17887_BOOL:: var_is_introduced ;
var bool: aux17888_BOOL:: var_is_introduced ;
var bool: aux17889_BOOL:: var_is_introduced ;
var bool: aux17890_BOOL:: var_is_introduced ;
var {0,1}: aux17890_INTEGER :: var_is_introduced ;
var 2..59: aux17891:: var_is_introduced ;
var bool: aux17892_BOOL:: var_is_introduced ;
var bool: aux17893_BOOL:: var_is_introduced ;
var bool: aux17894_BOOL:: var_is_introduced ;
var bool: aux17895_BOOL:: var_is_introduced ;
var bool: aux17896_BOOL:: var_is_introduced ;
var {0,1}: aux17896_INTEGER :: var_is_introduced ;
var 2..59: aux17897:: var_is_introduced ;
var bool: aux17898_BOOL:: var_is_introduced ;
var bool: aux17899_BOOL:: var_is_introduced ;
var bool: aux17900_BOOL:: var_is_introduced ;
var bool: aux17901_BOOL:: var_is_introduced ;
var bool: aux17902_BOOL:: var_is_introduced ;
var {0,1}: aux17902_INTEGER :: var_is_introduced ;
var 3..60: aux17903:: var_is_introduced ;
var bool: aux17904_BOOL:: var_is_introduced ;
var bool: aux17905_BOOL:: var_is_introduced ;
var bool: aux17906_BOOL:: var_is_introduced ;
var bool: aux17907_BOOL:: var_is_introduced ;
var bool: aux17908_BOOL:: var_is_introduced ;
var {0,1}: aux17908_INTEGER :: var_is_introduced ;
var 5..62: aux17909:: var_is_introduced ;
var bool: aux17910_BOOL:: var_is_introduced ;
var bool: aux17911_BOOL:: var_is_introduced ;
var bool: aux17912_BOOL:: var_is_introduced ;
var bool: aux17913_BOOL:: var_is_introduced ;
var bool: aux17914_BOOL:: var_is_introduced ;
var {0,1}: aux17914_INTEGER :: var_is_introduced ;
var 4..61: aux17915:: var_is_introduced ;
var bool: aux17916_BOOL:: var_is_introduced ;
var bool: aux17917_BOOL:: var_is_introduced ;
var bool: aux17918_BOOL:: var_is_introduced ;
var bool: aux17919_BOOL:: var_is_introduced ;
var bool: aux17920_BOOL:: var_is_introduced ;
var {0,1}: aux17920_INTEGER :: var_is_introduced ;
var 3..60: aux17921:: var_is_introduced ;
var bool: aux17922_BOOL:: var_is_introduced ;
var bool: aux17923_BOOL:: var_is_introduced ;
var bool: aux17924_BOOL:: var_is_introduced ;
var bool: aux17925_BOOL:: var_is_introduced ;
var bool: aux17926_BOOL:: var_is_introduced ;
var {0,1}: aux17926_INTEGER :: var_is_introduced ;
var 2..59: aux17927:: var_is_introduced ;
var bool: aux17928_BOOL:: var_is_introduced ;
var bool: aux17929_BOOL:: var_is_introduced ;
var bool: aux17930_BOOL:: var_is_introduced ;
var bool: aux17931_BOOL:: var_is_introduced ;
var bool: aux17932_BOOL:: var_is_introduced ;
var {0,1}: aux17932_INTEGER :: var_is_introduced ;
var 1..58: aux17933:: var_is_introduced ;
var bool: aux17934_BOOL:: var_is_introduced ;
var bool: aux17935_BOOL:: var_is_introduced ;
var bool: aux17936_BOOL:: var_is_introduced ;
var bool: aux17937_BOOL:: var_is_introduced ;
var bool: aux17938_BOOL:: var_is_introduced ;
var {0,1}: aux17938_INTEGER :: var_is_introduced ;
var 1..58: aux17939:: var_is_introduced ;
var bool: aux17940_BOOL:: var_is_introduced ;
var bool: aux17941_BOOL:: var_is_introduced ;
var bool: aux17942_BOOL:: var_is_introduced ;
var bool: aux17943_BOOL:: var_is_introduced ;
var bool: aux17944_BOOL:: var_is_introduced ;
var {0,1}: aux17944_INTEGER :: var_is_introduced ;
var 4..61: aux17945:: var_is_introduced ;
var bool: aux17946_BOOL:: var_is_introduced ;
var bool: aux17947_BOOL:: var_is_introduced ;
var bool: aux17948_BOOL:: var_is_introduced ;
var bool: aux17949_BOOL:: var_is_introduced ;
var bool: aux17950_BOOL:: var_is_introduced ;
var {0,1}: aux17950_INTEGER :: var_is_introduced ;
var 4..61: aux17951:: var_is_introduced ;
var bool: aux17952_BOOL:: var_is_introduced ;
var bool: aux17953_BOOL:: var_is_introduced ;
var bool: aux17954_BOOL:: var_is_introduced ;
var bool: aux17955_BOOL:: var_is_introduced ;
var bool: aux17956_BOOL:: var_is_introduced ;
var {0,1}: aux17956_INTEGER :: var_is_introduced ;
var 2..59: aux17957:: var_is_introduced ;
var bool: aux17958_BOOL:: var_is_introduced ;
var bool: aux17959_BOOL:: var_is_introduced ;
var bool: aux17960_BOOL:: var_is_introduced ;
var bool: aux17961_BOOL:: var_is_introduced ;
var bool: aux17962_BOOL:: var_is_introduced ;
var {0,1}: aux17962_INTEGER :: var_is_introduced ;
var bool: aux17963_BOOL:: var_is_introduced ;
var 3..60: aux17964:: var_is_introduced ;
var bool: aux17965_BOOL:: var_is_introduced ;
var bool: aux17966_BOOL:: var_is_introduced ;
var bool: aux17967_BOOL:: var_is_introduced ;
var {0,1}: aux17967_INTEGER :: var_is_introduced ;
var 4..61: aux17968:: var_is_introduced ;
var bool: aux17969_BOOL:: var_is_introduced ;
var bool: aux17970_BOOL:: var_is_introduced ;
var bool: aux17971_BOOL:: var_is_introduced ;
var bool: aux17972_BOOL:: var_is_introduced ;
var bool: aux17973_BOOL:: var_is_introduced ;
var {0,1}: aux17973_INTEGER :: var_is_introduced ;
var 4..61: aux17974:: var_is_introduced ;
var bool: aux17975_BOOL:: var_is_introduced ;
var bool: aux17976_BOOL:: var_is_introduced ;
var bool: aux17977_BOOL:: var_is_introduced ;
var bool: aux17978_BOOL:: var_is_introduced ;
var bool: aux17979_BOOL:: var_is_introduced ;
var {0,1}: aux17979_INTEGER :: var_is_introduced ;
var 3..60: aux17980:: var_is_introduced ;
var bool: aux17981_BOOL:: var_is_introduced ;
var bool: aux17982_BOOL:: var_is_introduced ;
var bool: aux17983_BOOL:: var_is_introduced ;
var bool: aux17984_BOOL:: var_is_introduced ;
var bool: aux17985_BOOL:: var_is_introduced ;
var {0,1}: aux17985_INTEGER :: var_is_introduced ;
var 2..59: aux17986:: var_is_introduced ;
var bool: aux17987_BOOL:: var_is_introduced ;
var bool: aux17988_BOOL:: var_is_introduced ;
var bool: aux17989_BOOL:: var_is_introduced ;
var bool: aux17990_BOOL:: var_is_introduced ;
var bool: aux17991_BOOL:: var_is_introduced ;
var {0,1}: aux17991_INTEGER :: var_is_introduced ;
var 2..59: aux17992:: var_is_introduced ;
var bool: aux17993_BOOL:: var_is_introduced ;
var bool: aux17994_BOOL:: var_is_introduced ;
var bool: aux17995_BOOL:: var_is_introduced ;
var bool: aux17996_BOOL:: var_is_introduced ;
var bool: aux17997_BOOL:: var_is_introduced ;
var {0,1}: aux17997_INTEGER :: var_is_introduced ;
var 3..60: aux17998:: var_is_introduced ;
var bool: aux17999_BOOL:: var_is_introduced ;
var bool: aux18000_BOOL:: var_is_introduced ;
var bool: aux18001_BOOL:: var_is_introduced ;
var bool: aux18002_BOOL:: var_is_introduced ;
var bool: aux18003_BOOL:: var_is_introduced ;
var {0,1}: aux18003_INTEGER :: var_is_introduced ;
var 2..59: aux18004:: var_is_introduced ;
var bool: aux18005_BOOL:: var_is_introduced ;
var bool: aux18006_BOOL:: var_is_introduced ;
var bool: aux18007_BOOL:: var_is_introduced ;
var bool: aux18008_BOOL:: var_is_introduced ;
var bool: aux18009_BOOL:: var_is_introduced ;
var {0,1}: aux18009_INTEGER :: var_is_introduced ;
var 2..59: aux18010:: var_is_introduced ;
var bool: aux18011_BOOL:: var_is_introduced ;
var bool: aux18012_BOOL:: var_is_introduced ;
var bool: aux18013_BOOL:: var_is_introduced ;
var bool: aux18014_BOOL:: var_is_introduced ;
var bool: aux18015_BOOL:: var_is_introduced ;
var {0,1}: aux18015_INTEGER :: var_is_introduced ;
var 3..60: aux18016:: var_is_introduced ;
var bool: aux18017_BOOL:: var_is_introduced ;
var bool: aux18018_BOOL:: var_is_introduced ;
var bool: aux18019_BOOL:: var_is_introduced ;
var bool: aux18020_BOOL:: var_is_introduced ;
var bool: aux18021_BOOL:: var_is_introduced ;
var {0,1}: aux18021_INTEGER :: var_is_introduced ;
var 5..62: aux18022:: var_is_introduced ;
var bool: aux18023_BOOL:: var_is_introduced ;
var bool: aux18024_BOOL:: var_is_introduced ;
var bool: aux18025_BOOL:: var_is_introduced ;
var bool: aux18026_BOOL:: var_is_introduced ;
var bool: aux18027_BOOL:: var_is_introduced ;
var {0,1}: aux18027_INTEGER :: var_is_introduced ;
var 4..61: aux18028:: var_is_introduced ;
var bool: aux18029_BOOL:: var_is_introduced ;
var bool: aux18030_BOOL:: var_is_introduced ;
var bool: aux18031_BOOL:: var_is_introduced ;
var bool: aux18032_BOOL:: var_is_introduced ;
var bool: aux18033_BOOL:: var_is_introduced ;
var {0,1}: aux18033_INTEGER :: var_is_introduced ;
var 3..60: aux18034:: var_is_introduced ;
var bool: aux18035_BOOL:: var_is_introduced ;
var bool: aux18036_BOOL:: var_is_introduced ;
var bool: aux18037_BOOL:: var_is_introduced ;
var bool: aux18038_BOOL:: var_is_introduced ;
var bool: aux18039_BOOL:: var_is_introduced ;
var {0,1}: aux18039_INTEGER :: var_is_introduced ;
var 2..59: aux18040:: var_is_introduced ;
var bool: aux18041_BOOL:: var_is_introduced ;
var bool: aux18042_BOOL:: var_is_introduced ;
var bool: aux18043_BOOL:: var_is_introduced ;
var bool: aux18044_BOOL:: var_is_introduced ;
var bool: aux18045_BOOL:: var_is_introduced ;
var {0,1}: aux18045_INTEGER :: var_is_introduced ;
var 1..58: aux18046:: var_is_introduced ;
var bool: aux18047_BOOL:: var_is_introduced ;
var bool: aux18048_BOOL:: var_is_introduced ;
var bool: aux18049_BOOL:: var_is_introduced ;
var bool: aux18050_BOOL:: var_is_introduced ;
var bool: aux18051_BOOL:: var_is_introduced ;
var {0,1}: aux18051_INTEGER :: var_is_introduced ;
var 3..60: aux18052:: var_is_introduced ;
var bool: aux18053_BOOL:: var_is_introduced ;
var bool: aux18054_BOOL:: var_is_introduced ;
var bool: aux18055_BOOL:: var_is_introduced ;
var bool: aux18056_BOOL:: var_is_introduced ;
var bool: aux18057_BOOL:: var_is_introduced ;
var {0,1}: aux18057_INTEGER :: var_is_introduced ;
var 1..58: aux18058:: var_is_introduced ;
var bool: aux18059_BOOL:: var_is_introduced ;
var bool: aux18060_BOOL:: var_is_introduced ;
var bool: aux18061_BOOL:: var_is_introduced ;
var bool: aux18062_BOOL:: var_is_introduced ;
var bool: aux18063_BOOL:: var_is_introduced ;
var {0,1}: aux18063_INTEGER :: var_is_introduced ;
var 4..61: aux18064:: var_is_introduced ;
var bool: aux18065_BOOL:: var_is_introduced ;
var bool: aux18066_BOOL:: var_is_introduced ;
var bool: aux18067_BOOL:: var_is_introduced ;
var bool: aux18068_BOOL:: var_is_introduced ;
var bool: aux18069_BOOL:: var_is_introduced ;
var {0,1}: aux18069_INTEGER :: var_is_introduced ;
var 4..61: aux18070:: var_is_introduced ;
var bool: aux18071_BOOL:: var_is_introduced ;
var bool: aux18072_BOOL:: var_is_introduced ;
var bool: aux18073_BOOL:: var_is_introduced ;
var bool: aux18074_BOOL:: var_is_introduced ;
var bool: aux18075_BOOL:: var_is_introduced ;
var {0,1}: aux18075_INTEGER :: var_is_introduced ;
var 2..59: aux18076:: var_is_introduced ;
var bool: aux18077_BOOL:: var_is_introduced ;
var bool: aux18078_BOOL:: var_is_introduced ;
var bool: aux18079_BOOL:: var_is_introduced ;
var bool: aux18080_BOOL:: var_is_introduced ;
var bool: aux18081_BOOL:: var_is_introduced ;
var {0,1}: aux18081_INTEGER :: var_is_introduced ;
var bool: aux18082_BOOL:: var_is_introduced ;
var 2..59: aux18083:: var_is_introduced ;
var bool: aux18084_BOOL:: var_is_introduced ;
var bool: aux18085_BOOL:: var_is_introduced ;
var bool: aux18086_BOOL:: var_is_introduced ;
var {0,1}: aux18086_INTEGER :: var_is_introduced ;
var 4..61: aux18087:: var_is_introduced ;
var bool: aux18088_BOOL:: var_is_introduced ;
var bool: aux18089_BOOL:: var_is_introduced ;
var bool: aux18090_BOOL:: var_is_introduced ;
var bool: aux18091_BOOL:: var_is_introduced ;
var bool: aux18092_BOOL:: var_is_introduced ;
var {0,1}: aux18092_INTEGER :: var_is_introduced ;
var 4..61: aux18093:: var_is_introduced ;
var bool: aux18094_BOOL:: var_is_introduced ;
var bool: aux18095_BOOL:: var_is_introduced ;
var bool: aux18096_BOOL:: var_is_introduced ;
var bool: aux18097_BOOL:: var_is_introduced ;
var bool: aux18098_BOOL:: var_is_introduced ;
var {0,1}: aux18098_INTEGER :: var_is_introduced ;
var 3..60: aux18099:: var_is_introduced ;
var bool: aux18100_BOOL:: var_is_introduced ;
var bool: aux18101_BOOL:: var_is_introduced ;
var bool: aux18102_BOOL:: var_is_introduced ;
var bool: aux18103_BOOL:: var_is_introduced ;
var bool: aux18104_BOOL:: var_is_introduced ;
var {0,1}: aux18104_INTEGER :: var_is_introduced ;
var 2..59: aux18105:: var_is_introduced ;
var bool: aux18106_BOOL:: var_is_introduced ;
var bool: aux18107_BOOL:: var_is_introduced ;
var bool: aux18108_BOOL:: var_is_introduced ;
var bool: aux18109_BOOL:: var_is_introduced ;
var bool: aux18110_BOOL:: var_is_introduced ;
var {0,1}: aux18110_INTEGER :: var_is_introduced ;
var 3..60: aux18111:: var_is_introduced ;
var bool: aux18112_BOOL:: var_is_introduced ;
var bool: aux18113_BOOL:: var_is_introduced ;
var bool: aux18114_BOOL:: var_is_introduced ;
var bool: aux18115_BOOL:: var_is_introduced ;
var bool: aux18116_BOOL:: var_is_introduced ;
var {0,1}: aux18116_INTEGER :: var_is_introduced ;
var 3..60: aux18117:: var_is_introduced ;
var bool: aux18118_BOOL:: var_is_introduced ;
var bool: aux18119_BOOL:: var_is_introduced ;
var bool: aux18120_BOOL:: var_is_introduced ;
var bool: aux18121_BOOL:: var_is_introduced ;
var bool: aux18122_BOOL:: var_is_introduced ;
var {0,1}: aux18122_INTEGER :: var_is_introduced ;
var 2..59: aux18123:: var_is_introduced ;
var bool: aux18124_BOOL:: var_is_introduced ;
var bool: aux18125_BOOL:: var_is_introduced ;
var bool: aux18126_BOOL:: var_is_introduced ;
var bool: aux18127_BOOL:: var_is_introduced ;
var bool: aux18128_BOOL:: var_is_introduced ;
var {0,1}: aux18128_INTEGER :: var_is_introduced ;
var 2..59: aux18129:: var_is_introduced ;
var bool: aux18130_BOOL:: var_is_introduced ;
var bool: aux18131_BOOL:: var_is_introduced ;
var bool: aux18132_BOOL:: var_is_introduced ;
var bool: aux18133_BOOL:: var_is_introduced ;
var bool: aux18134_BOOL:: var_is_introduced ;
var {0,1}: aux18134_INTEGER :: var_is_introduced ;
var 3..60: aux18135:: var_is_introduced ;
var bool: aux18136_BOOL:: var_is_introduced ;
var bool: aux18137_BOOL:: var_is_introduced ;
var bool: aux18138_BOOL:: var_is_introduced ;
var bool: aux18139_BOOL:: var_is_introduced ;
var bool: aux18140_BOOL:: var_is_introduced ;
var {0,1}: aux18140_INTEGER :: var_is_introduced ;
var 5..62: aux18141:: var_is_introduced ;
var bool: aux18142_BOOL:: var_is_introduced ;
var bool: aux18143_BOOL:: var_is_introduced ;
var bool: aux18144_BOOL:: var_is_introduced ;
var bool: aux18145_BOOL:: var_is_introduced ;
var bool: aux18146_BOOL:: var_is_introduced ;
var {0,1}: aux18146_INTEGER :: var_is_introduced ;
var 4..61: aux18147:: var_is_introduced ;
var bool: aux18148_BOOL:: var_is_introduced ;
var bool: aux18149_BOOL:: var_is_introduced ;
var bool: aux18150_BOOL:: var_is_introduced ;
var bool: aux18151_BOOL:: var_is_introduced ;
var bool: aux18152_BOOL:: var_is_introduced ;
var {0,1}: aux18152_INTEGER :: var_is_introduced ;
var 3..60: aux18153:: var_is_introduced ;
var bool: aux18154_BOOL:: var_is_introduced ;
var bool: aux18155_BOOL:: var_is_introduced ;
var bool: aux18156_BOOL:: var_is_introduced ;
var bool: aux18157_BOOL:: var_is_introduced ;
var bool: aux18158_BOOL:: var_is_introduced ;
var {0,1}: aux18158_INTEGER :: var_is_introduced ;
var 2..59: aux18159:: var_is_introduced ;
var bool: aux18160_BOOL:: var_is_introduced ;
var bool: aux18161_BOOL:: var_is_introduced ;
var bool: aux18162_BOOL:: var_is_introduced ;
var bool: aux18163_BOOL:: var_is_introduced ;
var bool: aux18164_BOOL:: var_is_introduced ;
var {0,1}: aux18164_INTEGER :: var_is_introduced ;
var 1..58: aux18165:: var_is_introduced ;
var bool: aux18166_BOOL:: var_is_introduced ;
var bool: aux18167_BOOL:: var_is_introduced ;
var bool: aux18168_BOOL:: var_is_introduced ;
var bool: aux18169_BOOL:: var_is_introduced ;
var bool: aux18170_BOOL:: var_is_introduced ;
var {0,1}: aux18170_INTEGER :: var_is_introduced ;
var 3..60: aux18171:: var_is_introduced ;
var bool: aux18172_BOOL:: var_is_introduced ;
var bool: aux18173_BOOL:: var_is_introduced ;
var bool: aux18174_BOOL:: var_is_introduced ;
var bool: aux18175_BOOL:: var_is_introduced ;
var bool: aux18176_BOOL:: var_is_introduced ;
var {0,1}: aux18176_INTEGER :: var_is_introduced ;
var 1..58: aux18177:: var_is_introduced ;
var bool: aux18178_BOOL:: var_is_introduced ;
var bool: aux18179_BOOL:: var_is_introduced ;
var bool: aux18180_BOOL:: var_is_introduced ;
var bool: aux18181_BOOL:: var_is_introduced ;
var bool: aux18182_BOOL:: var_is_introduced ;
var {0,1}: aux18182_INTEGER :: var_is_introduced ;
var 4..61: aux18183:: var_is_introduced ;
var bool: aux18184_BOOL:: var_is_introduced ;
var bool: aux18185_BOOL:: var_is_introduced ;
var bool: aux18186_BOOL:: var_is_introduced ;
var bool: aux18187_BOOL:: var_is_introduced ;
var bool: aux18188_BOOL:: var_is_introduced ;
var {0,1}: aux18188_INTEGER :: var_is_introduced ;
var 4..61: aux18189:: var_is_introduced ;
var bool: aux18190_BOOL:: var_is_introduced ;
var bool: aux18191_BOOL:: var_is_introduced ;
var bool: aux18192_BOOL:: var_is_introduced ;
var bool: aux18193_BOOL:: var_is_introduced ;
var bool: aux18194_BOOL:: var_is_introduced ;
var {0,1}: aux18194_INTEGER :: var_is_introduced ;
var 2..59: aux18195:: var_is_introduced ;
var bool: aux18196_BOOL:: var_is_introduced ;
var bool: aux18197_BOOL:: var_is_introduced ;
var bool: aux18198_BOOL:: var_is_introduced ;
var bool: aux18199_BOOL:: var_is_introduced ;
var bool: aux18200_BOOL:: var_is_introduced ;
var {0,1}: aux18200_INTEGER :: var_is_introduced ;
var bool: aux18201_BOOL:: var_is_introduced ;
var 2..59: aux18202:: var_is_introduced ;
var bool: aux18203_BOOL:: var_is_introduced ;
var bool: aux18204_BOOL:: var_is_introduced ;
var bool: aux18205_BOOL:: var_is_introduced ;
var {0,1}: aux18205_INTEGER :: var_is_introduced ;
var 4..61: aux18206:: var_is_introduced ;
var bool: aux18207_BOOL:: var_is_introduced ;
var bool: aux18208_BOOL:: var_is_introduced ;
var bool: aux18209_BOOL:: var_is_introduced ;
var bool: aux18210_BOOL:: var_is_introduced ;
var bool: aux18211_BOOL:: var_is_introduced ;
var {0,1}: aux18211_INTEGER :: var_is_introduced ;
var 4..61: aux18212:: var_is_introduced ;
var bool: aux18213_BOOL:: var_is_introduced ;
var bool: aux18214_BOOL:: var_is_introduced ;
var bool: aux18215_BOOL:: var_is_introduced ;
var bool: aux18216_BOOL:: var_is_introduced ;
var bool: aux18217_BOOL:: var_is_introduced ;
var {0,1}: aux18217_INTEGER :: var_is_introduced ;
var 3..60: aux18218:: var_is_introduced ;
var bool: aux18219_BOOL:: var_is_introduced ;
var bool: aux18220_BOOL:: var_is_introduced ;
var bool: aux18221_BOOL:: var_is_introduced ;
var bool: aux18222_BOOL:: var_is_introduced ;
var bool: aux18223_BOOL:: var_is_introduced ;
var {0,1}: aux18223_INTEGER :: var_is_introduced ;
var 2..59: aux18224:: var_is_introduced ;
var bool: aux18225_BOOL:: var_is_introduced ;
var bool: aux18226_BOOL:: var_is_introduced ;
var bool: aux18227_BOOL:: var_is_introduced ;
var bool: aux18228_BOOL:: var_is_introduced ;
var bool: aux18229_BOOL:: var_is_introduced ;
var {0,1}: aux18229_INTEGER :: var_is_introduced ;
var 3..60: aux18230:: var_is_introduced ;
var bool: aux18231_BOOL:: var_is_introduced ;
var bool: aux18232_BOOL:: var_is_introduced ;
var bool: aux18233_BOOL:: var_is_introduced ;
var bool: aux18234_BOOL:: var_is_introduced ;
var bool: aux18235_BOOL:: var_is_introduced ;
var {0,1}: aux18235_INTEGER :: var_is_introduced ;
var 2..59: aux18236:: var_is_introduced ;
var bool: aux18237_BOOL:: var_is_introduced ;
var bool: aux18238_BOOL:: var_is_introduced ;
var bool: aux18239_BOOL:: var_is_introduced ;
var bool: aux18240_BOOL:: var_is_introduced ;
var bool: aux18241_BOOL:: var_is_introduced ;
var {0,1}: aux18241_INTEGER :: var_is_introduced ;
var 3..60: aux18242:: var_is_introduced ;
var bool: aux18243_BOOL:: var_is_introduced ;
var bool: aux18244_BOOL:: var_is_introduced ;
var bool: aux18245_BOOL:: var_is_introduced ;
var bool: aux18246_BOOL:: var_is_introduced ;
var bool: aux18247_BOOL:: var_is_introduced ;
var {0,1}: aux18247_INTEGER :: var_is_introduced ;
var 2..59: aux18248:: var_is_introduced ;
var bool: aux18249_BOOL:: var_is_introduced ;
var bool: aux18250_BOOL:: var_is_introduced ;
var bool: aux18251_BOOL:: var_is_introduced ;
var bool: aux18252_BOOL:: var_is_introduced ;
var bool: aux18253_BOOL:: var_is_introduced ;
var {0,1}: aux18253_INTEGER :: var_is_introduced ;
var 3..60: aux18254:: var_is_introduced ;
var bool: aux18255_BOOL:: var_is_introduced ;
var bool: aux18256_BOOL:: var_is_introduced ;
var bool: aux18257_BOOL:: var_is_introduced ;
var bool: aux18258_BOOL:: var_is_introduced ;
var bool: aux18259_BOOL:: var_is_introduced ;
var {0,1}: aux18259_INTEGER :: var_is_introduced ;
var 5..62: aux18260:: var_is_introduced ;
var bool: aux18261_BOOL:: var_is_introduced ;
var bool: aux18262_BOOL:: var_is_introduced ;
var bool: aux18263_BOOL:: var_is_introduced ;
var bool: aux18264_BOOL:: var_is_introduced ;
var bool: aux18265_BOOL:: var_is_introduced ;
var {0,1}: aux18265_INTEGER :: var_is_introduced ;
var 4..61: aux18266:: var_is_introduced ;
var bool: aux18267_BOOL:: var_is_introduced ;
var bool: aux18268_BOOL:: var_is_introduced ;
var bool: aux18269_BOOL:: var_is_introduced ;
var bool: aux18270_BOOL:: var_is_introduced ;
var bool: aux18271_BOOL:: var_is_introduced ;
var {0,1}: aux18271_INTEGER :: var_is_introduced ;
var 3..60: aux18272:: var_is_introduced ;
var bool: aux18273_BOOL:: var_is_introduced ;
var bool: aux18274_BOOL:: var_is_introduced ;
var bool: aux18275_BOOL:: var_is_introduced ;
var bool: aux18276_BOOL:: var_is_introduced ;
var bool: aux18277_BOOL:: var_is_introduced ;
var {0,1}: aux18277_INTEGER :: var_is_introduced ;
var 2..59: aux18278:: var_is_introduced ;
var bool: aux18279_BOOL:: var_is_introduced ;
var bool: aux18280_BOOL:: var_is_introduced ;
var bool: aux18281_BOOL:: var_is_introduced ;
var bool: aux18282_BOOL:: var_is_introduced ;
var bool: aux18283_BOOL:: var_is_introduced ;
var {0,1}: aux18283_INTEGER :: var_is_introduced ;
var 1..58: aux18284:: var_is_introduced ;
var bool: aux18285_BOOL:: var_is_introduced ;
var bool: aux18286_BOOL:: var_is_introduced ;
var bool: aux18287_BOOL:: var_is_introduced ;
var bool: aux18288_BOOL:: var_is_introduced ;
var bool: aux18289_BOOL:: var_is_introduced ;
var {0,1}: aux18289_INTEGER :: var_is_introduced ;
var 3..60: aux18290:: var_is_introduced ;
var bool: aux18291_BOOL:: var_is_introduced ;
var bool: aux18292_BOOL:: var_is_introduced ;
var bool: aux18293_BOOL:: var_is_introduced ;
var bool: aux18294_BOOL:: var_is_introduced ;
var bool: aux18295_BOOL:: var_is_introduced ;
var {0,1}: aux18295_INTEGER :: var_is_introduced ;
var 1..58: aux18296:: var_is_introduced ;
var bool: aux18297_BOOL:: var_is_introduced ;
var bool: aux18298_BOOL:: var_is_introduced ;
var bool: aux18299_BOOL:: var_is_introduced ;
var bool: aux18300_BOOL:: var_is_introduced ;
var bool: aux18301_BOOL:: var_is_introduced ;
var {0,1}: aux18301_INTEGER :: var_is_introduced ;
var 4..61: aux18302:: var_is_introduced ;
var bool: aux18303_BOOL:: var_is_introduced ;
var bool: aux18304_BOOL:: var_is_introduced ;
var bool: aux18305_BOOL:: var_is_introduced ;
var bool: aux18306_BOOL:: var_is_introduced ;
var bool: aux18307_BOOL:: var_is_introduced ;
var {0,1}: aux18307_INTEGER :: var_is_introduced ;
var 4..61: aux18308:: var_is_introduced ;
var bool: aux18309_BOOL:: var_is_introduced ;
var bool: aux18310_BOOL:: var_is_introduced ;
var bool: aux18311_BOOL:: var_is_introduced ;
var bool: aux18312_BOOL:: var_is_introduced ;
var bool: aux18313_BOOL:: var_is_introduced ;
var {0,1}: aux18313_INTEGER :: var_is_introduced ;
var 2..59: aux18314:: var_is_introduced ;
var bool: aux18315_BOOL:: var_is_introduced ;
var bool: aux18316_BOOL:: var_is_introduced ;
var bool: aux18317_BOOL:: var_is_introduced ;
var bool: aux18318_BOOL:: var_is_introduced ;
var bool: aux18319_BOOL:: var_is_introduced ;
var {0,1}: aux18319_INTEGER :: var_is_introduced ;
var bool: aux18320_BOOL:: var_is_introduced ;
var 3..60: aux18321:: var_is_introduced ;
var bool: aux18322_BOOL:: var_is_introduced ;
var bool: aux18323_BOOL:: var_is_introduced ;
var bool: aux18324_BOOL:: var_is_introduced ;
var {0,1}: aux18324_INTEGER :: var_is_introduced ;
var 4..61: aux18325:: var_is_introduced ;
var bool: aux18326_BOOL:: var_is_introduced ;
var bool: aux18327_BOOL:: var_is_introduced ;
var bool: aux18328_BOOL:: var_is_introduced ;
var bool: aux18329_BOOL:: var_is_introduced ;
var bool: aux18330_BOOL:: var_is_introduced ;
var {0,1}: aux18330_INTEGER :: var_is_introduced ;
var 4..61: aux18331:: var_is_introduced ;
var bool: aux18332_BOOL:: var_is_introduced ;
var bool: aux18333_BOOL:: var_is_introduced ;
var bool: aux18334_BOOL:: var_is_introduced ;
var bool: aux18335_BOOL:: var_is_introduced ;
var bool: aux18336_BOOL:: var_is_introduced ;
var {0,1}: aux18336_INTEGER :: var_is_introduced ;
var 3..60: aux18337:: var_is_introduced ;
var bool: aux18338_BOOL:: var_is_introduced ;
var bool: aux18339_BOOL:: var_is_introduced ;
var bool: aux18340_BOOL:: var_is_introduced ;
var bool: aux18341_BOOL:: var_is_introduced ;
var bool: aux18342_BOOL:: var_is_introduced ;
var {0,1}: aux18342_INTEGER :: var_is_introduced ;
var 2..59: aux18343:: var_is_introduced ;
var bool: aux18344_BOOL:: var_is_introduced ;
var bool: aux18345_BOOL:: var_is_introduced ;
var bool: aux18346_BOOL:: var_is_introduced ;
var bool: aux18347_BOOL:: var_is_introduced ;
var bool: aux18348_BOOL:: var_is_introduced ;
var {0,1}: aux18348_INTEGER :: var_is_introduced ;
var 3..60: aux18349:: var_is_introduced ;
var bool: aux18350_BOOL:: var_is_introduced ;
var bool: aux18351_BOOL:: var_is_introduced ;
var bool: aux18352_BOOL:: var_is_introduced ;
var bool: aux18353_BOOL:: var_is_introduced ;
var bool: aux18354_BOOL:: var_is_introduced ;
var {0,1}: aux18354_INTEGER :: var_is_introduced ;
var 2..59: aux18355:: var_is_introduced ;
var bool: aux18356_BOOL:: var_is_introduced ;
var bool: aux18357_BOOL:: var_is_introduced ;
var bool: aux18358_BOOL:: var_is_introduced ;
var bool: aux18359_BOOL:: var_is_introduced ;
var bool: aux18360_BOOL:: var_is_introduced ;
var {0,1}: aux18360_INTEGER :: var_is_introduced ;
var 2..59: aux18361:: var_is_introduced ;
var bool: aux18362_BOOL:: var_is_introduced ;
var bool: aux18363_BOOL:: var_is_introduced ;
var bool: aux18364_BOOL:: var_is_introduced ;
var bool: aux18365_BOOL:: var_is_introduced ;
var bool: aux18366_BOOL:: var_is_introduced ;
var {0,1}: aux18366_INTEGER :: var_is_introduced ;
var 2..59: aux18367:: var_is_introduced ;
var bool: aux18368_BOOL:: var_is_introduced ;
var bool: aux18369_BOOL:: var_is_introduced ;
var bool: aux18370_BOOL:: var_is_introduced ;
var bool: aux18371_BOOL:: var_is_introduced ;
var bool: aux18372_BOOL:: var_is_introduced ;
var {0,1}: aux18372_INTEGER :: var_is_introduced ;
var 3..60: aux18373:: var_is_introduced ;
var bool: aux18374_BOOL:: var_is_introduced ;
var bool: aux18375_BOOL:: var_is_introduced ;
var bool: aux18376_BOOL:: var_is_introduced ;
var bool: aux18377_BOOL:: var_is_introduced ;
var bool: aux18378_BOOL:: var_is_introduced ;
var {0,1}: aux18378_INTEGER :: var_is_introduced ;
var 5..62: aux18379:: var_is_introduced ;
var bool: aux18380_BOOL:: var_is_introduced ;
var bool: aux18381_BOOL:: var_is_introduced ;
var bool: aux18382_BOOL:: var_is_introduced ;
var bool: aux18383_BOOL:: var_is_introduced ;
var bool: aux18384_BOOL:: var_is_introduced ;
var {0,1}: aux18384_INTEGER :: var_is_introduced ;
var 4..61: aux18385:: var_is_introduced ;
var bool: aux18386_BOOL:: var_is_introduced ;
var bool: aux18387_BOOL:: var_is_introduced ;
var bool: aux18388_BOOL:: var_is_introduced ;
var bool: aux18389_BOOL:: var_is_introduced ;
var bool: aux18390_BOOL:: var_is_introduced ;
var {0,1}: aux18390_INTEGER :: var_is_introduced ;
var 3..60: aux18391:: var_is_introduced ;
var bool: aux18392_BOOL:: var_is_introduced ;
var bool: aux18393_BOOL:: var_is_introduced ;
var bool: aux18394_BOOL:: var_is_introduced ;
var bool: aux18395_BOOL:: var_is_introduced ;
var bool: aux18396_BOOL:: var_is_introduced ;
var {0,1}: aux18396_INTEGER :: var_is_introduced ;
var 2..59: aux18397:: var_is_introduced ;
var bool: aux18398_BOOL:: var_is_introduced ;
var bool: aux18399_BOOL:: var_is_introduced ;
var bool: aux18400_BOOL:: var_is_introduced ;
var bool: aux18401_BOOL:: var_is_introduced ;
var bool: aux18402_BOOL:: var_is_introduced ;
var {0,1}: aux18402_INTEGER :: var_is_introduced ;
var 1..58: aux18403:: var_is_introduced ;
var bool: aux18404_BOOL:: var_is_introduced ;
var bool: aux18405_BOOL:: var_is_introduced ;
var bool: aux18406_BOOL:: var_is_introduced ;
var bool: aux18407_BOOL:: var_is_introduced ;
var bool: aux18408_BOOL:: var_is_introduced ;
var {0,1}: aux18408_INTEGER :: var_is_introduced ;
var 3..60: aux18409:: var_is_introduced ;
var bool: aux18410_BOOL:: var_is_introduced ;
var bool: aux18411_BOOL:: var_is_introduced ;
var bool: aux18412_BOOL:: var_is_introduced ;
var bool: aux18413_BOOL:: var_is_introduced ;
var bool: aux18414_BOOL:: var_is_introduced ;
var {0,1}: aux18414_INTEGER :: var_is_introduced ;
var 1..58: aux18415:: var_is_introduced ;
var bool: aux18416_BOOL:: var_is_introduced ;
var bool: aux18417_BOOL:: var_is_introduced ;
var bool: aux18418_BOOL:: var_is_introduced ;
var bool: aux18419_BOOL:: var_is_introduced ;
var bool: aux18420_BOOL:: var_is_introduced ;
var {0,1}: aux18420_INTEGER :: var_is_introduced ;
var 4..61: aux18421:: var_is_introduced ;
var bool: aux18422_BOOL:: var_is_introduced ;
var bool: aux18423_BOOL:: var_is_introduced ;
var bool: aux18424_BOOL:: var_is_introduced ;
var bool: aux18425_BOOL:: var_is_introduced ;
var bool: aux18426_BOOL:: var_is_introduced ;
var {0,1}: aux18426_INTEGER :: var_is_introduced ;
var 4..61: aux18427:: var_is_introduced ;
var bool: aux18428_BOOL:: var_is_introduced ;
var bool: aux18429_BOOL:: var_is_introduced ;
var bool: aux18430_BOOL:: var_is_introduced ;
var bool: aux18431_BOOL:: var_is_introduced ;
var bool: aux18432_BOOL:: var_is_introduced ;
var {0,1}: aux18432_INTEGER :: var_is_introduced ;
var 2..59: aux18433:: var_is_introduced ;
var bool: aux18434_BOOL:: var_is_introduced ;
var bool: aux18435_BOOL:: var_is_introduced ;
var bool: aux18436_BOOL:: var_is_introduced ;
var bool: aux18437_BOOL:: var_is_introduced ;
var bool: aux18438_BOOL:: var_is_introduced ;
var {0,1}: aux18438_INTEGER :: var_is_introduced ;
var bool: aux18439_BOOL:: var_is_introduced ;
var 4..61: aux18440:: var_is_introduced ;
var bool: aux18441_BOOL:: var_is_introduced ;
var bool: aux18442_BOOL:: var_is_introduced ;
var bool: aux18443_BOOL:: var_is_introduced ;
var {0,1}: aux18443_INTEGER :: var_is_introduced ;
var 4..61: aux18444:: var_is_introduced ;
var bool: aux18445_BOOL:: var_is_introduced ;
var bool: aux18446_BOOL:: var_is_introduced ;
var bool: aux18447_BOOL:: var_is_introduced ;
var bool: aux18448_BOOL:: var_is_introduced ;
var bool: aux18449_BOOL:: var_is_introduced ;
var {0,1}: aux18449_INTEGER :: var_is_introduced ;
var 4..61: aux18450:: var_is_introduced ;
var bool: aux18451_BOOL:: var_is_introduced ;
var bool: aux18452_BOOL:: var_is_introduced ;
var bool: aux18453_BOOL:: var_is_introduced ;
var bool: aux18454_BOOL:: var_is_introduced ;
var bool: aux18455_BOOL:: var_is_introduced ;
var {0,1}: aux18455_INTEGER :: var_is_introduced ;
var 3..60: aux18456:: var_is_introduced ;
var bool: aux18457_BOOL:: var_is_introduced ;
var bool: aux18458_BOOL:: var_is_introduced ;
var bool: aux18459_BOOL:: var_is_introduced ;
var bool: aux18460_BOOL:: var_is_introduced ;
var bool: aux18461_BOOL:: var_is_introduced ;
var {0,1}: aux18461_INTEGER :: var_is_introduced ;
var 2..59: aux18462:: var_is_introduced ;
var bool: aux18463_BOOL:: var_is_introduced ;
var bool: aux18464_BOOL:: var_is_introduced ;
var bool: aux18465_BOOL:: var_is_introduced ;
var bool: aux18466_BOOL:: var_is_introduced ;
var bool: aux18467_BOOL:: var_is_introduced ;
var {0,1}: aux18467_INTEGER :: var_is_introduced ;
var 3..60: aux18468:: var_is_introduced ;
var bool: aux18469_BOOL:: var_is_introduced ;
var bool: aux18470_BOOL:: var_is_introduced ;
var bool: aux18471_BOOL:: var_is_introduced ;
var bool: aux18472_BOOL:: var_is_introduced ;
var bool: aux18473_BOOL:: var_is_introduced ;
var {0,1}: aux18473_INTEGER :: var_is_introduced ;
var 2..59: aux18474:: var_is_introduced ;
var bool: aux18475_BOOL:: var_is_introduced ;
var bool: aux18476_BOOL:: var_is_introduced ;
var bool: aux18477_BOOL:: var_is_introduced ;
var bool: aux18478_BOOL:: var_is_introduced ;
var bool: aux18479_BOOL:: var_is_introduced ;
var {0,1}: aux18479_INTEGER :: var_is_introduced ;
var 3..60: aux18480:: var_is_introduced ;
var bool: aux18481_BOOL:: var_is_introduced ;
var bool: aux18482_BOOL:: var_is_introduced ;
var bool: aux18483_BOOL:: var_is_introduced ;
var bool: aux18484_BOOL:: var_is_introduced ;
var bool: aux18485_BOOL:: var_is_introduced ;
var {0,1}: aux18485_INTEGER :: var_is_introduced ;
var 2..59: aux18486:: var_is_introduced ;
var bool: aux18487_BOOL:: var_is_introduced ;
var bool: aux18488_BOOL:: var_is_introduced ;
var bool: aux18489_BOOL:: var_is_introduced ;
var bool: aux18490_BOOL:: var_is_introduced ;
var bool: aux18491_BOOL:: var_is_introduced ;
var {0,1}: aux18491_INTEGER :: var_is_introduced ;
var 2..59: aux18492:: var_is_introduced ;
var bool: aux18493_BOOL:: var_is_introduced ;
var bool: aux18494_BOOL:: var_is_introduced ;
var bool: aux18495_BOOL:: var_is_introduced ;
var bool: aux18496_BOOL:: var_is_introduced ;
var bool: aux18497_BOOL:: var_is_introduced ;
var {0,1}: aux18497_INTEGER :: var_is_introduced ;
var 3..60: aux18498:: var_is_introduced ;
var bool: aux18499_BOOL:: var_is_introduced ;
var bool: aux18500_BOOL:: var_is_introduced ;
var bool: aux18501_BOOL:: var_is_introduced ;
var bool: aux18502_BOOL:: var_is_introduced ;
var bool: aux18503_BOOL:: var_is_introduced ;
var {0,1}: aux18503_INTEGER :: var_is_introduced ;
var 5..62: aux18504:: var_is_introduced ;
var bool: aux18505_BOOL:: var_is_introduced ;
var bool: aux18506_BOOL:: var_is_introduced ;
var bool: aux18507_BOOL:: var_is_introduced ;
var bool: aux18508_BOOL:: var_is_introduced ;
var bool: aux18509_BOOL:: var_is_introduced ;
var {0,1}: aux18509_INTEGER :: var_is_introduced ;
var 4..61: aux18510:: var_is_introduced ;
var bool: aux18511_BOOL:: var_is_introduced ;
var bool: aux18512_BOOL:: var_is_introduced ;
var bool: aux18513_BOOL:: var_is_introduced ;
var bool: aux18514_BOOL:: var_is_introduced ;
var bool: aux18515_BOOL:: var_is_introduced ;
var {0,1}: aux18515_INTEGER :: var_is_introduced ;
var 3..60: aux18516:: var_is_introduced ;
var bool: aux18517_BOOL:: var_is_introduced ;
var bool: aux18518_BOOL:: var_is_introduced ;
var bool: aux18519_BOOL:: var_is_introduced ;
var bool: aux18520_BOOL:: var_is_introduced ;
var bool: aux18521_BOOL:: var_is_introduced ;
var {0,1}: aux18521_INTEGER :: var_is_introduced ;
var 2..59: aux18522:: var_is_introduced ;
var bool: aux18523_BOOL:: var_is_introduced ;
var bool: aux18524_BOOL:: var_is_introduced ;
var bool: aux18525_BOOL:: var_is_introduced ;
var bool: aux18526_BOOL:: var_is_introduced ;
var bool: aux18527_BOOL:: var_is_introduced ;
var {0,1}: aux18527_INTEGER :: var_is_introduced ;
var 1..58: aux18528:: var_is_introduced ;
var bool: aux18529_BOOL:: var_is_introduced ;
var bool: aux18530_BOOL:: var_is_introduced ;
var bool: aux18531_BOOL:: var_is_introduced ;
var bool: aux18532_BOOL:: var_is_introduced ;
var bool: aux18533_BOOL:: var_is_introduced ;
var {0,1}: aux18533_INTEGER :: var_is_introduced ;
var 3..60: aux18534:: var_is_introduced ;
var bool: aux18535_BOOL:: var_is_introduced ;
var bool: aux18536_BOOL:: var_is_introduced ;
var bool: aux18537_BOOL:: var_is_introduced ;
var bool: aux18538_BOOL:: var_is_introduced ;
var bool: aux18539_BOOL:: var_is_introduced ;
var {0,1}: aux18539_INTEGER :: var_is_introduced ;
var 1..58: aux18540:: var_is_introduced ;
var bool: aux18541_BOOL:: var_is_introduced ;
var bool: aux18542_BOOL:: var_is_introduced ;
var bool: aux18543_BOOL:: var_is_introduced ;
var bool: aux18544_BOOL:: var_is_introduced ;
var bool: aux18545_BOOL:: var_is_introduced ;
var {0,1}: aux18545_INTEGER :: var_is_introduced ;
var 4..61: aux18546:: var_is_introduced ;
var bool: aux18547_BOOL:: var_is_introduced ;
var bool: aux18548_BOOL:: var_is_introduced ;
var bool: aux18549_BOOL:: var_is_introduced ;
var bool: aux18550_BOOL:: var_is_introduced ;
var bool: aux18551_BOOL:: var_is_introduced ;
var {0,1}: aux18551_INTEGER :: var_is_introduced ;
var 2..59: aux18552:: var_is_introduced ;
var bool: aux18553_BOOL:: var_is_introduced ;
var bool: aux18554_BOOL:: var_is_introduced ;
var bool: aux18555_BOOL:: var_is_introduced ;
var bool: aux18556_BOOL:: var_is_introduced ;
var bool: aux18557_BOOL:: var_is_introduced ;
var {0,1}: aux18557_INTEGER :: var_is_introduced ;
var bool: aux18558_BOOL:: var_is_introduced ;
var 3..60: aux18559:: var_is_introduced ;
var bool: aux18560_BOOL:: var_is_introduced ;
var bool: aux18561_BOOL:: var_is_introduced ;
var bool: aux18562_BOOL:: var_is_introduced ;
var {0,1}: aux18562_INTEGER :: var_is_introduced ;
var 4..61: aux18563:: var_is_introduced ;
var bool: aux18564_BOOL:: var_is_introduced ;
var bool: aux18565_BOOL:: var_is_introduced ;
var bool: aux18566_BOOL:: var_is_introduced ;
var bool: aux18567_BOOL:: var_is_introduced ;
var bool: aux18568_BOOL:: var_is_introduced ;
var {0,1}: aux18568_INTEGER :: var_is_introduced ;
var 4..61: aux18569:: var_is_introduced ;
var bool: aux18570_BOOL:: var_is_introduced ;
var bool: aux18571_BOOL:: var_is_introduced ;
var bool: aux18572_BOOL:: var_is_introduced ;
var bool: aux18573_BOOL:: var_is_introduced ;
var bool: aux18574_BOOL:: var_is_introduced ;
var {0,1}: aux18574_INTEGER :: var_is_introduced ;
var 2..59: aux18575:: var_is_introduced ;
var bool: aux18576_BOOL:: var_is_introduced ;
var bool: aux18577_BOOL:: var_is_introduced ;
var bool: aux18578_BOOL:: var_is_introduced ;
var bool: aux18579_BOOL:: var_is_introduced ;
var bool: aux18580_BOOL:: var_is_introduced ;
var {0,1}: aux18580_INTEGER :: var_is_introduced ;
var 3..60: aux18581:: var_is_introduced ;
var bool: aux18582_BOOL:: var_is_introduced ;
var bool: aux18583_BOOL:: var_is_introduced ;
var bool: aux18584_BOOL:: var_is_introduced ;
var bool: aux18585_BOOL:: var_is_introduced ;
var bool: aux18586_BOOL:: var_is_introduced ;
var {0,1}: aux18586_INTEGER :: var_is_introduced ;
var 2..59: aux18587:: var_is_introduced ;
var bool: aux18588_BOOL:: var_is_introduced ;
var bool: aux18589_BOOL:: var_is_introduced ;
var bool: aux18590_BOOL:: var_is_introduced ;
var bool: aux18591_BOOL:: var_is_introduced ;
var bool: aux18592_BOOL:: var_is_introduced ;
var {0,1}: aux18592_INTEGER :: var_is_introduced ;
var 3..60: aux18593:: var_is_introduced ;
var bool: aux18594_BOOL:: var_is_introduced ;
var bool: aux18595_BOOL:: var_is_introduced ;
var bool: aux18596_BOOL:: var_is_introduced ;
var bool: aux18597_BOOL:: var_is_introduced ;
var bool: aux18598_BOOL:: var_is_introduced ;
var {0,1}: aux18598_INTEGER :: var_is_introduced ;
var 2..59: aux18599:: var_is_introduced ;
var bool: aux18600_BOOL:: var_is_introduced ;
var bool: aux18601_BOOL:: var_is_introduced ;
var bool: aux18602_BOOL:: var_is_introduced ;
var bool: aux18603_BOOL:: var_is_introduced ;
var bool: aux18604_BOOL:: var_is_introduced ;
var {0,1}: aux18604_INTEGER :: var_is_introduced ;
var 2..59: aux18605:: var_is_introduced ;
var bool: aux18606_BOOL:: var_is_introduced ;
var bool: aux18607_BOOL:: var_is_introduced ;
var bool: aux18608_BOOL:: var_is_introduced ;
var bool: aux18609_BOOL:: var_is_introduced ;
var bool: aux18610_BOOL:: var_is_introduced ;
var {0,1}: aux18610_INTEGER :: var_is_introduced ;
var 3..60: aux18611:: var_is_introduced ;
var bool: aux18612_BOOL:: var_is_introduced ;
var bool: aux18613_BOOL:: var_is_introduced ;
var bool: aux18614_BOOL:: var_is_introduced ;
var bool: aux18615_BOOL:: var_is_introduced ;
var bool: aux18616_BOOL:: var_is_introduced ;
var {0,1}: aux18616_INTEGER :: var_is_introduced ;
var 5..62: aux18617:: var_is_introduced ;
var bool: aux18618_BOOL:: var_is_introduced ;
var bool: aux18619_BOOL:: var_is_introduced ;
var bool: aux18620_BOOL:: var_is_introduced ;
var bool: aux18621_BOOL:: var_is_introduced ;
var bool: aux18622_BOOL:: var_is_introduced ;
var {0,1}: aux18622_INTEGER :: var_is_introduced ;
var 4..61: aux18623:: var_is_introduced ;
var bool: aux18624_BOOL:: var_is_introduced ;
var bool: aux18625_BOOL:: var_is_introduced ;
var bool: aux18626_BOOL:: var_is_introduced ;
var bool: aux18627_BOOL:: var_is_introduced ;
var bool: aux18628_BOOL:: var_is_introduced ;
var {0,1}: aux18628_INTEGER :: var_is_introduced ;
var 3..60: aux18629:: var_is_introduced ;
var bool: aux18630_BOOL:: var_is_introduced ;
var bool: aux18631_BOOL:: var_is_introduced ;
var bool: aux18632_BOOL:: var_is_introduced ;
var bool: aux18633_BOOL:: var_is_introduced ;
var bool: aux18634_BOOL:: var_is_introduced ;
var {0,1}: aux18634_INTEGER :: var_is_introduced ;
var 2..59: aux18635:: var_is_introduced ;
var bool: aux18636_BOOL:: var_is_introduced ;
var bool: aux18637_BOOL:: var_is_introduced ;
var bool: aux18638_BOOL:: var_is_introduced ;
var bool: aux18639_BOOL:: var_is_introduced ;
var bool: aux18640_BOOL:: var_is_introduced ;
var {0,1}: aux18640_INTEGER :: var_is_introduced ;
var 1..58: aux18641:: var_is_introduced ;
var bool: aux18642_BOOL:: var_is_introduced ;
var bool: aux18643_BOOL:: var_is_introduced ;
var bool: aux18644_BOOL:: var_is_introduced ;
var bool: aux18645_BOOL:: var_is_introduced ;
var bool: aux18646_BOOL:: var_is_introduced ;
var {0,1}: aux18646_INTEGER :: var_is_introduced ;
var 3..60: aux18647:: var_is_introduced ;
var bool: aux18648_BOOL:: var_is_introduced ;
var bool: aux18649_BOOL:: var_is_introduced ;
var bool: aux18650_BOOL:: var_is_introduced ;
var bool: aux18651_BOOL:: var_is_introduced ;
var bool: aux18652_BOOL:: var_is_introduced ;
var {0,1}: aux18652_INTEGER :: var_is_introduced ;
var 1..58: aux18653:: var_is_introduced ;
var bool: aux18654_BOOL:: var_is_introduced ;
var bool: aux18655_BOOL:: var_is_introduced ;
var bool: aux18656_BOOL:: var_is_introduced ;
var bool: aux18657_BOOL:: var_is_introduced ;
var bool: aux18658_BOOL:: var_is_introduced ;
var {0,1}: aux18658_INTEGER :: var_is_introduced ;
var 4..61: aux18659:: var_is_introduced ;
var bool: aux18660_BOOL:: var_is_introduced ;
var bool: aux18661_BOOL:: var_is_introduced ;
var bool: aux18662_BOOL:: var_is_introduced ;
var bool: aux18663_BOOL:: var_is_introduced ;
var bool: aux18664_BOOL:: var_is_introduced ;
var {0,1}: aux18664_INTEGER :: var_is_introduced ;
var 4..61: aux18665:: var_is_introduced ;
var bool: aux18666_BOOL:: var_is_introduced ;
var bool: aux18667_BOOL:: var_is_introduced ;
var bool: aux18668_BOOL:: var_is_introduced ;
var bool: aux18669_BOOL:: var_is_introduced ;
var bool: aux18670_BOOL:: var_is_introduced ;
var {0,1}: aux18670_INTEGER :: var_is_introduced ;
var 2..59: aux18671:: var_is_introduced ;
var bool: aux18672_BOOL:: var_is_introduced ;
var bool: aux18673_BOOL:: var_is_introduced ;
var bool: aux18674_BOOL:: var_is_introduced ;
var bool: aux18675_BOOL:: var_is_introduced ;
var bool: aux18676_BOOL:: var_is_introduced ;
var {0,1}: aux18676_INTEGER :: var_is_introduced ;
var bool: aux18677_BOOL:: var_is_introduced ;
var 4..61: aux18678:: var_is_introduced ;
var bool: aux18679_BOOL:: var_is_introduced ;
var bool: aux18680_BOOL:: var_is_introduced ;
var bool: aux18681_BOOL:: var_is_introduced ;
var {0,1}: aux18681_INTEGER :: var_is_introduced ;
var 4..61: aux18682:: var_is_introduced ;
var bool: aux18683_BOOL:: var_is_introduced ;
var bool: aux18684_BOOL:: var_is_introduced ;
var bool: aux18685_BOOL:: var_is_introduced ;
var bool: aux18686_BOOL:: var_is_introduced ;
var bool: aux18687_BOOL:: var_is_introduced ;
var {0,1}: aux18687_INTEGER :: var_is_introduced ;
var 3..60: aux18688:: var_is_introduced ;
var bool: aux18689_BOOL:: var_is_introduced ;
var bool: aux18690_BOOL:: var_is_introduced ;
var bool: aux18691_BOOL:: var_is_introduced ;
var bool: aux18692_BOOL:: var_is_introduced ;
var bool: aux18693_BOOL:: var_is_introduced ;
var {0,1}: aux18693_INTEGER :: var_is_introduced ;
var 2..59: aux18694:: var_is_introduced ;
var bool: aux18695_BOOL:: var_is_introduced ;
var bool: aux18696_BOOL:: var_is_introduced ;
var bool: aux18697_BOOL:: var_is_introduced ;
var bool: aux18698_BOOL:: var_is_introduced ;
var bool: aux18699_BOOL:: var_is_introduced ;
var {0,1}: aux18699_INTEGER :: var_is_introduced ;
var 3..60: aux18700:: var_is_introduced ;
var bool: aux18701_BOOL:: var_is_introduced ;
var bool: aux18702_BOOL:: var_is_introduced ;
var bool: aux18703_BOOL:: var_is_introduced ;
var bool: aux18704_BOOL:: var_is_introduced ;
var bool: aux18705_BOOL:: var_is_introduced ;
var {0,1}: aux18705_INTEGER :: var_is_introduced ;
var 2..59: aux18706:: var_is_introduced ;
var bool: aux18707_BOOL:: var_is_introduced ;
var bool: aux18708_BOOL:: var_is_introduced ;
var bool: aux18709_BOOL:: var_is_introduced ;
var bool: aux18710_BOOL:: var_is_introduced ;
var bool: aux18711_BOOL:: var_is_introduced ;
var {0,1}: aux18711_INTEGER :: var_is_introduced ;
var 3..60: aux18712:: var_is_introduced ;
var bool: aux18713_BOOL:: var_is_introduced ;
var bool: aux18714_BOOL:: var_is_introduced ;
var bool: aux18715_BOOL:: var_is_introduced ;
var bool: aux18716_BOOL:: var_is_introduced ;
var bool: aux18717_BOOL:: var_is_introduced ;
var {0,1}: aux18717_INTEGER :: var_is_introduced ;
var 2..59: aux18718:: var_is_introduced ;
var bool: aux18719_BOOL:: var_is_introduced ;
var bool: aux18720_BOOL:: var_is_introduced ;
var bool: aux18721_BOOL:: var_is_introduced ;
var bool: aux18722_BOOL:: var_is_introduced ;
var bool: aux18723_BOOL:: var_is_introduced ;
var {0,1}: aux18723_INTEGER :: var_is_introduced ;
var 2..59: aux18724:: var_is_introduced ;
var bool: aux18725_BOOL:: var_is_introduced ;
var bool: aux18726_BOOL:: var_is_introduced ;
var bool: aux18727_BOOL:: var_is_introduced ;
var bool: aux18728_BOOL:: var_is_introduced ;
var bool: aux18729_BOOL:: var_is_introduced ;
var {0,1}: aux18729_INTEGER :: var_is_introduced ;
var 3..60: aux18730:: var_is_introduced ;
var bool: aux18731_BOOL:: var_is_introduced ;
var bool: aux18732_BOOL:: var_is_introduced ;
var bool: aux18733_BOOL:: var_is_introduced ;
var bool: aux18734_BOOL:: var_is_introduced ;
var bool: aux18735_BOOL:: var_is_introduced ;
var {0,1}: aux18735_INTEGER :: var_is_introduced ;
var 5..62: aux18736:: var_is_introduced ;
var bool: aux18737_BOOL:: var_is_introduced ;
var bool: aux18738_BOOL:: var_is_introduced ;
var bool: aux18739_BOOL:: var_is_introduced ;
var bool: aux18740_BOOL:: var_is_introduced ;
var bool: aux18741_BOOL:: var_is_introduced ;
var {0,1}: aux18741_INTEGER :: var_is_introduced ;
var 4..61: aux18742:: var_is_introduced ;
var bool: aux18743_BOOL:: var_is_introduced ;
var bool: aux18744_BOOL:: var_is_introduced ;
var bool: aux18745_BOOL:: var_is_introduced ;
var bool: aux18746_BOOL:: var_is_introduced ;
var bool: aux18747_BOOL:: var_is_introduced ;
var {0,1}: aux18747_INTEGER :: var_is_introduced ;
var 3..60: aux18748:: var_is_introduced ;
var bool: aux18749_BOOL:: var_is_introduced ;
var bool: aux18750_BOOL:: var_is_introduced ;
var bool: aux18751_BOOL:: var_is_introduced ;
var bool: aux18752_BOOL:: var_is_introduced ;
var bool: aux18753_BOOL:: var_is_introduced ;
var {0,1}: aux18753_INTEGER :: var_is_introduced ;
var 2..59: aux18754:: var_is_introduced ;
var bool: aux18755_BOOL:: var_is_introduced ;
var bool: aux18756_BOOL:: var_is_introduced ;
var bool: aux18757_BOOL:: var_is_introduced ;
var bool: aux18758_BOOL:: var_is_introduced ;
var bool: aux18759_BOOL:: var_is_introduced ;
var {0,1}: aux18759_INTEGER :: var_is_introduced ;
var 1..58: aux18760:: var_is_introduced ;
var bool: aux18761_BOOL:: var_is_introduced ;
var bool: aux18762_BOOL:: var_is_introduced ;
var bool: aux18763_BOOL:: var_is_introduced ;
var bool: aux18764_BOOL:: var_is_introduced ;
var bool: aux18765_BOOL:: var_is_introduced ;
var {0,1}: aux18765_INTEGER :: var_is_introduced ;
var 3..60: aux18766:: var_is_introduced ;
var bool: aux18767_BOOL:: var_is_introduced ;
var bool: aux18768_BOOL:: var_is_introduced ;
var bool: aux18769_BOOL:: var_is_introduced ;
var bool: aux18770_BOOL:: var_is_introduced ;
var bool: aux18771_BOOL:: var_is_introduced ;
var {0,1}: aux18771_INTEGER :: var_is_introduced ;
var 1..58: aux18772:: var_is_introduced ;
var bool: aux18773_BOOL:: var_is_introduced ;
var bool: aux18774_BOOL:: var_is_introduced ;
var bool: aux18775_BOOL:: var_is_introduced ;
var bool: aux18776_BOOL:: var_is_introduced ;
var bool: aux18777_BOOL:: var_is_introduced ;
var {0,1}: aux18777_INTEGER :: var_is_introduced ;
var 4..61: aux18778:: var_is_introduced ;
var bool: aux18779_BOOL:: var_is_introduced ;
var bool: aux18780_BOOL:: var_is_introduced ;
var bool: aux18781_BOOL:: var_is_introduced ;
var bool: aux18782_BOOL:: var_is_introduced ;
var bool: aux18783_BOOL:: var_is_introduced ;
var {0,1}: aux18783_INTEGER :: var_is_introduced ;
var 4..61: aux18784:: var_is_introduced ;
var bool: aux18785_BOOL:: var_is_introduced ;
var bool: aux18786_BOOL:: var_is_introduced ;
var bool: aux18787_BOOL:: var_is_introduced ;
var bool: aux18788_BOOL:: var_is_introduced ;
var bool: aux18789_BOOL:: var_is_introduced ;
var {0,1}: aux18789_INTEGER :: var_is_introduced ;
var 2..59: aux18790:: var_is_introduced ;
var bool: aux18791_BOOL:: var_is_introduced ;
var bool: aux18792_BOOL:: var_is_introduced ;
var bool: aux18793_BOOL:: var_is_introduced ;
var bool: aux18794_BOOL:: var_is_introduced ;
var bool: aux18795_BOOL:: var_is_introduced ;
var {0,1}: aux18795_INTEGER :: var_is_introduced ;
var bool: aux18796_BOOL:: var_is_introduced ;
var 3..60: aux18797:: var_is_introduced ;
var bool: aux18798_BOOL:: var_is_introduced ;
var bool: aux18799_BOOL:: var_is_introduced ;
var bool: aux18800_BOOL:: var_is_introduced ;
var {0,1}: aux18800_INTEGER :: var_is_introduced ;
var 4..61: aux18801:: var_is_introduced ;
var bool: aux18802_BOOL:: var_is_introduced ;
var bool: aux18803_BOOL:: var_is_introduced ;
var bool: aux18804_BOOL:: var_is_introduced ;
var bool: aux18805_BOOL:: var_is_introduced ;
var bool: aux18806_BOOL:: var_is_introduced ;
var {0,1}: aux18806_INTEGER :: var_is_introduced ;
var 4..61: aux18807:: var_is_introduced ;
var bool: aux18808_BOOL:: var_is_introduced ;
var bool: aux18809_BOOL:: var_is_introduced ;
var bool: aux18810_BOOL:: var_is_introduced ;
var bool: aux18811_BOOL:: var_is_introduced ;
var bool: aux18812_BOOL:: var_is_introduced ;
var {0,1}: aux18812_INTEGER :: var_is_introduced ;
var 3..60: aux18813:: var_is_introduced ;
var bool: aux18814_BOOL:: var_is_introduced ;
var bool: aux18815_BOOL:: var_is_introduced ;
var bool: aux18816_BOOL:: var_is_introduced ;
var bool: aux18817_BOOL:: var_is_introduced ;
var bool: aux18818_BOOL:: var_is_introduced ;
var {0,1}: aux18818_INTEGER :: var_is_introduced ;
var 2..59: aux18819:: var_is_introduced ;
var bool: aux18820_BOOL:: var_is_introduced ;
var bool: aux18821_BOOL:: var_is_introduced ;
var bool: aux18822_BOOL:: var_is_introduced ;
var bool: aux18823_BOOL:: var_is_introduced ;
var bool: aux18824_BOOL:: var_is_introduced ;
var {0,1}: aux18824_INTEGER :: var_is_introduced ;
var 3..60: aux18825:: var_is_introduced ;
var bool: aux18826_BOOL:: var_is_introduced ;
var bool: aux18827_BOOL:: var_is_introduced ;
var bool: aux18828_BOOL:: var_is_introduced ;
var bool: aux18829_BOOL:: var_is_introduced ;
var bool: aux18830_BOOL:: var_is_introduced ;
var {0,1}: aux18830_INTEGER :: var_is_introduced ;
var 2..59: aux18831:: var_is_introduced ;
var bool: aux18832_BOOL:: var_is_introduced ;
var bool: aux18833_BOOL:: var_is_introduced ;
var bool: aux18834_BOOL:: var_is_introduced ;
var bool: aux18835_BOOL:: var_is_introduced ;
var bool: aux18836_BOOL:: var_is_introduced ;
var {0,1}: aux18836_INTEGER :: var_is_introduced ;
var 3..60: aux18837:: var_is_introduced ;
var bool: aux18838_BOOL:: var_is_introduced ;
var bool: aux18839_BOOL:: var_is_introduced ;
var bool: aux18840_BOOL:: var_is_introduced ;
var bool: aux18841_BOOL:: var_is_introduced ;
var bool: aux18842_BOOL:: var_is_introduced ;
var {0,1}: aux18842_INTEGER :: var_is_introduced ;
var 2..59: aux18843:: var_is_introduced ;
var bool: aux18844_BOOL:: var_is_introduced ;
var bool: aux18845_BOOL:: var_is_introduced ;
var bool: aux18846_BOOL:: var_is_introduced ;
var bool: aux18847_BOOL:: var_is_introduced ;
var bool: aux18848_BOOL:: var_is_introduced ;
var {0,1}: aux18848_INTEGER :: var_is_introduced ;
var 2..59: aux18849:: var_is_introduced ;
var bool: aux18850_BOOL:: var_is_introduced ;
var bool: aux18851_BOOL:: var_is_introduced ;
var bool: aux18852_BOOL:: var_is_introduced ;
var bool: aux18853_BOOL:: var_is_introduced ;
var bool: aux18854_BOOL:: var_is_introduced ;
var {0,1}: aux18854_INTEGER :: var_is_introduced ;
var 3..60: aux18855:: var_is_introduced ;
var bool: aux18856_BOOL:: var_is_introduced ;
var bool: aux18857_BOOL:: var_is_introduced ;
var bool: aux18858_BOOL:: var_is_introduced ;
var bool: aux18859_BOOL:: var_is_introduced ;
var bool: aux18860_BOOL:: var_is_introduced ;
var {0,1}: aux18860_INTEGER :: var_is_introduced ;
var 5..62: aux18861:: var_is_introduced ;
var bool: aux18862_BOOL:: var_is_introduced ;
var bool: aux18863_BOOL:: var_is_introduced ;
var bool: aux18864_BOOL:: var_is_introduced ;
var bool: aux18865_BOOL:: var_is_introduced ;
var bool: aux18866_BOOL:: var_is_introduced ;
var {0,1}: aux18866_INTEGER :: var_is_introduced ;
var 4..61: aux18867:: var_is_introduced ;
var bool: aux18868_BOOL:: var_is_introduced ;
var bool: aux18869_BOOL:: var_is_introduced ;
var bool: aux18870_BOOL:: var_is_introduced ;
var bool: aux18871_BOOL:: var_is_introduced ;
var bool: aux18872_BOOL:: var_is_introduced ;
var {0,1}: aux18872_INTEGER :: var_is_introduced ;
var 2..59: aux18873:: var_is_introduced ;
var bool: aux18874_BOOL:: var_is_introduced ;
var bool: aux18875_BOOL:: var_is_introduced ;
var bool: aux18876_BOOL:: var_is_introduced ;
var bool: aux18877_BOOL:: var_is_introduced ;
var bool: aux18878_BOOL:: var_is_introduced ;
var {0,1}: aux18878_INTEGER :: var_is_introduced ;
var 1..58: aux18879:: var_is_introduced ;
var bool: aux18880_BOOL:: var_is_introduced ;
var bool: aux18881_BOOL:: var_is_introduced ;
var bool: aux18882_BOOL:: var_is_introduced ;
var bool: aux18883_BOOL:: var_is_introduced ;
var bool: aux18884_BOOL:: var_is_introduced ;
var {0,1}: aux18884_INTEGER :: var_is_introduced ;
var 3..60: aux18885:: var_is_introduced ;
var bool: aux18886_BOOL:: var_is_introduced ;
var bool: aux18887_BOOL:: var_is_introduced ;
var bool: aux18888_BOOL:: var_is_introduced ;
var bool: aux18889_BOOL:: var_is_introduced ;
var bool: aux18890_BOOL:: var_is_introduced ;
var {0,1}: aux18890_INTEGER :: var_is_introduced ;
var 1..58: aux18891:: var_is_introduced ;
var bool: aux18892_BOOL:: var_is_introduced ;
var bool: aux18893_BOOL:: var_is_introduced ;
var bool: aux18894_BOOL:: var_is_introduced ;
var bool: aux18895_BOOL:: var_is_introduced ;
var bool: aux18896_BOOL:: var_is_introduced ;
var {0,1}: aux18896_INTEGER :: var_is_introduced ;
var 4..61: aux18897:: var_is_introduced ;
var bool: aux18898_BOOL:: var_is_introduced ;
var bool: aux18899_BOOL:: var_is_introduced ;
var bool: aux18900_BOOL:: var_is_introduced ;
var bool: aux18901_BOOL:: var_is_introduced ;
var bool: aux18902_BOOL:: var_is_introduced ;
var {0,1}: aux18902_INTEGER :: var_is_introduced ;
var 4..61: aux18903:: var_is_introduced ;
var bool: aux18904_BOOL:: var_is_introduced ;
var bool: aux18905_BOOL:: var_is_introduced ;
var bool: aux18906_BOOL:: var_is_introduced ;
var bool: aux18907_BOOL:: var_is_introduced ;
var bool: aux18908_BOOL:: var_is_introduced ;
var {0,1}: aux18908_INTEGER :: var_is_introduced ;
var 2..59: aux18909:: var_is_introduced ;
var bool: aux18910_BOOL:: var_is_introduced ;
var bool: aux18911_BOOL:: var_is_introduced ;
var bool: aux18912_BOOL:: var_is_introduced ;
var bool: aux18913_BOOL:: var_is_introduced ;
var bool: aux18914_BOOL:: var_is_introduced ;
var {0,1}: aux18914_INTEGER :: var_is_introduced ;
var bool: aux18915_BOOL:: var_is_introduced ;
var 1..58: aux18916:: var_is_introduced ;
var bool: aux18917_BOOL:: var_is_introduced ;
var bool: aux18918_BOOL:: var_is_introduced ;
var bool: aux18919_BOOL:: var_is_introduced ;
var {0,1}: aux18919_INTEGER :: var_is_introduced ;
var 4..61: aux18920:: var_is_introduced ;
var bool: aux18921_BOOL:: var_is_introduced ;
var bool: aux18922_BOOL:: var_is_introduced ;
var bool: aux18923_BOOL:: var_is_introduced ;
var bool: aux18924_BOOL:: var_is_introduced ;
var bool: aux18925_BOOL:: var_is_introduced ;
var {0,1}: aux18925_INTEGER :: var_is_introduced ;
var 4..61: aux18926:: var_is_introduced ;
var bool: aux18927_BOOL:: var_is_introduced ;
var bool: aux18928_BOOL:: var_is_introduced ;
var bool: aux18929_BOOL:: var_is_introduced ;
var bool: aux18930_BOOL:: var_is_introduced ;
var bool: aux18931_BOOL:: var_is_introduced ;
var {0,1}: aux18931_INTEGER :: var_is_introduced ;
var 3..60: aux18932:: var_is_introduced ;
var bool: aux18933_BOOL:: var_is_introduced ;
var bool: aux18934_BOOL:: var_is_introduced ;
var bool: aux18935_BOOL:: var_is_introduced ;
var bool: aux18936_BOOL:: var_is_introduced ;
var bool: aux18937_BOOL:: var_is_introduced ;
var {0,1}: aux18937_INTEGER :: var_is_introduced ;
var 2..59: aux18938:: var_is_introduced ;
var bool: aux18939_BOOL:: var_is_introduced ;
var bool: aux18940_BOOL:: var_is_introduced ;
var bool: aux18941_BOOL:: var_is_introduced ;
var bool: aux18942_BOOL:: var_is_introduced ;
var bool: aux18943_BOOL:: var_is_introduced ;
var {0,1}: aux18943_INTEGER :: var_is_introduced ;
var 3..60: aux18944:: var_is_introduced ;
var bool: aux18945_BOOL:: var_is_introduced ;
var bool: aux18946_BOOL:: var_is_introduced ;
var bool: aux18947_BOOL:: var_is_introduced ;
var bool: aux18948_BOOL:: var_is_introduced ;
var bool: aux18949_BOOL:: var_is_introduced ;
var {0,1}: aux18949_INTEGER :: var_is_introduced ;
var 2..59: aux18950:: var_is_introduced ;
var bool: aux18951_BOOL:: var_is_introduced ;
var bool: aux18952_BOOL:: var_is_introduced ;
var bool: aux18953_BOOL:: var_is_introduced ;
var bool: aux18954_BOOL:: var_is_introduced ;
var bool: aux18955_BOOL:: var_is_introduced ;
var {0,1}: aux18955_INTEGER :: var_is_introduced ;
var 3..60: aux18956:: var_is_introduced ;
var bool: aux18957_BOOL:: var_is_introduced ;
var bool: aux18958_BOOL:: var_is_introduced ;
var bool: aux18959_BOOL:: var_is_introduced ;
var bool: aux18960_BOOL:: var_is_introduced ;
var bool: aux18961_BOOL:: var_is_introduced ;
var {0,1}: aux18961_INTEGER :: var_is_introduced ;
var 2..59: aux18962:: var_is_introduced ;
var bool: aux18963_BOOL:: var_is_introduced ;
var bool: aux18964_BOOL:: var_is_introduced ;
var bool: aux18965_BOOL:: var_is_introduced ;
var bool: aux18966_BOOL:: var_is_introduced ;
var bool: aux18967_BOOL:: var_is_introduced ;
var {0,1}: aux18967_INTEGER :: var_is_introduced ;
var 2..59: aux18968:: var_is_introduced ;
var bool: aux18969_BOOL:: var_is_introduced ;
var bool: aux18970_BOOL:: var_is_introduced ;
var bool: aux18971_BOOL:: var_is_introduced ;
var bool: aux18972_BOOL:: var_is_introduced ;
var bool: aux18973_BOOL:: var_is_introduced ;
var {0,1}: aux18973_INTEGER :: var_is_introduced ;
var 3..60: aux18974:: var_is_introduced ;
var bool: aux18975_BOOL:: var_is_introduced ;
var bool: aux18976_BOOL:: var_is_introduced ;
var bool: aux18977_BOOL:: var_is_introduced ;
var bool: aux18978_BOOL:: var_is_introduced ;
var bool: aux18979_BOOL:: var_is_introduced ;
var {0,1}: aux18979_INTEGER :: var_is_introduced ;
var 5..62: aux18980:: var_is_introduced ;
var bool: aux18981_BOOL:: var_is_introduced ;
var bool: aux18982_BOOL:: var_is_introduced ;
var bool: aux18983_BOOL:: var_is_introduced ;
var bool: aux18984_BOOL:: var_is_introduced ;
var bool: aux18985_BOOL:: var_is_introduced ;
var {0,1}: aux18985_INTEGER :: var_is_introduced ;
var 4..61: aux18986:: var_is_introduced ;
var bool: aux18987_BOOL:: var_is_introduced ;
var bool: aux18988_BOOL:: var_is_introduced ;
var bool: aux18989_BOOL:: var_is_introduced ;
var bool: aux18990_BOOL:: var_is_introduced ;
var bool: aux18991_BOOL:: var_is_introduced ;
var {0,1}: aux18991_INTEGER :: var_is_introduced ;
var 3..60: aux18992:: var_is_introduced ;
var bool: aux18993_BOOL:: var_is_introduced ;
var bool: aux18994_BOOL:: var_is_introduced ;
var bool: aux18995_BOOL:: var_is_introduced ;
var bool: aux18996_BOOL:: var_is_introduced ;
var bool: aux18997_BOOL:: var_is_introduced ;
var {0,1}: aux18997_INTEGER :: var_is_introduced ;
var 2..59: aux18998:: var_is_introduced ;
var bool: aux18999_BOOL:: var_is_introduced ;
var bool: aux19000_BOOL:: var_is_introduced ;
var bool: aux19001_BOOL:: var_is_introduced ;
var bool: aux19002_BOOL:: var_is_introduced ;
var bool: aux19003_BOOL:: var_is_introduced ;
var {0,1}: aux19003_INTEGER :: var_is_introduced ;
var 3..60: aux19004:: var_is_introduced ;
var bool: aux19005_BOOL:: var_is_introduced ;
var bool: aux19006_BOOL:: var_is_introduced ;
var bool: aux19007_BOOL:: var_is_introduced ;
var bool: aux19008_BOOL:: var_is_introduced ;
var bool: aux19009_BOOL:: var_is_introduced ;
var {0,1}: aux19009_INTEGER :: var_is_introduced ;
var 1..58: aux19010:: var_is_introduced ;
var bool: aux19011_BOOL:: var_is_introduced ;
var bool: aux19012_BOOL:: var_is_introduced ;
var bool: aux19013_BOOL:: var_is_introduced ;
var bool: aux19014_BOOL:: var_is_introduced ;
var bool: aux19015_BOOL:: var_is_introduced ;
var {0,1}: aux19015_INTEGER :: var_is_introduced ;
var 4..61: aux19016:: var_is_introduced ;
var bool: aux19017_BOOL:: var_is_introduced ;
var bool: aux19018_BOOL:: var_is_introduced ;
var bool: aux19019_BOOL:: var_is_introduced ;
var bool: aux19020_BOOL:: var_is_introduced ;
var bool: aux19021_BOOL:: var_is_introduced ;
var {0,1}: aux19021_INTEGER :: var_is_introduced ;
var 4..61: aux19022:: var_is_introduced ;
var bool: aux19023_BOOL:: var_is_introduced ;
var bool: aux19024_BOOL:: var_is_introduced ;
var bool: aux19025_BOOL:: var_is_introduced ;
var bool: aux19026_BOOL:: var_is_introduced ;
var bool: aux19027_BOOL:: var_is_introduced ;
var {0,1}: aux19027_INTEGER :: var_is_introduced ;
var 2..59: aux19028:: var_is_introduced ;
var bool: aux19029_BOOL:: var_is_introduced ;
var bool: aux19030_BOOL:: var_is_introduced ;
var bool: aux19031_BOOL:: var_is_introduced ;
var bool: aux19032_BOOL:: var_is_introduced ;
var bool: aux19033_BOOL:: var_is_introduced ;
var {0,1}: aux19033_INTEGER :: var_is_introduced ;
var bool: aux19034_BOOL:: var_is_introduced ;
var 4..61: aux19035:: var_is_introduced ;
var bool: aux19036_BOOL:: var_is_introduced ;
var bool: aux19037_BOOL:: var_is_introduced ;
var bool: aux19038_BOOL:: var_is_introduced ;
var {0,1}: aux19038_INTEGER :: var_is_introduced ;
var 4..61: aux19039:: var_is_introduced ;
var bool: aux19040_BOOL:: var_is_introduced ;
var bool: aux19041_BOOL:: var_is_introduced ;
var bool: aux19042_BOOL:: var_is_introduced ;
var bool: aux19043_BOOL:: var_is_introduced ;
var bool: aux19044_BOOL:: var_is_introduced ;
var {0,1}: aux19044_INTEGER :: var_is_introduced ;
var 4..61: aux19045:: var_is_introduced ;
var bool: aux19046_BOOL:: var_is_introduced ;
var bool: aux19047_BOOL:: var_is_introduced ;
var bool: aux19048_BOOL:: var_is_introduced ;
var bool: aux19049_BOOL:: var_is_introduced ;
var bool: aux19050_BOOL:: var_is_introduced ;
var {0,1}: aux19050_INTEGER :: var_is_introduced ;
var 3..60: aux19051:: var_is_introduced ;
var bool: aux19052_BOOL:: var_is_introduced ;
var bool: aux19053_BOOL:: var_is_introduced ;
var bool: aux19054_BOOL:: var_is_introduced ;
var bool: aux19055_BOOL:: var_is_introduced ;
var bool: aux19056_BOOL:: var_is_introduced ;
var {0,1}: aux19056_INTEGER :: var_is_introduced ;
var 2..59: aux19057:: var_is_introduced ;
var bool: aux19058_BOOL:: var_is_introduced ;
var bool: aux19059_BOOL:: var_is_introduced ;
var bool: aux19060_BOOL:: var_is_introduced ;
var bool: aux19061_BOOL:: var_is_introduced ;
var bool: aux19062_BOOL:: var_is_introduced ;
var {0,1}: aux19062_INTEGER :: var_is_introduced ;
var 3..60: aux19063:: var_is_introduced ;
var bool: aux19064_BOOL:: var_is_introduced ;
var bool: aux19065_BOOL:: var_is_introduced ;
var bool: aux19066_BOOL:: var_is_introduced ;
var bool: aux19067_BOOL:: var_is_introduced ;
var bool: aux19068_BOOL:: var_is_introduced ;
var {0,1}: aux19068_INTEGER :: var_is_introduced ;
var 2..59: aux19069:: var_is_introduced ;
var bool: aux19070_BOOL:: var_is_introduced ;
var bool: aux19071_BOOL:: var_is_introduced ;
var bool: aux19072_BOOL:: var_is_introduced ;
var bool: aux19073_BOOL:: var_is_introduced ;
var bool: aux19074_BOOL:: var_is_introduced ;
var {0,1}: aux19074_INTEGER :: var_is_introduced ;
var 3..60: aux19075:: var_is_introduced ;
var bool: aux19076_BOOL:: var_is_introduced ;
var bool: aux19077_BOOL:: var_is_introduced ;
var bool: aux19078_BOOL:: var_is_introduced ;
var bool: aux19079_BOOL:: var_is_introduced ;
var bool: aux19080_BOOL:: var_is_introduced ;
var {0,1}: aux19080_INTEGER :: var_is_introduced ;
var 2..59: aux19081:: var_is_introduced ;
var bool: aux19082_BOOL:: var_is_introduced ;
var bool: aux19083_BOOL:: var_is_introduced ;
var bool: aux19084_BOOL:: var_is_introduced ;
var bool: aux19085_BOOL:: var_is_introduced ;
var bool: aux19086_BOOL:: var_is_introduced ;
var {0,1}: aux19086_INTEGER :: var_is_introduced ;
var 2..59: aux19087:: var_is_introduced ;
var bool: aux19088_BOOL:: var_is_introduced ;
var bool: aux19089_BOOL:: var_is_introduced ;
var bool: aux19090_BOOL:: var_is_introduced ;
var bool: aux19091_BOOL:: var_is_introduced ;
var bool: aux19092_BOOL:: var_is_introduced ;
var {0,1}: aux19092_INTEGER :: var_is_introduced ;
var 3..60: aux19093:: var_is_introduced ;
var bool: aux19094_BOOL:: var_is_introduced ;
var bool: aux19095_BOOL:: var_is_introduced ;
var bool: aux19096_BOOL:: var_is_introduced ;
var bool: aux19097_BOOL:: var_is_introduced ;
var bool: aux19098_BOOL:: var_is_introduced ;
var {0,1}: aux19098_INTEGER :: var_is_introduced ;
var 5..62: aux19099:: var_is_introduced ;
var bool: aux19100_BOOL:: var_is_introduced ;
var bool: aux19101_BOOL:: var_is_introduced ;
var bool: aux19102_BOOL:: var_is_introduced ;
var bool: aux19103_BOOL:: var_is_introduced ;
var bool: aux19104_BOOL:: var_is_introduced ;
var {0,1}: aux19104_INTEGER :: var_is_introduced ;
var 4..61: aux19105:: var_is_introduced ;
var bool: aux19106_BOOL:: var_is_introduced ;
var bool: aux19107_BOOL:: var_is_introduced ;
var bool: aux19108_BOOL:: var_is_introduced ;
var bool: aux19109_BOOL:: var_is_introduced ;
var bool: aux19110_BOOL:: var_is_introduced ;
var {0,1}: aux19110_INTEGER :: var_is_introduced ;
var 3..60: aux19111:: var_is_introduced ;
var bool: aux19112_BOOL:: var_is_introduced ;
var bool: aux19113_BOOL:: var_is_introduced ;
var bool: aux19114_BOOL:: var_is_introduced ;
var bool: aux19115_BOOL:: var_is_introduced ;
var bool: aux19116_BOOL:: var_is_introduced ;
var {0,1}: aux19116_INTEGER :: var_is_introduced ;
var 2..59: aux19117:: var_is_introduced ;
var bool: aux19118_BOOL:: var_is_introduced ;
var bool: aux19119_BOOL:: var_is_introduced ;
var bool: aux19120_BOOL:: var_is_introduced ;
var bool: aux19121_BOOL:: var_is_introduced ;
var bool: aux19122_BOOL:: var_is_introduced ;
var {0,1}: aux19122_INTEGER :: var_is_introduced ;
var 1..58: aux19123:: var_is_introduced ;
var bool: aux19124_BOOL:: var_is_introduced ;
var bool: aux19125_BOOL:: var_is_introduced ;
var bool: aux19126_BOOL:: var_is_introduced ;
var bool: aux19127_BOOL:: var_is_introduced ;
var bool: aux19128_BOOL:: var_is_introduced ;
var {0,1}: aux19128_INTEGER :: var_is_introduced ;
var 3..60: aux19129:: var_is_introduced ;
var bool: aux19130_BOOL:: var_is_introduced ;
var bool: aux19131_BOOL:: var_is_introduced ;
var bool: aux19132_BOOL:: var_is_introduced ;
var bool: aux19133_BOOL:: var_is_introduced ;
var bool: aux19134_BOOL:: var_is_introduced ;
var {0,1}: aux19134_INTEGER :: var_is_introduced ;
var 1..58: aux19135:: var_is_introduced ;
var bool: aux19136_BOOL:: var_is_introduced ;
var bool: aux19137_BOOL:: var_is_introduced ;
var bool: aux19138_BOOL:: var_is_introduced ;
var bool: aux19139_BOOL:: var_is_introduced ;
var bool: aux19140_BOOL:: var_is_introduced ;
var {0,1}: aux19140_INTEGER :: var_is_introduced ;
var 4..61: aux19141:: var_is_introduced ;
var bool: aux19142_BOOL:: var_is_introduced ;
var bool: aux19143_BOOL:: var_is_introduced ;
var bool: aux19144_BOOL:: var_is_introduced ;
var bool: aux19145_BOOL:: var_is_introduced ;
var bool: aux19146_BOOL:: var_is_introduced ;
var {0,1}: aux19146_INTEGER :: var_is_introduced ;
var 2..59: aux19147:: var_is_introduced ;
var bool: aux19148_BOOL:: var_is_introduced ;
var bool: aux19149_BOOL:: var_is_introduced ;
var bool: aux19150_BOOL:: var_is_introduced ;
var bool: aux19151_BOOL:: var_is_introduced ;
var bool: aux19152_BOOL:: var_is_introduced ;
var {0,1}: aux19152_INTEGER :: var_is_introduced ;
var bool: aux19153_BOOL:: var_is_introduced ;
var 1..58: aux19154:: var_is_introduced ;
var bool: aux19155_BOOL:: var_is_introduced ;
var bool: aux19156_BOOL:: var_is_introduced ;
var bool: aux19157_BOOL:: var_is_introduced ;
var {0,1}: aux19157_INTEGER :: var_is_introduced ;
var 4..61: aux19158:: var_is_introduced ;
var bool: aux19159_BOOL:: var_is_introduced ;
var bool: aux19160_BOOL:: var_is_introduced ;
var bool: aux19161_BOOL:: var_is_introduced ;
var bool: aux19162_BOOL:: var_is_introduced ;
var bool: aux19163_BOOL:: var_is_introduced ;
var {0,1}: aux19163_INTEGER :: var_is_introduced ;
var 4..61: aux19164:: var_is_introduced ;
var bool: aux19165_BOOL:: var_is_introduced ;
var bool: aux19166_BOOL:: var_is_introduced ;
var bool: aux19167_BOOL:: var_is_introduced ;
var bool: aux19168_BOOL:: var_is_introduced ;
var bool: aux19169_BOOL:: var_is_introduced ;
var {0,1}: aux19169_INTEGER :: var_is_introduced ;
var 3..60: aux19170:: var_is_introduced ;
var bool: aux19171_BOOL:: var_is_introduced ;
var bool: aux19172_BOOL:: var_is_introduced ;
var bool: aux19173_BOOL:: var_is_introduced ;
var bool: aux19174_BOOL:: var_is_introduced ;
var bool: aux19175_BOOL:: var_is_introduced ;
var {0,1}: aux19175_INTEGER :: var_is_introduced ;
var 2..59: aux19176:: var_is_introduced ;
var bool: aux19177_BOOL:: var_is_introduced ;
var bool: aux19178_BOOL:: var_is_introduced ;
var bool: aux19179_BOOL:: var_is_introduced ;
var bool: aux19180_BOOL:: var_is_introduced ;
var bool: aux19181_BOOL:: var_is_introduced ;
var {0,1}: aux19181_INTEGER :: var_is_introduced ;
var 3..60: aux19182:: var_is_introduced ;
var bool: aux19183_BOOL:: var_is_introduced ;
var bool: aux19184_BOOL:: var_is_introduced ;
var bool: aux19185_BOOL:: var_is_introduced ;
var bool: aux19186_BOOL:: var_is_introduced ;
var bool: aux19187_BOOL:: var_is_introduced ;
var {0,1}: aux19187_INTEGER :: var_is_introduced ;
var 2..59: aux19188:: var_is_introduced ;
var bool: aux19189_BOOL:: var_is_introduced ;
var bool: aux19190_BOOL:: var_is_introduced ;
var bool: aux19191_BOOL:: var_is_introduced ;
var bool: aux19192_BOOL:: var_is_introduced ;
var bool: aux19193_BOOL:: var_is_introduced ;
var {0,1}: aux19193_INTEGER :: var_is_introduced ;
var 3..60: aux19194:: var_is_introduced ;
var bool: aux19195_BOOL:: var_is_introduced ;
var bool: aux19196_BOOL:: var_is_introduced ;
var bool: aux19197_BOOL:: var_is_introduced ;
var bool: aux19198_BOOL:: var_is_introduced ;
var bool: aux19199_BOOL:: var_is_introduced ;
var {0,1}: aux19199_INTEGER :: var_is_introduced ;
var 2..59: aux19200:: var_is_introduced ;
var bool: aux19201_BOOL:: var_is_introduced ;
var bool: aux19202_BOOL:: var_is_introduced ;
var bool: aux19203_BOOL:: var_is_introduced ;
var bool: aux19204_BOOL:: var_is_introduced ;
var bool: aux19205_BOOL:: var_is_introduced ;
var {0,1}: aux19205_INTEGER :: var_is_introduced ;
var 2..59: aux19206:: var_is_introduced ;
var bool: aux19207_BOOL:: var_is_introduced ;
var bool: aux19208_BOOL:: var_is_introduced ;
var bool: aux19209_BOOL:: var_is_introduced ;
var bool: aux19210_BOOL:: var_is_introduced ;
var bool: aux19211_BOOL:: var_is_introduced ;
var {0,1}: aux19211_INTEGER :: var_is_introduced ;
var 3..60: aux19212:: var_is_introduced ;
var bool: aux19213_BOOL:: var_is_introduced ;
var bool: aux19214_BOOL:: var_is_introduced ;
var bool: aux19215_BOOL:: var_is_introduced ;
var bool: aux19216_BOOL:: var_is_introduced ;
var bool: aux19217_BOOL:: var_is_introduced ;
var {0,1}: aux19217_INTEGER :: var_is_introduced ;
var 5..62: aux19218:: var_is_introduced ;
var bool: aux19219_BOOL:: var_is_introduced ;
var bool: aux19220_BOOL:: var_is_introduced ;
var bool: aux19221_BOOL:: var_is_introduced ;
var bool: aux19222_BOOL:: var_is_introduced ;
var bool: aux19223_BOOL:: var_is_introduced ;
var {0,1}: aux19223_INTEGER :: var_is_introduced ;
var 4..61: aux19224:: var_is_introduced ;
var bool: aux19225_BOOL:: var_is_introduced ;
var bool: aux19226_BOOL:: var_is_introduced ;
var bool: aux19227_BOOL:: var_is_introduced ;
var bool: aux19228_BOOL:: var_is_introduced ;
var bool: aux19229_BOOL:: var_is_introduced ;
var {0,1}: aux19229_INTEGER :: var_is_introduced ;
var 3..60: aux19230:: var_is_introduced ;
var bool: aux19231_BOOL:: var_is_introduced ;
var bool: aux19232_BOOL:: var_is_introduced ;
var bool: aux19233_BOOL:: var_is_introduced ;
var bool: aux19234_BOOL:: var_is_introduced ;
var bool: aux19235_BOOL:: var_is_introduced ;
var {0,1}: aux19235_INTEGER :: var_is_introduced ;
var 2..59: aux19236:: var_is_introduced ;
var bool: aux19237_BOOL:: var_is_introduced ;
var bool: aux19238_BOOL:: var_is_introduced ;
var bool: aux19239_BOOL:: var_is_introduced ;
var bool: aux19240_BOOL:: var_is_introduced ;
var bool: aux19241_BOOL:: var_is_introduced ;
var {0,1}: aux19241_INTEGER :: var_is_introduced ;
var 1..58: aux19242:: var_is_introduced ;
var bool: aux19243_BOOL:: var_is_introduced ;
var bool: aux19244_BOOL:: var_is_introduced ;
var bool: aux19245_BOOL:: var_is_introduced ;
var bool: aux19246_BOOL:: var_is_introduced ;
var bool: aux19247_BOOL:: var_is_introduced ;
var {0,1}: aux19247_INTEGER :: var_is_introduced ;
var 3..60: aux19248:: var_is_introduced ;
var bool: aux19249_BOOL:: var_is_introduced ;
var bool: aux19250_BOOL:: var_is_introduced ;
var bool: aux19251_BOOL:: var_is_introduced ;
var bool: aux19252_BOOL:: var_is_introduced ;
var bool: aux19253_BOOL:: var_is_introduced ;
var {0,1}: aux19253_INTEGER :: var_is_introduced ;
var 4..61: aux19254:: var_is_introduced ;
var bool: aux19255_BOOL:: var_is_introduced ;
var bool: aux19256_BOOL:: var_is_introduced ;
var bool: aux19257_BOOL:: var_is_introduced ;
var bool: aux19258_BOOL:: var_is_introduced ;
var bool: aux19259_BOOL:: var_is_introduced ;
var {0,1}: aux19259_INTEGER :: var_is_introduced ;
var 4..61: aux19260:: var_is_introduced ;
var bool: aux19261_BOOL:: var_is_introduced ;
var bool: aux19262_BOOL:: var_is_introduced ;
var bool: aux19263_BOOL:: var_is_introduced ;
var bool: aux19264_BOOL:: var_is_introduced ;
var bool: aux19265_BOOL:: var_is_introduced ;
var {0,1}: aux19265_INTEGER :: var_is_introduced ;
var 2..59: aux19266:: var_is_introduced ;
var bool: aux19267_BOOL:: var_is_introduced ;
var bool: aux19268_BOOL:: var_is_introduced ;
var bool: aux19269_BOOL:: var_is_introduced ;
var bool: aux19270_BOOL:: var_is_introduced ;
var bool: aux19271_BOOL:: var_is_introduced ;
var {0,1}: aux19271_INTEGER :: var_is_introduced ;
var bool: aux19272_BOOL:: var_is_introduced ;
var 4..61: aux19273:: var_is_introduced ;
var bool: aux19274_BOOL:: var_is_introduced ;
var bool: aux19275_BOOL:: var_is_introduced ;
var bool: aux19276_BOOL:: var_is_introduced ;
var {0,1}: aux19276_INTEGER :: var_is_introduced ;
var 4..61: aux19277:: var_is_introduced ;
var bool: aux19278_BOOL:: var_is_introduced ;
var bool: aux19279_BOOL:: var_is_introduced ;
var bool: aux19280_BOOL:: var_is_introduced ;
var bool: aux19281_BOOL:: var_is_introduced ;
var bool: aux19282_BOOL:: var_is_introduced ;
var {0,1}: aux19282_INTEGER :: var_is_introduced ;
var 3..60: aux19283:: var_is_introduced ;
var bool: aux19284_BOOL:: var_is_introduced ;
var bool: aux19285_BOOL:: var_is_introduced ;
var bool: aux19286_BOOL:: var_is_introduced ;
var bool: aux19287_BOOL:: var_is_introduced ;
var bool: aux19288_BOOL:: var_is_introduced ;
var {0,1}: aux19288_INTEGER :: var_is_introduced ;
var 2..59: aux19289:: var_is_introduced ;
var bool: aux19290_BOOL:: var_is_introduced ;
var bool: aux19291_BOOL:: var_is_introduced ;
var bool: aux19292_BOOL:: var_is_introduced ;
var bool: aux19293_BOOL:: var_is_introduced ;
var bool: aux19294_BOOL:: var_is_introduced ;
var {0,1}: aux19294_INTEGER :: var_is_introduced ;
var 3..60: aux19295:: var_is_introduced ;
var bool: aux19296_BOOL:: var_is_introduced ;
var bool: aux19297_BOOL:: var_is_introduced ;
var bool: aux19298_BOOL:: var_is_introduced ;
var bool: aux19299_BOOL:: var_is_introduced ;
var bool: aux19300_BOOL:: var_is_introduced ;
var {0,1}: aux19300_INTEGER :: var_is_introduced ;
var 2..59: aux19301:: var_is_introduced ;
var bool: aux19302_BOOL:: var_is_introduced ;
var bool: aux19303_BOOL:: var_is_introduced ;
var bool: aux19304_BOOL:: var_is_introduced ;
var bool: aux19305_BOOL:: var_is_introduced ;
var bool: aux19306_BOOL:: var_is_introduced ;
var {0,1}: aux19306_INTEGER :: var_is_introduced ;
var 3..60: aux19307:: var_is_introduced ;
var bool: aux19308_BOOL:: var_is_introduced ;
var bool: aux19309_BOOL:: var_is_introduced ;
var bool: aux19310_BOOL:: var_is_introduced ;
var bool: aux19311_BOOL:: var_is_introduced ;
var bool: aux19312_BOOL:: var_is_introduced ;
var {0,1}: aux19312_INTEGER :: var_is_introduced ;
var 2..59: aux19313:: var_is_introduced ;
var bool: aux19314_BOOL:: var_is_introduced ;
var bool: aux19315_BOOL:: var_is_introduced ;
var bool: aux19316_BOOL:: var_is_introduced ;
var bool: aux19317_BOOL:: var_is_introduced ;
var bool: aux19318_BOOL:: var_is_introduced ;
var {0,1}: aux19318_INTEGER :: var_is_introduced ;
var 2..59: aux19319:: var_is_introduced ;
var bool: aux19320_BOOL:: var_is_introduced ;
var bool: aux19321_BOOL:: var_is_introduced ;
var bool: aux19322_BOOL:: var_is_introduced ;
var bool: aux19323_BOOL:: var_is_introduced ;
var bool: aux19324_BOOL:: var_is_introduced ;
var {0,1}: aux19324_INTEGER :: var_is_introduced ;
var 3..60: aux19325:: var_is_introduced ;
var bool: aux19326_BOOL:: var_is_introduced ;
var bool: aux19327_BOOL:: var_is_introduced ;
var bool: aux19328_BOOL:: var_is_introduced ;
var bool: aux19329_BOOL:: var_is_introduced ;
var bool: aux19330_BOOL:: var_is_introduced ;
var {0,1}: aux19330_INTEGER :: var_is_introduced ;
var 5..62: aux19331:: var_is_introduced ;
var bool: aux19332_BOOL:: var_is_introduced ;
var bool: aux19333_BOOL:: var_is_introduced ;
var bool: aux19334_BOOL:: var_is_introduced ;
var bool: aux19335_BOOL:: var_is_introduced ;
var bool: aux19336_BOOL:: var_is_introduced ;
var {0,1}: aux19336_INTEGER :: var_is_introduced ;
var 4..61: aux19337:: var_is_introduced ;
var bool: aux19338_BOOL:: var_is_introduced ;
var bool: aux19339_BOOL:: var_is_introduced ;
var bool: aux19340_BOOL:: var_is_introduced ;
var bool: aux19341_BOOL:: var_is_introduced ;
var bool: aux19342_BOOL:: var_is_introduced ;
var {0,1}: aux19342_INTEGER :: var_is_introduced ;
var 3..60: aux19343:: var_is_introduced ;
var bool: aux19344_BOOL:: var_is_introduced ;
var bool: aux19345_BOOL:: var_is_introduced ;
var bool: aux19346_BOOL:: var_is_introduced ;
var bool: aux19347_BOOL:: var_is_introduced ;
var bool: aux19348_BOOL:: var_is_introduced ;
var {0,1}: aux19348_INTEGER :: var_is_introduced ;
var 2..59: aux19349:: var_is_introduced ;
var bool: aux19350_BOOL:: var_is_introduced ;
var bool: aux19351_BOOL:: var_is_introduced ;
var bool: aux19352_BOOL:: var_is_introduced ;
var bool: aux19353_BOOL:: var_is_introduced ;
var bool: aux19354_BOOL:: var_is_introduced ;
var {0,1}: aux19354_INTEGER :: var_is_introduced ;
var 1..58: aux19355:: var_is_introduced ;
var bool: aux19356_BOOL:: var_is_introduced ;
var bool: aux19357_BOOL:: var_is_introduced ;
var bool: aux19358_BOOL:: var_is_introduced ;
var bool: aux19359_BOOL:: var_is_introduced ;
var bool: aux19360_BOOL:: var_is_introduced ;
var {0,1}: aux19360_INTEGER :: var_is_introduced ;
var 3..60: aux19361:: var_is_introduced ;
var bool: aux19362_BOOL:: var_is_introduced ;
var bool: aux19363_BOOL:: var_is_introduced ;
var bool: aux19364_BOOL:: var_is_introduced ;
var bool: aux19365_BOOL:: var_is_introduced ;
var bool: aux19366_BOOL:: var_is_introduced ;
var {0,1}: aux19366_INTEGER :: var_is_introduced ;
var 1..58: aux19367:: var_is_introduced ;
var bool: aux19368_BOOL:: var_is_introduced ;
var bool: aux19369_BOOL:: var_is_introduced ;
var bool: aux19370_BOOL:: var_is_introduced ;
var bool: aux19371_BOOL:: var_is_introduced ;
var bool: aux19372_BOOL:: var_is_introduced ;
var {0,1}: aux19372_INTEGER :: var_is_introduced ;
var 4..61: aux19373:: var_is_introduced ;
var bool: aux19374_BOOL:: var_is_introduced ;
var bool: aux19375_BOOL:: var_is_introduced ;
var bool: aux19376_BOOL:: var_is_introduced ;
var bool: aux19377_BOOL:: var_is_introduced ;
var bool: aux19378_BOOL:: var_is_introduced ;
var {0,1}: aux19378_INTEGER :: var_is_introduced ;
var 4..61: aux19379:: var_is_introduced ;
var bool: aux19380_BOOL:: var_is_introduced ;
var bool: aux19381_BOOL:: var_is_introduced ;
var bool: aux19382_BOOL:: var_is_introduced ;
var bool: aux19383_BOOL:: var_is_introduced ;
var bool: aux19384_BOOL:: var_is_introduced ;
var {0,1}: aux19384_INTEGER :: var_is_introduced ;
var 2..59: aux19385:: var_is_introduced ;
var bool: aux19386_BOOL:: var_is_introduced ;
var bool: aux19387_BOOL:: var_is_introduced ;
var bool: aux19388_BOOL:: var_is_introduced ;
var bool: aux19389_BOOL:: var_is_introduced ;
var bool: aux19390_BOOL:: var_is_introduced ;
var {0,1}: aux19390_INTEGER :: var_is_introduced ;
var bool: aux19391_BOOL:: var_is_introduced ;
var 2..59: aux19392:: var_is_introduced ;
var bool: aux19393_BOOL:: var_is_introduced ;
var bool: aux19394_BOOL:: var_is_introduced ;
var bool: aux19395_BOOL:: var_is_introduced ;
var {0,1}: aux19395_INTEGER :: var_is_introduced ;
var 4..61: aux19396:: var_is_introduced ;
var bool: aux19397_BOOL:: var_is_introduced ;
var bool: aux19398_BOOL:: var_is_introduced ;
var bool: aux19399_BOOL:: var_is_introduced ;
var bool: aux19400_BOOL:: var_is_introduced ;
var bool: aux19401_BOOL:: var_is_introduced ;
var {0,1}: aux19401_INTEGER :: var_is_introduced ;
var 4..61: aux19402:: var_is_introduced ;
var bool: aux19403_BOOL:: var_is_introduced ;
var bool: aux19404_BOOL:: var_is_introduced ;
var bool: aux19405_BOOL:: var_is_introduced ;
var bool: aux19406_BOOL:: var_is_introduced ;
var bool: aux19407_BOOL:: var_is_introduced ;
var {0,1}: aux19407_INTEGER :: var_is_introduced ;
var 3..60: aux19408:: var_is_introduced ;
var bool: aux19409_BOOL:: var_is_introduced ;
var bool: aux19410_BOOL:: var_is_introduced ;
var bool: aux19411_BOOL:: var_is_introduced ;
var bool: aux19412_BOOL:: var_is_introduced ;
var bool: aux19413_BOOL:: var_is_introduced ;
var {0,1}: aux19413_INTEGER :: var_is_introduced ;
var 3..60: aux19414:: var_is_introduced ;
var bool: aux19415_BOOL:: var_is_introduced ;
var bool: aux19416_BOOL:: var_is_introduced ;
var bool: aux19417_BOOL:: var_is_introduced ;
var bool: aux19418_BOOL:: var_is_introduced ;
var bool: aux19419_BOOL:: var_is_introduced ;
var {0,1}: aux19419_INTEGER :: var_is_introduced ;
var 2..59: aux19420:: var_is_introduced ;
var bool: aux19421_BOOL:: var_is_introduced ;
var bool: aux19422_BOOL:: var_is_introduced ;
var bool: aux19423_BOOL:: var_is_introduced ;
var bool: aux19424_BOOL:: var_is_introduced ;
var bool: aux19425_BOOL:: var_is_introduced ;
var {0,1}: aux19425_INTEGER :: var_is_introduced ;
var 3..60: aux19426:: var_is_introduced ;
var bool: aux19427_BOOL:: var_is_introduced ;
var bool: aux19428_BOOL:: var_is_introduced ;
var bool: aux19429_BOOL:: var_is_introduced ;
var bool: aux19430_BOOL:: var_is_introduced ;
var bool: aux19431_BOOL:: var_is_introduced ;
var {0,1}: aux19431_INTEGER :: var_is_introduced ;
var 2..59: aux19432:: var_is_introduced ;
var bool: aux19433_BOOL:: var_is_introduced ;
var bool: aux19434_BOOL:: var_is_introduced ;
var bool: aux19435_BOOL:: var_is_introduced ;
var bool: aux19436_BOOL:: var_is_introduced ;
var bool: aux19437_BOOL:: var_is_introduced ;
var {0,1}: aux19437_INTEGER :: var_is_introduced ;
var 2..59: aux19438:: var_is_introduced ;
var bool: aux19439_BOOL:: var_is_introduced ;
var bool: aux19440_BOOL:: var_is_introduced ;
var bool: aux19441_BOOL:: var_is_introduced ;
var bool: aux19442_BOOL:: var_is_introduced ;
var bool: aux19443_BOOL:: var_is_introduced ;
var {0,1}: aux19443_INTEGER :: var_is_introduced ;
var 3..60: aux19444:: var_is_introduced ;
var bool: aux19445_BOOL:: var_is_introduced ;
var bool: aux19446_BOOL:: var_is_introduced ;
var bool: aux19447_BOOL:: var_is_introduced ;
var bool: aux19448_BOOL:: var_is_introduced ;
var bool: aux19449_BOOL:: var_is_introduced ;
var {0,1}: aux19449_INTEGER :: var_is_introduced ;
var 5..62: aux19450:: var_is_introduced ;
var bool: aux19451_BOOL:: var_is_introduced ;
var bool: aux19452_BOOL:: var_is_introduced ;
var bool: aux19453_BOOL:: var_is_introduced ;
var bool: aux19454_BOOL:: var_is_introduced ;
var bool: aux19455_BOOL:: var_is_introduced ;
var {0,1}: aux19455_INTEGER :: var_is_introduced ;
var 4..61: aux19456:: var_is_introduced ;
var bool: aux19457_BOOL:: var_is_introduced ;
var bool: aux19458_BOOL:: var_is_introduced ;
var bool: aux19459_BOOL:: var_is_introduced ;
var bool: aux19460_BOOL:: var_is_introduced ;
var bool: aux19461_BOOL:: var_is_introduced ;
var {0,1}: aux19461_INTEGER :: var_is_introduced ;
var 3..60: aux19462:: var_is_introduced ;
var bool: aux19463_BOOL:: var_is_introduced ;
var bool: aux19464_BOOL:: var_is_introduced ;
var bool: aux19465_BOOL:: var_is_introduced ;
var bool: aux19466_BOOL:: var_is_introduced ;
var bool: aux19467_BOOL:: var_is_introduced ;
var {0,1}: aux19467_INTEGER :: var_is_introduced ;
var 2..59: aux19468:: var_is_introduced ;
var bool: aux19469_BOOL:: var_is_introduced ;
var bool: aux19470_BOOL:: var_is_introduced ;
var bool: aux19471_BOOL:: var_is_introduced ;
var bool: aux19472_BOOL:: var_is_introduced ;
var bool: aux19473_BOOL:: var_is_introduced ;
var {0,1}: aux19473_INTEGER :: var_is_introduced ;
var 1..58: aux19474:: var_is_introduced ;
var bool: aux19475_BOOL:: var_is_introduced ;
var bool: aux19476_BOOL:: var_is_introduced ;
var bool: aux19477_BOOL:: var_is_introduced ;
var bool: aux19478_BOOL:: var_is_introduced ;
var bool: aux19479_BOOL:: var_is_introduced ;
var {0,1}: aux19479_INTEGER :: var_is_introduced ;
var 3..60: aux19480:: var_is_introduced ;
var bool: aux19481_BOOL:: var_is_introduced ;
var bool: aux19482_BOOL:: var_is_introduced ;
var bool: aux19483_BOOL:: var_is_introduced ;
var bool: aux19484_BOOL:: var_is_introduced ;
var bool: aux19485_BOOL:: var_is_introduced ;
var {0,1}: aux19485_INTEGER :: var_is_introduced ;
var 1..58: aux19486:: var_is_introduced ;
var bool: aux19487_BOOL:: var_is_introduced ;
var bool: aux19488_BOOL:: var_is_introduced ;
var bool: aux19489_BOOL:: var_is_introduced ;
var bool: aux19490_BOOL:: var_is_introduced ;
var bool: aux19491_BOOL:: var_is_introduced ;
var {0,1}: aux19491_INTEGER :: var_is_introduced ;
var 4..61: aux19492:: var_is_introduced ;
var bool: aux19493_BOOL:: var_is_introduced ;
var bool: aux19494_BOOL:: var_is_introduced ;
var bool: aux19495_BOOL:: var_is_introduced ;
var bool: aux19496_BOOL:: var_is_introduced ;
var bool: aux19497_BOOL:: var_is_introduced ;
var {0,1}: aux19497_INTEGER :: var_is_introduced ;
var 4..61: aux19498:: var_is_introduced ;
var bool: aux19499_BOOL:: var_is_introduced ;
var bool: aux19500_BOOL:: var_is_introduced ;
var bool: aux19501_BOOL:: var_is_introduced ;
var bool: aux19502_BOOL:: var_is_introduced ;
var bool: aux19503_BOOL:: var_is_introduced ;
var {0,1}: aux19503_INTEGER :: var_is_introduced ;
var 2..59: aux19504:: var_is_introduced ;
var bool: aux19505_BOOL:: var_is_introduced ;
var bool: aux19506_BOOL:: var_is_introduced ;
var bool: aux19507_BOOL:: var_is_introduced ;
var bool: aux19508_BOOL:: var_is_introduced ;
var bool: aux19509_BOOL:: var_is_introduced ;
var {0,1}: aux19509_INTEGER :: var_is_introduced ;
var bool: aux19510_BOOL:: var_is_introduced ;
var bool: aux19511_BOOL:: var_is_introduced ;
var bool: aux19512_BOOL:: var_is_introduced ;
var bool: aux19513_BOOL:: var_is_introduced ;
var bool: aux19514_BOOL:: var_is_introduced ;
var 4..61: aux19515:: var_is_introduced ;
var bool: aux19516_BOOL:: var_is_introduced ;
var bool: aux19517_BOOL:: var_is_introduced ;
var bool: aux19518_BOOL:: var_is_introduced ;
var {0,1}: aux19518_INTEGER :: var_is_introduced ;
var bool: aux19519_BOOL:: var_is_introduced ;
var bool: aux19520_BOOL:: var_is_introduced ;
var 4..61: aux19521:: var_is_introduced ;
var bool: aux19522_BOOL:: var_is_introduced ;
var bool: aux19523_BOOL:: var_is_introduced ;
var bool: aux19524_BOOL:: var_is_introduced ;
var {0,1}: aux19524_INTEGER :: var_is_introduced ;
var bool: aux19525_BOOL:: var_is_introduced ;
var bool: aux19526_BOOL:: var_is_introduced ;
var 3..60: aux19527:: var_is_introduced ;
var bool: aux19528_BOOL:: var_is_introduced ;
var bool: aux19529_BOOL:: var_is_introduced ;
var bool: aux19530_BOOL:: var_is_introduced ;
var {0,1}: aux19530_INTEGER :: var_is_introduced ;
var bool: aux19531_BOOL:: var_is_introduced ;
var bool: aux19532_BOOL:: var_is_introduced ;
var 2..59: aux19533:: var_is_introduced ;
var bool: aux19534_BOOL:: var_is_introduced ;
var bool: aux19535_BOOL:: var_is_introduced ;
var bool: aux19536_BOOL:: var_is_introduced ;
var {0,1}: aux19536_INTEGER :: var_is_introduced ;
var bool: aux19537_BOOL:: var_is_introduced ;
var bool: aux19538_BOOL:: var_is_introduced ;
var 3..60: aux19539:: var_is_introduced ;
var bool: aux19540_BOOL:: var_is_introduced ;
var bool: aux19541_BOOL:: var_is_introduced ;
var bool: aux19542_BOOL:: var_is_introduced ;
var {0,1}: aux19542_INTEGER :: var_is_introduced ;
var bool: aux19543_BOOL:: var_is_introduced ;
var bool: aux19544_BOOL:: var_is_introduced ;
var 3..60: aux19545:: var_is_introduced ;
var bool: aux19546_BOOL:: var_is_introduced ;
var bool: aux19547_BOOL:: var_is_introduced ;
var bool: aux19548_BOOL:: var_is_introduced ;
var {0,1}: aux19548_INTEGER :: var_is_introduced ;
var bool: aux19549_BOOL:: var_is_introduced ;
var bool: aux19550_BOOL:: var_is_introduced ;
var 2..59: aux19551:: var_is_introduced ;
var bool: aux19552_BOOL:: var_is_introduced ;
var bool: aux19553_BOOL:: var_is_introduced ;
var bool: aux19554_BOOL:: var_is_introduced ;
var {0,1}: aux19554_INTEGER :: var_is_introduced ;
var bool: aux19555_BOOL:: var_is_introduced ;
var bool: aux19556_BOOL:: var_is_introduced ;
var 2..59: aux19557:: var_is_introduced ;
var bool: aux19558_BOOL:: var_is_introduced ;
var bool: aux19559_BOOL:: var_is_introduced ;
var bool: aux19560_BOOL:: var_is_introduced ;
var {0,1}: aux19560_INTEGER :: var_is_introduced ;
var bool: aux19561_BOOL:: var_is_introduced ;
var bool: aux19562_BOOL:: var_is_introduced ;
var 5..62: aux19563:: var_is_introduced ;
var bool: aux19564_BOOL:: var_is_introduced ;
var bool: aux19565_BOOL:: var_is_introduced ;
var bool: aux19566_BOOL:: var_is_introduced ;
var {0,1}: aux19566_INTEGER :: var_is_introduced ;
var bool: aux19567_BOOL:: var_is_introduced ;
var bool: aux19568_BOOL:: var_is_introduced ;
var 3..60: aux19569:: var_is_introduced ;
var bool: aux19570_BOOL:: var_is_introduced ;
var bool: aux19571_BOOL:: var_is_introduced ;
var bool: aux19572_BOOL:: var_is_introduced ;
var {0,1}: aux19572_INTEGER :: var_is_introduced ;
var bool: aux19573_BOOL:: var_is_introduced ;
var bool: aux19574_BOOL:: var_is_introduced ;
var 4..61: aux19575:: var_is_introduced ;
var bool: aux19576_BOOL:: var_is_introduced ;
var bool: aux19577_BOOL:: var_is_introduced ;
var bool: aux19578_BOOL:: var_is_introduced ;
var {0,1}: aux19578_INTEGER :: var_is_introduced ;
var bool: aux19579_BOOL:: var_is_introduced ;
var bool: aux19580_BOOL:: var_is_introduced ;
var 3..60: aux19581:: var_is_introduced ;
var bool: aux19582_BOOL:: var_is_introduced ;
var bool: aux19583_BOOL:: var_is_introduced ;
var bool: aux19584_BOOL:: var_is_introduced ;
var {0,1}: aux19584_INTEGER :: var_is_introduced ;
var bool: aux19585_BOOL:: var_is_introduced ;
var bool: aux19586_BOOL:: var_is_introduced ;
var 2..59: aux19587:: var_is_introduced ;
var bool: aux19588_BOOL:: var_is_introduced ;
var bool: aux19589_BOOL:: var_is_introduced ;
var bool: aux19590_BOOL:: var_is_introduced ;
var {0,1}: aux19590_INTEGER :: var_is_introduced ;
var bool: aux19591_BOOL:: var_is_introduced ;
var bool: aux19592_BOOL:: var_is_introduced ;
var 1..58: aux19593:: var_is_introduced ;
var bool: aux19594_BOOL:: var_is_introduced ;
var bool: aux19595_BOOL:: var_is_introduced ;
var bool: aux19596_BOOL:: var_is_introduced ;
var {0,1}: aux19596_INTEGER :: var_is_introduced ;
var bool: aux19597_BOOL:: var_is_introduced ;
var bool: aux19598_BOOL:: var_is_introduced ;
var 3..60: aux19599:: var_is_introduced ;
var bool: aux19600_BOOL:: var_is_introduced ;
var bool: aux19601_BOOL:: var_is_introduced ;
var bool: aux19602_BOOL:: var_is_introduced ;
var {0,1}: aux19602_INTEGER :: var_is_introduced ;
var bool: aux19603_BOOL:: var_is_introduced ;
var bool: aux19604_BOOL:: var_is_introduced ;
var 4..61: aux19605:: var_is_introduced ;
var bool: aux19606_BOOL:: var_is_introduced ;
var bool: aux19607_BOOL:: var_is_introduced ;
var bool: aux19608_BOOL:: var_is_introduced ;
var {0,1}: aux19608_INTEGER :: var_is_introduced ;
var bool: aux19609_BOOL:: var_is_introduced ;
var bool: aux19610_BOOL:: var_is_introduced ;
var 1..58: aux19611:: var_is_introduced ;
var bool: aux19612_BOOL:: var_is_introduced ;
var bool: aux19613_BOOL:: var_is_introduced ;
var bool: aux19614_BOOL:: var_is_introduced ;
var {0,1}: aux19614_INTEGER :: var_is_introduced ;
var bool: aux19615_BOOL:: var_is_introduced ;
var bool: aux19616_BOOL:: var_is_introduced ;
var 4..61: aux19617:: var_is_introduced ;
var bool: aux19618_BOOL:: var_is_introduced ;
var bool: aux19619_BOOL:: var_is_introduced ;
var bool: aux19620_BOOL:: var_is_introduced ;
var {0,1}: aux19620_INTEGER :: var_is_introduced ;
var bool: aux19621_BOOL:: var_is_introduced ;
var bool: aux19622_BOOL:: var_is_introduced ;
var 2..59: aux19623:: var_is_introduced ;
var bool: aux19624_BOOL:: var_is_introduced ;
var bool: aux19625_BOOL:: var_is_introduced ;
var bool: aux19626_BOOL:: var_is_introduced ;
var {0,1}: aux19626_INTEGER :: var_is_introduced ;
var bool: aux19627_BOOL:: var_is_introduced ;
var 2..59: aux19628:: var_is_introduced ;
var bool: aux19629_BOOL:: var_is_introduced ;
var bool: aux19630_BOOL:: var_is_introduced ;
var {0,1}: aux19630_INTEGER :: var_is_introduced ;
var bool: aux19631_BOOL:: var_is_introduced ;
var bool: aux19632_BOOL:: var_is_introduced ;
var bool: aux19633_BOOL:: var_is_introduced ;
var 4..61: aux19634:: var_is_introduced ;
var bool: aux19635_BOOL:: var_is_introduced ;
var bool: aux19636_BOOL:: var_is_introduced ;
var bool: aux19637_BOOL:: var_is_introduced ;
var {0,1}: aux19637_INTEGER :: var_is_introduced ;
var bool: aux19638_BOOL:: var_is_introduced ;
var bool: aux19639_BOOL:: var_is_introduced ;
var 4..61: aux19640:: var_is_introduced ;
var bool: aux19641_BOOL:: var_is_introduced ;
var bool: aux19642_BOOL:: var_is_introduced ;
var bool: aux19643_BOOL:: var_is_introduced ;
var {0,1}: aux19643_INTEGER :: var_is_introduced ;
var bool: aux19644_BOOL:: var_is_introduced ;
var bool: aux19645_BOOL:: var_is_introduced ;
var 3..60: aux19646:: var_is_introduced ;
var bool: aux19647_BOOL:: var_is_introduced ;
var bool: aux19648_BOOL:: var_is_introduced ;
var bool: aux19649_BOOL:: var_is_introduced ;
var {0,1}: aux19649_INTEGER :: var_is_introduced ;
var bool: aux19650_BOOL:: var_is_introduced ;
var bool: aux19651_BOOL:: var_is_introduced ;
var 2..59: aux19652:: var_is_introduced ;
var bool: aux19653_BOOL:: var_is_introduced ;
var bool: aux19654_BOOL:: var_is_introduced ;
var bool: aux19655_BOOL:: var_is_introduced ;
var {0,1}: aux19655_INTEGER :: var_is_introduced ;
var bool: aux19656_BOOL:: var_is_introduced ;
var bool: aux19657_BOOL:: var_is_introduced ;
var 3..60: aux19658:: var_is_introduced ;
var bool: aux19659_BOOL:: var_is_introduced ;
var bool: aux19660_BOOL:: var_is_introduced ;
var bool: aux19661_BOOL:: var_is_introduced ;
var {0,1}: aux19661_INTEGER :: var_is_introduced ;
var bool: aux19662_BOOL:: var_is_introduced ;
var bool: aux19663_BOOL:: var_is_introduced ;
var 2..59: aux19664:: var_is_introduced ;
var bool: aux19665_BOOL:: var_is_introduced ;
var bool: aux19666_BOOL:: var_is_introduced ;
var bool: aux19667_BOOL:: var_is_introduced ;
var {0,1}: aux19667_INTEGER :: var_is_introduced ;
var bool: aux19668_BOOL:: var_is_introduced ;
var bool: aux19669_BOOL:: var_is_introduced ;
var 3..60: aux19670:: var_is_introduced ;
var bool: aux19671_BOOL:: var_is_introduced ;
var bool: aux19672_BOOL:: var_is_introduced ;
var bool: aux19673_BOOL:: var_is_introduced ;
var {0,1}: aux19673_INTEGER :: var_is_introduced ;
var bool: aux19674_BOOL:: var_is_introduced ;
var bool: aux19675_BOOL:: var_is_introduced ;
var 2..59: aux19676:: var_is_introduced ;
var bool: aux19677_BOOL:: var_is_introduced ;
var bool: aux19678_BOOL:: var_is_introduced ;
var bool: aux19679_BOOL:: var_is_introduced ;
var {0,1}: aux19679_INTEGER :: var_is_introduced ;
var bool: aux19680_BOOL:: var_is_introduced ;
var bool: aux19681_BOOL:: var_is_introduced ;
var 2..59: aux19682:: var_is_introduced ;
var bool: aux19683_BOOL:: var_is_introduced ;
var bool: aux19684_BOOL:: var_is_introduced ;
var bool: aux19685_BOOL:: var_is_introduced ;
var {0,1}: aux19685_INTEGER :: var_is_introduced ;
var bool: aux19686_BOOL:: var_is_introduced ;
var bool: aux19687_BOOL:: var_is_introduced ;
var 5..62: aux19688:: var_is_introduced ;
var bool: aux19689_BOOL:: var_is_introduced ;
var bool: aux19690_BOOL:: var_is_introduced ;
var bool: aux19691_BOOL:: var_is_introduced ;
var {0,1}: aux19691_INTEGER :: var_is_introduced ;
var bool: aux19692_BOOL:: var_is_introduced ;
var bool: aux19693_BOOL:: var_is_introduced ;
var 3..60: aux19694:: var_is_introduced ;
var bool: aux19695_BOOL:: var_is_introduced ;
var bool: aux19696_BOOL:: var_is_introduced ;
var bool: aux19697_BOOL:: var_is_introduced ;
var {0,1}: aux19697_INTEGER :: var_is_introduced ;
var bool: aux19698_BOOL:: var_is_introduced ;
var bool: aux19699_BOOL:: var_is_introduced ;
var 4..61: aux19700:: var_is_introduced ;
var bool: aux19701_BOOL:: var_is_introduced ;
var bool: aux19702_BOOL:: var_is_introduced ;
var bool: aux19703_BOOL:: var_is_introduced ;
var {0,1}: aux19703_INTEGER :: var_is_introduced ;
var bool: aux19704_BOOL:: var_is_introduced ;
var bool: aux19705_BOOL:: var_is_introduced ;
var 3..60: aux19706:: var_is_introduced ;
var bool: aux19707_BOOL:: var_is_introduced ;
var bool: aux19708_BOOL:: var_is_introduced ;
var bool: aux19709_BOOL:: var_is_introduced ;
var {0,1}: aux19709_INTEGER :: var_is_introduced ;
var bool: aux19710_BOOL:: var_is_introduced ;
var bool: aux19711_BOOL:: var_is_introduced ;
var 2..59: aux19712:: var_is_introduced ;
var bool: aux19713_BOOL:: var_is_introduced ;
var bool: aux19714_BOOL:: var_is_introduced ;
var bool: aux19715_BOOL:: var_is_introduced ;
var {0,1}: aux19715_INTEGER :: var_is_introduced ;
var bool: aux19716_BOOL:: var_is_introduced ;
var bool: aux19717_BOOL:: var_is_introduced ;
var 1..58: aux19718:: var_is_introduced ;
var bool: aux19719_BOOL:: var_is_introduced ;
var bool: aux19720_BOOL:: var_is_introduced ;
var bool: aux19721_BOOL:: var_is_introduced ;
var {0,1}: aux19721_INTEGER :: var_is_introduced ;
var bool: aux19722_BOOL:: var_is_introduced ;
var bool: aux19723_BOOL:: var_is_introduced ;
var 3..60: aux19724:: var_is_introduced ;
var bool: aux19725_BOOL:: var_is_introduced ;
var bool: aux19726_BOOL:: var_is_introduced ;
var bool: aux19727_BOOL:: var_is_introduced ;
var {0,1}: aux19727_INTEGER :: var_is_introduced ;
var bool: aux19728_BOOL:: var_is_introduced ;
var bool: aux19729_BOOL:: var_is_introduced ;
var 4..61: aux19730:: var_is_introduced ;
var bool: aux19731_BOOL:: var_is_introduced ;
var bool: aux19732_BOOL:: var_is_introduced ;
var bool: aux19733_BOOL:: var_is_introduced ;
var {0,1}: aux19733_INTEGER :: var_is_introduced ;
var bool: aux19734_BOOL:: var_is_introduced ;
var bool: aux19735_BOOL:: var_is_introduced ;
var 4..61: aux19736:: var_is_introduced ;
var bool: aux19737_BOOL:: var_is_introduced ;
var bool: aux19738_BOOL:: var_is_introduced ;
var bool: aux19739_BOOL:: var_is_introduced ;
var {0,1}: aux19739_INTEGER :: var_is_introduced ;
var bool: aux19740_BOOL:: var_is_introduced ;
var bool: aux19741_BOOL:: var_is_introduced ;
var 2..59: aux19742:: var_is_introduced ;
var bool: aux19743_BOOL:: var_is_introduced ;
var bool: aux19744_BOOL:: var_is_introduced ;
var bool: aux19745_BOOL:: var_is_introduced ;
var {0,1}: aux19745_INTEGER :: var_is_introduced ;
var bool: aux19746_BOOL:: var_is_introduced ;
var 1..58: aux19747:: var_is_introduced ;
var bool: aux19748_BOOL:: var_is_introduced ;
var bool: aux19749_BOOL:: var_is_introduced ;
var {0,1}: aux19749_INTEGER :: var_is_introduced ;
var bool: aux19750_BOOL:: var_is_introduced ;
var bool: aux19751_BOOL:: var_is_introduced ;
var bool: aux19752_BOOL:: var_is_introduced ;
var 4..61: aux19753:: var_is_introduced ;
var bool: aux19754_BOOL:: var_is_introduced ;
var bool: aux19755_BOOL:: var_is_introduced ;
var bool: aux19756_BOOL:: var_is_introduced ;
var {0,1}: aux19756_INTEGER :: var_is_introduced ;
var bool: aux19757_BOOL:: var_is_introduced ;
var bool: aux19758_BOOL:: var_is_introduced ;
var 4..61: aux19759:: var_is_introduced ;
var bool: aux19760_BOOL:: var_is_introduced ;
var bool: aux19761_BOOL:: var_is_introduced ;
var bool: aux19762_BOOL:: var_is_introduced ;
var {0,1}: aux19762_INTEGER :: var_is_introduced ;
var bool: aux19763_BOOL:: var_is_introduced ;
var bool: aux19764_BOOL:: var_is_introduced ;
var 3..60: aux19765:: var_is_introduced ;
var bool: aux19766_BOOL:: var_is_introduced ;
var bool: aux19767_BOOL:: var_is_introduced ;
var bool: aux19768_BOOL:: var_is_introduced ;
var {0,1}: aux19768_INTEGER :: var_is_introduced ;
var bool: aux19769_BOOL:: var_is_introduced ;
var bool: aux19770_BOOL:: var_is_introduced ;
var 2..59: aux19771:: var_is_introduced ;
var bool: aux19772_BOOL:: var_is_introduced ;
var bool: aux19773_BOOL:: var_is_introduced ;
var bool: aux19774_BOOL:: var_is_introduced ;
var {0,1}: aux19774_INTEGER :: var_is_introduced ;
var bool: aux19775_BOOL:: var_is_introduced ;
var bool: aux19776_BOOL:: var_is_introduced ;
var 3..60: aux19777:: var_is_introduced ;
var bool: aux19778_BOOL:: var_is_introduced ;
var bool: aux19779_BOOL:: var_is_introduced ;
var bool: aux19780_BOOL:: var_is_introduced ;
var {0,1}: aux19780_INTEGER :: var_is_introduced ;
var bool: aux19781_BOOL:: var_is_introduced ;
var bool: aux19782_BOOL:: var_is_introduced ;
var 2..59: aux19783:: var_is_introduced ;
var bool: aux19784_BOOL:: var_is_introduced ;
var bool: aux19785_BOOL:: var_is_introduced ;
var bool: aux19786_BOOL:: var_is_introduced ;
var {0,1}: aux19786_INTEGER :: var_is_introduced ;
var bool: aux19787_BOOL:: var_is_introduced ;
var bool: aux19788_BOOL:: var_is_introduced ;
var 3..60: aux19789:: var_is_introduced ;
var bool: aux19790_BOOL:: var_is_introduced ;
var bool: aux19791_BOOL:: var_is_introduced ;
var bool: aux19792_BOOL:: var_is_introduced ;
var {0,1}: aux19792_INTEGER :: var_is_introduced ;
var bool: aux19793_BOOL:: var_is_introduced ;
var bool: aux19794_BOOL:: var_is_introduced ;
var 2..59: aux19795:: var_is_introduced ;
var bool: aux19796_BOOL:: var_is_introduced ;
var bool: aux19797_BOOL:: var_is_introduced ;
var bool: aux19798_BOOL:: var_is_introduced ;
var {0,1}: aux19798_INTEGER :: var_is_introduced ;
var bool: aux19799_BOOL:: var_is_introduced ;
var bool: aux19800_BOOL:: var_is_introduced ;
var 2..59: aux19801:: var_is_introduced ;
var bool: aux19802_BOOL:: var_is_introduced ;
var bool: aux19803_BOOL:: var_is_introduced ;
var bool: aux19804_BOOL:: var_is_introduced ;
var {0,1}: aux19804_INTEGER :: var_is_introduced ;
var bool: aux19805_BOOL:: var_is_introduced ;
var bool: aux19806_BOOL:: var_is_introduced ;
var 3..60: aux19807:: var_is_introduced ;
var bool: aux19808_BOOL:: var_is_introduced ;
var bool: aux19809_BOOL:: var_is_introduced ;
var bool: aux19810_BOOL:: var_is_introduced ;
var {0,1}: aux19810_INTEGER :: var_is_introduced ;
var bool: aux19811_BOOL:: var_is_introduced ;
var bool: aux19812_BOOL:: var_is_introduced ;
var 4..61: aux19813:: var_is_introduced ;
var bool: aux19814_BOOL:: var_is_introduced ;
var bool: aux19815_BOOL:: var_is_introduced ;
var bool: aux19816_BOOL:: var_is_introduced ;
var {0,1}: aux19816_INTEGER :: var_is_introduced ;
var bool: aux19817_BOOL:: var_is_introduced ;
var bool: aux19818_BOOL:: var_is_introduced ;
var 3..60: aux19819:: var_is_introduced ;
var bool: aux19820_BOOL:: var_is_introduced ;
var bool: aux19821_BOOL:: var_is_introduced ;
var bool: aux19822_BOOL:: var_is_introduced ;
var {0,1}: aux19822_INTEGER :: var_is_introduced ;
var bool: aux19823_BOOL:: var_is_introduced ;
var bool: aux19824_BOOL:: var_is_introduced ;
var 2..59: aux19825:: var_is_introduced ;
var bool: aux19826_BOOL:: var_is_introduced ;
var bool: aux19827_BOOL:: var_is_introduced ;
var bool: aux19828_BOOL:: var_is_introduced ;
var {0,1}: aux19828_INTEGER :: var_is_introduced ;
var bool: aux19829_BOOL:: var_is_introduced ;
var bool: aux19830_BOOL:: var_is_introduced ;
var 1..58: aux19831:: var_is_introduced ;
var bool: aux19832_BOOL:: var_is_introduced ;
var bool: aux19833_BOOL:: var_is_introduced ;
var bool: aux19834_BOOL:: var_is_introduced ;
var {0,1}: aux19834_INTEGER :: var_is_introduced ;
var bool: aux19835_BOOL:: var_is_introduced ;
var bool: aux19836_BOOL:: var_is_introduced ;
var 3..60: aux19837:: var_is_introduced ;
var bool: aux19838_BOOL:: var_is_introduced ;
var bool: aux19839_BOOL:: var_is_introduced ;
var bool: aux19840_BOOL:: var_is_introduced ;
var {0,1}: aux19840_INTEGER :: var_is_introduced ;
var bool: aux19841_BOOL:: var_is_introduced ;
var bool: aux19842_BOOL:: var_is_introduced ;
var 4..61: aux19843:: var_is_introduced ;
var bool: aux19844_BOOL:: var_is_introduced ;
var bool: aux19845_BOOL:: var_is_introduced ;
var bool: aux19846_BOOL:: var_is_introduced ;
var {0,1}: aux19846_INTEGER :: var_is_introduced ;
var bool: aux19847_BOOL:: var_is_introduced ;
var bool: aux19848_BOOL:: var_is_introduced ;
var 1..58: aux19849:: var_is_introduced ;
var bool: aux19850_BOOL:: var_is_introduced ;
var bool: aux19851_BOOL:: var_is_introduced ;
var bool: aux19852_BOOL:: var_is_introduced ;
var {0,1}: aux19852_INTEGER :: var_is_introduced ;
var bool: aux19853_BOOL:: var_is_introduced ;
var bool: aux19854_BOOL:: var_is_introduced ;
var 4..61: aux19855:: var_is_introduced ;
var bool: aux19856_BOOL:: var_is_introduced ;
var bool: aux19857_BOOL:: var_is_introduced ;
var bool: aux19858_BOOL:: var_is_introduced ;
var {0,1}: aux19858_INTEGER :: var_is_introduced ;
var bool: aux19859_BOOL:: var_is_introduced ;
var bool: aux19860_BOOL:: var_is_introduced ;
var 2..59: aux19861:: var_is_introduced ;
var bool: aux19862_BOOL:: var_is_introduced ;
var bool: aux19863_BOOL:: var_is_introduced ;
var bool: aux19864_BOOL:: var_is_introduced ;
var {0,1}: aux19864_INTEGER :: var_is_introduced ;
var bool: aux19865_BOOL:: var_is_introduced ;
var 5..62: aux19866:: var_is_introduced ;
var bool: aux19867_BOOL:: var_is_introduced ;
var bool: aux19868_BOOL:: var_is_introduced ;
var {0,1}: aux19868_INTEGER :: var_is_introduced ;
var bool: aux19869_BOOL:: var_is_introduced ;
var bool: aux19870_BOOL:: var_is_introduced ;
var bool: aux19871_BOOL:: var_is_introduced ;
var 4..61: aux19872:: var_is_introduced ;
var bool: aux19873_BOOL:: var_is_introduced ;
var bool: aux19874_BOOL:: var_is_introduced ;
var bool: aux19875_BOOL:: var_is_introduced ;
var {0,1}: aux19875_INTEGER :: var_is_introduced ;
var bool: aux19876_BOOL:: var_is_introduced ;
var bool: aux19877_BOOL:: var_is_introduced ;
var 4..61: aux19878:: var_is_introduced ;
var bool: aux19879_BOOL:: var_is_introduced ;
var bool: aux19880_BOOL:: var_is_introduced ;
var bool: aux19881_BOOL:: var_is_introduced ;
var {0,1}: aux19881_INTEGER :: var_is_introduced ;
var bool: aux19882_BOOL:: var_is_introduced ;
var bool: aux19883_BOOL:: var_is_introduced ;
var 3..60: aux19884:: var_is_introduced ;
var bool: aux19885_BOOL:: var_is_introduced ;
var bool: aux19886_BOOL:: var_is_introduced ;
var bool: aux19887_BOOL:: var_is_introduced ;
var {0,1}: aux19887_INTEGER :: var_is_introduced ;
var bool: aux19888_BOOL:: var_is_introduced ;
var bool: aux19889_BOOL:: var_is_introduced ;
var 2..59: aux19890:: var_is_introduced ;
var bool: aux19891_BOOL:: var_is_introduced ;
var bool: aux19892_BOOL:: var_is_introduced ;
var bool: aux19893_BOOL:: var_is_introduced ;
var {0,1}: aux19893_INTEGER :: var_is_introduced ;
var bool: aux19894_BOOL:: var_is_introduced ;
var bool: aux19895_BOOL:: var_is_introduced ;
var 3..60: aux19896:: var_is_introduced ;
var bool: aux19897_BOOL:: var_is_introduced ;
var bool: aux19898_BOOL:: var_is_introduced ;
var bool: aux19899_BOOL:: var_is_introduced ;
var {0,1}: aux19899_INTEGER :: var_is_introduced ;
var bool: aux19900_BOOL:: var_is_introduced ;
var bool: aux19901_BOOL:: var_is_introduced ;
var 2..59: aux19902:: var_is_introduced ;
var bool: aux19903_BOOL:: var_is_introduced ;
var bool: aux19904_BOOL:: var_is_introduced ;
var bool: aux19905_BOOL:: var_is_introduced ;
var {0,1}: aux19905_INTEGER :: var_is_introduced ;
var bool: aux19906_BOOL:: var_is_introduced ;
var bool: aux19907_BOOL:: var_is_introduced ;
var 3..60: aux19908:: var_is_introduced ;
var bool: aux19909_BOOL:: var_is_introduced ;
var bool: aux19910_BOOL:: var_is_introduced ;
var bool: aux19911_BOOL:: var_is_introduced ;
var {0,1}: aux19911_INTEGER :: var_is_introduced ;
var bool: aux19912_BOOL:: var_is_introduced ;
var bool: aux19913_BOOL:: var_is_introduced ;
var 2..59: aux19914:: var_is_introduced ;
var bool: aux19915_BOOL:: var_is_introduced ;
var bool: aux19916_BOOL:: var_is_introduced ;
var bool: aux19917_BOOL:: var_is_introduced ;
var {0,1}: aux19917_INTEGER :: var_is_introduced ;
var bool: aux19918_BOOL:: var_is_introduced ;
var bool: aux19919_BOOL:: var_is_introduced ;
var 2..59: aux19920:: var_is_introduced ;
var bool: aux19921_BOOL:: var_is_introduced ;
var bool: aux19922_BOOL:: var_is_introduced ;
var bool: aux19923_BOOL:: var_is_introduced ;
var {0,1}: aux19923_INTEGER :: var_is_introduced ;
var bool: aux19924_BOOL:: var_is_introduced ;
var bool: aux19925_BOOL:: var_is_introduced ;
var 5..62: aux19926:: var_is_introduced ;
var bool: aux19927_BOOL:: var_is_introduced ;
var bool: aux19928_BOOL:: var_is_introduced ;
var bool: aux19929_BOOL:: var_is_introduced ;
var {0,1}: aux19929_INTEGER :: var_is_introduced ;
var bool: aux19930_BOOL:: var_is_introduced ;
var bool: aux19931_BOOL:: var_is_introduced ;
var 3..60: aux19932:: var_is_introduced ;
var bool: aux19933_BOOL:: var_is_introduced ;
var bool: aux19934_BOOL:: var_is_introduced ;
var bool: aux19935_BOOL:: var_is_introduced ;
var {0,1}: aux19935_INTEGER :: var_is_introduced ;
var bool: aux19936_BOOL:: var_is_introduced ;
var bool: aux19937_BOOL:: var_is_introduced ;
var 4..61: aux19938:: var_is_introduced ;
var bool: aux19939_BOOL:: var_is_introduced ;
var bool: aux19940_BOOL:: var_is_introduced ;
var bool: aux19941_BOOL:: var_is_introduced ;
var {0,1}: aux19941_INTEGER :: var_is_introduced ;
var bool: aux19942_BOOL:: var_is_introduced ;
var bool: aux19943_BOOL:: var_is_introduced ;
var 3..60: aux19944:: var_is_introduced ;
var bool: aux19945_BOOL:: var_is_introduced ;
var bool: aux19946_BOOL:: var_is_introduced ;
var bool: aux19947_BOOL:: var_is_introduced ;
var {0,1}: aux19947_INTEGER :: var_is_introduced ;
var bool: aux19948_BOOL:: var_is_introduced ;
var bool: aux19949_BOOL:: var_is_introduced ;
var 2..59: aux19950:: var_is_introduced ;
var bool: aux19951_BOOL:: var_is_introduced ;
var bool: aux19952_BOOL:: var_is_introduced ;
var bool: aux19953_BOOL:: var_is_introduced ;
var {0,1}: aux19953_INTEGER :: var_is_introduced ;
var bool: aux19954_BOOL:: var_is_introduced ;
var bool: aux19955_BOOL:: var_is_introduced ;
var 1..58: aux19956:: var_is_introduced ;
var bool: aux19957_BOOL:: var_is_introduced ;
var bool: aux19958_BOOL:: var_is_introduced ;
var bool: aux19959_BOOL:: var_is_introduced ;
var {0,1}: aux19959_INTEGER :: var_is_introduced ;
var bool: aux19960_BOOL:: var_is_introduced ;
var bool: aux19961_BOOL:: var_is_introduced ;
var 3..60: aux19962:: var_is_introduced ;
var bool: aux19963_BOOL:: var_is_introduced ;
var bool: aux19964_BOOL:: var_is_introduced ;
var bool: aux19965_BOOL:: var_is_introduced ;
var {0,1}: aux19965_INTEGER :: var_is_introduced ;
var bool: aux19966_BOOL:: var_is_introduced ;
var bool: aux19967_BOOL:: var_is_introduced ;
var 4..61: aux19968:: var_is_introduced ;
var bool: aux19969_BOOL:: var_is_introduced ;
var bool: aux19970_BOOL:: var_is_introduced ;
var bool: aux19971_BOOL:: var_is_introduced ;
var {0,1}: aux19971_INTEGER :: var_is_introduced ;
var bool: aux19972_BOOL:: var_is_introduced ;
var bool: aux19973_BOOL:: var_is_introduced ;
var 1..58: aux19974:: var_is_introduced ;
var bool: aux19975_BOOL:: var_is_introduced ;
var bool: aux19976_BOOL:: var_is_introduced ;
var bool: aux19977_BOOL:: var_is_introduced ;
var {0,1}: aux19977_INTEGER :: var_is_introduced ;
var bool: aux19978_BOOL:: var_is_introduced ;
var bool: aux19979_BOOL:: var_is_introduced ;
var 4..61: aux19980:: var_is_introduced ;
var bool: aux19981_BOOL:: var_is_introduced ;
var bool: aux19982_BOOL:: var_is_introduced ;
var bool: aux19983_BOOL:: var_is_introduced ;
var {0,1}: aux19983_INTEGER :: var_is_introduced ;
var bool: aux19984_BOOL:: var_is_introduced ;
var 2..59: aux19985:: var_is_introduced ;
var bool: aux19986_BOOL:: var_is_introduced ;
var bool: aux19987_BOOL:: var_is_introduced ;
var {0,1}: aux19987_INTEGER :: var_is_introduced ;
var bool: aux19988_BOOL:: var_is_introduced ;
var bool: aux19989_BOOL:: var_is_introduced ;
var bool: aux19990_BOOL:: var_is_introduced ;
var 4..61: aux19991:: var_is_introduced ;
var bool: aux19992_BOOL:: var_is_introduced ;
var bool: aux19993_BOOL:: var_is_introduced ;
var bool: aux19994_BOOL:: var_is_introduced ;
var {0,1}: aux19994_INTEGER :: var_is_introduced ;
var bool: aux19995_BOOL:: var_is_introduced ;
var bool: aux19996_BOOL:: var_is_introduced ;
var 4..61: aux19997:: var_is_introduced ;
var bool: aux19998_BOOL:: var_is_introduced ;
var bool: aux19999_BOOL:: var_is_introduced ;
var bool: aux20000_BOOL:: var_is_introduced ;
var {0,1}: aux20000_INTEGER :: var_is_introduced ;
var bool: aux20001_BOOL:: var_is_introduced ;
var bool: aux20002_BOOL:: var_is_introduced ;
var 3..60: aux20003:: var_is_introduced ;
var bool: aux20004_BOOL:: var_is_introduced ;
var bool: aux20005_BOOL:: var_is_introduced ;
var bool: aux20006_BOOL:: var_is_introduced ;
var {0,1}: aux20006_INTEGER :: var_is_introduced ;
var bool: aux20007_BOOL:: var_is_introduced ;
var bool: aux20008_BOOL:: var_is_introduced ;
var 2..59: aux20009:: var_is_introduced ;
var bool: aux20010_BOOL:: var_is_introduced ;
var bool: aux20011_BOOL:: var_is_introduced ;
var bool: aux20012_BOOL:: var_is_introduced ;
var {0,1}: aux20012_INTEGER :: var_is_introduced ;
var bool: aux20013_BOOL:: var_is_introduced ;
var bool: aux20014_BOOL:: var_is_introduced ;
var 3..60: aux20015:: var_is_introduced ;
var bool: aux20016_BOOL:: var_is_introduced ;
var bool: aux20017_BOOL:: var_is_introduced ;
var bool: aux20018_BOOL:: var_is_introduced ;
var {0,1}: aux20018_INTEGER :: var_is_introduced ;
var bool: aux20019_BOOL:: var_is_introduced ;
var bool: aux20020_BOOL:: var_is_introduced ;
var 2..59: aux20021:: var_is_introduced ;
var bool: aux20022_BOOL:: var_is_introduced ;
var bool: aux20023_BOOL:: var_is_introduced ;
var bool: aux20024_BOOL:: var_is_introduced ;
var {0,1}: aux20024_INTEGER :: var_is_introduced ;
var bool: aux20025_BOOL:: var_is_introduced ;
var bool: aux20026_BOOL:: var_is_introduced ;
var 3..60: aux20027:: var_is_introduced ;
var bool: aux20028_BOOL:: var_is_introduced ;
var bool: aux20029_BOOL:: var_is_introduced ;
var bool: aux20030_BOOL:: var_is_introduced ;
var {0,1}: aux20030_INTEGER :: var_is_introduced ;
var bool: aux20031_BOOL:: var_is_introduced ;
var bool: aux20032_BOOL:: var_is_introduced ;
var 2..59: aux20033:: var_is_introduced ;
var bool: aux20034_BOOL:: var_is_introduced ;
var bool: aux20035_BOOL:: var_is_introduced ;
var bool: aux20036_BOOL:: var_is_introduced ;
var {0,1}: aux20036_INTEGER :: var_is_introduced ;
var bool: aux20037_BOOL:: var_is_introduced ;
var bool: aux20038_BOOL:: var_is_introduced ;
var 2..59: aux20039:: var_is_introduced ;
var bool: aux20040_BOOL:: var_is_introduced ;
var bool: aux20041_BOOL:: var_is_introduced ;
var bool: aux20042_BOOL:: var_is_introduced ;
var {0,1}: aux20042_INTEGER :: var_is_introduced ;
var bool: aux20043_BOOL:: var_is_introduced ;
var bool: aux20044_BOOL:: var_is_introduced ;
var 5..62: aux20045:: var_is_introduced ;
var bool: aux20046_BOOL:: var_is_introduced ;
var bool: aux20047_BOOL:: var_is_introduced ;
var bool: aux20048_BOOL:: var_is_introduced ;
var {0,1}: aux20048_INTEGER :: var_is_introduced ;
var bool: aux20049_BOOL:: var_is_introduced ;
var bool: aux20050_BOOL:: var_is_introduced ;
var 3..60: aux20051:: var_is_introduced ;
var bool: aux20052_BOOL:: var_is_introduced ;
var bool: aux20053_BOOL:: var_is_introduced ;
var bool: aux20054_BOOL:: var_is_introduced ;
var {0,1}: aux20054_INTEGER :: var_is_introduced ;
var bool: aux20055_BOOL:: var_is_introduced ;
var bool: aux20056_BOOL:: var_is_introduced ;
var 4..61: aux20057:: var_is_introduced ;
var bool: aux20058_BOOL:: var_is_introduced ;
var bool: aux20059_BOOL:: var_is_introduced ;
var bool: aux20060_BOOL:: var_is_introduced ;
var {0,1}: aux20060_INTEGER :: var_is_introduced ;
var bool: aux20061_BOOL:: var_is_introduced ;
var bool: aux20062_BOOL:: var_is_introduced ;
var 3..60: aux20063:: var_is_introduced ;
var bool: aux20064_BOOL:: var_is_introduced ;
var bool: aux20065_BOOL:: var_is_introduced ;
var bool: aux20066_BOOL:: var_is_introduced ;
var {0,1}: aux20066_INTEGER :: var_is_introduced ;
var bool: aux20067_BOOL:: var_is_introduced ;
var bool: aux20068_BOOL:: var_is_introduced ;
var 2..59: aux20069:: var_is_introduced ;
var bool: aux20070_BOOL:: var_is_introduced ;
var bool: aux20071_BOOL:: var_is_introduced ;
var bool: aux20072_BOOL:: var_is_introduced ;
var {0,1}: aux20072_INTEGER :: var_is_introduced ;
var bool: aux20073_BOOL:: var_is_introduced ;
var bool: aux20074_BOOL:: var_is_introduced ;
var 3..60: aux20075:: var_is_introduced ;
var bool: aux20076_BOOL:: var_is_introduced ;
var bool: aux20077_BOOL:: var_is_introduced ;
var bool: aux20078_BOOL:: var_is_introduced ;
var {0,1}: aux20078_INTEGER :: var_is_introduced ;
var bool: aux20079_BOOL:: var_is_introduced ;
var bool: aux20080_BOOL:: var_is_introduced ;
var 4..61: aux20081:: var_is_introduced ;
var bool: aux20082_BOOL:: var_is_introduced ;
var bool: aux20083_BOOL:: var_is_introduced ;
var bool: aux20084_BOOL:: var_is_introduced ;
var {0,1}: aux20084_INTEGER :: var_is_introduced ;
var bool: aux20085_BOOL:: var_is_introduced ;
var bool: aux20086_BOOL:: var_is_introduced ;
var 1..58: aux20087:: var_is_introduced ;
var bool: aux20088_BOOL:: var_is_introduced ;
var bool: aux20089_BOOL:: var_is_introduced ;
var bool: aux20090_BOOL:: var_is_introduced ;
var {0,1}: aux20090_INTEGER :: var_is_introduced ;
var bool: aux20091_BOOL:: var_is_introduced ;
var bool: aux20092_BOOL:: var_is_introduced ;
var 4..61: aux20093:: var_is_introduced ;
var bool: aux20094_BOOL:: var_is_introduced ;
var bool: aux20095_BOOL:: var_is_introduced ;
var bool: aux20096_BOOL:: var_is_introduced ;
var {0,1}: aux20096_INTEGER :: var_is_introduced ;
var bool: aux20097_BOOL:: var_is_introduced ;
var bool: aux20098_BOOL:: var_is_introduced ;
var 2..59: aux20099:: var_is_introduced ;
var bool: aux20100_BOOL:: var_is_introduced ;
var bool: aux20101_BOOL:: var_is_introduced ;
var bool: aux20102_BOOL:: var_is_introduced ;
var {0,1}: aux20102_INTEGER :: var_is_introduced ;
var bool: aux20103_BOOL:: var_is_introduced ;
var 1..58: aux20104:: var_is_introduced ;
var bool: aux20105_BOOL:: var_is_introduced ;
var bool: aux20106_BOOL:: var_is_introduced ;
var {0,1}: aux20106_INTEGER :: var_is_introduced ;
var bool: aux20107_BOOL:: var_is_introduced ;
var bool: aux20108_BOOL:: var_is_introduced ;
var bool: aux20109_BOOL:: var_is_introduced ;
var 4..61: aux20110:: var_is_introduced ;
var bool: aux20111_BOOL:: var_is_introduced ;
var bool: aux20112_BOOL:: var_is_introduced ;
var bool: aux20113_BOOL:: var_is_introduced ;
var {0,1}: aux20113_INTEGER :: var_is_introduced ;
var bool: aux20114_BOOL:: var_is_introduced ;
var bool: aux20115_BOOL:: var_is_introduced ;
var 4..61: aux20116:: var_is_introduced ;
var bool: aux20117_BOOL:: var_is_introduced ;
var bool: aux20118_BOOL:: var_is_introduced ;
var bool: aux20119_BOOL:: var_is_introduced ;
var {0,1}: aux20119_INTEGER :: var_is_introduced ;
var bool: aux20120_BOOL:: var_is_introduced ;
var bool: aux20121_BOOL:: var_is_introduced ;
var 3..60: aux20122:: var_is_introduced ;
var bool: aux20123_BOOL:: var_is_introduced ;
var bool: aux20124_BOOL:: var_is_introduced ;
var bool: aux20125_BOOL:: var_is_introduced ;
var {0,1}: aux20125_INTEGER :: var_is_introduced ;
var bool: aux20126_BOOL:: var_is_introduced ;
var bool: aux20127_BOOL:: var_is_introduced ;
var 2..59: aux20128:: var_is_introduced ;
var bool: aux20129_BOOL:: var_is_introduced ;
var bool: aux20130_BOOL:: var_is_introduced ;
var bool: aux20131_BOOL:: var_is_introduced ;
var {0,1}: aux20131_INTEGER :: var_is_introduced ;
var bool: aux20132_BOOL:: var_is_introduced ;
var bool: aux20133_BOOL:: var_is_introduced ;
var 3..60: aux20134:: var_is_introduced ;
var bool: aux20135_BOOL:: var_is_introduced ;
var bool: aux20136_BOOL:: var_is_introduced ;
var bool: aux20137_BOOL:: var_is_introduced ;
var {0,1}: aux20137_INTEGER :: var_is_introduced ;
var bool: aux20138_BOOL:: var_is_introduced ;
var bool: aux20139_BOOL:: var_is_introduced ;
var 2..59: aux20140:: var_is_introduced ;
var bool: aux20141_BOOL:: var_is_introduced ;
var bool: aux20142_BOOL:: var_is_introduced ;
var bool: aux20143_BOOL:: var_is_introduced ;
var {0,1}: aux20143_INTEGER :: var_is_introduced ;
var bool: aux20144_BOOL:: var_is_introduced ;
var bool: aux20145_BOOL:: var_is_introduced ;
var 3..60: aux20146:: var_is_introduced ;
var bool: aux20147_BOOL:: var_is_introduced ;
var bool: aux20148_BOOL:: var_is_introduced ;
var bool: aux20149_BOOL:: var_is_introduced ;
var {0,1}: aux20149_INTEGER :: var_is_introduced ;
var bool: aux20150_BOOL:: var_is_introduced ;
var bool: aux20151_BOOL:: var_is_introduced ;
var 2..59: aux20152:: var_is_introduced ;
var bool: aux20153_BOOL:: var_is_introduced ;
var bool: aux20154_BOOL:: var_is_introduced ;
var bool: aux20155_BOOL:: var_is_introduced ;
var {0,1}: aux20155_INTEGER :: var_is_introduced ;
var bool: aux20156_BOOL:: var_is_introduced ;
var bool: aux20157_BOOL:: var_is_introduced ;
var 5..62: aux20158:: var_is_introduced ;
var bool: aux20159_BOOL:: var_is_introduced ;
var bool: aux20160_BOOL:: var_is_introduced ;
var bool: aux20161_BOOL:: var_is_introduced ;
var {0,1}: aux20161_INTEGER :: var_is_introduced ;
var bool: aux20162_BOOL:: var_is_introduced ;
var bool: aux20163_BOOL:: var_is_introduced ;
var 3..60: aux20164:: var_is_introduced ;
var bool: aux20165_BOOL:: var_is_introduced ;
var bool: aux20166_BOOL:: var_is_introduced ;
var bool: aux20167_BOOL:: var_is_introduced ;
var {0,1}: aux20167_INTEGER :: var_is_introduced ;
var bool: aux20168_BOOL:: var_is_introduced ;
var bool: aux20169_BOOL:: var_is_introduced ;
var 4..61: aux20170:: var_is_introduced ;
var bool: aux20171_BOOL:: var_is_introduced ;
var bool: aux20172_BOOL:: var_is_introduced ;
var bool: aux20173_BOOL:: var_is_introduced ;
var {0,1}: aux20173_INTEGER :: var_is_introduced ;
var bool: aux20174_BOOL:: var_is_introduced ;
var bool: aux20175_BOOL:: var_is_introduced ;
var 3..60: aux20176:: var_is_introduced ;
var bool: aux20177_BOOL:: var_is_introduced ;
var bool: aux20178_BOOL:: var_is_introduced ;
var bool: aux20179_BOOL:: var_is_introduced ;
var {0,1}: aux20179_INTEGER :: var_is_introduced ;
var bool: aux20180_BOOL:: var_is_introduced ;
var bool: aux20181_BOOL:: var_is_introduced ;
var 2..59: aux20182:: var_is_introduced ;
var bool: aux20183_BOOL:: var_is_introduced ;
var bool: aux20184_BOOL:: var_is_introduced ;
var bool: aux20185_BOOL:: var_is_introduced ;
var {0,1}: aux20185_INTEGER :: var_is_introduced ;
var bool: aux20186_BOOL:: var_is_introduced ;
var bool: aux20187_BOOL:: var_is_introduced ;
var 1..58: aux20188:: var_is_introduced ;
var bool: aux20189_BOOL:: var_is_introduced ;
var bool: aux20190_BOOL:: var_is_introduced ;
var bool: aux20191_BOOL:: var_is_introduced ;
var {0,1}: aux20191_INTEGER :: var_is_introduced ;
var bool: aux20192_BOOL:: var_is_introduced ;
var bool: aux20193_BOOL:: var_is_introduced ;
var 3..60: aux20194:: var_is_introduced ;
var bool: aux20195_BOOL:: var_is_introduced ;
var bool: aux20196_BOOL:: var_is_introduced ;
var bool: aux20197_BOOL:: var_is_introduced ;
var {0,1}: aux20197_INTEGER :: var_is_introduced ;
var bool: aux20198_BOOL:: var_is_introduced ;
var bool: aux20199_BOOL:: var_is_introduced ;
var 4..61: aux20200:: var_is_introduced ;
var bool: aux20201_BOOL:: var_is_introduced ;
var bool: aux20202_BOOL:: var_is_introduced ;
var bool: aux20203_BOOL:: var_is_introduced ;
var {0,1}: aux20203_INTEGER :: var_is_introduced ;
var bool: aux20204_BOOL:: var_is_introduced ;
var bool: aux20205_BOOL:: var_is_introduced ;
var 1..58: aux20206:: var_is_introduced ;
var bool: aux20207_BOOL:: var_is_introduced ;
var bool: aux20208_BOOL:: var_is_introduced ;
var bool: aux20209_BOOL:: var_is_introduced ;
var {0,1}: aux20209_INTEGER :: var_is_introduced ;
var bool: aux20210_BOOL:: var_is_introduced ;
var bool: aux20211_BOOL:: var_is_introduced ;
var 4..61: aux20212:: var_is_introduced ;
var bool: aux20213_BOOL:: var_is_introduced ;
var bool: aux20214_BOOL:: var_is_introduced ;
var bool: aux20215_BOOL:: var_is_introduced ;
var {0,1}: aux20215_INTEGER :: var_is_introduced ;
var bool: aux20216_BOOL:: var_is_introduced ;
var bool: aux20217_BOOL:: var_is_introduced ;
var 2..59: aux20218:: var_is_introduced ;
var bool: aux20219_BOOL:: var_is_introduced ;
var bool: aux20220_BOOL:: var_is_introduced ;
var bool: aux20221_BOOL:: var_is_introduced ;
var {0,1}: aux20221_INTEGER :: var_is_introduced ;
var bool: aux20222_BOOL:: var_is_introduced ;
var 2..59: aux20223:: var_is_introduced ;
var bool: aux20224_BOOL:: var_is_introduced ;
var bool: aux20225_BOOL:: var_is_introduced ;
var {0,1}: aux20225_INTEGER :: var_is_introduced ;
var bool: aux20226_BOOL:: var_is_introduced ;
var bool: aux20227_BOOL:: var_is_introduced ;
var bool: aux20228_BOOL:: var_is_introduced ;
var 4..61: aux20229:: var_is_introduced ;
var bool: aux20230_BOOL:: var_is_introduced ;
var bool: aux20231_BOOL:: var_is_introduced ;
var bool: aux20232_BOOL:: var_is_introduced ;
var {0,1}: aux20232_INTEGER :: var_is_introduced ;
var bool: aux20233_BOOL:: var_is_introduced ;
var bool: aux20234_BOOL:: var_is_introduced ;
var 4..61: aux20235:: var_is_introduced ;
var bool: aux20236_BOOL:: var_is_introduced ;
var bool: aux20237_BOOL:: var_is_introduced ;
var bool: aux20238_BOOL:: var_is_introduced ;
var {0,1}: aux20238_INTEGER :: var_is_introduced ;
var bool: aux20239_BOOL:: var_is_introduced ;
var bool: aux20240_BOOL:: var_is_introduced ;
var 3..60: aux20241:: var_is_introduced ;
var bool: aux20242_BOOL:: var_is_introduced ;
var bool: aux20243_BOOL:: var_is_introduced ;
var bool: aux20244_BOOL:: var_is_introduced ;
var {0,1}: aux20244_INTEGER :: var_is_introduced ;
var bool: aux20245_BOOL:: var_is_introduced ;
var bool: aux20246_BOOL:: var_is_introduced ;
var 2..59: aux20247:: var_is_introduced ;
var bool: aux20248_BOOL:: var_is_introduced ;
var bool: aux20249_BOOL:: var_is_introduced ;
var bool: aux20250_BOOL:: var_is_introduced ;
var {0,1}: aux20250_INTEGER :: var_is_introduced ;
var bool: aux20251_BOOL:: var_is_introduced ;
var bool: aux20252_BOOL:: var_is_introduced ;
var 3..60: aux20253:: var_is_introduced ;
var bool: aux20254_BOOL:: var_is_introduced ;
var bool: aux20255_BOOL:: var_is_introduced ;
var bool: aux20256_BOOL:: var_is_introduced ;
var {0,1}: aux20256_INTEGER :: var_is_introduced ;
var bool: aux20257_BOOL:: var_is_introduced ;
var bool: aux20258_BOOL:: var_is_introduced ;
var 2..59: aux20259:: var_is_introduced ;
var bool: aux20260_BOOL:: var_is_introduced ;
var bool: aux20261_BOOL:: var_is_introduced ;
var bool: aux20262_BOOL:: var_is_introduced ;
var {0,1}: aux20262_INTEGER :: var_is_introduced ;
var bool: aux20263_BOOL:: var_is_introduced ;
var bool: aux20264_BOOL:: var_is_introduced ;
var 3..60: aux20265:: var_is_introduced ;
var bool: aux20266_BOOL:: var_is_introduced ;
var bool: aux20267_BOOL:: var_is_introduced ;
var bool: aux20268_BOOL:: var_is_introduced ;
var {0,1}: aux20268_INTEGER :: var_is_introduced ;
var bool: aux20269_BOOL:: var_is_introduced ;
var bool: aux20270_BOOL:: var_is_introduced ;
var 2..59: aux20271:: var_is_introduced ;
var bool: aux20272_BOOL:: var_is_introduced ;
var bool: aux20273_BOOL:: var_is_introduced ;
var bool: aux20274_BOOL:: var_is_introduced ;
var {0,1}: aux20274_INTEGER :: var_is_introduced ;
var bool: aux20275_BOOL:: var_is_introduced ;
var bool: aux20276_BOOL:: var_is_introduced ;
var 2..59: aux20277:: var_is_introduced ;
var bool: aux20278_BOOL:: var_is_introduced ;
var bool: aux20279_BOOL:: var_is_introduced ;
var bool: aux20280_BOOL:: var_is_introduced ;
var {0,1}: aux20280_INTEGER :: var_is_introduced ;
var bool: aux20281_BOOL:: var_is_introduced ;
var bool: aux20282_BOOL:: var_is_introduced ;
var 5..62: aux20283:: var_is_introduced ;
var bool: aux20284_BOOL:: var_is_introduced ;
var bool: aux20285_BOOL:: var_is_introduced ;
var bool: aux20286_BOOL:: var_is_introduced ;
var {0,1}: aux20286_INTEGER :: var_is_introduced ;
var bool: aux20287_BOOL:: var_is_introduced ;
var bool: aux20288_BOOL:: var_is_introduced ;
var 3..60: aux20289:: var_is_introduced ;
var bool: aux20290_BOOL:: var_is_introduced ;
var bool: aux20291_BOOL:: var_is_introduced ;
var bool: aux20292_BOOL:: var_is_introduced ;
var {0,1}: aux20292_INTEGER :: var_is_introduced ;
var bool: aux20293_BOOL:: var_is_introduced ;
var bool: aux20294_BOOL:: var_is_introduced ;
var 4..61: aux20295:: var_is_introduced ;
var bool: aux20296_BOOL:: var_is_introduced ;
var bool: aux20297_BOOL:: var_is_introduced ;
var bool: aux20298_BOOL:: var_is_introduced ;
var {0,1}: aux20298_INTEGER :: var_is_introduced ;
var bool: aux20299_BOOL:: var_is_introduced ;
var bool: aux20300_BOOL:: var_is_introduced ;
var 3..60: aux20301:: var_is_introduced ;
var bool: aux20302_BOOL:: var_is_introduced ;
var bool: aux20303_BOOL:: var_is_introduced ;
var bool: aux20304_BOOL:: var_is_introduced ;
var {0,1}: aux20304_INTEGER :: var_is_introduced ;
var bool: aux20305_BOOL:: var_is_introduced ;
var bool: aux20306_BOOL:: var_is_introduced ;
var 2..59: aux20307:: var_is_introduced ;
var bool: aux20308_BOOL:: var_is_introduced ;
var bool: aux20309_BOOL:: var_is_introduced ;
var bool: aux20310_BOOL:: var_is_introduced ;
var {0,1}: aux20310_INTEGER :: var_is_introduced ;
var bool: aux20311_BOOL:: var_is_introduced ;
var bool: aux20312_BOOL:: var_is_introduced ;
var 1..58: aux20313:: var_is_introduced ;
var bool: aux20314_BOOL:: var_is_introduced ;
var bool: aux20315_BOOL:: var_is_introduced ;
var bool: aux20316_BOOL:: var_is_introduced ;
var {0,1}: aux20316_INTEGER :: var_is_introduced ;
var bool: aux20317_BOOL:: var_is_introduced ;
var bool: aux20318_BOOL:: var_is_introduced ;
var 3..60: aux20319:: var_is_introduced ;
var bool: aux20320_BOOL:: var_is_introduced ;
var bool: aux20321_BOOL:: var_is_introduced ;
var bool: aux20322_BOOL:: var_is_introduced ;
var {0,1}: aux20322_INTEGER :: var_is_introduced ;
var bool: aux20323_BOOL:: var_is_introduced ;
var bool: aux20324_BOOL:: var_is_introduced ;
var 1..58: aux20325:: var_is_introduced ;
var bool: aux20326_BOOL:: var_is_introduced ;
var bool: aux20327_BOOL:: var_is_introduced ;
var bool: aux20328_BOOL:: var_is_introduced ;
var {0,1}: aux20328_INTEGER :: var_is_introduced ;
var bool: aux20329_BOOL:: var_is_introduced ;
var bool: aux20330_BOOL:: var_is_introduced ;
var 4..61: aux20331:: var_is_introduced ;
var bool: aux20332_BOOL:: var_is_introduced ;
var bool: aux20333_BOOL:: var_is_introduced ;
var bool: aux20334_BOOL:: var_is_introduced ;
var {0,1}: aux20334_INTEGER :: var_is_introduced ;
var bool: aux20335_BOOL:: var_is_introduced ;
var bool: aux20336_BOOL:: var_is_introduced ;
var 2..59: aux20337:: var_is_introduced ;
var bool: aux20338_BOOL:: var_is_introduced ;
var bool: aux20339_BOOL:: var_is_introduced ;
var bool: aux20340_BOOL:: var_is_introduced ;
var {0,1}: aux20340_INTEGER :: var_is_introduced ;
var bool: aux20341_BOOL:: var_is_introduced ;
var 4..61: aux20342:: var_is_introduced ;
var bool: aux20343_BOOL:: var_is_introduced ;
var bool: aux20344_BOOL:: var_is_introduced ;
var {0,1}: aux20344_INTEGER :: var_is_introduced ;
var bool: aux20345_BOOL:: var_is_introduced ;
var bool: aux20346_BOOL:: var_is_introduced ;
var bool: aux20347_BOOL:: var_is_introduced ;
var 4..61: aux20348:: var_is_introduced ;
var bool: aux20349_BOOL:: var_is_introduced ;
var bool: aux20350_BOOL:: var_is_introduced ;
var bool: aux20351_BOOL:: var_is_introduced ;
var {0,1}: aux20351_INTEGER :: var_is_introduced ;
var bool: aux20352_BOOL:: var_is_introduced ;
var bool: aux20353_BOOL:: var_is_introduced ;
var 3..60: aux20354:: var_is_introduced ;
var bool: aux20355_BOOL:: var_is_introduced ;
var bool: aux20356_BOOL:: var_is_introduced ;
var bool: aux20357_BOOL:: var_is_introduced ;
var {0,1}: aux20357_INTEGER :: var_is_introduced ;
var bool: aux20358_BOOL:: var_is_introduced ;
var bool: aux20359_BOOL:: var_is_introduced ;
var 2..59: aux20360:: var_is_introduced ;
var bool: aux20361_BOOL:: var_is_introduced ;
var bool: aux20362_BOOL:: var_is_introduced ;
var bool: aux20363_BOOL:: var_is_introduced ;
var {0,1}: aux20363_INTEGER :: var_is_introduced ;
var bool: aux20364_BOOL:: var_is_introduced ;
var bool: aux20365_BOOL:: var_is_introduced ;
var 3..60: aux20366:: var_is_introduced ;
var bool: aux20367_BOOL:: var_is_introduced ;
var bool: aux20368_BOOL:: var_is_introduced ;
var bool: aux20369_BOOL:: var_is_introduced ;
var {0,1}: aux20369_INTEGER :: var_is_introduced ;
var bool: aux20370_BOOL:: var_is_introduced ;
var bool: aux20371_BOOL:: var_is_introduced ;
var 2..59: aux20372:: var_is_introduced ;
var bool: aux20373_BOOL:: var_is_introduced ;
var bool: aux20374_BOOL:: var_is_introduced ;
var bool: aux20375_BOOL:: var_is_introduced ;
var {0,1}: aux20375_INTEGER :: var_is_introduced ;
var bool: aux20376_BOOL:: var_is_introduced ;
var bool: aux20377_BOOL:: var_is_introduced ;
var 3..60: aux20378:: var_is_introduced ;
var bool: aux20379_BOOL:: var_is_introduced ;
var bool: aux20380_BOOL:: var_is_introduced ;
var bool: aux20381_BOOL:: var_is_introduced ;
var {0,1}: aux20381_INTEGER :: var_is_introduced ;
var bool: aux20382_BOOL:: var_is_introduced ;
var bool: aux20383_BOOL:: var_is_introduced ;
var 2..59: aux20384:: var_is_introduced ;
var bool: aux20385_BOOL:: var_is_introduced ;
var bool: aux20386_BOOL:: var_is_introduced ;
var bool: aux20387_BOOL:: var_is_introduced ;
var {0,1}: aux20387_INTEGER :: var_is_introduced ;
var bool: aux20388_BOOL:: var_is_introduced ;
var bool: aux20389_BOOL:: var_is_introduced ;
var 2..59: aux20390:: var_is_introduced ;
var bool: aux20391_BOOL:: var_is_introduced ;
var bool: aux20392_BOOL:: var_is_introduced ;
var bool: aux20393_BOOL:: var_is_introduced ;
var {0,1}: aux20393_INTEGER :: var_is_introduced ;
var bool: aux20394_BOOL:: var_is_introduced ;
var bool: aux20395_BOOL:: var_is_introduced ;
var 5..62: aux20396:: var_is_introduced ;
var bool: aux20397_BOOL:: var_is_introduced ;
var bool: aux20398_BOOL:: var_is_introduced ;
var bool: aux20399_BOOL:: var_is_introduced ;
var {0,1}: aux20399_INTEGER :: var_is_introduced ;
var bool: aux20400_BOOL:: var_is_introduced ;
var bool: aux20401_BOOL:: var_is_introduced ;
var 3..60: aux20402:: var_is_introduced ;
var bool: aux20403_BOOL:: var_is_introduced ;
var bool: aux20404_BOOL:: var_is_introduced ;
var bool: aux20405_BOOL:: var_is_introduced ;
var {0,1}: aux20405_INTEGER :: var_is_introduced ;
var bool: aux20406_BOOL:: var_is_introduced ;
var bool: aux20407_BOOL:: var_is_introduced ;
var 4..61: aux20408:: var_is_introduced ;
var bool: aux20409_BOOL:: var_is_introduced ;
var bool: aux20410_BOOL:: var_is_introduced ;
var bool: aux20411_BOOL:: var_is_introduced ;
var {0,1}: aux20411_INTEGER :: var_is_introduced ;
var bool: aux20412_BOOL:: var_is_introduced ;
var bool: aux20413_BOOL:: var_is_introduced ;
var 3..60: aux20414:: var_is_introduced ;
var bool: aux20415_BOOL:: var_is_introduced ;
var bool: aux20416_BOOL:: var_is_introduced ;
var bool: aux20417_BOOL:: var_is_introduced ;
var {0,1}: aux20417_INTEGER :: var_is_introduced ;
var bool: aux20418_BOOL:: var_is_introduced ;
var bool: aux20419_BOOL:: var_is_introduced ;
var 2..59: aux20420:: var_is_introduced ;
var bool: aux20421_BOOL:: var_is_introduced ;
var bool: aux20422_BOOL:: var_is_introduced ;
var bool: aux20423_BOOL:: var_is_introduced ;
var {0,1}: aux20423_INTEGER :: var_is_introduced ;
var bool: aux20424_BOOL:: var_is_introduced ;
var bool: aux20425_BOOL:: var_is_introduced ;
var 1..58: aux20426:: var_is_introduced ;
var bool: aux20427_BOOL:: var_is_introduced ;
var bool: aux20428_BOOL:: var_is_introduced ;
var bool: aux20429_BOOL:: var_is_introduced ;
var {0,1}: aux20429_INTEGER :: var_is_introduced ;
var bool: aux20430_BOOL:: var_is_introduced ;
var bool: aux20431_BOOL:: var_is_introduced ;
var 3..60: aux20432:: var_is_introduced ;
var bool: aux20433_BOOL:: var_is_introduced ;
var bool: aux20434_BOOL:: var_is_introduced ;
var bool: aux20435_BOOL:: var_is_introduced ;
var {0,1}: aux20435_INTEGER :: var_is_introduced ;
var bool: aux20436_BOOL:: var_is_introduced ;
var bool: aux20437_BOOL:: var_is_introduced ;
var 4..61: aux20438:: var_is_introduced ;
var bool: aux20439_BOOL:: var_is_introduced ;
var bool: aux20440_BOOL:: var_is_introduced ;
var bool: aux20441_BOOL:: var_is_introduced ;
var {0,1}: aux20441_INTEGER :: var_is_introduced ;
var bool: aux20442_BOOL:: var_is_introduced ;
var bool: aux20443_BOOL:: var_is_introduced ;
var 1..58: aux20444:: var_is_introduced ;
var bool: aux20445_BOOL:: var_is_introduced ;
var bool: aux20446_BOOL:: var_is_introduced ;
var bool: aux20447_BOOL:: var_is_introduced ;
var {0,1}: aux20447_INTEGER :: var_is_introduced ;
var bool: aux20448_BOOL:: var_is_introduced ;
var bool: aux20449_BOOL:: var_is_introduced ;
var 4..61: aux20450:: var_is_introduced ;
var bool: aux20451_BOOL:: var_is_introduced ;
var bool: aux20452_BOOL:: var_is_introduced ;
var bool: aux20453_BOOL:: var_is_introduced ;
var {0,1}: aux20453_INTEGER :: var_is_introduced ;
var bool: aux20454_BOOL:: var_is_introduced ;
var bool: aux20455_BOOL:: var_is_introduced ;
var 2..59: aux20456:: var_is_introduced ;
var bool: aux20457_BOOL:: var_is_introduced ;
var bool: aux20458_BOOL:: var_is_introduced ;
var bool: aux20459_BOOL:: var_is_introduced ;
var {0,1}: aux20459_INTEGER :: var_is_introduced ;
var bool: aux20460_BOOL:: var_is_introduced ;
var 4..61: aux20461:: var_is_introduced ;
var bool: aux20462_BOOL:: var_is_introduced ;
var bool: aux20463_BOOL:: var_is_introduced ;
var {0,1}: aux20463_INTEGER :: var_is_introduced ;
var bool: aux20464_BOOL:: var_is_introduced ;
var bool: aux20465_BOOL:: var_is_introduced ;
var bool: aux20466_BOOL:: var_is_introduced ;
var 4..61: aux20467:: var_is_introduced ;
var bool: aux20468_BOOL:: var_is_introduced ;
var bool: aux20469_BOOL:: var_is_introduced ;
var bool: aux20470_BOOL:: var_is_introduced ;
var {0,1}: aux20470_INTEGER :: var_is_introduced ;
var bool: aux20471_BOOL:: var_is_introduced ;
var bool: aux20472_BOOL:: var_is_introduced ;
var 4..61: aux20473:: var_is_introduced ;
var bool: aux20474_BOOL:: var_is_introduced ;
var bool: aux20475_BOOL:: var_is_introduced ;
var bool: aux20476_BOOL:: var_is_introduced ;
var {0,1}: aux20476_INTEGER :: var_is_introduced ;
var bool: aux20477_BOOL:: var_is_introduced ;
var bool: aux20478_BOOL:: var_is_introduced ;
var 3..60: aux20479:: var_is_introduced ;
var bool: aux20480_BOOL:: var_is_introduced ;
var bool: aux20481_BOOL:: var_is_introduced ;
var bool: aux20482_BOOL:: var_is_introduced ;
var {0,1}: aux20482_INTEGER :: var_is_introduced ;
var bool: aux20483_BOOL:: var_is_introduced ;
var bool: aux20484_BOOL:: var_is_introduced ;
var 2..59: aux20485:: var_is_introduced ;
var bool: aux20486_BOOL:: var_is_introduced ;
var bool: aux20487_BOOL:: var_is_introduced ;
var bool: aux20488_BOOL:: var_is_introduced ;
var {0,1}: aux20488_INTEGER :: var_is_introduced ;
var bool: aux20489_BOOL:: var_is_introduced ;
var bool: aux20490_BOOL:: var_is_introduced ;
var 3..60: aux20491:: var_is_introduced ;
var bool: aux20492_BOOL:: var_is_introduced ;
var bool: aux20493_BOOL:: var_is_introduced ;
var bool: aux20494_BOOL:: var_is_introduced ;
var {0,1}: aux20494_INTEGER :: var_is_introduced ;
var bool: aux20495_BOOL:: var_is_introduced ;
var bool: aux20496_BOOL:: var_is_introduced ;
var 2..59: aux20497:: var_is_introduced ;
var bool: aux20498_BOOL:: var_is_introduced ;
var bool: aux20499_BOOL:: var_is_introduced ;
var bool: aux20500_BOOL:: var_is_introduced ;
var {0,1}: aux20500_INTEGER :: var_is_introduced ;
var bool: aux20501_BOOL:: var_is_introduced ;
var bool: aux20502_BOOL:: var_is_introduced ;
var 3..60: aux20503:: var_is_introduced ;
var bool: aux20504_BOOL:: var_is_introduced ;
var bool: aux20505_BOOL:: var_is_introduced ;
var bool: aux20506_BOOL:: var_is_introduced ;
var {0,1}: aux20506_INTEGER :: var_is_introduced ;
var bool: aux20507_BOOL:: var_is_introduced ;
var bool: aux20508_BOOL:: var_is_introduced ;
var 2..59: aux20509:: var_is_introduced ;
var bool: aux20510_BOOL:: var_is_introduced ;
var bool: aux20511_BOOL:: var_is_introduced ;
var bool: aux20512_BOOL:: var_is_introduced ;
var {0,1}: aux20512_INTEGER :: var_is_introduced ;
var bool: aux20513_BOOL:: var_is_introduced ;
var bool: aux20514_BOOL:: var_is_introduced ;
var 2..59: aux20515:: var_is_introduced ;
var bool: aux20516_BOOL:: var_is_introduced ;
var bool: aux20517_BOOL:: var_is_introduced ;
var bool: aux20518_BOOL:: var_is_introduced ;
var {0,1}: aux20518_INTEGER :: var_is_introduced ;
var bool: aux20519_BOOL:: var_is_introduced ;
var bool: aux20520_BOOL:: var_is_introduced ;
var 5..62: aux20521:: var_is_introduced ;
var bool: aux20522_BOOL:: var_is_introduced ;
var bool: aux20523_BOOL:: var_is_introduced ;
var bool: aux20524_BOOL:: var_is_introduced ;
var {0,1}: aux20524_INTEGER :: var_is_introduced ;
var bool: aux20525_BOOL:: var_is_introduced ;
var bool: aux20526_BOOL:: var_is_introduced ;
var 3..60: aux20527:: var_is_introduced ;
var bool: aux20528_BOOL:: var_is_introduced ;
var bool: aux20529_BOOL:: var_is_introduced ;
var bool: aux20530_BOOL:: var_is_introduced ;
var {0,1}: aux20530_INTEGER :: var_is_introduced ;
var bool: aux20531_BOOL:: var_is_introduced ;
var bool: aux20532_BOOL:: var_is_introduced ;
var 4..61: aux20533:: var_is_introduced ;
var bool: aux20534_BOOL:: var_is_introduced ;
var bool: aux20535_BOOL:: var_is_introduced ;
var bool: aux20536_BOOL:: var_is_introduced ;
var {0,1}: aux20536_INTEGER :: var_is_introduced ;
var bool: aux20537_BOOL:: var_is_introduced ;
var bool: aux20538_BOOL:: var_is_introduced ;
var 3..60: aux20539:: var_is_introduced ;
var bool: aux20540_BOOL:: var_is_introduced ;
var bool: aux20541_BOOL:: var_is_introduced ;
var bool: aux20542_BOOL:: var_is_introduced ;
var {0,1}: aux20542_INTEGER :: var_is_introduced ;
var bool: aux20543_BOOL:: var_is_introduced ;
var bool: aux20544_BOOL:: var_is_introduced ;
var 2..59: aux20545:: var_is_introduced ;
var bool: aux20546_BOOL:: var_is_introduced ;
var bool: aux20547_BOOL:: var_is_introduced ;
var bool: aux20548_BOOL:: var_is_introduced ;
var {0,1}: aux20548_INTEGER :: var_is_introduced ;
var bool: aux20549_BOOL:: var_is_introduced ;
var bool: aux20550_BOOL:: var_is_introduced ;
var 1..58: aux20551:: var_is_introduced ;
var bool: aux20552_BOOL:: var_is_introduced ;
var bool: aux20553_BOOL:: var_is_introduced ;
var bool: aux20554_BOOL:: var_is_introduced ;
var {0,1}: aux20554_INTEGER :: var_is_introduced ;
var bool: aux20555_BOOL:: var_is_introduced ;
var bool: aux20556_BOOL:: var_is_introduced ;
var 3..60: aux20557:: var_is_introduced ;
var bool: aux20558_BOOL:: var_is_introduced ;
var bool: aux20559_BOOL:: var_is_introduced ;
var bool: aux20560_BOOL:: var_is_introduced ;
var {0,1}: aux20560_INTEGER :: var_is_introduced ;
var bool: aux20561_BOOL:: var_is_introduced ;
var bool: aux20562_BOOL:: var_is_introduced ;
var 4..61: aux20563:: var_is_introduced ;
var bool: aux20564_BOOL:: var_is_introduced ;
var bool: aux20565_BOOL:: var_is_introduced ;
var bool: aux20566_BOOL:: var_is_introduced ;
var {0,1}: aux20566_INTEGER :: var_is_introduced ;
var bool: aux20567_BOOL:: var_is_introduced ;
var bool: aux20568_BOOL:: var_is_introduced ;
var 1..58: aux20569:: var_is_introduced ;
var bool: aux20570_BOOL:: var_is_introduced ;
var bool: aux20571_BOOL:: var_is_introduced ;
var bool: aux20572_BOOL:: var_is_introduced ;
var {0,1}: aux20572_INTEGER :: var_is_introduced ;
var bool: aux20573_BOOL:: var_is_introduced ;
var bool: aux20574_BOOL:: var_is_introduced ;
var 2..59: aux20575:: var_is_introduced ;
var bool: aux20576_BOOL:: var_is_introduced ;
var bool: aux20577_BOOL:: var_is_introduced ;
var bool: aux20578_BOOL:: var_is_introduced ;
var {0,1}: aux20578_INTEGER :: var_is_introduced ;
var bool: aux20579_BOOL:: var_is_introduced ;
var 4..61: aux20580:: var_is_introduced ;
var bool: aux20581_BOOL:: var_is_introduced ;
var bool: aux20582_BOOL:: var_is_introduced ;
var {0,1}: aux20582_INTEGER :: var_is_introduced ;
var bool: aux20583_BOOL:: var_is_introduced ;
var bool: aux20584_BOOL:: var_is_introduced ;
var bool: aux20585_BOOL:: var_is_introduced ;
var 4..61: aux20586:: var_is_introduced ;
var bool: aux20587_BOOL:: var_is_introduced ;
var bool: aux20588_BOOL:: var_is_introduced ;
var bool: aux20589_BOOL:: var_is_introduced ;
var {0,1}: aux20589_INTEGER :: var_is_introduced ;
var bool: aux20590_BOOL:: var_is_introduced ;
var bool: aux20591_BOOL:: var_is_introduced ;
var 4..61: aux20592:: var_is_introduced ;
var bool: aux20593_BOOL:: var_is_introduced ;
var bool: aux20594_BOOL:: var_is_introduced ;
var bool: aux20595_BOOL:: var_is_introduced ;
var {0,1}: aux20595_INTEGER :: var_is_introduced ;
var bool: aux20596_BOOL:: var_is_introduced ;
var bool: aux20597_BOOL:: var_is_introduced ;
var 3..60: aux20598:: var_is_introduced ;
var bool: aux20599_BOOL:: var_is_introduced ;
var bool: aux20600_BOOL:: var_is_introduced ;
var bool: aux20601_BOOL:: var_is_introduced ;
var {0,1}: aux20601_INTEGER :: var_is_introduced ;
var bool: aux20602_BOOL:: var_is_introduced ;
var bool: aux20603_BOOL:: var_is_introduced ;
var 3..60: aux20604:: var_is_introduced ;
var bool: aux20605_BOOL:: var_is_introduced ;
var bool: aux20606_BOOL:: var_is_introduced ;
var bool: aux20607_BOOL:: var_is_introduced ;
var {0,1}: aux20607_INTEGER :: var_is_introduced ;
var bool: aux20608_BOOL:: var_is_introduced ;
var bool: aux20609_BOOL:: var_is_introduced ;
var 2..59: aux20610:: var_is_introduced ;
var bool: aux20611_BOOL:: var_is_introduced ;
var bool: aux20612_BOOL:: var_is_introduced ;
var bool: aux20613_BOOL:: var_is_introduced ;
var {0,1}: aux20613_INTEGER :: var_is_introduced ;
var bool: aux20614_BOOL:: var_is_introduced ;
var bool: aux20615_BOOL:: var_is_introduced ;
var 3..60: aux20616:: var_is_introduced ;
var bool: aux20617_BOOL:: var_is_introduced ;
var bool: aux20618_BOOL:: var_is_introduced ;
var bool: aux20619_BOOL:: var_is_introduced ;
var {0,1}: aux20619_INTEGER :: var_is_introduced ;
var bool: aux20620_BOOL:: var_is_introduced ;
var bool: aux20621_BOOL:: var_is_introduced ;
var 2..59: aux20622:: var_is_introduced ;
var bool: aux20623_BOOL:: var_is_introduced ;
var bool: aux20624_BOOL:: var_is_introduced ;
var bool: aux20625_BOOL:: var_is_introduced ;
var {0,1}: aux20625_INTEGER :: var_is_introduced ;
var bool: aux20626_BOOL:: var_is_introduced ;
var bool: aux20627_BOOL:: var_is_introduced ;
var 2..59: aux20628:: var_is_introduced ;
var bool: aux20629_BOOL:: var_is_introduced ;
var bool: aux20630_BOOL:: var_is_introduced ;
var bool: aux20631_BOOL:: var_is_introduced ;
var {0,1}: aux20631_INTEGER :: var_is_introduced ;
var bool: aux20632_BOOL:: var_is_introduced ;
var bool: aux20633_BOOL:: var_is_introduced ;
var 5..62: aux20634:: var_is_introduced ;
var bool: aux20635_BOOL:: var_is_introduced ;
var bool: aux20636_BOOL:: var_is_introduced ;
var bool: aux20637_BOOL:: var_is_introduced ;
var {0,1}: aux20637_INTEGER :: var_is_introduced ;
var bool: aux20638_BOOL:: var_is_introduced ;
var bool: aux20639_BOOL:: var_is_introduced ;
var 3..60: aux20640:: var_is_introduced ;
var bool: aux20641_BOOL:: var_is_introduced ;
var bool: aux20642_BOOL:: var_is_introduced ;
var bool: aux20643_BOOL:: var_is_introduced ;
var {0,1}: aux20643_INTEGER :: var_is_introduced ;
var bool: aux20644_BOOL:: var_is_introduced ;
var bool: aux20645_BOOL:: var_is_introduced ;
var 4..61: aux20646:: var_is_introduced ;
var bool: aux20647_BOOL:: var_is_introduced ;
var bool: aux20648_BOOL:: var_is_introduced ;
var bool: aux20649_BOOL:: var_is_introduced ;
var {0,1}: aux20649_INTEGER :: var_is_introduced ;
var bool: aux20650_BOOL:: var_is_introduced ;
var bool: aux20651_BOOL:: var_is_introduced ;
var 3..60: aux20652:: var_is_introduced ;
var bool: aux20653_BOOL:: var_is_introduced ;
var bool: aux20654_BOOL:: var_is_introduced ;
var bool: aux20655_BOOL:: var_is_introduced ;
var {0,1}: aux20655_INTEGER :: var_is_introduced ;
var bool: aux20656_BOOL:: var_is_introduced ;
var bool: aux20657_BOOL:: var_is_introduced ;
var 2..59: aux20658:: var_is_introduced ;
var bool: aux20659_BOOL:: var_is_introduced ;
var bool: aux20660_BOOL:: var_is_introduced ;
var bool: aux20661_BOOL:: var_is_introduced ;
var {0,1}: aux20661_INTEGER :: var_is_introduced ;
var bool: aux20662_BOOL:: var_is_introduced ;
var bool: aux20663_BOOL:: var_is_introduced ;
var 1..58: aux20664:: var_is_introduced ;
var bool: aux20665_BOOL:: var_is_introduced ;
var bool: aux20666_BOOL:: var_is_introduced ;
var bool: aux20667_BOOL:: var_is_introduced ;
var {0,1}: aux20667_INTEGER :: var_is_introduced ;
var bool: aux20668_BOOL:: var_is_introduced ;
var bool: aux20669_BOOL:: var_is_introduced ;
var 3..60: aux20670:: var_is_introduced ;
var bool: aux20671_BOOL:: var_is_introduced ;
var bool: aux20672_BOOL:: var_is_introduced ;
var bool: aux20673_BOOL:: var_is_introduced ;
var {0,1}: aux20673_INTEGER :: var_is_introduced ;
var bool: aux20674_BOOL:: var_is_introduced ;
var bool: aux20675_BOOL:: var_is_introduced ;
var 4..61: aux20676:: var_is_introduced ;
var bool: aux20677_BOOL:: var_is_introduced ;
var bool: aux20678_BOOL:: var_is_introduced ;
var bool: aux20679_BOOL:: var_is_introduced ;
var {0,1}: aux20679_INTEGER :: var_is_introduced ;
var bool: aux20680_BOOL:: var_is_introduced ;
var bool: aux20681_BOOL:: var_is_introduced ;
var 1..58: aux20682:: var_is_introduced ;
var bool: aux20683_BOOL:: var_is_introduced ;
var bool: aux20684_BOOL:: var_is_introduced ;
var bool: aux20685_BOOL:: var_is_introduced ;
var {0,1}: aux20685_INTEGER :: var_is_introduced ;
var bool: aux20686_BOOL:: var_is_introduced ;
var bool: aux20687_BOOL:: var_is_introduced ;
var 4..61: aux20688:: var_is_introduced ;
var bool: aux20689_BOOL:: var_is_introduced ;
var bool: aux20690_BOOL:: var_is_introduced ;
var bool: aux20691_BOOL:: var_is_introduced ;
var {0,1}: aux20691_INTEGER :: var_is_introduced ;
var bool: aux20692_BOOL:: var_is_introduced ;
var bool: aux20693_BOOL:: var_is_introduced ;
var 2..59: aux20694:: var_is_introduced ;
var bool: aux20695_BOOL:: var_is_introduced ;
var bool: aux20696_BOOL:: var_is_introduced ;
var bool: aux20697_BOOL:: var_is_introduced ;
var {0,1}: aux20697_INTEGER :: var_is_introduced ;
var bool: aux20698_BOOL:: var_is_introduced ;
var 2..59: aux20699:: var_is_introduced ;
var bool: aux20700_BOOL:: var_is_introduced ;
var bool: aux20701_BOOL:: var_is_introduced ;
var {0,1}: aux20701_INTEGER :: var_is_introduced ;
var bool: aux20702_BOOL:: var_is_introduced ;
var bool: aux20703_BOOL:: var_is_introduced ;
var bool: aux20704_BOOL:: var_is_introduced ;
var 4..61: aux20705:: var_is_introduced ;
var bool: aux20706_BOOL:: var_is_introduced ;
var bool: aux20707_BOOL:: var_is_introduced ;
var bool: aux20708_BOOL:: var_is_introduced ;
var {0,1}: aux20708_INTEGER :: var_is_introduced ;
var bool: aux20709_BOOL:: var_is_introduced ;
var bool: aux20710_BOOL:: var_is_introduced ;
var 4..61: aux20711:: var_is_introduced ;
var bool: aux20712_BOOL:: var_is_introduced ;
var bool: aux20713_BOOL:: var_is_introduced ;
var bool: aux20714_BOOL:: var_is_introduced ;
var {0,1}: aux20714_INTEGER :: var_is_introduced ;
var bool: aux20715_BOOL:: var_is_introduced ;
var bool: aux20716_BOOL:: var_is_introduced ;
var 3..60: aux20717:: var_is_introduced ;
var bool: aux20718_BOOL:: var_is_introduced ;
var bool: aux20719_BOOL:: var_is_introduced ;
var bool: aux20720_BOOL:: var_is_introduced ;
var {0,1}: aux20720_INTEGER :: var_is_introduced ;
var bool: aux20721_BOOL:: var_is_introduced ;
var bool: aux20722_BOOL:: var_is_introduced ;
var 2..59: aux20723:: var_is_introduced ;
var bool: aux20724_BOOL:: var_is_introduced ;
var bool: aux20725_BOOL:: var_is_introduced ;
var bool: aux20726_BOOL:: var_is_introduced ;
var {0,1}: aux20726_INTEGER :: var_is_introduced ;
var bool: aux20727_BOOL:: var_is_introduced ;
var bool: aux20728_BOOL:: var_is_introduced ;
var 3..60: aux20729:: var_is_introduced ;
var bool: aux20730_BOOL:: var_is_introduced ;
var bool: aux20731_BOOL:: var_is_introduced ;
var bool: aux20732_BOOL:: var_is_introduced ;
var {0,1}: aux20732_INTEGER :: var_is_introduced ;
var bool: aux20733_BOOL:: var_is_introduced ;
var bool: aux20734_BOOL:: var_is_introduced ;
var 2..59: aux20735:: var_is_introduced ;
var bool: aux20736_BOOL:: var_is_introduced ;
var bool: aux20737_BOOL:: var_is_introduced ;
var bool: aux20738_BOOL:: var_is_introduced ;
var {0,1}: aux20738_INTEGER :: var_is_introduced ;
var bool: aux20739_BOOL:: var_is_introduced ;
var bool: aux20740_BOOL:: var_is_introduced ;
var 3..60: aux20741:: var_is_introduced ;
var bool: aux20742_BOOL:: var_is_introduced ;
var bool: aux20743_BOOL:: var_is_introduced ;
var bool: aux20744_BOOL:: var_is_introduced ;
var {0,1}: aux20744_INTEGER :: var_is_introduced ;
var bool: aux20745_BOOL:: var_is_introduced ;
var bool: aux20746_BOOL:: var_is_introduced ;
var 2..59: aux20747:: var_is_introduced ;
var bool: aux20748_BOOL:: var_is_introduced ;
var bool: aux20749_BOOL:: var_is_introduced ;
var bool: aux20750_BOOL:: var_is_introduced ;
var {0,1}: aux20750_INTEGER :: var_is_introduced ;
var bool: aux20751_BOOL:: var_is_introduced ;
var bool: aux20752_BOOL:: var_is_introduced ;
var 5..62: aux20753:: var_is_introduced ;
var bool: aux20754_BOOL:: var_is_introduced ;
var bool: aux20755_BOOL:: var_is_introduced ;
var bool: aux20756_BOOL:: var_is_introduced ;
var {0,1}: aux20756_INTEGER :: var_is_introduced ;
var bool: aux20757_BOOL:: var_is_introduced ;
var bool: aux20758_BOOL:: var_is_introduced ;
var 3..60: aux20759:: var_is_introduced ;
var bool: aux20760_BOOL:: var_is_introduced ;
var bool: aux20761_BOOL:: var_is_introduced ;
var bool: aux20762_BOOL:: var_is_introduced ;
var {0,1}: aux20762_INTEGER :: var_is_introduced ;
var bool: aux20763_BOOL:: var_is_introduced ;
var bool: aux20764_BOOL:: var_is_introduced ;
var 4..61: aux20765:: var_is_introduced ;
var bool: aux20766_BOOL:: var_is_introduced ;
var bool: aux20767_BOOL:: var_is_introduced ;
var bool: aux20768_BOOL:: var_is_introduced ;
var {0,1}: aux20768_INTEGER :: var_is_introduced ;
var bool: aux20769_BOOL:: var_is_introduced ;
var bool: aux20770_BOOL:: var_is_introduced ;
var 3..60: aux20771:: var_is_introduced ;
var bool: aux20772_BOOL:: var_is_introduced ;
var bool: aux20773_BOOL:: var_is_introduced ;
var bool: aux20774_BOOL:: var_is_introduced ;
var {0,1}: aux20774_INTEGER :: var_is_introduced ;
var bool: aux20775_BOOL:: var_is_introduced ;
var bool: aux20776_BOOL:: var_is_introduced ;
var 2..59: aux20777:: var_is_introduced ;
var bool: aux20778_BOOL:: var_is_introduced ;
var bool: aux20779_BOOL:: var_is_introduced ;
var bool: aux20780_BOOL:: var_is_introduced ;
var {0,1}: aux20780_INTEGER :: var_is_introduced ;
var bool: aux20781_BOOL:: var_is_introduced ;
var bool: aux20782_BOOL:: var_is_introduced ;
var 1..58: aux20783:: var_is_introduced ;
var bool: aux20784_BOOL:: var_is_introduced ;
var bool: aux20785_BOOL:: var_is_introduced ;
var bool: aux20786_BOOL:: var_is_introduced ;
var {0,1}: aux20786_INTEGER :: var_is_introduced ;
var bool: aux20787_BOOL:: var_is_introduced ;
var bool: aux20788_BOOL:: var_is_introduced ;
var 3..60: aux20789:: var_is_introduced ;
var bool: aux20790_BOOL:: var_is_introduced ;
var bool: aux20791_BOOL:: var_is_introduced ;
var bool: aux20792_BOOL:: var_is_introduced ;
var {0,1}: aux20792_INTEGER :: var_is_introduced ;
var bool: aux20793_BOOL:: var_is_introduced ;
var bool: aux20794_BOOL:: var_is_introduced ;
var 4..61: aux20795:: var_is_introduced ;
var bool: aux20796_BOOL:: var_is_introduced ;
var bool: aux20797_BOOL:: var_is_introduced ;
var bool: aux20798_BOOL:: var_is_introduced ;
var {0,1}: aux20798_INTEGER :: var_is_introduced ;
var bool: aux20799_BOOL:: var_is_introduced ;
var bool: aux20800_BOOL:: var_is_introduced ;
var 1..58: aux20801:: var_is_introduced ;
var bool: aux20802_BOOL:: var_is_introduced ;
var bool: aux20803_BOOL:: var_is_introduced ;
var bool: aux20804_BOOL:: var_is_introduced ;
var {0,1}: aux20804_INTEGER :: var_is_introduced ;
var bool: aux20805_BOOL:: var_is_introduced ;
var bool: aux20806_BOOL:: var_is_introduced ;
var 4..61: aux20807:: var_is_introduced ;
var bool: aux20808_BOOL:: var_is_introduced ;
var bool: aux20809_BOOL:: var_is_introduced ;
var bool: aux20810_BOOL:: var_is_introduced ;
var {0,1}: aux20810_INTEGER :: var_is_introduced ;
var bool: aux20811_BOOL:: var_is_introduced ;
var bool: aux20812_BOOL:: var_is_introduced ;
var 2..59: aux20813:: var_is_introduced ;
var bool: aux20814_BOOL:: var_is_introduced ;
var bool: aux20815_BOOL:: var_is_introduced ;
var bool: aux20816_BOOL:: var_is_introduced ;
var {0,1}: aux20816_INTEGER :: var_is_introduced ;
var bool: aux20817_BOOL:: var_is_introduced ;
var 2..59: aux20818:: var_is_introduced ;
var bool: aux20819_BOOL:: var_is_introduced ;
var bool: aux20820_BOOL:: var_is_introduced ;
var {0,1}: aux20820_INTEGER :: var_is_introduced ;
var bool: aux20821_BOOL:: var_is_introduced ;
var bool: aux20822_BOOL:: var_is_introduced ;
var bool: aux20823_BOOL:: var_is_introduced ;
var 4..61: aux20824:: var_is_introduced ;
var bool: aux20825_BOOL:: var_is_introduced ;
var bool: aux20826_BOOL:: var_is_introduced ;
var bool: aux20827_BOOL:: var_is_introduced ;
var {0,1}: aux20827_INTEGER :: var_is_introduced ;
var bool: aux20828_BOOL:: var_is_introduced ;
var bool: aux20829_BOOL:: var_is_introduced ;
var 4..61: aux20830:: var_is_introduced ;
var bool: aux20831_BOOL:: var_is_introduced ;
var bool: aux20832_BOOL:: var_is_introduced ;
var bool: aux20833_BOOL:: var_is_introduced ;
var {0,1}: aux20833_INTEGER :: var_is_introduced ;
var bool: aux20834_BOOL:: var_is_introduced ;
var bool: aux20835_BOOL:: var_is_introduced ;
var 3..60: aux20836:: var_is_introduced ;
var bool: aux20837_BOOL:: var_is_introduced ;
var bool: aux20838_BOOL:: var_is_introduced ;
var bool: aux20839_BOOL:: var_is_introduced ;
var {0,1}: aux20839_INTEGER :: var_is_introduced ;
var bool: aux20840_BOOL:: var_is_introduced ;
var bool: aux20841_BOOL:: var_is_introduced ;
var 2..59: aux20842:: var_is_introduced ;
var bool: aux20843_BOOL:: var_is_introduced ;
var bool: aux20844_BOOL:: var_is_introduced ;
var bool: aux20845_BOOL:: var_is_introduced ;
var {0,1}: aux20845_INTEGER :: var_is_introduced ;
var bool: aux20846_BOOL:: var_is_introduced ;
var bool: aux20847_BOOL:: var_is_introduced ;
var 3..60: aux20848:: var_is_introduced ;
var bool: aux20849_BOOL:: var_is_introduced ;
var bool: aux20850_BOOL:: var_is_introduced ;
var bool: aux20851_BOOL:: var_is_introduced ;
var {0,1}: aux20851_INTEGER :: var_is_introduced ;
var bool: aux20852_BOOL:: var_is_introduced ;
var bool: aux20853_BOOL:: var_is_introduced ;
var 2..59: aux20854:: var_is_introduced ;
var bool: aux20855_BOOL:: var_is_introduced ;
var bool: aux20856_BOOL:: var_is_introduced ;
var bool: aux20857_BOOL:: var_is_introduced ;
var {0,1}: aux20857_INTEGER :: var_is_introduced ;
var bool: aux20858_BOOL:: var_is_introduced ;
var bool: aux20859_BOOL:: var_is_introduced ;
var 3..60: aux20860:: var_is_introduced ;
var bool: aux20861_BOOL:: var_is_introduced ;
var bool: aux20862_BOOL:: var_is_introduced ;
var bool: aux20863_BOOL:: var_is_introduced ;
var {0,1}: aux20863_INTEGER :: var_is_introduced ;
var bool: aux20864_BOOL:: var_is_introduced ;
var bool: aux20865_BOOL:: var_is_introduced ;
var 2..59: aux20866:: var_is_introduced ;
var bool: aux20867_BOOL:: var_is_introduced ;
var bool: aux20868_BOOL:: var_is_introduced ;
var bool: aux20869_BOOL:: var_is_introduced ;
var {0,1}: aux20869_INTEGER :: var_is_introduced ;
var bool: aux20870_BOOL:: var_is_introduced ;
var bool: aux20871_BOOL:: var_is_introduced ;
var 2..59: aux20872:: var_is_introduced ;
var bool: aux20873_BOOL:: var_is_introduced ;
var bool: aux20874_BOOL:: var_is_introduced ;
var bool: aux20875_BOOL:: var_is_introduced ;
var {0,1}: aux20875_INTEGER :: var_is_introduced ;
var bool: aux20876_BOOL:: var_is_introduced ;
var bool: aux20877_BOOL:: var_is_introduced ;
var 5..62: aux20878:: var_is_introduced ;
var bool: aux20879_BOOL:: var_is_introduced ;
var bool: aux20880_BOOL:: var_is_introduced ;
var bool: aux20881_BOOL:: var_is_introduced ;
var {0,1}: aux20881_INTEGER :: var_is_introduced ;
var bool: aux20882_BOOL:: var_is_introduced ;
var bool: aux20883_BOOL:: var_is_introduced ;
var 3..60: aux20884:: var_is_introduced ;
var bool: aux20885_BOOL:: var_is_introduced ;
var bool: aux20886_BOOL:: var_is_introduced ;
var bool: aux20887_BOOL:: var_is_introduced ;
var {0,1}: aux20887_INTEGER :: var_is_introduced ;
var bool: aux20888_BOOL:: var_is_introduced ;
var bool: aux20889_BOOL:: var_is_introduced ;
var 4..61: aux20890:: var_is_introduced ;
var bool: aux20891_BOOL:: var_is_introduced ;
var bool: aux20892_BOOL:: var_is_introduced ;
var bool: aux20893_BOOL:: var_is_introduced ;
var {0,1}: aux20893_INTEGER :: var_is_introduced ;
var bool: aux20894_BOOL:: var_is_introduced ;
var bool: aux20895_BOOL:: var_is_introduced ;
var 2..59: aux20896:: var_is_introduced ;
var bool: aux20897_BOOL:: var_is_introduced ;
var bool: aux20898_BOOL:: var_is_introduced ;
var bool: aux20899_BOOL:: var_is_introduced ;
var {0,1}: aux20899_INTEGER :: var_is_introduced ;
var bool: aux20900_BOOL:: var_is_introduced ;
var bool: aux20901_BOOL:: var_is_introduced ;
var 1..58: aux20902:: var_is_introduced ;
var bool: aux20903_BOOL:: var_is_introduced ;
var bool: aux20904_BOOL:: var_is_introduced ;
var bool: aux20905_BOOL:: var_is_introduced ;
var {0,1}: aux20905_INTEGER :: var_is_introduced ;
var bool: aux20906_BOOL:: var_is_introduced ;
var bool: aux20907_BOOL:: var_is_introduced ;
var 3..60: aux20908:: var_is_introduced ;
var bool: aux20909_BOOL:: var_is_introduced ;
var bool: aux20910_BOOL:: var_is_introduced ;
var bool: aux20911_BOOL:: var_is_introduced ;
var {0,1}: aux20911_INTEGER :: var_is_introduced ;
var bool: aux20912_BOOL:: var_is_introduced ;
var bool: aux20913_BOOL:: var_is_introduced ;
var 4..61: aux20914:: var_is_introduced ;
var bool: aux20915_BOOL:: var_is_introduced ;
var bool: aux20916_BOOL:: var_is_introduced ;
var bool: aux20917_BOOL:: var_is_introduced ;
var {0,1}: aux20917_INTEGER :: var_is_introduced ;
var bool: aux20918_BOOL:: var_is_introduced ;
var bool: aux20919_BOOL:: var_is_introduced ;
var 1..58: aux20920:: var_is_introduced ;
var bool: aux20921_BOOL:: var_is_introduced ;
var bool: aux20922_BOOL:: var_is_introduced ;
var bool: aux20923_BOOL:: var_is_introduced ;
var {0,1}: aux20923_INTEGER :: var_is_introduced ;
var bool: aux20924_BOOL:: var_is_introduced ;
var bool: aux20925_BOOL:: var_is_introduced ;
var 4..61: aux20926:: var_is_introduced ;
var bool: aux20927_BOOL:: var_is_introduced ;
var bool: aux20928_BOOL:: var_is_introduced ;
var bool: aux20929_BOOL:: var_is_introduced ;
var {0,1}: aux20929_INTEGER :: var_is_introduced ;
var bool: aux20930_BOOL:: var_is_introduced ;
var bool: aux20931_BOOL:: var_is_introduced ;
var 2..59: aux20932:: var_is_introduced ;
var bool: aux20933_BOOL:: var_is_introduced ;
var bool: aux20934_BOOL:: var_is_introduced ;
var bool: aux20935_BOOL:: var_is_introduced ;
var {0,1}: aux20935_INTEGER :: var_is_introduced ;
var bool: aux20936_BOOL:: var_is_introduced ;
var 3..60: aux20937:: var_is_introduced ;
var bool: aux20938_BOOL:: var_is_introduced ;
var bool: aux20939_BOOL:: var_is_introduced ;
var {0,1}: aux20939_INTEGER :: var_is_introduced ;
var bool: aux20940_BOOL:: var_is_introduced ;
var bool: aux20941_BOOL:: var_is_introduced ;
var bool: aux20942_BOOL:: var_is_introduced ;
var 4..61: aux20943:: var_is_introduced ;
var bool: aux20944_BOOL:: var_is_introduced ;
var bool: aux20945_BOOL:: var_is_introduced ;
var bool: aux20946_BOOL:: var_is_introduced ;
var {0,1}: aux20946_INTEGER :: var_is_introduced ;
var bool: aux20947_BOOL:: var_is_introduced ;
var bool: aux20948_BOOL:: var_is_introduced ;
var 4..61: aux20949:: var_is_introduced ;
var bool: aux20950_BOOL:: var_is_introduced ;
var bool: aux20951_BOOL:: var_is_introduced ;
var bool: aux20952_BOOL:: var_is_introduced ;
var {0,1}: aux20952_INTEGER :: var_is_introduced ;
var bool: aux20953_BOOL:: var_is_introduced ;
var bool: aux20954_BOOL:: var_is_introduced ;
var 3..60: aux20955:: var_is_introduced ;
var bool: aux20956_BOOL:: var_is_introduced ;
var bool: aux20957_BOOL:: var_is_introduced ;
var bool: aux20958_BOOL:: var_is_introduced ;
var {0,1}: aux20958_INTEGER :: var_is_introduced ;
var bool: aux20959_BOOL:: var_is_introduced ;
var bool: aux20960_BOOL:: var_is_introduced ;
var 2..59: aux20961:: var_is_introduced ;
var bool: aux20962_BOOL:: var_is_introduced ;
var bool: aux20963_BOOL:: var_is_introduced ;
var bool: aux20964_BOOL:: var_is_introduced ;
var {0,1}: aux20964_INTEGER :: var_is_introduced ;
var bool: aux20965_BOOL:: var_is_introduced ;
var bool: aux20966_BOOL:: var_is_introduced ;
var 2..59: aux20967:: var_is_introduced ;
var bool: aux20968_BOOL:: var_is_introduced ;
var bool: aux20969_BOOL:: var_is_introduced ;
var bool: aux20970_BOOL:: var_is_introduced ;
var {0,1}: aux20970_INTEGER :: var_is_introduced ;
var bool: aux20971_BOOL:: var_is_introduced ;
var bool: aux20972_BOOL:: var_is_introduced ;
var 3..60: aux20973:: var_is_introduced ;
var bool: aux20974_BOOL:: var_is_introduced ;
var bool: aux20975_BOOL:: var_is_introduced ;
var bool: aux20976_BOOL:: var_is_introduced ;
var {0,1}: aux20976_INTEGER :: var_is_introduced ;
var bool: aux20977_BOOL:: var_is_introduced ;
var bool: aux20978_BOOL:: var_is_introduced ;
var 2..59: aux20979:: var_is_introduced ;
var bool: aux20980_BOOL:: var_is_introduced ;
var bool: aux20981_BOOL:: var_is_introduced ;
var bool: aux20982_BOOL:: var_is_introduced ;
var {0,1}: aux20982_INTEGER :: var_is_introduced ;
var bool: aux20983_BOOL:: var_is_introduced ;
var bool: aux20984_BOOL:: var_is_introduced ;
var 2..59: aux20985:: var_is_introduced ;
var bool: aux20986_BOOL:: var_is_introduced ;
var bool: aux20987_BOOL:: var_is_introduced ;
var bool: aux20988_BOOL:: var_is_introduced ;
var {0,1}: aux20988_INTEGER :: var_is_introduced ;
var bool: aux20989_BOOL:: var_is_introduced ;
var bool: aux20990_BOOL:: var_is_introduced ;
var 5..62: aux20991:: var_is_introduced ;
var bool: aux20992_BOOL:: var_is_introduced ;
var bool: aux20993_BOOL:: var_is_introduced ;
var bool: aux20994_BOOL:: var_is_introduced ;
var {0,1}: aux20994_INTEGER :: var_is_introduced ;
var bool: aux20995_BOOL:: var_is_introduced ;
var bool: aux20996_BOOL:: var_is_introduced ;
var 3..60: aux20997:: var_is_introduced ;
var bool: aux20998_BOOL:: var_is_introduced ;
var bool: aux20999_BOOL:: var_is_introduced ;
var bool: aux21000_BOOL:: var_is_introduced ;
var {0,1}: aux21000_INTEGER :: var_is_introduced ;
var bool: aux21001_BOOL:: var_is_introduced ;
var bool: aux21002_BOOL:: var_is_introduced ;
var 4..61: aux21003:: var_is_introduced ;
var bool: aux21004_BOOL:: var_is_introduced ;
var bool: aux21005_BOOL:: var_is_introduced ;
var bool: aux21006_BOOL:: var_is_introduced ;
var {0,1}: aux21006_INTEGER :: var_is_introduced ;
var bool: aux21007_BOOL:: var_is_introduced ;
var bool: aux21008_BOOL:: var_is_introduced ;
var 3..60: aux21009:: var_is_introduced ;
var bool: aux21010_BOOL:: var_is_introduced ;
var bool: aux21011_BOOL:: var_is_introduced ;
var bool: aux21012_BOOL:: var_is_introduced ;
var {0,1}: aux21012_INTEGER :: var_is_introduced ;
var bool: aux21013_BOOL:: var_is_introduced ;
var bool: aux21014_BOOL:: var_is_introduced ;
var 2..59: aux21015:: var_is_introduced ;
var bool: aux21016_BOOL:: var_is_introduced ;
var bool: aux21017_BOOL:: var_is_introduced ;
var bool: aux21018_BOOL:: var_is_introduced ;
var {0,1}: aux21018_INTEGER :: var_is_introduced ;
var bool: aux21019_BOOL:: var_is_introduced ;
var bool: aux21020_BOOL:: var_is_introduced ;
var 1..58: aux21021:: var_is_introduced ;
var bool: aux21022_BOOL:: var_is_introduced ;
var bool: aux21023_BOOL:: var_is_introduced ;
var bool: aux21024_BOOL:: var_is_introduced ;
var {0,1}: aux21024_INTEGER :: var_is_introduced ;
var bool: aux21025_BOOL:: var_is_introduced ;
var bool: aux21026_BOOL:: var_is_introduced ;
var 3..60: aux21027:: var_is_introduced ;
var bool: aux21028_BOOL:: var_is_introduced ;
var bool: aux21029_BOOL:: var_is_introduced ;
var bool: aux21030_BOOL:: var_is_introduced ;
var {0,1}: aux21030_INTEGER :: var_is_introduced ;
var bool: aux21031_BOOL:: var_is_introduced ;
var bool: aux21032_BOOL:: var_is_introduced ;
var 4..61: aux21033:: var_is_introduced ;
var bool: aux21034_BOOL:: var_is_introduced ;
var bool: aux21035_BOOL:: var_is_introduced ;
var bool: aux21036_BOOL:: var_is_introduced ;
var {0,1}: aux21036_INTEGER :: var_is_introduced ;
var bool: aux21037_BOOL:: var_is_introduced ;
var bool: aux21038_BOOL:: var_is_introduced ;
var 1..58: aux21039:: var_is_introduced ;
var bool: aux21040_BOOL:: var_is_introduced ;
var bool: aux21041_BOOL:: var_is_introduced ;
var bool: aux21042_BOOL:: var_is_introduced ;
var {0,1}: aux21042_INTEGER :: var_is_introduced ;
var bool: aux21043_BOOL:: var_is_introduced ;
var bool: aux21044_BOOL:: var_is_introduced ;
var 4..61: aux21045:: var_is_introduced ;
var bool: aux21046_BOOL:: var_is_introduced ;
var bool: aux21047_BOOL:: var_is_introduced ;
var bool: aux21048_BOOL:: var_is_introduced ;
var {0,1}: aux21048_INTEGER :: var_is_introduced ;
var bool: aux21049_BOOL:: var_is_introduced ;
var bool: aux21050_BOOL:: var_is_introduced ;
var 2..59: aux21051:: var_is_introduced ;
var bool: aux21052_BOOL:: var_is_introduced ;
var bool: aux21053_BOOL:: var_is_introduced ;
var bool: aux21054_BOOL:: var_is_introduced ;
var {0,1}: aux21054_INTEGER :: var_is_introduced ;
var bool: aux21055_BOOL:: var_is_introduced ;
var 3..60: aux21056:: var_is_introduced ;
var bool: aux21057_BOOL:: var_is_introduced ;
var bool: aux21058_BOOL:: var_is_introduced ;
var {0,1}: aux21058_INTEGER :: var_is_introduced ;
var bool: aux21059_BOOL:: var_is_introduced ;
var bool: aux21060_BOOL:: var_is_introduced ;
var bool: aux21061_BOOL:: var_is_introduced ;
var 4..61: aux21062:: var_is_introduced ;
var bool: aux21063_BOOL:: var_is_introduced ;
var bool: aux21064_BOOL:: var_is_introduced ;
var bool: aux21065_BOOL:: var_is_introduced ;
var {0,1}: aux21065_INTEGER :: var_is_introduced ;
var bool: aux21066_BOOL:: var_is_introduced ;
var bool: aux21067_BOOL:: var_is_introduced ;
var 4..61: aux21068:: var_is_introduced ;
var bool: aux21069_BOOL:: var_is_introduced ;
var bool: aux21070_BOOL:: var_is_introduced ;
var bool: aux21071_BOOL:: var_is_introduced ;
var {0,1}: aux21071_INTEGER :: var_is_introduced ;
var bool: aux21072_BOOL:: var_is_introduced ;
var bool: aux21073_BOOL:: var_is_introduced ;
var 3..60: aux21074:: var_is_introduced ;
var bool: aux21075_BOOL:: var_is_introduced ;
var bool: aux21076_BOOL:: var_is_introduced ;
var bool: aux21077_BOOL:: var_is_introduced ;
var {0,1}: aux21077_INTEGER :: var_is_introduced ;
var bool: aux21078_BOOL:: var_is_introduced ;
var bool: aux21079_BOOL:: var_is_introduced ;
var 2..59: aux21080:: var_is_introduced ;
var bool: aux21081_BOOL:: var_is_introduced ;
var bool: aux21082_BOOL:: var_is_introduced ;
var bool: aux21083_BOOL:: var_is_introduced ;
var {0,1}: aux21083_INTEGER :: var_is_introduced ;
var bool: aux21084_BOOL:: var_is_introduced ;
var bool: aux21085_BOOL:: var_is_introduced ;
var 3..60: aux21086:: var_is_introduced ;
var bool: aux21087_BOOL:: var_is_introduced ;
var bool: aux21088_BOOL:: var_is_introduced ;
var bool: aux21089_BOOL:: var_is_introduced ;
var {0,1}: aux21089_INTEGER :: var_is_introduced ;
var bool: aux21090_BOOL:: var_is_introduced ;
var bool: aux21091_BOOL:: var_is_introduced ;
var 2..59: aux21092:: var_is_introduced ;
var bool: aux21093_BOOL:: var_is_introduced ;
var bool: aux21094_BOOL:: var_is_introduced ;
var bool: aux21095_BOOL:: var_is_introduced ;
var {0,1}: aux21095_INTEGER :: var_is_introduced ;
var bool: aux21096_BOOL:: var_is_introduced ;
var bool: aux21097_BOOL:: var_is_introduced ;
var 2..59: aux21098:: var_is_introduced ;
var bool: aux21099_BOOL:: var_is_introduced ;
var bool: aux21100_BOOL:: var_is_introduced ;
var bool: aux21101_BOOL:: var_is_introduced ;
var {0,1}: aux21101_INTEGER :: var_is_introduced ;
var bool: aux21102_BOOL:: var_is_introduced ;
var bool: aux21103_BOOL:: var_is_introduced ;
var 2..59: aux21104:: var_is_introduced ;
var bool: aux21105_BOOL:: var_is_introduced ;
var bool: aux21106_BOOL:: var_is_introduced ;
var bool: aux21107_BOOL:: var_is_introduced ;
var {0,1}: aux21107_INTEGER :: var_is_introduced ;
var bool: aux21108_BOOL:: var_is_introduced ;
var bool: aux21109_BOOL:: var_is_introduced ;
var 5..62: aux21110:: var_is_introduced ;
var bool: aux21111_BOOL:: var_is_introduced ;
var bool: aux21112_BOOL:: var_is_introduced ;
var bool: aux21113_BOOL:: var_is_introduced ;
var {0,1}: aux21113_INTEGER :: var_is_introduced ;
var bool: aux21114_BOOL:: var_is_introduced ;
var bool: aux21115_BOOL:: var_is_introduced ;
var 3..60: aux21116:: var_is_introduced ;
var bool: aux21117_BOOL:: var_is_introduced ;
var bool: aux21118_BOOL:: var_is_introduced ;
var bool: aux21119_BOOL:: var_is_introduced ;
var {0,1}: aux21119_INTEGER :: var_is_introduced ;
var bool: aux21120_BOOL:: var_is_introduced ;
var bool: aux21121_BOOL:: var_is_introduced ;
var 4..61: aux21122:: var_is_introduced ;
var bool: aux21123_BOOL:: var_is_introduced ;
var bool: aux21124_BOOL:: var_is_introduced ;
var bool: aux21125_BOOL:: var_is_introduced ;
var {0,1}: aux21125_INTEGER :: var_is_introduced ;
var bool: aux21126_BOOL:: var_is_introduced ;
var bool: aux21127_BOOL:: var_is_introduced ;
var 3..60: aux21128:: var_is_introduced ;
var bool: aux21129_BOOL:: var_is_introduced ;
var bool: aux21130_BOOL:: var_is_introduced ;
var bool: aux21131_BOOL:: var_is_introduced ;
var {0,1}: aux21131_INTEGER :: var_is_introduced ;
var bool: aux21132_BOOL:: var_is_introduced ;
var bool: aux21133_BOOL:: var_is_introduced ;
var 2..59: aux21134:: var_is_introduced ;
var bool: aux21135_BOOL:: var_is_introduced ;
var bool: aux21136_BOOL:: var_is_introduced ;
var bool: aux21137_BOOL:: var_is_introduced ;
var {0,1}: aux21137_INTEGER :: var_is_introduced ;
var bool: aux21138_BOOL:: var_is_introduced ;
var bool: aux21139_BOOL:: var_is_introduced ;
var 1..58: aux21140:: var_is_introduced ;
var bool: aux21141_BOOL:: var_is_introduced ;
var bool: aux21142_BOOL:: var_is_introduced ;
var bool: aux21143_BOOL:: var_is_introduced ;
var {0,1}: aux21143_INTEGER :: var_is_introduced ;
var bool: aux21144_BOOL:: var_is_introduced ;
var bool: aux21145_BOOL:: var_is_introduced ;
var 3..60: aux21146:: var_is_introduced ;
var bool: aux21147_BOOL:: var_is_introduced ;
var bool: aux21148_BOOL:: var_is_introduced ;
var bool: aux21149_BOOL:: var_is_introduced ;
var {0,1}: aux21149_INTEGER :: var_is_introduced ;
var bool: aux21150_BOOL:: var_is_introduced ;
var bool: aux21151_BOOL:: var_is_introduced ;
var 4..61: aux21152:: var_is_introduced ;
var bool: aux21153_BOOL:: var_is_introduced ;
var bool: aux21154_BOOL:: var_is_introduced ;
var bool: aux21155_BOOL:: var_is_introduced ;
var {0,1}: aux21155_INTEGER :: var_is_introduced ;
var bool: aux21156_BOOL:: var_is_introduced ;
var bool: aux21157_BOOL:: var_is_introduced ;
var 1..58: aux21158:: var_is_introduced ;
var bool: aux21159_BOOL:: var_is_introduced ;
var bool: aux21160_BOOL:: var_is_introduced ;
var bool: aux21161_BOOL:: var_is_introduced ;
var {0,1}: aux21161_INTEGER :: var_is_introduced ;
var bool: aux21162_BOOL:: var_is_introduced ;
var bool: aux21163_BOOL:: var_is_introduced ;
var 4..61: aux21164:: var_is_introduced ;
var bool: aux21165_BOOL:: var_is_introduced ;
var bool: aux21166_BOOL:: var_is_introduced ;
var bool: aux21167_BOOL:: var_is_introduced ;
var {0,1}: aux21167_INTEGER :: var_is_introduced ;
var bool: aux21168_BOOL:: var_is_introduced ;
var bool: aux21169_BOOL:: var_is_introduced ;
var 2..59: aux21170:: var_is_introduced ;
var bool: aux21171_BOOL:: var_is_introduced ;
var bool: aux21172_BOOL:: var_is_introduced ;
var bool: aux21173_BOOL:: var_is_introduced ;
var {0,1}: aux21173_INTEGER :: var_is_introduced ;
var bool: aux21174_BOOL:: var_is_introduced ;
var 3..60: aux21175:: var_is_introduced ;
var bool: aux21176_BOOL:: var_is_introduced ;
var bool: aux21177_BOOL:: var_is_introduced ;
var {0,1}: aux21177_INTEGER :: var_is_introduced ;
var bool: aux21178_BOOL:: var_is_introduced ;
var bool: aux21179_BOOL:: var_is_introduced ;
var bool: aux21180_BOOL:: var_is_introduced ;
var 4..61: aux21181:: var_is_introduced ;
var bool: aux21182_BOOL:: var_is_introduced ;
var bool: aux21183_BOOL:: var_is_introduced ;
var bool: aux21184_BOOL:: var_is_introduced ;
var {0,1}: aux21184_INTEGER :: var_is_introduced ;
var bool: aux21185_BOOL:: var_is_introduced ;
var bool: aux21186_BOOL:: var_is_introduced ;
var 3..60: aux21187:: var_is_introduced ;
var bool: aux21188_BOOL:: var_is_introduced ;
var bool: aux21189_BOOL:: var_is_introduced ;
var bool: aux21190_BOOL:: var_is_introduced ;
var {0,1}: aux21190_INTEGER :: var_is_introduced ;
var bool: aux21191_BOOL:: var_is_introduced ;
var bool: aux21192_BOOL:: var_is_introduced ;
var 2..59: aux21193:: var_is_introduced ;
var bool: aux21194_BOOL:: var_is_introduced ;
var bool: aux21195_BOOL:: var_is_introduced ;
var bool: aux21196_BOOL:: var_is_introduced ;
var {0,1}: aux21196_INTEGER :: var_is_introduced ;
var bool: aux21197_BOOL:: var_is_introduced ;
var bool: aux21198_BOOL:: var_is_introduced ;
var 3..60: aux21199:: var_is_introduced ;
var bool: aux21200_BOOL:: var_is_introduced ;
var bool: aux21201_BOOL:: var_is_introduced ;
var bool: aux21202_BOOL:: var_is_introduced ;
var {0,1}: aux21202_INTEGER :: var_is_introduced ;
var bool: aux21203_BOOL:: var_is_introduced ;
var bool: aux21204_BOOL:: var_is_introduced ;
var 2..59: aux21205:: var_is_introduced ;
var bool: aux21206_BOOL:: var_is_introduced ;
var bool: aux21207_BOOL:: var_is_introduced ;
var bool: aux21208_BOOL:: var_is_introduced ;
var {0,1}: aux21208_INTEGER :: var_is_introduced ;
var bool: aux21209_BOOL:: var_is_introduced ;
var bool: aux21210_BOOL:: var_is_introduced ;
var 3..60: aux21211:: var_is_introduced ;
var bool: aux21212_BOOL:: var_is_introduced ;
var bool: aux21213_BOOL:: var_is_introduced ;
var bool: aux21214_BOOL:: var_is_introduced ;
var {0,1}: aux21214_INTEGER :: var_is_introduced ;
var bool: aux21215_BOOL:: var_is_introduced ;
var bool: aux21216_BOOL:: var_is_introduced ;
var 2..59: aux21217:: var_is_introduced ;
var bool: aux21218_BOOL:: var_is_introduced ;
var bool: aux21219_BOOL:: var_is_introduced ;
var bool: aux21220_BOOL:: var_is_introduced ;
var {0,1}: aux21220_INTEGER :: var_is_introduced ;
var bool: aux21221_BOOL:: var_is_introduced ;
var bool: aux21222_BOOL:: var_is_introduced ;
var 2..59: aux21223:: var_is_introduced ;
var bool: aux21224_BOOL:: var_is_introduced ;
var bool: aux21225_BOOL:: var_is_introduced ;
var bool: aux21226_BOOL:: var_is_introduced ;
var {0,1}: aux21226_INTEGER :: var_is_introduced ;
var bool: aux21227_BOOL:: var_is_introduced ;
var bool: aux21228_BOOL:: var_is_introduced ;
var 5..62: aux21229:: var_is_introduced ;
var bool: aux21230_BOOL:: var_is_introduced ;
var bool: aux21231_BOOL:: var_is_introduced ;
var bool: aux21232_BOOL:: var_is_introduced ;
var {0,1}: aux21232_INTEGER :: var_is_introduced ;
var bool: aux21233_BOOL:: var_is_introduced ;
var bool: aux21234_BOOL:: var_is_introduced ;
var 3..60: aux21235:: var_is_introduced ;
var bool: aux21236_BOOL:: var_is_introduced ;
var bool: aux21237_BOOL:: var_is_introduced ;
var bool: aux21238_BOOL:: var_is_introduced ;
var {0,1}: aux21238_INTEGER :: var_is_introduced ;
var bool: aux21239_BOOL:: var_is_introduced ;
var bool: aux21240_BOOL:: var_is_introduced ;
var 4..61: aux21241:: var_is_introduced ;
var bool: aux21242_BOOL:: var_is_introduced ;
var bool: aux21243_BOOL:: var_is_introduced ;
var bool: aux21244_BOOL:: var_is_introduced ;
var {0,1}: aux21244_INTEGER :: var_is_introduced ;
var bool: aux21245_BOOL:: var_is_introduced ;
var bool: aux21246_BOOL:: var_is_introduced ;
var 3..60: aux21247:: var_is_introduced ;
var bool: aux21248_BOOL:: var_is_introduced ;
var bool: aux21249_BOOL:: var_is_introduced ;
var bool: aux21250_BOOL:: var_is_introduced ;
var {0,1}: aux21250_INTEGER :: var_is_introduced ;
var bool: aux21251_BOOL:: var_is_introduced ;
var bool: aux21252_BOOL:: var_is_introduced ;
var 2..59: aux21253:: var_is_introduced ;
var bool: aux21254_BOOL:: var_is_introduced ;
var bool: aux21255_BOOL:: var_is_introduced ;
var bool: aux21256_BOOL:: var_is_introduced ;
var {0,1}: aux21256_INTEGER :: var_is_introduced ;
var bool: aux21257_BOOL:: var_is_introduced ;
var bool: aux21258_BOOL:: var_is_introduced ;
var 1..58: aux21259:: var_is_introduced ;
var bool: aux21260_BOOL:: var_is_introduced ;
var bool: aux21261_BOOL:: var_is_introduced ;
var bool: aux21262_BOOL:: var_is_introduced ;
var {0,1}: aux21262_INTEGER :: var_is_introduced ;
var bool: aux21263_BOOL:: var_is_introduced ;
var bool: aux21264_BOOL:: var_is_introduced ;
var 3..60: aux21265:: var_is_introduced ;
var bool: aux21266_BOOL:: var_is_introduced ;
var bool: aux21267_BOOL:: var_is_introduced ;
var bool: aux21268_BOOL:: var_is_introduced ;
var {0,1}: aux21268_INTEGER :: var_is_introduced ;
var bool: aux21269_BOOL:: var_is_introduced ;
var bool: aux21270_BOOL:: var_is_introduced ;
var 4..61: aux21271:: var_is_introduced ;
var bool: aux21272_BOOL:: var_is_introduced ;
var bool: aux21273_BOOL:: var_is_introduced ;
var bool: aux21274_BOOL:: var_is_introduced ;
var {0,1}: aux21274_INTEGER :: var_is_introduced ;
var bool: aux21275_BOOL:: var_is_introduced ;
var bool: aux21276_BOOL:: var_is_introduced ;
var 1..58: aux21277:: var_is_introduced ;
var bool: aux21278_BOOL:: var_is_introduced ;
var bool: aux21279_BOOL:: var_is_introduced ;
var bool: aux21280_BOOL:: var_is_introduced ;
var {0,1}: aux21280_INTEGER :: var_is_introduced ;
var bool: aux21281_BOOL:: var_is_introduced ;
var bool: aux21282_BOOL:: var_is_introduced ;
var 4..61: aux21283:: var_is_introduced ;
var bool: aux21284_BOOL:: var_is_introduced ;
var bool: aux21285_BOOL:: var_is_introduced ;
var bool: aux21286_BOOL:: var_is_introduced ;
var {0,1}: aux21286_INTEGER :: var_is_introduced ;
var bool: aux21287_BOOL:: var_is_introduced ;
var bool: aux21288_BOOL:: var_is_introduced ;
var 2..59: aux21289:: var_is_introduced ;
var bool: aux21290_BOOL:: var_is_introduced ;
var bool: aux21291_BOOL:: var_is_introduced ;
var bool: aux21292_BOOL:: var_is_introduced ;
var {0,1}: aux21292_INTEGER :: var_is_introduced ;
var bool: aux21293_BOOL:: var_is_introduced ;
var 4..61: aux21294:: var_is_introduced ;
var bool: aux21295_BOOL:: var_is_introduced ;
var bool: aux21296_BOOL:: var_is_introduced ;
var {0,1}: aux21296_INTEGER :: var_is_introduced ;
var bool: aux21297_BOOL:: var_is_introduced ;
var bool: aux21298_BOOL:: var_is_introduced ;
var bool: aux21299_BOOL:: var_is_introduced ;
var 4..61: aux21300:: var_is_introduced ;
var bool: aux21301_BOOL:: var_is_introduced ;
var bool: aux21302_BOOL:: var_is_introduced ;
var bool: aux21303_BOOL:: var_is_introduced ;
var {0,1}: aux21303_INTEGER :: var_is_introduced ;
var bool: aux21304_BOOL:: var_is_introduced ;
var bool: aux21305_BOOL:: var_is_introduced ;
var 4..61: aux21306:: var_is_introduced ;
var bool: aux21307_BOOL:: var_is_introduced ;
var bool: aux21308_BOOL:: var_is_introduced ;
var bool: aux21309_BOOL:: var_is_introduced ;
var {0,1}: aux21309_INTEGER :: var_is_introduced ;
var bool: aux21310_BOOL:: var_is_introduced ;
var bool: aux21311_BOOL:: var_is_introduced ;
var 3..60: aux21312:: var_is_introduced ;
var bool: aux21313_BOOL:: var_is_introduced ;
var bool: aux21314_BOOL:: var_is_introduced ;
var bool: aux21315_BOOL:: var_is_introduced ;
var {0,1}: aux21315_INTEGER :: var_is_introduced ;
var bool: aux21316_BOOL:: var_is_introduced ;
var bool: aux21317_BOOL:: var_is_introduced ;
var 2..59: aux21318:: var_is_introduced ;
var bool: aux21319_BOOL:: var_is_introduced ;
var bool: aux21320_BOOL:: var_is_introduced ;
var bool: aux21321_BOOL:: var_is_introduced ;
var {0,1}: aux21321_INTEGER :: var_is_introduced ;
var bool: aux21322_BOOL:: var_is_introduced ;
var bool: aux21323_BOOL:: var_is_introduced ;
var 3..60: aux21324:: var_is_introduced ;
var bool: aux21325_BOOL:: var_is_introduced ;
var bool: aux21326_BOOL:: var_is_introduced ;
var bool: aux21327_BOOL:: var_is_introduced ;
var {0,1}: aux21327_INTEGER :: var_is_introduced ;
var bool: aux21328_BOOL:: var_is_introduced ;
var bool: aux21329_BOOL:: var_is_introduced ;
var 2..59: aux21330:: var_is_introduced ;
var bool: aux21331_BOOL:: var_is_introduced ;
var bool: aux21332_BOOL:: var_is_introduced ;
var bool: aux21333_BOOL:: var_is_introduced ;
var {0,1}: aux21333_INTEGER :: var_is_introduced ;
var bool: aux21334_BOOL:: var_is_introduced ;
var bool: aux21335_BOOL:: var_is_introduced ;
var 3..60: aux21336:: var_is_introduced ;
var bool: aux21337_BOOL:: var_is_introduced ;
var bool: aux21338_BOOL:: var_is_introduced ;
var bool: aux21339_BOOL:: var_is_introduced ;
var {0,1}: aux21339_INTEGER :: var_is_introduced ;
var bool: aux21340_BOOL:: var_is_introduced ;
var bool: aux21341_BOOL:: var_is_introduced ;
var 2..59: aux21342:: var_is_introduced ;
var bool: aux21343_BOOL:: var_is_introduced ;
var bool: aux21344_BOOL:: var_is_introduced ;
var bool: aux21345_BOOL:: var_is_introduced ;
var {0,1}: aux21345_INTEGER :: var_is_introduced ;
var bool: aux21346_BOOL:: var_is_introduced ;
var bool: aux21347_BOOL:: var_is_introduced ;
var 2..59: aux21348:: var_is_introduced ;
var bool: aux21349_BOOL:: var_is_introduced ;
var bool: aux21350_BOOL:: var_is_introduced ;
var bool: aux21351_BOOL:: var_is_introduced ;
var {0,1}: aux21351_INTEGER :: var_is_introduced ;
var bool: aux21352_BOOL:: var_is_introduced ;
var bool: aux21353_BOOL:: var_is_introduced ;
var 5..62: aux21354:: var_is_introduced ;
var bool: aux21355_BOOL:: var_is_introduced ;
var bool: aux21356_BOOL:: var_is_introduced ;
var bool: aux21357_BOOL:: var_is_introduced ;
var {0,1}: aux21357_INTEGER :: var_is_introduced ;
var bool: aux21358_BOOL:: var_is_introduced ;
var bool: aux21359_BOOL:: var_is_introduced ;
var 3..60: aux21360:: var_is_introduced ;
var bool: aux21361_BOOL:: var_is_introduced ;
var bool: aux21362_BOOL:: var_is_introduced ;
var bool: aux21363_BOOL:: var_is_introduced ;
var {0,1}: aux21363_INTEGER :: var_is_introduced ;
var bool: aux21364_BOOL:: var_is_introduced ;
var bool: aux21365_BOOL:: var_is_introduced ;
var 4..61: aux21366:: var_is_introduced ;
var bool: aux21367_BOOL:: var_is_introduced ;
var bool: aux21368_BOOL:: var_is_introduced ;
var bool: aux21369_BOOL:: var_is_introduced ;
var {0,1}: aux21369_INTEGER :: var_is_introduced ;
var bool: aux21370_BOOL:: var_is_introduced ;
var bool: aux21371_BOOL:: var_is_introduced ;
var 3..60: aux21372:: var_is_introduced ;
var bool: aux21373_BOOL:: var_is_introduced ;
var bool: aux21374_BOOL:: var_is_introduced ;
var bool: aux21375_BOOL:: var_is_introduced ;
var {0,1}: aux21375_INTEGER :: var_is_introduced ;
var bool: aux21376_BOOL:: var_is_introduced ;
var bool: aux21377_BOOL:: var_is_introduced ;
var 2..59: aux21378:: var_is_introduced ;
var bool: aux21379_BOOL:: var_is_introduced ;
var bool: aux21380_BOOL:: var_is_introduced ;
var bool: aux21381_BOOL:: var_is_introduced ;
var {0,1}: aux21381_INTEGER :: var_is_introduced ;
var bool: aux21382_BOOL:: var_is_introduced ;
var bool: aux21383_BOOL:: var_is_introduced ;
var 1..58: aux21384:: var_is_introduced ;
var bool: aux21385_BOOL:: var_is_introduced ;
var bool: aux21386_BOOL:: var_is_introduced ;
var bool: aux21387_BOOL:: var_is_introduced ;
var {0,1}: aux21387_INTEGER :: var_is_introduced ;
var bool: aux21388_BOOL:: var_is_introduced ;
var bool: aux21389_BOOL:: var_is_introduced ;
var 4..61: aux21390:: var_is_introduced ;
var bool: aux21391_BOOL:: var_is_introduced ;
var bool: aux21392_BOOL:: var_is_introduced ;
var bool: aux21393_BOOL:: var_is_introduced ;
var {0,1}: aux21393_INTEGER :: var_is_introduced ;
var bool: aux21394_BOOL:: var_is_introduced ;
var bool: aux21395_BOOL:: var_is_introduced ;
var 1..58: aux21396:: var_is_introduced ;
var bool: aux21397_BOOL:: var_is_introduced ;
var bool: aux21398_BOOL:: var_is_introduced ;
var bool: aux21399_BOOL:: var_is_introduced ;
var {0,1}: aux21399_INTEGER :: var_is_introduced ;
var bool: aux21400_BOOL:: var_is_introduced ;
var bool: aux21401_BOOL:: var_is_introduced ;
var 4..61: aux21402:: var_is_introduced ;
var bool: aux21403_BOOL:: var_is_introduced ;
var bool: aux21404_BOOL:: var_is_introduced ;
var bool: aux21405_BOOL:: var_is_introduced ;
var {0,1}: aux21405_INTEGER :: var_is_introduced ;
var bool: aux21406_BOOL:: var_is_introduced ;
var bool: aux21407_BOOL:: var_is_introduced ;
var 2..59: aux21408:: var_is_introduced ;
var bool: aux21409_BOOL:: var_is_introduced ;
var bool: aux21410_BOOL:: var_is_introduced ;
var bool: aux21411_BOOL:: var_is_introduced ;
var {0,1}: aux21411_INTEGER :: var_is_introduced ;
var bool: aux21412_BOOL:: var_is_introduced ;
var 3..60: aux21413:: var_is_introduced ;
var bool: aux21414_BOOL:: var_is_introduced ;
var bool: aux21415_BOOL:: var_is_introduced ;
var {0,1}: aux21415_INTEGER :: var_is_introduced ;
var bool: aux21416_BOOL:: var_is_introduced ;
var bool: aux21417_BOOL:: var_is_introduced ;
var bool: aux21418_BOOL:: var_is_introduced ;
var 4..61: aux21419:: var_is_introduced ;
var bool: aux21420_BOOL:: var_is_introduced ;
var bool: aux21421_BOOL:: var_is_introduced ;
var bool: aux21422_BOOL:: var_is_introduced ;
var {0,1}: aux21422_INTEGER :: var_is_introduced ;
var bool: aux21423_BOOL:: var_is_introduced ;
var bool: aux21424_BOOL:: var_is_introduced ;
var 4..61: aux21425:: var_is_introduced ;
var bool: aux21426_BOOL:: var_is_introduced ;
var bool: aux21427_BOOL:: var_is_introduced ;
var bool: aux21428_BOOL:: var_is_introduced ;
var {0,1}: aux21428_INTEGER :: var_is_introduced ;
var bool: aux21429_BOOL:: var_is_introduced ;
var bool: aux21430_BOOL:: var_is_introduced ;
var 2..59: aux21431:: var_is_introduced ;
var bool: aux21432_BOOL:: var_is_introduced ;
var bool: aux21433_BOOL:: var_is_introduced ;
var bool: aux21434_BOOL:: var_is_introduced ;
var {0,1}: aux21434_INTEGER :: var_is_introduced ;
var bool: aux21435_BOOL:: var_is_introduced ;
var bool: aux21436_BOOL:: var_is_introduced ;
var 3..60: aux21437:: var_is_introduced ;
var bool: aux21438_BOOL:: var_is_introduced ;
var bool: aux21439_BOOL:: var_is_introduced ;
var bool: aux21440_BOOL:: var_is_introduced ;
var {0,1}: aux21440_INTEGER :: var_is_introduced ;
var bool: aux21441_BOOL:: var_is_introduced ;
var bool: aux21442_BOOL:: var_is_introduced ;
var 2..59: aux21443:: var_is_introduced ;
var bool: aux21444_BOOL:: var_is_introduced ;
var bool: aux21445_BOOL:: var_is_introduced ;
var bool: aux21446_BOOL:: var_is_introduced ;
var {0,1}: aux21446_INTEGER :: var_is_introduced ;
var bool: aux21447_BOOL:: var_is_introduced ;
var bool: aux21448_BOOL:: var_is_introduced ;
var 3..60: aux21449:: var_is_introduced ;
var bool: aux21450_BOOL:: var_is_introduced ;
var bool: aux21451_BOOL:: var_is_introduced ;
var bool: aux21452_BOOL:: var_is_introduced ;
var {0,1}: aux21452_INTEGER :: var_is_introduced ;
var bool: aux21453_BOOL:: var_is_introduced ;
var bool: aux21454_BOOL:: var_is_introduced ;
var 2..59: aux21455:: var_is_introduced ;
var bool: aux21456_BOOL:: var_is_introduced ;
var bool: aux21457_BOOL:: var_is_introduced ;
var bool: aux21458_BOOL:: var_is_introduced ;
var {0,1}: aux21458_INTEGER :: var_is_introduced ;
var bool: aux21459_BOOL:: var_is_introduced ;
var bool: aux21460_BOOL:: var_is_introduced ;
var 2..59: aux21461:: var_is_introduced ;
var bool: aux21462_BOOL:: var_is_introduced ;
var bool: aux21463_BOOL:: var_is_introduced ;
var bool: aux21464_BOOL:: var_is_introduced ;
var {0,1}: aux21464_INTEGER :: var_is_introduced ;
var bool: aux21465_BOOL:: var_is_introduced ;
var bool: aux21466_BOOL:: var_is_introduced ;
var 5..62: aux21467:: var_is_introduced ;
var bool: aux21468_BOOL:: var_is_introduced ;
var bool: aux21469_BOOL:: var_is_introduced ;
var bool: aux21470_BOOL:: var_is_introduced ;
var {0,1}: aux21470_INTEGER :: var_is_introduced ;
var bool: aux21471_BOOL:: var_is_introduced ;
var bool: aux21472_BOOL:: var_is_introduced ;
var 3..60: aux21473:: var_is_introduced ;
var bool: aux21474_BOOL:: var_is_introduced ;
var bool: aux21475_BOOL:: var_is_introduced ;
var bool: aux21476_BOOL:: var_is_introduced ;
var {0,1}: aux21476_INTEGER :: var_is_introduced ;
var bool: aux21477_BOOL:: var_is_introduced ;
var bool: aux21478_BOOL:: var_is_introduced ;
var 4..61: aux21479:: var_is_introduced ;
var bool: aux21480_BOOL:: var_is_introduced ;
var bool: aux21481_BOOL:: var_is_introduced ;
var bool: aux21482_BOOL:: var_is_introduced ;
var {0,1}: aux21482_INTEGER :: var_is_introduced ;
var bool: aux21483_BOOL:: var_is_introduced ;
var bool: aux21484_BOOL:: var_is_introduced ;
var 3..60: aux21485:: var_is_introduced ;
var bool: aux21486_BOOL:: var_is_introduced ;
var bool: aux21487_BOOL:: var_is_introduced ;
var bool: aux21488_BOOL:: var_is_introduced ;
var {0,1}: aux21488_INTEGER :: var_is_introduced ;
var bool: aux21489_BOOL:: var_is_introduced ;
var bool: aux21490_BOOL:: var_is_introduced ;
var 2..59: aux21491:: var_is_introduced ;
var bool: aux21492_BOOL:: var_is_introduced ;
var bool: aux21493_BOOL:: var_is_introduced ;
var bool: aux21494_BOOL:: var_is_introduced ;
var {0,1}: aux21494_INTEGER :: var_is_introduced ;
var bool: aux21495_BOOL:: var_is_introduced ;
var bool: aux21496_BOOL:: var_is_introduced ;
var 1..58: aux21497:: var_is_introduced ;
var bool: aux21498_BOOL:: var_is_introduced ;
var bool: aux21499_BOOL:: var_is_introduced ;
var bool: aux21500_BOOL:: var_is_introduced ;
var {0,1}: aux21500_INTEGER :: var_is_introduced ;
var bool: aux21501_BOOL:: var_is_introduced ;
var bool: aux21502_BOOL:: var_is_introduced ;
var 3..60: aux21503:: var_is_introduced ;
var bool: aux21504_BOOL:: var_is_introduced ;
var bool: aux21505_BOOL:: var_is_introduced ;
var bool: aux21506_BOOL:: var_is_introduced ;
var {0,1}: aux21506_INTEGER :: var_is_introduced ;
var bool: aux21507_BOOL:: var_is_introduced ;
var bool: aux21508_BOOL:: var_is_introduced ;
var 4..61: aux21509:: var_is_introduced ;
var bool: aux21510_BOOL:: var_is_introduced ;
var bool: aux21511_BOOL:: var_is_introduced ;
var bool: aux21512_BOOL:: var_is_introduced ;
var {0,1}: aux21512_INTEGER :: var_is_introduced ;
var bool: aux21513_BOOL:: var_is_introduced ;
var bool: aux21514_BOOL:: var_is_introduced ;
var 1..58: aux21515:: var_is_introduced ;
var bool: aux21516_BOOL:: var_is_introduced ;
var bool: aux21517_BOOL:: var_is_introduced ;
var bool: aux21518_BOOL:: var_is_introduced ;
var {0,1}: aux21518_INTEGER :: var_is_introduced ;
var bool: aux21519_BOOL:: var_is_introduced ;
var bool: aux21520_BOOL:: var_is_introduced ;
var 4..61: aux21521:: var_is_introduced ;
var bool: aux21522_BOOL:: var_is_introduced ;
var bool: aux21523_BOOL:: var_is_introduced ;
var bool: aux21524_BOOL:: var_is_introduced ;
var {0,1}: aux21524_INTEGER :: var_is_introduced ;
var bool: aux21525_BOOL:: var_is_introduced ;
var bool: aux21526_BOOL:: var_is_introduced ;
var 2..59: aux21527:: var_is_introduced ;
var bool: aux21528_BOOL:: var_is_introduced ;
var bool: aux21529_BOOL:: var_is_introduced ;
var bool: aux21530_BOOL:: var_is_introduced ;
var {0,1}: aux21530_INTEGER :: var_is_introduced ;
var bool: aux21531_BOOL:: var_is_introduced ;
var 3..60: aux21532:: var_is_introduced ;
var bool: aux21533_BOOL:: var_is_introduced ;
var bool: aux21534_BOOL:: var_is_introduced ;
var {0,1}: aux21534_INTEGER :: var_is_introduced ;
var bool: aux21535_BOOL:: var_is_introduced ;
var bool: aux21536_BOOL:: var_is_introduced ;
var bool: aux21537_BOOL:: var_is_introduced ;
var 4..61: aux21538:: var_is_introduced ;
var bool: aux21539_BOOL:: var_is_introduced ;
var bool: aux21540_BOOL:: var_is_introduced ;
var bool: aux21541_BOOL:: var_is_introduced ;
var {0,1}: aux21541_INTEGER :: var_is_introduced ;
var bool: aux21542_BOOL:: var_is_introduced ;
var bool: aux21543_BOOL:: var_is_introduced ;
var 4..61: aux21544:: var_is_introduced ;
var bool: aux21545_BOOL:: var_is_introduced ;
var bool: aux21546_BOOL:: var_is_introduced ;
var bool: aux21547_BOOL:: var_is_introduced ;
var {0,1}: aux21547_INTEGER :: var_is_introduced ;
var bool: aux21548_BOOL:: var_is_introduced ;
var bool: aux21549_BOOL:: var_is_introduced ;
var 3..60: aux21550:: var_is_introduced ;
var bool: aux21551_BOOL:: var_is_introduced ;
var bool: aux21552_BOOL:: var_is_introduced ;
var bool: aux21553_BOOL:: var_is_introduced ;
var {0,1}: aux21553_INTEGER :: var_is_introduced ;
var bool: aux21554_BOOL:: var_is_introduced ;
var bool: aux21555_BOOL:: var_is_introduced ;
var 2..59: aux21556:: var_is_introduced ;
var bool: aux21557_BOOL:: var_is_introduced ;
var bool: aux21558_BOOL:: var_is_introduced ;
var bool: aux21559_BOOL:: var_is_introduced ;
var {0,1}: aux21559_INTEGER :: var_is_introduced ;
var bool: aux21560_BOOL:: var_is_introduced ;
var bool: aux21561_BOOL:: var_is_introduced ;
var 3..60: aux21562:: var_is_introduced ;
var bool: aux21563_BOOL:: var_is_introduced ;
var bool: aux21564_BOOL:: var_is_introduced ;
var bool: aux21565_BOOL:: var_is_introduced ;
var {0,1}: aux21565_INTEGER :: var_is_introduced ;
var bool: aux21566_BOOL:: var_is_introduced ;
var bool: aux21567_BOOL:: var_is_introduced ;
var 2..59: aux21568:: var_is_introduced ;
var bool: aux21569_BOOL:: var_is_introduced ;
var bool: aux21570_BOOL:: var_is_introduced ;
var bool: aux21571_BOOL:: var_is_introduced ;
var {0,1}: aux21571_INTEGER :: var_is_introduced ;
var bool: aux21572_BOOL:: var_is_introduced ;
var bool: aux21573_BOOL:: var_is_introduced ;
var 3..60: aux21574:: var_is_introduced ;
var bool: aux21575_BOOL:: var_is_introduced ;
var bool: aux21576_BOOL:: var_is_introduced ;
var bool: aux21577_BOOL:: var_is_introduced ;
var {0,1}: aux21577_INTEGER :: var_is_introduced ;
var bool: aux21578_BOOL:: var_is_introduced ;
var bool: aux21579_BOOL:: var_is_introduced ;
var 2..59: aux21580:: var_is_introduced ;
var bool: aux21581_BOOL:: var_is_introduced ;
var bool: aux21582_BOOL:: var_is_introduced ;
var bool: aux21583_BOOL:: var_is_introduced ;
var {0,1}: aux21583_INTEGER :: var_is_introduced ;
var bool: aux21584_BOOL:: var_is_introduced ;
var bool: aux21585_BOOL:: var_is_introduced ;
var 2..59: aux21586:: var_is_introduced ;
var bool: aux21587_BOOL:: var_is_introduced ;
var bool: aux21588_BOOL:: var_is_introduced ;
var bool: aux21589_BOOL:: var_is_introduced ;
var {0,1}: aux21589_INTEGER :: var_is_introduced ;
var bool: aux21590_BOOL:: var_is_introduced ;
var bool: aux21591_BOOL:: var_is_introduced ;
var 5..62: aux21592:: var_is_introduced ;
var bool: aux21593_BOOL:: var_is_introduced ;
var bool: aux21594_BOOL:: var_is_introduced ;
var bool: aux21595_BOOL:: var_is_introduced ;
var {0,1}: aux21595_INTEGER :: var_is_introduced ;
var bool: aux21596_BOOL:: var_is_introduced ;
var bool: aux21597_BOOL:: var_is_introduced ;
var 3..60: aux21598:: var_is_introduced ;
var bool: aux21599_BOOL:: var_is_introduced ;
var bool: aux21600_BOOL:: var_is_introduced ;
var bool: aux21601_BOOL:: var_is_introduced ;
var {0,1}: aux21601_INTEGER :: var_is_introduced ;
var bool: aux21602_BOOL:: var_is_introduced ;
var bool: aux21603_BOOL:: var_is_introduced ;
var 4..61: aux21604:: var_is_introduced ;
var bool: aux21605_BOOL:: var_is_introduced ;
var bool: aux21606_BOOL:: var_is_introduced ;
var bool: aux21607_BOOL:: var_is_introduced ;
var {0,1}: aux21607_INTEGER :: var_is_introduced ;
var bool: aux21608_BOOL:: var_is_introduced ;
var bool: aux21609_BOOL:: var_is_introduced ;
var 3..60: aux21610:: var_is_introduced ;
var bool: aux21611_BOOL:: var_is_introduced ;
var bool: aux21612_BOOL:: var_is_introduced ;
var bool: aux21613_BOOL:: var_is_introduced ;
var {0,1}: aux21613_INTEGER :: var_is_introduced ;
var bool: aux21614_BOOL:: var_is_introduced ;
var bool: aux21615_BOOL:: var_is_introduced ;
var 1..58: aux21616:: var_is_introduced ;
var bool: aux21617_BOOL:: var_is_introduced ;
var bool: aux21618_BOOL:: var_is_introduced ;
var bool: aux21619_BOOL:: var_is_introduced ;
var {0,1}: aux21619_INTEGER :: var_is_introduced ;
var bool: aux21620_BOOL:: var_is_introduced ;
var bool: aux21621_BOOL:: var_is_introduced ;
var 3..60: aux21622:: var_is_introduced ;
var bool: aux21623_BOOL:: var_is_introduced ;
var bool: aux21624_BOOL:: var_is_introduced ;
var bool: aux21625_BOOL:: var_is_introduced ;
var {0,1}: aux21625_INTEGER :: var_is_introduced ;
var bool: aux21626_BOOL:: var_is_introduced ;
var bool: aux21627_BOOL:: var_is_introduced ;
var 4..61: aux21628:: var_is_introduced ;
var bool: aux21629_BOOL:: var_is_introduced ;
var bool: aux21630_BOOL:: var_is_introduced ;
var bool: aux21631_BOOL:: var_is_introduced ;
var {0,1}: aux21631_INTEGER :: var_is_introduced ;
var bool: aux21632_BOOL:: var_is_introduced ;
var bool: aux21633_BOOL:: var_is_introduced ;
var 1..58: aux21634:: var_is_introduced ;
var bool: aux21635_BOOL:: var_is_introduced ;
var bool: aux21636_BOOL:: var_is_introduced ;
var bool: aux21637_BOOL:: var_is_introduced ;
var {0,1}: aux21637_INTEGER :: var_is_introduced ;
var bool: aux21638_BOOL:: var_is_introduced ;
var bool: aux21639_BOOL:: var_is_introduced ;
var 4..61: aux21640:: var_is_introduced ;
var bool: aux21641_BOOL:: var_is_introduced ;
var bool: aux21642_BOOL:: var_is_introduced ;
var bool: aux21643_BOOL:: var_is_introduced ;
var {0,1}: aux21643_INTEGER :: var_is_introduced ;
var bool: aux21644_BOOL:: var_is_introduced ;
var bool: aux21645_BOOL:: var_is_introduced ;
var 2..59: aux21646:: var_is_introduced ;
var bool: aux21647_BOOL:: var_is_introduced ;
var bool: aux21648_BOOL:: var_is_introduced ;
var bool: aux21649_BOOL:: var_is_introduced ;
var {0,1}: aux21649_INTEGER :: var_is_introduced ;
var bool: aux21650_BOOL:: var_is_introduced ;
var 2..59: aux21651:: var_is_introduced ;
var bool: aux21652_BOOL:: var_is_introduced ;
var bool: aux21653_BOOL:: var_is_introduced ;
var {0,1}: aux21653_INTEGER :: var_is_introduced ;
var bool: aux21654_BOOL:: var_is_introduced ;
var bool: aux21655_BOOL:: var_is_introduced ;
var bool: aux21656_BOOL:: var_is_introduced ;
var 4..61: aux21657:: var_is_introduced ;
var bool: aux21658_BOOL:: var_is_introduced ;
var bool: aux21659_BOOL:: var_is_introduced ;
var bool: aux21660_BOOL:: var_is_introduced ;
var {0,1}: aux21660_INTEGER :: var_is_introduced ;
var bool: aux21661_BOOL:: var_is_introduced ;
var bool: aux21662_BOOL:: var_is_introduced ;
var 4..61: aux21663:: var_is_introduced ;
var bool: aux21664_BOOL:: var_is_introduced ;
var bool: aux21665_BOOL:: var_is_introduced ;
var bool: aux21666_BOOL:: var_is_introduced ;
var {0,1}: aux21666_INTEGER :: var_is_introduced ;
var bool: aux21667_BOOL:: var_is_introduced ;
var bool: aux21668_BOOL:: var_is_introduced ;
var 3..60: aux21669:: var_is_introduced ;
var bool: aux21670_BOOL:: var_is_introduced ;
var bool: aux21671_BOOL:: var_is_introduced ;
var bool: aux21672_BOOL:: var_is_introduced ;
var {0,1}: aux21672_INTEGER :: var_is_introduced ;
var bool: aux21673_BOOL:: var_is_introduced ;
var bool: aux21674_BOOL:: var_is_introduced ;
var 2..59: aux21675:: var_is_introduced ;
var bool: aux21676_BOOL:: var_is_introduced ;
var bool: aux21677_BOOL:: var_is_introduced ;
var bool: aux21678_BOOL:: var_is_introduced ;
var {0,1}: aux21678_INTEGER :: var_is_introduced ;
var bool: aux21679_BOOL:: var_is_introduced ;
var bool: aux21680_BOOL:: var_is_introduced ;
var 3..60: aux21681:: var_is_introduced ;
var bool: aux21682_BOOL:: var_is_introduced ;
var bool: aux21683_BOOL:: var_is_introduced ;
var bool: aux21684_BOOL:: var_is_introduced ;
var {0,1}: aux21684_INTEGER :: var_is_introduced ;
var bool: aux21685_BOOL:: var_is_introduced ;
var bool: aux21686_BOOL:: var_is_introduced ;
var 2..59: aux21687:: var_is_introduced ;
var bool: aux21688_BOOL:: var_is_introduced ;
var bool: aux21689_BOOL:: var_is_introduced ;
var bool: aux21690_BOOL:: var_is_introduced ;
var {0,1}: aux21690_INTEGER :: var_is_introduced ;
var bool: aux21691_BOOL:: var_is_introduced ;
var bool: aux21692_BOOL:: var_is_introduced ;
var 3..60: aux21693:: var_is_introduced ;
var bool: aux21694_BOOL:: var_is_introduced ;
var bool: aux21695_BOOL:: var_is_introduced ;
var bool: aux21696_BOOL:: var_is_introduced ;
var {0,1}: aux21696_INTEGER :: var_is_introduced ;
var bool: aux21697_BOOL:: var_is_introduced ;
var bool: aux21698_BOOL:: var_is_introduced ;
var 2..59: aux21699:: var_is_introduced ;
var bool: aux21700_BOOL:: var_is_introduced ;
var bool: aux21701_BOOL:: var_is_introduced ;
var bool: aux21702_BOOL:: var_is_introduced ;
var {0,1}: aux21702_INTEGER :: var_is_introduced ;
var bool: aux21703_BOOL:: var_is_introduced ;
var bool: aux21704_BOOL:: var_is_introduced ;
var 2..59: aux21705:: var_is_introduced ;
var bool: aux21706_BOOL:: var_is_introduced ;
var bool: aux21707_BOOL:: var_is_introduced ;
var bool: aux21708_BOOL:: var_is_introduced ;
var {0,1}: aux21708_INTEGER :: var_is_introduced ;
var bool: aux21709_BOOL:: var_is_introduced ;
var bool: aux21710_BOOL:: var_is_introduced ;
var 5..62: aux21711:: var_is_introduced ;
var bool: aux21712_BOOL:: var_is_introduced ;
var bool: aux21713_BOOL:: var_is_introduced ;
var bool: aux21714_BOOL:: var_is_introduced ;
var {0,1}: aux21714_INTEGER :: var_is_introduced ;
var bool: aux21715_BOOL:: var_is_introduced ;
var bool: aux21716_BOOL:: var_is_introduced ;
var 3..60: aux21717:: var_is_introduced ;
var bool: aux21718_BOOL:: var_is_introduced ;
var bool: aux21719_BOOL:: var_is_introduced ;
var bool: aux21720_BOOL:: var_is_introduced ;
var {0,1}: aux21720_INTEGER :: var_is_introduced ;
var bool: aux21721_BOOL:: var_is_introduced ;
var bool: aux21722_BOOL:: var_is_introduced ;
var 3..60: aux21723:: var_is_introduced ;
var bool: aux21724_BOOL:: var_is_introduced ;
var bool: aux21725_BOOL:: var_is_introduced ;
var bool: aux21726_BOOL:: var_is_introduced ;
var {0,1}: aux21726_INTEGER :: var_is_introduced ;
var bool: aux21727_BOOL:: var_is_introduced ;
var bool: aux21728_BOOL:: var_is_introduced ;
var 2..59: aux21729:: var_is_introduced ;
var bool: aux21730_BOOL:: var_is_introduced ;
var bool: aux21731_BOOL:: var_is_introduced ;
var bool: aux21732_BOOL:: var_is_introduced ;
var {0,1}: aux21732_INTEGER :: var_is_introduced ;
var bool: aux21733_BOOL:: var_is_introduced ;
var bool: aux21734_BOOL:: var_is_introduced ;
var 1..58: aux21735:: var_is_introduced ;
var bool: aux21736_BOOL:: var_is_introduced ;
var bool: aux21737_BOOL:: var_is_introduced ;
var bool: aux21738_BOOL:: var_is_introduced ;
var {0,1}: aux21738_INTEGER :: var_is_introduced ;
var bool: aux21739_BOOL:: var_is_introduced ;
var bool: aux21740_BOOL:: var_is_introduced ;
var 3..60: aux21741:: var_is_introduced ;
var bool: aux21742_BOOL:: var_is_introduced ;
var bool: aux21743_BOOL:: var_is_introduced ;
var bool: aux21744_BOOL:: var_is_introduced ;
var {0,1}: aux21744_INTEGER :: var_is_introduced ;
var bool: aux21745_BOOL:: var_is_introduced ;
var bool: aux21746_BOOL:: var_is_introduced ;
var 4..61: aux21747:: var_is_introduced ;
var bool: aux21748_BOOL:: var_is_introduced ;
var bool: aux21749_BOOL:: var_is_introduced ;
var bool: aux21750_BOOL:: var_is_introduced ;
var {0,1}: aux21750_INTEGER :: var_is_introduced ;
var bool: aux21751_BOOL:: var_is_introduced ;
var bool: aux21752_BOOL:: var_is_introduced ;
var 1..58: aux21753:: var_is_introduced ;
var bool: aux21754_BOOL:: var_is_introduced ;
var bool: aux21755_BOOL:: var_is_introduced ;
var bool: aux21756_BOOL:: var_is_introduced ;
var {0,1}: aux21756_INTEGER :: var_is_introduced ;
var bool: aux21757_BOOL:: var_is_introduced ;
var bool: aux21758_BOOL:: var_is_introduced ;
var 4..61: aux21759:: var_is_introduced ;
var bool: aux21760_BOOL:: var_is_introduced ;
var bool: aux21761_BOOL:: var_is_introduced ;
var bool: aux21762_BOOL:: var_is_introduced ;
var {0,1}: aux21762_INTEGER :: var_is_introduced ;
var bool: aux21763_BOOL:: var_is_introduced ;
var bool: aux21764_BOOL:: var_is_introduced ;
var 2..59: aux21765:: var_is_introduced ;
var bool: aux21766_BOOL:: var_is_introduced ;
var bool: aux21767_BOOL:: var_is_introduced ;
var bool: aux21768_BOOL:: var_is_introduced ;
var {0,1}: aux21768_INTEGER :: var_is_introduced ;
var bool: aux21769_BOOL:: var_is_introduced ;
var 4..61: aux21770:: var_is_introduced ;
var bool: aux21771_BOOL:: var_is_introduced ;
var bool: aux21772_BOOL:: var_is_introduced ;
var {0,1}: aux21772_INTEGER :: var_is_introduced ;
var bool: aux21773_BOOL:: var_is_introduced ;
var bool: aux21774_BOOL:: var_is_introduced ;
var bool: aux21775_BOOL:: var_is_introduced ;
var 4..61: aux21776:: var_is_introduced ;
var bool: aux21777_BOOL:: var_is_introduced ;
var bool: aux21778_BOOL:: var_is_introduced ;
var bool: aux21779_BOOL:: var_is_introduced ;
var {0,1}: aux21779_INTEGER :: var_is_introduced ;
var bool: aux21780_BOOL:: var_is_introduced ;
var bool: aux21781_BOOL:: var_is_introduced ;
var 4..61: aux21782:: var_is_introduced ;
var bool: aux21783_BOOL:: var_is_introduced ;
var bool: aux21784_BOOL:: var_is_introduced ;
var bool: aux21785_BOOL:: var_is_introduced ;
var {0,1}: aux21785_INTEGER :: var_is_introduced ;
var bool: aux21786_BOOL:: var_is_introduced ;
var bool: aux21787_BOOL:: var_is_introduced ;
var 3..60: aux21788:: var_is_introduced ;
var bool: aux21789_BOOL:: var_is_introduced ;
var bool: aux21790_BOOL:: var_is_introduced ;
var bool: aux21791_BOOL:: var_is_introduced ;
var {0,1}: aux21791_INTEGER :: var_is_introduced ;
var bool: aux21792_BOOL:: var_is_introduced ;
var bool: aux21793_BOOL:: var_is_introduced ;
var 2..59: aux21794:: var_is_introduced ;
var bool: aux21795_BOOL:: var_is_introduced ;
var bool: aux21796_BOOL:: var_is_introduced ;
var bool: aux21797_BOOL:: var_is_introduced ;
var {0,1}: aux21797_INTEGER :: var_is_introduced ;
var bool: aux21798_BOOL:: var_is_introduced ;
var bool: aux21799_BOOL:: var_is_introduced ;
var 3..60: aux21800:: var_is_introduced ;
var bool: aux21801_BOOL:: var_is_introduced ;
var bool: aux21802_BOOL:: var_is_introduced ;
var bool: aux21803_BOOL:: var_is_introduced ;
var {0,1}: aux21803_INTEGER :: var_is_introduced ;
var bool: aux21804_BOOL:: var_is_introduced ;
var bool: aux21805_BOOL:: var_is_introduced ;
var 2..59: aux21806:: var_is_introduced ;
var bool: aux21807_BOOL:: var_is_introduced ;
var bool: aux21808_BOOL:: var_is_introduced ;
var bool: aux21809_BOOL:: var_is_introduced ;
var {0,1}: aux21809_INTEGER :: var_is_introduced ;
var bool: aux21810_BOOL:: var_is_introduced ;
var bool: aux21811_BOOL:: var_is_introduced ;
var 3..60: aux21812:: var_is_introduced ;
var bool: aux21813_BOOL:: var_is_introduced ;
var bool: aux21814_BOOL:: var_is_introduced ;
var bool: aux21815_BOOL:: var_is_introduced ;
var {0,1}: aux21815_INTEGER :: var_is_introduced ;
var bool: aux21816_BOOL:: var_is_introduced ;
var bool: aux21817_BOOL:: var_is_introduced ;
var 2..59: aux21818:: var_is_introduced ;
var bool: aux21819_BOOL:: var_is_introduced ;
var bool: aux21820_BOOL:: var_is_introduced ;
var bool: aux21821_BOOL:: var_is_introduced ;
var {0,1}: aux21821_INTEGER :: var_is_introduced ;
var bool: aux21822_BOOL:: var_is_introduced ;
var bool: aux21823_BOOL:: var_is_introduced ;
var 2..59: aux21824:: var_is_introduced ;
var bool: aux21825_BOOL:: var_is_introduced ;
var bool: aux21826_BOOL:: var_is_introduced ;
var bool: aux21827_BOOL:: var_is_introduced ;
var {0,1}: aux21827_INTEGER :: var_is_introduced ;
var bool: aux21828_BOOL:: var_is_introduced ;
var bool: aux21829_BOOL:: var_is_introduced ;
var 5..62: aux21830:: var_is_introduced ;
var bool: aux21831_BOOL:: var_is_introduced ;
var bool: aux21832_BOOL:: var_is_introduced ;
var bool: aux21833_BOOL:: var_is_introduced ;
var {0,1}: aux21833_INTEGER :: var_is_introduced ;
var bool: aux21834_BOOL:: var_is_introduced ;
var bool: aux21835_BOOL:: var_is_introduced ;
var 4..61: aux21836:: var_is_introduced ;
var bool: aux21837_BOOL:: var_is_introduced ;
var bool: aux21838_BOOL:: var_is_introduced ;
var bool: aux21839_BOOL:: var_is_introduced ;
var {0,1}: aux21839_INTEGER :: var_is_introduced ;
var bool: aux21840_BOOL:: var_is_introduced ;
var bool: aux21841_BOOL:: var_is_introduced ;
var 3..60: aux21842:: var_is_introduced ;
var bool: aux21843_BOOL:: var_is_introduced ;
var bool: aux21844_BOOL:: var_is_introduced ;
var bool: aux21845_BOOL:: var_is_introduced ;
var {0,1}: aux21845_INTEGER :: var_is_introduced ;
var bool: aux21846_BOOL:: var_is_introduced ;
var bool: aux21847_BOOL:: var_is_introduced ;
var 2..59: aux21848:: var_is_introduced ;
var bool: aux21849_BOOL:: var_is_introduced ;
var bool: aux21850_BOOL:: var_is_introduced ;
var bool: aux21851_BOOL:: var_is_introduced ;
var {0,1}: aux21851_INTEGER :: var_is_introduced ;
var bool: aux21852_BOOL:: var_is_introduced ;
var bool: aux21853_BOOL:: var_is_introduced ;
var 1..58: aux21854:: var_is_introduced ;
var bool: aux21855_BOOL:: var_is_introduced ;
var bool: aux21856_BOOL:: var_is_introduced ;
var bool: aux21857_BOOL:: var_is_introduced ;
var {0,1}: aux21857_INTEGER :: var_is_introduced ;
var bool: aux21858_BOOL:: var_is_introduced ;
var bool: aux21859_BOOL:: var_is_introduced ;
var 3..60: aux21860:: var_is_introduced ;
var bool: aux21861_BOOL:: var_is_introduced ;
var bool: aux21862_BOOL:: var_is_introduced ;
var bool: aux21863_BOOL:: var_is_introduced ;
var {0,1}: aux21863_INTEGER :: var_is_introduced ;
var bool: aux21864_BOOL:: var_is_introduced ;
var bool: aux21865_BOOL:: var_is_introduced ;
var 4..61: aux21866:: var_is_introduced ;
var bool: aux21867_BOOL:: var_is_introduced ;
var bool: aux21868_BOOL:: var_is_introduced ;
var bool: aux21869_BOOL:: var_is_introduced ;
var {0,1}: aux21869_INTEGER :: var_is_introduced ;
var bool: aux21870_BOOL:: var_is_introduced ;
var bool: aux21871_BOOL:: var_is_introduced ;
var 1..58: aux21872:: var_is_introduced ;
var bool: aux21873_BOOL:: var_is_introduced ;
var bool: aux21874_BOOL:: var_is_introduced ;
var bool: aux21875_BOOL:: var_is_introduced ;
var {0,1}: aux21875_INTEGER :: var_is_introduced ;
var bool: aux21876_BOOL:: var_is_introduced ;
var bool: aux21877_BOOL:: var_is_introduced ;
var 4..61: aux21878:: var_is_introduced ;
var bool: aux21879_BOOL:: var_is_introduced ;
var bool: aux21880_BOOL:: var_is_introduced ;
var bool: aux21881_BOOL:: var_is_introduced ;
var {0,1}: aux21881_INTEGER :: var_is_introduced ;
var bool: aux21882_BOOL:: var_is_introduced ;
var bool: aux21883_BOOL:: var_is_introduced ;
var 2..59: aux21884:: var_is_introduced ;
var bool: aux21885_BOOL:: var_is_introduced ;
var bool: aux21886_BOOL:: var_is_introduced ;
var bool: aux21887_BOOL:: var_is_introduced ;
var {0,1}: aux21887_INTEGER :: var_is_introduced ;
var bool: aux21888_BOOL:: var_is_introduced ;
var 3..60: aux21889:: var_is_introduced ;
var bool: aux21890_BOOL:: var_is_introduced ;
var bool: aux21891_BOOL:: var_is_introduced ;
var {0,1}: aux21891_INTEGER :: var_is_introduced ;
var bool: aux21892_BOOL:: var_is_introduced ;
var bool: aux21893_BOOL:: var_is_introduced ;
var bool: aux21894_BOOL:: var_is_introduced ;
var bool: aux21895_BOOL:: var_is_introduced ;
var bool: aux21896_BOOL:: var_is_introduced ;
var bool: aux21897_BOOL:: var_is_introduced ;
var 2..59: aux21898:: var_is_introduced ;
var bool: aux21899_BOOL:: var_is_introduced ;
var bool: aux21900_BOOL:: var_is_introduced ;
var bool: aux21901_BOOL:: var_is_introduced ;
var {0,1}: aux21901_INTEGER :: var_is_introduced ;
var 4..61: aux21902:: var_is_introduced ;
var bool: aux21903_BOOL:: var_is_introduced ;
var bool: aux21904_BOOL:: var_is_introduced ;
var bool: aux21905_BOOL:: var_is_introduced ;
var {0,1}: aux21905_INTEGER :: var_is_introduced ;
var 4..61: aux21906:: var_is_introduced ;
var bool: aux21907_BOOL:: var_is_introduced ;
var {0,1}: aux21907_INTEGER :: var_is_introduced ;
var 2..59: aux21908:: var_is_introduced ;
var bool: aux21909_BOOL:: var_is_introduced ;
var bool: aux21910_BOOL:: var_is_introduced ;
var bool: aux21911_BOOL:: var_is_introduced ;
var {0,1}: aux21911_INTEGER :: var_is_introduced ;
var 4..61: aux21912:: var_is_introduced ;
var bool: aux21913_BOOL:: var_is_introduced ;
var bool: aux21914_BOOL:: var_is_introduced ;
var bool: aux21915_BOOL:: var_is_introduced ;
var {0,1}: aux21915_INTEGER :: var_is_introduced ;
var 4..61: aux21916:: var_is_introduced ;
var bool: aux21917_BOOL:: var_is_introduced ;
var {0,1}: aux21917_INTEGER :: var_is_introduced ;
var 4..61: aux21918:: var_is_introduced ;
var bool: aux21919_BOOL:: var_is_introduced ;
var bool: aux21920_BOOL:: var_is_introduced ;
var bool: aux21921_BOOL:: var_is_introduced ;
var {0,1}: aux21921_INTEGER :: var_is_introduced ;
var 4..61: aux21922:: var_is_introduced ;
var bool: aux21923_BOOL:: var_is_introduced ;
var bool: aux21924_BOOL:: var_is_introduced ;
var bool: aux21925_BOOL:: var_is_introduced ;
var {0,1}: aux21925_INTEGER :: var_is_introduced ;
var 2..59: aux21926:: var_is_introduced ;
var bool: aux21927_BOOL:: var_is_introduced ;
var {0,1}: aux21927_INTEGER :: var_is_introduced ;
var 2..59: aux21928:: var_is_introduced ;
var bool: aux21929_BOOL:: var_is_introduced ;
var bool: aux21930_BOOL:: var_is_introduced ;
var bool: aux21931_BOOL:: var_is_introduced ;
var {0,1}: aux21931_INTEGER :: var_is_introduced ;
var 2..59: aux21932:: var_is_introduced ;
var bool: aux21933_BOOL:: var_is_introduced ;
var bool: aux21934_BOOL:: var_is_introduced ;
var bool: aux21935_BOOL:: var_is_introduced ;
var {0,1}: aux21935_INTEGER :: var_is_introduced ;
var 3..60: aux21936:: var_is_introduced ;
var bool: aux21937_BOOL:: var_is_introduced ;
var bool: aux21938_BOOL:: var_is_introduced ;
var bool: aux21939_BOOL:: var_is_introduced ;
var {0,1}: aux21939_INTEGER :: var_is_introduced ;
var 4..61: aux21940:: var_is_introduced ;
var bool: aux21941_BOOL:: var_is_introduced ;
var bool: aux21942_BOOL:: var_is_introduced ;
var bool: aux21943_BOOL:: var_is_introduced ;
var {0,1}: aux21943_INTEGER :: var_is_introduced ;
var 2..59: aux21944:: var_is_introduced ;
var bool: aux21945_BOOL:: var_is_introduced ;
var {0,1}: aux21945_INTEGER :: var_is_introduced ;
var 2..59: aux21946:: var_is_introduced ;
var bool: aux21947_BOOL:: var_is_introduced ;
var bool: aux21948_BOOL:: var_is_introduced ;
var bool: aux21949_BOOL:: var_is_introduced ;
var {0,1}: aux21949_INTEGER :: var_is_introduced ;
var 2..59: aux21950:: var_is_introduced ;
var bool: aux21951_BOOL:: var_is_introduced ;
var bool: aux21952_BOOL:: var_is_introduced ;
var bool: aux21953_BOOL:: var_is_introduced ;
var {0,1}: aux21953_INTEGER :: var_is_introduced ;
var 3..60: aux21954:: var_is_introduced ;
var bool: aux21955_BOOL:: var_is_introduced ;
var bool: aux21956_BOOL:: var_is_introduced ;
var bool: aux21957_BOOL:: var_is_introduced ;
var {0,1}: aux21957_INTEGER :: var_is_introduced ;
var 4..61: aux21958:: var_is_introduced ;
var bool: aux21959_BOOL:: var_is_introduced ;
var bool: aux21960_BOOL:: var_is_introduced ;
var bool: aux21961_BOOL:: var_is_introduced ;
var {0,1}: aux21961_INTEGER :: var_is_introduced ;
var 2..59: aux21962:: var_is_introduced ;
var bool: aux21963_BOOL:: var_is_introduced ;
var {0,1}: aux21963_INTEGER :: var_is_introduced ;
var 2..59: aux21964:: var_is_introduced ;
var bool: aux21965_BOOL:: var_is_introduced ;
var bool: aux21966_BOOL:: var_is_introduced ;
var bool: aux21967_BOOL:: var_is_introduced ;
var {0,1}: aux21967_INTEGER :: var_is_introduced ;
var 2..59: aux21968:: var_is_introduced ;
var bool: aux21969_BOOL:: var_is_introduced ;
var bool: aux21970_BOOL:: var_is_introduced ;
var bool: aux21971_BOOL:: var_is_introduced ;
var {0,1}: aux21971_INTEGER :: var_is_introduced ;
var 2..59: aux21972:: var_is_introduced ;
var bool: aux21973_BOOL:: var_is_introduced ;
var bool: aux21974_BOOL:: var_is_introduced ;
var bool: aux21975_BOOL:: var_is_introduced ;
var {0,1}: aux21975_INTEGER :: var_is_introduced ;
var 4..61: aux21976:: var_is_introduced ;
var bool: aux21977_BOOL:: var_is_introduced ;
var bool: aux21978_BOOL:: var_is_introduced ;
var bool: aux21979_BOOL:: var_is_introduced ;
var {0,1}: aux21979_INTEGER :: var_is_introduced ;
var 3..60: aux21980:: var_is_introduced ;
var bool: aux21981_BOOL:: var_is_introduced ;
var {0,1}: aux21981_INTEGER :: var_is_introduced ;
var 2..59: aux21982:: var_is_introduced ;
var bool: aux21983_BOOL:: var_is_introduced ;
var bool: aux21984_BOOL:: var_is_introduced ;
var bool: aux21985_BOOL:: var_is_introduced ;
var {0,1}: aux21985_INTEGER :: var_is_introduced ;
var 2..59: aux21986:: var_is_introduced ;
var bool: aux21987_BOOL:: var_is_introduced ;
var bool: aux21988_BOOL:: var_is_introduced ;
var bool: aux21989_BOOL:: var_is_introduced ;
var {0,1}: aux21989_INTEGER :: var_is_introduced ;
var 3..60: aux21990:: var_is_introduced ;
var bool: aux21991_BOOL:: var_is_introduced ;
var bool: aux21992_BOOL:: var_is_introduced ;
var bool: aux21993_BOOL:: var_is_introduced ;
var {0,1}: aux21993_INTEGER :: var_is_introduced ;
var 4..61: aux21994:: var_is_introduced ;
var bool: aux21995_BOOL:: var_is_introduced ;
var bool: aux21996_BOOL:: var_is_introduced ;
var bool: aux21997_BOOL:: var_is_introduced ;
var {0,1}: aux21997_INTEGER :: var_is_introduced ;
var 2..59: aux21998:: var_is_introduced ;
var bool: aux21999_BOOL:: var_is_introduced ;
var {0,1}: aux21999_INTEGER :: var_is_introduced ;
var 2..59: aux22000:: var_is_introduced ;
var bool: aux22001_BOOL:: var_is_introduced ;
var bool: aux22002_BOOL:: var_is_introduced ;
var bool: aux22003_BOOL:: var_is_introduced ;
var {0,1}: aux22003_INTEGER :: var_is_introduced ;
var 2..59: aux22004:: var_is_introduced ;
var bool: aux22005_BOOL:: var_is_introduced ;
var bool: aux22006_BOOL:: var_is_introduced ;
var bool: aux22007_BOOL:: var_is_introduced ;
var {0,1}: aux22007_INTEGER :: var_is_introduced ;
var 2..59: aux22008:: var_is_introduced ;
var bool: aux22009_BOOL:: var_is_introduced ;
var bool: aux22010_BOOL:: var_is_introduced ;
var bool: aux22011_BOOL:: var_is_introduced ;
var {0,1}: aux22011_INTEGER :: var_is_introduced ;
var 3..60: aux22012:: var_is_introduced ;
var bool: aux22013_BOOL:: var_is_introduced ;
var bool: aux22014_BOOL:: var_is_introduced ;
var bool: aux22015_BOOL:: var_is_introduced ;
var {0,1}: aux22015_INTEGER :: var_is_introduced ;
var 4..61: aux22016:: var_is_introduced ;
var bool: aux22017_BOOL:: var_is_introduced ;
var {0,1}: aux22017_INTEGER :: var_is_introduced ;
var 2..59: aux22018:: var_is_introduced ;
var bool: aux22019_BOOL:: var_is_introduced ;
var bool: aux22020_BOOL:: var_is_introduced ;
var bool: aux22021_BOOL:: var_is_introduced ;
var {0,1}: aux22021_INTEGER :: var_is_introduced ;
var 3..60: aux22022:: var_is_introduced ;
var bool: aux22023_BOOL:: var_is_introduced ;
var bool: aux22024_BOOL:: var_is_introduced ;
var bool: aux22025_BOOL:: var_is_introduced ;
var {0,1}: aux22025_INTEGER :: var_is_introduced ;
var 3..60: aux22026:: var_is_introduced ;
var bool: aux22027_BOOL:: var_is_introduced ;
var bool: aux22028_BOOL:: var_is_introduced ;
var bool: aux22029_BOOL:: var_is_introduced ;
var {0,1}: aux22029_INTEGER :: var_is_introduced ;
var 2..59: aux22030:: var_is_introduced ;
var bool: aux22031_BOOL:: var_is_introduced ;
var bool: aux22032_BOOL:: var_is_introduced ;
var bool: aux22033_BOOL:: var_is_introduced ;
var {0,1}: aux22033_INTEGER :: var_is_introduced ;
var 4..61: aux22034:: var_is_introduced ;
var bool: aux22035_BOOL:: var_is_introduced ;
var {0,1}: aux22035_INTEGER :: var_is_introduced ;
var 2..59: aux22036:: var_is_introduced ;
var bool: aux22037_BOOL:: var_is_introduced ;
var bool: aux22038_BOOL:: var_is_introduced ;
var bool: aux22039_BOOL:: var_is_introduced ;
var {0,1}: aux22039_INTEGER :: var_is_introduced ;
var 3..60: aux22040:: var_is_introduced ;
var bool: aux22041_BOOL:: var_is_introduced ;
var bool: aux22042_BOOL:: var_is_introduced ;
var bool: aux22043_BOOL:: var_is_introduced ;
var {0,1}: aux22043_INTEGER :: var_is_introduced ;
var 4..61: aux22044:: var_is_introduced ;
var bool: aux22045_BOOL:: var_is_introduced ;
var bool: aux22046_BOOL:: var_is_introduced ;
var bool: aux22047_BOOL:: var_is_introduced ;
var {0,1}: aux22047_INTEGER :: var_is_introduced ;
var 2..59: aux22048:: var_is_introduced ;
var bool: aux22049_BOOL:: var_is_introduced ;
var bool: aux22050_BOOL:: var_is_introduced ;
var bool: aux22051_BOOL:: var_is_introduced ;
var {0,1}: aux22051_INTEGER :: var_is_introduced ;
var 3..60: aux22052:: var_is_introduced ;
var bool: aux22053_BOOL:: var_is_introduced ;
var {0,1}: aux22053_INTEGER :: var_is_introduced ;
var 2..59: aux22054:: var_is_introduced ;
var bool: aux22055_BOOL:: var_is_introduced ;
var bool: aux22056_BOOL:: var_is_introduced ;
var bool: aux22057_BOOL:: var_is_introduced ;
var {0,1}: aux22057_INTEGER :: var_is_introduced ;
var 3..60: aux22058:: var_is_introduced ;
var bool: aux22059_BOOL:: var_is_introduced ;
var bool: aux22060_BOOL:: var_is_introduced ;
var bool: aux22061_BOOL:: var_is_introduced ;
var {0,1}: aux22061_INTEGER :: var_is_introduced ;
var 4..61: aux22062:: var_is_introduced ;
var bool: aux22063_BOOL:: var_is_introduced ;
var bool: aux22064_BOOL:: var_is_introduced ;
var bool: aux22065_BOOL:: var_is_introduced ;
var {0,1}: aux22065_INTEGER :: var_is_introduced ;
var 2..59: aux22066:: var_is_introduced ;
var bool: aux22067_BOOL:: var_is_introduced ;
var bool: aux22068_BOOL:: var_is_introduced ;
var bool: aux22069_BOOL:: var_is_introduced ;
var {0,1}: aux22069_INTEGER :: var_is_introduced ;
var 3..60: aux22070:: var_is_introduced ;
var bool: aux22071_BOOL:: var_is_introduced ;
var {0,1}: aux22071_INTEGER :: var_is_introduced ;
var 3..60: aux22072:: var_is_introduced ;
var bool: aux22073_BOOL:: var_is_introduced ;
var bool: aux22074_BOOL:: var_is_introduced ;
var bool: aux22075_BOOL:: var_is_introduced ;
var {0,1}: aux22075_INTEGER :: var_is_introduced ;
var 3..60: aux22076:: var_is_introduced ;
var bool: aux22077_BOOL:: var_is_introduced ;
var bool: aux22078_BOOL:: var_is_introduced ;
var bool: aux22079_BOOL:: var_is_introduced ;
var {0,1}: aux22079_INTEGER :: var_is_introduced ;
var 4..61: aux22080:: var_is_introduced ;
var bool: aux22081_BOOL:: var_is_introduced ;
var bool: aux22082_BOOL:: var_is_introduced ;
var bool: aux22083_BOOL:: var_is_introduced ;
var {0,1}: aux22083_INTEGER :: var_is_introduced ;
var 2..59: aux22084:: var_is_introduced ;
var bool: aux22085_BOOL:: var_is_introduced ;
var bool: aux22086_BOOL:: var_is_introduced ;
var bool: aux22087_BOOL:: var_is_introduced ;
var {0,1}: aux22087_INTEGER :: var_is_introduced ;
var 2..59: aux22088:: var_is_introduced ;
var bool: aux22089_BOOL:: var_is_introduced ;
var {0,1}: aux22089_INTEGER :: var_is_introduced ;
var 2..59: aux22090:: var_is_introduced ;
var bool: aux22091_BOOL:: var_is_introduced ;
var bool: aux22092_BOOL:: var_is_introduced ;
var bool: aux22093_BOOL:: var_is_introduced ;
var {0,1}: aux22093_INTEGER :: var_is_introduced ;
var 3..60: aux22094:: var_is_introduced ;
var bool: aux22095_BOOL:: var_is_introduced ;
var bool: aux22096_BOOL:: var_is_introduced ;
var bool: aux22097_BOOL:: var_is_introduced ;
var {0,1}: aux22097_INTEGER :: var_is_introduced ;
var 3..60: aux22098:: var_is_introduced ;
var bool: aux22099_BOOL:: var_is_introduced ;
var bool: aux22100_BOOL:: var_is_introduced ;
var bool: aux22101_BOOL:: var_is_introduced ;
var {0,1}: aux22101_INTEGER :: var_is_introduced ;
var 4..61: aux22102:: var_is_introduced ;
var bool: aux22103_BOOL:: var_is_introduced ;
var bool: aux22104_BOOL:: var_is_introduced ;
var bool: aux22105_BOOL:: var_is_introduced ;
var {0,1}: aux22105_INTEGER :: var_is_introduced ;
var 2..59: aux22106:: var_is_introduced ;
var bool: aux22107_BOOL:: var_is_introduced ;
var {0,1}: aux22107_INTEGER :: var_is_introduced ;
var 2..59: aux22108:: var_is_introduced ;
var bool: aux22109_BOOL:: var_is_introduced ;
var bool: aux22110_BOOL:: var_is_introduced ;
var bool: aux22111_BOOL:: var_is_introduced ;
var {0,1}: aux22111_INTEGER :: var_is_introduced ;
var 2..59: aux22112:: var_is_introduced ;
var bool: aux22113_BOOL:: var_is_introduced ;
var bool: aux22114_BOOL:: var_is_introduced ;
var bool: aux22115_BOOL:: var_is_introduced ;
var {0,1}: aux22115_INTEGER :: var_is_introduced ;
var 3..60: aux22116:: var_is_introduced ;
var bool: aux22117_BOOL:: var_is_introduced ;
var bool: aux22118_BOOL:: var_is_introduced ;
var bool: aux22119_BOOL:: var_is_introduced ;
var {0,1}: aux22119_INTEGER :: var_is_introduced ;
var 1..58: aux22120:: var_is_introduced ;
var bool: aux22121_BOOL:: var_is_introduced ;
var bool: aux22122_BOOL:: var_is_introduced ;
var bool: aux22123_BOOL:: var_is_introduced ;
var {0,1}: aux22123_INTEGER :: var_is_introduced ;
var 3..60: aux22124:: var_is_introduced ;
var bool: aux22125_BOOL:: var_is_introduced ;
var bool: aux22126_BOOL:: var_is_introduced ;
var bool: aux22127_BOOL:: var_is_introduced ;
var {0,1}: aux22127_INTEGER :: var_is_introduced ;
var 3..60: aux22128:: var_is_introduced ;
var bool: aux22129_BOOL:: var_is_introduced ;
var bool: aux22130_BOOL:: var_is_introduced ;
var bool: aux22131_BOOL:: var_is_introduced ;
var {0,1}: aux22131_INTEGER :: var_is_introduced ;
var 3..60: aux22132:: var_is_introduced ;
var bool: aux22133_BOOL:: var_is_introduced ;
var bool: aux22134_BOOL:: var_is_introduced ;
var bool: aux22135_BOOL:: var_is_introduced ;
var {0,1}: aux22135_INTEGER :: var_is_introduced ;
var 3..60: aux22136:: var_is_introduced ;
var bool: aux22137_BOOL:: var_is_introduced ;
var bool: aux22138_BOOL:: var_is_introduced ;
var bool: aux22139_BOOL:: var_is_introduced ;
var {0,1}: aux22139_INTEGER :: var_is_introduced ;
var 5..62: aux22140:: var_is_introduced ;
var bool: aux22141_BOOL:: var_is_introduced ;
var bool: aux22142_BOOL:: var_is_introduced ;
var bool: aux22143_BOOL:: var_is_introduced ;
var {0,1}: aux22143_INTEGER :: var_is_introduced ;
var 4..61: aux22144:: var_is_introduced ;
var bool: aux22145_BOOL:: var_is_introduced ;
var {0,1}: aux22145_INTEGER :: var_is_introduced ;
var 2..59: aux22146:: var_is_introduced ;
var bool: aux22147_BOOL:: var_is_introduced ;
var bool: aux22148_BOOL:: var_is_introduced ;
var bool: aux22149_BOOL:: var_is_introduced ;
var {0,1}: aux22149_INTEGER :: var_is_introduced ;
var 3..60: aux22150:: var_is_introduced ;
var bool: aux22151_BOOL:: var_is_introduced ;
var bool: aux22152_BOOL:: var_is_introduced ;
var bool: aux22153_BOOL:: var_is_introduced ;
var {0,1}: aux22153_INTEGER :: var_is_introduced ;
var 1..58: aux22154:: var_is_introduced ;
var bool: aux22155_BOOL:: var_is_introduced ;
var bool: aux22156_BOOL:: var_is_introduced ;
var bool: aux22157_BOOL:: var_is_introduced ;
var {0,1}: aux22157_INTEGER :: var_is_introduced ;
var 3..60: aux22158:: var_is_introduced ;
var bool: aux22159_BOOL:: var_is_introduced ;
var bool: aux22160_BOOL:: var_is_introduced ;
var bool: aux22161_BOOL:: var_is_introduced ;
var {0,1}: aux22161_INTEGER :: var_is_introduced ;
var 4..61: aux22162:: var_is_introduced ;
var bool: aux22163_BOOL:: var_is_introduced ;
var bool: aux22164_BOOL:: var_is_introduced ;
var bool: aux22165_BOOL:: var_is_introduced ;
var {0,1}: aux22165_INTEGER :: var_is_introduced ;
var 3..60: aux22166:: var_is_introduced ;
var bool: aux22167_BOOL:: var_is_introduced ;
var bool: aux22168_BOOL:: var_is_introduced ;
var bool: aux22169_BOOL:: var_is_introduced ;
var {0,1}: aux22169_INTEGER :: var_is_introduced ;
var 3..60: aux22170:: var_is_introduced ;
var bool: aux22171_BOOL:: var_is_introduced ;
var bool: aux22172_BOOL:: var_is_introduced ;
var bool: aux22173_BOOL:: var_is_introduced ;
var {0,1}: aux22173_INTEGER :: var_is_introduced ;
var 3..60: aux22174:: var_is_introduced ;
var bool: aux22175_BOOL:: var_is_introduced ;
var bool: aux22176_BOOL:: var_is_introduced ;
var bool: aux22177_BOOL:: var_is_introduced ;
var {0,1}: aux22177_INTEGER :: var_is_introduced ;
var 5..62: aux22178:: var_is_introduced ;
var bool: aux22179_BOOL:: var_is_introduced ;
var bool: aux22180_BOOL:: var_is_introduced ;
var bool: aux22181_BOOL:: var_is_introduced ;
var {0,1}: aux22181_INTEGER :: var_is_introduced ;
var 2..59: aux22182:: var_is_introduced ;
var bool: aux22183_BOOL:: var_is_introduced ;
var {0,1}: aux22183_INTEGER :: var_is_introduced ;
var 2..59: aux22184:: var_is_introduced ;
var bool: aux22185_BOOL:: var_is_introduced ;
var bool: aux22186_BOOL:: var_is_introduced ;
var bool: aux22187_BOOL:: var_is_introduced ;
var {0,1}: aux22187_INTEGER :: var_is_introduced ;
var 2..59: aux22188:: var_is_introduced ;
var bool: aux22189_BOOL:: var_is_introduced ;
var bool: aux22190_BOOL:: var_is_introduced ;
var bool: aux22191_BOOL:: var_is_introduced ;
var {0,1}: aux22191_INTEGER :: var_is_introduced ;
var 1..58: aux22192:: var_is_introduced ;
var bool: aux22193_BOOL:: var_is_introduced ;
var bool: aux22194_BOOL:: var_is_introduced ;
var bool: aux22195_BOOL:: var_is_introduced ;
var {0,1}: aux22195_INTEGER :: var_is_introduced ;
var 3..60: aux22196:: var_is_introduced ;
var bool: aux22197_BOOL:: var_is_introduced ;
var bool: aux22198_BOOL:: var_is_introduced ;
var bool: aux22199_BOOL:: var_is_introduced ;
var {0,1}: aux22199_INTEGER :: var_is_introduced ;
var 4..61: aux22200:: var_is_introduced ;
var bool: aux22201_BOOL:: var_is_introduced ;
var bool: aux22202_BOOL:: var_is_introduced ;
var bool: aux22203_BOOL:: var_is_introduced ;
var {0,1}: aux22203_INTEGER :: var_is_introduced ;
var 3..60: aux22204:: var_is_introduced ;
var bool: aux22205_BOOL:: var_is_introduced ;
var bool: aux22206_BOOL:: var_is_introduced ;
var bool: aux22207_BOOL:: var_is_introduced ;
var {0,1}: aux22207_INTEGER :: var_is_introduced ;
var 3..60: aux22208:: var_is_introduced ;
var bool: aux22209_BOOL:: var_is_introduced ;
var bool: aux22210_BOOL:: var_is_introduced ;
var bool: aux22211_BOOL:: var_is_introduced ;
var {0,1}: aux22211_INTEGER :: var_is_introduced ;
var 3..60: aux22212:: var_is_introduced ;
var bool: aux22213_BOOL:: var_is_introduced ;
var bool: aux22214_BOOL:: var_is_introduced ;
var bool: aux22215_BOOL:: var_is_introduced ;
var {0,1}: aux22215_INTEGER :: var_is_introduced ;
var 5..62: aux22216:: var_is_introduced ;
var bool: aux22217_BOOL:: var_is_introduced ;
var bool: aux22218_BOOL:: var_is_introduced ;
var bool: aux22219_BOOL:: var_is_introduced ;
var {0,1}: aux22219_INTEGER :: var_is_introduced ;
var 3..60: aux22220:: var_is_introduced ;
var bool: aux22221_BOOL:: var_is_introduced ;
var {0,1}: aux22221_INTEGER :: var_is_introduced ;
var 2..59: aux22222:: var_is_introduced ;
var bool: aux22223_BOOL:: var_is_introduced ;
var bool: aux22224_BOOL:: var_is_introduced ;
var bool: aux22225_BOOL:: var_is_introduced ;
var {0,1}: aux22225_INTEGER :: var_is_introduced ;
var 2..59: aux22226:: var_is_introduced ;
var bool: aux22227_BOOL:: var_is_introduced ;
var bool: aux22228_BOOL:: var_is_introduced ;
var bool: aux22229_BOOL:: var_is_introduced ;
var {0,1}: aux22229_INTEGER :: var_is_introduced ;
var 3..60: aux22230:: var_is_introduced ;
var bool: aux22231_BOOL:: var_is_introduced ;
var bool: aux22232_BOOL:: var_is_introduced ;
var bool: aux22233_BOOL:: var_is_introduced ;
var {0,1}: aux22233_INTEGER :: var_is_introduced ;
var 1..58: aux22234:: var_is_introduced ;
var bool: aux22235_BOOL:: var_is_introduced ;
var bool: aux22236_BOOL:: var_is_introduced ;
var bool: aux22237_BOOL:: var_is_introduced ;
var {0,1}: aux22237_INTEGER :: var_is_introduced ;
var 4..61: aux22238:: var_is_introduced ;
var bool: aux22239_BOOL:: var_is_introduced ;
var bool: aux22240_BOOL:: var_is_introduced ;
var bool: aux22241_BOOL:: var_is_introduced ;
var {0,1}: aux22241_INTEGER :: var_is_introduced ;
var 3..60: aux22242:: var_is_introduced ;
var bool: aux22243_BOOL:: var_is_introduced ;
var bool: aux22244_BOOL:: var_is_introduced ;
var bool: aux22245_BOOL:: var_is_introduced ;
var {0,1}: aux22245_INTEGER :: var_is_introduced ;
var 3..60: aux22246:: var_is_introduced ;
var bool: aux22247_BOOL:: var_is_introduced ;
var bool: aux22248_BOOL:: var_is_introduced ;
var bool: aux22249_BOOL:: var_is_introduced ;
var {0,1}: aux22249_INTEGER :: var_is_introduced ;
var 3..60: aux22250:: var_is_introduced ;
var bool: aux22251_BOOL:: var_is_introduced ;
var bool: aux22252_BOOL:: var_is_introduced ;
var bool: aux22253_BOOL:: var_is_introduced ;
var {0,1}: aux22253_INTEGER :: var_is_introduced ;
var 5..62: aux22254:: var_is_introduced ;
var bool: aux22255_BOOL:: var_is_introduced ;
var bool: aux22256_BOOL:: var_is_introduced ;
var bool: aux22257_BOOL:: var_is_introduced ;
var {0,1}: aux22257_INTEGER :: var_is_introduced ;
var 3..60: aux22258:: var_is_introduced ;
var bool: aux22259_BOOL:: var_is_introduced ;
var {0,1}: aux22259_INTEGER :: var_is_introduced ;
var 2..59: aux22260:: var_is_introduced ;
var bool: aux22261_BOOL:: var_is_introduced ;
var bool: aux22262_BOOL:: var_is_introduced ;
var bool: aux22263_BOOL:: var_is_introduced ;
var {0,1}: aux22263_INTEGER :: var_is_introduced ;
var 3..60: aux22264:: var_is_introduced ;
var bool: aux22265_BOOL:: var_is_introduced ;
var bool: aux22266_BOOL:: var_is_introduced ;
var bool: aux22267_BOOL:: var_is_introduced ;
var {0,1}: aux22267_INTEGER :: var_is_introduced ;
var 1..58: aux22268:: var_is_introduced ;
var bool: aux22269_BOOL:: var_is_introduced ;
var bool: aux22270_BOOL:: var_is_introduced ;
var bool: aux22271_BOOL:: var_is_introduced ;
var {0,1}: aux22271_INTEGER :: var_is_introduced ;
var 3..60: aux22272:: var_is_introduced ;
var bool: aux22273_BOOL:: var_is_introduced ;
var bool: aux22274_BOOL:: var_is_introduced ;
var bool: aux22275_BOOL:: var_is_introduced ;
var {0,1}: aux22275_INTEGER :: var_is_introduced ;
var 4..61: aux22276:: var_is_introduced ;
var bool: aux22277_BOOL:: var_is_introduced ;
var bool: aux22278_BOOL:: var_is_introduced ;
var bool: aux22279_BOOL:: var_is_introduced ;
var {0,1}: aux22279_INTEGER :: var_is_introduced ;
var 3..60: aux22280:: var_is_introduced ;
var bool: aux22281_BOOL:: var_is_introduced ;
var bool: aux22282_BOOL:: var_is_introduced ;
var bool: aux22283_BOOL:: var_is_introduced ;
var {0,1}: aux22283_INTEGER :: var_is_introduced ;
var 3..60: aux22284:: var_is_introduced ;
var bool: aux22285_BOOL:: var_is_introduced ;
var bool: aux22286_BOOL:: var_is_introduced ;
var bool: aux22287_BOOL:: var_is_introduced ;
var {0,1}: aux22287_INTEGER :: var_is_introduced ;
var 3..60: aux22288:: var_is_introduced ;
var bool: aux22289_BOOL:: var_is_introduced ;
var bool: aux22290_BOOL:: var_is_introduced ;
var bool: aux22291_BOOL:: var_is_introduced ;
var {0,1}: aux22291_INTEGER :: var_is_introduced ;
var 5..62: aux22292:: var_is_introduced ;
var bool: aux22293_BOOL:: var_is_introduced ;
var bool: aux22294_BOOL:: var_is_introduced ;
var bool: aux22295_BOOL:: var_is_introduced ;
var {0,1}: aux22295_INTEGER :: var_is_introduced ;
var 2..59: aux22296:: var_is_introduced ;
var bool: aux22297_BOOL:: var_is_introduced ;
var {0,1}: aux22297_INTEGER :: var_is_introduced ;
var 2..59: aux22298:: var_is_introduced ;
var bool: aux22299_BOOL:: var_is_introduced ;
var bool: aux22300_BOOL:: var_is_introduced ;
var bool: aux22301_BOOL:: var_is_introduced ;
var {0,1}: aux22301_INTEGER :: var_is_introduced ;
var 2..59: aux22302:: var_is_introduced ;
var bool: aux22303_BOOL:: var_is_introduced ;
var bool: aux22304_BOOL:: var_is_introduced ;
var bool: aux22305_BOOL:: var_is_introduced ;
var {0,1}: aux22305_INTEGER :: var_is_introduced ;
var 3..60: aux22306:: var_is_introduced ;
var bool: aux22307_BOOL:: var_is_introduced ;
var bool: aux22308_BOOL:: var_is_introduced ;
var bool: aux22309_BOOL:: var_is_introduced ;
var {0,1}: aux22309_INTEGER :: var_is_introduced ;
var 1..58: aux22310:: var_is_introduced ;
var bool: aux22311_BOOL:: var_is_introduced ;
var bool: aux22312_BOOL:: var_is_introduced ;
var bool: aux22313_BOOL:: var_is_introduced ;
var {0,1}: aux22313_INTEGER :: var_is_introduced ;
var 3..60: aux22314:: var_is_introduced ;
var bool: aux22315_BOOL:: var_is_introduced ;
var bool: aux22316_BOOL:: var_is_introduced ;
var bool: aux22317_BOOL:: var_is_introduced ;
var {0,1}: aux22317_INTEGER :: var_is_introduced ;
var 4..61: aux22318:: var_is_introduced ;
var bool: aux22319_BOOL:: var_is_introduced ;
var bool: aux22320_BOOL:: var_is_introduced ;
var bool: aux22321_BOOL:: var_is_introduced ;
var {0,1}: aux22321_INTEGER :: var_is_introduced ;
var 3..60: aux22322:: var_is_introduced ;
var bool: aux22323_BOOL:: var_is_introduced ;
var bool: aux22324_BOOL:: var_is_introduced ;
var bool: aux22325_BOOL:: var_is_introduced ;
var {0,1}: aux22325_INTEGER :: var_is_introduced ;
var 3..60: aux22326:: var_is_introduced ;
var bool: aux22327_BOOL:: var_is_introduced ;
var bool: aux22328_BOOL:: var_is_introduced ;
var bool: aux22329_BOOL:: var_is_introduced ;
var {0,1}: aux22329_INTEGER :: var_is_introduced ;
var 3..60: aux22330:: var_is_introduced ;
var bool: aux22331_BOOL:: var_is_introduced ;
var bool: aux22332_BOOL:: var_is_introduced ;
var bool: aux22333_BOOL:: var_is_introduced ;
var {0,1}: aux22333_INTEGER :: var_is_introduced ;
var 5..62: aux22334:: var_is_introduced ;
var bool: aux22335_BOOL:: var_is_introduced ;
var {0,1}: aux22335_INTEGER :: var_is_introduced ;
var 2..59: aux22336:: var_is_introduced ;
var bool: aux22337_BOOL:: var_is_introduced ;
var bool: aux22338_BOOL:: var_is_introduced ;
var bool: aux22339_BOOL:: var_is_introduced ;
var {0,1}: aux22339_INTEGER :: var_is_introduced ;
var 2..59: aux22340:: var_is_introduced ;
var bool: aux22341_BOOL:: var_is_introduced ;
var bool: aux22342_BOOL:: var_is_introduced ;
var bool: aux22343_BOOL:: var_is_introduced ;
var {0,1}: aux22343_INTEGER :: var_is_introduced ;
var 3..60: aux22344:: var_is_introduced ;
var bool: aux22345_BOOL:: var_is_introduced ;
var bool: aux22346_BOOL:: var_is_introduced ;
var bool: aux22347_BOOL:: var_is_introduced ;
var {0,1}: aux22347_INTEGER :: var_is_introduced ;
var 1..58: aux22348:: var_is_introduced ;
var bool: aux22349_BOOL:: var_is_introduced ;
var bool: aux22350_BOOL:: var_is_introduced ;
var bool: aux22351_BOOL:: var_is_introduced ;
var {0,1}: aux22351_INTEGER :: var_is_introduced ;
var 3..60: aux22352:: var_is_introduced ;
var bool: aux22353_BOOL:: var_is_introduced ;
var bool: aux22354_BOOL:: var_is_introduced ;
var bool: aux22355_BOOL:: var_is_introduced ;
var {0,1}: aux22355_INTEGER :: var_is_introduced ;
var 4..61: aux22356:: var_is_introduced ;
var bool: aux22357_BOOL:: var_is_introduced ;
var bool: aux22358_BOOL:: var_is_introduced ;
var bool: aux22359_BOOL:: var_is_introduced ;
var {0,1}: aux22359_INTEGER :: var_is_introduced ;
var 3..60: aux22360:: var_is_introduced ;
var bool: aux22361_BOOL:: var_is_introduced ;
var bool: aux22362_BOOL:: var_is_introduced ;
var bool: aux22363_BOOL:: var_is_introduced ;
var {0,1}: aux22363_INTEGER :: var_is_introduced ;
var 3..60: aux22364:: var_is_introduced ;
var bool: aux22365_BOOL:: var_is_introduced ;
var bool: aux22366_BOOL:: var_is_introduced ;
var bool: aux22367_BOOL:: var_is_introduced ;
var {0,1}: aux22367_INTEGER :: var_is_introduced ;
var 5..62: aux22368:: var_is_introduced ;
var bool: aux22369_BOOL:: var_is_introduced ;
var bool: aux22370_BOOL:: var_is_introduced ;
var bool: aux22371_BOOL:: var_is_introduced ;
var {0,1}: aux22371_INTEGER :: var_is_introduced ;
var 3..60: aux22372:: var_is_introduced ;
var bool: aux22373_BOOL:: var_is_introduced ;
var {0,1}: aux22373_INTEGER :: var_is_introduced ;
var 2..59: aux22374:: var_is_introduced ;
var bool: aux22375_BOOL:: var_is_introduced ;
var bool: aux22376_BOOL:: var_is_introduced ;
var bool: aux22377_BOOL:: var_is_introduced ;
var {0,1}: aux22377_INTEGER :: var_is_introduced ;
var 2..59: aux22378:: var_is_introduced ;
var bool: aux22379_BOOL:: var_is_introduced ;
var bool: aux22380_BOOL:: var_is_introduced ;
var bool: aux22381_BOOL:: var_is_introduced ;
var {0,1}: aux22381_INTEGER :: var_is_introduced ;
var 3..60: aux22382:: var_is_introduced ;
var bool: aux22383_BOOL:: var_is_introduced ;
var bool: aux22384_BOOL:: var_is_introduced ;
var bool: aux22385_BOOL:: var_is_introduced ;
var {0,1}: aux22385_INTEGER :: var_is_introduced ;
var 1..58: aux22386:: var_is_introduced ;
var bool: aux22387_BOOL:: var_is_introduced ;
var bool: aux22388_BOOL:: var_is_introduced ;
var bool: aux22389_BOOL:: var_is_introduced ;
var {0,1}: aux22389_INTEGER :: var_is_introduced ;
var 3..60: aux22390:: var_is_introduced ;
var bool: aux22391_BOOL:: var_is_introduced ;
var bool: aux22392_BOOL:: var_is_introduced ;
var bool: aux22393_BOOL:: var_is_introduced ;
var {0,1}: aux22393_INTEGER :: var_is_introduced ;
var 4..61: aux22394:: var_is_introduced ;
var bool: aux22395_BOOL:: var_is_introduced ;
var bool: aux22396_BOOL:: var_is_introduced ;
var bool: aux22397_BOOL:: var_is_introduced ;
var {0,1}: aux22397_INTEGER :: var_is_introduced ;
var 3..60: aux22398:: var_is_introduced ;
var bool: aux22399_BOOL:: var_is_introduced ;
var bool: aux22400_BOOL:: var_is_introduced ;
var bool: aux22401_BOOL:: var_is_introduced ;
var {0,1}: aux22401_INTEGER :: var_is_introduced ;
var 3..60: aux22402:: var_is_introduced ;
var bool: aux22403_BOOL:: var_is_introduced ;
var bool: aux22404_BOOL:: var_is_introduced ;
var bool: aux22405_BOOL:: var_is_introduced ;
var {0,1}: aux22405_INTEGER :: var_is_introduced ;
var 5..62: aux22406:: var_is_introduced ;
var bool: aux22407_BOOL:: var_is_introduced ;
var bool: aux22408_BOOL:: var_is_introduced ;
var bool: aux22409_BOOL:: var_is_introduced ;
var {0,1}: aux22409_INTEGER :: var_is_introduced ;
var 3..60: aux22410:: var_is_introduced ;
var bool: aux22411_BOOL:: var_is_introduced ;
var {0,1}: aux22411_INTEGER :: var_is_introduced ;
var 2..59: aux22412:: var_is_introduced ;
var bool: aux22413_BOOL:: var_is_introduced ;
var bool: aux22414_BOOL:: var_is_introduced ;
var bool: aux22415_BOOL:: var_is_introduced ;
var {0,1}: aux22415_INTEGER :: var_is_introduced ;
var 2..59: aux22416:: var_is_introduced ;
var bool: aux22417_BOOL:: var_is_introduced ;
var bool: aux22418_BOOL:: var_is_introduced ;
var bool: aux22419_BOOL:: var_is_introduced ;
var {0,1}: aux22419_INTEGER :: var_is_introduced ;
var 3..60: aux22420:: var_is_introduced ;
var bool: aux22421_BOOL:: var_is_introduced ;
var bool: aux22422_BOOL:: var_is_introduced ;
var bool: aux22423_BOOL:: var_is_introduced ;
var {0,1}: aux22423_INTEGER :: var_is_introduced ;
var 3..60: aux22424:: var_is_introduced ;
var bool: aux22425_BOOL:: var_is_introduced ;
var bool: aux22426_BOOL:: var_is_introduced ;
var bool: aux22427_BOOL:: var_is_introduced ;
var {0,1}: aux22427_INTEGER :: var_is_introduced ;
var 4..61: aux22428:: var_is_introduced ;
var bool: aux22429_BOOL:: var_is_introduced ;
var bool: aux22430_BOOL:: var_is_introduced ;
var bool: aux22431_BOOL:: var_is_introduced ;
var {0,1}: aux22431_INTEGER :: var_is_introduced ;
var 3..60: aux22432:: var_is_introduced ;
var bool: aux22433_BOOL:: var_is_introduced ;
var bool: aux22434_BOOL:: var_is_introduced ;
var bool: aux22435_BOOL:: var_is_introduced ;
var {0,1}: aux22435_INTEGER :: var_is_introduced ;
var 3..60: aux22436:: var_is_introduced ;
var bool: aux22437_BOOL:: var_is_introduced ;
var bool: aux22438_BOOL:: var_is_introduced ;
var bool: aux22439_BOOL:: var_is_introduced ;
var {0,1}: aux22439_INTEGER :: var_is_introduced ;
var 3..60: aux22440:: var_is_introduced ;
var bool: aux22441_BOOL:: var_is_introduced ;
var bool: aux22442_BOOL:: var_is_introduced ;
var bool: aux22443_BOOL:: var_is_introduced ;
var {0,1}: aux22443_INTEGER :: var_is_introduced ;
var 5..62: aux22444:: var_is_introduced ;
var bool: aux22445_BOOL:: var_is_introduced ;
var bool: aux22446_BOOL:: var_is_introduced ;
var bool: aux22447_BOOL:: var_is_introduced ;
var {0,1}: aux22447_INTEGER :: var_is_introduced ;
var 1..58: aux22448:: var_is_introduced ;
var bool: aux22449_BOOL:: var_is_introduced ;
var {0,1}: aux22449_INTEGER :: var_is_introduced ;
var 2..59: aux22450:: var_is_introduced ;
var bool: aux22451_BOOL:: var_is_introduced ;
var bool: aux22452_BOOL:: var_is_introduced ;
var bool: aux22453_BOOL:: var_is_introduced ;
var {0,1}: aux22453_INTEGER :: var_is_introduced ;
var 2..59: aux22454:: var_is_introduced ;
var bool: aux22455_BOOL:: var_is_introduced ;
var bool: aux22456_BOOL:: var_is_introduced ;
var bool: aux22457_BOOL:: var_is_introduced ;
var {0,1}: aux22457_INTEGER :: var_is_introduced ;
var 3..60: aux22458:: var_is_introduced ;
var bool: aux22459_BOOL:: var_is_introduced ;
var bool: aux22460_BOOL:: var_is_introduced ;
var bool: aux22461_BOOL:: var_is_introduced ;
var {0,1}: aux22461_INTEGER :: var_is_introduced ;
var 1..58: aux22462:: var_is_introduced ;
var bool: aux22463_BOOL:: var_is_introduced ;
var bool: aux22464_BOOL:: var_is_introduced ;
var bool: aux22465_BOOL:: var_is_introduced ;
var {0,1}: aux22465_INTEGER :: var_is_introduced ;
var 3..60: aux22466:: var_is_introduced ;
var bool: aux22467_BOOL:: var_is_introduced ;
var bool: aux22468_BOOL:: var_is_introduced ;
var bool: aux22469_BOOL:: var_is_introduced ;
var {0,1}: aux22469_INTEGER :: var_is_introduced ;
var 4..61: aux22470:: var_is_introduced ;
var bool: aux22471_BOOL:: var_is_introduced ;
var bool: aux22472_BOOL:: var_is_introduced ;
var bool: aux22473_BOOL:: var_is_introduced ;
var {0,1}: aux22473_INTEGER :: var_is_introduced ;
var 3..60: aux22474:: var_is_introduced ;
var bool: aux22475_BOOL:: var_is_introduced ;
var bool: aux22476_BOOL:: var_is_introduced ;
var bool: aux22477_BOOL:: var_is_introduced ;
var {0,1}: aux22477_INTEGER :: var_is_introduced ;
var 3..60: aux22478:: var_is_introduced ;
var bool: aux22479_BOOL:: var_is_introduced ;
var bool: aux22480_BOOL:: var_is_introduced ;
var bool: aux22481_BOOL:: var_is_introduced ;
var {0,1}: aux22481_INTEGER :: var_is_introduced ;
var 5..62: aux22482:: var_is_introduced ;
var bool: aux22483_BOOL:: var_is_introduced ;
var bool: aux22484_BOOL:: var_is_introduced ;
var bool: aux22485_BOOL:: var_is_introduced ;
var {0,1}: aux22485_INTEGER :: var_is_introduced ;
var 3..60: aux22486:: var_is_introduced ;
var bool: aux22487_BOOL:: var_is_introduced ;
var {0,1}: aux22487_INTEGER :: var_is_introduced ;
var 2..59: aux22488:: var_is_introduced ;
var bool: aux22489_BOOL:: var_is_introduced ;
var bool: aux22490_BOOL:: var_is_introduced ;
var bool: aux22491_BOOL:: var_is_introduced ;
var {0,1}: aux22491_INTEGER :: var_is_introduced ;
var 2..59: aux22492:: var_is_introduced ;
var bool: aux22493_BOOL:: var_is_introduced ;
var bool: aux22494_BOOL:: var_is_introduced ;
var bool: aux22495_BOOL:: var_is_introduced ;
var {0,1}: aux22495_INTEGER :: var_is_introduced ;
var 2..59: aux22496:: var_is_introduced ;
var bool: aux22497_BOOL:: var_is_introduced ;
var bool: aux22498_BOOL:: var_is_introduced ;
var bool: aux22499_BOOL:: var_is_introduced ;
var {0,1}: aux22499_INTEGER :: var_is_introduced ;
var 1..58: aux22500:: var_is_introduced ;
var bool: aux22501_BOOL:: var_is_introduced ;
var bool: aux22502_BOOL:: var_is_introduced ;
var bool: aux22503_BOOL:: var_is_introduced ;
var {0,1}: aux22503_INTEGER :: var_is_introduced ;
var 4..61: aux22504:: var_is_introduced ;
var bool: aux22505_BOOL:: var_is_introduced ;
var bool: aux22506_BOOL:: var_is_introduced ;
var bool: aux22507_BOOL:: var_is_introduced ;
var {0,1}: aux22507_INTEGER :: var_is_introduced ;
var 2..59: aux22508:: var_is_introduced ;
var bool: aux22509_BOOL:: var_is_introduced ;
var bool: aux22510_BOOL:: var_is_introduced ;
var bool: aux22511_BOOL:: var_is_introduced ;
var {0,1}: aux22511_INTEGER :: var_is_introduced ;
var 3..60: aux22512:: var_is_introduced ;
var bool: aux22513_BOOL:: var_is_introduced ;
var bool: aux22514_BOOL:: var_is_introduced ;
var bool: aux22515_BOOL:: var_is_introduced ;
var {0,1}: aux22515_INTEGER :: var_is_introduced ;
var 3..60: aux22516:: var_is_introduced ;
var bool: aux22517_BOOL:: var_is_introduced ;
var bool: aux22518_BOOL:: var_is_introduced ;
var bool: aux22519_BOOL:: var_is_introduced ;
var {0,1}: aux22519_INTEGER :: var_is_introduced ;
var 2..59: aux22520:: var_is_introduced ;
var bool: aux22521_BOOL:: var_is_introduced ;
var bool: aux22522_BOOL:: var_is_introduced ;
var bool: aux22523_BOOL:: var_is_introduced ;
var {0,1}: aux22523_INTEGER :: var_is_introduced ;
var 4..61: aux22524:: var_is_introduced ;
var bool: aux22525_BOOL:: var_is_introduced ;
var bool: aux22526_BOOL:: var_is_introduced ;
var bool: aux22527_BOOL:: var_is_introduced ;
var {0,1}: aux22527_INTEGER :: var_is_introduced ;
var 4..61: aux22528:: var_is_introduced ;
var bool: aux22529_BOOL:: var_is_introduced ;
var bool: aux22530_BOOL:: var_is_introduced ;
var bool: aux22531_BOOL:: var_is_introduced ;
var {0,1}: aux22531_INTEGER :: var_is_introduced ;
var 4..61: aux22532:: var_is_introduced ;
var bool: aux22533_BOOL:: var_is_introduced ;
var {0,1}: aux22533_INTEGER :: var_is_introduced ;
var 2..59: aux22534:: var_is_introduced ;
var bool: aux22535_BOOL:: var_is_introduced ;
var bool: aux22536_BOOL:: var_is_introduced ;
var bool: aux22537_BOOL:: var_is_introduced ;
var {0,1}: aux22537_INTEGER :: var_is_introduced ;
var 2..59: aux22538:: var_is_introduced ;
var bool: aux22539_BOOL:: var_is_introduced ;
var bool: aux22540_BOOL:: var_is_introduced ;
var bool: aux22541_BOOL:: var_is_introduced ;
var {0,1}: aux22541_INTEGER :: var_is_introduced ;
var 2..59: aux22542:: var_is_introduced ;
var bool: aux22543_BOOL:: var_is_introduced ;
var bool: aux22544_BOOL:: var_is_introduced ;
var bool: aux22545_BOOL:: var_is_introduced ;
var {0,1}: aux22545_INTEGER :: var_is_introduced ;
var 1..58: aux22546:: var_is_introduced ;
var bool: aux22547_BOOL:: var_is_introduced ;
var bool: aux22548_BOOL:: var_is_introduced ;
var bool: aux22549_BOOL:: var_is_introduced ;
var {0,1}: aux22549_INTEGER :: var_is_introduced ;
var 4..61: aux22550:: var_is_introduced ;
var bool: aux22551_BOOL:: var_is_introduced ;
var bool: aux22552_BOOL:: var_is_introduced ;
var bool: aux22553_BOOL:: var_is_introduced ;
var {0,1}: aux22553_INTEGER :: var_is_introduced ;
var 2..59: aux22554:: var_is_introduced ;
var bool: aux22555_BOOL:: var_is_introduced ;
var bool: aux22556_BOOL:: var_is_introduced ;
var bool: aux22557_BOOL:: var_is_introduced ;
var {0,1}: aux22557_INTEGER :: var_is_introduced ;
var 3..60: aux22558:: var_is_introduced ;
var bool: aux22559_BOOL:: var_is_introduced ;
var bool: aux22560_BOOL:: var_is_introduced ;
var bool: aux22561_BOOL:: var_is_introduced ;
var {0,1}: aux22561_INTEGER :: var_is_introduced ;
var 3..60: aux22562:: var_is_introduced ;
var bool: aux22563_BOOL:: var_is_introduced ;
var bool: aux22564_BOOL:: var_is_introduced ;
var bool: aux22565_BOOL:: var_is_introduced ;
var {0,1}: aux22565_INTEGER :: var_is_introduced ;
var 2..59: aux22566:: var_is_introduced ;
var bool: aux22567_BOOL:: var_is_introduced ;
var bool: aux22568_BOOL:: var_is_introduced ;
var bool: aux22569_BOOL:: var_is_introduced ;
var {0,1}: aux22569_INTEGER :: var_is_introduced ;
var 4..61: aux22570:: var_is_introduced ;
var bool: aux22571_BOOL:: var_is_introduced ;
var bool: aux22572_BOOL:: var_is_introduced ;
var bool: aux22573_BOOL:: var_is_introduced ;
var {0,1}: aux22573_INTEGER :: var_is_introduced ;
var 4..61: aux22574:: var_is_introduced ;
var bool: aux22575_BOOL:: var_is_introduced ;
var bool: aux22576_BOOL:: var_is_introduced ;
var bool: aux22577_BOOL:: var_is_introduced ;
var {0,1}: aux22577_INTEGER :: var_is_introduced ;
var 4..61: aux22578:: var_is_introduced ;
var bool: aux22579_BOOL:: var_is_introduced ;
var {0,1}: aux22579_INTEGER :: var_is_introduced ;
var 2..59: aux22580:: var_is_introduced ;
var bool: aux22581_BOOL:: var_is_introduced ;
var bool: aux22582_BOOL:: var_is_introduced ;
var bool: aux22583_BOOL:: var_is_introduced ;
var {0,1}: aux22583_INTEGER :: var_is_introduced ;
var 2..59: aux22584:: var_is_introduced ;
var bool: aux22585_BOOL:: var_is_introduced ;
var bool: aux22586_BOOL:: var_is_introduced ;
var bool: aux22587_BOOL:: var_is_introduced ;
var {0,1}: aux22587_INTEGER :: var_is_introduced ;
var 1..58: aux22588:: var_is_introduced ;
var bool: aux22589_BOOL:: var_is_introduced ;
var bool: aux22590_BOOL:: var_is_introduced ;
var bool: aux22591_BOOL:: var_is_introduced ;
var {0,1}: aux22591_INTEGER :: var_is_introduced ;
var 4..61: aux22592:: var_is_introduced ;
var bool: aux22593_BOOL:: var_is_introduced ;
var bool: aux22594_BOOL:: var_is_introduced ;
var bool: aux22595_BOOL:: var_is_introduced ;
var {0,1}: aux22595_INTEGER :: var_is_introduced ;
var 4..61: aux22596:: var_is_introduced ;
var bool: aux22597_BOOL:: var_is_introduced ;
var bool: aux22598_BOOL:: var_is_introduced ;
var bool: aux22599_BOOL:: var_is_introduced ;
var {0,1}: aux22599_INTEGER :: var_is_introduced ;
var 2..59: aux22600:: var_is_introduced ;
var bool: aux22601_BOOL:: var_is_introduced ;
var bool: aux22602_BOOL:: var_is_introduced ;
var bool: aux22603_BOOL:: var_is_introduced ;
var {0,1}: aux22603_INTEGER :: var_is_introduced ;
var 3..60: aux22604:: var_is_introduced ;
var bool: aux22605_BOOL:: var_is_introduced ;
var bool: aux22606_BOOL:: var_is_introduced ;
var bool: aux22607_BOOL:: var_is_introduced ;
var {0,1}: aux22607_INTEGER :: var_is_introduced ;
var 3..60: aux22608:: var_is_introduced ;
var bool: aux22609_BOOL:: var_is_introduced ;
var bool: aux22610_BOOL:: var_is_introduced ;
var bool: aux22611_BOOL:: var_is_introduced ;
var {0,1}: aux22611_INTEGER :: var_is_introduced ;
var 2..59: aux22612:: var_is_introduced ;
var bool: aux22613_BOOL:: var_is_introduced ;
var bool: aux22614_BOOL:: var_is_introduced ;
var bool: aux22615_BOOL:: var_is_introduced ;
var {0,1}: aux22615_INTEGER :: var_is_introduced ;
var 4..61: aux22616:: var_is_introduced ;
var bool: aux22617_BOOL:: var_is_introduced ;
var bool: aux22618_BOOL:: var_is_introduced ;
var bool: aux22619_BOOL:: var_is_introduced ;
var {0,1}: aux22619_INTEGER :: var_is_introduced ;
var 4..61: aux22620:: var_is_introduced ;
var bool: aux22621_BOOL:: var_is_introduced ;
var bool: aux22622_BOOL:: var_is_introduced ;
var bool: aux22623_BOOL:: var_is_introduced ;
var {0,1}: aux22623_INTEGER :: var_is_introduced ;
var 2..59: aux22624:: var_is_introduced ;
var bool: aux22625_BOOL:: var_is_introduced ;
var {0,1}: aux22625_INTEGER :: var_is_introduced ;
var 2..59: aux22626:: var_is_introduced ;
var bool: aux22627_BOOL:: var_is_introduced ;
var bool: aux22628_BOOL:: var_is_introduced ;
var bool: aux22629_BOOL:: var_is_introduced ;
var {0,1}: aux22629_INTEGER :: var_is_introduced ;
var 2..59: aux22630:: var_is_introduced ;
var bool: aux22631_BOOL:: var_is_introduced ;
var bool: aux22632_BOOL:: var_is_introduced ;
var bool: aux22633_BOOL:: var_is_introduced ;
var {0,1}: aux22633_INTEGER :: var_is_introduced ;
var 1..58: aux22634:: var_is_introduced ;
var bool: aux22635_BOOL:: var_is_introduced ;
var bool: aux22636_BOOL:: var_is_introduced ;
var bool: aux22637_BOOL:: var_is_introduced ;
var {0,1}: aux22637_INTEGER :: var_is_introduced ;
var 4..61: aux22638:: var_is_introduced ;
var bool: aux22639_BOOL:: var_is_introduced ;
var bool: aux22640_BOOL:: var_is_introduced ;
var bool: aux22641_BOOL:: var_is_introduced ;
var {0,1}: aux22641_INTEGER :: var_is_introduced ;
var 4..61: aux22642:: var_is_introduced ;
var bool: aux22643_BOOL:: var_is_introduced ;
var bool: aux22644_BOOL:: var_is_introduced ;
var bool: aux22645_BOOL:: var_is_introduced ;
var {0,1}: aux22645_INTEGER :: var_is_introduced ;
var 2..59: aux22646:: var_is_introduced ;
var bool: aux22647_BOOL:: var_is_introduced ;
var bool: aux22648_BOOL:: var_is_introduced ;
var bool: aux22649_BOOL:: var_is_introduced ;
var {0,1}: aux22649_INTEGER :: var_is_introduced ;
var 3..60: aux22650:: var_is_introduced ;
var bool: aux22651_BOOL:: var_is_introduced ;
var bool: aux22652_BOOL:: var_is_introduced ;
var bool: aux22653_BOOL:: var_is_introduced ;
var {0,1}: aux22653_INTEGER :: var_is_introduced ;
var 3..60: aux22654:: var_is_introduced ;
var bool: aux22655_BOOL:: var_is_introduced ;
var bool: aux22656_BOOL:: var_is_introduced ;
var bool: aux22657_BOOL:: var_is_introduced ;
var {0,1}: aux22657_INTEGER :: var_is_introduced ;
var 2..59: aux22658:: var_is_introduced ;
var bool: aux22659_BOOL:: var_is_introduced ;
var bool: aux22660_BOOL:: var_is_introduced ;
var bool: aux22661_BOOL:: var_is_introduced ;
var {0,1}: aux22661_INTEGER :: var_is_introduced ;
var 4..61: aux22662:: var_is_introduced ;
var bool: aux22663_BOOL:: var_is_introduced ;
var bool: aux22664_BOOL:: var_is_introduced ;
var bool: aux22665_BOOL:: var_is_introduced ;
var {0,1}: aux22665_INTEGER :: var_is_introduced ;
var 4..61: aux22666:: var_is_introduced ;
var bool: aux22667_BOOL:: var_is_introduced ;
var bool: aux22668_BOOL:: var_is_introduced ;
var bool: aux22669_BOOL:: var_is_introduced ;
var {0,1}: aux22669_INTEGER :: var_is_introduced ;
var 2..59: aux22670:: var_is_introduced ;
var bool: aux22671_BOOL:: var_is_introduced ;
var {0,1}: aux22671_INTEGER :: var_is_introduced ;
var 2..59: aux22672:: var_is_introduced ;
var bool: aux22673_BOOL:: var_is_introduced ;
var bool: aux22674_BOOL:: var_is_introduced ;
var bool: aux22675_BOOL:: var_is_introduced ;
var {0,1}: aux22675_INTEGER :: var_is_introduced ;
var 2..59: aux22676:: var_is_introduced ;
var bool: aux22677_BOOL:: var_is_introduced ;
var bool: aux22678_BOOL:: var_is_introduced ;
var bool: aux22679_BOOL:: var_is_introduced ;
var {0,1}: aux22679_INTEGER :: var_is_introduced ;
var 1..58: aux22680:: var_is_introduced ;
var bool: aux22681_BOOL:: var_is_introduced ;
var bool: aux22682_BOOL:: var_is_introduced ;
var bool: aux22683_BOOL:: var_is_introduced ;
var {0,1}: aux22683_INTEGER :: var_is_introduced ;
var 4..61: aux22684:: var_is_introduced ;
var bool: aux22685_BOOL:: var_is_introduced ;
var bool: aux22686_BOOL:: var_is_introduced ;
var bool: aux22687_BOOL:: var_is_introduced ;
var {0,1}: aux22687_INTEGER :: var_is_introduced ;
var 4..61: aux22688:: var_is_introduced ;
var bool: aux22689_BOOL:: var_is_introduced ;
var bool: aux22690_BOOL:: var_is_introduced ;
var bool: aux22691_BOOL:: var_is_introduced ;
var {0,1}: aux22691_INTEGER :: var_is_introduced ;
var 2..59: aux22692:: var_is_introduced ;
var bool: aux22693_BOOL:: var_is_introduced ;
var bool: aux22694_BOOL:: var_is_introduced ;
var bool: aux22695_BOOL:: var_is_introduced ;
var {0,1}: aux22695_INTEGER :: var_is_introduced ;
var 3..60: aux22696:: var_is_introduced ;
var bool: aux22697_BOOL:: var_is_introduced ;
var bool: aux22698_BOOL:: var_is_introduced ;
var bool: aux22699_BOOL:: var_is_introduced ;
var {0,1}: aux22699_INTEGER :: var_is_introduced ;
var 3..60: aux22700:: var_is_introduced ;
var bool: aux22701_BOOL:: var_is_introduced ;
var bool: aux22702_BOOL:: var_is_introduced ;
var bool: aux22703_BOOL:: var_is_introduced ;
var {0,1}: aux22703_INTEGER :: var_is_introduced ;
var 2..59: aux22704:: var_is_introduced ;
var bool: aux22705_BOOL:: var_is_introduced ;
var bool: aux22706_BOOL:: var_is_introduced ;
var bool: aux22707_BOOL:: var_is_introduced ;
var {0,1}: aux22707_INTEGER :: var_is_introduced ;
var 4..61: aux22708:: var_is_introduced ;
var bool: aux22709_BOOL:: var_is_introduced ;
var bool: aux22710_BOOL:: var_is_introduced ;
var bool: aux22711_BOOL:: var_is_introduced ;
var {0,1}: aux22711_INTEGER :: var_is_introduced ;
var 4..61: aux22712:: var_is_introduced ;
var bool: aux22713_BOOL:: var_is_introduced ;
var bool: aux22714_BOOL:: var_is_introduced ;
var bool: aux22715_BOOL:: var_is_introduced ;
var {0,1}: aux22715_INTEGER :: var_is_introduced ;
var 2..59: aux22716:: var_is_introduced ;
var bool: aux22717_BOOL:: var_is_introduced ;
var {0,1}: aux22717_INTEGER :: var_is_introduced ;
var 2..59: aux22718:: var_is_introduced ;
var bool: aux22719_BOOL:: var_is_introduced ;
var bool: aux22720_BOOL:: var_is_introduced ;
var bool: aux22721_BOOL:: var_is_introduced ;
var {0,1}: aux22721_INTEGER :: var_is_introduced ;
var 2..59: aux22722:: var_is_introduced ;
var bool: aux22723_BOOL:: var_is_introduced ;
var bool: aux22724_BOOL:: var_is_introduced ;
var bool: aux22725_BOOL:: var_is_introduced ;
var {0,1}: aux22725_INTEGER :: var_is_introduced ;
var 2..59: aux22726:: var_is_introduced ;
var bool: aux22727_BOOL:: var_is_introduced ;
var bool: aux22728_BOOL:: var_is_introduced ;
var bool: aux22729_BOOL:: var_is_introduced ;
var {0,1}: aux22729_INTEGER :: var_is_introduced ;
var 1..58: aux22730:: var_is_introduced ;
var bool: aux22731_BOOL:: var_is_introduced ;
var bool: aux22732_BOOL:: var_is_introduced ;
var bool: aux22733_BOOL:: var_is_introduced ;
var {0,1}: aux22733_INTEGER :: var_is_introduced ;
var 4..61: aux22734:: var_is_introduced ;
var bool: aux22735_BOOL:: var_is_introduced ;
var bool: aux22736_BOOL:: var_is_introduced ;
var bool: aux22737_BOOL:: var_is_introduced ;
var {0,1}: aux22737_INTEGER :: var_is_introduced ;
var 4..61: aux22738:: var_is_introduced ;
var bool: aux22739_BOOL:: var_is_introduced ;
var bool: aux22740_BOOL:: var_is_introduced ;
var bool: aux22741_BOOL:: var_is_introduced ;
var {0,1}: aux22741_INTEGER :: var_is_introduced ;
var 2..59: aux22742:: var_is_introduced ;
var bool: aux22743_BOOL:: var_is_introduced ;
var bool: aux22744_BOOL:: var_is_introduced ;
var bool: aux22745_BOOL:: var_is_introduced ;
var {0,1}: aux22745_INTEGER :: var_is_introduced ;
var 3..60: aux22746:: var_is_introduced ;
var bool: aux22747_BOOL:: var_is_introduced ;
var bool: aux22748_BOOL:: var_is_introduced ;
var bool: aux22749_BOOL:: var_is_introduced ;
var {0,1}: aux22749_INTEGER :: var_is_introduced ;
var 3..60: aux22750:: var_is_introduced ;
var bool: aux22751_BOOL:: var_is_introduced ;
var bool: aux22752_BOOL:: var_is_introduced ;
var bool: aux22753_BOOL:: var_is_introduced ;
var {0,1}: aux22753_INTEGER :: var_is_introduced ;
var 2..59: aux22754:: var_is_introduced ;
var bool: aux22755_BOOL:: var_is_introduced ;
var bool: aux22756_BOOL:: var_is_introduced ;
var bool: aux22757_BOOL:: var_is_introduced ;
var {0,1}: aux22757_INTEGER :: var_is_introduced ;
var 4..61: aux22758:: var_is_introduced ;
var bool: aux22759_BOOL:: var_is_introduced ;
var bool: aux22760_BOOL:: var_is_introduced ;
var bool: aux22761_BOOL:: var_is_introduced ;
var {0,1}: aux22761_INTEGER :: var_is_introduced ;
var 4..61: aux22762:: var_is_introduced ;
var bool: aux22763_BOOL:: var_is_introduced ;
var {0,1}: aux22763_INTEGER :: var_is_introduced ;
var 2..59: aux22764:: var_is_introduced ;
var bool: aux22765_BOOL:: var_is_introduced ;
var bool: aux22766_BOOL:: var_is_introduced ;
var bool: aux22767_BOOL:: var_is_introduced ;
var {0,1}: aux22767_INTEGER :: var_is_introduced ;
var 2..59: aux22768:: var_is_introduced ;
var bool: aux22769_BOOL:: var_is_introduced ;
var bool: aux22770_BOOL:: var_is_introduced ;
var bool: aux22771_BOOL:: var_is_introduced ;
var {0,1}: aux22771_INTEGER :: var_is_introduced ;
var 2..59: aux22772:: var_is_introduced ;
var bool: aux22773_BOOL:: var_is_introduced ;
var bool: aux22774_BOOL:: var_is_introduced ;
var bool: aux22775_BOOL:: var_is_introduced ;
var {0,1}: aux22775_INTEGER :: var_is_introduced ;
var 1..58: aux22776:: var_is_introduced ;
var bool: aux22777_BOOL:: var_is_introduced ;
var bool: aux22778_BOOL:: var_is_introduced ;
var bool: aux22779_BOOL:: var_is_introduced ;
var {0,1}: aux22779_INTEGER :: var_is_introduced ;
var 4..61: aux22780:: var_is_introduced ;
var bool: aux22781_BOOL:: var_is_introduced ;
var bool: aux22782_BOOL:: var_is_introduced ;
var bool: aux22783_BOOL:: var_is_introduced ;
var {0,1}: aux22783_INTEGER :: var_is_introduced ;
var 4..61: aux22784:: var_is_introduced ;
var bool: aux22785_BOOL:: var_is_introduced ;
var bool: aux22786_BOOL:: var_is_introduced ;
var bool: aux22787_BOOL:: var_is_introduced ;
var {0,1}: aux22787_INTEGER :: var_is_introduced ;
var 2..59: aux22788:: var_is_introduced ;
var bool: aux22789_BOOL:: var_is_introduced ;
var bool: aux22790_BOOL:: var_is_introduced ;
var bool: aux22791_BOOL:: var_is_introduced ;
var {0,1}: aux22791_INTEGER :: var_is_introduced ;
var 3..60: aux22792:: var_is_introduced ;
var bool: aux22793_BOOL:: var_is_introduced ;
var bool: aux22794_BOOL:: var_is_introduced ;
var bool: aux22795_BOOL:: var_is_introduced ;
var {0,1}: aux22795_INTEGER :: var_is_introduced ;
var 2..59: aux22796:: var_is_introduced ;
var bool: aux22797_BOOL:: var_is_introduced ;
var bool: aux22798_BOOL:: var_is_introduced ;
var bool: aux22799_BOOL:: var_is_introduced ;
var {0,1}: aux22799_INTEGER :: var_is_introduced ;
var 4..61: aux22800:: var_is_introduced ;
var bool: aux22801_BOOL:: var_is_introduced ;
var bool: aux22802_BOOL:: var_is_introduced ;
var bool: aux22803_BOOL:: var_is_introduced ;
var {0,1}: aux22803_INTEGER :: var_is_introduced ;
var 4..61: aux22804:: var_is_introduced ;
var bool: aux22805_BOOL:: var_is_introduced ;
var bool: aux22806_BOOL:: var_is_introduced ;
var bool: aux22807_BOOL:: var_is_introduced ;
var {0,1}: aux22807_INTEGER :: var_is_introduced ;
var 3..60: aux22808:: var_is_introduced ;
var bool: aux22809_BOOL:: var_is_introduced ;
var {0,1}: aux22809_INTEGER :: var_is_introduced ;
var 2..59: aux22810:: var_is_introduced ;
var bool: aux22811_BOOL:: var_is_introduced ;
var bool: aux22812_BOOL:: var_is_introduced ;
var bool: aux22813_BOOL:: var_is_introduced ;
var {0,1}: aux22813_INTEGER :: var_is_introduced ;
var 2..59: aux22814:: var_is_introduced ;
var bool: aux22815_BOOL:: var_is_introduced ;
var bool: aux22816_BOOL:: var_is_introduced ;
var bool: aux22817_BOOL:: var_is_introduced ;
var {0,1}: aux22817_INTEGER :: var_is_introduced ;
var 2..59: aux22818:: var_is_introduced ;
var bool: aux22819_BOOL:: var_is_introduced ;
var bool: aux22820_BOOL:: var_is_introduced ;
var bool: aux22821_BOOL:: var_is_introduced ;
var {0,1}: aux22821_INTEGER :: var_is_introduced ;
var 1..58: aux22822:: var_is_introduced ;
var bool: aux22823_BOOL:: var_is_introduced ;
var bool: aux22824_BOOL:: var_is_introduced ;
var bool: aux22825_BOOL:: var_is_introduced ;
var {0,1}: aux22825_INTEGER :: var_is_introduced ;
var 4..61: aux22826:: var_is_introduced ;
var bool: aux22827_BOOL:: var_is_introduced ;
var bool: aux22828_BOOL:: var_is_introduced ;
var bool: aux22829_BOOL:: var_is_introduced ;
var {0,1}: aux22829_INTEGER :: var_is_introduced ;
var 4..61: aux22830:: var_is_introduced ;
var bool: aux22831_BOOL:: var_is_introduced ;
var bool: aux22832_BOOL:: var_is_introduced ;
var bool: aux22833_BOOL:: var_is_introduced ;
var {0,1}: aux22833_INTEGER :: var_is_introduced ;
var 3..60: aux22834:: var_is_introduced ;
var bool: aux22835_BOOL:: var_is_introduced ;
var bool: aux22836_BOOL:: var_is_introduced ;
var bool: aux22837_BOOL:: var_is_introduced ;
var {0,1}: aux22837_INTEGER :: var_is_introduced ;
var 3..60: aux22838:: var_is_introduced ;
var bool: aux22839_BOOL:: var_is_introduced ;
var bool: aux22840_BOOL:: var_is_introduced ;
var bool: aux22841_BOOL:: var_is_introduced ;
var {0,1}: aux22841_INTEGER :: var_is_introduced ;
var 2..59: aux22842:: var_is_introduced ;
var bool: aux22843_BOOL:: var_is_introduced ;
var bool: aux22844_BOOL:: var_is_introduced ;
var bool: aux22845_BOOL:: var_is_introduced ;
var {0,1}: aux22845_INTEGER :: var_is_introduced ;
var 4..61: aux22846:: var_is_introduced ;
var bool: aux22847_BOOL:: var_is_introduced ;
var bool: aux22848_BOOL:: var_is_introduced ;
var bool: aux22849_BOOL:: var_is_introduced ;
var {0,1}: aux22849_INTEGER :: var_is_introduced ;
var 4..61: aux22850:: var_is_introduced ;
var bool: aux22851_BOOL:: var_is_introduced ;
var bool: aux22852_BOOL:: var_is_introduced ;
var bool: aux22853_BOOL:: var_is_introduced ;
var {0,1}: aux22853_INTEGER :: var_is_introduced ;
var 2..59: aux22854:: var_is_introduced ;
var bool: aux22855_BOOL:: var_is_introduced ;
var {0,1}: aux22855_INTEGER :: var_is_introduced ;
var 2..59: aux22856:: var_is_introduced ;
var bool: aux22857_BOOL:: var_is_introduced ;
var bool: aux22858_BOOL:: var_is_introduced ;
var bool: aux22859_BOOL:: var_is_introduced ;
var {0,1}: aux22859_INTEGER :: var_is_introduced ;
var 2..59: aux22860:: var_is_introduced ;
var bool: aux22861_BOOL:: var_is_introduced ;
var bool: aux22862_BOOL:: var_is_introduced ;
var bool: aux22863_BOOL:: var_is_introduced ;
var {0,1}: aux22863_INTEGER :: var_is_introduced ;
var 2..59: aux22864:: var_is_introduced ;
var bool: aux22865_BOOL:: var_is_introduced ;
var bool: aux22866_BOOL:: var_is_introduced ;
var bool: aux22867_BOOL:: var_is_introduced ;
var {0,1}: aux22867_INTEGER :: var_is_introduced ;
var 1..58: aux22868:: var_is_introduced ;
var bool: aux22869_BOOL:: var_is_introduced ;
var bool: aux22870_BOOL:: var_is_introduced ;
var bool: aux22871_BOOL:: var_is_introduced ;
var {0,1}: aux22871_INTEGER :: var_is_introduced ;
var 4..61: aux22872:: var_is_introduced ;
var bool: aux22873_BOOL:: var_is_introduced ;
var bool: aux22874_BOOL:: var_is_introduced ;
var bool: aux22875_BOOL:: var_is_introduced ;
var {0,1}: aux22875_INTEGER :: var_is_introduced ;
var 4..61: aux22876:: var_is_introduced ;
var bool: aux22877_BOOL:: var_is_introduced ;
var bool: aux22878_BOOL:: var_is_introduced ;
var bool: aux22879_BOOL:: var_is_introduced ;
var {0,1}: aux22879_INTEGER :: var_is_introduced ;
var 2..59: aux22880:: var_is_introduced ;
var bool: aux22881_BOOL:: var_is_introduced ;
var bool: aux22882_BOOL:: var_is_introduced ;
var bool: aux22883_BOOL:: var_is_introduced ;
var {0,1}: aux22883_INTEGER :: var_is_introduced ;
var 3..60: aux22884:: var_is_introduced ;
var bool: aux22885_BOOL:: var_is_introduced ;
var bool: aux22886_BOOL:: var_is_introduced ;
var bool: aux22887_BOOL:: var_is_introduced ;
var {0,1}: aux22887_INTEGER :: var_is_introduced ;
var 2..59: aux22888:: var_is_introduced ;
var bool: aux22889_BOOL:: var_is_introduced ;
var bool: aux22890_BOOL:: var_is_introduced ;
var bool: aux22891_BOOL:: var_is_introduced ;
var {0,1}: aux22891_INTEGER :: var_is_introduced ;
var 4..61: aux22892:: var_is_introduced ;
var bool: aux22893_BOOL:: var_is_introduced ;
var bool: aux22894_BOOL:: var_is_introduced ;
var bool: aux22895_BOOL:: var_is_introduced ;
var {0,1}: aux22895_INTEGER :: var_is_introduced ;
var 4..61: aux22896:: var_is_introduced ;
var bool: aux22897_BOOL:: var_is_introduced ;
var bool: aux22898_BOOL:: var_is_introduced ;
var bool: aux22899_BOOL:: var_is_introduced ;
var {0,1}: aux22899_INTEGER :: var_is_introduced ;
var 3..60: aux22900:: var_is_introduced ;
var bool: aux22901_BOOL:: var_is_introduced ;
var {0,1}: aux22901_INTEGER :: var_is_introduced ;
var 2..59: aux22902:: var_is_introduced ;
var bool: aux22903_BOOL:: var_is_introduced ;
var bool: aux22904_BOOL:: var_is_introduced ;
var bool: aux22905_BOOL:: var_is_introduced ;
var {0,1}: aux22905_INTEGER :: var_is_introduced ;
var 2..59: aux22906:: var_is_introduced ;
var bool: aux22907_BOOL:: var_is_introduced ;
var bool: aux22908_BOOL:: var_is_introduced ;
var bool: aux22909_BOOL:: var_is_introduced ;
var {0,1}: aux22909_INTEGER :: var_is_introduced ;
var 2..59: aux22910:: var_is_introduced ;
var bool: aux22911_BOOL:: var_is_introduced ;
var bool: aux22912_BOOL:: var_is_introduced ;
var bool: aux22913_BOOL:: var_is_introduced ;
var {0,1}: aux22913_INTEGER :: var_is_introduced ;
var 4..61: aux22914:: var_is_introduced ;
var bool: aux22915_BOOL:: var_is_introduced ;
var bool: aux22916_BOOL:: var_is_introduced ;
var bool: aux22917_BOOL:: var_is_introduced ;
var {0,1}: aux22917_INTEGER :: var_is_introduced ;
var 4..61: aux22918:: var_is_introduced ;
var bool: aux22919_BOOL:: var_is_introduced ;
var bool: aux22920_BOOL:: var_is_introduced ;
var bool: aux22921_BOOL:: var_is_introduced ;
var {0,1}: aux22921_INTEGER :: var_is_introduced ;
var 2..59: aux22922:: var_is_introduced ;
var bool: aux22923_BOOL:: var_is_introduced ;
var bool: aux22924_BOOL:: var_is_introduced ;
var bool: aux22925_BOOL:: var_is_introduced ;
var {0,1}: aux22925_INTEGER :: var_is_introduced ;
var 3..60: aux22926:: var_is_introduced ;
var bool: aux22927_BOOL:: var_is_introduced ;
var bool: aux22928_BOOL:: var_is_introduced ;
var bool: aux22929_BOOL:: var_is_introduced ;
var {0,1}: aux22929_INTEGER :: var_is_introduced ;
var 3..60: aux22930:: var_is_introduced ;
var bool: aux22931_BOOL:: var_is_introduced ;
var bool: aux22932_BOOL:: var_is_introduced ;
var bool: aux22933_BOOL:: var_is_introduced ;
var {0,1}: aux22933_INTEGER :: var_is_introduced ;
var 2..59: aux22934:: var_is_introduced ;
var bool: aux22935_BOOL:: var_is_introduced ;
var bool: aux22936_BOOL:: var_is_introduced ;
var bool: aux22937_BOOL:: var_is_introduced ;
var {0,1}: aux22937_INTEGER :: var_is_introduced ;
var 4..61: aux22938:: var_is_introduced ;
var bool: aux22939_BOOL:: var_is_introduced ;
var bool: aux22940_BOOL:: var_is_introduced ;
var bool: aux22941_BOOL:: var_is_introduced ;
var {0,1}: aux22941_INTEGER :: var_is_introduced ;
var 4..61: aux22942:: var_is_introduced ;
var bool: aux22943_BOOL:: var_is_introduced ;
var bool: aux22944_BOOL:: var_is_introduced ;
var bool: aux22945_BOOL:: var_is_introduced ;
var {0,1}: aux22945_INTEGER :: var_is_introduced ;
var 1..58: aux22946:: var_is_introduced ;
var bool: aux22947_BOOL:: var_is_introduced ;
var {0,1}: aux22947_INTEGER :: var_is_introduced ;
var 2..59: aux22948:: var_is_introduced ;
var bool: aux22949_BOOL:: var_is_introduced ;
var bool: aux22950_BOOL:: var_is_introduced ;
var bool: aux22951_BOOL:: var_is_introduced ;
var {0,1}: aux22951_INTEGER :: var_is_introduced ;
var 2..59: aux22952:: var_is_introduced ;
var bool: aux22953_BOOL:: var_is_introduced ;
var bool: aux22954_BOOL:: var_is_introduced ;
var bool: aux22955_BOOL:: var_is_introduced ;
var {0,1}: aux22955_INTEGER :: var_is_introduced ;
var 2..59: aux22956:: var_is_introduced ;
var bool: aux22957_BOOL:: var_is_introduced ;
var bool: aux22958_BOOL:: var_is_introduced ;
var bool: aux22959_BOOL:: var_is_introduced ;
var {0,1}: aux22959_INTEGER :: var_is_introduced ;
var 1..58: aux22960:: var_is_introduced ;
var bool: aux22961_BOOL:: var_is_introduced ;
var bool: aux22962_BOOL:: var_is_introduced ;
var bool: aux22963_BOOL:: var_is_introduced ;
var {0,1}: aux22963_INTEGER :: var_is_introduced ;
var 4..61: aux22964:: var_is_introduced ;
var bool: aux22965_BOOL:: var_is_introduced ;
var bool: aux22966_BOOL:: var_is_introduced ;
var bool: aux22967_BOOL:: var_is_introduced ;
var {0,1}: aux22967_INTEGER :: var_is_introduced ;
var 4..61: aux22968:: var_is_introduced ;
var bool: aux22969_BOOL:: var_is_introduced ;
var bool: aux22970_BOOL:: var_is_introduced ;
var bool: aux22971_BOOL:: var_is_introduced ;
var {0,1}: aux22971_INTEGER :: var_is_introduced ;
var 2..59: aux22972:: var_is_introduced ;
var bool: aux22973_BOOL:: var_is_introduced ;
var bool: aux22974_BOOL:: var_is_introduced ;
var bool: aux22975_BOOL:: var_is_introduced ;
var {0,1}: aux22975_INTEGER :: var_is_introduced ;
var 3..60: aux22976:: var_is_introduced ;
var bool: aux22977_BOOL:: var_is_introduced ;
var bool: aux22978_BOOL:: var_is_introduced ;
var bool: aux22979_BOOL:: var_is_introduced ;
var {0,1}: aux22979_INTEGER :: var_is_introduced ;
var 3..60: aux22980:: var_is_introduced ;
var bool: aux22981_BOOL:: var_is_introduced ;
var bool: aux22982_BOOL:: var_is_introduced ;
var bool: aux22983_BOOL:: var_is_introduced ;
var {0,1}: aux22983_INTEGER :: var_is_introduced ;
var 2..59: aux22984:: var_is_introduced ;
var bool: aux22985_BOOL:: var_is_introduced ;
var bool: aux22986_BOOL:: var_is_introduced ;
var bool: aux22987_BOOL:: var_is_introduced ;
var {0,1}: aux22987_INTEGER :: var_is_introduced ;
var 4..61: aux22988:: var_is_introduced ;
var bool: aux22989_BOOL:: var_is_introduced ;
var bool: aux22990_BOOL:: var_is_introduced ;
var bool: aux22991_BOOL:: var_is_introduced ;
var {0,1}: aux22991_INTEGER :: var_is_introduced ;
var 4..61: aux22992:: var_is_introduced ;
var bool: aux22993_BOOL:: var_is_introduced ;
var {0,1}: aux22993_INTEGER :: var_is_introduced ;
var 2..59: aux22994:: var_is_introduced ;
var bool: aux22995_BOOL:: var_is_introduced ;
var bool: aux22996_BOOL:: var_is_introduced ;
var bool: aux22997_BOOL:: var_is_introduced ;
var {0,1}: aux22997_INTEGER :: var_is_introduced ;
var 2..59: aux22998:: var_is_introduced ;
var bool: aux22999_BOOL:: var_is_introduced ;
var bool: aux23000_BOOL:: var_is_introduced ;
var bool: aux23001_BOOL:: var_is_introduced ;
var {0,1}: aux23001_INTEGER :: var_is_introduced ;
var 2..59: aux23002:: var_is_introduced ;
var bool: aux23003_BOOL:: var_is_introduced ;
var bool: aux23004_BOOL:: var_is_introduced ;
var bool: aux23005_BOOL:: var_is_introduced ;
var {0,1}: aux23005_INTEGER :: var_is_introduced ;
var 1..58: aux23006:: var_is_introduced ;
var bool: aux23007_BOOL:: var_is_introduced ;
var bool: aux23008_BOOL:: var_is_introduced ;
var bool: aux23009_BOOL:: var_is_introduced ;
var {0,1}: aux23009_INTEGER :: var_is_introduced ;
var 4..61: aux23010:: var_is_introduced ;
var bool: aux23011_BOOL:: var_is_introduced ;
var bool: aux23012_BOOL:: var_is_introduced ;
var bool: aux23013_BOOL:: var_is_introduced ;
var {0,1}: aux23013_INTEGER :: var_is_introduced ;
var 4..61: aux23014:: var_is_introduced ;
var bool: aux23015_BOOL:: var_is_introduced ;
var bool: aux23016_BOOL:: var_is_introduced ;
var bool: aux23017_BOOL:: var_is_introduced ;
var {0,1}: aux23017_INTEGER :: var_is_introduced ;
var 2..59: aux23018:: var_is_introduced ;
var bool: aux23019_BOOL:: var_is_introduced ;
var bool: aux23020_BOOL:: var_is_introduced ;
var bool: aux23021_BOOL:: var_is_introduced ;
var {0,1}: aux23021_INTEGER :: var_is_introduced ;
var 3..60: aux23022:: var_is_introduced ;
var bool: aux23023_BOOL:: var_is_introduced ;
var bool: aux23024_BOOL:: var_is_introduced ;
var bool: aux23025_BOOL:: var_is_introduced ;
var {0,1}: aux23025_INTEGER :: var_is_introduced ;
var 3..60: aux23026:: var_is_introduced ;
var bool: aux23027_BOOL:: var_is_introduced ;
var bool: aux23028_BOOL:: var_is_introduced ;
var bool: aux23029_BOOL:: var_is_introduced ;
var {0,1}: aux23029_INTEGER :: var_is_introduced ;
var 4..61: aux23030:: var_is_introduced ;
var bool: aux23031_BOOL:: var_is_introduced ;
var bool: aux23032_BOOL:: var_is_introduced ;
var bool: aux23033_BOOL:: var_is_introduced ;
var {0,1}: aux23033_INTEGER :: var_is_introduced ;
var 4..61: aux23034:: var_is_introduced ;
var bool: aux23035_BOOL:: var_is_introduced ;
var bool: aux23036_BOOL:: var_is_introduced ;
var bool: aux23037_BOOL:: var_is_introduced ;
var {0,1}: aux23037_INTEGER :: var_is_introduced ;
var 2..59: aux23038:: var_is_introduced ;
var bool: aux23039_BOOL:: var_is_introduced ;
var {0,1}: aux23039_INTEGER :: var_is_introduced ;
constraint bool2int(w_00001_00001_BOOL,w_00001_00001_INTEGER);
constraint bool2int(w_00001_00002_BOOL,w_00001_00002_INTEGER);
constraint bool2int(w_00001_00003_BOOL,w_00001_00003_INTEGER);
constraint bool2int(w_00001_00004_BOOL,w_00001_00004_INTEGER);
constraint bool2int(w_00001_00005_BOOL,w_00001_00005_INTEGER);
constraint bool2int(w_00001_00006_BOOL,w_00001_00006_INTEGER);
constraint bool2int(w_00001_00007_BOOL,w_00001_00007_INTEGER);
constraint bool2int(w_00001_00008_BOOL,w_00001_00008_INTEGER);
constraint bool2int(w_00001_00009_BOOL,w_00001_00009_INTEGER);
constraint bool2int(w_00001_00010_BOOL,w_00001_00010_INTEGER);
constraint bool2int(w_00001_00011_BOOL,w_00001_00011_INTEGER);
constraint bool2int(w_00001_00012_BOOL,w_00001_00012_INTEGER);
constraint bool2int(w_00001_00013_BOOL,w_00001_00013_INTEGER);
constraint bool2int(w_00001_00014_BOOL,w_00001_00014_INTEGER);
constraint bool2int(w_00001_00015_BOOL,w_00001_00015_INTEGER);
constraint bool2int(w_00001_00016_BOOL,w_00001_00016_INTEGER);
constraint bool2int(w_00001_00017_BOOL,w_00001_00017_INTEGER);
constraint bool2int(w_00001_00018_BOOL,w_00001_00018_INTEGER);
constraint bool2int(w_00001_00019_BOOL,w_00001_00019_INTEGER);
constraint bool2int(w_00001_00020_BOOL,w_00001_00020_INTEGER);
constraint bool2int(w_00002_00001_BOOL,w_00002_00001_INTEGER);
constraint bool2int(w_00002_00002_BOOL,w_00002_00002_INTEGER);
constraint bool2int(w_00002_00003_BOOL,w_00002_00003_INTEGER);
constraint bool2int(w_00002_00004_BOOL,w_00002_00004_INTEGER);
constraint bool2int(w_00002_00005_BOOL,w_00002_00005_INTEGER);
constraint bool2int(w_00002_00006_BOOL,w_00002_00006_INTEGER);
constraint bool2int(w_00002_00007_BOOL,w_00002_00007_INTEGER);
constraint bool2int(w_00002_00008_BOOL,w_00002_00008_INTEGER);
constraint bool2int(w_00002_00009_BOOL,w_00002_00009_INTEGER);
constraint bool2int(w_00002_00010_BOOL,w_00002_00010_INTEGER);
constraint bool2int(w_00002_00011_BOOL,w_00002_00011_INTEGER);
constraint bool2int(w_00002_00012_BOOL,w_00002_00012_INTEGER);
constraint bool2int(w_00002_00013_BOOL,w_00002_00013_INTEGER);
constraint bool2int(w_00002_00014_BOOL,w_00002_00014_INTEGER);
constraint bool2int(w_00002_00015_BOOL,w_00002_00015_INTEGER);
constraint bool2int(w_00002_00016_BOOL,w_00002_00016_INTEGER);
constraint bool2int(w_00002_00017_BOOL,w_00002_00017_INTEGER);
constraint bool2int(w_00002_00018_BOOL,w_00002_00018_INTEGER);
constraint bool2int(w_00002_00019_BOOL,w_00002_00019_INTEGER);
constraint bool2int(w_00002_00020_BOOL,w_00002_00020_INTEGER);
constraint bool2int(w_00003_00001_BOOL,w_00003_00001_INTEGER);
constraint bool2int(w_00003_00002_BOOL,w_00003_00002_INTEGER);
constraint bool2int(w_00003_00003_BOOL,w_00003_00003_INTEGER);
constraint bool2int(w_00003_00004_BOOL,w_00003_00004_INTEGER);
constraint bool2int(w_00003_00005_BOOL,w_00003_00005_INTEGER);
constraint bool2int(w_00003_00006_BOOL,w_00003_00006_INTEGER);
constraint bool2int(w_00003_00007_BOOL,w_00003_00007_INTEGER);
constraint bool2int(w_00003_00008_BOOL,w_00003_00008_INTEGER);
constraint bool2int(w_00003_00009_BOOL,w_00003_00009_INTEGER);
constraint bool2int(w_00003_00010_BOOL,w_00003_00010_INTEGER);
constraint bool2int(w_00003_00011_BOOL,w_00003_00011_INTEGER);
constraint bool2int(w_00003_00012_BOOL,w_00003_00012_INTEGER);
constraint bool2int(w_00003_00013_BOOL,w_00003_00013_INTEGER);
constraint bool2int(w_00003_00014_BOOL,w_00003_00014_INTEGER);
constraint bool2int(w_00003_00015_BOOL,w_00003_00015_INTEGER);
constraint bool2int(w_00003_00016_BOOL,w_00003_00016_INTEGER);
constraint bool2int(w_00003_00017_BOOL,w_00003_00017_INTEGER);
constraint bool2int(w_00003_00018_BOOL,w_00003_00018_INTEGER);
constraint bool2int(w_00003_00019_BOOL,w_00003_00019_INTEGER);
constraint bool2int(w_00003_00020_BOOL,w_00003_00020_INTEGER);
constraint bool2int(w_00004_00001_BOOL,w_00004_00001_INTEGER);
constraint bool2int(w_00004_00002_BOOL,w_00004_00002_INTEGER);
constraint bool2int(w_00004_00003_BOOL,w_00004_00003_INTEGER);
constraint bool2int(w_00004_00004_BOOL,w_00004_00004_INTEGER);
constraint bool2int(w_00004_00005_BOOL,w_00004_00005_INTEGER);
constraint bool2int(w_00004_00006_BOOL,w_00004_00006_INTEGER);
constraint bool2int(w_00004_00007_BOOL,w_00004_00007_INTEGER);
constraint bool2int(w_00004_00008_BOOL,w_00004_00008_INTEGER);
constraint bool2int(w_00004_00009_BOOL,w_00004_00009_INTEGER);
constraint bool2int(w_00004_00010_BOOL,w_00004_00010_INTEGER);
constraint bool2int(w_00004_00011_BOOL,w_00004_00011_INTEGER);
constraint bool2int(w_00004_00012_BOOL,w_00004_00012_INTEGER);
constraint bool2int(w_00004_00013_BOOL,w_00004_00013_INTEGER);
constraint bool2int(w_00004_00014_BOOL,w_00004_00014_INTEGER);
constraint bool2int(w_00004_00015_BOOL,w_00004_00015_INTEGER);
constraint bool2int(w_00004_00016_BOOL,w_00004_00016_INTEGER);
constraint bool2int(w_00004_00017_BOOL,w_00004_00017_INTEGER);
constraint bool2int(w_00004_00018_BOOL,w_00004_00018_INTEGER);
constraint bool2int(w_00004_00019_BOOL,w_00004_00019_INTEGER);
constraint bool2int(w_00004_00020_BOOL,w_00004_00020_INTEGER);
constraint bool2int(w_00005_00001_BOOL,w_00005_00001_INTEGER);
constraint bool2int(w_00005_00002_BOOL,w_00005_00002_INTEGER);
constraint bool2int(w_00005_00003_BOOL,w_00005_00003_INTEGER);
constraint bool2int(w_00005_00004_BOOL,w_00005_00004_INTEGER);
constraint bool2int(w_00005_00005_BOOL,w_00005_00005_INTEGER);
constraint bool2int(w_00005_00006_BOOL,w_00005_00006_INTEGER);
constraint bool2int(w_00005_00007_BOOL,w_00005_00007_INTEGER);
constraint bool2int(w_00005_00008_BOOL,w_00005_00008_INTEGER);
constraint bool2int(w_00005_00009_BOOL,w_00005_00009_INTEGER);
constraint bool2int(w_00005_00010_BOOL,w_00005_00010_INTEGER);
constraint bool2int(w_00005_00011_BOOL,w_00005_00011_INTEGER);
constraint bool2int(w_00005_00012_BOOL,w_00005_00012_INTEGER);
constraint bool2int(w_00005_00013_BOOL,w_00005_00013_INTEGER);
constraint bool2int(w_00005_00014_BOOL,w_00005_00014_INTEGER);
constraint bool2int(w_00005_00015_BOOL,w_00005_00015_INTEGER);
constraint bool2int(w_00005_00016_BOOL,w_00005_00016_INTEGER);
constraint bool2int(w_00005_00017_BOOL,w_00005_00017_INTEGER);
constraint bool2int(w_00005_00018_BOOL,w_00005_00018_INTEGER);
constraint bool2int(w_00005_00019_BOOL,w_00005_00019_INTEGER);
constraint bool2int(w_00005_00020_BOOL,w_00005_00020_INTEGER);
constraint bool2int(w_00006_00001_BOOL,w_00006_00001_INTEGER);
constraint bool2int(w_00006_00002_BOOL,w_00006_00002_INTEGER);
constraint bool2int(w_00006_00003_BOOL,w_00006_00003_INTEGER);
constraint bool2int(w_00006_00004_BOOL,w_00006_00004_INTEGER);
constraint bool2int(w_00006_00005_BOOL,w_00006_00005_INTEGER);
constraint bool2int(w_00006_00006_BOOL,w_00006_00006_INTEGER);
constraint bool2int(w_00006_00007_BOOL,w_00006_00007_INTEGER);
constraint bool2int(w_00006_00008_BOOL,w_00006_00008_INTEGER);
constraint bool2int(w_00006_00009_BOOL,w_00006_00009_INTEGER);
constraint bool2int(w_00006_00010_BOOL,w_00006_00010_INTEGER);
constraint bool2int(w_00006_00011_BOOL,w_00006_00011_INTEGER);
constraint bool2int(w_00006_00012_BOOL,w_00006_00012_INTEGER);
constraint bool2int(w_00006_00013_BOOL,w_00006_00013_INTEGER);
constraint bool2int(w_00006_00014_BOOL,w_00006_00014_INTEGER);
constraint bool2int(w_00006_00015_BOOL,w_00006_00015_INTEGER);
constraint bool2int(w_00006_00016_BOOL,w_00006_00016_INTEGER);
constraint bool2int(w_00006_00017_BOOL,w_00006_00017_INTEGER);
constraint bool2int(w_00006_00018_BOOL,w_00006_00018_INTEGER);
constraint bool2int(w_00006_00019_BOOL,w_00006_00019_INTEGER);
constraint bool2int(w_00006_00020_BOOL,w_00006_00020_INTEGER);
constraint bool2int(w_00007_00001_BOOL,w_00007_00001_INTEGER);
constraint bool2int(w_00007_00002_BOOL,w_00007_00002_INTEGER);
constraint bool2int(w_00007_00003_BOOL,w_00007_00003_INTEGER);
constraint bool2int(w_00007_00004_BOOL,w_00007_00004_INTEGER);
constraint bool2int(w_00007_00005_BOOL,w_00007_00005_INTEGER);
constraint bool2int(w_00007_00006_BOOL,w_00007_00006_INTEGER);
constraint bool2int(w_00007_00007_BOOL,w_00007_00007_INTEGER);
constraint bool2int(w_00007_00008_BOOL,w_00007_00008_INTEGER);
constraint bool2int(w_00007_00009_BOOL,w_00007_00009_INTEGER);
constraint bool2int(w_00007_00010_BOOL,w_00007_00010_INTEGER);
constraint bool2int(w_00007_00011_BOOL,w_00007_00011_INTEGER);
constraint bool2int(w_00007_00012_BOOL,w_00007_00012_INTEGER);
constraint bool2int(w_00007_00013_BOOL,w_00007_00013_INTEGER);
constraint bool2int(w_00007_00014_BOOL,w_00007_00014_INTEGER);
constraint bool2int(w_00007_00015_BOOL,w_00007_00015_INTEGER);
constraint bool2int(w_00007_00016_BOOL,w_00007_00016_INTEGER);
constraint bool2int(w_00007_00017_BOOL,w_00007_00017_INTEGER);
constraint bool2int(w_00007_00018_BOOL,w_00007_00018_INTEGER);
constraint bool2int(w_00007_00019_BOOL,w_00007_00019_INTEGER);
constraint bool2int(w_00007_00020_BOOL,w_00007_00020_INTEGER);
constraint bool2int(w_00008_00001_BOOL,w_00008_00001_INTEGER);
constraint bool2int(w_00008_00002_BOOL,w_00008_00002_INTEGER);
constraint bool2int(w_00008_00003_BOOL,w_00008_00003_INTEGER);
constraint bool2int(w_00008_00004_BOOL,w_00008_00004_INTEGER);
constraint bool2int(w_00008_00005_BOOL,w_00008_00005_INTEGER);
constraint bool2int(w_00008_00006_BOOL,w_00008_00006_INTEGER);
constraint bool2int(w_00008_00007_BOOL,w_00008_00007_INTEGER);
constraint bool2int(w_00008_00008_BOOL,w_00008_00008_INTEGER);
constraint bool2int(w_00008_00009_BOOL,w_00008_00009_INTEGER);
constraint bool2int(w_00008_00010_BOOL,w_00008_00010_INTEGER);
constraint bool2int(w_00008_00011_BOOL,w_00008_00011_INTEGER);
constraint bool2int(w_00008_00012_BOOL,w_00008_00012_INTEGER);
constraint bool2int(w_00008_00013_BOOL,w_00008_00013_INTEGER);
constraint bool2int(w_00008_00014_BOOL,w_00008_00014_INTEGER);
constraint bool2int(w_00008_00015_BOOL,w_00008_00015_INTEGER);
constraint bool2int(w_00008_00016_BOOL,w_00008_00016_INTEGER);
constraint bool2int(w_00008_00017_BOOL,w_00008_00017_INTEGER);
constraint bool2int(w_00008_00018_BOOL,w_00008_00018_INTEGER);
constraint bool2int(w_00008_00019_BOOL,w_00008_00019_INTEGER);
constraint bool2int(w_00008_00020_BOOL,w_00008_00020_INTEGER);
constraint bool2int(w_00009_00001_BOOL,w_00009_00001_INTEGER);
constraint bool2int(w_00009_00002_BOOL,w_00009_00002_INTEGER);
constraint bool2int(w_00009_00003_BOOL,w_00009_00003_INTEGER);
constraint bool2int(w_00009_00004_BOOL,w_00009_00004_INTEGER);
constraint bool2int(w_00009_00005_BOOL,w_00009_00005_INTEGER);
constraint bool2int(w_00009_00006_BOOL,w_00009_00006_INTEGER);
constraint bool2int(w_00009_00007_BOOL,w_00009_00007_INTEGER);
constraint bool2int(w_00009_00008_BOOL,w_00009_00008_INTEGER);
constraint bool2int(w_00009_00009_BOOL,w_00009_00009_INTEGER);
constraint bool2int(w_00009_00010_BOOL,w_00009_00010_INTEGER);
constraint bool2int(w_00009_00011_BOOL,w_00009_00011_INTEGER);
constraint bool2int(w_00009_00012_BOOL,w_00009_00012_INTEGER);
constraint bool2int(w_00009_00013_BOOL,w_00009_00013_INTEGER);
constraint bool2int(w_00009_00014_BOOL,w_00009_00014_INTEGER);
constraint bool2int(w_00009_00015_BOOL,w_00009_00015_INTEGER);
constraint bool2int(w_00009_00016_BOOL,w_00009_00016_INTEGER);
constraint bool2int(w_00009_00017_BOOL,w_00009_00017_INTEGER);
constraint bool2int(w_00009_00018_BOOL,w_00009_00018_INTEGER);
constraint bool2int(w_00009_00019_BOOL,w_00009_00019_INTEGER);
constraint bool2int(w_00009_00020_BOOL,w_00009_00020_INTEGER);
constraint bool2int(aux11_BOOL,aux11_INTEGER);
constraint bool2int(aux13_BOOL,aux13_INTEGER);
constraint bool2int(aux15_BOOL,aux15_INTEGER);
constraint bool2int(aux17_BOOL,aux17_INTEGER);
constraint bool2int(aux19_BOOL,aux19_INTEGER);
constraint bool2int(aux21_BOOL,aux21_INTEGER);
constraint bool2int(aux23_BOOL,aux23_INTEGER);
constraint bool2int(aux25_BOOL,aux25_INTEGER);
constraint bool2int(aux27_BOOL,aux27_INTEGER);
constraint bool2int(aux29_BOOL,aux29_INTEGER);
constraint bool2int(aux31_BOOL,aux31_INTEGER);
constraint bool2int(aux33_BOOL,aux33_INTEGER);
constraint bool2int(aux35_BOOL,aux35_INTEGER);
constraint bool2int(aux37_BOOL,aux37_INTEGER);
constraint bool2int(aux39_BOOL,aux39_INTEGER);
constraint bool2int(aux41_BOOL,aux41_INTEGER);
constraint bool2int(aux43_BOOL,aux43_INTEGER);
constraint bool2int(aux45_BOOL,aux45_INTEGER);
constraint bool2int(aux47_BOOL,aux47_INTEGER);
constraint bool2int(aux49_BOOL,aux49_INTEGER);
constraint bool2int(aux51_BOOL,aux51_INTEGER);
constraint bool2int(aux53_BOOL,aux53_INTEGER);
constraint bool2int(aux55_BOOL,aux55_INTEGER);
constraint bool2int(aux57_BOOL,aux57_INTEGER);
constraint bool2int(aux59_BOOL,aux59_INTEGER);
constraint bool2int(aux61_BOOL,aux61_INTEGER);
constraint bool2int(aux63_BOOL,aux63_INTEGER);
constraint bool2int(aux65_BOOL,aux65_INTEGER);
constraint bool2int(aux67_BOOL,aux67_INTEGER);
constraint bool2int(aux69_BOOL,aux69_INTEGER);
constraint bool2int(aux71_BOOL,aux71_INTEGER);
constraint bool2int(aux73_BOOL,aux73_INTEGER);
constraint bool2int(aux75_BOOL,aux75_INTEGER);
constraint bool2int(aux77_BOOL,aux77_INTEGER);
constraint bool2int(aux79_BOOL,aux79_INTEGER);
constraint bool2int(aux81_BOOL,aux81_INTEGER);
constraint bool2int(aux83_BOOL,aux83_INTEGER);
constraint bool2int(aux85_BOOL,aux85_INTEGER);
constraint bool2int(aux87_BOOL,aux87_INTEGER);
constraint bool2int(aux89_BOOL,aux89_INTEGER);
constraint bool2int(aux91_BOOL,aux91_INTEGER);
constraint bool2int(aux93_BOOL,aux93_INTEGER);
constraint bool2int(aux95_BOOL,aux95_INTEGER);
constraint bool2int(aux97_BOOL,aux97_INTEGER);
constraint bool2int(aux99_BOOL,aux99_INTEGER);
constraint bool2int(aux101_BOOL,aux101_INTEGER);
constraint bool2int(aux103_BOOL,aux103_INTEGER);
constraint bool2int(aux105_BOOL,aux105_INTEGER);
constraint bool2int(aux107_BOOL,aux107_INTEGER);
constraint bool2int(aux109_BOOL,aux109_INTEGER);
constraint bool2int(aux111_BOOL,aux111_INTEGER);
constraint bool2int(aux113_BOOL,aux113_INTEGER);
constraint bool2int(aux115_BOOL,aux115_INTEGER);
constraint bool2int(aux117_BOOL,aux117_INTEGER);
constraint bool2int(aux119_BOOL,aux119_INTEGER);
constraint bool2int(aux121_BOOL,aux121_INTEGER);
constraint bool2int(aux123_BOOL,aux123_INTEGER);
constraint bool2int(aux125_BOOL,aux125_INTEGER);
constraint bool2int(aux127_BOOL,aux127_INTEGER);
constraint bool2int(aux129_BOOL,aux129_INTEGER);
constraint bool2int(aux131_BOOL,aux131_INTEGER);
constraint bool2int(aux133_BOOL,aux133_INTEGER);
constraint bool2int(aux135_BOOL,aux135_INTEGER);
constraint bool2int(aux137_BOOL,aux137_INTEGER);
constraint bool2int(aux139_BOOL,aux139_INTEGER);
constraint bool2int(aux141_BOOL,aux141_INTEGER);
constraint bool2int(aux143_BOOL,aux143_INTEGER);
constraint bool2int(aux145_BOOL,aux145_INTEGER);
constraint bool2int(aux147_BOOL,aux147_INTEGER);
constraint bool2int(aux149_BOOL,aux149_INTEGER);
constraint bool2int(aux151_BOOL,aux151_INTEGER);
constraint bool2int(aux153_BOOL,aux153_INTEGER);
constraint bool2int(aux155_BOOL,aux155_INTEGER);
constraint bool2int(aux157_BOOL,aux157_INTEGER);
constraint bool2int(aux159_BOOL,aux159_INTEGER);
constraint bool2int(aux161_BOOL,aux161_INTEGER);
constraint bool2int(aux163_BOOL,aux163_INTEGER);
constraint bool2int(aux165_BOOL,aux165_INTEGER);
constraint bool2int(aux167_BOOL,aux167_INTEGER);
constraint bool2int(aux169_BOOL,aux169_INTEGER);
constraint bool2int(aux171_BOOL,aux171_INTEGER);
constraint bool2int(aux173_BOOL,aux173_INTEGER);
constraint bool2int(aux175_BOOL,aux175_INTEGER);
constraint bool2int(aux177_BOOL,aux177_INTEGER);
constraint bool2int(aux179_BOOL,aux179_INTEGER);
constraint bool2int(aux181_BOOL,aux181_INTEGER);
constraint bool2int(aux183_BOOL,aux183_INTEGER);
constraint bool2int(aux185_BOOL,aux185_INTEGER);
constraint bool2int(aux187_BOOL,aux187_INTEGER);
constraint bool2int(aux189_BOOL,aux189_INTEGER);
constraint bool2int(aux191_BOOL,aux191_INTEGER);
constraint bool2int(aux193_BOOL,aux193_INTEGER);
constraint bool2int(aux195_BOOL,aux195_INTEGER);
constraint bool2int(aux197_BOOL,aux197_INTEGER);
constraint bool2int(aux199_BOOL,aux199_INTEGER);
constraint bool2int(aux201_BOOL,aux201_INTEGER);
constraint bool2int(aux203_BOOL,aux203_INTEGER);
constraint bool2int(aux205_BOOL,aux205_INTEGER);
constraint bool2int(aux207_BOOL,aux207_INTEGER);
constraint bool2int(aux209_BOOL,aux209_INTEGER);
constraint bool2int(aux211_BOOL,aux211_INTEGER);
constraint bool2int(aux213_BOOL,aux213_INTEGER);
constraint bool2int(aux215_BOOL,aux215_INTEGER);
constraint bool2int(aux217_BOOL,aux217_INTEGER);
constraint bool2int(aux219_BOOL,aux219_INTEGER);
constraint bool2int(aux221_BOOL,aux221_INTEGER);
constraint bool2int(aux223_BOOL,aux223_INTEGER);
constraint bool2int(aux225_BOOL,aux225_INTEGER);
constraint bool2int(aux227_BOOL,aux227_INTEGER);
constraint bool2int(aux229_BOOL,aux229_INTEGER);
constraint bool2int(aux231_BOOL,aux231_INTEGER);
constraint bool2int(aux233_BOOL,aux233_INTEGER);
constraint bool2int(aux235_BOOL,aux235_INTEGER);
constraint bool2int(aux237_BOOL,aux237_INTEGER);
constraint bool2int(aux239_BOOL,aux239_INTEGER);
constraint bool2int(aux241_BOOL,aux241_INTEGER);
constraint bool2int(aux243_BOOL,aux243_INTEGER);
constraint bool2int(aux245_BOOL,aux245_INTEGER);
constraint bool2int(aux247_BOOL,aux247_INTEGER);
constraint bool2int(aux249_BOOL,aux249_INTEGER);
constraint bool2int(aux251_BOOL,aux251_INTEGER);
constraint bool2int(aux253_BOOL,aux253_INTEGER);
constraint bool2int(aux255_BOOL,aux255_INTEGER);
constraint bool2int(aux257_BOOL,aux257_INTEGER);
constraint bool2int(aux259_BOOL,aux259_INTEGER);
constraint bool2int(aux261_BOOL,aux261_INTEGER);
constraint bool2int(aux263_BOOL,aux263_INTEGER);
constraint bool2int(aux265_BOOL,aux265_INTEGER);
constraint bool2int(aux267_BOOL,aux267_INTEGER);
constraint bool2int(aux269_BOOL,aux269_INTEGER);
constraint bool2int(aux271_BOOL,aux271_INTEGER);
constraint bool2int(aux273_BOOL,aux273_INTEGER);
constraint bool2int(aux275_BOOL,aux275_INTEGER);
constraint bool2int(aux460_BOOL,aux460_INTEGER);
constraint bool2int(aux466_BOOL,aux466_INTEGER);
constraint bool2int(aux472_BOOL,aux472_INTEGER);
constraint bool2int(aux478_BOOL,aux478_INTEGER);
constraint bool2int(aux484_BOOL,aux484_INTEGER);
constraint bool2int(aux490_BOOL,aux490_INTEGER);
constraint bool2int(aux496_BOOL,aux496_INTEGER);
constraint bool2int(aux502_BOOL,aux502_INTEGER);
constraint bool2int(aux508_BOOL,aux508_INTEGER);
constraint bool2int(aux514_BOOL,aux514_INTEGER);
constraint bool2int(aux520_BOOL,aux520_INTEGER);
constraint bool2int(aux526_BOOL,aux526_INTEGER);
constraint bool2int(aux532_BOOL,aux532_INTEGER);
constraint bool2int(aux538_BOOL,aux538_INTEGER);
constraint bool2int(aux544_BOOL,aux544_INTEGER);
constraint bool2int(aux550_BOOL,aux550_INTEGER);
constraint bool2int(aux556_BOOL,aux556_INTEGER);
constraint bool2int(aux562_BOOL,aux562_INTEGER);
constraint bool2int(aux568_BOOL,aux568_INTEGER);
constraint bool2int(aux574_BOOL,aux574_INTEGER);
constraint bool2int(aux579_BOOL,aux579_INTEGER);
constraint bool2int(aux585_BOOL,aux585_INTEGER);
constraint bool2int(aux591_BOOL,aux591_INTEGER);
constraint bool2int(aux597_BOOL,aux597_INTEGER);
constraint bool2int(aux603_BOOL,aux603_INTEGER);
constraint bool2int(aux609_BOOL,aux609_INTEGER);
constraint bool2int(aux615_BOOL,aux615_INTEGER);
constraint bool2int(aux621_BOOL,aux621_INTEGER);
constraint bool2int(aux627_BOOL,aux627_INTEGER);
constraint bool2int(aux633_BOOL,aux633_INTEGER);
constraint bool2int(aux639_BOOL,aux639_INTEGER);
constraint bool2int(aux645_BOOL,aux645_INTEGER);
constraint bool2int(aux651_BOOL,aux651_INTEGER);
constraint bool2int(aux657_BOOL,aux657_INTEGER);
constraint bool2int(aux663_BOOL,aux663_INTEGER);
constraint bool2int(aux669_BOOL,aux669_INTEGER);
constraint bool2int(aux675_BOOL,aux675_INTEGER);
constraint bool2int(aux681_BOOL,aux681_INTEGER);
constraint bool2int(aux687_BOOL,aux687_INTEGER);
constraint bool2int(aux693_BOOL,aux693_INTEGER);
constraint bool2int(aux698_BOOL,aux698_INTEGER);
constraint bool2int(aux704_BOOL,aux704_INTEGER);
constraint bool2int(aux710_BOOL,aux710_INTEGER);
constraint bool2int(aux716_BOOL,aux716_INTEGER);
constraint bool2int(aux722_BOOL,aux722_INTEGER);
constraint bool2int(aux728_BOOL,aux728_INTEGER);
constraint bool2int(aux734_BOOL,aux734_INTEGER);
constraint bool2int(aux740_BOOL,aux740_INTEGER);
constraint bool2int(aux746_BOOL,aux746_INTEGER);
constraint bool2int(aux752_BOOL,aux752_INTEGER);
constraint bool2int(aux758_BOOL,aux758_INTEGER);
constraint bool2int(aux764_BOOL,aux764_INTEGER);
constraint bool2int(aux770_BOOL,aux770_INTEGER);
constraint bool2int(aux776_BOOL,aux776_INTEGER);
constraint bool2int(aux782_BOOL,aux782_INTEGER);
constraint bool2int(aux788_BOOL,aux788_INTEGER);
constraint bool2int(aux794_BOOL,aux794_INTEGER);
constraint bool2int(aux800_BOOL,aux800_INTEGER);
constraint bool2int(aux806_BOOL,aux806_INTEGER);
constraint bool2int(aux812_BOOL,aux812_INTEGER);
constraint bool2int(aux817_BOOL,aux817_INTEGER);
constraint bool2int(aux823_BOOL,aux823_INTEGER);
constraint bool2int(aux829_BOOL,aux829_INTEGER);
constraint bool2int(aux835_BOOL,aux835_INTEGER);
constraint bool2int(aux841_BOOL,aux841_INTEGER);
constraint bool2int(aux847_BOOL,aux847_INTEGER);
constraint bool2int(aux853_BOOL,aux853_INTEGER);
constraint bool2int(aux859_BOOL,aux859_INTEGER);
constraint bool2int(aux865_BOOL,aux865_INTEGER);
constraint bool2int(aux871_BOOL,aux871_INTEGER);
constraint bool2int(aux877_BOOL,aux877_INTEGER);
constraint bool2int(aux883_BOOL,aux883_INTEGER);
constraint bool2int(aux889_BOOL,aux889_INTEGER);
constraint bool2int(aux895_BOOL,aux895_INTEGER);
constraint bool2int(aux901_BOOL,aux901_INTEGER);
constraint bool2int(aux907_BOOL,aux907_INTEGER);
constraint bool2int(aux913_BOOL,aux913_INTEGER);
constraint bool2int(aux919_BOOL,aux919_INTEGER);
constraint bool2int(aux925_BOOL,aux925_INTEGER);
constraint bool2int(aux931_BOOL,aux931_INTEGER);
constraint bool2int(aux936_BOOL,aux936_INTEGER);
constraint bool2int(aux942_BOOL,aux942_INTEGER);
constraint bool2int(aux948_BOOL,aux948_INTEGER);
constraint bool2int(aux954_BOOL,aux954_INTEGER);
constraint bool2int(aux960_BOOL,aux960_INTEGER);
constraint bool2int(aux966_BOOL,aux966_INTEGER);
constraint bool2int(aux972_BOOL,aux972_INTEGER);
constraint bool2int(aux978_BOOL,aux978_INTEGER);
constraint bool2int(aux984_BOOL,aux984_INTEGER);
constraint bool2int(aux990_BOOL,aux990_INTEGER);
constraint bool2int(aux996_BOOL,aux996_INTEGER);
constraint bool2int(aux1002_BOOL,aux1002_INTEGER);
constraint bool2int(aux1008_BOOL,aux1008_INTEGER);
constraint bool2int(aux1014_BOOL,aux1014_INTEGER);
constraint bool2int(aux1020_BOOL,aux1020_INTEGER);
constraint bool2int(aux1026_BOOL,aux1026_INTEGER);
constraint bool2int(aux1032_BOOL,aux1032_INTEGER);
constraint bool2int(aux1038_BOOL,aux1038_INTEGER);
constraint bool2int(aux1044_BOOL,aux1044_INTEGER);
constraint bool2int(aux1050_BOOL,aux1050_INTEGER);
constraint bool2int(aux1055_BOOL,aux1055_INTEGER);
constraint bool2int(aux1061_BOOL,aux1061_INTEGER);
constraint bool2int(aux1067_BOOL,aux1067_INTEGER);
constraint bool2int(aux1073_BOOL,aux1073_INTEGER);
constraint bool2int(aux1079_BOOL,aux1079_INTEGER);
constraint bool2int(aux1085_BOOL,aux1085_INTEGER);
constraint bool2int(aux1091_BOOL,aux1091_INTEGER);
constraint bool2int(aux1097_BOOL,aux1097_INTEGER);
constraint bool2int(aux1103_BOOL,aux1103_INTEGER);
constraint bool2int(aux1109_BOOL,aux1109_INTEGER);
constraint bool2int(aux1115_BOOL,aux1115_INTEGER);
constraint bool2int(aux1121_BOOL,aux1121_INTEGER);
constraint bool2int(aux1127_BOOL,aux1127_INTEGER);
constraint bool2int(aux1133_BOOL,aux1133_INTEGER);
constraint bool2int(aux1139_BOOL,aux1139_INTEGER);
constraint bool2int(aux1145_BOOL,aux1145_INTEGER);
constraint bool2int(aux1151_BOOL,aux1151_INTEGER);
constraint bool2int(aux1157_BOOL,aux1157_INTEGER);
constraint bool2int(aux1163_BOOL,aux1163_INTEGER);
constraint bool2int(aux1169_BOOL,aux1169_INTEGER);
constraint bool2int(aux1174_BOOL,aux1174_INTEGER);
constraint bool2int(aux1180_BOOL,aux1180_INTEGER);
constraint bool2int(aux1186_BOOL,aux1186_INTEGER);
constraint bool2int(aux1192_BOOL,aux1192_INTEGER);
constraint bool2int(aux1198_BOOL,aux1198_INTEGER);
constraint bool2int(aux1204_BOOL,aux1204_INTEGER);
constraint bool2int(aux1210_BOOL,aux1210_INTEGER);
constraint bool2int(aux1216_BOOL,aux1216_INTEGER);
constraint bool2int(aux1222_BOOL,aux1222_INTEGER);
constraint bool2int(aux1228_BOOL,aux1228_INTEGER);
constraint bool2int(aux1234_BOOL,aux1234_INTEGER);
constraint bool2int(aux1240_BOOL,aux1240_INTEGER);
constraint bool2int(aux1246_BOOL,aux1246_INTEGER);
constraint bool2int(aux1252_BOOL,aux1252_INTEGER);
constraint bool2int(aux1258_BOOL,aux1258_INTEGER);
constraint bool2int(aux1264_BOOL,aux1264_INTEGER);
constraint bool2int(aux1270_BOOL,aux1270_INTEGER);
constraint bool2int(aux1276_BOOL,aux1276_INTEGER);
constraint bool2int(aux1282_BOOL,aux1282_INTEGER);
constraint bool2int(aux1288_BOOL,aux1288_INTEGER);
constraint bool2int(aux1293_BOOL,aux1293_INTEGER);
constraint bool2int(aux1299_BOOL,aux1299_INTEGER);
constraint bool2int(aux1305_BOOL,aux1305_INTEGER);
constraint bool2int(aux1311_BOOL,aux1311_INTEGER);
constraint bool2int(aux1317_BOOL,aux1317_INTEGER);
constraint bool2int(aux1323_BOOL,aux1323_INTEGER);
constraint bool2int(aux1329_BOOL,aux1329_INTEGER);
constraint bool2int(aux1335_BOOL,aux1335_INTEGER);
constraint bool2int(aux1341_BOOL,aux1341_INTEGER);
constraint bool2int(aux1347_BOOL,aux1347_INTEGER);
constraint bool2int(aux1353_BOOL,aux1353_INTEGER);
constraint bool2int(aux1359_BOOL,aux1359_INTEGER);
constraint bool2int(aux1365_BOOL,aux1365_INTEGER);
constraint bool2int(aux1371_BOOL,aux1371_INTEGER);
constraint bool2int(aux1377_BOOL,aux1377_INTEGER);
constraint bool2int(aux1383_BOOL,aux1383_INTEGER);
constraint bool2int(aux1389_BOOL,aux1389_INTEGER);
constraint bool2int(aux1395_BOOL,aux1395_INTEGER);
constraint bool2int(aux1401_BOOL,aux1401_INTEGER);
constraint bool2int(aux1407_BOOL,aux1407_INTEGER);
constraint bool2int(aux1412_BOOL,aux1412_INTEGER);
constraint bool2int(aux1418_BOOL,aux1418_INTEGER);
constraint bool2int(aux1424_BOOL,aux1424_INTEGER);
constraint bool2int(aux1430_BOOL,aux1430_INTEGER);
constraint bool2int(aux1436_BOOL,aux1436_INTEGER);
constraint bool2int(aux1442_BOOL,aux1442_INTEGER);
constraint bool2int(aux1448_BOOL,aux1448_INTEGER);
constraint bool2int(aux1454_BOOL,aux1454_INTEGER);
constraint bool2int(aux1460_BOOL,aux1460_INTEGER);
constraint bool2int(aux1466_BOOL,aux1466_INTEGER);
constraint bool2int(aux1472_BOOL,aux1472_INTEGER);
constraint bool2int(aux1478_BOOL,aux1478_INTEGER);
constraint bool2int(aux1484_BOOL,aux1484_INTEGER);
constraint bool2int(aux1490_BOOL,aux1490_INTEGER);
constraint bool2int(aux1496_BOOL,aux1496_INTEGER);
constraint bool2int(aux1502_BOOL,aux1502_INTEGER);
constraint bool2int(aux1508_BOOL,aux1508_INTEGER);
constraint bool2int(aux1514_BOOL,aux1514_INTEGER);
constraint bool2int(aux1520_BOOL,aux1520_INTEGER);
constraint bool2int(aux1526_BOOL,aux1526_INTEGER);
constraint bool2int(aux1531_BOOL,aux1531_INTEGER);
constraint bool2int(aux1537_BOOL,aux1537_INTEGER);
constraint bool2int(aux1543_BOOL,aux1543_INTEGER);
constraint bool2int(aux1549_BOOL,aux1549_INTEGER);
constraint bool2int(aux1555_BOOL,aux1555_INTEGER);
constraint bool2int(aux1561_BOOL,aux1561_INTEGER);
constraint bool2int(aux1567_BOOL,aux1567_INTEGER);
constraint bool2int(aux1573_BOOL,aux1573_INTEGER);
constraint bool2int(aux1579_BOOL,aux1579_INTEGER);
constraint bool2int(aux1585_BOOL,aux1585_INTEGER);
constraint bool2int(aux1591_BOOL,aux1591_INTEGER);
constraint bool2int(aux1597_BOOL,aux1597_INTEGER);
constraint bool2int(aux1603_BOOL,aux1603_INTEGER);
constraint bool2int(aux1609_BOOL,aux1609_INTEGER);
constraint bool2int(aux1615_BOOL,aux1615_INTEGER);
constraint bool2int(aux1621_BOOL,aux1621_INTEGER);
constraint bool2int(aux1627_BOOL,aux1627_INTEGER);
constraint bool2int(aux1633_BOOL,aux1633_INTEGER);
constraint bool2int(aux1639_BOOL,aux1639_INTEGER);
constraint bool2int(aux1645_BOOL,aux1645_INTEGER);
constraint bool2int(aux1650_BOOL,aux1650_INTEGER);
constraint bool2int(aux1656_BOOL,aux1656_INTEGER);
constraint bool2int(aux1662_BOOL,aux1662_INTEGER);
constraint bool2int(aux1668_BOOL,aux1668_INTEGER);
constraint bool2int(aux1674_BOOL,aux1674_INTEGER);
constraint bool2int(aux1680_BOOL,aux1680_INTEGER);
constraint bool2int(aux1686_BOOL,aux1686_INTEGER);
constraint bool2int(aux1692_BOOL,aux1692_INTEGER);
constraint bool2int(aux1698_BOOL,aux1698_INTEGER);
constraint bool2int(aux1704_BOOL,aux1704_INTEGER);
constraint bool2int(aux1710_BOOL,aux1710_INTEGER);
constraint bool2int(aux1716_BOOL,aux1716_INTEGER);
constraint bool2int(aux1722_BOOL,aux1722_INTEGER);
constraint bool2int(aux1728_BOOL,aux1728_INTEGER);
constraint bool2int(aux1734_BOOL,aux1734_INTEGER);
constraint bool2int(aux1740_BOOL,aux1740_INTEGER);
constraint bool2int(aux1746_BOOL,aux1746_INTEGER);
constraint bool2int(aux1752_BOOL,aux1752_INTEGER);
constraint bool2int(aux1758_BOOL,aux1758_INTEGER);
constraint bool2int(aux1764_BOOL,aux1764_INTEGER);
constraint bool2int(aux1769_BOOL,aux1769_INTEGER);
constraint bool2int(aux1775_BOOL,aux1775_INTEGER);
constraint bool2int(aux1781_BOOL,aux1781_INTEGER);
constraint bool2int(aux1787_BOOL,aux1787_INTEGER);
constraint bool2int(aux1793_BOOL,aux1793_INTEGER);
constraint bool2int(aux1799_BOOL,aux1799_INTEGER);
constraint bool2int(aux1805_BOOL,aux1805_INTEGER);
constraint bool2int(aux1811_BOOL,aux1811_INTEGER);
constraint bool2int(aux1817_BOOL,aux1817_INTEGER);
constraint bool2int(aux1823_BOOL,aux1823_INTEGER);
constraint bool2int(aux1829_BOOL,aux1829_INTEGER);
constraint bool2int(aux1835_BOOL,aux1835_INTEGER);
constraint bool2int(aux1841_BOOL,aux1841_INTEGER);
constraint bool2int(aux1847_BOOL,aux1847_INTEGER);
constraint bool2int(aux1853_BOOL,aux1853_INTEGER);
constraint bool2int(aux1859_BOOL,aux1859_INTEGER);
constraint bool2int(aux1865_BOOL,aux1865_INTEGER);
constraint bool2int(aux1871_BOOL,aux1871_INTEGER);
constraint bool2int(aux1877_BOOL,aux1877_INTEGER);
constraint bool2int(aux1883_BOOL,aux1883_INTEGER);
constraint bool2int(aux1888_BOOL,aux1888_INTEGER);
constraint bool2int(aux1894_BOOL,aux1894_INTEGER);
constraint bool2int(aux1900_BOOL,aux1900_INTEGER);
constraint bool2int(aux1906_BOOL,aux1906_INTEGER);
constraint bool2int(aux1912_BOOL,aux1912_INTEGER);
constraint bool2int(aux1918_BOOL,aux1918_INTEGER);
constraint bool2int(aux1924_BOOL,aux1924_INTEGER);
constraint bool2int(aux1930_BOOL,aux1930_INTEGER);
constraint bool2int(aux1936_BOOL,aux1936_INTEGER);
constraint bool2int(aux1942_BOOL,aux1942_INTEGER);
constraint bool2int(aux1948_BOOL,aux1948_INTEGER);
constraint bool2int(aux1954_BOOL,aux1954_INTEGER);
constraint bool2int(aux1960_BOOL,aux1960_INTEGER);
constraint bool2int(aux1966_BOOL,aux1966_INTEGER);
constraint bool2int(aux1972_BOOL,aux1972_INTEGER);
constraint bool2int(aux1978_BOOL,aux1978_INTEGER);
constraint bool2int(aux1984_BOOL,aux1984_INTEGER);
constraint bool2int(aux1990_BOOL,aux1990_INTEGER);
constraint bool2int(aux1996_BOOL,aux1996_INTEGER);
constraint bool2int(aux2002_BOOL,aux2002_INTEGER);
constraint bool2int(aux2007_BOOL,aux2007_INTEGER);
constraint bool2int(aux2013_BOOL,aux2013_INTEGER);
constraint bool2int(aux2019_BOOL,aux2019_INTEGER);
constraint bool2int(aux2025_BOOL,aux2025_INTEGER);
constraint bool2int(aux2031_BOOL,aux2031_INTEGER);
constraint bool2int(aux2037_BOOL,aux2037_INTEGER);
constraint bool2int(aux2043_BOOL,aux2043_INTEGER);
constraint bool2int(aux2049_BOOL,aux2049_INTEGER);
constraint bool2int(aux2055_BOOL,aux2055_INTEGER);
constraint bool2int(aux2061_BOOL,aux2061_INTEGER);
constraint bool2int(aux2067_BOOL,aux2067_INTEGER);
constraint bool2int(aux2073_BOOL,aux2073_INTEGER);
constraint bool2int(aux2079_BOOL,aux2079_INTEGER);
constraint bool2int(aux2085_BOOL,aux2085_INTEGER);
constraint bool2int(aux2091_BOOL,aux2091_INTEGER);
constraint bool2int(aux2097_BOOL,aux2097_INTEGER);
constraint bool2int(aux2103_BOOL,aux2103_INTEGER);
constraint bool2int(aux2109_BOOL,aux2109_INTEGER);
constraint bool2int(aux2115_BOOL,aux2115_INTEGER);
constraint bool2int(aux2121_BOOL,aux2121_INTEGER);
constraint bool2int(aux2126_BOOL,aux2126_INTEGER);
constraint bool2int(aux2132_BOOL,aux2132_INTEGER);
constraint bool2int(aux2138_BOOL,aux2138_INTEGER);
constraint bool2int(aux2144_BOOL,aux2144_INTEGER);
constraint bool2int(aux2150_BOOL,aux2150_INTEGER);
constraint bool2int(aux2156_BOOL,aux2156_INTEGER);
constraint bool2int(aux2162_BOOL,aux2162_INTEGER);
constraint bool2int(aux2168_BOOL,aux2168_INTEGER);
constraint bool2int(aux2174_BOOL,aux2174_INTEGER);
constraint bool2int(aux2180_BOOL,aux2180_INTEGER);
constraint bool2int(aux2186_BOOL,aux2186_INTEGER);
constraint bool2int(aux2192_BOOL,aux2192_INTEGER);
constraint bool2int(aux2198_BOOL,aux2198_INTEGER);
constraint bool2int(aux2204_BOOL,aux2204_INTEGER);
constraint bool2int(aux2210_BOOL,aux2210_INTEGER);
constraint bool2int(aux2216_BOOL,aux2216_INTEGER);
constraint bool2int(aux2222_BOOL,aux2222_INTEGER);
constraint bool2int(aux2228_BOOL,aux2228_INTEGER);
constraint bool2int(aux2234_BOOL,aux2234_INTEGER);
constraint bool2int(aux2240_BOOL,aux2240_INTEGER);
constraint bool2int(aux2245_BOOL,aux2245_INTEGER);
constraint bool2int(aux2251_BOOL,aux2251_INTEGER);
constraint bool2int(aux2257_BOOL,aux2257_INTEGER);
constraint bool2int(aux2263_BOOL,aux2263_INTEGER);
constraint bool2int(aux2269_BOOL,aux2269_INTEGER);
constraint bool2int(aux2275_BOOL,aux2275_INTEGER);
constraint bool2int(aux2281_BOOL,aux2281_INTEGER);
constraint bool2int(aux2287_BOOL,aux2287_INTEGER);
constraint bool2int(aux2293_BOOL,aux2293_INTEGER);
constraint bool2int(aux2299_BOOL,aux2299_INTEGER);
constraint bool2int(aux2305_BOOL,aux2305_INTEGER);
constraint bool2int(aux2311_BOOL,aux2311_INTEGER);
constraint bool2int(aux2317_BOOL,aux2317_INTEGER);
constraint bool2int(aux2323_BOOL,aux2323_INTEGER);
constraint bool2int(aux2329_BOOL,aux2329_INTEGER);
constraint bool2int(aux2335_BOOL,aux2335_INTEGER);
constraint bool2int(aux2341_BOOL,aux2341_INTEGER);
constraint bool2int(aux2347_BOOL,aux2347_INTEGER);
constraint bool2int(aux2353_BOOL,aux2353_INTEGER);
constraint bool2int(aux2359_BOOL,aux2359_INTEGER);
constraint bool2int(aux2364_BOOL,aux2364_INTEGER);
constraint bool2int(aux2370_BOOL,aux2370_INTEGER);
constraint bool2int(aux2376_BOOL,aux2376_INTEGER);
constraint bool2int(aux2382_BOOL,aux2382_INTEGER);
constraint bool2int(aux2388_BOOL,aux2388_INTEGER);
constraint bool2int(aux2394_BOOL,aux2394_INTEGER);
constraint bool2int(aux2400_BOOL,aux2400_INTEGER);
constraint bool2int(aux2406_BOOL,aux2406_INTEGER);
constraint bool2int(aux2412_BOOL,aux2412_INTEGER);
constraint bool2int(aux2418_BOOL,aux2418_INTEGER);
constraint bool2int(aux2424_BOOL,aux2424_INTEGER);
constraint bool2int(aux2430_BOOL,aux2430_INTEGER);
constraint bool2int(aux2436_BOOL,aux2436_INTEGER);
constraint bool2int(aux2442_BOOL,aux2442_INTEGER);
constraint bool2int(aux2448_BOOL,aux2448_INTEGER);
constraint bool2int(aux2454_BOOL,aux2454_INTEGER);
constraint bool2int(aux2460_BOOL,aux2460_INTEGER);
constraint bool2int(aux2466_BOOL,aux2466_INTEGER);
constraint bool2int(aux2472_BOOL,aux2472_INTEGER);
constraint bool2int(aux2478_BOOL,aux2478_INTEGER);
constraint bool2int(aux2483_BOOL,aux2483_INTEGER);
constraint bool2int(aux2489_BOOL,aux2489_INTEGER);
constraint bool2int(aux2495_BOOL,aux2495_INTEGER);
constraint bool2int(aux2501_BOOL,aux2501_INTEGER);
constraint bool2int(aux2507_BOOL,aux2507_INTEGER);
constraint bool2int(aux2513_BOOL,aux2513_INTEGER);
constraint bool2int(aux2519_BOOL,aux2519_INTEGER);
constraint bool2int(aux2525_BOOL,aux2525_INTEGER);
constraint bool2int(aux2531_BOOL,aux2531_INTEGER);
constraint bool2int(aux2537_BOOL,aux2537_INTEGER);
constraint bool2int(aux2543_BOOL,aux2543_INTEGER);
constraint bool2int(aux2549_BOOL,aux2549_INTEGER);
constraint bool2int(aux2555_BOOL,aux2555_INTEGER);
constraint bool2int(aux2561_BOOL,aux2561_INTEGER);
constraint bool2int(aux2567_BOOL,aux2567_INTEGER);
constraint bool2int(aux2573_BOOL,aux2573_INTEGER);
constraint bool2int(aux2579_BOOL,aux2579_INTEGER);
constraint bool2int(aux2585_BOOL,aux2585_INTEGER);
constraint bool2int(aux2591_BOOL,aux2591_INTEGER);
constraint bool2int(aux2597_BOOL,aux2597_INTEGER);
constraint bool2int(aux2602_BOOL,aux2602_INTEGER);
constraint bool2int(aux2608_BOOL,aux2608_INTEGER);
constraint bool2int(aux2614_BOOL,aux2614_INTEGER);
constraint bool2int(aux2620_BOOL,aux2620_INTEGER);
constraint bool2int(aux2626_BOOL,aux2626_INTEGER);
constraint bool2int(aux2632_BOOL,aux2632_INTEGER);
constraint bool2int(aux2638_BOOL,aux2638_INTEGER);
constraint bool2int(aux2644_BOOL,aux2644_INTEGER);
constraint bool2int(aux2650_BOOL,aux2650_INTEGER);
constraint bool2int(aux2656_BOOL,aux2656_INTEGER);
constraint bool2int(aux2662_BOOL,aux2662_INTEGER);
constraint bool2int(aux2668_BOOL,aux2668_INTEGER);
constraint bool2int(aux2674_BOOL,aux2674_INTEGER);
constraint bool2int(aux2680_BOOL,aux2680_INTEGER);
constraint bool2int(aux2686_BOOL,aux2686_INTEGER);
constraint bool2int(aux2692_BOOL,aux2692_INTEGER);
constraint bool2int(aux2698_BOOL,aux2698_INTEGER);
constraint bool2int(aux2704_BOOL,aux2704_INTEGER);
constraint bool2int(aux2710_BOOL,aux2710_INTEGER);
constraint bool2int(aux2716_BOOL,aux2716_INTEGER);
constraint bool2int(aux2721_BOOL,aux2721_INTEGER);
constraint bool2int(aux2727_BOOL,aux2727_INTEGER);
constraint bool2int(aux2733_BOOL,aux2733_INTEGER);
constraint bool2int(aux2739_BOOL,aux2739_INTEGER);
constraint bool2int(aux2745_BOOL,aux2745_INTEGER);
constraint bool2int(aux2751_BOOL,aux2751_INTEGER);
constraint bool2int(aux2757_BOOL,aux2757_INTEGER);
constraint bool2int(aux2763_BOOL,aux2763_INTEGER);
constraint bool2int(aux2769_BOOL,aux2769_INTEGER);
constraint bool2int(aux2775_BOOL,aux2775_INTEGER);
constraint bool2int(aux2781_BOOL,aux2781_INTEGER);
constraint bool2int(aux2787_BOOL,aux2787_INTEGER);
constraint bool2int(aux2793_BOOL,aux2793_INTEGER);
constraint bool2int(aux2799_BOOL,aux2799_INTEGER);
constraint bool2int(aux2805_BOOL,aux2805_INTEGER);
constraint bool2int(aux2811_BOOL,aux2811_INTEGER);
constraint bool2int(aux2817_BOOL,aux2817_INTEGER);
constraint bool2int(aux2823_BOOL,aux2823_INTEGER);
constraint bool2int(aux2829_BOOL,aux2829_INTEGER);
constraint bool2int(aux2835_BOOL,aux2835_INTEGER);
constraint bool2int(aux2841_BOOL,aux2841_INTEGER);
constraint bool2int(aux2847_BOOL,aux2847_INTEGER);
constraint bool2int(aux2853_BOOL,aux2853_INTEGER);
constraint bool2int(aux2859_BOOL,aux2859_INTEGER);
constraint bool2int(aux2865_BOOL,aux2865_INTEGER);
constraint bool2int(aux2871_BOOL,aux2871_INTEGER);
constraint bool2int(aux2877_BOOL,aux2877_INTEGER);
constraint bool2int(aux2883_BOOL,aux2883_INTEGER);
constraint bool2int(aux2889_BOOL,aux2889_INTEGER);
constraint bool2int(aux2895_BOOL,aux2895_INTEGER);
constraint bool2int(aux2901_BOOL,aux2901_INTEGER);
constraint bool2int(aux2907_BOOL,aux2907_INTEGER);
constraint bool2int(aux2913_BOOL,aux2913_INTEGER);
constraint bool2int(aux2919_BOOL,aux2919_INTEGER);
constraint bool2int(aux2925_BOOL,aux2925_INTEGER);
constraint bool2int(aux2931_BOOL,aux2931_INTEGER);
constraint bool2int(aux2937_BOOL,aux2937_INTEGER);
constraint bool2int(aux2943_BOOL,aux2943_INTEGER);
constraint bool2int(aux2949_BOOL,aux2949_INTEGER);
constraint bool2int(aux2955_BOOL,aux2955_INTEGER);
constraint bool2int(aux2960_BOOL,aux2960_INTEGER);
constraint bool2int(aux2966_BOOL,aux2966_INTEGER);
constraint bool2int(aux2972_BOOL,aux2972_INTEGER);
constraint bool2int(aux2978_BOOL,aux2978_INTEGER);
constraint bool2int(aux2984_BOOL,aux2984_INTEGER);
constraint bool2int(aux2990_BOOL,aux2990_INTEGER);
constraint bool2int(aux2996_BOOL,aux2996_INTEGER);
constraint bool2int(aux3002_BOOL,aux3002_INTEGER);
constraint bool2int(aux3008_BOOL,aux3008_INTEGER);
constraint bool2int(aux3014_BOOL,aux3014_INTEGER);
constraint bool2int(aux3020_BOOL,aux3020_INTEGER);
constraint bool2int(aux3026_BOOL,aux3026_INTEGER);
constraint bool2int(aux3032_BOOL,aux3032_INTEGER);
constraint bool2int(aux3038_BOOL,aux3038_INTEGER);
constraint bool2int(aux3044_BOOL,aux3044_INTEGER);
constraint bool2int(aux3050_BOOL,aux3050_INTEGER);
constraint bool2int(aux3056_BOOL,aux3056_INTEGER);
constraint bool2int(aux3062_BOOL,aux3062_INTEGER);
constraint bool2int(aux3068_BOOL,aux3068_INTEGER);
constraint bool2int(aux3074_BOOL,aux3074_INTEGER);
constraint bool2int(aux3079_BOOL,aux3079_INTEGER);
constraint bool2int(aux3085_BOOL,aux3085_INTEGER);
constraint bool2int(aux3091_BOOL,aux3091_INTEGER);
constraint bool2int(aux3097_BOOL,aux3097_INTEGER);
constraint bool2int(aux3103_BOOL,aux3103_INTEGER);
constraint bool2int(aux3109_BOOL,aux3109_INTEGER);
constraint bool2int(aux3115_BOOL,aux3115_INTEGER);
constraint bool2int(aux3121_BOOL,aux3121_INTEGER);
constraint bool2int(aux3127_BOOL,aux3127_INTEGER);
constraint bool2int(aux3133_BOOL,aux3133_INTEGER);
constraint bool2int(aux3139_BOOL,aux3139_INTEGER);
constraint bool2int(aux3145_BOOL,aux3145_INTEGER);
constraint bool2int(aux3151_BOOL,aux3151_INTEGER);
constraint bool2int(aux3157_BOOL,aux3157_INTEGER);
constraint bool2int(aux3163_BOOL,aux3163_INTEGER);
constraint bool2int(aux3169_BOOL,aux3169_INTEGER);
constraint bool2int(aux3175_BOOL,aux3175_INTEGER);
constraint bool2int(aux3181_BOOL,aux3181_INTEGER);
constraint bool2int(aux3187_BOOL,aux3187_INTEGER);
constraint bool2int(aux3193_BOOL,aux3193_INTEGER);
constraint bool2int(aux3198_BOOL,aux3198_INTEGER);
constraint bool2int(aux3204_BOOL,aux3204_INTEGER);
constraint bool2int(aux3210_BOOL,aux3210_INTEGER);
constraint bool2int(aux3216_BOOL,aux3216_INTEGER);
constraint bool2int(aux3222_BOOL,aux3222_INTEGER);
constraint bool2int(aux3228_BOOL,aux3228_INTEGER);
constraint bool2int(aux3234_BOOL,aux3234_INTEGER);
constraint bool2int(aux3240_BOOL,aux3240_INTEGER);
constraint bool2int(aux3246_BOOL,aux3246_INTEGER);
constraint bool2int(aux3252_BOOL,aux3252_INTEGER);
constraint bool2int(aux3258_BOOL,aux3258_INTEGER);
constraint bool2int(aux3264_BOOL,aux3264_INTEGER);
constraint bool2int(aux3270_BOOL,aux3270_INTEGER);
constraint bool2int(aux3276_BOOL,aux3276_INTEGER);
constraint bool2int(aux3282_BOOL,aux3282_INTEGER);
constraint bool2int(aux3288_BOOL,aux3288_INTEGER);
constraint bool2int(aux3294_BOOL,aux3294_INTEGER);
constraint bool2int(aux3300_BOOL,aux3300_INTEGER);
constraint bool2int(aux3306_BOOL,aux3306_INTEGER);
constraint bool2int(aux3312_BOOL,aux3312_INTEGER);
constraint bool2int(aux3317_BOOL,aux3317_INTEGER);
constraint bool2int(aux3323_BOOL,aux3323_INTEGER);
constraint bool2int(aux3329_BOOL,aux3329_INTEGER);
constraint bool2int(aux3335_BOOL,aux3335_INTEGER);
constraint bool2int(aux3341_BOOL,aux3341_INTEGER);
constraint bool2int(aux3347_BOOL,aux3347_INTEGER);
constraint bool2int(aux3353_BOOL,aux3353_INTEGER);
constraint bool2int(aux3359_BOOL,aux3359_INTEGER);
constraint bool2int(aux3365_BOOL,aux3365_INTEGER);
constraint bool2int(aux3371_BOOL,aux3371_INTEGER);
constraint bool2int(aux3377_BOOL,aux3377_INTEGER);
constraint bool2int(aux3383_BOOL,aux3383_INTEGER);
constraint bool2int(aux3389_BOOL,aux3389_INTEGER);
constraint bool2int(aux3395_BOOL,aux3395_INTEGER);
constraint bool2int(aux3401_BOOL,aux3401_INTEGER);
constraint bool2int(aux3407_BOOL,aux3407_INTEGER);
constraint bool2int(aux3413_BOOL,aux3413_INTEGER);
constraint bool2int(aux3419_BOOL,aux3419_INTEGER);
constraint bool2int(aux3425_BOOL,aux3425_INTEGER);
constraint bool2int(aux3431_BOOL,aux3431_INTEGER);
constraint bool2int(aux3436_BOOL,aux3436_INTEGER);
constraint bool2int(aux3442_BOOL,aux3442_INTEGER);
constraint bool2int(aux3448_BOOL,aux3448_INTEGER);
constraint bool2int(aux3454_BOOL,aux3454_INTEGER);
constraint bool2int(aux3460_BOOL,aux3460_INTEGER);
constraint bool2int(aux3466_BOOL,aux3466_INTEGER);
constraint bool2int(aux3472_BOOL,aux3472_INTEGER);
constraint bool2int(aux3478_BOOL,aux3478_INTEGER);
constraint bool2int(aux3484_BOOL,aux3484_INTEGER);
constraint bool2int(aux3490_BOOL,aux3490_INTEGER);
constraint bool2int(aux3496_BOOL,aux3496_INTEGER);
constraint bool2int(aux3502_BOOL,aux3502_INTEGER);
constraint bool2int(aux3508_BOOL,aux3508_INTEGER);
constraint bool2int(aux3514_BOOL,aux3514_INTEGER);
constraint bool2int(aux3520_BOOL,aux3520_INTEGER);
constraint bool2int(aux3526_BOOL,aux3526_INTEGER);
constraint bool2int(aux3532_BOOL,aux3532_INTEGER);
constraint bool2int(aux3538_BOOL,aux3538_INTEGER);
constraint bool2int(aux3544_BOOL,aux3544_INTEGER);
constraint bool2int(aux3550_BOOL,aux3550_INTEGER);
constraint bool2int(aux3555_BOOL,aux3555_INTEGER);
constraint bool2int(aux3561_BOOL,aux3561_INTEGER);
constraint bool2int(aux3567_BOOL,aux3567_INTEGER);
constraint bool2int(aux3573_BOOL,aux3573_INTEGER);
constraint bool2int(aux3579_BOOL,aux3579_INTEGER);
constraint bool2int(aux3585_BOOL,aux3585_INTEGER);
constraint bool2int(aux3591_BOOL,aux3591_INTEGER);
constraint bool2int(aux3597_BOOL,aux3597_INTEGER);
constraint bool2int(aux3603_BOOL,aux3603_INTEGER);
constraint bool2int(aux3609_BOOL,aux3609_INTEGER);
constraint bool2int(aux3615_BOOL,aux3615_INTEGER);
constraint bool2int(aux3621_BOOL,aux3621_INTEGER);
constraint bool2int(aux3627_BOOL,aux3627_INTEGER);
constraint bool2int(aux3633_BOOL,aux3633_INTEGER);
constraint bool2int(aux3639_BOOL,aux3639_INTEGER);
constraint bool2int(aux3645_BOOL,aux3645_INTEGER);
constraint bool2int(aux3651_BOOL,aux3651_INTEGER);
constraint bool2int(aux3657_BOOL,aux3657_INTEGER);
constraint bool2int(aux3663_BOOL,aux3663_INTEGER);
constraint bool2int(aux3669_BOOL,aux3669_INTEGER);
constraint bool2int(aux3674_BOOL,aux3674_INTEGER);
constraint bool2int(aux3680_BOOL,aux3680_INTEGER);
constraint bool2int(aux3686_BOOL,aux3686_INTEGER);
constraint bool2int(aux3692_BOOL,aux3692_INTEGER);
constraint bool2int(aux3698_BOOL,aux3698_INTEGER);
constraint bool2int(aux3704_BOOL,aux3704_INTEGER);
constraint bool2int(aux3710_BOOL,aux3710_INTEGER);
constraint bool2int(aux3716_BOOL,aux3716_INTEGER);
constraint bool2int(aux3722_BOOL,aux3722_INTEGER);
constraint bool2int(aux3728_BOOL,aux3728_INTEGER);
constraint bool2int(aux3734_BOOL,aux3734_INTEGER);
constraint bool2int(aux3740_BOOL,aux3740_INTEGER);
constraint bool2int(aux3746_BOOL,aux3746_INTEGER);
constraint bool2int(aux3752_BOOL,aux3752_INTEGER);
constraint bool2int(aux3758_BOOL,aux3758_INTEGER);
constraint bool2int(aux3764_BOOL,aux3764_INTEGER);
constraint bool2int(aux3770_BOOL,aux3770_INTEGER);
constraint bool2int(aux3776_BOOL,aux3776_INTEGER);
constraint bool2int(aux3782_BOOL,aux3782_INTEGER);
constraint bool2int(aux3788_BOOL,aux3788_INTEGER);
constraint bool2int(aux3793_BOOL,aux3793_INTEGER);
constraint bool2int(aux3799_BOOL,aux3799_INTEGER);
constraint bool2int(aux3805_BOOL,aux3805_INTEGER);
constraint bool2int(aux3811_BOOL,aux3811_INTEGER);
constraint bool2int(aux3817_BOOL,aux3817_INTEGER);
constraint bool2int(aux3823_BOOL,aux3823_INTEGER);
constraint bool2int(aux3829_BOOL,aux3829_INTEGER);
constraint bool2int(aux3835_BOOL,aux3835_INTEGER);
constraint bool2int(aux3841_BOOL,aux3841_INTEGER);
constraint bool2int(aux3847_BOOL,aux3847_INTEGER);
constraint bool2int(aux3853_BOOL,aux3853_INTEGER);
constraint bool2int(aux3859_BOOL,aux3859_INTEGER);
constraint bool2int(aux3865_BOOL,aux3865_INTEGER);
constraint bool2int(aux3871_BOOL,aux3871_INTEGER);
constraint bool2int(aux3877_BOOL,aux3877_INTEGER);
constraint bool2int(aux3883_BOOL,aux3883_INTEGER);
constraint bool2int(aux3889_BOOL,aux3889_INTEGER);
constraint bool2int(aux3895_BOOL,aux3895_INTEGER);
constraint bool2int(aux3901_BOOL,aux3901_INTEGER);
constraint bool2int(aux3907_BOOL,aux3907_INTEGER);
constraint bool2int(aux3912_BOOL,aux3912_INTEGER);
constraint bool2int(aux3918_BOOL,aux3918_INTEGER);
constraint bool2int(aux3924_BOOL,aux3924_INTEGER);
constraint bool2int(aux3930_BOOL,aux3930_INTEGER);
constraint bool2int(aux3936_BOOL,aux3936_INTEGER);
constraint bool2int(aux3942_BOOL,aux3942_INTEGER);
constraint bool2int(aux3948_BOOL,aux3948_INTEGER);
constraint bool2int(aux3954_BOOL,aux3954_INTEGER);
constraint bool2int(aux3960_BOOL,aux3960_INTEGER);
constraint bool2int(aux3966_BOOL,aux3966_INTEGER);
constraint bool2int(aux3972_BOOL,aux3972_INTEGER);
constraint bool2int(aux3978_BOOL,aux3978_INTEGER);
constraint bool2int(aux3984_BOOL,aux3984_INTEGER);
constraint bool2int(aux3990_BOOL,aux3990_INTEGER);
constraint bool2int(aux3996_BOOL,aux3996_INTEGER);
constraint bool2int(aux4002_BOOL,aux4002_INTEGER);
constraint bool2int(aux4008_BOOL,aux4008_INTEGER);
constraint bool2int(aux4014_BOOL,aux4014_INTEGER);
constraint bool2int(aux4020_BOOL,aux4020_INTEGER);
constraint bool2int(aux4026_BOOL,aux4026_INTEGER);
constraint bool2int(aux4031_BOOL,aux4031_INTEGER);
constraint bool2int(aux4037_BOOL,aux4037_INTEGER);
constraint bool2int(aux4043_BOOL,aux4043_INTEGER);
constraint bool2int(aux4049_BOOL,aux4049_INTEGER);
constraint bool2int(aux4055_BOOL,aux4055_INTEGER);
constraint bool2int(aux4061_BOOL,aux4061_INTEGER);
constraint bool2int(aux4067_BOOL,aux4067_INTEGER);
constraint bool2int(aux4073_BOOL,aux4073_INTEGER);
constraint bool2int(aux4079_BOOL,aux4079_INTEGER);
constraint bool2int(aux4085_BOOL,aux4085_INTEGER);
constraint bool2int(aux4091_BOOL,aux4091_INTEGER);
constraint bool2int(aux4097_BOOL,aux4097_INTEGER);
constraint bool2int(aux4103_BOOL,aux4103_INTEGER);
constraint bool2int(aux4109_BOOL,aux4109_INTEGER);
constraint bool2int(aux4115_BOOL,aux4115_INTEGER);
constraint bool2int(aux4121_BOOL,aux4121_INTEGER);
constraint bool2int(aux4127_BOOL,aux4127_INTEGER);
constraint bool2int(aux4133_BOOL,aux4133_INTEGER);
constraint bool2int(aux4139_BOOL,aux4139_INTEGER);
constraint bool2int(aux4145_BOOL,aux4145_INTEGER);
constraint bool2int(aux4150_BOOL,aux4150_INTEGER);
constraint bool2int(aux4156_BOOL,aux4156_INTEGER);
constraint bool2int(aux4162_BOOL,aux4162_INTEGER);
constraint bool2int(aux4168_BOOL,aux4168_INTEGER);
constraint bool2int(aux4174_BOOL,aux4174_INTEGER);
constraint bool2int(aux4180_BOOL,aux4180_INTEGER);
constraint bool2int(aux4186_BOOL,aux4186_INTEGER);
constraint bool2int(aux4192_BOOL,aux4192_INTEGER);
constraint bool2int(aux4198_BOOL,aux4198_INTEGER);
constraint bool2int(aux4204_BOOL,aux4204_INTEGER);
constraint bool2int(aux4210_BOOL,aux4210_INTEGER);
constraint bool2int(aux4216_BOOL,aux4216_INTEGER);
constraint bool2int(aux4222_BOOL,aux4222_INTEGER);
constraint bool2int(aux4228_BOOL,aux4228_INTEGER);
constraint bool2int(aux4234_BOOL,aux4234_INTEGER);
constraint bool2int(aux4240_BOOL,aux4240_INTEGER);
constraint bool2int(aux4246_BOOL,aux4246_INTEGER);
constraint bool2int(aux4252_BOOL,aux4252_INTEGER);
constraint bool2int(aux4258_BOOL,aux4258_INTEGER);
constraint bool2int(aux4264_BOOL,aux4264_INTEGER);
constraint bool2int(aux4269_BOOL,aux4269_INTEGER);
constraint bool2int(aux4275_BOOL,aux4275_INTEGER);
constraint bool2int(aux4281_BOOL,aux4281_INTEGER);
constraint bool2int(aux4287_BOOL,aux4287_INTEGER);
constraint bool2int(aux4293_BOOL,aux4293_INTEGER);
constraint bool2int(aux4299_BOOL,aux4299_INTEGER);
constraint bool2int(aux4305_BOOL,aux4305_INTEGER);
constraint bool2int(aux4311_BOOL,aux4311_INTEGER);
constraint bool2int(aux4317_BOOL,aux4317_INTEGER);
constraint bool2int(aux4323_BOOL,aux4323_INTEGER);
constraint bool2int(aux4329_BOOL,aux4329_INTEGER);
constraint bool2int(aux4335_BOOL,aux4335_INTEGER);
constraint bool2int(aux4341_BOOL,aux4341_INTEGER);
constraint bool2int(aux4347_BOOL,aux4347_INTEGER);
constraint bool2int(aux4353_BOOL,aux4353_INTEGER);
constraint bool2int(aux4359_BOOL,aux4359_INTEGER);
constraint bool2int(aux4365_BOOL,aux4365_INTEGER);
constraint bool2int(aux4371_BOOL,aux4371_INTEGER);
constraint bool2int(aux4377_BOOL,aux4377_INTEGER);
constraint bool2int(aux4383_BOOL,aux4383_INTEGER);
constraint bool2int(aux4388_BOOL,aux4388_INTEGER);
constraint bool2int(aux4394_BOOL,aux4394_INTEGER);
constraint bool2int(aux4400_BOOL,aux4400_INTEGER);
constraint bool2int(aux4406_BOOL,aux4406_INTEGER);
constraint bool2int(aux4412_BOOL,aux4412_INTEGER);
constraint bool2int(aux4418_BOOL,aux4418_INTEGER);
constraint bool2int(aux4424_BOOL,aux4424_INTEGER);
constraint bool2int(aux4430_BOOL,aux4430_INTEGER);
constraint bool2int(aux4436_BOOL,aux4436_INTEGER);
constraint bool2int(aux4442_BOOL,aux4442_INTEGER);
constraint bool2int(aux4448_BOOL,aux4448_INTEGER);
constraint bool2int(aux4454_BOOL,aux4454_INTEGER);
constraint bool2int(aux4460_BOOL,aux4460_INTEGER);
constraint bool2int(aux4466_BOOL,aux4466_INTEGER);
constraint bool2int(aux4472_BOOL,aux4472_INTEGER);
constraint bool2int(aux4478_BOOL,aux4478_INTEGER);
constraint bool2int(aux4484_BOOL,aux4484_INTEGER);
constraint bool2int(aux4490_BOOL,aux4490_INTEGER);
constraint bool2int(aux4496_BOOL,aux4496_INTEGER);
constraint bool2int(aux4502_BOOL,aux4502_INTEGER);
constraint bool2int(aux4507_BOOL,aux4507_INTEGER);
constraint bool2int(aux4513_BOOL,aux4513_INTEGER);
constraint bool2int(aux4519_BOOL,aux4519_INTEGER);
constraint bool2int(aux4525_BOOL,aux4525_INTEGER);
constraint bool2int(aux4531_BOOL,aux4531_INTEGER);
constraint bool2int(aux4537_BOOL,aux4537_INTEGER);
constraint bool2int(aux4543_BOOL,aux4543_INTEGER);
constraint bool2int(aux4549_BOOL,aux4549_INTEGER);
constraint bool2int(aux4555_BOOL,aux4555_INTEGER);
constraint bool2int(aux4561_BOOL,aux4561_INTEGER);
constraint bool2int(aux4567_BOOL,aux4567_INTEGER);
constraint bool2int(aux4573_BOOL,aux4573_INTEGER);
constraint bool2int(aux4579_BOOL,aux4579_INTEGER);
constraint bool2int(aux4585_BOOL,aux4585_INTEGER);
constraint bool2int(aux4591_BOOL,aux4591_INTEGER);
constraint bool2int(aux4597_BOOL,aux4597_INTEGER);
constraint bool2int(aux4603_BOOL,aux4603_INTEGER);
constraint bool2int(aux4609_BOOL,aux4609_INTEGER);
constraint bool2int(aux4615_BOOL,aux4615_INTEGER);
constraint bool2int(aux4621_BOOL,aux4621_INTEGER);
constraint bool2int(aux4626_BOOL,aux4626_INTEGER);
constraint bool2int(aux4632_BOOL,aux4632_INTEGER);
constraint bool2int(aux4638_BOOL,aux4638_INTEGER);
constraint bool2int(aux4644_BOOL,aux4644_INTEGER);
constraint bool2int(aux4650_BOOL,aux4650_INTEGER);
constraint bool2int(aux4656_BOOL,aux4656_INTEGER);
constraint bool2int(aux4662_BOOL,aux4662_INTEGER);
constraint bool2int(aux4668_BOOL,aux4668_INTEGER);
constraint bool2int(aux4674_BOOL,aux4674_INTEGER);
constraint bool2int(aux4680_BOOL,aux4680_INTEGER);
constraint bool2int(aux4686_BOOL,aux4686_INTEGER);
constraint bool2int(aux4692_BOOL,aux4692_INTEGER);
constraint bool2int(aux4698_BOOL,aux4698_INTEGER);
constraint bool2int(aux4704_BOOL,aux4704_INTEGER);
constraint bool2int(aux4710_BOOL,aux4710_INTEGER);
constraint bool2int(aux4716_BOOL,aux4716_INTEGER);
constraint bool2int(aux4722_BOOL,aux4722_INTEGER);
constraint bool2int(aux4728_BOOL,aux4728_INTEGER);
constraint bool2int(aux4734_BOOL,aux4734_INTEGER);
constraint bool2int(aux4740_BOOL,aux4740_INTEGER);
constraint bool2int(aux4745_BOOL,aux4745_INTEGER);
constraint bool2int(aux4751_BOOL,aux4751_INTEGER);
constraint bool2int(aux4757_BOOL,aux4757_INTEGER);
constraint bool2int(aux4763_BOOL,aux4763_INTEGER);
constraint bool2int(aux4769_BOOL,aux4769_INTEGER);
constraint bool2int(aux4775_BOOL,aux4775_INTEGER);
constraint bool2int(aux4781_BOOL,aux4781_INTEGER);
constraint bool2int(aux4787_BOOL,aux4787_INTEGER);
constraint bool2int(aux4793_BOOL,aux4793_INTEGER);
constraint bool2int(aux4799_BOOL,aux4799_INTEGER);
constraint bool2int(aux4805_BOOL,aux4805_INTEGER);
constraint bool2int(aux4811_BOOL,aux4811_INTEGER);
constraint bool2int(aux4817_BOOL,aux4817_INTEGER);
constraint bool2int(aux4823_BOOL,aux4823_INTEGER);
constraint bool2int(aux4829_BOOL,aux4829_INTEGER);
constraint bool2int(aux4835_BOOL,aux4835_INTEGER);
constraint bool2int(aux4841_BOOL,aux4841_INTEGER);
constraint bool2int(aux4847_BOOL,aux4847_INTEGER);
constraint bool2int(aux4853_BOOL,aux4853_INTEGER);
constraint bool2int(aux4859_BOOL,aux4859_INTEGER);
constraint bool2int(aux4864_BOOL,aux4864_INTEGER);
constraint bool2int(aux4870_BOOL,aux4870_INTEGER);
constraint bool2int(aux4876_BOOL,aux4876_INTEGER);
constraint bool2int(aux4882_BOOL,aux4882_INTEGER);
constraint bool2int(aux4888_BOOL,aux4888_INTEGER);
constraint bool2int(aux4894_BOOL,aux4894_INTEGER);
constraint bool2int(aux4900_BOOL,aux4900_INTEGER);
constraint bool2int(aux4906_BOOL,aux4906_INTEGER);
constraint bool2int(aux4912_BOOL,aux4912_INTEGER);
constraint bool2int(aux4918_BOOL,aux4918_INTEGER);
constraint bool2int(aux4924_BOOL,aux4924_INTEGER);
constraint bool2int(aux4930_BOOL,aux4930_INTEGER);
constraint bool2int(aux4936_BOOL,aux4936_INTEGER);
constraint bool2int(aux4942_BOOL,aux4942_INTEGER);
constraint bool2int(aux4948_BOOL,aux4948_INTEGER);
constraint bool2int(aux4954_BOOL,aux4954_INTEGER);
constraint bool2int(aux4960_BOOL,aux4960_INTEGER);
constraint bool2int(aux4966_BOOL,aux4966_INTEGER);
constraint bool2int(aux4972_BOOL,aux4972_INTEGER);
constraint bool2int(aux4978_BOOL,aux4978_INTEGER);
constraint bool2int(aux4983_BOOL,aux4983_INTEGER);
constraint bool2int(aux4989_BOOL,aux4989_INTEGER);
constraint bool2int(aux4995_BOOL,aux4995_INTEGER);
constraint bool2int(aux5001_BOOL,aux5001_INTEGER);
constraint bool2int(aux5007_BOOL,aux5007_INTEGER);
constraint bool2int(aux5013_BOOL,aux5013_INTEGER);
constraint bool2int(aux5019_BOOL,aux5019_INTEGER);
constraint bool2int(aux5025_BOOL,aux5025_INTEGER);
constraint bool2int(aux5031_BOOL,aux5031_INTEGER);
constraint bool2int(aux5037_BOOL,aux5037_INTEGER);
constraint bool2int(aux5043_BOOL,aux5043_INTEGER);
constraint bool2int(aux5049_BOOL,aux5049_INTEGER);
constraint bool2int(aux5055_BOOL,aux5055_INTEGER);
constraint bool2int(aux5061_BOOL,aux5061_INTEGER);
constraint bool2int(aux5067_BOOL,aux5067_INTEGER);
constraint bool2int(aux5073_BOOL,aux5073_INTEGER);
constraint bool2int(aux5079_BOOL,aux5079_INTEGER);
constraint bool2int(aux5085_BOOL,aux5085_INTEGER);
constraint bool2int(aux5091_BOOL,aux5091_INTEGER);
constraint bool2int(aux5097_BOOL,aux5097_INTEGER);
constraint bool2int(aux5102_BOOL,aux5102_INTEGER);
constraint bool2int(aux5108_BOOL,aux5108_INTEGER);
constraint bool2int(aux5114_BOOL,aux5114_INTEGER);
constraint bool2int(aux5120_BOOL,aux5120_INTEGER);
constraint bool2int(aux5126_BOOL,aux5126_INTEGER);
constraint bool2int(aux5132_BOOL,aux5132_INTEGER);
constraint bool2int(aux5138_BOOL,aux5138_INTEGER);
constraint bool2int(aux5144_BOOL,aux5144_INTEGER);
constraint bool2int(aux5150_BOOL,aux5150_INTEGER);
constraint bool2int(aux5156_BOOL,aux5156_INTEGER);
constraint bool2int(aux5162_BOOL,aux5162_INTEGER);
constraint bool2int(aux5168_BOOL,aux5168_INTEGER);
constraint bool2int(aux5174_BOOL,aux5174_INTEGER);
constraint bool2int(aux5180_BOOL,aux5180_INTEGER);
constraint bool2int(aux5186_BOOL,aux5186_INTEGER);
constraint bool2int(aux5192_BOOL,aux5192_INTEGER);
constraint bool2int(aux5198_BOOL,aux5198_INTEGER);
constraint bool2int(aux5204_BOOL,aux5204_INTEGER);
constraint bool2int(aux5210_BOOL,aux5210_INTEGER);
constraint bool2int(aux5216_BOOL,aux5216_INTEGER);
constraint bool2int(aux5225_BOOL,aux5225_INTEGER);
constraint bool2int(aux5231_BOOL,aux5231_INTEGER);
constraint bool2int(aux5237_BOOL,aux5237_INTEGER);
constraint bool2int(aux5243_BOOL,aux5243_INTEGER);
constraint bool2int(aux5249_BOOL,aux5249_INTEGER);
constraint bool2int(aux5255_BOOL,aux5255_INTEGER);
constraint bool2int(aux5261_BOOL,aux5261_INTEGER);
constraint bool2int(aux5267_BOOL,aux5267_INTEGER);
constraint bool2int(aux5273_BOOL,aux5273_INTEGER);
constraint bool2int(aux5279_BOOL,aux5279_INTEGER);
constraint bool2int(aux5285_BOOL,aux5285_INTEGER);
constraint bool2int(aux5291_BOOL,aux5291_INTEGER);
constraint bool2int(aux5297_BOOL,aux5297_INTEGER);
constraint bool2int(aux5303_BOOL,aux5303_INTEGER);
constraint bool2int(aux5309_BOOL,aux5309_INTEGER);
constraint bool2int(aux5315_BOOL,aux5315_INTEGER);
constraint bool2int(aux5321_BOOL,aux5321_INTEGER);
constraint bool2int(aux5327_BOOL,aux5327_INTEGER);
constraint bool2int(aux5333_BOOL,aux5333_INTEGER);
constraint bool2int(aux5337_BOOL,aux5337_INTEGER);
constraint bool2int(aux5344_BOOL,aux5344_INTEGER);
constraint bool2int(aux5350_BOOL,aux5350_INTEGER);
constraint bool2int(aux5356_BOOL,aux5356_INTEGER);
constraint bool2int(aux5362_BOOL,aux5362_INTEGER);
constraint bool2int(aux5368_BOOL,aux5368_INTEGER);
constraint bool2int(aux5374_BOOL,aux5374_INTEGER);
constraint bool2int(aux5380_BOOL,aux5380_INTEGER);
constraint bool2int(aux5386_BOOL,aux5386_INTEGER);
constraint bool2int(aux5392_BOOL,aux5392_INTEGER);
constraint bool2int(aux5398_BOOL,aux5398_INTEGER);
constraint bool2int(aux5404_BOOL,aux5404_INTEGER);
constraint bool2int(aux5410_BOOL,aux5410_INTEGER);
constraint bool2int(aux5416_BOOL,aux5416_INTEGER);
constraint bool2int(aux5422_BOOL,aux5422_INTEGER);
constraint bool2int(aux5428_BOOL,aux5428_INTEGER);
constraint bool2int(aux5434_BOOL,aux5434_INTEGER);
constraint bool2int(aux5440_BOOL,aux5440_INTEGER);
constraint bool2int(aux5446_BOOL,aux5446_INTEGER);
constraint bool2int(aux5452_BOOL,aux5452_INTEGER);
constraint bool2int(aux5456_BOOL,aux5456_INTEGER);
constraint bool2int(aux5463_BOOL,aux5463_INTEGER);
constraint bool2int(aux5469_BOOL,aux5469_INTEGER);
constraint bool2int(aux5475_BOOL,aux5475_INTEGER);
constraint bool2int(aux5481_BOOL,aux5481_INTEGER);
constraint bool2int(aux5487_BOOL,aux5487_INTEGER);
constraint bool2int(aux5493_BOOL,aux5493_INTEGER);
constraint bool2int(aux5499_BOOL,aux5499_INTEGER);
constraint bool2int(aux5505_BOOL,aux5505_INTEGER);
constraint bool2int(aux5511_BOOL,aux5511_INTEGER);
constraint bool2int(aux5517_BOOL,aux5517_INTEGER);
constraint bool2int(aux5523_BOOL,aux5523_INTEGER);
constraint bool2int(aux5529_BOOL,aux5529_INTEGER);
constraint bool2int(aux5535_BOOL,aux5535_INTEGER);
constraint bool2int(aux5541_BOOL,aux5541_INTEGER);
constraint bool2int(aux5547_BOOL,aux5547_INTEGER);
constraint bool2int(aux5553_BOOL,aux5553_INTEGER);
constraint bool2int(aux5559_BOOL,aux5559_INTEGER);
constraint bool2int(aux5565_BOOL,aux5565_INTEGER);
constraint bool2int(aux5571_BOOL,aux5571_INTEGER);
constraint bool2int(aux5575_BOOL,aux5575_INTEGER);
constraint bool2int(aux5582_BOOL,aux5582_INTEGER);
constraint bool2int(aux5588_BOOL,aux5588_INTEGER);
constraint bool2int(aux5594_BOOL,aux5594_INTEGER);
constraint bool2int(aux5600_BOOL,aux5600_INTEGER);
constraint bool2int(aux5606_BOOL,aux5606_INTEGER);
constraint bool2int(aux5612_BOOL,aux5612_INTEGER);
constraint bool2int(aux5618_BOOL,aux5618_INTEGER);
constraint bool2int(aux5624_BOOL,aux5624_INTEGER);
constraint bool2int(aux5630_BOOL,aux5630_INTEGER);
constraint bool2int(aux5636_BOOL,aux5636_INTEGER);
constraint bool2int(aux5642_BOOL,aux5642_INTEGER);
constraint bool2int(aux5648_BOOL,aux5648_INTEGER);
constraint bool2int(aux5654_BOOL,aux5654_INTEGER);
constraint bool2int(aux5660_BOOL,aux5660_INTEGER);
constraint bool2int(aux5666_BOOL,aux5666_INTEGER);
constraint bool2int(aux5672_BOOL,aux5672_INTEGER);
constraint bool2int(aux5678_BOOL,aux5678_INTEGER);
constraint bool2int(aux5684_BOOL,aux5684_INTEGER);
constraint bool2int(aux5690_BOOL,aux5690_INTEGER);
constraint bool2int(aux5694_BOOL,aux5694_INTEGER);
constraint bool2int(aux5701_BOOL,aux5701_INTEGER);
constraint bool2int(aux5707_BOOL,aux5707_INTEGER);
constraint bool2int(aux5713_BOOL,aux5713_INTEGER);
constraint bool2int(aux5719_BOOL,aux5719_INTEGER);
constraint bool2int(aux5725_BOOL,aux5725_INTEGER);
constraint bool2int(aux5731_BOOL,aux5731_INTEGER);
constraint bool2int(aux5737_BOOL,aux5737_INTEGER);
constraint bool2int(aux5743_BOOL,aux5743_INTEGER);
constraint bool2int(aux5749_BOOL,aux5749_INTEGER);
constraint bool2int(aux5755_BOOL,aux5755_INTEGER);
constraint bool2int(aux5761_BOOL,aux5761_INTEGER);
constraint bool2int(aux5767_BOOL,aux5767_INTEGER);
constraint bool2int(aux5773_BOOL,aux5773_INTEGER);
constraint bool2int(aux5779_BOOL,aux5779_INTEGER);
constraint bool2int(aux5785_BOOL,aux5785_INTEGER);
constraint bool2int(aux5791_BOOL,aux5791_INTEGER);
constraint bool2int(aux5797_BOOL,aux5797_INTEGER);
constraint bool2int(aux5803_BOOL,aux5803_INTEGER);
constraint bool2int(aux5809_BOOL,aux5809_INTEGER);
constraint bool2int(aux5813_BOOL,aux5813_INTEGER);
constraint bool2int(aux5820_BOOL,aux5820_INTEGER);
constraint bool2int(aux5826_BOOL,aux5826_INTEGER);
constraint bool2int(aux5832_BOOL,aux5832_INTEGER);
constraint bool2int(aux5838_BOOL,aux5838_INTEGER);
constraint bool2int(aux5844_BOOL,aux5844_INTEGER);
constraint bool2int(aux5850_BOOL,aux5850_INTEGER);
constraint bool2int(aux5856_BOOL,aux5856_INTEGER);
constraint bool2int(aux5862_BOOL,aux5862_INTEGER);
constraint bool2int(aux5868_BOOL,aux5868_INTEGER);
constraint bool2int(aux5874_BOOL,aux5874_INTEGER);
constraint bool2int(aux5880_BOOL,aux5880_INTEGER);
constraint bool2int(aux5886_BOOL,aux5886_INTEGER);
constraint bool2int(aux5892_BOOL,aux5892_INTEGER);
constraint bool2int(aux5898_BOOL,aux5898_INTEGER);
constraint bool2int(aux5904_BOOL,aux5904_INTEGER);
constraint bool2int(aux5910_BOOL,aux5910_INTEGER);
constraint bool2int(aux5916_BOOL,aux5916_INTEGER);
constraint bool2int(aux5922_BOOL,aux5922_INTEGER);
constraint bool2int(aux5928_BOOL,aux5928_INTEGER);
constraint bool2int(aux5932_BOOL,aux5932_INTEGER);
constraint bool2int(aux5939_BOOL,aux5939_INTEGER);
constraint bool2int(aux5945_BOOL,aux5945_INTEGER);
constraint bool2int(aux5951_BOOL,aux5951_INTEGER);
constraint bool2int(aux5957_BOOL,aux5957_INTEGER);
constraint bool2int(aux5963_BOOL,aux5963_INTEGER);
constraint bool2int(aux5969_BOOL,aux5969_INTEGER);
constraint bool2int(aux5975_BOOL,aux5975_INTEGER);
constraint bool2int(aux5981_BOOL,aux5981_INTEGER);
constraint bool2int(aux5987_BOOL,aux5987_INTEGER);
constraint bool2int(aux5993_BOOL,aux5993_INTEGER);
constraint bool2int(aux5999_BOOL,aux5999_INTEGER);
constraint bool2int(aux6005_BOOL,aux6005_INTEGER);
constraint bool2int(aux6011_BOOL,aux6011_INTEGER);
constraint bool2int(aux6017_BOOL,aux6017_INTEGER);
constraint bool2int(aux6023_BOOL,aux6023_INTEGER);
constraint bool2int(aux6029_BOOL,aux6029_INTEGER);
constraint bool2int(aux6035_BOOL,aux6035_INTEGER);
constraint bool2int(aux6041_BOOL,aux6041_INTEGER);
constraint bool2int(aux6047_BOOL,aux6047_INTEGER);
constraint bool2int(aux6051_BOOL,aux6051_INTEGER);
constraint bool2int(aux6058_BOOL,aux6058_INTEGER);
constraint bool2int(aux6064_BOOL,aux6064_INTEGER);
constraint bool2int(aux6070_BOOL,aux6070_INTEGER);
constraint bool2int(aux6076_BOOL,aux6076_INTEGER);
constraint bool2int(aux6082_BOOL,aux6082_INTEGER);
constraint bool2int(aux6088_BOOL,aux6088_INTEGER);
constraint bool2int(aux6094_BOOL,aux6094_INTEGER);
constraint bool2int(aux6100_BOOL,aux6100_INTEGER);
constraint bool2int(aux6106_BOOL,aux6106_INTEGER);
constraint bool2int(aux6112_BOOL,aux6112_INTEGER);
constraint bool2int(aux6118_BOOL,aux6118_INTEGER);
constraint bool2int(aux6124_BOOL,aux6124_INTEGER);
constraint bool2int(aux6130_BOOL,aux6130_INTEGER);
constraint bool2int(aux6136_BOOL,aux6136_INTEGER);
constraint bool2int(aux6142_BOOL,aux6142_INTEGER);
constraint bool2int(aux6148_BOOL,aux6148_INTEGER);
constraint bool2int(aux6154_BOOL,aux6154_INTEGER);
constraint bool2int(aux6160_BOOL,aux6160_INTEGER);
constraint bool2int(aux6166_BOOL,aux6166_INTEGER);
constraint bool2int(aux6170_BOOL,aux6170_INTEGER);
constraint bool2int(aux6177_BOOL,aux6177_INTEGER);
constraint bool2int(aux6183_BOOL,aux6183_INTEGER);
constraint bool2int(aux6189_BOOL,aux6189_INTEGER);
constraint bool2int(aux6195_BOOL,aux6195_INTEGER);
constraint bool2int(aux6201_BOOL,aux6201_INTEGER);
constraint bool2int(aux6207_BOOL,aux6207_INTEGER);
constraint bool2int(aux6213_BOOL,aux6213_INTEGER);
constraint bool2int(aux6219_BOOL,aux6219_INTEGER);
constraint bool2int(aux6225_BOOL,aux6225_INTEGER);
constraint bool2int(aux6231_BOOL,aux6231_INTEGER);
constraint bool2int(aux6237_BOOL,aux6237_INTEGER);
constraint bool2int(aux6243_BOOL,aux6243_INTEGER);
constraint bool2int(aux6249_BOOL,aux6249_INTEGER);
constraint bool2int(aux6255_BOOL,aux6255_INTEGER);
constraint bool2int(aux6261_BOOL,aux6261_INTEGER);
constraint bool2int(aux6267_BOOL,aux6267_INTEGER);
constraint bool2int(aux6273_BOOL,aux6273_INTEGER);
constraint bool2int(aux6279_BOOL,aux6279_INTEGER);
constraint bool2int(aux6285_BOOL,aux6285_INTEGER);
constraint bool2int(aux6289_BOOL,aux6289_INTEGER);
constraint bool2int(aux6296_BOOL,aux6296_INTEGER);
constraint bool2int(aux6302_BOOL,aux6302_INTEGER);
constraint bool2int(aux6308_BOOL,aux6308_INTEGER);
constraint bool2int(aux6314_BOOL,aux6314_INTEGER);
constraint bool2int(aux6320_BOOL,aux6320_INTEGER);
constraint bool2int(aux6326_BOOL,aux6326_INTEGER);
constraint bool2int(aux6332_BOOL,aux6332_INTEGER);
constraint bool2int(aux6338_BOOL,aux6338_INTEGER);
constraint bool2int(aux6344_BOOL,aux6344_INTEGER);
constraint bool2int(aux6350_BOOL,aux6350_INTEGER);
constraint bool2int(aux6356_BOOL,aux6356_INTEGER);
constraint bool2int(aux6362_BOOL,aux6362_INTEGER);
constraint bool2int(aux6368_BOOL,aux6368_INTEGER);
constraint bool2int(aux6374_BOOL,aux6374_INTEGER);
constraint bool2int(aux6380_BOOL,aux6380_INTEGER);
constraint bool2int(aux6386_BOOL,aux6386_INTEGER);
constraint bool2int(aux6392_BOOL,aux6392_INTEGER);
constraint bool2int(aux6398_BOOL,aux6398_INTEGER);
constraint bool2int(aux6404_BOOL,aux6404_INTEGER);
constraint bool2int(aux6408_BOOL,aux6408_INTEGER);
constraint bool2int(aux6415_BOOL,aux6415_INTEGER);
constraint bool2int(aux6421_BOOL,aux6421_INTEGER);
constraint bool2int(aux6427_BOOL,aux6427_INTEGER);
constraint bool2int(aux6433_BOOL,aux6433_INTEGER);
constraint bool2int(aux6439_BOOL,aux6439_INTEGER);
constraint bool2int(aux6445_BOOL,aux6445_INTEGER);
constraint bool2int(aux6451_BOOL,aux6451_INTEGER);
constraint bool2int(aux6457_BOOL,aux6457_INTEGER);
constraint bool2int(aux6463_BOOL,aux6463_INTEGER);
constraint bool2int(aux6469_BOOL,aux6469_INTEGER);
constraint bool2int(aux6475_BOOL,aux6475_INTEGER);
constraint bool2int(aux6481_BOOL,aux6481_INTEGER);
constraint bool2int(aux6487_BOOL,aux6487_INTEGER);
constraint bool2int(aux6493_BOOL,aux6493_INTEGER);
constraint bool2int(aux6499_BOOL,aux6499_INTEGER);
constraint bool2int(aux6505_BOOL,aux6505_INTEGER);
constraint bool2int(aux6511_BOOL,aux6511_INTEGER);
constraint bool2int(aux6517_BOOL,aux6517_INTEGER);
constraint bool2int(aux6523_BOOL,aux6523_INTEGER);
constraint bool2int(aux6527_BOOL,aux6527_INTEGER);
constraint bool2int(aux6534_BOOL,aux6534_INTEGER);
constraint bool2int(aux6540_BOOL,aux6540_INTEGER);
constraint bool2int(aux6546_BOOL,aux6546_INTEGER);
constraint bool2int(aux6552_BOOL,aux6552_INTEGER);
constraint bool2int(aux6558_BOOL,aux6558_INTEGER);
constraint bool2int(aux6564_BOOL,aux6564_INTEGER);
constraint bool2int(aux6570_BOOL,aux6570_INTEGER);
constraint bool2int(aux6576_BOOL,aux6576_INTEGER);
constraint bool2int(aux6582_BOOL,aux6582_INTEGER);
constraint bool2int(aux6588_BOOL,aux6588_INTEGER);
constraint bool2int(aux6594_BOOL,aux6594_INTEGER);
constraint bool2int(aux6600_BOOL,aux6600_INTEGER);
constraint bool2int(aux6606_BOOL,aux6606_INTEGER);
constraint bool2int(aux6612_BOOL,aux6612_INTEGER);
constraint bool2int(aux6618_BOOL,aux6618_INTEGER);
constraint bool2int(aux6624_BOOL,aux6624_INTEGER);
constraint bool2int(aux6630_BOOL,aux6630_INTEGER);
constraint bool2int(aux6636_BOOL,aux6636_INTEGER);
constraint bool2int(aux6642_BOOL,aux6642_INTEGER);
constraint bool2int(aux6646_BOOL,aux6646_INTEGER);
constraint bool2int(aux6653_BOOL,aux6653_INTEGER);
constraint bool2int(aux6659_BOOL,aux6659_INTEGER);
constraint bool2int(aux6665_BOOL,aux6665_INTEGER);
constraint bool2int(aux6671_BOOL,aux6671_INTEGER);
constraint bool2int(aux6677_BOOL,aux6677_INTEGER);
constraint bool2int(aux6683_BOOL,aux6683_INTEGER);
constraint bool2int(aux6689_BOOL,aux6689_INTEGER);
constraint bool2int(aux6695_BOOL,aux6695_INTEGER);
constraint bool2int(aux6701_BOOL,aux6701_INTEGER);
constraint bool2int(aux6707_BOOL,aux6707_INTEGER);
constraint bool2int(aux6713_BOOL,aux6713_INTEGER);
constraint bool2int(aux6719_BOOL,aux6719_INTEGER);
constraint bool2int(aux6725_BOOL,aux6725_INTEGER);
constraint bool2int(aux6731_BOOL,aux6731_INTEGER);
constraint bool2int(aux6737_BOOL,aux6737_INTEGER);
constraint bool2int(aux6743_BOOL,aux6743_INTEGER);
constraint bool2int(aux6749_BOOL,aux6749_INTEGER);
constraint bool2int(aux6755_BOOL,aux6755_INTEGER);
constraint bool2int(aux6761_BOOL,aux6761_INTEGER);
constraint bool2int(aux6765_BOOL,aux6765_INTEGER);
constraint bool2int(aux6772_BOOL,aux6772_INTEGER);
constraint bool2int(aux6778_BOOL,aux6778_INTEGER);
constraint bool2int(aux6784_BOOL,aux6784_INTEGER);
constraint bool2int(aux6790_BOOL,aux6790_INTEGER);
constraint bool2int(aux6796_BOOL,aux6796_INTEGER);
constraint bool2int(aux6802_BOOL,aux6802_INTEGER);
constraint bool2int(aux6808_BOOL,aux6808_INTEGER);
constraint bool2int(aux6814_BOOL,aux6814_INTEGER);
constraint bool2int(aux6820_BOOL,aux6820_INTEGER);
constraint bool2int(aux6826_BOOL,aux6826_INTEGER);
constraint bool2int(aux6832_BOOL,aux6832_INTEGER);
constraint bool2int(aux6838_BOOL,aux6838_INTEGER);
constraint bool2int(aux6844_BOOL,aux6844_INTEGER);
constraint bool2int(aux6850_BOOL,aux6850_INTEGER);
constraint bool2int(aux6856_BOOL,aux6856_INTEGER);
constraint bool2int(aux6862_BOOL,aux6862_INTEGER);
constraint bool2int(aux6868_BOOL,aux6868_INTEGER);
constraint bool2int(aux6874_BOOL,aux6874_INTEGER);
constraint bool2int(aux6880_BOOL,aux6880_INTEGER);
constraint bool2int(aux6884_BOOL,aux6884_INTEGER);
constraint bool2int(aux6891_BOOL,aux6891_INTEGER);
constraint bool2int(aux6897_BOOL,aux6897_INTEGER);
constraint bool2int(aux6903_BOOL,aux6903_INTEGER);
constraint bool2int(aux6909_BOOL,aux6909_INTEGER);
constraint bool2int(aux6915_BOOL,aux6915_INTEGER);
constraint bool2int(aux6921_BOOL,aux6921_INTEGER);
constraint bool2int(aux6927_BOOL,aux6927_INTEGER);
constraint bool2int(aux6933_BOOL,aux6933_INTEGER);
constraint bool2int(aux6939_BOOL,aux6939_INTEGER);
constraint bool2int(aux6945_BOOL,aux6945_INTEGER);
constraint bool2int(aux6951_BOOL,aux6951_INTEGER);
constraint bool2int(aux6957_BOOL,aux6957_INTEGER);
constraint bool2int(aux6963_BOOL,aux6963_INTEGER);
constraint bool2int(aux6969_BOOL,aux6969_INTEGER);
constraint bool2int(aux6975_BOOL,aux6975_INTEGER);
constraint bool2int(aux6981_BOOL,aux6981_INTEGER);
constraint bool2int(aux6987_BOOL,aux6987_INTEGER);
constraint bool2int(aux6993_BOOL,aux6993_INTEGER);
constraint bool2int(aux6999_BOOL,aux6999_INTEGER);
constraint bool2int(aux7003_BOOL,aux7003_INTEGER);
constraint bool2int(aux7010_BOOL,aux7010_INTEGER);
constraint bool2int(aux7016_BOOL,aux7016_INTEGER);
constraint bool2int(aux7022_BOOL,aux7022_INTEGER);
constraint bool2int(aux7028_BOOL,aux7028_INTEGER);
constraint bool2int(aux7034_BOOL,aux7034_INTEGER);
constraint bool2int(aux7040_BOOL,aux7040_INTEGER);
constraint bool2int(aux7046_BOOL,aux7046_INTEGER);
constraint bool2int(aux7052_BOOL,aux7052_INTEGER);
constraint bool2int(aux7058_BOOL,aux7058_INTEGER);
constraint bool2int(aux7064_BOOL,aux7064_INTEGER);
constraint bool2int(aux7070_BOOL,aux7070_INTEGER);
constraint bool2int(aux7076_BOOL,aux7076_INTEGER);
constraint bool2int(aux7082_BOOL,aux7082_INTEGER);
constraint bool2int(aux7088_BOOL,aux7088_INTEGER);
constraint bool2int(aux7094_BOOL,aux7094_INTEGER);
constraint bool2int(aux7100_BOOL,aux7100_INTEGER);
constraint bool2int(aux7106_BOOL,aux7106_INTEGER);
constraint bool2int(aux7112_BOOL,aux7112_INTEGER);
constraint bool2int(aux7118_BOOL,aux7118_INTEGER);
constraint bool2int(aux7122_BOOL,aux7122_INTEGER);
constraint bool2int(aux7129_BOOL,aux7129_INTEGER);
constraint bool2int(aux7135_BOOL,aux7135_INTEGER);
constraint bool2int(aux7141_BOOL,aux7141_INTEGER);
constraint bool2int(aux7147_BOOL,aux7147_INTEGER);
constraint bool2int(aux7153_BOOL,aux7153_INTEGER);
constraint bool2int(aux7159_BOOL,aux7159_INTEGER);
constraint bool2int(aux7165_BOOL,aux7165_INTEGER);
constraint bool2int(aux7171_BOOL,aux7171_INTEGER);
constraint bool2int(aux7177_BOOL,aux7177_INTEGER);
constraint bool2int(aux7183_BOOL,aux7183_INTEGER);
constraint bool2int(aux7189_BOOL,aux7189_INTEGER);
constraint bool2int(aux7195_BOOL,aux7195_INTEGER);
constraint bool2int(aux7201_BOOL,aux7201_INTEGER);
constraint bool2int(aux7207_BOOL,aux7207_INTEGER);
constraint bool2int(aux7213_BOOL,aux7213_INTEGER);
constraint bool2int(aux7219_BOOL,aux7219_INTEGER);
constraint bool2int(aux7225_BOOL,aux7225_INTEGER);
constraint bool2int(aux7231_BOOL,aux7231_INTEGER);
constraint bool2int(aux7237_BOOL,aux7237_INTEGER);
constraint bool2int(aux7241_BOOL,aux7241_INTEGER);
constraint bool2int(aux7248_BOOL,aux7248_INTEGER);
constraint bool2int(aux7254_BOOL,aux7254_INTEGER);
constraint bool2int(aux7260_BOOL,aux7260_INTEGER);
constraint bool2int(aux7266_BOOL,aux7266_INTEGER);
constraint bool2int(aux7272_BOOL,aux7272_INTEGER);
constraint bool2int(aux7278_BOOL,aux7278_INTEGER);
constraint bool2int(aux7284_BOOL,aux7284_INTEGER);
constraint bool2int(aux7290_BOOL,aux7290_INTEGER);
constraint bool2int(aux7296_BOOL,aux7296_INTEGER);
constraint bool2int(aux7302_BOOL,aux7302_INTEGER);
constraint bool2int(aux7308_BOOL,aux7308_INTEGER);
constraint bool2int(aux7314_BOOL,aux7314_INTEGER);
constraint bool2int(aux7320_BOOL,aux7320_INTEGER);
constraint bool2int(aux7326_BOOL,aux7326_INTEGER);
constraint bool2int(aux7332_BOOL,aux7332_INTEGER);
constraint bool2int(aux7338_BOOL,aux7338_INTEGER);
constraint bool2int(aux7344_BOOL,aux7344_INTEGER);
constraint bool2int(aux7350_BOOL,aux7350_INTEGER);
constraint bool2int(aux7356_BOOL,aux7356_INTEGER);
constraint bool2int(aux7360_BOOL,aux7360_INTEGER);
constraint bool2int(aux7367_BOOL,aux7367_INTEGER);
constraint bool2int(aux7373_BOOL,aux7373_INTEGER);
constraint bool2int(aux7379_BOOL,aux7379_INTEGER);
constraint bool2int(aux7385_BOOL,aux7385_INTEGER);
constraint bool2int(aux7391_BOOL,aux7391_INTEGER);
constraint bool2int(aux7397_BOOL,aux7397_INTEGER);
constraint bool2int(aux7403_BOOL,aux7403_INTEGER);
constraint bool2int(aux7409_BOOL,aux7409_INTEGER);
constraint bool2int(aux7415_BOOL,aux7415_INTEGER);
constraint bool2int(aux7421_BOOL,aux7421_INTEGER);
constraint bool2int(aux7427_BOOL,aux7427_INTEGER);
constraint bool2int(aux7433_BOOL,aux7433_INTEGER);
constraint bool2int(aux7439_BOOL,aux7439_INTEGER);
constraint bool2int(aux7445_BOOL,aux7445_INTEGER);
constraint bool2int(aux7451_BOOL,aux7451_INTEGER);
constraint bool2int(aux7457_BOOL,aux7457_INTEGER);
constraint bool2int(aux7463_BOOL,aux7463_INTEGER);
constraint bool2int(aux7469_BOOL,aux7469_INTEGER);
constraint bool2int(aux7475_BOOL,aux7475_INTEGER);
constraint bool2int(aux7479_BOOL,aux7479_INTEGER);
constraint bool2int(aux7486_BOOL,aux7486_INTEGER);
constraint bool2int(aux7492_BOOL,aux7492_INTEGER);
constraint bool2int(aux7498_BOOL,aux7498_INTEGER);
constraint bool2int(aux7504_BOOL,aux7504_INTEGER);
constraint bool2int(aux7510_BOOL,aux7510_INTEGER);
constraint bool2int(aux7516_BOOL,aux7516_INTEGER);
constraint bool2int(aux7522_BOOL,aux7522_INTEGER);
constraint bool2int(aux7528_BOOL,aux7528_INTEGER);
constraint bool2int(aux7534_BOOL,aux7534_INTEGER);
constraint bool2int(aux7540_BOOL,aux7540_INTEGER);
constraint bool2int(aux7546_BOOL,aux7546_INTEGER);
constraint bool2int(aux7552_BOOL,aux7552_INTEGER);
constraint bool2int(aux7558_BOOL,aux7558_INTEGER);
constraint bool2int(aux7564_BOOL,aux7564_INTEGER);
constraint bool2int(aux7570_BOOL,aux7570_INTEGER);
constraint bool2int(aux7576_BOOL,aux7576_INTEGER);
constraint bool2int(aux7582_BOOL,aux7582_INTEGER);
constraint bool2int(aux7588_BOOL,aux7588_INTEGER);
constraint bool2int(aux7594_BOOL,aux7594_INTEGER);
constraint bool2int(aux7598_BOOL,aux7598_INTEGER);
constraint bool2int(aux7605_BOOL,aux7605_INTEGER);
constraint bool2int(aux7611_BOOL,aux7611_INTEGER);
constraint bool2int(aux7617_BOOL,aux7617_INTEGER);
constraint bool2int(aux7623_BOOL,aux7623_INTEGER);
constraint bool2int(aux7629_BOOL,aux7629_INTEGER);
constraint bool2int(aux7635_BOOL,aux7635_INTEGER);
constraint bool2int(aux7641_BOOL,aux7641_INTEGER);
constraint bool2int(aux7647_BOOL,aux7647_INTEGER);
constraint bool2int(aux7653_BOOL,aux7653_INTEGER);
constraint bool2int(aux7659_BOOL,aux7659_INTEGER);
constraint bool2int(aux7665_BOOL,aux7665_INTEGER);
constraint bool2int(aux7671_BOOL,aux7671_INTEGER);
constraint bool2int(aux7677_BOOL,aux7677_INTEGER);
constraint bool2int(aux7683_BOOL,aux7683_INTEGER);
constraint bool2int(aux7689_BOOL,aux7689_INTEGER);
constraint bool2int(aux7695_BOOL,aux7695_INTEGER);
constraint bool2int(aux7701_BOOL,aux7701_INTEGER);
constraint bool2int(aux7707_BOOL,aux7707_INTEGER);
constraint bool2int(aux7713_BOOL,aux7713_INTEGER);
constraint bool2int(aux7719_BOOL,aux7719_INTEGER);
constraint bool2int(aux7726_BOOL,aux7726_INTEGER);
constraint bool2int(aux7732_BOOL,aux7732_INTEGER);
constraint bool2int(aux7738_BOOL,aux7738_INTEGER);
constraint bool2int(aux7744_BOOL,aux7744_INTEGER);
constraint bool2int(aux7750_BOOL,aux7750_INTEGER);
constraint bool2int(aux7756_BOOL,aux7756_INTEGER);
constraint bool2int(aux7762_BOOL,aux7762_INTEGER);
constraint bool2int(aux7768_BOOL,aux7768_INTEGER);
constraint bool2int(aux7774_BOOL,aux7774_INTEGER);
constraint bool2int(aux7780_BOOL,aux7780_INTEGER);
constraint bool2int(aux7784_BOOL,aux7784_INTEGER);
constraint bool2int(aux7790_BOOL,aux7790_INTEGER);
constraint bool2int(aux7796_BOOL,aux7796_INTEGER);
constraint bool2int(aux7802_BOOL,aux7802_INTEGER);
constraint bool2int(aux7808_BOOL,aux7808_INTEGER);
constraint bool2int(aux7814_BOOL,aux7814_INTEGER);
constraint bool2int(aux7820_BOOL,aux7820_INTEGER);
constraint bool2int(aux7826_BOOL,aux7826_INTEGER);
constraint bool2int(aux7832_BOOL,aux7832_INTEGER);
constraint bool2int(aux7838_BOOL,aux7838_INTEGER);
constraint bool2int(aux7845_BOOL,aux7845_INTEGER);
constraint bool2int(aux7851_BOOL,aux7851_INTEGER);
constraint bool2int(aux7857_BOOL,aux7857_INTEGER);
constraint bool2int(aux7863_BOOL,aux7863_INTEGER);
constraint bool2int(aux7869_BOOL,aux7869_INTEGER);
constraint bool2int(aux7875_BOOL,aux7875_INTEGER);
constraint bool2int(aux7881_BOOL,aux7881_INTEGER);
constraint bool2int(aux7887_BOOL,aux7887_INTEGER);
constraint bool2int(aux7893_BOOL,aux7893_INTEGER);
constraint bool2int(aux7899_BOOL,aux7899_INTEGER);
constraint bool2int(aux7903_BOOL,aux7903_INTEGER);
constraint bool2int(aux7909_BOOL,aux7909_INTEGER);
constraint bool2int(aux7915_BOOL,aux7915_INTEGER);
constraint bool2int(aux7921_BOOL,aux7921_INTEGER);
constraint bool2int(aux7927_BOOL,aux7927_INTEGER);
constraint bool2int(aux7933_BOOL,aux7933_INTEGER);
constraint bool2int(aux7939_BOOL,aux7939_INTEGER);
constraint bool2int(aux7945_BOOL,aux7945_INTEGER);
constraint bool2int(aux7951_BOOL,aux7951_INTEGER);
constraint bool2int(aux7957_BOOL,aux7957_INTEGER);
constraint bool2int(aux7964_BOOL,aux7964_INTEGER);
constraint bool2int(aux7970_BOOL,aux7970_INTEGER);
constraint bool2int(aux7976_BOOL,aux7976_INTEGER);
constraint bool2int(aux7982_BOOL,aux7982_INTEGER);
constraint bool2int(aux7988_BOOL,aux7988_INTEGER);
constraint bool2int(aux7994_BOOL,aux7994_INTEGER);
constraint bool2int(aux8000_BOOL,aux8000_INTEGER);
constraint bool2int(aux8006_BOOL,aux8006_INTEGER);
constraint bool2int(aux8012_BOOL,aux8012_INTEGER);
constraint bool2int(aux8018_BOOL,aux8018_INTEGER);
constraint bool2int(aux8022_BOOL,aux8022_INTEGER);
constraint bool2int(aux8028_BOOL,aux8028_INTEGER);
constraint bool2int(aux8034_BOOL,aux8034_INTEGER);
constraint bool2int(aux8040_BOOL,aux8040_INTEGER);
constraint bool2int(aux8046_BOOL,aux8046_INTEGER);
constraint bool2int(aux8052_BOOL,aux8052_INTEGER);
constraint bool2int(aux8058_BOOL,aux8058_INTEGER);
constraint bool2int(aux8064_BOOL,aux8064_INTEGER);
constraint bool2int(aux8070_BOOL,aux8070_INTEGER);
constraint bool2int(aux8076_BOOL,aux8076_INTEGER);
constraint bool2int(aux8081_BOOL,aux8081_INTEGER);
constraint bool2int(aux8087_BOOL,aux8087_INTEGER);
constraint bool2int(aux8093_BOOL,aux8093_INTEGER);
constraint bool2int(aux8099_BOOL,aux8099_INTEGER);
constraint bool2int(aux8105_BOOL,aux8105_INTEGER);
constraint bool2int(aux8111_BOOL,aux8111_INTEGER);
constraint bool2int(aux8117_BOOL,aux8117_INTEGER);
constraint bool2int(aux8123_BOOL,aux8123_INTEGER);
constraint bool2int(aux8129_BOOL,aux8129_INTEGER);
constraint bool2int(aux8135_BOOL,aux8135_INTEGER);
constraint bool2int(aux8141_BOOL,aux8141_INTEGER);
constraint bool2int(aux8147_BOOL,aux8147_INTEGER);
constraint bool2int(aux8153_BOOL,aux8153_INTEGER);
constraint bool2int(aux8159_BOOL,aux8159_INTEGER);
constraint bool2int(aux8165_BOOL,aux8165_INTEGER);
constraint bool2int(aux8171_BOOL,aux8171_INTEGER);
constraint bool2int(aux8177_BOOL,aux8177_INTEGER);
constraint bool2int(aux8183_BOOL,aux8183_INTEGER);
constraint bool2int(aux8189_BOOL,aux8189_INTEGER);
constraint bool2int(aux8195_BOOL,aux8195_INTEGER);
constraint bool2int(aux8202_BOOL,aux8202_INTEGER);
constraint bool2int(aux8208_BOOL,aux8208_INTEGER);
constraint bool2int(aux8214_BOOL,aux8214_INTEGER);
constraint bool2int(aux8220_BOOL,aux8220_INTEGER);
constraint bool2int(aux8226_BOOL,aux8226_INTEGER);
constraint bool2int(aux8232_BOOL,aux8232_INTEGER);
constraint bool2int(aux8238_BOOL,aux8238_INTEGER);
constraint bool2int(aux8244_BOOL,aux8244_INTEGER);
constraint bool2int(aux8250_BOOL,aux8250_INTEGER);
constraint bool2int(aux8256_BOOL,aux8256_INTEGER);
constraint bool2int(aux8260_BOOL,aux8260_INTEGER);
constraint bool2int(aux8266_BOOL,aux8266_INTEGER);
constraint bool2int(aux8272_BOOL,aux8272_INTEGER);
constraint bool2int(aux8278_BOOL,aux8278_INTEGER);
constraint bool2int(aux8284_BOOL,aux8284_INTEGER);
constraint bool2int(aux8290_BOOL,aux8290_INTEGER);
constraint bool2int(aux8296_BOOL,aux8296_INTEGER);
constraint bool2int(aux8302_BOOL,aux8302_INTEGER);
constraint bool2int(aux8308_BOOL,aux8308_INTEGER);
constraint bool2int(aux8314_BOOL,aux8314_INTEGER);
constraint bool2int(aux8321_BOOL,aux8321_INTEGER);
constraint bool2int(aux8327_BOOL,aux8327_INTEGER);
constraint bool2int(aux8333_BOOL,aux8333_INTEGER);
constraint bool2int(aux8339_BOOL,aux8339_INTEGER);
constraint bool2int(aux8345_BOOL,aux8345_INTEGER);
constraint bool2int(aux8351_BOOL,aux8351_INTEGER);
constraint bool2int(aux8357_BOOL,aux8357_INTEGER);
constraint bool2int(aux8363_BOOL,aux8363_INTEGER);
constraint bool2int(aux8369_BOOL,aux8369_INTEGER);
constraint bool2int(aux8375_BOOL,aux8375_INTEGER);
constraint bool2int(aux8379_BOOL,aux8379_INTEGER);
constraint bool2int(aux8385_BOOL,aux8385_INTEGER);
constraint bool2int(aux8391_BOOL,aux8391_INTEGER);
constraint bool2int(aux8397_BOOL,aux8397_INTEGER);
constraint bool2int(aux8403_BOOL,aux8403_INTEGER);
constraint bool2int(aux8409_BOOL,aux8409_INTEGER);
constraint bool2int(aux8415_BOOL,aux8415_INTEGER);
constraint bool2int(aux8421_BOOL,aux8421_INTEGER);
constraint bool2int(aux8427_BOOL,aux8427_INTEGER);
constraint bool2int(aux8433_BOOL,aux8433_INTEGER);
constraint bool2int(aux8440_BOOL,aux8440_INTEGER);
constraint bool2int(aux8446_BOOL,aux8446_INTEGER);
constraint bool2int(aux8452_BOOL,aux8452_INTEGER);
constraint bool2int(aux8458_BOOL,aux8458_INTEGER);
constraint bool2int(aux8464_BOOL,aux8464_INTEGER);
constraint bool2int(aux8470_BOOL,aux8470_INTEGER);
constraint bool2int(aux8476_BOOL,aux8476_INTEGER);
constraint bool2int(aux8482_BOOL,aux8482_INTEGER);
constraint bool2int(aux8488_BOOL,aux8488_INTEGER);
constraint bool2int(aux8494_BOOL,aux8494_INTEGER);
constraint bool2int(aux8498_BOOL,aux8498_INTEGER);
constraint bool2int(aux8504_BOOL,aux8504_INTEGER);
constraint bool2int(aux8510_BOOL,aux8510_INTEGER);
constraint bool2int(aux8516_BOOL,aux8516_INTEGER);
constraint bool2int(aux8522_BOOL,aux8522_INTEGER);
constraint bool2int(aux8528_BOOL,aux8528_INTEGER);
constraint bool2int(aux8534_BOOL,aux8534_INTEGER);
constraint bool2int(aux8540_BOOL,aux8540_INTEGER);
constraint bool2int(aux8546_BOOL,aux8546_INTEGER);
constraint bool2int(aux8552_BOOL,aux8552_INTEGER);
constraint bool2int(aux8557_BOOL,aux8557_INTEGER);
constraint bool2int(aux8563_BOOL,aux8563_INTEGER);
constraint bool2int(aux8569_BOOL,aux8569_INTEGER);
constraint bool2int(aux8575_BOOL,aux8575_INTEGER);
constraint bool2int(aux8581_BOOL,aux8581_INTEGER);
constraint bool2int(aux8587_BOOL,aux8587_INTEGER);
constraint bool2int(aux8593_BOOL,aux8593_INTEGER);
constraint bool2int(aux8599_BOOL,aux8599_INTEGER);
constraint bool2int(aux8605_BOOL,aux8605_INTEGER);
constraint bool2int(aux8611_BOOL,aux8611_INTEGER);
constraint bool2int(aux8617_BOOL,aux8617_INTEGER);
constraint bool2int(aux8623_BOOL,aux8623_INTEGER);
constraint bool2int(aux8629_BOOL,aux8629_INTEGER);
constraint bool2int(aux8635_BOOL,aux8635_INTEGER);
constraint bool2int(aux8641_BOOL,aux8641_INTEGER);
constraint bool2int(aux8647_BOOL,aux8647_INTEGER);
constraint bool2int(aux8653_BOOL,aux8653_INTEGER);
constraint bool2int(aux8659_BOOL,aux8659_INTEGER);
constraint bool2int(aux8665_BOOL,aux8665_INTEGER);
constraint bool2int(aux8671_BOOL,aux8671_INTEGER);
constraint bool2int(aux8676_BOOL,aux8676_INTEGER);
constraint bool2int(aux8682_BOOL,aux8682_INTEGER);
constraint bool2int(aux8688_BOOL,aux8688_INTEGER);
constraint bool2int(aux8694_BOOL,aux8694_INTEGER);
constraint bool2int(aux8700_BOOL,aux8700_INTEGER);
constraint bool2int(aux8706_BOOL,aux8706_INTEGER);
constraint bool2int(aux8712_BOOL,aux8712_INTEGER);
constraint bool2int(aux8718_BOOL,aux8718_INTEGER);
constraint bool2int(aux8724_BOOL,aux8724_INTEGER);
constraint bool2int(aux8730_BOOL,aux8730_INTEGER);
constraint bool2int(aux8736_BOOL,aux8736_INTEGER);
constraint bool2int(aux8742_BOOL,aux8742_INTEGER);
constraint bool2int(aux8748_BOOL,aux8748_INTEGER);
constraint bool2int(aux8754_BOOL,aux8754_INTEGER);
constraint bool2int(aux8760_BOOL,aux8760_INTEGER);
constraint bool2int(aux8766_BOOL,aux8766_INTEGER);
constraint bool2int(aux8772_BOOL,aux8772_INTEGER);
constraint bool2int(aux8778_BOOL,aux8778_INTEGER);
constraint bool2int(aux8784_BOOL,aux8784_INTEGER);
constraint bool2int(aux8790_BOOL,aux8790_INTEGER);
constraint bool2int(aux8797_BOOL,aux8797_INTEGER);
constraint bool2int(aux8803_BOOL,aux8803_INTEGER);
constraint bool2int(aux8809_BOOL,aux8809_INTEGER);
constraint bool2int(aux8815_BOOL,aux8815_INTEGER);
constraint bool2int(aux8821_BOOL,aux8821_INTEGER);
constraint bool2int(aux8827_BOOL,aux8827_INTEGER);
constraint bool2int(aux8833_BOOL,aux8833_INTEGER);
constraint bool2int(aux8839_BOOL,aux8839_INTEGER);
constraint bool2int(aux8845_BOOL,aux8845_INTEGER);
constraint bool2int(aux8851_BOOL,aux8851_INTEGER);
constraint bool2int(aux8855_BOOL,aux8855_INTEGER);
constraint bool2int(aux8861_BOOL,aux8861_INTEGER);
constraint bool2int(aux8867_BOOL,aux8867_INTEGER);
constraint bool2int(aux8873_BOOL,aux8873_INTEGER);
constraint bool2int(aux8879_BOOL,aux8879_INTEGER);
constraint bool2int(aux8885_BOOL,aux8885_INTEGER);
constraint bool2int(aux8891_BOOL,aux8891_INTEGER);
constraint bool2int(aux8897_BOOL,aux8897_INTEGER);
constraint bool2int(aux8903_BOOL,aux8903_INTEGER);
constraint bool2int(aux8909_BOOL,aux8909_INTEGER);
constraint bool2int(aux8914_BOOL,aux8914_INTEGER);
constraint bool2int(aux8920_BOOL,aux8920_INTEGER);
constraint bool2int(aux8926_BOOL,aux8926_INTEGER);
constraint bool2int(aux8932_BOOL,aux8932_INTEGER);
constraint bool2int(aux8938_BOOL,aux8938_INTEGER);
constraint bool2int(aux8944_BOOL,aux8944_INTEGER);
constraint bool2int(aux8950_BOOL,aux8950_INTEGER);
constraint bool2int(aux8956_BOOL,aux8956_INTEGER);
constraint bool2int(aux8962_BOOL,aux8962_INTEGER);
constraint bool2int(aux8968_BOOL,aux8968_INTEGER);
constraint bool2int(aux8974_BOOL,aux8974_INTEGER);
constraint bool2int(aux8980_BOOL,aux8980_INTEGER);
constraint bool2int(aux8986_BOOL,aux8986_INTEGER);
constraint bool2int(aux8992_BOOL,aux8992_INTEGER);
constraint bool2int(aux8998_BOOL,aux8998_INTEGER);
constraint bool2int(aux9004_BOOL,aux9004_INTEGER);
constraint bool2int(aux9010_BOOL,aux9010_INTEGER);
constraint bool2int(aux9016_BOOL,aux9016_INTEGER);
constraint bool2int(aux9022_BOOL,aux9022_INTEGER);
constraint bool2int(aux9028_BOOL,aux9028_INTEGER);
constraint bool2int(aux9035_BOOL,aux9035_INTEGER);
constraint bool2int(aux9041_BOOL,aux9041_INTEGER);
constraint bool2int(aux9047_BOOL,aux9047_INTEGER);
constraint bool2int(aux9053_BOOL,aux9053_INTEGER);
constraint bool2int(aux9059_BOOL,aux9059_INTEGER);
constraint bool2int(aux9065_BOOL,aux9065_INTEGER);
constraint bool2int(aux9071_BOOL,aux9071_INTEGER);
constraint bool2int(aux9077_BOOL,aux9077_INTEGER);
constraint bool2int(aux9083_BOOL,aux9083_INTEGER);
constraint bool2int(aux9089_BOOL,aux9089_INTEGER);
constraint bool2int(aux9093_BOOL,aux9093_INTEGER);
constraint bool2int(aux9099_BOOL,aux9099_INTEGER);
constraint bool2int(aux9105_BOOL,aux9105_INTEGER);
constraint bool2int(aux9111_BOOL,aux9111_INTEGER);
constraint bool2int(aux9117_BOOL,aux9117_INTEGER);
constraint bool2int(aux9123_BOOL,aux9123_INTEGER);
constraint bool2int(aux9129_BOOL,aux9129_INTEGER);
constraint bool2int(aux9135_BOOL,aux9135_INTEGER);
constraint bool2int(aux9141_BOOL,aux9141_INTEGER);
constraint bool2int(aux9147_BOOL,aux9147_INTEGER);
constraint bool2int(aux9154_BOOL,aux9154_INTEGER);
constraint bool2int(aux9160_BOOL,aux9160_INTEGER);
constraint bool2int(aux9166_BOOL,aux9166_INTEGER);
constraint bool2int(aux9172_BOOL,aux9172_INTEGER);
constraint bool2int(aux9178_BOOL,aux9178_INTEGER);
constraint bool2int(aux9184_BOOL,aux9184_INTEGER);
constraint bool2int(aux9190_BOOL,aux9190_INTEGER);
constraint bool2int(aux9196_BOOL,aux9196_INTEGER);
constraint bool2int(aux9202_BOOL,aux9202_INTEGER);
constraint bool2int(aux9208_BOOL,aux9208_INTEGER);
constraint bool2int(aux9212_BOOL,aux9212_INTEGER);
constraint bool2int(aux9218_BOOL,aux9218_INTEGER);
constraint bool2int(aux9224_BOOL,aux9224_INTEGER);
constraint bool2int(aux9230_BOOL,aux9230_INTEGER);
constraint bool2int(aux9236_BOOL,aux9236_INTEGER);
constraint bool2int(aux9242_BOOL,aux9242_INTEGER);
constraint bool2int(aux9248_BOOL,aux9248_INTEGER);
constraint bool2int(aux9254_BOOL,aux9254_INTEGER);
constraint bool2int(aux9260_BOOL,aux9260_INTEGER);
constraint bool2int(aux9266_BOOL,aux9266_INTEGER);
constraint bool2int(aux9271_BOOL,aux9271_INTEGER);
constraint bool2int(aux9277_BOOL,aux9277_INTEGER);
constraint bool2int(aux9283_BOOL,aux9283_INTEGER);
constraint bool2int(aux9289_BOOL,aux9289_INTEGER);
constraint bool2int(aux9295_BOOL,aux9295_INTEGER);
constraint bool2int(aux9301_BOOL,aux9301_INTEGER);
constraint bool2int(aux9307_BOOL,aux9307_INTEGER);
constraint bool2int(aux9313_BOOL,aux9313_INTEGER);
constraint bool2int(aux9319_BOOL,aux9319_INTEGER);
constraint bool2int(aux9325_BOOL,aux9325_INTEGER);
constraint bool2int(aux9331_BOOL,aux9331_INTEGER);
constraint bool2int(aux9337_BOOL,aux9337_INTEGER);
constraint bool2int(aux9343_BOOL,aux9343_INTEGER);
constraint bool2int(aux9349_BOOL,aux9349_INTEGER);
constraint bool2int(aux9355_BOOL,aux9355_INTEGER);
constraint bool2int(aux9361_BOOL,aux9361_INTEGER);
constraint bool2int(aux9367_BOOL,aux9367_INTEGER);
constraint bool2int(aux9373_BOOL,aux9373_INTEGER);
constraint bool2int(aux9379_BOOL,aux9379_INTEGER);
constraint bool2int(aux9385_BOOL,aux9385_INTEGER);
constraint bool2int(aux9390_BOOL,aux9390_INTEGER);
constraint bool2int(aux9396_BOOL,aux9396_INTEGER);
constraint bool2int(aux9402_BOOL,aux9402_INTEGER);
constraint bool2int(aux9408_BOOL,aux9408_INTEGER);
constraint bool2int(aux9414_BOOL,aux9414_INTEGER);
constraint bool2int(aux9420_BOOL,aux9420_INTEGER);
constraint bool2int(aux9426_BOOL,aux9426_INTEGER);
constraint bool2int(aux9432_BOOL,aux9432_INTEGER);
constraint bool2int(aux9438_BOOL,aux9438_INTEGER);
constraint bool2int(aux9444_BOOL,aux9444_INTEGER);
constraint bool2int(aux9450_BOOL,aux9450_INTEGER);
constraint bool2int(aux9456_BOOL,aux9456_INTEGER);
constraint bool2int(aux9462_BOOL,aux9462_INTEGER);
constraint bool2int(aux9468_BOOL,aux9468_INTEGER);
constraint bool2int(aux9474_BOOL,aux9474_INTEGER);
constraint bool2int(aux9480_BOOL,aux9480_INTEGER);
constraint bool2int(aux9486_BOOL,aux9486_INTEGER);
constraint bool2int(aux9492_BOOL,aux9492_INTEGER);
constraint bool2int(aux9498_BOOL,aux9498_INTEGER);
constraint bool2int(aux9504_BOOL,aux9504_INTEGER);
constraint bool2int(aux9509_BOOL,aux9509_INTEGER);
constraint bool2int(aux9515_BOOL,aux9515_INTEGER);
constraint bool2int(aux9521_BOOL,aux9521_INTEGER);
constraint bool2int(aux9527_BOOL,aux9527_INTEGER);
constraint bool2int(aux9533_BOOL,aux9533_INTEGER);
constraint bool2int(aux9539_BOOL,aux9539_INTEGER);
constraint bool2int(aux9545_BOOL,aux9545_INTEGER);
constraint bool2int(aux9551_BOOL,aux9551_INTEGER);
constraint bool2int(aux9557_BOOL,aux9557_INTEGER);
constraint bool2int(aux9563_BOOL,aux9563_INTEGER);
constraint bool2int(aux9569_BOOL,aux9569_INTEGER);
constraint bool2int(aux9575_BOOL,aux9575_INTEGER);
constraint bool2int(aux9581_BOOL,aux9581_INTEGER);
constraint bool2int(aux9587_BOOL,aux9587_INTEGER);
constraint bool2int(aux9593_BOOL,aux9593_INTEGER);
constraint bool2int(aux9599_BOOL,aux9599_INTEGER);
constraint bool2int(aux9605_BOOL,aux9605_INTEGER);
constraint bool2int(aux9611_BOOL,aux9611_INTEGER);
constraint bool2int(aux9617_BOOL,aux9617_INTEGER);
constraint bool2int(aux9623_BOOL,aux9623_INTEGER);
constraint bool2int(aux9628_BOOL,aux9628_INTEGER);
constraint bool2int(aux9634_BOOL,aux9634_INTEGER);
constraint bool2int(aux9640_BOOL,aux9640_INTEGER);
constraint bool2int(aux9646_BOOL,aux9646_INTEGER);
constraint bool2int(aux9652_BOOL,aux9652_INTEGER);
constraint bool2int(aux9658_BOOL,aux9658_INTEGER);
constraint bool2int(aux9664_BOOL,aux9664_INTEGER);
constraint bool2int(aux9670_BOOL,aux9670_INTEGER);
constraint bool2int(aux9676_BOOL,aux9676_INTEGER);
constraint bool2int(aux9682_BOOL,aux9682_INTEGER);
constraint bool2int(aux9688_BOOL,aux9688_INTEGER);
constraint bool2int(aux9694_BOOL,aux9694_INTEGER);
constraint bool2int(aux9700_BOOL,aux9700_INTEGER);
constraint bool2int(aux9706_BOOL,aux9706_INTEGER);
constraint bool2int(aux9712_BOOL,aux9712_INTEGER);
constraint bool2int(aux9718_BOOL,aux9718_INTEGER);
constraint bool2int(aux9724_BOOL,aux9724_INTEGER);
constraint bool2int(aux9730_BOOL,aux9730_INTEGER);
constraint bool2int(aux9736_BOOL,aux9736_INTEGER);
constraint bool2int(aux9742_BOOL,aux9742_INTEGER);
constraint bool2int(aux9749_BOOL,aux9749_INTEGER);
constraint bool2int(aux9755_BOOL,aux9755_INTEGER);
constraint bool2int(aux9761_BOOL,aux9761_INTEGER);
constraint bool2int(aux9767_BOOL,aux9767_INTEGER);
constraint bool2int(aux9773_BOOL,aux9773_INTEGER);
constraint bool2int(aux9779_BOOL,aux9779_INTEGER);
constraint bool2int(aux9785_BOOL,aux9785_INTEGER);
constraint bool2int(aux9791_BOOL,aux9791_INTEGER);
constraint bool2int(aux9797_BOOL,aux9797_INTEGER);
constraint bool2int(aux9803_BOOL,aux9803_INTEGER);
constraint bool2int(aux9807_BOOL,aux9807_INTEGER);
constraint bool2int(aux9813_BOOL,aux9813_INTEGER);
constraint bool2int(aux9819_BOOL,aux9819_INTEGER);
constraint bool2int(aux9825_BOOL,aux9825_INTEGER);
constraint bool2int(aux9831_BOOL,aux9831_INTEGER);
constraint bool2int(aux9837_BOOL,aux9837_INTEGER);
constraint bool2int(aux9843_BOOL,aux9843_INTEGER);
constraint bool2int(aux9849_BOOL,aux9849_INTEGER);
constraint bool2int(aux9855_BOOL,aux9855_INTEGER);
constraint bool2int(aux9861_BOOL,aux9861_INTEGER);
constraint bool2int(aux9868_BOOL,aux9868_INTEGER);
constraint bool2int(aux9874_BOOL,aux9874_INTEGER);
constraint bool2int(aux9880_BOOL,aux9880_INTEGER);
constraint bool2int(aux9886_BOOL,aux9886_INTEGER);
constraint bool2int(aux9892_BOOL,aux9892_INTEGER);
constraint bool2int(aux9898_BOOL,aux9898_INTEGER);
constraint bool2int(aux9904_BOOL,aux9904_INTEGER);
constraint bool2int(aux9910_BOOL,aux9910_INTEGER);
constraint bool2int(aux9916_BOOL,aux9916_INTEGER);
constraint bool2int(aux9922_BOOL,aux9922_INTEGER);
constraint bool2int(aux9926_BOOL,aux9926_INTEGER);
constraint bool2int(aux9932_BOOL,aux9932_INTEGER);
constraint bool2int(aux9938_BOOL,aux9938_INTEGER);
constraint bool2int(aux9944_BOOL,aux9944_INTEGER);
constraint bool2int(aux9950_BOOL,aux9950_INTEGER);
constraint bool2int(aux9956_BOOL,aux9956_INTEGER);
constraint bool2int(aux9962_BOOL,aux9962_INTEGER);
constraint bool2int(aux9968_BOOL,aux9968_INTEGER);
constraint bool2int(aux9974_BOOL,aux9974_INTEGER);
constraint bool2int(aux9980_BOOL,aux9980_INTEGER);
constraint bool2int(aux9989_BOOL,aux9989_INTEGER);
constraint bool2int(aux9995_BOOL,aux9995_INTEGER);
constraint bool2int(aux10001_BOOL,aux10001_INTEGER);
constraint bool2int(aux10007_BOOL,aux10007_INTEGER);
constraint bool2int(aux10013_BOOL,aux10013_INTEGER);
constraint bool2int(aux10019_BOOL,aux10019_INTEGER);
constraint bool2int(aux10025_BOOL,aux10025_INTEGER);
constraint bool2int(aux10031_BOOL,aux10031_INTEGER);
constraint bool2int(aux10037_BOOL,aux10037_INTEGER);
constraint bool2int(aux10043_BOOL,aux10043_INTEGER);
constraint bool2int(aux10049_BOOL,aux10049_INTEGER);
constraint bool2int(aux10055_BOOL,aux10055_INTEGER);
constraint bool2int(aux10061_BOOL,aux10061_INTEGER);
constraint bool2int(aux10067_BOOL,aux10067_INTEGER);
constraint bool2int(aux10073_BOOL,aux10073_INTEGER);
constraint bool2int(aux10079_BOOL,aux10079_INTEGER);
constraint bool2int(aux10085_BOOL,aux10085_INTEGER);
constraint bool2int(aux10091_BOOL,aux10091_INTEGER);
constraint bool2int(aux10097_BOOL,aux10097_INTEGER);
constraint bool2int(aux10101_BOOL,aux10101_INTEGER);
constraint bool2int(aux10108_BOOL,aux10108_INTEGER);
constraint bool2int(aux10114_BOOL,aux10114_INTEGER);
constraint bool2int(aux10120_BOOL,aux10120_INTEGER);
constraint bool2int(aux10126_BOOL,aux10126_INTEGER);
constraint bool2int(aux10132_BOOL,aux10132_INTEGER);
constraint bool2int(aux10138_BOOL,aux10138_INTEGER);
constraint bool2int(aux10144_BOOL,aux10144_INTEGER);
constraint bool2int(aux10150_BOOL,aux10150_INTEGER);
constraint bool2int(aux10156_BOOL,aux10156_INTEGER);
constraint bool2int(aux10162_BOOL,aux10162_INTEGER);
constraint bool2int(aux10168_BOOL,aux10168_INTEGER);
constraint bool2int(aux10174_BOOL,aux10174_INTEGER);
constraint bool2int(aux10180_BOOL,aux10180_INTEGER);
constraint bool2int(aux10186_BOOL,aux10186_INTEGER);
constraint bool2int(aux10192_BOOL,aux10192_INTEGER);
constraint bool2int(aux10198_BOOL,aux10198_INTEGER);
constraint bool2int(aux10204_BOOL,aux10204_INTEGER);
constraint bool2int(aux10210_BOOL,aux10210_INTEGER);
constraint bool2int(aux10216_BOOL,aux10216_INTEGER);
constraint bool2int(aux10220_BOOL,aux10220_INTEGER);
constraint bool2int(aux10227_BOOL,aux10227_INTEGER);
constraint bool2int(aux10233_BOOL,aux10233_INTEGER);
constraint bool2int(aux10239_BOOL,aux10239_INTEGER);
constraint bool2int(aux10245_BOOL,aux10245_INTEGER);
constraint bool2int(aux10251_BOOL,aux10251_INTEGER);
constraint bool2int(aux10257_BOOL,aux10257_INTEGER);
constraint bool2int(aux10263_BOOL,aux10263_INTEGER);
constraint bool2int(aux10269_BOOL,aux10269_INTEGER);
constraint bool2int(aux10275_BOOL,aux10275_INTEGER);
constraint bool2int(aux10281_BOOL,aux10281_INTEGER);
constraint bool2int(aux10287_BOOL,aux10287_INTEGER);
constraint bool2int(aux10293_BOOL,aux10293_INTEGER);
constraint bool2int(aux10299_BOOL,aux10299_INTEGER);
constraint bool2int(aux10305_BOOL,aux10305_INTEGER);
constraint bool2int(aux10311_BOOL,aux10311_INTEGER);
constraint bool2int(aux10317_BOOL,aux10317_INTEGER);
constraint bool2int(aux10323_BOOL,aux10323_INTEGER);
constraint bool2int(aux10329_BOOL,aux10329_INTEGER);
constraint bool2int(aux10335_BOOL,aux10335_INTEGER);
constraint bool2int(aux10339_BOOL,aux10339_INTEGER);
constraint bool2int(aux10346_BOOL,aux10346_INTEGER);
constraint bool2int(aux10352_BOOL,aux10352_INTEGER);
constraint bool2int(aux10358_BOOL,aux10358_INTEGER);
constraint bool2int(aux10364_BOOL,aux10364_INTEGER);
constraint bool2int(aux10370_BOOL,aux10370_INTEGER);
constraint bool2int(aux10376_BOOL,aux10376_INTEGER);
constraint bool2int(aux10382_BOOL,aux10382_INTEGER);
constraint bool2int(aux10388_BOOL,aux10388_INTEGER);
constraint bool2int(aux10394_BOOL,aux10394_INTEGER);
constraint bool2int(aux10400_BOOL,aux10400_INTEGER);
constraint bool2int(aux10406_BOOL,aux10406_INTEGER);
constraint bool2int(aux10412_BOOL,aux10412_INTEGER);
constraint bool2int(aux10418_BOOL,aux10418_INTEGER);
constraint bool2int(aux10424_BOOL,aux10424_INTEGER);
constraint bool2int(aux10430_BOOL,aux10430_INTEGER);
constraint bool2int(aux10436_BOOL,aux10436_INTEGER);
constraint bool2int(aux10442_BOOL,aux10442_INTEGER);
constraint bool2int(aux10448_BOOL,aux10448_INTEGER);
constraint bool2int(aux10454_BOOL,aux10454_INTEGER);
constraint bool2int(aux10458_BOOL,aux10458_INTEGER);
constraint bool2int(aux10465_BOOL,aux10465_INTEGER);
constraint bool2int(aux10471_BOOL,aux10471_INTEGER);
constraint bool2int(aux10477_BOOL,aux10477_INTEGER);
constraint bool2int(aux10483_BOOL,aux10483_INTEGER);
constraint bool2int(aux10489_BOOL,aux10489_INTEGER);
constraint bool2int(aux10495_BOOL,aux10495_INTEGER);
constraint bool2int(aux10501_BOOL,aux10501_INTEGER);
constraint bool2int(aux10507_BOOL,aux10507_INTEGER);
constraint bool2int(aux10513_BOOL,aux10513_INTEGER);
constraint bool2int(aux10519_BOOL,aux10519_INTEGER);
constraint bool2int(aux10525_BOOL,aux10525_INTEGER);
constraint bool2int(aux10531_BOOL,aux10531_INTEGER);
constraint bool2int(aux10537_BOOL,aux10537_INTEGER);
constraint bool2int(aux10543_BOOL,aux10543_INTEGER);
constraint bool2int(aux10549_BOOL,aux10549_INTEGER);
constraint bool2int(aux10555_BOOL,aux10555_INTEGER);
constraint bool2int(aux10561_BOOL,aux10561_INTEGER);
constraint bool2int(aux10567_BOOL,aux10567_INTEGER);
constraint bool2int(aux10573_BOOL,aux10573_INTEGER);
constraint bool2int(aux10577_BOOL,aux10577_INTEGER);
constraint bool2int(aux10584_BOOL,aux10584_INTEGER);
constraint bool2int(aux10590_BOOL,aux10590_INTEGER);
constraint bool2int(aux10596_BOOL,aux10596_INTEGER);
constraint bool2int(aux10602_BOOL,aux10602_INTEGER);
constraint bool2int(aux10608_BOOL,aux10608_INTEGER);
constraint bool2int(aux10614_BOOL,aux10614_INTEGER);
constraint bool2int(aux10620_BOOL,aux10620_INTEGER);
constraint bool2int(aux10626_BOOL,aux10626_INTEGER);
constraint bool2int(aux10632_BOOL,aux10632_INTEGER);
constraint bool2int(aux10638_BOOL,aux10638_INTEGER);
constraint bool2int(aux10644_BOOL,aux10644_INTEGER);
constraint bool2int(aux10650_BOOL,aux10650_INTEGER);
constraint bool2int(aux10656_BOOL,aux10656_INTEGER);
constraint bool2int(aux10662_BOOL,aux10662_INTEGER);
constraint bool2int(aux10668_BOOL,aux10668_INTEGER);
constraint bool2int(aux10674_BOOL,aux10674_INTEGER);
constraint bool2int(aux10680_BOOL,aux10680_INTEGER);
constraint bool2int(aux10686_BOOL,aux10686_INTEGER);
constraint bool2int(aux10692_BOOL,aux10692_INTEGER);
constraint bool2int(aux10696_BOOL,aux10696_INTEGER);
constraint bool2int(aux10703_BOOL,aux10703_INTEGER);
constraint bool2int(aux10709_BOOL,aux10709_INTEGER);
constraint bool2int(aux10715_BOOL,aux10715_INTEGER);
constraint bool2int(aux10721_BOOL,aux10721_INTEGER);
constraint bool2int(aux10727_BOOL,aux10727_INTEGER);
constraint bool2int(aux10733_BOOL,aux10733_INTEGER);
constraint bool2int(aux10739_BOOL,aux10739_INTEGER);
constraint bool2int(aux10745_BOOL,aux10745_INTEGER);
constraint bool2int(aux10751_BOOL,aux10751_INTEGER);
constraint bool2int(aux10757_BOOL,aux10757_INTEGER);
constraint bool2int(aux10763_BOOL,aux10763_INTEGER);
constraint bool2int(aux10769_BOOL,aux10769_INTEGER);
constraint bool2int(aux10775_BOOL,aux10775_INTEGER);
constraint bool2int(aux10781_BOOL,aux10781_INTEGER);
constraint bool2int(aux10787_BOOL,aux10787_INTEGER);
constraint bool2int(aux10793_BOOL,aux10793_INTEGER);
constraint bool2int(aux10799_BOOL,aux10799_INTEGER);
constraint bool2int(aux10805_BOOL,aux10805_INTEGER);
constraint bool2int(aux10811_BOOL,aux10811_INTEGER);
constraint bool2int(aux10815_BOOL,aux10815_INTEGER);
constraint bool2int(aux10822_BOOL,aux10822_INTEGER);
constraint bool2int(aux10828_BOOL,aux10828_INTEGER);
constraint bool2int(aux10834_BOOL,aux10834_INTEGER);
constraint bool2int(aux10840_BOOL,aux10840_INTEGER);
constraint bool2int(aux10846_BOOL,aux10846_INTEGER);
constraint bool2int(aux10852_BOOL,aux10852_INTEGER);
constraint bool2int(aux10858_BOOL,aux10858_INTEGER);
constraint bool2int(aux10864_BOOL,aux10864_INTEGER);
constraint bool2int(aux10870_BOOL,aux10870_INTEGER);
constraint bool2int(aux10876_BOOL,aux10876_INTEGER);
constraint bool2int(aux10882_BOOL,aux10882_INTEGER);
constraint bool2int(aux10888_BOOL,aux10888_INTEGER);
constraint bool2int(aux10894_BOOL,aux10894_INTEGER);
constraint bool2int(aux10900_BOOL,aux10900_INTEGER);
constraint bool2int(aux10906_BOOL,aux10906_INTEGER);
constraint bool2int(aux10912_BOOL,aux10912_INTEGER);
constraint bool2int(aux10918_BOOL,aux10918_INTEGER);
constraint bool2int(aux10924_BOOL,aux10924_INTEGER);
constraint bool2int(aux10930_BOOL,aux10930_INTEGER);
constraint bool2int(aux10934_BOOL,aux10934_INTEGER);
constraint bool2int(aux10941_BOOL,aux10941_INTEGER);
constraint bool2int(aux10947_BOOL,aux10947_INTEGER);
constraint bool2int(aux10953_BOOL,aux10953_INTEGER);
constraint bool2int(aux10959_BOOL,aux10959_INTEGER);
constraint bool2int(aux10965_BOOL,aux10965_INTEGER);
constraint bool2int(aux10971_BOOL,aux10971_INTEGER);
constraint bool2int(aux10977_BOOL,aux10977_INTEGER);
constraint bool2int(aux10983_BOOL,aux10983_INTEGER);
constraint bool2int(aux10989_BOOL,aux10989_INTEGER);
constraint bool2int(aux10995_BOOL,aux10995_INTEGER);
constraint bool2int(aux11001_BOOL,aux11001_INTEGER);
constraint bool2int(aux11007_BOOL,aux11007_INTEGER);
constraint bool2int(aux11013_BOOL,aux11013_INTEGER);
constraint bool2int(aux11019_BOOL,aux11019_INTEGER);
constraint bool2int(aux11025_BOOL,aux11025_INTEGER);
constraint bool2int(aux11031_BOOL,aux11031_INTEGER);
constraint bool2int(aux11037_BOOL,aux11037_INTEGER);
constraint bool2int(aux11043_BOOL,aux11043_INTEGER);
constraint bool2int(aux11049_BOOL,aux11049_INTEGER);
constraint bool2int(aux11053_BOOL,aux11053_INTEGER);
constraint bool2int(aux11058_BOOL,aux11058_INTEGER);
constraint bool2int(aux11064_BOOL,aux11064_INTEGER);
constraint bool2int(aux11070_BOOL,aux11070_INTEGER);
constraint bool2int(aux11076_BOOL,aux11076_INTEGER);
constraint bool2int(aux11082_BOOL,aux11082_INTEGER);
constraint bool2int(aux11088_BOOL,aux11088_INTEGER);
constraint bool2int(aux11094_BOOL,aux11094_INTEGER);
constraint bool2int(aux11100_BOOL,aux11100_INTEGER);
constraint bool2int(aux11106_BOOL,aux11106_INTEGER);
constraint bool2int(aux11112_BOOL,aux11112_INTEGER);
constraint bool2int(aux11118_BOOL,aux11118_INTEGER);
constraint bool2int(aux11124_BOOL,aux11124_INTEGER);
constraint bool2int(aux11130_BOOL,aux11130_INTEGER);
constraint bool2int(aux11136_BOOL,aux11136_INTEGER);
constraint bool2int(aux11142_BOOL,aux11142_INTEGER);
constraint bool2int(aux11148_BOOL,aux11148_INTEGER);
constraint bool2int(aux11154_BOOL,aux11154_INTEGER);
constraint bool2int(aux11160_BOOL,aux11160_INTEGER);
constraint bool2int(aux11166_BOOL,aux11166_INTEGER);
constraint bool2int(aux11172_BOOL,aux11172_INTEGER);
constraint bool2int(aux11179_BOOL,aux11179_INTEGER);
constraint bool2int(aux11185_BOOL,aux11185_INTEGER);
constraint bool2int(aux11191_BOOL,aux11191_INTEGER);
constraint bool2int(aux11197_BOOL,aux11197_INTEGER);
constraint bool2int(aux11203_BOOL,aux11203_INTEGER);
constraint bool2int(aux11209_BOOL,aux11209_INTEGER);
constraint bool2int(aux11215_BOOL,aux11215_INTEGER);
constraint bool2int(aux11221_BOOL,aux11221_INTEGER);
constraint bool2int(aux11227_BOOL,aux11227_INTEGER);
constraint bool2int(aux11233_BOOL,aux11233_INTEGER);
constraint bool2int(aux11239_BOOL,aux11239_INTEGER);
constraint bool2int(aux11245_BOOL,aux11245_INTEGER);
constraint bool2int(aux11251_BOOL,aux11251_INTEGER);
constraint bool2int(aux11257_BOOL,aux11257_INTEGER);
constraint bool2int(aux11263_BOOL,aux11263_INTEGER);
constraint bool2int(aux11269_BOOL,aux11269_INTEGER);
constraint bool2int(aux11275_BOOL,aux11275_INTEGER);
constraint bool2int(aux11281_BOOL,aux11281_INTEGER);
constraint bool2int(aux11287_BOOL,aux11287_INTEGER);
constraint bool2int(aux11291_BOOL,aux11291_INTEGER);
constraint bool2int(aux11298_BOOL,aux11298_INTEGER);
constraint bool2int(aux11304_BOOL,aux11304_INTEGER);
constraint bool2int(aux11310_BOOL,aux11310_INTEGER);
constraint bool2int(aux11316_BOOL,aux11316_INTEGER);
constraint bool2int(aux11322_BOOL,aux11322_INTEGER);
constraint bool2int(aux11328_BOOL,aux11328_INTEGER);
constraint bool2int(aux11334_BOOL,aux11334_INTEGER);
constraint bool2int(aux11340_BOOL,aux11340_INTEGER);
constraint bool2int(aux11346_BOOL,aux11346_INTEGER);
constraint bool2int(aux11352_BOOL,aux11352_INTEGER);
constraint bool2int(aux11358_BOOL,aux11358_INTEGER);
constraint bool2int(aux11364_BOOL,aux11364_INTEGER);
constraint bool2int(aux11370_BOOL,aux11370_INTEGER);
constraint bool2int(aux11376_BOOL,aux11376_INTEGER);
constraint bool2int(aux11382_BOOL,aux11382_INTEGER);
constraint bool2int(aux11388_BOOL,aux11388_INTEGER);
constraint bool2int(aux11394_BOOL,aux11394_INTEGER);
constraint bool2int(aux11400_BOOL,aux11400_INTEGER);
constraint bool2int(aux11406_BOOL,aux11406_INTEGER);
constraint bool2int(aux11410_BOOL,aux11410_INTEGER);
constraint bool2int(aux11417_BOOL,aux11417_INTEGER);
constraint bool2int(aux11423_BOOL,aux11423_INTEGER);
constraint bool2int(aux11429_BOOL,aux11429_INTEGER);
constraint bool2int(aux11435_BOOL,aux11435_INTEGER);
constraint bool2int(aux11441_BOOL,aux11441_INTEGER);
constraint bool2int(aux11447_BOOL,aux11447_INTEGER);
constraint bool2int(aux11453_BOOL,aux11453_INTEGER);
constraint bool2int(aux11459_BOOL,aux11459_INTEGER);
constraint bool2int(aux11465_BOOL,aux11465_INTEGER);
constraint bool2int(aux11471_BOOL,aux11471_INTEGER);
constraint bool2int(aux11477_BOOL,aux11477_INTEGER);
constraint bool2int(aux11483_BOOL,aux11483_INTEGER);
constraint bool2int(aux11489_BOOL,aux11489_INTEGER);
constraint bool2int(aux11495_BOOL,aux11495_INTEGER);
constraint bool2int(aux11501_BOOL,aux11501_INTEGER);
constraint bool2int(aux11507_BOOL,aux11507_INTEGER);
constraint bool2int(aux11513_BOOL,aux11513_INTEGER);
constraint bool2int(aux11519_BOOL,aux11519_INTEGER);
constraint bool2int(aux11525_BOOL,aux11525_INTEGER);
constraint bool2int(aux11529_BOOL,aux11529_INTEGER);
constraint bool2int(aux11536_BOOL,aux11536_INTEGER);
constraint bool2int(aux11542_BOOL,aux11542_INTEGER);
constraint bool2int(aux11548_BOOL,aux11548_INTEGER);
constraint bool2int(aux11554_BOOL,aux11554_INTEGER);
constraint bool2int(aux11560_BOOL,aux11560_INTEGER);
constraint bool2int(aux11566_BOOL,aux11566_INTEGER);
constraint bool2int(aux11572_BOOL,aux11572_INTEGER);
constraint bool2int(aux11578_BOOL,aux11578_INTEGER);
constraint bool2int(aux11584_BOOL,aux11584_INTEGER);
constraint bool2int(aux11590_BOOL,aux11590_INTEGER);
constraint bool2int(aux11596_BOOL,aux11596_INTEGER);
constraint bool2int(aux11602_BOOL,aux11602_INTEGER);
constraint bool2int(aux11608_BOOL,aux11608_INTEGER);
constraint bool2int(aux11614_BOOL,aux11614_INTEGER);
constraint bool2int(aux11620_BOOL,aux11620_INTEGER);
constraint bool2int(aux11626_BOOL,aux11626_INTEGER);
constraint bool2int(aux11632_BOOL,aux11632_INTEGER);
constraint bool2int(aux11638_BOOL,aux11638_INTEGER);
constraint bool2int(aux11644_BOOL,aux11644_INTEGER);
constraint bool2int(aux11648_BOOL,aux11648_INTEGER);
constraint bool2int(aux11655_BOOL,aux11655_INTEGER);
constraint bool2int(aux11661_BOOL,aux11661_INTEGER);
constraint bool2int(aux11667_BOOL,aux11667_INTEGER);
constraint bool2int(aux11673_BOOL,aux11673_INTEGER);
constraint bool2int(aux11679_BOOL,aux11679_INTEGER);
constraint bool2int(aux11685_BOOL,aux11685_INTEGER);
constraint bool2int(aux11691_BOOL,aux11691_INTEGER);
constraint bool2int(aux11697_BOOL,aux11697_INTEGER);
constraint bool2int(aux11703_BOOL,aux11703_INTEGER);
constraint bool2int(aux11709_BOOL,aux11709_INTEGER);
constraint bool2int(aux11715_BOOL,aux11715_INTEGER);
constraint bool2int(aux11721_BOOL,aux11721_INTEGER);
constraint bool2int(aux11727_BOOL,aux11727_INTEGER);
constraint bool2int(aux11733_BOOL,aux11733_INTEGER);
constraint bool2int(aux11739_BOOL,aux11739_INTEGER);
constraint bool2int(aux11745_BOOL,aux11745_INTEGER);
constraint bool2int(aux11751_BOOL,aux11751_INTEGER);
constraint bool2int(aux11757_BOOL,aux11757_INTEGER);
constraint bool2int(aux11763_BOOL,aux11763_INTEGER);
constraint bool2int(aux11767_BOOL,aux11767_INTEGER);
constraint bool2int(aux11774_BOOL,aux11774_INTEGER);
constraint bool2int(aux11780_BOOL,aux11780_INTEGER);
constraint bool2int(aux11786_BOOL,aux11786_INTEGER);
constraint bool2int(aux11792_BOOL,aux11792_INTEGER);
constraint bool2int(aux11798_BOOL,aux11798_INTEGER);
constraint bool2int(aux11804_BOOL,aux11804_INTEGER);
constraint bool2int(aux11810_BOOL,aux11810_INTEGER);
constraint bool2int(aux11816_BOOL,aux11816_INTEGER);
constraint bool2int(aux11822_BOOL,aux11822_INTEGER);
constraint bool2int(aux11828_BOOL,aux11828_INTEGER);
constraint bool2int(aux11834_BOOL,aux11834_INTEGER);
constraint bool2int(aux11840_BOOL,aux11840_INTEGER);
constraint bool2int(aux11846_BOOL,aux11846_INTEGER);
constraint bool2int(aux11852_BOOL,aux11852_INTEGER);
constraint bool2int(aux11858_BOOL,aux11858_INTEGER);
constraint bool2int(aux11864_BOOL,aux11864_INTEGER);
constraint bool2int(aux11870_BOOL,aux11870_INTEGER);
constraint bool2int(aux11876_BOOL,aux11876_INTEGER);
constraint bool2int(aux11882_BOOL,aux11882_INTEGER);
constraint bool2int(aux11886_BOOL,aux11886_INTEGER);
constraint bool2int(aux11893_BOOL,aux11893_INTEGER);
constraint bool2int(aux11899_BOOL,aux11899_INTEGER);
constraint bool2int(aux11905_BOOL,aux11905_INTEGER);
constraint bool2int(aux11911_BOOL,aux11911_INTEGER);
constraint bool2int(aux11917_BOOL,aux11917_INTEGER);
constraint bool2int(aux11923_BOOL,aux11923_INTEGER);
constraint bool2int(aux11929_BOOL,aux11929_INTEGER);
constraint bool2int(aux11935_BOOL,aux11935_INTEGER);
constraint bool2int(aux11941_BOOL,aux11941_INTEGER);
constraint bool2int(aux11947_BOOL,aux11947_INTEGER);
constraint bool2int(aux11953_BOOL,aux11953_INTEGER);
constraint bool2int(aux11959_BOOL,aux11959_INTEGER);
constraint bool2int(aux11965_BOOL,aux11965_INTEGER);
constraint bool2int(aux11971_BOOL,aux11971_INTEGER);
constraint bool2int(aux11977_BOOL,aux11977_INTEGER);
constraint bool2int(aux11983_BOOL,aux11983_INTEGER);
constraint bool2int(aux11989_BOOL,aux11989_INTEGER);
constraint bool2int(aux11995_BOOL,aux11995_INTEGER);
constraint bool2int(aux12001_BOOL,aux12001_INTEGER);
constraint bool2int(aux12005_BOOL,aux12005_INTEGER);
constraint bool2int(aux12012_BOOL,aux12012_INTEGER);
constraint bool2int(aux12018_BOOL,aux12018_INTEGER);
constraint bool2int(aux12024_BOOL,aux12024_INTEGER);
constraint bool2int(aux12030_BOOL,aux12030_INTEGER);
constraint bool2int(aux12036_BOOL,aux12036_INTEGER);
constraint bool2int(aux12042_BOOL,aux12042_INTEGER);
constraint bool2int(aux12048_BOOL,aux12048_INTEGER);
constraint bool2int(aux12054_BOOL,aux12054_INTEGER);
constraint bool2int(aux12060_BOOL,aux12060_INTEGER);
constraint bool2int(aux12066_BOOL,aux12066_INTEGER);
constraint bool2int(aux12072_BOOL,aux12072_INTEGER);
constraint bool2int(aux12078_BOOL,aux12078_INTEGER);
constraint bool2int(aux12084_BOOL,aux12084_INTEGER);
constraint bool2int(aux12090_BOOL,aux12090_INTEGER);
constraint bool2int(aux12096_BOOL,aux12096_INTEGER);
constraint bool2int(aux12102_BOOL,aux12102_INTEGER);
constraint bool2int(aux12108_BOOL,aux12108_INTEGER);
constraint bool2int(aux12114_BOOL,aux12114_INTEGER);
constraint bool2int(aux12120_BOOL,aux12120_INTEGER);
constraint bool2int(aux12124_BOOL,aux12124_INTEGER);
constraint bool2int(aux12131_BOOL,aux12131_INTEGER);
constraint bool2int(aux12137_BOOL,aux12137_INTEGER);
constraint bool2int(aux12143_BOOL,aux12143_INTEGER);
constraint bool2int(aux12149_BOOL,aux12149_INTEGER);
constraint bool2int(aux12155_BOOL,aux12155_INTEGER);
constraint bool2int(aux12161_BOOL,aux12161_INTEGER);
constraint bool2int(aux12167_BOOL,aux12167_INTEGER);
constraint bool2int(aux12173_BOOL,aux12173_INTEGER);
constraint bool2int(aux12179_BOOL,aux12179_INTEGER);
constraint bool2int(aux12185_BOOL,aux12185_INTEGER);
constraint bool2int(aux12191_BOOL,aux12191_INTEGER);
constraint bool2int(aux12197_BOOL,aux12197_INTEGER);
constraint bool2int(aux12203_BOOL,aux12203_INTEGER);
constraint bool2int(aux12209_BOOL,aux12209_INTEGER);
constraint bool2int(aux12215_BOOL,aux12215_INTEGER);
constraint bool2int(aux12221_BOOL,aux12221_INTEGER);
constraint bool2int(aux12227_BOOL,aux12227_INTEGER);
constraint bool2int(aux12233_BOOL,aux12233_INTEGER);
constraint bool2int(aux12239_BOOL,aux12239_INTEGER);
constraint bool2int(aux12243_BOOL,aux12243_INTEGER);
constraint bool2int(aux12250_BOOL,aux12250_INTEGER);
constraint bool2int(aux12256_BOOL,aux12256_INTEGER);
constraint bool2int(aux12262_BOOL,aux12262_INTEGER);
constraint bool2int(aux12268_BOOL,aux12268_INTEGER);
constraint bool2int(aux12274_BOOL,aux12274_INTEGER);
constraint bool2int(aux12280_BOOL,aux12280_INTEGER);
constraint bool2int(aux12286_BOOL,aux12286_INTEGER);
constraint bool2int(aux12292_BOOL,aux12292_INTEGER);
constraint bool2int(aux12298_BOOL,aux12298_INTEGER);
constraint bool2int(aux12304_BOOL,aux12304_INTEGER);
constraint bool2int(aux12310_BOOL,aux12310_INTEGER);
constraint bool2int(aux12316_BOOL,aux12316_INTEGER);
constraint bool2int(aux12322_BOOL,aux12322_INTEGER);
constraint bool2int(aux12328_BOOL,aux12328_INTEGER);
constraint bool2int(aux12334_BOOL,aux12334_INTEGER);
constraint bool2int(aux12340_BOOL,aux12340_INTEGER);
constraint bool2int(aux12346_BOOL,aux12346_INTEGER);
constraint bool2int(aux12352_BOOL,aux12352_INTEGER);
constraint bool2int(aux12358_BOOL,aux12358_INTEGER);
constraint bool2int(aux12362_BOOL,aux12362_INTEGER);
constraint bool2int(aux12371_BOOL,aux12371_INTEGER);
constraint bool2int(aux12377_BOOL,aux12377_INTEGER);
constraint bool2int(aux12383_BOOL,aux12383_INTEGER);
constraint bool2int(aux12389_BOOL,aux12389_INTEGER);
constraint bool2int(aux12395_BOOL,aux12395_INTEGER);
constraint bool2int(aux12401_BOOL,aux12401_INTEGER);
constraint bool2int(aux12407_BOOL,aux12407_INTEGER);
constraint bool2int(aux12413_BOOL,aux12413_INTEGER);
constraint bool2int(aux12419_BOOL,aux12419_INTEGER);
constraint bool2int(aux12425_BOOL,aux12425_INTEGER);
constraint bool2int(aux12431_BOOL,aux12431_INTEGER);
constraint bool2int(aux12437_BOOL,aux12437_INTEGER);
constraint bool2int(aux12443_BOOL,aux12443_INTEGER);
constraint bool2int(aux12449_BOOL,aux12449_INTEGER);
constraint bool2int(aux12455_BOOL,aux12455_INTEGER);
constraint bool2int(aux12461_BOOL,aux12461_INTEGER);
constraint bool2int(aux12467_BOOL,aux12467_INTEGER);
constraint bool2int(aux12473_BOOL,aux12473_INTEGER);
constraint bool2int(aux12479_BOOL,aux12479_INTEGER);
constraint bool2int(aux12483_BOOL,aux12483_INTEGER);
constraint bool2int(aux12490_BOOL,aux12490_INTEGER);
constraint bool2int(aux12496_BOOL,aux12496_INTEGER);
constraint bool2int(aux12502_BOOL,aux12502_INTEGER);
constraint bool2int(aux12508_BOOL,aux12508_INTEGER);
constraint bool2int(aux12514_BOOL,aux12514_INTEGER);
constraint bool2int(aux12520_BOOL,aux12520_INTEGER);
constraint bool2int(aux12526_BOOL,aux12526_INTEGER);
constraint bool2int(aux12532_BOOL,aux12532_INTEGER);
constraint bool2int(aux12538_BOOL,aux12538_INTEGER);
constraint bool2int(aux12544_BOOL,aux12544_INTEGER);
constraint bool2int(aux12550_BOOL,aux12550_INTEGER);
constraint bool2int(aux12556_BOOL,aux12556_INTEGER);
constraint bool2int(aux12562_BOOL,aux12562_INTEGER);
constraint bool2int(aux12568_BOOL,aux12568_INTEGER);
constraint bool2int(aux12574_BOOL,aux12574_INTEGER);
constraint bool2int(aux12580_BOOL,aux12580_INTEGER);
constraint bool2int(aux12586_BOOL,aux12586_INTEGER);
constraint bool2int(aux12592_BOOL,aux12592_INTEGER);
constraint bool2int(aux12598_BOOL,aux12598_INTEGER);
constraint bool2int(aux12602_BOOL,aux12602_INTEGER);
constraint bool2int(aux12609_BOOL,aux12609_INTEGER);
constraint bool2int(aux12615_BOOL,aux12615_INTEGER);
constraint bool2int(aux12621_BOOL,aux12621_INTEGER);
constraint bool2int(aux12627_BOOL,aux12627_INTEGER);
constraint bool2int(aux12633_BOOL,aux12633_INTEGER);
constraint bool2int(aux12639_BOOL,aux12639_INTEGER);
constraint bool2int(aux12645_BOOL,aux12645_INTEGER);
constraint bool2int(aux12651_BOOL,aux12651_INTEGER);
constraint bool2int(aux12657_BOOL,aux12657_INTEGER);
constraint bool2int(aux12663_BOOL,aux12663_INTEGER);
constraint bool2int(aux12669_BOOL,aux12669_INTEGER);
constraint bool2int(aux12675_BOOL,aux12675_INTEGER);
constraint bool2int(aux12681_BOOL,aux12681_INTEGER);
constraint bool2int(aux12687_BOOL,aux12687_INTEGER);
constraint bool2int(aux12693_BOOL,aux12693_INTEGER);
constraint bool2int(aux12699_BOOL,aux12699_INTEGER);
constraint bool2int(aux12705_BOOL,aux12705_INTEGER);
constraint bool2int(aux12711_BOOL,aux12711_INTEGER);
constraint bool2int(aux12717_BOOL,aux12717_INTEGER);
constraint bool2int(aux12721_BOOL,aux12721_INTEGER);
constraint bool2int(aux12728_BOOL,aux12728_INTEGER);
constraint bool2int(aux12734_BOOL,aux12734_INTEGER);
constraint bool2int(aux12740_BOOL,aux12740_INTEGER);
constraint bool2int(aux12746_BOOL,aux12746_INTEGER);
constraint bool2int(aux12752_BOOL,aux12752_INTEGER);
constraint bool2int(aux12758_BOOL,aux12758_INTEGER);
constraint bool2int(aux12764_BOOL,aux12764_INTEGER);
constraint bool2int(aux12770_BOOL,aux12770_INTEGER);
constraint bool2int(aux12776_BOOL,aux12776_INTEGER);
constraint bool2int(aux12782_BOOL,aux12782_INTEGER);
constraint bool2int(aux12788_BOOL,aux12788_INTEGER);
constraint bool2int(aux12794_BOOL,aux12794_INTEGER);
constraint bool2int(aux12800_BOOL,aux12800_INTEGER);
constraint bool2int(aux12806_BOOL,aux12806_INTEGER);
constraint bool2int(aux12812_BOOL,aux12812_INTEGER);
constraint bool2int(aux12818_BOOL,aux12818_INTEGER);
constraint bool2int(aux12824_BOOL,aux12824_INTEGER);
constraint bool2int(aux12830_BOOL,aux12830_INTEGER);
constraint bool2int(aux12836_BOOL,aux12836_INTEGER);
constraint bool2int(aux12840_BOOL,aux12840_INTEGER);
constraint bool2int(aux12847_BOOL,aux12847_INTEGER);
constraint bool2int(aux12853_BOOL,aux12853_INTEGER);
constraint bool2int(aux12859_BOOL,aux12859_INTEGER);
constraint bool2int(aux12865_BOOL,aux12865_INTEGER);
constraint bool2int(aux12871_BOOL,aux12871_INTEGER);
constraint bool2int(aux12877_BOOL,aux12877_INTEGER);
constraint bool2int(aux12883_BOOL,aux12883_INTEGER);
constraint bool2int(aux12889_BOOL,aux12889_INTEGER);
constraint bool2int(aux12895_BOOL,aux12895_INTEGER);
constraint bool2int(aux12901_BOOL,aux12901_INTEGER);
constraint bool2int(aux12907_BOOL,aux12907_INTEGER);
constraint bool2int(aux12913_BOOL,aux12913_INTEGER);
constraint bool2int(aux12919_BOOL,aux12919_INTEGER);
constraint bool2int(aux12925_BOOL,aux12925_INTEGER);
constraint bool2int(aux12931_BOOL,aux12931_INTEGER);
constraint bool2int(aux12937_BOOL,aux12937_INTEGER);
constraint bool2int(aux12943_BOOL,aux12943_INTEGER);
constraint bool2int(aux12949_BOOL,aux12949_INTEGER);
constraint bool2int(aux12955_BOOL,aux12955_INTEGER);
constraint bool2int(aux12959_BOOL,aux12959_INTEGER);
constraint bool2int(aux12966_BOOL,aux12966_INTEGER);
constraint bool2int(aux12972_BOOL,aux12972_INTEGER);
constraint bool2int(aux12978_BOOL,aux12978_INTEGER);
constraint bool2int(aux12984_BOOL,aux12984_INTEGER);
constraint bool2int(aux12990_BOOL,aux12990_INTEGER);
constraint bool2int(aux12996_BOOL,aux12996_INTEGER);
constraint bool2int(aux13002_BOOL,aux13002_INTEGER);
constraint bool2int(aux13008_BOOL,aux13008_INTEGER);
constraint bool2int(aux13014_BOOL,aux13014_INTEGER);
constraint bool2int(aux13020_BOOL,aux13020_INTEGER);
constraint bool2int(aux13026_BOOL,aux13026_INTEGER);
constraint bool2int(aux13032_BOOL,aux13032_INTEGER);
constraint bool2int(aux13038_BOOL,aux13038_INTEGER);
constraint bool2int(aux13044_BOOL,aux13044_INTEGER);
constraint bool2int(aux13050_BOOL,aux13050_INTEGER);
constraint bool2int(aux13056_BOOL,aux13056_INTEGER);
constraint bool2int(aux13062_BOOL,aux13062_INTEGER);
constraint bool2int(aux13068_BOOL,aux13068_INTEGER);
constraint bool2int(aux13074_BOOL,aux13074_INTEGER);
constraint bool2int(aux13078_BOOL,aux13078_INTEGER);
constraint bool2int(aux13085_BOOL,aux13085_INTEGER);
constraint bool2int(aux13091_BOOL,aux13091_INTEGER);
constraint bool2int(aux13097_BOOL,aux13097_INTEGER);
constraint bool2int(aux13103_BOOL,aux13103_INTEGER);
constraint bool2int(aux13109_BOOL,aux13109_INTEGER);
constraint bool2int(aux13115_BOOL,aux13115_INTEGER);
constraint bool2int(aux13121_BOOL,aux13121_INTEGER);
constraint bool2int(aux13127_BOOL,aux13127_INTEGER);
constraint bool2int(aux13133_BOOL,aux13133_INTEGER);
constraint bool2int(aux13139_BOOL,aux13139_INTEGER);
constraint bool2int(aux13145_BOOL,aux13145_INTEGER);
constraint bool2int(aux13151_BOOL,aux13151_INTEGER);
constraint bool2int(aux13157_BOOL,aux13157_INTEGER);
constraint bool2int(aux13163_BOOL,aux13163_INTEGER);
constraint bool2int(aux13169_BOOL,aux13169_INTEGER);
constraint bool2int(aux13175_BOOL,aux13175_INTEGER);
constraint bool2int(aux13181_BOOL,aux13181_INTEGER);
constraint bool2int(aux13187_BOOL,aux13187_INTEGER);
constraint bool2int(aux13193_BOOL,aux13193_INTEGER);
constraint bool2int(aux13197_BOOL,aux13197_INTEGER);
constraint bool2int(aux13204_BOOL,aux13204_INTEGER);
constraint bool2int(aux13210_BOOL,aux13210_INTEGER);
constraint bool2int(aux13216_BOOL,aux13216_INTEGER);
constraint bool2int(aux13222_BOOL,aux13222_INTEGER);
constraint bool2int(aux13228_BOOL,aux13228_INTEGER);
constraint bool2int(aux13234_BOOL,aux13234_INTEGER);
constraint bool2int(aux13240_BOOL,aux13240_INTEGER);
constraint bool2int(aux13246_BOOL,aux13246_INTEGER);
constraint bool2int(aux13252_BOOL,aux13252_INTEGER);
constraint bool2int(aux13258_BOOL,aux13258_INTEGER);
constraint bool2int(aux13264_BOOL,aux13264_INTEGER);
constraint bool2int(aux13270_BOOL,aux13270_INTEGER);
constraint bool2int(aux13276_BOOL,aux13276_INTEGER);
constraint bool2int(aux13282_BOOL,aux13282_INTEGER);
constraint bool2int(aux13288_BOOL,aux13288_INTEGER);
constraint bool2int(aux13294_BOOL,aux13294_INTEGER);
constraint bool2int(aux13300_BOOL,aux13300_INTEGER);
constraint bool2int(aux13306_BOOL,aux13306_INTEGER);
constraint bool2int(aux13312_BOOL,aux13312_INTEGER);
constraint bool2int(aux13316_BOOL,aux13316_INTEGER);
constraint bool2int(aux13323_BOOL,aux13323_INTEGER);
constraint bool2int(aux13329_BOOL,aux13329_INTEGER);
constraint bool2int(aux13335_BOOL,aux13335_INTEGER);
constraint bool2int(aux13341_BOOL,aux13341_INTEGER);
constraint bool2int(aux13347_BOOL,aux13347_INTEGER);
constraint bool2int(aux13353_BOOL,aux13353_INTEGER);
constraint bool2int(aux13359_BOOL,aux13359_INTEGER);
constraint bool2int(aux13365_BOOL,aux13365_INTEGER);
constraint bool2int(aux13371_BOOL,aux13371_INTEGER);
constraint bool2int(aux13377_BOOL,aux13377_INTEGER);
constraint bool2int(aux13383_BOOL,aux13383_INTEGER);
constraint bool2int(aux13389_BOOL,aux13389_INTEGER);
constraint bool2int(aux13395_BOOL,aux13395_INTEGER);
constraint bool2int(aux13401_BOOL,aux13401_INTEGER);
constraint bool2int(aux13407_BOOL,aux13407_INTEGER);
constraint bool2int(aux13413_BOOL,aux13413_INTEGER);
constraint bool2int(aux13419_BOOL,aux13419_INTEGER);
constraint bool2int(aux13425_BOOL,aux13425_INTEGER);
constraint bool2int(aux13431_BOOL,aux13431_INTEGER);
constraint bool2int(aux13435_BOOL,aux13435_INTEGER);
constraint bool2int(aux13442_BOOL,aux13442_INTEGER);
constraint bool2int(aux13448_BOOL,aux13448_INTEGER);
constraint bool2int(aux13454_BOOL,aux13454_INTEGER);
constraint bool2int(aux13460_BOOL,aux13460_INTEGER);
constraint bool2int(aux13466_BOOL,aux13466_INTEGER);
constraint bool2int(aux13472_BOOL,aux13472_INTEGER);
constraint bool2int(aux13478_BOOL,aux13478_INTEGER);
constraint bool2int(aux13484_BOOL,aux13484_INTEGER);
constraint bool2int(aux13490_BOOL,aux13490_INTEGER);
constraint bool2int(aux13496_BOOL,aux13496_INTEGER);
constraint bool2int(aux13502_BOOL,aux13502_INTEGER);
constraint bool2int(aux13508_BOOL,aux13508_INTEGER);
constraint bool2int(aux13514_BOOL,aux13514_INTEGER);
constraint bool2int(aux13520_BOOL,aux13520_INTEGER);
constraint bool2int(aux13526_BOOL,aux13526_INTEGER);
constraint bool2int(aux13532_BOOL,aux13532_INTEGER);
constraint bool2int(aux13538_BOOL,aux13538_INTEGER);
constraint bool2int(aux13544_BOOL,aux13544_INTEGER);
constraint bool2int(aux13550_BOOL,aux13550_INTEGER);
constraint bool2int(aux13554_BOOL,aux13554_INTEGER);
constraint bool2int(aux13561_BOOL,aux13561_INTEGER);
constraint bool2int(aux13567_BOOL,aux13567_INTEGER);
constraint bool2int(aux13573_BOOL,aux13573_INTEGER);
constraint bool2int(aux13579_BOOL,aux13579_INTEGER);
constraint bool2int(aux13585_BOOL,aux13585_INTEGER);
constraint bool2int(aux13591_BOOL,aux13591_INTEGER);
constraint bool2int(aux13597_BOOL,aux13597_INTEGER);
constraint bool2int(aux13603_BOOL,aux13603_INTEGER);
constraint bool2int(aux13609_BOOL,aux13609_INTEGER);
constraint bool2int(aux13615_BOOL,aux13615_INTEGER);
constraint bool2int(aux13621_BOOL,aux13621_INTEGER);
constraint bool2int(aux13627_BOOL,aux13627_INTEGER);
constraint bool2int(aux13633_BOOL,aux13633_INTEGER);
constraint bool2int(aux13639_BOOL,aux13639_INTEGER);
constraint bool2int(aux13645_BOOL,aux13645_INTEGER);
constraint bool2int(aux13651_BOOL,aux13651_INTEGER);
constraint bool2int(aux13657_BOOL,aux13657_INTEGER);
constraint bool2int(aux13663_BOOL,aux13663_INTEGER);
constraint bool2int(aux13669_BOOL,aux13669_INTEGER);
constraint bool2int(aux13673_BOOL,aux13673_INTEGER);
constraint bool2int(aux13680_BOOL,aux13680_INTEGER);
constraint bool2int(aux13686_BOOL,aux13686_INTEGER);
constraint bool2int(aux13692_BOOL,aux13692_INTEGER);
constraint bool2int(aux13698_BOOL,aux13698_INTEGER);
constraint bool2int(aux13704_BOOL,aux13704_INTEGER);
constraint bool2int(aux13710_BOOL,aux13710_INTEGER);
constraint bool2int(aux13716_BOOL,aux13716_INTEGER);
constraint bool2int(aux13722_BOOL,aux13722_INTEGER);
constraint bool2int(aux13728_BOOL,aux13728_INTEGER);
constraint bool2int(aux13734_BOOL,aux13734_INTEGER);
constraint bool2int(aux13740_BOOL,aux13740_INTEGER);
constraint bool2int(aux13746_BOOL,aux13746_INTEGER);
constraint bool2int(aux13752_BOOL,aux13752_INTEGER);
constraint bool2int(aux13758_BOOL,aux13758_INTEGER);
constraint bool2int(aux13764_BOOL,aux13764_INTEGER);
constraint bool2int(aux13770_BOOL,aux13770_INTEGER);
constraint bool2int(aux13776_BOOL,aux13776_INTEGER);
constraint bool2int(aux13782_BOOL,aux13782_INTEGER);
constraint bool2int(aux13788_BOOL,aux13788_INTEGER);
constraint bool2int(aux13792_BOOL,aux13792_INTEGER);
constraint bool2int(aux13799_BOOL,aux13799_INTEGER);
constraint bool2int(aux13805_BOOL,aux13805_INTEGER);
constraint bool2int(aux13811_BOOL,aux13811_INTEGER);
constraint bool2int(aux13817_BOOL,aux13817_INTEGER);
constraint bool2int(aux13823_BOOL,aux13823_INTEGER);
constraint bool2int(aux13829_BOOL,aux13829_INTEGER);
constraint bool2int(aux13835_BOOL,aux13835_INTEGER);
constraint bool2int(aux13841_BOOL,aux13841_INTEGER);
constraint bool2int(aux13847_BOOL,aux13847_INTEGER);
constraint bool2int(aux13853_BOOL,aux13853_INTEGER);
constraint bool2int(aux13859_BOOL,aux13859_INTEGER);
constraint bool2int(aux13865_BOOL,aux13865_INTEGER);
constraint bool2int(aux13871_BOOL,aux13871_INTEGER);
constraint bool2int(aux13877_BOOL,aux13877_INTEGER);
constraint bool2int(aux13883_BOOL,aux13883_INTEGER);
constraint bool2int(aux13889_BOOL,aux13889_INTEGER);
constraint bool2int(aux13895_BOOL,aux13895_INTEGER);
constraint bool2int(aux13901_BOOL,aux13901_INTEGER);
constraint bool2int(aux13907_BOOL,aux13907_INTEGER);
constraint bool2int(aux13911_BOOL,aux13911_INTEGER);
constraint bool2int(aux13918_BOOL,aux13918_INTEGER);
constraint bool2int(aux13924_BOOL,aux13924_INTEGER);
constraint bool2int(aux13930_BOOL,aux13930_INTEGER);
constraint bool2int(aux13936_BOOL,aux13936_INTEGER);
constraint bool2int(aux13942_BOOL,aux13942_INTEGER);
constraint bool2int(aux13948_BOOL,aux13948_INTEGER);
constraint bool2int(aux13954_BOOL,aux13954_INTEGER);
constraint bool2int(aux13960_BOOL,aux13960_INTEGER);
constraint bool2int(aux13966_BOOL,aux13966_INTEGER);
constraint bool2int(aux13972_BOOL,aux13972_INTEGER);
constraint bool2int(aux13978_BOOL,aux13978_INTEGER);
constraint bool2int(aux13984_BOOL,aux13984_INTEGER);
constraint bool2int(aux13990_BOOL,aux13990_INTEGER);
constraint bool2int(aux13996_BOOL,aux13996_INTEGER);
constraint bool2int(aux14002_BOOL,aux14002_INTEGER);
constraint bool2int(aux14008_BOOL,aux14008_INTEGER);
constraint bool2int(aux14014_BOOL,aux14014_INTEGER);
constraint bool2int(aux14020_BOOL,aux14020_INTEGER);
constraint bool2int(aux14026_BOOL,aux14026_INTEGER);
constraint bool2int(aux14030_BOOL,aux14030_INTEGER);
constraint bool2int(aux14037_BOOL,aux14037_INTEGER);
constraint bool2int(aux14043_BOOL,aux14043_INTEGER);
constraint bool2int(aux14049_BOOL,aux14049_INTEGER);
constraint bool2int(aux14055_BOOL,aux14055_INTEGER);
constraint bool2int(aux14061_BOOL,aux14061_INTEGER);
constraint bool2int(aux14067_BOOL,aux14067_INTEGER);
constraint bool2int(aux14073_BOOL,aux14073_INTEGER);
constraint bool2int(aux14079_BOOL,aux14079_INTEGER);
constraint bool2int(aux14085_BOOL,aux14085_INTEGER);
constraint bool2int(aux14091_BOOL,aux14091_INTEGER);
constraint bool2int(aux14097_BOOL,aux14097_INTEGER);
constraint bool2int(aux14103_BOOL,aux14103_INTEGER);
constraint bool2int(aux14109_BOOL,aux14109_INTEGER);
constraint bool2int(aux14115_BOOL,aux14115_INTEGER);
constraint bool2int(aux14121_BOOL,aux14121_INTEGER);
constraint bool2int(aux14127_BOOL,aux14127_INTEGER);
constraint bool2int(aux14133_BOOL,aux14133_INTEGER);
constraint bool2int(aux14139_BOOL,aux14139_INTEGER);
constraint bool2int(aux14145_BOOL,aux14145_INTEGER);
constraint bool2int(aux14149_BOOL,aux14149_INTEGER);
constraint bool2int(aux14156_BOOL,aux14156_INTEGER);
constraint bool2int(aux14162_BOOL,aux14162_INTEGER);
constraint bool2int(aux14168_BOOL,aux14168_INTEGER);
constraint bool2int(aux14174_BOOL,aux14174_INTEGER);
constraint bool2int(aux14180_BOOL,aux14180_INTEGER);
constraint bool2int(aux14186_BOOL,aux14186_INTEGER);
constraint bool2int(aux14192_BOOL,aux14192_INTEGER);
constraint bool2int(aux14198_BOOL,aux14198_INTEGER);
constraint bool2int(aux14204_BOOL,aux14204_INTEGER);
constraint bool2int(aux14210_BOOL,aux14210_INTEGER);
constraint bool2int(aux14216_BOOL,aux14216_INTEGER);
constraint bool2int(aux14222_BOOL,aux14222_INTEGER);
constraint bool2int(aux14228_BOOL,aux14228_INTEGER);
constraint bool2int(aux14234_BOOL,aux14234_INTEGER);
constraint bool2int(aux14240_BOOL,aux14240_INTEGER);
constraint bool2int(aux14246_BOOL,aux14246_INTEGER);
constraint bool2int(aux14252_BOOL,aux14252_INTEGER);
constraint bool2int(aux14258_BOOL,aux14258_INTEGER);
constraint bool2int(aux14264_BOOL,aux14264_INTEGER);
constraint bool2int(aux14268_BOOL,aux14268_INTEGER);
constraint bool2int(aux14275_BOOL,aux14275_INTEGER);
constraint bool2int(aux14281_BOOL,aux14281_INTEGER);
constraint bool2int(aux14287_BOOL,aux14287_INTEGER);
constraint bool2int(aux14293_BOOL,aux14293_INTEGER);
constraint bool2int(aux14299_BOOL,aux14299_INTEGER);
constraint bool2int(aux14305_BOOL,aux14305_INTEGER);
constraint bool2int(aux14311_BOOL,aux14311_INTEGER);
constraint bool2int(aux14317_BOOL,aux14317_INTEGER);
constraint bool2int(aux14323_BOOL,aux14323_INTEGER);
constraint bool2int(aux14329_BOOL,aux14329_INTEGER);
constraint bool2int(aux14335_BOOL,aux14335_INTEGER);
constraint bool2int(aux14341_BOOL,aux14341_INTEGER);
constraint bool2int(aux14347_BOOL,aux14347_INTEGER);
constraint bool2int(aux14353_BOOL,aux14353_INTEGER);
constraint bool2int(aux14359_BOOL,aux14359_INTEGER);
constraint bool2int(aux14365_BOOL,aux14365_INTEGER);
constraint bool2int(aux14371_BOOL,aux14371_INTEGER);
constraint bool2int(aux14377_BOOL,aux14377_INTEGER);
constraint bool2int(aux14383_BOOL,aux14383_INTEGER);
constraint bool2int(aux14387_BOOL,aux14387_INTEGER);
constraint bool2int(aux14394_BOOL,aux14394_INTEGER);
constraint bool2int(aux14400_BOOL,aux14400_INTEGER);
constraint bool2int(aux14406_BOOL,aux14406_INTEGER);
constraint bool2int(aux14412_BOOL,aux14412_INTEGER);
constraint bool2int(aux14418_BOOL,aux14418_INTEGER);
constraint bool2int(aux14424_BOOL,aux14424_INTEGER);
constraint bool2int(aux14430_BOOL,aux14430_INTEGER);
constraint bool2int(aux14436_BOOL,aux14436_INTEGER);
constraint bool2int(aux14442_BOOL,aux14442_INTEGER);
constraint bool2int(aux14448_BOOL,aux14448_INTEGER);
constraint bool2int(aux14454_BOOL,aux14454_INTEGER);
constraint bool2int(aux14460_BOOL,aux14460_INTEGER);
constraint bool2int(aux14466_BOOL,aux14466_INTEGER);
constraint bool2int(aux14472_BOOL,aux14472_INTEGER);
constraint bool2int(aux14478_BOOL,aux14478_INTEGER);
constraint bool2int(aux14484_BOOL,aux14484_INTEGER);
constraint bool2int(aux14490_BOOL,aux14490_INTEGER);
constraint bool2int(aux14496_BOOL,aux14496_INTEGER);
constraint bool2int(aux14502_BOOL,aux14502_INTEGER);
constraint bool2int(aux14506_BOOL,aux14506_INTEGER);
constraint bool2int(aux14513_BOOL,aux14513_INTEGER);
constraint bool2int(aux14519_BOOL,aux14519_INTEGER);
constraint bool2int(aux14525_BOOL,aux14525_INTEGER);
constraint bool2int(aux14531_BOOL,aux14531_INTEGER);
constraint bool2int(aux14537_BOOL,aux14537_INTEGER);
constraint bool2int(aux14543_BOOL,aux14543_INTEGER);
constraint bool2int(aux14549_BOOL,aux14549_INTEGER);
constraint bool2int(aux14555_BOOL,aux14555_INTEGER);
constraint bool2int(aux14561_BOOL,aux14561_INTEGER);
constraint bool2int(aux14567_BOOL,aux14567_INTEGER);
constraint bool2int(aux14573_BOOL,aux14573_INTEGER);
constraint bool2int(aux14579_BOOL,aux14579_INTEGER);
constraint bool2int(aux14585_BOOL,aux14585_INTEGER);
constraint bool2int(aux14591_BOOL,aux14591_INTEGER);
constraint bool2int(aux14597_BOOL,aux14597_INTEGER);
constraint bool2int(aux14603_BOOL,aux14603_INTEGER);
constraint bool2int(aux14609_BOOL,aux14609_INTEGER);
constraint bool2int(aux14615_BOOL,aux14615_INTEGER);
constraint bool2int(aux14621_BOOL,aux14621_INTEGER);
constraint bool2int(aux14625_BOOL,aux14625_INTEGER);
constraint bool2int(aux14632_BOOL,aux14632_INTEGER);
constraint bool2int(aux14638_BOOL,aux14638_INTEGER);
constraint bool2int(aux14644_BOOL,aux14644_INTEGER);
constraint bool2int(aux14650_BOOL,aux14650_INTEGER);
constraint bool2int(aux14656_BOOL,aux14656_INTEGER);
constraint bool2int(aux14662_BOOL,aux14662_INTEGER);
constraint bool2int(aux14668_BOOL,aux14668_INTEGER);
constraint bool2int(aux14674_BOOL,aux14674_INTEGER);
constraint bool2int(aux14680_BOOL,aux14680_INTEGER);
constraint bool2int(aux14686_BOOL,aux14686_INTEGER);
constraint bool2int(aux14692_BOOL,aux14692_INTEGER);
constraint bool2int(aux14698_BOOL,aux14698_INTEGER);
constraint bool2int(aux14704_BOOL,aux14704_INTEGER);
constraint bool2int(aux14710_BOOL,aux14710_INTEGER);
constraint bool2int(aux14716_BOOL,aux14716_INTEGER);
constraint bool2int(aux14722_BOOL,aux14722_INTEGER);
constraint bool2int(aux14728_BOOL,aux14728_INTEGER);
constraint bool2int(aux14734_BOOL,aux14734_INTEGER);
constraint bool2int(aux14740_BOOL,aux14740_INTEGER);
constraint bool2int(aux14744_BOOL,aux14744_INTEGER);
constraint bool2int(aux14753_BOOL,aux14753_INTEGER);
constraint bool2int(aux14759_BOOL,aux14759_INTEGER);
constraint bool2int(aux14765_BOOL,aux14765_INTEGER);
constraint bool2int(aux14771_BOOL,aux14771_INTEGER);
constraint bool2int(aux14777_BOOL,aux14777_INTEGER);
constraint bool2int(aux14783_BOOL,aux14783_INTEGER);
constraint bool2int(aux14789_BOOL,aux14789_INTEGER);
constraint bool2int(aux14795_BOOL,aux14795_INTEGER);
constraint bool2int(aux14801_BOOL,aux14801_INTEGER);
constraint bool2int(aux14807_BOOL,aux14807_INTEGER);
constraint bool2int(aux14813_BOOL,aux14813_INTEGER);
constraint bool2int(aux14819_BOOL,aux14819_INTEGER);
constraint bool2int(aux14825_BOOL,aux14825_INTEGER);
constraint bool2int(aux14831_BOOL,aux14831_INTEGER);
constraint bool2int(aux14837_BOOL,aux14837_INTEGER);
constraint bool2int(aux14843_BOOL,aux14843_INTEGER);
constraint bool2int(aux14849_BOOL,aux14849_INTEGER);
constraint bool2int(aux14855_BOOL,aux14855_INTEGER);
constraint bool2int(aux14861_BOOL,aux14861_INTEGER);
constraint bool2int(aux14865_BOOL,aux14865_INTEGER);
constraint bool2int(aux14872_BOOL,aux14872_INTEGER);
constraint bool2int(aux14878_BOOL,aux14878_INTEGER);
constraint bool2int(aux14884_BOOL,aux14884_INTEGER);
constraint bool2int(aux14890_BOOL,aux14890_INTEGER);
constraint bool2int(aux14896_BOOL,aux14896_INTEGER);
constraint bool2int(aux14902_BOOL,aux14902_INTEGER);
constraint bool2int(aux14908_BOOL,aux14908_INTEGER);
constraint bool2int(aux14914_BOOL,aux14914_INTEGER);
constraint bool2int(aux14920_BOOL,aux14920_INTEGER);
constraint bool2int(aux14926_BOOL,aux14926_INTEGER);
constraint bool2int(aux14932_BOOL,aux14932_INTEGER);
constraint bool2int(aux14938_BOOL,aux14938_INTEGER);
constraint bool2int(aux14944_BOOL,aux14944_INTEGER);
constraint bool2int(aux14950_BOOL,aux14950_INTEGER);
constraint bool2int(aux14956_BOOL,aux14956_INTEGER);
constraint bool2int(aux14962_BOOL,aux14962_INTEGER);
constraint bool2int(aux14968_BOOL,aux14968_INTEGER);
constraint bool2int(aux14974_BOOL,aux14974_INTEGER);
constraint bool2int(aux14980_BOOL,aux14980_INTEGER);
constraint bool2int(aux14984_BOOL,aux14984_INTEGER);
constraint bool2int(aux14991_BOOL,aux14991_INTEGER);
constraint bool2int(aux14997_BOOL,aux14997_INTEGER);
constraint bool2int(aux15003_BOOL,aux15003_INTEGER);
constraint bool2int(aux15009_BOOL,aux15009_INTEGER);
constraint bool2int(aux15015_BOOL,aux15015_INTEGER);
constraint bool2int(aux15021_BOOL,aux15021_INTEGER);
constraint bool2int(aux15027_BOOL,aux15027_INTEGER);
constraint bool2int(aux15033_BOOL,aux15033_INTEGER);
constraint bool2int(aux15039_BOOL,aux15039_INTEGER);
constraint bool2int(aux15045_BOOL,aux15045_INTEGER);
constraint bool2int(aux15051_BOOL,aux15051_INTEGER);
constraint bool2int(aux15057_BOOL,aux15057_INTEGER);
constraint bool2int(aux15063_BOOL,aux15063_INTEGER);
constraint bool2int(aux15069_BOOL,aux15069_INTEGER);
constraint bool2int(aux15075_BOOL,aux15075_INTEGER);
constraint bool2int(aux15081_BOOL,aux15081_INTEGER);
constraint bool2int(aux15087_BOOL,aux15087_INTEGER);
constraint bool2int(aux15093_BOOL,aux15093_INTEGER);
constraint bool2int(aux15099_BOOL,aux15099_INTEGER);
constraint bool2int(aux15103_BOOL,aux15103_INTEGER);
constraint bool2int(aux15110_BOOL,aux15110_INTEGER);
constraint bool2int(aux15116_BOOL,aux15116_INTEGER);
constraint bool2int(aux15122_BOOL,aux15122_INTEGER);
constraint bool2int(aux15128_BOOL,aux15128_INTEGER);
constraint bool2int(aux15134_BOOL,aux15134_INTEGER);
constraint bool2int(aux15140_BOOL,aux15140_INTEGER);
constraint bool2int(aux15146_BOOL,aux15146_INTEGER);
constraint bool2int(aux15152_BOOL,aux15152_INTEGER);
constraint bool2int(aux15158_BOOL,aux15158_INTEGER);
constraint bool2int(aux15164_BOOL,aux15164_INTEGER);
constraint bool2int(aux15170_BOOL,aux15170_INTEGER);
constraint bool2int(aux15176_BOOL,aux15176_INTEGER);
constraint bool2int(aux15182_BOOL,aux15182_INTEGER);
constraint bool2int(aux15188_BOOL,aux15188_INTEGER);
constraint bool2int(aux15194_BOOL,aux15194_INTEGER);
constraint bool2int(aux15200_BOOL,aux15200_INTEGER);
constraint bool2int(aux15206_BOOL,aux15206_INTEGER);
constraint bool2int(aux15212_BOOL,aux15212_INTEGER);
constraint bool2int(aux15218_BOOL,aux15218_INTEGER);
constraint bool2int(aux15222_BOOL,aux15222_INTEGER);
constraint bool2int(aux15229_BOOL,aux15229_INTEGER);
constraint bool2int(aux15235_BOOL,aux15235_INTEGER);
constraint bool2int(aux15241_BOOL,aux15241_INTEGER);
constraint bool2int(aux15247_BOOL,aux15247_INTEGER);
constraint bool2int(aux15253_BOOL,aux15253_INTEGER);
constraint bool2int(aux15259_BOOL,aux15259_INTEGER);
constraint bool2int(aux15265_BOOL,aux15265_INTEGER);
constraint bool2int(aux15271_BOOL,aux15271_INTEGER);
constraint bool2int(aux15277_BOOL,aux15277_INTEGER);
constraint bool2int(aux15283_BOOL,aux15283_INTEGER);
constraint bool2int(aux15289_BOOL,aux15289_INTEGER);
constraint bool2int(aux15295_BOOL,aux15295_INTEGER);
constraint bool2int(aux15301_BOOL,aux15301_INTEGER);
constraint bool2int(aux15307_BOOL,aux15307_INTEGER);
constraint bool2int(aux15313_BOOL,aux15313_INTEGER);
constraint bool2int(aux15319_BOOL,aux15319_INTEGER);
constraint bool2int(aux15325_BOOL,aux15325_INTEGER);
constraint bool2int(aux15331_BOOL,aux15331_INTEGER);
constraint bool2int(aux15337_BOOL,aux15337_INTEGER);
constraint bool2int(aux15341_BOOL,aux15341_INTEGER);
constraint bool2int(aux15348_BOOL,aux15348_INTEGER);
constraint bool2int(aux15354_BOOL,aux15354_INTEGER);
constraint bool2int(aux15360_BOOL,aux15360_INTEGER);
constraint bool2int(aux15366_BOOL,aux15366_INTEGER);
constraint bool2int(aux15372_BOOL,aux15372_INTEGER);
constraint bool2int(aux15378_BOOL,aux15378_INTEGER);
constraint bool2int(aux15384_BOOL,aux15384_INTEGER);
constraint bool2int(aux15390_BOOL,aux15390_INTEGER);
constraint bool2int(aux15396_BOOL,aux15396_INTEGER);
constraint bool2int(aux15402_BOOL,aux15402_INTEGER);
constraint bool2int(aux15408_BOOL,aux15408_INTEGER);
constraint bool2int(aux15414_BOOL,aux15414_INTEGER);
constraint bool2int(aux15420_BOOL,aux15420_INTEGER);
constraint bool2int(aux15426_BOOL,aux15426_INTEGER);
constraint bool2int(aux15432_BOOL,aux15432_INTEGER);
constraint bool2int(aux15438_BOOL,aux15438_INTEGER);
constraint bool2int(aux15444_BOOL,aux15444_INTEGER);
constraint bool2int(aux15450_BOOL,aux15450_INTEGER);
constraint bool2int(aux15456_BOOL,aux15456_INTEGER);
constraint bool2int(aux15460_BOOL,aux15460_INTEGER);
constraint bool2int(aux15467_BOOL,aux15467_INTEGER);
constraint bool2int(aux15473_BOOL,aux15473_INTEGER);
constraint bool2int(aux15479_BOOL,aux15479_INTEGER);
constraint bool2int(aux15485_BOOL,aux15485_INTEGER);
constraint bool2int(aux15491_BOOL,aux15491_INTEGER);
constraint bool2int(aux15497_BOOL,aux15497_INTEGER);
constraint bool2int(aux15503_BOOL,aux15503_INTEGER);
constraint bool2int(aux15509_BOOL,aux15509_INTEGER);
constraint bool2int(aux15515_BOOL,aux15515_INTEGER);
constraint bool2int(aux15521_BOOL,aux15521_INTEGER);
constraint bool2int(aux15527_BOOL,aux15527_INTEGER);
constraint bool2int(aux15533_BOOL,aux15533_INTEGER);
constraint bool2int(aux15539_BOOL,aux15539_INTEGER);
constraint bool2int(aux15545_BOOL,aux15545_INTEGER);
constraint bool2int(aux15551_BOOL,aux15551_INTEGER);
constraint bool2int(aux15557_BOOL,aux15557_INTEGER);
constraint bool2int(aux15563_BOOL,aux15563_INTEGER);
constraint bool2int(aux15569_BOOL,aux15569_INTEGER);
constraint bool2int(aux15575_BOOL,aux15575_INTEGER);
constraint bool2int(aux15579_BOOL,aux15579_INTEGER);
constraint bool2int(aux15586_BOOL,aux15586_INTEGER);
constraint bool2int(aux15592_BOOL,aux15592_INTEGER);
constraint bool2int(aux15598_BOOL,aux15598_INTEGER);
constraint bool2int(aux15604_BOOL,aux15604_INTEGER);
constraint bool2int(aux15610_BOOL,aux15610_INTEGER);
constraint bool2int(aux15616_BOOL,aux15616_INTEGER);
constraint bool2int(aux15622_BOOL,aux15622_INTEGER);
constraint bool2int(aux15628_BOOL,aux15628_INTEGER);
constraint bool2int(aux15634_BOOL,aux15634_INTEGER);
constraint bool2int(aux15640_BOOL,aux15640_INTEGER);
constraint bool2int(aux15646_BOOL,aux15646_INTEGER);
constraint bool2int(aux15652_BOOL,aux15652_INTEGER);
constraint bool2int(aux15658_BOOL,aux15658_INTEGER);
constraint bool2int(aux15664_BOOL,aux15664_INTEGER);
constraint bool2int(aux15670_BOOL,aux15670_INTEGER);
constraint bool2int(aux15676_BOOL,aux15676_INTEGER);
constraint bool2int(aux15682_BOOL,aux15682_INTEGER);
constraint bool2int(aux15688_BOOL,aux15688_INTEGER);
constraint bool2int(aux15694_BOOL,aux15694_INTEGER);
constraint bool2int(aux15698_BOOL,aux15698_INTEGER);
constraint bool2int(aux15705_BOOL,aux15705_INTEGER);
constraint bool2int(aux15711_BOOL,aux15711_INTEGER);
constraint bool2int(aux15717_BOOL,aux15717_INTEGER);
constraint bool2int(aux15723_BOOL,aux15723_INTEGER);
constraint bool2int(aux15729_BOOL,aux15729_INTEGER);
constraint bool2int(aux15735_BOOL,aux15735_INTEGER);
constraint bool2int(aux15741_BOOL,aux15741_INTEGER);
constraint bool2int(aux15747_BOOL,aux15747_INTEGER);
constraint bool2int(aux15753_BOOL,aux15753_INTEGER);
constraint bool2int(aux15759_BOOL,aux15759_INTEGER);
constraint bool2int(aux15765_BOOL,aux15765_INTEGER);
constraint bool2int(aux15771_BOOL,aux15771_INTEGER);
constraint bool2int(aux15777_BOOL,aux15777_INTEGER);
constraint bool2int(aux15783_BOOL,aux15783_INTEGER);
constraint bool2int(aux15789_BOOL,aux15789_INTEGER);
constraint bool2int(aux15795_BOOL,aux15795_INTEGER);
constraint bool2int(aux15801_BOOL,aux15801_INTEGER);
constraint bool2int(aux15807_BOOL,aux15807_INTEGER);
constraint bool2int(aux15813_BOOL,aux15813_INTEGER);
constraint bool2int(aux15817_BOOL,aux15817_INTEGER);
constraint bool2int(aux15824_BOOL,aux15824_INTEGER);
constraint bool2int(aux15830_BOOL,aux15830_INTEGER);
constraint bool2int(aux15836_BOOL,aux15836_INTEGER);
constraint bool2int(aux15842_BOOL,aux15842_INTEGER);
constraint bool2int(aux15848_BOOL,aux15848_INTEGER);
constraint bool2int(aux15854_BOOL,aux15854_INTEGER);
constraint bool2int(aux15860_BOOL,aux15860_INTEGER);
constraint bool2int(aux15866_BOOL,aux15866_INTEGER);
constraint bool2int(aux15872_BOOL,aux15872_INTEGER);
constraint bool2int(aux15878_BOOL,aux15878_INTEGER);
constraint bool2int(aux15884_BOOL,aux15884_INTEGER);
constraint bool2int(aux15890_BOOL,aux15890_INTEGER);
constraint bool2int(aux15896_BOOL,aux15896_INTEGER);
constraint bool2int(aux15902_BOOL,aux15902_INTEGER);
constraint bool2int(aux15908_BOOL,aux15908_INTEGER);
constraint bool2int(aux15914_BOOL,aux15914_INTEGER);
constraint bool2int(aux15920_BOOL,aux15920_INTEGER);
constraint bool2int(aux15926_BOOL,aux15926_INTEGER);
constraint bool2int(aux15932_BOOL,aux15932_INTEGER);
constraint bool2int(aux15936_BOOL,aux15936_INTEGER);
constraint bool2int(aux15943_BOOL,aux15943_INTEGER);
constraint bool2int(aux15949_BOOL,aux15949_INTEGER);
constraint bool2int(aux15955_BOOL,aux15955_INTEGER);
constraint bool2int(aux15961_BOOL,aux15961_INTEGER);
constraint bool2int(aux15967_BOOL,aux15967_INTEGER);
constraint bool2int(aux15973_BOOL,aux15973_INTEGER);
constraint bool2int(aux15979_BOOL,aux15979_INTEGER);
constraint bool2int(aux15985_BOOL,aux15985_INTEGER);
constraint bool2int(aux15991_BOOL,aux15991_INTEGER);
constraint bool2int(aux15997_BOOL,aux15997_INTEGER);
constraint bool2int(aux16003_BOOL,aux16003_INTEGER);
constraint bool2int(aux16009_BOOL,aux16009_INTEGER);
constraint bool2int(aux16015_BOOL,aux16015_INTEGER);
constraint bool2int(aux16021_BOOL,aux16021_INTEGER);
constraint bool2int(aux16027_BOOL,aux16027_INTEGER);
constraint bool2int(aux16033_BOOL,aux16033_INTEGER);
constraint bool2int(aux16039_BOOL,aux16039_INTEGER);
constraint bool2int(aux16045_BOOL,aux16045_INTEGER);
constraint bool2int(aux16051_BOOL,aux16051_INTEGER);
constraint bool2int(aux16055_BOOL,aux16055_INTEGER);
constraint bool2int(aux16062_BOOL,aux16062_INTEGER);
constraint bool2int(aux16068_BOOL,aux16068_INTEGER);
constraint bool2int(aux16074_BOOL,aux16074_INTEGER);
constraint bool2int(aux16080_BOOL,aux16080_INTEGER);
constraint bool2int(aux16086_BOOL,aux16086_INTEGER);
constraint bool2int(aux16092_BOOL,aux16092_INTEGER);
constraint bool2int(aux16098_BOOL,aux16098_INTEGER);
constraint bool2int(aux16104_BOOL,aux16104_INTEGER);
constraint bool2int(aux16110_BOOL,aux16110_INTEGER);
constraint bool2int(aux16116_BOOL,aux16116_INTEGER);
constraint bool2int(aux16122_BOOL,aux16122_INTEGER);
constraint bool2int(aux16128_BOOL,aux16128_INTEGER);
constraint bool2int(aux16134_BOOL,aux16134_INTEGER);
constraint bool2int(aux16140_BOOL,aux16140_INTEGER);
constraint bool2int(aux16146_BOOL,aux16146_INTEGER);
constraint bool2int(aux16152_BOOL,aux16152_INTEGER);
constraint bool2int(aux16158_BOOL,aux16158_INTEGER);
constraint bool2int(aux16164_BOOL,aux16164_INTEGER);
constraint bool2int(aux16170_BOOL,aux16170_INTEGER);
constraint bool2int(aux16174_BOOL,aux16174_INTEGER);
constraint bool2int(aux16181_BOOL,aux16181_INTEGER);
constraint bool2int(aux16187_BOOL,aux16187_INTEGER);
constraint bool2int(aux16193_BOOL,aux16193_INTEGER);
constraint bool2int(aux16199_BOOL,aux16199_INTEGER);
constraint bool2int(aux16205_BOOL,aux16205_INTEGER);
constraint bool2int(aux16211_BOOL,aux16211_INTEGER);
constraint bool2int(aux16217_BOOL,aux16217_INTEGER);
constraint bool2int(aux16223_BOOL,aux16223_INTEGER);
constraint bool2int(aux16229_BOOL,aux16229_INTEGER);
constraint bool2int(aux16235_BOOL,aux16235_INTEGER);
constraint bool2int(aux16241_BOOL,aux16241_INTEGER);
constraint bool2int(aux16247_BOOL,aux16247_INTEGER);
constraint bool2int(aux16253_BOOL,aux16253_INTEGER);
constraint bool2int(aux16259_BOOL,aux16259_INTEGER);
constraint bool2int(aux16265_BOOL,aux16265_INTEGER);
constraint bool2int(aux16271_BOOL,aux16271_INTEGER);
constraint bool2int(aux16277_BOOL,aux16277_INTEGER);
constraint bool2int(aux16283_BOOL,aux16283_INTEGER);
constraint bool2int(aux16289_BOOL,aux16289_INTEGER);
constraint bool2int(aux16293_BOOL,aux16293_INTEGER);
constraint bool2int(aux16300_BOOL,aux16300_INTEGER);
constraint bool2int(aux16306_BOOL,aux16306_INTEGER);
constraint bool2int(aux16312_BOOL,aux16312_INTEGER);
constraint bool2int(aux16318_BOOL,aux16318_INTEGER);
constraint bool2int(aux16324_BOOL,aux16324_INTEGER);
constraint bool2int(aux16330_BOOL,aux16330_INTEGER);
constraint bool2int(aux16336_BOOL,aux16336_INTEGER);
constraint bool2int(aux16342_BOOL,aux16342_INTEGER);
constraint bool2int(aux16348_BOOL,aux16348_INTEGER);
constraint bool2int(aux16354_BOOL,aux16354_INTEGER);
constraint bool2int(aux16360_BOOL,aux16360_INTEGER);
constraint bool2int(aux16366_BOOL,aux16366_INTEGER);
constraint bool2int(aux16372_BOOL,aux16372_INTEGER);
constraint bool2int(aux16378_BOOL,aux16378_INTEGER);
constraint bool2int(aux16384_BOOL,aux16384_INTEGER);
constraint bool2int(aux16390_BOOL,aux16390_INTEGER);
constraint bool2int(aux16396_BOOL,aux16396_INTEGER);
constraint bool2int(aux16402_BOOL,aux16402_INTEGER);
constraint bool2int(aux16408_BOOL,aux16408_INTEGER);
constraint bool2int(aux16412_BOOL,aux16412_INTEGER);
constraint bool2int(aux16419_BOOL,aux16419_INTEGER);
constraint bool2int(aux16425_BOOL,aux16425_INTEGER);
constraint bool2int(aux16431_BOOL,aux16431_INTEGER);
constraint bool2int(aux16437_BOOL,aux16437_INTEGER);
constraint bool2int(aux16443_BOOL,aux16443_INTEGER);
constraint bool2int(aux16449_BOOL,aux16449_INTEGER);
constraint bool2int(aux16455_BOOL,aux16455_INTEGER);
constraint bool2int(aux16461_BOOL,aux16461_INTEGER);
constraint bool2int(aux16467_BOOL,aux16467_INTEGER);
constraint bool2int(aux16473_BOOL,aux16473_INTEGER);
constraint bool2int(aux16479_BOOL,aux16479_INTEGER);
constraint bool2int(aux16485_BOOL,aux16485_INTEGER);
constraint bool2int(aux16491_BOOL,aux16491_INTEGER);
constraint bool2int(aux16497_BOOL,aux16497_INTEGER);
constraint bool2int(aux16503_BOOL,aux16503_INTEGER);
constraint bool2int(aux16509_BOOL,aux16509_INTEGER);
constraint bool2int(aux16515_BOOL,aux16515_INTEGER);
constraint bool2int(aux16521_BOOL,aux16521_INTEGER);
constraint bool2int(aux16527_BOOL,aux16527_INTEGER);
constraint bool2int(aux16531_BOOL,aux16531_INTEGER);
constraint bool2int(aux16538_BOOL,aux16538_INTEGER);
constraint bool2int(aux16544_BOOL,aux16544_INTEGER);
constraint bool2int(aux16550_BOOL,aux16550_INTEGER);
constraint bool2int(aux16556_BOOL,aux16556_INTEGER);
constraint bool2int(aux16562_BOOL,aux16562_INTEGER);
constraint bool2int(aux16568_BOOL,aux16568_INTEGER);
constraint bool2int(aux16574_BOOL,aux16574_INTEGER);
constraint bool2int(aux16580_BOOL,aux16580_INTEGER);
constraint bool2int(aux16586_BOOL,aux16586_INTEGER);
constraint bool2int(aux16592_BOOL,aux16592_INTEGER);
constraint bool2int(aux16598_BOOL,aux16598_INTEGER);
constraint bool2int(aux16604_BOOL,aux16604_INTEGER);
constraint bool2int(aux16610_BOOL,aux16610_INTEGER);
constraint bool2int(aux16616_BOOL,aux16616_INTEGER);
constraint bool2int(aux16622_BOOL,aux16622_INTEGER);
constraint bool2int(aux16628_BOOL,aux16628_INTEGER);
constraint bool2int(aux16634_BOOL,aux16634_INTEGER);
constraint bool2int(aux16640_BOOL,aux16640_INTEGER);
constraint bool2int(aux16646_BOOL,aux16646_INTEGER);
constraint bool2int(aux16650_BOOL,aux16650_INTEGER);
constraint bool2int(aux16657_BOOL,aux16657_INTEGER);
constraint bool2int(aux16663_BOOL,aux16663_INTEGER);
constraint bool2int(aux16669_BOOL,aux16669_INTEGER);
constraint bool2int(aux16675_BOOL,aux16675_INTEGER);
constraint bool2int(aux16681_BOOL,aux16681_INTEGER);
constraint bool2int(aux16687_BOOL,aux16687_INTEGER);
constraint bool2int(aux16693_BOOL,aux16693_INTEGER);
constraint bool2int(aux16699_BOOL,aux16699_INTEGER);
constraint bool2int(aux16705_BOOL,aux16705_INTEGER);
constraint bool2int(aux16711_BOOL,aux16711_INTEGER);
constraint bool2int(aux16717_BOOL,aux16717_INTEGER);
constraint bool2int(aux16723_BOOL,aux16723_INTEGER);
constraint bool2int(aux16729_BOOL,aux16729_INTEGER);
constraint bool2int(aux16735_BOOL,aux16735_INTEGER);
constraint bool2int(aux16741_BOOL,aux16741_INTEGER);
constraint bool2int(aux16747_BOOL,aux16747_INTEGER);
constraint bool2int(aux16753_BOOL,aux16753_INTEGER);
constraint bool2int(aux16759_BOOL,aux16759_INTEGER);
constraint bool2int(aux16765_BOOL,aux16765_INTEGER);
constraint bool2int(aux16769_BOOL,aux16769_INTEGER);
constraint bool2int(aux16776_BOOL,aux16776_INTEGER);
constraint bool2int(aux16782_BOOL,aux16782_INTEGER);
constraint bool2int(aux16788_BOOL,aux16788_INTEGER);
constraint bool2int(aux16794_BOOL,aux16794_INTEGER);
constraint bool2int(aux16800_BOOL,aux16800_INTEGER);
constraint bool2int(aux16806_BOOL,aux16806_INTEGER);
constraint bool2int(aux16812_BOOL,aux16812_INTEGER);
constraint bool2int(aux16818_BOOL,aux16818_INTEGER);
constraint bool2int(aux16824_BOOL,aux16824_INTEGER);
constraint bool2int(aux16830_BOOL,aux16830_INTEGER);
constraint bool2int(aux16836_BOOL,aux16836_INTEGER);
constraint bool2int(aux16842_BOOL,aux16842_INTEGER);
constraint bool2int(aux16848_BOOL,aux16848_INTEGER);
constraint bool2int(aux16854_BOOL,aux16854_INTEGER);
constraint bool2int(aux16860_BOOL,aux16860_INTEGER);
constraint bool2int(aux16866_BOOL,aux16866_INTEGER);
constraint bool2int(aux16872_BOOL,aux16872_INTEGER);
constraint bool2int(aux16878_BOOL,aux16878_INTEGER);
constraint bool2int(aux16884_BOOL,aux16884_INTEGER);
constraint bool2int(aux16888_BOOL,aux16888_INTEGER);
constraint bool2int(aux16895_BOOL,aux16895_INTEGER);
constraint bool2int(aux16901_BOOL,aux16901_INTEGER);
constraint bool2int(aux16907_BOOL,aux16907_INTEGER);
constraint bool2int(aux16913_BOOL,aux16913_INTEGER);
constraint bool2int(aux16919_BOOL,aux16919_INTEGER);
constraint bool2int(aux16925_BOOL,aux16925_INTEGER);
constraint bool2int(aux16931_BOOL,aux16931_INTEGER);
constraint bool2int(aux16937_BOOL,aux16937_INTEGER);
constraint bool2int(aux16943_BOOL,aux16943_INTEGER);
constraint bool2int(aux16949_BOOL,aux16949_INTEGER);
constraint bool2int(aux16955_BOOL,aux16955_INTEGER);
constraint bool2int(aux16961_BOOL,aux16961_INTEGER);
constraint bool2int(aux16967_BOOL,aux16967_INTEGER);
constraint bool2int(aux16973_BOOL,aux16973_INTEGER);
constraint bool2int(aux16979_BOOL,aux16979_INTEGER);
constraint bool2int(aux16985_BOOL,aux16985_INTEGER);
constraint bool2int(aux16991_BOOL,aux16991_INTEGER);
constraint bool2int(aux16997_BOOL,aux16997_INTEGER);
constraint bool2int(aux17003_BOOL,aux17003_INTEGER);
constraint bool2int(aux17007_BOOL,aux17007_INTEGER);
constraint bool2int(aux17014_BOOL,aux17014_INTEGER);
constraint bool2int(aux17020_BOOL,aux17020_INTEGER);
constraint bool2int(aux17026_BOOL,aux17026_INTEGER);
constraint bool2int(aux17032_BOOL,aux17032_INTEGER);
constraint bool2int(aux17038_BOOL,aux17038_INTEGER);
constraint bool2int(aux17044_BOOL,aux17044_INTEGER);
constraint bool2int(aux17050_BOOL,aux17050_INTEGER);
constraint bool2int(aux17056_BOOL,aux17056_INTEGER);
constraint bool2int(aux17062_BOOL,aux17062_INTEGER);
constraint bool2int(aux17068_BOOL,aux17068_INTEGER);
constraint bool2int(aux17074_BOOL,aux17074_INTEGER);
constraint bool2int(aux17080_BOOL,aux17080_INTEGER);
constraint bool2int(aux17086_BOOL,aux17086_INTEGER);
constraint bool2int(aux17092_BOOL,aux17092_INTEGER);
constraint bool2int(aux17098_BOOL,aux17098_INTEGER);
constraint bool2int(aux17104_BOOL,aux17104_INTEGER);
constraint bool2int(aux17110_BOOL,aux17110_INTEGER);
constraint bool2int(aux17116_BOOL,aux17116_INTEGER);
constraint bool2int(aux17122_BOOL,aux17122_INTEGER);
constraint bool2int(aux17126_BOOL,aux17126_INTEGER);
constraint bool2int(aux17134_BOOL,aux17134_INTEGER);
constraint bool2int(aux17140_BOOL,aux17140_INTEGER);
constraint bool2int(aux17146_BOOL,aux17146_INTEGER);
constraint bool2int(aux17152_BOOL,aux17152_INTEGER);
constraint bool2int(aux17158_BOOL,aux17158_INTEGER);
constraint bool2int(aux17164_BOOL,aux17164_INTEGER);
constraint bool2int(aux17170_BOOL,aux17170_INTEGER);
constraint bool2int(aux17176_BOOL,aux17176_INTEGER);
constraint bool2int(aux17182_BOOL,aux17182_INTEGER);
constraint bool2int(aux17188_BOOL,aux17188_INTEGER);
constraint bool2int(aux17194_BOOL,aux17194_INTEGER);
constraint bool2int(aux17200_BOOL,aux17200_INTEGER);
constraint bool2int(aux17206_BOOL,aux17206_INTEGER);
constraint bool2int(aux17212_BOOL,aux17212_INTEGER);
constraint bool2int(aux17218_BOOL,aux17218_INTEGER);
constraint bool2int(aux17224_BOOL,aux17224_INTEGER);
constraint bool2int(aux17230_BOOL,aux17230_INTEGER);
constraint bool2int(aux17236_BOOL,aux17236_INTEGER);
constraint bool2int(aux17242_BOOL,aux17242_INTEGER);
constraint bool2int(aux17248_BOOL,aux17248_INTEGER);
constraint bool2int(aux17253_BOOL,aux17253_INTEGER);
constraint bool2int(aux17259_BOOL,aux17259_INTEGER);
constraint bool2int(aux17265_BOOL,aux17265_INTEGER);
constraint bool2int(aux17271_BOOL,aux17271_INTEGER);
constraint bool2int(aux17277_BOOL,aux17277_INTEGER);
constraint bool2int(aux17283_BOOL,aux17283_INTEGER);
constraint bool2int(aux17289_BOOL,aux17289_INTEGER);
constraint bool2int(aux17295_BOOL,aux17295_INTEGER);
constraint bool2int(aux17301_BOOL,aux17301_INTEGER);
constraint bool2int(aux17307_BOOL,aux17307_INTEGER);
constraint bool2int(aux17313_BOOL,aux17313_INTEGER);
constraint bool2int(aux17319_BOOL,aux17319_INTEGER);
constraint bool2int(aux17325_BOOL,aux17325_INTEGER);
constraint bool2int(aux17331_BOOL,aux17331_INTEGER);
constraint bool2int(aux17337_BOOL,aux17337_INTEGER);
constraint bool2int(aux17343_BOOL,aux17343_INTEGER);
constraint bool2int(aux17349_BOOL,aux17349_INTEGER);
constraint bool2int(aux17355_BOOL,aux17355_INTEGER);
constraint bool2int(aux17361_BOOL,aux17361_INTEGER);
constraint bool2int(aux17367_BOOL,aux17367_INTEGER);
constraint bool2int(aux17372_BOOL,aux17372_INTEGER);
constraint bool2int(aux17378_BOOL,aux17378_INTEGER);
constraint bool2int(aux17384_BOOL,aux17384_INTEGER);
constraint bool2int(aux17390_BOOL,aux17390_INTEGER);
constraint bool2int(aux17396_BOOL,aux17396_INTEGER);
constraint bool2int(aux17402_BOOL,aux17402_INTEGER);
constraint bool2int(aux17408_BOOL,aux17408_INTEGER);
constraint bool2int(aux17414_BOOL,aux17414_INTEGER);
constraint bool2int(aux17420_BOOL,aux17420_INTEGER);
constraint bool2int(aux17426_BOOL,aux17426_INTEGER);
constraint bool2int(aux17432_BOOL,aux17432_INTEGER);
constraint bool2int(aux17438_BOOL,aux17438_INTEGER);
constraint bool2int(aux17444_BOOL,aux17444_INTEGER);
constraint bool2int(aux17450_BOOL,aux17450_INTEGER);
constraint bool2int(aux17456_BOOL,aux17456_INTEGER);
constraint bool2int(aux17462_BOOL,aux17462_INTEGER);
constraint bool2int(aux17468_BOOL,aux17468_INTEGER);
constraint bool2int(aux17474_BOOL,aux17474_INTEGER);
constraint bool2int(aux17480_BOOL,aux17480_INTEGER);
constraint bool2int(aux17486_BOOL,aux17486_INTEGER);
constraint bool2int(aux17491_BOOL,aux17491_INTEGER);
constraint bool2int(aux17497_BOOL,aux17497_INTEGER);
constraint bool2int(aux17503_BOOL,aux17503_INTEGER);
constraint bool2int(aux17509_BOOL,aux17509_INTEGER);
constraint bool2int(aux17515_BOOL,aux17515_INTEGER);
constraint bool2int(aux17521_BOOL,aux17521_INTEGER);
constraint bool2int(aux17527_BOOL,aux17527_INTEGER);
constraint bool2int(aux17533_BOOL,aux17533_INTEGER);
constraint bool2int(aux17539_BOOL,aux17539_INTEGER);
constraint bool2int(aux17545_BOOL,aux17545_INTEGER);
constraint bool2int(aux17551_BOOL,aux17551_INTEGER);
constraint bool2int(aux17557_BOOL,aux17557_INTEGER);
constraint bool2int(aux17563_BOOL,aux17563_INTEGER);
constraint bool2int(aux17569_BOOL,aux17569_INTEGER);
constraint bool2int(aux17575_BOOL,aux17575_INTEGER);
constraint bool2int(aux17581_BOOL,aux17581_INTEGER);
constraint bool2int(aux17587_BOOL,aux17587_INTEGER);
constraint bool2int(aux17593_BOOL,aux17593_INTEGER);
constraint bool2int(aux17599_BOOL,aux17599_INTEGER);
constraint bool2int(aux17605_BOOL,aux17605_INTEGER);
constraint bool2int(aux17610_BOOL,aux17610_INTEGER);
constraint bool2int(aux17616_BOOL,aux17616_INTEGER);
constraint bool2int(aux17622_BOOL,aux17622_INTEGER);
constraint bool2int(aux17628_BOOL,aux17628_INTEGER);
constraint bool2int(aux17634_BOOL,aux17634_INTEGER);
constraint bool2int(aux17640_BOOL,aux17640_INTEGER);
constraint bool2int(aux17646_BOOL,aux17646_INTEGER);
constraint bool2int(aux17652_BOOL,aux17652_INTEGER);
constraint bool2int(aux17658_BOOL,aux17658_INTEGER);
constraint bool2int(aux17664_BOOL,aux17664_INTEGER);
constraint bool2int(aux17670_BOOL,aux17670_INTEGER);
constraint bool2int(aux17676_BOOL,aux17676_INTEGER);
constraint bool2int(aux17682_BOOL,aux17682_INTEGER);
constraint bool2int(aux17688_BOOL,aux17688_INTEGER);
constraint bool2int(aux17694_BOOL,aux17694_INTEGER);
constraint bool2int(aux17700_BOOL,aux17700_INTEGER);
constraint bool2int(aux17706_BOOL,aux17706_INTEGER);
constraint bool2int(aux17712_BOOL,aux17712_INTEGER);
constraint bool2int(aux17718_BOOL,aux17718_INTEGER);
constraint bool2int(aux17724_BOOL,aux17724_INTEGER);
constraint bool2int(aux17729_BOOL,aux17729_INTEGER);
constraint bool2int(aux17735_BOOL,aux17735_INTEGER);
constraint bool2int(aux17741_BOOL,aux17741_INTEGER);
constraint bool2int(aux17747_BOOL,aux17747_INTEGER);
constraint bool2int(aux17753_BOOL,aux17753_INTEGER);
constraint bool2int(aux17759_BOOL,aux17759_INTEGER);
constraint bool2int(aux17765_BOOL,aux17765_INTEGER);
constraint bool2int(aux17771_BOOL,aux17771_INTEGER);
constraint bool2int(aux17777_BOOL,aux17777_INTEGER);
constraint bool2int(aux17783_BOOL,aux17783_INTEGER);
constraint bool2int(aux17789_BOOL,aux17789_INTEGER);
constraint bool2int(aux17795_BOOL,aux17795_INTEGER);
constraint bool2int(aux17801_BOOL,aux17801_INTEGER);
constraint bool2int(aux17807_BOOL,aux17807_INTEGER);
constraint bool2int(aux17813_BOOL,aux17813_INTEGER);
constraint bool2int(aux17819_BOOL,aux17819_INTEGER);
constraint bool2int(aux17825_BOOL,aux17825_INTEGER);
constraint bool2int(aux17831_BOOL,aux17831_INTEGER);
constraint bool2int(aux17837_BOOL,aux17837_INTEGER);
constraint bool2int(aux17843_BOOL,aux17843_INTEGER);
constraint bool2int(aux17848_BOOL,aux17848_INTEGER);
constraint bool2int(aux17854_BOOL,aux17854_INTEGER);
constraint bool2int(aux17860_BOOL,aux17860_INTEGER);
constraint bool2int(aux17866_BOOL,aux17866_INTEGER);
constraint bool2int(aux17872_BOOL,aux17872_INTEGER);
constraint bool2int(aux17878_BOOL,aux17878_INTEGER);
constraint bool2int(aux17884_BOOL,aux17884_INTEGER);
constraint bool2int(aux17890_BOOL,aux17890_INTEGER);
constraint bool2int(aux17896_BOOL,aux17896_INTEGER);
constraint bool2int(aux17902_BOOL,aux17902_INTEGER);
constraint bool2int(aux17908_BOOL,aux17908_INTEGER);
constraint bool2int(aux17914_BOOL,aux17914_INTEGER);
constraint bool2int(aux17920_BOOL,aux17920_INTEGER);
constraint bool2int(aux17926_BOOL,aux17926_INTEGER);
constraint bool2int(aux17932_BOOL,aux17932_INTEGER);
constraint bool2int(aux17938_BOOL,aux17938_INTEGER);
constraint bool2int(aux17944_BOOL,aux17944_INTEGER);
constraint bool2int(aux17950_BOOL,aux17950_INTEGER);
constraint bool2int(aux17956_BOOL,aux17956_INTEGER);
constraint bool2int(aux17962_BOOL,aux17962_INTEGER);
constraint bool2int(aux17967_BOOL,aux17967_INTEGER);
constraint bool2int(aux17973_BOOL,aux17973_INTEGER);
constraint bool2int(aux17979_BOOL,aux17979_INTEGER);
constraint bool2int(aux17985_BOOL,aux17985_INTEGER);
constraint bool2int(aux17991_BOOL,aux17991_INTEGER);
constraint bool2int(aux17997_BOOL,aux17997_INTEGER);
constraint bool2int(aux18003_BOOL,aux18003_INTEGER);
constraint bool2int(aux18009_BOOL,aux18009_INTEGER);
constraint bool2int(aux18015_BOOL,aux18015_INTEGER);
constraint bool2int(aux18021_BOOL,aux18021_INTEGER);
constraint bool2int(aux18027_BOOL,aux18027_INTEGER);
constraint bool2int(aux18033_BOOL,aux18033_INTEGER);
constraint bool2int(aux18039_BOOL,aux18039_INTEGER);
constraint bool2int(aux18045_BOOL,aux18045_INTEGER);
constraint bool2int(aux18051_BOOL,aux18051_INTEGER);
constraint bool2int(aux18057_BOOL,aux18057_INTEGER);
constraint bool2int(aux18063_BOOL,aux18063_INTEGER);
constraint bool2int(aux18069_BOOL,aux18069_INTEGER);
constraint bool2int(aux18075_BOOL,aux18075_INTEGER);
constraint bool2int(aux18081_BOOL,aux18081_INTEGER);
constraint bool2int(aux18086_BOOL,aux18086_INTEGER);
constraint bool2int(aux18092_BOOL,aux18092_INTEGER);
constraint bool2int(aux18098_BOOL,aux18098_INTEGER);
constraint bool2int(aux18104_BOOL,aux18104_INTEGER);
constraint bool2int(aux18110_BOOL,aux18110_INTEGER);
constraint bool2int(aux18116_BOOL,aux18116_INTEGER);
constraint bool2int(aux18122_BOOL,aux18122_INTEGER);
constraint bool2int(aux18128_BOOL,aux18128_INTEGER);
constraint bool2int(aux18134_BOOL,aux18134_INTEGER);
constraint bool2int(aux18140_BOOL,aux18140_INTEGER);
constraint bool2int(aux18146_BOOL,aux18146_INTEGER);
constraint bool2int(aux18152_BOOL,aux18152_INTEGER);
constraint bool2int(aux18158_BOOL,aux18158_INTEGER);
constraint bool2int(aux18164_BOOL,aux18164_INTEGER);
constraint bool2int(aux18170_BOOL,aux18170_INTEGER);
constraint bool2int(aux18176_BOOL,aux18176_INTEGER);
constraint bool2int(aux18182_BOOL,aux18182_INTEGER);
constraint bool2int(aux18188_BOOL,aux18188_INTEGER);
constraint bool2int(aux18194_BOOL,aux18194_INTEGER);
constraint bool2int(aux18200_BOOL,aux18200_INTEGER);
constraint bool2int(aux18205_BOOL,aux18205_INTEGER);
constraint bool2int(aux18211_BOOL,aux18211_INTEGER);
constraint bool2int(aux18217_BOOL,aux18217_INTEGER);
constraint bool2int(aux18223_BOOL,aux18223_INTEGER);
constraint bool2int(aux18229_BOOL,aux18229_INTEGER);
constraint bool2int(aux18235_BOOL,aux18235_INTEGER);
constraint bool2int(aux18241_BOOL,aux18241_INTEGER);
constraint bool2int(aux18247_BOOL,aux18247_INTEGER);
constraint bool2int(aux18253_BOOL,aux18253_INTEGER);
constraint bool2int(aux18259_BOOL,aux18259_INTEGER);
constraint bool2int(aux18265_BOOL,aux18265_INTEGER);
constraint bool2int(aux18271_BOOL,aux18271_INTEGER);
constraint bool2int(aux18277_BOOL,aux18277_INTEGER);
constraint bool2int(aux18283_BOOL,aux18283_INTEGER);
constraint bool2int(aux18289_BOOL,aux18289_INTEGER);
constraint bool2int(aux18295_BOOL,aux18295_INTEGER);
constraint bool2int(aux18301_BOOL,aux18301_INTEGER);
constraint bool2int(aux18307_BOOL,aux18307_INTEGER);
constraint bool2int(aux18313_BOOL,aux18313_INTEGER);
constraint bool2int(aux18319_BOOL,aux18319_INTEGER);
constraint bool2int(aux18324_BOOL,aux18324_INTEGER);
constraint bool2int(aux18330_BOOL,aux18330_INTEGER);
constraint bool2int(aux18336_BOOL,aux18336_INTEGER);
constraint bool2int(aux18342_BOOL,aux18342_INTEGER);
constraint bool2int(aux18348_BOOL,aux18348_INTEGER);
constraint bool2int(aux18354_BOOL,aux18354_INTEGER);
constraint bool2int(aux18360_BOOL,aux18360_INTEGER);
constraint bool2int(aux18366_BOOL,aux18366_INTEGER);
constraint bool2int(aux18372_BOOL,aux18372_INTEGER);
constraint bool2int(aux18378_BOOL,aux18378_INTEGER);
constraint bool2int(aux18384_BOOL,aux18384_INTEGER);
constraint bool2int(aux18390_BOOL,aux18390_INTEGER);
constraint bool2int(aux18396_BOOL,aux18396_INTEGER);
constraint bool2int(aux18402_BOOL,aux18402_INTEGER);
constraint bool2int(aux18408_BOOL,aux18408_INTEGER);
constraint bool2int(aux18414_BOOL,aux18414_INTEGER);
constraint bool2int(aux18420_BOOL,aux18420_INTEGER);
constraint bool2int(aux18426_BOOL,aux18426_INTEGER);
constraint bool2int(aux18432_BOOL,aux18432_INTEGER);
constraint bool2int(aux18438_BOOL,aux18438_INTEGER);
constraint bool2int(aux18443_BOOL,aux18443_INTEGER);
constraint bool2int(aux18449_BOOL,aux18449_INTEGER);
constraint bool2int(aux18455_BOOL,aux18455_INTEGER);
constraint bool2int(aux18461_BOOL,aux18461_INTEGER);
constraint bool2int(aux18467_BOOL,aux18467_INTEGER);
constraint bool2int(aux18473_BOOL,aux18473_INTEGER);
constraint bool2int(aux18479_BOOL,aux18479_INTEGER);
constraint bool2int(aux18485_BOOL,aux18485_INTEGER);
constraint bool2int(aux18491_BOOL,aux18491_INTEGER);
constraint bool2int(aux18497_BOOL,aux18497_INTEGER);
constraint bool2int(aux18503_BOOL,aux18503_INTEGER);
constraint bool2int(aux18509_BOOL,aux18509_INTEGER);
constraint bool2int(aux18515_BOOL,aux18515_INTEGER);
constraint bool2int(aux18521_BOOL,aux18521_INTEGER);
constraint bool2int(aux18527_BOOL,aux18527_INTEGER);
constraint bool2int(aux18533_BOOL,aux18533_INTEGER);
constraint bool2int(aux18539_BOOL,aux18539_INTEGER);
constraint bool2int(aux18545_BOOL,aux18545_INTEGER);
constraint bool2int(aux18551_BOOL,aux18551_INTEGER);
constraint bool2int(aux18557_BOOL,aux18557_INTEGER);
constraint bool2int(aux18562_BOOL,aux18562_INTEGER);
constraint bool2int(aux18568_BOOL,aux18568_INTEGER);
constraint bool2int(aux18574_BOOL,aux18574_INTEGER);
constraint bool2int(aux18580_BOOL,aux18580_INTEGER);
constraint bool2int(aux18586_BOOL,aux18586_INTEGER);
constraint bool2int(aux18592_BOOL,aux18592_INTEGER);
constraint bool2int(aux18598_BOOL,aux18598_INTEGER);
constraint bool2int(aux18604_BOOL,aux18604_INTEGER);
constraint bool2int(aux18610_BOOL,aux18610_INTEGER);
constraint bool2int(aux18616_BOOL,aux18616_INTEGER);
constraint bool2int(aux18622_BOOL,aux18622_INTEGER);
constraint bool2int(aux18628_BOOL,aux18628_INTEGER);
constraint bool2int(aux18634_BOOL,aux18634_INTEGER);
constraint bool2int(aux18640_BOOL,aux18640_INTEGER);
constraint bool2int(aux18646_BOOL,aux18646_INTEGER);
constraint bool2int(aux18652_BOOL,aux18652_INTEGER);
constraint bool2int(aux18658_BOOL,aux18658_INTEGER);
constraint bool2int(aux18664_BOOL,aux18664_INTEGER);
constraint bool2int(aux18670_BOOL,aux18670_INTEGER);
constraint bool2int(aux18676_BOOL,aux18676_INTEGER);
constraint bool2int(aux18681_BOOL,aux18681_INTEGER);
constraint bool2int(aux18687_BOOL,aux18687_INTEGER);
constraint bool2int(aux18693_BOOL,aux18693_INTEGER);
constraint bool2int(aux18699_BOOL,aux18699_INTEGER);
constraint bool2int(aux18705_BOOL,aux18705_INTEGER);
constraint bool2int(aux18711_BOOL,aux18711_INTEGER);
constraint bool2int(aux18717_BOOL,aux18717_INTEGER);
constraint bool2int(aux18723_BOOL,aux18723_INTEGER);
constraint bool2int(aux18729_BOOL,aux18729_INTEGER);
constraint bool2int(aux18735_BOOL,aux18735_INTEGER);
constraint bool2int(aux18741_BOOL,aux18741_INTEGER);
constraint bool2int(aux18747_BOOL,aux18747_INTEGER);
constraint bool2int(aux18753_BOOL,aux18753_INTEGER);
constraint bool2int(aux18759_BOOL,aux18759_INTEGER);
constraint bool2int(aux18765_BOOL,aux18765_INTEGER);
constraint bool2int(aux18771_BOOL,aux18771_INTEGER);
constraint bool2int(aux18777_BOOL,aux18777_INTEGER);
constraint bool2int(aux18783_BOOL,aux18783_INTEGER);
constraint bool2int(aux18789_BOOL,aux18789_INTEGER);
constraint bool2int(aux18795_BOOL,aux18795_INTEGER);
constraint bool2int(aux18800_BOOL,aux18800_INTEGER);
constraint bool2int(aux18806_BOOL,aux18806_INTEGER);
constraint bool2int(aux18812_BOOL,aux18812_INTEGER);
constraint bool2int(aux18818_BOOL,aux18818_INTEGER);
constraint bool2int(aux18824_BOOL,aux18824_INTEGER);
constraint bool2int(aux18830_BOOL,aux18830_INTEGER);
constraint bool2int(aux18836_BOOL,aux18836_INTEGER);
constraint bool2int(aux18842_BOOL,aux18842_INTEGER);
constraint bool2int(aux18848_BOOL,aux18848_INTEGER);
constraint bool2int(aux18854_BOOL,aux18854_INTEGER);
constraint bool2int(aux18860_BOOL,aux18860_INTEGER);
constraint bool2int(aux18866_BOOL,aux18866_INTEGER);
constraint bool2int(aux18872_BOOL,aux18872_INTEGER);
constraint bool2int(aux18878_BOOL,aux18878_INTEGER);
constraint bool2int(aux18884_BOOL,aux18884_INTEGER);
constraint bool2int(aux18890_BOOL,aux18890_INTEGER);
constraint bool2int(aux18896_BOOL,aux18896_INTEGER);
constraint bool2int(aux18902_BOOL,aux18902_INTEGER);
constraint bool2int(aux18908_BOOL,aux18908_INTEGER);
constraint bool2int(aux18914_BOOL,aux18914_INTEGER);
constraint bool2int(aux18919_BOOL,aux18919_INTEGER);
constraint bool2int(aux18925_BOOL,aux18925_INTEGER);
constraint bool2int(aux18931_BOOL,aux18931_INTEGER);
constraint bool2int(aux18937_BOOL,aux18937_INTEGER);
constraint bool2int(aux18943_BOOL,aux18943_INTEGER);
constraint bool2int(aux18949_BOOL,aux18949_INTEGER);
constraint bool2int(aux18955_BOOL,aux18955_INTEGER);
constraint bool2int(aux18961_BOOL,aux18961_INTEGER);
constraint bool2int(aux18967_BOOL,aux18967_INTEGER);
constraint bool2int(aux18973_BOOL,aux18973_INTEGER);
constraint bool2int(aux18979_BOOL,aux18979_INTEGER);
constraint bool2int(aux18985_BOOL,aux18985_INTEGER);
constraint bool2int(aux18991_BOOL,aux18991_INTEGER);
constraint bool2int(aux18997_BOOL,aux18997_INTEGER);
constraint bool2int(aux19003_BOOL,aux19003_INTEGER);
constraint bool2int(aux19009_BOOL,aux19009_INTEGER);
constraint bool2int(aux19015_BOOL,aux19015_INTEGER);
constraint bool2int(aux19021_BOOL,aux19021_INTEGER);
constraint bool2int(aux19027_BOOL,aux19027_INTEGER);
constraint bool2int(aux19033_BOOL,aux19033_INTEGER);
constraint bool2int(aux19038_BOOL,aux19038_INTEGER);
constraint bool2int(aux19044_BOOL,aux19044_INTEGER);
constraint bool2int(aux19050_BOOL,aux19050_INTEGER);
constraint bool2int(aux19056_BOOL,aux19056_INTEGER);
constraint bool2int(aux19062_BOOL,aux19062_INTEGER);
constraint bool2int(aux19068_BOOL,aux19068_INTEGER);
constraint bool2int(aux19074_BOOL,aux19074_INTEGER);
constraint bool2int(aux19080_BOOL,aux19080_INTEGER);
constraint bool2int(aux19086_BOOL,aux19086_INTEGER);
constraint bool2int(aux19092_BOOL,aux19092_INTEGER);
constraint bool2int(aux19098_BOOL,aux19098_INTEGER);
constraint bool2int(aux19104_BOOL,aux19104_INTEGER);
constraint bool2int(aux19110_BOOL,aux19110_INTEGER);
constraint bool2int(aux19116_BOOL,aux19116_INTEGER);
constraint bool2int(aux19122_BOOL,aux19122_INTEGER);
constraint bool2int(aux19128_BOOL,aux19128_INTEGER);
constraint bool2int(aux19134_BOOL,aux19134_INTEGER);
constraint bool2int(aux19140_BOOL,aux19140_INTEGER);
constraint bool2int(aux19146_BOOL,aux19146_INTEGER);
constraint bool2int(aux19152_BOOL,aux19152_INTEGER);
constraint bool2int(aux19157_BOOL,aux19157_INTEGER);
constraint bool2int(aux19163_BOOL,aux19163_INTEGER);
constraint bool2int(aux19169_BOOL,aux19169_INTEGER);
constraint bool2int(aux19175_BOOL,aux19175_INTEGER);
constraint bool2int(aux19181_BOOL,aux19181_INTEGER);
constraint bool2int(aux19187_BOOL,aux19187_INTEGER);
constraint bool2int(aux19193_BOOL,aux19193_INTEGER);
constraint bool2int(aux19199_BOOL,aux19199_INTEGER);
constraint bool2int(aux19205_BOOL,aux19205_INTEGER);
constraint bool2int(aux19211_BOOL,aux19211_INTEGER);
constraint bool2int(aux19217_BOOL,aux19217_INTEGER);
constraint bool2int(aux19223_BOOL,aux19223_INTEGER);
constraint bool2int(aux19229_BOOL,aux19229_INTEGER);
constraint bool2int(aux19235_BOOL,aux19235_INTEGER);
constraint bool2int(aux19241_BOOL,aux19241_INTEGER);
constraint bool2int(aux19247_BOOL,aux19247_INTEGER);
constraint bool2int(aux19253_BOOL,aux19253_INTEGER);
constraint bool2int(aux19259_BOOL,aux19259_INTEGER);
constraint bool2int(aux19265_BOOL,aux19265_INTEGER);
constraint bool2int(aux19271_BOOL,aux19271_INTEGER);
constraint bool2int(aux19276_BOOL,aux19276_INTEGER);
constraint bool2int(aux19282_BOOL,aux19282_INTEGER);
constraint bool2int(aux19288_BOOL,aux19288_INTEGER);
constraint bool2int(aux19294_BOOL,aux19294_INTEGER);
constraint bool2int(aux19300_BOOL,aux19300_INTEGER);
constraint bool2int(aux19306_BOOL,aux19306_INTEGER);
constraint bool2int(aux19312_BOOL,aux19312_INTEGER);
constraint bool2int(aux19318_BOOL,aux19318_INTEGER);
constraint bool2int(aux19324_BOOL,aux19324_INTEGER);
constraint bool2int(aux19330_BOOL,aux19330_INTEGER);
constraint bool2int(aux19336_BOOL,aux19336_INTEGER);
constraint bool2int(aux19342_BOOL,aux19342_INTEGER);
constraint bool2int(aux19348_BOOL,aux19348_INTEGER);
constraint bool2int(aux19354_BOOL,aux19354_INTEGER);
constraint bool2int(aux19360_BOOL,aux19360_INTEGER);
constraint bool2int(aux19366_BOOL,aux19366_INTEGER);
constraint bool2int(aux19372_BOOL,aux19372_INTEGER);
constraint bool2int(aux19378_BOOL,aux19378_INTEGER);
constraint bool2int(aux19384_BOOL,aux19384_INTEGER);
constraint bool2int(aux19390_BOOL,aux19390_INTEGER);
constraint bool2int(aux19395_BOOL,aux19395_INTEGER);
constraint bool2int(aux19401_BOOL,aux19401_INTEGER);
constraint bool2int(aux19407_BOOL,aux19407_INTEGER);
constraint bool2int(aux19413_BOOL,aux19413_INTEGER);
constraint bool2int(aux19419_BOOL,aux19419_INTEGER);
constraint bool2int(aux19425_BOOL,aux19425_INTEGER);
constraint bool2int(aux19431_BOOL,aux19431_INTEGER);
constraint bool2int(aux19437_BOOL,aux19437_INTEGER);
constraint bool2int(aux19443_BOOL,aux19443_INTEGER);
constraint bool2int(aux19449_BOOL,aux19449_INTEGER);
constraint bool2int(aux19455_BOOL,aux19455_INTEGER);
constraint bool2int(aux19461_BOOL,aux19461_INTEGER);
constraint bool2int(aux19467_BOOL,aux19467_INTEGER);
constraint bool2int(aux19473_BOOL,aux19473_INTEGER);
constraint bool2int(aux19479_BOOL,aux19479_INTEGER);
constraint bool2int(aux19485_BOOL,aux19485_INTEGER);
constraint bool2int(aux19491_BOOL,aux19491_INTEGER);
constraint bool2int(aux19497_BOOL,aux19497_INTEGER);
constraint bool2int(aux19503_BOOL,aux19503_INTEGER);
constraint bool2int(aux19509_BOOL,aux19509_INTEGER);
constraint bool2int(aux19518_BOOL,aux19518_INTEGER);
constraint bool2int(aux19524_BOOL,aux19524_INTEGER);
constraint bool2int(aux19530_BOOL,aux19530_INTEGER);
constraint bool2int(aux19536_BOOL,aux19536_INTEGER);
constraint bool2int(aux19542_BOOL,aux19542_INTEGER);
constraint bool2int(aux19548_BOOL,aux19548_INTEGER);
constraint bool2int(aux19554_BOOL,aux19554_INTEGER);
constraint bool2int(aux19560_BOOL,aux19560_INTEGER);
constraint bool2int(aux19566_BOOL,aux19566_INTEGER);
constraint bool2int(aux19572_BOOL,aux19572_INTEGER);
constraint bool2int(aux19578_BOOL,aux19578_INTEGER);
constraint bool2int(aux19584_BOOL,aux19584_INTEGER);
constraint bool2int(aux19590_BOOL,aux19590_INTEGER);
constraint bool2int(aux19596_BOOL,aux19596_INTEGER);
constraint bool2int(aux19602_BOOL,aux19602_INTEGER);
constraint bool2int(aux19608_BOOL,aux19608_INTEGER);
constraint bool2int(aux19614_BOOL,aux19614_INTEGER);
constraint bool2int(aux19620_BOOL,aux19620_INTEGER);
constraint bool2int(aux19626_BOOL,aux19626_INTEGER);
constraint bool2int(aux19630_BOOL,aux19630_INTEGER);
constraint bool2int(aux19637_BOOL,aux19637_INTEGER);
constraint bool2int(aux19643_BOOL,aux19643_INTEGER);
constraint bool2int(aux19649_BOOL,aux19649_INTEGER);
constraint bool2int(aux19655_BOOL,aux19655_INTEGER);
constraint bool2int(aux19661_BOOL,aux19661_INTEGER);
constraint bool2int(aux19667_BOOL,aux19667_INTEGER);
constraint bool2int(aux19673_BOOL,aux19673_INTEGER);
constraint bool2int(aux19679_BOOL,aux19679_INTEGER);
constraint bool2int(aux19685_BOOL,aux19685_INTEGER);
constraint bool2int(aux19691_BOOL,aux19691_INTEGER);
constraint bool2int(aux19697_BOOL,aux19697_INTEGER);
constraint bool2int(aux19703_BOOL,aux19703_INTEGER);
constraint bool2int(aux19709_BOOL,aux19709_INTEGER);
constraint bool2int(aux19715_BOOL,aux19715_INTEGER);
constraint bool2int(aux19721_BOOL,aux19721_INTEGER);
constraint bool2int(aux19727_BOOL,aux19727_INTEGER);
constraint bool2int(aux19733_BOOL,aux19733_INTEGER);
constraint bool2int(aux19739_BOOL,aux19739_INTEGER);
constraint bool2int(aux19745_BOOL,aux19745_INTEGER);
constraint bool2int(aux19749_BOOL,aux19749_INTEGER);
constraint bool2int(aux19756_BOOL,aux19756_INTEGER);
constraint bool2int(aux19762_BOOL,aux19762_INTEGER);
constraint bool2int(aux19768_BOOL,aux19768_INTEGER);
constraint bool2int(aux19774_BOOL,aux19774_INTEGER);
constraint bool2int(aux19780_BOOL,aux19780_INTEGER);
constraint bool2int(aux19786_BOOL,aux19786_INTEGER);
constraint bool2int(aux19792_BOOL,aux19792_INTEGER);
constraint bool2int(aux19798_BOOL,aux19798_INTEGER);
constraint bool2int(aux19804_BOOL,aux19804_INTEGER);
constraint bool2int(aux19810_BOOL,aux19810_INTEGER);
constraint bool2int(aux19816_BOOL,aux19816_INTEGER);
constraint bool2int(aux19822_BOOL,aux19822_INTEGER);
constraint bool2int(aux19828_BOOL,aux19828_INTEGER);
constraint bool2int(aux19834_BOOL,aux19834_INTEGER);
constraint bool2int(aux19840_BOOL,aux19840_INTEGER);
constraint bool2int(aux19846_BOOL,aux19846_INTEGER);
constraint bool2int(aux19852_BOOL,aux19852_INTEGER);
constraint bool2int(aux19858_BOOL,aux19858_INTEGER);
constraint bool2int(aux19864_BOOL,aux19864_INTEGER);
constraint bool2int(aux19868_BOOL,aux19868_INTEGER);
constraint bool2int(aux19875_BOOL,aux19875_INTEGER);
constraint bool2int(aux19881_BOOL,aux19881_INTEGER);
constraint bool2int(aux19887_BOOL,aux19887_INTEGER);
constraint bool2int(aux19893_BOOL,aux19893_INTEGER);
constraint bool2int(aux19899_BOOL,aux19899_INTEGER);
constraint bool2int(aux19905_BOOL,aux19905_INTEGER);
constraint bool2int(aux19911_BOOL,aux19911_INTEGER);
constraint bool2int(aux19917_BOOL,aux19917_INTEGER);
constraint bool2int(aux19923_BOOL,aux19923_INTEGER);
constraint bool2int(aux19929_BOOL,aux19929_INTEGER);
constraint bool2int(aux19935_BOOL,aux19935_INTEGER);
constraint bool2int(aux19941_BOOL,aux19941_INTEGER);
constraint bool2int(aux19947_BOOL,aux19947_INTEGER);
constraint bool2int(aux19953_BOOL,aux19953_INTEGER);
constraint bool2int(aux19959_BOOL,aux19959_INTEGER);
constraint bool2int(aux19965_BOOL,aux19965_INTEGER);
constraint bool2int(aux19971_BOOL,aux19971_INTEGER);
constraint bool2int(aux19977_BOOL,aux19977_INTEGER);
constraint bool2int(aux19983_BOOL,aux19983_INTEGER);
constraint bool2int(aux19987_BOOL,aux19987_INTEGER);
constraint bool2int(aux19994_BOOL,aux19994_INTEGER);
constraint bool2int(aux20000_BOOL,aux20000_INTEGER);
constraint bool2int(aux20006_BOOL,aux20006_INTEGER);
constraint bool2int(aux20012_BOOL,aux20012_INTEGER);
constraint bool2int(aux20018_BOOL,aux20018_INTEGER);
constraint bool2int(aux20024_BOOL,aux20024_INTEGER);
constraint bool2int(aux20030_BOOL,aux20030_INTEGER);
constraint bool2int(aux20036_BOOL,aux20036_INTEGER);
constraint bool2int(aux20042_BOOL,aux20042_INTEGER);
constraint bool2int(aux20048_BOOL,aux20048_INTEGER);
constraint bool2int(aux20054_BOOL,aux20054_INTEGER);
constraint bool2int(aux20060_BOOL,aux20060_INTEGER);
constraint bool2int(aux20066_BOOL,aux20066_INTEGER);
constraint bool2int(aux20072_BOOL,aux20072_INTEGER);
constraint bool2int(aux20078_BOOL,aux20078_INTEGER);
constraint bool2int(aux20084_BOOL,aux20084_INTEGER);
constraint bool2int(aux20090_BOOL,aux20090_INTEGER);
constraint bool2int(aux20096_BOOL,aux20096_INTEGER);
constraint bool2int(aux20102_BOOL,aux20102_INTEGER);
constraint bool2int(aux20106_BOOL,aux20106_INTEGER);
constraint bool2int(aux20113_BOOL,aux20113_INTEGER);
constraint bool2int(aux20119_BOOL,aux20119_INTEGER);
constraint bool2int(aux20125_BOOL,aux20125_INTEGER);
constraint bool2int(aux20131_BOOL,aux20131_INTEGER);
constraint bool2int(aux20137_BOOL,aux20137_INTEGER);
constraint bool2int(aux20143_BOOL,aux20143_INTEGER);
constraint bool2int(aux20149_BOOL,aux20149_INTEGER);
constraint bool2int(aux20155_BOOL,aux20155_INTEGER);
constraint bool2int(aux20161_BOOL,aux20161_INTEGER);
constraint bool2int(aux20167_BOOL,aux20167_INTEGER);
constraint bool2int(aux20173_BOOL,aux20173_INTEGER);
constraint bool2int(aux20179_BOOL,aux20179_INTEGER);
constraint bool2int(aux20185_BOOL,aux20185_INTEGER);
constraint bool2int(aux20191_BOOL,aux20191_INTEGER);
constraint bool2int(aux20197_BOOL,aux20197_INTEGER);
constraint bool2int(aux20203_BOOL,aux20203_INTEGER);
constraint bool2int(aux20209_BOOL,aux20209_INTEGER);
constraint bool2int(aux20215_BOOL,aux20215_INTEGER);
constraint bool2int(aux20221_BOOL,aux20221_INTEGER);
constraint bool2int(aux20225_BOOL,aux20225_INTEGER);
constraint bool2int(aux20232_BOOL,aux20232_INTEGER);
constraint bool2int(aux20238_BOOL,aux20238_INTEGER);
constraint bool2int(aux20244_BOOL,aux20244_INTEGER);
constraint bool2int(aux20250_BOOL,aux20250_INTEGER);
constraint bool2int(aux20256_BOOL,aux20256_INTEGER);
constraint bool2int(aux20262_BOOL,aux20262_INTEGER);
constraint bool2int(aux20268_BOOL,aux20268_INTEGER);
constraint bool2int(aux20274_BOOL,aux20274_INTEGER);
constraint bool2int(aux20280_BOOL,aux20280_INTEGER);
constraint bool2int(aux20286_BOOL,aux20286_INTEGER);
constraint bool2int(aux20292_BOOL,aux20292_INTEGER);
constraint bool2int(aux20298_BOOL,aux20298_INTEGER);
constraint bool2int(aux20304_BOOL,aux20304_INTEGER);
constraint bool2int(aux20310_BOOL,aux20310_INTEGER);
constraint bool2int(aux20316_BOOL,aux20316_INTEGER);
constraint bool2int(aux20322_BOOL,aux20322_INTEGER);
constraint bool2int(aux20328_BOOL,aux20328_INTEGER);
constraint bool2int(aux20334_BOOL,aux20334_INTEGER);
constraint bool2int(aux20340_BOOL,aux20340_INTEGER);
constraint bool2int(aux20344_BOOL,aux20344_INTEGER);
constraint bool2int(aux20351_BOOL,aux20351_INTEGER);
constraint bool2int(aux20357_BOOL,aux20357_INTEGER);
constraint bool2int(aux20363_BOOL,aux20363_INTEGER);
constraint bool2int(aux20369_BOOL,aux20369_INTEGER);
constraint bool2int(aux20375_BOOL,aux20375_INTEGER);
constraint bool2int(aux20381_BOOL,aux20381_INTEGER);
constraint bool2int(aux20387_BOOL,aux20387_INTEGER);
constraint bool2int(aux20393_BOOL,aux20393_INTEGER);
constraint bool2int(aux20399_BOOL,aux20399_INTEGER);
constraint bool2int(aux20405_BOOL,aux20405_INTEGER);
constraint bool2int(aux20411_BOOL,aux20411_INTEGER);
constraint bool2int(aux20417_BOOL,aux20417_INTEGER);
constraint bool2int(aux20423_BOOL,aux20423_INTEGER);
constraint bool2int(aux20429_BOOL,aux20429_INTEGER);
constraint bool2int(aux20435_BOOL,aux20435_INTEGER);
constraint bool2int(aux20441_BOOL,aux20441_INTEGER);
constraint bool2int(aux20447_BOOL,aux20447_INTEGER);
constraint bool2int(aux20453_BOOL,aux20453_INTEGER);
constraint bool2int(aux20459_BOOL,aux20459_INTEGER);
constraint bool2int(aux20463_BOOL,aux20463_INTEGER);
constraint bool2int(aux20470_BOOL,aux20470_INTEGER);
constraint bool2int(aux20476_BOOL,aux20476_INTEGER);
constraint bool2int(aux20482_BOOL,aux20482_INTEGER);
constraint bool2int(aux20488_BOOL,aux20488_INTEGER);
constraint bool2int(aux20494_BOOL,aux20494_INTEGER);
constraint bool2int(aux20500_BOOL,aux20500_INTEGER);
constraint bool2int(aux20506_BOOL,aux20506_INTEGER);
constraint bool2int(aux20512_BOOL,aux20512_INTEGER);
constraint bool2int(aux20518_BOOL,aux20518_INTEGER);
constraint bool2int(aux20524_BOOL,aux20524_INTEGER);
constraint bool2int(aux20530_BOOL,aux20530_INTEGER);
constraint bool2int(aux20536_BOOL,aux20536_INTEGER);
constraint bool2int(aux20542_BOOL,aux20542_INTEGER);
constraint bool2int(aux20548_BOOL,aux20548_INTEGER);
constraint bool2int(aux20554_BOOL,aux20554_INTEGER);
constraint bool2int(aux20560_BOOL,aux20560_INTEGER);
constraint bool2int(aux20566_BOOL,aux20566_INTEGER);
constraint bool2int(aux20572_BOOL,aux20572_INTEGER);
constraint bool2int(aux20578_BOOL,aux20578_INTEGER);
constraint bool2int(aux20582_BOOL,aux20582_INTEGER);
constraint bool2int(aux20589_BOOL,aux20589_INTEGER);
constraint bool2int(aux20595_BOOL,aux20595_INTEGER);
constraint bool2int(aux20601_BOOL,aux20601_INTEGER);
constraint bool2int(aux20607_BOOL,aux20607_INTEGER);
constraint bool2int(aux20613_BOOL,aux20613_INTEGER);
constraint bool2int(aux20619_BOOL,aux20619_INTEGER);
constraint bool2int(aux20625_BOOL,aux20625_INTEGER);
constraint bool2int(aux20631_BOOL,aux20631_INTEGER);
constraint bool2int(aux20637_BOOL,aux20637_INTEGER);
constraint bool2int(aux20643_BOOL,aux20643_INTEGER);
constraint bool2int(aux20649_BOOL,aux20649_INTEGER);
constraint bool2int(aux20655_BOOL,aux20655_INTEGER);
constraint bool2int(aux20661_BOOL,aux20661_INTEGER);
constraint bool2int(aux20667_BOOL,aux20667_INTEGER);
constraint bool2int(aux20673_BOOL,aux20673_INTEGER);
constraint bool2int(aux20679_BOOL,aux20679_INTEGER);
constraint bool2int(aux20685_BOOL,aux20685_INTEGER);
constraint bool2int(aux20691_BOOL,aux20691_INTEGER);
constraint bool2int(aux20697_BOOL,aux20697_INTEGER);
constraint bool2int(aux20701_BOOL,aux20701_INTEGER);
constraint bool2int(aux20708_BOOL,aux20708_INTEGER);
constraint bool2int(aux20714_BOOL,aux20714_INTEGER);
constraint bool2int(aux20720_BOOL,aux20720_INTEGER);
constraint bool2int(aux20726_BOOL,aux20726_INTEGER);
constraint bool2int(aux20732_BOOL,aux20732_INTEGER);
constraint bool2int(aux20738_BOOL,aux20738_INTEGER);
constraint bool2int(aux20744_BOOL,aux20744_INTEGER);
constraint bool2int(aux20750_BOOL,aux20750_INTEGER);
constraint bool2int(aux20756_BOOL,aux20756_INTEGER);
constraint bool2int(aux20762_BOOL,aux20762_INTEGER);
constraint bool2int(aux20768_BOOL,aux20768_INTEGER);
constraint bool2int(aux20774_BOOL,aux20774_INTEGER);
constraint bool2int(aux20780_BOOL,aux20780_INTEGER);
constraint bool2int(aux20786_BOOL,aux20786_INTEGER);
constraint bool2int(aux20792_BOOL,aux20792_INTEGER);
constraint bool2int(aux20798_BOOL,aux20798_INTEGER);
constraint bool2int(aux20804_BOOL,aux20804_INTEGER);
constraint bool2int(aux20810_BOOL,aux20810_INTEGER);
constraint bool2int(aux20816_BOOL,aux20816_INTEGER);
constraint bool2int(aux20820_BOOL,aux20820_INTEGER);
constraint bool2int(aux20827_BOOL,aux20827_INTEGER);
constraint bool2int(aux20833_BOOL,aux20833_INTEGER);
constraint bool2int(aux20839_BOOL,aux20839_INTEGER);
constraint bool2int(aux20845_BOOL,aux20845_INTEGER);
constraint bool2int(aux20851_BOOL,aux20851_INTEGER);
constraint bool2int(aux20857_BOOL,aux20857_INTEGER);
constraint bool2int(aux20863_BOOL,aux20863_INTEGER);
constraint bool2int(aux20869_BOOL,aux20869_INTEGER);
constraint bool2int(aux20875_BOOL,aux20875_INTEGER);
constraint bool2int(aux20881_BOOL,aux20881_INTEGER);
constraint bool2int(aux20887_BOOL,aux20887_INTEGER);
constraint bool2int(aux20893_BOOL,aux20893_INTEGER);
constraint bool2int(aux20899_BOOL,aux20899_INTEGER);
constraint bool2int(aux20905_BOOL,aux20905_INTEGER);
constraint bool2int(aux20911_BOOL,aux20911_INTEGER);
constraint bool2int(aux20917_BOOL,aux20917_INTEGER);
constraint bool2int(aux20923_BOOL,aux20923_INTEGER);
constraint bool2int(aux20929_BOOL,aux20929_INTEGER);
constraint bool2int(aux20935_BOOL,aux20935_INTEGER);
constraint bool2int(aux20939_BOOL,aux20939_INTEGER);
constraint bool2int(aux20946_BOOL,aux20946_INTEGER);
constraint bool2int(aux20952_BOOL,aux20952_INTEGER);
constraint bool2int(aux20958_BOOL,aux20958_INTEGER);
constraint bool2int(aux20964_BOOL,aux20964_INTEGER);
constraint bool2int(aux20970_BOOL,aux20970_INTEGER);
constraint bool2int(aux20976_BOOL,aux20976_INTEGER);
constraint bool2int(aux20982_BOOL,aux20982_INTEGER);
constraint bool2int(aux20988_BOOL,aux20988_INTEGER);
constraint bool2int(aux20994_BOOL,aux20994_INTEGER);
constraint bool2int(aux21000_BOOL,aux21000_INTEGER);
constraint bool2int(aux21006_BOOL,aux21006_INTEGER);
constraint bool2int(aux21012_BOOL,aux21012_INTEGER);
constraint bool2int(aux21018_BOOL,aux21018_INTEGER);
constraint bool2int(aux21024_BOOL,aux21024_INTEGER);
constraint bool2int(aux21030_BOOL,aux21030_INTEGER);
constraint bool2int(aux21036_BOOL,aux21036_INTEGER);
constraint bool2int(aux21042_BOOL,aux21042_INTEGER);
constraint bool2int(aux21048_BOOL,aux21048_INTEGER);
constraint bool2int(aux21054_BOOL,aux21054_INTEGER);
constraint bool2int(aux21058_BOOL,aux21058_INTEGER);
constraint bool2int(aux21065_BOOL,aux21065_INTEGER);
constraint bool2int(aux21071_BOOL,aux21071_INTEGER);
constraint bool2int(aux21077_BOOL,aux21077_INTEGER);
constraint bool2int(aux21083_BOOL,aux21083_INTEGER);
constraint bool2int(aux21089_BOOL,aux21089_INTEGER);
constraint bool2int(aux21095_BOOL,aux21095_INTEGER);
constraint bool2int(aux21101_BOOL,aux21101_INTEGER);
constraint bool2int(aux21107_BOOL,aux21107_INTEGER);
constraint bool2int(aux21113_BOOL,aux21113_INTEGER);
constraint bool2int(aux21119_BOOL,aux21119_INTEGER);
constraint bool2int(aux21125_BOOL,aux21125_INTEGER);
constraint bool2int(aux21131_BOOL,aux21131_INTEGER);
constraint bool2int(aux21137_BOOL,aux21137_INTEGER);
constraint bool2int(aux21143_BOOL,aux21143_INTEGER);
constraint bool2int(aux21149_BOOL,aux21149_INTEGER);
constraint bool2int(aux21155_BOOL,aux21155_INTEGER);
constraint bool2int(aux21161_BOOL,aux21161_INTEGER);
constraint bool2int(aux21167_BOOL,aux21167_INTEGER);
constraint bool2int(aux21173_BOOL,aux21173_INTEGER);
constraint bool2int(aux21177_BOOL,aux21177_INTEGER);
constraint bool2int(aux21184_BOOL,aux21184_INTEGER);
constraint bool2int(aux21190_BOOL,aux21190_INTEGER);
constraint bool2int(aux21196_BOOL,aux21196_INTEGER);
constraint bool2int(aux21202_BOOL,aux21202_INTEGER);
constraint bool2int(aux21208_BOOL,aux21208_INTEGER);
constraint bool2int(aux21214_BOOL,aux21214_INTEGER);
constraint bool2int(aux21220_BOOL,aux21220_INTEGER);
constraint bool2int(aux21226_BOOL,aux21226_INTEGER);
constraint bool2int(aux21232_BOOL,aux21232_INTEGER);
constraint bool2int(aux21238_BOOL,aux21238_INTEGER);
constraint bool2int(aux21244_BOOL,aux21244_INTEGER);
constraint bool2int(aux21250_BOOL,aux21250_INTEGER);
constraint bool2int(aux21256_BOOL,aux21256_INTEGER);
constraint bool2int(aux21262_BOOL,aux21262_INTEGER);
constraint bool2int(aux21268_BOOL,aux21268_INTEGER);
constraint bool2int(aux21274_BOOL,aux21274_INTEGER);
constraint bool2int(aux21280_BOOL,aux21280_INTEGER);
constraint bool2int(aux21286_BOOL,aux21286_INTEGER);
constraint bool2int(aux21292_BOOL,aux21292_INTEGER);
constraint bool2int(aux21296_BOOL,aux21296_INTEGER);
constraint bool2int(aux21303_BOOL,aux21303_INTEGER);
constraint bool2int(aux21309_BOOL,aux21309_INTEGER);
constraint bool2int(aux21315_BOOL,aux21315_INTEGER);
constraint bool2int(aux21321_BOOL,aux21321_INTEGER);
constraint bool2int(aux21327_BOOL,aux21327_INTEGER);
constraint bool2int(aux21333_BOOL,aux21333_INTEGER);
constraint bool2int(aux21339_BOOL,aux21339_INTEGER);
constraint bool2int(aux21345_BOOL,aux21345_INTEGER);
constraint bool2int(aux21351_BOOL,aux21351_INTEGER);
constraint bool2int(aux21357_BOOL,aux21357_INTEGER);
constraint bool2int(aux21363_BOOL,aux21363_INTEGER);
constraint bool2int(aux21369_BOOL,aux21369_INTEGER);
constraint bool2int(aux21375_BOOL,aux21375_INTEGER);
constraint bool2int(aux21381_BOOL,aux21381_INTEGER);
constraint bool2int(aux21387_BOOL,aux21387_INTEGER);
constraint bool2int(aux21393_BOOL,aux21393_INTEGER);
constraint bool2int(aux21399_BOOL,aux21399_INTEGER);
constraint bool2int(aux21405_BOOL,aux21405_INTEGER);
constraint bool2int(aux21411_BOOL,aux21411_INTEGER);
constraint bool2int(aux21415_BOOL,aux21415_INTEGER);
constraint bool2int(aux21422_BOOL,aux21422_INTEGER);
constraint bool2int(aux21428_BOOL,aux21428_INTEGER);
constraint bool2int(aux21434_BOOL,aux21434_INTEGER);
constraint bool2int(aux21440_BOOL,aux21440_INTEGER);
constraint bool2int(aux21446_BOOL,aux21446_INTEGER);
constraint bool2int(aux21452_BOOL,aux21452_INTEGER);
constraint bool2int(aux21458_BOOL,aux21458_INTEGER);
constraint bool2int(aux21464_BOOL,aux21464_INTEGER);
constraint bool2int(aux21470_BOOL,aux21470_INTEGER);
constraint bool2int(aux21476_BOOL,aux21476_INTEGER);
constraint bool2int(aux21482_BOOL,aux21482_INTEGER);
constraint bool2int(aux21488_BOOL,aux21488_INTEGER);
constraint bool2int(aux21494_BOOL,aux21494_INTEGER);
constraint bool2int(aux21500_BOOL,aux21500_INTEGER);
constraint bool2int(aux21506_BOOL,aux21506_INTEGER);
constraint bool2int(aux21512_BOOL,aux21512_INTEGER);
constraint bool2int(aux21518_BOOL,aux21518_INTEGER);
constraint bool2int(aux21524_BOOL,aux21524_INTEGER);
constraint bool2int(aux21530_BOOL,aux21530_INTEGER);
constraint bool2int(aux21534_BOOL,aux21534_INTEGER);
constraint bool2int(aux21541_BOOL,aux21541_INTEGER);
constraint bool2int(aux21547_BOOL,aux21547_INTEGER);
constraint bool2int(aux21553_BOOL,aux21553_INTEGER);
constraint bool2int(aux21559_BOOL,aux21559_INTEGER);
constraint bool2int(aux21565_BOOL,aux21565_INTEGER);
constraint bool2int(aux21571_BOOL,aux21571_INTEGER);
constraint bool2int(aux21577_BOOL,aux21577_INTEGER);
constraint bool2int(aux21583_BOOL,aux21583_INTEGER);
constraint bool2int(aux21589_BOOL,aux21589_INTEGER);
constraint bool2int(aux21595_BOOL,aux21595_INTEGER);
constraint bool2int(aux21601_BOOL,aux21601_INTEGER);
constraint bool2int(aux21607_BOOL,aux21607_INTEGER);
constraint bool2int(aux21613_BOOL,aux21613_INTEGER);
constraint bool2int(aux21619_BOOL,aux21619_INTEGER);
constraint bool2int(aux21625_BOOL,aux21625_INTEGER);
constraint bool2int(aux21631_BOOL,aux21631_INTEGER);
constraint bool2int(aux21637_BOOL,aux21637_INTEGER);
constraint bool2int(aux21643_BOOL,aux21643_INTEGER);
constraint bool2int(aux21649_BOOL,aux21649_INTEGER);
constraint bool2int(aux21653_BOOL,aux21653_INTEGER);
constraint bool2int(aux21660_BOOL,aux21660_INTEGER);
constraint bool2int(aux21666_BOOL,aux21666_INTEGER);
constraint bool2int(aux21672_BOOL,aux21672_INTEGER);
constraint bool2int(aux21678_BOOL,aux21678_INTEGER);
constraint bool2int(aux21684_BOOL,aux21684_INTEGER);
constraint bool2int(aux21690_BOOL,aux21690_INTEGER);
constraint bool2int(aux21696_BOOL,aux21696_INTEGER);
constraint bool2int(aux21702_BOOL,aux21702_INTEGER);
constraint bool2int(aux21708_BOOL,aux21708_INTEGER);
constraint bool2int(aux21714_BOOL,aux21714_INTEGER);
constraint bool2int(aux21720_BOOL,aux21720_INTEGER);
constraint bool2int(aux21726_BOOL,aux21726_INTEGER);
constraint bool2int(aux21732_BOOL,aux21732_INTEGER);
constraint bool2int(aux21738_BOOL,aux21738_INTEGER);
constraint bool2int(aux21744_BOOL,aux21744_INTEGER);
constraint bool2int(aux21750_BOOL,aux21750_INTEGER);
constraint bool2int(aux21756_BOOL,aux21756_INTEGER);
constraint bool2int(aux21762_BOOL,aux21762_INTEGER);
constraint bool2int(aux21768_BOOL,aux21768_INTEGER);
constraint bool2int(aux21772_BOOL,aux21772_INTEGER);
constraint bool2int(aux21779_BOOL,aux21779_INTEGER);
constraint bool2int(aux21785_BOOL,aux21785_INTEGER);
constraint bool2int(aux21791_BOOL,aux21791_INTEGER);
constraint bool2int(aux21797_BOOL,aux21797_INTEGER);
constraint bool2int(aux21803_BOOL,aux21803_INTEGER);
constraint bool2int(aux21809_BOOL,aux21809_INTEGER);
constraint bool2int(aux21815_BOOL,aux21815_INTEGER);
constraint bool2int(aux21821_BOOL,aux21821_INTEGER);
constraint bool2int(aux21827_BOOL,aux21827_INTEGER);
constraint bool2int(aux21833_BOOL,aux21833_INTEGER);
constraint bool2int(aux21839_BOOL,aux21839_INTEGER);
constraint bool2int(aux21845_BOOL,aux21845_INTEGER);
constraint bool2int(aux21851_BOOL,aux21851_INTEGER);
constraint bool2int(aux21857_BOOL,aux21857_INTEGER);
constraint bool2int(aux21863_BOOL,aux21863_INTEGER);
constraint bool2int(aux21869_BOOL,aux21869_INTEGER);
constraint bool2int(aux21875_BOOL,aux21875_INTEGER);
constraint bool2int(aux21881_BOOL,aux21881_INTEGER);
constraint bool2int(aux21887_BOOL,aux21887_INTEGER);
constraint bool2int(aux21891_BOOL,aux21891_INTEGER);
constraint bool2int(aux21901_BOOL,aux21901_INTEGER);
constraint bool2int(aux21905_BOOL,aux21905_INTEGER);
constraint bool2int(aux21907_BOOL,aux21907_INTEGER);
constraint bool2int(aux21911_BOOL,aux21911_INTEGER);
constraint bool2int(aux21915_BOOL,aux21915_INTEGER);
constraint bool2int(aux21917_BOOL,aux21917_INTEGER);
constraint bool2int(aux21921_BOOL,aux21921_INTEGER);
constraint bool2int(aux21925_BOOL,aux21925_INTEGER);
constraint bool2int(aux21927_BOOL,aux21927_INTEGER);
constraint bool2int(aux21931_BOOL,aux21931_INTEGER);
constraint bool2int(aux21935_BOOL,aux21935_INTEGER);
constraint bool2int(aux21939_BOOL,aux21939_INTEGER);
constraint bool2int(aux21943_BOOL,aux21943_INTEGER);
constraint bool2int(aux21945_BOOL,aux21945_INTEGER);
constraint bool2int(aux21949_BOOL,aux21949_INTEGER);
constraint bool2int(aux21953_BOOL,aux21953_INTEGER);
constraint bool2int(aux21957_BOOL,aux21957_INTEGER);
constraint bool2int(aux21961_BOOL,aux21961_INTEGER);
constraint bool2int(aux21963_BOOL,aux21963_INTEGER);
constraint bool2int(aux21967_BOOL,aux21967_INTEGER);
constraint bool2int(aux21971_BOOL,aux21971_INTEGER);
constraint bool2int(aux21975_BOOL,aux21975_INTEGER);
constraint bool2int(aux21979_BOOL,aux21979_INTEGER);
constraint bool2int(aux21981_BOOL,aux21981_INTEGER);
constraint bool2int(aux21985_BOOL,aux21985_INTEGER);
constraint bool2int(aux21989_BOOL,aux21989_INTEGER);
constraint bool2int(aux21993_BOOL,aux21993_INTEGER);
constraint bool2int(aux21997_BOOL,aux21997_INTEGER);
constraint bool2int(aux21999_BOOL,aux21999_INTEGER);
constraint bool2int(aux22003_BOOL,aux22003_INTEGER);
constraint bool2int(aux22007_BOOL,aux22007_INTEGER);
constraint bool2int(aux22011_BOOL,aux22011_INTEGER);
constraint bool2int(aux22015_BOOL,aux22015_INTEGER);
constraint bool2int(aux22017_BOOL,aux22017_INTEGER);
constraint bool2int(aux22021_BOOL,aux22021_INTEGER);
constraint bool2int(aux22025_BOOL,aux22025_INTEGER);
constraint bool2int(aux22029_BOOL,aux22029_INTEGER);
constraint bool2int(aux22033_BOOL,aux22033_INTEGER);
constraint bool2int(aux22035_BOOL,aux22035_INTEGER);
constraint bool2int(aux22039_BOOL,aux22039_INTEGER);
constraint bool2int(aux22043_BOOL,aux22043_INTEGER);
constraint bool2int(aux22047_BOOL,aux22047_INTEGER);
constraint bool2int(aux22051_BOOL,aux22051_INTEGER);
constraint bool2int(aux22053_BOOL,aux22053_INTEGER);
constraint bool2int(aux22057_BOOL,aux22057_INTEGER);
constraint bool2int(aux22061_BOOL,aux22061_INTEGER);
constraint bool2int(aux22065_BOOL,aux22065_INTEGER);
constraint bool2int(aux22069_BOOL,aux22069_INTEGER);
constraint bool2int(aux22071_BOOL,aux22071_INTEGER);
constraint bool2int(aux22075_BOOL,aux22075_INTEGER);
constraint bool2int(aux22079_BOOL,aux22079_INTEGER);
constraint bool2int(aux22083_BOOL,aux22083_INTEGER);
constraint bool2int(aux22087_BOOL,aux22087_INTEGER);
constraint bool2int(aux22089_BOOL,aux22089_INTEGER);
constraint bool2int(aux22093_BOOL,aux22093_INTEGER);
constraint bool2int(aux22097_BOOL,aux22097_INTEGER);
constraint bool2int(aux22101_BOOL,aux22101_INTEGER);
constraint bool2int(aux22105_BOOL,aux22105_INTEGER);
constraint bool2int(aux22107_BOOL,aux22107_INTEGER);
constraint bool2int(aux22111_BOOL,aux22111_INTEGER);
constraint bool2int(aux22115_BOOL,aux22115_INTEGER);
constraint bool2int(aux22119_BOOL,aux22119_INTEGER);
constraint bool2int(aux22123_BOOL,aux22123_INTEGER);
constraint bool2int(aux22127_BOOL,aux22127_INTEGER);
constraint bool2int(aux22131_BOOL,aux22131_INTEGER);
constraint bool2int(aux22135_BOOL,aux22135_INTEGER);
constraint bool2int(aux22139_BOOL,aux22139_INTEGER);
constraint bool2int(aux22143_BOOL,aux22143_INTEGER);
constraint bool2int(aux22145_BOOL,aux22145_INTEGER);
constraint bool2int(aux22149_BOOL,aux22149_INTEGER);
constraint bool2int(aux22153_BOOL,aux22153_INTEGER);
constraint bool2int(aux22157_BOOL,aux22157_INTEGER);
constraint bool2int(aux22161_BOOL,aux22161_INTEGER);
constraint bool2int(aux22165_BOOL,aux22165_INTEGER);
constraint bool2int(aux22169_BOOL,aux22169_INTEGER);
constraint bool2int(aux22173_BOOL,aux22173_INTEGER);
constraint bool2int(aux22177_BOOL,aux22177_INTEGER);
constraint bool2int(aux22181_BOOL,aux22181_INTEGER);
constraint bool2int(aux22183_BOOL,aux22183_INTEGER);
constraint bool2int(aux22187_BOOL,aux22187_INTEGER);
constraint bool2int(aux22191_BOOL,aux22191_INTEGER);
constraint bool2int(aux22195_BOOL,aux22195_INTEGER);
constraint bool2int(aux22199_BOOL,aux22199_INTEGER);
constraint bool2int(aux22203_BOOL,aux22203_INTEGER);
constraint bool2int(aux22207_BOOL,aux22207_INTEGER);
constraint bool2int(aux22211_BOOL,aux22211_INTEGER);
constraint bool2int(aux22215_BOOL,aux22215_INTEGER);
constraint bool2int(aux22219_BOOL,aux22219_INTEGER);
constraint bool2int(aux22221_BOOL,aux22221_INTEGER);
constraint bool2int(aux22225_BOOL,aux22225_INTEGER);
constraint bool2int(aux22229_BOOL,aux22229_INTEGER);
constraint bool2int(aux22233_BOOL,aux22233_INTEGER);
constraint bool2int(aux22237_BOOL,aux22237_INTEGER);
constraint bool2int(aux22241_BOOL,aux22241_INTEGER);
constraint bool2int(aux22245_BOOL,aux22245_INTEGER);
constraint bool2int(aux22249_BOOL,aux22249_INTEGER);
constraint bool2int(aux22253_BOOL,aux22253_INTEGER);
constraint bool2int(aux22257_BOOL,aux22257_INTEGER);
constraint bool2int(aux22259_BOOL,aux22259_INTEGER);
constraint bool2int(aux22263_BOOL,aux22263_INTEGER);
constraint bool2int(aux22267_BOOL,aux22267_INTEGER);
constraint bool2int(aux22271_BOOL,aux22271_INTEGER);
constraint bool2int(aux22275_BOOL,aux22275_INTEGER);
constraint bool2int(aux22279_BOOL,aux22279_INTEGER);
constraint bool2int(aux22283_BOOL,aux22283_INTEGER);
constraint bool2int(aux22287_BOOL,aux22287_INTEGER);
constraint bool2int(aux22291_BOOL,aux22291_INTEGER);
constraint bool2int(aux22295_BOOL,aux22295_INTEGER);
constraint bool2int(aux22297_BOOL,aux22297_INTEGER);
constraint bool2int(aux22301_BOOL,aux22301_INTEGER);
constraint bool2int(aux22305_BOOL,aux22305_INTEGER);
constraint bool2int(aux22309_BOOL,aux22309_INTEGER);
constraint bool2int(aux22313_BOOL,aux22313_INTEGER);
constraint bool2int(aux22317_BOOL,aux22317_INTEGER);
constraint bool2int(aux22321_BOOL,aux22321_INTEGER);
constraint bool2int(aux22325_BOOL,aux22325_INTEGER);
constraint bool2int(aux22329_BOOL,aux22329_INTEGER);
constraint bool2int(aux22333_BOOL,aux22333_INTEGER);
constraint bool2int(aux22335_BOOL,aux22335_INTEGER);
constraint bool2int(aux22339_BOOL,aux22339_INTEGER);
constraint bool2int(aux22343_BOOL,aux22343_INTEGER);
constraint bool2int(aux22347_BOOL,aux22347_INTEGER);
constraint bool2int(aux22351_BOOL,aux22351_INTEGER);
constraint bool2int(aux22355_BOOL,aux22355_INTEGER);
constraint bool2int(aux22359_BOOL,aux22359_INTEGER);
constraint bool2int(aux22363_BOOL,aux22363_INTEGER);
constraint bool2int(aux22367_BOOL,aux22367_INTEGER);
constraint bool2int(aux22371_BOOL,aux22371_INTEGER);
constraint bool2int(aux22373_BOOL,aux22373_INTEGER);
constraint bool2int(aux22377_BOOL,aux22377_INTEGER);
constraint bool2int(aux22381_BOOL,aux22381_INTEGER);
constraint bool2int(aux22385_BOOL,aux22385_INTEGER);
constraint bool2int(aux22389_BOOL,aux22389_INTEGER);
constraint bool2int(aux22393_BOOL,aux22393_INTEGER);
constraint bool2int(aux22397_BOOL,aux22397_INTEGER);
constraint bool2int(aux22401_BOOL,aux22401_INTEGER);
constraint bool2int(aux22405_BOOL,aux22405_INTEGER);
constraint bool2int(aux22409_BOOL,aux22409_INTEGER);
constraint bool2int(aux22411_BOOL,aux22411_INTEGER);
constraint bool2int(aux22415_BOOL,aux22415_INTEGER);
constraint bool2int(aux22419_BOOL,aux22419_INTEGER);
constraint bool2int(aux22423_BOOL,aux22423_INTEGER);
constraint bool2int(aux22427_BOOL,aux22427_INTEGER);
constraint bool2int(aux22431_BOOL,aux22431_INTEGER);
constraint bool2int(aux22435_BOOL,aux22435_INTEGER);
constraint bool2int(aux22439_BOOL,aux22439_INTEGER);
constraint bool2int(aux22443_BOOL,aux22443_INTEGER);
constraint bool2int(aux22447_BOOL,aux22447_INTEGER);
constraint bool2int(aux22449_BOOL,aux22449_INTEGER);
constraint bool2int(aux22453_BOOL,aux22453_INTEGER);
constraint bool2int(aux22457_BOOL,aux22457_INTEGER);
constraint bool2int(aux22461_BOOL,aux22461_INTEGER);
constraint bool2int(aux22465_BOOL,aux22465_INTEGER);
constraint bool2int(aux22469_BOOL,aux22469_INTEGER);
constraint bool2int(aux22473_BOOL,aux22473_INTEGER);
constraint bool2int(aux22477_BOOL,aux22477_INTEGER);
constraint bool2int(aux22481_BOOL,aux22481_INTEGER);
constraint bool2int(aux22485_BOOL,aux22485_INTEGER);
constraint bool2int(aux22487_BOOL,aux22487_INTEGER);
constraint bool2int(aux22491_BOOL,aux22491_INTEGER);
constraint bool2int(aux22495_BOOL,aux22495_INTEGER);
constraint bool2int(aux22499_BOOL,aux22499_INTEGER);
constraint bool2int(aux22503_BOOL,aux22503_INTEGER);
constraint bool2int(aux22507_BOOL,aux22507_INTEGER);
constraint bool2int(aux22511_BOOL,aux22511_INTEGER);
constraint bool2int(aux22515_BOOL,aux22515_INTEGER);
constraint bool2int(aux22519_BOOL,aux22519_INTEGER);
constraint bool2int(aux22523_BOOL,aux22523_INTEGER);
constraint bool2int(aux22527_BOOL,aux22527_INTEGER);
constraint bool2int(aux22531_BOOL,aux22531_INTEGER);
constraint bool2int(aux22533_BOOL,aux22533_INTEGER);
constraint bool2int(aux22537_BOOL,aux22537_INTEGER);
constraint bool2int(aux22541_BOOL,aux22541_INTEGER);
constraint bool2int(aux22545_BOOL,aux22545_INTEGER);
constraint bool2int(aux22549_BOOL,aux22549_INTEGER);
constraint bool2int(aux22553_BOOL,aux22553_INTEGER);
constraint bool2int(aux22557_BOOL,aux22557_INTEGER);
constraint bool2int(aux22561_BOOL,aux22561_INTEGER);
constraint bool2int(aux22565_BOOL,aux22565_INTEGER);
constraint bool2int(aux22569_BOOL,aux22569_INTEGER);
constraint bool2int(aux22573_BOOL,aux22573_INTEGER);
constraint bool2int(aux22577_BOOL,aux22577_INTEGER);
constraint bool2int(aux22579_BOOL,aux22579_INTEGER);
constraint bool2int(aux22583_BOOL,aux22583_INTEGER);
constraint bool2int(aux22587_BOOL,aux22587_INTEGER);
constraint bool2int(aux22591_BOOL,aux22591_INTEGER);
constraint bool2int(aux22595_BOOL,aux22595_INTEGER);
constraint bool2int(aux22599_BOOL,aux22599_INTEGER);
constraint bool2int(aux22603_BOOL,aux22603_INTEGER);
constraint bool2int(aux22607_BOOL,aux22607_INTEGER);
constraint bool2int(aux22611_BOOL,aux22611_INTEGER);
constraint bool2int(aux22615_BOOL,aux22615_INTEGER);
constraint bool2int(aux22619_BOOL,aux22619_INTEGER);
constraint bool2int(aux22623_BOOL,aux22623_INTEGER);
constraint bool2int(aux22625_BOOL,aux22625_INTEGER);
constraint bool2int(aux22629_BOOL,aux22629_INTEGER);
constraint bool2int(aux22633_BOOL,aux22633_INTEGER);
constraint bool2int(aux22637_BOOL,aux22637_INTEGER);
constraint bool2int(aux22641_BOOL,aux22641_INTEGER);
constraint bool2int(aux22645_BOOL,aux22645_INTEGER);
constraint bool2int(aux22649_BOOL,aux22649_INTEGER);
constraint bool2int(aux22653_BOOL,aux22653_INTEGER);
constraint bool2int(aux22657_BOOL,aux22657_INTEGER);
constraint bool2int(aux22661_BOOL,aux22661_INTEGER);
constraint bool2int(aux22665_BOOL,aux22665_INTEGER);
constraint bool2int(aux22669_BOOL,aux22669_INTEGER);
constraint bool2int(aux22671_BOOL,aux22671_INTEGER);
constraint bool2int(aux22675_BOOL,aux22675_INTEGER);
constraint bool2int(aux22679_BOOL,aux22679_INTEGER);
constraint bool2int(aux22683_BOOL,aux22683_INTEGER);
constraint bool2int(aux22687_BOOL,aux22687_INTEGER);
constraint bool2int(aux22691_BOOL,aux22691_INTEGER);
constraint bool2int(aux22695_BOOL,aux22695_INTEGER);
constraint bool2int(aux22699_BOOL,aux22699_INTEGER);
constraint bool2int(aux22703_BOOL,aux22703_INTEGER);
constraint bool2int(aux22707_BOOL,aux22707_INTEGER);
constraint bool2int(aux22711_BOOL,aux22711_INTEGER);
constraint bool2int(aux22715_BOOL,aux22715_INTEGER);
constraint bool2int(aux22717_BOOL,aux22717_INTEGER);
constraint bool2int(aux22721_BOOL,aux22721_INTEGER);
constraint bool2int(aux22725_BOOL,aux22725_INTEGER);
constraint bool2int(aux22729_BOOL,aux22729_INTEGER);
constraint bool2int(aux22733_BOOL,aux22733_INTEGER);
constraint bool2int(aux22737_BOOL,aux22737_INTEGER);
constraint bool2int(aux22741_BOOL,aux22741_INTEGER);
constraint bool2int(aux22745_BOOL,aux22745_INTEGER);
constraint bool2int(aux22749_BOOL,aux22749_INTEGER);
constraint bool2int(aux22753_BOOL,aux22753_INTEGER);
constraint bool2int(aux22757_BOOL,aux22757_INTEGER);
constraint bool2int(aux22761_BOOL,aux22761_INTEGER);
constraint bool2int(aux22763_BOOL,aux22763_INTEGER);
constraint bool2int(aux22767_BOOL,aux22767_INTEGER);
constraint bool2int(aux22771_BOOL,aux22771_INTEGER);
constraint bool2int(aux22775_BOOL,aux22775_INTEGER);
constraint bool2int(aux22779_BOOL,aux22779_INTEGER);
constraint bool2int(aux22783_BOOL,aux22783_INTEGER);
constraint bool2int(aux22787_BOOL,aux22787_INTEGER);
constraint bool2int(aux22791_BOOL,aux22791_INTEGER);
constraint bool2int(aux22795_BOOL,aux22795_INTEGER);
constraint bool2int(aux22799_BOOL,aux22799_INTEGER);
constraint bool2int(aux22803_BOOL,aux22803_INTEGER);
constraint bool2int(aux22807_BOOL,aux22807_INTEGER);
constraint bool2int(aux22809_BOOL,aux22809_INTEGER);
constraint bool2int(aux22813_BOOL,aux22813_INTEGER);
constraint bool2int(aux22817_BOOL,aux22817_INTEGER);
constraint bool2int(aux22821_BOOL,aux22821_INTEGER);
constraint bool2int(aux22825_BOOL,aux22825_INTEGER);
constraint bool2int(aux22829_BOOL,aux22829_INTEGER);
constraint bool2int(aux22833_BOOL,aux22833_INTEGER);
constraint bool2int(aux22837_BOOL,aux22837_INTEGER);
constraint bool2int(aux22841_BOOL,aux22841_INTEGER);
constraint bool2int(aux22845_BOOL,aux22845_INTEGER);
constraint bool2int(aux22849_BOOL,aux22849_INTEGER);
constraint bool2int(aux22853_BOOL,aux22853_INTEGER);
constraint bool2int(aux22855_BOOL,aux22855_INTEGER);
constraint bool2int(aux22859_BOOL,aux22859_INTEGER);
constraint bool2int(aux22863_BOOL,aux22863_INTEGER);
constraint bool2int(aux22867_BOOL,aux22867_INTEGER);
constraint bool2int(aux22871_BOOL,aux22871_INTEGER);
constraint bool2int(aux22875_BOOL,aux22875_INTEGER);
constraint bool2int(aux22879_BOOL,aux22879_INTEGER);
constraint bool2int(aux22883_BOOL,aux22883_INTEGER);
constraint bool2int(aux22887_BOOL,aux22887_INTEGER);
constraint bool2int(aux22891_BOOL,aux22891_INTEGER);
constraint bool2int(aux22895_BOOL,aux22895_INTEGER);
constraint bool2int(aux22899_BOOL,aux22899_INTEGER);
constraint bool2int(aux22901_BOOL,aux22901_INTEGER);
constraint bool2int(aux22905_BOOL,aux22905_INTEGER);
constraint bool2int(aux22909_BOOL,aux22909_INTEGER);
constraint bool2int(aux22913_BOOL,aux22913_INTEGER);
constraint bool2int(aux22917_BOOL,aux22917_INTEGER);
constraint bool2int(aux22921_BOOL,aux22921_INTEGER);
constraint bool2int(aux22925_BOOL,aux22925_INTEGER);
constraint bool2int(aux22929_BOOL,aux22929_INTEGER);
constraint bool2int(aux22933_BOOL,aux22933_INTEGER);
constraint bool2int(aux22937_BOOL,aux22937_INTEGER);
constraint bool2int(aux22941_BOOL,aux22941_INTEGER);
constraint bool2int(aux22945_BOOL,aux22945_INTEGER);
constraint bool2int(aux22947_BOOL,aux22947_INTEGER);
constraint bool2int(aux22951_BOOL,aux22951_INTEGER);
constraint bool2int(aux22955_BOOL,aux22955_INTEGER);
constraint bool2int(aux22959_BOOL,aux22959_INTEGER);
constraint bool2int(aux22963_BOOL,aux22963_INTEGER);
constraint bool2int(aux22967_BOOL,aux22967_INTEGER);
constraint bool2int(aux22971_BOOL,aux22971_INTEGER);
constraint bool2int(aux22975_BOOL,aux22975_INTEGER);
constraint bool2int(aux22979_BOOL,aux22979_INTEGER);
constraint bool2int(aux22983_BOOL,aux22983_INTEGER);
constraint bool2int(aux22987_BOOL,aux22987_INTEGER);
constraint bool2int(aux22991_BOOL,aux22991_INTEGER);
constraint bool2int(aux22993_BOOL,aux22993_INTEGER);
constraint bool2int(aux22997_BOOL,aux22997_INTEGER);
constraint bool2int(aux23001_BOOL,aux23001_INTEGER);
constraint bool2int(aux23005_BOOL,aux23005_INTEGER);
constraint bool2int(aux23009_BOOL,aux23009_INTEGER);
constraint bool2int(aux23013_BOOL,aux23013_INTEGER);
constraint bool2int(aux23017_BOOL,aux23017_INTEGER);
constraint bool2int(aux23021_BOOL,aux23021_INTEGER);
constraint bool2int(aux23025_BOOL,aux23025_INTEGER);
constraint bool2int(aux23029_BOOL,aux23029_INTEGER);
constraint bool2int(aux23033_BOOL,aux23033_INTEGER);
constraint bool2int(aux23037_BOOL,aux23037_INTEGER);
constraint bool2int(aux23039_BOOL,aux23039_INTEGER);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux10_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux10_BOOL],aux11_BOOL);
constraint int_eq_reif(TWorkers_00009_00003_INTEGER,1,aux12_BOOL);
constraint array_bool_and([aux12_BOOL,w_00009_00003_BOOL],aux13_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux14_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux14_BOOL],aux15_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux16_BOOL);
constraint array_bool_and([w_00007_00003_BOOL,aux16_BOOL],aux17_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux18_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux18_BOOL],aux19_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux20_BOOL);
constraint array_bool_and([aux20_BOOL,w_00004_00006_BOOL],aux21_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux22_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux22_BOOL],aux23_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux24_BOOL);
constraint array_bool_and([w_00008_00006_BOOL,aux24_BOOL],aux25_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux26_BOOL);
constraint array_bool_and([w_00007_00006_BOOL,aux26_BOOL],aux27_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux28_BOOL);
constraint array_bool_and([aux28_BOOL,w_00001_00007_BOOL],aux29_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux30_BOOL);
constraint array_bool_and([aux30_BOOL,w_00005_00007_BOOL],aux31_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux32_BOOL);
constraint array_bool_and([aux32_BOOL,w_00004_00007_BOOL],aux33_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux34_BOOL);
constraint array_bool_and([aux34_BOOL,w_00001_00010_BOOL],aux35_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux36_BOOL);
constraint array_bool_and([aux36_BOOL,w_00005_00010_BOOL],aux37_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux38_BOOL);
constraint array_bool_and([aux38_BOOL,w_00004_00010_BOOL],aux39_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux40_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux40_BOOL],aux41_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux42_BOOL);
constraint array_bool_and([aux42_BOOL,w_00004_00012_BOOL],aux43_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux44_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux44_BOOL],aux45_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux46_BOOL);
constraint array_bool_and([w_00008_00012_BOOL,aux46_BOOL],aux47_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux48_BOOL);
constraint array_bool_and([w_00007_00012_BOOL,aux48_BOOL],aux49_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux50_BOOL);
constraint array_bool_and([aux50_BOOL,w_00001_00015_BOOL],aux51_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux52_BOOL);
constraint array_bool_and([aux52_BOOL,w_00005_00015_BOOL],aux53_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux54_BOOL);
constraint array_bool_and([aux54_BOOL,w_00004_00015_BOOL],aux55_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux56_BOOL);
constraint array_bool_and([w_00006_00017_BOOL,aux56_BOOL],aux57_BOOL);
constraint int_eq_reif(TWorkers_00009_00017_INTEGER,1,aux58_BOOL);
constraint array_bool_and([aux58_BOOL,w_00009_00017_BOOL],aux59_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux60_BOOL);
constraint array_bool_and([aux60_BOOL,w_00004_00017_BOOL],aux61_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux62_BOOL);
constraint array_bool_and([w_00007_00017_BOOL,aux62_BOOL],aux63_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux64_BOOL);
constraint array_bool_and([w_00006_00018_BOOL,aux64_BOOL],aux65_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux66_BOOL);
constraint array_bool_and([aux66_BOOL,w_00004_00018_BOOL],aux67_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux68_BOOL);
constraint array_bool_and([w_00002_00018_BOOL,aux68_BOOL],aux69_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux70_BOOL);
constraint array_bool_and([w_00008_00018_BOOL,aux70_BOOL],aux71_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux72_BOOL);
constraint array_bool_and([w_00007_00018_BOOL,aux72_BOOL],aux73_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux74_BOOL);
constraint array_bool_and([w_00006_00019_BOOL,aux74_BOOL],aux75_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux76_BOOL);
constraint array_bool_and([aux76_BOOL,w_00004_00019_BOOL],aux77_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux78_BOOL);
constraint array_bool_and([w_00002_00019_BOOL,aux78_BOOL],aux79_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux80_BOOL);
constraint array_bool_and([w_00008_00019_BOOL,aux80_BOOL],aux81_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux82_BOOL);
constraint array_bool_and([w_00007_00019_BOOL,aux82_BOOL],aux83_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux84_BOOL);
constraint array_bool_and([aux84_BOOL,w_00001_00001_BOOL],aux85_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux86_BOOL);
constraint array_bool_and([aux86_BOOL,w_00001_00001_BOOL],aux87_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux88_BOOL);
constraint array_bool_and([aux88_BOOL,w_00005_00001_BOOL],aux89_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux90_BOOL);
constraint array_bool_and([aux90_BOOL,w_00004_00001_BOOL],aux91_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux92_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux92_BOOL],aux93_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux94_BOOL);
constraint array_bool_and([aux94_BOOL,w_00004_00001_BOOL],aux95_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux96_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux96_BOOL],aux97_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux98_BOOL);
constraint array_bool_and([w_00008_00001_BOOL,aux98_BOOL],aux99_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux100_BOOL);
constraint array_bool_and([w_00007_00001_BOOL,aux100_BOOL],aux101_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux102_BOOL);
constraint array_bool_and([aux102_BOOL,w_00001_00002_BOOL],aux103_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux104_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux104_BOOL],aux105_BOOL);
constraint int_eq_reif(TWorkers_00009_00002_INTEGER,1,aux106_BOOL);
constraint array_bool_and([aux106_BOOL,w_00009_00002_BOOL],aux107_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux108_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux108_BOOL],aux109_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux110_BOOL);
constraint array_bool_and([w_00007_00002_BOOL,aux110_BOOL],aux111_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux112_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux112_BOOL],aux113_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux114_BOOL);
constraint array_bool_and([aux114_BOOL,w_00004_00002_BOOL],aux115_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux116_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux116_BOOL],aux117_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux118_BOOL);
constraint array_bool_and([w_00008_00002_BOOL,aux118_BOOL],aux119_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux120_BOOL);
constraint array_bool_and([w_00007_00002_BOOL,aux120_BOOL],aux121_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux122_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux122_BOOL],aux123_BOOL);
constraint int_eq_reif(TWorkers_00009_00004_INTEGER,1,aux124_BOOL);
constraint array_bool_and([aux124_BOOL,w_00009_00004_BOOL],aux125_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux126_BOOL);
constraint array_bool_and([aux126_BOOL,w_00004_00004_BOOL],aux127_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux128_BOOL);
constraint array_bool_and([w_00007_00004_BOOL,aux128_BOOL],aux129_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux130_BOOL);
constraint array_bool_and([aux130_BOOL,w_00001_00004_BOOL],aux131_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux132_BOOL);
constraint array_bool_and([aux132_BOOL,w_00005_00004_BOOL],aux133_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux134_BOOL);
constraint array_bool_and([aux134_BOOL,w_00004_00004_BOOL],aux135_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux136_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux136_BOOL],aux137_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux138_BOOL);
constraint array_bool_and([aux138_BOOL,w_00004_00004_BOOL],aux139_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux140_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux140_BOOL],aux141_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux142_BOOL);
constraint array_bool_and([w_00008_00004_BOOL,aux142_BOOL],aux143_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux144_BOOL);
constraint array_bool_and([w_00007_00004_BOOL,aux144_BOOL],aux145_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux146_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux146_BOOL],aux147_BOOL);
constraint int_eq_reif(TWorkers_00009_00005_INTEGER,1,aux148_BOOL);
constraint array_bool_and([aux148_BOOL,w_00009_00005_BOOL],aux149_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux150_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux150_BOOL],aux151_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux152_BOOL);
constraint array_bool_and([w_00007_00005_BOOL,aux152_BOOL],aux153_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux154_BOOL);
constraint array_bool_and([aux154_BOOL,w_00001_00005_BOOL],aux155_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux156_BOOL);
constraint array_bool_and([aux156_BOOL,w_00005_00005_BOOL],aux157_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux158_BOOL);
constraint array_bool_and([aux158_BOOL,w_00004_00005_BOOL],aux159_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux160_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux160_BOOL],aux161_BOOL);
constraint int_eq_reif(TWorkers_00009_00008_INTEGER,1,aux162_BOOL);
constraint array_bool_and([aux162_BOOL,w_00009_00008_BOOL],aux163_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux164_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux164_BOOL],aux165_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux166_BOOL);
constraint array_bool_and([w_00007_00008_BOOL,aux166_BOOL],aux167_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux168_BOOL);
constraint array_bool_and([aux168_BOOL,w_00001_00008_BOOL],aux169_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux170_BOOL);
constraint array_bool_and([aux170_BOOL,w_00005_00008_BOOL],aux171_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux172_BOOL);
constraint array_bool_and([aux172_BOOL,w_00004_00008_BOOL],aux173_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux174_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux174_BOOL],aux175_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux176_BOOL);
constraint array_bool_and([aux176_BOOL,w_00004_00008_BOOL],aux177_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux178_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux178_BOOL],aux179_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux180_BOOL);
constraint array_bool_and([w_00008_00008_BOOL,aux180_BOOL],aux181_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux182_BOOL);
constraint array_bool_and([w_00007_00008_BOOL,aux182_BOOL],aux183_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux184_BOOL);
constraint array_bool_and([aux184_BOOL,w_00001_00009_BOOL],aux185_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux186_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux186_BOOL],aux187_BOOL);
constraint int_eq_reif(TWorkers_00009_00009_INTEGER,1,aux188_BOOL);
constraint array_bool_and([aux188_BOOL,w_00009_00009_BOOL],aux189_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux190_BOOL);
constraint array_bool_and([aux190_BOOL,w_00004_00009_BOOL],aux191_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux192_BOOL);
constraint array_bool_and([w_00007_00009_BOOL,aux192_BOOL],aux193_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux194_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux194_BOOL],aux195_BOOL);
constraint int_eq_reif(TWorkers_00009_00011_INTEGER,1,aux196_BOOL);
constraint array_bool_and([aux196_BOOL,w_00009_00011_BOOL],aux197_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux198_BOOL);
constraint array_bool_and([aux198_BOOL,w_00004_00011_BOOL],aux199_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux200_BOOL);
constraint array_bool_and([w_00007_00011_BOOL,aux200_BOOL],aux201_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux202_BOOL);
constraint array_bool_and([aux202_BOOL,w_00001_00011_BOOL],aux203_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux204_BOOL);
constraint array_bool_and([aux204_BOOL,w_00005_00011_BOOL],aux205_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux206_BOOL);
constraint array_bool_and([aux206_BOOL,w_00004_00011_BOOL],aux207_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux208_BOOL);
constraint array_bool_and([aux208_BOOL,w_00001_00013_BOOL],aux209_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux210_BOOL);
constraint array_bool_and([aux210_BOOL,w_00005_00013_BOOL],aux211_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux212_BOOL);
constraint array_bool_and([aux212_BOOL,w_00004_00013_BOOL],aux213_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux214_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux214_BOOL],aux215_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux216_BOOL);
constraint array_bool_and([aux216_BOOL,w_00004_00013_BOOL],aux217_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux218_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux218_BOOL],aux219_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux220_BOOL);
constraint array_bool_and([w_00008_00013_BOOL,aux220_BOOL],aux221_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux222_BOOL);
constraint array_bool_and([w_00007_00013_BOOL,aux222_BOOL],aux223_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux224_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux224_BOOL],aux225_BOOL);
constraint int_eq_reif(TWorkers_00009_00014_INTEGER,1,aux226_BOOL);
constraint array_bool_and([aux226_BOOL,w_00009_00014_BOOL],aux227_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux228_BOOL);
constraint array_bool_and([aux228_BOOL,w_00004_00014_BOOL],aux229_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux230_BOOL);
constraint array_bool_and([w_00007_00014_BOOL,aux230_BOOL],aux231_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux232_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux232_BOOL],aux233_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux234_BOOL);
constraint array_bool_and([aux234_BOOL,w_00004_00014_BOOL],aux235_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux236_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux236_BOOL],aux237_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux238_BOOL);
constraint array_bool_and([w_00008_00014_BOOL,aux238_BOOL],aux239_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux240_BOOL);
constraint array_bool_and([w_00007_00014_BOOL,aux240_BOOL],aux241_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux242_BOOL);
constraint array_bool_and([aux242_BOOL,w_00001_00016_BOOL],aux243_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux244_BOOL);
constraint array_bool_and([aux244_BOOL,w_00005_00016_BOOL],aux245_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux246_BOOL);
constraint array_bool_and([aux246_BOOL,w_00004_00016_BOOL],aux247_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux248_BOOL);
constraint array_bool_and([w_00006_00016_BOOL,aux248_BOOL],aux249_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux250_BOOL);
constraint array_bool_and([aux250_BOOL,w_00004_00016_BOOL],aux251_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux252_BOOL);
constraint array_bool_and([w_00002_00016_BOOL,aux252_BOOL],aux253_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux254_BOOL);
constraint array_bool_and([w_00008_00016_BOOL,aux254_BOOL],aux255_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux256_BOOL);
constraint array_bool_and([w_00007_00016_BOOL,aux256_BOOL],aux257_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux258_BOOL);
constraint array_bool_and([w_00006_00020_BOOL,aux258_BOOL],aux259_BOOL);
constraint int_eq_reif(TWorkers_00009_00020_INTEGER,1,aux260_BOOL);
constraint array_bool_and([aux260_BOOL,w_00009_00020_BOOL],aux261_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux262_BOOL);
constraint array_bool_and([w_00003_00020_BOOL,aux262_BOOL],aux263_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux264_BOOL);
constraint array_bool_and([w_00007_00020_BOOL,aux264_BOOL],aux265_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux266_BOOL);
constraint array_bool_and([w_00006_00020_BOOL,aux266_BOOL],aux267_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux268_BOOL);
constraint array_bool_and([aux268_BOOL,w_00004_00020_BOOL],aux269_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux270_BOOL);
constraint array_bool_and([w_00002_00020_BOOL,aux270_BOOL],aux271_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux272_BOOL);
constraint array_bool_and([w_00008_00020_BOOL,aux272_BOOL],aux273_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux274_BOOL);
constraint array_bool_and([w_00007_00020_BOOL,aux274_BOOL],aux275_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00001_INTEGER,aux276_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00001_INTEGER,aux277_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,0,aux278_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,0,aux279_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,0,aux280_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00001_INTEGER,aux281_BOOL);
constraint int_eq_reif(0,TWorkers_00007_00001_INTEGER,aux282_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,0,aux283_BOOL);
constraint int_eq_reif(TWorkers_00009_00001_INTEGER,0,aux284_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00002_INTEGER,aux285_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00002_INTEGER,aux286_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,0,aux287_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,0,aux288_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,0,aux289_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00002_INTEGER,aux290_BOOL);
constraint int_eq_reif(0,TWorkers_00007_00002_INTEGER,aux291_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,0,aux292_BOOL);
constraint int_eq_reif(TWorkers_00009_00002_INTEGER,0,aux293_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00003_INTEGER,aux294_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00003_INTEGER,aux295_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,0,aux296_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,0,aux297_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,0,aux298_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00003_INTEGER,aux299_BOOL);
constraint int_eq_reif(0,TWorkers_00007_00003_INTEGER,aux300_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,0,aux301_BOOL);
constraint int_eq_reif(TWorkers_00009_00003_INTEGER,0,aux302_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00004_INTEGER,aux303_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00004_INTEGER,aux304_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,0,aux305_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,0,aux306_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,0,aux307_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00004_INTEGER,aux308_BOOL);
constraint int_eq_reif(0,TWorkers_00007_00004_INTEGER,aux309_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,0,aux310_BOOL);
constraint int_eq_reif(TWorkers_00009_00004_INTEGER,0,aux311_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00005_INTEGER,aux312_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00005_INTEGER,aux313_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,0,aux314_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,0,aux315_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,0,aux316_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00005_INTEGER,aux317_BOOL);
constraint int_eq_reif(0,TWorkers_00007_00005_INTEGER,aux318_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,0,aux319_BOOL);
constraint int_eq_reif(TWorkers_00009_00005_INTEGER,0,aux320_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00006_INTEGER,aux321_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00006_INTEGER,aux322_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,0,aux323_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,0,aux324_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,0,aux325_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00006_INTEGER,aux326_BOOL);
constraint int_eq_reif(0,TWorkers_00007_00006_INTEGER,aux327_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,0,aux328_BOOL);
constraint int_eq_reif(TWorkers_00009_00006_INTEGER,0,aux329_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00007_INTEGER,aux330_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00007_INTEGER,aux331_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,0,aux332_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,0,aux333_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,0,aux334_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00007_INTEGER,aux335_BOOL);
constraint int_eq_reif(0,TWorkers_00007_00007_INTEGER,aux336_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,0,aux337_BOOL);
constraint int_eq_reif(TWorkers_00009_00007_INTEGER,0,aux338_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00008_INTEGER,aux339_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00008_INTEGER,aux340_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,0,aux341_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,0,aux342_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,0,aux343_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00008_INTEGER,aux344_BOOL);
constraint int_eq_reif(0,TWorkers_00007_00008_INTEGER,aux345_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,0,aux346_BOOL);
constraint int_eq_reif(TWorkers_00009_00008_INTEGER,0,aux347_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00009_INTEGER,aux348_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00009_INTEGER,aux349_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,0,aux350_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,0,aux351_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,0,aux352_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00009_INTEGER,aux353_BOOL);
constraint int_eq_reif(0,TWorkers_00007_00009_INTEGER,aux354_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,0,aux355_BOOL);
constraint int_eq_reif(TWorkers_00009_00009_INTEGER,0,aux356_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00010_INTEGER,aux357_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00010_INTEGER,aux358_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,0,aux359_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,0,aux360_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,0,aux361_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00010_INTEGER,aux362_BOOL);
constraint int_eq_reif(0,TWorkers_00007_00010_INTEGER,aux363_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,0,aux364_BOOL);
constraint int_eq_reif(TWorkers_00009_00010_INTEGER,0,aux365_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00011_INTEGER,aux366_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00011_INTEGER,aux367_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,0,aux368_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,0,aux369_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,0,aux370_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00011_INTEGER,aux371_BOOL);
constraint int_eq_reif(0,TWorkers_00007_00011_INTEGER,aux372_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,0,aux373_BOOL);
constraint int_eq_reif(TWorkers_00009_00011_INTEGER,0,aux374_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00012_INTEGER,aux375_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00012_INTEGER,aux376_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,0,aux377_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,0,aux378_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,0,aux379_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00012_INTEGER,aux380_BOOL);
constraint int_eq_reif(0,TWorkers_00007_00012_INTEGER,aux381_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,0,aux382_BOOL);
constraint int_eq_reif(TWorkers_00009_00012_INTEGER,0,aux383_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00013_INTEGER,aux384_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00013_INTEGER,aux385_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,0,aux386_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,0,aux387_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,0,aux388_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00013_INTEGER,aux389_BOOL);
constraint int_eq_reif(0,TWorkers_00007_00013_INTEGER,aux390_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,0,aux391_BOOL);
constraint int_eq_reif(TWorkers_00009_00013_INTEGER,0,aux392_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00014_INTEGER,aux393_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00014_INTEGER,aux394_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,0,aux395_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,0,aux396_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,0,aux397_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00014_INTEGER,aux398_BOOL);
constraint int_eq_reif(0,TWorkers_00007_00014_INTEGER,aux399_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,0,aux400_BOOL);
constraint int_eq_reif(TWorkers_00009_00014_INTEGER,0,aux401_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00015_INTEGER,aux402_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00015_INTEGER,aux403_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,0,aux404_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,0,aux405_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,0,aux406_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00015_INTEGER,aux407_BOOL);
constraint int_eq_reif(0,TWorkers_00007_00015_INTEGER,aux408_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,0,aux409_BOOL);
constraint int_eq_reif(TWorkers_00009_00015_INTEGER,0,aux410_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00016_INTEGER,aux411_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00016_INTEGER,aux412_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,0,aux413_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,0,aux414_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,0,aux415_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00016_INTEGER,aux416_BOOL);
constraint int_eq_reif(0,TWorkers_00007_00016_INTEGER,aux417_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,0,aux418_BOOL);
constraint int_eq_reif(TWorkers_00009_00016_INTEGER,0,aux419_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00017_INTEGER,aux420_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00017_INTEGER,aux421_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,0,aux422_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,0,aux423_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,0,aux424_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00017_INTEGER,aux425_BOOL);
constraint int_eq_reif(0,TWorkers_00007_00017_INTEGER,aux426_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,0,aux427_BOOL);
constraint int_eq_reif(TWorkers_00009_00017_INTEGER,0,aux428_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00018_INTEGER,aux429_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00018_INTEGER,aux430_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,0,aux431_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,0,aux432_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,0,aux433_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00018_INTEGER,aux434_BOOL);
constraint int_eq_reif(0,TWorkers_00007_00018_INTEGER,aux435_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,0,aux436_BOOL);
constraint int_eq_reif(TWorkers_00009_00018_INTEGER,0,aux437_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00019_INTEGER,aux438_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00019_INTEGER,aux439_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,0,aux440_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,0,aux441_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,0,aux442_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00019_INTEGER,aux443_BOOL);
constraint int_eq_reif(0,TWorkers_00007_00019_INTEGER,aux444_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,0,aux445_BOOL);
constraint int_eq_reif(TWorkers_00009_00019_INTEGER,0,aux446_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00020_INTEGER,aux447_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00020_INTEGER,aux448_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,0,aux449_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,0,aux450_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,0,aux451_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00020_INTEGER,aux452_BOOL);
constraint int_eq_reif(0,TWorkers_00007_00020_INTEGER,aux453_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,0,aux454_BOOL);
constraint int_eq_reif(TWorkers_00009_00020_INTEGER,0,aux455_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[TWorkers_00001_00001_INTEGER,TWorkers_00001_00002_INTEGER,TWorkers_00001_00003_INTEGER,TWorkers_00001_00004_INTEGER,TWorkers_00001_00005_INTEGER,TWorkers_00001_00006_INTEGER,TWorkers_00001_00007_INTEGER,TWorkers_00001_00008_INTEGER,TWorkers_00001_00009_INTEGER,TWorkers_00001_00010_INTEGER,TWorkers_00001_00011_INTEGER,TWorkers_00001_00012_INTEGER,TWorkers_00001_00013_INTEGER,TWorkers_00001_00014_INTEGER,TWorkers_00001_00015_INTEGER,TWorkers_00001_00016_INTEGER,TWorkers_00001_00017_INTEGER,TWorkers_00001_00018_INTEGER,TWorkers_00001_00019_INTEGER,TWorkers_00001_00020_INTEGER,1],0,aux456_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux457_BOOL);
constraint int_lin_eq([-1,1,1],[aux458,3,s_00011],0);
constraint int_lt_reif(s_00011,aux458,aux459_BOOL);
constraint array_bool_and([aux457_BOOL,aux459_BOOL,w_00001_00011_BOOL],aux460_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux461_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux462_BOOL);
constraint int_lin_eq([-1,1,1],[aux463,4,s_00001],0);
constraint int_lt_reif(s_00011,aux463,aux464_BOOL);
constraint int_le_reif(s_00001, s_00011,aux465_BOOL);
constraint array_bool_and([aux461_BOOL,aux462_BOOL,aux464_BOOL,aux465_BOOL,w_00001_00001_BOOL],aux466_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux467_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux468_BOOL);
constraint int_lin_eq([-1,1,1],[aux469,4,s_00002],0);
constraint int_lt_reif(s_00011,aux469,aux470_BOOL);
constraint int_le_reif(s_00002, s_00011,aux471_BOOL);
constraint array_bool_and([aux467_BOOL,aux468_BOOL,aux470_BOOL,aux471_BOOL,w_00001_00002_BOOL],aux472_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux473_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux474_BOOL);
constraint int_lin_eq([-1,1,1],[aux475,3,s_00003],0);
constraint int_lt_reif(s_00011,aux475,aux476_BOOL);
constraint int_le_reif(s_00003, s_00011,aux477_BOOL);
constraint array_bool_and([aux473_BOOL,aux474_BOOL,aux476_BOOL,aux477_BOOL,w_00001_00003_BOOL],aux478_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux479_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux480_BOOL);
constraint int_lin_eq([-1,1,1],[aux481,2,s_00004],0);
constraint int_lt_reif(s_00011,aux481,aux482_BOOL);
constraint int_le_reif(s_00004, s_00011,aux483_BOOL);
constraint array_bool_and([aux479_BOOL,aux480_BOOL,aux482_BOOL,aux483_BOOL,w_00001_00004_BOOL],aux484_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux485_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux486_BOOL);
constraint int_lin_eq([-1,1,1],[aux487,3,s_00005],0);
constraint int_lt_reif(s_00011,aux487,aux488_BOOL);
constraint int_le_reif(s_00005, s_00011,aux489_BOOL);
constraint array_bool_and([aux485_BOOL,aux486_BOOL,aux488_BOOL,aux489_BOOL,w_00001_00005_BOOL],aux490_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux491_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux492_BOOL);
constraint int_lin_eq([-1,1,1],[aux493,2,s_00006],0);
constraint int_lt_reif(s_00011,aux493,aux494_BOOL);
constraint int_le_reif(s_00006, s_00011,aux495_BOOL);
constraint array_bool_and([aux491_BOOL,aux492_BOOL,aux494_BOOL,aux495_BOOL,w_00001_00006_BOOL],aux496_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux497_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux498_BOOL);
constraint int_lin_eq([-1,1,1],[aux499,3,s_00007],0);
constraint int_lt_reif(s_00011,aux499,aux500_BOOL);
constraint int_le_reif(s_00007, s_00011,aux501_BOOL);
constraint array_bool_and([aux497_BOOL,aux498_BOOL,aux500_BOOL,aux501_BOOL,w_00001_00007_BOOL],aux502_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux503_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux504_BOOL);
constraint int_lin_eq([-1,1,1],[aux505,2,s_00008],0);
constraint int_lt_reif(s_00011,aux505,aux506_BOOL);
constraint int_le_reif(s_00008, s_00011,aux507_BOOL);
constraint array_bool_and([aux503_BOOL,aux504_BOOL,aux506_BOOL,aux507_BOOL,w_00001_00008_BOOL],aux508_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux509_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux510_BOOL);
constraint int_lin_eq([-1,1,1],[aux511,2,s_00009],0);
constraint int_lt_reif(s_00011,aux511,aux512_BOOL);
constraint int_le_reif(s_00009, s_00011,aux513_BOOL);
constraint array_bool_and([aux509_BOOL,aux510_BOOL,aux512_BOOL,aux513_BOOL,w_00001_00009_BOOL],aux514_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux515_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux516_BOOL);
constraint int_lin_eq([-1,1,1],[aux517,5,s_00010],0);
constraint int_lt_reif(s_00011,aux517,aux518_BOOL);
constraint int_le_reif(s_00010, s_00011,aux519_BOOL);
constraint array_bool_and([aux515_BOOL,aux516_BOOL,aux518_BOOL,aux519_BOOL,w_00001_00010_BOOL],aux520_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux521_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux522_BOOL);
constraint int_lin_eq([-1,1,1],[aux523,4,s_00012],0);
constraint int_lt_reif(s_00011,aux523,aux524_BOOL);
constraint int_le_reif(s_00012, s_00011,aux525_BOOL);
constraint array_bool_and([aux521_BOOL,aux522_BOOL,aux524_BOOL,aux525_BOOL,w_00001_00012_BOOL],aux526_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux527_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux528_BOOL);
constraint int_lin_eq([-1,1,1],[aux529,3,s_00013],0);
constraint int_lt_reif(s_00011,aux529,aux530_BOOL);
constraint int_le_reif(s_00013, s_00011,aux531_BOOL);
constraint array_bool_and([aux527_BOOL,aux528_BOOL,aux530_BOOL,aux531_BOOL,w_00001_00013_BOOL],aux532_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux533_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux534_BOOL);
constraint int_lin_eq([-1,1,1],[aux535,2,s_00014],0);
constraint int_lt_reif(s_00011,aux535,aux536_BOOL);
constraint int_le_reif(s_00014, s_00011,aux537_BOOL);
constraint array_bool_and([aux533_BOOL,aux534_BOOL,aux536_BOOL,aux537_BOOL,w_00001_00014_BOOL],aux538_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux539_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux540_BOOL);
constraint int_lin_eq([-1,1,1],[aux541,1,s_00015],0);
constraint int_lt_reif(s_00011,aux541,aux542_BOOL);
constraint int_le_reif(s_00015, s_00011,aux543_BOOL);
constraint array_bool_and([aux539_BOOL,aux540_BOOL,aux542_BOOL,aux543_BOOL,w_00001_00015_BOOL],aux544_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux545_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux546_BOOL);
constraint int_lin_eq([-1,1,1],[aux547,3,s_00016],0);
constraint int_lt_reif(s_00011,aux547,aux548_BOOL);
constraint int_le_reif(s_00016, s_00011,aux549_BOOL);
constraint array_bool_and([aux545_BOOL,aux546_BOOL,aux548_BOOL,aux549_BOOL,w_00001_00016_BOOL],aux550_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux551_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux552_BOOL);
constraint int_lin_eq([-1,1,1],[aux553,1,s_00018],0);
constraint int_lt_reif(s_00011,aux553,aux554_BOOL);
constraint int_le_reif(s_00018, s_00011,aux555_BOOL);
constraint array_bool_and([aux551_BOOL,aux552_BOOL,aux554_BOOL,aux555_BOOL,w_00001_00018_BOOL],aux556_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux557_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux558_BOOL);
constraint int_lin_eq([-1,1,1],[aux559,4,s_00017],0);
constraint int_lt_reif(s_00011,aux559,aux560_BOOL);
constraint int_le_reif(s_00017, s_00011,aux561_BOOL);
constraint array_bool_and([aux557_BOOL,aux558_BOOL,aux560_BOOL,aux561_BOOL,w_00001_00017_BOOL],aux562_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux563_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux564_BOOL);
constraint int_lin_eq([-1,1,1],[aux565,4,s_00019],0);
constraint int_lt_reif(s_00011,aux565,aux566_BOOL);
constraint int_le_reif(s_00019, s_00011,aux567_BOOL);
constraint array_bool_and([aux563_BOOL,aux564_BOOL,aux566_BOOL,aux567_BOOL,w_00001_00019_BOOL],aux568_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux569_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux570_BOOL);
constraint int_lin_eq([-1,1,1],[aux571,2,s_00020],0);
constraint int_lt_reif(s_00011,aux571,aux572_BOOL);
constraint int_le_reif(s_00020, s_00011,aux573_BOOL);
constraint array_bool_and([aux569_BOOL,aux570_BOOL,aux572_BOOL,aux573_BOOL,w_00001_00020_BOOL],aux574_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux460_INTEGER,aux466_INTEGER,aux472_INTEGER,aux478_INTEGER,aux484_INTEGER,aux490_INTEGER,aux496_INTEGER,aux502_INTEGER,aux508_INTEGER,aux514_INTEGER,aux520_INTEGER,aux526_INTEGER,aux532_INTEGER,aux538_INTEGER,aux544_INTEGER,aux550_INTEGER,aux556_INTEGER,aux562_INTEGER,aux568_INTEGER,aux574_INTEGER,1],0,aux575_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux576_BOOL);
constraint int_lin_eq([-1,1,1],[aux577,4,s_00012],0);
constraint int_lt_reif(s_00012,aux577,aux578_BOOL);
constraint array_bool_and([aux576_BOOL,aux578_BOOL,w_00001_00012_BOOL],aux579_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux580_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux581_BOOL);
constraint int_lin_eq([-1,1,1],[aux582,4,s_00001],0);
constraint int_lt_reif(s_00012,aux582,aux583_BOOL);
constraint int_le_reif(s_00001, s_00012,aux584_BOOL);
constraint array_bool_and([aux580_BOOL,aux581_BOOL,aux583_BOOL,aux584_BOOL,w_00001_00001_BOOL],aux585_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux586_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux587_BOOL);
constraint int_lin_eq([-1,1,1],[aux588,4,s_00002],0);
constraint int_lt_reif(s_00012,aux588,aux589_BOOL);
constraint int_le_reif(s_00002, s_00012,aux590_BOOL);
constraint array_bool_and([aux586_BOOL,aux587_BOOL,aux589_BOOL,aux590_BOOL,w_00001_00002_BOOL],aux591_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux592_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux593_BOOL);
constraint int_lin_eq([-1,1,1],[aux594,3,s_00003],0);
constraint int_lt_reif(s_00012,aux594,aux595_BOOL);
constraint int_le_reif(s_00003, s_00012,aux596_BOOL);
constraint array_bool_and([aux592_BOOL,aux593_BOOL,aux595_BOOL,aux596_BOOL,w_00001_00003_BOOL],aux597_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux598_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux599_BOOL);
constraint int_lin_eq([-1,1,1],[aux600,2,s_00004],0);
constraint int_lt_reif(s_00012,aux600,aux601_BOOL);
constraint int_le_reif(s_00004, s_00012,aux602_BOOL);
constraint array_bool_and([aux598_BOOL,aux599_BOOL,aux601_BOOL,aux602_BOOL,w_00001_00004_BOOL],aux603_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux604_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux605_BOOL);
constraint int_lin_eq([-1,1,1],[aux606,3,s_00005],0);
constraint int_lt_reif(s_00012,aux606,aux607_BOOL);
constraint int_le_reif(s_00005, s_00012,aux608_BOOL);
constraint array_bool_and([aux604_BOOL,aux605_BOOL,aux607_BOOL,aux608_BOOL,w_00001_00005_BOOL],aux609_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux610_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux611_BOOL);
constraint int_lin_eq([-1,1,1],[aux612,2,s_00006],0);
constraint int_lt_reif(s_00012,aux612,aux613_BOOL);
constraint int_le_reif(s_00006, s_00012,aux614_BOOL);
constraint array_bool_and([aux610_BOOL,aux611_BOOL,aux613_BOOL,aux614_BOOL,w_00001_00006_BOOL],aux615_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux616_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux617_BOOL);
constraint int_lin_eq([-1,1,1],[aux618,3,s_00007],0);
constraint int_lt_reif(s_00012,aux618,aux619_BOOL);
constraint int_le_reif(s_00007, s_00012,aux620_BOOL);
constraint array_bool_and([aux616_BOOL,aux617_BOOL,aux619_BOOL,aux620_BOOL,w_00001_00007_BOOL],aux621_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux622_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux623_BOOL);
constraint int_lin_eq([-1,1,1],[aux624,2,s_00008],0);
constraint int_lt_reif(s_00012,aux624,aux625_BOOL);
constraint int_le_reif(s_00008, s_00012,aux626_BOOL);
constraint array_bool_and([aux622_BOOL,aux623_BOOL,aux625_BOOL,aux626_BOOL,w_00001_00008_BOOL],aux627_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux628_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux629_BOOL);
constraint int_lin_eq([-1,1,1],[aux630,2,s_00009],0);
constraint int_lt_reif(s_00012,aux630,aux631_BOOL);
constraint int_le_reif(s_00009, s_00012,aux632_BOOL);
constraint array_bool_and([aux628_BOOL,aux629_BOOL,aux631_BOOL,aux632_BOOL,w_00001_00009_BOOL],aux633_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux634_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux635_BOOL);
constraint int_lin_eq([-1,1,1],[aux636,5,s_00010],0);
constraint int_lt_reif(s_00012,aux636,aux637_BOOL);
constraint int_le_reif(s_00010, s_00012,aux638_BOOL);
constraint array_bool_and([aux634_BOOL,aux635_BOOL,aux637_BOOL,aux638_BOOL,w_00001_00010_BOOL],aux639_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux640_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux641_BOOL);
constraint int_lin_eq([-1,1,1],[aux642,3,s_00011],0);
constraint int_lt_reif(s_00012,aux642,aux643_BOOL);
constraint int_le_reif(s_00011, s_00012,aux644_BOOL);
constraint array_bool_and([aux640_BOOL,aux641_BOOL,aux643_BOOL,aux644_BOOL,w_00001_00011_BOOL],aux645_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux646_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux647_BOOL);
constraint int_lin_eq([-1,1,1],[aux648,3,s_00013],0);
constraint int_lt_reif(s_00012,aux648,aux649_BOOL);
constraint int_le_reif(s_00013, s_00012,aux650_BOOL);
constraint array_bool_and([aux646_BOOL,aux647_BOOL,aux649_BOOL,aux650_BOOL,w_00001_00013_BOOL],aux651_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux652_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux653_BOOL);
constraint int_lin_eq([-1,1,1],[aux654,2,s_00014],0);
constraint int_lt_reif(s_00012,aux654,aux655_BOOL);
constraint int_le_reif(s_00014, s_00012,aux656_BOOL);
constraint array_bool_and([aux652_BOOL,aux653_BOOL,aux655_BOOL,aux656_BOOL,w_00001_00014_BOOL],aux657_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux658_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux659_BOOL);
constraint int_lin_eq([-1,1,1],[aux660,1,s_00015],0);
constraint int_lt_reif(s_00012,aux660,aux661_BOOL);
constraint int_le_reif(s_00015, s_00012,aux662_BOOL);
constraint array_bool_and([aux658_BOOL,aux659_BOOL,aux661_BOOL,aux662_BOOL,w_00001_00015_BOOL],aux663_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux664_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux665_BOOL);
constraint int_lin_eq([-1,1,1],[aux666,3,s_00016],0);
constraint int_lt_reif(s_00012,aux666,aux667_BOOL);
constraint int_le_reif(s_00016, s_00012,aux668_BOOL);
constraint array_bool_and([aux664_BOOL,aux665_BOOL,aux667_BOOL,aux668_BOOL,w_00001_00016_BOOL],aux669_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux670_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux671_BOOL);
constraint int_lin_eq([-1,1,1],[aux672,1,s_00018],0);
constraint int_lt_reif(s_00012,aux672,aux673_BOOL);
constraint int_le_reif(s_00018, s_00012,aux674_BOOL);
constraint array_bool_and([aux670_BOOL,aux671_BOOL,aux673_BOOL,aux674_BOOL,w_00001_00018_BOOL],aux675_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux676_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux677_BOOL);
constraint int_lin_eq([-1,1,1],[aux678,4,s_00017],0);
constraint int_lt_reif(s_00012,aux678,aux679_BOOL);
constraint int_le_reif(s_00017, s_00012,aux680_BOOL);
constraint array_bool_and([aux676_BOOL,aux677_BOOL,aux679_BOOL,aux680_BOOL,w_00001_00017_BOOL],aux681_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux682_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux683_BOOL);
constraint int_lin_eq([-1,1,1],[aux684,4,s_00019],0);
constraint int_lt_reif(s_00012,aux684,aux685_BOOL);
constraint int_le_reif(s_00019, s_00012,aux686_BOOL);
constraint array_bool_and([aux682_BOOL,aux683_BOOL,aux685_BOOL,aux686_BOOL,w_00001_00019_BOOL],aux687_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux688_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux689_BOOL);
constraint int_lin_eq([-1,1,1],[aux690,2,s_00020],0);
constraint int_lt_reif(s_00012,aux690,aux691_BOOL);
constraint int_le_reif(s_00020, s_00012,aux692_BOOL);
constraint array_bool_and([aux688_BOOL,aux689_BOOL,aux691_BOOL,aux692_BOOL,w_00001_00020_BOOL],aux693_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux579_INTEGER,aux585_INTEGER,aux591_INTEGER,aux597_INTEGER,aux603_INTEGER,aux609_INTEGER,aux615_INTEGER,aux621_INTEGER,aux627_INTEGER,aux633_INTEGER,aux639_INTEGER,aux645_INTEGER,aux651_INTEGER,aux657_INTEGER,aux663_INTEGER,aux669_INTEGER,aux675_INTEGER,aux681_INTEGER,aux687_INTEGER,aux693_INTEGER,1],0,aux694_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux695_BOOL);
constraint int_lin_eq([-1,1,1],[aux696,4,s_00017],0);
constraint int_lt_reif(s_00017,aux696,aux697_BOOL);
constraint array_bool_and([aux695_BOOL,aux697_BOOL,w_00001_00017_BOOL],aux698_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux699_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux700_BOOL);
constraint int_lin_eq([-1,1,1],[aux701,4,s_00001],0);
constraint int_lt_reif(s_00017,aux701,aux702_BOOL);
constraint int_le_reif(s_00001, s_00017,aux703_BOOL);
constraint array_bool_and([aux699_BOOL,aux700_BOOL,aux702_BOOL,aux703_BOOL,w_00001_00001_BOOL],aux704_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux705_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux706_BOOL);
constraint int_lin_eq([-1,1,1],[aux707,4,s_00002],0);
constraint int_lt_reif(s_00017,aux707,aux708_BOOL);
constraint int_le_reif(s_00002, s_00017,aux709_BOOL);
constraint array_bool_and([aux705_BOOL,aux706_BOOL,aux708_BOOL,aux709_BOOL,w_00001_00002_BOOL],aux710_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux711_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux712_BOOL);
constraint int_lin_eq([-1,1,1],[aux713,3,s_00003],0);
constraint int_lt_reif(s_00017,aux713,aux714_BOOL);
constraint int_le_reif(s_00003, s_00017,aux715_BOOL);
constraint array_bool_and([aux711_BOOL,aux712_BOOL,aux714_BOOL,aux715_BOOL,w_00001_00003_BOOL],aux716_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux717_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux718_BOOL);
constraint int_lin_eq([-1,1,1],[aux719,2,s_00004],0);
constraint int_lt_reif(s_00017,aux719,aux720_BOOL);
constraint int_le_reif(s_00004, s_00017,aux721_BOOL);
constraint array_bool_and([aux717_BOOL,aux718_BOOL,aux720_BOOL,aux721_BOOL,w_00001_00004_BOOL],aux722_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux723_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux724_BOOL);
constraint int_lin_eq([-1,1,1],[aux725,3,s_00005],0);
constraint int_lt_reif(s_00017,aux725,aux726_BOOL);
constraint int_le_reif(s_00005, s_00017,aux727_BOOL);
constraint array_bool_and([aux723_BOOL,aux724_BOOL,aux726_BOOL,aux727_BOOL,w_00001_00005_BOOL],aux728_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux729_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux730_BOOL);
constraint int_lin_eq([-1,1,1],[aux731,2,s_00006],0);
constraint int_lt_reif(s_00017,aux731,aux732_BOOL);
constraint int_le_reif(s_00006, s_00017,aux733_BOOL);
constraint array_bool_and([aux729_BOOL,aux730_BOOL,aux732_BOOL,aux733_BOOL,w_00001_00006_BOOL],aux734_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux735_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux736_BOOL);
constraint int_lin_eq([-1,1,1],[aux737,3,s_00007],0);
constraint int_lt_reif(s_00017,aux737,aux738_BOOL);
constraint int_le_reif(s_00007, s_00017,aux739_BOOL);
constraint array_bool_and([aux735_BOOL,aux736_BOOL,aux738_BOOL,aux739_BOOL,w_00001_00007_BOOL],aux740_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux741_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux742_BOOL);
constraint int_lin_eq([-1,1,1],[aux743,2,s_00008],0);
constraint int_lt_reif(s_00017,aux743,aux744_BOOL);
constraint int_le_reif(s_00008, s_00017,aux745_BOOL);
constraint array_bool_and([aux741_BOOL,aux742_BOOL,aux744_BOOL,aux745_BOOL,w_00001_00008_BOOL],aux746_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux747_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux748_BOOL);
constraint int_lin_eq([-1,1,1],[aux749,2,s_00009],0);
constraint int_lt_reif(s_00017,aux749,aux750_BOOL);
constraint int_le_reif(s_00009, s_00017,aux751_BOOL);
constraint array_bool_and([aux747_BOOL,aux748_BOOL,aux750_BOOL,aux751_BOOL,w_00001_00009_BOOL],aux752_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux753_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux754_BOOL);
constraint int_lin_eq([-1,1,1],[aux755,5,s_00010],0);
constraint int_lt_reif(s_00017,aux755,aux756_BOOL);
constraint int_le_reif(s_00010, s_00017,aux757_BOOL);
constraint array_bool_and([aux753_BOOL,aux754_BOOL,aux756_BOOL,aux757_BOOL,w_00001_00010_BOOL],aux758_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux759_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux760_BOOL);
constraint int_lin_eq([-1,1,1],[aux761,3,s_00011],0);
constraint int_lt_reif(s_00017,aux761,aux762_BOOL);
constraint int_le_reif(s_00011, s_00017,aux763_BOOL);
constraint array_bool_and([aux759_BOOL,aux760_BOOL,aux762_BOOL,aux763_BOOL,w_00001_00011_BOOL],aux764_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux765_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux766_BOOL);
constraint int_lin_eq([-1,1,1],[aux767,4,s_00012],0);
constraint int_lt_reif(s_00017,aux767,aux768_BOOL);
constraint int_le_reif(s_00012, s_00017,aux769_BOOL);
constraint array_bool_and([aux765_BOOL,aux766_BOOL,aux768_BOOL,aux769_BOOL,w_00001_00012_BOOL],aux770_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux771_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux772_BOOL);
constraint int_lin_eq([-1,1,1],[aux773,3,s_00013],0);
constraint int_lt_reif(s_00017,aux773,aux774_BOOL);
constraint int_le_reif(s_00013, s_00017,aux775_BOOL);
constraint array_bool_and([aux771_BOOL,aux772_BOOL,aux774_BOOL,aux775_BOOL,w_00001_00013_BOOL],aux776_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux777_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux778_BOOL);
constraint int_lin_eq([-1,1,1],[aux779,2,s_00014],0);
constraint int_lt_reif(s_00017,aux779,aux780_BOOL);
constraint int_le_reif(s_00014, s_00017,aux781_BOOL);
constraint array_bool_and([aux777_BOOL,aux778_BOOL,aux780_BOOL,aux781_BOOL,w_00001_00014_BOOL],aux782_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux783_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux784_BOOL);
constraint int_lin_eq([-1,1,1],[aux785,1,s_00015],0);
constraint int_lt_reif(s_00017,aux785,aux786_BOOL);
constraint int_le_reif(s_00015, s_00017,aux787_BOOL);
constraint array_bool_and([aux783_BOOL,aux784_BOOL,aux786_BOOL,aux787_BOOL,w_00001_00015_BOOL],aux788_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux789_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux790_BOOL);
constraint int_lin_eq([-1,1,1],[aux791,3,s_00016],0);
constraint int_lt_reif(s_00017,aux791,aux792_BOOL);
constraint int_le_reif(s_00016, s_00017,aux793_BOOL);
constraint array_bool_and([aux789_BOOL,aux790_BOOL,aux792_BOOL,aux793_BOOL,w_00001_00016_BOOL],aux794_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux795_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux796_BOOL);
constraint int_lin_eq([-1,1,1],[aux797,1,s_00018],0);
constraint int_lt_reif(s_00017,aux797,aux798_BOOL);
constraint int_le_reif(s_00018, s_00017,aux799_BOOL);
constraint array_bool_and([aux795_BOOL,aux796_BOOL,aux798_BOOL,aux799_BOOL,w_00001_00018_BOOL],aux800_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux801_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux802_BOOL);
constraint int_lin_eq([-1,1,1],[aux803,4,s_00019],0);
constraint int_lt_reif(s_00017,aux803,aux804_BOOL);
constraint int_le_reif(s_00019, s_00017,aux805_BOOL);
constraint array_bool_and([aux801_BOOL,aux802_BOOL,aux804_BOOL,aux805_BOOL,w_00001_00019_BOOL],aux806_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux807_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux808_BOOL);
constraint int_lin_eq([-1,1,1],[aux809,2,s_00020],0);
constraint int_lt_reif(s_00017,aux809,aux810_BOOL);
constraint int_le_reif(s_00020, s_00017,aux811_BOOL);
constraint array_bool_and([aux807_BOOL,aux808_BOOL,aux810_BOOL,aux811_BOOL,w_00001_00020_BOOL],aux812_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux698_INTEGER,aux704_INTEGER,aux710_INTEGER,aux716_INTEGER,aux722_INTEGER,aux728_INTEGER,aux734_INTEGER,aux740_INTEGER,aux746_INTEGER,aux752_INTEGER,aux758_INTEGER,aux764_INTEGER,aux770_INTEGER,aux776_INTEGER,aux782_INTEGER,aux788_INTEGER,aux794_INTEGER,aux800_INTEGER,aux806_INTEGER,aux812_INTEGER,1],0,aux813_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux814_BOOL);
constraint int_lin_eq([-1,1,1],[aux815,4,s_00019],0);
constraint int_lt_reif(s_00019,aux815,aux816_BOOL);
constraint array_bool_and([aux814_BOOL,aux816_BOOL,w_00001_00019_BOOL],aux817_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux818_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux819_BOOL);
constraint int_lin_eq([-1,1,1],[aux820,4,s_00001],0);
constraint int_lt_reif(s_00019,aux820,aux821_BOOL);
constraint int_le_reif(s_00001, s_00019,aux822_BOOL);
constraint array_bool_and([aux818_BOOL,aux819_BOOL,aux821_BOOL,aux822_BOOL,w_00001_00001_BOOL],aux823_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux824_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux825_BOOL);
constraint int_lin_eq([-1,1,1],[aux826,4,s_00002],0);
constraint int_lt_reif(s_00019,aux826,aux827_BOOL);
constraint int_le_reif(s_00002, s_00019,aux828_BOOL);
constraint array_bool_and([aux824_BOOL,aux825_BOOL,aux827_BOOL,aux828_BOOL,w_00001_00002_BOOL],aux829_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux830_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux831_BOOL);
constraint int_lin_eq([-1,1,1],[aux832,3,s_00003],0);
constraint int_lt_reif(s_00019,aux832,aux833_BOOL);
constraint int_le_reif(s_00003, s_00019,aux834_BOOL);
constraint array_bool_and([aux830_BOOL,aux831_BOOL,aux833_BOOL,aux834_BOOL,w_00001_00003_BOOL],aux835_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux836_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux837_BOOL);
constraint int_lin_eq([-1,1,1],[aux838,2,s_00004],0);
constraint int_lt_reif(s_00019,aux838,aux839_BOOL);
constraint int_le_reif(s_00004, s_00019,aux840_BOOL);
constraint array_bool_and([aux836_BOOL,aux837_BOOL,aux839_BOOL,aux840_BOOL,w_00001_00004_BOOL],aux841_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux842_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux843_BOOL);
constraint int_lin_eq([-1,1,1],[aux844,3,s_00005],0);
constraint int_lt_reif(s_00019,aux844,aux845_BOOL);
constraint int_le_reif(s_00005, s_00019,aux846_BOOL);
constraint array_bool_and([aux842_BOOL,aux843_BOOL,aux845_BOOL,aux846_BOOL,w_00001_00005_BOOL],aux847_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux848_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux849_BOOL);
constraint int_lin_eq([-1,1,1],[aux850,2,s_00006],0);
constraint int_lt_reif(s_00019,aux850,aux851_BOOL);
constraint int_le_reif(s_00006, s_00019,aux852_BOOL);
constraint array_bool_and([aux848_BOOL,aux849_BOOL,aux851_BOOL,aux852_BOOL,w_00001_00006_BOOL],aux853_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux854_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux855_BOOL);
constraint int_lin_eq([-1,1,1],[aux856,3,s_00007],0);
constraint int_lt_reif(s_00019,aux856,aux857_BOOL);
constraint int_le_reif(s_00007, s_00019,aux858_BOOL);
constraint array_bool_and([aux854_BOOL,aux855_BOOL,aux857_BOOL,aux858_BOOL,w_00001_00007_BOOL],aux859_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux860_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux861_BOOL);
constraint int_lin_eq([-1,1,1],[aux862,2,s_00008],0);
constraint int_lt_reif(s_00019,aux862,aux863_BOOL);
constraint int_le_reif(s_00008, s_00019,aux864_BOOL);
constraint array_bool_and([aux860_BOOL,aux861_BOOL,aux863_BOOL,aux864_BOOL,w_00001_00008_BOOL],aux865_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux866_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux867_BOOL);
constraint int_lin_eq([-1,1,1],[aux868,2,s_00009],0);
constraint int_lt_reif(s_00019,aux868,aux869_BOOL);
constraint int_le_reif(s_00009, s_00019,aux870_BOOL);
constraint array_bool_and([aux866_BOOL,aux867_BOOL,aux869_BOOL,aux870_BOOL,w_00001_00009_BOOL],aux871_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux872_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux873_BOOL);
constraint int_lin_eq([-1,1,1],[aux874,5,s_00010],0);
constraint int_lt_reif(s_00019,aux874,aux875_BOOL);
constraint int_le_reif(s_00010, s_00019,aux876_BOOL);
constraint array_bool_and([aux872_BOOL,aux873_BOOL,aux875_BOOL,aux876_BOOL,w_00001_00010_BOOL],aux877_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux878_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux879_BOOL);
constraint int_lin_eq([-1,1,1],[aux880,3,s_00011],0);
constraint int_lt_reif(s_00019,aux880,aux881_BOOL);
constraint int_le_reif(s_00011, s_00019,aux882_BOOL);
constraint array_bool_and([aux878_BOOL,aux879_BOOL,aux881_BOOL,aux882_BOOL,w_00001_00011_BOOL],aux883_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux884_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux885_BOOL);
constraint int_lin_eq([-1,1,1],[aux886,4,s_00012],0);
constraint int_lt_reif(s_00019,aux886,aux887_BOOL);
constraint int_le_reif(s_00012, s_00019,aux888_BOOL);
constraint array_bool_and([aux884_BOOL,aux885_BOOL,aux887_BOOL,aux888_BOOL,w_00001_00012_BOOL],aux889_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux890_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux891_BOOL);
constraint int_lin_eq([-1,1,1],[aux892,3,s_00013],0);
constraint int_lt_reif(s_00019,aux892,aux893_BOOL);
constraint int_le_reif(s_00013, s_00019,aux894_BOOL);
constraint array_bool_and([aux890_BOOL,aux891_BOOL,aux893_BOOL,aux894_BOOL,w_00001_00013_BOOL],aux895_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux896_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux897_BOOL);
constraint int_lin_eq([-1,1,1],[aux898,2,s_00014],0);
constraint int_lt_reif(s_00019,aux898,aux899_BOOL);
constraint int_le_reif(s_00014, s_00019,aux900_BOOL);
constraint array_bool_and([aux896_BOOL,aux897_BOOL,aux899_BOOL,aux900_BOOL,w_00001_00014_BOOL],aux901_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux902_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux903_BOOL);
constraint int_lin_eq([-1,1,1],[aux904,1,s_00015],0);
constraint int_lt_reif(s_00019,aux904,aux905_BOOL);
constraint int_le_reif(s_00015, s_00019,aux906_BOOL);
constraint array_bool_and([aux902_BOOL,aux903_BOOL,aux905_BOOL,aux906_BOOL,w_00001_00015_BOOL],aux907_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux908_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux909_BOOL);
constraint int_lin_eq([-1,1,1],[aux910,3,s_00016],0);
constraint int_lt_reif(s_00019,aux910,aux911_BOOL);
constraint int_le_reif(s_00016, s_00019,aux912_BOOL);
constraint array_bool_and([aux908_BOOL,aux909_BOOL,aux911_BOOL,aux912_BOOL,w_00001_00016_BOOL],aux913_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux914_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux915_BOOL);
constraint int_lin_eq([-1,1,1],[aux916,4,s_00017],0);
constraint int_lt_reif(s_00019,aux916,aux917_BOOL);
constraint int_le_reif(s_00017, s_00019,aux918_BOOL);
constraint array_bool_and([aux914_BOOL,aux915_BOOL,aux917_BOOL,aux918_BOOL,w_00001_00017_BOOL],aux919_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux920_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux921_BOOL);
constraint int_lin_eq([-1,1,1],[aux922,1,s_00018],0);
constraint int_lt_reif(s_00019,aux922,aux923_BOOL);
constraint int_le_reif(s_00018, s_00019,aux924_BOOL);
constraint array_bool_and([aux920_BOOL,aux921_BOOL,aux923_BOOL,aux924_BOOL,w_00001_00018_BOOL],aux925_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux926_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux927_BOOL);
constraint int_lin_eq([-1,1,1],[aux928,2,s_00020],0);
constraint int_lt_reif(s_00019,aux928,aux929_BOOL);
constraint int_le_reif(s_00020, s_00019,aux930_BOOL);
constraint array_bool_and([aux926_BOOL,aux927_BOOL,aux929_BOOL,aux930_BOOL,w_00001_00020_BOOL],aux931_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux817_INTEGER,aux823_INTEGER,aux829_INTEGER,aux835_INTEGER,aux841_INTEGER,aux847_INTEGER,aux853_INTEGER,aux859_INTEGER,aux865_INTEGER,aux871_INTEGER,aux877_INTEGER,aux883_INTEGER,aux889_INTEGER,aux895_INTEGER,aux901_INTEGER,aux907_INTEGER,aux913_INTEGER,aux919_INTEGER,aux925_INTEGER,aux931_INTEGER,1],0,aux932_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux933_BOOL);
constraint int_lin_eq([-1,1,1],[aux934,2,s_00004],0);
constraint int_lt_reif(s_00004,aux934,aux935_BOOL);
constraint array_bool_and([aux933_BOOL,aux935_BOOL,w_00001_00004_BOOL],aux936_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux937_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux938_BOOL);
constraint int_lin_eq([-1,1,1],[aux939,4,s_00001],0);
constraint int_lt_reif(s_00004,aux939,aux940_BOOL);
constraint int_le_reif(s_00001, s_00004,aux941_BOOL);
constraint array_bool_and([aux937_BOOL,aux938_BOOL,aux940_BOOL,aux941_BOOL,w_00001_00001_BOOL],aux942_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux943_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux944_BOOL);
constraint int_lin_eq([-1,1,1],[aux945,4,s_00002],0);
constraint int_lt_reif(s_00004,aux945,aux946_BOOL);
constraint int_le_reif(s_00002, s_00004,aux947_BOOL);
constraint array_bool_and([aux943_BOOL,aux944_BOOL,aux946_BOOL,aux947_BOOL,w_00001_00002_BOOL],aux948_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux949_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux950_BOOL);
constraint int_lin_eq([-1,1,1],[aux951,3,s_00003],0);
constraint int_lt_reif(s_00004,aux951,aux952_BOOL);
constraint int_le_reif(s_00003, s_00004,aux953_BOOL);
constraint array_bool_and([aux949_BOOL,aux950_BOOL,aux952_BOOL,aux953_BOOL,w_00001_00003_BOOL],aux954_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux955_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux956_BOOL);
constraint int_lin_eq([-1,1,1],[aux957,3,s_00005],0);
constraint int_lt_reif(s_00004,aux957,aux958_BOOL);
constraint int_le_reif(s_00005, s_00004,aux959_BOOL);
constraint array_bool_and([aux955_BOOL,aux956_BOOL,aux958_BOOL,aux959_BOOL,w_00001_00005_BOOL],aux960_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux961_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux962_BOOL);
constraint int_lin_eq([-1,1,1],[aux963,2,s_00006],0);
constraint int_lt_reif(s_00004,aux963,aux964_BOOL);
constraint int_le_reif(s_00006, s_00004,aux965_BOOL);
constraint array_bool_and([aux961_BOOL,aux962_BOOL,aux964_BOOL,aux965_BOOL,w_00001_00006_BOOL],aux966_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux967_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux968_BOOL);
constraint int_lin_eq([-1,1,1],[aux969,3,s_00007],0);
constraint int_lt_reif(s_00004,aux969,aux970_BOOL);
constraint int_le_reif(s_00007, s_00004,aux971_BOOL);
constraint array_bool_and([aux967_BOOL,aux968_BOOL,aux970_BOOL,aux971_BOOL,w_00001_00007_BOOL],aux972_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux973_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux974_BOOL);
constraint int_lin_eq([-1,1,1],[aux975,2,s_00008],0);
constraint int_lt_reif(s_00004,aux975,aux976_BOOL);
constraint int_le_reif(s_00008, s_00004,aux977_BOOL);
constraint array_bool_and([aux973_BOOL,aux974_BOOL,aux976_BOOL,aux977_BOOL,w_00001_00008_BOOL],aux978_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux979_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux980_BOOL);
constraint int_lin_eq([-1,1,1],[aux981,2,s_00009],0);
constraint int_lt_reif(s_00004,aux981,aux982_BOOL);
constraint int_le_reif(s_00009, s_00004,aux983_BOOL);
constraint array_bool_and([aux979_BOOL,aux980_BOOL,aux982_BOOL,aux983_BOOL,w_00001_00009_BOOL],aux984_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux985_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux986_BOOL);
constraint int_lin_eq([-1,1,1],[aux987,3,s_00011],0);
constraint int_lt_reif(s_00004,aux987,aux988_BOOL);
constraint int_le_reif(s_00011, s_00004,aux989_BOOL);
constraint array_bool_and([aux985_BOOL,aux986_BOOL,aux988_BOOL,aux989_BOOL,w_00001_00011_BOOL],aux990_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux991_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux992_BOOL);
constraint int_lin_eq([-1,1,1],[aux993,5,s_00010],0);
constraint int_lt_reif(s_00004,aux993,aux994_BOOL);
constraint int_le_reif(s_00010, s_00004,aux995_BOOL);
constraint array_bool_and([aux991_BOOL,aux992_BOOL,aux994_BOOL,aux995_BOOL,w_00001_00010_BOOL],aux996_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux997_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux998_BOOL);
constraint int_lin_eq([-1,1,1],[aux999,4,s_00012],0);
constraint int_lt_reif(s_00004,aux999,aux1000_BOOL);
constraint int_le_reif(s_00012, s_00004,aux1001_BOOL);
constraint array_bool_and([aux997_BOOL,aux998_BOOL,aux1000_BOOL,aux1001_BOOL,w_00001_00012_BOOL],aux1002_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux1003_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1004_BOOL);
constraint int_lin_eq([-1,1,1],[aux1005,3,s_00013],0);
constraint int_lt_reif(s_00004,aux1005,aux1006_BOOL);
constraint int_le_reif(s_00013, s_00004,aux1007_BOOL);
constraint array_bool_and([aux1003_BOOL,aux1004_BOOL,aux1006_BOOL,aux1007_BOOL,w_00001_00013_BOOL],aux1008_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux1009_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1010_BOOL);
constraint int_lin_eq([-1,1,1],[aux1011,2,s_00014],0);
constraint int_lt_reif(s_00004,aux1011,aux1012_BOOL);
constraint int_le_reif(s_00014, s_00004,aux1013_BOOL);
constraint array_bool_and([aux1009_BOOL,aux1010_BOOL,aux1012_BOOL,aux1013_BOOL,w_00001_00014_BOOL],aux1014_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux1015_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1016_BOOL);
constraint int_lin_eq([-1,1,1],[aux1017,1,s_00015],0);
constraint int_lt_reif(s_00004,aux1017,aux1018_BOOL);
constraint int_le_reif(s_00015, s_00004,aux1019_BOOL);
constraint array_bool_and([aux1015_BOOL,aux1016_BOOL,aux1018_BOOL,aux1019_BOOL,w_00001_00015_BOOL],aux1020_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux1021_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux1022_BOOL);
constraint int_lin_eq([-1,1,1],[aux1023,3,s_00016],0);
constraint int_lt_reif(s_00004,aux1023,aux1024_BOOL);
constraint int_le_reif(s_00016, s_00004,aux1025_BOOL);
constraint array_bool_and([aux1021_BOOL,aux1022_BOOL,aux1024_BOOL,aux1025_BOOL,w_00001_00016_BOOL],aux1026_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux1027_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux1028_BOOL);
constraint int_lin_eq([-1,1,1],[aux1029,1,s_00018],0);
constraint int_lt_reif(s_00004,aux1029,aux1030_BOOL);
constraint int_le_reif(s_00018, s_00004,aux1031_BOOL);
constraint array_bool_and([aux1027_BOOL,aux1028_BOOL,aux1030_BOOL,aux1031_BOOL,w_00001_00018_BOOL],aux1032_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux1033_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux1034_BOOL);
constraint int_lin_eq([-1,1,1],[aux1035,4,s_00017],0);
constraint int_lt_reif(s_00004,aux1035,aux1036_BOOL);
constraint int_le_reif(s_00017, s_00004,aux1037_BOOL);
constraint array_bool_and([aux1033_BOOL,aux1034_BOOL,aux1036_BOOL,aux1037_BOOL,w_00001_00017_BOOL],aux1038_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux1039_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux1040_BOOL);
constraint int_lin_eq([-1,1,1],[aux1041,4,s_00019],0);
constraint int_lt_reif(s_00004,aux1041,aux1042_BOOL);
constraint int_le_reif(s_00019, s_00004,aux1043_BOOL);
constraint array_bool_and([aux1039_BOOL,aux1040_BOOL,aux1042_BOOL,aux1043_BOOL,w_00001_00019_BOOL],aux1044_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux1045_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux1046_BOOL);
constraint int_lin_eq([-1,1,1],[aux1047,2,s_00020],0);
constraint int_lt_reif(s_00004,aux1047,aux1048_BOOL);
constraint int_le_reif(s_00020, s_00004,aux1049_BOOL);
constraint array_bool_and([aux1045_BOOL,aux1046_BOOL,aux1048_BOOL,aux1049_BOOL,w_00001_00020_BOOL],aux1050_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux936_INTEGER,aux942_INTEGER,aux948_INTEGER,aux954_INTEGER,aux960_INTEGER,aux966_INTEGER,aux972_INTEGER,aux978_INTEGER,aux984_INTEGER,aux990_INTEGER,aux996_INTEGER,aux1002_INTEGER,aux1008_INTEGER,aux1014_INTEGER,aux1020_INTEGER,aux1026_INTEGER,aux1032_INTEGER,aux1038_INTEGER,aux1044_INTEGER,aux1050_INTEGER,1],0,aux1051_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1052_BOOL);
constraint int_lin_eq([-1,1,1],[aux1053,4,s_00002],0);
constraint int_lt_reif(s_00002,aux1053,aux1054_BOOL);
constraint array_bool_and([aux1052_BOOL,aux1054_BOOL,w_00001_00002_BOOL],aux1055_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux1056_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1057_BOOL);
constraint int_lin_eq([-1,1,1],[aux1058,4,s_00001],0);
constraint int_lt_reif(s_00002,aux1058,aux1059_BOOL);
constraint int_le_reif(s_00001, s_00002,aux1060_BOOL);
constraint array_bool_and([aux1056_BOOL,aux1057_BOOL,aux1059_BOOL,aux1060_BOOL,w_00001_00001_BOOL],aux1061_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1062_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux1063_BOOL);
constraint int_lin_eq([-1,1,1],[aux1064,3,s_00003],0);
constraint int_lt_reif(s_00002,aux1064,aux1065_BOOL);
constraint int_le_reif(s_00003, s_00002,aux1066_BOOL);
constraint array_bool_and([aux1062_BOOL,aux1063_BOOL,aux1065_BOOL,aux1066_BOOL,w_00001_00003_BOOL],aux1067_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1068_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux1069_BOOL);
constraint int_lin_eq([-1,1,1],[aux1070,2,s_00004],0);
constraint int_lt_reif(s_00002,aux1070,aux1071_BOOL);
constraint int_le_reif(s_00004, s_00002,aux1072_BOOL);
constraint array_bool_and([aux1068_BOOL,aux1069_BOOL,aux1071_BOOL,aux1072_BOOL,w_00001_00004_BOOL],aux1073_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1074_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux1075_BOOL);
constraint int_lin_eq([-1,1,1],[aux1076,3,s_00005],0);
constraint int_lt_reif(s_00002,aux1076,aux1077_BOOL);
constraint int_le_reif(s_00005, s_00002,aux1078_BOOL);
constraint array_bool_and([aux1074_BOOL,aux1075_BOOL,aux1077_BOOL,aux1078_BOOL,w_00001_00005_BOOL],aux1079_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1080_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1081_BOOL);
constraint int_lin_eq([-1,1,1],[aux1082,2,s_00006],0);
constraint int_lt_reif(s_00002,aux1082,aux1083_BOOL);
constraint int_le_reif(s_00006, s_00002,aux1084_BOOL);
constraint array_bool_and([aux1080_BOOL,aux1081_BOOL,aux1083_BOOL,aux1084_BOOL,w_00001_00006_BOOL],aux1085_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1086_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux1087_BOOL);
constraint int_lin_eq([-1,1,1],[aux1088,3,s_00007],0);
constraint int_lt_reif(s_00002,aux1088,aux1089_BOOL);
constraint int_le_reif(s_00007, s_00002,aux1090_BOOL);
constraint array_bool_and([aux1086_BOOL,aux1087_BOOL,aux1089_BOOL,aux1090_BOOL,w_00001_00007_BOOL],aux1091_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1092_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux1093_BOOL);
constraint int_lin_eq([-1,1,1],[aux1094,2,s_00008],0);
constraint int_lt_reif(s_00002,aux1094,aux1095_BOOL);
constraint int_le_reif(s_00008, s_00002,aux1096_BOOL);
constraint array_bool_and([aux1092_BOOL,aux1093_BOOL,aux1095_BOOL,aux1096_BOOL,w_00001_00008_BOOL],aux1097_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1098_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux1099_BOOL);
constraint int_lin_eq([-1,1,1],[aux1100,2,s_00009],0);
constraint int_lt_reif(s_00002,aux1100,aux1101_BOOL);
constraint int_le_reif(s_00009, s_00002,aux1102_BOOL);
constraint array_bool_and([aux1098_BOOL,aux1099_BOOL,aux1101_BOOL,aux1102_BOOL,w_00001_00009_BOOL],aux1103_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1104_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux1105_BOOL);
constraint int_lin_eq([-1,1,1],[aux1106,3,s_00011],0);
constraint int_lt_reif(s_00002,aux1106,aux1107_BOOL);
constraint int_le_reif(s_00011, s_00002,aux1108_BOOL);
constraint array_bool_and([aux1104_BOOL,aux1105_BOOL,aux1107_BOOL,aux1108_BOOL,w_00001_00011_BOOL],aux1109_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1110_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1111_BOOL);
constraint int_lin_eq([-1,1,1],[aux1112,5,s_00010],0);
constraint int_lt_reif(s_00002,aux1112,aux1113_BOOL);
constraint int_le_reif(s_00010, s_00002,aux1114_BOOL);
constraint array_bool_and([aux1110_BOOL,aux1111_BOOL,aux1113_BOOL,aux1114_BOOL,w_00001_00010_BOOL],aux1115_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1116_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux1117_BOOL);
constraint int_lin_eq([-1,1,1],[aux1118,4,s_00012],0);
constraint int_lt_reif(s_00002,aux1118,aux1119_BOOL);
constraint int_le_reif(s_00012, s_00002,aux1120_BOOL);
constraint array_bool_and([aux1116_BOOL,aux1117_BOOL,aux1119_BOOL,aux1120_BOOL,w_00001_00012_BOOL],aux1121_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1122_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1123_BOOL);
constraint int_lin_eq([-1,1,1],[aux1124,3,s_00013],0);
constraint int_lt_reif(s_00002,aux1124,aux1125_BOOL);
constraint int_le_reif(s_00013, s_00002,aux1126_BOOL);
constraint array_bool_and([aux1122_BOOL,aux1123_BOOL,aux1125_BOOL,aux1126_BOOL,w_00001_00013_BOOL],aux1127_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1128_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1129_BOOL);
constraint int_lin_eq([-1,1,1],[aux1130,2,s_00014],0);
constraint int_lt_reif(s_00002,aux1130,aux1131_BOOL);
constraint int_le_reif(s_00014, s_00002,aux1132_BOOL);
constraint array_bool_and([aux1128_BOOL,aux1129_BOOL,aux1131_BOOL,aux1132_BOOL,w_00001_00014_BOOL],aux1133_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1134_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1135_BOOL);
constraint int_lin_eq([-1,1,1],[aux1136,1,s_00015],0);
constraint int_lt_reif(s_00002,aux1136,aux1137_BOOL);
constraint int_le_reif(s_00015, s_00002,aux1138_BOOL);
constraint array_bool_and([aux1134_BOOL,aux1135_BOOL,aux1137_BOOL,aux1138_BOOL,w_00001_00015_BOOL],aux1139_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1140_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux1141_BOOL);
constraint int_lin_eq([-1,1,1],[aux1142,3,s_00016],0);
constraint int_lt_reif(s_00002,aux1142,aux1143_BOOL);
constraint int_le_reif(s_00016, s_00002,aux1144_BOOL);
constraint array_bool_and([aux1140_BOOL,aux1141_BOOL,aux1143_BOOL,aux1144_BOOL,w_00001_00016_BOOL],aux1145_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1146_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux1147_BOOL);
constraint int_lin_eq([-1,1,1],[aux1148,1,s_00018],0);
constraint int_lt_reif(s_00002,aux1148,aux1149_BOOL);
constraint int_le_reif(s_00018, s_00002,aux1150_BOOL);
constraint array_bool_and([aux1146_BOOL,aux1147_BOOL,aux1149_BOOL,aux1150_BOOL,w_00001_00018_BOOL],aux1151_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1152_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux1153_BOOL);
constraint int_lin_eq([-1,1,1],[aux1154,4,s_00017],0);
constraint int_lt_reif(s_00002,aux1154,aux1155_BOOL);
constraint int_le_reif(s_00017, s_00002,aux1156_BOOL);
constraint array_bool_and([aux1152_BOOL,aux1153_BOOL,aux1155_BOOL,aux1156_BOOL,w_00001_00017_BOOL],aux1157_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1158_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux1159_BOOL);
constraint int_lin_eq([-1,1,1],[aux1160,4,s_00019],0);
constraint int_lt_reif(s_00002,aux1160,aux1161_BOOL);
constraint int_le_reif(s_00019, s_00002,aux1162_BOOL);
constraint array_bool_and([aux1158_BOOL,aux1159_BOOL,aux1161_BOOL,aux1162_BOOL,w_00001_00019_BOOL],aux1163_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1164_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux1165_BOOL);
constraint int_lin_eq([-1,1,1],[aux1166,2,s_00020],0);
constraint int_lt_reif(s_00002,aux1166,aux1167_BOOL);
constraint int_le_reif(s_00020, s_00002,aux1168_BOOL);
constraint array_bool_and([aux1164_BOOL,aux1165_BOOL,aux1167_BOOL,aux1168_BOOL,w_00001_00020_BOOL],aux1169_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux1055_INTEGER,aux1061_INTEGER,aux1067_INTEGER,aux1073_INTEGER,aux1079_INTEGER,aux1085_INTEGER,aux1091_INTEGER,aux1097_INTEGER,aux1103_INTEGER,aux1109_INTEGER,aux1115_INTEGER,aux1121_INTEGER,aux1127_INTEGER,aux1133_INTEGER,aux1139_INTEGER,aux1145_INTEGER,aux1151_INTEGER,aux1157_INTEGER,aux1163_INTEGER,aux1169_INTEGER,1],0,aux1170_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1171_BOOL);
constraint int_lin_eq([-1,1,1],[aux1172,2,s_00006],0);
constraint int_lt_reif(s_00006,aux1172,aux1173_BOOL);
constraint array_bool_and([aux1171_BOOL,aux1173_BOOL,w_00001_00006_BOOL],aux1174_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux1175_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1176_BOOL);
constraint int_lin_eq([-1,1,1],[aux1177,4,s_00001],0);
constraint int_lt_reif(s_00006,aux1177,aux1178_BOOL);
constraint int_le_reif(s_00001, s_00006,aux1179_BOOL);
constraint array_bool_and([aux1175_BOOL,aux1176_BOOL,aux1178_BOOL,aux1179_BOOL,w_00001_00001_BOOL],aux1180_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1181_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1182_BOOL);
constraint int_lin_eq([-1,1,1],[aux1183,4,s_00002],0);
constraint int_lt_reif(s_00006,aux1183,aux1184_BOOL);
constraint int_le_reif(s_00002, s_00006,aux1185_BOOL);
constraint array_bool_and([aux1181_BOOL,aux1182_BOOL,aux1184_BOOL,aux1185_BOOL,w_00001_00002_BOOL],aux1186_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux1187_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1188_BOOL);
constraint int_lin_eq([-1,1,1],[aux1189,3,s_00003],0);
constraint int_lt_reif(s_00006,aux1189,aux1190_BOOL);
constraint int_le_reif(s_00003, s_00006,aux1191_BOOL);
constraint array_bool_and([aux1187_BOOL,aux1188_BOOL,aux1190_BOOL,aux1191_BOOL,w_00001_00003_BOOL],aux1192_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux1193_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1194_BOOL);
constraint int_lin_eq([-1,1,1],[aux1195,2,s_00004],0);
constraint int_lt_reif(s_00006,aux1195,aux1196_BOOL);
constraint int_le_reif(s_00004, s_00006,aux1197_BOOL);
constraint array_bool_and([aux1193_BOOL,aux1194_BOOL,aux1196_BOOL,aux1197_BOOL,w_00001_00004_BOOL],aux1198_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux1199_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1200_BOOL);
constraint int_lin_eq([-1,1,1],[aux1201,3,s_00005],0);
constraint int_lt_reif(s_00006,aux1201,aux1202_BOOL);
constraint int_le_reif(s_00005, s_00006,aux1203_BOOL);
constraint array_bool_and([aux1199_BOOL,aux1200_BOOL,aux1202_BOOL,aux1203_BOOL,w_00001_00005_BOOL],aux1204_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1205_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux1206_BOOL);
constraint int_lin_eq([-1,1,1],[aux1207,3,s_00007],0);
constraint int_lt_reif(s_00006,aux1207,aux1208_BOOL);
constraint int_le_reif(s_00007, s_00006,aux1209_BOOL);
constraint array_bool_and([aux1205_BOOL,aux1206_BOOL,aux1208_BOOL,aux1209_BOOL,w_00001_00007_BOOL],aux1210_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1211_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux1212_BOOL);
constraint int_lin_eq([-1,1,1],[aux1213,2,s_00008],0);
constraint int_lt_reif(s_00006,aux1213,aux1214_BOOL);
constraint int_le_reif(s_00008, s_00006,aux1215_BOOL);
constraint array_bool_and([aux1211_BOOL,aux1212_BOOL,aux1214_BOOL,aux1215_BOOL,w_00001_00008_BOOL],aux1216_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1217_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux1218_BOOL);
constraint int_lin_eq([-1,1,1],[aux1219,2,s_00009],0);
constraint int_lt_reif(s_00006,aux1219,aux1220_BOOL);
constraint int_le_reif(s_00009, s_00006,aux1221_BOOL);
constraint array_bool_and([aux1217_BOOL,aux1218_BOOL,aux1220_BOOL,aux1221_BOOL,w_00001_00009_BOOL],aux1222_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1223_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux1224_BOOL);
constraint int_lin_eq([-1,1,1],[aux1225,3,s_00011],0);
constraint int_lt_reif(s_00006,aux1225,aux1226_BOOL);
constraint int_le_reif(s_00011, s_00006,aux1227_BOOL);
constraint array_bool_and([aux1223_BOOL,aux1224_BOOL,aux1226_BOOL,aux1227_BOOL,w_00001_00011_BOOL],aux1228_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1229_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1230_BOOL);
constraint int_lin_eq([-1,1,1],[aux1231,5,s_00010],0);
constraint int_lt_reif(s_00006,aux1231,aux1232_BOOL);
constraint int_le_reif(s_00010, s_00006,aux1233_BOOL);
constraint array_bool_and([aux1229_BOOL,aux1230_BOOL,aux1232_BOOL,aux1233_BOOL,w_00001_00010_BOOL],aux1234_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1235_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux1236_BOOL);
constraint int_lin_eq([-1,1,1],[aux1237,4,s_00012],0);
constraint int_lt_reif(s_00006,aux1237,aux1238_BOOL);
constraint int_le_reif(s_00012, s_00006,aux1239_BOOL);
constraint array_bool_and([aux1235_BOOL,aux1236_BOOL,aux1238_BOOL,aux1239_BOOL,w_00001_00012_BOOL],aux1240_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1241_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1242_BOOL);
constraint int_lin_eq([-1,1,1],[aux1243,3,s_00013],0);
constraint int_lt_reif(s_00006,aux1243,aux1244_BOOL);
constraint int_le_reif(s_00013, s_00006,aux1245_BOOL);
constraint array_bool_and([aux1241_BOOL,aux1242_BOOL,aux1244_BOOL,aux1245_BOOL,w_00001_00013_BOOL],aux1246_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1247_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1248_BOOL);
constraint int_lin_eq([-1,1,1],[aux1249,2,s_00014],0);
constraint int_lt_reif(s_00006,aux1249,aux1250_BOOL);
constraint int_le_reif(s_00014, s_00006,aux1251_BOOL);
constraint array_bool_and([aux1247_BOOL,aux1248_BOOL,aux1250_BOOL,aux1251_BOOL,w_00001_00014_BOOL],aux1252_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1253_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1254_BOOL);
constraint int_lin_eq([-1,1,1],[aux1255,1,s_00015],0);
constraint int_lt_reif(s_00006,aux1255,aux1256_BOOL);
constraint int_le_reif(s_00015, s_00006,aux1257_BOOL);
constraint array_bool_and([aux1253_BOOL,aux1254_BOOL,aux1256_BOOL,aux1257_BOOL,w_00001_00015_BOOL],aux1258_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1259_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux1260_BOOL);
constraint int_lin_eq([-1,1,1],[aux1261,3,s_00016],0);
constraint int_lt_reif(s_00006,aux1261,aux1262_BOOL);
constraint int_le_reif(s_00016, s_00006,aux1263_BOOL);
constraint array_bool_and([aux1259_BOOL,aux1260_BOOL,aux1262_BOOL,aux1263_BOOL,w_00001_00016_BOOL],aux1264_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1265_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux1266_BOOL);
constraint int_lin_eq([-1,1,1],[aux1267,1,s_00018],0);
constraint int_lt_reif(s_00006,aux1267,aux1268_BOOL);
constraint int_le_reif(s_00018, s_00006,aux1269_BOOL);
constraint array_bool_and([aux1265_BOOL,aux1266_BOOL,aux1268_BOOL,aux1269_BOOL,w_00001_00018_BOOL],aux1270_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1271_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux1272_BOOL);
constraint int_lin_eq([-1,1,1],[aux1273,4,s_00017],0);
constraint int_lt_reif(s_00006,aux1273,aux1274_BOOL);
constraint int_le_reif(s_00017, s_00006,aux1275_BOOL);
constraint array_bool_and([aux1271_BOOL,aux1272_BOOL,aux1274_BOOL,aux1275_BOOL,w_00001_00017_BOOL],aux1276_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1277_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux1278_BOOL);
constraint int_lin_eq([-1,1,1],[aux1279,4,s_00019],0);
constraint int_lt_reif(s_00006,aux1279,aux1280_BOOL);
constraint int_le_reif(s_00019, s_00006,aux1281_BOOL);
constraint array_bool_and([aux1277_BOOL,aux1278_BOOL,aux1280_BOOL,aux1281_BOOL,w_00001_00019_BOOL],aux1282_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1283_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux1284_BOOL);
constraint int_lin_eq([-1,1,1],[aux1285,2,s_00020],0);
constraint int_lt_reif(s_00006,aux1285,aux1286_BOOL);
constraint int_le_reif(s_00020, s_00006,aux1287_BOOL);
constraint array_bool_and([aux1283_BOOL,aux1284_BOOL,aux1286_BOOL,aux1287_BOOL,w_00001_00020_BOOL],aux1288_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux1174_INTEGER,aux1180_INTEGER,aux1186_INTEGER,aux1192_INTEGER,aux1198_INTEGER,aux1204_INTEGER,aux1210_INTEGER,aux1216_INTEGER,aux1222_INTEGER,aux1228_INTEGER,aux1234_INTEGER,aux1240_INTEGER,aux1246_INTEGER,aux1252_INTEGER,aux1258_INTEGER,aux1264_INTEGER,aux1270_INTEGER,aux1276_INTEGER,aux1282_INTEGER,aux1288_INTEGER,1],0,aux1289_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux1290_BOOL);
constraint int_lin_eq([-1,1,1],[aux1291,3,s_00003],0);
constraint int_lt_reif(s_00003,aux1291,aux1292_BOOL);
constraint array_bool_and([aux1290_BOOL,aux1292_BOOL,w_00001_00003_BOOL],aux1293_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux1294_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux1295_BOOL);
constraint int_lin_eq([-1,1,1],[aux1296,4,s_00001],0);
constraint int_lt_reif(s_00003,aux1296,aux1297_BOOL);
constraint int_le_reif(s_00001, s_00003,aux1298_BOOL);
constraint array_bool_and([aux1294_BOOL,aux1295_BOOL,aux1297_BOOL,aux1298_BOOL,w_00001_00001_BOOL],aux1299_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1300_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux1301_BOOL);
constraint int_lin_eq([-1,1,1],[aux1302,4,s_00002],0);
constraint int_lt_reif(s_00003,aux1302,aux1303_BOOL);
constraint int_le_reif(s_00002, s_00003,aux1304_BOOL);
constraint array_bool_and([aux1300_BOOL,aux1301_BOOL,aux1303_BOOL,aux1304_BOOL,w_00001_00002_BOOL],aux1305_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux1306_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux1307_BOOL);
constraint int_lin_eq([-1,1,1],[aux1308,2,s_00004],0);
constraint int_lt_reif(s_00003,aux1308,aux1309_BOOL);
constraint int_le_reif(s_00004, s_00003,aux1310_BOOL);
constraint array_bool_and([aux1306_BOOL,aux1307_BOOL,aux1309_BOOL,aux1310_BOOL,w_00001_00004_BOOL],aux1311_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux1312_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux1313_BOOL);
constraint int_lin_eq([-1,1,1],[aux1314,3,s_00005],0);
constraint int_lt_reif(s_00003,aux1314,aux1315_BOOL);
constraint int_le_reif(s_00005, s_00003,aux1316_BOOL);
constraint array_bool_and([aux1312_BOOL,aux1313_BOOL,aux1315_BOOL,aux1316_BOOL,w_00001_00005_BOOL],aux1317_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux1318_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1319_BOOL);
constraint int_lin_eq([-1,1,1],[aux1320,2,s_00006],0);
constraint int_lt_reif(s_00003,aux1320,aux1321_BOOL);
constraint int_le_reif(s_00006, s_00003,aux1322_BOOL);
constraint array_bool_and([aux1318_BOOL,aux1319_BOOL,aux1321_BOOL,aux1322_BOOL,w_00001_00006_BOOL],aux1323_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux1324_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux1325_BOOL);
constraint int_lin_eq([-1,1,1],[aux1326,3,s_00007],0);
constraint int_lt_reif(s_00003,aux1326,aux1327_BOOL);
constraint int_le_reif(s_00007, s_00003,aux1328_BOOL);
constraint array_bool_and([aux1324_BOOL,aux1325_BOOL,aux1327_BOOL,aux1328_BOOL,w_00001_00007_BOOL],aux1329_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux1330_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux1331_BOOL);
constraint int_lin_eq([-1,1,1],[aux1332,2,s_00008],0);
constraint int_lt_reif(s_00003,aux1332,aux1333_BOOL);
constraint int_le_reif(s_00008, s_00003,aux1334_BOOL);
constraint array_bool_and([aux1330_BOOL,aux1331_BOOL,aux1333_BOOL,aux1334_BOOL,w_00001_00008_BOOL],aux1335_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux1336_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux1337_BOOL);
constraint int_lin_eq([-1,1,1],[aux1338,2,s_00009],0);
constraint int_lt_reif(s_00003,aux1338,aux1339_BOOL);
constraint int_le_reif(s_00009, s_00003,aux1340_BOOL);
constraint array_bool_and([aux1336_BOOL,aux1337_BOOL,aux1339_BOOL,aux1340_BOOL,w_00001_00009_BOOL],aux1341_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux1342_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux1343_BOOL);
constraint int_lin_eq([-1,1,1],[aux1344,3,s_00011],0);
constraint int_lt_reif(s_00003,aux1344,aux1345_BOOL);
constraint int_le_reif(s_00011, s_00003,aux1346_BOOL);
constraint array_bool_and([aux1342_BOOL,aux1343_BOOL,aux1345_BOOL,aux1346_BOOL,w_00001_00011_BOOL],aux1347_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux1348_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1349_BOOL);
constraint int_lin_eq([-1,1,1],[aux1350,5,s_00010],0);
constraint int_lt_reif(s_00003,aux1350,aux1351_BOOL);
constraint int_le_reif(s_00010, s_00003,aux1352_BOOL);
constraint array_bool_and([aux1348_BOOL,aux1349_BOOL,aux1351_BOOL,aux1352_BOOL,w_00001_00010_BOOL],aux1353_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux1354_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux1355_BOOL);
constraint int_lin_eq([-1,1,1],[aux1356,4,s_00012],0);
constraint int_lt_reif(s_00003,aux1356,aux1357_BOOL);
constraint int_le_reif(s_00012, s_00003,aux1358_BOOL);
constraint array_bool_and([aux1354_BOOL,aux1355_BOOL,aux1357_BOOL,aux1358_BOOL,w_00001_00012_BOOL],aux1359_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux1360_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1361_BOOL);
constraint int_lin_eq([-1,1,1],[aux1362,3,s_00013],0);
constraint int_lt_reif(s_00003,aux1362,aux1363_BOOL);
constraint int_le_reif(s_00013, s_00003,aux1364_BOOL);
constraint array_bool_and([aux1360_BOOL,aux1361_BOOL,aux1363_BOOL,aux1364_BOOL,w_00001_00013_BOOL],aux1365_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux1366_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1367_BOOL);
constraint int_lin_eq([-1,1,1],[aux1368,2,s_00014],0);
constraint int_lt_reif(s_00003,aux1368,aux1369_BOOL);
constraint int_le_reif(s_00014, s_00003,aux1370_BOOL);
constraint array_bool_and([aux1366_BOOL,aux1367_BOOL,aux1369_BOOL,aux1370_BOOL,w_00001_00014_BOOL],aux1371_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux1372_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1373_BOOL);
constraint int_lin_eq([-1,1,1],[aux1374,1,s_00015],0);
constraint int_lt_reif(s_00003,aux1374,aux1375_BOOL);
constraint int_le_reif(s_00015, s_00003,aux1376_BOOL);
constraint array_bool_and([aux1372_BOOL,aux1373_BOOL,aux1375_BOOL,aux1376_BOOL,w_00001_00015_BOOL],aux1377_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux1378_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux1379_BOOL);
constraint int_lin_eq([-1,1,1],[aux1380,3,s_00016],0);
constraint int_lt_reif(s_00003,aux1380,aux1381_BOOL);
constraint int_le_reif(s_00016, s_00003,aux1382_BOOL);
constraint array_bool_and([aux1378_BOOL,aux1379_BOOL,aux1381_BOOL,aux1382_BOOL,w_00001_00016_BOOL],aux1383_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux1384_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux1385_BOOL);
constraint int_lin_eq([-1,1,1],[aux1386,1,s_00018],0);
constraint int_lt_reif(s_00003,aux1386,aux1387_BOOL);
constraint int_le_reif(s_00018, s_00003,aux1388_BOOL);
constraint array_bool_and([aux1384_BOOL,aux1385_BOOL,aux1387_BOOL,aux1388_BOOL,w_00001_00018_BOOL],aux1389_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux1390_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux1391_BOOL);
constraint int_lin_eq([-1,1,1],[aux1392,4,s_00017],0);
constraint int_lt_reif(s_00003,aux1392,aux1393_BOOL);
constraint int_le_reif(s_00017, s_00003,aux1394_BOOL);
constraint array_bool_and([aux1390_BOOL,aux1391_BOOL,aux1393_BOOL,aux1394_BOOL,w_00001_00017_BOOL],aux1395_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux1396_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux1397_BOOL);
constraint int_lin_eq([-1,1,1],[aux1398,4,s_00019],0);
constraint int_lt_reif(s_00003,aux1398,aux1399_BOOL);
constraint int_le_reif(s_00019, s_00003,aux1400_BOOL);
constraint array_bool_and([aux1396_BOOL,aux1397_BOOL,aux1399_BOOL,aux1400_BOOL,w_00001_00019_BOOL],aux1401_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux1402_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux1403_BOOL);
constraint int_lin_eq([-1,1,1],[aux1404,2,s_00020],0);
constraint int_lt_reif(s_00003,aux1404,aux1405_BOOL);
constraint int_le_reif(s_00020, s_00003,aux1406_BOOL);
constraint array_bool_and([aux1402_BOOL,aux1403_BOOL,aux1405_BOOL,aux1406_BOOL,w_00001_00020_BOOL],aux1407_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux1293_INTEGER,aux1299_INTEGER,aux1305_INTEGER,aux1311_INTEGER,aux1317_INTEGER,aux1323_INTEGER,aux1329_INTEGER,aux1335_INTEGER,aux1341_INTEGER,aux1347_INTEGER,aux1353_INTEGER,aux1359_INTEGER,aux1365_INTEGER,aux1371_INTEGER,aux1377_INTEGER,aux1383_INTEGER,aux1389_INTEGER,aux1395_INTEGER,aux1401_INTEGER,aux1407_INTEGER,1],0,aux1408_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux1409_BOOL);
constraint int_lin_eq([-1,1,1],[aux1410,3,s_00005],0);
constraint int_lt_reif(s_00005,aux1410,aux1411_BOOL);
constraint array_bool_and([aux1409_BOOL,aux1411_BOOL,w_00001_00005_BOOL],aux1412_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux1413_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux1414_BOOL);
constraint int_lin_eq([-1,1,1],[aux1415,4,s_00001],0);
constraint int_lt_reif(s_00005,aux1415,aux1416_BOOL);
constraint int_le_reif(s_00001, s_00005,aux1417_BOOL);
constraint array_bool_and([aux1413_BOOL,aux1414_BOOL,aux1416_BOOL,aux1417_BOOL,w_00001_00001_BOOL],aux1418_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1419_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux1420_BOOL);
constraint int_lin_eq([-1,1,1],[aux1421,4,s_00002],0);
constraint int_lt_reif(s_00005,aux1421,aux1422_BOOL);
constraint int_le_reif(s_00002, s_00005,aux1423_BOOL);
constraint array_bool_and([aux1419_BOOL,aux1420_BOOL,aux1422_BOOL,aux1423_BOOL,w_00001_00002_BOOL],aux1424_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux1425_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux1426_BOOL);
constraint int_lin_eq([-1,1,1],[aux1427,3,s_00003],0);
constraint int_lt_reif(s_00005,aux1427,aux1428_BOOL);
constraint int_le_reif(s_00003, s_00005,aux1429_BOOL);
constraint array_bool_and([aux1425_BOOL,aux1426_BOOL,aux1428_BOOL,aux1429_BOOL,w_00001_00003_BOOL],aux1430_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux1431_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux1432_BOOL);
constraint int_lin_eq([-1,1,1],[aux1433,2,s_00004],0);
constraint int_lt_reif(s_00005,aux1433,aux1434_BOOL);
constraint int_le_reif(s_00004, s_00005,aux1435_BOOL);
constraint array_bool_and([aux1431_BOOL,aux1432_BOOL,aux1434_BOOL,aux1435_BOOL,w_00001_00004_BOOL],aux1436_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux1437_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1438_BOOL);
constraint int_lin_eq([-1,1,1],[aux1439,2,s_00006],0);
constraint int_lt_reif(s_00005,aux1439,aux1440_BOOL);
constraint int_le_reif(s_00006, s_00005,aux1441_BOOL);
constraint array_bool_and([aux1437_BOOL,aux1438_BOOL,aux1440_BOOL,aux1441_BOOL,w_00001_00006_BOOL],aux1442_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux1443_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux1444_BOOL);
constraint int_lin_eq([-1,1,1],[aux1445,3,s_00007],0);
constraint int_lt_reif(s_00005,aux1445,aux1446_BOOL);
constraint int_le_reif(s_00007, s_00005,aux1447_BOOL);
constraint array_bool_and([aux1443_BOOL,aux1444_BOOL,aux1446_BOOL,aux1447_BOOL,w_00001_00007_BOOL],aux1448_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux1449_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux1450_BOOL);
constraint int_lin_eq([-1,1,1],[aux1451,2,s_00008],0);
constraint int_lt_reif(s_00005,aux1451,aux1452_BOOL);
constraint int_le_reif(s_00008, s_00005,aux1453_BOOL);
constraint array_bool_and([aux1449_BOOL,aux1450_BOOL,aux1452_BOOL,aux1453_BOOL,w_00001_00008_BOOL],aux1454_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux1455_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux1456_BOOL);
constraint int_lin_eq([-1,1,1],[aux1457,2,s_00009],0);
constraint int_lt_reif(s_00005,aux1457,aux1458_BOOL);
constraint int_le_reif(s_00009, s_00005,aux1459_BOOL);
constraint array_bool_and([aux1455_BOOL,aux1456_BOOL,aux1458_BOOL,aux1459_BOOL,w_00001_00009_BOOL],aux1460_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux1461_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux1462_BOOL);
constraint int_lin_eq([-1,1,1],[aux1463,3,s_00011],0);
constraint int_lt_reif(s_00005,aux1463,aux1464_BOOL);
constraint int_le_reif(s_00011, s_00005,aux1465_BOOL);
constraint array_bool_and([aux1461_BOOL,aux1462_BOOL,aux1464_BOOL,aux1465_BOOL,w_00001_00011_BOOL],aux1466_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux1467_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1468_BOOL);
constraint int_lin_eq([-1,1,1],[aux1469,5,s_00010],0);
constraint int_lt_reif(s_00005,aux1469,aux1470_BOOL);
constraint int_le_reif(s_00010, s_00005,aux1471_BOOL);
constraint array_bool_and([aux1467_BOOL,aux1468_BOOL,aux1470_BOOL,aux1471_BOOL,w_00001_00010_BOOL],aux1472_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux1473_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux1474_BOOL);
constraint int_lin_eq([-1,1,1],[aux1475,4,s_00012],0);
constraint int_lt_reif(s_00005,aux1475,aux1476_BOOL);
constraint int_le_reif(s_00012, s_00005,aux1477_BOOL);
constraint array_bool_and([aux1473_BOOL,aux1474_BOOL,aux1476_BOOL,aux1477_BOOL,w_00001_00012_BOOL],aux1478_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux1479_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1480_BOOL);
constraint int_lin_eq([-1,1,1],[aux1481,3,s_00013],0);
constraint int_lt_reif(s_00005,aux1481,aux1482_BOOL);
constraint int_le_reif(s_00013, s_00005,aux1483_BOOL);
constraint array_bool_and([aux1479_BOOL,aux1480_BOOL,aux1482_BOOL,aux1483_BOOL,w_00001_00013_BOOL],aux1484_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux1485_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1486_BOOL);
constraint int_lin_eq([-1,1,1],[aux1487,2,s_00014],0);
constraint int_lt_reif(s_00005,aux1487,aux1488_BOOL);
constraint int_le_reif(s_00014, s_00005,aux1489_BOOL);
constraint array_bool_and([aux1485_BOOL,aux1486_BOOL,aux1488_BOOL,aux1489_BOOL,w_00001_00014_BOOL],aux1490_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux1491_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1492_BOOL);
constraint int_lin_eq([-1,1,1],[aux1493,1,s_00015],0);
constraint int_lt_reif(s_00005,aux1493,aux1494_BOOL);
constraint int_le_reif(s_00015, s_00005,aux1495_BOOL);
constraint array_bool_and([aux1491_BOOL,aux1492_BOOL,aux1494_BOOL,aux1495_BOOL,w_00001_00015_BOOL],aux1496_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux1497_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux1498_BOOL);
constraint int_lin_eq([-1,1,1],[aux1499,3,s_00016],0);
constraint int_lt_reif(s_00005,aux1499,aux1500_BOOL);
constraint int_le_reif(s_00016, s_00005,aux1501_BOOL);
constraint array_bool_and([aux1497_BOOL,aux1498_BOOL,aux1500_BOOL,aux1501_BOOL,w_00001_00016_BOOL],aux1502_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux1503_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux1504_BOOL);
constraint int_lin_eq([-1,1,1],[aux1505,1,s_00018],0);
constraint int_lt_reif(s_00005,aux1505,aux1506_BOOL);
constraint int_le_reif(s_00018, s_00005,aux1507_BOOL);
constraint array_bool_and([aux1503_BOOL,aux1504_BOOL,aux1506_BOOL,aux1507_BOOL,w_00001_00018_BOOL],aux1508_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux1509_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux1510_BOOL);
constraint int_lin_eq([-1,1,1],[aux1511,4,s_00017],0);
constraint int_lt_reif(s_00005,aux1511,aux1512_BOOL);
constraint int_le_reif(s_00017, s_00005,aux1513_BOOL);
constraint array_bool_and([aux1509_BOOL,aux1510_BOOL,aux1512_BOOL,aux1513_BOOL,w_00001_00017_BOOL],aux1514_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux1515_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux1516_BOOL);
constraint int_lin_eq([-1,1,1],[aux1517,4,s_00019],0);
constraint int_lt_reif(s_00005,aux1517,aux1518_BOOL);
constraint int_le_reif(s_00019, s_00005,aux1519_BOOL);
constraint array_bool_and([aux1515_BOOL,aux1516_BOOL,aux1518_BOOL,aux1519_BOOL,w_00001_00019_BOOL],aux1520_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux1521_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux1522_BOOL);
constraint int_lin_eq([-1,1,1],[aux1523,2,s_00020],0);
constraint int_lt_reif(s_00005,aux1523,aux1524_BOOL);
constraint int_le_reif(s_00020, s_00005,aux1525_BOOL);
constraint array_bool_and([aux1521_BOOL,aux1522_BOOL,aux1524_BOOL,aux1525_BOOL,w_00001_00020_BOOL],aux1526_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux1412_INTEGER,aux1418_INTEGER,aux1424_INTEGER,aux1430_INTEGER,aux1436_INTEGER,aux1442_INTEGER,aux1448_INTEGER,aux1454_INTEGER,aux1460_INTEGER,aux1466_INTEGER,aux1472_INTEGER,aux1478_INTEGER,aux1484_INTEGER,aux1490_INTEGER,aux1496_INTEGER,aux1502_INTEGER,aux1508_INTEGER,aux1514_INTEGER,aux1520_INTEGER,aux1526_INTEGER,1],0,aux1527_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1528_BOOL);
constraint int_lin_eq([-1,1,1],[aux1529,5,s_00010],0);
constraint int_lt_reif(s_00010,aux1529,aux1530_BOOL);
constraint array_bool_and([aux1528_BOOL,aux1530_BOOL,w_00001_00010_BOOL],aux1531_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux1532_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1533_BOOL);
constraint int_lin_eq([-1,1,1],[aux1534,4,s_00001],0);
constraint int_lt_reif(s_00010,aux1534,aux1535_BOOL);
constraint int_le_reif(s_00001, s_00010,aux1536_BOOL);
constraint array_bool_and([aux1532_BOOL,aux1533_BOOL,aux1535_BOOL,aux1536_BOOL,w_00001_00001_BOOL],aux1537_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1538_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1539_BOOL);
constraint int_lin_eq([-1,1,1],[aux1540,4,s_00002],0);
constraint int_lt_reif(s_00010,aux1540,aux1541_BOOL);
constraint int_le_reif(s_00002, s_00010,aux1542_BOOL);
constraint array_bool_and([aux1538_BOOL,aux1539_BOOL,aux1541_BOOL,aux1542_BOOL,w_00001_00002_BOOL],aux1543_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux1544_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1545_BOOL);
constraint int_lin_eq([-1,1,1],[aux1546,3,s_00003],0);
constraint int_lt_reif(s_00010,aux1546,aux1547_BOOL);
constraint int_le_reif(s_00003, s_00010,aux1548_BOOL);
constraint array_bool_and([aux1544_BOOL,aux1545_BOOL,aux1547_BOOL,aux1548_BOOL,w_00001_00003_BOOL],aux1549_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux1550_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1551_BOOL);
constraint int_lin_eq([-1,1,1],[aux1552,2,s_00004],0);
constraint int_lt_reif(s_00010,aux1552,aux1553_BOOL);
constraint int_le_reif(s_00004, s_00010,aux1554_BOOL);
constraint array_bool_and([aux1550_BOOL,aux1551_BOOL,aux1553_BOOL,aux1554_BOOL,w_00001_00004_BOOL],aux1555_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux1556_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1557_BOOL);
constraint int_lin_eq([-1,1,1],[aux1558,3,s_00005],0);
constraint int_lt_reif(s_00010,aux1558,aux1559_BOOL);
constraint int_le_reif(s_00005, s_00010,aux1560_BOOL);
constraint array_bool_and([aux1556_BOOL,aux1557_BOOL,aux1559_BOOL,aux1560_BOOL,w_00001_00005_BOOL],aux1561_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1562_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1563_BOOL);
constraint int_lin_eq([-1,1,1],[aux1564,2,s_00006],0);
constraint int_lt_reif(s_00010,aux1564,aux1565_BOOL);
constraint int_le_reif(s_00006, s_00010,aux1566_BOOL);
constraint array_bool_and([aux1562_BOOL,aux1563_BOOL,aux1565_BOOL,aux1566_BOOL,w_00001_00006_BOOL],aux1567_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux1568_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1569_BOOL);
constraint int_lin_eq([-1,1,1],[aux1570,3,s_00007],0);
constraint int_lt_reif(s_00010,aux1570,aux1571_BOOL);
constraint int_le_reif(s_00007, s_00010,aux1572_BOOL);
constraint array_bool_and([aux1568_BOOL,aux1569_BOOL,aux1571_BOOL,aux1572_BOOL,w_00001_00007_BOOL],aux1573_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux1574_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1575_BOOL);
constraint int_lin_eq([-1,1,1],[aux1576,2,s_00008],0);
constraint int_lt_reif(s_00010,aux1576,aux1577_BOOL);
constraint int_le_reif(s_00008, s_00010,aux1578_BOOL);
constraint array_bool_and([aux1574_BOOL,aux1575_BOOL,aux1577_BOOL,aux1578_BOOL,w_00001_00008_BOOL],aux1579_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux1580_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1581_BOOL);
constraint int_lin_eq([-1,1,1],[aux1582,2,s_00009],0);
constraint int_lt_reif(s_00010,aux1582,aux1583_BOOL);
constraint int_le_reif(s_00009, s_00010,aux1584_BOOL);
constraint array_bool_and([aux1580_BOOL,aux1581_BOOL,aux1583_BOOL,aux1584_BOOL,w_00001_00009_BOOL],aux1585_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1586_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux1587_BOOL);
constraint int_lin_eq([-1,1,1],[aux1588,3,s_00011],0);
constraint int_lt_reif(s_00010,aux1588,aux1589_BOOL);
constraint int_le_reif(s_00011, s_00010,aux1590_BOOL);
constraint array_bool_and([aux1586_BOOL,aux1587_BOOL,aux1589_BOOL,aux1590_BOOL,w_00001_00011_BOOL],aux1591_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1592_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux1593_BOOL);
constraint int_lin_eq([-1,1,1],[aux1594,4,s_00012],0);
constraint int_lt_reif(s_00010,aux1594,aux1595_BOOL);
constraint int_le_reif(s_00012, s_00010,aux1596_BOOL);
constraint array_bool_and([aux1592_BOOL,aux1593_BOOL,aux1595_BOOL,aux1596_BOOL,w_00001_00012_BOOL],aux1597_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1598_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1599_BOOL);
constraint int_lin_eq([-1,1,1],[aux1600,3,s_00013],0);
constraint int_lt_reif(s_00010,aux1600,aux1601_BOOL);
constraint int_le_reif(s_00013, s_00010,aux1602_BOOL);
constraint array_bool_and([aux1598_BOOL,aux1599_BOOL,aux1601_BOOL,aux1602_BOOL,w_00001_00013_BOOL],aux1603_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1604_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1605_BOOL);
constraint int_lin_eq([-1,1,1],[aux1606,2,s_00014],0);
constraint int_lt_reif(s_00010,aux1606,aux1607_BOOL);
constraint int_le_reif(s_00014, s_00010,aux1608_BOOL);
constraint array_bool_and([aux1604_BOOL,aux1605_BOOL,aux1607_BOOL,aux1608_BOOL,w_00001_00014_BOOL],aux1609_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1610_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1611_BOOL);
constraint int_lin_eq([-1,1,1],[aux1612,1,s_00015],0);
constraint int_lt_reif(s_00010,aux1612,aux1613_BOOL);
constraint int_le_reif(s_00015, s_00010,aux1614_BOOL);
constraint array_bool_and([aux1610_BOOL,aux1611_BOOL,aux1613_BOOL,aux1614_BOOL,w_00001_00015_BOOL],aux1615_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1616_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux1617_BOOL);
constraint int_lin_eq([-1,1,1],[aux1618,3,s_00016],0);
constraint int_lt_reif(s_00010,aux1618,aux1619_BOOL);
constraint int_le_reif(s_00016, s_00010,aux1620_BOOL);
constraint array_bool_and([aux1616_BOOL,aux1617_BOOL,aux1619_BOOL,aux1620_BOOL,w_00001_00016_BOOL],aux1621_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1622_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux1623_BOOL);
constraint int_lin_eq([-1,1,1],[aux1624,1,s_00018],0);
constraint int_lt_reif(s_00010,aux1624,aux1625_BOOL);
constraint int_le_reif(s_00018, s_00010,aux1626_BOOL);
constraint array_bool_and([aux1622_BOOL,aux1623_BOOL,aux1625_BOOL,aux1626_BOOL,w_00001_00018_BOOL],aux1627_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1628_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux1629_BOOL);
constraint int_lin_eq([-1,1,1],[aux1630,4,s_00017],0);
constraint int_lt_reif(s_00010,aux1630,aux1631_BOOL);
constraint int_le_reif(s_00017, s_00010,aux1632_BOOL);
constraint array_bool_and([aux1628_BOOL,aux1629_BOOL,aux1631_BOOL,aux1632_BOOL,w_00001_00017_BOOL],aux1633_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1634_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux1635_BOOL);
constraint int_lin_eq([-1,1,1],[aux1636,4,s_00019],0);
constraint int_lt_reif(s_00010,aux1636,aux1637_BOOL);
constraint int_le_reif(s_00019, s_00010,aux1638_BOOL);
constraint array_bool_and([aux1634_BOOL,aux1635_BOOL,aux1637_BOOL,aux1638_BOOL,w_00001_00019_BOOL],aux1639_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1640_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux1641_BOOL);
constraint int_lin_eq([-1,1,1],[aux1642,2,s_00020],0);
constraint int_lt_reif(s_00010,aux1642,aux1643_BOOL);
constraint int_le_reif(s_00020, s_00010,aux1644_BOOL);
constraint array_bool_and([aux1640_BOOL,aux1641_BOOL,aux1643_BOOL,aux1644_BOOL,w_00001_00020_BOOL],aux1645_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux1531_INTEGER,aux1537_INTEGER,aux1543_INTEGER,aux1549_INTEGER,aux1555_INTEGER,aux1561_INTEGER,aux1567_INTEGER,aux1573_INTEGER,aux1579_INTEGER,aux1585_INTEGER,aux1591_INTEGER,aux1597_INTEGER,aux1603_INTEGER,aux1609_INTEGER,aux1615_INTEGER,aux1621_INTEGER,aux1627_INTEGER,aux1633_INTEGER,aux1639_INTEGER,aux1645_INTEGER,1],0,aux1646_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1647_BOOL);
constraint int_lin_eq([-1,1,1],[aux1648,2,s_00014],0);
constraint int_lt_reif(s_00014,aux1648,aux1649_BOOL);
constraint array_bool_and([aux1647_BOOL,aux1649_BOOL,w_00001_00014_BOOL],aux1650_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux1651_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1652_BOOL);
constraint int_lin_eq([-1,1,1],[aux1653,4,s_00001],0);
constraint int_lt_reif(s_00014,aux1653,aux1654_BOOL);
constraint int_le_reif(s_00001, s_00014,aux1655_BOOL);
constraint array_bool_and([aux1651_BOOL,aux1652_BOOL,aux1654_BOOL,aux1655_BOOL,w_00001_00001_BOOL],aux1656_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1657_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1658_BOOL);
constraint int_lin_eq([-1,1,1],[aux1659,4,s_00002],0);
constraint int_lt_reif(s_00014,aux1659,aux1660_BOOL);
constraint int_le_reif(s_00002, s_00014,aux1661_BOOL);
constraint array_bool_and([aux1657_BOOL,aux1658_BOOL,aux1660_BOOL,aux1661_BOOL,w_00001_00002_BOOL],aux1662_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux1663_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1664_BOOL);
constraint int_lin_eq([-1,1,1],[aux1665,3,s_00003],0);
constraint int_lt_reif(s_00014,aux1665,aux1666_BOOL);
constraint int_le_reif(s_00003, s_00014,aux1667_BOOL);
constraint array_bool_and([aux1663_BOOL,aux1664_BOOL,aux1666_BOOL,aux1667_BOOL,w_00001_00003_BOOL],aux1668_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux1669_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1670_BOOL);
constraint int_lin_eq([-1,1,1],[aux1671,2,s_00004],0);
constraint int_lt_reif(s_00014,aux1671,aux1672_BOOL);
constraint int_le_reif(s_00004, s_00014,aux1673_BOOL);
constraint array_bool_and([aux1669_BOOL,aux1670_BOOL,aux1672_BOOL,aux1673_BOOL,w_00001_00004_BOOL],aux1674_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux1675_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1676_BOOL);
constraint int_lin_eq([-1,1,1],[aux1677,3,s_00005],0);
constraint int_lt_reif(s_00014,aux1677,aux1678_BOOL);
constraint int_le_reif(s_00005, s_00014,aux1679_BOOL);
constraint array_bool_and([aux1675_BOOL,aux1676_BOOL,aux1678_BOOL,aux1679_BOOL,w_00001_00005_BOOL],aux1680_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1681_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1682_BOOL);
constraint int_lin_eq([-1,1,1],[aux1683,2,s_00006],0);
constraint int_lt_reif(s_00014,aux1683,aux1684_BOOL);
constraint int_le_reif(s_00006, s_00014,aux1685_BOOL);
constraint array_bool_and([aux1681_BOOL,aux1682_BOOL,aux1684_BOOL,aux1685_BOOL,w_00001_00006_BOOL],aux1686_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux1687_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1688_BOOL);
constraint int_lin_eq([-1,1,1],[aux1689,3,s_00007],0);
constraint int_lt_reif(s_00014,aux1689,aux1690_BOOL);
constraint int_le_reif(s_00007, s_00014,aux1691_BOOL);
constraint array_bool_and([aux1687_BOOL,aux1688_BOOL,aux1690_BOOL,aux1691_BOOL,w_00001_00007_BOOL],aux1692_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux1693_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1694_BOOL);
constraint int_lin_eq([-1,1,1],[aux1695,2,s_00008],0);
constraint int_lt_reif(s_00014,aux1695,aux1696_BOOL);
constraint int_le_reif(s_00008, s_00014,aux1697_BOOL);
constraint array_bool_and([aux1693_BOOL,aux1694_BOOL,aux1696_BOOL,aux1697_BOOL,w_00001_00008_BOOL],aux1698_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux1699_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1700_BOOL);
constraint int_lin_eq([-1,1,1],[aux1701,2,s_00009],0);
constraint int_lt_reif(s_00014,aux1701,aux1702_BOOL);
constraint int_le_reif(s_00009, s_00014,aux1703_BOOL);
constraint array_bool_and([aux1699_BOOL,aux1700_BOOL,aux1702_BOOL,aux1703_BOOL,w_00001_00009_BOOL],aux1704_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1705_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1706_BOOL);
constraint int_lin_eq([-1,1,1],[aux1707,5,s_00010],0);
constraint int_lt_reif(s_00014,aux1707,aux1708_BOOL);
constraint int_le_reif(s_00010, s_00014,aux1709_BOOL);
constraint array_bool_and([aux1705_BOOL,aux1706_BOOL,aux1708_BOOL,aux1709_BOOL,w_00001_00010_BOOL],aux1710_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux1711_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1712_BOOL);
constraint int_lin_eq([-1,1,1],[aux1713,3,s_00011],0);
constraint int_lt_reif(s_00014,aux1713,aux1714_BOOL);
constraint int_le_reif(s_00011, s_00014,aux1715_BOOL);
constraint array_bool_and([aux1711_BOOL,aux1712_BOOL,aux1714_BOOL,aux1715_BOOL,w_00001_00011_BOOL],aux1716_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux1717_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1718_BOOL);
constraint int_lin_eq([-1,1,1],[aux1719,4,s_00012],0);
constraint int_lt_reif(s_00014,aux1719,aux1720_BOOL);
constraint int_le_reif(s_00012, s_00014,aux1721_BOOL);
constraint array_bool_and([aux1717_BOOL,aux1718_BOOL,aux1720_BOOL,aux1721_BOOL,w_00001_00012_BOOL],aux1722_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1723_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1724_BOOL);
constraint int_lin_eq([-1,1,1],[aux1725,3,s_00013],0);
constraint int_lt_reif(s_00014,aux1725,aux1726_BOOL);
constraint int_le_reif(s_00013, s_00014,aux1727_BOOL);
constraint array_bool_and([aux1723_BOOL,aux1724_BOOL,aux1726_BOOL,aux1727_BOOL,w_00001_00013_BOOL],aux1728_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1729_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1730_BOOL);
constraint int_lin_eq([-1,1,1],[aux1731,1,s_00015],0);
constraint int_lt_reif(s_00014,aux1731,aux1732_BOOL);
constraint int_le_reif(s_00015, s_00014,aux1733_BOOL);
constraint array_bool_and([aux1729_BOOL,aux1730_BOOL,aux1732_BOOL,aux1733_BOOL,w_00001_00015_BOOL],aux1734_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1735_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux1736_BOOL);
constraint int_lin_eq([-1,1,1],[aux1737,3,s_00016],0);
constraint int_lt_reif(s_00014,aux1737,aux1738_BOOL);
constraint int_le_reif(s_00016, s_00014,aux1739_BOOL);
constraint array_bool_and([aux1735_BOOL,aux1736_BOOL,aux1738_BOOL,aux1739_BOOL,w_00001_00016_BOOL],aux1740_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1741_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux1742_BOOL);
constraint int_lin_eq([-1,1,1],[aux1743,1,s_00018],0);
constraint int_lt_reif(s_00014,aux1743,aux1744_BOOL);
constraint int_le_reif(s_00018, s_00014,aux1745_BOOL);
constraint array_bool_and([aux1741_BOOL,aux1742_BOOL,aux1744_BOOL,aux1745_BOOL,w_00001_00018_BOOL],aux1746_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1747_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux1748_BOOL);
constraint int_lin_eq([-1,1,1],[aux1749,4,s_00017],0);
constraint int_lt_reif(s_00014,aux1749,aux1750_BOOL);
constraint int_le_reif(s_00017, s_00014,aux1751_BOOL);
constraint array_bool_and([aux1747_BOOL,aux1748_BOOL,aux1750_BOOL,aux1751_BOOL,w_00001_00017_BOOL],aux1752_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1753_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux1754_BOOL);
constraint int_lin_eq([-1,1,1],[aux1755,4,s_00019],0);
constraint int_lt_reif(s_00014,aux1755,aux1756_BOOL);
constraint int_le_reif(s_00019, s_00014,aux1757_BOOL);
constraint array_bool_and([aux1753_BOOL,aux1754_BOOL,aux1756_BOOL,aux1757_BOOL,w_00001_00019_BOOL],aux1758_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1759_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux1760_BOOL);
constraint int_lin_eq([-1,1,1],[aux1761,2,s_00020],0);
constraint int_lt_reif(s_00014,aux1761,aux1762_BOOL);
constraint int_le_reif(s_00020, s_00014,aux1763_BOOL);
constraint array_bool_and([aux1759_BOOL,aux1760_BOOL,aux1762_BOOL,aux1763_BOOL,w_00001_00020_BOOL],aux1764_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux1650_INTEGER,aux1656_INTEGER,aux1662_INTEGER,aux1668_INTEGER,aux1674_INTEGER,aux1680_INTEGER,aux1686_INTEGER,aux1692_INTEGER,aux1698_INTEGER,aux1704_INTEGER,aux1710_INTEGER,aux1716_INTEGER,aux1722_INTEGER,aux1728_INTEGER,aux1734_INTEGER,aux1740_INTEGER,aux1746_INTEGER,aux1752_INTEGER,aux1758_INTEGER,aux1764_INTEGER,1],0,aux1765_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux1766_BOOL);
constraint int_lin_eq([-1,1,1],[aux1767,4,s_00001],0);
constraint int_lt_reif(s_00001,aux1767,aux1768_BOOL);
constraint array_bool_and([aux1766_BOOL,aux1768_BOOL,w_00001_00001_BOOL],aux1769_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux1770_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1771_BOOL);
constraint int_lin_eq([-1,1,1],[aux1772,4,s_00002],0);
constraint int_lt_reif(s_00001,aux1772,aux1773_BOOL);
constraint int_le_reif(s_00002, s_00001,aux1774_BOOL);
constraint array_bool_and([aux1770_BOOL,aux1771_BOOL,aux1773_BOOL,aux1774_BOOL,w_00001_00002_BOOL],aux1775_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux1776_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux1777_BOOL);
constraint int_lin_eq([-1,1,1],[aux1778,3,s_00003],0);
constraint int_lt_reif(s_00001,aux1778,aux1779_BOOL);
constraint int_le_reif(s_00003, s_00001,aux1780_BOOL);
constraint array_bool_and([aux1776_BOOL,aux1777_BOOL,aux1779_BOOL,aux1780_BOOL,w_00001_00003_BOOL],aux1781_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux1782_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux1783_BOOL);
constraint int_lin_eq([-1,1,1],[aux1784,2,s_00004],0);
constraint int_lt_reif(s_00001,aux1784,aux1785_BOOL);
constraint int_le_reif(s_00004, s_00001,aux1786_BOOL);
constraint array_bool_and([aux1782_BOOL,aux1783_BOOL,aux1785_BOOL,aux1786_BOOL,w_00001_00004_BOOL],aux1787_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux1788_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux1789_BOOL);
constraint int_lin_eq([-1,1,1],[aux1790,3,s_00005],0);
constraint int_lt_reif(s_00001,aux1790,aux1791_BOOL);
constraint int_le_reif(s_00005, s_00001,aux1792_BOOL);
constraint array_bool_and([aux1788_BOOL,aux1789_BOOL,aux1791_BOOL,aux1792_BOOL,w_00001_00005_BOOL],aux1793_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux1794_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1795_BOOL);
constraint int_lin_eq([-1,1,1],[aux1796,2,s_00006],0);
constraint int_lt_reif(s_00001,aux1796,aux1797_BOOL);
constraint int_le_reif(s_00006, s_00001,aux1798_BOOL);
constraint array_bool_and([aux1794_BOOL,aux1795_BOOL,aux1797_BOOL,aux1798_BOOL,w_00001_00006_BOOL],aux1799_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux1800_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux1801_BOOL);
constraint int_lin_eq([-1,1,1],[aux1802,3,s_00007],0);
constraint int_lt_reif(s_00001,aux1802,aux1803_BOOL);
constraint int_le_reif(s_00007, s_00001,aux1804_BOOL);
constraint array_bool_and([aux1800_BOOL,aux1801_BOOL,aux1803_BOOL,aux1804_BOOL,w_00001_00007_BOOL],aux1805_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux1806_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux1807_BOOL);
constraint int_lin_eq([-1,1,1],[aux1808,2,s_00008],0);
constraint int_lt_reif(s_00001,aux1808,aux1809_BOOL);
constraint int_le_reif(s_00008, s_00001,aux1810_BOOL);
constraint array_bool_and([aux1806_BOOL,aux1807_BOOL,aux1809_BOOL,aux1810_BOOL,w_00001_00008_BOOL],aux1811_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux1812_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux1813_BOOL);
constraint int_lin_eq([-1,1,1],[aux1814,2,s_00009],0);
constraint int_lt_reif(s_00001,aux1814,aux1815_BOOL);
constraint int_le_reif(s_00009, s_00001,aux1816_BOOL);
constraint array_bool_and([aux1812_BOOL,aux1813_BOOL,aux1815_BOOL,aux1816_BOOL,w_00001_00009_BOOL],aux1817_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux1818_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux1819_BOOL);
constraint int_lin_eq([-1,1,1],[aux1820,3,s_00011],0);
constraint int_lt_reif(s_00001,aux1820,aux1821_BOOL);
constraint int_le_reif(s_00011, s_00001,aux1822_BOOL);
constraint array_bool_and([aux1818_BOOL,aux1819_BOOL,aux1821_BOOL,aux1822_BOOL,w_00001_00011_BOOL],aux1823_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux1824_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1825_BOOL);
constraint int_lin_eq([-1,1,1],[aux1826,5,s_00010],0);
constraint int_lt_reif(s_00001,aux1826,aux1827_BOOL);
constraint int_le_reif(s_00010, s_00001,aux1828_BOOL);
constraint array_bool_and([aux1824_BOOL,aux1825_BOOL,aux1827_BOOL,aux1828_BOOL,w_00001_00010_BOOL],aux1829_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux1830_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux1831_BOOL);
constraint int_lin_eq([-1,1,1],[aux1832,4,s_00012],0);
constraint int_lt_reif(s_00001,aux1832,aux1833_BOOL);
constraint int_le_reif(s_00012, s_00001,aux1834_BOOL);
constraint array_bool_and([aux1830_BOOL,aux1831_BOOL,aux1833_BOOL,aux1834_BOOL,w_00001_00012_BOOL],aux1835_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux1836_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1837_BOOL);
constraint int_lin_eq([-1,1,1],[aux1838,3,s_00013],0);
constraint int_lt_reif(s_00001,aux1838,aux1839_BOOL);
constraint int_le_reif(s_00013, s_00001,aux1840_BOOL);
constraint array_bool_and([aux1836_BOOL,aux1837_BOOL,aux1839_BOOL,aux1840_BOOL,w_00001_00013_BOOL],aux1841_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux1842_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1843_BOOL);
constraint int_lin_eq([-1,1,1],[aux1844,2,s_00014],0);
constraint int_lt_reif(s_00001,aux1844,aux1845_BOOL);
constraint int_le_reif(s_00014, s_00001,aux1846_BOOL);
constraint array_bool_and([aux1842_BOOL,aux1843_BOOL,aux1845_BOOL,aux1846_BOOL,w_00001_00014_BOOL],aux1847_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux1848_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1849_BOOL);
constraint int_lin_eq([-1,1,1],[aux1850,1,s_00015],0);
constraint int_lt_reif(s_00001,aux1850,aux1851_BOOL);
constraint int_le_reif(s_00015, s_00001,aux1852_BOOL);
constraint array_bool_and([aux1848_BOOL,aux1849_BOOL,aux1851_BOOL,aux1852_BOOL,w_00001_00015_BOOL],aux1853_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux1854_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux1855_BOOL);
constraint int_lin_eq([-1,1,1],[aux1856,3,s_00016],0);
constraint int_lt_reif(s_00001,aux1856,aux1857_BOOL);
constraint int_le_reif(s_00016, s_00001,aux1858_BOOL);
constraint array_bool_and([aux1854_BOOL,aux1855_BOOL,aux1857_BOOL,aux1858_BOOL,w_00001_00016_BOOL],aux1859_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux1860_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux1861_BOOL);
constraint int_lin_eq([-1,1,1],[aux1862,1,s_00018],0);
constraint int_lt_reif(s_00001,aux1862,aux1863_BOOL);
constraint int_le_reif(s_00018, s_00001,aux1864_BOOL);
constraint array_bool_and([aux1860_BOOL,aux1861_BOOL,aux1863_BOOL,aux1864_BOOL,w_00001_00018_BOOL],aux1865_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux1866_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux1867_BOOL);
constraint int_lin_eq([-1,1,1],[aux1868,4,s_00017],0);
constraint int_lt_reif(s_00001,aux1868,aux1869_BOOL);
constraint int_le_reif(s_00017, s_00001,aux1870_BOOL);
constraint array_bool_and([aux1866_BOOL,aux1867_BOOL,aux1869_BOOL,aux1870_BOOL,w_00001_00017_BOOL],aux1871_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux1872_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux1873_BOOL);
constraint int_lin_eq([-1,1,1],[aux1874,4,s_00019],0);
constraint int_lt_reif(s_00001,aux1874,aux1875_BOOL);
constraint int_le_reif(s_00019, s_00001,aux1876_BOOL);
constraint array_bool_and([aux1872_BOOL,aux1873_BOOL,aux1875_BOOL,aux1876_BOOL,w_00001_00019_BOOL],aux1877_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux1878_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux1879_BOOL);
constraint int_lin_eq([-1,1,1],[aux1880,2,s_00020],0);
constraint int_lt_reif(s_00001,aux1880,aux1881_BOOL);
constraint int_le_reif(s_00020, s_00001,aux1882_BOOL);
constraint array_bool_and([aux1878_BOOL,aux1879_BOOL,aux1881_BOOL,aux1882_BOOL,w_00001_00020_BOOL],aux1883_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux1769_INTEGER,aux1775_INTEGER,aux1781_INTEGER,aux1787_INTEGER,aux1793_INTEGER,aux1799_INTEGER,aux1805_INTEGER,aux1811_INTEGER,aux1817_INTEGER,aux1823_INTEGER,aux1829_INTEGER,aux1835_INTEGER,aux1841_INTEGER,aux1847_INTEGER,aux1853_INTEGER,aux1859_INTEGER,aux1865_INTEGER,aux1871_INTEGER,aux1877_INTEGER,aux1883_INTEGER,1],0,aux1884_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1885_BOOL);
constraint int_lin_eq([-1,1,1],[aux1886,1,s_00015],0);
constraint int_lt_reif(s_00015,aux1886,aux1887_BOOL);
constraint array_bool_and([aux1885_BOOL,aux1887_BOOL,w_00001_00015_BOOL],aux1888_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux1889_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1890_BOOL);
constraint int_lin_eq([-1,1,1],[aux1891,4,s_00001],0);
constraint int_lt_reif(s_00015,aux1891,aux1892_BOOL);
constraint int_le_reif(s_00001, s_00015,aux1893_BOOL);
constraint array_bool_and([aux1889_BOOL,aux1890_BOOL,aux1892_BOOL,aux1893_BOOL,w_00001_00001_BOOL],aux1894_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1895_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1896_BOOL);
constraint int_lin_eq([-1,1,1],[aux1897,4,s_00002],0);
constraint int_lt_reif(s_00015,aux1897,aux1898_BOOL);
constraint int_le_reif(s_00002, s_00015,aux1899_BOOL);
constraint array_bool_and([aux1895_BOOL,aux1896_BOOL,aux1898_BOOL,aux1899_BOOL,w_00001_00002_BOOL],aux1900_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux1901_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1902_BOOL);
constraint int_lin_eq([-1,1,1],[aux1903,3,s_00003],0);
constraint int_lt_reif(s_00015,aux1903,aux1904_BOOL);
constraint int_le_reif(s_00003, s_00015,aux1905_BOOL);
constraint array_bool_and([aux1901_BOOL,aux1902_BOOL,aux1904_BOOL,aux1905_BOOL,w_00001_00003_BOOL],aux1906_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux1907_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1908_BOOL);
constraint int_lin_eq([-1,1,1],[aux1909,2,s_00004],0);
constraint int_lt_reif(s_00015,aux1909,aux1910_BOOL);
constraint int_le_reif(s_00004, s_00015,aux1911_BOOL);
constraint array_bool_and([aux1907_BOOL,aux1908_BOOL,aux1910_BOOL,aux1911_BOOL,w_00001_00004_BOOL],aux1912_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux1913_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1914_BOOL);
constraint int_lin_eq([-1,1,1],[aux1915,3,s_00005],0);
constraint int_lt_reif(s_00015,aux1915,aux1916_BOOL);
constraint int_le_reif(s_00005, s_00015,aux1917_BOOL);
constraint array_bool_and([aux1913_BOOL,aux1914_BOOL,aux1916_BOOL,aux1917_BOOL,w_00001_00005_BOOL],aux1918_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1919_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1920_BOOL);
constraint int_lin_eq([-1,1,1],[aux1921,2,s_00006],0);
constraint int_lt_reif(s_00015,aux1921,aux1922_BOOL);
constraint int_le_reif(s_00006, s_00015,aux1923_BOOL);
constraint array_bool_and([aux1919_BOOL,aux1920_BOOL,aux1922_BOOL,aux1923_BOOL,w_00001_00006_BOOL],aux1924_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux1925_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1926_BOOL);
constraint int_lin_eq([-1,1,1],[aux1927,3,s_00007],0);
constraint int_lt_reif(s_00015,aux1927,aux1928_BOOL);
constraint int_le_reif(s_00007, s_00015,aux1929_BOOL);
constraint array_bool_and([aux1925_BOOL,aux1926_BOOL,aux1928_BOOL,aux1929_BOOL,w_00001_00007_BOOL],aux1930_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux1931_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1932_BOOL);
constraint int_lin_eq([-1,1,1],[aux1933,2,s_00008],0);
constraint int_lt_reif(s_00015,aux1933,aux1934_BOOL);
constraint int_le_reif(s_00008, s_00015,aux1935_BOOL);
constraint array_bool_and([aux1931_BOOL,aux1932_BOOL,aux1934_BOOL,aux1935_BOOL,w_00001_00008_BOOL],aux1936_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux1937_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1938_BOOL);
constraint int_lin_eq([-1,1,1],[aux1939,2,s_00009],0);
constraint int_lt_reif(s_00015,aux1939,aux1940_BOOL);
constraint int_le_reif(s_00009, s_00015,aux1941_BOOL);
constraint array_bool_and([aux1937_BOOL,aux1938_BOOL,aux1940_BOOL,aux1941_BOOL,w_00001_00009_BOOL],aux1942_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1943_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1944_BOOL);
constraint int_lin_eq([-1,1,1],[aux1945,5,s_00010],0);
constraint int_lt_reif(s_00015,aux1945,aux1946_BOOL);
constraint int_le_reif(s_00010, s_00015,aux1947_BOOL);
constraint array_bool_and([aux1943_BOOL,aux1944_BOOL,aux1946_BOOL,aux1947_BOOL,w_00001_00010_BOOL],aux1948_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux1949_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1950_BOOL);
constraint int_lin_eq([-1,1,1],[aux1951,3,s_00011],0);
constraint int_lt_reif(s_00015,aux1951,aux1952_BOOL);
constraint int_le_reif(s_00011, s_00015,aux1953_BOOL);
constraint array_bool_and([aux1949_BOOL,aux1950_BOOL,aux1952_BOOL,aux1953_BOOL,w_00001_00011_BOOL],aux1954_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux1955_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1956_BOOL);
constraint int_lin_eq([-1,1,1],[aux1957,4,s_00012],0);
constraint int_lt_reif(s_00015,aux1957,aux1958_BOOL);
constraint int_le_reif(s_00012, s_00015,aux1959_BOOL);
constraint array_bool_and([aux1955_BOOL,aux1956_BOOL,aux1958_BOOL,aux1959_BOOL,w_00001_00012_BOOL],aux1960_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1961_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1962_BOOL);
constraint int_lin_eq([-1,1,1],[aux1963,3,s_00013],0);
constraint int_lt_reif(s_00015,aux1963,aux1964_BOOL);
constraint int_le_reif(s_00013, s_00015,aux1965_BOOL);
constraint array_bool_and([aux1961_BOOL,aux1962_BOOL,aux1964_BOOL,aux1965_BOOL,w_00001_00013_BOOL],aux1966_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1967_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1968_BOOL);
constraint int_lin_eq([-1,1,1],[aux1969,2,s_00014],0);
constraint int_lt_reif(s_00015,aux1969,aux1970_BOOL);
constraint int_le_reif(s_00014, s_00015,aux1971_BOOL);
constraint array_bool_and([aux1967_BOOL,aux1968_BOOL,aux1970_BOOL,aux1971_BOOL,w_00001_00014_BOOL],aux1972_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1973_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux1974_BOOL);
constraint int_lin_eq([-1,1,1],[aux1975,3,s_00016],0);
constraint int_lt_reif(s_00015,aux1975,aux1976_BOOL);
constraint int_le_reif(s_00016, s_00015,aux1977_BOOL);
constraint array_bool_and([aux1973_BOOL,aux1974_BOOL,aux1976_BOOL,aux1977_BOOL,w_00001_00016_BOOL],aux1978_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1979_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux1980_BOOL);
constraint int_lin_eq([-1,1,1],[aux1981,1,s_00018],0);
constraint int_lt_reif(s_00015,aux1981,aux1982_BOOL);
constraint int_le_reif(s_00018, s_00015,aux1983_BOOL);
constraint array_bool_and([aux1979_BOOL,aux1980_BOOL,aux1982_BOOL,aux1983_BOOL,w_00001_00018_BOOL],aux1984_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1985_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux1986_BOOL);
constraint int_lin_eq([-1,1,1],[aux1987,4,s_00017],0);
constraint int_lt_reif(s_00015,aux1987,aux1988_BOOL);
constraint int_le_reif(s_00017, s_00015,aux1989_BOOL);
constraint array_bool_and([aux1985_BOOL,aux1986_BOOL,aux1988_BOOL,aux1989_BOOL,w_00001_00017_BOOL],aux1990_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1991_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux1992_BOOL);
constraint int_lin_eq([-1,1,1],[aux1993,4,s_00019],0);
constraint int_lt_reif(s_00015,aux1993,aux1994_BOOL);
constraint int_le_reif(s_00019, s_00015,aux1995_BOOL);
constraint array_bool_and([aux1991_BOOL,aux1992_BOOL,aux1994_BOOL,aux1995_BOOL,w_00001_00019_BOOL],aux1996_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1997_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux1998_BOOL);
constraint int_lin_eq([-1,1,1],[aux1999,2,s_00020],0);
constraint int_lt_reif(s_00015,aux1999,aux2000_BOOL);
constraint int_le_reif(s_00020, s_00015,aux2001_BOOL);
constraint array_bool_and([aux1997_BOOL,aux1998_BOOL,aux2000_BOOL,aux2001_BOOL,w_00001_00020_BOOL],aux2002_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux1888_INTEGER,aux1894_INTEGER,aux1900_INTEGER,aux1906_INTEGER,aux1912_INTEGER,aux1918_INTEGER,aux1924_INTEGER,aux1930_INTEGER,aux1936_INTEGER,aux1942_INTEGER,aux1948_INTEGER,aux1954_INTEGER,aux1960_INTEGER,aux1966_INTEGER,aux1972_INTEGER,aux1978_INTEGER,aux1984_INTEGER,aux1990_INTEGER,aux1996_INTEGER,aux2002_INTEGER,1],0,aux2003_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux2004_BOOL);
constraint int_lin_eq([-1,1,1],[aux2005,1,s_00018],0);
constraint int_lt_reif(s_00018,aux2005,aux2006_BOOL);
constraint array_bool_and([aux2004_BOOL,aux2006_BOOL,w_00001_00018_BOOL],aux2007_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux2008_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux2009_BOOL);
constraint int_lin_eq([-1,1,1],[aux2010,4,s_00001],0);
constraint int_lt_reif(s_00018,aux2010,aux2011_BOOL);
constraint int_le_reif(s_00001, s_00018,aux2012_BOOL);
constraint array_bool_and([aux2008_BOOL,aux2009_BOOL,aux2011_BOOL,aux2012_BOOL,w_00001_00001_BOOL],aux2013_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux2014_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux2015_BOOL);
constraint int_lin_eq([-1,1,1],[aux2016,4,s_00002],0);
constraint int_lt_reif(s_00018,aux2016,aux2017_BOOL);
constraint int_le_reif(s_00002, s_00018,aux2018_BOOL);
constraint array_bool_and([aux2014_BOOL,aux2015_BOOL,aux2017_BOOL,aux2018_BOOL,w_00001_00002_BOOL],aux2019_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux2020_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux2021_BOOL);
constraint int_lin_eq([-1,1,1],[aux2022,3,s_00003],0);
constraint int_lt_reif(s_00018,aux2022,aux2023_BOOL);
constraint int_le_reif(s_00003, s_00018,aux2024_BOOL);
constraint array_bool_and([aux2020_BOOL,aux2021_BOOL,aux2023_BOOL,aux2024_BOOL,w_00001_00003_BOOL],aux2025_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux2026_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux2027_BOOL);
constraint int_lin_eq([-1,1,1],[aux2028,2,s_00004],0);
constraint int_lt_reif(s_00018,aux2028,aux2029_BOOL);
constraint int_le_reif(s_00004, s_00018,aux2030_BOOL);
constraint array_bool_and([aux2026_BOOL,aux2027_BOOL,aux2029_BOOL,aux2030_BOOL,w_00001_00004_BOOL],aux2031_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux2032_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux2033_BOOL);
constraint int_lin_eq([-1,1,1],[aux2034,3,s_00005],0);
constraint int_lt_reif(s_00018,aux2034,aux2035_BOOL);
constraint int_le_reif(s_00005, s_00018,aux2036_BOOL);
constraint array_bool_and([aux2032_BOOL,aux2033_BOOL,aux2035_BOOL,aux2036_BOOL,w_00001_00005_BOOL],aux2037_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux2038_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux2039_BOOL);
constraint int_lin_eq([-1,1,1],[aux2040,2,s_00006],0);
constraint int_lt_reif(s_00018,aux2040,aux2041_BOOL);
constraint int_le_reif(s_00006, s_00018,aux2042_BOOL);
constraint array_bool_and([aux2038_BOOL,aux2039_BOOL,aux2041_BOOL,aux2042_BOOL,w_00001_00006_BOOL],aux2043_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux2044_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux2045_BOOL);
constraint int_lin_eq([-1,1,1],[aux2046,3,s_00007],0);
constraint int_lt_reif(s_00018,aux2046,aux2047_BOOL);
constraint int_le_reif(s_00007, s_00018,aux2048_BOOL);
constraint array_bool_and([aux2044_BOOL,aux2045_BOOL,aux2047_BOOL,aux2048_BOOL,w_00001_00007_BOOL],aux2049_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux2050_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux2051_BOOL);
constraint int_lin_eq([-1,1,1],[aux2052,2,s_00008],0);
constraint int_lt_reif(s_00018,aux2052,aux2053_BOOL);
constraint int_le_reif(s_00008, s_00018,aux2054_BOOL);
constraint array_bool_and([aux2050_BOOL,aux2051_BOOL,aux2053_BOOL,aux2054_BOOL,w_00001_00008_BOOL],aux2055_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux2056_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux2057_BOOL);
constraint int_lin_eq([-1,1,1],[aux2058,2,s_00009],0);
constraint int_lt_reif(s_00018,aux2058,aux2059_BOOL);
constraint int_le_reif(s_00009, s_00018,aux2060_BOOL);
constraint array_bool_and([aux2056_BOOL,aux2057_BOOL,aux2059_BOOL,aux2060_BOOL,w_00001_00009_BOOL],aux2061_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux2062_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux2063_BOOL);
constraint int_lin_eq([-1,1,1],[aux2064,5,s_00010],0);
constraint int_lt_reif(s_00018,aux2064,aux2065_BOOL);
constraint int_le_reif(s_00010, s_00018,aux2066_BOOL);
constraint array_bool_and([aux2062_BOOL,aux2063_BOOL,aux2065_BOOL,aux2066_BOOL,w_00001_00010_BOOL],aux2067_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux2068_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux2069_BOOL);
constraint int_lin_eq([-1,1,1],[aux2070,3,s_00011],0);
constraint int_lt_reif(s_00018,aux2070,aux2071_BOOL);
constraint int_le_reif(s_00011, s_00018,aux2072_BOOL);
constraint array_bool_and([aux2068_BOOL,aux2069_BOOL,aux2071_BOOL,aux2072_BOOL,w_00001_00011_BOOL],aux2073_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux2074_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux2075_BOOL);
constraint int_lin_eq([-1,1,1],[aux2076,4,s_00012],0);
constraint int_lt_reif(s_00018,aux2076,aux2077_BOOL);
constraint int_le_reif(s_00012, s_00018,aux2078_BOOL);
constraint array_bool_and([aux2074_BOOL,aux2075_BOOL,aux2077_BOOL,aux2078_BOOL,w_00001_00012_BOOL],aux2079_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux2080_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux2081_BOOL);
constraint int_lin_eq([-1,1,1],[aux2082,3,s_00013],0);
constraint int_lt_reif(s_00018,aux2082,aux2083_BOOL);
constraint int_le_reif(s_00013, s_00018,aux2084_BOOL);
constraint array_bool_and([aux2080_BOOL,aux2081_BOOL,aux2083_BOOL,aux2084_BOOL,w_00001_00013_BOOL],aux2085_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux2086_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux2087_BOOL);
constraint int_lin_eq([-1,1,1],[aux2088,2,s_00014],0);
constraint int_lt_reif(s_00018,aux2088,aux2089_BOOL);
constraint int_le_reif(s_00014, s_00018,aux2090_BOOL);
constraint array_bool_and([aux2086_BOOL,aux2087_BOOL,aux2089_BOOL,aux2090_BOOL,w_00001_00014_BOOL],aux2091_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux2092_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux2093_BOOL);
constraint int_lin_eq([-1,1,1],[aux2094,1,s_00015],0);
constraint int_lt_reif(s_00018,aux2094,aux2095_BOOL);
constraint int_le_reif(s_00015, s_00018,aux2096_BOOL);
constraint array_bool_and([aux2092_BOOL,aux2093_BOOL,aux2095_BOOL,aux2096_BOOL,w_00001_00015_BOOL],aux2097_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux2098_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux2099_BOOL);
constraint int_lin_eq([-1,1,1],[aux2100,3,s_00016],0);
constraint int_lt_reif(s_00018,aux2100,aux2101_BOOL);
constraint int_le_reif(s_00016, s_00018,aux2102_BOOL);
constraint array_bool_and([aux2098_BOOL,aux2099_BOOL,aux2101_BOOL,aux2102_BOOL,w_00001_00016_BOOL],aux2103_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux2104_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux2105_BOOL);
constraint int_lin_eq([-1,1,1],[aux2106,4,s_00017],0);
constraint int_lt_reif(s_00018,aux2106,aux2107_BOOL);
constraint int_le_reif(s_00017, s_00018,aux2108_BOOL);
constraint array_bool_and([aux2104_BOOL,aux2105_BOOL,aux2107_BOOL,aux2108_BOOL,w_00001_00017_BOOL],aux2109_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux2110_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux2111_BOOL);
constraint int_lin_eq([-1,1,1],[aux2112,4,s_00019],0);
constraint int_lt_reif(s_00018,aux2112,aux2113_BOOL);
constraint int_le_reif(s_00019, s_00018,aux2114_BOOL);
constraint array_bool_and([aux2110_BOOL,aux2111_BOOL,aux2113_BOOL,aux2114_BOOL,w_00001_00019_BOOL],aux2115_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux2116_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux2117_BOOL);
constraint int_lin_eq([-1,1,1],[aux2118,2,s_00020],0);
constraint int_lt_reif(s_00018,aux2118,aux2119_BOOL);
constraint int_le_reif(s_00020, s_00018,aux2120_BOOL);
constraint array_bool_and([aux2116_BOOL,aux2117_BOOL,aux2119_BOOL,aux2120_BOOL,w_00001_00020_BOOL],aux2121_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux2007_INTEGER,aux2013_INTEGER,aux2019_INTEGER,aux2025_INTEGER,aux2031_INTEGER,aux2037_INTEGER,aux2043_INTEGER,aux2049_INTEGER,aux2055_INTEGER,aux2061_INTEGER,aux2067_INTEGER,aux2073_INTEGER,aux2079_INTEGER,aux2085_INTEGER,aux2091_INTEGER,aux2097_INTEGER,aux2103_INTEGER,aux2109_INTEGER,aux2115_INTEGER,aux2121_INTEGER,1],0,aux2122_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux2123_BOOL);
constraint int_lin_eq([-1,1,1],[aux2124,3,s_00007],0);
constraint int_lt_reif(s_00007,aux2124,aux2125_BOOL);
constraint array_bool_and([aux2123_BOOL,aux2125_BOOL,w_00001_00007_BOOL],aux2126_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux2127_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux2128_BOOL);
constraint int_lin_eq([-1,1,1],[aux2129,4,s_00001],0);
constraint int_lt_reif(s_00007,aux2129,aux2130_BOOL);
constraint int_le_reif(s_00001, s_00007,aux2131_BOOL);
constraint array_bool_and([aux2127_BOOL,aux2128_BOOL,aux2130_BOOL,aux2131_BOOL,w_00001_00001_BOOL],aux2132_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux2133_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux2134_BOOL);
constraint int_lin_eq([-1,1,1],[aux2135,4,s_00002],0);
constraint int_lt_reif(s_00007,aux2135,aux2136_BOOL);
constraint int_le_reif(s_00002, s_00007,aux2137_BOOL);
constraint array_bool_and([aux2133_BOOL,aux2134_BOOL,aux2136_BOOL,aux2137_BOOL,w_00001_00002_BOOL],aux2138_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux2139_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux2140_BOOL);
constraint int_lin_eq([-1,1,1],[aux2141,3,s_00003],0);
constraint int_lt_reif(s_00007,aux2141,aux2142_BOOL);
constraint int_le_reif(s_00003, s_00007,aux2143_BOOL);
constraint array_bool_and([aux2139_BOOL,aux2140_BOOL,aux2142_BOOL,aux2143_BOOL,w_00001_00003_BOOL],aux2144_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux2145_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux2146_BOOL);
constraint int_lin_eq([-1,1,1],[aux2147,2,s_00004],0);
constraint int_lt_reif(s_00007,aux2147,aux2148_BOOL);
constraint int_le_reif(s_00004, s_00007,aux2149_BOOL);
constraint array_bool_and([aux2145_BOOL,aux2146_BOOL,aux2148_BOOL,aux2149_BOOL,w_00001_00004_BOOL],aux2150_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux2151_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux2152_BOOL);
constraint int_lin_eq([-1,1,1],[aux2153,3,s_00005],0);
constraint int_lt_reif(s_00007,aux2153,aux2154_BOOL);
constraint int_le_reif(s_00005, s_00007,aux2155_BOOL);
constraint array_bool_and([aux2151_BOOL,aux2152_BOOL,aux2154_BOOL,aux2155_BOOL,w_00001_00005_BOOL],aux2156_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux2157_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux2158_BOOL);
constraint int_lin_eq([-1,1,1],[aux2159,2,s_00006],0);
constraint int_lt_reif(s_00007,aux2159,aux2160_BOOL);
constraint int_le_reif(s_00006, s_00007,aux2161_BOOL);
constraint array_bool_and([aux2157_BOOL,aux2158_BOOL,aux2160_BOOL,aux2161_BOOL,w_00001_00006_BOOL],aux2162_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux2163_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux2164_BOOL);
constraint int_lin_eq([-1,1,1],[aux2165,2,s_00008],0);
constraint int_lt_reif(s_00007,aux2165,aux2166_BOOL);
constraint int_le_reif(s_00008, s_00007,aux2167_BOOL);
constraint array_bool_and([aux2163_BOOL,aux2164_BOOL,aux2166_BOOL,aux2167_BOOL,w_00001_00008_BOOL],aux2168_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux2169_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux2170_BOOL);
constraint int_lin_eq([-1,1,1],[aux2171,2,s_00009],0);
constraint int_lt_reif(s_00007,aux2171,aux2172_BOOL);
constraint int_le_reif(s_00009, s_00007,aux2173_BOOL);
constraint array_bool_and([aux2169_BOOL,aux2170_BOOL,aux2172_BOOL,aux2173_BOOL,w_00001_00009_BOOL],aux2174_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux2175_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux2176_BOOL);
constraint int_lin_eq([-1,1,1],[aux2177,3,s_00011],0);
constraint int_lt_reif(s_00007,aux2177,aux2178_BOOL);
constraint int_le_reif(s_00011, s_00007,aux2179_BOOL);
constraint array_bool_and([aux2175_BOOL,aux2176_BOOL,aux2178_BOOL,aux2179_BOOL,w_00001_00011_BOOL],aux2180_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux2181_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux2182_BOOL);
constraint int_lin_eq([-1,1,1],[aux2183,5,s_00010],0);
constraint int_lt_reif(s_00007,aux2183,aux2184_BOOL);
constraint int_le_reif(s_00010, s_00007,aux2185_BOOL);
constraint array_bool_and([aux2181_BOOL,aux2182_BOOL,aux2184_BOOL,aux2185_BOOL,w_00001_00010_BOOL],aux2186_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux2187_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux2188_BOOL);
constraint int_lin_eq([-1,1,1],[aux2189,4,s_00012],0);
constraint int_lt_reif(s_00007,aux2189,aux2190_BOOL);
constraint int_le_reif(s_00012, s_00007,aux2191_BOOL);
constraint array_bool_and([aux2187_BOOL,aux2188_BOOL,aux2190_BOOL,aux2191_BOOL,w_00001_00012_BOOL],aux2192_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux2193_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux2194_BOOL);
constraint int_lin_eq([-1,1,1],[aux2195,3,s_00013],0);
constraint int_lt_reif(s_00007,aux2195,aux2196_BOOL);
constraint int_le_reif(s_00013, s_00007,aux2197_BOOL);
constraint array_bool_and([aux2193_BOOL,aux2194_BOOL,aux2196_BOOL,aux2197_BOOL,w_00001_00013_BOOL],aux2198_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux2199_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux2200_BOOL);
constraint int_lin_eq([-1,1,1],[aux2201,2,s_00014],0);
constraint int_lt_reif(s_00007,aux2201,aux2202_BOOL);
constraint int_le_reif(s_00014, s_00007,aux2203_BOOL);
constraint array_bool_and([aux2199_BOOL,aux2200_BOOL,aux2202_BOOL,aux2203_BOOL,w_00001_00014_BOOL],aux2204_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux2205_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux2206_BOOL);
constraint int_lin_eq([-1,1,1],[aux2207,1,s_00015],0);
constraint int_lt_reif(s_00007,aux2207,aux2208_BOOL);
constraint int_le_reif(s_00015, s_00007,aux2209_BOOL);
constraint array_bool_and([aux2205_BOOL,aux2206_BOOL,aux2208_BOOL,aux2209_BOOL,w_00001_00015_BOOL],aux2210_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux2211_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux2212_BOOL);
constraint int_lin_eq([-1,1,1],[aux2213,3,s_00016],0);
constraint int_lt_reif(s_00007,aux2213,aux2214_BOOL);
constraint int_le_reif(s_00016, s_00007,aux2215_BOOL);
constraint array_bool_and([aux2211_BOOL,aux2212_BOOL,aux2214_BOOL,aux2215_BOOL,w_00001_00016_BOOL],aux2216_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux2217_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux2218_BOOL);
constraint int_lin_eq([-1,1,1],[aux2219,1,s_00018],0);
constraint int_lt_reif(s_00007,aux2219,aux2220_BOOL);
constraint int_le_reif(s_00018, s_00007,aux2221_BOOL);
constraint array_bool_and([aux2217_BOOL,aux2218_BOOL,aux2220_BOOL,aux2221_BOOL,w_00001_00018_BOOL],aux2222_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux2223_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux2224_BOOL);
constraint int_lin_eq([-1,1,1],[aux2225,4,s_00017],0);
constraint int_lt_reif(s_00007,aux2225,aux2226_BOOL);
constraint int_le_reif(s_00017, s_00007,aux2227_BOOL);
constraint array_bool_and([aux2223_BOOL,aux2224_BOOL,aux2226_BOOL,aux2227_BOOL,w_00001_00017_BOOL],aux2228_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux2229_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux2230_BOOL);
constraint int_lin_eq([-1,1,1],[aux2231,4,s_00019],0);
constraint int_lt_reif(s_00007,aux2231,aux2232_BOOL);
constraint int_le_reif(s_00019, s_00007,aux2233_BOOL);
constraint array_bool_and([aux2229_BOOL,aux2230_BOOL,aux2232_BOOL,aux2233_BOOL,w_00001_00019_BOOL],aux2234_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux2235_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux2236_BOOL);
constraint int_lin_eq([-1,1,1],[aux2237,2,s_00020],0);
constraint int_lt_reif(s_00007,aux2237,aux2238_BOOL);
constraint int_le_reif(s_00020, s_00007,aux2239_BOOL);
constraint array_bool_and([aux2235_BOOL,aux2236_BOOL,aux2238_BOOL,aux2239_BOOL,w_00001_00020_BOOL],aux2240_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux2126_INTEGER,aux2132_INTEGER,aux2138_INTEGER,aux2144_INTEGER,aux2150_INTEGER,aux2156_INTEGER,aux2162_INTEGER,aux2168_INTEGER,aux2174_INTEGER,aux2180_INTEGER,aux2186_INTEGER,aux2192_INTEGER,aux2198_INTEGER,aux2204_INTEGER,aux2210_INTEGER,aux2216_INTEGER,aux2222_INTEGER,aux2228_INTEGER,aux2234_INTEGER,aux2240_INTEGER,1],0,aux2241_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux2242_BOOL);
constraint int_lin_eq([-1,1,1],[aux2243,2,s_00008],0);
constraint int_lt_reif(s_00008,aux2243,aux2244_BOOL);
constraint array_bool_and([aux2242_BOOL,aux2244_BOOL,w_00001_00008_BOOL],aux2245_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux2246_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux2247_BOOL);
constraint int_lin_eq([-1,1,1],[aux2248,4,s_00001],0);
constraint int_lt_reif(s_00008,aux2248,aux2249_BOOL);
constraint int_le_reif(s_00001, s_00008,aux2250_BOOL);
constraint array_bool_and([aux2246_BOOL,aux2247_BOOL,aux2249_BOOL,aux2250_BOOL,w_00001_00001_BOOL],aux2251_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux2252_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux2253_BOOL);
constraint int_lin_eq([-1,1,1],[aux2254,4,s_00002],0);
constraint int_lt_reif(s_00008,aux2254,aux2255_BOOL);
constraint int_le_reif(s_00002, s_00008,aux2256_BOOL);
constraint array_bool_and([aux2252_BOOL,aux2253_BOOL,aux2255_BOOL,aux2256_BOOL,w_00001_00002_BOOL],aux2257_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux2258_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux2259_BOOL);
constraint int_lin_eq([-1,1,1],[aux2260,3,s_00003],0);
constraint int_lt_reif(s_00008,aux2260,aux2261_BOOL);
constraint int_le_reif(s_00003, s_00008,aux2262_BOOL);
constraint array_bool_and([aux2258_BOOL,aux2259_BOOL,aux2261_BOOL,aux2262_BOOL,w_00001_00003_BOOL],aux2263_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux2264_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux2265_BOOL);
constraint int_lin_eq([-1,1,1],[aux2266,2,s_00004],0);
constraint int_lt_reif(s_00008,aux2266,aux2267_BOOL);
constraint int_le_reif(s_00004, s_00008,aux2268_BOOL);
constraint array_bool_and([aux2264_BOOL,aux2265_BOOL,aux2267_BOOL,aux2268_BOOL,w_00001_00004_BOOL],aux2269_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux2270_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux2271_BOOL);
constraint int_lin_eq([-1,1,1],[aux2272,3,s_00005],0);
constraint int_lt_reif(s_00008,aux2272,aux2273_BOOL);
constraint int_le_reif(s_00005, s_00008,aux2274_BOOL);
constraint array_bool_and([aux2270_BOOL,aux2271_BOOL,aux2273_BOOL,aux2274_BOOL,w_00001_00005_BOOL],aux2275_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux2276_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux2277_BOOL);
constraint int_lin_eq([-1,1,1],[aux2278,2,s_00006],0);
constraint int_lt_reif(s_00008,aux2278,aux2279_BOOL);
constraint int_le_reif(s_00006, s_00008,aux2280_BOOL);
constraint array_bool_and([aux2276_BOOL,aux2277_BOOL,aux2279_BOOL,aux2280_BOOL,w_00001_00006_BOOL],aux2281_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux2282_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux2283_BOOL);
constraint int_lin_eq([-1,1,1],[aux2284,3,s_00007],0);
constraint int_lt_reif(s_00008,aux2284,aux2285_BOOL);
constraint int_le_reif(s_00007, s_00008,aux2286_BOOL);
constraint array_bool_and([aux2282_BOOL,aux2283_BOOL,aux2285_BOOL,aux2286_BOOL,w_00001_00007_BOOL],aux2287_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux2288_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux2289_BOOL);
constraint int_lin_eq([-1,1,1],[aux2290,2,s_00009],0);
constraint int_lt_reif(s_00008,aux2290,aux2291_BOOL);
constraint int_le_reif(s_00009, s_00008,aux2292_BOOL);
constraint array_bool_and([aux2288_BOOL,aux2289_BOOL,aux2291_BOOL,aux2292_BOOL,w_00001_00009_BOOL],aux2293_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux2294_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux2295_BOOL);
constraint int_lin_eq([-1,1,1],[aux2296,3,s_00011],0);
constraint int_lt_reif(s_00008,aux2296,aux2297_BOOL);
constraint int_le_reif(s_00011, s_00008,aux2298_BOOL);
constraint array_bool_and([aux2294_BOOL,aux2295_BOOL,aux2297_BOOL,aux2298_BOOL,w_00001_00011_BOOL],aux2299_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux2300_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux2301_BOOL);
constraint int_lin_eq([-1,1,1],[aux2302,5,s_00010],0);
constraint int_lt_reif(s_00008,aux2302,aux2303_BOOL);
constraint int_le_reif(s_00010, s_00008,aux2304_BOOL);
constraint array_bool_and([aux2300_BOOL,aux2301_BOOL,aux2303_BOOL,aux2304_BOOL,w_00001_00010_BOOL],aux2305_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux2306_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux2307_BOOL);
constraint int_lin_eq([-1,1,1],[aux2308,4,s_00012],0);
constraint int_lt_reif(s_00008,aux2308,aux2309_BOOL);
constraint int_le_reif(s_00012, s_00008,aux2310_BOOL);
constraint array_bool_and([aux2306_BOOL,aux2307_BOOL,aux2309_BOOL,aux2310_BOOL,w_00001_00012_BOOL],aux2311_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux2312_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux2313_BOOL);
constraint int_lin_eq([-1,1,1],[aux2314,3,s_00013],0);
constraint int_lt_reif(s_00008,aux2314,aux2315_BOOL);
constraint int_le_reif(s_00013, s_00008,aux2316_BOOL);
constraint array_bool_and([aux2312_BOOL,aux2313_BOOL,aux2315_BOOL,aux2316_BOOL,w_00001_00013_BOOL],aux2317_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux2318_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux2319_BOOL);
constraint int_lin_eq([-1,1,1],[aux2320,2,s_00014],0);
constraint int_lt_reif(s_00008,aux2320,aux2321_BOOL);
constraint int_le_reif(s_00014, s_00008,aux2322_BOOL);
constraint array_bool_and([aux2318_BOOL,aux2319_BOOL,aux2321_BOOL,aux2322_BOOL,w_00001_00014_BOOL],aux2323_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux2324_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux2325_BOOL);
constraint int_lin_eq([-1,1,1],[aux2326,1,s_00015],0);
constraint int_lt_reif(s_00008,aux2326,aux2327_BOOL);
constraint int_le_reif(s_00015, s_00008,aux2328_BOOL);
constraint array_bool_and([aux2324_BOOL,aux2325_BOOL,aux2327_BOOL,aux2328_BOOL,w_00001_00015_BOOL],aux2329_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux2330_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux2331_BOOL);
constraint int_lin_eq([-1,1,1],[aux2332,3,s_00016],0);
constraint int_lt_reif(s_00008,aux2332,aux2333_BOOL);
constraint int_le_reif(s_00016, s_00008,aux2334_BOOL);
constraint array_bool_and([aux2330_BOOL,aux2331_BOOL,aux2333_BOOL,aux2334_BOOL,w_00001_00016_BOOL],aux2335_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux2336_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux2337_BOOL);
constraint int_lin_eq([-1,1,1],[aux2338,1,s_00018],0);
constraint int_lt_reif(s_00008,aux2338,aux2339_BOOL);
constraint int_le_reif(s_00018, s_00008,aux2340_BOOL);
constraint array_bool_and([aux2336_BOOL,aux2337_BOOL,aux2339_BOOL,aux2340_BOOL,w_00001_00018_BOOL],aux2341_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux2342_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux2343_BOOL);
constraint int_lin_eq([-1,1,1],[aux2344,4,s_00017],0);
constraint int_lt_reif(s_00008,aux2344,aux2345_BOOL);
constraint int_le_reif(s_00017, s_00008,aux2346_BOOL);
constraint array_bool_and([aux2342_BOOL,aux2343_BOOL,aux2345_BOOL,aux2346_BOOL,w_00001_00017_BOOL],aux2347_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux2348_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux2349_BOOL);
constraint int_lin_eq([-1,1,1],[aux2350,4,s_00019],0);
constraint int_lt_reif(s_00008,aux2350,aux2351_BOOL);
constraint int_le_reif(s_00019, s_00008,aux2352_BOOL);
constraint array_bool_and([aux2348_BOOL,aux2349_BOOL,aux2351_BOOL,aux2352_BOOL,w_00001_00019_BOOL],aux2353_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux2354_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux2355_BOOL);
constraint int_lin_eq([-1,1,1],[aux2356,2,s_00020],0);
constraint int_lt_reif(s_00008,aux2356,aux2357_BOOL);
constraint int_le_reif(s_00020, s_00008,aux2358_BOOL);
constraint array_bool_and([aux2354_BOOL,aux2355_BOOL,aux2357_BOOL,aux2358_BOOL,w_00001_00020_BOOL],aux2359_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux2245_INTEGER,aux2251_INTEGER,aux2257_INTEGER,aux2263_INTEGER,aux2269_INTEGER,aux2275_INTEGER,aux2281_INTEGER,aux2287_INTEGER,aux2293_INTEGER,aux2299_INTEGER,aux2305_INTEGER,aux2311_INTEGER,aux2317_INTEGER,aux2323_INTEGER,aux2329_INTEGER,aux2335_INTEGER,aux2341_INTEGER,aux2347_INTEGER,aux2353_INTEGER,aux2359_INTEGER,1],0,aux2360_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux2361_BOOL);
constraint int_lin_eq([-1,1,1],[aux2362,2,s_00020],0);
constraint int_lt_reif(s_00020,aux2362,aux2363_BOOL);
constraint array_bool_and([aux2361_BOOL,aux2363_BOOL,w_00001_00020_BOOL],aux2364_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux2365_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux2366_BOOL);
constraint int_lin_eq([-1,1,1],[aux2367,4,s_00001],0);
constraint int_lt_reif(s_00020,aux2367,aux2368_BOOL);
constraint int_le_reif(s_00001, s_00020,aux2369_BOOL);
constraint array_bool_and([aux2365_BOOL,aux2366_BOOL,aux2368_BOOL,aux2369_BOOL,w_00001_00001_BOOL],aux2370_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux2371_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux2372_BOOL);
constraint int_lin_eq([-1,1,1],[aux2373,4,s_00002],0);
constraint int_lt_reif(s_00020,aux2373,aux2374_BOOL);
constraint int_le_reif(s_00002, s_00020,aux2375_BOOL);
constraint array_bool_and([aux2371_BOOL,aux2372_BOOL,aux2374_BOOL,aux2375_BOOL,w_00001_00002_BOOL],aux2376_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux2377_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux2378_BOOL);
constraint int_lin_eq([-1,1,1],[aux2379,3,s_00003],0);
constraint int_lt_reif(s_00020,aux2379,aux2380_BOOL);
constraint int_le_reif(s_00003, s_00020,aux2381_BOOL);
constraint array_bool_and([aux2377_BOOL,aux2378_BOOL,aux2380_BOOL,aux2381_BOOL,w_00001_00003_BOOL],aux2382_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux2383_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux2384_BOOL);
constraint int_lin_eq([-1,1,1],[aux2385,2,s_00004],0);
constraint int_lt_reif(s_00020,aux2385,aux2386_BOOL);
constraint int_le_reif(s_00004, s_00020,aux2387_BOOL);
constraint array_bool_and([aux2383_BOOL,aux2384_BOOL,aux2386_BOOL,aux2387_BOOL,w_00001_00004_BOOL],aux2388_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux2389_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux2390_BOOL);
constraint int_lin_eq([-1,1,1],[aux2391,3,s_00005],0);
constraint int_lt_reif(s_00020,aux2391,aux2392_BOOL);
constraint int_le_reif(s_00005, s_00020,aux2393_BOOL);
constraint array_bool_and([aux2389_BOOL,aux2390_BOOL,aux2392_BOOL,aux2393_BOOL,w_00001_00005_BOOL],aux2394_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux2395_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux2396_BOOL);
constraint int_lin_eq([-1,1,1],[aux2397,2,s_00006],0);
constraint int_lt_reif(s_00020,aux2397,aux2398_BOOL);
constraint int_le_reif(s_00006, s_00020,aux2399_BOOL);
constraint array_bool_and([aux2395_BOOL,aux2396_BOOL,aux2398_BOOL,aux2399_BOOL,w_00001_00006_BOOL],aux2400_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux2401_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux2402_BOOL);
constraint int_lin_eq([-1,1,1],[aux2403,3,s_00007],0);
constraint int_lt_reif(s_00020,aux2403,aux2404_BOOL);
constraint int_le_reif(s_00007, s_00020,aux2405_BOOL);
constraint array_bool_and([aux2401_BOOL,aux2402_BOOL,aux2404_BOOL,aux2405_BOOL,w_00001_00007_BOOL],aux2406_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux2407_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux2408_BOOL);
constraint int_lin_eq([-1,1,1],[aux2409,2,s_00008],0);
constraint int_lt_reif(s_00020,aux2409,aux2410_BOOL);
constraint int_le_reif(s_00008, s_00020,aux2411_BOOL);
constraint array_bool_and([aux2407_BOOL,aux2408_BOOL,aux2410_BOOL,aux2411_BOOL,w_00001_00008_BOOL],aux2412_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux2413_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux2414_BOOL);
constraint int_lin_eq([-1,1,1],[aux2415,2,s_00009],0);
constraint int_lt_reif(s_00020,aux2415,aux2416_BOOL);
constraint int_le_reif(s_00009, s_00020,aux2417_BOOL);
constraint array_bool_and([aux2413_BOOL,aux2414_BOOL,aux2416_BOOL,aux2417_BOOL,w_00001_00009_BOOL],aux2418_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux2419_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux2420_BOOL);
constraint int_lin_eq([-1,1,1],[aux2421,5,s_00010],0);
constraint int_lt_reif(s_00020,aux2421,aux2422_BOOL);
constraint int_le_reif(s_00010, s_00020,aux2423_BOOL);
constraint array_bool_and([aux2419_BOOL,aux2420_BOOL,aux2422_BOOL,aux2423_BOOL,w_00001_00010_BOOL],aux2424_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux2425_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux2426_BOOL);
constraint int_lin_eq([-1,1,1],[aux2427,3,s_00011],0);
constraint int_lt_reif(s_00020,aux2427,aux2428_BOOL);
constraint int_le_reif(s_00011, s_00020,aux2429_BOOL);
constraint array_bool_and([aux2425_BOOL,aux2426_BOOL,aux2428_BOOL,aux2429_BOOL,w_00001_00011_BOOL],aux2430_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux2431_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux2432_BOOL);
constraint int_lin_eq([-1,1,1],[aux2433,4,s_00012],0);
constraint int_lt_reif(s_00020,aux2433,aux2434_BOOL);
constraint int_le_reif(s_00012, s_00020,aux2435_BOOL);
constraint array_bool_and([aux2431_BOOL,aux2432_BOOL,aux2434_BOOL,aux2435_BOOL,w_00001_00012_BOOL],aux2436_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux2437_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux2438_BOOL);
constraint int_lin_eq([-1,1,1],[aux2439,3,s_00013],0);
constraint int_lt_reif(s_00020,aux2439,aux2440_BOOL);
constraint int_le_reif(s_00013, s_00020,aux2441_BOOL);
constraint array_bool_and([aux2437_BOOL,aux2438_BOOL,aux2440_BOOL,aux2441_BOOL,w_00001_00013_BOOL],aux2442_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux2443_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux2444_BOOL);
constraint int_lin_eq([-1,1,1],[aux2445,2,s_00014],0);
constraint int_lt_reif(s_00020,aux2445,aux2446_BOOL);
constraint int_le_reif(s_00014, s_00020,aux2447_BOOL);
constraint array_bool_and([aux2443_BOOL,aux2444_BOOL,aux2446_BOOL,aux2447_BOOL,w_00001_00014_BOOL],aux2448_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux2449_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux2450_BOOL);
constraint int_lin_eq([-1,1,1],[aux2451,1,s_00015],0);
constraint int_lt_reif(s_00020,aux2451,aux2452_BOOL);
constraint int_le_reif(s_00015, s_00020,aux2453_BOOL);
constraint array_bool_and([aux2449_BOOL,aux2450_BOOL,aux2452_BOOL,aux2453_BOOL,w_00001_00015_BOOL],aux2454_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux2455_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux2456_BOOL);
constraint int_lin_eq([-1,1,1],[aux2457,3,s_00016],0);
constraint int_lt_reif(s_00020,aux2457,aux2458_BOOL);
constraint int_le_reif(s_00016, s_00020,aux2459_BOOL);
constraint array_bool_and([aux2455_BOOL,aux2456_BOOL,aux2458_BOOL,aux2459_BOOL,w_00001_00016_BOOL],aux2460_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux2461_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux2462_BOOL);
constraint int_lin_eq([-1,1,1],[aux2463,4,s_00017],0);
constraint int_lt_reif(s_00020,aux2463,aux2464_BOOL);
constraint int_le_reif(s_00017, s_00020,aux2465_BOOL);
constraint array_bool_and([aux2461_BOOL,aux2462_BOOL,aux2464_BOOL,aux2465_BOOL,w_00001_00017_BOOL],aux2466_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux2467_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux2468_BOOL);
constraint int_lin_eq([-1,1,1],[aux2469,1,s_00018],0);
constraint int_lt_reif(s_00020,aux2469,aux2470_BOOL);
constraint int_le_reif(s_00018, s_00020,aux2471_BOOL);
constraint array_bool_and([aux2467_BOOL,aux2468_BOOL,aux2470_BOOL,aux2471_BOOL,w_00001_00018_BOOL],aux2472_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux2473_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux2474_BOOL);
constraint int_lin_eq([-1,1,1],[aux2475,4,s_00019],0);
constraint int_lt_reif(s_00020,aux2475,aux2476_BOOL);
constraint int_le_reif(s_00019, s_00020,aux2477_BOOL);
constraint array_bool_and([aux2473_BOOL,aux2474_BOOL,aux2476_BOOL,aux2477_BOOL,w_00001_00019_BOOL],aux2478_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux2364_INTEGER,aux2370_INTEGER,aux2376_INTEGER,aux2382_INTEGER,aux2388_INTEGER,aux2394_INTEGER,aux2400_INTEGER,aux2406_INTEGER,aux2412_INTEGER,aux2418_INTEGER,aux2424_INTEGER,aux2430_INTEGER,aux2436_INTEGER,aux2442_INTEGER,aux2448_INTEGER,aux2454_INTEGER,aux2460_INTEGER,aux2466_INTEGER,aux2472_INTEGER,aux2478_INTEGER,1],0,aux2479_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux2480_BOOL);
constraint int_lin_eq([-1,1,1],[aux2481,3,s_00013],0);
constraint int_lt_reif(s_00013,aux2481,aux2482_BOOL);
constraint array_bool_and([aux2480_BOOL,aux2482_BOOL,w_00001_00013_BOOL],aux2483_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux2484_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux2485_BOOL);
constraint int_lin_eq([-1,1,1],[aux2486,4,s_00001],0);
constraint int_lt_reif(s_00013,aux2486,aux2487_BOOL);
constraint int_le_reif(s_00001, s_00013,aux2488_BOOL);
constraint array_bool_and([aux2484_BOOL,aux2485_BOOL,aux2487_BOOL,aux2488_BOOL,w_00001_00001_BOOL],aux2489_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux2490_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux2491_BOOL);
constraint int_lin_eq([-1,1,1],[aux2492,4,s_00002],0);
constraint int_lt_reif(s_00013,aux2492,aux2493_BOOL);
constraint int_le_reif(s_00002, s_00013,aux2494_BOOL);
constraint array_bool_and([aux2490_BOOL,aux2491_BOOL,aux2493_BOOL,aux2494_BOOL,w_00001_00002_BOOL],aux2495_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux2496_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux2497_BOOL);
constraint int_lin_eq([-1,1,1],[aux2498,3,s_00003],0);
constraint int_lt_reif(s_00013,aux2498,aux2499_BOOL);
constraint int_le_reif(s_00003, s_00013,aux2500_BOOL);
constraint array_bool_and([aux2496_BOOL,aux2497_BOOL,aux2499_BOOL,aux2500_BOOL,w_00001_00003_BOOL],aux2501_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux2502_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux2503_BOOL);
constraint int_lin_eq([-1,1,1],[aux2504,2,s_00004],0);
constraint int_lt_reif(s_00013,aux2504,aux2505_BOOL);
constraint int_le_reif(s_00004, s_00013,aux2506_BOOL);
constraint array_bool_and([aux2502_BOOL,aux2503_BOOL,aux2505_BOOL,aux2506_BOOL,w_00001_00004_BOOL],aux2507_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux2508_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux2509_BOOL);
constraint int_lin_eq([-1,1,1],[aux2510,3,s_00005],0);
constraint int_lt_reif(s_00013,aux2510,aux2511_BOOL);
constraint int_le_reif(s_00005, s_00013,aux2512_BOOL);
constraint array_bool_and([aux2508_BOOL,aux2509_BOOL,aux2511_BOOL,aux2512_BOOL,w_00001_00005_BOOL],aux2513_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux2514_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux2515_BOOL);
constraint int_lin_eq([-1,1,1],[aux2516,2,s_00006],0);
constraint int_lt_reif(s_00013,aux2516,aux2517_BOOL);
constraint int_le_reif(s_00006, s_00013,aux2518_BOOL);
constraint array_bool_and([aux2514_BOOL,aux2515_BOOL,aux2517_BOOL,aux2518_BOOL,w_00001_00006_BOOL],aux2519_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux2520_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux2521_BOOL);
constraint int_lin_eq([-1,1,1],[aux2522,3,s_00007],0);
constraint int_lt_reif(s_00013,aux2522,aux2523_BOOL);
constraint int_le_reif(s_00007, s_00013,aux2524_BOOL);
constraint array_bool_and([aux2520_BOOL,aux2521_BOOL,aux2523_BOOL,aux2524_BOOL,w_00001_00007_BOOL],aux2525_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux2526_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux2527_BOOL);
constraint int_lin_eq([-1,1,1],[aux2528,2,s_00008],0);
constraint int_lt_reif(s_00013,aux2528,aux2529_BOOL);
constraint int_le_reif(s_00008, s_00013,aux2530_BOOL);
constraint array_bool_and([aux2526_BOOL,aux2527_BOOL,aux2529_BOOL,aux2530_BOOL,w_00001_00008_BOOL],aux2531_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux2532_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux2533_BOOL);
constraint int_lin_eq([-1,1,1],[aux2534,2,s_00009],0);
constraint int_lt_reif(s_00013,aux2534,aux2535_BOOL);
constraint int_le_reif(s_00009, s_00013,aux2536_BOOL);
constraint array_bool_and([aux2532_BOOL,aux2533_BOOL,aux2535_BOOL,aux2536_BOOL,w_00001_00009_BOOL],aux2537_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux2538_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux2539_BOOL);
constraint int_lin_eq([-1,1,1],[aux2540,5,s_00010],0);
constraint int_lt_reif(s_00013,aux2540,aux2541_BOOL);
constraint int_le_reif(s_00010, s_00013,aux2542_BOOL);
constraint array_bool_and([aux2538_BOOL,aux2539_BOOL,aux2541_BOOL,aux2542_BOOL,w_00001_00010_BOOL],aux2543_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux2544_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux2545_BOOL);
constraint int_lin_eq([-1,1,1],[aux2546,3,s_00011],0);
constraint int_lt_reif(s_00013,aux2546,aux2547_BOOL);
constraint int_le_reif(s_00011, s_00013,aux2548_BOOL);
constraint array_bool_and([aux2544_BOOL,aux2545_BOOL,aux2547_BOOL,aux2548_BOOL,w_00001_00011_BOOL],aux2549_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux2550_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux2551_BOOL);
constraint int_lin_eq([-1,1,1],[aux2552,4,s_00012],0);
constraint int_lt_reif(s_00013,aux2552,aux2553_BOOL);
constraint int_le_reif(s_00012, s_00013,aux2554_BOOL);
constraint array_bool_and([aux2550_BOOL,aux2551_BOOL,aux2553_BOOL,aux2554_BOOL,w_00001_00012_BOOL],aux2555_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux2556_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux2557_BOOL);
constraint int_lin_eq([-1,1,1],[aux2558,2,s_00014],0);
constraint int_lt_reif(s_00013,aux2558,aux2559_BOOL);
constraint int_le_reif(s_00014, s_00013,aux2560_BOOL);
constraint array_bool_and([aux2556_BOOL,aux2557_BOOL,aux2559_BOOL,aux2560_BOOL,w_00001_00014_BOOL],aux2561_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux2562_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux2563_BOOL);
constraint int_lin_eq([-1,1,1],[aux2564,1,s_00015],0);
constraint int_lt_reif(s_00013,aux2564,aux2565_BOOL);
constraint int_le_reif(s_00015, s_00013,aux2566_BOOL);
constraint array_bool_and([aux2562_BOOL,aux2563_BOOL,aux2565_BOOL,aux2566_BOOL,w_00001_00015_BOOL],aux2567_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux2568_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux2569_BOOL);
constraint int_lin_eq([-1,1,1],[aux2570,3,s_00016],0);
constraint int_lt_reif(s_00013,aux2570,aux2571_BOOL);
constraint int_le_reif(s_00016, s_00013,aux2572_BOOL);
constraint array_bool_and([aux2568_BOOL,aux2569_BOOL,aux2571_BOOL,aux2572_BOOL,w_00001_00016_BOOL],aux2573_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux2574_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux2575_BOOL);
constraint int_lin_eq([-1,1,1],[aux2576,1,s_00018],0);
constraint int_lt_reif(s_00013,aux2576,aux2577_BOOL);
constraint int_le_reif(s_00018, s_00013,aux2578_BOOL);
constraint array_bool_and([aux2574_BOOL,aux2575_BOOL,aux2577_BOOL,aux2578_BOOL,w_00001_00018_BOOL],aux2579_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux2580_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux2581_BOOL);
constraint int_lin_eq([-1,1,1],[aux2582,4,s_00017],0);
constraint int_lt_reif(s_00013,aux2582,aux2583_BOOL);
constraint int_le_reif(s_00017, s_00013,aux2584_BOOL);
constraint array_bool_and([aux2580_BOOL,aux2581_BOOL,aux2583_BOOL,aux2584_BOOL,w_00001_00017_BOOL],aux2585_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux2586_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux2587_BOOL);
constraint int_lin_eq([-1,1,1],[aux2588,4,s_00019],0);
constraint int_lt_reif(s_00013,aux2588,aux2589_BOOL);
constraint int_le_reif(s_00019, s_00013,aux2590_BOOL);
constraint array_bool_and([aux2586_BOOL,aux2587_BOOL,aux2589_BOOL,aux2590_BOOL,w_00001_00019_BOOL],aux2591_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux2592_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux2593_BOOL);
constraint int_lin_eq([-1,1,1],[aux2594,2,s_00020],0);
constraint int_lt_reif(s_00013,aux2594,aux2595_BOOL);
constraint int_le_reif(s_00020, s_00013,aux2596_BOOL);
constraint array_bool_and([aux2592_BOOL,aux2593_BOOL,aux2595_BOOL,aux2596_BOOL,w_00001_00020_BOOL],aux2597_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux2483_INTEGER,aux2489_INTEGER,aux2495_INTEGER,aux2501_INTEGER,aux2507_INTEGER,aux2513_INTEGER,aux2519_INTEGER,aux2525_INTEGER,aux2531_INTEGER,aux2537_INTEGER,aux2543_INTEGER,aux2549_INTEGER,aux2555_INTEGER,aux2561_INTEGER,aux2567_INTEGER,aux2573_INTEGER,aux2579_INTEGER,aux2585_INTEGER,aux2591_INTEGER,aux2597_INTEGER,1],0,aux2598_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux2599_BOOL);
constraint int_lin_eq([-1,1,1],[aux2600,2,s_00009],0);
constraint int_lt_reif(s_00009,aux2600,aux2601_BOOL);
constraint array_bool_and([aux2599_BOOL,aux2601_BOOL,w_00001_00009_BOOL],aux2602_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux2603_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux2604_BOOL);
constraint int_lin_eq([-1,1,1],[aux2605,4,s_00001],0);
constraint int_lt_reif(s_00009,aux2605,aux2606_BOOL);
constraint int_le_reif(s_00001, s_00009,aux2607_BOOL);
constraint array_bool_and([aux2603_BOOL,aux2604_BOOL,aux2606_BOOL,aux2607_BOOL,w_00001_00001_BOOL],aux2608_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux2609_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux2610_BOOL);
constraint int_lin_eq([-1,1,1],[aux2611,4,s_00002],0);
constraint int_lt_reif(s_00009,aux2611,aux2612_BOOL);
constraint int_le_reif(s_00002, s_00009,aux2613_BOOL);
constraint array_bool_and([aux2609_BOOL,aux2610_BOOL,aux2612_BOOL,aux2613_BOOL,w_00001_00002_BOOL],aux2614_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux2615_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux2616_BOOL);
constraint int_lin_eq([-1,1,1],[aux2617,3,s_00003],0);
constraint int_lt_reif(s_00009,aux2617,aux2618_BOOL);
constraint int_le_reif(s_00003, s_00009,aux2619_BOOL);
constraint array_bool_and([aux2615_BOOL,aux2616_BOOL,aux2618_BOOL,aux2619_BOOL,w_00001_00003_BOOL],aux2620_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux2621_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux2622_BOOL);
constraint int_lin_eq([-1,1,1],[aux2623,2,s_00004],0);
constraint int_lt_reif(s_00009,aux2623,aux2624_BOOL);
constraint int_le_reif(s_00004, s_00009,aux2625_BOOL);
constraint array_bool_and([aux2621_BOOL,aux2622_BOOL,aux2624_BOOL,aux2625_BOOL,w_00001_00004_BOOL],aux2626_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux2627_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux2628_BOOL);
constraint int_lin_eq([-1,1,1],[aux2629,3,s_00005],0);
constraint int_lt_reif(s_00009,aux2629,aux2630_BOOL);
constraint int_le_reif(s_00005, s_00009,aux2631_BOOL);
constraint array_bool_and([aux2627_BOOL,aux2628_BOOL,aux2630_BOOL,aux2631_BOOL,w_00001_00005_BOOL],aux2632_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux2633_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux2634_BOOL);
constraint int_lin_eq([-1,1,1],[aux2635,2,s_00006],0);
constraint int_lt_reif(s_00009,aux2635,aux2636_BOOL);
constraint int_le_reif(s_00006, s_00009,aux2637_BOOL);
constraint array_bool_and([aux2633_BOOL,aux2634_BOOL,aux2636_BOOL,aux2637_BOOL,w_00001_00006_BOOL],aux2638_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux2639_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux2640_BOOL);
constraint int_lin_eq([-1,1,1],[aux2641,3,s_00007],0);
constraint int_lt_reif(s_00009,aux2641,aux2642_BOOL);
constraint int_le_reif(s_00007, s_00009,aux2643_BOOL);
constraint array_bool_and([aux2639_BOOL,aux2640_BOOL,aux2642_BOOL,aux2643_BOOL,w_00001_00007_BOOL],aux2644_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux2645_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux2646_BOOL);
constraint int_lin_eq([-1,1,1],[aux2647,2,s_00008],0);
constraint int_lt_reif(s_00009,aux2647,aux2648_BOOL);
constraint int_le_reif(s_00008, s_00009,aux2649_BOOL);
constraint array_bool_and([aux2645_BOOL,aux2646_BOOL,aux2648_BOOL,aux2649_BOOL,w_00001_00008_BOOL],aux2650_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux2651_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux2652_BOOL);
constraint int_lin_eq([-1,1,1],[aux2653,3,s_00011],0);
constraint int_lt_reif(s_00009,aux2653,aux2654_BOOL);
constraint int_le_reif(s_00011, s_00009,aux2655_BOOL);
constraint array_bool_and([aux2651_BOOL,aux2652_BOOL,aux2654_BOOL,aux2655_BOOL,w_00001_00011_BOOL],aux2656_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux2657_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux2658_BOOL);
constraint int_lin_eq([-1,1,1],[aux2659,5,s_00010],0);
constraint int_lt_reif(s_00009,aux2659,aux2660_BOOL);
constraint int_le_reif(s_00010, s_00009,aux2661_BOOL);
constraint array_bool_and([aux2657_BOOL,aux2658_BOOL,aux2660_BOOL,aux2661_BOOL,w_00001_00010_BOOL],aux2662_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux2663_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux2664_BOOL);
constraint int_lin_eq([-1,1,1],[aux2665,4,s_00012],0);
constraint int_lt_reif(s_00009,aux2665,aux2666_BOOL);
constraint int_le_reif(s_00012, s_00009,aux2667_BOOL);
constraint array_bool_and([aux2663_BOOL,aux2664_BOOL,aux2666_BOOL,aux2667_BOOL,w_00001_00012_BOOL],aux2668_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux2669_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux2670_BOOL);
constraint int_lin_eq([-1,1,1],[aux2671,3,s_00013],0);
constraint int_lt_reif(s_00009,aux2671,aux2672_BOOL);
constraint int_le_reif(s_00013, s_00009,aux2673_BOOL);
constraint array_bool_and([aux2669_BOOL,aux2670_BOOL,aux2672_BOOL,aux2673_BOOL,w_00001_00013_BOOL],aux2674_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux2675_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux2676_BOOL);
constraint int_lin_eq([-1,1,1],[aux2677,2,s_00014],0);
constraint int_lt_reif(s_00009,aux2677,aux2678_BOOL);
constraint int_le_reif(s_00014, s_00009,aux2679_BOOL);
constraint array_bool_and([aux2675_BOOL,aux2676_BOOL,aux2678_BOOL,aux2679_BOOL,w_00001_00014_BOOL],aux2680_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux2681_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux2682_BOOL);
constraint int_lin_eq([-1,1,1],[aux2683,1,s_00015],0);
constraint int_lt_reif(s_00009,aux2683,aux2684_BOOL);
constraint int_le_reif(s_00015, s_00009,aux2685_BOOL);
constraint array_bool_and([aux2681_BOOL,aux2682_BOOL,aux2684_BOOL,aux2685_BOOL,w_00001_00015_BOOL],aux2686_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux2687_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux2688_BOOL);
constraint int_lin_eq([-1,1,1],[aux2689,3,s_00016],0);
constraint int_lt_reif(s_00009,aux2689,aux2690_BOOL);
constraint int_le_reif(s_00016, s_00009,aux2691_BOOL);
constraint array_bool_and([aux2687_BOOL,aux2688_BOOL,aux2690_BOOL,aux2691_BOOL,w_00001_00016_BOOL],aux2692_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux2693_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux2694_BOOL);
constraint int_lin_eq([-1,1,1],[aux2695,1,s_00018],0);
constraint int_lt_reif(s_00009,aux2695,aux2696_BOOL);
constraint int_le_reif(s_00018, s_00009,aux2697_BOOL);
constraint array_bool_and([aux2693_BOOL,aux2694_BOOL,aux2696_BOOL,aux2697_BOOL,w_00001_00018_BOOL],aux2698_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux2699_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux2700_BOOL);
constraint int_lin_eq([-1,1,1],[aux2701,4,s_00017],0);
constraint int_lt_reif(s_00009,aux2701,aux2702_BOOL);
constraint int_le_reif(s_00017, s_00009,aux2703_BOOL);
constraint array_bool_and([aux2699_BOOL,aux2700_BOOL,aux2702_BOOL,aux2703_BOOL,w_00001_00017_BOOL],aux2704_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux2705_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux2706_BOOL);
constraint int_lin_eq([-1,1,1],[aux2707,4,s_00019],0);
constraint int_lt_reif(s_00009,aux2707,aux2708_BOOL);
constraint int_le_reif(s_00019, s_00009,aux2709_BOOL);
constraint array_bool_and([aux2705_BOOL,aux2706_BOOL,aux2708_BOOL,aux2709_BOOL,w_00001_00019_BOOL],aux2710_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux2711_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux2712_BOOL);
constraint int_lin_eq([-1,1,1],[aux2713,2,s_00020],0);
constraint int_lt_reif(s_00009,aux2713,aux2714_BOOL);
constraint int_le_reif(s_00020, s_00009,aux2715_BOOL);
constraint array_bool_and([aux2711_BOOL,aux2712_BOOL,aux2714_BOOL,aux2715_BOOL,w_00001_00020_BOOL],aux2716_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux2602_INTEGER,aux2608_INTEGER,aux2614_INTEGER,aux2620_INTEGER,aux2626_INTEGER,aux2632_INTEGER,aux2638_INTEGER,aux2644_INTEGER,aux2650_INTEGER,aux2656_INTEGER,aux2662_INTEGER,aux2668_INTEGER,aux2674_INTEGER,aux2680_INTEGER,aux2686_INTEGER,aux2692_INTEGER,aux2698_INTEGER,aux2704_INTEGER,aux2710_INTEGER,aux2716_INTEGER,1],0,aux2717_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux2718_BOOL);
constraint int_lin_eq([-1,1,1],[aux2719,3,s_00016],0);
constraint int_lt_reif(s_00016,aux2719,aux2720_BOOL);
constraint array_bool_and([aux2718_BOOL,aux2720_BOOL,w_00001_00016_BOOL],aux2721_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux2722_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux2723_BOOL);
constraint int_lin_eq([-1,1,1],[aux2724,4,s_00001],0);
constraint int_lt_reif(s_00016,aux2724,aux2725_BOOL);
constraint int_le_reif(s_00001, s_00016,aux2726_BOOL);
constraint array_bool_and([aux2722_BOOL,aux2723_BOOL,aux2725_BOOL,aux2726_BOOL,w_00001_00001_BOOL],aux2727_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux2728_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux2729_BOOL);
constraint int_lin_eq([-1,1,1],[aux2730,4,s_00002],0);
constraint int_lt_reif(s_00016,aux2730,aux2731_BOOL);
constraint int_le_reif(s_00002, s_00016,aux2732_BOOL);
constraint array_bool_and([aux2728_BOOL,aux2729_BOOL,aux2731_BOOL,aux2732_BOOL,w_00001_00002_BOOL],aux2733_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux2734_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux2735_BOOL);
constraint int_lin_eq([-1,1,1],[aux2736,3,s_00003],0);
constraint int_lt_reif(s_00016,aux2736,aux2737_BOOL);
constraint int_le_reif(s_00003, s_00016,aux2738_BOOL);
constraint array_bool_and([aux2734_BOOL,aux2735_BOOL,aux2737_BOOL,aux2738_BOOL,w_00001_00003_BOOL],aux2739_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux2740_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux2741_BOOL);
constraint int_lin_eq([-1,1,1],[aux2742,2,s_00004],0);
constraint int_lt_reif(s_00016,aux2742,aux2743_BOOL);
constraint int_le_reif(s_00004, s_00016,aux2744_BOOL);
constraint array_bool_and([aux2740_BOOL,aux2741_BOOL,aux2743_BOOL,aux2744_BOOL,w_00001_00004_BOOL],aux2745_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux2746_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux2747_BOOL);
constraint int_lin_eq([-1,1,1],[aux2748,3,s_00005],0);
constraint int_lt_reif(s_00016,aux2748,aux2749_BOOL);
constraint int_le_reif(s_00005, s_00016,aux2750_BOOL);
constraint array_bool_and([aux2746_BOOL,aux2747_BOOL,aux2749_BOOL,aux2750_BOOL,w_00001_00005_BOOL],aux2751_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux2752_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux2753_BOOL);
constraint int_lin_eq([-1,1,1],[aux2754,2,s_00006],0);
constraint int_lt_reif(s_00016,aux2754,aux2755_BOOL);
constraint int_le_reif(s_00006, s_00016,aux2756_BOOL);
constraint array_bool_and([aux2752_BOOL,aux2753_BOOL,aux2755_BOOL,aux2756_BOOL,w_00001_00006_BOOL],aux2757_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux2758_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux2759_BOOL);
constraint int_lin_eq([-1,1,1],[aux2760,3,s_00007],0);
constraint int_lt_reif(s_00016,aux2760,aux2761_BOOL);
constraint int_le_reif(s_00007, s_00016,aux2762_BOOL);
constraint array_bool_and([aux2758_BOOL,aux2759_BOOL,aux2761_BOOL,aux2762_BOOL,w_00001_00007_BOOL],aux2763_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux2764_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux2765_BOOL);
constraint int_lin_eq([-1,1,1],[aux2766,2,s_00008],0);
constraint int_lt_reif(s_00016,aux2766,aux2767_BOOL);
constraint int_le_reif(s_00008, s_00016,aux2768_BOOL);
constraint array_bool_and([aux2764_BOOL,aux2765_BOOL,aux2767_BOOL,aux2768_BOOL,w_00001_00008_BOOL],aux2769_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux2770_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux2771_BOOL);
constraint int_lin_eq([-1,1,1],[aux2772,2,s_00009],0);
constraint int_lt_reif(s_00016,aux2772,aux2773_BOOL);
constraint int_le_reif(s_00009, s_00016,aux2774_BOOL);
constraint array_bool_and([aux2770_BOOL,aux2771_BOOL,aux2773_BOOL,aux2774_BOOL,w_00001_00009_BOOL],aux2775_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux2776_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux2777_BOOL);
constraint int_lin_eq([-1,1,1],[aux2778,5,s_00010],0);
constraint int_lt_reif(s_00016,aux2778,aux2779_BOOL);
constraint int_le_reif(s_00010, s_00016,aux2780_BOOL);
constraint array_bool_and([aux2776_BOOL,aux2777_BOOL,aux2779_BOOL,aux2780_BOOL,w_00001_00010_BOOL],aux2781_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux2782_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux2783_BOOL);
constraint int_lin_eq([-1,1,1],[aux2784,3,s_00011],0);
constraint int_lt_reif(s_00016,aux2784,aux2785_BOOL);
constraint int_le_reif(s_00011, s_00016,aux2786_BOOL);
constraint array_bool_and([aux2782_BOOL,aux2783_BOOL,aux2785_BOOL,aux2786_BOOL,w_00001_00011_BOOL],aux2787_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux2788_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux2789_BOOL);
constraint int_lin_eq([-1,1,1],[aux2790,4,s_00012],0);
constraint int_lt_reif(s_00016,aux2790,aux2791_BOOL);
constraint int_le_reif(s_00012, s_00016,aux2792_BOOL);
constraint array_bool_and([aux2788_BOOL,aux2789_BOOL,aux2791_BOOL,aux2792_BOOL,w_00001_00012_BOOL],aux2793_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux2794_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux2795_BOOL);
constraint int_lin_eq([-1,1,1],[aux2796,3,s_00013],0);
constraint int_lt_reif(s_00016,aux2796,aux2797_BOOL);
constraint int_le_reif(s_00013, s_00016,aux2798_BOOL);
constraint array_bool_and([aux2794_BOOL,aux2795_BOOL,aux2797_BOOL,aux2798_BOOL,w_00001_00013_BOOL],aux2799_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux2800_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux2801_BOOL);
constraint int_lin_eq([-1,1,1],[aux2802,2,s_00014],0);
constraint int_lt_reif(s_00016,aux2802,aux2803_BOOL);
constraint int_le_reif(s_00014, s_00016,aux2804_BOOL);
constraint array_bool_and([aux2800_BOOL,aux2801_BOOL,aux2803_BOOL,aux2804_BOOL,w_00001_00014_BOOL],aux2805_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux2806_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux2807_BOOL);
constraint int_lin_eq([-1,1,1],[aux2808,1,s_00015],0);
constraint int_lt_reif(s_00016,aux2808,aux2809_BOOL);
constraint int_le_reif(s_00015, s_00016,aux2810_BOOL);
constraint array_bool_and([aux2806_BOOL,aux2807_BOOL,aux2809_BOOL,aux2810_BOOL,w_00001_00015_BOOL],aux2811_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux2812_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux2813_BOOL);
constraint int_lin_eq([-1,1,1],[aux2814,1,s_00018],0);
constraint int_lt_reif(s_00016,aux2814,aux2815_BOOL);
constraint int_le_reif(s_00018, s_00016,aux2816_BOOL);
constraint array_bool_and([aux2812_BOOL,aux2813_BOOL,aux2815_BOOL,aux2816_BOOL,w_00001_00018_BOOL],aux2817_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux2818_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux2819_BOOL);
constraint int_lin_eq([-1,1,1],[aux2820,4,s_00017],0);
constraint int_lt_reif(s_00016,aux2820,aux2821_BOOL);
constraint int_le_reif(s_00017, s_00016,aux2822_BOOL);
constraint array_bool_and([aux2818_BOOL,aux2819_BOOL,aux2821_BOOL,aux2822_BOOL,w_00001_00017_BOOL],aux2823_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux2824_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux2825_BOOL);
constraint int_lin_eq([-1,1,1],[aux2826,4,s_00019],0);
constraint int_lt_reif(s_00016,aux2826,aux2827_BOOL);
constraint int_le_reif(s_00019, s_00016,aux2828_BOOL);
constraint array_bool_and([aux2824_BOOL,aux2825_BOOL,aux2827_BOOL,aux2828_BOOL,w_00001_00019_BOOL],aux2829_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux2830_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux2831_BOOL);
constraint int_lin_eq([-1,1,1],[aux2832,2,s_00020],0);
constraint int_lt_reif(s_00016,aux2832,aux2833_BOOL);
constraint int_le_reif(s_00020, s_00016,aux2834_BOOL);
constraint array_bool_and([aux2830_BOOL,aux2831_BOOL,aux2833_BOOL,aux2834_BOOL,w_00001_00020_BOOL],aux2835_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux2721_INTEGER,aux2727_INTEGER,aux2733_INTEGER,aux2739_INTEGER,aux2745_INTEGER,aux2751_INTEGER,aux2757_INTEGER,aux2763_INTEGER,aux2769_INTEGER,aux2775_INTEGER,aux2781_INTEGER,aux2787_INTEGER,aux2793_INTEGER,aux2799_INTEGER,aux2805_INTEGER,aux2811_INTEGER,aux2817_INTEGER,aux2823_INTEGER,aux2829_INTEGER,aux2835_INTEGER,1],0,aux2836_BOOL);
constraint array_bool_and([aux575_BOOL,aux694_BOOL,aux813_BOOL,aux932_BOOL,aux1051_BOOL,aux1170_BOOL,aux1289_BOOL,aux1408_BOOL,aux1527_BOOL,aux1646_BOOL,aux1765_BOOL,aux1884_BOOL,aux2003_BOOL,aux2122_BOOL,aux2241_BOOL,aux2360_BOOL,aux2479_BOOL,aux2598_BOOL,aux2717_BOOL,aux2836_BOOL],aux2837_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux2838_BOOL);
constraint int_lin_eq([-1,1,1],[aux2839,3,s_00016],0);
constraint int_lt_reif(s_00016,aux2839,aux2840_BOOL);
constraint array_bool_and([w_00002_00016_BOOL,aux2838_BOOL,aux2840_BOOL],aux2841_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux2842_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux2843_BOOL);
constraint int_lin_eq([-1,1,1],[aux2844,4,s_00001],0);
constraint int_lt_reif(s_00016,aux2844,aux2845_BOOL);
constraint int_le_reif(s_00001, s_00016,aux2846_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux2842_BOOL,aux2843_BOOL,aux2845_BOOL,aux2846_BOOL],aux2847_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux2848_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux2849_BOOL);
constraint int_lin_eq([-1,1,1],[aux2850,4,s_00002],0);
constraint int_lt_reif(s_00016,aux2850,aux2851_BOOL);
constraint int_le_reif(s_00002, s_00016,aux2852_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux2848_BOOL,aux2849_BOOL,aux2851_BOOL,aux2852_BOOL],aux2853_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux2854_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux2855_BOOL);
constraint int_lin_eq([-1,1,1],[aux2856,3,s_00003],0);
constraint int_lt_reif(s_00016,aux2856,aux2857_BOOL);
constraint int_le_reif(s_00003, s_00016,aux2858_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux2854_BOOL,aux2855_BOOL,aux2857_BOOL,aux2858_BOOL],aux2859_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux2860_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux2861_BOOL);
constraint int_lin_eq([-1,1,1],[aux2862,2,s_00004],0);
constraint int_lt_reif(s_00016,aux2862,aux2863_BOOL);
constraint int_le_reif(s_00004, s_00016,aux2864_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux2860_BOOL,aux2861_BOOL,aux2863_BOOL,aux2864_BOOL],aux2865_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux2866_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux2867_BOOL);
constraint int_lin_eq([-1,1,1],[aux2868,3,s_00005],0);
constraint int_lt_reif(s_00016,aux2868,aux2869_BOOL);
constraint int_le_reif(s_00005, s_00016,aux2870_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux2866_BOOL,aux2867_BOOL,aux2869_BOOL,aux2870_BOOL],aux2871_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux2872_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux2873_BOOL);
constraint int_lin_eq([-1,1,1],[aux2874,2,s_00006],0);
constraint int_lt_reif(s_00016,aux2874,aux2875_BOOL);
constraint int_le_reif(s_00006, s_00016,aux2876_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux2872_BOOL,aux2873_BOOL,aux2875_BOOL,aux2876_BOOL],aux2877_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux2878_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux2879_BOOL);
constraint int_lin_eq([-1,1,1],[aux2880,3,s_00007],0);
constraint int_lt_reif(s_00016,aux2880,aux2881_BOOL);
constraint int_le_reif(s_00007, s_00016,aux2882_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux2878_BOOL,aux2879_BOOL,aux2881_BOOL,aux2882_BOOL],aux2883_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux2884_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux2885_BOOL);
constraint int_lin_eq([-1,1,1],[aux2886,2,s_00008],0);
constraint int_lt_reif(s_00016,aux2886,aux2887_BOOL);
constraint int_le_reif(s_00008, s_00016,aux2888_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux2884_BOOL,aux2885_BOOL,aux2887_BOOL,aux2888_BOOL],aux2889_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux2890_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux2891_BOOL);
constraint int_lin_eq([-1,1,1],[aux2892,2,s_00009],0);
constraint int_lt_reif(s_00016,aux2892,aux2893_BOOL);
constraint int_le_reif(s_00009, s_00016,aux2894_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux2890_BOOL,aux2891_BOOL,aux2893_BOOL,aux2894_BOOL],aux2895_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux2896_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux2897_BOOL);
constraint int_lin_eq([-1,1,1],[aux2898,5,s_00010],0);
constraint int_lt_reif(s_00016,aux2898,aux2899_BOOL);
constraint int_le_reif(s_00010, s_00016,aux2900_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux2896_BOOL,aux2897_BOOL,aux2899_BOOL,aux2900_BOOL],aux2901_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux2902_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux2903_BOOL);
constraint int_lin_eq([-1,1,1],[aux2904,3,s_00011],0);
constraint int_lt_reif(s_00016,aux2904,aux2905_BOOL);
constraint int_le_reif(s_00011, s_00016,aux2906_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux2902_BOOL,aux2903_BOOL,aux2905_BOOL,aux2906_BOOL],aux2907_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux2908_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux2909_BOOL);
constraint int_lin_eq([-1,1,1],[aux2910,4,s_00012],0);
constraint int_lt_reif(s_00016,aux2910,aux2911_BOOL);
constraint int_le_reif(s_00012, s_00016,aux2912_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux2908_BOOL,aux2909_BOOL,aux2911_BOOL,aux2912_BOOL],aux2913_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux2914_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux2915_BOOL);
constraint int_lin_eq([-1,1,1],[aux2916,3,s_00013],0);
constraint int_lt_reif(s_00016,aux2916,aux2917_BOOL);
constraint int_le_reif(s_00013, s_00016,aux2918_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux2914_BOOL,aux2915_BOOL,aux2917_BOOL,aux2918_BOOL],aux2919_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux2920_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux2921_BOOL);
constraint int_lin_eq([-1,1,1],[aux2922,2,s_00014],0);
constraint int_lt_reif(s_00016,aux2922,aux2923_BOOL);
constraint int_le_reif(s_00014, s_00016,aux2924_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux2920_BOOL,aux2921_BOOL,aux2923_BOOL,aux2924_BOOL],aux2925_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux2926_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux2927_BOOL);
constraint int_lin_eq([-1,1,1],[aux2928,1,s_00015],0);
constraint int_lt_reif(s_00016,aux2928,aux2929_BOOL);
constraint int_le_reif(s_00015, s_00016,aux2930_BOOL);
constraint array_bool_and([w_00002_00015_BOOL,aux2926_BOOL,aux2927_BOOL,aux2929_BOOL,aux2930_BOOL],aux2931_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux2932_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux2933_BOOL);
constraint int_lin_eq([-1,1,1],[aux2934,4,s_00017],0);
constraint int_lt_reif(s_00016,aux2934,aux2935_BOOL);
constraint int_le_reif(s_00017, s_00016,aux2936_BOOL);
constraint array_bool_and([w_00002_00017_BOOL,aux2932_BOOL,aux2933_BOOL,aux2935_BOOL,aux2936_BOOL],aux2937_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux2938_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux2939_BOOL);
constraint int_lin_eq([-1,1,1],[aux2940,1,s_00018],0);
constraint int_lt_reif(s_00016,aux2940,aux2941_BOOL);
constraint int_le_reif(s_00018, s_00016,aux2942_BOOL);
constraint array_bool_and([w_00002_00018_BOOL,aux2938_BOOL,aux2939_BOOL,aux2941_BOOL,aux2942_BOOL],aux2943_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux2944_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux2945_BOOL);
constraint int_lin_eq([-1,1,1],[aux2946,4,s_00019],0);
constraint int_lt_reif(s_00016,aux2946,aux2947_BOOL);
constraint int_le_reif(s_00019, s_00016,aux2948_BOOL);
constraint array_bool_and([w_00002_00019_BOOL,aux2944_BOOL,aux2945_BOOL,aux2947_BOOL,aux2948_BOOL],aux2949_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux2950_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux2951_BOOL);
constraint int_lin_eq([-1,1,1],[aux2952,2,s_00020],0);
constraint int_lt_reif(s_00016,aux2952,aux2953_BOOL);
constraint int_le_reif(s_00020, s_00016,aux2954_BOOL);
constraint array_bool_and([w_00002_00020_BOOL,aux2950_BOOL,aux2951_BOOL,aux2953_BOOL,aux2954_BOOL],aux2955_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux2841_INTEGER,aux2847_INTEGER,aux2853_INTEGER,aux2859_INTEGER,aux2865_INTEGER,aux2871_INTEGER,aux2877_INTEGER,aux2883_INTEGER,aux2889_INTEGER,aux2895_INTEGER,aux2901_INTEGER,aux2907_INTEGER,aux2913_INTEGER,aux2919_INTEGER,aux2925_INTEGER,aux2931_INTEGER,aux2937_INTEGER,aux2943_INTEGER,aux2949_INTEGER,aux2955_INTEGER,1],0,aux2956_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux2957_BOOL);
constraint int_lin_eq([-1,1,1],[aux2958,4,s_00017],0);
constraint int_lt_reif(s_00017,aux2958,aux2959_BOOL);
constraint array_bool_and([w_00002_00017_BOOL,aux2957_BOOL,aux2959_BOOL],aux2960_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux2961_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux2962_BOOL);
constraint int_lin_eq([-1,1,1],[aux2963,4,s_00001],0);
constraint int_lt_reif(s_00017,aux2963,aux2964_BOOL);
constraint int_le_reif(s_00001, s_00017,aux2965_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux2961_BOOL,aux2962_BOOL,aux2964_BOOL,aux2965_BOOL],aux2966_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux2967_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux2968_BOOL);
constraint int_lin_eq([-1,1,1],[aux2969,4,s_00002],0);
constraint int_lt_reif(s_00017,aux2969,aux2970_BOOL);
constraint int_le_reif(s_00002, s_00017,aux2971_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux2967_BOOL,aux2968_BOOL,aux2970_BOOL,aux2971_BOOL],aux2972_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux2973_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux2974_BOOL);
constraint int_lin_eq([-1,1,1],[aux2975,3,s_00003],0);
constraint int_lt_reif(s_00017,aux2975,aux2976_BOOL);
constraint int_le_reif(s_00003, s_00017,aux2977_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux2973_BOOL,aux2974_BOOL,aux2976_BOOL,aux2977_BOOL],aux2978_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux2979_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux2980_BOOL);
constraint int_lin_eq([-1,1,1],[aux2981,2,s_00004],0);
constraint int_lt_reif(s_00017,aux2981,aux2982_BOOL);
constraint int_le_reif(s_00004, s_00017,aux2983_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux2979_BOOL,aux2980_BOOL,aux2982_BOOL,aux2983_BOOL],aux2984_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux2985_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux2986_BOOL);
constraint int_lin_eq([-1,1,1],[aux2987,3,s_00005],0);
constraint int_lt_reif(s_00017,aux2987,aux2988_BOOL);
constraint int_le_reif(s_00005, s_00017,aux2989_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux2985_BOOL,aux2986_BOOL,aux2988_BOOL,aux2989_BOOL],aux2990_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux2991_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux2992_BOOL);
constraint int_lin_eq([-1,1,1],[aux2993,2,s_00006],0);
constraint int_lt_reif(s_00017,aux2993,aux2994_BOOL);
constraint int_le_reif(s_00006, s_00017,aux2995_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux2991_BOOL,aux2992_BOOL,aux2994_BOOL,aux2995_BOOL],aux2996_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux2997_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux2998_BOOL);
constraint int_lin_eq([-1,1,1],[aux2999,3,s_00007],0);
constraint int_lt_reif(s_00017,aux2999,aux3000_BOOL);
constraint int_le_reif(s_00007, s_00017,aux3001_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux2997_BOOL,aux2998_BOOL,aux3000_BOOL,aux3001_BOOL],aux3002_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux3003_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux3004_BOOL);
constraint int_lin_eq([-1,1,1],[aux3005,2,s_00008],0);
constraint int_lt_reif(s_00017,aux3005,aux3006_BOOL);
constraint int_le_reif(s_00008, s_00017,aux3007_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux3003_BOOL,aux3004_BOOL,aux3006_BOOL,aux3007_BOOL],aux3008_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux3009_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux3010_BOOL);
constraint int_lin_eq([-1,1,1],[aux3011,2,s_00009],0);
constraint int_lt_reif(s_00017,aux3011,aux3012_BOOL);
constraint int_le_reif(s_00009, s_00017,aux3013_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux3009_BOOL,aux3010_BOOL,aux3012_BOOL,aux3013_BOOL],aux3014_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3015_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux3016_BOOL);
constraint int_lin_eq([-1,1,1],[aux3017,5,s_00010],0);
constraint int_lt_reif(s_00017,aux3017,aux3018_BOOL);
constraint int_le_reif(s_00010, s_00017,aux3019_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux3015_BOOL,aux3016_BOOL,aux3018_BOOL,aux3019_BOOL],aux3020_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux3021_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux3022_BOOL);
constraint int_lin_eq([-1,1,1],[aux3023,3,s_00011],0);
constraint int_lt_reif(s_00017,aux3023,aux3024_BOOL);
constraint int_le_reif(s_00011, s_00017,aux3025_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux3021_BOOL,aux3022_BOOL,aux3024_BOOL,aux3025_BOOL],aux3026_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux3027_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux3028_BOOL);
constraint int_lin_eq([-1,1,1],[aux3029,4,s_00012],0);
constraint int_lt_reif(s_00017,aux3029,aux3030_BOOL);
constraint int_le_reif(s_00012, s_00017,aux3031_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux3027_BOOL,aux3028_BOOL,aux3030_BOOL,aux3031_BOOL],aux3032_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux3033_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux3034_BOOL);
constraint int_lin_eq([-1,1,1],[aux3035,3,s_00013],0);
constraint int_lt_reif(s_00017,aux3035,aux3036_BOOL);
constraint int_le_reif(s_00013, s_00017,aux3037_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux3033_BOOL,aux3034_BOOL,aux3036_BOOL,aux3037_BOOL],aux3038_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux3039_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux3040_BOOL);
constraint int_lin_eq([-1,1,1],[aux3041,2,s_00014],0);
constraint int_lt_reif(s_00017,aux3041,aux3042_BOOL);
constraint int_le_reif(s_00014, s_00017,aux3043_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux3039_BOOL,aux3040_BOOL,aux3042_BOOL,aux3043_BOOL],aux3044_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux3045_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux3046_BOOL);
constraint int_lin_eq([-1,1,1],[aux3047,1,s_00015],0);
constraint int_lt_reif(s_00017,aux3047,aux3048_BOOL);
constraint int_le_reif(s_00015, s_00017,aux3049_BOOL);
constraint array_bool_and([w_00002_00015_BOOL,aux3045_BOOL,aux3046_BOOL,aux3048_BOOL,aux3049_BOOL],aux3050_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux3051_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux3052_BOOL);
constraint int_lin_eq([-1,1,1],[aux3053,3,s_00016],0);
constraint int_lt_reif(s_00017,aux3053,aux3054_BOOL);
constraint int_le_reif(s_00016, s_00017,aux3055_BOOL);
constraint array_bool_and([w_00002_00016_BOOL,aux3051_BOOL,aux3052_BOOL,aux3054_BOOL,aux3055_BOOL],aux3056_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux3057_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux3058_BOOL);
constraint int_lin_eq([-1,1,1],[aux3059,1,s_00018],0);
constraint int_lt_reif(s_00017,aux3059,aux3060_BOOL);
constraint int_le_reif(s_00018, s_00017,aux3061_BOOL);
constraint array_bool_and([w_00002_00018_BOOL,aux3057_BOOL,aux3058_BOOL,aux3060_BOOL,aux3061_BOOL],aux3062_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux3063_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3064_BOOL);
constraint int_lin_eq([-1,1,1],[aux3065,4,s_00019],0);
constraint int_lt_reif(s_00017,aux3065,aux3066_BOOL);
constraint int_le_reif(s_00019, s_00017,aux3067_BOOL);
constraint array_bool_and([w_00002_00019_BOOL,aux3063_BOOL,aux3064_BOOL,aux3066_BOOL,aux3067_BOOL],aux3068_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux3069_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux3070_BOOL);
constraint int_lin_eq([-1,1,1],[aux3071,2,s_00020],0);
constraint int_lt_reif(s_00017,aux3071,aux3072_BOOL);
constraint int_le_reif(s_00020, s_00017,aux3073_BOOL);
constraint array_bool_and([w_00002_00020_BOOL,aux3069_BOOL,aux3070_BOOL,aux3072_BOOL,aux3073_BOOL],aux3074_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux2960_INTEGER,aux2966_INTEGER,aux2972_INTEGER,aux2978_INTEGER,aux2984_INTEGER,aux2990_INTEGER,aux2996_INTEGER,aux3002_INTEGER,aux3008_INTEGER,aux3014_INTEGER,aux3020_INTEGER,aux3026_INTEGER,aux3032_INTEGER,aux3038_INTEGER,aux3044_INTEGER,aux3050_INTEGER,aux3056_INTEGER,aux3062_INTEGER,aux3068_INTEGER,aux3074_INTEGER,1],0,aux3075_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3076_BOOL);
constraint int_lin_eq([-1,1,1],[aux3077,5,s_00010],0);
constraint int_lt_reif(s_00010,aux3077,aux3078_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux3076_BOOL,aux3078_BOOL],aux3079_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux3080_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3081_BOOL);
constraint int_lin_eq([-1,1,1],[aux3082,4,s_00001],0);
constraint int_lt_reif(s_00010,aux3082,aux3083_BOOL);
constraint int_le_reif(s_00001, s_00010,aux3084_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux3080_BOOL,aux3081_BOOL,aux3083_BOOL,aux3084_BOOL],aux3085_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux3086_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3087_BOOL);
constraint int_lin_eq([-1,1,1],[aux3088,4,s_00002],0);
constraint int_lt_reif(s_00010,aux3088,aux3089_BOOL);
constraint int_le_reif(s_00002, s_00010,aux3090_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux3086_BOOL,aux3087_BOOL,aux3089_BOOL,aux3090_BOOL],aux3091_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux3092_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3093_BOOL);
constraint int_lin_eq([-1,1,1],[aux3094,3,s_00003],0);
constraint int_lt_reif(s_00010,aux3094,aux3095_BOOL);
constraint int_le_reif(s_00003, s_00010,aux3096_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux3092_BOOL,aux3093_BOOL,aux3095_BOOL,aux3096_BOOL],aux3097_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux3098_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3099_BOOL);
constraint int_lin_eq([-1,1,1],[aux3100,2,s_00004],0);
constraint int_lt_reif(s_00010,aux3100,aux3101_BOOL);
constraint int_le_reif(s_00004, s_00010,aux3102_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux3098_BOOL,aux3099_BOOL,aux3101_BOOL,aux3102_BOOL],aux3103_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux3104_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3105_BOOL);
constraint int_lin_eq([-1,1,1],[aux3106,3,s_00005],0);
constraint int_lt_reif(s_00010,aux3106,aux3107_BOOL);
constraint int_le_reif(s_00005, s_00010,aux3108_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux3104_BOOL,aux3105_BOOL,aux3107_BOOL,aux3108_BOOL],aux3109_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux3110_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3111_BOOL);
constraint int_lin_eq([-1,1,1],[aux3112,2,s_00006],0);
constraint int_lt_reif(s_00010,aux3112,aux3113_BOOL);
constraint int_le_reif(s_00006, s_00010,aux3114_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux3110_BOOL,aux3111_BOOL,aux3113_BOOL,aux3114_BOOL],aux3115_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux3116_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3117_BOOL);
constraint int_lin_eq([-1,1,1],[aux3118,3,s_00007],0);
constraint int_lt_reif(s_00010,aux3118,aux3119_BOOL);
constraint int_le_reif(s_00007, s_00010,aux3120_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux3116_BOOL,aux3117_BOOL,aux3119_BOOL,aux3120_BOOL],aux3121_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux3122_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3123_BOOL);
constraint int_lin_eq([-1,1,1],[aux3124,2,s_00008],0);
constraint int_lt_reif(s_00010,aux3124,aux3125_BOOL);
constraint int_le_reif(s_00008, s_00010,aux3126_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux3122_BOOL,aux3123_BOOL,aux3125_BOOL,aux3126_BOOL],aux3127_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux3128_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3129_BOOL);
constraint int_lin_eq([-1,1,1],[aux3130,2,s_00009],0);
constraint int_lt_reif(s_00010,aux3130,aux3131_BOOL);
constraint int_le_reif(s_00009, s_00010,aux3132_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux3128_BOOL,aux3129_BOOL,aux3131_BOOL,aux3132_BOOL],aux3133_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3134_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux3135_BOOL);
constraint int_lin_eq([-1,1,1],[aux3136,3,s_00011],0);
constraint int_lt_reif(s_00010,aux3136,aux3137_BOOL);
constraint int_le_reif(s_00011, s_00010,aux3138_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux3134_BOOL,aux3135_BOOL,aux3137_BOOL,aux3138_BOOL],aux3139_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3140_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux3141_BOOL);
constraint int_lin_eq([-1,1,1],[aux3142,4,s_00012],0);
constraint int_lt_reif(s_00010,aux3142,aux3143_BOOL);
constraint int_le_reif(s_00012, s_00010,aux3144_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux3140_BOOL,aux3141_BOOL,aux3143_BOOL,aux3144_BOOL],aux3145_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3146_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux3147_BOOL);
constraint int_lin_eq([-1,1,1],[aux3148,3,s_00013],0);
constraint int_lt_reif(s_00010,aux3148,aux3149_BOOL);
constraint int_le_reif(s_00013, s_00010,aux3150_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux3146_BOOL,aux3147_BOOL,aux3149_BOOL,aux3150_BOOL],aux3151_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3152_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux3153_BOOL);
constraint int_lin_eq([-1,1,1],[aux3154,2,s_00014],0);
constraint int_lt_reif(s_00010,aux3154,aux3155_BOOL);
constraint int_le_reif(s_00014, s_00010,aux3156_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux3152_BOOL,aux3153_BOOL,aux3155_BOOL,aux3156_BOOL],aux3157_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3158_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux3159_BOOL);
constraint int_lin_eq([-1,1,1],[aux3160,1,s_00015],0);
constraint int_lt_reif(s_00010,aux3160,aux3161_BOOL);
constraint int_le_reif(s_00015, s_00010,aux3162_BOOL);
constraint array_bool_and([w_00002_00015_BOOL,aux3158_BOOL,aux3159_BOOL,aux3161_BOOL,aux3162_BOOL],aux3163_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3164_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux3165_BOOL);
constraint int_lin_eq([-1,1,1],[aux3166,3,s_00016],0);
constraint int_lt_reif(s_00010,aux3166,aux3167_BOOL);
constraint int_le_reif(s_00016, s_00010,aux3168_BOOL);
constraint array_bool_and([w_00002_00016_BOOL,aux3164_BOOL,aux3165_BOOL,aux3167_BOOL,aux3168_BOOL],aux3169_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3170_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux3171_BOOL);
constraint int_lin_eq([-1,1,1],[aux3172,4,s_00017],0);
constraint int_lt_reif(s_00010,aux3172,aux3173_BOOL);
constraint int_le_reif(s_00017, s_00010,aux3174_BOOL);
constraint array_bool_and([w_00002_00017_BOOL,aux3170_BOOL,aux3171_BOOL,aux3173_BOOL,aux3174_BOOL],aux3175_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3176_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux3177_BOOL);
constraint int_lin_eq([-1,1,1],[aux3178,1,s_00018],0);
constraint int_lt_reif(s_00010,aux3178,aux3179_BOOL);
constraint int_le_reif(s_00018, s_00010,aux3180_BOOL);
constraint array_bool_and([w_00002_00018_BOOL,aux3176_BOOL,aux3177_BOOL,aux3179_BOOL,aux3180_BOOL],aux3181_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3182_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3183_BOOL);
constraint int_lin_eq([-1,1,1],[aux3184,4,s_00019],0);
constraint int_lt_reif(s_00010,aux3184,aux3185_BOOL);
constraint int_le_reif(s_00019, s_00010,aux3186_BOOL);
constraint array_bool_and([w_00002_00019_BOOL,aux3182_BOOL,aux3183_BOOL,aux3185_BOOL,aux3186_BOOL],aux3187_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3188_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux3189_BOOL);
constraint int_lin_eq([-1,1,1],[aux3190,2,s_00020],0);
constraint int_lt_reif(s_00010,aux3190,aux3191_BOOL);
constraint int_le_reif(s_00020, s_00010,aux3192_BOOL);
constraint array_bool_and([w_00002_00020_BOOL,aux3188_BOOL,aux3189_BOOL,aux3191_BOOL,aux3192_BOOL],aux3193_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux3079_INTEGER,aux3085_INTEGER,aux3091_INTEGER,aux3097_INTEGER,aux3103_INTEGER,aux3109_INTEGER,aux3115_INTEGER,aux3121_INTEGER,aux3127_INTEGER,aux3133_INTEGER,aux3139_INTEGER,aux3145_INTEGER,aux3151_INTEGER,aux3157_INTEGER,aux3163_INTEGER,aux3169_INTEGER,aux3175_INTEGER,aux3181_INTEGER,aux3187_INTEGER,aux3193_INTEGER,1],0,aux3194_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3195_BOOL);
constraint int_lin_eq([-1,1,1],[aux3196,4,s_00019],0);
constraint int_lt_reif(s_00019,aux3196,aux3197_BOOL);
constraint array_bool_and([w_00002_00019_BOOL,aux3195_BOOL,aux3197_BOOL],aux3198_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux3199_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3200_BOOL);
constraint int_lin_eq([-1,1,1],[aux3201,4,s_00001],0);
constraint int_lt_reif(s_00019,aux3201,aux3202_BOOL);
constraint int_le_reif(s_00001, s_00019,aux3203_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux3199_BOOL,aux3200_BOOL,aux3202_BOOL,aux3203_BOOL],aux3204_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux3205_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3206_BOOL);
constraint int_lin_eq([-1,1,1],[aux3207,4,s_00002],0);
constraint int_lt_reif(s_00019,aux3207,aux3208_BOOL);
constraint int_le_reif(s_00002, s_00019,aux3209_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux3205_BOOL,aux3206_BOOL,aux3208_BOOL,aux3209_BOOL],aux3210_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux3211_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3212_BOOL);
constraint int_lin_eq([-1,1,1],[aux3213,3,s_00003],0);
constraint int_lt_reif(s_00019,aux3213,aux3214_BOOL);
constraint int_le_reif(s_00003, s_00019,aux3215_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux3211_BOOL,aux3212_BOOL,aux3214_BOOL,aux3215_BOOL],aux3216_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux3217_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3218_BOOL);
constraint int_lin_eq([-1,1,1],[aux3219,2,s_00004],0);
constraint int_lt_reif(s_00019,aux3219,aux3220_BOOL);
constraint int_le_reif(s_00004, s_00019,aux3221_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux3217_BOOL,aux3218_BOOL,aux3220_BOOL,aux3221_BOOL],aux3222_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux3223_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3224_BOOL);
constraint int_lin_eq([-1,1,1],[aux3225,3,s_00005],0);
constraint int_lt_reif(s_00019,aux3225,aux3226_BOOL);
constraint int_le_reif(s_00005, s_00019,aux3227_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux3223_BOOL,aux3224_BOOL,aux3226_BOOL,aux3227_BOOL],aux3228_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux3229_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3230_BOOL);
constraint int_lin_eq([-1,1,1],[aux3231,2,s_00006],0);
constraint int_lt_reif(s_00019,aux3231,aux3232_BOOL);
constraint int_le_reif(s_00006, s_00019,aux3233_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux3229_BOOL,aux3230_BOOL,aux3232_BOOL,aux3233_BOOL],aux3234_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux3235_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3236_BOOL);
constraint int_lin_eq([-1,1,1],[aux3237,3,s_00007],0);
constraint int_lt_reif(s_00019,aux3237,aux3238_BOOL);
constraint int_le_reif(s_00007, s_00019,aux3239_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux3235_BOOL,aux3236_BOOL,aux3238_BOOL,aux3239_BOOL],aux3240_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux3241_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3242_BOOL);
constraint int_lin_eq([-1,1,1],[aux3243,2,s_00008],0);
constraint int_lt_reif(s_00019,aux3243,aux3244_BOOL);
constraint int_le_reif(s_00008, s_00019,aux3245_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux3241_BOOL,aux3242_BOOL,aux3244_BOOL,aux3245_BOOL],aux3246_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux3247_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3248_BOOL);
constraint int_lin_eq([-1,1,1],[aux3249,2,s_00009],0);
constraint int_lt_reif(s_00019,aux3249,aux3250_BOOL);
constraint int_le_reif(s_00009, s_00019,aux3251_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux3247_BOOL,aux3248_BOOL,aux3250_BOOL,aux3251_BOOL],aux3252_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3253_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3254_BOOL);
constraint int_lin_eq([-1,1,1],[aux3255,5,s_00010],0);
constraint int_lt_reif(s_00019,aux3255,aux3256_BOOL);
constraint int_le_reif(s_00010, s_00019,aux3257_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux3253_BOOL,aux3254_BOOL,aux3256_BOOL,aux3257_BOOL],aux3258_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux3259_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3260_BOOL);
constraint int_lin_eq([-1,1,1],[aux3261,3,s_00011],0);
constraint int_lt_reif(s_00019,aux3261,aux3262_BOOL);
constraint int_le_reif(s_00011, s_00019,aux3263_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux3259_BOOL,aux3260_BOOL,aux3262_BOOL,aux3263_BOOL],aux3264_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux3265_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3266_BOOL);
constraint int_lin_eq([-1,1,1],[aux3267,4,s_00012],0);
constraint int_lt_reif(s_00019,aux3267,aux3268_BOOL);
constraint int_le_reif(s_00012, s_00019,aux3269_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux3265_BOOL,aux3266_BOOL,aux3268_BOOL,aux3269_BOOL],aux3270_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux3271_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3272_BOOL);
constraint int_lin_eq([-1,1,1],[aux3273,3,s_00013],0);
constraint int_lt_reif(s_00019,aux3273,aux3274_BOOL);
constraint int_le_reif(s_00013, s_00019,aux3275_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux3271_BOOL,aux3272_BOOL,aux3274_BOOL,aux3275_BOOL],aux3276_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux3277_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3278_BOOL);
constraint int_lin_eq([-1,1,1],[aux3279,2,s_00014],0);
constraint int_lt_reif(s_00019,aux3279,aux3280_BOOL);
constraint int_le_reif(s_00014, s_00019,aux3281_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux3277_BOOL,aux3278_BOOL,aux3280_BOOL,aux3281_BOOL],aux3282_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux3283_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3284_BOOL);
constraint int_lin_eq([-1,1,1],[aux3285,1,s_00015],0);
constraint int_lt_reif(s_00019,aux3285,aux3286_BOOL);
constraint int_le_reif(s_00015, s_00019,aux3287_BOOL);
constraint array_bool_and([w_00002_00015_BOOL,aux3283_BOOL,aux3284_BOOL,aux3286_BOOL,aux3287_BOOL],aux3288_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux3289_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3290_BOOL);
constraint int_lin_eq([-1,1,1],[aux3291,3,s_00016],0);
constraint int_lt_reif(s_00019,aux3291,aux3292_BOOL);
constraint int_le_reif(s_00016, s_00019,aux3293_BOOL);
constraint array_bool_and([w_00002_00016_BOOL,aux3289_BOOL,aux3290_BOOL,aux3292_BOOL,aux3293_BOOL],aux3294_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux3295_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3296_BOOL);
constraint int_lin_eq([-1,1,1],[aux3297,4,s_00017],0);
constraint int_lt_reif(s_00019,aux3297,aux3298_BOOL);
constraint int_le_reif(s_00017, s_00019,aux3299_BOOL);
constraint array_bool_and([w_00002_00017_BOOL,aux3295_BOOL,aux3296_BOOL,aux3298_BOOL,aux3299_BOOL],aux3300_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux3301_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3302_BOOL);
constraint int_lin_eq([-1,1,1],[aux3303,1,s_00018],0);
constraint int_lt_reif(s_00019,aux3303,aux3304_BOOL);
constraint int_le_reif(s_00018, s_00019,aux3305_BOOL);
constraint array_bool_and([w_00002_00018_BOOL,aux3301_BOOL,aux3302_BOOL,aux3304_BOOL,aux3305_BOOL],aux3306_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3307_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux3308_BOOL);
constraint int_lin_eq([-1,1,1],[aux3309,2,s_00020],0);
constraint int_lt_reif(s_00019,aux3309,aux3310_BOOL);
constraint int_le_reif(s_00020, s_00019,aux3311_BOOL);
constraint array_bool_and([w_00002_00020_BOOL,aux3307_BOOL,aux3308_BOOL,aux3310_BOOL,aux3311_BOOL],aux3312_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux3198_INTEGER,aux3204_INTEGER,aux3210_INTEGER,aux3216_INTEGER,aux3222_INTEGER,aux3228_INTEGER,aux3234_INTEGER,aux3240_INTEGER,aux3246_INTEGER,aux3252_INTEGER,aux3258_INTEGER,aux3264_INTEGER,aux3270_INTEGER,aux3276_INTEGER,aux3282_INTEGER,aux3288_INTEGER,aux3294_INTEGER,aux3300_INTEGER,aux3306_INTEGER,aux3312_INTEGER,1],0,aux3313_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux3314_BOOL);
constraint int_lin_eq([-1,1,1],[aux3315,3,s_00013],0);
constraint int_lt_reif(s_00013,aux3315,aux3316_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux3314_BOOL,aux3316_BOOL],aux3317_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux3318_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux3319_BOOL);
constraint int_lin_eq([-1,1,1],[aux3320,4,s_00001],0);
constraint int_lt_reif(s_00013,aux3320,aux3321_BOOL);
constraint int_le_reif(s_00001, s_00013,aux3322_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux3318_BOOL,aux3319_BOOL,aux3321_BOOL,aux3322_BOOL],aux3323_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux3324_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux3325_BOOL);
constraint int_lin_eq([-1,1,1],[aux3326,4,s_00002],0);
constraint int_lt_reif(s_00013,aux3326,aux3327_BOOL);
constraint int_le_reif(s_00002, s_00013,aux3328_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux3324_BOOL,aux3325_BOOL,aux3327_BOOL,aux3328_BOOL],aux3329_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux3330_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux3331_BOOL);
constraint int_lin_eq([-1,1,1],[aux3332,3,s_00003],0);
constraint int_lt_reif(s_00013,aux3332,aux3333_BOOL);
constraint int_le_reif(s_00003, s_00013,aux3334_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux3330_BOOL,aux3331_BOOL,aux3333_BOOL,aux3334_BOOL],aux3335_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux3336_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux3337_BOOL);
constraint int_lin_eq([-1,1,1],[aux3338,2,s_00004],0);
constraint int_lt_reif(s_00013,aux3338,aux3339_BOOL);
constraint int_le_reif(s_00004, s_00013,aux3340_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux3336_BOOL,aux3337_BOOL,aux3339_BOOL,aux3340_BOOL],aux3341_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux3342_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux3343_BOOL);
constraint int_lin_eq([-1,1,1],[aux3344,3,s_00005],0);
constraint int_lt_reif(s_00013,aux3344,aux3345_BOOL);
constraint int_le_reif(s_00005, s_00013,aux3346_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux3342_BOOL,aux3343_BOOL,aux3345_BOOL,aux3346_BOOL],aux3347_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux3348_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux3349_BOOL);
constraint int_lin_eq([-1,1,1],[aux3350,2,s_00006],0);
constraint int_lt_reif(s_00013,aux3350,aux3351_BOOL);
constraint int_le_reif(s_00006, s_00013,aux3352_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux3348_BOOL,aux3349_BOOL,aux3351_BOOL,aux3352_BOOL],aux3353_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux3354_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux3355_BOOL);
constraint int_lin_eq([-1,1,1],[aux3356,3,s_00007],0);
constraint int_lt_reif(s_00013,aux3356,aux3357_BOOL);
constraint int_le_reif(s_00007, s_00013,aux3358_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux3354_BOOL,aux3355_BOOL,aux3357_BOOL,aux3358_BOOL],aux3359_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux3360_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux3361_BOOL);
constraint int_lin_eq([-1,1,1],[aux3362,2,s_00008],0);
constraint int_lt_reif(s_00013,aux3362,aux3363_BOOL);
constraint int_le_reif(s_00008, s_00013,aux3364_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux3360_BOOL,aux3361_BOOL,aux3363_BOOL,aux3364_BOOL],aux3365_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux3366_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux3367_BOOL);
constraint int_lin_eq([-1,1,1],[aux3368,2,s_00009],0);
constraint int_lt_reif(s_00013,aux3368,aux3369_BOOL);
constraint int_le_reif(s_00009, s_00013,aux3370_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux3366_BOOL,aux3367_BOOL,aux3369_BOOL,aux3370_BOOL],aux3371_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3372_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux3373_BOOL);
constraint int_lin_eq([-1,1,1],[aux3374,5,s_00010],0);
constraint int_lt_reif(s_00013,aux3374,aux3375_BOOL);
constraint int_le_reif(s_00010, s_00013,aux3376_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux3372_BOOL,aux3373_BOOL,aux3375_BOOL,aux3376_BOOL],aux3377_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux3378_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux3379_BOOL);
constraint int_lin_eq([-1,1,1],[aux3380,3,s_00011],0);
constraint int_lt_reif(s_00013,aux3380,aux3381_BOOL);
constraint int_le_reif(s_00011, s_00013,aux3382_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux3378_BOOL,aux3379_BOOL,aux3381_BOOL,aux3382_BOOL],aux3383_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux3384_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux3385_BOOL);
constraint int_lin_eq([-1,1,1],[aux3386,4,s_00012],0);
constraint int_lt_reif(s_00013,aux3386,aux3387_BOOL);
constraint int_le_reif(s_00012, s_00013,aux3388_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux3384_BOOL,aux3385_BOOL,aux3387_BOOL,aux3388_BOOL],aux3389_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux3390_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux3391_BOOL);
constraint int_lin_eq([-1,1,1],[aux3392,2,s_00014],0);
constraint int_lt_reif(s_00013,aux3392,aux3393_BOOL);
constraint int_le_reif(s_00014, s_00013,aux3394_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux3390_BOOL,aux3391_BOOL,aux3393_BOOL,aux3394_BOOL],aux3395_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux3396_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux3397_BOOL);
constraint int_lin_eq([-1,1,1],[aux3398,1,s_00015],0);
constraint int_lt_reif(s_00013,aux3398,aux3399_BOOL);
constraint int_le_reif(s_00015, s_00013,aux3400_BOOL);
constraint array_bool_and([w_00002_00015_BOOL,aux3396_BOOL,aux3397_BOOL,aux3399_BOOL,aux3400_BOOL],aux3401_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux3402_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux3403_BOOL);
constraint int_lin_eq([-1,1,1],[aux3404,3,s_00016],0);
constraint int_lt_reif(s_00013,aux3404,aux3405_BOOL);
constraint int_le_reif(s_00016, s_00013,aux3406_BOOL);
constraint array_bool_and([w_00002_00016_BOOL,aux3402_BOOL,aux3403_BOOL,aux3405_BOOL,aux3406_BOOL],aux3407_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux3408_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux3409_BOOL);
constraint int_lin_eq([-1,1,1],[aux3410,4,s_00017],0);
constraint int_lt_reif(s_00013,aux3410,aux3411_BOOL);
constraint int_le_reif(s_00017, s_00013,aux3412_BOOL);
constraint array_bool_and([w_00002_00017_BOOL,aux3408_BOOL,aux3409_BOOL,aux3411_BOOL,aux3412_BOOL],aux3413_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux3414_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux3415_BOOL);
constraint int_lin_eq([-1,1,1],[aux3416,1,s_00018],0);
constraint int_lt_reif(s_00013,aux3416,aux3417_BOOL);
constraint int_le_reif(s_00018, s_00013,aux3418_BOOL);
constraint array_bool_and([w_00002_00018_BOOL,aux3414_BOOL,aux3415_BOOL,aux3417_BOOL,aux3418_BOOL],aux3419_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux3420_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3421_BOOL);
constraint int_lin_eq([-1,1,1],[aux3422,4,s_00019],0);
constraint int_lt_reif(s_00013,aux3422,aux3423_BOOL);
constraint int_le_reif(s_00019, s_00013,aux3424_BOOL);
constraint array_bool_and([w_00002_00019_BOOL,aux3420_BOOL,aux3421_BOOL,aux3423_BOOL,aux3424_BOOL],aux3425_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux3426_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux3427_BOOL);
constraint int_lin_eq([-1,1,1],[aux3428,2,s_00020],0);
constraint int_lt_reif(s_00013,aux3428,aux3429_BOOL);
constraint int_le_reif(s_00020, s_00013,aux3430_BOOL);
constraint array_bool_and([w_00002_00020_BOOL,aux3426_BOOL,aux3427_BOOL,aux3429_BOOL,aux3430_BOOL],aux3431_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux3317_INTEGER,aux3323_INTEGER,aux3329_INTEGER,aux3335_INTEGER,aux3341_INTEGER,aux3347_INTEGER,aux3353_INTEGER,aux3359_INTEGER,aux3365_INTEGER,aux3371_INTEGER,aux3377_INTEGER,aux3383_INTEGER,aux3389_INTEGER,aux3395_INTEGER,aux3401_INTEGER,aux3407_INTEGER,aux3413_INTEGER,aux3419_INTEGER,aux3425_INTEGER,aux3431_INTEGER,1],0,aux3432_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux3433_BOOL);
constraint int_lin_eq([-1,1,1],[aux3434,4,s_00001],0);
constraint int_lt_reif(s_00001,aux3434,aux3435_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux3433_BOOL,aux3435_BOOL],aux3436_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux3437_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux3438_BOOL);
constraint int_lin_eq([-1,1,1],[aux3439,4,s_00002],0);
constraint int_lt_reif(s_00001,aux3439,aux3440_BOOL);
constraint int_le_reif(s_00002, s_00001,aux3441_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux3437_BOOL,aux3438_BOOL,aux3440_BOOL,aux3441_BOOL],aux3442_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux3443_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux3444_BOOL);
constraint int_lin_eq([-1,1,1],[aux3445,3,s_00003],0);
constraint int_lt_reif(s_00001,aux3445,aux3446_BOOL);
constraint int_le_reif(s_00003, s_00001,aux3447_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux3443_BOOL,aux3444_BOOL,aux3446_BOOL,aux3447_BOOL],aux3448_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux3449_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux3450_BOOL);
constraint int_lin_eq([-1,1,1],[aux3451,2,s_00004],0);
constraint int_lt_reif(s_00001,aux3451,aux3452_BOOL);
constraint int_le_reif(s_00004, s_00001,aux3453_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux3449_BOOL,aux3450_BOOL,aux3452_BOOL,aux3453_BOOL],aux3454_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux3455_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux3456_BOOL);
constraint int_lin_eq([-1,1,1],[aux3457,3,s_00005],0);
constraint int_lt_reif(s_00001,aux3457,aux3458_BOOL);
constraint int_le_reif(s_00005, s_00001,aux3459_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux3455_BOOL,aux3456_BOOL,aux3458_BOOL,aux3459_BOOL],aux3460_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux3461_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux3462_BOOL);
constraint int_lin_eq([-1,1,1],[aux3463,2,s_00006],0);
constraint int_lt_reif(s_00001,aux3463,aux3464_BOOL);
constraint int_le_reif(s_00006, s_00001,aux3465_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux3461_BOOL,aux3462_BOOL,aux3464_BOOL,aux3465_BOOL],aux3466_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux3467_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux3468_BOOL);
constraint int_lin_eq([-1,1,1],[aux3469,3,s_00007],0);
constraint int_lt_reif(s_00001,aux3469,aux3470_BOOL);
constraint int_le_reif(s_00007, s_00001,aux3471_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux3467_BOOL,aux3468_BOOL,aux3470_BOOL,aux3471_BOOL],aux3472_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux3473_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux3474_BOOL);
constraint int_lin_eq([-1,1,1],[aux3475,2,s_00008],0);
constraint int_lt_reif(s_00001,aux3475,aux3476_BOOL);
constraint int_le_reif(s_00008, s_00001,aux3477_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux3473_BOOL,aux3474_BOOL,aux3476_BOOL,aux3477_BOOL],aux3478_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux3479_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux3480_BOOL);
constraint int_lin_eq([-1,1,1],[aux3481,2,s_00009],0);
constraint int_lt_reif(s_00001,aux3481,aux3482_BOOL);
constraint int_le_reif(s_00009, s_00001,aux3483_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux3479_BOOL,aux3480_BOOL,aux3482_BOOL,aux3483_BOOL],aux3484_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux3485_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3486_BOOL);
constraint int_lin_eq([-1,1,1],[aux3487,5,s_00010],0);
constraint int_lt_reif(s_00001,aux3487,aux3488_BOOL);
constraint int_le_reif(s_00010, s_00001,aux3489_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux3485_BOOL,aux3486_BOOL,aux3488_BOOL,aux3489_BOOL],aux3490_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux3491_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux3492_BOOL);
constraint int_lin_eq([-1,1,1],[aux3493,3,s_00011],0);
constraint int_lt_reif(s_00001,aux3493,aux3494_BOOL);
constraint int_le_reif(s_00011, s_00001,aux3495_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux3491_BOOL,aux3492_BOOL,aux3494_BOOL,aux3495_BOOL],aux3496_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux3497_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux3498_BOOL);
constraint int_lin_eq([-1,1,1],[aux3499,4,s_00012],0);
constraint int_lt_reif(s_00001,aux3499,aux3500_BOOL);
constraint int_le_reif(s_00012, s_00001,aux3501_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux3497_BOOL,aux3498_BOOL,aux3500_BOOL,aux3501_BOOL],aux3502_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux3503_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux3504_BOOL);
constraint int_lin_eq([-1,1,1],[aux3505,3,s_00013],0);
constraint int_lt_reif(s_00001,aux3505,aux3506_BOOL);
constraint int_le_reif(s_00013, s_00001,aux3507_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux3503_BOOL,aux3504_BOOL,aux3506_BOOL,aux3507_BOOL],aux3508_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux3509_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux3510_BOOL);
constraint int_lin_eq([-1,1,1],[aux3511,2,s_00014],0);
constraint int_lt_reif(s_00001,aux3511,aux3512_BOOL);
constraint int_le_reif(s_00014, s_00001,aux3513_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux3509_BOOL,aux3510_BOOL,aux3512_BOOL,aux3513_BOOL],aux3514_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux3515_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux3516_BOOL);
constraint int_lin_eq([-1,1,1],[aux3517,1,s_00015],0);
constraint int_lt_reif(s_00001,aux3517,aux3518_BOOL);
constraint int_le_reif(s_00015, s_00001,aux3519_BOOL);
constraint array_bool_and([w_00002_00015_BOOL,aux3515_BOOL,aux3516_BOOL,aux3518_BOOL,aux3519_BOOL],aux3520_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux3521_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux3522_BOOL);
constraint int_lin_eq([-1,1,1],[aux3523,3,s_00016],0);
constraint int_lt_reif(s_00001,aux3523,aux3524_BOOL);
constraint int_le_reif(s_00016, s_00001,aux3525_BOOL);
constraint array_bool_and([w_00002_00016_BOOL,aux3521_BOOL,aux3522_BOOL,aux3524_BOOL,aux3525_BOOL],aux3526_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux3527_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux3528_BOOL);
constraint int_lin_eq([-1,1,1],[aux3529,4,s_00017],0);
constraint int_lt_reif(s_00001,aux3529,aux3530_BOOL);
constraint int_le_reif(s_00017, s_00001,aux3531_BOOL);
constraint array_bool_and([w_00002_00017_BOOL,aux3527_BOOL,aux3528_BOOL,aux3530_BOOL,aux3531_BOOL],aux3532_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux3533_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux3534_BOOL);
constraint int_lin_eq([-1,1,1],[aux3535,1,s_00018],0);
constraint int_lt_reif(s_00001,aux3535,aux3536_BOOL);
constraint int_le_reif(s_00018, s_00001,aux3537_BOOL);
constraint array_bool_and([w_00002_00018_BOOL,aux3533_BOOL,aux3534_BOOL,aux3536_BOOL,aux3537_BOOL],aux3538_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux3539_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3540_BOOL);
constraint int_lin_eq([-1,1,1],[aux3541,4,s_00019],0);
constraint int_lt_reif(s_00001,aux3541,aux3542_BOOL);
constraint int_le_reif(s_00019, s_00001,aux3543_BOOL);
constraint array_bool_and([w_00002_00019_BOOL,aux3539_BOOL,aux3540_BOOL,aux3542_BOOL,aux3543_BOOL],aux3544_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux3545_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux3546_BOOL);
constraint int_lin_eq([-1,1,1],[aux3547,2,s_00020],0);
constraint int_lt_reif(s_00001,aux3547,aux3548_BOOL);
constraint int_le_reif(s_00020, s_00001,aux3549_BOOL);
constraint array_bool_and([w_00002_00020_BOOL,aux3545_BOOL,aux3546_BOOL,aux3548_BOOL,aux3549_BOOL],aux3550_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux3436_INTEGER,aux3442_INTEGER,aux3448_INTEGER,aux3454_INTEGER,aux3460_INTEGER,aux3466_INTEGER,aux3472_INTEGER,aux3478_INTEGER,aux3484_INTEGER,aux3490_INTEGER,aux3496_INTEGER,aux3502_INTEGER,aux3508_INTEGER,aux3514_INTEGER,aux3520_INTEGER,aux3526_INTEGER,aux3532_INTEGER,aux3538_INTEGER,aux3544_INTEGER,aux3550_INTEGER,1],0,aux3551_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux3552_BOOL);
constraint int_lin_eq([-1,1,1],[aux3553,3,s_00003],0);
constraint int_lt_reif(s_00003,aux3553,aux3554_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux3552_BOOL,aux3554_BOOL],aux3555_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux3556_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux3557_BOOL);
constraint int_lin_eq([-1,1,1],[aux3558,4,s_00001],0);
constraint int_lt_reif(s_00003,aux3558,aux3559_BOOL);
constraint int_le_reif(s_00001, s_00003,aux3560_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux3556_BOOL,aux3557_BOOL,aux3559_BOOL,aux3560_BOOL],aux3561_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux3562_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux3563_BOOL);
constraint int_lin_eq([-1,1,1],[aux3564,4,s_00002],0);
constraint int_lt_reif(s_00003,aux3564,aux3565_BOOL);
constraint int_le_reif(s_00002, s_00003,aux3566_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux3562_BOOL,aux3563_BOOL,aux3565_BOOL,aux3566_BOOL],aux3567_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux3568_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux3569_BOOL);
constraint int_lin_eq([-1,1,1],[aux3570,2,s_00004],0);
constraint int_lt_reif(s_00003,aux3570,aux3571_BOOL);
constraint int_le_reif(s_00004, s_00003,aux3572_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux3568_BOOL,aux3569_BOOL,aux3571_BOOL,aux3572_BOOL],aux3573_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux3574_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux3575_BOOL);
constraint int_lin_eq([-1,1,1],[aux3576,3,s_00005],0);
constraint int_lt_reif(s_00003,aux3576,aux3577_BOOL);
constraint int_le_reif(s_00005, s_00003,aux3578_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux3574_BOOL,aux3575_BOOL,aux3577_BOOL,aux3578_BOOL],aux3579_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux3580_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux3581_BOOL);
constraint int_lin_eq([-1,1,1],[aux3582,2,s_00006],0);
constraint int_lt_reif(s_00003,aux3582,aux3583_BOOL);
constraint int_le_reif(s_00006, s_00003,aux3584_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux3580_BOOL,aux3581_BOOL,aux3583_BOOL,aux3584_BOOL],aux3585_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux3586_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux3587_BOOL);
constraint int_lin_eq([-1,1,1],[aux3588,3,s_00007],0);
constraint int_lt_reif(s_00003,aux3588,aux3589_BOOL);
constraint int_le_reif(s_00007, s_00003,aux3590_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux3586_BOOL,aux3587_BOOL,aux3589_BOOL,aux3590_BOOL],aux3591_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux3592_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux3593_BOOL);
constraint int_lin_eq([-1,1,1],[aux3594,2,s_00008],0);
constraint int_lt_reif(s_00003,aux3594,aux3595_BOOL);
constraint int_le_reif(s_00008, s_00003,aux3596_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux3592_BOOL,aux3593_BOOL,aux3595_BOOL,aux3596_BOOL],aux3597_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux3598_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux3599_BOOL);
constraint int_lin_eq([-1,1,1],[aux3600,2,s_00009],0);
constraint int_lt_reif(s_00003,aux3600,aux3601_BOOL);
constraint int_le_reif(s_00009, s_00003,aux3602_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux3598_BOOL,aux3599_BOOL,aux3601_BOOL,aux3602_BOOL],aux3603_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux3604_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3605_BOOL);
constraint int_lin_eq([-1,1,1],[aux3606,5,s_00010],0);
constraint int_lt_reif(s_00003,aux3606,aux3607_BOOL);
constraint int_le_reif(s_00010, s_00003,aux3608_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux3604_BOOL,aux3605_BOOL,aux3607_BOOL,aux3608_BOOL],aux3609_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux3610_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux3611_BOOL);
constraint int_lin_eq([-1,1,1],[aux3612,3,s_00011],0);
constraint int_lt_reif(s_00003,aux3612,aux3613_BOOL);
constraint int_le_reif(s_00011, s_00003,aux3614_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux3610_BOOL,aux3611_BOOL,aux3613_BOOL,aux3614_BOOL],aux3615_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux3616_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux3617_BOOL);
constraint int_lin_eq([-1,1,1],[aux3618,4,s_00012],0);
constraint int_lt_reif(s_00003,aux3618,aux3619_BOOL);
constraint int_le_reif(s_00012, s_00003,aux3620_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux3616_BOOL,aux3617_BOOL,aux3619_BOOL,aux3620_BOOL],aux3621_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux3622_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux3623_BOOL);
constraint int_lin_eq([-1,1,1],[aux3624,3,s_00013],0);
constraint int_lt_reif(s_00003,aux3624,aux3625_BOOL);
constraint int_le_reif(s_00013, s_00003,aux3626_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux3622_BOOL,aux3623_BOOL,aux3625_BOOL,aux3626_BOOL],aux3627_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux3628_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux3629_BOOL);
constraint int_lin_eq([-1,1,1],[aux3630,2,s_00014],0);
constraint int_lt_reif(s_00003,aux3630,aux3631_BOOL);
constraint int_le_reif(s_00014, s_00003,aux3632_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux3628_BOOL,aux3629_BOOL,aux3631_BOOL,aux3632_BOOL],aux3633_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux3634_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux3635_BOOL);
constraint int_lin_eq([-1,1,1],[aux3636,1,s_00015],0);
constraint int_lt_reif(s_00003,aux3636,aux3637_BOOL);
constraint int_le_reif(s_00015, s_00003,aux3638_BOOL);
constraint array_bool_and([w_00002_00015_BOOL,aux3634_BOOL,aux3635_BOOL,aux3637_BOOL,aux3638_BOOL],aux3639_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux3640_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux3641_BOOL);
constraint int_lin_eq([-1,1,1],[aux3642,3,s_00016],0);
constraint int_lt_reif(s_00003,aux3642,aux3643_BOOL);
constraint int_le_reif(s_00016, s_00003,aux3644_BOOL);
constraint array_bool_and([w_00002_00016_BOOL,aux3640_BOOL,aux3641_BOOL,aux3643_BOOL,aux3644_BOOL],aux3645_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux3646_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux3647_BOOL);
constraint int_lin_eq([-1,1,1],[aux3648,4,s_00017],0);
constraint int_lt_reif(s_00003,aux3648,aux3649_BOOL);
constraint int_le_reif(s_00017, s_00003,aux3650_BOOL);
constraint array_bool_and([w_00002_00017_BOOL,aux3646_BOOL,aux3647_BOOL,aux3649_BOOL,aux3650_BOOL],aux3651_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux3652_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux3653_BOOL);
constraint int_lin_eq([-1,1,1],[aux3654,1,s_00018],0);
constraint int_lt_reif(s_00003,aux3654,aux3655_BOOL);
constraint int_le_reif(s_00018, s_00003,aux3656_BOOL);
constraint array_bool_and([w_00002_00018_BOOL,aux3652_BOOL,aux3653_BOOL,aux3655_BOOL,aux3656_BOOL],aux3657_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux3658_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3659_BOOL);
constraint int_lin_eq([-1,1,1],[aux3660,4,s_00019],0);
constraint int_lt_reif(s_00003,aux3660,aux3661_BOOL);
constraint int_le_reif(s_00019, s_00003,aux3662_BOOL);
constraint array_bool_and([w_00002_00019_BOOL,aux3658_BOOL,aux3659_BOOL,aux3661_BOOL,aux3662_BOOL],aux3663_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux3664_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux3665_BOOL);
constraint int_lin_eq([-1,1,1],[aux3666,2,s_00020],0);
constraint int_lt_reif(s_00003,aux3666,aux3667_BOOL);
constraint int_le_reif(s_00020, s_00003,aux3668_BOOL);
constraint array_bool_and([w_00002_00020_BOOL,aux3664_BOOL,aux3665_BOOL,aux3667_BOOL,aux3668_BOOL],aux3669_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux3555_INTEGER,aux3561_INTEGER,aux3567_INTEGER,aux3573_INTEGER,aux3579_INTEGER,aux3585_INTEGER,aux3591_INTEGER,aux3597_INTEGER,aux3603_INTEGER,aux3609_INTEGER,aux3615_INTEGER,aux3621_INTEGER,aux3627_INTEGER,aux3633_INTEGER,aux3639_INTEGER,aux3645_INTEGER,aux3651_INTEGER,aux3657_INTEGER,aux3663_INTEGER,aux3669_INTEGER,1],0,aux3670_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux3671_BOOL);
constraint int_lin_eq([-1,1,1],[aux3672,3,s_00005],0);
constraint int_lt_reif(s_00005,aux3672,aux3673_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux3671_BOOL,aux3673_BOOL],aux3674_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux3675_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux3676_BOOL);
constraint int_lin_eq([-1,1,1],[aux3677,4,s_00001],0);
constraint int_lt_reif(s_00005,aux3677,aux3678_BOOL);
constraint int_le_reif(s_00001, s_00005,aux3679_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux3675_BOOL,aux3676_BOOL,aux3678_BOOL,aux3679_BOOL],aux3680_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux3681_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux3682_BOOL);
constraint int_lin_eq([-1,1,1],[aux3683,4,s_00002],0);
constraint int_lt_reif(s_00005,aux3683,aux3684_BOOL);
constraint int_le_reif(s_00002, s_00005,aux3685_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux3681_BOOL,aux3682_BOOL,aux3684_BOOL,aux3685_BOOL],aux3686_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux3687_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux3688_BOOL);
constraint int_lin_eq([-1,1,1],[aux3689,3,s_00003],0);
constraint int_lt_reif(s_00005,aux3689,aux3690_BOOL);
constraint int_le_reif(s_00003, s_00005,aux3691_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux3687_BOOL,aux3688_BOOL,aux3690_BOOL,aux3691_BOOL],aux3692_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux3693_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux3694_BOOL);
constraint int_lin_eq([-1,1,1],[aux3695,2,s_00004],0);
constraint int_lt_reif(s_00005,aux3695,aux3696_BOOL);
constraint int_le_reif(s_00004, s_00005,aux3697_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux3693_BOOL,aux3694_BOOL,aux3696_BOOL,aux3697_BOOL],aux3698_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux3699_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux3700_BOOL);
constraint int_lin_eq([-1,1,1],[aux3701,2,s_00006],0);
constraint int_lt_reif(s_00005,aux3701,aux3702_BOOL);
constraint int_le_reif(s_00006, s_00005,aux3703_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux3699_BOOL,aux3700_BOOL,aux3702_BOOL,aux3703_BOOL],aux3704_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux3705_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux3706_BOOL);
constraint int_lin_eq([-1,1,1],[aux3707,3,s_00007],0);
constraint int_lt_reif(s_00005,aux3707,aux3708_BOOL);
constraint int_le_reif(s_00007, s_00005,aux3709_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux3705_BOOL,aux3706_BOOL,aux3708_BOOL,aux3709_BOOL],aux3710_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux3711_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux3712_BOOL);
constraint int_lin_eq([-1,1,1],[aux3713,2,s_00008],0);
constraint int_lt_reif(s_00005,aux3713,aux3714_BOOL);
constraint int_le_reif(s_00008, s_00005,aux3715_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux3711_BOOL,aux3712_BOOL,aux3714_BOOL,aux3715_BOOL],aux3716_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux3717_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux3718_BOOL);
constraint int_lin_eq([-1,1,1],[aux3719,2,s_00009],0);
constraint int_lt_reif(s_00005,aux3719,aux3720_BOOL);
constraint int_le_reif(s_00009, s_00005,aux3721_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux3717_BOOL,aux3718_BOOL,aux3720_BOOL,aux3721_BOOL],aux3722_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux3723_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3724_BOOL);
constraint int_lin_eq([-1,1,1],[aux3725,5,s_00010],0);
constraint int_lt_reif(s_00005,aux3725,aux3726_BOOL);
constraint int_le_reif(s_00010, s_00005,aux3727_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux3723_BOOL,aux3724_BOOL,aux3726_BOOL,aux3727_BOOL],aux3728_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux3729_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux3730_BOOL);
constraint int_lin_eq([-1,1,1],[aux3731,3,s_00011],0);
constraint int_lt_reif(s_00005,aux3731,aux3732_BOOL);
constraint int_le_reif(s_00011, s_00005,aux3733_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux3729_BOOL,aux3730_BOOL,aux3732_BOOL,aux3733_BOOL],aux3734_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux3735_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux3736_BOOL);
constraint int_lin_eq([-1,1,1],[aux3737,4,s_00012],0);
constraint int_lt_reif(s_00005,aux3737,aux3738_BOOL);
constraint int_le_reif(s_00012, s_00005,aux3739_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux3735_BOOL,aux3736_BOOL,aux3738_BOOL,aux3739_BOOL],aux3740_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux3741_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux3742_BOOL);
constraint int_lin_eq([-1,1,1],[aux3743,3,s_00013],0);
constraint int_lt_reif(s_00005,aux3743,aux3744_BOOL);
constraint int_le_reif(s_00013, s_00005,aux3745_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux3741_BOOL,aux3742_BOOL,aux3744_BOOL,aux3745_BOOL],aux3746_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux3747_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux3748_BOOL);
constraint int_lin_eq([-1,1,1],[aux3749,2,s_00014],0);
constraint int_lt_reif(s_00005,aux3749,aux3750_BOOL);
constraint int_le_reif(s_00014, s_00005,aux3751_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux3747_BOOL,aux3748_BOOL,aux3750_BOOL,aux3751_BOOL],aux3752_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux3753_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux3754_BOOL);
constraint int_lin_eq([-1,1,1],[aux3755,1,s_00015],0);
constraint int_lt_reif(s_00005,aux3755,aux3756_BOOL);
constraint int_le_reif(s_00015, s_00005,aux3757_BOOL);
constraint array_bool_and([w_00002_00015_BOOL,aux3753_BOOL,aux3754_BOOL,aux3756_BOOL,aux3757_BOOL],aux3758_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux3759_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux3760_BOOL);
constraint int_lin_eq([-1,1,1],[aux3761,3,s_00016],0);
constraint int_lt_reif(s_00005,aux3761,aux3762_BOOL);
constraint int_le_reif(s_00016, s_00005,aux3763_BOOL);
constraint array_bool_and([w_00002_00016_BOOL,aux3759_BOOL,aux3760_BOOL,aux3762_BOOL,aux3763_BOOL],aux3764_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux3765_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux3766_BOOL);
constraint int_lin_eq([-1,1,1],[aux3767,4,s_00017],0);
constraint int_lt_reif(s_00005,aux3767,aux3768_BOOL);
constraint int_le_reif(s_00017, s_00005,aux3769_BOOL);
constraint array_bool_and([w_00002_00017_BOOL,aux3765_BOOL,aux3766_BOOL,aux3768_BOOL,aux3769_BOOL],aux3770_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux3771_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux3772_BOOL);
constraint int_lin_eq([-1,1,1],[aux3773,1,s_00018],0);
constraint int_lt_reif(s_00005,aux3773,aux3774_BOOL);
constraint int_le_reif(s_00018, s_00005,aux3775_BOOL);
constraint array_bool_and([w_00002_00018_BOOL,aux3771_BOOL,aux3772_BOOL,aux3774_BOOL,aux3775_BOOL],aux3776_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux3777_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3778_BOOL);
constraint int_lin_eq([-1,1,1],[aux3779,4,s_00019],0);
constraint int_lt_reif(s_00005,aux3779,aux3780_BOOL);
constraint int_le_reif(s_00019, s_00005,aux3781_BOOL);
constraint array_bool_and([w_00002_00019_BOOL,aux3777_BOOL,aux3778_BOOL,aux3780_BOOL,aux3781_BOOL],aux3782_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux3783_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux3784_BOOL);
constraint int_lin_eq([-1,1,1],[aux3785,2,s_00020],0);
constraint int_lt_reif(s_00005,aux3785,aux3786_BOOL);
constraint int_le_reif(s_00020, s_00005,aux3787_BOOL);
constraint array_bool_and([w_00002_00020_BOOL,aux3783_BOOL,aux3784_BOOL,aux3786_BOOL,aux3787_BOOL],aux3788_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux3674_INTEGER,aux3680_INTEGER,aux3686_INTEGER,aux3692_INTEGER,aux3698_INTEGER,aux3704_INTEGER,aux3710_INTEGER,aux3716_INTEGER,aux3722_INTEGER,aux3728_INTEGER,aux3734_INTEGER,aux3740_INTEGER,aux3746_INTEGER,aux3752_INTEGER,aux3758_INTEGER,aux3764_INTEGER,aux3770_INTEGER,aux3776_INTEGER,aux3782_INTEGER,aux3788_INTEGER,1],0,aux3789_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux3790_BOOL);
constraint int_lin_eq([-1,1,1],[aux3791,1,s_00018],0);
constraint int_lt_reif(s_00018,aux3791,aux3792_BOOL);
constraint array_bool_and([w_00002_00018_BOOL,aux3790_BOOL,aux3792_BOOL],aux3793_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux3794_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux3795_BOOL);
constraint int_lin_eq([-1,1,1],[aux3796,4,s_00001],0);
constraint int_lt_reif(s_00018,aux3796,aux3797_BOOL);
constraint int_le_reif(s_00001, s_00018,aux3798_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux3794_BOOL,aux3795_BOOL,aux3797_BOOL,aux3798_BOOL],aux3799_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux3800_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux3801_BOOL);
constraint int_lin_eq([-1,1,1],[aux3802,4,s_00002],0);
constraint int_lt_reif(s_00018,aux3802,aux3803_BOOL);
constraint int_le_reif(s_00002, s_00018,aux3804_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux3800_BOOL,aux3801_BOOL,aux3803_BOOL,aux3804_BOOL],aux3805_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux3806_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux3807_BOOL);
constraint int_lin_eq([-1,1,1],[aux3808,3,s_00003],0);
constraint int_lt_reif(s_00018,aux3808,aux3809_BOOL);
constraint int_le_reif(s_00003, s_00018,aux3810_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux3806_BOOL,aux3807_BOOL,aux3809_BOOL,aux3810_BOOL],aux3811_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux3812_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux3813_BOOL);
constraint int_lin_eq([-1,1,1],[aux3814,2,s_00004],0);
constraint int_lt_reif(s_00018,aux3814,aux3815_BOOL);
constraint int_le_reif(s_00004, s_00018,aux3816_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux3812_BOOL,aux3813_BOOL,aux3815_BOOL,aux3816_BOOL],aux3817_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux3818_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux3819_BOOL);
constraint int_lin_eq([-1,1,1],[aux3820,3,s_00005],0);
constraint int_lt_reif(s_00018,aux3820,aux3821_BOOL);
constraint int_le_reif(s_00005, s_00018,aux3822_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux3818_BOOL,aux3819_BOOL,aux3821_BOOL,aux3822_BOOL],aux3823_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux3824_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux3825_BOOL);
constraint int_lin_eq([-1,1,1],[aux3826,2,s_00006],0);
constraint int_lt_reif(s_00018,aux3826,aux3827_BOOL);
constraint int_le_reif(s_00006, s_00018,aux3828_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux3824_BOOL,aux3825_BOOL,aux3827_BOOL,aux3828_BOOL],aux3829_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux3830_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux3831_BOOL);
constraint int_lin_eq([-1,1,1],[aux3832,3,s_00007],0);
constraint int_lt_reif(s_00018,aux3832,aux3833_BOOL);
constraint int_le_reif(s_00007, s_00018,aux3834_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux3830_BOOL,aux3831_BOOL,aux3833_BOOL,aux3834_BOOL],aux3835_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux3836_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux3837_BOOL);
constraint int_lin_eq([-1,1,1],[aux3838,2,s_00008],0);
constraint int_lt_reif(s_00018,aux3838,aux3839_BOOL);
constraint int_le_reif(s_00008, s_00018,aux3840_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux3836_BOOL,aux3837_BOOL,aux3839_BOOL,aux3840_BOOL],aux3841_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux3842_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux3843_BOOL);
constraint int_lin_eq([-1,1,1],[aux3844,2,s_00009],0);
constraint int_lt_reif(s_00018,aux3844,aux3845_BOOL);
constraint int_le_reif(s_00009, s_00018,aux3846_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux3842_BOOL,aux3843_BOOL,aux3845_BOOL,aux3846_BOOL],aux3847_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3848_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux3849_BOOL);
constraint int_lin_eq([-1,1,1],[aux3850,5,s_00010],0);
constraint int_lt_reif(s_00018,aux3850,aux3851_BOOL);
constraint int_le_reif(s_00010, s_00018,aux3852_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux3848_BOOL,aux3849_BOOL,aux3851_BOOL,aux3852_BOOL],aux3853_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux3854_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux3855_BOOL);
constraint int_lin_eq([-1,1,1],[aux3856,3,s_00011],0);
constraint int_lt_reif(s_00018,aux3856,aux3857_BOOL);
constraint int_le_reif(s_00011, s_00018,aux3858_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux3854_BOOL,aux3855_BOOL,aux3857_BOOL,aux3858_BOOL],aux3859_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux3860_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux3861_BOOL);
constraint int_lin_eq([-1,1,1],[aux3862,4,s_00012],0);
constraint int_lt_reif(s_00018,aux3862,aux3863_BOOL);
constraint int_le_reif(s_00012, s_00018,aux3864_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux3860_BOOL,aux3861_BOOL,aux3863_BOOL,aux3864_BOOL],aux3865_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux3866_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux3867_BOOL);
constraint int_lin_eq([-1,1,1],[aux3868,3,s_00013],0);
constraint int_lt_reif(s_00018,aux3868,aux3869_BOOL);
constraint int_le_reif(s_00013, s_00018,aux3870_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux3866_BOOL,aux3867_BOOL,aux3869_BOOL,aux3870_BOOL],aux3871_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux3872_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux3873_BOOL);
constraint int_lin_eq([-1,1,1],[aux3874,2,s_00014],0);
constraint int_lt_reif(s_00018,aux3874,aux3875_BOOL);
constraint int_le_reif(s_00014, s_00018,aux3876_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux3872_BOOL,aux3873_BOOL,aux3875_BOOL,aux3876_BOOL],aux3877_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux3878_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux3879_BOOL);
constraint int_lin_eq([-1,1,1],[aux3880,1,s_00015],0);
constraint int_lt_reif(s_00018,aux3880,aux3881_BOOL);
constraint int_le_reif(s_00015, s_00018,aux3882_BOOL);
constraint array_bool_and([w_00002_00015_BOOL,aux3878_BOOL,aux3879_BOOL,aux3881_BOOL,aux3882_BOOL],aux3883_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux3884_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux3885_BOOL);
constraint int_lin_eq([-1,1,1],[aux3886,3,s_00016],0);
constraint int_lt_reif(s_00018,aux3886,aux3887_BOOL);
constraint int_le_reif(s_00016, s_00018,aux3888_BOOL);
constraint array_bool_and([w_00002_00016_BOOL,aux3884_BOOL,aux3885_BOOL,aux3887_BOOL,aux3888_BOOL],aux3889_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux3890_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux3891_BOOL);
constraint int_lin_eq([-1,1,1],[aux3892,4,s_00017],0);
constraint int_lt_reif(s_00018,aux3892,aux3893_BOOL);
constraint int_le_reif(s_00017, s_00018,aux3894_BOOL);
constraint array_bool_and([w_00002_00017_BOOL,aux3890_BOOL,aux3891_BOOL,aux3893_BOOL,aux3894_BOOL],aux3895_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux3896_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3897_BOOL);
constraint int_lin_eq([-1,1,1],[aux3898,4,s_00019],0);
constraint int_lt_reif(s_00018,aux3898,aux3899_BOOL);
constraint int_le_reif(s_00019, s_00018,aux3900_BOOL);
constraint array_bool_and([w_00002_00019_BOOL,aux3896_BOOL,aux3897_BOOL,aux3899_BOOL,aux3900_BOOL],aux3901_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux3902_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux3903_BOOL);
constraint int_lin_eq([-1,1,1],[aux3904,2,s_00020],0);
constraint int_lt_reif(s_00018,aux3904,aux3905_BOOL);
constraint int_le_reif(s_00020, s_00018,aux3906_BOOL);
constraint array_bool_and([w_00002_00020_BOOL,aux3902_BOOL,aux3903_BOOL,aux3905_BOOL,aux3906_BOOL],aux3907_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux3793_INTEGER,aux3799_INTEGER,aux3805_INTEGER,aux3811_INTEGER,aux3817_INTEGER,aux3823_INTEGER,aux3829_INTEGER,aux3835_INTEGER,aux3841_INTEGER,aux3847_INTEGER,aux3853_INTEGER,aux3859_INTEGER,aux3865_INTEGER,aux3871_INTEGER,aux3877_INTEGER,aux3883_INTEGER,aux3889_INTEGER,aux3895_INTEGER,aux3901_INTEGER,aux3907_INTEGER,1],0,aux3908_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux3909_BOOL);
constraint int_lin_eq([-1,1,1],[aux3910,3,s_00007],0);
constraint int_lt_reif(s_00007,aux3910,aux3911_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux3909_BOOL,aux3911_BOOL],aux3912_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux3913_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux3914_BOOL);
constraint int_lin_eq([-1,1,1],[aux3915,4,s_00001],0);
constraint int_lt_reif(s_00007,aux3915,aux3916_BOOL);
constraint int_le_reif(s_00001, s_00007,aux3917_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux3913_BOOL,aux3914_BOOL,aux3916_BOOL,aux3917_BOOL],aux3918_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux3919_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux3920_BOOL);
constraint int_lin_eq([-1,1,1],[aux3921,4,s_00002],0);
constraint int_lt_reif(s_00007,aux3921,aux3922_BOOL);
constraint int_le_reif(s_00002, s_00007,aux3923_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux3919_BOOL,aux3920_BOOL,aux3922_BOOL,aux3923_BOOL],aux3924_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux3925_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux3926_BOOL);
constraint int_lin_eq([-1,1,1],[aux3927,3,s_00003],0);
constraint int_lt_reif(s_00007,aux3927,aux3928_BOOL);
constraint int_le_reif(s_00003, s_00007,aux3929_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux3925_BOOL,aux3926_BOOL,aux3928_BOOL,aux3929_BOOL],aux3930_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux3931_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux3932_BOOL);
constraint int_lin_eq([-1,1,1],[aux3933,2,s_00004],0);
constraint int_lt_reif(s_00007,aux3933,aux3934_BOOL);
constraint int_le_reif(s_00004, s_00007,aux3935_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux3931_BOOL,aux3932_BOOL,aux3934_BOOL,aux3935_BOOL],aux3936_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux3937_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux3938_BOOL);
constraint int_lin_eq([-1,1,1],[aux3939,3,s_00005],0);
constraint int_lt_reif(s_00007,aux3939,aux3940_BOOL);
constraint int_le_reif(s_00005, s_00007,aux3941_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux3937_BOOL,aux3938_BOOL,aux3940_BOOL,aux3941_BOOL],aux3942_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux3943_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux3944_BOOL);
constraint int_lin_eq([-1,1,1],[aux3945,2,s_00006],0);
constraint int_lt_reif(s_00007,aux3945,aux3946_BOOL);
constraint int_le_reif(s_00006, s_00007,aux3947_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux3943_BOOL,aux3944_BOOL,aux3946_BOOL,aux3947_BOOL],aux3948_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux3949_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux3950_BOOL);
constraint int_lin_eq([-1,1,1],[aux3951,2,s_00008],0);
constraint int_lt_reif(s_00007,aux3951,aux3952_BOOL);
constraint int_le_reif(s_00008, s_00007,aux3953_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux3949_BOOL,aux3950_BOOL,aux3952_BOOL,aux3953_BOOL],aux3954_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux3955_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux3956_BOOL);
constraint int_lin_eq([-1,1,1],[aux3957,2,s_00009],0);
constraint int_lt_reif(s_00007,aux3957,aux3958_BOOL);
constraint int_le_reif(s_00009, s_00007,aux3959_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux3955_BOOL,aux3956_BOOL,aux3958_BOOL,aux3959_BOOL],aux3960_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux3961_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3962_BOOL);
constraint int_lin_eq([-1,1,1],[aux3963,5,s_00010],0);
constraint int_lt_reif(s_00007,aux3963,aux3964_BOOL);
constraint int_le_reif(s_00010, s_00007,aux3965_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux3961_BOOL,aux3962_BOOL,aux3964_BOOL,aux3965_BOOL],aux3966_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux3967_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux3968_BOOL);
constraint int_lin_eq([-1,1,1],[aux3969,3,s_00011],0);
constraint int_lt_reif(s_00007,aux3969,aux3970_BOOL);
constraint int_le_reif(s_00011, s_00007,aux3971_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux3967_BOOL,aux3968_BOOL,aux3970_BOOL,aux3971_BOOL],aux3972_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux3973_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux3974_BOOL);
constraint int_lin_eq([-1,1,1],[aux3975,4,s_00012],0);
constraint int_lt_reif(s_00007,aux3975,aux3976_BOOL);
constraint int_le_reif(s_00012, s_00007,aux3977_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux3973_BOOL,aux3974_BOOL,aux3976_BOOL,aux3977_BOOL],aux3978_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux3979_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux3980_BOOL);
constraint int_lin_eq([-1,1,1],[aux3981,3,s_00013],0);
constraint int_lt_reif(s_00007,aux3981,aux3982_BOOL);
constraint int_le_reif(s_00013, s_00007,aux3983_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux3979_BOOL,aux3980_BOOL,aux3982_BOOL,aux3983_BOOL],aux3984_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux3985_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux3986_BOOL);
constraint int_lin_eq([-1,1,1],[aux3987,2,s_00014],0);
constraint int_lt_reif(s_00007,aux3987,aux3988_BOOL);
constraint int_le_reif(s_00014, s_00007,aux3989_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux3985_BOOL,aux3986_BOOL,aux3988_BOOL,aux3989_BOOL],aux3990_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux3991_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux3992_BOOL);
constraint int_lin_eq([-1,1,1],[aux3993,1,s_00015],0);
constraint int_lt_reif(s_00007,aux3993,aux3994_BOOL);
constraint int_le_reif(s_00015, s_00007,aux3995_BOOL);
constraint array_bool_and([w_00002_00015_BOOL,aux3991_BOOL,aux3992_BOOL,aux3994_BOOL,aux3995_BOOL],aux3996_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux3997_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux3998_BOOL);
constraint int_lin_eq([-1,1,1],[aux3999,3,s_00016],0);
constraint int_lt_reif(s_00007,aux3999,aux4000_BOOL);
constraint int_le_reif(s_00016, s_00007,aux4001_BOOL);
constraint array_bool_and([w_00002_00016_BOOL,aux3997_BOOL,aux3998_BOOL,aux4000_BOOL,aux4001_BOOL],aux4002_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux4003_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux4004_BOOL);
constraint int_lin_eq([-1,1,1],[aux4005,4,s_00017],0);
constraint int_lt_reif(s_00007,aux4005,aux4006_BOOL);
constraint int_le_reif(s_00017, s_00007,aux4007_BOOL);
constraint array_bool_and([w_00002_00017_BOOL,aux4003_BOOL,aux4004_BOOL,aux4006_BOOL,aux4007_BOOL],aux4008_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux4009_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux4010_BOOL);
constraint int_lin_eq([-1,1,1],[aux4011,1,s_00018],0);
constraint int_lt_reif(s_00007,aux4011,aux4012_BOOL);
constraint int_le_reif(s_00018, s_00007,aux4013_BOOL);
constraint array_bool_and([w_00002_00018_BOOL,aux4009_BOOL,aux4010_BOOL,aux4012_BOOL,aux4013_BOOL],aux4014_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux4015_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux4016_BOOL);
constraint int_lin_eq([-1,1,1],[aux4017,4,s_00019],0);
constraint int_lt_reif(s_00007,aux4017,aux4018_BOOL);
constraint int_le_reif(s_00019, s_00007,aux4019_BOOL);
constraint array_bool_and([w_00002_00019_BOOL,aux4015_BOOL,aux4016_BOOL,aux4018_BOOL,aux4019_BOOL],aux4020_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux4021_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux4022_BOOL);
constraint int_lin_eq([-1,1,1],[aux4023,2,s_00020],0);
constraint int_lt_reif(s_00007,aux4023,aux4024_BOOL);
constraint int_le_reif(s_00020, s_00007,aux4025_BOOL);
constraint array_bool_and([w_00002_00020_BOOL,aux4021_BOOL,aux4022_BOOL,aux4024_BOOL,aux4025_BOOL],aux4026_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux3912_INTEGER,aux3918_INTEGER,aux3924_INTEGER,aux3930_INTEGER,aux3936_INTEGER,aux3942_INTEGER,aux3948_INTEGER,aux3954_INTEGER,aux3960_INTEGER,aux3966_INTEGER,aux3972_INTEGER,aux3978_INTEGER,aux3984_INTEGER,aux3990_INTEGER,aux3996_INTEGER,aux4002_INTEGER,aux4008_INTEGER,aux4014_INTEGER,aux4020_INTEGER,aux4026_INTEGER,1],0,aux4027_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux4028_BOOL);
constraint int_lin_eq([-1,1,1],[aux4029,2,s_00006],0);
constraint int_lt_reif(s_00006,aux4029,aux4030_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux4028_BOOL,aux4030_BOOL],aux4031_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux4032_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux4033_BOOL);
constraint int_lin_eq([-1,1,1],[aux4034,4,s_00001],0);
constraint int_lt_reif(s_00006,aux4034,aux4035_BOOL);
constraint int_le_reif(s_00001, s_00006,aux4036_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux4032_BOOL,aux4033_BOOL,aux4035_BOOL,aux4036_BOOL],aux4037_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux4038_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux4039_BOOL);
constraint int_lin_eq([-1,1,1],[aux4040,4,s_00002],0);
constraint int_lt_reif(s_00006,aux4040,aux4041_BOOL);
constraint int_le_reif(s_00002, s_00006,aux4042_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux4038_BOOL,aux4039_BOOL,aux4041_BOOL,aux4042_BOOL],aux4043_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux4044_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux4045_BOOL);
constraint int_lin_eq([-1,1,1],[aux4046,3,s_00003],0);
constraint int_lt_reif(s_00006,aux4046,aux4047_BOOL);
constraint int_le_reif(s_00003, s_00006,aux4048_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux4044_BOOL,aux4045_BOOL,aux4047_BOOL,aux4048_BOOL],aux4049_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux4050_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux4051_BOOL);
constraint int_lin_eq([-1,1,1],[aux4052,2,s_00004],0);
constraint int_lt_reif(s_00006,aux4052,aux4053_BOOL);
constraint int_le_reif(s_00004, s_00006,aux4054_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux4050_BOOL,aux4051_BOOL,aux4053_BOOL,aux4054_BOOL],aux4055_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux4056_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux4057_BOOL);
constraint int_lin_eq([-1,1,1],[aux4058,3,s_00005],0);
constraint int_lt_reif(s_00006,aux4058,aux4059_BOOL);
constraint int_le_reif(s_00005, s_00006,aux4060_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux4056_BOOL,aux4057_BOOL,aux4059_BOOL,aux4060_BOOL],aux4061_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux4062_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux4063_BOOL);
constraint int_lin_eq([-1,1,1],[aux4064,3,s_00007],0);
constraint int_lt_reif(s_00006,aux4064,aux4065_BOOL);
constraint int_le_reif(s_00007, s_00006,aux4066_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux4062_BOOL,aux4063_BOOL,aux4065_BOOL,aux4066_BOOL],aux4067_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux4068_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux4069_BOOL);
constraint int_lin_eq([-1,1,1],[aux4070,2,s_00008],0);
constraint int_lt_reif(s_00006,aux4070,aux4071_BOOL);
constraint int_le_reif(s_00008, s_00006,aux4072_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux4068_BOOL,aux4069_BOOL,aux4071_BOOL,aux4072_BOOL],aux4073_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux4074_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux4075_BOOL);
constraint int_lin_eq([-1,1,1],[aux4076,2,s_00009],0);
constraint int_lt_reif(s_00006,aux4076,aux4077_BOOL);
constraint int_le_reif(s_00009, s_00006,aux4078_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux4074_BOOL,aux4075_BOOL,aux4077_BOOL,aux4078_BOOL],aux4079_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux4080_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux4081_BOOL);
constraint int_lin_eq([-1,1,1],[aux4082,5,s_00010],0);
constraint int_lt_reif(s_00006,aux4082,aux4083_BOOL);
constraint int_le_reif(s_00010, s_00006,aux4084_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux4080_BOOL,aux4081_BOOL,aux4083_BOOL,aux4084_BOOL],aux4085_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux4086_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux4087_BOOL);
constraint int_lin_eq([-1,1,1],[aux4088,3,s_00011],0);
constraint int_lt_reif(s_00006,aux4088,aux4089_BOOL);
constraint int_le_reif(s_00011, s_00006,aux4090_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux4086_BOOL,aux4087_BOOL,aux4089_BOOL,aux4090_BOOL],aux4091_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux4092_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux4093_BOOL);
constraint int_lin_eq([-1,1,1],[aux4094,4,s_00012],0);
constraint int_lt_reif(s_00006,aux4094,aux4095_BOOL);
constraint int_le_reif(s_00012, s_00006,aux4096_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux4092_BOOL,aux4093_BOOL,aux4095_BOOL,aux4096_BOOL],aux4097_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux4098_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux4099_BOOL);
constraint int_lin_eq([-1,1,1],[aux4100,3,s_00013],0);
constraint int_lt_reif(s_00006,aux4100,aux4101_BOOL);
constraint int_le_reif(s_00013, s_00006,aux4102_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux4098_BOOL,aux4099_BOOL,aux4101_BOOL,aux4102_BOOL],aux4103_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux4104_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4105_BOOL);
constraint int_lin_eq([-1,1,1],[aux4106,2,s_00014],0);
constraint int_lt_reif(s_00006,aux4106,aux4107_BOOL);
constraint int_le_reif(s_00014, s_00006,aux4108_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux4104_BOOL,aux4105_BOOL,aux4107_BOOL,aux4108_BOOL],aux4109_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux4110_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4111_BOOL);
constraint int_lin_eq([-1,1,1],[aux4112,1,s_00015],0);
constraint int_lt_reif(s_00006,aux4112,aux4113_BOOL);
constraint int_le_reif(s_00015, s_00006,aux4114_BOOL);
constraint array_bool_and([w_00002_00015_BOOL,aux4110_BOOL,aux4111_BOOL,aux4113_BOOL,aux4114_BOOL],aux4115_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux4116_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux4117_BOOL);
constraint int_lin_eq([-1,1,1],[aux4118,3,s_00016],0);
constraint int_lt_reif(s_00006,aux4118,aux4119_BOOL);
constraint int_le_reif(s_00016, s_00006,aux4120_BOOL);
constraint array_bool_and([w_00002_00016_BOOL,aux4116_BOOL,aux4117_BOOL,aux4119_BOOL,aux4120_BOOL],aux4121_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux4122_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux4123_BOOL);
constraint int_lin_eq([-1,1,1],[aux4124,4,s_00017],0);
constraint int_lt_reif(s_00006,aux4124,aux4125_BOOL);
constraint int_le_reif(s_00017, s_00006,aux4126_BOOL);
constraint array_bool_and([w_00002_00017_BOOL,aux4122_BOOL,aux4123_BOOL,aux4125_BOOL,aux4126_BOOL],aux4127_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux4128_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux4129_BOOL);
constraint int_lin_eq([-1,1,1],[aux4130,1,s_00018],0);
constraint int_lt_reif(s_00006,aux4130,aux4131_BOOL);
constraint int_le_reif(s_00018, s_00006,aux4132_BOOL);
constraint array_bool_and([w_00002_00018_BOOL,aux4128_BOOL,aux4129_BOOL,aux4131_BOOL,aux4132_BOOL],aux4133_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux4134_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux4135_BOOL);
constraint int_lin_eq([-1,1,1],[aux4136,4,s_00019],0);
constraint int_lt_reif(s_00006,aux4136,aux4137_BOOL);
constraint int_le_reif(s_00019, s_00006,aux4138_BOOL);
constraint array_bool_and([w_00002_00019_BOOL,aux4134_BOOL,aux4135_BOOL,aux4137_BOOL,aux4138_BOOL],aux4139_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux4140_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux4141_BOOL);
constraint int_lin_eq([-1,1,1],[aux4142,2,s_00020],0);
constraint int_lt_reif(s_00006,aux4142,aux4143_BOOL);
constraint int_le_reif(s_00020, s_00006,aux4144_BOOL);
constraint array_bool_and([w_00002_00020_BOOL,aux4140_BOOL,aux4141_BOOL,aux4143_BOOL,aux4144_BOOL],aux4145_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux4031_INTEGER,aux4037_INTEGER,aux4043_INTEGER,aux4049_INTEGER,aux4055_INTEGER,aux4061_INTEGER,aux4067_INTEGER,aux4073_INTEGER,aux4079_INTEGER,aux4085_INTEGER,aux4091_INTEGER,aux4097_INTEGER,aux4103_INTEGER,aux4109_INTEGER,aux4115_INTEGER,aux4121_INTEGER,aux4127_INTEGER,aux4133_INTEGER,aux4139_INTEGER,aux4145_INTEGER,1],0,aux4146_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux4147_BOOL);
constraint int_lin_eq([-1,1,1],[aux4148,2,s_00020],0);
constraint int_lt_reif(s_00020,aux4148,aux4149_BOOL);
constraint array_bool_and([w_00002_00020_BOOL,aux4147_BOOL,aux4149_BOOL],aux4150_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux4151_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux4152_BOOL);
constraint int_lin_eq([-1,1,1],[aux4153,4,s_00001],0);
constraint int_lt_reif(s_00020,aux4153,aux4154_BOOL);
constraint int_le_reif(s_00001, s_00020,aux4155_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux4151_BOOL,aux4152_BOOL,aux4154_BOOL,aux4155_BOOL],aux4156_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux4157_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux4158_BOOL);
constraint int_lin_eq([-1,1,1],[aux4159,4,s_00002],0);
constraint int_lt_reif(s_00020,aux4159,aux4160_BOOL);
constraint int_le_reif(s_00002, s_00020,aux4161_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux4157_BOOL,aux4158_BOOL,aux4160_BOOL,aux4161_BOOL],aux4162_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux4163_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux4164_BOOL);
constraint int_lin_eq([-1,1,1],[aux4165,3,s_00003],0);
constraint int_lt_reif(s_00020,aux4165,aux4166_BOOL);
constraint int_le_reif(s_00003, s_00020,aux4167_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux4163_BOOL,aux4164_BOOL,aux4166_BOOL,aux4167_BOOL],aux4168_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux4169_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux4170_BOOL);
constraint int_lin_eq([-1,1,1],[aux4171,2,s_00004],0);
constraint int_lt_reif(s_00020,aux4171,aux4172_BOOL);
constraint int_le_reif(s_00004, s_00020,aux4173_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux4169_BOOL,aux4170_BOOL,aux4172_BOOL,aux4173_BOOL],aux4174_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux4175_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux4176_BOOL);
constraint int_lin_eq([-1,1,1],[aux4177,3,s_00005],0);
constraint int_lt_reif(s_00020,aux4177,aux4178_BOOL);
constraint int_le_reif(s_00005, s_00020,aux4179_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux4175_BOOL,aux4176_BOOL,aux4178_BOOL,aux4179_BOOL],aux4180_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux4181_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux4182_BOOL);
constraint int_lin_eq([-1,1,1],[aux4183,2,s_00006],0);
constraint int_lt_reif(s_00020,aux4183,aux4184_BOOL);
constraint int_le_reif(s_00006, s_00020,aux4185_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux4181_BOOL,aux4182_BOOL,aux4184_BOOL,aux4185_BOOL],aux4186_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux4187_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux4188_BOOL);
constraint int_lin_eq([-1,1,1],[aux4189,3,s_00007],0);
constraint int_lt_reif(s_00020,aux4189,aux4190_BOOL);
constraint int_le_reif(s_00007, s_00020,aux4191_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux4187_BOOL,aux4188_BOOL,aux4190_BOOL,aux4191_BOOL],aux4192_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux4193_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux4194_BOOL);
constraint int_lin_eq([-1,1,1],[aux4195,2,s_00008],0);
constraint int_lt_reif(s_00020,aux4195,aux4196_BOOL);
constraint int_le_reif(s_00008, s_00020,aux4197_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux4193_BOOL,aux4194_BOOL,aux4196_BOOL,aux4197_BOOL],aux4198_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux4199_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux4200_BOOL);
constraint int_lin_eq([-1,1,1],[aux4201,2,s_00009],0);
constraint int_lt_reif(s_00020,aux4201,aux4202_BOOL);
constraint int_le_reif(s_00009, s_00020,aux4203_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux4199_BOOL,aux4200_BOOL,aux4202_BOOL,aux4203_BOOL],aux4204_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux4205_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux4206_BOOL);
constraint int_lin_eq([-1,1,1],[aux4207,5,s_00010],0);
constraint int_lt_reif(s_00020,aux4207,aux4208_BOOL);
constraint int_le_reif(s_00010, s_00020,aux4209_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux4205_BOOL,aux4206_BOOL,aux4208_BOOL,aux4209_BOOL],aux4210_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux4211_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux4212_BOOL);
constraint int_lin_eq([-1,1,1],[aux4213,3,s_00011],0);
constraint int_lt_reif(s_00020,aux4213,aux4214_BOOL);
constraint int_le_reif(s_00011, s_00020,aux4215_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux4211_BOOL,aux4212_BOOL,aux4214_BOOL,aux4215_BOOL],aux4216_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux4217_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux4218_BOOL);
constraint int_lin_eq([-1,1,1],[aux4219,4,s_00012],0);
constraint int_lt_reif(s_00020,aux4219,aux4220_BOOL);
constraint int_le_reif(s_00012, s_00020,aux4221_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux4217_BOOL,aux4218_BOOL,aux4220_BOOL,aux4221_BOOL],aux4222_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux4223_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux4224_BOOL);
constraint int_lin_eq([-1,1,1],[aux4225,3,s_00013],0);
constraint int_lt_reif(s_00020,aux4225,aux4226_BOOL);
constraint int_le_reif(s_00013, s_00020,aux4227_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux4223_BOOL,aux4224_BOOL,aux4226_BOOL,aux4227_BOOL],aux4228_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4229_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux4230_BOOL);
constraint int_lin_eq([-1,1,1],[aux4231,2,s_00014],0);
constraint int_lt_reif(s_00020,aux4231,aux4232_BOOL);
constraint int_le_reif(s_00014, s_00020,aux4233_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux4229_BOOL,aux4230_BOOL,aux4232_BOOL,aux4233_BOOL],aux4234_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4235_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux4236_BOOL);
constraint int_lin_eq([-1,1,1],[aux4237,1,s_00015],0);
constraint int_lt_reif(s_00020,aux4237,aux4238_BOOL);
constraint int_le_reif(s_00015, s_00020,aux4239_BOOL);
constraint array_bool_and([w_00002_00015_BOOL,aux4235_BOOL,aux4236_BOOL,aux4238_BOOL,aux4239_BOOL],aux4240_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux4241_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux4242_BOOL);
constraint int_lin_eq([-1,1,1],[aux4243,3,s_00016],0);
constraint int_lt_reif(s_00020,aux4243,aux4244_BOOL);
constraint int_le_reif(s_00016, s_00020,aux4245_BOOL);
constraint array_bool_and([w_00002_00016_BOOL,aux4241_BOOL,aux4242_BOOL,aux4244_BOOL,aux4245_BOOL],aux4246_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux4247_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux4248_BOOL);
constraint int_lin_eq([-1,1,1],[aux4249,4,s_00017],0);
constraint int_lt_reif(s_00020,aux4249,aux4250_BOOL);
constraint int_le_reif(s_00017, s_00020,aux4251_BOOL);
constraint array_bool_and([w_00002_00017_BOOL,aux4247_BOOL,aux4248_BOOL,aux4250_BOOL,aux4251_BOOL],aux4252_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux4253_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux4254_BOOL);
constraint int_lin_eq([-1,1,1],[aux4255,1,s_00018],0);
constraint int_lt_reif(s_00020,aux4255,aux4256_BOOL);
constraint int_le_reif(s_00018, s_00020,aux4257_BOOL);
constraint array_bool_and([w_00002_00018_BOOL,aux4253_BOOL,aux4254_BOOL,aux4256_BOOL,aux4257_BOOL],aux4258_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux4259_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux4260_BOOL);
constraint int_lin_eq([-1,1,1],[aux4261,4,s_00019],0);
constraint int_lt_reif(s_00020,aux4261,aux4262_BOOL);
constraint int_le_reif(s_00019, s_00020,aux4263_BOOL);
constraint array_bool_and([w_00002_00019_BOOL,aux4259_BOOL,aux4260_BOOL,aux4262_BOOL,aux4263_BOOL],aux4264_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux4150_INTEGER,aux4156_INTEGER,aux4162_INTEGER,aux4168_INTEGER,aux4174_INTEGER,aux4180_INTEGER,aux4186_INTEGER,aux4192_INTEGER,aux4198_INTEGER,aux4204_INTEGER,aux4210_INTEGER,aux4216_INTEGER,aux4222_INTEGER,aux4228_INTEGER,aux4234_INTEGER,aux4240_INTEGER,aux4246_INTEGER,aux4252_INTEGER,aux4258_INTEGER,aux4264_INTEGER,1],0,aux4265_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux4266_BOOL);
constraint int_lin_eq([-1,1,1],[aux4267,4,s_00002],0);
constraint int_lt_reif(s_00002,aux4267,aux4268_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux4266_BOOL,aux4268_BOOL],aux4269_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux4270_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux4271_BOOL);
constraint int_lin_eq([-1,1,1],[aux4272,4,s_00001],0);
constraint int_lt_reif(s_00002,aux4272,aux4273_BOOL);
constraint int_le_reif(s_00001, s_00002,aux4274_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux4270_BOOL,aux4271_BOOL,aux4273_BOOL,aux4274_BOOL],aux4275_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux4276_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux4277_BOOL);
constraint int_lin_eq([-1,1,1],[aux4278,3,s_00003],0);
constraint int_lt_reif(s_00002,aux4278,aux4279_BOOL);
constraint int_le_reif(s_00003, s_00002,aux4280_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux4276_BOOL,aux4277_BOOL,aux4279_BOOL,aux4280_BOOL],aux4281_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux4282_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux4283_BOOL);
constraint int_lin_eq([-1,1,1],[aux4284,2,s_00004],0);
constraint int_lt_reif(s_00002,aux4284,aux4285_BOOL);
constraint int_le_reif(s_00004, s_00002,aux4286_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux4282_BOOL,aux4283_BOOL,aux4285_BOOL,aux4286_BOOL],aux4287_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux4288_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux4289_BOOL);
constraint int_lin_eq([-1,1,1],[aux4290,3,s_00005],0);
constraint int_lt_reif(s_00002,aux4290,aux4291_BOOL);
constraint int_le_reif(s_00005, s_00002,aux4292_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux4288_BOOL,aux4289_BOOL,aux4291_BOOL,aux4292_BOOL],aux4293_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux4294_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux4295_BOOL);
constraint int_lin_eq([-1,1,1],[aux4296,2,s_00006],0);
constraint int_lt_reif(s_00002,aux4296,aux4297_BOOL);
constraint int_le_reif(s_00006, s_00002,aux4298_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux4294_BOOL,aux4295_BOOL,aux4297_BOOL,aux4298_BOOL],aux4299_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux4300_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux4301_BOOL);
constraint int_lin_eq([-1,1,1],[aux4302,3,s_00007],0);
constraint int_lt_reif(s_00002,aux4302,aux4303_BOOL);
constraint int_le_reif(s_00007, s_00002,aux4304_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux4300_BOOL,aux4301_BOOL,aux4303_BOOL,aux4304_BOOL],aux4305_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux4306_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux4307_BOOL);
constraint int_lin_eq([-1,1,1],[aux4308,2,s_00008],0);
constraint int_lt_reif(s_00002,aux4308,aux4309_BOOL);
constraint int_le_reif(s_00008, s_00002,aux4310_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux4306_BOOL,aux4307_BOOL,aux4309_BOOL,aux4310_BOOL],aux4311_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux4312_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux4313_BOOL);
constraint int_lin_eq([-1,1,1],[aux4314,2,s_00009],0);
constraint int_lt_reif(s_00002,aux4314,aux4315_BOOL);
constraint int_le_reif(s_00009, s_00002,aux4316_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux4312_BOOL,aux4313_BOOL,aux4315_BOOL,aux4316_BOOL],aux4317_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux4318_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux4319_BOOL);
constraint int_lin_eq([-1,1,1],[aux4320,5,s_00010],0);
constraint int_lt_reif(s_00002,aux4320,aux4321_BOOL);
constraint int_le_reif(s_00010, s_00002,aux4322_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux4318_BOOL,aux4319_BOOL,aux4321_BOOL,aux4322_BOOL],aux4323_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux4324_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux4325_BOOL);
constraint int_lin_eq([-1,1,1],[aux4326,3,s_00011],0);
constraint int_lt_reif(s_00002,aux4326,aux4327_BOOL);
constraint int_le_reif(s_00011, s_00002,aux4328_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux4324_BOOL,aux4325_BOOL,aux4327_BOOL,aux4328_BOOL],aux4329_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux4330_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux4331_BOOL);
constraint int_lin_eq([-1,1,1],[aux4332,4,s_00012],0);
constraint int_lt_reif(s_00002,aux4332,aux4333_BOOL);
constraint int_le_reif(s_00012, s_00002,aux4334_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux4330_BOOL,aux4331_BOOL,aux4333_BOOL,aux4334_BOOL],aux4335_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux4336_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux4337_BOOL);
constraint int_lin_eq([-1,1,1],[aux4338,3,s_00013],0);
constraint int_lt_reif(s_00002,aux4338,aux4339_BOOL);
constraint int_le_reif(s_00013, s_00002,aux4340_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux4336_BOOL,aux4337_BOOL,aux4339_BOOL,aux4340_BOOL],aux4341_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux4342_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4343_BOOL);
constraint int_lin_eq([-1,1,1],[aux4344,2,s_00014],0);
constraint int_lt_reif(s_00002,aux4344,aux4345_BOOL);
constraint int_le_reif(s_00014, s_00002,aux4346_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux4342_BOOL,aux4343_BOOL,aux4345_BOOL,aux4346_BOOL],aux4347_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux4348_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4349_BOOL);
constraint int_lin_eq([-1,1,1],[aux4350,1,s_00015],0);
constraint int_lt_reif(s_00002,aux4350,aux4351_BOOL);
constraint int_le_reif(s_00015, s_00002,aux4352_BOOL);
constraint array_bool_and([w_00002_00015_BOOL,aux4348_BOOL,aux4349_BOOL,aux4351_BOOL,aux4352_BOOL],aux4353_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux4354_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux4355_BOOL);
constraint int_lin_eq([-1,1,1],[aux4356,3,s_00016],0);
constraint int_lt_reif(s_00002,aux4356,aux4357_BOOL);
constraint int_le_reif(s_00016, s_00002,aux4358_BOOL);
constraint array_bool_and([w_00002_00016_BOOL,aux4354_BOOL,aux4355_BOOL,aux4357_BOOL,aux4358_BOOL],aux4359_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux4360_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux4361_BOOL);
constraint int_lin_eq([-1,1,1],[aux4362,4,s_00017],0);
constraint int_lt_reif(s_00002,aux4362,aux4363_BOOL);
constraint int_le_reif(s_00017, s_00002,aux4364_BOOL);
constraint array_bool_and([w_00002_00017_BOOL,aux4360_BOOL,aux4361_BOOL,aux4363_BOOL,aux4364_BOOL],aux4365_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux4366_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux4367_BOOL);
constraint int_lin_eq([-1,1,1],[aux4368,1,s_00018],0);
constraint int_lt_reif(s_00002,aux4368,aux4369_BOOL);
constraint int_le_reif(s_00018, s_00002,aux4370_BOOL);
constraint array_bool_and([w_00002_00018_BOOL,aux4366_BOOL,aux4367_BOOL,aux4369_BOOL,aux4370_BOOL],aux4371_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux4372_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux4373_BOOL);
constraint int_lin_eq([-1,1,1],[aux4374,4,s_00019],0);
constraint int_lt_reif(s_00002,aux4374,aux4375_BOOL);
constraint int_le_reif(s_00019, s_00002,aux4376_BOOL);
constraint array_bool_and([w_00002_00019_BOOL,aux4372_BOOL,aux4373_BOOL,aux4375_BOOL,aux4376_BOOL],aux4377_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux4378_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux4379_BOOL);
constraint int_lin_eq([-1,1,1],[aux4380,2,s_00020],0);
constraint int_lt_reif(s_00002,aux4380,aux4381_BOOL);
constraint int_le_reif(s_00020, s_00002,aux4382_BOOL);
constraint array_bool_and([w_00002_00020_BOOL,aux4378_BOOL,aux4379_BOOL,aux4381_BOOL,aux4382_BOOL],aux4383_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux4269_INTEGER,aux4275_INTEGER,aux4281_INTEGER,aux4287_INTEGER,aux4293_INTEGER,aux4299_INTEGER,aux4305_INTEGER,aux4311_INTEGER,aux4317_INTEGER,aux4323_INTEGER,aux4329_INTEGER,aux4335_INTEGER,aux4341_INTEGER,aux4347_INTEGER,aux4353_INTEGER,aux4359_INTEGER,aux4365_INTEGER,aux4371_INTEGER,aux4377_INTEGER,aux4383_INTEGER,1],0,aux4384_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux4385_BOOL);
constraint int_lin_eq([-1,1,1],[aux4386,4,s_00012],0);
constraint int_lt_reif(s_00012,aux4386,aux4387_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux4385_BOOL,aux4387_BOOL],aux4388_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux4389_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux4390_BOOL);
constraint int_lin_eq([-1,1,1],[aux4391,4,s_00001],0);
constraint int_lt_reif(s_00012,aux4391,aux4392_BOOL);
constraint int_le_reif(s_00001, s_00012,aux4393_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux4389_BOOL,aux4390_BOOL,aux4392_BOOL,aux4393_BOOL],aux4394_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux4395_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux4396_BOOL);
constraint int_lin_eq([-1,1,1],[aux4397,4,s_00002],0);
constraint int_lt_reif(s_00012,aux4397,aux4398_BOOL);
constraint int_le_reif(s_00002, s_00012,aux4399_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux4395_BOOL,aux4396_BOOL,aux4398_BOOL,aux4399_BOOL],aux4400_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux4401_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux4402_BOOL);
constraint int_lin_eq([-1,1,1],[aux4403,3,s_00003],0);
constraint int_lt_reif(s_00012,aux4403,aux4404_BOOL);
constraint int_le_reif(s_00003, s_00012,aux4405_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux4401_BOOL,aux4402_BOOL,aux4404_BOOL,aux4405_BOOL],aux4406_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux4407_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux4408_BOOL);
constraint int_lin_eq([-1,1,1],[aux4409,2,s_00004],0);
constraint int_lt_reif(s_00012,aux4409,aux4410_BOOL);
constraint int_le_reif(s_00004, s_00012,aux4411_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux4407_BOOL,aux4408_BOOL,aux4410_BOOL,aux4411_BOOL],aux4412_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux4413_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux4414_BOOL);
constraint int_lin_eq([-1,1,1],[aux4415,3,s_00005],0);
constraint int_lt_reif(s_00012,aux4415,aux4416_BOOL);
constraint int_le_reif(s_00005, s_00012,aux4417_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux4413_BOOL,aux4414_BOOL,aux4416_BOOL,aux4417_BOOL],aux4418_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux4419_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux4420_BOOL);
constraint int_lin_eq([-1,1,1],[aux4421,2,s_00006],0);
constraint int_lt_reif(s_00012,aux4421,aux4422_BOOL);
constraint int_le_reif(s_00006, s_00012,aux4423_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux4419_BOOL,aux4420_BOOL,aux4422_BOOL,aux4423_BOOL],aux4424_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux4425_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux4426_BOOL);
constraint int_lin_eq([-1,1,1],[aux4427,3,s_00007],0);
constraint int_lt_reif(s_00012,aux4427,aux4428_BOOL);
constraint int_le_reif(s_00007, s_00012,aux4429_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux4425_BOOL,aux4426_BOOL,aux4428_BOOL,aux4429_BOOL],aux4430_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux4431_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux4432_BOOL);
constraint int_lin_eq([-1,1,1],[aux4433,2,s_00008],0);
constraint int_lt_reif(s_00012,aux4433,aux4434_BOOL);
constraint int_le_reif(s_00008, s_00012,aux4435_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux4431_BOOL,aux4432_BOOL,aux4434_BOOL,aux4435_BOOL],aux4436_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux4437_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux4438_BOOL);
constraint int_lin_eq([-1,1,1],[aux4439,2,s_00009],0);
constraint int_lt_reif(s_00012,aux4439,aux4440_BOOL);
constraint int_le_reif(s_00009, s_00012,aux4441_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux4437_BOOL,aux4438_BOOL,aux4440_BOOL,aux4441_BOOL],aux4442_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux4443_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux4444_BOOL);
constraint int_lin_eq([-1,1,1],[aux4445,5,s_00010],0);
constraint int_lt_reif(s_00012,aux4445,aux4446_BOOL);
constraint int_le_reif(s_00010, s_00012,aux4447_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux4443_BOOL,aux4444_BOOL,aux4446_BOOL,aux4447_BOOL],aux4448_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux4449_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux4450_BOOL);
constraint int_lin_eq([-1,1,1],[aux4451,3,s_00011],0);
constraint int_lt_reif(s_00012,aux4451,aux4452_BOOL);
constraint int_le_reif(s_00011, s_00012,aux4453_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux4449_BOOL,aux4450_BOOL,aux4452_BOOL,aux4453_BOOL],aux4454_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux4455_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux4456_BOOL);
constraint int_lin_eq([-1,1,1],[aux4457,3,s_00013],0);
constraint int_lt_reif(s_00012,aux4457,aux4458_BOOL);
constraint int_le_reif(s_00013, s_00012,aux4459_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux4455_BOOL,aux4456_BOOL,aux4458_BOOL,aux4459_BOOL],aux4460_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux4461_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4462_BOOL);
constraint int_lin_eq([-1,1,1],[aux4463,2,s_00014],0);
constraint int_lt_reif(s_00012,aux4463,aux4464_BOOL);
constraint int_le_reif(s_00014, s_00012,aux4465_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux4461_BOOL,aux4462_BOOL,aux4464_BOOL,aux4465_BOOL],aux4466_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux4467_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4468_BOOL);
constraint int_lin_eq([-1,1,1],[aux4469,1,s_00015],0);
constraint int_lt_reif(s_00012,aux4469,aux4470_BOOL);
constraint int_le_reif(s_00015, s_00012,aux4471_BOOL);
constraint array_bool_and([w_00002_00015_BOOL,aux4467_BOOL,aux4468_BOOL,aux4470_BOOL,aux4471_BOOL],aux4472_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux4473_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux4474_BOOL);
constraint int_lin_eq([-1,1,1],[aux4475,3,s_00016],0);
constraint int_lt_reif(s_00012,aux4475,aux4476_BOOL);
constraint int_le_reif(s_00016, s_00012,aux4477_BOOL);
constraint array_bool_and([w_00002_00016_BOOL,aux4473_BOOL,aux4474_BOOL,aux4476_BOOL,aux4477_BOOL],aux4478_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux4479_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux4480_BOOL);
constraint int_lin_eq([-1,1,1],[aux4481,4,s_00017],0);
constraint int_lt_reif(s_00012,aux4481,aux4482_BOOL);
constraint int_le_reif(s_00017, s_00012,aux4483_BOOL);
constraint array_bool_and([w_00002_00017_BOOL,aux4479_BOOL,aux4480_BOOL,aux4482_BOOL,aux4483_BOOL],aux4484_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux4485_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux4486_BOOL);
constraint int_lin_eq([-1,1,1],[aux4487,1,s_00018],0);
constraint int_lt_reif(s_00012,aux4487,aux4488_BOOL);
constraint int_le_reif(s_00018, s_00012,aux4489_BOOL);
constraint array_bool_and([w_00002_00018_BOOL,aux4485_BOOL,aux4486_BOOL,aux4488_BOOL,aux4489_BOOL],aux4490_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux4491_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux4492_BOOL);
constraint int_lin_eq([-1,1,1],[aux4493,4,s_00019],0);
constraint int_lt_reif(s_00012,aux4493,aux4494_BOOL);
constraint int_le_reif(s_00019, s_00012,aux4495_BOOL);
constraint array_bool_and([w_00002_00019_BOOL,aux4491_BOOL,aux4492_BOOL,aux4494_BOOL,aux4495_BOOL],aux4496_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux4497_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux4498_BOOL);
constraint int_lin_eq([-1,1,1],[aux4499,2,s_00020],0);
constraint int_lt_reif(s_00012,aux4499,aux4500_BOOL);
constraint int_le_reif(s_00020, s_00012,aux4501_BOOL);
constraint array_bool_and([w_00002_00020_BOOL,aux4497_BOOL,aux4498_BOOL,aux4500_BOOL,aux4501_BOOL],aux4502_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux4388_INTEGER,aux4394_INTEGER,aux4400_INTEGER,aux4406_INTEGER,aux4412_INTEGER,aux4418_INTEGER,aux4424_INTEGER,aux4430_INTEGER,aux4436_INTEGER,aux4442_INTEGER,aux4448_INTEGER,aux4454_INTEGER,aux4460_INTEGER,aux4466_INTEGER,aux4472_INTEGER,aux4478_INTEGER,aux4484_INTEGER,aux4490_INTEGER,aux4496_INTEGER,aux4502_INTEGER,1],0,aux4503_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux4504_BOOL);
constraint int_lin_eq([-1,1,1],[aux4505,2,s_00008],0);
constraint int_lt_reif(s_00008,aux4505,aux4506_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux4504_BOOL,aux4506_BOOL],aux4507_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux4508_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux4509_BOOL);
constraint int_lin_eq([-1,1,1],[aux4510,4,s_00001],0);
constraint int_lt_reif(s_00008,aux4510,aux4511_BOOL);
constraint int_le_reif(s_00001, s_00008,aux4512_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux4508_BOOL,aux4509_BOOL,aux4511_BOOL,aux4512_BOOL],aux4513_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux4514_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux4515_BOOL);
constraint int_lin_eq([-1,1,1],[aux4516,4,s_00002],0);
constraint int_lt_reif(s_00008,aux4516,aux4517_BOOL);
constraint int_le_reif(s_00002, s_00008,aux4518_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux4514_BOOL,aux4515_BOOL,aux4517_BOOL,aux4518_BOOL],aux4519_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux4520_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux4521_BOOL);
constraint int_lin_eq([-1,1,1],[aux4522,3,s_00003],0);
constraint int_lt_reif(s_00008,aux4522,aux4523_BOOL);
constraint int_le_reif(s_00003, s_00008,aux4524_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux4520_BOOL,aux4521_BOOL,aux4523_BOOL,aux4524_BOOL],aux4525_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux4526_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux4527_BOOL);
constraint int_lin_eq([-1,1,1],[aux4528,2,s_00004],0);
constraint int_lt_reif(s_00008,aux4528,aux4529_BOOL);
constraint int_le_reif(s_00004, s_00008,aux4530_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux4526_BOOL,aux4527_BOOL,aux4529_BOOL,aux4530_BOOL],aux4531_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux4532_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux4533_BOOL);
constraint int_lin_eq([-1,1,1],[aux4534,3,s_00005],0);
constraint int_lt_reif(s_00008,aux4534,aux4535_BOOL);
constraint int_le_reif(s_00005, s_00008,aux4536_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux4532_BOOL,aux4533_BOOL,aux4535_BOOL,aux4536_BOOL],aux4537_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux4538_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux4539_BOOL);
constraint int_lin_eq([-1,1,1],[aux4540,2,s_00006],0);
constraint int_lt_reif(s_00008,aux4540,aux4541_BOOL);
constraint int_le_reif(s_00006, s_00008,aux4542_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux4538_BOOL,aux4539_BOOL,aux4541_BOOL,aux4542_BOOL],aux4543_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux4544_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux4545_BOOL);
constraint int_lin_eq([-1,1,1],[aux4546,3,s_00007],0);
constraint int_lt_reif(s_00008,aux4546,aux4547_BOOL);
constraint int_le_reif(s_00007, s_00008,aux4548_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux4544_BOOL,aux4545_BOOL,aux4547_BOOL,aux4548_BOOL],aux4549_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux4550_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux4551_BOOL);
constraint int_lin_eq([-1,1,1],[aux4552,2,s_00009],0);
constraint int_lt_reif(s_00008,aux4552,aux4553_BOOL);
constraint int_le_reif(s_00009, s_00008,aux4554_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux4550_BOOL,aux4551_BOOL,aux4553_BOOL,aux4554_BOOL],aux4555_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux4556_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux4557_BOOL);
constraint int_lin_eq([-1,1,1],[aux4558,5,s_00010],0);
constraint int_lt_reif(s_00008,aux4558,aux4559_BOOL);
constraint int_le_reif(s_00010, s_00008,aux4560_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux4556_BOOL,aux4557_BOOL,aux4559_BOOL,aux4560_BOOL],aux4561_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux4562_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux4563_BOOL);
constraint int_lin_eq([-1,1,1],[aux4564,3,s_00011],0);
constraint int_lt_reif(s_00008,aux4564,aux4565_BOOL);
constraint int_le_reif(s_00011, s_00008,aux4566_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux4562_BOOL,aux4563_BOOL,aux4565_BOOL,aux4566_BOOL],aux4567_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux4568_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux4569_BOOL);
constraint int_lin_eq([-1,1,1],[aux4570,4,s_00012],0);
constraint int_lt_reif(s_00008,aux4570,aux4571_BOOL);
constraint int_le_reif(s_00012, s_00008,aux4572_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux4568_BOOL,aux4569_BOOL,aux4571_BOOL,aux4572_BOOL],aux4573_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux4574_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux4575_BOOL);
constraint int_lin_eq([-1,1,1],[aux4576,3,s_00013],0);
constraint int_lt_reif(s_00008,aux4576,aux4577_BOOL);
constraint int_le_reif(s_00013, s_00008,aux4578_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux4574_BOOL,aux4575_BOOL,aux4577_BOOL,aux4578_BOOL],aux4579_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux4580_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4581_BOOL);
constraint int_lin_eq([-1,1,1],[aux4582,2,s_00014],0);
constraint int_lt_reif(s_00008,aux4582,aux4583_BOOL);
constraint int_le_reif(s_00014, s_00008,aux4584_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux4580_BOOL,aux4581_BOOL,aux4583_BOOL,aux4584_BOOL],aux4585_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux4586_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4587_BOOL);
constraint int_lin_eq([-1,1,1],[aux4588,1,s_00015],0);
constraint int_lt_reif(s_00008,aux4588,aux4589_BOOL);
constraint int_le_reif(s_00015, s_00008,aux4590_BOOL);
constraint array_bool_and([w_00002_00015_BOOL,aux4586_BOOL,aux4587_BOOL,aux4589_BOOL,aux4590_BOOL],aux4591_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux4592_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux4593_BOOL);
constraint int_lin_eq([-1,1,1],[aux4594,3,s_00016],0);
constraint int_lt_reif(s_00008,aux4594,aux4595_BOOL);
constraint int_le_reif(s_00016, s_00008,aux4596_BOOL);
constraint array_bool_and([w_00002_00016_BOOL,aux4592_BOOL,aux4593_BOOL,aux4595_BOOL,aux4596_BOOL],aux4597_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux4598_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux4599_BOOL);
constraint int_lin_eq([-1,1,1],[aux4600,4,s_00017],0);
constraint int_lt_reif(s_00008,aux4600,aux4601_BOOL);
constraint int_le_reif(s_00017, s_00008,aux4602_BOOL);
constraint array_bool_and([w_00002_00017_BOOL,aux4598_BOOL,aux4599_BOOL,aux4601_BOOL,aux4602_BOOL],aux4603_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux4604_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux4605_BOOL);
constraint int_lin_eq([-1,1,1],[aux4606,1,s_00018],0);
constraint int_lt_reif(s_00008,aux4606,aux4607_BOOL);
constraint int_le_reif(s_00018, s_00008,aux4608_BOOL);
constraint array_bool_and([w_00002_00018_BOOL,aux4604_BOOL,aux4605_BOOL,aux4607_BOOL,aux4608_BOOL],aux4609_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux4610_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux4611_BOOL);
constraint int_lin_eq([-1,1,1],[aux4612,4,s_00019],0);
constraint int_lt_reif(s_00008,aux4612,aux4613_BOOL);
constraint int_le_reif(s_00019, s_00008,aux4614_BOOL);
constraint array_bool_and([w_00002_00019_BOOL,aux4610_BOOL,aux4611_BOOL,aux4613_BOOL,aux4614_BOOL],aux4615_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux4616_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux4617_BOOL);
constraint int_lin_eq([-1,1,1],[aux4618,2,s_00020],0);
constraint int_lt_reif(s_00008,aux4618,aux4619_BOOL);
constraint int_le_reif(s_00020, s_00008,aux4620_BOOL);
constraint array_bool_and([w_00002_00020_BOOL,aux4616_BOOL,aux4617_BOOL,aux4619_BOOL,aux4620_BOOL],aux4621_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux4507_INTEGER,aux4513_INTEGER,aux4519_INTEGER,aux4525_INTEGER,aux4531_INTEGER,aux4537_INTEGER,aux4543_INTEGER,aux4549_INTEGER,aux4555_INTEGER,aux4561_INTEGER,aux4567_INTEGER,aux4573_INTEGER,aux4579_INTEGER,aux4585_INTEGER,aux4591_INTEGER,aux4597_INTEGER,aux4603_INTEGER,aux4609_INTEGER,aux4615_INTEGER,aux4621_INTEGER,1],0,aux4622_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4623_BOOL);
constraint int_lin_eq([-1,1,1],[aux4624,2,s_00014],0);
constraint int_lt_reif(s_00014,aux4624,aux4625_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux4623_BOOL,aux4625_BOOL],aux4626_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux4627_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4628_BOOL);
constraint int_lin_eq([-1,1,1],[aux4629,4,s_00001],0);
constraint int_lt_reif(s_00014,aux4629,aux4630_BOOL);
constraint int_le_reif(s_00001, s_00014,aux4631_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux4627_BOOL,aux4628_BOOL,aux4630_BOOL,aux4631_BOOL],aux4632_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux4633_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4634_BOOL);
constraint int_lin_eq([-1,1,1],[aux4635,4,s_00002],0);
constraint int_lt_reif(s_00014,aux4635,aux4636_BOOL);
constraint int_le_reif(s_00002, s_00014,aux4637_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux4633_BOOL,aux4634_BOOL,aux4636_BOOL,aux4637_BOOL],aux4638_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux4639_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4640_BOOL);
constraint int_lin_eq([-1,1,1],[aux4641,3,s_00003],0);
constraint int_lt_reif(s_00014,aux4641,aux4642_BOOL);
constraint int_le_reif(s_00003, s_00014,aux4643_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux4639_BOOL,aux4640_BOOL,aux4642_BOOL,aux4643_BOOL],aux4644_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux4645_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4646_BOOL);
constraint int_lin_eq([-1,1,1],[aux4647,2,s_00004],0);
constraint int_lt_reif(s_00014,aux4647,aux4648_BOOL);
constraint int_le_reif(s_00004, s_00014,aux4649_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux4645_BOOL,aux4646_BOOL,aux4648_BOOL,aux4649_BOOL],aux4650_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux4651_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4652_BOOL);
constraint int_lin_eq([-1,1,1],[aux4653,3,s_00005],0);
constraint int_lt_reif(s_00014,aux4653,aux4654_BOOL);
constraint int_le_reif(s_00005, s_00014,aux4655_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux4651_BOOL,aux4652_BOOL,aux4654_BOOL,aux4655_BOOL],aux4656_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux4657_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4658_BOOL);
constraint int_lin_eq([-1,1,1],[aux4659,2,s_00006],0);
constraint int_lt_reif(s_00014,aux4659,aux4660_BOOL);
constraint int_le_reif(s_00006, s_00014,aux4661_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux4657_BOOL,aux4658_BOOL,aux4660_BOOL,aux4661_BOOL],aux4662_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux4663_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4664_BOOL);
constraint int_lin_eq([-1,1,1],[aux4665,3,s_00007],0);
constraint int_lt_reif(s_00014,aux4665,aux4666_BOOL);
constraint int_le_reif(s_00007, s_00014,aux4667_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux4663_BOOL,aux4664_BOOL,aux4666_BOOL,aux4667_BOOL],aux4668_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux4669_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4670_BOOL);
constraint int_lin_eq([-1,1,1],[aux4671,2,s_00008],0);
constraint int_lt_reif(s_00014,aux4671,aux4672_BOOL);
constraint int_le_reif(s_00008, s_00014,aux4673_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux4669_BOOL,aux4670_BOOL,aux4672_BOOL,aux4673_BOOL],aux4674_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux4675_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4676_BOOL);
constraint int_lin_eq([-1,1,1],[aux4677,2,s_00009],0);
constraint int_lt_reif(s_00014,aux4677,aux4678_BOOL);
constraint int_le_reif(s_00009, s_00014,aux4679_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux4675_BOOL,aux4676_BOOL,aux4678_BOOL,aux4679_BOOL],aux4680_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux4681_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4682_BOOL);
constraint int_lin_eq([-1,1,1],[aux4683,5,s_00010],0);
constraint int_lt_reif(s_00014,aux4683,aux4684_BOOL);
constraint int_le_reif(s_00010, s_00014,aux4685_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux4681_BOOL,aux4682_BOOL,aux4684_BOOL,aux4685_BOOL],aux4686_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux4687_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4688_BOOL);
constraint int_lin_eq([-1,1,1],[aux4689,3,s_00011],0);
constraint int_lt_reif(s_00014,aux4689,aux4690_BOOL);
constraint int_le_reif(s_00011, s_00014,aux4691_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux4687_BOOL,aux4688_BOOL,aux4690_BOOL,aux4691_BOOL],aux4692_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux4693_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4694_BOOL);
constraint int_lin_eq([-1,1,1],[aux4695,4,s_00012],0);
constraint int_lt_reif(s_00014,aux4695,aux4696_BOOL);
constraint int_le_reif(s_00012, s_00014,aux4697_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux4693_BOOL,aux4694_BOOL,aux4696_BOOL,aux4697_BOOL],aux4698_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux4699_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4700_BOOL);
constraint int_lin_eq([-1,1,1],[aux4701,3,s_00013],0);
constraint int_lt_reif(s_00014,aux4701,aux4702_BOOL);
constraint int_le_reif(s_00013, s_00014,aux4703_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux4699_BOOL,aux4700_BOOL,aux4702_BOOL,aux4703_BOOL],aux4704_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4705_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4706_BOOL);
constraint int_lin_eq([-1,1,1],[aux4707,1,s_00015],0);
constraint int_lt_reif(s_00014,aux4707,aux4708_BOOL);
constraint int_le_reif(s_00015, s_00014,aux4709_BOOL);
constraint array_bool_and([w_00002_00015_BOOL,aux4705_BOOL,aux4706_BOOL,aux4708_BOOL,aux4709_BOOL],aux4710_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4711_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux4712_BOOL);
constraint int_lin_eq([-1,1,1],[aux4713,3,s_00016],0);
constraint int_lt_reif(s_00014,aux4713,aux4714_BOOL);
constraint int_le_reif(s_00016, s_00014,aux4715_BOOL);
constraint array_bool_and([w_00002_00016_BOOL,aux4711_BOOL,aux4712_BOOL,aux4714_BOOL,aux4715_BOOL],aux4716_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4717_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux4718_BOOL);
constraint int_lin_eq([-1,1,1],[aux4719,4,s_00017],0);
constraint int_lt_reif(s_00014,aux4719,aux4720_BOOL);
constraint int_le_reif(s_00017, s_00014,aux4721_BOOL);
constraint array_bool_and([w_00002_00017_BOOL,aux4717_BOOL,aux4718_BOOL,aux4720_BOOL,aux4721_BOOL],aux4722_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4723_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux4724_BOOL);
constraint int_lin_eq([-1,1,1],[aux4725,1,s_00018],0);
constraint int_lt_reif(s_00014,aux4725,aux4726_BOOL);
constraint int_le_reif(s_00018, s_00014,aux4727_BOOL);
constraint array_bool_and([w_00002_00018_BOOL,aux4723_BOOL,aux4724_BOOL,aux4726_BOOL,aux4727_BOOL],aux4728_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4729_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux4730_BOOL);
constraint int_lin_eq([-1,1,1],[aux4731,4,s_00019],0);
constraint int_lt_reif(s_00014,aux4731,aux4732_BOOL);
constraint int_le_reif(s_00019, s_00014,aux4733_BOOL);
constraint array_bool_and([w_00002_00019_BOOL,aux4729_BOOL,aux4730_BOOL,aux4732_BOOL,aux4733_BOOL],aux4734_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4735_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux4736_BOOL);
constraint int_lin_eq([-1,1,1],[aux4737,2,s_00020],0);
constraint int_lt_reif(s_00014,aux4737,aux4738_BOOL);
constraint int_le_reif(s_00020, s_00014,aux4739_BOOL);
constraint array_bool_and([w_00002_00020_BOOL,aux4735_BOOL,aux4736_BOOL,aux4738_BOOL,aux4739_BOOL],aux4740_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux4626_INTEGER,aux4632_INTEGER,aux4638_INTEGER,aux4644_INTEGER,aux4650_INTEGER,aux4656_INTEGER,aux4662_INTEGER,aux4668_INTEGER,aux4674_INTEGER,aux4680_INTEGER,aux4686_INTEGER,aux4692_INTEGER,aux4698_INTEGER,aux4704_INTEGER,aux4710_INTEGER,aux4716_INTEGER,aux4722_INTEGER,aux4728_INTEGER,aux4734_INTEGER,aux4740_INTEGER,1],0,aux4741_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4742_BOOL);
constraint int_lin_eq([-1,1,1],[aux4743,1,s_00015],0);
constraint int_lt_reif(s_00015,aux4743,aux4744_BOOL);
constraint array_bool_and([w_00002_00015_BOOL,aux4742_BOOL,aux4744_BOOL],aux4745_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux4746_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4747_BOOL);
constraint int_lin_eq([-1,1,1],[aux4748,4,s_00001],0);
constraint int_lt_reif(s_00015,aux4748,aux4749_BOOL);
constraint int_le_reif(s_00001, s_00015,aux4750_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux4746_BOOL,aux4747_BOOL,aux4749_BOOL,aux4750_BOOL],aux4751_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux4752_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4753_BOOL);
constraint int_lin_eq([-1,1,1],[aux4754,4,s_00002],0);
constraint int_lt_reif(s_00015,aux4754,aux4755_BOOL);
constraint int_le_reif(s_00002, s_00015,aux4756_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux4752_BOOL,aux4753_BOOL,aux4755_BOOL,aux4756_BOOL],aux4757_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux4758_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4759_BOOL);
constraint int_lin_eq([-1,1,1],[aux4760,3,s_00003],0);
constraint int_lt_reif(s_00015,aux4760,aux4761_BOOL);
constraint int_le_reif(s_00003, s_00015,aux4762_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux4758_BOOL,aux4759_BOOL,aux4761_BOOL,aux4762_BOOL],aux4763_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux4764_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4765_BOOL);
constraint int_lin_eq([-1,1,1],[aux4766,2,s_00004],0);
constraint int_lt_reif(s_00015,aux4766,aux4767_BOOL);
constraint int_le_reif(s_00004, s_00015,aux4768_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux4764_BOOL,aux4765_BOOL,aux4767_BOOL,aux4768_BOOL],aux4769_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux4770_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4771_BOOL);
constraint int_lin_eq([-1,1,1],[aux4772,3,s_00005],0);
constraint int_lt_reif(s_00015,aux4772,aux4773_BOOL);
constraint int_le_reif(s_00005, s_00015,aux4774_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux4770_BOOL,aux4771_BOOL,aux4773_BOOL,aux4774_BOOL],aux4775_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux4776_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4777_BOOL);
constraint int_lin_eq([-1,1,1],[aux4778,2,s_00006],0);
constraint int_lt_reif(s_00015,aux4778,aux4779_BOOL);
constraint int_le_reif(s_00006, s_00015,aux4780_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux4776_BOOL,aux4777_BOOL,aux4779_BOOL,aux4780_BOOL],aux4781_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux4782_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4783_BOOL);
constraint int_lin_eq([-1,1,1],[aux4784,3,s_00007],0);
constraint int_lt_reif(s_00015,aux4784,aux4785_BOOL);
constraint int_le_reif(s_00007, s_00015,aux4786_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux4782_BOOL,aux4783_BOOL,aux4785_BOOL,aux4786_BOOL],aux4787_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux4788_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4789_BOOL);
constraint int_lin_eq([-1,1,1],[aux4790,2,s_00008],0);
constraint int_lt_reif(s_00015,aux4790,aux4791_BOOL);
constraint int_le_reif(s_00008, s_00015,aux4792_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux4788_BOOL,aux4789_BOOL,aux4791_BOOL,aux4792_BOOL],aux4793_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux4794_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4795_BOOL);
constraint int_lin_eq([-1,1,1],[aux4796,2,s_00009],0);
constraint int_lt_reif(s_00015,aux4796,aux4797_BOOL);
constraint int_le_reif(s_00009, s_00015,aux4798_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux4794_BOOL,aux4795_BOOL,aux4797_BOOL,aux4798_BOOL],aux4799_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux4800_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4801_BOOL);
constraint int_lin_eq([-1,1,1],[aux4802,5,s_00010],0);
constraint int_lt_reif(s_00015,aux4802,aux4803_BOOL);
constraint int_le_reif(s_00010, s_00015,aux4804_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux4800_BOOL,aux4801_BOOL,aux4803_BOOL,aux4804_BOOL],aux4805_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux4806_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4807_BOOL);
constraint int_lin_eq([-1,1,1],[aux4808,3,s_00011],0);
constraint int_lt_reif(s_00015,aux4808,aux4809_BOOL);
constraint int_le_reif(s_00011, s_00015,aux4810_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux4806_BOOL,aux4807_BOOL,aux4809_BOOL,aux4810_BOOL],aux4811_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux4812_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4813_BOOL);
constraint int_lin_eq([-1,1,1],[aux4814,4,s_00012],0);
constraint int_lt_reif(s_00015,aux4814,aux4815_BOOL);
constraint int_le_reif(s_00012, s_00015,aux4816_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux4812_BOOL,aux4813_BOOL,aux4815_BOOL,aux4816_BOOL],aux4817_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux4818_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4819_BOOL);
constraint int_lin_eq([-1,1,1],[aux4820,3,s_00013],0);
constraint int_lt_reif(s_00015,aux4820,aux4821_BOOL);
constraint int_le_reif(s_00013, s_00015,aux4822_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux4818_BOOL,aux4819_BOOL,aux4821_BOOL,aux4822_BOOL],aux4823_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4824_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4825_BOOL);
constraint int_lin_eq([-1,1,1],[aux4826,2,s_00014],0);
constraint int_lt_reif(s_00015,aux4826,aux4827_BOOL);
constraint int_le_reif(s_00014, s_00015,aux4828_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux4824_BOOL,aux4825_BOOL,aux4827_BOOL,aux4828_BOOL],aux4829_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4830_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux4831_BOOL);
constraint int_lin_eq([-1,1,1],[aux4832,3,s_00016],0);
constraint int_lt_reif(s_00015,aux4832,aux4833_BOOL);
constraint int_le_reif(s_00016, s_00015,aux4834_BOOL);
constraint array_bool_and([w_00002_00016_BOOL,aux4830_BOOL,aux4831_BOOL,aux4833_BOOL,aux4834_BOOL],aux4835_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4836_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux4837_BOOL);
constraint int_lin_eq([-1,1,1],[aux4838,4,s_00017],0);
constraint int_lt_reif(s_00015,aux4838,aux4839_BOOL);
constraint int_le_reif(s_00017, s_00015,aux4840_BOOL);
constraint array_bool_and([w_00002_00017_BOOL,aux4836_BOOL,aux4837_BOOL,aux4839_BOOL,aux4840_BOOL],aux4841_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4842_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux4843_BOOL);
constraint int_lin_eq([-1,1,1],[aux4844,1,s_00018],0);
constraint int_lt_reif(s_00015,aux4844,aux4845_BOOL);
constraint int_le_reif(s_00018, s_00015,aux4846_BOOL);
constraint array_bool_and([w_00002_00018_BOOL,aux4842_BOOL,aux4843_BOOL,aux4845_BOOL,aux4846_BOOL],aux4847_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4848_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux4849_BOOL);
constraint int_lin_eq([-1,1,1],[aux4850,4,s_00019],0);
constraint int_lt_reif(s_00015,aux4850,aux4851_BOOL);
constraint int_le_reif(s_00019, s_00015,aux4852_BOOL);
constraint array_bool_and([w_00002_00019_BOOL,aux4848_BOOL,aux4849_BOOL,aux4851_BOOL,aux4852_BOOL],aux4853_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4854_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux4855_BOOL);
constraint int_lin_eq([-1,1,1],[aux4856,2,s_00020],0);
constraint int_lt_reif(s_00015,aux4856,aux4857_BOOL);
constraint int_le_reif(s_00020, s_00015,aux4858_BOOL);
constraint array_bool_and([w_00002_00020_BOOL,aux4854_BOOL,aux4855_BOOL,aux4857_BOOL,aux4858_BOOL],aux4859_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux4745_INTEGER,aux4751_INTEGER,aux4757_INTEGER,aux4763_INTEGER,aux4769_INTEGER,aux4775_INTEGER,aux4781_INTEGER,aux4787_INTEGER,aux4793_INTEGER,aux4799_INTEGER,aux4805_INTEGER,aux4811_INTEGER,aux4817_INTEGER,aux4823_INTEGER,aux4829_INTEGER,aux4835_INTEGER,aux4841_INTEGER,aux4847_INTEGER,aux4853_INTEGER,aux4859_INTEGER,1],0,aux4860_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux4861_BOOL);
constraint int_lin_eq([-1,1,1],[aux4862,3,s_00011],0);
constraint int_lt_reif(s_00011,aux4862,aux4863_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux4861_BOOL,aux4863_BOOL],aux4864_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux4865_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux4866_BOOL);
constraint int_lin_eq([-1,1,1],[aux4867,4,s_00001],0);
constraint int_lt_reif(s_00011,aux4867,aux4868_BOOL);
constraint int_le_reif(s_00001, s_00011,aux4869_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux4865_BOOL,aux4866_BOOL,aux4868_BOOL,aux4869_BOOL],aux4870_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux4871_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux4872_BOOL);
constraint int_lin_eq([-1,1,1],[aux4873,4,s_00002],0);
constraint int_lt_reif(s_00011,aux4873,aux4874_BOOL);
constraint int_le_reif(s_00002, s_00011,aux4875_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux4871_BOOL,aux4872_BOOL,aux4874_BOOL,aux4875_BOOL],aux4876_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux4877_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux4878_BOOL);
constraint int_lin_eq([-1,1,1],[aux4879,3,s_00003],0);
constraint int_lt_reif(s_00011,aux4879,aux4880_BOOL);
constraint int_le_reif(s_00003, s_00011,aux4881_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux4877_BOOL,aux4878_BOOL,aux4880_BOOL,aux4881_BOOL],aux4882_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux4883_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux4884_BOOL);
constraint int_lin_eq([-1,1,1],[aux4885,2,s_00004],0);
constraint int_lt_reif(s_00011,aux4885,aux4886_BOOL);
constraint int_le_reif(s_00004, s_00011,aux4887_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux4883_BOOL,aux4884_BOOL,aux4886_BOOL,aux4887_BOOL],aux4888_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux4889_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux4890_BOOL);
constraint int_lin_eq([-1,1,1],[aux4891,3,s_00005],0);
constraint int_lt_reif(s_00011,aux4891,aux4892_BOOL);
constraint int_le_reif(s_00005, s_00011,aux4893_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux4889_BOOL,aux4890_BOOL,aux4892_BOOL,aux4893_BOOL],aux4894_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux4895_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux4896_BOOL);
constraint int_lin_eq([-1,1,1],[aux4897,2,s_00006],0);
constraint int_lt_reif(s_00011,aux4897,aux4898_BOOL);
constraint int_le_reif(s_00006, s_00011,aux4899_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux4895_BOOL,aux4896_BOOL,aux4898_BOOL,aux4899_BOOL],aux4900_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux4901_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux4902_BOOL);
constraint int_lin_eq([-1,1,1],[aux4903,3,s_00007],0);
constraint int_lt_reif(s_00011,aux4903,aux4904_BOOL);
constraint int_le_reif(s_00007, s_00011,aux4905_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux4901_BOOL,aux4902_BOOL,aux4904_BOOL,aux4905_BOOL],aux4906_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux4907_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux4908_BOOL);
constraint int_lin_eq([-1,1,1],[aux4909,2,s_00008],0);
constraint int_lt_reif(s_00011,aux4909,aux4910_BOOL);
constraint int_le_reif(s_00008, s_00011,aux4911_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux4907_BOOL,aux4908_BOOL,aux4910_BOOL,aux4911_BOOL],aux4912_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux4913_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux4914_BOOL);
constraint int_lin_eq([-1,1,1],[aux4915,2,s_00009],0);
constraint int_lt_reif(s_00011,aux4915,aux4916_BOOL);
constraint int_le_reif(s_00009, s_00011,aux4917_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux4913_BOOL,aux4914_BOOL,aux4916_BOOL,aux4917_BOOL],aux4918_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux4919_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux4920_BOOL);
constraint int_lin_eq([-1,1,1],[aux4921,5,s_00010],0);
constraint int_lt_reif(s_00011,aux4921,aux4922_BOOL);
constraint int_le_reif(s_00010, s_00011,aux4923_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux4919_BOOL,aux4920_BOOL,aux4922_BOOL,aux4923_BOOL],aux4924_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux4925_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux4926_BOOL);
constraint int_lin_eq([-1,1,1],[aux4927,4,s_00012],0);
constraint int_lt_reif(s_00011,aux4927,aux4928_BOOL);
constraint int_le_reif(s_00012, s_00011,aux4929_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux4925_BOOL,aux4926_BOOL,aux4928_BOOL,aux4929_BOOL],aux4930_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux4931_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux4932_BOOL);
constraint int_lin_eq([-1,1,1],[aux4933,3,s_00013],0);
constraint int_lt_reif(s_00011,aux4933,aux4934_BOOL);
constraint int_le_reif(s_00013, s_00011,aux4935_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux4931_BOOL,aux4932_BOOL,aux4934_BOOL,aux4935_BOOL],aux4936_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux4937_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4938_BOOL);
constraint int_lin_eq([-1,1,1],[aux4939,2,s_00014],0);
constraint int_lt_reif(s_00011,aux4939,aux4940_BOOL);
constraint int_le_reif(s_00014, s_00011,aux4941_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux4937_BOOL,aux4938_BOOL,aux4940_BOOL,aux4941_BOOL],aux4942_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux4943_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4944_BOOL);
constraint int_lin_eq([-1,1,1],[aux4945,1,s_00015],0);
constraint int_lt_reif(s_00011,aux4945,aux4946_BOOL);
constraint int_le_reif(s_00015, s_00011,aux4947_BOOL);
constraint array_bool_and([w_00002_00015_BOOL,aux4943_BOOL,aux4944_BOOL,aux4946_BOOL,aux4947_BOOL],aux4948_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux4949_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux4950_BOOL);
constraint int_lin_eq([-1,1,1],[aux4951,3,s_00016],0);
constraint int_lt_reif(s_00011,aux4951,aux4952_BOOL);
constraint int_le_reif(s_00016, s_00011,aux4953_BOOL);
constraint array_bool_and([w_00002_00016_BOOL,aux4949_BOOL,aux4950_BOOL,aux4952_BOOL,aux4953_BOOL],aux4954_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux4955_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux4956_BOOL);
constraint int_lin_eq([-1,1,1],[aux4957,4,s_00017],0);
constraint int_lt_reif(s_00011,aux4957,aux4958_BOOL);
constraint int_le_reif(s_00017, s_00011,aux4959_BOOL);
constraint array_bool_and([w_00002_00017_BOOL,aux4955_BOOL,aux4956_BOOL,aux4958_BOOL,aux4959_BOOL],aux4960_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux4961_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux4962_BOOL);
constraint int_lin_eq([-1,1,1],[aux4963,1,s_00018],0);
constraint int_lt_reif(s_00011,aux4963,aux4964_BOOL);
constraint int_le_reif(s_00018, s_00011,aux4965_BOOL);
constraint array_bool_and([w_00002_00018_BOOL,aux4961_BOOL,aux4962_BOOL,aux4964_BOOL,aux4965_BOOL],aux4966_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux4967_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux4968_BOOL);
constraint int_lin_eq([-1,1,1],[aux4969,4,s_00019],0);
constraint int_lt_reif(s_00011,aux4969,aux4970_BOOL);
constraint int_le_reif(s_00019, s_00011,aux4971_BOOL);
constraint array_bool_and([w_00002_00019_BOOL,aux4967_BOOL,aux4968_BOOL,aux4970_BOOL,aux4971_BOOL],aux4972_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux4973_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux4974_BOOL);
constraint int_lin_eq([-1,1,1],[aux4975,2,s_00020],0);
constraint int_lt_reif(s_00011,aux4975,aux4976_BOOL);
constraint int_le_reif(s_00020, s_00011,aux4977_BOOL);
constraint array_bool_and([w_00002_00020_BOOL,aux4973_BOOL,aux4974_BOOL,aux4976_BOOL,aux4977_BOOL],aux4978_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux4864_INTEGER,aux4870_INTEGER,aux4876_INTEGER,aux4882_INTEGER,aux4888_INTEGER,aux4894_INTEGER,aux4900_INTEGER,aux4906_INTEGER,aux4912_INTEGER,aux4918_INTEGER,aux4924_INTEGER,aux4930_INTEGER,aux4936_INTEGER,aux4942_INTEGER,aux4948_INTEGER,aux4954_INTEGER,aux4960_INTEGER,aux4966_INTEGER,aux4972_INTEGER,aux4978_INTEGER,1],0,aux4979_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux4980_BOOL);
constraint int_lin_eq([-1,1,1],[aux4981,2,s_00004],0);
constraint int_lt_reif(s_00004,aux4981,aux4982_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux4980_BOOL,aux4982_BOOL],aux4983_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux4984_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux4985_BOOL);
constraint int_lin_eq([-1,1,1],[aux4986,4,s_00001],0);
constraint int_lt_reif(s_00004,aux4986,aux4987_BOOL);
constraint int_le_reif(s_00001, s_00004,aux4988_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux4984_BOOL,aux4985_BOOL,aux4987_BOOL,aux4988_BOOL],aux4989_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux4990_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux4991_BOOL);
constraint int_lin_eq([-1,1,1],[aux4992,4,s_00002],0);
constraint int_lt_reif(s_00004,aux4992,aux4993_BOOL);
constraint int_le_reif(s_00002, s_00004,aux4994_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux4990_BOOL,aux4991_BOOL,aux4993_BOOL,aux4994_BOOL],aux4995_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux4996_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux4997_BOOL);
constraint int_lin_eq([-1,1,1],[aux4998,3,s_00003],0);
constraint int_lt_reif(s_00004,aux4998,aux4999_BOOL);
constraint int_le_reif(s_00003, s_00004,aux5000_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux4996_BOOL,aux4997_BOOL,aux4999_BOOL,aux5000_BOOL],aux5001_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux5002_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux5003_BOOL);
constraint int_lin_eq([-1,1,1],[aux5004,3,s_00005],0);
constraint int_lt_reif(s_00004,aux5004,aux5005_BOOL);
constraint int_le_reif(s_00005, s_00004,aux5006_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux5002_BOOL,aux5003_BOOL,aux5005_BOOL,aux5006_BOOL],aux5007_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux5008_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux5009_BOOL);
constraint int_lin_eq([-1,1,1],[aux5010,2,s_00006],0);
constraint int_lt_reif(s_00004,aux5010,aux5011_BOOL);
constraint int_le_reif(s_00006, s_00004,aux5012_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux5008_BOOL,aux5009_BOOL,aux5011_BOOL,aux5012_BOOL],aux5013_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux5014_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux5015_BOOL);
constraint int_lin_eq([-1,1,1],[aux5016,3,s_00007],0);
constraint int_lt_reif(s_00004,aux5016,aux5017_BOOL);
constraint int_le_reif(s_00007, s_00004,aux5018_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux5014_BOOL,aux5015_BOOL,aux5017_BOOL,aux5018_BOOL],aux5019_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux5020_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux5021_BOOL);
constraint int_lin_eq([-1,1,1],[aux5022,2,s_00008],0);
constraint int_lt_reif(s_00004,aux5022,aux5023_BOOL);
constraint int_le_reif(s_00008, s_00004,aux5024_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux5020_BOOL,aux5021_BOOL,aux5023_BOOL,aux5024_BOOL],aux5025_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux5026_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux5027_BOOL);
constraint int_lin_eq([-1,1,1],[aux5028,2,s_00009],0);
constraint int_lt_reif(s_00004,aux5028,aux5029_BOOL);
constraint int_le_reif(s_00009, s_00004,aux5030_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux5026_BOOL,aux5027_BOOL,aux5029_BOOL,aux5030_BOOL],aux5031_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux5032_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux5033_BOOL);
constraint int_lin_eq([-1,1,1],[aux5034,5,s_00010],0);
constraint int_lt_reif(s_00004,aux5034,aux5035_BOOL);
constraint int_le_reif(s_00010, s_00004,aux5036_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux5032_BOOL,aux5033_BOOL,aux5035_BOOL,aux5036_BOOL],aux5037_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux5038_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux5039_BOOL);
constraint int_lin_eq([-1,1,1],[aux5040,3,s_00011],0);
constraint int_lt_reif(s_00004,aux5040,aux5041_BOOL);
constraint int_le_reif(s_00011, s_00004,aux5042_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux5038_BOOL,aux5039_BOOL,aux5041_BOOL,aux5042_BOOL],aux5043_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux5044_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux5045_BOOL);
constraint int_lin_eq([-1,1,1],[aux5046,4,s_00012],0);
constraint int_lt_reif(s_00004,aux5046,aux5047_BOOL);
constraint int_le_reif(s_00012, s_00004,aux5048_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux5044_BOOL,aux5045_BOOL,aux5047_BOOL,aux5048_BOOL],aux5049_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux5050_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux5051_BOOL);
constraint int_lin_eq([-1,1,1],[aux5052,3,s_00013],0);
constraint int_lt_reif(s_00004,aux5052,aux5053_BOOL);
constraint int_le_reif(s_00013, s_00004,aux5054_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux5050_BOOL,aux5051_BOOL,aux5053_BOOL,aux5054_BOOL],aux5055_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux5056_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux5057_BOOL);
constraint int_lin_eq([-1,1,1],[aux5058,2,s_00014],0);
constraint int_lt_reif(s_00004,aux5058,aux5059_BOOL);
constraint int_le_reif(s_00014, s_00004,aux5060_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux5056_BOOL,aux5057_BOOL,aux5059_BOOL,aux5060_BOOL],aux5061_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux5062_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux5063_BOOL);
constraint int_lin_eq([-1,1,1],[aux5064,1,s_00015],0);
constraint int_lt_reif(s_00004,aux5064,aux5065_BOOL);
constraint int_le_reif(s_00015, s_00004,aux5066_BOOL);
constraint array_bool_and([w_00002_00015_BOOL,aux5062_BOOL,aux5063_BOOL,aux5065_BOOL,aux5066_BOOL],aux5067_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux5068_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux5069_BOOL);
constraint int_lin_eq([-1,1,1],[aux5070,3,s_00016],0);
constraint int_lt_reif(s_00004,aux5070,aux5071_BOOL);
constraint int_le_reif(s_00016, s_00004,aux5072_BOOL);
constraint array_bool_and([w_00002_00016_BOOL,aux5068_BOOL,aux5069_BOOL,aux5071_BOOL,aux5072_BOOL],aux5073_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux5074_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux5075_BOOL);
constraint int_lin_eq([-1,1,1],[aux5076,4,s_00017],0);
constraint int_lt_reif(s_00004,aux5076,aux5077_BOOL);
constraint int_le_reif(s_00017, s_00004,aux5078_BOOL);
constraint array_bool_and([w_00002_00017_BOOL,aux5074_BOOL,aux5075_BOOL,aux5077_BOOL,aux5078_BOOL],aux5079_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux5080_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux5081_BOOL);
constraint int_lin_eq([-1,1,1],[aux5082,1,s_00018],0);
constraint int_lt_reif(s_00004,aux5082,aux5083_BOOL);
constraint int_le_reif(s_00018, s_00004,aux5084_BOOL);
constraint array_bool_and([w_00002_00018_BOOL,aux5080_BOOL,aux5081_BOOL,aux5083_BOOL,aux5084_BOOL],aux5085_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux5086_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux5087_BOOL);
constraint int_lin_eq([-1,1,1],[aux5088,4,s_00019],0);
constraint int_lt_reif(s_00004,aux5088,aux5089_BOOL);
constraint int_le_reif(s_00019, s_00004,aux5090_BOOL);
constraint array_bool_and([w_00002_00019_BOOL,aux5086_BOOL,aux5087_BOOL,aux5089_BOOL,aux5090_BOOL],aux5091_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux5092_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux5093_BOOL);
constraint int_lin_eq([-1,1,1],[aux5094,2,s_00020],0);
constraint int_lt_reif(s_00004,aux5094,aux5095_BOOL);
constraint int_le_reif(s_00020, s_00004,aux5096_BOOL);
constraint array_bool_and([w_00002_00020_BOOL,aux5092_BOOL,aux5093_BOOL,aux5095_BOOL,aux5096_BOOL],aux5097_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux4983_INTEGER,aux4989_INTEGER,aux4995_INTEGER,aux5001_INTEGER,aux5007_INTEGER,aux5013_INTEGER,aux5019_INTEGER,aux5025_INTEGER,aux5031_INTEGER,aux5037_INTEGER,aux5043_INTEGER,aux5049_INTEGER,aux5055_INTEGER,aux5061_INTEGER,aux5067_INTEGER,aux5073_INTEGER,aux5079_INTEGER,aux5085_INTEGER,aux5091_INTEGER,aux5097_INTEGER,1],0,aux5098_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux5099_BOOL);
constraint int_lin_eq([-1,1,1],[aux5100,2,s_00009],0);
constraint int_lt_reif(s_00009,aux5100,aux5101_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux5099_BOOL,aux5101_BOOL],aux5102_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux5103_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux5104_BOOL);
constraint int_lin_eq([-1,1,1],[aux5105,4,s_00001],0);
constraint int_lt_reif(s_00009,aux5105,aux5106_BOOL);
constraint int_le_reif(s_00001, s_00009,aux5107_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux5103_BOOL,aux5104_BOOL,aux5106_BOOL,aux5107_BOOL],aux5108_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux5109_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux5110_BOOL);
constraint int_lin_eq([-1,1,1],[aux5111,4,s_00002],0);
constraint int_lt_reif(s_00009,aux5111,aux5112_BOOL);
constraint int_le_reif(s_00002, s_00009,aux5113_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux5109_BOOL,aux5110_BOOL,aux5112_BOOL,aux5113_BOOL],aux5114_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux5115_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux5116_BOOL);
constraint int_lin_eq([-1,1,1],[aux5117,3,s_00003],0);
constraint int_lt_reif(s_00009,aux5117,aux5118_BOOL);
constraint int_le_reif(s_00003, s_00009,aux5119_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux5115_BOOL,aux5116_BOOL,aux5118_BOOL,aux5119_BOOL],aux5120_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux5121_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux5122_BOOL);
constraint int_lin_eq([-1,1,1],[aux5123,2,s_00004],0);
constraint int_lt_reif(s_00009,aux5123,aux5124_BOOL);
constraint int_le_reif(s_00004, s_00009,aux5125_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux5121_BOOL,aux5122_BOOL,aux5124_BOOL,aux5125_BOOL],aux5126_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux5127_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux5128_BOOL);
constraint int_lin_eq([-1,1,1],[aux5129,3,s_00005],0);
constraint int_lt_reif(s_00009,aux5129,aux5130_BOOL);
constraint int_le_reif(s_00005, s_00009,aux5131_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux5127_BOOL,aux5128_BOOL,aux5130_BOOL,aux5131_BOOL],aux5132_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux5133_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux5134_BOOL);
constraint int_lin_eq([-1,1,1],[aux5135,2,s_00006],0);
constraint int_lt_reif(s_00009,aux5135,aux5136_BOOL);
constraint int_le_reif(s_00006, s_00009,aux5137_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux5133_BOOL,aux5134_BOOL,aux5136_BOOL,aux5137_BOOL],aux5138_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux5139_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux5140_BOOL);
constraint int_lin_eq([-1,1,1],[aux5141,3,s_00007],0);
constraint int_lt_reif(s_00009,aux5141,aux5142_BOOL);
constraint int_le_reif(s_00007, s_00009,aux5143_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux5139_BOOL,aux5140_BOOL,aux5142_BOOL,aux5143_BOOL],aux5144_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux5145_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux5146_BOOL);
constraint int_lin_eq([-1,1,1],[aux5147,2,s_00008],0);
constraint int_lt_reif(s_00009,aux5147,aux5148_BOOL);
constraint int_le_reif(s_00008, s_00009,aux5149_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux5145_BOOL,aux5146_BOOL,aux5148_BOOL,aux5149_BOOL],aux5150_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux5151_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux5152_BOOL);
constraint int_lin_eq([-1,1,1],[aux5153,5,s_00010],0);
constraint int_lt_reif(s_00009,aux5153,aux5154_BOOL);
constraint int_le_reif(s_00010, s_00009,aux5155_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux5151_BOOL,aux5152_BOOL,aux5154_BOOL,aux5155_BOOL],aux5156_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux5157_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux5158_BOOL);
constraint int_lin_eq([-1,1,1],[aux5159,3,s_00011],0);
constraint int_lt_reif(s_00009,aux5159,aux5160_BOOL);
constraint int_le_reif(s_00011, s_00009,aux5161_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux5157_BOOL,aux5158_BOOL,aux5160_BOOL,aux5161_BOOL],aux5162_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux5163_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux5164_BOOL);
constraint int_lin_eq([-1,1,1],[aux5165,4,s_00012],0);
constraint int_lt_reif(s_00009,aux5165,aux5166_BOOL);
constraint int_le_reif(s_00012, s_00009,aux5167_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux5163_BOOL,aux5164_BOOL,aux5166_BOOL,aux5167_BOOL],aux5168_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux5169_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux5170_BOOL);
constraint int_lin_eq([-1,1,1],[aux5171,3,s_00013],0);
constraint int_lt_reif(s_00009,aux5171,aux5172_BOOL);
constraint int_le_reif(s_00013, s_00009,aux5173_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux5169_BOOL,aux5170_BOOL,aux5172_BOOL,aux5173_BOOL],aux5174_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux5175_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux5176_BOOL);
constraint int_lin_eq([-1,1,1],[aux5177,2,s_00014],0);
constraint int_lt_reif(s_00009,aux5177,aux5178_BOOL);
constraint int_le_reif(s_00014, s_00009,aux5179_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux5175_BOOL,aux5176_BOOL,aux5178_BOOL,aux5179_BOOL],aux5180_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux5181_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux5182_BOOL);
constraint int_lin_eq([-1,1,1],[aux5183,1,s_00015],0);
constraint int_lt_reif(s_00009,aux5183,aux5184_BOOL);
constraint int_le_reif(s_00015, s_00009,aux5185_BOOL);
constraint array_bool_and([w_00002_00015_BOOL,aux5181_BOOL,aux5182_BOOL,aux5184_BOOL,aux5185_BOOL],aux5186_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux5187_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux5188_BOOL);
constraint int_lin_eq([-1,1,1],[aux5189,3,s_00016],0);
constraint int_lt_reif(s_00009,aux5189,aux5190_BOOL);
constraint int_le_reif(s_00016, s_00009,aux5191_BOOL);
constraint array_bool_and([w_00002_00016_BOOL,aux5187_BOOL,aux5188_BOOL,aux5190_BOOL,aux5191_BOOL],aux5192_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux5193_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux5194_BOOL);
constraint int_lin_eq([-1,1,1],[aux5195,4,s_00017],0);
constraint int_lt_reif(s_00009,aux5195,aux5196_BOOL);
constraint int_le_reif(s_00017, s_00009,aux5197_BOOL);
constraint array_bool_and([w_00002_00017_BOOL,aux5193_BOOL,aux5194_BOOL,aux5196_BOOL,aux5197_BOOL],aux5198_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux5199_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux5200_BOOL);
constraint int_lin_eq([-1,1,1],[aux5201,1,s_00018],0);
constraint int_lt_reif(s_00009,aux5201,aux5202_BOOL);
constraint int_le_reif(s_00018, s_00009,aux5203_BOOL);
constraint array_bool_and([w_00002_00018_BOOL,aux5199_BOOL,aux5200_BOOL,aux5202_BOOL,aux5203_BOOL],aux5204_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux5205_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux5206_BOOL);
constraint int_lin_eq([-1,1,1],[aux5207,4,s_00019],0);
constraint int_lt_reif(s_00009,aux5207,aux5208_BOOL);
constraint int_le_reif(s_00019, s_00009,aux5209_BOOL);
constraint array_bool_and([w_00002_00019_BOOL,aux5205_BOOL,aux5206_BOOL,aux5208_BOOL,aux5209_BOOL],aux5210_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux5211_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux5212_BOOL);
constraint int_lin_eq([-1,1,1],[aux5213,2,s_00020],0);
constraint int_lt_reif(s_00009,aux5213,aux5214_BOOL);
constraint int_le_reif(s_00020, s_00009,aux5215_BOOL);
constraint array_bool_and([w_00002_00020_BOOL,aux5211_BOOL,aux5212_BOOL,aux5214_BOOL,aux5215_BOOL],aux5216_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux5102_INTEGER,aux5108_INTEGER,aux5114_INTEGER,aux5120_INTEGER,aux5126_INTEGER,aux5132_INTEGER,aux5138_INTEGER,aux5144_INTEGER,aux5150_INTEGER,aux5156_INTEGER,aux5162_INTEGER,aux5168_INTEGER,aux5174_INTEGER,aux5180_INTEGER,aux5186_INTEGER,aux5192_INTEGER,aux5198_INTEGER,aux5204_INTEGER,aux5210_INTEGER,aux5216_INTEGER,1],0,aux5217_BOOL);
constraint array_bool_and([aux2956_BOOL,aux3075_BOOL,aux3194_BOOL,aux3313_BOOL,aux3432_BOOL,aux3551_BOOL,aux3670_BOOL,aux3789_BOOL,aux3908_BOOL,aux4027_BOOL,aux4146_BOOL,aux4265_BOOL,aux4384_BOOL,aux4503_BOOL,aux4622_BOOL,aux4741_BOOL,aux4860_BOOL,aux4979_BOOL,aux5098_BOOL,aux5217_BOOL],aux5218_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[TWorkers_00002_00001_INTEGER,TWorkers_00002_00002_INTEGER,TWorkers_00002_00003_INTEGER,TWorkers_00002_00004_INTEGER,TWorkers_00002_00005_INTEGER,TWorkers_00002_00006_INTEGER,TWorkers_00002_00007_INTEGER,TWorkers_00002_00008_INTEGER,TWorkers_00002_00009_INTEGER,TWorkers_00002_00010_INTEGER,TWorkers_00002_00011_INTEGER,TWorkers_00002_00012_INTEGER,TWorkers_00002_00013_INTEGER,TWorkers_00002_00014_INTEGER,TWorkers_00002_00015_INTEGER,TWorkers_00002_00016_INTEGER,TWorkers_00002_00017_INTEGER,TWorkers_00002_00018_INTEGER,TWorkers_00002_00019_INTEGER,TWorkers_00002_00020_INTEGER,1],0,aux5219_BOOL);
constraint int_lin_eq([-1,1,1],[aux5220,4,s_00001],0);
constraint int_lt_reif(s_00004,aux5220,aux5221_BOOL);
constraint int_le_reif(s_00001, s_00004,aux5222_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux5223_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux5224_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux5221_BOOL,aux5222_BOOL,aux5223_BOOL,aux5224_BOOL],aux5225_BOOL);
constraint int_lin_eq([-1,1,1],[aux5226,4,s_00002],0);
constraint int_lt_reif(s_00004,aux5226,aux5227_BOOL);
constraint int_le_reif(s_00002, s_00004,aux5228_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux5229_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux5230_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux5227_BOOL,aux5228_BOOL,aux5229_BOOL,aux5230_BOOL],aux5231_BOOL);
constraint int_lin_eq([-1,1,1],[aux5232,3,s_00003],0);
constraint int_lt_reif(s_00004,aux5232,aux5233_BOOL);
constraint int_le_reif(s_00003, s_00004,aux5234_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux5235_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux5236_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux5233_BOOL,aux5234_BOOL,aux5235_BOOL,aux5236_BOOL],aux5237_BOOL);
constraint int_lin_eq([-1,1,1],[aux5238,3,s_00005],0);
constraint int_lt_reif(s_00004,aux5238,aux5239_BOOL);
constraint int_le_reif(s_00005, s_00004,aux5240_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux5241_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux5242_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux5239_BOOL,aux5240_BOOL,aux5241_BOOL,aux5242_BOOL],aux5243_BOOL);
constraint int_lin_eq([-1,1,1],[aux5244,2,s_00006],0);
constraint int_lt_reif(s_00004,aux5244,aux5245_BOOL);
constraint int_le_reif(s_00006, s_00004,aux5246_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux5247_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux5248_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux5245_BOOL,aux5246_BOOL,aux5247_BOOL,aux5248_BOOL],aux5249_BOOL);
constraint int_lin_eq([-1,1,1],[aux5250,3,s_00007],0);
constraint int_lt_reif(s_00004,aux5250,aux5251_BOOL);
constraint int_le_reif(s_00007, s_00004,aux5252_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux5253_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux5254_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux5251_BOOL,aux5252_BOOL,aux5253_BOOL,aux5254_BOOL],aux5255_BOOL);
constraint int_lin_eq([-1,1,1],[aux5256,2,s_00008],0);
constraint int_lt_reif(s_00004,aux5256,aux5257_BOOL);
constraint int_le_reif(s_00008, s_00004,aux5258_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux5259_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux5260_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux5257_BOOL,aux5258_BOOL,aux5259_BOOL,aux5260_BOOL],aux5261_BOOL);
constraint int_lin_eq([-1,1,1],[aux5262,2,s_00009],0);
constraint int_lt_reif(s_00004,aux5262,aux5263_BOOL);
constraint int_le_reif(s_00009, s_00004,aux5264_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux5265_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux5266_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux5263_BOOL,aux5264_BOOL,aux5265_BOOL,aux5266_BOOL],aux5267_BOOL);
constraint int_lin_eq([-1,1,1],[aux5268,3,s_00011],0);
constraint int_lt_reif(s_00004,aux5268,aux5269_BOOL);
constraint int_le_reif(s_00011, s_00004,aux5270_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux5271_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux5272_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux5269_BOOL,aux5270_BOOL,aux5271_BOOL,aux5272_BOOL],aux5273_BOOL);
constraint int_lin_eq([-1,1,1],[aux5274,5,s_00010],0);
constraint int_lt_reif(s_00004,aux5274,aux5275_BOOL);
constraint int_le_reif(s_00010, s_00004,aux5276_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux5277_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux5278_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux5275_BOOL,aux5276_BOOL,aux5277_BOOL,aux5278_BOOL],aux5279_BOOL);
constraint int_lin_eq([-1,1,1],[aux5280,4,s_00012],0);
constraint int_lt_reif(s_00004,aux5280,aux5281_BOOL);
constraint int_le_reif(s_00012, s_00004,aux5282_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux5283_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux5284_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux5281_BOOL,aux5282_BOOL,aux5283_BOOL,aux5284_BOOL],aux5285_BOOL);
constraint int_lin_eq([-1,1,1],[aux5286,3,s_00013],0);
constraint int_lt_reif(s_00004,aux5286,aux5287_BOOL);
constraint int_le_reif(s_00013, s_00004,aux5288_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux5289_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux5290_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux5287_BOOL,aux5288_BOOL,aux5289_BOOL,aux5290_BOOL],aux5291_BOOL);
constraint int_lin_eq([-1,1,1],[aux5292,2,s_00014],0);
constraint int_lt_reif(s_00004,aux5292,aux5293_BOOL);
constraint int_le_reif(s_00014, s_00004,aux5294_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux5295_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux5296_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux5293_BOOL,aux5294_BOOL,aux5295_BOOL,aux5296_BOOL],aux5297_BOOL);
constraint int_lin_eq([-1,1,1],[aux5298,1,s_00015],0);
constraint int_lt_reif(s_00004,aux5298,aux5299_BOOL);
constraint int_le_reif(s_00015, s_00004,aux5300_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux5301_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux5302_BOOL);
constraint array_bool_and([w_00003_00015_BOOL,aux5299_BOOL,aux5300_BOOL,aux5301_BOOL,aux5302_BOOL],aux5303_BOOL);
constraint int_lin_eq([-1,1,1],[aux5304,3,s_00016],0);
constraint int_lt_reif(s_00004,aux5304,aux5305_BOOL);
constraint int_le_reif(s_00016, s_00004,aux5306_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux5307_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux5308_BOOL);
constraint array_bool_and([w_00003_00016_BOOL,aux5305_BOOL,aux5306_BOOL,aux5307_BOOL,aux5308_BOOL],aux5309_BOOL);
constraint int_lin_eq([-1,1,1],[aux5310,1,s_00018],0);
constraint int_lt_reif(s_00004,aux5310,aux5311_BOOL);
constraint int_le_reif(s_00018, s_00004,aux5312_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux5313_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux5314_BOOL);
constraint array_bool_and([w_00003_00018_BOOL,aux5311_BOOL,aux5312_BOOL,aux5313_BOOL,aux5314_BOOL],aux5315_BOOL);
constraint int_lin_eq([-1,1,1],[aux5316,4,s_00017],0);
constraint int_lt_reif(s_00004,aux5316,aux5317_BOOL);
constraint int_le_reif(s_00017, s_00004,aux5318_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux5319_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux5320_BOOL);
constraint array_bool_and([w_00003_00017_BOOL,aux5317_BOOL,aux5318_BOOL,aux5319_BOOL,aux5320_BOOL],aux5321_BOOL);
constraint int_lin_eq([-1,1,1],[aux5322,4,s_00019],0);
constraint int_lt_reif(s_00004,aux5322,aux5323_BOOL);
constraint int_le_reif(s_00019, s_00004,aux5324_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux5325_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux5326_BOOL);
constraint array_bool_and([w_00003_00019_BOOL,aux5323_BOOL,aux5324_BOOL,aux5325_BOOL,aux5326_BOOL],aux5327_BOOL);
constraint int_lin_eq([-1,1,1],[aux5328,2,s_00020],0);
constraint int_lt_reif(s_00004,aux5328,aux5329_BOOL);
constraint int_le_reif(s_00020, s_00004,aux5330_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux5331_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux5332_BOOL);
constraint array_bool_and([w_00003_00020_BOOL,aux5329_BOOL,aux5330_BOOL,aux5331_BOOL,aux5332_BOOL],aux5333_BOOL);
constraint int_lin_eq([-1,1,1],[aux5334,2,s_00004],0);
constraint int_lt_reif(s_00004,aux5334,aux5335_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux5336_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux5335_BOOL,aux5336_BOOL],aux5337_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux5225_INTEGER,aux5231_INTEGER,aux5237_INTEGER,aux5243_INTEGER,aux5249_INTEGER,aux5255_INTEGER,aux5261_INTEGER,aux5267_INTEGER,aux5273_INTEGER,aux5279_INTEGER,aux5285_INTEGER,aux5291_INTEGER,aux5297_INTEGER,aux5303_INTEGER,aux5309_INTEGER,aux5315_INTEGER,aux5321_INTEGER,aux5327_INTEGER,aux5333_INTEGER,aux5337_INTEGER,1],0,aux5338_BOOL);
constraint int_lin_eq([-1,1,1],[aux5339,4,s_00001],0);
constraint int_lt_reif(s_00012,aux5339,aux5340_BOOL);
constraint int_le_reif(s_00001, s_00012,aux5341_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux5342_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux5343_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux5340_BOOL,aux5341_BOOL,aux5342_BOOL,aux5343_BOOL],aux5344_BOOL);
constraint int_lin_eq([-1,1,1],[aux5345,4,s_00002],0);
constraint int_lt_reif(s_00012,aux5345,aux5346_BOOL);
constraint int_le_reif(s_00002, s_00012,aux5347_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux5348_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux5349_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux5346_BOOL,aux5347_BOOL,aux5348_BOOL,aux5349_BOOL],aux5350_BOOL);
constraint int_lin_eq([-1,1,1],[aux5351,3,s_00003],0);
constraint int_lt_reif(s_00012,aux5351,aux5352_BOOL);
constraint int_le_reif(s_00003, s_00012,aux5353_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux5354_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux5355_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux5352_BOOL,aux5353_BOOL,aux5354_BOOL,aux5355_BOOL],aux5356_BOOL);
constraint int_lin_eq([-1,1,1],[aux5357,2,s_00004],0);
constraint int_lt_reif(s_00012,aux5357,aux5358_BOOL);
constraint int_le_reif(s_00004, s_00012,aux5359_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux5360_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux5361_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux5358_BOOL,aux5359_BOOL,aux5360_BOOL,aux5361_BOOL],aux5362_BOOL);
constraint int_lin_eq([-1,1,1],[aux5363,3,s_00005],0);
constraint int_lt_reif(s_00012,aux5363,aux5364_BOOL);
constraint int_le_reif(s_00005, s_00012,aux5365_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux5366_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux5367_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux5364_BOOL,aux5365_BOOL,aux5366_BOOL,aux5367_BOOL],aux5368_BOOL);
constraint int_lin_eq([-1,1,1],[aux5369,2,s_00006],0);
constraint int_lt_reif(s_00012,aux5369,aux5370_BOOL);
constraint int_le_reif(s_00006, s_00012,aux5371_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux5372_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux5373_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux5370_BOOL,aux5371_BOOL,aux5372_BOOL,aux5373_BOOL],aux5374_BOOL);
constraint int_lin_eq([-1,1,1],[aux5375,3,s_00007],0);
constraint int_lt_reif(s_00012,aux5375,aux5376_BOOL);
constraint int_le_reif(s_00007, s_00012,aux5377_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux5378_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux5379_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux5376_BOOL,aux5377_BOOL,aux5378_BOOL,aux5379_BOOL],aux5380_BOOL);
constraint int_lin_eq([-1,1,1],[aux5381,2,s_00008],0);
constraint int_lt_reif(s_00012,aux5381,aux5382_BOOL);
constraint int_le_reif(s_00008, s_00012,aux5383_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux5384_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux5385_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux5382_BOOL,aux5383_BOOL,aux5384_BOOL,aux5385_BOOL],aux5386_BOOL);
constraint int_lin_eq([-1,1,1],[aux5387,2,s_00009],0);
constraint int_lt_reif(s_00012,aux5387,aux5388_BOOL);
constraint int_le_reif(s_00009, s_00012,aux5389_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux5390_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux5391_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux5388_BOOL,aux5389_BOOL,aux5390_BOOL,aux5391_BOOL],aux5392_BOOL);
constraint int_lin_eq([-1,1,1],[aux5393,3,s_00011],0);
constraint int_lt_reif(s_00012,aux5393,aux5394_BOOL);
constraint int_le_reif(s_00011, s_00012,aux5395_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux5396_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux5397_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux5394_BOOL,aux5395_BOOL,aux5396_BOOL,aux5397_BOOL],aux5398_BOOL);
constraint int_lin_eq([-1,1,1],[aux5399,5,s_00010],0);
constraint int_lt_reif(s_00012,aux5399,aux5400_BOOL);
constraint int_le_reif(s_00010, s_00012,aux5401_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux5402_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux5403_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux5400_BOOL,aux5401_BOOL,aux5402_BOOL,aux5403_BOOL],aux5404_BOOL);
constraint int_lin_eq([-1,1,1],[aux5405,3,s_00013],0);
constraint int_lt_reif(s_00012,aux5405,aux5406_BOOL);
constraint int_le_reif(s_00013, s_00012,aux5407_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux5408_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux5409_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux5406_BOOL,aux5407_BOOL,aux5408_BOOL,aux5409_BOOL],aux5410_BOOL);
constraint int_lin_eq([-1,1,1],[aux5411,2,s_00014],0);
constraint int_lt_reif(s_00012,aux5411,aux5412_BOOL);
constraint int_le_reif(s_00014, s_00012,aux5413_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux5414_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux5415_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux5412_BOOL,aux5413_BOOL,aux5414_BOOL,aux5415_BOOL],aux5416_BOOL);
constraint int_lin_eq([-1,1,1],[aux5417,1,s_00015],0);
constraint int_lt_reif(s_00012,aux5417,aux5418_BOOL);
constraint int_le_reif(s_00015, s_00012,aux5419_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux5420_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux5421_BOOL);
constraint array_bool_and([w_00003_00015_BOOL,aux5418_BOOL,aux5419_BOOL,aux5420_BOOL,aux5421_BOOL],aux5422_BOOL);
constraint int_lin_eq([-1,1,1],[aux5423,3,s_00016],0);
constraint int_lt_reif(s_00012,aux5423,aux5424_BOOL);
constraint int_le_reif(s_00016, s_00012,aux5425_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux5426_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux5427_BOOL);
constraint array_bool_and([w_00003_00016_BOOL,aux5424_BOOL,aux5425_BOOL,aux5426_BOOL,aux5427_BOOL],aux5428_BOOL);
constraint int_lin_eq([-1,1,1],[aux5429,1,s_00018],0);
constraint int_lt_reif(s_00012,aux5429,aux5430_BOOL);
constraint int_le_reif(s_00018, s_00012,aux5431_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux5432_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux5433_BOOL);
constraint array_bool_and([w_00003_00018_BOOL,aux5430_BOOL,aux5431_BOOL,aux5432_BOOL,aux5433_BOOL],aux5434_BOOL);
constraint int_lin_eq([-1,1,1],[aux5435,4,s_00017],0);
constraint int_lt_reif(s_00012,aux5435,aux5436_BOOL);
constraint int_le_reif(s_00017, s_00012,aux5437_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux5438_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux5439_BOOL);
constraint array_bool_and([w_00003_00017_BOOL,aux5436_BOOL,aux5437_BOOL,aux5438_BOOL,aux5439_BOOL],aux5440_BOOL);
constraint int_lin_eq([-1,1,1],[aux5441,4,s_00019],0);
constraint int_lt_reif(s_00012,aux5441,aux5442_BOOL);
constraint int_le_reif(s_00019, s_00012,aux5443_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux5444_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux5445_BOOL);
constraint array_bool_and([w_00003_00019_BOOL,aux5442_BOOL,aux5443_BOOL,aux5444_BOOL,aux5445_BOOL],aux5446_BOOL);
constraint int_lin_eq([-1,1,1],[aux5447,2,s_00020],0);
constraint int_lt_reif(s_00012,aux5447,aux5448_BOOL);
constraint int_le_reif(s_00020, s_00012,aux5449_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux5450_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux5451_BOOL);
constraint array_bool_and([w_00003_00020_BOOL,aux5448_BOOL,aux5449_BOOL,aux5450_BOOL,aux5451_BOOL],aux5452_BOOL);
constraint int_lin_eq([-1,1,1],[aux5453,4,s_00012],0);
constraint int_lt_reif(s_00012,aux5453,aux5454_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux5455_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux5454_BOOL,aux5455_BOOL],aux5456_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux5344_INTEGER,aux5350_INTEGER,aux5356_INTEGER,aux5362_INTEGER,aux5368_INTEGER,aux5374_INTEGER,aux5380_INTEGER,aux5386_INTEGER,aux5392_INTEGER,aux5398_INTEGER,aux5404_INTEGER,aux5410_INTEGER,aux5416_INTEGER,aux5422_INTEGER,aux5428_INTEGER,aux5434_INTEGER,aux5440_INTEGER,aux5446_INTEGER,aux5452_INTEGER,aux5456_INTEGER,1],0,aux5457_BOOL);
constraint int_lin_eq([-1,1,1],[aux5458,4,s_00001],0);
constraint int_lt_reif(s_00020,aux5458,aux5459_BOOL);
constraint int_le_reif(s_00001, s_00020,aux5460_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux5461_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux5462_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux5459_BOOL,aux5460_BOOL,aux5461_BOOL,aux5462_BOOL],aux5463_BOOL);
constraint int_lin_eq([-1,1,1],[aux5464,4,s_00002],0);
constraint int_lt_reif(s_00020,aux5464,aux5465_BOOL);
constraint int_le_reif(s_00002, s_00020,aux5466_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux5467_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux5468_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux5465_BOOL,aux5466_BOOL,aux5467_BOOL,aux5468_BOOL],aux5469_BOOL);
constraint int_lin_eq([-1,1,1],[aux5470,3,s_00003],0);
constraint int_lt_reif(s_00020,aux5470,aux5471_BOOL);
constraint int_le_reif(s_00003, s_00020,aux5472_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux5473_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux5474_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux5471_BOOL,aux5472_BOOL,aux5473_BOOL,aux5474_BOOL],aux5475_BOOL);
constraint int_lin_eq([-1,1,1],[aux5476,2,s_00004],0);
constraint int_lt_reif(s_00020,aux5476,aux5477_BOOL);
constraint int_le_reif(s_00004, s_00020,aux5478_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux5479_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux5480_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux5477_BOOL,aux5478_BOOL,aux5479_BOOL,aux5480_BOOL],aux5481_BOOL);
constraint int_lin_eq([-1,1,1],[aux5482,3,s_00005],0);
constraint int_lt_reif(s_00020,aux5482,aux5483_BOOL);
constraint int_le_reif(s_00005, s_00020,aux5484_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux5485_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux5486_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux5483_BOOL,aux5484_BOOL,aux5485_BOOL,aux5486_BOOL],aux5487_BOOL);
constraint int_lin_eq([-1,1,1],[aux5488,2,s_00006],0);
constraint int_lt_reif(s_00020,aux5488,aux5489_BOOL);
constraint int_le_reif(s_00006, s_00020,aux5490_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux5491_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux5492_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux5489_BOOL,aux5490_BOOL,aux5491_BOOL,aux5492_BOOL],aux5493_BOOL);
constraint int_lin_eq([-1,1,1],[aux5494,3,s_00007],0);
constraint int_lt_reif(s_00020,aux5494,aux5495_BOOL);
constraint int_le_reif(s_00007, s_00020,aux5496_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux5497_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux5498_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux5495_BOOL,aux5496_BOOL,aux5497_BOOL,aux5498_BOOL],aux5499_BOOL);
constraint int_lin_eq([-1,1,1],[aux5500,2,s_00008],0);
constraint int_lt_reif(s_00020,aux5500,aux5501_BOOL);
constraint int_le_reif(s_00008, s_00020,aux5502_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux5503_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux5504_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux5501_BOOL,aux5502_BOOL,aux5503_BOOL,aux5504_BOOL],aux5505_BOOL);
constraint int_lin_eq([-1,1,1],[aux5506,2,s_00009],0);
constraint int_lt_reif(s_00020,aux5506,aux5507_BOOL);
constraint int_le_reif(s_00009, s_00020,aux5508_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux5509_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux5510_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux5507_BOOL,aux5508_BOOL,aux5509_BOOL,aux5510_BOOL],aux5511_BOOL);
constraint int_lin_eq([-1,1,1],[aux5512,3,s_00011],0);
constraint int_lt_reif(s_00020,aux5512,aux5513_BOOL);
constraint int_le_reif(s_00011, s_00020,aux5514_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux5515_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux5516_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux5513_BOOL,aux5514_BOOL,aux5515_BOOL,aux5516_BOOL],aux5517_BOOL);
constraint int_lin_eq([-1,1,1],[aux5518,5,s_00010],0);
constraint int_lt_reif(s_00020,aux5518,aux5519_BOOL);
constraint int_le_reif(s_00010, s_00020,aux5520_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux5521_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux5522_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux5519_BOOL,aux5520_BOOL,aux5521_BOOL,aux5522_BOOL],aux5523_BOOL);
constraint int_lin_eq([-1,1,1],[aux5524,4,s_00012],0);
constraint int_lt_reif(s_00020,aux5524,aux5525_BOOL);
constraint int_le_reif(s_00012, s_00020,aux5526_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux5527_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux5528_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux5525_BOOL,aux5526_BOOL,aux5527_BOOL,aux5528_BOOL],aux5529_BOOL);
constraint int_lin_eq([-1,1,1],[aux5530,3,s_00013],0);
constraint int_lt_reif(s_00020,aux5530,aux5531_BOOL);
constraint int_le_reif(s_00013, s_00020,aux5532_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux5533_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux5534_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux5531_BOOL,aux5532_BOOL,aux5533_BOOL,aux5534_BOOL],aux5535_BOOL);
constraint int_lin_eq([-1,1,1],[aux5536,2,s_00014],0);
constraint int_lt_reif(s_00020,aux5536,aux5537_BOOL);
constraint int_le_reif(s_00014, s_00020,aux5538_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux5539_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux5540_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux5537_BOOL,aux5538_BOOL,aux5539_BOOL,aux5540_BOOL],aux5541_BOOL);
constraint int_lin_eq([-1,1,1],[aux5542,1,s_00015],0);
constraint int_lt_reif(s_00020,aux5542,aux5543_BOOL);
constraint int_le_reif(s_00015, s_00020,aux5544_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux5545_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux5546_BOOL);
constraint array_bool_and([w_00003_00015_BOOL,aux5543_BOOL,aux5544_BOOL,aux5545_BOOL,aux5546_BOOL],aux5547_BOOL);
constraint int_lin_eq([-1,1,1],[aux5548,3,s_00016],0);
constraint int_lt_reif(s_00020,aux5548,aux5549_BOOL);
constraint int_le_reif(s_00016, s_00020,aux5550_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux5551_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux5552_BOOL);
constraint array_bool_and([w_00003_00016_BOOL,aux5549_BOOL,aux5550_BOOL,aux5551_BOOL,aux5552_BOOL],aux5553_BOOL);
constraint int_lin_eq([-1,1,1],[aux5554,1,s_00018],0);
constraint int_lt_reif(s_00020,aux5554,aux5555_BOOL);
constraint int_le_reif(s_00018, s_00020,aux5556_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux5557_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux5558_BOOL);
constraint array_bool_and([w_00003_00018_BOOL,aux5555_BOOL,aux5556_BOOL,aux5557_BOOL,aux5558_BOOL],aux5559_BOOL);
constraint int_lin_eq([-1,1,1],[aux5560,4,s_00017],0);
constraint int_lt_reif(s_00020,aux5560,aux5561_BOOL);
constraint int_le_reif(s_00017, s_00020,aux5562_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux5563_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux5564_BOOL);
constraint array_bool_and([w_00003_00017_BOOL,aux5561_BOOL,aux5562_BOOL,aux5563_BOOL,aux5564_BOOL],aux5565_BOOL);
constraint int_lin_eq([-1,1,1],[aux5566,4,s_00019],0);
constraint int_lt_reif(s_00020,aux5566,aux5567_BOOL);
constraint int_le_reif(s_00019, s_00020,aux5568_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux5569_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux5570_BOOL);
constraint array_bool_and([w_00003_00019_BOOL,aux5567_BOOL,aux5568_BOOL,aux5569_BOOL,aux5570_BOOL],aux5571_BOOL);
constraint int_lin_eq([-1,1,1],[aux5572,2,s_00020],0);
constraint int_lt_reif(s_00020,aux5572,aux5573_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux5574_BOOL);
constraint array_bool_and([w_00003_00020_BOOL,aux5573_BOOL,aux5574_BOOL],aux5575_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux5463_INTEGER,aux5469_INTEGER,aux5475_INTEGER,aux5481_INTEGER,aux5487_INTEGER,aux5493_INTEGER,aux5499_INTEGER,aux5505_INTEGER,aux5511_INTEGER,aux5517_INTEGER,aux5523_INTEGER,aux5529_INTEGER,aux5535_INTEGER,aux5541_INTEGER,aux5547_INTEGER,aux5553_INTEGER,aux5559_INTEGER,aux5565_INTEGER,aux5571_INTEGER,aux5575_INTEGER,1],0,aux5576_BOOL);
constraint int_lin_eq([-1,1,1],[aux5577,4,s_00001],0);
constraint int_lt_reif(s_00019,aux5577,aux5578_BOOL);
constraint int_le_reif(s_00001, s_00019,aux5579_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux5580_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux5581_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux5578_BOOL,aux5579_BOOL,aux5580_BOOL,aux5581_BOOL],aux5582_BOOL);
constraint int_lin_eq([-1,1,1],[aux5583,4,s_00002],0);
constraint int_lt_reif(s_00019,aux5583,aux5584_BOOL);
constraint int_le_reif(s_00002, s_00019,aux5585_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux5586_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux5587_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux5584_BOOL,aux5585_BOOL,aux5586_BOOL,aux5587_BOOL],aux5588_BOOL);
constraint int_lin_eq([-1,1,1],[aux5589,3,s_00003],0);
constraint int_lt_reif(s_00019,aux5589,aux5590_BOOL);
constraint int_le_reif(s_00003, s_00019,aux5591_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux5592_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux5593_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux5590_BOOL,aux5591_BOOL,aux5592_BOOL,aux5593_BOOL],aux5594_BOOL);
constraint int_lin_eq([-1,1,1],[aux5595,2,s_00004],0);
constraint int_lt_reif(s_00019,aux5595,aux5596_BOOL);
constraint int_le_reif(s_00004, s_00019,aux5597_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux5598_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux5599_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux5596_BOOL,aux5597_BOOL,aux5598_BOOL,aux5599_BOOL],aux5600_BOOL);
constraint int_lin_eq([-1,1,1],[aux5601,3,s_00005],0);
constraint int_lt_reif(s_00019,aux5601,aux5602_BOOL);
constraint int_le_reif(s_00005, s_00019,aux5603_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux5604_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux5605_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux5602_BOOL,aux5603_BOOL,aux5604_BOOL,aux5605_BOOL],aux5606_BOOL);
constraint int_lin_eq([-1,1,1],[aux5607,2,s_00006],0);
constraint int_lt_reif(s_00019,aux5607,aux5608_BOOL);
constraint int_le_reif(s_00006, s_00019,aux5609_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux5610_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux5611_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux5608_BOOL,aux5609_BOOL,aux5610_BOOL,aux5611_BOOL],aux5612_BOOL);
constraint int_lin_eq([-1,1,1],[aux5613,3,s_00007],0);
constraint int_lt_reif(s_00019,aux5613,aux5614_BOOL);
constraint int_le_reif(s_00007, s_00019,aux5615_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux5616_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux5617_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux5614_BOOL,aux5615_BOOL,aux5616_BOOL,aux5617_BOOL],aux5618_BOOL);
constraint int_lin_eq([-1,1,1],[aux5619,2,s_00008],0);
constraint int_lt_reif(s_00019,aux5619,aux5620_BOOL);
constraint int_le_reif(s_00008, s_00019,aux5621_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux5622_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux5623_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux5620_BOOL,aux5621_BOOL,aux5622_BOOL,aux5623_BOOL],aux5624_BOOL);
constraint int_lin_eq([-1,1,1],[aux5625,2,s_00009],0);
constraint int_lt_reif(s_00019,aux5625,aux5626_BOOL);
constraint int_le_reif(s_00009, s_00019,aux5627_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux5628_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux5629_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux5626_BOOL,aux5627_BOOL,aux5628_BOOL,aux5629_BOOL],aux5630_BOOL);
constraint int_lin_eq([-1,1,1],[aux5631,3,s_00011],0);
constraint int_lt_reif(s_00019,aux5631,aux5632_BOOL);
constraint int_le_reif(s_00011, s_00019,aux5633_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux5634_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux5635_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux5632_BOOL,aux5633_BOOL,aux5634_BOOL,aux5635_BOOL],aux5636_BOOL);
constraint int_lin_eq([-1,1,1],[aux5637,5,s_00010],0);
constraint int_lt_reif(s_00019,aux5637,aux5638_BOOL);
constraint int_le_reif(s_00010, s_00019,aux5639_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux5640_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux5641_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux5638_BOOL,aux5639_BOOL,aux5640_BOOL,aux5641_BOOL],aux5642_BOOL);
constraint int_lin_eq([-1,1,1],[aux5643,4,s_00012],0);
constraint int_lt_reif(s_00019,aux5643,aux5644_BOOL);
constraint int_le_reif(s_00012, s_00019,aux5645_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux5646_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux5647_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux5644_BOOL,aux5645_BOOL,aux5646_BOOL,aux5647_BOOL],aux5648_BOOL);
constraint int_lin_eq([-1,1,1],[aux5649,3,s_00013],0);
constraint int_lt_reif(s_00019,aux5649,aux5650_BOOL);
constraint int_le_reif(s_00013, s_00019,aux5651_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux5652_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux5653_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux5650_BOOL,aux5651_BOOL,aux5652_BOOL,aux5653_BOOL],aux5654_BOOL);
constraint int_lin_eq([-1,1,1],[aux5655,2,s_00014],0);
constraint int_lt_reif(s_00019,aux5655,aux5656_BOOL);
constraint int_le_reif(s_00014, s_00019,aux5657_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux5658_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux5659_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux5656_BOOL,aux5657_BOOL,aux5658_BOOL,aux5659_BOOL],aux5660_BOOL);
constraint int_lin_eq([-1,1,1],[aux5661,1,s_00015],0);
constraint int_lt_reif(s_00019,aux5661,aux5662_BOOL);
constraint int_le_reif(s_00015, s_00019,aux5663_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux5664_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux5665_BOOL);
constraint array_bool_and([w_00003_00015_BOOL,aux5662_BOOL,aux5663_BOOL,aux5664_BOOL,aux5665_BOOL],aux5666_BOOL);
constraint int_lin_eq([-1,1,1],[aux5667,3,s_00016],0);
constraint int_lt_reif(s_00019,aux5667,aux5668_BOOL);
constraint int_le_reif(s_00016, s_00019,aux5669_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux5670_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux5671_BOOL);
constraint array_bool_and([w_00003_00016_BOOL,aux5668_BOOL,aux5669_BOOL,aux5670_BOOL,aux5671_BOOL],aux5672_BOOL);
constraint int_lin_eq([-1,1,1],[aux5673,1,s_00018],0);
constraint int_lt_reif(s_00019,aux5673,aux5674_BOOL);
constraint int_le_reif(s_00018, s_00019,aux5675_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux5676_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux5677_BOOL);
constraint array_bool_and([w_00003_00018_BOOL,aux5674_BOOL,aux5675_BOOL,aux5676_BOOL,aux5677_BOOL],aux5678_BOOL);
constraint int_lin_eq([-1,1,1],[aux5679,4,s_00017],0);
constraint int_lt_reif(s_00019,aux5679,aux5680_BOOL);
constraint int_le_reif(s_00017, s_00019,aux5681_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux5682_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux5683_BOOL);
constraint array_bool_and([w_00003_00017_BOOL,aux5680_BOOL,aux5681_BOOL,aux5682_BOOL,aux5683_BOOL],aux5684_BOOL);
constraint int_lin_eq([-1,1,1],[aux5685,2,s_00020],0);
constraint int_lt_reif(s_00019,aux5685,aux5686_BOOL);
constraint int_le_reif(s_00020, s_00019,aux5687_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux5688_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux5689_BOOL);
constraint array_bool_and([w_00003_00020_BOOL,aux5686_BOOL,aux5687_BOOL,aux5688_BOOL,aux5689_BOOL],aux5690_BOOL);
constraint int_lin_eq([-1,1,1],[aux5691,4,s_00019],0);
constraint int_lt_reif(s_00019,aux5691,aux5692_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux5693_BOOL);
constraint array_bool_and([w_00003_00019_BOOL,aux5692_BOOL,aux5693_BOOL],aux5694_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux5582_INTEGER,aux5588_INTEGER,aux5594_INTEGER,aux5600_INTEGER,aux5606_INTEGER,aux5612_INTEGER,aux5618_INTEGER,aux5624_INTEGER,aux5630_INTEGER,aux5636_INTEGER,aux5642_INTEGER,aux5648_INTEGER,aux5654_INTEGER,aux5660_INTEGER,aux5666_INTEGER,aux5672_INTEGER,aux5678_INTEGER,aux5684_INTEGER,aux5690_INTEGER,aux5694_INTEGER,1],0,aux5695_BOOL);
constraint int_lin_eq([-1,1,1],[aux5696,4,s_00001],0);
constraint int_lt_reif(s_00006,aux5696,aux5697_BOOL);
constraint int_le_reif(s_00001, s_00006,aux5698_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux5699_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux5700_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux5697_BOOL,aux5698_BOOL,aux5699_BOOL,aux5700_BOOL],aux5701_BOOL);
constraint int_lin_eq([-1,1,1],[aux5702,4,s_00002],0);
constraint int_lt_reif(s_00006,aux5702,aux5703_BOOL);
constraint int_le_reif(s_00002, s_00006,aux5704_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux5705_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux5706_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux5703_BOOL,aux5704_BOOL,aux5705_BOOL,aux5706_BOOL],aux5707_BOOL);
constraint int_lin_eq([-1,1,1],[aux5708,3,s_00003],0);
constraint int_lt_reif(s_00006,aux5708,aux5709_BOOL);
constraint int_le_reif(s_00003, s_00006,aux5710_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux5711_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux5712_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux5709_BOOL,aux5710_BOOL,aux5711_BOOL,aux5712_BOOL],aux5713_BOOL);
constraint int_lin_eq([-1,1,1],[aux5714,2,s_00004],0);
constraint int_lt_reif(s_00006,aux5714,aux5715_BOOL);
constraint int_le_reif(s_00004, s_00006,aux5716_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux5717_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux5718_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux5715_BOOL,aux5716_BOOL,aux5717_BOOL,aux5718_BOOL],aux5719_BOOL);
constraint int_lin_eq([-1,1,1],[aux5720,3,s_00005],0);
constraint int_lt_reif(s_00006,aux5720,aux5721_BOOL);
constraint int_le_reif(s_00005, s_00006,aux5722_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux5723_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux5724_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux5721_BOOL,aux5722_BOOL,aux5723_BOOL,aux5724_BOOL],aux5725_BOOL);
constraint int_lin_eq([-1,1,1],[aux5726,3,s_00007],0);
constraint int_lt_reif(s_00006,aux5726,aux5727_BOOL);
constraint int_le_reif(s_00007, s_00006,aux5728_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux5729_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux5730_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux5727_BOOL,aux5728_BOOL,aux5729_BOOL,aux5730_BOOL],aux5731_BOOL);
constraint int_lin_eq([-1,1,1],[aux5732,2,s_00008],0);
constraint int_lt_reif(s_00006,aux5732,aux5733_BOOL);
constraint int_le_reif(s_00008, s_00006,aux5734_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux5735_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux5736_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux5733_BOOL,aux5734_BOOL,aux5735_BOOL,aux5736_BOOL],aux5737_BOOL);
constraint int_lin_eq([-1,1,1],[aux5738,2,s_00009],0);
constraint int_lt_reif(s_00006,aux5738,aux5739_BOOL);
constraint int_le_reif(s_00009, s_00006,aux5740_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux5741_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux5742_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux5739_BOOL,aux5740_BOOL,aux5741_BOOL,aux5742_BOOL],aux5743_BOOL);
constraint int_lin_eq([-1,1,1],[aux5744,3,s_00011],0);
constraint int_lt_reif(s_00006,aux5744,aux5745_BOOL);
constraint int_le_reif(s_00011, s_00006,aux5746_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux5747_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux5748_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux5745_BOOL,aux5746_BOOL,aux5747_BOOL,aux5748_BOOL],aux5749_BOOL);
constraint int_lin_eq([-1,1,1],[aux5750,5,s_00010],0);
constraint int_lt_reif(s_00006,aux5750,aux5751_BOOL);
constraint int_le_reif(s_00010, s_00006,aux5752_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux5753_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux5754_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux5751_BOOL,aux5752_BOOL,aux5753_BOOL,aux5754_BOOL],aux5755_BOOL);
constraint int_lin_eq([-1,1,1],[aux5756,4,s_00012],0);
constraint int_lt_reif(s_00006,aux5756,aux5757_BOOL);
constraint int_le_reif(s_00012, s_00006,aux5758_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux5759_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux5760_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux5757_BOOL,aux5758_BOOL,aux5759_BOOL,aux5760_BOOL],aux5761_BOOL);
constraint int_lin_eq([-1,1,1],[aux5762,3,s_00013],0);
constraint int_lt_reif(s_00006,aux5762,aux5763_BOOL);
constraint int_le_reif(s_00013, s_00006,aux5764_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux5765_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux5766_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux5763_BOOL,aux5764_BOOL,aux5765_BOOL,aux5766_BOOL],aux5767_BOOL);
constraint int_lin_eq([-1,1,1],[aux5768,2,s_00014],0);
constraint int_lt_reif(s_00006,aux5768,aux5769_BOOL);
constraint int_le_reif(s_00014, s_00006,aux5770_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux5771_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux5772_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux5769_BOOL,aux5770_BOOL,aux5771_BOOL,aux5772_BOOL],aux5773_BOOL);
constraint int_lin_eq([-1,1,1],[aux5774,1,s_00015],0);
constraint int_lt_reif(s_00006,aux5774,aux5775_BOOL);
constraint int_le_reif(s_00015, s_00006,aux5776_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux5777_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux5778_BOOL);
constraint array_bool_and([w_00003_00015_BOOL,aux5775_BOOL,aux5776_BOOL,aux5777_BOOL,aux5778_BOOL],aux5779_BOOL);
constraint int_lin_eq([-1,1,1],[aux5780,3,s_00016],0);
constraint int_lt_reif(s_00006,aux5780,aux5781_BOOL);
constraint int_le_reif(s_00016, s_00006,aux5782_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux5783_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux5784_BOOL);
constraint array_bool_and([w_00003_00016_BOOL,aux5781_BOOL,aux5782_BOOL,aux5783_BOOL,aux5784_BOOL],aux5785_BOOL);
constraint int_lin_eq([-1,1,1],[aux5786,1,s_00018],0);
constraint int_lt_reif(s_00006,aux5786,aux5787_BOOL);
constraint int_le_reif(s_00018, s_00006,aux5788_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux5789_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux5790_BOOL);
constraint array_bool_and([w_00003_00018_BOOL,aux5787_BOOL,aux5788_BOOL,aux5789_BOOL,aux5790_BOOL],aux5791_BOOL);
constraint int_lin_eq([-1,1,1],[aux5792,4,s_00017],0);
constraint int_lt_reif(s_00006,aux5792,aux5793_BOOL);
constraint int_le_reif(s_00017, s_00006,aux5794_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux5795_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux5796_BOOL);
constraint array_bool_and([w_00003_00017_BOOL,aux5793_BOOL,aux5794_BOOL,aux5795_BOOL,aux5796_BOOL],aux5797_BOOL);
constraint int_lin_eq([-1,1,1],[aux5798,4,s_00019],0);
constraint int_lt_reif(s_00006,aux5798,aux5799_BOOL);
constraint int_le_reif(s_00019, s_00006,aux5800_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux5801_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux5802_BOOL);
constraint array_bool_and([w_00003_00019_BOOL,aux5799_BOOL,aux5800_BOOL,aux5801_BOOL,aux5802_BOOL],aux5803_BOOL);
constraint int_lin_eq([-1,1,1],[aux5804,2,s_00020],0);
constraint int_lt_reif(s_00006,aux5804,aux5805_BOOL);
constraint int_le_reif(s_00020, s_00006,aux5806_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux5807_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux5808_BOOL);
constraint array_bool_and([w_00003_00020_BOOL,aux5805_BOOL,aux5806_BOOL,aux5807_BOOL,aux5808_BOOL],aux5809_BOOL);
constraint int_lin_eq([-1,1,1],[aux5810,2,s_00006],0);
constraint int_lt_reif(s_00006,aux5810,aux5811_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux5812_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux5811_BOOL,aux5812_BOOL],aux5813_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux5701_INTEGER,aux5707_INTEGER,aux5713_INTEGER,aux5719_INTEGER,aux5725_INTEGER,aux5731_INTEGER,aux5737_INTEGER,aux5743_INTEGER,aux5749_INTEGER,aux5755_INTEGER,aux5761_INTEGER,aux5767_INTEGER,aux5773_INTEGER,aux5779_INTEGER,aux5785_INTEGER,aux5791_INTEGER,aux5797_INTEGER,aux5803_INTEGER,aux5809_INTEGER,aux5813_INTEGER,1],0,aux5814_BOOL);
constraint int_lin_eq([-1,1,1],[aux5815,4,s_00001],0);
constraint int_lt_reif(s_00014,aux5815,aux5816_BOOL);
constraint int_le_reif(s_00001, s_00014,aux5817_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux5818_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux5819_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux5816_BOOL,aux5817_BOOL,aux5818_BOOL,aux5819_BOOL],aux5820_BOOL);
constraint int_lin_eq([-1,1,1],[aux5821,4,s_00002],0);
constraint int_lt_reif(s_00014,aux5821,aux5822_BOOL);
constraint int_le_reif(s_00002, s_00014,aux5823_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux5824_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux5825_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux5822_BOOL,aux5823_BOOL,aux5824_BOOL,aux5825_BOOL],aux5826_BOOL);
constraint int_lin_eq([-1,1,1],[aux5827,3,s_00003],0);
constraint int_lt_reif(s_00014,aux5827,aux5828_BOOL);
constraint int_le_reif(s_00003, s_00014,aux5829_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux5830_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux5831_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux5828_BOOL,aux5829_BOOL,aux5830_BOOL,aux5831_BOOL],aux5832_BOOL);
constraint int_lin_eq([-1,1,1],[aux5833,2,s_00004],0);
constraint int_lt_reif(s_00014,aux5833,aux5834_BOOL);
constraint int_le_reif(s_00004, s_00014,aux5835_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux5836_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux5837_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux5834_BOOL,aux5835_BOOL,aux5836_BOOL,aux5837_BOOL],aux5838_BOOL);
constraint int_lin_eq([-1,1,1],[aux5839,3,s_00005],0);
constraint int_lt_reif(s_00014,aux5839,aux5840_BOOL);
constraint int_le_reif(s_00005, s_00014,aux5841_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux5842_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux5843_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux5840_BOOL,aux5841_BOOL,aux5842_BOOL,aux5843_BOOL],aux5844_BOOL);
constraint int_lin_eq([-1,1,1],[aux5845,2,s_00006],0);
constraint int_lt_reif(s_00014,aux5845,aux5846_BOOL);
constraint int_le_reif(s_00006, s_00014,aux5847_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux5848_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux5849_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux5846_BOOL,aux5847_BOOL,aux5848_BOOL,aux5849_BOOL],aux5850_BOOL);
constraint int_lin_eq([-1,1,1],[aux5851,3,s_00007],0);
constraint int_lt_reif(s_00014,aux5851,aux5852_BOOL);
constraint int_le_reif(s_00007, s_00014,aux5853_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux5854_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux5855_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux5852_BOOL,aux5853_BOOL,aux5854_BOOL,aux5855_BOOL],aux5856_BOOL);
constraint int_lin_eq([-1,1,1],[aux5857,2,s_00008],0);
constraint int_lt_reif(s_00014,aux5857,aux5858_BOOL);
constraint int_le_reif(s_00008, s_00014,aux5859_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux5860_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux5861_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux5858_BOOL,aux5859_BOOL,aux5860_BOOL,aux5861_BOOL],aux5862_BOOL);
constraint int_lin_eq([-1,1,1],[aux5863,2,s_00009],0);
constraint int_lt_reif(s_00014,aux5863,aux5864_BOOL);
constraint int_le_reif(s_00009, s_00014,aux5865_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux5866_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux5867_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux5864_BOOL,aux5865_BOOL,aux5866_BOOL,aux5867_BOOL],aux5868_BOOL);
constraint int_lin_eq([-1,1,1],[aux5869,3,s_00011],0);
constraint int_lt_reif(s_00014,aux5869,aux5870_BOOL);
constraint int_le_reif(s_00011, s_00014,aux5871_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux5872_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux5873_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux5870_BOOL,aux5871_BOOL,aux5872_BOOL,aux5873_BOOL],aux5874_BOOL);
constraint int_lin_eq([-1,1,1],[aux5875,5,s_00010],0);
constraint int_lt_reif(s_00014,aux5875,aux5876_BOOL);
constraint int_le_reif(s_00010, s_00014,aux5877_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux5878_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux5879_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux5876_BOOL,aux5877_BOOL,aux5878_BOOL,aux5879_BOOL],aux5880_BOOL);
constraint int_lin_eq([-1,1,1],[aux5881,4,s_00012],0);
constraint int_lt_reif(s_00014,aux5881,aux5882_BOOL);
constraint int_le_reif(s_00012, s_00014,aux5883_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux5884_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux5885_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux5882_BOOL,aux5883_BOOL,aux5884_BOOL,aux5885_BOOL],aux5886_BOOL);
constraint int_lin_eq([-1,1,1],[aux5887,3,s_00013],0);
constraint int_lt_reif(s_00014,aux5887,aux5888_BOOL);
constraint int_le_reif(s_00013, s_00014,aux5889_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux5890_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux5891_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux5888_BOOL,aux5889_BOOL,aux5890_BOOL,aux5891_BOOL],aux5892_BOOL);
constraint int_lin_eq([-1,1,1],[aux5893,1,s_00015],0);
constraint int_lt_reif(s_00014,aux5893,aux5894_BOOL);
constraint int_le_reif(s_00015, s_00014,aux5895_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux5896_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux5897_BOOL);
constraint array_bool_and([w_00003_00015_BOOL,aux5894_BOOL,aux5895_BOOL,aux5896_BOOL,aux5897_BOOL],aux5898_BOOL);
constraint int_lin_eq([-1,1,1],[aux5899,3,s_00016],0);
constraint int_lt_reif(s_00014,aux5899,aux5900_BOOL);
constraint int_le_reif(s_00016, s_00014,aux5901_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux5902_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux5903_BOOL);
constraint array_bool_and([w_00003_00016_BOOL,aux5900_BOOL,aux5901_BOOL,aux5902_BOOL,aux5903_BOOL],aux5904_BOOL);
constraint int_lin_eq([-1,1,1],[aux5905,1,s_00018],0);
constraint int_lt_reif(s_00014,aux5905,aux5906_BOOL);
constraint int_le_reif(s_00018, s_00014,aux5907_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux5908_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux5909_BOOL);
constraint array_bool_and([w_00003_00018_BOOL,aux5906_BOOL,aux5907_BOOL,aux5908_BOOL,aux5909_BOOL],aux5910_BOOL);
constraint int_lin_eq([-1,1,1],[aux5911,4,s_00017],0);
constraint int_lt_reif(s_00014,aux5911,aux5912_BOOL);
constraint int_le_reif(s_00017, s_00014,aux5913_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux5914_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux5915_BOOL);
constraint array_bool_and([w_00003_00017_BOOL,aux5912_BOOL,aux5913_BOOL,aux5914_BOOL,aux5915_BOOL],aux5916_BOOL);
constraint int_lin_eq([-1,1,1],[aux5917,4,s_00019],0);
constraint int_lt_reif(s_00014,aux5917,aux5918_BOOL);
constraint int_le_reif(s_00019, s_00014,aux5919_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux5920_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux5921_BOOL);
constraint array_bool_and([w_00003_00019_BOOL,aux5918_BOOL,aux5919_BOOL,aux5920_BOOL,aux5921_BOOL],aux5922_BOOL);
constraint int_lin_eq([-1,1,1],[aux5923,2,s_00020],0);
constraint int_lt_reif(s_00014,aux5923,aux5924_BOOL);
constraint int_le_reif(s_00020, s_00014,aux5925_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux5926_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux5927_BOOL);
constraint array_bool_and([w_00003_00020_BOOL,aux5924_BOOL,aux5925_BOOL,aux5926_BOOL,aux5927_BOOL],aux5928_BOOL);
constraint int_lin_eq([-1,1,1],[aux5929,2,s_00014],0);
constraint int_lt_reif(s_00014,aux5929,aux5930_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux5931_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux5930_BOOL,aux5931_BOOL],aux5932_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux5820_INTEGER,aux5826_INTEGER,aux5832_INTEGER,aux5838_INTEGER,aux5844_INTEGER,aux5850_INTEGER,aux5856_INTEGER,aux5862_INTEGER,aux5868_INTEGER,aux5874_INTEGER,aux5880_INTEGER,aux5886_INTEGER,aux5892_INTEGER,aux5898_INTEGER,aux5904_INTEGER,aux5910_INTEGER,aux5916_INTEGER,aux5922_INTEGER,aux5928_INTEGER,aux5932_INTEGER,1],0,aux5933_BOOL);
constraint int_lin_eq([-1,1,1],[aux5934,4,s_00002],0);
constraint int_lt_reif(s_00001,aux5934,aux5935_BOOL);
constraint int_le_reif(s_00002, s_00001,aux5936_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux5937_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux5938_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux5935_BOOL,aux5936_BOOL,aux5937_BOOL,aux5938_BOOL],aux5939_BOOL);
constraint int_lin_eq([-1,1,1],[aux5940,3,s_00003],0);
constraint int_lt_reif(s_00001,aux5940,aux5941_BOOL);
constraint int_le_reif(s_00003, s_00001,aux5942_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux5943_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux5944_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux5941_BOOL,aux5942_BOOL,aux5943_BOOL,aux5944_BOOL],aux5945_BOOL);
constraint int_lin_eq([-1,1,1],[aux5946,2,s_00004],0);
constraint int_lt_reif(s_00001,aux5946,aux5947_BOOL);
constraint int_le_reif(s_00004, s_00001,aux5948_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux5949_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux5950_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux5947_BOOL,aux5948_BOOL,aux5949_BOOL,aux5950_BOOL],aux5951_BOOL);
constraint int_lin_eq([-1,1,1],[aux5952,3,s_00005],0);
constraint int_lt_reif(s_00001,aux5952,aux5953_BOOL);
constraint int_le_reif(s_00005, s_00001,aux5954_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux5955_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux5956_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux5953_BOOL,aux5954_BOOL,aux5955_BOOL,aux5956_BOOL],aux5957_BOOL);
constraint int_lin_eq([-1,1,1],[aux5958,2,s_00006],0);
constraint int_lt_reif(s_00001,aux5958,aux5959_BOOL);
constraint int_le_reif(s_00006, s_00001,aux5960_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux5961_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux5962_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux5959_BOOL,aux5960_BOOL,aux5961_BOOL,aux5962_BOOL],aux5963_BOOL);
constraint int_lin_eq([-1,1,1],[aux5964,3,s_00007],0);
constraint int_lt_reif(s_00001,aux5964,aux5965_BOOL);
constraint int_le_reif(s_00007, s_00001,aux5966_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux5967_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux5968_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux5965_BOOL,aux5966_BOOL,aux5967_BOOL,aux5968_BOOL],aux5969_BOOL);
constraint int_lin_eq([-1,1,1],[aux5970,2,s_00008],0);
constraint int_lt_reif(s_00001,aux5970,aux5971_BOOL);
constraint int_le_reif(s_00008, s_00001,aux5972_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux5973_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux5974_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux5971_BOOL,aux5972_BOOL,aux5973_BOOL,aux5974_BOOL],aux5975_BOOL);
constraint int_lin_eq([-1,1,1],[aux5976,2,s_00009],0);
constraint int_lt_reif(s_00001,aux5976,aux5977_BOOL);
constraint int_le_reif(s_00009, s_00001,aux5978_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux5979_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux5980_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux5977_BOOL,aux5978_BOOL,aux5979_BOOL,aux5980_BOOL],aux5981_BOOL);
constraint int_lin_eq([-1,1,1],[aux5982,3,s_00011],0);
constraint int_lt_reif(s_00001,aux5982,aux5983_BOOL);
constraint int_le_reif(s_00011, s_00001,aux5984_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux5985_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux5986_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux5983_BOOL,aux5984_BOOL,aux5985_BOOL,aux5986_BOOL],aux5987_BOOL);
constraint int_lin_eq([-1,1,1],[aux5988,5,s_00010],0);
constraint int_lt_reif(s_00001,aux5988,aux5989_BOOL);
constraint int_le_reif(s_00010, s_00001,aux5990_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux5991_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux5992_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux5989_BOOL,aux5990_BOOL,aux5991_BOOL,aux5992_BOOL],aux5993_BOOL);
constraint int_lin_eq([-1,1,1],[aux5994,4,s_00012],0);
constraint int_lt_reif(s_00001,aux5994,aux5995_BOOL);
constraint int_le_reif(s_00012, s_00001,aux5996_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux5997_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux5998_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux5995_BOOL,aux5996_BOOL,aux5997_BOOL,aux5998_BOOL],aux5999_BOOL);
constraint int_lin_eq([-1,1,1],[aux6000,3,s_00013],0);
constraint int_lt_reif(s_00001,aux6000,aux6001_BOOL);
constraint int_le_reif(s_00013, s_00001,aux6002_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux6003_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux6004_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux6001_BOOL,aux6002_BOOL,aux6003_BOOL,aux6004_BOOL],aux6005_BOOL);
constraint int_lin_eq([-1,1,1],[aux6006,2,s_00014],0);
constraint int_lt_reif(s_00001,aux6006,aux6007_BOOL);
constraint int_le_reif(s_00014, s_00001,aux6008_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux6009_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux6010_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux6007_BOOL,aux6008_BOOL,aux6009_BOOL,aux6010_BOOL],aux6011_BOOL);
constraint int_lin_eq([-1,1,1],[aux6012,1,s_00015],0);
constraint int_lt_reif(s_00001,aux6012,aux6013_BOOL);
constraint int_le_reif(s_00015, s_00001,aux6014_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux6015_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux6016_BOOL);
constraint array_bool_and([w_00003_00015_BOOL,aux6013_BOOL,aux6014_BOOL,aux6015_BOOL,aux6016_BOOL],aux6017_BOOL);
constraint int_lin_eq([-1,1,1],[aux6018,3,s_00016],0);
constraint int_lt_reif(s_00001,aux6018,aux6019_BOOL);
constraint int_le_reif(s_00016, s_00001,aux6020_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux6021_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux6022_BOOL);
constraint array_bool_and([w_00003_00016_BOOL,aux6019_BOOL,aux6020_BOOL,aux6021_BOOL,aux6022_BOOL],aux6023_BOOL);
constraint int_lin_eq([-1,1,1],[aux6024,1,s_00018],0);
constraint int_lt_reif(s_00001,aux6024,aux6025_BOOL);
constraint int_le_reif(s_00018, s_00001,aux6026_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux6027_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux6028_BOOL);
constraint array_bool_and([w_00003_00018_BOOL,aux6025_BOOL,aux6026_BOOL,aux6027_BOOL,aux6028_BOOL],aux6029_BOOL);
constraint int_lin_eq([-1,1,1],[aux6030,4,s_00017],0);
constraint int_lt_reif(s_00001,aux6030,aux6031_BOOL);
constraint int_le_reif(s_00017, s_00001,aux6032_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux6033_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux6034_BOOL);
constraint array_bool_and([w_00003_00017_BOOL,aux6031_BOOL,aux6032_BOOL,aux6033_BOOL,aux6034_BOOL],aux6035_BOOL);
constraint int_lin_eq([-1,1,1],[aux6036,4,s_00019],0);
constraint int_lt_reif(s_00001,aux6036,aux6037_BOOL);
constraint int_le_reif(s_00019, s_00001,aux6038_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux6039_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux6040_BOOL);
constraint array_bool_and([w_00003_00019_BOOL,aux6037_BOOL,aux6038_BOOL,aux6039_BOOL,aux6040_BOOL],aux6041_BOOL);
constraint int_lin_eq([-1,1,1],[aux6042,2,s_00020],0);
constraint int_lt_reif(s_00001,aux6042,aux6043_BOOL);
constraint int_le_reif(s_00020, s_00001,aux6044_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux6045_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux6046_BOOL);
constraint array_bool_and([w_00003_00020_BOOL,aux6043_BOOL,aux6044_BOOL,aux6045_BOOL,aux6046_BOOL],aux6047_BOOL);
constraint int_lin_eq([-1,1,1],[aux6048,4,s_00001],0);
constraint int_lt_reif(s_00001,aux6048,aux6049_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux6050_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux6049_BOOL,aux6050_BOOL],aux6051_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux5939_INTEGER,aux5945_INTEGER,aux5951_INTEGER,aux5957_INTEGER,aux5963_INTEGER,aux5969_INTEGER,aux5975_INTEGER,aux5981_INTEGER,aux5987_INTEGER,aux5993_INTEGER,aux5999_INTEGER,aux6005_INTEGER,aux6011_INTEGER,aux6017_INTEGER,aux6023_INTEGER,aux6029_INTEGER,aux6035_INTEGER,aux6041_INTEGER,aux6047_INTEGER,aux6051_INTEGER,1],0,aux6052_BOOL);
constraint int_lin_eq([-1,1,1],[aux6053,4,s_00001],0);
constraint int_lt_reif(s_00018,aux6053,aux6054_BOOL);
constraint int_le_reif(s_00001, s_00018,aux6055_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux6056_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux6057_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux6054_BOOL,aux6055_BOOL,aux6056_BOOL,aux6057_BOOL],aux6058_BOOL);
constraint int_lin_eq([-1,1,1],[aux6059,4,s_00002],0);
constraint int_lt_reif(s_00018,aux6059,aux6060_BOOL);
constraint int_le_reif(s_00002, s_00018,aux6061_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux6062_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux6063_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux6060_BOOL,aux6061_BOOL,aux6062_BOOL,aux6063_BOOL],aux6064_BOOL);
constraint int_lin_eq([-1,1,1],[aux6065,3,s_00003],0);
constraint int_lt_reif(s_00018,aux6065,aux6066_BOOL);
constraint int_le_reif(s_00003, s_00018,aux6067_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux6068_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux6069_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux6066_BOOL,aux6067_BOOL,aux6068_BOOL,aux6069_BOOL],aux6070_BOOL);
constraint int_lin_eq([-1,1,1],[aux6071,2,s_00004],0);
constraint int_lt_reif(s_00018,aux6071,aux6072_BOOL);
constraint int_le_reif(s_00004, s_00018,aux6073_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux6074_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux6075_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux6072_BOOL,aux6073_BOOL,aux6074_BOOL,aux6075_BOOL],aux6076_BOOL);
constraint int_lin_eq([-1,1,1],[aux6077,3,s_00005],0);
constraint int_lt_reif(s_00018,aux6077,aux6078_BOOL);
constraint int_le_reif(s_00005, s_00018,aux6079_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux6080_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux6081_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux6078_BOOL,aux6079_BOOL,aux6080_BOOL,aux6081_BOOL],aux6082_BOOL);
constraint int_lin_eq([-1,1,1],[aux6083,2,s_00006],0);
constraint int_lt_reif(s_00018,aux6083,aux6084_BOOL);
constraint int_le_reif(s_00006, s_00018,aux6085_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux6086_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux6087_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux6084_BOOL,aux6085_BOOL,aux6086_BOOL,aux6087_BOOL],aux6088_BOOL);
constraint int_lin_eq([-1,1,1],[aux6089,3,s_00007],0);
constraint int_lt_reif(s_00018,aux6089,aux6090_BOOL);
constraint int_le_reif(s_00007, s_00018,aux6091_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6092_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux6093_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux6090_BOOL,aux6091_BOOL,aux6092_BOOL,aux6093_BOOL],aux6094_BOOL);
constraint int_lin_eq([-1,1,1],[aux6095,2,s_00008],0);
constraint int_lt_reif(s_00018,aux6095,aux6096_BOOL);
constraint int_le_reif(s_00008, s_00018,aux6097_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6098_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux6099_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux6096_BOOL,aux6097_BOOL,aux6098_BOOL,aux6099_BOOL],aux6100_BOOL);
constraint int_lin_eq([-1,1,1],[aux6101,2,s_00009],0);
constraint int_lt_reif(s_00018,aux6101,aux6102_BOOL);
constraint int_le_reif(s_00009, s_00018,aux6103_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux6104_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux6105_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux6102_BOOL,aux6103_BOOL,aux6104_BOOL,aux6105_BOOL],aux6106_BOOL);
constraint int_lin_eq([-1,1,1],[aux6107,3,s_00011],0);
constraint int_lt_reif(s_00018,aux6107,aux6108_BOOL);
constraint int_le_reif(s_00011, s_00018,aux6109_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux6110_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux6111_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux6108_BOOL,aux6109_BOOL,aux6110_BOOL,aux6111_BOOL],aux6112_BOOL);
constraint int_lin_eq([-1,1,1],[aux6113,5,s_00010],0);
constraint int_lt_reif(s_00018,aux6113,aux6114_BOOL);
constraint int_le_reif(s_00010, s_00018,aux6115_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux6116_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux6117_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux6114_BOOL,aux6115_BOOL,aux6116_BOOL,aux6117_BOOL],aux6118_BOOL);
constraint int_lin_eq([-1,1,1],[aux6119,4,s_00012],0);
constraint int_lt_reif(s_00018,aux6119,aux6120_BOOL);
constraint int_le_reif(s_00012, s_00018,aux6121_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux6122_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux6123_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux6120_BOOL,aux6121_BOOL,aux6122_BOOL,aux6123_BOOL],aux6124_BOOL);
constraint int_lin_eq([-1,1,1],[aux6125,3,s_00013],0);
constraint int_lt_reif(s_00018,aux6125,aux6126_BOOL);
constraint int_le_reif(s_00013, s_00018,aux6127_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux6128_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux6129_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux6126_BOOL,aux6127_BOOL,aux6128_BOOL,aux6129_BOOL],aux6130_BOOL);
constraint int_lin_eq([-1,1,1],[aux6131,2,s_00014],0);
constraint int_lt_reif(s_00018,aux6131,aux6132_BOOL);
constraint int_le_reif(s_00014, s_00018,aux6133_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux6134_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux6135_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux6132_BOOL,aux6133_BOOL,aux6134_BOOL,aux6135_BOOL],aux6136_BOOL);
constraint int_lin_eq([-1,1,1],[aux6137,1,s_00015],0);
constraint int_lt_reif(s_00018,aux6137,aux6138_BOOL);
constraint int_le_reif(s_00015, s_00018,aux6139_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux6140_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux6141_BOOL);
constraint array_bool_and([w_00003_00015_BOOL,aux6138_BOOL,aux6139_BOOL,aux6140_BOOL,aux6141_BOOL],aux6142_BOOL);
constraint int_lin_eq([-1,1,1],[aux6143,3,s_00016],0);
constraint int_lt_reif(s_00018,aux6143,aux6144_BOOL);
constraint int_le_reif(s_00016, s_00018,aux6145_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux6146_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux6147_BOOL);
constraint array_bool_and([w_00003_00016_BOOL,aux6144_BOOL,aux6145_BOOL,aux6146_BOOL,aux6147_BOOL],aux6148_BOOL);
constraint int_lin_eq([-1,1,1],[aux6149,4,s_00017],0);
constraint int_lt_reif(s_00018,aux6149,aux6150_BOOL);
constraint int_le_reif(s_00017, s_00018,aux6151_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux6152_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux6153_BOOL);
constraint array_bool_and([w_00003_00017_BOOL,aux6150_BOOL,aux6151_BOOL,aux6152_BOOL,aux6153_BOOL],aux6154_BOOL);
constraint int_lin_eq([-1,1,1],[aux6155,4,s_00019],0);
constraint int_lt_reif(s_00018,aux6155,aux6156_BOOL);
constraint int_le_reif(s_00019, s_00018,aux6157_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux6158_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux6159_BOOL);
constraint array_bool_and([w_00003_00019_BOOL,aux6156_BOOL,aux6157_BOOL,aux6158_BOOL,aux6159_BOOL],aux6160_BOOL);
constraint int_lin_eq([-1,1,1],[aux6161,2,s_00020],0);
constraint int_lt_reif(s_00018,aux6161,aux6162_BOOL);
constraint int_le_reif(s_00020, s_00018,aux6163_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux6164_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux6165_BOOL);
constraint array_bool_and([w_00003_00020_BOOL,aux6162_BOOL,aux6163_BOOL,aux6164_BOOL,aux6165_BOOL],aux6166_BOOL);
constraint int_lin_eq([-1,1,1],[aux6167,1,s_00018],0);
constraint int_lt_reif(s_00018,aux6167,aux6168_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux6169_BOOL);
constraint array_bool_and([w_00003_00018_BOOL,aux6168_BOOL,aux6169_BOOL],aux6170_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux6058_INTEGER,aux6064_INTEGER,aux6070_INTEGER,aux6076_INTEGER,aux6082_INTEGER,aux6088_INTEGER,aux6094_INTEGER,aux6100_INTEGER,aux6106_INTEGER,aux6112_INTEGER,aux6118_INTEGER,aux6124_INTEGER,aux6130_INTEGER,aux6136_INTEGER,aux6142_INTEGER,aux6148_INTEGER,aux6154_INTEGER,aux6160_INTEGER,aux6166_INTEGER,aux6170_INTEGER,1],0,aux6171_BOOL);
constraint int_lin_eq([-1,1,1],[aux6172,4,s_00001],0);
constraint int_lt_reif(s_00017,aux6172,aux6173_BOOL);
constraint int_le_reif(s_00001, s_00017,aux6174_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux6175_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux6176_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux6173_BOOL,aux6174_BOOL,aux6175_BOOL,aux6176_BOOL],aux6177_BOOL);
constraint int_lin_eq([-1,1,1],[aux6178,4,s_00002],0);
constraint int_lt_reif(s_00017,aux6178,aux6179_BOOL);
constraint int_le_reif(s_00002, s_00017,aux6180_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux6181_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux6182_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux6179_BOOL,aux6180_BOOL,aux6181_BOOL,aux6182_BOOL],aux6183_BOOL);
constraint int_lin_eq([-1,1,1],[aux6184,3,s_00003],0);
constraint int_lt_reif(s_00017,aux6184,aux6185_BOOL);
constraint int_le_reif(s_00003, s_00017,aux6186_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux6187_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux6188_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux6185_BOOL,aux6186_BOOL,aux6187_BOOL,aux6188_BOOL],aux6189_BOOL);
constraint int_lin_eq([-1,1,1],[aux6190,2,s_00004],0);
constraint int_lt_reif(s_00017,aux6190,aux6191_BOOL);
constraint int_le_reif(s_00004, s_00017,aux6192_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux6193_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux6194_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux6191_BOOL,aux6192_BOOL,aux6193_BOOL,aux6194_BOOL],aux6195_BOOL);
constraint int_lin_eq([-1,1,1],[aux6196,3,s_00005],0);
constraint int_lt_reif(s_00017,aux6196,aux6197_BOOL);
constraint int_le_reif(s_00005, s_00017,aux6198_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux6199_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux6200_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux6197_BOOL,aux6198_BOOL,aux6199_BOOL,aux6200_BOOL],aux6201_BOOL);
constraint int_lin_eq([-1,1,1],[aux6202,2,s_00006],0);
constraint int_lt_reif(s_00017,aux6202,aux6203_BOOL);
constraint int_le_reif(s_00006, s_00017,aux6204_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux6205_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux6206_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux6203_BOOL,aux6204_BOOL,aux6205_BOOL,aux6206_BOOL],aux6207_BOOL);
constraint int_lin_eq([-1,1,1],[aux6208,3,s_00007],0);
constraint int_lt_reif(s_00017,aux6208,aux6209_BOOL);
constraint int_le_reif(s_00007, s_00017,aux6210_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6211_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux6212_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux6209_BOOL,aux6210_BOOL,aux6211_BOOL,aux6212_BOOL],aux6213_BOOL);
constraint int_lin_eq([-1,1,1],[aux6214,2,s_00008],0);
constraint int_lt_reif(s_00017,aux6214,aux6215_BOOL);
constraint int_le_reif(s_00008, s_00017,aux6216_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6217_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux6218_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux6215_BOOL,aux6216_BOOL,aux6217_BOOL,aux6218_BOOL],aux6219_BOOL);
constraint int_lin_eq([-1,1,1],[aux6220,2,s_00009],0);
constraint int_lt_reif(s_00017,aux6220,aux6221_BOOL);
constraint int_le_reif(s_00009, s_00017,aux6222_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux6223_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux6224_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux6221_BOOL,aux6222_BOOL,aux6223_BOOL,aux6224_BOOL],aux6225_BOOL);
constraint int_lin_eq([-1,1,1],[aux6226,3,s_00011],0);
constraint int_lt_reif(s_00017,aux6226,aux6227_BOOL);
constraint int_le_reif(s_00011, s_00017,aux6228_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux6229_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux6230_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux6227_BOOL,aux6228_BOOL,aux6229_BOOL,aux6230_BOOL],aux6231_BOOL);
constraint int_lin_eq([-1,1,1],[aux6232,5,s_00010],0);
constraint int_lt_reif(s_00017,aux6232,aux6233_BOOL);
constraint int_le_reif(s_00010, s_00017,aux6234_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux6235_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux6236_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux6233_BOOL,aux6234_BOOL,aux6235_BOOL,aux6236_BOOL],aux6237_BOOL);
constraint int_lin_eq([-1,1,1],[aux6238,4,s_00012],0);
constraint int_lt_reif(s_00017,aux6238,aux6239_BOOL);
constraint int_le_reif(s_00012, s_00017,aux6240_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux6241_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux6242_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux6239_BOOL,aux6240_BOOL,aux6241_BOOL,aux6242_BOOL],aux6243_BOOL);
constraint int_lin_eq([-1,1,1],[aux6244,3,s_00013],0);
constraint int_lt_reif(s_00017,aux6244,aux6245_BOOL);
constraint int_le_reif(s_00013, s_00017,aux6246_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux6247_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux6248_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux6245_BOOL,aux6246_BOOL,aux6247_BOOL,aux6248_BOOL],aux6249_BOOL);
constraint int_lin_eq([-1,1,1],[aux6250,2,s_00014],0);
constraint int_lt_reif(s_00017,aux6250,aux6251_BOOL);
constraint int_le_reif(s_00014, s_00017,aux6252_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux6253_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux6254_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux6251_BOOL,aux6252_BOOL,aux6253_BOOL,aux6254_BOOL],aux6255_BOOL);
constraint int_lin_eq([-1,1,1],[aux6256,1,s_00015],0);
constraint int_lt_reif(s_00017,aux6256,aux6257_BOOL);
constraint int_le_reif(s_00015, s_00017,aux6258_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux6259_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux6260_BOOL);
constraint array_bool_and([w_00003_00015_BOOL,aux6257_BOOL,aux6258_BOOL,aux6259_BOOL,aux6260_BOOL],aux6261_BOOL);
constraint int_lin_eq([-1,1,1],[aux6262,3,s_00016],0);
constraint int_lt_reif(s_00017,aux6262,aux6263_BOOL);
constraint int_le_reif(s_00016, s_00017,aux6264_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux6265_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux6266_BOOL);
constraint array_bool_and([w_00003_00016_BOOL,aux6263_BOOL,aux6264_BOOL,aux6265_BOOL,aux6266_BOOL],aux6267_BOOL);
constraint int_lin_eq([-1,1,1],[aux6268,1,s_00018],0);
constraint int_lt_reif(s_00017,aux6268,aux6269_BOOL);
constraint int_le_reif(s_00018, s_00017,aux6270_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux6271_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux6272_BOOL);
constraint array_bool_and([w_00003_00018_BOOL,aux6269_BOOL,aux6270_BOOL,aux6271_BOOL,aux6272_BOOL],aux6273_BOOL);
constraint int_lin_eq([-1,1,1],[aux6274,4,s_00019],0);
constraint int_lt_reif(s_00017,aux6274,aux6275_BOOL);
constraint int_le_reif(s_00019, s_00017,aux6276_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux6277_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux6278_BOOL);
constraint array_bool_and([w_00003_00019_BOOL,aux6275_BOOL,aux6276_BOOL,aux6277_BOOL,aux6278_BOOL],aux6279_BOOL);
constraint int_lin_eq([-1,1,1],[aux6280,2,s_00020],0);
constraint int_lt_reif(s_00017,aux6280,aux6281_BOOL);
constraint int_le_reif(s_00020, s_00017,aux6282_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux6283_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux6284_BOOL);
constraint array_bool_and([w_00003_00020_BOOL,aux6281_BOOL,aux6282_BOOL,aux6283_BOOL,aux6284_BOOL],aux6285_BOOL);
constraint int_lin_eq([-1,1,1],[aux6286,4,s_00017],0);
constraint int_lt_reif(s_00017,aux6286,aux6287_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux6288_BOOL);
constraint array_bool_and([w_00003_00017_BOOL,aux6287_BOOL,aux6288_BOOL],aux6289_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux6177_INTEGER,aux6183_INTEGER,aux6189_INTEGER,aux6195_INTEGER,aux6201_INTEGER,aux6207_INTEGER,aux6213_INTEGER,aux6219_INTEGER,aux6225_INTEGER,aux6231_INTEGER,aux6237_INTEGER,aux6243_INTEGER,aux6249_INTEGER,aux6255_INTEGER,aux6261_INTEGER,aux6267_INTEGER,aux6273_INTEGER,aux6279_INTEGER,aux6285_INTEGER,aux6289_INTEGER,1],0,aux6290_BOOL);
constraint int_lin_eq([-1,1,1],[aux6291,4,s_00001],0);
constraint int_lt_reif(s_00002,aux6291,aux6292_BOOL);
constraint int_le_reif(s_00001, s_00002,aux6293_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux6294_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux6295_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux6292_BOOL,aux6293_BOOL,aux6294_BOOL,aux6295_BOOL],aux6296_BOOL);
constraint int_lin_eq([-1,1,1],[aux6297,3,s_00003],0);
constraint int_lt_reif(s_00002,aux6297,aux6298_BOOL);
constraint int_le_reif(s_00003, s_00002,aux6299_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux6300_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux6301_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux6298_BOOL,aux6299_BOOL,aux6300_BOOL,aux6301_BOOL],aux6302_BOOL);
constraint int_lin_eq([-1,1,1],[aux6303,2,s_00004],0);
constraint int_lt_reif(s_00002,aux6303,aux6304_BOOL);
constraint int_le_reif(s_00004, s_00002,aux6305_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux6306_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux6307_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux6304_BOOL,aux6305_BOOL,aux6306_BOOL,aux6307_BOOL],aux6308_BOOL);
constraint int_lin_eq([-1,1,1],[aux6309,3,s_00005],0);
constraint int_lt_reif(s_00002,aux6309,aux6310_BOOL);
constraint int_le_reif(s_00005, s_00002,aux6311_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux6312_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux6313_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux6310_BOOL,aux6311_BOOL,aux6312_BOOL,aux6313_BOOL],aux6314_BOOL);
constraint int_lin_eq([-1,1,1],[aux6315,2,s_00006],0);
constraint int_lt_reif(s_00002,aux6315,aux6316_BOOL);
constraint int_le_reif(s_00006, s_00002,aux6317_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux6318_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux6319_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux6316_BOOL,aux6317_BOOL,aux6318_BOOL,aux6319_BOOL],aux6320_BOOL);
constraint int_lin_eq([-1,1,1],[aux6321,3,s_00007],0);
constraint int_lt_reif(s_00002,aux6321,aux6322_BOOL);
constraint int_le_reif(s_00007, s_00002,aux6323_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux6324_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6325_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux6322_BOOL,aux6323_BOOL,aux6324_BOOL,aux6325_BOOL],aux6326_BOOL);
constraint int_lin_eq([-1,1,1],[aux6327,2,s_00008],0);
constraint int_lt_reif(s_00002,aux6327,aux6328_BOOL);
constraint int_le_reif(s_00008, s_00002,aux6329_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux6330_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6331_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux6328_BOOL,aux6329_BOOL,aux6330_BOOL,aux6331_BOOL],aux6332_BOOL);
constraint int_lin_eq([-1,1,1],[aux6333,2,s_00009],0);
constraint int_lt_reif(s_00002,aux6333,aux6334_BOOL);
constraint int_le_reif(s_00009, s_00002,aux6335_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux6336_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux6337_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux6334_BOOL,aux6335_BOOL,aux6336_BOOL,aux6337_BOOL],aux6338_BOOL);
constraint int_lin_eq([-1,1,1],[aux6339,3,s_00011],0);
constraint int_lt_reif(s_00002,aux6339,aux6340_BOOL);
constraint int_le_reif(s_00011, s_00002,aux6341_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux6342_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux6343_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux6340_BOOL,aux6341_BOOL,aux6342_BOOL,aux6343_BOOL],aux6344_BOOL);
constraint int_lin_eq([-1,1,1],[aux6345,5,s_00010],0);
constraint int_lt_reif(s_00002,aux6345,aux6346_BOOL);
constraint int_le_reif(s_00010, s_00002,aux6347_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux6348_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux6349_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux6346_BOOL,aux6347_BOOL,aux6348_BOOL,aux6349_BOOL],aux6350_BOOL);
constraint int_lin_eq([-1,1,1],[aux6351,4,s_00012],0);
constraint int_lt_reif(s_00002,aux6351,aux6352_BOOL);
constraint int_le_reif(s_00012, s_00002,aux6353_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux6354_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux6355_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux6352_BOOL,aux6353_BOOL,aux6354_BOOL,aux6355_BOOL],aux6356_BOOL);
constraint int_lin_eq([-1,1,1],[aux6357,3,s_00013],0);
constraint int_lt_reif(s_00002,aux6357,aux6358_BOOL);
constraint int_le_reif(s_00013, s_00002,aux6359_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux6360_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux6361_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux6358_BOOL,aux6359_BOOL,aux6360_BOOL,aux6361_BOOL],aux6362_BOOL);
constraint int_lin_eq([-1,1,1],[aux6363,2,s_00014],0);
constraint int_lt_reif(s_00002,aux6363,aux6364_BOOL);
constraint int_le_reif(s_00014, s_00002,aux6365_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux6366_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux6367_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux6364_BOOL,aux6365_BOOL,aux6366_BOOL,aux6367_BOOL],aux6368_BOOL);
constraint int_lin_eq([-1,1,1],[aux6369,1,s_00015],0);
constraint int_lt_reif(s_00002,aux6369,aux6370_BOOL);
constraint int_le_reif(s_00015, s_00002,aux6371_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux6372_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux6373_BOOL);
constraint array_bool_and([w_00003_00015_BOOL,aux6370_BOOL,aux6371_BOOL,aux6372_BOOL,aux6373_BOOL],aux6374_BOOL);
constraint int_lin_eq([-1,1,1],[aux6375,3,s_00016],0);
constraint int_lt_reif(s_00002,aux6375,aux6376_BOOL);
constraint int_le_reif(s_00016, s_00002,aux6377_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux6378_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux6379_BOOL);
constraint array_bool_and([w_00003_00016_BOOL,aux6376_BOOL,aux6377_BOOL,aux6378_BOOL,aux6379_BOOL],aux6380_BOOL);
constraint int_lin_eq([-1,1,1],[aux6381,1,s_00018],0);
constraint int_lt_reif(s_00002,aux6381,aux6382_BOOL);
constraint int_le_reif(s_00018, s_00002,aux6383_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux6384_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux6385_BOOL);
constraint array_bool_and([w_00003_00018_BOOL,aux6382_BOOL,aux6383_BOOL,aux6384_BOOL,aux6385_BOOL],aux6386_BOOL);
constraint int_lin_eq([-1,1,1],[aux6387,4,s_00017],0);
constraint int_lt_reif(s_00002,aux6387,aux6388_BOOL);
constraint int_le_reif(s_00017, s_00002,aux6389_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux6390_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux6391_BOOL);
constraint array_bool_and([w_00003_00017_BOOL,aux6388_BOOL,aux6389_BOOL,aux6390_BOOL,aux6391_BOOL],aux6392_BOOL);
constraint int_lin_eq([-1,1,1],[aux6393,4,s_00019],0);
constraint int_lt_reif(s_00002,aux6393,aux6394_BOOL);
constraint int_le_reif(s_00019, s_00002,aux6395_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux6396_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux6397_BOOL);
constraint array_bool_and([w_00003_00019_BOOL,aux6394_BOOL,aux6395_BOOL,aux6396_BOOL,aux6397_BOOL],aux6398_BOOL);
constraint int_lin_eq([-1,1,1],[aux6399,2,s_00020],0);
constraint int_lt_reif(s_00002,aux6399,aux6400_BOOL);
constraint int_le_reif(s_00020, s_00002,aux6401_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux6402_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux6403_BOOL);
constraint array_bool_and([w_00003_00020_BOOL,aux6400_BOOL,aux6401_BOOL,aux6402_BOOL,aux6403_BOOL],aux6404_BOOL);
constraint int_lin_eq([-1,1,1],[aux6405,4,s_00002],0);
constraint int_lt_reif(s_00002,aux6405,aux6406_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux6407_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux6406_BOOL,aux6407_BOOL],aux6408_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux6296_INTEGER,aux6302_INTEGER,aux6308_INTEGER,aux6314_INTEGER,aux6320_INTEGER,aux6326_INTEGER,aux6332_INTEGER,aux6338_INTEGER,aux6344_INTEGER,aux6350_INTEGER,aux6356_INTEGER,aux6362_INTEGER,aux6368_INTEGER,aux6374_INTEGER,aux6380_INTEGER,aux6386_INTEGER,aux6392_INTEGER,aux6398_INTEGER,aux6404_INTEGER,aux6408_INTEGER,1],0,aux6409_BOOL);
constraint int_lin_eq([-1,1,1],[aux6410,4,s_00001],0);
constraint int_lt_reif(s_00007,aux6410,aux6411_BOOL);
constraint int_le_reif(s_00001, s_00007,aux6412_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux6413_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6414_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux6411_BOOL,aux6412_BOOL,aux6413_BOOL,aux6414_BOOL],aux6415_BOOL);
constraint int_lin_eq([-1,1,1],[aux6416,4,s_00002],0);
constraint int_lt_reif(s_00007,aux6416,aux6417_BOOL);
constraint int_le_reif(s_00002, s_00007,aux6418_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux6419_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6420_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux6417_BOOL,aux6418_BOOL,aux6419_BOOL,aux6420_BOOL],aux6421_BOOL);
constraint int_lin_eq([-1,1,1],[aux6422,3,s_00003],0);
constraint int_lt_reif(s_00007,aux6422,aux6423_BOOL);
constraint int_le_reif(s_00003, s_00007,aux6424_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux6425_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6426_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux6423_BOOL,aux6424_BOOL,aux6425_BOOL,aux6426_BOOL],aux6427_BOOL);
constraint int_lin_eq([-1,1,1],[aux6428,2,s_00004],0);
constraint int_lt_reif(s_00007,aux6428,aux6429_BOOL);
constraint int_le_reif(s_00004, s_00007,aux6430_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux6431_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6432_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux6429_BOOL,aux6430_BOOL,aux6431_BOOL,aux6432_BOOL],aux6433_BOOL);
constraint int_lin_eq([-1,1,1],[aux6434,3,s_00005],0);
constraint int_lt_reif(s_00007,aux6434,aux6435_BOOL);
constraint int_le_reif(s_00005, s_00007,aux6436_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux6437_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6438_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux6435_BOOL,aux6436_BOOL,aux6437_BOOL,aux6438_BOOL],aux6439_BOOL);
constraint int_lin_eq([-1,1,1],[aux6440,2,s_00006],0);
constraint int_lt_reif(s_00007,aux6440,aux6441_BOOL);
constraint int_le_reif(s_00006, s_00007,aux6442_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux6443_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6444_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux6441_BOOL,aux6442_BOOL,aux6443_BOOL,aux6444_BOOL],aux6445_BOOL);
constraint int_lin_eq([-1,1,1],[aux6446,2,s_00008],0);
constraint int_lt_reif(s_00007,aux6446,aux6447_BOOL);
constraint int_le_reif(s_00008, s_00007,aux6448_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6449_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6450_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux6447_BOOL,aux6448_BOOL,aux6449_BOOL,aux6450_BOOL],aux6451_BOOL);
constraint int_lin_eq([-1,1,1],[aux6452,2,s_00009],0);
constraint int_lt_reif(s_00007,aux6452,aux6453_BOOL);
constraint int_le_reif(s_00009, s_00007,aux6454_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6455_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux6456_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux6453_BOOL,aux6454_BOOL,aux6455_BOOL,aux6456_BOOL],aux6457_BOOL);
constraint int_lin_eq([-1,1,1],[aux6458,3,s_00011],0);
constraint int_lt_reif(s_00007,aux6458,aux6459_BOOL);
constraint int_le_reif(s_00011, s_00007,aux6460_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6461_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux6462_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux6459_BOOL,aux6460_BOOL,aux6461_BOOL,aux6462_BOOL],aux6463_BOOL);
constraint int_lin_eq([-1,1,1],[aux6464,5,s_00010],0);
constraint int_lt_reif(s_00007,aux6464,aux6465_BOOL);
constraint int_le_reif(s_00010, s_00007,aux6466_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6467_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux6468_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux6465_BOOL,aux6466_BOOL,aux6467_BOOL,aux6468_BOOL],aux6469_BOOL);
constraint int_lin_eq([-1,1,1],[aux6470,4,s_00012],0);
constraint int_lt_reif(s_00007,aux6470,aux6471_BOOL);
constraint int_le_reif(s_00012, s_00007,aux6472_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6473_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux6474_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux6471_BOOL,aux6472_BOOL,aux6473_BOOL,aux6474_BOOL],aux6475_BOOL);
constraint int_lin_eq([-1,1,1],[aux6476,3,s_00013],0);
constraint int_lt_reif(s_00007,aux6476,aux6477_BOOL);
constraint int_le_reif(s_00013, s_00007,aux6478_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6479_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux6480_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux6477_BOOL,aux6478_BOOL,aux6479_BOOL,aux6480_BOOL],aux6481_BOOL);
constraint int_lin_eq([-1,1,1],[aux6482,2,s_00014],0);
constraint int_lt_reif(s_00007,aux6482,aux6483_BOOL);
constraint int_le_reif(s_00014, s_00007,aux6484_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6485_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux6486_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux6483_BOOL,aux6484_BOOL,aux6485_BOOL,aux6486_BOOL],aux6487_BOOL);
constraint int_lin_eq([-1,1,1],[aux6488,1,s_00015],0);
constraint int_lt_reif(s_00007,aux6488,aux6489_BOOL);
constraint int_le_reif(s_00015, s_00007,aux6490_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6491_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux6492_BOOL);
constraint array_bool_and([w_00003_00015_BOOL,aux6489_BOOL,aux6490_BOOL,aux6491_BOOL,aux6492_BOOL],aux6493_BOOL);
constraint int_lin_eq([-1,1,1],[aux6494,3,s_00016],0);
constraint int_lt_reif(s_00007,aux6494,aux6495_BOOL);
constraint int_le_reif(s_00016, s_00007,aux6496_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6497_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux6498_BOOL);
constraint array_bool_and([w_00003_00016_BOOL,aux6495_BOOL,aux6496_BOOL,aux6497_BOOL,aux6498_BOOL],aux6499_BOOL);
constraint int_lin_eq([-1,1,1],[aux6500,1,s_00018],0);
constraint int_lt_reif(s_00007,aux6500,aux6501_BOOL);
constraint int_le_reif(s_00018, s_00007,aux6502_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6503_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux6504_BOOL);
constraint array_bool_and([w_00003_00018_BOOL,aux6501_BOOL,aux6502_BOOL,aux6503_BOOL,aux6504_BOOL],aux6505_BOOL);
constraint int_lin_eq([-1,1,1],[aux6506,4,s_00017],0);
constraint int_lt_reif(s_00007,aux6506,aux6507_BOOL);
constraint int_le_reif(s_00017, s_00007,aux6508_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6509_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux6510_BOOL);
constraint array_bool_and([w_00003_00017_BOOL,aux6507_BOOL,aux6508_BOOL,aux6509_BOOL,aux6510_BOOL],aux6511_BOOL);
constraint int_lin_eq([-1,1,1],[aux6512,4,s_00019],0);
constraint int_lt_reif(s_00007,aux6512,aux6513_BOOL);
constraint int_le_reif(s_00019, s_00007,aux6514_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6515_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux6516_BOOL);
constraint array_bool_and([w_00003_00019_BOOL,aux6513_BOOL,aux6514_BOOL,aux6515_BOOL,aux6516_BOOL],aux6517_BOOL);
constraint int_lin_eq([-1,1,1],[aux6518,2,s_00020],0);
constraint int_lt_reif(s_00007,aux6518,aux6519_BOOL);
constraint int_le_reif(s_00020, s_00007,aux6520_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6521_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux6522_BOOL);
constraint array_bool_and([w_00003_00020_BOOL,aux6519_BOOL,aux6520_BOOL,aux6521_BOOL,aux6522_BOOL],aux6523_BOOL);
constraint int_lin_eq([-1,1,1],[aux6524,3,s_00007],0);
constraint int_lt_reif(s_00007,aux6524,aux6525_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6526_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux6525_BOOL,aux6526_BOOL],aux6527_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux6415_INTEGER,aux6421_INTEGER,aux6427_INTEGER,aux6433_INTEGER,aux6439_INTEGER,aux6445_INTEGER,aux6451_INTEGER,aux6457_INTEGER,aux6463_INTEGER,aux6469_INTEGER,aux6475_INTEGER,aux6481_INTEGER,aux6487_INTEGER,aux6493_INTEGER,aux6499_INTEGER,aux6505_INTEGER,aux6511_INTEGER,aux6517_INTEGER,aux6523_INTEGER,aux6527_INTEGER,1],0,aux6528_BOOL);
constraint int_lin_eq([-1,1,1],[aux6529,4,s_00001],0);
constraint int_lt_reif(s_00003,aux6529,aux6530_BOOL);
constraint int_le_reif(s_00001, s_00003,aux6531_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux6532_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux6533_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux6530_BOOL,aux6531_BOOL,aux6532_BOOL,aux6533_BOOL],aux6534_BOOL);
constraint int_lin_eq([-1,1,1],[aux6535,4,s_00002],0);
constraint int_lt_reif(s_00003,aux6535,aux6536_BOOL);
constraint int_le_reif(s_00002, s_00003,aux6537_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux6538_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux6539_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux6536_BOOL,aux6537_BOOL,aux6538_BOOL,aux6539_BOOL],aux6540_BOOL);
constraint int_lin_eq([-1,1,1],[aux6541,2,s_00004],0);
constraint int_lt_reif(s_00003,aux6541,aux6542_BOOL);
constraint int_le_reif(s_00004, s_00003,aux6543_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux6544_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux6545_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux6542_BOOL,aux6543_BOOL,aux6544_BOOL,aux6545_BOOL],aux6546_BOOL);
constraint int_lin_eq([-1,1,1],[aux6547,3,s_00005],0);
constraint int_lt_reif(s_00003,aux6547,aux6548_BOOL);
constraint int_le_reif(s_00005, s_00003,aux6549_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux6550_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux6551_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux6548_BOOL,aux6549_BOOL,aux6550_BOOL,aux6551_BOOL],aux6552_BOOL);
constraint int_lin_eq([-1,1,1],[aux6553,2,s_00006],0);
constraint int_lt_reif(s_00003,aux6553,aux6554_BOOL);
constraint int_le_reif(s_00006, s_00003,aux6555_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux6556_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux6557_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux6554_BOOL,aux6555_BOOL,aux6556_BOOL,aux6557_BOOL],aux6558_BOOL);
constraint int_lin_eq([-1,1,1],[aux6559,3,s_00007],0);
constraint int_lt_reif(s_00003,aux6559,aux6560_BOOL);
constraint int_le_reif(s_00007, s_00003,aux6561_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux6562_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6563_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux6560_BOOL,aux6561_BOOL,aux6562_BOOL,aux6563_BOOL],aux6564_BOOL);
constraint int_lin_eq([-1,1,1],[aux6565,2,s_00008],0);
constraint int_lt_reif(s_00003,aux6565,aux6566_BOOL);
constraint int_le_reif(s_00008, s_00003,aux6567_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux6568_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6569_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux6566_BOOL,aux6567_BOOL,aux6568_BOOL,aux6569_BOOL],aux6570_BOOL);
constraint int_lin_eq([-1,1,1],[aux6571,2,s_00009],0);
constraint int_lt_reif(s_00003,aux6571,aux6572_BOOL);
constraint int_le_reif(s_00009, s_00003,aux6573_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux6574_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux6575_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux6572_BOOL,aux6573_BOOL,aux6574_BOOL,aux6575_BOOL],aux6576_BOOL);
constraint int_lin_eq([-1,1,1],[aux6577,3,s_00011],0);
constraint int_lt_reif(s_00003,aux6577,aux6578_BOOL);
constraint int_le_reif(s_00011, s_00003,aux6579_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux6580_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux6581_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux6578_BOOL,aux6579_BOOL,aux6580_BOOL,aux6581_BOOL],aux6582_BOOL);
constraint int_lin_eq([-1,1,1],[aux6583,5,s_00010],0);
constraint int_lt_reif(s_00003,aux6583,aux6584_BOOL);
constraint int_le_reif(s_00010, s_00003,aux6585_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux6586_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux6587_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux6584_BOOL,aux6585_BOOL,aux6586_BOOL,aux6587_BOOL],aux6588_BOOL);
constraint int_lin_eq([-1,1,1],[aux6589,4,s_00012],0);
constraint int_lt_reif(s_00003,aux6589,aux6590_BOOL);
constraint int_le_reif(s_00012, s_00003,aux6591_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux6592_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux6593_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux6590_BOOL,aux6591_BOOL,aux6592_BOOL,aux6593_BOOL],aux6594_BOOL);
constraint int_lin_eq([-1,1,1],[aux6595,3,s_00013],0);
constraint int_lt_reif(s_00003,aux6595,aux6596_BOOL);
constraint int_le_reif(s_00013, s_00003,aux6597_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux6598_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux6599_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux6596_BOOL,aux6597_BOOL,aux6598_BOOL,aux6599_BOOL],aux6600_BOOL);
constraint int_lin_eq([-1,1,1],[aux6601,2,s_00014],0);
constraint int_lt_reif(s_00003,aux6601,aux6602_BOOL);
constraint int_le_reif(s_00014, s_00003,aux6603_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux6604_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux6605_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux6602_BOOL,aux6603_BOOL,aux6604_BOOL,aux6605_BOOL],aux6606_BOOL);
constraint int_lin_eq([-1,1,1],[aux6607,1,s_00015],0);
constraint int_lt_reif(s_00003,aux6607,aux6608_BOOL);
constraint int_le_reif(s_00015, s_00003,aux6609_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux6610_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux6611_BOOL);
constraint array_bool_and([w_00003_00015_BOOL,aux6608_BOOL,aux6609_BOOL,aux6610_BOOL,aux6611_BOOL],aux6612_BOOL);
constraint int_lin_eq([-1,1,1],[aux6613,3,s_00016],0);
constraint int_lt_reif(s_00003,aux6613,aux6614_BOOL);
constraint int_le_reif(s_00016, s_00003,aux6615_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux6616_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux6617_BOOL);
constraint array_bool_and([w_00003_00016_BOOL,aux6614_BOOL,aux6615_BOOL,aux6616_BOOL,aux6617_BOOL],aux6618_BOOL);
constraint int_lin_eq([-1,1,1],[aux6619,1,s_00018],0);
constraint int_lt_reif(s_00003,aux6619,aux6620_BOOL);
constraint int_le_reif(s_00018, s_00003,aux6621_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux6622_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux6623_BOOL);
constraint array_bool_and([w_00003_00018_BOOL,aux6620_BOOL,aux6621_BOOL,aux6622_BOOL,aux6623_BOOL],aux6624_BOOL);
constraint int_lin_eq([-1,1,1],[aux6625,4,s_00017],0);
constraint int_lt_reif(s_00003,aux6625,aux6626_BOOL);
constraint int_le_reif(s_00017, s_00003,aux6627_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux6628_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux6629_BOOL);
constraint array_bool_and([w_00003_00017_BOOL,aux6626_BOOL,aux6627_BOOL,aux6628_BOOL,aux6629_BOOL],aux6630_BOOL);
constraint int_lin_eq([-1,1,1],[aux6631,4,s_00019],0);
constraint int_lt_reif(s_00003,aux6631,aux6632_BOOL);
constraint int_le_reif(s_00019, s_00003,aux6633_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux6634_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux6635_BOOL);
constraint array_bool_and([w_00003_00019_BOOL,aux6632_BOOL,aux6633_BOOL,aux6634_BOOL,aux6635_BOOL],aux6636_BOOL);
constraint int_lin_eq([-1,1,1],[aux6637,2,s_00020],0);
constraint int_lt_reif(s_00003,aux6637,aux6638_BOOL);
constraint int_le_reif(s_00020, s_00003,aux6639_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux6640_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux6641_BOOL);
constraint array_bool_and([w_00003_00020_BOOL,aux6638_BOOL,aux6639_BOOL,aux6640_BOOL,aux6641_BOOL],aux6642_BOOL);
constraint int_lin_eq([-1,1,1],[aux6643,3,s_00003],0);
constraint int_lt_reif(s_00003,aux6643,aux6644_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux6645_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux6644_BOOL,aux6645_BOOL],aux6646_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux6534_INTEGER,aux6540_INTEGER,aux6546_INTEGER,aux6552_INTEGER,aux6558_INTEGER,aux6564_INTEGER,aux6570_INTEGER,aux6576_INTEGER,aux6582_INTEGER,aux6588_INTEGER,aux6594_INTEGER,aux6600_INTEGER,aux6606_INTEGER,aux6612_INTEGER,aux6618_INTEGER,aux6624_INTEGER,aux6630_INTEGER,aux6636_INTEGER,aux6642_INTEGER,aux6646_INTEGER,1],0,aux6647_BOOL);
constraint int_lin_eq([-1,1,1],[aux6648,4,s_00001],0);
constraint int_lt_reif(s_00005,aux6648,aux6649_BOOL);
constraint int_le_reif(s_00001, s_00005,aux6650_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux6651_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux6652_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux6649_BOOL,aux6650_BOOL,aux6651_BOOL,aux6652_BOOL],aux6653_BOOL);
constraint int_lin_eq([-1,1,1],[aux6654,4,s_00002],0);
constraint int_lt_reif(s_00005,aux6654,aux6655_BOOL);
constraint int_le_reif(s_00002, s_00005,aux6656_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux6657_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux6658_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux6655_BOOL,aux6656_BOOL,aux6657_BOOL,aux6658_BOOL],aux6659_BOOL);
constraint int_lin_eq([-1,1,1],[aux6660,3,s_00003],0);
constraint int_lt_reif(s_00005,aux6660,aux6661_BOOL);
constraint int_le_reif(s_00003, s_00005,aux6662_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux6663_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux6664_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux6661_BOOL,aux6662_BOOL,aux6663_BOOL,aux6664_BOOL],aux6665_BOOL);
constraint int_lin_eq([-1,1,1],[aux6666,2,s_00004],0);
constraint int_lt_reif(s_00005,aux6666,aux6667_BOOL);
constraint int_le_reif(s_00004, s_00005,aux6668_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux6669_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux6670_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux6667_BOOL,aux6668_BOOL,aux6669_BOOL,aux6670_BOOL],aux6671_BOOL);
constraint int_lin_eq([-1,1,1],[aux6672,2,s_00006],0);
constraint int_lt_reif(s_00005,aux6672,aux6673_BOOL);
constraint int_le_reif(s_00006, s_00005,aux6674_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux6675_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux6676_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux6673_BOOL,aux6674_BOOL,aux6675_BOOL,aux6676_BOOL],aux6677_BOOL);
constraint int_lin_eq([-1,1,1],[aux6678,3,s_00007],0);
constraint int_lt_reif(s_00005,aux6678,aux6679_BOOL);
constraint int_le_reif(s_00007, s_00005,aux6680_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux6681_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6682_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux6679_BOOL,aux6680_BOOL,aux6681_BOOL,aux6682_BOOL],aux6683_BOOL);
constraint int_lin_eq([-1,1,1],[aux6684,2,s_00008],0);
constraint int_lt_reif(s_00005,aux6684,aux6685_BOOL);
constraint int_le_reif(s_00008, s_00005,aux6686_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux6687_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6688_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux6685_BOOL,aux6686_BOOL,aux6687_BOOL,aux6688_BOOL],aux6689_BOOL);
constraint int_lin_eq([-1,1,1],[aux6690,2,s_00009],0);
constraint int_lt_reif(s_00005,aux6690,aux6691_BOOL);
constraint int_le_reif(s_00009, s_00005,aux6692_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux6693_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux6694_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux6691_BOOL,aux6692_BOOL,aux6693_BOOL,aux6694_BOOL],aux6695_BOOL);
constraint int_lin_eq([-1,1,1],[aux6696,3,s_00011],0);
constraint int_lt_reif(s_00005,aux6696,aux6697_BOOL);
constraint int_le_reif(s_00011, s_00005,aux6698_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux6699_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux6700_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux6697_BOOL,aux6698_BOOL,aux6699_BOOL,aux6700_BOOL],aux6701_BOOL);
constraint int_lin_eq([-1,1,1],[aux6702,5,s_00010],0);
constraint int_lt_reif(s_00005,aux6702,aux6703_BOOL);
constraint int_le_reif(s_00010, s_00005,aux6704_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux6705_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux6706_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux6703_BOOL,aux6704_BOOL,aux6705_BOOL,aux6706_BOOL],aux6707_BOOL);
constraint int_lin_eq([-1,1,1],[aux6708,4,s_00012],0);
constraint int_lt_reif(s_00005,aux6708,aux6709_BOOL);
constraint int_le_reif(s_00012, s_00005,aux6710_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux6711_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux6712_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux6709_BOOL,aux6710_BOOL,aux6711_BOOL,aux6712_BOOL],aux6713_BOOL);
constraint int_lin_eq([-1,1,1],[aux6714,3,s_00013],0);
constraint int_lt_reif(s_00005,aux6714,aux6715_BOOL);
constraint int_le_reif(s_00013, s_00005,aux6716_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux6717_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux6718_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux6715_BOOL,aux6716_BOOL,aux6717_BOOL,aux6718_BOOL],aux6719_BOOL);
constraint int_lin_eq([-1,1,1],[aux6720,2,s_00014],0);
constraint int_lt_reif(s_00005,aux6720,aux6721_BOOL);
constraint int_le_reif(s_00014, s_00005,aux6722_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux6723_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux6724_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux6721_BOOL,aux6722_BOOL,aux6723_BOOL,aux6724_BOOL],aux6725_BOOL);
constraint int_lin_eq([-1,1,1],[aux6726,1,s_00015],0);
constraint int_lt_reif(s_00005,aux6726,aux6727_BOOL);
constraint int_le_reif(s_00015, s_00005,aux6728_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux6729_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux6730_BOOL);
constraint array_bool_and([w_00003_00015_BOOL,aux6727_BOOL,aux6728_BOOL,aux6729_BOOL,aux6730_BOOL],aux6731_BOOL);
constraint int_lin_eq([-1,1,1],[aux6732,3,s_00016],0);
constraint int_lt_reif(s_00005,aux6732,aux6733_BOOL);
constraint int_le_reif(s_00016, s_00005,aux6734_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux6735_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux6736_BOOL);
constraint array_bool_and([w_00003_00016_BOOL,aux6733_BOOL,aux6734_BOOL,aux6735_BOOL,aux6736_BOOL],aux6737_BOOL);
constraint int_lin_eq([-1,1,1],[aux6738,1,s_00018],0);
constraint int_lt_reif(s_00005,aux6738,aux6739_BOOL);
constraint int_le_reif(s_00018, s_00005,aux6740_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux6741_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux6742_BOOL);
constraint array_bool_and([w_00003_00018_BOOL,aux6739_BOOL,aux6740_BOOL,aux6741_BOOL,aux6742_BOOL],aux6743_BOOL);
constraint int_lin_eq([-1,1,1],[aux6744,4,s_00017],0);
constraint int_lt_reif(s_00005,aux6744,aux6745_BOOL);
constraint int_le_reif(s_00017, s_00005,aux6746_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux6747_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux6748_BOOL);
constraint array_bool_and([w_00003_00017_BOOL,aux6745_BOOL,aux6746_BOOL,aux6747_BOOL,aux6748_BOOL],aux6749_BOOL);
constraint int_lin_eq([-1,1,1],[aux6750,4,s_00019],0);
constraint int_lt_reif(s_00005,aux6750,aux6751_BOOL);
constraint int_le_reif(s_00019, s_00005,aux6752_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux6753_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux6754_BOOL);
constraint array_bool_and([w_00003_00019_BOOL,aux6751_BOOL,aux6752_BOOL,aux6753_BOOL,aux6754_BOOL],aux6755_BOOL);
constraint int_lin_eq([-1,1,1],[aux6756,2,s_00020],0);
constraint int_lt_reif(s_00005,aux6756,aux6757_BOOL);
constraint int_le_reif(s_00020, s_00005,aux6758_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux6759_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux6760_BOOL);
constraint array_bool_and([w_00003_00020_BOOL,aux6757_BOOL,aux6758_BOOL,aux6759_BOOL,aux6760_BOOL],aux6761_BOOL);
constraint int_lin_eq([-1,1,1],[aux6762,3,s_00005],0);
constraint int_lt_reif(s_00005,aux6762,aux6763_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux6764_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux6763_BOOL,aux6764_BOOL],aux6765_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux6653_INTEGER,aux6659_INTEGER,aux6665_INTEGER,aux6671_INTEGER,aux6677_INTEGER,aux6683_INTEGER,aux6689_INTEGER,aux6695_INTEGER,aux6701_INTEGER,aux6707_INTEGER,aux6713_INTEGER,aux6719_INTEGER,aux6725_INTEGER,aux6731_INTEGER,aux6737_INTEGER,aux6743_INTEGER,aux6749_INTEGER,aux6755_INTEGER,aux6761_INTEGER,aux6765_INTEGER,1],0,aux6766_BOOL);
constraint int_lin_eq([-1,1,1],[aux6767,4,s_00001],0);
constraint int_lt_reif(s_00008,aux6767,aux6768_BOOL);
constraint int_le_reif(s_00001, s_00008,aux6769_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux6770_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6771_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux6768_BOOL,aux6769_BOOL,aux6770_BOOL,aux6771_BOOL],aux6772_BOOL);
constraint int_lin_eq([-1,1,1],[aux6773,4,s_00002],0);
constraint int_lt_reif(s_00008,aux6773,aux6774_BOOL);
constraint int_le_reif(s_00002, s_00008,aux6775_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux6776_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6777_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux6774_BOOL,aux6775_BOOL,aux6776_BOOL,aux6777_BOOL],aux6778_BOOL);
constraint int_lin_eq([-1,1,1],[aux6779,3,s_00003],0);
constraint int_lt_reif(s_00008,aux6779,aux6780_BOOL);
constraint int_le_reif(s_00003, s_00008,aux6781_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux6782_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6783_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux6780_BOOL,aux6781_BOOL,aux6782_BOOL,aux6783_BOOL],aux6784_BOOL);
constraint int_lin_eq([-1,1,1],[aux6785,2,s_00004],0);
constraint int_lt_reif(s_00008,aux6785,aux6786_BOOL);
constraint int_le_reif(s_00004, s_00008,aux6787_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux6788_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6789_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux6786_BOOL,aux6787_BOOL,aux6788_BOOL,aux6789_BOOL],aux6790_BOOL);
constraint int_lin_eq([-1,1,1],[aux6791,3,s_00005],0);
constraint int_lt_reif(s_00008,aux6791,aux6792_BOOL);
constraint int_le_reif(s_00005, s_00008,aux6793_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux6794_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6795_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux6792_BOOL,aux6793_BOOL,aux6794_BOOL,aux6795_BOOL],aux6796_BOOL);
constraint int_lin_eq([-1,1,1],[aux6797,2,s_00006],0);
constraint int_lt_reif(s_00008,aux6797,aux6798_BOOL);
constraint int_le_reif(s_00006, s_00008,aux6799_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux6800_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6801_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux6798_BOOL,aux6799_BOOL,aux6800_BOOL,aux6801_BOOL],aux6802_BOOL);
constraint int_lin_eq([-1,1,1],[aux6803,3,s_00007],0);
constraint int_lt_reif(s_00008,aux6803,aux6804_BOOL);
constraint int_le_reif(s_00007, s_00008,aux6805_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6806_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6807_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux6804_BOOL,aux6805_BOOL,aux6806_BOOL,aux6807_BOOL],aux6808_BOOL);
constraint int_lin_eq([-1,1,1],[aux6809,2,s_00009],0);
constraint int_lt_reif(s_00008,aux6809,aux6810_BOOL);
constraint int_le_reif(s_00009, s_00008,aux6811_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6812_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux6813_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux6810_BOOL,aux6811_BOOL,aux6812_BOOL,aux6813_BOOL],aux6814_BOOL);
constraint int_lin_eq([-1,1,1],[aux6815,3,s_00011],0);
constraint int_lt_reif(s_00008,aux6815,aux6816_BOOL);
constraint int_le_reif(s_00011, s_00008,aux6817_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6818_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux6819_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux6816_BOOL,aux6817_BOOL,aux6818_BOOL,aux6819_BOOL],aux6820_BOOL);
constraint int_lin_eq([-1,1,1],[aux6821,5,s_00010],0);
constraint int_lt_reif(s_00008,aux6821,aux6822_BOOL);
constraint int_le_reif(s_00010, s_00008,aux6823_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6824_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux6825_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux6822_BOOL,aux6823_BOOL,aux6824_BOOL,aux6825_BOOL],aux6826_BOOL);
constraint int_lin_eq([-1,1,1],[aux6827,4,s_00012],0);
constraint int_lt_reif(s_00008,aux6827,aux6828_BOOL);
constraint int_le_reif(s_00012, s_00008,aux6829_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6830_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux6831_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux6828_BOOL,aux6829_BOOL,aux6830_BOOL,aux6831_BOOL],aux6832_BOOL);
constraint int_lin_eq([-1,1,1],[aux6833,3,s_00013],0);
constraint int_lt_reif(s_00008,aux6833,aux6834_BOOL);
constraint int_le_reif(s_00013, s_00008,aux6835_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6836_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux6837_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux6834_BOOL,aux6835_BOOL,aux6836_BOOL,aux6837_BOOL],aux6838_BOOL);
constraint int_lin_eq([-1,1,1],[aux6839,2,s_00014],0);
constraint int_lt_reif(s_00008,aux6839,aux6840_BOOL);
constraint int_le_reif(s_00014, s_00008,aux6841_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6842_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux6843_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux6840_BOOL,aux6841_BOOL,aux6842_BOOL,aux6843_BOOL],aux6844_BOOL);
constraint int_lin_eq([-1,1,1],[aux6845,1,s_00015],0);
constraint int_lt_reif(s_00008,aux6845,aux6846_BOOL);
constraint int_le_reif(s_00015, s_00008,aux6847_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6848_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux6849_BOOL);
constraint array_bool_and([w_00003_00015_BOOL,aux6846_BOOL,aux6847_BOOL,aux6848_BOOL,aux6849_BOOL],aux6850_BOOL);
constraint int_lin_eq([-1,1,1],[aux6851,3,s_00016],0);
constraint int_lt_reif(s_00008,aux6851,aux6852_BOOL);
constraint int_le_reif(s_00016, s_00008,aux6853_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6854_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux6855_BOOL);
constraint array_bool_and([w_00003_00016_BOOL,aux6852_BOOL,aux6853_BOOL,aux6854_BOOL,aux6855_BOOL],aux6856_BOOL);
constraint int_lin_eq([-1,1,1],[aux6857,1,s_00018],0);
constraint int_lt_reif(s_00008,aux6857,aux6858_BOOL);
constraint int_le_reif(s_00018, s_00008,aux6859_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6860_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux6861_BOOL);
constraint array_bool_and([w_00003_00018_BOOL,aux6858_BOOL,aux6859_BOOL,aux6860_BOOL,aux6861_BOOL],aux6862_BOOL);
constraint int_lin_eq([-1,1,1],[aux6863,4,s_00017],0);
constraint int_lt_reif(s_00008,aux6863,aux6864_BOOL);
constraint int_le_reif(s_00017, s_00008,aux6865_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6866_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux6867_BOOL);
constraint array_bool_and([w_00003_00017_BOOL,aux6864_BOOL,aux6865_BOOL,aux6866_BOOL,aux6867_BOOL],aux6868_BOOL);
constraint int_lin_eq([-1,1,1],[aux6869,4,s_00019],0);
constraint int_lt_reif(s_00008,aux6869,aux6870_BOOL);
constraint int_le_reif(s_00019, s_00008,aux6871_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6872_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux6873_BOOL);
constraint array_bool_and([w_00003_00019_BOOL,aux6870_BOOL,aux6871_BOOL,aux6872_BOOL,aux6873_BOOL],aux6874_BOOL);
constraint int_lin_eq([-1,1,1],[aux6875,2,s_00020],0);
constraint int_lt_reif(s_00008,aux6875,aux6876_BOOL);
constraint int_le_reif(s_00020, s_00008,aux6877_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6878_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux6879_BOOL);
constraint array_bool_and([w_00003_00020_BOOL,aux6876_BOOL,aux6877_BOOL,aux6878_BOOL,aux6879_BOOL],aux6880_BOOL);
constraint int_lin_eq([-1,1,1],[aux6881,2,s_00008],0);
constraint int_lt_reif(s_00008,aux6881,aux6882_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6883_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux6882_BOOL,aux6883_BOOL],aux6884_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux6772_INTEGER,aux6778_INTEGER,aux6784_INTEGER,aux6790_INTEGER,aux6796_INTEGER,aux6802_INTEGER,aux6808_INTEGER,aux6814_INTEGER,aux6820_INTEGER,aux6826_INTEGER,aux6832_INTEGER,aux6838_INTEGER,aux6844_INTEGER,aux6850_INTEGER,aux6856_INTEGER,aux6862_INTEGER,aux6868_INTEGER,aux6874_INTEGER,aux6880_INTEGER,aux6884_INTEGER,1],0,aux6885_BOOL);
constraint int_lin_eq([-1,1,1],[aux6886,4,s_00001],0);
constraint int_lt_reif(s_00011,aux6886,aux6887_BOOL);
constraint int_le_reif(s_00001, s_00011,aux6888_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux6889_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux6890_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux6887_BOOL,aux6888_BOOL,aux6889_BOOL,aux6890_BOOL],aux6891_BOOL);
constraint int_lin_eq([-1,1,1],[aux6892,4,s_00002],0);
constraint int_lt_reif(s_00011,aux6892,aux6893_BOOL);
constraint int_le_reif(s_00002, s_00011,aux6894_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux6895_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux6896_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux6893_BOOL,aux6894_BOOL,aux6895_BOOL,aux6896_BOOL],aux6897_BOOL);
constraint int_lin_eq([-1,1,1],[aux6898,3,s_00003],0);
constraint int_lt_reif(s_00011,aux6898,aux6899_BOOL);
constraint int_le_reif(s_00003, s_00011,aux6900_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux6901_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux6902_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux6899_BOOL,aux6900_BOOL,aux6901_BOOL,aux6902_BOOL],aux6903_BOOL);
constraint int_lin_eq([-1,1,1],[aux6904,2,s_00004],0);
constraint int_lt_reif(s_00011,aux6904,aux6905_BOOL);
constraint int_le_reif(s_00004, s_00011,aux6906_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux6907_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux6908_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux6905_BOOL,aux6906_BOOL,aux6907_BOOL,aux6908_BOOL],aux6909_BOOL);
constraint int_lin_eq([-1,1,1],[aux6910,3,s_00005],0);
constraint int_lt_reif(s_00011,aux6910,aux6911_BOOL);
constraint int_le_reif(s_00005, s_00011,aux6912_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux6913_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux6914_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux6911_BOOL,aux6912_BOOL,aux6913_BOOL,aux6914_BOOL],aux6915_BOOL);
constraint int_lin_eq([-1,1,1],[aux6916,2,s_00006],0);
constraint int_lt_reif(s_00011,aux6916,aux6917_BOOL);
constraint int_le_reif(s_00006, s_00011,aux6918_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux6919_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux6920_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux6917_BOOL,aux6918_BOOL,aux6919_BOOL,aux6920_BOOL],aux6921_BOOL);
constraint int_lin_eq([-1,1,1],[aux6922,3,s_00007],0);
constraint int_lt_reif(s_00011,aux6922,aux6923_BOOL);
constraint int_le_reif(s_00007, s_00011,aux6924_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6925_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux6926_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux6923_BOOL,aux6924_BOOL,aux6925_BOOL,aux6926_BOOL],aux6927_BOOL);
constraint int_lin_eq([-1,1,1],[aux6928,2,s_00008],0);
constraint int_lt_reif(s_00011,aux6928,aux6929_BOOL);
constraint int_le_reif(s_00008, s_00011,aux6930_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6931_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux6932_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux6929_BOOL,aux6930_BOOL,aux6931_BOOL,aux6932_BOOL],aux6933_BOOL);
constraint int_lin_eq([-1,1,1],[aux6934,2,s_00009],0);
constraint int_lt_reif(s_00011,aux6934,aux6935_BOOL);
constraint int_le_reif(s_00009, s_00011,aux6936_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux6937_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux6938_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux6935_BOOL,aux6936_BOOL,aux6937_BOOL,aux6938_BOOL],aux6939_BOOL);
constraint int_lin_eq([-1,1,1],[aux6940,5,s_00010],0);
constraint int_lt_reif(s_00011,aux6940,aux6941_BOOL);
constraint int_le_reif(s_00010, s_00011,aux6942_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux6943_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux6944_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux6941_BOOL,aux6942_BOOL,aux6943_BOOL,aux6944_BOOL],aux6945_BOOL);
constraint int_lin_eq([-1,1,1],[aux6946,4,s_00012],0);
constraint int_lt_reif(s_00011,aux6946,aux6947_BOOL);
constraint int_le_reif(s_00012, s_00011,aux6948_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux6949_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux6950_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux6947_BOOL,aux6948_BOOL,aux6949_BOOL,aux6950_BOOL],aux6951_BOOL);
constraint int_lin_eq([-1,1,1],[aux6952,3,s_00013],0);
constraint int_lt_reif(s_00011,aux6952,aux6953_BOOL);
constraint int_le_reif(s_00013, s_00011,aux6954_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux6955_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux6956_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux6953_BOOL,aux6954_BOOL,aux6955_BOOL,aux6956_BOOL],aux6957_BOOL);
constraint int_lin_eq([-1,1,1],[aux6958,2,s_00014],0);
constraint int_lt_reif(s_00011,aux6958,aux6959_BOOL);
constraint int_le_reif(s_00014, s_00011,aux6960_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux6961_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux6962_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux6959_BOOL,aux6960_BOOL,aux6961_BOOL,aux6962_BOOL],aux6963_BOOL);
constraint int_lin_eq([-1,1,1],[aux6964,1,s_00015],0);
constraint int_lt_reif(s_00011,aux6964,aux6965_BOOL);
constraint int_le_reif(s_00015, s_00011,aux6966_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux6967_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux6968_BOOL);
constraint array_bool_and([w_00003_00015_BOOL,aux6965_BOOL,aux6966_BOOL,aux6967_BOOL,aux6968_BOOL],aux6969_BOOL);
constraint int_lin_eq([-1,1,1],[aux6970,3,s_00016],0);
constraint int_lt_reif(s_00011,aux6970,aux6971_BOOL);
constraint int_le_reif(s_00016, s_00011,aux6972_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux6973_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux6974_BOOL);
constraint array_bool_and([w_00003_00016_BOOL,aux6971_BOOL,aux6972_BOOL,aux6973_BOOL,aux6974_BOOL],aux6975_BOOL);
constraint int_lin_eq([-1,1,1],[aux6976,1,s_00018],0);
constraint int_lt_reif(s_00011,aux6976,aux6977_BOOL);
constraint int_le_reif(s_00018, s_00011,aux6978_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux6979_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux6980_BOOL);
constraint array_bool_and([w_00003_00018_BOOL,aux6977_BOOL,aux6978_BOOL,aux6979_BOOL,aux6980_BOOL],aux6981_BOOL);
constraint int_lin_eq([-1,1,1],[aux6982,4,s_00017],0);
constraint int_lt_reif(s_00011,aux6982,aux6983_BOOL);
constraint int_le_reif(s_00017, s_00011,aux6984_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux6985_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux6986_BOOL);
constraint array_bool_and([w_00003_00017_BOOL,aux6983_BOOL,aux6984_BOOL,aux6985_BOOL,aux6986_BOOL],aux6987_BOOL);
constraint int_lin_eq([-1,1,1],[aux6988,4,s_00019],0);
constraint int_lt_reif(s_00011,aux6988,aux6989_BOOL);
constraint int_le_reif(s_00019, s_00011,aux6990_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux6991_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux6992_BOOL);
constraint array_bool_and([w_00003_00019_BOOL,aux6989_BOOL,aux6990_BOOL,aux6991_BOOL,aux6992_BOOL],aux6993_BOOL);
constraint int_lin_eq([-1,1,1],[aux6994,2,s_00020],0);
constraint int_lt_reif(s_00011,aux6994,aux6995_BOOL);
constraint int_le_reif(s_00020, s_00011,aux6996_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux6997_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux6998_BOOL);
constraint array_bool_and([w_00003_00020_BOOL,aux6995_BOOL,aux6996_BOOL,aux6997_BOOL,aux6998_BOOL],aux6999_BOOL);
constraint int_lin_eq([-1,1,1],[aux7000,3,s_00011],0);
constraint int_lt_reif(s_00011,aux7000,aux7001_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux7002_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux7001_BOOL,aux7002_BOOL],aux7003_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux6891_INTEGER,aux6897_INTEGER,aux6903_INTEGER,aux6909_INTEGER,aux6915_INTEGER,aux6921_INTEGER,aux6927_INTEGER,aux6933_INTEGER,aux6939_INTEGER,aux6945_INTEGER,aux6951_INTEGER,aux6957_INTEGER,aux6963_INTEGER,aux6969_INTEGER,aux6975_INTEGER,aux6981_INTEGER,aux6987_INTEGER,aux6993_INTEGER,aux6999_INTEGER,aux7003_INTEGER,1],0,aux7004_BOOL);
constraint int_lin_eq([-1,1,1],[aux7005,4,s_00001],0);
constraint int_lt_reif(s_00016,aux7005,aux7006_BOOL);
constraint int_le_reif(s_00001, s_00016,aux7007_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux7008_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux7009_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux7006_BOOL,aux7007_BOOL,aux7008_BOOL,aux7009_BOOL],aux7010_BOOL);
constraint int_lin_eq([-1,1,1],[aux7011,4,s_00002],0);
constraint int_lt_reif(s_00016,aux7011,aux7012_BOOL);
constraint int_le_reif(s_00002, s_00016,aux7013_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux7014_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux7015_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux7012_BOOL,aux7013_BOOL,aux7014_BOOL,aux7015_BOOL],aux7016_BOOL);
constraint int_lin_eq([-1,1,1],[aux7017,3,s_00003],0);
constraint int_lt_reif(s_00016,aux7017,aux7018_BOOL);
constraint int_le_reif(s_00003, s_00016,aux7019_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux7020_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux7021_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux7018_BOOL,aux7019_BOOL,aux7020_BOOL,aux7021_BOOL],aux7022_BOOL);
constraint int_lin_eq([-1,1,1],[aux7023,2,s_00004],0);
constraint int_lt_reif(s_00016,aux7023,aux7024_BOOL);
constraint int_le_reif(s_00004, s_00016,aux7025_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux7026_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux7027_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux7024_BOOL,aux7025_BOOL,aux7026_BOOL,aux7027_BOOL],aux7028_BOOL);
constraint int_lin_eq([-1,1,1],[aux7029,3,s_00005],0);
constraint int_lt_reif(s_00016,aux7029,aux7030_BOOL);
constraint int_le_reif(s_00005, s_00016,aux7031_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux7032_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux7033_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux7030_BOOL,aux7031_BOOL,aux7032_BOOL,aux7033_BOOL],aux7034_BOOL);
constraint int_lin_eq([-1,1,1],[aux7035,2,s_00006],0);
constraint int_lt_reif(s_00016,aux7035,aux7036_BOOL);
constraint int_le_reif(s_00006, s_00016,aux7037_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux7038_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux7039_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux7036_BOOL,aux7037_BOOL,aux7038_BOOL,aux7039_BOOL],aux7040_BOOL);
constraint int_lin_eq([-1,1,1],[aux7041,3,s_00007],0);
constraint int_lt_reif(s_00016,aux7041,aux7042_BOOL);
constraint int_le_reif(s_00007, s_00016,aux7043_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux7044_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux7045_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux7042_BOOL,aux7043_BOOL,aux7044_BOOL,aux7045_BOOL],aux7046_BOOL);
constraint int_lin_eq([-1,1,1],[aux7047,2,s_00008],0);
constraint int_lt_reif(s_00016,aux7047,aux7048_BOOL);
constraint int_le_reif(s_00008, s_00016,aux7049_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux7050_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux7051_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux7048_BOOL,aux7049_BOOL,aux7050_BOOL,aux7051_BOOL],aux7052_BOOL);
constraint int_lin_eq([-1,1,1],[aux7053,2,s_00009],0);
constraint int_lt_reif(s_00016,aux7053,aux7054_BOOL);
constraint int_le_reif(s_00009, s_00016,aux7055_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux7056_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux7057_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux7054_BOOL,aux7055_BOOL,aux7056_BOOL,aux7057_BOOL],aux7058_BOOL);
constraint int_lin_eq([-1,1,1],[aux7059,3,s_00011],0);
constraint int_lt_reif(s_00016,aux7059,aux7060_BOOL);
constraint int_le_reif(s_00011, s_00016,aux7061_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux7062_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux7063_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux7060_BOOL,aux7061_BOOL,aux7062_BOOL,aux7063_BOOL],aux7064_BOOL);
constraint int_lin_eq([-1,1,1],[aux7065,5,s_00010],0);
constraint int_lt_reif(s_00016,aux7065,aux7066_BOOL);
constraint int_le_reif(s_00010, s_00016,aux7067_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux7068_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux7069_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux7066_BOOL,aux7067_BOOL,aux7068_BOOL,aux7069_BOOL],aux7070_BOOL);
constraint int_lin_eq([-1,1,1],[aux7071,4,s_00012],0);
constraint int_lt_reif(s_00016,aux7071,aux7072_BOOL);
constraint int_le_reif(s_00012, s_00016,aux7073_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux7074_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux7075_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux7072_BOOL,aux7073_BOOL,aux7074_BOOL,aux7075_BOOL],aux7076_BOOL);
constraint int_lin_eq([-1,1,1],[aux7077,3,s_00013],0);
constraint int_lt_reif(s_00016,aux7077,aux7078_BOOL);
constraint int_le_reif(s_00013, s_00016,aux7079_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux7080_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux7081_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux7078_BOOL,aux7079_BOOL,aux7080_BOOL,aux7081_BOOL],aux7082_BOOL);
constraint int_lin_eq([-1,1,1],[aux7083,2,s_00014],0);
constraint int_lt_reif(s_00016,aux7083,aux7084_BOOL);
constraint int_le_reif(s_00014, s_00016,aux7085_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux7086_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux7087_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux7084_BOOL,aux7085_BOOL,aux7086_BOOL,aux7087_BOOL],aux7088_BOOL);
constraint int_lin_eq([-1,1,1],[aux7089,1,s_00015],0);
constraint int_lt_reif(s_00016,aux7089,aux7090_BOOL);
constraint int_le_reif(s_00015, s_00016,aux7091_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux7092_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux7093_BOOL);
constraint array_bool_and([w_00003_00015_BOOL,aux7090_BOOL,aux7091_BOOL,aux7092_BOOL,aux7093_BOOL],aux7094_BOOL);
constraint int_lin_eq([-1,1,1],[aux7095,1,s_00018],0);
constraint int_lt_reif(s_00016,aux7095,aux7096_BOOL);
constraint int_le_reif(s_00018, s_00016,aux7097_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux7098_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux7099_BOOL);
constraint array_bool_and([w_00003_00018_BOOL,aux7096_BOOL,aux7097_BOOL,aux7098_BOOL,aux7099_BOOL],aux7100_BOOL);
constraint int_lin_eq([-1,1,1],[aux7101,4,s_00017],0);
constraint int_lt_reif(s_00016,aux7101,aux7102_BOOL);
constraint int_le_reif(s_00017, s_00016,aux7103_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux7104_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux7105_BOOL);
constraint array_bool_and([w_00003_00017_BOOL,aux7102_BOOL,aux7103_BOOL,aux7104_BOOL,aux7105_BOOL],aux7106_BOOL);
constraint int_lin_eq([-1,1,1],[aux7107,4,s_00019],0);
constraint int_lt_reif(s_00016,aux7107,aux7108_BOOL);
constraint int_le_reif(s_00019, s_00016,aux7109_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux7110_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux7111_BOOL);
constraint array_bool_and([w_00003_00019_BOOL,aux7108_BOOL,aux7109_BOOL,aux7110_BOOL,aux7111_BOOL],aux7112_BOOL);
constraint int_lin_eq([-1,1,1],[aux7113,2,s_00020],0);
constraint int_lt_reif(s_00016,aux7113,aux7114_BOOL);
constraint int_le_reif(s_00020, s_00016,aux7115_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux7116_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux7117_BOOL);
constraint array_bool_and([w_00003_00020_BOOL,aux7114_BOOL,aux7115_BOOL,aux7116_BOOL,aux7117_BOOL],aux7118_BOOL);
constraint int_lin_eq([-1,1,1],[aux7119,3,s_00016],0);
constraint int_lt_reif(s_00016,aux7119,aux7120_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux7121_BOOL);
constraint array_bool_and([w_00003_00016_BOOL,aux7120_BOOL,aux7121_BOOL],aux7122_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux7010_INTEGER,aux7016_INTEGER,aux7022_INTEGER,aux7028_INTEGER,aux7034_INTEGER,aux7040_INTEGER,aux7046_INTEGER,aux7052_INTEGER,aux7058_INTEGER,aux7064_INTEGER,aux7070_INTEGER,aux7076_INTEGER,aux7082_INTEGER,aux7088_INTEGER,aux7094_INTEGER,aux7100_INTEGER,aux7106_INTEGER,aux7112_INTEGER,aux7118_INTEGER,aux7122_INTEGER,1],0,aux7123_BOOL);
constraint int_lin_eq([-1,1,1],[aux7124,4,s_00001],0);
constraint int_lt_reif(s_00009,aux7124,aux7125_BOOL);
constraint int_le_reif(s_00001, s_00009,aux7126_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux7127_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux7128_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux7125_BOOL,aux7126_BOOL,aux7127_BOOL,aux7128_BOOL],aux7129_BOOL);
constraint int_lin_eq([-1,1,1],[aux7130,4,s_00002],0);
constraint int_lt_reif(s_00009,aux7130,aux7131_BOOL);
constraint int_le_reif(s_00002, s_00009,aux7132_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux7133_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux7134_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux7131_BOOL,aux7132_BOOL,aux7133_BOOL,aux7134_BOOL],aux7135_BOOL);
constraint int_lin_eq([-1,1,1],[aux7136,3,s_00003],0);
constraint int_lt_reif(s_00009,aux7136,aux7137_BOOL);
constraint int_le_reif(s_00003, s_00009,aux7138_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux7139_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux7140_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux7137_BOOL,aux7138_BOOL,aux7139_BOOL,aux7140_BOOL],aux7141_BOOL);
constraint int_lin_eq([-1,1,1],[aux7142,2,s_00004],0);
constraint int_lt_reif(s_00009,aux7142,aux7143_BOOL);
constraint int_le_reif(s_00004, s_00009,aux7144_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux7145_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux7146_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux7143_BOOL,aux7144_BOOL,aux7145_BOOL,aux7146_BOOL],aux7147_BOOL);
constraint int_lin_eq([-1,1,1],[aux7148,3,s_00005],0);
constraint int_lt_reif(s_00009,aux7148,aux7149_BOOL);
constraint int_le_reif(s_00005, s_00009,aux7150_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux7151_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux7152_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux7149_BOOL,aux7150_BOOL,aux7151_BOOL,aux7152_BOOL],aux7153_BOOL);
constraint int_lin_eq([-1,1,1],[aux7154,2,s_00006],0);
constraint int_lt_reif(s_00009,aux7154,aux7155_BOOL);
constraint int_le_reif(s_00006, s_00009,aux7156_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux7157_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux7158_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux7155_BOOL,aux7156_BOOL,aux7157_BOOL,aux7158_BOOL],aux7159_BOOL);
constraint int_lin_eq([-1,1,1],[aux7160,3,s_00007],0);
constraint int_lt_reif(s_00009,aux7160,aux7161_BOOL);
constraint int_le_reif(s_00007, s_00009,aux7162_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux7163_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux7164_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux7161_BOOL,aux7162_BOOL,aux7163_BOOL,aux7164_BOOL],aux7165_BOOL);
constraint int_lin_eq([-1,1,1],[aux7166,2,s_00008],0);
constraint int_lt_reif(s_00009,aux7166,aux7167_BOOL);
constraint int_le_reif(s_00008, s_00009,aux7168_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux7169_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux7170_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux7167_BOOL,aux7168_BOOL,aux7169_BOOL,aux7170_BOOL],aux7171_BOOL);
constraint int_lin_eq([-1,1,1],[aux7172,3,s_00011],0);
constraint int_lt_reif(s_00009,aux7172,aux7173_BOOL);
constraint int_le_reif(s_00011, s_00009,aux7174_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux7175_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux7176_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux7173_BOOL,aux7174_BOOL,aux7175_BOOL,aux7176_BOOL],aux7177_BOOL);
constraint int_lin_eq([-1,1,1],[aux7178,5,s_00010],0);
constraint int_lt_reif(s_00009,aux7178,aux7179_BOOL);
constraint int_le_reif(s_00010, s_00009,aux7180_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux7181_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux7182_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux7179_BOOL,aux7180_BOOL,aux7181_BOOL,aux7182_BOOL],aux7183_BOOL);
constraint int_lin_eq([-1,1,1],[aux7184,4,s_00012],0);
constraint int_lt_reif(s_00009,aux7184,aux7185_BOOL);
constraint int_le_reif(s_00012, s_00009,aux7186_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux7187_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux7188_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux7185_BOOL,aux7186_BOOL,aux7187_BOOL,aux7188_BOOL],aux7189_BOOL);
constraint int_lin_eq([-1,1,1],[aux7190,3,s_00013],0);
constraint int_lt_reif(s_00009,aux7190,aux7191_BOOL);
constraint int_le_reif(s_00013, s_00009,aux7192_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux7193_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux7194_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux7191_BOOL,aux7192_BOOL,aux7193_BOOL,aux7194_BOOL],aux7195_BOOL);
constraint int_lin_eq([-1,1,1],[aux7196,2,s_00014],0);
constraint int_lt_reif(s_00009,aux7196,aux7197_BOOL);
constraint int_le_reif(s_00014, s_00009,aux7198_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux7199_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux7200_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux7197_BOOL,aux7198_BOOL,aux7199_BOOL,aux7200_BOOL],aux7201_BOOL);
constraint int_lin_eq([-1,1,1],[aux7202,1,s_00015],0);
constraint int_lt_reif(s_00009,aux7202,aux7203_BOOL);
constraint int_le_reif(s_00015, s_00009,aux7204_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux7205_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux7206_BOOL);
constraint array_bool_and([w_00003_00015_BOOL,aux7203_BOOL,aux7204_BOOL,aux7205_BOOL,aux7206_BOOL],aux7207_BOOL);
constraint int_lin_eq([-1,1,1],[aux7208,3,s_00016],0);
constraint int_lt_reif(s_00009,aux7208,aux7209_BOOL);
constraint int_le_reif(s_00016, s_00009,aux7210_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux7211_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux7212_BOOL);
constraint array_bool_and([w_00003_00016_BOOL,aux7209_BOOL,aux7210_BOOL,aux7211_BOOL,aux7212_BOOL],aux7213_BOOL);
constraint int_lin_eq([-1,1,1],[aux7214,1,s_00018],0);
constraint int_lt_reif(s_00009,aux7214,aux7215_BOOL);
constraint int_le_reif(s_00018, s_00009,aux7216_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux7217_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux7218_BOOL);
constraint array_bool_and([w_00003_00018_BOOL,aux7215_BOOL,aux7216_BOOL,aux7217_BOOL,aux7218_BOOL],aux7219_BOOL);
constraint int_lin_eq([-1,1,1],[aux7220,4,s_00017],0);
constraint int_lt_reif(s_00009,aux7220,aux7221_BOOL);
constraint int_le_reif(s_00017, s_00009,aux7222_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux7223_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux7224_BOOL);
constraint array_bool_and([w_00003_00017_BOOL,aux7221_BOOL,aux7222_BOOL,aux7223_BOOL,aux7224_BOOL],aux7225_BOOL);
constraint int_lin_eq([-1,1,1],[aux7226,4,s_00019],0);
constraint int_lt_reif(s_00009,aux7226,aux7227_BOOL);
constraint int_le_reif(s_00019, s_00009,aux7228_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux7229_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux7230_BOOL);
constraint array_bool_and([w_00003_00019_BOOL,aux7227_BOOL,aux7228_BOOL,aux7229_BOOL,aux7230_BOOL],aux7231_BOOL);
constraint int_lin_eq([-1,1,1],[aux7232,2,s_00020],0);
constraint int_lt_reif(s_00009,aux7232,aux7233_BOOL);
constraint int_le_reif(s_00020, s_00009,aux7234_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux7235_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux7236_BOOL);
constraint array_bool_and([w_00003_00020_BOOL,aux7233_BOOL,aux7234_BOOL,aux7235_BOOL,aux7236_BOOL],aux7237_BOOL);
constraint int_lin_eq([-1,1,1],[aux7238,2,s_00009],0);
constraint int_lt_reif(s_00009,aux7238,aux7239_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux7240_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux7239_BOOL,aux7240_BOOL],aux7241_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux7129_INTEGER,aux7135_INTEGER,aux7141_INTEGER,aux7147_INTEGER,aux7153_INTEGER,aux7159_INTEGER,aux7165_INTEGER,aux7171_INTEGER,aux7177_INTEGER,aux7183_INTEGER,aux7189_INTEGER,aux7195_INTEGER,aux7201_INTEGER,aux7207_INTEGER,aux7213_INTEGER,aux7219_INTEGER,aux7225_INTEGER,aux7231_INTEGER,aux7237_INTEGER,aux7241_INTEGER,1],0,aux7242_BOOL);
constraint int_lin_eq([-1,1,1],[aux7243,4,s_00001],0);
constraint int_lt_reif(s_00015,aux7243,aux7244_BOOL);
constraint int_le_reif(s_00001, s_00015,aux7245_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux7246_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux7247_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux7244_BOOL,aux7245_BOOL,aux7246_BOOL,aux7247_BOOL],aux7248_BOOL);
constraint int_lin_eq([-1,1,1],[aux7249,4,s_00002],0);
constraint int_lt_reif(s_00015,aux7249,aux7250_BOOL);
constraint int_le_reif(s_00002, s_00015,aux7251_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux7252_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux7253_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux7250_BOOL,aux7251_BOOL,aux7252_BOOL,aux7253_BOOL],aux7254_BOOL);
constraint int_lin_eq([-1,1,1],[aux7255,3,s_00003],0);
constraint int_lt_reif(s_00015,aux7255,aux7256_BOOL);
constraint int_le_reif(s_00003, s_00015,aux7257_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux7258_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux7259_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux7256_BOOL,aux7257_BOOL,aux7258_BOOL,aux7259_BOOL],aux7260_BOOL);
constraint int_lin_eq([-1,1,1],[aux7261,2,s_00004],0);
constraint int_lt_reif(s_00015,aux7261,aux7262_BOOL);
constraint int_le_reif(s_00004, s_00015,aux7263_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux7264_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux7265_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux7262_BOOL,aux7263_BOOL,aux7264_BOOL,aux7265_BOOL],aux7266_BOOL);
constraint int_lin_eq([-1,1,1],[aux7267,3,s_00005],0);
constraint int_lt_reif(s_00015,aux7267,aux7268_BOOL);
constraint int_le_reif(s_00005, s_00015,aux7269_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux7270_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux7271_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux7268_BOOL,aux7269_BOOL,aux7270_BOOL,aux7271_BOOL],aux7272_BOOL);
constraint int_lin_eq([-1,1,1],[aux7273,2,s_00006],0);
constraint int_lt_reif(s_00015,aux7273,aux7274_BOOL);
constraint int_le_reif(s_00006, s_00015,aux7275_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux7276_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux7277_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux7274_BOOL,aux7275_BOOL,aux7276_BOOL,aux7277_BOOL],aux7278_BOOL);
constraint int_lin_eq([-1,1,1],[aux7279,3,s_00007],0);
constraint int_lt_reif(s_00015,aux7279,aux7280_BOOL);
constraint int_le_reif(s_00007, s_00015,aux7281_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux7282_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux7283_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux7280_BOOL,aux7281_BOOL,aux7282_BOOL,aux7283_BOOL],aux7284_BOOL);
constraint int_lin_eq([-1,1,1],[aux7285,2,s_00008],0);
constraint int_lt_reif(s_00015,aux7285,aux7286_BOOL);
constraint int_le_reif(s_00008, s_00015,aux7287_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux7288_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux7289_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux7286_BOOL,aux7287_BOOL,aux7288_BOOL,aux7289_BOOL],aux7290_BOOL);
constraint int_lin_eq([-1,1,1],[aux7291,2,s_00009],0);
constraint int_lt_reif(s_00015,aux7291,aux7292_BOOL);
constraint int_le_reif(s_00009, s_00015,aux7293_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux7294_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux7295_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux7292_BOOL,aux7293_BOOL,aux7294_BOOL,aux7295_BOOL],aux7296_BOOL);
constraint int_lin_eq([-1,1,1],[aux7297,3,s_00011],0);
constraint int_lt_reif(s_00015,aux7297,aux7298_BOOL);
constraint int_le_reif(s_00011, s_00015,aux7299_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux7300_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux7301_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux7298_BOOL,aux7299_BOOL,aux7300_BOOL,aux7301_BOOL],aux7302_BOOL);
constraint int_lin_eq([-1,1,1],[aux7303,5,s_00010],0);
constraint int_lt_reif(s_00015,aux7303,aux7304_BOOL);
constraint int_le_reif(s_00010, s_00015,aux7305_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux7306_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux7307_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux7304_BOOL,aux7305_BOOL,aux7306_BOOL,aux7307_BOOL],aux7308_BOOL);
constraint int_lin_eq([-1,1,1],[aux7309,4,s_00012],0);
constraint int_lt_reif(s_00015,aux7309,aux7310_BOOL);
constraint int_le_reif(s_00012, s_00015,aux7311_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux7312_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux7313_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux7310_BOOL,aux7311_BOOL,aux7312_BOOL,aux7313_BOOL],aux7314_BOOL);
constraint int_lin_eq([-1,1,1],[aux7315,3,s_00013],0);
constraint int_lt_reif(s_00015,aux7315,aux7316_BOOL);
constraint int_le_reif(s_00013, s_00015,aux7317_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux7318_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux7319_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux7316_BOOL,aux7317_BOOL,aux7318_BOOL,aux7319_BOOL],aux7320_BOOL);
constraint int_lin_eq([-1,1,1],[aux7321,2,s_00014],0);
constraint int_lt_reif(s_00015,aux7321,aux7322_BOOL);
constraint int_le_reif(s_00014, s_00015,aux7323_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux7324_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux7325_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux7322_BOOL,aux7323_BOOL,aux7324_BOOL,aux7325_BOOL],aux7326_BOOL);
constraint int_lin_eq([-1,1,1],[aux7327,3,s_00016],0);
constraint int_lt_reif(s_00015,aux7327,aux7328_BOOL);
constraint int_le_reif(s_00016, s_00015,aux7329_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux7330_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux7331_BOOL);
constraint array_bool_and([w_00003_00016_BOOL,aux7328_BOOL,aux7329_BOOL,aux7330_BOOL,aux7331_BOOL],aux7332_BOOL);
constraint int_lin_eq([-1,1,1],[aux7333,1,s_00018],0);
constraint int_lt_reif(s_00015,aux7333,aux7334_BOOL);
constraint int_le_reif(s_00018, s_00015,aux7335_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux7336_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux7337_BOOL);
constraint array_bool_and([w_00003_00018_BOOL,aux7334_BOOL,aux7335_BOOL,aux7336_BOOL,aux7337_BOOL],aux7338_BOOL);
constraint int_lin_eq([-1,1,1],[aux7339,4,s_00017],0);
constraint int_lt_reif(s_00015,aux7339,aux7340_BOOL);
constraint int_le_reif(s_00017, s_00015,aux7341_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux7342_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux7343_BOOL);
constraint array_bool_and([w_00003_00017_BOOL,aux7340_BOOL,aux7341_BOOL,aux7342_BOOL,aux7343_BOOL],aux7344_BOOL);
constraint int_lin_eq([-1,1,1],[aux7345,4,s_00019],0);
constraint int_lt_reif(s_00015,aux7345,aux7346_BOOL);
constraint int_le_reif(s_00019, s_00015,aux7347_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux7348_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux7349_BOOL);
constraint array_bool_and([w_00003_00019_BOOL,aux7346_BOOL,aux7347_BOOL,aux7348_BOOL,aux7349_BOOL],aux7350_BOOL);
constraint int_lin_eq([-1,1,1],[aux7351,2,s_00020],0);
constraint int_lt_reif(s_00015,aux7351,aux7352_BOOL);
constraint int_le_reif(s_00020, s_00015,aux7353_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux7354_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux7355_BOOL);
constraint array_bool_and([w_00003_00020_BOOL,aux7352_BOOL,aux7353_BOOL,aux7354_BOOL,aux7355_BOOL],aux7356_BOOL);
constraint int_lin_eq([-1,1,1],[aux7357,1,s_00015],0);
constraint int_lt_reif(s_00015,aux7357,aux7358_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux7359_BOOL);
constraint array_bool_and([w_00003_00015_BOOL,aux7358_BOOL,aux7359_BOOL],aux7360_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux7248_INTEGER,aux7254_INTEGER,aux7260_INTEGER,aux7266_INTEGER,aux7272_INTEGER,aux7278_INTEGER,aux7284_INTEGER,aux7290_INTEGER,aux7296_INTEGER,aux7302_INTEGER,aux7308_INTEGER,aux7314_INTEGER,aux7320_INTEGER,aux7326_INTEGER,aux7332_INTEGER,aux7338_INTEGER,aux7344_INTEGER,aux7350_INTEGER,aux7356_INTEGER,aux7360_INTEGER,1],0,aux7361_BOOL);
constraint int_lin_eq([-1,1,1],[aux7362,4,s_00001],0);
constraint int_lt_reif(s_00010,aux7362,aux7363_BOOL);
constraint int_le_reif(s_00001, s_00010,aux7364_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux7365_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux7366_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux7363_BOOL,aux7364_BOOL,aux7365_BOOL,aux7366_BOOL],aux7367_BOOL);
constraint int_lin_eq([-1,1,1],[aux7368,4,s_00002],0);
constraint int_lt_reif(s_00010,aux7368,aux7369_BOOL);
constraint int_le_reif(s_00002, s_00010,aux7370_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux7371_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux7372_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux7369_BOOL,aux7370_BOOL,aux7371_BOOL,aux7372_BOOL],aux7373_BOOL);
constraint int_lin_eq([-1,1,1],[aux7374,3,s_00003],0);
constraint int_lt_reif(s_00010,aux7374,aux7375_BOOL);
constraint int_le_reif(s_00003, s_00010,aux7376_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux7377_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux7378_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux7375_BOOL,aux7376_BOOL,aux7377_BOOL,aux7378_BOOL],aux7379_BOOL);
constraint int_lin_eq([-1,1,1],[aux7380,2,s_00004],0);
constraint int_lt_reif(s_00010,aux7380,aux7381_BOOL);
constraint int_le_reif(s_00004, s_00010,aux7382_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux7383_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux7384_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux7381_BOOL,aux7382_BOOL,aux7383_BOOL,aux7384_BOOL],aux7385_BOOL);
constraint int_lin_eq([-1,1,1],[aux7386,3,s_00005],0);
constraint int_lt_reif(s_00010,aux7386,aux7387_BOOL);
constraint int_le_reif(s_00005, s_00010,aux7388_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux7389_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux7390_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux7387_BOOL,aux7388_BOOL,aux7389_BOOL,aux7390_BOOL],aux7391_BOOL);
constraint int_lin_eq([-1,1,1],[aux7392,2,s_00006],0);
constraint int_lt_reif(s_00010,aux7392,aux7393_BOOL);
constraint int_le_reif(s_00006, s_00010,aux7394_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux7395_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux7396_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux7393_BOOL,aux7394_BOOL,aux7395_BOOL,aux7396_BOOL],aux7397_BOOL);
constraint int_lin_eq([-1,1,1],[aux7398,3,s_00007],0);
constraint int_lt_reif(s_00010,aux7398,aux7399_BOOL);
constraint int_le_reif(s_00007, s_00010,aux7400_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux7401_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux7402_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux7399_BOOL,aux7400_BOOL,aux7401_BOOL,aux7402_BOOL],aux7403_BOOL);
constraint int_lin_eq([-1,1,1],[aux7404,2,s_00008],0);
constraint int_lt_reif(s_00010,aux7404,aux7405_BOOL);
constraint int_le_reif(s_00008, s_00010,aux7406_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux7407_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux7408_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux7405_BOOL,aux7406_BOOL,aux7407_BOOL,aux7408_BOOL],aux7409_BOOL);
constraint int_lin_eq([-1,1,1],[aux7410,2,s_00009],0);
constraint int_lt_reif(s_00010,aux7410,aux7411_BOOL);
constraint int_le_reif(s_00009, s_00010,aux7412_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux7413_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux7414_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux7411_BOOL,aux7412_BOOL,aux7413_BOOL,aux7414_BOOL],aux7415_BOOL);
constraint int_lin_eq([-1,1,1],[aux7416,3,s_00011],0);
constraint int_lt_reif(s_00010,aux7416,aux7417_BOOL);
constraint int_le_reif(s_00011, s_00010,aux7418_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux7419_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux7420_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux7417_BOOL,aux7418_BOOL,aux7419_BOOL,aux7420_BOOL],aux7421_BOOL);
constraint int_lin_eq([-1,1,1],[aux7422,4,s_00012],0);
constraint int_lt_reif(s_00010,aux7422,aux7423_BOOL);
constraint int_le_reif(s_00012, s_00010,aux7424_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux7425_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux7426_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux7423_BOOL,aux7424_BOOL,aux7425_BOOL,aux7426_BOOL],aux7427_BOOL);
constraint int_lin_eq([-1,1,1],[aux7428,3,s_00013],0);
constraint int_lt_reif(s_00010,aux7428,aux7429_BOOL);
constraint int_le_reif(s_00013, s_00010,aux7430_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux7431_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux7432_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux7429_BOOL,aux7430_BOOL,aux7431_BOOL,aux7432_BOOL],aux7433_BOOL);
constraint int_lin_eq([-1,1,1],[aux7434,2,s_00014],0);
constraint int_lt_reif(s_00010,aux7434,aux7435_BOOL);
constraint int_le_reif(s_00014, s_00010,aux7436_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux7437_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux7438_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux7435_BOOL,aux7436_BOOL,aux7437_BOOL,aux7438_BOOL],aux7439_BOOL);
constraint int_lin_eq([-1,1,1],[aux7440,1,s_00015],0);
constraint int_lt_reif(s_00010,aux7440,aux7441_BOOL);
constraint int_le_reif(s_00015, s_00010,aux7442_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux7443_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux7444_BOOL);
constraint array_bool_and([w_00003_00015_BOOL,aux7441_BOOL,aux7442_BOOL,aux7443_BOOL,aux7444_BOOL],aux7445_BOOL);
constraint int_lin_eq([-1,1,1],[aux7446,3,s_00016],0);
constraint int_lt_reif(s_00010,aux7446,aux7447_BOOL);
constraint int_le_reif(s_00016, s_00010,aux7448_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux7449_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux7450_BOOL);
constraint array_bool_and([w_00003_00016_BOOL,aux7447_BOOL,aux7448_BOOL,aux7449_BOOL,aux7450_BOOL],aux7451_BOOL);
constraint int_lin_eq([-1,1,1],[aux7452,1,s_00018],0);
constraint int_lt_reif(s_00010,aux7452,aux7453_BOOL);
constraint int_le_reif(s_00018, s_00010,aux7454_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux7455_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux7456_BOOL);
constraint array_bool_and([w_00003_00018_BOOL,aux7453_BOOL,aux7454_BOOL,aux7455_BOOL,aux7456_BOOL],aux7457_BOOL);
constraint int_lin_eq([-1,1,1],[aux7458,4,s_00017],0);
constraint int_lt_reif(s_00010,aux7458,aux7459_BOOL);
constraint int_le_reif(s_00017, s_00010,aux7460_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux7461_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux7462_BOOL);
constraint array_bool_and([w_00003_00017_BOOL,aux7459_BOOL,aux7460_BOOL,aux7461_BOOL,aux7462_BOOL],aux7463_BOOL);
constraint int_lin_eq([-1,1,1],[aux7464,4,s_00019],0);
constraint int_lt_reif(s_00010,aux7464,aux7465_BOOL);
constraint int_le_reif(s_00019, s_00010,aux7466_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux7467_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux7468_BOOL);
constraint array_bool_and([w_00003_00019_BOOL,aux7465_BOOL,aux7466_BOOL,aux7467_BOOL,aux7468_BOOL],aux7469_BOOL);
constraint int_lin_eq([-1,1,1],[aux7470,2,s_00020],0);
constraint int_lt_reif(s_00010,aux7470,aux7471_BOOL);
constraint int_le_reif(s_00020, s_00010,aux7472_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux7473_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux7474_BOOL);
constraint array_bool_and([w_00003_00020_BOOL,aux7471_BOOL,aux7472_BOOL,aux7473_BOOL,aux7474_BOOL],aux7475_BOOL);
constraint int_lin_eq([-1,1,1],[aux7476,5,s_00010],0);
constraint int_lt_reif(s_00010,aux7476,aux7477_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux7478_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux7477_BOOL,aux7478_BOOL],aux7479_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux7367_INTEGER,aux7373_INTEGER,aux7379_INTEGER,aux7385_INTEGER,aux7391_INTEGER,aux7397_INTEGER,aux7403_INTEGER,aux7409_INTEGER,aux7415_INTEGER,aux7421_INTEGER,aux7427_INTEGER,aux7433_INTEGER,aux7439_INTEGER,aux7445_INTEGER,aux7451_INTEGER,aux7457_INTEGER,aux7463_INTEGER,aux7469_INTEGER,aux7475_INTEGER,aux7479_INTEGER,1],0,aux7480_BOOL);
constraint int_lin_eq([-1,1,1],[aux7481,4,s_00001],0);
constraint int_lt_reif(s_00013,aux7481,aux7482_BOOL);
constraint int_le_reif(s_00001, s_00013,aux7483_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux7484_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux7485_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux7482_BOOL,aux7483_BOOL,aux7484_BOOL,aux7485_BOOL],aux7486_BOOL);
constraint int_lin_eq([-1,1,1],[aux7487,4,s_00002],0);
constraint int_lt_reif(s_00013,aux7487,aux7488_BOOL);
constraint int_le_reif(s_00002, s_00013,aux7489_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux7490_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux7491_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux7488_BOOL,aux7489_BOOL,aux7490_BOOL,aux7491_BOOL],aux7492_BOOL);
constraint int_lin_eq([-1,1,1],[aux7493,3,s_00003],0);
constraint int_lt_reif(s_00013,aux7493,aux7494_BOOL);
constraint int_le_reif(s_00003, s_00013,aux7495_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux7496_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux7497_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux7494_BOOL,aux7495_BOOL,aux7496_BOOL,aux7497_BOOL],aux7498_BOOL);
constraint int_lin_eq([-1,1,1],[aux7499,2,s_00004],0);
constraint int_lt_reif(s_00013,aux7499,aux7500_BOOL);
constraint int_le_reif(s_00004, s_00013,aux7501_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux7502_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux7503_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux7500_BOOL,aux7501_BOOL,aux7502_BOOL,aux7503_BOOL],aux7504_BOOL);
constraint int_lin_eq([-1,1,1],[aux7505,3,s_00005],0);
constraint int_lt_reif(s_00013,aux7505,aux7506_BOOL);
constraint int_le_reif(s_00005, s_00013,aux7507_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux7508_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux7509_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux7506_BOOL,aux7507_BOOL,aux7508_BOOL,aux7509_BOOL],aux7510_BOOL);
constraint int_lin_eq([-1,1,1],[aux7511,2,s_00006],0);
constraint int_lt_reif(s_00013,aux7511,aux7512_BOOL);
constraint int_le_reif(s_00006, s_00013,aux7513_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux7514_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux7515_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux7512_BOOL,aux7513_BOOL,aux7514_BOOL,aux7515_BOOL],aux7516_BOOL);
constraint int_lin_eq([-1,1,1],[aux7517,3,s_00007],0);
constraint int_lt_reif(s_00013,aux7517,aux7518_BOOL);
constraint int_le_reif(s_00007, s_00013,aux7519_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux7520_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux7521_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux7518_BOOL,aux7519_BOOL,aux7520_BOOL,aux7521_BOOL],aux7522_BOOL);
constraint int_lin_eq([-1,1,1],[aux7523,2,s_00008],0);
constraint int_lt_reif(s_00013,aux7523,aux7524_BOOL);
constraint int_le_reif(s_00008, s_00013,aux7525_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux7526_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux7527_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux7524_BOOL,aux7525_BOOL,aux7526_BOOL,aux7527_BOOL],aux7528_BOOL);
constraint int_lin_eq([-1,1,1],[aux7529,2,s_00009],0);
constraint int_lt_reif(s_00013,aux7529,aux7530_BOOL);
constraint int_le_reif(s_00009, s_00013,aux7531_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux7532_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux7533_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux7530_BOOL,aux7531_BOOL,aux7532_BOOL,aux7533_BOOL],aux7534_BOOL);
constraint int_lin_eq([-1,1,1],[aux7535,3,s_00011],0);
constraint int_lt_reif(s_00013,aux7535,aux7536_BOOL);
constraint int_le_reif(s_00011, s_00013,aux7537_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux7538_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux7539_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux7536_BOOL,aux7537_BOOL,aux7538_BOOL,aux7539_BOOL],aux7540_BOOL);
constraint int_lin_eq([-1,1,1],[aux7541,5,s_00010],0);
constraint int_lt_reif(s_00013,aux7541,aux7542_BOOL);
constraint int_le_reif(s_00010, s_00013,aux7543_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux7544_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux7545_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux7542_BOOL,aux7543_BOOL,aux7544_BOOL,aux7545_BOOL],aux7546_BOOL);
constraint int_lin_eq([-1,1,1],[aux7547,4,s_00012],0);
constraint int_lt_reif(s_00013,aux7547,aux7548_BOOL);
constraint int_le_reif(s_00012, s_00013,aux7549_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux7550_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux7551_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux7548_BOOL,aux7549_BOOL,aux7550_BOOL,aux7551_BOOL],aux7552_BOOL);
constraint int_lin_eq([-1,1,1],[aux7553,2,s_00014],0);
constraint int_lt_reif(s_00013,aux7553,aux7554_BOOL);
constraint int_le_reif(s_00014, s_00013,aux7555_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux7556_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux7557_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux7554_BOOL,aux7555_BOOL,aux7556_BOOL,aux7557_BOOL],aux7558_BOOL);
constraint int_lin_eq([-1,1,1],[aux7559,1,s_00015],0);
constraint int_lt_reif(s_00013,aux7559,aux7560_BOOL);
constraint int_le_reif(s_00015, s_00013,aux7561_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux7562_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux7563_BOOL);
constraint array_bool_and([w_00003_00015_BOOL,aux7560_BOOL,aux7561_BOOL,aux7562_BOOL,aux7563_BOOL],aux7564_BOOL);
constraint int_lin_eq([-1,1,1],[aux7565,3,s_00016],0);
constraint int_lt_reif(s_00013,aux7565,aux7566_BOOL);
constraint int_le_reif(s_00016, s_00013,aux7567_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux7568_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux7569_BOOL);
constraint array_bool_and([w_00003_00016_BOOL,aux7566_BOOL,aux7567_BOOL,aux7568_BOOL,aux7569_BOOL],aux7570_BOOL);
constraint int_lin_eq([-1,1,1],[aux7571,1,s_00018],0);
constraint int_lt_reif(s_00013,aux7571,aux7572_BOOL);
constraint int_le_reif(s_00018, s_00013,aux7573_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux7574_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux7575_BOOL);
constraint array_bool_and([w_00003_00018_BOOL,aux7572_BOOL,aux7573_BOOL,aux7574_BOOL,aux7575_BOOL],aux7576_BOOL);
constraint int_lin_eq([-1,1,1],[aux7577,4,s_00017],0);
constraint int_lt_reif(s_00013,aux7577,aux7578_BOOL);
constraint int_le_reif(s_00017, s_00013,aux7579_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux7580_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux7581_BOOL);
constraint array_bool_and([w_00003_00017_BOOL,aux7578_BOOL,aux7579_BOOL,aux7580_BOOL,aux7581_BOOL],aux7582_BOOL);
constraint int_lin_eq([-1,1,1],[aux7583,4,s_00019],0);
constraint int_lt_reif(s_00013,aux7583,aux7584_BOOL);
constraint int_le_reif(s_00019, s_00013,aux7585_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux7586_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux7587_BOOL);
constraint array_bool_and([w_00003_00019_BOOL,aux7584_BOOL,aux7585_BOOL,aux7586_BOOL,aux7587_BOOL],aux7588_BOOL);
constraint int_lin_eq([-1,1,1],[aux7589,2,s_00020],0);
constraint int_lt_reif(s_00013,aux7589,aux7590_BOOL);
constraint int_le_reif(s_00020, s_00013,aux7591_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux7592_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux7593_BOOL);
constraint array_bool_and([w_00003_00020_BOOL,aux7590_BOOL,aux7591_BOOL,aux7592_BOOL,aux7593_BOOL],aux7594_BOOL);
constraint int_lin_eq([-1,1,1],[aux7595,3,s_00013],0);
constraint int_lt_reif(s_00013,aux7595,aux7596_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux7597_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux7596_BOOL,aux7597_BOOL],aux7598_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux7486_INTEGER,aux7492_INTEGER,aux7498_INTEGER,aux7504_INTEGER,aux7510_INTEGER,aux7516_INTEGER,aux7522_INTEGER,aux7528_INTEGER,aux7534_INTEGER,aux7540_INTEGER,aux7546_INTEGER,aux7552_INTEGER,aux7558_INTEGER,aux7564_INTEGER,aux7570_INTEGER,aux7576_INTEGER,aux7582_INTEGER,aux7588_INTEGER,aux7594_INTEGER,aux7598_INTEGER,1],0,aux7599_BOOL);
constraint array_bool_and([aux5338_BOOL,aux5457_BOOL,aux5576_BOOL,aux5695_BOOL,aux5814_BOOL,aux5933_BOOL,aux6052_BOOL,aux6171_BOOL,aux6290_BOOL,aux6409_BOOL,aux6528_BOOL,aux6647_BOOL,aux6766_BOOL,aux6885_BOOL,aux7004_BOOL,aux7123_BOOL,aux7242_BOOL,aux7361_BOOL,aux7480_BOOL,aux7599_BOOL],aux7600_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[TWorkers_00003_00001_INTEGER,TWorkers_00003_00002_INTEGER,TWorkers_00003_00003_INTEGER,TWorkers_00003_00004_INTEGER,TWorkers_00003_00005_INTEGER,TWorkers_00003_00006_INTEGER,TWorkers_00003_00007_INTEGER,TWorkers_00003_00008_INTEGER,TWorkers_00003_00009_INTEGER,TWorkers_00003_00010_INTEGER,TWorkers_00003_00011_INTEGER,TWorkers_00003_00012_INTEGER,TWorkers_00003_00013_INTEGER,TWorkers_00003_00014_INTEGER,TWorkers_00003_00015_INTEGER,TWorkers_00003_00016_INTEGER,TWorkers_00003_00017_INTEGER,TWorkers_00003_00018_INTEGER,TWorkers_00003_00019_INTEGER,TWorkers_00003_00020_INTEGER,1],0,aux7601_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux7602_BOOL);
constraint int_lin_eq([-1,1,1],[aux7603,2,s_00004],0);
constraint int_lt_reif(s_00004,aux7603,aux7604_BOOL);
constraint array_bool_and([aux7602_BOOL,w_00004_00004_BOOL,aux7604_BOOL],aux7605_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux7606_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux7607_BOOL);
constraint int_lin_eq([-1,1,1],[aux7608,4,s_00001],0);
constraint int_lt_reif(s_00004,aux7608,aux7609_BOOL);
constraint int_le_reif(s_00001, s_00004,aux7610_BOOL);
constraint array_bool_and([aux7606_BOOL,aux7607_BOOL,w_00004_00001_BOOL,aux7609_BOOL,aux7610_BOOL],aux7611_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux7612_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux7613_BOOL);
constraint int_lin_eq([-1,1,1],[aux7614,4,s_00002],0);
constraint int_lt_reif(s_00004,aux7614,aux7615_BOOL);
constraint int_le_reif(s_00002, s_00004,aux7616_BOOL);
constraint array_bool_and([aux7612_BOOL,aux7613_BOOL,w_00004_00002_BOOL,aux7615_BOOL,aux7616_BOOL],aux7617_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux7618_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux7619_BOOL);
constraint int_lin_eq([-1,1,1],[aux7620,3,s_00003],0);
constraint int_lt_reif(s_00004,aux7620,aux7621_BOOL);
constraint int_le_reif(s_00003, s_00004,aux7622_BOOL);
constraint array_bool_and([aux7618_BOOL,aux7619_BOOL,w_00004_00003_BOOL,aux7621_BOOL,aux7622_BOOL],aux7623_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux7624_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux7625_BOOL);
constraint int_lin_eq([-1,1,1],[aux7626,3,s_00005],0);
constraint int_lt_reif(s_00004,aux7626,aux7627_BOOL);
constraint int_le_reif(s_00005, s_00004,aux7628_BOOL);
constraint array_bool_and([aux7624_BOOL,aux7625_BOOL,w_00004_00005_BOOL,aux7627_BOOL,aux7628_BOOL],aux7629_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux7630_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux7631_BOOL);
constraint int_lin_eq([-1,1,1],[aux7632,2,s_00006],0);
constraint int_lt_reif(s_00004,aux7632,aux7633_BOOL);
constraint int_le_reif(s_00006, s_00004,aux7634_BOOL);
constraint array_bool_and([aux7630_BOOL,aux7631_BOOL,w_00004_00006_BOOL,aux7633_BOOL,aux7634_BOOL],aux7635_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux7636_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux7637_BOOL);
constraint int_lin_eq([-1,1,1],[aux7638,3,s_00007],0);
constraint int_lt_reif(s_00004,aux7638,aux7639_BOOL);
constraint int_le_reif(s_00007, s_00004,aux7640_BOOL);
constraint array_bool_and([aux7636_BOOL,aux7637_BOOL,w_00004_00007_BOOL,aux7639_BOOL,aux7640_BOOL],aux7641_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux7642_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux7643_BOOL);
constraint int_lin_eq([-1,1,1],[aux7644,2,s_00008],0);
constraint int_lt_reif(s_00004,aux7644,aux7645_BOOL);
constraint int_le_reif(s_00008, s_00004,aux7646_BOOL);
constraint array_bool_and([aux7642_BOOL,aux7643_BOOL,w_00004_00008_BOOL,aux7645_BOOL,aux7646_BOOL],aux7647_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux7648_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux7649_BOOL);
constraint int_lin_eq([-1,1,1],[aux7650,2,s_00009],0);
constraint int_lt_reif(s_00004,aux7650,aux7651_BOOL);
constraint int_le_reif(s_00009, s_00004,aux7652_BOOL);
constraint array_bool_and([aux7648_BOOL,aux7649_BOOL,w_00004_00009_BOOL,aux7651_BOOL,aux7652_BOOL],aux7653_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux7654_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux7655_BOOL);
constraint int_lin_eq([-1,1,1],[aux7656,5,s_00010],0);
constraint int_lt_reif(s_00004,aux7656,aux7657_BOOL);
constraint int_le_reif(s_00010, s_00004,aux7658_BOOL);
constraint array_bool_and([aux7654_BOOL,aux7655_BOOL,w_00004_00010_BOOL,aux7657_BOOL,aux7658_BOOL],aux7659_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux7660_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux7661_BOOL);
constraint int_lin_eq([-1,1,1],[aux7662,3,s_00011],0);
constraint int_lt_reif(s_00004,aux7662,aux7663_BOOL);
constraint int_le_reif(s_00011, s_00004,aux7664_BOOL);
constraint array_bool_and([aux7660_BOOL,aux7661_BOOL,w_00004_00011_BOOL,aux7663_BOOL,aux7664_BOOL],aux7665_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux7666_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux7667_BOOL);
constraint int_lin_eq([-1,1,1],[aux7668,4,s_00012],0);
constraint int_lt_reif(s_00004,aux7668,aux7669_BOOL);
constraint int_le_reif(s_00012, s_00004,aux7670_BOOL);
constraint array_bool_and([aux7666_BOOL,aux7667_BOOL,w_00004_00012_BOOL,aux7669_BOOL,aux7670_BOOL],aux7671_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux7672_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux7673_BOOL);
constraint int_lin_eq([-1,1,1],[aux7674,3,s_00013],0);
constraint int_lt_reif(s_00004,aux7674,aux7675_BOOL);
constraint int_le_reif(s_00013, s_00004,aux7676_BOOL);
constraint array_bool_and([aux7672_BOOL,aux7673_BOOL,w_00004_00013_BOOL,aux7675_BOOL,aux7676_BOOL],aux7677_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux7678_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux7679_BOOL);
constraint int_lin_eq([-1,1,1],[aux7680,2,s_00014],0);
constraint int_lt_reif(s_00004,aux7680,aux7681_BOOL);
constraint int_le_reif(s_00014, s_00004,aux7682_BOOL);
constraint array_bool_and([aux7678_BOOL,aux7679_BOOL,w_00004_00014_BOOL,aux7681_BOOL,aux7682_BOOL],aux7683_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux7684_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux7685_BOOL);
constraint int_lin_eq([-1,1,1],[aux7686,1,s_00015],0);
constraint int_lt_reif(s_00004,aux7686,aux7687_BOOL);
constraint int_le_reif(s_00015, s_00004,aux7688_BOOL);
constraint array_bool_and([aux7684_BOOL,aux7685_BOOL,w_00004_00015_BOOL,aux7687_BOOL,aux7688_BOOL],aux7689_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux7690_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux7691_BOOL);
constraint int_lin_eq([-1,1,1],[aux7692,3,s_00016],0);
constraint int_lt_reif(s_00004,aux7692,aux7693_BOOL);
constraint int_le_reif(s_00016, s_00004,aux7694_BOOL);
constraint array_bool_and([aux7690_BOOL,aux7691_BOOL,w_00004_00016_BOOL,aux7693_BOOL,aux7694_BOOL],aux7695_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux7696_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux7697_BOOL);
constraint int_lin_eq([-1,1,1],[aux7698,4,s_00017],0);
constraint int_lt_reif(s_00004,aux7698,aux7699_BOOL);
constraint int_le_reif(s_00017, s_00004,aux7700_BOOL);
constraint array_bool_and([aux7696_BOOL,aux7697_BOOL,w_00004_00017_BOOL,aux7699_BOOL,aux7700_BOOL],aux7701_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux7702_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux7703_BOOL);
constraint int_lin_eq([-1,1,1],[aux7704,1,s_00018],0);
constraint int_lt_reif(s_00004,aux7704,aux7705_BOOL);
constraint int_le_reif(s_00018, s_00004,aux7706_BOOL);
constraint array_bool_and([aux7702_BOOL,aux7703_BOOL,w_00004_00018_BOOL,aux7705_BOOL,aux7706_BOOL],aux7707_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux7708_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux7709_BOOL);
constraint int_lin_eq([-1,1,1],[aux7710,4,s_00019],0);
constraint int_lt_reif(s_00004,aux7710,aux7711_BOOL);
constraint int_le_reif(s_00019, s_00004,aux7712_BOOL);
constraint array_bool_and([aux7708_BOOL,aux7709_BOOL,w_00004_00019_BOOL,aux7711_BOOL,aux7712_BOOL],aux7713_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux7714_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux7715_BOOL);
constraint int_lin_eq([-1,1,1],[aux7716,2,s_00020],0);
constraint int_lt_reif(s_00004,aux7716,aux7717_BOOL);
constraint int_le_reif(s_00020, s_00004,aux7718_BOOL);
constraint array_bool_and([aux7714_BOOL,aux7715_BOOL,w_00004_00020_BOOL,aux7717_BOOL,aux7718_BOOL],aux7719_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux7605_INTEGER,aux7611_INTEGER,aux7617_INTEGER,aux7623_INTEGER,aux7629_INTEGER,aux7635_INTEGER,aux7641_INTEGER,aux7647_INTEGER,aux7653_INTEGER,aux7659_INTEGER,aux7665_INTEGER,aux7671_INTEGER,aux7677_INTEGER,aux7683_INTEGER,aux7689_INTEGER,aux7695_INTEGER,aux7701_INTEGER,aux7707_INTEGER,aux7713_INTEGER,aux7719_INTEGER,1],0,aux7720_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux7721_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux7722_BOOL);
constraint int_lin_eq([-1,1,1],[aux7723,5,s_00010],0);
constraint int_lt_reif(s_00012,aux7723,aux7724_BOOL);
constraint int_le_reif(s_00010, s_00012,aux7725_BOOL);
constraint array_bool_and([aux7721_BOOL,aux7722_BOOL,w_00004_00010_BOOL,aux7724_BOOL,aux7725_BOOL],aux7726_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux7727_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux7728_BOOL);
constraint int_lin_eq([-1,1,1],[aux7729,3,s_00011],0);
constraint int_lt_reif(s_00012,aux7729,aux7730_BOOL);
constraint int_le_reif(s_00011, s_00012,aux7731_BOOL);
constraint array_bool_and([aux7727_BOOL,aux7728_BOOL,w_00004_00011_BOOL,aux7730_BOOL,aux7731_BOOL],aux7732_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux7733_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux7734_BOOL);
constraint int_lin_eq([-1,1,1],[aux7735,3,s_00013],0);
constraint int_lt_reif(s_00012,aux7735,aux7736_BOOL);
constraint int_le_reif(s_00013, s_00012,aux7737_BOOL);
constraint array_bool_and([aux7733_BOOL,aux7734_BOOL,w_00004_00013_BOOL,aux7736_BOOL,aux7737_BOOL],aux7738_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux7739_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux7740_BOOL);
constraint int_lin_eq([-1,1,1],[aux7741,2,s_00014],0);
constraint int_lt_reif(s_00012,aux7741,aux7742_BOOL);
constraint int_le_reif(s_00014, s_00012,aux7743_BOOL);
constraint array_bool_and([aux7739_BOOL,aux7740_BOOL,w_00004_00014_BOOL,aux7742_BOOL,aux7743_BOOL],aux7744_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux7745_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux7746_BOOL);
constraint int_lin_eq([-1,1,1],[aux7747,1,s_00015],0);
constraint int_lt_reif(s_00012,aux7747,aux7748_BOOL);
constraint int_le_reif(s_00015, s_00012,aux7749_BOOL);
constraint array_bool_and([aux7745_BOOL,aux7746_BOOL,w_00004_00015_BOOL,aux7748_BOOL,aux7749_BOOL],aux7750_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux7751_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux7752_BOOL);
constraint int_lin_eq([-1,1,1],[aux7753,3,s_00016],0);
constraint int_lt_reif(s_00012,aux7753,aux7754_BOOL);
constraint int_le_reif(s_00016, s_00012,aux7755_BOOL);
constraint array_bool_and([aux7751_BOOL,aux7752_BOOL,w_00004_00016_BOOL,aux7754_BOOL,aux7755_BOOL],aux7756_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux7757_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux7758_BOOL);
constraint int_lin_eq([-1,1,1],[aux7759,4,s_00017],0);
constraint int_lt_reif(s_00012,aux7759,aux7760_BOOL);
constraint int_le_reif(s_00017, s_00012,aux7761_BOOL);
constraint array_bool_and([aux7757_BOOL,aux7758_BOOL,w_00004_00017_BOOL,aux7760_BOOL,aux7761_BOOL],aux7762_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux7763_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux7764_BOOL);
constraint int_lin_eq([-1,1,1],[aux7765,1,s_00018],0);
constraint int_lt_reif(s_00012,aux7765,aux7766_BOOL);
constraint int_le_reif(s_00018, s_00012,aux7767_BOOL);
constraint array_bool_and([aux7763_BOOL,aux7764_BOOL,w_00004_00018_BOOL,aux7766_BOOL,aux7767_BOOL],aux7768_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux7769_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux7770_BOOL);
constraint int_lin_eq([-1,1,1],[aux7771,4,s_00019],0);
constraint int_lt_reif(s_00012,aux7771,aux7772_BOOL);
constraint int_le_reif(s_00019, s_00012,aux7773_BOOL);
constraint array_bool_and([aux7769_BOOL,aux7770_BOOL,w_00004_00019_BOOL,aux7772_BOOL,aux7773_BOOL],aux7774_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux7775_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux7776_BOOL);
constraint int_lin_eq([-1,1,1],[aux7777,2,s_00020],0);
constraint int_lt_reif(s_00012,aux7777,aux7778_BOOL);
constraint int_le_reif(s_00020, s_00012,aux7779_BOOL);
constraint array_bool_and([aux7775_BOOL,aux7776_BOOL,w_00004_00020_BOOL,aux7778_BOOL,aux7779_BOOL],aux7780_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux7781_BOOL);
constraint int_lin_eq([-1,1,1],[aux7782,4,s_00012],0);
constraint int_lt_reif(s_00012,aux7782,aux7783_BOOL);
constraint array_bool_and([aux7781_BOOL,w_00004_00012_BOOL,aux7783_BOOL],aux7784_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux7785_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux7786_BOOL);
constraint int_lin_eq([-1,1,1],[aux7787,4,s_00001],0);
constraint int_lt_reif(s_00012,aux7787,aux7788_BOOL);
constraint int_le_reif(s_00001, s_00012,aux7789_BOOL);
constraint array_bool_and([aux7785_BOOL,aux7786_BOOL,w_00004_00001_BOOL,aux7788_BOOL,aux7789_BOOL],aux7790_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux7791_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux7792_BOOL);
constraint int_lin_eq([-1,1,1],[aux7793,4,s_00002],0);
constraint int_lt_reif(s_00012,aux7793,aux7794_BOOL);
constraint int_le_reif(s_00002, s_00012,aux7795_BOOL);
constraint array_bool_and([aux7791_BOOL,aux7792_BOOL,w_00004_00002_BOOL,aux7794_BOOL,aux7795_BOOL],aux7796_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux7797_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux7798_BOOL);
constraint int_lin_eq([-1,1,1],[aux7799,3,s_00003],0);
constraint int_lt_reif(s_00012,aux7799,aux7800_BOOL);
constraint int_le_reif(s_00003, s_00012,aux7801_BOOL);
constraint array_bool_and([aux7797_BOOL,aux7798_BOOL,w_00004_00003_BOOL,aux7800_BOOL,aux7801_BOOL],aux7802_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux7803_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux7804_BOOL);
constraint int_lin_eq([-1,1,1],[aux7805,2,s_00004],0);
constraint int_lt_reif(s_00012,aux7805,aux7806_BOOL);
constraint int_le_reif(s_00004, s_00012,aux7807_BOOL);
constraint array_bool_and([aux7803_BOOL,aux7804_BOOL,w_00004_00004_BOOL,aux7806_BOOL,aux7807_BOOL],aux7808_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux7809_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux7810_BOOL);
constraint int_lin_eq([-1,1,1],[aux7811,3,s_00005],0);
constraint int_lt_reif(s_00012,aux7811,aux7812_BOOL);
constraint int_le_reif(s_00005, s_00012,aux7813_BOOL);
constraint array_bool_and([aux7809_BOOL,aux7810_BOOL,w_00004_00005_BOOL,aux7812_BOOL,aux7813_BOOL],aux7814_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux7815_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux7816_BOOL);
constraint int_lin_eq([-1,1,1],[aux7817,2,s_00006],0);
constraint int_lt_reif(s_00012,aux7817,aux7818_BOOL);
constraint int_le_reif(s_00006, s_00012,aux7819_BOOL);
constraint array_bool_and([aux7815_BOOL,aux7816_BOOL,w_00004_00006_BOOL,aux7818_BOOL,aux7819_BOOL],aux7820_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux7821_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux7822_BOOL);
constraint int_lin_eq([-1,1,1],[aux7823,3,s_00007],0);
constraint int_lt_reif(s_00012,aux7823,aux7824_BOOL);
constraint int_le_reif(s_00007, s_00012,aux7825_BOOL);
constraint array_bool_and([aux7821_BOOL,aux7822_BOOL,w_00004_00007_BOOL,aux7824_BOOL,aux7825_BOOL],aux7826_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux7827_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux7828_BOOL);
constraint int_lin_eq([-1,1,1],[aux7829,2,s_00008],0);
constraint int_lt_reif(s_00012,aux7829,aux7830_BOOL);
constraint int_le_reif(s_00008, s_00012,aux7831_BOOL);
constraint array_bool_and([aux7827_BOOL,aux7828_BOOL,w_00004_00008_BOOL,aux7830_BOOL,aux7831_BOOL],aux7832_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux7833_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux7834_BOOL);
constraint int_lin_eq([-1,1,1],[aux7835,2,s_00009],0);
constraint int_lt_reif(s_00012,aux7835,aux7836_BOOL);
constraint int_le_reif(s_00009, s_00012,aux7837_BOOL);
constraint array_bool_and([aux7833_BOOL,aux7834_BOOL,w_00004_00009_BOOL,aux7836_BOOL,aux7837_BOOL],aux7838_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux7726_INTEGER,aux7732_INTEGER,aux7738_INTEGER,aux7744_INTEGER,aux7750_INTEGER,aux7756_INTEGER,aux7762_INTEGER,aux7768_INTEGER,aux7774_INTEGER,aux7780_INTEGER,aux7784_INTEGER,aux7790_INTEGER,aux7796_INTEGER,aux7802_INTEGER,aux7808_INTEGER,aux7814_INTEGER,aux7820_INTEGER,aux7826_INTEGER,aux7832_INTEGER,aux7838_INTEGER,1],0,aux7839_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux7840_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux7841_BOOL);
constraint int_lin_eq([-1,1,1],[aux7842,5,s_00010],0);
constraint int_lt_reif(s_00013,aux7842,aux7843_BOOL);
constraint int_le_reif(s_00010, s_00013,aux7844_BOOL);
constraint array_bool_and([aux7840_BOOL,aux7841_BOOL,w_00004_00010_BOOL,aux7843_BOOL,aux7844_BOOL],aux7845_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux7846_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux7847_BOOL);
constraint int_lin_eq([-1,1,1],[aux7848,3,s_00011],0);
constraint int_lt_reif(s_00013,aux7848,aux7849_BOOL);
constraint int_le_reif(s_00011, s_00013,aux7850_BOOL);
constraint array_bool_and([aux7846_BOOL,aux7847_BOOL,w_00004_00011_BOOL,aux7849_BOOL,aux7850_BOOL],aux7851_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux7852_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux7853_BOOL);
constraint int_lin_eq([-1,1,1],[aux7854,4,s_00012],0);
constraint int_lt_reif(s_00013,aux7854,aux7855_BOOL);
constraint int_le_reif(s_00012, s_00013,aux7856_BOOL);
constraint array_bool_and([aux7852_BOOL,aux7853_BOOL,w_00004_00012_BOOL,aux7855_BOOL,aux7856_BOOL],aux7857_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux7858_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux7859_BOOL);
constraint int_lin_eq([-1,1,1],[aux7860,2,s_00014],0);
constraint int_lt_reif(s_00013,aux7860,aux7861_BOOL);
constraint int_le_reif(s_00014, s_00013,aux7862_BOOL);
constraint array_bool_and([aux7858_BOOL,aux7859_BOOL,w_00004_00014_BOOL,aux7861_BOOL,aux7862_BOOL],aux7863_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux7864_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux7865_BOOL);
constraint int_lin_eq([-1,1,1],[aux7866,1,s_00015],0);
constraint int_lt_reif(s_00013,aux7866,aux7867_BOOL);
constraint int_le_reif(s_00015, s_00013,aux7868_BOOL);
constraint array_bool_and([aux7864_BOOL,aux7865_BOOL,w_00004_00015_BOOL,aux7867_BOOL,aux7868_BOOL],aux7869_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux7870_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux7871_BOOL);
constraint int_lin_eq([-1,1,1],[aux7872,3,s_00016],0);
constraint int_lt_reif(s_00013,aux7872,aux7873_BOOL);
constraint int_le_reif(s_00016, s_00013,aux7874_BOOL);
constraint array_bool_and([aux7870_BOOL,aux7871_BOOL,w_00004_00016_BOOL,aux7873_BOOL,aux7874_BOOL],aux7875_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux7876_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux7877_BOOL);
constraint int_lin_eq([-1,1,1],[aux7878,4,s_00017],0);
constraint int_lt_reif(s_00013,aux7878,aux7879_BOOL);
constraint int_le_reif(s_00017, s_00013,aux7880_BOOL);
constraint array_bool_and([aux7876_BOOL,aux7877_BOOL,w_00004_00017_BOOL,aux7879_BOOL,aux7880_BOOL],aux7881_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux7882_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux7883_BOOL);
constraint int_lin_eq([-1,1,1],[aux7884,1,s_00018],0);
constraint int_lt_reif(s_00013,aux7884,aux7885_BOOL);
constraint int_le_reif(s_00018, s_00013,aux7886_BOOL);
constraint array_bool_and([aux7882_BOOL,aux7883_BOOL,w_00004_00018_BOOL,aux7885_BOOL,aux7886_BOOL],aux7887_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux7888_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux7889_BOOL);
constraint int_lin_eq([-1,1,1],[aux7890,4,s_00019],0);
constraint int_lt_reif(s_00013,aux7890,aux7891_BOOL);
constraint int_le_reif(s_00019, s_00013,aux7892_BOOL);
constraint array_bool_and([aux7888_BOOL,aux7889_BOOL,w_00004_00019_BOOL,aux7891_BOOL,aux7892_BOOL],aux7893_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux7894_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux7895_BOOL);
constraint int_lin_eq([-1,1,1],[aux7896,2,s_00020],0);
constraint int_lt_reif(s_00013,aux7896,aux7897_BOOL);
constraint int_le_reif(s_00020, s_00013,aux7898_BOOL);
constraint array_bool_and([aux7894_BOOL,aux7895_BOOL,w_00004_00020_BOOL,aux7897_BOOL,aux7898_BOOL],aux7899_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux7900_BOOL);
constraint int_lin_eq([-1,1,1],[aux7901,3,s_00013],0);
constraint int_lt_reif(s_00013,aux7901,aux7902_BOOL);
constraint array_bool_and([aux7900_BOOL,w_00004_00013_BOOL,aux7902_BOOL],aux7903_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux7904_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux7905_BOOL);
constraint int_lin_eq([-1,1,1],[aux7906,4,s_00001],0);
constraint int_lt_reif(s_00013,aux7906,aux7907_BOOL);
constraint int_le_reif(s_00001, s_00013,aux7908_BOOL);
constraint array_bool_and([aux7904_BOOL,aux7905_BOOL,w_00004_00001_BOOL,aux7907_BOOL,aux7908_BOOL],aux7909_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux7910_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux7911_BOOL);
constraint int_lin_eq([-1,1,1],[aux7912,4,s_00002],0);
constraint int_lt_reif(s_00013,aux7912,aux7913_BOOL);
constraint int_le_reif(s_00002, s_00013,aux7914_BOOL);
constraint array_bool_and([aux7910_BOOL,aux7911_BOOL,w_00004_00002_BOOL,aux7913_BOOL,aux7914_BOOL],aux7915_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux7916_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux7917_BOOL);
constraint int_lin_eq([-1,1,1],[aux7918,3,s_00003],0);
constraint int_lt_reif(s_00013,aux7918,aux7919_BOOL);
constraint int_le_reif(s_00003, s_00013,aux7920_BOOL);
constraint array_bool_and([aux7916_BOOL,aux7917_BOOL,w_00004_00003_BOOL,aux7919_BOOL,aux7920_BOOL],aux7921_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux7922_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux7923_BOOL);
constraint int_lin_eq([-1,1,1],[aux7924,2,s_00004],0);
constraint int_lt_reif(s_00013,aux7924,aux7925_BOOL);
constraint int_le_reif(s_00004, s_00013,aux7926_BOOL);
constraint array_bool_and([aux7922_BOOL,aux7923_BOOL,w_00004_00004_BOOL,aux7925_BOOL,aux7926_BOOL],aux7927_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux7928_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux7929_BOOL);
constraint int_lin_eq([-1,1,1],[aux7930,3,s_00005],0);
constraint int_lt_reif(s_00013,aux7930,aux7931_BOOL);
constraint int_le_reif(s_00005, s_00013,aux7932_BOOL);
constraint array_bool_and([aux7928_BOOL,aux7929_BOOL,w_00004_00005_BOOL,aux7931_BOOL,aux7932_BOOL],aux7933_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux7934_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux7935_BOOL);
constraint int_lin_eq([-1,1,1],[aux7936,2,s_00006],0);
constraint int_lt_reif(s_00013,aux7936,aux7937_BOOL);
constraint int_le_reif(s_00006, s_00013,aux7938_BOOL);
constraint array_bool_and([aux7934_BOOL,aux7935_BOOL,w_00004_00006_BOOL,aux7937_BOOL,aux7938_BOOL],aux7939_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux7940_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux7941_BOOL);
constraint int_lin_eq([-1,1,1],[aux7942,3,s_00007],0);
constraint int_lt_reif(s_00013,aux7942,aux7943_BOOL);
constraint int_le_reif(s_00007, s_00013,aux7944_BOOL);
constraint array_bool_and([aux7940_BOOL,aux7941_BOOL,w_00004_00007_BOOL,aux7943_BOOL,aux7944_BOOL],aux7945_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux7946_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux7947_BOOL);
constraint int_lin_eq([-1,1,1],[aux7948,2,s_00008],0);
constraint int_lt_reif(s_00013,aux7948,aux7949_BOOL);
constraint int_le_reif(s_00008, s_00013,aux7950_BOOL);
constraint array_bool_and([aux7946_BOOL,aux7947_BOOL,w_00004_00008_BOOL,aux7949_BOOL,aux7950_BOOL],aux7951_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux7952_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux7953_BOOL);
constraint int_lin_eq([-1,1,1],[aux7954,2,s_00009],0);
constraint int_lt_reif(s_00013,aux7954,aux7955_BOOL);
constraint int_le_reif(s_00009, s_00013,aux7956_BOOL);
constraint array_bool_and([aux7952_BOOL,aux7953_BOOL,w_00004_00009_BOOL,aux7955_BOOL,aux7956_BOOL],aux7957_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux7845_INTEGER,aux7851_INTEGER,aux7857_INTEGER,aux7863_INTEGER,aux7869_INTEGER,aux7875_INTEGER,aux7881_INTEGER,aux7887_INTEGER,aux7893_INTEGER,aux7899_INTEGER,aux7903_INTEGER,aux7909_INTEGER,aux7915_INTEGER,aux7921_INTEGER,aux7927_INTEGER,aux7933_INTEGER,aux7939_INTEGER,aux7945_INTEGER,aux7951_INTEGER,aux7957_INTEGER,1],0,aux7958_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux7959_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux7960_BOOL);
constraint int_lin_eq([-1,1,1],[aux7961,5,s_00010],0);
constraint int_lt_reif(s_00017,aux7961,aux7962_BOOL);
constraint int_le_reif(s_00010, s_00017,aux7963_BOOL);
constraint array_bool_and([aux7959_BOOL,aux7960_BOOL,w_00004_00010_BOOL,aux7962_BOOL,aux7963_BOOL],aux7964_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux7965_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux7966_BOOL);
constraint int_lin_eq([-1,1,1],[aux7967,3,s_00011],0);
constraint int_lt_reif(s_00017,aux7967,aux7968_BOOL);
constraint int_le_reif(s_00011, s_00017,aux7969_BOOL);
constraint array_bool_and([aux7965_BOOL,aux7966_BOOL,w_00004_00011_BOOL,aux7968_BOOL,aux7969_BOOL],aux7970_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux7971_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux7972_BOOL);
constraint int_lin_eq([-1,1,1],[aux7973,4,s_00012],0);
constraint int_lt_reif(s_00017,aux7973,aux7974_BOOL);
constraint int_le_reif(s_00012, s_00017,aux7975_BOOL);
constraint array_bool_and([aux7971_BOOL,aux7972_BOOL,w_00004_00012_BOOL,aux7974_BOOL,aux7975_BOOL],aux7976_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux7977_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux7978_BOOL);
constraint int_lin_eq([-1,1,1],[aux7979,3,s_00013],0);
constraint int_lt_reif(s_00017,aux7979,aux7980_BOOL);
constraint int_le_reif(s_00013, s_00017,aux7981_BOOL);
constraint array_bool_and([aux7977_BOOL,aux7978_BOOL,w_00004_00013_BOOL,aux7980_BOOL,aux7981_BOOL],aux7982_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux7983_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux7984_BOOL);
constraint int_lin_eq([-1,1,1],[aux7985,2,s_00014],0);
constraint int_lt_reif(s_00017,aux7985,aux7986_BOOL);
constraint int_le_reif(s_00014, s_00017,aux7987_BOOL);
constraint array_bool_and([aux7983_BOOL,aux7984_BOOL,w_00004_00014_BOOL,aux7986_BOOL,aux7987_BOOL],aux7988_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux7989_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux7990_BOOL);
constraint int_lin_eq([-1,1,1],[aux7991,1,s_00015],0);
constraint int_lt_reif(s_00017,aux7991,aux7992_BOOL);
constraint int_le_reif(s_00015, s_00017,aux7993_BOOL);
constraint array_bool_and([aux7989_BOOL,aux7990_BOOL,w_00004_00015_BOOL,aux7992_BOOL,aux7993_BOOL],aux7994_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux7995_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux7996_BOOL);
constraint int_lin_eq([-1,1,1],[aux7997,3,s_00016],0);
constraint int_lt_reif(s_00017,aux7997,aux7998_BOOL);
constraint int_le_reif(s_00016, s_00017,aux7999_BOOL);
constraint array_bool_and([aux7995_BOOL,aux7996_BOOL,w_00004_00016_BOOL,aux7998_BOOL,aux7999_BOOL],aux8000_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux8001_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux8002_BOOL);
constraint int_lin_eq([-1,1,1],[aux8003,1,s_00018],0);
constraint int_lt_reif(s_00017,aux8003,aux8004_BOOL);
constraint int_le_reif(s_00018, s_00017,aux8005_BOOL);
constraint array_bool_and([aux8001_BOOL,aux8002_BOOL,w_00004_00018_BOOL,aux8004_BOOL,aux8005_BOOL],aux8006_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux8007_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux8008_BOOL);
constraint int_lin_eq([-1,1,1],[aux8009,4,s_00019],0);
constraint int_lt_reif(s_00017,aux8009,aux8010_BOOL);
constraint int_le_reif(s_00019, s_00017,aux8011_BOOL);
constraint array_bool_and([aux8007_BOOL,aux8008_BOOL,w_00004_00019_BOOL,aux8010_BOOL,aux8011_BOOL],aux8012_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux8013_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux8014_BOOL);
constraint int_lin_eq([-1,1,1],[aux8015,2,s_00020],0);
constraint int_lt_reif(s_00017,aux8015,aux8016_BOOL);
constraint int_le_reif(s_00020, s_00017,aux8017_BOOL);
constraint array_bool_and([aux8013_BOOL,aux8014_BOOL,w_00004_00020_BOOL,aux8016_BOOL,aux8017_BOOL],aux8018_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux8019_BOOL);
constraint int_lin_eq([-1,1,1],[aux8020,4,s_00017],0);
constraint int_lt_reif(s_00017,aux8020,aux8021_BOOL);
constraint array_bool_and([aux8019_BOOL,w_00004_00017_BOOL,aux8021_BOOL],aux8022_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux8023_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux8024_BOOL);
constraint int_lin_eq([-1,1,1],[aux8025,4,s_00001],0);
constraint int_lt_reif(s_00017,aux8025,aux8026_BOOL);
constraint int_le_reif(s_00001, s_00017,aux8027_BOOL);
constraint array_bool_and([aux8023_BOOL,aux8024_BOOL,w_00004_00001_BOOL,aux8026_BOOL,aux8027_BOOL],aux8028_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux8029_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux8030_BOOL);
constraint int_lin_eq([-1,1,1],[aux8031,4,s_00002],0);
constraint int_lt_reif(s_00017,aux8031,aux8032_BOOL);
constraint int_le_reif(s_00002, s_00017,aux8033_BOOL);
constraint array_bool_and([aux8029_BOOL,aux8030_BOOL,w_00004_00002_BOOL,aux8032_BOOL,aux8033_BOOL],aux8034_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux8035_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux8036_BOOL);
constraint int_lin_eq([-1,1,1],[aux8037,3,s_00003],0);
constraint int_lt_reif(s_00017,aux8037,aux8038_BOOL);
constraint int_le_reif(s_00003, s_00017,aux8039_BOOL);
constraint array_bool_and([aux8035_BOOL,aux8036_BOOL,w_00004_00003_BOOL,aux8038_BOOL,aux8039_BOOL],aux8040_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux8041_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux8042_BOOL);
constraint int_lin_eq([-1,1,1],[aux8043,2,s_00004],0);
constraint int_lt_reif(s_00017,aux8043,aux8044_BOOL);
constraint int_le_reif(s_00004, s_00017,aux8045_BOOL);
constraint array_bool_and([aux8041_BOOL,aux8042_BOOL,w_00004_00004_BOOL,aux8044_BOOL,aux8045_BOOL],aux8046_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux8047_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux8048_BOOL);
constraint int_lin_eq([-1,1,1],[aux8049,3,s_00005],0);
constraint int_lt_reif(s_00017,aux8049,aux8050_BOOL);
constraint int_le_reif(s_00005, s_00017,aux8051_BOOL);
constraint array_bool_and([aux8047_BOOL,aux8048_BOOL,w_00004_00005_BOOL,aux8050_BOOL,aux8051_BOOL],aux8052_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux8053_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux8054_BOOL);
constraint int_lin_eq([-1,1,1],[aux8055,2,s_00006],0);
constraint int_lt_reif(s_00017,aux8055,aux8056_BOOL);
constraint int_le_reif(s_00006, s_00017,aux8057_BOOL);
constraint array_bool_and([aux8053_BOOL,aux8054_BOOL,w_00004_00006_BOOL,aux8056_BOOL,aux8057_BOOL],aux8058_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux8059_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux8060_BOOL);
constraint int_lin_eq([-1,1,1],[aux8061,3,s_00007],0);
constraint int_lt_reif(s_00017,aux8061,aux8062_BOOL);
constraint int_le_reif(s_00007, s_00017,aux8063_BOOL);
constraint array_bool_and([aux8059_BOOL,aux8060_BOOL,w_00004_00007_BOOL,aux8062_BOOL,aux8063_BOOL],aux8064_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux8065_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux8066_BOOL);
constraint int_lin_eq([-1,1,1],[aux8067,2,s_00008],0);
constraint int_lt_reif(s_00017,aux8067,aux8068_BOOL);
constraint int_le_reif(s_00008, s_00017,aux8069_BOOL);
constraint array_bool_and([aux8065_BOOL,aux8066_BOOL,w_00004_00008_BOOL,aux8068_BOOL,aux8069_BOOL],aux8070_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux8071_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux8072_BOOL);
constraint int_lin_eq([-1,1,1],[aux8073,2,s_00009],0);
constraint int_lt_reif(s_00017,aux8073,aux8074_BOOL);
constraint int_le_reif(s_00009, s_00017,aux8075_BOOL);
constraint array_bool_and([aux8071_BOOL,aux8072_BOOL,w_00004_00009_BOOL,aux8074_BOOL,aux8075_BOOL],aux8076_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux7964_INTEGER,aux7970_INTEGER,aux7976_INTEGER,aux7982_INTEGER,aux7988_INTEGER,aux7994_INTEGER,aux8000_INTEGER,aux8006_INTEGER,aux8012_INTEGER,aux8018_INTEGER,aux8022_INTEGER,aux8028_INTEGER,aux8034_INTEGER,aux8040_INTEGER,aux8046_INTEGER,aux8052_INTEGER,aux8058_INTEGER,aux8064_INTEGER,aux8070_INTEGER,aux8076_INTEGER,1],0,aux8077_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux8078_BOOL);
constraint int_lin_eq([-1,1,1],[aux8079,4,s_00001],0);
constraint int_lt_reif(s_00001,aux8079,aux8080_BOOL);
constraint array_bool_and([aux8078_BOOL,w_00004_00001_BOOL,aux8080_BOOL],aux8081_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux8082_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux8083_BOOL);
constraint int_lin_eq([-1,1,1],[aux8084,4,s_00002],0);
constraint int_lt_reif(s_00001,aux8084,aux8085_BOOL);
constraint int_le_reif(s_00002, s_00001,aux8086_BOOL);
constraint array_bool_and([aux8082_BOOL,aux8083_BOOL,w_00004_00002_BOOL,aux8085_BOOL,aux8086_BOOL],aux8087_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux8088_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux8089_BOOL);
constraint int_lin_eq([-1,1,1],[aux8090,3,s_00003],0);
constraint int_lt_reif(s_00001,aux8090,aux8091_BOOL);
constraint int_le_reif(s_00003, s_00001,aux8092_BOOL);
constraint array_bool_and([aux8088_BOOL,aux8089_BOOL,w_00004_00003_BOOL,aux8091_BOOL,aux8092_BOOL],aux8093_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux8094_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux8095_BOOL);
constraint int_lin_eq([-1,1,1],[aux8096,2,s_00004],0);
constraint int_lt_reif(s_00001,aux8096,aux8097_BOOL);
constraint int_le_reif(s_00004, s_00001,aux8098_BOOL);
constraint array_bool_and([aux8094_BOOL,aux8095_BOOL,w_00004_00004_BOOL,aux8097_BOOL,aux8098_BOOL],aux8099_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux8100_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux8101_BOOL);
constraint int_lin_eq([-1,1,1],[aux8102,3,s_00005],0);
constraint int_lt_reif(s_00001,aux8102,aux8103_BOOL);
constraint int_le_reif(s_00005, s_00001,aux8104_BOOL);
constraint array_bool_and([aux8100_BOOL,aux8101_BOOL,w_00004_00005_BOOL,aux8103_BOOL,aux8104_BOOL],aux8105_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux8106_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux8107_BOOL);
constraint int_lin_eq([-1,1,1],[aux8108,2,s_00006],0);
constraint int_lt_reif(s_00001,aux8108,aux8109_BOOL);
constraint int_le_reif(s_00006, s_00001,aux8110_BOOL);
constraint array_bool_and([aux8106_BOOL,aux8107_BOOL,w_00004_00006_BOOL,aux8109_BOOL,aux8110_BOOL],aux8111_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux8112_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux8113_BOOL);
constraint int_lin_eq([-1,1,1],[aux8114,3,s_00007],0);
constraint int_lt_reif(s_00001,aux8114,aux8115_BOOL);
constraint int_le_reif(s_00007, s_00001,aux8116_BOOL);
constraint array_bool_and([aux8112_BOOL,aux8113_BOOL,w_00004_00007_BOOL,aux8115_BOOL,aux8116_BOOL],aux8117_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux8118_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux8119_BOOL);
constraint int_lin_eq([-1,1,1],[aux8120,2,s_00008],0);
constraint int_lt_reif(s_00001,aux8120,aux8121_BOOL);
constraint int_le_reif(s_00008, s_00001,aux8122_BOOL);
constraint array_bool_and([aux8118_BOOL,aux8119_BOOL,w_00004_00008_BOOL,aux8121_BOOL,aux8122_BOOL],aux8123_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux8124_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux8125_BOOL);
constraint int_lin_eq([-1,1,1],[aux8126,2,s_00009],0);
constraint int_lt_reif(s_00001,aux8126,aux8127_BOOL);
constraint int_le_reif(s_00009, s_00001,aux8128_BOOL);
constraint array_bool_and([aux8124_BOOL,aux8125_BOOL,w_00004_00009_BOOL,aux8127_BOOL,aux8128_BOOL],aux8129_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux8130_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux8131_BOOL);
constraint int_lin_eq([-1,1,1],[aux8132,5,s_00010],0);
constraint int_lt_reif(s_00001,aux8132,aux8133_BOOL);
constraint int_le_reif(s_00010, s_00001,aux8134_BOOL);
constraint array_bool_and([aux8130_BOOL,aux8131_BOOL,w_00004_00010_BOOL,aux8133_BOOL,aux8134_BOOL],aux8135_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux8136_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux8137_BOOL);
constraint int_lin_eq([-1,1,1],[aux8138,3,s_00011],0);
constraint int_lt_reif(s_00001,aux8138,aux8139_BOOL);
constraint int_le_reif(s_00011, s_00001,aux8140_BOOL);
constraint array_bool_and([aux8136_BOOL,aux8137_BOOL,w_00004_00011_BOOL,aux8139_BOOL,aux8140_BOOL],aux8141_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux8142_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux8143_BOOL);
constraint int_lin_eq([-1,1,1],[aux8144,4,s_00012],0);
constraint int_lt_reif(s_00001,aux8144,aux8145_BOOL);
constraint int_le_reif(s_00012, s_00001,aux8146_BOOL);
constraint array_bool_and([aux8142_BOOL,aux8143_BOOL,w_00004_00012_BOOL,aux8145_BOOL,aux8146_BOOL],aux8147_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux8148_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux8149_BOOL);
constraint int_lin_eq([-1,1,1],[aux8150,3,s_00013],0);
constraint int_lt_reif(s_00001,aux8150,aux8151_BOOL);
constraint int_le_reif(s_00013, s_00001,aux8152_BOOL);
constraint array_bool_and([aux8148_BOOL,aux8149_BOOL,w_00004_00013_BOOL,aux8151_BOOL,aux8152_BOOL],aux8153_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux8154_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux8155_BOOL);
constraint int_lin_eq([-1,1,1],[aux8156,2,s_00014],0);
constraint int_lt_reif(s_00001,aux8156,aux8157_BOOL);
constraint int_le_reif(s_00014, s_00001,aux8158_BOOL);
constraint array_bool_and([aux8154_BOOL,aux8155_BOOL,w_00004_00014_BOOL,aux8157_BOOL,aux8158_BOOL],aux8159_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux8160_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux8161_BOOL);
constraint int_lin_eq([-1,1,1],[aux8162,1,s_00015],0);
constraint int_lt_reif(s_00001,aux8162,aux8163_BOOL);
constraint int_le_reif(s_00015, s_00001,aux8164_BOOL);
constraint array_bool_and([aux8160_BOOL,aux8161_BOOL,w_00004_00015_BOOL,aux8163_BOOL,aux8164_BOOL],aux8165_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux8166_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux8167_BOOL);
constraint int_lin_eq([-1,1,1],[aux8168,3,s_00016],0);
constraint int_lt_reif(s_00001,aux8168,aux8169_BOOL);
constraint int_le_reif(s_00016, s_00001,aux8170_BOOL);
constraint array_bool_and([aux8166_BOOL,aux8167_BOOL,w_00004_00016_BOOL,aux8169_BOOL,aux8170_BOOL],aux8171_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux8172_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux8173_BOOL);
constraint int_lin_eq([-1,1,1],[aux8174,4,s_00017],0);
constraint int_lt_reif(s_00001,aux8174,aux8175_BOOL);
constraint int_le_reif(s_00017, s_00001,aux8176_BOOL);
constraint array_bool_and([aux8172_BOOL,aux8173_BOOL,w_00004_00017_BOOL,aux8175_BOOL,aux8176_BOOL],aux8177_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux8178_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux8179_BOOL);
constraint int_lin_eq([-1,1,1],[aux8180,1,s_00018],0);
constraint int_lt_reif(s_00001,aux8180,aux8181_BOOL);
constraint int_le_reif(s_00018, s_00001,aux8182_BOOL);
constraint array_bool_and([aux8178_BOOL,aux8179_BOOL,w_00004_00018_BOOL,aux8181_BOOL,aux8182_BOOL],aux8183_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux8184_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux8185_BOOL);
constraint int_lin_eq([-1,1,1],[aux8186,4,s_00019],0);
constraint int_lt_reif(s_00001,aux8186,aux8187_BOOL);
constraint int_le_reif(s_00019, s_00001,aux8188_BOOL);
constraint array_bool_and([aux8184_BOOL,aux8185_BOOL,w_00004_00019_BOOL,aux8187_BOOL,aux8188_BOOL],aux8189_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux8190_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux8191_BOOL);
constraint int_lin_eq([-1,1,1],[aux8192,2,s_00020],0);
constraint int_lt_reif(s_00001,aux8192,aux8193_BOOL);
constraint int_le_reif(s_00020, s_00001,aux8194_BOOL);
constraint array_bool_and([aux8190_BOOL,aux8191_BOOL,w_00004_00020_BOOL,aux8193_BOOL,aux8194_BOOL],aux8195_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux8081_INTEGER,aux8087_INTEGER,aux8093_INTEGER,aux8099_INTEGER,aux8105_INTEGER,aux8111_INTEGER,aux8117_INTEGER,aux8123_INTEGER,aux8129_INTEGER,aux8135_INTEGER,aux8141_INTEGER,aux8147_INTEGER,aux8153_INTEGER,aux8159_INTEGER,aux8165_INTEGER,aux8171_INTEGER,aux8177_INTEGER,aux8183_INTEGER,aux8189_INTEGER,aux8195_INTEGER,1],0,aux8196_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux8197_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux8198_BOOL);
constraint int_lin_eq([-1,1,1],[aux8199,3,s_00011],0);
constraint int_lt_reif(s_00010,aux8199,aux8200_BOOL);
constraint int_le_reif(s_00011, s_00010,aux8201_BOOL);
constraint array_bool_and([aux8197_BOOL,aux8198_BOOL,w_00004_00011_BOOL,aux8200_BOOL,aux8201_BOOL],aux8202_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux8203_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux8204_BOOL);
constraint int_lin_eq([-1,1,1],[aux8205,4,s_00012],0);
constraint int_lt_reif(s_00010,aux8205,aux8206_BOOL);
constraint int_le_reif(s_00012, s_00010,aux8207_BOOL);
constraint array_bool_and([aux8203_BOOL,aux8204_BOOL,w_00004_00012_BOOL,aux8206_BOOL,aux8207_BOOL],aux8208_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux8209_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux8210_BOOL);
constraint int_lin_eq([-1,1,1],[aux8211,3,s_00013],0);
constraint int_lt_reif(s_00010,aux8211,aux8212_BOOL);
constraint int_le_reif(s_00013, s_00010,aux8213_BOOL);
constraint array_bool_and([aux8209_BOOL,aux8210_BOOL,w_00004_00013_BOOL,aux8212_BOOL,aux8213_BOOL],aux8214_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux8215_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux8216_BOOL);
constraint int_lin_eq([-1,1,1],[aux8217,2,s_00014],0);
constraint int_lt_reif(s_00010,aux8217,aux8218_BOOL);
constraint int_le_reif(s_00014, s_00010,aux8219_BOOL);
constraint array_bool_and([aux8215_BOOL,aux8216_BOOL,w_00004_00014_BOOL,aux8218_BOOL,aux8219_BOOL],aux8220_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux8221_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux8222_BOOL);
constraint int_lin_eq([-1,1,1],[aux8223,1,s_00015],0);
constraint int_lt_reif(s_00010,aux8223,aux8224_BOOL);
constraint int_le_reif(s_00015, s_00010,aux8225_BOOL);
constraint array_bool_and([aux8221_BOOL,aux8222_BOOL,w_00004_00015_BOOL,aux8224_BOOL,aux8225_BOOL],aux8226_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux8227_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux8228_BOOL);
constraint int_lin_eq([-1,1,1],[aux8229,3,s_00016],0);
constraint int_lt_reif(s_00010,aux8229,aux8230_BOOL);
constraint int_le_reif(s_00016, s_00010,aux8231_BOOL);
constraint array_bool_and([aux8227_BOOL,aux8228_BOOL,w_00004_00016_BOOL,aux8230_BOOL,aux8231_BOOL],aux8232_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux8233_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux8234_BOOL);
constraint int_lin_eq([-1,1,1],[aux8235,4,s_00017],0);
constraint int_lt_reif(s_00010,aux8235,aux8236_BOOL);
constraint int_le_reif(s_00017, s_00010,aux8237_BOOL);
constraint array_bool_and([aux8233_BOOL,aux8234_BOOL,w_00004_00017_BOOL,aux8236_BOOL,aux8237_BOOL],aux8238_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux8239_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux8240_BOOL);
constraint int_lin_eq([-1,1,1],[aux8241,1,s_00018],0);
constraint int_lt_reif(s_00010,aux8241,aux8242_BOOL);
constraint int_le_reif(s_00018, s_00010,aux8243_BOOL);
constraint array_bool_and([aux8239_BOOL,aux8240_BOOL,w_00004_00018_BOOL,aux8242_BOOL,aux8243_BOOL],aux8244_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux8245_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux8246_BOOL);
constraint int_lin_eq([-1,1,1],[aux8247,4,s_00019],0);
constraint int_lt_reif(s_00010,aux8247,aux8248_BOOL);
constraint int_le_reif(s_00019, s_00010,aux8249_BOOL);
constraint array_bool_and([aux8245_BOOL,aux8246_BOOL,w_00004_00019_BOOL,aux8248_BOOL,aux8249_BOOL],aux8250_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux8251_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux8252_BOOL);
constraint int_lin_eq([-1,1,1],[aux8253,2,s_00020],0);
constraint int_lt_reif(s_00010,aux8253,aux8254_BOOL);
constraint int_le_reif(s_00020, s_00010,aux8255_BOOL);
constraint array_bool_and([aux8251_BOOL,aux8252_BOOL,w_00004_00020_BOOL,aux8254_BOOL,aux8255_BOOL],aux8256_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux8257_BOOL);
constraint int_lin_eq([-1,1,1],[aux8258,5,s_00010],0);
constraint int_lt_reif(s_00010,aux8258,aux8259_BOOL);
constraint array_bool_and([aux8257_BOOL,w_00004_00010_BOOL,aux8259_BOOL],aux8260_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux8261_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux8262_BOOL);
constraint int_lin_eq([-1,1,1],[aux8263,4,s_00001],0);
constraint int_lt_reif(s_00010,aux8263,aux8264_BOOL);
constraint int_le_reif(s_00001, s_00010,aux8265_BOOL);
constraint array_bool_and([aux8261_BOOL,aux8262_BOOL,w_00004_00001_BOOL,aux8264_BOOL,aux8265_BOOL],aux8266_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux8267_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux8268_BOOL);
constraint int_lin_eq([-1,1,1],[aux8269,4,s_00002],0);
constraint int_lt_reif(s_00010,aux8269,aux8270_BOOL);
constraint int_le_reif(s_00002, s_00010,aux8271_BOOL);
constraint array_bool_and([aux8267_BOOL,aux8268_BOOL,w_00004_00002_BOOL,aux8270_BOOL,aux8271_BOOL],aux8272_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux8273_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux8274_BOOL);
constraint int_lin_eq([-1,1,1],[aux8275,3,s_00003],0);
constraint int_lt_reif(s_00010,aux8275,aux8276_BOOL);
constraint int_le_reif(s_00003, s_00010,aux8277_BOOL);
constraint array_bool_and([aux8273_BOOL,aux8274_BOOL,w_00004_00003_BOOL,aux8276_BOOL,aux8277_BOOL],aux8278_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux8279_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux8280_BOOL);
constraint int_lin_eq([-1,1,1],[aux8281,2,s_00004],0);
constraint int_lt_reif(s_00010,aux8281,aux8282_BOOL);
constraint int_le_reif(s_00004, s_00010,aux8283_BOOL);
constraint array_bool_and([aux8279_BOOL,aux8280_BOOL,w_00004_00004_BOOL,aux8282_BOOL,aux8283_BOOL],aux8284_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux8285_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux8286_BOOL);
constraint int_lin_eq([-1,1,1],[aux8287,3,s_00005],0);
constraint int_lt_reif(s_00010,aux8287,aux8288_BOOL);
constraint int_le_reif(s_00005, s_00010,aux8289_BOOL);
constraint array_bool_and([aux8285_BOOL,aux8286_BOOL,w_00004_00005_BOOL,aux8288_BOOL,aux8289_BOOL],aux8290_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux8291_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux8292_BOOL);
constraint int_lin_eq([-1,1,1],[aux8293,2,s_00006],0);
constraint int_lt_reif(s_00010,aux8293,aux8294_BOOL);
constraint int_le_reif(s_00006, s_00010,aux8295_BOOL);
constraint array_bool_and([aux8291_BOOL,aux8292_BOOL,w_00004_00006_BOOL,aux8294_BOOL,aux8295_BOOL],aux8296_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux8297_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux8298_BOOL);
constraint int_lin_eq([-1,1,1],[aux8299,3,s_00007],0);
constraint int_lt_reif(s_00010,aux8299,aux8300_BOOL);
constraint int_le_reif(s_00007, s_00010,aux8301_BOOL);
constraint array_bool_and([aux8297_BOOL,aux8298_BOOL,w_00004_00007_BOOL,aux8300_BOOL,aux8301_BOOL],aux8302_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux8303_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux8304_BOOL);
constraint int_lin_eq([-1,1,1],[aux8305,2,s_00008],0);
constraint int_lt_reif(s_00010,aux8305,aux8306_BOOL);
constraint int_le_reif(s_00008, s_00010,aux8307_BOOL);
constraint array_bool_and([aux8303_BOOL,aux8304_BOOL,w_00004_00008_BOOL,aux8306_BOOL,aux8307_BOOL],aux8308_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux8309_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux8310_BOOL);
constraint int_lin_eq([-1,1,1],[aux8311,2,s_00009],0);
constraint int_lt_reif(s_00010,aux8311,aux8312_BOOL);
constraint int_le_reif(s_00009, s_00010,aux8313_BOOL);
constraint array_bool_and([aux8309_BOOL,aux8310_BOOL,w_00004_00009_BOOL,aux8312_BOOL,aux8313_BOOL],aux8314_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux8202_INTEGER,aux8208_INTEGER,aux8214_INTEGER,aux8220_INTEGER,aux8226_INTEGER,aux8232_INTEGER,aux8238_INTEGER,aux8244_INTEGER,aux8250_INTEGER,aux8256_INTEGER,aux8260_INTEGER,aux8266_INTEGER,aux8272_INTEGER,aux8278_INTEGER,aux8284_INTEGER,aux8290_INTEGER,aux8296_INTEGER,aux8302_INTEGER,aux8308_INTEGER,aux8314_INTEGER,1],0,aux8315_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux8316_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux8317_BOOL);
constraint int_lin_eq([-1,1,1],[aux8318,5,s_00010],0);
constraint int_lt_reif(s_00014,aux8318,aux8319_BOOL);
constraint int_le_reif(s_00010, s_00014,aux8320_BOOL);
constraint array_bool_and([aux8316_BOOL,aux8317_BOOL,w_00004_00010_BOOL,aux8319_BOOL,aux8320_BOOL],aux8321_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux8322_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux8323_BOOL);
constraint int_lin_eq([-1,1,1],[aux8324,3,s_00011],0);
constraint int_lt_reif(s_00014,aux8324,aux8325_BOOL);
constraint int_le_reif(s_00011, s_00014,aux8326_BOOL);
constraint array_bool_and([aux8322_BOOL,aux8323_BOOL,w_00004_00011_BOOL,aux8325_BOOL,aux8326_BOOL],aux8327_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux8328_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux8329_BOOL);
constraint int_lin_eq([-1,1,1],[aux8330,4,s_00012],0);
constraint int_lt_reif(s_00014,aux8330,aux8331_BOOL);
constraint int_le_reif(s_00012, s_00014,aux8332_BOOL);
constraint array_bool_and([aux8328_BOOL,aux8329_BOOL,w_00004_00012_BOOL,aux8331_BOOL,aux8332_BOOL],aux8333_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux8334_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux8335_BOOL);
constraint int_lin_eq([-1,1,1],[aux8336,3,s_00013],0);
constraint int_lt_reif(s_00014,aux8336,aux8337_BOOL);
constraint int_le_reif(s_00013, s_00014,aux8338_BOOL);
constraint array_bool_and([aux8334_BOOL,aux8335_BOOL,w_00004_00013_BOOL,aux8337_BOOL,aux8338_BOOL],aux8339_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux8340_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux8341_BOOL);
constraint int_lin_eq([-1,1,1],[aux8342,1,s_00015],0);
constraint int_lt_reif(s_00014,aux8342,aux8343_BOOL);
constraint int_le_reif(s_00015, s_00014,aux8344_BOOL);
constraint array_bool_and([aux8340_BOOL,aux8341_BOOL,w_00004_00015_BOOL,aux8343_BOOL,aux8344_BOOL],aux8345_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux8346_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux8347_BOOL);
constraint int_lin_eq([-1,1,1],[aux8348,3,s_00016],0);
constraint int_lt_reif(s_00014,aux8348,aux8349_BOOL);
constraint int_le_reif(s_00016, s_00014,aux8350_BOOL);
constraint array_bool_and([aux8346_BOOL,aux8347_BOOL,w_00004_00016_BOOL,aux8349_BOOL,aux8350_BOOL],aux8351_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux8352_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux8353_BOOL);
constraint int_lin_eq([-1,1,1],[aux8354,4,s_00017],0);
constraint int_lt_reif(s_00014,aux8354,aux8355_BOOL);
constraint int_le_reif(s_00017, s_00014,aux8356_BOOL);
constraint array_bool_and([aux8352_BOOL,aux8353_BOOL,w_00004_00017_BOOL,aux8355_BOOL,aux8356_BOOL],aux8357_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux8358_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux8359_BOOL);
constraint int_lin_eq([-1,1,1],[aux8360,1,s_00018],0);
constraint int_lt_reif(s_00014,aux8360,aux8361_BOOL);
constraint int_le_reif(s_00018, s_00014,aux8362_BOOL);
constraint array_bool_and([aux8358_BOOL,aux8359_BOOL,w_00004_00018_BOOL,aux8361_BOOL,aux8362_BOOL],aux8363_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux8364_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux8365_BOOL);
constraint int_lin_eq([-1,1,1],[aux8366,4,s_00019],0);
constraint int_lt_reif(s_00014,aux8366,aux8367_BOOL);
constraint int_le_reif(s_00019, s_00014,aux8368_BOOL);
constraint array_bool_and([aux8364_BOOL,aux8365_BOOL,w_00004_00019_BOOL,aux8367_BOOL,aux8368_BOOL],aux8369_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux8370_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux8371_BOOL);
constraint int_lin_eq([-1,1,1],[aux8372,2,s_00020],0);
constraint int_lt_reif(s_00014,aux8372,aux8373_BOOL);
constraint int_le_reif(s_00020, s_00014,aux8374_BOOL);
constraint array_bool_and([aux8370_BOOL,aux8371_BOOL,w_00004_00020_BOOL,aux8373_BOOL,aux8374_BOOL],aux8375_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux8376_BOOL);
constraint int_lin_eq([-1,1,1],[aux8377,2,s_00014],0);
constraint int_lt_reif(s_00014,aux8377,aux8378_BOOL);
constraint array_bool_and([aux8376_BOOL,w_00004_00014_BOOL,aux8378_BOOL],aux8379_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux8380_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux8381_BOOL);
constraint int_lin_eq([-1,1,1],[aux8382,4,s_00001],0);
constraint int_lt_reif(s_00014,aux8382,aux8383_BOOL);
constraint int_le_reif(s_00001, s_00014,aux8384_BOOL);
constraint array_bool_and([aux8380_BOOL,aux8381_BOOL,w_00004_00001_BOOL,aux8383_BOOL,aux8384_BOOL],aux8385_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux8386_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux8387_BOOL);
constraint int_lin_eq([-1,1,1],[aux8388,4,s_00002],0);
constraint int_lt_reif(s_00014,aux8388,aux8389_BOOL);
constraint int_le_reif(s_00002, s_00014,aux8390_BOOL);
constraint array_bool_and([aux8386_BOOL,aux8387_BOOL,w_00004_00002_BOOL,aux8389_BOOL,aux8390_BOOL],aux8391_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux8392_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux8393_BOOL);
constraint int_lin_eq([-1,1,1],[aux8394,3,s_00003],0);
constraint int_lt_reif(s_00014,aux8394,aux8395_BOOL);
constraint int_le_reif(s_00003, s_00014,aux8396_BOOL);
constraint array_bool_and([aux8392_BOOL,aux8393_BOOL,w_00004_00003_BOOL,aux8395_BOOL,aux8396_BOOL],aux8397_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux8398_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux8399_BOOL);
constraint int_lin_eq([-1,1,1],[aux8400,2,s_00004],0);
constraint int_lt_reif(s_00014,aux8400,aux8401_BOOL);
constraint int_le_reif(s_00004, s_00014,aux8402_BOOL);
constraint array_bool_and([aux8398_BOOL,aux8399_BOOL,w_00004_00004_BOOL,aux8401_BOOL,aux8402_BOOL],aux8403_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux8404_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux8405_BOOL);
constraint int_lin_eq([-1,1,1],[aux8406,3,s_00005],0);
constraint int_lt_reif(s_00014,aux8406,aux8407_BOOL);
constraint int_le_reif(s_00005, s_00014,aux8408_BOOL);
constraint array_bool_and([aux8404_BOOL,aux8405_BOOL,w_00004_00005_BOOL,aux8407_BOOL,aux8408_BOOL],aux8409_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux8410_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux8411_BOOL);
constraint int_lin_eq([-1,1,1],[aux8412,2,s_00006],0);
constraint int_lt_reif(s_00014,aux8412,aux8413_BOOL);
constraint int_le_reif(s_00006, s_00014,aux8414_BOOL);
constraint array_bool_and([aux8410_BOOL,aux8411_BOOL,w_00004_00006_BOOL,aux8413_BOOL,aux8414_BOOL],aux8415_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux8416_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux8417_BOOL);
constraint int_lin_eq([-1,1,1],[aux8418,3,s_00007],0);
constraint int_lt_reif(s_00014,aux8418,aux8419_BOOL);
constraint int_le_reif(s_00007, s_00014,aux8420_BOOL);
constraint array_bool_and([aux8416_BOOL,aux8417_BOOL,w_00004_00007_BOOL,aux8419_BOOL,aux8420_BOOL],aux8421_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux8422_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux8423_BOOL);
constraint int_lin_eq([-1,1,1],[aux8424,2,s_00008],0);
constraint int_lt_reif(s_00014,aux8424,aux8425_BOOL);
constraint int_le_reif(s_00008, s_00014,aux8426_BOOL);
constraint array_bool_and([aux8422_BOOL,aux8423_BOOL,w_00004_00008_BOOL,aux8425_BOOL,aux8426_BOOL],aux8427_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux8428_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux8429_BOOL);
constraint int_lin_eq([-1,1,1],[aux8430,2,s_00009],0);
constraint int_lt_reif(s_00014,aux8430,aux8431_BOOL);
constraint int_le_reif(s_00009, s_00014,aux8432_BOOL);
constraint array_bool_and([aux8428_BOOL,aux8429_BOOL,w_00004_00009_BOOL,aux8431_BOOL,aux8432_BOOL],aux8433_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux8321_INTEGER,aux8327_INTEGER,aux8333_INTEGER,aux8339_INTEGER,aux8345_INTEGER,aux8351_INTEGER,aux8357_INTEGER,aux8363_INTEGER,aux8369_INTEGER,aux8375_INTEGER,aux8379_INTEGER,aux8385_INTEGER,aux8391_INTEGER,aux8397_INTEGER,aux8403_INTEGER,aux8409_INTEGER,aux8415_INTEGER,aux8421_INTEGER,aux8427_INTEGER,aux8433_INTEGER,1],0,aux8434_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux8435_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux8436_BOOL);
constraint int_lin_eq([-1,1,1],[aux8437,5,s_00010],0);
constraint int_lt_reif(s_00011,aux8437,aux8438_BOOL);
constraint int_le_reif(s_00010, s_00011,aux8439_BOOL);
constraint array_bool_and([aux8435_BOOL,aux8436_BOOL,w_00004_00010_BOOL,aux8438_BOOL,aux8439_BOOL],aux8440_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux8441_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux8442_BOOL);
constraint int_lin_eq([-1,1,1],[aux8443,4,s_00012],0);
constraint int_lt_reif(s_00011,aux8443,aux8444_BOOL);
constraint int_le_reif(s_00012, s_00011,aux8445_BOOL);
constraint array_bool_and([aux8441_BOOL,aux8442_BOOL,w_00004_00012_BOOL,aux8444_BOOL,aux8445_BOOL],aux8446_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux8447_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux8448_BOOL);
constraint int_lin_eq([-1,1,1],[aux8449,3,s_00013],0);
constraint int_lt_reif(s_00011,aux8449,aux8450_BOOL);
constraint int_le_reif(s_00013, s_00011,aux8451_BOOL);
constraint array_bool_and([aux8447_BOOL,aux8448_BOOL,w_00004_00013_BOOL,aux8450_BOOL,aux8451_BOOL],aux8452_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux8453_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux8454_BOOL);
constraint int_lin_eq([-1,1,1],[aux8455,2,s_00014],0);
constraint int_lt_reif(s_00011,aux8455,aux8456_BOOL);
constraint int_le_reif(s_00014, s_00011,aux8457_BOOL);
constraint array_bool_and([aux8453_BOOL,aux8454_BOOL,w_00004_00014_BOOL,aux8456_BOOL,aux8457_BOOL],aux8458_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux8459_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux8460_BOOL);
constraint int_lin_eq([-1,1,1],[aux8461,1,s_00015],0);
constraint int_lt_reif(s_00011,aux8461,aux8462_BOOL);
constraint int_le_reif(s_00015, s_00011,aux8463_BOOL);
constraint array_bool_and([aux8459_BOOL,aux8460_BOOL,w_00004_00015_BOOL,aux8462_BOOL,aux8463_BOOL],aux8464_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux8465_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux8466_BOOL);
constraint int_lin_eq([-1,1,1],[aux8467,3,s_00016],0);
constraint int_lt_reif(s_00011,aux8467,aux8468_BOOL);
constraint int_le_reif(s_00016, s_00011,aux8469_BOOL);
constraint array_bool_and([aux8465_BOOL,aux8466_BOOL,w_00004_00016_BOOL,aux8468_BOOL,aux8469_BOOL],aux8470_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux8471_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux8472_BOOL);
constraint int_lin_eq([-1,1,1],[aux8473,4,s_00017],0);
constraint int_lt_reif(s_00011,aux8473,aux8474_BOOL);
constraint int_le_reif(s_00017, s_00011,aux8475_BOOL);
constraint array_bool_and([aux8471_BOOL,aux8472_BOOL,w_00004_00017_BOOL,aux8474_BOOL,aux8475_BOOL],aux8476_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux8477_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux8478_BOOL);
constraint int_lin_eq([-1,1,1],[aux8479,1,s_00018],0);
constraint int_lt_reif(s_00011,aux8479,aux8480_BOOL);
constraint int_le_reif(s_00018, s_00011,aux8481_BOOL);
constraint array_bool_and([aux8477_BOOL,aux8478_BOOL,w_00004_00018_BOOL,aux8480_BOOL,aux8481_BOOL],aux8482_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux8483_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux8484_BOOL);
constraint int_lin_eq([-1,1,1],[aux8485,4,s_00019],0);
constraint int_lt_reif(s_00011,aux8485,aux8486_BOOL);
constraint int_le_reif(s_00019, s_00011,aux8487_BOOL);
constraint array_bool_and([aux8483_BOOL,aux8484_BOOL,w_00004_00019_BOOL,aux8486_BOOL,aux8487_BOOL],aux8488_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux8489_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux8490_BOOL);
constraint int_lin_eq([-1,1,1],[aux8491,2,s_00020],0);
constraint int_lt_reif(s_00011,aux8491,aux8492_BOOL);
constraint int_le_reif(s_00020, s_00011,aux8493_BOOL);
constraint array_bool_and([aux8489_BOOL,aux8490_BOOL,w_00004_00020_BOOL,aux8492_BOOL,aux8493_BOOL],aux8494_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux8495_BOOL);
constraint int_lin_eq([-1,1,1],[aux8496,3,s_00011],0);
constraint int_lt_reif(s_00011,aux8496,aux8497_BOOL);
constraint array_bool_and([aux8495_BOOL,w_00004_00011_BOOL,aux8497_BOOL],aux8498_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux8499_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux8500_BOOL);
constraint int_lin_eq([-1,1,1],[aux8501,4,s_00001],0);
constraint int_lt_reif(s_00011,aux8501,aux8502_BOOL);
constraint int_le_reif(s_00001, s_00011,aux8503_BOOL);
constraint array_bool_and([aux8499_BOOL,aux8500_BOOL,w_00004_00001_BOOL,aux8502_BOOL,aux8503_BOOL],aux8504_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux8505_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux8506_BOOL);
constraint int_lin_eq([-1,1,1],[aux8507,4,s_00002],0);
constraint int_lt_reif(s_00011,aux8507,aux8508_BOOL);
constraint int_le_reif(s_00002, s_00011,aux8509_BOOL);
constraint array_bool_and([aux8505_BOOL,aux8506_BOOL,w_00004_00002_BOOL,aux8508_BOOL,aux8509_BOOL],aux8510_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux8511_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux8512_BOOL);
constraint int_lin_eq([-1,1,1],[aux8513,3,s_00003],0);
constraint int_lt_reif(s_00011,aux8513,aux8514_BOOL);
constraint int_le_reif(s_00003, s_00011,aux8515_BOOL);
constraint array_bool_and([aux8511_BOOL,aux8512_BOOL,w_00004_00003_BOOL,aux8514_BOOL,aux8515_BOOL],aux8516_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux8517_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux8518_BOOL);
constraint int_lin_eq([-1,1,1],[aux8519,2,s_00004],0);
constraint int_lt_reif(s_00011,aux8519,aux8520_BOOL);
constraint int_le_reif(s_00004, s_00011,aux8521_BOOL);
constraint array_bool_and([aux8517_BOOL,aux8518_BOOL,w_00004_00004_BOOL,aux8520_BOOL,aux8521_BOOL],aux8522_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux8523_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux8524_BOOL);
constraint int_lin_eq([-1,1,1],[aux8525,3,s_00005],0);
constraint int_lt_reif(s_00011,aux8525,aux8526_BOOL);
constraint int_le_reif(s_00005, s_00011,aux8527_BOOL);
constraint array_bool_and([aux8523_BOOL,aux8524_BOOL,w_00004_00005_BOOL,aux8526_BOOL,aux8527_BOOL],aux8528_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux8529_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux8530_BOOL);
constraint int_lin_eq([-1,1,1],[aux8531,2,s_00006],0);
constraint int_lt_reif(s_00011,aux8531,aux8532_BOOL);
constraint int_le_reif(s_00006, s_00011,aux8533_BOOL);
constraint array_bool_and([aux8529_BOOL,aux8530_BOOL,w_00004_00006_BOOL,aux8532_BOOL,aux8533_BOOL],aux8534_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux8535_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux8536_BOOL);
constraint int_lin_eq([-1,1,1],[aux8537,3,s_00007],0);
constraint int_lt_reif(s_00011,aux8537,aux8538_BOOL);
constraint int_le_reif(s_00007, s_00011,aux8539_BOOL);
constraint array_bool_and([aux8535_BOOL,aux8536_BOOL,w_00004_00007_BOOL,aux8538_BOOL,aux8539_BOOL],aux8540_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux8541_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux8542_BOOL);
constraint int_lin_eq([-1,1,1],[aux8543,2,s_00008],0);
constraint int_lt_reif(s_00011,aux8543,aux8544_BOOL);
constraint int_le_reif(s_00008, s_00011,aux8545_BOOL);
constraint array_bool_and([aux8541_BOOL,aux8542_BOOL,w_00004_00008_BOOL,aux8544_BOOL,aux8545_BOOL],aux8546_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux8547_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux8548_BOOL);
constraint int_lin_eq([-1,1,1],[aux8549,2,s_00009],0);
constraint int_lt_reif(s_00011,aux8549,aux8550_BOOL);
constraint int_le_reif(s_00009, s_00011,aux8551_BOOL);
constraint array_bool_and([aux8547_BOOL,aux8548_BOOL,w_00004_00009_BOOL,aux8550_BOOL,aux8551_BOOL],aux8552_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux8440_INTEGER,aux8446_INTEGER,aux8452_INTEGER,aux8458_INTEGER,aux8464_INTEGER,aux8470_INTEGER,aux8476_INTEGER,aux8482_INTEGER,aux8488_INTEGER,aux8494_INTEGER,aux8498_INTEGER,aux8504_INTEGER,aux8510_INTEGER,aux8516_INTEGER,aux8522_INTEGER,aux8528_INTEGER,aux8534_INTEGER,aux8540_INTEGER,aux8546_INTEGER,aux8552_INTEGER,1],0,aux8553_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux8554_BOOL);
constraint int_lin_eq([-1,1,1],[aux8555,3,s_00007],0);
constraint int_lt_reif(s_00007,aux8555,aux8556_BOOL);
constraint array_bool_and([aux8554_BOOL,w_00004_00007_BOOL,aux8556_BOOL],aux8557_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux8558_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux8559_BOOL);
constraint int_lin_eq([-1,1,1],[aux8560,4,s_00001],0);
constraint int_lt_reif(s_00007,aux8560,aux8561_BOOL);
constraint int_le_reif(s_00001, s_00007,aux8562_BOOL);
constraint array_bool_and([aux8558_BOOL,aux8559_BOOL,w_00004_00001_BOOL,aux8561_BOOL,aux8562_BOOL],aux8563_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux8564_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux8565_BOOL);
constraint int_lin_eq([-1,1,1],[aux8566,4,s_00002],0);
constraint int_lt_reif(s_00007,aux8566,aux8567_BOOL);
constraint int_le_reif(s_00002, s_00007,aux8568_BOOL);
constraint array_bool_and([aux8564_BOOL,aux8565_BOOL,w_00004_00002_BOOL,aux8567_BOOL,aux8568_BOOL],aux8569_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux8570_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux8571_BOOL);
constraint int_lin_eq([-1,1,1],[aux8572,3,s_00003],0);
constraint int_lt_reif(s_00007,aux8572,aux8573_BOOL);
constraint int_le_reif(s_00003, s_00007,aux8574_BOOL);
constraint array_bool_and([aux8570_BOOL,aux8571_BOOL,w_00004_00003_BOOL,aux8573_BOOL,aux8574_BOOL],aux8575_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux8576_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux8577_BOOL);
constraint int_lin_eq([-1,1,1],[aux8578,2,s_00004],0);
constraint int_lt_reif(s_00007,aux8578,aux8579_BOOL);
constraint int_le_reif(s_00004, s_00007,aux8580_BOOL);
constraint array_bool_and([aux8576_BOOL,aux8577_BOOL,w_00004_00004_BOOL,aux8579_BOOL,aux8580_BOOL],aux8581_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux8582_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux8583_BOOL);
constraint int_lin_eq([-1,1,1],[aux8584,3,s_00005],0);
constraint int_lt_reif(s_00007,aux8584,aux8585_BOOL);
constraint int_le_reif(s_00005, s_00007,aux8586_BOOL);
constraint array_bool_and([aux8582_BOOL,aux8583_BOOL,w_00004_00005_BOOL,aux8585_BOOL,aux8586_BOOL],aux8587_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux8588_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux8589_BOOL);
constraint int_lin_eq([-1,1,1],[aux8590,2,s_00006],0);
constraint int_lt_reif(s_00007,aux8590,aux8591_BOOL);
constraint int_le_reif(s_00006, s_00007,aux8592_BOOL);
constraint array_bool_and([aux8588_BOOL,aux8589_BOOL,w_00004_00006_BOOL,aux8591_BOOL,aux8592_BOOL],aux8593_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux8594_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux8595_BOOL);
constraint int_lin_eq([-1,1,1],[aux8596,2,s_00008],0);
constraint int_lt_reif(s_00007,aux8596,aux8597_BOOL);
constraint int_le_reif(s_00008, s_00007,aux8598_BOOL);
constraint array_bool_and([aux8594_BOOL,aux8595_BOOL,w_00004_00008_BOOL,aux8597_BOOL,aux8598_BOOL],aux8599_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux8600_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux8601_BOOL);
constraint int_lin_eq([-1,1,1],[aux8602,2,s_00009],0);
constraint int_lt_reif(s_00007,aux8602,aux8603_BOOL);
constraint int_le_reif(s_00009, s_00007,aux8604_BOOL);
constraint array_bool_and([aux8600_BOOL,aux8601_BOOL,w_00004_00009_BOOL,aux8603_BOOL,aux8604_BOOL],aux8605_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux8606_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux8607_BOOL);
constraint int_lin_eq([-1,1,1],[aux8608,5,s_00010],0);
constraint int_lt_reif(s_00007,aux8608,aux8609_BOOL);
constraint int_le_reif(s_00010, s_00007,aux8610_BOOL);
constraint array_bool_and([aux8606_BOOL,aux8607_BOOL,w_00004_00010_BOOL,aux8609_BOOL,aux8610_BOOL],aux8611_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux8612_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux8613_BOOL);
constraint int_lin_eq([-1,1,1],[aux8614,3,s_00011],0);
constraint int_lt_reif(s_00007,aux8614,aux8615_BOOL);
constraint int_le_reif(s_00011, s_00007,aux8616_BOOL);
constraint array_bool_and([aux8612_BOOL,aux8613_BOOL,w_00004_00011_BOOL,aux8615_BOOL,aux8616_BOOL],aux8617_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux8618_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux8619_BOOL);
constraint int_lin_eq([-1,1,1],[aux8620,4,s_00012],0);
constraint int_lt_reif(s_00007,aux8620,aux8621_BOOL);
constraint int_le_reif(s_00012, s_00007,aux8622_BOOL);
constraint array_bool_and([aux8618_BOOL,aux8619_BOOL,w_00004_00012_BOOL,aux8621_BOOL,aux8622_BOOL],aux8623_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux8624_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux8625_BOOL);
constraint int_lin_eq([-1,1,1],[aux8626,3,s_00013],0);
constraint int_lt_reif(s_00007,aux8626,aux8627_BOOL);
constraint int_le_reif(s_00013, s_00007,aux8628_BOOL);
constraint array_bool_and([aux8624_BOOL,aux8625_BOOL,w_00004_00013_BOOL,aux8627_BOOL,aux8628_BOOL],aux8629_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux8630_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux8631_BOOL);
constraint int_lin_eq([-1,1,1],[aux8632,2,s_00014],0);
constraint int_lt_reif(s_00007,aux8632,aux8633_BOOL);
constraint int_le_reif(s_00014, s_00007,aux8634_BOOL);
constraint array_bool_and([aux8630_BOOL,aux8631_BOOL,w_00004_00014_BOOL,aux8633_BOOL,aux8634_BOOL],aux8635_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux8636_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux8637_BOOL);
constraint int_lin_eq([-1,1,1],[aux8638,1,s_00015],0);
constraint int_lt_reif(s_00007,aux8638,aux8639_BOOL);
constraint int_le_reif(s_00015, s_00007,aux8640_BOOL);
constraint array_bool_and([aux8636_BOOL,aux8637_BOOL,w_00004_00015_BOOL,aux8639_BOOL,aux8640_BOOL],aux8641_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux8642_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux8643_BOOL);
constraint int_lin_eq([-1,1,1],[aux8644,3,s_00016],0);
constraint int_lt_reif(s_00007,aux8644,aux8645_BOOL);
constraint int_le_reif(s_00016, s_00007,aux8646_BOOL);
constraint array_bool_and([aux8642_BOOL,aux8643_BOOL,w_00004_00016_BOOL,aux8645_BOOL,aux8646_BOOL],aux8647_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux8648_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux8649_BOOL);
constraint int_lin_eq([-1,1,1],[aux8650,4,s_00017],0);
constraint int_lt_reif(s_00007,aux8650,aux8651_BOOL);
constraint int_le_reif(s_00017, s_00007,aux8652_BOOL);
constraint array_bool_and([aux8648_BOOL,aux8649_BOOL,w_00004_00017_BOOL,aux8651_BOOL,aux8652_BOOL],aux8653_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux8654_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux8655_BOOL);
constraint int_lin_eq([-1,1,1],[aux8656,1,s_00018],0);
constraint int_lt_reif(s_00007,aux8656,aux8657_BOOL);
constraint int_le_reif(s_00018, s_00007,aux8658_BOOL);
constraint array_bool_and([aux8654_BOOL,aux8655_BOOL,w_00004_00018_BOOL,aux8657_BOOL,aux8658_BOOL],aux8659_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux8660_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux8661_BOOL);
constraint int_lin_eq([-1,1,1],[aux8662,4,s_00019],0);
constraint int_lt_reif(s_00007,aux8662,aux8663_BOOL);
constraint int_le_reif(s_00019, s_00007,aux8664_BOOL);
constraint array_bool_and([aux8660_BOOL,aux8661_BOOL,w_00004_00019_BOOL,aux8663_BOOL,aux8664_BOOL],aux8665_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux8666_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux8667_BOOL);
constraint int_lin_eq([-1,1,1],[aux8668,2,s_00020],0);
constraint int_lt_reif(s_00007,aux8668,aux8669_BOOL);
constraint int_le_reif(s_00020, s_00007,aux8670_BOOL);
constraint array_bool_and([aux8666_BOOL,aux8667_BOOL,w_00004_00020_BOOL,aux8669_BOOL,aux8670_BOOL],aux8671_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux8557_INTEGER,aux8563_INTEGER,aux8569_INTEGER,aux8575_INTEGER,aux8581_INTEGER,aux8587_INTEGER,aux8593_INTEGER,aux8599_INTEGER,aux8605_INTEGER,aux8611_INTEGER,aux8617_INTEGER,aux8623_INTEGER,aux8629_INTEGER,aux8635_INTEGER,aux8641_INTEGER,aux8647_INTEGER,aux8653_INTEGER,aux8659_INTEGER,aux8665_INTEGER,aux8671_INTEGER,1],0,aux8672_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux8673_BOOL);
constraint int_lin_eq([-1,1,1],[aux8674,2,s_00008],0);
constraint int_lt_reif(s_00008,aux8674,aux8675_BOOL);
constraint array_bool_and([aux8673_BOOL,w_00004_00008_BOOL,aux8675_BOOL],aux8676_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux8677_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux8678_BOOL);
constraint int_lin_eq([-1,1,1],[aux8679,4,s_00001],0);
constraint int_lt_reif(s_00008,aux8679,aux8680_BOOL);
constraint int_le_reif(s_00001, s_00008,aux8681_BOOL);
constraint array_bool_and([aux8677_BOOL,aux8678_BOOL,w_00004_00001_BOOL,aux8680_BOOL,aux8681_BOOL],aux8682_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux8683_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux8684_BOOL);
constraint int_lin_eq([-1,1,1],[aux8685,4,s_00002],0);
constraint int_lt_reif(s_00008,aux8685,aux8686_BOOL);
constraint int_le_reif(s_00002, s_00008,aux8687_BOOL);
constraint array_bool_and([aux8683_BOOL,aux8684_BOOL,w_00004_00002_BOOL,aux8686_BOOL,aux8687_BOOL],aux8688_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux8689_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux8690_BOOL);
constraint int_lin_eq([-1,1,1],[aux8691,3,s_00003],0);
constraint int_lt_reif(s_00008,aux8691,aux8692_BOOL);
constraint int_le_reif(s_00003, s_00008,aux8693_BOOL);
constraint array_bool_and([aux8689_BOOL,aux8690_BOOL,w_00004_00003_BOOL,aux8692_BOOL,aux8693_BOOL],aux8694_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux8695_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux8696_BOOL);
constraint int_lin_eq([-1,1,1],[aux8697,2,s_00004],0);
constraint int_lt_reif(s_00008,aux8697,aux8698_BOOL);
constraint int_le_reif(s_00004, s_00008,aux8699_BOOL);
constraint array_bool_and([aux8695_BOOL,aux8696_BOOL,w_00004_00004_BOOL,aux8698_BOOL,aux8699_BOOL],aux8700_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux8701_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux8702_BOOL);
constraint int_lin_eq([-1,1,1],[aux8703,3,s_00005],0);
constraint int_lt_reif(s_00008,aux8703,aux8704_BOOL);
constraint int_le_reif(s_00005, s_00008,aux8705_BOOL);
constraint array_bool_and([aux8701_BOOL,aux8702_BOOL,w_00004_00005_BOOL,aux8704_BOOL,aux8705_BOOL],aux8706_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux8707_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux8708_BOOL);
constraint int_lin_eq([-1,1,1],[aux8709,2,s_00006],0);
constraint int_lt_reif(s_00008,aux8709,aux8710_BOOL);
constraint int_le_reif(s_00006, s_00008,aux8711_BOOL);
constraint array_bool_and([aux8707_BOOL,aux8708_BOOL,w_00004_00006_BOOL,aux8710_BOOL,aux8711_BOOL],aux8712_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux8713_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux8714_BOOL);
constraint int_lin_eq([-1,1,1],[aux8715,3,s_00007],0);
constraint int_lt_reif(s_00008,aux8715,aux8716_BOOL);
constraint int_le_reif(s_00007, s_00008,aux8717_BOOL);
constraint array_bool_and([aux8713_BOOL,aux8714_BOOL,w_00004_00007_BOOL,aux8716_BOOL,aux8717_BOOL],aux8718_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux8719_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux8720_BOOL);
constraint int_lin_eq([-1,1,1],[aux8721,2,s_00009],0);
constraint int_lt_reif(s_00008,aux8721,aux8722_BOOL);
constraint int_le_reif(s_00009, s_00008,aux8723_BOOL);
constraint array_bool_and([aux8719_BOOL,aux8720_BOOL,w_00004_00009_BOOL,aux8722_BOOL,aux8723_BOOL],aux8724_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux8725_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux8726_BOOL);
constraint int_lin_eq([-1,1,1],[aux8727,5,s_00010],0);
constraint int_lt_reif(s_00008,aux8727,aux8728_BOOL);
constraint int_le_reif(s_00010, s_00008,aux8729_BOOL);
constraint array_bool_and([aux8725_BOOL,aux8726_BOOL,w_00004_00010_BOOL,aux8728_BOOL,aux8729_BOOL],aux8730_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux8731_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux8732_BOOL);
constraint int_lin_eq([-1,1,1],[aux8733,3,s_00011],0);
constraint int_lt_reif(s_00008,aux8733,aux8734_BOOL);
constraint int_le_reif(s_00011, s_00008,aux8735_BOOL);
constraint array_bool_and([aux8731_BOOL,aux8732_BOOL,w_00004_00011_BOOL,aux8734_BOOL,aux8735_BOOL],aux8736_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux8737_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux8738_BOOL);
constraint int_lin_eq([-1,1,1],[aux8739,4,s_00012],0);
constraint int_lt_reif(s_00008,aux8739,aux8740_BOOL);
constraint int_le_reif(s_00012, s_00008,aux8741_BOOL);
constraint array_bool_and([aux8737_BOOL,aux8738_BOOL,w_00004_00012_BOOL,aux8740_BOOL,aux8741_BOOL],aux8742_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux8743_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux8744_BOOL);
constraint int_lin_eq([-1,1,1],[aux8745,3,s_00013],0);
constraint int_lt_reif(s_00008,aux8745,aux8746_BOOL);
constraint int_le_reif(s_00013, s_00008,aux8747_BOOL);
constraint array_bool_and([aux8743_BOOL,aux8744_BOOL,w_00004_00013_BOOL,aux8746_BOOL,aux8747_BOOL],aux8748_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux8749_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux8750_BOOL);
constraint int_lin_eq([-1,1,1],[aux8751,2,s_00014],0);
constraint int_lt_reif(s_00008,aux8751,aux8752_BOOL);
constraint int_le_reif(s_00014, s_00008,aux8753_BOOL);
constraint array_bool_and([aux8749_BOOL,aux8750_BOOL,w_00004_00014_BOOL,aux8752_BOOL,aux8753_BOOL],aux8754_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux8755_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux8756_BOOL);
constraint int_lin_eq([-1,1,1],[aux8757,1,s_00015],0);
constraint int_lt_reif(s_00008,aux8757,aux8758_BOOL);
constraint int_le_reif(s_00015, s_00008,aux8759_BOOL);
constraint array_bool_and([aux8755_BOOL,aux8756_BOOL,w_00004_00015_BOOL,aux8758_BOOL,aux8759_BOOL],aux8760_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux8761_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux8762_BOOL);
constraint int_lin_eq([-1,1,1],[aux8763,3,s_00016],0);
constraint int_lt_reif(s_00008,aux8763,aux8764_BOOL);
constraint int_le_reif(s_00016, s_00008,aux8765_BOOL);
constraint array_bool_and([aux8761_BOOL,aux8762_BOOL,w_00004_00016_BOOL,aux8764_BOOL,aux8765_BOOL],aux8766_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux8767_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux8768_BOOL);
constraint int_lin_eq([-1,1,1],[aux8769,4,s_00017],0);
constraint int_lt_reif(s_00008,aux8769,aux8770_BOOL);
constraint int_le_reif(s_00017, s_00008,aux8771_BOOL);
constraint array_bool_and([aux8767_BOOL,aux8768_BOOL,w_00004_00017_BOOL,aux8770_BOOL,aux8771_BOOL],aux8772_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux8773_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux8774_BOOL);
constraint int_lin_eq([-1,1,1],[aux8775,1,s_00018],0);
constraint int_lt_reif(s_00008,aux8775,aux8776_BOOL);
constraint int_le_reif(s_00018, s_00008,aux8777_BOOL);
constraint array_bool_and([aux8773_BOOL,aux8774_BOOL,w_00004_00018_BOOL,aux8776_BOOL,aux8777_BOOL],aux8778_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux8779_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux8780_BOOL);
constraint int_lin_eq([-1,1,1],[aux8781,4,s_00019],0);
constraint int_lt_reif(s_00008,aux8781,aux8782_BOOL);
constraint int_le_reif(s_00019, s_00008,aux8783_BOOL);
constraint array_bool_and([aux8779_BOOL,aux8780_BOOL,w_00004_00019_BOOL,aux8782_BOOL,aux8783_BOOL],aux8784_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux8785_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux8786_BOOL);
constraint int_lin_eq([-1,1,1],[aux8787,2,s_00020],0);
constraint int_lt_reif(s_00008,aux8787,aux8788_BOOL);
constraint int_le_reif(s_00020, s_00008,aux8789_BOOL);
constraint array_bool_and([aux8785_BOOL,aux8786_BOOL,w_00004_00020_BOOL,aux8788_BOOL,aux8789_BOOL],aux8790_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux8676_INTEGER,aux8682_INTEGER,aux8688_INTEGER,aux8694_INTEGER,aux8700_INTEGER,aux8706_INTEGER,aux8712_INTEGER,aux8718_INTEGER,aux8724_INTEGER,aux8730_INTEGER,aux8736_INTEGER,aux8742_INTEGER,aux8748_INTEGER,aux8754_INTEGER,aux8760_INTEGER,aux8766_INTEGER,aux8772_INTEGER,aux8778_INTEGER,aux8784_INTEGER,aux8790_INTEGER,1],0,aux8791_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux8792_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux8793_BOOL);
constraint int_lin_eq([-1,1,1],[aux8794,5,s_00010],0);
constraint int_lt_reif(s_00016,aux8794,aux8795_BOOL);
constraint int_le_reif(s_00010, s_00016,aux8796_BOOL);
constraint array_bool_and([aux8792_BOOL,aux8793_BOOL,w_00004_00010_BOOL,aux8795_BOOL,aux8796_BOOL],aux8797_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux8798_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux8799_BOOL);
constraint int_lin_eq([-1,1,1],[aux8800,3,s_00011],0);
constraint int_lt_reif(s_00016,aux8800,aux8801_BOOL);
constraint int_le_reif(s_00011, s_00016,aux8802_BOOL);
constraint array_bool_and([aux8798_BOOL,aux8799_BOOL,w_00004_00011_BOOL,aux8801_BOOL,aux8802_BOOL],aux8803_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux8804_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux8805_BOOL);
constraint int_lin_eq([-1,1,1],[aux8806,4,s_00012],0);
constraint int_lt_reif(s_00016,aux8806,aux8807_BOOL);
constraint int_le_reif(s_00012, s_00016,aux8808_BOOL);
constraint array_bool_and([aux8804_BOOL,aux8805_BOOL,w_00004_00012_BOOL,aux8807_BOOL,aux8808_BOOL],aux8809_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux8810_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux8811_BOOL);
constraint int_lin_eq([-1,1,1],[aux8812,3,s_00013],0);
constraint int_lt_reif(s_00016,aux8812,aux8813_BOOL);
constraint int_le_reif(s_00013, s_00016,aux8814_BOOL);
constraint array_bool_and([aux8810_BOOL,aux8811_BOOL,w_00004_00013_BOOL,aux8813_BOOL,aux8814_BOOL],aux8815_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux8816_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux8817_BOOL);
constraint int_lin_eq([-1,1,1],[aux8818,2,s_00014],0);
constraint int_lt_reif(s_00016,aux8818,aux8819_BOOL);
constraint int_le_reif(s_00014, s_00016,aux8820_BOOL);
constraint array_bool_and([aux8816_BOOL,aux8817_BOOL,w_00004_00014_BOOL,aux8819_BOOL,aux8820_BOOL],aux8821_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux8822_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux8823_BOOL);
constraint int_lin_eq([-1,1,1],[aux8824,1,s_00015],0);
constraint int_lt_reif(s_00016,aux8824,aux8825_BOOL);
constraint int_le_reif(s_00015, s_00016,aux8826_BOOL);
constraint array_bool_and([aux8822_BOOL,aux8823_BOOL,w_00004_00015_BOOL,aux8825_BOOL,aux8826_BOOL],aux8827_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux8828_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux8829_BOOL);
constraint int_lin_eq([-1,1,1],[aux8830,4,s_00017],0);
constraint int_lt_reif(s_00016,aux8830,aux8831_BOOL);
constraint int_le_reif(s_00017, s_00016,aux8832_BOOL);
constraint array_bool_and([aux8828_BOOL,aux8829_BOOL,w_00004_00017_BOOL,aux8831_BOOL,aux8832_BOOL],aux8833_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux8834_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux8835_BOOL);
constraint int_lin_eq([-1,1,1],[aux8836,1,s_00018],0);
constraint int_lt_reif(s_00016,aux8836,aux8837_BOOL);
constraint int_le_reif(s_00018, s_00016,aux8838_BOOL);
constraint array_bool_and([aux8834_BOOL,aux8835_BOOL,w_00004_00018_BOOL,aux8837_BOOL,aux8838_BOOL],aux8839_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux8840_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux8841_BOOL);
constraint int_lin_eq([-1,1,1],[aux8842,4,s_00019],0);
constraint int_lt_reif(s_00016,aux8842,aux8843_BOOL);
constraint int_le_reif(s_00019, s_00016,aux8844_BOOL);
constraint array_bool_and([aux8840_BOOL,aux8841_BOOL,w_00004_00019_BOOL,aux8843_BOOL,aux8844_BOOL],aux8845_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux8846_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux8847_BOOL);
constraint int_lin_eq([-1,1,1],[aux8848,2,s_00020],0);
constraint int_lt_reif(s_00016,aux8848,aux8849_BOOL);
constraint int_le_reif(s_00020, s_00016,aux8850_BOOL);
constraint array_bool_and([aux8846_BOOL,aux8847_BOOL,w_00004_00020_BOOL,aux8849_BOOL,aux8850_BOOL],aux8851_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux8852_BOOL);
constraint int_lin_eq([-1,1,1],[aux8853,3,s_00016],0);
constraint int_lt_reif(s_00016,aux8853,aux8854_BOOL);
constraint array_bool_and([aux8852_BOOL,w_00004_00016_BOOL,aux8854_BOOL],aux8855_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux8856_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux8857_BOOL);
constraint int_lin_eq([-1,1,1],[aux8858,4,s_00001],0);
constraint int_lt_reif(s_00016,aux8858,aux8859_BOOL);
constraint int_le_reif(s_00001, s_00016,aux8860_BOOL);
constraint array_bool_and([aux8856_BOOL,aux8857_BOOL,w_00004_00001_BOOL,aux8859_BOOL,aux8860_BOOL],aux8861_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux8862_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux8863_BOOL);
constraint int_lin_eq([-1,1,1],[aux8864,4,s_00002],0);
constraint int_lt_reif(s_00016,aux8864,aux8865_BOOL);
constraint int_le_reif(s_00002, s_00016,aux8866_BOOL);
constraint array_bool_and([aux8862_BOOL,aux8863_BOOL,w_00004_00002_BOOL,aux8865_BOOL,aux8866_BOOL],aux8867_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux8868_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux8869_BOOL);
constraint int_lin_eq([-1,1,1],[aux8870,3,s_00003],0);
constraint int_lt_reif(s_00016,aux8870,aux8871_BOOL);
constraint int_le_reif(s_00003, s_00016,aux8872_BOOL);
constraint array_bool_and([aux8868_BOOL,aux8869_BOOL,w_00004_00003_BOOL,aux8871_BOOL,aux8872_BOOL],aux8873_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux8874_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux8875_BOOL);
constraint int_lin_eq([-1,1,1],[aux8876,2,s_00004],0);
constraint int_lt_reif(s_00016,aux8876,aux8877_BOOL);
constraint int_le_reif(s_00004, s_00016,aux8878_BOOL);
constraint array_bool_and([aux8874_BOOL,aux8875_BOOL,w_00004_00004_BOOL,aux8877_BOOL,aux8878_BOOL],aux8879_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux8880_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux8881_BOOL);
constraint int_lin_eq([-1,1,1],[aux8882,3,s_00005],0);
constraint int_lt_reif(s_00016,aux8882,aux8883_BOOL);
constraint int_le_reif(s_00005, s_00016,aux8884_BOOL);
constraint array_bool_and([aux8880_BOOL,aux8881_BOOL,w_00004_00005_BOOL,aux8883_BOOL,aux8884_BOOL],aux8885_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux8886_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux8887_BOOL);
constraint int_lin_eq([-1,1,1],[aux8888,2,s_00006],0);
constraint int_lt_reif(s_00016,aux8888,aux8889_BOOL);
constraint int_le_reif(s_00006, s_00016,aux8890_BOOL);
constraint array_bool_and([aux8886_BOOL,aux8887_BOOL,w_00004_00006_BOOL,aux8889_BOOL,aux8890_BOOL],aux8891_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux8892_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux8893_BOOL);
constraint int_lin_eq([-1,1,1],[aux8894,3,s_00007],0);
constraint int_lt_reif(s_00016,aux8894,aux8895_BOOL);
constraint int_le_reif(s_00007, s_00016,aux8896_BOOL);
constraint array_bool_and([aux8892_BOOL,aux8893_BOOL,w_00004_00007_BOOL,aux8895_BOOL,aux8896_BOOL],aux8897_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux8898_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux8899_BOOL);
constraint int_lin_eq([-1,1,1],[aux8900,2,s_00008],0);
constraint int_lt_reif(s_00016,aux8900,aux8901_BOOL);
constraint int_le_reif(s_00008, s_00016,aux8902_BOOL);
constraint array_bool_and([aux8898_BOOL,aux8899_BOOL,w_00004_00008_BOOL,aux8901_BOOL,aux8902_BOOL],aux8903_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux8904_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux8905_BOOL);
constraint int_lin_eq([-1,1,1],[aux8906,2,s_00009],0);
constraint int_lt_reif(s_00016,aux8906,aux8907_BOOL);
constraint int_le_reif(s_00009, s_00016,aux8908_BOOL);
constraint array_bool_and([aux8904_BOOL,aux8905_BOOL,w_00004_00009_BOOL,aux8907_BOOL,aux8908_BOOL],aux8909_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux8797_INTEGER,aux8803_INTEGER,aux8809_INTEGER,aux8815_INTEGER,aux8821_INTEGER,aux8827_INTEGER,aux8833_INTEGER,aux8839_INTEGER,aux8845_INTEGER,aux8851_INTEGER,aux8855_INTEGER,aux8861_INTEGER,aux8867_INTEGER,aux8873_INTEGER,aux8879_INTEGER,aux8885_INTEGER,aux8891_INTEGER,aux8897_INTEGER,aux8903_INTEGER,aux8909_INTEGER,1],0,aux8910_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux8911_BOOL);
constraint int_lin_eq([-1,1,1],[aux8912,2,s_00009],0);
constraint int_lt_reif(s_00009,aux8912,aux8913_BOOL);
constraint array_bool_and([aux8911_BOOL,w_00004_00009_BOOL,aux8913_BOOL],aux8914_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux8915_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux8916_BOOL);
constraint int_lin_eq([-1,1,1],[aux8917,4,s_00001],0);
constraint int_lt_reif(s_00009,aux8917,aux8918_BOOL);
constraint int_le_reif(s_00001, s_00009,aux8919_BOOL);
constraint array_bool_and([aux8915_BOOL,aux8916_BOOL,w_00004_00001_BOOL,aux8918_BOOL,aux8919_BOOL],aux8920_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux8921_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux8922_BOOL);
constraint int_lin_eq([-1,1,1],[aux8923,4,s_00002],0);
constraint int_lt_reif(s_00009,aux8923,aux8924_BOOL);
constraint int_le_reif(s_00002, s_00009,aux8925_BOOL);
constraint array_bool_and([aux8921_BOOL,aux8922_BOOL,w_00004_00002_BOOL,aux8924_BOOL,aux8925_BOOL],aux8926_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux8927_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux8928_BOOL);
constraint int_lin_eq([-1,1,1],[aux8929,3,s_00003],0);
constraint int_lt_reif(s_00009,aux8929,aux8930_BOOL);
constraint int_le_reif(s_00003, s_00009,aux8931_BOOL);
constraint array_bool_and([aux8927_BOOL,aux8928_BOOL,w_00004_00003_BOOL,aux8930_BOOL,aux8931_BOOL],aux8932_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux8933_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux8934_BOOL);
constraint int_lin_eq([-1,1,1],[aux8935,2,s_00004],0);
constraint int_lt_reif(s_00009,aux8935,aux8936_BOOL);
constraint int_le_reif(s_00004, s_00009,aux8937_BOOL);
constraint array_bool_and([aux8933_BOOL,aux8934_BOOL,w_00004_00004_BOOL,aux8936_BOOL,aux8937_BOOL],aux8938_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux8939_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux8940_BOOL);
constraint int_lin_eq([-1,1,1],[aux8941,3,s_00005],0);
constraint int_lt_reif(s_00009,aux8941,aux8942_BOOL);
constraint int_le_reif(s_00005, s_00009,aux8943_BOOL);
constraint array_bool_and([aux8939_BOOL,aux8940_BOOL,w_00004_00005_BOOL,aux8942_BOOL,aux8943_BOOL],aux8944_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux8945_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux8946_BOOL);
constraint int_lin_eq([-1,1,1],[aux8947,2,s_00006],0);
constraint int_lt_reif(s_00009,aux8947,aux8948_BOOL);
constraint int_le_reif(s_00006, s_00009,aux8949_BOOL);
constraint array_bool_and([aux8945_BOOL,aux8946_BOOL,w_00004_00006_BOOL,aux8948_BOOL,aux8949_BOOL],aux8950_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux8951_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux8952_BOOL);
constraint int_lin_eq([-1,1,1],[aux8953,3,s_00007],0);
constraint int_lt_reif(s_00009,aux8953,aux8954_BOOL);
constraint int_le_reif(s_00007, s_00009,aux8955_BOOL);
constraint array_bool_and([aux8951_BOOL,aux8952_BOOL,w_00004_00007_BOOL,aux8954_BOOL,aux8955_BOOL],aux8956_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux8957_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux8958_BOOL);
constraint int_lin_eq([-1,1,1],[aux8959,2,s_00008],0);
constraint int_lt_reif(s_00009,aux8959,aux8960_BOOL);
constraint int_le_reif(s_00008, s_00009,aux8961_BOOL);
constraint array_bool_and([aux8957_BOOL,aux8958_BOOL,w_00004_00008_BOOL,aux8960_BOOL,aux8961_BOOL],aux8962_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux8963_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux8964_BOOL);
constraint int_lin_eq([-1,1,1],[aux8965,5,s_00010],0);
constraint int_lt_reif(s_00009,aux8965,aux8966_BOOL);
constraint int_le_reif(s_00010, s_00009,aux8967_BOOL);
constraint array_bool_and([aux8963_BOOL,aux8964_BOOL,w_00004_00010_BOOL,aux8966_BOOL,aux8967_BOOL],aux8968_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux8969_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux8970_BOOL);
constraint int_lin_eq([-1,1,1],[aux8971,3,s_00011],0);
constraint int_lt_reif(s_00009,aux8971,aux8972_BOOL);
constraint int_le_reif(s_00011, s_00009,aux8973_BOOL);
constraint array_bool_and([aux8969_BOOL,aux8970_BOOL,w_00004_00011_BOOL,aux8972_BOOL,aux8973_BOOL],aux8974_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux8975_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux8976_BOOL);
constraint int_lin_eq([-1,1,1],[aux8977,4,s_00012],0);
constraint int_lt_reif(s_00009,aux8977,aux8978_BOOL);
constraint int_le_reif(s_00012, s_00009,aux8979_BOOL);
constraint array_bool_and([aux8975_BOOL,aux8976_BOOL,w_00004_00012_BOOL,aux8978_BOOL,aux8979_BOOL],aux8980_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux8981_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux8982_BOOL);
constraint int_lin_eq([-1,1,1],[aux8983,3,s_00013],0);
constraint int_lt_reif(s_00009,aux8983,aux8984_BOOL);
constraint int_le_reif(s_00013, s_00009,aux8985_BOOL);
constraint array_bool_and([aux8981_BOOL,aux8982_BOOL,w_00004_00013_BOOL,aux8984_BOOL,aux8985_BOOL],aux8986_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux8987_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux8988_BOOL);
constraint int_lin_eq([-1,1,1],[aux8989,2,s_00014],0);
constraint int_lt_reif(s_00009,aux8989,aux8990_BOOL);
constraint int_le_reif(s_00014, s_00009,aux8991_BOOL);
constraint array_bool_and([aux8987_BOOL,aux8988_BOOL,w_00004_00014_BOOL,aux8990_BOOL,aux8991_BOOL],aux8992_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux8993_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux8994_BOOL);
constraint int_lin_eq([-1,1,1],[aux8995,1,s_00015],0);
constraint int_lt_reif(s_00009,aux8995,aux8996_BOOL);
constraint int_le_reif(s_00015, s_00009,aux8997_BOOL);
constraint array_bool_and([aux8993_BOOL,aux8994_BOOL,w_00004_00015_BOOL,aux8996_BOOL,aux8997_BOOL],aux8998_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux8999_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux9000_BOOL);
constraint int_lin_eq([-1,1,1],[aux9001,3,s_00016],0);
constraint int_lt_reif(s_00009,aux9001,aux9002_BOOL);
constraint int_le_reif(s_00016, s_00009,aux9003_BOOL);
constraint array_bool_and([aux8999_BOOL,aux9000_BOOL,w_00004_00016_BOOL,aux9002_BOOL,aux9003_BOOL],aux9004_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux9005_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux9006_BOOL);
constraint int_lin_eq([-1,1,1],[aux9007,4,s_00017],0);
constraint int_lt_reif(s_00009,aux9007,aux9008_BOOL);
constraint int_le_reif(s_00017, s_00009,aux9009_BOOL);
constraint array_bool_and([aux9005_BOOL,aux9006_BOOL,w_00004_00017_BOOL,aux9008_BOOL,aux9009_BOOL],aux9010_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux9011_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9012_BOOL);
constraint int_lin_eq([-1,1,1],[aux9013,1,s_00018],0);
constraint int_lt_reif(s_00009,aux9013,aux9014_BOOL);
constraint int_le_reif(s_00018, s_00009,aux9015_BOOL);
constraint array_bool_and([aux9011_BOOL,aux9012_BOOL,w_00004_00018_BOOL,aux9014_BOOL,aux9015_BOOL],aux9016_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux9017_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9018_BOOL);
constraint int_lin_eq([-1,1,1],[aux9019,4,s_00019],0);
constraint int_lt_reif(s_00009,aux9019,aux9020_BOOL);
constraint int_le_reif(s_00019, s_00009,aux9021_BOOL);
constraint array_bool_and([aux9017_BOOL,aux9018_BOOL,w_00004_00019_BOOL,aux9020_BOOL,aux9021_BOOL],aux9022_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux9023_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9024_BOOL);
constraint int_lin_eq([-1,1,1],[aux9025,2,s_00020],0);
constraint int_lt_reif(s_00009,aux9025,aux9026_BOOL);
constraint int_le_reif(s_00020, s_00009,aux9027_BOOL);
constraint array_bool_and([aux9023_BOOL,aux9024_BOOL,w_00004_00020_BOOL,aux9026_BOOL,aux9027_BOOL],aux9028_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux8914_INTEGER,aux8920_INTEGER,aux8926_INTEGER,aux8932_INTEGER,aux8938_INTEGER,aux8944_INTEGER,aux8950_INTEGER,aux8956_INTEGER,aux8962_INTEGER,aux8968_INTEGER,aux8974_INTEGER,aux8980_INTEGER,aux8986_INTEGER,aux8992_INTEGER,aux8998_INTEGER,aux9004_INTEGER,aux9010_INTEGER,aux9016_INTEGER,aux9022_INTEGER,aux9028_INTEGER,1],0,aux9029_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux9030_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux9031_BOOL);
constraint int_lin_eq([-1,1,1],[aux9032,5,s_00010],0);
constraint int_lt_reif(s_00015,aux9032,aux9033_BOOL);
constraint int_le_reif(s_00010, s_00015,aux9034_BOOL);
constraint array_bool_and([aux9030_BOOL,aux9031_BOOL,w_00004_00010_BOOL,aux9033_BOOL,aux9034_BOOL],aux9035_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux9036_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux9037_BOOL);
constraint int_lin_eq([-1,1,1],[aux9038,3,s_00011],0);
constraint int_lt_reif(s_00015,aux9038,aux9039_BOOL);
constraint int_le_reif(s_00011, s_00015,aux9040_BOOL);
constraint array_bool_and([aux9036_BOOL,aux9037_BOOL,w_00004_00011_BOOL,aux9039_BOOL,aux9040_BOOL],aux9041_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux9042_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux9043_BOOL);
constraint int_lin_eq([-1,1,1],[aux9044,4,s_00012],0);
constraint int_lt_reif(s_00015,aux9044,aux9045_BOOL);
constraint int_le_reif(s_00012, s_00015,aux9046_BOOL);
constraint array_bool_and([aux9042_BOOL,aux9043_BOOL,w_00004_00012_BOOL,aux9045_BOOL,aux9046_BOOL],aux9047_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux9048_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux9049_BOOL);
constraint int_lin_eq([-1,1,1],[aux9050,3,s_00013],0);
constraint int_lt_reif(s_00015,aux9050,aux9051_BOOL);
constraint int_le_reif(s_00013, s_00015,aux9052_BOOL);
constraint array_bool_and([aux9048_BOOL,aux9049_BOOL,w_00004_00013_BOOL,aux9051_BOOL,aux9052_BOOL],aux9053_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux9054_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux9055_BOOL);
constraint int_lin_eq([-1,1,1],[aux9056,2,s_00014],0);
constraint int_lt_reif(s_00015,aux9056,aux9057_BOOL);
constraint int_le_reif(s_00014, s_00015,aux9058_BOOL);
constraint array_bool_and([aux9054_BOOL,aux9055_BOOL,w_00004_00014_BOOL,aux9057_BOOL,aux9058_BOOL],aux9059_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux9060_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux9061_BOOL);
constraint int_lin_eq([-1,1,1],[aux9062,3,s_00016],0);
constraint int_lt_reif(s_00015,aux9062,aux9063_BOOL);
constraint int_le_reif(s_00016, s_00015,aux9064_BOOL);
constraint array_bool_and([aux9060_BOOL,aux9061_BOOL,w_00004_00016_BOOL,aux9063_BOOL,aux9064_BOOL],aux9065_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux9066_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux9067_BOOL);
constraint int_lin_eq([-1,1,1],[aux9068,4,s_00017],0);
constraint int_lt_reif(s_00015,aux9068,aux9069_BOOL);
constraint int_le_reif(s_00017, s_00015,aux9070_BOOL);
constraint array_bool_and([aux9066_BOOL,aux9067_BOOL,w_00004_00017_BOOL,aux9069_BOOL,aux9070_BOOL],aux9071_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux9072_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9073_BOOL);
constraint int_lin_eq([-1,1,1],[aux9074,1,s_00018],0);
constraint int_lt_reif(s_00015,aux9074,aux9075_BOOL);
constraint int_le_reif(s_00018, s_00015,aux9076_BOOL);
constraint array_bool_and([aux9072_BOOL,aux9073_BOOL,w_00004_00018_BOOL,aux9075_BOOL,aux9076_BOOL],aux9077_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux9078_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9079_BOOL);
constraint int_lin_eq([-1,1,1],[aux9080,4,s_00019],0);
constraint int_lt_reif(s_00015,aux9080,aux9081_BOOL);
constraint int_le_reif(s_00019, s_00015,aux9082_BOOL);
constraint array_bool_and([aux9078_BOOL,aux9079_BOOL,w_00004_00019_BOOL,aux9081_BOOL,aux9082_BOOL],aux9083_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux9084_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9085_BOOL);
constraint int_lin_eq([-1,1,1],[aux9086,2,s_00020],0);
constraint int_lt_reif(s_00015,aux9086,aux9087_BOOL);
constraint int_le_reif(s_00020, s_00015,aux9088_BOOL);
constraint array_bool_and([aux9084_BOOL,aux9085_BOOL,w_00004_00020_BOOL,aux9087_BOOL,aux9088_BOOL],aux9089_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux9090_BOOL);
constraint int_lin_eq([-1,1,1],[aux9091,1,s_00015],0);
constraint int_lt_reif(s_00015,aux9091,aux9092_BOOL);
constraint array_bool_and([aux9090_BOOL,w_00004_00015_BOOL,aux9092_BOOL],aux9093_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux9094_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux9095_BOOL);
constraint int_lin_eq([-1,1,1],[aux9096,4,s_00001],0);
constraint int_lt_reif(s_00015,aux9096,aux9097_BOOL);
constraint int_le_reif(s_00001, s_00015,aux9098_BOOL);
constraint array_bool_and([aux9094_BOOL,aux9095_BOOL,w_00004_00001_BOOL,aux9097_BOOL,aux9098_BOOL],aux9099_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux9100_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux9101_BOOL);
constraint int_lin_eq([-1,1,1],[aux9102,4,s_00002],0);
constraint int_lt_reif(s_00015,aux9102,aux9103_BOOL);
constraint int_le_reif(s_00002, s_00015,aux9104_BOOL);
constraint array_bool_and([aux9100_BOOL,aux9101_BOOL,w_00004_00002_BOOL,aux9103_BOOL,aux9104_BOOL],aux9105_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux9106_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux9107_BOOL);
constraint int_lin_eq([-1,1,1],[aux9108,3,s_00003],0);
constraint int_lt_reif(s_00015,aux9108,aux9109_BOOL);
constraint int_le_reif(s_00003, s_00015,aux9110_BOOL);
constraint array_bool_and([aux9106_BOOL,aux9107_BOOL,w_00004_00003_BOOL,aux9109_BOOL,aux9110_BOOL],aux9111_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux9112_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux9113_BOOL);
constraint int_lin_eq([-1,1,1],[aux9114,2,s_00004],0);
constraint int_lt_reif(s_00015,aux9114,aux9115_BOOL);
constraint int_le_reif(s_00004, s_00015,aux9116_BOOL);
constraint array_bool_and([aux9112_BOOL,aux9113_BOOL,w_00004_00004_BOOL,aux9115_BOOL,aux9116_BOOL],aux9117_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux9118_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux9119_BOOL);
constraint int_lin_eq([-1,1,1],[aux9120,3,s_00005],0);
constraint int_lt_reif(s_00015,aux9120,aux9121_BOOL);
constraint int_le_reif(s_00005, s_00015,aux9122_BOOL);
constraint array_bool_and([aux9118_BOOL,aux9119_BOOL,w_00004_00005_BOOL,aux9121_BOOL,aux9122_BOOL],aux9123_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9124_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux9125_BOOL);
constraint int_lin_eq([-1,1,1],[aux9126,2,s_00006],0);
constraint int_lt_reif(s_00015,aux9126,aux9127_BOOL);
constraint int_le_reif(s_00006, s_00015,aux9128_BOOL);
constraint array_bool_and([aux9124_BOOL,aux9125_BOOL,w_00004_00006_BOOL,aux9127_BOOL,aux9128_BOOL],aux9129_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux9130_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux9131_BOOL);
constraint int_lin_eq([-1,1,1],[aux9132,3,s_00007],0);
constraint int_lt_reif(s_00015,aux9132,aux9133_BOOL);
constraint int_le_reif(s_00007, s_00015,aux9134_BOOL);
constraint array_bool_and([aux9130_BOOL,aux9131_BOOL,w_00004_00007_BOOL,aux9133_BOOL,aux9134_BOOL],aux9135_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux9136_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux9137_BOOL);
constraint int_lin_eq([-1,1,1],[aux9138,2,s_00008],0);
constraint int_lt_reif(s_00015,aux9138,aux9139_BOOL);
constraint int_le_reif(s_00008, s_00015,aux9140_BOOL);
constraint array_bool_and([aux9136_BOOL,aux9137_BOOL,w_00004_00008_BOOL,aux9139_BOOL,aux9140_BOOL],aux9141_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux9142_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux9143_BOOL);
constraint int_lin_eq([-1,1,1],[aux9144,2,s_00009],0);
constraint int_lt_reif(s_00015,aux9144,aux9145_BOOL);
constraint int_le_reif(s_00009, s_00015,aux9146_BOOL);
constraint array_bool_and([aux9142_BOOL,aux9143_BOOL,w_00004_00009_BOOL,aux9145_BOOL,aux9146_BOOL],aux9147_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux9035_INTEGER,aux9041_INTEGER,aux9047_INTEGER,aux9053_INTEGER,aux9059_INTEGER,aux9065_INTEGER,aux9071_INTEGER,aux9077_INTEGER,aux9083_INTEGER,aux9089_INTEGER,aux9093_INTEGER,aux9099_INTEGER,aux9105_INTEGER,aux9111_INTEGER,aux9117_INTEGER,aux9123_INTEGER,aux9129_INTEGER,aux9135_INTEGER,aux9141_INTEGER,aux9147_INTEGER,1],0,aux9148_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux9149_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9150_BOOL);
constraint int_lin_eq([-1,1,1],[aux9151,5,s_00010],0);
constraint int_lt_reif(s_00019,aux9151,aux9152_BOOL);
constraint int_le_reif(s_00010, s_00019,aux9153_BOOL);
constraint array_bool_and([aux9149_BOOL,aux9150_BOOL,w_00004_00010_BOOL,aux9152_BOOL,aux9153_BOOL],aux9154_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux9155_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9156_BOOL);
constraint int_lin_eq([-1,1,1],[aux9157,3,s_00011],0);
constraint int_lt_reif(s_00019,aux9157,aux9158_BOOL);
constraint int_le_reif(s_00011, s_00019,aux9159_BOOL);
constraint array_bool_and([aux9155_BOOL,aux9156_BOOL,w_00004_00011_BOOL,aux9158_BOOL,aux9159_BOOL],aux9160_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux9161_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9162_BOOL);
constraint int_lin_eq([-1,1,1],[aux9163,4,s_00012],0);
constraint int_lt_reif(s_00019,aux9163,aux9164_BOOL);
constraint int_le_reif(s_00012, s_00019,aux9165_BOOL);
constraint array_bool_and([aux9161_BOOL,aux9162_BOOL,w_00004_00012_BOOL,aux9164_BOOL,aux9165_BOOL],aux9166_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux9167_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9168_BOOL);
constraint int_lin_eq([-1,1,1],[aux9169,3,s_00013],0);
constraint int_lt_reif(s_00019,aux9169,aux9170_BOOL);
constraint int_le_reif(s_00013, s_00019,aux9171_BOOL);
constraint array_bool_and([aux9167_BOOL,aux9168_BOOL,w_00004_00013_BOOL,aux9170_BOOL,aux9171_BOOL],aux9172_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux9173_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9174_BOOL);
constraint int_lin_eq([-1,1,1],[aux9175,2,s_00014],0);
constraint int_lt_reif(s_00019,aux9175,aux9176_BOOL);
constraint int_le_reif(s_00014, s_00019,aux9177_BOOL);
constraint array_bool_and([aux9173_BOOL,aux9174_BOOL,w_00004_00014_BOOL,aux9176_BOOL,aux9177_BOOL],aux9178_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux9179_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9180_BOOL);
constraint int_lin_eq([-1,1,1],[aux9181,1,s_00015],0);
constraint int_lt_reif(s_00019,aux9181,aux9182_BOOL);
constraint int_le_reif(s_00015, s_00019,aux9183_BOOL);
constraint array_bool_and([aux9179_BOOL,aux9180_BOOL,w_00004_00015_BOOL,aux9182_BOOL,aux9183_BOOL],aux9184_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux9185_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9186_BOOL);
constraint int_lin_eq([-1,1,1],[aux9187,3,s_00016],0);
constraint int_lt_reif(s_00019,aux9187,aux9188_BOOL);
constraint int_le_reif(s_00016, s_00019,aux9189_BOOL);
constraint array_bool_and([aux9185_BOOL,aux9186_BOOL,w_00004_00016_BOOL,aux9188_BOOL,aux9189_BOOL],aux9190_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux9191_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9192_BOOL);
constraint int_lin_eq([-1,1,1],[aux9193,4,s_00017],0);
constraint int_lt_reif(s_00019,aux9193,aux9194_BOOL);
constraint int_le_reif(s_00017, s_00019,aux9195_BOOL);
constraint array_bool_and([aux9191_BOOL,aux9192_BOOL,w_00004_00017_BOOL,aux9194_BOOL,aux9195_BOOL],aux9196_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9197_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9198_BOOL);
constraint int_lin_eq([-1,1,1],[aux9199,1,s_00018],0);
constraint int_lt_reif(s_00019,aux9199,aux9200_BOOL);
constraint int_le_reif(s_00018, s_00019,aux9201_BOOL);
constraint array_bool_and([aux9197_BOOL,aux9198_BOOL,w_00004_00018_BOOL,aux9200_BOOL,aux9201_BOOL],aux9202_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9203_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9204_BOOL);
constraint int_lin_eq([-1,1,1],[aux9205,2,s_00020],0);
constraint int_lt_reif(s_00019,aux9205,aux9206_BOOL);
constraint int_le_reif(s_00020, s_00019,aux9207_BOOL);
constraint array_bool_and([aux9203_BOOL,aux9204_BOOL,w_00004_00020_BOOL,aux9206_BOOL,aux9207_BOOL],aux9208_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9209_BOOL);
constraint int_lin_eq([-1,1,1],[aux9210,4,s_00019],0);
constraint int_lt_reif(s_00019,aux9210,aux9211_BOOL);
constraint array_bool_and([aux9209_BOOL,w_00004_00019_BOOL,aux9211_BOOL],aux9212_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux9213_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9214_BOOL);
constraint int_lin_eq([-1,1,1],[aux9215,4,s_00001],0);
constraint int_lt_reif(s_00019,aux9215,aux9216_BOOL);
constraint int_le_reif(s_00001, s_00019,aux9217_BOOL);
constraint array_bool_and([aux9213_BOOL,aux9214_BOOL,w_00004_00001_BOOL,aux9216_BOOL,aux9217_BOOL],aux9218_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux9219_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9220_BOOL);
constraint int_lin_eq([-1,1,1],[aux9221,4,s_00002],0);
constraint int_lt_reif(s_00019,aux9221,aux9222_BOOL);
constraint int_le_reif(s_00002, s_00019,aux9223_BOOL);
constraint array_bool_and([aux9219_BOOL,aux9220_BOOL,w_00004_00002_BOOL,aux9222_BOOL,aux9223_BOOL],aux9224_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux9225_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9226_BOOL);
constraint int_lin_eq([-1,1,1],[aux9227,3,s_00003],0);
constraint int_lt_reif(s_00019,aux9227,aux9228_BOOL);
constraint int_le_reif(s_00003, s_00019,aux9229_BOOL);
constraint array_bool_and([aux9225_BOOL,aux9226_BOOL,w_00004_00003_BOOL,aux9228_BOOL,aux9229_BOOL],aux9230_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux9231_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9232_BOOL);
constraint int_lin_eq([-1,1,1],[aux9233,2,s_00004],0);
constraint int_lt_reif(s_00019,aux9233,aux9234_BOOL);
constraint int_le_reif(s_00004, s_00019,aux9235_BOOL);
constraint array_bool_and([aux9231_BOOL,aux9232_BOOL,w_00004_00004_BOOL,aux9234_BOOL,aux9235_BOOL],aux9236_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux9237_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9238_BOOL);
constraint int_lin_eq([-1,1,1],[aux9239,3,s_00005],0);
constraint int_lt_reif(s_00019,aux9239,aux9240_BOOL);
constraint int_le_reif(s_00005, s_00019,aux9241_BOOL);
constraint array_bool_and([aux9237_BOOL,aux9238_BOOL,w_00004_00005_BOOL,aux9240_BOOL,aux9241_BOOL],aux9242_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9243_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9244_BOOL);
constraint int_lin_eq([-1,1,1],[aux9245,2,s_00006],0);
constraint int_lt_reif(s_00019,aux9245,aux9246_BOOL);
constraint int_le_reif(s_00006, s_00019,aux9247_BOOL);
constraint array_bool_and([aux9243_BOOL,aux9244_BOOL,w_00004_00006_BOOL,aux9246_BOOL,aux9247_BOOL],aux9248_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux9249_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9250_BOOL);
constraint int_lin_eq([-1,1,1],[aux9251,3,s_00007],0);
constraint int_lt_reif(s_00019,aux9251,aux9252_BOOL);
constraint int_le_reif(s_00007, s_00019,aux9253_BOOL);
constraint array_bool_and([aux9249_BOOL,aux9250_BOOL,w_00004_00007_BOOL,aux9252_BOOL,aux9253_BOOL],aux9254_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux9255_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9256_BOOL);
constraint int_lin_eq([-1,1,1],[aux9257,2,s_00008],0);
constraint int_lt_reif(s_00019,aux9257,aux9258_BOOL);
constraint int_le_reif(s_00008, s_00019,aux9259_BOOL);
constraint array_bool_and([aux9255_BOOL,aux9256_BOOL,w_00004_00008_BOOL,aux9258_BOOL,aux9259_BOOL],aux9260_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux9261_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9262_BOOL);
constraint int_lin_eq([-1,1,1],[aux9263,2,s_00009],0);
constraint int_lt_reif(s_00019,aux9263,aux9264_BOOL);
constraint int_le_reif(s_00009, s_00019,aux9265_BOOL);
constraint array_bool_and([aux9261_BOOL,aux9262_BOOL,w_00004_00009_BOOL,aux9264_BOOL,aux9265_BOOL],aux9266_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux9154_INTEGER,aux9160_INTEGER,aux9166_INTEGER,aux9172_INTEGER,aux9178_INTEGER,aux9184_INTEGER,aux9190_INTEGER,aux9196_INTEGER,aux9202_INTEGER,aux9208_INTEGER,aux9212_INTEGER,aux9218_INTEGER,aux9224_INTEGER,aux9230_INTEGER,aux9236_INTEGER,aux9242_INTEGER,aux9248_INTEGER,aux9254_INTEGER,aux9260_INTEGER,aux9266_INTEGER,1],0,aux9267_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux9268_BOOL);
constraint int_lin_eq([-1,1,1],[aux9269,3,s_00005],0);
constraint int_lt_reif(s_00005,aux9269,aux9270_BOOL);
constraint array_bool_and([aux9268_BOOL,w_00004_00005_BOOL,aux9270_BOOL],aux9271_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux9272_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux9273_BOOL);
constraint int_lin_eq([-1,1,1],[aux9274,4,s_00001],0);
constraint int_lt_reif(s_00005,aux9274,aux9275_BOOL);
constraint int_le_reif(s_00001, s_00005,aux9276_BOOL);
constraint array_bool_and([aux9272_BOOL,aux9273_BOOL,w_00004_00001_BOOL,aux9275_BOOL,aux9276_BOOL],aux9277_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux9278_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux9279_BOOL);
constraint int_lin_eq([-1,1,1],[aux9280,4,s_00002],0);
constraint int_lt_reif(s_00005,aux9280,aux9281_BOOL);
constraint int_le_reif(s_00002, s_00005,aux9282_BOOL);
constraint array_bool_and([aux9278_BOOL,aux9279_BOOL,w_00004_00002_BOOL,aux9281_BOOL,aux9282_BOOL],aux9283_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux9284_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux9285_BOOL);
constraint int_lin_eq([-1,1,1],[aux9286,3,s_00003],0);
constraint int_lt_reif(s_00005,aux9286,aux9287_BOOL);
constraint int_le_reif(s_00003, s_00005,aux9288_BOOL);
constraint array_bool_and([aux9284_BOOL,aux9285_BOOL,w_00004_00003_BOOL,aux9287_BOOL,aux9288_BOOL],aux9289_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux9290_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux9291_BOOL);
constraint int_lin_eq([-1,1,1],[aux9292,2,s_00004],0);
constraint int_lt_reif(s_00005,aux9292,aux9293_BOOL);
constraint int_le_reif(s_00004, s_00005,aux9294_BOOL);
constraint array_bool_and([aux9290_BOOL,aux9291_BOOL,w_00004_00004_BOOL,aux9293_BOOL,aux9294_BOOL],aux9295_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux9296_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9297_BOOL);
constraint int_lin_eq([-1,1,1],[aux9298,2,s_00006],0);
constraint int_lt_reif(s_00005,aux9298,aux9299_BOOL);
constraint int_le_reif(s_00006, s_00005,aux9300_BOOL);
constraint array_bool_and([aux9296_BOOL,aux9297_BOOL,w_00004_00006_BOOL,aux9299_BOOL,aux9300_BOOL],aux9301_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux9302_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux9303_BOOL);
constraint int_lin_eq([-1,1,1],[aux9304,3,s_00007],0);
constraint int_lt_reif(s_00005,aux9304,aux9305_BOOL);
constraint int_le_reif(s_00007, s_00005,aux9306_BOOL);
constraint array_bool_and([aux9302_BOOL,aux9303_BOOL,w_00004_00007_BOOL,aux9305_BOOL,aux9306_BOOL],aux9307_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux9308_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux9309_BOOL);
constraint int_lin_eq([-1,1,1],[aux9310,2,s_00008],0);
constraint int_lt_reif(s_00005,aux9310,aux9311_BOOL);
constraint int_le_reif(s_00008, s_00005,aux9312_BOOL);
constraint array_bool_and([aux9308_BOOL,aux9309_BOOL,w_00004_00008_BOOL,aux9311_BOOL,aux9312_BOOL],aux9313_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux9314_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux9315_BOOL);
constraint int_lin_eq([-1,1,1],[aux9316,2,s_00009],0);
constraint int_lt_reif(s_00005,aux9316,aux9317_BOOL);
constraint int_le_reif(s_00009, s_00005,aux9318_BOOL);
constraint array_bool_and([aux9314_BOOL,aux9315_BOOL,w_00004_00009_BOOL,aux9317_BOOL,aux9318_BOOL],aux9319_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux9320_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux9321_BOOL);
constraint int_lin_eq([-1,1,1],[aux9322,5,s_00010],0);
constraint int_lt_reif(s_00005,aux9322,aux9323_BOOL);
constraint int_le_reif(s_00010, s_00005,aux9324_BOOL);
constraint array_bool_and([aux9320_BOOL,aux9321_BOOL,w_00004_00010_BOOL,aux9323_BOOL,aux9324_BOOL],aux9325_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux9326_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux9327_BOOL);
constraint int_lin_eq([-1,1,1],[aux9328,3,s_00011],0);
constraint int_lt_reif(s_00005,aux9328,aux9329_BOOL);
constraint int_le_reif(s_00011, s_00005,aux9330_BOOL);
constraint array_bool_and([aux9326_BOOL,aux9327_BOOL,w_00004_00011_BOOL,aux9329_BOOL,aux9330_BOOL],aux9331_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux9332_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux9333_BOOL);
constraint int_lin_eq([-1,1,1],[aux9334,4,s_00012],0);
constraint int_lt_reif(s_00005,aux9334,aux9335_BOOL);
constraint int_le_reif(s_00012, s_00005,aux9336_BOOL);
constraint array_bool_and([aux9332_BOOL,aux9333_BOOL,w_00004_00012_BOOL,aux9335_BOOL,aux9336_BOOL],aux9337_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux9338_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux9339_BOOL);
constraint int_lin_eq([-1,1,1],[aux9340,3,s_00013],0);
constraint int_lt_reif(s_00005,aux9340,aux9341_BOOL);
constraint int_le_reif(s_00013, s_00005,aux9342_BOOL);
constraint array_bool_and([aux9338_BOOL,aux9339_BOOL,w_00004_00013_BOOL,aux9341_BOOL,aux9342_BOOL],aux9343_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux9344_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux9345_BOOL);
constraint int_lin_eq([-1,1,1],[aux9346,2,s_00014],0);
constraint int_lt_reif(s_00005,aux9346,aux9347_BOOL);
constraint int_le_reif(s_00014, s_00005,aux9348_BOOL);
constraint array_bool_and([aux9344_BOOL,aux9345_BOOL,w_00004_00014_BOOL,aux9347_BOOL,aux9348_BOOL],aux9349_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux9350_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux9351_BOOL);
constraint int_lin_eq([-1,1,1],[aux9352,1,s_00015],0);
constraint int_lt_reif(s_00005,aux9352,aux9353_BOOL);
constraint int_le_reif(s_00015, s_00005,aux9354_BOOL);
constraint array_bool_and([aux9350_BOOL,aux9351_BOOL,w_00004_00015_BOOL,aux9353_BOOL,aux9354_BOOL],aux9355_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux9356_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux9357_BOOL);
constraint int_lin_eq([-1,1,1],[aux9358,3,s_00016],0);
constraint int_lt_reif(s_00005,aux9358,aux9359_BOOL);
constraint int_le_reif(s_00016, s_00005,aux9360_BOOL);
constraint array_bool_and([aux9356_BOOL,aux9357_BOOL,w_00004_00016_BOOL,aux9359_BOOL,aux9360_BOOL],aux9361_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux9362_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux9363_BOOL);
constraint int_lin_eq([-1,1,1],[aux9364,4,s_00017],0);
constraint int_lt_reif(s_00005,aux9364,aux9365_BOOL);
constraint int_le_reif(s_00017, s_00005,aux9366_BOOL);
constraint array_bool_and([aux9362_BOOL,aux9363_BOOL,w_00004_00017_BOOL,aux9365_BOOL,aux9366_BOOL],aux9367_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux9368_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9369_BOOL);
constraint int_lin_eq([-1,1,1],[aux9370,1,s_00018],0);
constraint int_lt_reif(s_00005,aux9370,aux9371_BOOL);
constraint int_le_reif(s_00018, s_00005,aux9372_BOOL);
constraint array_bool_and([aux9368_BOOL,aux9369_BOOL,w_00004_00018_BOOL,aux9371_BOOL,aux9372_BOOL],aux9373_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux9374_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9375_BOOL);
constraint int_lin_eq([-1,1,1],[aux9376,4,s_00019],0);
constraint int_lt_reif(s_00005,aux9376,aux9377_BOOL);
constraint int_le_reif(s_00019, s_00005,aux9378_BOOL);
constraint array_bool_and([aux9374_BOOL,aux9375_BOOL,w_00004_00019_BOOL,aux9377_BOOL,aux9378_BOOL],aux9379_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux9380_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9381_BOOL);
constraint int_lin_eq([-1,1,1],[aux9382,2,s_00020],0);
constraint int_lt_reif(s_00005,aux9382,aux9383_BOOL);
constraint int_le_reif(s_00020, s_00005,aux9384_BOOL);
constraint array_bool_and([aux9380_BOOL,aux9381_BOOL,w_00004_00020_BOOL,aux9383_BOOL,aux9384_BOOL],aux9385_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux9271_INTEGER,aux9277_INTEGER,aux9283_INTEGER,aux9289_INTEGER,aux9295_INTEGER,aux9301_INTEGER,aux9307_INTEGER,aux9313_INTEGER,aux9319_INTEGER,aux9325_INTEGER,aux9331_INTEGER,aux9337_INTEGER,aux9343_INTEGER,aux9349_INTEGER,aux9355_INTEGER,aux9361_INTEGER,aux9367_INTEGER,aux9373_INTEGER,aux9379_INTEGER,aux9385_INTEGER,1],0,aux9386_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux9387_BOOL);
constraint int_lin_eq([-1,1,1],[aux9388,3,s_00003],0);
constraint int_lt_reif(s_00003,aux9388,aux9389_BOOL);
constraint array_bool_and([aux9387_BOOL,w_00004_00003_BOOL,aux9389_BOOL],aux9390_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux9391_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux9392_BOOL);
constraint int_lin_eq([-1,1,1],[aux9393,4,s_00001],0);
constraint int_lt_reif(s_00003,aux9393,aux9394_BOOL);
constraint int_le_reif(s_00001, s_00003,aux9395_BOOL);
constraint array_bool_and([aux9391_BOOL,aux9392_BOOL,w_00004_00001_BOOL,aux9394_BOOL,aux9395_BOOL],aux9396_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux9397_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux9398_BOOL);
constraint int_lin_eq([-1,1,1],[aux9399,4,s_00002],0);
constraint int_lt_reif(s_00003,aux9399,aux9400_BOOL);
constraint int_le_reif(s_00002, s_00003,aux9401_BOOL);
constraint array_bool_and([aux9397_BOOL,aux9398_BOOL,w_00004_00002_BOOL,aux9400_BOOL,aux9401_BOOL],aux9402_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux9403_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux9404_BOOL);
constraint int_lin_eq([-1,1,1],[aux9405,2,s_00004],0);
constraint int_lt_reif(s_00003,aux9405,aux9406_BOOL);
constraint int_le_reif(s_00004, s_00003,aux9407_BOOL);
constraint array_bool_and([aux9403_BOOL,aux9404_BOOL,w_00004_00004_BOOL,aux9406_BOOL,aux9407_BOOL],aux9408_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux9409_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux9410_BOOL);
constraint int_lin_eq([-1,1,1],[aux9411,3,s_00005],0);
constraint int_lt_reif(s_00003,aux9411,aux9412_BOOL);
constraint int_le_reif(s_00005, s_00003,aux9413_BOOL);
constraint array_bool_and([aux9409_BOOL,aux9410_BOOL,w_00004_00005_BOOL,aux9412_BOOL,aux9413_BOOL],aux9414_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux9415_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9416_BOOL);
constraint int_lin_eq([-1,1,1],[aux9417,2,s_00006],0);
constraint int_lt_reif(s_00003,aux9417,aux9418_BOOL);
constraint int_le_reif(s_00006, s_00003,aux9419_BOOL);
constraint array_bool_and([aux9415_BOOL,aux9416_BOOL,w_00004_00006_BOOL,aux9418_BOOL,aux9419_BOOL],aux9420_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux9421_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux9422_BOOL);
constraint int_lin_eq([-1,1,1],[aux9423,3,s_00007],0);
constraint int_lt_reif(s_00003,aux9423,aux9424_BOOL);
constraint int_le_reif(s_00007, s_00003,aux9425_BOOL);
constraint array_bool_and([aux9421_BOOL,aux9422_BOOL,w_00004_00007_BOOL,aux9424_BOOL,aux9425_BOOL],aux9426_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux9427_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux9428_BOOL);
constraint int_lin_eq([-1,1,1],[aux9429,2,s_00008],0);
constraint int_lt_reif(s_00003,aux9429,aux9430_BOOL);
constraint int_le_reif(s_00008, s_00003,aux9431_BOOL);
constraint array_bool_and([aux9427_BOOL,aux9428_BOOL,w_00004_00008_BOOL,aux9430_BOOL,aux9431_BOOL],aux9432_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux9433_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux9434_BOOL);
constraint int_lin_eq([-1,1,1],[aux9435,2,s_00009],0);
constraint int_lt_reif(s_00003,aux9435,aux9436_BOOL);
constraint int_le_reif(s_00009, s_00003,aux9437_BOOL);
constraint array_bool_and([aux9433_BOOL,aux9434_BOOL,w_00004_00009_BOOL,aux9436_BOOL,aux9437_BOOL],aux9438_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux9439_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux9440_BOOL);
constraint int_lin_eq([-1,1,1],[aux9441,5,s_00010],0);
constraint int_lt_reif(s_00003,aux9441,aux9442_BOOL);
constraint int_le_reif(s_00010, s_00003,aux9443_BOOL);
constraint array_bool_and([aux9439_BOOL,aux9440_BOOL,w_00004_00010_BOOL,aux9442_BOOL,aux9443_BOOL],aux9444_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux9445_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux9446_BOOL);
constraint int_lin_eq([-1,1,1],[aux9447,3,s_00011],0);
constraint int_lt_reif(s_00003,aux9447,aux9448_BOOL);
constraint int_le_reif(s_00011, s_00003,aux9449_BOOL);
constraint array_bool_and([aux9445_BOOL,aux9446_BOOL,w_00004_00011_BOOL,aux9448_BOOL,aux9449_BOOL],aux9450_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux9451_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux9452_BOOL);
constraint int_lin_eq([-1,1,1],[aux9453,4,s_00012],0);
constraint int_lt_reif(s_00003,aux9453,aux9454_BOOL);
constraint int_le_reif(s_00012, s_00003,aux9455_BOOL);
constraint array_bool_and([aux9451_BOOL,aux9452_BOOL,w_00004_00012_BOOL,aux9454_BOOL,aux9455_BOOL],aux9456_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux9457_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux9458_BOOL);
constraint int_lin_eq([-1,1,1],[aux9459,3,s_00013],0);
constraint int_lt_reif(s_00003,aux9459,aux9460_BOOL);
constraint int_le_reif(s_00013, s_00003,aux9461_BOOL);
constraint array_bool_and([aux9457_BOOL,aux9458_BOOL,w_00004_00013_BOOL,aux9460_BOOL,aux9461_BOOL],aux9462_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux9463_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux9464_BOOL);
constraint int_lin_eq([-1,1,1],[aux9465,2,s_00014],0);
constraint int_lt_reif(s_00003,aux9465,aux9466_BOOL);
constraint int_le_reif(s_00014, s_00003,aux9467_BOOL);
constraint array_bool_and([aux9463_BOOL,aux9464_BOOL,w_00004_00014_BOOL,aux9466_BOOL,aux9467_BOOL],aux9468_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux9469_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux9470_BOOL);
constraint int_lin_eq([-1,1,1],[aux9471,1,s_00015],0);
constraint int_lt_reif(s_00003,aux9471,aux9472_BOOL);
constraint int_le_reif(s_00015, s_00003,aux9473_BOOL);
constraint array_bool_and([aux9469_BOOL,aux9470_BOOL,w_00004_00015_BOOL,aux9472_BOOL,aux9473_BOOL],aux9474_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux9475_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux9476_BOOL);
constraint int_lin_eq([-1,1,1],[aux9477,3,s_00016],0);
constraint int_lt_reif(s_00003,aux9477,aux9478_BOOL);
constraint int_le_reif(s_00016, s_00003,aux9479_BOOL);
constraint array_bool_and([aux9475_BOOL,aux9476_BOOL,w_00004_00016_BOOL,aux9478_BOOL,aux9479_BOOL],aux9480_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux9481_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux9482_BOOL);
constraint int_lin_eq([-1,1,1],[aux9483,4,s_00017],0);
constraint int_lt_reif(s_00003,aux9483,aux9484_BOOL);
constraint int_le_reif(s_00017, s_00003,aux9485_BOOL);
constraint array_bool_and([aux9481_BOOL,aux9482_BOOL,w_00004_00017_BOOL,aux9484_BOOL,aux9485_BOOL],aux9486_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux9487_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9488_BOOL);
constraint int_lin_eq([-1,1,1],[aux9489,1,s_00018],0);
constraint int_lt_reif(s_00003,aux9489,aux9490_BOOL);
constraint int_le_reif(s_00018, s_00003,aux9491_BOOL);
constraint array_bool_and([aux9487_BOOL,aux9488_BOOL,w_00004_00018_BOOL,aux9490_BOOL,aux9491_BOOL],aux9492_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux9493_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9494_BOOL);
constraint int_lin_eq([-1,1,1],[aux9495,4,s_00019],0);
constraint int_lt_reif(s_00003,aux9495,aux9496_BOOL);
constraint int_le_reif(s_00019, s_00003,aux9497_BOOL);
constraint array_bool_and([aux9493_BOOL,aux9494_BOOL,w_00004_00019_BOOL,aux9496_BOOL,aux9497_BOOL],aux9498_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux9499_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9500_BOOL);
constraint int_lin_eq([-1,1,1],[aux9501,2,s_00020],0);
constraint int_lt_reif(s_00003,aux9501,aux9502_BOOL);
constraint int_le_reif(s_00020, s_00003,aux9503_BOOL);
constraint array_bool_and([aux9499_BOOL,aux9500_BOOL,w_00004_00020_BOOL,aux9502_BOOL,aux9503_BOOL],aux9504_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux9390_INTEGER,aux9396_INTEGER,aux9402_INTEGER,aux9408_INTEGER,aux9414_INTEGER,aux9420_INTEGER,aux9426_INTEGER,aux9432_INTEGER,aux9438_INTEGER,aux9444_INTEGER,aux9450_INTEGER,aux9456_INTEGER,aux9462_INTEGER,aux9468_INTEGER,aux9474_INTEGER,aux9480_INTEGER,aux9486_INTEGER,aux9492_INTEGER,aux9498_INTEGER,aux9504_INTEGER,1],0,aux9505_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9506_BOOL);
constraint int_lin_eq([-1,1,1],[aux9507,2,s_00006],0);
constraint int_lt_reif(s_00006,aux9507,aux9508_BOOL);
constraint array_bool_and([aux9506_BOOL,w_00004_00006_BOOL,aux9508_BOOL],aux9509_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux9510_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9511_BOOL);
constraint int_lin_eq([-1,1,1],[aux9512,4,s_00001],0);
constraint int_lt_reif(s_00006,aux9512,aux9513_BOOL);
constraint int_le_reif(s_00001, s_00006,aux9514_BOOL);
constraint array_bool_and([aux9510_BOOL,aux9511_BOOL,w_00004_00001_BOOL,aux9513_BOOL,aux9514_BOOL],aux9515_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux9516_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9517_BOOL);
constraint int_lin_eq([-1,1,1],[aux9518,4,s_00002],0);
constraint int_lt_reif(s_00006,aux9518,aux9519_BOOL);
constraint int_le_reif(s_00002, s_00006,aux9520_BOOL);
constraint array_bool_and([aux9516_BOOL,aux9517_BOOL,w_00004_00002_BOOL,aux9519_BOOL,aux9520_BOOL],aux9521_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux9522_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9523_BOOL);
constraint int_lin_eq([-1,1,1],[aux9524,3,s_00003],0);
constraint int_lt_reif(s_00006,aux9524,aux9525_BOOL);
constraint int_le_reif(s_00003, s_00006,aux9526_BOOL);
constraint array_bool_and([aux9522_BOOL,aux9523_BOOL,w_00004_00003_BOOL,aux9525_BOOL,aux9526_BOOL],aux9527_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux9528_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9529_BOOL);
constraint int_lin_eq([-1,1,1],[aux9530,2,s_00004],0);
constraint int_lt_reif(s_00006,aux9530,aux9531_BOOL);
constraint int_le_reif(s_00004, s_00006,aux9532_BOOL);
constraint array_bool_and([aux9528_BOOL,aux9529_BOOL,w_00004_00004_BOOL,aux9531_BOOL,aux9532_BOOL],aux9533_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux9534_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9535_BOOL);
constraint int_lin_eq([-1,1,1],[aux9536,3,s_00005],0);
constraint int_lt_reif(s_00006,aux9536,aux9537_BOOL);
constraint int_le_reif(s_00005, s_00006,aux9538_BOOL);
constraint array_bool_and([aux9534_BOOL,aux9535_BOOL,w_00004_00005_BOOL,aux9537_BOOL,aux9538_BOOL],aux9539_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9540_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux9541_BOOL);
constraint int_lin_eq([-1,1,1],[aux9542,3,s_00007],0);
constraint int_lt_reif(s_00006,aux9542,aux9543_BOOL);
constraint int_le_reif(s_00007, s_00006,aux9544_BOOL);
constraint array_bool_and([aux9540_BOOL,aux9541_BOOL,w_00004_00007_BOOL,aux9543_BOOL,aux9544_BOOL],aux9545_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9546_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux9547_BOOL);
constraint int_lin_eq([-1,1,1],[aux9548,2,s_00008],0);
constraint int_lt_reif(s_00006,aux9548,aux9549_BOOL);
constraint int_le_reif(s_00008, s_00006,aux9550_BOOL);
constraint array_bool_and([aux9546_BOOL,aux9547_BOOL,w_00004_00008_BOOL,aux9549_BOOL,aux9550_BOOL],aux9551_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9552_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux9553_BOOL);
constraint int_lin_eq([-1,1,1],[aux9554,2,s_00009],0);
constraint int_lt_reif(s_00006,aux9554,aux9555_BOOL);
constraint int_le_reif(s_00009, s_00006,aux9556_BOOL);
constraint array_bool_and([aux9552_BOOL,aux9553_BOOL,w_00004_00009_BOOL,aux9555_BOOL,aux9556_BOOL],aux9557_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9558_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux9559_BOOL);
constraint int_lin_eq([-1,1,1],[aux9560,5,s_00010],0);
constraint int_lt_reif(s_00006,aux9560,aux9561_BOOL);
constraint int_le_reif(s_00010, s_00006,aux9562_BOOL);
constraint array_bool_and([aux9558_BOOL,aux9559_BOOL,w_00004_00010_BOOL,aux9561_BOOL,aux9562_BOOL],aux9563_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9564_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux9565_BOOL);
constraint int_lin_eq([-1,1,1],[aux9566,3,s_00011],0);
constraint int_lt_reif(s_00006,aux9566,aux9567_BOOL);
constraint int_le_reif(s_00011, s_00006,aux9568_BOOL);
constraint array_bool_and([aux9564_BOOL,aux9565_BOOL,w_00004_00011_BOOL,aux9567_BOOL,aux9568_BOOL],aux9569_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9570_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux9571_BOOL);
constraint int_lin_eq([-1,1,1],[aux9572,4,s_00012],0);
constraint int_lt_reif(s_00006,aux9572,aux9573_BOOL);
constraint int_le_reif(s_00012, s_00006,aux9574_BOOL);
constraint array_bool_and([aux9570_BOOL,aux9571_BOOL,w_00004_00012_BOOL,aux9573_BOOL,aux9574_BOOL],aux9575_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9576_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux9577_BOOL);
constraint int_lin_eq([-1,1,1],[aux9578,3,s_00013],0);
constraint int_lt_reif(s_00006,aux9578,aux9579_BOOL);
constraint int_le_reif(s_00013, s_00006,aux9580_BOOL);
constraint array_bool_and([aux9576_BOOL,aux9577_BOOL,w_00004_00013_BOOL,aux9579_BOOL,aux9580_BOOL],aux9581_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9582_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux9583_BOOL);
constraint int_lin_eq([-1,1,1],[aux9584,2,s_00014],0);
constraint int_lt_reif(s_00006,aux9584,aux9585_BOOL);
constraint int_le_reif(s_00014, s_00006,aux9586_BOOL);
constraint array_bool_and([aux9582_BOOL,aux9583_BOOL,w_00004_00014_BOOL,aux9585_BOOL,aux9586_BOOL],aux9587_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9588_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux9589_BOOL);
constraint int_lin_eq([-1,1,1],[aux9590,1,s_00015],0);
constraint int_lt_reif(s_00006,aux9590,aux9591_BOOL);
constraint int_le_reif(s_00015, s_00006,aux9592_BOOL);
constraint array_bool_and([aux9588_BOOL,aux9589_BOOL,w_00004_00015_BOOL,aux9591_BOOL,aux9592_BOOL],aux9593_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9594_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux9595_BOOL);
constraint int_lin_eq([-1,1,1],[aux9596,3,s_00016],0);
constraint int_lt_reif(s_00006,aux9596,aux9597_BOOL);
constraint int_le_reif(s_00016, s_00006,aux9598_BOOL);
constraint array_bool_and([aux9594_BOOL,aux9595_BOOL,w_00004_00016_BOOL,aux9597_BOOL,aux9598_BOOL],aux9599_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9600_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux9601_BOOL);
constraint int_lin_eq([-1,1,1],[aux9602,4,s_00017],0);
constraint int_lt_reif(s_00006,aux9602,aux9603_BOOL);
constraint int_le_reif(s_00017, s_00006,aux9604_BOOL);
constraint array_bool_and([aux9600_BOOL,aux9601_BOOL,w_00004_00017_BOOL,aux9603_BOOL,aux9604_BOOL],aux9605_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9606_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9607_BOOL);
constraint int_lin_eq([-1,1,1],[aux9608,1,s_00018],0);
constraint int_lt_reif(s_00006,aux9608,aux9609_BOOL);
constraint int_le_reif(s_00018, s_00006,aux9610_BOOL);
constraint array_bool_and([aux9606_BOOL,aux9607_BOOL,w_00004_00018_BOOL,aux9609_BOOL,aux9610_BOOL],aux9611_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9612_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9613_BOOL);
constraint int_lin_eq([-1,1,1],[aux9614,4,s_00019],0);
constraint int_lt_reif(s_00006,aux9614,aux9615_BOOL);
constraint int_le_reif(s_00019, s_00006,aux9616_BOOL);
constraint array_bool_and([aux9612_BOOL,aux9613_BOOL,w_00004_00019_BOOL,aux9615_BOOL,aux9616_BOOL],aux9617_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9618_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9619_BOOL);
constraint int_lin_eq([-1,1,1],[aux9620,2,s_00020],0);
constraint int_lt_reif(s_00006,aux9620,aux9621_BOOL);
constraint int_le_reif(s_00020, s_00006,aux9622_BOOL);
constraint array_bool_and([aux9618_BOOL,aux9619_BOOL,w_00004_00020_BOOL,aux9621_BOOL,aux9622_BOOL],aux9623_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux9509_INTEGER,aux9515_INTEGER,aux9521_INTEGER,aux9527_INTEGER,aux9533_INTEGER,aux9539_INTEGER,aux9545_INTEGER,aux9551_INTEGER,aux9557_INTEGER,aux9563_INTEGER,aux9569_INTEGER,aux9575_INTEGER,aux9581_INTEGER,aux9587_INTEGER,aux9593_INTEGER,aux9599_INTEGER,aux9605_INTEGER,aux9611_INTEGER,aux9617_INTEGER,aux9623_INTEGER,1],0,aux9624_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux9625_BOOL);
constraint int_lin_eq([-1,1,1],[aux9626,4,s_00002],0);
constraint int_lt_reif(s_00002,aux9626,aux9627_BOOL);
constraint array_bool_and([aux9625_BOOL,w_00004_00002_BOOL,aux9627_BOOL],aux9628_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux9629_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux9630_BOOL);
constraint int_lin_eq([-1,1,1],[aux9631,4,s_00001],0);
constraint int_lt_reif(s_00002,aux9631,aux9632_BOOL);
constraint int_le_reif(s_00001, s_00002,aux9633_BOOL);
constraint array_bool_and([aux9629_BOOL,aux9630_BOOL,w_00004_00001_BOOL,aux9632_BOOL,aux9633_BOOL],aux9634_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux9635_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux9636_BOOL);
constraint int_lin_eq([-1,1,1],[aux9637,3,s_00003],0);
constraint int_lt_reif(s_00002,aux9637,aux9638_BOOL);
constraint int_le_reif(s_00003, s_00002,aux9639_BOOL);
constraint array_bool_and([aux9635_BOOL,aux9636_BOOL,w_00004_00003_BOOL,aux9638_BOOL,aux9639_BOOL],aux9640_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux9641_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux9642_BOOL);
constraint int_lin_eq([-1,1,1],[aux9643,2,s_00004],0);
constraint int_lt_reif(s_00002,aux9643,aux9644_BOOL);
constraint int_le_reif(s_00004, s_00002,aux9645_BOOL);
constraint array_bool_and([aux9641_BOOL,aux9642_BOOL,w_00004_00004_BOOL,aux9644_BOOL,aux9645_BOOL],aux9646_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux9647_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux9648_BOOL);
constraint int_lin_eq([-1,1,1],[aux9649,3,s_00005],0);
constraint int_lt_reif(s_00002,aux9649,aux9650_BOOL);
constraint int_le_reif(s_00005, s_00002,aux9651_BOOL);
constraint array_bool_and([aux9647_BOOL,aux9648_BOOL,w_00004_00005_BOOL,aux9650_BOOL,aux9651_BOOL],aux9652_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux9653_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9654_BOOL);
constraint int_lin_eq([-1,1,1],[aux9655,2,s_00006],0);
constraint int_lt_reif(s_00002,aux9655,aux9656_BOOL);
constraint int_le_reif(s_00006, s_00002,aux9657_BOOL);
constraint array_bool_and([aux9653_BOOL,aux9654_BOOL,w_00004_00006_BOOL,aux9656_BOOL,aux9657_BOOL],aux9658_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux9659_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux9660_BOOL);
constraint int_lin_eq([-1,1,1],[aux9661,3,s_00007],0);
constraint int_lt_reif(s_00002,aux9661,aux9662_BOOL);
constraint int_le_reif(s_00007, s_00002,aux9663_BOOL);
constraint array_bool_and([aux9659_BOOL,aux9660_BOOL,w_00004_00007_BOOL,aux9662_BOOL,aux9663_BOOL],aux9664_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux9665_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux9666_BOOL);
constraint int_lin_eq([-1,1,1],[aux9667,2,s_00008],0);
constraint int_lt_reif(s_00002,aux9667,aux9668_BOOL);
constraint int_le_reif(s_00008, s_00002,aux9669_BOOL);
constraint array_bool_and([aux9665_BOOL,aux9666_BOOL,w_00004_00008_BOOL,aux9668_BOOL,aux9669_BOOL],aux9670_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux9671_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux9672_BOOL);
constraint int_lin_eq([-1,1,1],[aux9673,2,s_00009],0);
constraint int_lt_reif(s_00002,aux9673,aux9674_BOOL);
constraint int_le_reif(s_00009, s_00002,aux9675_BOOL);
constraint array_bool_and([aux9671_BOOL,aux9672_BOOL,w_00004_00009_BOOL,aux9674_BOOL,aux9675_BOOL],aux9676_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux9677_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux9678_BOOL);
constraint int_lin_eq([-1,1,1],[aux9679,5,s_00010],0);
constraint int_lt_reif(s_00002,aux9679,aux9680_BOOL);
constraint int_le_reif(s_00010, s_00002,aux9681_BOOL);
constraint array_bool_and([aux9677_BOOL,aux9678_BOOL,w_00004_00010_BOOL,aux9680_BOOL,aux9681_BOOL],aux9682_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux9683_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux9684_BOOL);
constraint int_lin_eq([-1,1,1],[aux9685,3,s_00011],0);
constraint int_lt_reif(s_00002,aux9685,aux9686_BOOL);
constraint int_le_reif(s_00011, s_00002,aux9687_BOOL);
constraint array_bool_and([aux9683_BOOL,aux9684_BOOL,w_00004_00011_BOOL,aux9686_BOOL,aux9687_BOOL],aux9688_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux9689_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux9690_BOOL);
constraint int_lin_eq([-1,1,1],[aux9691,4,s_00012],0);
constraint int_lt_reif(s_00002,aux9691,aux9692_BOOL);
constraint int_le_reif(s_00012, s_00002,aux9693_BOOL);
constraint array_bool_and([aux9689_BOOL,aux9690_BOOL,w_00004_00012_BOOL,aux9692_BOOL,aux9693_BOOL],aux9694_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux9695_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux9696_BOOL);
constraint int_lin_eq([-1,1,1],[aux9697,3,s_00013],0);
constraint int_lt_reif(s_00002,aux9697,aux9698_BOOL);
constraint int_le_reif(s_00013, s_00002,aux9699_BOOL);
constraint array_bool_and([aux9695_BOOL,aux9696_BOOL,w_00004_00013_BOOL,aux9698_BOOL,aux9699_BOOL],aux9700_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux9701_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux9702_BOOL);
constraint int_lin_eq([-1,1,1],[aux9703,2,s_00014],0);
constraint int_lt_reif(s_00002,aux9703,aux9704_BOOL);
constraint int_le_reif(s_00014, s_00002,aux9705_BOOL);
constraint array_bool_and([aux9701_BOOL,aux9702_BOOL,w_00004_00014_BOOL,aux9704_BOOL,aux9705_BOOL],aux9706_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux9707_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux9708_BOOL);
constraint int_lin_eq([-1,1,1],[aux9709,1,s_00015],0);
constraint int_lt_reif(s_00002,aux9709,aux9710_BOOL);
constraint int_le_reif(s_00015, s_00002,aux9711_BOOL);
constraint array_bool_and([aux9707_BOOL,aux9708_BOOL,w_00004_00015_BOOL,aux9710_BOOL,aux9711_BOOL],aux9712_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux9713_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux9714_BOOL);
constraint int_lin_eq([-1,1,1],[aux9715,3,s_00016],0);
constraint int_lt_reif(s_00002,aux9715,aux9716_BOOL);
constraint int_le_reif(s_00016, s_00002,aux9717_BOOL);
constraint array_bool_and([aux9713_BOOL,aux9714_BOOL,w_00004_00016_BOOL,aux9716_BOOL,aux9717_BOOL],aux9718_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux9719_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux9720_BOOL);
constraint int_lin_eq([-1,1,1],[aux9721,4,s_00017],0);
constraint int_lt_reif(s_00002,aux9721,aux9722_BOOL);
constraint int_le_reif(s_00017, s_00002,aux9723_BOOL);
constraint array_bool_and([aux9719_BOOL,aux9720_BOOL,w_00004_00017_BOOL,aux9722_BOOL,aux9723_BOOL],aux9724_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux9725_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9726_BOOL);
constraint int_lin_eq([-1,1,1],[aux9727,1,s_00018],0);
constraint int_lt_reif(s_00002,aux9727,aux9728_BOOL);
constraint int_le_reif(s_00018, s_00002,aux9729_BOOL);
constraint array_bool_and([aux9725_BOOL,aux9726_BOOL,w_00004_00018_BOOL,aux9728_BOOL,aux9729_BOOL],aux9730_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux9731_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9732_BOOL);
constraint int_lin_eq([-1,1,1],[aux9733,4,s_00019],0);
constraint int_lt_reif(s_00002,aux9733,aux9734_BOOL);
constraint int_le_reif(s_00019, s_00002,aux9735_BOOL);
constraint array_bool_and([aux9731_BOOL,aux9732_BOOL,w_00004_00019_BOOL,aux9734_BOOL,aux9735_BOOL],aux9736_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux9737_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9738_BOOL);
constraint int_lin_eq([-1,1,1],[aux9739,2,s_00020],0);
constraint int_lt_reif(s_00002,aux9739,aux9740_BOOL);
constraint int_le_reif(s_00020, s_00002,aux9741_BOOL);
constraint array_bool_and([aux9737_BOOL,aux9738_BOOL,w_00004_00020_BOOL,aux9740_BOOL,aux9741_BOOL],aux9742_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux9628_INTEGER,aux9634_INTEGER,aux9640_INTEGER,aux9646_INTEGER,aux9652_INTEGER,aux9658_INTEGER,aux9664_INTEGER,aux9670_INTEGER,aux9676_INTEGER,aux9682_INTEGER,aux9688_INTEGER,aux9694_INTEGER,aux9700_INTEGER,aux9706_INTEGER,aux9712_INTEGER,aux9718_INTEGER,aux9724_INTEGER,aux9730_INTEGER,aux9736_INTEGER,aux9742_INTEGER,1],0,aux9743_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux9744_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9745_BOOL);
constraint int_lin_eq([-1,1,1],[aux9746,5,s_00010],0);
constraint int_lt_reif(s_00018,aux9746,aux9747_BOOL);
constraint int_le_reif(s_00010, s_00018,aux9748_BOOL);
constraint array_bool_and([aux9744_BOOL,aux9745_BOOL,w_00004_00010_BOOL,aux9747_BOOL,aux9748_BOOL],aux9749_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux9750_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9751_BOOL);
constraint int_lin_eq([-1,1,1],[aux9752,3,s_00011],0);
constraint int_lt_reif(s_00018,aux9752,aux9753_BOOL);
constraint int_le_reif(s_00011, s_00018,aux9754_BOOL);
constraint array_bool_and([aux9750_BOOL,aux9751_BOOL,w_00004_00011_BOOL,aux9753_BOOL,aux9754_BOOL],aux9755_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux9756_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9757_BOOL);
constraint int_lin_eq([-1,1,1],[aux9758,4,s_00012],0);
constraint int_lt_reif(s_00018,aux9758,aux9759_BOOL);
constraint int_le_reif(s_00012, s_00018,aux9760_BOOL);
constraint array_bool_and([aux9756_BOOL,aux9757_BOOL,w_00004_00012_BOOL,aux9759_BOOL,aux9760_BOOL],aux9761_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux9762_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9763_BOOL);
constraint int_lin_eq([-1,1,1],[aux9764,3,s_00013],0);
constraint int_lt_reif(s_00018,aux9764,aux9765_BOOL);
constraint int_le_reif(s_00013, s_00018,aux9766_BOOL);
constraint array_bool_and([aux9762_BOOL,aux9763_BOOL,w_00004_00013_BOOL,aux9765_BOOL,aux9766_BOOL],aux9767_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux9768_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9769_BOOL);
constraint int_lin_eq([-1,1,1],[aux9770,2,s_00014],0);
constraint int_lt_reif(s_00018,aux9770,aux9771_BOOL);
constraint int_le_reif(s_00014, s_00018,aux9772_BOOL);
constraint array_bool_and([aux9768_BOOL,aux9769_BOOL,w_00004_00014_BOOL,aux9771_BOOL,aux9772_BOOL],aux9773_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux9774_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9775_BOOL);
constraint int_lin_eq([-1,1,1],[aux9776,1,s_00015],0);
constraint int_lt_reif(s_00018,aux9776,aux9777_BOOL);
constraint int_le_reif(s_00015, s_00018,aux9778_BOOL);
constraint array_bool_and([aux9774_BOOL,aux9775_BOOL,w_00004_00015_BOOL,aux9777_BOOL,aux9778_BOOL],aux9779_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux9780_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9781_BOOL);
constraint int_lin_eq([-1,1,1],[aux9782,3,s_00016],0);
constraint int_lt_reif(s_00018,aux9782,aux9783_BOOL);
constraint int_le_reif(s_00016, s_00018,aux9784_BOOL);
constraint array_bool_and([aux9780_BOOL,aux9781_BOOL,w_00004_00016_BOOL,aux9783_BOOL,aux9784_BOOL],aux9785_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux9786_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9787_BOOL);
constraint int_lin_eq([-1,1,1],[aux9788,4,s_00017],0);
constraint int_lt_reif(s_00018,aux9788,aux9789_BOOL);
constraint int_le_reif(s_00017, s_00018,aux9790_BOOL);
constraint array_bool_and([aux9786_BOOL,aux9787_BOOL,w_00004_00017_BOOL,aux9789_BOOL,aux9790_BOOL],aux9791_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9792_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9793_BOOL);
constraint int_lin_eq([-1,1,1],[aux9794,4,s_00019],0);
constraint int_lt_reif(s_00018,aux9794,aux9795_BOOL);
constraint int_le_reif(s_00019, s_00018,aux9796_BOOL);
constraint array_bool_and([aux9792_BOOL,aux9793_BOOL,w_00004_00019_BOOL,aux9795_BOOL,aux9796_BOOL],aux9797_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9798_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9799_BOOL);
constraint int_lin_eq([-1,1,1],[aux9800,2,s_00020],0);
constraint int_lt_reif(s_00018,aux9800,aux9801_BOOL);
constraint int_le_reif(s_00020, s_00018,aux9802_BOOL);
constraint array_bool_and([aux9798_BOOL,aux9799_BOOL,w_00004_00020_BOOL,aux9801_BOOL,aux9802_BOOL],aux9803_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9804_BOOL);
constraint int_lin_eq([-1,1,1],[aux9805,1,s_00018],0);
constraint int_lt_reif(s_00018,aux9805,aux9806_BOOL);
constraint array_bool_and([aux9804_BOOL,w_00004_00018_BOOL,aux9806_BOOL],aux9807_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux9808_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9809_BOOL);
constraint int_lin_eq([-1,1,1],[aux9810,4,s_00001],0);
constraint int_lt_reif(s_00018,aux9810,aux9811_BOOL);
constraint int_le_reif(s_00001, s_00018,aux9812_BOOL);
constraint array_bool_and([aux9808_BOOL,aux9809_BOOL,w_00004_00001_BOOL,aux9811_BOOL,aux9812_BOOL],aux9813_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux9814_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9815_BOOL);
constraint int_lin_eq([-1,1,1],[aux9816,4,s_00002],0);
constraint int_lt_reif(s_00018,aux9816,aux9817_BOOL);
constraint int_le_reif(s_00002, s_00018,aux9818_BOOL);
constraint array_bool_and([aux9814_BOOL,aux9815_BOOL,w_00004_00002_BOOL,aux9817_BOOL,aux9818_BOOL],aux9819_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux9820_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9821_BOOL);
constraint int_lin_eq([-1,1,1],[aux9822,3,s_00003],0);
constraint int_lt_reif(s_00018,aux9822,aux9823_BOOL);
constraint int_le_reif(s_00003, s_00018,aux9824_BOOL);
constraint array_bool_and([aux9820_BOOL,aux9821_BOOL,w_00004_00003_BOOL,aux9823_BOOL,aux9824_BOOL],aux9825_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux9826_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9827_BOOL);
constraint int_lin_eq([-1,1,1],[aux9828,2,s_00004],0);
constraint int_lt_reif(s_00018,aux9828,aux9829_BOOL);
constraint int_le_reif(s_00004, s_00018,aux9830_BOOL);
constraint array_bool_and([aux9826_BOOL,aux9827_BOOL,w_00004_00004_BOOL,aux9829_BOOL,aux9830_BOOL],aux9831_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux9832_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9833_BOOL);
constraint int_lin_eq([-1,1,1],[aux9834,3,s_00005],0);
constraint int_lt_reif(s_00018,aux9834,aux9835_BOOL);
constraint int_le_reif(s_00005, s_00018,aux9836_BOOL);
constraint array_bool_and([aux9832_BOOL,aux9833_BOOL,w_00004_00005_BOOL,aux9835_BOOL,aux9836_BOOL],aux9837_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9838_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9839_BOOL);
constraint int_lin_eq([-1,1,1],[aux9840,2,s_00006],0);
constraint int_lt_reif(s_00018,aux9840,aux9841_BOOL);
constraint int_le_reif(s_00006, s_00018,aux9842_BOOL);
constraint array_bool_and([aux9838_BOOL,aux9839_BOOL,w_00004_00006_BOOL,aux9841_BOOL,aux9842_BOOL],aux9843_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux9844_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9845_BOOL);
constraint int_lin_eq([-1,1,1],[aux9846,3,s_00007],0);
constraint int_lt_reif(s_00018,aux9846,aux9847_BOOL);
constraint int_le_reif(s_00007, s_00018,aux9848_BOOL);
constraint array_bool_and([aux9844_BOOL,aux9845_BOOL,w_00004_00007_BOOL,aux9847_BOOL,aux9848_BOOL],aux9849_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux9850_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9851_BOOL);
constraint int_lin_eq([-1,1,1],[aux9852,2,s_00008],0);
constraint int_lt_reif(s_00018,aux9852,aux9853_BOOL);
constraint int_le_reif(s_00008, s_00018,aux9854_BOOL);
constraint array_bool_and([aux9850_BOOL,aux9851_BOOL,w_00004_00008_BOOL,aux9853_BOOL,aux9854_BOOL],aux9855_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux9856_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9857_BOOL);
constraint int_lin_eq([-1,1,1],[aux9858,2,s_00009],0);
constraint int_lt_reif(s_00018,aux9858,aux9859_BOOL);
constraint int_le_reif(s_00009, s_00018,aux9860_BOOL);
constraint array_bool_and([aux9856_BOOL,aux9857_BOOL,w_00004_00009_BOOL,aux9859_BOOL,aux9860_BOOL],aux9861_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux9749_INTEGER,aux9755_INTEGER,aux9761_INTEGER,aux9767_INTEGER,aux9773_INTEGER,aux9779_INTEGER,aux9785_INTEGER,aux9791_INTEGER,aux9797_INTEGER,aux9803_INTEGER,aux9807_INTEGER,aux9813_INTEGER,aux9819_INTEGER,aux9825_INTEGER,aux9831_INTEGER,aux9837_INTEGER,aux9843_INTEGER,aux9849_INTEGER,aux9855_INTEGER,aux9861_INTEGER,1],0,aux9862_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux9863_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9864_BOOL);
constraint int_lin_eq([-1,1,1],[aux9865,5,s_00010],0);
constraint int_lt_reif(s_00020,aux9865,aux9866_BOOL);
constraint int_le_reif(s_00010, s_00020,aux9867_BOOL);
constraint array_bool_and([aux9863_BOOL,aux9864_BOOL,w_00004_00010_BOOL,aux9866_BOOL,aux9867_BOOL],aux9868_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux9869_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9870_BOOL);
constraint int_lin_eq([-1,1,1],[aux9871,3,s_00011],0);
constraint int_lt_reif(s_00020,aux9871,aux9872_BOOL);
constraint int_le_reif(s_00011, s_00020,aux9873_BOOL);
constraint array_bool_and([aux9869_BOOL,aux9870_BOOL,w_00004_00011_BOOL,aux9872_BOOL,aux9873_BOOL],aux9874_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux9875_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9876_BOOL);
constraint int_lin_eq([-1,1,1],[aux9877,4,s_00012],0);
constraint int_lt_reif(s_00020,aux9877,aux9878_BOOL);
constraint int_le_reif(s_00012, s_00020,aux9879_BOOL);
constraint array_bool_and([aux9875_BOOL,aux9876_BOOL,w_00004_00012_BOOL,aux9878_BOOL,aux9879_BOOL],aux9880_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux9881_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9882_BOOL);
constraint int_lin_eq([-1,1,1],[aux9883,3,s_00013],0);
constraint int_lt_reif(s_00020,aux9883,aux9884_BOOL);
constraint int_le_reif(s_00013, s_00020,aux9885_BOOL);
constraint array_bool_and([aux9881_BOOL,aux9882_BOOL,w_00004_00013_BOOL,aux9884_BOOL,aux9885_BOOL],aux9886_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux9887_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9888_BOOL);
constraint int_lin_eq([-1,1,1],[aux9889,2,s_00014],0);
constraint int_lt_reif(s_00020,aux9889,aux9890_BOOL);
constraint int_le_reif(s_00014, s_00020,aux9891_BOOL);
constraint array_bool_and([aux9887_BOOL,aux9888_BOOL,w_00004_00014_BOOL,aux9890_BOOL,aux9891_BOOL],aux9892_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux9893_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9894_BOOL);
constraint int_lin_eq([-1,1,1],[aux9895,1,s_00015],0);
constraint int_lt_reif(s_00020,aux9895,aux9896_BOOL);
constraint int_le_reif(s_00015, s_00020,aux9897_BOOL);
constraint array_bool_and([aux9893_BOOL,aux9894_BOOL,w_00004_00015_BOOL,aux9896_BOOL,aux9897_BOOL],aux9898_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux9899_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9900_BOOL);
constraint int_lin_eq([-1,1,1],[aux9901,3,s_00016],0);
constraint int_lt_reif(s_00020,aux9901,aux9902_BOOL);
constraint int_le_reif(s_00016, s_00020,aux9903_BOOL);
constraint array_bool_and([aux9899_BOOL,aux9900_BOOL,w_00004_00016_BOOL,aux9902_BOOL,aux9903_BOOL],aux9904_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux9905_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9906_BOOL);
constraint int_lin_eq([-1,1,1],[aux9907,4,s_00017],0);
constraint int_lt_reif(s_00020,aux9907,aux9908_BOOL);
constraint int_le_reif(s_00017, s_00020,aux9909_BOOL);
constraint array_bool_and([aux9905_BOOL,aux9906_BOOL,w_00004_00017_BOOL,aux9908_BOOL,aux9909_BOOL],aux9910_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9911_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9912_BOOL);
constraint int_lin_eq([-1,1,1],[aux9913,1,s_00018],0);
constraint int_lt_reif(s_00020,aux9913,aux9914_BOOL);
constraint int_le_reif(s_00018, s_00020,aux9915_BOOL);
constraint array_bool_and([aux9911_BOOL,aux9912_BOOL,w_00004_00018_BOOL,aux9914_BOOL,aux9915_BOOL],aux9916_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9917_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9918_BOOL);
constraint int_lin_eq([-1,1,1],[aux9919,4,s_00019],0);
constraint int_lt_reif(s_00020,aux9919,aux9920_BOOL);
constraint int_le_reif(s_00019, s_00020,aux9921_BOOL);
constraint array_bool_and([aux9917_BOOL,aux9918_BOOL,w_00004_00019_BOOL,aux9920_BOOL,aux9921_BOOL],aux9922_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9923_BOOL);
constraint int_lin_eq([-1,1,1],[aux9924,2,s_00020],0);
constraint int_lt_reif(s_00020,aux9924,aux9925_BOOL);
constraint array_bool_and([aux9923_BOOL,w_00004_00020_BOOL,aux9925_BOOL],aux9926_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux9927_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9928_BOOL);
constraint int_lin_eq([-1,1,1],[aux9929,4,s_00001],0);
constraint int_lt_reif(s_00020,aux9929,aux9930_BOOL);
constraint int_le_reif(s_00001, s_00020,aux9931_BOOL);
constraint array_bool_and([aux9927_BOOL,aux9928_BOOL,w_00004_00001_BOOL,aux9930_BOOL,aux9931_BOOL],aux9932_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux9933_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9934_BOOL);
constraint int_lin_eq([-1,1,1],[aux9935,4,s_00002],0);
constraint int_lt_reif(s_00020,aux9935,aux9936_BOOL);
constraint int_le_reif(s_00002, s_00020,aux9937_BOOL);
constraint array_bool_and([aux9933_BOOL,aux9934_BOOL,w_00004_00002_BOOL,aux9936_BOOL,aux9937_BOOL],aux9938_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux9939_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9940_BOOL);
constraint int_lin_eq([-1,1,1],[aux9941,3,s_00003],0);
constraint int_lt_reif(s_00020,aux9941,aux9942_BOOL);
constraint int_le_reif(s_00003, s_00020,aux9943_BOOL);
constraint array_bool_and([aux9939_BOOL,aux9940_BOOL,w_00004_00003_BOOL,aux9942_BOOL,aux9943_BOOL],aux9944_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux9945_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9946_BOOL);
constraint int_lin_eq([-1,1,1],[aux9947,2,s_00004],0);
constraint int_lt_reif(s_00020,aux9947,aux9948_BOOL);
constraint int_le_reif(s_00004, s_00020,aux9949_BOOL);
constraint array_bool_and([aux9945_BOOL,aux9946_BOOL,w_00004_00004_BOOL,aux9948_BOOL,aux9949_BOOL],aux9950_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux9951_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9952_BOOL);
constraint int_lin_eq([-1,1,1],[aux9953,3,s_00005],0);
constraint int_lt_reif(s_00020,aux9953,aux9954_BOOL);
constraint int_le_reif(s_00005, s_00020,aux9955_BOOL);
constraint array_bool_and([aux9951_BOOL,aux9952_BOOL,w_00004_00005_BOOL,aux9954_BOOL,aux9955_BOOL],aux9956_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9957_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9958_BOOL);
constraint int_lin_eq([-1,1,1],[aux9959,2,s_00006],0);
constraint int_lt_reif(s_00020,aux9959,aux9960_BOOL);
constraint int_le_reif(s_00006, s_00020,aux9961_BOOL);
constraint array_bool_and([aux9957_BOOL,aux9958_BOOL,w_00004_00006_BOOL,aux9960_BOOL,aux9961_BOOL],aux9962_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux9963_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9964_BOOL);
constraint int_lin_eq([-1,1,1],[aux9965,3,s_00007],0);
constraint int_lt_reif(s_00020,aux9965,aux9966_BOOL);
constraint int_le_reif(s_00007, s_00020,aux9967_BOOL);
constraint array_bool_and([aux9963_BOOL,aux9964_BOOL,w_00004_00007_BOOL,aux9966_BOOL,aux9967_BOOL],aux9968_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux9969_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9970_BOOL);
constraint int_lin_eq([-1,1,1],[aux9971,2,s_00008],0);
constraint int_lt_reif(s_00020,aux9971,aux9972_BOOL);
constraint int_le_reif(s_00008, s_00020,aux9973_BOOL);
constraint array_bool_and([aux9969_BOOL,aux9970_BOOL,w_00004_00008_BOOL,aux9972_BOOL,aux9973_BOOL],aux9974_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux9975_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9976_BOOL);
constraint int_lin_eq([-1,1,1],[aux9977,2,s_00009],0);
constraint int_lt_reif(s_00020,aux9977,aux9978_BOOL);
constraint int_le_reif(s_00009, s_00020,aux9979_BOOL);
constraint array_bool_and([aux9975_BOOL,aux9976_BOOL,w_00004_00009_BOOL,aux9978_BOOL,aux9979_BOOL],aux9980_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux9868_INTEGER,aux9874_INTEGER,aux9880_INTEGER,aux9886_INTEGER,aux9892_INTEGER,aux9898_INTEGER,aux9904_INTEGER,aux9910_INTEGER,aux9916_INTEGER,aux9922_INTEGER,aux9926_INTEGER,aux9932_INTEGER,aux9938_INTEGER,aux9944_INTEGER,aux9950_INTEGER,aux9956_INTEGER,aux9962_INTEGER,aux9968_INTEGER,aux9974_INTEGER,aux9980_INTEGER,1],0,aux9981_BOOL);
constraint array_bool_and([aux7720_BOOL,aux7839_BOOL,aux7958_BOOL,aux8077_BOOL,aux8196_BOOL,aux8315_BOOL,aux8434_BOOL,aux8553_BOOL,aux8672_BOOL,aux8791_BOOL,aux8910_BOOL,aux9029_BOOL,aux9148_BOOL,aux9267_BOOL,aux9386_BOOL,aux9505_BOOL,aux9624_BOOL,aux9743_BOOL,aux9862_BOOL,aux9981_BOOL],aux9982_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[TWorkers_00004_00001_INTEGER,TWorkers_00004_00002_INTEGER,TWorkers_00004_00003_INTEGER,TWorkers_00004_00004_INTEGER,TWorkers_00004_00005_INTEGER,TWorkers_00004_00006_INTEGER,TWorkers_00004_00007_INTEGER,TWorkers_00004_00008_INTEGER,TWorkers_00004_00009_INTEGER,TWorkers_00004_00010_INTEGER,TWorkers_00004_00011_INTEGER,TWorkers_00004_00012_INTEGER,TWorkers_00004_00013_INTEGER,TWorkers_00004_00014_INTEGER,TWorkers_00004_00015_INTEGER,TWorkers_00004_00016_INTEGER,TWorkers_00004_00017_INTEGER,TWorkers_00004_00018_INTEGER,TWorkers_00004_00019_INTEGER,TWorkers_00004_00020_INTEGER,1],0,aux9983_BOOL);
constraint int_lin_eq([-1,1,1],[aux9984,2,s_00004],0);
constraint int_lt_reif(s_00018,aux9984,aux9985_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux9986_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux9987_BOOL);
constraint int_le_reif(s_00004, s_00018,aux9988_BOOL);
constraint array_bool_and([aux9985_BOOL,aux9986_BOOL,aux9987_BOOL,w_00005_00004_BOOL,aux9988_BOOL],aux9989_BOOL);
constraint int_lin_eq([-1,1,1],[aux9990,2,s_00006],0);
constraint int_lt_reif(s_00018,aux9990,aux9991_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux9992_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux9993_BOOL);
constraint int_le_reif(s_00006, s_00018,aux9994_BOOL);
constraint array_bool_and([aux9991_BOOL,aux9992_BOOL,aux9993_BOOL,w_00005_00006_BOOL,aux9994_BOOL],aux9995_BOOL);
constraint int_lin_eq([-1,1,1],[aux9996,2,s_00008],0);
constraint int_lt_reif(s_00018,aux9996,aux9997_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux9998_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux9999_BOOL);
constraint int_le_reif(s_00008, s_00018,aux10000_BOOL);
constraint array_bool_and([aux9997_BOOL,aux9998_BOOL,aux9999_BOOL,w_00005_00008_BOOL,aux10000_BOOL],aux10001_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10002,s_00009],0);
constraint int_lt_reif(s_00018,aux10002,aux10003_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux10004_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux10005_BOOL);
constraint int_le_reif(s_00009, s_00018,aux10006_BOOL);
constraint array_bool_and([aux10003_BOOL,aux10004_BOOL,aux10005_BOOL,w_00005_00009_BOOL,aux10006_BOOL],aux10007_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10008,s_00003],0);
constraint int_lt_reif(s_00018,aux10008,aux10009_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux10010_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux10011_BOOL);
constraint int_le_reif(s_00003, s_00018,aux10012_BOOL);
constraint array_bool_and([aux10009_BOOL,aux10010_BOOL,aux10011_BOOL,w_00005_00003_BOOL,aux10012_BOOL],aux10013_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10014,s_00005],0);
constraint int_lt_reif(s_00018,aux10014,aux10015_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10016_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux10017_BOOL);
constraint int_le_reif(s_00005, s_00018,aux10018_BOOL);
constraint array_bool_and([aux10015_BOOL,aux10016_BOOL,aux10017_BOOL,w_00005_00005_BOOL,aux10018_BOOL],aux10019_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10020,s_00015],0);
constraint int_lt_reif(s_00018,aux10020,aux10021_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux10022_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux10023_BOOL);
constraint int_le_reif(s_00015, s_00018,aux10024_BOOL);
constraint array_bool_and([aux10021_BOOL,aux10022_BOOL,aux10023_BOOL,w_00005_00015_BOOL,aux10024_BOOL],aux10025_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10026,s_00007],0);
constraint int_lt_reif(s_00018,aux10026,aux10027_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux10028_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux10029_BOOL);
constraint int_le_reif(s_00007, s_00018,aux10030_BOOL);
constraint array_bool_and([aux10027_BOOL,aux10028_BOOL,aux10029_BOOL,w_00005_00007_BOOL,aux10030_BOOL],aux10031_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux10032,s_00001],0);
constraint int_lt_reif(s_00018,aux10032,aux10033_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux10034_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux10035_BOOL);
constraint int_le_reif(s_00001, s_00018,aux10036_BOOL);
constraint array_bool_and([aux10033_BOOL,aux10034_BOOL,aux10035_BOOL,w_00005_00001_BOOL,aux10036_BOOL],aux10037_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux10038,s_00002],0);
constraint int_lt_reif(s_00018,aux10038,aux10039_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux10040_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux10041_BOOL);
constraint int_le_reif(s_00002, s_00018,aux10042_BOOL);
constraint array_bool_and([aux10039_BOOL,aux10040_BOOL,aux10041_BOOL,w_00005_00002_BOOL,aux10042_BOOL],aux10043_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10044,s_00014],0);
constraint int_lt_reif(s_00018,aux10044,aux10045_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10046_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux10047_BOOL);
constraint int_le_reif(s_00014, s_00018,aux10048_BOOL);
constraint array_bool_and([aux10045_BOOL,aux10046_BOOL,aux10047_BOOL,w_00005_00014_BOOL,aux10048_BOOL],aux10049_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10050,s_00011],0);
constraint int_lt_reif(s_00018,aux10050,aux10051_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux10052_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux10053_BOOL);
constraint int_le_reif(s_00011, s_00018,aux10054_BOOL);
constraint array_bool_and([aux10051_BOOL,aux10052_BOOL,aux10053_BOOL,w_00005_00011_BOOL,aux10054_BOOL],aux10055_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10056,s_00013],0);
constraint int_lt_reif(s_00018,aux10056,aux10057_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux10058_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux10059_BOOL);
constraint int_le_reif(s_00013, s_00018,aux10060_BOOL);
constraint array_bool_and([aux10057_BOOL,aux10058_BOOL,aux10059_BOOL,w_00005_00013_BOOL,aux10060_BOOL],aux10061_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10062,s_00020],0);
constraint int_lt_reif(s_00018,aux10062,aux10063_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux10064_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux10065_BOOL);
constraint int_le_reif(s_00020, s_00018,aux10066_BOOL);
constraint array_bool_and([aux10063_BOOL,aux10064_BOOL,aux10065_BOOL,w_00005_00020_BOOL,aux10066_BOOL],aux10067_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10068,s_00016],0);
constraint int_lt_reif(s_00018,aux10068,aux10069_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux10070_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux10071_BOOL);
constraint int_le_reif(s_00016, s_00018,aux10072_BOOL);
constraint array_bool_and([aux10069_BOOL,aux10070_BOOL,aux10071_BOOL,w_00005_00016_BOOL,aux10072_BOOL],aux10073_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux10074,s_00012],0);
constraint int_lt_reif(s_00018,aux10074,aux10075_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux10076_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux10077_BOOL);
constraint int_le_reif(s_00012, s_00018,aux10078_BOOL);
constraint array_bool_and([aux10075_BOOL,aux10076_BOOL,aux10077_BOOL,w_00005_00012_BOOL,aux10078_BOOL],aux10079_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux10080,s_00017],0);
constraint int_lt_reif(s_00018,aux10080,aux10081_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux10082_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux10083_BOOL);
constraint int_le_reif(s_00017, s_00018,aux10084_BOOL);
constraint array_bool_and([aux10081_BOOL,aux10082_BOOL,aux10083_BOOL,w_00005_00017_BOOL,aux10084_BOOL],aux10085_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux10086,s_00019],0);
constraint int_lt_reif(s_00018,aux10086,aux10087_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux10088_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux10089_BOOL);
constraint int_le_reif(s_00019, s_00018,aux10090_BOOL);
constraint array_bool_and([aux10087_BOOL,aux10088_BOOL,aux10089_BOOL,w_00005_00019_BOOL,aux10090_BOOL],aux10091_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux10092,s_00010],0);
constraint int_lt_reif(s_00018,aux10092,aux10093_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux10094_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux10095_BOOL);
constraint int_le_reif(s_00010, s_00018,aux10096_BOOL);
constraint array_bool_and([aux10093_BOOL,aux10094_BOOL,aux10095_BOOL,w_00005_00010_BOOL,aux10096_BOOL],aux10097_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10098,s_00018],0);
constraint int_lt_reif(s_00018,aux10098,aux10099_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux10100_BOOL);
constraint array_bool_and([aux10099_BOOL,aux10100_BOOL,w_00005_00018_BOOL],aux10101_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux9989_INTEGER,aux9995_INTEGER,aux10001_INTEGER,aux10007_INTEGER,aux10013_INTEGER,aux10019_INTEGER,aux10025_INTEGER,aux10031_INTEGER,aux10037_INTEGER,aux10043_INTEGER,aux10049_INTEGER,aux10055_INTEGER,aux10061_INTEGER,aux10067_INTEGER,aux10073_INTEGER,aux10079_INTEGER,aux10085_INTEGER,aux10091_INTEGER,aux10097_INTEGER,aux10101_INTEGER,1],0,aux10102_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10103,s_00004],0);
constraint int_lt_reif(s_00014,aux10103,aux10104_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux10105_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10106_BOOL);
constraint int_le_reif(s_00004, s_00014,aux10107_BOOL);
constraint array_bool_and([aux10104_BOOL,aux10105_BOOL,aux10106_BOOL,w_00005_00004_BOOL,aux10107_BOOL],aux10108_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10109,s_00006],0);
constraint int_lt_reif(s_00014,aux10109,aux10110_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux10111_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10112_BOOL);
constraint int_le_reif(s_00006, s_00014,aux10113_BOOL);
constraint array_bool_and([aux10110_BOOL,aux10111_BOOL,aux10112_BOOL,w_00005_00006_BOOL,aux10113_BOOL],aux10114_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10115,s_00008],0);
constraint int_lt_reif(s_00014,aux10115,aux10116_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux10117_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10118_BOOL);
constraint int_le_reif(s_00008, s_00014,aux10119_BOOL);
constraint array_bool_and([aux10116_BOOL,aux10117_BOOL,aux10118_BOOL,w_00005_00008_BOOL,aux10119_BOOL],aux10120_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10121,s_00009],0);
constraint int_lt_reif(s_00014,aux10121,aux10122_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux10123_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10124_BOOL);
constraint int_le_reif(s_00009, s_00014,aux10125_BOOL);
constraint array_bool_and([aux10122_BOOL,aux10123_BOOL,aux10124_BOOL,w_00005_00009_BOOL,aux10125_BOOL],aux10126_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10127,s_00003],0);
constraint int_lt_reif(s_00014,aux10127,aux10128_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux10129_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10130_BOOL);
constraint int_le_reif(s_00003, s_00014,aux10131_BOOL);
constraint array_bool_and([aux10128_BOOL,aux10129_BOOL,aux10130_BOOL,w_00005_00003_BOOL,aux10131_BOOL],aux10132_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10133,s_00015],0);
constraint int_lt_reif(s_00014,aux10133,aux10134_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10135_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux10136_BOOL);
constraint int_le_reif(s_00015, s_00014,aux10137_BOOL);
constraint array_bool_and([aux10134_BOOL,aux10135_BOOL,aux10136_BOOL,w_00005_00015_BOOL,aux10137_BOOL],aux10138_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10139,s_00005],0);
constraint int_lt_reif(s_00014,aux10139,aux10140_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10141_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10142_BOOL);
constraint int_le_reif(s_00005, s_00014,aux10143_BOOL);
constraint array_bool_and([aux10140_BOOL,aux10141_BOOL,aux10142_BOOL,w_00005_00005_BOOL,aux10143_BOOL],aux10144_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10145,s_00018],0);
constraint int_lt_reif(s_00014,aux10145,aux10146_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10147_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux10148_BOOL);
constraint int_le_reif(s_00018, s_00014,aux10149_BOOL);
constraint array_bool_and([aux10146_BOOL,aux10147_BOOL,aux10148_BOOL,w_00005_00018_BOOL,aux10149_BOOL],aux10150_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10151,s_00007],0);
constraint int_lt_reif(s_00014,aux10151,aux10152_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux10153_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10154_BOOL);
constraint int_le_reif(s_00007, s_00014,aux10155_BOOL);
constraint array_bool_and([aux10152_BOOL,aux10153_BOOL,aux10154_BOOL,w_00005_00007_BOOL,aux10155_BOOL],aux10156_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux10157,s_00001],0);
constraint int_lt_reif(s_00014,aux10157,aux10158_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux10159_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10160_BOOL);
constraint int_le_reif(s_00001, s_00014,aux10161_BOOL);
constraint array_bool_and([aux10158_BOOL,aux10159_BOOL,aux10160_BOOL,w_00005_00001_BOOL,aux10161_BOOL],aux10162_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux10163,s_00002],0);
constraint int_lt_reif(s_00014,aux10163,aux10164_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux10165_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10166_BOOL);
constraint int_le_reif(s_00002, s_00014,aux10167_BOOL);
constraint array_bool_and([aux10164_BOOL,aux10165_BOOL,aux10166_BOOL,w_00005_00002_BOOL,aux10167_BOOL],aux10168_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10169,s_00011],0);
constraint int_lt_reif(s_00014,aux10169,aux10170_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux10171_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10172_BOOL);
constraint int_le_reif(s_00011, s_00014,aux10173_BOOL);
constraint array_bool_and([aux10170_BOOL,aux10171_BOOL,aux10172_BOOL,w_00005_00011_BOOL,aux10173_BOOL],aux10174_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10175,s_00020],0);
constraint int_lt_reif(s_00014,aux10175,aux10176_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10177_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux10178_BOOL);
constraint int_le_reif(s_00020, s_00014,aux10179_BOOL);
constraint array_bool_and([aux10176_BOOL,aux10177_BOOL,aux10178_BOOL,w_00005_00020_BOOL,aux10179_BOOL],aux10180_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10181,s_00013],0);
constraint int_lt_reif(s_00014,aux10181,aux10182_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux10183_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10184_BOOL);
constraint int_le_reif(s_00013, s_00014,aux10185_BOOL);
constraint array_bool_and([aux10182_BOOL,aux10183_BOOL,aux10184_BOOL,w_00005_00013_BOOL,aux10185_BOOL],aux10186_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10187,s_00016],0);
constraint int_lt_reif(s_00014,aux10187,aux10188_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10189_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux10190_BOOL);
constraint int_le_reif(s_00016, s_00014,aux10191_BOOL);
constraint array_bool_and([aux10188_BOOL,aux10189_BOOL,aux10190_BOOL,w_00005_00016_BOOL,aux10191_BOOL],aux10192_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux10193,s_00012],0);
constraint int_lt_reif(s_00014,aux10193,aux10194_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux10195_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10196_BOOL);
constraint int_le_reif(s_00012, s_00014,aux10197_BOOL);
constraint array_bool_and([aux10194_BOOL,aux10195_BOOL,aux10196_BOOL,w_00005_00012_BOOL,aux10197_BOOL],aux10198_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux10199,s_00017],0);
constraint int_lt_reif(s_00014,aux10199,aux10200_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10201_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux10202_BOOL);
constraint int_le_reif(s_00017, s_00014,aux10203_BOOL);
constraint array_bool_and([aux10200_BOOL,aux10201_BOOL,aux10202_BOOL,w_00005_00017_BOOL,aux10203_BOOL],aux10204_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux10205,s_00019],0);
constraint int_lt_reif(s_00014,aux10205,aux10206_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10207_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux10208_BOOL);
constraint int_le_reif(s_00019, s_00014,aux10209_BOOL);
constraint array_bool_and([aux10206_BOOL,aux10207_BOOL,aux10208_BOOL,w_00005_00019_BOOL,aux10209_BOOL],aux10210_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux10211,s_00010],0);
constraint int_lt_reif(s_00014,aux10211,aux10212_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux10213_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10214_BOOL);
constraint int_le_reif(s_00010, s_00014,aux10215_BOOL);
constraint array_bool_and([aux10212_BOOL,aux10213_BOOL,aux10214_BOOL,w_00005_00010_BOOL,aux10215_BOOL],aux10216_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10217,s_00014],0);
constraint int_lt_reif(s_00014,aux10217,aux10218_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10219_BOOL);
constraint array_bool_and([aux10218_BOOL,aux10219_BOOL,w_00005_00014_BOOL],aux10220_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux10108_INTEGER,aux10114_INTEGER,aux10120_INTEGER,aux10126_INTEGER,aux10132_INTEGER,aux10138_INTEGER,aux10144_INTEGER,aux10150_INTEGER,aux10156_INTEGER,aux10162_INTEGER,aux10168_INTEGER,aux10174_INTEGER,aux10180_INTEGER,aux10186_INTEGER,aux10192_INTEGER,aux10198_INTEGER,aux10204_INTEGER,aux10210_INTEGER,aux10216_INTEGER,aux10220_INTEGER,1],0,aux10221_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10222,s_00004],0);
constraint int_lt_reif(s_00005,aux10222,aux10223_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux10224_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10225_BOOL);
constraint int_le_reif(s_00004, s_00005,aux10226_BOOL);
constraint array_bool_and([aux10223_BOOL,aux10224_BOOL,aux10225_BOOL,w_00005_00004_BOOL,aux10226_BOOL],aux10227_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10228,s_00015],0);
constraint int_lt_reif(s_00005,aux10228,aux10229_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10230_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux10231_BOOL);
constraint int_le_reif(s_00015, s_00005,aux10232_BOOL);
constraint array_bool_and([aux10229_BOOL,aux10230_BOOL,aux10231_BOOL,w_00005_00015_BOOL,aux10232_BOOL],aux10233_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10234,s_00006],0);
constraint int_lt_reif(s_00005,aux10234,aux10235_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10236_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux10237_BOOL);
constraint int_le_reif(s_00006, s_00005,aux10238_BOOL);
constraint array_bool_and([aux10235_BOOL,aux10236_BOOL,aux10237_BOOL,w_00005_00006_BOOL,aux10238_BOOL],aux10239_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10240,s_00008],0);
constraint int_lt_reif(s_00005,aux10240,aux10241_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10242_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux10243_BOOL);
constraint int_le_reif(s_00008, s_00005,aux10244_BOOL);
constraint array_bool_and([aux10241_BOOL,aux10242_BOOL,aux10243_BOOL,w_00005_00008_BOOL,aux10244_BOOL],aux10245_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10246,s_00018],0);
constraint int_lt_reif(s_00005,aux10246,aux10247_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10248_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux10249_BOOL);
constraint int_le_reif(s_00018, s_00005,aux10250_BOOL);
constraint array_bool_and([aux10247_BOOL,aux10248_BOOL,aux10249_BOOL,w_00005_00018_BOOL,aux10250_BOOL],aux10251_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10252,s_00009],0);
constraint int_lt_reif(s_00005,aux10252,aux10253_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10254_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux10255_BOOL);
constraint int_le_reif(s_00009, s_00005,aux10256_BOOL);
constraint array_bool_and([aux10253_BOOL,aux10254_BOOL,aux10255_BOOL,w_00005_00009_BOOL,aux10256_BOOL],aux10257_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10258,s_00003],0);
constraint int_lt_reif(s_00005,aux10258,aux10259_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux10260_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10261_BOOL);
constraint int_le_reif(s_00003, s_00005,aux10262_BOOL);
constraint array_bool_and([aux10259_BOOL,aux10260_BOOL,aux10261_BOOL,w_00005_00003_BOOL,aux10262_BOOL],aux10263_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10264,s_00014],0);
constraint int_lt_reif(s_00005,aux10264,aux10265_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10266_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10267_BOOL);
constraint int_le_reif(s_00014, s_00005,aux10268_BOOL);
constraint array_bool_and([aux10265_BOOL,aux10266_BOOL,aux10267_BOOL,w_00005_00014_BOOL,aux10268_BOOL],aux10269_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10270,s_00007],0);
constraint int_lt_reif(s_00005,aux10270,aux10271_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10272_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux10273_BOOL);
constraint int_le_reif(s_00007, s_00005,aux10274_BOOL);
constraint array_bool_and([aux10271_BOOL,aux10272_BOOL,aux10273_BOOL,w_00005_00007_BOOL,aux10274_BOOL],aux10275_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux10276,s_00001],0);
constraint int_lt_reif(s_00005,aux10276,aux10277_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux10278_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10279_BOOL);
constraint int_le_reif(s_00001, s_00005,aux10280_BOOL);
constraint array_bool_and([aux10277_BOOL,aux10278_BOOL,aux10279_BOOL,w_00005_00001_BOOL,aux10280_BOOL],aux10281_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux10282,s_00002],0);
constraint int_lt_reif(s_00005,aux10282,aux10283_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux10284_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10285_BOOL);
constraint int_le_reif(s_00002, s_00005,aux10286_BOOL);
constraint array_bool_and([aux10283_BOOL,aux10284_BOOL,aux10285_BOOL,w_00005_00002_BOOL,aux10286_BOOL],aux10287_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10288,s_00020],0);
constraint int_lt_reif(s_00005,aux10288,aux10289_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10290_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux10291_BOOL);
constraint int_le_reif(s_00020, s_00005,aux10292_BOOL);
constraint array_bool_and([aux10289_BOOL,aux10290_BOOL,aux10291_BOOL,w_00005_00020_BOOL,aux10292_BOOL],aux10293_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10294,s_00011],0);
constraint int_lt_reif(s_00005,aux10294,aux10295_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10296_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux10297_BOOL);
constraint int_le_reif(s_00011, s_00005,aux10298_BOOL);
constraint array_bool_and([aux10295_BOOL,aux10296_BOOL,aux10297_BOOL,w_00005_00011_BOOL,aux10298_BOOL],aux10299_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10300,s_00013],0);
constraint int_lt_reif(s_00005,aux10300,aux10301_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10302_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux10303_BOOL);
constraint int_le_reif(s_00013, s_00005,aux10304_BOOL);
constraint array_bool_and([aux10301_BOOL,aux10302_BOOL,aux10303_BOOL,w_00005_00013_BOOL,aux10304_BOOL],aux10305_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10306,s_00016],0);
constraint int_lt_reif(s_00005,aux10306,aux10307_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10308_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux10309_BOOL);
constraint int_le_reif(s_00016, s_00005,aux10310_BOOL);
constraint array_bool_and([aux10307_BOOL,aux10308_BOOL,aux10309_BOOL,w_00005_00016_BOOL,aux10310_BOOL],aux10311_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux10312,s_00012],0);
constraint int_lt_reif(s_00005,aux10312,aux10313_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10314_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux10315_BOOL);
constraint int_le_reif(s_00012, s_00005,aux10316_BOOL);
constraint array_bool_and([aux10313_BOOL,aux10314_BOOL,aux10315_BOOL,w_00005_00012_BOOL,aux10316_BOOL],aux10317_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux10318,s_00017],0);
constraint int_lt_reif(s_00005,aux10318,aux10319_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10320_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux10321_BOOL);
constraint int_le_reif(s_00017, s_00005,aux10322_BOOL);
constraint array_bool_and([aux10319_BOOL,aux10320_BOOL,aux10321_BOOL,w_00005_00017_BOOL,aux10322_BOOL],aux10323_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux10324,s_00019],0);
constraint int_lt_reif(s_00005,aux10324,aux10325_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10326_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux10327_BOOL);
constraint int_le_reif(s_00019, s_00005,aux10328_BOOL);
constraint array_bool_and([aux10325_BOOL,aux10326_BOOL,aux10327_BOOL,w_00005_00019_BOOL,aux10328_BOOL],aux10329_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux10330,s_00010],0);
constraint int_lt_reif(s_00005,aux10330,aux10331_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10332_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux10333_BOOL);
constraint int_le_reif(s_00010, s_00005,aux10334_BOOL);
constraint array_bool_and([aux10331_BOOL,aux10332_BOOL,aux10333_BOOL,w_00005_00010_BOOL,aux10334_BOOL],aux10335_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10336,s_00005],0);
constraint int_lt_reif(s_00005,aux10336,aux10337_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10338_BOOL);
constraint array_bool_and([aux10337_BOOL,aux10338_BOOL,w_00005_00005_BOOL],aux10339_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux10227_INTEGER,aux10233_INTEGER,aux10239_INTEGER,aux10245_INTEGER,aux10251_INTEGER,aux10257_INTEGER,aux10263_INTEGER,aux10269_INTEGER,aux10275_INTEGER,aux10281_INTEGER,aux10287_INTEGER,aux10293_INTEGER,aux10299_INTEGER,aux10305_INTEGER,aux10311_INTEGER,aux10317_INTEGER,aux10323_INTEGER,aux10329_INTEGER,aux10335_INTEGER,aux10339_INTEGER,1],0,aux10340_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10341,s_00004],0);
constraint int_lt_reif(s_00010,aux10341,aux10342_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux10343_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux10344_BOOL);
constraint int_le_reif(s_00004, s_00010,aux10345_BOOL);
constraint array_bool_and([aux10342_BOOL,aux10343_BOOL,aux10344_BOOL,w_00005_00004_BOOL,aux10345_BOOL],aux10346_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10347,s_00006],0);
constraint int_lt_reif(s_00010,aux10347,aux10348_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux10349_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux10350_BOOL);
constraint int_le_reif(s_00006, s_00010,aux10351_BOOL);
constraint array_bool_and([aux10348_BOOL,aux10349_BOOL,aux10350_BOOL,w_00005_00006_BOOL,aux10351_BOOL],aux10352_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10353,s_00008],0);
constraint int_lt_reif(s_00010,aux10353,aux10354_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux10355_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux10356_BOOL);
constraint int_le_reif(s_00008, s_00010,aux10357_BOOL);
constraint array_bool_and([aux10354_BOOL,aux10355_BOOL,aux10356_BOOL,w_00005_00008_BOOL,aux10357_BOOL],aux10358_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10359,s_00009],0);
constraint int_lt_reif(s_00010,aux10359,aux10360_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux10361_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux10362_BOOL);
constraint int_le_reif(s_00009, s_00010,aux10363_BOOL);
constraint array_bool_and([aux10360_BOOL,aux10361_BOOL,aux10362_BOOL,w_00005_00009_BOOL,aux10363_BOOL],aux10364_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10365,s_00015],0);
constraint int_lt_reif(s_00010,aux10365,aux10366_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux10367_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux10368_BOOL);
constraint int_le_reif(s_00015, s_00010,aux10369_BOOL);
constraint array_bool_and([aux10366_BOOL,aux10367_BOOL,aux10368_BOOL,w_00005_00015_BOOL,aux10369_BOOL],aux10370_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10371,s_00003],0);
constraint int_lt_reif(s_00010,aux10371,aux10372_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux10373_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux10374_BOOL);
constraint int_le_reif(s_00003, s_00010,aux10375_BOOL);
constraint array_bool_and([aux10372_BOOL,aux10373_BOOL,aux10374_BOOL,w_00005_00003_BOOL,aux10375_BOOL],aux10376_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10377,s_00018],0);
constraint int_lt_reif(s_00010,aux10377,aux10378_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux10379_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux10380_BOOL);
constraint int_le_reif(s_00018, s_00010,aux10381_BOOL);
constraint array_bool_and([aux10378_BOOL,aux10379_BOOL,aux10380_BOOL,w_00005_00018_BOOL,aux10381_BOOL],aux10382_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10383,s_00005],0);
constraint int_lt_reif(s_00010,aux10383,aux10384_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10385_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux10386_BOOL);
constraint int_le_reif(s_00005, s_00010,aux10387_BOOL);
constraint array_bool_and([aux10384_BOOL,aux10385_BOOL,aux10386_BOOL,w_00005_00005_BOOL,aux10387_BOOL],aux10388_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10389,s_00007],0);
constraint int_lt_reif(s_00010,aux10389,aux10390_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux10391_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux10392_BOOL);
constraint int_le_reif(s_00007, s_00010,aux10393_BOOL);
constraint array_bool_and([aux10390_BOOL,aux10391_BOOL,aux10392_BOOL,w_00005_00007_BOOL,aux10393_BOOL],aux10394_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux10395,s_00001],0);
constraint int_lt_reif(s_00010,aux10395,aux10396_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux10397_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux10398_BOOL);
constraint int_le_reif(s_00001, s_00010,aux10399_BOOL);
constraint array_bool_and([aux10396_BOOL,aux10397_BOOL,aux10398_BOOL,w_00005_00001_BOOL,aux10399_BOOL],aux10400_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux10401,s_00002],0);
constraint int_lt_reif(s_00010,aux10401,aux10402_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux10403_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux10404_BOOL);
constraint int_le_reif(s_00002, s_00010,aux10405_BOOL);
constraint array_bool_and([aux10402_BOOL,aux10403_BOOL,aux10404_BOOL,w_00005_00002_BOOL,aux10405_BOOL],aux10406_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10407,s_00014],0);
constraint int_lt_reif(s_00010,aux10407,aux10408_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux10409_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10410_BOOL);
constraint int_le_reif(s_00014, s_00010,aux10411_BOOL);
constraint array_bool_and([aux10408_BOOL,aux10409_BOOL,aux10410_BOOL,w_00005_00014_BOOL,aux10411_BOOL],aux10412_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10413,s_00020],0);
constraint int_lt_reif(s_00010,aux10413,aux10414_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux10415_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux10416_BOOL);
constraint int_le_reif(s_00020, s_00010,aux10417_BOOL);
constraint array_bool_and([aux10414_BOOL,aux10415_BOOL,aux10416_BOOL,w_00005_00020_BOOL,aux10417_BOOL],aux10418_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10419,s_00011],0);
constraint int_lt_reif(s_00010,aux10419,aux10420_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux10421_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux10422_BOOL);
constraint int_le_reif(s_00011, s_00010,aux10423_BOOL);
constraint array_bool_and([aux10420_BOOL,aux10421_BOOL,aux10422_BOOL,w_00005_00011_BOOL,aux10423_BOOL],aux10424_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10425,s_00013],0);
constraint int_lt_reif(s_00010,aux10425,aux10426_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux10427_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux10428_BOOL);
constraint int_le_reif(s_00013, s_00010,aux10429_BOOL);
constraint array_bool_and([aux10426_BOOL,aux10427_BOOL,aux10428_BOOL,w_00005_00013_BOOL,aux10429_BOOL],aux10430_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10431,s_00016],0);
constraint int_lt_reif(s_00010,aux10431,aux10432_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux10433_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux10434_BOOL);
constraint int_le_reif(s_00016, s_00010,aux10435_BOOL);
constraint array_bool_and([aux10432_BOOL,aux10433_BOOL,aux10434_BOOL,w_00005_00016_BOOL,aux10435_BOOL],aux10436_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux10437,s_00012],0);
constraint int_lt_reif(s_00010,aux10437,aux10438_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux10439_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux10440_BOOL);
constraint int_le_reif(s_00012, s_00010,aux10441_BOOL);
constraint array_bool_and([aux10438_BOOL,aux10439_BOOL,aux10440_BOOL,w_00005_00012_BOOL,aux10441_BOOL],aux10442_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux10443,s_00017],0);
constraint int_lt_reif(s_00010,aux10443,aux10444_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux10445_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux10446_BOOL);
constraint int_le_reif(s_00017, s_00010,aux10447_BOOL);
constraint array_bool_and([aux10444_BOOL,aux10445_BOOL,aux10446_BOOL,w_00005_00017_BOOL,aux10447_BOOL],aux10448_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux10449,s_00019],0);
constraint int_lt_reif(s_00010,aux10449,aux10450_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux10451_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux10452_BOOL);
constraint int_le_reif(s_00019, s_00010,aux10453_BOOL);
constraint array_bool_and([aux10450_BOOL,aux10451_BOOL,aux10452_BOOL,w_00005_00019_BOOL,aux10453_BOOL],aux10454_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux10455,s_00010],0);
constraint int_lt_reif(s_00010,aux10455,aux10456_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux10457_BOOL);
constraint array_bool_and([aux10456_BOOL,aux10457_BOOL,w_00005_00010_BOOL],aux10458_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux10346_INTEGER,aux10352_INTEGER,aux10358_INTEGER,aux10364_INTEGER,aux10370_INTEGER,aux10376_INTEGER,aux10382_INTEGER,aux10388_INTEGER,aux10394_INTEGER,aux10400_INTEGER,aux10406_INTEGER,aux10412_INTEGER,aux10418_INTEGER,aux10424_INTEGER,aux10430_INTEGER,aux10436_INTEGER,aux10442_INTEGER,aux10448_INTEGER,aux10454_INTEGER,aux10458_INTEGER,1],0,aux10459_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10460,s_00004],0);
constraint int_lt_reif(s_00009,aux10460,aux10461_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux10462_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux10463_BOOL);
constraint int_le_reif(s_00004, s_00009,aux10464_BOOL);
constraint array_bool_and([aux10461_BOOL,aux10462_BOOL,aux10463_BOOL,w_00005_00004_BOOL,aux10464_BOOL],aux10465_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10466,s_00006],0);
constraint int_lt_reif(s_00009,aux10466,aux10467_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux10468_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux10469_BOOL);
constraint int_le_reif(s_00006, s_00009,aux10470_BOOL);
constraint array_bool_and([aux10467_BOOL,aux10468_BOOL,aux10469_BOOL,w_00005_00006_BOOL,aux10470_BOOL],aux10471_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10472,s_00015],0);
constraint int_lt_reif(s_00009,aux10472,aux10473_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux10474_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux10475_BOOL);
constraint int_le_reif(s_00015, s_00009,aux10476_BOOL);
constraint array_bool_and([aux10473_BOOL,aux10474_BOOL,aux10475_BOOL,w_00005_00015_BOOL,aux10476_BOOL],aux10477_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10478,s_00008],0);
constraint int_lt_reif(s_00009,aux10478,aux10479_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux10480_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux10481_BOOL);
constraint int_le_reif(s_00008, s_00009,aux10482_BOOL);
constraint array_bool_and([aux10479_BOOL,aux10480_BOOL,aux10481_BOOL,w_00005_00008_BOOL,aux10482_BOOL],aux10483_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10484,s_00018],0);
constraint int_lt_reif(s_00009,aux10484,aux10485_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux10486_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux10487_BOOL);
constraint int_le_reif(s_00018, s_00009,aux10488_BOOL);
constraint array_bool_and([aux10485_BOOL,aux10486_BOOL,aux10487_BOOL,w_00005_00018_BOOL,aux10488_BOOL],aux10489_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10490,s_00003],0);
constraint int_lt_reif(s_00009,aux10490,aux10491_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux10492_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux10493_BOOL);
constraint int_le_reif(s_00003, s_00009,aux10494_BOOL);
constraint array_bool_and([aux10491_BOOL,aux10492_BOOL,aux10493_BOOL,w_00005_00003_BOOL,aux10494_BOOL],aux10495_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10496,s_00005],0);
constraint int_lt_reif(s_00009,aux10496,aux10497_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10498_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux10499_BOOL);
constraint int_le_reif(s_00005, s_00009,aux10500_BOOL);
constraint array_bool_and([aux10497_BOOL,aux10498_BOOL,aux10499_BOOL,w_00005_00005_BOOL,aux10500_BOOL],aux10501_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10502,s_00014],0);
constraint int_lt_reif(s_00009,aux10502,aux10503_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux10504_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10505_BOOL);
constraint int_le_reif(s_00014, s_00009,aux10506_BOOL);
constraint array_bool_and([aux10503_BOOL,aux10504_BOOL,aux10505_BOOL,w_00005_00014_BOOL,aux10506_BOOL],aux10507_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10508,s_00007],0);
constraint int_lt_reif(s_00009,aux10508,aux10509_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux10510_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux10511_BOOL);
constraint int_le_reif(s_00007, s_00009,aux10512_BOOL);
constraint array_bool_and([aux10509_BOOL,aux10510_BOOL,aux10511_BOOL,w_00005_00007_BOOL,aux10512_BOOL],aux10513_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux10514,s_00001],0);
constraint int_lt_reif(s_00009,aux10514,aux10515_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux10516_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux10517_BOOL);
constraint int_le_reif(s_00001, s_00009,aux10518_BOOL);
constraint array_bool_and([aux10515_BOOL,aux10516_BOOL,aux10517_BOOL,w_00005_00001_BOOL,aux10518_BOOL],aux10519_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux10520,s_00002],0);
constraint int_lt_reif(s_00009,aux10520,aux10521_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux10522_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux10523_BOOL);
constraint int_le_reif(s_00002, s_00009,aux10524_BOOL);
constraint array_bool_and([aux10521_BOOL,aux10522_BOOL,aux10523_BOOL,w_00005_00002_BOOL,aux10524_BOOL],aux10525_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10526,s_00020],0);
constraint int_lt_reif(s_00009,aux10526,aux10527_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux10528_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux10529_BOOL);
constraint int_le_reif(s_00020, s_00009,aux10530_BOOL);
constraint array_bool_and([aux10527_BOOL,aux10528_BOOL,aux10529_BOOL,w_00005_00020_BOOL,aux10530_BOOL],aux10531_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10532,s_00011],0);
constraint int_lt_reif(s_00009,aux10532,aux10533_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux10534_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux10535_BOOL);
constraint int_le_reif(s_00011, s_00009,aux10536_BOOL);
constraint array_bool_and([aux10533_BOOL,aux10534_BOOL,aux10535_BOOL,w_00005_00011_BOOL,aux10536_BOOL],aux10537_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10538,s_00013],0);
constraint int_lt_reif(s_00009,aux10538,aux10539_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux10540_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux10541_BOOL);
constraint int_le_reif(s_00013, s_00009,aux10542_BOOL);
constraint array_bool_and([aux10539_BOOL,aux10540_BOOL,aux10541_BOOL,w_00005_00013_BOOL,aux10542_BOOL],aux10543_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10544,s_00016],0);
constraint int_lt_reif(s_00009,aux10544,aux10545_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux10546_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux10547_BOOL);
constraint int_le_reif(s_00016, s_00009,aux10548_BOOL);
constraint array_bool_and([aux10545_BOOL,aux10546_BOOL,aux10547_BOOL,w_00005_00016_BOOL,aux10548_BOOL],aux10549_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux10550,s_00012],0);
constraint int_lt_reif(s_00009,aux10550,aux10551_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux10552_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux10553_BOOL);
constraint int_le_reif(s_00012, s_00009,aux10554_BOOL);
constraint array_bool_and([aux10551_BOOL,aux10552_BOOL,aux10553_BOOL,w_00005_00012_BOOL,aux10554_BOOL],aux10555_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux10556,s_00017],0);
constraint int_lt_reif(s_00009,aux10556,aux10557_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux10558_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux10559_BOOL);
constraint int_le_reif(s_00017, s_00009,aux10560_BOOL);
constraint array_bool_and([aux10557_BOOL,aux10558_BOOL,aux10559_BOOL,w_00005_00017_BOOL,aux10560_BOOL],aux10561_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux10562,s_00019],0);
constraint int_lt_reif(s_00009,aux10562,aux10563_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux10564_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux10565_BOOL);
constraint int_le_reif(s_00019, s_00009,aux10566_BOOL);
constraint array_bool_and([aux10563_BOOL,aux10564_BOOL,aux10565_BOOL,w_00005_00019_BOOL,aux10566_BOOL],aux10567_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux10568,s_00010],0);
constraint int_lt_reif(s_00009,aux10568,aux10569_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux10570_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux10571_BOOL);
constraint int_le_reif(s_00010, s_00009,aux10572_BOOL);
constraint array_bool_and([aux10569_BOOL,aux10570_BOOL,aux10571_BOOL,w_00005_00010_BOOL,aux10572_BOOL],aux10573_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10574,s_00009],0);
constraint int_lt_reif(s_00009,aux10574,aux10575_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux10576_BOOL);
constraint array_bool_and([aux10575_BOOL,aux10576_BOOL,w_00005_00009_BOOL],aux10577_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux10465_INTEGER,aux10471_INTEGER,aux10477_INTEGER,aux10483_INTEGER,aux10489_INTEGER,aux10495_INTEGER,aux10501_INTEGER,aux10507_INTEGER,aux10513_INTEGER,aux10519_INTEGER,aux10525_INTEGER,aux10531_INTEGER,aux10537_INTEGER,aux10543_INTEGER,aux10549_INTEGER,aux10555_INTEGER,aux10561_INTEGER,aux10567_INTEGER,aux10573_INTEGER,aux10577_INTEGER,1],0,aux10578_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10579,s_00004],0);
constraint int_lt_reif(s_00012,aux10579,aux10580_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux10581_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux10582_BOOL);
constraint int_le_reif(s_00004, s_00012,aux10583_BOOL);
constraint array_bool_and([aux10580_BOOL,aux10581_BOOL,aux10582_BOOL,w_00005_00004_BOOL,aux10583_BOOL],aux10584_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10585,s_00006],0);
constraint int_lt_reif(s_00012,aux10585,aux10586_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux10587_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux10588_BOOL);
constraint int_le_reif(s_00006, s_00012,aux10589_BOOL);
constraint array_bool_and([aux10586_BOOL,aux10587_BOOL,aux10588_BOOL,w_00005_00006_BOOL,aux10589_BOOL],aux10590_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10591,s_00008],0);
constraint int_lt_reif(s_00012,aux10591,aux10592_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux10593_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux10594_BOOL);
constraint int_le_reif(s_00008, s_00012,aux10595_BOOL);
constraint array_bool_and([aux10592_BOOL,aux10593_BOOL,aux10594_BOOL,w_00005_00008_BOOL,aux10595_BOOL],aux10596_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10597,s_00009],0);
constraint int_lt_reif(s_00012,aux10597,aux10598_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux10599_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux10600_BOOL);
constraint int_le_reif(s_00009, s_00012,aux10601_BOOL);
constraint array_bool_and([aux10598_BOOL,aux10599_BOOL,aux10600_BOOL,w_00005_00009_BOOL,aux10601_BOOL],aux10602_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10603,s_00003],0);
constraint int_lt_reif(s_00012,aux10603,aux10604_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux10605_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux10606_BOOL);
constraint int_le_reif(s_00003, s_00012,aux10607_BOOL);
constraint array_bool_and([aux10604_BOOL,aux10605_BOOL,aux10606_BOOL,w_00005_00003_BOOL,aux10607_BOOL],aux10608_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10609,s_00015],0);
constraint int_lt_reif(s_00012,aux10609,aux10610_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux10611_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux10612_BOOL);
constraint int_le_reif(s_00015, s_00012,aux10613_BOOL);
constraint array_bool_and([aux10610_BOOL,aux10611_BOOL,aux10612_BOOL,w_00005_00015_BOOL,aux10613_BOOL],aux10614_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10615,s_00005],0);
constraint int_lt_reif(s_00012,aux10615,aux10616_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10617_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux10618_BOOL);
constraint int_le_reif(s_00005, s_00012,aux10619_BOOL);
constraint array_bool_and([aux10616_BOOL,aux10617_BOOL,aux10618_BOOL,w_00005_00005_BOOL,aux10619_BOOL],aux10620_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10621,s_00018],0);
constraint int_lt_reif(s_00012,aux10621,aux10622_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux10623_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux10624_BOOL);
constraint int_le_reif(s_00018, s_00012,aux10625_BOOL);
constraint array_bool_and([aux10622_BOOL,aux10623_BOOL,aux10624_BOOL,w_00005_00018_BOOL,aux10625_BOOL],aux10626_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10627,s_00007],0);
constraint int_lt_reif(s_00012,aux10627,aux10628_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux10629_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux10630_BOOL);
constraint int_le_reif(s_00007, s_00012,aux10631_BOOL);
constraint array_bool_and([aux10628_BOOL,aux10629_BOOL,aux10630_BOOL,w_00005_00007_BOOL,aux10631_BOOL],aux10632_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux10633,s_00001],0);
constraint int_lt_reif(s_00012,aux10633,aux10634_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux10635_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux10636_BOOL);
constraint int_le_reif(s_00001, s_00012,aux10637_BOOL);
constraint array_bool_and([aux10634_BOOL,aux10635_BOOL,aux10636_BOOL,w_00005_00001_BOOL,aux10637_BOOL],aux10638_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux10639,s_00002],0);
constraint int_lt_reif(s_00012,aux10639,aux10640_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux10641_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux10642_BOOL);
constraint int_le_reif(s_00002, s_00012,aux10643_BOOL);
constraint array_bool_and([aux10640_BOOL,aux10641_BOOL,aux10642_BOOL,w_00005_00002_BOOL,aux10643_BOOL],aux10644_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10645,s_00014],0);
constraint int_lt_reif(s_00012,aux10645,aux10646_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux10647_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10648_BOOL);
constraint int_le_reif(s_00014, s_00012,aux10649_BOOL);
constraint array_bool_and([aux10646_BOOL,aux10647_BOOL,aux10648_BOOL,w_00005_00014_BOOL,aux10649_BOOL],aux10650_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10651,s_00011],0);
constraint int_lt_reif(s_00012,aux10651,aux10652_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux10653_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux10654_BOOL);
constraint int_le_reif(s_00011, s_00012,aux10655_BOOL);
constraint array_bool_and([aux10652_BOOL,aux10653_BOOL,aux10654_BOOL,w_00005_00011_BOOL,aux10655_BOOL],aux10656_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10657,s_00020],0);
constraint int_lt_reif(s_00012,aux10657,aux10658_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux10659_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux10660_BOOL);
constraint int_le_reif(s_00020, s_00012,aux10661_BOOL);
constraint array_bool_and([aux10658_BOOL,aux10659_BOOL,aux10660_BOOL,w_00005_00020_BOOL,aux10661_BOOL],aux10662_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10663,s_00013],0);
constraint int_lt_reif(s_00012,aux10663,aux10664_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux10665_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux10666_BOOL);
constraint int_le_reif(s_00013, s_00012,aux10667_BOOL);
constraint array_bool_and([aux10664_BOOL,aux10665_BOOL,aux10666_BOOL,w_00005_00013_BOOL,aux10667_BOOL],aux10668_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10669,s_00016],0);
constraint int_lt_reif(s_00012,aux10669,aux10670_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux10671_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux10672_BOOL);
constraint int_le_reif(s_00016, s_00012,aux10673_BOOL);
constraint array_bool_and([aux10670_BOOL,aux10671_BOOL,aux10672_BOOL,w_00005_00016_BOOL,aux10673_BOOL],aux10674_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux10675,s_00017],0);
constraint int_lt_reif(s_00012,aux10675,aux10676_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux10677_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux10678_BOOL);
constraint int_le_reif(s_00017, s_00012,aux10679_BOOL);
constraint array_bool_and([aux10676_BOOL,aux10677_BOOL,aux10678_BOOL,w_00005_00017_BOOL,aux10679_BOOL],aux10680_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux10681,s_00019],0);
constraint int_lt_reif(s_00012,aux10681,aux10682_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux10683_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux10684_BOOL);
constraint int_le_reif(s_00019, s_00012,aux10685_BOOL);
constraint array_bool_and([aux10682_BOOL,aux10683_BOOL,aux10684_BOOL,w_00005_00019_BOOL,aux10685_BOOL],aux10686_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux10687,s_00010],0);
constraint int_lt_reif(s_00012,aux10687,aux10688_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux10689_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux10690_BOOL);
constraint int_le_reif(s_00010, s_00012,aux10691_BOOL);
constraint array_bool_and([aux10688_BOOL,aux10689_BOOL,aux10690_BOOL,w_00005_00010_BOOL,aux10691_BOOL],aux10692_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux10693,s_00012],0);
constraint int_lt_reif(s_00012,aux10693,aux10694_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux10695_BOOL);
constraint array_bool_and([aux10694_BOOL,aux10695_BOOL,w_00005_00012_BOOL],aux10696_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux10584_INTEGER,aux10590_INTEGER,aux10596_INTEGER,aux10602_INTEGER,aux10608_INTEGER,aux10614_INTEGER,aux10620_INTEGER,aux10626_INTEGER,aux10632_INTEGER,aux10638_INTEGER,aux10644_INTEGER,aux10650_INTEGER,aux10656_INTEGER,aux10662_INTEGER,aux10668_INTEGER,aux10674_INTEGER,aux10680_INTEGER,aux10686_INTEGER,aux10692_INTEGER,aux10696_INTEGER,1],0,aux10697_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10698,s_00004],0);
constraint int_lt_reif(s_00016,aux10698,aux10699_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux10700_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux10701_BOOL);
constraint int_le_reif(s_00004, s_00016,aux10702_BOOL);
constraint array_bool_and([aux10699_BOOL,aux10700_BOOL,aux10701_BOOL,w_00005_00004_BOOL,aux10702_BOOL],aux10703_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10704,s_00006],0);
constraint int_lt_reif(s_00016,aux10704,aux10705_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux10706_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux10707_BOOL);
constraint int_le_reif(s_00006, s_00016,aux10708_BOOL);
constraint array_bool_and([aux10705_BOOL,aux10706_BOOL,aux10707_BOOL,w_00005_00006_BOOL,aux10708_BOOL],aux10709_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10710,s_00008],0);
constraint int_lt_reif(s_00016,aux10710,aux10711_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux10712_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux10713_BOOL);
constraint int_le_reif(s_00008, s_00016,aux10714_BOOL);
constraint array_bool_and([aux10711_BOOL,aux10712_BOOL,aux10713_BOOL,w_00005_00008_BOOL,aux10714_BOOL],aux10715_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10716,s_00009],0);
constraint int_lt_reif(s_00016,aux10716,aux10717_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux10718_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux10719_BOOL);
constraint int_le_reif(s_00009, s_00016,aux10720_BOOL);
constraint array_bool_and([aux10717_BOOL,aux10718_BOOL,aux10719_BOOL,w_00005_00009_BOOL,aux10720_BOOL],aux10721_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10722,s_00003],0);
constraint int_lt_reif(s_00016,aux10722,aux10723_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux10724_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux10725_BOOL);
constraint int_le_reif(s_00003, s_00016,aux10726_BOOL);
constraint array_bool_and([aux10723_BOOL,aux10724_BOOL,aux10725_BOOL,w_00005_00003_BOOL,aux10726_BOOL],aux10727_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10728,s_00005],0);
constraint int_lt_reif(s_00016,aux10728,aux10729_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10730_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux10731_BOOL);
constraint int_le_reif(s_00005, s_00016,aux10732_BOOL);
constraint array_bool_and([aux10729_BOOL,aux10730_BOOL,aux10731_BOOL,w_00005_00005_BOOL,aux10732_BOOL],aux10733_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10734,s_00015],0);
constraint int_lt_reif(s_00016,aux10734,aux10735_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux10736_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux10737_BOOL);
constraint int_le_reif(s_00015, s_00016,aux10738_BOOL);
constraint array_bool_and([aux10735_BOOL,aux10736_BOOL,aux10737_BOOL,w_00005_00015_BOOL,aux10738_BOOL],aux10739_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10740,s_00007],0);
constraint int_lt_reif(s_00016,aux10740,aux10741_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux10742_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux10743_BOOL);
constraint int_le_reif(s_00007, s_00016,aux10744_BOOL);
constraint array_bool_and([aux10741_BOOL,aux10742_BOOL,aux10743_BOOL,w_00005_00007_BOOL,aux10744_BOOL],aux10745_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10746,s_00018],0);
constraint int_lt_reif(s_00016,aux10746,aux10747_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux10748_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux10749_BOOL);
constraint int_le_reif(s_00018, s_00016,aux10750_BOOL);
constraint array_bool_and([aux10747_BOOL,aux10748_BOOL,aux10749_BOOL,w_00005_00018_BOOL,aux10750_BOOL],aux10751_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux10752,s_00001],0);
constraint int_lt_reif(s_00016,aux10752,aux10753_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux10754_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux10755_BOOL);
constraint int_le_reif(s_00001, s_00016,aux10756_BOOL);
constraint array_bool_and([aux10753_BOOL,aux10754_BOOL,aux10755_BOOL,w_00005_00001_BOOL,aux10756_BOOL],aux10757_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux10758,s_00002],0);
constraint int_lt_reif(s_00016,aux10758,aux10759_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux10760_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux10761_BOOL);
constraint int_le_reif(s_00002, s_00016,aux10762_BOOL);
constraint array_bool_and([aux10759_BOOL,aux10760_BOOL,aux10761_BOOL,w_00005_00002_BOOL,aux10762_BOOL],aux10763_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10764,s_00014],0);
constraint int_lt_reif(s_00016,aux10764,aux10765_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10766_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux10767_BOOL);
constraint int_le_reif(s_00014, s_00016,aux10768_BOOL);
constraint array_bool_and([aux10765_BOOL,aux10766_BOOL,aux10767_BOOL,w_00005_00014_BOOL,aux10768_BOOL],aux10769_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10770,s_00011],0);
constraint int_lt_reif(s_00016,aux10770,aux10771_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux10772_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux10773_BOOL);
constraint int_le_reif(s_00011, s_00016,aux10774_BOOL);
constraint array_bool_and([aux10771_BOOL,aux10772_BOOL,aux10773_BOOL,w_00005_00011_BOOL,aux10774_BOOL],aux10775_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10776,s_00013],0);
constraint int_lt_reif(s_00016,aux10776,aux10777_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux10778_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux10779_BOOL);
constraint int_le_reif(s_00013, s_00016,aux10780_BOOL);
constraint array_bool_and([aux10777_BOOL,aux10778_BOOL,aux10779_BOOL,w_00005_00013_BOOL,aux10780_BOOL],aux10781_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10782,s_00020],0);
constraint int_lt_reif(s_00016,aux10782,aux10783_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux10784_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux10785_BOOL);
constraint int_le_reif(s_00020, s_00016,aux10786_BOOL);
constraint array_bool_and([aux10783_BOOL,aux10784_BOOL,aux10785_BOOL,w_00005_00020_BOOL,aux10786_BOOL],aux10787_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux10788,s_00012],0);
constraint int_lt_reif(s_00016,aux10788,aux10789_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux10790_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux10791_BOOL);
constraint int_le_reif(s_00012, s_00016,aux10792_BOOL);
constraint array_bool_and([aux10789_BOOL,aux10790_BOOL,aux10791_BOOL,w_00005_00012_BOOL,aux10792_BOOL],aux10793_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux10794,s_00017],0);
constraint int_lt_reif(s_00016,aux10794,aux10795_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux10796_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux10797_BOOL);
constraint int_le_reif(s_00017, s_00016,aux10798_BOOL);
constraint array_bool_and([aux10795_BOOL,aux10796_BOOL,aux10797_BOOL,w_00005_00017_BOOL,aux10798_BOOL],aux10799_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux10800,s_00019],0);
constraint int_lt_reif(s_00016,aux10800,aux10801_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux10802_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux10803_BOOL);
constraint int_le_reif(s_00019, s_00016,aux10804_BOOL);
constraint array_bool_and([aux10801_BOOL,aux10802_BOOL,aux10803_BOOL,w_00005_00019_BOOL,aux10804_BOOL],aux10805_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux10806,s_00010],0);
constraint int_lt_reif(s_00016,aux10806,aux10807_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux10808_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux10809_BOOL);
constraint int_le_reif(s_00010, s_00016,aux10810_BOOL);
constraint array_bool_and([aux10807_BOOL,aux10808_BOOL,aux10809_BOOL,w_00005_00010_BOOL,aux10810_BOOL],aux10811_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10812,s_00016],0);
constraint int_lt_reif(s_00016,aux10812,aux10813_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux10814_BOOL);
constraint array_bool_and([aux10813_BOOL,aux10814_BOOL,w_00005_00016_BOOL],aux10815_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux10703_INTEGER,aux10709_INTEGER,aux10715_INTEGER,aux10721_INTEGER,aux10727_INTEGER,aux10733_INTEGER,aux10739_INTEGER,aux10745_INTEGER,aux10751_INTEGER,aux10757_INTEGER,aux10763_INTEGER,aux10769_INTEGER,aux10775_INTEGER,aux10781_INTEGER,aux10787_INTEGER,aux10793_INTEGER,aux10799_INTEGER,aux10805_INTEGER,aux10811_INTEGER,aux10815_INTEGER,1],0,aux10816_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10817,s_00004],0);
constraint int_lt_reif(s_00008,aux10817,aux10818_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux10819_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux10820_BOOL);
constraint int_le_reif(s_00004, s_00008,aux10821_BOOL);
constraint array_bool_and([aux10818_BOOL,aux10819_BOOL,aux10820_BOOL,w_00005_00004_BOOL,aux10821_BOOL],aux10822_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10823,s_00006],0);
constraint int_lt_reif(s_00008,aux10823,aux10824_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux10825_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux10826_BOOL);
constraint int_le_reif(s_00006, s_00008,aux10827_BOOL);
constraint array_bool_and([aux10824_BOOL,aux10825_BOOL,aux10826_BOOL,w_00005_00006_BOOL,aux10827_BOOL],aux10828_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10829,s_00015],0);
constraint int_lt_reif(s_00008,aux10829,aux10830_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux10831_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux10832_BOOL);
constraint int_le_reif(s_00015, s_00008,aux10833_BOOL);
constraint array_bool_and([aux10830_BOOL,aux10831_BOOL,aux10832_BOOL,w_00005_00015_BOOL,aux10833_BOOL],aux10834_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10835,s_00018],0);
constraint int_lt_reif(s_00008,aux10835,aux10836_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux10837_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux10838_BOOL);
constraint int_le_reif(s_00018, s_00008,aux10839_BOOL);
constraint array_bool_and([aux10836_BOOL,aux10837_BOOL,aux10838_BOOL,w_00005_00018_BOOL,aux10839_BOOL],aux10840_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10841,s_00009],0);
constraint int_lt_reif(s_00008,aux10841,aux10842_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux10843_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux10844_BOOL);
constraint int_le_reif(s_00009, s_00008,aux10845_BOOL);
constraint array_bool_and([aux10842_BOOL,aux10843_BOOL,aux10844_BOOL,w_00005_00009_BOOL,aux10845_BOOL],aux10846_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10847,s_00003],0);
constraint int_lt_reif(s_00008,aux10847,aux10848_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux10849_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux10850_BOOL);
constraint int_le_reif(s_00003, s_00008,aux10851_BOOL);
constraint array_bool_and([aux10848_BOOL,aux10849_BOOL,aux10850_BOOL,w_00005_00003_BOOL,aux10851_BOOL],aux10852_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10853,s_00005],0);
constraint int_lt_reif(s_00008,aux10853,aux10854_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10855_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux10856_BOOL);
constraint int_le_reif(s_00005, s_00008,aux10857_BOOL);
constraint array_bool_and([aux10854_BOOL,aux10855_BOOL,aux10856_BOOL,w_00005_00005_BOOL,aux10857_BOOL],aux10858_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10859,s_00014],0);
constraint int_lt_reif(s_00008,aux10859,aux10860_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux10861_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10862_BOOL);
constraint int_le_reif(s_00014, s_00008,aux10863_BOOL);
constraint array_bool_and([aux10860_BOOL,aux10861_BOOL,aux10862_BOOL,w_00005_00014_BOOL,aux10863_BOOL],aux10864_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10865,s_00007],0);
constraint int_lt_reif(s_00008,aux10865,aux10866_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux10867_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux10868_BOOL);
constraint int_le_reif(s_00007, s_00008,aux10869_BOOL);
constraint array_bool_and([aux10866_BOOL,aux10867_BOOL,aux10868_BOOL,w_00005_00007_BOOL,aux10869_BOOL],aux10870_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux10871,s_00001],0);
constraint int_lt_reif(s_00008,aux10871,aux10872_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux10873_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux10874_BOOL);
constraint int_le_reif(s_00001, s_00008,aux10875_BOOL);
constraint array_bool_and([aux10872_BOOL,aux10873_BOOL,aux10874_BOOL,w_00005_00001_BOOL,aux10875_BOOL],aux10876_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux10877,s_00002],0);
constraint int_lt_reif(s_00008,aux10877,aux10878_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux10879_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux10880_BOOL);
constraint int_le_reif(s_00002, s_00008,aux10881_BOOL);
constraint array_bool_and([aux10878_BOOL,aux10879_BOOL,aux10880_BOOL,w_00005_00002_BOOL,aux10881_BOOL],aux10882_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10883,s_00020],0);
constraint int_lt_reif(s_00008,aux10883,aux10884_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux10885_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux10886_BOOL);
constraint int_le_reif(s_00020, s_00008,aux10887_BOOL);
constraint array_bool_and([aux10884_BOOL,aux10885_BOOL,aux10886_BOOL,w_00005_00020_BOOL,aux10887_BOOL],aux10888_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10889,s_00011],0);
constraint int_lt_reif(s_00008,aux10889,aux10890_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux10891_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux10892_BOOL);
constraint int_le_reif(s_00011, s_00008,aux10893_BOOL);
constraint array_bool_and([aux10890_BOOL,aux10891_BOOL,aux10892_BOOL,w_00005_00011_BOOL,aux10893_BOOL],aux10894_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10895,s_00013],0);
constraint int_lt_reif(s_00008,aux10895,aux10896_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux10897_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux10898_BOOL);
constraint int_le_reif(s_00013, s_00008,aux10899_BOOL);
constraint array_bool_and([aux10896_BOOL,aux10897_BOOL,aux10898_BOOL,w_00005_00013_BOOL,aux10899_BOOL],aux10900_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10901,s_00016],0);
constraint int_lt_reif(s_00008,aux10901,aux10902_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux10903_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux10904_BOOL);
constraint int_le_reif(s_00016, s_00008,aux10905_BOOL);
constraint array_bool_and([aux10902_BOOL,aux10903_BOOL,aux10904_BOOL,w_00005_00016_BOOL,aux10905_BOOL],aux10906_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux10907,s_00012],0);
constraint int_lt_reif(s_00008,aux10907,aux10908_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux10909_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux10910_BOOL);
constraint int_le_reif(s_00012, s_00008,aux10911_BOOL);
constraint array_bool_and([aux10908_BOOL,aux10909_BOOL,aux10910_BOOL,w_00005_00012_BOOL,aux10911_BOOL],aux10912_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux10913,s_00017],0);
constraint int_lt_reif(s_00008,aux10913,aux10914_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux10915_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux10916_BOOL);
constraint int_le_reif(s_00017, s_00008,aux10917_BOOL);
constraint array_bool_and([aux10914_BOOL,aux10915_BOOL,aux10916_BOOL,w_00005_00017_BOOL,aux10917_BOOL],aux10918_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux10919,s_00019],0);
constraint int_lt_reif(s_00008,aux10919,aux10920_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux10921_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux10922_BOOL);
constraint int_le_reif(s_00019, s_00008,aux10923_BOOL);
constraint array_bool_and([aux10920_BOOL,aux10921_BOOL,aux10922_BOOL,w_00005_00019_BOOL,aux10923_BOOL],aux10924_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux10925,s_00010],0);
constraint int_lt_reif(s_00008,aux10925,aux10926_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux10927_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux10928_BOOL);
constraint int_le_reif(s_00010, s_00008,aux10929_BOOL);
constraint array_bool_and([aux10926_BOOL,aux10927_BOOL,aux10928_BOOL,w_00005_00010_BOOL,aux10929_BOOL],aux10930_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10931,s_00008],0);
constraint int_lt_reif(s_00008,aux10931,aux10932_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux10933_BOOL);
constraint array_bool_and([aux10932_BOOL,aux10933_BOOL,w_00005_00008_BOOL],aux10934_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux10822_INTEGER,aux10828_INTEGER,aux10834_INTEGER,aux10840_INTEGER,aux10846_INTEGER,aux10852_INTEGER,aux10858_INTEGER,aux10864_INTEGER,aux10870_INTEGER,aux10876_INTEGER,aux10882_INTEGER,aux10888_INTEGER,aux10894_INTEGER,aux10900_INTEGER,aux10906_INTEGER,aux10912_INTEGER,aux10918_INTEGER,aux10924_INTEGER,aux10930_INTEGER,aux10934_INTEGER,1],0,aux10935_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10936,s_00004],0);
constraint int_lt_reif(s_00015,aux10936,aux10937_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux10938_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux10939_BOOL);
constraint int_le_reif(s_00004, s_00015,aux10940_BOOL);
constraint array_bool_and([aux10937_BOOL,aux10938_BOOL,aux10939_BOOL,w_00005_00004_BOOL,aux10940_BOOL],aux10941_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10942,s_00006],0);
constraint int_lt_reif(s_00015,aux10942,aux10943_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux10944_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux10945_BOOL);
constraint int_le_reif(s_00006, s_00015,aux10946_BOOL);
constraint array_bool_and([aux10943_BOOL,aux10944_BOOL,aux10945_BOOL,w_00005_00006_BOOL,aux10946_BOOL],aux10947_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10948,s_00008],0);
constraint int_lt_reif(s_00015,aux10948,aux10949_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux10950_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux10951_BOOL);
constraint int_le_reif(s_00008, s_00015,aux10952_BOOL);
constraint array_bool_and([aux10949_BOOL,aux10950_BOOL,aux10951_BOOL,w_00005_00008_BOOL,aux10952_BOOL],aux10953_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10954,s_00009],0);
constraint int_lt_reif(s_00015,aux10954,aux10955_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux10956_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux10957_BOOL);
constraint int_le_reif(s_00009, s_00015,aux10958_BOOL);
constraint array_bool_and([aux10955_BOOL,aux10956_BOOL,aux10957_BOOL,w_00005_00009_BOOL,aux10958_BOOL],aux10959_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10960,s_00003],0);
constraint int_lt_reif(s_00015,aux10960,aux10961_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux10962_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux10963_BOOL);
constraint int_le_reif(s_00003, s_00015,aux10964_BOOL);
constraint array_bool_and([aux10961_BOOL,aux10962_BOOL,aux10963_BOOL,w_00005_00003_BOOL,aux10964_BOOL],aux10965_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10966,s_00005],0);
constraint int_lt_reif(s_00015,aux10966,aux10967_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10968_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux10969_BOOL);
constraint int_le_reif(s_00005, s_00015,aux10970_BOOL);
constraint array_bool_and([aux10967_BOOL,aux10968_BOOL,aux10969_BOOL,w_00005_00005_BOOL,aux10970_BOOL],aux10971_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10972,s_00018],0);
constraint int_lt_reif(s_00015,aux10972,aux10973_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux10974_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux10975_BOOL);
constraint int_le_reif(s_00018, s_00015,aux10976_BOOL);
constraint array_bool_and([aux10973_BOOL,aux10974_BOOL,aux10975_BOOL,w_00005_00018_BOOL,aux10976_BOOL],aux10977_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10978,s_00007],0);
constraint int_lt_reif(s_00015,aux10978,aux10979_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux10980_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux10981_BOOL);
constraint int_le_reif(s_00007, s_00015,aux10982_BOOL);
constraint array_bool_and([aux10979_BOOL,aux10980_BOOL,aux10981_BOOL,w_00005_00007_BOOL,aux10982_BOOL],aux10983_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux10984,s_00001],0);
constraint int_lt_reif(s_00015,aux10984,aux10985_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux10986_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux10987_BOOL);
constraint int_le_reif(s_00001, s_00015,aux10988_BOOL);
constraint array_bool_and([aux10985_BOOL,aux10986_BOOL,aux10987_BOOL,w_00005_00001_BOOL,aux10988_BOOL],aux10989_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux10990,s_00002],0);
constraint int_lt_reif(s_00015,aux10990,aux10991_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux10992_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux10993_BOOL);
constraint int_le_reif(s_00002, s_00015,aux10994_BOOL);
constraint array_bool_and([aux10991_BOOL,aux10992_BOOL,aux10993_BOOL,w_00005_00002_BOOL,aux10994_BOOL],aux10995_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10996,s_00014],0);
constraint int_lt_reif(s_00015,aux10996,aux10997_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10998_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux10999_BOOL);
constraint int_le_reif(s_00014, s_00015,aux11000_BOOL);
constraint array_bool_and([aux10997_BOOL,aux10998_BOOL,aux10999_BOOL,w_00005_00014_BOOL,aux11000_BOOL],aux11001_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11002,s_00011],0);
constraint int_lt_reif(s_00015,aux11002,aux11003_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux11004_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux11005_BOOL);
constraint int_le_reif(s_00011, s_00015,aux11006_BOOL);
constraint array_bool_and([aux11003_BOOL,aux11004_BOOL,aux11005_BOOL,w_00005_00011_BOOL,aux11006_BOOL],aux11007_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11008,s_00020],0);
constraint int_lt_reif(s_00015,aux11008,aux11009_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux11010_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11011_BOOL);
constraint int_le_reif(s_00020, s_00015,aux11012_BOOL);
constraint array_bool_and([aux11009_BOOL,aux11010_BOOL,aux11011_BOOL,w_00005_00020_BOOL,aux11012_BOOL],aux11013_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11014,s_00013],0);
constraint int_lt_reif(s_00015,aux11014,aux11015_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux11016_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux11017_BOOL);
constraint int_le_reif(s_00013, s_00015,aux11018_BOOL);
constraint array_bool_and([aux11015_BOOL,aux11016_BOOL,aux11017_BOOL,w_00005_00013_BOOL,aux11018_BOOL],aux11019_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11020,s_00016],0);
constraint int_lt_reif(s_00015,aux11020,aux11021_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux11022_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux11023_BOOL);
constraint int_le_reif(s_00016, s_00015,aux11024_BOOL);
constraint array_bool_and([aux11021_BOOL,aux11022_BOOL,aux11023_BOOL,w_00005_00016_BOOL,aux11024_BOOL],aux11025_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux11026,s_00012],0);
constraint int_lt_reif(s_00015,aux11026,aux11027_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux11028_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux11029_BOOL);
constraint int_le_reif(s_00012, s_00015,aux11030_BOOL);
constraint array_bool_and([aux11027_BOOL,aux11028_BOOL,aux11029_BOOL,w_00005_00012_BOOL,aux11030_BOOL],aux11031_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux11032,s_00017],0);
constraint int_lt_reif(s_00015,aux11032,aux11033_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux11034_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11035_BOOL);
constraint int_le_reif(s_00017, s_00015,aux11036_BOOL);
constraint array_bool_and([aux11033_BOOL,aux11034_BOOL,aux11035_BOOL,w_00005_00017_BOOL,aux11036_BOOL],aux11037_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux11038,s_00019],0);
constraint int_lt_reif(s_00015,aux11038,aux11039_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux11040_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux11041_BOOL);
constraint int_le_reif(s_00019, s_00015,aux11042_BOOL);
constraint array_bool_and([aux11039_BOOL,aux11040_BOOL,aux11041_BOOL,w_00005_00019_BOOL,aux11042_BOOL],aux11043_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux11044,s_00010],0);
constraint int_lt_reif(s_00015,aux11044,aux11045_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux11046_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux11047_BOOL);
constraint int_le_reif(s_00010, s_00015,aux11048_BOOL);
constraint array_bool_and([aux11045_BOOL,aux11046_BOOL,aux11047_BOOL,w_00005_00010_BOOL,aux11048_BOOL],aux11049_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11050,s_00015],0);
constraint int_lt_reif(s_00015,aux11050,aux11051_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux11052_BOOL);
constraint array_bool_and([aux11051_BOOL,aux11052_BOOL,w_00005_00015_BOOL],aux11053_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux10941_INTEGER,aux10947_INTEGER,aux10953_INTEGER,aux10959_INTEGER,aux10965_INTEGER,aux10971_INTEGER,aux10977_INTEGER,aux10983_INTEGER,aux10989_INTEGER,aux10995_INTEGER,aux11001_INTEGER,aux11007_INTEGER,aux11013_INTEGER,aux11019_INTEGER,aux11025_INTEGER,aux11031_INTEGER,aux11037_INTEGER,aux11043_INTEGER,aux11049_INTEGER,aux11053_INTEGER,1],0,aux11054_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11055,s_00020],0);
constraint int_lt_reif(s_00020,aux11055,aux11056_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11057_BOOL);
constraint array_bool_and([aux11056_BOOL,aux11057_BOOL,w_00005_00020_BOOL],aux11058_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11059,s_00004],0);
constraint int_lt_reif(s_00020,aux11059,aux11060_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux11061_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11062_BOOL);
constraint int_le_reif(s_00004, s_00020,aux11063_BOOL);
constraint array_bool_and([aux11060_BOOL,aux11061_BOOL,aux11062_BOOL,w_00005_00004_BOOL,aux11063_BOOL],aux11064_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11065,s_00006],0);
constraint int_lt_reif(s_00020,aux11065,aux11066_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux11067_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11068_BOOL);
constraint int_le_reif(s_00006, s_00020,aux11069_BOOL);
constraint array_bool_and([aux11066_BOOL,aux11067_BOOL,aux11068_BOOL,w_00005_00006_BOOL,aux11069_BOOL],aux11070_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11071,s_00008],0);
constraint int_lt_reif(s_00020,aux11071,aux11072_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux11073_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11074_BOOL);
constraint int_le_reif(s_00008, s_00020,aux11075_BOOL);
constraint array_bool_and([aux11072_BOOL,aux11073_BOOL,aux11074_BOOL,w_00005_00008_BOOL,aux11075_BOOL],aux11076_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11077,s_00009],0);
constraint int_lt_reif(s_00020,aux11077,aux11078_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux11079_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11080_BOOL);
constraint int_le_reif(s_00009, s_00020,aux11081_BOOL);
constraint array_bool_and([aux11078_BOOL,aux11079_BOOL,aux11080_BOOL,w_00005_00009_BOOL,aux11081_BOOL],aux11082_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11083,s_00003],0);
constraint int_lt_reif(s_00020,aux11083,aux11084_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux11085_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11086_BOOL);
constraint int_le_reif(s_00003, s_00020,aux11087_BOOL);
constraint array_bool_and([aux11084_BOOL,aux11085_BOOL,aux11086_BOOL,w_00005_00003_BOOL,aux11087_BOOL],aux11088_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11089,s_00005],0);
constraint int_lt_reif(s_00020,aux11089,aux11090_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux11091_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11092_BOOL);
constraint int_le_reif(s_00005, s_00020,aux11093_BOOL);
constraint array_bool_and([aux11090_BOOL,aux11091_BOOL,aux11092_BOOL,w_00005_00005_BOOL,aux11093_BOOL],aux11094_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11095,s_00015],0);
constraint int_lt_reif(s_00020,aux11095,aux11096_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux11097_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11098_BOOL);
constraint int_le_reif(s_00015, s_00020,aux11099_BOOL);
constraint array_bool_and([aux11096_BOOL,aux11097_BOOL,aux11098_BOOL,w_00005_00015_BOOL,aux11099_BOOL],aux11100_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11101,s_00007],0);
constraint int_lt_reif(s_00020,aux11101,aux11102_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux11103_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11104_BOOL);
constraint int_le_reif(s_00007, s_00020,aux11105_BOOL);
constraint array_bool_and([aux11102_BOOL,aux11103_BOOL,aux11104_BOOL,w_00005_00007_BOOL,aux11105_BOOL],aux11106_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11107,s_00018],0);
constraint int_lt_reif(s_00020,aux11107,aux11108_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux11109_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11110_BOOL);
constraint int_le_reif(s_00018, s_00020,aux11111_BOOL);
constraint array_bool_and([aux11108_BOOL,aux11109_BOOL,aux11110_BOOL,w_00005_00018_BOOL,aux11111_BOOL],aux11112_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux11113,s_00001],0);
constraint int_lt_reif(s_00020,aux11113,aux11114_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux11115_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11116_BOOL);
constraint int_le_reif(s_00001, s_00020,aux11117_BOOL);
constraint array_bool_and([aux11114_BOOL,aux11115_BOOL,aux11116_BOOL,w_00005_00001_BOOL,aux11117_BOOL],aux11118_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux11119,s_00002],0);
constraint int_lt_reif(s_00020,aux11119,aux11120_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11121_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11122_BOOL);
constraint int_le_reif(s_00002, s_00020,aux11123_BOOL);
constraint array_bool_and([aux11120_BOOL,aux11121_BOOL,aux11122_BOOL,w_00005_00002_BOOL,aux11123_BOOL],aux11124_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11125,s_00014],0);
constraint int_lt_reif(s_00020,aux11125,aux11126_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux11127_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11128_BOOL);
constraint int_le_reif(s_00014, s_00020,aux11129_BOOL);
constraint array_bool_and([aux11126_BOOL,aux11127_BOOL,aux11128_BOOL,w_00005_00014_BOOL,aux11129_BOOL],aux11130_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11131,s_00011],0);
constraint int_lt_reif(s_00020,aux11131,aux11132_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux11133_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11134_BOOL);
constraint int_le_reif(s_00011, s_00020,aux11135_BOOL);
constraint array_bool_and([aux11132_BOOL,aux11133_BOOL,aux11134_BOOL,w_00005_00011_BOOL,aux11135_BOOL],aux11136_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11137,s_00013],0);
constraint int_lt_reif(s_00020,aux11137,aux11138_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux11139_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11140_BOOL);
constraint int_le_reif(s_00013, s_00020,aux11141_BOOL);
constraint array_bool_and([aux11138_BOOL,aux11139_BOOL,aux11140_BOOL,w_00005_00013_BOOL,aux11141_BOOL],aux11142_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11143,s_00016],0);
constraint int_lt_reif(s_00020,aux11143,aux11144_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux11145_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11146_BOOL);
constraint int_le_reif(s_00016, s_00020,aux11147_BOOL);
constraint array_bool_and([aux11144_BOOL,aux11145_BOOL,aux11146_BOOL,w_00005_00016_BOOL,aux11147_BOOL],aux11148_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux11149,s_00012],0);
constraint int_lt_reif(s_00020,aux11149,aux11150_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux11151_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11152_BOOL);
constraint int_le_reif(s_00012, s_00020,aux11153_BOOL);
constraint array_bool_and([aux11150_BOOL,aux11151_BOOL,aux11152_BOOL,w_00005_00012_BOOL,aux11153_BOOL],aux11154_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux11155,s_00017],0);
constraint int_lt_reif(s_00020,aux11155,aux11156_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11157_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11158_BOOL);
constraint int_le_reif(s_00017, s_00020,aux11159_BOOL);
constraint array_bool_and([aux11156_BOOL,aux11157_BOOL,aux11158_BOOL,w_00005_00017_BOOL,aux11159_BOOL],aux11160_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux11161,s_00019],0);
constraint int_lt_reif(s_00020,aux11161,aux11162_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux11163_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11164_BOOL);
constraint int_le_reif(s_00019, s_00020,aux11165_BOOL);
constraint array_bool_and([aux11162_BOOL,aux11163_BOOL,aux11164_BOOL,w_00005_00019_BOOL,aux11165_BOOL],aux11166_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux11167,s_00010],0);
constraint int_lt_reif(s_00020,aux11167,aux11168_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux11169_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11170_BOOL);
constraint int_le_reif(s_00010, s_00020,aux11171_BOOL);
constraint array_bool_and([aux11168_BOOL,aux11169_BOOL,aux11170_BOOL,w_00005_00010_BOOL,aux11171_BOOL],aux11172_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux11058_INTEGER,aux11064_INTEGER,aux11070_INTEGER,aux11076_INTEGER,aux11082_INTEGER,aux11088_INTEGER,aux11094_INTEGER,aux11100_INTEGER,aux11106_INTEGER,aux11112_INTEGER,aux11118_INTEGER,aux11124_INTEGER,aux11130_INTEGER,aux11136_INTEGER,aux11142_INTEGER,aux11148_INTEGER,aux11154_INTEGER,aux11160_INTEGER,aux11166_INTEGER,aux11172_INTEGER,1],0,aux11173_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11174,s_00004],0);
constraint int_lt_reif(s_00017,aux11174,aux11175_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux11176_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11177_BOOL);
constraint int_le_reif(s_00004, s_00017,aux11178_BOOL);
constraint array_bool_and([aux11175_BOOL,aux11176_BOOL,aux11177_BOOL,w_00005_00004_BOOL,aux11178_BOOL],aux11179_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11180,s_00006],0);
constraint int_lt_reif(s_00017,aux11180,aux11181_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux11182_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11183_BOOL);
constraint int_le_reif(s_00006, s_00017,aux11184_BOOL);
constraint array_bool_and([aux11181_BOOL,aux11182_BOOL,aux11183_BOOL,w_00005_00006_BOOL,aux11184_BOOL],aux11185_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11186,s_00008],0);
constraint int_lt_reif(s_00017,aux11186,aux11187_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux11188_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11189_BOOL);
constraint int_le_reif(s_00008, s_00017,aux11190_BOOL);
constraint array_bool_and([aux11187_BOOL,aux11188_BOOL,aux11189_BOOL,w_00005_00008_BOOL,aux11190_BOOL],aux11191_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11192,s_00009],0);
constraint int_lt_reif(s_00017,aux11192,aux11193_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux11194_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11195_BOOL);
constraint int_le_reif(s_00009, s_00017,aux11196_BOOL);
constraint array_bool_and([aux11193_BOOL,aux11194_BOOL,aux11195_BOOL,w_00005_00009_BOOL,aux11196_BOOL],aux11197_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11198,s_00003],0);
constraint int_lt_reif(s_00017,aux11198,aux11199_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux11200_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11201_BOOL);
constraint int_le_reif(s_00003, s_00017,aux11202_BOOL);
constraint array_bool_and([aux11199_BOOL,aux11200_BOOL,aux11201_BOOL,w_00005_00003_BOOL,aux11202_BOOL],aux11203_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11204,s_00005],0);
constraint int_lt_reif(s_00017,aux11204,aux11205_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux11206_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11207_BOOL);
constraint int_le_reif(s_00005, s_00017,aux11208_BOOL);
constraint array_bool_and([aux11205_BOOL,aux11206_BOOL,aux11207_BOOL,w_00005_00005_BOOL,aux11208_BOOL],aux11209_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11210,s_00015],0);
constraint int_lt_reif(s_00017,aux11210,aux11211_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux11212_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11213_BOOL);
constraint int_le_reif(s_00015, s_00017,aux11214_BOOL);
constraint array_bool_and([aux11211_BOOL,aux11212_BOOL,aux11213_BOOL,w_00005_00015_BOOL,aux11214_BOOL],aux11215_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11216,s_00007],0);
constraint int_lt_reif(s_00017,aux11216,aux11217_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux11218_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11219_BOOL);
constraint int_le_reif(s_00007, s_00017,aux11220_BOOL);
constraint array_bool_and([aux11217_BOOL,aux11218_BOOL,aux11219_BOOL,w_00005_00007_BOOL,aux11220_BOOL],aux11221_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11222,s_00018],0);
constraint int_lt_reif(s_00017,aux11222,aux11223_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11224_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux11225_BOOL);
constraint int_le_reif(s_00018, s_00017,aux11226_BOOL);
constraint array_bool_and([aux11223_BOOL,aux11224_BOOL,aux11225_BOOL,w_00005_00018_BOOL,aux11226_BOOL],aux11227_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux11228,s_00001],0);
constraint int_lt_reif(s_00017,aux11228,aux11229_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux11230_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11231_BOOL);
constraint int_le_reif(s_00001, s_00017,aux11232_BOOL);
constraint array_bool_and([aux11229_BOOL,aux11230_BOOL,aux11231_BOOL,w_00005_00001_BOOL,aux11232_BOOL],aux11233_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux11234,s_00002],0);
constraint int_lt_reif(s_00017,aux11234,aux11235_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11236_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11237_BOOL);
constraint int_le_reif(s_00002, s_00017,aux11238_BOOL);
constraint array_bool_and([aux11235_BOOL,aux11236_BOOL,aux11237_BOOL,w_00005_00002_BOOL,aux11238_BOOL],aux11239_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11240,s_00014],0);
constraint int_lt_reif(s_00017,aux11240,aux11241_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux11242_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11243_BOOL);
constraint int_le_reif(s_00014, s_00017,aux11244_BOOL);
constraint array_bool_and([aux11241_BOOL,aux11242_BOOL,aux11243_BOOL,w_00005_00014_BOOL,aux11244_BOOL],aux11245_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11246,s_00011],0);
constraint int_lt_reif(s_00017,aux11246,aux11247_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux11248_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11249_BOOL);
constraint int_le_reif(s_00011, s_00017,aux11250_BOOL);
constraint array_bool_and([aux11247_BOOL,aux11248_BOOL,aux11249_BOOL,w_00005_00011_BOOL,aux11250_BOOL],aux11251_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11252,s_00013],0);
constraint int_lt_reif(s_00017,aux11252,aux11253_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux11254_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11255_BOOL);
constraint int_le_reif(s_00013, s_00017,aux11256_BOOL);
constraint array_bool_and([aux11253_BOOL,aux11254_BOOL,aux11255_BOOL,w_00005_00013_BOOL,aux11256_BOOL],aux11257_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11258,s_00020],0);
constraint int_lt_reif(s_00017,aux11258,aux11259_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11260_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11261_BOOL);
constraint int_le_reif(s_00020, s_00017,aux11262_BOOL);
constraint array_bool_and([aux11259_BOOL,aux11260_BOOL,aux11261_BOOL,w_00005_00020_BOOL,aux11262_BOOL],aux11263_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11264,s_00016],0);
constraint int_lt_reif(s_00017,aux11264,aux11265_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux11266_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11267_BOOL);
constraint int_le_reif(s_00016, s_00017,aux11268_BOOL);
constraint array_bool_and([aux11265_BOOL,aux11266_BOOL,aux11267_BOOL,w_00005_00016_BOOL,aux11268_BOOL],aux11269_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux11270,s_00012],0);
constraint int_lt_reif(s_00017,aux11270,aux11271_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux11272_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11273_BOOL);
constraint int_le_reif(s_00012, s_00017,aux11274_BOOL);
constraint array_bool_and([aux11271_BOOL,aux11272_BOOL,aux11273_BOOL,w_00005_00012_BOOL,aux11274_BOOL],aux11275_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux11276,s_00019],0);
constraint int_lt_reif(s_00017,aux11276,aux11277_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11278_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux11279_BOOL);
constraint int_le_reif(s_00019, s_00017,aux11280_BOOL);
constraint array_bool_and([aux11277_BOOL,aux11278_BOOL,aux11279_BOOL,w_00005_00019_BOOL,aux11280_BOOL],aux11281_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux11282,s_00010],0);
constraint int_lt_reif(s_00017,aux11282,aux11283_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux11284_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11285_BOOL);
constraint int_le_reif(s_00010, s_00017,aux11286_BOOL);
constraint array_bool_and([aux11283_BOOL,aux11284_BOOL,aux11285_BOOL,w_00005_00010_BOOL,aux11286_BOOL],aux11287_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux11288,s_00017],0);
constraint int_lt_reif(s_00017,aux11288,aux11289_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11290_BOOL);
constraint array_bool_and([aux11289_BOOL,aux11290_BOOL,w_00005_00017_BOOL],aux11291_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux11179_INTEGER,aux11185_INTEGER,aux11191_INTEGER,aux11197_INTEGER,aux11203_INTEGER,aux11209_INTEGER,aux11215_INTEGER,aux11221_INTEGER,aux11227_INTEGER,aux11233_INTEGER,aux11239_INTEGER,aux11245_INTEGER,aux11251_INTEGER,aux11257_INTEGER,aux11263_INTEGER,aux11269_INTEGER,aux11275_INTEGER,aux11281_INTEGER,aux11287_INTEGER,aux11291_INTEGER,1],0,aux11292_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11293,s_00004],0);
constraint int_lt_reif(s_00019,aux11293,aux11294_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux11295_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux11296_BOOL);
constraint int_le_reif(s_00004, s_00019,aux11297_BOOL);
constraint array_bool_and([aux11294_BOOL,aux11295_BOOL,aux11296_BOOL,w_00005_00004_BOOL,aux11297_BOOL],aux11298_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11299,s_00006],0);
constraint int_lt_reif(s_00019,aux11299,aux11300_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux11301_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux11302_BOOL);
constraint int_le_reif(s_00006, s_00019,aux11303_BOOL);
constraint array_bool_and([aux11300_BOOL,aux11301_BOOL,aux11302_BOOL,w_00005_00006_BOOL,aux11303_BOOL],aux11304_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11305,s_00008],0);
constraint int_lt_reif(s_00019,aux11305,aux11306_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux11307_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux11308_BOOL);
constraint int_le_reif(s_00008, s_00019,aux11309_BOOL);
constraint array_bool_and([aux11306_BOOL,aux11307_BOOL,aux11308_BOOL,w_00005_00008_BOOL,aux11309_BOOL],aux11310_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11311,s_00009],0);
constraint int_lt_reif(s_00019,aux11311,aux11312_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux11313_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux11314_BOOL);
constraint int_le_reif(s_00009, s_00019,aux11315_BOOL);
constraint array_bool_and([aux11312_BOOL,aux11313_BOOL,aux11314_BOOL,w_00005_00009_BOOL,aux11315_BOOL],aux11316_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11317,s_00003],0);
constraint int_lt_reif(s_00019,aux11317,aux11318_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux11319_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux11320_BOOL);
constraint int_le_reif(s_00003, s_00019,aux11321_BOOL);
constraint array_bool_and([aux11318_BOOL,aux11319_BOOL,aux11320_BOOL,w_00005_00003_BOOL,aux11321_BOOL],aux11322_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11323,s_00005],0);
constraint int_lt_reif(s_00019,aux11323,aux11324_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux11325_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux11326_BOOL);
constraint int_le_reif(s_00005, s_00019,aux11327_BOOL);
constraint array_bool_and([aux11324_BOOL,aux11325_BOOL,aux11326_BOOL,w_00005_00005_BOOL,aux11327_BOOL],aux11328_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11329,s_00015],0);
constraint int_lt_reif(s_00019,aux11329,aux11330_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux11331_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux11332_BOOL);
constraint int_le_reif(s_00015, s_00019,aux11333_BOOL);
constraint array_bool_and([aux11330_BOOL,aux11331_BOOL,aux11332_BOOL,w_00005_00015_BOOL,aux11333_BOOL],aux11334_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11335,s_00007],0);
constraint int_lt_reif(s_00019,aux11335,aux11336_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux11337_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux11338_BOOL);
constraint int_le_reif(s_00007, s_00019,aux11339_BOOL);
constraint array_bool_and([aux11336_BOOL,aux11337_BOOL,aux11338_BOOL,w_00005_00007_BOOL,aux11339_BOOL],aux11340_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11341,s_00018],0);
constraint int_lt_reif(s_00019,aux11341,aux11342_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux11343_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux11344_BOOL);
constraint int_le_reif(s_00018, s_00019,aux11345_BOOL);
constraint array_bool_and([aux11342_BOOL,aux11343_BOOL,aux11344_BOOL,w_00005_00018_BOOL,aux11345_BOOL],aux11346_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux11347,s_00001],0);
constraint int_lt_reif(s_00019,aux11347,aux11348_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux11349_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux11350_BOOL);
constraint int_le_reif(s_00001, s_00019,aux11351_BOOL);
constraint array_bool_and([aux11348_BOOL,aux11349_BOOL,aux11350_BOOL,w_00005_00001_BOOL,aux11351_BOOL],aux11352_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux11353,s_00002],0);
constraint int_lt_reif(s_00019,aux11353,aux11354_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11355_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux11356_BOOL);
constraint int_le_reif(s_00002, s_00019,aux11357_BOOL);
constraint array_bool_and([aux11354_BOOL,aux11355_BOOL,aux11356_BOOL,w_00005_00002_BOOL,aux11357_BOOL],aux11358_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11359,s_00014],0);
constraint int_lt_reif(s_00019,aux11359,aux11360_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux11361_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux11362_BOOL);
constraint int_le_reif(s_00014, s_00019,aux11363_BOOL);
constraint array_bool_and([aux11360_BOOL,aux11361_BOOL,aux11362_BOOL,w_00005_00014_BOOL,aux11363_BOOL],aux11364_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11365,s_00011],0);
constraint int_lt_reif(s_00019,aux11365,aux11366_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux11367_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux11368_BOOL);
constraint int_le_reif(s_00011, s_00019,aux11369_BOOL);
constraint array_bool_and([aux11366_BOOL,aux11367_BOOL,aux11368_BOOL,w_00005_00011_BOOL,aux11369_BOOL],aux11370_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11371,s_00013],0);
constraint int_lt_reif(s_00019,aux11371,aux11372_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux11373_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux11374_BOOL);
constraint int_le_reif(s_00013, s_00019,aux11375_BOOL);
constraint array_bool_and([aux11372_BOOL,aux11373_BOOL,aux11374_BOOL,w_00005_00013_BOOL,aux11375_BOOL],aux11376_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11377,s_00020],0);
constraint int_lt_reif(s_00019,aux11377,aux11378_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux11379_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11380_BOOL);
constraint int_le_reif(s_00020, s_00019,aux11381_BOOL);
constraint array_bool_and([aux11378_BOOL,aux11379_BOOL,aux11380_BOOL,w_00005_00020_BOOL,aux11381_BOOL],aux11382_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11383,s_00016],0);
constraint int_lt_reif(s_00019,aux11383,aux11384_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux11385_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux11386_BOOL);
constraint int_le_reif(s_00016, s_00019,aux11387_BOOL);
constraint array_bool_and([aux11384_BOOL,aux11385_BOOL,aux11386_BOOL,w_00005_00016_BOOL,aux11387_BOOL],aux11388_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux11389,s_00012],0);
constraint int_lt_reif(s_00019,aux11389,aux11390_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux11391_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux11392_BOOL);
constraint int_le_reif(s_00012, s_00019,aux11393_BOOL);
constraint array_bool_and([aux11390_BOOL,aux11391_BOOL,aux11392_BOOL,w_00005_00012_BOOL,aux11393_BOOL],aux11394_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux11395,s_00017],0);
constraint int_lt_reif(s_00019,aux11395,aux11396_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11397_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux11398_BOOL);
constraint int_le_reif(s_00017, s_00019,aux11399_BOOL);
constraint array_bool_and([aux11396_BOOL,aux11397_BOOL,aux11398_BOOL,w_00005_00017_BOOL,aux11399_BOOL],aux11400_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux11401,s_00010],0);
constraint int_lt_reif(s_00019,aux11401,aux11402_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux11403_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux11404_BOOL);
constraint int_le_reif(s_00010, s_00019,aux11405_BOOL);
constraint array_bool_and([aux11402_BOOL,aux11403_BOOL,aux11404_BOOL,w_00005_00010_BOOL,aux11405_BOOL],aux11406_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux11407,s_00019],0);
constraint int_lt_reif(s_00019,aux11407,aux11408_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux11409_BOOL);
constraint array_bool_and([aux11408_BOOL,aux11409_BOOL,w_00005_00019_BOOL],aux11410_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux11298_INTEGER,aux11304_INTEGER,aux11310_INTEGER,aux11316_INTEGER,aux11322_INTEGER,aux11328_INTEGER,aux11334_INTEGER,aux11340_INTEGER,aux11346_INTEGER,aux11352_INTEGER,aux11358_INTEGER,aux11364_INTEGER,aux11370_INTEGER,aux11376_INTEGER,aux11382_INTEGER,aux11388_INTEGER,aux11394_INTEGER,aux11400_INTEGER,aux11406_INTEGER,aux11410_INTEGER,1],0,aux11411_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11412,s_00004],0);
constraint int_lt_reif(s_00007,aux11412,aux11413_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux11414_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux11415_BOOL);
constraint int_le_reif(s_00004, s_00007,aux11416_BOOL);
constraint array_bool_and([aux11413_BOOL,aux11414_BOOL,aux11415_BOOL,w_00005_00004_BOOL,aux11416_BOOL],aux11417_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11418,s_00006],0);
constraint int_lt_reif(s_00007,aux11418,aux11419_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux11420_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux11421_BOOL);
constraint int_le_reif(s_00006, s_00007,aux11422_BOOL);
constraint array_bool_and([aux11419_BOOL,aux11420_BOOL,aux11421_BOOL,w_00005_00006_BOOL,aux11422_BOOL],aux11423_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11424,s_00015],0);
constraint int_lt_reif(s_00007,aux11424,aux11425_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux11426_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux11427_BOOL);
constraint int_le_reif(s_00015, s_00007,aux11428_BOOL);
constraint array_bool_and([aux11425_BOOL,aux11426_BOOL,aux11427_BOOL,w_00005_00015_BOOL,aux11428_BOOL],aux11429_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11430,s_00008],0);
constraint int_lt_reif(s_00007,aux11430,aux11431_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux11432_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux11433_BOOL);
constraint int_le_reif(s_00008, s_00007,aux11434_BOOL);
constraint array_bool_and([aux11431_BOOL,aux11432_BOOL,aux11433_BOOL,w_00005_00008_BOOL,aux11434_BOOL],aux11435_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11436,s_00018],0);
constraint int_lt_reif(s_00007,aux11436,aux11437_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux11438_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux11439_BOOL);
constraint int_le_reif(s_00018, s_00007,aux11440_BOOL);
constraint array_bool_and([aux11437_BOOL,aux11438_BOOL,aux11439_BOOL,w_00005_00018_BOOL,aux11440_BOOL],aux11441_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11442,s_00009],0);
constraint int_lt_reif(s_00007,aux11442,aux11443_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux11444_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux11445_BOOL);
constraint int_le_reif(s_00009, s_00007,aux11446_BOOL);
constraint array_bool_and([aux11443_BOOL,aux11444_BOOL,aux11445_BOOL,w_00005_00009_BOOL,aux11446_BOOL],aux11447_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11448,s_00003],0);
constraint int_lt_reif(s_00007,aux11448,aux11449_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux11450_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux11451_BOOL);
constraint int_le_reif(s_00003, s_00007,aux11452_BOOL);
constraint array_bool_and([aux11449_BOOL,aux11450_BOOL,aux11451_BOOL,w_00005_00003_BOOL,aux11452_BOOL],aux11453_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11454,s_00005],0);
constraint int_lt_reif(s_00007,aux11454,aux11455_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux11456_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux11457_BOOL);
constraint int_le_reif(s_00005, s_00007,aux11458_BOOL);
constraint array_bool_and([aux11455_BOOL,aux11456_BOOL,aux11457_BOOL,w_00005_00005_BOOL,aux11458_BOOL],aux11459_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11460,s_00014],0);
constraint int_lt_reif(s_00007,aux11460,aux11461_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux11462_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux11463_BOOL);
constraint int_le_reif(s_00014, s_00007,aux11464_BOOL);
constraint array_bool_and([aux11461_BOOL,aux11462_BOOL,aux11463_BOOL,w_00005_00014_BOOL,aux11464_BOOL],aux11465_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux11466,s_00001],0);
constraint int_lt_reif(s_00007,aux11466,aux11467_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux11468_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux11469_BOOL);
constraint int_le_reif(s_00001, s_00007,aux11470_BOOL);
constraint array_bool_and([aux11467_BOOL,aux11468_BOOL,aux11469_BOOL,w_00005_00001_BOOL,aux11470_BOOL],aux11471_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux11472,s_00002],0);
constraint int_lt_reif(s_00007,aux11472,aux11473_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11474_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux11475_BOOL);
constraint int_le_reif(s_00002, s_00007,aux11476_BOOL);
constraint array_bool_and([aux11473_BOOL,aux11474_BOOL,aux11475_BOOL,w_00005_00002_BOOL,aux11476_BOOL],aux11477_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11478,s_00020],0);
constraint int_lt_reif(s_00007,aux11478,aux11479_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux11480_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11481_BOOL);
constraint int_le_reif(s_00020, s_00007,aux11482_BOOL);
constraint array_bool_and([aux11479_BOOL,aux11480_BOOL,aux11481_BOOL,w_00005_00020_BOOL,aux11482_BOOL],aux11483_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11484,s_00011],0);
constraint int_lt_reif(s_00007,aux11484,aux11485_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux11486_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux11487_BOOL);
constraint int_le_reif(s_00011, s_00007,aux11488_BOOL);
constraint array_bool_and([aux11485_BOOL,aux11486_BOOL,aux11487_BOOL,w_00005_00011_BOOL,aux11488_BOOL],aux11489_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11490,s_00013],0);
constraint int_lt_reif(s_00007,aux11490,aux11491_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux11492_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux11493_BOOL);
constraint int_le_reif(s_00013, s_00007,aux11494_BOOL);
constraint array_bool_and([aux11491_BOOL,aux11492_BOOL,aux11493_BOOL,w_00005_00013_BOOL,aux11494_BOOL],aux11495_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11496,s_00016],0);
constraint int_lt_reif(s_00007,aux11496,aux11497_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux11498_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux11499_BOOL);
constraint int_le_reif(s_00016, s_00007,aux11500_BOOL);
constraint array_bool_and([aux11497_BOOL,aux11498_BOOL,aux11499_BOOL,w_00005_00016_BOOL,aux11500_BOOL],aux11501_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux11502,s_00012],0);
constraint int_lt_reif(s_00007,aux11502,aux11503_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux11504_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux11505_BOOL);
constraint int_le_reif(s_00012, s_00007,aux11506_BOOL);
constraint array_bool_and([aux11503_BOOL,aux11504_BOOL,aux11505_BOOL,w_00005_00012_BOOL,aux11506_BOOL],aux11507_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux11508,s_00017],0);
constraint int_lt_reif(s_00007,aux11508,aux11509_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux11510_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11511_BOOL);
constraint int_le_reif(s_00017, s_00007,aux11512_BOOL);
constraint array_bool_and([aux11509_BOOL,aux11510_BOOL,aux11511_BOOL,w_00005_00017_BOOL,aux11512_BOOL],aux11513_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux11514,s_00019],0);
constraint int_lt_reif(s_00007,aux11514,aux11515_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux11516_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux11517_BOOL);
constraint int_le_reif(s_00019, s_00007,aux11518_BOOL);
constraint array_bool_and([aux11515_BOOL,aux11516_BOOL,aux11517_BOOL,w_00005_00019_BOOL,aux11518_BOOL],aux11519_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux11520,s_00010],0);
constraint int_lt_reif(s_00007,aux11520,aux11521_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux11522_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux11523_BOOL);
constraint int_le_reif(s_00010, s_00007,aux11524_BOOL);
constraint array_bool_and([aux11521_BOOL,aux11522_BOOL,aux11523_BOOL,w_00005_00010_BOOL,aux11524_BOOL],aux11525_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11526,s_00007],0);
constraint int_lt_reif(s_00007,aux11526,aux11527_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux11528_BOOL);
constraint array_bool_and([aux11527_BOOL,aux11528_BOOL,w_00005_00007_BOOL],aux11529_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux11417_INTEGER,aux11423_INTEGER,aux11429_INTEGER,aux11435_INTEGER,aux11441_INTEGER,aux11447_INTEGER,aux11453_INTEGER,aux11459_INTEGER,aux11465_INTEGER,aux11471_INTEGER,aux11477_INTEGER,aux11483_INTEGER,aux11489_INTEGER,aux11495_INTEGER,aux11501_INTEGER,aux11507_INTEGER,aux11513_INTEGER,aux11519_INTEGER,aux11525_INTEGER,aux11529_INTEGER,1],0,aux11530_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11531,s_00004],0);
constraint int_lt_reif(s_00011,aux11531,aux11532_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux11533_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux11534_BOOL);
constraint int_le_reif(s_00004, s_00011,aux11535_BOOL);
constraint array_bool_and([aux11532_BOOL,aux11533_BOOL,aux11534_BOOL,w_00005_00004_BOOL,aux11535_BOOL],aux11536_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11537,s_00006],0);
constraint int_lt_reif(s_00011,aux11537,aux11538_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux11539_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux11540_BOOL);
constraint int_le_reif(s_00006, s_00011,aux11541_BOOL);
constraint array_bool_and([aux11538_BOOL,aux11539_BOOL,aux11540_BOOL,w_00005_00006_BOOL,aux11541_BOOL],aux11542_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11543,s_00008],0);
constraint int_lt_reif(s_00011,aux11543,aux11544_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux11545_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux11546_BOOL);
constraint int_le_reif(s_00008, s_00011,aux11547_BOOL);
constraint array_bool_and([aux11544_BOOL,aux11545_BOOL,aux11546_BOOL,w_00005_00008_BOOL,aux11547_BOOL],aux11548_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11549,s_00009],0);
constraint int_lt_reif(s_00011,aux11549,aux11550_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux11551_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux11552_BOOL);
constraint int_le_reif(s_00009, s_00011,aux11553_BOOL);
constraint array_bool_and([aux11550_BOOL,aux11551_BOOL,aux11552_BOOL,w_00005_00009_BOOL,aux11553_BOOL],aux11554_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11555,s_00003],0);
constraint int_lt_reif(s_00011,aux11555,aux11556_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux11557_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux11558_BOOL);
constraint int_le_reif(s_00003, s_00011,aux11559_BOOL);
constraint array_bool_and([aux11556_BOOL,aux11557_BOOL,aux11558_BOOL,w_00005_00003_BOOL,aux11559_BOOL],aux11560_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11561,s_00015],0);
constraint int_lt_reif(s_00011,aux11561,aux11562_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux11563_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux11564_BOOL);
constraint int_le_reif(s_00015, s_00011,aux11565_BOOL);
constraint array_bool_and([aux11562_BOOL,aux11563_BOOL,aux11564_BOOL,w_00005_00015_BOOL,aux11565_BOOL],aux11566_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11567,s_00018],0);
constraint int_lt_reif(s_00011,aux11567,aux11568_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux11569_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux11570_BOOL);
constraint int_le_reif(s_00018, s_00011,aux11571_BOOL);
constraint array_bool_and([aux11568_BOOL,aux11569_BOOL,aux11570_BOOL,w_00005_00018_BOOL,aux11571_BOOL],aux11572_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11573,s_00005],0);
constraint int_lt_reif(s_00011,aux11573,aux11574_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux11575_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux11576_BOOL);
constraint int_le_reif(s_00005, s_00011,aux11577_BOOL);
constraint array_bool_and([aux11574_BOOL,aux11575_BOOL,aux11576_BOOL,w_00005_00005_BOOL,aux11577_BOOL],aux11578_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11579,s_00007],0);
constraint int_lt_reif(s_00011,aux11579,aux11580_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux11581_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux11582_BOOL);
constraint int_le_reif(s_00007, s_00011,aux11583_BOOL);
constraint array_bool_and([aux11580_BOOL,aux11581_BOOL,aux11582_BOOL,w_00005_00007_BOOL,aux11583_BOOL],aux11584_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux11585,s_00001],0);
constraint int_lt_reif(s_00011,aux11585,aux11586_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux11587_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux11588_BOOL);
constraint int_le_reif(s_00001, s_00011,aux11589_BOOL);
constraint array_bool_and([aux11586_BOOL,aux11587_BOOL,aux11588_BOOL,w_00005_00001_BOOL,aux11589_BOOL],aux11590_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux11591,s_00002],0);
constraint int_lt_reif(s_00011,aux11591,aux11592_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11593_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux11594_BOOL);
constraint int_le_reif(s_00002, s_00011,aux11595_BOOL);
constraint array_bool_and([aux11592_BOOL,aux11593_BOOL,aux11594_BOOL,w_00005_00002_BOOL,aux11595_BOOL],aux11596_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11597,s_00014],0);
constraint int_lt_reif(s_00011,aux11597,aux11598_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux11599_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux11600_BOOL);
constraint int_le_reif(s_00014, s_00011,aux11601_BOOL);
constraint array_bool_and([aux11598_BOOL,aux11599_BOOL,aux11600_BOOL,w_00005_00014_BOOL,aux11601_BOOL],aux11602_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11603,s_00020],0);
constraint int_lt_reif(s_00011,aux11603,aux11604_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux11605_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11606_BOOL);
constraint int_le_reif(s_00020, s_00011,aux11607_BOOL);
constraint array_bool_and([aux11604_BOOL,aux11605_BOOL,aux11606_BOOL,w_00005_00020_BOOL,aux11607_BOOL],aux11608_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11609,s_00013],0);
constraint int_lt_reif(s_00011,aux11609,aux11610_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux11611_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux11612_BOOL);
constraint int_le_reif(s_00013, s_00011,aux11613_BOOL);
constraint array_bool_and([aux11610_BOOL,aux11611_BOOL,aux11612_BOOL,w_00005_00013_BOOL,aux11613_BOOL],aux11614_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11615,s_00016],0);
constraint int_lt_reif(s_00011,aux11615,aux11616_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux11617_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux11618_BOOL);
constraint int_le_reif(s_00016, s_00011,aux11619_BOOL);
constraint array_bool_and([aux11616_BOOL,aux11617_BOOL,aux11618_BOOL,w_00005_00016_BOOL,aux11619_BOOL],aux11620_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux11621,s_00012],0);
constraint int_lt_reif(s_00011,aux11621,aux11622_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux11623_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux11624_BOOL);
constraint int_le_reif(s_00012, s_00011,aux11625_BOOL);
constraint array_bool_and([aux11622_BOOL,aux11623_BOOL,aux11624_BOOL,w_00005_00012_BOOL,aux11625_BOOL],aux11626_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux11627,s_00017],0);
constraint int_lt_reif(s_00011,aux11627,aux11628_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux11629_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11630_BOOL);
constraint int_le_reif(s_00017, s_00011,aux11631_BOOL);
constraint array_bool_and([aux11628_BOOL,aux11629_BOOL,aux11630_BOOL,w_00005_00017_BOOL,aux11631_BOOL],aux11632_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux11633,s_00019],0);
constraint int_lt_reif(s_00011,aux11633,aux11634_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux11635_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux11636_BOOL);
constraint int_le_reif(s_00019, s_00011,aux11637_BOOL);
constraint array_bool_and([aux11634_BOOL,aux11635_BOOL,aux11636_BOOL,w_00005_00019_BOOL,aux11637_BOOL],aux11638_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux11639,s_00010],0);
constraint int_lt_reif(s_00011,aux11639,aux11640_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux11641_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux11642_BOOL);
constraint int_le_reif(s_00010, s_00011,aux11643_BOOL);
constraint array_bool_and([aux11640_BOOL,aux11641_BOOL,aux11642_BOOL,w_00005_00010_BOOL,aux11643_BOOL],aux11644_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11645,s_00011],0);
constraint int_lt_reif(s_00011,aux11645,aux11646_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux11647_BOOL);
constraint array_bool_and([aux11646_BOOL,aux11647_BOOL,w_00005_00011_BOOL],aux11648_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux11536_INTEGER,aux11542_INTEGER,aux11548_INTEGER,aux11554_INTEGER,aux11560_INTEGER,aux11566_INTEGER,aux11572_INTEGER,aux11578_INTEGER,aux11584_INTEGER,aux11590_INTEGER,aux11596_INTEGER,aux11602_INTEGER,aux11608_INTEGER,aux11614_INTEGER,aux11620_INTEGER,aux11626_INTEGER,aux11632_INTEGER,aux11638_INTEGER,aux11644_INTEGER,aux11648_INTEGER,1],0,aux11649_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11650,s_00015],0);
constraint int_lt_reif(s_00004,aux11650,aux11651_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux11652_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux11653_BOOL);
constraint int_le_reif(s_00015, s_00004,aux11654_BOOL);
constraint array_bool_and([aux11651_BOOL,aux11652_BOOL,aux11653_BOOL,w_00005_00015_BOOL,aux11654_BOOL],aux11655_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11656,s_00006],0);
constraint int_lt_reif(s_00004,aux11656,aux11657_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux11658_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux11659_BOOL);
constraint int_le_reif(s_00006, s_00004,aux11660_BOOL);
constraint array_bool_and([aux11657_BOOL,aux11658_BOOL,aux11659_BOOL,w_00005_00006_BOOL,aux11660_BOOL],aux11661_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11662,s_00008],0);
constraint int_lt_reif(s_00004,aux11662,aux11663_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux11664_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux11665_BOOL);
constraint int_le_reif(s_00008, s_00004,aux11666_BOOL);
constraint array_bool_and([aux11663_BOOL,aux11664_BOOL,aux11665_BOOL,w_00005_00008_BOOL,aux11666_BOOL],aux11667_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11668,s_00018],0);
constraint int_lt_reif(s_00004,aux11668,aux11669_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux11670_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux11671_BOOL);
constraint int_le_reif(s_00018, s_00004,aux11672_BOOL);
constraint array_bool_and([aux11669_BOOL,aux11670_BOOL,aux11671_BOOL,w_00005_00018_BOOL,aux11672_BOOL],aux11673_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11674,s_00009],0);
constraint int_lt_reif(s_00004,aux11674,aux11675_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux11676_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux11677_BOOL);
constraint int_le_reif(s_00009, s_00004,aux11678_BOOL);
constraint array_bool_and([aux11675_BOOL,aux11676_BOOL,aux11677_BOOL,w_00005_00009_BOOL,aux11678_BOOL],aux11679_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11680,s_00003],0);
constraint int_lt_reif(s_00004,aux11680,aux11681_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux11682_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux11683_BOOL);
constraint int_le_reif(s_00003, s_00004,aux11684_BOOL);
constraint array_bool_and([aux11681_BOOL,aux11682_BOOL,aux11683_BOOL,w_00005_00003_BOOL,aux11684_BOOL],aux11685_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11686,s_00014],0);
constraint int_lt_reif(s_00004,aux11686,aux11687_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux11688_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux11689_BOOL);
constraint int_le_reif(s_00014, s_00004,aux11690_BOOL);
constraint array_bool_and([aux11687_BOOL,aux11688_BOOL,aux11689_BOOL,w_00005_00014_BOOL,aux11690_BOOL],aux11691_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11692,s_00005],0);
constraint int_lt_reif(s_00004,aux11692,aux11693_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux11694_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux11695_BOOL);
constraint int_le_reif(s_00005, s_00004,aux11696_BOOL);
constraint array_bool_and([aux11693_BOOL,aux11694_BOOL,aux11695_BOOL,w_00005_00005_BOOL,aux11696_BOOL],aux11697_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11698,s_00007],0);
constraint int_lt_reif(s_00004,aux11698,aux11699_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux11700_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux11701_BOOL);
constraint int_le_reif(s_00007, s_00004,aux11702_BOOL);
constraint array_bool_and([aux11699_BOOL,aux11700_BOOL,aux11701_BOOL,w_00005_00007_BOOL,aux11702_BOOL],aux11703_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux11704,s_00001],0);
constraint int_lt_reif(s_00004,aux11704,aux11705_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux11706_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux11707_BOOL);
constraint int_le_reif(s_00001, s_00004,aux11708_BOOL);
constraint array_bool_and([aux11705_BOOL,aux11706_BOOL,aux11707_BOOL,w_00005_00001_BOOL,aux11708_BOOL],aux11709_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux11710,s_00002],0);
constraint int_lt_reif(s_00004,aux11710,aux11711_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11712_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux11713_BOOL);
constraint int_le_reif(s_00002, s_00004,aux11714_BOOL);
constraint array_bool_and([aux11711_BOOL,aux11712_BOOL,aux11713_BOOL,w_00005_00002_BOOL,aux11714_BOOL],aux11715_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11716,s_00020],0);
constraint int_lt_reif(s_00004,aux11716,aux11717_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux11718_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11719_BOOL);
constraint int_le_reif(s_00020, s_00004,aux11720_BOOL);
constraint array_bool_and([aux11717_BOOL,aux11718_BOOL,aux11719_BOOL,w_00005_00020_BOOL,aux11720_BOOL],aux11721_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11722,s_00011],0);
constraint int_lt_reif(s_00004,aux11722,aux11723_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux11724_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux11725_BOOL);
constraint int_le_reif(s_00011, s_00004,aux11726_BOOL);
constraint array_bool_and([aux11723_BOOL,aux11724_BOOL,aux11725_BOOL,w_00005_00011_BOOL,aux11726_BOOL],aux11727_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11728,s_00013],0);
constraint int_lt_reif(s_00004,aux11728,aux11729_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux11730_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux11731_BOOL);
constraint int_le_reif(s_00013, s_00004,aux11732_BOOL);
constraint array_bool_and([aux11729_BOOL,aux11730_BOOL,aux11731_BOOL,w_00005_00013_BOOL,aux11732_BOOL],aux11733_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11734,s_00016],0);
constraint int_lt_reif(s_00004,aux11734,aux11735_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux11736_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux11737_BOOL);
constraint int_le_reif(s_00016, s_00004,aux11738_BOOL);
constraint array_bool_and([aux11735_BOOL,aux11736_BOOL,aux11737_BOOL,w_00005_00016_BOOL,aux11738_BOOL],aux11739_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux11740,s_00012],0);
constraint int_lt_reif(s_00004,aux11740,aux11741_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux11742_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux11743_BOOL);
constraint int_le_reif(s_00012, s_00004,aux11744_BOOL);
constraint array_bool_and([aux11741_BOOL,aux11742_BOOL,aux11743_BOOL,w_00005_00012_BOOL,aux11744_BOOL],aux11745_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux11746,s_00017],0);
constraint int_lt_reif(s_00004,aux11746,aux11747_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux11748_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11749_BOOL);
constraint int_le_reif(s_00017, s_00004,aux11750_BOOL);
constraint array_bool_and([aux11747_BOOL,aux11748_BOOL,aux11749_BOOL,w_00005_00017_BOOL,aux11750_BOOL],aux11751_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux11752,s_00019],0);
constraint int_lt_reif(s_00004,aux11752,aux11753_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux11754_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux11755_BOOL);
constraint int_le_reif(s_00019, s_00004,aux11756_BOOL);
constraint array_bool_and([aux11753_BOOL,aux11754_BOOL,aux11755_BOOL,w_00005_00019_BOOL,aux11756_BOOL],aux11757_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux11758,s_00010],0);
constraint int_lt_reif(s_00004,aux11758,aux11759_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux11760_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux11761_BOOL);
constraint int_le_reif(s_00010, s_00004,aux11762_BOOL);
constraint array_bool_and([aux11759_BOOL,aux11760_BOOL,aux11761_BOOL,w_00005_00010_BOOL,aux11762_BOOL],aux11763_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11764,s_00004],0);
constraint int_lt_reif(s_00004,aux11764,aux11765_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux11766_BOOL);
constraint array_bool_and([aux11765_BOOL,aux11766_BOOL,w_00005_00004_BOOL],aux11767_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux11655_INTEGER,aux11661_INTEGER,aux11667_INTEGER,aux11673_INTEGER,aux11679_INTEGER,aux11685_INTEGER,aux11691_INTEGER,aux11697_INTEGER,aux11703_INTEGER,aux11709_INTEGER,aux11715_INTEGER,aux11721_INTEGER,aux11727_INTEGER,aux11733_INTEGER,aux11739_INTEGER,aux11745_INTEGER,aux11751_INTEGER,aux11757_INTEGER,aux11763_INTEGER,aux11767_INTEGER,1],0,aux11768_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11769,s_00004],0);
constraint int_lt_reif(s_00002,aux11769,aux11770_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11771_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux11772_BOOL);
constraint int_le_reif(s_00004, s_00002,aux11773_BOOL);
constraint array_bool_and([aux11770_BOOL,aux11771_BOOL,aux11772_BOOL,w_00005_00004_BOOL,aux11773_BOOL],aux11774_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11775,s_00015],0);
constraint int_lt_reif(s_00002,aux11775,aux11776_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11777_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux11778_BOOL);
constraint int_le_reif(s_00015, s_00002,aux11779_BOOL);
constraint array_bool_and([aux11776_BOOL,aux11777_BOOL,aux11778_BOOL,w_00005_00015_BOOL,aux11779_BOOL],aux11780_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11781,s_00006],0);
constraint int_lt_reif(s_00002,aux11781,aux11782_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11783_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux11784_BOOL);
constraint int_le_reif(s_00006, s_00002,aux11785_BOOL);
constraint array_bool_and([aux11782_BOOL,aux11783_BOOL,aux11784_BOOL,w_00005_00006_BOOL,aux11785_BOOL],aux11786_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11787,s_00008],0);
constraint int_lt_reif(s_00002,aux11787,aux11788_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11789_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux11790_BOOL);
constraint int_le_reif(s_00008, s_00002,aux11791_BOOL);
constraint array_bool_and([aux11788_BOOL,aux11789_BOOL,aux11790_BOOL,w_00005_00008_BOOL,aux11791_BOOL],aux11792_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11793,s_00018],0);
constraint int_lt_reif(s_00002,aux11793,aux11794_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11795_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux11796_BOOL);
constraint int_le_reif(s_00018, s_00002,aux11797_BOOL);
constraint array_bool_and([aux11794_BOOL,aux11795_BOOL,aux11796_BOOL,w_00005_00018_BOOL,aux11797_BOOL],aux11798_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11799,s_00009],0);
constraint int_lt_reif(s_00002,aux11799,aux11800_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11801_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux11802_BOOL);
constraint int_le_reif(s_00009, s_00002,aux11803_BOOL);
constraint array_bool_and([aux11800_BOOL,aux11801_BOOL,aux11802_BOOL,w_00005_00009_BOOL,aux11803_BOOL],aux11804_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11805,s_00003],0);
constraint int_lt_reif(s_00002,aux11805,aux11806_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11807_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux11808_BOOL);
constraint int_le_reif(s_00003, s_00002,aux11809_BOOL);
constraint array_bool_and([aux11806_BOOL,aux11807_BOOL,aux11808_BOOL,w_00005_00003_BOOL,aux11809_BOOL],aux11810_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11811,s_00014],0);
constraint int_lt_reif(s_00002,aux11811,aux11812_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11813_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux11814_BOOL);
constraint int_le_reif(s_00014, s_00002,aux11815_BOOL);
constraint array_bool_and([aux11812_BOOL,aux11813_BOOL,aux11814_BOOL,w_00005_00014_BOOL,aux11815_BOOL],aux11816_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11817,s_00005],0);
constraint int_lt_reif(s_00002,aux11817,aux11818_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11819_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux11820_BOOL);
constraint int_le_reif(s_00005, s_00002,aux11821_BOOL);
constraint array_bool_and([aux11818_BOOL,aux11819_BOOL,aux11820_BOOL,w_00005_00005_BOOL,aux11821_BOOL],aux11822_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11823,s_00007],0);
constraint int_lt_reif(s_00002,aux11823,aux11824_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11825_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux11826_BOOL);
constraint int_le_reif(s_00007, s_00002,aux11827_BOOL);
constraint array_bool_and([aux11824_BOOL,aux11825_BOOL,aux11826_BOOL,w_00005_00007_BOOL,aux11827_BOOL],aux11828_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux11829,s_00001],0);
constraint int_lt_reif(s_00002,aux11829,aux11830_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux11831_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11832_BOOL);
constraint int_le_reif(s_00001, s_00002,aux11833_BOOL);
constraint array_bool_and([aux11830_BOOL,aux11831_BOOL,aux11832_BOOL,w_00005_00001_BOOL,aux11833_BOOL],aux11834_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11835,s_00020],0);
constraint int_lt_reif(s_00002,aux11835,aux11836_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11837_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11838_BOOL);
constraint int_le_reif(s_00020, s_00002,aux11839_BOOL);
constraint array_bool_and([aux11836_BOOL,aux11837_BOOL,aux11838_BOOL,w_00005_00020_BOOL,aux11839_BOOL],aux11840_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11841,s_00011],0);
constraint int_lt_reif(s_00002,aux11841,aux11842_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11843_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux11844_BOOL);
constraint int_le_reif(s_00011, s_00002,aux11845_BOOL);
constraint array_bool_and([aux11842_BOOL,aux11843_BOOL,aux11844_BOOL,w_00005_00011_BOOL,aux11845_BOOL],aux11846_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11847,s_00013],0);
constraint int_lt_reif(s_00002,aux11847,aux11848_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11849_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux11850_BOOL);
constraint int_le_reif(s_00013, s_00002,aux11851_BOOL);
constraint array_bool_and([aux11848_BOOL,aux11849_BOOL,aux11850_BOOL,w_00005_00013_BOOL,aux11851_BOOL],aux11852_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11853,s_00016],0);
constraint int_lt_reif(s_00002,aux11853,aux11854_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11855_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux11856_BOOL);
constraint int_le_reif(s_00016, s_00002,aux11857_BOOL);
constraint array_bool_and([aux11854_BOOL,aux11855_BOOL,aux11856_BOOL,w_00005_00016_BOOL,aux11857_BOOL],aux11858_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux11859,s_00012],0);
constraint int_lt_reif(s_00002,aux11859,aux11860_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11861_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux11862_BOOL);
constraint int_le_reif(s_00012, s_00002,aux11863_BOOL);
constraint array_bool_and([aux11860_BOOL,aux11861_BOOL,aux11862_BOOL,w_00005_00012_BOOL,aux11863_BOOL],aux11864_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux11865,s_00017],0);
constraint int_lt_reif(s_00002,aux11865,aux11866_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11867_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11868_BOOL);
constraint int_le_reif(s_00017, s_00002,aux11869_BOOL);
constraint array_bool_and([aux11866_BOOL,aux11867_BOOL,aux11868_BOOL,w_00005_00017_BOOL,aux11869_BOOL],aux11870_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux11871,s_00019],0);
constraint int_lt_reif(s_00002,aux11871,aux11872_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11873_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux11874_BOOL);
constraint int_le_reif(s_00019, s_00002,aux11875_BOOL);
constraint array_bool_and([aux11872_BOOL,aux11873_BOOL,aux11874_BOOL,w_00005_00019_BOOL,aux11875_BOOL],aux11876_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux11877,s_00010],0);
constraint int_lt_reif(s_00002,aux11877,aux11878_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11879_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux11880_BOOL);
constraint int_le_reif(s_00010, s_00002,aux11881_BOOL);
constraint array_bool_and([aux11878_BOOL,aux11879_BOOL,aux11880_BOOL,w_00005_00010_BOOL,aux11881_BOOL],aux11882_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux11883,s_00002],0);
constraint int_lt_reif(s_00002,aux11883,aux11884_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11885_BOOL);
constraint array_bool_and([aux11884_BOOL,aux11885_BOOL,w_00005_00002_BOOL],aux11886_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux11774_INTEGER,aux11780_INTEGER,aux11786_INTEGER,aux11792_INTEGER,aux11798_INTEGER,aux11804_INTEGER,aux11810_INTEGER,aux11816_INTEGER,aux11822_INTEGER,aux11828_INTEGER,aux11834_INTEGER,aux11840_INTEGER,aux11846_INTEGER,aux11852_INTEGER,aux11858_INTEGER,aux11864_INTEGER,aux11870_INTEGER,aux11876_INTEGER,aux11882_INTEGER,aux11886_INTEGER,1],0,aux11887_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11888,s_00004],0);
constraint int_lt_reif(s_00001,aux11888,aux11889_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux11890_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux11891_BOOL);
constraint int_le_reif(s_00004, s_00001,aux11892_BOOL);
constraint array_bool_and([aux11889_BOOL,aux11890_BOOL,aux11891_BOOL,w_00005_00004_BOOL,aux11892_BOOL],aux11893_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11894,s_00015],0);
constraint int_lt_reif(s_00001,aux11894,aux11895_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux11896_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux11897_BOOL);
constraint int_le_reif(s_00015, s_00001,aux11898_BOOL);
constraint array_bool_and([aux11895_BOOL,aux11896_BOOL,aux11897_BOOL,w_00005_00015_BOOL,aux11898_BOOL],aux11899_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11900,s_00006],0);
constraint int_lt_reif(s_00001,aux11900,aux11901_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux11902_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux11903_BOOL);
constraint int_le_reif(s_00006, s_00001,aux11904_BOOL);
constraint array_bool_and([aux11901_BOOL,aux11902_BOOL,aux11903_BOOL,w_00005_00006_BOOL,aux11904_BOOL],aux11905_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11906,s_00008],0);
constraint int_lt_reif(s_00001,aux11906,aux11907_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux11908_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux11909_BOOL);
constraint int_le_reif(s_00008, s_00001,aux11910_BOOL);
constraint array_bool_and([aux11907_BOOL,aux11908_BOOL,aux11909_BOOL,w_00005_00008_BOOL,aux11910_BOOL],aux11911_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11912,s_00018],0);
constraint int_lt_reif(s_00001,aux11912,aux11913_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux11914_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux11915_BOOL);
constraint int_le_reif(s_00018, s_00001,aux11916_BOOL);
constraint array_bool_and([aux11913_BOOL,aux11914_BOOL,aux11915_BOOL,w_00005_00018_BOOL,aux11916_BOOL],aux11917_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11918,s_00009],0);
constraint int_lt_reif(s_00001,aux11918,aux11919_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux11920_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux11921_BOOL);
constraint int_le_reif(s_00009, s_00001,aux11922_BOOL);
constraint array_bool_and([aux11919_BOOL,aux11920_BOOL,aux11921_BOOL,w_00005_00009_BOOL,aux11922_BOOL],aux11923_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11924,s_00003],0);
constraint int_lt_reif(s_00001,aux11924,aux11925_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux11926_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux11927_BOOL);
constraint int_le_reif(s_00003, s_00001,aux11928_BOOL);
constraint array_bool_and([aux11925_BOOL,aux11926_BOOL,aux11927_BOOL,w_00005_00003_BOOL,aux11928_BOOL],aux11929_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11930,s_00014],0);
constraint int_lt_reif(s_00001,aux11930,aux11931_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux11932_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux11933_BOOL);
constraint int_le_reif(s_00014, s_00001,aux11934_BOOL);
constraint array_bool_and([aux11931_BOOL,aux11932_BOOL,aux11933_BOOL,w_00005_00014_BOOL,aux11934_BOOL],aux11935_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11936,s_00005],0);
constraint int_lt_reif(s_00001,aux11936,aux11937_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux11938_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux11939_BOOL);
constraint int_le_reif(s_00005, s_00001,aux11940_BOOL);
constraint array_bool_and([aux11937_BOOL,aux11938_BOOL,aux11939_BOOL,w_00005_00005_BOOL,aux11940_BOOL],aux11941_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11942,s_00007],0);
constraint int_lt_reif(s_00001,aux11942,aux11943_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux11944_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux11945_BOOL);
constraint int_le_reif(s_00007, s_00001,aux11946_BOOL);
constraint array_bool_and([aux11943_BOOL,aux11944_BOOL,aux11945_BOOL,w_00005_00007_BOOL,aux11946_BOOL],aux11947_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11948,s_00020],0);
constraint int_lt_reif(s_00001,aux11948,aux11949_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux11950_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11951_BOOL);
constraint int_le_reif(s_00020, s_00001,aux11952_BOOL);
constraint array_bool_and([aux11949_BOOL,aux11950_BOOL,aux11951_BOOL,w_00005_00020_BOOL,aux11952_BOOL],aux11953_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11954,s_00011],0);
constraint int_lt_reif(s_00001,aux11954,aux11955_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux11956_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux11957_BOOL);
constraint int_le_reif(s_00011, s_00001,aux11958_BOOL);
constraint array_bool_and([aux11955_BOOL,aux11956_BOOL,aux11957_BOOL,w_00005_00011_BOOL,aux11958_BOOL],aux11959_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux11960,s_00002],0);
constraint int_lt_reif(s_00001,aux11960,aux11961_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux11962_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11963_BOOL);
constraint int_le_reif(s_00002, s_00001,aux11964_BOOL);
constraint array_bool_and([aux11961_BOOL,aux11962_BOOL,aux11963_BOOL,w_00005_00002_BOOL,aux11964_BOOL],aux11965_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11966,s_00013],0);
constraint int_lt_reif(s_00001,aux11966,aux11967_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux11968_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux11969_BOOL);
constraint int_le_reif(s_00013, s_00001,aux11970_BOOL);
constraint array_bool_and([aux11967_BOOL,aux11968_BOOL,aux11969_BOOL,w_00005_00013_BOOL,aux11970_BOOL],aux11971_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11972,s_00016],0);
constraint int_lt_reif(s_00001,aux11972,aux11973_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux11974_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux11975_BOOL);
constraint int_le_reif(s_00016, s_00001,aux11976_BOOL);
constraint array_bool_and([aux11973_BOOL,aux11974_BOOL,aux11975_BOOL,w_00005_00016_BOOL,aux11976_BOOL],aux11977_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux11978,s_00012],0);
constraint int_lt_reif(s_00001,aux11978,aux11979_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux11980_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux11981_BOOL);
constraint int_le_reif(s_00012, s_00001,aux11982_BOOL);
constraint array_bool_and([aux11979_BOOL,aux11980_BOOL,aux11981_BOOL,w_00005_00012_BOOL,aux11982_BOOL],aux11983_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux11984,s_00017],0);
constraint int_lt_reif(s_00001,aux11984,aux11985_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux11986_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11987_BOOL);
constraint int_le_reif(s_00017, s_00001,aux11988_BOOL);
constraint array_bool_and([aux11985_BOOL,aux11986_BOOL,aux11987_BOOL,w_00005_00017_BOOL,aux11988_BOOL],aux11989_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux11990,s_00019],0);
constraint int_lt_reif(s_00001,aux11990,aux11991_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux11992_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux11993_BOOL);
constraint int_le_reif(s_00019, s_00001,aux11994_BOOL);
constraint array_bool_and([aux11991_BOOL,aux11992_BOOL,aux11993_BOOL,w_00005_00019_BOOL,aux11994_BOOL],aux11995_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux11996,s_00010],0);
constraint int_lt_reif(s_00001,aux11996,aux11997_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux11998_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux11999_BOOL);
constraint int_le_reif(s_00010, s_00001,aux12000_BOOL);
constraint array_bool_and([aux11997_BOOL,aux11998_BOOL,aux11999_BOOL,w_00005_00010_BOOL,aux12000_BOOL],aux12001_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux12002,s_00001],0);
constraint int_lt_reif(s_00001,aux12002,aux12003_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux12004_BOOL);
constraint array_bool_and([aux12003_BOOL,aux12004_BOOL,w_00005_00001_BOOL],aux12005_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux11893_INTEGER,aux11899_INTEGER,aux11905_INTEGER,aux11911_INTEGER,aux11917_INTEGER,aux11923_INTEGER,aux11929_INTEGER,aux11935_INTEGER,aux11941_INTEGER,aux11947_INTEGER,aux11953_INTEGER,aux11959_INTEGER,aux11965_INTEGER,aux11971_INTEGER,aux11977_INTEGER,aux11983_INTEGER,aux11989_INTEGER,aux11995_INTEGER,aux12001_INTEGER,aux12005_INTEGER,1],0,aux12006_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12007,s_00004],0);
constraint int_lt_reif(s_00006,aux12007,aux12008_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux12009_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux12010_BOOL);
constraint int_le_reif(s_00004, s_00006,aux12011_BOOL);
constraint array_bool_and([aux12008_BOOL,aux12009_BOOL,aux12010_BOOL,w_00005_00004_BOOL,aux12011_BOOL],aux12012_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12013,s_00015],0);
constraint int_lt_reif(s_00006,aux12013,aux12014_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux12015_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux12016_BOOL);
constraint int_le_reif(s_00015, s_00006,aux12017_BOOL);
constraint array_bool_and([aux12014_BOOL,aux12015_BOOL,aux12016_BOOL,w_00005_00015_BOOL,aux12017_BOOL],aux12018_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12019,s_00008],0);
constraint int_lt_reif(s_00006,aux12019,aux12020_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux12021_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux12022_BOOL);
constraint int_le_reif(s_00008, s_00006,aux12023_BOOL);
constraint array_bool_and([aux12020_BOOL,aux12021_BOOL,aux12022_BOOL,w_00005_00008_BOOL,aux12023_BOOL],aux12024_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12025,s_00018],0);
constraint int_lt_reif(s_00006,aux12025,aux12026_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux12027_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux12028_BOOL);
constraint int_le_reif(s_00018, s_00006,aux12029_BOOL);
constraint array_bool_and([aux12026_BOOL,aux12027_BOOL,aux12028_BOOL,w_00005_00018_BOOL,aux12029_BOOL],aux12030_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12031,s_00009],0);
constraint int_lt_reif(s_00006,aux12031,aux12032_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux12033_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux12034_BOOL);
constraint int_le_reif(s_00009, s_00006,aux12035_BOOL);
constraint array_bool_and([aux12032_BOOL,aux12033_BOOL,aux12034_BOOL,w_00005_00009_BOOL,aux12035_BOOL],aux12036_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12037,s_00003],0);
constraint int_lt_reif(s_00006,aux12037,aux12038_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux12039_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux12040_BOOL);
constraint int_le_reif(s_00003, s_00006,aux12041_BOOL);
constraint array_bool_and([aux12038_BOOL,aux12039_BOOL,aux12040_BOOL,w_00005_00003_BOOL,aux12041_BOOL],aux12042_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12043,s_00005],0);
constraint int_lt_reif(s_00006,aux12043,aux12044_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux12045_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux12046_BOOL);
constraint int_le_reif(s_00005, s_00006,aux12047_BOOL);
constraint array_bool_and([aux12044_BOOL,aux12045_BOOL,aux12046_BOOL,w_00005_00005_BOOL,aux12047_BOOL],aux12048_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12049,s_00014],0);
constraint int_lt_reif(s_00006,aux12049,aux12050_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux12051_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux12052_BOOL);
constraint int_le_reif(s_00014, s_00006,aux12053_BOOL);
constraint array_bool_and([aux12050_BOOL,aux12051_BOOL,aux12052_BOOL,w_00005_00014_BOOL,aux12053_BOOL],aux12054_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12055,s_00007],0);
constraint int_lt_reif(s_00006,aux12055,aux12056_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux12057_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux12058_BOOL);
constraint int_le_reif(s_00007, s_00006,aux12059_BOOL);
constraint array_bool_and([aux12056_BOOL,aux12057_BOOL,aux12058_BOOL,w_00005_00007_BOOL,aux12059_BOOL],aux12060_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux12061,s_00001],0);
constraint int_lt_reif(s_00006,aux12061,aux12062_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux12063_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux12064_BOOL);
constraint int_le_reif(s_00001, s_00006,aux12065_BOOL);
constraint array_bool_and([aux12062_BOOL,aux12063_BOOL,aux12064_BOOL,w_00005_00001_BOOL,aux12065_BOOL],aux12066_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux12067,s_00002],0);
constraint int_lt_reif(s_00006,aux12067,aux12068_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux12069_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux12070_BOOL);
constraint int_le_reif(s_00002, s_00006,aux12071_BOOL);
constraint array_bool_and([aux12068_BOOL,aux12069_BOOL,aux12070_BOOL,w_00005_00002_BOOL,aux12071_BOOL],aux12072_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12073,s_00020],0);
constraint int_lt_reif(s_00006,aux12073,aux12074_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux12075_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux12076_BOOL);
constraint int_le_reif(s_00020, s_00006,aux12077_BOOL);
constraint array_bool_and([aux12074_BOOL,aux12075_BOOL,aux12076_BOOL,w_00005_00020_BOOL,aux12077_BOOL],aux12078_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12079,s_00011],0);
constraint int_lt_reif(s_00006,aux12079,aux12080_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux12081_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux12082_BOOL);
constraint int_le_reif(s_00011, s_00006,aux12083_BOOL);
constraint array_bool_and([aux12080_BOOL,aux12081_BOOL,aux12082_BOOL,w_00005_00011_BOOL,aux12083_BOOL],aux12084_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12085,s_00013],0);
constraint int_lt_reif(s_00006,aux12085,aux12086_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux12087_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux12088_BOOL);
constraint int_le_reif(s_00013, s_00006,aux12089_BOOL);
constraint array_bool_and([aux12086_BOOL,aux12087_BOOL,aux12088_BOOL,w_00005_00013_BOOL,aux12089_BOOL],aux12090_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12091,s_00016],0);
constraint int_lt_reif(s_00006,aux12091,aux12092_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux12093_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux12094_BOOL);
constraint int_le_reif(s_00016, s_00006,aux12095_BOOL);
constraint array_bool_and([aux12092_BOOL,aux12093_BOOL,aux12094_BOOL,w_00005_00016_BOOL,aux12095_BOOL],aux12096_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux12097,s_00012],0);
constraint int_lt_reif(s_00006,aux12097,aux12098_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux12099_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux12100_BOOL);
constraint int_le_reif(s_00012, s_00006,aux12101_BOOL);
constraint array_bool_and([aux12098_BOOL,aux12099_BOOL,aux12100_BOOL,w_00005_00012_BOOL,aux12101_BOOL],aux12102_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux12103,s_00017],0);
constraint int_lt_reif(s_00006,aux12103,aux12104_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux12105_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux12106_BOOL);
constraint int_le_reif(s_00017, s_00006,aux12107_BOOL);
constraint array_bool_and([aux12104_BOOL,aux12105_BOOL,aux12106_BOOL,w_00005_00017_BOOL,aux12107_BOOL],aux12108_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux12109,s_00019],0);
constraint int_lt_reif(s_00006,aux12109,aux12110_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux12111_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux12112_BOOL);
constraint int_le_reif(s_00019, s_00006,aux12113_BOOL);
constraint array_bool_and([aux12110_BOOL,aux12111_BOOL,aux12112_BOOL,w_00005_00019_BOOL,aux12113_BOOL],aux12114_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux12115,s_00010],0);
constraint int_lt_reif(s_00006,aux12115,aux12116_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux12117_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux12118_BOOL);
constraint int_le_reif(s_00010, s_00006,aux12119_BOOL);
constraint array_bool_and([aux12116_BOOL,aux12117_BOOL,aux12118_BOOL,w_00005_00010_BOOL,aux12119_BOOL],aux12120_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12121,s_00006],0);
constraint int_lt_reif(s_00006,aux12121,aux12122_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux12123_BOOL);
constraint array_bool_and([aux12122_BOOL,aux12123_BOOL,w_00005_00006_BOOL],aux12124_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux12012_INTEGER,aux12018_INTEGER,aux12024_INTEGER,aux12030_INTEGER,aux12036_INTEGER,aux12042_INTEGER,aux12048_INTEGER,aux12054_INTEGER,aux12060_INTEGER,aux12066_INTEGER,aux12072_INTEGER,aux12078_INTEGER,aux12084_INTEGER,aux12090_INTEGER,aux12096_INTEGER,aux12102_INTEGER,aux12108_INTEGER,aux12114_INTEGER,aux12120_INTEGER,aux12124_INTEGER,1],0,aux12125_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12126,s_00004],0);
constraint int_lt_reif(s_00013,aux12126,aux12127_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux12128_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux12129_BOOL);
constraint int_le_reif(s_00004, s_00013,aux12130_BOOL);
constraint array_bool_and([aux12127_BOOL,aux12128_BOOL,aux12129_BOOL,w_00005_00004_BOOL,aux12130_BOOL],aux12131_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12132,s_00006],0);
constraint int_lt_reif(s_00013,aux12132,aux12133_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux12134_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux12135_BOOL);
constraint int_le_reif(s_00006, s_00013,aux12136_BOOL);
constraint array_bool_and([aux12133_BOOL,aux12134_BOOL,aux12135_BOOL,w_00005_00006_BOOL,aux12136_BOOL],aux12137_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12138,s_00008],0);
constraint int_lt_reif(s_00013,aux12138,aux12139_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux12140_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux12141_BOOL);
constraint int_le_reif(s_00008, s_00013,aux12142_BOOL);
constraint array_bool_and([aux12139_BOOL,aux12140_BOOL,aux12141_BOOL,w_00005_00008_BOOL,aux12142_BOOL],aux12143_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12144,s_00009],0);
constraint int_lt_reif(s_00013,aux12144,aux12145_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux12146_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux12147_BOOL);
constraint int_le_reif(s_00009, s_00013,aux12148_BOOL);
constraint array_bool_and([aux12145_BOOL,aux12146_BOOL,aux12147_BOOL,w_00005_00009_BOOL,aux12148_BOOL],aux12149_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12150,s_00003],0);
constraint int_lt_reif(s_00013,aux12150,aux12151_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux12152_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux12153_BOOL);
constraint int_le_reif(s_00003, s_00013,aux12154_BOOL);
constraint array_bool_and([aux12151_BOOL,aux12152_BOOL,aux12153_BOOL,w_00005_00003_BOOL,aux12154_BOOL],aux12155_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12156,s_00015],0);
constraint int_lt_reif(s_00013,aux12156,aux12157_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux12158_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux12159_BOOL);
constraint int_le_reif(s_00015, s_00013,aux12160_BOOL);
constraint array_bool_and([aux12157_BOOL,aux12158_BOOL,aux12159_BOOL,w_00005_00015_BOOL,aux12160_BOOL],aux12161_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12162,s_00005],0);
constraint int_lt_reif(s_00013,aux12162,aux12163_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux12164_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux12165_BOOL);
constraint int_le_reif(s_00005, s_00013,aux12166_BOOL);
constraint array_bool_and([aux12163_BOOL,aux12164_BOOL,aux12165_BOOL,w_00005_00005_BOOL,aux12166_BOOL],aux12167_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12168,s_00018],0);
constraint int_lt_reif(s_00013,aux12168,aux12169_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux12170_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux12171_BOOL);
constraint int_le_reif(s_00018, s_00013,aux12172_BOOL);
constraint array_bool_and([aux12169_BOOL,aux12170_BOOL,aux12171_BOOL,w_00005_00018_BOOL,aux12172_BOOL],aux12173_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12174,s_00007],0);
constraint int_lt_reif(s_00013,aux12174,aux12175_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux12176_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux12177_BOOL);
constraint int_le_reif(s_00007, s_00013,aux12178_BOOL);
constraint array_bool_and([aux12175_BOOL,aux12176_BOOL,aux12177_BOOL,w_00005_00007_BOOL,aux12178_BOOL],aux12179_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux12180,s_00001],0);
constraint int_lt_reif(s_00013,aux12180,aux12181_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux12182_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux12183_BOOL);
constraint int_le_reif(s_00001, s_00013,aux12184_BOOL);
constraint array_bool_and([aux12181_BOOL,aux12182_BOOL,aux12183_BOOL,w_00005_00001_BOOL,aux12184_BOOL],aux12185_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux12186,s_00002],0);
constraint int_lt_reif(s_00013,aux12186,aux12187_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux12188_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux12189_BOOL);
constraint int_le_reif(s_00002, s_00013,aux12190_BOOL);
constraint array_bool_and([aux12187_BOOL,aux12188_BOOL,aux12189_BOOL,w_00005_00002_BOOL,aux12190_BOOL],aux12191_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12192,s_00014],0);
constraint int_lt_reif(s_00013,aux12192,aux12193_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux12194_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux12195_BOOL);
constraint int_le_reif(s_00014, s_00013,aux12196_BOOL);
constraint array_bool_and([aux12193_BOOL,aux12194_BOOL,aux12195_BOOL,w_00005_00014_BOOL,aux12196_BOOL],aux12197_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12198,s_00011],0);
constraint int_lt_reif(s_00013,aux12198,aux12199_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux12200_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux12201_BOOL);
constraint int_le_reif(s_00011, s_00013,aux12202_BOOL);
constraint array_bool_and([aux12199_BOOL,aux12200_BOOL,aux12201_BOOL,w_00005_00011_BOOL,aux12202_BOOL],aux12203_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12204,s_00020],0);
constraint int_lt_reif(s_00013,aux12204,aux12205_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux12206_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux12207_BOOL);
constraint int_le_reif(s_00020, s_00013,aux12208_BOOL);
constraint array_bool_and([aux12205_BOOL,aux12206_BOOL,aux12207_BOOL,w_00005_00020_BOOL,aux12208_BOOL],aux12209_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12210,s_00016],0);
constraint int_lt_reif(s_00013,aux12210,aux12211_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux12212_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux12213_BOOL);
constraint int_le_reif(s_00016, s_00013,aux12214_BOOL);
constraint array_bool_and([aux12211_BOOL,aux12212_BOOL,aux12213_BOOL,w_00005_00016_BOOL,aux12214_BOOL],aux12215_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux12216,s_00012],0);
constraint int_lt_reif(s_00013,aux12216,aux12217_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux12218_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux12219_BOOL);
constraint int_le_reif(s_00012, s_00013,aux12220_BOOL);
constraint array_bool_and([aux12217_BOOL,aux12218_BOOL,aux12219_BOOL,w_00005_00012_BOOL,aux12220_BOOL],aux12221_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux12222,s_00017],0);
constraint int_lt_reif(s_00013,aux12222,aux12223_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux12224_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux12225_BOOL);
constraint int_le_reif(s_00017, s_00013,aux12226_BOOL);
constraint array_bool_and([aux12223_BOOL,aux12224_BOOL,aux12225_BOOL,w_00005_00017_BOOL,aux12226_BOOL],aux12227_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux12228,s_00019],0);
constraint int_lt_reif(s_00013,aux12228,aux12229_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux12230_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux12231_BOOL);
constraint int_le_reif(s_00019, s_00013,aux12232_BOOL);
constraint array_bool_and([aux12229_BOOL,aux12230_BOOL,aux12231_BOOL,w_00005_00019_BOOL,aux12232_BOOL],aux12233_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux12234,s_00010],0);
constraint int_lt_reif(s_00013,aux12234,aux12235_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux12236_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux12237_BOOL);
constraint int_le_reif(s_00010, s_00013,aux12238_BOOL);
constraint array_bool_and([aux12235_BOOL,aux12236_BOOL,aux12237_BOOL,w_00005_00010_BOOL,aux12238_BOOL],aux12239_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12240,s_00013],0);
constraint int_lt_reif(s_00013,aux12240,aux12241_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux12242_BOOL);
constraint array_bool_and([aux12241_BOOL,aux12242_BOOL,w_00005_00013_BOOL],aux12243_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux12131_INTEGER,aux12137_INTEGER,aux12143_INTEGER,aux12149_INTEGER,aux12155_INTEGER,aux12161_INTEGER,aux12167_INTEGER,aux12173_INTEGER,aux12179_INTEGER,aux12185_INTEGER,aux12191_INTEGER,aux12197_INTEGER,aux12203_INTEGER,aux12209_INTEGER,aux12215_INTEGER,aux12221_INTEGER,aux12227_INTEGER,aux12233_INTEGER,aux12239_INTEGER,aux12243_INTEGER,1],0,aux12244_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12245,s_00004],0);
constraint int_lt_reif(s_00003,aux12245,aux12246_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux12247_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux12248_BOOL);
constraint int_le_reif(s_00004, s_00003,aux12249_BOOL);
constraint array_bool_and([aux12246_BOOL,aux12247_BOOL,aux12248_BOOL,w_00005_00004_BOOL,aux12249_BOOL],aux12250_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12251,s_00015],0);
constraint int_lt_reif(s_00003,aux12251,aux12252_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux12253_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux12254_BOOL);
constraint int_le_reif(s_00015, s_00003,aux12255_BOOL);
constraint array_bool_and([aux12252_BOOL,aux12253_BOOL,aux12254_BOOL,w_00005_00015_BOOL,aux12255_BOOL],aux12256_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12257,s_00006],0);
constraint int_lt_reif(s_00003,aux12257,aux12258_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux12259_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux12260_BOOL);
constraint int_le_reif(s_00006, s_00003,aux12261_BOOL);
constraint array_bool_and([aux12258_BOOL,aux12259_BOOL,aux12260_BOOL,w_00005_00006_BOOL,aux12261_BOOL],aux12262_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12263,s_00008],0);
constraint int_lt_reif(s_00003,aux12263,aux12264_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux12265_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux12266_BOOL);
constraint int_le_reif(s_00008, s_00003,aux12267_BOOL);
constraint array_bool_and([aux12264_BOOL,aux12265_BOOL,aux12266_BOOL,w_00005_00008_BOOL,aux12267_BOOL],aux12268_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12269,s_00018],0);
constraint int_lt_reif(s_00003,aux12269,aux12270_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux12271_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux12272_BOOL);
constraint int_le_reif(s_00018, s_00003,aux12273_BOOL);
constraint array_bool_and([aux12270_BOOL,aux12271_BOOL,aux12272_BOOL,w_00005_00018_BOOL,aux12273_BOOL],aux12274_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12275,s_00009],0);
constraint int_lt_reif(s_00003,aux12275,aux12276_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux12277_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux12278_BOOL);
constraint int_le_reif(s_00009, s_00003,aux12279_BOOL);
constraint array_bool_and([aux12276_BOOL,aux12277_BOOL,aux12278_BOOL,w_00005_00009_BOOL,aux12279_BOOL],aux12280_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12281,s_00014],0);
constraint int_lt_reif(s_00003,aux12281,aux12282_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux12283_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux12284_BOOL);
constraint int_le_reif(s_00014, s_00003,aux12285_BOOL);
constraint array_bool_and([aux12282_BOOL,aux12283_BOOL,aux12284_BOOL,w_00005_00014_BOOL,aux12285_BOOL],aux12286_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12287,s_00005],0);
constraint int_lt_reif(s_00003,aux12287,aux12288_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux12289_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux12290_BOOL);
constraint int_le_reif(s_00005, s_00003,aux12291_BOOL);
constraint array_bool_and([aux12288_BOOL,aux12289_BOOL,aux12290_BOOL,w_00005_00005_BOOL,aux12291_BOOL],aux12292_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12293,s_00007],0);
constraint int_lt_reif(s_00003,aux12293,aux12294_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux12295_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux12296_BOOL);
constraint int_le_reif(s_00007, s_00003,aux12297_BOOL);
constraint array_bool_and([aux12294_BOOL,aux12295_BOOL,aux12296_BOOL,w_00005_00007_BOOL,aux12297_BOOL],aux12298_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux12299,s_00001],0);
constraint int_lt_reif(s_00003,aux12299,aux12300_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux12301_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux12302_BOOL);
constraint int_le_reif(s_00001, s_00003,aux12303_BOOL);
constraint array_bool_and([aux12300_BOOL,aux12301_BOOL,aux12302_BOOL,w_00005_00001_BOOL,aux12303_BOOL],aux12304_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux12305,s_00002],0);
constraint int_lt_reif(s_00003,aux12305,aux12306_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux12307_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux12308_BOOL);
constraint int_le_reif(s_00002, s_00003,aux12309_BOOL);
constraint array_bool_and([aux12306_BOOL,aux12307_BOOL,aux12308_BOOL,w_00005_00002_BOOL,aux12309_BOOL],aux12310_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12311,s_00020],0);
constraint int_lt_reif(s_00003,aux12311,aux12312_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux12313_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux12314_BOOL);
constraint int_le_reif(s_00020, s_00003,aux12315_BOOL);
constraint array_bool_and([aux12312_BOOL,aux12313_BOOL,aux12314_BOOL,w_00005_00020_BOOL,aux12315_BOOL],aux12316_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12317,s_00011],0);
constraint int_lt_reif(s_00003,aux12317,aux12318_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux12319_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux12320_BOOL);
constraint int_le_reif(s_00011, s_00003,aux12321_BOOL);
constraint array_bool_and([aux12318_BOOL,aux12319_BOOL,aux12320_BOOL,w_00005_00011_BOOL,aux12321_BOOL],aux12322_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12323,s_00013],0);
constraint int_lt_reif(s_00003,aux12323,aux12324_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux12325_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux12326_BOOL);
constraint int_le_reif(s_00013, s_00003,aux12327_BOOL);
constraint array_bool_and([aux12324_BOOL,aux12325_BOOL,aux12326_BOOL,w_00005_00013_BOOL,aux12327_BOOL],aux12328_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12329,s_00016],0);
constraint int_lt_reif(s_00003,aux12329,aux12330_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux12331_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux12332_BOOL);
constraint int_le_reif(s_00016, s_00003,aux12333_BOOL);
constraint array_bool_and([aux12330_BOOL,aux12331_BOOL,aux12332_BOOL,w_00005_00016_BOOL,aux12333_BOOL],aux12334_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux12335,s_00012],0);
constraint int_lt_reif(s_00003,aux12335,aux12336_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux12337_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux12338_BOOL);
constraint int_le_reif(s_00012, s_00003,aux12339_BOOL);
constraint array_bool_and([aux12336_BOOL,aux12337_BOOL,aux12338_BOOL,w_00005_00012_BOOL,aux12339_BOOL],aux12340_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux12341,s_00017],0);
constraint int_lt_reif(s_00003,aux12341,aux12342_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux12343_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux12344_BOOL);
constraint int_le_reif(s_00017, s_00003,aux12345_BOOL);
constraint array_bool_and([aux12342_BOOL,aux12343_BOOL,aux12344_BOOL,w_00005_00017_BOOL,aux12345_BOOL],aux12346_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux12347,s_00019],0);
constraint int_lt_reif(s_00003,aux12347,aux12348_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux12349_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux12350_BOOL);
constraint int_le_reif(s_00019, s_00003,aux12351_BOOL);
constraint array_bool_and([aux12348_BOOL,aux12349_BOOL,aux12350_BOOL,w_00005_00019_BOOL,aux12351_BOOL],aux12352_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux12353,s_00010],0);
constraint int_lt_reif(s_00003,aux12353,aux12354_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux12355_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux12356_BOOL);
constraint int_le_reif(s_00010, s_00003,aux12357_BOOL);
constraint array_bool_and([aux12354_BOOL,aux12355_BOOL,aux12356_BOOL,w_00005_00010_BOOL,aux12357_BOOL],aux12358_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12359,s_00003],0);
constraint int_lt_reif(s_00003,aux12359,aux12360_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux12361_BOOL);
constraint array_bool_and([aux12360_BOOL,aux12361_BOOL,w_00005_00003_BOOL],aux12362_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux12250_INTEGER,aux12256_INTEGER,aux12262_INTEGER,aux12268_INTEGER,aux12274_INTEGER,aux12280_INTEGER,aux12286_INTEGER,aux12292_INTEGER,aux12298_INTEGER,aux12304_INTEGER,aux12310_INTEGER,aux12316_INTEGER,aux12322_INTEGER,aux12328_INTEGER,aux12334_INTEGER,aux12340_INTEGER,aux12346_INTEGER,aux12352_INTEGER,aux12358_INTEGER,aux12362_INTEGER,1],0,aux12363_BOOL);
constraint array_bool_and([aux10102_BOOL,aux10221_BOOL,aux10340_BOOL,aux10459_BOOL,aux10578_BOOL,aux10697_BOOL,aux10816_BOOL,aux10935_BOOL,aux11054_BOOL,aux11173_BOOL,aux11292_BOOL,aux11411_BOOL,aux11530_BOOL,aux11649_BOOL,aux11768_BOOL,aux11887_BOOL,aux12006_BOOL,aux12125_BOOL,aux12244_BOOL,aux12363_BOOL],aux12364_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[TWorkers_00005_00001_INTEGER,TWorkers_00005_00002_INTEGER,TWorkers_00005_00003_INTEGER,TWorkers_00005_00004_INTEGER,TWorkers_00005_00005_INTEGER,TWorkers_00005_00006_INTEGER,TWorkers_00005_00007_INTEGER,TWorkers_00005_00008_INTEGER,TWorkers_00005_00009_INTEGER,TWorkers_00005_00010_INTEGER,TWorkers_00005_00011_INTEGER,TWorkers_00005_00012_INTEGER,TWorkers_00005_00013_INTEGER,TWorkers_00005_00014_INTEGER,TWorkers_00005_00015_INTEGER,TWorkers_00005_00016_INTEGER,TWorkers_00005_00017_INTEGER,TWorkers_00005_00018_INTEGER,TWorkers_00005_00019_INTEGER,TWorkers_00005_00020_INTEGER,1],0,aux12365_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux12366_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux12367_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux12368,s_00001],0);
constraint int_lt_reif(s_00016,aux12368,aux12369_BOOL);
constraint int_le_reif(s_00001, s_00016,aux12370_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux12366_BOOL,aux12367_BOOL,aux12369_BOOL,aux12370_BOOL],aux12371_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux12372_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux12373_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux12374,s_00002],0);
constraint int_lt_reif(s_00016,aux12374,aux12375_BOOL);
constraint int_le_reif(s_00002, s_00016,aux12376_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux12372_BOOL,aux12373_BOOL,aux12375_BOOL,aux12376_BOOL],aux12377_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux12378_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux12379_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12380,s_00003],0);
constraint int_lt_reif(s_00016,aux12380,aux12381_BOOL);
constraint int_le_reif(s_00003, s_00016,aux12382_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux12378_BOOL,aux12379_BOOL,aux12381_BOOL,aux12382_BOOL],aux12383_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux12384_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux12385_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12386,s_00004],0);
constraint int_lt_reif(s_00016,aux12386,aux12387_BOOL);
constraint int_le_reif(s_00004, s_00016,aux12388_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux12384_BOOL,aux12385_BOOL,aux12387_BOOL,aux12388_BOOL],aux12389_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux12390_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux12391_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12392,s_00005],0);
constraint int_lt_reif(s_00016,aux12392,aux12393_BOOL);
constraint int_le_reif(s_00005, s_00016,aux12394_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux12390_BOOL,aux12391_BOOL,aux12393_BOOL,aux12394_BOOL],aux12395_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux12396_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux12397_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12398,s_00006],0);
constraint int_lt_reif(s_00016,aux12398,aux12399_BOOL);
constraint int_le_reif(s_00006, s_00016,aux12400_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux12396_BOOL,aux12397_BOOL,aux12399_BOOL,aux12400_BOOL],aux12401_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux12402_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux12403_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12404,s_00007],0);
constraint int_lt_reif(s_00016,aux12404,aux12405_BOOL);
constraint int_le_reif(s_00007, s_00016,aux12406_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux12402_BOOL,aux12403_BOOL,aux12405_BOOL,aux12406_BOOL],aux12407_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux12408_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux12409_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12410,s_00008],0);
constraint int_lt_reif(s_00016,aux12410,aux12411_BOOL);
constraint int_le_reif(s_00008, s_00016,aux12412_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux12408_BOOL,aux12409_BOOL,aux12411_BOOL,aux12412_BOOL],aux12413_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux12414_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux12415_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12416,s_00009],0);
constraint int_lt_reif(s_00016,aux12416,aux12417_BOOL);
constraint int_le_reif(s_00009, s_00016,aux12418_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux12414_BOOL,aux12415_BOOL,aux12417_BOOL,aux12418_BOOL],aux12419_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux12420_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux12421_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux12422,s_00010],0);
constraint int_lt_reif(s_00016,aux12422,aux12423_BOOL);
constraint int_le_reif(s_00010, s_00016,aux12424_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux12420_BOOL,aux12421_BOOL,aux12423_BOOL,aux12424_BOOL],aux12425_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux12426_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux12427_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12428,s_00011],0);
constraint int_lt_reif(s_00016,aux12428,aux12429_BOOL);
constraint int_le_reif(s_00011, s_00016,aux12430_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux12426_BOOL,aux12427_BOOL,aux12429_BOOL,aux12430_BOOL],aux12431_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux12432_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux12433_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux12434,s_00012],0);
constraint int_lt_reif(s_00016,aux12434,aux12435_BOOL);
constraint int_le_reif(s_00012, s_00016,aux12436_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux12432_BOOL,aux12433_BOOL,aux12435_BOOL,aux12436_BOOL],aux12437_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux12438_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux12439_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12440,s_00013],0);
constraint int_lt_reif(s_00016,aux12440,aux12441_BOOL);
constraint int_le_reif(s_00013, s_00016,aux12442_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux12438_BOOL,aux12439_BOOL,aux12441_BOOL,aux12442_BOOL],aux12443_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux12444_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux12445_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12446,s_00014],0);
constraint int_lt_reif(s_00016,aux12446,aux12447_BOOL);
constraint int_le_reif(s_00014, s_00016,aux12448_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux12444_BOOL,aux12445_BOOL,aux12447_BOOL,aux12448_BOOL],aux12449_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux12450_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux12451_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12452,s_00015],0);
constraint int_lt_reif(s_00016,aux12452,aux12453_BOOL);
constraint int_le_reif(s_00015, s_00016,aux12454_BOOL);
constraint array_bool_and([w_00006_00015_BOOL,aux12450_BOOL,aux12451_BOOL,aux12453_BOOL,aux12454_BOOL],aux12455_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux12456_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux12457_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux12458,s_00017],0);
constraint int_lt_reif(s_00016,aux12458,aux12459_BOOL);
constraint int_le_reif(s_00017, s_00016,aux12460_BOOL);
constraint array_bool_and([w_00006_00017_BOOL,aux12456_BOOL,aux12457_BOOL,aux12459_BOOL,aux12460_BOOL],aux12461_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux12462_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux12463_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12464,s_00018],0);
constraint int_lt_reif(s_00016,aux12464,aux12465_BOOL);
constraint int_le_reif(s_00018, s_00016,aux12466_BOOL);
constraint array_bool_and([w_00006_00018_BOOL,aux12462_BOOL,aux12463_BOOL,aux12465_BOOL,aux12466_BOOL],aux12467_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux12468_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux12469_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux12470,s_00019],0);
constraint int_lt_reif(s_00016,aux12470,aux12471_BOOL);
constraint int_le_reif(s_00019, s_00016,aux12472_BOOL);
constraint array_bool_and([w_00006_00019_BOOL,aux12468_BOOL,aux12469_BOOL,aux12471_BOOL,aux12472_BOOL],aux12473_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux12474_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux12475_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12476,s_00020],0);
constraint int_lt_reif(s_00016,aux12476,aux12477_BOOL);
constraint int_le_reif(s_00020, s_00016,aux12478_BOOL);
constraint array_bool_and([w_00006_00020_BOOL,aux12474_BOOL,aux12475_BOOL,aux12477_BOOL,aux12478_BOOL],aux12479_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux12480_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12481,s_00016],0);
constraint int_lt_reif(s_00016,aux12481,aux12482_BOOL);
constraint array_bool_and([w_00006_00016_BOOL,aux12480_BOOL,aux12482_BOOL],aux12483_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux12371_INTEGER,aux12377_INTEGER,aux12383_INTEGER,aux12389_INTEGER,aux12395_INTEGER,aux12401_INTEGER,aux12407_INTEGER,aux12413_INTEGER,aux12419_INTEGER,aux12425_INTEGER,aux12431_INTEGER,aux12437_INTEGER,aux12443_INTEGER,aux12449_INTEGER,aux12455_INTEGER,aux12461_INTEGER,aux12467_INTEGER,aux12473_INTEGER,aux12479_INTEGER,aux12483_INTEGER,1],0,aux12484_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux12485_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux12486_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux12487,s_00001],0);
constraint int_lt_reif(s_00006,aux12487,aux12488_BOOL);
constraint int_le_reif(s_00001, s_00006,aux12489_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux12485_BOOL,aux12486_BOOL,aux12488_BOOL,aux12489_BOOL],aux12490_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux12491_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux12492_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux12493,s_00002],0);
constraint int_lt_reif(s_00006,aux12493,aux12494_BOOL);
constraint int_le_reif(s_00002, s_00006,aux12495_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux12491_BOOL,aux12492_BOOL,aux12494_BOOL,aux12495_BOOL],aux12496_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux12497_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux12498_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12499,s_00003],0);
constraint int_lt_reif(s_00006,aux12499,aux12500_BOOL);
constraint int_le_reif(s_00003, s_00006,aux12501_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux12497_BOOL,aux12498_BOOL,aux12500_BOOL,aux12501_BOOL],aux12502_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux12503_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux12504_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12505,s_00004],0);
constraint int_lt_reif(s_00006,aux12505,aux12506_BOOL);
constraint int_le_reif(s_00004, s_00006,aux12507_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux12503_BOOL,aux12504_BOOL,aux12506_BOOL,aux12507_BOOL],aux12508_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux12509_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux12510_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12511,s_00005],0);
constraint int_lt_reif(s_00006,aux12511,aux12512_BOOL);
constraint int_le_reif(s_00005, s_00006,aux12513_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux12509_BOOL,aux12510_BOOL,aux12512_BOOL,aux12513_BOOL],aux12514_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux12515_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux12516_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12517,s_00007],0);
constraint int_lt_reif(s_00006,aux12517,aux12518_BOOL);
constraint int_le_reif(s_00007, s_00006,aux12519_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux12515_BOOL,aux12516_BOOL,aux12518_BOOL,aux12519_BOOL],aux12520_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux12521_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux12522_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12523,s_00008],0);
constraint int_lt_reif(s_00006,aux12523,aux12524_BOOL);
constraint int_le_reif(s_00008, s_00006,aux12525_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux12521_BOOL,aux12522_BOOL,aux12524_BOOL,aux12525_BOOL],aux12526_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux12527_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux12528_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12529,s_00009],0);
constraint int_lt_reif(s_00006,aux12529,aux12530_BOOL);
constraint int_le_reif(s_00009, s_00006,aux12531_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux12527_BOOL,aux12528_BOOL,aux12530_BOOL,aux12531_BOOL],aux12532_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux12533_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux12534_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux12535,s_00010],0);
constraint int_lt_reif(s_00006,aux12535,aux12536_BOOL);
constraint int_le_reif(s_00010, s_00006,aux12537_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux12533_BOOL,aux12534_BOOL,aux12536_BOOL,aux12537_BOOL],aux12538_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux12539_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux12540_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12541,s_00011],0);
constraint int_lt_reif(s_00006,aux12541,aux12542_BOOL);
constraint int_le_reif(s_00011, s_00006,aux12543_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux12539_BOOL,aux12540_BOOL,aux12542_BOOL,aux12543_BOOL],aux12544_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux12545_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux12546_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux12547,s_00012],0);
constraint int_lt_reif(s_00006,aux12547,aux12548_BOOL);
constraint int_le_reif(s_00012, s_00006,aux12549_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux12545_BOOL,aux12546_BOOL,aux12548_BOOL,aux12549_BOOL],aux12550_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux12551_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux12552_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12553,s_00013],0);
constraint int_lt_reif(s_00006,aux12553,aux12554_BOOL);
constraint int_le_reif(s_00013, s_00006,aux12555_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux12551_BOOL,aux12552_BOOL,aux12554_BOOL,aux12555_BOOL],aux12556_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux12557_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux12558_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12559,s_00014],0);
constraint int_lt_reif(s_00006,aux12559,aux12560_BOOL);
constraint int_le_reif(s_00014, s_00006,aux12561_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux12557_BOOL,aux12558_BOOL,aux12560_BOOL,aux12561_BOOL],aux12562_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux12563_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux12564_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12565,s_00015],0);
constraint int_lt_reif(s_00006,aux12565,aux12566_BOOL);
constraint int_le_reif(s_00015, s_00006,aux12567_BOOL);
constraint array_bool_and([w_00006_00015_BOOL,aux12563_BOOL,aux12564_BOOL,aux12566_BOOL,aux12567_BOOL],aux12568_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux12569_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux12570_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12571,s_00016],0);
constraint int_lt_reif(s_00006,aux12571,aux12572_BOOL);
constraint int_le_reif(s_00016, s_00006,aux12573_BOOL);
constraint array_bool_and([w_00006_00016_BOOL,aux12569_BOOL,aux12570_BOOL,aux12572_BOOL,aux12573_BOOL],aux12574_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux12575_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux12576_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux12577,s_00017],0);
constraint int_lt_reif(s_00006,aux12577,aux12578_BOOL);
constraint int_le_reif(s_00017, s_00006,aux12579_BOOL);
constraint array_bool_and([w_00006_00017_BOOL,aux12575_BOOL,aux12576_BOOL,aux12578_BOOL,aux12579_BOOL],aux12580_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux12581_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux12582_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12583,s_00018],0);
constraint int_lt_reif(s_00006,aux12583,aux12584_BOOL);
constraint int_le_reif(s_00018, s_00006,aux12585_BOOL);
constraint array_bool_and([w_00006_00018_BOOL,aux12581_BOOL,aux12582_BOOL,aux12584_BOOL,aux12585_BOOL],aux12586_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux12587_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux12588_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux12589,s_00019],0);
constraint int_lt_reif(s_00006,aux12589,aux12590_BOOL);
constraint int_le_reif(s_00019, s_00006,aux12591_BOOL);
constraint array_bool_and([w_00006_00019_BOOL,aux12587_BOOL,aux12588_BOOL,aux12590_BOOL,aux12591_BOOL],aux12592_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux12593_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux12594_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12595,s_00020],0);
constraint int_lt_reif(s_00006,aux12595,aux12596_BOOL);
constraint int_le_reif(s_00020, s_00006,aux12597_BOOL);
constraint array_bool_and([w_00006_00020_BOOL,aux12593_BOOL,aux12594_BOOL,aux12596_BOOL,aux12597_BOOL],aux12598_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux12599_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12600,s_00006],0);
constraint int_lt_reif(s_00006,aux12600,aux12601_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux12599_BOOL,aux12601_BOOL],aux12602_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux12490_INTEGER,aux12496_INTEGER,aux12502_INTEGER,aux12508_INTEGER,aux12514_INTEGER,aux12520_INTEGER,aux12526_INTEGER,aux12532_INTEGER,aux12538_INTEGER,aux12544_INTEGER,aux12550_INTEGER,aux12556_INTEGER,aux12562_INTEGER,aux12568_INTEGER,aux12574_INTEGER,aux12580_INTEGER,aux12586_INTEGER,aux12592_INTEGER,aux12598_INTEGER,aux12602_INTEGER,1],0,aux12603_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux12604_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux12605_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux12606,s_00002],0);
constraint int_lt_reif(s_00001,aux12606,aux12607_BOOL);
constraint int_le_reif(s_00002, s_00001,aux12608_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux12604_BOOL,aux12605_BOOL,aux12607_BOOL,aux12608_BOOL],aux12609_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux12610_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux12611_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12612,s_00003],0);
constraint int_lt_reif(s_00001,aux12612,aux12613_BOOL);
constraint int_le_reif(s_00003, s_00001,aux12614_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux12610_BOOL,aux12611_BOOL,aux12613_BOOL,aux12614_BOOL],aux12615_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux12616_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux12617_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12618,s_00004],0);
constraint int_lt_reif(s_00001,aux12618,aux12619_BOOL);
constraint int_le_reif(s_00004, s_00001,aux12620_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux12616_BOOL,aux12617_BOOL,aux12619_BOOL,aux12620_BOOL],aux12621_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux12622_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux12623_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12624,s_00005],0);
constraint int_lt_reif(s_00001,aux12624,aux12625_BOOL);
constraint int_le_reif(s_00005, s_00001,aux12626_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux12622_BOOL,aux12623_BOOL,aux12625_BOOL,aux12626_BOOL],aux12627_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux12628_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux12629_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12630,s_00006],0);
constraint int_lt_reif(s_00001,aux12630,aux12631_BOOL);
constraint int_le_reif(s_00006, s_00001,aux12632_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux12628_BOOL,aux12629_BOOL,aux12631_BOOL,aux12632_BOOL],aux12633_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux12634_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux12635_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12636,s_00007],0);
constraint int_lt_reif(s_00001,aux12636,aux12637_BOOL);
constraint int_le_reif(s_00007, s_00001,aux12638_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux12634_BOOL,aux12635_BOOL,aux12637_BOOL,aux12638_BOOL],aux12639_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux12640_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux12641_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12642,s_00008],0);
constraint int_lt_reif(s_00001,aux12642,aux12643_BOOL);
constraint int_le_reif(s_00008, s_00001,aux12644_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux12640_BOOL,aux12641_BOOL,aux12643_BOOL,aux12644_BOOL],aux12645_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux12646_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux12647_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12648,s_00009],0);
constraint int_lt_reif(s_00001,aux12648,aux12649_BOOL);
constraint int_le_reif(s_00009, s_00001,aux12650_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux12646_BOOL,aux12647_BOOL,aux12649_BOOL,aux12650_BOOL],aux12651_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux12652_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux12653_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux12654,s_00010],0);
constraint int_lt_reif(s_00001,aux12654,aux12655_BOOL);
constraint int_le_reif(s_00010, s_00001,aux12656_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux12652_BOOL,aux12653_BOOL,aux12655_BOOL,aux12656_BOOL],aux12657_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux12658_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux12659_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12660,s_00011],0);
constraint int_lt_reif(s_00001,aux12660,aux12661_BOOL);
constraint int_le_reif(s_00011, s_00001,aux12662_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux12658_BOOL,aux12659_BOOL,aux12661_BOOL,aux12662_BOOL],aux12663_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux12664_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux12665_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux12666,s_00012],0);
constraint int_lt_reif(s_00001,aux12666,aux12667_BOOL);
constraint int_le_reif(s_00012, s_00001,aux12668_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux12664_BOOL,aux12665_BOOL,aux12667_BOOL,aux12668_BOOL],aux12669_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux12670_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux12671_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12672,s_00013],0);
constraint int_lt_reif(s_00001,aux12672,aux12673_BOOL);
constraint int_le_reif(s_00013, s_00001,aux12674_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux12670_BOOL,aux12671_BOOL,aux12673_BOOL,aux12674_BOOL],aux12675_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux12676_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux12677_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12678,s_00014],0);
constraint int_lt_reif(s_00001,aux12678,aux12679_BOOL);
constraint int_le_reif(s_00014, s_00001,aux12680_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux12676_BOOL,aux12677_BOOL,aux12679_BOOL,aux12680_BOOL],aux12681_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux12682_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux12683_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12684,s_00015],0);
constraint int_lt_reif(s_00001,aux12684,aux12685_BOOL);
constraint int_le_reif(s_00015, s_00001,aux12686_BOOL);
constraint array_bool_and([w_00006_00015_BOOL,aux12682_BOOL,aux12683_BOOL,aux12685_BOOL,aux12686_BOOL],aux12687_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux12688_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux12689_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12690,s_00016],0);
constraint int_lt_reif(s_00001,aux12690,aux12691_BOOL);
constraint int_le_reif(s_00016, s_00001,aux12692_BOOL);
constraint array_bool_and([w_00006_00016_BOOL,aux12688_BOOL,aux12689_BOOL,aux12691_BOOL,aux12692_BOOL],aux12693_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux12694_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux12695_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux12696,s_00017],0);
constraint int_lt_reif(s_00001,aux12696,aux12697_BOOL);
constraint int_le_reif(s_00017, s_00001,aux12698_BOOL);
constraint array_bool_and([w_00006_00017_BOOL,aux12694_BOOL,aux12695_BOOL,aux12697_BOOL,aux12698_BOOL],aux12699_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux12700_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux12701_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12702,s_00018],0);
constraint int_lt_reif(s_00001,aux12702,aux12703_BOOL);
constraint int_le_reif(s_00018, s_00001,aux12704_BOOL);
constraint array_bool_and([w_00006_00018_BOOL,aux12700_BOOL,aux12701_BOOL,aux12703_BOOL,aux12704_BOOL],aux12705_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux12706_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux12707_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux12708,s_00019],0);
constraint int_lt_reif(s_00001,aux12708,aux12709_BOOL);
constraint int_le_reif(s_00019, s_00001,aux12710_BOOL);
constraint array_bool_and([w_00006_00019_BOOL,aux12706_BOOL,aux12707_BOOL,aux12709_BOOL,aux12710_BOOL],aux12711_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux12712_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux12713_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12714,s_00020],0);
constraint int_lt_reif(s_00001,aux12714,aux12715_BOOL);
constraint int_le_reif(s_00020, s_00001,aux12716_BOOL);
constraint array_bool_and([w_00006_00020_BOOL,aux12712_BOOL,aux12713_BOOL,aux12715_BOOL,aux12716_BOOL],aux12717_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux12718_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux12719,s_00001],0);
constraint int_lt_reif(s_00001,aux12719,aux12720_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux12718_BOOL,aux12720_BOOL],aux12721_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux12609_INTEGER,aux12615_INTEGER,aux12621_INTEGER,aux12627_INTEGER,aux12633_INTEGER,aux12639_INTEGER,aux12645_INTEGER,aux12651_INTEGER,aux12657_INTEGER,aux12663_INTEGER,aux12669_INTEGER,aux12675_INTEGER,aux12681_INTEGER,aux12687_INTEGER,aux12693_INTEGER,aux12699_INTEGER,aux12705_INTEGER,aux12711_INTEGER,aux12717_INTEGER,aux12721_INTEGER,1],0,aux12722_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux12723_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux12724_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux12725,s_00001],0);
constraint int_lt_reif(s_00002,aux12725,aux12726_BOOL);
constraint int_le_reif(s_00001, s_00002,aux12727_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux12723_BOOL,aux12724_BOOL,aux12726_BOOL,aux12727_BOOL],aux12728_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux12729_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux12730_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12731,s_00003],0);
constraint int_lt_reif(s_00002,aux12731,aux12732_BOOL);
constraint int_le_reif(s_00003, s_00002,aux12733_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux12729_BOOL,aux12730_BOOL,aux12732_BOOL,aux12733_BOOL],aux12734_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux12735_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux12736_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12737,s_00004],0);
constraint int_lt_reif(s_00002,aux12737,aux12738_BOOL);
constraint int_le_reif(s_00004, s_00002,aux12739_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux12735_BOOL,aux12736_BOOL,aux12738_BOOL,aux12739_BOOL],aux12740_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux12741_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux12742_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12743,s_00005],0);
constraint int_lt_reif(s_00002,aux12743,aux12744_BOOL);
constraint int_le_reif(s_00005, s_00002,aux12745_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux12741_BOOL,aux12742_BOOL,aux12744_BOOL,aux12745_BOOL],aux12746_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux12747_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux12748_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12749,s_00006],0);
constraint int_lt_reif(s_00002,aux12749,aux12750_BOOL);
constraint int_le_reif(s_00006, s_00002,aux12751_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux12747_BOOL,aux12748_BOOL,aux12750_BOOL,aux12751_BOOL],aux12752_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux12753_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux12754_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12755,s_00007],0);
constraint int_lt_reif(s_00002,aux12755,aux12756_BOOL);
constraint int_le_reif(s_00007, s_00002,aux12757_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux12753_BOOL,aux12754_BOOL,aux12756_BOOL,aux12757_BOOL],aux12758_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux12759_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux12760_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12761,s_00008],0);
constraint int_lt_reif(s_00002,aux12761,aux12762_BOOL);
constraint int_le_reif(s_00008, s_00002,aux12763_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux12759_BOOL,aux12760_BOOL,aux12762_BOOL,aux12763_BOOL],aux12764_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux12765_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux12766_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12767,s_00009],0);
constraint int_lt_reif(s_00002,aux12767,aux12768_BOOL);
constraint int_le_reif(s_00009, s_00002,aux12769_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux12765_BOOL,aux12766_BOOL,aux12768_BOOL,aux12769_BOOL],aux12770_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux12771_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux12772_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux12773,s_00010],0);
constraint int_lt_reif(s_00002,aux12773,aux12774_BOOL);
constraint int_le_reif(s_00010, s_00002,aux12775_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux12771_BOOL,aux12772_BOOL,aux12774_BOOL,aux12775_BOOL],aux12776_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux12777_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux12778_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12779,s_00011],0);
constraint int_lt_reif(s_00002,aux12779,aux12780_BOOL);
constraint int_le_reif(s_00011, s_00002,aux12781_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux12777_BOOL,aux12778_BOOL,aux12780_BOOL,aux12781_BOOL],aux12782_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux12783_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux12784_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux12785,s_00012],0);
constraint int_lt_reif(s_00002,aux12785,aux12786_BOOL);
constraint int_le_reif(s_00012, s_00002,aux12787_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux12783_BOOL,aux12784_BOOL,aux12786_BOOL,aux12787_BOOL],aux12788_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux12789_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux12790_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12791,s_00013],0);
constraint int_lt_reif(s_00002,aux12791,aux12792_BOOL);
constraint int_le_reif(s_00013, s_00002,aux12793_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux12789_BOOL,aux12790_BOOL,aux12792_BOOL,aux12793_BOOL],aux12794_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux12795_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux12796_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12797,s_00014],0);
constraint int_lt_reif(s_00002,aux12797,aux12798_BOOL);
constraint int_le_reif(s_00014, s_00002,aux12799_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux12795_BOOL,aux12796_BOOL,aux12798_BOOL,aux12799_BOOL],aux12800_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux12801_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux12802_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12803,s_00015],0);
constraint int_lt_reif(s_00002,aux12803,aux12804_BOOL);
constraint int_le_reif(s_00015, s_00002,aux12805_BOOL);
constraint array_bool_and([w_00006_00015_BOOL,aux12801_BOOL,aux12802_BOOL,aux12804_BOOL,aux12805_BOOL],aux12806_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux12807_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux12808_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12809,s_00016],0);
constraint int_lt_reif(s_00002,aux12809,aux12810_BOOL);
constraint int_le_reif(s_00016, s_00002,aux12811_BOOL);
constraint array_bool_and([w_00006_00016_BOOL,aux12807_BOOL,aux12808_BOOL,aux12810_BOOL,aux12811_BOOL],aux12812_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux12813_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux12814_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux12815,s_00017],0);
constraint int_lt_reif(s_00002,aux12815,aux12816_BOOL);
constraint int_le_reif(s_00017, s_00002,aux12817_BOOL);
constraint array_bool_and([w_00006_00017_BOOL,aux12813_BOOL,aux12814_BOOL,aux12816_BOOL,aux12817_BOOL],aux12818_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux12819_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux12820_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12821,s_00018],0);
constraint int_lt_reif(s_00002,aux12821,aux12822_BOOL);
constraint int_le_reif(s_00018, s_00002,aux12823_BOOL);
constraint array_bool_and([w_00006_00018_BOOL,aux12819_BOOL,aux12820_BOOL,aux12822_BOOL,aux12823_BOOL],aux12824_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux12825_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux12826_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux12827,s_00019],0);
constraint int_lt_reif(s_00002,aux12827,aux12828_BOOL);
constraint int_le_reif(s_00019, s_00002,aux12829_BOOL);
constraint array_bool_and([w_00006_00019_BOOL,aux12825_BOOL,aux12826_BOOL,aux12828_BOOL,aux12829_BOOL],aux12830_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux12831_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux12832_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12833,s_00020],0);
constraint int_lt_reif(s_00002,aux12833,aux12834_BOOL);
constraint int_le_reif(s_00020, s_00002,aux12835_BOOL);
constraint array_bool_and([w_00006_00020_BOOL,aux12831_BOOL,aux12832_BOOL,aux12834_BOOL,aux12835_BOOL],aux12836_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux12837_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux12838,s_00002],0);
constraint int_lt_reif(s_00002,aux12838,aux12839_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux12837_BOOL,aux12839_BOOL],aux12840_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux12728_INTEGER,aux12734_INTEGER,aux12740_INTEGER,aux12746_INTEGER,aux12752_INTEGER,aux12758_INTEGER,aux12764_INTEGER,aux12770_INTEGER,aux12776_INTEGER,aux12782_INTEGER,aux12788_INTEGER,aux12794_INTEGER,aux12800_INTEGER,aux12806_INTEGER,aux12812_INTEGER,aux12818_INTEGER,aux12824_INTEGER,aux12830_INTEGER,aux12836_INTEGER,aux12840_INTEGER,1],0,aux12841_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux12842_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux12843_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux12844,s_00001],0);
constraint int_lt_reif(s_00003,aux12844,aux12845_BOOL);
constraint int_le_reif(s_00001, s_00003,aux12846_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux12842_BOOL,aux12843_BOOL,aux12845_BOOL,aux12846_BOOL],aux12847_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux12848_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux12849_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux12850,s_00002],0);
constraint int_lt_reif(s_00003,aux12850,aux12851_BOOL);
constraint int_le_reif(s_00002, s_00003,aux12852_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux12848_BOOL,aux12849_BOOL,aux12851_BOOL,aux12852_BOOL],aux12853_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux12854_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux12855_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12856,s_00004],0);
constraint int_lt_reif(s_00003,aux12856,aux12857_BOOL);
constraint int_le_reif(s_00004, s_00003,aux12858_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux12854_BOOL,aux12855_BOOL,aux12857_BOOL,aux12858_BOOL],aux12859_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux12860_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux12861_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12862,s_00005],0);
constraint int_lt_reif(s_00003,aux12862,aux12863_BOOL);
constraint int_le_reif(s_00005, s_00003,aux12864_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux12860_BOOL,aux12861_BOOL,aux12863_BOOL,aux12864_BOOL],aux12865_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux12866_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux12867_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12868,s_00006],0);
constraint int_lt_reif(s_00003,aux12868,aux12869_BOOL);
constraint int_le_reif(s_00006, s_00003,aux12870_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux12866_BOOL,aux12867_BOOL,aux12869_BOOL,aux12870_BOOL],aux12871_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux12872_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux12873_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12874,s_00007],0);
constraint int_lt_reif(s_00003,aux12874,aux12875_BOOL);
constraint int_le_reif(s_00007, s_00003,aux12876_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux12872_BOOL,aux12873_BOOL,aux12875_BOOL,aux12876_BOOL],aux12877_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux12878_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux12879_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12880,s_00008],0);
constraint int_lt_reif(s_00003,aux12880,aux12881_BOOL);
constraint int_le_reif(s_00008, s_00003,aux12882_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux12878_BOOL,aux12879_BOOL,aux12881_BOOL,aux12882_BOOL],aux12883_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux12884_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux12885_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12886,s_00009],0);
constraint int_lt_reif(s_00003,aux12886,aux12887_BOOL);
constraint int_le_reif(s_00009, s_00003,aux12888_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux12884_BOOL,aux12885_BOOL,aux12887_BOOL,aux12888_BOOL],aux12889_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux12890_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux12891_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux12892,s_00010],0);
constraint int_lt_reif(s_00003,aux12892,aux12893_BOOL);
constraint int_le_reif(s_00010, s_00003,aux12894_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux12890_BOOL,aux12891_BOOL,aux12893_BOOL,aux12894_BOOL],aux12895_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux12896_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux12897_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12898,s_00011],0);
constraint int_lt_reif(s_00003,aux12898,aux12899_BOOL);
constraint int_le_reif(s_00011, s_00003,aux12900_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux12896_BOOL,aux12897_BOOL,aux12899_BOOL,aux12900_BOOL],aux12901_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux12902_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux12903_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux12904,s_00012],0);
constraint int_lt_reif(s_00003,aux12904,aux12905_BOOL);
constraint int_le_reif(s_00012, s_00003,aux12906_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux12902_BOOL,aux12903_BOOL,aux12905_BOOL,aux12906_BOOL],aux12907_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux12908_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux12909_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12910,s_00013],0);
constraint int_lt_reif(s_00003,aux12910,aux12911_BOOL);
constraint int_le_reif(s_00013, s_00003,aux12912_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux12908_BOOL,aux12909_BOOL,aux12911_BOOL,aux12912_BOOL],aux12913_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux12914_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux12915_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12916,s_00014],0);
constraint int_lt_reif(s_00003,aux12916,aux12917_BOOL);
constraint int_le_reif(s_00014, s_00003,aux12918_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux12914_BOOL,aux12915_BOOL,aux12917_BOOL,aux12918_BOOL],aux12919_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux12920_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux12921_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12922,s_00015],0);
constraint int_lt_reif(s_00003,aux12922,aux12923_BOOL);
constraint int_le_reif(s_00015, s_00003,aux12924_BOOL);
constraint array_bool_and([w_00006_00015_BOOL,aux12920_BOOL,aux12921_BOOL,aux12923_BOOL,aux12924_BOOL],aux12925_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux12926_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux12927_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12928,s_00016],0);
constraint int_lt_reif(s_00003,aux12928,aux12929_BOOL);
constraint int_le_reif(s_00016, s_00003,aux12930_BOOL);
constraint array_bool_and([w_00006_00016_BOOL,aux12926_BOOL,aux12927_BOOL,aux12929_BOOL,aux12930_BOOL],aux12931_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux12932_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux12933_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux12934,s_00017],0);
constraint int_lt_reif(s_00003,aux12934,aux12935_BOOL);
constraint int_le_reif(s_00017, s_00003,aux12936_BOOL);
constraint array_bool_and([w_00006_00017_BOOL,aux12932_BOOL,aux12933_BOOL,aux12935_BOOL,aux12936_BOOL],aux12937_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux12938_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux12939_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12940,s_00018],0);
constraint int_lt_reif(s_00003,aux12940,aux12941_BOOL);
constraint int_le_reif(s_00018, s_00003,aux12942_BOOL);
constraint array_bool_and([w_00006_00018_BOOL,aux12938_BOOL,aux12939_BOOL,aux12941_BOOL,aux12942_BOOL],aux12943_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux12944_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux12945_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux12946,s_00019],0);
constraint int_lt_reif(s_00003,aux12946,aux12947_BOOL);
constraint int_le_reif(s_00019, s_00003,aux12948_BOOL);
constraint array_bool_and([w_00006_00019_BOOL,aux12944_BOOL,aux12945_BOOL,aux12947_BOOL,aux12948_BOOL],aux12949_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux12950_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux12951_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12952,s_00020],0);
constraint int_lt_reif(s_00003,aux12952,aux12953_BOOL);
constraint int_le_reif(s_00020, s_00003,aux12954_BOOL);
constraint array_bool_and([w_00006_00020_BOOL,aux12950_BOOL,aux12951_BOOL,aux12953_BOOL,aux12954_BOOL],aux12955_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux12956_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12957,s_00003],0);
constraint int_lt_reif(s_00003,aux12957,aux12958_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux12956_BOOL,aux12958_BOOL],aux12959_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux12847_INTEGER,aux12853_INTEGER,aux12859_INTEGER,aux12865_INTEGER,aux12871_INTEGER,aux12877_INTEGER,aux12883_INTEGER,aux12889_INTEGER,aux12895_INTEGER,aux12901_INTEGER,aux12907_INTEGER,aux12913_INTEGER,aux12919_INTEGER,aux12925_INTEGER,aux12931_INTEGER,aux12937_INTEGER,aux12943_INTEGER,aux12949_INTEGER,aux12955_INTEGER,aux12959_INTEGER,1],0,aux12960_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux12961_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux12962_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux12963,s_00001],0);
constraint int_lt_reif(s_00013,aux12963,aux12964_BOOL);
constraint int_le_reif(s_00001, s_00013,aux12965_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux12961_BOOL,aux12962_BOOL,aux12964_BOOL,aux12965_BOOL],aux12966_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux12967_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux12968_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux12969,s_00002],0);
constraint int_lt_reif(s_00013,aux12969,aux12970_BOOL);
constraint int_le_reif(s_00002, s_00013,aux12971_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux12967_BOOL,aux12968_BOOL,aux12970_BOOL,aux12971_BOOL],aux12972_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux12973_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux12974_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12975,s_00003],0);
constraint int_lt_reif(s_00013,aux12975,aux12976_BOOL);
constraint int_le_reif(s_00003, s_00013,aux12977_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux12973_BOOL,aux12974_BOOL,aux12976_BOOL,aux12977_BOOL],aux12978_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux12979_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux12980_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12981,s_00004],0);
constraint int_lt_reif(s_00013,aux12981,aux12982_BOOL);
constraint int_le_reif(s_00004, s_00013,aux12983_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux12979_BOOL,aux12980_BOOL,aux12982_BOOL,aux12983_BOOL],aux12984_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux12985_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux12986_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12987,s_00005],0);
constraint int_lt_reif(s_00013,aux12987,aux12988_BOOL);
constraint int_le_reif(s_00005, s_00013,aux12989_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux12985_BOOL,aux12986_BOOL,aux12988_BOOL,aux12989_BOOL],aux12990_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux12991_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux12992_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12993,s_00006],0);
constraint int_lt_reif(s_00013,aux12993,aux12994_BOOL);
constraint int_le_reif(s_00006, s_00013,aux12995_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux12991_BOOL,aux12992_BOOL,aux12994_BOOL,aux12995_BOOL],aux12996_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux12997_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux12998_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12999,s_00007],0);
constraint int_lt_reif(s_00013,aux12999,aux13000_BOOL);
constraint int_le_reif(s_00007, s_00013,aux13001_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux12997_BOOL,aux12998_BOOL,aux13000_BOOL,aux13001_BOOL],aux13002_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux13003_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux13004_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13005,s_00008],0);
constraint int_lt_reif(s_00013,aux13005,aux13006_BOOL);
constraint int_le_reif(s_00008, s_00013,aux13007_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux13003_BOOL,aux13004_BOOL,aux13006_BOOL,aux13007_BOOL],aux13008_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux13009_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux13010_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13011,s_00009],0);
constraint int_lt_reif(s_00013,aux13011,aux13012_BOOL);
constraint int_le_reif(s_00009, s_00013,aux13013_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux13009_BOOL,aux13010_BOOL,aux13012_BOOL,aux13013_BOOL],aux13014_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux13015_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux13016_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux13017,s_00010],0);
constraint int_lt_reif(s_00013,aux13017,aux13018_BOOL);
constraint int_le_reif(s_00010, s_00013,aux13019_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux13015_BOOL,aux13016_BOOL,aux13018_BOOL,aux13019_BOOL],aux13020_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux13021_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux13022_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13023,s_00011],0);
constraint int_lt_reif(s_00013,aux13023,aux13024_BOOL);
constraint int_le_reif(s_00011, s_00013,aux13025_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux13021_BOOL,aux13022_BOOL,aux13024_BOOL,aux13025_BOOL],aux13026_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13027_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux13028_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux13029,s_00012],0);
constraint int_lt_reif(s_00013,aux13029,aux13030_BOOL);
constraint int_le_reif(s_00012, s_00013,aux13031_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux13027_BOOL,aux13028_BOOL,aux13030_BOOL,aux13031_BOOL],aux13032_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux13033_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux13034_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13035,s_00014],0);
constraint int_lt_reif(s_00013,aux13035,aux13036_BOOL);
constraint int_le_reif(s_00014, s_00013,aux13037_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux13033_BOOL,aux13034_BOOL,aux13036_BOOL,aux13037_BOOL],aux13038_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux13039_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux13040_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13041,s_00015],0);
constraint int_lt_reif(s_00013,aux13041,aux13042_BOOL);
constraint int_le_reif(s_00015, s_00013,aux13043_BOOL);
constraint array_bool_and([w_00006_00015_BOOL,aux13039_BOOL,aux13040_BOOL,aux13042_BOOL,aux13043_BOOL],aux13044_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux13045_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux13046_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13047,s_00016],0);
constraint int_lt_reif(s_00013,aux13047,aux13048_BOOL);
constraint int_le_reif(s_00016, s_00013,aux13049_BOOL);
constraint array_bool_and([w_00006_00016_BOOL,aux13045_BOOL,aux13046_BOOL,aux13048_BOOL,aux13049_BOOL],aux13050_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux13051_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux13052_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux13053,s_00017],0);
constraint int_lt_reif(s_00013,aux13053,aux13054_BOOL);
constraint int_le_reif(s_00017, s_00013,aux13055_BOOL);
constraint array_bool_and([w_00006_00017_BOOL,aux13051_BOOL,aux13052_BOOL,aux13054_BOOL,aux13055_BOOL],aux13056_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux13057_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13058_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13059,s_00018],0);
constraint int_lt_reif(s_00013,aux13059,aux13060_BOOL);
constraint int_le_reif(s_00018, s_00013,aux13061_BOOL);
constraint array_bool_and([w_00006_00018_BOOL,aux13057_BOOL,aux13058_BOOL,aux13060_BOOL,aux13061_BOOL],aux13062_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux13063_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux13064_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux13065,s_00019],0);
constraint int_lt_reif(s_00013,aux13065,aux13066_BOOL);
constraint int_le_reif(s_00019, s_00013,aux13067_BOOL);
constraint array_bool_and([w_00006_00019_BOOL,aux13063_BOOL,aux13064_BOOL,aux13066_BOOL,aux13067_BOOL],aux13068_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux13069_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux13070_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13071,s_00020],0);
constraint int_lt_reif(s_00013,aux13071,aux13072_BOOL);
constraint int_le_reif(s_00020, s_00013,aux13073_BOOL);
constraint array_bool_and([w_00006_00020_BOOL,aux13069_BOOL,aux13070_BOOL,aux13072_BOOL,aux13073_BOOL],aux13074_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux13075_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13076,s_00013],0);
constraint int_lt_reif(s_00013,aux13076,aux13077_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux13075_BOOL,aux13077_BOOL],aux13078_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux12966_INTEGER,aux12972_INTEGER,aux12978_INTEGER,aux12984_INTEGER,aux12990_INTEGER,aux12996_INTEGER,aux13002_INTEGER,aux13008_INTEGER,aux13014_INTEGER,aux13020_INTEGER,aux13026_INTEGER,aux13032_INTEGER,aux13038_INTEGER,aux13044_INTEGER,aux13050_INTEGER,aux13056_INTEGER,aux13062_INTEGER,aux13068_INTEGER,aux13074_INTEGER,aux13078_INTEGER,1],0,aux13079_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux13080_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux13081_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux13082,s_00001],0);
constraint int_lt_reif(s_00005,aux13082,aux13083_BOOL);
constraint int_le_reif(s_00001, s_00005,aux13084_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux13080_BOOL,aux13081_BOOL,aux13083_BOOL,aux13084_BOOL],aux13085_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux13086_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux13087_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux13088,s_00002],0);
constraint int_lt_reif(s_00005,aux13088,aux13089_BOOL);
constraint int_le_reif(s_00002, s_00005,aux13090_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux13086_BOOL,aux13087_BOOL,aux13089_BOOL,aux13090_BOOL],aux13091_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux13092_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux13093_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13094,s_00003],0);
constraint int_lt_reif(s_00005,aux13094,aux13095_BOOL);
constraint int_le_reif(s_00003, s_00005,aux13096_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux13092_BOOL,aux13093_BOOL,aux13095_BOOL,aux13096_BOOL],aux13097_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux13098_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux13099_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13100,s_00004],0);
constraint int_lt_reif(s_00005,aux13100,aux13101_BOOL);
constraint int_le_reif(s_00004, s_00005,aux13102_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux13098_BOOL,aux13099_BOOL,aux13101_BOOL,aux13102_BOOL],aux13103_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux13104_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux13105_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13106,s_00006],0);
constraint int_lt_reif(s_00005,aux13106,aux13107_BOOL);
constraint int_le_reif(s_00006, s_00005,aux13108_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux13104_BOOL,aux13105_BOOL,aux13107_BOOL,aux13108_BOOL],aux13109_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux13110_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux13111_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13112,s_00007],0);
constraint int_lt_reif(s_00005,aux13112,aux13113_BOOL);
constraint int_le_reif(s_00007, s_00005,aux13114_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux13110_BOOL,aux13111_BOOL,aux13113_BOOL,aux13114_BOOL],aux13115_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux13116_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux13117_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13118,s_00008],0);
constraint int_lt_reif(s_00005,aux13118,aux13119_BOOL);
constraint int_le_reif(s_00008, s_00005,aux13120_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux13116_BOOL,aux13117_BOOL,aux13119_BOOL,aux13120_BOOL],aux13121_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux13122_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux13123_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13124,s_00009],0);
constraint int_lt_reif(s_00005,aux13124,aux13125_BOOL);
constraint int_le_reif(s_00009, s_00005,aux13126_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux13122_BOOL,aux13123_BOOL,aux13125_BOOL,aux13126_BOOL],aux13127_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux13128_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux13129_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux13130,s_00010],0);
constraint int_lt_reif(s_00005,aux13130,aux13131_BOOL);
constraint int_le_reif(s_00010, s_00005,aux13132_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux13128_BOOL,aux13129_BOOL,aux13131_BOOL,aux13132_BOOL],aux13133_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux13134_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux13135_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13136,s_00011],0);
constraint int_lt_reif(s_00005,aux13136,aux13137_BOOL);
constraint int_le_reif(s_00011, s_00005,aux13138_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux13134_BOOL,aux13135_BOOL,aux13137_BOOL,aux13138_BOOL],aux13139_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux13140_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13141_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux13142,s_00012],0);
constraint int_lt_reif(s_00005,aux13142,aux13143_BOOL);
constraint int_le_reif(s_00012, s_00005,aux13144_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux13140_BOOL,aux13141_BOOL,aux13143_BOOL,aux13144_BOOL],aux13145_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux13146_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux13147_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13148,s_00013],0);
constraint int_lt_reif(s_00005,aux13148,aux13149_BOOL);
constraint int_le_reif(s_00013, s_00005,aux13150_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux13146_BOOL,aux13147_BOOL,aux13149_BOOL,aux13150_BOOL],aux13151_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux13152_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux13153_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13154,s_00014],0);
constraint int_lt_reif(s_00005,aux13154,aux13155_BOOL);
constraint int_le_reif(s_00014, s_00005,aux13156_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux13152_BOOL,aux13153_BOOL,aux13155_BOOL,aux13156_BOOL],aux13157_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux13158_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux13159_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13160,s_00015],0);
constraint int_lt_reif(s_00005,aux13160,aux13161_BOOL);
constraint int_le_reif(s_00015, s_00005,aux13162_BOOL);
constraint array_bool_and([w_00006_00015_BOOL,aux13158_BOOL,aux13159_BOOL,aux13161_BOOL,aux13162_BOOL],aux13163_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux13164_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux13165_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13166,s_00016],0);
constraint int_lt_reif(s_00005,aux13166,aux13167_BOOL);
constraint int_le_reif(s_00016, s_00005,aux13168_BOOL);
constraint array_bool_and([w_00006_00016_BOOL,aux13164_BOOL,aux13165_BOOL,aux13167_BOOL,aux13168_BOOL],aux13169_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux13170_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux13171_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux13172,s_00017],0);
constraint int_lt_reif(s_00005,aux13172,aux13173_BOOL);
constraint int_le_reif(s_00017, s_00005,aux13174_BOOL);
constraint array_bool_and([w_00006_00017_BOOL,aux13170_BOOL,aux13171_BOOL,aux13173_BOOL,aux13174_BOOL],aux13175_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux13176_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13177_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13178,s_00018],0);
constraint int_lt_reif(s_00005,aux13178,aux13179_BOOL);
constraint int_le_reif(s_00018, s_00005,aux13180_BOOL);
constraint array_bool_and([w_00006_00018_BOOL,aux13176_BOOL,aux13177_BOOL,aux13179_BOOL,aux13180_BOOL],aux13181_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux13182_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux13183_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux13184,s_00019],0);
constraint int_lt_reif(s_00005,aux13184,aux13185_BOOL);
constraint int_le_reif(s_00019, s_00005,aux13186_BOOL);
constraint array_bool_and([w_00006_00019_BOOL,aux13182_BOOL,aux13183_BOOL,aux13185_BOOL,aux13186_BOOL],aux13187_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux13188_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux13189_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13190,s_00020],0);
constraint int_lt_reif(s_00005,aux13190,aux13191_BOOL);
constraint int_le_reif(s_00020, s_00005,aux13192_BOOL);
constraint array_bool_and([w_00006_00020_BOOL,aux13188_BOOL,aux13189_BOOL,aux13191_BOOL,aux13192_BOOL],aux13193_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux13194_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13195,s_00005],0);
constraint int_lt_reif(s_00005,aux13195,aux13196_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux13194_BOOL,aux13196_BOOL],aux13197_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux13085_INTEGER,aux13091_INTEGER,aux13097_INTEGER,aux13103_INTEGER,aux13109_INTEGER,aux13115_INTEGER,aux13121_INTEGER,aux13127_INTEGER,aux13133_INTEGER,aux13139_INTEGER,aux13145_INTEGER,aux13151_INTEGER,aux13157_INTEGER,aux13163_INTEGER,aux13169_INTEGER,aux13175_INTEGER,aux13181_INTEGER,aux13187_INTEGER,aux13193_INTEGER,aux13197_INTEGER,1],0,aux13198_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux13199_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13200_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux13201,s_00001],0);
constraint int_lt_reif(s_00018,aux13201,aux13202_BOOL);
constraint int_le_reif(s_00001, s_00018,aux13203_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux13199_BOOL,aux13200_BOOL,aux13202_BOOL,aux13203_BOOL],aux13204_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux13205_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13206_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux13207,s_00002],0);
constraint int_lt_reif(s_00018,aux13207,aux13208_BOOL);
constraint int_le_reif(s_00002, s_00018,aux13209_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux13205_BOOL,aux13206_BOOL,aux13208_BOOL,aux13209_BOOL],aux13210_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux13211_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13212_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13213,s_00003],0);
constraint int_lt_reif(s_00018,aux13213,aux13214_BOOL);
constraint int_le_reif(s_00003, s_00018,aux13215_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux13211_BOOL,aux13212_BOOL,aux13214_BOOL,aux13215_BOOL],aux13216_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux13217_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13218_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13219,s_00004],0);
constraint int_lt_reif(s_00018,aux13219,aux13220_BOOL);
constraint int_le_reif(s_00004, s_00018,aux13221_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux13217_BOOL,aux13218_BOOL,aux13220_BOOL,aux13221_BOOL],aux13222_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux13223_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13224_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13225,s_00005],0);
constraint int_lt_reif(s_00018,aux13225,aux13226_BOOL);
constraint int_le_reif(s_00005, s_00018,aux13227_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux13223_BOOL,aux13224_BOOL,aux13226_BOOL,aux13227_BOOL],aux13228_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux13229_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13230_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13231,s_00006],0);
constraint int_lt_reif(s_00018,aux13231,aux13232_BOOL);
constraint int_le_reif(s_00006, s_00018,aux13233_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux13229_BOOL,aux13230_BOOL,aux13232_BOOL,aux13233_BOOL],aux13234_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux13235_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13236_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13237,s_00007],0);
constraint int_lt_reif(s_00018,aux13237,aux13238_BOOL);
constraint int_le_reif(s_00007, s_00018,aux13239_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux13235_BOOL,aux13236_BOOL,aux13238_BOOL,aux13239_BOOL],aux13240_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux13241_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13242_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13243,s_00008],0);
constraint int_lt_reif(s_00018,aux13243,aux13244_BOOL);
constraint int_le_reif(s_00008, s_00018,aux13245_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux13241_BOOL,aux13242_BOOL,aux13244_BOOL,aux13245_BOOL],aux13246_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux13247_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13248_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13249,s_00009],0);
constraint int_lt_reif(s_00018,aux13249,aux13250_BOOL);
constraint int_le_reif(s_00009, s_00018,aux13251_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux13247_BOOL,aux13248_BOOL,aux13250_BOOL,aux13251_BOOL],aux13252_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux13253_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13254_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux13255,s_00010],0);
constraint int_lt_reif(s_00018,aux13255,aux13256_BOOL);
constraint int_le_reif(s_00010, s_00018,aux13257_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux13253_BOOL,aux13254_BOOL,aux13256_BOOL,aux13257_BOOL],aux13258_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux13259_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13260_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13261,s_00011],0);
constraint int_lt_reif(s_00018,aux13261,aux13262_BOOL);
constraint int_le_reif(s_00011, s_00018,aux13263_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux13259_BOOL,aux13260_BOOL,aux13262_BOOL,aux13263_BOOL],aux13264_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13265_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13266_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux13267,s_00012],0);
constraint int_lt_reif(s_00018,aux13267,aux13268_BOOL);
constraint int_le_reif(s_00012, s_00018,aux13269_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux13265_BOOL,aux13266_BOOL,aux13268_BOOL,aux13269_BOOL],aux13270_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux13271_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13272_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13273,s_00013],0);
constraint int_lt_reif(s_00018,aux13273,aux13274_BOOL);
constraint int_le_reif(s_00013, s_00018,aux13275_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux13271_BOOL,aux13272_BOOL,aux13274_BOOL,aux13275_BOOL],aux13276_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux13277_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13278_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13279,s_00014],0);
constraint int_lt_reif(s_00018,aux13279,aux13280_BOOL);
constraint int_le_reif(s_00014, s_00018,aux13281_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux13277_BOOL,aux13278_BOOL,aux13280_BOOL,aux13281_BOOL],aux13282_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux13283_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13284_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13285,s_00015],0);
constraint int_lt_reif(s_00018,aux13285,aux13286_BOOL);
constraint int_le_reif(s_00015, s_00018,aux13287_BOOL);
constraint array_bool_and([w_00006_00015_BOOL,aux13283_BOOL,aux13284_BOOL,aux13286_BOOL,aux13287_BOOL],aux13288_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux13289_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13290_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13291,s_00016],0);
constraint int_lt_reif(s_00018,aux13291,aux13292_BOOL);
constraint int_le_reif(s_00016, s_00018,aux13293_BOOL);
constraint array_bool_and([w_00006_00016_BOOL,aux13289_BOOL,aux13290_BOOL,aux13292_BOOL,aux13293_BOOL],aux13294_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux13295_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13296_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux13297,s_00017],0);
constraint int_lt_reif(s_00018,aux13297,aux13298_BOOL);
constraint int_le_reif(s_00017, s_00018,aux13299_BOOL);
constraint array_bool_and([w_00006_00017_BOOL,aux13295_BOOL,aux13296_BOOL,aux13298_BOOL,aux13299_BOOL],aux13300_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13301_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux13302_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux13303,s_00019],0);
constraint int_lt_reif(s_00018,aux13303,aux13304_BOOL);
constraint int_le_reif(s_00019, s_00018,aux13305_BOOL);
constraint array_bool_and([w_00006_00019_BOOL,aux13301_BOOL,aux13302_BOOL,aux13304_BOOL,aux13305_BOOL],aux13306_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13307_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux13308_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13309,s_00020],0);
constraint int_lt_reif(s_00018,aux13309,aux13310_BOOL);
constraint int_le_reif(s_00020, s_00018,aux13311_BOOL);
constraint array_bool_and([w_00006_00020_BOOL,aux13307_BOOL,aux13308_BOOL,aux13310_BOOL,aux13311_BOOL],aux13312_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13313_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13314,s_00018],0);
constraint int_lt_reif(s_00018,aux13314,aux13315_BOOL);
constraint array_bool_and([w_00006_00018_BOOL,aux13313_BOOL,aux13315_BOOL],aux13316_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux13204_INTEGER,aux13210_INTEGER,aux13216_INTEGER,aux13222_INTEGER,aux13228_INTEGER,aux13234_INTEGER,aux13240_INTEGER,aux13246_INTEGER,aux13252_INTEGER,aux13258_INTEGER,aux13264_INTEGER,aux13270_INTEGER,aux13276_INTEGER,aux13282_INTEGER,aux13288_INTEGER,aux13294_INTEGER,aux13300_INTEGER,aux13306_INTEGER,aux13312_INTEGER,aux13316_INTEGER,1],0,aux13317_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux13318_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux13319_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux13320,s_00001],0);
constraint int_lt_reif(s_00007,aux13320,aux13321_BOOL);
constraint int_le_reif(s_00001, s_00007,aux13322_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux13318_BOOL,aux13319_BOOL,aux13321_BOOL,aux13322_BOOL],aux13323_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux13324_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux13325_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux13326,s_00002],0);
constraint int_lt_reif(s_00007,aux13326,aux13327_BOOL);
constraint int_le_reif(s_00002, s_00007,aux13328_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux13324_BOOL,aux13325_BOOL,aux13327_BOOL,aux13328_BOOL],aux13329_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux13330_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux13331_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13332,s_00003],0);
constraint int_lt_reif(s_00007,aux13332,aux13333_BOOL);
constraint int_le_reif(s_00003, s_00007,aux13334_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux13330_BOOL,aux13331_BOOL,aux13333_BOOL,aux13334_BOOL],aux13335_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux13336_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux13337_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13338,s_00004],0);
constraint int_lt_reif(s_00007,aux13338,aux13339_BOOL);
constraint int_le_reif(s_00004, s_00007,aux13340_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux13336_BOOL,aux13337_BOOL,aux13339_BOOL,aux13340_BOOL],aux13341_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux13342_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux13343_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13344,s_00005],0);
constraint int_lt_reif(s_00007,aux13344,aux13345_BOOL);
constraint int_le_reif(s_00005, s_00007,aux13346_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux13342_BOOL,aux13343_BOOL,aux13345_BOOL,aux13346_BOOL],aux13347_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux13348_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux13349_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13350,s_00006],0);
constraint int_lt_reif(s_00007,aux13350,aux13351_BOOL);
constraint int_le_reif(s_00006, s_00007,aux13352_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux13348_BOOL,aux13349_BOOL,aux13351_BOOL,aux13352_BOOL],aux13353_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux13354_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux13355_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13356,s_00008],0);
constraint int_lt_reif(s_00007,aux13356,aux13357_BOOL);
constraint int_le_reif(s_00008, s_00007,aux13358_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux13354_BOOL,aux13355_BOOL,aux13357_BOOL,aux13358_BOOL],aux13359_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux13360_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux13361_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13362,s_00009],0);
constraint int_lt_reif(s_00007,aux13362,aux13363_BOOL);
constraint int_le_reif(s_00009, s_00007,aux13364_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux13360_BOOL,aux13361_BOOL,aux13363_BOOL,aux13364_BOOL],aux13365_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux13366_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux13367_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux13368,s_00010],0);
constraint int_lt_reif(s_00007,aux13368,aux13369_BOOL);
constraint int_le_reif(s_00010, s_00007,aux13370_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux13366_BOOL,aux13367_BOOL,aux13369_BOOL,aux13370_BOOL],aux13371_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux13372_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux13373_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13374,s_00011],0);
constraint int_lt_reif(s_00007,aux13374,aux13375_BOOL);
constraint int_le_reif(s_00011, s_00007,aux13376_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux13372_BOOL,aux13373_BOOL,aux13375_BOOL,aux13376_BOOL],aux13377_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux13378_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13379_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux13380,s_00012],0);
constraint int_lt_reif(s_00007,aux13380,aux13381_BOOL);
constraint int_le_reif(s_00012, s_00007,aux13382_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux13378_BOOL,aux13379_BOOL,aux13381_BOOL,aux13382_BOOL],aux13383_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux13384_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux13385_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13386,s_00013],0);
constraint int_lt_reif(s_00007,aux13386,aux13387_BOOL);
constraint int_le_reif(s_00013, s_00007,aux13388_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux13384_BOOL,aux13385_BOOL,aux13387_BOOL,aux13388_BOOL],aux13389_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux13390_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux13391_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13392,s_00014],0);
constraint int_lt_reif(s_00007,aux13392,aux13393_BOOL);
constraint int_le_reif(s_00014, s_00007,aux13394_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux13390_BOOL,aux13391_BOOL,aux13393_BOOL,aux13394_BOOL],aux13395_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux13396_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux13397_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13398,s_00015],0);
constraint int_lt_reif(s_00007,aux13398,aux13399_BOOL);
constraint int_le_reif(s_00015, s_00007,aux13400_BOOL);
constraint array_bool_and([w_00006_00015_BOOL,aux13396_BOOL,aux13397_BOOL,aux13399_BOOL,aux13400_BOOL],aux13401_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux13402_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux13403_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13404,s_00016],0);
constraint int_lt_reif(s_00007,aux13404,aux13405_BOOL);
constraint int_le_reif(s_00016, s_00007,aux13406_BOOL);
constraint array_bool_and([w_00006_00016_BOOL,aux13402_BOOL,aux13403_BOOL,aux13405_BOOL,aux13406_BOOL],aux13407_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux13408_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux13409_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux13410,s_00017],0);
constraint int_lt_reif(s_00007,aux13410,aux13411_BOOL);
constraint int_le_reif(s_00017, s_00007,aux13412_BOOL);
constraint array_bool_and([w_00006_00017_BOOL,aux13408_BOOL,aux13409_BOOL,aux13411_BOOL,aux13412_BOOL],aux13413_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux13414_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13415_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13416,s_00018],0);
constraint int_lt_reif(s_00007,aux13416,aux13417_BOOL);
constraint int_le_reif(s_00018, s_00007,aux13418_BOOL);
constraint array_bool_and([w_00006_00018_BOOL,aux13414_BOOL,aux13415_BOOL,aux13417_BOOL,aux13418_BOOL],aux13419_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux13420_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux13421_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux13422,s_00019],0);
constraint int_lt_reif(s_00007,aux13422,aux13423_BOOL);
constraint int_le_reif(s_00019, s_00007,aux13424_BOOL);
constraint array_bool_and([w_00006_00019_BOOL,aux13420_BOOL,aux13421_BOOL,aux13423_BOOL,aux13424_BOOL],aux13425_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux13426_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux13427_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13428,s_00020],0);
constraint int_lt_reif(s_00007,aux13428,aux13429_BOOL);
constraint int_le_reif(s_00020, s_00007,aux13430_BOOL);
constraint array_bool_and([w_00006_00020_BOOL,aux13426_BOOL,aux13427_BOOL,aux13429_BOOL,aux13430_BOOL],aux13431_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux13432_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13433,s_00007],0);
constraint int_lt_reif(s_00007,aux13433,aux13434_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux13432_BOOL,aux13434_BOOL],aux13435_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux13323_INTEGER,aux13329_INTEGER,aux13335_INTEGER,aux13341_INTEGER,aux13347_INTEGER,aux13353_INTEGER,aux13359_INTEGER,aux13365_INTEGER,aux13371_INTEGER,aux13377_INTEGER,aux13383_INTEGER,aux13389_INTEGER,aux13395_INTEGER,aux13401_INTEGER,aux13407_INTEGER,aux13413_INTEGER,aux13419_INTEGER,aux13425_INTEGER,aux13431_INTEGER,aux13435_INTEGER,1],0,aux13436_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux13437_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux13438_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux13439,s_00001],0);
constraint int_lt_reif(s_00011,aux13439,aux13440_BOOL);
constraint int_le_reif(s_00001, s_00011,aux13441_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux13437_BOOL,aux13438_BOOL,aux13440_BOOL,aux13441_BOOL],aux13442_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux13443_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux13444_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux13445,s_00002],0);
constraint int_lt_reif(s_00011,aux13445,aux13446_BOOL);
constraint int_le_reif(s_00002, s_00011,aux13447_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux13443_BOOL,aux13444_BOOL,aux13446_BOOL,aux13447_BOOL],aux13448_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux13449_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux13450_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13451,s_00003],0);
constraint int_lt_reif(s_00011,aux13451,aux13452_BOOL);
constraint int_le_reif(s_00003, s_00011,aux13453_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux13449_BOOL,aux13450_BOOL,aux13452_BOOL,aux13453_BOOL],aux13454_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux13455_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux13456_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13457,s_00004],0);
constraint int_lt_reif(s_00011,aux13457,aux13458_BOOL);
constraint int_le_reif(s_00004, s_00011,aux13459_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux13455_BOOL,aux13456_BOOL,aux13458_BOOL,aux13459_BOOL],aux13460_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux13461_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux13462_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13463,s_00005],0);
constraint int_lt_reif(s_00011,aux13463,aux13464_BOOL);
constraint int_le_reif(s_00005, s_00011,aux13465_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux13461_BOOL,aux13462_BOOL,aux13464_BOOL,aux13465_BOOL],aux13466_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux13467_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux13468_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13469,s_00006],0);
constraint int_lt_reif(s_00011,aux13469,aux13470_BOOL);
constraint int_le_reif(s_00006, s_00011,aux13471_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux13467_BOOL,aux13468_BOOL,aux13470_BOOL,aux13471_BOOL],aux13472_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux13473_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux13474_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13475,s_00007],0);
constraint int_lt_reif(s_00011,aux13475,aux13476_BOOL);
constraint int_le_reif(s_00007, s_00011,aux13477_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux13473_BOOL,aux13474_BOOL,aux13476_BOOL,aux13477_BOOL],aux13478_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux13479_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux13480_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13481,s_00008],0);
constraint int_lt_reif(s_00011,aux13481,aux13482_BOOL);
constraint int_le_reif(s_00008, s_00011,aux13483_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux13479_BOOL,aux13480_BOOL,aux13482_BOOL,aux13483_BOOL],aux13484_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux13485_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux13486_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13487,s_00009],0);
constraint int_lt_reif(s_00011,aux13487,aux13488_BOOL);
constraint int_le_reif(s_00009, s_00011,aux13489_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux13485_BOOL,aux13486_BOOL,aux13488_BOOL,aux13489_BOOL],aux13490_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux13491_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux13492_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux13493,s_00010],0);
constraint int_lt_reif(s_00011,aux13493,aux13494_BOOL);
constraint int_le_reif(s_00010, s_00011,aux13495_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux13491_BOOL,aux13492_BOOL,aux13494_BOOL,aux13495_BOOL],aux13496_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux13497_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13498_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux13499,s_00012],0);
constraint int_lt_reif(s_00011,aux13499,aux13500_BOOL);
constraint int_le_reif(s_00012, s_00011,aux13501_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux13497_BOOL,aux13498_BOOL,aux13500_BOOL,aux13501_BOOL],aux13502_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux13503_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux13504_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13505,s_00013],0);
constraint int_lt_reif(s_00011,aux13505,aux13506_BOOL);
constraint int_le_reif(s_00013, s_00011,aux13507_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux13503_BOOL,aux13504_BOOL,aux13506_BOOL,aux13507_BOOL],aux13508_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux13509_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux13510_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13511,s_00014],0);
constraint int_lt_reif(s_00011,aux13511,aux13512_BOOL);
constraint int_le_reif(s_00014, s_00011,aux13513_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux13509_BOOL,aux13510_BOOL,aux13512_BOOL,aux13513_BOOL],aux13514_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux13515_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux13516_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13517,s_00015],0);
constraint int_lt_reif(s_00011,aux13517,aux13518_BOOL);
constraint int_le_reif(s_00015, s_00011,aux13519_BOOL);
constraint array_bool_and([w_00006_00015_BOOL,aux13515_BOOL,aux13516_BOOL,aux13518_BOOL,aux13519_BOOL],aux13520_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux13521_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux13522_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13523,s_00016],0);
constraint int_lt_reif(s_00011,aux13523,aux13524_BOOL);
constraint int_le_reif(s_00016, s_00011,aux13525_BOOL);
constraint array_bool_and([w_00006_00016_BOOL,aux13521_BOOL,aux13522_BOOL,aux13524_BOOL,aux13525_BOOL],aux13526_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux13527_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux13528_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux13529,s_00017],0);
constraint int_lt_reif(s_00011,aux13529,aux13530_BOOL);
constraint int_le_reif(s_00017, s_00011,aux13531_BOOL);
constraint array_bool_and([w_00006_00017_BOOL,aux13527_BOOL,aux13528_BOOL,aux13530_BOOL,aux13531_BOOL],aux13532_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux13533_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13534_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13535,s_00018],0);
constraint int_lt_reif(s_00011,aux13535,aux13536_BOOL);
constraint int_le_reif(s_00018, s_00011,aux13537_BOOL);
constraint array_bool_and([w_00006_00018_BOOL,aux13533_BOOL,aux13534_BOOL,aux13536_BOOL,aux13537_BOOL],aux13538_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux13539_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux13540_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux13541,s_00019],0);
constraint int_lt_reif(s_00011,aux13541,aux13542_BOOL);
constraint int_le_reif(s_00019, s_00011,aux13543_BOOL);
constraint array_bool_and([w_00006_00019_BOOL,aux13539_BOOL,aux13540_BOOL,aux13542_BOOL,aux13543_BOOL],aux13544_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux13545_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux13546_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13547,s_00020],0);
constraint int_lt_reif(s_00011,aux13547,aux13548_BOOL);
constraint int_le_reif(s_00020, s_00011,aux13549_BOOL);
constraint array_bool_and([w_00006_00020_BOOL,aux13545_BOOL,aux13546_BOOL,aux13548_BOOL,aux13549_BOOL],aux13550_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux13551_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13552,s_00011],0);
constraint int_lt_reif(s_00011,aux13552,aux13553_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux13551_BOOL,aux13553_BOOL],aux13554_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux13442_INTEGER,aux13448_INTEGER,aux13454_INTEGER,aux13460_INTEGER,aux13466_INTEGER,aux13472_INTEGER,aux13478_INTEGER,aux13484_INTEGER,aux13490_INTEGER,aux13496_INTEGER,aux13502_INTEGER,aux13508_INTEGER,aux13514_INTEGER,aux13520_INTEGER,aux13526_INTEGER,aux13532_INTEGER,aux13538_INTEGER,aux13544_INTEGER,aux13550_INTEGER,aux13554_INTEGER,1],0,aux13555_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux13556_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux13557_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux13558,s_00001],0);
constraint int_lt_reif(s_00019,aux13558,aux13559_BOOL);
constraint int_le_reif(s_00001, s_00019,aux13560_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux13556_BOOL,aux13557_BOOL,aux13559_BOOL,aux13560_BOOL],aux13561_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux13562_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux13563_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux13564,s_00002],0);
constraint int_lt_reif(s_00019,aux13564,aux13565_BOOL);
constraint int_le_reif(s_00002, s_00019,aux13566_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux13562_BOOL,aux13563_BOOL,aux13565_BOOL,aux13566_BOOL],aux13567_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux13568_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux13569_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13570,s_00003],0);
constraint int_lt_reif(s_00019,aux13570,aux13571_BOOL);
constraint int_le_reif(s_00003, s_00019,aux13572_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux13568_BOOL,aux13569_BOOL,aux13571_BOOL,aux13572_BOOL],aux13573_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux13574_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux13575_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13576,s_00004],0);
constraint int_lt_reif(s_00019,aux13576,aux13577_BOOL);
constraint int_le_reif(s_00004, s_00019,aux13578_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux13574_BOOL,aux13575_BOOL,aux13577_BOOL,aux13578_BOOL],aux13579_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux13580_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux13581_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13582,s_00005],0);
constraint int_lt_reif(s_00019,aux13582,aux13583_BOOL);
constraint int_le_reif(s_00005, s_00019,aux13584_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux13580_BOOL,aux13581_BOOL,aux13583_BOOL,aux13584_BOOL],aux13585_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux13586_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux13587_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13588,s_00006],0);
constraint int_lt_reif(s_00019,aux13588,aux13589_BOOL);
constraint int_le_reif(s_00006, s_00019,aux13590_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux13586_BOOL,aux13587_BOOL,aux13589_BOOL,aux13590_BOOL],aux13591_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux13592_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux13593_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13594,s_00007],0);
constraint int_lt_reif(s_00019,aux13594,aux13595_BOOL);
constraint int_le_reif(s_00007, s_00019,aux13596_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux13592_BOOL,aux13593_BOOL,aux13595_BOOL,aux13596_BOOL],aux13597_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux13598_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux13599_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13600,s_00008],0);
constraint int_lt_reif(s_00019,aux13600,aux13601_BOOL);
constraint int_le_reif(s_00008, s_00019,aux13602_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux13598_BOOL,aux13599_BOOL,aux13601_BOOL,aux13602_BOOL],aux13603_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux13604_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux13605_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13606,s_00009],0);
constraint int_lt_reif(s_00019,aux13606,aux13607_BOOL);
constraint int_le_reif(s_00009, s_00019,aux13608_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux13604_BOOL,aux13605_BOOL,aux13607_BOOL,aux13608_BOOL],aux13609_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux13610_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux13611_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux13612,s_00010],0);
constraint int_lt_reif(s_00019,aux13612,aux13613_BOOL);
constraint int_le_reif(s_00010, s_00019,aux13614_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux13610_BOOL,aux13611_BOOL,aux13613_BOOL,aux13614_BOOL],aux13615_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux13616_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux13617_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13618,s_00011],0);
constraint int_lt_reif(s_00019,aux13618,aux13619_BOOL);
constraint int_le_reif(s_00011, s_00019,aux13620_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux13616_BOOL,aux13617_BOOL,aux13619_BOOL,aux13620_BOOL],aux13621_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13622_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux13623_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux13624,s_00012],0);
constraint int_lt_reif(s_00019,aux13624,aux13625_BOOL);
constraint int_le_reif(s_00012, s_00019,aux13626_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux13622_BOOL,aux13623_BOOL,aux13625_BOOL,aux13626_BOOL],aux13627_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux13628_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux13629_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13630,s_00013],0);
constraint int_lt_reif(s_00019,aux13630,aux13631_BOOL);
constraint int_le_reif(s_00013, s_00019,aux13632_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux13628_BOOL,aux13629_BOOL,aux13631_BOOL,aux13632_BOOL],aux13633_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux13634_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux13635_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13636,s_00014],0);
constraint int_lt_reif(s_00019,aux13636,aux13637_BOOL);
constraint int_le_reif(s_00014, s_00019,aux13638_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux13634_BOOL,aux13635_BOOL,aux13637_BOOL,aux13638_BOOL],aux13639_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux13640_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux13641_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13642,s_00015],0);
constraint int_lt_reif(s_00019,aux13642,aux13643_BOOL);
constraint int_le_reif(s_00015, s_00019,aux13644_BOOL);
constraint array_bool_and([w_00006_00015_BOOL,aux13640_BOOL,aux13641_BOOL,aux13643_BOOL,aux13644_BOOL],aux13645_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux13646_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux13647_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13648,s_00016],0);
constraint int_lt_reif(s_00019,aux13648,aux13649_BOOL);
constraint int_le_reif(s_00016, s_00019,aux13650_BOOL);
constraint array_bool_and([w_00006_00016_BOOL,aux13646_BOOL,aux13647_BOOL,aux13649_BOOL,aux13650_BOOL],aux13651_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux13652_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux13653_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux13654,s_00017],0);
constraint int_lt_reif(s_00019,aux13654,aux13655_BOOL);
constraint int_le_reif(s_00017, s_00019,aux13656_BOOL);
constraint array_bool_and([w_00006_00017_BOOL,aux13652_BOOL,aux13653_BOOL,aux13655_BOOL,aux13656_BOOL],aux13657_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13658_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux13659_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13660,s_00018],0);
constraint int_lt_reif(s_00019,aux13660,aux13661_BOOL);
constraint int_le_reif(s_00018, s_00019,aux13662_BOOL);
constraint array_bool_and([w_00006_00018_BOOL,aux13658_BOOL,aux13659_BOOL,aux13661_BOOL,aux13662_BOOL],aux13663_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux13664_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux13665_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13666,s_00020],0);
constraint int_lt_reif(s_00019,aux13666,aux13667_BOOL);
constraint int_le_reif(s_00020, s_00019,aux13668_BOOL);
constraint array_bool_and([w_00006_00020_BOOL,aux13664_BOOL,aux13665_BOOL,aux13667_BOOL,aux13668_BOOL],aux13669_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux13670_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux13671,s_00019],0);
constraint int_lt_reif(s_00019,aux13671,aux13672_BOOL);
constraint array_bool_and([w_00006_00019_BOOL,aux13670_BOOL,aux13672_BOOL],aux13673_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux13561_INTEGER,aux13567_INTEGER,aux13573_INTEGER,aux13579_INTEGER,aux13585_INTEGER,aux13591_INTEGER,aux13597_INTEGER,aux13603_INTEGER,aux13609_INTEGER,aux13615_INTEGER,aux13621_INTEGER,aux13627_INTEGER,aux13633_INTEGER,aux13639_INTEGER,aux13645_INTEGER,aux13651_INTEGER,aux13657_INTEGER,aux13663_INTEGER,aux13669_INTEGER,aux13673_INTEGER,1],0,aux13674_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux13675_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux13676_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux13677,s_00001],0);
constraint int_lt_reif(s_00014,aux13677,aux13678_BOOL);
constraint int_le_reif(s_00001, s_00014,aux13679_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux13675_BOOL,aux13676_BOOL,aux13678_BOOL,aux13679_BOOL],aux13680_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux13681_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux13682_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux13683,s_00002],0);
constraint int_lt_reif(s_00014,aux13683,aux13684_BOOL);
constraint int_le_reif(s_00002, s_00014,aux13685_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux13681_BOOL,aux13682_BOOL,aux13684_BOOL,aux13685_BOOL],aux13686_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux13687_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux13688_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13689,s_00003],0);
constraint int_lt_reif(s_00014,aux13689,aux13690_BOOL);
constraint int_le_reif(s_00003, s_00014,aux13691_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux13687_BOOL,aux13688_BOOL,aux13690_BOOL,aux13691_BOOL],aux13692_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux13693_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux13694_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13695,s_00004],0);
constraint int_lt_reif(s_00014,aux13695,aux13696_BOOL);
constraint int_le_reif(s_00004, s_00014,aux13697_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux13693_BOOL,aux13694_BOOL,aux13696_BOOL,aux13697_BOOL],aux13698_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux13699_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux13700_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13701,s_00005],0);
constraint int_lt_reif(s_00014,aux13701,aux13702_BOOL);
constraint int_le_reif(s_00005, s_00014,aux13703_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux13699_BOOL,aux13700_BOOL,aux13702_BOOL,aux13703_BOOL],aux13704_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux13705_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux13706_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13707,s_00006],0);
constraint int_lt_reif(s_00014,aux13707,aux13708_BOOL);
constraint int_le_reif(s_00006, s_00014,aux13709_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux13705_BOOL,aux13706_BOOL,aux13708_BOOL,aux13709_BOOL],aux13710_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux13711_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux13712_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13713,s_00007],0);
constraint int_lt_reif(s_00014,aux13713,aux13714_BOOL);
constraint int_le_reif(s_00007, s_00014,aux13715_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux13711_BOOL,aux13712_BOOL,aux13714_BOOL,aux13715_BOOL],aux13716_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux13717_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux13718_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13719,s_00008],0);
constraint int_lt_reif(s_00014,aux13719,aux13720_BOOL);
constraint int_le_reif(s_00008, s_00014,aux13721_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux13717_BOOL,aux13718_BOOL,aux13720_BOOL,aux13721_BOOL],aux13722_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux13723_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux13724_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13725,s_00009],0);
constraint int_lt_reif(s_00014,aux13725,aux13726_BOOL);
constraint int_le_reif(s_00009, s_00014,aux13727_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux13723_BOOL,aux13724_BOOL,aux13726_BOOL,aux13727_BOOL],aux13728_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux13729_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux13730_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux13731,s_00010],0);
constraint int_lt_reif(s_00014,aux13731,aux13732_BOOL);
constraint int_le_reif(s_00010, s_00014,aux13733_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux13729_BOOL,aux13730_BOOL,aux13732_BOOL,aux13733_BOOL],aux13734_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux13735_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux13736_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13737,s_00011],0);
constraint int_lt_reif(s_00014,aux13737,aux13738_BOOL);
constraint int_le_reif(s_00011, s_00014,aux13739_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux13735_BOOL,aux13736_BOOL,aux13738_BOOL,aux13739_BOOL],aux13740_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13741_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux13742_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux13743,s_00012],0);
constraint int_lt_reif(s_00014,aux13743,aux13744_BOOL);
constraint int_le_reif(s_00012, s_00014,aux13745_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux13741_BOOL,aux13742_BOOL,aux13744_BOOL,aux13745_BOOL],aux13746_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux13747_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux13748_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13749,s_00013],0);
constraint int_lt_reif(s_00014,aux13749,aux13750_BOOL);
constraint int_le_reif(s_00013, s_00014,aux13751_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux13747_BOOL,aux13748_BOOL,aux13750_BOOL,aux13751_BOOL],aux13752_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux13753_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux13754_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13755,s_00015],0);
constraint int_lt_reif(s_00014,aux13755,aux13756_BOOL);
constraint int_le_reif(s_00015, s_00014,aux13757_BOOL);
constraint array_bool_and([w_00006_00015_BOOL,aux13753_BOOL,aux13754_BOOL,aux13756_BOOL,aux13757_BOOL],aux13758_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux13759_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux13760_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13761,s_00016],0);
constraint int_lt_reif(s_00014,aux13761,aux13762_BOOL);
constraint int_le_reif(s_00016, s_00014,aux13763_BOOL);
constraint array_bool_and([w_00006_00016_BOOL,aux13759_BOOL,aux13760_BOOL,aux13762_BOOL,aux13763_BOOL],aux13764_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux13765_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux13766_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux13767,s_00017],0);
constraint int_lt_reif(s_00014,aux13767,aux13768_BOOL);
constraint int_le_reif(s_00017, s_00014,aux13769_BOOL);
constraint array_bool_and([w_00006_00017_BOOL,aux13765_BOOL,aux13766_BOOL,aux13768_BOOL,aux13769_BOOL],aux13770_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux13771_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13772_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13773,s_00018],0);
constraint int_lt_reif(s_00014,aux13773,aux13774_BOOL);
constraint int_le_reif(s_00018, s_00014,aux13775_BOOL);
constraint array_bool_and([w_00006_00018_BOOL,aux13771_BOOL,aux13772_BOOL,aux13774_BOOL,aux13775_BOOL],aux13776_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux13777_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux13778_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux13779,s_00019],0);
constraint int_lt_reif(s_00014,aux13779,aux13780_BOOL);
constraint int_le_reif(s_00019, s_00014,aux13781_BOOL);
constraint array_bool_and([w_00006_00019_BOOL,aux13777_BOOL,aux13778_BOOL,aux13780_BOOL,aux13781_BOOL],aux13782_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux13783_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux13784_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13785,s_00020],0);
constraint int_lt_reif(s_00014,aux13785,aux13786_BOOL);
constraint int_le_reif(s_00020, s_00014,aux13787_BOOL);
constraint array_bool_and([w_00006_00020_BOOL,aux13783_BOOL,aux13784_BOOL,aux13786_BOOL,aux13787_BOOL],aux13788_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux13789_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13790,s_00014],0);
constraint int_lt_reif(s_00014,aux13790,aux13791_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux13789_BOOL,aux13791_BOOL],aux13792_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux13680_INTEGER,aux13686_INTEGER,aux13692_INTEGER,aux13698_INTEGER,aux13704_INTEGER,aux13710_INTEGER,aux13716_INTEGER,aux13722_INTEGER,aux13728_INTEGER,aux13734_INTEGER,aux13740_INTEGER,aux13746_INTEGER,aux13752_INTEGER,aux13758_INTEGER,aux13764_INTEGER,aux13770_INTEGER,aux13776_INTEGER,aux13782_INTEGER,aux13788_INTEGER,aux13792_INTEGER,1],0,aux13793_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux13794_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13795_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux13796,s_00001],0);
constraint int_lt_reif(s_00012,aux13796,aux13797_BOOL);
constraint int_le_reif(s_00001, s_00012,aux13798_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux13794_BOOL,aux13795_BOOL,aux13797_BOOL,aux13798_BOOL],aux13799_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux13800_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13801_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux13802,s_00002],0);
constraint int_lt_reif(s_00012,aux13802,aux13803_BOOL);
constraint int_le_reif(s_00002, s_00012,aux13804_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux13800_BOOL,aux13801_BOOL,aux13803_BOOL,aux13804_BOOL],aux13805_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux13806_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13807_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13808,s_00003],0);
constraint int_lt_reif(s_00012,aux13808,aux13809_BOOL);
constraint int_le_reif(s_00003, s_00012,aux13810_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux13806_BOOL,aux13807_BOOL,aux13809_BOOL,aux13810_BOOL],aux13811_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux13812_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13813_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13814,s_00004],0);
constraint int_lt_reif(s_00012,aux13814,aux13815_BOOL);
constraint int_le_reif(s_00004, s_00012,aux13816_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux13812_BOOL,aux13813_BOOL,aux13815_BOOL,aux13816_BOOL],aux13817_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux13818_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13819_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13820,s_00005],0);
constraint int_lt_reif(s_00012,aux13820,aux13821_BOOL);
constraint int_le_reif(s_00005, s_00012,aux13822_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux13818_BOOL,aux13819_BOOL,aux13821_BOOL,aux13822_BOOL],aux13823_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux13824_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13825_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13826,s_00006],0);
constraint int_lt_reif(s_00012,aux13826,aux13827_BOOL);
constraint int_le_reif(s_00006, s_00012,aux13828_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux13824_BOOL,aux13825_BOOL,aux13827_BOOL,aux13828_BOOL],aux13829_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux13830_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13831_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13832,s_00007],0);
constraint int_lt_reif(s_00012,aux13832,aux13833_BOOL);
constraint int_le_reif(s_00007, s_00012,aux13834_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux13830_BOOL,aux13831_BOOL,aux13833_BOOL,aux13834_BOOL],aux13835_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux13836_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13837_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13838,s_00008],0);
constraint int_lt_reif(s_00012,aux13838,aux13839_BOOL);
constraint int_le_reif(s_00008, s_00012,aux13840_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux13836_BOOL,aux13837_BOOL,aux13839_BOOL,aux13840_BOOL],aux13841_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux13842_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13843_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13844,s_00009],0);
constraint int_lt_reif(s_00012,aux13844,aux13845_BOOL);
constraint int_le_reif(s_00009, s_00012,aux13846_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux13842_BOOL,aux13843_BOOL,aux13845_BOOL,aux13846_BOOL],aux13847_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux13848_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13849_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux13850,s_00010],0);
constraint int_lt_reif(s_00012,aux13850,aux13851_BOOL);
constraint int_le_reif(s_00010, s_00012,aux13852_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux13848_BOOL,aux13849_BOOL,aux13851_BOOL,aux13852_BOOL],aux13853_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux13854_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13855_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13856,s_00011],0);
constraint int_lt_reif(s_00012,aux13856,aux13857_BOOL);
constraint int_le_reif(s_00011, s_00012,aux13858_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux13854_BOOL,aux13855_BOOL,aux13857_BOOL,aux13858_BOOL],aux13859_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13860_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux13861_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13862,s_00013],0);
constraint int_lt_reif(s_00012,aux13862,aux13863_BOOL);
constraint int_le_reif(s_00013, s_00012,aux13864_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux13860_BOOL,aux13861_BOOL,aux13863_BOOL,aux13864_BOOL],aux13865_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13866_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux13867_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13868,s_00014],0);
constraint int_lt_reif(s_00012,aux13868,aux13869_BOOL);
constraint int_le_reif(s_00014, s_00012,aux13870_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux13866_BOOL,aux13867_BOOL,aux13869_BOOL,aux13870_BOOL],aux13871_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13872_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux13873_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13874,s_00015],0);
constraint int_lt_reif(s_00012,aux13874,aux13875_BOOL);
constraint int_le_reif(s_00015, s_00012,aux13876_BOOL);
constraint array_bool_and([w_00006_00015_BOOL,aux13872_BOOL,aux13873_BOOL,aux13875_BOOL,aux13876_BOOL],aux13877_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13878_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux13879_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13880,s_00016],0);
constraint int_lt_reif(s_00012,aux13880,aux13881_BOOL);
constraint int_le_reif(s_00016, s_00012,aux13882_BOOL);
constraint array_bool_and([w_00006_00016_BOOL,aux13878_BOOL,aux13879_BOOL,aux13881_BOOL,aux13882_BOOL],aux13883_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13884_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux13885_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux13886,s_00017],0);
constraint int_lt_reif(s_00012,aux13886,aux13887_BOOL);
constraint int_le_reif(s_00017, s_00012,aux13888_BOOL);
constraint array_bool_and([w_00006_00017_BOOL,aux13884_BOOL,aux13885_BOOL,aux13887_BOOL,aux13888_BOOL],aux13889_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13890_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13891_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13892,s_00018],0);
constraint int_lt_reif(s_00012,aux13892,aux13893_BOOL);
constraint int_le_reif(s_00018, s_00012,aux13894_BOOL);
constraint array_bool_and([w_00006_00018_BOOL,aux13890_BOOL,aux13891_BOOL,aux13893_BOOL,aux13894_BOOL],aux13895_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13896_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux13897_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux13898,s_00019],0);
constraint int_lt_reif(s_00012,aux13898,aux13899_BOOL);
constraint int_le_reif(s_00019, s_00012,aux13900_BOOL);
constraint array_bool_and([w_00006_00019_BOOL,aux13896_BOOL,aux13897_BOOL,aux13899_BOOL,aux13900_BOOL],aux13901_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13902_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux13903_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13904,s_00020],0);
constraint int_lt_reif(s_00012,aux13904,aux13905_BOOL);
constraint int_le_reif(s_00020, s_00012,aux13906_BOOL);
constraint array_bool_and([w_00006_00020_BOOL,aux13902_BOOL,aux13903_BOOL,aux13905_BOOL,aux13906_BOOL],aux13907_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13908_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux13909,s_00012],0);
constraint int_lt_reif(s_00012,aux13909,aux13910_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux13908_BOOL,aux13910_BOOL],aux13911_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux13799_INTEGER,aux13805_INTEGER,aux13811_INTEGER,aux13817_INTEGER,aux13823_INTEGER,aux13829_INTEGER,aux13835_INTEGER,aux13841_INTEGER,aux13847_INTEGER,aux13853_INTEGER,aux13859_INTEGER,aux13865_INTEGER,aux13871_INTEGER,aux13877_INTEGER,aux13883_INTEGER,aux13889_INTEGER,aux13895_INTEGER,aux13901_INTEGER,aux13907_INTEGER,aux13911_INTEGER,1],0,aux13912_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux13913_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux13914_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux13915,s_00001],0);
constraint int_lt_reif(s_00008,aux13915,aux13916_BOOL);
constraint int_le_reif(s_00001, s_00008,aux13917_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux13913_BOOL,aux13914_BOOL,aux13916_BOOL,aux13917_BOOL],aux13918_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux13919_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux13920_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux13921,s_00002],0);
constraint int_lt_reif(s_00008,aux13921,aux13922_BOOL);
constraint int_le_reif(s_00002, s_00008,aux13923_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux13919_BOOL,aux13920_BOOL,aux13922_BOOL,aux13923_BOOL],aux13924_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux13925_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux13926_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13927,s_00003],0);
constraint int_lt_reif(s_00008,aux13927,aux13928_BOOL);
constraint int_le_reif(s_00003, s_00008,aux13929_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux13925_BOOL,aux13926_BOOL,aux13928_BOOL,aux13929_BOOL],aux13930_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux13931_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux13932_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13933,s_00004],0);
constraint int_lt_reif(s_00008,aux13933,aux13934_BOOL);
constraint int_le_reif(s_00004, s_00008,aux13935_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux13931_BOOL,aux13932_BOOL,aux13934_BOOL,aux13935_BOOL],aux13936_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux13937_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux13938_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13939,s_00005],0);
constraint int_lt_reif(s_00008,aux13939,aux13940_BOOL);
constraint int_le_reif(s_00005, s_00008,aux13941_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux13937_BOOL,aux13938_BOOL,aux13940_BOOL,aux13941_BOOL],aux13942_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux13943_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux13944_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13945,s_00006],0);
constraint int_lt_reif(s_00008,aux13945,aux13946_BOOL);
constraint int_le_reif(s_00006, s_00008,aux13947_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux13943_BOOL,aux13944_BOOL,aux13946_BOOL,aux13947_BOOL],aux13948_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux13949_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux13950_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13951,s_00007],0);
constraint int_lt_reif(s_00008,aux13951,aux13952_BOOL);
constraint int_le_reif(s_00007, s_00008,aux13953_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux13949_BOOL,aux13950_BOOL,aux13952_BOOL,aux13953_BOOL],aux13954_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux13955_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux13956_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13957,s_00009],0);
constraint int_lt_reif(s_00008,aux13957,aux13958_BOOL);
constraint int_le_reif(s_00009, s_00008,aux13959_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux13955_BOOL,aux13956_BOOL,aux13958_BOOL,aux13959_BOOL],aux13960_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux13961_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux13962_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux13963,s_00010],0);
constraint int_lt_reif(s_00008,aux13963,aux13964_BOOL);
constraint int_le_reif(s_00010, s_00008,aux13965_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux13961_BOOL,aux13962_BOOL,aux13964_BOOL,aux13965_BOOL],aux13966_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux13967_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux13968_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13969,s_00011],0);
constraint int_lt_reif(s_00008,aux13969,aux13970_BOOL);
constraint int_le_reif(s_00011, s_00008,aux13971_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux13967_BOOL,aux13968_BOOL,aux13970_BOOL,aux13971_BOOL],aux13972_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux13973_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13974_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux13975,s_00012],0);
constraint int_lt_reif(s_00008,aux13975,aux13976_BOOL);
constraint int_le_reif(s_00012, s_00008,aux13977_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux13973_BOOL,aux13974_BOOL,aux13976_BOOL,aux13977_BOOL],aux13978_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux13979_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux13980_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13981,s_00013],0);
constraint int_lt_reif(s_00008,aux13981,aux13982_BOOL);
constraint int_le_reif(s_00013, s_00008,aux13983_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux13979_BOOL,aux13980_BOOL,aux13982_BOOL,aux13983_BOOL],aux13984_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux13985_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux13986_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13987,s_00014],0);
constraint int_lt_reif(s_00008,aux13987,aux13988_BOOL);
constraint int_le_reif(s_00014, s_00008,aux13989_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux13985_BOOL,aux13986_BOOL,aux13988_BOOL,aux13989_BOOL],aux13990_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux13991_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux13992_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13993,s_00015],0);
constraint int_lt_reif(s_00008,aux13993,aux13994_BOOL);
constraint int_le_reif(s_00015, s_00008,aux13995_BOOL);
constraint array_bool_and([w_00006_00015_BOOL,aux13991_BOOL,aux13992_BOOL,aux13994_BOOL,aux13995_BOOL],aux13996_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux13997_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux13998_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13999,s_00016],0);
constraint int_lt_reif(s_00008,aux13999,aux14000_BOOL);
constraint int_le_reif(s_00016, s_00008,aux14001_BOOL);
constraint array_bool_and([w_00006_00016_BOOL,aux13997_BOOL,aux13998_BOOL,aux14000_BOOL,aux14001_BOOL],aux14002_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux14003_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux14004_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux14005,s_00017],0);
constraint int_lt_reif(s_00008,aux14005,aux14006_BOOL);
constraint int_le_reif(s_00017, s_00008,aux14007_BOOL);
constraint array_bool_and([w_00006_00017_BOOL,aux14003_BOOL,aux14004_BOOL,aux14006_BOOL,aux14007_BOOL],aux14008_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux14009_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux14010_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14011,s_00018],0);
constraint int_lt_reif(s_00008,aux14011,aux14012_BOOL);
constraint int_le_reif(s_00018, s_00008,aux14013_BOOL);
constraint array_bool_and([w_00006_00018_BOOL,aux14009_BOOL,aux14010_BOOL,aux14012_BOOL,aux14013_BOOL],aux14014_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux14015_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux14016_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux14017,s_00019],0);
constraint int_lt_reif(s_00008,aux14017,aux14018_BOOL);
constraint int_le_reif(s_00019, s_00008,aux14019_BOOL);
constraint array_bool_and([w_00006_00019_BOOL,aux14015_BOOL,aux14016_BOOL,aux14018_BOOL,aux14019_BOOL],aux14020_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux14021_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux14022_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14023,s_00020],0);
constraint int_lt_reif(s_00008,aux14023,aux14024_BOOL);
constraint int_le_reif(s_00020, s_00008,aux14025_BOOL);
constraint array_bool_and([w_00006_00020_BOOL,aux14021_BOOL,aux14022_BOOL,aux14024_BOOL,aux14025_BOOL],aux14026_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux14027_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14028,s_00008],0);
constraint int_lt_reif(s_00008,aux14028,aux14029_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux14027_BOOL,aux14029_BOOL],aux14030_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux13918_INTEGER,aux13924_INTEGER,aux13930_INTEGER,aux13936_INTEGER,aux13942_INTEGER,aux13948_INTEGER,aux13954_INTEGER,aux13960_INTEGER,aux13966_INTEGER,aux13972_INTEGER,aux13978_INTEGER,aux13984_INTEGER,aux13990_INTEGER,aux13996_INTEGER,aux14002_INTEGER,aux14008_INTEGER,aux14014_INTEGER,aux14020_INTEGER,aux14026_INTEGER,aux14030_INTEGER,1],0,aux14031_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux14032_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux14033_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux14034,s_00001],0);
constraint int_lt_reif(s_00004,aux14034,aux14035_BOOL);
constraint int_le_reif(s_00001, s_00004,aux14036_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux14032_BOOL,aux14033_BOOL,aux14035_BOOL,aux14036_BOOL],aux14037_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux14038_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux14039_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux14040,s_00002],0);
constraint int_lt_reif(s_00004,aux14040,aux14041_BOOL);
constraint int_le_reif(s_00002, s_00004,aux14042_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux14038_BOOL,aux14039_BOOL,aux14041_BOOL,aux14042_BOOL],aux14043_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux14044_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux14045_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14046,s_00003],0);
constraint int_lt_reif(s_00004,aux14046,aux14047_BOOL);
constraint int_le_reif(s_00003, s_00004,aux14048_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux14044_BOOL,aux14045_BOOL,aux14047_BOOL,aux14048_BOOL],aux14049_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux14050_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux14051_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14052,s_00005],0);
constraint int_lt_reif(s_00004,aux14052,aux14053_BOOL);
constraint int_le_reif(s_00005, s_00004,aux14054_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux14050_BOOL,aux14051_BOOL,aux14053_BOOL,aux14054_BOOL],aux14055_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux14056_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux14057_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14058,s_00006],0);
constraint int_lt_reif(s_00004,aux14058,aux14059_BOOL);
constraint int_le_reif(s_00006, s_00004,aux14060_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux14056_BOOL,aux14057_BOOL,aux14059_BOOL,aux14060_BOOL],aux14061_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux14062_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux14063_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14064,s_00007],0);
constraint int_lt_reif(s_00004,aux14064,aux14065_BOOL);
constraint int_le_reif(s_00007, s_00004,aux14066_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux14062_BOOL,aux14063_BOOL,aux14065_BOOL,aux14066_BOOL],aux14067_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux14068_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux14069_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14070,s_00008],0);
constraint int_lt_reif(s_00004,aux14070,aux14071_BOOL);
constraint int_le_reif(s_00008, s_00004,aux14072_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux14068_BOOL,aux14069_BOOL,aux14071_BOOL,aux14072_BOOL],aux14073_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux14074_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux14075_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14076,s_00009],0);
constraint int_lt_reif(s_00004,aux14076,aux14077_BOOL);
constraint int_le_reif(s_00009, s_00004,aux14078_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux14074_BOOL,aux14075_BOOL,aux14077_BOOL,aux14078_BOOL],aux14079_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux14080_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux14081_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux14082,s_00010],0);
constraint int_lt_reif(s_00004,aux14082,aux14083_BOOL);
constraint int_le_reif(s_00010, s_00004,aux14084_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux14080_BOOL,aux14081_BOOL,aux14083_BOOL,aux14084_BOOL],aux14085_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux14086_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux14087_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14088,s_00011],0);
constraint int_lt_reif(s_00004,aux14088,aux14089_BOOL);
constraint int_le_reif(s_00011, s_00004,aux14090_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux14086_BOOL,aux14087_BOOL,aux14089_BOOL,aux14090_BOOL],aux14091_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux14092_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux14093_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux14094,s_00012],0);
constraint int_lt_reif(s_00004,aux14094,aux14095_BOOL);
constraint int_le_reif(s_00012, s_00004,aux14096_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux14092_BOOL,aux14093_BOOL,aux14095_BOOL,aux14096_BOOL],aux14097_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux14098_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux14099_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14100,s_00013],0);
constraint int_lt_reif(s_00004,aux14100,aux14101_BOOL);
constraint int_le_reif(s_00013, s_00004,aux14102_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux14098_BOOL,aux14099_BOOL,aux14101_BOOL,aux14102_BOOL],aux14103_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux14104_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux14105_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14106,s_00014],0);
constraint int_lt_reif(s_00004,aux14106,aux14107_BOOL);
constraint int_le_reif(s_00014, s_00004,aux14108_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux14104_BOOL,aux14105_BOOL,aux14107_BOOL,aux14108_BOOL],aux14109_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux14110_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux14111_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14112,s_00015],0);
constraint int_lt_reif(s_00004,aux14112,aux14113_BOOL);
constraint int_le_reif(s_00015, s_00004,aux14114_BOOL);
constraint array_bool_and([w_00006_00015_BOOL,aux14110_BOOL,aux14111_BOOL,aux14113_BOOL,aux14114_BOOL],aux14115_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux14116_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux14117_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14118,s_00016],0);
constraint int_lt_reif(s_00004,aux14118,aux14119_BOOL);
constraint int_le_reif(s_00016, s_00004,aux14120_BOOL);
constraint array_bool_and([w_00006_00016_BOOL,aux14116_BOOL,aux14117_BOOL,aux14119_BOOL,aux14120_BOOL],aux14121_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux14122_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux14123_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux14124,s_00017],0);
constraint int_lt_reif(s_00004,aux14124,aux14125_BOOL);
constraint int_le_reif(s_00017, s_00004,aux14126_BOOL);
constraint array_bool_and([w_00006_00017_BOOL,aux14122_BOOL,aux14123_BOOL,aux14125_BOOL,aux14126_BOOL],aux14127_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux14128_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux14129_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14130,s_00018],0);
constraint int_lt_reif(s_00004,aux14130,aux14131_BOOL);
constraint int_le_reif(s_00018, s_00004,aux14132_BOOL);
constraint array_bool_and([w_00006_00018_BOOL,aux14128_BOOL,aux14129_BOOL,aux14131_BOOL,aux14132_BOOL],aux14133_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux14134_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux14135_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux14136,s_00019],0);
constraint int_lt_reif(s_00004,aux14136,aux14137_BOOL);
constraint int_le_reif(s_00019, s_00004,aux14138_BOOL);
constraint array_bool_and([w_00006_00019_BOOL,aux14134_BOOL,aux14135_BOOL,aux14137_BOOL,aux14138_BOOL],aux14139_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux14140_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux14141_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14142,s_00020],0);
constraint int_lt_reif(s_00004,aux14142,aux14143_BOOL);
constraint int_le_reif(s_00020, s_00004,aux14144_BOOL);
constraint array_bool_and([w_00006_00020_BOOL,aux14140_BOOL,aux14141_BOOL,aux14143_BOOL,aux14144_BOOL],aux14145_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux14146_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14147,s_00004],0);
constraint int_lt_reif(s_00004,aux14147,aux14148_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux14146_BOOL,aux14148_BOOL],aux14149_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux14037_INTEGER,aux14043_INTEGER,aux14049_INTEGER,aux14055_INTEGER,aux14061_INTEGER,aux14067_INTEGER,aux14073_INTEGER,aux14079_INTEGER,aux14085_INTEGER,aux14091_INTEGER,aux14097_INTEGER,aux14103_INTEGER,aux14109_INTEGER,aux14115_INTEGER,aux14121_INTEGER,aux14127_INTEGER,aux14133_INTEGER,aux14139_INTEGER,aux14145_INTEGER,aux14149_INTEGER,1],0,aux14150_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux14151_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux14152_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux14153,s_00001],0);
constraint int_lt_reif(s_00017,aux14153,aux14154_BOOL);
constraint int_le_reif(s_00001, s_00017,aux14155_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux14151_BOOL,aux14152_BOOL,aux14154_BOOL,aux14155_BOOL],aux14156_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux14157_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux14158_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux14159,s_00002],0);
constraint int_lt_reif(s_00017,aux14159,aux14160_BOOL);
constraint int_le_reif(s_00002, s_00017,aux14161_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux14157_BOOL,aux14158_BOOL,aux14160_BOOL,aux14161_BOOL],aux14162_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux14163_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux14164_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14165,s_00003],0);
constraint int_lt_reif(s_00017,aux14165,aux14166_BOOL);
constraint int_le_reif(s_00003, s_00017,aux14167_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux14163_BOOL,aux14164_BOOL,aux14166_BOOL,aux14167_BOOL],aux14168_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux14169_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux14170_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14171,s_00004],0);
constraint int_lt_reif(s_00017,aux14171,aux14172_BOOL);
constraint int_le_reif(s_00004, s_00017,aux14173_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux14169_BOOL,aux14170_BOOL,aux14172_BOOL,aux14173_BOOL],aux14174_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux14175_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux14176_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14177,s_00005],0);
constraint int_lt_reif(s_00017,aux14177,aux14178_BOOL);
constraint int_le_reif(s_00005, s_00017,aux14179_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux14175_BOOL,aux14176_BOOL,aux14178_BOOL,aux14179_BOOL],aux14180_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux14181_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux14182_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14183,s_00006],0);
constraint int_lt_reif(s_00017,aux14183,aux14184_BOOL);
constraint int_le_reif(s_00006, s_00017,aux14185_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux14181_BOOL,aux14182_BOOL,aux14184_BOOL,aux14185_BOOL],aux14186_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux14187_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux14188_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14189,s_00007],0);
constraint int_lt_reif(s_00017,aux14189,aux14190_BOOL);
constraint int_le_reif(s_00007, s_00017,aux14191_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux14187_BOOL,aux14188_BOOL,aux14190_BOOL,aux14191_BOOL],aux14192_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux14193_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux14194_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14195,s_00008],0);
constraint int_lt_reif(s_00017,aux14195,aux14196_BOOL);
constraint int_le_reif(s_00008, s_00017,aux14197_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux14193_BOOL,aux14194_BOOL,aux14196_BOOL,aux14197_BOOL],aux14198_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux14199_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux14200_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14201,s_00009],0);
constraint int_lt_reif(s_00017,aux14201,aux14202_BOOL);
constraint int_le_reif(s_00009, s_00017,aux14203_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux14199_BOOL,aux14200_BOOL,aux14202_BOOL,aux14203_BOOL],aux14204_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux14205_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux14206_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux14207,s_00010],0);
constraint int_lt_reif(s_00017,aux14207,aux14208_BOOL);
constraint int_le_reif(s_00010, s_00017,aux14209_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux14205_BOOL,aux14206_BOOL,aux14208_BOOL,aux14209_BOOL],aux14210_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux14211_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux14212_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14213,s_00011],0);
constraint int_lt_reif(s_00017,aux14213,aux14214_BOOL);
constraint int_le_reif(s_00011, s_00017,aux14215_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux14211_BOOL,aux14212_BOOL,aux14214_BOOL,aux14215_BOOL],aux14216_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux14217_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux14218_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux14219,s_00012],0);
constraint int_lt_reif(s_00017,aux14219,aux14220_BOOL);
constraint int_le_reif(s_00012, s_00017,aux14221_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux14217_BOOL,aux14218_BOOL,aux14220_BOOL,aux14221_BOOL],aux14222_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux14223_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux14224_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14225,s_00013],0);
constraint int_lt_reif(s_00017,aux14225,aux14226_BOOL);
constraint int_le_reif(s_00013, s_00017,aux14227_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux14223_BOOL,aux14224_BOOL,aux14226_BOOL,aux14227_BOOL],aux14228_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux14229_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux14230_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14231,s_00014],0);
constraint int_lt_reif(s_00017,aux14231,aux14232_BOOL);
constraint int_le_reif(s_00014, s_00017,aux14233_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux14229_BOOL,aux14230_BOOL,aux14232_BOOL,aux14233_BOOL],aux14234_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux14235_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux14236_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14237,s_00015],0);
constraint int_lt_reif(s_00017,aux14237,aux14238_BOOL);
constraint int_le_reif(s_00015, s_00017,aux14239_BOOL);
constraint array_bool_and([w_00006_00015_BOOL,aux14235_BOOL,aux14236_BOOL,aux14238_BOOL,aux14239_BOOL],aux14240_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux14241_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux14242_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14243,s_00016],0);
constraint int_lt_reif(s_00017,aux14243,aux14244_BOOL);
constraint int_le_reif(s_00016, s_00017,aux14245_BOOL);
constraint array_bool_and([w_00006_00016_BOOL,aux14241_BOOL,aux14242_BOOL,aux14244_BOOL,aux14245_BOOL],aux14246_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux14247_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux14248_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14249,s_00018],0);
constraint int_lt_reif(s_00017,aux14249,aux14250_BOOL);
constraint int_le_reif(s_00018, s_00017,aux14251_BOOL);
constraint array_bool_and([w_00006_00018_BOOL,aux14247_BOOL,aux14248_BOOL,aux14250_BOOL,aux14251_BOOL],aux14252_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux14253_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux14254_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux14255,s_00019],0);
constraint int_lt_reif(s_00017,aux14255,aux14256_BOOL);
constraint int_le_reif(s_00019, s_00017,aux14257_BOOL);
constraint array_bool_and([w_00006_00019_BOOL,aux14253_BOOL,aux14254_BOOL,aux14256_BOOL,aux14257_BOOL],aux14258_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux14259_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux14260_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14261,s_00020],0);
constraint int_lt_reif(s_00017,aux14261,aux14262_BOOL);
constraint int_le_reif(s_00020, s_00017,aux14263_BOOL);
constraint array_bool_and([w_00006_00020_BOOL,aux14259_BOOL,aux14260_BOOL,aux14262_BOOL,aux14263_BOOL],aux14264_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux14265_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux14266,s_00017],0);
constraint int_lt_reif(s_00017,aux14266,aux14267_BOOL);
constraint array_bool_and([w_00006_00017_BOOL,aux14265_BOOL,aux14267_BOOL],aux14268_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux14156_INTEGER,aux14162_INTEGER,aux14168_INTEGER,aux14174_INTEGER,aux14180_INTEGER,aux14186_INTEGER,aux14192_INTEGER,aux14198_INTEGER,aux14204_INTEGER,aux14210_INTEGER,aux14216_INTEGER,aux14222_INTEGER,aux14228_INTEGER,aux14234_INTEGER,aux14240_INTEGER,aux14246_INTEGER,aux14252_INTEGER,aux14258_INTEGER,aux14264_INTEGER,aux14268_INTEGER,1],0,aux14269_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux14270_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux14271_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux14272,s_00001],0);
constraint int_lt_reif(s_00020,aux14272,aux14273_BOOL);
constraint int_le_reif(s_00001, s_00020,aux14274_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux14270_BOOL,aux14271_BOOL,aux14273_BOOL,aux14274_BOOL],aux14275_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux14276_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux14277_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux14278,s_00002],0);
constraint int_lt_reif(s_00020,aux14278,aux14279_BOOL);
constraint int_le_reif(s_00002, s_00020,aux14280_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux14276_BOOL,aux14277_BOOL,aux14279_BOOL,aux14280_BOOL],aux14281_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux14282_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux14283_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14284,s_00003],0);
constraint int_lt_reif(s_00020,aux14284,aux14285_BOOL);
constraint int_le_reif(s_00003, s_00020,aux14286_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux14282_BOOL,aux14283_BOOL,aux14285_BOOL,aux14286_BOOL],aux14287_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux14288_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux14289_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14290,s_00004],0);
constraint int_lt_reif(s_00020,aux14290,aux14291_BOOL);
constraint int_le_reif(s_00004, s_00020,aux14292_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux14288_BOOL,aux14289_BOOL,aux14291_BOOL,aux14292_BOOL],aux14293_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux14294_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux14295_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14296,s_00005],0);
constraint int_lt_reif(s_00020,aux14296,aux14297_BOOL);
constraint int_le_reif(s_00005, s_00020,aux14298_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux14294_BOOL,aux14295_BOOL,aux14297_BOOL,aux14298_BOOL],aux14299_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux14300_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux14301_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14302,s_00006],0);
constraint int_lt_reif(s_00020,aux14302,aux14303_BOOL);
constraint int_le_reif(s_00006, s_00020,aux14304_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux14300_BOOL,aux14301_BOOL,aux14303_BOOL,aux14304_BOOL],aux14305_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux14306_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux14307_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14308,s_00007],0);
constraint int_lt_reif(s_00020,aux14308,aux14309_BOOL);
constraint int_le_reif(s_00007, s_00020,aux14310_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux14306_BOOL,aux14307_BOOL,aux14309_BOOL,aux14310_BOOL],aux14311_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux14312_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux14313_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14314,s_00008],0);
constraint int_lt_reif(s_00020,aux14314,aux14315_BOOL);
constraint int_le_reif(s_00008, s_00020,aux14316_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux14312_BOOL,aux14313_BOOL,aux14315_BOOL,aux14316_BOOL],aux14317_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux14318_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux14319_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14320,s_00009],0);
constraint int_lt_reif(s_00020,aux14320,aux14321_BOOL);
constraint int_le_reif(s_00009, s_00020,aux14322_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux14318_BOOL,aux14319_BOOL,aux14321_BOOL,aux14322_BOOL],aux14323_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux14324_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux14325_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux14326,s_00010],0);
constraint int_lt_reif(s_00020,aux14326,aux14327_BOOL);
constraint int_le_reif(s_00010, s_00020,aux14328_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux14324_BOOL,aux14325_BOOL,aux14327_BOOL,aux14328_BOOL],aux14329_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux14330_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux14331_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14332,s_00011],0);
constraint int_lt_reif(s_00020,aux14332,aux14333_BOOL);
constraint int_le_reif(s_00011, s_00020,aux14334_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux14330_BOOL,aux14331_BOOL,aux14333_BOOL,aux14334_BOOL],aux14335_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux14336_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux14337_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux14338,s_00012],0);
constraint int_lt_reif(s_00020,aux14338,aux14339_BOOL);
constraint int_le_reif(s_00012, s_00020,aux14340_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux14336_BOOL,aux14337_BOOL,aux14339_BOOL,aux14340_BOOL],aux14341_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux14342_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux14343_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14344,s_00013],0);
constraint int_lt_reif(s_00020,aux14344,aux14345_BOOL);
constraint int_le_reif(s_00013, s_00020,aux14346_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux14342_BOOL,aux14343_BOOL,aux14345_BOOL,aux14346_BOOL],aux14347_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux14348_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux14349_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14350,s_00014],0);
constraint int_lt_reif(s_00020,aux14350,aux14351_BOOL);
constraint int_le_reif(s_00014, s_00020,aux14352_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux14348_BOOL,aux14349_BOOL,aux14351_BOOL,aux14352_BOOL],aux14353_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux14354_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux14355_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14356,s_00015],0);
constraint int_lt_reif(s_00020,aux14356,aux14357_BOOL);
constraint int_le_reif(s_00015, s_00020,aux14358_BOOL);
constraint array_bool_and([w_00006_00015_BOOL,aux14354_BOOL,aux14355_BOOL,aux14357_BOOL,aux14358_BOOL],aux14359_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux14360_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux14361_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14362,s_00016],0);
constraint int_lt_reif(s_00020,aux14362,aux14363_BOOL);
constraint int_le_reif(s_00016, s_00020,aux14364_BOOL);
constraint array_bool_and([w_00006_00016_BOOL,aux14360_BOOL,aux14361_BOOL,aux14363_BOOL,aux14364_BOOL],aux14365_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux14366_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux14367_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux14368,s_00017],0);
constraint int_lt_reif(s_00020,aux14368,aux14369_BOOL);
constraint int_le_reif(s_00017, s_00020,aux14370_BOOL);
constraint array_bool_and([w_00006_00017_BOOL,aux14366_BOOL,aux14367_BOOL,aux14369_BOOL,aux14370_BOOL],aux14371_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux14372_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux14373_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14374,s_00018],0);
constraint int_lt_reif(s_00020,aux14374,aux14375_BOOL);
constraint int_le_reif(s_00018, s_00020,aux14376_BOOL);
constraint array_bool_and([w_00006_00018_BOOL,aux14372_BOOL,aux14373_BOOL,aux14375_BOOL,aux14376_BOOL],aux14377_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux14378_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux14379_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux14380,s_00019],0);
constraint int_lt_reif(s_00020,aux14380,aux14381_BOOL);
constraint int_le_reif(s_00019, s_00020,aux14382_BOOL);
constraint array_bool_and([w_00006_00019_BOOL,aux14378_BOOL,aux14379_BOOL,aux14381_BOOL,aux14382_BOOL],aux14383_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux14384_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14385,s_00020],0);
constraint int_lt_reif(s_00020,aux14385,aux14386_BOOL);
constraint array_bool_and([w_00006_00020_BOOL,aux14384_BOOL,aux14386_BOOL],aux14387_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux14275_INTEGER,aux14281_INTEGER,aux14287_INTEGER,aux14293_INTEGER,aux14299_INTEGER,aux14305_INTEGER,aux14311_INTEGER,aux14317_INTEGER,aux14323_INTEGER,aux14329_INTEGER,aux14335_INTEGER,aux14341_INTEGER,aux14347_INTEGER,aux14353_INTEGER,aux14359_INTEGER,aux14365_INTEGER,aux14371_INTEGER,aux14377_INTEGER,aux14383_INTEGER,aux14387_INTEGER,1],0,aux14388_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux14389_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux14390_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux14391,s_00001],0);
constraint int_lt_reif(s_00009,aux14391,aux14392_BOOL);
constraint int_le_reif(s_00001, s_00009,aux14393_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux14389_BOOL,aux14390_BOOL,aux14392_BOOL,aux14393_BOOL],aux14394_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux14395_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux14396_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux14397,s_00002],0);
constraint int_lt_reif(s_00009,aux14397,aux14398_BOOL);
constraint int_le_reif(s_00002, s_00009,aux14399_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux14395_BOOL,aux14396_BOOL,aux14398_BOOL,aux14399_BOOL],aux14400_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux14401_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux14402_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14403,s_00003],0);
constraint int_lt_reif(s_00009,aux14403,aux14404_BOOL);
constraint int_le_reif(s_00003, s_00009,aux14405_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux14401_BOOL,aux14402_BOOL,aux14404_BOOL,aux14405_BOOL],aux14406_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux14407_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux14408_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14409,s_00004],0);
constraint int_lt_reif(s_00009,aux14409,aux14410_BOOL);
constraint int_le_reif(s_00004, s_00009,aux14411_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux14407_BOOL,aux14408_BOOL,aux14410_BOOL,aux14411_BOOL],aux14412_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux14413_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux14414_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14415,s_00005],0);
constraint int_lt_reif(s_00009,aux14415,aux14416_BOOL);
constraint int_le_reif(s_00005, s_00009,aux14417_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux14413_BOOL,aux14414_BOOL,aux14416_BOOL,aux14417_BOOL],aux14418_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux14419_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux14420_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14421,s_00006],0);
constraint int_lt_reif(s_00009,aux14421,aux14422_BOOL);
constraint int_le_reif(s_00006, s_00009,aux14423_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux14419_BOOL,aux14420_BOOL,aux14422_BOOL,aux14423_BOOL],aux14424_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux14425_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux14426_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14427,s_00007],0);
constraint int_lt_reif(s_00009,aux14427,aux14428_BOOL);
constraint int_le_reif(s_00007, s_00009,aux14429_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux14425_BOOL,aux14426_BOOL,aux14428_BOOL,aux14429_BOOL],aux14430_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux14431_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux14432_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14433,s_00008],0);
constraint int_lt_reif(s_00009,aux14433,aux14434_BOOL);
constraint int_le_reif(s_00008, s_00009,aux14435_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux14431_BOOL,aux14432_BOOL,aux14434_BOOL,aux14435_BOOL],aux14436_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux14437_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux14438_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux14439,s_00010],0);
constraint int_lt_reif(s_00009,aux14439,aux14440_BOOL);
constraint int_le_reif(s_00010, s_00009,aux14441_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux14437_BOOL,aux14438_BOOL,aux14440_BOOL,aux14441_BOOL],aux14442_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux14443_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux14444_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14445,s_00011],0);
constraint int_lt_reif(s_00009,aux14445,aux14446_BOOL);
constraint int_le_reif(s_00011, s_00009,aux14447_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux14443_BOOL,aux14444_BOOL,aux14446_BOOL,aux14447_BOOL],aux14448_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux14449_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux14450_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux14451,s_00012],0);
constraint int_lt_reif(s_00009,aux14451,aux14452_BOOL);
constraint int_le_reif(s_00012, s_00009,aux14453_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux14449_BOOL,aux14450_BOOL,aux14452_BOOL,aux14453_BOOL],aux14454_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux14455_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux14456_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14457,s_00013],0);
constraint int_lt_reif(s_00009,aux14457,aux14458_BOOL);
constraint int_le_reif(s_00013, s_00009,aux14459_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux14455_BOOL,aux14456_BOOL,aux14458_BOOL,aux14459_BOOL],aux14460_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux14461_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux14462_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14463,s_00014],0);
constraint int_lt_reif(s_00009,aux14463,aux14464_BOOL);
constraint int_le_reif(s_00014, s_00009,aux14465_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux14461_BOOL,aux14462_BOOL,aux14464_BOOL,aux14465_BOOL],aux14466_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux14467_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux14468_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14469,s_00015],0);
constraint int_lt_reif(s_00009,aux14469,aux14470_BOOL);
constraint int_le_reif(s_00015, s_00009,aux14471_BOOL);
constraint array_bool_and([w_00006_00015_BOOL,aux14467_BOOL,aux14468_BOOL,aux14470_BOOL,aux14471_BOOL],aux14472_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux14473_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux14474_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14475,s_00016],0);
constraint int_lt_reif(s_00009,aux14475,aux14476_BOOL);
constraint int_le_reif(s_00016, s_00009,aux14477_BOOL);
constraint array_bool_and([w_00006_00016_BOOL,aux14473_BOOL,aux14474_BOOL,aux14476_BOOL,aux14477_BOOL],aux14478_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux14479_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux14480_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux14481,s_00017],0);
constraint int_lt_reif(s_00009,aux14481,aux14482_BOOL);
constraint int_le_reif(s_00017, s_00009,aux14483_BOOL);
constraint array_bool_and([w_00006_00017_BOOL,aux14479_BOOL,aux14480_BOOL,aux14482_BOOL,aux14483_BOOL],aux14484_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux14485_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux14486_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14487,s_00018],0);
constraint int_lt_reif(s_00009,aux14487,aux14488_BOOL);
constraint int_le_reif(s_00018, s_00009,aux14489_BOOL);
constraint array_bool_and([w_00006_00018_BOOL,aux14485_BOOL,aux14486_BOOL,aux14488_BOOL,aux14489_BOOL],aux14490_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux14491_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux14492_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux14493,s_00019],0);
constraint int_lt_reif(s_00009,aux14493,aux14494_BOOL);
constraint int_le_reif(s_00019, s_00009,aux14495_BOOL);
constraint array_bool_and([w_00006_00019_BOOL,aux14491_BOOL,aux14492_BOOL,aux14494_BOOL,aux14495_BOOL],aux14496_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux14497_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux14498_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14499,s_00020],0);
constraint int_lt_reif(s_00009,aux14499,aux14500_BOOL);
constraint int_le_reif(s_00020, s_00009,aux14501_BOOL);
constraint array_bool_and([w_00006_00020_BOOL,aux14497_BOOL,aux14498_BOOL,aux14500_BOOL,aux14501_BOOL],aux14502_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux14503_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14504,s_00009],0);
constraint int_lt_reif(s_00009,aux14504,aux14505_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux14503_BOOL,aux14505_BOOL],aux14506_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux14394_INTEGER,aux14400_INTEGER,aux14406_INTEGER,aux14412_INTEGER,aux14418_INTEGER,aux14424_INTEGER,aux14430_INTEGER,aux14436_INTEGER,aux14442_INTEGER,aux14448_INTEGER,aux14454_INTEGER,aux14460_INTEGER,aux14466_INTEGER,aux14472_INTEGER,aux14478_INTEGER,aux14484_INTEGER,aux14490_INTEGER,aux14496_INTEGER,aux14502_INTEGER,aux14506_INTEGER,1],0,aux14507_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux14508_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux14509_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux14510,s_00001],0);
constraint int_lt_reif(s_00010,aux14510,aux14511_BOOL);
constraint int_le_reif(s_00001, s_00010,aux14512_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux14508_BOOL,aux14509_BOOL,aux14511_BOOL,aux14512_BOOL],aux14513_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux14514_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux14515_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux14516,s_00002],0);
constraint int_lt_reif(s_00010,aux14516,aux14517_BOOL);
constraint int_le_reif(s_00002, s_00010,aux14518_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux14514_BOOL,aux14515_BOOL,aux14517_BOOL,aux14518_BOOL],aux14519_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux14520_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux14521_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14522,s_00003],0);
constraint int_lt_reif(s_00010,aux14522,aux14523_BOOL);
constraint int_le_reif(s_00003, s_00010,aux14524_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux14520_BOOL,aux14521_BOOL,aux14523_BOOL,aux14524_BOOL],aux14525_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux14526_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux14527_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14528,s_00004],0);
constraint int_lt_reif(s_00010,aux14528,aux14529_BOOL);
constraint int_le_reif(s_00004, s_00010,aux14530_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux14526_BOOL,aux14527_BOOL,aux14529_BOOL,aux14530_BOOL],aux14531_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux14532_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux14533_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14534,s_00005],0);
constraint int_lt_reif(s_00010,aux14534,aux14535_BOOL);
constraint int_le_reif(s_00005, s_00010,aux14536_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux14532_BOOL,aux14533_BOOL,aux14535_BOOL,aux14536_BOOL],aux14537_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux14538_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux14539_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14540,s_00006],0);
constraint int_lt_reif(s_00010,aux14540,aux14541_BOOL);
constraint int_le_reif(s_00006, s_00010,aux14542_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux14538_BOOL,aux14539_BOOL,aux14541_BOOL,aux14542_BOOL],aux14543_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux14544_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux14545_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14546,s_00007],0);
constraint int_lt_reif(s_00010,aux14546,aux14547_BOOL);
constraint int_le_reif(s_00007, s_00010,aux14548_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux14544_BOOL,aux14545_BOOL,aux14547_BOOL,aux14548_BOOL],aux14549_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux14550_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux14551_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14552,s_00008],0);
constraint int_lt_reif(s_00010,aux14552,aux14553_BOOL);
constraint int_le_reif(s_00008, s_00010,aux14554_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux14550_BOOL,aux14551_BOOL,aux14553_BOOL,aux14554_BOOL],aux14555_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux14556_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux14557_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14558,s_00009],0);
constraint int_lt_reif(s_00010,aux14558,aux14559_BOOL);
constraint int_le_reif(s_00009, s_00010,aux14560_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux14556_BOOL,aux14557_BOOL,aux14559_BOOL,aux14560_BOOL],aux14561_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux14562_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux14563_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14564,s_00011],0);
constraint int_lt_reif(s_00010,aux14564,aux14565_BOOL);
constraint int_le_reif(s_00011, s_00010,aux14566_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux14562_BOOL,aux14563_BOOL,aux14565_BOOL,aux14566_BOOL],aux14567_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux14568_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux14569_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux14570,s_00012],0);
constraint int_lt_reif(s_00010,aux14570,aux14571_BOOL);
constraint int_le_reif(s_00012, s_00010,aux14572_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux14568_BOOL,aux14569_BOOL,aux14571_BOOL,aux14572_BOOL],aux14573_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux14574_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux14575_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14576,s_00013],0);
constraint int_lt_reif(s_00010,aux14576,aux14577_BOOL);
constraint int_le_reif(s_00013, s_00010,aux14578_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux14574_BOOL,aux14575_BOOL,aux14577_BOOL,aux14578_BOOL],aux14579_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux14580_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux14581_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14582,s_00014],0);
constraint int_lt_reif(s_00010,aux14582,aux14583_BOOL);
constraint int_le_reif(s_00014, s_00010,aux14584_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux14580_BOOL,aux14581_BOOL,aux14583_BOOL,aux14584_BOOL],aux14585_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux14586_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux14587_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14588,s_00015],0);
constraint int_lt_reif(s_00010,aux14588,aux14589_BOOL);
constraint int_le_reif(s_00015, s_00010,aux14590_BOOL);
constraint array_bool_and([w_00006_00015_BOOL,aux14586_BOOL,aux14587_BOOL,aux14589_BOOL,aux14590_BOOL],aux14591_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux14592_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux14593_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14594,s_00016],0);
constraint int_lt_reif(s_00010,aux14594,aux14595_BOOL);
constraint int_le_reif(s_00016, s_00010,aux14596_BOOL);
constraint array_bool_and([w_00006_00016_BOOL,aux14592_BOOL,aux14593_BOOL,aux14595_BOOL,aux14596_BOOL],aux14597_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux14598_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux14599_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux14600,s_00017],0);
constraint int_lt_reif(s_00010,aux14600,aux14601_BOOL);
constraint int_le_reif(s_00017, s_00010,aux14602_BOOL);
constraint array_bool_and([w_00006_00017_BOOL,aux14598_BOOL,aux14599_BOOL,aux14601_BOOL,aux14602_BOOL],aux14603_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux14604_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux14605_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14606,s_00018],0);
constraint int_lt_reif(s_00010,aux14606,aux14607_BOOL);
constraint int_le_reif(s_00018, s_00010,aux14608_BOOL);
constraint array_bool_and([w_00006_00018_BOOL,aux14604_BOOL,aux14605_BOOL,aux14607_BOOL,aux14608_BOOL],aux14609_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux14610_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux14611_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux14612,s_00019],0);
constraint int_lt_reif(s_00010,aux14612,aux14613_BOOL);
constraint int_le_reif(s_00019, s_00010,aux14614_BOOL);
constraint array_bool_and([w_00006_00019_BOOL,aux14610_BOOL,aux14611_BOOL,aux14613_BOOL,aux14614_BOOL],aux14615_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux14616_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux14617_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14618,s_00020],0);
constraint int_lt_reif(s_00010,aux14618,aux14619_BOOL);
constraint int_le_reif(s_00020, s_00010,aux14620_BOOL);
constraint array_bool_and([w_00006_00020_BOOL,aux14616_BOOL,aux14617_BOOL,aux14619_BOOL,aux14620_BOOL],aux14621_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux14622_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux14623,s_00010],0);
constraint int_lt_reif(s_00010,aux14623,aux14624_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux14622_BOOL,aux14624_BOOL],aux14625_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux14513_INTEGER,aux14519_INTEGER,aux14525_INTEGER,aux14531_INTEGER,aux14537_INTEGER,aux14543_INTEGER,aux14549_INTEGER,aux14555_INTEGER,aux14561_INTEGER,aux14567_INTEGER,aux14573_INTEGER,aux14579_INTEGER,aux14585_INTEGER,aux14591_INTEGER,aux14597_INTEGER,aux14603_INTEGER,aux14609_INTEGER,aux14615_INTEGER,aux14621_INTEGER,aux14625_INTEGER,1],0,aux14626_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux14627_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux14628_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux14629,s_00001],0);
constraint int_lt_reif(s_00015,aux14629,aux14630_BOOL);
constraint int_le_reif(s_00001, s_00015,aux14631_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux14627_BOOL,aux14628_BOOL,aux14630_BOOL,aux14631_BOOL],aux14632_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux14633_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux14634_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux14635,s_00002],0);
constraint int_lt_reif(s_00015,aux14635,aux14636_BOOL);
constraint int_le_reif(s_00002, s_00015,aux14637_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux14633_BOOL,aux14634_BOOL,aux14636_BOOL,aux14637_BOOL],aux14638_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux14639_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux14640_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14641,s_00003],0);
constraint int_lt_reif(s_00015,aux14641,aux14642_BOOL);
constraint int_le_reif(s_00003, s_00015,aux14643_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux14639_BOOL,aux14640_BOOL,aux14642_BOOL,aux14643_BOOL],aux14644_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux14645_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux14646_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14647,s_00004],0);
constraint int_lt_reif(s_00015,aux14647,aux14648_BOOL);
constraint int_le_reif(s_00004, s_00015,aux14649_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux14645_BOOL,aux14646_BOOL,aux14648_BOOL,aux14649_BOOL],aux14650_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux14651_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux14652_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14653,s_00005],0);
constraint int_lt_reif(s_00015,aux14653,aux14654_BOOL);
constraint int_le_reif(s_00005, s_00015,aux14655_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux14651_BOOL,aux14652_BOOL,aux14654_BOOL,aux14655_BOOL],aux14656_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux14657_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux14658_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14659,s_00006],0);
constraint int_lt_reif(s_00015,aux14659,aux14660_BOOL);
constraint int_le_reif(s_00006, s_00015,aux14661_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux14657_BOOL,aux14658_BOOL,aux14660_BOOL,aux14661_BOOL],aux14662_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux14663_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux14664_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14665,s_00007],0);
constraint int_lt_reif(s_00015,aux14665,aux14666_BOOL);
constraint int_le_reif(s_00007, s_00015,aux14667_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux14663_BOOL,aux14664_BOOL,aux14666_BOOL,aux14667_BOOL],aux14668_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux14669_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux14670_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14671,s_00008],0);
constraint int_lt_reif(s_00015,aux14671,aux14672_BOOL);
constraint int_le_reif(s_00008, s_00015,aux14673_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux14669_BOOL,aux14670_BOOL,aux14672_BOOL,aux14673_BOOL],aux14674_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux14675_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux14676_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14677,s_00009],0);
constraint int_lt_reif(s_00015,aux14677,aux14678_BOOL);
constraint int_le_reif(s_00009, s_00015,aux14679_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux14675_BOOL,aux14676_BOOL,aux14678_BOOL,aux14679_BOOL],aux14680_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux14681_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux14682_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux14683,s_00010],0);
constraint int_lt_reif(s_00015,aux14683,aux14684_BOOL);
constraint int_le_reif(s_00010, s_00015,aux14685_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux14681_BOOL,aux14682_BOOL,aux14684_BOOL,aux14685_BOOL],aux14686_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux14687_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux14688_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14689,s_00011],0);
constraint int_lt_reif(s_00015,aux14689,aux14690_BOOL);
constraint int_le_reif(s_00011, s_00015,aux14691_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux14687_BOOL,aux14688_BOOL,aux14690_BOOL,aux14691_BOOL],aux14692_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux14693_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux14694_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux14695,s_00012],0);
constraint int_lt_reif(s_00015,aux14695,aux14696_BOOL);
constraint int_le_reif(s_00012, s_00015,aux14697_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux14693_BOOL,aux14694_BOOL,aux14696_BOOL,aux14697_BOOL],aux14698_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux14699_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux14700_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14701,s_00013],0);
constraint int_lt_reif(s_00015,aux14701,aux14702_BOOL);
constraint int_le_reif(s_00013, s_00015,aux14703_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux14699_BOOL,aux14700_BOOL,aux14702_BOOL,aux14703_BOOL],aux14704_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux14705_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux14706_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14707,s_00014],0);
constraint int_lt_reif(s_00015,aux14707,aux14708_BOOL);
constraint int_le_reif(s_00014, s_00015,aux14709_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux14705_BOOL,aux14706_BOOL,aux14708_BOOL,aux14709_BOOL],aux14710_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux14711_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux14712_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14713,s_00016],0);
constraint int_lt_reif(s_00015,aux14713,aux14714_BOOL);
constraint int_le_reif(s_00016, s_00015,aux14715_BOOL);
constraint array_bool_and([w_00006_00016_BOOL,aux14711_BOOL,aux14712_BOOL,aux14714_BOOL,aux14715_BOOL],aux14716_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux14717_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux14718_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux14719,s_00017],0);
constraint int_lt_reif(s_00015,aux14719,aux14720_BOOL);
constraint int_le_reif(s_00017, s_00015,aux14721_BOOL);
constraint array_bool_and([w_00006_00017_BOOL,aux14717_BOOL,aux14718_BOOL,aux14720_BOOL,aux14721_BOOL],aux14722_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux14723_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux14724_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14725,s_00018],0);
constraint int_lt_reif(s_00015,aux14725,aux14726_BOOL);
constraint int_le_reif(s_00018, s_00015,aux14727_BOOL);
constraint array_bool_and([w_00006_00018_BOOL,aux14723_BOOL,aux14724_BOOL,aux14726_BOOL,aux14727_BOOL],aux14728_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux14729_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux14730_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux14731,s_00019],0);
constraint int_lt_reif(s_00015,aux14731,aux14732_BOOL);
constraint int_le_reif(s_00019, s_00015,aux14733_BOOL);
constraint array_bool_and([w_00006_00019_BOOL,aux14729_BOOL,aux14730_BOOL,aux14732_BOOL,aux14733_BOOL],aux14734_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux14735_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux14736_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14737,s_00020],0);
constraint int_lt_reif(s_00015,aux14737,aux14738_BOOL);
constraint int_le_reif(s_00020, s_00015,aux14739_BOOL);
constraint array_bool_and([w_00006_00020_BOOL,aux14735_BOOL,aux14736_BOOL,aux14738_BOOL,aux14739_BOOL],aux14740_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux14741_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14742,s_00015],0);
constraint int_lt_reif(s_00015,aux14742,aux14743_BOOL);
constraint array_bool_and([w_00006_00015_BOOL,aux14741_BOOL,aux14743_BOOL],aux14744_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux14632_INTEGER,aux14638_INTEGER,aux14644_INTEGER,aux14650_INTEGER,aux14656_INTEGER,aux14662_INTEGER,aux14668_INTEGER,aux14674_INTEGER,aux14680_INTEGER,aux14686_INTEGER,aux14692_INTEGER,aux14698_INTEGER,aux14704_INTEGER,aux14710_INTEGER,aux14716_INTEGER,aux14722_INTEGER,aux14728_INTEGER,aux14734_INTEGER,aux14740_INTEGER,aux14744_INTEGER,1],0,aux14745_BOOL);
constraint array_bool_and([aux12484_BOOL,aux12603_BOOL,aux12722_BOOL,aux12841_BOOL,aux12960_BOOL,aux13079_BOOL,aux13198_BOOL,aux13317_BOOL,aux13436_BOOL,aux13555_BOOL,aux13674_BOOL,aux13793_BOOL,aux13912_BOOL,aux14031_BOOL,aux14150_BOOL,aux14269_BOOL,aux14388_BOOL,aux14507_BOOL,aux14626_BOOL,aux14745_BOOL],aux14746_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[TWorkers_00006_00001_INTEGER,TWorkers_00006_00002_INTEGER,TWorkers_00006_00003_INTEGER,TWorkers_00006_00004_INTEGER,TWorkers_00006_00005_INTEGER,TWorkers_00006_00006_INTEGER,TWorkers_00006_00007_INTEGER,TWorkers_00006_00008_INTEGER,TWorkers_00006_00009_INTEGER,TWorkers_00006_00010_INTEGER,TWorkers_00006_00011_INTEGER,TWorkers_00006_00012_INTEGER,TWorkers_00006_00013_INTEGER,TWorkers_00006_00014_INTEGER,TWorkers_00006_00015_INTEGER,TWorkers_00006_00016_INTEGER,TWorkers_00006_00017_INTEGER,TWorkers_00006_00018_INTEGER,TWorkers_00006_00019_INTEGER,TWorkers_00006_00020_INTEGER,1],0,aux14747_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux14748_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux14749_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux14750,s_00001],0);
constraint int_lt_reif(s_00006,aux14750,aux14751_BOOL);
constraint int_le_reif(s_00001, s_00006,aux14752_BOOL);
constraint array_bool_and([w_00007_00001_BOOL,aux14748_BOOL,aux14749_BOOL,aux14751_BOOL,aux14752_BOOL],aux14753_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux14754_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux14755_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux14756,s_00002],0);
constraint int_lt_reif(s_00006,aux14756,aux14757_BOOL);
constraint int_le_reif(s_00002, s_00006,aux14758_BOOL);
constraint array_bool_and([w_00007_00002_BOOL,aux14754_BOOL,aux14755_BOOL,aux14757_BOOL,aux14758_BOOL],aux14759_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux14760_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux14761_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14762,s_00003],0);
constraint int_lt_reif(s_00006,aux14762,aux14763_BOOL);
constraint int_le_reif(s_00003, s_00006,aux14764_BOOL);
constraint array_bool_and([w_00007_00003_BOOL,aux14760_BOOL,aux14761_BOOL,aux14763_BOOL,aux14764_BOOL],aux14765_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux14766_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux14767_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14768,s_00004],0);
constraint int_lt_reif(s_00006,aux14768,aux14769_BOOL);
constraint int_le_reif(s_00004, s_00006,aux14770_BOOL);
constraint array_bool_and([w_00007_00004_BOOL,aux14766_BOOL,aux14767_BOOL,aux14769_BOOL,aux14770_BOOL],aux14771_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux14772_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux14773_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14774,s_00005],0);
constraint int_lt_reif(s_00006,aux14774,aux14775_BOOL);
constraint int_le_reif(s_00005, s_00006,aux14776_BOOL);
constraint array_bool_and([w_00007_00005_BOOL,aux14772_BOOL,aux14773_BOOL,aux14775_BOOL,aux14776_BOOL],aux14777_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux14778_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux14779_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14780,s_00007],0);
constraint int_lt_reif(s_00006,aux14780,aux14781_BOOL);
constraint int_le_reif(s_00007, s_00006,aux14782_BOOL);
constraint array_bool_and([w_00007_00007_BOOL,aux14778_BOOL,aux14779_BOOL,aux14781_BOOL,aux14782_BOOL],aux14783_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux14784_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux14785_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14786,s_00008],0);
constraint int_lt_reif(s_00006,aux14786,aux14787_BOOL);
constraint int_le_reif(s_00008, s_00006,aux14788_BOOL);
constraint array_bool_and([w_00007_00008_BOOL,aux14784_BOOL,aux14785_BOOL,aux14787_BOOL,aux14788_BOOL],aux14789_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux14790_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux14791_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14792,s_00009],0);
constraint int_lt_reif(s_00006,aux14792,aux14793_BOOL);
constraint int_le_reif(s_00009, s_00006,aux14794_BOOL);
constraint array_bool_and([w_00007_00009_BOOL,aux14790_BOOL,aux14791_BOOL,aux14793_BOOL,aux14794_BOOL],aux14795_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux14796_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux14797_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux14798,s_00010],0);
constraint int_lt_reif(s_00006,aux14798,aux14799_BOOL);
constraint int_le_reif(s_00010, s_00006,aux14800_BOOL);
constraint array_bool_and([w_00007_00010_BOOL,aux14796_BOOL,aux14797_BOOL,aux14799_BOOL,aux14800_BOOL],aux14801_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux14802_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux14803_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14804,s_00011],0);
constraint int_lt_reif(s_00006,aux14804,aux14805_BOOL);
constraint int_le_reif(s_00011, s_00006,aux14806_BOOL);
constraint array_bool_and([w_00007_00011_BOOL,aux14802_BOOL,aux14803_BOOL,aux14805_BOOL,aux14806_BOOL],aux14807_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux14808_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux14809_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux14810,s_00012],0);
constraint int_lt_reif(s_00006,aux14810,aux14811_BOOL);
constraint int_le_reif(s_00012, s_00006,aux14812_BOOL);
constraint array_bool_and([w_00007_00012_BOOL,aux14808_BOOL,aux14809_BOOL,aux14811_BOOL,aux14812_BOOL],aux14813_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux14814_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux14815_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14816,s_00013],0);
constraint int_lt_reif(s_00006,aux14816,aux14817_BOOL);
constraint int_le_reif(s_00013, s_00006,aux14818_BOOL);
constraint array_bool_and([w_00007_00013_BOOL,aux14814_BOOL,aux14815_BOOL,aux14817_BOOL,aux14818_BOOL],aux14819_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux14820_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux14821_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14822,s_00014],0);
constraint int_lt_reif(s_00006,aux14822,aux14823_BOOL);
constraint int_le_reif(s_00014, s_00006,aux14824_BOOL);
constraint array_bool_and([w_00007_00014_BOOL,aux14820_BOOL,aux14821_BOOL,aux14823_BOOL,aux14824_BOOL],aux14825_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux14826_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux14827_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14828,s_00015],0);
constraint int_lt_reif(s_00006,aux14828,aux14829_BOOL);
constraint int_le_reif(s_00015, s_00006,aux14830_BOOL);
constraint array_bool_and([w_00007_00015_BOOL,aux14826_BOOL,aux14827_BOOL,aux14829_BOOL,aux14830_BOOL],aux14831_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux14832_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux14833_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14834,s_00016],0);
constraint int_lt_reif(s_00006,aux14834,aux14835_BOOL);
constraint int_le_reif(s_00016, s_00006,aux14836_BOOL);
constraint array_bool_and([w_00007_00016_BOOL,aux14832_BOOL,aux14833_BOOL,aux14835_BOOL,aux14836_BOOL],aux14837_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux14838_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux14839_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux14840,s_00017],0);
constraint int_lt_reif(s_00006,aux14840,aux14841_BOOL);
constraint int_le_reif(s_00017, s_00006,aux14842_BOOL);
constraint array_bool_and([w_00007_00017_BOOL,aux14838_BOOL,aux14839_BOOL,aux14841_BOOL,aux14842_BOOL],aux14843_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux14844_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux14845_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14846,s_00018],0);
constraint int_lt_reif(s_00006,aux14846,aux14847_BOOL);
constraint int_le_reif(s_00018, s_00006,aux14848_BOOL);
constraint array_bool_and([w_00007_00018_BOOL,aux14844_BOOL,aux14845_BOOL,aux14847_BOOL,aux14848_BOOL],aux14849_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux14850_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux14851_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux14852,s_00019],0);
constraint int_lt_reif(s_00006,aux14852,aux14853_BOOL);
constraint int_le_reif(s_00019, s_00006,aux14854_BOOL);
constraint array_bool_and([w_00007_00019_BOOL,aux14850_BOOL,aux14851_BOOL,aux14853_BOOL,aux14854_BOOL],aux14855_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux14856_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux14857_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14858,s_00020],0);
constraint int_lt_reif(s_00006,aux14858,aux14859_BOOL);
constraint int_le_reif(s_00020, s_00006,aux14860_BOOL);
constraint array_bool_and([w_00007_00020_BOOL,aux14856_BOOL,aux14857_BOOL,aux14859_BOOL,aux14860_BOOL],aux14861_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux14862_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14863,s_00006],0);
constraint int_lt_reif(s_00006,aux14863,aux14864_BOOL);
constraint array_bool_and([w_00007_00006_BOOL,aux14862_BOOL,aux14864_BOOL],aux14865_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux14753_INTEGER,aux14759_INTEGER,aux14765_INTEGER,aux14771_INTEGER,aux14777_INTEGER,aux14783_INTEGER,aux14789_INTEGER,aux14795_INTEGER,aux14801_INTEGER,aux14807_INTEGER,aux14813_INTEGER,aux14819_INTEGER,aux14825_INTEGER,aux14831_INTEGER,aux14837_INTEGER,aux14843_INTEGER,aux14849_INTEGER,aux14855_INTEGER,aux14861_INTEGER,aux14865_INTEGER,1],0,aux14866_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux14867_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux14868_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux14869,s_00002],0);
constraint int_lt_reif(s_00001,aux14869,aux14870_BOOL);
constraint int_le_reif(s_00002, s_00001,aux14871_BOOL);
constraint array_bool_and([w_00007_00002_BOOL,aux14867_BOOL,aux14868_BOOL,aux14870_BOOL,aux14871_BOOL],aux14872_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux14873_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux14874_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14875,s_00003],0);
constraint int_lt_reif(s_00001,aux14875,aux14876_BOOL);
constraint int_le_reif(s_00003, s_00001,aux14877_BOOL);
constraint array_bool_and([w_00007_00003_BOOL,aux14873_BOOL,aux14874_BOOL,aux14876_BOOL,aux14877_BOOL],aux14878_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux14879_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux14880_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14881,s_00004],0);
constraint int_lt_reif(s_00001,aux14881,aux14882_BOOL);
constraint int_le_reif(s_00004, s_00001,aux14883_BOOL);
constraint array_bool_and([w_00007_00004_BOOL,aux14879_BOOL,aux14880_BOOL,aux14882_BOOL,aux14883_BOOL],aux14884_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux14885_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux14886_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14887,s_00005],0);
constraint int_lt_reif(s_00001,aux14887,aux14888_BOOL);
constraint int_le_reif(s_00005, s_00001,aux14889_BOOL);
constraint array_bool_and([w_00007_00005_BOOL,aux14885_BOOL,aux14886_BOOL,aux14888_BOOL,aux14889_BOOL],aux14890_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux14891_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux14892_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14893,s_00006],0);
constraint int_lt_reif(s_00001,aux14893,aux14894_BOOL);
constraint int_le_reif(s_00006, s_00001,aux14895_BOOL);
constraint array_bool_and([w_00007_00006_BOOL,aux14891_BOOL,aux14892_BOOL,aux14894_BOOL,aux14895_BOOL],aux14896_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux14897_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux14898_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14899,s_00007],0);
constraint int_lt_reif(s_00001,aux14899,aux14900_BOOL);
constraint int_le_reif(s_00007, s_00001,aux14901_BOOL);
constraint array_bool_and([w_00007_00007_BOOL,aux14897_BOOL,aux14898_BOOL,aux14900_BOOL,aux14901_BOOL],aux14902_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux14903_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux14904_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14905,s_00008],0);
constraint int_lt_reif(s_00001,aux14905,aux14906_BOOL);
constraint int_le_reif(s_00008, s_00001,aux14907_BOOL);
constraint array_bool_and([w_00007_00008_BOOL,aux14903_BOOL,aux14904_BOOL,aux14906_BOOL,aux14907_BOOL],aux14908_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux14909_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux14910_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14911,s_00009],0);
constraint int_lt_reif(s_00001,aux14911,aux14912_BOOL);
constraint int_le_reif(s_00009, s_00001,aux14913_BOOL);
constraint array_bool_and([w_00007_00009_BOOL,aux14909_BOOL,aux14910_BOOL,aux14912_BOOL,aux14913_BOOL],aux14914_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux14915_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux14916_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux14917,s_00010],0);
constraint int_lt_reif(s_00001,aux14917,aux14918_BOOL);
constraint int_le_reif(s_00010, s_00001,aux14919_BOOL);
constraint array_bool_and([w_00007_00010_BOOL,aux14915_BOOL,aux14916_BOOL,aux14918_BOOL,aux14919_BOOL],aux14920_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux14921_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux14922_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14923,s_00011],0);
constraint int_lt_reif(s_00001,aux14923,aux14924_BOOL);
constraint int_le_reif(s_00011, s_00001,aux14925_BOOL);
constraint array_bool_and([w_00007_00011_BOOL,aux14921_BOOL,aux14922_BOOL,aux14924_BOOL,aux14925_BOOL],aux14926_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux14927_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux14928_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux14929,s_00012],0);
constraint int_lt_reif(s_00001,aux14929,aux14930_BOOL);
constraint int_le_reif(s_00012, s_00001,aux14931_BOOL);
constraint array_bool_and([w_00007_00012_BOOL,aux14927_BOOL,aux14928_BOOL,aux14930_BOOL,aux14931_BOOL],aux14932_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux14933_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux14934_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14935,s_00013],0);
constraint int_lt_reif(s_00001,aux14935,aux14936_BOOL);
constraint int_le_reif(s_00013, s_00001,aux14937_BOOL);
constraint array_bool_and([w_00007_00013_BOOL,aux14933_BOOL,aux14934_BOOL,aux14936_BOOL,aux14937_BOOL],aux14938_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux14939_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux14940_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14941,s_00014],0);
constraint int_lt_reif(s_00001,aux14941,aux14942_BOOL);
constraint int_le_reif(s_00014, s_00001,aux14943_BOOL);
constraint array_bool_and([w_00007_00014_BOOL,aux14939_BOOL,aux14940_BOOL,aux14942_BOOL,aux14943_BOOL],aux14944_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux14945_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux14946_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14947,s_00015],0);
constraint int_lt_reif(s_00001,aux14947,aux14948_BOOL);
constraint int_le_reif(s_00015, s_00001,aux14949_BOOL);
constraint array_bool_and([w_00007_00015_BOOL,aux14945_BOOL,aux14946_BOOL,aux14948_BOOL,aux14949_BOOL],aux14950_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux14951_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux14952_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14953,s_00016],0);
constraint int_lt_reif(s_00001,aux14953,aux14954_BOOL);
constraint int_le_reif(s_00016, s_00001,aux14955_BOOL);
constraint array_bool_and([w_00007_00016_BOOL,aux14951_BOOL,aux14952_BOOL,aux14954_BOOL,aux14955_BOOL],aux14956_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux14957_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux14958_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux14959,s_00017],0);
constraint int_lt_reif(s_00001,aux14959,aux14960_BOOL);
constraint int_le_reif(s_00017, s_00001,aux14961_BOOL);
constraint array_bool_and([w_00007_00017_BOOL,aux14957_BOOL,aux14958_BOOL,aux14960_BOOL,aux14961_BOOL],aux14962_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux14963_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux14964_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14965,s_00018],0);
constraint int_lt_reif(s_00001,aux14965,aux14966_BOOL);
constraint int_le_reif(s_00018, s_00001,aux14967_BOOL);
constraint array_bool_and([w_00007_00018_BOOL,aux14963_BOOL,aux14964_BOOL,aux14966_BOOL,aux14967_BOOL],aux14968_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux14969_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux14970_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux14971,s_00019],0);
constraint int_lt_reif(s_00001,aux14971,aux14972_BOOL);
constraint int_le_reif(s_00019, s_00001,aux14973_BOOL);
constraint array_bool_and([w_00007_00019_BOOL,aux14969_BOOL,aux14970_BOOL,aux14972_BOOL,aux14973_BOOL],aux14974_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux14975_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux14976_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14977,s_00020],0);
constraint int_lt_reif(s_00001,aux14977,aux14978_BOOL);
constraint int_le_reif(s_00020, s_00001,aux14979_BOOL);
constraint array_bool_and([w_00007_00020_BOOL,aux14975_BOOL,aux14976_BOOL,aux14978_BOOL,aux14979_BOOL],aux14980_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux14981_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux14982,s_00001],0);
constraint int_lt_reif(s_00001,aux14982,aux14983_BOOL);
constraint array_bool_and([w_00007_00001_BOOL,aux14981_BOOL,aux14983_BOOL],aux14984_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux14872_INTEGER,aux14878_INTEGER,aux14884_INTEGER,aux14890_INTEGER,aux14896_INTEGER,aux14902_INTEGER,aux14908_INTEGER,aux14914_INTEGER,aux14920_INTEGER,aux14926_INTEGER,aux14932_INTEGER,aux14938_INTEGER,aux14944_INTEGER,aux14950_INTEGER,aux14956_INTEGER,aux14962_INTEGER,aux14968_INTEGER,aux14974_INTEGER,aux14980_INTEGER,aux14984_INTEGER,1],0,aux14985_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux14986_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux14987_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux14988,s_00001],0);
constraint int_lt_reif(s_00002,aux14988,aux14989_BOOL);
constraint int_le_reif(s_00001, s_00002,aux14990_BOOL);
constraint array_bool_and([w_00007_00001_BOOL,aux14986_BOOL,aux14987_BOOL,aux14989_BOOL,aux14990_BOOL],aux14991_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux14992_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux14993_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14994,s_00003],0);
constraint int_lt_reif(s_00002,aux14994,aux14995_BOOL);
constraint int_le_reif(s_00003, s_00002,aux14996_BOOL);
constraint array_bool_and([w_00007_00003_BOOL,aux14992_BOOL,aux14993_BOOL,aux14995_BOOL,aux14996_BOOL],aux14997_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux14998_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux14999_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15000,s_00004],0);
constraint int_lt_reif(s_00002,aux15000,aux15001_BOOL);
constraint int_le_reif(s_00004, s_00002,aux15002_BOOL);
constraint array_bool_and([w_00007_00004_BOOL,aux14998_BOOL,aux14999_BOOL,aux15001_BOOL,aux15002_BOOL],aux15003_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux15004_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15005_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15006,s_00005],0);
constraint int_lt_reif(s_00002,aux15006,aux15007_BOOL);
constraint int_le_reif(s_00005, s_00002,aux15008_BOOL);
constraint array_bool_and([w_00007_00005_BOOL,aux15004_BOOL,aux15005_BOOL,aux15007_BOOL,aux15008_BOOL],aux15009_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux15010_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux15011_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15012,s_00006],0);
constraint int_lt_reif(s_00002,aux15012,aux15013_BOOL);
constraint int_le_reif(s_00006, s_00002,aux15014_BOOL);
constraint array_bool_and([w_00007_00006_BOOL,aux15010_BOOL,aux15011_BOOL,aux15013_BOOL,aux15014_BOOL],aux15015_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux15016_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15017_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15018,s_00007],0);
constraint int_lt_reif(s_00002,aux15018,aux15019_BOOL);
constraint int_le_reif(s_00007, s_00002,aux15020_BOOL);
constraint array_bool_and([w_00007_00007_BOOL,aux15016_BOOL,aux15017_BOOL,aux15019_BOOL,aux15020_BOOL],aux15021_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux15022_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux15023_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15024,s_00008],0);
constraint int_lt_reif(s_00002,aux15024,aux15025_BOOL);
constraint int_le_reif(s_00008, s_00002,aux15026_BOOL);
constraint array_bool_and([w_00007_00008_BOOL,aux15022_BOOL,aux15023_BOOL,aux15025_BOOL,aux15026_BOOL],aux15027_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux15028_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux15029_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15030,s_00009],0);
constraint int_lt_reif(s_00002,aux15030,aux15031_BOOL);
constraint int_le_reif(s_00009, s_00002,aux15032_BOOL);
constraint array_bool_and([w_00007_00009_BOOL,aux15028_BOOL,aux15029_BOOL,aux15031_BOOL,aux15032_BOOL],aux15033_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux15034_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux15035_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux15036,s_00010],0);
constraint int_lt_reif(s_00002,aux15036,aux15037_BOOL);
constraint int_le_reif(s_00010, s_00002,aux15038_BOOL);
constraint array_bool_and([w_00007_00010_BOOL,aux15034_BOOL,aux15035_BOOL,aux15037_BOOL,aux15038_BOOL],aux15039_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux15040_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux15041_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15042,s_00011],0);
constraint int_lt_reif(s_00002,aux15042,aux15043_BOOL);
constraint int_le_reif(s_00011, s_00002,aux15044_BOOL);
constraint array_bool_and([w_00007_00011_BOOL,aux15040_BOOL,aux15041_BOOL,aux15043_BOOL,aux15044_BOOL],aux15045_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux15046_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux15047_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux15048,s_00012],0);
constraint int_lt_reif(s_00002,aux15048,aux15049_BOOL);
constraint int_le_reif(s_00012, s_00002,aux15050_BOOL);
constraint array_bool_and([w_00007_00012_BOOL,aux15046_BOOL,aux15047_BOOL,aux15049_BOOL,aux15050_BOOL],aux15051_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux15052_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux15053_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15054,s_00013],0);
constraint int_lt_reif(s_00002,aux15054,aux15055_BOOL);
constraint int_le_reif(s_00013, s_00002,aux15056_BOOL);
constraint array_bool_and([w_00007_00013_BOOL,aux15052_BOOL,aux15053_BOOL,aux15055_BOOL,aux15056_BOOL],aux15057_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux15058_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux15059_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15060,s_00014],0);
constraint int_lt_reif(s_00002,aux15060,aux15061_BOOL);
constraint int_le_reif(s_00014, s_00002,aux15062_BOOL);
constraint array_bool_and([w_00007_00014_BOOL,aux15058_BOOL,aux15059_BOOL,aux15061_BOOL,aux15062_BOOL],aux15063_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux15064_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux15065_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15066,s_00015],0);
constraint int_lt_reif(s_00002,aux15066,aux15067_BOOL);
constraint int_le_reif(s_00015, s_00002,aux15068_BOOL);
constraint array_bool_and([w_00007_00015_BOOL,aux15064_BOOL,aux15065_BOOL,aux15067_BOOL,aux15068_BOOL],aux15069_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux15070_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux15071_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15072,s_00016],0);
constraint int_lt_reif(s_00002,aux15072,aux15073_BOOL);
constraint int_le_reif(s_00016, s_00002,aux15074_BOOL);
constraint array_bool_and([w_00007_00016_BOOL,aux15070_BOOL,aux15071_BOOL,aux15073_BOOL,aux15074_BOOL],aux15075_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux15076_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux15077_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux15078,s_00017],0);
constraint int_lt_reif(s_00002,aux15078,aux15079_BOOL);
constraint int_le_reif(s_00017, s_00002,aux15080_BOOL);
constraint array_bool_and([w_00007_00017_BOOL,aux15076_BOOL,aux15077_BOOL,aux15079_BOOL,aux15080_BOOL],aux15081_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux15082_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux15083_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15084,s_00018],0);
constraint int_lt_reif(s_00002,aux15084,aux15085_BOOL);
constraint int_le_reif(s_00018, s_00002,aux15086_BOOL);
constraint array_bool_and([w_00007_00018_BOOL,aux15082_BOOL,aux15083_BOOL,aux15085_BOOL,aux15086_BOOL],aux15087_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux15088_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux15089_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux15090,s_00019],0);
constraint int_lt_reif(s_00002,aux15090,aux15091_BOOL);
constraint int_le_reif(s_00019, s_00002,aux15092_BOOL);
constraint array_bool_and([w_00007_00019_BOOL,aux15088_BOOL,aux15089_BOOL,aux15091_BOOL,aux15092_BOOL],aux15093_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux15094_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux15095_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15096,s_00020],0);
constraint int_lt_reif(s_00002,aux15096,aux15097_BOOL);
constraint int_le_reif(s_00020, s_00002,aux15098_BOOL);
constraint array_bool_and([w_00007_00020_BOOL,aux15094_BOOL,aux15095_BOOL,aux15097_BOOL,aux15098_BOOL],aux15099_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux15100_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux15101,s_00002],0);
constraint int_lt_reif(s_00002,aux15101,aux15102_BOOL);
constraint array_bool_and([w_00007_00002_BOOL,aux15100_BOOL,aux15102_BOOL],aux15103_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux14991_INTEGER,aux14997_INTEGER,aux15003_INTEGER,aux15009_INTEGER,aux15015_INTEGER,aux15021_INTEGER,aux15027_INTEGER,aux15033_INTEGER,aux15039_INTEGER,aux15045_INTEGER,aux15051_INTEGER,aux15057_INTEGER,aux15063_INTEGER,aux15069_INTEGER,aux15075_INTEGER,aux15081_INTEGER,aux15087_INTEGER,aux15093_INTEGER,aux15099_INTEGER,aux15103_INTEGER,1],0,aux15104_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux15105_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15106_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux15107,s_00001],0);
constraint int_lt_reif(s_00003,aux15107,aux15108_BOOL);
constraint int_le_reif(s_00001, s_00003,aux15109_BOOL);
constraint array_bool_and([w_00007_00001_BOOL,aux15105_BOOL,aux15106_BOOL,aux15108_BOOL,aux15109_BOOL],aux15110_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux15111_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15112_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux15113,s_00002],0);
constraint int_lt_reif(s_00003,aux15113,aux15114_BOOL);
constraint int_le_reif(s_00002, s_00003,aux15115_BOOL);
constraint array_bool_and([w_00007_00002_BOOL,aux15111_BOOL,aux15112_BOOL,aux15114_BOOL,aux15115_BOOL],aux15116_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15117_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux15118_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15119,s_00004],0);
constraint int_lt_reif(s_00003,aux15119,aux15120_BOOL);
constraint int_le_reif(s_00004, s_00003,aux15121_BOOL);
constraint array_bool_and([w_00007_00004_BOOL,aux15117_BOOL,aux15118_BOOL,aux15120_BOOL,aux15121_BOOL],aux15122_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15123_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15124_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15125,s_00005],0);
constraint int_lt_reif(s_00003,aux15125,aux15126_BOOL);
constraint int_le_reif(s_00005, s_00003,aux15127_BOOL);
constraint array_bool_and([w_00007_00005_BOOL,aux15123_BOOL,aux15124_BOOL,aux15126_BOOL,aux15127_BOOL],aux15128_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15129_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux15130_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15131,s_00006],0);
constraint int_lt_reif(s_00003,aux15131,aux15132_BOOL);
constraint int_le_reif(s_00006, s_00003,aux15133_BOOL);
constraint array_bool_and([w_00007_00006_BOOL,aux15129_BOOL,aux15130_BOOL,aux15132_BOOL,aux15133_BOOL],aux15134_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15135_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15136_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15137,s_00007],0);
constraint int_lt_reif(s_00003,aux15137,aux15138_BOOL);
constraint int_le_reif(s_00007, s_00003,aux15139_BOOL);
constraint array_bool_and([w_00007_00007_BOOL,aux15135_BOOL,aux15136_BOOL,aux15138_BOOL,aux15139_BOOL],aux15140_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15141_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux15142_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15143,s_00008],0);
constraint int_lt_reif(s_00003,aux15143,aux15144_BOOL);
constraint int_le_reif(s_00008, s_00003,aux15145_BOOL);
constraint array_bool_and([w_00007_00008_BOOL,aux15141_BOOL,aux15142_BOOL,aux15144_BOOL,aux15145_BOOL],aux15146_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15147_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux15148_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15149,s_00009],0);
constraint int_lt_reif(s_00003,aux15149,aux15150_BOOL);
constraint int_le_reif(s_00009, s_00003,aux15151_BOOL);
constraint array_bool_and([w_00007_00009_BOOL,aux15147_BOOL,aux15148_BOOL,aux15150_BOOL,aux15151_BOOL],aux15152_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15153_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux15154_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux15155,s_00010],0);
constraint int_lt_reif(s_00003,aux15155,aux15156_BOOL);
constraint int_le_reif(s_00010, s_00003,aux15157_BOOL);
constraint array_bool_and([w_00007_00010_BOOL,aux15153_BOOL,aux15154_BOOL,aux15156_BOOL,aux15157_BOOL],aux15158_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15159_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux15160_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15161,s_00011],0);
constraint int_lt_reif(s_00003,aux15161,aux15162_BOOL);
constraint int_le_reif(s_00011, s_00003,aux15163_BOOL);
constraint array_bool_and([w_00007_00011_BOOL,aux15159_BOOL,aux15160_BOOL,aux15162_BOOL,aux15163_BOOL],aux15164_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15165_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux15166_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux15167,s_00012],0);
constraint int_lt_reif(s_00003,aux15167,aux15168_BOOL);
constraint int_le_reif(s_00012, s_00003,aux15169_BOOL);
constraint array_bool_and([w_00007_00012_BOOL,aux15165_BOOL,aux15166_BOOL,aux15168_BOOL,aux15169_BOOL],aux15170_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15171_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux15172_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15173,s_00013],0);
constraint int_lt_reif(s_00003,aux15173,aux15174_BOOL);
constraint int_le_reif(s_00013, s_00003,aux15175_BOOL);
constraint array_bool_and([w_00007_00013_BOOL,aux15171_BOOL,aux15172_BOOL,aux15174_BOOL,aux15175_BOOL],aux15176_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15177_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux15178_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15179,s_00014],0);
constraint int_lt_reif(s_00003,aux15179,aux15180_BOOL);
constraint int_le_reif(s_00014, s_00003,aux15181_BOOL);
constraint array_bool_and([w_00007_00014_BOOL,aux15177_BOOL,aux15178_BOOL,aux15180_BOOL,aux15181_BOOL],aux15182_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15183_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux15184_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15185,s_00015],0);
constraint int_lt_reif(s_00003,aux15185,aux15186_BOOL);
constraint int_le_reif(s_00015, s_00003,aux15187_BOOL);
constraint array_bool_and([w_00007_00015_BOOL,aux15183_BOOL,aux15184_BOOL,aux15186_BOOL,aux15187_BOOL],aux15188_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15189_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux15190_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15191,s_00016],0);
constraint int_lt_reif(s_00003,aux15191,aux15192_BOOL);
constraint int_le_reif(s_00016, s_00003,aux15193_BOOL);
constraint array_bool_and([w_00007_00016_BOOL,aux15189_BOOL,aux15190_BOOL,aux15192_BOOL,aux15193_BOOL],aux15194_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15195_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux15196_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux15197,s_00017],0);
constraint int_lt_reif(s_00003,aux15197,aux15198_BOOL);
constraint int_le_reif(s_00017, s_00003,aux15199_BOOL);
constraint array_bool_and([w_00007_00017_BOOL,aux15195_BOOL,aux15196_BOOL,aux15198_BOOL,aux15199_BOOL],aux15200_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15201_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux15202_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15203,s_00018],0);
constraint int_lt_reif(s_00003,aux15203,aux15204_BOOL);
constraint int_le_reif(s_00018, s_00003,aux15205_BOOL);
constraint array_bool_and([w_00007_00018_BOOL,aux15201_BOOL,aux15202_BOOL,aux15204_BOOL,aux15205_BOOL],aux15206_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15207_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux15208_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux15209,s_00019],0);
constraint int_lt_reif(s_00003,aux15209,aux15210_BOOL);
constraint int_le_reif(s_00019, s_00003,aux15211_BOOL);
constraint array_bool_and([w_00007_00019_BOOL,aux15207_BOOL,aux15208_BOOL,aux15210_BOOL,aux15211_BOOL],aux15212_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15213_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux15214_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15215,s_00020],0);
constraint int_lt_reif(s_00003,aux15215,aux15216_BOOL);
constraint int_le_reif(s_00020, s_00003,aux15217_BOOL);
constraint array_bool_and([w_00007_00020_BOOL,aux15213_BOOL,aux15214_BOOL,aux15216_BOOL,aux15217_BOOL],aux15218_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15219_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15220,s_00003],0);
constraint int_lt_reif(s_00003,aux15220,aux15221_BOOL);
constraint array_bool_and([w_00007_00003_BOOL,aux15219_BOOL,aux15221_BOOL],aux15222_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux15110_INTEGER,aux15116_INTEGER,aux15122_INTEGER,aux15128_INTEGER,aux15134_INTEGER,aux15140_INTEGER,aux15146_INTEGER,aux15152_INTEGER,aux15158_INTEGER,aux15164_INTEGER,aux15170_INTEGER,aux15176_INTEGER,aux15182_INTEGER,aux15188_INTEGER,aux15194_INTEGER,aux15200_INTEGER,aux15206_INTEGER,aux15212_INTEGER,aux15218_INTEGER,aux15222_INTEGER,1],0,aux15223_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux15224_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux15225_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux15226,s_00001],0);
constraint int_lt_reif(s_00013,aux15226,aux15227_BOOL);
constraint int_le_reif(s_00001, s_00013,aux15228_BOOL);
constraint array_bool_and([w_00007_00001_BOOL,aux15224_BOOL,aux15225_BOOL,aux15227_BOOL,aux15228_BOOL],aux15229_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux15230_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux15231_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux15232,s_00002],0);
constraint int_lt_reif(s_00013,aux15232,aux15233_BOOL);
constraint int_le_reif(s_00002, s_00013,aux15234_BOOL);
constraint array_bool_and([w_00007_00002_BOOL,aux15230_BOOL,aux15231_BOOL,aux15233_BOOL,aux15234_BOOL],aux15235_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15236_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux15237_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15238,s_00003],0);
constraint int_lt_reif(s_00013,aux15238,aux15239_BOOL);
constraint int_le_reif(s_00003, s_00013,aux15240_BOOL);
constraint array_bool_and([w_00007_00003_BOOL,aux15236_BOOL,aux15237_BOOL,aux15239_BOOL,aux15240_BOOL],aux15241_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux15242_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux15243_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15244,s_00004],0);
constraint int_lt_reif(s_00013,aux15244,aux15245_BOOL);
constraint int_le_reif(s_00004, s_00013,aux15246_BOOL);
constraint array_bool_and([w_00007_00004_BOOL,aux15242_BOOL,aux15243_BOOL,aux15245_BOOL,aux15246_BOOL],aux15247_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15248_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux15249_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15250,s_00005],0);
constraint int_lt_reif(s_00013,aux15250,aux15251_BOOL);
constraint int_le_reif(s_00005, s_00013,aux15252_BOOL);
constraint array_bool_and([w_00007_00005_BOOL,aux15248_BOOL,aux15249_BOOL,aux15251_BOOL,aux15252_BOOL],aux15253_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux15254_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux15255_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15256,s_00006],0);
constraint int_lt_reif(s_00013,aux15256,aux15257_BOOL);
constraint int_le_reif(s_00006, s_00013,aux15258_BOOL);
constraint array_bool_and([w_00007_00006_BOOL,aux15254_BOOL,aux15255_BOOL,aux15257_BOOL,aux15258_BOOL],aux15259_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15260_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux15261_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15262,s_00007],0);
constraint int_lt_reif(s_00013,aux15262,aux15263_BOOL);
constraint int_le_reif(s_00007, s_00013,aux15264_BOOL);
constraint array_bool_and([w_00007_00007_BOOL,aux15260_BOOL,aux15261_BOOL,aux15263_BOOL,aux15264_BOOL],aux15265_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux15266_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux15267_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15268,s_00008],0);
constraint int_lt_reif(s_00013,aux15268,aux15269_BOOL);
constraint int_le_reif(s_00008, s_00013,aux15270_BOOL);
constraint array_bool_and([w_00007_00008_BOOL,aux15266_BOOL,aux15267_BOOL,aux15269_BOOL,aux15270_BOOL],aux15271_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux15272_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux15273_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15274,s_00009],0);
constraint int_lt_reif(s_00013,aux15274,aux15275_BOOL);
constraint int_le_reif(s_00009, s_00013,aux15276_BOOL);
constraint array_bool_and([w_00007_00009_BOOL,aux15272_BOOL,aux15273_BOOL,aux15275_BOOL,aux15276_BOOL],aux15277_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux15278_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux15279_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux15280,s_00010],0);
constraint int_lt_reif(s_00013,aux15280,aux15281_BOOL);
constraint int_le_reif(s_00010, s_00013,aux15282_BOOL);
constraint array_bool_and([w_00007_00010_BOOL,aux15278_BOOL,aux15279_BOOL,aux15281_BOOL,aux15282_BOOL],aux15283_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux15284_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux15285_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15286,s_00011],0);
constraint int_lt_reif(s_00013,aux15286,aux15287_BOOL);
constraint int_le_reif(s_00011, s_00013,aux15288_BOOL);
constraint array_bool_and([w_00007_00011_BOOL,aux15284_BOOL,aux15285_BOOL,aux15287_BOOL,aux15288_BOOL],aux15289_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux15290_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux15291_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux15292,s_00012],0);
constraint int_lt_reif(s_00013,aux15292,aux15293_BOOL);
constraint int_le_reif(s_00012, s_00013,aux15294_BOOL);
constraint array_bool_and([w_00007_00012_BOOL,aux15290_BOOL,aux15291_BOOL,aux15293_BOOL,aux15294_BOOL],aux15295_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux15296_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux15297_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15298,s_00014],0);
constraint int_lt_reif(s_00013,aux15298,aux15299_BOOL);
constraint int_le_reif(s_00014, s_00013,aux15300_BOOL);
constraint array_bool_and([w_00007_00014_BOOL,aux15296_BOOL,aux15297_BOOL,aux15299_BOOL,aux15300_BOOL],aux15301_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux15302_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux15303_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15304,s_00015],0);
constraint int_lt_reif(s_00013,aux15304,aux15305_BOOL);
constraint int_le_reif(s_00015, s_00013,aux15306_BOOL);
constraint array_bool_and([w_00007_00015_BOOL,aux15302_BOOL,aux15303_BOOL,aux15305_BOOL,aux15306_BOOL],aux15307_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux15308_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux15309_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15310,s_00016],0);
constraint int_lt_reif(s_00013,aux15310,aux15311_BOOL);
constraint int_le_reif(s_00016, s_00013,aux15312_BOOL);
constraint array_bool_and([w_00007_00016_BOOL,aux15308_BOOL,aux15309_BOOL,aux15311_BOOL,aux15312_BOOL],aux15313_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux15314_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux15315_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux15316,s_00017],0);
constraint int_lt_reif(s_00013,aux15316,aux15317_BOOL);
constraint int_le_reif(s_00017, s_00013,aux15318_BOOL);
constraint array_bool_and([w_00007_00017_BOOL,aux15314_BOOL,aux15315_BOOL,aux15317_BOOL,aux15318_BOOL],aux15319_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux15320_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux15321_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15322,s_00018],0);
constraint int_lt_reif(s_00013,aux15322,aux15323_BOOL);
constraint int_le_reif(s_00018, s_00013,aux15324_BOOL);
constraint array_bool_and([w_00007_00018_BOOL,aux15320_BOOL,aux15321_BOOL,aux15323_BOOL,aux15324_BOOL],aux15325_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux15326_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux15327_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux15328,s_00019],0);
constraint int_lt_reif(s_00013,aux15328,aux15329_BOOL);
constraint int_le_reif(s_00019, s_00013,aux15330_BOOL);
constraint array_bool_and([w_00007_00019_BOOL,aux15326_BOOL,aux15327_BOOL,aux15329_BOOL,aux15330_BOOL],aux15331_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux15332_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux15333_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15334,s_00020],0);
constraint int_lt_reif(s_00013,aux15334,aux15335_BOOL);
constraint int_le_reif(s_00020, s_00013,aux15336_BOOL);
constraint array_bool_and([w_00007_00020_BOOL,aux15332_BOOL,aux15333_BOOL,aux15335_BOOL,aux15336_BOOL],aux15337_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux15338_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15339,s_00013],0);
constraint int_lt_reif(s_00013,aux15339,aux15340_BOOL);
constraint array_bool_and([w_00007_00013_BOOL,aux15338_BOOL,aux15340_BOOL],aux15341_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux15229_INTEGER,aux15235_INTEGER,aux15241_INTEGER,aux15247_INTEGER,aux15253_INTEGER,aux15259_INTEGER,aux15265_INTEGER,aux15271_INTEGER,aux15277_INTEGER,aux15283_INTEGER,aux15289_INTEGER,aux15295_INTEGER,aux15301_INTEGER,aux15307_INTEGER,aux15313_INTEGER,aux15319_INTEGER,aux15325_INTEGER,aux15331_INTEGER,aux15337_INTEGER,aux15341_INTEGER,1],0,aux15342_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux15343_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15344_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux15345,s_00001],0);
constraint int_lt_reif(s_00005,aux15345,aux15346_BOOL);
constraint int_le_reif(s_00001, s_00005,aux15347_BOOL);
constraint array_bool_and([w_00007_00001_BOOL,aux15343_BOOL,aux15344_BOOL,aux15346_BOOL,aux15347_BOOL],aux15348_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux15349_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15350_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux15351,s_00002],0);
constraint int_lt_reif(s_00005,aux15351,aux15352_BOOL);
constraint int_le_reif(s_00002, s_00005,aux15353_BOOL);
constraint array_bool_and([w_00007_00002_BOOL,aux15349_BOOL,aux15350_BOOL,aux15352_BOOL,aux15353_BOOL],aux15354_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15355_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15356_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15357,s_00003],0);
constraint int_lt_reif(s_00005,aux15357,aux15358_BOOL);
constraint int_le_reif(s_00003, s_00005,aux15359_BOOL);
constraint array_bool_and([w_00007_00003_BOOL,aux15355_BOOL,aux15356_BOOL,aux15358_BOOL,aux15359_BOOL],aux15360_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux15361_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15362_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15363,s_00004],0);
constraint int_lt_reif(s_00005,aux15363,aux15364_BOOL);
constraint int_le_reif(s_00004, s_00005,aux15365_BOOL);
constraint array_bool_and([w_00007_00004_BOOL,aux15361_BOOL,aux15362_BOOL,aux15364_BOOL,aux15365_BOOL],aux15366_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15367_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux15368_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15369,s_00006],0);
constraint int_lt_reif(s_00005,aux15369,aux15370_BOOL);
constraint int_le_reif(s_00006, s_00005,aux15371_BOOL);
constraint array_bool_and([w_00007_00006_BOOL,aux15367_BOOL,aux15368_BOOL,aux15370_BOOL,aux15371_BOOL],aux15372_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15373_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15374_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15375,s_00007],0);
constraint int_lt_reif(s_00005,aux15375,aux15376_BOOL);
constraint int_le_reif(s_00007, s_00005,aux15377_BOOL);
constraint array_bool_and([w_00007_00007_BOOL,aux15373_BOOL,aux15374_BOOL,aux15376_BOOL,aux15377_BOOL],aux15378_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15379_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux15380_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15381,s_00008],0);
constraint int_lt_reif(s_00005,aux15381,aux15382_BOOL);
constraint int_le_reif(s_00008, s_00005,aux15383_BOOL);
constraint array_bool_and([w_00007_00008_BOOL,aux15379_BOOL,aux15380_BOOL,aux15382_BOOL,aux15383_BOOL],aux15384_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15385_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux15386_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15387,s_00009],0);
constraint int_lt_reif(s_00005,aux15387,aux15388_BOOL);
constraint int_le_reif(s_00009, s_00005,aux15389_BOOL);
constraint array_bool_and([w_00007_00009_BOOL,aux15385_BOOL,aux15386_BOOL,aux15388_BOOL,aux15389_BOOL],aux15390_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15391_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux15392_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux15393,s_00010],0);
constraint int_lt_reif(s_00005,aux15393,aux15394_BOOL);
constraint int_le_reif(s_00010, s_00005,aux15395_BOOL);
constraint array_bool_and([w_00007_00010_BOOL,aux15391_BOOL,aux15392_BOOL,aux15394_BOOL,aux15395_BOOL],aux15396_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15397_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux15398_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15399,s_00011],0);
constraint int_lt_reif(s_00005,aux15399,aux15400_BOOL);
constraint int_le_reif(s_00011, s_00005,aux15401_BOOL);
constraint array_bool_and([w_00007_00011_BOOL,aux15397_BOOL,aux15398_BOOL,aux15400_BOOL,aux15401_BOOL],aux15402_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15403_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux15404_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux15405,s_00012],0);
constraint int_lt_reif(s_00005,aux15405,aux15406_BOOL);
constraint int_le_reif(s_00012, s_00005,aux15407_BOOL);
constraint array_bool_and([w_00007_00012_BOOL,aux15403_BOOL,aux15404_BOOL,aux15406_BOOL,aux15407_BOOL],aux15408_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15409_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux15410_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15411,s_00013],0);
constraint int_lt_reif(s_00005,aux15411,aux15412_BOOL);
constraint int_le_reif(s_00013, s_00005,aux15413_BOOL);
constraint array_bool_and([w_00007_00013_BOOL,aux15409_BOOL,aux15410_BOOL,aux15412_BOOL,aux15413_BOOL],aux15414_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15415_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux15416_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15417,s_00014],0);
constraint int_lt_reif(s_00005,aux15417,aux15418_BOOL);
constraint int_le_reif(s_00014, s_00005,aux15419_BOOL);
constraint array_bool_and([w_00007_00014_BOOL,aux15415_BOOL,aux15416_BOOL,aux15418_BOOL,aux15419_BOOL],aux15420_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15421_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux15422_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15423,s_00015],0);
constraint int_lt_reif(s_00005,aux15423,aux15424_BOOL);
constraint int_le_reif(s_00015, s_00005,aux15425_BOOL);
constraint array_bool_and([w_00007_00015_BOOL,aux15421_BOOL,aux15422_BOOL,aux15424_BOOL,aux15425_BOOL],aux15426_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15427_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux15428_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15429,s_00016],0);
constraint int_lt_reif(s_00005,aux15429,aux15430_BOOL);
constraint int_le_reif(s_00016, s_00005,aux15431_BOOL);
constraint array_bool_and([w_00007_00016_BOOL,aux15427_BOOL,aux15428_BOOL,aux15430_BOOL,aux15431_BOOL],aux15432_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15433_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux15434_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux15435,s_00017],0);
constraint int_lt_reif(s_00005,aux15435,aux15436_BOOL);
constraint int_le_reif(s_00017, s_00005,aux15437_BOOL);
constraint array_bool_and([w_00007_00017_BOOL,aux15433_BOOL,aux15434_BOOL,aux15436_BOOL,aux15437_BOOL],aux15438_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15439_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux15440_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15441,s_00018],0);
constraint int_lt_reif(s_00005,aux15441,aux15442_BOOL);
constraint int_le_reif(s_00018, s_00005,aux15443_BOOL);
constraint array_bool_and([w_00007_00018_BOOL,aux15439_BOOL,aux15440_BOOL,aux15442_BOOL,aux15443_BOOL],aux15444_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15445_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux15446_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux15447,s_00019],0);
constraint int_lt_reif(s_00005,aux15447,aux15448_BOOL);
constraint int_le_reif(s_00019, s_00005,aux15449_BOOL);
constraint array_bool_and([w_00007_00019_BOOL,aux15445_BOOL,aux15446_BOOL,aux15448_BOOL,aux15449_BOOL],aux15450_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15451_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux15452_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15453,s_00020],0);
constraint int_lt_reif(s_00005,aux15453,aux15454_BOOL);
constraint int_le_reif(s_00020, s_00005,aux15455_BOOL);
constraint array_bool_and([w_00007_00020_BOOL,aux15451_BOOL,aux15452_BOOL,aux15454_BOOL,aux15455_BOOL],aux15456_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15457_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15458,s_00005],0);
constraint int_lt_reif(s_00005,aux15458,aux15459_BOOL);
constraint array_bool_and([w_00007_00005_BOOL,aux15457_BOOL,aux15459_BOOL],aux15460_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux15348_INTEGER,aux15354_INTEGER,aux15360_INTEGER,aux15366_INTEGER,aux15372_INTEGER,aux15378_INTEGER,aux15384_INTEGER,aux15390_INTEGER,aux15396_INTEGER,aux15402_INTEGER,aux15408_INTEGER,aux15414_INTEGER,aux15420_INTEGER,aux15426_INTEGER,aux15432_INTEGER,aux15438_INTEGER,aux15444_INTEGER,aux15450_INTEGER,aux15456_INTEGER,aux15460_INTEGER,1],0,aux15461_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux15462_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux15463_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux15464,s_00001],0);
constraint int_lt_reif(s_00018,aux15464,aux15465_BOOL);
constraint int_le_reif(s_00001, s_00018,aux15466_BOOL);
constraint array_bool_and([w_00007_00001_BOOL,aux15462_BOOL,aux15463_BOOL,aux15465_BOOL,aux15466_BOOL],aux15467_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux15468_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux15469_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux15470,s_00002],0);
constraint int_lt_reif(s_00018,aux15470,aux15471_BOOL);
constraint int_le_reif(s_00002, s_00018,aux15472_BOOL);
constraint array_bool_and([w_00007_00002_BOOL,aux15468_BOOL,aux15469_BOOL,aux15471_BOOL,aux15472_BOOL],aux15473_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15474_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux15475_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15476,s_00003],0);
constraint int_lt_reif(s_00018,aux15476,aux15477_BOOL);
constraint int_le_reif(s_00003, s_00018,aux15478_BOOL);
constraint array_bool_and([w_00007_00003_BOOL,aux15474_BOOL,aux15475_BOOL,aux15477_BOOL,aux15478_BOOL],aux15479_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux15480_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux15481_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15482,s_00004],0);
constraint int_lt_reif(s_00018,aux15482,aux15483_BOOL);
constraint int_le_reif(s_00004, s_00018,aux15484_BOOL);
constraint array_bool_and([w_00007_00004_BOOL,aux15480_BOOL,aux15481_BOOL,aux15483_BOOL,aux15484_BOOL],aux15485_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15486_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux15487_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15488,s_00005],0);
constraint int_lt_reif(s_00018,aux15488,aux15489_BOOL);
constraint int_le_reif(s_00005, s_00018,aux15490_BOOL);
constraint array_bool_and([w_00007_00005_BOOL,aux15486_BOOL,aux15487_BOOL,aux15489_BOOL,aux15490_BOOL],aux15491_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux15492_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux15493_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15494,s_00006],0);
constraint int_lt_reif(s_00018,aux15494,aux15495_BOOL);
constraint int_le_reif(s_00006, s_00018,aux15496_BOOL);
constraint array_bool_and([w_00007_00006_BOOL,aux15492_BOOL,aux15493_BOOL,aux15495_BOOL,aux15496_BOOL],aux15497_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15498_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux15499_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15500,s_00007],0);
constraint int_lt_reif(s_00018,aux15500,aux15501_BOOL);
constraint int_le_reif(s_00007, s_00018,aux15502_BOOL);
constraint array_bool_and([w_00007_00007_BOOL,aux15498_BOOL,aux15499_BOOL,aux15501_BOOL,aux15502_BOOL],aux15503_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux15504_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux15505_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15506,s_00008],0);
constraint int_lt_reif(s_00018,aux15506,aux15507_BOOL);
constraint int_le_reif(s_00008, s_00018,aux15508_BOOL);
constraint array_bool_and([w_00007_00008_BOOL,aux15504_BOOL,aux15505_BOOL,aux15507_BOOL,aux15508_BOOL],aux15509_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux15510_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux15511_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15512,s_00009],0);
constraint int_lt_reif(s_00018,aux15512,aux15513_BOOL);
constraint int_le_reif(s_00009, s_00018,aux15514_BOOL);
constraint array_bool_and([w_00007_00009_BOOL,aux15510_BOOL,aux15511_BOOL,aux15513_BOOL,aux15514_BOOL],aux15515_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux15516_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux15517_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux15518,s_00010],0);
constraint int_lt_reif(s_00018,aux15518,aux15519_BOOL);
constraint int_le_reif(s_00010, s_00018,aux15520_BOOL);
constraint array_bool_and([w_00007_00010_BOOL,aux15516_BOOL,aux15517_BOOL,aux15519_BOOL,aux15520_BOOL],aux15521_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux15522_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux15523_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15524,s_00011],0);
constraint int_lt_reif(s_00018,aux15524,aux15525_BOOL);
constraint int_le_reif(s_00011, s_00018,aux15526_BOOL);
constraint array_bool_and([w_00007_00011_BOOL,aux15522_BOOL,aux15523_BOOL,aux15525_BOOL,aux15526_BOOL],aux15527_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux15528_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux15529_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux15530,s_00012],0);
constraint int_lt_reif(s_00018,aux15530,aux15531_BOOL);
constraint int_le_reif(s_00012, s_00018,aux15532_BOOL);
constraint array_bool_and([w_00007_00012_BOOL,aux15528_BOOL,aux15529_BOOL,aux15531_BOOL,aux15532_BOOL],aux15533_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux15534_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux15535_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15536,s_00013],0);
constraint int_lt_reif(s_00018,aux15536,aux15537_BOOL);
constraint int_le_reif(s_00013, s_00018,aux15538_BOOL);
constraint array_bool_and([w_00007_00013_BOOL,aux15534_BOOL,aux15535_BOOL,aux15537_BOOL,aux15538_BOOL],aux15539_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux15540_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux15541_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15542,s_00014],0);
constraint int_lt_reif(s_00018,aux15542,aux15543_BOOL);
constraint int_le_reif(s_00014, s_00018,aux15544_BOOL);
constraint array_bool_and([w_00007_00014_BOOL,aux15540_BOOL,aux15541_BOOL,aux15543_BOOL,aux15544_BOOL],aux15545_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux15546_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux15547_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15548,s_00015],0);
constraint int_lt_reif(s_00018,aux15548,aux15549_BOOL);
constraint int_le_reif(s_00015, s_00018,aux15550_BOOL);
constraint array_bool_and([w_00007_00015_BOOL,aux15546_BOOL,aux15547_BOOL,aux15549_BOOL,aux15550_BOOL],aux15551_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux15552_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux15553_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15554,s_00016],0);
constraint int_lt_reif(s_00018,aux15554,aux15555_BOOL);
constraint int_le_reif(s_00016, s_00018,aux15556_BOOL);
constraint array_bool_and([w_00007_00016_BOOL,aux15552_BOOL,aux15553_BOOL,aux15555_BOOL,aux15556_BOOL],aux15557_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux15558_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux15559_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux15560,s_00017],0);
constraint int_lt_reif(s_00018,aux15560,aux15561_BOOL);
constraint int_le_reif(s_00017, s_00018,aux15562_BOOL);
constraint array_bool_and([w_00007_00017_BOOL,aux15558_BOOL,aux15559_BOOL,aux15561_BOOL,aux15562_BOOL],aux15563_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux15564_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux15565_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux15566,s_00019],0);
constraint int_lt_reif(s_00018,aux15566,aux15567_BOOL);
constraint int_le_reif(s_00019, s_00018,aux15568_BOOL);
constraint array_bool_and([w_00007_00019_BOOL,aux15564_BOOL,aux15565_BOOL,aux15567_BOOL,aux15568_BOOL],aux15569_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux15570_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux15571_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15572,s_00020],0);
constraint int_lt_reif(s_00018,aux15572,aux15573_BOOL);
constraint int_le_reif(s_00020, s_00018,aux15574_BOOL);
constraint array_bool_and([w_00007_00020_BOOL,aux15570_BOOL,aux15571_BOOL,aux15573_BOOL,aux15574_BOOL],aux15575_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux15576_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15577,s_00018],0);
constraint int_lt_reif(s_00018,aux15577,aux15578_BOOL);
constraint array_bool_and([w_00007_00018_BOOL,aux15576_BOOL,aux15578_BOOL],aux15579_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux15467_INTEGER,aux15473_INTEGER,aux15479_INTEGER,aux15485_INTEGER,aux15491_INTEGER,aux15497_INTEGER,aux15503_INTEGER,aux15509_INTEGER,aux15515_INTEGER,aux15521_INTEGER,aux15527_INTEGER,aux15533_INTEGER,aux15539_INTEGER,aux15545_INTEGER,aux15551_INTEGER,aux15557_INTEGER,aux15563_INTEGER,aux15569_INTEGER,aux15575_INTEGER,aux15579_INTEGER,1],0,aux15580_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux15581_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15582_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux15583,s_00001],0);
constraint int_lt_reif(s_00007,aux15583,aux15584_BOOL);
constraint int_le_reif(s_00001, s_00007,aux15585_BOOL);
constraint array_bool_and([w_00007_00001_BOOL,aux15581_BOOL,aux15582_BOOL,aux15584_BOOL,aux15585_BOOL],aux15586_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux15587_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15588_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux15589,s_00002],0);
constraint int_lt_reif(s_00007,aux15589,aux15590_BOOL);
constraint int_le_reif(s_00002, s_00007,aux15591_BOOL);
constraint array_bool_and([w_00007_00002_BOOL,aux15587_BOOL,aux15588_BOOL,aux15590_BOOL,aux15591_BOOL],aux15592_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15593_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15594_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15595,s_00003],0);
constraint int_lt_reif(s_00007,aux15595,aux15596_BOOL);
constraint int_le_reif(s_00003, s_00007,aux15597_BOOL);
constraint array_bool_and([w_00007_00003_BOOL,aux15593_BOOL,aux15594_BOOL,aux15596_BOOL,aux15597_BOOL],aux15598_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux15599_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15600_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15601,s_00004],0);
constraint int_lt_reif(s_00007,aux15601,aux15602_BOOL);
constraint int_le_reif(s_00004, s_00007,aux15603_BOOL);
constraint array_bool_and([w_00007_00004_BOOL,aux15599_BOOL,aux15600_BOOL,aux15602_BOOL,aux15603_BOOL],aux15604_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15605_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15606_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15607,s_00005],0);
constraint int_lt_reif(s_00007,aux15607,aux15608_BOOL);
constraint int_le_reif(s_00005, s_00007,aux15609_BOOL);
constraint array_bool_and([w_00007_00005_BOOL,aux15605_BOOL,aux15606_BOOL,aux15608_BOOL,aux15609_BOOL],aux15610_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux15611_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15612_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15613,s_00006],0);
constraint int_lt_reif(s_00007,aux15613,aux15614_BOOL);
constraint int_le_reif(s_00006, s_00007,aux15615_BOOL);
constraint array_bool_and([w_00007_00006_BOOL,aux15611_BOOL,aux15612_BOOL,aux15614_BOOL,aux15615_BOOL],aux15616_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15617_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux15618_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15619,s_00008],0);
constraint int_lt_reif(s_00007,aux15619,aux15620_BOOL);
constraint int_le_reif(s_00008, s_00007,aux15621_BOOL);
constraint array_bool_and([w_00007_00008_BOOL,aux15617_BOOL,aux15618_BOOL,aux15620_BOOL,aux15621_BOOL],aux15622_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15623_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux15624_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15625,s_00009],0);
constraint int_lt_reif(s_00007,aux15625,aux15626_BOOL);
constraint int_le_reif(s_00009, s_00007,aux15627_BOOL);
constraint array_bool_and([w_00007_00009_BOOL,aux15623_BOOL,aux15624_BOOL,aux15626_BOOL,aux15627_BOOL],aux15628_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15629_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux15630_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux15631,s_00010],0);
constraint int_lt_reif(s_00007,aux15631,aux15632_BOOL);
constraint int_le_reif(s_00010, s_00007,aux15633_BOOL);
constraint array_bool_and([w_00007_00010_BOOL,aux15629_BOOL,aux15630_BOOL,aux15632_BOOL,aux15633_BOOL],aux15634_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15635_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux15636_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15637,s_00011],0);
constraint int_lt_reif(s_00007,aux15637,aux15638_BOOL);
constraint int_le_reif(s_00011, s_00007,aux15639_BOOL);
constraint array_bool_and([w_00007_00011_BOOL,aux15635_BOOL,aux15636_BOOL,aux15638_BOOL,aux15639_BOOL],aux15640_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15641_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux15642_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux15643,s_00012],0);
constraint int_lt_reif(s_00007,aux15643,aux15644_BOOL);
constraint int_le_reif(s_00012, s_00007,aux15645_BOOL);
constraint array_bool_and([w_00007_00012_BOOL,aux15641_BOOL,aux15642_BOOL,aux15644_BOOL,aux15645_BOOL],aux15646_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15647_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux15648_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15649,s_00013],0);
constraint int_lt_reif(s_00007,aux15649,aux15650_BOOL);
constraint int_le_reif(s_00013, s_00007,aux15651_BOOL);
constraint array_bool_and([w_00007_00013_BOOL,aux15647_BOOL,aux15648_BOOL,aux15650_BOOL,aux15651_BOOL],aux15652_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15653_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux15654_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15655,s_00014],0);
constraint int_lt_reif(s_00007,aux15655,aux15656_BOOL);
constraint int_le_reif(s_00014, s_00007,aux15657_BOOL);
constraint array_bool_and([w_00007_00014_BOOL,aux15653_BOOL,aux15654_BOOL,aux15656_BOOL,aux15657_BOOL],aux15658_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15659_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux15660_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15661,s_00015],0);
constraint int_lt_reif(s_00007,aux15661,aux15662_BOOL);
constraint int_le_reif(s_00015, s_00007,aux15663_BOOL);
constraint array_bool_and([w_00007_00015_BOOL,aux15659_BOOL,aux15660_BOOL,aux15662_BOOL,aux15663_BOOL],aux15664_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15665_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux15666_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15667,s_00016],0);
constraint int_lt_reif(s_00007,aux15667,aux15668_BOOL);
constraint int_le_reif(s_00016, s_00007,aux15669_BOOL);
constraint array_bool_and([w_00007_00016_BOOL,aux15665_BOOL,aux15666_BOOL,aux15668_BOOL,aux15669_BOOL],aux15670_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15671_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux15672_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux15673,s_00017],0);
constraint int_lt_reif(s_00007,aux15673,aux15674_BOOL);
constraint int_le_reif(s_00017, s_00007,aux15675_BOOL);
constraint array_bool_and([w_00007_00017_BOOL,aux15671_BOOL,aux15672_BOOL,aux15674_BOOL,aux15675_BOOL],aux15676_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15677_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux15678_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15679,s_00018],0);
constraint int_lt_reif(s_00007,aux15679,aux15680_BOOL);
constraint int_le_reif(s_00018, s_00007,aux15681_BOOL);
constraint array_bool_and([w_00007_00018_BOOL,aux15677_BOOL,aux15678_BOOL,aux15680_BOOL,aux15681_BOOL],aux15682_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15683_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux15684_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux15685,s_00019],0);
constraint int_lt_reif(s_00007,aux15685,aux15686_BOOL);
constraint int_le_reif(s_00019, s_00007,aux15687_BOOL);
constraint array_bool_and([w_00007_00019_BOOL,aux15683_BOOL,aux15684_BOOL,aux15686_BOOL,aux15687_BOOL],aux15688_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15689_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux15690_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15691,s_00020],0);
constraint int_lt_reif(s_00007,aux15691,aux15692_BOOL);
constraint int_le_reif(s_00020, s_00007,aux15693_BOOL);
constraint array_bool_and([w_00007_00020_BOOL,aux15689_BOOL,aux15690_BOOL,aux15692_BOOL,aux15693_BOOL],aux15694_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15695_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15696,s_00007],0);
constraint int_lt_reif(s_00007,aux15696,aux15697_BOOL);
constraint array_bool_and([w_00007_00007_BOOL,aux15695_BOOL,aux15697_BOOL],aux15698_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux15586_INTEGER,aux15592_INTEGER,aux15598_INTEGER,aux15604_INTEGER,aux15610_INTEGER,aux15616_INTEGER,aux15622_INTEGER,aux15628_INTEGER,aux15634_INTEGER,aux15640_INTEGER,aux15646_INTEGER,aux15652_INTEGER,aux15658_INTEGER,aux15664_INTEGER,aux15670_INTEGER,aux15676_INTEGER,aux15682_INTEGER,aux15688_INTEGER,aux15694_INTEGER,aux15698_INTEGER,1],0,aux15699_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux15700_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux15701_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux15702,s_00001],0);
constraint int_lt_reif(s_00011,aux15702,aux15703_BOOL);
constraint int_le_reif(s_00001, s_00011,aux15704_BOOL);
constraint array_bool_and([w_00007_00001_BOOL,aux15700_BOOL,aux15701_BOOL,aux15703_BOOL,aux15704_BOOL],aux15705_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux15706_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux15707_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux15708,s_00002],0);
constraint int_lt_reif(s_00011,aux15708,aux15709_BOOL);
constraint int_le_reif(s_00002, s_00011,aux15710_BOOL);
constraint array_bool_and([w_00007_00002_BOOL,aux15706_BOOL,aux15707_BOOL,aux15709_BOOL,aux15710_BOOL],aux15711_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15712_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux15713_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15714,s_00003],0);
constraint int_lt_reif(s_00011,aux15714,aux15715_BOOL);
constraint int_le_reif(s_00003, s_00011,aux15716_BOOL);
constraint array_bool_and([w_00007_00003_BOOL,aux15712_BOOL,aux15713_BOOL,aux15715_BOOL,aux15716_BOOL],aux15717_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux15718_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux15719_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15720,s_00004],0);
constraint int_lt_reif(s_00011,aux15720,aux15721_BOOL);
constraint int_le_reif(s_00004, s_00011,aux15722_BOOL);
constraint array_bool_and([w_00007_00004_BOOL,aux15718_BOOL,aux15719_BOOL,aux15721_BOOL,aux15722_BOOL],aux15723_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15724_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux15725_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15726,s_00005],0);
constraint int_lt_reif(s_00011,aux15726,aux15727_BOOL);
constraint int_le_reif(s_00005, s_00011,aux15728_BOOL);
constraint array_bool_and([w_00007_00005_BOOL,aux15724_BOOL,aux15725_BOOL,aux15727_BOOL,aux15728_BOOL],aux15729_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux15730_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux15731_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15732,s_00006],0);
constraint int_lt_reif(s_00011,aux15732,aux15733_BOOL);
constraint int_le_reif(s_00006, s_00011,aux15734_BOOL);
constraint array_bool_and([w_00007_00006_BOOL,aux15730_BOOL,aux15731_BOOL,aux15733_BOOL,aux15734_BOOL],aux15735_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15736_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux15737_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15738,s_00007],0);
constraint int_lt_reif(s_00011,aux15738,aux15739_BOOL);
constraint int_le_reif(s_00007, s_00011,aux15740_BOOL);
constraint array_bool_and([w_00007_00007_BOOL,aux15736_BOOL,aux15737_BOOL,aux15739_BOOL,aux15740_BOOL],aux15741_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux15742_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux15743_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15744,s_00008],0);
constraint int_lt_reif(s_00011,aux15744,aux15745_BOOL);
constraint int_le_reif(s_00008, s_00011,aux15746_BOOL);
constraint array_bool_and([w_00007_00008_BOOL,aux15742_BOOL,aux15743_BOOL,aux15745_BOOL,aux15746_BOOL],aux15747_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux15748_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux15749_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15750,s_00009],0);
constraint int_lt_reif(s_00011,aux15750,aux15751_BOOL);
constraint int_le_reif(s_00009, s_00011,aux15752_BOOL);
constraint array_bool_and([w_00007_00009_BOOL,aux15748_BOOL,aux15749_BOOL,aux15751_BOOL,aux15752_BOOL],aux15753_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux15754_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux15755_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux15756,s_00010],0);
constraint int_lt_reif(s_00011,aux15756,aux15757_BOOL);
constraint int_le_reif(s_00010, s_00011,aux15758_BOOL);
constraint array_bool_and([w_00007_00010_BOOL,aux15754_BOOL,aux15755_BOOL,aux15757_BOOL,aux15758_BOOL],aux15759_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux15760_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux15761_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux15762,s_00012],0);
constraint int_lt_reif(s_00011,aux15762,aux15763_BOOL);
constraint int_le_reif(s_00012, s_00011,aux15764_BOOL);
constraint array_bool_and([w_00007_00012_BOOL,aux15760_BOOL,aux15761_BOOL,aux15763_BOOL,aux15764_BOOL],aux15765_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux15766_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux15767_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15768,s_00013],0);
constraint int_lt_reif(s_00011,aux15768,aux15769_BOOL);
constraint int_le_reif(s_00013, s_00011,aux15770_BOOL);
constraint array_bool_and([w_00007_00013_BOOL,aux15766_BOOL,aux15767_BOOL,aux15769_BOOL,aux15770_BOOL],aux15771_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux15772_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux15773_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15774,s_00014],0);
constraint int_lt_reif(s_00011,aux15774,aux15775_BOOL);
constraint int_le_reif(s_00014, s_00011,aux15776_BOOL);
constraint array_bool_and([w_00007_00014_BOOL,aux15772_BOOL,aux15773_BOOL,aux15775_BOOL,aux15776_BOOL],aux15777_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux15778_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux15779_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15780,s_00015],0);
constraint int_lt_reif(s_00011,aux15780,aux15781_BOOL);
constraint int_le_reif(s_00015, s_00011,aux15782_BOOL);
constraint array_bool_and([w_00007_00015_BOOL,aux15778_BOOL,aux15779_BOOL,aux15781_BOOL,aux15782_BOOL],aux15783_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux15784_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux15785_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15786,s_00016],0);
constraint int_lt_reif(s_00011,aux15786,aux15787_BOOL);
constraint int_le_reif(s_00016, s_00011,aux15788_BOOL);
constraint array_bool_and([w_00007_00016_BOOL,aux15784_BOOL,aux15785_BOOL,aux15787_BOOL,aux15788_BOOL],aux15789_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux15790_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux15791_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux15792,s_00017],0);
constraint int_lt_reif(s_00011,aux15792,aux15793_BOOL);
constraint int_le_reif(s_00017, s_00011,aux15794_BOOL);
constraint array_bool_and([w_00007_00017_BOOL,aux15790_BOOL,aux15791_BOOL,aux15793_BOOL,aux15794_BOOL],aux15795_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux15796_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux15797_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15798,s_00018],0);
constraint int_lt_reif(s_00011,aux15798,aux15799_BOOL);
constraint int_le_reif(s_00018, s_00011,aux15800_BOOL);
constraint array_bool_and([w_00007_00018_BOOL,aux15796_BOOL,aux15797_BOOL,aux15799_BOOL,aux15800_BOOL],aux15801_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux15802_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux15803_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux15804,s_00019],0);
constraint int_lt_reif(s_00011,aux15804,aux15805_BOOL);
constraint int_le_reif(s_00019, s_00011,aux15806_BOOL);
constraint array_bool_and([w_00007_00019_BOOL,aux15802_BOOL,aux15803_BOOL,aux15805_BOOL,aux15806_BOOL],aux15807_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux15808_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux15809_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15810,s_00020],0);
constraint int_lt_reif(s_00011,aux15810,aux15811_BOOL);
constraint int_le_reif(s_00020, s_00011,aux15812_BOOL);
constraint array_bool_and([w_00007_00020_BOOL,aux15808_BOOL,aux15809_BOOL,aux15811_BOOL,aux15812_BOOL],aux15813_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux15814_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15815,s_00011],0);
constraint int_lt_reif(s_00011,aux15815,aux15816_BOOL);
constraint array_bool_and([w_00007_00011_BOOL,aux15814_BOOL,aux15816_BOOL],aux15817_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux15705_INTEGER,aux15711_INTEGER,aux15717_INTEGER,aux15723_INTEGER,aux15729_INTEGER,aux15735_INTEGER,aux15741_INTEGER,aux15747_INTEGER,aux15753_INTEGER,aux15759_INTEGER,aux15765_INTEGER,aux15771_INTEGER,aux15777_INTEGER,aux15783_INTEGER,aux15789_INTEGER,aux15795_INTEGER,aux15801_INTEGER,aux15807_INTEGER,aux15813_INTEGER,aux15817_INTEGER,1],0,aux15818_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux15819_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux15820_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux15821,s_00001],0);
constraint int_lt_reif(s_00019,aux15821,aux15822_BOOL);
constraint int_le_reif(s_00001, s_00019,aux15823_BOOL);
constraint array_bool_and([w_00007_00001_BOOL,aux15819_BOOL,aux15820_BOOL,aux15822_BOOL,aux15823_BOOL],aux15824_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux15825_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux15826_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux15827,s_00002],0);
constraint int_lt_reif(s_00019,aux15827,aux15828_BOOL);
constraint int_le_reif(s_00002, s_00019,aux15829_BOOL);
constraint array_bool_and([w_00007_00002_BOOL,aux15825_BOOL,aux15826_BOOL,aux15828_BOOL,aux15829_BOOL],aux15830_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15831_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux15832_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15833,s_00003],0);
constraint int_lt_reif(s_00019,aux15833,aux15834_BOOL);
constraint int_le_reif(s_00003, s_00019,aux15835_BOOL);
constraint array_bool_and([w_00007_00003_BOOL,aux15831_BOOL,aux15832_BOOL,aux15834_BOOL,aux15835_BOOL],aux15836_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux15837_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux15838_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15839,s_00004],0);
constraint int_lt_reif(s_00019,aux15839,aux15840_BOOL);
constraint int_le_reif(s_00004, s_00019,aux15841_BOOL);
constraint array_bool_and([w_00007_00004_BOOL,aux15837_BOOL,aux15838_BOOL,aux15840_BOOL,aux15841_BOOL],aux15842_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15843_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux15844_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15845,s_00005],0);
constraint int_lt_reif(s_00019,aux15845,aux15846_BOOL);
constraint int_le_reif(s_00005, s_00019,aux15847_BOOL);
constraint array_bool_and([w_00007_00005_BOOL,aux15843_BOOL,aux15844_BOOL,aux15846_BOOL,aux15847_BOOL],aux15848_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux15849_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux15850_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15851,s_00006],0);
constraint int_lt_reif(s_00019,aux15851,aux15852_BOOL);
constraint int_le_reif(s_00006, s_00019,aux15853_BOOL);
constraint array_bool_and([w_00007_00006_BOOL,aux15849_BOOL,aux15850_BOOL,aux15852_BOOL,aux15853_BOOL],aux15854_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15855_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux15856_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15857,s_00007],0);
constraint int_lt_reif(s_00019,aux15857,aux15858_BOOL);
constraint int_le_reif(s_00007, s_00019,aux15859_BOOL);
constraint array_bool_and([w_00007_00007_BOOL,aux15855_BOOL,aux15856_BOOL,aux15858_BOOL,aux15859_BOOL],aux15860_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux15861_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux15862_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15863,s_00008],0);
constraint int_lt_reif(s_00019,aux15863,aux15864_BOOL);
constraint int_le_reif(s_00008, s_00019,aux15865_BOOL);
constraint array_bool_and([w_00007_00008_BOOL,aux15861_BOOL,aux15862_BOOL,aux15864_BOOL,aux15865_BOOL],aux15866_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux15867_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux15868_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15869,s_00009],0);
constraint int_lt_reif(s_00019,aux15869,aux15870_BOOL);
constraint int_le_reif(s_00009, s_00019,aux15871_BOOL);
constraint array_bool_and([w_00007_00009_BOOL,aux15867_BOOL,aux15868_BOOL,aux15870_BOOL,aux15871_BOOL],aux15872_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux15873_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux15874_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux15875,s_00010],0);
constraint int_lt_reif(s_00019,aux15875,aux15876_BOOL);
constraint int_le_reif(s_00010, s_00019,aux15877_BOOL);
constraint array_bool_and([w_00007_00010_BOOL,aux15873_BOOL,aux15874_BOOL,aux15876_BOOL,aux15877_BOOL],aux15878_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux15879_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux15880_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15881,s_00011],0);
constraint int_lt_reif(s_00019,aux15881,aux15882_BOOL);
constraint int_le_reif(s_00011, s_00019,aux15883_BOOL);
constraint array_bool_and([w_00007_00011_BOOL,aux15879_BOOL,aux15880_BOOL,aux15882_BOOL,aux15883_BOOL],aux15884_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux15885_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux15886_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux15887,s_00012],0);
constraint int_lt_reif(s_00019,aux15887,aux15888_BOOL);
constraint int_le_reif(s_00012, s_00019,aux15889_BOOL);
constraint array_bool_and([w_00007_00012_BOOL,aux15885_BOOL,aux15886_BOOL,aux15888_BOOL,aux15889_BOOL],aux15890_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux15891_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux15892_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15893,s_00013],0);
constraint int_lt_reif(s_00019,aux15893,aux15894_BOOL);
constraint int_le_reif(s_00013, s_00019,aux15895_BOOL);
constraint array_bool_and([w_00007_00013_BOOL,aux15891_BOOL,aux15892_BOOL,aux15894_BOOL,aux15895_BOOL],aux15896_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux15897_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux15898_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15899,s_00014],0);
constraint int_lt_reif(s_00019,aux15899,aux15900_BOOL);
constraint int_le_reif(s_00014, s_00019,aux15901_BOOL);
constraint array_bool_and([w_00007_00014_BOOL,aux15897_BOOL,aux15898_BOOL,aux15900_BOOL,aux15901_BOOL],aux15902_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux15903_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux15904_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15905,s_00015],0);
constraint int_lt_reif(s_00019,aux15905,aux15906_BOOL);
constraint int_le_reif(s_00015, s_00019,aux15907_BOOL);
constraint array_bool_and([w_00007_00015_BOOL,aux15903_BOOL,aux15904_BOOL,aux15906_BOOL,aux15907_BOOL],aux15908_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux15909_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux15910_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15911,s_00016],0);
constraint int_lt_reif(s_00019,aux15911,aux15912_BOOL);
constraint int_le_reif(s_00016, s_00019,aux15913_BOOL);
constraint array_bool_and([w_00007_00016_BOOL,aux15909_BOOL,aux15910_BOOL,aux15912_BOOL,aux15913_BOOL],aux15914_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux15915_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux15916_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux15917,s_00017],0);
constraint int_lt_reif(s_00019,aux15917,aux15918_BOOL);
constraint int_le_reif(s_00017, s_00019,aux15919_BOOL);
constraint array_bool_and([w_00007_00017_BOOL,aux15915_BOOL,aux15916_BOOL,aux15918_BOOL,aux15919_BOOL],aux15920_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux15921_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux15922_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15923,s_00018],0);
constraint int_lt_reif(s_00019,aux15923,aux15924_BOOL);
constraint int_le_reif(s_00018, s_00019,aux15925_BOOL);
constraint array_bool_and([w_00007_00018_BOOL,aux15921_BOOL,aux15922_BOOL,aux15924_BOOL,aux15925_BOOL],aux15926_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux15927_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux15928_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15929,s_00020],0);
constraint int_lt_reif(s_00019,aux15929,aux15930_BOOL);
constraint int_le_reif(s_00020, s_00019,aux15931_BOOL);
constraint array_bool_and([w_00007_00020_BOOL,aux15927_BOOL,aux15928_BOOL,aux15930_BOOL,aux15931_BOOL],aux15932_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux15933_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux15934,s_00019],0);
constraint int_lt_reif(s_00019,aux15934,aux15935_BOOL);
constraint array_bool_and([w_00007_00019_BOOL,aux15933_BOOL,aux15935_BOOL],aux15936_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux15824_INTEGER,aux15830_INTEGER,aux15836_INTEGER,aux15842_INTEGER,aux15848_INTEGER,aux15854_INTEGER,aux15860_INTEGER,aux15866_INTEGER,aux15872_INTEGER,aux15878_INTEGER,aux15884_INTEGER,aux15890_INTEGER,aux15896_INTEGER,aux15902_INTEGER,aux15908_INTEGER,aux15914_INTEGER,aux15920_INTEGER,aux15926_INTEGER,aux15932_INTEGER,aux15936_INTEGER,1],0,aux15937_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux15938_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux15939_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux15940,s_00001],0);
constraint int_lt_reif(s_00014,aux15940,aux15941_BOOL);
constraint int_le_reif(s_00001, s_00014,aux15942_BOOL);
constraint array_bool_and([w_00007_00001_BOOL,aux15938_BOOL,aux15939_BOOL,aux15941_BOOL,aux15942_BOOL],aux15943_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux15944_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux15945_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux15946,s_00002],0);
constraint int_lt_reif(s_00014,aux15946,aux15947_BOOL);
constraint int_le_reif(s_00002, s_00014,aux15948_BOOL);
constraint array_bool_and([w_00007_00002_BOOL,aux15944_BOOL,aux15945_BOOL,aux15947_BOOL,aux15948_BOOL],aux15949_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15950_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux15951_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15952,s_00003],0);
constraint int_lt_reif(s_00014,aux15952,aux15953_BOOL);
constraint int_le_reif(s_00003, s_00014,aux15954_BOOL);
constraint array_bool_and([w_00007_00003_BOOL,aux15950_BOOL,aux15951_BOOL,aux15953_BOOL,aux15954_BOOL],aux15955_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux15956_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux15957_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15958,s_00004],0);
constraint int_lt_reif(s_00014,aux15958,aux15959_BOOL);
constraint int_le_reif(s_00004, s_00014,aux15960_BOOL);
constraint array_bool_and([w_00007_00004_BOOL,aux15956_BOOL,aux15957_BOOL,aux15959_BOOL,aux15960_BOOL],aux15961_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15962_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux15963_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15964,s_00005],0);
constraint int_lt_reif(s_00014,aux15964,aux15965_BOOL);
constraint int_le_reif(s_00005, s_00014,aux15966_BOOL);
constraint array_bool_and([w_00007_00005_BOOL,aux15962_BOOL,aux15963_BOOL,aux15965_BOOL,aux15966_BOOL],aux15967_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux15968_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux15969_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15970,s_00006],0);
constraint int_lt_reif(s_00014,aux15970,aux15971_BOOL);
constraint int_le_reif(s_00006, s_00014,aux15972_BOOL);
constraint array_bool_and([w_00007_00006_BOOL,aux15968_BOOL,aux15969_BOOL,aux15971_BOOL,aux15972_BOOL],aux15973_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15974_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux15975_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15976,s_00007],0);
constraint int_lt_reif(s_00014,aux15976,aux15977_BOOL);
constraint int_le_reif(s_00007, s_00014,aux15978_BOOL);
constraint array_bool_and([w_00007_00007_BOOL,aux15974_BOOL,aux15975_BOOL,aux15977_BOOL,aux15978_BOOL],aux15979_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux15980_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux15981_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15982,s_00008],0);
constraint int_lt_reif(s_00014,aux15982,aux15983_BOOL);
constraint int_le_reif(s_00008, s_00014,aux15984_BOOL);
constraint array_bool_and([w_00007_00008_BOOL,aux15980_BOOL,aux15981_BOOL,aux15983_BOOL,aux15984_BOOL],aux15985_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux15986_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux15987_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15988,s_00009],0);
constraint int_lt_reif(s_00014,aux15988,aux15989_BOOL);
constraint int_le_reif(s_00009, s_00014,aux15990_BOOL);
constraint array_bool_and([w_00007_00009_BOOL,aux15986_BOOL,aux15987_BOOL,aux15989_BOOL,aux15990_BOOL],aux15991_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux15992_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux15993_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux15994,s_00010],0);
constraint int_lt_reif(s_00014,aux15994,aux15995_BOOL);
constraint int_le_reif(s_00010, s_00014,aux15996_BOOL);
constraint array_bool_and([w_00007_00010_BOOL,aux15992_BOOL,aux15993_BOOL,aux15995_BOOL,aux15996_BOOL],aux15997_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux15998_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux15999_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16000,s_00011],0);
constraint int_lt_reif(s_00014,aux16000,aux16001_BOOL);
constraint int_le_reif(s_00011, s_00014,aux16002_BOOL);
constraint array_bool_and([w_00007_00011_BOOL,aux15998_BOOL,aux15999_BOOL,aux16001_BOOL,aux16002_BOOL],aux16003_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux16004_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux16005_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux16006,s_00012],0);
constraint int_lt_reif(s_00014,aux16006,aux16007_BOOL);
constraint int_le_reif(s_00012, s_00014,aux16008_BOOL);
constraint array_bool_and([w_00007_00012_BOOL,aux16004_BOOL,aux16005_BOOL,aux16007_BOOL,aux16008_BOOL],aux16009_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux16010_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux16011_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16012,s_00013],0);
constraint int_lt_reif(s_00014,aux16012,aux16013_BOOL);
constraint int_le_reif(s_00013, s_00014,aux16014_BOOL);
constraint array_bool_and([w_00007_00013_BOOL,aux16010_BOOL,aux16011_BOOL,aux16013_BOOL,aux16014_BOOL],aux16015_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux16016_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux16017_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16018,s_00015],0);
constraint int_lt_reif(s_00014,aux16018,aux16019_BOOL);
constraint int_le_reif(s_00015, s_00014,aux16020_BOOL);
constraint array_bool_and([w_00007_00015_BOOL,aux16016_BOOL,aux16017_BOOL,aux16019_BOOL,aux16020_BOOL],aux16021_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux16022_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux16023_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16024,s_00016],0);
constraint int_lt_reif(s_00014,aux16024,aux16025_BOOL);
constraint int_le_reif(s_00016, s_00014,aux16026_BOOL);
constraint array_bool_and([w_00007_00016_BOOL,aux16022_BOOL,aux16023_BOOL,aux16025_BOOL,aux16026_BOOL],aux16027_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux16028_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16029_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux16030,s_00017],0);
constraint int_lt_reif(s_00014,aux16030,aux16031_BOOL);
constraint int_le_reif(s_00017, s_00014,aux16032_BOOL);
constraint array_bool_and([w_00007_00017_BOOL,aux16028_BOOL,aux16029_BOOL,aux16031_BOOL,aux16032_BOOL],aux16033_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux16034_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux16035_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16036,s_00018],0);
constraint int_lt_reif(s_00014,aux16036,aux16037_BOOL);
constraint int_le_reif(s_00018, s_00014,aux16038_BOOL);
constraint array_bool_and([w_00007_00018_BOOL,aux16034_BOOL,aux16035_BOOL,aux16037_BOOL,aux16038_BOOL],aux16039_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux16040_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux16041_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux16042,s_00019],0);
constraint int_lt_reif(s_00014,aux16042,aux16043_BOOL);
constraint int_le_reif(s_00019, s_00014,aux16044_BOOL);
constraint array_bool_and([w_00007_00019_BOOL,aux16040_BOOL,aux16041_BOOL,aux16043_BOOL,aux16044_BOOL],aux16045_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux16046_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16047_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16048,s_00020],0);
constraint int_lt_reif(s_00014,aux16048,aux16049_BOOL);
constraint int_le_reif(s_00020, s_00014,aux16050_BOOL);
constraint array_bool_and([w_00007_00020_BOOL,aux16046_BOOL,aux16047_BOOL,aux16049_BOOL,aux16050_BOOL],aux16051_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux16052_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16053,s_00014],0);
constraint int_lt_reif(s_00014,aux16053,aux16054_BOOL);
constraint array_bool_and([w_00007_00014_BOOL,aux16052_BOOL,aux16054_BOOL],aux16055_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux15943_INTEGER,aux15949_INTEGER,aux15955_INTEGER,aux15961_INTEGER,aux15967_INTEGER,aux15973_INTEGER,aux15979_INTEGER,aux15985_INTEGER,aux15991_INTEGER,aux15997_INTEGER,aux16003_INTEGER,aux16009_INTEGER,aux16015_INTEGER,aux16021_INTEGER,aux16027_INTEGER,aux16033_INTEGER,aux16039_INTEGER,aux16045_INTEGER,aux16051_INTEGER,aux16055_INTEGER,1],0,aux16056_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux16057_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux16058_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux16059,s_00001],0);
constraint int_lt_reif(s_00012,aux16059,aux16060_BOOL);
constraint int_le_reif(s_00001, s_00012,aux16061_BOOL);
constraint array_bool_and([w_00007_00001_BOOL,aux16057_BOOL,aux16058_BOOL,aux16060_BOOL,aux16061_BOOL],aux16062_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux16063_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux16064_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux16065,s_00002],0);
constraint int_lt_reif(s_00012,aux16065,aux16066_BOOL);
constraint int_le_reif(s_00002, s_00012,aux16067_BOOL);
constraint array_bool_and([w_00007_00002_BOOL,aux16063_BOOL,aux16064_BOOL,aux16066_BOOL,aux16067_BOOL],aux16068_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux16069_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux16070_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16071,s_00003],0);
constraint int_lt_reif(s_00012,aux16071,aux16072_BOOL);
constraint int_le_reif(s_00003, s_00012,aux16073_BOOL);
constraint array_bool_and([w_00007_00003_BOOL,aux16069_BOOL,aux16070_BOOL,aux16072_BOOL,aux16073_BOOL],aux16074_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16075_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux16076_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16077,s_00004],0);
constraint int_lt_reif(s_00012,aux16077,aux16078_BOOL);
constraint int_le_reif(s_00004, s_00012,aux16079_BOOL);
constraint array_bool_and([w_00007_00004_BOOL,aux16075_BOOL,aux16076_BOOL,aux16078_BOOL,aux16079_BOOL],aux16080_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux16081_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux16082_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16083,s_00005],0);
constraint int_lt_reif(s_00012,aux16083,aux16084_BOOL);
constraint int_le_reif(s_00005, s_00012,aux16085_BOOL);
constraint array_bool_and([w_00007_00005_BOOL,aux16081_BOOL,aux16082_BOOL,aux16084_BOOL,aux16085_BOOL],aux16086_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux16087_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux16088_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16089,s_00006],0);
constraint int_lt_reif(s_00012,aux16089,aux16090_BOOL);
constraint int_le_reif(s_00006, s_00012,aux16091_BOOL);
constraint array_bool_and([w_00007_00006_BOOL,aux16087_BOOL,aux16088_BOOL,aux16090_BOOL,aux16091_BOOL],aux16092_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux16093_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux16094_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16095,s_00007],0);
constraint int_lt_reif(s_00012,aux16095,aux16096_BOOL);
constraint int_le_reif(s_00007, s_00012,aux16097_BOOL);
constraint array_bool_and([w_00007_00007_BOOL,aux16093_BOOL,aux16094_BOOL,aux16096_BOOL,aux16097_BOOL],aux16098_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16099_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux16100_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16101,s_00008],0);
constraint int_lt_reif(s_00012,aux16101,aux16102_BOOL);
constraint int_le_reif(s_00008, s_00012,aux16103_BOOL);
constraint array_bool_and([w_00007_00008_BOOL,aux16099_BOOL,aux16100_BOOL,aux16102_BOOL,aux16103_BOOL],aux16104_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16105_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux16106_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16107,s_00009],0);
constraint int_lt_reif(s_00012,aux16107,aux16108_BOOL);
constraint int_le_reif(s_00009, s_00012,aux16109_BOOL);
constraint array_bool_and([w_00007_00009_BOOL,aux16105_BOOL,aux16106_BOOL,aux16108_BOOL,aux16109_BOOL],aux16110_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux16111_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux16112_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux16113,s_00010],0);
constraint int_lt_reif(s_00012,aux16113,aux16114_BOOL);
constraint int_le_reif(s_00010, s_00012,aux16115_BOOL);
constraint array_bool_and([w_00007_00010_BOOL,aux16111_BOOL,aux16112_BOOL,aux16114_BOOL,aux16115_BOOL],aux16116_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux16117_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux16118_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16119,s_00011],0);
constraint int_lt_reif(s_00012,aux16119,aux16120_BOOL);
constraint int_le_reif(s_00011, s_00012,aux16121_BOOL);
constraint array_bool_and([w_00007_00011_BOOL,aux16117_BOOL,aux16118_BOOL,aux16120_BOOL,aux16121_BOOL],aux16122_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux16123_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux16124_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16125,s_00013],0);
constraint int_lt_reif(s_00012,aux16125,aux16126_BOOL);
constraint int_le_reif(s_00013, s_00012,aux16127_BOOL);
constraint array_bool_and([w_00007_00013_BOOL,aux16123_BOOL,aux16124_BOOL,aux16126_BOOL,aux16127_BOOL],aux16128_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux16129_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux16130_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16131,s_00014],0);
constraint int_lt_reif(s_00012,aux16131,aux16132_BOOL);
constraint int_le_reif(s_00014, s_00012,aux16133_BOOL);
constraint array_bool_and([w_00007_00014_BOOL,aux16129_BOOL,aux16130_BOOL,aux16132_BOOL,aux16133_BOOL],aux16134_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux16135_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux16136_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16137,s_00015],0);
constraint int_lt_reif(s_00012,aux16137,aux16138_BOOL);
constraint int_le_reif(s_00015, s_00012,aux16139_BOOL);
constraint array_bool_and([w_00007_00015_BOOL,aux16135_BOOL,aux16136_BOOL,aux16138_BOOL,aux16139_BOOL],aux16140_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux16141_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux16142_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16143,s_00016],0);
constraint int_lt_reif(s_00012,aux16143,aux16144_BOOL);
constraint int_le_reif(s_00016, s_00012,aux16145_BOOL);
constraint array_bool_and([w_00007_00016_BOOL,aux16141_BOOL,aux16142_BOOL,aux16144_BOOL,aux16145_BOOL],aux16146_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux16147_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16148_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux16149,s_00017],0);
constraint int_lt_reif(s_00012,aux16149,aux16150_BOOL);
constraint int_le_reif(s_00017, s_00012,aux16151_BOOL);
constraint array_bool_and([w_00007_00017_BOOL,aux16147_BOOL,aux16148_BOOL,aux16150_BOOL,aux16151_BOOL],aux16152_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux16153_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux16154_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16155,s_00018],0);
constraint int_lt_reif(s_00012,aux16155,aux16156_BOOL);
constraint int_le_reif(s_00018, s_00012,aux16157_BOOL);
constraint array_bool_and([w_00007_00018_BOOL,aux16153_BOOL,aux16154_BOOL,aux16156_BOOL,aux16157_BOOL],aux16158_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux16159_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux16160_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux16161,s_00019],0);
constraint int_lt_reif(s_00012,aux16161,aux16162_BOOL);
constraint int_le_reif(s_00019, s_00012,aux16163_BOOL);
constraint array_bool_and([w_00007_00019_BOOL,aux16159_BOOL,aux16160_BOOL,aux16162_BOOL,aux16163_BOOL],aux16164_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux16165_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16166_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16167,s_00020],0);
constraint int_lt_reif(s_00012,aux16167,aux16168_BOOL);
constraint int_le_reif(s_00020, s_00012,aux16169_BOOL);
constraint array_bool_and([w_00007_00020_BOOL,aux16165_BOOL,aux16166_BOOL,aux16168_BOOL,aux16169_BOOL],aux16170_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux16171_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux16172,s_00012],0);
constraint int_lt_reif(s_00012,aux16172,aux16173_BOOL);
constraint array_bool_and([w_00007_00012_BOOL,aux16171_BOOL,aux16173_BOOL],aux16174_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux16062_INTEGER,aux16068_INTEGER,aux16074_INTEGER,aux16080_INTEGER,aux16086_INTEGER,aux16092_INTEGER,aux16098_INTEGER,aux16104_INTEGER,aux16110_INTEGER,aux16116_INTEGER,aux16122_INTEGER,aux16128_INTEGER,aux16134_INTEGER,aux16140_INTEGER,aux16146_INTEGER,aux16152_INTEGER,aux16158_INTEGER,aux16164_INTEGER,aux16170_INTEGER,aux16174_INTEGER,1],0,aux16175_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux16176_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16177_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux16178,s_00001],0);
constraint int_lt_reif(s_00008,aux16178,aux16179_BOOL);
constraint int_le_reif(s_00001, s_00008,aux16180_BOOL);
constraint array_bool_and([w_00007_00001_BOOL,aux16176_BOOL,aux16177_BOOL,aux16179_BOOL,aux16180_BOOL],aux16181_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux16182_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16183_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux16184,s_00002],0);
constraint int_lt_reif(s_00008,aux16184,aux16185_BOOL);
constraint int_le_reif(s_00002, s_00008,aux16186_BOOL);
constraint array_bool_and([w_00007_00002_BOOL,aux16182_BOOL,aux16183_BOOL,aux16185_BOOL,aux16186_BOOL],aux16187_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux16188_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16189_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16190,s_00003],0);
constraint int_lt_reif(s_00008,aux16190,aux16191_BOOL);
constraint int_le_reif(s_00003, s_00008,aux16192_BOOL);
constraint array_bool_and([w_00007_00003_BOOL,aux16188_BOOL,aux16189_BOOL,aux16191_BOOL,aux16192_BOOL],aux16193_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16194_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16195_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16196,s_00004],0);
constraint int_lt_reif(s_00008,aux16196,aux16197_BOOL);
constraint int_le_reif(s_00004, s_00008,aux16198_BOOL);
constraint array_bool_and([w_00007_00004_BOOL,aux16194_BOOL,aux16195_BOOL,aux16197_BOOL,aux16198_BOOL],aux16199_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux16200_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16201_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16202,s_00005],0);
constraint int_lt_reif(s_00008,aux16202,aux16203_BOOL);
constraint int_le_reif(s_00005, s_00008,aux16204_BOOL);
constraint array_bool_and([w_00007_00005_BOOL,aux16200_BOOL,aux16201_BOOL,aux16203_BOOL,aux16204_BOOL],aux16205_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux16206_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16207_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16208,s_00006],0);
constraint int_lt_reif(s_00008,aux16208,aux16209_BOOL);
constraint int_le_reif(s_00006, s_00008,aux16210_BOOL);
constraint array_bool_and([w_00007_00006_BOOL,aux16206_BOOL,aux16207_BOOL,aux16209_BOOL,aux16210_BOOL],aux16211_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux16212_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16213_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16214,s_00007],0);
constraint int_lt_reif(s_00008,aux16214,aux16215_BOOL);
constraint int_le_reif(s_00007, s_00008,aux16216_BOOL);
constraint array_bool_and([w_00007_00007_BOOL,aux16212_BOOL,aux16213_BOOL,aux16215_BOOL,aux16216_BOOL],aux16217_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16218_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16219_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16220,s_00009],0);
constraint int_lt_reif(s_00008,aux16220,aux16221_BOOL);
constraint int_le_reif(s_00009, s_00008,aux16222_BOOL);
constraint array_bool_and([w_00007_00009_BOOL,aux16218_BOOL,aux16219_BOOL,aux16221_BOOL,aux16222_BOOL],aux16223_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16224_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux16225_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux16226,s_00010],0);
constraint int_lt_reif(s_00008,aux16226,aux16227_BOOL);
constraint int_le_reif(s_00010, s_00008,aux16228_BOOL);
constraint array_bool_and([w_00007_00010_BOOL,aux16224_BOOL,aux16225_BOOL,aux16227_BOOL,aux16228_BOOL],aux16229_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16230_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux16231_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16232,s_00011],0);
constraint int_lt_reif(s_00008,aux16232,aux16233_BOOL);
constraint int_le_reif(s_00011, s_00008,aux16234_BOOL);
constraint array_bool_and([w_00007_00011_BOOL,aux16230_BOOL,aux16231_BOOL,aux16233_BOOL,aux16234_BOOL],aux16235_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16236_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux16237_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux16238,s_00012],0);
constraint int_lt_reif(s_00008,aux16238,aux16239_BOOL);
constraint int_le_reif(s_00012, s_00008,aux16240_BOOL);
constraint array_bool_and([w_00007_00012_BOOL,aux16236_BOOL,aux16237_BOOL,aux16239_BOOL,aux16240_BOOL],aux16241_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16242_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux16243_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16244,s_00013],0);
constraint int_lt_reif(s_00008,aux16244,aux16245_BOOL);
constraint int_le_reif(s_00013, s_00008,aux16246_BOOL);
constraint array_bool_and([w_00007_00013_BOOL,aux16242_BOOL,aux16243_BOOL,aux16245_BOOL,aux16246_BOOL],aux16247_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16248_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux16249_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16250,s_00014],0);
constraint int_lt_reif(s_00008,aux16250,aux16251_BOOL);
constraint int_le_reif(s_00014, s_00008,aux16252_BOOL);
constraint array_bool_and([w_00007_00014_BOOL,aux16248_BOOL,aux16249_BOOL,aux16251_BOOL,aux16252_BOOL],aux16253_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16254_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux16255_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16256,s_00015],0);
constraint int_lt_reif(s_00008,aux16256,aux16257_BOOL);
constraint int_le_reif(s_00015, s_00008,aux16258_BOOL);
constraint array_bool_and([w_00007_00015_BOOL,aux16254_BOOL,aux16255_BOOL,aux16257_BOOL,aux16258_BOOL],aux16259_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16260_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux16261_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16262,s_00016],0);
constraint int_lt_reif(s_00008,aux16262,aux16263_BOOL);
constraint int_le_reif(s_00016, s_00008,aux16264_BOOL);
constraint array_bool_and([w_00007_00016_BOOL,aux16260_BOOL,aux16261_BOOL,aux16263_BOOL,aux16264_BOOL],aux16265_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16266_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16267_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux16268,s_00017],0);
constraint int_lt_reif(s_00008,aux16268,aux16269_BOOL);
constraint int_le_reif(s_00017, s_00008,aux16270_BOOL);
constraint array_bool_and([w_00007_00017_BOOL,aux16266_BOOL,aux16267_BOOL,aux16269_BOOL,aux16270_BOOL],aux16271_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16272_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux16273_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16274,s_00018],0);
constraint int_lt_reif(s_00008,aux16274,aux16275_BOOL);
constraint int_le_reif(s_00018, s_00008,aux16276_BOOL);
constraint array_bool_and([w_00007_00018_BOOL,aux16272_BOOL,aux16273_BOOL,aux16275_BOOL,aux16276_BOOL],aux16277_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16278_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux16279_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux16280,s_00019],0);
constraint int_lt_reif(s_00008,aux16280,aux16281_BOOL);
constraint int_le_reif(s_00019, s_00008,aux16282_BOOL);
constraint array_bool_and([w_00007_00019_BOOL,aux16278_BOOL,aux16279_BOOL,aux16281_BOOL,aux16282_BOOL],aux16283_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16284_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16285_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16286,s_00020],0);
constraint int_lt_reif(s_00008,aux16286,aux16287_BOOL);
constraint int_le_reif(s_00020, s_00008,aux16288_BOOL);
constraint array_bool_and([w_00007_00020_BOOL,aux16284_BOOL,aux16285_BOOL,aux16287_BOOL,aux16288_BOOL],aux16289_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16290_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16291,s_00008],0);
constraint int_lt_reif(s_00008,aux16291,aux16292_BOOL);
constraint array_bool_and([w_00007_00008_BOOL,aux16290_BOOL,aux16292_BOOL],aux16293_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux16181_INTEGER,aux16187_INTEGER,aux16193_INTEGER,aux16199_INTEGER,aux16205_INTEGER,aux16211_INTEGER,aux16217_INTEGER,aux16223_INTEGER,aux16229_INTEGER,aux16235_INTEGER,aux16241_INTEGER,aux16247_INTEGER,aux16253_INTEGER,aux16259_INTEGER,aux16265_INTEGER,aux16271_INTEGER,aux16277_INTEGER,aux16283_INTEGER,aux16289_INTEGER,aux16293_INTEGER,1],0,aux16294_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux16295_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16296_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux16297,s_00001],0);
constraint int_lt_reif(s_00004,aux16297,aux16298_BOOL);
constraint int_le_reif(s_00001, s_00004,aux16299_BOOL);
constraint array_bool_and([w_00007_00001_BOOL,aux16295_BOOL,aux16296_BOOL,aux16298_BOOL,aux16299_BOOL],aux16300_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux16301_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16302_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux16303,s_00002],0);
constraint int_lt_reif(s_00004,aux16303,aux16304_BOOL);
constraint int_le_reif(s_00002, s_00004,aux16305_BOOL);
constraint array_bool_and([w_00007_00002_BOOL,aux16301_BOOL,aux16302_BOOL,aux16304_BOOL,aux16305_BOOL],aux16306_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux16307_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16308_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16309,s_00003],0);
constraint int_lt_reif(s_00004,aux16309,aux16310_BOOL);
constraint int_le_reif(s_00003, s_00004,aux16311_BOOL);
constraint array_bool_and([w_00007_00003_BOOL,aux16307_BOOL,aux16308_BOOL,aux16310_BOOL,aux16311_BOOL],aux16312_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16313_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux16314_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16315,s_00005],0);
constraint int_lt_reif(s_00004,aux16315,aux16316_BOOL);
constraint int_le_reif(s_00005, s_00004,aux16317_BOOL);
constraint array_bool_and([w_00007_00005_BOOL,aux16313_BOOL,aux16314_BOOL,aux16316_BOOL,aux16317_BOOL],aux16318_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16319_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux16320_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16321,s_00006],0);
constraint int_lt_reif(s_00004,aux16321,aux16322_BOOL);
constraint int_le_reif(s_00006, s_00004,aux16323_BOOL);
constraint array_bool_and([w_00007_00006_BOOL,aux16319_BOOL,aux16320_BOOL,aux16322_BOOL,aux16323_BOOL],aux16324_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16325_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux16326_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16327,s_00007],0);
constraint int_lt_reif(s_00004,aux16327,aux16328_BOOL);
constraint int_le_reif(s_00007, s_00004,aux16329_BOOL);
constraint array_bool_and([w_00007_00007_BOOL,aux16325_BOOL,aux16326_BOOL,aux16328_BOOL,aux16329_BOOL],aux16330_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16331_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16332_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16333,s_00008],0);
constraint int_lt_reif(s_00004,aux16333,aux16334_BOOL);
constraint int_le_reif(s_00008, s_00004,aux16335_BOOL);
constraint array_bool_and([w_00007_00008_BOOL,aux16331_BOOL,aux16332_BOOL,aux16334_BOOL,aux16335_BOOL],aux16336_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16337_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16338_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16339,s_00009],0);
constraint int_lt_reif(s_00004,aux16339,aux16340_BOOL);
constraint int_le_reif(s_00009, s_00004,aux16341_BOOL);
constraint array_bool_and([w_00007_00009_BOOL,aux16337_BOOL,aux16338_BOOL,aux16340_BOOL,aux16341_BOOL],aux16342_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16343_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux16344_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux16345,s_00010],0);
constraint int_lt_reif(s_00004,aux16345,aux16346_BOOL);
constraint int_le_reif(s_00010, s_00004,aux16347_BOOL);
constraint array_bool_and([w_00007_00010_BOOL,aux16343_BOOL,aux16344_BOOL,aux16346_BOOL,aux16347_BOOL],aux16348_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16349_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux16350_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16351,s_00011],0);
constraint int_lt_reif(s_00004,aux16351,aux16352_BOOL);
constraint int_le_reif(s_00011, s_00004,aux16353_BOOL);
constraint array_bool_and([w_00007_00011_BOOL,aux16349_BOOL,aux16350_BOOL,aux16352_BOOL,aux16353_BOOL],aux16354_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16355_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux16356_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux16357,s_00012],0);
constraint int_lt_reif(s_00004,aux16357,aux16358_BOOL);
constraint int_le_reif(s_00012, s_00004,aux16359_BOOL);
constraint array_bool_and([w_00007_00012_BOOL,aux16355_BOOL,aux16356_BOOL,aux16358_BOOL,aux16359_BOOL],aux16360_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16361_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux16362_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16363,s_00013],0);
constraint int_lt_reif(s_00004,aux16363,aux16364_BOOL);
constraint int_le_reif(s_00013, s_00004,aux16365_BOOL);
constraint array_bool_and([w_00007_00013_BOOL,aux16361_BOOL,aux16362_BOOL,aux16364_BOOL,aux16365_BOOL],aux16366_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16367_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux16368_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16369,s_00014],0);
constraint int_lt_reif(s_00004,aux16369,aux16370_BOOL);
constraint int_le_reif(s_00014, s_00004,aux16371_BOOL);
constraint array_bool_and([w_00007_00014_BOOL,aux16367_BOOL,aux16368_BOOL,aux16370_BOOL,aux16371_BOOL],aux16372_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16373_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux16374_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16375,s_00015],0);
constraint int_lt_reif(s_00004,aux16375,aux16376_BOOL);
constraint int_le_reif(s_00015, s_00004,aux16377_BOOL);
constraint array_bool_and([w_00007_00015_BOOL,aux16373_BOOL,aux16374_BOOL,aux16376_BOOL,aux16377_BOOL],aux16378_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16379_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux16380_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16381,s_00016],0);
constraint int_lt_reif(s_00004,aux16381,aux16382_BOOL);
constraint int_le_reif(s_00016, s_00004,aux16383_BOOL);
constraint array_bool_and([w_00007_00016_BOOL,aux16379_BOOL,aux16380_BOOL,aux16382_BOOL,aux16383_BOOL],aux16384_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16385_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16386_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux16387,s_00017],0);
constraint int_lt_reif(s_00004,aux16387,aux16388_BOOL);
constraint int_le_reif(s_00017, s_00004,aux16389_BOOL);
constraint array_bool_and([w_00007_00017_BOOL,aux16385_BOOL,aux16386_BOOL,aux16388_BOOL,aux16389_BOOL],aux16390_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16391_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux16392_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16393,s_00018],0);
constraint int_lt_reif(s_00004,aux16393,aux16394_BOOL);
constraint int_le_reif(s_00018, s_00004,aux16395_BOOL);
constraint array_bool_and([w_00007_00018_BOOL,aux16391_BOOL,aux16392_BOOL,aux16394_BOOL,aux16395_BOOL],aux16396_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16397_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux16398_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux16399,s_00019],0);
constraint int_lt_reif(s_00004,aux16399,aux16400_BOOL);
constraint int_le_reif(s_00019, s_00004,aux16401_BOOL);
constraint array_bool_and([w_00007_00019_BOOL,aux16397_BOOL,aux16398_BOOL,aux16400_BOOL,aux16401_BOOL],aux16402_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16403_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16404_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16405,s_00020],0);
constraint int_lt_reif(s_00004,aux16405,aux16406_BOOL);
constraint int_le_reif(s_00020, s_00004,aux16407_BOOL);
constraint array_bool_and([w_00007_00020_BOOL,aux16403_BOOL,aux16404_BOOL,aux16406_BOOL,aux16407_BOOL],aux16408_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16409_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16410,s_00004],0);
constraint int_lt_reif(s_00004,aux16410,aux16411_BOOL);
constraint array_bool_and([w_00007_00004_BOOL,aux16409_BOOL,aux16411_BOOL],aux16412_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux16300_INTEGER,aux16306_INTEGER,aux16312_INTEGER,aux16318_INTEGER,aux16324_INTEGER,aux16330_INTEGER,aux16336_INTEGER,aux16342_INTEGER,aux16348_INTEGER,aux16354_INTEGER,aux16360_INTEGER,aux16366_INTEGER,aux16372_INTEGER,aux16378_INTEGER,aux16384_INTEGER,aux16390_INTEGER,aux16396_INTEGER,aux16402_INTEGER,aux16408_INTEGER,aux16412_INTEGER,1],0,aux16413_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux16414_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16415_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux16416,s_00001],0);
constraint int_lt_reif(s_00017,aux16416,aux16417_BOOL);
constraint int_le_reif(s_00001, s_00017,aux16418_BOOL);
constraint array_bool_and([w_00007_00001_BOOL,aux16414_BOOL,aux16415_BOOL,aux16417_BOOL,aux16418_BOOL],aux16419_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux16420_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16421_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux16422,s_00002],0);
constraint int_lt_reif(s_00017,aux16422,aux16423_BOOL);
constraint int_le_reif(s_00002, s_00017,aux16424_BOOL);
constraint array_bool_and([w_00007_00002_BOOL,aux16420_BOOL,aux16421_BOOL,aux16423_BOOL,aux16424_BOOL],aux16425_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux16426_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16427_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16428,s_00003],0);
constraint int_lt_reif(s_00017,aux16428,aux16429_BOOL);
constraint int_le_reif(s_00003, s_00017,aux16430_BOOL);
constraint array_bool_and([w_00007_00003_BOOL,aux16426_BOOL,aux16427_BOOL,aux16429_BOOL,aux16430_BOOL],aux16431_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16432_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16433_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16434,s_00004],0);
constraint int_lt_reif(s_00017,aux16434,aux16435_BOOL);
constraint int_le_reif(s_00004, s_00017,aux16436_BOOL);
constraint array_bool_and([w_00007_00004_BOOL,aux16432_BOOL,aux16433_BOOL,aux16435_BOOL,aux16436_BOOL],aux16437_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux16438_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16439_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16440,s_00005],0);
constraint int_lt_reif(s_00017,aux16440,aux16441_BOOL);
constraint int_le_reif(s_00005, s_00017,aux16442_BOOL);
constraint array_bool_and([w_00007_00005_BOOL,aux16438_BOOL,aux16439_BOOL,aux16441_BOOL,aux16442_BOOL],aux16443_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux16444_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16445_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16446,s_00006],0);
constraint int_lt_reif(s_00017,aux16446,aux16447_BOOL);
constraint int_le_reif(s_00006, s_00017,aux16448_BOOL);
constraint array_bool_and([w_00007_00006_BOOL,aux16444_BOOL,aux16445_BOOL,aux16447_BOOL,aux16448_BOOL],aux16449_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux16450_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16451_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16452,s_00007],0);
constraint int_lt_reif(s_00017,aux16452,aux16453_BOOL);
constraint int_le_reif(s_00007, s_00017,aux16454_BOOL);
constraint array_bool_and([w_00007_00007_BOOL,aux16450_BOOL,aux16451_BOOL,aux16453_BOOL,aux16454_BOOL],aux16455_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16456_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16457_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16458,s_00008],0);
constraint int_lt_reif(s_00017,aux16458,aux16459_BOOL);
constraint int_le_reif(s_00008, s_00017,aux16460_BOOL);
constraint array_bool_and([w_00007_00008_BOOL,aux16456_BOOL,aux16457_BOOL,aux16459_BOOL,aux16460_BOOL],aux16461_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16462_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16463_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16464,s_00009],0);
constraint int_lt_reif(s_00017,aux16464,aux16465_BOOL);
constraint int_le_reif(s_00009, s_00017,aux16466_BOOL);
constraint array_bool_and([w_00007_00009_BOOL,aux16462_BOOL,aux16463_BOOL,aux16465_BOOL,aux16466_BOOL],aux16467_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux16468_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16469_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux16470,s_00010],0);
constraint int_lt_reif(s_00017,aux16470,aux16471_BOOL);
constraint int_le_reif(s_00010, s_00017,aux16472_BOOL);
constraint array_bool_and([w_00007_00010_BOOL,aux16468_BOOL,aux16469_BOOL,aux16471_BOOL,aux16472_BOOL],aux16473_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux16474_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16475_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16476,s_00011],0);
constraint int_lt_reif(s_00017,aux16476,aux16477_BOOL);
constraint int_le_reif(s_00011, s_00017,aux16478_BOOL);
constraint array_bool_and([w_00007_00011_BOOL,aux16474_BOOL,aux16475_BOOL,aux16477_BOOL,aux16478_BOOL],aux16479_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux16480_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16481_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux16482,s_00012],0);
constraint int_lt_reif(s_00017,aux16482,aux16483_BOOL);
constraint int_le_reif(s_00012, s_00017,aux16484_BOOL);
constraint array_bool_and([w_00007_00012_BOOL,aux16480_BOOL,aux16481_BOOL,aux16483_BOOL,aux16484_BOOL],aux16485_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux16486_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16487_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16488,s_00013],0);
constraint int_lt_reif(s_00017,aux16488,aux16489_BOOL);
constraint int_le_reif(s_00013, s_00017,aux16490_BOOL);
constraint array_bool_and([w_00007_00013_BOOL,aux16486_BOOL,aux16487_BOOL,aux16489_BOOL,aux16490_BOOL],aux16491_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux16492_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16493_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16494,s_00014],0);
constraint int_lt_reif(s_00017,aux16494,aux16495_BOOL);
constraint int_le_reif(s_00014, s_00017,aux16496_BOOL);
constraint array_bool_and([w_00007_00014_BOOL,aux16492_BOOL,aux16493_BOOL,aux16495_BOOL,aux16496_BOOL],aux16497_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux16498_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16499_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16500,s_00015],0);
constraint int_lt_reif(s_00017,aux16500,aux16501_BOOL);
constraint int_le_reif(s_00015, s_00017,aux16502_BOOL);
constraint array_bool_and([w_00007_00015_BOOL,aux16498_BOOL,aux16499_BOOL,aux16501_BOOL,aux16502_BOOL],aux16503_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux16504_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16505_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16506,s_00016],0);
constraint int_lt_reif(s_00017,aux16506,aux16507_BOOL);
constraint int_le_reif(s_00016, s_00017,aux16508_BOOL);
constraint array_bool_and([w_00007_00016_BOOL,aux16504_BOOL,aux16505_BOOL,aux16507_BOOL,aux16508_BOOL],aux16509_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16510_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux16511_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16512,s_00018],0);
constraint int_lt_reif(s_00017,aux16512,aux16513_BOOL);
constraint int_le_reif(s_00018, s_00017,aux16514_BOOL);
constraint array_bool_and([w_00007_00018_BOOL,aux16510_BOOL,aux16511_BOOL,aux16513_BOOL,aux16514_BOOL],aux16515_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16516_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux16517_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux16518,s_00019],0);
constraint int_lt_reif(s_00017,aux16518,aux16519_BOOL);
constraint int_le_reif(s_00019, s_00017,aux16520_BOOL);
constraint array_bool_and([w_00007_00019_BOOL,aux16516_BOOL,aux16517_BOOL,aux16519_BOOL,aux16520_BOOL],aux16521_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16522_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16523_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16524,s_00020],0);
constraint int_lt_reif(s_00017,aux16524,aux16525_BOOL);
constraint int_le_reif(s_00020, s_00017,aux16526_BOOL);
constraint array_bool_and([w_00007_00020_BOOL,aux16522_BOOL,aux16523_BOOL,aux16525_BOOL,aux16526_BOOL],aux16527_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16528_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux16529,s_00017],0);
constraint int_lt_reif(s_00017,aux16529,aux16530_BOOL);
constraint array_bool_and([w_00007_00017_BOOL,aux16528_BOOL,aux16530_BOOL],aux16531_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux16419_INTEGER,aux16425_INTEGER,aux16431_INTEGER,aux16437_INTEGER,aux16443_INTEGER,aux16449_INTEGER,aux16455_INTEGER,aux16461_INTEGER,aux16467_INTEGER,aux16473_INTEGER,aux16479_INTEGER,aux16485_INTEGER,aux16491_INTEGER,aux16497_INTEGER,aux16503_INTEGER,aux16509_INTEGER,aux16515_INTEGER,aux16521_INTEGER,aux16527_INTEGER,aux16531_INTEGER,1],0,aux16532_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux16533_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16534_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux16535,s_00001],0);
constraint int_lt_reif(s_00020,aux16535,aux16536_BOOL);
constraint int_le_reif(s_00001, s_00020,aux16537_BOOL);
constraint array_bool_and([w_00007_00001_BOOL,aux16533_BOOL,aux16534_BOOL,aux16536_BOOL,aux16537_BOOL],aux16538_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux16539_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16540_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux16541,s_00002],0);
constraint int_lt_reif(s_00020,aux16541,aux16542_BOOL);
constraint int_le_reif(s_00002, s_00020,aux16543_BOOL);
constraint array_bool_and([w_00007_00002_BOOL,aux16539_BOOL,aux16540_BOOL,aux16542_BOOL,aux16543_BOOL],aux16544_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux16545_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16546_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16547,s_00003],0);
constraint int_lt_reif(s_00020,aux16547,aux16548_BOOL);
constraint int_le_reif(s_00003, s_00020,aux16549_BOOL);
constraint array_bool_and([w_00007_00003_BOOL,aux16545_BOOL,aux16546_BOOL,aux16548_BOOL,aux16549_BOOL],aux16550_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16551_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16552_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16553,s_00004],0);
constraint int_lt_reif(s_00020,aux16553,aux16554_BOOL);
constraint int_le_reif(s_00004, s_00020,aux16555_BOOL);
constraint array_bool_and([w_00007_00004_BOOL,aux16551_BOOL,aux16552_BOOL,aux16554_BOOL,aux16555_BOOL],aux16556_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux16557_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16558_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16559,s_00005],0);
constraint int_lt_reif(s_00020,aux16559,aux16560_BOOL);
constraint int_le_reif(s_00005, s_00020,aux16561_BOOL);
constraint array_bool_and([w_00007_00005_BOOL,aux16557_BOOL,aux16558_BOOL,aux16560_BOOL,aux16561_BOOL],aux16562_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux16563_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16564_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16565,s_00006],0);
constraint int_lt_reif(s_00020,aux16565,aux16566_BOOL);
constraint int_le_reif(s_00006, s_00020,aux16567_BOOL);
constraint array_bool_and([w_00007_00006_BOOL,aux16563_BOOL,aux16564_BOOL,aux16566_BOOL,aux16567_BOOL],aux16568_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux16569_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16570_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16571,s_00007],0);
constraint int_lt_reif(s_00020,aux16571,aux16572_BOOL);
constraint int_le_reif(s_00007, s_00020,aux16573_BOOL);
constraint array_bool_and([w_00007_00007_BOOL,aux16569_BOOL,aux16570_BOOL,aux16572_BOOL,aux16573_BOOL],aux16574_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16575_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16576_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16577,s_00008],0);
constraint int_lt_reif(s_00020,aux16577,aux16578_BOOL);
constraint int_le_reif(s_00008, s_00020,aux16579_BOOL);
constraint array_bool_and([w_00007_00008_BOOL,aux16575_BOOL,aux16576_BOOL,aux16578_BOOL,aux16579_BOOL],aux16580_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16581_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16582_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16583,s_00009],0);
constraint int_lt_reif(s_00020,aux16583,aux16584_BOOL);
constraint int_le_reif(s_00009, s_00020,aux16585_BOOL);
constraint array_bool_and([w_00007_00009_BOOL,aux16581_BOOL,aux16582_BOOL,aux16584_BOOL,aux16585_BOOL],aux16586_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux16587_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16588_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux16589,s_00010],0);
constraint int_lt_reif(s_00020,aux16589,aux16590_BOOL);
constraint int_le_reif(s_00010, s_00020,aux16591_BOOL);
constraint array_bool_and([w_00007_00010_BOOL,aux16587_BOOL,aux16588_BOOL,aux16590_BOOL,aux16591_BOOL],aux16592_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux16593_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16594_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16595,s_00011],0);
constraint int_lt_reif(s_00020,aux16595,aux16596_BOOL);
constraint int_le_reif(s_00011, s_00020,aux16597_BOOL);
constraint array_bool_and([w_00007_00011_BOOL,aux16593_BOOL,aux16594_BOOL,aux16596_BOOL,aux16597_BOOL],aux16598_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux16599_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16600_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux16601,s_00012],0);
constraint int_lt_reif(s_00020,aux16601,aux16602_BOOL);
constraint int_le_reif(s_00012, s_00020,aux16603_BOOL);
constraint array_bool_and([w_00007_00012_BOOL,aux16599_BOOL,aux16600_BOOL,aux16602_BOOL,aux16603_BOOL],aux16604_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux16605_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16606_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16607,s_00013],0);
constraint int_lt_reif(s_00020,aux16607,aux16608_BOOL);
constraint int_le_reif(s_00013, s_00020,aux16609_BOOL);
constraint array_bool_and([w_00007_00013_BOOL,aux16605_BOOL,aux16606_BOOL,aux16608_BOOL,aux16609_BOOL],aux16610_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux16611_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16612_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16613,s_00014],0);
constraint int_lt_reif(s_00020,aux16613,aux16614_BOOL);
constraint int_le_reif(s_00014, s_00020,aux16615_BOOL);
constraint array_bool_and([w_00007_00014_BOOL,aux16611_BOOL,aux16612_BOOL,aux16614_BOOL,aux16615_BOOL],aux16616_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux16617_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16618_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16619,s_00015],0);
constraint int_lt_reif(s_00020,aux16619,aux16620_BOOL);
constraint int_le_reif(s_00015, s_00020,aux16621_BOOL);
constraint array_bool_and([w_00007_00015_BOOL,aux16617_BOOL,aux16618_BOOL,aux16620_BOOL,aux16621_BOOL],aux16622_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux16623_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16624_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16625,s_00016],0);
constraint int_lt_reif(s_00020,aux16625,aux16626_BOOL);
constraint int_le_reif(s_00016, s_00020,aux16627_BOOL);
constraint array_bool_and([w_00007_00016_BOOL,aux16623_BOOL,aux16624_BOOL,aux16626_BOOL,aux16627_BOOL],aux16628_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16629_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16630_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux16631,s_00017],0);
constraint int_lt_reif(s_00020,aux16631,aux16632_BOOL);
constraint int_le_reif(s_00017, s_00020,aux16633_BOOL);
constraint array_bool_and([w_00007_00017_BOOL,aux16629_BOOL,aux16630_BOOL,aux16632_BOOL,aux16633_BOOL],aux16634_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux16635_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16636_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16637,s_00018],0);
constraint int_lt_reif(s_00020,aux16637,aux16638_BOOL);
constraint int_le_reif(s_00018, s_00020,aux16639_BOOL);
constraint array_bool_and([w_00007_00018_BOOL,aux16635_BOOL,aux16636_BOOL,aux16638_BOOL,aux16639_BOOL],aux16640_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux16641_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16642_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux16643,s_00019],0);
constraint int_lt_reif(s_00020,aux16643,aux16644_BOOL);
constraint int_le_reif(s_00019, s_00020,aux16645_BOOL);
constraint array_bool_and([w_00007_00019_BOOL,aux16641_BOOL,aux16642_BOOL,aux16644_BOOL,aux16645_BOOL],aux16646_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16647_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16648,s_00020],0);
constraint int_lt_reif(s_00020,aux16648,aux16649_BOOL);
constraint array_bool_and([w_00007_00020_BOOL,aux16647_BOOL,aux16649_BOOL],aux16650_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux16538_INTEGER,aux16544_INTEGER,aux16550_INTEGER,aux16556_INTEGER,aux16562_INTEGER,aux16568_INTEGER,aux16574_INTEGER,aux16580_INTEGER,aux16586_INTEGER,aux16592_INTEGER,aux16598_INTEGER,aux16604_INTEGER,aux16610_INTEGER,aux16616_INTEGER,aux16622_INTEGER,aux16628_INTEGER,aux16634_INTEGER,aux16640_INTEGER,aux16646_INTEGER,aux16650_INTEGER,1],0,aux16651_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux16652_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16653_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux16654,s_00001],0);
constraint int_lt_reif(s_00009,aux16654,aux16655_BOOL);
constraint int_le_reif(s_00001, s_00009,aux16656_BOOL);
constraint array_bool_and([w_00007_00001_BOOL,aux16652_BOOL,aux16653_BOOL,aux16655_BOOL,aux16656_BOOL],aux16657_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux16658_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16659_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux16660,s_00002],0);
constraint int_lt_reif(s_00009,aux16660,aux16661_BOOL);
constraint int_le_reif(s_00002, s_00009,aux16662_BOOL);
constraint array_bool_and([w_00007_00002_BOOL,aux16658_BOOL,aux16659_BOOL,aux16661_BOOL,aux16662_BOOL],aux16663_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux16664_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16665_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16666,s_00003],0);
constraint int_lt_reif(s_00009,aux16666,aux16667_BOOL);
constraint int_le_reif(s_00003, s_00009,aux16668_BOOL);
constraint array_bool_and([w_00007_00003_BOOL,aux16664_BOOL,aux16665_BOOL,aux16667_BOOL,aux16668_BOOL],aux16669_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16670_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16671_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16672,s_00004],0);
constraint int_lt_reif(s_00009,aux16672,aux16673_BOOL);
constraint int_le_reif(s_00004, s_00009,aux16674_BOOL);
constraint array_bool_and([w_00007_00004_BOOL,aux16670_BOOL,aux16671_BOOL,aux16673_BOOL,aux16674_BOOL],aux16675_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux16676_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16677_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16678,s_00005],0);
constraint int_lt_reif(s_00009,aux16678,aux16679_BOOL);
constraint int_le_reif(s_00005, s_00009,aux16680_BOOL);
constraint array_bool_and([w_00007_00005_BOOL,aux16676_BOOL,aux16677_BOOL,aux16679_BOOL,aux16680_BOOL],aux16681_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux16682_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16683_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16684,s_00006],0);
constraint int_lt_reif(s_00009,aux16684,aux16685_BOOL);
constraint int_le_reif(s_00006, s_00009,aux16686_BOOL);
constraint array_bool_and([w_00007_00006_BOOL,aux16682_BOOL,aux16683_BOOL,aux16685_BOOL,aux16686_BOOL],aux16687_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux16688_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16689_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16690,s_00007],0);
constraint int_lt_reif(s_00009,aux16690,aux16691_BOOL);
constraint int_le_reif(s_00007, s_00009,aux16692_BOOL);
constraint array_bool_and([w_00007_00007_BOOL,aux16688_BOOL,aux16689_BOOL,aux16691_BOOL,aux16692_BOOL],aux16693_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16694_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16695_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16696,s_00008],0);
constraint int_lt_reif(s_00009,aux16696,aux16697_BOOL);
constraint int_le_reif(s_00008, s_00009,aux16698_BOOL);
constraint array_bool_and([w_00007_00008_BOOL,aux16694_BOOL,aux16695_BOOL,aux16697_BOOL,aux16698_BOOL],aux16699_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16700_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux16701_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux16702,s_00010],0);
constraint int_lt_reif(s_00009,aux16702,aux16703_BOOL);
constraint int_le_reif(s_00010, s_00009,aux16704_BOOL);
constraint array_bool_and([w_00007_00010_BOOL,aux16700_BOOL,aux16701_BOOL,aux16703_BOOL,aux16704_BOOL],aux16705_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16706_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux16707_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16708,s_00011],0);
constraint int_lt_reif(s_00009,aux16708,aux16709_BOOL);
constraint int_le_reif(s_00011, s_00009,aux16710_BOOL);
constraint array_bool_and([w_00007_00011_BOOL,aux16706_BOOL,aux16707_BOOL,aux16709_BOOL,aux16710_BOOL],aux16711_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16712_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux16713_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux16714,s_00012],0);
constraint int_lt_reif(s_00009,aux16714,aux16715_BOOL);
constraint int_le_reif(s_00012, s_00009,aux16716_BOOL);
constraint array_bool_and([w_00007_00012_BOOL,aux16712_BOOL,aux16713_BOOL,aux16715_BOOL,aux16716_BOOL],aux16717_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16718_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux16719_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16720,s_00013],0);
constraint int_lt_reif(s_00009,aux16720,aux16721_BOOL);
constraint int_le_reif(s_00013, s_00009,aux16722_BOOL);
constraint array_bool_and([w_00007_00013_BOOL,aux16718_BOOL,aux16719_BOOL,aux16721_BOOL,aux16722_BOOL],aux16723_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16724_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux16725_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16726,s_00014],0);
constraint int_lt_reif(s_00009,aux16726,aux16727_BOOL);
constraint int_le_reif(s_00014, s_00009,aux16728_BOOL);
constraint array_bool_and([w_00007_00014_BOOL,aux16724_BOOL,aux16725_BOOL,aux16727_BOOL,aux16728_BOOL],aux16729_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16730_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux16731_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16732,s_00015],0);
constraint int_lt_reif(s_00009,aux16732,aux16733_BOOL);
constraint int_le_reif(s_00015, s_00009,aux16734_BOOL);
constraint array_bool_and([w_00007_00015_BOOL,aux16730_BOOL,aux16731_BOOL,aux16733_BOOL,aux16734_BOOL],aux16735_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16736_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux16737_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16738,s_00016],0);
constraint int_lt_reif(s_00009,aux16738,aux16739_BOOL);
constraint int_le_reif(s_00016, s_00009,aux16740_BOOL);
constraint array_bool_and([w_00007_00016_BOOL,aux16736_BOOL,aux16737_BOOL,aux16739_BOOL,aux16740_BOOL],aux16741_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16742_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16743_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux16744,s_00017],0);
constraint int_lt_reif(s_00009,aux16744,aux16745_BOOL);
constraint int_le_reif(s_00017, s_00009,aux16746_BOOL);
constraint array_bool_and([w_00007_00017_BOOL,aux16742_BOOL,aux16743_BOOL,aux16745_BOOL,aux16746_BOOL],aux16747_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16748_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux16749_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16750,s_00018],0);
constraint int_lt_reif(s_00009,aux16750,aux16751_BOOL);
constraint int_le_reif(s_00018, s_00009,aux16752_BOOL);
constraint array_bool_and([w_00007_00018_BOOL,aux16748_BOOL,aux16749_BOOL,aux16751_BOOL,aux16752_BOOL],aux16753_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16754_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux16755_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux16756,s_00019],0);
constraint int_lt_reif(s_00009,aux16756,aux16757_BOOL);
constraint int_le_reif(s_00019, s_00009,aux16758_BOOL);
constraint array_bool_and([w_00007_00019_BOOL,aux16754_BOOL,aux16755_BOOL,aux16757_BOOL,aux16758_BOOL],aux16759_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16760_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16761_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16762,s_00020],0);
constraint int_lt_reif(s_00009,aux16762,aux16763_BOOL);
constraint int_le_reif(s_00020, s_00009,aux16764_BOOL);
constraint array_bool_and([w_00007_00020_BOOL,aux16760_BOOL,aux16761_BOOL,aux16763_BOOL,aux16764_BOOL],aux16765_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16766_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16767,s_00009],0);
constraint int_lt_reif(s_00009,aux16767,aux16768_BOOL);
constraint array_bool_and([w_00007_00009_BOOL,aux16766_BOOL,aux16768_BOOL],aux16769_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux16657_INTEGER,aux16663_INTEGER,aux16669_INTEGER,aux16675_INTEGER,aux16681_INTEGER,aux16687_INTEGER,aux16693_INTEGER,aux16699_INTEGER,aux16705_INTEGER,aux16711_INTEGER,aux16717_INTEGER,aux16723_INTEGER,aux16729_INTEGER,aux16735_INTEGER,aux16741_INTEGER,aux16747_INTEGER,aux16753_INTEGER,aux16759_INTEGER,aux16765_INTEGER,aux16769_INTEGER,1],0,aux16770_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux16771_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux16772_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux16773,s_00001],0);
constraint int_lt_reif(s_00010,aux16773,aux16774_BOOL);
constraint int_le_reif(s_00001, s_00010,aux16775_BOOL);
constraint array_bool_and([w_00007_00001_BOOL,aux16771_BOOL,aux16772_BOOL,aux16774_BOOL,aux16775_BOOL],aux16776_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux16777_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux16778_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux16779,s_00002],0);
constraint int_lt_reif(s_00010,aux16779,aux16780_BOOL);
constraint int_le_reif(s_00002, s_00010,aux16781_BOOL);
constraint array_bool_and([w_00007_00002_BOOL,aux16777_BOOL,aux16778_BOOL,aux16780_BOOL,aux16781_BOOL],aux16782_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux16783_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux16784_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16785,s_00003],0);
constraint int_lt_reif(s_00010,aux16785,aux16786_BOOL);
constraint int_le_reif(s_00003, s_00010,aux16787_BOOL);
constraint array_bool_and([w_00007_00003_BOOL,aux16783_BOOL,aux16784_BOOL,aux16786_BOOL,aux16787_BOOL],aux16788_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16789_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux16790_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16791,s_00004],0);
constraint int_lt_reif(s_00010,aux16791,aux16792_BOOL);
constraint int_le_reif(s_00004, s_00010,aux16793_BOOL);
constraint array_bool_and([w_00007_00004_BOOL,aux16789_BOOL,aux16790_BOOL,aux16792_BOOL,aux16793_BOOL],aux16794_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux16795_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux16796_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16797,s_00005],0);
constraint int_lt_reif(s_00010,aux16797,aux16798_BOOL);
constraint int_le_reif(s_00005, s_00010,aux16799_BOOL);
constraint array_bool_and([w_00007_00005_BOOL,aux16795_BOOL,aux16796_BOOL,aux16798_BOOL,aux16799_BOOL],aux16800_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux16801_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux16802_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16803,s_00006],0);
constraint int_lt_reif(s_00010,aux16803,aux16804_BOOL);
constraint int_le_reif(s_00006, s_00010,aux16805_BOOL);
constraint array_bool_and([w_00007_00006_BOOL,aux16801_BOOL,aux16802_BOOL,aux16804_BOOL,aux16805_BOOL],aux16806_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux16807_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux16808_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16809,s_00007],0);
constraint int_lt_reif(s_00010,aux16809,aux16810_BOOL);
constraint int_le_reif(s_00007, s_00010,aux16811_BOOL);
constraint array_bool_and([w_00007_00007_BOOL,aux16807_BOOL,aux16808_BOOL,aux16810_BOOL,aux16811_BOOL],aux16812_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16813_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux16814_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16815,s_00008],0);
constraint int_lt_reif(s_00010,aux16815,aux16816_BOOL);
constraint int_le_reif(s_00008, s_00010,aux16817_BOOL);
constraint array_bool_and([w_00007_00008_BOOL,aux16813_BOOL,aux16814_BOOL,aux16816_BOOL,aux16817_BOOL],aux16818_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16819_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux16820_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16821,s_00009],0);
constraint int_lt_reif(s_00010,aux16821,aux16822_BOOL);
constraint int_le_reif(s_00009, s_00010,aux16823_BOOL);
constraint array_bool_and([w_00007_00009_BOOL,aux16819_BOOL,aux16820_BOOL,aux16822_BOOL,aux16823_BOOL],aux16824_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux16825_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux16826_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16827,s_00011],0);
constraint int_lt_reif(s_00010,aux16827,aux16828_BOOL);
constraint int_le_reif(s_00011, s_00010,aux16829_BOOL);
constraint array_bool_and([w_00007_00011_BOOL,aux16825_BOOL,aux16826_BOOL,aux16828_BOOL,aux16829_BOOL],aux16830_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux16831_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux16832_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux16833,s_00012],0);
constraint int_lt_reif(s_00010,aux16833,aux16834_BOOL);
constraint int_le_reif(s_00012, s_00010,aux16835_BOOL);
constraint array_bool_and([w_00007_00012_BOOL,aux16831_BOOL,aux16832_BOOL,aux16834_BOOL,aux16835_BOOL],aux16836_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux16837_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux16838_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16839,s_00013],0);
constraint int_lt_reif(s_00010,aux16839,aux16840_BOOL);
constraint int_le_reif(s_00013, s_00010,aux16841_BOOL);
constraint array_bool_and([w_00007_00013_BOOL,aux16837_BOOL,aux16838_BOOL,aux16840_BOOL,aux16841_BOOL],aux16842_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux16843_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux16844_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16845,s_00014],0);
constraint int_lt_reif(s_00010,aux16845,aux16846_BOOL);
constraint int_le_reif(s_00014, s_00010,aux16847_BOOL);
constraint array_bool_and([w_00007_00014_BOOL,aux16843_BOOL,aux16844_BOOL,aux16846_BOOL,aux16847_BOOL],aux16848_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux16849_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux16850_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16851,s_00015],0);
constraint int_lt_reif(s_00010,aux16851,aux16852_BOOL);
constraint int_le_reif(s_00015, s_00010,aux16853_BOOL);
constraint array_bool_and([w_00007_00015_BOOL,aux16849_BOOL,aux16850_BOOL,aux16852_BOOL,aux16853_BOOL],aux16854_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux16855_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux16856_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16857,s_00016],0);
constraint int_lt_reif(s_00010,aux16857,aux16858_BOOL);
constraint int_le_reif(s_00016, s_00010,aux16859_BOOL);
constraint array_bool_and([w_00007_00016_BOOL,aux16855_BOOL,aux16856_BOOL,aux16858_BOOL,aux16859_BOOL],aux16860_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux16861_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16862_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux16863,s_00017],0);
constraint int_lt_reif(s_00010,aux16863,aux16864_BOOL);
constraint int_le_reif(s_00017, s_00010,aux16865_BOOL);
constraint array_bool_and([w_00007_00017_BOOL,aux16861_BOOL,aux16862_BOOL,aux16864_BOOL,aux16865_BOOL],aux16866_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux16867_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux16868_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16869,s_00018],0);
constraint int_lt_reif(s_00010,aux16869,aux16870_BOOL);
constraint int_le_reif(s_00018, s_00010,aux16871_BOOL);
constraint array_bool_and([w_00007_00018_BOOL,aux16867_BOOL,aux16868_BOOL,aux16870_BOOL,aux16871_BOOL],aux16872_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux16873_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux16874_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux16875,s_00019],0);
constraint int_lt_reif(s_00010,aux16875,aux16876_BOOL);
constraint int_le_reif(s_00019, s_00010,aux16877_BOOL);
constraint array_bool_and([w_00007_00019_BOOL,aux16873_BOOL,aux16874_BOOL,aux16876_BOOL,aux16877_BOOL],aux16878_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux16879_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16880_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16881,s_00020],0);
constraint int_lt_reif(s_00010,aux16881,aux16882_BOOL);
constraint int_le_reif(s_00020, s_00010,aux16883_BOOL);
constraint array_bool_and([w_00007_00020_BOOL,aux16879_BOOL,aux16880_BOOL,aux16882_BOOL,aux16883_BOOL],aux16884_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux16885_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux16886,s_00010],0);
constraint int_lt_reif(s_00010,aux16886,aux16887_BOOL);
constraint array_bool_and([w_00007_00010_BOOL,aux16885_BOOL,aux16887_BOOL],aux16888_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux16776_INTEGER,aux16782_INTEGER,aux16788_INTEGER,aux16794_INTEGER,aux16800_INTEGER,aux16806_INTEGER,aux16812_INTEGER,aux16818_INTEGER,aux16824_INTEGER,aux16830_INTEGER,aux16836_INTEGER,aux16842_INTEGER,aux16848_INTEGER,aux16854_INTEGER,aux16860_INTEGER,aux16866_INTEGER,aux16872_INTEGER,aux16878_INTEGER,aux16884_INTEGER,aux16888_INTEGER,1],0,aux16889_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux16890_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux16891_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux16892,s_00001],0);
constraint int_lt_reif(s_00015,aux16892,aux16893_BOOL);
constraint int_le_reif(s_00001, s_00015,aux16894_BOOL);
constraint array_bool_and([w_00007_00001_BOOL,aux16890_BOOL,aux16891_BOOL,aux16893_BOOL,aux16894_BOOL],aux16895_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux16896_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux16897_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux16898,s_00002],0);
constraint int_lt_reif(s_00015,aux16898,aux16899_BOOL);
constraint int_le_reif(s_00002, s_00015,aux16900_BOOL);
constraint array_bool_and([w_00007_00002_BOOL,aux16896_BOOL,aux16897_BOOL,aux16899_BOOL,aux16900_BOOL],aux16901_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux16902_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux16903_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16904,s_00003],0);
constraint int_lt_reif(s_00015,aux16904,aux16905_BOOL);
constraint int_le_reif(s_00003, s_00015,aux16906_BOOL);
constraint array_bool_and([w_00007_00003_BOOL,aux16902_BOOL,aux16903_BOOL,aux16905_BOOL,aux16906_BOOL],aux16907_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16908_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux16909_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16910,s_00004],0);
constraint int_lt_reif(s_00015,aux16910,aux16911_BOOL);
constraint int_le_reif(s_00004, s_00015,aux16912_BOOL);
constraint array_bool_and([w_00007_00004_BOOL,aux16908_BOOL,aux16909_BOOL,aux16911_BOOL,aux16912_BOOL],aux16913_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux16914_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux16915_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16916,s_00005],0);
constraint int_lt_reif(s_00015,aux16916,aux16917_BOOL);
constraint int_le_reif(s_00005, s_00015,aux16918_BOOL);
constraint array_bool_and([w_00007_00005_BOOL,aux16914_BOOL,aux16915_BOOL,aux16917_BOOL,aux16918_BOOL],aux16919_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux16920_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux16921_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16922,s_00006],0);
constraint int_lt_reif(s_00015,aux16922,aux16923_BOOL);
constraint int_le_reif(s_00006, s_00015,aux16924_BOOL);
constraint array_bool_and([w_00007_00006_BOOL,aux16920_BOOL,aux16921_BOOL,aux16923_BOOL,aux16924_BOOL],aux16925_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux16926_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux16927_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16928,s_00007],0);
constraint int_lt_reif(s_00015,aux16928,aux16929_BOOL);
constraint int_le_reif(s_00007, s_00015,aux16930_BOOL);
constraint array_bool_and([w_00007_00007_BOOL,aux16926_BOOL,aux16927_BOOL,aux16929_BOOL,aux16930_BOOL],aux16931_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16932_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux16933_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16934,s_00008],0);
constraint int_lt_reif(s_00015,aux16934,aux16935_BOOL);
constraint int_le_reif(s_00008, s_00015,aux16936_BOOL);
constraint array_bool_and([w_00007_00008_BOOL,aux16932_BOOL,aux16933_BOOL,aux16935_BOOL,aux16936_BOOL],aux16937_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16938_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux16939_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16940,s_00009],0);
constraint int_lt_reif(s_00015,aux16940,aux16941_BOOL);
constraint int_le_reif(s_00009, s_00015,aux16942_BOOL);
constraint array_bool_and([w_00007_00009_BOOL,aux16938_BOOL,aux16939_BOOL,aux16941_BOOL,aux16942_BOOL],aux16943_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux16944_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux16945_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux16946,s_00010],0);
constraint int_lt_reif(s_00015,aux16946,aux16947_BOOL);
constraint int_le_reif(s_00010, s_00015,aux16948_BOOL);
constraint array_bool_and([w_00007_00010_BOOL,aux16944_BOOL,aux16945_BOOL,aux16947_BOOL,aux16948_BOOL],aux16949_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux16950_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux16951_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16952,s_00011],0);
constraint int_lt_reif(s_00015,aux16952,aux16953_BOOL);
constraint int_le_reif(s_00011, s_00015,aux16954_BOOL);
constraint array_bool_and([w_00007_00011_BOOL,aux16950_BOOL,aux16951_BOOL,aux16953_BOOL,aux16954_BOOL],aux16955_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux16956_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux16957_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux16958,s_00012],0);
constraint int_lt_reif(s_00015,aux16958,aux16959_BOOL);
constraint int_le_reif(s_00012, s_00015,aux16960_BOOL);
constraint array_bool_and([w_00007_00012_BOOL,aux16956_BOOL,aux16957_BOOL,aux16959_BOOL,aux16960_BOOL],aux16961_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux16962_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux16963_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16964,s_00013],0);
constraint int_lt_reif(s_00015,aux16964,aux16965_BOOL);
constraint int_le_reif(s_00013, s_00015,aux16966_BOOL);
constraint array_bool_and([w_00007_00013_BOOL,aux16962_BOOL,aux16963_BOOL,aux16965_BOOL,aux16966_BOOL],aux16967_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux16968_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux16969_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16970,s_00014],0);
constraint int_lt_reif(s_00015,aux16970,aux16971_BOOL);
constraint int_le_reif(s_00014, s_00015,aux16972_BOOL);
constraint array_bool_and([w_00007_00014_BOOL,aux16968_BOOL,aux16969_BOOL,aux16971_BOOL,aux16972_BOOL],aux16973_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux16974_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux16975_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16976,s_00016],0);
constraint int_lt_reif(s_00015,aux16976,aux16977_BOOL);
constraint int_le_reif(s_00016, s_00015,aux16978_BOOL);
constraint array_bool_and([w_00007_00016_BOOL,aux16974_BOOL,aux16975_BOOL,aux16977_BOOL,aux16978_BOOL],aux16979_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux16980_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16981_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux16982,s_00017],0);
constraint int_lt_reif(s_00015,aux16982,aux16983_BOOL);
constraint int_le_reif(s_00017, s_00015,aux16984_BOOL);
constraint array_bool_and([w_00007_00017_BOOL,aux16980_BOOL,aux16981_BOOL,aux16983_BOOL,aux16984_BOOL],aux16985_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux16986_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux16987_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16988,s_00018],0);
constraint int_lt_reif(s_00015,aux16988,aux16989_BOOL);
constraint int_le_reif(s_00018, s_00015,aux16990_BOOL);
constraint array_bool_and([w_00007_00018_BOOL,aux16986_BOOL,aux16987_BOOL,aux16989_BOOL,aux16990_BOOL],aux16991_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux16992_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux16993_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux16994,s_00019],0);
constraint int_lt_reif(s_00015,aux16994,aux16995_BOOL);
constraint int_le_reif(s_00019, s_00015,aux16996_BOOL);
constraint array_bool_and([w_00007_00019_BOOL,aux16992_BOOL,aux16993_BOOL,aux16995_BOOL,aux16996_BOOL],aux16997_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux16998_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16999_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17000,s_00020],0);
constraint int_lt_reif(s_00015,aux17000,aux17001_BOOL);
constraint int_le_reif(s_00020, s_00015,aux17002_BOOL);
constraint array_bool_and([w_00007_00020_BOOL,aux16998_BOOL,aux16999_BOOL,aux17001_BOOL,aux17002_BOOL],aux17003_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux17004_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17005,s_00015],0);
constraint int_lt_reif(s_00015,aux17005,aux17006_BOOL);
constraint array_bool_and([w_00007_00015_BOOL,aux17004_BOOL,aux17006_BOOL],aux17007_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux16895_INTEGER,aux16901_INTEGER,aux16907_INTEGER,aux16913_INTEGER,aux16919_INTEGER,aux16925_INTEGER,aux16931_INTEGER,aux16937_INTEGER,aux16943_INTEGER,aux16949_INTEGER,aux16955_INTEGER,aux16961_INTEGER,aux16967_INTEGER,aux16973_INTEGER,aux16979_INTEGER,aux16985_INTEGER,aux16991_INTEGER,aux16997_INTEGER,aux17003_INTEGER,aux17007_INTEGER,1],0,aux17008_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux17009_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux17010_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux17011,s_00001],0);
constraint int_lt_reif(s_00016,aux17011,aux17012_BOOL);
constraint int_le_reif(s_00001, s_00016,aux17013_BOOL);
constraint array_bool_and([w_00007_00001_BOOL,aux17009_BOOL,aux17010_BOOL,aux17012_BOOL,aux17013_BOOL],aux17014_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux17015_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux17016_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux17017,s_00002],0);
constraint int_lt_reif(s_00016,aux17017,aux17018_BOOL);
constraint int_le_reif(s_00002, s_00016,aux17019_BOOL);
constraint array_bool_and([w_00007_00002_BOOL,aux17015_BOOL,aux17016_BOOL,aux17018_BOOL,aux17019_BOOL],aux17020_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux17021_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux17022_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17023,s_00003],0);
constraint int_lt_reif(s_00016,aux17023,aux17024_BOOL);
constraint int_le_reif(s_00003, s_00016,aux17025_BOOL);
constraint array_bool_and([w_00007_00003_BOOL,aux17021_BOOL,aux17022_BOOL,aux17024_BOOL,aux17025_BOOL],aux17026_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux17027_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux17028_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17029,s_00004],0);
constraint int_lt_reif(s_00016,aux17029,aux17030_BOOL);
constraint int_le_reif(s_00004, s_00016,aux17031_BOOL);
constraint array_bool_and([w_00007_00004_BOOL,aux17027_BOOL,aux17028_BOOL,aux17030_BOOL,aux17031_BOOL],aux17032_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux17033_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux17034_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17035,s_00005],0);
constraint int_lt_reif(s_00016,aux17035,aux17036_BOOL);
constraint int_le_reif(s_00005, s_00016,aux17037_BOOL);
constraint array_bool_and([w_00007_00005_BOOL,aux17033_BOOL,aux17034_BOOL,aux17036_BOOL,aux17037_BOOL],aux17038_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux17039_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux17040_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17041,s_00006],0);
constraint int_lt_reif(s_00016,aux17041,aux17042_BOOL);
constraint int_le_reif(s_00006, s_00016,aux17043_BOOL);
constraint array_bool_and([w_00007_00006_BOOL,aux17039_BOOL,aux17040_BOOL,aux17042_BOOL,aux17043_BOOL],aux17044_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux17045_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux17046_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17047,s_00007],0);
constraint int_lt_reif(s_00016,aux17047,aux17048_BOOL);
constraint int_le_reif(s_00007, s_00016,aux17049_BOOL);
constraint array_bool_and([w_00007_00007_BOOL,aux17045_BOOL,aux17046_BOOL,aux17048_BOOL,aux17049_BOOL],aux17050_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux17051_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux17052_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17053,s_00008],0);
constraint int_lt_reif(s_00016,aux17053,aux17054_BOOL);
constraint int_le_reif(s_00008, s_00016,aux17055_BOOL);
constraint array_bool_and([w_00007_00008_BOOL,aux17051_BOOL,aux17052_BOOL,aux17054_BOOL,aux17055_BOOL],aux17056_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux17057_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux17058_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17059,s_00009],0);
constraint int_lt_reif(s_00016,aux17059,aux17060_BOOL);
constraint int_le_reif(s_00009, s_00016,aux17061_BOOL);
constraint array_bool_and([w_00007_00009_BOOL,aux17057_BOOL,aux17058_BOOL,aux17060_BOOL,aux17061_BOOL],aux17062_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux17063_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux17064_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux17065,s_00010],0);
constraint int_lt_reif(s_00016,aux17065,aux17066_BOOL);
constraint int_le_reif(s_00010, s_00016,aux17067_BOOL);
constraint array_bool_and([w_00007_00010_BOOL,aux17063_BOOL,aux17064_BOOL,aux17066_BOOL,aux17067_BOOL],aux17068_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux17069_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux17070_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17071,s_00011],0);
constraint int_lt_reif(s_00016,aux17071,aux17072_BOOL);
constraint int_le_reif(s_00011, s_00016,aux17073_BOOL);
constraint array_bool_and([w_00007_00011_BOOL,aux17069_BOOL,aux17070_BOOL,aux17072_BOOL,aux17073_BOOL],aux17074_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux17075_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux17076_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux17077,s_00012],0);
constraint int_lt_reif(s_00016,aux17077,aux17078_BOOL);
constraint int_le_reif(s_00012, s_00016,aux17079_BOOL);
constraint array_bool_and([w_00007_00012_BOOL,aux17075_BOOL,aux17076_BOOL,aux17078_BOOL,aux17079_BOOL],aux17080_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux17081_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux17082_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17083,s_00013],0);
constraint int_lt_reif(s_00016,aux17083,aux17084_BOOL);
constraint int_le_reif(s_00013, s_00016,aux17085_BOOL);
constraint array_bool_and([w_00007_00013_BOOL,aux17081_BOOL,aux17082_BOOL,aux17084_BOOL,aux17085_BOOL],aux17086_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux17087_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux17088_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17089,s_00014],0);
constraint int_lt_reif(s_00016,aux17089,aux17090_BOOL);
constraint int_le_reif(s_00014, s_00016,aux17091_BOOL);
constraint array_bool_and([w_00007_00014_BOOL,aux17087_BOOL,aux17088_BOOL,aux17090_BOOL,aux17091_BOOL],aux17092_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux17093_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux17094_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17095,s_00015],0);
constraint int_lt_reif(s_00016,aux17095,aux17096_BOOL);
constraint int_le_reif(s_00015, s_00016,aux17097_BOOL);
constraint array_bool_and([w_00007_00015_BOOL,aux17093_BOOL,aux17094_BOOL,aux17096_BOOL,aux17097_BOOL],aux17098_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux17099_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux17100_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux17101,s_00017],0);
constraint int_lt_reif(s_00016,aux17101,aux17102_BOOL);
constraint int_le_reif(s_00017, s_00016,aux17103_BOOL);
constraint array_bool_and([w_00007_00017_BOOL,aux17099_BOOL,aux17100_BOOL,aux17102_BOOL,aux17103_BOOL],aux17104_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux17105_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux17106_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17107,s_00018],0);
constraint int_lt_reif(s_00016,aux17107,aux17108_BOOL);
constraint int_le_reif(s_00018, s_00016,aux17109_BOOL);
constraint array_bool_and([w_00007_00018_BOOL,aux17105_BOOL,aux17106_BOOL,aux17108_BOOL,aux17109_BOOL],aux17110_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux17111_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux17112_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux17113,s_00019],0);
constraint int_lt_reif(s_00016,aux17113,aux17114_BOOL);
constraint int_le_reif(s_00019, s_00016,aux17115_BOOL);
constraint array_bool_and([w_00007_00019_BOOL,aux17111_BOOL,aux17112_BOOL,aux17114_BOOL,aux17115_BOOL],aux17116_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux17117_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux17118_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17119,s_00020],0);
constraint int_lt_reif(s_00016,aux17119,aux17120_BOOL);
constraint int_le_reif(s_00020, s_00016,aux17121_BOOL);
constraint array_bool_and([w_00007_00020_BOOL,aux17117_BOOL,aux17118_BOOL,aux17120_BOOL,aux17121_BOOL],aux17122_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux17123_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17124,s_00016],0);
constraint int_lt_reif(s_00016,aux17124,aux17125_BOOL);
constraint array_bool_and([w_00007_00016_BOOL,aux17123_BOOL,aux17125_BOOL],aux17126_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux17014_INTEGER,aux17020_INTEGER,aux17026_INTEGER,aux17032_INTEGER,aux17038_INTEGER,aux17044_INTEGER,aux17050_INTEGER,aux17056_INTEGER,aux17062_INTEGER,aux17068_INTEGER,aux17074_INTEGER,aux17080_INTEGER,aux17086_INTEGER,aux17092_INTEGER,aux17098_INTEGER,aux17104_INTEGER,aux17110_INTEGER,aux17116_INTEGER,aux17122_INTEGER,aux17126_INTEGER,1],0,aux17127_BOOL);
constraint array_bool_and([aux14866_BOOL,aux14985_BOOL,aux15104_BOOL,aux15223_BOOL,aux15342_BOOL,aux15461_BOOL,aux15580_BOOL,aux15699_BOOL,aux15818_BOOL,aux15937_BOOL,aux16056_BOOL,aux16175_BOOL,aux16294_BOOL,aux16413_BOOL,aux16532_BOOL,aux16651_BOOL,aux16770_BOOL,aux16889_BOOL,aux17008_BOOL,aux17127_BOOL],aux17128_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[TWorkers_00007_00001_INTEGER,TWorkers_00007_00002_INTEGER,TWorkers_00007_00003_INTEGER,TWorkers_00007_00004_INTEGER,TWorkers_00007_00005_INTEGER,TWorkers_00007_00006_INTEGER,TWorkers_00007_00007_INTEGER,TWorkers_00007_00008_INTEGER,TWorkers_00007_00009_INTEGER,TWorkers_00007_00010_INTEGER,TWorkers_00007_00011_INTEGER,TWorkers_00007_00012_INTEGER,TWorkers_00007_00013_INTEGER,TWorkers_00007_00014_INTEGER,TWorkers_00007_00015_INTEGER,TWorkers_00007_00016_INTEGER,TWorkers_00007_00017_INTEGER,TWorkers_00007_00018_INTEGER,TWorkers_00007_00019_INTEGER,TWorkers_00007_00020_INTEGER,1],0,aux17129_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[TWorkers_00008_00001_INTEGER,TWorkers_00008_00002_INTEGER,TWorkers_00008_00003_INTEGER,TWorkers_00008_00004_INTEGER,TWorkers_00008_00005_INTEGER,TWorkers_00008_00006_INTEGER,TWorkers_00008_00007_INTEGER,TWorkers_00008_00008_INTEGER,TWorkers_00008_00009_INTEGER,TWorkers_00008_00010_INTEGER,TWorkers_00008_00011_INTEGER,TWorkers_00008_00012_INTEGER,TWorkers_00008_00013_INTEGER,TWorkers_00008_00014_INTEGER,TWorkers_00008_00015_INTEGER,TWorkers_00008_00016_INTEGER,TWorkers_00008_00017_INTEGER,TWorkers_00008_00018_INTEGER,TWorkers_00008_00019_INTEGER,TWorkers_00008_00020_INTEGER,1],0,aux17130_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17131,s_00020],0);
constraint int_lt_reif(s_00020,aux17131,aux17132_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux17133_BOOL);
constraint array_bool_and([w_00008_00020_BOOL,aux17132_BOOL,aux17133_BOOL],aux17134_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux17135,s_00001],0);
constraint int_lt_reif(s_00020,aux17135,aux17136_BOOL);
constraint int_le_reif(s_00001, s_00020,aux17137_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux17138_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux17139_BOOL);
constraint array_bool_and([w_00008_00001_BOOL,aux17136_BOOL,aux17137_BOOL,aux17138_BOOL,aux17139_BOOL],aux17140_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux17141,s_00002],0);
constraint int_lt_reif(s_00020,aux17141,aux17142_BOOL);
constraint int_le_reif(s_00002, s_00020,aux17143_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux17144_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux17145_BOOL);
constraint array_bool_and([w_00008_00002_BOOL,aux17142_BOOL,aux17143_BOOL,aux17144_BOOL,aux17145_BOOL],aux17146_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17147,s_00003],0);
constraint int_lt_reif(s_00020,aux17147,aux17148_BOOL);
constraint int_le_reif(s_00003, s_00020,aux17149_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux17150_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux17151_BOOL);
constraint array_bool_and([w_00008_00003_BOOL,aux17148_BOOL,aux17149_BOOL,aux17150_BOOL,aux17151_BOOL],aux17152_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17153,s_00004],0);
constraint int_lt_reif(s_00020,aux17153,aux17154_BOOL);
constraint int_le_reif(s_00004, s_00020,aux17155_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux17156_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux17157_BOOL);
constraint array_bool_and([w_00008_00004_BOOL,aux17154_BOOL,aux17155_BOOL,aux17156_BOOL,aux17157_BOOL],aux17158_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17159,s_00005],0);
constraint int_lt_reif(s_00020,aux17159,aux17160_BOOL);
constraint int_le_reif(s_00005, s_00020,aux17161_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux17162_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux17163_BOOL);
constraint array_bool_and([w_00008_00005_BOOL,aux17160_BOOL,aux17161_BOOL,aux17162_BOOL,aux17163_BOOL],aux17164_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17165,s_00006],0);
constraint int_lt_reif(s_00020,aux17165,aux17166_BOOL);
constraint int_le_reif(s_00006, s_00020,aux17167_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux17168_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux17169_BOOL);
constraint array_bool_and([w_00008_00006_BOOL,aux17166_BOOL,aux17167_BOOL,aux17168_BOOL,aux17169_BOOL],aux17170_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17171,s_00007],0);
constraint int_lt_reif(s_00020,aux17171,aux17172_BOOL);
constraint int_le_reif(s_00007, s_00020,aux17173_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux17174_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux17175_BOOL);
constraint array_bool_and([w_00008_00007_BOOL,aux17172_BOOL,aux17173_BOOL,aux17174_BOOL,aux17175_BOOL],aux17176_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17177,s_00008],0);
constraint int_lt_reif(s_00020,aux17177,aux17178_BOOL);
constraint int_le_reif(s_00008, s_00020,aux17179_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux17180_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux17181_BOOL);
constraint array_bool_and([w_00008_00008_BOOL,aux17178_BOOL,aux17179_BOOL,aux17180_BOOL,aux17181_BOOL],aux17182_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17183,s_00009],0);
constraint int_lt_reif(s_00020,aux17183,aux17184_BOOL);
constraint int_le_reif(s_00009, s_00020,aux17185_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux17186_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux17187_BOOL);
constraint array_bool_and([w_00008_00009_BOOL,aux17184_BOOL,aux17185_BOOL,aux17186_BOOL,aux17187_BOOL],aux17188_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17189,s_00011],0);
constraint int_lt_reif(s_00020,aux17189,aux17190_BOOL);
constraint int_le_reif(s_00011, s_00020,aux17191_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux17192_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux17193_BOOL);
constraint array_bool_and([w_00008_00011_BOOL,aux17190_BOOL,aux17191_BOOL,aux17192_BOOL,aux17193_BOOL],aux17194_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux17195,s_00010],0);
constraint int_lt_reif(s_00020,aux17195,aux17196_BOOL);
constraint int_le_reif(s_00010, s_00020,aux17197_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux17198_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux17199_BOOL);
constraint array_bool_and([w_00008_00010_BOOL,aux17196_BOOL,aux17197_BOOL,aux17198_BOOL,aux17199_BOOL],aux17200_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux17201,s_00012],0);
constraint int_lt_reif(s_00020,aux17201,aux17202_BOOL);
constraint int_le_reif(s_00012, s_00020,aux17203_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux17204_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux17205_BOOL);
constraint array_bool_and([w_00008_00012_BOOL,aux17202_BOOL,aux17203_BOOL,aux17204_BOOL,aux17205_BOOL],aux17206_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17207,s_00013],0);
constraint int_lt_reif(s_00020,aux17207,aux17208_BOOL);
constraint int_le_reif(s_00013, s_00020,aux17209_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux17210_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux17211_BOOL);
constraint array_bool_and([w_00008_00013_BOOL,aux17208_BOOL,aux17209_BOOL,aux17210_BOOL,aux17211_BOOL],aux17212_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17213,s_00014],0);
constraint int_lt_reif(s_00020,aux17213,aux17214_BOOL);
constraint int_le_reif(s_00014, s_00020,aux17215_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux17216_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux17217_BOOL);
constraint array_bool_and([w_00008_00014_BOOL,aux17214_BOOL,aux17215_BOOL,aux17216_BOOL,aux17217_BOOL],aux17218_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17219,s_00015],0);
constraint int_lt_reif(s_00020,aux17219,aux17220_BOOL);
constraint int_le_reif(s_00015, s_00020,aux17221_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux17222_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux17223_BOOL);
constraint array_bool_and([w_00008_00015_BOOL,aux17220_BOOL,aux17221_BOOL,aux17222_BOOL,aux17223_BOOL],aux17224_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17225,s_00016],0);
constraint int_lt_reif(s_00020,aux17225,aux17226_BOOL);
constraint int_le_reif(s_00016, s_00020,aux17227_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux17228_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux17229_BOOL);
constraint array_bool_and([w_00008_00016_BOOL,aux17226_BOOL,aux17227_BOOL,aux17228_BOOL,aux17229_BOOL],aux17230_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17231,s_00018],0);
constraint int_lt_reif(s_00020,aux17231,aux17232_BOOL);
constraint int_le_reif(s_00018, s_00020,aux17233_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux17234_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux17235_BOOL);
constraint array_bool_and([w_00008_00018_BOOL,aux17232_BOOL,aux17233_BOOL,aux17234_BOOL,aux17235_BOOL],aux17236_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux17237,s_00017],0);
constraint int_lt_reif(s_00020,aux17237,aux17238_BOOL);
constraint int_le_reif(s_00017, s_00020,aux17239_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux17240_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux17241_BOOL);
constraint array_bool_and([w_00008_00017_BOOL,aux17238_BOOL,aux17239_BOOL,aux17240_BOOL,aux17241_BOOL],aux17242_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux17243,s_00019],0);
constraint int_lt_reif(s_00020,aux17243,aux17244_BOOL);
constraint int_le_reif(s_00019, s_00020,aux17245_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux17246_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux17247_BOOL);
constraint array_bool_and([w_00008_00019_BOOL,aux17244_BOOL,aux17245_BOOL,aux17246_BOOL,aux17247_BOOL],aux17248_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux17134_INTEGER,aux17140_INTEGER,aux17146_INTEGER,aux17152_INTEGER,aux17158_INTEGER,aux17164_INTEGER,aux17170_INTEGER,aux17176_INTEGER,aux17182_INTEGER,aux17188_INTEGER,aux17194_INTEGER,aux17200_INTEGER,aux17206_INTEGER,aux17212_INTEGER,aux17218_INTEGER,aux17224_INTEGER,aux17230_INTEGER,aux17236_INTEGER,aux17242_INTEGER,aux17248_INTEGER,1],0,aux17249_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux17250,s_00012],0);
constraint int_lt_reif(s_00012,aux17250,aux17251_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux17252_BOOL);
constraint array_bool_and([w_00008_00012_BOOL,aux17251_BOOL,aux17252_BOOL],aux17253_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux17254,s_00001],0);
constraint int_lt_reif(s_00012,aux17254,aux17255_BOOL);
constraint int_le_reif(s_00001, s_00012,aux17256_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux17257_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux17258_BOOL);
constraint array_bool_and([w_00008_00001_BOOL,aux17255_BOOL,aux17256_BOOL,aux17257_BOOL,aux17258_BOOL],aux17259_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux17260,s_00002],0);
constraint int_lt_reif(s_00012,aux17260,aux17261_BOOL);
constraint int_le_reif(s_00002, s_00012,aux17262_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux17263_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux17264_BOOL);
constraint array_bool_and([w_00008_00002_BOOL,aux17261_BOOL,aux17262_BOOL,aux17263_BOOL,aux17264_BOOL],aux17265_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17266,s_00003],0);
constraint int_lt_reif(s_00012,aux17266,aux17267_BOOL);
constraint int_le_reif(s_00003, s_00012,aux17268_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux17269_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux17270_BOOL);
constraint array_bool_and([w_00008_00003_BOOL,aux17267_BOOL,aux17268_BOOL,aux17269_BOOL,aux17270_BOOL],aux17271_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17272,s_00004],0);
constraint int_lt_reif(s_00012,aux17272,aux17273_BOOL);
constraint int_le_reif(s_00004, s_00012,aux17274_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux17275_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux17276_BOOL);
constraint array_bool_and([w_00008_00004_BOOL,aux17273_BOOL,aux17274_BOOL,aux17275_BOOL,aux17276_BOOL],aux17277_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17278,s_00005],0);
constraint int_lt_reif(s_00012,aux17278,aux17279_BOOL);
constraint int_le_reif(s_00005, s_00012,aux17280_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux17281_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux17282_BOOL);
constraint array_bool_and([w_00008_00005_BOOL,aux17279_BOOL,aux17280_BOOL,aux17281_BOOL,aux17282_BOOL],aux17283_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17284,s_00006],0);
constraint int_lt_reif(s_00012,aux17284,aux17285_BOOL);
constraint int_le_reif(s_00006, s_00012,aux17286_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux17287_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux17288_BOOL);
constraint array_bool_and([w_00008_00006_BOOL,aux17285_BOOL,aux17286_BOOL,aux17287_BOOL,aux17288_BOOL],aux17289_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17290,s_00007],0);
constraint int_lt_reif(s_00012,aux17290,aux17291_BOOL);
constraint int_le_reif(s_00007, s_00012,aux17292_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux17293_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux17294_BOOL);
constraint array_bool_and([w_00008_00007_BOOL,aux17291_BOOL,aux17292_BOOL,aux17293_BOOL,aux17294_BOOL],aux17295_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17296,s_00008],0);
constraint int_lt_reif(s_00012,aux17296,aux17297_BOOL);
constraint int_le_reif(s_00008, s_00012,aux17298_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux17299_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux17300_BOOL);
constraint array_bool_and([w_00008_00008_BOOL,aux17297_BOOL,aux17298_BOOL,aux17299_BOOL,aux17300_BOOL],aux17301_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17302,s_00009],0);
constraint int_lt_reif(s_00012,aux17302,aux17303_BOOL);
constraint int_le_reif(s_00009, s_00012,aux17304_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux17305_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux17306_BOOL);
constraint array_bool_and([w_00008_00009_BOOL,aux17303_BOOL,aux17304_BOOL,aux17305_BOOL,aux17306_BOOL],aux17307_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17308,s_00011],0);
constraint int_lt_reif(s_00012,aux17308,aux17309_BOOL);
constraint int_le_reif(s_00011, s_00012,aux17310_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux17311_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux17312_BOOL);
constraint array_bool_and([w_00008_00011_BOOL,aux17309_BOOL,aux17310_BOOL,aux17311_BOOL,aux17312_BOOL],aux17313_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux17314,s_00010],0);
constraint int_lt_reif(s_00012,aux17314,aux17315_BOOL);
constraint int_le_reif(s_00010, s_00012,aux17316_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux17317_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux17318_BOOL);
constraint array_bool_and([w_00008_00010_BOOL,aux17315_BOOL,aux17316_BOOL,aux17317_BOOL,aux17318_BOOL],aux17319_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17320,s_00013],0);
constraint int_lt_reif(s_00012,aux17320,aux17321_BOOL);
constraint int_le_reif(s_00013, s_00012,aux17322_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux17323_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux17324_BOOL);
constraint array_bool_and([w_00008_00013_BOOL,aux17321_BOOL,aux17322_BOOL,aux17323_BOOL,aux17324_BOOL],aux17325_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17326,s_00014],0);
constraint int_lt_reif(s_00012,aux17326,aux17327_BOOL);
constraint int_le_reif(s_00014, s_00012,aux17328_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux17329_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux17330_BOOL);
constraint array_bool_and([w_00008_00014_BOOL,aux17327_BOOL,aux17328_BOOL,aux17329_BOOL,aux17330_BOOL],aux17331_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17332,s_00015],0);
constraint int_lt_reif(s_00012,aux17332,aux17333_BOOL);
constraint int_le_reif(s_00015, s_00012,aux17334_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux17335_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux17336_BOOL);
constraint array_bool_and([w_00008_00015_BOOL,aux17333_BOOL,aux17334_BOOL,aux17335_BOOL,aux17336_BOOL],aux17337_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17338,s_00016],0);
constraint int_lt_reif(s_00012,aux17338,aux17339_BOOL);
constraint int_le_reif(s_00016, s_00012,aux17340_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux17341_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux17342_BOOL);
constraint array_bool_and([w_00008_00016_BOOL,aux17339_BOOL,aux17340_BOOL,aux17341_BOOL,aux17342_BOOL],aux17343_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17344,s_00018],0);
constraint int_lt_reif(s_00012,aux17344,aux17345_BOOL);
constraint int_le_reif(s_00018, s_00012,aux17346_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux17347_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux17348_BOOL);
constraint array_bool_and([w_00008_00018_BOOL,aux17345_BOOL,aux17346_BOOL,aux17347_BOOL,aux17348_BOOL],aux17349_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux17350,s_00017],0);
constraint int_lt_reif(s_00012,aux17350,aux17351_BOOL);
constraint int_le_reif(s_00017, s_00012,aux17352_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux17353_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux17354_BOOL);
constraint array_bool_and([w_00008_00017_BOOL,aux17351_BOOL,aux17352_BOOL,aux17353_BOOL,aux17354_BOOL],aux17355_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux17356,s_00019],0);
constraint int_lt_reif(s_00012,aux17356,aux17357_BOOL);
constraint int_le_reif(s_00019, s_00012,aux17358_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux17359_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux17360_BOOL);
constraint array_bool_and([w_00008_00019_BOOL,aux17357_BOOL,aux17358_BOOL,aux17359_BOOL,aux17360_BOOL],aux17361_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17362,s_00020],0);
constraint int_lt_reif(s_00012,aux17362,aux17363_BOOL);
constraint int_le_reif(s_00020, s_00012,aux17364_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux17365_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux17366_BOOL);
constraint array_bool_and([w_00008_00020_BOOL,aux17363_BOOL,aux17364_BOOL,aux17365_BOOL,aux17366_BOOL],aux17367_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux17253_INTEGER,aux17259_INTEGER,aux17265_INTEGER,aux17271_INTEGER,aux17277_INTEGER,aux17283_INTEGER,aux17289_INTEGER,aux17295_INTEGER,aux17301_INTEGER,aux17307_INTEGER,aux17313_INTEGER,aux17319_INTEGER,aux17325_INTEGER,aux17331_INTEGER,aux17337_INTEGER,aux17343_INTEGER,aux17349_INTEGER,aux17355_INTEGER,aux17361_INTEGER,aux17367_INTEGER,1],0,aux17368_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17369,s_00014],0);
constraint int_lt_reif(s_00014,aux17369,aux17370_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux17371_BOOL);
constraint array_bool_and([w_00008_00014_BOOL,aux17370_BOOL,aux17371_BOOL],aux17372_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux17373,s_00001],0);
constraint int_lt_reif(s_00014,aux17373,aux17374_BOOL);
constraint int_le_reif(s_00001, s_00014,aux17375_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux17376_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux17377_BOOL);
constraint array_bool_and([w_00008_00001_BOOL,aux17374_BOOL,aux17375_BOOL,aux17376_BOOL,aux17377_BOOL],aux17378_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux17379,s_00002],0);
constraint int_lt_reif(s_00014,aux17379,aux17380_BOOL);
constraint int_le_reif(s_00002, s_00014,aux17381_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux17382_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux17383_BOOL);
constraint array_bool_and([w_00008_00002_BOOL,aux17380_BOOL,aux17381_BOOL,aux17382_BOOL,aux17383_BOOL],aux17384_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17385,s_00003],0);
constraint int_lt_reif(s_00014,aux17385,aux17386_BOOL);
constraint int_le_reif(s_00003, s_00014,aux17387_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux17388_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux17389_BOOL);
constraint array_bool_and([w_00008_00003_BOOL,aux17386_BOOL,aux17387_BOOL,aux17388_BOOL,aux17389_BOOL],aux17390_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17391,s_00004],0);
constraint int_lt_reif(s_00014,aux17391,aux17392_BOOL);
constraint int_le_reif(s_00004, s_00014,aux17393_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux17394_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux17395_BOOL);
constraint array_bool_and([w_00008_00004_BOOL,aux17392_BOOL,aux17393_BOOL,aux17394_BOOL,aux17395_BOOL],aux17396_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17397,s_00005],0);
constraint int_lt_reif(s_00014,aux17397,aux17398_BOOL);
constraint int_le_reif(s_00005, s_00014,aux17399_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux17400_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux17401_BOOL);
constraint array_bool_and([w_00008_00005_BOOL,aux17398_BOOL,aux17399_BOOL,aux17400_BOOL,aux17401_BOOL],aux17402_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17403,s_00006],0);
constraint int_lt_reif(s_00014,aux17403,aux17404_BOOL);
constraint int_le_reif(s_00006, s_00014,aux17405_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux17406_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux17407_BOOL);
constraint array_bool_and([w_00008_00006_BOOL,aux17404_BOOL,aux17405_BOOL,aux17406_BOOL,aux17407_BOOL],aux17408_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17409,s_00007],0);
constraint int_lt_reif(s_00014,aux17409,aux17410_BOOL);
constraint int_le_reif(s_00007, s_00014,aux17411_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux17412_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux17413_BOOL);
constraint array_bool_and([w_00008_00007_BOOL,aux17410_BOOL,aux17411_BOOL,aux17412_BOOL,aux17413_BOOL],aux17414_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17415,s_00008],0);
constraint int_lt_reif(s_00014,aux17415,aux17416_BOOL);
constraint int_le_reif(s_00008, s_00014,aux17417_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux17418_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux17419_BOOL);
constraint array_bool_and([w_00008_00008_BOOL,aux17416_BOOL,aux17417_BOOL,aux17418_BOOL,aux17419_BOOL],aux17420_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17421,s_00009],0);
constraint int_lt_reif(s_00014,aux17421,aux17422_BOOL);
constraint int_le_reif(s_00009, s_00014,aux17423_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux17424_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux17425_BOOL);
constraint array_bool_and([w_00008_00009_BOOL,aux17422_BOOL,aux17423_BOOL,aux17424_BOOL,aux17425_BOOL],aux17426_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17427,s_00011],0);
constraint int_lt_reif(s_00014,aux17427,aux17428_BOOL);
constraint int_le_reif(s_00011, s_00014,aux17429_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux17430_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux17431_BOOL);
constraint array_bool_and([w_00008_00011_BOOL,aux17428_BOOL,aux17429_BOOL,aux17430_BOOL,aux17431_BOOL],aux17432_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux17433,s_00010],0);
constraint int_lt_reif(s_00014,aux17433,aux17434_BOOL);
constraint int_le_reif(s_00010, s_00014,aux17435_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux17436_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux17437_BOOL);
constraint array_bool_and([w_00008_00010_BOOL,aux17434_BOOL,aux17435_BOOL,aux17436_BOOL,aux17437_BOOL],aux17438_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux17439,s_00012],0);
constraint int_lt_reif(s_00014,aux17439,aux17440_BOOL);
constraint int_le_reif(s_00012, s_00014,aux17441_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux17442_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux17443_BOOL);
constraint array_bool_and([w_00008_00012_BOOL,aux17440_BOOL,aux17441_BOOL,aux17442_BOOL,aux17443_BOOL],aux17444_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17445,s_00013],0);
constraint int_lt_reif(s_00014,aux17445,aux17446_BOOL);
constraint int_le_reif(s_00013, s_00014,aux17447_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux17448_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux17449_BOOL);
constraint array_bool_and([w_00008_00013_BOOL,aux17446_BOOL,aux17447_BOOL,aux17448_BOOL,aux17449_BOOL],aux17450_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17451,s_00015],0);
constraint int_lt_reif(s_00014,aux17451,aux17452_BOOL);
constraint int_le_reif(s_00015, s_00014,aux17453_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux17454_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux17455_BOOL);
constraint array_bool_and([w_00008_00015_BOOL,aux17452_BOOL,aux17453_BOOL,aux17454_BOOL,aux17455_BOOL],aux17456_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17457,s_00016],0);
constraint int_lt_reif(s_00014,aux17457,aux17458_BOOL);
constraint int_le_reif(s_00016, s_00014,aux17459_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux17460_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux17461_BOOL);
constraint array_bool_and([w_00008_00016_BOOL,aux17458_BOOL,aux17459_BOOL,aux17460_BOOL,aux17461_BOOL],aux17462_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17463,s_00018],0);
constraint int_lt_reif(s_00014,aux17463,aux17464_BOOL);
constraint int_le_reif(s_00018, s_00014,aux17465_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux17466_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux17467_BOOL);
constraint array_bool_and([w_00008_00018_BOOL,aux17464_BOOL,aux17465_BOOL,aux17466_BOOL,aux17467_BOOL],aux17468_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux17469,s_00017],0);
constraint int_lt_reif(s_00014,aux17469,aux17470_BOOL);
constraint int_le_reif(s_00017, s_00014,aux17471_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux17472_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux17473_BOOL);
constraint array_bool_and([w_00008_00017_BOOL,aux17470_BOOL,aux17471_BOOL,aux17472_BOOL,aux17473_BOOL],aux17474_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux17475,s_00019],0);
constraint int_lt_reif(s_00014,aux17475,aux17476_BOOL);
constraint int_le_reif(s_00019, s_00014,aux17477_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux17478_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux17479_BOOL);
constraint array_bool_and([w_00008_00019_BOOL,aux17476_BOOL,aux17477_BOOL,aux17478_BOOL,aux17479_BOOL],aux17480_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17481,s_00020],0);
constraint int_lt_reif(s_00014,aux17481,aux17482_BOOL);
constraint int_le_reif(s_00020, s_00014,aux17483_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux17484_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux17485_BOOL);
constraint array_bool_and([w_00008_00020_BOOL,aux17482_BOOL,aux17483_BOOL,aux17484_BOOL,aux17485_BOOL],aux17486_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux17372_INTEGER,aux17378_INTEGER,aux17384_INTEGER,aux17390_INTEGER,aux17396_INTEGER,aux17402_INTEGER,aux17408_INTEGER,aux17414_INTEGER,aux17420_INTEGER,aux17426_INTEGER,aux17432_INTEGER,aux17438_INTEGER,aux17444_INTEGER,aux17450_INTEGER,aux17456_INTEGER,aux17462_INTEGER,aux17468_INTEGER,aux17474_INTEGER,aux17480_INTEGER,aux17486_INTEGER,1],0,aux17487_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17488,s_00011],0);
constraint int_lt_reif(s_00011,aux17488,aux17489_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux17490_BOOL);
constraint array_bool_and([w_00008_00011_BOOL,aux17489_BOOL,aux17490_BOOL],aux17491_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux17492,s_00001],0);
constraint int_lt_reif(s_00011,aux17492,aux17493_BOOL);
constraint int_le_reif(s_00001, s_00011,aux17494_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux17495_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux17496_BOOL);
constraint array_bool_and([w_00008_00001_BOOL,aux17493_BOOL,aux17494_BOOL,aux17495_BOOL,aux17496_BOOL],aux17497_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux17498,s_00002],0);
constraint int_lt_reif(s_00011,aux17498,aux17499_BOOL);
constraint int_le_reif(s_00002, s_00011,aux17500_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux17501_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux17502_BOOL);
constraint array_bool_and([w_00008_00002_BOOL,aux17499_BOOL,aux17500_BOOL,aux17501_BOOL,aux17502_BOOL],aux17503_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17504,s_00003],0);
constraint int_lt_reif(s_00011,aux17504,aux17505_BOOL);
constraint int_le_reif(s_00003, s_00011,aux17506_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux17507_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux17508_BOOL);
constraint array_bool_and([w_00008_00003_BOOL,aux17505_BOOL,aux17506_BOOL,aux17507_BOOL,aux17508_BOOL],aux17509_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17510,s_00004],0);
constraint int_lt_reif(s_00011,aux17510,aux17511_BOOL);
constraint int_le_reif(s_00004, s_00011,aux17512_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux17513_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux17514_BOOL);
constraint array_bool_and([w_00008_00004_BOOL,aux17511_BOOL,aux17512_BOOL,aux17513_BOOL,aux17514_BOOL],aux17515_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17516,s_00005],0);
constraint int_lt_reif(s_00011,aux17516,aux17517_BOOL);
constraint int_le_reif(s_00005, s_00011,aux17518_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux17519_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux17520_BOOL);
constraint array_bool_and([w_00008_00005_BOOL,aux17517_BOOL,aux17518_BOOL,aux17519_BOOL,aux17520_BOOL],aux17521_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17522,s_00006],0);
constraint int_lt_reif(s_00011,aux17522,aux17523_BOOL);
constraint int_le_reif(s_00006, s_00011,aux17524_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux17525_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux17526_BOOL);
constraint array_bool_and([w_00008_00006_BOOL,aux17523_BOOL,aux17524_BOOL,aux17525_BOOL,aux17526_BOOL],aux17527_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17528,s_00007],0);
constraint int_lt_reif(s_00011,aux17528,aux17529_BOOL);
constraint int_le_reif(s_00007, s_00011,aux17530_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux17531_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux17532_BOOL);
constraint array_bool_and([w_00008_00007_BOOL,aux17529_BOOL,aux17530_BOOL,aux17531_BOOL,aux17532_BOOL],aux17533_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17534,s_00008],0);
constraint int_lt_reif(s_00011,aux17534,aux17535_BOOL);
constraint int_le_reif(s_00008, s_00011,aux17536_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux17537_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux17538_BOOL);
constraint array_bool_and([w_00008_00008_BOOL,aux17535_BOOL,aux17536_BOOL,aux17537_BOOL,aux17538_BOOL],aux17539_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17540,s_00009],0);
constraint int_lt_reif(s_00011,aux17540,aux17541_BOOL);
constraint int_le_reif(s_00009, s_00011,aux17542_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux17543_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux17544_BOOL);
constraint array_bool_and([w_00008_00009_BOOL,aux17541_BOOL,aux17542_BOOL,aux17543_BOOL,aux17544_BOOL],aux17545_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux17546,s_00010],0);
constraint int_lt_reif(s_00011,aux17546,aux17547_BOOL);
constraint int_le_reif(s_00010, s_00011,aux17548_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux17549_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux17550_BOOL);
constraint array_bool_and([w_00008_00010_BOOL,aux17547_BOOL,aux17548_BOOL,aux17549_BOOL,aux17550_BOOL],aux17551_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux17552,s_00012],0);
constraint int_lt_reif(s_00011,aux17552,aux17553_BOOL);
constraint int_le_reif(s_00012, s_00011,aux17554_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux17555_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux17556_BOOL);
constraint array_bool_and([w_00008_00012_BOOL,aux17553_BOOL,aux17554_BOOL,aux17555_BOOL,aux17556_BOOL],aux17557_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17558,s_00013],0);
constraint int_lt_reif(s_00011,aux17558,aux17559_BOOL);
constraint int_le_reif(s_00013, s_00011,aux17560_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux17561_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux17562_BOOL);
constraint array_bool_and([w_00008_00013_BOOL,aux17559_BOOL,aux17560_BOOL,aux17561_BOOL,aux17562_BOOL],aux17563_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17564,s_00014],0);
constraint int_lt_reif(s_00011,aux17564,aux17565_BOOL);
constraint int_le_reif(s_00014, s_00011,aux17566_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux17567_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux17568_BOOL);
constraint array_bool_and([w_00008_00014_BOOL,aux17565_BOOL,aux17566_BOOL,aux17567_BOOL,aux17568_BOOL],aux17569_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17570,s_00015],0);
constraint int_lt_reif(s_00011,aux17570,aux17571_BOOL);
constraint int_le_reif(s_00015, s_00011,aux17572_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux17573_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux17574_BOOL);
constraint array_bool_and([w_00008_00015_BOOL,aux17571_BOOL,aux17572_BOOL,aux17573_BOOL,aux17574_BOOL],aux17575_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17576,s_00016],0);
constraint int_lt_reif(s_00011,aux17576,aux17577_BOOL);
constraint int_le_reif(s_00016, s_00011,aux17578_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux17579_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux17580_BOOL);
constraint array_bool_and([w_00008_00016_BOOL,aux17577_BOOL,aux17578_BOOL,aux17579_BOOL,aux17580_BOOL],aux17581_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17582,s_00018],0);
constraint int_lt_reif(s_00011,aux17582,aux17583_BOOL);
constraint int_le_reif(s_00018, s_00011,aux17584_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux17585_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux17586_BOOL);
constraint array_bool_and([w_00008_00018_BOOL,aux17583_BOOL,aux17584_BOOL,aux17585_BOOL,aux17586_BOOL],aux17587_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux17588,s_00017],0);
constraint int_lt_reif(s_00011,aux17588,aux17589_BOOL);
constraint int_le_reif(s_00017, s_00011,aux17590_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux17591_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux17592_BOOL);
constraint array_bool_and([w_00008_00017_BOOL,aux17589_BOOL,aux17590_BOOL,aux17591_BOOL,aux17592_BOOL],aux17593_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux17594,s_00019],0);
constraint int_lt_reif(s_00011,aux17594,aux17595_BOOL);
constraint int_le_reif(s_00019, s_00011,aux17596_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux17597_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux17598_BOOL);
constraint array_bool_and([w_00008_00019_BOOL,aux17595_BOOL,aux17596_BOOL,aux17597_BOOL,aux17598_BOOL],aux17599_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17600,s_00020],0);
constraint int_lt_reif(s_00011,aux17600,aux17601_BOOL);
constraint int_le_reif(s_00020, s_00011,aux17602_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux17603_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux17604_BOOL);
constraint array_bool_and([w_00008_00020_BOOL,aux17601_BOOL,aux17602_BOOL,aux17603_BOOL,aux17604_BOOL],aux17605_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux17491_INTEGER,aux17497_INTEGER,aux17503_INTEGER,aux17509_INTEGER,aux17515_INTEGER,aux17521_INTEGER,aux17527_INTEGER,aux17533_INTEGER,aux17539_INTEGER,aux17545_INTEGER,aux17551_INTEGER,aux17557_INTEGER,aux17563_INTEGER,aux17569_INTEGER,aux17575_INTEGER,aux17581_INTEGER,aux17587_INTEGER,aux17593_INTEGER,aux17599_INTEGER,aux17605_INTEGER,1],0,aux17606_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17607,s_00009],0);
constraint int_lt_reif(s_00009,aux17607,aux17608_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux17609_BOOL);
constraint array_bool_and([w_00008_00009_BOOL,aux17608_BOOL,aux17609_BOOL],aux17610_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux17611,s_00001],0);
constraint int_lt_reif(s_00009,aux17611,aux17612_BOOL);
constraint int_le_reif(s_00001, s_00009,aux17613_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux17614_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux17615_BOOL);
constraint array_bool_and([w_00008_00001_BOOL,aux17612_BOOL,aux17613_BOOL,aux17614_BOOL,aux17615_BOOL],aux17616_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux17617,s_00002],0);
constraint int_lt_reif(s_00009,aux17617,aux17618_BOOL);
constraint int_le_reif(s_00002, s_00009,aux17619_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux17620_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux17621_BOOL);
constraint array_bool_and([w_00008_00002_BOOL,aux17618_BOOL,aux17619_BOOL,aux17620_BOOL,aux17621_BOOL],aux17622_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17623,s_00003],0);
constraint int_lt_reif(s_00009,aux17623,aux17624_BOOL);
constraint int_le_reif(s_00003, s_00009,aux17625_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux17626_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux17627_BOOL);
constraint array_bool_and([w_00008_00003_BOOL,aux17624_BOOL,aux17625_BOOL,aux17626_BOOL,aux17627_BOOL],aux17628_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17629,s_00004],0);
constraint int_lt_reif(s_00009,aux17629,aux17630_BOOL);
constraint int_le_reif(s_00004, s_00009,aux17631_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux17632_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux17633_BOOL);
constraint array_bool_and([w_00008_00004_BOOL,aux17630_BOOL,aux17631_BOOL,aux17632_BOOL,aux17633_BOOL],aux17634_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17635,s_00005],0);
constraint int_lt_reif(s_00009,aux17635,aux17636_BOOL);
constraint int_le_reif(s_00005, s_00009,aux17637_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux17638_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux17639_BOOL);
constraint array_bool_and([w_00008_00005_BOOL,aux17636_BOOL,aux17637_BOOL,aux17638_BOOL,aux17639_BOOL],aux17640_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17641,s_00006],0);
constraint int_lt_reif(s_00009,aux17641,aux17642_BOOL);
constraint int_le_reif(s_00006, s_00009,aux17643_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux17644_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux17645_BOOL);
constraint array_bool_and([w_00008_00006_BOOL,aux17642_BOOL,aux17643_BOOL,aux17644_BOOL,aux17645_BOOL],aux17646_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17647,s_00007],0);
constraint int_lt_reif(s_00009,aux17647,aux17648_BOOL);
constraint int_le_reif(s_00007, s_00009,aux17649_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux17650_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux17651_BOOL);
constraint array_bool_and([w_00008_00007_BOOL,aux17648_BOOL,aux17649_BOOL,aux17650_BOOL,aux17651_BOOL],aux17652_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17653,s_00008],0);
constraint int_lt_reif(s_00009,aux17653,aux17654_BOOL);
constraint int_le_reif(s_00008, s_00009,aux17655_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux17656_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux17657_BOOL);
constraint array_bool_and([w_00008_00008_BOOL,aux17654_BOOL,aux17655_BOOL,aux17656_BOOL,aux17657_BOOL],aux17658_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17659,s_00011],0);
constraint int_lt_reif(s_00009,aux17659,aux17660_BOOL);
constraint int_le_reif(s_00011, s_00009,aux17661_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux17662_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux17663_BOOL);
constraint array_bool_and([w_00008_00011_BOOL,aux17660_BOOL,aux17661_BOOL,aux17662_BOOL,aux17663_BOOL],aux17664_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux17665,s_00010],0);
constraint int_lt_reif(s_00009,aux17665,aux17666_BOOL);
constraint int_le_reif(s_00010, s_00009,aux17667_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux17668_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux17669_BOOL);
constraint array_bool_and([w_00008_00010_BOOL,aux17666_BOOL,aux17667_BOOL,aux17668_BOOL,aux17669_BOOL],aux17670_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux17671,s_00012],0);
constraint int_lt_reif(s_00009,aux17671,aux17672_BOOL);
constraint int_le_reif(s_00012, s_00009,aux17673_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux17674_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux17675_BOOL);
constraint array_bool_and([w_00008_00012_BOOL,aux17672_BOOL,aux17673_BOOL,aux17674_BOOL,aux17675_BOOL],aux17676_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17677,s_00013],0);
constraint int_lt_reif(s_00009,aux17677,aux17678_BOOL);
constraint int_le_reif(s_00013, s_00009,aux17679_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux17680_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux17681_BOOL);
constraint array_bool_and([w_00008_00013_BOOL,aux17678_BOOL,aux17679_BOOL,aux17680_BOOL,aux17681_BOOL],aux17682_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17683,s_00014],0);
constraint int_lt_reif(s_00009,aux17683,aux17684_BOOL);
constraint int_le_reif(s_00014, s_00009,aux17685_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux17686_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux17687_BOOL);
constraint array_bool_and([w_00008_00014_BOOL,aux17684_BOOL,aux17685_BOOL,aux17686_BOOL,aux17687_BOOL],aux17688_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17689,s_00015],0);
constraint int_lt_reif(s_00009,aux17689,aux17690_BOOL);
constraint int_le_reif(s_00015, s_00009,aux17691_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux17692_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux17693_BOOL);
constraint array_bool_and([w_00008_00015_BOOL,aux17690_BOOL,aux17691_BOOL,aux17692_BOOL,aux17693_BOOL],aux17694_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17695,s_00016],0);
constraint int_lt_reif(s_00009,aux17695,aux17696_BOOL);
constraint int_le_reif(s_00016, s_00009,aux17697_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux17698_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux17699_BOOL);
constraint array_bool_and([w_00008_00016_BOOL,aux17696_BOOL,aux17697_BOOL,aux17698_BOOL,aux17699_BOOL],aux17700_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17701,s_00018],0);
constraint int_lt_reif(s_00009,aux17701,aux17702_BOOL);
constraint int_le_reif(s_00018, s_00009,aux17703_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux17704_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux17705_BOOL);
constraint array_bool_and([w_00008_00018_BOOL,aux17702_BOOL,aux17703_BOOL,aux17704_BOOL,aux17705_BOOL],aux17706_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux17707,s_00017],0);
constraint int_lt_reif(s_00009,aux17707,aux17708_BOOL);
constraint int_le_reif(s_00017, s_00009,aux17709_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux17710_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux17711_BOOL);
constraint array_bool_and([w_00008_00017_BOOL,aux17708_BOOL,aux17709_BOOL,aux17710_BOOL,aux17711_BOOL],aux17712_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux17713,s_00019],0);
constraint int_lt_reif(s_00009,aux17713,aux17714_BOOL);
constraint int_le_reif(s_00019, s_00009,aux17715_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux17716_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux17717_BOOL);
constraint array_bool_and([w_00008_00019_BOOL,aux17714_BOOL,aux17715_BOOL,aux17716_BOOL,aux17717_BOOL],aux17718_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17719,s_00020],0);
constraint int_lt_reif(s_00009,aux17719,aux17720_BOOL);
constraint int_le_reif(s_00020, s_00009,aux17721_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux17722_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux17723_BOOL);
constraint array_bool_and([w_00008_00020_BOOL,aux17720_BOOL,aux17721_BOOL,aux17722_BOOL,aux17723_BOOL],aux17724_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux17610_INTEGER,aux17616_INTEGER,aux17622_INTEGER,aux17628_INTEGER,aux17634_INTEGER,aux17640_INTEGER,aux17646_INTEGER,aux17652_INTEGER,aux17658_INTEGER,aux17664_INTEGER,aux17670_INTEGER,aux17676_INTEGER,aux17682_INTEGER,aux17688_INTEGER,aux17694_INTEGER,aux17700_INTEGER,aux17706_INTEGER,aux17712_INTEGER,aux17718_INTEGER,aux17724_INTEGER,1],0,aux17725_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux17726,s_00010],0);
constraint int_lt_reif(s_00010,aux17726,aux17727_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux17728_BOOL);
constraint array_bool_and([w_00008_00010_BOOL,aux17727_BOOL,aux17728_BOOL],aux17729_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux17730,s_00001],0);
constraint int_lt_reif(s_00010,aux17730,aux17731_BOOL);
constraint int_le_reif(s_00001, s_00010,aux17732_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux17733_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux17734_BOOL);
constraint array_bool_and([w_00008_00001_BOOL,aux17731_BOOL,aux17732_BOOL,aux17733_BOOL,aux17734_BOOL],aux17735_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux17736,s_00002],0);
constraint int_lt_reif(s_00010,aux17736,aux17737_BOOL);
constraint int_le_reif(s_00002, s_00010,aux17738_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux17739_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux17740_BOOL);
constraint array_bool_and([w_00008_00002_BOOL,aux17737_BOOL,aux17738_BOOL,aux17739_BOOL,aux17740_BOOL],aux17741_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17742,s_00003],0);
constraint int_lt_reif(s_00010,aux17742,aux17743_BOOL);
constraint int_le_reif(s_00003, s_00010,aux17744_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux17745_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux17746_BOOL);
constraint array_bool_and([w_00008_00003_BOOL,aux17743_BOOL,aux17744_BOOL,aux17745_BOOL,aux17746_BOOL],aux17747_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17748,s_00004],0);
constraint int_lt_reif(s_00010,aux17748,aux17749_BOOL);
constraint int_le_reif(s_00004, s_00010,aux17750_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux17751_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux17752_BOOL);
constraint array_bool_and([w_00008_00004_BOOL,aux17749_BOOL,aux17750_BOOL,aux17751_BOOL,aux17752_BOOL],aux17753_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17754,s_00005],0);
constraint int_lt_reif(s_00010,aux17754,aux17755_BOOL);
constraint int_le_reif(s_00005, s_00010,aux17756_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux17757_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux17758_BOOL);
constraint array_bool_and([w_00008_00005_BOOL,aux17755_BOOL,aux17756_BOOL,aux17757_BOOL,aux17758_BOOL],aux17759_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17760,s_00006],0);
constraint int_lt_reif(s_00010,aux17760,aux17761_BOOL);
constraint int_le_reif(s_00006, s_00010,aux17762_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux17763_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux17764_BOOL);
constraint array_bool_and([w_00008_00006_BOOL,aux17761_BOOL,aux17762_BOOL,aux17763_BOOL,aux17764_BOOL],aux17765_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17766,s_00007],0);
constraint int_lt_reif(s_00010,aux17766,aux17767_BOOL);
constraint int_le_reif(s_00007, s_00010,aux17768_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux17769_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux17770_BOOL);
constraint array_bool_and([w_00008_00007_BOOL,aux17767_BOOL,aux17768_BOOL,aux17769_BOOL,aux17770_BOOL],aux17771_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17772,s_00008],0);
constraint int_lt_reif(s_00010,aux17772,aux17773_BOOL);
constraint int_le_reif(s_00008, s_00010,aux17774_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux17775_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux17776_BOOL);
constraint array_bool_and([w_00008_00008_BOOL,aux17773_BOOL,aux17774_BOOL,aux17775_BOOL,aux17776_BOOL],aux17777_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17778,s_00009],0);
constraint int_lt_reif(s_00010,aux17778,aux17779_BOOL);
constraint int_le_reif(s_00009, s_00010,aux17780_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux17781_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux17782_BOOL);
constraint array_bool_and([w_00008_00009_BOOL,aux17779_BOOL,aux17780_BOOL,aux17781_BOOL,aux17782_BOOL],aux17783_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17784,s_00011],0);
constraint int_lt_reif(s_00010,aux17784,aux17785_BOOL);
constraint int_le_reif(s_00011, s_00010,aux17786_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux17787_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux17788_BOOL);
constraint array_bool_and([w_00008_00011_BOOL,aux17785_BOOL,aux17786_BOOL,aux17787_BOOL,aux17788_BOOL],aux17789_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux17790,s_00012],0);
constraint int_lt_reif(s_00010,aux17790,aux17791_BOOL);
constraint int_le_reif(s_00012, s_00010,aux17792_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux17793_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux17794_BOOL);
constraint array_bool_and([w_00008_00012_BOOL,aux17791_BOOL,aux17792_BOOL,aux17793_BOOL,aux17794_BOOL],aux17795_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17796,s_00013],0);
constraint int_lt_reif(s_00010,aux17796,aux17797_BOOL);
constraint int_le_reif(s_00013, s_00010,aux17798_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux17799_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux17800_BOOL);
constraint array_bool_and([w_00008_00013_BOOL,aux17797_BOOL,aux17798_BOOL,aux17799_BOOL,aux17800_BOOL],aux17801_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17802,s_00014],0);
constraint int_lt_reif(s_00010,aux17802,aux17803_BOOL);
constraint int_le_reif(s_00014, s_00010,aux17804_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux17805_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux17806_BOOL);
constraint array_bool_and([w_00008_00014_BOOL,aux17803_BOOL,aux17804_BOOL,aux17805_BOOL,aux17806_BOOL],aux17807_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17808,s_00015],0);
constraint int_lt_reif(s_00010,aux17808,aux17809_BOOL);
constraint int_le_reif(s_00015, s_00010,aux17810_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux17811_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux17812_BOOL);
constraint array_bool_and([w_00008_00015_BOOL,aux17809_BOOL,aux17810_BOOL,aux17811_BOOL,aux17812_BOOL],aux17813_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17814,s_00016],0);
constraint int_lt_reif(s_00010,aux17814,aux17815_BOOL);
constraint int_le_reif(s_00016, s_00010,aux17816_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux17817_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux17818_BOOL);
constraint array_bool_and([w_00008_00016_BOOL,aux17815_BOOL,aux17816_BOOL,aux17817_BOOL,aux17818_BOOL],aux17819_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17820,s_00018],0);
constraint int_lt_reif(s_00010,aux17820,aux17821_BOOL);
constraint int_le_reif(s_00018, s_00010,aux17822_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux17823_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux17824_BOOL);
constraint array_bool_and([w_00008_00018_BOOL,aux17821_BOOL,aux17822_BOOL,aux17823_BOOL,aux17824_BOOL],aux17825_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux17826,s_00017],0);
constraint int_lt_reif(s_00010,aux17826,aux17827_BOOL);
constraint int_le_reif(s_00017, s_00010,aux17828_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux17829_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux17830_BOOL);
constraint array_bool_and([w_00008_00017_BOOL,aux17827_BOOL,aux17828_BOOL,aux17829_BOOL,aux17830_BOOL],aux17831_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux17832,s_00019],0);
constraint int_lt_reif(s_00010,aux17832,aux17833_BOOL);
constraint int_le_reif(s_00019, s_00010,aux17834_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux17835_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux17836_BOOL);
constraint array_bool_and([w_00008_00019_BOOL,aux17833_BOOL,aux17834_BOOL,aux17835_BOOL,aux17836_BOOL],aux17837_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17838,s_00020],0);
constraint int_lt_reif(s_00010,aux17838,aux17839_BOOL);
constraint int_le_reif(s_00020, s_00010,aux17840_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux17841_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux17842_BOOL);
constraint array_bool_and([w_00008_00020_BOOL,aux17839_BOOL,aux17840_BOOL,aux17841_BOOL,aux17842_BOOL],aux17843_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux17729_INTEGER,aux17735_INTEGER,aux17741_INTEGER,aux17747_INTEGER,aux17753_INTEGER,aux17759_INTEGER,aux17765_INTEGER,aux17771_INTEGER,aux17777_INTEGER,aux17783_INTEGER,aux17789_INTEGER,aux17795_INTEGER,aux17801_INTEGER,aux17807_INTEGER,aux17813_INTEGER,aux17819_INTEGER,aux17825_INTEGER,aux17831_INTEGER,aux17837_INTEGER,aux17843_INTEGER,1],0,aux17844_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17845,s_00016],0);
constraint int_lt_reif(s_00016,aux17845,aux17846_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux17847_BOOL);
constraint array_bool_and([w_00008_00016_BOOL,aux17846_BOOL,aux17847_BOOL],aux17848_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux17849,s_00001],0);
constraint int_lt_reif(s_00016,aux17849,aux17850_BOOL);
constraint int_le_reif(s_00001, s_00016,aux17851_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux17852_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux17853_BOOL);
constraint array_bool_and([w_00008_00001_BOOL,aux17850_BOOL,aux17851_BOOL,aux17852_BOOL,aux17853_BOOL],aux17854_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux17855,s_00002],0);
constraint int_lt_reif(s_00016,aux17855,aux17856_BOOL);
constraint int_le_reif(s_00002, s_00016,aux17857_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux17858_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux17859_BOOL);
constraint array_bool_and([w_00008_00002_BOOL,aux17856_BOOL,aux17857_BOOL,aux17858_BOOL,aux17859_BOOL],aux17860_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17861,s_00003],0);
constraint int_lt_reif(s_00016,aux17861,aux17862_BOOL);
constraint int_le_reif(s_00003, s_00016,aux17863_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux17864_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux17865_BOOL);
constraint array_bool_and([w_00008_00003_BOOL,aux17862_BOOL,aux17863_BOOL,aux17864_BOOL,aux17865_BOOL],aux17866_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17867,s_00004],0);
constraint int_lt_reif(s_00016,aux17867,aux17868_BOOL);
constraint int_le_reif(s_00004, s_00016,aux17869_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux17870_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux17871_BOOL);
constraint array_bool_and([w_00008_00004_BOOL,aux17868_BOOL,aux17869_BOOL,aux17870_BOOL,aux17871_BOOL],aux17872_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17873,s_00005],0);
constraint int_lt_reif(s_00016,aux17873,aux17874_BOOL);
constraint int_le_reif(s_00005, s_00016,aux17875_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux17876_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux17877_BOOL);
constraint array_bool_and([w_00008_00005_BOOL,aux17874_BOOL,aux17875_BOOL,aux17876_BOOL,aux17877_BOOL],aux17878_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17879,s_00006],0);
constraint int_lt_reif(s_00016,aux17879,aux17880_BOOL);
constraint int_le_reif(s_00006, s_00016,aux17881_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux17882_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux17883_BOOL);
constraint array_bool_and([w_00008_00006_BOOL,aux17880_BOOL,aux17881_BOOL,aux17882_BOOL,aux17883_BOOL],aux17884_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17885,s_00007],0);
constraint int_lt_reif(s_00016,aux17885,aux17886_BOOL);
constraint int_le_reif(s_00007, s_00016,aux17887_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux17888_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux17889_BOOL);
constraint array_bool_and([w_00008_00007_BOOL,aux17886_BOOL,aux17887_BOOL,aux17888_BOOL,aux17889_BOOL],aux17890_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17891,s_00008],0);
constraint int_lt_reif(s_00016,aux17891,aux17892_BOOL);
constraint int_le_reif(s_00008, s_00016,aux17893_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux17894_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux17895_BOOL);
constraint array_bool_and([w_00008_00008_BOOL,aux17892_BOOL,aux17893_BOOL,aux17894_BOOL,aux17895_BOOL],aux17896_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17897,s_00009],0);
constraint int_lt_reif(s_00016,aux17897,aux17898_BOOL);
constraint int_le_reif(s_00009, s_00016,aux17899_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux17900_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux17901_BOOL);
constraint array_bool_and([w_00008_00009_BOOL,aux17898_BOOL,aux17899_BOOL,aux17900_BOOL,aux17901_BOOL],aux17902_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17903,s_00011],0);
constraint int_lt_reif(s_00016,aux17903,aux17904_BOOL);
constraint int_le_reif(s_00011, s_00016,aux17905_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux17906_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux17907_BOOL);
constraint array_bool_and([w_00008_00011_BOOL,aux17904_BOOL,aux17905_BOOL,aux17906_BOOL,aux17907_BOOL],aux17908_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux17909,s_00010],0);
constraint int_lt_reif(s_00016,aux17909,aux17910_BOOL);
constraint int_le_reif(s_00010, s_00016,aux17911_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux17912_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux17913_BOOL);
constraint array_bool_and([w_00008_00010_BOOL,aux17910_BOOL,aux17911_BOOL,aux17912_BOOL,aux17913_BOOL],aux17914_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux17915,s_00012],0);
constraint int_lt_reif(s_00016,aux17915,aux17916_BOOL);
constraint int_le_reif(s_00012, s_00016,aux17917_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux17918_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux17919_BOOL);
constraint array_bool_and([w_00008_00012_BOOL,aux17916_BOOL,aux17917_BOOL,aux17918_BOOL,aux17919_BOOL],aux17920_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17921,s_00013],0);
constraint int_lt_reif(s_00016,aux17921,aux17922_BOOL);
constraint int_le_reif(s_00013, s_00016,aux17923_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux17924_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux17925_BOOL);
constraint array_bool_and([w_00008_00013_BOOL,aux17922_BOOL,aux17923_BOOL,aux17924_BOOL,aux17925_BOOL],aux17926_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17927,s_00014],0);
constraint int_lt_reif(s_00016,aux17927,aux17928_BOOL);
constraint int_le_reif(s_00014, s_00016,aux17929_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux17930_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux17931_BOOL);
constraint array_bool_and([w_00008_00014_BOOL,aux17928_BOOL,aux17929_BOOL,aux17930_BOOL,aux17931_BOOL],aux17932_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17933,s_00015],0);
constraint int_lt_reif(s_00016,aux17933,aux17934_BOOL);
constraint int_le_reif(s_00015, s_00016,aux17935_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux17936_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux17937_BOOL);
constraint array_bool_and([w_00008_00015_BOOL,aux17934_BOOL,aux17935_BOOL,aux17936_BOOL,aux17937_BOOL],aux17938_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17939,s_00018],0);
constraint int_lt_reif(s_00016,aux17939,aux17940_BOOL);
constraint int_le_reif(s_00018, s_00016,aux17941_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux17942_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux17943_BOOL);
constraint array_bool_and([w_00008_00018_BOOL,aux17940_BOOL,aux17941_BOOL,aux17942_BOOL,aux17943_BOOL],aux17944_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux17945,s_00017],0);
constraint int_lt_reif(s_00016,aux17945,aux17946_BOOL);
constraint int_le_reif(s_00017, s_00016,aux17947_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux17948_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux17949_BOOL);
constraint array_bool_and([w_00008_00017_BOOL,aux17946_BOOL,aux17947_BOOL,aux17948_BOOL,aux17949_BOOL],aux17950_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux17951,s_00019],0);
constraint int_lt_reif(s_00016,aux17951,aux17952_BOOL);
constraint int_le_reif(s_00019, s_00016,aux17953_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux17954_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux17955_BOOL);
constraint array_bool_and([w_00008_00019_BOOL,aux17952_BOOL,aux17953_BOOL,aux17954_BOOL,aux17955_BOOL],aux17956_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17957,s_00020],0);
constraint int_lt_reif(s_00016,aux17957,aux17958_BOOL);
constraint int_le_reif(s_00020, s_00016,aux17959_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux17960_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux17961_BOOL);
constraint array_bool_and([w_00008_00020_BOOL,aux17958_BOOL,aux17959_BOOL,aux17960_BOOL,aux17961_BOOL],aux17962_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux17848_INTEGER,aux17854_INTEGER,aux17860_INTEGER,aux17866_INTEGER,aux17872_INTEGER,aux17878_INTEGER,aux17884_INTEGER,aux17890_INTEGER,aux17896_INTEGER,aux17902_INTEGER,aux17908_INTEGER,aux17914_INTEGER,aux17920_INTEGER,aux17926_INTEGER,aux17932_INTEGER,aux17938_INTEGER,aux17944_INTEGER,aux17950_INTEGER,aux17956_INTEGER,aux17962_INTEGER,1],0,aux17963_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17964,s_00005],0);
constraint int_lt_reif(s_00005,aux17964,aux17965_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux17966_BOOL);
constraint array_bool_and([w_00008_00005_BOOL,aux17965_BOOL,aux17966_BOOL],aux17967_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux17968,s_00001],0);
constraint int_lt_reif(s_00005,aux17968,aux17969_BOOL);
constraint int_le_reif(s_00001, s_00005,aux17970_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux17971_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux17972_BOOL);
constraint array_bool_and([w_00008_00001_BOOL,aux17969_BOOL,aux17970_BOOL,aux17971_BOOL,aux17972_BOOL],aux17973_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux17974,s_00002],0);
constraint int_lt_reif(s_00005,aux17974,aux17975_BOOL);
constraint int_le_reif(s_00002, s_00005,aux17976_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux17977_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux17978_BOOL);
constraint array_bool_and([w_00008_00002_BOOL,aux17975_BOOL,aux17976_BOOL,aux17977_BOOL,aux17978_BOOL],aux17979_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17980,s_00003],0);
constraint int_lt_reif(s_00005,aux17980,aux17981_BOOL);
constraint int_le_reif(s_00003, s_00005,aux17982_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux17983_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux17984_BOOL);
constraint array_bool_and([w_00008_00003_BOOL,aux17981_BOOL,aux17982_BOOL,aux17983_BOOL,aux17984_BOOL],aux17985_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17986,s_00004],0);
constraint int_lt_reif(s_00005,aux17986,aux17987_BOOL);
constraint int_le_reif(s_00004, s_00005,aux17988_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux17989_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux17990_BOOL);
constraint array_bool_and([w_00008_00004_BOOL,aux17987_BOOL,aux17988_BOOL,aux17989_BOOL,aux17990_BOOL],aux17991_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17992,s_00006],0);
constraint int_lt_reif(s_00005,aux17992,aux17993_BOOL);
constraint int_le_reif(s_00006, s_00005,aux17994_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux17995_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux17996_BOOL);
constraint array_bool_and([w_00008_00006_BOOL,aux17993_BOOL,aux17994_BOOL,aux17995_BOOL,aux17996_BOOL],aux17997_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17998,s_00007],0);
constraint int_lt_reif(s_00005,aux17998,aux17999_BOOL);
constraint int_le_reif(s_00007, s_00005,aux18000_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux18001_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux18002_BOOL);
constraint array_bool_and([w_00008_00007_BOOL,aux17999_BOOL,aux18000_BOOL,aux18001_BOOL,aux18002_BOOL],aux18003_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18004,s_00008],0);
constraint int_lt_reif(s_00005,aux18004,aux18005_BOOL);
constraint int_le_reif(s_00008, s_00005,aux18006_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux18007_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux18008_BOOL);
constraint array_bool_and([w_00008_00008_BOOL,aux18005_BOOL,aux18006_BOOL,aux18007_BOOL,aux18008_BOOL],aux18009_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18010,s_00009],0);
constraint int_lt_reif(s_00005,aux18010,aux18011_BOOL);
constraint int_le_reif(s_00009, s_00005,aux18012_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux18013_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux18014_BOOL);
constraint array_bool_and([w_00008_00009_BOOL,aux18011_BOOL,aux18012_BOOL,aux18013_BOOL,aux18014_BOOL],aux18015_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18016,s_00011],0);
constraint int_lt_reif(s_00005,aux18016,aux18017_BOOL);
constraint int_le_reif(s_00011, s_00005,aux18018_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux18019_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux18020_BOOL);
constraint array_bool_and([w_00008_00011_BOOL,aux18017_BOOL,aux18018_BOOL,aux18019_BOOL,aux18020_BOOL],aux18021_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux18022,s_00010],0);
constraint int_lt_reif(s_00005,aux18022,aux18023_BOOL);
constraint int_le_reif(s_00010, s_00005,aux18024_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux18025_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux18026_BOOL);
constraint array_bool_and([w_00008_00010_BOOL,aux18023_BOOL,aux18024_BOOL,aux18025_BOOL,aux18026_BOOL],aux18027_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux18028,s_00012],0);
constraint int_lt_reif(s_00005,aux18028,aux18029_BOOL);
constraint int_le_reif(s_00012, s_00005,aux18030_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux18031_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux18032_BOOL);
constraint array_bool_and([w_00008_00012_BOOL,aux18029_BOOL,aux18030_BOOL,aux18031_BOOL,aux18032_BOOL],aux18033_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18034,s_00013],0);
constraint int_lt_reif(s_00005,aux18034,aux18035_BOOL);
constraint int_le_reif(s_00013, s_00005,aux18036_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux18037_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux18038_BOOL);
constraint array_bool_and([w_00008_00013_BOOL,aux18035_BOOL,aux18036_BOOL,aux18037_BOOL,aux18038_BOOL],aux18039_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18040,s_00014],0);
constraint int_lt_reif(s_00005,aux18040,aux18041_BOOL);
constraint int_le_reif(s_00014, s_00005,aux18042_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux18043_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux18044_BOOL);
constraint array_bool_and([w_00008_00014_BOOL,aux18041_BOOL,aux18042_BOOL,aux18043_BOOL,aux18044_BOOL],aux18045_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18046,s_00015],0);
constraint int_lt_reif(s_00005,aux18046,aux18047_BOOL);
constraint int_le_reif(s_00015, s_00005,aux18048_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux18049_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux18050_BOOL);
constraint array_bool_and([w_00008_00015_BOOL,aux18047_BOOL,aux18048_BOOL,aux18049_BOOL,aux18050_BOOL],aux18051_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18052,s_00016],0);
constraint int_lt_reif(s_00005,aux18052,aux18053_BOOL);
constraint int_le_reif(s_00016, s_00005,aux18054_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux18055_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux18056_BOOL);
constraint array_bool_and([w_00008_00016_BOOL,aux18053_BOOL,aux18054_BOOL,aux18055_BOOL,aux18056_BOOL],aux18057_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18058,s_00018],0);
constraint int_lt_reif(s_00005,aux18058,aux18059_BOOL);
constraint int_le_reif(s_00018, s_00005,aux18060_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux18061_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux18062_BOOL);
constraint array_bool_and([w_00008_00018_BOOL,aux18059_BOOL,aux18060_BOOL,aux18061_BOOL,aux18062_BOOL],aux18063_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux18064,s_00017],0);
constraint int_lt_reif(s_00005,aux18064,aux18065_BOOL);
constraint int_le_reif(s_00017, s_00005,aux18066_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux18067_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux18068_BOOL);
constraint array_bool_and([w_00008_00017_BOOL,aux18065_BOOL,aux18066_BOOL,aux18067_BOOL,aux18068_BOOL],aux18069_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux18070,s_00019],0);
constraint int_lt_reif(s_00005,aux18070,aux18071_BOOL);
constraint int_le_reif(s_00019, s_00005,aux18072_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux18073_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux18074_BOOL);
constraint array_bool_and([w_00008_00019_BOOL,aux18071_BOOL,aux18072_BOOL,aux18073_BOOL,aux18074_BOOL],aux18075_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18076,s_00020],0);
constraint int_lt_reif(s_00005,aux18076,aux18077_BOOL);
constraint int_le_reif(s_00020, s_00005,aux18078_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux18079_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux18080_BOOL);
constraint array_bool_and([w_00008_00020_BOOL,aux18077_BOOL,aux18078_BOOL,aux18079_BOOL,aux18080_BOOL],aux18081_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux17967_INTEGER,aux17973_INTEGER,aux17979_INTEGER,aux17985_INTEGER,aux17991_INTEGER,aux17997_INTEGER,aux18003_INTEGER,aux18009_INTEGER,aux18015_INTEGER,aux18021_INTEGER,aux18027_INTEGER,aux18033_INTEGER,aux18039_INTEGER,aux18045_INTEGER,aux18051_INTEGER,aux18057_INTEGER,aux18063_INTEGER,aux18069_INTEGER,aux18075_INTEGER,aux18081_INTEGER,1],0,aux18082_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18083,s_00006],0);
constraint int_lt_reif(s_00006,aux18083,aux18084_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux18085_BOOL);
constraint array_bool_and([w_00008_00006_BOOL,aux18084_BOOL,aux18085_BOOL],aux18086_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux18087,s_00001],0);
constraint int_lt_reif(s_00006,aux18087,aux18088_BOOL);
constraint int_le_reif(s_00001, s_00006,aux18089_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18090_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux18091_BOOL);
constraint array_bool_and([w_00008_00001_BOOL,aux18088_BOOL,aux18089_BOOL,aux18090_BOOL,aux18091_BOOL],aux18092_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux18093,s_00002],0);
constraint int_lt_reif(s_00006,aux18093,aux18094_BOOL);
constraint int_le_reif(s_00002, s_00006,aux18095_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux18096_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux18097_BOOL);
constraint array_bool_and([w_00008_00002_BOOL,aux18094_BOOL,aux18095_BOOL,aux18096_BOOL,aux18097_BOOL],aux18098_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18099,s_00003],0);
constraint int_lt_reif(s_00006,aux18099,aux18100_BOOL);
constraint int_le_reif(s_00003, s_00006,aux18101_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux18102_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux18103_BOOL);
constraint array_bool_and([w_00008_00003_BOOL,aux18100_BOOL,aux18101_BOOL,aux18102_BOOL,aux18103_BOOL],aux18104_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18105,s_00004],0);
constraint int_lt_reif(s_00006,aux18105,aux18106_BOOL);
constraint int_le_reif(s_00004, s_00006,aux18107_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux18108_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux18109_BOOL);
constraint array_bool_and([w_00008_00004_BOOL,aux18106_BOOL,aux18107_BOOL,aux18108_BOOL,aux18109_BOOL],aux18110_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18111,s_00005],0);
constraint int_lt_reif(s_00006,aux18111,aux18112_BOOL);
constraint int_le_reif(s_00005, s_00006,aux18113_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux18114_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux18115_BOOL);
constraint array_bool_and([w_00008_00005_BOOL,aux18112_BOOL,aux18113_BOOL,aux18114_BOOL,aux18115_BOOL],aux18116_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18117,s_00007],0);
constraint int_lt_reif(s_00006,aux18117,aux18118_BOOL);
constraint int_le_reif(s_00007, s_00006,aux18119_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux18120_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux18121_BOOL);
constraint array_bool_and([w_00008_00007_BOOL,aux18118_BOOL,aux18119_BOOL,aux18120_BOOL,aux18121_BOOL],aux18122_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18123,s_00008],0);
constraint int_lt_reif(s_00006,aux18123,aux18124_BOOL);
constraint int_le_reif(s_00008, s_00006,aux18125_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux18126_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux18127_BOOL);
constraint array_bool_and([w_00008_00008_BOOL,aux18124_BOOL,aux18125_BOOL,aux18126_BOOL,aux18127_BOOL],aux18128_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18129,s_00009],0);
constraint int_lt_reif(s_00006,aux18129,aux18130_BOOL);
constraint int_le_reif(s_00009, s_00006,aux18131_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux18132_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux18133_BOOL);
constraint array_bool_and([w_00008_00009_BOOL,aux18130_BOOL,aux18131_BOOL,aux18132_BOOL,aux18133_BOOL],aux18134_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18135,s_00011],0);
constraint int_lt_reif(s_00006,aux18135,aux18136_BOOL);
constraint int_le_reif(s_00011, s_00006,aux18137_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux18138_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux18139_BOOL);
constraint array_bool_and([w_00008_00011_BOOL,aux18136_BOOL,aux18137_BOOL,aux18138_BOOL,aux18139_BOOL],aux18140_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux18141,s_00010],0);
constraint int_lt_reif(s_00006,aux18141,aux18142_BOOL);
constraint int_le_reif(s_00010, s_00006,aux18143_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux18144_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux18145_BOOL);
constraint array_bool_and([w_00008_00010_BOOL,aux18142_BOOL,aux18143_BOOL,aux18144_BOOL,aux18145_BOOL],aux18146_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux18147,s_00012],0);
constraint int_lt_reif(s_00006,aux18147,aux18148_BOOL);
constraint int_le_reif(s_00012, s_00006,aux18149_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux18150_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux18151_BOOL);
constraint array_bool_and([w_00008_00012_BOOL,aux18148_BOOL,aux18149_BOOL,aux18150_BOOL,aux18151_BOOL],aux18152_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18153,s_00013],0);
constraint int_lt_reif(s_00006,aux18153,aux18154_BOOL);
constraint int_le_reif(s_00013, s_00006,aux18155_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux18156_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux18157_BOOL);
constraint array_bool_and([w_00008_00013_BOOL,aux18154_BOOL,aux18155_BOOL,aux18156_BOOL,aux18157_BOOL],aux18158_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18159,s_00014],0);
constraint int_lt_reif(s_00006,aux18159,aux18160_BOOL);
constraint int_le_reif(s_00014, s_00006,aux18161_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux18162_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux18163_BOOL);
constraint array_bool_and([w_00008_00014_BOOL,aux18160_BOOL,aux18161_BOOL,aux18162_BOOL,aux18163_BOOL],aux18164_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18165,s_00015],0);
constraint int_lt_reif(s_00006,aux18165,aux18166_BOOL);
constraint int_le_reif(s_00015, s_00006,aux18167_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux18168_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux18169_BOOL);
constraint array_bool_and([w_00008_00015_BOOL,aux18166_BOOL,aux18167_BOOL,aux18168_BOOL,aux18169_BOOL],aux18170_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18171,s_00016],0);
constraint int_lt_reif(s_00006,aux18171,aux18172_BOOL);
constraint int_le_reif(s_00016, s_00006,aux18173_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux18174_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux18175_BOOL);
constraint array_bool_and([w_00008_00016_BOOL,aux18172_BOOL,aux18173_BOOL,aux18174_BOOL,aux18175_BOOL],aux18176_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18177,s_00018],0);
constraint int_lt_reif(s_00006,aux18177,aux18178_BOOL);
constraint int_le_reif(s_00018, s_00006,aux18179_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux18180_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux18181_BOOL);
constraint array_bool_and([w_00008_00018_BOOL,aux18178_BOOL,aux18179_BOOL,aux18180_BOOL,aux18181_BOOL],aux18182_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux18183,s_00017],0);
constraint int_lt_reif(s_00006,aux18183,aux18184_BOOL);
constraint int_le_reif(s_00017, s_00006,aux18185_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux18186_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux18187_BOOL);
constraint array_bool_and([w_00008_00017_BOOL,aux18184_BOOL,aux18185_BOOL,aux18186_BOOL,aux18187_BOOL],aux18188_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux18189,s_00019],0);
constraint int_lt_reif(s_00006,aux18189,aux18190_BOOL);
constraint int_le_reif(s_00019, s_00006,aux18191_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux18192_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux18193_BOOL);
constraint array_bool_and([w_00008_00019_BOOL,aux18190_BOOL,aux18191_BOOL,aux18192_BOOL,aux18193_BOOL],aux18194_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18195,s_00020],0);
constraint int_lt_reif(s_00006,aux18195,aux18196_BOOL);
constraint int_le_reif(s_00020, s_00006,aux18197_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux18198_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux18199_BOOL);
constraint array_bool_and([w_00008_00020_BOOL,aux18196_BOOL,aux18197_BOOL,aux18198_BOOL,aux18199_BOOL],aux18200_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux18086_INTEGER,aux18092_INTEGER,aux18098_INTEGER,aux18104_INTEGER,aux18110_INTEGER,aux18116_INTEGER,aux18122_INTEGER,aux18128_INTEGER,aux18134_INTEGER,aux18140_INTEGER,aux18146_INTEGER,aux18152_INTEGER,aux18158_INTEGER,aux18164_INTEGER,aux18170_INTEGER,aux18176_INTEGER,aux18182_INTEGER,aux18188_INTEGER,aux18194_INTEGER,aux18200_INTEGER,1],0,aux18201_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18202,s_00008],0);
constraint int_lt_reif(s_00008,aux18202,aux18203_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux18204_BOOL);
constraint array_bool_and([w_00008_00008_BOOL,aux18203_BOOL,aux18204_BOOL],aux18205_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux18206,s_00001],0);
constraint int_lt_reif(s_00008,aux18206,aux18207_BOOL);
constraint int_le_reif(s_00001, s_00008,aux18208_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18209_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux18210_BOOL);
constraint array_bool_and([w_00008_00001_BOOL,aux18207_BOOL,aux18208_BOOL,aux18209_BOOL,aux18210_BOOL],aux18211_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux18212,s_00002],0);
constraint int_lt_reif(s_00008,aux18212,aux18213_BOOL);
constraint int_le_reif(s_00002, s_00008,aux18214_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux18215_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux18216_BOOL);
constraint array_bool_and([w_00008_00002_BOOL,aux18213_BOOL,aux18214_BOOL,aux18215_BOOL,aux18216_BOOL],aux18217_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18218,s_00003],0);
constraint int_lt_reif(s_00008,aux18218,aux18219_BOOL);
constraint int_le_reif(s_00003, s_00008,aux18220_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux18221_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux18222_BOOL);
constraint array_bool_and([w_00008_00003_BOOL,aux18219_BOOL,aux18220_BOOL,aux18221_BOOL,aux18222_BOOL],aux18223_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18224,s_00004],0);
constraint int_lt_reif(s_00008,aux18224,aux18225_BOOL);
constraint int_le_reif(s_00004, s_00008,aux18226_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux18227_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux18228_BOOL);
constraint array_bool_and([w_00008_00004_BOOL,aux18225_BOOL,aux18226_BOOL,aux18227_BOOL,aux18228_BOOL],aux18229_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18230,s_00005],0);
constraint int_lt_reif(s_00008,aux18230,aux18231_BOOL);
constraint int_le_reif(s_00005, s_00008,aux18232_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux18233_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux18234_BOOL);
constraint array_bool_and([w_00008_00005_BOOL,aux18231_BOOL,aux18232_BOOL,aux18233_BOOL,aux18234_BOOL],aux18235_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18236,s_00006],0);
constraint int_lt_reif(s_00008,aux18236,aux18237_BOOL);
constraint int_le_reif(s_00006, s_00008,aux18238_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux18239_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux18240_BOOL);
constraint array_bool_and([w_00008_00006_BOOL,aux18237_BOOL,aux18238_BOOL,aux18239_BOOL,aux18240_BOOL],aux18241_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18242,s_00007],0);
constraint int_lt_reif(s_00008,aux18242,aux18243_BOOL);
constraint int_le_reif(s_00007, s_00008,aux18244_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux18245_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux18246_BOOL);
constraint array_bool_and([w_00008_00007_BOOL,aux18243_BOOL,aux18244_BOOL,aux18245_BOOL,aux18246_BOOL],aux18247_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18248,s_00009],0);
constraint int_lt_reif(s_00008,aux18248,aux18249_BOOL);
constraint int_le_reif(s_00009, s_00008,aux18250_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux18251_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux18252_BOOL);
constraint array_bool_and([w_00008_00009_BOOL,aux18249_BOOL,aux18250_BOOL,aux18251_BOOL,aux18252_BOOL],aux18253_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18254,s_00011],0);
constraint int_lt_reif(s_00008,aux18254,aux18255_BOOL);
constraint int_le_reif(s_00011, s_00008,aux18256_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux18257_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux18258_BOOL);
constraint array_bool_and([w_00008_00011_BOOL,aux18255_BOOL,aux18256_BOOL,aux18257_BOOL,aux18258_BOOL],aux18259_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux18260,s_00010],0);
constraint int_lt_reif(s_00008,aux18260,aux18261_BOOL);
constraint int_le_reif(s_00010, s_00008,aux18262_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux18263_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux18264_BOOL);
constraint array_bool_and([w_00008_00010_BOOL,aux18261_BOOL,aux18262_BOOL,aux18263_BOOL,aux18264_BOOL],aux18265_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux18266,s_00012],0);
constraint int_lt_reif(s_00008,aux18266,aux18267_BOOL);
constraint int_le_reif(s_00012, s_00008,aux18268_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux18269_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux18270_BOOL);
constraint array_bool_and([w_00008_00012_BOOL,aux18267_BOOL,aux18268_BOOL,aux18269_BOOL,aux18270_BOOL],aux18271_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18272,s_00013],0);
constraint int_lt_reif(s_00008,aux18272,aux18273_BOOL);
constraint int_le_reif(s_00013, s_00008,aux18274_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux18275_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux18276_BOOL);
constraint array_bool_and([w_00008_00013_BOOL,aux18273_BOOL,aux18274_BOOL,aux18275_BOOL,aux18276_BOOL],aux18277_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18278,s_00014],0);
constraint int_lt_reif(s_00008,aux18278,aux18279_BOOL);
constraint int_le_reif(s_00014, s_00008,aux18280_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux18281_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux18282_BOOL);
constraint array_bool_and([w_00008_00014_BOOL,aux18279_BOOL,aux18280_BOOL,aux18281_BOOL,aux18282_BOOL],aux18283_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18284,s_00015],0);
constraint int_lt_reif(s_00008,aux18284,aux18285_BOOL);
constraint int_le_reif(s_00015, s_00008,aux18286_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux18287_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux18288_BOOL);
constraint array_bool_and([w_00008_00015_BOOL,aux18285_BOOL,aux18286_BOOL,aux18287_BOOL,aux18288_BOOL],aux18289_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18290,s_00016],0);
constraint int_lt_reif(s_00008,aux18290,aux18291_BOOL);
constraint int_le_reif(s_00016, s_00008,aux18292_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux18293_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux18294_BOOL);
constraint array_bool_and([w_00008_00016_BOOL,aux18291_BOOL,aux18292_BOOL,aux18293_BOOL,aux18294_BOOL],aux18295_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18296,s_00018],0);
constraint int_lt_reif(s_00008,aux18296,aux18297_BOOL);
constraint int_le_reif(s_00018, s_00008,aux18298_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux18299_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux18300_BOOL);
constraint array_bool_and([w_00008_00018_BOOL,aux18297_BOOL,aux18298_BOOL,aux18299_BOOL,aux18300_BOOL],aux18301_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux18302,s_00017],0);
constraint int_lt_reif(s_00008,aux18302,aux18303_BOOL);
constraint int_le_reif(s_00017, s_00008,aux18304_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux18305_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux18306_BOOL);
constraint array_bool_and([w_00008_00017_BOOL,aux18303_BOOL,aux18304_BOOL,aux18305_BOOL,aux18306_BOOL],aux18307_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux18308,s_00019],0);
constraint int_lt_reif(s_00008,aux18308,aux18309_BOOL);
constraint int_le_reif(s_00019, s_00008,aux18310_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux18311_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux18312_BOOL);
constraint array_bool_and([w_00008_00019_BOOL,aux18309_BOOL,aux18310_BOOL,aux18311_BOOL,aux18312_BOOL],aux18313_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18314,s_00020],0);
constraint int_lt_reif(s_00008,aux18314,aux18315_BOOL);
constraint int_le_reif(s_00020, s_00008,aux18316_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux18317_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux18318_BOOL);
constraint array_bool_and([w_00008_00020_BOOL,aux18315_BOOL,aux18316_BOOL,aux18317_BOOL,aux18318_BOOL],aux18319_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux18205_INTEGER,aux18211_INTEGER,aux18217_INTEGER,aux18223_INTEGER,aux18229_INTEGER,aux18235_INTEGER,aux18241_INTEGER,aux18247_INTEGER,aux18253_INTEGER,aux18259_INTEGER,aux18265_INTEGER,aux18271_INTEGER,aux18277_INTEGER,aux18283_INTEGER,aux18289_INTEGER,aux18295_INTEGER,aux18301_INTEGER,aux18307_INTEGER,aux18313_INTEGER,aux18319_INTEGER,1],0,aux18320_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18321,s_00007],0);
constraint int_lt_reif(s_00007,aux18321,aux18322_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux18323_BOOL);
constraint array_bool_and([w_00008_00007_BOOL,aux18322_BOOL,aux18323_BOOL],aux18324_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux18325,s_00001],0);
constraint int_lt_reif(s_00007,aux18325,aux18326_BOOL);
constraint int_le_reif(s_00001, s_00007,aux18327_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18328_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux18329_BOOL);
constraint array_bool_and([w_00008_00001_BOOL,aux18326_BOOL,aux18327_BOOL,aux18328_BOOL,aux18329_BOOL],aux18330_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux18331,s_00002],0);
constraint int_lt_reif(s_00007,aux18331,aux18332_BOOL);
constraint int_le_reif(s_00002, s_00007,aux18333_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux18334_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux18335_BOOL);
constraint array_bool_and([w_00008_00002_BOOL,aux18332_BOOL,aux18333_BOOL,aux18334_BOOL,aux18335_BOOL],aux18336_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18337,s_00003],0);
constraint int_lt_reif(s_00007,aux18337,aux18338_BOOL);
constraint int_le_reif(s_00003, s_00007,aux18339_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux18340_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux18341_BOOL);
constraint array_bool_and([w_00008_00003_BOOL,aux18338_BOOL,aux18339_BOOL,aux18340_BOOL,aux18341_BOOL],aux18342_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18343,s_00004],0);
constraint int_lt_reif(s_00007,aux18343,aux18344_BOOL);
constraint int_le_reif(s_00004, s_00007,aux18345_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux18346_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux18347_BOOL);
constraint array_bool_and([w_00008_00004_BOOL,aux18344_BOOL,aux18345_BOOL,aux18346_BOOL,aux18347_BOOL],aux18348_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18349,s_00005],0);
constraint int_lt_reif(s_00007,aux18349,aux18350_BOOL);
constraint int_le_reif(s_00005, s_00007,aux18351_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux18352_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux18353_BOOL);
constraint array_bool_and([w_00008_00005_BOOL,aux18350_BOOL,aux18351_BOOL,aux18352_BOOL,aux18353_BOOL],aux18354_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18355,s_00006],0);
constraint int_lt_reif(s_00007,aux18355,aux18356_BOOL);
constraint int_le_reif(s_00006, s_00007,aux18357_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux18358_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux18359_BOOL);
constraint array_bool_and([w_00008_00006_BOOL,aux18356_BOOL,aux18357_BOOL,aux18358_BOOL,aux18359_BOOL],aux18360_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18361,s_00008],0);
constraint int_lt_reif(s_00007,aux18361,aux18362_BOOL);
constraint int_le_reif(s_00008, s_00007,aux18363_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux18364_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux18365_BOOL);
constraint array_bool_and([w_00008_00008_BOOL,aux18362_BOOL,aux18363_BOOL,aux18364_BOOL,aux18365_BOOL],aux18366_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18367,s_00009],0);
constraint int_lt_reif(s_00007,aux18367,aux18368_BOOL);
constraint int_le_reif(s_00009, s_00007,aux18369_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux18370_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux18371_BOOL);
constraint array_bool_and([w_00008_00009_BOOL,aux18368_BOOL,aux18369_BOOL,aux18370_BOOL,aux18371_BOOL],aux18372_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18373,s_00011],0);
constraint int_lt_reif(s_00007,aux18373,aux18374_BOOL);
constraint int_le_reif(s_00011, s_00007,aux18375_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux18376_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux18377_BOOL);
constraint array_bool_and([w_00008_00011_BOOL,aux18374_BOOL,aux18375_BOOL,aux18376_BOOL,aux18377_BOOL],aux18378_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux18379,s_00010],0);
constraint int_lt_reif(s_00007,aux18379,aux18380_BOOL);
constraint int_le_reif(s_00010, s_00007,aux18381_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux18382_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux18383_BOOL);
constraint array_bool_and([w_00008_00010_BOOL,aux18380_BOOL,aux18381_BOOL,aux18382_BOOL,aux18383_BOOL],aux18384_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux18385,s_00012],0);
constraint int_lt_reif(s_00007,aux18385,aux18386_BOOL);
constraint int_le_reif(s_00012, s_00007,aux18387_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux18388_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux18389_BOOL);
constraint array_bool_and([w_00008_00012_BOOL,aux18386_BOOL,aux18387_BOOL,aux18388_BOOL,aux18389_BOOL],aux18390_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18391,s_00013],0);
constraint int_lt_reif(s_00007,aux18391,aux18392_BOOL);
constraint int_le_reif(s_00013, s_00007,aux18393_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux18394_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux18395_BOOL);
constraint array_bool_and([w_00008_00013_BOOL,aux18392_BOOL,aux18393_BOOL,aux18394_BOOL,aux18395_BOOL],aux18396_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18397,s_00014],0);
constraint int_lt_reif(s_00007,aux18397,aux18398_BOOL);
constraint int_le_reif(s_00014, s_00007,aux18399_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux18400_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux18401_BOOL);
constraint array_bool_and([w_00008_00014_BOOL,aux18398_BOOL,aux18399_BOOL,aux18400_BOOL,aux18401_BOOL],aux18402_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18403,s_00015],0);
constraint int_lt_reif(s_00007,aux18403,aux18404_BOOL);
constraint int_le_reif(s_00015, s_00007,aux18405_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux18406_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux18407_BOOL);
constraint array_bool_and([w_00008_00015_BOOL,aux18404_BOOL,aux18405_BOOL,aux18406_BOOL,aux18407_BOOL],aux18408_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18409,s_00016],0);
constraint int_lt_reif(s_00007,aux18409,aux18410_BOOL);
constraint int_le_reif(s_00016, s_00007,aux18411_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux18412_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux18413_BOOL);
constraint array_bool_and([w_00008_00016_BOOL,aux18410_BOOL,aux18411_BOOL,aux18412_BOOL,aux18413_BOOL],aux18414_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18415,s_00018],0);
constraint int_lt_reif(s_00007,aux18415,aux18416_BOOL);
constraint int_le_reif(s_00018, s_00007,aux18417_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux18418_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux18419_BOOL);
constraint array_bool_and([w_00008_00018_BOOL,aux18416_BOOL,aux18417_BOOL,aux18418_BOOL,aux18419_BOOL],aux18420_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux18421,s_00017],0);
constraint int_lt_reif(s_00007,aux18421,aux18422_BOOL);
constraint int_le_reif(s_00017, s_00007,aux18423_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux18424_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux18425_BOOL);
constraint array_bool_and([w_00008_00017_BOOL,aux18422_BOOL,aux18423_BOOL,aux18424_BOOL,aux18425_BOOL],aux18426_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux18427,s_00019],0);
constraint int_lt_reif(s_00007,aux18427,aux18428_BOOL);
constraint int_le_reif(s_00019, s_00007,aux18429_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux18430_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux18431_BOOL);
constraint array_bool_and([w_00008_00019_BOOL,aux18428_BOOL,aux18429_BOOL,aux18430_BOOL,aux18431_BOOL],aux18432_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18433,s_00020],0);
constraint int_lt_reif(s_00007,aux18433,aux18434_BOOL);
constraint int_le_reif(s_00020, s_00007,aux18435_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux18436_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux18437_BOOL);
constraint array_bool_and([w_00008_00020_BOOL,aux18434_BOOL,aux18435_BOOL,aux18436_BOOL,aux18437_BOOL],aux18438_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux18324_INTEGER,aux18330_INTEGER,aux18336_INTEGER,aux18342_INTEGER,aux18348_INTEGER,aux18354_INTEGER,aux18360_INTEGER,aux18366_INTEGER,aux18372_INTEGER,aux18378_INTEGER,aux18384_INTEGER,aux18390_INTEGER,aux18396_INTEGER,aux18402_INTEGER,aux18408_INTEGER,aux18414_INTEGER,aux18420_INTEGER,aux18426_INTEGER,aux18432_INTEGER,aux18438_INTEGER,1],0,aux18439_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux18440,s_00017],0);
constraint int_lt_reif(s_00017,aux18440,aux18441_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux18442_BOOL);
constraint array_bool_and([w_00008_00017_BOOL,aux18441_BOOL,aux18442_BOOL],aux18443_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux18444,s_00001],0);
constraint int_lt_reif(s_00017,aux18444,aux18445_BOOL);
constraint int_le_reif(s_00001, s_00017,aux18446_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18447_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux18448_BOOL);
constraint array_bool_and([w_00008_00001_BOOL,aux18445_BOOL,aux18446_BOOL,aux18447_BOOL,aux18448_BOOL],aux18449_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux18450,s_00002],0);
constraint int_lt_reif(s_00017,aux18450,aux18451_BOOL);
constraint int_le_reif(s_00002, s_00017,aux18452_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux18453_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux18454_BOOL);
constraint array_bool_and([w_00008_00002_BOOL,aux18451_BOOL,aux18452_BOOL,aux18453_BOOL,aux18454_BOOL],aux18455_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18456,s_00003],0);
constraint int_lt_reif(s_00017,aux18456,aux18457_BOOL);
constraint int_le_reif(s_00003, s_00017,aux18458_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux18459_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux18460_BOOL);
constraint array_bool_and([w_00008_00003_BOOL,aux18457_BOOL,aux18458_BOOL,aux18459_BOOL,aux18460_BOOL],aux18461_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18462,s_00004],0);
constraint int_lt_reif(s_00017,aux18462,aux18463_BOOL);
constraint int_le_reif(s_00004, s_00017,aux18464_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux18465_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux18466_BOOL);
constraint array_bool_and([w_00008_00004_BOOL,aux18463_BOOL,aux18464_BOOL,aux18465_BOOL,aux18466_BOOL],aux18467_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18468,s_00005],0);
constraint int_lt_reif(s_00017,aux18468,aux18469_BOOL);
constraint int_le_reif(s_00005, s_00017,aux18470_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux18471_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux18472_BOOL);
constraint array_bool_and([w_00008_00005_BOOL,aux18469_BOOL,aux18470_BOOL,aux18471_BOOL,aux18472_BOOL],aux18473_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18474,s_00006],0);
constraint int_lt_reif(s_00017,aux18474,aux18475_BOOL);
constraint int_le_reif(s_00006, s_00017,aux18476_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux18477_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux18478_BOOL);
constraint array_bool_and([w_00008_00006_BOOL,aux18475_BOOL,aux18476_BOOL,aux18477_BOOL,aux18478_BOOL],aux18479_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18480,s_00007],0);
constraint int_lt_reif(s_00017,aux18480,aux18481_BOOL);
constraint int_le_reif(s_00007, s_00017,aux18482_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux18483_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux18484_BOOL);
constraint array_bool_and([w_00008_00007_BOOL,aux18481_BOOL,aux18482_BOOL,aux18483_BOOL,aux18484_BOOL],aux18485_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18486,s_00008],0);
constraint int_lt_reif(s_00017,aux18486,aux18487_BOOL);
constraint int_le_reif(s_00008, s_00017,aux18488_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux18489_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux18490_BOOL);
constraint array_bool_and([w_00008_00008_BOOL,aux18487_BOOL,aux18488_BOOL,aux18489_BOOL,aux18490_BOOL],aux18491_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18492,s_00009],0);
constraint int_lt_reif(s_00017,aux18492,aux18493_BOOL);
constraint int_le_reif(s_00009, s_00017,aux18494_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux18495_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux18496_BOOL);
constraint array_bool_and([w_00008_00009_BOOL,aux18493_BOOL,aux18494_BOOL,aux18495_BOOL,aux18496_BOOL],aux18497_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18498,s_00011],0);
constraint int_lt_reif(s_00017,aux18498,aux18499_BOOL);
constraint int_le_reif(s_00011, s_00017,aux18500_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux18501_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux18502_BOOL);
constraint array_bool_and([w_00008_00011_BOOL,aux18499_BOOL,aux18500_BOOL,aux18501_BOOL,aux18502_BOOL],aux18503_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux18504,s_00010],0);
constraint int_lt_reif(s_00017,aux18504,aux18505_BOOL);
constraint int_le_reif(s_00010, s_00017,aux18506_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux18507_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux18508_BOOL);
constraint array_bool_and([w_00008_00010_BOOL,aux18505_BOOL,aux18506_BOOL,aux18507_BOOL,aux18508_BOOL],aux18509_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux18510,s_00012],0);
constraint int_lt_reif(s_00017,aux18510,aux18511_BOOL);
constraint int_le_reif(s_00012, s_00017,aux18512_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux18513_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux18514_BOOL);
constraint array_bool_and([w_00008_00012_BOOL,aux18511_BOOL,aux18512_BOOL,aux18513_BOOL,aux18514_BOOL],aux18515_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18516,s_00013],0);
constraint int_lt_reif(s_00017,aux18516,aux18517_BOOL);
constraint int_le_reif(s_00013, s_00017,aux18518_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux18519_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux18520_BOOL);
constraint array_bool_and([w_00008_00013_BOOL,aux18517_BOOL,aux18518_BOOL,aux18519_BOOL,aux18520_BOOL],aux18521_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18522,s_00014],0);
constraint int_lt_reif(s_00017,aux18522,aux18523_BOOL);
constraint int_le_reif(s_00014, s_00017,aux18524_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux18525_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux18526_BOOL);
constraint array_bool_and([w_00008_00014_BOOL,aux18523_BOOL,aux18524_BOOL,aux18525_BOOL,aux18526_BOOL],aux18527_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18528,s_00015],0);
constraint int_lt_reif(s_00017,aux18528,aux18529_BOOL);
constraint int_le_reif(s_00015, s_00017,aux18530_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux18531_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux18532_BOOL);
constraint array_bool_and([w_00008_00015_BOOL,aux18529_BOOL,aux18530_BOOL,aux18531_BOOL,aux18532_BOOL],aux18533_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18534,s_00016],0);
constraint int_lt_reif(s_00017,aux18534,aux18535_BOOL);
constraint int_le_reif(s_00016, s_00017,aux18536_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux18537_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux18538_BOOL);
constraint array_bool_and([w_00008_00016_BOOL,aux18535_BOOL,aux18536_BOOL,aux18537_BOOL,aux18538_BOOL],aux18539_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18540,s_00018],0);
constraint int_lt_reif(s_00017,aux18540,aux18541_BOOL);
constraint int_le_reif(s_00018, s_00017,aux18542_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux18543_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux18544_BOOL);
constraint array_bool_and([w_00008_00018_BOOL,aux18541_BOOL,aux18542_BOOL,aux18543_BOOL,aux18544_BOOL],aux18545_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux18546,s_00019],0);
constraint int_lt_reif(s_00017,aux18546,aux18547_BOOL);
constraint int_le_reif(s_00019, s_00017,aux18548_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux18549_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux18550_BOOL);
constraint array_bool_and([w_00008_00019_BOOL,aux18547_BOOL,aux18548_BOOL,aux18549_BOOL,aux18550_BOOL],aux18551_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18552,s_00020],0);
constraint int_lt_reif(s_00017,aux18552,aux18553_BOOL);
constraint int_le_reif(s_00020, s_00017,aux18554_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux18555_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux18556_BOOL);
constraint array_bool_and([w_00008_00020_BOOL,aux18553_BOOL,aux18554_BOOL,aux18555_BOOL,aux18556_BOOL],aux18557_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux18443_INTEGER,aux18449_INTEGER,aux18455_INTEGER,aux18461_INTEGER,aux18467_INTEGER,aux18473_INTEGER,aux18479_INTEGER,aux18485_INTEGER,aux18491_INTEGER,aux18497_INTEGER,aux18503_INTEGER,aux18509_INTEGER,aux18515_INTEGER,aux18521_INTEGER,aux18527_INTEGER,aux18533_INTEGER,aux18539_INTEGER,aux18545_INTEGER,aux18551_INTEGER,aux18557_INTEGER,1],0,aux18558_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18559,s_00003],0);
constraint int_lt_reif(s_00003,aux18559,aux18560_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux18561_BOOL);
constraint array_bool_and([w_00008_00003_BOOL,aux18560_BOOL,aux18561_BOOL],aux18562_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux18563,s_00001],0);
constraint int_lt_reif(s_00003,aux18563,aux18564_BOOL);
constraint int_le_reif(s_00001, s_00003,aux18565_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18566_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux18567_BOOL);
constraint array_bool_and([w_00008_00001_BOOL,aux18564_BOOL,aux18565_BOOL,aux18566_BOOL,aux18567_BOOL],aux18568_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux18569,s_00002],0);
constraint int_lt_reif(s_00003,aux18569,aux18570_BOOL);
constraint int_le_reif(s_00002, s_00003,aux18571_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux18572_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux18573_BOOL);
constraint array_bool_and([w_00008_00002_BOOL,aux18570_BOOL,aux18571_BOOL,aux18572_BOOL,aux18573_BOOL],aux18574_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18575,s_00004],0);
constraint int_lt_reif(s_00003,aux18575,aux18576_BOOL);
constraint int_le_reif(s_00004, s_00003,aux18577_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux18578_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux18579_BOOL);
constraint array_bool_and([w_00008_00004_BOOL,aux18576_BOOL,aux18577_BOOL,aux18578_BOOL,aux18579_BOOL],aux18580_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18581,s_00005],0);
constraint int_lt_reif(s_00003,aux18581,aux18582_BOOL);
constraint int_le_reif(s_00005, s_00003,aux18583_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux18584_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux18585_BOOL);
constraint array_bool_and([w_00008_00005_BOOL,aux18582_BOOL,aux18583_BOOL,aux18584_BOOL,aux18585_BOOL],aux18586_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18587,s_00006],0);
constraint int_lt_reif(s_00003,aux18587,aux18588_BOOL);
constraint int_le_reif(s_00006, s_00003,aux18589_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux18590_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux18591_BOOL);
constraint array_bool_and([w_00008_00006_BOOL,aux18588_BOOL,aux18589_BOOL,aux18590_BOOL,aux18591_BOOL],aux18592_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18593,s_00007],0);
constraint int_lt_reif(s_00003,aux18593,aux18594_BOOL);
constraint int_le_reif(s_00007, s_00003,aux18595_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux18596_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux18597_BOOL);
constraint array_bool_and([w_00008_00007_BOOL,aux18594_BOOL,aux18595_BOOL,aux18596_BOOL,aux18597_BOOL],aux18598_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18599,s_00008],0);
constraint int_lt_reif(s_00003,aux18599,aux18600_BOOL);
constraint int_le_reif(s_00008, s_00003,aux18601_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux18602_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux18603_BOOL);
constraint array_bool_and([w_00008_00008_BOOL,aux18600_BOOL,aux18601_BOOL,aux18602_BOOL,aux18603_BOOL],aux18604_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18605,s_00009],0);
constraint int_lt_reif(s_00003,aux18605,aux18606_BOOL);
constraint int_le_reif(s_00009, s_00003,aux18607_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux18608_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux18609_BOOL);
constraint array_bool_and([w_00008_00009_BOOL,aux18606_BOOL,aux18607_BOOL,aux18608_BOOL,aux18609_BOOL],aux18610_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18611,s_00011],0);
constraint int_lt_reif(s_00003,aux18611,aux18612_BOOL);
constraint int_le_reif(s_00011, s_00003,aux18613_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux18614_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux18615_BOOL);
constraint array_bool_and([w_00008_00011_BOOL,aux18612_BOOL,aux18613_BOOL,aux18614_BOOL,aux18615_BOOL],aux18616_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux18617,s_00010],0);
constraint int_lt_reif(s_00003,aux18617,aux18618_BOOL);
constraint int_le_reif(s_00010, s_00003,aux18619_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux18620_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux18621_BOOL);
constraint array_bool_and([w_00008_00010_BOOL,aux18618_BOOL,aux18619_BOOL,aux18620_BOOL,aux18621_BOOL],aux18622_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux18623,s_00012],0);
constraint int_lt_reif(s_00003,aux18623,aux18624_BOOL);
constraint int_le_reif(s_00012, s_00003,aux18625_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux18626_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux18627_BOOL);
constraint array_bool_and([w_00008_00012_BOOL,aux18624_BOOL,aux18625_BOOL,aux18626_BOOL,aux18627_BOOL],aux18628_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18629,s_00013],0);
constraint int_lt_reif(s_00003,aux18629,aux18630_BOOL);
constraint int_le_reif(s_00013, s_00003,aux18631_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux18632_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux18633_BOOL);
constraint array_bool_and([w_00008_00013_BOOL,aux18630_BOOL,aux18631_BOOL,aux18632_BOOL,aux18633_BOOL],aux18634_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18635,s_00014],0);
constraint int_lt_reif(s_00003,aux18635,aux18636_BOOL);
constraint int_le_reif(s_00014, s_00003,aux18637_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux18638_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux18639_BOOL);
constraint array_bool_and([w_00008_00014_BOOL,aux18636_BOOL,aux18637_BOOL,aux18638_BOOL,aux18639_BOOL],aux18640_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18641,s_00015],0);
constraint int_lt_reif(s_00003,aux18641,aux18642_BOOL);
constraint int_le_reif(s_00015, s_00003,aux18643_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux18644_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux18645_BOOL);
constraint array_bool_and([w_00008_00015_BOOL,aux18642_BOOL,aux18643_BOOL,aux18644_BOOL,aux18645_BOOL],aux18646_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18647,s_00016],0);
constraint int_lt_reif(s_00003,aux18647,aux18648_BOOL);
constraint int_le_reif(s_00016, s_00003,aux18649_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux18650_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux18651_BOOL);
constraint array_bool_and([w_00008_00016_BOOL,aux18648_BOOL,aux18649_BOOL,aux18650_BOOL,aux18651_BOOL],aux18652_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18653,s_00018],0);
constraint int_lt_reif(s_00003,aux18653,aux18654_BOOL);
constraint int_le_reif(s_00018, s_00003,aux18655_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux18656_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux18657_BOOL);
constraint array_bool_and([w_00008_00018_BOOL,aux18654_BOOL,aux18655_BOOL,aux18656_BOOL,aux18657_BOOL],aux18658_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux18659,s_00017],0);
constraint int_lt_reif(s_00003,aux18659,aux18660_BOOL);
constraint int_le_reif(s_00017, s_00003,aux18661_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux18662_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux18663_BOOL);
constraint array_bool_and([w_00008_00017_BOOL,aux18660_BOOL,aux18661_BOOL,aux18662_BOOL,aux18663_BOOL],aux18664_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux18665,s_00019],0);
constraint int_lt_reif(s_00003,aux18665,aux18666_BOOL);
constraint int_le_reif(s_00019, s_00003,aux18667_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux18668_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux18669_BOOL);
constraint array_bool_and([w_00008_00019_BOOL,aux18666_BOOL,aux18667_BOOL,aux18668_BOOL,aux18669_BOOL],aux18670_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18671,s_00020],0);
constraint int_lt_reif(s_00003,aux18671,aux18672_BOOL);
constraint int_le_reif(s_00020, s_00003,aux18673_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux18674_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux18675_BOOL);
constraint array_bool_and([w_00008_00020_BOOL,aux18672_BOOL,aux18673_BOOL,aux18674_BOOL,aux18675_BOOL],aux18676_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux18562_INTEGER,aux18568_INTEGER,aux18574_INTEGER,aux18580_INTEGER,aux18586_INTEGER,aux18592_INTEGER,aux18598_INTEGER,aux18604_INTEGER,aux18610_INTEGER,aux18616_INTEGER,aux18622_INTEGER,aux18628_INTEGER,aux18634_INTEGER,aux18640_INTEGER,aux18646_INTEGER,aux18652_INTEGER,aux18658_INTEGER,aux18664_INTEGER,aux18670_INTEGER,aux18676_INTEGER,1],0,aux18677_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux18678,s_00001],0);
constraint int_lt_reif(s_00001,aux18678,aux18679_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18680_BOOL);
constraint array_bool_and([w_00008_00001_BOOL,aux18679_BOOL,aux18680_BOOL],aux18681_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux18682,s_00002],0);
constraint int_lt_reif(s_00001,aux18682,aux18683_BOOL);
constraint int_le_reif(s_00002, s_00001,aux18684_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18685_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux18686_BOOL);
constraint array_bool_and([w_00008_00002_BOOL,aux18683_BOOL,aux18684_BOOL,aux18685_BOOL,aux18686_BOOL],aux18687_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18688,s_00003],0);
constraint int_lt_reif(s_00001,aux18688,aux18689_BOOL);
constraint int_le_reif(s_00003, s_00001,aux18690_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18691_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux18692_BOOL);
constraint array_bool_and([w_00008_00003_BOOL,aux18689_BOOL,aux18690_BOOL,aux18691_BOOL,aux18692_BOOL],aux18693_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18694,s_00004],0);
constraint int_lt_reif(s_00001,aux18694,aux18695_BOOL);
constraint int_le_reif(s_00004, s_00001,aux18696_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18697_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux18698_BOOL);
constraint array_bool_and([w_00008_00004_BOOL,aux18695_BOOL,aux18696_BOOL,aux18697_BOOL,aux18698_BOOL],aux18699_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18700,s_00005],0);
constraint int_lt_reif(s_00001,aux18700,aux18701_BOOL);
constraint int_le_reif(s_00005, s_00001,aux18702_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18703_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux18704_BOOL);
constraint array_bool_and([w_00008_00005_BOOL,aux18701_BOOL,aux18702_BOOL,aux18703_BOOL,aux18704_BOOL],aux18705_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18706,s_00006],0);
constraint int_lt_reif(s_00001,aux18706,aux18707_BOOL);
constraint int_le_reif(s_00006, s_00001,aux18708_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18709_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux18710_BOOL);
constraint array_bool_and([w_00008_00006_BOOL,aux18707_BOOL,aux18708_BOOL,aux18709_BOOL,aux18710_BOOL],aux18711_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18712,s_00007],0);
constraint int_lt_reif(s_00001,aux18712,aux18713_BOOL);
constraint int_le_reif(s_00007, s_00001,aux18714_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18715_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux18716_BOOL);
constraint array_bool_and([w_00008_00007_BOOL,aux18713_BOOL,aux18714_BOOL,aux18715_BOOL,aux18716_BOOL],aux18717_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18718,s_00008],0);
constraint int_lt_reif(s_00001,aux18718,aux18719_BOOL);
constraint int_le_reif(s_00008, s_00001,aux18720_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18721_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux18722_BOOL);
constraint array_bool_and([w_00008_00008_BOOL,aux18719_BOOL,aux18720_BOOL,aux18721_BOOL,aux18722_BOOL],aux18723_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18724,s_00009],0);
constraint int_lt_reif(s_00001,aux18724,aux18725_BOOL);
constraint int_le_reif(s_00009, s_00001,aux18726_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18727_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux18728_BOOL);
constraint array_bool_and([w_00008_00009_BOOL,aux18725_BOOL,aux18726_BOOL,aux18727_BOOL,aux18728_BOOL],aux18729_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18730,s_00011],0);
constraint int_lt_reif(s_00001,aux18730,aux18731_BOOL);
constraint int_le_reif(s_00011, s_00001,aux18732_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18733_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux18734_BOOL);
constraint array_bool_and([w_00008_00011_BOOL,aux18731_BOOL,aux18732_BOOL,aux18733_BOOL,aux18734_BOOL],aux18735_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux18736,s_00010],0);
constraint int_lt_reif(s_00001,aux18736,aux18737_BOOL);
constraint int_le_reif(s_00010, s_00001,aux18738_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18739_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux18740_BOOL);
constraint array_bool_and([w_00008_00010_BOOL,aux18737_BOOL,aux18738_BOOL,aux18739_BOOL,aux18740_BOOL],aux18741_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux18742,s_00012],0);
constraint int_lt_reif(s_00001,aux18742,aux18743_BOOL);
constraint int_le_reif(s_00012, s_00001,aux18744_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18745_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux18746_BOOL);
constraint array_bool_and([w_00008_00012_BOOL,aux18743_BOOL,aux18744_BOOL,aux18745_BOOL,aux18746_BOOL],aux18747_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18748,s_00013],0);
constraint int_lt_reif(s_00001,aux18748,aux18749_BOOL);
constraint int_le_reif(s_00013, s_00001,aux18750_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18751_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux18752_BOOL);
constraint array_bool_and([w_00008_00013_BOOL,aux18749_BOOL,aux18750_BOOL,aux18751_BOOL,aux18752_BOOL],aux18753_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18754,s_00014],0);
constraint int_lt_reif(s_00001,aux18754,aux18755_BOOL);
constraint int_le_reif(s_00014, s_00001,aux18756_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18757_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux18758_BOOL);
constraint array_bool_and([w_00008_00014_BOOL,aux18755_BOOL,aux18756_BOOL,aux18757_BOOL,aux18758_BOOL],aux18759_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18760,s_00015],0);
constraint int_lt_reif(s_00001,aux18760,aux18761_BOOL);
constraint int_le_reif(s_00015, s_00001,aux18762_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18763_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux18764_BOOL);
constraint array_bool_and([w_00008_00015_BOOL,aux18761_BOOL,aux18762_BOOL,aux18763_BOOL,aux18764_BOOL],aux18765_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18766,s_00016],0);
constraint int_lt_reif(s_00001,aux18766,aux18767_BOOL);
constraint int_le_reif(s_00016, s_00001,aux18768_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18769_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux18770_BOOL);
constraint array_bool_and([w_00008_00016_BOOL,aux18767_BOOL,aux18768_BOOL,aux18769_BOOL,aux18770_BOOL],aux18771_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18772,s_00018],0);
constraint int_lt_reif(s_00001,aux18772,aux18773_BOOL);
constraint int_le_reif(s_00018, s_00001,aux18774_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18775_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux18776_BOOL);
constraint array_bool_and([w_00008_00018_BOOL,aux18773_BOOL,aux18774_BOOL,aux18775_BOOL,aux18776_BOOL],aux18777_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux18778,s_00017],0);
constraint int_lt_reif(s_00001,aux18778,aux18779_BOOL);
constraint int_le_reif(s_00017, s_00001,aux18780_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18781_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux18782_BOOL);
constraint array_bool_and([w_00008_00017_BOOL,aux18779_BOOL,aux18780_BOOL,aux18781_BOOL,aux18782_BOOL],aux18783_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux18784,s_00019],0);
constraint int_lt_reif(s_00001,aux18784,aux18785_BOOL);
constraint int_le_reif(s_00019, s_00001,aux18786_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18787_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux18788_BOOL);
constraint array_bool_and([w_00008_00019_BOOL,aux18785_BOOL,aux18786_BOOL,aux18787_BOOL,aux18788_BOOL],aux18789_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18790,s_00020],0);
constraint int_lt_reif(s_00001,aux18790,aux18791_BOOL);
constraint int_le_reif(s_00020, s_00001,aux18792_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18793_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux18794_BOOL);
constraint array_bool_and([w_00008_00020_BOOL,aux18791_BOOL,aux18792_BOOL,aux18793_BOOL,aux18794_BOOL],aux18795_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux18681_INTEGER,aux18687_INTEGER,aux18693_INTEGER,aux18699_INTEGER,aux18705_INTEGER,aux18711_INTEGER,aux18717_INTEGER,aux18723_INTEGER,aux18729_INTEGER,aux18735_INTEGER,aux18741_INTEGER,aux18747_INTEGER,aux18753_INTEGER,aux18759_INTEGER,aux18765_INTEGER,aux18771_INTEGER,aux18777_INTEGER,aux18783_INTEGER,aux18789_INTEGER,aux18795_INTEGER,1],0,aux18796_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18797,s_00013],0);
constraint int_lt_reif(s_00013,aux18797,aux18798_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux18799_BOOL);
constraint array_bool_and([w_00008_00013_BOOL,aux18798_BOOL,aux18799_BOOL],aux18800_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux18801,s_00001],0);
constraint int_lt_reif(s_00013,aux18801,aux18802_BOOL);
constraint int_le_reif(s_00001, s_00013,aux18803_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18804_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux18805_BOOL);
constraint array_bool_and([w_00008_00001_BOOL,aux18802_BOOL,aux18803_BOOL,aux18804_BOOL,aux18805_BOOL],aux18806_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux18807,s_00002],0);
constraint int_lt_reif(s_00013,aux18807,aux18808_BOOL);
constraint int_le_reif(s_00002, s_00013,aux18809_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux18810_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux18811_BOOL);
constraint array_bool_and([w_00008_00002_BOOL,aux18808_BOOL,aux18809_BOOL,aux18810_BOOL,aux18811_BOOL],aux18812_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18813,s_00003],0);
constraint int_lt_reif(s_00013,aux18813,aux18814_BOOL);
constraint int_le_reif(s_00003, s_00013,aux18815_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux18816_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux18817_BOOL);
constraint array_bool_and([w_00008_00003_BOOL,aux18814_BOOL,aux18815_BOOL,aux18816_BOOL,aux18817_BOOL],aux18818_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18819,s_00004],0);
constraint int_lt_reif(s_00013,aux18819,aux18820_BOOL);
constraint int_le_reif(s_00004, s_00013,aux18821_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux18822_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux18823_BOOL);
constraint array_bool_and([w_00008_00004_BOOL,aux18820_BOOL,aux18821_BOOL,aux18822_BOOL,aux18823_BOOL],aux18824_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18825,s_00005],0);
constraint int_lt_reif(s_00013,aux18825,aux18826_BOOL);
constraint int_le_reif(s_00005, s_00013,aux18827_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux18828_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux18829_BOOL);
constraint array_bool_and([w_00008_00005_BOOL,aux18826_BOOL,aux18827_BOOL,aux18828_BOOL,aux18829_BOOL],aux18830_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18831,s_00006],0);
constraint int_lt_reif(s_00013,aux18831,aux18832_BOOL);
constraint int_le_reif(s_00006, s_00013,aux18833_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux18834_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux18835_BOOL);
constraint array_bool_and([w_00008_00006_BOOL,aux18832_BOOL,aux18833_BOOL,aux18834_BOOL,aux18835_BOOL],aux18836_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18837,s_00007],0);
constraint int_lt_reif(s_00013,aux18837,aux18838_BOOL);
constraint int_le_reif(s_00007, s_00013,aux18839_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux18840_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux18841_BOOL);
constraint array_bool_and([w_00008_00007_BOOL,aux18838_BOOL,aux18839_BOOL,aux18840_BOOL,aux18841_BOOL],aux18842_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18843,s_00008],0);
constraint int_lt_reif(s_00013,aux18843,aux18844_BOOL);
constraint int_le_reif(s_00008, s_00013,aux18845_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux18846_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux18847_BOOL);
constraint array_bool_and([w_00008_00008_BOOL,aux18844_BOOL,aux18845_BOOL,aux18846_BOOL,aux18847_BOOL],aux18848_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18849,s_00009],0);
constraint int_lt_reif(s_00013,aux18849,aux18850_BOOL);
constraint int_le_reif(s_00009, s_00013,aux18851_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux18852_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux18853_BOOL);
constraint array_bool_and([w_00008_00009_BOOL,aux18850_BOOL,aux18851_BOOL,aux18852_BOOL,aux18853_BOOL],aux18854_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18855,s_00011],0);
constraint int_lt_reif(s_00013,aux18855,aux18856_BOOL);
constraint int_le_reif(s_00011, s_00013,aux18857_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux18858_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux18859_BOOL);
constraint array_bool_and([w_00008_00011_BOOL,aux18856_BOOL,aux18857_BOOL,aux18858_BOOL,aux18859_BOOL],aux18860_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux18861,s_00010],0);
constraint int_lt_reif(s_00013,aux18861,aux18862_BOOL);
constraint int_le_reif(s_00010, s_00013,aux18863_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux18864_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux18865_BOOL);
constraint array_bool_and([w_00008_00010_BOOL,aux18862_BOOL,aux18863_BOOL,aux18864_BOOL,aux18865_BOOL],aux18866_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux18867,s_00012],0);
constraint int_lt_reif(s_00013,aux18867,aux18868_BOOL);
constraint int_le_reif(s_00012, s_00013,aux18869_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux18870_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux18871_BOOL);
constraint array_bool_and([w_00008_00012_BOOL,aux18868_BOOL,aux18869_BOOL,aux18870_BOOL,aux18871_BOOL],aux18872_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18873,s_00014],0);
constraint int_lt_reif(s_00013,aux18873,aux18874_BOOL);
constraint int_le_reif(s_00014, s_00013,aux18875_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux18876_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux18877_BOOL);
constraint array_bool_and([w_00008_00014_BOOL,aux18874_BOOL,aux18875_BOOL,aux18876_BOOL,aux18877_BOOL],aux18878_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18879,s_00015],0);
constraint int_lt_reif(s_00013,aux18879,aux18880_BOOL);
constraint int_le_reif(s_00015, s_00013,aux18881_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux18882_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux18883_BOOL);
constraint array_bool_and([w_00008_00015_BOOL,aux18880_BOOL,aux18881_BOOL,aux18882_BOOL,aux18883_BOOL],aux18884_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18885,s_00016],0);
constraint int_lt_reif(s_00013,aux18885,aux18886_BOOL);
constraint int_le_reif(s_00016, s_00013,aux18887_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux18888_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux18889_BOOL);
constraint array_bool_and([w_00008_00016_BOOL,aux18886_BOOL,aux18887_BOOL,aux18888_BOOL,aux18889_BOOL],aux18890_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18891,s_00018],0);
constraint int_lt_reif(s_00013,aux18891,aux18892_BOOL);
constraint int_le_reif(s_00018, s_00013,aux18893_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux18894_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux18895_BOOL);
constraint array_bool_and([w_00008_00018_BOOL,aux18892_BOOL,aux18893_BOOL,aux18894_BOOL,aux18895_BOOL],aux18896_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux18897,s_00017],0);
constraint int_lt_reif(s_00013,aux18897,aux18898_BOOL);
constraint int_le_reif(s_00017, s_00013,aux18899_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux18900_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux18901_BOOL);
constraint array_bool_and([w_00008_00017_BOOL,aux18898_BOOL,aux18899_BOOL,aux18900_BOOL,aux18901_BOOL],aux18902_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux18903,s_00019],0);
constraint int_lt_reif(s_00013,aux18903,aux18904_BOOL);
constraint int_le_reif(s_00019, s_00013,aux18905_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux18906_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux18907_BOOL);
constraint array_bool_and([w_00008_00019_BOOL,aux18904_BOOL,aux18905_BOOL,aux18906_BOOL,aux18907_BOOL],aux18908_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18909,s_00020],0);
constraint int_lt_reif(s_00013,aux18909,aux18910_BOOL);
constraint int_le_reif(s_00020, s_00013,aux18911_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux18912_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux18913_BOOL);
constraint array_bool_and([w_00008_00020_BOOL,aux18910_BOOL,aux18911_BOOL,aux18912_BOOL,aux18913_BOOL],aux18914_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux18800_INTEGER,aux18806_INTEGER,aux18812_INTEGER,aux18818_INTEGER,aux18824_INTEGER,aux18830_INTEGER,aux18836_INTEGER,aux18842_INTEGER,aux18848_INTEGER,aux18854_INTEGER,aux18860_INTEGER,aux18866_INTEGER,aux18872_INTEGER,aux18878_INTEGER,aux18884_INTEGER,aux18890_INTEGER,aux18896_INTEGER,aux18902_INTEGER,aux18908_INTEGER,aux18914_INTEGER,1],0,aux18915_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18916,s_00015],0);
constraint int_lt_reif(s_00015,aux18916,aux18917_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux18918_BOOL);
constraint array_bool_and([w_00008_00015_BOOL,aux18917_BOOL,aux18918_BOOL],aux18919_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux18920,s_00001],0);
constraint int_lt_reif(s_00015,aux18920,aux18921_BOOL);
constraint int_le_reif(s_00001, s_00015,aux18922_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18923_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux18924_BOOL);
constraint array_bool_and([w_00008_00001_BOOL,aux18921_BOOL,aux18922_BOOL,aux18923_BOOL,aux18924_BOOL],aux18925_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux18926,s_00002],0);
constraint int_lt_reif(s_00015,aux18926,aux18927_BOOL);
constraint int_le_reif(s_00002, s_00015,aux18928_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux18929_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux18930_BOOL);
constraint array_bool_and([w_00008_00002_BOOL,aux18927_BOOL,aux18928_BOOL,aux18929_BOOL,aux18930_BOOL],aux18931_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18932,s_00003],0);
constraint int_lt_reif(s_00015,aux18932,aux18933_BOOL);
constraint int_le_reif(s_00003, s_00015,aux18934_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux18935_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux18936_BOOL);
constraint array_bool_and([w_00008_00003_BOOL,aux18933_BOOL,aux18934_BOOL,aux18935_BOOL,aux18936_BOOL],aux18937_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18938,s_00004],0);
constraint int_lt_reif(s_00015,aux18938,aux18939_BOOL);
constraint int_le_reif(s_00004, s_00015,aux18940_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux18941_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux18942_BOOL);
constraint array_bool_and([w_00008_00004_BOOL,aux18939_BOOL,aux18940_BOOL,aux18941_BOOL,aux18942_BOOL],aux18943_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18944,s_00005],0);
constraint int_lt_reif(s_00015,aux18944,aux18945_BOOL);
constraint int_le_reif(s_00005, s_00015,aux18946_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux18947_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux18948_BOOL);
constraint array_bool_and([w_00008_00005_BOOL,aux18945_BOOL,aux18946_BOOL,aux18947_BOOL,aux18948_BOOL],aux18949_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18950,s_00006],0);
constraint int_lt_reif(s_00015,aux18950,aux18951_BOOL);
constraint int_le_reif(s_00006, s_00015,aux18952_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux18953_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux18954_BOOL);
constraint array_bool_and([w_00008_00006_BOOL,aux18951_BOOL,aux18952_BOOL,aux18953_BOOL,aux18954_BOOL],aux18955_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18956,s_00007],0);
constraint int_lt_reif(s_00015,aux18956,aux18957_BOOL);
constraint int_le_reif(s_00007, s_00015,aux18958_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux18959_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux18960_BOOL);
constraint array_bool_and([w_00008_00007_BOOL,aux18957_BOOL,aux18958_BOOL,aux18959_BOOL,aux18960_BOOL],aux18961_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18962,s_00008],0);
constraint int_lt_reif(s_00015,aux18962,aux18963_BOOL);
constraint int_le_reif(s_00008, s_00015,aux18964_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux18965_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux18966_BOOL);
constraint array_bool_and([w_00008_00008_BOOL,aux18963_BOOL,aux18964_BOOL,aux18965_BOOL,aux18966_BOOL],aux18967_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18968,s_00009],0);
constraint int_lt_reif(s_00015,aux18968,aux18969_BOOL);
constraint int_le_reif(s_00009, s_00015,aux18970_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux18971_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux18972_BOOL);
constraint array_bool_and([w_00008_00009_BOOL,aux18969_BOOL,aux18970_BOOL,aux18971_BOOL,aux18972_BOOL],aux18973_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18974,s_00011],0);
constraint int_lt_reif(s_00015,aux18974,aux18975_BOOL);
constraint int_le_reif(s_00011, s_00015,aux18976_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux18977_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux18978_BOOL);
constraint array_bool_and([w_00008_00011_BOOL,aux18975_BOOL,aux18976_BOOL,aux18977_BOOL,aux18978_BOOL],aux18979_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux18980,s_00010],0);
constraint int_lt_reif(s_00015,aux18980,aux18981_BOOL);
constraint int_le_reif(s_00010, s_00015,aux18982_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux18983_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux18984_BOOL);
constraint array_bool_and([w_00008_00010_BOOL,aux18981_BOOL,aux18982_BOOL,aux18983_BOOL,aux18984_BOOL],aux18985_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux18986,s_00012],0);
constraint int_lt_reif(s_00015,aux18986,aux18987_BOOL);
constraint int_le_reif(s_00012, s_00015,aux18988_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux18989_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux18990_BOOL);
constraint array_bool_and([w_00008_00012_BOOL,aux18987_BOOL,aux18988_BOOL,aux18989_BOOL,aux18990_BOOL],aux18991_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18992,s_00013],0);
constraint int_lt_reif(s_00015,aux18992,aux18993_BOOL);
constraint int_le_reif(s_00013, s_00015,aux18994_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux18995_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux18996_BOOL);
constraint array_bool_and([w_00008_00013_BOOL,aux18993_BOOL,aux18994_BOOL,aux18995_BOOL,aux18996_BOOL],aux18997_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18998,s_00014],0);
constraint int_lt_reif(s_00015,aux18998,aux18999_BOOL);
constraint int_le_reif(s_00014, s_00015,aux19000_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux19001_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux19002_BOOL);
constraint array_bool_and([w_00008_00014_BOOL,aux18999_BOOL,aux19000_BOOL,aux19001_BOOL,aux19002_BOOL],aux19003_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19004,s_00016],0);
constraint int_lt_reif(s_00015,aux19004,aux19005_BOOL);
constraint int_le_reif(s_00016, s_00015,aux19006_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux19007_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux19008_BOOL);
constraint array_bool_and([w_00008_00016_BOOL,aux19005_BOOL,aux19006_BOOL,aux19007_BOOL,aux19008_BOOL],aux19009_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19010,s_00018],0);
constraint int_lt_reif(s_00015,aux19010,aux19011_BOOL);
constraint int_le_reif(s_00018, s_00015,aux19012_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux19013_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux19014_BOOL);
constraint array_bool_and([w_00008_00018_BOOL,aux19011_BOOL,aux19012_BOOL,aux19013_BOOL,aux19014_BOOL],aux19015_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux19016,s_00017],0);
constraint int_lt_reif(s_00015,aux19016,aux19017_BOOL);
constraint int_le_reif(s_00017, s_00015,aux19018_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux19019_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux19020_BOOL);
constraint array_bool_and([w_00008_00017_BOOL,aux19017_BOOL,aux19018_BOOL,aux19019_BOOL,aux19020_BOOL],aux19021_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux19022,s_00019],0);
constraint int_lt_reif(s_00015,aux19022,aux19023_BOOL);
constraint int_le_reif(s_00019, s_00015,aux19024_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux19025_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux19026_BOOL);
constraint array_bool_and([w_00008_00019_BOOL,aux19023_BOOL,aux19024_BOOL,aux19025_BOOL,aux19026_BOOL],aux19027_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19028,s_00020],0);
constraint int_lt_reif(s_00015,aux19028,aux19029_BOOL);
constraint int_le_reif(s_00020, s_00015,aux19030_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux19031_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux19032_BOOL);
constraint array_bool_and([w_00008_00020_BOOL,aux19029_BOOL,aux19030_BOOL,aux19031_BOOL,aux19032_BOOL],aux19033_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux18919_INTEGER,aux18925_INTEGER,aux18931_INTEGER,aux18937_INTEGER,aux18943_INTEGER,aux18949_INTEGER,aux18955_INTEGER,aux18961_INTEGER,aux18967_INTEGER,aux18973_INTEGER,aux18979_INTEGER,aux18985_INTEGER,aux18991_INTEGER,aux18997_INTEGER,aux19003_INTEGER,aux19009_INTEGER,aux19015_INTEGER,aux19021_INTEGER,aux19027_INTEGER,aux19033_INTEGER,1],0,aux19034_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux19035,s_00019],0);
constraint int_lt_reif(s_00019,aux19035,aux19036_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux19037_BOOL);
constraint array_bool_and([w_00008_00019_BOOL,aux19036_BOOL,aux19037_BOOL],aux19038_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux19039,s_00001],0);
constraint int_lt_reif(s_00019,aux19039,aux19040_BOOL);
constraint int_le_reif(s_00001, s_00019,aux19041_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux19042_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux19043_BOOL);
constraint array_bool_and([w_00008_00001_BOOL,aux19040_BOOL,aux19041_BOOL,aux19042_BOOL,aux19043_BOOL],aux19044_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux19045,s_00002],0);
constraint int_lt_reif(s_00019,aux19045,aux19046_BOOL);
constraint int_le_reif(s_00002, s_00019,aux19047_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux19048_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux19049_BOOL);
constraint array_bool_and([w_00008_00002_BOOL,aux19046_BOOL,aux19047_BOOL,aux19048_BOOL,aux19049_BOOL],aux19050_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19051,s_00003],0);
constraint int_lt_reif(s_00019,aux19051,aux19052_BOOL);
constraint int_le_reif(s_00003, s_00019,aux19053_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux19054_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux19055_BOOL);
constraint array_bool_and([w_00008_00003_BOOL,aux19052_BOOL,aux19053_BOOL,aux19054_BOOL,aux19055_BOOL],aux19056_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19057,s_00004],0);
constraint int_lt_reif(s_00019,aux19057,aux19058_BOOL);
constraint int_le_reif(s_00004, s_00019,aux19059_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux19060_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux19061_BOOL);
constraint array_bool_and([w_00008_00004_BOOL,aux19058_BOOL,aux19059_BOOL,aux19060_BOOL,aux19061_BOOL],aux19062_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19063,s_00005],0);
constraint int_lt_reif(s_00019,aux19063,aux19064_BOOL);
constraint int_le_reif(s_00005, s_00019,aux19065_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux19066_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux19067_BOOL);
constraint array_bool_and([w_00008_00005_BOOL,aux19064_BOOL,aux19065_BOOL,aux19066_BOOL,aux19067_BOOL],aux19068_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19069,s_00006],0);
constraint int_lt_reif(s_00019,aux19069,aux19070_BOOL);
constraint int_le_reif(s_00006, s_00019,aux19071_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux19072_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux19073_BOOL);
constraint array_bool_and([w_00008_00006_BOOL,aux19070_BOOL,aux19071_BOOL,aux19072_BOOL,aux19073_BOOL],aux19074_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19075,s_00007],0);
constraint int_lt_reif(s_00019,aux19075,aux19076_BOOL);
constraint int_le_reif(s_00007, s_00019,aux19077_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux19078_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux19079_BOOL);
constraint array_bool_and([w_00008_00007_BOOL,aux19076_BOOL,aux19077_BOOL,aux19078_BOOL,aux19079_BOOL],aux19080_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19081,s_00008],0);
constraint int_lt_reif(s_00019,aux19081,aux19082_BOOL);
constraint int_le_reif(s_00008, s_00019,aux19083_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux19084_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux19085_BOOL);
constraint array_bool_and([w_00008_00008_BOOL,aux19082_BOOL,aux19083_BOOL,aux19084_BOOL,aux19085_BOOL],aux19086_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19087,s_00009],0);
constraint int_lt_reif(s_00019,aux19087,aux19088_BOOL);
constraint int_le_reif(s_00009, s_00019,aux19089_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux19090_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux19091_BOOL);
constraint array_bool_and([w_00008_00009_BOOL,aux19088_BOOL,aux19089_BOOL,aux19090_BOOL,aux19091_BOOL],aux19092_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19093,s_00011],0);
constraint int_lt_reif(s_00019,aux19093,aux19094_BOOL);
constraint int_le_reif(s_00011, s_00019,aux19095_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux19096_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux19097_BOOL);
constraint array_bool_and([w_00008_00011_BOOL,aux19094_BOOL,aux19095_BOOL,aux19096_BOOL,aux19097_BOOL],aux19098_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux19099,s_00010],0);
constraint int_lt_reif(s_00019,aux19099,aux19100_BOOL);
constraint int_le_reif(s_00010, s_00019,aux19101_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux19102_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux19103_BOOL);
constraint array_bool_and([w_00008_00010_BOOL,aux19100_BOOL,aux19101_BOOL,aux19102_BOOL,aux19103_BOOL],aux19104_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux19105,s_00012],0);
constraint int_lt_reif(s_00019,aux19105,aux19106_BOOL);
constraint int_le_reif(s_00012, s_00019,aux19107_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux19108_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux19109_BOOL);
constraint array_bool_and([w_00008_00012_BOOL,aux19106_BOOL,aux19107_BOOL,aux19108_BOOL,aux19109_BOOL],aux19110_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19111,s_00013],0);
constraint int_lt_reif(s_00019,aux19111,aux19112_BOOL);
constraint int_le_reif(s_00013, s_00019,aux19113_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux19114_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux19115_BOOL);
constraint array_bool_and([w_00008_00013_BOOL,aux19112_BOOL,aux19113_BOOL,aux19114_BOOL,aux19115_BOOL],aux19116_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19117,s_00014],0);
constraint int_lt_reif(s_00019,aux19117,aux19118_BOOL);
constraint int_le_reif(s_00014, s_00019,aux19119_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux19120_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux19121_BOOL);
constraint array_bool_and([w_00008_00014_BOOL,aux19118_BOOL,aux19119_BOOL,aux19120_BOOL,aux19121_BOOL],aux19122_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19123,s_00015],0);
constraint int_lt_reif(s_00019,aux19123,aux19124_BOOL);
constraint int_le_reif(s_00015, s_00019,aux19125_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux19126_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux19127_BOOL);
constraint array_bool_and([w_00008_00015_BOOL,aux19124_BOOL,aux19125_BOOL,aux19126_BOOL,aux19127_BOOL],aux19128_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19129,s_00016],0);
constraint int_lt_reif(s_00019,aux19129,aux19130_BOOL);
constraint int_le_reif(s_00016, s_00019,aux19131_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux19132_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux19133_BOOL);
constraint array_bool_and([w_00008_00016_BOOL,aux19130_BOOL,aux19131_BOOL,aux19132_BOOL,aux19133_BOOL],aux19134_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19135,s_00018],0);
constraint int_lt_reif(s_00019,aux19135,aux19136_BOOL);
constraint int_le_reif(s_00018, s_00019,aux19137_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux19138_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux19139_BOOL);
constraint array_bool_and([w_00008_00018_BOOL,aux19136_BOOL,aux19137_BOOL,aux19138_BOOL,aux19139_BOOL],aux19140_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux19141,s_00017],0);
constraint int_lt_reif(s_00019,aux19141,aux19142_BOOL);
constraint int_le_reif(s_00017, s_00019,aux19143_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux19144_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux19145_BOOL);
constraint array_bool_and([w_00008_00017_BOOL,aux19142_BOOL,aux19143_BOOL,aux19144_BOOL,aux19145_BOOL],aux19146_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19147,s_00020],0);
constraint int_lt_reif(s_00019,aux19147,aux19148_BOOL);
constraint int_le_reif(s_00020, s_00019,aux19149_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux19150_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux19151_BOOL);
constraint array_bool_and([w_00008_00020_BOOL,aux19148_BOOL,aux19149_BOOL,aux19150_BOOL,aux19151_BOOL],aux19152_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux19038_INTEGER,aux19044_INTEGER,aux19050_INTEGER,aux19056_INTEGER,aux19062_INTEGER,aux19068_INTEGER,aux19074_INTEGER,aux19080_INTEGER,aux19086_INTEGER,aux19092_INTEGER,aux19098_INTEGER,aux19104_INTEGER,aux19110_INTEGER,aux19116_INTEGER,aux19122_INTEGER,aux19128_INTEGER,aux19134_INTEGER,aux19140_INTEGER,aux19146_INTEGER,aux19152_INTEGER,1],0,aux19153_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19154,s_00018],0);
constraint int_lt_reif(s_00018,aux19154,aux19155_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux19156_BOOL);
constraint array_bool_and([w_00008_00018_BOOL,aux19155_BOOL,aux19156_BOOL],aux19157_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux19158,s_00001],0);
constraint int_lt_reif(s_00018,aux19158,aux19159_BOOL);
constraint int_le_reif(s_00001, s_00018,aux19160_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux19161_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux19162_BOOL);
constraint array_bool_and([w_00008_00001_BOOL,aux19159_BOOL,aux19160_BOOL,aux19161_BOOL,aux19162_BOOL],aux19163_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux19164,s_00002],0);
constraint int_lt_reif(s_00018,aux19164,aux19165_BOOL);
constraint int_le_reif(s_00002, s_00018,aux19166_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux19167_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux19168_BOOL);
constraint array_bool_and([w_00008_00002_BOOL,aux19165_BOOL,aux19166_BOOL,aux19167_BOOL,aux19168_BOOL],aux19169_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19170,s_00003],0);
constraint int_lt_reif(s_00018,aux19170,aux19171_BOOL);
constraint int_le_reif(s_00003, s_00018,aux19172_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux19173_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux19174_BOOL);
constraint array_bool_and([w_00008_00003_BOOL,aux19171_BOOL,aux19172_BOOL,aux19173_BOOL,aux19174_BOOL],aux19175_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19176,s_00004],0);
constraint int_lt_reif(s_00018,aux19176,aux19177_BOOL);
constraint int_le_reif(s_00004, s_00018,aux19178_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux19179_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux19180_BOOL);
constraint array_bool_and([w_00008_00004_BOOL,aux19177_BOOL,aux19178_BOOL,aux19179_BOOL,aux19180_BOOL],aux19181_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19182,s_00005],0);
constraint int_lt_reif(s_00018,aux19182,aux19183_BOOL);
constraint int_le_reif(s_00005, s_00018,aux19184_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux19185_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux19186_BOOL);
constraint array_bool_and([w_00008_00005_BOOL,aux19183_BOOL,aux19184_BOOL,aux19185_BOOL,aux19186_BOOL],aux19187_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19188,s_00006],0);
constraint int_lt_reif(s_00018,aux19188,aux19189_BOOL);
constraint int_le_reif(s_00006, s_00018,aux19190_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux19191_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux19192_BOOL);
constraint array_bool_and([w_00008_00006_BOOL,aux19189_BOOL,aux19190_BOOL,aux19191_BOOL,aux19192_BOOL],aux19193_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19194,s_00007],0);
constraint int_lt_reif(s_00018,aux19194,aux19195_BOOL);
constraint int_le_reif(s_00007, s_00018,aux19196_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux19197_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux19198_BOOL);
constraint array_bool_and([w_00008_00007_BOOL,aux19195_BOOL,aux19196_BOOL,aux19197_BOOL,aux19198_BOOL],aux19199_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19200,s_00008],0);
constraint int_lt_reif(s_00018,aux19200,aux19201_BOOL);
constraint int_le_reif(s_00008, s_00018,aux19202_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux19203_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux19204_BOOL);
constraint array_bool_and([w_00008_00008_BOOL,aux19201_BOOL,aux19202_BOOL,aux19203_BOOL,aux19204_BOOL],aux19205_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19206,s_00009],0);
constraint int_lt_reif(s_00018,aux19206,aux19207_BOOL);
constraint int_le_reif(s_00009, s_00018,aux19208_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux19209_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux19210_BOOL);
constraint array_bool_and([w_00008_00009_BOOL,aux19207_BOOL,aux19208_BOOL,aux19209_BOOL,aux19210_BOOL],aux19211_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19212,s_00011],0);
constraint int_lt_reif(s_00018,aux19212,aux19213_BOOL);
constraint int_le_reif(s_00011, s_00018,aux19214_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux19215_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux19216_BOOL);
constraint array_bool_and([w_00008_00011_BOOL,aux19213_BOOL,aux19214_BOOL,aux19215_BOOL,aux19216_BOOL],aux19217_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux19218,s_00010],0);
constraint int_lt_reif(s_00018,aux19218,aux19219_BOOL);
constraint int_le_reif(s_00010, s_00018,aux19220_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux19221_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux19222_BOOL);
constraint array_bool_and([w_00008_00010_BOOL,aux19219_BOOL,aux19220_BOOL,aux19221_BOOL,aux19222_BOOL],aux19223_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux19224,s_00012],0);
constraint int_lt_reif(s_00018,aux19224,aux19225_BOOL);
constraint int_le_reif(s_00012, s_00018,aux19226_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux19227_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux19228_BOOL);
constraint array_bool_and([w_00008_00012_BOOL,aux19225_BOOL,aux19226_BOOL,aux19227_BOOL,aux19228_BOOL],aux19229_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19230,s_00013],0);
constraint int_lt_reif(s_00018,aux19230,aux19231_BOOL);
constraint int_le_reif(s_00013, s_00018,aux19232_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux19233_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux19234_BOOL);
constraint array_bool_and([w_00008_00013_BOOL,aux19231_BOOL,aux19232_BOOL,aux19233_BOOL,aux19234_BOOL],aux19235_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19236,s_00014],0);
constraint int_lt_reif(s_00018,aux19236,aux19237_BOOL);
constraint int_le_reif(s_00014, s_00018,aux19238_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux19239_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux19240_BOOL);
constraint array_bool_and([w_00008_00014_BOOL,aux19237_BOOL,aux19238_BOOL,aux19239_BOOL,aux19240_BOOL],aux19241_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19242,s_00015],0);
constraint int_lt_reif(s_00018,aux19242,aux19243_BOOL);
constraint int_le_reif(s_00015, s_00018,aux19244_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux19245_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux19246_BOOL);
constraint array_bool_and([w_00008_00015_BOOL,aux19243_BOOL,aux19244_BOOL,aux19245_BOOL,aux19246_BOOL],aux19247_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19248,s_00016],0);
constraint int_lt_reif(s_00018,aux19248,aux19249_BOOL);
constraint int_le_reif(s_00016, s_00018,aux19250_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux19251_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux19252_BOOL);
constraint array_bool_and([w_00008_00016_BOOL,aux19249_BOOL,aux19250_BOOL,aux19251_BOOL,aux19252_BOOL],aux19253_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux19254,s_00017],0);
constraint int_lt_reif(s_00018,aux19254,aux19255_BOOL);
constraint int_le_reif(s_00017, s_00018,aux19256_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux19257_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux19258_BOOL);
constraint array_bool_and([w_00008_00017_BOOL,aux19255_BOOL,aux19256_BOOL,aux19257_BOOL,aux19258_BOOL],aux19259_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux19260,s_00019],0);
constraint int_lt_reif(s_00018,aux19260,aux19261_BOOL);
constraint int_le_reif(s_00019, s_00018,aux19262_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux19263_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux19264_BOOL);
constraint array_bool_and([w_00008_00019_BOOL,aux19261_BOOL,aux19262_BOOL,aux19263_BOOL,aux19264_BOOL],aux19265_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19266,s_00020],0);
constraint int_lt_reif(s_00018,aux19266,aux19267_BOOL);
constraint int_le_reif(s_00020, s_00018,aux19268_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux19269_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux19270_BOOL);
constraint array_bool_and([w_00008_00020_BOOL,aux19267_BOOL,aux19268_BOOL,aux19269_BOOL,aux19270_BOOL],aux19271_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux19157_INTEGER,aux19163_INTEGER,aux19169_INTEGER,aux19175_INTEGER,aux19181_INTEGER,aux19187_INTEGER,aux19193_INTEGER,aux19199_INTEGER,aux19205_INTEGER,aux19211_INTEGER,aux19217_INTEGER,aux19223_INTEGER,aux19229_INTEGER,aux19235_INTEGER,aux19241_INTEGER,aux19247_INTEGER,aux19253_INTEGER,aux19259_INTEGER,aux19265_INTEGER,aux19271_INTEGER,1],0,aux19272_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux19273,s_00002],0);
constraint int_lt_reif(s_00002,aux19273,aux19274_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux19275_BOOL);
constraint array_bool_and([w_00008_00002_BOOL,aux19274_BOOL,aux19275_BOOL],aux19276_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux19277,s_00001],0);
constraint int_lt_reif(s_00002,aux19277,aux19278_BOOL);
constraint int_le_reif(s_00001, s_00002,aux19279_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux19280_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux19281_BOOL);
constraint array_bool_and([w_00008_00001_BOOL,aux19278_BOOL,aux19279_BOOL,aux19280_BOOL,aux19281_BOOL],aux19282_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19283,s_00003],0);
constraint int_lt_reif(s_00002,aux19283,aux19284_BOOL);
constraint int_le_reif(s_00003, s_00002,aux19285_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux19286_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux19287_BOOL);
constraint array_bool_and([w_00008_00003_BOOL,aux19284_BOOL,aux19285_BOOL,aux19286_BOOL,aux19287_BOOL],aux19288_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19289,s_00004],0);
constraint int_lt_reif(s_00002,aux19289,aux19290_BOOL);
constraint int_le_reif(s_00004, s_00002,aux19291_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux19292_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux19293_BOOL);
constraint array_bool_and([w_00008_00004_BOOL,aux19290_BOOL,aux19291_BOOL,aux19292_BOOL,aux19293_BOOL],aux19294_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19295,s_00005],0);
constraint int_lt_reif(s_00002,aux19295,aux19296_BOOL);
constraint int_le_reif(s_00005, s_00002,aux19297_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux19298_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux19299_BOOL);
constraint array_bool_and([w_00008_00005_BOOL,aux19296_BOOL,aux19297_BOOL,aux19298_BOOL,aux19299_BOOL],aux19300_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19301,s_00006],0);
constraint int_lt_reif(s_00002,aux19301,aux19302_BOOL);
constraint int_le_reif(s_00006, s_00002,aux19303_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux19304_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux19305_BOOL);
constraint array_bool_and([w_00008_00006_BOOL,aux19302_BOOL,aux19303_BOOL,aux19304_BOOL,aux19305_BOOL],aux19306_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19307,s_00007],0);
constraint int_lt_reif(s_00002,aux19307,aux19308_BOOL);
constraint int_le_reif(s_00007, s_00002,aux19309_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux19310_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux19311_BOOL);
constraint array_bool_and([w_00008_00007_BOOL,aux19308_BOOL,aux19309_BOOL,aux19310_BOOL,aux19311_BOOL],aux19312_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19313,s_00008],0);
constraint int_lt_reif(s_00002,aux19313,aux19314_BOOL);
constraint int_le_reif(s_00008, s_00002,aux19315_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux19316_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux19317_BOOL);
constraint array_bool_and([w_00008_00008_BOOL,aux19314_BOOL,aux19315_BOOL,aux19316_BOOL,aux19317_BOOL],aux19318_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19319,s_00009],0);
constraint int_lt_reif(s_00002,aux19319,aux19320_BOOL);
constraint int_le_reif(s_00009, s_00002,aux19321_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux19322_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux19323_BOOL);
constraint array_bool_and([w_00008_00009_BOOL,aux19320_BOOL,aux19321_BOOL,aux19322_BOOL,aux19323_BOOL],aux19324_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19325,s_00011],0);
constraint int_lt_reif(s_00002,aux19325,aux19326_BOOL);
constraint int_le_reif(s_00011, s_00002,aux19327_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux19328_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux19329_BOOL);
constraint array_bool_and([w_00008_00011_BOOL,aux19326_BOOL,aux19327_BOOL,aux19328_BOOL,aux19329_BOOL],aux19330_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux19331,s_00010],0);
constraint int_lt_reif(s_00002,aux19331,aux19332_BOOL);
constraint int_le_reif(s_00010, s_00002,aux19333_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux19334_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux19335_BOOL);
constraint array_bool_and([w_00008_00010_BOOL,aux19332_BOOL,aux19333_BOOL,aux19334_BOOL,aux19335_BOOL],aux19336_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux19337,s_00012],0);
constraint int_lt_reif(s_00002,aux19337,aux19338_BOOL);
constraint int_le_reif(s_00012, s_00002,aux19339_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux19340_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux19341_BOOL);
constraint array_bool_and([w_00008_00012_BOOL,aux19338_BOOL,aux19339_BOOL,aux19340_BOOL,aux19341_BOOL],aux19342_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19343,s_00013],0);
constraint int_lt_reif(s_00002,aux19343,aux19344_BOOL);
constraint int_le_reif(s_00013, s_00002,aux19345_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux19346_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux19347_BOOL);
constraint array_bool_and([w_00008_00013_BOOL,aux19344_BOOL,aux19345_BOOL,aux19346_BOOL,aux19347_BOOL],aux19348_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19349,s_00014],0);
constraint int_lt_reif(s_00002,aux19349,aux19350_BOOL);
constraint int_le_reif(s_00014, s_00002,aux19351_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux19352_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux19353_BOOL);
constraint array_bool_and([w_00008_00014_BOOL,aux19350_BOOL,aux19351_BOOL,aux19352_BOOL,aux19353_BOOL],aux19354_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19355,s_00015],0);
constraint int_lt_reif(s_00002,aux19355,aux19356_BOOL);
constraint int_le_reif(s_00015, s_00002,aux19357_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux19358_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux19359_BOOL);
constraint array_bool_and([w_00008_00015_BOOL,aux19356_BOOL,aux19357_BOOL,aux19358_BOOL,aux19359_BOOL],aux19360_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19361,s_00016],0);
constraint int_lt_reif(s_00002,aux19361,aux19362_BOOL);
constraint int_le_reif(s_00016, s_00002,aux19363_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux19364_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux19365_BOOL);
constraint array_bool_and([w_00008_00016_BOOL,aux19362_BOOL,aux19363_BOOL,aux19364_BOOL,aux19365_BOOL],aux19366_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19367,s_00018],0);
constraint int_lt_reif(s_00002,aux19367,aux19368_BOOL);
constraint int_le_reif(s_00018, s_00002,aux19369_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux19370_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux19371_BOOL);
constraint array_bool_and([w_00008_00018_BOOL,aux19368_BOOL,aux19369_BOOL,aux19370_BOOL,aux19371_BOOL],aux19372_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux19373,s_00017],0);
constraint int_lt_reif(s_00002,aux19373,aux19374_BOOL);
constraint int_le_reif(s_00017, s_00002,aux19375_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux19376_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux19377_BOOL);
constraint array_bool_and([w_00008_00017_BOOL,aux19374_BOOL,aux19375_BOOL,aux19376_BOOL,aux19377_BOOL],aux19378_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux19379,s_00019],0);
constraint int_lt_reif(s_00002,aux19379,aux19380_BOOL);
constraint int_le_reif(s_00019, s_00002,aux19381_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux19382_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux19383_BOOL);
constraint array_bool_and([w_00008_00019_BOOL,aux19380_BOOL,aux19381_BOOL,aux19382_BOOL,aux19383_BOOL],aux19384_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19385,s_00020],0);
constraint int_lt_reif(s_00002,aux19385,aux19386_BOOL);
constraint int_le_reif(s_00020, s_00002,aux19387_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux19388_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux19389_BOOL);
constraint array_bool_and([w_00008_00020_BOOL,aux19386_BOOL,aux19387_BOOL,aux19388_BOOL,aux19389_BOOL],aux19390_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux19276_INTEGER,aux19282_INTEGER,aux19288_INTEGER,aux19294_INTEGER,aux19300_INTEGER,aux19306_INTEGER,aux19312_INTEGER,aux19318_INTEGER,aux19324_INTEGER,aux19330_INTEGER,aux19336_INTEGER,aux19342_INTEGER,aux19348_INTEGER,aux19354_INTEGER,aux19360_INTEGER,aux19366_INTEGER,aux19372_INTEGER,aux19378_INTEGER,aux19384_INTEGER,aux19390_INTEGER,1],0,aux19391_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19392,s_00004],0);
constraint int_lt_reif(s_00004,aux19392,aux19393_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux19394_BOOL);
constraint array_bool_and([w_00008_00004_BOOL,aux19393_BOOL,aux19394_BOOL],aux19395_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux19396,s_00001],0);
constraint int_lt_reif(s_00004,aux19396,aux19397_BOOL);
constraint int_le_reif(s_00001, s_00004,aux19398_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux19399_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux19400_BOOL);
constraint array_bool_and([w_00008_00001_BOOL,aux19397_BOOL,aux19398_BOOL,aux19399_BOOL,aux19400_BOOL],aux19401_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux19402,s_00002],0);
constraint int_lt_reif(s_00004,aux19402,aux19403_BOOL);
constraint int_le_reif(s_00002, s_00004,aux19404_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux19405_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux19406_BOOL);
constraint array_bool_and([w_00008_00002_BOOL,aux19403_BOOL,aux19404_BOOL,aux19405_BOOL,aux19406_BOOL],aux19407_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19408,s_00003],0);
constraint int_lt_reif(s_00004,aux19408,aux19409_BOOL);
constraint int_le_reif(s_00003, s_00004,aux19410_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux19411_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux19412_BOOL);
constraint array_bool_and([w_00008_00003_BOOL,aux19409_BOOL,aux19410_BOOL,aux19411_BOOL,aux19412_BOOL],aux19413_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19414,s_00005],0);
constraint int_lt_reif(s_00004,aux19414,aux19415_BOOL);
constraint int_le_reif(s_00005, s_00004,aux19416_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux19417_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux19418_BOOL);
constraint array_bool_and([w_00008_00005_BOOL,aux19415_BOOL,aux19416_BOOL,aux19417_BOOL,aux19418_BOOL],aux19419_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19420,s_00006],0);
constraint int_lt_reif(s_00004,aux19420,aux19421_BOOL);
constraint int_le_reif(s_00006, s_00004,aux19422_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux19423_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux19424_BOOL);
constraint array_bool_and([w_00008_00006_BOOL,aux19421_BOOL,aux19422_BOOL,aux19423_BOOL,aux19424_BOOL],aux19425_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19426,s_00007],0);
constraint int_lt_reif(s_00004,aux19426,aux19427_BOOL);
constraint int_le_reif(s_00007, s_00004,aux19428_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux19429_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux19430_BOOL);
constraint array_bool_and([w_00008_00007_BOOL,aux19427_BOOL,aux19428_BOOL,aux19429_BOOL,aux19430_BOOL],aux19431_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19432,s_00008],0);
constraint int_lt_reif(s_00004,aux19432,aux19433_BOOL);
constraint int_le_reif(s_00008, s_00004,aux19434_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux19435_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux19436_BOOL);
constraint array_bool_and([w_00008_00008_BOOL,aux19433_BOOL,aux19434_BOOL,aux19435_BOOL,aux19436_BOOL],aux19437_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19438,s_00009],0);
constraint int_lt_reif(s_00004,aux19438,aux19439_BOOL);
constraint int_le_reif(s_00009, s_00004,aux19440_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux19441_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux19442_BOOL);
constraint array_bool_and([w_00008_00009_BOOL,aux19439_BOOL,aux19440_BOOL,aux19441_BOOL,aux19442_BOOL],aux19443_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19444,s_00011],0);
constraint int_lt_reif(s_00004,aux19444,aux19445_BOOL);
constraint int_le_reif(s_00011, s_00004,aux19446_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux19447_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux19448_BOOL);
constraint array_bool_and([w_00008_00011_BOOL,aux19445_BOOL,aux19446_BOOL,aux19447_BOOL,aux19448_BOOL],aux19449_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux19450,s_00010],0);
constraint int_lt_reif(s_00004,aux19450,aux19451_BOOL);
constraint int_le_reif(s_00010, s_00004,aux19452_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux19453_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux19454_BOOL);
constraint array_bool_and([w_00008_00010_BOOL,aux19451_BOOL,aux19452_BOOL,aux19453_BOOL,aux19454_BOOL],aux19455_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux19456,s_00012],0);
constraint int_lt_reif(s_00004,aux19456,aux19457_BOOL);
constraint int_le_reif(s_00012, s_00004,aux19458_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux19459_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux19460_BOOL);
constraint array_bool_and([w_00008_00012_BOOL,aux19457_BOOL,aux19458_BOOL,aux19459_BOOL,aux19460_BOOL],aux19461_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19462,s_00013],0);
constraint int_lt_reif(s_00004,aux19462,aux19463_BOOL);
constraint int_le_reif(s_00013, s_00004,aux19464_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux19465_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux19466_BOOL);
constraint array_bool_and([w_00008_00013_BOOL,aux19463_BOOL,aux19464_BOOL,aux19465_BOOL,aux19466_BOOL],aux19467_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19468,s_00014],0);
constraint int_lt_reif(s_00004,aux19468,aux19469_BOOL);
constraint int_le_reif(s_00014, s_00004,aux19470_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux19471_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux19472_BOOL);
constraint array_bool_and([w_00008_00014_BOOL,aux19469_BOOL,aux19470_BOOL,aux19471_BOOL,aux19472_BOOL],aux19473_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19474,s_00015],0);
constraint int_lt_reif(s_00004,aux19474,aux19475_BOOL);
constraint int_le_reif(s_00015, s_00004,aux19476_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux19477_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux19478_BOOL);
constraint array_bool_and([w_00008_00015_BOOL,aux19475_BOOL,aux19476_BOOL,aux19477_BOOL,aux19478_BOOL],aux19479_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19480,s_00016],0);
constraint int_lt_reif(s_00004,aux19480,aux19481_BOOL);
constraint int_le_reif(s_00016, s_00004,aux19482_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux19483_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux19484_BOOL);
constraint array_bool_and([w_00008_00016_BOOL,aux19481_BOOL,aux19482_BOOL,aux19483_BOOL,aux19484_BOOL],aux19485_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19486,s_00018],0);
constraint int_lt_reif(s_00004,aux19486,aux19487_BOOL);
constraint int_le_reif(s_00018, s_00004,aux19488_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux19489_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux19490_BOOL);
constraint array_bool_and([w_00008_00018_BOOL,aux19487_BOOL,aux19488_BOOL,aux19489_BOOL,aux19490_BOOL],aux19491_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux19492,s_00017],0);
constraint int_lt_reif(s_00004,aux19492,aux19493_BOOL);
constraint int_le_reif(s_00017, s_00004,aux19494_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux19495_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux19496_BOOL);
constraint array_bool_and([w_00008_00017_BOOL,aux19493_BOOL,aux19494_BOOL,aux19495_BOOL,aux19496_BOOL],aux19497_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux19498,s_00019],0);
constraint int_lt_reif(s_00004,aux19498,aux19499_BOOL);
constraint int_le_reif(s_00019, s_00004,aux19500_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux19501_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux19502_BOOL);
constraint array_bool_and([w_00008_00019_BOOL,aux19499_BOOL,aux19500_BOOL,aux19501_BOOL,aux19502_BOOL],aux19503_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19504,s_00020],0);
constraint int_lt_reif(s_00004,aux19504,aux19505_BOOL);
constraint int_le_reif(s_00020, s_00004,aux19506_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux19507_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux19508_BOOL);
constraint array_bool_and([w_00008_00020_BOOL,aux19505_BOOL,aux19506_BOOL,aux19507_BOOL,aux19508_BOOL],aux19509_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux19395_INTEGER,aux19401_INTEGER,aux19407_INTEGER,aux19413_INTEGER,aux19419_INTEGER,aux19425_INTEGER,aux19431_INTEGER,aux19437_INTEGER,aux19443_INTEGER,aux19449_INTEGER,aux19455_INTEGER,aux19461_INTEGER,aux19467_INTEGER,aux19473_INTEGER,aux19479_INTEGER,aux19485_INTEGER,aux19491_INTEGER,aux19497_INTEGER,aux19503_INTEGER,aux19509_INTEGER,1],0,aux19510_BOOL);
constraint array_bool_and([aux17249_BOOL,aux17368_BOOL,aux17487_BOOL,aux17606_BOOL,aux17725_BOOL,aux17844_BOOL,aux17963_BOOL,aux18082_BOOL,aux18201_BOOL,aux18320_BOOL,aux18439_BOOL,aux18558_BOOL,aux18677_BOOL,aux18796_BOOL,aux18915_BOOL,aux19034_BOOL,aux19153_BOOL,aux19272_BOOL,aux19391_BOOL,aux19510_BOOL],aux19511_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[TWorkers_00009_00001_INTEGER,TWorkers_00009_00002_INTEGER,TWorkers_00009_00003_INTEGER,TWorkers_00009_00004_INTEGER,TWorkers_00009_00005_INTEGER,TWorkers_00009_00006_INTEGER,TWorkers_00009_00007_INTEGER,TWorkers_00009_00008_INTEGER,TWorkers_00009_00009_INTEGER,TWorkers_00009_00010_INTEGER,TWorkers_00009_00011_INTEGER,TWorkers_00009_00012_INTEGER,TWorkers_00009_00013_INTEGER,TWorkers_00009_00014_INTEGER,TWorkers_00009_00015_INTEGER,TWorkers_00009_00016_INTEGER,TWorkers_00009_00017_INTEGER,TWorkers_00009_00018_INTEGER,TWorkers_00009_00019_INTEGER,TWorkers_00009_00020_INTEGER,1],0,aux19512_BOOL);
constraint int_eq_reif(TWorkers_00009_00001_INTEGER,1,aux19513_BOOL);
constraint int_eq_reif(TWorkers_00009_00006_INTEGER,1,aux19514_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux19515,s_00001],0);
constraint int_lt_reif(s_00006,aux19515,aux19516_BOOL);
constraint int_le_reif(s_00001, s_00006,aux19517_BOOL);
constraint array_bool_and([aux19513_BOOL,aux19514_BOOL,aux19516_BOOL,w_00009_00001_BOOL,aux19517_BOOL],aux19518_BOOL);
constraint int_eq_reif(TWorkers_00009_00002_INTEGER,1,aux19519_BOOL);
constraint int_eq_reif(TWorkers_00009_00006_INTEGER,1,aux19520_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux19521,s_00002],0);
constraint int_lt_reif(s_00006,aux19521,aux19522_BOOL);
constraint int_le_reif(s_00002, s_00006,aux19523_BOOL);
constraint array_bool_and([aux19519_BOOL,aux19520_BOOL,aux19522_BOOL,w_00009_00002_BOOL,aux19523_BOOL],aux19524_BOOL);
constraint int_eq_reif(TWorkers_00009_00003_INTEGER,1,aux19525_BOOL);
constraint int_eq_reif(TWorkers_00009_00006_INTEGER,1,aux19526_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19527,s_00003],0);
constraint int_lt_reif(s_00006,aux19527,aux19528_BOOL);
constraint int_le_reif(s_00003, s_00006,aux19529_BOOL);
constraint array_bool_and([aux19525_BOOL,aux19526_BOOL,aux19528_BOOL,w_00009_00003_BOOL,aux19529_BOOL],aux19530_BOOL);
constraint int_eq_reif(TWorkers_00009_00004_INTEGER,1,aux19531_BOOL);
constraint int_eq_reif(TWorkers_00009_00006_INTEGER,1,aux19532_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19533,s_00004],0);
constraint int_lt_reif(s_00006,aux19533,aux19534_BOOL);
constraint int_le_reif(s_00004, s_00006,aux19535_BOOL);
constraint array_bool_and([aux19531_BOOL,aux19532_BOOL,aux19534_BOOL,w_00009_00004_BOOL,aux19535_BOOL],aux19536_BOOL);
constraint int_eq_reif(TWorkers_00009_00005_INTEGER,1,aux19537_BOOL);
constraint int_eq_reif(TWorkers_00009_00006_INTEGER,1,aux19538_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19539,s_00005],0);
constraint int_lt_reif(s_00006,aux19539,aux19540_BOOL);
constraint int_le_reif(s_00005, s_00006,aux19541_BOOL);
constraint array_bool_and([aux19537_BOOL,aux19538_BOOL,aux19540_BOOL,w_00009_00005_BOOL,aux19541_BOOL],aux19542_BOOL);
constraint int_eq_reif(TWorkers_00009_00006_INTEGER,1,aux19543_BOOL);
constraint int_eq_reif(TWorkers_00009_00007_INTEGER,1,aux19544_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19545,s_00007],0);
constraint int_lt_reif(s_00006,aux19545,aux19546_BOOL);
constraint int_le_reif(s_00007, s_00006,aux19547_BOOL);
constraint array_bool_and([aux19543_BOOL,aux19544_BOOL,aux19546_BOOL,w_00009_00007_BOOL,aux19547_BOOL],aux19548_BOOL);
constraint int_eq_reif(TWorkers_00009_00006_INTEGER,1,aux19549_BOOL);
constraint int_eq_reif(TWorkers_00009_00008_INTEGER,1,aux19550_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19551,s_00008],0);
constraint int_lt_reif(s_00006,aux19551,aux19552_BOOL);
constraint int_le_reif(s_00008, s_00006,aux19553_BOOL);
constraint array_bool_and([aux19549_BOOL,aux19550_BOOL,aux19552_BOOL,w_00009_00008_BOOL,aux19553_BOOL],aux19554_BOOL);
constraint int_eq_reif(TWorkers_00009_00006_INTEGER,1,aux19555_BOOL);
constraint int_eq_reif(TWorkers_00009_00009_INTEGER,1,aux19556_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19557,s_00009],0);
constraint int_lt_reif(s_00006,aux19557,aux19558_BOOL);
constraint int_le_reif(s_00009, s_00006,aux19559_BOOL);
constraint array_bool_and([aux19555_BOOL,aux19556_BOOL,aux19558_BOOL,w_00009_00009_BOOL,aux19559_BOOL],aux19560_BOOL);
constraint int_eq_reif(TWorkers_00009_00006_INTEGER,1,aux19561_BOOL);
constraint int_eq_reif(TWorkers_00009_00010_INTEGER,1,aux19562_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux19563,s_00010],0);
constraint int_lt_reif(s_00006,aux19563,aux19564_BOOL);
constraint int_le_reif(s_00010, s_00006,aux19565_BOOL);
constraint array_bool_and([aux19561_BOOL,aux19562_BOOL,aux19564_BOOL,w_00009_00010_BOOL,aux19565_BOOL],aux19566_BOOL);
constraint int_eq_reif(TWorkers_00009_00006_INTEGER,1,aux19567_BOOL);
constraint int_eq_reif(TWorkers_00009_00011_INTEGER,1,aux19568_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19569,s_00011],0);
constraint int_lt_reif(s_00006,aux19569,aux19570_BOOL);
constraint int_le_reif(s_00011, s_00006,aux19571_BOOL);
constraint array_bool_and([aux19567_BOOL,aux19568_BOOL,aux19570_BOOL,w_00009_00011_BOOL,aux19571_BOOL],aux19572_BOOL);
constraint int_eq_reif(TWorkers_00009_00006_INTEGER,1,aux19573_BOOL);
constraint int_eq_reif(TWorkers_00009_00012_INTEGER,1,aux19574_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux19575,s_00012],0);
constraint int_lt_reif(s_00006,aux19575,aux19576_BOOL);
constraint int_le_reif(s_00012, s_00006,aux19577_BOOL);
constraint array_bool_and([aux19573_BOOL,aux19574_BOOL,aux19576_BOOL,w_00009_00012_BOOL,aux19577_BOOL],aux19578_BOOL);
constraint int_eq_reif(TWorkers_00009_00006_INTEGER,1,aux19579_BOOL);
constraint int_eq_reif(TWorkers_00009_00013_INTEGER,1,aux19580_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19581,s_00013],0);
constraint int_lt_reif(s_00006,aux19581,aux19582_BOOL);
constraint int_le_reif(s_00013, s_00006,aux19583_BOOL);
constraint array_bool_and([aux19579_BOOL,aux19580_BOOL,aux19582_BOOL,w_00009_00013_BOOL,aux19583_BOOL],aux19584_BOOL);
constraint int_eq_reif(TWorkers_00009_00006_INTEGER,1,aux19585_BOOL);
constraint int_eq_reif(TWorkers_00009_00014_INTEGER,1,aux19586_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19587,s_00014],0);
constraint int_lt_reif(s_00006,aux19587,aux19588_BOOL);
constraint int_le_reif(s_00014, s_00006,aux19589_BOOL);
constraint array_bool_and([aux19585_BOOL,aux19586_BOOL,aux19588_BOOL,w_00009_00014_BOOL,aux19589_BOOL],aux19590_BOOL);
constraint int_eq_reif(TWorkers_00009_00006_INTEGER,1,aux19591_BOOL);
constraint int_eq_reif(TWorkers_00009_00015_INTEGER,1,aux19592_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19593,s_00015],0);
constraint int_lt_reif(s_00006,aux19593,aux19594_BOOL);
constraint int_le_reif(s_00015, s_00006,aux19595_BOOL);
constraint array_bool_and([aux19591_BOOL,aux19592_BOOL,aux19594_BOOL,w_00009_00015_BOOL,aux19595_BOOL],aux19596_BOOL);
constraint int_eq_reif(TWorkers_00009_00006_INTEGER,1,aux19597_BOOL);
constraint int_eq_reif(TWorkers_00009_00016_INTEGER,1,aux19598_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19599,s_00016],0);
constraint int_lt_reif(s_00006,aux19599,aux19600_BOOL);
constraint int_le_reif(s_00016, s_00006,aux19601_BOOL);
constraint array_bool_and([aux19597_BOOL,aux19598_BOOL,aux19600_BOOL,w_00009_00016_BOOL,aux19601_BOOL],aux19602_BOOL);
constraint int_eq_reif(TWorkers_00009_00006_INTEGER,1,aux19603_BOOL);
constraint int_eq_reif(TWorkers_00009_00017_INTEGER,1,aux19604_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux19605,s_00017],0);
constraint int_lt_reif(s_00006,aux19605,aux19606_BOOL);
constraint int_le_reif(s_00017, s_00006,aux19607_BOOL);
constraint array_bool_and([aux19603_BOOL,aux19604_BOOL,aux19606_BOOL,w_00009_00017_BOOL,aux19607_BOOL],aux19608_BOOL);
constraint int_eq_reif(TWorkers_00009_00006_INTEGER,1,aux19609_BOOL);
constraint int_eq_reif(TWorkers_00009_00018_INTEGER,1,aux19610_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19611,s_00018],0);
constraint int_lt_reif(s_00006,aux19611,aux19612_BOOL);
constraint int_le_reif(s_00018, s_00006,aux19613_BOOL);
constraint array_bool_and([aux19609_BOOL,aux19610_BOOL,aux19612_BOOL,w_00009_00018_BOOL,aux19613_BOOL],aux19614_BOOL);
constraint int_eq_reif(TWorkers_00009_00006_INTEGER,1,aux19615_BOOL);
constraint int_eq_reif(TWorkers_00009_00019_INTEGER,1,aux19616_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux19617,s_00019],0);
constraint int_lt_reif(s_00006,aux19617,aux19618_BOOL);
constraint int_le_reif(s_00019, s_00006,aux19619_BOOL);
constraint array_bool_and([aux19615_BOOL,aux19616_BOOL,aux19618_BOOL,w_00009_00019_BOOL,aux19619_BOOL],aux19620_BOOL);
constraint int_eq_reif(TWorkers_00009_00006_INTEGER,1,aux19621_BOOL);
constraint int_eq_reif(TWorkers_00009_00020_INTEGER,1,aux19622_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19623,s_00020],0);
constraint int_lt_reif(s_00006,aux19623,aux19624_BOOL);
constraint int_le_reif(s_00020, s_00006,aux19625_BOOL);
constraint array_bool_and([aux19621_BOOL,aux19622_BOOL,aux19624_BOOL,w_00009_00020_BOOL,aux19625_BOOL],aux19626_BOOL);
constraint int_eq_reif(TWorkers_00009_00006_INTEGER,1,aux19627_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19628,s_00006],0);
constraint int_lt_reif(s_00006,aux19628,aux19629_BOOL);
constraint array_bool_and([aux19627_BOOL,aux19629_BOOL,w_00009_00006_BOOL],aux19630_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux19518_INTEGER,aux19524_INTEGER,aux19530_INTEGER,aux19536_INTEGER,aux19542_INTEGER,aux19548_INTEGER,aux19554_INTEGER,aux19560_INTEGER,aux19566_INTEGER,aux19572_INTEGER,aux19578_INTEGER,aux19584_INTEGER,aux19590_INTEGER,aux19596_INTEGER,aux19602_INTEGER,aux19608_INTEGER,aux19614_INTEGER,aux19620_INTEGER,aux19626_INTEGER,aux19630_INTEGER,1],0,aux19631_BOOL);
constraint int_eq_reif(TWorkers_00009_00001_INTEGER,1,aux19632_BOOL);
constraint int_eq_reif(TWorkers_00009_00018_INTEGER,1,aux19633_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux19634,s_00001],0);
constraint int_lt_reif(s_00018,aux19634,aux19635_BOOL);
constraint int_le_reif(s_00001, s_00018,aux19636_BOOL);
constraint array_bool_and([aux19632_BOOL,aux19633_BOOL,aux19635_BOOL,w_00009_00001_BOOL,aux19636_BOOL],aux19637_BOOL);
constraint int_eq_reif(TWorkers_00009_00002_INTEGER,1,aux19638_BOOL);
constraint int_eq_reif(TWorkers_00009_00018_INTEGER,1,aux19639_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux19640,s_00002],0);
constraint int_lt_reif(s_00018,aux19640,aux19641_BOOL);
constraint int_le_reif(s_00002, s_00018,aux19642_BOOL);
constraint array_bool_and([aux19638_BOOL,aux19639_BOOL,aux19641_BOOL,w_00009_00002_BOOL,aux19642_BOOL],aux19643_BOOL);
constraint int_eq_reif(TWorkers_00009_00003_INTEGER,1,aux19644_BOOL);
constraint int_eq_reif(TWorkers_00009_00018_INTEGER,1,aux19645_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19646,s_00003],0);
constraint int_lt_reif(s_00018,aux19646,aux19647_BOOL);
constraint int_le_reif(s_00003, s_00018,aux19648_BOOL);
constraint array_bool_and([aux19644_BOOL,aux19645_BOOL,aux19647_BOOL,w_00009_00003_BOOL,aux19648_BOOL],aux19649_BOOL);
constraint int_eq_reif(TWorkers_00009_00004_INTEGER,1,aux19650_BOOL);
constraint int_eq_reif(TWorkers_00009_00018_INTEGER,1,aux19651_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19652,s_00004],0);
constraint int_lt_reif(s_00018,aux19652,aux19653_BOOL);
constraint int_le_reif(s_00004, s_00018,aux19654_BOOL);
constraint array_bool_and([aux19650_BOOL,aux19651_BOOL,aux19653_BOOL,w_00009_00004_BOOL,aux19654_BOOL],aux19655_BOOL);
constraint int_eq_reif(TWorkers_00009_00005_INTEGER,1,aux19656_BOOL);
constraint int_eq_reif(TWorkers_00009_00018_INTEGER,1,aux19657_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19658,s_00005],0);
constraint int_lt_reif(s_00018,aux19658,aux19659_BOOL);
constraint int_le_reif(s_00005, s_00018,aux19660_BOOL);
constraint array_bool_and([aux19656_BOOL,aux19657_BOOL,aux19659_BOOL,w_00009_00005_BOOL,aux19660_BOOL],aux19661_BOOL);
constraint int_eq_reif(TWorkers_00009_00006_INTEGER,1,aux19662_BOOL);
constraint int_eq_reif(TWorkers_00009_00018_INTEGER,1,aux19663_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19664,s_00006],0);
constraint int_lt_reif(s_00018,aux19664,aux19665_BOOL);
constraint int_le_reif(s_00006, s_00018,aux19666_BOOL);
constraint array_bool_and([aux19662_BOOL,aux19663_BOOL,aux19665_BOOL,w_00009_00006_BOOL,aux19666_BOOL],aux19667_BOOL);
constraint int_eq_reif(TWorkers_00009_00007_INTEGER,1,aux19668_BOOL);
constraint int_eq_reif(TWorkers_00009_00018_INTEGER,1,aux19669_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19670,s_00007],0);
constraint int_lt_reif(s_00018,aux19670,aux19671_BOOL);
constraint int_le_reif(s_00007, s_00018,aux19672_BOOL);
constraint array_bool_and([aux19668_BOOL,aux19669_BOOL,aux19671_BOOL,w_00009_00007_BOOL,aux19672_BOOL],aux19673_BOOL);
constraint int_eq_reif(TWorkers_00009_00008_INTEGER,1,aux19674_BOOL);
constraint int_eq_reif(TWorkers_00009_00018_INTEGER,1,aux19675_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19676,s_00008],0);
constraint int_lt_reif(s_00018,aux19676,aux19677_BOOL);
constraint int_le_reif(s_00008, s_00018,aux19678_BOOL);
constraint array_bool_and([aux19674_BOOL,aux19675_BOOL,aux19677_BOOL,w_00009_00008_BOOL,aux19678_BOOL],aux19679_BOOL);
constraint int_eq_reif(TWorkers_00009_00009_INTEGER,1,aux19680_BOOL);
constraint int_eq_reif(TWorkers_00009_00018_INTEGER,1,aux19681_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19682,s_00009],0);
constraint int_lt_reif(s_00018,aux19682,aux19683_BOOL);
constraint int_le_reif(s_00009, s_00018,aux19684_BOOL);
constraint array_bool_and([aux19680_BOOL,aux19681_BOOL,aux19683_BOOL,w_00009_00009_BOOL,aux19684_BOOL],aux19685_BOOL);
constraint int_eq_reif(TWorkers_00009_00010_INTEGER,1,aux19686_BOOL);
constraint int_eq_reif(TWorkers_00009_00018_INTEGER,1,aux19687_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux19688,s_00010],0);
constraint int_lt_reif(s_00018,aux19688,aux19689_BOOL);
constraint int_le_reif(s_00010, s_00018,aux19690_BOOL);
constraint array_bool_and([aux19686_BOOL,aux19687_BOOL,aux19689_BOOL,w_00009_00010_BOOL,aux19690_BOOL],aux19691_BOOL);
constraint int_eq_reif(TWorkers_00009_00011_INTEGER,1,aux19692_BOOL);
constraint int_eq_reif(TWorkers_00009_00018_INTEGER,1,aux19693_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19694,s_00011],0);
constraint int_lt_reif(s_00018,aux19694,aux19695_BOOL);
constraint int_le_reif(s_00011, s_00018,aux19696_BOOL);
constraint array_bool_and([aux19692_BOOL,aux19693_BOOL,aux19695_BOOL,w_00009_00011_BOOL,aux19696_BOOL],aux19697_BOOL);
constraint int_eq_reif(TWorkers_00009_00012_INTEGER,1,aux19698_BOOL);
constraint int_eq_reif(TWorkers_00009_00018_INTEGER,1,aux19699_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux19700,s_00012],0);
constraint int_lt_reif(s_00018,aux19700,aux19701_BOOL);
constraint int_le_reif(s_00012, s_00018,aux19702_BOOL);
constraint array_bool_and([aux19698_BOOL,aux19699_BOOL,aux19701_BOOL,w_00009_00012_BOOL,aux19702_BOOL],aux19703_BOOL);
constraint int_eq_reif(TWorkers_00009_00013_INTEGER,1,aux19704_BOOL);
constraint int_eq_reif(TWorkers_00009_00018_INTEGER,1,aux19705_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19706,s_00013],0);
constraint int_lt_reif(s_00018,aux19706,aux19707_BOOL);
constraint int_le_reif(s_00013, s_00018,aux19708_BOOL);
constraint array_bool_and([aux19704_BOOL,aux19705_BOOL,aux19707_BOOL,w_00009_00013_BOOL,aux19708_BOOL],aux19709_BOOL);
constraint int_eq_reif(TWorkers_00009_00014_INTEGER,1,aux19710_BOOL);
constraint int_eq_reif(TWorkers_00009_00018_INTEGER,1,aux19711_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19712,s_00014],0);
constraint int_lt_reif(s_00018,aux19712,aux19713_BOOL);
constraint int_le_reif(s_00014, s_00018,aux19714_BOOL);
constraint array_bool_and([aux19710_BOOL,aux19711_BOOL,aux19713_BOOL,w_00009_00014_BOOL,aux19714_BOOL],aux19715_BOOL);
constraint int_eq_reif(TWorkers_00009_00015_INTEGER,1,aux19716_BOOL);
constraint int_eq_reif(TWorkers_00009_00018_INTEGER,1,aux19717_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19718,s_00015],0);
constraint int_lt_reif(s_00018,aux19718,aux19719_BOOL);
constraint int_le_reif(s_00015, s_00018,aux19720_BOOL);
constraint array_bool_and([aux19716_BOOL,aux19717_BOOL,aux19719_BOOL,w_00009_00015_BOOL,aux19720_BOOL],aux19721_BOOL);
constraint int_eq_reif(TWorkers_00009_00016_INTEGER,1,aux19722_BOOL);
constraint int_eq_reif(TWorkers_00009_00018_INTEGER,1,aux19723_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19724,s_00016],0);
constraint int_lt_reif(s_00018,aux19724,aux19725_BOOL);
constraint int_le_reif(s_00016, s_00018,aux19726_BOOL);
constraint array_bool_and([aux19722_BOOL,aux19723_BOOL,aux19725_BOOL,w_00009_00016_BOOL,aux19726_BOOL],aux19727_BOOL);
constraint int_eq_reif(TWorkers_00009_00017_INTEGER,1,aux19728_BOOL);
constraint int_eq_reif(TWorkers_00009_00018_INTEGER,1,aux19729_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux19730,s_00017],0);
constraint int_lt_reif(s_00018,aux19730,aux19731_BOOL);
constraint int_le_reif(s_00017, s_00018,aux19732_BOOL);
constraint array_bool_and([aux19728_BOOL,aux19729_BOOL,aux19731_BOOL,w_00009_00017_BOOL,aux19732_BOOL],aux19733_BOOL);
constraint int_eq_reif(TWorkers_00009_00018_INTEGER,1,aux19734_BOOL);
constraint int_eq_reif(TWorkers_00009_00019_INTEGER,1,aux19735_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux19736,s_00019],0);
constraint int_lt_reif(s_00018,aux19736,aux19737_BOOL);
constraint int_le_reif(s_00019, s_00018,aux19738_BOOL);
constraint array_bool_and([aux19734_BOOL,aux19735_BOOL,aux19737_BOOL,w_00009_00019_BOOL,aux19738_BOOL],aux19739_BOOL);
constraint int_eq_reif(TWorkers_00009_00018_INTEGER,1,aux19740_BOOL);
constraint int_eq_reif(TWorkers_00009_00020_INTEGER,1,aux19741_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19742,s_00020],0);
constraint int_lt_reif(s_00018,aux19742,aux19743_BOOL);
constraint int_le_reif(s_00020, s_00018,aux19744_BOOL);
constraint array_bool_and([aux19740_BOOL,aux19741_BOOL,aux19743_BOOL,w_00009_00020_BOOL,aux19744_BOOL],aux19745_BOOL);
constraint int_eq_reif(TWorkers_00009_00018_INTEGER,1,aux19746_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19747,s_00018],0);
constraint int_lt_reif(s_00018,aux19747,aux19748_BOOL);
constraint array_bool_and([aux19746_BOOL,aux19748_BOOL,w_00009_00018_BOOL],aux19749_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux19637_INTEGER,aux19643_INTEGER,aux19649_INTEGER,aux19655_INTEGER,aux19661_INTEGER,aux19667_INTEGER,aux19673_INTEGER,aux19679_INTEGER,aux19685_INTEGER,aux19691_INTEGER,aux19697_INTEGER,aux19703_INTEGER,aux19709_INTEGER,aux19715_INTEGER,aux19721_INTEGER,aux19727_INTEGER,aux19733_INTEGER,aux19739_INTEGER,aux19745_INTEGER,aux19749_INTEGER,1],0,aux19750_BOOL);
constraint int_eq_reif(TWorkers_00009_00001_INTEGER,1,aux19751_BOOL);
constraint int_eq_reif(TWorkers_00009_00010_INTEGER,1,aux19752_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux19753,s_00001],0);
constraint int_lt_reif(s_00010,aux19753,aux19754_BOOL);
constraint int_le_reif(s_00001, s_00010,aux19755_BOOL);
constraint array_bool_and([aux19751_BOOL,aux19752_BOOL,aux19754_BOOL,w_00009_00001_BOOL,aux19755_BOOL],aux19756_BOOL);
constraint int_eq_reif(TWorkers_00009_00002_INTEGER,1,aux19757_BOOL);
constraint int_eq_reif(TWorkers_00009_00010_INTEGER,1,aux19758_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux19759,s_00002],0);
constraint int_lt_reif(s_00010,aux19759,aux19760_BOOL);
constraint int_le_reif(s_00002, s_00010,aux19761_BOOL);
constraint array_bool_and([aux19757_BOOL,aux19758_BOOL,aux19760_BOOL,w_00009_00002_BOOL,aux19761_BOOL],aux19762_BOOL);
constraint int_eq_reif(TWorkers_00009_00003_INTEGER,1,aux19763_BOOL);
constraint int_eq_reif(TWorkers_00009_00010_INTEGER,1,aux19764_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19765,s_00003],0);
constraint int_lt_reif(s_00010,aux19765,aux19766_BOOL);
constraint int_le_reif(s_00003, s_00010,aux19767_BOOL);
constraint array_bool_and([aux19763_BOOL,aux19764_BOOL,aux19766_BOOL,w_00009_00003_BOOL,aux19767_BOOL],aux19768_BOOL);
constraint int_eq_reif(TWorkers_00009_00004_INTEGER,1,aux19769_BOOL);
constraint int_eq_reif(TWorkers_00009_00010_INTEGER,1,aux19770_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19771,s_00004],0);
constraint int_lt_reif(s_00010,aux19771,aux19772_BOOL);
constraint int_le_reif(s_00004, s_00010,aux19773_BOOL);
constraint array_bool_and([aux19769_BOOL,aux19770_BOOL,aux19772_BOOL,w_00009_00004_BOOL,aux19773_BOOL],aux19774_BOOL);
constraint int_eq_reif(TWorkers_00009_00005_INTEGER,1,aux19775_BOOL);
constraint int_eq_reif(TWorkers_00009_00010_INTEGER,1,aux19776_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19777,s_00005],0);
constraint int_lt_reif(s_00010,aux19777,aux19778_BOOL);
constraint int_le_reif(s_00005, s_00010,aux19779_BOOL);
constraint array_bool_and([aux19775_BOOL,aux19776_BOOL,aux19778_BOOL,w_00009_00005_BOOL,aux19779_BOOL],aux19780_BOOL);
constraint int_eq_reif(TWorkers_00009_00006_INTEGER,1,aux19781_BOOL);
constraint int_eq_reif(TWorkers_00009_00010_INTEGER,1,aux19782_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19783,s_00006],0);
constraint int_lt_reif(s_00010,aux19783,aux19784_BOOL);
constraint int_le_reif(s_00006, s_00010,aux19785_BOOL);
constraint array_bool_and([aux19781_BOOL,aux19782_BOOL,aux19784_BOOL,w_00009_00006_BOOL,aux19785_BOOL],aux19786_BOOL);
constraint int_eq_reif(TWorkers_00009_00007_INTEGER,1,aux19787_BOOL);
constraint int_eq_reif(TWorkers_00009_00010_INTEGER,1,aux19788_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19789,s_00007],0);
constraint int_lt_reif(s_00010,aux19789,aux19790_BOOL);
constraint int_le_reif(s_00007, s_00010,aux19791_BOOL);
constraint array_bool_and([aux19787_BOOL,aux19788_BOOL,aux19790_BOOL,w_00009_00007_BOOL,aux19791_BOOL],aux19792_BOOL);
constraint int_eq_reif(TWorkers_00009_00008_INTEGER,1,aux19793_BOOL);
constraint int_eq_reif(TWorkers_00009_00010_INTEGER,1,aux19794_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19795,s_00008],0);
constraint int_lt_reif(s_00010,aux19795,aux19796_BOOL);
constraint int_le_reif(s_00008, s_00010,aux19797_BOOL);
constraint array_bool_and([aux19793_BOOL,aux19794_BOOL,aux19796_BOOL,w_00009_00008_BOOL,aux19797_BOOL],aux19798_BOOL);
constraint int_eq_reif(TWorkers_00009_00009_INTEGER,1,aux19799_BOOL);
constraint int_eq_reif(TWorkers_00009_00010_INTEGER,1,aux19800_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19801,s_00009],0);
constraint int_lt_reif(s_00010,aux19801,aux19802_BOOL);
constraint int_le_reif(s_00009, s_00010,aux19803_BOOL);
constraint array_bool_and([aux19799_BOOL,aux19800_BOOL,aux19802_BOOL,w_00009_00009_BOOL,aux19803_BOOL],aux19804_BOOL);
constraint int_eq_reif(TWorkers_00009_00010_INTEGER,1,aux19805_BOOL);
constraint int_eq_reif(TWorkers_00009_00011_INTEGER,1,aux19806_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19807,s_00011],0);
constraint int_lt_reif(s_00010,aux19807,aux19808_BOOL);
constraint int_le_reif(s_00011, s_00010,aux19809_BOOL);
constraint array_bool_and([aux19805_BOOL,aux19806_BOOL,aux19808_BOOL,w_00009_00011_BOOL,aux19809_BOOL],aux19810_BOOL);
constraint int_eq_reif(TWorkers_00009_00010_INTEGER,1,aux19811_BOOL);
constraint int_eq_reif(TWorkers_00009_00012_INTEGER,1,aux19812_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux19813,s_00012],0);
constraint int_lt_reif(s_00010,aux19813,aux19814_BOOL);
constraint int_le_reif(s_00012, s_00010,aux19815_BOOL);
constraint array_bool_and([aux19811_BOOL,aux19812_BOOL,aux19814_BOOL,w_00009_00012_BOOL,aux19815_BOOL],aux19816_BOOL);
constraint int_eq_reif(TWorkers_00009_00010_INTEGER,1,aux19817_BOOL);
constraint int_eq_reif(TWorkers_00009_00013_INTEGER,1,aux19818_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19819,s_00013],0);
constraint int_lt_reif(s_00010,aux19819,aux19820_BOOL);
constraint int_le_reif(s_00013, s_00010,aux19821_BOOL);
constraint array_bool_and([aux19817_BOOL,aux19818_BOOL,aux19820_BOOL,w_00009_00013_BOOL,aux19821_BOOL],aux19822_BOOL);
constraint int_eq_reif(TWorkers_00009_00010_INTEGER,1,aux19823_BOOL);
constraint int_eq_reif(TWorkers_00009_00014_INTEGER,1,aux19824_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19825,s_00014],0);
constraint int_lt_reif(s_00010,aux19825,aux19826_BOOL);
constraint int_le_reif(s_00014, s_00010,aux19827_BOOL);
constraint array_bool_and([aux19823_BOOL,aux19824_BOOL,aux19826_BOOL,w_00009_00014_BOOL,aux19827_BOOL],aux19828_BOOL);
constraint int_eq_reif(TWorkers_00009_00010_INTEGER,1,aux19829_BOOL);
constraint int_eq_reif(TWorkers_00009_00015_INTEGER,1,aux19830_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19831,s_00015],0);
constraint int_lt_reif(s_00010,aux19831,aux19832_BOOL);
constraint int_le_reif(s_00015, s_00010,aux19833_BOOL);
constraint array_bool_and([aux19829_BOOL,aux19830_BOOL,aux19832_BOOL,w_00009_00015_BOOL,aux19833_BOOL],aux19834_BOOL);
constraint int_eq_reif(TWorkers_00009_00010_INTEGER,1,aux19835_BOOL);
constraint int_eq_reif(TWorkers_00009_00016_INTEGER,1,aux19836_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19837,s_00016],0);
constraint int_lt_reif(s_00010,aux19837,aux19838_BOOL);
constraint int_le_reif(s_00016, s_00010,aux19839_BOOL);
constraint array_bool_and([aux19835_BOOL,aux19836_BOOL,aux19838_BOOL,w_00009_00016_BOOL,aux19839_BOOL],aux19840_BOOL);
constraint int_eq_reif(TWorkers_00009_00010_INTEGER,1,aux19841_BOOL);
constraint int_eq_reif(TWorkers_00009_00017_INTEGER,1,aux19842_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux19843,s_00017],0);
constraint int_lt_reif(s_00010,aux19843,aux19844_BOOL);
constraint int_le_reif(s_00017, s_00010,aux19845_BOOL);
constraint array_bool_and([aux19841_BOOL,aux19842_BOOL,aux19844_BOOL,w_00009_00017_BOOL,aux19845_BOOL],aux19846_BOOL);
constraint int_eq_reif(TWorkers_00009_00010_INTEGER,1,aux19847_BOOL);
constraint int_eq_reif(TWorkers_00009_00018_INTEGER,1,aux19848_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19849,s_00018],0);
constraint int_lt_reif(s_00010,aux19849,aux19850_BOOL);
constraint int_le_reif(s_00018, s_00010,aux19851_BOOL);
constraint array_bool_and([aux19847_BOOL,aux19848_BOOL,aux19850_BOOL,w_00009_00018_BOOL,aux19851_BOOL],aux19852_BOOL);
constraint int_eq_reif(TWorkers_00009_00010_INTEGER,1,aux19853_BOOL);
constraint int_eq_reif(TWorkers_00009_00019_INTEGER,1,aux19854_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux19855,s_00019],0);
constraint int_lt_reif(s_00010,aux19855,aux19856_BOOL);
constraint int_le_reif(s_00019, s_00010,aux19857_BOOL);
constraint array_bool_and([aux19853_BOOL,aux19854_BOOL,aux19856_BOOL,w_00009_00019_BOOL,aux19857_BOOL],aux19858_BOOL);
constraint int_eq_reif(TWorkers_00009_00010_INTEGER,1,aux19859_BOOL);
constraint int_eq_reif(TWorkers_00009_00020_INTEGER,1,aux19860_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19861,s_00020],0);
constraint int_lt_reif(s_00010,aux19861,aux19862_BOOL);
constraint int_le_reif(s_00020, s_00010,aux19863_BOOL);
constraint array_bool_and([aux19859_BOOL,aux19860_BOOL,aux19862_BOOL,w_00009_00020_BOOL,aux19863_BOOL],aux19864_BOOL);
constraint int_eq_reif(TWorkers_00009_00010_INTEGER,1,aux19865_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux19866,s_00010],0);
constraint int_lt_reif(s_00010,aux19866,aux19867_BOOL);
constraint array_bool_and([aux19865_BOOL,aux19867_BOOL,w_00009_00010_BOOL],aux19868_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux19756_INTEGER,aux19762_INTEGER,aux19768_INTEGER,aux19774_INTEGER,aux19780_INTEGER,aux19786_INTEGER,aux19792_INTEGER,aux19798_INTEGER,aux19804_INTEGER,aux19810_INTEGER,aux19816_INTEGER,aux19822_INTEGER,aux19828_INTEGER,aux19834_INTEGER,aux19840_INTEGER,aux19846_INTEGER,aux19852_INTEGER,aux19858_INTEGER,aux19864_INTEGER,aux19868_INTEGER,1],0,aux19869_BOOL);
constraint int_eq_reif(TWorkers_00009_00001_INTEGER,1,aux19870_BOOL);
constraint int_eq_reif(TWorkers_00009_00020_INTEGER,1,aux19871_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux19872,s_00001],0);
constraint int_lt_reif(s_00020,aux19872,aux19873_BOOL);
constraint int_le_reif(s_00001, s_00020,aux19874_BOOL);
constraint array_bool_and([aux19870_BOOL,aux19871_BOOL,aux19873_BOOL,w_00009_00001_BOOL,aux19874_BOOL],aux19875_BOOL);
constraint int_eq_reif(TWorkers_00009_00002_INTEGER,1,aux19876_BOOL);
constraint int_eq_reif(TWorkers_00009_00020_INTEGER,1,aux19877_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux19878,s_00002],0);
constraint int_lt_reif(s_00020,aux19878,aux19879_BOOL);
constraint int_le_reif(s_00002, s_00020,aux19880_BOOL);
constraint array_bool_and([aux19876_BOOL,aux19877_BOOL,aux19879_BOOL,w_00009_00002_BOOL,aux19880_BOOL],aux19881_BOOL);
constraint int_eq_reif(TWorkers_00009_00003_INTEGER,1,aux19882_BOOL);
constraint int_eq_reif(TWorkers_00009_00020_INTEGER,1,aux19883_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19884,s_00003],0);
constraint int_lt_reif(s_00020,aux19884,aux19885_BOOL);
constraint int_le_reif(s_00003, s_00020,aux19886_BOOL);
constraint array_bool_and([aux19882_BOOL,aux19883_BOOL,aux19885_BOOL,w_00009_00003_BOOL,aux19886_BOOL],aux19887_BOOL);
constraint int_eq_reif(TWorkers_00009_00004_INTEGER,1,aux19888_BOOL);
constraint int_eq_reif(TWorkers_00009_00020_INTEGER,1,aux19889_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19890,s_00004],0);
constraint int_lt_reif(s_00020,aux19890,aux19891_BOOL);
constraint int_le_reif(s_00004, s_00020,aux19892_BOOL);
constraint array_bool_and([aux19888_BOOL,aux19889_BOOL,aux19891_BOOL,w_00009_00004_BOOL,aux19892_BOOL],aux19893_BOOL);
constraint int_eq_reif(TWorkers_00009_00005_INTEGER,1,aux19894_BOOL);
constraint int_eq_reif(TWorkers_00009_00020_INTEGER,1,aux19895_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19896,s_00005],0);
constraint int_lt_reif(s_00020,aux19896,aux19897_BOOL);
constraint int_le_reif(s_00005, s_00020,aux19898_BOOL);
constraint array_bool_and([aux19894_BOOL,aux19895_BOOL,aux19897_BOOL,w_00009_00005_BOOL,aux19898_BOOL],aux19899_BOOL);
constraint int_eq_reif(TWorkers_00009_00006_INTEGER,1,aux19900_BOOL);
constraint int_eq_reif(TWorkers_00009_00020_INTEGER,1,aux19901_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19902,s_00006],0);
constraint int_lt_reif(s_00020,aux19902,aux19903_BOOL);
constraint int_le_reif(s_00006, s_00020,aux19904_BOOL);
constraint array_bool_and([aux19900_BOOL,aux19901_BOOL,aux19903_BOOL,w_00009_00006_BOOL,aux19904_BOOL],aux19905_BOOL);
constraint int_eq_reif(TWorkers_00009_00007_INTEGER,1,aux19906_BOOL);
constraint int_eq_reif(TWorkers_00009_00020_INTEGER,1,aux19907_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19908,s_00007],0);
constraint int_lt_reif(s_00020,aux19908,aux19909_BOOL);
constraint int_le_reif(s_00007, s_00020,aux19910_BOOL);
constraint array_bool_and([aux19906_BOOL,aux19907_BOOL,aux19909_BOOL,w_00009_00007_BOOL,aux19910_BOOL],aux19911_BOOL);
constraint int_eq_reif(TWorkers_00009_00008_INTEGER,1,aux19912_BOOL);
constraint int_eq_reif(TWorkers_00009_00020_INTEGER,1,aux19913_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19914,s_00008],0);
constraint int_lt_reif(s_00020,aux19914,aux19915_BOOL);
constraint int_le_reif(s_00008, s_00020,aux19916_BOOL);
constraint array_bool_and([aux19912_BOOL,aux19913_BOOL,aux19915_BOOL,w_00009_00008_BOOL,aux19916_BOOL],aux19917_BOOL);
constraint int_eq_reif(TWorkers_00009_00009_INTEGER,1,aux19918_BOOL);
constraint int_eq_reif(TWorkers_00009_00020_INTEGER,1,aux19919_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19920,s_00009],0);
constraint int_lt_reif(s_00020,aux19920,aux19921_BOOL);
constraint int_le_reif(s_00009, s_00020,aux19922_BOOL);
constraint array_bool_and([aux19918_BOOL,aux19919_BOOL,aux19921_BOOL,w_00009_00009_BOOL,aux19922_BOOL],aux19923_BOOL);
constraint int_eq_reif(TWorkers_00009_00010_INTEGER,1,aux19924_BOOL);
constraint int_eq_reif(TWorkers_00009_00020_INTEGER,1,aux19925_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux19926,s_00010],0);
constraint int_lt_reif(s_00020,aux19926,aux19927_BOOL);
constraint int_le_reif(s_00010, s_00020,aux19928_BOOL);
constraint array_bool_and([aux19924_BOOL,aux19925_BOOL,aux19927_BOOL,w_00009_00010_BOOL,aux19928_BOOL],aux19929_BOOL);
constraint int_eq_reif(TWorkers_00009_00011_INTEGER,1,aux19930_BOOL);
constraint int_eq_reif(TWorkers_00009_00020_INTEGER,1,aux19931_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19932,s_00011],0);
constraint int_lt_reif(s_00020,aux19932,aux19933_BOOL);
constraint int_le_reif(s_00011, s_00020,aux19934_BOOL);
constraint array_bool_and([aux19930_BOOL,aux19931_BOOL,aux19933_BOOL,w_00009_00011_BOOL,aux19934_BOOL],aux19935_BOOL);
constraint int_eq_reif(TWorkers_00009_00012_INTEGER,1,aux19936_BOOL);
constraint int_eq_reif(TWorkers_00009_00020_INTEGER,1,aux19937_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux19938,s_00012],0);
constraint int_lt_reif(s_00020,aux19938,aux19939_BOOL);
constraint int_le_reif(s_00012, s_00020,aux19940_BOOL);
constraint array_bool_and([aux19936_BOOL,aux19937_BOOL,aux19939_BOOL,w_00009_00012_BOOL,aux19940_BOOL],aux19941_BOOL);
constraint int_eq_reif(TWorkers_00009_00013_INTEGER,1,aux19942_BOOL);
constraint int_eq_reif(TWorkers_00009_00020_INTEGER,1,aux19943_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19944,s_00013],0);
constraint int_lt_reif(s_00020,aux19944,aux19945_BOOL);
constraint int_le_reif(s_00013, s_00020,aux19946_BOOL);
constraint array_bool_and([aux19942_BOOL,aux19943_BOOL,aux19945_BOOL,w_00009_00013_BOOL,aux19946_BOOL],aux19947_BOOL);
constraint int_eq_reif(TWorkers_00009_00014_INTEGER,1,aux19948_BOOL);
constraint int_eq_reif(TWorkers_00009_00020_INTEGER,1,aux19949_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19950,s_00014],0);
constraint int_lt_reif(s_00020,aux19950,aux19951_BOOL);
constraint int_le_reif(s_00014, s_00020,aux19952_BOOL);
constraint array_bool_and([aux19948_BOOL,aux19949_BOOL,aux19951_BOOL,w_00009_00014_BOOL,aux19952_BOOL],aux19953_BOOL);
constraint int_eq_reif(TWorkers_00009_00015_INTEGER,1,aux19954_BOOL);
constraint int_eq_reif(TWorkers_00009_00020_INTEGER,1,aux19955_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19956,s_00015],0);
constraint int_lt_reif(s_00020,aux19956,aux19957_BOOL);
constraint int_le_reif(s_00015, s_00020,aux19958_BOOL);
constraint array_bool_and([aux19954_BOOL,aux19955_BOOL,aux19957_BOOL,w_00009_00015_BOOL,aux19958_BOOL],aux19959_BOOL);
constraint int_eq_reif(TWorkers_00009_00016_INTEGER,1,aux19960_BOOL);
constraint int_eq_reif(TWorkers_00009_00020_INTEGER,1,aux19961_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19962,s_00016],0);
constraint int_lt_reif(s_00020,aux19962,aux19963_BOOL);
constraint int_le_reif(s_00016, s_00020,aux19964_BOOL);
constraint array_bool_and([aux19960_BOOL,aux19961_BOOL,aux19963_BOOL,w_00009_00016_BOOL,aux19964_BOOL],aux19965_BOOL);
constraint int_eq_reif(TWorkers_00009_00017_INTEGER,1,aux19966_BOOL);
constraint int_eq_reif(TWorkers_00009_00020_INTEGER,1,aux19967_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux19968,s_00017],0);
constraint int_lt_reif(s_00020,aux19968,aux19969_BOOL);
constraint int_le_reif(s_00017, s_00020,aux19970_BOOL);
constraint array_bool_and([aux19966_BOOL,aux19967_BOOL,aux19969_BOOL,w_00009_00017_BOOL,aux19970_BOOL],aux19971_BOOL);
constraint int_eq_reif(TWorkers_00009_00018_INTEGER,1,aux19972_BOOL);
constraint int_eq_reif(TWorkers_00009_00020_INTEGER,1,aux19973_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19974,s_00018],0);
constraint int_lt_reif(s_00020,aux19974,aux19975_BOOL);
constraint int_le_reif(s_00018, s_00020,aux19976_BOOL);
constraint array_bool_and([aux19972_BOOL,aux19973_BOOL,aux19975_BOOL,w_00009_00018_BOOL,aux19976_BOOL],aux19977_BOOL);
constraint int_eq_reif(TWorkers_00009_00019_INTEGER,1,aux19978_BOOL);
constraint int_eq_reif(TWorkers_00009_00020_INTEGER,1,aux19979_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux19980,s_00019],0);
constraint int_lt_reif(s_00020,aux19980,aux19981_BOOL);
constraint int_le_reif(s_00019, s_00020,aux19982_BOOL);
constraint array_bool_and([aux19978_BOOL,aux19979_BOOL,aux19981_BOOL,w_00009_00019_BOOL,aux19982_BOOL],aux19983_BOOL);
constraint int_eq_reif(TWorkers_00009_00020_INTEGER,1,aux19984_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19985,s_00020],0);
constraint int_lt_reif(s_00020,aux19985,aux19986_BOOL);
constraint array_bool_and([aux19984_BOOL,aux19986_BOOL,w_00009_00020_BOOL],aux19987_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux19875_INTEGER,aux19881_INTEGER,aux19887_INTEGER,aux19893_INTEGER,aux19899_INTEGER,aux19905_INTEGER,aux19911_INTEGER,aux19917_INTEGER,aux19923_INTEGER,aux19929_INTEGER,aux19935_INTEGER,aux19941_INTEGER,aux19947_INTEGER,aux19953_INTEGER,aux19959_INTEGER,aux19965_INTEGER,aux19971_INTEGER,aux19977_INTEGER,aux19983_INTEGER,aux19987_INTEGER,1],0,aux19988_BOOL);
constraint int_eq_reif(TWorkers_00009_00001_INTEGER,1,aux19989_BOOL);
constraint int_eq_reif(TWorkers_00009_00015_INTEGER,1,aux19990_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux19991,s_00001],0);
constraint int_lt_reif(s_00015,aux19991,aux19992_BOOL);
constraint int_le_reif(s_00001, s_00015,aux19993_BOOL);
constraint array_bool_and([aux19989_BOOL,aux19990_BOOL,aux19992_BOOL,w_00009_00001_BOOL,aux19993_BOOL],aux19994_BOOL);
constraint int_eq_reif(TWorkers_00009_00002_INTEGER,1,aux19995_BOOL);
constraint int_eq_reif(TWorkers_00009_00015_INTEGER,1,aux19996_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux19997,s_00002],0);
constraint int_lt_reif(s_00015,aux19997,aux19998_BOOL);
constraint int_le_reif(s_00002, s_00015,aux19999_BOOL);
constraint array_bool_and([aux19995_BOOL,aux19996_BOOL,aux19998_BOOL,w_00009_00002_BOOL,aux19999_BOOL],aux20000_BOOL);
constraint int_eq_reif(TWorkers_00009_00003_INTEGER,1,aux20001_BOOL);
constraint int_eq_reif(TWorkers_00009_00015_INTEGER,1,aux20002_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20003,s_00003],0);
constraint int_lt_reif(s_00015,aux20003,aux20004_BOOL);
constraint int_le_reif(s_00003, s_00015,aux20005_BOOL);
constraint array_bool_and([aux20001_BOOL,aux20002_BOOL,aux20004_BOOL,w_00009_00003_BOOL,aux20005_BOOL],aux20006_BOOL);
constraint int_eq_reif(TWorkers_00009_00004_INTEGER,1,aux20007_BOOL);
constraint int_eq_reif(TWorkers_00009_00015_INTEGER,1,aux20008_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20009,s_00004],0);
constraint int_lt_reif(s_00015,aux20009,aux20010_BOOL);
constraint int_le_reif(s_00004, s_00015,aux20011_BOOL);
constraint array_bool_and([aux20007_BOOL,aux20008_BOOL,aux20010_BOOL,w_00009_00004_BOOL,aux20011_BOOL],aux20012_BOOL);
constraint int_eq_reif(TWorkers_00009_00005_INTEGER,1,aux20013_BOOL);
constraint int_eq_reif(TWorkers_00009_00015_INTEGER,1,aux20014_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20015,s_00005],0);
constraint int_lt_reif(s_00015,aux20015,aux20016_BOOL);
constraint int_le_reif(s_00005, s_00015,aux20017_BOOL);
constraint array_bool_and([aux20013_BOOL,aux20014_BOOL,aux20016_BOOL,w_00009_00005_BOOL,aux20017_BOOL],aux20018_BOOL);
constraint int_eq_reif(TWorkers_00009_00006_INTEGER,1,aux20019_BOOL);
constraint int_eq_reif(TWorkers_00009_00015_INTEGER,1,aux20020_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20021,s_00006],0);
constraint int_lt_reif(s_00015,aux20021,aux20022_BOOL);
constraint int_le_reif(s_00006, s_00015,aux20023_BOOL);
constraint array_bool_and([aux20019_BOOL,aux20020_BOOL,aux20022_BOOL,w_00009_00006_BOOL,aux20023_BOOL],aux20024_BOOL);
constraint int_eq_reif(TWorkers_00009_00007_INTEGER,1,aux20025_BOOL);
constraint int_eq_reif(TWorkers_00009_00015_INTEGER,1,aux20026_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20027,s_00007],0);
constraint int_lt_reif(s_00015,aux20027,aux20028_BOOL);
constraint int_le_reif(s_00007, s_00015,aux20029_BOOL);
constraint array_bool_and([aux20025_BOOL,aux20026_BOOL,aux20028_BOOL,w_00009_00007_BOOL,aux20029_BOOL],aux20030_BOOL);
constraint int_eq_reif(TWorkers_00009_00008_INTEGER,1,aux20031_BOOL);
constraint int_eq_reif(TWorkers_00009_00015_INTEGER,1,aux20032_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20033,s_00008],0);
constraint int_lt_reif(s_00015,aux20033,aux20034_BOOL);
constraint int_le_reif(s_00008, s_00015,aux20035_BOOL);
constraint array_bool_and([aux20031_BOOL,aux20032_BOOL,aux20034_BOOL,w_00009_00008_BOOL,aux20035_BOOL],aux20036_BOOL);
constraint int_eq_reif(TWorkers_00009_00009_INTEGER,1,aux20037_BOOL);
constraint int_eq_reif(TWorkers_00009_00015_INTEGER,1,aux20038_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20039,s_00009],0);
constraint int_lt_reif(s_00015,aux20039,aux20040_BOOL);
constraint int_le_reif(s_00009, s_00015,aux20041_BOOL);
constraint array_bool_and([aux20037_BOOL,aux20038_BOOL,aux20040_BOOL,w_00009_00009_BOOL,aux20041_BOOL],aux20042_BOOL);
constraint int_eq_reif(TWorkers_00009_00010_INTEGER,1,aux20043_BOOL);
constraint int_eq_reif(TWorkers_00009_00015_INTEGER,1,aux20044_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux20045,s_00010],0);
constraint int_lt_reif(s_00015,aux20045,aux20046_BOOL);
constraint int_le_reif(s_00010, s_00015,aux20047_BOOL);
constraint array_bool_and([aux20043_BOOL,aux20044_BOOL,aux20046_BOOL,w_00009_00010_BOOL,aux20047_BOOL],aux20048_BOOL);
constraint int_eq_reif(TWorkers_00009_00011_INTEGER,1,aux20049_BOOL);
constraint int_eq_reif(TWorkers_00009_00015_INTEGER,1,aux20050_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20051,s_00011],0);
constraint int_lt_reif(s_00015,aux20051,aux20052_BOOL);
constraint int_le_reif(s_00011, s_00015,aux20053_BOOL);
constraint array_bool_and([aux20049_BOOL,aux20050_BOOL,aux20052_BOOL,w_00009_00011_BOOL,aux20053_BOOL],aux20054_BOOL);
constraint int_eq_reif(TWorkers_00009_00012_INTEGER,1,aux20055_BOOL);
constraint int_eq_reif(TWorkers_00009_00015_INTEGER,1,aux20056_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux20057,s_00012],0);
constraint int_lt_reif(s_00015,aux20057,aux20058_BOOL);
constraint int_le_reif(s_00012, s_00015,aux20059_BOOL);
constraint array_bool_and([aux20055_BOOL,aux20056_BOOL,aux20058_BOOL,w_00009_00012_BOOL,aux20059_BOOL],aux20060_BOOL);
constraint int_eq_reif(TWorkers_00009_00013_INTEGER,1,aux20061_BOOL);
constraint int_eq_reif(TWorkers_00009_00015_INTEGER,1,aux20062_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20063,s_00013],0);
constraint int_lt_reif(s_00015,aux20063,aux20064_BOOL);
constraint int_le_reif(s_00013, s_00015,aux20065_BOOL);
constraint array_bool_and([aux20061_BOOL,aux20062_BOOL,aux20064_BOOL,w_00009_00013_BOOL,aux20065_BOOL],aux20066_BOOL);
constraint int_eq_reif(TWorkers_00009_00014_INTEGER,1,aux20067_BOOL);
constraint int_eq_reif(TWorkers_00009_00015_INTEGER,1,aux20068_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20069,s_00014],0);
constraint int_lt_reif(s_00015,aux20069,aux20070_BOOL);
constraint int_le_reif(s_00014, s_00015,aux20071_BOOL);
constraint array_bool_and([aux20067_BOOL,aux20068_BOOL,aux20070_BOOL,w_00009_00014_BOOL,aux20071_BOOL],aux20072_BOOL);
constraint int_eq_reif(TWorkers_00009_00015_INTEGER,1,aux20073_BOOL);
constraint int_eq_reif(TWorkers_00009_00016_INTEGER,1,aux20074_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20075,s_00016],0);
constraint int_lt_reif(s_00015,aux20075,aux20076_BOOL);
constraint int_le_reif(s_00016, s_00015,aux20077_BOOL);
constraint array_bool_and([aux20073_BOOL,aux20074_BOOL,aux20076_BOOL,w_00009_00016_BOOL,aux20077_BOOL],aux20078_BOOL);
constraint int_eq_reif(TWorkers_00009_00015_INTEGER,1,aux20079_BOOL);
constraint int_eq_reif(TWorkers_00009_00017_INTEGER,1,aux20080_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux20081,s_00017],0);
constraint int_lt_reif(s_00015,aux20081,aux20082_BOOL);
constraint int_le_reif(s_00017, s_00015,aux20083_BOOL);
constraint array_bool_and([aux20079_BOOL,aux20080_BOOL,aux20082_BOOL,w_00009_00017_BOOL,aux20083_BOOL],aux20084_BOOL);
constraint int_eq_reif(TWorkers_00009_00015_INTEGER,1,aux20085_BOOL);
constraint int_eq_reif(TWorkers_00009_00018_INTEGER,1,aux20086_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20087,s_00018],0);
constraint int_lt_reif(s_00015,aux20087,aux20088_BOOL);
constraint int_le_reif(s_00018, s_00015,aux20089_BOOL);
constraint array_bool_and([aux20085_BOOL,aux20086_BOOL,aux20088_BOOL,w_00009_00018_BOOL,aux20089_BOOL],aux20090_BOOL);
constraint int_eq_reif(TWorkers_00009_00015_INTEGER,1,aux20091_BOOL);
constraint int_eq_reif(TWorkers_00009_00019_INTEGER,1,aux20092_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux20093,s_00019],0);
constraint int_lt_reif(s_00015,aux20093,aux20094_BOOL);
constraint int_le_reif(s_00019, s_00015,aux20095_BOOL);
constraint array_bool_and([aux20091_BOOL,aux20092_BOOL,aux20094_BOOL,w_00009_00019_BOOL,aux20095_BOOL],aux20096_BOOL);
constraint int_eq_reif(TWorkers_00009_00015_INTEGER,1,aux20097_BOOL);
constraint int_eq_reif(TWorkers_00009_00020_INTEGER,1,aux20098_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20099,s_00020],0);
constraint int_lt_reif(s_00015,aux20099,aux20100_BOOL);
constraint int_le_reif(s_00020, s_00015,aux20101_BOOL);
constraint array_bool_and([aux20097_BOOL,aux20098_BOOL,aux20100_BOOL,w_00009_00020_BOOL,aux20101_BOOL],aux20102_BOOL);
constraint int_eq_reif(TWorkers_00009_00015_INTEGER,1,aux20103_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20104,s_00015],0);
constraint int_lt_reif(s_00015,aux20104,aux20105_BOOL);
constraint array_bool_and([aux20103_BOOL,aux20105_BOOL,w_00009_00015_BOOL],aux20106_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux19994_INTEGER,aux20000_INTEGER,aux20006_INTEGER,aux20012_INTEGER,aux20018_INTEGER,aux20024_INTEGER,aux20030_INTEGER,aux20036_INTEGER,aux20042_INTEGER,aux20048_INTEGER,aux20054_INTEGER,aux20060_INTEGER,aux20066_INTEGER,aux20072_INTEGER,aux20078_INTEGER,aux20084_INTEGER,aux20090_INTEGER,aux20096_INTEGER,aux20102_INTEGER,aux20106_INTEGER,1],0,aux20107_BOOL);
constraint int_eq_reif(TWorkers_00009_00001_INTEGER,1,aux20108_BOOL);
constraint int_eq_reif(TWorkers_00009_00008_INTEGER,1,aux20109_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux20110,s_00001],0);
constraint int_lt_reif(s_00008,aux20110,aux20111_BOOL);
constraint int_le_reif(s_00001, s_00008,aux20112_BOOL);
constraint array_bool_and([aux20108_BOOL,aux20109_BOOL,aux20111_BOOL,w_00009_00001_BOOL,aux20112_BOOL],aux20113_BOOL);
constraint int_eq_reif(TWorkers_00009_00002_INTEGER,1,aux20114_BOOL);
constraint int_eq_reif(TWorkers_00009_00008_INTEGER,1,aux20115_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux20116,s_00002],0);
constraint int_lt_reif(s_00008,aux20116,aux20117_BOOL);
constraint int_le_reif(s_00002, s_00008,aux20118_BOOL);
constraint array_bool_and([aux20114_BOOL,aux20115_BOOL,aux20117_BOOL,w_00009_00002_BOOL,aux20118_BOOL],aux20119_BOOL);
constraint int_eq_reif(TWorkers_00009_00003_INTEGER,1,aux20120_BOOL);
constraint int_eq_reif(TWorkers_00009_00008_INTEGER,1,aux20121_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20122,s_00003],0);
constraint int_lt_reif(s_00008,aux20122,aux20123_BOOL);
constraint int_le_reif(s_00003, s_00008,aux20124_BOOL);
constraint array_bool_and([aux20120_BOOL,aux20121_BOOL,aux20123_BOOL,w_00009_00003_BOOL,aux20124_BOOL],aux20125_BOOL);
constraint int_eq_reif(TWorkers_00009_00004_INTEGER,1,aux20126_BOOL);
constraint int_eq_reif(TWorkers_00009_00008_INTEGER,1,aux20127_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20128,s_00004],0);
constraint int_lt_reif(s_00008,aux20128,aux20129_BOOL);
constraint int_le_reif(s_00004, s_00008,aux20130_BOOL);
constraint array_bool_and([aux20126_BOOL,aux20127_BOOL,aux20129_BOOL,w_00009_00004_BOOL,aux20130_BOOL],aux20131_BOOL);
constraint int_eq_reif(TWorkers_00009_00005_INTEGER,1,aux20132_BOOL);
constraint int_eq_reif(TWorkers_00009_00008_INTEGER,1,aux20133_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20134,s_00005],0);
constraint int_lt_reif(s_00008,aux20134,aux20135_BOOL);
constraint int_le_reif(s_00005, s_00008,aux20136_BOOL);
constraint array_bool_and([aux20132_BOOL,aux20133_BOOL,aux20135_BOOL,w_00009_00005_BOOL,aux20136_BOOL],aux20137_BOOL);
constraint int_eq_reif(TWorkers_00009_00006_INTEGER,1,aux20138_BOOL);
constraint int_eq_reif(TWorkers_00009_00008_INTEGER,1,aux20139_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20140,s_00006],0);
constraint int_lt_reif(s_00008,aux20140,aux20141_BOOL);
constraint int_le_reif(s_00006, s_00008,aux20142_BOOL);
constraint array_bool_and([aux20138_BOOL,aux20139_BOOL,aux20141_BOOL,w_00009_00006_BOOL,aux20142_BOOL],aux20143_BOOL);
constraint int_eq_reif(TWorkers_00009_00007_INTEGER,1,aux20144_BOOL);
constraint int_eq_reif(TWorkers_00009_00008_INTEGER,1,aux20145_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20146,s_00007],0);
constraint int_lt_reif(s_00008,aux20146,aux20147_BOOL);
constraint int_le_reif(s_00007, s_00008,aux20148_BOOL);
constraint array_bool_and([aux20144_BOOL,aux20145_BOOL,aux20147_BOOL,w_00009_00007_BOOL,aux20148_BOOL],aux20149_BOOL);
constraint int_eq_reif(TWorkers_00009_00008_INTEGER,1,aux20150_BOOL);
constraint int_eq_reif(TWorkers_00009_00009_INTEGER,1,aux20151_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20152,s_00009],0);
constraint int_lt_reif(s_00008,aux20152,aux20153_BOOL);
constraint int_le_reif(s_00009, s_00008,aux20154_BOOL);
constraint array_bool_and([aux20150_BOOL,aux20151_BOOL,aux20153_BOOL,w_00009_00009_BOOL,aux20154_BOOL],aux20155_BOOL);
constraint int_eq_reif(TWorkers_00009_00008_INTEGER,1,aux20156_BOOL);
constraint int_eq_reif(TWorkers_00009_00010_INTEGER,1,aux20157_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux20158,s_00010],0);
constraint int_lt_reif(s_00008,aux20158,aux20159_BOOL);
constraint int_le_reif(s_00010, s_00008,aux20160_BOOL);
constraint array_bool_and([aux20156_BOOL,aux20157_BOOL,aux20159_BOOL,w_00009_00010_BOOL,aux20160_BOOL],aux20161_BOOL);
constraint int_eq_reif(TWorkers_00009_00008_INTEGER,1,aux20162_BOOL);
constraint int_eq_reif(TWorkers_00009_00011_INTEGER,1,aux20163_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20164,s_00011],0);
constraint int_lt_reif(s_00008,aux20164,aux20165_BOOL);
constraint int_le_reif(s_00011, s_00008,aux20166_BOOL);
constraint array_bool_and([aux20162_BOOL,aux20163_BOOL,aux20165_BOOL,w_00009_00011_BOOL,aux20166_BOOL],aux20167_BOOL);
constraint int_eq_reif(TWorkers_00009_00008_INTEGER,1,aux20168_BOOL);
constraint int_eq_reif(TWorkers_00009_00012_INTEGER,1,aux20169_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux20170,s_00012],0);
constraint int_lt_reif(s_00008,aux20170,aux20171_BOOL);
constraint int_le_reif(s_00012, s_00008,aux20172_BOOL);
constraint array_bool_and([aux20168_BOOL,aux20169_BOOL,aux20171_BOOL,w_00009_00012_BOOL,aux20172_BOOL],aux20173_BOOL);
constraint int_eq_reif(TWorkers_00009_00008_INTEGER,1,aux20174_BOOL);
constraint int_eq_reif(TWorkers_00009_00013_INTEGER,1,aux20175_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20176,s_00013],0);
constraint int_lt_reif(s_00008,aux20176,aux20177_BOOL);
constraint int_le_reif(s_00013, s_00008,aux20178_BOOL);
constraint array_bool_and([aux20174_BOOL,aux20175_BOOL,aux20177_BOOL,w_00009_00013_BOOL,aux20178_BOOL],aux20179_BOOL);
constraint int_eq_reif(TWorkers_00009_00008_INTEGER,1,aux20180_BOOL);
constraint int_eq_reif(TWorkers_00009_00014_INTEGER,1,aux20181_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20182,s_00014],0);
constraint int_lt_reif(s_00008,aux20182,aux20183_BOOL);
constraint int_le_reif(s_00014, s_00008,aux20184_BOOL);
constraint array_bool_and([aux20180_BOOL,aux20181_BOOL,aux20183_BOOL,w_00009_00014_BOOL,aux20184_BOOL],aux20185_BOOL);
constraint int_eq_reif(TWorkers_00009_00008_INTEGER,1,aux20186_BOOL);
constraint int_eq_reif(TWorkers_00009_00015_INTEGER,1,aux20187_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20188,s_00015],0);
constraint int_lt_reif(s_00008,aux20188,aux20189_BOOL);
constraint int_le_reif(s_00015, s_00008,aux20190_BOOL);
constraint array_bool_and([aux20186_BOOL,aux20187_BOOL,aux20189_BOOL,w_00009_00015_BOOL,aux20190_BOOL],aux20191_BOOL);
constraint int_eq_reif(TWorkers_00009_00008_INTEGER,1,aux20192_BOOL);
constraint int_eq_reif(TWorkers_00009_00016_INTEGER,1,aux20193_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20194,s_00016],0);
constraint int_lt_reif(s_00008,aux20194,aux20195_BOOL);
constraint int_le_reif(s_00016, s_00008,aux20196_BOOL);
constraint array_bool_and([aux20192_BOOL,aux20193_BOOL,aux20195_BOOL,w_00009_00016_BOOL,aux20196_BOOL],aux20197_BOOL);
constraint int_eq_reif(TWorkers_00009_00008_INTEGER,1,aux20198_BOOL);
constraint int_eq_reif(TWorkers_00009_00017_INTEGER,1,aux20199_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux20200,s_00017],0);
constraint int_lt_reif(s_00008,aux20200,aux20201_BOOL);
constraint int_le_reif(s_00017, s_00008,aux20202_BOOL);
constraint array_bool_and([aux20198_BOOL,aux20199_BOOL,aux20201_BOOL,w_00009_00017_BOOL,aux20202_BOOL],aux20203_BOOL);
constraint int_eq_reif(TWorkers_00009_00008_INTEGER,1,aux20204_BOOL);
constraint int_eq_reif(TWorkers_00009_00018_INTEGER,1,aux20205_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20206,s_00018],0);
constraint int_lt_reif(s_00008,aux20206,aux20207_BOOL);
constraint int_le_reif(s_00018, s_00008,aux20208_BOOL);
constraint array_bool_and([aux20204_BOOL,aux20205_BOOL,aux20207_BOOL,w_00009_00018_BOOL,aux20208_BOOL],aux20209_BOOL);
constraint int_eq_reif(TWorkers_00009_00008_INTEGER,1,aux20210_BOOL);
constraint int_eq_reif(TWorkers_00009_00019_INTEGER,1,aux20211_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux20212,s_00019],0);
constraint int_lt_reif(s_00008,aux20212,aux20213_BOOL);
constraint int_le_reif(s_00019, s_00008,aux20214_BOOL);
constraint array_bool_and([aux20210_BOOL,aux20211_BOOL,aux20213_BOOL,w_00009_00019_BOOL,aux20214_BOOL],aux20215_BOOL);
constraint int_eq_reif(TWorkers_00009_00008_INTEGER,1,aux20216_BOOL);
constraint int_eq_reif(TWorkers_00009_00020_INTEGER,1,aux20217_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20218,s_00020],0);
constraint int_lt_reif(s_00008,aux20218,aux20219_BOOL);
constraint int_le_reif(s_00020, s_00008,aux20220_BOOL);
constraint array_bool_and([aux20216_BOOL,aux20217_BOOL,aux20219_BOOL,w_00009_00020_BOOL,aux20220_BOOL],aux20221_BOOL);
constraint int_eq_reif(TWorkers_00009_00008_INTEGER,1,aux20222_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20223,s_00008],0);
constraint int_lt_reif(s_00008,aux20223,aux20224_BOOL);
constraint array_bool_and([aux20222_BOOL,aux20224_BOOL,w_00009_00008_BOOL],aux20225_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux20113_INTEGER,aux20119_INTEGER,aux20125_INTEGER,aux20131_INTEGER,aux20137_INTEGER,aux20143_INTEGER,aux20149_INTEGER,aux20155_INTEGER,aux20161_INTEGER,aux20167_INTEGER,aux20173_INTEGER,aux20179_INTEGER,aux20185_INTEGER,aux20191_INTEGER,aux20197_INTEGER,aux20203_INTEGER,aux20209_INTEGER,aux20215_INTEGER,aux20221_INTEGER,aux20225_INTEGER,1],0,aux20226_BOOL);
constraint int_eq_reif(TWorkers_00009_00001_INTEGER,1,aux20227_BOOL);
constraint int_eq_reif(TWorkers_00009_00017_INTEGER,1,aux20228_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux20229,s_00001],0);
constraint int_lt_reif(s_00017,aux20229,aux20230_BOOL);
constraint int_le_reif(s_00001, s_00017,aux20231_BOOL);
constraint array_bool_and([aux20227_BOOL,aux20228_BOOL,aux20230_BOOL,w_00009_00001_BOOL,aux20231_BOOL],aux20232_BOOL);
constraint int_eq_reif(TWorkers_00009_00002_INTEGER,1,aux20233_BOOL);
constraint int_eq_reif(TWorkers_00009_00017_INTEGER,1,aux20234_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux20235,s_00002],0);
constraint int_lt_reif(s_00017,aux20235,aux20236_BOOL);
constraint int_le_reif(s_00002, s_00017,aux20237_BOOL);
constraint array_bool_and([aux20233_BOOL,aux20234_BOOL,aux20236_BOOL,w_00009_00002_BOOL,aux20237_BOOL],aux20238_BOOL);
constraint int_eq_reif(TWorkers_00009_00003_INTEGER,1,aux20239_BOOL);
constraint int_eq_reif(TWorkers_00009_00017_INTEGER,1,aux20240_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20241,s_00003],0);
constraint int_lt_reif(s_00017,aux20241,aux20242_BOOL);
constraint int_le_reif(s_00003, s_00017,aux20243_BOOL);
constraint array_bool_and([aux20239_BOOL,aux20240_BOOL,aux20242_BOOL,w_00009_00003_BOOL,aux20243_BOOL],aux20244_BOOL);
constraint int_eq_reif(TWorkers_00009_00004_INTEGER,1,aux20245_BOOL);
constraint int_eq_reif(TWorkers_00009_00017_INTEGER,1,aux20246_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20247,s_00004],0);
constraint int_lt_reif(s_00017,aux20247,aux20248_BOOL);
constraint int_le_reif(s_00004, s_00017,aux20249_BOOL);
constraint array_bool_and([aux20245_BOOL,aux20246_BOOL,aux20248_BOOL,w_00009_00004_BOOL,aux20249_BOOL],aux20250_BOOL);
constraint int_eq_reif(TWorkers_00009_00005_INTEGER,1,aux20251_BOOL);
constraint int_eq_reif(TWorkers_00009_00017_INTEGER,1,aux20252_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20253,s_00005],0);
constraint int_lt_reif(s_00017,aux20253,aux20254_BOOL);
constraint int_le_reif(s_00005, s_00017,aux20255_BOOL);
constraint array_bool_and([aux20251_BOOL,aux20252_BOOL,aux20254_BOOL,w_00009_00005_BOOL,aux20255_BOOL],aux20256_BOOL);
constraint int_eq_reif(TWorkers_00009_00006_INTEGER,1,aux20257_BOOL);
constraint int_eq_reif(TWorkers_00009_00017_INTEGER,1,aux20258_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20259,s_00006],0);
constraint int_lt_reif(s_00017,aux20259,aux20260_BOOL);
constraint int_le_reif(s_00006, s_00017,aux20261_BOOL);
constraint array_bool_and([aux20257_BOOL,aux20258_BOOL,aux20260_BOOL,w_00009_00006_BOOL,aux20261_BOOL],aux20262_BOOL);
constraint int_eq_reif(TWorkers_00009_00007_INTEGER,1,aux20263_BOOL);
constraint int_eq_reif(TWorkers_00009_00017_INTEGER,1,aux20264_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20265,s_00007],0);
constraint int_lt_reif(s_00017,aux20265,aux20266_BOOL);
constraint int_le_reif(s_00007, s_00017,aux20267_BOOL);
constraint array_bool_and([aux20263_BOOL,aux20264_BOOL,aux20266_BOOL,w_00009_00007_BOOL,aux20267_BOOL],aux20268_BOOL);
constraint int_eq_reif(TWorkers_00009_00008_INTEGER,1,aux20269_BOOL);
constraint int_eq_reif(TWorkers_00009_00017_INTEGER,1,aux20270_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20271,s_00008],0);
constraint int_lt_reif(s_00017,aux20271,aux20272_BOOL);
constraint int_le_reif(s_00008, s_00017,aux20273_BOOL);
constraint array_bool_and([aux20269_BOOL,aux20270_BOOL,aux20272_BOOL,w_00009_00008_BOOL,aux20273_BOOL],aux20274_BOOL);
constraint int_eq_reif(TWorkers_00009_00009_INTEGER,1,aux20275_BOOL);
constraint int_eq_reif(TWorkers_00009_00017_INTEGER,1,aux20276_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20277,s_00009],0);
constraint int_lt_reif(s_00017,aux20277,aux20278_BOOL);
constraint int_le_reif(s_00009, s_00017,aux20279_BOOL);
constraint array_bool_and([aux20275_BOOL,aux20276_BOOL,aux20278_BOOL,w_00009_00009_BOOL,aux20279_BOOL],aux20280_BOOL);
constraint int_eq_reif(TWorkers_00009_00010_INTEGER,1,aux20281_BOOL);
constraint int_eq_reif(TWorkers_00009_00017_INTEGER,1,aux20282_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux20283,s_00010],0);
constraint int_lt_reif(s_00017,aux20283,aux20284_BOOL);
constraint int_le_reif(s_00010, s_00017,aux20285_BOOL);
constraint array_bool_and([aux20281_BOOL,aux20282_BOOL,aux20284_BOOL,w_00009_00010_BOOL,aux20285_BOOL],aux20286_BOOL);
constraint int_eq_reif(TWorkers_00009_00011_INTEGER,1,aux20287_BOOL);
constraint int_eq_reif(TWorkers_00009_00017_INTEGER,1,aux20288_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20289,s_00011],0);
constraint int_lt_reif(s_00017,aux20289,aux20290_BOOL);
constraint int_le_reif(s_00011, s_00017,aux20291_BOOL);
constraint array_bool_and([aux20287_BOOL,aux20288_BOOL,aux20290_BOOL,w_00009_00011_BOOL,aux20291_BOOL],aux20292_BOOL);
constraint int_eq_reif(TWorkers_00009_00012_INTEGER,1,aux20293_BOOL);
constraint int_eq_reif(TWorkers_00009_00017_INTEGER,1,aux20294_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux20295,s_00012],0);
constraint int_lt_reif(s_00017,aux20295,aux20296_BOOL);
constraint int_le_reif(s_00012, s_00017,aux20297_BOOL);
constraint array_bool_and([aux20293_BOOL,aux20294_BOOL,aux20296_BOOL,w_00009_00012_BOOL,aux20297_BOOL],aux20298_BOOL);
constraint int_eq_reif(TWorkers_00009_00013_INTEGER,1,aux20299_BOOL);
constraint int_eq_reif(TWorkers_00009_00017_INTEGER,1,aux20300_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20301,s_00013],0);
constraint int_lt_reif(s_00017,aux20301,aux20302_BOOL);
constraint int_le_reif(s_00013, s_00017,aux20303_BOOL);
constraint array_bool_and([aux20299_BOOL,aux20300_BOOL,aux20302_BOOL,w_00009_00013_BOOL,aux20303_BOOL],aux20304_BOOL);
constraint int_eq_reif(TWorkers_00009_00014_INTEGER,1,aux20305_BOOL);
constraint int_eq_reif(TWorkers_00009_00017_INTEGER,1,aux20306_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20307,s_00014],0);
constraint int_lt_reif(s_00017,aux20307,aux20308_BOOL);
constraint int_le_reif(s_00014, s_00017,aux20309_BOOL);
constraint array_bool_and([aux20305_BOOL,aux20306_BOOL,aux20308_BOOL,w_00009_00014_BOOL,aux20309_BOOL],aux20310_BOOL);
constraint int_eq_reif(TWorkers_00009_00015_INTEGER,1,aux20311_BOOL);
constraint int_eq_reif(TWorkers_00009_00017_INTEGER,1,aux20312_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20313,s_00015],0);
constraint int_lt_reif(s_00017,aux20313,aux20314_BOOL);
constraint int_le_reif(s_00015, s_00017,aux20315_BOOL);
constraint array_bool_and([aux20311_BOOL,aux20312_BOOL,aux20314_BOOL,w_00009_00015_BOOL,aux20315_BOOL],aux20316_BOOL);
constraint int_eq_reif(TWorkers_00009_00016_INTEGER,1,aux20317_BOOL);
constraint int_eq_reif(TWorkers_00009_00017_INTEGER,1,aux20318_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20319,s_00016],0);
constraint int_lt_reif(s_00017,aux20319,aux20320_BOOL);
constraint int_le_reif(s_00016, s_00017,aux20321_BOOL);
constraint array_bool_and([aux20317_BOOL,aux20318_BOOL,aux20320_BOOL,w_00009_00016_BOOL,aux20321_BOOL],aux20322_BOOL);
constraint int_eq_reif(TWorkers_00009_00017_INTEGER,1,aux20323_BOOL);
constraint int_eq_reif(TWorkers_00009_00018_INTEGER,1,aux20324_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20325,s_00018],0);
constraint int_lt_reif(s_00017,aux20325,aux20326_BOOL);
constraint int_le_reif(s_00018, s_00017,aux20327_BOOL);
constraint array_bool_and([aux20323_BOOL,aux20324_BOOL,aux20326_BOOL,w_00009_00018_BOOL,aux20327_BOOL],aux20328_BOOL);
constraint int_eq_reif(TWorkers_00009_00017_INTEGER,1,aux20329_BOOL);
constraint int_eq_reif(TWorkers_00009_00019_INTEGER,1,aux20330_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux20331,s_00019],0);
constraint int_lt_reif(s_00017,aux20331,aux20332_BOOL);
constraint int_le_reif(s_00019, s_00017,aux20333_BOOL);
constraint array_bool_and([aux20329_BOOL,aux20330_BOOL,aux20332_BOOL,w_00009_00019_BOOL,aux20333_BOOL],aux20334_BOOL);
constraint int_eq_reif(TWorkers_00009_00017_INTEGER,1,aux20335_BOOL);
constraint int_eq_reif(TWorkers_00009_00020_INTEGER,1,aux20336_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20337,s_00020],0);
constraint int_lt_reif(s_00017,aux20337,aux20338_BOOL);
constraint int_le_reif(s_00020, s_00017,aux20339_BOOL);
constraint array_bool_and([aux20335_BOOL,aux20336_BOOL,aux20338_BOOL,w_00009_00020_BOOL,aux20339_BOOL],aux20340_BOOL);
constraint int_eq_reif(TWorkers_00009_00017_INTEGER,1,aux20341_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux20342,s_00017],0);
constraint int_lt_reif(s_00017,aux20342,aux20343_BOOL);
constraint array_bool_and([aux20341_BOOL,aux20343_BOOL,w_00009_00017_BOOL],aux20344_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux20232_INTEGER,aux20238_INTEGER,aux20244_INTEGER,aux20250_INTEGER,aux20256_INTEGER,aux20262_INTEGER,aux20268_INTEGER,aux20274_INTEGER,aux20280_INTEGER,aux20286_INTEGER,aux20292_INTEGER,aux20298_INTEGER,aux20304_INTEGER,aux20310_INTEGER,aux20316_INTEGER,aux20322_INTEGER,aux20328_INTEGER,aux20334_INTEGER,aux20340_INTEGER,aux20344_INTEGER,1],0,aux20345_BOOL);
constraint int_eq_reif(TWorkers_00009_00001_INTEGER,1,aux20346_BOOL);
constraint int_eq_reif(TWorkers_00009_00002_INTEGER,1,aux20347_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux20348,s_00001],0);
constraint int_lt_reif(s_00002,aux20348,aux20349_BOOL);
constraint int_le_reif(s_00001, s_00002,aux20350_BOOL);
constraint array_bool_and([aux20346_BOOL,aux20347_BOOL,aux20349_BOOL,w_00009_00001_BOOL,aux20350_BOOL],aux20351_BOOL);
constraint int_eq_reif(TWorkers_00009_00002_INTEGER,1,aux20352_BOOL);
constraint int_eq_reif(TWorkers_00009_00003_INTEGER,1,aux20353_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20354,s_00003],0);
constraint int_lt_reif(s_00002,aux20354,aux20355_BOOL);
constraint int_le_reif(s_00003, s_00002,aux20356_BOOL);
constraint array_bool_and([aux20352_BOOL,aux20353_BOOL,aux20355_BOOL,w_00009_00003_BOOL,aux20356_BOOL],aux20357_BOOL);
constraint int_eq_reif(TWorkers_00009_00002_INTEGER,1,aux20358_BOOL);
constraint int_eq_reif(TWorkers_00009_00004_INTEGER,1,aux20359_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20360,s_00004],0);
constraint int_lt_reif(s_00002,aux20360,aux20361_BOOL);
constraint int_le_reif(s_00004, s_00002,aux20362_BOOL);
constraint array_bool_and([aux20358_BOOL,aux20359_BOOL,aux20361_BOOL,w_00009_00004_BOOL,aux20362_BOOL],aux20363_BOOL);
constraint int_eq_reif(TWorkers_00009_00002_INTEGER,1,aux20364_BOOL);
constraint int_eq_reif(TWorkers_00009_00005_INTEGER,1,aux20365_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20366,s_00005],0);
constraint int_lt_reif(s_00002,aux20366,aux20367_BOOL);
constraint int_le_reif(s_00005, s_00002,aux20368_BOOL);
constraint array_bool_and([aux20364_BOOL,aux20365_BOOL,aux20367_BOOL,w_00009_00005_BOOL,aux20368_BOOL],aux20369_BOOL);
constraint int_eq_reif(TWorkers_00009_00002_INTEGER,1,aux20370_BOOL);
constraint int_eq_reif(TWorkers_00009_00006_INTEGER,1,aux20371_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20372,s_00006],0);
constraint int_lt_reif(s_00002,aux20372,aux20373_BOOL);
constraint int_le_reif(s_00006, s_00002,aux20374_BOOL);
constraint array_bool_and([aux20370_BOOL,aux20371_BOOL,aux20373_BOOL,w_00009_00006_BOOL,aux20374_BOOL],aux20375_BOOL);
constraint int_eq_reif(TWorkers_00009_00002_INTEGER,1,aux20376_BOOL);
constraint int_eq_reif(TWorkers_00009_00007_INTEGER,1,aux20377_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20378,s_00007],0);
constraint int_lt_reif(s_00002,aux20378,aux20379_BOOL);
constraint int_le_reif(s_00007, s_00002,aux20380_BOOL);
constraint array_bool_and([aux20376_BOOL,aux20377_BOOL,aux20379_BOOL,w_00009_00007_BOOL,aux20380_BOOL],aux20381_BOOL);
constraint int_eq_reif(TWorkers_00009_00002_INTEGER,1,aux20382_BOOL);
constraint int_eq_reif(TWorkers_00009_00008_INTEGER,1,aux20383_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20384,s_00008],0);
constraint int_lt_reif(s_00002,aux20384,aux20385_BOOL);
constraint int_le_reif(s_00008, s_00002,aux20386_BOOL);
constraint array_bool_and([aux20382_BOOL,aux20383_BOOL,aux20385_BOOL,w_00009_00008_BOOL,aux20386_BOOL],aux20387_BOOL);
constraint int_eq_reif(TWorkers_00009_00002_INTEGER,1,aux20388_BOOL);
constraint int_eq_reif(TWorkers_00009_00009_INTEGER,1,aux20389_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20390,s_00009],0);
constraint int_lt_reif(s_00002,aux20390,aux20391_BOOL);
constraint int_le_reif(s_00009, s_00002,aux20392_BOOL);
constraint array_bool_and([aux20388_BOOL,aux20389_BOOL,aux20391_BOOL,w_00009_00009_BOOL,aux20392_BOOL],aux20393_BOOL);
constraint int_eq_reif(TWorkers_00009_00002_INTEGER,1,aux20394_BOOL);
constraint int_eq_reif(TWorkers_00009_00010_INTEGER,1,aux20395_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux20396,s_00010],0);
constraint int_lt_reif(s_00002,aux20396,aux20397_BOOL);
constraint int_le_reif(s_00010, s_00002,aux20398_BOOL);
constraint array_bool_and([aux20394_BOOL,aux20395_BOOL,aux20397_BOOL,w_00009_00010_BOOL,aux20398_BOOL],aux20399_BOOL);
constraint int_eq_reif(TWorkers_00009_00002_INTEGER,1,aux20400_BOOL);
constraint int_eq_reif(TWorkers_00009_00011_INTEGER,1,aux20401_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20402,s_00011],0);
constraint int_lt_reif(s_00002,aux20402,aux20403_BOOL);
constraint int_le_reif(s_00011, s_00002,aux20404_BOOL);
constraint array_bool_and([aux20400_BOOL,aux20401_BOOL,aux20403_BOOL,w_00009_00011_BOOL,aux20404_BOOL],aux20405_BOOL);
constraint int_eq_reif(TWorkers_00009_00002_INTEGER,1,aux20406_BOOL);
constraint int_eq_reif(TWorkers_00009_00012_INTEGER,1,aux20407_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux20408,s_00012],0);
constraint int_lt_reif(s_00002,aux20408,aux20409_BOOL);
constraint int_le_reif(s_00012, s_00002,aux20410_BOOL);
constraint array_bool_and([aux20406_BOOL,aux20407_BOOL,aux20409_BOOL,w_00009_00012_BOOL,aux20410_BOOL],aux20411_BOOL);
constraint int_eq_reif(TWorkers_00009_00002_INTEGER,1,aux20412_BOOL);
constraint int_eq_reif(TWorkers_00009_00013_INTEGER,1,aux20413_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20414,s_00013],0);
constraint int_lt_reif(s_00002,aux20414,aux20415_BOOL);
constraint int_le_reif(s_00013, s_00002,aux20416_BOOL);
constraint array_bool_and([aux20412_BOOL,aux20413_BOOL,aux20415_BOOL,w_00009_00013_BOOL,aux20416_BOOL],aux20417_BOOL);
constraint int_eq_reif(TWorkers_00009_00002_INTEGER,1,aux20418_BOOL);
constraint int_eq_reif(TWorkers_00009_00014_INTEGER,1,aux20419_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20420,s_00014],0);
constraint int_lt_reif(s_00002,aux20420,aux20421_BOOL);
constraint int_le_reif(s_00014, s_00002,aux20422_BOOL);
constraint array_bool_and([aux20418_BOOL,aux20419_BOOL,aux20421_BOOL,w_00009_00014_BOOL,aux20422_BOOL],aux20423_BOOL);
constraint int_eq_reif(TWorkers_00009_00002_INTEGER,1,aux20424_BOOL);
constraint int_eq_reif(TWorkers_00009_00015_INTEGER,1,aux20425_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20426,s_00015],0);
constraint int_lt_reif(s_00002,aux20426,aux20427_BOOL);
constraint int_le_reif(s_00015, s_00002,aux20428_BOOL);
constraint array_bool_and([aux20424_BOOL,aux20425_BOOL,aux20427_BOOL,w_00009_00015_BOOL,aux20428_BOOL],aux20429_BOOL);
constraint int_eq_reif(TWorkers_00009_00002_INTEGER,1,aux20430_BOOL);
constraint int_eq_reif(TWorkers_00009_00016_INTEGER,1,aux20431_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20432,s_00016],0);
constraint int_lt_reif(s_00002,aux20432,aux20433_BOOL);
constraint int_le_reif(s_00016, s_00002,aux20434_BOOL);
constraint array_bool_and([aux20430_BOOL,aux20431_BOOL,aux20433_BOOL,w_00009_00016_BOOL,aux20434_BOOL],aux20435_BOOL);
constraint int_eq_reif(TWorkers_00009_00002_INTEGER,1,aux20436_BOOL);
constraint int_eq_reif(TWorkers_00009_00017_INTEGER,1,aux20437_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux20438,s_00017],0);
constraint int_lt_reif(s_00002,aux20438,aux20439_BOOL);
constraint int_le_reif(s_00017, s_00002,aux20440_BOOL);
constraint array_bool_and([aux20436_BOOL,aux20437_BOOL,aux20439_BOOL,w_00009_00017_BOOL,aux20440_BOOL],aux20441_BOOL);
constraint int_eq_reif(TWorkers_00009_00002_INTEGER,1,aux20442_BOOL);
constraint int_eq_reif(TWorkers_00009_00018_INTEGER,1,aux20443_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20444,s_00018],0);
constraint int_lt_reif(s_00002,aux20444,aux20445_BOOL);
constraint int_le_reif(s_00018, s_00002,aux20446_BOOL);
constraint array_bool_and([aux20442_BOOL,aux20443_BOOL,aux20445_BOOL,w_00009_00018_BOOL,aux20446_BOOL],aux20447_BOOL);
constraint int_eq_reif(TWorkers_00009_00002_INTEGER,1,aux20448_BOOL);
constraint int_eq_reif(TWorkers_00009_00019_INTEGER,1,aux20449_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux20450,s_00019],0);
constraint int_lt_reif(s_00002,aux20450,aux20451_BOOL);
constraint int_le_reif(s_00019, s_00002,aux20452_BOOL);
constraint array_bool_and([aux20448_BOOL,aux20449_BOOL,aux20451_BOOL,w_00009_00019_BOOL,aux20452_BOOL],aux20453_BOOL);
constraint int_eq_reif(TWorkers_00009_00002_INTEGER,1,aux20454_BOOL);
constraint int_eq_reif(TWorkers_00009_00020_INTEGER,1,aux20455_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20456,s_00020],0);
constraint int_lt_reif(s_00002,aux20456,aux20457_BOOL);
constraint int_le_reif(s_00020, s_00002,aux20458_BOOL);
constraint array_bool_and([aux20454_BOOL,aux20455_BOOL,aux20457_BOOL,w_00009_00020_BOOL,aux20458_BOOL],aux20459_BOOL);
constraint int_eq_reif(TWorkers_00009_00002_INTEGER,1,aux20460_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux20461,s_00002],0);
constraint int_lt_reif(s_00002,aux20461,aux20462_BOOL);
constraint array_bool_and([aux20460_BOOL,aux20462_BOOL,w_00009_00002_BOOL],aux20463_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux20351_INTEGER,aux20357_INTEGER,aux20363_INTEGER,aux20369_INTEGER,aux20375_INTEGER,aux20381_INTEGER,aux20387_INTEGER,aux20393_INTEGER,aux20399_INTEGER,aux20405_INTEGER,aux20411_INTEGER,aux20417_INTEGER,aux20423_INTEGER,aux20429_INTEGER,aux20435_INTEGER,aux20441_INTEGER,aux20447_INTEGER,aux20453_INTEGER,aux20459_INTEGER,aux20463_INTEGER,1],0,aux20464_BOOL);
constraint int_eq_reif(TWorkers_00009_00001_INTEGER,1,aux20465_BOOL);
constraint int_eq_reif(TWorkers_00009_00019_INTEGER,1,aux20466_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux20467,s_00001],0);
constraint int_lt_reif(s_00019,aux20467,aux20468_BOOL);
constraint int_le_reif(s_00001, s_00019,aux20469_BOOL);
constraint array_bool_and([aux20465_BOOL,aux20466_BOOL,aux20468_BOOL,w_00009_00001_BOOL,aux20469_BOOL],aux20470_BOOL);
constraint int_eq_reif(TWorkers_00009_00002_INTEGER,1,aux20471_BOOL);
constraint int_eq_reif(TWorkers_00009_00019_INTEGER,1,aux20472_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux20473,s_00002],0);
constraint int_lt_reif(s_00019,aux20473,aux20474_BOOL);
constraint int_le_reif(s_00002, s_00019,aux20475_BOOL);
constraint array_bool_and([aux20471_BOOL,aux20472_BOOL,aux20474_BOOL,w_00009_00002_BOOL,aux20475_BOOL],aux20476_BOOL);
constraint int_eq_reif(TWorkers_00009_00003_INTEGER,1,aux20477_BOOL);
constraint int_eq_reif(TWorkers_00009_00019_INTEGER,1,aux20478_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20479,s_00003],0);
constraint int_lt_reif(s_00019,aux20479,aux20480_BOOL);
constraint int_le_reif(s_00003, s_00019,aux20481_BOOL);
constraint array_bool_and([aux20477_BOOL,aux20478_BOOL,aux20480_BOOL,w_00009_00003_BOOL,aux20481_BOOL],aux20482_BOOL);
constraint int_eq_reif(TWorkers_00009_00004_INTEGER,1,aux20483_BOOL);
constraint int_eq_reif(TWorkers_00009_00019_INTEGER,1,aux20484_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20485,s_00004],0);
constraint int_lt_reif(s_00019,aux20485,aux20486_BOOL);
constraint int_le_reif(s_00004, s_00019,aux20487_BOOL);
constraint array_bool_and([aux20483_BOOL,aux20484_BOOL,aux20486_BOOL,w_00009_00004_BOOL,aux20487_BOOL],aux20488_BOOL);
constraint int_eq_reif(TWorkers_00009_00005_INTEGER,1,aux20489_BOOL);
constraint int_eq_reif(TWorkers_00009_00019_INTEGER,1,aux20490_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20491,s_00005],0);
constraint int_lt_reif(s_00019,aux20491,aux20492_BOOL);
constraint int_le_reif(s_00005, s_00019,aux20493_BOOL);
constraint array_bool_and([aux20489_BOOL,aux20490_BOOL,aux20492_BOOL,w_00009_00005_BOOL,aux20493_BOOL],aux20494_BOOL);
constraint int_eq_reif(TWorkers_00009_00006_INTEGER,1,aux20495_BOOL);
constraint int_eq_reif(TWorkers_00009_00019_INTEGER,1,aux20496_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20497,s_00006],0);
constraint int_lt_reif(s_00019,aux20497,aux20498_BOOL);
constraint int_le_reif(s_00006, s_00019,aux20499_BOOL);
constraint array_bool_and([aux20495_BOOL,aux20496_BOOL,aux20498_BOOL,w_00009_00006_BOOL,aux20499_BOOL],aux20500_BOOL);
constraint int_eq_reif(TWorkers_00009_00007_INTEGER,1,aux20501_BOOL);
constraint int_eq_reif(TWorkers_00009_00019_INTEGER,1,aux20502_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20503,s_00007],0);
constraint int_lt_reif(s_00019,aux20503,aux20504_BOOL);
constraint int_le_reif(s_00007, s_00019,aux20505_BOOL);
constraint array_bool_and([aux20501_BOOL,aux20502_BOOL,aux20504_BOOL,w_00009_00007_BOOL,aux20505_BOOL],aux20506_BOOL);
constraint int_eq_reif(TWorkers_00009_00008_INTEGER,1,aux20507_BOOL);
constraint int_eq_reif(TWorkers_00009_00019_INTEGER,1,aux20508_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20509,s_00008],0);
constraint int_lt_reif(s_00019,aux20509,aux20510_BOOL);
constraint int_le_reif(s_00008, s_00019,aux20511_BOOL);
constraint array_bool_and([aux20507_BOOL,aux20508_BOOL,aux20510_BOOL,w_00009_00008_BOOL,aux20511_BOOL],aux20512_BOOL);
constraint int_eq_reif(TWorkers_00009_00009_INTEGER,1,aux20513_BOOL);
constraint int_eq_reif(TWorkers_00009_00019_INTEGER,1,aux20514_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20515,s_00009],0);
constraint int_lt_reif(s_00019,aux20515,aux20516_BOOL);
constraint int_le_reif(s_00009, s_00019,aux20517_BOOL);
constraint array_bool_and([aux20513_BOOL,aux20514_BOOL,aux20516_BOOL,w_00009_00009_BOOL,aux20517_BOOL],aux20518_BOOL);
constraint int_eq_reif(TWorkers_00009_00010_INTEGER,1,aux20519_BOOL);
constraint int_eq_reif(TWorkers_00009_00019_INTEGER,1,aux20520_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux20521,s_00010],0);
constraint int_lt_reif(s_00019,aux20521,aux20522_BOOL);
constraint int_le_reif(s_00010, s_00019,aux20523_BOOL);
constraint array_bool_and([aux20519_BOOL,aux20520_BOOL,aux20522_BOOL,w_00009_00010_BOOL,aux20523_BOOL],aux20524_BOOL);
constraint int_eq_reif(TWorkers_00009_00011_INTEGER,1,aux20525_BOOL);
constraint int_eq_reif(TWorkers_00009_00019_INTEGER,1,aux20526_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20527,s_00011],0);
constraint int_lt_reif(s_00019,aux20527,aux20528_BOOL);
constraint int_le_reif(s_00011, s_00019,aux20529_BOOL);
constraint array_bool_and([aux20525_BOOL,aux20526_BOOL,aux20528_BOOL,w_00009_00011_BOOL,aux20529_BOOL],aux20530_BOOL);
constraint int_eq_reif(TWorkers_00009_00012_INTEGER,1,aux20531_BOOL);
constraint int_eq_reif(TWorkers_00009_00019_INTEGER,1,aux20532_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux20533,s_00012],0);
constraint int_lt_reif(s_00019,aux20533,aux20534_BOOL);
constraint int_le_reif(s_00012, s_00019,aux20535_BOOL);
constraint array_bool_and([aux20531_BOOL,aux20532_BOOL,aux20534_BOOL,w_00009_00012_BOOL,aux20535_BOOL],aux20536_BOOL);
constraint int_eq_reif(TWorkers_00009_00013_INTEGER,1,aux20537_BOOL);
constraint int_eq_reif(TWorkers_00009_00019_INTEGER,1,aux20538_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20539,s_00013],0);
constraint int_lt_reif(s_00019,aux20539,aux20540_BOOL);
constraint int_le_reif(s_00013, s_00019,aux20541_BOOL);
constraint array_bool_and([aux20537_BOOL,aux20538_BOOL,aux20540_BOOL,w_00009_00013_BOOL,aux20541_BOOL],aux20542_BOOL);
constraint int_eq_reif(TWorkers_00009_00014_INTEGER,1,aux20543_BOOL);
constraint int_eq_reif(TWorkers_00009_00019_INTEGER,1,aux20544_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20545,s_00014],0);
constraint int_lt_reif(s_00019,aux20545,aux20546_BOOL);
constraint int_le_reif(s_00014, s_00019,aux20547_BOOL);
constraint array_bool_and([aux20543_BOOL,aux20544_BOOL,aux20546_BOOL,w_00009_00014_BOOL,aux20547_BOOL],aux20548_BOOL);
constraint int_eq_reif(TWorkers_00009_00015_INTEGER,1,aux20549_BOOL);
constraint int_eq_reif(TWorkers_00009_00019_INTEGER,1,aux20550_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20551,s_00015],0);
constraint int_lt_reif(s_00019,aux20551,aux20552_BOOL);
constraint int_le_reif(s_00015, s_00019,aux20553_BOOL);
constraint array_bool_and([aux20549_BOOL,aux20550_BOOL,aux20552_BOOL,w_00009_00015_BOOL,aux20553_BOOL],aux20554_BOOL);
constraint int_eq_reif(TWorkers_00009_00016_INTEGER,1,aux20555_BOOL);
constraint int_eq_reif(TWorkers_00009_00019_INTEGER,1,aux20556_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20557,s_00016],0);
constraint int_lt_reif(s_00019,aux20557,aux20558_BOOL);
constraint int_le_reif(s_00016, s_00019,aux20559_BOOL);
constraint array_bool_and([aux20555_BOOL,aux20556_BOOL,aux20558_BOOL,w_00009_00016_BOOL,aux20559_BOOL],aux20560_BOOL);
constraint int_eq_reif(TWorkers_00009_00017_INTEGER,1,aux20561_BOOL);
constraint int_eq_reif(TWorkers_00009_00019_INTEGER,1,aux20562_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux20563,s_00017],0);
constraint int_lt_reif(s_00019,aux20563,aux20564_BOOL);
constraint int_le_reif(s_00017, s_00019,aux20565_BOOL);
constraint array_bool_and([aux20561_BOOL,aux20562_BOOL,aux20564_BOOL,w_00009_00017_BOOL,aux20565_BOOL],aux20566_BOOL);
constraint int_eq_reif(TWorkers_00009_00018_INTEGER,1,aux20567_BOOL);
constraint int_eq_reif(TWorkers_00009_00019_INTEGER,1,aux20568_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20569,s_00018],0);
constraint int_lt_reif(s_00019,aux20569,aux20570_BOOL);
constraint int_le_reif(s_00018, s_00019,aux20571_BOOL);
constraint array_bool_and([aux20567_BOOL,aux20568_BOOL,aux20570_BOOL,w_00009_00018_BOOL,aux20571_BOOL],aux20572_BOOL);
constraint int_eq_reif(TWorkers_00009_00019_INTEGER,1,aux20573_BOOL);
constraint int_eq_reif(TWorkers_00009_00020_INTEGER,1,aux20574_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20575,s_00020],0);
constraint int_lt_reif(s_00019,aux20575,aux20576_BOOL);
constraint int_le_reif(s_00020, s_00019,aux20577_BOOL);
constraint array_bool_and([aux20573_BOOL,aux20574_BOOL,aux20576_BOOL,w_00009_00020_BOOL,aux20577_BOOL],aux20578_BOOL);
constraint int_eq_reif(TWorkers_00009_00019_INTEGER,1,aux20579_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux20580,s_00019],0);
constraint int_lt_reif(s_00019,aux20580,aux20581_BOOL);
constraint array_bool_and([aux20579_BOOL,aux20581_BOOL,w_00009_00019_BOOL],aux20582_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux20470_INTEGER,aux20476_INTEGER,aux20482_INTEGER,aux20488_INTEGER,aux20494_INTEGER,aux20500_INTEGER,aux20506_INTEGER,aux20512_INTEGER,aux20518_INTEGER,aux20524_INTEGER,aux20530_INTEGER,aux20536_INTEGER,aux20542_INTEGER,aux20548_INTEGER,aux20554_INTEGER,aux20560_INTEGER,aux20566_INTEGER,aux20572_INTEGER,aux20578_INTEGER,aux20582_INTEGER,1],0,aux20583_BOOL);
constraint int_eq_reif(TWorkers_00009_00001_INTEGER,1,aux20584_BOOL);
constraint int_eq_reif(TWorkers_00009_00004_INTEGER,1,aux20585_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux20586,s_00001],0);
constraint int_lt_reif(s_00004,aux20586,aux20587_BOOL);
constraint int_le_reif(s_00001, s_00004,aux20588_BOOL);
constraint array_bool_and([aux20584_BOOL,aux20585_BOOL,aux20587_BOOL,w_00009_00001_BOOL,aux20588_BOOL],aux20589_BOOL);
constraint int_eq_reif(TWorkers_00009_00002_INTEGER,1,aux20590_BOOL);
constraint int_eq_reif(TWorkers_00009_00004_INTEGER,1,aux20591_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux20592,s_00002],0);
constraint int_lt_reif(s_00004,aux20592,aux20593_BOOL);
constraint int_le_reif(s_00002, s_00004,aux20594_BOOL);
constraint array_bool_and([aux20590_BOOL,aux20591_BOOL,aux20593_BOOL,w_00009_00002_BOOL,aux20594_BOOL],aux20595_BOOL);
constraint int_eq_reif(TWorkers_00009_00003_INTEGER,1,aux20596_BOOL);
constraint int_eq_reif(TWorkers_00009_00004_INTEGER,1,aux20597_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20598,s_00003],0);
constraint int_lt_reif(s_00004,aux20598,aux20599_BOOL);
constraint int_le_reif(s_00003, s_00004,aux20600_BOOL);
constraint array_bool_and([aux20596_BOOL,aux20597_BOOL,aux20599_BOOL,w_00009_00003_BOOL,aux20600_BOOL],aux20601_BOOL);
constraint int_eq_reif(TWorkers_00009_00004_INTEGER,1,aux20602_BOOL);
constraint int_eq_reif(TWorkers_00009_00005_INTEGER,1,aux20603_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20604,s_00005],0);
constraint int_lt_reif(s_00004,aux20604,aux20605_BOOL);
constraint int_le_reif(s_00005, s_00004,aux20606_BOOL);
constraint array_bool_and([aux20602_BOOL,aux20603_BOOL,aux20605_BOOL,w_00009_00005_BOOL,aux20606_BOOL],aux20607_BOOL);
constraint int_eq_reif(TWorkers_00009_00004_INTEGER,1,aux20608_BOOL);
constraint int_eq_reif(TWorkers_00009_00006_INTEGER,1,aux20609_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20610,s_00006],0);
constraint int_lt_reif(s_00004,aux20610,aux20611_BOOL);
constraint int_le_reif(s_00006, s_00004,aux20612_BOOL);
constraint array_bool_and([aux20608_BOOL,aux20609_BOOL,aux20611_BOOL,w_00009_00006_BOOL,aux20612_BOOL],aux20613_BOOL);
constraint int_eq_reif(TWorkers_00009_00004_INTEGER,1,aux20614_BOOL);
constraint int_eq_reif(TWorkers_00009_00007_INTEGER,1,aux20615_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20616,s_00007],0);
constraint int_lt_reif(s_00004,aux20616,aux20617_BOOL);
constraint int_le_reif(s_00007, s_00004,aux20618_BOOL);
constraint array_bool_and([aux20614_BOOL,aux20615_BOOL,aux20617_BOOL,w_00009_00007_BOOL,aux20618_BOOL],aux20619_BOOL);
constraint int_eq_reif(TWorkers_00009_00004_INTEGER,1,aux20620_BOOL);
constraint int_eq_reif(TWorkers_00009_00008_INTEGER,1,aux20621_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20622,s_00008],0);
constraint int_lt_reif(s_00004,aux20622,aux20623_BOOL);
constraint int_le_reif(s_00008, s_00004,aux20624_BOOL);
constraint array_bool_and([aux20620_BOOL,aux20621_BOOL,aux20623_BOOL,w_00009_00008_BOOL,aux20624_BOOL],aux20625_BOOL);
constraint int_eq_reif(TWorkers_00009_00004_INTEGER,1,aux20626_BOOL);
constraint int_eq_reif(TWorkers_00009_00009_INTEGER,1,aux20627_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20628,s_00009],0);
constraint int_lt_reif(s_00004,aux20628,aux20629_BOOL);
constraint int_le_reif(s_00009, s_00004,aux20630_BOOL);
constraint array_bool_and([aux20626_BOOL,aux20627_BOOL,aux20629_BOOL,w_00009_00009_BOOL,aux20630_BOOL],aux20631_BOOL);
constraint int_eq_reif(TWorkers_00009_00004_INTEGER,1,aux20632_BOOL);
constraint int_eq_reif(TWorkers_00009_00010_INTEGER,1,aux20633_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux20634,s_00010],0);
constraint int_lt_reif(s_00004,aux20634,aux20635_BOOL);
constraint int_le_reif(s_00010, s_00004,aux20636_BOOL);
constraint array_bool_and([aux20632_BOOL,aux20633_BOOL,aux20635_BOOL,w_00009_00010_BOOL,aux20636_BOOL],aux20637_BOOL);
constraint int_eq_reif(TWorkers_00009_00004_INTEGER,1,aux20638_BOOL);
constraint int_eq_reif(TWorkers_00009_00011_INTEGER,1,aux20639_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20640,s_00011],0);
constraint int_lt_reif(s_00004,aux20640,aux20641_BOOL);
constraint int_le_reif(s_00011, s_00004,aux20642_BOOL);
constraint array_bool_and([aux20638_BOOL,aux20639_BOOL,aux20641_BOOL,w_00009_00011_BOOL,aux20642_BOOL],aux20643_BOOL);
constraint int_eq_reif(TWorkers_00009_00004_INTEGER,1,aux20644_BOOL);
constraint int_eq_reif(TWorkers_00009_00012_INTEGER,1,aux20645_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux20646,s_00012],0);
constraint int_lt_reif(s_00004,aux20646,aux20647_BOOL);
constraint int_le_reif(s_00012, s_00004,aux20648_BOOL);
constraint array_bool_and([aux20644_BOOL,aux20645_BOOL,aux20647_BOOL,w_00009_00012_BOOL,aux20648_BOOL],aux20649_BOOL);
constraint int_eq_reif(TWorkers_00009_00004_INTEGER,1,aux20650_BOOL);
constraint int_eq_reif(TWorkers_00009_00013_INTEGER,1,aux20651_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20652,s_00013],0);
constraint int_lt_reif(s_00004,aux20652,aux20653_BOOL);
constraint int_le_reif(s_00013, s_00004,aux20654_BOOL);
constraint array_bool_and([aux20650_BOOL,aux20651_BOOL,aux20653_BOOL,w_00009_00013_BOOL,aux20654_BOOL],aux20655_BOOL);
constraint int_eq_reif(TWorkers_00009_00004_INTEGER,1,aux20656_BOOL);
constraint int_eq_reif(TWorkers_00009_00014_INTEGER,1,aux20657_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20658,s_00014],0);
constraint int_lt_reif(s_00004,aux20658,aux20659_BOOL);
constraint int_le_reif(s_00014, s_00004,aux20660_BOOL);
constraint array_bool_and([aux20656_BOOL,aux20657_BOOL,aux20659_BOOL,w_00009_00014_BOOL,aux20660_BOOL],aux20661_BOOL);
constraint int_eq_reif(TWorkers_00009_00004_INTEGER,1,aux20662_BOOL);
constraint int_eq_reif(TWorkers_00009_00015_INTEGER,1,aux20663_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20664,s_00015],0);
constraint int_lt_reif(s_00004,aux20664,aux20665_BOOL);
constraint int_le_reif(s_00015, s_00004,aux20666_BOOL);
constraint array_bool_and([aux20662_BOOL,aux20663_BOOL,aux20665_BOOL,w_00009_00015_BOOL,aux20666_BOOL],aux20667_BOOL);
constraint int_eq_reif(TWorkers_00009_00004_INTEGER,1,aux20668_BOOL);
constraint int_eq_reif(TWorkers_00009_00016_INTEGER,1,aux20669_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20670,s_00016],0);
constraint int_lt_reif(s_00004,aux20670,aux20671_BOOL);
constraint int_le_reif(s_00016, s_00004,aux20672_BOOL);
constraint array_bool_and([aux20668_BOOL,aux20669_BOOL,aux20671_BOOL,w_00009_00016_BOOL,aux20672_BOOL],aux20673_BOOL);
constraint int_eq_reif(TWorkers_00009_00004_INTEGER,1,aux20674_BOOL);
constraint int_eq_reif(TWorkers_00009_00017_INTEGER,1,aux20675_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux20676,s_00017],0);
constraint int_lt_reif(s_00004,aux20676,aux20677_BOOL);
constraint int_le_reif(s_00017, s_00004,aux20678_BOOL);
constraint array_bool_and([aux20674_BOOL,aux20675_BOOL,aux20677_BOOL,w_00009_00017_BOOL,aux20678_BOOL],aux20679_BOOL);
constraint int_eq_reif(TWorkers_00009_00004_INTEGER,1,aux20680_BOOL);
constraint int_eq_reif(TWorkers_00009_00018_INTEGER,1,aux20681_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20682,s_00018],0);
constraint int_lt_reif(s_00004,aux20682,aux20683_BOOL);
constraint int_le_reif(s_00018, s_00004,aux20684_BOOL);
constraint array_bool_and([aux20680_BOOL,aux20681_BOOL,aux20683_BOOL,w_00009_00018_BOOL,aux20684_BOOL],aux20685_BOOL);
constraint int_eq_reif(TWorkers_00009_00004_INTEGER,1,aux20686_BOOL);
constraint int_eq_reif(TWorkers_00009_00019_INTEGER,1,aux20687_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux20688,s_00019],0);
constraint int_lt_reif(s_00004,aux20688,aux20689_BOOL);
constraint int_le_reif(s_00019, s_00004,aux20690_BOOL);
constraint array_bool_and([aux20686_BOOL,aux20687_BOOL,aux20689_BOOL,w_00009_00019_BOOL,aux20690_BOOL],aux20691_BOOL);
constraint int_eq_reif(TWorkers_00009_00004_INTEGER,1,aux20692_BOOL);
constraint int_eq_reif(TWorkers_00009_00020_INTEGER,1,aux20693_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20694,s_00020],0);
constraint int_lt_reif(s_00004,aux20694,aux20695_BOOL);
constraint int_le_reif(s_00020, s_00004,aux20696_BOOL);
constraint array_bool_and([aux20692_BOOL,aux20693_BOOL,aux20695_BOOL,w_00009_00020_BOOL,aux20696_BOOL],aux20697_BOOL);
constraint int_eq_reif(TWorkers_00009_00004_INTEGER,1,aux20698_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20699,s_00004],0);
constraint int_lt_reif(s_00004,aux20699,aux20700_BOOL);
constraint array_bool_and([aux20698_BOOL,aux20700_BOOL,w_00009_00004_BOOL],aux20701_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux20589_INTEGER,aux20595_INTEGER,aux20601_INTEGER,aux20607_INTEGER,aux20613_INTEGER,aux20619_INTEGER,aux20625_INTEGER,aux20631_INTEGER,aux20637_INTEGER,aux20643_INTEGER,aux20649_INTEGER,aux20655_INTEGER,aux20661_INTEGER,aux20667_INTEGER,aux20673_INTEGER,aux20679_INTEGER,aux20685_INTEGER,aux20691_INTEGER,aux20697_INTEGER,aux20701_INTEGER,1],0,aux20702_BOOL);
constraint int_eq_reif(TWorkers_00009_00001_INTEGER,1,aux20703_BOOL);
constraint int_eq_reif(TWorkers_00009_00009_INTEGER,1,aux20704_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux20705,s_00001],0);
constraint int_lt_reif(s_00009,aux20705,aux20706_BOOL);
constraint int_le_reif(s_00001, s_00009,aux20707_BOOL);
constraint array_bool_and([aux20703_BOOL,aux20704_BOOL,aux20706_BOOL,w_00009_00001_BOOL,aux20707_BOOL],aux20708_BOOL);
constraint int_eq_reif(TWorkers_00009_00002_INTEGER,1,aux20709_BOOL);
constraint int_eq_reif(TWorkers_00009_00009_INTEGER,1,aux20710_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux20711,s_00002],0);
constraint int_lt_reif(s_00009,aux20711,aux20712_BOOL);
constraint int_le_reif(s_00002, s_00009,aux20713_BOOL);
constraint array_bool_and([aux20709_BOOL,aux20710_BOOL,aux20712_BOOL,w_00009_00002_BOOL,aux20713_BOOL],aux20714_BOOL);
constraint int_eq_reif(TWorkers_00009_00003_INTEGER,1,aux20715_BOOL);
constraint int_eq_reif(TWorkers_00009_00009_INTEGER,1,aux20716_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20717,s_00003],0);
constraint int_lt_reif(s_00009,aux20717,aux20718_BOOL);
constraint int_le_reif(s_00003, s_00009,aux20719_BOOL);
constraint array_bool_and([aux20715_BOOL,aux20716_BOOL,aux20718_BOOL,w_00009_00003_BOOL,aux20719_BOOL],aux20720_BOOL);
constraint int_eq_reif(TWorkers_00009_00004_INTEGER,1,aux20721_BOOL);
constraint int_eq_reif(TWorkers_00009_00009_INTEGER,1,aux20722_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20723,s_00004],0);
constraint int_lt_reif(s_00009,aux20723,aux20724_BOOL);
constraint int_le_reif(s_00004, s_00009,aux20725_BOOL);
constraint array_bool_and([aux20721_BOOL,aux20722_BOOL,aux20724_BOOL,w_00009_00004_BOOL,aux20725_BOOL],aux20726_BOOL);
constraint int_eq_reif(TWorkers_00009_00005_INTEGER,1,aux20727_BOOL);
constraint int_eq_reif(TWorkers_00009_00009_INTEGER,1,aux20728_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20729,s_00005],0);
constraint int_lt_reif(s_00009,aux20729,aux20730_BOOL);
constraint int_le_reif(s_00005, s_00009,aux20731_BOOL);
constraint array_bool_and([aux20727_BOOL,aux20728_BOOL,aux20730_BOOL,w_00009_00005_BOOL,aux20731_BOOL],aux20732_BOOL);
constraint int_eq_reif(TWorkers_00009_00006_INTEGER,1,aux20733_BOOL);
constraint int_eq_reif(TWorkers_00009_00009_INTEGER,1,aux20734_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20735,s_00006],0);
constraint int_lt_reif(s_00009,aux20735,aux20736_BOOL);
constraint int_le_reif(s_00006, s_00009,aux20737_BOOL);
constraint array_bool_and([aux20733_BOOL,aux20734_BOOL,aux20736_BOOL,w_00009_00006_BOOL,aux20737_BOOL],aux20738_BOOL);
constraint int_eq_reif(TWorkers_00009_00007_INTEGER,1,aux20739_BOOL);
constraint int_eq_reif(TWorkers_00009_00009_INTEGER,1,aux20740_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20741,s_00007],0);
constraint int_lt_reif(s_00009,aux20741,aux20742_BOOL);
constraint int_le_reif(s_00007, s_00009,aux20743_BOOL);
constraint array_bool_and([aux20739_BOOL,aux20740_BOOL,aux20742_BOOL,w_00009_00007_BOOL,aux20743_BOOL],aux20744_BOOL);
constraint int_eq_reif(TWorkers_00009_00008_INTEGER,1,aux20745_BOOL);
constraint int_eq_reif(TWorkers_00009_00009_INTEGER,1,aux20746_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20747,s_00008],0);
constraint int_lt_reif(s_00009,aux20747,aux20748_BOOL);
constraint int_le_reif(s_00008, s_00009,aux20749_BOOL);
constraint array_bool_and([aux20745_BOOL,aux20746_BOOL,aux20748_BOOL,w_00009_00008_BOOL,aux20749_BOOL],aux20750_BOOL);
constraint int_eq_reif(TWorkers_00009_00009_INTEGER,1,aux20751_BOOL);
constraint int_eq_reif(TWorkers_00009_00010_INTEGER,1,aux20752_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux20753,s_00010],0);
constraint int_lt_reif(s_00009,aux20753,aux20754_BOOL);
constraint int_le_reif(s_00010, s_00009,aux20755_BOOL);
constraint array_bool_and([aux20751_BOOL,aux20752_BOOL,aux20754_BOOL,w_00009_00010_BOOL,aux20755_BOOL],aux20756_BOOL);
constraint int_eq_reif(TWorkers_00009_00009_INTEGER,1,aux20757_BOOL);
constraint int_eq_reif(TWorkers_00009_00011_INTEGER,1,aux20758_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20759,s_00011],0);
constraint int_lt_reif(s_00009,aux20759,aux20760_BOOL);
constraint int_le_reif(s_00011, s_00009,aux20761_BOOL);
constraint array_bool_and([aux20757_BOOL,aux20758_BOOL,aux20760_BOOL,w_00009_00011_BOOL,aux20761_BOOL],aux20762_BOOL);
constraint int_eq_reif(TWorkers_00009_00009_INTEGER,1,aux20763_BOOL);
constraint int_eq_reif(TWorkers_00009_00012_INTEGER,1,aux20764_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux20765,s_00012],0);
constraint int_lt_reif(s_00009,aux20765,aux20766_BOOL);
constraint int_le_reif(s_00012, s_00009,aux20767_BOOL);
constraint array_bool_and([aux20763_BOOL,aux20764_BOOL,aux20766_BOOL,w_00009_00012_BOOL,aux20767_BOOL],aux20768_BOOL);
constraint int_eq_reif(TWorkers_00009_00009_INTEGER,1,aux20769_BOOL);
constraint int_eq_reif(TWorkers_00009_00013_INTEGER,1,aux20770_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20771,s_00013],0);
constraint int_lt_reif(s_00009,aux20771,aux20772_BOOL);
constraint int_le_reif(s_00013, s_00009,aux20773_BOOL);
constraint array_bool_and([aux20769_BOOL,aux20770_BOOL,aux20772_BOOL,w_00009_00013_BOOL,aux20773_BOOL],aux20774_BOOL);
constraint int_eq_reif(TWorkers_00009_00009_INTEGER,1,aux20775_BOOL);
constraint int_eq_reif(TWorkers_00009_00014_INTEGER,1,aux20776_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20777,s_00014],0);
constraint int_lt_reif(s_00009,aux20777,aux20778_BOOL);
constraint int_le_reif(s_00014, s_00009,aux20779_BOOL);
constraint array_bool_and([aux20775_BOOL,aux20776_BOOL,aux20778_BOOL,w_00009_00014_BOOL,aux20779_BOOL],aux20780_BOOL);
constraint int_eq_reif(TWorkers_00009_00009_INTEGER,1,aux20781_BOOL);
constraint int_eq_reif(TWorkers_00009_00015_INTEGER,1,aux20782_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20783,s_00015],0);
constraint int_lt_reif(s_00009,aux20783,aux20784_BOOL);
constraint int_le_reif(s_00015, s_00009,aux20785_BOOL);
constraint array_bool_and([aux20781_BOOL,aux20782_BOOL,aux20784_BOOL,w_00009_00015_BOOL,aux20785_BOOL],aux20786_BOOL);
constraint int_eq_reif(TWorkers_00009_00009_INTEGER,1,aux20787_BOOL);
constraint int_eq_reif(TWorkers_00009_00016_INTEGER,1,aux20788_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20789,s_00016],0);
constraint int_lt_reif(s_00009,aux20789,aux20790_BOOL);
constraint int_le_reif(s_00016, s_00009,aux20791_BOOL);
constraint array_bool_and([aux20787_BOOL,aux20788_BOOL,aux20790_BOOL,w_00009_00016_BOOL,aux20791_BOOL],aux20792_BOOL);
constraint int_eq_reif(TWorkers_00009_00009_INTEGER,1,aux20793_BOOL);
constraint int_eq_reif(TWorkers_00009_00017_INTEGER,1,aux20794_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux20795,s_00017],0);
constraint int_lt_reif(s_00009,aux20795,aux20796_BOOL);
constraint int_le_reif(s_00017, s_00009,aux20797_BOOL);
constraint array_bool_and([aux20793_BOOL,aux20794_BOOL,aux20796_BOOL,w_00009_00017_BOOL,aux20797_BOOL],aux20798_BOOL);
constraint int_eq_reif(TWorkers_00009_00009_INTEGER,1,aux20799_BOOL);
constraint int_eq_reif(TWorkers_00009_00018_INTEGER,1,aux20800_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20801,s_00018],0);
constraint int_lt_reif(s_00009,aux20801,aux20802_BOOL);
constraint int_le_reif(s_00018, s_00009,aux20803_BOOL);
constraint array_bool_and([aux20799_BOOL,aux20800_BOOL,aux20802_BOOL,w_00009_00018_BOOL,aux20803_BOOL],aux20804_BOOL);
constraint int_eq_reif(TWorkers_00009_00009_INTEGER,1,aux20805_BOOL);
constraint int_eq_reif(TWorkers_00009_00019_INTEGER,1,aux20806_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux20807,s_00019],0);
constraint int_lt_reif(s_00009,aux20807,aux20808_BOOL);
constraint int_le_reif(s_00019, s_00009,aux20809_BOOL);
constraint array_bool_and([aux20805_BOOL,aux20806_BOOL,aux20808_BOOL,w_00009_00019_BOOL,aux20809_BOOL],aux20810_BOOL);
constraint int_eq_reif(TWorkers_00009_00009_INTEGER,1,aux20811_BOOL);
constraint int_eq_reif(TWorkers_00009_00020_INTEGER,1,aux20812_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20813,s_00020],0);
constraint int_lt_reif(s_00009,aux20813,aux20814_BOOL);
constraint int_le_reif(s_00020, s_00009,aux20815_BOOL);
constraint array_bool_and([aux20811_BOOL,aux20812_BOOL,aux20814_BOOL,w_00009_00020_BOOL,aux20815_BOOL],aux20816_BOOL);
constraint int_eq_reif(TWorkers_00009_00009_INTEGER,1,aux20817_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20818,s_00009],0);
constraint int_lt_reif(s_00009,aux20818,aux20819_BOOL);
constraint array_bool_and([aux20817_BOOL,aux20819_BOOL,w_00009_00009_BOOL],aux20820_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux20708_INTEGER,aux20714_INTEGER,aux20720_INTEGER,aux20726_INTEGER,aux20732_INTEGER,aux20738_INTEGER,aux20744_INTEGER,aux20750_INTEGER,aux20756_INTEGER,aux20762_INTEGER,aux20768_INTEGER,aux20774_INTEGER,aux20780_INTEGER,aux20786_INTEGER,aux20792_INTEGER,aux20798_INTEGER,aux20804_INTEGER,aux20810_INTEGER,aux20816_INTEGER,aux20820_INTEGER,1],0,aux20821_BOOL);
constraint int_eq_reif(TWorkers_00009_00001_INTEGER,1,aux20822_BOOL);
constraint int_eq_reif(TWorkers_00009_00013_INTEGER,1,aux20823_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux20824,s_00001],0);
constraint int_lt_reif(s_00013,aux20824,aux20825_BOOL);
constraint int_le_reif(s_00001, s_00013,aux20826_BOOL);
constraint array_bool_and([aux20822_BOOL,aux20823_BOOL,aux20825_BOOL,w_00009_00001_BOOL,aux20826_BOOL],aux20827_BOOL);
constraint int_eq_reif(TWorkers_00009_00002_INTEGER,1,aux20828_BOOL);
constraint int_eq_reif(TWorkers_00009_00013_INTEGER,1,aux20829_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux20830,s_00002],0);
constraint int_lt_reif(s_00013,aux20830,aux20831_BOOL);
constraint int_le_reif(s_00002, s_00013,aux20832_BOOL);
constraint array_bool_and([aux20828_BOOL,aux20829_BOOL,aux20831_BOOL,w_00009_00002_BOOL,aux20832_BOOL],aux20833_BOOL);
constraint int_eq_reif(TWorkers_00009_00003_INTEGER,1,aux20834_BOOL);
constraint int_eq_reif(TWorkers_00009_00013_INTEGER,1,aux20835_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20836,s_00003],0);
constraint int_lt_reif(s_00013,aux20836,aux20837_BOOL);
constraint int_le_reif(s_00003, s_00013,aux20838_BOOL);
constraint array_bool_and([aux20834_BOOL,aux20835_BOOL,aux20837_BOOL,w_00009_00003_BOOL,aux20838_BOOL],aux20839_BOOL);
constraint int_eq_reif(TWorkers_00009_00004_INTEGER,1,aux20840_BOOL);
constraint int_eq_reif(TWorkers_00009_00013_INTEGER,1,aux20841_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20842,s_00004],0);
constraint int_lt_reif(s_00013,aux20842,aux20843_BOOL);
constraint int_le_reif(s_00004, s_00013,aux20844_BOOL);
constraint array_bool_and([aux20840_BOOL,aux20841_BOOL,aux20843_BOOL,w_00009_00004_BOOL,aux20844_BOOL],aux20845_BOOL);
constraint int_eq_reif(TWorkers_00009_00005_INTEGER,1,aux20846_BOOL);
constraint int_eq_reif(TWorkers_00009_00013_INTEGER,1,aux20847_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20848,s_00005],0);
constraint int_lt_reif(s_00013,aux20848,aux20849_BOOL);
constraint int_le_reif(s_00005, s_00013,aux20850_BOOL);
constraint array_bool_and([aux20846_BOOL,aux20847_BOOL,aux20849_BOOL,w_00009_00005_BOOL,aux20850_BOOL],aux20851_BOOL);
constraint int_eq_reif(TWorkers_00009_00006_INTEGER,1,aux20852_BOOL);
constraint int_eq_reif(TWorkers_00009_00013_INTEGER,1,aux20853_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20854,s_00006],0);
constraint int_lt_reif(s_00013,aux20854,aux20855_BOOL);
constraint int_le_reif(s_00006, s_00013,aux20856_BOOL);
constraint array_bool_and([aux20852_BOOL,aux20853_BOOL,aux20855_BOOL,w_00009_00006_BOOL,aux20856_BOOL],aux20857_BOOL);
constraint int_eq_reif(TWorkers_00009_00007_INTEGER,1,aux20858_BOOL);
constraint int_eq_reif(TWorkers_00009_00013_INTEGER,1,aux20859_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20860,s_00007],0);
constraint int_lt_reif(s_00013,aux20860,aux20861_BOOL);
constraint int_le_reif(s_00007, s_00013,aux20862_BOOL);
constraint array_bool_and([aux20858_BOOL,aux20859_BOOL,aux20861_BOOL,w_00009_00007_BOOL,aux20862_BOOL],aux20863_BOOL);
constraint int_eq_reif(TWorkers_00009_00008_INTEGER,1,aux20864_BOOL);
constraint int_eq_reif(TWorkers_00009_00013_INTEGER,1,aux20865_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20866,s_00008],0);
constraint int_lt_reif(s_00013,aux20866,aux20867_BOOL);
constraint int_le_reif(s_00008, s_00013,aux20868_BOOL);
constraint array_bool_and([aux20864_BOOL,aux20865_BOOL,aux20867_BOOL,w_00009_00008_BOOL,aux20868_BOOL],aux20869_BOOL);
constraint int_eq_reif(TWorkers_00009_00009_INTEGER,1,aux20870_BOOL);
constraint int_eq_reif(TWorkers_00009_00013_INTEGER,1,aux20871_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20872,s_00009],0);
constraint int_lt_reif(s_00013,aux20872,aux20873_BOOL);
constraint int_le_reif(s_00009, s_00013,aux20874_BOOL);
constraint array_bool_and([aux20870_BOOL,aux20871_BOOL,aux20873_BOOL,w_00009_00009_BOOL,aux20874_BOOL],aux20875_BOOL);
constraint int_eq_reif(TWorkers_00009_00010_INTEGER,1,aux20876_BOOL);
constraint int_eq_reif(TWorkers_00009_00013_INTEGER,1,aux20877_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux20878,s_00010],0);
constraint int_lt_reif(s_00013,aux20878,aux20879_BOOL);
constraint int_le_reif(s_00010, s_00013,aux20880_BOOL);
constraint array_bool_and([aux20876_BOOL,aux20877_BOOL,aux20879_BOOL,w_00009_00010_BOOL,aux20880_BOOL],aux20881_BOOL);
constraint int_eq_reif(TWorkers_00009_00011_INTEGER,1,aux20882_BOOL);
constraint int_eq_reif(TWorkers_00009_00013_INTEGER,1,aux20883_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20884,s_00011],0);
constraint int_lt_reif(s_00013,aux20884,aux20885_BOOL);
constraint int_le_reif(s_00011, s_00013,aux20886_BOOL);
constraint array_bool_and([aux20882_BOOL,aux20883_BOOL,aux20885_BOOL,w_00009_00011_BOOL,aux20886_BOOL],aux20887_BOOL);
constraint int_eq_reif(TWorkers_00009_00012_INTEGER,1,aux20888_BOOL);
constraint int_eq_reif(TWorkers_00009_00013_INTEGER,1,aux20889_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux20890,s_00012],0);
constraint int_lt_reif(s_00013,aux20890,aux20891_BOOL);
constraint int_le_reif(s_00012, s_00013,aux20892_BOOL);
constraint array_bool_and([aux20888_BOOL,aux20889_BOOL,aux20891_BOOL,w_00009_00012_BOOL,aux20892_BOOL],aux20893_BOOL);
constraint int_eq_reif(TWorkers_00009_00013_INTEGER,1,aux20894_BOOL);
constraint int_eq_reif(TWorkers_00009_00014_INTEGER,1,aux20895_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20896,s_00014],0);
constraint int_lt_reif(s_00013,aux20896,aux20897_BOOL);
constraint int_le_reif(s_00014, s_00013,aux20898_BOOL);
constraint array_bool_and([aux20894_BOOL,aux20895_BOOL,aux20897_BOOL,w_00009_00014_BOOL,aux20898_BOOL],aux20899_BOOL);
constraint int_eq_reif(TWorkers_00009_00013_INTEGER,1,aux20900_BOOL);
constraint int_eq_reif(TWorkers_00009_00015_INTEGER,1,aux20901_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20902,s_00015],0);
constraint int_lt_reif(s_00013,aux20902,aux20903_BOOL);
constraint int_le_reif(s_00015, s_00013,aux20904_BOOL);
constraint array_bool_and([aux20900_BOOL,aux20901_BOOL,aux20903_BOOL,w_00009_00015_BOOL,aux20904_BOOL],aux20905_BOOL);
constraint int_eq_reif(TWorkers_00009_00013_INTEGER,1,aux20906_BOOL);
constraint int_eq_reif(TWorkers_00009_00016_INTEGER,1,aux20907_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20908,s_00016],0);
constraint int_lt_reif(s_00013,aux20908,aux20909_BOOL);
constraint int_le_reif(s_00016, s_00013,aux20910_BOOL);
constraint array_bool_and([aux20906_BOOL,aux20907_BOOL,aux20909_BOOL,w_00009_00016_BOOL,aux20910_BOOL],aux20911_BOOL);
constraint int_eq_reif(TWorkers_00009_00013_INTEGER,1,aux20912_BOOL);
constraint int_eq_reif(TWorkers_00009_00017_INTEGER,1,aux20913_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux20914,s_00017],0);
constraint int_lt_reif(s_00013,aux20914,aux20915_BOOL);
constraint int_le_reif(s_00017, s_00013,aux20916_BOOL);
constraint array_bool_and([aux20912_BOOL,aux20913_BOOL,aux20915_BOOL,w_00009_00017_BOOL,aux20916_BOOL],aux20917_BOOL);
constraint int_eq_reif(TWorkers_00009_00013_INTEGER,1,aux20918_BOOL);
constraint int_eq_reif(TWorkers_00009_00018_INTEGER,1,aux20919_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20920,s_00018],0);
constraint int_lt_reif(s_00013,aux20920,aux20921_BOOL);
constraint int_le_reif(s_00018, s_00013,aux20922_BOOL);
constraint array_bool_and([aux20918_BOOL,aux20919_BOOL,aux20921_BOOL,w_00009_00018_BOOL,aux20922_BOOL],aux20923_BOOL);
constraint int_eq_reif(TWorkers_00009_00013_INTEGER,1,aux20924_BOOL);
constraint int_eq_reif(TWorkers_00009_00019_INTEGER,1,aux20925_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux20926,s_00019],0);
constraint int_lt_reif(s_00013,aux20926,aux20927_BOOL);
constraint int_le_reif(s_00019, s_00013,aux20928_BOOL);
constraint array_bool_and([aux20924_BOOL,aux20925_BOOL,aux20927_BOOL,w_00009_00019_BOOL,aux20928_BOOL],aux20929_BOOL);
constraint int_eq_reif(TWorkers_00009_00013_INTEGER,1,aux20930_BOOL);
constraint int_eq_reif(TWorkers_00009_00020_INTEGER,1,aux20931_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20932,s_00020],0);
constraint int_lt_reif(s_00013,aux20932,aux20933_BOOL);
constraint int_le_reif(s_00020, s_00013,aux20934_BOOL);
constraint array_bool_and([aux20930_BOOL,aux20931_BOOL,aux20933_BOOL,w_00009_00020_BOOL,aux20934_BOOL],aux20935_BOOL);
constraint int_eq_reif(TWorkers_00009_00013_INTEGER,1,aux20936_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20937,s_00013],0);
constraint int_lt_reif(s_00013,aux20937,aux20938_BOOL);
constraint array_bool_and([aux20936_BOOL,aux20938_BOOL,w_00009_00013_BOOL],aux20939_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux20827_INTEGER,aux20833_INTEGER,aux20839_INTEGER,aux20845_INTEGER,aux20851_INTEGER,aux20857_INTEGER,aux20863_INTEGER,aux20869_INTEGER,aux20875_INTEGER,aux20881_INTEGER,aux20887_INTEGER,aux20893_INTEGER,aux20899_INTEGER,aux20905_INTEGER,aux20911_INTEGER,aux20917_INTEGER,aux20923_INTEGER,aux20929_INTEGER,aux20935_INTEGER,aux20939_INTEGER,1],0,aux20940_BOOL);
constraint int_eq_reif(TWorkers_00009_00001_INTEGER,1,aux20941_BOOL);
constraint int_eq_reif(TWorkers_00009_00005_INTEGER,1,aux20942_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux20943,s_00001],0);
constraint int_lt_reif(s_00005,aux20943,aux20944_BOOL);
constraint int_le_reif(s_00001, s_00005,aux20945_BOOL);
constraint array_bool_and([aux20941_BOOL,aux20942_BOOL,aux20944_BOOL,w_00009_00001_BOOL,aux20945_BOOL],aux20946_BOOL);
constraint int_eq_reif(TWorkers_00009_00002_INTEGER,1,aux20947_BOOL);
constraint int_eq_reif(TWorkers_00009_00005_INTEGER,1,aux20948_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux20949,s_00002],0);
constraint int_lt_reif(s_00005,aux20949,aux20950_BOOL);
constraint int_le_reif(s_00002, s_00005,aux20951_BOOL);
constraint array_bool_and([aux20947_BOOL,aux20948_BOOL,aux20950_BOOL,w_00009_00002_BOOL,aux20951_BOOL],aux20952_BOOL);
constraint int_eq_reif(TWorkers_00009_00003_INTEGER,1,aux20953_BOOL);
constraint int_eq_reif(TWorkers_00009_00005_INTEGER,1,aux20954_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20955,s_00003],0);
constraint int_lt_reif(s_00005,aux20955,aux20956_BOOL);
constraint int_le_reif(s_00003, s_00005,aux20957_BOOL);
constraint array_bool_and([aux20953_BOOL,aux20954_BOOL,aux20956_BOOL,w_00009_00003_BOOL,aux20957_BOOL],aux20958_BOOL);
constraint int_eq_reif(TWorkers_00009_00004_INTEGER,1,aux20959_BOOL);
constraint int_eq_reif(TWorkers_00009_00005_INTEGER,1,aux20960_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20961,s_00004],0);
constraint int_lt_reif(s_00005,aux20961,aux20962_BOOL);
constraint int_le_reif(s_00004, s_00005,aux20963_BOOL);
constraint array_bool_and([aux20959_BOOL,aux20960_BOOL,aux20962_BOOL,w_00009_00004_BOOL,aux20963_BOOL],aux20964_BOOL);
constraint int_eq_reif(TWorkers_00009_00005_INTEGER,1,aux20965_BOOL);
constraint int_eq_reif(TWorkers_00009_00006_INTEGER,1,aux20966_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20967,s_00006],0);
constraint int_lt_reif(s_00005,aux20967,aux20968_BOOL);
constraint int_le_reif(s_00006, s_00005,aux20969_BOOL);
constraint array_bool_and([aux20965_BOOL,aux20966_BOOL,aux20968_BOOL,w_00009_00006_BOOL,aux20969_BOOL],aux20970_BOOL);
constraint int_eq_reif(TWorkers_00009_00005_INTEGER,1,aux20971_BOOL);
constraint int_eq_reif(TWorkers_00009_00007_INTEGER,1,aux20972_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20973,s_00007],0);
constraint int_lt_reif(s_00005,aux20973,aux20974_BOOL);
constraint int_le_reif(s_00007, s_00005,aux20975_BOOL);
constraint array_bool_and([aux20971_BOOL,aux20972_BOOL,aux20974_BOOL,w_00009_00007_BOOL,aux20975_BOOL],aux20976_BOOL);
constraint int_eq_reif(TWorkers_00009_00005_INTEGER,1,aux20977_BOOL);
constraint int_eq_reif(TWorkers_00009_00008_INTEGER,1,aux20978_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20979,s_00008],0);
constraint int_lt_reif(s_00005,aux20979,aux20980_BOOL);
constraint int_le_reif(s_00008, s_00005,aux20981_BOOL);
constraint array_bool_and([aux20977_BOOL,aux20978_BOOL,aux20980_BOOL,w_00009_00008_BOOL,aux20981_BOOL],aux20982_BOOL);
constraint int_eq_reif(TWorkers_00009_00005_INTEGER,1,aux20983_BOOL);
constraint int_eq_reif(TWorkers_00009_00009_INTEGER,1,aux20984_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20985,s_00009],0);
constraint int_lt_reif(s_00005,aux20985,aux20986_BOOL);
constraint int_le_reif(s_00009, s_00005,aux20987_BOOL);
constraint array_bool_and([aux20983_BOOL,aux20984_BOOL,aux20986_BOOL,w_00009_00009_BOOL,aux20987_BOOL],aux20988_BOOL);
constraint int_eq_reif(TWorkers_00009_00005_INTEGER,1,aux20989_BOOL);
constraint int_eq_reif(TWorkers_00009_00010_INTEGER,1,aux20990_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux20991,s_00010],0);
constraint int_lt_reif(s_00005,aux20991,aux20992_BOOL);
constraint int_le_reif(s_00010, s_00005,aux20993_BOOL);
constraint array_bool_and([aux20989_BOOL,aux20990_BOOL,aux20992_BOOL,w_00009_00010_BOOL,aux20993_BOOL],aux20994_BOOL);
constraint int_eq_reif(TWorkers_00009_00005_INTEGER,1,aux20995_BOOL);
constraint int_eq_reif(TWorkers_00009_00011_INTEGER,1,aux20996_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20997,s_00011],0);
constraint int_lt_reif(s_00005,aux20997,aux20998_BOOL);
constraint int_le_reif(s_00011, s_00005,aux20999_BOOL);
constraint array_bool_and([aux20995_BOOL,aux20996_BOOL,aux20998_BOOL,w_00009_00011_BOOL,aux20999_BOOL],aux21000_BOOL);
constraint int_eq_reif(TWorkers_00009_00005_INTEGER,1,aux21001_BOOL);
constraint int_eq_reif(TWorkers_00009_00012_INTEGER,1,aux21002_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21003,s_00012],0);
constraint int_lt_reif(s_00005,aux21003,aux21004_BOOL);
constraint int_le_reif(s_00012, s_00005,aux21005_BOOL);
constraint array_bool_and([aux21001_BOOL,aux21002_BOOL,aux21004_BOOL,w_00009_00012_BOOL,aux21005_BOOL],aux21006_BOOL);
constraint int_eq_reif(TWorkers_00009_00005_INTEGER,1,aux21007_BOOL);
constraint int_eq_reif(TWorkers_00009_00013_INTEGER,1,aux21008_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21009,s_00013],0);
constraint int_lt_reif(s_00005,aux21009,aux21010_BOOL);
constraint int_le_reif(s_00013, s_00005,aux21011_BOOL);
constraint array_bool_and([aux21007_BOOL,aux21008_BOOL,aux21010_BOOL,w_00009_00013_BOOL,aux21011_BOOL],aux21012_BOOL);
constraint int_eq_reif(TWorkers_00009_00005_INTEGER,1,aux21013_BOOL);
constraint int_eq_reif(TWorkers_00009_00014_INTEGER,1,aux21014_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21015,s_00014],0);
constraint int_lt_reif(s_00005,aux21015,aux21016_BOOL);
constraint int_le_reif(s_00014, s_00005,aux21017_BOOL);
constraint array_bool_and([aux21013_BOOL,aux21014_BOOL,aux21016_BOOL,w_00009_00014_BOOL,aux21017_BOOL],aux21018_BOOL);
constraint int_eq_reif(TWorkers_00009_00005_INTEGER,1,aux21019_BOOL);
constraint int_eq_reif(TWorkers_00009_00015_INTEGER,1,aux21020_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21021,s_00015],0);
constraint int_lt_reif(s_00005,aux21021,aux21022_BOOL);
constraint int_le_reif(s_00015, s_00005,aux21023_BOOL);
constraint array_bool_and([aux21019_BOOL,aux21020_BOOL,aux21022_BOOL,w_00009_00015_BOOL,aux21023_BOOL],aux21024_BOOL);
constraint int_eq_reif(TWorkers_00009_00005_INTEGER,1,aux21025_BOOL);
constraint int_eq_reif(TWorkers_00009_00016_INTEGER,1,aux21026_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21027,s_00016],0);
constraint int_lt_reif(s_00005,aux21027,aux21028_BOOL);
constraint int_le_reif(s_00016, s_00005,aux21029_BOOL);
constraint array_bool_and([aux21025_BOOL,aux21026_BOOL,aux21028_BOOL,w_00009_00016_BOOL,aux21029_BOOL],aux21030_BOOL);
constraint int_eq_reif(TWorkers_00009_00005_INTEGER,1,aux21031_BOOL);
constraint int_eq_reif(TWorkers_00009_00017_INTEGER,1,aux21032_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21033,s_00017],0);
constraint int_lt_reif(s_00005,aux21033,aux21034_BOOL);
constraint int_le_reif(s_00017, s_00005,aux21035_BOOL);
constraint array_bool_and([aux21031_BOOL,aux21032_BOOL,aux21034_BOOL,w_00009_00017_BOOL,aux21035_BOOL],aux21036_BOOL);
constraint int_eq_reif(TWorkers_00009_00005_INTEGER,1,aux21037_BOOL);
constraint int_eq_reif(TWorkers_00009_00018_INTEGER,1,aux21038_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21039,s_00018],0);
constraint int_lt_reif(s_00005,aux21039,aux21040_BOOL);
constraint int_le_reif(s_00018, s_00005,aux21041_BOOL);
constraint array_bool_and([aux21037_BOOL,aux21038_BOOL,aux21040_BOOL,w_00009_00018_BOOL,aux21041_BOOL],aux21042_BOOL);
constraint int_eq_reif(TWorkers_00009_00005_INTEGER,1,aux21043_BOOL);
constraint int_eq_reif(TWorkers_00009_00019_INTEGER,1,aux21044_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21045,s_00019],0);
constraint int_lt_reif(s_00005,aux21045,aux21046_BOOL);
constraint int_le_reif(s_00019, s_00005,aux21047_BOOL);
constraint array_bool_and([aux21043_BOOL,aux21044_BOOL,aux21046_BOOL,w_00009_00019_BOOL,aux21047_BOOL],aux21048_BOOL);
constraint int_eq_reif(TWorkers_00009_00005_INTEGER,1,aux21049_BOOL);
constraint int_eq_reif(TWorkers_00009_00020_INTEGER,1,aux21050_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21051,s_00020],0);
constraint int_lt_reif(s_00005,aux21051,aux21052_BOOL);
constraint int_le_reif(s_00020, s_00005,aux21053_BOOL);
constraint array_bool_and([aux21049_BOOL,aux21050_BOOL,aux21052_BOOL,w_00009_00020_BOOL,aux21053_BOOL],aux21054_BOOL);
constraint int_eq_reif(TWorkers_00009_00005_INTEGER,1,aux21055_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21056,s_00005],0);
constraint int_lt_reif(s_00005,aux21056,aux21057_BOOL);
constraint array_bool_and([aux21055_BOOL,aux21057_BOOL,w_00009_00005_BOOL],aux21058_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux20946_INTEGER,aux20952_INTEGER,aux20958_INTEGER,aux20964_INTEGER,aux20970_INTEGER,aux20976_INTEGER,aux20982_INTEGER,aux20988_INTEGER,aux20994_INTEGER,aux21000_INTEGER,aux21006_INTEGER,aux21012_INTEGER,aux21018_INTEGER,aux21024_INTEGER,aux21030_INTEGER,aux21036_INTEGER,aux21042_INTEGER,aux21048_INTEGER,aux21054_INTEGER,aux21058_INTEGER,1],0,aux21059_BOOL);
constraint int_eq_reif(TWorkers_00009_00001_INTEGER,1,aux21060_BOOL);
constraint int_eq_reif(TWorkers_00009_00007_INTEGER,1,aux21061_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21062,s_00001],0);
constraint int_lt_reif(s_00007,aux21062,aux21063_BOOL);
constraint int_le_reif(s_00001, s_00007,aux21064_BOOL);
constraint array_bool_and([aux21060_BOOL,aux21061_BOOL,aux21063_BOOL,w_00009_00001_BOOL,aux21064_BOOL],aux21065_BOOL);
constraint int_eq_reif(TWorkers_00009_00002_INTEGER,1,aux21066_BOOL);
constraint int_eq_reif(TWorkers_00009_00007_INTEGER,1,aux21067_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21068,s_00002],0);
constraint int_lt_reif(s_00007,aux21068,aux21069_BOOL);
constraint int_le_reif(s_00002, s_00007,aux21070_BOOL);
constraint array_bool_and([aux21066_BOOL,aux21067_BOOL,aux21069_BOOL,w_00009_00002_BOOL,aux21070_BOOL],aux21071_BOOL);
constraint int_eq_reif(TWorkers_00009_00003_INTEGER,1,aux21072_BOOL);
constraint int_eq_reif(TWorkers_00009_00007_INTEGER,1,aux21073_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21074,s_00003],0);
constraint int_lt_reif(s_00007,aux21074,aux21075_BOOL);
constraint int_le_reif(s_00003, s_00007,aux21076_BOOL);
constraint array_bool_and([aux21072_BOOL,aux21073_BOOL,aux21075_BOOL,w_00009_00003_BOOL,aux21076_BOOL],aux21077_BOOL);
constraint int_eq_reif(TWorkers_00009_00004_INTEGER,1,aux21078_BOOL);
constraint int_eq_reif(TWorkers_00009_00007_INTEGER,1,aux21079_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21080,s_00004],0);
constraint int_lt_reif(s_00007,aux21080,aux21081_BOOL);
constraint int_le_reif(s_00004, s_00007,aux21082_BOOL);
constraint array_bool_and([aux21078_BOOL,aux21079_BOOL,aux21081_BOOL,w_00009_00004_BOOL,aux21082_BOOL],aux21083_BOOL);
constraint int_eq_reif(TWorkers_00009_00005_INTEGER,1,aux21084_BOOL);
constraint int_eq_reif(TWorkers_00009_00007_INTEGER,1,aux21085_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21086,s_00005],0);
constraint int_lt_reif(s_00007,aux21086,aux21087_BOOL);
constraint int_le_reif(s_00005, s_00007,aux21088_BOOL);
constraint array_bool_and([aux21084_BOOL,aux21085_BOOL,aux21087_BOOL,w_00009_00005_BOOL,aux21088_BOOL],aux21089_BOOL);
constraint int_eq_reif(TWorkers_00009_00006_INTEGER,1,aux21090_BOOL);
constraint int_eq_reif(TWorkers_00009_00007_INTEGER,1,aux21091_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21092,s_00006],0);
constraint int_lt_reif(s_00007,aux21092,aux21093_BOOL);
constraint int_le_reif(s_00006, s_00007,aux21094_BOOL);
constraint array_bool_and([aux21090_BOOL,aux21091_BOOL,aux21093_BOOL,w_00009_00006_BOOL,aux21094_BOOL],aux21095_BOOL);
constraint int_eq_reif(TWorkers_00009_00007_INTEGER,1,aux21096_BOOL);
constraint int_eq_reif(TWorkers_00009_00008_INTEGER,1,aux21097_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21098,s_00008],0);
constraint int_lt_reif(s_00007,aux21098,aux21099_BOOL);
constraint int_le_reif(s_00008, s_00007,aux21100_BOOL);
constraint array_bool_and([aux21096_BOOL,aux21097_BOOL,aux21099_BOOL,w_00009_00008_BOOL,aux21100_BOOL],aux21101_BOOL);
constraint int_eq_reif(TWorkers_00009_00007_INTEGER,1,aux21102_BOOL);
constraint int_eq_reif(TWorkers_00009_00009_INTEGER,1,aux21103_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21104,s_00009],0);
constraint int_lt_reif(s_00007,aux21104,aux21105_BOOL);
constraint int_le_reif(s_00009, s_00007,aux21106_BOOL);
constraint array_bool_and([aux21102_BOOL,aux21103_BOOL,aux21105_BOOL,w_00009_00009_BOOL,aux21106_BOOL],aux21107_BOOL);
constraint int_eq_reif(TWorkers_00009_00007_INTEGER,1,aux21108_BOOL);
constraint int_eq_reif(TWorkers_00009_00010_INTEGER,1,aux21109_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux21110,s_00010],0);
constraint int_lt_reif(s_00007,aux21110,aux21111_BOOL);
constraint int_le_reif(s_00010, s_00007,aux21112_BOOL);
constraint array_bool_and([aux21108_BOOL,aux21109_BOOL,aux21111_BOOL,w_00009_00010_BOOL,aux21112_BOOL],aux21113_BOOL);
constraint int_eq_reif(TWorkers_00009_00007_INTEGER,1,aux21114_BOOL);
constraint int_eq_reif(TWorkers_00009_00011_INTEGER,1,aux21115_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21116,s_00011],0);
constraint int_lt_reif(s_00007,aux21116,aux21117_BOOL);
constraint int_le_reif(s_00011, s_00007,aux21118_BOOL);
constraint array_bool_and([aux21114_BOOL,aux21115_BOOL,aux21117_BOOL,w_00009_00011_BOOL,aux21118_BOOL],aux21119_BOOL);
constraint int_eq_reif(TWorkers_00009_00007_INTEGER,1,aux21120_BOOL);
constraint int_eq_reif(TWorkers_00009_00012_INTEGER,1,aux21121_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21122,s_00012],0);
constraint int_lt_reif(s_00007,aux21122,aux21123_BOOL);
constraint int_le_reif(s_00012, s_00007,aux21124_BOOL);
constraint array_bool_and([aux21120_BOOL,aux21121_BOOL,aux21123_BOOL,w_00009_00012_BOOL,aux21124_BOOL],aux21125_BOOL);
constraint int_eq_reif(TWorkers_00009_00007_INTEGER,1,aux21126_BOOL);
constraint int_eq_reif(TWorkers_00009_00013_INTEGER,1,aux21127_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21128,s_00013],0);
constraint int_lt_reif(s_00007,aux21128,aux21129_BOOL);
constraint int_le_reif(s_00013, s_00007,aux21130_BOOL);
constraint array_bool_and([aux21126_BOOL,aux21127_BOOL,aux21129_BOOL,w_00009_00013_BOOL,aux21130_BOOL],aux21131_BOOL);
constraint int_eq_reif(TWorkers_00009_00007_INTEGER,1,aux21132_BOOL);
constraint int_eq_reif(TWorkers_00009_00014_INTEGER,1,aux21133_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21134,s_00014],0);
constraint int_lt_reif(s_00007,aux21134,aux21135_BOOL);
constraint int_le_reif(s_00014, s_00007,aux21136_BOOL);
constraint array_bool_and([aux21132_BOOL,aux21133_BOOL,aux21135_BOOL,w_00009_00014_BOOL,aux21136_BOOL],aux21137_BOOL);
constraint int_eq_reif(TWorkers_00009_00007_INTEGER,1,aux21138_BOOL);
constraint int_eq_reif(TWorkers_00009_00015_INTEGER,1,aux21139_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21140,s_00015],0);
constraint int_lt_reif(s_00007,aux21140,aux21141_BOOL);
constraint int_le_reif(s_00015, s_00007,aux21142_BOOL);
constraint array_bool_and([aux21138_BOOL,aux21139_BOOL,aux21141_BOOL,w_00009_00015_BOOL,aux21142_BOOL],aux21143_BOOL);
constraint int_eq_reif(TWorkers_00009_00007_INTEGER,1,aux21144_BOOL);
constraint int_eq_reif(TWorkers_00009_00016_INTEGER,1,aux21145_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21146,s_00016],0);
constraint int_lt_reif(s_00007,aux21146,aux21147_BOOL);
constraint int_le_reif(s_00016, s_00007,aux21148_BOOL);
constraint array_bool_and([aux21144_BOOL,aux21145_BOOL,aux21147_BOOL,w_00009_00016_BOOL,aux21148_BOOL],aux21149_BOOL);
constraint int_eq_reif(TWorkers_00009_00007_INTEGER,1,aux21150_BOOL);
constraint int_eq_reif(TWorkers_00009_00017_INTEGER,1,aux21151_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21152,s_00017],0);
constraint int_lt_reif(s_00007,aux21152,aux21153_BOOL);
constraint int_le_reif(s_00017, s_00007,aux21154_BOOL);
constraint array_bool_and([aux21150_BOOL,aux21151_BOOL,aux21153_BOOL,w_00009_00017_BOOL,aux21154_BOOL],aux21155_BOOL);
constraint int_eq_reif(TWorkers_00009_00007_INTEGER,1,aux21156_BOOL);
constraint int_eq_reif(TWorkers_00009_00018_INTEGER,1,aux21157_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21158,s_00018],0);
constraint int_lt_reif(s_00007,aux21158,aux21159_BOOL);
constraint int_le_reif(s_00018, s_00007,aux21160_BOOL);
constraint array_bool_and([aux21156_BOOL,aux21157_BOOL,aux21159_BOOL,w_00009_00018_BOOL,aux21160_BOOL],aux21161_BOOL);
constraint int_eq_reif(TWorkers_00009_00007_INTEGER,1,aux21162_BOOL);
constraint int_eq_reif(TWorkers_00009_00019_INTEGER,1,aux21163_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21164,s_00019],0);
constraint int_lt_reif(s_00007,aux21164,aux21165_BOOL);
constraint int_le_reif(s_00019, s_00007,aux21166_BOOL);
constraint array_bool_and([aux21162_BOOL,aux21163_BOOL,aux21165_BOOL,w_00009_00019_BOOL,aux21166_BOOL],aux21167_BOOL);
constraint int_eq_reif(TWorkers_00009_00007_INTEGER,1,aux21168_BOOL);
constraint int_eq_reif(TWorkers_00009_00020_INTEGER,1,aux21169_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21170,s_00020],0);
constraint int_lt_reif(s_00007,aux21170,aux21171_BOOL);
constraint int_le_reif(s_00020, s_00007,aux21172_BOOL);
constraint array_bool_and([aux21168_BOOL,aux21169_BOOL,aux21171_BOOL,w_00009_00020_BOOL,aux21172_BOOL],aux21173_BOOL);
constraint int_eq_reif(TWorkers_00009_00007_INTEGER,1,aux21174_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21175,s_00007],0);
constraint int_lt_reif(s_00007,aux21175,aux21176_BOOL);
constraint array_bool_and([aux21174_BOOL,aux21176_BOOL,w_00009_00007_BOOL],aux21177_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux21065_INTEGER,aux21071_INTEGER,aux21077_INTEGER,aux21083_INTEGER,aux21089_INTEGER,aux21095_INTEGER,aux21101_INTEGER,aux21107_INTEGER,aux21113_INTEGER,aux21119_INTEGER,aux21125_INTEGER,aux21131_INTEGER,aux21137_INTEGER,aux21143_INTEGER,aux21149_INTEGER,aux21155_INTEGER,aux21161_INTEGER,aux21167_INTEGER,aux21173_INTEGER,aux21177_INTEGER,1],0,aux21178_BOOL);
constraint int_eq_reif(TWorkers_00009_00001_INTEGER,1,aux21179_BOOL);
constraint int_eq_reif(TWorkers_00009_00002_INTEGER,1,aux21180_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21181,s_00002],0);
constraint int_lt_reif(s_00001,aux21181,aux21182_BOOL);
constraint int_le_reif(s_00002, s_00001,aux21183_BOOL);
constraint array_bool_and([aux21179_BOOL,aux21180_BOOL,aux21182_BOOL,w_00009_00002_BOOL,aux21183_BOOL],aux21184_BOOL);
constraint int_eq_reif(TWorkers_00009_00001_INTEGER,1,aux21185_BOOL);
constraint int_eq_reif(TWorkers_00009_00003_INTEGER,1,aux21186_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21187,s_00003],0);
constraint int_lt_reif(s_00001,aux21187,aux21188_BOOL);
constraint int_le_reif(s_00003, s_00001,aux21189_BOOL);
constraint array_bool_and([aux21185_BOOL,aux21186_BOOL,aux21188_BOOL,w_00009_00003_BOOL,aux21189_BOOL],aux21190_BOOL);
constraint int_eq_reif(TWorkers_00009_00001_INTEGER,1,aux21191_BOOL);
constraint int_eq_reif(TWorkers_00009_00004_INTEGER,1,aux21192_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21193,s_00004],0);
constraint int_lt_reif(s_00001,aux21193,aux21194_BOOL);
constraint int_le_reif(s_00004, s_00001,aux21195_BOOL);
constraint array_bool_and([aux21191_BOOL,aux21192_BOOL,aux21194_BOOL,w_00009_00004_BOOL,aux21195_BOOL],aux21196_BOOL);
constraint int_eq_reif(TWorkers_00009_00001_INTEGER,1,aux21197_BOOL);
constraint int_eq_reif(TWorkers_00009_00005_INTEGER,1,aux21198_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21199,s_00005],0);
constraint int_lt_reif(s_00001,aux21199,aux21200_BOOL);
constraint int_le_reif(s_00005, s_00001,aux21201_BOOL);
constraint array_bool_and([aux21197_BOOL,aux21198_BOOL,aux21200_BOOL,w_00009_00005_BOOL,aux21201_BOOL],aux21202_BOOL);
constraint int_eq_reif(TWorkers_00009_00001_INTEGER,1,aux21203_BOOL);
constraint int_eq_reif(TWorkers_00009_00006_INTEGER,1,aux21204_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21205,s_00006],0);
constraint int_lt_reif(s_00001,aux21205,aux21206_BOOL);
constraint int_le_reif(s_00006, s_00001,aux21207_BOOL);
constraint array_bool_and([aux21203_BOOL,aux21204_BOOL,aux21206_BOOL,w_00009_00006_BOOL,aux21207_BOOL],aux21208_BOOL);
constraint int_eq_reif(TWorkers_00009_00001_INTEGER,1,aux21209_BOOL);
constraint int_eq_reif(TWorkers_00009_00007_INTEGER,1,aux21210_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21211,s_00007],0);
constraint int_lt_reif(s_00001,aux21211,aux21212_BOOL);
constraint int_le_reif(s_00007, s_00001,aux21213_BOOL);
constraint array_bool_and([aux21209_BOOL,aux21210_BOOL,aux21212_BOOL,w_00009_00007_BOOL,aux21213_BOOL],aux21214_BOOL);
constraint int_eq_reif(TWorkers_00009_00001_INTEGER,1,aux21215_BOOL);
constraint int_eq_reif(TWorkers_00009_00008_INTEGER,1,aux21216_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21217,s_00008],0);
constraint int_lt_reif(s_00001,aux21217,aux21218_BOOL);
constraint int_le_reif(s_00008, s_00001,aux21219_BOOL);
constraint array_bool_and([aux21215_BOOL,aux21216_BOOL,aux21218_BOOL,w_00009_00008_BOOL,aux21219_BOOL],aux21220_BOOL);
constraint int_eq_reif(TWorkers_00009_00001_INTEGER,1,aux21221_BOOL);
constraint int_eq_reif(TWorkers_00009_00009_INTEGER,1,aux21222_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21223,s_00009],0);
constraint int_lt_reif(s_00001,aux21223,aux21224_BOOL);
constraint int_le_reif(s_00009, s_00001,aux21225_BOOL);
constraint array_bool_and([aux21221_BOOL,aux21222_BOOL,aux21224_BOOL,w_00009_00009_BOOL,aux21225_BOOL],aux21226_BOOL);
constraint int_eq_reif(TWorkers_00009_00001_INTEGER,1,aux21227_BOOL);
constraint int_eq_reif(TWorkers_00009_00010_INTEGER,1,aux21228_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux21229,s_00010],0);
constraint int_lt_reif(s_00001,aux21229,aux21230_BOOL);
constraint int_le_reif(s_00010, s_00001,aux21231_BOOL);
constraint array_bool_and([aux21227_BOOL,aux21228_BOOL,aux21230_BOOL,w_00009_00010_BOOL,aux21231_BOOL],aux21232_BOOL);
constraint int_eq_reif(TWorkers_00009_00001_INTEGER,1,aux21233_BOOL);
constraint int_eq_reif(TWorkers_00009_00011_INTEGER,1,aux21234_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21235,s_00011],0);
constraint int_lt_reif(s_00001,aux21235,aux21236_BOOL);
constraint int_le_reif(s_00011, s_00001,aux21237_BOOL);
constraint array_bool_and([aux21233_BOOL,aux21234_BOOL,aux21236_BOOL,w_00009_00011_BOOL,aux21237_BOOL],aux21238_BOOL);
constraint int_eq_reif(TWorkers_00009_00001_INTEGER,1,aux21239_BOOL);
constraint int_eq_reif(TWorkers_00009_00012_INTEGER,1,aux21240_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21241,s_00012],0);
constraint int_lt_reif(s_00001,aux21241,aux21242_BOOL);
constraint int_le_reif(s_00012, s_00001,aux21243_BOOL);
constraint array_bool_and([aux21239_BOOL,aux21240_BOOL,aux21242_BOOL,w_00009_00012_BOOL,aux21243_BOOL],aux21244_BOOL);
constraint int_eq_reif(TWorkers_00009_00001_INTEGER,1,aux21245_BOOL);
constraint int_eq_reif(TWorkers_00009_00013_INTEGER,1,aux21246_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21247,s_00013],0);
constraint int_lt_reif(s_00001,aux21247,aux21248_BOOL);
constraint int_le_reif(s_00013, s_00001,aux21249_BOOL);
constraint array_bool_and([aux21245_BOOL,aux21246_BOOL,aux21248_BOOL,w_00009_00013_BOOL,aux21249_BOOL],aux21250_BOOL);
constraint int_eq_reif(TWorkers_00009_00001_INTEGER,1,aux21251_BOOL);
constraint int_eq_reif(TWorkers_00009_00014_INTEGER,1,aux21252_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21253,s_00014],0);
constraint int_lt_reif(s_00001,aux21253,aux21254_BOOL);
constraint int_le_reif(s_00014, s_00001,aux21255_BOOL);
constraint array_bool_and([aux21251_BOOL,aux21252_BOOL,aux21254_BOOL,w_00009_00014_BOOL,aux21255_BOOL],aux21256_BOOL);
constraint int_eq_reif(TWorkers_00009_00001_INTEGER,1,aux21257_BOOL);
constraint int_eq_reif(TWorkers_00009_00015_INTEGER,1,aux21258_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21259,s_00015],0);
constraint int_lt_reif(s_00001,aux21259,aux21260_BOOL);
constraint int_le_reif(s_00015, s_00001,aux21261_BOOL);
constraint array_bool_and([aux21257_BOOL,aux21258_BOOL,aux21260_BOOL,w_00009_00015_BOOL,aux21261_BOOL],aux21262_BOOL);
constraint int_eq_reif(TWorkers_00009_00001_INTEGER,1,aux21263_BOOL);
constraint int_eq_reif(TWorkers_00009_00016_INTEGER,1,aux21264_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21265,s_00016],0);
constraint int_lt_reif(s_00001,aux21265,aux21266_BOOL);
constraint int_le_reif(s_00016, s_00001,aux21267_BOOL);
constraint array_bool_and([aux21263_BOOL,aux21264_BOOL,aux21266_BOOL,w_00009_00016_BOOL,aux21267_BOOL],aux21268_BOOL);
constraint int_eq_reif(TWorkers_00009_00001_INTEGER,1,aux21269_BOOL);
constraint int_eq_reif(TWorkers_00009_00017_INTEGER,1,aux21270_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21271,s_00017],0);
constraint int_lt_reif(s_00001,aux21271,aux21272_BOOL);
constraint int_le_reif(s_00017, s_00001,aux21273_BOOL);
constraint array_bool_and([aux21269_BOOL,aux21270_BOOL,aux21272_BOOL,w_00009_00017_BOOL,aux21273_BOOL],aux21274_BOOL);
constraint int_eq_reif(TWorkers_00009_00001_INTEGER,1,aux21275_BOOL);
constraint int_eq_reif(TWorkers_00009_00018_INTEGER,1,aux21276_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21277,s_00018],0);
constraint int_lt_reif(s_00001,aux21277,aux21278_BOOL);
constraint int_le_reif(s_00018, s_00001,aux21279_BOOL);
constraint array_bool_and([aux21275_BOOL,aux21276_BOOL,aux21278_BOOL,w_00009_00018_BOOL,aux21279_BOOL],aux21280_BOOL);
constraint int_eq_reif(TWorkers_00009_00001_INTEGER,1,aux21281_BOOL);
constraint int_eq_reif(TWorkers_00009_00019_INTEGER,1,aux21282_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21283,s_00019],0);
constraint int_lt_reif(s_00001,aux21283,aux21284_BOOL);
constraint int_le_reif(s_00019, s_00001,aux21285_BOOL);
constraint array_bool_and([aux21281_BOOL,aux21282_BOOL,aux21284_BOOL,w_00009_00019_BOOL,aux21285_BOOL],aux21286_BOOL);
constraint int_eq_reif(TWorkers_00009_00001_INTEGER,1,aux21287_BOOL);
constraint int_eq_reif(TWorkers_00009_00020_INTEGER,1,aux21288_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21289,s_00020],0);
constraint int_lt_reif(s_00001,aux21289,aux21290_BOOL);
constraint int_le_reif(s_00020, s_00001,aux21291_BOOL);
constraint array_bool_and([aux21287_BOOL,aux21288_BOOL,aux21290_BOOL,w_00009_00020_BOOL,aux21291_BOOL],aux21292_BOOL);
constraint int_eq_reif(TWorkers_00009_00001_INTEGER,1,aux21293_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21294,s_00001],0);
constraint int_lt_reif(s_00001,aux21294,aux21295_BOOL);
constraint array_bool_and([aux21293_BOOL,aux21295_BOOL,w_00009_00001_BOOL],aux21296_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux21184_INTEGER,aux21190_INTEGER,aux21196_INTEGER,aux21202_INTEGER,aux21208_INTEGER,aux21214_INTEGER,aux21220_INTEGER,aux21226_INTEGER,aux21232_INTEGER,aux21238_INTEGER,aux21244_INTEGER,aux21250_INTEGER,aux21256_INTEGER,aux21262_INTEGER,aux21268_INTEGER,aux21274_INTEGER,aux21280_INTEGER,aux21286_INTEGER,aux21292_INTEGER,aux21296_INTEGER,1],0,aux21297_BOOL);
constraint int_eq_reif(TWorkers_00009_00001_INTEGER,1,aux21298_BOOL);
constraint int_eq_reif(TWorkers_00009_00016_INTEGER,1,aux21299_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21300,s_00001],0);
constraint int_lt_reif(s_00016,aux21300,aux21301_BOOL);
constraint int_le_reif(s_00001, s_00016,aux21302_BOOL);
constraint array_bool_and([aux21298_BOOL,aux21299_BOOL,aux21301_BOOL,w_00009_00001_BOOL,aux21302_BOOL],aux21303_BOOL);
constraint int_eq_reif(TWorkers_00009_00002_INTEGER,1,aux21304_BOOL);
constraint int_eq_reif(TWorkers_00009_00016_INTEGER,1,aux21305_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21306,s_00002],0);
constraint int_lt_reif(s_00016,aux21306,aux21307_BOOL);
constraint int_le_reif(s_00002, s_00016,aux21308_BOOL);
constraint array_bool_and([aux21304_BOOL,aux21305_BOOL,aux21307_BOOL,w_00009_00002_BOOL,aux21308_BOOL],aux21309_BOOL);
constraint int_eq_reif(TWorkers_00009_00003_INTEGER,1,aux21310_BOOL);
constraint int_eq_reif(TWorkers_00009_00016_INTEGER,1,aux21311_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21312,s_00003],0);
constraint int_lt_reif(s_00016,aux21312,aux21313_BOOL);
constraint int_le_reif(s_00003, s_00016,aux21314_BOOL);
constraint array_bool_and([aux21310_BOOL,aux21311_BOOL,aux21313_BOOL,w_00009_00003_BOOL,aux21314_BOOL],aux21315_BOOL);
constraint int_eq_reif(TWorkers_00009_00004_INTEGER,1,aux21316_BOOL);
constraint int_eq_reif(TWorkers_00009_00016_INTEGER,1,aux21317_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21318,s_00004],0);
constraint int_lt_reif(s_00016,aux21318,aux21319_BOOL);
constraint int_le_reif(s_00004, s_00016,aux21320_BOOL);
constraint array_bool_and([aux21316_BOOL,aux21317_BOOL,aux21319_BOOL,w_00009_00004_BOOL,aux21320_BOOL],aux21321_BOOL);
constraint int_eq_reif(TWorkers_00009_00005_INTEGER,1,aux21322_BOOL);
constraint int_eq_reif(TWorkers_00009_00016_INTEGER,1,aux21323_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21324,s_00005],0);
constraint int_lt_reif(s_00016,aux21324,aux21325_BOOL);
constraint int_le_reif(s_00005, s_00016,aux21326_BOOL);
constraint array_bool_and([aux21322_BOOL,aux21323_BOOL,aux21325_BOOL,w_00009_00005_BOOL,aux21326_BOOL],aux21327_BOOL);
constraint int_eq_reif(TWorkers_00009_00006_INTEGER,1,aux21328_BOOL);
constraint int_eq_reif(TWorkers_00009_00016_INTEGER,1,aux21329_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21330,s_00006],0);
constraint int_lt_reif(s_00016,aux21330,aux21331_BOOL);
constraint int_le_reif(s_00006, s_00016,aux21332_BOOL);
constraint array_bool_and([aux21328_BOOL,aux21329_BOOL,aux21331_BOOL,w_00009_00006_BOOL,aux21332_BOOL],aux21333_BOOL);
constraint int_eq_reif(TWorkers_00009_00007_INTEGER,1,aux21334_BOOL);
constraint int_eq_reif(TWorkers_00009_00016_INTEGER,1,aux21335_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21336,s_00007],0);
constraint int_lt_reif(s_00016,aux21336,aux21337_BOOL);
constraint int_le_reif(s_00007, s_00016,aux21338_BOOL);
constraint array_bool_and([aux21334_BOOL,aux21335_BOOL,aux21337_BOOL,w_00009_00007_BOOL,aux21338_BOOL],aux21339_BOOL);
constraint int_eq_reif(TWorkers_00009_00008_INTEGER,1,aux21340_BOOL);
constraint int_eq_reif(TWorkers_00009_00016_INTEGER,1,aux21341_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21342,s_00008],0);
constraint int_lt_reif(s_00016,aux21342,aux21343_BOOL);
constraint int_le_reif(s_00008, s_00016,aux21344_BOOL);
constraint array_bool_and([aux21340_BOOL,aux21341_BOOL,aux21343_BOOL,w_00009_00008_BOOL,aux21344_BOOL],aux21345_BOOL);
constraint int_eq_reif(TWorkers_00009_00009_INTEGER,1,aux21346_BOOL);
constraint int_eq_reif(TWorkers_00009_00016_INTEGER,1,aux21347_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21348,s_00009],0);
constraint int_lt_reif(s_00016,aux21348,aux21349_BOOL);
constraint int_le_reif(s_00009, s_00016,aux21350_BOOL);
constraint array_bool_and([aux21346_BOOL,aux21347_BOOL,aux21349_BOOL,w_00009_00009_BOOL,aux21350_BOOL],aux21351_BOOL);
constraint int_eq_reif(TWorkers_00009_00010_INTEGER,1,aux21352_BOOL);
constraint int_eq_reif(TWorkers_00009_00016_INTEGER,1,aux21353_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux21354,s_00010],0);
constraint int_lt_reif(s_00016,aux21354,aux21355_BOOL);
constraint int_le_reif(s_00010, s_00016,aux21356_BOOL);
constraint array_bool_and([aux21352_BOOL,aux21353_BOOL,aux21355_BOOL,w_00009_00010_BOOL,aux21356_BOOL],aux21357_BOOL);
constraint int_eq_reif(TWorkers_00009_00011_INTEGER,1,aux21358_BOOL);
constraint int_eq_reif(TWorkers_00009_00016_INTEGER,1,aux21359_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21360,s_00011],0);
constraint int_lt_reif(s_00016,aux21360,aux21361_BOOL);
constraint int_le_reif(s_00011, s_00016,aux21362_BOOL);
constraint array_bool_and([aux21358_BOOL,aux21359_BOOL,aux21361_BOOL,w_00009_00011_BOOL,aux21362_BOOL],aux21363_BOOL);
constraint int_eq_reif(TWorkers_00009_00012_INTEGER,1,aux21364_BOOL);
constraint int_eq_reif(TWorkers_00009_00016_INTEGER,1,aux21365_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21366,s_00012],0);
constraint int_lt_reif(s_00016,aux21366,aux21367_BOOL);
constraint int_le_reif(s_00012, s_00016,aux21368_BOOL);
constraint array_bool_and([aux21364_BOOL,aux21365_BOOL,aux21367_BOOL,w_00009_00012_BOOL,aux21368_BOOL],aux21369_BOOL);
constraint int_eq_reif(TWorkers_00009_00013_INTEGER,1,aux21370_BOOL);
constraint int_eq_reif(TWorkers_00009_00016_INTEGER,1,aux21371_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21372,s_00013],0);
constraint int_lt_reif(s_00016,aux21372,aux21373_BOOL);
constraint int_le_reif(s_00013, s_00016,aux21374_BOOL);
constraint array_bool_and([aux21370_BOOL,aux21371_BOOL,aux21373_BOOL,w_00009_00013_BOOL,aux21374_BOOL],aux21375_BOOL);
constraint int_eq_reif(TWorkers_00009_00014_INTEGER,1,aux21376_BOOL);
constraint int_eq_reif(TWorkers_00009_00016_INTEGER,1,aux21377_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21378,s_00014],0);
constraint int_lt_reif(s_00016,aux21378,aux21379_BOOL);
constraint int_le_reif(s_00014, s_00016,aux21380_BOOL);
constraint array_bool_and([aux21376_BOOL,aux21377_BOOL,aux21379_BOOL,w_00009_00014_BOOL,aux21380_BOOL],aux21381_BOOL);
constraint int_eq_reif(TWorkers_00009_00015_INTEGER,1,aux21382_BOOL);
constraint int_eq_reif(TWorkers_00009_00016_INTEGER,1,aux21383_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21384,s_00015],0);
constraint int_lt_reif(s_00016,aux21384,aux21385_BOOL);
constraint int_le_reif(s_00015, s_00016,aux21386_BOOL);
constraint array_bool_and([aux21382_BOOL,aux21383_BOOL,aux21385_BOOL,w_00009_00015_BOOL,aux21386_BOOL],aux21387_BOOL);
constraint int_eq_reif(TWorkers_00009_00016_INTEGER,1,aux21388_BOOL);
constraint int_eq_reif(TWorkers_00009_00017_INTEGER,1,aux21389_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21390,s_00017],0);
constraint int_lt_reif(s_00016,aux21390,aux21391_BOOL);
constraint int_le_reif(s_00017, s_00016,aux21392_BOOL);
constraint array_bool_and([aux21388_BOOL,aux21389_BOOL,aux21391_BOOL,w_00009_00017_BOOL,aux21392_BOOL],aux21393_BOOL);
constraint int_eq_reif(TWorkers_00009_00016_INTEGER,1,aux21394_BOOL);
constraint int_eq_reif(TWorkers_00009_00018_INTEGER,1,aux21395_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21396,s_00018],0);
constraint int_lt_reif(s_00016,aux21396,aux21397_BOOL);
constraint int_le_reif(s_00018, s_00016,aux21398_BOOL);
constraint array_bool_and([aux21394_BOOL,aux21395_BOOL,aux21397_BOOL,w_00009_00018_BOOL,aux21398_BOOL],aux21399_BOOL);
constraint int_eq_reif(TWorkers_00009_00016_INTEGER,1,aux21400_BOOL);
constraint int_eq_reif(TWorkers_00009_00019_INTEGER,1,aux21401_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21402,s_00019],0);
constraint int_lt_reif(s_00016,aux21402,aux21403_BOOL);
constraint int_le_reif(s_00019, s_00016,aux21404_BOOL);
constraint array_bool_and([aux21400_BOOL,aux21401_BOOL,aux21403_BOOL,w_00009_00019_BOOL,aux21404_BOOL],aux21405_BOOL);
constraint int_eq_reif(TWorkers_00009_00016_INTEGER,1,aux21406_BOOL);
constraint int_eq_reif(TWorkers_00009_00020_INTEGER,1,aux21407_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21408,s_00020],0);
constraint int_lt_reif(s_00016,aux21408,aux21409_BOOL);
constraint int_le_reif(s_00020, s_00016,aux21410_BOOL);
constraint array_bool_and([aux21406_BOOL,aux21407_BOOL,aux21409_BOOL,w_00009_00020_BOOL,aux21410_BOOL],aux21411_BOOL);
constraint int_eq_reif(TWorkers_00009_00016_INTEGER,1,aux21412_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21413,s_00016],0);
constraint int_lt_reif(s_00016,aux21413,aux21414_BOOL);
constraint array_bool_and([aux21412_BOOL,aux21414_BOOL,w_00009_00016_BOOL],aux21415_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux21303_INTEGER,aux21309_INTEGER,aux21315_INTEGER,aux21321_INTEGER,aux21327_INTEGER,aux21333_INTEGER,aux21339_INTEGER,aux21345_INTEGER,aux21351_INTEGER,aux21357_INTEGER,aux21363_INTEGER,aux21369_INTEGER,aux21375_INTEGER,aux21381_INTEGER,aux21387_INTEGER,aux21393_INTEGER,aux21399_INTEGER,aux21405_INTEGER,aux21411_INTEGER,aux21415_INTEGER,1],0,aux21416_BOOL);
constraint int_eq_reif(TWorkers_00009_00001_INTEGER,1,aux21417_BOOL);
constraint int_eq_reif(TWorkers_00009_00003_INTEGER,1,aux21418_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21419,s_00001],0);
constraint int_lt_reif(s_00003,aux21419,aux21420_BOOL);
constraint int_le_reif(s_00001, s_00003,aux21421_BOOL);
constraint array_bool_and([aux21417_BOOL,aux21418_BOOL,aux21420_BOOL,w_00009_00001_BOOL,aux21421_BOOL],aux21422_BOOL);
constraint int_eq_reif(TWorkers_00009_00002_INTEGER,1,aux21423_BOOL);
constraint int_eq_reif(TWorkers_00009_00003_INTEGER,1,aux21424_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21425,s_00002],0);
constraint int_lt_reif(s_00003,aux21425,aux21426_BOOL);
constraint int_le_reif(s_00002, s_00003,aux21427_BOOL);
constraint array_bool_and([aux21423_BOOL,aux21424_BOOL,aux21426_BOOL,w_00009_00002_BOOL,aux21427_BOOL],aux21428_BOOL);
constraint int_eq_reif(TWorkers_00009_00003_INTEGER,1,aux21429_BOOL);
constraint int_eq_reif(TWorkers_00009_00004_INTEGER,1,aux21430_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21431,s_00004],0);
constraint int_lt_reif(s_00003,aux21431,aux21432_BOOL);
constraint int_le_reif(s_00004, s_00003,aux21433_BOOL);
constraint array_bool_and([aux21429_BOOL,aux21430_BOOL,aux21432_BOOL,w_00009_00004_BOOL,aux21433_BOOL],aux21434_BOOL);
constraint int_eq_reif(TWorkers_00009_00003_INTEGER,1,aux21435_BOOL);
constraint int_eq_reif(TWorkers_00009_00005_INTEGER,1,aux21436_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21437,s_00005],0);
constraint int_lt_reif(s_00003,aux21437,aux21438_BOOL);
constraint int_le_reif(s_00005, s_00003,aux21439_BOOL);
constraint array_bool_and([aux21435_BOOL,aux21436_BOOL,aux21438_BOOL,w_00009_00005_BOOL,aux21439_BOOL],aux21440_BOOL);
constraint int_eq_reif(TWorkers_00009_00003_INTEGER,1,aux21441_BOOL);
constraint int_eq_reif(TWorkers_00009_00006_INTEGER,1,aux21442_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21443,s_00006],0);
constraint int_lt_reif(s_00003,aux21443,aux21444_BOOL);
constraint int_le_reif(s_00006, s_00003,aux21445_BOOL);
constraint array_bool_and([aux21441_BOOL,aux21442_BOOL,aux21444_BOOL,w_00009_00006_BOOL,aux21445_BOOL],aux21446_BOOL);
constraint int_eq_reif(TWorkers_00009_00003_INTEGER,1,aux21447_BOOL);
constraint int_eq_reif(TWorkers_00009_00007_INTEGER,1,aux21448_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21449,s_00007],0);
constraint int_lt_reif(s_00003,aux21449,aux21450_BOOL);
constraint int_le_reif(s_00007, s_00003,aux21451_BOOL);
constraint array_bool_and([aux21447_BOOL,aux21448_BOOL,aux21450_BOOL,w_00009_00007_BOOL,aux21451_BOOL],aux21452_BOOL);
constraint int_eq_reif(TWorkers_00009_00003_INTEGER,1,aux21453_BOOL);
constraint int_eq_reif(TWorkers_00009_00008_INTEGER,1,aux21454_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21455,s_00008],0);
constraint int_lt_reif(s_00003,aux21455,aux21456_BOOL);
constraint int_le_reif(s_00008, s_00003,aux21457_BOOL);
constraint array_bool_and([aux21453_BOOL,aux21454_BOOL,aux21456_BOOL,w_00009_00008_BOOL,aux21457_BOOL],aux21458_BOOL);
constraint int_eq_reif(TWorkers_00009_00003_INTEGER,1,aux21459_BOOL);
constraint int_eq_reif(TWorkers_00009_00009_INTEGER,1,aux21460_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21461,s_00009],0);
constraint int_lt_reif(s_00003,aux21461,aux21462_BOOL);
constraint int_le_reif(s_00009, s_00003,aux21463_BOOL);
constraint array_bool_and([aux21459_BOOL,aux21460_BOOL,aux21462_BOOL,w_00009_00009_BOOL,aux21463_BOOL],aux21464_BOOL);
constraint int_eq_reif(TWorkers_00009_00003_INTEGER,1,aux21465_BOOL);
constraint int_eq_reif(TWorkers_00009_00010_INTEGER,1,aux21466_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux21467,s_00010],0);
constraint int_lt_reif(s_00003,aux21467,aux21468_BOOL);
constraint int_le_reif(s_00010, s_00003,aux21469_BOOL);
constraint array_bool_and([aux21465_BOOL,aux21466_BOOL,aux21468_BOOL,w_00009_00010_BOOL,aux21469_BOOL],aux21470_BOOL);
constraint int_eq_reif(TWorkers_00009_00003_INTEGER,1,aux21471_BOOL);
constraint int_eq_reif(TWorkers_00009_00011_INTEGER,1,aux21472_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21473,s_00011],0);
constraint int_lt_reif(s_00003,aux21473,aux21474_BOOL);
constraint int_le_reif(s_00011, s_00003,aux21475_BOOL);
constraint array_bool_and([aux21471_BOOL,aux21472_BOOL,aux21474_BOOL,w_00009_00011_BOOL,aux21475_BOOL],aux21476_BOOL);
constraint int_eq_reif(TWorkers_00009_00003_INTEGER,1,aux21477_BOOL);
constraint int_eq_reif(TWorkers_00009_00012_INTEGER,1,aux21478_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21479,s_00012],0);
constraint int_lt_reif(s_00003,aux21479,aux21480_BOOL);
constraint int_le_reif(s_00012, s_00003,aux21481_BOOL);
constraint array_bool_and([aux21477_BOOL,aux21478_BOOL,aux21480_BOOL,w_00009_00012_BOOL,aux21481_BOOL],aux21482_BOOL);
constraint int_eq_reif(TWorkers_00009_00003_INTEGER,1,aux21483_BOOL);
constraint int_eq_reif(TWorkers_00009_00013_INTEGER,1,aux21484_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21485,s_00013],0);
constraint int_lt_reif(s_00003,aux21485,aux21486_BOOL);
constraint int_le_reif(s_00013, s_00003,aux21487_BOOL);
constraint array_bool_and([aux21483_BOOL,aux21484_BOOL,aux21486_BOOL,w_00009_00013_BOOL,aux21487_BOOL],aux21488_BOOL);
constraint int_eq_reif(TWorkers_00009_00003_INTEGER,1,aux21489_BOOL);
constraint int_eq_reif(TWorkers_00009_00014_INTEGER,1,aux21490_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21491,s_00014],0);
constraint int_lt_reif(s_00003,aux21491,aux21492_BOOL);
constraint int_le_reif(s_00014, s_00003,aux21493_BOOL);
constraint array_bool_and([aux21489_BOOL,aux21490_BOOL,aux21492_BOOL,w_00009_00014_BOOL,aux21493_BOOL],aux21494_BOOL);
constraint int_eq_reif(TWorkers_00009_00003_INTEGER,1,aux21495_BOOL);
constraint int_eq_reif(TWorkers_00009_00015_INTEGER,1,aux21496_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21497,s_00015],0);
constraint int_lt_reif(s_00003,aux21497,aux21498_BOOL);
constraint int_le_reif(s_00015, s_00003,aux21499_BOOL);
constraint array_bool_and([aux21495_BOOL,aux21496_BOOL,aux21498_BOOL,w_00009_00015_BOOL,aux21499_BOOL],aux21500_BOOL);
constraint int_eq_reif(TWorkers_00009_00003_INTEGER,1,aux21501_BOOL);
constraint int_eq_reif(TWorkers_00009_00016_INTEGER,1,aux21502_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21503,s_00016],0);
constraint int_lt_reif(s_00003,aux21503,aux21504_BOOL);
constraint int_le_reif(s_00016, s_00003,aux21505_BOOL);
constraint array_bool_and([aux21501_BOOL,aux21502_BOOL,aux21504_BOOL,w_00009_00016_BOOL,aux21505_BOOL],aux21506_BOOL);
constraint int_eq_reif(TWorkers_00009_00003_INTEGER,1,aux21507_BOOL);
constraint int_eq_reif(TWorkers_00009_00017_INTEGER,1,aux21508_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21509,s_00017],0);
constraint int_lt_reif(s_00003,aux21509,aux21510_BOOL);
constraint int_le_reif(s_00017, s_00003,aux21511_BOOL);
constraint array_bool_and([aux21507_BOOL,aux21508_BOOL,aux21510_BOOL,w_00009_00017_BOOL,aux21511_BOOL],aux21512_BOOL);
constraint int_eq_reif(TWorkers_00009_00003_INTEGER,1,aux21513_BOOL);
constraint int_eq_reif(TWorkers_00009_00018_INTEGER,1,aux21514_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21515,s_00018],0);
constraint int_lt_reif(s_00003,aux21515,aux21516_BOOL);
constraint int_le_reif(s_00018, s_00003,aux21517_BOOL);
constraint array_bool_and([aux21513_BOOL,aux21514_BOOL,aux21516_BOOL,w_00009_00018_BOOL,aux21517_BOOL],aux21518_BOOL);
constraint int_eq_reif(TWorkers_00009_00003_INTEGER,1,aux21519_BOOL);
constraint int_eq_reif(TWorkers_00009_00019_INTEGER,1,aux21520_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21521,s_00019],0);
constraint int_lt_reif(s_00003,aux21521,aux21522_BOOL);
constraint int_le_reif(s_00019, s_00003,aux21523_BOOL);
constraint array_bool_and([aux21519_BOOL,aux21520_BOOL,aux21522_BOOL,w_00009_00019_BOOL,aux21523_BOOL],aux21524_BOOL);
constraint int_eq_reif(TWorkers_00009_00003_INTEGER,1,aux21525_BOOL);
constraint int_eq_reif(TWorkers_00009_00020_INTEGER,1,aux21526_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21527,s_00020],0);
constraint int_lt_reif(s_00003,aux21527,aux21528_BOOL);
constraint int_le_reif(s_00020, s_00003,aux21529_BOOL);
constraint array_bool_and([aux21525_BOOL,aux21526_BOOL,aux21528_BOOL,w_00009_00020_BOOL,aux21529_BOOL],aux21530_BOOL);
constraint int_eq_reif(TWorkers_00009_00003_INTEGER,1,aux21531_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21532,s_00003],0);
constraint int_lt_reif(s_00003,aux21532,aux21533_BOOL);
constraint array_bool_and([aux21531_BOOL,aux21533_BOOL,w_00009_00003_BOOL],aux21534_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux21422_INTEGER,aux21428_INTEGER,aux21434_INTEGER,aux21440_INTEGER,aux21446_INTEGER,aux21452_INTEGER,aux21458_INTEGER,aux21464_INTEGER,aux21470_INTEGER,aux21476_INTEGER,aux21482_INTEGER,aux21488_INTEGER,aux21494_INTEGER,aux21500_INTEGER,aux21506_INTEGER,aux21512_INTEGER,aux21518_INTEGER,aux21524_INTEGER,aux21530_INTEGER,aux21534_INTEGER,1],0,aux21535_BOOL);
constraint int_eq_reif(TWorkers_00009_00001_INTEGER,1,aux21536_BOOL);
constraint int_eq_reif(TWorkers_00009_00014_INTEGER,1,aux21537_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21538,s_00001],0);
constraint int_lt_reif(s_00014,aux21538,aux21539_BOOL);
constraint int_le_reif(s_00001, s_00014,aux21540_BOOL);
constraint array_bool_and([aux21536_BOOL,aux21537_BOOL,aux21539_BOOL,w_00009_00001_BOOL,aux21540_BOOL],aux21541_BOOL);
constraint int_eq_reif(TWorkers_00009_00002_INTEGER,1,aux21542_BOOL);
constraint int_eq_reif(TWorkers_00009_00014_INTEGER,1,aux21543_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21544,s_00002],0);
constraint int_lt_reif(s_00014,aux21544,aux21545_BOOL);
constraint int_le_reif(s_00002, s_00014,aux21546_BOOL);
constraint array_bool_and([aux21542_BOOL,aux21543_BOOL,aux21545_BOOL,w_00009_00002_BOOL,aux21546_BOOL],aux21547_BOOL);
constraint int_eq_reif(TWorkers_00009_00003_INTEGER,1,aux21548_BOOL);
constraint int_eq_reif(TWorkers_00009_00014_INTEGER,1,aux21549_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21550,s_00003],0);
constraint int_lt_reif(s_00014,aux21550,aux21551_BOOL);
constraint int_le_reif(s_00003, s_00014,aux21552_BOOL);
constraint array_bool_and([aux21548_BOOL,aux21549_BOOL,aux21551_BOOL,w_00009_00003_BOOL,aux21552_BOOL],aux21553_BOOL);
constraint int_eq_reif(TWorkers_00009_00004_INTEGER,1,aux21554_BOOL);
constraint int_eq_reif(TWorkers_00009_00014_INTEGER,1,aux21555_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21556,s_00004],0);
constraint int_lt_reif(s_00014,aux21556,aux21557_BOOL);
constraint int_le_reif(s_00004, s_00014,aux21558_BOOL);
constraint array_bool_and([aux21554_BOOL,aux21555_BOOL,aux21557_BOOL,w_00009_00004_BOOL,aux21558_BOOL],aux21559_BOOL);
constraint int_eq_reif(TWorkers_00009_00005_INTEGER,1,aux21560_BOOL);
constraint int_eq_reif(TWorkers_00009_00014_INTEGER,1,aux21561_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21562,s_00005],0);
constraint int_lt_reif(s_00014,aux21562,aux21563_BOOL);
constraint int_le_reif(s_00005, s_00014,aux21564_BOOL);
constraint array_bool_and([aux21560_BOOL,aux21561_BOOL,aux21563_BOOL,w_00009_00005_BOOL,aux21564_BOOL],aux21565_BOOL);
constraint int_eq_reif(TWorkers_00009_00006_INTEGER,1,aux21566_BOOL);
constraint int_eq_reif(TWorkers_00009_00014_INTEGER,1,aux21567_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21568,s_00006],0);
constraint int_lt_reif(s_00014,aux21568,aux21569_BOOL);
constraint int_le_reif(s_00006, s_00014,aux21570_BOOL);
constraint array_bool_and([aux21566_BOOL,aux21567_BOOL,aux21569_BOOL,w_00009_00006_BOOL,aux21570_BOOL],aux21571_BOOL);
constraint int_eq_reif(TWorkers_00009_00007_INTEGER,1,aux21572_BOOL);
constraint int_eq_reif(TWorkers_00009_00014_INTEGER,1,aux21573_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21574,s_00007],0);
constraint int_lt_reif(s_00014,aux21574,aux21575_BOOL);
constraint int_le_reif(s_00007, s_00014,aux21576_BOOL);
constraint array_bool_and([aux21572_BOOL,aux21573_BOOL,aux21575_BOOL,w_00009_00007_BOOL,aux21576_BOOL],aux21577_BOOL);
constraint int_eq_reif(TWorkers_00009_00008_INTEGER,1,aux21578_BOOL);
constraint int_eq_reif(TWorkers_00009_00014_INTEGER,1,aux21579_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21580,s_00008],0);
constraint int_lt_reif(s_00014,aux21580,aux21581_BOOL);
constraint int_le_reif(s_00008, s_00014,aux21582_BOOL);
constraint array_bool_and([aux21578_BOOL,aux21579_BOOL,aux21581_BOOL,w_00009_00008_BOOL,aux21582_BOOL],aux21583_BOOL);
constraint int_eq_reif(TWorkers_00009_00009_INTEGER,1,aux21584_BOOL);
constraint int_eq_reif(TWorkers_00009_00014_INTEGER,1,aux21585_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21586,s_00009],0);
constraint int_lt_reif(s_00014,aux21586,aux21587_BOOL);
constraint int_le_reif(s_00009, s_00014,aux21588_BOOL);
constraint array_bool_and([aux21584_BOOL,aux21585_BOOL,aux21587_BOOL,w_00009_00009_BOOL,aux21588_BOOL],aux21589_BOOL);
constraint int_eq_reif(TWorkers_00009_00010_INTEGER,1,aux21590_BOOL);
constraint int_eq_reif(TWorkers_00009_00014_INTEGER,1,aux21591_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux21592,s_00010],0);
constraint int_lt_reif(s_00014,aux21592,aux21593_BOOL);
constraint int_le_reif(s_00010, s_00014,aux21594_BOOL);
constraint array_bool_and([aux21590_BOOL,aux21591_BOOL,aux21593_BOOL,w_00009_00010_BOOL,aux21594_BOOL],aux21595_BOOL);
constraint int_eq_reif(TWorkers_00009_00011_INTEGER,1,aux21596_BOOL);
constraint int_eq_reif(TWorkers_00009_00014_INTEGER,1,aux21597_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21598,s_00011],0);
constraint int_lt_reif(s_00014,aux21598,aux21599_BOOL);
constraint int_le_reif(s_00011, s_00014,aux21600_BOOL);
constraint array_bool_and([aux21596_BOOL,aux21597_BOOL,aux21599_BOOL,w_00009_00011_BOOL,aux21600_BOOL],aux21601_BOOL);
constraint int_eq_reif(TWorkers_00009_00012_INTEGER,1,aux21602_BOOL);
constraint int_eq_reif(TWorkers_00009_00014_INTEGER,1,aux21603_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21604,s_00012],0);
constraint int_lt_reif(s_00014,aux21604,aux21605_BOOL);
constraint int_le_reif(s_00012, s_00014,aux21606_BOOL);
constraint array_bool_and([aux21602_BOOL,aux21603_BOOL,aux21605_BOOL,w_00009_00012_BOOL,aux21606_BOOL],aux21607_BOOL);
constraint int_eq_reif(TWorkers_00009_00013_INTEGER,1,aux21608_BOOL);
constraint int_eq_reif(TWorkers_00009_00014_INTEGER,1,aux21609_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21610,s_00013],0);
constraint int_lt_reif(s_00014,aux21610,aux21611_BOOL);
constraint int_le_reif(s_00013, s_00014,aux21612_BOOL);
constraint array_bool_and([aux21608_BOOL,aux21609_BOOL,aux21611_BOOL,w_00009_00013_BOOL,aux21612_BOOL],aux21613_BOOL);
constraint int_eq_reif(TWorkers_00009_00014_INTEGER,1,aux21614_BOOL);
constraint int_eq_reif(TWorkers_00009_00015_INTEGER,1,aux21615_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21616,s_00015],0);
constraint int_lt_reif(s_00014,aux21616,aux21617_BOOL);
constraint int_le_reif(s_00015, s_00014,aux21618_BOOL);
constraint array_bool_and([aux21614_BOOL,aux21615_BOOL,aux21617_BOOL,w_00009_00015_BOOL,aux21618_BOOL],aux21619_BOOL);
constraint int_eq_reif(TWorkers_00009_00014_INTEGER,1,aux21620_BOOL);
constraint int_eq_reif(TWorkers_00009_00016_INTEGER,1,aux21621_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21622,s_00016],0);
constraint int_lt_reif(s_00014,aux21622,aux21623_BOOL);
constraint int_le_reif(s_00016, s_00014,aux21624_BOOL);
constraint array_bool_and([aux21620_BOOL,aux21621_BOOL,aux21623_BOOL,w_00009_00016_BOOL,aux21624_BOOL],aux21625_BOOL);
constraint int_eq_reif(TWorkers_00009_00014_INTEGER,1,aux21626_BOOL);
constraint int_eq_reif(TWorkers_00009_00017_INTEGER,1,aux21627_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21628,s_00017],0);
constraint int_lt_reif(s_00014,aux21628,aux21629_BOOL);
constraint int_le_reif(s_00017, s_00014,aux21630_BOOL);
constraint array_bool_and([aux21626_BOOL,aux21627_BOOL,aux21629_BOOL,w_00009_00017_BOOL,aux21630_BOOL],aux21631_BOOL);
constraint int_eq_reif(TWorkers_00009_00014_INTEGER,1,aux21632_BOOL);
constraint int_eq_reif(TWorkers_00009_00018_INTEGER,1,aux21633_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21634,s_00018],0);
constraint int_lt_reif(s_00014,aux21634,aux21635_BOOL);
constraint int_le_reif(s_00018, s_00014,aux21636_BOOL);
constraint array_bool_and([aux21632_BOOL,aux21633_BOOL,aux21635_BOOL,w_00009_00018_BOOL,aux21636_BOOL],aux21637_BOOL);
constraint int_eq_reif(TWorkers_00009_00014_INTEGER,1,aux21638_BOOL);
constraint int_eq_reif(TWorkers_00009_00019_INTEGER,1,aux21639_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21640,s_00019],0);
constraint int_lt_reif(s_00014,aux21640,aux21641_BOOL);
constraint int_le_reif(s_00019, s_00014,aux21642_BOOL);
constraint array_bool_and([aux21638_BOOL,aux21639_BOOL,aux21641_BOOL,w_00009_00019_BOOL,aux21642_BOOL],aux21643_BOOL);
constraint int_eq_reif(TWorkers_00009_00014_INTEGER,1,aux21644_BOOL);
constraint int_eq_reif(TWorkers_00009_00020_INTEGER,1,aux21645_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21646,s_00020],0);
constraint int_lt_reif(s_00014,aux21646,aux21647_BOOL);
constraint int_le_reif(s_00020, s_00014,aux21648_BOOL);
constraint array_bool_and([aux21644_BOOL,aux21645_BOOL,aux21647_BOOL,w_00009_00020_BOOL,aux21648_BOOL],aux21649_BOOL);
constraint int_eq_reif(TWorkers_00009_00014_INTEGER,1,aux21650_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21651,s_00014],0);
constraint int_lt_reif(s_00014,aux21651,aux21652_BOOL);
constraint array_bool_and([aux21650_BOOL,aux21652_BOOL,w_00009_00014_BOOL],aux21653_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux21541_INTEGER,aux21547_INTEGER,aux21553_INTEGER,aux21559_INTEGER,aux21565_INTEGER,aux21571_INTEGER,aux21577_INTEGER,aux21583_INTEGER,aux21589_INTEGER,aux21595_INTEGER,aux21601_INTEGER,aux21607_INTEGER,aux21613_INTEGER,aux21619_INTEGER,aux21625_INTEGER,aux21631_INTEGER,aux21637_INTEGER,aux21643_INTEGER,aux21649_INTEGER,aux21653_INTEGER,1],0,aux21654_BOOL);
constraint int_eq_reif(TWorkers_00009_00001_INTEGER,1,aux21655_BOOL);
constraint int_eq_reif(TWorkers_00009_00012_INTEGER,1,aux21656_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21657,s_00001],0);
constraint int_lt_reif(s_00012,aux21657,aux21658_BOOL);
constraint int_le_reif(s_00001, s_00012,aux21659_BOOL);
constraint array_bool_and([aux21655_BOOL,aux21656_BOOL,aux21658_BOOL,w_00009_00001_BOOL,aux21659_BOOL],aux21660_BOOL);
constraint int_eq_reif(TWorkers_00009_00002_INTEGER,1,aux21661_BOOL);
constraint int_eq_reif(TWorkers_00009_00012_INTEGER,1,aux21662_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21663,s_00002],0);
constraint int_lt_reif(s_00012,aux21663,aux21664_BOOL);
constraint int_le_reif(s_00002, s_00012,aux21665_BOOL);
constraint array_bool_and([aux21661_BOOL,aux21662_BOOL,aux21664_BOOL,w_00009_00002_BOOL,aux21665_BOOL],aux21666_BOOL);
constraint int_eq_reif(TWorkers_00009_00003_INTEGER,1,aux21667_BOOL);
constraint int_eq_reif(TWorkers_00009_00012_INTEGER,1,aux21668_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21669,s_00003],0);
constraint int_lt_reif(s_00012,aux21669,aux21670_BOOL);
constraint int_le_reif(s_00003, s_00012,aux21671_BOOL);
constraint array_bool_and([aux21667_BOOL,aux21668_BOOL,aux21670_BOOL,w_00009_00003_BOOL,aux21671_BOOL],aux21672_BOOL);
constraint int_eq_reif(TWorkers_00009_00004_INTEGER,1,aux21673_BOOL);
constraint int_eq_reif(TWorkers_00009_00012_INTEGER,1,aux21674_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21675,s_00004],0);
constraint int_lt_reif(s_00012,aux21675,aux21676_BOOL);
constraint int_le_reif(s_00004, s_00012,aux21677_BOOL);
constraint array_bool_and([aux21673_BOOL,aux21674_BOOL,aux21676_BOOL,w_00009_00004_BOOL,aux21677_BOOL],aux21678_BOOL);
constraint int_eq_reif(TWorkers_00009_00005_INTEGER,1,aux21679_BOOL);
constraint int_eq_reif(TWorkers_00009_00012_INTEGER,1,aux21680_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21681,s_00005],0);
constraint int_lt_reif(s_00012,aux21681,aux21682_BOOL);
constraint int_le_reif(s_00005, s_00012,aux21683_BOOL);
constraint array_bool_and([aux21679_BOOL,aux21680_BOOL,aux21682_BOOL,w_00009_00005_BOOL,aux21683_BOOL],aux21684_BOOL);
constraint int_eq_reif(TWorkers_00009_00006_INTEGER,1,aux21685_BOOL);
constraint int_eq_reif(TWorkers_00009_00012_INTEGER,1,aux21686_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21687,s_00006],0);
constraint int_lt_reif(s_00012,aux21687,aux21688_BOOL);
constraint int_le_reif(s_00006, s_00012,aux21689_BOOL);
constraint array_bool_and([aux21685_BOOL,aux21686_BOOL,aux21688_BOOL,w_00009_00006_BOOL,aux21689_BOOL],aux21690_BOOL);
constraint int_eq_reif(TWorkers_00009_00007_INTEGER,1,aux21691_BOOL);
constraint int_eq_reif(TWorkers_00009_00012_INTEGER,1,aux21692_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21693,s_00007],0);
constraint int_lt_reif(s_00012,aux21693,aux21694_BOOL);
constraint int_le_reif(s_00007, s_00012,aux21695_BOOL);
constraint array_bool_and([aux21691_BOOL,aux21692_BOOL,aux21694_BOOL,w_00009_00007_BOOL,aux21695_BOOL],aux21696_BOOL);
constraint int_eq_reif(TWorkers_00009_00008_INTEGER,1,aux21697_BOOL);
constraint int_eq_reif(TWorkers_00009_00012_INTEGER,1,aux21698_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21699,s_00008],0);
constraint int_lt_reif(s_00012,aux21699,aux21700_BOOL);
constraint int_le_reif(s_00008, s_00012,aux21701_BOOL);
constraint array_bool_and([aux21697_BOOL,aux21698_BOOL,aux21700_BOOL,w_00009_00008_BOOL,aux21701_BOOL],aux21702_BOOL);
constraint int_eq_reif(TWorkers_00009_00009_INTEGER,1,aux21703_BOOL);
constraint int_eq_reif(TWorkers_00009_00012_INTEGER,1,aux21704_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21705,s_00009],0);
constraint int_lt_reif(s_00012,aux21705,aux21706_BOOL);
constraint int_le_reif(s_00009, s_00012,aux21707_BOOL);
constraint array_bool_and([aux21703_BOOL,aux21704_BOOL,aux21706_BOOL,w_00009_00009_BOOL,aux21707_BOOL],aux21708_BOOL);
constraint int_eq_reif(TWorkers_00009_00010_INTEGER,1,aux21709_BOOL);
constraint int_eq_reif(TWorkers_00009_00012_INTEGER,1,aux21710_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux21711,s_00010],0);
constraint int_lt_reif(s_00012,aux21711,aux21712_BOOL);
constraint int_le_reif(s_00010, s_00012,aux21713_BOOL);
constraint array_bool_and([aux21709_BOOL,aux21710_BOOL,aux21712_BOOL,w_00009_00010_BOOL,aux21713_BOOL],aux21714_BOOL);
constraint int_eq_reif(TWorkers_00009_00011_INTEGER,1,aux21715_BOOL);
constraint int_eq_reif(TWorkers_00009_00012_INTEGER,1,aux21716_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21717,s_00011],0);
constraint int_lt_reif(s_00012,aux21717,aux21718_BOOL);
constraint int_le_reif(s_00011, s_00012,aux21719_BOOL);
constraint array_bool_and([aux21715_BOOL,aux21716_BOOL,aux21718_BOOL,w_00009_00011_BOOL,aux21719_BOOL],aux21720_BOOL);
constraint int_eq_reif(TWorkers_00009_00012_INTEGER,1,aux21721_BOOL);
constraint int_eq_reif(TWorkers_00009_00013_INTEGER,1,aux21722_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21723,s_00013],0);
constraint int_lt_reif(s_00012,aux21723,aux21724_BOOL);
constraint int_le_reif(s_00013, s_00012,aux21725_BOOL);
constraint array_bool_and([aux21721_BOOL,aux21722_BOOL,aux21724_BOOL,w_00009_00013_BOOL,aux21725_BOOL],aux21726_BOOL);
constraint int_eq_reif(TWorkers_00009_00012_INTEGER,1,aux21727_BOOL);
constraint int_eq_reif(TWorkers_00009_00014_INTEGER,1,aux21728_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21729,s_00014],0);
constraint int_lt_reif(s_00012,aux21729,aux21730_BOOL);
constraint int_le_reif(s_00014, s_00012,aux21731_BOOL);
constraint array_bool_and([aux21727_BOOL,aux21728_BOOL,aux21730_BOOL,w_00009_00014_BOOL,aux21731_BOOL],aux21732_BOOL);
constraint int_eq_reif(TWorkers_00009_00012_INTEGER,1,aux21733_BOOL);
constraint int_eq_reif(TWorkers_00009_00015_INTEGER,1,aux21734_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21735,s_00015],0);
constraint int_lt_reif(s_00012,aux21735,aux21736_BOOL);
constraint int_le_reif(s_00015, s_00012,aux21737_BOOL);
constraint array_bool_and([aux21733_BOOL,aux21734_BOOL,aux21736_BOOL,w_00009_00015_BOOL,aux21737_BOOL],aux21738_BOOL);
constraint int_eq_reif(TWorkers_00009_00012_INTEGER,1,aux21739_BOOL);
constraint int_eq_reif(TWorkers_00009_00016_INTEGER,1,aux21740_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21741,s_00016],0);
constraint int_lt_reif(s_00012,aux21741,aux21742_BOOL);
constraint int_le_reif(s_00016, s_00012,aux21743_BOOL);
constraint array_bool_and([aux21739_BOOL,aux21740_BOOL,aux21742_BOOL,w_00009_00016_BOOL,aux21743_BOOL],aux21744_BOOL);
constraint int_eq_reif(TWorkers_00009_00012_INTEGER,1,aux21745_BOOL);
constraint int_eq_reif(TWorkers_00009_00017_INTEGER,1,aux21746_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21747,s_00017],0);
constraint int_lt_reif(s_00012,aux21747,aux21748_BOOL);
constraint int_le_reif(s_00017, s_00012,aux21749_BOOL);
constraint array_bool_and([aux21745_BOOL,aux21746_BOOL,aux21748_BOOL,w_00009_00017_BOOL,aux21749_BOOL],aux21750_BOOL);
constraint int_eq_reif(TWorkers_00009_00012_INTEGER,1,aux21751_BOOL);
constraint int_eq_reif(TWorkers_00009_00018_INTEGER,1,aux21752_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21753,s_00018],0);
constraint int_lt_reif(s_00012,aux21753,aux21754_BOOL);
constraint int_le_reif(s_00018, s_00012,aux21755_BOOL);
constraint array_bool_and([aux21751_BOOL,aux21752_BOOL,aux21754_BOOL,w_00009_00018_BOOL,aux21755_BOOL],aux21756_BOOL);
constraint int_eq_reif(TWorkers_00009_00012_INTEGER,1,aux21757_BOOL);
constraint int_eq_reif(TWorkers_00009_00019_INTEGER,1,aux21758_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21759,s_00019],0);
constraint int_lt_reif(s_00012,aux21759,aux21760_BOOL);
constraint int_le_reif(s_00019, s_00012,aux21761_BOOL);
constraint array_bool_and([aux21757_BOOL,aux21758_BOOL,aux21760_BOOL,w_00009_00019_BOOL,aux21761_BOOL],aux21762_BOOL);
constraint int_eq_reif(TWorkers_00009_00012_INTEGER,1,aux21763_BOOL);
constraint int_eq_reif(TWorkers_00009_00020_INTEGER,1,aux21764_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21765,s_00020],0);
constraint int_lt_reif(s_00012,aux21765,aux21766_BOOL);
constraint int_le_reif(s_00020, s_00012,aux21767_BOOL);
constraint array_bool_and([aux21763_BOOL,aux21764_BOOL,aux21766_BOOL,w_00009_00020_BOOL,aux21767_BOOL],aux21768_BOOL);
constraint int_eq_reif(TWorkers_00009_00012_INTEGER,1,aux21769_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21770,s_00012],0);
constraint int_lt_reif(s_00012,aux21770,aux21771_BOOL);
constraint array_bool_and([aux21769_BOOL,aux21771_BOOL,w_00009_00012_BOOL],aux21772_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux21660_INTEGER,aux21666_INTEGER,aux21672_INTEGER,aux21678_INTEGER,aux21684_INTEGER,aux21690_INTEGER,aux21696_INTEGER,aux21702_INTEGER,aux21708_INTEGER,aux21714_INTEGER,aux21720_INTEGER,aux21726_INTEGER,aux21732_INTEGER,aux21738_INTEGER,aux21744_INTEGER,aux21750_INTEGER,aux21756_INTEGER,aux21762_INTEGER,aux21768_INTEGER,aux21772_INTEGER,1],0,aux21773_BOOL);
constraint int_eq_reif(TWorkers_00009_00001_INTEGER,1,aux21774_BOOL);
constraint int_eq_reif(TWorkers_00009_00011_INTEGER,1,aux21775_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21776,s_00001],0);
constraint int_lt_reif(s_00011,aux21776,aux21777_BOOL);
constraint int_le_reif(s_00001, s_00011,aux21778_BOOL);
constraint array_bool_and([aux21774_BOOL,aux21775_BOOL,aux21777_BOOL,w_00009_00001_BOOL,aux21778_BOOL],aux21779_BOOL);
constraint int_eq_reif(TWorkers_00009_00002_INTEGER,1,aux21780_BOOL);
constraint int_eq_reif(TWorkers_00009_00011_INTEGER,1,aux21781_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21782,s_00002],0);
constraint int_lt_reif(s_00011,aux21782,aux21783_BOOL);
constraint int_le_reif(s_00002, s_00011,aux21784_BOOL);
constraint array_bool_and([aux21780_BOOL,aux21781_BOOL,aux21783_BOOL,w_00009_00002_BOOL,aux21784_BOOL],aux21785_BOOL);
constraint int_eq_reif(TWorkers_00009_00003_INTEGER,1,aux21786_BOOL);
constraint int_eq_reif(TWorkers_00009_00011_INTEGER,1,aux21787_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21788,s_00003],0);
constraint int_lt_reif(s_00011,aux21788,aux21789_BOOL);
constraint int_le_reif(s_00003, s_00011,aux21790_BOOL);
constraint array_bool_and([aux21786_BOOL,aux21787_BOOL,aux21789_BOOL,w_00009_00003_BOOL,aux21790_BOOL],aux21791_BOOL);
constraint int_eq_reif(TWorkers_00009_00004_INTEGER,1,aux21792_BOOL);
constraint int_eq_reif(TWorkers_00009_00011_INTEGER,1,aux21793_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21794,s_00004],0);
constraint int_lt_reif(s_00011,aux21794,aux21795_BOOL);
constraint int_le_reif(s_00004, s_00011,aux21796_BOOL);
constraint array_bool_and([aux21792_BOOL,aux21793_BOOL,aux21795_BOOL,w_00009_00004_BOOL,aux21796_BOOL],aux21797_BOOL);
constraint int_eq_reif(TWorkers_00009_00005_INTEGER,1,aux21798_BOOL);
constraint int_eq_reif(TWorkers_00009_00011_INTEGER,1,aux21799_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21800,s_00005],0);
constraint int_lt_reif(s_00011,aux21800,aux21801_BOOL);
constraint int_le_reif(s_00005, s_00011,aux21802_BOOL);
constraint array_bool_and([aux21798_BOOL,aux21799_BOOL,aux21801_BOOL,w_00009_00005_BOOL,aux21802_BOOL],aux21803_BOOL);
constraint int_eq_reif(TWorkers_00009_00006_INTEGER,1,aux21804_BOOL);
constraint int_eq_reif(TWorkers_00009_00011_INTEGER,1,aux21805_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21806,s_00006],0);
constraint int_lt_reif(s_00011,aux21806,aux21807_BOOL);
constraint int_le_reif(s_00006, s_00011,aux21808_BOOL);
constraint array_bool_and([aux21804_BOOL,aux21805_BOOL,aux21807_BOOL,w_00009_00006_BOOL,aux21808_BOOL],aux21809_BOOL);
constraint int_eq_reif(TWorkers_00009_00007_INTEGER,1,aux21810_BOOL);
constraint int_eq_reif(TWorkers_00009_00011_INTEGER,1,aux21811_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21812,s_00007],0);
constraint int_lt_reif(s_00011,aux21812,aux21813_BOOL);
constraint int_le_reif(s_00007, s_00011,aux21814_BOOL);
constraint array_bool_and([aux21810_BOOL,aux21811_BOOL,aux21813_BOOL,w_00009_00007_BOOL,aux21814_BOOL],aux21815_BOOL);
constraint int_eq_reif(TWorkers_00009_00008_INTEGER,1,aux21816_BOOL);
constraint int_eq_reif(TWorkers_00009_00011_INTEGER,1,aux21817_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21818,s_00008],0);
constraint int_lt_reif(s_00011,aux21818,aux21819_BOOL);
constraint int_le_reif(s_00008, s_00011,aux21820_BOOL);
constraint array_bool_and([aux21816_BOOL,aux21817_BOOL,aux21819_BOOL,w_00009_00008_BOOL,aux21820_BOOL],aux21821_BOOL);
constraint int_eq_reif(TWorkers_00009_00009_INTEGER,1,aux21822_BOOL);
constraint int_eq_reif(TWorkers_00009_00011_INTEGER,1,aux21823_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21824,s_00009],0);
constraint int_lt_reif(s_00011,aux21824,aux21825_BOOL);
constraint int_le_reif(s_00009, s_00011,aux21826_BOOL);
constraint array_bool_and([aux21822_BOOL,aux21823_BOOL,aux21825_BOOL,w_00009_00009_BOOL,aux21826_BOOL],aux21827_BOOL);
constraint int_eq_reif(TWorkers_00009_00010_INTEGER,1,aux21828_BOOL);
constraint int_eq_reif(TWorkers_00009_00011_INTEGER,1,aux21829_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux21830,s_00010],0);
constraint int_lt_reif(s_00011,aux21830,aux21831_BOOL);
constraint int_le_reif(s_00010, s_00011,aux21832_BOOL);
constraint array_bool_and([aux21828_BOOL,aux21829_BOOL,aux21831_BOOL,w_00009_00010_BOOL,aux21832_BOOL],aux21833_BOOL);
constraint int_eq_reif(TWorkers_00009_00011_INTEGER,1,aux21834_BOOL);
constraint int_eq_reif(TWorkers_00009_00012_INTEGER,1,aux21835_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21836,s_00012],0);
constraint int_lt_reif(s_00011,aux21836,aux21837_BOOL);
constraint int_le_reif(s_00012, s_00011,aux21838_BOOL);
constraint array_bool_and([aux21834_BOOL,aux21835_BOOL,aux21837_BOOL,w_00009_00012_BOOL,aux21838_BOOL],aux21839_BOOL);
constraint int_eq_reif(TWorkers_00009_00011_INTEGER,1,aux21840_BOOL);
constraint int_eq_reif(TWorkers_00009_00013_INTEGER,1,aux21841_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21842,s_00013],0);
constraint int_lt_reif(s_00011,aux21842,aux21843_BOOL);
constraint int_le_reif(s_00013, s_00011,aux21844_BOOL);
constraint array_bool_and([aux21840_BOOL,aux21841_BOOL,aux21843_BOOL,w_00009_00013_BOOL,aux21844_BOOL],aux21845_BOOL);
constraint int_eq_reif(TWorkers_00009_00011_INTEGER,1,aux21846_BOOL);
constraint int_eq_reif(TWorkers_00009_00014_INTEGER,1,aux21847_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21848,s_00014],0);
constraint int_lt_reif(s_00011,aux21848,aux21849_BOOL);
constraint int_le_reif(s_00014, s_00011,aux21850_BOOL);
constraint array_bool_and([aux21846_BOOL,aux21847_BOOL,aux21849_BOOL,w_00009_00014_BOOL,aux21850_BOOL],aux21851_BOOL);
constraint int_eq_reif(TWorkers_00009_00011_INTEGER,1,aux21852_BOOL);
constraint int_eq_reif(TWorkers_00009_00015_INTEGER,1,aux21853_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21854,s_00015],0);
constraint int_lt_reif(s_00011,aux21854,aux21855_BOOL);
constraint int_le_reif(s_00015, s_00011,aux21856_BOOL);
constraint array_bool_and([aux21852_BOOL,aux21853_BOOL,aux21855_BOOL,w_00009_00015_BOOL,aux21856_BOOL],aux21857_BOOL);
constraint int_eq_reif(TWorkers_00009_00011_INTEGER,1,aux21858_BOOL);
constraint int_eq_reif(TWorkers_00009_00016_INTEGER,1,aux21859_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21860,s_00016],0);
constraint int_lt_reif(s_00011,aux21860,aux21861_BOOL);
constraint int_le_reif(s_00016, s_00011,aux21862_BOOL);
constraint array_bool_and([aux21858_BOOL,aux21859_BOOL,aux21861_BOOL,w_00009_00016_BOOL,aux21862_BOOL],aux21863_BOOL);
constraint int_eq_reif(TWorkers_00009_00011_INTEGER,1,aux21864_BOOL);
constraint int_eq_reif(TWorkers_00009_00017_INTEGER,1,aux21865_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21866,s_00017],0);
constraint int_lt_reif(s_00011,aux21866,aux21867_BOOL);
constraint int_le_reif(s_00017, s_00011,aux21868_BOOL);
constraint array_bool_and([aux21864_BOOL,aux21865_BOOL,aux21867_BOOL,w_00009_00017_BOOL,aux21868_BOOL],aux21869_BOOL);
constraint int_eq_reif(TWorkers_00009_00011_INTEGER,1,aux21870_BOOL);
constraint int_eq_reif(TWorkers_00009_00018_INTEGER,1,aux21871_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21872,s_00018],0);
constraint int_lt_reif(s_00011,aux21872,aux21873_BOOL);
constraint int_le_reif(s_00018, s_00011,aux21874_BOOL);
constraint array_bool_and([aux21870_BOOL,aux21871_BOOL,aux21873_BOOL,w_00009_00018_BOOL,aux21874_BOOL],aux21875_BOOL);
constraint int_eq_reif(TWorkers_00009_00011_INTEGER,1,aux21876_BOOL);
constraint int_eq_reif(TWorkers_00009_00019_INTEGER,1,aux21877_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21878,s_00019],0);
constraint int_lt_reif(s_00011,aux21878,aux21879_BOOL);
constraint int_le_reif(s_00019, s_00011,aux21880_BOOL);
constraint array_bool_and([aux21876_BOOL,aux21877_BOOL,aux21879_BOOL,w_00009_00019_BOOL,aux21880_BOOL],aux21881_BOOL);
constraint int_eq_reif(TWorkers_00009_00011_INTEGER,1,aux21882_BOOL);
constraint int_eq_reif(TWorkers_00009_00020_INTEGER,1,aux21883_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21884,s_00020],0);
constraint int_lt_reif(s_00011,aux21884,aux21885_BOOL);
constraint int_le_reif(s_00020, s_00011,aux21886_BOOL);
constraint array_bool_and([aux21882_BOOL,aux21883_BOOL,aux21885_BOOL,w_00009_00020_BOOL,aux21886_BOOL],aux21887_BOOL);
constraint int_eq_reif(TWorkers_00009_00011_INTEGER,1,aux21888_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21889,s_00011],0);
constraint int_lt_reif(s_00011,aux21889,aux21890_BOOL);
constraint array_bool_and([aux21888_BOOL,aux21890_BOOL,w_00009_00011_BOOL],aux21891_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux21779_INTEGER,aux21785_INTEGER,aux21791_INTEGER,aux21797_INTEGER,aux21803_INTEGER,aux21809_INTEGER,aux21815_INTEGER,aux21821_INTEGER,aux21827_INTEGER,aux21833_INTEGER,aux21839_INTEGER,aux21845_INTEGER,aux21851_INTEGER,aux21857_INTEGER,aux21863_INTEGER,aux21869_INTEGER,aux21875_INTEGER,aux21881_INTEGER,aux21887_INTEGER,aux21891_INTEGER,1],0,aux21892_BOOL);
constraint array_bool_and([aux19631_BOOL,aux19750_BOOL,aux19869_BOOL,aux19988_BOOL,aux20107_BOOL,aux20226_BOOL,aux20345_BOOL,aux20464_BOOL,aux20583_BOOL,aux20702_BOOL,aux20821_BOOL,aux20940_BOOL,aux21059_BOOL,aux21178_BOOL,aux21297_BOOL,aux21416_BOOL,aux21535_BOOL,aux21654_BOOL,aux21773_BOOL,aux21892_BOOL],aux21893_BOOL);
constraint int_lin_le_reif([1,1,-1],[4,s_00001,s_00002],0,aux21894_BOOL);
constraint int_lin_le_reif([1,1,-1],[4,s_00002,s_00001],0,aux21895_BOOL);
constraint int_lin_le_reif([1,1,-1],[2,s_00009,s_00002],0,aux21896_BOOL);
constraint int_lin_le_reif([1,1,-1],[4,s_00002,s_00009],0,aux21897_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21898,s_00009],0);
constraint int_lt_reif(s_00001,aux21898,aux21899_BOOL);
constraint int_le_reif(s_00009, s_00001,aux21900_BOOL);
constraint array_bool_and([aux21899_BOOL,aux21900_BOOL],aux21901_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21902,s_00002],0);
constraint int_lt_reif(s_00001,aux21902,aux21903_BOOL);
constraint int_le_reif(s_00002, s_00001,aux21904_BOOL);
constraint array_bool_and([aux21903_BOOL,aux21904_BOOL],aux21905_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21906,s_00001],0);
constraint int_lt_reif(s_00001,aux21906,aux21907_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21908,s_00009],0);
constraint int_lt_reif(s_00002,aux21908,aux21909_BOOL);
constraint int_le_reif(s_00009, s_00002,aux21910_BOOL);
constraint array_bool_and([aux21909_BOOL,aux21910_BOOL],aux21911_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21912,s_00001],0);
constraint int_lt_reif(s_00002,aux21912,aux21913_BOOL);
constraint int_le_reif(s_00001, s_00002,aux21914_BOOL);
constraint array_bool_and([aux21913_BOOL,aux21914_BOOL],aux21915_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21916,s_00002],0);
constraint int_lt_reif(s_00002,aux21916,aux21917_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21918,s_00001],0);
constraint int_lt_reif(s_00009,aux21918,aux21919_BOOL);
constraint int_le_reif(s_00001, s_00009,aux21920_BOOL);
constraint array_bool_and([aux21919_BOOL,aux21920_BOOL],aux21921_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21922,s_00002],0);
constraint int_lt_reif(s_00009,aux21922,aux21923_BOOL);
constraint int_le_reif(s_00002, s_00009,aux21924_BOOL);
constraint array_bool_and([aux21923_BOOL,aux21924_BOOL],aux21925_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21926,s_00009],0);
constraint int_lt_reif(s_00009,aux21926,aux21927_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21928,s_00009],0);
constraint int_lt_reif(s_00004,aux21928,aux21929_BOOL);
constraint int_le_reif(s_00009, s_00004,aux21930_BOOL);
constraint array_bool_and([aux21929_BOOL,aux21930_BOOL],aux21931_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21932,s_00014],0);
constraint int_lt_reif(s_00004,aux21932,aux21933_BOOL);
constraint int_le_reif(s_00014, s_00004,aux21934_BOOL);
constraint array_bool_and([aux21933_BOOL,aux21934_BOOL],aux21935_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21936,s_00011],0);
constraint int_lt_reif(s_00004,aux21936,aux21937_BOOL);
constraint int_le_reif(s_00011, s_00004,aux21938_BOOL);
constraint array_bool_and([aux21937_BOOL,aux21938_BOOL],aux21939_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21940,s_00017],0);
constraint int_lt_reif(s_00004,aux21940,aux21941_BOOL);
constraint int_le_reif(s_00017, s_00004,aux21942_BOOL);
constraint array_bool_and([aux21941_BOOL,aux21942_BOOL],aux21943_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21944,s_00004],0);
constraint int_lt_reif(s_00004,aux21944,aux21945_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21946,s_00004],0);
constraint int_lt_reif(s_00009,aux21946,aux21947_BOOL);
constraint int_le_reif(s_00004, s_00009,aux21948_BOOL);
constraint array_bool_and([aux21947_BOOL,aux21948_BOOL],aux21949_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21950,s_00014],0);
constraint int_lt_reif(s_00009,aux21950,aux21951_BOOL);
constraint int_le_reif(s_00014, s_00009,aux21952_BOOL);
constraint array_bool_and([aux21951_BOOL,aux21952_BOOL],aux21953_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21954,s_00011],0);
constraint int_lt_reif(s_00009,aux21954,aux21955_BOOL);
constraint int_le_reif(s_00011, s_00009,aux21956_BOOL);
constraint array_bool_and([aux21955_BOOL,aux21956_BOOL],aux21957_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21958,s_00017],0);
constraint int_lt_reif(s_00009,aux21958,aux21959_BOOL);
constraint int_le_reif(s_00017, s_00009,aux21960_BOOL);
constraint array_bool_and([aux21959_BOOL,aux21960_BOOL],aux21961_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21962,s_00009],0);
constraint int_lt_reif(s_00009,aux21962,aux21963_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21964,s_00004],0);
constraint int_lt_reif(s_00011,aux21964,aux21965_BOOL);
constraint int_le_reif(s_00004, s_00011,aux21966_BOOL);
constraint array_bool_and([aux21965_BOOL,aux21966_BOOL],aux21967_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21968,s_00009],0);
constraint int_lt_reif(s_00011,aux21968,aux21969_BOOL);
constraint int_le_reif(s_00009, s_00011,aux21970_BOOL);
constraint array_bool_and([aux21969_BOOL,aux21970_BOOL],aux21971_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21972,s_00014],0);
constraint int_lt_reif(s_00011,aux21972,aux21973_BOOL);
constraint int_le_reif(s_00014, s_00011,aux21974_BOOL);
constraint array_bool_and([aux21973_BOOL,aux21974_BOOL],aux21975_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21976,s_00017],0);
constraint int_lt_reif(s_00011,aux21976,aux21977_BOOL);
constraint int_le_reif(s_00017, s_00011,aux21978_BOOL);
constraint array_bool_and([aux21977_BOOL,aux21978_BOOL],aux21979_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21980,s_00011],0);
constraint int_lt_reif(s_00011,aux21980,aux21981_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21982,s_00004],0);
constraint int_lt_reif(s_00014,aux21982,aux21983_BOOL);
constraint int_le_reif(s_00004, s_00014,aux21984_BOOL);
constraint array_bool_and([aux21983_BOOL,aux21984_BOOL],aux21985_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21986,s_00009],0);
constraint int_lt_reif(s_00014,aux21986,aux21987_BOOL);
constraint int_le_reif(s_00009, s_00014,aux21988_BOOL);
constraint array_bool_and([aux21987_BOOL,aux21988_BOOL],aux21989_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21990,s_00011],0);
constraint int_lt_reif(s_00014,aux21990,aux21991_BOOL);
constraint int_le_reif(s_00011, s_00014,aux21992_BOOL);
constraint array_bool_and([aux21991_BOOL,aux21992_BOOL],aux21993_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21994,s_00017],0);
constraint int_lt_reif(s_00014,aux21994,aux21995_BOOL);
constraint int_le_reif(s_00017, s_00014,aux21996_BOOL);
constraint array_bool_and([aux21995_BOOL,aux21996_BOOL],aux21997_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21998,s_00014],0);
constraint int_lt_reif(s_00014,aux21998,aux21999_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22000,s_00004],0);
constraint int_lt_reif(s_00017,aux22000,aux22001_BOOL);
constraint int_le_reif(s_00004, s_00017,aux22002_BOOL);
constraint array_bool_and([aux22001_BOOL,aux22002_BOOL],aux22003_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22004,s_00009],0);
constraint int_lt_reif(s_00017,aux22004,aux22005_BOOL);
constraint int_le_reif(s_00009, s_00017,aux22006_BOOL);
constraint array_bool_and([aux22005_BOOL,aux22006_BOOL],aux22007_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22008,s_00014],0);
constraint int_lt_reif(s_00017,aux22008,aux22009_BOOL);
constraint int_le_reif(s_00014, s_00017,aux22010_BOOL);
constraint array_bool_and([aux22009_BOOL,aux22010_BOOL],aux22011_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22012,s_00011],0);
constraint int_lt_reif(s_00017,aux22012,aux22013_BOOL);
constraint int_le_reif(s_00011, s_00017,aux22014_BOOL);
constraint array_bool_and([aux22013_BOOL,aux22014_BOOL],aux22015_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22016,s_00017],0);
constraint int_lt_reif(s_00017,aux22016,aux22017_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22018,s_00008],0);
constraint int_lt_reif(s_00002,aux22018,aux22019_BOOL);
constraint int_le_reif(s_00008, s_00002,aux22020_BOOL);
constraint array_bool_and([aux22019_BOOL,aux22020_BOOL],aux22021_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22022,s_00003],0);
constraint int_lt_reif(s_00002,aux22022,aux22023_BOOL);
constraint int_le_reif(s_00003, s_00002,aux22024_BOOL);
constraint array_bool_and([aux22023_BOOL,aux22024_BOOL],aux22025_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22026,s_00005],0);
constraint int_lt_reif(s_00002,aux22026,aux22027_BOOL);
constraint int_le_reif(s_00005, s_00002,aux22028_BOOL);
constraint array_bool_and([aux22027_BOOL,aux22028_BOOL],aux22029_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22030,s_00020],0);
constraint int_lt_reif(s_00002,aux22030,aux22031_BOOL);
constraint int_le_reif(s_00020, s_00002,aux22032_BOOL);
constraint array_bool_and([aux22031_BOOL,aux22032_BOOL],aux22033_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22034,s_00002],0);
constraint int_lt_reif(s_00002,aux22034,aux22035_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22036,s_00008],0);
constraint int_lt_reif(s_00003,aux22036,aux22037_BOOL);
constraint int_le_reif(s_00008, s_00003,aux22038_BOOL);
constraint array_bool_and([aux22037_BOOL,aux22038_BOOL],aux22039_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22040,s_00005],0);
constraint int_lt_reif(s_00003,aux22040,aux22041_BOOL);
constraint int_le_reif(s_00005, s_00003,aux22042_BOOL);
constraint array_bool_and([aux22041_BOOL,aux22042_BOOL],aux22043_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22044,s_00002],0);
constraint int_lt_reif(s_00003,aux22044,aux22045_BOOL);
constraint int_le_reif(s_00002, s_00003,aux22046_BOOL);
constraint array_bool_and([aux22045_BOOL,aux22046_BOOL],aux22047_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22048,s_00020],0);
constraint int_lt_reif(s_00003,aux22048,aux22049_BOOL);
constraint int_le_reif(s_00020, s_00003,aux22050_BOOL);
constraint array_bool_and([aux22049_BOOL,aux22050_BOOL],aux22051_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22052,s_00003],0);
constraint int_lt_reif(s_00003,aux22052,aux22053_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22054,s_00008],0);
constraint int_lt_reif(s_00005,aux22054,aux22055_BOOL);
constraint int_le_reif(s_00008, s_00005,aux22056_BOOL);
constraint array_bool_and([aux22055_BOOL,aux22056_BOOL],aux22057_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22058,s_00003],0);
constraint int_lt_reif(s_00005,aux22058,aux22059_BOOL);
constraint int_le_reif(s_00003, s_00005,aux22060_BOOL);
constraint array_bool_and([aux22059_BOOL,aux22060_BOOL],aux22061_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22062,s_00002],0);
constraint int_lt_reif(s_00005,aux22062,aux22063_BOOL);
constraint int_le_reif(s_00002, s_00005,aux22064_BOOL);
constraint array_bool_and([aux22063_BOOL,aux22064_BOOL],aux22065_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22066,s_00020],0);
constraint int_lt_reif(s_00005,aux22066,aux22067_BOOL);
constraint int_le_reif(s_00020, s_00005,aux22068_BOOL);
constraint array_bool_and([aux22067_BOOL,aux22068_BOOL],aux22069_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22070,s_00005],0);
constraint int_lt_reif(s_00005,aux22070,aux22071_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22072,s_00003],0);
constraint int_lt_reif(s_00008,aux22072,aux22073_BOOL);
constraint int_le_reif(s_00003, s_00008,aux22074_BOOL);
constraint array_bool_and([aux22073_BOOL,aux22074_BOOL],aux22075_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22076,s_00005],0);
constraint int_lt_reif(s_00008,aux22076,aux22077_BOOL);
constraint int_le_reif(s_00005, s_00008,aux22078_BOOL);
constraint array_bool_and([aux22077_BOOL,aux22078_BOOL],aux22079_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22080,s_00002],0);
constraint int_lt_reif(s_00008,aux22080,aux22081_BOOL);
constraint int_le_reif(s_00002, s_00008,aux22082_BOOL);
constraint array_bool_and([aux22081_BOOL,aux22082_BOOL],aux22083_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22084,s_00020],0);
constraint int_lt_reif(s_00008,aux22084,aux22085_BOOL);
constraint int_le_reif(s_00020, s_00008,aux22086_BOOL);
constraint array_bool_and([aux22085_BOOL,aux22086_BOOL],aux22087_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22088,s_00008],0);
constraint int_lt_reif(s_00008,aux22088,aux22089_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22090,s_00008],0);
constraint int_lt_reif(s_00020,aux22090,aux22091_BOOL);
constraint int_le_reif(s_00008, s_00020,aux22092_BOOL);
constraint array_bool_and([aux22091_BOOL,aux22092_BOOL],aux22093_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22094,s_00003],0);
constraint int_lt_reif(s_00020,aux22094,aux22095_BOOL);
constraint int_le_reif(s_00003, s_00020,aux22096_BOOL);
constraint array_bool_and([aux22095_BOOL,aux22096_BOOL],aux22097_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22098,s_00005],0);
constraint int_lt_reif(s_00020,aux22098,aux22099_BOOL);
constraint int_le_reif(s_00005, s_00020,aux22100_BOOL);
constraint array_bool_and([aux22099_BOOL,aux22100_BOOL],aux22101_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22102,s_00002],0);
constraint int_lt_reif(s_00020,aux22102,aux22103_BOOL);
constraint int_le_reif(s_00002, s_00020,aux22104_BOOL);
constraint array_bool_and([aux22103_BOOL,aux22104_BOOL],aux22105_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22106,s_00020],0);
constraint int_lt_reif(s_00020,aux22106,aux22107_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22108,s_00004],0);
constraint int_lt_reif(s_00001,aux22108,aux22109_BOOL);
constraint int_le_reif(s_00004, s_00001,aux22110_BOOL);
constraint array_bool_and([aux22109_BOOL,aux22110_BOOL],aux22111_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22112,s_00008],0);
constraint int_lt_reif(s_00001,aux22112,aux22113_BOOL);
constraint int_le_reif(s_00008, s_00001,aux22114_BOOL);
constraint array_bool_and([aux22113_BOOL,aux22114_BOOL],aux22115_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22116,s_00005],0);
constraint int_lt_reif(s_00001,aux22116,aux22117_BOOL);
constraint int_le_reif(s_00005, s_00001,aux22118_BOOL);
constraint array_bool_and([aux22117_BOOL,aux22118_BOOL],aux22119_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22120,s_00015],0);
constraint int_lt_reif(s_00001,aux22120,aux22121_BOOL);
constraint int_le_reif(s_00015, s_00001,aux22122_BOOL);
constraint array_bool_and([aux22121_BOOL,aux22122_BOOL],aux22123_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22124,s_00007],0);
constraint int_lt_reif(s_00001,aux22124,aux22125_BOOL);
constraint int_le_reif(s_00007, s_00001,aux22126_BOOL);
constraint array_bool_and([aux22125_BOOL,aux22126_BOOL],aux22127_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22128,s_00011],0);
constraint int_lt_reif(s_00001,aux22128,aux22129_BOOL);
constraint int_le_reif(s_00011, s_00001,aux22130_BOOL);
constraint array_bool_and([aux22129_BOOL,aux22130_BOOL],aux22131_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22132,s_00013],0);
constraint int_lt_reif(s_00001,aux22132,aux22133_BOOL);
constraint int_le_reif(s_00013, s_00001,aux22134_BOOL);
constraint array_bool_and([aux22133_BOOL,aux22134_BOOL],aux22135_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22136,s_00016],0);
constraint int_lt_reif(s_00001,aux22136,aux22137_BOOL);
constraint int_le_reif(s_00016, s_00001,aux22138_BOOL);
constraint array_bool_and([aux22137_BOOL,aux22138_BOOL],aux22139_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux22140,s_00010],0);
constraint int_lt_reif(s_00001,aux22140,aux22141_BOOL);
constraint int_le_reif(s_00010, s_00001,aux22142_BOOL);
constraint array_bool_and([aux22141_BOOL,aux22142_BOOL],aux22143_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22144,s_00001],0);
constraint int_lt_reif(s_00001,aux22144,aux22145_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22146,s_00008],0);
constraint int_lt_reif(s_00004,aux22146,aux22147_BOOL);
constraint int_le_reif(s_00008, s_00004,aux22148_BOOL);
constraint array_bool_and([aux22147_BOOL,aux22148_BOOL],aux22149_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22150,s_00005],0);
constraint int_lt_reif(s_00004,aux22150,aux22151_BOOL);
constraint int_le_reif(s_00005, s_00004,aux22152_BOOL);
constraint array_bool_and([aux22151_BOOL,aux22152_BOOL],aux22153_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22154,s_00015],0);
constraint int_lt_reif(s_00004,aux22154,aux22155_BOOL);
constraint int_le_reif(s_00015, s_00004,aux22156_BOOL);
constraint array_bool_and([aux22155_BOOL,aux22156_BOOL],aux22157_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22158,s_00007],0);
constraint int_lt_reif(s_00004,aux22158,aux22159_BOOL);
constraint int_le_reif(s_00007, s_00004,aux22160_BOOL);
constraint array_bool_and([aux22159_BOOL,aux22160_BOOL],aux22161_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22162,s_00001],0);
constraint int_lt_reif(s_00004,aux22162,aux22163_BOOL);
constraint int_le_reif(s_00001, s_00004,aux22164_BOOL);
constraint array_bool_and([aux22163_BOOL,aux22164_BOOL],aux22165_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22166,s_00011],0);
constraint int_lt_reif(s_00004,aux22166,aux22167_BOOL);
constraint int_le_reif(s_00011, s_00004,aux22168_BOOL);
constraint array_bool_and([aux22167_BOOL,aux22168_BOOL],aux22169_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22170,s_00013],0);
constraint int_lt_reif(s_00004,aux22170,aux22171_BOOL);
constraint int_le_reif(s_00013, s_00004,aux22172_BOOL);
constraint array_bool_and([aux22171_BOOL,aux22172_BOOL],aux22173_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22174,s_00016],0);
constraint int_lt_reif(s_00004,aux22174,aux22175_BOOL);
constraint int_le_reif(s_00016, s_00004,aux22176_BOOL);
constraint array_bool_and([aux22175_BOOL,aux22176_BOOL],aux22177_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux22178,s_00010],0);
constraint int_lt_reif(s_00004,aux22178,aux22179_BOOL);
constraint int_le_reif(s_00010, s_00004,aux22180_BOOL);
constraint array_bool_and([aux22179_BOOL,aux22180_BOOL],aux22181_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22182,s_00004],0);
constraint int_lt_reif(s_00004,aux22182,aux22183_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22184,s_00004],0);
constraint int_lt_reif(s_00005,aux22184,aux22185_BOOL);
constraint int_le_reif(s_00004, s_00005,aux22186_BOOL);
constraint array_bool_and([aux22185_BOOL,aux22186_BOOL],aux22187_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22188,s_00008],0);
constraint int_lt_reif(s_00005,aux22188,aux22189_BOOL);
constraint int_le_reif(s_00008, s_00005,aux22190_BOOL);
constraint array_bool_and([aux22189_BOOL,aux22190_BOOL],aux22191_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22192,s_00015],0);
constraint int_lt_reif(s_00005,aux22192,aux22193_BOOL);
constraint int_le_reif(s_00015, s_00005,aux22194_BOOL);
constraint array_bool_and([aux22193_BOOL,aux22194_BOOL],aux22195_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22196,s_00007],0);
constraint int_lt_reif(s_00005,aux22196,aux22197_BOOL);
constraint int_le_reif(s_00007, s_00005,aux22198_BOOL);
constraint array_bool_and([aux22197_BOOL,aux22198_BOOL],aux22199_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22200,s_00001],0);
constraint int_lt_reif(s_00005,aux22200,aux22201_BOOL);
constraint int_le_reif(s_00001, s_00005,aux22202_BOOL);
constraint array_bool_and([aux22201_BOOL,aux22202_BOOL],aux22203_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22204,s_00011],0);
constraint int_lt_reif(s_00005,aux22204,aux22205_BOOL);
constraint int_le_reif(s_00011, s_00005,aux22206_BOOL);
constraint array_bool_and([aux22205_BOOL,aux22206_BOOL],aux22207_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22208,s_00013],0);
constraint int_lt_reif(s_00005,aux22208,aux22209_BOOL);
constraint int_le_reif(s_00013, s_00005,aux22210_BOOL);
constraint array_bool_and([aux22209_BOOL,aux22210_BOOL],aux22211_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22212,s_00016],0);
constraint int_lt_reif(s_00005,aux22212,aux22213_BOOL);
constraint int_le_reif(s_00016, s_00005,aux22214_BOOL);
constraint array_bool_and([aux22213_BOOL,aux22214_BOOL],aux22215_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux22216,s_00010],0);
constraint int_lt_reif(s_00005,aux22216,aux22217_BOOL);
constraint int_le_reif(s_00010, s_00005,aux22218_BOOL);
constraint array_bool_and([aux22217_BOOL,aux22218_BOOL],aux22219_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22220,s_00005],0);
constraint int_lt_reif(s_00005,aux22220,aux22221_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22222,s_00004],0);
constraint int_lt_reif(s_00007,aux22222,aux22223_BOOL);
constraint int_le_reif(s_00004, s_00007,aux22224_BOOL);
constraint array_bool_and([aux22223_BOOL,aux22224_BOOL],aux22225_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22226,s_00008],0);
constraint int_lt_reif(s_00007,aux22226,aux22227_BOOL);
constraint int_le_reif(s_00008, s_00007,aux22228_BOOL);
constraint array_bool_and([aux22227_BOOL,aux22228_BOOL],aux22229_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22230,s_00005],0);
constraint int_lt_reif(s_00007,aux22230,aux22231_BOOL);
constraint int_le_reif(s_00005, s_00007,aux22232_BOOL);
constraint array_bool_and([aux22231_BOOL,aux22232_BOOL],aux22233_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22234,s_00015],0);
constraint int_lt_reif(s_00007,aux22234,aux22235_BOOL);
constraint int_le_reif(s_00015, s_00007,aux22236_BOOL);
constraint array_bool_and([aux22235_BOOL,aux22236_BOOL],aux22237_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22238,s_00001],0);
constraint int_lt_reif(s_00007,aux22238,aux22239_BOOL);
constraint int_le_reif(s_00001, s_00007,aux22240_BOOL);
constraint array_bool_and([aux22239_BOOL,aux22240_BOOL],aux22241_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22242,s_00011],0);
constraint int_lt_reif(s_00007,aux22242,aux22243_BOOL);
constraint int_le_reif(s_00011, s_00007,aux22244_BOOL);
constraint array_bool_and([aux22243_BOOL,aux22244_BOOL],aux22245_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22246,s_00013],0);
constraint int_lt_reif(s_00007,aux22246,aux22247_BOOL);
constraint int_le_reif(s_00013, s_00007,aux22248_BOOL);
constraint array_bool_and([aux22247_BOOL,aux22248_BOOL],aux22249_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22250,s_00016],0);
constraint int_lt_reif(s_00007,aux22250,aux22251_BOOL);
constraint int_le_reif(s_00016, s_00007,aux22252_BOOL);
constraint array_bool_and([aux22251_BOOL,aux22252_BOOL],aux22253_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux22254,s_00010],0);
constraint int_lt_reif(s_00007,aux22254,aux22255_BOOL);
constraint int_le_reif(s_00010, s_00007,aux22256_BOOL);
constraint array_bool_and([aux22255_BOOL,aux22256_BOOL],aux22257_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22258,s_00007],0);
constraint int_lt_reif(s_00007,aux22258,aux22259_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22260,s_00004],0);
constraint int_lt_reif(s_00008,aux22260,aux22261_BOOL);
constraint int_le_reif(s_00004, s_00008,aux22262_BOOL);
constraint array_bool_and([aux22261_BOOL,aux22262_BOOL],aux22263_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22264,s_00005],0);
constraint int_lt_reif(s_00008,aux22264,aux22265_BOOL);
constraint int_le_reif(s_00005, s_00008,aux22266_BOOL);
constraint array_bool_and([aux22265_BOOL,aux22266_BOOL],aux22267_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22268,s_00015],0);
constraint int_lt_reif(s_00008,aux22268,aux22269_BOOL);
constraint int_le_reif(s_00015, s_00008,aux22270_BOOL);
constraint array_bool_and([aux22269_BOOL,aux22270_BOOL],aux22271_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22272,s_00007],0);
constraint int_lt_reif(s_00008,aux22272,aux22273_BOOL);
constraint int_le_reif(s_00007, s_00008,aux22274_BOOL);
constraint array_bool_and([aux22273_BOOL,aux22274_BOOL],aux22275_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22276,s_00001],0);
constraint int_lt_reif(s_00008,aux22276,aux22277_BOOL);
constraint int_le_reif(s_00001, s_00008,aux22278_BOOL);
constraint array_bool_and([aux22277_BOOL,aux22278_BOOL],aux22279_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22280,s_00011],0);
constraint int_lt_reif(s_00008,aux22280,aux22281_BOOL);
constraint int_le_reif(s_00011, s_00008,aux22282_BOOL);
constraint array_bool_and([aux22281_BOOL,aux22282_BOOL],aux22283_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22284,s_00013],0);
constraint int_lt_reif(s_00008,aux22284,aux22285_BOOL);
constraint int_le_reif(s_00013, s_00008,aux22286_BOOL);
constraint array_bool_and([aux22285_BOOL,aux22286_BOOL],aux22287_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22288,s_00016],0);
constraint int_lt_reif(s_00008,aux22288,aux22289_BOOL);
constraint int_le_reif(s_00016, s_00008,aux22290_BOOL);
constraint array_bool_and([aux22289_BOOL,aux22290_BOOL],aux22291_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux22292,s_00010],0);
constraint int_lt_reif(s_00008,aux22292,aux22293_BOOL);
constraint int_le_reif(s_00010, s_00008,aux22294_BOOL);
constraint array_bool_and([aux22293_BOOL,aux22294_BOOL],aux22295_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22296,s_00008],0);
constraint int_lt_reif(s_00008,aux22296,aux22297_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22298,s_00004],0);
constraint int_lt_reif(s_00010,aux22298,aux22299_BOOL);
constraint int_le_reif(s_00004, s_00010,aux22300_BOOL);
constraint array_bool_and([aux22299_BOOL,aux22300_BOOL],aux22301_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22302,s_00008],0);
constraint int_lt_reif(s_00010,aux22302,aux22303_BOOL);
constraint int_le_reif(s_00008, s_00010,aux22304_BOOL);
constraint array_bool_and([aux22303_BOOL,aux22304_BOOL],aux22305_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22306,s_00005],0);
constraint int_lt_reif(s_00010,aux22306,aux22307_BOOL);
constraint int_le_reif(s_00005, s_00010,aux22308_BOOL);
constraint array_bool_and([aux22307_BOOL,aux22308_BOOL],aux22309_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22310,s_00015],0);
constraint int_lt_reif(s_00010,aux22310,aux22311_BOOL);
constraint int_le_reif(s_00015, s_00010,aux22312_BOOL);
constraint array_bool_and([aux22311_BOOL,aux22312_BOOL],aux22313_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22314,s_00007],0);
constraint int_lt_reif(s_00010,aux22314,aux22315_BOOL);
constraint int_le_reif(s_00007, s_00010,aux22316_BOOL);
constraint array_bool_and([aux22315_BOOL,aux22316_BOOL],aux22317_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22318,s_00001],0);
constraint int_lt_reif(s_00010,aux22318,aux22319_BOOL);
constraint int_le_reif(s_00001, s_00010,aux22320_BOOL);
constraint array_bool_and([aux22319_BOOL,aux22320_BOOL],aux22321_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22322,s_00011],0);
constraint int_lt_reif(s_00010,aux22322,aux22323_BOOL);
constraint int_le_reif(s_00011, s_00010,aux22324_BOOL);
constraint array_bool_and([aux22323_BOOL,aux22324_BOOL],aux22325_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22326,s_00013],0);
constraint int_lt_reif(s_00010,aux22326,aux22327_BOOL);
constraint int_le_reif(s_00013, s_00010,aux22328_BOOL);
constraint array_bool_and([aux22327_BOOL,aux22328_BOOL],aux22329_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22330,s_00016],0);
constraint int_lt_reif(s_00010,aux22330,aux22331_BOOL);
constraint int_le_reif(s_00016, s_00010,aux22332_BOOL);
constraint array_bool_and([aux22331_BOOL,aux22332_BOOL],aux22333_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux22334,s_00010],0);
constraint int_lt_reif(s_00010,aux22334,aux22335_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22336,s_00004],0);
constraint int_lt_reif(s_00011,aux22336,aux22337_BOOL);
constraint int_le_reif(s_00004, s_00011,aux22338_BOOL);
constraint array_bool_and([aux22337_BOOL,aux22338_BOOL],aux22339_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22340,s_00008],0);
constraint int_lt_reif(s_00011,aux22340,aux22341_BOOL);
constraint int_le_reif(s_00008, s_00011,aux22342_BOOL);
constraint array_bool_and([aux22341_BOOL,aux22342_BOOL],aux22343_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22344,s_00005],0);
constraint int_lt_reif(s_00011,aux22344,aux22345_BOOL);
constraint int_le_reif(s_00005, s_00011,aux22346_BOOL);
constraint array_bool_and([aux22345_BOOL,aux22346_BOOL],aux22347_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22348,s_00015],0);
constraint int_lt_reif(s_00011,aux22348,aux22349_BOOL);
constraint int_le_reif(s_00015, s_00011,aux22350_BOOL);
constraint array_bool_and([aux22349_BOOL,aux22350_BOOL],aux22351_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22352,s_00007],0);
constraint int_lt_reif(s_00011,aux22352,aux22353_BOOL);
constraint int_le_reif(s_00007, s_00011,aux22354_BOOL);
constraint array_bool_and([aux22353_BOOL,aux22354_BOOL],aux22355_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22356,s_00001],0);
constraint int_lt_reif(s_00011,aux22356,aux22357_BOOL);
constraint int_le_reif(s_00001, s_00011,aux22358_BOOL);
constraint array_bool_and([aux22357_BOOL,aux22358_BOOL],aux22359_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22360,s_00013],0);
constraint int_lt_reif(s_00011,aux22360,aux22361_BOOL);
constraint int_le_reif(s_00013, s_00011,aux22362_BOOL);
constraint array_bool_and([aux22361_BOOL,aux22362_BOOL],aux22363_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22364,s_00016],0);
constraint int_lt_reif(s_00011,aux22364,aux22365_BOOL);
constraint int_le_reif(s_00016, s_00011,aux22366_BOOL);
constraint array_bool_and([aux22365_BOOL,aux22366_BOOL],aux22367_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux22368,s_00010],0);
constraint int_lt_reif(s_00011,aux22368,aux22369_BOOL);
constraint int_le_reif(s_00010, s_00011,aux22370_BOOL);
constraint array_bool_and([aux22369_BOOL,aux22370_BOOL],aux22371_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22372,s_00011],0);
constraint int_lt_reif(s_00011,aux22372,aux22373_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22374,s_00004],0);
constraint int_lt_reif(s_00013,aux22374,aux22375_BOOL);
constraint int_le_reif(s_00004, s_00013,aux22376_BOOL);
constraint array_bool_and([aux22375_BOOL,aux22376_BOOL],aux22377_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22378,s_00008],0);
constraint int_lt_reif(s_00013,aux22378,aux22379_BOOL);
constraint int_le_reif(s_00008, s_00013,aux22380_BOOL);
constraint array_bool_and([aux22379_BOOL,aux22380_BOOL],aux22381_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22382,s_00005],0);
constraint int_lt_reif(s_00013,aux22382,aux22383_BOOL);
constraint int_le_reif(s_00005, s_00013,aux22384_BOOL);
constraint array_bool_and([aux22383_BOOL,aux22384_BOOL],aux22385_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22386,s_00015],0);
constraint int_lt_reif(s_00013,aux22386,aux22387_BOOL);
constraint int_le_reif(s_00015, s_00013,aux22388_BOOL);
constraint array_bool_and([aux22387_BOOL,aux22388_BOOL],aux22389_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22390,s_00007],0);
constraint int_lt_reif(s_00013,aux22390,aux22391_BOOL);
constraint int_le_reif(s_00007, s_00013,aux22392_BOOL);
constraint array_bool_and([aux22391_BOOL,aux22392_BOOL],aux22393_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22394,s_00001],0);
constraint int_lt_reif(s_00013,aux22394,aux22395_BOOL);
constraint int_le_reif(s_00001, s_00013,aux22396_BOOL);
constraint array_bool_and([aux22395_BOOL,aux22396_BOOL],aux22397_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22398,s_00011],0);
constraint int_lt_reif(s_00013,aux22398,aux22399_BOOL);
constraint int_le_reif(s_00011, s_00013,aux22400_BOOL);
constraint array_bool_and([aux22399_BOOL,aux22400_BOOL],aux22401_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22402,s_00016],0);
constraint int_lt_reif(s_00013,aux22402,aux22403_BOOL);
constraint int_le_reif(s_00016, s_00013,aux22404_BOOL);
constraint array_bool_and([aux22403_BOOL,aux22404_BOOL],aux22405_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux22406,s_00010],0);
constraint int_lt_reif(s_00013,aux22406,aux22407_BOOL);
constraint int_le_reif(s_00010, s_00013,aux22408_BOOL);
constraint array_bool_and([aux22407_BOOL,aux22408_BOOL],aux22409_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22410,s_00013],0);
constraint int_lt_reif(s_00013,aux22410,aux22411_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22412,s_00004],0);
constraint int_lt_reif(s_00015,aux22412,aux22413_BOOL);
constraint int_le_reif(s_00004, s_00015,aux22414_BOOL);
constraint array_bool_and([aux22413_BOOL,aux22414_BOOL],aux22415_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22416,s_00008],0);
constraint int_lt_reif(s_00015,aux22416,aux22417_BOOL);
constraint int_le_reif(s_00008, s_00015,aux22418_BOOL);
constraint array_bool_and([aux22417_BOOL,aux22418_BOOL],aux22419_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22420,s_00005],0);
constraint int_lt_reif(s_00015,aux22420,aux22421_BOOL);
constraint int_le_reif(s_00005, s_00015,aux22422_BOOL);
constraint array_bool_and([aux22421_BOOL,aux22422_BOOL],aux22423_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22424,s_00007],0);
constraint int_lt_reif(s_00015,aux22424,aux22425_BOOL);
constraint int_le_reif(s_00007, s_00015,aux22426_BOOL);
constraint array_bool_and([aux22425_BOOL,aux22426_BOOL],aux22427_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22428,s_00001],0);
constraint int_lt_reif(s_00015,aux22428,aux22429_BOOL);
constraint int_le_reif(s_00001, s_00015,aux22430_BOOL);
constraint array_bool_and([aux22429_BOOL,aux22430_BOOL],aux22431_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22432,s_00011],0);
constraint int_lt_reif(s_00015,aux22432,aux22433_BOOL);
constraint int_le_reif(s_00011, s_00015,aux22434_BOOL);
constraint array_bool_and([aux22433_BOOL,aux22434_BOOL],aux22435_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22436,s_00013],0);
constraint int_lt_reif(s_00015,aux22436,aux22437_BOOL);
constraint int_le_reif(s_00013, s_00015,aux22438_BOOL);
constraint array_bool_and([aux22437_BOOL,aux22438_BOOL],aux22439_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22440,s_00016],0);
constraint int_lt_reif(s_00015,aux22440,aux22441_BOOL);
constraint int_le_reif(s_00016, s_00015,aux22442_BOOL);
constraint array_bool_and([aux22441_BOOL,aux22442_BOOL],aux22443_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux22444,s_00010],0);
constraint int_lt_reif(s_00015,aux22444,aux22445_BOOL);
constraint int_le_reif(s_00010, s_00015,aux22446_BOOL);
constraint array_bool_and([aux22445_BOOL,aux22446_BOOL],aux22447_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22448,s_00015],0);
constraint int_lt_reif(s_00015,aux22448,aux22449_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22450,s_00004],0);
constraint int_lt_reif(s_00016,aux22450,aux22451_BOOL);
constraint int_le_reif(s_00004, s_00016,aux22452_BOOL);
constraint array_bool_and([aux22451_BOOL,aux22452_BOOL],aux22453_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22454,s_00008],0);
constraint int_lt_reif(s_00016,aux22454,aux22455_BOOL);
constraint int_le_reif(s_00008, s_00016,aux22456_BOOL);
constraint array_bool_and([aux22455_BOOL,aux22456_BOOL],aux22457_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22458,s_00005],0);
constraint int_lt_reif(s_00016,aux22458,aux22459_BOOL);
constraint int_le_reif(s_00005, s_00016,aux22460_BOOL);
constraint array_bool_and([aux22459_BOOL,aux22460_BOOL],aux22461_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22462,s_00015],0);
constraint int_lt_reif(s_00016,aux22462,aux22463_BOOL);
constraint int_le_reif(s_00015, s_00016,aux22464_BOOL);
constraint array_bool_and([aux22463_BOOL,aux22464_BOOL],aux22465_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22466,s_00007],0);
constraint int_lt_reif(s_00016,aux22466,aux22467_BOOL);
constraint int_le_reif(s_00007, s_00016,aux22468_BOOL);
constraint array_bool_and([aux22467_BOOL,aux22468_BOOL],aux22469_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22470,s_00001],0);
constraint int_lt_reif(s_00016,aux22470,aux22471_BOOL);
constraint int_le_reif(s_00001, s_00016,aux22472_BOOL);
constraint array_bool_and([aux22471_BOOL,aux22472_BOOL],aux22473_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22474,s_00011],0);
constraint int_lt_reif(s_00016,aux22474,aux22475_BOOL);
constraint int_le_reif(s_00011, s_00016,aux22476_BOOL);
constraint array_bool_and([aux22475_BOOL,aux22476_BOOL],aux22477_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22478,s_00013],0);
constraint int_lt_reif(s_00016,aux22478,aux22479_BOOL);
constraint int_le_reif(s_00013, s_00016,aux22480_BOOL);
constraint array_bool_and([aux22479_BOOL,aux22480_BOOL],aux22481_BOOL);
constraint int_lin_eq([1,-1,1],[5,aux22482,s_00010],0);
constraint int_lt_reif(s_00016,aux22482,aux22483_BOOL);
constraint int_le_reif(s_00010, s_00016,aux22484_BOOL);
constraint array_bool_and([aux22483_BOOL,aux22484_BOOL],aux22485_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22486,s_00016],0);
constraint int_lt_reif(s_00016,aux22486,aux22487_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22488,s_00004],0);
constraint int_lt_reif(s_00001,aux22488,aux22489_BOOL);
constraint int_le_reif(s_00004, s_00001,aux22490_BOOL);
constraint array_bool_and([aux22489_BOOL,aux22490_BOOL],aux22491_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22492,s_00006],0);
constraint int_lt_reif(s_00001,aux22492,aux22493_BOOL);
constraint int_le_reif(s_00006, s_00001,aux22494_BOOL);
constraint array_bool_and([aux22493_BOOL,aux22494_BOOL],aux22495_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22496,s_00008],0);
constraint int_lt_reif(s_00001,aux22496,aux22497_BOOL);
constraint int_le_reif(s_00008, s_00001,aux22498_BOOL);
constraint array_bool_and([aux22497_BOOL,aux22498_BOOL],aux22499_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22500,s_00018],0);
constraint int_lt_reif(s_00001,aux22500,aux22501_BOOL);
constraint int_le_reif(s_00018, s_00001,aux22502_BOOL);
constraint array_bool_and([aux22501_BOOL,aux22502_BOOL],aux22503_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22504,s_00002],0);
constraint int_lt_reif(s_00001,aux22504,aux22505_BOOL);
constraint int_le_reif(s_00002, s_00001,aux22506_BOOL);
constraint array_bool_and([aux22505_BOOL,aux22506_BOOL],aux22507_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22508,s_00014],0);
constraint int_lt_reif(s_00001,aux22508,aux22509_BOOL);
constraint int_le_reif(s_00014, s_00001,aux22510_BOOL);
constraint array_bool_and([aux22509_BOOL,aux22510_BOOL],aux22511_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22512,s_00013],0);
constraint int_lt_reif(s_00001,aux22512,aux22513_BOOL);
constraint int_le_reif(s_00013, s_00001,aux22514_BOOL);
constraint array_bool_and([aux22513_BOOL,aux22514_BOOL],aux22515_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22516,s_00016],0);
constraint int_lt_reif(s_00001,aux22516,aux22517_BOOL);
constraint int_le_reif(s_00016, s_00001,aux22518_BOOL);
constraint array_bool_and([aux22517_BOOL,aux22518_BOOL],aux22519_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22520,s_00020],0);
constraint int_lt_reif(s_00001,aux22520,aux22521_BOOL);
constraint int_le_reif(s_00020, s_00001,aux22522_BOOL);
constraint array_bool_and([aux22521_BOOL,aux22522_BOOL],aux22523_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22524,s_00012],0);
constraint int_lt_reif(s_00001,aux22524,aux22525_BOOL);
constraint int_le_reif(s_00012, s_00001,aux22526_BOOL);
constraint array_bool_and([aux22525_BOOL,aux22526_BOOL],aux22527_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22528,s_00019],0);
constraint int_lt_reif(s_00001,aux22528,aux22529_BOOL);
constraint int_le_reif(s_00019, s_00001,aux22530_BOOL);
constraint array_bool_and([aux22529_BOOL,aux22530_BOOL],aux22531_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22532,s_00001],0);
constraint int_lt_reif(s_00001,aux22532,aux22533_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22534,s_00004],0);
constraint int_lt_reif(s_00002,aux22534,aux22535_BOOL);
constraint int_le_reif(s_00004, s_00002,aux22536_BOOL);
constraint array_bool_and([aux22535_BOOL,aux22536_BOOL],aux22537_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22538,s_00006],0);
constraint int_lt_reif(s_00002,aux22538,aux22539_BOOL);
constraint int_le_reif(s_00006, s_00002,aux22540_BOOL);
constraint array_bool_and([aux22539_BOOL,aux22540_BOOL],aux22541_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22542,s_00008],0);
constraint int_lt_reif(s_00002,aux22542,aux22543_BOOL);
constraint int_le_reif(s_00008, s_00002,aux22544_BOOL);
constraint array_bool_and([aux22543_BOOL,aux22544_BOOL],aux22545_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22546,s_00018],0);
constraint int_lt_reif(s_00002,aux22546,aux22547_BOOL);
constraint int_le_reif(s_00018, s_00002,aux22548_BOOL);
constraint array_bool_and([aux22547_BOOL,aux22548_BOOL],aux22549_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22550,s_00001],0);
constraint int_lt_reif(s_00002,aux22550,aux22551_BOOL);
constraint int_le_reif(s_00001, s_00002,aux22552_BOOL);
constraint array_bool_and([aux22551_BOOL,aux22552_BOOL],aux22553_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22554,s_00014],0);
constraint int_lt_reif(s_00002,aux22554,aux22555_BOOL);
constraint int_le_reif(s_00014, s_00002,aux22556_BOOL);
constraint array_bool_and([aux22555_BOOL,aux22556_BOOL],aux22557_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22558,s_00013],0);
constraint int_lt_reif(s_00002,aux22558,aux22559_BOOL);
constraint int_le_reif(s_00013, s_00002,aux22560_BOOL);
constraint array_bool_and([aux22559_BOOL,aux22560_BOOL],aux22561_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22562,s_00016],0);
constraint int_lt_reif(s_00002,aux22562,aux22563_BOOL);
constraint int_le_reif(s_00016, s_00002,aux22564_BOOL);
constraint array_bool_and([aux22563_BOOL,aux22564_BOOL],aux22565_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22566,s_00020],0);
constraint int_lt_reif(s_00002,aux22566,aux22567_BOOL);
constraint int_le_reif(s_00020, s_00002,aux22568_BOOL);
constraint array_bool_and([aux22567_BOOL,aux22568_BOOL],aux22569_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22570,s_00012],0);
constraint int_lt_reif(s_00002,aux22570,aux22571_BOOL);
constraint int_le_reif(s_00012, s_00002,aux22572_BOOL);
constraint array_bool_and([aux22571_BOOL,aux22572_BOOL],aux22573_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22574,s_00019],0);
constraint int_lt_reif(s_00002,aux22574,aux22575_BOOL);
constraint int_le_reif(s_00019, s_00002,aux22576_BOOL);
constraint array_bool_and([aux22575_BOOL,aux22576_BOOL],aux22577_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22578,s_00002],0);
constraint int_lt_reif(s_00002,aux22578,aux22579_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22580,s_00006],0);
constraint int_lt_reif(s_00004,aux22580,aux22581_BOOL);
constraint int_le_reif(s_00006, s_00004,aux22582_BOOL);
constraint array_bool_and([aux22581_BOOL,aux22582_BOOL],aux22583_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22584,s_00008],0);
constraint int_lt_reif(s_00004,aux22584,aux22585_BOOL);
constraint int_le_reif(s_00008, s_00004,aux22586_BOOL);
constraint array_bool_and([aux22585_BOOL,aux22586_BOOL],aux22587_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22588,s_00018],0);
constraint int_lt_reif(s_00004,aux22588,aux22589_BOOL);
constraint int_le_reif(s_00018, s_00004,aux22590_BOOL);
constraint array_bool_and([aux22589_BOOL,aux22590_BOOL],aux22591_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22592,s_00001],0);
constraint int_lt_reif(s_00004,aux22592,aux22593_BOOL);
constraint int_le_reif(s_00001, s_00004,aux22594_BOOL);
constraint array_bool_and([aux22593_BOOL,aux22594_BOOL],aux22595_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22596,s_00002],0);
constraint int_lt_reif(s_00004,aux22596,aux22597_BOOL);
constraint int_le_reif(s_00002, s_00004,aux22598_BOOL);
constraint array_bool_and([aux22597_BOOL,aux22598_BOOL],aux22599_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22600,s_00014],0);
constraint int_lt_reif(s_00004,aux22600,aux22601_BOOL);
constraint int_le_reif(s_00014, s_00004,aux22602_BOOL);
constraint array_bool_and([aux22601_BOOL,aux22602_BOOL],aux22603_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22604,s_00013],0);
constraint int_lt_reif(s_00004,aux22604,aux22605_BOOL);
constraint int_le_reif(s_00013, s_00004,aux22606_BOOL);
constraint array_bool_and([aux22605_BOOL,aux22606_BOOL],aux22607_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22608,s_00016],0);
constraint int_lt_reif(s_00004,aux22608,aux22609_BOOL);
constraint int_le_reif(s_00016, s_00004,aux22610_BOOL);
constraint array_bool_and([aux22609_BOOL,aux22610_BOOL],aux22611_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22612,s_00020],0);
constraint int_lt_reif(s_00004,aux22612,aux22613_BOOL);
constraint int_le_reif(s_00020, s_00004,aux22614_BOOL);
constraint array_bool_and([aux22613_BOOL,aux22614_BOOL],aux22615_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22616,s_00012],0);
constraint int_lt_reif(s_00004,aux22616,aux22617_BOOL);
constraint int_le_reif(s_00012, s_00004,aux22618_BOOL);
constraint array_bool_and([aux22617_BOOL,aux22618_BOOL],aux22619_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22620,s_00019],0);
constraint int_lt_reif(s_00004,aux22620,aux22621_BOOL);
constraint int_le_reif(s_00019, s_00004,aux22622_BOOL);
constraint array_bool_and([aux22621_BOOL,aux22622_BOOL],aux22623_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22624,s_00004],0);
constraint int_lt_reif(s_00004,aux22624,aux22625_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22626,s_00004],0);
constraint int_lt_reif(s_00006,aux22626,aux22627_BOOL);
constraint int_le_reif(s_00004, s_00006,aux22628_BOOL);
constraint array_bool_and([aux22627_BOOL,aux22628_BOOL],aux22629_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22630,s_00008],0);
constraint int_lt_reif(s_00006,aux22630,aux22631_BOOL);
constraint int_le_reif(s_00008, s_00006,aux22632_BOOL);
constraint array_bool_and([aux22631_BOOL,aux22632_BOOL],aux22633_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22634,s_00018],0);
constraint int_lt_reif(s_00006,aux22634,aux22635_BOOL);
constraint int_le_reif(s_00018, s_00006,aux22636_BOOL);
constraint array_bool_and([aux22635_BOOL,aux22636_BOOL],aux22637_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22638,s_00001],0);
constraint int_lt_reif(s_00006,aux22638,aux22639_BOOL);
constraint int_le_reif(s_00001, s_00006,aux22640_BOOL);
constraint array_bool_and([aux22639_BOOL,aux22640_BOOL],aux22641_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22642,s_00002],0);
constraint int_lt_reif(s_00006,aux22642,aux22643_BOOL);
constraint int_le_reif(s_00002, s_00006,aux22644_BOOL);
constraint array_bool_and([aux22643_BOOL,aux22644_BOOL],aux22645_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22646,s_00014],0);
constraint int_lt_reif(s_00006,aux22646,aux22647_BOOL);
constraint int_le_reif(s_00014, s_00006,aux22648_BOOL);
constraint array_bool_and([aux22647_BOOL,aux22648_BOOL],aux22649_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22650,s_00013],0);
constraint int_lt_reif(s_00006,aux22650,aux22651_BOOL);
constraint int_le_reif(s_00013, s_00006,aux22652_BOOL);
constraint array_bool_and([aux22651_BOOL,aux22652_BOOL],aux22653_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22654,s_00016],0);
constraint int_lt_reif(s_00006,aux22654,aux22655_BOOL);
constraint int_le_reif(s_00016, s_00006,aux22656_BOOL);
constraint array_bool_and([aux22655_BOOL,aux22656_BOOL],aux22657_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22658,s_00020],0);
constraint int_lt_reif(s_00006,aux22658,aux22659_BOOL);
constraint int_le_reif(s_00020, s_00006,aux22660_BOOL);
constraint array_bool_and([aux22659_BOOL,aux22660_BOOL],aux22661_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22662,s_00012],0);
constraint int_lt_reif(s_00006,aux22662,aux22663_BOOL);
constraint int_le_reif(s_00012, s_00006,aux22664_BOOL);
constraint array_bool_and([aux22663_BOOL,aux22664_BOOL],aux22665_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22666,s_00019],0);
constraint int_lt_reif(s_00006,aux22666,aux22667_BOOL);
constraint int_le_reif(s_00019, s_00006,aux22668_BOOL);
constraint array_bool_and([aux22667_BOOL,aux22668_BOOL],aux22669_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22670,s_00006],0);
constraint int_lt_reif(s_00006,aux22670,aux22671_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22672,s_00004],0);
constraint int_lt_reif(s_00008,aux22672,aux22673_BOOL);
constraint int_le_reif(s_00004, s_00008,aux22674_BOOL);
constraint array_bool_and([aux22673_BOOL,aux22674_BOOL],aux22675_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22676,s_00006],0);
constraint int_lt_reif(s_00008,aux22676,aux22677_BOOL);
constraint int_le_reif(s_00006, s_00008,aux22678_BOOL);
constraint array_bool_and([aux22677_BOOL,aux22678_BOOL],aux22679_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22680,s_00018],0);
constraint int_lt_reif(s_00008,aux22680,aux22681_BOOL);
constraint int_le_reif(s_00018, s_00008,aux22682_BOOL);
constraint array_bool_and([aux22681_BOOL,aux22682_BOOL],aux22683_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22684,s_00001],0);
constraint int_lt_reif(s_00008,aux22684,aux22685_BOOL);
constraint int_le_reif(s_00001, s_00008,aux22686_BOOL);
constraint array_bool_and([aux22685_BOOL,aux22686_BOOL],aux22687_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22688,s_00002],0);
constraint int_lt_reif(s_00008,aux22688,aux22689_BOOL);
constraint int_le_reif(s_00002, s_00008,aux22690_BOOL);
constraint array_bool_and([aux22689_BOOL,aux22690_BOOL],aux22691_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22692,s_00014],0);
constraint int_lt_reif(s_00008,aux22692,aux22693_BOOL);
constraint int_le_reif(s_00014, s_00008,aux22694_BOOL);
constraint array_bool_and([aux22693_BOOL,aux22694_BOOL],aux22695_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22696,s_00013],0);
constraint int_lt_reif(s_00008,aux22696,aux22697_BOOL);
constraint int_le_reif(s_00013, s_00008,aux22698_BOOL);
constraint array_bool_and([aux22697_BOOL,aux22698_BOOL],aux22699_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22700,s_00016],0);
constraint int_lt_reif(s_00008,aux22700,aux22701_BOOL);
constraint int_le_reif(s_00016, s_00008,aux22702_BOOL);
constraint array_bool_and([aux22701_BOOL,aux22702_BOOL],aux22703_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22704,s_00020],0);
constraint int_lt_reif(s_00008,aux22704,aux22705_BOOL);
constraint int_le_reif(s_00020, s_00008,aux22706_BOOL);
constraint array_bool_and([aux22705_BOOL,aux22706_BOOL],aux22707_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22708,s_00012],0);
constraint int_lt_reif(s_00008,aux22708,aux22709_BOOL);
constraint int_le_reif(s_00012, s_00008,aux22710_BOOL);
constraint array_bool_and([aux22709_BOOL,aux22710_BOOL],aux22711_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22712,s_00019],0);
constraint int_lt_reif(s_00008,aux22712,aux22713_BOOL);
constraint int_le_reif(s_00019, s_00008,aux22714_BOOL);
constraint array_bool_and([aux22713_BOOL,aux22714_BOOL],aux22715_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22716,s_00008],0);
constraint int_lt_reif(s_00008,aux22716,aux22717_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22718,s_00004],0);
constraint int_lt_reif(s_00012,aux22718,aux22719_BOOL);
constraint int_le_reif(s_00004, s_00012,aux22720_BOOL);
constraint array_bool_and([aux22719_BOOL,aux22720_BOOL],aux22721_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22722,s_00006],0);
constraint int_lt_reif(s_00012,aux22722,aux22723_BOOL);
constraint int_le_reif(s_00006, s_00012,aux22724_BOOL);
constraint array_bool_and([aux22723_BOOL,aux22724_BOOL],aux22725_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22726,s_00008],0);
constraint int_lt_reif(s_00012,aux22726,aux22727_BOOL);
constraint int_le_reif(s_00008, s_00012,aux22728_BOOL);
constraint array_bool_and([aux22727_BOOL,aux22728_BOOL],aux22729_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22730,s_00018],0);
constraint int_lt_reif(s_00012,aux22730,aux22731_BOOL);
constraint int_le_reif(s_00018, s_00012,aux22732_BOOL);
constraint array_bool_and([aux22731_BOOL,aux22732_BOOL],aux22733_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22734,s_00001],0);
constraint int_lt_reif(s_00012,aux22734,aux22735_BOOL);
constraint int_le_reif(s_00001, s_00012,aux22736_BOOL);
constraint array_bool_and([aux22735_BOOL,aux22736_BOOL],aux22737_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22738,s_00002],0);
constraint int_lt_reif(s_00012,aux22738,aux22739_BOOL);
constraint int_le_reif(s_00002, s_00012,aux22740_BOOL);
constraint array_bool_and([aux22739_BOOL,aux22740_BOOL],aux22741_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22742,s_00014],0);
constraint int_lt_reif(s_00012,aux22742,aux22743_BOOL);
constraint int_le_reif(s_00014, s_00012,aux22744_BOOL);
constraint array_bool_and([aux22743_BOOL,aux22744_BOOL],aux22745_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22746,s_00013],0);
constraint int_lt_reif(s_00012,aux22746,aux22747_BOOL);
constraint int_le_reif(s_00013, s_00012,aux22748_BOOL);
constraint array_bool_and([aux22747_BOOL,aux22748_BOOL],aux22749_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22750,s_00016],0);
constraint int_lt_reif(s_00012,aux22750,aux22751_BOOL);
constraint int_le_reif(s_00016, s_00012,aux22752_BOOL);
constraint array_bool_and([aux22751_BOOL,aux22752_BOOL],aux22753_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22754,s_00020],0);
constraint int_lt_reif(s_00012,aux22754,aux22755_BOOL);
constraint int_le_reif(s_00020, s_00012,aux22756_BOOL);
constraint array_bool_and([aux22755_BOOL,aux22756_BOOL],aux22757_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22758,s_00019],0);
constraint int_lt_reif(s_00012,aux22758,aux22759_BOOL);
constraint int_le_reif(s_00019, s_00012,aux22760_BOOL);
constraint array_bool_and([aux22759_BOOL,aux22760_BOOL],aux22761_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22762,s_00012],0);
constraint int_lt_reif(s_00012,aux22762,aux22763_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22764,s_00004],0);
constraint int_lt_reif(s_00013,aux22764,aux22765_BOOL);
constraint int_le_reif(s_00004, s_00013,aux22766_BOOL);
constraint array_bool_and([aux22765_BOOL,aux22766_BOOL],aux22767_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22768,s_00006],0);
constraint int_lt_reif(s_00013,aux22768,aux22769_BOOL);
constraint int_le_reif(s_00006, s_00013,aux22770_BOOL);
constraint array_bool_and([aux22769_BOOL,aux22770_BOOL],aux22771_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22772,s_00008],0);
constraint int_lt_reif(s_00013,aux22772,aux22773_BOOL);
constraint int_le_reif(s_00008, s_00013,aux22774_BOOL);
constraint array_bool_and([aux22773_BOOL,aux22774_BOOL],aux22775_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22776,s_00018],0);
constraint int_lt_reif(s_00013,aux22776,aux22777_BOOL);
constraint int_le_reif(s_00018, s_00013,aux22778_BOOL);
constraint array_bool_and([aux22777_BOOL,aux22778_BOOL],aux22779_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22780,s_00001],0);
constraint int_lt_reif(s_00013,aux22780,aux22781_BOOL);
constraint int_le_reif(s_00001, s_00013,aux22782_BOOL);
constraint array_bool_and([aux22781_BOOL,aux22782_BOOL],aux22783_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22784,s_00002],0);
constraint int_lt_reif(s_00013,aux22784,aux22785_BOOL);
constraint int_le_reif(s_00002, s_00013,aux22786_BOOL);
constraint array_bool_and([aux22785_BOOL,aux22786_BOOL],aux22787_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22788,s_00014],0);
constraint int_lt_reif(s_00013,aux22788,aux22789_BOOL);
constraint int_le_reif(s_00014, s_00013,aux22790_BOOL);
constraint array_bool_and([aux22789_BOOL,aux22790_BOOL],aux22791_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22792,s_00016],0);
constraint int_lt_reif(s_00013,aux22792,aux22793_BOOL);
constraint int_le_reif(s_00016, s_00013,aux22794_BOOL);
constraint array_bool_and([aux22793_BOOL,aux22794_BOOL],aux22795_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22796,s_00020],0);
constraint int_lt_reif(s_00013,aux22796,aux22797_BOOL);
constraint int_le_reif(s_00020, s_00013,aux22798_BOOL);
constraint array_bool_and([aux22797_BOOL,aux22798_BOOL],aux22799_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22800,s_00012],0);
constraint int_lt_reif(s_00013,aux22800,aux22801_BOOL);
constraint int_le_reif(s_00012, s_00013,aux22802_BOOL);
constraint array_bool_and([aux22801_BOOL,aux22802_BOOL],aux22803_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22804,s_00019],0);
constraint int_lt_reif(s_00013,aux22804,aux22805_BOOL);
constraint int_le_reif(s_00019, s_00013,aux22806_BOOL);
constraint array_bool_and([aux22805_BOOL,aux22806_BOOL],aux22807_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22808,s_00013],0);
constraint int_lt_reif(s_00013,aux22808,aux22809_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22810,s_00004],0);
constraint int_lt_reif(s_00014,aux22810,aux22811_BOOL);
constraint int_le_reif(s_00004, s_00014,aux22812_BOOL);
constraint array_bool_and([aux22811_BOOL,aux22812_BOOL],aux22813_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22814,s_00006],0);
constraint int_lt_reif(s_00014,aux22814,aux22815_BOOL);
constraint int_le_reif(s_00006, s_00014,aux22816_BOOL);
constraint array_bool_and([aux22815_BOOL,aux22816_BOOL],aux22817_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22818,s_00008],0);
constraint int_lt_reif(s_00014,aux22818,aux22819_BOOL);
constraint int_le_reif(s_00008, s_00014,aux22820_BOOL);
constraint array_bool_and([aux22819_BOOL,aux22820_BOOL],aux22821_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22822,s_00018],0);
constraint int_lt_reif(s_00014,aux22822,aux22823_BOOL);
constraint int_le_reif(s_00018, s_00014,aux22824_BOOL);
constraint array_bool_and([aux22823_BOOL,aux22824_BOOL],aux22825_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22826,s_00001],0);
constraint int_lt_reif(s_00014,aux22826,aux22827_BOOL);
constraint int_le_reif(s_00001, s_00014,aux22828_BOOL);
constraint array_bool_and([aux22827_BOOL,aux22828_BOOL],aux22829_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22830,s_00002],0);
constraint int_lt_reif(s_00014,aux22830,aux22831_BOOL);
constraint int_le_reif(s_00002, s_00014,aux22832_BOOL);
constraint array_bool_and([aux22831_BOOL,aux22832_BOOL],aux22833_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22834,s_00013],0);
constraint int_lt_reif(s_00014,aux22834,aux22835_BOOL);
constraint int_le_reif(s_00013, s_00014,aux22836_BOOL);
constraint array_bool_and([aux22835_BOOL,aux22836_BOOL],aux22837_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22838,s_00016],0);
constraint int_lt_reif(s_00014,aux22838,aux22839_BOOL);
constraint int_le_reif(s_00016, s_00014,aux22840_BOOL);
constraint array_bool_and([aux22839_BOOL,aux22840_BOOL],aux22841_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22842,s_00020],0);
constraint int_lt_reif(s_00014,aux22842,aux22843_BOOL);
constraint int_le_reif(s_00020, s_00014,aux22844_BOOL);
constraint array_bool_and([aux22843_BOOL,aux22844_BOOL],aux22845_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22846,s_00012],0);
constraint int_lt_reif(s_00014,aux22846,aux22847_BOOL);
constraint int_le_reif(s_00012, s_00014,aux22848_BOOL);
constraint array_bool_and([aux22847_BOOL,aux22848_BOOL],aux22849_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22850,s_00019],0);
constraint int_lt_reif(s_00014,aux22850,aux22851_BOOL);
constraint int_le_reif(s_00019, s_00014,aux22852_BOOL);
constraint array_bool_and([aux22851_BOOL,aux22852_BOOL],aux22853_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22854,s_00014],0);
constraint int_lt_reif(s_00014,aux22854,aux22855_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22856,s_00004],0);
constraint int_lt_reif(s_00016,aux22856,aux22857_BOOL);
constraint int_le_reif(s_00004, s_00016,aux22858_BOOL);
constraint array_bool_and([aux22857_BOOL,aux22858_BOOL],aux22859_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22860,s_00006],0);
constraint int_lt_reif(s_00016,aux22860,aux22861_BOOL);
constraint int_le_reif(s_00006, s_00016,aux22862_BOOL);
constraint array_bool_and([aux22861_BOOL,aux22862_BOOL],aux22863_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22864,s_00008],0);
constraint int_lt_reif(s_00016,aux22864,aux22865_BOOL);
constraint int_le_reif(s_00008, s_00016,aux22866_BOOL);
constraint array_bool_and([aux22865_BOOL,aux22866_BOOL],aux22867_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22868,s_00018],0);
constraint int_lt_reif(s_00016,aux22868,aux22869_BOOL);
constraint int_le_reif(s_00018, s_00016,aux22870_BOOL);
constraint array_bool_and([aux22869_BOOL,aux22870_BOOL],aux22871_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22872,s_00001],0);
constraint int_lt_reif(s_00016,aux22872,aux22873_BOOL);
constraint int_le_reif(s_00001, s_00016,aux22874_BOOL);
constraint array_bool_and([aux22873_BOOL,aux22874_BOOL],aux22875_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22876,s_00002],0);
constraint int_lt_reif(s_00016,aux22876,aux22877_BOOL);
constraint int_le_reif(s_00002, s_00016,aux22878_BOOL);
constraint array_bool_and([aux22877_BOOL,aux22878_BOOL],aux22879_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22880,s_00014],0);
constraint int_lt_reif(s_00016,aux22880,aux22881_BOOL);
constraint int_le_reif(s_00014, s_00016,aux22882_BOOL);
constraint array_bool_and([aux22881_BOOL,aux22882_BOOL],aux22883_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22884,s_00013],0);
constraint int_lt_reif(s_00016,aux22884,aux22885_BOOL);
constraint int_le_reif(s_00013, s_00016,aux22886_BOOL);
constraint array_bool_and([aux22885_BOOL,aux22886_BOOL],aux22887_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22888,s_00020],0);
constraint int_lt_reif(s_00016,aux22888,aux22889_BOOL);
constraint int_le_reif(s_00020, s_00016,aux22890_BOOL);
constraint array_bool_and([aux22889_BOOL,aux22890_BOOL],aux22891_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22892,s_00012],0);
constraint int_lt_reif(s_00016,aux22892,aux22893_BOOL);
constraint int_le_reif(s_00012, s_00016,aux22894_BOOL);
constraint array_bool_and([aux22893_BOOL,aux22894_BOOL],aux22895_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22896,s_00019],0);
constraint int_lt_reif(s_00016,aux22896,aux22897_BOOL);
constraint int_le_reif(s_00019, s_00016,aux22898_BOOL);
constraint array_bool_and([aux22897_BOOL,aux22898_BOOL],aux22899_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22900,s_00016],0);
constraint int_lt_reif(s_00016,aux22900,aux22901_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22902,s_00004],0);
constraint int_lt_reif(s_00018,aux22902,aux22903_BOOL);
constraint int_le_reif(s_00004, s_00018,aux22904_BOOL);
constraint array_bool_and([aux22903_BOOL,aux22904_BOOL],aux22905_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22906,s_00006],0);
constraint int_lt_reif(s_00018,aux22906,aux22907_BOOL);
constraint int_le_reif(s_00006, s_00018,aux22908_BOOL);
constraint array_bool_and([aux22907_BOOL,aux22908_BOOL],aux22909_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22910,s_00008],0);
constraint int_lt_reif(s_00018,aux22910,aux22911_BOOL);
constraint int_le_reif(s_00008, s_00018,aux22912_BOOL);
constraint array_bool_and([aux22911_BOOL,aux22912_BOOL],aux22913_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22914,s_00001],0);
constraint int_lt_reif(s_00018,aux22914,aux22915_BOOL);
constraint int_le_reif(s_00001, s_00018,aux22916_BOOL);
constraint array_bool_and([aux22915_BOOL,aux22916_BOOL],aux22917_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22918,s_00002],0);
constraint int_lt_reif(s_00018,aux22918,aux22919_BOOL);
constraint int_le_reif(s_00002, s_00018,aux22920_BOOL);
constraint array_bool_and([aux22919_BOOL,aux22920_BOOL],aux22921_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22922,s_00014],0);
constraint int_lt_reif(s_00018,aux22922,aux22923_BOOL);
constraint int_le_reif(s_00014, s_00018,aux22924_BOOL);
constraint array_bool_and([aux22923_BOOL,aux22924_BOOL],aux22925_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22926,s_00013],0);
constraint int_lt_reif(s_00018,aux22926,aux22927_BOOL);
constraint int_le_reif(s_00013, s_00018,aux22928_BOOL);
constraint array_bool_and([aux22927_BOOL,aux22928_BOOL],aux22929_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22930,s_00016],0);
constraint int_lt_reif(s_00018,aux22930,aux22931_BOOL);
constraint int_le_reif(s_00016, s_00018,aux22932_BOOL);
constraint array_bool_and([aux22931_BOOL,aux22932_BOOL],aux22933_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22934,s_00020],0);
constraint int_lt_reif(s_00018,aux22934,aux22935_BOOL);
constraint int_le_reif(s_00020, s_00018,aux22936_BOOL);
constraint array_bool_and([aux22935_BOOL,aux22936_BOOL],aux22937_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22938,s_00012],0);
constraint int_lt_reif(s_00018,aux22938,aux22939_BOOL);
constraint int_le_reif(s_00012, s_00018,aux22940_BOOL);
constraint array_bool_and([aux22939_BOOL,aux22940_BOOL],aux22941_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22942,s_00019],0);
constraint int_lt_reif(s_00018,aux22942,aux22943_BOOL);
constraint int_le_reif(s_00019, s_00018,aux22944_BOOL);
constraint array_bool_and([aux22943_BOOL,aux22944_BOOL],aux22945_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22946,s_00018],0);
constraint int_lt_reif(s_00018,aux22946,aux22947_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22948,s_00004],0);
constraint int_lt_reif(s_00019,aux22948,aux22949_BOOL);
constraint int_le_reif(s_00004, s_00019,aux22950_BOOL);
constraint array_bool_and([aux22949_BOOL,aux22950_BOOL],aux22951_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22952,s_00006],0);
constraint int_lt_reif(s_00019,aux22952,aux22953_BOOL);
constraint int_le_reif(s_00006, s_00019,aux22954_BOOL);
constraint array_bool_and([aux22953_BOOL,aux22954_BOOL],aux22955_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22956,s_00008],0);
constraint int_lt_reif(s_00019,aux22956,aux22957_BOOL);
constraint int_le_reif(s_00008, s_00019,aux22958_BOOL);
constraint array_bool_and([aux22957_BOOL,aux22958_BOOL],aux22959_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22960,s_00018],0);
constraint int_lt_reif(s_00019,aux22960,aux22961_BOOL);
constraint int_le_reif(s_00018, s_00019,aux22962_BOOL);
constraint array_bool_and([aux22961_BOOL,aux22962_BOOL],aux22963_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22964,s_00001],0);
constraint int_lt_reif(s_00019,aux22964,aux22965_BOOL);
constraint int_le_reif(s_00001, s_00019,aux22966_BOOL);
constraint array_bool_and([aux22965_BOOL,aux22966_BOOL],aux22967_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22968,s_00002],0);
constraint int_lt_reif(s_00019,aux22968,aux22969_BOOL);
constraint int_le_reif(s_00002, s_00019,aux22970_BOOL);
constraint array_bool_and([aux22969_BOOL,aux22970_BOOL],aux22971_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22972,s_00014],0);
constraint int_lt_reif(s_00019,aux22972,aux22973_BOOL);
constraint int_le_reif(s_00014, s_00019,aux22974_BOOL);
constraint array_bool_and([aux22973_BOOL,aux22974_BOOL],aux22975_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22976,s_00013],0);
constraint int_lt_reif(s_00019,aux22976,aux22977_BOOL);
constraint int_le_reif(s_00013, s_00019,aux22978_BOOL);
constraint array_bool_and([aux22977_BOOL,aux22978_BOOL],aux22979_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22980,s_00016],0);
constraint int_lt_reif(s_00019,aux22980,aux22981_BOOL);
constraint int_le_reif(s_00016, s_00019,aux22982_BOOL);
constraint array_bool_and([aux22981_BOOL,aux22982_BOOL],aux22983_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22984,s_00020],0);
constraint int_lt_reif(s_00019,aux22984,aux22985_BOOL);
constraint int_le_reif(s_00020, s_00019,aux22986_BOOL);
constraint array_bool_and([aux22985_BOOL,aux22986_BOOL],aux22987_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22988,s_00012],0);
constraint int_lt_reif(s_00019,aux22988,aux22989_BOOL);
constraint int_le_reif(s_00012, s_00019,aux22990_BOOL);
constraint array_bool_and([aux22989_BOOL,aux22990_BOOL],aux22991_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22992,s_00019],0);
constraint int_lt_reif(s_00019,aux22992,aux22993_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22994,s_00004],0);
constraint int_lt_reif(s_00020,aux22994,aux22995_BOOL);
constraint int_le_reif(s_00004, s_00020,aux22996_BOOL);
constraint array_bool_and([aux22995_BOOL,aux22996_BOOL],aux22997_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22998,s_00006],0);
constraint int_lt_reif(s_00020,aux22998,aux22999_BOOL);
constraint int_le_reif(s_00006, s_00020,aux23000_BOOL);
constraint array_bool_and([aux22999_BOOL,aux23000_BOOL],aux23001_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux23002,s_00008],0);
constraint int_lt_reif(s_00020,aux23002,aux23003_BOOL);
constraint int_le_reif(s_00008, s_00020,aux23004_BOOL);
constraint array_bool_and([aux23003_BOOL,aux23004_BOOL],aux23005_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux23006,s_00018],0);
constraint int_lt_reif(s_00020,aux23006,aux23007_BOOL);
constraint int_le_reif(s_00018, s_00020,aux23008_BOOL);
constraint array_bool_and([aux23007_BOOL,aux23008_BOOL],aux23009_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux23010,s_00001],0);
constraint int_lt_reif(s_00020,aux23010,aux23011_BOOL);
constraint int_le_reif(s_00001, s_00020,aux23012_BOOL);
constraint array_bool_and([aux23011_BOOL,aux23012_BOOL],aux23013_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux23014,s_00002],0);
constraint int_lt_reif(s_00020,aux23014,aux23015_BOOL);
constraint int_le_reif(s_00002, s_00020,aux23016_BOOL);
constraint array_bool_and([aux23015_BOOL,aux23016_BOOL],aux23017_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux23018,s_00014],0);
constraint int_lt_reif(s_00020,aux23018,aux23019_BOOL);
constraint int_le_reif(s_00014, s_00020,aux23020_BOOL);
constraint array_bool_and([aux23019_BOOL,aux23020_BOOL],aux23021_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux23022,s_00013],0);
constraint int_lt_reif(s_00020,aux23022,aux23023_BOOL);
constraint int_le_reif(s_00013, s_00020,aux23024_BOOL);
constraint array_bool_and([aux23023_BOOL,aux23024_BOOL],aux23025_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux23026,s_00016],0);
constraint int_lt_reif(s_00020,aux23026,aux23027_BOOL);
constraint int_le_reif(s_00016, s_00020,aux23028_BOOL);
constraint array_bool_and([aux23027_BOOL,aux23028_BOOL],aux23029_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux23030,s_00012],0);
constraint int_lt_reif(s_00020,aux23030,aux23031_BOOL);
constraint int_le_reif(s_00012, s_00020,aux23032_BOOL);
constraint array_bool_and([aux23031_BOOL,aux23032_BOOL],aux23033_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux23034,s_00019],0);
constraint int_lt_reif(s_00020,aux23034,aux23035_BOOL);
constraint int_le_reif(s_00019, s_00020,aux23036_BOOL);
constraint array_bool_and([aux23035_BOOL,aux23036_BOOL],aux23037_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux23038,s_00020],0);
constraint int_lt_reif(s_00020,aux23038,aux23039_BOOL);
constraint int_lin_le([1,1,-1],[5,s_00010,s_00011],0);
constraint int_lin_le([1,1,-1],[4,s_00012,s_00017],0);
constraint int_lin_le([1,1,-1],[3,s_00013,s_00018],0);
constraint int_lin_le([1,1,-1],[3,s_00016,s_00019],0);
constraint int_lin_le([1,1,-1],[4,s_00017,s_00019],0);
constraint int_lin_le([1,1,-1],[4,s_00001,s_00006],0);
constraint int_lin_le([1,1,-1],[4,s_00001,s_00008],0);
constraint int_lin_le([1,1,-1],[4,s_00001,s_00009],0);
constraint int_lin_le([1,1,-1],[4,s_00002,s_00005],0);
constraint int_lin_le([1,1,-1],[4,s_00002,s_00007],0);
constraint int_lin_le([1,1,-1],[4,s_00002,s_00014],0);
constraint int_lin_le([1,1,-1],[3,s_00003,s_00004],0);
constraint int_lin_le([1,1,-1],[3,s_00003,s_00014],0);
constraint int_lin_le([1,1,-1],[2,s_00004,s_00005],0);
constraint int_lin_le([1,1,-1],[2,s_00004,s_00007],0);
constraint int_lin_le([1,1,-1],[2,s_00004,s_00016],0);
constraint int_lin_le([1,1,-1],[3,s_00005,s_00012],0);
constraint int_lin_le([1,1,-1],[3,s_00005,s_00013],0);
constraint int_lin_le([1,1,-1],[2,s_00006,s_00018],0);
constraint int_lin_le([1,1,-1],[2,s_00006,s_00020],0);
constraint int_lin_le([1,1,-1],[3,s_00007,s_00008],0);
constraint int_lin_le([1,1,-1],[3,s_00007,s_00017],0);
constraint int_lin_le([1,1,-1],[3,s_00007,s_00020],0);
constraint int_lin_le([1,1,-1],[2,s_00008,s_00013],0);
constraint int_lin_le([1,1,-1],[2,s_00008,s_00019],0);
constraint int_lin_le([1,1,-1],[2,s_00009,s_00010],0);
constraint int_lin_le([1,1,-1],[2,s_00009,s_00013],0);
constraint int_lin_le([1,1,-1],[3,s_00011,s_00012],0);
constraint int_lin_le([1,1,-1],[3,s_00011,s_00014],0);
constraint int_lin_le([1,1,-1],[2,s_00014,s_00015],0);
constraint int_lin_le([1,1,-1],[2,s_00014,s_00018],0);
constraint int_lin_le([1,1,-1],[1,s_00015,s_00016],0);
constraint int_lin_le([1,1,-1],[1,s_00015,s_00017],0);
constraint int_lin_le([1,1,-1],[1,s_00015,s_00020],0);
constraint int_eq(1,TWorkers_00001_00001_INTEGER);
constraint int_eq(1,TWorkers_00002_00001_INTEGER);
constraint int_ne(TWorkers_00003_00001_INTEGER,1);
constraint int_eq(TWorkers_00004_00001_INTEGER,1);
constraint int_eq(TWorkers_00005_00001_INTEGER,1);
constraint int_eq(1,TWorkers_00006_00001_INTEGER);
constraint int_eq(1,TWorkers_00007_00001_INTEGER);
constraint int_eq(TWorkers_00008_00001_INTEGER,1);
constraint int_ne(TWorkers_00009_00001_INTEGER,1);
constraint int_eq(1,TWorkers_00001_00002_INTEGER);
constraint int_eq(1,TWorkers_00002_00002_INTEGER);
constraint int_eq(TWorkers_00003_00002_INTEGER,1);
constraint int_eq(TWorkers_00004_00002_INTEGER,1);
constraint int_ne(TWorkers_00005_00002_INTEGER,1);
constraint int_eq(1,TWorkers_00006_00002_INTEGER);
constraint int_eq(1,TWorkers_00007_00002_INTEGER);
constraint int_eq(TWorkers_00008_00002_INTEGER,1);
constraint int_eq(TWorkers_00009_00002_INTEGER,1);
constraint int_ne(1,TWorkers_00001_00003_INTEGER);
constraint int_ne(1,TWorkers_00002_00003_INTEGER);
constraint int_eq(TWorkers_00003_00003_INTEGER,1);
constraint int_ne(TWorkers_00004_00003_INTEGER,1);
constraint int_ne(TWorkers_00005_00003_INTEGER,1);
constraint int_eq(1,TWorkers_00006_00003_INTEGER);
constraint int_eq(1,TWorkers_00007_00003_INTEGER);
constraint int_ne(TWorkers_00008_00003_INTEGER,1);
constraint int_eq(TWorkers_00009_00003_INTEGER,1);
constraint int_eq(1,TWorkers_00001_00004_INTEGER);
constraint int_eq(1,TWorkers_00002_00004_INTEGER);
constraint int_ne(TWorkers_00003_00004_INTEGER,1);
constraint int_eq(TWorkers_00004_00004_INTEGER,1);
constraint int_eq(TWorkers_00005_00004_INTEGER,1);
constraint int_eq(1,TWorkers_00006_00004_INTEGER);
constraint int_eq(1,TWorkers_00007_00004_INTEGER);
constraint int_eq(TWorkers_00008_00004_INTEGER,1);
constraint int_eq(TWorkers_00009_00004_INTEGER,1);
constraint int_eq(1,TWorkers_00001_00005_INTEGER);
constraint int_ne(1,TWorkers_00002_00005_INTEGER);
constraint int_eq(TWorkers_00003_00005_INTEGER,1);
constraint int_eq(TWorkers_00004_00005_INTEGER,1);
constraint int_eq(TWorkers_00005_00005_INTEGER,1);
constraint int_eq(1,TWorkers_00006_00005_INTEGER);
constraint int_eq(1,TWorkers_00007_00005_INTEGER);
constraint int_ne(TWorkers_00008_00005_INTEGER,1);
constraint int_eq(TWorkers_00009_00005_INTEGER,1);
constraint int_ne(1,TWorkers_00001_00006_INTEGER);
constraint int_eq(1,TWorkers_00002_00006_INTEGER);
constraint int_ne(TWorkers_00003_00006_INTEGER,1);
constraint int_eq(TWorkers_00004_00006_INTEGER,1);
constraint int_ne(TWorkers_00005_00006_INTEGER,1);
constraint int_eq(1,TWorkers_00006_00006_INTEGER);
constraint int_eq(1,TWorkers_00007_00006_INTEGER);
constraint int_eq(TWorkers_00008_00006_INTEGER,1);
constraint int_ne(TWorkers_00009_00006_INTEGER,1);
constraint int_eq(1,TWorkers_00001_00007_INTEGER);
constraint int_ne(1,TWorkers_00002_00007_INTEGER);
constraint int_ne(TWorkers_00003_00007_INTEGER,1);
constraint int_eq(TWorkers_00004_00007_INTEGER,1);
constraint int_eq(TWorkers_00005_00007_INTEGER,1);
constraint int_ne(1,TWorkers_00006_00007_INTEGER);
constraint int_ne(1,TWorkers_00007_00007_INTEGER);
constraint int_ne(TWorkers_00008_00007_INTEGER,1);
constraint int_ne(TWorkers_00009_00007_INTEGER,1);
constraint int_eq(1,TWorkers_00001_00008_INTEGER);
constraint int_eq(1,TWorkers_00002_00008_INTEGER);
constraint int_eq(TWorkers_00003_00008_INTEGER,1);
constraint int_eq(TWorkers_00004_00008_INTEGER,1);
constraint int_eq(TWorkers_00005_00008_INTEGER,1);
constraint int_eq(1,TWorkers_00006_00008_INTEGER);
constraint int_eq(1,TWorkers_00007_00008_INTEGER);
constraint int_eq(TWorkers_00008_00008_INTEGER,1);
constraint int_eq(TWorkers_00009_00008_INTEGER,1);
constraint int_eq(1,TWorkers_00001_00009_INTEGER);
constraint int_ne(1,TWorkers_00002_00009_INTEGER);
constraint int_ne(TWorkers_00003_00009_INTEGER,1);
constraint int_eq(TWorkers_00004_00009_INTEGER,1);
constraint int_ne(TWorkers_00005_00009_INTEGER,1);
constraint int_eq(1,TWorkers_00006_00009_INTEGER);
constraint int_eq(1,TWorkers_00007_00009_INTEGER);
constraint int_ne(TWorkers_00008_00009_INTEGER,1);
constraint int_eq(TWorkers_00009_00009_INTEGER,1);
constraint int_eq(1,TWorkers_00001_00010_INTEGER);
constraint int_ne(1,TWorkers_00002_00010_INTEGER);
constraint int_ne(TWorkers_00003_00010_INTEGER,1);
constraint int_eq(TWorkers_00004_00010_INTEGER,1);
constraint int_eq(TWorkers_00005_00010_INTEGER,1);
constraint int_ne(1,TWorkers_00006_00010_INTEGER);
constraint int_ne(1,TWorkers_00007_00010_INTEGER);
constraint int_ne(TWorkers_00008_00010_INTEGER,1);
constraint int_ne(TWorkers_00009_00010_INTEGER,1);
constraint int_eq(1,TWorkers_00001_00011_INTEGER);
constraint int_ne(1,TWorkers_00002_00011_INTEGER);
constraint int_ne(TWorkers_00003_00011_INTEGER,1);
constraint int_eq(TWorkers_00004_00011_INTEGER,1);
constraint int_eq(TWorkers_00005_00011_INTEGER,1);
constraint int_eq(1,TWorkers_00006_00011_INTEGER);
constraint int_eq(1,TWorkers_00007_00011_INTEGER);
constraint int_ne(TWorkers_00008_00011_INTEGER,1);
constraint int_eq(TWorkers_00009_00011_INTEGER,1);
constraint int_ne(1,TWorkers_00001_00012_INTEGER);
constraint int_eq(1,TWorkers_00002_00012_INTEGER);
constraint int_ne(TWorkers_00003_00012_INTEGER,1);
constraint int_eq(TWorkers_00004_00012_INTEGER,1);
constraint int_ne(TWorkers_00005_00012_INTEGER,1);
constraint int_eq(1,TWorkers_00006_00012_INTEGER);
constraint int_eq(1,TWorkers_00007_00012_INTEGER);
constraint int_eq(TWorkers_00008_00012_INTEGER,1);
constraint int_ne(TWorkers_00009_00012_INTEGER,1);
constraint int_eq(1,TWorkers_00001_00013_INTEGER);
constraint int_eq(1,TWorkers_00002_00013_INTEGER);
constraint int_ne(TWorkers_00003_00013_INTEGER,1);
constraint int_eq(TWorkers_00004_00013_INTEGER,1);
constraint int_eq(TWorkers_00005_00013_INTEGER,1);
constraint int_eq(1,TWorkers_00006_00013_INTEGER);
constraint int_eq(1,TWorkers_00007_00013_INTEGER);
constraint int_eq(TWorkers_00008_00013_INTEGER,1);
constraint int_ne(TWorkers_00009_00013_INTEGER,1);
constraint int_ne(1,TWorkers_00001_00014_INTEGER);
constraint int_eq(1,TWorkers_00002_00014_INTEGER);
constraint int_ne(TWorkers_00003_00014_INTEGER,1);
constraint int_eq(TWorkers_00004_00014_INTEGER,1);
constraint int_ne(TWorkers_00005_00014_INTEGER,1);
constraint int_eq(1,TWorkers_00006_00014_INTEGER);
constraint int_eq(1,TWorkers_00007_00014_INTEGER);
constraint int_eq(TWorkers_00008_00014_INTEGER,1);
constraint int_eq(TWorkers_00009_00014_INTEGER,1);
constraint int_eq(1,TWorkers_00001_00015_INTEGER);
constraint int_ne(1,TWorkers_00002_00015_INTEGER);
constraint int_ne(TWorkers_00003_00015_INTEGER,1);
constraint int_eq(TWorkers_00004_00015_INTEGER,1);
constraint int_eq(TWorkers_00005_00015_INTEGER,1);
constraint int_ne(1,TWorkers_00006_00015_INTEGER);
constraint int_ne(1,TWorkers_00007_00015_INTEGER);
constraint int_ne(TWorkers_00008_00015_INTEGER,1);
constraint int_ne(TWorkers_00009_00015_INTEGER,1);
constraint int_eq(1,TWorkers_00001_00016_INTEGER);
constraint int_eq(1,TWorkers_00002_00016_INTEGER);
constraint int_ne(TWorkers_00003_00016_INTEGER,1);
constraint int_eq(TWorkers_00004_00016_INTEGER,1);
constraint int_eq(TWorkers_00005_00016_INTEGER,1);
constraint int_eq(1,TWorkers_00006_00016_INTEGER);
constraint int_eq(1,TWorkers_00007_00016_INTEGER);
constraint int_eq(TWorkers_00008_00016_INTEGER,1);
constraint int_ne(TWorkers_00009_00016_INTEGER,1);
constraint int_ne(1,TWorkers_00001_00017_INTEGER);
constraint int_ne(1,TWorkers_00002_00017_INTEGER);
constraint int_ne(TWorkers_00003_00017_INTEGER,1);
constraint int_eq(TWorkers_00004_00017_INTEGER,1);
constraint int_ne(TWorkers_00005_00017_INTEGER,1);
constraint int_eq(1,TWorkers_00006_00017_INTEGER);
constraint int_eq(1,TWorkers_00007_00017_INTEGER);
constraint int_ne(TWorkers_00008_00017_INTEGER,1);
constraint int_eq(TWorkers_00009_00017_INTEGER,1);
constraint int_ne(1,TWorkers_00001_00018_INTEGER);
constraint int_eq(1,TWorkers_00002_00018_INTEGER);
constraint int_ne(TWorkers_00003_00018_INTEGER,1);
constraint int_eq(TWorkers_00004_00018_INTEGER,1);
constraint int_ne(TWorkers_00005_00018_INTEGER,1);
constraint int_eq(1,TWorkers_00006_00018_INTEGER);
constraint int_eq(1,TWorkers_00007_00018_INTEGER);
constraint int_eq(TWorkers_00008_00018_INTEGER,1);
constraint int_ne(TWorkers_00009_00018_INTEGER,1);
constraint int_ne(1,TWorkers_00001_00019_INTEGER);
constraint int_eq(1,TWorkers_00002_00019_INTEGER);
constraint int_ne(TWorkers_00003_00019_INTEGER,1);
constraint int_eq(TWorkers_00004_00019_INTEGER,1);
constraint int_ne(TWorkers_00005_00019_INTEGER,1);
constraint int_eq(1,TWorkers_00006_00019_INTEGER);
constraint int_eq(1,TWorkers_00007_00019_INTEGER);
constraint int_eq(TWorkers_00008_00019_INTEGER,1);
constraint int_ne(TWorkers_00009_00019_INTEGER,1);
constraint int_ne(1,TWorkers_00001_00020_INTEGER);
constraint int_eq(1,TWorkers_00002_00020_INTEGER);
constraint int_eq(TWorkers_00003_00020_INTEGER,1);
constraint int_eq(TWorkers_00004_00020_INTEGER,1);
constraint int_ne(TWorkers_00005_00020_INTEGER,1);
constraint int_eq(1,TWorkers_00006_00020_INTEGER);
constraint int_eq(1,TWorkers_00007_00020_INTEGER);
constraint int_eq(TWorkers_00008_00020_INTEGER,1);
constraint int_eq(TWorkers_00009_00020_INTEGER,1);
constraint int_lin_le([-1,-1,-1,-1,1],[aux11_INTEGER,aux13_INTEGER,aux15_INTEGER,aux17_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,1],[aux19_INTEGER,aux21_INTEGER,aux23_INTEGER,aux25_INTEGER,aux27_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux29_INTEGER,aux31_INTEGER,aux33_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux35_INTEGER,aux37_INTEGER,aux39_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,-1,-1,1],[aux41_INTEGER,aux43_INTEGER,aux45_INTEGER,aux47_INTEGER,aux49_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux51_INTEGER,aux53_INTEGER,aux55_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,-1,1],[aux57_INTEGER,aux59_INTEGER,aux61_INTEGER,aux63_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,-1,-1,1],[aux65_INTEGER,aux67_INTEGER,aux69_INTEGER,aux71_INTEGER,aux73_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,-1,-1,1],[aux75_INTEGER,aux77_INTEGER,aux79_INTEGER,aux81_INTEGER,aux83_INTEGER,1],0);
constraint int_le(1, aux85_INTEGER);
constraint int_lin_le([-1,-1,-1,1],[aux87_INTEGER,aux89_INTEGER,aux91_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,-1,-1,1],[aux101_INTEGER,aux93_INTEGER,aux95_INTEGER,aux97_INTEGER,aux99_INTEGER,1],0);
constraint int_le(1, aux103_INTEGER);
constraint int_lin_le([-1,-1,-1,-1,1],[aux105_INTEGER,aux107_INTEGER,aux109_INTEGER,aux111_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,-1,-1,1],[aux113_INTEGER,aux115_INTEGER,aux117_INTEGER,aux119_INTEGER,aux121_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,-1,1],[aux123_INTEGER,aux125_INTEGER,aux127_INTEGER,aux129_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux131_INTEGER,aux133_INTEGER,aux135_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,-1,-1,1],[aux137_INTEGER,aux139_INTEGER,aux141_INTEGER,aux143_INTEGER,aux145_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,-1,1],[aux147_INTEGER,aux149_INTEGER,aux151_INTEGER,aux153_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux155_INTEGER,aux157_INTEGER,aux159_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,1],[aux161_INTEGER,aux163_INTEGER,aux165_INTEGER,aux167_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux169_INTEGER,aux171_INTEGER,aux173_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,-1,-1,1],[aux175_INTEGER,aux177_INTEGER,aux179_INTEGER,aux181_INTEGER,aux183_INTEGER,1],0);
constraint int_le(1, aux185_INTEGER);
constraint int_lin_le([-1,-1,-1,-1,1],[aux187_INTEGER,aux189_INTEGER,aux191_INTEGER,aux193_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,1],[aux195_INTEGER,aux197_INTEGER,aux199_INTEGER,aux201_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux203_INTEGER,aux205_INTEGER,aux207_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux209_INTEGER,aux211_INTEGER,aux213_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,-1,-1,1],[aux215_INTEGER,aux217_INTEGER,aux219_INTEGER,aux221_INTEGER,aux223_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,-1,1],[aux225_INTEGER,aux227_INTEGER,aux229_INTEGER,aux231_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,1],[aux233_INTEGER,aux235_INTEGER,aux237_INTEGER,aux239_INTEGER,aux241_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux243_INTEGER,aux245_INTEGER,aux247_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,-1,-1,1],[aux249_INTEGER,aux251_INTEGER,aux253_INTEGER,aux255_INTEGER,aux257_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,1],[aux259_INTEGER,aux261_INTEGER,aux263_INTEGER,aux265_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,-1,-1,1],[aux267_INTEGER,aux269_INTEGER,aux271_INTEGER,aux273_INTEGER,aux275_INTEGER,1],0);
constraint bool_clause([],[aux276_BOOL,w_00001_00001_BOOL]);
constraint bool_clause([],[aux277_BOOL,w_00002_00001_BOOL]);
constraint bool_clause([],[aux278_BOOL,w_00003_00001_BOOL]);
constraint bool_clause([],[aux279_BOOL,w_00004_00001_BOOL]);
constraint bool_clause([],[aux280_BOOL,w_00005_00001_BOOL]);
constraint bool_clause([],[aux281_BOOL,w_00006_00001_BOOL]);
constraint bool_clause([],[aux282_BOOL,w_00007_00001_BOOL]);
constraint bool_clause([],[aux283_BOOL,w_00008_00001_BOOL]);
constraint bool_clause([],[aux284_BOOL,w_00009_00001_BOOL]);
constraint bool_clause([],[aux285_BOOL,w_00001_00002_BOOL]);
constraint bool_clause([],[aux286_BOOL,w_00002_00002_BOOL]);
constraint bool_clause([],[aux287_BOOL,w_00003_00002_BOOL]);
constraint bool_clause([],[aux288_BOOL,w_00004_00002_BOOL]);
constraint bool_clause([],[aux289_BOOL,w_00005_00002_BOOL]);
constraint bool_clause([],[aux290_BOOL,w_00006_00002_BOOL]);
constraint bool_clause([],[aux291_BOOL,w_00007_00002_BOOL]);
constraint bool_clause([],[aux292_BOOL,w_00008_00002_BOOL]);
constraint bool_clause([],[aux293_BOOL,w_00009_00002_BOOL]);
constraint bool_clause([],[aux294_BOOL,w_00001_00003_BOOL]);
constraint bool_clause([],[aux295_BOOL,w_00002_00003_BOOL]);
constraint bool_clause([],[aux296_BOOL,w_00003_00003_BOOL]);
constraint bool_clause([],[aux297_BOOL,w_00004_00003_BOOL]);
constraint bool_clause([],[aux298_BOOL,w_00005_00003_BOOL]);
constraint bool_clause([],[aux299_BOOL,w_00006_00003_BOOL]);
constraint bool_clause([],[aux300_BOOL,w_00007_00003_BOOL]);
constraint bool_clause([],[aux301_BOOL,w_00008_00003_BOOL]);
constraint bool_clause([],[aux302_BOOL,w_00009_00003_BOOL]);
constraint bool_clause([],[aux303_BOOL,w_00001_00004_BOOL]);
constraint bool_clause([],[aux304_BOOL,w_00002_00004_BOOL]);
constraint bool_clause([],[aux305_BOOL,w_00003_00004_BOOL]);
constraint bool_clause([],[aux306_BOOL,w_00004_00004_BOOL]);
constraint bool_clause([],[aux307_BOOL,w_00005_00004_BOOL]);
constraint bool_clause([],[aux308_BOOL,w_00006_00004_BOOL]);
constraint bool_clause([],[aux309_BOOL,w_00007_00004_BOOL]);
constraint bool_clause([],[aux310_BOOL,w_00008_00004_BOOL]);
constraint bool_clause([],[aux311_BOOL,w_00009_00004_BOOL]);
constraint bool_clause([],[aux312_BOOL,w_00001_00005_BOOL]);
constraint bool_clause([],[aux313_BOOL,w_00002_00005_BOOL]);
constraint bool_clause([],[aux314_BOOL,w_00003_00005_BOOL]);
constraint bool_clause([],[aux315_BOOL,w_00004_00005_BOOL]);
constraint bool_clause([],[aux316_BOOL,w_00005_00005_BOOL]);
constraint bool_clause([],[aux317_BOOL,w_00006_00005_BOOL]);
constraint bool_clause([],[aux318_BOOL,w_00007_00005_BOOL]);
constraint bool_clause([],[aux319_BOOL,w_00008_00005_BOOL]);
constraint bool_clause([],[aux320_BOOL,w_00009_00005_BOOL]);
constraint bool_clause([],[aux321_BOOL,w_00001_00006_BOOL]);
constraint bool_clause([],[aux322_BOOL,w_00002_00006_BOOL]);
constraint bool_clause([],[aux323_BOOL,w_00003_00006_BOOL]);
constraint bool_clause([],[aux324_BOOL,w_00004_00006_BOOL]);
constraint bool_clause([],[aux325_BOOL,w_00005_00006_BOOL]);
constraint bool_clause([],[aux326_BOOL,w_00006_00006_BOOL]);
constraint bool_clause([],[aux327_BOOL,w_00007_00006_BOOL]);
constraint bool_clause([],[aux328_BOOL,w_00008_00006_BOOL]);
constraint bool_clause([],[aux329_BOOL,w_00009_00006_BOOL]);
constraint bool_clause([],[aux330_BOOL,w_00001_00007_BOOL]);
constraint bool_clause([],[aux331_BOOL,w_00002_00007_BOOL]);
constraint bool_clause([],[aux332_BOOL,w_00003_00007_BOOL]);
constraint bool_clause([],[aux333_BOOL,w_00004_00007_BOOL]);
constraint bool_clause([],[aux334_BOOL,w_00005_00007_BOOL]);
constraint bool_clause([],[aux335_BOOL,w_00006_00007_BOOL]);
constraint bool_clause([],[aux336_BOOL,w_00007_00007_BOOL]);
constraint bool_clause([],[aux337_BOOL,w_00008_00007_BOOL]);
constraint bool_clause([],[aux338_BOOL,w_00009_00007_BOOL]);
constraint bool_clause([],[aux339_BOOL,w_00001_00008_BOOL]);
constraint bool_clause([],[aux340_BOOL,w_00002_00008_BOOL]);
constraint bool_clause([],[aux341_BOOL,w_00003_00008_BOOL]);
constraint bool_clause([],[aux342_BOOL,w_00004_00008_BOOL]);
constraint bool_clause([],[aux343_BOOL,w_00005_00008_BOOL]);
constraint bool_clause([],[aux344_BOOL,w_00006_00008_BOOL]);
constraint bool_clause([],[aux345_BOOL,w_00007_00008_BOOL]);
constraint bool_clause([],[aux346_BOOL,w_00008_00008_BOOL]);
constraint bool_clause([],[aux347_BOOL,w_00009_00008_BOOL]);
constraint bool_clause([],[aux348_BOOL,w_00001_00009_BOOL]);
constraint bool_clause([],[aux349_BOOL,w_00002_00009_BOOL]);
constraint bool_clause([],[aux350_BOOL,w_00003_00009_BOOL]);
constraint bool_clause([],[aux351_BOOL,w_00004_00009_BOOL]);
constraint bool_clause([],[aux352_BOOL,w_00005_00009_BOOL]);
constraint bool_clause([],[aux353_BOOL,w_00006_00009_BOOL]);
constraint bool_clause([],[aux354_BOOL,w_00007_00009_BOOL]);
constraint bool_clause([],[aux355_BOOL,w_00008_00009_BOOL]);
constraint bool_clause([],[aux356_BOOL,w_00009_00009_BOOL]);
constraint bool_clause([],[aux357_BOOL,w_00001_00010_BOOL]);
constraint bool_clause([],[aux358_BOOL,w_00002_00010_BOOL]);
constraint bool_clause([],[aux359_BOOL,w_00003_00010_BOOL]);
constraint bool_clause([],[aux360_BOOL,w_00004_00010_BOOL]);
constraint bool_clause([],[aux361_BOOL,w_00005_00010_BOOL]);
constraint bool_clause([],[aux362_BOOL,w_00006_00010_BOOL]);
constraint bool_clause([],[aux363_BOOL,w_00007_00010_BOOL]);
constraint bool_clause([],[aux364_BOOL,w_00008_00010_BOOL]);
constraint bool_clause([],[aux365_BOOL,w_00009_00010_BOOL]);
constraint bool_clause([],[aux366_BOOL,w_00001_00011_BOOL]);
constraint bool_clause([],[aux367_BOOL,w_00002_00011_BOOL]);
constraint bool_clause([],[aux368_BOOL,w_00003_00011_BOOL]);
constraint bool_clause([],[aux369_BOOL,w_00004_00011_BOOL]);
constraint bool_clause([],[aux370_BOOL,w_00005_00011_BOOL]);
constraint bool_clause([],[aux371_BOOL,w_00006_00011_BOOL]);
constraint bool_clause([],[aux372_BOOL,w_00007_00011_BOOL]);
constraint bool_clause([],[aux373_BOOL,w_00008_00011_BOOL]);
constraint bool_clause([],[aux374_BOOL,w_00009_00011_BOOL]);
constraint bool_clause([],[aux375_BOOL,w_00001_00012_BOOL]);
constraint bool_clause([],[aux376_BOOL,w_00002_00012_BOOL]);
constraint bool_clause([],[aux377_BOOL,w_00003_00012_BOOL]);
constraint bool_clause([],[aux378_BOOL,w_00004_00012_BOOL]);
constraint bool_clause([],[aux379_BOOL,w_00005_00012_BOOL]);
constraint bool_clause([],[aux380_BOOL,w_00006_00012_BOOL]);
constraint bool_clause([],[aux381_BOOL,w_00007_00012_BOOL]);
constraint bool_clause([],[aux382_BOOL,w_00008_00012_BOOL]);
constraint bool_clause([],[aux383_BOOL,w_00009_00012_BOOL]);
constraint bool_clause([],[aux384_BOOL,w_00001_00013_BOOL]);
constraint bool_clause([],[aux385_BOOL,w_00002_00013_BOOL]);
constraint bool_clause([],[aux386_BOOL,w_00003_00013_BOOL]);
constraint bool_clause([],[aux387_BOOL,w_00004_00013_BOOL]);
constraint bool_clause([],[aux388_BOOL,w_00005_00013_BOOL]);
constraint bool_clause([],[aux389_BOOL,w_00006_00013_BOOL]);
constraint bool_clause([],[aux390_BOOL,w_00007_00013_BOOL]);
constraint bool_clause([],[aux391_BOOL,w_00008_00013_BOOL]);
constraint bool_clause([],[aux392_BOOL,w_00009_00013_BOOL]);
constraint bool_clause([],[aux393_BOOL,w_00001_00014_BOOL]);
constraint bool_clause([],[aux394_BOOL,w_00002_00014_BOOL]);
constraint bool_clause([],[aux395_BOOL,w_00003_00014_BOOL]);
constraint bool_clause([],[aux396_BOOL,w_00004_00014_BOOL]);
constraint bool_clause([],[aux397_BOOL,w_00005_00014_BOOL]);
constraint bool_clause([],[aux398_BOOL,w_00006_00014_BOOL]);
constraint bool_clause([],[aux399_BOOL,w_00007_00014_BOOL]);
constraint bool_clause([],[aux400_BOOL,w_00008_00014_BOOL]);
constraint bool_clause([],[aux401_BOOL,w_00009_00014_BOOL]);
constraint bool_clause([],[aux402_BOOL,w_00001_00015_BOOL]);
constraint bool_clause([],[aux403_BOOL,w_00002_00015_BOOL]);
constraint bool_clause([],[aux404_BOOL,w_00003_00015_BOOL]);
constraint bool_clause([],[aux405_BOOL,w_00004_00015_BOOL]);
constraint bool_clause([],[aux406_BOOL,w_00005_00015_BOOL]);
constraint bool_clause([],[aux407_BOOL,w_00006_00015_BOOL]);
constraint bool_clause([],[aux408_BOOL,w_00007_00015_BOOL]);
constraint bool_clause([],[aux409_BOOL,w_00008_00015_BOOL]);
constraint bool_clause([],[aux410_BOOL,w_00009_00015_BOOL]);
constraint bool_clause([],[aux411_BOOL,w_00001_00016_BOOL]);
constraint bool_clause([],[aux412_BOOL,w_00002_00016_BOOL]);
constraint bool_clause([],[aux413_BOOL,w_00003_00016_BOOL]);
constraint bool_clause([],[aux414_BOOL,w_00004_00016_BOOL]);
constraint bool_clause([],[aux415_BOOL,w_00005_00016_BOOL]);
constraint bool_clause([],[aux416_BOOL,w_00006_00016_BOOL]);
constraint bool_clause([],[aux417_BOOL,w_00007_00016_BOOL]);
constraint bool_clause([],[aux418_BOOL,w_00008_00016_BOOL]);
constraint bool_clause([],[aux419_BOOL,w_00009_00016_BOOL]);
constraint bool_clause([],[aux420_BOOL,w_00001_00017_BOOL]);
constraint bool_clause([],[aux421_BOOL,w_00002_00017_BOOL]);
constraint bool_clause([],[aux422_BOOL,w_00003_00017_BOOL]);
constraint bool_clause([],[aux423_BOOL,w_00004_00017_BOOL]);
constraint bool_clause([],[aux424_BOOL,w_00005_00017_BOOL]);
constraint bool_clause([],[aux425_BOOL,w_00006_00017_BOOL]);
constraint bool_clause([],[aux426_BOOL,w_00007_00017_BOOL]);
constraint bool_clause([],[aux427_BOOL,w_00008_00017_BOOL]);
constraint bool_clause([],[aux428_BOOL,w_00009_00017_BOOL]);
constraint bool_clause([],[aux429_BOOL,w_00001_00018_BOOL]);
constraint bool_clause([],[aux430_BOOL,w_00002_00018_BOOL]);
constraint bool_clause([],[aux431_BOOL,w_00003_00018_BOOL]);
constraint bool_clause([],[aux432_BOOL,w_00004_00018_BOOL]);
constraint bool_clause([],[aux433_BOOL,w_00005_00018_BOOL]);
constraint bool_clause([],[aux434_BOOL,w_00006_00018_BOOL]);
constraint bool_clause([],[aux435_BOOL,w_00007_00018_BOOL]);
constraint bool_clause([],[aux436_BOOL,w_00008_00018_BOOL]);
constraint bool_clause([],[aux437_BOOL,w_00009_00018_BOOL]);
constraint bool_clause([],[aux438_BOOL,w_00001_00019_BOOL]);
constraint bool_clause([],[aux439_BOOL,w_00002_00019_BOOL]);
constraint bool_clause([],[aux440_BOOL,w_00003_00019_BOOL]);
constraint bool_clause([],[aux441_BOOL,w_00004_00019_BOOL]);
constraint bool_clause([],[aux442_BOOL,w_00005_00019_BOOL]);
constraint bool_clause([],[aux443_BOOL,w_00006_00019_BOOL]);
constraint bool_clause([],[aux444_BOOL,w_00007_00019_BOOL]);
constraint bool_clause([],[aux445_BOOL,w_00008_00019_BOOL]);
constraint bool_clause([],[aux446_BOOL,w_00009_00019_BOOL]);
constraint bool_clause([],[aux447_BOOL,w_00001_00020_BOOL]);
constraint bool_clause([],[aux448_BOOL,w_00002_00020_BOOL]);
constraint bool_clause([],[aux449_BOOL,w_00003_00020_BOOL]);
constraint bool_clause([],[aux450_BOOL,w_00004_00020_BOOL]);
constraint bool_clause([],[aux451_BOOL,w_00005_00020_BOOL]);
constraint bool_clause([],[aux452_BOOL,w_00006_00020_BOOL]);
constraint bool_clause([],[aux453_BOOL,w_00007_00020_BOOL]);
constraint bool_clause([],[aux454_BOOL,w_00008_00020_BOOL]);
constraint bool_clause([],[aux455_BOOL,w_00009_00020_BOOL]);
constraint array_bool_or([aux456_BOOL,aux2837_BOOL],true);
constraint array_bool_or([aux5218_BOOL,aux5219_BOOL],true);
constraint array_bool_or([aux7600_BOOL,aux7601_BOOL],true);
constraint array_bool_or([aux9982_BOOL,aux9983_BOOL],true);
constraint array_bool_or([aux12364_BOOL,aux12365_BOOL],true);
constraint array_bool_or([aux14746_BOOL,aux14747_BOOL],true);
constraint array_bool_or([aux17128_BOOL,aux17129_BOOL],true);
constraint array_bool_or([aux17130_BOOL,aux19511_BOOL],true);
constraint array_bool_or([aux19512_BOOL,aux21893_BOOL],true);
constraint array_bool_or([aux21894_BOOL,aux21895_BOOL],true);
constraint array_bool_or([aux21896_BOOL,aux21897_BOOL],true);
constraint int_lin_le([1,1,1,-1],[aux21901_INTEGER,aux21905_INTEGER,aux21907_INTEGER,1],0);
constraint int_lin_le([1,1,1,-1],[aux21911_INTEGER,aux21915_INTEGER,aux21917_INTEGER,1],0);
constraint int_lin_le([1,1,1,-1],[aux21921_INTEGER,aux21925_INTEGER,aux21927_INTEGER,1],0);
constraint int_lin_le([2,2,1,1,1,-1],[aux21931_INTEGER,aux21935_INTEGER,aux21939_INTEGER,aux21943_INTEGER,aux21945_INTEGER,4],0);
constraint int_lin_le([1,2,1,1,2,-1],[aux21949_INTEGER,aux21953_INTEGER,aux21957_INTEGER,aux21961_INTEGER,aux21963_INTEGER,4],0);
constraint int_lin_le([1,2,2,1,1,-1],[aux21967_INTEGER,aux21971_INTEGER,aux21975_INTEGER,aux21979_INTEGER,aux21981_INTEGER,4],0);
constraint int_lin_le([1,2,1,1,2,-1],[aux21985_INTEGER,aux21989_INTEGER,aux21993_INTEGER,aux21997_INTEGER,aux21999_INTEGER,4],0);
constraint int_lin_le([1,2,2,1,1,-1],[aux22003_INTEGER,aux22007_INTEGER,aux22011_INTEGER,aux22015_INTEGER,aux22017_INTEGER,4],0);
constraint int_lin_le([1,2,1,1,1,-1],[aux22021_INTEGER,aux22025_INTEGER,aux22029_INTEGER,aux22033_INTEGER,aux22035_INTEGER,4],0);
constraint int_lin_le([1,1,1,1,2,-1],[aux22039_INTEGER,aux22043_INTEGER,aux22047_INTEGER,aux22051_INTEGER,aux22053_INTEGER,4],0);
constraint int_lin_le([1,2,1,1,1,-1],[aux22057_INTEGER,aux22061_INTEGER,aux22065_INTEGER,aux22069_INTEGER,aux22071_INTEGER,4],0);
constraint int_lin_le([2,1,1,1,1,-1],[aux22075_INTEGER,aux22079_INTEGER,aux22083_INTEGER,aux22087_INTEGER,aux22089_INTEGER,4],0);
constraint int_lin_le([1,2,1,1,1,-1],[aux22093_INTEGER,aux22097_INTEGER,aux22101_INTEGER,aux22105_INTEGER,aux22107_INTEGER,4],0);
constraint int_lin_le([1,1,2,1,1,1,1,1,1,1,-1],[aux22111_INTEGER,aux22115_INTEGER,aux22119_INTEGER,aux22123_INTEGER,aux22127_INTEGER,aux22131_INTEGER,aux22135_INTEGER,aux22139_INTEGER,aux22143_INTEGER,aux22145_INTEGER,3],0);
constraint int_lin_le([1,2,1,1,1,1,1,1,1,1,-1],[aux22149_INTEGER,aux22153_INTEGER,aux22157_INTEGER,aux22161_INTEGER,aux22165_INTEGER,aux22169_INTEGER,aux22173_INTEGER,aux22177_INTEGER,aux22181_INTEGER,aux22183_INTEGER,3],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,1,2,-1],[aux22187_INTEGER,aux22191_INTEGER,aux22195_INTEGER,aux22199_INTEGER,aux22203_INTEGER,aux22207_INTEGER,aux22211_INTEGER,aux22215_INTEGER,aux22219_INTEGER,aux22221_INTEGER,3],0);
constraint int_lin_le([1,1,2,1,1,1,1,1,1,1,-1],[aux22225_INTEGER,aux22229_INTEGER,aux22233_INTEGER,aux22237_INTEGER,aux22241_INTEGER,aux22245_INTEGER,aux22249_INTEGER,aux22253_INTEGER,aux22257_INTEGER,aux22259_INTEGER,3],0);
constraint int_lin_le([1,2,1,1,1,1,1,1,1,1,-1],[aux22263_INTEGER,aux22267_INTEGER,aux22271_INTEGER,aux22275_INTEGER,aux22279_INTEGER,aux22283_INTEGER,aux22287_INTEGER,aux22291_INTEGER,aux22295_INTEGER,aux22297_INTEGER,3],0);
constraint int_lin_le([1,1,2,1,1,1,1,1,1,1,-1],[aux22301_INTEGER,aux22305_INTEGER,aux22309_INTEGER,aux22313_INTEGER,aux22317_INTEGER,aux22321_INTEGER,aux22325_INTEGER,aux22329_INTEGER,aux22333_INTEGER,aux22335_INTEGER,3],0);
constraint int_lin_le([1,1,2,1,1,1,1,1,1,1,-1],[aux22339_INTEGER,aux22343_INTEGER,aux22347_INTEGER,aux22351_INTEGER,aux22355_INTEGER,aux22359_INTEGER,aux22363_INTEGER,aux22367_INTEGER,aux22371_INTEGER,aux22373_INTEGER,3],0);
constraint int_lin_le([1,1,2,1,1,1,1,1,1,1,-1],[aux22377_INTEGER,aux22381_INTEGER,aux22385_INTEGER,aux22389_INTEGER,aux22393_INTEGER,aux22397_INTEGER,aux22401_INTEGER,aux22405_INTEGER,aux22409_INTEGER,aux22411_INTEGER,3],0);
constraint int_lin_le([1,1,2,1,1,1,1,1,1,1,-1],[aux22415_INTEGER,aux22419_INTEGER,aux22423_INTEGER,aux22427_INTEGER,aux22431_INTEGER,aux22435_INTEGER,aux22439_INTEGER,aux22443_INTEGER,aux22447_INTEGER,aux22449_INTEGER,3],0);
constraint int_lin_le([1,1,2,1,1,1,1,1,1,1,-1],[aux22453_INTEGER,aux22457_INTEGER,aux22461_INTEGER,aux22465_INTEGER,aux22469_INTEGER,aux22473_INTEGER,aux22477_INTEGER,aux22481_INTEGER,aux22485_INTEGER,aux22487_INTEGER,3],0);
constraint int_lin_le([1,1,1,1,1,1,1,2,1,1,1,1,-1],[aux22491_INTEGER,aux22495_INTEGER,aux22499_INTEGER,aux22503_INTEGER,aux22507_INTEGER,aux22511_INTEGER,aux22515_INTEGER,aux22519_INTEGER,aux22523_INTEGER,aux22527_INTEGER,aux22531_INTEGER,aux22533_INTEGER,5],0);
constraint int_lin_le([1,1,1,1,1,1,1,2,1,1,1,1,-1],[aux22537_INTEGER,aux22541_INTEGER,aux22545_INTEGER,aux22549_INTEGER,aux22553_INTEGER,aux22557_INTEGER,aux22561_INTEGER,aux22565_INTEGER,aux22569_INTEGER,aux22573_INTEGER,aux22577_INTEGER,aux22579_INTEGER,5],0);
constraint int_lin_le([1,1,1,1,1,1,1,2,1,1,1,1,-1],[aux22583_INTEGER,aux22587_INTEGER,aux22591_INTEGER,aux22595_INTEGER,aux22599_INTEGER,aux22603_INTEGER,aux22607_INTEGER,aux22611_INTEGER,aux22615_INTEGER,aux22619_INTEGER,aux22623_INTEGER,aux22625_INTEGER,5],0);
constraint int_lin_le([1,1,1,1,1,1,1,2,1,1,1,1,-1],[aux22629_INTEGER,aux22633_INTEGER,aux22637_INTEGER,aux22641_INTEGER,aux22645_INTEGER,aux22649_INTEGER,aux22653_INTEGER,aux22657_INTEGER,aux22661_INTEGER,aux22665_INTEGER,aux22669_INTEGER,aux22671_INTEGER,5],0);
constraint int_lin_le([1,1,1,1,1,1,1,2,1,1,1,1,-1],[aux22675_INTEGER,aux22679_INTEGER,aux22683_INTEGER,aux22687_INTEGER,aux22691_INTEGER,aux22695_INTEGER,aux22699_INTEGER,aux22703_INTEGER,aux22707_INTEGER,aux22711_INTEGER,aux22715_INTEGER,aux22717_INTEGER,5],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,2,1,1,1,-1],[aux22721_INTEGER,aux22725_INTEGER,aux22729_INTEGER,aux22733_INTEGER,aux22737_INTEGER,aux22741_INTEGER,aux22745_INTEGER,aux22749_INTEGER,aux22753_INTEGER,aux22757_INTEGER,aux22761_INTEGER,aux22763_INTEGER,5],0);
constraint int_lin_le([1,1,1,1,1,1,1,2,1,1,1,1,-1],[aux22767_INTEGER,aux22771_INTEGER,aux22775_INTEGER,aux22779_INTEGER,aux22783_INTEGER,aux22787_INTEGER,aux22791_INTEGER,aux22795_INTEGER,aux22799_INTEGER,aux22803_INTEGER,aux22807_INTEGER,aux22809_INTEGER,5],0);
constraint int_lin_le([1,1,1,1,1,1,1,2,1,1,1,1,-1],[aux22813_INTEGER,aux22817_INTEGER,aux22821_INTEGER,aux22825_INTEGER,aux22829_INTEGER,aux22833_INTEGER,aux22837_INTEGER,aux22841_INTEGER,aux22845_INTEGER,aux22849_INTEGER,aux22853_INTEGER,aux22855_INTEGER,5],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,1,1,1,2,-1],[aux22859_INTEGER,aux22863_INTEGER,aux22867_INTEGER,aux22871_INTEGER,aux22875_INTEGER,aux22879_INTEGER,aux22883_INTEGER,aux22887_INTEGER,aux22891_INTEGER,aux22895_INTEGER,aux22899_INTEGER,aux22901_INTEGER,5],0);
constraint int_lin_le([1,1,1,1,1,1,1,2,1,1,1,1,-1],[aux22905_INTEGER,aux22909_INTEGER,aux22913_INTEGER,aux22917_INTEGER,aux22921_INTEGER,aux22925_INTEGER,aux22929_INTEGER,aux22933_INTEGER,aux22937_INTEGER,aux22941_INTEGER,aux22945_INTEGER,aux22947_INTEGER,5],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,2,1,1,1,-1],[aux22951_INTEGER,aux22955_INTEGER,aux22959_INTEGER,aux22963_INTEGER,aux22967_INTEGER,aux22971_INTEGER,aux22975_INTEGER,aux22979_INTEGER,aux22983_INTEGER,aux22987_INTEGER,aux22991_INTEGER,aux22993_INTEGER,5],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,2,1,1,1,-1],[aux22997_INTEGER,aux23001_INTEGER,aux23005_INTEGER,aux23009_INTEGER,aux23013_INTEGER,aux23017_INTEGER,aux23021_INTEGER,aux23025_INTEGER,aux23029_INTEGER,aux23033_INTEGER,aux23037_INTEGER,aux23039_INTEGER,5],0);
constraint int_lin_le([1,1,-1],[1,s_00018,objective],0);
constraint int_lin_le([1,1,-1],[4,s_00019,objective],0);
constraint int_lin_le([1,1,-1],[2,s_00020,objective],0);

solve :: int_search([s_00001, s_00002, s_00003, s_00004, s_00005, s_00006, s_00007, s_00008, s_00009, s_00010, s_00011, s_00012, s_00013, s_00014, s_00015, s_00016, s_00017, s_00018, s_00019, s_00020, w_00001_00001_INTEGER, w_00001_00002_INTEGER, w_00001_00003_INTEGER, w_00001_00004_INTEGER, w_00001_00005_INTEGER, w_00001_00006_INTEGER, w_00001_00007_INTEGER, w_00001_00008_INTEGER, w_00001_00009_INTEGER, w_00001_00010_INTEGER, w_00001_00011_INTEGER, w_00001_00012_INTEGER, w_00001_00013_INTEGER, w_00001_00014_INTEGER, w_00001_00015_INTEGER, w_00001_00016_INTEGER, w_00001_00017_INTEGER, w_00001_00018_INTEGER, w_00001_00019_INTEGER, w_00001_00020_INTEGER, w_00002_00001_INTEGER, w_00002_00002_INTEGER, w_00002_00003_INTEGER, w_00002_00004_INTEGER, w_00002_00005_INTEGER, w_00002_00006_INTEGER, w_00002_00007_INTEGER, w_00002_00008_INTEGER, w_00002_00009_INTEGER, w_00002_00010_INTEGER, w_00002_00011_INTEGER, w_00002_00012_INTEGER, w_00002_00013_INTEGER, w_00002_00014_INTEGER, w_00002_00015_INTEGER, w_00002_00016_INTEGER, w_00002_00017_INTEGER, w_00002_00018_INTEGER, w_00002_00019_INTEGER, w_00002_00020_INTEGER, w_00003_00001_INTEGER, w_00003_00002_INTEGER, w_00003_00003_INTEGER, w_00003_00004_INTEGER, w_00003_00005_INTEGER, w_00003_00006_INTEGER, w_00003_00007_INTEGER, w_00003_00008_INTEGER, w_00003_00009_INTEGER, w_00003_00010_INTEGER, w_00003_00011_INTEGER, w_00003_00012_INTEGER, w_00003_00013_INTEGER, w_00003_00014_INTEGER, w_00003_00015_INTEGER, w_00003_00016_INTEGER, w_00003_00017_INTEGER, w_00003_00018_INTEGER, w_00003_00019_INTEGER, w_00003_00020_INTEGER, w_00004_00001_INTEGER, w_00004_00002_INTEGER, w_00004_00003_INTEGER, w_00004_00004_INTEGER, w_00004_00005_INTEGER, w_00004_00006_INTEGER, w_00004_00007_INTEGER, w_00004_00008_INTEGER, w_00004_00009_INTEGER, w_00004_00010_INTEGER, w_00004_00011_INTEGER, w_00004_00012_INTEGER, w_00004_00013_INTEGER, w_00004_00014_INTEGER, w_00004_00015_INTEGER, w_00004_00016_INTEGER, w_00004_00017_INTEGER, w_00004_00018_INTEGER, w_00004_00019_INTEGER, w_00004_00020_INTEGER, w_00005_00001_INTEGER, w_00005_00002_INTEGER, w_00005_00003_INTEGER, w_00005_00004_INTEGER, w_00005_00005_INTEGER, w_00005_00006_INTEGER, w_00005_00007_INTEGER, w_00005_00008_INTEGER, w_00005_00009_INTEGER, w_00005_00010_INTEGER, w_00005_00011_INTEGER, w_00005_00012_INTEGER, w_00005_00013_INTEGER, w_00005_00014_INTEGER, w_00005_00015_INTEGER, w_00005_00016_INTEGER, w_00005_00017_INTEGER, w_00005_00018_INTEGER, w_00005_00019_INTEGER, w_00005_00020_INTEGER, w_00006_00001_INTEGER, w_00006_00002_INTEGER, w_00006_00003_INTEGER, w_00006_00004_INTEGER, w_00006_00005_INTEGER, w_00006_00006_INTEGER, w_00006_00007_INTEGER, w_00006_00008_INTEGER, w_00006_00009_INTEGER, w_00006_00010_INTEGER, w_00006_00011_INTEGER, w_00006_00012_INTEGER, w_00006_00013_INTEGER, w_00006_00014_INTEGER, w_00006_00015_INTEGER, w_00006_00016_INTEGER, w_00006_00017_INTEGER, w_00006_00018_INTEGER, w_00006_00019_INTEGER, w_00006_00020_INTEGER, w_00007_00001_INTEGER, w_00007_00002_INTEGER, w_00007_00003_INTEGER, w_00007_00004_INTEGER, w_00007_00005_INTEGER, w_00007_00006_INTEGER, w_00007_00007_INTEGER, w_00007_00008_INTEGER, w_00007_00009_INTEGER, w_00007_00010_INTEGER, w_00007_00011_INTEGER, w_00007_00012_INTEGER, w_00007_00013_INTEGER, w_00007_00014_INTEGER, w_00007_00015_INTEGER, w_00007_00016_INTEGER, w_00007_00017_INTEGER, w_00007_00018_INTEGER, w_00007_00019_INTEGER, w_00007_00020_INTEGER, w_00008_00001_INTEGER, w_00008_00002_INTEGER, w_00008_00003_INTEGER, w_00008_00004_INTEGER, w_00008_00005_INTEGER, w_00008_00006_INTEGER, w_00008_00007_INTEGER, w_00008_00008_INTEGER, w_00008_00009_INTEGER, w_00008_00010_INTEGER, w_00008_00011_INTEGER, w_00008_00012_INTEGER, w_00008_00013_INTEGER, w_00008_00014_INTEGER, w_00008_00015_INTEGER, w_00008_00016_INTEGER, w_00008_00017_INTEGER, w_00008_00018_INTEGER, w_00008_00019_INTEGER, w_00008_00020_INTEGER, w_00009_00001_INTEGER, w_00009_00002_INTEGER, w_00009_00003_INTEGER, w_00009_00004_INTEGER, w_00009_00005_INTEGER, w_00009_00006_INTEGER, w_00009_00007_INTEGER, w_00009_00008_INTEGER, w_00009_00009_INTEGER, w_00009_00010_INTEGER, w_00009_00011_INTEGER, w_00009_00012_INTEGER, w_00009_00013_INTEGER, w_00009_00014_INTEGER, w_00009_00015_INTEGER, w_00009_00016_INTEGER, w_00009_00017_INTEGER, w_00009_00018_INTEGER, w_00009_00019_INTEGER, w_00009_00020_INTEGER, objective], input_order, indomain_min, complete)
minimize objective;
