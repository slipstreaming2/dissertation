predicate gecode_global_cardinality(array[int] of var int: x, array[int] of int: cover, array[int] of var int: counts);
array [1..3] of int: aux1 = [1, 1, 1];
array [1..20] of int: aux0 = [1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
array [1..5] of int: aux3 = [1, 2, 1, 2, 1];
array [1..20] of int: aux2 = [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0];
array [1..20] of int: d = [4, 4, 3, 2, 3, 2, 3, 2, 2, 5, 3, 4, 3, 2, 1, 3, 4, 1, 4, 2];
array [1..5] of int: rc = [1, 4, 4, 3, 5];
array [1..12] of int: aux9 = [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1];
array [1..20] of int: aux8 = [1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1];
array [1..5] of int: aux5 = [1, 2, 1, 1, 1];
array [1..20] of int: aux4 = [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1];
array [1..10] of int: aux7 = [1, 1, 2, 1, 1, 1, 1, 1, 1, 1];
array [1..20] of int: aux6 = [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0];
var 0..31: s_00001:: output_var ;
var 0..38: s_00002:: output_var ;
var 0..37: s_00003:: output_var ;
var 3..40: s_00004:: output_var ;
var 5..42: s_00005:: output_var ;
var 4..53: s_00006:: output_var ;
var 5..46: s_00007:: output_var ;
var 8..51: s_00008:: output_var ;
var 4..35: s_00009:: output_var ;
var 6..37: s_00010:: output_var ;
var 11..42: s_00011:: output_var ;
var 14..45: s_00012:: output_var ;
var 11..53: s_00013:: output_var ;
var 14..46: s_00014:: output_var ;
var 16..48: s_00015:: output_var ;
var 17..50: s_00016:: output_var ;
var 18..49: s_00017:: output_var ;
var 19..56: s_00018:: output_var ;
var 22..53: s_00019:: output_var ;
var 17..55: s_00020:: output_var ;
var bool: w_00001_00004_BOOL;
var {0,1}: w_00001_00004_INTEGER :: output_var ;
var bool: w_00001_00005_BOOL;
var {0,1}: w_00001_00005_INTEGER :: output_var ;
var bool: w_00001_00007_BOOL;
var {0,1}: w_00001_00007_INTEGER :: output_var ;
var bool: w_00001_00008_BOOL;
var {0,1}: w_00001_00008_INTEGER :: output_var ;
var bool: w_00001_00010_BOOL;
var {0,1}: w_00001_00010_INTEGER :: output_var ;
var bool: w_00001_00011_BOOL;
var {0,1}: w_00001_00011_INTEGER :: output_var ;
var bool: w_00001_00013_BOOL;
var {0,1}: w_00001_00013_INTEGER :: output_var ;
var bool: w_00001_00015_BOOL;
var {0,1}: w_00001_00015_INTEGER :: output_var ;
var bool: w_00001_00016_BOOL;
var {0,1}: w_00001_00016_INTEGER :: output_var ;
var bool: w_00002_00001_BOOL;
var {0,1}: w_00002_00001_INTEGER :: output_var ;
var bool: w_00002_00002_BOOL;
var {0,1}: w_00002_00002_INTEGER :: output_var ;
var bool: w_00002_00004_BOOL;
var {0,1}: w_00002_00004_INTEGER :: output_var ;
var bool: w_00002_00006_BOOL;
var {0,1}: w_00002_00006_INTEGER :: output_var ;
var bool: w_00002_00008_BOOL;
var {0,1}: w_00002_00008_INTEGER :: output_var ;
var bool: w_00002_00012_BOOL;
var {0,1}: w_00002_00012_INTEGER :: output_var ;
var bool: w_00002_00013_BOOL;
var {0,1}: w_00002_00013_INTEGER :: output_var ;
var bool: w_00002_00014_BOOL;
var {0,1}: w_00002_00014_INTEGER :: output_var ;
var bool: w_00002_00016_BOOL;
var {0,1}: w_00002_00016_INTEGER :: output_var ;
var bool: w_00002_00018_BOOL;
var {0,1}: w_00002_00018_INTEGER :: output_var ;
var bool: w_00002_00019_BOOL;
var {0,1}: w_00002_00019_INTEGER :: output_var ;
var bool: w_00002_00020_BOOL;
var {0,1}: w_00002_00020_INTEGER :: output_var ;
var bool: w_00003_00002_BOOL;
var {0,1}: w_00003_00002_INTEGER :: output_var ;
var bool: w_00003_00003_BOOL;
var {0,1}: w_00003_00003_INTEGER :: output_var ;
var bool: w_00003_00005_BOOL;
var {0,1}: w_00003_00005_INTEGER :: output_var ;
var bool: w_00003_00008_BOOL;
var {0,1}: w_00003_00008_INTEGER :: output_var ;
var bool: w_00003_00020_BOOL;
var {0,1}: w_00003_00020_INTEGER :: output_var ;
var bool: w_00004_00001_BOOL;
var {0,1}: w_00004_00001_INTEGER :: output_var ;
var bool: w_00004_00002_BOOL;
var {0,1}: w_00004_00002_INTEGER :: output_var ;
var bool: w_00004_00004_BOOL;
var {0,1}: w_00004_00004_INTEGER :: output_var ;
var bool: w_00004_00005_BOOL;
var {0,1}: w_00004_00005_INTEGER :: output_var ;
var bool: w_00004_00006_BOOL;
var {0,1}: w_00004_00006_INTEGER :: output_var ;
var bool: w_00004_00007_BOOL;
var {0,1}: w_00004_00007_INTEGER :: output_var ;
var bool: w_00004_00008_BOOL;
var {0,1}: w_00004_00008_INTEGER :: output_var ;
var bool: w_00004_00009_BOOL;
var {0,1}: w_00004_00009_INTEGER :: output_var ;
var bool: w_00004_00010_BOOL;
var {0,1}: w_00004_00010_INTEGER :: output_var ;
var bool: w_00004_00011_BOOL;
var {0,1}: w_00004_00011_INTEGER :: output_var ;
var bool: w_00004_00012_BOOL;
var {0,1}: w_00004_00012_INTEGER :: output_var ;
var bool: w_00004_00013_BOOL;
var {0,1}: w_00004_00013_INTEGER :: output_var ;
var bool: w_00004_00014_BOOL;
var {0,1}: w_00004_00014_INTEGER :: output_var ;
var bool: w_00004_00015_BOOL;
var {0,1}: w_00004_00015_INTEGER :: output_var ;
var bool: w_00004_00016_BOOL;
var {0,1}: w_00004_00016_INTEGER :: output_var ;
var bool: w_00004_00017_BOOL;
var {0,1}: w_00004_00017_INTEGER :: output_var ;
var bool: w_00004_00018_BOOL;
var {0,1}: w_00004_00018_INTEGER :: output_var ;
var bool: w_00004_00019_BOOL;
var {0,1}: w_00004_00019_INTEGER :: output_var ;
var bool: w_00004_00020_BOOL;
var {0,1}: w_00004_00020_INTEGER :: output_var ;
var bool: w_00005_00001_BOOL;
var {0,1}: w_00005_00001_INTEGER :: output_var ;
var bool: w_00005_00004_BOOL;
var {0,1}: w_00005_00004_INTEGER :: output_var ;
var bool: w_00005_00005_BOOL;
var {0,1}: w_00005_00005_INTEGER :: output_var ;
var bool: w_00005_00007_BOOL;
var {0,1}: w_00005_00007_INTEGER :: output_var ;
var bool: w_00005_00008_BOOL;
var {0,1}: w_00005_00008_INTEGER :: output_var ;
var bool: w_00005_00010_BOOL;
var {0,1}: w_00005_00010_INTEGER :: output_var ;
var bool: w_00005_00011_BOOL;
var {0,1}: w_00005_00011_INTEGER :: output_var ;
var bool: w_00005_00013_BOOL;
var {0,1}: w_00005_00013_INTEGER :: output_var ;
var bool: w_00005_00015_BOOL;
var {0,1}: w_00005_00015_INTEGER :: output_var ;
var bool: w_00005_00016_BOOL;
var {0,1}: w_00005_00016_INTEGER :: output_var ;
var bool: w_00006_00001_BOOL;
var {0,1}: w_00006_00001_INTEGER :: output_var ;
var bool: w_00006_00002_BOOL;
var {0,1}: w_00006_00002_INTEGER :: output_var ;
var bool: w_00006_00003_BOOL;
var {0,1}: w_00006_00003_INTEGER :: output_var ;
var bool: w_00006_00004_BOOL;
var {0,1}: w_00006_00004_INTEGER :: output_var ;
var bool: w_00006_00005_BOOL;
var {0,1}: w_00006_00005_INTEGER :: output_var ;
var bool: w_00006_00006_BOOL;
var {0,1}: w_00006_00006_INTEGER :: output_var ;
var bool: w_00006_00008_BOOL;
var {0,1}: w_00006_00008_INTEGER :: output_var ;
var bool: w_00006_00009_BOOL;
var {0,1}: w_00006_00009_INTEGER :: output_var ;
var bool: w_00006_00011_BOOL;
var {0,1}: w_00006_00011_INTEGER :: output_var ;
var bool: w_00006_00012_BOOL;
var {0,1}: w_00006_00012_INTEGER :: output_var ;
var bool: w_00006_00013_BOOL;
var {0,1}: w_00006_00013_INTEGER :: output_var ;
var bool: w_00006_00014_BOOL;
var {0,1}: w_00006_00014_INTEGER :: output_var ;
var bool: w_00006_00016_BOOL;
var {0,1}: w_00006_00016_INTEGER :: output_var ;
var bool: w_00006_00017_BOOL;
var {0,1}: w_00006_00017_INTEGER :: output_var ;
var bool: w_00006_00018_BOOL;
var {0,1}: w_00006_00018_INTEGER :: output_var ;
var bool: w_00006_00019_BOOL;
var {0,1}: w_00006_00019_INTEGER :: output_var ;
var bool: w_00006_00020_BOOL;
var {0,1}: w_00006_00020_INTEGER :: output_var ;
var bool: w_00007_00001_BOOL;
var {0,1}: w_00007_00001_INTEGER :: output_var ;
var bool: w_00007_00002_BOOL;
var {0,1}: w_00007_00002_INTEGER :: output_var ;
var bool: w_00007_00003_BOOL;
var {0,1}: w_00007_00003_INTEGER :: output_var ;
var bool: w_00007_00004_BOOL;
var {0,1}: w_00007_00004_INTEGER :: output_var ;
var bool: w_00007_00005_BOOL;
var {0,1}: w_00007_00005_INTEGER :: output_var ;
var bool: w_00007_00006_BOOL;
var {0,1}: w_00007_00006_INTEGER :: output_var ;
var bool: w_00007_00008_BOOL;
var {0,1}: w_00007_00008_INTEGER :: output_var ;
var bool: w_00007_00009_BOOL;
var {0,1}: w_00007_00009_INTEGER :: output_var ;
var bool: w_00007_00011_BOOL;
var {0,1}: w_00007_00011_INTEGER :: output_var ;
var bool: w_00007_00012_BOOL;
var {0,1}: w_00007_00012_INTEGER :: output_var ;
var bool: w_00007_00013_BOOL;
var {0,1}: w_00007_00013_INTEGER :: output_var ;
var bool: w_00007_00014_BOOL;
var {0,1}: w_00007_00014_INTEGER :: output_var ;
var bool: w_00007_00016_BOOL;
var {0,1}: w_00007_00016_INTEGER :: output_var ;
var bool: w_00007_00017_BOOL;
var {0,1}: w_00007_00017_INTEGER :: output_var ;
var bool: w_00007_00018_BOOL;
var {0,1}: w_00007_00018_INTEGER :: output_var ;
var bool: w_00007_00019_BOOL;
var {0,1}: w_00007_00019_INTEGER :: output_var ;
var bool: w_00007_00020_BOOL;
var {0,1}: w_00007_00020_INTEGER :: output_var ;
var bool: w_00008_00001_BOOL;
var {0,1}: w_00008_00001_INTEGER :: output_var ;
var bool: w_00008_00002_BOOL;
var {0,1}: w_00008_00002_INTEGER :: output_var ;
var bool: w_00008_00004_BOOL;
var {0,1}: w_00008_00004_INTEGER :: output_var ;
var bool: w_00008_00006_BOOL;
var {0,1}: w_00008_00006_INTEGER :: output_var ;
var bool: w_00008_00008_BOOL;
var {0,1}: w_00008_00008_INTEGER :: output_var ;
var bool: w_00008_00012_BOOL;
var {0,1}: w_00008_00012_INTEGER :: output_var ;
var bool: w_00008_00013_BOOL;
var {0,1}: w_00008_00013_INTEGER :: output_var ;
var bool: w_00008_00014_BOOL;
var {0,1}: w_00008_00014_INTEGER :: output_var ;
var bool: w_00008_00016_BOOL;
var {0,1}: w_00008_00016_INTEGER :: output_var ;
var bool: w_00008_00018_BOOL;
var {0,1}: w_00008_00018_INTEGER :: output_var ;
var bool: w_00008_00019_BOOL;
var {0,1}: w_00008_00019_INTEGER :: output_var ;
var bool: w_00008_00020_BOOL;
var {0,1}: w_00008_00020_INTEGER :: output_var ;
var bool: w_00009_00002_BOOL;
var {0,1}: w_00009_00002_INTEGER :: output_var ;
var bool: w_00009_00003_BOOL;
var {0,1}: w_00009_00003_INTEGER :: output_var ;
var bool: w_00009_00004_BOOL;
var {0,1}: w_00009_00004_INTEGER :: output_var ;
var bool: w_00009_00005_BOOL;
var {0,1}: w_00009_00005_INTEGER :: output_var ;
var bool: w_00009_00008_BOOL;
var {0,1}: w_00009_00008_INTEGER :: output_var ;
var bool: w_00009_00009_BOOL;
var {0,1}: w_00009_00009_INTEGER :: output_var ;
var bool: w_00009_00011_BOOL;
var {0,1}: w_00009_00011_INTEGER :: output_var ;
var bool: w_00009_00014_BOOL;
var {0,1}: w_00009_00014_INTEGER :: output_var ;
var bool: w_00009_00017_BOOL;
var {0,1}: w_00009_00017_INTEGER :: output_var ;
var bool: w_00009_00020_BOOL;
var {0,1}: w_00009_00020_INTEGER :: output_var ;
var 26..57: objective:: output_var ;
var bool: aux18_BOOL:: var_is_introduced ;
var {0,1}: aux18_INTEGER :: var_is_introduced ;
var bool: aux19_BOOL:: var_is_introduced ;
var {0,1}: aux19_INTEGER :: var_is_introduced ;
var bool: aux20_BOOL:: var_is_introduced ;
var {0,1}: aux20_INTEGER :: var_is_introduced ;
var bool: aux21_BOOL:: var_is_introduced ;
var {0,1}: aux21_INTEGER :: var_is_introduced ;
var bool: aux23_BOOL:: var_is_introduced ;
var {0,1}: aux23_INTEGER :: var_is_introduced ;
var bool: aux27_BOOL:: var_is_introduced ;
var {0,1}: aux27_INTEGER :: var_is_introduced ;
var bool: aux32_BOOL:: var_is_introduced ;
var {0,1}: aux32_INTEGER :: var_is_introduced ;
var bool: aux36_BOOL:: var_is_introduced ;
var {0,1}: aux36_INTEGER :: var_is_introduced ;
var bool: aux38_BOOL:: var_is_introduced ;
var {0,1}: aux38_INTEGER :: var_is_introduced ;
var bool: aux40_BOOL:: var_is_introduced ;
var {0,1}: aux40_INTEGER :: var_is_introduced ;
var bool: aux41_BOOL:: var_is_introduced ;
var {0,1}: aux41_INTEGER :: var_is_introduced ;
var bool: aux42_BOOL:: var_is_introduced ;
var {0,1}: aux42_INTEGER :: var_is_introduced ;
var bool: aux43_BOOL:: var_is_introduced ;
var {0,1}: aux43_INTEGER :: var_is_introduced ;
var bool: aux44_BOOL:: var_is_introduced ;
var {0,1}: aux44_INTEGER :: var_is_introduced ;
var bool: aux45_BOOL:: var_is_introduced ;
var bool: aux46_BOOL:: var_is_introduced ;
var {0,1}: aux46_INTEGER :: var_is_introduced ;
var bool: aux51_BOOL:: var_is_introduced ;
var {0,1}: aux51_INTEGER :: var_is_introduced ;
var bool: aux52_BOOL:: var_is_introduced ;
var {0,1}: aux52_INTEGER :: var_is_introduced ;
var bool: aux53_BOOL:: var_is_introduced ;
var {0,1}: aux53_INTEGER :: var_is_introduced ;
var bool: aux54_BOOL:: var_is_introduced ;
var {0,1}: aux54_INTEGER :: var_is_introduced ;
var bool: aux61_BOOL:: var_is_introduced ;
var {0,1}: aux61_INTEGER :: var_is_introduced ;
var bool: aux63_BOOL:: var_is_introduced ;
var {0,1}: aux63_INTEGER :: var_is_introduced ;
var bool: aux69_BOOL:: var_is_introduced ;
var {0,1}: aux69_INTEGER :: var_is_introduced ;
var bool: aux70_BOOL:: var_is_introduced ;
var bool: aux73_BOOL:: var_is_introduced ;
var bool: aux74_BOOL:: var_is_introduced ;
var bool: aux75_BOOL:: var_is_introduced ;
var {0,1}: aux75_INTEGER :: var_is_introduced ;
var bool: aux77_BOOL:: var_is_introduced ;
var {0,1}: aux77_INTEGER :: var_is_introduced ;
var bool: aux79_BOOL:: var_is_introduced ;
var {0,1}: aux79_INTEGER :: var_is_introduced ;
var bool: aux81_BOOL:: var_is_introduced ;
var {0,1}: aux81_INTEGER :: var_is_introduced ;
var bool: aux84_BOOL:: var_is_introduced ;
var {0,1}: aux84_INTEGER :: var_is_introduced ;
var bool: aux85_BOOL:: var_is_introduced ;
var {0,1}: aux85_INTEGER :: var_is_introduced ;
var bool: aux93_BOOL:: var_is_introduced ;
var bool: aux97_BOOL:: var_is_introduced ;
var bool: aux101_BOOL:: var_is_introduced ;
var {0,1}: aux101_INTEGER :: var_is_introduced ;
var bool: aux102_BOOL:: var_is_introduced ;
var {0,1}: aux102_INTEGER :: var_is_introduced ;
var bool: aux105_BOOL:: var_is_introduced ;
var {0,1}: aux105_INTEGER :: var_is_introduced ;
var bool: aux106_BOOL:: var_is_introduced ;
var {0,1}: aux106_INTEGER :: var_is_introduced ;
var bool: aux107_BOOL:: var_is_introduced ;
var {0,1}: aux107_INTEGER :: var_is_introduced ;
var bool: aux108_BOOL:: var_is_introduced ;
var {0,1}: aux108_INTEGER :: var_is_introduced ;
var bool: aux110_BOOL:: var_is_introduced ;
var {0,1}: aux110_INTEGER :: var_is_introduced ;
var bool: aux111_BOOL:: var_is_introduced ;
var {0,1}: aux111_INTEGER :: var_is_introduced ;
var bool: aux112_BOOL:: var_is_introduced ;
var {0,1}: aux112_INTEGER :: var_is_introduced ;
var bool: aux114_BOOL:: var_is_introduced ;
var {0,1}: aux114_INTEGER :: var_is_introduced ;
var bool: aux117_BOOL:: var_is_introduced ;
var {0,1}: aux117_INTEGER :: var_is_introduced ;
var bool: aux118_BOOL:: var_is_introduced ;
var {0,1}: aux118_INTEGER :: var_is_introduced ;
var bool: aux119_BOOL:: var_is_introduced ;
var {0,1}: aux119_INTEGER :: var_is_introduced ;
var bool: aux122_BOOL:: var_is_introduced ;
var {0,1}: aux122_INTEGER :: var_is_introduced ;
var bool: aux123_BOOL:: var_is_introduced ;
var {0,1}: aux123_INTEGER :: var_is_introduced ;
var bool: aux124_BOOL:: var_is_introduced ;
var {0,1}: aux124_INTEGER :: var_is_introduced ;
var bool: aux125_BOOL:: var_is_introduced ;
var {0,1}: aux125_INTEGER :: var_is_introduced ;
var bool: aux127_BOOL:: var_is_introduced ;
var {0,1}: aux127_INTEGER :: var_is_introduced ;
var bool: aux129_BOOL:: var_is_introduced ;
var {0,1}: aux129_INTEGER :: var_is_introduced ;
var bool: aux130_BOOL:: var_is_introduced ;
var {0,1}: aux130_INTEGER :: var_is_introduced ;
var bool: aux131_BOOL:: var_is_introduced ;
var {0,1}: aux131_INTEGER :: var_is_introduced ;
var bool: aux132_BOOL:: var_is_introduced ;
var {0,1}: aux132_INTEGER :: var_is_introduced ;
var bool: aux133_BOOL:: var_is_introduced ;
var {0,1}: aux133_INTEGER :: var_is_introduced ;
var bool: aux136_BOOL:: var_is_introduced ;
var {0,1}: aux136_INTEGER :: var_is_introduced ;
var bool: aux138_BOOL:: var_is_introduced ;
var {0,1}: aux138_INTEGER :: var_is_introduced ;
var bool: aux140_BOOL:: var_is_introduced ;
var {0,1}: aux140_INTEGER :: var_is_introduced ;
var bool: aux141_BOOL:: var_is_introduced ;
var {0,1}: aux141_INTEGER :: var_is_introduced ;
var bool: aux143_BOOL:: var_is_introduced ;
var {0,1}: aux143_INTEGER :: var_is_introduced ;
var bool: aux144_BOOL:: var_is_introduced ;
var {0,1}: aux144_INTEGER :: var_is_introduced ;
var bool: aux153_BOOL:: var_is_introduced ;
var {0,1}: aux153_INTEGER :: var_is_introduced ;
var bool: aux154_BOOL:: var_is_introduced ;
var {0,1}: aux154_INTEGER :: var_is_introduced ;
var bool: aux155_BOOL:: var_is_introduced ;
var {0,1}: aux155_INTEGER :: var_is_introduced ;
var bool: aux156_BOOL:: var_is_introduced ;
var {0,1}: aux156_INTEGER :: var_is_introduced ;
var bool: aux158_BOOL:: var_is_introduced ;
var bool: aux160_BOOL:: var_is_introduced ;
var bool: aux164_BOOL:: var_is_introduced ;
var bool: aux166_BOOL:: var_is_introduced ;
var bool: aux169_BOOL:: var_is_introduced ;
var {0,1}: aux169_INTEGER :: var_is_introduced ;
var bool: aux171_BOOL:: var_is_introduced ;
var {0,1}: aux171_INTEGER :: var_is_introduced ;
var bool: aux172_BOOL:: var_is_introduced ;
var {0,1}: aux172_INTEGER :: var_is_introduced ;
var bool: aux173_BOOL:: var_is_introduced ;
var {0,1}: aux173_INTEGER :: var_is_introduced ;
var bool: aux174_BOOL:: var_is_introduced ;
var {0,1}: aux174_INTEGER :: var_is_introduced ;
var bool: aux187_BOOL:: var_is_introduced ;
var bool: aux190_BOOL:: var_is_introduced ;
var bool: aux196_BOOL:: var_is_introduced ;
var bool: aux197_BOOL:: var_is_introduced ;
var {0,1}: aux197_INTEGER :: var_is_introduced ;
var bool: aux198_BOOL:: var_is_introduced ;
var {0,1}: aux198_INTEGER :: var_is_introduced ;
var bool: aux200_BOOL:: var_is_introduced ;
var bool: aux201_BOOL:: var_is_introduced ;
var bool: aux202_BOOL:: var_is_introduced ;
var {0,1}: aux202_INTEGER :: var_is_introduced ;
var bool: aux204_BOOL:: var_is_introduced ;
var {0,1}: aux204_INTEGER :: var_is_introduced ;
var bool: aux206_BOOL:: var_is_introduced ;
var {0,1}: aux206_INTEGER :: var_is_introduced ;
var bool: aux208_BOOL:: var_is_introduced ;
var {0,1}: aux208_INTEGER :: var_is_introduced ;
var bool: aux209_BOOL:: var_is_introduced ;
var {0,1}: aux209_INTEGER :: var_is_introduced ;
var bool: aux210_BOOL:: var_is_introduced ;
var {0,1}: aux210_INTEGER :: var_is_introduced ;
var bool: aux211_BOOL:: var_is_introduced ;
var {0,1}: aux211_INTEGER :: var_is_introduced ;
var bool: aux214_BOOL:: var_is_introduced ;
var {0,1}: aux214_INTEGER :: var_is_introduced ;
var bool: aux215_BOOL:: var_is_introduced ;
var {0,1}: aux215_INTEGER :: var_is_introduced ;
var bool: aux216_BOOL:: var_is_introduced ;
var {0,1}: aux216_INTEGER :: var_is_introduced ;
var bool: aux217_BOOL:: var_is_introduced ;
var {0,1}: aux217_INTEGER :: var_is_introduced ;
var bool: aux219_BOOL:: var_is_introduced ;
var {0,1}: aux219_INTEGER :: var_is_introduced ;
var bool: aux220_BOOL:: var_is_introduced ;
var {0,1}: aux220_INTEGER :: var_is_introduced ;
var bool: aux221_BOOL:: var_is_introduced ;
var {0,1}: aux221_INTEGER :: var_is_introduced ;
var bool: aux223_BOOL:: var_is_introduced ;
var {0,1}: aux223_INTEGER :: var_is_introduced ;
var bool: aux224_BOOL:: var_is_introduced ;
var {0,1}: aux224_INTEGER :: var_is_introduced ;
var bool: aux225_BOOL:: var_is_introduced ;
var {0,1}: aux225_INTEGER :: var_is_introduced ;
var bool: aux226_BOOL:: var_is_introduced ;
var {0,1}: aux226_INTEGER :: var_is_introduced ;
var bool: aux228_BOOL:: var_is_introduced ;
var {0,1}: aux228_INTEGER :: var_is_introduced ;
var bool: aux231_BOOL:: var_is_introduced ;
var {0,1}: aux231_INTEGER :: var_is_introduced ;
var bool: aux234_BOOL:: var_is_introduced ;
var {0,1}: aux234_INTEGER :: var_is_introduced ;
var bool: aux236_BOOL:: var_is_introduced ;
var {0,1}: aux236_INTEGER :: var_is_introduced ;
var bool: aux238_BOOL:: var_is_introduced ;
var {0,1}: aux238_INTEGER :: var_is_introduced ;
var bool: aux239_BOOL:: var_is_introduced ;
var {0,1}: aux239_INTEGER :: var_is_introduced ;
var bool: aux240_BOOL:: var_is_introduced ;
var {0,1}: aux240_INTEGER :: var_is_introduced ;
var bool: aux241_BOOL:: var_is_introduced ;
var {0,1}: aux241_INTEGER :: var_is_introduced ;
var bool: aux242_BOOL:: var_is_introduced ;
var {0,1}: aux242_INTEGER :: var_is_introduced ;
var bool: aux245_BOOL:: var_is_introduced ;
var {0,1}: aux245_INTEGER :: var_is_introduced ;
var bool: aux249_BOOL:: var_is_introduced ;
var {0,1}: aux249_INTEGER :: var_is_introduced ;
var bool: aux258_BOOL:: var_is_introduced ;
var bool: aux260_BOOL:: var_is_introduced ;
var bool: aux263_BOOL:: var_is_introduced ;
var bool: aux266_BOOL:: var_is_introduced ;
var bool: aux267_BOOL:: var_is_introduced ;
var bool: aux270_BOOL:: var_is_introduced ;
var bool: aux272_BOOL:: var_is_introduced ;
var bool: aux276_BOOL:: var_is_introduced ;
var bool: aux277_BOOL:: var_is_introduced ;
var bool: aux278_BOOL:: var_is_introduced ;
var bool: aux279_BOOL:: var_is_introduced ;
var bool: aux280_BOOL:: var_is_introduced ;
var bool: aux284_BOOL:: var_is_introduced ;
var bool: aux292_BOOL:: var_is_introduced ;
var bool: aux293_BOOL:: var_is_introduced ;
var bool: aux295_BOOL:: var_is_introduced ;
var bool: aux297_BOOL:: var_is_introduced ;
var bool: aux298_BOOL:: var_is_introduced ;
var bool: aux299_BOOL:: var_is_introduced ;
var bool: aux304_BOOL:: var_is_introduced ;
var bool: aux310_BOOL:: var_is_introduced ;
var bool: aux311_BOOL:: var_is_introduced ;
var bool: aux315_BOOL:: var_is_introduced ;
var bool: aux316_BOOL:: var_is_introduced ;
var bool: aux321_BOOL:: var_is_introduced ;
var bool: aux322_BOOL:: var_is_introduced ;
var {0,1}: aux322_INTEGER :: var_is_introduced ;
var bool: aux325_BOOL:: var_is_introduced ;
var bool: aux328_BOOL:: var_is_introduced ;
var {0,1}: aux328_INTEGER :: var_is_introduced ;
var bool: aux331_BOOL:: var_is_introduced ;
var bool: aux332_BOOL:: var_is_introduced ;
var bool: aux333_BOOL:: var_is_introduced ;
var bool: aux339_BOOL:: var_is_introduced ;
var 0..2: aux365:: var_is_introduced ;
var 0..3: aux366:: var_is_introduced ;
var 0..2: aux367:: var_is_introduced ;
var 1..3: aux368:: var_is_introduced ;
var 0..2: aux369:: var_is_introduced ;
var 1..2: aux370:: var_is_introduced ;
var 0..2: aux371:: var_is_introduced ;
var 26..57: aux392:: var_is_introduced ;
var 8..45: aux393:: var_is_introduced ;
var 4..42: aux394:: var_is_introduced ;
var 17..49: aux395:: var_is_introduced ;
var 22..53: aux396:: var_is_introduced ;
var 8..49: aux397:: var_is_introduced ;
var 4..35: aux398:: var_is_introduced ;
var 18..49: aux399:: var_is_introduced ;
var 16..48: aux400:: var_is_introduced ;
var 11..42: aux401:: var_is_introduced ;
var 19..57: aux402:: var_is_introduced ;
var 10..53: aux403:: var_is_introduced ;
var 6..37: aux404:: var_is_introduced ;
var 20..57: aux405:: var_is_introduced ;
var 3..40: aux406:: var_is_introduced ;
var 14..45: aux407:: var_is_introduced ;
var 14..56: aux408:: var_is_introduced ;
var 5..42: aux409:: var_is_introduced ;
var 20..53: aux410:: var_is_introduced ;
var 6..55: aux411:: var_is_introduced ;
var bool: aux412_BOOL:: var_is_introduced ;
var {0,1}: aux412_INTEGER :: var_is_introduced ;
var bool: aux413_BOOL:: var_is_introduced ;
var {0,1}: aux413_INTEGER :: var_is_introduced ;
var bool: aux414_BOOL:: var_is_introduced ;
var {0,1}: aux414_INTEGER :: var_is_introduced ;
var bool: aux415_BOOL:: var_is_introduced ;
var {0,1}: aux415_INTEGER :: var_is_introduced ;
var bool: aux416_BOOL:: var_is_introduced ;
var {0,1}: aux416_INTEGER :: var_is_introduced ;
var bool: aux417_BOOL:: var_is_introduced ;
var {0,1}: aux417_INTEGER :: var_is_introduced ;
var bool: aux418_BOOL:: var_is_introduced ;
var {0,1}: aux418_INTEGER :: var_is_introduced ;
var bool: aux419_BOOL:: var_is_introduced ;
var {0,1}: aux419_INTEGER :: var_is_introduced ;
var bool: aux420_BOOL:: var_is_introduced ;
var {0,1}: aux420_INTEGER :: var_is_introduced ;
var bool: aux421_BOOL:: var_is_introduced ;
var {0,1}: aux421_INTEGER :: var_is_introduced ;
var bool: aux422_BOOL:: var_is_introduced ;
var {0,1}: aux422_INTEGER :: var_is_introduced ;
var bool: aux423_BOOL:: var_is_introduced ;
var {0,1}: aux423_INTEGER :: var_is_introduced ;
var bool: aux424_BOOL:: var_is_introduced ;
var {0,1}: aux424_INTEGER :: var_is_introduced ;
var bool: aux425_BOOL:: var_is_introduced ;
var {0,1}: aux425_INTEGER :: var_is_introduced ;
var bool: aux426_BOOL:: var_is_introduced ;
var {0,1}: aux426_INTEGER :: var_is_introduced ;
var bool: aux427_BOOL:: var_is_introduced ;
var {0,1}: aux427_INTEGER :: var_is_introduced ;
var bool: aux431_BOOL:: var_is_introduced ;
var {0,1}: aux431_INTEGER :: var_is_introduced ;
var bool: aux432_BOOL:: var_is_introduced ;
var {0,1}: aux432_INTEGER :: var_is_introduced ;
var bool: aux433_BOOL:: var_is_introduced ;
var {0,1}: aux433_INTEGER :: var_is_introduced ;
var bool: aux434_BOOL:: var_is_introduced ;
var {0,1}: aux434_INTEGER :: var_is_introduced ;
var bool: aux435_BOOL:: var_is_introduced ;
var {0,1}: aux435_INTEGER :: var_is_introduced ;
var bool: aux436_BOOL:: var_is_introduced ;
var {0,1}: aux436_INTEGER :: var_is_introduced ;
var bool: aux437_BOOL:: var_is_introduced ;
var {0,1}: aux437_INTEGER :: var_is_introduced ;
var bool: aux438_BOOL:: var_is_introduced ;
var {0,1}: aux438_INTEGER :: var_is_introduced ;
var bool: aux439_BOOL:: var_is_introduced ;
var {0,1}: aux439_INTEGER :: var_is_introduced ;
var bool: aux440_BOOL:: var_is_introduced ;
var {0,1}: aux440_INTEGER :: var_is_introduced ;
var bool: aux441_BOOL:: var_is_introduced ;
var {0,1}: aux441_INTEGER :: var_is_introduced ;
var bool: aux442_BOOL:: var_is_introduced ;
var {0,1}: aux442_INTEGER :: var_is_introduced ;
var bool: aux443_BOOL:: var_is_introduced ;
var {0,1}: aux443_INTEGER :: var_is_introduced ;
var bool: aux444_BOOL:: var_is_introduced ;
var {0,1}: aux444_INTEGER :: var_is_introduced ;
var bool: aux445_BOOL:: var_is_introduced ;
var {0,1}: aux445_INTEGER :: var_is_introduced ;
var bool: aux446_BOOL:: var_is_introduced ;
var {0,1}: aux446_INTEGER :: var_is_introduced ;
var bool: aux447_BOOL:: var_is_introduced ;
var {0,1}: aux447_INTEGER :: var_is_introduced ;
var bool: aux448_BOOL:: var_is_introduced ;
var {0,1}: aux448_INTEGER :: var_is_introduced ;
var bool: aux449_BOOL:: var_is_introduced ;
var {0,1}: aux449_INTEGER :: var_is_introduced ;
var bool: aux450_BOOL:: var_is_introduced ;
var {0,1}: aux450_INTEGER :: var_is_introduced ;
var bool: aux451_BOOL:: var_is_introduced ;
var {0,1}: aux451_INTEGER :: var_is_introduced ;
var bool: aux452_BOOL:: var_is_introduced ;
var {0,1}: aux452_INTEGER :: var_is_introduced ;
var bool: aux453_BOOL:: var_is_introduced ;
var {0,1}: aux453_INTEGER :: var_is_introduced ;
var bool: aux454_BOOL:: var_is_introduced ;
var {0,1}: aux454_INTEGER :: var_is_introduced ;
var bool: aux455_BOOL:: var_is_introduced ;
var {0,1}: aux455_INTEGER :: var_is_introduced ;
var bool: aux456_BOOL:: var_is_introduced ;
var {0,1}: aux456_INTEGER :: var_is_introduced ;
var bool: aux457_BOOL:: var_is_introduced ;
var {0,1}: aux457_INTEGER :: var_is_introduced ;
var bool: aux458_BOOL:: var_is_introduced ;
var {0,1}: aux458_INTEGER :: var_is_introduced ;
var bool: aux459_BOOL:: var_is_introduced ;
var {0,1}: aux459_INTEGER :: var_is_introduced ;
var bool: aux460_BOOL:: var_is_introduced ;
var {0,1}: aux460_INTEGER :: var_is_introduced ;
var bool: aux461_BOOL:: var_is_introduced ;
var {0,1}: aux461_INTEGER :: var_is_introduced ;
var bool: aux462_BOOL:: var_is_introduced ;
var {0,1}: aux462_INTEGER :: var_is_introduced ;
var bool: aux463_BOOL:: var_is_introduced ;
var {0,1}: aux463_INTEGER :: var_is_introduced ;
var bool: aux464_BOOL:: var_is_introduced ;
var {0,1}: aux464_INTEGER :: var_is_introduced ;
var bool: aux465_BOOL:: var_is_introduced ;
var {0,1}: aux465_INTEGER :: var_is_introduced ;
var bool: aux466_BOOL:: var_is_introduced ;
var {0,1}: aux466_INTEGER :: var_is_introduced ;
var bool: aux467_BOOL:: var_is_introduced ;
var {0,1}: aux467_INTEGER :: var_is_introduced ;
var bool: aux468_BOOL:: var_is_introduced ;
var {0,1}: aux468_INTEGER :: var_is_introduced ;
var bool: aux469_BOOL:: var_is_introduced ;
var {0,1}: aux469_INTEGER :: var_is_introduced ;
var bool: aux470_BOOL:: var_is_introduced ;
var {0,1}: aux470_INTEGER :: var_is_introduced ;
var bool: aux471_BOOL:: var_is_introduced ;
var {0,1}: aux471_INTEGER :: var_is_introduced ;
var bool: aux472_BOOL:: var_is_introduced ;
var {0,1}: aux472_INTEGER :: var_is_introduced ;
var bool: aux473_BOOL:: var_is_introduced ;
var {0,1}: aux473_INTEGER :: var_is_introduced ;
var bool: aux474_BOOL:: var_is_introduced ;
var {0,1}: aux474_INTEGER :: var_is_introduced ;
var bool: aux475_BOOL:: var_is_introduced ;
var {0,1}: aux475_INTEGER :: var_is_introduced ;
var bool: aux476_BOOL:: var_is_introduced ;
var {0,1}: aux476_INTEGER :: var_is_introduced ;
var bool: aux477_BOOL:: var_is_introduced ;
var {0,1}: aux477_INTEGER :: var_is_introduced ;
var bool: aux478_BOOL:: var_is_introduced ;
var {0,1}: aux478_INTEGER :: var_is_introduced ;
var bool: aux479_BOOL:: var_is_introduced ;
var {0,1}: aux479_INTEGER :: var_is_introduced ;
var bool: aux480_BOOL:: var_is_introduced ;
var {0,1}: aux480_INTEGER :: var_is_introduced ;
var bool: aux481_BOOL:: var_is_introduced ;
var {0,1}: aux481_INTEGER :: var_is_introduced ;
var bool: aux482_BOOL:: var_is_introduced ;
var {0,1}: aux482_INTEGER :: var_is_introduced ;
var bool: aux483_BOOL:: var_is_introduced ;
var {0,1}: aux483_INTEGER :: var_is_introduced ;
var bool: aux484_BOOL:: var_is_introduced ;
var {0,1}: aux484_INTEGER :: var_is_introduced ;
var bool: aux485_BOOL:: var_is_introduced ;
var {0,1}: aux485_INTEGER :: var_is_introduced ;
var bool: aux486_BOOL:: var_is_introduced ;
var {0,1}: aux486_INTEGER :: var_is_introduced ;
var bool: aux487_BOOL:: var_is_introduced ;
var {0,1}: aux487_INTEGER :: var_is_introduced ;
var bool: aux488_BOOL:: var_is_introduced ;
var bool: aux489_BOOL:: var_is_introduced ;
var bool: aux490_BOOL:: var_is_introduced ;
var {0,1}: aux490_INTEGER :: var_is_introduced ;
var bool: aux491_BOOL:: var_is_introduced ;
var bool: aux492_BOOL:: var_is_introduced ;
var bool: aux493_BOOL:: var_is_introduced ;
var {0,1}: aux493_INTEGER :: var_is_introduced ;
var bool: aux494_BOOL:: var_is_introduced ;
var bool: aux495_BOOL:: var_is_introduced ;
var bool: aux496_BOOL:: var_is_introduced ;
var {0,1}: aux496_INTEGER :: var_is_introduced ;
var bool: aux497_BOOL:: var_is_introduced ;
var bool: aux498_BOOL:: var_is_introduced ;
var bool: aux500_BOOL:: var_is_introduced ;
var bool: aux501_BOOL:: var_is_introduced ;
var bool: aux503_BOOL:: var_is_introduced ;
var bool: aux504_BOOL:: var_is_introduced ;
var bool: aux506_BOOL:: var_is_introduced ;
var bool: aux507_BOOL:: var_is_introduced ;
var bool: aux509_BOOL:: var_is_introduced ;
var {0,1}: aux509_INTEGER :: var_is_introduced ;
var bool: aux510_BOOL:: var_is_introduced ;
var {0,1}: aux510_INTEGER :: var_is_introduced ;
var bool: aux511_BOOL:: var_is_introduced ;
var {0,1}: aux511_INTEGER :: var_is_introduced ;
var bool: aux512_BOOL:: var_is_introduced ;
var {0,1}: aux512_INTEGER :: var_is_introduced ;
var bool: aux513_BOOL:: var_is_introduced ;
var {0,1}: aux513_INTEGER :: var_is_introduced ;
var bool: aux514_BOOL:: var_is_introduced ;
var {0,1}: aux514_INTEGER :: var_is_introduced ;
var bool: aux515_BOOL:: var_is_introduced ;
var {0,1}: aux515_INTEGER :: var_is_introduced ;
var bool: aux516_BOOL:: var_is_introduced ;
var {0,1}: aux516_INTEGER :: var_is_introduced ;
var bool: aux517_BOOL:: var_is_introduced ;
var {0,1}: aux517_INTEGER :: var_is_introduced ;
var bool: aux518_BOOL:: var_is_introduced ;
var {0,1}: aux518_INTEGER :: var_is_introduced ;
var bool: aux519_BOOL:: var_is_introduced ;
var {0,1}: aux519_INTEGER :: var_is_introduced ;
var bool: aux520_BOOL:: var_is_introduced ;
var {0,1}: aux520_INTEGER :: var_is_introduced ;
var bool: aux521_BOOL:: var_is_introduced ;
var bool: aux522_BOOL:: var_is_introduced ;
var bool: aux523_BOOL:: var_is_introduced ;
var {0,1}: aux523_INTEGER :: var_is_introduced ;
var bool: aux524_BOOL:: var_is_introduced ;
var bool: aux525_BOOL:: var_is_introduced ;
var bool: aux526_BOOL:: var_is_introduced ;
var {0,1}: aux526_INTEGER :: var_is_introduced ;
var bool: aux527_BOOL:: var_is_introduced ;
var bool: aux528_BOOL:: var_is_introduced ;
var bool: aux530_BOOL:: var_is_introduced ;
var bool: aux531_BOOL:: var_is_introduced ;
var bool: aux533_BOOL:: var_is_introduced ;
var bool: aux534_BOOL:: var_is_introduced ;
var bool: aux535_BOOL:: var_is_introduced ;
var {0,1}: aux535_INTEGER :: var_is_introduced ;
var bool: aux536_BOOL:: var_is_introduced ;
var bool: aux537_BOOL:: var_is_introduced ;
var bool: aux539_BOOL:: var_is_introduced ;
var bool: aux540_BOOL:: var_is_introduced ;
var bool: aux542_BOOL:: var_is_introduced ;
var {0,1}: aux542_INTEGER :: var_is_introduced ;
var bool: aux543_BOOL:: var_is_introduced ;
var {0,1}: aux543_INTEGER :: var_is_introduced ;
var bool: aux544_BOOL:: var_is_introduced ;
var {0,1}: aux544_INTEGER :: var_is_introduced ;
var bool: aux545_BOOL:: var_is_introduced ;
var {0,1}: aux545_INTEGER :: var_is_introduced ;
var bool: aux546_BOOL:: var_is_introduced ;
var {0,1}: aux546_INTEGER :: var_is_introduced ;
var bool: aux547_BOOL:: var_is_introduced ;
var {0,1}: aux547_INTEGER :: var_is_introduced ;
var bool: aux548_BOOL:: var_is_introduced ;
var {0,1}: aux548_INTEGER :: var_is_introduced ;
var bool: aux549_BOOL:: var_is_introduced ;
var {0,1}: aux549_INTEGER :: var_is_introduced ;
var bool: aux550_BOOL:: var_is_introduced ;
var {0,1}: aux550_INTEGER :: var_is_introduced ;
var bool: aux551_BOOL:: var_is_introduced ;
var {0,1}: aux551_INTEGER :: var_is_introduced ;
var bool: aux552_BOOL:: var_is_introduced ;
var {0,1}: aux552_INTEGER :: var_is_introduced ;
var bool: aux553_BOOL:: var_is_introduced ;
var {0,1}: aux553_INTEGER :: var_is_introduced ;
var bool: aux554_BOOL:: var_is_introduced ;
var {0,1}: aux554_INTEGER :: var_is_introduced ;
var bool: aux555_BOOL:: var_is_introduced ;
var {0,1}: aux555_INTEGER :: var_is_introduced ;
var bool: aux556_BOOL:: var_is_introduced ;
var {0,1}: aux556_INTEGER :: var_is_introduced ;
var bool: aux557_BOOL:: var_is_introduced ;
var {0,1}: aux557_INTEGER :: var_is_introduced ;
var bool: aux558_BOOL:: var_is_introduced ;
var {0,1}: aux558_INTEGER :: var_is_introduced ;
var bool: aux559_BOOL:: var_is_introduced ;
var {0,1}: aux559_INTEGER :: var_is_introduced ;
var bool: aux560_BOOL:: var_is_introduced ;
var {0,1}: aux560_INTEGER :: var_is_introduced ;
var bool: aux561_BOOL:: var_is_introduced ;
var {0,1}: aux561_INTEGER :: var_is_introduced ;
var bool: aux562_BOOL:: var_is_introduced ;
var {0,1}: aux562_INTEGER :: var_is_introduced ;
var bool: aux563_BOOL:: var_is_introduced ;
var {0,1}: aux563_INTEGER :: var_is_introduced ;
var bool: aux564_BOOL:: var_is_introduced ;
var {0,1}: aux564_INTEGER :: var_is_introduced ;
var bool: aux565_BOOL:: var_is_introduced ;
var {0,1}: aux565_INTEGER :: var_is_introduced ;
var bool: aux566_BOOL:: var_is_introduced ;
var {0,1}: aux566_INTEGER :: var_is_introduced ;
var bool: aux567_BOOL:: var_is_introduced ;
var {0,1}: aux567_INTEGER :: var_is_introduced ;
var bool: aux568_BOOL:: var_is_introduced ;
var {0,1}: aux568_INTEGER :: var_is_introduced ;
var bool: aux569_BOOL:: var_is_introduced ;
var {0,1}: aux569_INTEGER :: var_is_introduced ;
var bool: aux570_BOOL:: var_is_introduced ;
var {0,1}: aux570_INTEGER :: var_is_introduced ;
var bool: aux571_BOOL:: var_is_introduced ;
var {0,1}: aux571_INTEGER :: var_is_introduced ;
var bool: aux572_BOOL:: var_is_introduced ;
var {0,1}: aux572_INTEGER :: var_is_introduced ;
var bool: aux573_BOOL:: var_is_introduced ;
var {0,1}: aux573_INTEGER :: var_is_introduced ;
var bool: aux574_BOOL:: var_is_introduced ;
var {0,1}: aux574_INTEGER :: var_is_introduced ;
var bool: aux575_BOOL:: var_is_introduced ;
var {0,1}: aux575_INTEGER :: var_is_introduced ;
var bool: aux576_BOOL:: var_is_introduced ;
var {0,1}: aux576_INTEGER :: var_is_introduced ;
var bool: aux577_BOOL:: var_is_introduced ;
var {0,1}: aux577_INTEGER :: var_is_introduced ;
var bool: aux578_BOOL:: var_is_introduced ;
var {0,1}: aux578_INTEGER :: var_is_introduced ;
var bool: aux579_BOOL:: var_is_introduced ;
var {0,1}: aux579_INTEGER :: var_is_introduced ;
var bool: aux580_BOOL:: var_is_introduced ;
var {0,1}: aux580_INTEGER :: var_is_introduced ;
var bool: aux581_BOOL:: var_is_introduced ;
var {0,1}: aux581_INTEGER :: var_is_introduced ;
var bool: aux582_BOOL:: var_is_introduced ;
var {0,1}: aux582_INTEGER :: var_is_introduced ;
var bool: aux583_BOOL:: var_is_introduced ;
var {0,1}: aux583_INTEGER :: var_is_introduced ;
var bool: aux584_BOOL:: var_is_introduced ;
var {0,1}: aux584_INTEGER :: var_is_introduced ;
var bool: aux585_BOOL:: var_is_introduced ;
var {0,1}: aux585_INTEGER :: var_is_introduced ;
var bool: aux586_BOOL:: var_is_introduced ;
var {0,1}: aux586_INTEGER :: var_is_introduced ;
var bool: aux587_BOOL:: var_is_introduced ;
var {0,1}: aux587_INTEGER :: var_is_introduced ;
var bool: aux588_BOOL:: var_is_introduced ;
var bool: aux589_BOOL:: var_is_introduced ;
var bool: aux590_BOOL:: var_is_introduced ;
var {0,1}: aux590_INTEGER :: var_is_introduced ;
var bool: aux591_BOOL:: var_is_introduced ;
var bool: aux592_BOOL:: var_is_introduced ;
var bool: aux594_BOOL:: var_is_introduced ;
var bool: aux595_BOOL:: var_is_introduced ;
var bool: aux596_BOOL:: var_is_introduced ;
var {0,1}: aux596_INTEGER :: var_is_introduced ;
var bool: aux597_BOOL:: var_is_introduced ;
var {0,1}: aux597_INTEGER :: var_is_introduced ;
var bool: aux598_BOOL:: var_is_introduced ;
var {0,1}: aux598_INTEGER :: var_is_introduced ;
var bool: aux599_BOOL:: var_is_introduced ;
var {0,1}: aux599_INTEGER :: var_is_introduced ;
var bool: aux600_BOOL:: var_is_introduced ;
var {0,1}: aux600_INTEGER :: var_is_introduced ;
var bool: aux601_BOOL:: var_is_introduced ;
var {0,1}: aux601_INTEGER :: var_is_introduced ;
var bool: aux602_BOOL:: var_is_introduced ;
var {0,1}: aux602_INTEGER :: var_is_introduced ;
var bool: aux603_BOOL:: var_is_introduced ;
var {0,1}: aux603_INTEGER :: var_is_introduced ;
var bool: aux604_BOOL:: var_is_introduced ;
var {0,1}: aux604_INTEGER :: var_is_introduced ;
var bool: aux605_BOOL:: var_is_introduced ;
var {0,1}: aux605_INTEGER :: var_is_introduced ;
var bool: aux606_BOOL:: var_is_introduced ;
var {0,1}: aux606_INTEGER :: var_is_introduced ;
var bool: aux607_BOOL:: var_is_introduced ;
var {0,1}: aux607_INTEGER :: var_is_introduced ;
var bool: aux608_BOOL:: var_is_introduced ;
var {0,1}: aux608_INTEGER :: var_is_introduced ;
var bool: aux609_BOOL:: var_is_introduced ;
var {0,1}: aux609_INTEGER :: var_is_introduced ;
var bool: aux610_BOOL:: var_is_introduced ;
var {0,1}: aux610_INTEGER :: var_is_introduced ;
var bool: aux611_BOOL:: var_is_introduced ;
var {0,1}: aux611_INTEGER :: var_is_introduced ;
var bool: aux612_BOOL:: var_is_introduced ;
var {0,1}: aux612_INTEGER :: var_is_introduced ;
var bool: aux613_BOOL:: var_is_introduced ;
var bool: aux614_BOOL:: var_is_introduced ;
var bool: aux615_BOOL:: var_is_introduced ;
var {0,1}: aux615_INTEGER :: var_is_introduced ;
var bool: aux616_BOOL:: var_is_introduced ;
var bool: aux617_BOOL:: var_is_introduced ;
var bool: aux618_BOOL:: var_is_introduced ;
var {0,1}: aux618_INTEGER :: var_is_introduced ;
var bool: aux619_BOOL:: var_is_introduced ;
var bool: aux620_BOOL:: var_is_introduced ;
var bool: aux621_BOOL:: var_is_introduced ;
var {0,1}: aux621_INTEGER :: var_is_introduced ;
var bool: aux622_BOOL:: var_is_introduced ;
var {0,1}: aux622_INTEGER :: var_is_introduced ;
var bool: aux623_BOOL:: var_is_introduced ;
var {0,1}: aux623_INTEGER :: var_is_introduced ;
var bool: aux624_BOOL:: var_is_introduced ;
var {0,1}: aux624_INTEGER :: var_is_introduced ;
var bool: aux625_BOOL:: var_is_introduced ;
var {0,1}: aux625_INTEGER :: var_is_introduced ;
var bool: aux626_BOOL:: var_is_introduced ;
var {0,1}: aux626_INTEGER :: var_is_introduced ;
var bool: aux627_BOOL:: var_is_introduced ;
var {0,1}: aux627_INTEGER :: var_is_introduced ;
var bool: aux628_BOOL:: var_is_introduced ;
var {0,1}: aux628_INTEGER :: var_is_introduced ;
var bool: aux629_BOOL:: var_is_introduced ;
var {0,1}: aux629_INTEGER :: var_is_introduced ;
var bool: aux630_BOOL:: var_is_introduced ;
var {0,1}: aux630_INTEGER :: var_is_introduced ;
var bool: aux631_BOOL:: var_is_introduced ;
var {0,1}: aux631_INTEGER :: var_is_introduced ;
var bool: aux632_BOOL:: var_is_introduced ;
var {0,1}: aux632_INTEGER :: var_is_introduced ;
var bool: aux633_BOOL:: var_is_introduced ;
var {0,1}: aux633_INTEGER :: var_is_introduced ;
var bool: aux634_BOOL:: var_is_introduced ;
var bool: aux635_BOOL:: var_is_introduced ;
var bool: aux636_BOOL:: var_is_introduced ;
var bool: aux637_BOOL:: var_is_introduced ;
var bool: aux638_BOOL:: var_is_introduced ;
var bool: aux639_BOOL:: var_is_introduced ;
var bool: aux640_BOOL:: var_is_introduced ;
var bool: aux641_BOOL:: var_is_introduced ;
var bool: aux642_BOOL:: var_is_introduced ;
var bool: aux643_BOOL:: var_is_introduced ;
var bool: aux644_BOOL:: var_is_introduced ;
var bool: aux645_BOOL:: var_is_introduced ;
var bool: aux646_BOOL:: var_is_introduced ;
var bool: aux647_BOOL:: var_is_introduced ;
var bool: aux648_BOOL:: var_is_introduced ;
var bool: aux649_BOOL:: var_is_introduced ;
var bool: aux650_BOOL:: var_is_introduced ;
var bool: aux651_BOOL:: var_is_introduced ;
var bool: aux652_BOOL:: var_is_introduced ;
var bool: aux653_BOOL:: var_is_introduced ;
var bool: aux654_BOOL:: var_is_introduced ;
var bool: aux655_BOOL:: var_is_introduced ;
var bool: aux656_BOOL:: var_is_introduced ;
var bool: aux657_BOOL:: var_is_introduced ;
var bool: aux658_BOOL:: var_is_introduced ;
var bool: aux659_BOOL:: var_is_introduced ;
var bool: aux660_BOOL:: var_is_introduced ;
var bool: aux661_BOOL:: var_is_introduced ;
var bool: aux662_BOOL:: var_is_introduced ;
var bool: aux663_BOOL:: var_is_introduced ;
var bool: aux664_BOOL:: var_is_introduced ;
var bool: aux665_BOOL:: var_is_introduced ;
var bool: aux666_BOOL:: var_is_introduced ;
var bool: aux667_BOOL:: var_is_introduced ;
var bool: aux668_BOOL:: var_is_introduced ;
var bool: aux669_BOOL:: var_is_introduced ;
var bool: aux670_BOOL:: var_is_introduced ;
var bool: aux671_BOOL:: var_is_introduced ;
var bool: aux672_BOOL:: var_is_introduced ;
var bool: aux673_BOOL:: var_is_introduced ;
var bool: aux674_BOOL:: var_is_introduced ;
var bool: aux675_BOOL:: var_is_introduced ;
var bool: aux676_BOOL:: var_is_introduced ;
var bool: aux677_BOOL:: var_is_introduced ;
var bool: aux678_BOOL:: var_is_introduced ;
var bool: aux679_BOOL:: var_is_introduced ;
var bool: aux680_BOOL:: var_is_introduced ;
var bool: aux681_BOOL:: var_is_introduced ;
var bool: aux682_BOOL:: var_is_introduced ;
var bool: aux683_BOOL:: var_is_introduced ;
var bool: aux684_BOOL:: var_is_introduced ;
var bool: aux685_BOOL:: var_is_introduced ;
var bool: aux686_BOOL:: var_is_introduced ;
var bool: aux687_BOOL:: var_is_introduced ;
var bool: aux688_BOOL:: var_is_introduced ;
var bool: aux689_BOOL:: var_is_introduced ;
var bool: aux690_BOOL:: var_is_introduced ;
var bool: aux691_BOOL:: var_is_introduced ;
var bool: aux692_BOOL:: var_is_introduced ;
var bool: aux693_BOOL:: var_is_introduced ;
var bool: aux694_BOOL:: var_is_introduced ;
var bool: aux695_BOOL:: var_is_introduced ;
var bool: aux696_BOOL:: var_is_introduced ;
var bool: aux697_BOOL:: var_is_introduced ;
var bool: aux698_BOOL:: var_is_introduced ;
var bool: aux699_BOOL:: var_is_introduced ;
var bool: aux700_BOOL:: var_is_introduced ;
var bool: aux701_BOOL:: var_is_introduced ;
var bool: aux702_BOOL:: var_is_introduced ;
var bool: aux703_BOOL:: var_is_introduced ;
var bool: aux704_BOOL:: var_is_introduced ;
var bool: aux705_BOOL:: var_is_introduced ;
var bool: aux706_BOOL:: var_is_introduced ;
var bool: aux707_BOOL:: var_is_introduced ;
var bool: aux708_BOOL:: var_is_introduced ;
var bool: aux709_BOOL:: var_is_introduced ;
var bool: aux710_BOOL:: var_is_introduced ;
var bool: aux711_BOOL:: var_is_introduced ;
var bool: aux712_BOOL:: var_is_introduced ;
var bool: aux713_BOOL:: var_is_introduced ;
var bool: aux714_BOOL:: var_is_introduced ;
var bool: aux715_BOOL:: var_is_introduced ;
var bool: aux716_BOOL:: var_is_introduced ;
var bool: aux717_BOOL:: var_is_introduced ;
var bool: aux718_BOOL:: var_is_introduced ;
var bool: aux719_BOOL:: var_is_introduced ;
var bool: aux720_BOOL:: var_is_introduced ;
var bool: aux721_BOOL:: var_is_introduced ;
var bool: aux722_BOOL:: var_is_introduced ;
var bool: aux723_BOOL:: var_is_introduced ;
var bool: aux724_BOOL:: var_is_introduced ;
var bool: aux725_BOOL:: var_is_introduced ;
var bool: aux726_BOOL:: var_is_introduced ;
var bool: aux727_BOOL:: var_is_introduced ;
var bool: aux728_BOOL:: var_is_introduced ;
var bool: aux729_BOOL:: var_is_introduced ;
var bool: aux730_BOOL:: var_is_introduced ;
var bool: aux731_BOOL:: var_is_introduced ;
var bool: aux732_BOOL:: var_is_introduced ;
var bool: aux733_BOOL:: var_is_introduced ;
var bool: aux734_BOOL:: var_is_introduced ;
var bool: aux735_BOOL:: var_is_introduced ;
var bool: aux736_BOOL:: var_is_introduced ;
var bool: aux737_BOOL:: var_is_introduced ;
var bool: aux738_BOOL:: var_is_introduced ;
var bool: aux739_BOOL:: var_is_introduced ;
var bool: aux740_BOOL:: var_is_introduced ;
var bool: aux741_BOOL:: var_is_introduced ;
var bool: aux742_BOOL:: var_is_introduced ;
var bool: aux743_BOOL:: var_is_introduced ;
var bool: aux744_BOOL:: var_is_introduced ;
var bool: aux745_BOOL:: var_is_introduced ;
var bool: aux746_BOOL:: var_is_introduced ;
var bool: aux747_BOOL:: var_is_introduced ;
var bool: aux748_BOOL:: var_is_introduced ;
var bool: aux749_BOOL:: var_is_introduced ;
var bool: aux750_BOOL:: var_is_introduced ;
var bool: aux751_BOOL:: var_is_introduced ;
var bool: aux752_BOOL:: var_is_introduced ;
var bool: aux753_BOOL:: var_is_introduced ;
var bool: aux754_BOOL:: var_is_introduced ;
var bool: aux755_BOOL:: var_is_introduced ;
var bool: aux756_BOOL:: var_is_introduced ;
var bool: aux757_BOOL:: var_is_introduced ;
var bool: aux758_BOOL:: var_is_introduced ;
var bool: aux759_BOOL:: var_is_introduced ;
var bool: aux760_BOOL:: var_is_introduced ;
var bool: aux761_BOOL:: var_is_introduced ;
var bool: aux762_BOOL:: var_is_introduced ;
var bool: aux763_BOOL:: var_is_introduced ;
var bool: aux764_BOOL:: var_is_introduced ;
var bool: aux765_BOOL:: var_is_introduced ;
var bool: aux766_BOOL:: var_is_introduced ;
var bool: aux767_BOOL:: var_is_introduced ;
var bool: aux768_BOOL:: var_is_introduced ;
var bool: aux769_BOOL:: var_is_introduced ;
var bool: aux770_BOOL:: var_is_introduced ;
var bool: aux771_BOOL:: var_is_introduced ;
var bool: aux772_BOOL:: var_is_introduced ;
var bool: aux773_BOOL:: var_is_introduced ;
var bool: aux774_BOOL:: var_is_introduced ;
var bool: aux775_BOOL:: var_is_introduced ;
var bool: aux776_BOOL:: var_is_introduced ;
var bool: aux777_BOOL:: var_is_introduced ;
var bool: aux778_BOOL:: var_is_introduced ;
var bool: aux779_BOOL:: var_is_introduced ;
var bool: aux780_BOOL:: var_is_introduced ;
var bool: aux781_BOOL:: var_is_introduced ;
var bool: aux782_BOOL:: var_is_introduced ;
var bool: aux783_BOOL:: var_is_introduced ;
var bool: aux784_BOOL:: var_is_introduced ;
var bool: aux785_BOOL:: var_is_introduced ;
var bool: aux786_BOOL:: var_is_introduced ;
var bool: aux787_BOOL:: var_is_introduced ;
var bool: aux788_BOOL:: var_is_introduced ;
var bool: aux789_BOOL:: var_is_introduced ;
var bool: aux790_BOOL:: var_is_introduced ;
var bool: aux791_BOOL:: var_is_introduced ;
var bool: aux792_BOOL:: var_is_introduced ;
var bool: aux793_BOOL:: var_is_introduced ;
var bool: aux794_BOOL:: var_is_introduced ;
var bool: aux795_BOOL:: var_is_introduced ;
var bool: aux796_BOOL:: var_is_introduced ;
var bool: aux797_BOOL:: var_is_introduced ;
var bool: aux798_BOOL:: var_is_introduced ;
var bool: aux799_BOOL:: var_is_introduced ;
var bool: aux800_BOOL:: var_is_introduced ;
var bool: aux801_BOOL:: var_is_introduced ;
var bool: aux802_BOOL:: var_is_introduced ;
var bool: aux803_BOOL:: var_is_introduced ;
var bool: aux804_BOOL:: var_is_introduced ;
var bool: aux805_BOOL:: var_is_introduced ;
var bool: aux806_BOOL:: var_is_introduced ;
var bool: aux807_BOOL:: var_is_introduced ;
var bool: aux808_BOOL:: var_is_introduced ;
var bool: aux809_BOOL:: var_is_introduced ;
var bool: aux810_BOOL:: var_is_introduced ;
var bool: aux811_BOOL:: var_is_introduced ;
var bool: aux812_BOOL:: var_is_introduced ;
var bool: aux813_BOOL:: var_is_introduced ;
var bool: aux814_BOOL:: var_is_introduced ;
var bool: aux815_BOOL:: var_is_introduced ;
var bool: aux816_BOOL:: var_is_introduced ;
var bool: aux817_BOOL:: var_is_introduced ;
var bool: aux818_BOOL:: var_is_introduced ;
var bool: aux819_BOOL:: var_is_introduced ;
var bool: aux820_BOOL:: var_is_introduced ;
var bool: aux821_BOOL:: var_is_introduced ;
var bool: aux822_BOOL:: var_is_introduced ;
var bool: aux823_BOOL:: var_is_introduced ;
var bool: aux824_BOOL:: var_is_introduced ;
var bool: aux825_BOOL:: var_is_introduced ;
var bool: aux826_BOOL:: var_is_introduced ;
var bool: aux827_BOOL:: var_is_introduced ;
var bool: aux828_BOOL:: var_is_introduced ;
var bool: aux829_BOOL:: var_is_introduced ;
var bool: aux830_BOOL:: var_is_introduced ;
var bool: aux831_BOOL:: var_is_introduced ;
var bool: aux832_BOOL:: var_is_introduced ;
var bool: aux833_BOOL:: var_is_introduced ;
var bool: aux834_BOOL:: var_is_introduced ;
var bool: aux835_BOOL:: var_is_introduced ;
var bool: aux836_BOOL:: var_is_introduced ;
var bool: aux837_BOOL:: var_is_introduced ;
var bool: aux838_BOOL:: var_is_introduced ;
var bool: aux839_BOOL:: var_is_introduced ;
var bool: aux840_BOOL:: var_is_introduced ;
var bool: aux841_BOOL:: var_is_introduced ;
var bool: aux842_BOOL:: var_is_introduced ;
var bool: aux843_BOOL:: var_is_introduced ;
var bool: aux844_BOOL:: var_is_introduced ;
var bool: aux845_BOOL:: var_is_introduced ;
var bool: aux846_BOOL:: var_is_introduced ;
var bool: aux847_BOOL:: var_is_introduced ;
var bool: aux848_BOOL:: var_is_introduced ;
var bool: aux849_BOOL:: var_is_introduced ;
var bool: aux850_BOOL:: var_is_introduced ;
var bool: aux851_BOOL:: var_is_introduced ;
var bool: aux852_BOOL:: var_is_introduced ;
var bool: aux853_BOOL:: var_is_introduced ;
var bool: aux854_BOOL:: var_is_introduced ;
var bool: aux855_BOOL:: var_is_introduced ;
var bool: aux856_BOOL:: var_is_introduced ;
var bool: aux857_BOOL:: var_is_introduced ;
var bool: aux858_BOOL:: var_is_introduced ;
var bool: aux859_BOOL:: var_is_introduced ;
var bool: aux860_BOOL:: var_is_introduced ;
var bool: aux861_BOOL:: var_is_introduced ;
var bool: aux862_BOOL:: var_is_introduced ;
var bool: aux863_BOOL:: var_is_introduced ;
var bool: aux864_BOOL:: var_is_introduced ;
var bool: aux865_BOOL:: var_is_introduced ;
var bool: aux866_BOOL:: var_is_introduced ;
var bool: aux867_BOOL:: var_is_introduced ;
var bool: aux868_BOOL:: var_is_introduced ;
var bool: aux869_BOOL:: var_is_introduced ;
var bool: aux870_BOOL:: var_is_introduced ;
var bool: aux871_BOOL:: var_is_introduced ;
var bool: aux872_BOOL:: var_is_introduced ;
var bool: aux873_BOOL:: var_is_introduced ;
var bool: aux874_BOOL:: var_is_introduced ;
var bool: aux875_BOOL:: var_is_introduced ;
var bool: aux876_BOOL:: var_is_introduced ;
var bool: aux877_BOOL:: var_is_introduced ;
var bool: aux878_BOOL:: var_is_introduced ;
var bool: aux879_BOOL:: var_is_introduced ;
var bool: aux880_BOOL:: var_is_introduced ;
var bool: aux881_BOOL:: var_is_introduced ;
var bool: aux882_BOOL:: var_is_introduced ;
var bool: aux883_BOOL:: var_is_introduced ;
var bool: aux884_BOOL:: var_is_introduced ;
var bool: aux885_BOOL:: var_is_introduced ;
var bool: aux886_BOOL:: var_is_introduced ;
var bool: aux887_BOOL:: var_is_introduced ;
var bool: aux888_BOOL:: var_is_introduced ;
var bool: aux889_BOOL:: var_is_introduced ;
var bool: aux890_BOOL:: var_is_introduced ;
var bool: aux891_BOOL:: var_is_introduced ;
var bool: aux892_BOOL:: var_is_introduced ;
var bool: aux893_BOOL:: var_is_introduced ;
var bool: aux894_BOOL:: var_is_introduced ;
var bool: aux895_BOOL:: var_is_introduced ;
var bool: aux896_BOOL:: var_is_introduced ;
var bool: aux897_BOOL:: var_is_introduced ;
var bool: aux898_BOOL:: var_is_introduced ;
var bool: aux899_BOOL:: var_is_introduced ;
var bool: aux900_BOOL:: var_is_introduced ;
var bool: aux901_BOOL:: var_is_introduced ;
var bool: aux902_BOOL:: var_is_introduced ;
var bool: aux903_BOOL:: var_is_introduced ;
var bool: aux904_BOOL:: var_is_introduced ;
var bool: aux905_BOOL:: var_is_introduced ;
var bool: aux906_BOOL:: var_is_introduced ;
var bool: aux907_BOOL:: var_is_introduced ;
var bool: aux908_BOOL:: var_is_introduced ;
var bool: aux909_BOOL:: var_is_introduced ;
var bool: aux910_BOOL:: var_is_introduced ;
var bool: aux911_BOOL:: var_is_introduced ;
var bool: aux912_BOOL:: var_is_introduced ;
var bool: aux913_BOOL:: var_is_introduced ;
var bool: aux914_BOOL:: var_is_introduced ;
var bool: aux915_BOOL:: var_is_introduced ;
var bool: aux916_BOOL:: var_is_introduced ;
var bool: aux917_BOOL:: var_is_introduced ;
var bool: aux918_BOOL:: var_is_introduced ;
var bool: aux919_BOOL:: var_is_introduced ;
var bool: aux920_BOOL:: var_is_introduced ;
var bool: aux921_BOOL:: var_is_introduced ;
var bool: aux922_BOOL:: var_is_introduced ;
var bool: aux923_BOOL:: var_is_introduced ;
var bool: aux924_BOOL:: var_is_introduced ;
var bool: aux925_BOOL:: var_is_introduced ;
var bool: aux926_BOOL:: var_is_introduced ;
var bool: aux927_BOOL:: var_is_introduced ;
var bool: aux928_BOOL:: var_is_introduced ;
var bool: aux929_BOOL:: var_is_introduced ;
var bool: aux930_BOOL:: var_is_introduced ;
var bool: aux931_BOOL:: var_is_introduced ;
var bool: aux932_BOOL:: var_is_introduced ;
var bool: aux933_BOOL:: var_is_introduced ;
var bool: aux934_BOOL:: var_is_introduced ;
var bool: aux935_BOOL:: var_is_introduced ;
var bool: aux936_BOOL:: var_is_introduced ;
var bool: aux937_BOOL:: var_is_introduced ;
var bool: aux938_BOOL:: var_is_introduced ;
var bool: aux939_BOOL:: var_is_introduced ;
var bool: aux940_BOOL:: var_is_introduced ;
var bool: aux941_BOOL:: var_is_introduced ;
var bool: aux942_BOOL:: var_is_introduced ;
var bool: aux943_BOOL:: var_is_introduced ;
var bool: aux944_BOOL:: var_is_introduced ;
var bool: aux945_BOOL:: var_is_introduced ;
var bool: aux946_BOOL:: var_is_introduced ;
var bool: aux947_BOOL:: var_is_introduced ;
var bool: aux948_BOOL:: var_is_introduced ;
var bool: aux949_BOOL:: var_is_introduced ;
var bool: aux950_BOOL:: var_is_introduced ;
var bool: aux951_BOOL:: var_is_introduced ;
var bool: aux952_BOOL:: var_is_introduced ;
var bool: aux953_BOOL:: var_is_introduced ;
var bool: aux954_BOOL:: var_is_introduced ;
var bool: aux955_BOOL:: var_is_introduced ;
var bool: aux956_BOOL:: var_is_introduced ;
var bool: aux957_BOOL:: var_is_introduced ;
var bool: aux958_BOOL:: var_is_introduced ;
var bool: aux959_BOOL:: var_is_introduced ;
var bool: aux960_BOOL:: var_is_introduced ;
var bool: aux961_BOOL:: var_is_introduced ;
var bool: aux962_BOOL:: var_is_introduced ;
var bool: aux963_BOOL:: var_is_introduced ;
var bool: aux964_BOOL:: var_is_introduced ;
var bool: aux965_BOOL:: var_is_introduced ;
var bool: aux966_BOOL:: var_is_introduced ;
var bool: aux967_BOOL:: var_is_introduced ;
var bool: aux968_BOOL:: var_is_introduced ;
var bool: aux969_BOOL:: var_is_introduced ;
var bool: aux970_BOOL:: var_is_introduced ;
var bool: aux971_BOOL:: var_is_introduced ;
var bool: aux972_BOOL:: var_is_introduced ;
var bool: aux973_BOOL:: var_is_introduced ;
var bool: aux974_BOOL:: var_is_introduced ;
var bool: aux975_BOOL:: var_is_introduced ;
var bool: aux976_BOOL:: var_is_introduced ;
var bool: aux977_BOOL:: var_is_introduced ;
var bool: aux978_BOOL:: var_is_introduced ;
var bool: aux979_BOOL:: var_is_introduced ;
var bool: aux980_BOOL:: var_is_introduced ;
var bool: aux981_BOOL:: var_is_introduced ;
var bool: aux982_BOOL:: var_is_introduced ;
var bool: aux983_BOOL:: var_is_introduced ;
var bool: aux984_BOOL:: var_is_introduced ;
var bool: aux985_BOOL:: var_is_introduced ;
var bool: aux986_BOOL:: var_is_introduced ;
var bool: aux987_BOOL:: var_is_introduced ;
var bool: aux988_BOOL:: var_is_introduced ;
var bool: aux989_BOOL:: var_is_introduced ;
var bool: aux990_BOOL:: var_is_introduced ;
var bool: aux991_BOOL:: var_is_introduced ;
var bool: aux992_BOOL:: var_is_introduced ;
var bool: aux993_BOOL:: var_is_introduced ;
var bool: aux994_BOOL:: var_is_introduced ;
var bool: aux995_BOOL:: var_is_introduced ;
var bool: aux996_BOOL:: var_is_introduced ;
var bool: aux997_BOOL:: var_is_introduced ;
var bool: aux998_BOOL:: var_is_introduced ;
var bool: aux999_BOOL:: var_is_introduced ;
var bool: aux1000_BOOL:: var_is_introduced ;
var bool: aux1001_BOOL:: var_is_introduced ;
var bool: aux1002_BOOL:: var_is_introduced ;
var bool: aux1003_BOOL:: var_is_introduced ;
var bool: aux1004_BOOL:: var_is_introduced ;
var bool: aux1005_BOOL:: var_is_introduced ;
var bool: aux1006_BOOL:: var_is_introduced ;
var bool: aux1007_BOOL:: var_is_introduced ;
var bool: aux1008_BOOL:: var_is_introduced ;
var bool: aux1009_BOOL:: var_is_introduced ;
var bool: aux1010_BOOL:: var_is_introduced ;
var {0,1}: aux1010_INTEGER :: var_is_introduced ;
var bool: aux1011_BOOL:: var_is_introduced ;
var {0,1}: aux1011_INTEGER :: var_is_introduced ;
var bool: aux1012_BOOL:: var_is_introduced ;
var {0,1}: aux1012_INTEGER :: var_is_introduced ;
var bool: aux1013_BOOL:: var_is_introduced ;
var {0,1}: aux1013_INTEGER :: var_is_introduced ;
var bool: aux1014_BOOL:: var_is_introduced ;
var {0,1}: aux1014_INTEGER :: var_is_introduced ;
var bool: aux1015_BOOL:: var_is_introduced ;
var {0,1}: aux1015_INTEGER :: var_is_introduced ;
var bool: aux1016_BOOL:: var_is_introduced ;
var {0,1}: aux1016_INTEGER :: var_is_introduced ;
var bool: aux1017_BOOL:: var_is_introduced ;
var {0,1}: aux1017_INTEGER :: var_is_introduced ;
var bool: aux1018_BOOL:: var_is_introduced ;
var bool: aux1019_BOOL:: var_is_introduced ;
var bool: aux1020_BOOL:: var_is_introduced ;
var bool: aux1021_BOOL:: var_is_introduced ;
var bool: aux1022_BOOL:: var_is_introduced ;
var bool: aux1023_BOOL:: var_is_introduced ;
var bool: aux1024_BOOL:: var_is_introduced ;
var bool: aux1025_BOOL:: var_is_introduced ;
var bool: aux1026_BOOL:: var_is_introduced ;
var bool: aux1027_BOOL:: var_is_introduced ;
var bool: aux1028_BOOL:: var_is_introduced ;
var bool: aux1029_BOOL:: var_is_introduced ;
var bool: aux1030_BOOL:: var_is_introduced ;
var bool: aux1031_BOOL:: var_is_introduced ;
var bool: aux1032_BOOL:: var_is_introduced ;
var bool: aux1033_BOOL:: var_is_introduced ;
var bool: aux1034_BOOL:: var_is_introduced ;
var bool: aux1035_BOOL:: var_is_introduced ;
var bool: aux1036_BOOL:: var_is_introduced ;
var bool: aux1037_BOOL:: var_is_introduced ;
var bool: aux1038_BOOL:: var_is_introduced ;
var bool: aux1039_BOOL:: var_is_introduced ;
var bool: aux1040_BOOL:: var_is_introduced ;
var bool: aux1041_BOOL:: var_is_introduced ;
var bool: aux1042_BOOL:: var_is_introduced ;
var bool: aux1043_BOOL:: var_is_introduced ;
var bool: aux1044_BOOL:: var_is_introduced ;
var bool: aux1045_BOOL:: var_is_introduced ;
var bool: aux1046_BOOL:: var_is_introduced ;
var bool: aux1047_BOOL:: var_is_introduced ;
var bool: aux1048_BOOL:: var_is_introduced ;
var bool: aux1049_BOOL:: var_is_introduced ;
var bool: aux1050_BOOL:: var_is_introduced ;
var bool: aux1051_BOOL:: var_is_introduced ;
var bool: aux1052_BOOL:: var_is_introduced ;
var bool: aux1053_BOOL:: var_is_introduced ;
var bool: aux1054_BOOL:: var_is_introduced ;
var bool: aux1055_BOOL:: var_is_introduced ;
var bool: aux1056_BOOL:: var_is_introduced ;
var bool: aux1057_BOOL:: var_is_introduced ;
var bool: aux1058_BOOL:: var_is_introduced ;
var bool: aux1059_BOOL:: var_is_introduced ;
var bool: aux1060_BOOL:: var_is_introduced ;
var bool: aux1061_BOOL:: var_is_introduced ;
var bool: aux1062_BOOL:: var_is_introduced ;
var bool: aux1063_BOOL:: var_is_introduced ;
var bool: aux1064_BOOL:: var_is_introduced ;
var bool: aux1065_BOOL:: var_is_introduced ;
var bool: aux1066_BOOL:: var_is_introduced ;
var bool: aux1067_BOOL:: var_is_introduced ;
var bool: aux1068_BOOL:: var_is_introduced ;
var bool: aux1069_BOOL:: var_is_introduced ;
var bool: aux1070_BOOL:: var_is_introduced ;
var bool: aux1071_BOOL:: var_is_introduced ;
var bool: aux1072_BOOL:: var_is_introduced ;
var bool: aux1073_BOOL:: var_is_introduced ;
var bool: aux1074_BOOL:: var_is_introduced ;
var bool: aux1075_BOOL:: var_is_introduced ;
var bool: aux1076_BOOL:: var_is_introduced ;
var bool: aux1077_BOOL:: var_is_introduced ;
var bool: aux1078_BOOL:: var_is_introduced ;
var bool: aux1079_BOOL:: var_is_introduced ;
var bool: aux1080_BOOL:: var_is_introduced ;
var bool: aux1081_BOOL:: var_is_introduced ;
var bool: aux1082_BOOL:: var_is_introduced ;
var bool: aux1083_BOOL:: var_is_introduced ;
var bool: aux1084_BOOL:: var_is_introduced ;
var bool: aux1085_BOOL:: var_is_introduced ;
var bool: aux1086_BOOL:: var_is_introduced ;
var {0,1}: aux1086_INTEGER :: var_is_introduced ;
var bool: aux1087_BOOL:: var_is_introduced ;
var {0,1}: aux1087_INTEGER :: var_is_introduced ;
var bool: aux1088_BOOL:: var_is_introduced ;
var {0,1}: aux1088_INTEGER :: var_is_introduced ;
var bool: aux1089_BOOL:: var_is_introduced ;
var {0,1}: aux1089_INTEGER :: var_is_introduced ;
var bool: aux1090_BOOL:: var_is_introduced ;
var {0,1}: aux1090_INTEGER :: var_is_introduced ;
var bool: aux1091_BOOL:: var_is_introduced ;
var {0,1}: aux1091_INTEGER :: var_is_introduced ;
var bool: aux1092_BOOL:: var_is_introduced ;
var {0,1}: aux1092_INTEGER :: var_is_introduced ;
var bool: aux1093_BOOL:: var_is_introduced ;
var {0,1}: aux1093_INTEGER :: var_is_introduced ;
var bool: aux1094_BOOL:: var_is_introduced ;
var {0,1}: aux1094_INTEGER :: var_is_introduced ;
var bool: aux1095_BOOL:: var_is_introduced ;
var {0,1}: aux1095_INTEGER :: var_is_introduced ;
var bool: aux1096_BOOL:: var_is_introduced ;
var {0,1}: aux1096_INTEGER :: var_is_introduced ;
var bool: aux1097_BOOL:: var_is_introduced ;
var {0,1}: aux1097_INTEGER :: var_is_introduced ;
var bool: aux1098_BOOL:: var_is_introduced ;
var {0,1}: aux1098_INTEGER :: var_is_introduced ;
var bool: aux1099_BOOL:: var_is_introduced ;
var {0,1}: aux1099_INTEGER :: var_is_introduced ;
var bool: aux1100_BOOL:: var_is_introduced ;
var {0,1}: aux1100_INTEGER :: var_is_introduced ;
var bool: aux1101_BOOL:: var_is_introduced ;
var {0,1}: aux1101_INTEGER :: var_is_introduced ;
var bool: aux1102_BOOL:: var_is_introduced ;
var {0,1}: aux1102_INTEGER :: var_is_introduced ;
var bool: aux1103_BOOL:: var_is_introduced ;
var {0,1}: aux1103_INTEGER :: var_is_introduced ;
var bool: aux1104_BOOL:: var_is_introduced ;
var {0,1}: aux1104_INTEGER :: var_is_introduced ;
var bool: aux1105_BOOL:: var_is_introduced ;
var {0,1}: aux1105_INTEGER :: var_is_introduced ;
var bool: aux1106_BOOL:: var_is_introduced ;
var {0,1}: aux1106_INTEGER :: var_is_introduced ;
var bool: aux1107_BOOL:: var_is_introduced ;
var {0,1}: aux1107_INTEGER :: var_is_introduced ;
var bool: aux1108_BOOL:: var_is_introduced ;
var {0,1}: aux1108_INTEGER :: var_is_introduced ;
var bool: aux1109_BOOL:: var_is_introduced ;
var {0,1}: aux1109_INTEGER :: var_is_introduced ;
var bool: aux1110_BOOL:: var_is_introduced ;
var {0,1}: aux1110_INTEGER :: var_is_introduced ;
var bool: aux1111_BOOL:: var_is_introduced ;
var {0,1}: aux1111_INTEGER :: var_is_introduced ;
var bool: aux1112_BOOL:: var_is_introduced ;
var {0,1}: aux1112_INTEGER :: var_is_introduced ;
var bool: aux1113_BOOL:: var_is_introduced ;
var {0,1}: aux1113_INTEGER :: var_is_introduced ;
var bool: aux1114_BOOL:: var_is_introduced ;
var {0,1}: aux1114_INTEGER :: var_is_introduced ;
var bool: aux1115_BOOL:: var_is_introduced ;
var {0,1}: aux1115_INTEGER :: var_is_introduced ;
var bool: aux1116_BOOL:: var_is_introduced ;
var {0,1}: aux1116_INTEGER :: var_is_introduced ;
var bool: aux1117_BOOL:: var_is_introduced ;
var {0,1}: aux1117_INTEGER :: var_is_introduced ;
var bool: aux1118_BOOL:: var_is_introduced ;
var {0,1}: aux1118_INTEGER :: var_is_introduced ;
var bool: aux1119_BOOL:: var_is_introduced ;
var {0,1}: aux1119_INTEGER :: var_is_introduced ;
var bool: aux1120_BOOL:: var_is_introduced ;
var {0,1}: aux1120_INTEGER :: var_is_introduced ;
var bool: aux1121_BOOL:: var_is_introduced ;
var {0,1}: aux1121_INTEGER :: var_is_introduced ;
var bool: aux1122_BOOL:: var_is_introduced ;
var {0,1}: aux1122_INTEGER :: var_is_introduced ;
var bool: aux1123_BOOL:: var_is_introduced ;
var {0,1}: aux1123_INTEGER :: var_is_introduced ;
var bool: aux1124_BOOL:: var_is_introduced ;
var bool: aux1125_BOOL:: var_is_introduced ;
var bool: aux1127_BOOL:: var_is_introduced ;
var bool: aux1128_BOOL:: var_is_introduced ;
var bool: aux1130_BOOL:: var_is_introduced ;
var bool: aux1131_BOOL:: var_is_introduced ;
var bool: aux1133_BOOL:: var_is_introduced ;
var {0,1}: aux1133_INTEGER :: var_is_introduced ;
var bool: aux1134_BOOL:: var_is_introduced ;
var {0,1}: aux1134_INTEGER :: var_is_introduced ;
var bool: aux1135_BOOL:: var_is_introduced ;
var {0,1}: aux1135_INTEGER :: var_is_introduced ;
var bool: aux1136_BOOL:: var_is_introduced ;
var {0,1}: aux1136_INTEGER :: var_is_introduced ;
var bool: aux1137_BOOL:: var_is_introduced ;
var {0,1}: aux1137_INTEGER :: var_is_introduced ;
var bool: aux1138_BOOL:: var_is_introduced ;
var {0,1}: aux1138_INTEGER :: var_is_introduced ;
var bool: aux1139_BOOL:: var_is_introduced ;
var {0,1}: aux1139_INTEGER :: var_is_introduced ;
var bool: aux1140_BOOL:: var_is_introduced ;
var {0,1}: aux1140_INTEGER :: var_is_introduced ;
var bool: aux1141_BOOL:: var_is_introduced ;
var {0,1}: aux1141_INTEGER :: var_is_introduced ;
var bool: aux1142_BOOL:: var_is_introduced ;
var {0,1}: aux1142_INTEGER :: var_is_introduced ;
var bool: aux1143_BOOL:: var_is_introduced ;
var {0,1}: aux1143_INTEGER :: var_is_introduced ;
var bool: aux1144_BOOL:: var_is_introduced ;
var {0,1}: aux1144_INTEGER :: var_is_introduced ;
var bool: aux1145_BOOL:: var_is_introduced ;
var {0,1}: aux1145_INTEGER :: var_is_introduced ;
var bool: aux1146_BOOL:: var_is_introduced ;
var {0,1}: aux1146_INTEGER :: var_is_introduced ;
var bool: aux1147_BOOL:: var_is_introduced ;
var {0,1}: aux1147_INTEGER :: var_is_introduced ;
var bool: aux1148_BOOL:: var_is_introduced ;
var {0,1}: aux1148_INTEGER :: var_is_introduced ;
var bool: aux1149_BOOL:: var_is_introduced ;
var {0,1}: aux1149_INTEGER :: var_is_introduced ;
var bool: aux1150_BOOL:: var_is_introduced ;
var {0,1}: aux1150_INTEGER :: var_is_introduced ;
var bool: aux1151_BOOL:: var_is_introduced ;
var {0,1}: aux1151_INTEGER :: var_is_introduced ;
var bool: aux1152_BOOL:: var_is_introduced ;
var {0,1}: aux1152_INTEGER :: var_is_introduced ;
var bool: aux1153_BOOL:: var_is_introduced ;
var {0,1}: aux1153_INTEGER :: var_is_introduced ;
var bool: aux1154_BOOL:: var_is_introduced ;
var {0,1}: aux1154_INTEGER :: var_is_introduced ;
var bool: aux1155_BOOL:: var_is_introduced ;
var {0,1}: aux1155_INTEGER :: var_is_introduced ;
var bool: aux1156_BOOL:: var_is_introduced ;
var bool: aux1157_BOOL:: var_is_introduced ;
var bool: aux1159_BOOL:: var_is_introduced ;
var bool: aux1160_BOOL:: var_is_introduced ;
var bool: aux1162_BOOL:: var_is_introduced ;
var bool: aux1163_BOOL:: var_is_introduced ;
var bool: aux1165_BOOL:: var_is_introduced ;
var {0,1}: aux1165_INTEGER :: var_is_introduced ;
var bool: aux1166_BOOL:: var_is_introduced ;
var {0,1}: aux1166_INTEGER :: var_is_introduced ;
var bool: aux1167_BOOL:: var_is_introduced ;
var {0,1}: aux1167_INTEGER :: var_is_introduced ;
var bool: aux1168_BOOL:: var_is_introduced ;
var {0,1}: aux1168_INTEGER :: var_is_introduced ;
var bool: aux1169_BOOL:: var_is_introduced ;
var {0,1}: aux1169_INTEGER :: var_is_introduced ;
var bool: aux1170_BOOL:: var_is_introduced ;
var {0,1}: aux1170_INTEGER :: var_is_introduced ;
var bool: aux1171_BOOL:: var_is_introduced ;
var {0,1}: aux1171_INTEGER :: var_is_introduced ;
var bool: aux1172_BOOL:: var_is_introduced ;
var {0,1}: aux1172_INTEGER :: var_is_introduced ;
var bool: aux1177_BOOL:: var_is_introduced ;
var {0,1}: aux1177_INTEGER :: var_is_introduced ;
var bool: aux1178_BOOL:: var_is_introduced ;
var {0,1}: aux1178_INTEGER :: var_is_introduced ;
var bool: aux1179_BOOL:: var_is_introduced ;
var {0,1}: aux1179_INTEGER :: var_is_introduced ;
var bool: aux1180_BOOL:: var_is_introduced ;
var {0,1}: aux1180_INTEGER :: var_is_introduced ;
var bool: aux1181_BOOL:: var_is_introduced ;
var {0,1}: aux1181_INTEGER :: var_is_introduced ;
var bool: aux1182_BOOL:: var_is_introduced ;
var {0,1}: aux1182_INTEGER :: var_is_introduced ;
var bool: aux1183_BOOL:: var_is_introduced ;
var {0,1}: aux1183_INTEGER :: var_is_introduced ;
var bool: aux1184_BOOL:: var_is_introduced ;
var {0,1}: aux1184_INTEGER :: var_is_introduced ;
var bool: aux1185_BOOL:: var_is_introduced ;
var {0,1}: aux1185_INTEGER :: var_is_introduced ;
var bool: aux1186_BOOL:: var_is_introduced ;
var {0,1}: aux1186_INTEGER :: var_is_introduced ;
var bool: aux1187_BOOL:: var_is_introduced ;
var {0,1}: aux1187_INTEGER :: var_is_introduced ;
var bool: aux1188_BOOL:: var_is_introduced ;
var {0,1}: aux1188_INTEGER :: var_is_introduced ;
var bool: aux1189_BOOL:: var_is_introduced ;
var {0,1}: aux1189_INTEGER :: var_is_introduced ;
var bool: aux1190_BOOL:: var_is_introduced ;
var {0,1}: aux1190_INTEGER :: var_is_introduced ;
var bool: aux1191_BOOL:: var_is_introduced ;
var {0,1}: aux1191_INTEGER :: var_is_introduced ;
var bool: aux1192_BOOL:: var_is_introduced ;
var {0,1}: aux1192_INTEGER :: var_is_introduced ;
var bool: aux1193_BOOL:: var_is_introduced ;
var {0,1}: aux1193_INTEGER :: var_is_introduced ;
var bool: aux1194_BOOL:: var_is_introduced ;
var {0,1}: aux1194_INTEGER :: var_is_introduced ;
var bool: aux1195_BOOL:: var_is_introduced ;
var {0,1}: aux1195_INTEGER :: var_is_introduced ;
var bool: aux1196_BOOL:: var_is_introduced ;
var {0,1}: aux1196_INTEGER :: var_is_introduced ;
var bool: aux1197_BOOL:: var_is_introduced ;
var {0,1}: aux1197_INTEGER :: var_is_introduced ;
var bool: aux1198_BOOL:: var_is_introduced ;
var {0,1}: aux1198_INTEGER :: var_is_introduced ;
var bool: aux1199_BOOL:: var_is_introduced ;
var {0,1}: aux1199_INTEGER :: var_is_introduced ;
var bool: aux1200_BOOL:: var_is_introduced ;
var {0,1}: aux1200_INTEGER :: var_is_introduced ;
var bool: aux1201_BOOL:: var_is_introduced ;
var {0,1}: aux1201_INTEGER :: var_is_introduced ;
var bool: aux1202_BOOL:: var_is_introduced ;
var {0,1}: aux1202_INTEGER :: var_is_introduced ;
var bool: aux1203_BOOL:: var_is_introduced ;
var {0,1}: aux1203_INTEGER :: var_is_introduced ;
var bool: aux1204_BOOL:: var_is_introduced ;
var {0,1}: aux1204_INTEGER :: var_is_introduced ;
var bool: aux1205_BOOL:: var_is_introduced ;
var {0,1}: aux1205_INTEGER :: var_is_introduced ;
var bool: aux1206_BOOL:: var_is_introduced ;
var {0,1}: aux1206_INTEGER :: var_is_introduced ;
var bool: aux1207_BOOL:: var_is_introduced ;
var {0,1}: aux1207_INTEGER :: var_is_introduced ;
var bool: aux1208_BOOL:: var_is_introduced ;
var {0,1}: aux1208_INTEGER :: var_is_introduced ;
var bool: aux1209_BOOL:: var_is_introduced ;
var {0,1}: aux1209_INTEGER :: var_is_introduced ;
var bool: aux1210_BOOL:: var_is_introduced ;
var {0,1}: aux1210_INTEGER :: var_is_introduced ;
var bool: aux1211_BOOL:: var_is_introduced ;
var {0,1}: aux1211_INTEGER :: var_is_introduced ;
var bool: aux1212_BOOL:: var_is_introduced ;
var {0,1}: aux1212_INTEGER :: var_is_introduced ;
var bool: aux1213_BOOL:: var_is_introduced ;
var {0,1}: aux1213_INTEGER :: var_is_introduced ;
var bool: aux1214_BOOL:: var_is_introduced ;
var {0,1}: aux1214_INTEGER :: var_is_introduced ;
var bool: aux1215_BOOL:: var_is_introduced ;
var {0,1}: aux1215_INTEGER :: var_is_introduced ;
var bool: aux1216_BOOL:: var_is_introduced ;
var {0,1}: aux1216_INTEGER :: var_is_introduced ;
var bool: aux1217_BOOL:: var_is_introduced ;
var {0,1}: aux1217_INTEGER :: var_is_introduced ;
var bool: aux1218_BOOL:: var_is_introduced ;
var {0,1}: aux1218_INTEGER :: var_is_introduced ;
var bool: aux1219_BOOL:: var_is_introduced ;
var {0,1}: aux1219_INTEGER :: var_is_introduced ;
var bool: aux1220_BOOL:: var_is_introduced ;
var {0,1}: aux1220_INTEGER :: var_is_introduced ;
var bool: aux1221_BOOL:: var_is_introduced ;
var {0,1}: aux1221_INTEGER :: var_is_introduced ;
var bool: aux1222_BOOL:: var_is_introduced ;
var {0,1}: aux1222_INTEGER :: var_is_introduced ;
var bool: aux1223_BOOL:: var_is_introduced ;
var {0,1}: aux1223_INTEGER :: var_is_introduced ;
var bool: aux1224_BOOL:: var_is_introduced ;
var {0,1}: aux1224_INTEGER :: var_is_introduced ;
var bool: aux1225_BOOL:: var_is_introduced ;
var {0,1}: aux1225_INTEGER :: var_is_introduced ;
var bool: aux1226_BOOL:: var_is_introduced ;
var {0,1}: aux1226_INTEGER :: var_is_introduced ;
var bool: aux1227_BOOL:: var_is_introduced ;
var {0,1}: aux1227_INTEGER :: var_is_introduced ;
var bool: aux1228_BOOL:: var_is_introduced ;
var {0,1}: aux1228_INTEGER :: var_is_introduced ;
var bool: aux1229_BOOL:: var_is_introduced ;
var {0,1}: aux1229_INTEGER :: var_is_introduced ;
var bool: aux1230_BOOL:: var_is_introduced ;
var {0,1}: aux1230_INTEGER :: var_is_introduced ;
var bool: aux1231_BOOL:: var_is_introduced ;
var {0,1}: aux1231_INTEGER :: var_is_introduced ;
var bool: aux1232_BOOL:: var_is_introduced ;
var {0,1}: aux1232_INTEGER :: var_is_introduced ;
var bool: aux1233_BOOL:: var_is_introduced ;
var {0,1}: aux1233_INTEGER :: var_is_introduced ;
var bool: aux1234_BOOL:: var_is_introduced ;
var {0,1}: aux1234_INTEGER :: var_is_introduced ;
var bool: aux1235_BOOL:: var_is_introduced ;
var {0,1}: aux1235_INTEGER :: var_is_introduced ;
var bool: aux1236_BOOL:: var_is_introduced ;
var {0,1}: aux1236_INTEGER :: var_is_introduced ;
var bool: aux1237_BOOL:: var_is_introduced ;
var {0,1}: aux1237_INTEGER :: var_is_introduced ;
var bool: aux1238_BOOL:: var_is_introduced ;
var {0,1}: aux1238_INTEGER :: var_is_introduced ;
var bool: aux1239_BOOL:: var_is_introduced ;
var {0,1}: aux1239_INTEGER :: var_is_introduced ;
var bool: aux1240_BOOL:: var_is_introduced ;
var {0,1}: aux1240_INTEGER :: var_is_introduced ;
var bool: aux1241_BOOL:: var_is_introduced ;
var {0,1}: aux1241_INTEGER :: var_is_introduced ;
var bool: aux1242_BOOL:: var_is_introduced ;
var {0,1}: aux1242_INTEGER :: var_is_introduced ;
var bool: aux1243_BOOL:: var_is_introduced ;
var {0,1}: aux1243_INTEGER :: var_is_introduced ;
var bool: aux1244_BOOL:: var_is_introduced ;
var {0,1}: aux1244_INTEGER :: var_is_introduced ;
var bool: aux1245_BOOL:: var_is_introduced ;
var {0,1}: aux1245_INTEGER :: var_is_introduced ;
var bool: aux1246_BOOL:: var_is_introduced ;
var {0,1}: aux1246_INTEGER :: var_is_introduced ;
var bool: aux1247_BOOL:: var_is_introduced ;
var {0,1}: aux1247_INTEGER :: var_is_introduced ;
var bool: aux1248_BOOL:: var_is_introduced ;
var {0,1}: aux1248_INTEGER :: var_is_introduced ;
var bool: aux1249_BOOL:: var_is_introduced ;
var {0,1}: aux1249_INTEGER :: var_is_introduced ;
var bool: aux1250_BOOL:: var_is_introduced ;
var {0,1}: aux1250_INTEGER :: var_is_introduced ;
var bool: aux1251_BOOL:: var_is_introduced ;
var {0,1}: aux1251_INTEGER :: var_is_introduced ;
var bool: aux1252_BOOL:: var_is_introduced ;
var {0,1}: aux1252_INTEGER :: var_is_introduced ;
var bool: aux1253_BOOL:: var_is_introduced ;
var {0,1}: aux1253_INTEGER :: var_is_introduced ;
var bool: aux1254_BOOL:: var_is_introduced ;
var {0,1}: aux1254_INTEGER :: var_is_introduced ;
var bool: aux1255_BOOL:: var_is_introduced ;
var bool: aux1256_BOOL:: var_is_introduced ;
var bool: aux1257_BOOL:: var_is_introduced ;
var {0,1}: aux1257_INTEGER :: var_is_introduced ;
var bool: aux1258_BOOL:: var_is_introduced ;
var bool: aux1259_BOOL:: var_is_introduced ;
var bool: aux1261_BOOL:: var_is_introduced ;
var bool: aux1262_BOOL:: var_is_introduced ;
var bool: aux1264_BOOL:: var_is_introduced ;
var {0,1}: aux1264_INTEGER :: var_is_introduced ;
var bool: aux1265_BOOL:: var_is_introduced ;
var {0,1}: aux1265_INTEGER :: var_is_introduced ;
var bool: aux1266_BOOL:: var_is_introduced ;
var {0,1}: aux1266_INTEGER :: var_is_introduced ;
var bool: aux1267_BOOL:: var_is_introduced ;
var {0,1}: aux1267_INTEGER :: var_is_introduced ;
var bool: aux1268_BOOL:: var_is_introduced ;
var {0,1}: aux1268_INTEGER :: var_is_introduced ;
var bool: aux1269_BOOL:: var_is_introduced ;
var {0,1}: aux1269_INTEGER :: var_is_introduced ;
var bool: aux1270_BOOL:: var_is_introduced ;
var {0,1}: aux1270_INTEGER :: var_is_introduced ;
var bool: aux1271_BOOL:: var_is_introduced ;
var {0,1}: aux1271_INTEGER :: var_is_introduced ;
var bool: aux1272_BOOL:: var_is_introduced ;
var {0,1}: aux1272_INTEGER :: var_is_introduced ;
var bool: aux1273_BOOL:: var_is_introduced ;
var {0,1}: aux1273_INTEGER :: var_is_introduced ;
var bool: aux1274_BOOL:: var_is_introduced ;
var {0,1}: aux1274_INTEGER :: var_is_introduced ;
var bool: aux1275_BOOL:: var_is_introduced ;
var {0,1}: aux1275_INTEGER :: var_is_introduced ;
var bool: aux1276_BOOL:: var_is_introduced ;
var {0,1}: aux1276_INTEGER :: var_is_introduced ;
var bool: aux1277_BOOL:: var_is_introduced ;
var {0,1}: aux1277_INTEGER :: var_is_introduced ;
var bool: aux1278_BOOL:: var_is_introduced ;
var {0,1}: aux1278_INTEGER :: var_is_introduced ;
var bool: aux1279_BOOL:: var_is_introduced ;
var {0,1}: aux1279_INTEGER :: var_is_introduced ;
var bool: aux1280_BOOL:: var_is_introduced ;
var {0,1}: aux1280_INTEGER :: var_is_introduced ;
var bool: aux1281_BOOL:: var_is_introduced ;
var {0,1}: aux1281_INTEGER :: var_is_introduced ;
var bool: aux1282_BOOL:: var_is_introduced ;
var {0,1}: aux1282_INTEGER :: var_is_introduced ;
var bool: aux1283_BOOL:: var_is_introduced ;
var {0,1}: aux1283_INTEGER :: var_is_introduced ;
var bool: aux1284_BOOL:: var_is_introduced ;
var {0,1}: aux1284_INTEGER :: var_is_introduced ;
var bool: aux1285_BOOL:: var_is_introduced ;
var {0,1}: aux1285_INTEGER :: var_is_introduced ;
var bool: aux1286_BOOL:: var_is_introduced ;
var {0,1}: aux1286_INTEGER :: var_is_introduced ;
var bool: aux1287_BOOL:: var_is_introduced ;
var {0,1}: aux1287_INTEGER :: var_is_introduced ;
var bool: aux1288_BOOL:: var_is_introduced ;
var {0,1}: aux1288_INTEGER :: var_is_introduced ;
var bool: aux1289_BOOL:: var_is_introduced ;
var {0,1}: aux1289_INTEGER :: var_is_introduced ;
var bool: aux1290_BOOL:: var_is_introduced ;
var {0,1}: aux1290_INTEGER :: var_is_introduced ;
var bool: aux1291_BOOL:: var_is_introduced ;
var {0,1}: aux1291_INTEGER :: var_is_introduced ;
var bool: aux1292_BOOL:: var_is_introduced ;
var {0,1}: aux1292_INTEGER :: var_is_introduced ;
var bool: aux1293_BOOL:: var_is_introduced ;
var {0,1}: aux1293_INTEGER :: var_is_introduced ;
var bool: aux1294_BOOL:: var_is_introduced ;
var {0,1}: aux1294_INTEGER :: var_is_introduced ;
var bool: aux1295_BOOL:: var_is_introduced ;
var {0,1}: aux1295_INTEGER :: var_is_introduced ;
var bool: aux1296_BOOL:: var_is_introduced ;
var {0,1}: aux1296_INTEGER :: var_is_introduced ;
var bool: aux1297_BOOL:: var_is_introduced ;
var {0,1}: aux1297_INTEGER :: var_is_introduced ;
var bool: aux1298_BOOL:: var_is_introduced ;
var {0,1}: aux1298_INTEGER :: var_is_introduced ;
var bool: aux1299_BOOL:: var_is_introduced ;
var {0,1}: aux1299_INTEGER :: var_is_introduced ;
var bool: aux1300_BOOL:: var_is_introduced ;
var {0,1}: aux1300_INTEGER :: var_is_introduced ;
var bool: aux1301_BOOL:: var_is_introduced ;
var {0,1}: aux1301_INTEGER :: var_is_introduced ;
var bool: aux1302_BOOL:: var_is_introduced ;
var {0,1}: aux1302_INTEGER :: var_is_introduced ;
var bool: aux1303_BOOL:: var_is_introduced ;
var {0,1}: aux1303_INTEGER :: var_is_introduced ;
var bool: aux1304_BOOL:: var_is_introduced ;
var {0,1}: aux1304_INTEGER :: var_is_introduced ;
var bool: aux1305_BOOL:: var_is_introduced ;
var {0,1}: aux1305_INTEGER :: var_is_introduced ;
var bool: aux1306_BOOL:: var_is_introduced ;
var {0,1}: aux1306_INTEGER :: var_is_introduced ;
var bool: aux1307_BOOL:: var_is_introduced ;
var {0,1}: aux1307_INTEGER :: var_is_introduced ;
var bool: aux1308_BOOL:: var_is_introduced ;
var {0,1}: aux1308_INTEGER :: var_is_introduced ;
var bool: aux1309_BOOL:: var_is_introduced ;
var {0,1}: aux1309_INTEGER :: var_is_introduced ;
var bool: aux1310_BOOL:: var_is_introduced ;
var {0,1}: aux1310_INTEGER :: var_is_introduced ;
var bool: aux1311_BOOL:: var_is_introduced ;
var {0,1}: aux1311_INTEGER :: var_is_introduced ;
var bool: aux1312_BOOL:: var_is_introduced ;
var {0,1}: aux1312_INTEGER :: var_is_introduced ;
var bool: aux1313_BOOL:: var_is_introduced ;
var {0,1}: aux1313_INTEGER :: var_is_introduced ;
var bool: aux1314_BOOL:: var_is_introduced ;
var {0,1}: aux1314_INTEGER :: var_is_introduced ;
var bool: aux1315_BOOL:: var_is_introduced ;
var {0,1}: aux1315_INTEGER :: var_is_introduced ;
var bool: aux1316_BOOL:: var_is_introduced ;
var {0,1}: aux1316_INTEGER :: var_is_introduced ;
var bool: aux1317_BOOL:: var_is_introduced ;
var {0,1}: aux1317_INTEGER :: var_is_introduced ;
var bool: aux1318_BOOL:: var_is_introduced ;
var {0,1}: aux1318_INTEGER :: var_is_introduced ;
var bool: aux1319_BOOL:: var_is_introduced ;
var {0,1}: aux1319_INTEGER :: var_is_introduced ;
var bool: aux1320_BOOL:: var_is_introduced ;
var {0,1}: aux1320_INTEGER :: var_is_introduced ;
var bool: aux1321_BOOL:: var_is_introduced ;
var {0,1}: aux1321_INTEGER :: var_is_introduced ;
var bool: aux1322_BOOL:: var_is_introduced ;
var {0,1}: aux1322_INTEGER :: var_is_introduced ;
var bool: aux1323_BOOL:: var_is_introduced ;
var {0,1}: aux1323_INTEGER :: var_is_introduced ;
var bool: aux1324_BOOL:: var_is_introduced ;
var {0,1}: aux1324_INTEGER :: var_is_introduced ;
var bool: aux1325_BOOL:: var_is_introduced ;
var {0,1}: aux1325_INTEGER :: var_is_introduced ;
var bool: aux1326_BOOL:: var_is_introduced ;
var {0,1}: aux1326_INTEGER :: var_is_introduced ;
var bool: aux1327_BOOL:: var_is_introduced ;
var {0,1}: aux1327_INTEGER :: var_is_introduced ;
var bool: aux1328_BOOL:: var_is_introduced ;
var {0,1}: aux1328_INTEGER :: var_is_introduced ;
var bool: aux1329_BOOL:: var_is_introduced ;
var {0,1}: aux1329_INTEGER :: var_is_introduced ;
var bool: aux1330_BOOL:: var_is_introduced ;
var {0,1}: aux1330_INTEGER :: var_is_introduced ;
var bool: aux1331_BOOL:: var_is_introduced ;
var {0,1}: aux1331_INTEGER :: var_is_introduced ;
var bool: aux1332_BOOL:: var_is_introduced ;
var {0,1}: aux1332_INTEGER :: var_is_introduced ;
var bool: aux1333_BOOL:: var_is_introduced ;
var {0,1}: aux1333_INTEGER :: var_is_introduced ;
var bool: aux1334_BOOL:: var_is_introduced ;
var {0,1}: aux1334_INTEGER :: var_is_introduced ;
var bool: aux1335_BOOL:: var_is_introduced ;
var {0,1}: aux1335_INTEGER :: var_is_introduced ;
var bool: aux1336_BOOL:: var_is_introduced ;
var {0,1}: aux1336_INTEGER :: var_is_introduced ;
var bool: aux1337_BOOL:: var_is_introduced ;
var {0,1}: aux1337_INTEGER :: var_is_introduced ;
var bool: aux1338_BOOL:: var_is_introduced ;
var {0,1}: aux1338_INTEGER :: var_is_introduced ;
var bool: aux1339_BOOL:: var_is_introduced ;
var {0,1}: aux1339_INTEGER :: var_is_introduced ;
var bool: aux1340_BOOL:: var_is_introduced ;
var {0,1}: aux1340_INTEGER :: var_is_introduced ;
var bool: aux1341_BOOL:: var_is_introduced ;
var {0,1}: aux1341_INTEGER :: var_is_introduced ;
var bool: aux1342_BOOL:: var_is_introduced ;
var {0,1}: aux1342_INTEGER :: var_is_introduced ;
var bool: aux1343_BOOL:: var_is_introduced ;
var {0,1}: aux1343_INTEGER :: var_is_introduced ;
var bool: aux1344_BOOL:: var_is_introduced ;
var {0,1}: aux1344_INTEGER :: var_is_introduced ;
var bool: aux1345_BOOL:: var_is_introduced ;
var {0,1}: aux1345_INTEGER :: var_is_introduced ;
var bool: aux1346_BOOL:: var_is_introduced ;
var {0,1}: aux1346_INTEGER :: var_is_introduced ;
var bool: aux1347_BOOL:: var_is_introduced ;
var {0,1}: aux1347_INTEGER :: var_is_introduced ;
var bool: aux1348_BOOL:: var_is_introduced ;
var {0,1}: aux1348_INTEGER :: var_is_introduced ;
var bool: aux1349_BOOL:: var_is_introduced ;
var {0,1}: aux1349_INTEGER :: var_is_introduced ;
var bool: aux1350_BOOL:: var_is_introduced ;
var {0,1}: aux1350_INTEGER :: var_is_introduced ;
var bool: aux1351_BOOL:: var_is_introduced ;
var {0,1}: aux1351_INTEGER :: var_is_introduced ;
var bool: aux1352_BOOL:: var_is_introduced ;
var {0,1}: aux1352_INTEGER :: var_is_introduced ;
var bool: aux1353_BOOL:: var_is_introduced ;
var {0,1}: aux1353_INTEGER :: var_is_introduced ;
var bool: aux1354_BOOL:: var_is_introduced ;
var {0,1}: aux1354_INTEGER :: var_is_introduced ;
var bool: aux1355_BOOL:: var_is_introduced ;
var {0,1}: aux1355_INTEGER :: var_is_introduced ;
var bool: aux1356_BOOL:: var_is_introduced ;
var {0,1}: aux1356_INTEGER :: var_is_introduced ;
var bool: aux1357_BOOL:: var_is_introduced ;
var {0,1}: aux1357_INTEGER :: var_is_introduced ;
var bool: aux1358_BOOL:: var_is_introduced ;
var {0,1}: aux1358_INTEGER :: var_is_introduced ;
var bool: aux1359_BOOL:: var_is_introduced ;
var {0,1}: aux1359_INTEGER :: var_is_introduced ;
var bool: aux1360_BOOL:: var_is_introduced ;
var {0,1}: aux1360_INTEGER :: var_is_introduced ;
var bool: aux1361_BOOL:: var_is_introduced ;
var {0,1}: aux1361_INTEGER :: var_is_introduced ;
var bool: aux1362_BOOL:: var_is_introduced ;
var {0,1}: aux1362_INTEGER :: var_is_introduced ;
var bool: aux1363_BOOL:: var_is_introduced ;
var {0,1}: aux1363_INTEGER :: var_is_introduced ;
var bool: aux1364_BOOL:: var_is_introduced ;
var {0,1}: aux1364_INTEGER :: var_is_introduced ;
var bool: aux1365_BOOL:: var_is_introduced ;
var {0,1}: aux1365_INTEGER :: var_is_introduced ;
var bool: aux1366_BOOL:: var_is_introduced ;
var {0,1}: aux1366_INTEGER :: var_is_introduced ;
var bool: aux1367_BOOL:: var_is_introduced ;
var {0,1}: aux1367_INTEGER :: var_is_introduced ;
var bool: aux1368_BOOL:: var_is_introduced ;
var bool: aux1369_BOOL:: var_is_introduced ;
var bool: aux1371_BOOL:: var_is_introduced ;
var bool: aux1372_BOOL:: var_is_introduced ;
var bool: aux1374_BOOL:: var_is_introduced ;
var bool: aux1375_BOOL:: var_is_introduced ;
var bool: aux1376_BOOL:: var_is_introduced ;
var {0,1}: aux1376_INTEGER :: var_is_introduced ;
var bool: aux1377_BOOL:: var_is_introduced ;
var {0,1}: aux1377_INTEGER :: var_is_introduced ;
var bool: aux1378_BOOL:: var_is_introduced ;
var {0,1}: aux1378_INTEGER :: var_is_introduced ;
var bool: aux1379_BOOL:: var_is_introduced ;
var {0,1}: aux1379_INTEGER :: var_is_introduced ;
var bool: aux1380_BOOL:: var_is_introduced ;
var {0,1}: aux1380_INTEGER :: var_is_introduced ;
var bool: aux1381_BOOL:: var_is_introduced ;
var {0,1}: aux1381_INTEGER :: var_is_introduced ;
var bool: aux1382_BOOL:: var_is_introduced ;
var {0,1}: aux1382_INTEGER :: var_is_introduced ;
var bool: aux1383_BOOL:: var_is_introduced ;
var {0,1}: aux1383_INTEGER :: var_is_introduced ;
var bool: aux1384_BOOL:: var_is_introduced ;
var {0,1}: aux1384_INTEGER :: var_is_introduced ;
var bool: aux1385_BOOL:: var_is_introduced ;
var {0,1}: aux1385_INTEGER :: var_is_introduced ;
var bool: aux1386_BOOL:: var_is_introduced ;
var {0,1}: aux1386_INTEGER :: var_is_introduced ;
var bool: aux1387_BOOL:: var_is_introduced ;
var {0,1}: aux1387_INTEGER :: var_is_introduced ;
var bool: aux1388_BOOL:: var_is_introduced ;
var {0,1}: aux1388_INTEGER :: var_is_introduced ;
var bool: aux1389_BOOL:: var_is_introduced ;
var {0,1}: aux1389_INTEGER :: var_is_introduced ;
var bool: aux1390_BOOL:: var_is_introduced ;
var {0,1}: aux1390_INTEGER :: var_is_introduced ;
var bool: aux1391_BOOL:: var_is_introduced ;
var {0,1}: aux1391_INTEGER :: var_is_introduced ;
var bool: aux1392_BOOL:: var_is_introduced ;
var {0,1}: aux1392_INTEGER :: var_is_introduced ;
var bool: aux1393_BOOL:: var_is_introduced ;
var {0,1}: aux1393_INTEGER :: var_is_introduced ;
var bool: aux1394_BOOL:: var_is_introduced ;
var {0,1}: aux1394_INTEGER :: var_is_introduced ;
var bool: aux1395_BOOL:: var_is_introduced ;
var {0,1}: aux1395_INTEGER :: var_is_introduced ;
var bool: aux1396_BOOL:: var_is_introduced ;
var {0,1}: aux1396_INTEGER :: var_is_introduced ;
var bool: aux1397_BOOL:: var_is_introduced ;
var {0,1}: aux1397_INTEGER :: var_is_introduced ;
var bool: aux1398_BOOL:: var_is_introduced ;
var {0,1}: aux1398_INTEGER :: var_is_introduced ;
var bool: aux1399_BOOL:: var_is_introduced ;
var {0,1}: aux1399_INTEGER :: var_is_introduced ;
var bool: aux1400_BOOL:: var_is_introduced ;
var {0,1}: aux1400_INTEGER :: var_is_introduced ;
var bool: aux1401_BOOL:: var_is_introduced ;
var {0,1}: aux1401_INTEGER :: var_is_introduced ;
var bool: aux1402_BOOL:: var_is_introduced ;
var {0,1}: aux1402_INTEGER :: var_is_introduced ;
var bool: aux1403_BOOL:: var_is_introduced ;
var {0,1}: aux1403_INTEGER :: var_is_introduced ;
var bool: aux1404_BOOL:: var_is_introduced ;
var {0,1}: aux1404_INTEGER :: var_is_introduced ;
var bool: aux1405_BOOL:: var_is_introduced ;
var {0,1}: aux1405_INTEGER :: var_is_introduced ;
var bool: aux1406_BOOL:: var_is_introduced ;
var {0,1}: aux1406_INTEGER :: var_is_introduced ;
var bool: aux1407_BOOL:: var_is_introduced ;
var {0,1}: aux1407_INTEGER :: var_is_introduced ;
var bool: aux1408_BOOL:: var_is_introduced ;
var {0,1}: aux1408_INTEGER :: var_is_introduced ;
var bool: aux1409_BOOL:: var_is_introduced ;
var {0,1}: aux1409_INTEGER :: var_is_introduced ;
var bool: aux1410_BOOL:: var_is_introduced ;
var {0,1}: aux1410_INTEGER :: var_is_introduced ;
var bool: aux1411_BOOL:: var_is_introduced ;
var {0,1}: aux1411_INTEGER :: var_is_introduced ;
var bool: aux1412_BOOL:: var_is_introduced ;
var {0,1}: aux1412_INTEGER :: var_is_introduced ;
var bool: aux1413_BOOL:: var_is_introduced ;
var {0,1}: aux1413_INTEGER :: var_is_introduced ;
var bool: aux1414_BOOL:: var_is_introduced ;
var {0,1}: aux1414_INTEGER :: var_is_introduced ;
var bool: aux1415_BOOL:: var_is_introduced ;
var {0,1}: aux1415_INTEGER :: var_is_introduced ;
var bool: aux1416_BOOL:: var_is_introduced ;
var {0,1}: aux1416_INTEGER :: var_is_introduced ;
var bool: aux1417_BOOL:: var_is_introduced ;
var {0,1}: aux1417_INTEGER :: var_is_introduced ;
var bool: aux1418_BOOL:: var_is_introduced ;
var {0,1}: aux1418_INTEGER :: var_is_introduced ;
var bool: aux1419_BOOL:: var_is_introduced ;
var {0,1}: aux1419_INTEGER :: var_is_introduced ;
var bool: aux1420_BOOL:: var_is_introduced ;
var {0,1}: aux1420_INTEGER :: var_is_introduced ;
var bool: aux1421_BOOL:: var_is_introduced ;
var {0,1}: aux1421_INTEGER :: var_is_introduced ;
var bool: aux1422_BOOL:: var_is_introduced ;
var {0,1}: aux1422_INTEGER :: var_is_introduced ;
var bool: aux1423_BOOL:: var_is_introduced ;
var {0,1}: aux1423_INTEGER :: var_is_introduced ;
var bool: aux1424_BOOL:: var_is_introduced ;
var {0,1}: aux1424_INTEGER :: var_is_introduced ;
var bool: aux1425_BOOL:: var_is_introduced ;
var {0,1}: aux1425_INTEGER :: var_is_introduced ;
var bool: aux1426_BOOL:: var_is_introduced ;
var {0,1}: aux1426_INTEGER :: var_is_introduced ;
var bool: aux1427_BOOL:: var_is_introduced ;
var {0,1}: aux1427_INTEGER :: var_is_introduced ;
var bool: aux1428_BOOL:: var_is_introduced ;
var {0,1}: aux1428_INTEGER :: var_is_introduced ;
var bool: aux1429_BOOL:: var_is_introduced ;
var {0,1}: aux1429_INTEGER :: var_is_introduced ;
var bool: aux1430_BOOL:: var_is_introduced ;
var {0,1}: aux1430_INTEGER :: var_is_introduced ;
var bool: aux1431_BOOL:: var_is_introduced ;
var {0,1}: aux1431_INTEGER :: var_is_introduced ;
var bool: aux1432_BOOL:: var_is_introduced ;
var {0,1}: aux1432_INTEGER :: var_is_introduced ;
var bool: aux1433_BOOL:: var_is_introduced ;
var bool: aux1434_BOOL:: var_is_introduced ;
var bool: aux1435_BOOL:: var_is_introduced ;
var {0,1}: aux1435_INTEGER :: var_is_introduced ;
var bool: aux1436_BOOL:: var_is_introduced ;
var bool: aux1437_BOOL:: var_is_introduced ;
var bool: aux1439_BOOL:: var_is_introduced ;
var bool: aux1440_BOOL:: var_is_introduced ;
var bool: aux1442_BOOL:: var_is_introduced ;
var bool: aux1443_BOOL:: var_is_introduced ;
var bool: aux1445_BOOL:: var_is_introduced ;
var bool: aux1446_BOOL:: var_is_introduced ;
var bool: aux1448_BOOL:: var_is_introduced ;
var bool: aux1449_BOOL:: var_is_introduced ;
var bool: aux1451_BOOL:: var_is_introduced ;
var bool: aux1452_BOOL:: var_is_introduced ;
var bool: aux1454_BOOL:: var_is_introduced ;
var {0,1}: aux1454_INTEGER :: var_is_introduced ;
var bool: aux1455_BOOL:: var_is_introduced ;
var {0,1}: aux1455_INTEGER :: var_is_introduced ;
var bool: aux1456_BOOL:: var_is_introduced ;
var {0,1}: aux1456_INTEGER :: var_is_introduced ;
var bool: aux1457_BOOL:: var_is_introduced ;
var {0,1}: aux1457_INTEGER :: var_is_introduced ;
var bool: aux1458_BOOL:: var_is_introduced ;
var {0,1}: aux1458_INTEGER :: var_is_introduced ;
var bool: aux1459_BOOL:: var_is_introduced ;
var {0,1}: aux1459_INTEGER :: var_is_introduced ;
var bool: aux1461_BOOL:: var_is_introduced ;
var {0,1}: aux1461_INTEGER :: var_is_introduced ;
var bool: aux1462_BOOL:: var_is_introduced ;
var {0,1}: aux1462_INTEGER :: var_is_introduced ;
var bool: aux1463_BOOL:: var_is_introduced ;
var {0,1}: aux1463_INTEGER :: var_is_introduced ;
var bool: aux1464_BOOL:: var_is_introduced ;
var {0,1}: aux1464_INTEGER :: var_is_introduced ;
var bool: aux1465_BOOL:: var_is_introduced ;
var {0,1}: aux1465_INTEGER :: var_is_introduced ;
var bool: aux1466_BOOL:: var_is_introduced ;
var {0,1}: aux1466_INTEGER :: var_is_introduced ;
var bool: aux1467_BOOL:: var_is_introduced ;
var {0,1}: aux1467_INTEGER :: var_is_introduced ;
var bool: aux1468_BOOL:: var_is_introduced ;
var {0,1}: aux1468_INTEGER :: var_is_introduced ;
var bool: aux1470_BOOL:: var_is_introduced ;
var {0,1}: aux1470_INTEGER :: var_is_introduced ;
var bool: aux1471_BOOL:: var_is_introduced ;
var {0,1}: aux1471_INTEGER :: var_is_introduced ;
var bool: aux1472_BOOL:: var_is_introduced ;
var {0,1}: aux1472_INTEGER :: var_is_introduced ;
var bool: aux1473_BOOL:: var_is_introduced ;
var {0,1}: aux1473_INTEGER :: var_is_introduced ;
var bool: aux1474_BOOL:: var_is_introduced ;
var {0,1}: aux1474_INTEGER :: var_is_introduced ;
var bool: aux1475_BOOL:: var_is_introduced ;
var {0,1}: aux1475_INTEGER :: var_is_introduced ;
var bool: aux1476_BOOL:: var_is_introduced ;
var {0,1}: aux1476_INTEGER :: var_is_introduced ;
var bool: aux1477_BOOL:: var_is_introduced ;
var {0,1}: aux1477_INTEGER :: var_is_introduced ;
var bool: aux1478_BOOL:: var_is_introduced ;
var {0,1}: aux1478_INTEGER :: var_is_introduced ;
var bool: aux1479_BOOL:: var_is_introduced ;
var {0,1}: aux1479_INTEGER :: var_is_introduced ;
var bool: aux1480_BOOL:: var_is_introduced ;
var {0,1}: aux1480_INTEGER :: var_is_introduced ;
var bool: aux1481_BOOL:: var_is_introduced ;
var {0,1}: aux1481_INTEGER :: var_is_introduced ;
var bool: aux1482_BOOL:: var_is_introduced ;
var {0,1}: aux1482_INTEGER :: var_is_introduced ;
var bool: aux1483_BOOL:: var_is_introduced ;
var {0,1}: aux1483_INTEGER :: var_is_introduced ;
var bool: aux1484_BOOL:: var_is_introduced ;
var {0,1}: aux1484_INTEGER :: var_is_introduced ;
var bool: aux1485_BOOL:: var_is_introduced ;
var {0,1}: aux1485_INTEGER :: var_is_introduced ;
var bool: aux1486_BOOL:: var_is_introduced ;
var {0,1}: aux1486_INTEGER :: var_is_introduced ;
var bool: aux1487_BOOL:: var_is_introduced ;
var {0,1}: aux1487_INTEGER :: var_is_introduced ;
var bool: aux1488_BOOL:: var_is_introduced ;
var {0,1}: aux1488_INTEGER :: var_is_introduced ;
var bool: aux1489_BOOL:: var_is_introduced ;
var {0,1}: aux1489_INTEGER :: var_is_introduced ;
var bool: aux1491_BOOL:: var_is_introduced ;
var {0,1}: aux1491_INTEGER :: var_is_introduced ;
var bool: aux1492_BOOL:: var_is_introduced ;
var {0,1}: aux1492_INTEGER :: var_is_introduced ;
var bool: aux1493_BOOL:: var_is_introduced ;
var {0,1}: aux1493_INTEGER :: var_is_introduced ;
var bool: aux1494_BOOL:: var_is_introduced ;
var {0,1}: aux1494_INTEGER :: var_is_introduced ;
var bool: aux1495_BOOL:: var_is_introduced ;
var {0,1}: aux1495_INTEGER :: var_is_introduced ;
var bool: aux1496_BOOL:: var_is_introduced ;
var {0,1}: aux1496_INTEGER :: var_is_introduced ;
var bool: aux1497_BOOL:: var_is_introduced ;
var {0,1}: aux1497_INTEGER :: var_is_introduced ;
var bool: aux1498_BOOL:: var_is_introduced ;
var {0,1}: aux1498_INTEGER :: var_is_introduced ;
var bool: aux1499_BOOL:: var_is_introduced ;
var {0,1}: aux1499_INTEGER :: var_is_introduced ;
var bool: aux1500_BOOL:: var_is_introduced ;
var {0,1}: aux1500_INTEGER :: var_is_introduced ;
var bool: aux1501_BOOL:: var_is_introduced ;
var {0,1}: aux1501_INTEGER :: var_is_introduced ;
var bool: aux1502_BOOL:: var_is_introduced ;
var {0,1}: aux1502_INTEGER :: var_is_introduced ;
var bool: aux1503_BOOL:: var_is_introduced ;
var {0,1}: aux1503_INTEGER :: var_is_introduced ;
var bool: aux1504_BOOL:: var_is_introduced ;
var {0,1}: aux1504_INTEGER :: var_is_introduced ;
var bool: aux1505_BOOL:: var_is_introduced ;
var {0,1}: aux1505_INTEGER :: var_is_introduced ;
var bool: aux1506_BOOL:: var_is_introduced ;
var {0,1}: aux1506_INTEGER :: var_is_introduced ;
var bool: aux1507_BOOL:: var_is_introduced ;
var {0,1}: aux1507_INTEGER :: var_is_introduced ;
var bool: aux1508_BOOL:: var_is_introduced ;
var {0,1}: aux1508_INTEGER :: var_is_introduced ;
var bool: aux1509_BOOL:: var_is_introduced ;
var {0,1}: aux1509_INTEGER :: var_is_introduced ;
var bool: aux1510_BOOL:: var_is_introduced ;
var {0,1}: aux1510_INTEGER :: var_is_introduced ;
var bool: aux1511_BOOL:: var_is_introduced ;
var bool: aux1512_BOOL:: var_is_introduced ;
var bool: aux1514_BOOL:: var_is_introduced ;
var bool: aux1515_BOOL:: var_is_introduced ;
var bool: aux1517_BOOL:: var_is_introduced ;
var bool: aux1518_BOOL:: var_is_introduced ;
var bool: aux1520_BOOL:: var_is_introduced ;
var {0,1}: aux1520_INTEGER :: var_is_introduced ;
var bool: aux1521_BOOL:: var_is_introduced ;
var {0,1}: aux1521_INTEGER :: var_is_introduced ;
var bool: aux1522_BOOL:: var_is_introduced ;
var {0,1}: aux1522_INTEGER :: var_is_introduced ;
var bool: aux1523_BOOL:: var_is_introduced ;
var {0,1}: aux1523_INTEGER :: var_is_introduced ;
var bool: aux1524_BOOL:: var_is_introduced ;
var {0,1}: aux1524_INTEGER :: var_is_introduced ;
var bool: aux1525_BOOL:: var_is_introduced ;
var {0,1}: aux1525_INTEGER :: var_is_introduced ;
var bool: aux1529_BOOL:: var_is_introduced ;
var {0,1}: aux1529_INTEGER :: var_is_introduced ;
var bool: aux1530_BOOL:: var_is_introduced ;
var {0,1}: aux1530_INTEGER :: var_is_introduced ;
var bool: aux1531_BOOL:: var_is_introduced ;
var {0,1}: aux1531_INTEGER :: var_is_introduced ;
var bool: aux1532_BOOL:: var_is_introduced ;
var {0,1}: aux1532_INTEGER :: var_is_introduced ;
var bool: aux1533_BOOL:: var_is_introduced ;
var {0,1}: aux1533_INTEGER :: var_is_introduced ;
var bool: aux1534_BOOL:: var_is_introduced ;
var {0,1}: aux1534_INTEGER :: var_is_introduced ;
var bool: aux1535_BOOL:: var_is_introduced ;
var {0,1}: aux1535_INTEGER :: var_is_introduced ;
var bool: aux1536_BOOL:: var_is_introduced ;
var {0,1}: aux1536_INTEGER :: var_is_introduced ;
var bool: aux1537_BOOL:: var_is_introduced ;
var {0,1}: aux1537_INTEGER :: var_is_introduced ;
var bool: aux1538_BOOL:: var_is_introduced ;
var {0,1}: aux1538_INTEGER :: var_is_introduced ;
var bool: aux1539_BOOL:: var_is_introduced ;
var {0,1}: aux1539_INTEGER :: var_is_introduced ;
var bool: aux1540_BOOL:: var_is_introduced ;
var {0,1}: aux1540_INTEGER :: var_is_introduced ;
var bool: aux1541_BOOL:: var_is_introduced ;
var bool: aux1542_BOOL:: var_is_introduced ;
var bool: aux1543_BOOL:: var_is_introduced ;
var bool: aux1544_BOOL:: var_is_introduced ;
var bool: aux1545_BOOL:: var_is_introduced ;
var bool: aux1546_BOOL:: var_is_introduced ;
var bool: aux1547_BOOL:: var_is_introduced ;
var bool: aux1548_BOOL:: var_is_introduced ;
var bool: aux1549_BOOL:: var_is_introduced ;
var bool: aux1550_BOOL:: var_is_introduced ;
var bool: aux1551_BOOL:: var_is_introduced ;
var bool: aux1552_BOOL:: var_is_introduced ;
var bool: aux1553_BOOL:: var_is_introduced ;
var bool: aux1554_BOOL:: var_is_introduced ;
var bool: aux1555_BOOL:: var_is_introduced ;
var bool: aux1556_BOOL:: var_is_introduced ;
var bool: aux1557_BOOL:: var_is_introduced ;
var bool: aux1558_BOOL:: var_is_introduced ;
var bool: aux1559_BOOL:: var_is_introduced ;
var bool: aux1560_BOOL:: var_is_introduced ;
var bool: aux1561_BOOL:: var_is_introduced ;
var bool: aux1562_BOOL:: var_is_introduced ;
var bool: aux1563_BOOL:: var_is_introduced ;
var bool: aux1564_BOOL:: var_is_introduced ;
var bool: aux1565_BOOL:: var_is_introduced ;
var bool: aux1566_BOOL:: var_is_introduced ;
var bool: aux1567_BOOL:: var_is_introduced ;
var bool: aux1568_BOOL:: var_is_introduced ;
var bool: aux1569_BOOL:: var_is_introduced ;
var bool: aux1570_BOOL:: var_is_introduced ;
var bool: aux1571_BOOL:: var_is_introduced ;
var bool: aux1572_BOOL:: var_is_introduced ;
var bool: aux1573_BOOL:: var_is_introduced ;
var bool: aux1574_BOOL:: var_is_introduced ;
var bool: aux1575_BOOL:: var_is_introduced ;
var bool: aux1576_BOOL:: var_is_introduced ;
var bool: aux1577_BOOL:: var_is_introduced ;
var bool: aux1578_BOOL:: var_is_introduced ;
var bool: aux1579_BOOL:: var_is_introduced ;
var bool: aux1580_BOOL:: var_is_introduced ;
var bool: aux1581_BOOL:: var_is_introduced ;
var bool: aux1582_BOOL:: var_is_introduced ;
var bool: aux1583_BOOL:: var_is_introduced ;
var bool: aux1584_BOOL:: var_is_introduced ;
var bool: aux1585_BOOL:: var_is_introduced ;
var bool: aux1586_BOOL:: var_is_introduced ;
var bool: aux1587_BOOL:: var_is_introduced ;
var bool: aux1588_BOOL:: var_is_introduced ;
var bool: aux1589_BOOL:: var_is_introduced ;
var bool: aux1590_BOOL:: var_is_introduced ;
var bool: aux1591_BOOL:: var_is_introduced ;
var bool: aux1592_BOOL:: var_is_introduced ;
var bool: aux1593_BOOL:: var_is_introduced ;
var bool: aux1594_BOOL:: var_is_introduced ;
var bool: aux1595_BOOL:: var_is_introduced ;
var bool: aux1596_BOOL:: var_is_introduced ;
var bool: aux1597_BOOL:: var_is_introduced ;
var bool: aux1598_BOOL:: var_is_introduced ;
var bool: aux1599_BOOL:: var_is_introduced ;
var bool: aux1600_BOOL:: var_is_introduced ;
var bool: aux1601_BOOL:: var_is_introduced ;
var bool: aux1602_BOOL:: var_is_introduced ;
var bool: aux1603_BOOL:: var_is_introduced ;
var bool: aux1604_BOOL:: var_is_introduced ;
var bool: aux1605_BOOL:: var_is_introduced ;
var bool: aux1606_BOOL:: var_is_introduced ;
var bool: aux1607_BOOL:: var_is_introduced ;
var bool: aux1608_BOOL:: var_is_introduced ;
var bool: aux1609_BOOL:: var_is_introduced ;
var bool: aux1610_BOOL:: var_is_introduced ;
var bool: aux1611_BOOL:: var_is_introduced ;
var bool: aux1612_BOOL:: var_is_introduced ;
var bool: aux1613_BOOL:: var_is_introduced ;
var bool: aux1614_BOOL:: var_is_introduced ;
var bool: aux1615_BOOL:: var_is_introduced ;
var bool: aux1616_BOOL:: var_is_introduced ;
var bool: aux1617_BOOL:: var_is_introduced ;
var bool: aux1618_BOOL:: var_is_introduced ;
var bool: aux1619_BOOL:: var_is_introduced ;
var bool: aux1620_BOOL:: var_is_introduced ;
var bool: aux1621_BOOL:: var_is_introduced ;
var bool: aux1622_BOOL:: var_is_introduced ;
var bool: aux1623_BOOL:: var_is_introduced ;
var bool: aux1624_BOOL:: var_is_introduced ;
var bool: aux1625_BOOL:: var_is_introduced ;
var bool: aux1626_BOOL:: var_is_introduced ;
var bool: aux1627_BOOL:: var_is_introduced ;
var bool: aux1628_BOOL:: var_is_introduced ;
var bool: aux1629_BOOL:: var_is_introduced ;
var bool: aux1630_BOOL:: var_is_introduced ;
var bool: aux1631_BOOL:: var_is_introduced ;
var bool: aux1632_BOOL:: var_is_introduced ;
var bool: aux1633_BOOL:: var_is_introduced ;
var bool: aux1634_BOOL:: var_is_introduced ;
var bool: aux1635_BOOL:: var_is_introduced ;
var bool: aux1636_BOOL:: var_is_introduced ;
var bool: aux1637_BOOL:: var_is_introduced ;
var bool: aux1638_BOOL:: var_is_introduced ;
var bool: aux1639_BOOL:: var_is_introduced ;
var bool: aux1640_BOOL:: var_is_introduced ;
var bool: aux1641_BOOL:: var_is_introduced ;
var bool: aux1642_BOOL:: var_is_introduced ;
var bool: aux1643_BOOL:: var_is_introduced ;
var bool: aux1644_BOOL:: var_is_introduced ;
var bool: aux1645_BOOL:: var_is_introduced ;
var bool: aux1646_BOOL:: var_is_introduced ;
var bool: aux1647_BOOL:: var_is_introduced ;
var bool: aux1648_BOOL:: var_is_introduced ;
var bool: aux1649_BOOL:: var_is_introduced ;
var bool: aux1650_BOOL:: var_is_introduced ;
var bool: aux1651_BOOL:: var_is_introduced ;
var bool: aux1652_BOOL:: var_is_introduced ;
var bool: aux1653_BOOL:: var_is_introduced ;
var bool: aux1654_BOOL:: var_is_introduced ;
var bool: aux1655_BOOL:: var_is_introduced ;
var bool: aux1656_BOOL:: var_is_introduced ;
var bool: aux1657_BOOL:: var_is_introduced ;
var bool: aux1658_BOOL:: var_is_introduced ;
var bool: aux1659_BOOL:: var_is_introduced ;
var bool: aux1660_BOOL:: var_is_introduced ;
var bool: aux1661_BOOL:: var_is_introduced ;
var bool: aux1662_BOOL:: var_is_introduced ;
var bool: aux1663_BOOL:: var_is_introduced ;
var bool: aux1664_BOOL:: var_is_introduced ;
var bool: aux1665_BOOL:: var_is_introduced ;
var bool: aux1666_BOOL:: var_is_introduced ;
var bool: aux1667_BOOL:: var_is_introduced ;
var bool: aux1668_BOOL:: var_is_introduced ;
var bool: aux1669_BOOL:: var_is_introduced ;
var bool: aux1670_BOOL:: var_is_introduced ;
var bool: aux1671_BOOL:: var_is_introduced ;
var bool: aux1672_BOOL:: var_is_introduced ;
var bool: aux1673_BOOL:: var_is_introduced ;
var bool: aux1674_BOOL:: var_is_introduced ;
var bool: aux1675_BOOL:: var_is_introduced ;
var bool: aux1676_BOOL:: var_is_introduced ;
var bool: aux1677_BOOL:: var_is_introduced ;
var bool: aux1678_BOOL:: var_is_introduced ;
var bool: aux1679_BOOL:: var_is_introduced ;
var bool: aux1680_BOOL:: var_is_introduced ;
var bool: aux1681_BOOL:: var_is_introduced ;
var bool: aux1682_BOOL:: var_is_introduced ;
var bool: aux1683_BOOL:: var_is_introduced ;
var bool: aux1684_BOOL:: var_is_introduced ;
var bool: aux1685_BOOL:: var_is_introduced ;
var bool: aux1686_BOOL:: var_is_introduced ;
var bool: aux1687_BOOL:: var_is_introduced ;
var bool: aux1688_BOOL:: var_is_introduced ;
var bool: aux1689_BOOL:: var_is_introduced ;
var bool: aux1690_BOOL:: var_is_introduced ;
var bool: aux1691_BOOL:: var_is_introduced ;
var bool: aux1692_BOOL:: var_is_introduced ;
var bool: aux1693_BOOL:: var_is_introduced ;
var bool: aux1694_BOOL:: var_is_introduced ;
var bool: aux1695_BOOL:: var_is_introduced ;
var bool: aux1696_BOOL:: var_is_introduced ;
var bool: aux1697_BOOL:: var_is_introduced ;
var bool: aux1698_BOOL:: var_is_introduced ;
var bool: aux1699_BOOL:: var_is_introduced ;
var bool: aux1700_BOOL:: var_is_introduced ;
var bool: aux1701_BOOL:: var_is_introduced ;
var bool: aux1702_BOOL:: var_is_introduced ;
var bool: aux1703_BOOL:: var_is_introduced ;
var bool: aux1704_BOOL:: var_is_introduced ;
var bool: aux1705_BOOL:: var_is_introduced ;
var bool: aux1706_BOOL:: var_is_introduced ;
var bool: aux1707_BOOL:: var_is_introduced ;
var bool: aux1708_BOOL:: var_is_introduced ;
var bool: aux1709_BOOL:: var_is_introduced ;
var bool: aux1710_BOOL:: var_is_introduced ;
var bool: aux1711_BOOL:: var_is_introduced ;
var bool: aux1712_BOOL:: var_is_introduced ;
var bool: aux1713_BOOL:: var_is_introduced ;
var bool: aux1714_BOOL:: var_is_introduced ;
var bool: aux1715_BOOL:: var_is_introduced ;
var bool: aux1716_BOOL:: var_is_introduced ;
var bool: aux1717_BOOL:: var_is_introduced ;
var bool: aux1718_BOOL:: var_is_introduced ;
var bool: aux1719_BOOL:: var_is_introduced ;
var bool: aux1720_BOOL:: var_is_introduced ;
var bool: aux1721_BOOL:: var_is_introduced ;
var bool: aux1722_BOOL:: var_is_introduced ;
var bool: aux1723_BOOL:: var_is_introduced ;
var bool: aux1724_BOOL:: var_is_introduced ;
var bool: aux1725_BOOL:: var_is_introduced ;
var bool: aux1726_BOOL:: var_is_introduced ;
var bool: aux1727_BOOL:: var_is_introduced ;
var bool: aux1728_BOOL:: var_is_introduced ;
var bool: aux1729_BOOL:: var_is_introduced ;
var bool: aux1730_BOOL:: var_is_introduced ;
var bool: aux1731_BOOL:: var_is_introduced ;
var bool: aux1732_BOOL:: var_is_introduced ;
var bool: aux1733_BOOL:: var_is_introduced ;
var bool: aux1734_BOOL:: var_is_introduced ;
var bool: aux1735_BOOL:: var_is_introduced ;
var bool: aux1736_BOOL:: var_is_introduced ;
var bool: aux1737_BOOL:: var_is_introduced ;
var bool: aux1738_BOOL:: var_is_introduced ;
var bool: aux1739_BOOL:: var_is_introduced ;
var bool: aux1740_BOOL:: var_is_introduced ;
var bool: aux1741_BOOL:: var_is_introduced ;
var bool: aux1742_BOOL:: var_is_introduced ;
var bool: aux1743_BOOL:: var_is_introduced ;
var bool: aux1744_BOOL:: var_is_introduced ;
var bool: aux1745_BOOL:: var_is_introduced ;
var bool: aux1746_BOOL:: var_is_introduced ;
var bool: aux1747_BOOL:: var_is_introduced ;
var bool: aux1748_BOOL:: var_is_introduced ;
var bool: aux1749_BOOL:: var_is_introduced ;
var bool: aux1750_BOOL:: var_is_introduced ;
var bool: aux1751_BOOL:: var_is_introduced ;
var bool: aux1752_BOOL:: var_is_introduced ;
var bool: aux1753_BOOL:: var_is_introduced ;
var bool: aux1754_BOOL:: var_is_introduced ;
var bool: aux1755_BOOL:: var_is_introduced ;
var bool: aux1756_BOOL:: var_is_introduced ;
var bool: aux1757_BOOL:: var_is_introduced ;
var bool: aux1758_BOOL:: var_is_introduced ;
var bool: aux1759_BOOL:: var_is_introduced ;
var bool: aux1760_BOOL:: var_is_introduced ;
var bool: aux1761_BOOL:: var_is_introduced ;
var {0,1}: aux1761_INTEGER :: var_is_introduced ;
var bool: aux1762_BOOL:: var_is_introduced ;
var {0,1}: aux1762_INTEGER :: var_is_introduced ;
var bool: aux1763_BOOL:: var_is_introduced ;
var {0,1}: aux1763_INTEGER :: var_is_introduced ;
var bool: aux1764_BOOL:: var_is_introduced ;
var {0,1}: aux1764_INTEGER :: var_is_introduced ;
var bool: aux1765_BOOL:: var_is_introduced ;
var {0,1}: aux1765_INTEGER :: var_is_introduced ;
var bool: aux1766_BOOL:: var_is_introduced ;
var {0,1}: aux1766_INTEGER :: var_is_introduced ;
var bool: aux1767_BOOL:: var_is_introduced ;
var {0,1}: aux1767_INTEGER :: var_is_introduced ;
var bool: aux1768_BOOL:: var_is_introduced ;
var {0,1}: aux1768_INTEGER :: var_is_introduced ;
var bool: aux1769_BOOL:: var_is_introduced ;
var {0,1}: aux1769_INTEGER :: var_is_introduced ;
var bool: aux1770_BOOL:: var_is_introduced ;
var {0,1}: aux1770_INTEGER :: var_is_introduced ;
var bool: aux1771_BOOL:: var_is_introduced ;
var {0,1}: aux1771_INTEGER :: var_is_introduced ;
var bool: aux1772_BOOL:: var_is_introduced ;
var {0,1}: aux1772_INTEGER :: var_is_introduced ;
var bool: aux1773_BOOL:: var_is_introduced ;
var {0,1}: aux1773_INTEGER :: var_is_introduced ;
var bool: aux1774_BOOL:: var_is_introduced ;
var {0,1}: aux1774_INTEGER :: var_is_introduced ;
var bool: aux1775_BOOL:: var_is_introduced ;
var {0,1}: aux1775_INTEGER :: var_is_introduced ;
var bool: aux1776_BOOL:: var_is_introduced ;
var {0,1}: aux1776_INTEGER :: var_is_introduced ;
var bool: aux1777_BOOL:: var_is_introduced ;
var {0,1}: aux1777_INTEGER :: var_is_introduced ;
var bool: aux1778_BOOL:: var_is_introduced ;
var {0,1}: aux1778_INTEGER :: var_is_introduced ;
var bool: aux1779_BOOL:: var_is_introduced ;
var {0,1}: aux1779_INTEGER :: var_is_introduced ;
var bool: aux1780_BOOL:: var_is_introduced ;
var {0,1}: aux1780_INTEGER :: var_is_introduced ;
var bool: aux1781_BOOL:: var_is_introduced ;
var {0,1}: aux1781_INTEGER :: var_is_introduced ;
var bool: aux1782_BOOL:: var_is_introduced ;
var {0,1}: aux1782_INTEGER :: var_is_introduced ;
var bool: aux1783_BOOL:: var_is_introduced ;
var {0,1}: aux1783_INTEGER :: var_is_introduced ;
var bool: aux1784_BOOL:: var_is_introduced ;
var {0,1}: aux1784_INTEGER :: var_is_introduced ;
var bool: aux1785_BOOL:: var_is_introduced ;
var {0,1}: aux1785_INTEGER :: var_is_introduced ;
var bool: aux1786_BOOL:: var_is_introduced ;
var {0,1}: aux1786_INTEGER :: var_is_introduced ;
var bool: aux1787_BOOL:: var_is_introduced ;
var {0,1}: aux1787_INTEGER :: var_is_introduced ;
var bool: aux1788_BOOL:: var_is_introduced ;
var {0,1}: aux1788_INTEGER :: var_is_introduced ;
var bool: aux1789_BOOL:: var_is_introduced ;
var {0,1}: aux1789_INTEGER :: var_is_introduced ;
var bool: aux1790_BOOL:: var_is_introduced ;
var {0,1}: aux1790_INTEGER :: var_is_introduced ;
var bool: aux1791_BOOL:: var_is_introduced ;
var {0,1}: aux1791_INTEGER :: var_is_introduced ;
var bool: aux1792_BOOL:: var_is_introduced ;
var {0,1}: aux1792_INTEGER :: var_is_introduced ;
var bool: aux1793_BOOL:: var_is_introduced ;
var {0,1}: aux1793_INTEGER :: var_is_introduced ;
var bool: aux1794_BOOL:: var_is_introduced ;
var {0,1}: aux1794_INTEGER :: var_is_introduced ;
var bool: aux1795_BOOL:: var_is_introduced ;
var {0,1}: aux1795_INTEGER :: var_is_introduced ;
var bool: aux1796_BOOL:: var_is_introduced ;
var {0,1}: aux1796_INTEGER :: var_is_introduced ;
var bool: aux1797_BOOL:: var_is_introduced ;
var {0,1}: aux1797_INTEGER :: var_is_introduced ;
var bool: aux1798_BOOL:: var_is_introduced ;
var {0,1}: aux1798_INTEGER :: var_is_introduced ;
var bool: aux1799_BOOL:: var_is_introduced ;
var {0,1}: aux1799_INTEGER :: var_is_introduced ;
var bool: aux1800_BOOL:: var_is_introduced ;
var {0,1}: aux1800_INTEGER :: var_is_introduced ;
var bool: aux1801_BOOL:: var_is_introduced ;
var {0,1}: aux1801_INTEGER :: var_is_introduced ;
var bool: aux1802_BOOL:: var_is_introduced ;
var {0,1}: aux1802_INTEGER :: var_is_introduced ;
var bool: aux1803_BOOL:: var_is_introduced ;
var {0,1}: aux1803_INTEGER :: var_is_introduced ;
var bool: aux1804_BOOL:: var_is_introduced ;
var {0,1}: aux1804_INTEGER :: var_is_introduced ;
var bool: aux1805_BOOL:: var_is_introduced ;
var {0,1}: aux1805_INTEGER :: var_is_introduced ;
var bool: aux1806_BOOL:: var_is_introduced ;
var {0,1}: aux1806_INTEGER :: var_is_introduced ;
var bool: aux1807_BOOL:: var_is_introduced ;
var {0,1}: aux1807_INTEGER :: var_is_introduced ;
var bool: aux1808_BOOL:: var_is_introduced ;
var {0,1}: aux1808_INTEGER :: var_is_introduced ;
var bool: aux1809_BOOL:: var_is_introduced ;
var {0,1}: aux1809_INTEGER :: var_is_introduced ;
var bool: aux1810_BOOL:: var_is_introduced ;
var {0,1}: aux1810_INTEGER :: var_is_introduced ;
var bool: aux1811_BOOL:: var_is_introduced ;
var {0,1}: aux1811_INTEGER :: var_is_introduced ;
var bool: aux1812_BOOL:: var_is_introduced ;
var {0,1}: aux1812_INTEGER :: var_is_introduced ;
var bool: aux1813_BOOL:: var_is_introduced ;
var {0,1}: aux1813_INTEGER :: var_is_introduced ;
var bool: aux1814_BOOL:: var_is_introduced ;
var {0,1}: aux1814_INTEGER :: var_is_introduced ;
var bool: aux1815_BOOL:: var_is_introduced ;
var {0,1}: aux1815_INTEGER :: var_is_introduced ;
var bool: aux1816_BOOL:: var_is_introduced ;
var {0,1}: aux1816_INTEGER :: var_is_introduced ;
var bool: aux1817_BOOL:: var_is_introduced ;
var {0,1}: aux1817_INTEGER :: var_is_introduced ;
var bool: aux1818_BOOL:: var_is_introduced ;
var {0,1}: aux1818_INTEGER :: var_is_introduced ;
var bool: aux1819_BOOL:: var_is_introduced ;
var {0,1}: aux1819_INTEGER :: var_is_introduced ;
var bool: aux1820_BOOL:: var_is_introduced ;
var {0,1}: aux1820_INTEGER :: var_is_introduced ;
var bool: aux1821_BOOL:: var_is_introduced ;
var {0,1}: aux1821_INTEGER :: var_is_introduced ;
constraint bool2int(w_00001_00004_BOOL,w_00001_00004_INTEGER);
constraint bool2int(w_00001_00005_BOOL,w_00001_00005_INTEGER);
constraint bool2int(w_00001_00007_BOOL,w_00001_00007_INTEGER);
constraint bool2int(w_00001_00008_BOOL,w_00001_00008_INTEGER);
constraint bool2int(w_00001_00010_BOOL,w_00001_00010_INTEGER);
constraint bool2int(w_00001_00011_BOOL,w_00001_00011_INTEGER);
constraint bool2int(w_00001_00013_BOOL,w_00001_00013_INTEGER);
constraint bool2int(w_00001_00015_BOOL,w_00001_00015_INTEGER);
constraint bool2int(w_00001_00016_BOOL,w_00001_00016_INTEGER);
constraint bool2int(w_00002_00001_BOOL,w_00002_00001_INTEGER);
constraint bool2int(w_00002_00002_BOOL,w_00002_00002_INTEGER);
constraint bool2int(w_00002_00004_BOOL,w_00002_00004_INTEGER);
constraint bool2int(w_00002_00006_BOOL,w_00002_00006_INTEGER);
constraint bool2int(w_00002_00008_BOOL,w_00002_00008_INTEGER);
constraint bool2int(w_00002_00012_BOOL,w_00002_00012_INTEGER);
constraint bool2int(w_00002_00013_BOOL,w_00002_00013_INTEGER);
constraint bool2int(w_00002_00014_BOOL,w_00002_00014_INTEGER);
constraint bool2int(w_00002_00016_BOOL,w_00002_00016_INTEGER);
constraint bool2int(w_00002_00018_BOOL,w_00002_00018_INTEGER);
constraint bool2int(w_00002_00019_BOOL,w_00002_00019_INTEGER);
constraint bool2int(w_00002_00020_BOOL,w_00002_00020_INTEGER);
constraint bool2int(w_00003_00002_BOOL,w_00003_00002_INTEGER);
constraint bool2int(w_00003_00003_BOOL,w_00003_00003_INTEGER);
constraint bool2int(w_00003_00005_BOOL,w_00003_00005_INTEGER);
constraint bool2int(w_00003_00008_BOOL,w_00003_00008_INTEGER);
constraint bool2int(w_00003_00020_BOOL,w_00003_00020_INTEGER);
constraint bool2int(w_00004_00001_BOOL,w_00004_00001_INTEGER);
constraint bool2int(w_00004_00002_BOOL,w_00004_00002_INTEGER);
constraint bool2int(w_00004_00004_BOOL,w_00004_00004_INTEGER);
constraint bool2int(w_00004_00005_BOOL,w_00004_00005_INTEGER);
constraint bool2int(w_00004_00006_BOOL,w_00004_00006_INTEGER);
constraint bool2int(w_00004_00007_BOOL,w_00004_00007_INTEGER);
constraint bool2int(w_00004_00008_BOOL,w_00004_00008_INTEGER);
constraint bool2int(w_00004_00009_BOOL,w_00004_00009_INTEGER);
constraint bool2int(w_00004_00010_BOOL,w_00004_00010_INTEGER);
constraint bool2int(w_00004_00011_BOOL,w_00004_00011_INTEGER);
constraint bool2int(w_00004_00012_BOOL,w_00004_00012_INTEGER);
constraint bool2int(w_00004_00013_BOOL,w_00004_00013_INTEGER);
constraint bool2int(w_00004_00014_BOOL,w_00004_00014_INTEGER);
constraint bool2int(w_00004_00015_BOOL,w_00004_00015_INTEGER);
constraint bool2int(w_00004_00016_BOOL,w_00004_00016_INTEGER);
constraint bool2int(w_00004_00017_BOOL,w_00004_00017_INTEGER);
constraint bool2int(w_00004_00018_BOOL,w_00004_00018_INTEGER);
constraint bool2int(w_00004_00019_BOOL,w_00004_00019_INTEGER);
constraint bool2int(w_00004_00020_BOOL,w_00004_00020_INTEGER);
constraint bool2int(w_00005_00001_BOOL,w_00005_00001_INTEGER);
constraint bool2int(w_00005_00004_BOOL,w_00005_00004_INTEGER);
constraint bool2int(w_00005_00005_BOOL,w_00005_00005_INTEGER);
constraint bool2int(w_00005_00007_BOOL,w_00005_00007_INTEGER);
constraint bool2int(w_00005_00008_BOOL,w_00005_00008_INTEGER);
constraint bool2int(w_00005_00010_BOOL,w_00005_00010_INTEGER);
constraint bool2int(w_00005_00011_BOOL,w_00005_00011_INTEGER);
constraint bool2int(w_00005_00013_BOOL,w_00005_00013_INTEGER);
constraint bool2int(w_00005_00015_BOOL,w_00005_00015_INTEGER);
constraint bool2int(w_00005_00016_BOOL,w_00005_00016_INTEGER);
constraint bool2int(w_00006_00001_BOOL,w_00006_00001_INTEGER);
constraint bool2int(w_00006_00002_BOOL,w_00006_00002_INTEGER);
constraint bool2int(w_00006_00003_BOOL,w_00006_00003_INTEGER);
constraint bool2int(w_00006_00004_BOOL,w_00006_00004_INTEGER);
constraint bool2int(w_00006_00005_BOOL,w_00006_00005_INTEGER);
constraint bool2int(w_00006_00006_BOOL,w_00006_00006_INTEGER);
constraint bool2int(w_00006_00008_BOOL,w_00006_00008_INTEGER);
constraint bool2int(w_00006_00009_BOOL,w_00006_00009_INTEGER);
constraint bool2int(w_00006_00011_BOOL,w_00006_00011_INTEGER);
constraint bool2int(w_00006_00012_BOOL,w_00006_00012_INTEGER);
constraint bool2int(w_00006_00013_BOOL,w_00006_00013_INTEGER);
constraint bool2int(w_00006_00014_BOOL,w_00006_00014_INTEGER);
constraint bool2int(w_00006_00016_BOOL,w_00006_00016_INTEGER);
constraint bool2int(w_00006_00017_BOOL,w_00006_00017_INTEGER);
constraint bool2int(w_00006_00018_BOOL,w_00006_00018_INTEGER);
constraint bool2int(w_00006_00019_BOOL,w_00006_00019_INTEGER);
constraint bool2int(w_00006_00020_BOOL,w_00006_00020_INTEGER);
constraint bool2int(w_00007_00001_BOOL,w_00007_00001_INTEGER);
constraint bool2int(w_00007_00002_BOOL,w_00007_00002_INTEGER);
constraint bool2int(w_00007_00003_BOOL,w_00007_00003_INTEGER);
constraint bool2int(w_00007_00004_BOOL,w_00007_00004_INTEGER);
constraint bool2int(w_00007_00005_BOOL,w_00007_00005_INTEGER);
constraint bool2int(w_00007_00006_BOOL,w_00007_00006_INTEGER);
constraint bool2int(w_00007_00008_BOOL,w_00007_00008_INTEGER);
constraint bool2int(w_00007_00009_BOOL,w_00007_00009_INTEGER);
constraint bool2int(w_00007_00011_BOOL,w_00007_00011_INTEGER);
constraint bool2int(w_00007_00012_BOOL,w_00007_00012_INTEGER);
constraint bool2int(w_00007_00013_BOOL,w_00007_00013_INTEGER);
constraint bool2int(w_00007_00014_BOOL,w_00007_00014_INTEGER);
constraint bool2int(w_00007_00016_BOOL,w_00007_00016_INTEGER);
constraint bool2int(w_00007_00017_BOOL,w_00007_00017_INTEGER);
constraint bool2int(w_00007_00018_BOOL,w_00007_00018_INTEGER);
constraint bool2int(w_00007_00019_BOOL,w_00007_00019_INTEGER);
constraint bool2int(w_00007_00020_BOOL,w_00007_00020_INTEGER);
constraint bool2int(w_00008_00001_BOOL,w_00008_00001_INTEGER);
constraint bool2int(w_00008_00002_BOOL,w_00008_00002_INTEGER);
constraint bool2int(w_00008_00004_BOOL,w_00008_00004_INTEGER);
constraint bool2int(w_00008_00006_BOOL,w_00008_00006_INTEGER);
constraint bool2int(w_00008_00008_BOOL,w_00008_00008_INTEGER);
constraint bool2int(w_00008_00012_BOOL,w_00008_00012_INTEGER);
constraint bool2int(w_00008_00013_BOOL,w_00008_00013_INTEGER);
constraint bool2int(w_00008_00014_BOOL,w_00008_00014_INTEGER);
constraint bool2int(w_00008_00016_BOOL,w_00008_00016_INTEGER);
constraint bool2int(w_00008_00018_BOOL,w_00008_00018_INTEGER);
constraint bool2int(w_00008_00019_BOOL,w_00008_00019_INTEGER);
constraint bool2int(w_00008_00020_BOOL,w_00008_00020_INTEGER);
constraint bool2int(w_00009_00002_BOOL,w_00009_00002_INTEGER);
constraint bool2int(w_00009_00003_BOOL,w_00009_00003_INTEGER);
constraint bool2int(w_00009_00004_BOOL,w_00009_00004_INTEGER);
constraint bool2int(w_00009_00005_BOOL,w_00009_00005_INTEGER);
constraint bool2int(w_00009_00008_BOOL,w_00009_00008_INTEGER);
constraint bool2int(w_00009_00009_BOOL,w_00009_00009_INTEGER);
constraint bool2int(w_00009_00011_BOOL,w_00009_00011_INTEGER);
constraint bool2int(w_00009_00014_BOOL,w_00009_00014_INTEGER);
constraint bool2int(w_00009_00017_BOOL,w_00009_00017_INTEGER);
constraint bool2int(w_00009_00020_BOOL,w_00009_00020_INTEGER);
constraint bool2int(aux18_BOOL,aux18_INTEGER);
constraint bool2int(aux19_BOOL,aux19_INTEGER);
constraint bool2int(aux20_BOOL,aux20_INTEGER);
constraint bool2int(aux21_BOOL,aux21_INTEGER);
constraint bool2int(aux23_BOOL,aux23_INTEGER);
constraint bool2int(aux27_BOOL,aux27_INTEGER);
constraint bool2int(aux32_BOOL,aux32_INTEGER);
constraint bool2int(aux36_BOOL,aux36_INTEGER);
constraint bool2int(aux38_BOOL,aux38_INTEGER);
constraint bool2int(aux40_BOOL,aux40_INTEGER);
constraint bool2int(aux41_BOOL,aux41_INTEGER);
constraint bool2int(aux42_BOOL,aux42_INTEGER);
constraint bool2int(aux43_BOOL,aux43_INTEGER);
constraint bool2int(aux44_BOOL,aux44_INTEGER);
constraint bool2int(aux46_BOOL,aux46_INTEGER);
constraint bool2int(aux51_BOOL,aux51_INTEGER);
constraint bool2int(aux52_BOOL,aux52_INTEGER);
constraint bool2int(aux53_BOOL,aux53_INTEGER);
constraint bool2int(aux54_BOOL,aux54_INTEGER);
constraint bool2int(aux61_BOOL,aux61_INTEGER);
constraint bool2int(aux63_BOOL,aux63_INTEGER);
constraint bool2int(aux69_BOOL,aux69_INTEGER);
constraint bool2int(aux75_BOOL,aux75_INTEGER);
constraint bool2int(aux77_BOOL,aux77_INTEGER);
constraint bool2int(aux79_BOOL,aux79_INTEGER);
constraint bool2int(aux81_BOOL,aux81_INTEGER);
constraint bool2int(aux84_BOOL,aux84_INTEGER);
constraint bool2int(aux85_BOOL,aux85_INTEGER);
constraint bool2int(aux101_BOOL,aux101_INTEGER);
constraint bool2int(aux102_BOOL,aux102_INTEGER);
constraint bool2int(aux105_BOOL,aux105_INTEGER);
constraint bool2int(aux106_BOOL,aux106_INTEGER);
constraint bool2int(aux107_BOOL,aux107_INTEGER);
constraint bool2int(aux108_BOOL,aux108_INTEGER);
constraint bool2int(aux110_BOOL,aux110_INTEGER);
constraint bool2int(aux111_BOOL,aux111_INTEGER);
constraint bool2int(aux112_BOOL,aux112_INTEGER);
constraint bool2int(aux114_BOOL,aux114_INTEGER);
constraint bool2int(aux117_BOOL,aux117_INTEGER);
constraint bool2int(aux118_BOOL,aux118_INTEGER);
constraint bool2int(aux119_BOOL,aux119_INTEGER);
constraint bool2int(aux122_BOOL,aux122_INTEGER);
constraint bool2int(aux123_BOOL,aux123_INTEGER);
constraint bool2int(aux124_BOOL,aux124_INTEGER);
constraint bool2int(aux125_BOOL,aux125_INTEGER);
constraint bool2int(aux127_BOOL,aux127_INTEGER);
constraint bool2int(aux129_BOOL,aux129_INTEGER);
constraint bool2int(aux130_BOOL,aux130_INTEGER);
constraint bool2int(aux131_BOOL,aux131_INTEGER);
constraint bool2int(aux132_BOOL,aux132_INTEGER);
constraint bool2int(aux133_BOOL,aux133_INTEGER);
constraint bool2int(aux136_BOOL,aux136_INTEGER);
constraint bool2int(aux138_BOOL,aux138_INTEGER);
constraint bool2int(aux140_BOOL,aux140_INTEGER);
constraint bool2int(aux141_BOOL,aux141_INTEGER);
constraint bool2int(aux143_BOOL,aux143_INTEGER);
constraint bool2int(aux144_BOOL,aux144_INTEGER);
constraint bool2int(aux153_BOOL,aux153_INTEGER);
constraint bool2int(aux154_BOOL,aux154_INTEGER);
constraint bool2int(aux155_BOOL,aux155_INTEGER);
constraint bool2int(aux156_BOOL,aux156_INTEGER);
constraint bool2int(aux169_BOOL,aux169_INTEGER);
constraint bool2int(aux171_BOOL,aux171_INTEGER);
constraint bool2int(aux172_BOOL,aux172_INTEGER);
constraint bool2int(aux173_BOOL,aux173_INTEGER);
constraint bool2int(aux174_BOOL,aux174_INTEGER);
constraint bool2int(aux197_BOOL,aux197_INTEGER);
constraint bool2int(aux198_BOOL,aux198_INTEGER);
constraint bool2int(aux202_BOOL,aux202_INTEGER);
constraint bool2int(aux204_BOOL,aux204_INTEGER);
constraint bool2int(aux206_BOOL,aux206_INTEGER);
constraint bool2int(aux208_BOOL,aux208_INTEGER);
constraint bool2int(aux209_BOOL,aux209_INTEGER);
constraint bool2int(aux210_BOOL,aux210_INTEGER);
constraint bool2int(aux211_BOOL,aux211_INTEGER);
constraint bool2int(aux214_BOOL,aux214_INTEGER);
constraint bool2int(aux215_BOOL,aux215_INTEGER);
constraint bool2int(aux216_BOOL,aux216_INTEGER);
constraint bool2int(aux217_BOOL,aux217_INTEGER);
constraint bool2int(aux219_BOOL,aux219_INTEGER);
constraint bool2int(aux220_BOOL,aux220_INTEGER);
constraint bool2int(aux221_BOOL,aux221_INTEGER);
constraint bool2int(aux223_BOOL,aux223_INTEGER);
constraint bool2int(aux224_BOOL,aux224_INTEGER);
constraint bool2int(aux225_BOOL,aux225_INTEGER);
constraint bool2int(aux226_BOOL,aux226_INTEGER);
constraint bool2int(aux228_BOOL,aux228_INTEGER);
constraint bool2int(aux231_BOOL,aux231_INTEGER);
constraint bool2int(aux234_BOOL,aux234_INTEGER);
constraint bool2int(aux236_BOOL,aux236_INTEGER);
constraint bool2int(aux238_BOOL,aux238_INTEGER);
constraint bool2int(aux239_BOOL,aux239_INTEGER);
constraint bool2int(aux240_BOOL,aux240_INTEGER);
constraint bool2int(aux241_BOOL,aux241_INTEGER);
constraint bool2int(aux242_BOOL,aux242_INTEGER);
constraint bool2int(aux245_BOOL,aux245_INTEGER);
constraint bool2int(aux249_BOOL,aux249_INTEGER);
constraint bool2int(aux322_BOOL,aux322_INTEGER);
constraint bool2int(aux328_BOOL,aux328_INTEGER);
constraint bool2int(aux412_BOOL,aux412_INTEGER);
constraint bool2int(aux413_BOOL,aux413_INTEGER);
constraint bool2int(aux414_BOOL,aux414_INTEGER);
constraint bool2int(aux415_BOOL,aux415_INTEGER);
constraint bool2int(aux416_BOOL,aux416_INTEGER);
constraint bool2int(aux417_BOOL,aux417_INTEGER);
constraint bool2int(aux418_BOOL,aux418_INTEGER);
constraint bool2int(aux419_BOOL,aux419_INTEGER);
constraint bool2int(aux420_BOOL,aux420_INTEGER);
constraint bool2int(aux421_BOOL,aux421_INTEGER);
constraint bool2int(aux422_BOOL,aux422_INTEGER);
constraint bool2int(aux423_BOOL,aux423_INTEGER);
constraint bool2int(aux424_BOOL,aux424_INTEGER);
constraint bool2int(aux425_BOOL,aux425_INTEGER);
constraint bool2int(aux426_BOOL,aux426_INTEGER);
constraint bool2int(aux427_BOOL,aux427_INTEGER);
constraint bool2int(aux431_BOOL,aux431_INTEGER);
constraint bool2int(aux432_BOOL,aux432_INTEGER);
constraint bool2int(aux433_BOOL,aux433_INTEGER);
constraint bool2int(aux434_BOOL,aux434_INTEGER);
constraint bool2int(aux435_BOOL,aux435_INTEGER);
constraint bool2int(aux436_BOOL,aux436_INTEGER);
constraint bool2int(aux437_BOOL,aux437_INTEGER);
constraint bool2int(aux438_BOOL,aux438_INTEGER);
constraint bool2int(aux439_BOOL,aux439_INTEGER);
constraint bool2int(aux440_BOOL,aux440_INTEGER);
constraint bool2int(aux441_BOOL,aux441_INTEGER);
constraint bool2int(aux442_BOOL,aux442_INTEGER);
constraint bool2int(aux443_BOOL,aux443_INTEGER);
constraint bool2int(aux444_BOOL,aux444_INTEGER);
constraint bool2int(aux445_BOOL,aux445_INTEGER);
constraint bool2int(aux446_BOOL,aux446_INTEGER);
constraint bool2int(aux447_BOOL,aux447_INTEGER);
constraint bool2int(aux448_BOOL,aux448_INTEGER);
constraint bool2int(aux449_BOOL,aux449_INTEGER);
constraint bool2int(aux450_BOOL,aux450_INTEGER);
constraint bool2int(aux451_BOOL,aux451_INTEGER);
constraint bool2int(aux452_BOOL,aux452_INTEGER);
constraint bool2int(aux453_BOOL,aux453_INTEGER);
constraint bool2int(aux454_BOOL,aux454_INTEGER);
constraint bool2int(aux455_BOOL,aux455_INTEGER);
constraint bool2int(aux456_BOOL,aux456_INTEGER);
constraint bool2int(aux457_BOOL,aux457_INTEGER);
constraint bool2int(aux458_BOOL,aux458_INTEGER);
constraint bool2int(aux459_BOOL,aux459_INTEGER);
constraint bool2int(aux460_BOOL,aux460_INTEGER);
constraint bool2int(aux461_BOOL,aux461_INTEGER);
constraint bool2int(aux462_BOOL,aux462_INTEGER);
constraint bool2int(aux463_BOOL,aux463_INTEGER);
constraint bool2int(aux464_BOOL,aux464_INTEGER);
constraint bool2int(aux465_BOOL,aux465_INTEGER);
constraint bool2int(aux466_BOOL,aux466_INTEGER);
constraint bool2int(aux467_BOOL,aux467_INTEGER);
constraint bool2int(aux468_BOOL,aux468_INTEGER);
constraint bool2int(aux469_BOOL,aux469_INTEGER);
constraint bool2int(aux470_BOOL,aux470_INTEGER);
constraint bool2int(aux471_BOOL,aux471_INTEGER);
constraint bool2int(aux472_BOOL,aux472_INTEGER);
constraint bool2int(aux473_BOOL,aux473_INTEGER);
constraint bool2int(aux474_BOOL,aux474_INTEGER);
constraint bool2int(aux475_BOOL,aux475_INTEGER);
constraint bool2int(aux476_BOOL,aux476_INTEGER);
constraint bool2int(aux477_BOOL,aux477_INTEGER);
constraint bool2int(aux478_BOOL,aux478_INTEGER);
constraint bool2int(aux479_BOOL,aux479_INTEGER);
constraint bool2int(aux480_BOOL,aux480_INTEGER);
constraint bool2int(aux481_BOOL,aux481_INTEGER);
constraint bool2int(aux482_BOOL,aux482_INTEGER);
constraint bool2int(aux483_BOOL,aux483_INTEGER);
constraint bool2int(aux484_BOOL,aux484_INTEGER);
constraint bool2int(aux485_BOOL,aux485_INTEGER);
constraint bool2int(aux486_BOOL,aux486_INTEGER);
constraint bool2int(aux487_BOOL,aux487_INTEGER);
constraint bool2int(aux490_BOOL,aux490_INTEGER);
constraint bool2int(aux493_BOOL,aux493_INTEGER);
constraint bool2int(aux496_BOOL,aux496_INTEGER);
constraint bool2int(aux509_BOOL,aux509_INTEGER);
constraint bool2int(aux510_BOOL,aux510_INTEGER);
constraint bool2int(aux511_BOOL,aux511_INTEGER);
constraint bool2int(aux512_BOOL,aux512_INTEGER);
constraint bool2int(aux513_BOOL,aux513_INTEGER);
constraint bool2int(aux514_BOOL,aux514_INTEGER);
constraint bool2int(aux515_BOOL,aux515_INTEGER);
constraint bool2int(aux516_BOOL,aux516_INTEGER);
constraint bool2int(aux517_BOOL,aux517_INTEGER);
constraint bool2int(aux518_BOOL,aux518_INTEGER);
constraint bool2int(aux519_BOOL,aux519_INTEGER);
constraint bool2int(aux520_BOOL,aux520_INTEGER);
constraint bool2int(aux523_BOOL,aux523_INTEGER);
constraint bool2int(aux526_BOOL,aux526_INTEGER);
constraint bool2int(aux535_BOOL,aux535_INTEGER);
constraint bool2int(aux542_BOOL,aux542_INTEGER);
constraint bool2int(aux543_BOOL,aux543_INTEGER);
constraint bool2int(aux544_BOOL,aux544_INTEGER);
constraint bool2int(aux545_BOOL,aux545_INTEGER);
constraint bool2int(aux546_BOOL,aux546_INTEGER);
constraint bool2int(aux547_BOOL,aux547_INTEGER);
constraint bool2int(aux548_BOOL,aux548_INTEGER);
constraint bool2int(aux549_BOOL,aux549_INTEGER);
constraint bool2int(aux550_BOOL,aux550_INTEGER);
constraint bool2int(aux551_BOOL,aux551_INTEGER);
constraint bool2int(aux552_BOOL,aux552_INTEGER);
constraint bool2int(aux553_BOOL,aux553_INTEGER);
constraint bool2int(aux554_BOOL,aux554_INTEGER);
constraint bool2int(aux555_BOOL,aux555_INTEGER);
constraint bool2int(aux556_BOOL,aux556_INTEGER);
constraint bool2int(aux557_BOOL,aux557_INTEGER);
constraint bool2int(aux558_BOOL,aux558_INTEGER);
constraint bool2int(aux559_BOOL,aux559_INTEGER);
constraint bool2int(aux560_BOOL,aux560_INTEGER);
constraint bool2int(aux561_BOOL,aux561_INTEGER);
constraint bool2int(aux562_BOOL,aux562_INTEGER);
constraint bool2int(aux563_BOOL,aux563_INTEGER);
constraint bool2int(aux564_BOOL,aux564_INTEGER);
constraint bool2int(aux565_BOOL,aux565_INTEGER);
constraint bool2int(aux566_BOOL,aux566_INTEGER);
constraint bool2int(aux567_BOOL,aux567_INTEGER);
constraint bool2int(aux568_BOOL,aux568_INTEGER);
constraint bool2int(aux569_BOOL,aux569_INTEGER);
constraint bool2int(aux570_BOOL,aux570_INTEGER);
constraint bool2int(aux571_BOOL,aux571_INTEGER);
constraint bool2int(aux572_BOOL,aux572_INTEGER);
constraint bool2int(aux573_BOOL,aux573_INTEGER);
constraint bool2int(aux574_BOOL,aux574_INTEGER);
constraint bool2int(aux575_BOOL,aux575_INTEGER);
constraint bool2int(aux576_BOOL,aux576_INTEGER);
constraint bool2int(aux577_BOOL,aux577_INTEGER);
constraint bool2int(aux578_BOOL,aux578_INTEGER);
constraint bool2int(aux579_BOOL,aux579_INTEGER);
constraint bool2int(aux580_BOOL,aux580_INTEGER);
constraint bool2int(aux581_BOOL,aux581_INTEGER);
constraint bool2int(aux582_BOOL,aux582_INTEGER);
constraint bool2int(aux583_BOOL,aux583_INTEGER);
constraint bool2int(aux584_BOOL,aux584_INTEGER);
constraint bool2int(aux585_BOOL,aux585_INTEGER);
constraint bool2int(aux586_BOOL,aux586_INTEGER);
constraint bool2int(aux587_BOOL,aux587_INTEGER);
constraint bool2int(aux590_BOOL,aux590_INTEGER);
constraint bool2int(aux596_BOOL,aux596_INTEGER);
constraint bool2int(aux597_BOOL,aux597_INTEGER);
constraint bool2int(aux598_BOOL,aux598_INTEGER);
constraint bool2int(aux599_BOOL,aux599_INTEGER);
constraint bool2int(aux600_BOOL,aux600_INTEGER);
constraint bool2int(aux601_BOOL,aux601_INTEGER);
constraint bool2int(aux602_BOOL,aux602_INTEGER);
constraint bool2int(aux603_BOOL,aux603_INTEGER);
constraint bool2int(aux604_BOOL,aux604_INTEGER);
constraint bool2int(aux605_BOOL,aux605_INTEGER);
constraint bool2int(aux606_BOOL,aux606_INTEGER);
constraint bool2int(aux607_BOOL,aux607_INTEGER);
constraint bool2int(aux608_BOOL,aux608_INTEGER);
constraint bool2int(aux609_BOOL,aux609_INTEGER);
constraint bool2int(aux610_BOOL,aux610_INTEGER);
constraint bool2int(aux611_BOOL,aux611_INTEGER);
constraint bool2int(aux612_BOOL,aux612_INTEGER);
constraint bool2int(aux615_BOOL,aux615_INTEGER);
constraint bool2int(aux618_BOOL,aux618_INTEGER);
constraint bool2int(aux621_BOOL,aux621_INTEGER);
constraint bool2int(aux622_BOOL,aux622_INTEGER);
constraint bool2int(aux623_BOOL,aux623_INTEGER);
constraint bool2int(aux624_BOOL,aux624_INTEGER);
constraint bool2int(aux625_BOOL,aux625_INTEGER);
constraint bool2int(aux626_BOOL,aux626_INTEGER);
constraint bool2int(aux627_BOOL,aux627_INTEGER);
constraint bool2int(aux628_BOOL,aux628_INTEGER);
constraint bool2int(aux629_BOOL,aux629_INTEGER);
constraint bool2int(aux630_BOOL,aux630_INTEGER);
constraint bool2int(aux631_BOOL,aux631_INTEGER);
constraint bool2int(aux632_BOOL,aux632_INTEGER);
constraint bool2int(aux633_BOOL,aux633_INTEGER);
constraint bool2int(aux1010_BOOL,aux1010_INTEGER);
constraint bool2int(aux1011_BOOL,aux1011_INTEGER);
constraint bool2int(aux1012_BOOL,aux1012_INTEGER);
constraint bool2int(aux1013_BOOL,aux1013_INTEGER);
constraint bool2int(aux1014_BOOL,aux1014_INTEGER);
constraint bool2int(aux1015_BOOL,aux1015_INTEGER);
constraint bool2int(aux1016_BOOL,aux1016_INTEGER);
constraint bool2int(aux1017_BOOL,aux1017_INTEGER);
constraint bool2int(aux1086_BOOL,aux1086_INTEGER);
constraint bool2int(aux1087_BOOL,aux1087_INTEGER);
constraint bool2int(aux1088_BOOL,aux1088_INTEGER);
constraint bool2int(aux1089_BOOL,aux1089_INTEGER);
constraint bool2int(aux1090_BOOL,aux1090_INTEGER);
constraint bool2int(aux1091_BOOL,aux1091_INTEGER);
constraint bool2int(aux1092_BOOL,aux1092_INTEGER);
constraint bool2int(aux1093_BOOL,aux1093_INTEGER);
constraint bool2int(aux1094_BOOL,aux1094_INTEGER);
constraint bool2int(aux1095_BOOL,aux1095_INTEGER);
constraint bool2int(aux1096_BOOL,aux1096_INTEGER);
constraint bool2int(aux1097_BOOL,aux1097_INTEGER);
constraint bool2int(aux1098_BOOL,aux1098_INTEGER);
constraint bool2int(aux1099_BOOL,aux1099_INTEGER);
constraint bool2int(aux1100_BOOL,aux1100_INTEGER);
constraint bool2int(aux1101_BOOL,aux1101_INTEGER);
constraint bool2int(aux1102_BOOL,aux1102_INTEGER);
constraint bool2int(aux1103_BOOL,aux1103_INTEGER);
constraint bool2int(aux1104_BOOL,aux1104_INTEGER);
constraint bool2int(aux1105_BOOL,aux1105_INTEGER);
constraint bool2int(aux1106_BOOL,aux1106_INTEGER);
constraint bool2int(aux1107_BOOL,aux1107_INTEGER);
constraint bool2int(aux1108_BOOL,aux1108_INTEGER);
constraint bool2int(aux1109_BOOL,aux1109_INTEGER);
constraint bool2int(aux1110_BOOL,aux1110_INTEGER);
constraint bool2int(aux1111_BOOL,aux1111_INTEGER);
constraint bool2int(aux1112_BOOL,aux1112_INTEGER);
constraint bool2int(aux1113_BOOL,aux1113_INTEGER);
constraint bool2int(aux1114_BOOL,aux1114_INTEGER);
constraint bool2int(aux1115_BOOL,aux1115_INTEGER);
constraint bool2int(aux1116_BOOL,aux1116_INTEGER);
constraint bool2int(aux1117_BOOL,aux1117_INTEGER);
constraint bool2int(aux1118_BOOL,aux1118_INTEGER);
constraint bool2int(aux1119_BOOL,aux1119_INTEGER);
constraint bool2int(aux1120_BOOL,aux1120_INTEGER);
constraint bool2int(aux1121_BOOL,aux1121_INTEGER);
constraint bool2int(aux1122_BOOL,aux1122_INTEGER);
constraint bool2int(aux1123_BOOL,aux1123_INTEGER);
constraint bool2int(aux1133_BOOL,aux1133_INTEGER);
constraint bool2int(aux1134_BOOL,aux1134_INTEGER);
constraint bool2int(aux1135_BOOL,aux1135_INTEGER);
constraint bool2int(aux1136_BOOL,aux1136_INTEGER);
constraint bool2int(aux1137_BOOL,aux1137_INTEGER);
constraint bool2int(aux1138_BOOL,aux1138_INTEGER);
constraint bool2int(aux1139_BOOL,aux1139_INTEGER);
constraint bool2int(aux1140_BOOL,aux1140_INTEGER);
constraint bool2int(aux1141_BOOL,aux1141_INTEGER);
constraint bool2int(aux1142_BOOL,aux1142_INTEGER);
constraint bool2int(aux1143_BOOL,aux1143_INTEGER);
constraint bool2int(aux1144_BOOL,aux1144_INTEGER);
constraint bool2int(aux1145_BOOL,aux1145_INTEGER);
constraint bool2int(aux1146_BOOL,aux1146_INTEGER);
constraint bool2int(aux1147_BOOL,aux1147_INTEGER);
constraint bool2int(aux1148_BOOL,aux1148_INTEGER);
constraint bool2int(aux1149_BOOL,aux1149_INTEGER);
constraint bool2int(aux1150_BOOL,aux1150_INTEGER);
constraint bool2int(aux1151_BOOL,aux1151_INTEGER);
constraint bool2int(aux1152_BOOL,aux1152_INTEGER);
constraint bool2int(aux1153_BOOL,aux1153_INTEGER);
constraint bool2int(aux1154_BOOL,aux1154_INTEGER);
constraint bool2int(aux1155_BOOL,aux1155_INTEGER);
constraint bool2int(aux1165_BOOL,aux1165_INTEGER);
constraint bool2int(aux1166_BOOL,aux1166_INTEGER);
constraint bool2int(aux1167_BOOL,aux1167_INTEGER);
constraint bool2int(aux1168_BOOL,aux1168_INTEGER);
constraint bool2int(aux1169_BOOL,aux1169_INTEGER);
constraint bool2int(aux1170_BOOL,aux1170_INTEGER);
constraint bool2int(aux1171_BOOL,aux1171_INTEGER);
constraint bool2int(aux1172_BOOL,aux1172_INTEGER);
constraint bool2int(aux1177_BOOL,aux1177_INTEGER);
constraint bool2int(aux1178_BOOL,aux1178_INTEGER);
constraint bool2int(aux1179_BOOL,aux1179_INTEGER);
constraint bool2int(aux1180_BOOL,aux1180_INTEGER);
constraint bool2int(aux1181_BOOL,aux1181_INTEGER);
constraint bool2int(aux1182_BOOL,aux1182_INTEGER);
constraint bool2int(aux1183_BOOL,aux1183_INTEGER);
constraint bool2int(aux1184_BOOL,aux1184_INTEGER);
constraint bool2int(aux1185_BOOL,aux1185_INTEGER);
constraint bool2int(aux1186_BOOL,aux1186_INTEGER);
constraint bool2int(aux1187_BOOL,aux1187_INTEGER);
constraint bool2int(aux1188_BOOL,aux1188_INTEGER);
constraint bool2int(aux1189_BOOL,aux1189_INTEGER);
constraint bool2int(aux1190_BOOL,aux1190_INTEGER);
constraint bool2int(aux1191_BOOL,aux1191_INTEGER);
constraint bool2int(aux1192_BOOL,aux1192_INTEGER);
constraint bool2int(aux1193_BOOL,aux1193_INTEGER);
constraint bool2int(aux1194_BOOL,aux1194_INTEGER);
constraint bool2int(aux1195_BOOL,aux1195_INTEGER);
constraint bool2int(aux1196_BOOL,aux1196_INTEGER);
constraint bool2int(aux1197_BOOL,aux1197_INTEGER);
constraint bool2int(aux1198_BOOL,aux1198_INTEGER);
constraint bool2int(aux1199_BOOL,aux1199_INTEGER);
constraint bool2int(aux1200_BOOL,aux1200_INTEGER);
constraint bool2int(aux1201_BOOL,aux1201_INTEGER);
constraint bool2int(aux1202_BOOL,aux1202_INTEGER);
constraint bool2int(aux1203_BOOL,aux1203_INTEGER);
constraint bool2int(aux1204_BOOL,aux1204_INTEGER);
constraint bool2int(aux1205_BOOL,aux1205_INTEGER);
constraint bool2int(aux1206_BOOL,aux1206_INTEGER);
constraint bool2int(aux1207_BOOL,aux1207_INTEGER);
constraint bool2int(aux1208_BOOL,aux1208_INTEGER);
constraint bool2int(aux1209_BOOL,aux1209_INTEGER);
constraint bool2int(aux1210_BOOL,aux1210_INTEGER);
constraint bool2int(aux1211_BOOL,aux1211_INTEGER);
constraint bool2int(aux1212_BOOL,aux1212_INTEGER);
constraint bool2int(aux1213_BOOL,aux1213_INTEGER);
constraint bool2int(aux1214_BOOL,aux1214_INTEGER);
constraint bool2int(aux1215_BOOL,aux1215_INTEGER);
constraint bool2int(aux1216_BOOL,aux1216_INTEGER);
constraint bool2int(aux1217_BOOL,aux1217_INTEGER);
constraint bool2int(aux1218_BOOL,aux1218_INTEGER);
constraint bool2int(aux1219_BOOL,aux1219_INTEGER);
constraint bool2int(aux1220_BOOL,aux1220_INTEGER);
constraint bool2int(aux1221_BOOL,aux1221_INTEGER);
constraint bool2int(aux1222_BOOL,aux1222_INTEGER);
constraint bool2int(aux1223_BOOL,aux1223_INTEGER);
constraint bool2int(aux1224_BOOL,aux1224_INTEGER);
constraint bool2int(aux1225_BOOL,aux1225_INTEGER);
constraint bool2int(aux1226_BOOL,aux1226_INTEGER);
constraint bool2int(aux1227_BOOL,aux1227_INTEGER);
constraint bool2int(aux1228_BOOL,aux1228_INTEGER);
constraint bool2int(aux1229_BOOL,aux1229_INTEGER);
constraint bool2int(aux1230_BOOL,aux1230_INTEGER);
constraint bool2int(aux1231_BOOL,aux1231_INTEGER);
constraint bool2int(aux1232_BOOL,aux1232_INTEGER);
constraint bool2int(aux1233_BOOL,aux1233_INTEGER);
constraint bool2int(aux1234_BOOL,aux1234_INTEGER);
constraint bool2int(aux1235_BOOL,aux1235_INTEGER);
constraint bool2int(aux1236_BOOL,aux1236_INTEGER);
constraint bool2int(aux1237_BOOL,aux1237_INTEGER);
constraint bool2int(aux1238_BOOL,aux1238_INTEGER);
constraint bool2int(aux1239_BOOL,aux1239_INTEGER);
constraint bool2int(aux1240_BOOL,aux1240_INTEGER);
constraint bool2int(aux1241_BOOL,aux1241_INTEGER);
constraint bool2int(aux1242_BOOL,aux1242_INTEGER);
constraint bool2int(aux1243_BOOL,aux1243_INTEGER);
constraint bool2int(aux1244_BOOL,aux1244_INTEGER);
constraint bool2int(aux1245_BOOL,aux1245_INTEGER);
constraint bool2int(aux1246_BOOL,aux1246_INTEGER);
constraint bool2int(aux1247_BOOL,aux1247_INTEGER);
constraint bool2int(aux1248_BOOL,aux1248_INTEGER);
constraint bool2int(aux1249_BOOL,aux1249_INTEGER);
constraint bool2int(aux1250_BOOL,aux1250_INTEGER);
constraint bool2int(aux1251_BOOL,aux1251_INTEGER);
constraint bool2int(aux1252_BOOL,aux1252_INTEGER);
constraint bool2int(aux1253_BOOL,aux1253_INTEGER);
constraint bool2int(aux1254_BOOL,aux1254_INTEGER);
constraint bool2int(aux1257_BOOL,aux1257_INTEGER);
constraint bool2int(aux1264_BOOL,aux1264_INTEGER);
constraint bool2int(aux1265_BOOL,aux1265_INTEGER);
constraint bool2int(aux1266_BOOL,aux1266_INTEGER);
constraint bool2int(aux1267_BOOL,aux1267_INTEGER);
constraint bool2int(aux1268_BOOL,aux1268_INTEGER);
constraint bool2int(aux1269_BOOL,aux1269_INTEGER);
constraint bool2int(aux1270_BOOL,aux1270_INTEGER);
constraint bool2int(aux1271_BOOL,aux1271_INTEGER);
constraint bool2int(aux1272_BOOL,aux1272_INTEGER);
constraint bool2int(aux1273_BOOL,aux1273_INTEGER);
constraint bool2int(aux1274_BOOL,aux1274_INTEGER);
constraint bool2int(aux1275_BOOL,aux1275_INTEGER);
constraint bool2int(aux1276_BOOL,aux1276_INTEGER);
constraint bool2int(aux1277_BOOL,aux1277_INTEGER);
constraint bool2int(aux1278_BOOL,aux1278_INTEGER);
constraint bool2int(aux1279_BOOL,aux1279_INTEGER);
constraint bool2int(aux1280_BOOL,aux1280_INTEGER);
constraint bool2int(aux1281_BOOL,aux1281_INTEGER);
constraint bool2int(aux1282_BOOL,aux1282_INTEGER);
constraint bool2int(aux1283_BOOL,aux1283_INTEGER);
constraint bool2int(aux1284_BOOL,aux1284_INTEGER);
constraint bool2int(aux1285_BOOL,aux1285_INTEGER);
constraint bool2int(aux1286_BOOL,aux1286_INTEGER);
constraint bool2int(aux1287_BOOL,aux1287_INTEGER);
constraint bool2int(aux1288_BOOL,aux1288_INTEGER);
constraint bool2int(aux1289_BOOL,aux1289_INTEGER);
constraint bool2int(aux1290_BOOL,aux1290_INTEGER);
constraint bool2int(aux1291_BOOL,aux1291_INTEGER);
constraint bool2int(aux1292_BOOL,aux1292_INTEGER);
constraint bool2int(aux1293_BOOL,aux1293_INTEGER);
constraint bool2int(aux1294_BOOL,aux1294_INTEGER);
constraint bool2int(aux1295_BOOL,aux1295_INTEGER);
constraint bool2int(aux1296_BOOL,aux1296_INTEGER);
constraint bool2int(aux1297_BOOL,aux1297_INTEGER);
constraint bool2int(aux1298_BOOL,aux1298_INTEGER);
constraint bool2int(aux1299_BOOL,aux1299_INTEGER);
constraint bool2int(aux1300_BOOL,aux1300_INTEGER);
constraint bool2int(aux1301_BOOL,aux1301_INTEGER);
constraint bool2int(aux1302_BOOL,aux1302_INTEGER);
constraint bool2int(aux1303_BOOL,aux1303_INTEGER);
constraint bool2int(aux1304_BOOL,aux1304_INTEGER);
constraint bool2int(aux1305_BOOL,aux1305_INTEGER);
constraint bool2int(aux1306_BOOL,aux1306_INTEGER);
constraint bool2int(aux1307_BOOL,aux1307_INTEGER);
constraint bool2int(aux1308_BOOL,aux1308_INTEGER);
constraint bool2int(aux1309_BOOL,aux1309_INTEGER);
constraint bool2int(aux1310_BOOL,aux1310_INTEGER);
constraint bool2int(aux1311_BOOL,aux1311_INTEGER);
constraint bool2int(aux1312_BOOL,aux1312_INTEGER);
constraint bool2int(aux1313_BOOL,aux1313_INTEGER);
constraint bool2int(aux1314_BOOL,aux1314_INTEGER);
constraint bool2int(aux1315_BOOL,aux1315_INTEGER);
constraint bool2int(aux1316_BOOL,aux1316_INTEGER);
constraint bool2int(aux1317_BOOL,aux1317_INTEGER);
constraint bool2int(aux1318_BOOL,aux1318_INTEGER);
constraint bool2int(aux1319_BOOL,aux1319_INTEGER);
constraint bool2int(aux1320_BOOL,aux1320_INTEGER);
constraint bool2int(aux1321_BOOL,aux1321_INTEGER);
constraint bool2int(aux1322_BOOL,aux1322_INTEGER);
constraint bool2int(aux1323_BOOL,aux1323_INTEGER);
constraint bool2int(aux1324_BOOL,aux1324_INTEGER);
constraint bool2int(aux1325_BOOL,aux1325_INTEGER);
constraint bool2int(aux1326_BOOL,aux1326_INTEGER);
constraint bool2int(aux1327_BOOL,aux1327_INTEGER);
constraint bool2int(aux1328_BOOL,aux1328_INTEGER);
constraint bool2int(aux1329_BOOL,aux1329_INTEGER);
constraint bool2int(aux1330_BOOL,aux1330_INTEGER);
constraint bool2int(aux1331_BOOL,aux1331_INTEGER);
constraint bool2int(aux1332_BOOL,aux1332_INTEGER);
constraint bool2int(aux1333_BOOL,aux1333_INTEGER);
constraint bool2int(aux1334_BOOL,aux1334_INTEGER);
constraint bool2int(aux1335_BOOL,aux1335_INTEGER);
constraint bool2int(aux1336_BOOL,aux1336_INTEGER);
constraint bool2int(aux1337_BOOL,aux1337_INTEGER);
constraint bool2int(aux1338_BOOL,aux1338_INTEGER);
constraint bool2int(aux1339_BOOL,aux1339_INTEGER);
constraint bool2int(aux1340_BOOL,aux1340_INTEGER);
constraint bool2int(aux1341_BOOL,aux1341_INTEGER);
constraint bool2int(aux1342_BOOL,aux1342_INTEGER);
constraint bool2int(aux1343_BOOL,aux1343_INTEGER);
constraint bool2int(aux1344_BOOL,aux1344_INTEGER);
constraint bool2int(aux1345_BOOL,aux1345_INTEGER);
constraint bool2int(aux1346_BOOL,aux1346_INTEGER);
constraint bool2int(aux1347_BOOL,aux1347_INTEGER);
constraint bool2int(aux1348_BOOL,aux1348_INTEGER);
constraint bool2int(aux1349_BOOL,aux1349_INTEGER);
constraint bool2int(aux1350_BOOL,aux1350_INTEGER);
constraint bool2int(aux1351_BOOL,aux1351_INTEGER);
constraint bool2int(aux1352_BOOL,aux1352_INTEGER);
constraint bool2int(aux1353_BOOL,aux1353_INTEGER);
constraint bool2int(aux1354_BOOL,aux1354_INTEGER);
constraint bool2int(aux1355_BOOL,aux1355_INTEGER);
constraint bool2int(aux1356_BOOL,aux1356_INTEGER);
constraint bool2int(aux1357_BOOL,aux1357_INTEGER);
constraint bool2int(aux1358_BOOL,aux1358_INTEGER);
constraint bool2int(aux1359_BOOL,aux1359_INTEGER);
constraint bool2int(aux1360_BOOL,aux1360_INTEGER);
constraint bool2int(aux1361_BOOL,aux1361_INTEGER);
constraint bool2int(aux1362_BOOL,aux1362_INTEGER);
constraint bool2int(aux1363_BOOL,aux1363_INTEGER);
constraint bool2int(aux1364_BOOL,aux1364_INTEGER);
constraint bool2int(aux1365_BOOL,aux1365_INTEGER);
constraint bool2int(aux1366_BOOL,aux1366_INTEGER);
constraint bool2int(aux1367_BOOL,aux1367_INTEGER);
constraint bool2int(aux1376_BOOL,aux1376_INTEGER);
constraint bool2int(aux1377_BOOL,aux1377_INTEGER);
constraint bool2int(aux1378_BOOL,aux1378_INTEGER);
constraint bool2int(aux1379_BOOL,aux1379_INTEGER);
constraint bool2int(aux1380_BOOL,aux1380_INTEGER);
constraint bool2int(aux1381_BOOL,aux1381_INTEGER);
constraint bool2int(aux1382_BOOL,aux1382_INTEGER);
constraint bool2int(aux1383_BOOL,aux1383_INTEGER);
constraint bool2int(aux1384_BOOL,aux1384_INTEGER);
constraint bool2int(aux1385_BOOL,aux1385_INTEGER);
constraint bool2int(aux1386_BOOL,aux1386_INTEGER);
constraint bool2int(aux1387_BOOL,aux1387_INTEGER);
constraint bool2int(aux1388_BOOL,aux1388_INTEGER);
constraint bool2int(aux1389_BOOL,aux1389_INTEGER);
constraint bool2int(aux1390_BOOL,aux1390_INTEGER);
constraint bool2int(aux1391_BOOL,aux1391_INTEGER);
constraint bool2int(aux1392_BOOL,aux1392_INTEGER);
constraint bool2int(aux1393_BOOL,aux1393_INTEGER);
constraint bool2int(aux1394_BOOL,aux1394_INTEGER);
constraint bool2int(aux1395_BOOL,aux1395_INTEGER);
constraint bool2int(aux1396_BOOL,aux1396_INTEGER);
constraint bool2int(aux1397_BOOL,aux1397_INTEGER);
constraint bool2int(aux1398_BOOL,aux1398_INTEGER);
constraint bool2int(aux1399_BOOL,aux1399_INTEGER);
constraint bool2int(aux1400_BOOL,aux1400_INTEGER);
constraint bool2int(aux1401_BOOL,aux1401_INTEGER);
constraint bool2int(aux1402_BOOL,aux1402_INTEGER);
constraint bool2int(aux1403_BOOL,aux1403_INTEGER);
constraint bool2int(aux1404_BOOL,aux1404_INTEGER);
constraint bool2int(aux1405_BOOL,aux1405_INTEGER);
constraint bool2int(aux1406_BOOL,aux1406_INTEGER);
constraint bool2int(aux1407_BOOL,aux1407_INTEGER);
constraint bool2int(aux1408_BOOL,aux1408_INTEGER);
constraint bool2int(aux1409_BOOL,aux1409_INTEGER);
constraint bool2int(aux1410_BOOL,aux1410_INTEGER);
constraint bool2int(aux1411_BOOL,aux1411_INTEGER);
constraint bool2int(aux1412_BOOL,aux1412_INTEGER);
constraint bool2int(aux1413_BOOL,aux1413_INTEGER);
constraint bool2int(aux1414_BOOL,aux1414_INTEGER);
constraint bool2int(aux1415_BOOL,aux1415_INTEGER);
constraint bool2int(aux1416_BOOL,aux1416_INTEGER);
constraint bool2int(aux1417_BOOL,aux1417_INTEGER);
constraint bool2int(aux1418_BOOL,aux1418_INTEGER);
constraint bool2int(aux1419_BOOL,aux1419_INTEGER);
constraint bool2int(aux1420_BOOL,aux1420_INTEGER);
constraint bool2int(aux1421_BOOL,aux1421_INTEGER);
constraint bool2int(aux1422_BOOL,aux1422_INTEGER);
constraint bool2int(aux1423_BOOL,aux1423_INTEGER);
constraint bool2int(aux1424_BOOL,aux1424_INTEGER);
constraint bool2int(aux1425_BOOL,aux1425_INTEGER);
constraint bool2int(aux1426_BOOL,aux1426_INTEGER);
constraint bool2int(aux1427_BOOL,aux1427_INTEGER);
constraint bool2int(aux1428_BOOL,aux1428_INTEGER);
constraint bool2int(aux1429_BOOL,aux1429_INTEGER);
constraint bool2int(aux1430_BOOL,aux1430_INTEGER);
constraint bool2int(aux1431_BOOL,aux1431_INTEGER);
constraint bool2int(aux1432_BOOL,aux1432_INTEGER);
constraint bool2int(aux1435_BOOL,aux1435_INTEGER);
constraint bool2int(aux1454_BOOL,aux1454_INTEGER);
constraint bool2int(aux1455_BOOL,aux1455_INTEGER);
constraint bool2int(aux1456_BOOL,aux1456_INTEGER);
constraint bool2int(aux1457_BOOL,aux1457_INTEGER);
constraint bool2int(aux1458_BOOL,aux1458_INTEGER);
constraint bool2int(aux1459_BOOL,aux1459_INTEGER);
constraint bool2int(aux1461_BOOL,aux1461_INTEGER);
constraint bool2int(aux1462_BOOL,aux1462_INTEGER);
constraint bool2int(aux1463_BOOL,aux1463_INTEGER);
constraint bool2int(aux1464_BOOL,aux1464_INTEGER);
constraint bool2int(aux1465_BOOL,aux1465_INTEGER);
constraint bool2int(aux1466_BOOL,aux1466_INTEGER);
constraint bool2int(aux1467_BOOL,aux1467_INTEGER);
constraint bool2int(aux1468_BOOL,aux1468_INTEGER);
constraint bool2int(aux1470_BOOL,aux1470_INTEGER);
constraint bool2int(aux1471_BOOL,aux1471_INTEGER);
constraint bool2int(aux1472_BOOL,aux1472_INTEGER);
constraint bool2int(aux1473_BOOL,aux1473_INTEGER);
constraint bool2int(aux1474_BOOL,aux1474_INTEGER);
constraint bool2int(aux1475_BOOL,aux1475_INTEGER);
constraint bool2int(aux1476_BOOL,aux1476_INTEGER);
constraint bool2int(aux1477_BOOL,aux1477_INTEGER);
constraint bool2int(aux1478_BOOL,aux1478_INTEGER);
constraint bool2int(aux1479_BOOL,aux1479_INTEGER);
constraint bool2int(aux1480_BOOL,aux1480_INTEGER);
constraint bool2int(aux1481_BOOL,aux1481_INTEGER);
constraint bool2int(aux1482_BOOL,aux1482_INTEGER);
constraint bool2int(aux1483_BOOL,aux1483_INTEGER);
constraint bool2int(aux1484_BOOL,aux1484_INTEGER);
constraint bool2int(aux1485_BOOL,aux1485_INTEGER);
constraint bool2int(aux1486_BOOL,aux1486_INTEGER);
constraint bool2int(aux1487_BOOL,aux1487_INTEGER);
constraint bool2int(aux1488_BOOL,aux1488_INTEGER);
constraint bool2int(aux1489_BOOL,aux1489_INTEGER);
constraint bool2int(aux1491_BOOL,aux1491_INTEGER);
constraint bool2int(aux1492_BOOL,aux1492_INTEGER);
constraint bool2int(aux1493_BOOL,aux1493_INTEGER);
constraint bool2int(aux1494_BOOL,aux1494_INTEGER);
constraint bool2int(aux1495_BOOL,aux1495_INTEGER);
constraint bool2int(aux1496_BOOL,aux1496_INTEGER);
constraint bool2int(aux1497_BOOL,aux1497_INTEGER);
constraint bool2int(aux1498_BOOL,aux1498_INTEGER);
constraint bool2int(aux1499_BOOL,aux1499_INTEGER);
constraint bool2int(aux1500_BOOL,aux1500_INTEGER);
constraint bool2int(aux1501_BOOL,aux1501_INTEGER);
constraint bool2int(aux1502_BOOL,aux1502_INTEGER);
constraint bool2int(aux1503_BOOL,aux1503_INTEGER);
constraint bool2int(aux1504_BOOL,aux1504_INTEGER);
constraint bool2int(aux1505_BOOL,aux1505_INTEGER);
constraint bool2int(aux1506_BOOL,aux1506_INTEGER);
constraint bool2int(aux1507_BOOL,aux1507_INTEGER);
constraint bool2int(aux1508_BOOL,aux1508_INTEGER);
constraint bool2int(aux1509_BOOL,aux1509_INTEGER);
constraint bool2int(aux1510_BOOL,aux1510_INTEGER);
constraint bool2int(aux1520_BOOL,aux1520_INTEGER);
constraint bool2int(aux1521_BOOL,aux1521_INTEGER);
constraint bool2int(aux1522_BOOL,aux1522_INTEGER);
constraint bool2int(aux1523_BOOL,aux1523_INTEGER);
constraint bool2int(aux1524_BOOL,aux1524_INTEGER);
constraint bool2int(aux1525_BOOL,aux1525_INTEGER);
constraint bool2int(aux1529_BOOL,aux1529_INTEGER);
constraint bool2int(aux1530_BOOL,aux1530_INTEGER);
constraint bool2int(aux1531_BOOL,aux1531_INTEGER);
constraint bool2int(aux1532_BOOL,aux1532_INTEGER);
constraint bool2int(aux1533_BOOL,aux1533_INTEGER);
constraint bool2int(aux1534_BOOL,aux1534_INTEGER);
constraint bool2int(aux1535_BOOL,aux1535_INTEGER);
constraint bool2int(aux1536_BOOL,aux1536_INTEGER);
constraint bool2int(aux1537_BOOL,aux1537_INTEGER);
constraint bool2int(aux1538_BOOL,aux1538_INTEGER);
constraint bool2int(aux1539_BOOL,aux1539_INTEGER);
constraint bool2int(aux1540_BOOL,aux1540_INTEGER);
constraint bool2int(aux1761_BOOL,aux1761_INTEGER);
constraint bool2int(aux1762_BOOL,aux1762_INTEGER);
constraint bool2int(aux1763_BOOL,aux1763_INTEGER);
constraint bool2int(aux1764_BOOL,aux1764_INTEGER);
constraint bool2int(aux1765_BOOL,aux1765_INTEGER);
constraint bool2int(aux1766_BOOL,aux1766_INTEGER);
constraint bool2int(aux1767_BOOL,aux1767_INTEGER);
constraint bool2int(aux1768_BOOL,aux1768_INTEGER);
constraint bool2int(aux1769_BOOL,aux1769_INTEGER);
constraint bool2int(aux1770_BOOL,aux1770_INTEGER);
constraint bool2int(aux1771_BOOL,aux1771_INTEGER);
constraint bool2int(aux1772_BOOL,aux1772_INTEGER);
constraint bool2int(aux1773_BOOL,aux1773_INTEGER);
constraint bool2int(aux1774_BOOL,aux1774_INTEGER);
constraint bool2int(aux1775_BOOL,aux1775_INTEGER);
constraint bool2int(aux1776_BOOL,aux1776_INTEGER);
constraint bool2int(aux1777_BOOL,aux1777_INTEGER);
constraint bool2int(aux1778_BOOL,aux1778_INTEGER);
constraint bool2int(aux1779_BOOL,aux1779_INTEGER);
constraint bool2int(aux1780_BOOL,aux1780_INTEGER);
constraint bool2int(aux1781_BOOL,aux1781_INTEGER);
constraint bool2int(aux1782_BOOL,aux1782_INTEGER);
constraint bool2int(aux1783_BOOL,aux1783_INTEGER);
constraint bool2int(aux1784_BOOL,aux1784_INTEGER);
constraint bool2int(aux1785_BOOL,aux1785_INTEGER);
constraint bool2int(aux1786_BOOL,aux1786_INTEGER);
constraint bool2int(aux1787_BOOL,aux1787_INTEGER);
constraint bool2int(aux1788_BOOL,aux1788_INTEGER);
constraint bool2int(aux1789_BOOL,aux1789_INTEGER);
constraint bool2int(aux1790_BOOL,aux1790_INTEGER);
constraint bool2int(aux1791_BOOL,aux1791_INTEGER);
constraint bool2int(aux1792_BOOL,aux1792_INTEGER);
constraint bool2int(aux1793_BOOL,aux1793_INTEGER);
constraint bool2int(aux1794_BOOL,aux1794_INTEGER);
constraint bool2int(aux1795_BOOL,aux1795_INTEGER);
constraint bool2int(aux1796_BOOL,aux1796_INTEGER);
constraint bool2int(aux1797_BOOL,aux1797_INTEGER);
constraint bool2int(aux1798_BOOL,aux1798_INTEGER);
constraint bool2int(aux1799_BOOL,aux1799_INTEGER);
constraint bool2int(aux1800_BOOL,aux1800_INTEGER);
constraint bool2int(aux1801_BOOL,aux1801_INTEGER);
constraint bool2int(aux1802_BOOL,aux1802_INTEGER);
constraint bool2int(aux1803_BOOL,aux1803_INTEGER);
constraint bool2int(aux1804_BOOL,aux1804_INTEGER);
constraint bool2int(aux1805_BOOL,aux1805_INTEGER);
constraint bool2int(aux1806_BOOL,aux1806_INTEGER);
constraint bool2int(aux1807_BOOL,aux1807_INTEGER);
constraint bool2int(aux1808_BOOL,aux1808_INTEGER);
constraint bool2int(aux1809_BOOL,aux1809_INTEGER);
constraint bool2int(aux1810_BOOL,aux1810_INTEGER);
constraint bool2int(aux1811_BOOL,aux1811_INTEGER);
constraint bool2int(aux1812_BOOL,aux1812_INTEGER);
constraint bool2int(aux1813_BOOL,aux1813_INTEGER);
constraint bool2int(aux1814_BOOL,aux1814_INTEGER);
constraint bool2int(aux1815_BOOL,aux1815_INTEGER);
constraint bool2int(aux1816_BOOL,aux1816_INTEGER);
constraint bool2int(aux1817_BOOL,aux1817_INTEGER);
constraint bool2int(aux1818_BOOL,aux1818_INTEGER);
constraint bool2int(aux1819_BOOL,aux1819_INTEGER);
constraint bool2int(aux1820_BOOL,aux1820_INTEGER);
constraint bool2int(aux1821_BOOL,aux1821_INTEGER);
constraint array_bool_and([aux202_BOOL,w_00009_00002_BOOL],aux412_BOOL);
constraint array_bool_and([aux316_BOOL,w_00009_00003_BOOL],aux413_BOOL);
constraint array_bool_and([aux43_BOOL,w_00009_00004_BOOL],aux414_BOOL);
constraint array_bool_and([aux53_BOOL,w_00009_00008_BOOL],aux415_BOOL);
constraint array_bool_and([aux54_BOOL,w_00009_00005_BOOL],aux416_BOOL);
constraint array_bool_and([aux202_BOOL,w_00004_00002_BOOL],aux417_BOOL);
constraint array_bool_and([aux234_BOOL,w_00004_00007_BOOL],aux418_BOOL);
constraint array_bool_and([aux284_BOOL,w_00004_00006_BOOL],aux419_BOOL);
constraint array_bool_and([aux43_BOOL,w_00004_00004_BOOL],aux420_BOOL);
constraint array_bool_and([aux53_BOOL,w_00004_00008_BOOL],aux421_BOOL);
constraint array_bool_and([aux54_BOOL,w_00004_00005_BOOL],aux422_BOOL);
constraint array_bool_and([aux81_BOOL,w_00004_00013_BOOL],aux423_BOOL);
constraint array_bool_and([aux200_BOOL,w_00009_00008_BOOL],aux424_BOOL);
constraint array_bool_and([aux201_BOOL,w_00009_00005_BOOL],aux425_BOOL);
constraint array_bool_and([aux315_BOOL,w_00009_00003_BOOL],aux426_BOOL);
constraint array_bool_and([aux70_BOOL,w_00009_00004_BOOL],aux427_BOOL);
constraint array_bool_and([aux45_BOOL,w_00001_00004_BOOL],false);
constraint array_bool_and([aux196_BOOL,w_00001_00011_BOOL],false);
constraint array_bool_and([aux321_BOOL,w_00001_00010_BOOL],false);
constraint array_bool_and([aux117_BOOL,w_00007_00006_BOOL],aux431_BOOL);
constraint array_bool_and([aux118_BOOL,w_00007_00008_BOOL],aux432_BOOL);
constraint array_bool_and([aux119_BOOL,w_00007_00018_BOOL],aux433_BOOL);
constraint array_bool_and([aux122_BOOL,w_00007_00014_BOOL],aux434_BOOL);
constraint array_bool_and([aux123_BOOL,w_00007_00013_BOOL],aux435_BOOL);
constraint array_bool_and([aux124_BOOL,w_00007_00016_BOOL],aux436_BOOL);
constraint array_bool_and([aux125_BOOL,w_00007_00020_BOOL],aux437_BOOL);
constraint array_bool_and([aux133_BOOL,w_00002_00006_BOOL],aux438_BOOL);
constraint array_bool_and([aux136_BOOL,w_00002_00013_BOOL],aux439_BOOL);
constraint array_bool_and([aux138_BOOL,w_00002_00012_BOOL],aux440_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux44_BOOL],aux441_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux63_BOOL],aux442_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux133_BOOL],aux443_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux138_BOOL],aux444_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux136_BOOL],aux445_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux263_BOOL],aux446_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux44_BOOL],aux447_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux63_BOOL],aux448_BOOL);
constraint array_bool_and([aux187_BOOL,w_00003_00003_BOOL],aux449_BOOL);
constraint array_bool_and([aux190_BOOL,w_00003_00002_BOOL],aux450_BOOL);
constraint array_bool_and([aux19_BOOL,w_00005_00005_BOOL],aux451_BOOL);
constraint array_bool_and([aux32_BOOL,w_00005_00016_BOOL],aux452_BOOL);
constraint array_bool_and([aux52_BOOL,w_00005_00011_BOOL],aux453_BOOL);
constraint array_bool_and([aux221_BOOL,w_00005_00015_BOOL],aux454_BOOL);
constraint array_bool_and([aux223_BOOL,w_00005_00010_BOOL],aux455_BOOL);
constraint array_bool_and([w_00008_00004_BOOL,aux23_BOOL],aux456_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux331_BOOL],aux457_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux23_BOOL],aux458_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux75_BOOL],aux459_BOOL);
constraint array_bool_and([aux224_BOOL,w_00001_00004_BOOL],aux460_BOOL);
constraint array_bool_and([aux225_BOOL,w_00001_00008_BOOL],aux461_BOOL);
constraint array_bool_and([aux226_BOOL,w_00001_00005_BOOL],aux462_BOOL);
constraint array_bool_and([aux228_BOOL,w_00001_00007_BOOL],aux463_BOOL);
constraint array_bool_and([aux231_BOOL,w_00001_00013_BOOL],aux464_BOOL);
constraint array_bool_and([aux206_BOOL,w_00004_00015_BOOL],aux465_BOOL);
constraint array_bool_and([aux208_BOOL,w_00004_00010_BOOL],aux466_BOOL);
constraint array_bool_and([aux27_BOOL,w_00004_00001_BOOL],aux467_BOOL);
constraint array_bool_and([aux41_BOOL,w_00004_00014_BOOL],aux468_BOOL);
constraint array_bool_and([aux42_BOOL,w_00004_00011_BOOL],aux469_BOOL);
constraint array_bool_and([aux46_BOOL,w_00004_00002_BOOL],aux470_BOOL);
constraint array_bool_and([aux69_BOOL,w_00004_00009_BOOL],aux471_BOOL);
constraint array_bool_and([aux97_BOOL,w_00004_00006_BOOL],aux472_BOOL);
constraint array_bool_and([w_00008_00001_BOOL,aux27_BOOL],aux473_BOOL);
constraint array_bool_and([w_00008_00002_BOOL,aux46_BOOL],aux474_BOOL);
constraint array_bool_and([w_00008_00006_BOOL,aux97_BOOL],aux475_BOOL);
constraint array_bool_and([w_00008_00014_BOOL,aux41_BOOL],aux476_BOOL);
constraint array_bool_and([w_00008_00008_BOOL,aux38_BOOL],aux477_BOOL);
constraint array_bool_and([w_00008_00013_BOOL,aux40_BOOL],aux478_BOOL);
constraint array_bool_and([aux140_BOOL,w_00008_00006_BOOL],aux479_BOOL);
constraint array_bool_and([aux141_BOOL,w_00008_00018_BOOL],aux480_BOOL);
constraint array_bool_and([aux143_BOOL,w_00008_00020_BOOL],aux481_BOOL);
constraint array_bool_and([aux144_BOOL,w_00008_00012_BOOL],aux482_BOOL);
constraint array_bool_and([aux239_BOOL,w_00001_00004_BOOL],aux483_BOOL);
constraint array_bool_and([aux240_BOOL,w_00001_00008_BOOL],aux484_BOOL);
constraint array_bool_and([aux241_BOOL,w_00001_00005_BOOL],aux485_BOOL);
constraint array_bool_and([aux242_BOOL,w_00001_00007_BOOL],aux486_BOOL);
constraint array_bool_and([aux245_BOOL,w_00001_00013_BOOL],aux487_BOOL);
constraint int_le_reif(s_00006, s_00007,aux488_BOOL);
constraint int_lt_reif(s_00007,aux411,aux489_BOOL);
constraint array_bool_and([w_00004_00006_BOOL,aux488_BOOL,aux489_BOOL],aux490_BOOL);
constraint int_le_reif(s_00012, s_00007,aux491_BOOL);
constraint int_lt_reif(s_00007,aux399,aux492_BOOL);
constraint array_bool_and([w_00004_00012_BOOL,aux491_BOOL,aux492_BOOL],aux493_BOOL);
constraint int_le_reif(s_00014, s_00007,aux494_BOOL);
constraint int_lt_reif(s_00007,aux400,aux495_BOOL);
constraint array_bool_and([w_00004_00014_BOOL,aux494_BOOL,aux495_BOOL],aux496_BOOL);
constraint int_le_reif(s_00017, s_00007,aux497_BOOL);
constraint int_lt_reif(s_00007,aux396,aux498_BOOL);
constraint array_bool_and([w_00004_00017_BOOL,aux497_BOOL,aux498_BOOL],false);
constraint int_le_reif(s_00018, s_00007,aux500_BOOL);
constraint int_lt_reif(s_00007,aux405,aux501_BOOL);
constraint array_bool_and([w_00004_00018_BOOL,aux500_BOOL,aux501_BOOL],false);
constraint int_le_reif(s_00019, s_00007,aux503_BOOL);
constraint int_lt_reif(s_00007,aux392,aux504_BOOL);
constraint array_bool_and([w_00004_00019_BOOL,aux503_BOOL,aux504_BOOL],false);
constraint int_le_reif(s_00020, s_00007,aux506_BOOL);
constraint int_lt_reif(s_00007,aux402,aux507_BOOL);
constraint array_bool_and([w_00004_00020_BOOL,aux506_BOOL,aux507_BOOL],false);
constraint array_bool_and([aux214_BOOL,w_00004_00005_BOOL],aux509_BOOL);
constraint array_bool_and([aux216_BOOL,w_00004_00001_BOOL],aux510_BOOL);
constraint array_bool_and([aux215_BOOL,w_00004_00015_BOOL],aux511_BOOL);
constraint array_bool_and([aux217_BOOL,w_00004_00011_BOOL],aux512_BOOL);
constraint array_bool_and([aux219_BOOL,w_00004_00016_BOOL],aux513_BOOL);
constraint array_bool_and([aux220_BOOL,w_00004_00010_BOOL],aux514_BOOL);
constraint array_bool_and([aux322_BOOL,w_00004_00009_BOOL],aux515_BOOL);
constraint array_bool_and([aux43_BOOL,w_00005_00004_BOOL],aux516_BOOL);
constraint array_bool_and([aux53_BOOL,w_00005_00008_BOOL],aux517_BOOL);
constraint array_bool_and([aux54_BOOL,w_00005_00005_BOOL],aux518_BOOL);
constraint array_bool_and([aux81_BOOL,w_00005_00013_BOOL],aux519_BOOL);
constraint array_bool_and([aux234_BOOL,w_00005_00007_BOOL],aux520_BOOL);
constraint int_le_reif(s_00006, s_00015,aux521_BOOL);
constraint int_lt_reif(s_00015,aux411,aux522_BOOL);
constraint array_bool_and([w_00004_00006_BOOL,aux521_BOOL,aux522_BOOL],aux523_BOOL);
constraint int_le_reif(s_00012, s_00015,aux524_BOOL);
constraint int_lt_reif(s_00015,aux399,aux525_BOOL);
constraint array_bool_and([w_00004_00012_BOOL,aux524_BOOL,aux525_BOOL],aux526_BOOL);
constraint int_le_reif(s_00014, s_00015,aux527_BOOL);
constraint int_lt_reif(s_00015,aux400,aux528_BOOL);
constraint array_bool_and([w_00004_00014_BOOL,aux527_BOOL,aux528_BOOL],false);
constraint int_le_reif(s_00017, s_00015,aux530_BOOL);
constraint int_lt_reif(s_00015,aux396,aux531_BOOL);
constraint array_bool_and([w_00004_00017_BOOL,aux530_BOOL,aux531_BOOL],false);
constraint int_le_reif(s_00018, s_00015,aux533_BOOL);
constraint int_lt_reif(s_00015,aux405,aux534_BOOL);
constraint array_bool_and([w_00004_00018_BOOL,aux533_BOOL,aux534_BOOL],aux535_BOOL);
constraint int_le_reif(s_00019, s_00015,aux536_BOOL);
constraint int_lt_reif(s_00015,aux392,aux537_BOOL);
constraint array_bool_and([w_00004_00019_BOOL,aux536_BOOL,aux537_BOOL],false);
constraint int_le_reif(s_00020, s_00015,aux539_BOOL);
constraint int_lt_reif(s_00015,aux402,aux540_BOOL);
constraint array_bool_and([w_00004_00020_BOOL,aux539_BOOL,aux540_BOOL],false);
constraint array_bool_and([aux239_BOOL,w_00004_00004_BOOL],aux542_BOOL);
constraint array_bool_and([aux240_BOOL,w_00004_00008_BOOL],aux543_BOOL);
constraint array_bool_and([aux241_BOOL,w_00004_00005_BOOL],aux544_BOOL);
constraint array_bool_and([aux242_BOOL,w_00004_00007_BOOL],aux545_BOOL);
constraint array_bool_and([aux245_BOOL,w_00004_00013_BOOL],aux546_BOOL);
constraint array_bool_and([aux202_BOOL,w_00007_00002_BOOL],aux547_BOOL);
constraint array_bool_and([aux284_BOOL,w_00007_00006_BOOL],aux548_BOOL);
constraint array_bool_and([aux316_BOOL,w_00007_00003_BOOL],aux549_BOOL);
constraint array_bool_and([w_00007_00004_BOOL,aux43_BOOL],aux550_BOOL);
constraint array_bool_and([w_00007_00005_BOOL,aux54_BOOL],aux551_BOOL);
constraint array_bool_and([w_00007_00008_BOOL,aux53_BOOL],aux552_BOOL);
constraint array_bool_and([w_00007_00013_BOOL,aux81_BOOL],aux553_BOOL);
constraint array_bool_and([aux187_BOOL,w_00007_00003_BOOL],aux554_BOOL);
constraint array_bool_and([aux196_BOOL,w_00007_00011_BOOL],aux555_BOOL);
constraint array_bool_and([w_00007_00004_BOOL,aux45_BOOL],aux556_BOOL);
constraint array_bool_and([w_00007_00006_BOOL,aux93_BOOL],aux557_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux140_BOOL],aux558_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux144_BOOL],aux559_BOOL);
constraint array_bool_and([w_00006_00018_BOOL,aux141_BOOL],aux560_BOOL);
constraint array_bool_and([w_00006_00020_BOOL,aux143_BOOL],aux561_BOOL);
constraint array_bool_and([w_00006_00017_BOOL,aux293_BOOL],aux562_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux38_BOOL],aux563_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux85_BOOL],aux564_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux40_BOOL],aux565_BOOL);
constraint array_bool_and([aux42_BOOL,w_00001_00011_BOOL],aux566_BOOL);
constraint array_bool_and([aux206_BOOL,w_00001_00015_BOOL],aux567_BOOL);
constraint array_bool_and([aux208_BOOL,w_00001_00010_BOOL],aux568_BOOL);
constraint array_bool_and([aux38_BOOL,w_00005_00008_BOOL],aux569_BOOL);
constraint array_bool_and([aux40_BOOL,w_00005_00013_BOOL],aux570_BOOL);
constraint array_bool_and([aux85_BOOL,w_00005_00005_BOOL],aux571_BOOL);
constraint array_bool_and([aux249_BOOL,w_00005_00007_BOOL],aux572_BOOL);
constraint array_bool_and([aux18_BOOL,w_00001_00008_BOOL],aux573_BOOL);
constraint array_bool_and([aux51_BOOL,w_00001_00011_BOOL],aux574_BOOL);
constraint array_bool_and([aux79_BOOL,w_00001_00016_BOOL],aux575_BOOL);
constraint array_bool_and([aux209_BOOL,w_00001_00015_BOOL],aux576_BOOL);
constraint array_bool_and([aux210_BOOL,w_00001_00007_BOOL],aux577_BOOL);
constraint array_bool_and([aux211_BOOL,w_00001_00010_BOOL],aux578_BOOL);
constraint array_bool_and([aux112_BOOL,w_00007_00006_BOOL],aux579_BOOL);
constraint array_bool_and([aux114_BOOL,w_00007_00012_BOOL],aux580_BOOL);
constraint array_bool_and([aux198_BOOL,w_00007_00009_BOOL],aux581_BOOL);
constraint array_bool_and([aux260_BOOL,w_00007_00017_BOOL],aux582_BOOL);
constraint array_bool_and([w_00007_00005_BOOL,aux19_BOOL],aux583_BOOL);
constraint array_bool_and([w_00007_00011_BOOL,aux52_BOOL],aux584_BOOL);
constraint array_bool_and([w_00007_00016_BOOL,aux32_BOOL],aux585_BOOL);
constraint array_bool_and([w_00007_00014_BOOL,aux61_BOOL],aux586_BOOL);
constraint array_bool_and([w_00007_00020_BOOL,aux20_BOOL],aux587_BOOL);
constraint int_le_reif(s_00007, s_00012,aux588_BOOL);
constraint int_lt_reif(s_00012,aux397,aux589_BOOL);
constraint array_bool_and([w_00004_00007_BOOL,aux588_BOOL,aux589_BOOL],aux590_BOOL);
constraint int_le_reif(s_00010, s_00012,aux591_BOOL);
constraint int_lt_reif(s_00012,aux401,aux592_BOOL);
constraint array_bool_and([w_00004_00010_BOOL,aux591_BOOL,aux592_BOOL],false);
constraint int_le_reif(s_00015, s_00012,aux594_BOOL);
constraint int_lt_reif(s_00012,aux395,aux595_BOOL);
constraint array_bool_and([w_00004_00015_BOOL,aux594_BOOL,aux595_BOOL],aux596_BOOL);
constraint array_bool_and([aux117_BOOL,w_00004_00006_BOOL],aux597_BOOL);
constraint array_bool_and([aux118_BOOL,w_00004_00008_BOOL],aux598_BOOL);
constraint array_bool_and([aux119_BOOL,w_00004_00018_BOOL],aux599_BOOL);
constraint array_bool_and([aux122_BOOL,w_00004_00014_BOOL],aux600_BOOL);
constraint array_bool_and([aux123_BOOL,w_00004_00013_BOOL],aux601_BOOL);
constraint array_bool_and([aux124_BOOL,w_00004_00016_BOOL],aux602_BOOL);
constraint array_bool_and([aux125_BOOL,w_00004_00020_BOOL],aux603_BOOL);
constraint array_bool_and([aux43_BOOL,w_00001_00004_BOOL],aux604_BOOL);
constraint array_bool_and([aux53_BOOL,w_00001_00008_BOOL],aux605_BOOL);
constraint array_bool_and([aux54_BOOL,w_00001_00005_BOOL],aux606_BOOL);
constraint array_bool_and([aux81_BOOL,w_00001_00013_BOOL],aux607_BOOL);
constraint array_bool_and([aux234_BOOL,w_00001_00007_BOOL],aux608_BOOL);
constraint array_bool_and([aux153_BOOL,w_00002_00016_BOOL],aux609_BOOL);
constraint array_bool_and([aux154_BOOL,w_00002_00020_BOOL],aux610_BOOL);
constraint array_bool_and([aux155_BOOL,w_00002_00012_BOOL],aux611_BOOL);
constraint array_bool_and([aux156_BOOL,w_00002_00019_BOOL],aux612_BOOL);
constraint int_le_reif(s_00007, s_00006,aux613_BOOL);
constraint int_lt_reif(s_00006,aux397,aux614_BOOL);
constraint array_bool_and([w_00004_00007_BOOL,aux613_BOOL,aux614_BOOL],aux615_BOOL);
constraint int_le_reif(s_00010, s_00006,aux616_BOOL);
constraint int_lt_reif(s_00006,aux401,aux617_BOOL);
constraint array_bool_and([w_00004_00010_BOOL,aux616_BOOL,aux617_BOOL],aux618_BOOL);
constraint int_le_reif(s_00015, s_00006,aux619_BOOL);
constraint int_lt_reif(s_00006,aux395,aux620_BOOL);
constraint array_bool_and([w_00004_00015_BOOL,aux619_BOOL,aux620_BOOL],aux621_BOOL);
constraint array_bool_and([aux101_BOOL,w_00004_00004_BOOL],aux622_BOOL);
constraint array_bool_and([aux102_BOOL,w_00004_00008_BOOL],aux623_BOOL);
constraint array_bool_and([aux105_BOOL,w_00004_00002_BOOL],aux624_BOOL);
constraint array_bool_and([aux106_BOOL,w_00004_00014_BOOL],aux625_BOOL);
constraint array_bool_and([aux107_BOOL,w_00004_00013_BOOL],aux626_BOOL);
constraint array_bool_and([aux108_BOOL,w_00004_00016_BOOL],aux627_BOOL);
constraint array_bool_and([aux110_BOOL,w_00004_00012_BOOL],aux628_BOOL);
constraint array_bool_and([aux111_BOOL,w_00004_00019_BOOL],aux629_BOOL);
constraint array_bool_and([aux276_BOOL,w_00004_00005_BOOL],aux630_BOOL);
constraint array_bool_and([aux277_BOOL,w_00004_00009_BOOL],aux631_BOOL);
constraint array_bool_and([aux278_BOOL,w_00004_00011_BOOL],aux632_BOOL);
constraint array_bool_and([aux279_BOOL,w_00004_00017_BOOL],aux633_BOOL);
constraint int_le_reif(s_00001, s_00002,aux634_BOOL);
constraint int_lt_reif(s_00002,aux398,aux635_BOOL);
constraint int_le_reif(s_00001, s_00006,aux636_BOOL);
constraint int_lt_reif(s_00006,aux398,aux637_BOOL);
constraint int_le_reif(s_00001, s_00008,aux638_BOOL);
constraint int_lt_reif(s_00008,aux398,aux639_BOOL);
constraint int_le_reif(s_00001, s_00009,aux640_BOOL);
constraint int_lt_reif(s_00009,aux398,aux641_BOOL);
constraint int_le_reif(s_00002, s_00001,aux642_BOOL);
constraint int_lt_reif(s_00001,aux394,aux643_BOOL);
constraint int_le_reif(s_00002, s_00005,aux644_BOOL);
constraint int_lt_reif(s_00005,aux394,aux645_BOOL);
constraint int_le_reif(s_00002, s_00007,aux646_BOOL);
constraint int_lt_reif(s_00007,aux394,aux647_BOOL);
constraint int_le_reif(s_00002, s_00008,aux648_BOOL);
constraint int_lt_reif(s_00008,aux394,aux649_BOOL);
constraint int_le_reif(s_00002, s_00009,aux650_BOOL);
constraint int_lt_reif(s_00009,aux394,aux651_BOOL);
constraint int_le_reif(s_00001, s_00010,aux652_BOOL);
constraint int_lt_reif(s_00010,aux398,aux653_BOOL);
constraint int_le_reif(s_00001, s_00011,aux654_BOOL);
constraint int_lt_reif(s_00011,aux398,aux655_BOOL);
constraint int_le_reif(s_00001, s_00012,aux656_BOOL);
constraint int_lt_reif(s_00012,aux398,aux657_BOOL);
constraint int_le_reif(s_00001, s_00013,aux658_BOOL);
constraint int_lt_reif(s_00013,aux398,aux659_BOOL);
constraint int_le_reif(s_00001, s_00014,aux660_BOOL);
constraint int_lt_reif(s_00014,aux398,aux661_BOOL);
constraint int_le_reif(s_00003, s_00004,aux662_BOOL);
constraint int_lt_reif(s_00004,aux406,aux663_BOOL);
constraint int_le_reif(s_00001, s_00015,aux664_BOOL);
constraint int_lt_reif(s_00015,aux398,aux665_BOOL);
constraint int_le_reif(s_00003, s_00005,aux666_BOOL);
constraint int_lt_reif(s_00005,aux406,aux667_BOOL);
constraint int_le_reif(s_00001, s_00016,aux668_BOOL);
constraint int_lt_reif(s_00016,aux398,aux669_BOOL);
constraint int_le_reif(s_00001, s_00017,aux670_BOOL);
constraint int_lt_reif(s_00017,aux398,aux671_BOOL);
constraint int_le_reif(s_00001, s_00018,aux672_BOOL);
constraint int_lt_reif(s_00018,aux398,aux673_BOOL);
constraint int_le_reif(s_00003, s_00008,aux674_BOOL);
constraint int_lt_reif(s_00008,aux406,aux675_BOOL);
constraint int_le_reif(s_00001, s_00019,aux676_BOOL);
constraint int_lt_reif(s_00019,aux398,aux677_BOOL);
constraint int_le_reif(s_00002, s_00012,aux678_BOOL);
constraint int_lt_reif(s_00012,aux394,aux679_BOOL);
constraint int_le_reif(s_00004, s_00003,aux680_BOOL);
constraint int_lt_reif(s_00003,aux409,aux681_BOOL);
constraint int_le_reif(s_00002, s_00013,aux682_BOOL);
constraint int_lt_reif(s_00013,aux394,aux683_BOOL);
constraint int_le_reif(s_00002, s_00014,aux684_BOOL);
constraint int_lt_reif(s_00014,aux394,aux685_BOOL);
constraint int_le_reif(s_00004, s_00005,aux686_BOOL);
constraint int_lt_reif(s_00005,aux409,aux687_BOOL);
constraint int_le_reif(s_00002, s_00015,aux688_BOOL);
constraint int_lt_reif(s_00015,aux394,aux689_BOOL);
constraint int_le_reif(s_00002, s_00016,aux690_BOOL);
constraint int_lt_reif(s_00016,aux394,aux691_BOOL);
constraint int_le_reif(s_00004, s_00007,aux692_BOOL);
constraint int_lt_reif(s_00007,aux409,aux693_BOOL);
constraint int_le_reif(s_00002, s_00017,aux694_BOOL);
constraint int_lt_reif(s_00017,aux394,aux695_BOOL);
constraint int_le_reif(s_00004, s_00008,aux696_BOOL);
constraint int_lt_reif(s_00008,aux409,aux697_BOOL);
constraint int_le_reif(s_00002, s_00018,aux698_BOOL);
constraint int_lt_reif(s_00018,aux394,aux699_BOOL);
constraint int_le_reif(s_00002, s_00019,aux700_BOOL);
constraint int_lt_reif(s_00019,aux394,aux701_BOOL);
constraint int_le_reif(s_00001, s_00020,aux702_BOOL);
constraint int_lt_reif(s_00020,aux398,aux703_BOOL);
constraint int_le_reif(s_00005, s_00002,aux704_BOOL);
constraint int_lt_reif(s_00002,aux393,aux705_BOOL);
constraint int_le_reif(s_00003, s_00012,aux706_BOOL);
constraint int_lt_reif(s_00012,aux406,aux707_BOOL);
constraint int_le_reif(s_00005, s_00003,aux708_BOOL);
constraint int_lt_reif(s_00003,aux393,aux709_BOOL);
constraint int_le_reif(s_00003, s_00013,aux710_BOOL);
constraint int_lt_reif(s_00013,aux406,aux711_BOOL);
constraint int_le_reif(s_00005, s_00004,aux712_BOOL);
constraint int_lt_reif(s_00004,aux393,aux713_BOOL);
constraint int_le_reif(s_00003, s_00014,aux714_BOOL);
constraint int_lt_reif(s_00014,aux406,aux715_BOOL);
constraint int_le_reif(s_00003, s_00016,aux716_BOOL);
constraint int_lt_reif(s_00016,aux406,aux717_BOOL);
constraint int_le_reif(s_00003, s_00017,aux718_BOOL);
constraint int_lt_reif(s_00017,aux406,aux719_BOOL);
constraint int_le_reif(s_00003, s_00018,aux720_BOOL);
constraint int_lt_reif(s_00018,aux406,aux721_BOOL);
constraint int_le_reif(s_00003, s_00019,aux722_BOOL);
constraint int_lt_reif(s_00019,aux406,aux723_BOOL);
constraint int_le_reif(s_00002, s_00020,aux724_BOOL);
constraint int_lt_reif(s_00020,aux394,aux725_BOOL);
constraint int_le_reif(s_00006, s_00001,aux726_BOOL);
constraint int_lt_reif(s_00001,aux411,aux727_BOOL);
constraint int_le_reif(s_00004, s_00012,aux728_BOOL);
constraint int_lt_reif(s_00012,aux409,aux729_BOOL);
constraint int_le_reif(s_00004, s_00013,aux730_BOOL);
constraint int_lt_reif(s_00013,aux409,aux731_BOOL);
constraint int_le_reif(s_00004, s_00016,aux732_BOOL);
constraint int_lt_reif(s_00016,aux409,aux733_BOOL);
constraint int_le_reif(s_00004, s_00017,aux734_BOOL);
constraint int_lt_reif(s_00017,aux409,aux735_BOOL);
constraint int_le_reif(s_00004, s_00018,aux736_BOOL);
constraint int_lt_reif(s_00018,aux409,aux737_BOOL);
constraint int_le_reif(s_00004, s_00019,aux738_BOOL);
constraint int_lt_reif(s_00019,aux409,aux739_BOOL);
constraint int_le_reif(s_00003, s_00020,aux740_BOOL);
constraint int_lt_reif(s_00020,aux406,aux741_BOOL);
constraint int_le_reif(s_00005, s_00012,aux742_BOOL);
constraint int_lt_reif(s_00012,aux393,aux743_BOOL);
constraint int_le_reif(s_00007, s_00002,aux744_BOOL);
constraint int_lt_reif(s_00002,aux397,aux745_BOOL);
constraint int_le_reif(s_00005, s_00013,aux746_BOOL);
constraint int_lt_reif(s_00013,aux393,aux747_BOOL);
constraint int_le_reif(s_00007, s_00004,aux748_BOOL);
constraint int_lt_reif(s_00004,aux397,aux749_BOOL);
constraint int_le_reif(s_00005, s_00017,aux750_BOOL);
constraint int_lt_reif(s_00017,aux393,aux751_BOOL);
constraint int_le_reif(s_00005, s_00018,aux752_BOOL);
constraint int_lt_reif(s_00018,aux393,aux753_BOOL);
constraint int_le_reif(s_00007, s_00008,aux754_BOOL);
constraint int_lt_reif(s_00008,aux397,aux755_BOOL);
constraint int_le_reif(s_00005, s_00019,aux756_BOOL);
constraint int_lt_reif(s_00019,aux393,aux757_BOOL);
constraint int_le_reif(s_00004, s_00020,aux758_BOOL);
constraint int_lt_reif(s_00020,aux409,aux759_BOOL);
constraint int_le_reif(s_00008, s_00001,aux760_BOOL);
constraint int_lt_reif(s_00001,aux403,aux761_BOOL);
constraint int_le_reif(s_00008, s_00002,aux762_BOOL);
constraint int_lt_reif(s_00002,aux403,aux763_BOOL);
constraint int_le_reif(s_00008, s_00003,aux764_BOOL);
constraint int_lt_reif(s_00003,aux403,aux765_BOOL);
constraint int_le_reif(s_00008, s_00004,aux766_BOOL);
constraint int_lt_reif(s_00004,aux403,aux767_BOOL);
constraint int_le_reif(s_00008, s_00007,aux768_BOOL);
constraint int_lt_reif(s_00007,aux403,aux769_BOOL);
constraint int_le_reif(s_00006, s_00018,aux770_BOOL);
constraint int_lt_reif(s_00018,aux411,aux771_BOOL);
constraint int_le_reif(s_00009, s_00001,aux772_BOOL);
constraint int_lt_reif(s_00001,aux404,aux773_BOOL);
constraint int_le_reif(s_00009, s_00002,aux774_BOOL);
constraint int_lt_reif(s_00002,aux404,aux775_BOOL);
constraint int_le_reif(s_00007, s_00013,aux776_BOOL);
constraint int_lt_reif(s_00013,aux397,aux777_BOOL);
constraint int_le_reif(s_00006, s_00020,aux778_BOOL);
constraint int_lt_reif(s_00020,aux411,aux779_BOOL);
constraint int_le_reif(s_00008, s_00013,aux780_BOOL);
constraint int_lt_reif(s_00013,aux403,aux781_BOOL);
constraint int_le_reif(s_00008, s_00018,aux782_BOOL);
constraint int_lt_reif(s_00018,aux403,aux783_BOOL);
constraint int_le_reif(s_00008, s_00019,aux784_BOOL);
constraint int_lt_reif(s_00019,aux403,aux785_BOOL);
constraint int_le_reif(s_00009, s_00010,aux786_BOOL);
constraint int_lt_reif(s_00010,aux404,aux787_BOOL);
constraint int_le_reif(s_00009, s_00011,aux788_BOOL);
constraint int_lt_reif(s_00011,aux404,aux789_BOOL);
constraint int_le_reif(s_00009, s_00012,aux790_BOOL);
constraint int_lt_reif(s_00012,aux404,aux791_BOOL);
constraint int_le_reif(s_00009, s_00013,aux792_BOOL);
constraint int_lt_reif(s_00013,aux404,aux793_BOOL);
constraint int_le_reif(s_00009, s_00014,aux794_BOOL);
constraint int_lt_reif(s_00014,aux404,aux795_BOOL);
constraint int_le_reif(s_00009, s_00015,aux796_BOOL);
constraint int_lt_reif(s_00015,aux404,aux797_BOOL);
constraint int_le_reif(s_00009, s_00016,aux798_BOOL);
constraint int_lt_reif(s_00016,aux404,aux799_BOOL);
constraint int_le_reif(s_00009, s_00017,aux800_BOOL);
constraint int_lt_reif(s_00017,aux404,aux801_BOOL);
constraint int_le_reif(s_00009, s_00018,aux802_BOOL);
constraint int_lt_reif(s_00018,aux404,aux803_BOOL);
constraint int_le_reif(s_00009, s_00019,aux804_BOOL);
constraint int_lt_reif(s_00019,aux404,aux805_BOOL);
constraint int_le_reif(s_00009, s_00020,aux806_BOOL);
constraint int_lt_reif(s_00020,aux404,aux807_BOOL);
constraint int_le_reif(s_00010, s_00001,aux808_BOOL);
constraint int_lt_reif(s_00001,aux401,aux809_BOOL);
constraint int_le_reif(s_00010, s_00009,aux810_BOOL);
constraint int_lt_reif(s_00009,aux401,aux811_BOOL);
constraint int_le_reif(s_00011, s_00001,aux812_BOOL);
constraint int_lt_reif(s_00001,aux407,aux813_BOOL);
constraint int_le_reif(s_00011, s_00009,aux814_BOOL);
constraint int_lt_reif(s_00009,aux407,aux815_BOOL);
constraint int_le_reif(s_00012, s_00001,aux816_BOOL);
constraint int_lt_reif(s_00001,aux399,aux817_BOOL);
constraint int_le_reif(s_00010, s_00011,aux818_BOOL);
constraint int_lt_reif(s_00011,aux401,aux819_BOOL);
constraint int_le_reif(s_00012, s_00002,aux820_BOOL);
constraint int_lt_reif(s_00002,aux399,aux821_BOOL);
constraint int_le_reif(s_00012, s_00003,aux822_BOOL);
constraint int_lt_reif(s_00003,aux399,aux823_BOOL);
constraint int_le_reif(s_00012, s_00004,aux824_BOOL);
constraint int_lt_reif(s_00004,aux399,aux825_BOOL);
constraint int_le_reif(s_00012, s_00005,aux826_BOOL);
constraint int_lt_reif(s_00005,aux399,aux827_BOOL);
constraint int_le_reif(s_00010, s_00015,aux828_BOOL);
constraint int_lt_reif(s_00015,aux401,aux829_BOOL);
constraint int_le_reif(s_00010, s_00016,aux830_BOOL);
constraint int_lt_reif(s_00016,aux401,aux831_BOOL);
constraint int_le_reif(s_00012, s_00009,aux832_BOOL);
constraint int_lt_reif(s_00009,aux399,aux833_BOOL);
constraint int_le_reif(s_00011, s_00010,aux834_BOOL);
constraint int_lt_reif(s_00010,aux407,aux835_BOOL);
constraint int_le_reif(s_00013, s_00001,aux836_BOOL);
constraint int_lt_reif(s_00001,aux408,aux837_BOOL);
constraint int_le_reif(s_00013, s_00002,aux838_BOOL);
constraint int_lt_reif(s_00002,aux408,aux839_BOOL);
constraint int_le_reif(s_00011, s_00012,aux840_BOOL);
constraint int_lt_reif(s_00012,aux407,aux841_BOOL);
constraint int_le_reif(s_00013, s_00003,aux842_BOOL);
constraint int_lt_reif(s_00003,aux408,aux843_BOOL);
constraint int_le_reif(s_00013, s_00004,aux844_BOOL);
constraint int_lt_reif(s_00004,aux408,aux845_BOOL);
constraint int_le_reif(s_00011, s_00014,aux846_BOOL);
constraint int_lt_reif(s_00014,aux407,aux847_BOOL);
constraint int_le_reif(s_00013, s_00005,aux848_BOOL);
constraint int_lt_reif(s_00005,aux408,aux849_BOOL);
constraint int_le_reif(s_00011, s_00015,aux850_BOOL);
constraint int_lt_reif(s_00015,aux407,aux851_BOOL);
constraint int_le_reif(s_00011, s_00016,aux852_BOOL);
constraint int_lt_reif(s_00016,aux407,aux853_BOOL);
constraint int_le_reif(s_00013, s_00007,aux854_BOOL);
constraint int_lt_reif(s_00007,aux408,aux855_BOOL);
constraint int_le_reif(s_00011, s_00017,aux856_BOOL);
constraint int_lt_reif(s_00017,aux407,aux857_BOOL);
constraint int_le_reif(s_00013, s_00008,aux858_BOOL);
constraint int_lt_reif(s_00008,aux408,aux859_BOOL);
constraint int_le_reif(s_00011, s_00018,aux860_BOOL);
constraint int_lt_reif(s_00018,aux407,aux861_BOOL);
constraint int_le_reif(s_00013, s_00009,aux862_BOOL);
constraint int_lt_reif(s_00009,aux408,aux863_BOOL);
constraint int_le_reif(s_00011, s_00019,aux864_BOOL);
constraint int_lt_reif(s_00019,aux407,aux865_BOOL);
constraint int_le_reif(s_00014, s_00001,aux866_BOOL);
constraint int_lt_reif(s_00001,aux400,aux867_BOOL);
constraint int_le_reif(s_00012, s_00011,aux868_BOOL);
constraint int_lt_reif(s_00011,aux399,aux869_BOOL);
constraint int_le_reif(s_00014, s_00002,aux870_BOOL);
constraint int_lt_reif(s_00002,aux400,aux871_BOOL);
constraint int_le_reif(s_00014, s_00003,aux872_BOOL);
constraint int_lt_reif(s_00003,aux400,aux873_BOOL);
constraint int_le_reif(s_00012, s_00017,aux874_BOOL);
constraint int_lt_reif(s_00017,aux399,aux875_BOOL);
constraint int_le_reif(s_00014, s_00009,aux876_BOOL);
constraint int_lt_reif(s_00009,aux400,aux877_BOOL);
constraint int_le_reif(s_00012, s_00019,aux878_BOOL);
constraint int_lt_reif(s_00019,aux399,aux879_BOOL);
constraint int_le_reif(s_00011, s_00020,aux880_BOOL);
constraint int_lt_reif(s_00020,aux407,aux881_BOOL);
constraint int_le_reif(s_00015, s_00001,aux882_BOOL);
constraint int_lt_reif(s_00001,aux395,aux883_BOOL);
constraint int_le_reif(s_00015, s_00002,aux884_BOOL);
constraint int_lt_reif(s_00002,aux395,aux885_BOOL);
constraint int_le_reif(s_00013, s_00018,aux886_BOOL);
constraint int_lt_reif(s_00018,aux408,aux887_BOOL);
constraint int_le_reif(s_00015, s_00009,aux888_BOOL);
constraint int_lt_reif(s_00009,aux395,aux889_BOOL);
constraint int_le_reif(s_00016, s_00001,aux890_BOOL);
constraint int_lt_reif(s_00001,aux410,aux891_BOOL);
constraint int_le_reif(s_00014, s_00011,aux892_BOOL);
constraint int_lt_reif(s_00011,aux400,aux893_BOOL);
constraint int_le_reif(s_00016, s_00002,aux894_BOOL);
constraint int_lt_reif(s_00002,aux410,aux895_BOOL);
constraint int_le_reif(s_00016, s_00003,aux896_BOOL);
constraint int_lt_reif(s_00003,aux410,aux897_BOOL);
constraint int_le_reif(s_00016, s_00004,aux898_BOOL);
constraint int_lt_reif(s_00004,aux410,aux899_BOOL);
constraint int_le_reif(s_00014, s_00016,aux900_BOOL);
constraint int_lt_reif(s_00016,aux400,aux901_BOOL);
constraint int_le_reif(s_00014, s_00017,aux902_BOOL);
constraint int_lt_reif(s_00017,aux400,aux903_BOOL);
constraint int_le_reif(s_00014, s_00018,aux904_BOOL);
constraint int_lt_reif(s_00018,aux400,aux905_BOOL);
constraint int_le_reif(s_00016, s_00009,aux906_BOOL);
constraint int_lt_reif(s_00009,aux410,aux907_BOOL);
constraint int_le_reif(s_00014, s_00019,aux908_BOOL);
constraint int_lt_reif(s_00019,aux400,aux909_BOOL);
constraint int_le_reif(s_00015, s_00010,aux910_BOOL);
constraint int_lt_reif(s_00010,aux395,aux911_BOOL);
constraint int_le_reif(s_00015, s_00011,aux912_BOOL);
constraint int_lt_reif(s_00011,aux395,aux913_BOOL);
constraint int_le_reif(s_00017, s_00001,aux914_BOOL);
constraint int_lt_reif(s_00001,aux396,aux915_BOOL);
constraint int_le_reif(s_00017, s_00002,aux916_BOOL);
constraint int_lt_reif(s_00002,aux396,aux917_BOOL);
constraint int_le_reif(s_00017, s_00003,aux918_BOOL);
constraint int_lt_reif(s_00003,aux396,aux919_BOOL);
constraint int_le_reif(s_00017, s_00004,aux920_BOOL);
constraint int_lt_reif(s_00004,aux396,aux921_BOOL);
constraint int_le_reif(s_00017, s_00005,aux922_BOOL);
constraint int_lt_reif(s_00005,aux396,aux923_BOOL);
constraint int_le_reif(s_00015, s_00016,aux924_BOOL);
constraint int_lt_reif(s_00016,aux395,aux925_BOOL);
constraint int_le_reif(s_00017, s_00009,aux926_BOOL);
constraint int_lt_reif(s_00009,aux396,aux927_BOOL);
constraint int_le_reif(s_00016, s_00010,aux928_BOOL);
constraint int_lt_reif(s_00010,aux410,aux929_BOOL);
constraint int_le_reif(s_00014, s_00020,aux930_BOOL);
constraint int_lt_reif(s_00020,aux400,aux931_BOOL);
constraint int_le_reif(s_00016, s_00011,aux932_BOOL);
constraint int_lt_reif(s_00011,aux410,aux933_BOOL);
constraint int_le_reif(s_00018, s_00001,aux934_BOOL);
constraint int_lt_reif(s_00001,aux405,aux935_BOOL);
constraint int_le_reif(s_00018, s_00002,aux936_BOOL);
constraint int_lt_reif(s_00002,aux405,aux937_BOOL);
constraint int_le_reif(s_00018, s_00003,aux938_BOOL);
constraint int_lt_reif(s_00003,aux405,aux939_BOOL);
constraint int_le_reif(s_00016, s_00014,aux940_BOOL);
constraint int_lt_reif(s_00014,aux410,aux941_BOOL);
constraint int_le_reif(s_00018, s_00004,aux942_BOOL);
constraint int_lt_reif(s_00004,aux405,aux943_BOOL);
constraint int_le_reif(s_00016, s_00015,aux944_BOOL);
constraint int_lt_reif(s_00015,aux410,aux945_BOOL);
constraint int_le_reif(s_00018, s_00005,aux946_BOOL);
constraint int_lt_reif(s_00005,aux405,aux947_BOOL);
constraint int_le_reif(s_00018, s_00006,aux948_BOOL);
constraint int_lt_reif(s_00006,aux405,aux949_BOOL);
constraint int_le_reif(s_00018, s_00008,aux950_BOOL);
constraint int_lt_reif(s_00008,aux405,aux951_BOOL);
constraint int_le_reif(s_00016, s_00019,aux952_BOOL);
constraint int_lt_reif(s_00019,aux410,aux953_BOOL);
constraint int_le_reif(s_00018, s_00009,aux954_BOOL);
constraint int_lt_reif(s_00009,aux405,aux955_BOOL);
constraint int_le_reif(s_00019, s_00001,aux956_BOOL);
constraint int_lt_reif(s_00001,aux392,aux957_BOOL);
constraint int_le_reif(s_00017, s_00011,aux958_BOOL);
constraint int_lt_reif(s_00011,aux396,aux959_BOOL);
constraint int_le_reif(s_00019, s_00002,aux960_BOOL);
constraint int_lt_reif(s_00002,aux392,aux961_BOOL);
constraint int_le_reif(s_00017, s_00012,aux962_BOOL);
constraint int_lt_reif(s_00012,aux396,aux963_BOOL);
constraint int_le_reif(s_00019, s_00003,aux964_BOOL);
constraint int_lt_reif(s_00003,aux392,aux965_BOOL);
constraint int_le_reif(s_00019, s_00004,aux966_BOOL);
constraint int_lt_reif(s_00004,aux392,aux967_BOOL);
constraint int_le_reif(s_00017, s_00014,aux968_BOOL);
constraint int_lt_reif(s_00014,aux396,aux969_BOOL);
constraint int_le_reif(s_00019, s_00005,aux970_BOOL);
constraint int_lt_reif(s_00005,aux392,aux971_BOOL);
constraint int_le_reif(s_00019, s_00008,aux972_BOOL);
constraint int_lt_reif(s_00008,aux392,aux973_BOOL);
constraint int_le_reif(s_00019, s_00009,aux974_BOOL);
constraint int_lt_reif(s_00009,aux392,aux975_BOOL);
constraint int_le_reif(s_00017, s_00019,aux976_BOOL);
constraint int_lt_reif(s_00019,aux396,aux977_BOOL);
constraint int_le_reif(s_00018, s_00011,aux978_BOOL);
constraint int_lt_reif(s_00011,aux405,aux979_BOOL);
constraint int_le_reif(s_00018, s_00013,aux980_BOOL);
constraint int_lt_reif(s_00013,aux405,aux981_BOOL);
constraint int_le_reif(s_00018, s_00014,aux982_BOOL);
constraint int_lt_reif(s_00014,aux405,aux983_BOOL);
constraint int_le_reif(s_00019, s_00011,aux984_BOOL);
constraint int_lt_reif(s_00011,aux392,aux985_BOOL);
constraint int_le_reif(s_00019, s_00012,aux986_BOOL);
constraint int_lt_reif(s_00012,aux392,aux987_BOOL);
constraint int_le_reif(s_00019, s_00014,aux988_BOOL);
constraint int_lt_reif(s_00014,aux392,aux989_BOOL);
constraint int_le_reif(s_00019, s_00016,aux990_BOOL);
constraint int_lt_reif(s_00016,aux392,aux991_BOOL);
constraint int_le_reif(s_00019, s_00017,aux992_BOOL);
constraint int_lt_reif(s_00017,aux392,aux993_BOOL);
constraint int_le_reif(s_00020, s_00001,aux994_BOOL);
constraint int_lt_reif(s_00001,aux402,aux995_BOOL);
constraint int_le_reif(s_00020, s_00002,aux996_BOOL);
constraint int_lt_reif(s_00002,aux402,aux997_BOOL);
constraint int_le_reif(s_00020, s_00003,aux998_BOOL);
constraint int_lt_reif(s_00003,aux402,aux999_BOOL);
constraint int_le_reif(s_00020, s_00004,aux1000_BOOL);
constraint int_lt_reif(s_00004,aux402,aux1001_BOOL);
constraint int_le_reif(s_00020, s_00006,aux1002_BOOL);
constraint int_lt_reif(s_00006,aux402,aux1003_BOOL);
constraint int_le_reif(s_00020, s_00009,aux1004_BOOL);
constraint int_lt_reif(s_00009,aux402,aux1005_BOOL);
constraint int_le_reif(s_00020, s_00011,aux1006_BOOL);
constraint int_lt_reif(s_00011,aux402,aux1007_BOOL);
constraint int_le_reif(s_00020, s_00014,aux1008_BOOL);
constraint int_lt_reif(s_00014,aux402,aux1009_BOOL);
constraint array_bool_and([aux239_BOOL,w_00005_00004_BOOL],aux1010_BOOL);
constraint array_bool_and([aux240_BOOL,w_00005_00008_BOOL],aux1011_BOOL);
constraint array_bool_and([aux241_BOOL,w_00005_00005_BOOL],aux1012_BOOL);
constraint array_bool_and([aux242_BOOL,w_00005_00007_BOOL],aux1013_BOOL);
constraint array_bool_and([aux245_BOOL,w_00005_00013_BOOL],aux1014_BOOL);
constraint array_bool_and([aux204_BOOL,w_00004_00007_BOOL],aux1015_BOOL);
constraint array_bool_and([aux23_BOOL,w_00004_00004_BOOL],aux1016_BOOL);
constraint array_bool_and([aux75_BOOL,w_00004_00005_BOOL],aux1017_BOOL);
constraint int_le_reif(s_00001, s_00004,aux1018_BOOL);
constraint int_lt_reif(s_00004,aux398,aux1019_BOOL);
constraint int_le_reif(s_00001, s_00005,aux1020_BOOL);
constraint int_lt_reif(s_00005,aux398,aux1021_BOOL);
constraint int_le_reif(s_00002, s_00004,aux1022_BOOL);
constraint int_lt_reif(s_00004,aux394,aux1023_BOOL);
constraint int_le_reif(s_00004, s_00001,aux1024_BOOL);
constraint int_lt_reif(s_00001,aux409,aux1025_BOOL);
constraint int_le_reif(s_00004, s_00002,aux1026_BOOL);
constraint int_lt_reif(s_00002,aux409,aux1027_BOOL);
constraint int_le_reif(s_00004, s_00009,aux1028_BOOL);
constraint int_lt_reif(s_00009,aux409,aux1029_BOOL);
constraint int_le_reif(s_00005, s_00001,aux1030_BOOL);
constraint int_lt_reif(s_00001,aux393,aux1031_BOOL);
constraint int_le_reif(s_00005, s_00008,aux1032_BOOL);
constraint int_lt_reif(s_00008,aux393,aux1033_BOOL);
constraint int_le_reif(s_00004, s_00011,aux1034_BOOL);
constraint int_lt_reif(s_00011,aux409,aux1035_BOOL);
constraint int_le_reif(s_00006, s_00002,aux1036_BOOL);
constraint int_lt_reif(s_00002,aux411,aux1037_BOOL);
constraint int_le_reif(s_00004, s_00014,aux1038_BOOL);
constraint int_lt_reif(s_00014,aux409,aux1039_BOOL);
constraint int_le_reif(s_00006, s_00004,aux1040_BOOL);
constraint int_lt_reif(s_00004,aux411,aux1041_BOOL);
constraint int_le_reif(s_00005, s_00011,aux1042_BOOL);
constraint int_lt_reif(s_00011,aux393,aux1043_BOOL);
constraint int_le_reif(s_00005, s_00016,aux1044_BOOL);
constraint int_lt_reif(s_00016,aux393,aux1045_BOOL);
constraint int_le_reif(s_00008, s_00005,aux1046_BOOL);
constraint int_lt_reif(s_00005,aux403,aux1047_BOOL);
constraint int_le_reif(s_00005, s_00020,aux1048_BOOL);
constraint int_lt_reif(s_00020,aux393,aux1049_BOOL);
constraint int_le_reif(s_00009, s_00004,aux1050_BOOL);
constraint int_lt_reif(s_00004,aux404,aux1051_BOOL);
constraint int_le_reif(s_00008, s_00011,aux1052_BOOL);
constraint int_lt_reif(s_00011,aux403,aux1053_BOOL);
constraint int_le_reif(s_00008, s_00014,aux1054_BOOL);
constraint int_lt_reif(s_00014,aux403,aux1055_BOOL);
constraint int_le_reif(s_00008, s_00016,aux1056_BOOL);
constraint int_lt_reif(s_00016,aux403,aux1057_BOOL);
constraint int_le_reif(s_00008, s_00020,aux1058_BOOL);
constraint int_lt_reif(s_00020,aux403,aux1059_BOOL);
constraint int_le_reif(s_00011, s_00004,aux1060_BOOL);
constraint int_lt_reif(s_00004,aux407,aux1061_BOOL);
constraint int_le_reif(s_00011, s_00005,aux1062_BOOL);
constraint int_lt_reif(s_00005,aux407,aux1063_BOOL);
constraint int_le_reif(s_00011, s_00008,aux1064_BOOL);
constraint int_lt_reif(s_00008,aux407,aux1065_BOOL);
constraint int_le_reif(s_00011, s_00013,aux1066_BOOL);
constraint int_lt_reif(s_00013,aux407,aux1067_BOOL);
constraint int_le_reif(s_00014, s_00004,aux1068_BOOL);
constraint int_lt_reif(s_00004,aux400,aux1069_BOOL);
constraint int_le_reif(s_00014, s_00008,aux1070_BOOL);
constraint int_lt_reif(s_00008,aux400,aux1071_BOOL);
constraint int_le_reif(s_00013, s_00011,aux1072_BOOL);
constraint int_lt_reif(s_00011,aux408,aux1073_BOOL);
constraint int_le_reif(s_00013, s_00016,aux1074_BOOL);
constraint int_lt_reif(s_00016,aux408,aux1075_BOOL);
constraint int_le_reif(s_00016, s_00005,aux1076_BOOL);
constraint int_lt_reif(s_00005,aux410,aux1077_BOOL);
constraint int_le_reif(s_00016, s_00008,aux1078_BOOL);
constraint int_lt_reif(s_00008,aux410,aux1079_BOOL);
constraint int_le_reif(s_00016, s_00013,aux1080_BOOL);
constraint int_lt_reif(s_00013,aux410,aux1081_BOOL);
constraint int_le_reif(s_00020, s_00005,aux1082_BOOL);
constraint int_lt_reif(s_00005,aux402,aux1083_BOOL);
constraint int_le_reif(s_00020, s_00008,aux1084_BOOL);
constraint int_lt_reif(s_00008,aux402,aux1085_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux155_BOOL],aux1086_BOOL);
constraint array_bool_and([w_00006_00016_BOOL,aux153_BOOL],aux1087_BOOL);
constraint array_bool_and([w_00006_00019_BOOL,aux156_BOOL],aux1088_BOOL);
constraint array_bool_and([w_00006_00020_BOOL,aux154_BOOL],aux1089_BOOL);
constraint array_bool_and([w_00006_00017_BOOL,aux304_BOOL],aux1090_BOOL);
constraint array_bool_and([aux197_BOOL,w_00009_00009_BOOL],aux1091_BOOL);
constraint array_bool_and([aux258_BOOL,w_00009_00014_BOOL],aux1092_BOOL);
constraint array_bool_and([aux18_BOOL,w_00009_00008_BOOL],aux1093_BOOL);
constraint array_bool_and([aux51_BOOL,w_00009_00011_BOOL],aux1094_BOOL);
constraint array_bool_and([aux73_BOOL,w_00009_00020_BOOL],aux1095_BOOL);
constraint array_bool_and([aux117_BOOL,w_00008_00006_BOOL],aux1096_BOOL);
constraint array_bool_and([aux118_BOOL,w_00008_00008_BOOL],aux1097_BOOL);
constraint array_bool_and([aux119_BOOL,w_00008_00018_BOOL],aux1098_BOOL);
constraint array_bool_and([aux122_BOOL,w_00008_00014_BOOL],aux1099_BOOL);
constraint array_bool_and([aux123_BOOL,w_00008_00013_BOOL],aux1100_BOOL);
constraint array_bool_and([aux124_BOOL,w_00008_00016_BOOL],aux1101_BOOL);
constraint array_bool_and([aux125_BOOL,w_00008_00020_BOOL],aux1102_BOOL);
constraint array_bool_and([aux36_BOOL,w_00001_00016_BOOL],aux1103_BOOL);
constraint array_bool_and([aux84_BOOL,w_00001_00011_BOOL],aux1104_BOOL);
constraint array_bool_and([aux236_BOOL,w_00001_00015_BOOL],aux1105_BOOL);
constraint array_bool_and([aux238_BOOL,w_00001_00010_BOOL],aux1106_BOOL);
constraint array_bool_and([aux112_BOOL,w_00002_00006_BOOL],aux1107_BOOL);
constraint array_bool_and([aux114_BOOL,w_00002_00012_BOOL],aux1108_BOOL);
constraint array_bool_and([w_00002_00016_BOOL,aux32_BOOL],aux1109_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux61_BOOL],aux1110_BOOL);
constraint array_bool_and([w_00002_00020_BOOL,aux20_BOOL],aux1111_BOOL);
constraint array_bool_and([w_00008_00016_BOOL,aux32_BOOL],aux1112_BOOL);
constraint array_bool_and([w_00008_00014_BOOL,aux61_BOOL],aux1113_BOOL);
constraint array_bool_and([w_00008_00020_BOOL,aux20_BOOL],aux1114_BOOL);
constraint array_bool_and([aux112_BOOL,w_00008_00006_BOOL],aux1115_BOOL);
constraint array_bool_and([aux114_BOOL,w_00008_00012_BOOL],aux1116_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux202_BOOL],aux1117_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux284_BOOL],aux1118_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux316_BOOL],aux1119_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux43_BOOL],aux1120_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux54_BOOL],aux1121_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux53_BOOL],aux1122_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux81_BOOL],aux1123_BOOL);
constraint int_le_reif(s_00007, s_00019,aux1124_BOOL);
constraint int_lt_reif(s_00019,aux397,aux1125_BOOL);
constraint array_bool_and([w_00004_00007_BOOL,aux1124_BOOL,aux1125_BOOL],false);
constraint int_le_reif(s_00010, s_00019,aux1127_BOOL);
constraint int_lt_reif(s_00019,aux401,aux1128_BOOL);
constraint array_bool_and([w_00004_00010_BOOL,aux1127_BOOL,aux1128_BOOL],false);
constraint int_le_reif(s_00015, s_00019,aux1130_BOOL);
constraint int_lt_reif(s_00019,aux395,aux1131_BOOL);
constraint array_bool_and([w_00004_00015_BOOL,aux1130_BOOL,aux1131_BOOL],false);
constraint array_bool_and([aux158_BOOL,w_00004_00006_BOOL],aux1133_BOOL);
constraint array_bool_and([aux160_BOOL,w_00004_00018_BOOL],aux1134_BOOL);
constraint array_bool_and([aux164_BOOL,w_00004_00013_BOOL],aux1135_BOOL);
constraint array_bool_and([aux166_BOOL,w_00004_00020_BOOL],aux1136_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux19_BOOL],aux1137_BOOL);
constraint array_bool_and([w_00003_00020_BOOL,aux20_BOOL],aux1138_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux21_BOOL],aux1139_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux74_BOOL],aux1140_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux18_BOOL],aux1141_BOOL);
constraint array_bool_and([w_00003_00020_BOOL,aux73_BOOL],aux1142_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux105_BOOL],aux1143_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux101_BOOL],aux1144_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux102_BOOL],aux1145_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux110_BOOL],aux1146_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux107_BOOL],aux1147_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux106_BOOL],aux1148_BOOL);
constraint array_bool_and([w_00006_00016_BOOL,aux108_BOOL],aux1149_BOOL);
constraint array_bool_and([w_00006_00019_BOOL,aux111_BOOL],aux1150_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux276_BOOL],aux1151_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux277_BOOL],aux1152_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux339_BOOL],aux1153_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux278_BOOL],aux1154_BOOL);
constraint array_bool_and([w_00006_00017_BOOL,aux279_BOOL],aux1155_BOOL);
constraint int_le_reif(s_00007, s_00020,aux1156_BOOL);
constraint int_lt_reif(s_00020,aux397,aux1157_BOOL);
constraint array_bool_and([w_00004_00007_BOOL,aux1156_BOOL,aux1157_BOOL],false);
constraint int_le_reif(s_00010, s_00020,aux1159_BOOL);
constraint int_lt_reif(s_00020,aux401,aux1160_BOOL);
constraint array_bool_and([w_00004_00010_BOOL,aux1159_BOOL,aux1160_BOOL],false);
constraint int_le_reif(s_00015, s_00020,aux1162_BOOL);
constraint int_lt_reif(s_00020,aux395,aux1163_BOOL);
constraint array_bool_and([w_00004_00015_BOOL,aux1162_BOOL,aux1163_BOOL],false);
constraint array_bool_and([aux169_BOOL,w_00004_00018_BOOL],aux1165_BOOL);
constraint array_bool_and([aux171_BOOL,w_00004_00013_BOOL],aux1166_BOOL);
constraint array_bool_and([aux172_BOOL,w_00004_00016_BOOL],aux1167_BOOL);
constraint array_bool_and([aux173_BOOL,w_00004_00012_BOOL],aux1168_BOOL);
constraint array_bool_and([aux174_BOOL,w_00004_00019_BOOL],aux1169_BOOL);
constraint array_bool_and([aux270_BOOL,w_00004_00017_BOOL],aux1170_BOOL);
constraint array_bool_and([aux21_BOOL,w_00004_00008_BOOL],aux1171_BOOL);
constraint array_bool_and([aux74_BOOL,w_00004_00005_BOOL],aux1172_BOOL);
constraint array_bool_and([aux70_BOOL,w_00001_00004_BOOL],false);
constraint array_bool_and([aux200_BOOL,w_00001_00008_BOOL],false);
constraint array_bool_and([aux201_BOOL,w_00001_00005_BOOL],false);
constraint array_bool_and([aux325_BOOL,w_00001_00007_BOOL],false);
constraint array_bool_and([aux169_BOOL,w_00007_00018_BOOL],aux1177_BOOL);
constraint array_bool_and([aux171_BOOL,w_00007_00013_BOOL],aux1178_BOOL);
constraint array_bool_and([aux172_BOOL,w_00007_00016_BOOL],aux1179_BOOL);
constraint array_bool_and([aux173_BOOL,w_00007_00012_BOOL],aux1180_BOOL);
constraint array_bool_and([aux174_BOOL,w_00007_00019_BOOL],aux1181_BOOL);
constraint array_bool_and([aux270_BOOL,w_00007_00017_BOOL],aux1182_BOOL);
constraint array_bool_and([w_00007_00008_BOOL,aux21_BOOL],aux1183_BOOL);
constraint array_bool_and([w_00007_00005_BOOL,aux74_BOOL],aux1184_BOOL);
constraint array_bool_and([aux127_BOOL,w_00002_00006_BOOL],aux1185_BOOL);
constraint array_bool_and([aux129_BOOL,w_00002_00014_BOOL],aux1186_BOOL);
constraint array_bool_and([aux130_BOOL,w_00002_00020_BOOL],aux1187_BOOL);
constraint array_bool_and([aux131_BOOL,w_00002_00012_BOOL],aux1188_BOOL);
constraint array_bool_and([aux132_BOOL,w_00002_00019_BOOL],aux1189_BOOL);
constraint array_bool_and([w_00002_00016_BOOL,aux36_BOOL],aux1190_BOOL);
constraint array_bool_and([aux27_BOOL,w_00005_00001_BOOL],aux1191_BOOL);
constraint array_bool_and([aux42_BOOL,w_00005_00011_BOOL],aux1192_BOOL);
constraint array_bool_and([aux206_BOOL,w_00005_00015_BOOL],aux1193_BOOL);
constraint array_bool_and([aux208_BOOL,w_00005_00010_BOOL],aux1194_BOOL);
constraint array_bool_and([aux214_BOOL,w_00005_00005_BOOL],aux1195_BOOL);
constraint array_bool_and([aux216_BOOL,w_00005_00001_BOOL],aux1196_BOOL);
constraint array_bool_and([aux215_BOOL,w_00005_00015_BOOL],aux1197_BOOL);
constraint array_bool_and([aux217_BOOL,w_00005_00011_BOOL],aux1198_BOOL);
constraint array_bool_and([aux219_BOOL,w_00005_00016_BOOL],aux1199_BOOL);
constraint array_bool_and([aux220_BOOL,w_00005_00010_BOOL],aux1200_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux190_BOOL],aux1201_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux332_BOOL],aux1202_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux333_BOOL],aux1203_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux310_BOOL],aux1204_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux311_BOOL],aux1205_BOOL);
constraint array_bool_and([aux158_BOOL,w_00008_00006_BOOL],aux1206_BOOL);
constraint array_bool_and([aux160_BOOL,w_00008_00018_BOOL],aux1207_BOOL);
constraint array_bool_and([aux164_BOOL,w_00008_00013_BOOL],aux1208_BOOL);
constraint array_bool_and([aux166_BOOL,w_00008_00020_BOOL],aux1209_BOOL);
constraint array_bool_and([aux187_BOOL,w_00009_00003_BOOL],aux1210_BOOL);
constraint array_bool_and([aux196_BOOL,w_00009_00011_BOOL],aux1211_BOOL);
constraint array_bool_and([aux45_BOOL,w_00009_00004_BOOL],aux1212_BOOL);
constraint array_bool_and([aux23_BOOL,w_00005_00004_BOOL],aux1213_BOOL);
constraint array_bool_and([aux75_BOOL,w_00005_00005_BOOL],aux1214_BOOL);
constraint array_bool_and([aux204_BOOL,w_00005_00007_BOOL],aux1215_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux266_BOOL],aux1216_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux295_BOOL],aux1217_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux297_BOOL],aux1218_BOOL);
constraint array_bool_and([w_00006_00016_BOOL,aux298_BOOL],aux1219_BOOL);
constraint array_bool_and([w_00006_00018_BOOL,aux299_BOOL],aux1220_BOOL);
constraint array_bool_and([w_00006_00020_BOOL,aux267_BOOL],aux1221_BOOL);
constraint array_bool_and([aux101_BOOL,w_00002_00004_BOOL],aux1222_BOOL);
constraint array_bool_and([aux102_BOOL,w_00002_00008_BOOL],aux1223_BOOL);
constraint array_bool_and([aux105_BOOL,w_00002_00002_BOOL],aux1224_BOOL);
constraint array_bool_and([aux106_BOOL,w_00002_00014_BOOL],aux1225_BOOL);
constraint array_bool_and([aux107_BOOL,w_00002_00013_BOOL],aux1226_BOOL);
constraint array_bool_and([aux108_BOOL,w_00002_00016_BOOL],aux1227_BOOL);
constraint array_bool_and([aux110_BOOL,w_00002_00012_BOOL],aux1228_BOOL);
constraint array_bool_and([aux111_BOOL,w_00002_00019_BOOL],aux1229_BOOL);
constraint array_bool_and([aux112_BOOL,w_00004_00006_BOOL],aux1230_BOOL);
constraint array_bool_and([aux114_BOOL,w_00004_00012_BOOL],aux1231_BOOL);
constraint array_bool_and([aux198_BOOL,w_00004_00009_BOOL],aux1232_BOOL);
constraint array_bool_and([aux221_BOOL,w_00004_00015_BOOL],aux1233_BOOL);
constraint array_bool_and([aux223_BOOL,w_00004_00010_BOOL],aux1234_BOOL);
constraint array_bool_and([aux260_BOOL,w_00004_00017_BOOL],aux1235_BOOL);
constraint array_bool_and([aux19_BOOL,w_00004_00005_BOOL],aux1236_BOOL);
constraint array_bool_and([aux20_BOOL,w_00004_00020_BOOL],aux1237_BOOL);
constraint array_bool_and([aux32_BOOL,w_00004_00016_BOOL],aux1238_BOOL);
constraint array_bool_and([aux52_BOOL,w_00004_00011_BOOL],aux1239_BOOL);
constraint array_bool_and([aux61_BOOL,w_00004_00014_BOOL],aux1240_BOOL);
constraint array_bool_and([aux200_BOOL,w_00007_00008_BOOL],aux1241_BOOL);
constraint array_bool_and([aux201_BOOL,w_00007_00005_BOOL],aux1242_BOOL);
constraint array_bool_and([aux280_BOOL,w_00007_00006_BOOL],aux1243_BOOL);
constraint array_bool_and([aux315_BOOL,w_00007_00003_BOOL],aux1244_BOOL);
constraint array_bool_and([w_00007_00004_BOOL,aux70_BOOL],aux1245_BOOL);
constraint array_bool_and([aux41_BOOL,w_00009_00014_BOOL],aux1246_BOOL);
constraint array_bool_and([aux42_BOOL,w_00009_00011_BOOL],aux1247_BOOL);
constraint array_bool_and([aux46_BOOL,w_00009_00002_BOOL],aux1248_BOOL);
constraint array_bool_and([aux69_BOOL,w_00009_00009_BOOL],aux1249_BOOL);
constraint array_bool_and([w_00008_00004_BOOL,aux44_BOOL],aux1250_BOOL);
constraint array_bool_and([w_00008_00008_BOOL,aux63_BOOL],aux1251_BOOL);
constraint array_bool_and([aux133_BOOL,w_00008_00006_BOOL],aux1252_BOOL);
constraint array_bool_and([aux136_BOOL,w_00008_00013_BOOL],aux1253_BOOL);
constraint array_bool_and([aux138_BOOL,w_00008_00012_BOOL],aux1254_BOOL);
constraint int_le_reif(s_00007, s_00014,aux1255_BOOL);
constraint int_lt_reif(s_00014,aux397,aux1256_BOOL);
constraint array_bool_and([w_00004_00007_BOOL,aux1255_BOOL,aux1256_BOOL],aux1257_BOOL);
constraint int_le_reif(s_00010, s_00014,aux1258_BOOL);
constraint int_lt_reif(s_00014,aux401,aux1259_BOOL);
constraint array_bool_and([w_00004_00010_BOOL,aux1258_BOOL,aux1259_BOOL],false);
constraint int_le_reif(s_00015, s_00014,aux1261_BOOL);
constraint int_lt_reif(s_00014,aux395,aux1262_BOOL);
constraint array_bool_and([w_00004_00015_BOOL,aux1261_BOOL,aux1262_BOOL],false);
constraint array_bool_and([aux133_BOOL,w_00004_00006_BOOL],aux1264_BOOL);
constraint array_bool_and([aux136_BOOL,w_00004_00013_BOOL],aux1265_BOOL);
constraint array_bool_and([aux138_BOOL,w_00004_00012_BOOL],aux1266_BOOL);
constraint array_bool_and([aux263_BOOL,w_00004_00005_BOOL],aux1267_BOOL);
constraint array_bool_and([aux44_BOOL,w_00004_00004_BOOL],aux1268_BOOL);
constraint array_bool_and([aux63_BOOL,w_00004_00008_BOOL],aux1269_BOOL);
constraint array_bool_and([aux224_BOOL,w_00005_00004_BOOL],aux1270_BOOL);
constraint array_bool_and([aux225_BOOL,w_00005_00008_BOOL],aux1271_BOOL);
constraint array_bool_and([aux226_BOOL,w_00005_00005_BOOL],aux1272_BOOL);
constraint array_bool_and([aux228_BOOL,w_00005_00007_BOOL],aux1273_BOOL);
constraint array_bool_and([aux231_BOOL,w_00005_00013_BOOL],aux1274_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux201_BOOL],aux1275_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux200_BOOL],aux1276_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux280_BOOL],aux1277_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux315_BOOL],aux1278_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux70_BOOL],aux1279_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux112_BOOL],aux1280_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux198_BOOL],aux1281_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux114_BOOL],aux1282_BOOL);
constraint array_bool_and([w_00006_00017_BOOL,aux260_BOOL],aux1283_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux19_BOOL],aux1284_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux52_BOOL],aux1285_BOOL);
constraint array_bool_and([w_00006_00016_BOOL,aux32_BOOL],aux1286_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux61_BOOL],aux1287_BOOL);
constraint array_bool_and([w_00006_00020_BOOL,aux20_BOOL],aux1288_BOOL);
constraint array_bool_and([aux101_BOOL,w_00007_00004_BOOL],aux1289_BOOL);
constraint array_bool_and([aux102_BOOL,w_00007_00008_BOOL],aux1290_BOOL);
constraint array_bool_and([aux105_BOOL,w_00007_00002_BOOL],aux1291_BOOL);
constraint array_bool_and([aux106_BOOL,w_00007_00014_BOOL],aux1292_BOOL);
constraint array_bool_and([aux107_BOOL,w_00007_00013_BOOL],aux1293_BOOL);
constraint array_bool_and([aux108_BOOL,w_00007_00016_BOOL],aux1294_BOOL);
constraint array_bool_and([aux110_BOOL,w_00007_00012_BOOL],aux1295_BOOL);
constraint array_bool_and([aux111_BOOL,w_00007_00019_BOOL],aux1296_BOOL);
constraint array_bool_and([aux276_BOOL,w_00007_00005_BOOL],aux1297_BOOL);
constraint array_bool_and([aux277_BOOL,w_00007_00009_BOOL],aux1298_BOOL);
constraint array_bool_and([aux278_BOOL,w_00007_00011_BOOL],aux1299_BOOL);
constraint array_bool_and([aux279_BOOL,w_00007_00017_BOOL],aux1300_BOOL);
constraint array_bool_and([aux339_BOOL,w_00007_00003_BOOL],aux1301_BOOL);
constraint array_bool_and([w_00007_00001_BOOL,aux27_BOOL],aux1302_BOOL);
constraint array_bool_and([w_00007_00002_BOOL,aux46_BOOL],aux1303_BOOL);
constraint array_bool_and([w_00007_00006_BOOL,aux97_BOOL],aux1304_BOOL);
constraint array_bool_and([w_00007_00009_BOOL,aux69_BOOL],aux1305_BOOL);
constraint array_bool_and([w_00007_00011_BOOL,aux42_BOOL],aux1306_BOOL);
constraint array_bool_and([w_00007_00014_BOOL,aux41_BOOL],aux1307_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux27_BOOL],aux1308_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux46_BOOL],aux1309_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux97_BOOL],aux1310_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux69_BOOL],aux1311_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux42_BOOL],aux1312_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux41_BOOL],aux1313_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux23_BOOL],aux1314_BOOL);
constraint array_bool_and([w_00008_00008_BOOL,aux21_BOOL],aux1315_BOOL);
constraint array_bool_and([aux169_BOOL,w_00008_00018_BOOL],aux1316_BOOL);
constraint array_bool_and([aux171_BOOL,w_00008_00013_BOOL],aux1317_BOOL);
constraint array_bool_and([aux172_BOOL,w_00008_00016_BOOL],aux1318_BOOL);
constraint array_bool_and([aux173_BOOL,w_00008_00012_BOOL],aux1319_BOOL);
constraint array_bool_and([aux174_BOOL,w_00008_00019_BOOL],aux1320_BOOL);
constraint array_bool_and([w_00008_00016_BOOL,aux36_BOOL],aux1321_BOOL);
constraint array_bool_and([aux127_BOOL,w_00008_00006_BOOL],aux1322_BOOL);
constraint array_bool_and([aux129_BOOL,w_00008_00014_BOOL],aux1323_BOOL);
constraint array_bool_and([aux130_BOOL,w_00008_00020_BOOL],aux1324_BOOL);
constraint array_bool_and([aux131_BOOL,w_00008_00012_BOOL],aux1325_BOOL);
constraint array_bool_and([aux132_BOOL,w_00008_00019_BOOL],aux1326_BOOL);
constraint array_bool_and([aux133_BOOL,w_00007_00006_BOOL],aux1327_BOOL);
constraint array_bool_and([aux136_BOOL,w_00007_00013_BOOL],aux1328_BOOL);
constraint array_bool_and([aux138_BOOL,w_00007_00012_BOOL],aux1329_BOOL);
constraint array_bool_and([aux263_BOOL,w_00007_00005_BOOL],aux1330_BOOL);
constraint array_bool_and([w_00007_00004_BOOL,aux44_BOOL],aux1331_BOOL);
constraint array_bool_and([w_00007_00008_BOOL,aux63_BOOL],aux1332_BOOL);
constraint array_bool_and([aux140_BOOL,w_00004_00006_BOOL],aux1333_BOOL);
constraint array_bool_and([aux141_BOOL,w_00004_00018_BOOL],aux1334_BOOL);
constraint array_bool_and([aux143_BOOL,w_00004_00020_BOOL],aux1335_BOOL);
constraint array_bool_and([aux144_BOOL,w_00004_00012_BOOL],aux1336_BOOL);
constraint array_bool_and([aux249_BOOL,w_00004_00007_BOOL],aux1337_BOOL);
constraint array_bool_and([aux293_BOOL,w_00004_00017_BOOL],aux1338_BOOL);
constraint array_bool_and([aux38_BOOL,w_00004_00008_BOOL],aux1339_BOOL);
constraint array_bool_and([aux40_BOOL,w_00004_00013_BOOL],aux1340_BOOL);
constraint array_bool_and([aux85_BOOL,w_00004_00005_BOOL],aux1341_BOOL);
constraint array_bool_and([aux101_BOOL,w_00008_00004_BOOL],aux1342_BOOL);
constraint array_bool_and([aux102_BOOL,w_00008_00008_BOOL],aux1343_BOOL);
constraint array_bool_and([aux105_BOOL,w_00008_00002_BOOL],aux1344_BOOL);
constraint array_bool_and([aux106_BOOL,w_00008_00014_BOOL],aux1345_BOOL);
constraint array_bool_and([aux107_BOOL,w_00008_00013_BOOL],aux1346_BOOL);
constraint array_bool_and([aux108_BOOL,w_00008_00016_BOOL],aux1347_BOOL);
constraint array_bool_and([aux110_BOOL,w_00008_00012_BOOL],aux1348_BOOL);
constraint array_bool_and([aux111_BOOL,w_00008_00019_BOOL],aux1349_BOOL);
constraint array_bool_and([aux263_BOOL,w_00009_00005_BOOL],aux1350_BOOL);
constraint array_bool_and([aux44_BOOL,w_00009_00004_BOOL],aux1351_BOOL);
constraint array_bool_and([aux63_BOOL,w_00009_00008_BOOL],aux1352_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux197_BOOL],aux1353_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux272_BOOL],aux1354_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux258_BOOL],aux1355_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux77_BOOL],aux1356_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux18_BOOL],aux1357_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux51_BOOL],aux1358_BOOL);
constraint array_bool_and([w_00006_00016_BOOL,aux79_BOOL],aux1359_BOOL);
constraint array_bool_and([w_00006_00020_BOOL,aux73_BOOL],aux1360_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux117_BOOL],aux1361_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux118_BOOL],aux1362_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux123_BOOL],aux1363_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux122_BOOL],aux1364_BOOL);
constraint array_bool_and([w_00006_00016_BOOL,aux124_BOOL],aux1365_BOOL);
constraint array_bool_and([w_00006_00018_BOOL,aux119_BOOL],aux1366_BOOL);
constraint array_bool_and([w_00006_00020_BOOL,aux125_BOOL],aux1367_BOOL);
constraint int_le_reif(s_00007, s_00018,aux1368_BOOL);
constraint int_lt_reif(s_00018,aux397,aux1369_BOOL);
constraint array_bool_and([w_00004_00007_BOOL,aux1368_BOOL,aux1369_BOOL],false);
constraint int_le_reif(s_00010, s_00018,aux1371_BOOL);
constraint int_lt_reif(s_00018,aux401,aux1372_BOOL);
constraint array_bool_and([w_00004_00010_BOOL,aux1371_BOOL,aux1372_BOOL],false);
constraint int_le_reif(s_00015, s_00018,aux1374_BOOL);
constraint int_lt_reif(s_00018,aux395,aux1375_BOOL);
constraint array_bool_and([w_00004_00015_BOOL,aux1374_BOOL,aux1375_BOOL],aux1376_BOOL);
constraint array_bool_and([aux153_BOOL,w_00004_00016_BOOL],aux1377_BOOL);
constraint array_bool_and([aux154_BOOL,w_00004_00020_BOOL],aux1378_BOOL);
constraint array_bool_and([aux155_BOOL,w_00004_00012_BOOL],aux1379_BOOL);
constraint array_bool_and([aux156_BOOL,w_00004_00019_BOOL],aux1380_BOOL);
constraint array_bool_and([aux304_BOOL,w_00004_00017_BOOL],aux1381_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux45_BOOL],aux1382_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux93_BOOL],aux1383_BOOL);
constraint array_bool_and([aux190_BOOL,w_00007_00002_BOOL],aux1384_BOOL);
constraint array_bool_and([aux310_BOOL,w_00007_00009_BOOL],aux1385_BOOL);
constraint array_bool_and([aux311_BOOL,w_00007_00011_BOOL],aux1386_BOOL);
constraint array_bool_and([aux332_BOOL,w_00007_00001_BOOL],aux1387_BOOL);
constraint array_bool_and([aux333_BOOL,w_00007_00006_BOOL],aux1388_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux127_BOOL],aux1389_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux131_BOOL],aux1390_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux129_BOOL],aux1391_BOOL);
constraint array_bool_and([w_00006_00019_BOOL,aux132_BOOL],aux1392_BOOL);
constraint array_bool_and([w_00006_00020_BOOL,aux130_BOOL],aux1393_BOOL);
constraint array_bool_and([w_00006_00017_BOOL,aux292_BOOL],aux1394_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux84_BOOL],aux1395_BOOL);
constraint array_bool_and([w_00006_00016_BOOL,aux36_BOOL],aux1396_BOOL);
constraint array_bool_and([aux36_BOOL,w_00005_00016_BOOL],aux1397_BOOL);
constraint array_bool_and([aux84_BOOL,w_00005_00011_BOOL],aux1398_BOOL);
constraint array_bool_and([aux236_BOOL,w_00005_00015_BOOL],aux1399_BOOL);
constraint array_bool_and([aux238_BOOL,w_00005_00010_BOOL],aux1400_BOOL);
constraint array_bool_and([aux158_BOOL,w_00002_00006_BOOL],aux1401_BOOL);
constraint array_bool_and([aux160_BOOL,w_00002_00018_BOOL],aux1402_BOOL);
constraint array_bool_and([aux164_BOOL,w_00002_00013_BOOL],aux1403_BOOL);
constraint array_bool_and([aux166_BOOL,w_00002_00020_BOOL],aux1404_BOOL);
constraint array_bool_and([aux198_BOOL,w_00009_00009_BOOL],aux1405_BOOL);
constraint array_bool_and([aux260_BOOL,w_00009_00017_BOOL],aux1406_BOOL);
constraint array_bool_and([aux19_BOOL,w_00009_00005_BOOL],aux1407_BOOL);
constraint array_bool_and([aux20_BOOL,w_00009_00020_BOOL],aux1408_BOOL);
constraint array_bool_and([aux52_BOOL,w_00009_00011_BOOL],aux1409_BOOL);
constraint array_bool_and([aux61_BOOL,w_00009_00014_BOOL],aux1410_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux27_BOOL],aux1411_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux46_BOOL],aux1412_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux97_BOOL],aux1413_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux41_BOOL],aux1414_BOOL);
constraint array_bool_and([aux127_BOOL,w_00004_00006_BOOL],aux1415_BOOL);
constraint array_bool_and([aux129_BOOL,w_00004_00014_BOOL],aux1416_BOOL);
constraint array_bool_and([aux130_BOOL,w_00004_00020_BOOL],aux1417_BOOL);
constraint array_bool_and([aux131_BOOL,w_00004_00012_BOOL],aux1418_BOOL);
constraint array_bool_and([aux132_BOOL,w_00004_00019_BOOL],aux1419_BOOL);
constraint array_bool_and([aux236_BOOL,w_00004_00015_BOOL],aux1420_BOOL);
constraint array_bool_and([aux238_BOOL,w_00004_00010_BOOL],aux1421_BOOL);
constraint array_bool_and([aux292_BOOL,w_00004_00017_BOOL],aux1422_BOOL);
constraint array_bool_and([aux36_BOOL,w_00004_00016_BOOL],aux1423_BOOL);
constraint array_bool_and([aux84_BOOL,w_00004_00011_BOOL],aux1424_BOOL);
constraint array_bool_and([aux140_BOOL,w_00007_00006_BOOL],aux1425_BOOL);
constraint array_bool_and([aux141_BOOL,w_00007_00018_BOOL],aux1426_BOOL);
constraint array_bool_and([aux143_BOOL,w_00007_00020_BOOL],aux1427_BOOL);
constraint array_bool_and([aux144_BOOL,w_00007_00012_BOOL],aux1428_BOOL);
constraint array_bool_and([aux293_BOOL,w_00007_00017_BOOL],aux1429_BOOL);
constraint array_bool_and([w_00007_00008_BOOL,aux38_BOOL],aux1430_BOOL);
constraint array_bool_and([w_00007_00005_BOOL,aux85_BOOL],aux1431_BOOL);
constraint array_bool_and([w_00007_00013_BOOL,aux40_BOOL],aux1432_BOOL);
constraint int_le_reif(s_00006, s_00010,aux1433_BOOL);
constraint int_lt_reif(s_00010,aux411,aux1434_BOOL);
constraint array_bool_and([w_00004_00006_BOOL,aux1433_BOOL,aux1434_BOOL],aux1435_BOOL);
constraint int_le_reif(s_00012, s_00010,aux1436_BOOL);
constraint int_lt_reif(s_00010,aux399,aux1437_BOOL);
constraint array_bool_and([w_00004_00012_BOOL,aux1436_BOOL,aux1437_BOOL],false);
constraint int_le_reif(s_00014, s_00010,aux1439_BOOL);
constraint int_lt_reif(s_00010,aux400,aux1440_BOOL);
constraint array_bool_and([w_00004_00014_BOOL,aux1439_BOOL,aux1440_BOOL],false);
constraint int_le_reif(s_00017, s_00010,aux1442_BOOL);
constraint int_lt_reif(s_00010,aux396,aux1443_BOOL);
constraint array_bool_and([w_00004_00017_BOOL,aux1442_BOOL,aux1443_BOOL],false);
constraint int_le_reif(s_00018, s_00010,aux1445_BOOL);
constraint int_lt_reif(s_00010,aux405,aux1446_BOOL);
constraint array_bool_and([w_00004_00018_BOOL,aux1445_BOOL,aux1446_BOOL],false);
constraint int_le_reif(s_00019, s_00010,aux1448_BOOL);
constraint int_lt_reif(s_00010,aux392,aux1449_BOOL);
constraint array_bool_and([w_00004_00019_BOOL,aux1448_BOOL,aux1449_BOOL],false);
constraint int_le_reif(s_00020, s_00010,aux1451_BOOL);
constraint int_lt_reif(s_00010,aux402,aux1452_BOOL);
constraint array_bool_and([w_00004_00020_BOOL,aux1451_BOOL,aux1452_BOOL],false);
constraint array_bool_and([aux224_BOOL,w_00004_00004_BOOL],aux1454_BOOL);
constraint array_bool_and([aux225_BOOL,w_00004_00008_BOOL],aux1455_BOOL);
constraint array_bool_and([aux226_BOOL,w_00004_00005_BOOL],aux1456_BOOL);
constraint array_bool_and([aux228_BOOL,w_00004_00007_BOOL],aux1457_BOOL);
constraint array_bool_and([aux231_BOOL,w_00004_00013_BOOL],aux1458_BOOL);
constraint array_bool_and([aux328_BOOL,w_00004_00002_BOOL],aux1459_BOOL);
constraint array_bool_and([aux197_BOOL,w_00004_00009_BOOL],false);
constraint array_bool_and([aux209_BOOL,w_00004_00015_BOOL],aux1461_BOOL);
constraint array_bool_and([aux210_BOOL,w_00004_00007_BOOL],aux1462_BOOL);
constraint array_bool_and([aux211_BOOL,w_00004_00010_BOOL],aux1463_BOOL);
constraint array_bool_and([aux258_BOOL,w_00004_00014_BOOL],aux1464_BOOL);
constraint array_bool_and([aux272_BOOL,w_00004_00006_BOOL],aux1465_BOOL);
constraint array_bool_and([aux18_BOOL,w_00004_00008_BOOL],aux1466_BOOL);
constraint array_bool_and([aux51_BOOL,w_00004_00011_BOOL],aux1467_BOOL);
constraint array_bool_and([aux73_BOOL,w_00004_00020_BOOL],aux1468_BOOL);
constraint array_bool_and([aux77_BOOL,w_00004_00001_BOOL],false);
constraint array_bool_and([aux79_BOOL,w_00004_00016_BOOL],aux1470_BOOL);
constraint array_bool_and([aux169_BOOL,w_00002_00018_BOOL],aux1471_BOOL);
constraint array_bool_and([aux171_BOOL,w_00002_00013_BOOL],aux1472_BOOL);
constraint array_bool_and([aux172_BOOL,w_00002_00016_BOOL],aux1473_BOOL);
constraint array_bool_and([aux173_BOOL,w_00002_00012_BOOL],aux1474_BOOL);
constraint array_bool_and([aux174_BOOL,w_00002_00019_BOOL],aux1475_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux21_BOOL],aux1476_BOOL);
constraint array_bool_and([aux38_BOOL,w_00001_00008_BOOL],aux1477_BOOL);
constraint array_bool_and([aux40_BOOL,w_00001_00013_BOOL],aux1478_BOOL);
constraint array_bool_and([aux85_BOOL,w_00001_00005_BOOL],aux1479_BOOL);
constraint array_bool_and([aux249_BOOL,w_00001_00007_BOOL],aux1480_BOOL);
constraint array_bool_and([aux117_BOOL,w_00002_00006_BOOL],aux1481_BOOL);
constraint array_bool_and([aux118_BOOL,w_00002_00008_BOOL],aux1482_BOOL);
constraint array_bool_and([aux119_BOOL,w_00002_00018_BOOL],aux1483_BOOL);
constraint array_bool_and([aux122_BOOL,w_00002_00014_BOOL],aux1484_BOOL);
constraint array_bool_and([aux123_BOOL,w_00002_00013_BOOL],aux1485_BOOL);
constraint array_bool_and([aux124_BOOL,w_00002_00016_BOOL],aux1486_BOOL);
constraint array_bool_and([aux125_BOOL,w_00002_00020_BOOL],aux1487_BOOL);
constraint array_bool_and([aux18_BOOL,w_00005_00008_BOOL],aux1488_BOOL);
constraint array_bool_and([aux51_BOOL,w_00005_00011_BOOL],aux1489_BOOL);
constraint array_bool_and([aux77_BOOL,w_00005_00001_BOOL],false);
constraint array_bool_and([aux79_BOOL,w_00005_00016_BOOL],aux1491_BOOL);
constraint array_bool_and([aux209_BOOL,w_00005_00015_BOOL],aux1492_BOOL);
constraint array_bool_and([aux210_BOOL,w_00005_00007_BOOL],aux1493_BOOL);
constraint array_bool_and([aux211_BOOL,w_00005_00010_BOOL],aux1494_BOOL);
constraint array_bool_and([aux331_BOOL,w_00007_00003_BOOL],aux1495_BOOL);
constraint array_bool_and([w_00007_00004_BOOL,aux23_BOOL],aux1496_BOOL);
constraint array_bool_and([w_00007_00005_BOOL,aux75_BOOL],aux1497_BOOL);
constraint array_bool_and([aux19_BOOL,w_00001_00005_BOOL],aux1498_BOOL);
constraint array_bool_and([aux32_BOOL,w_00001_00016_BOOL],aux1499_BOOL);
constraint array_bool_and([aux52_BOOL,w_00001_00011_BOOL],aux1500_BOOL);
constraint array_bool_and([aux221_BOOL,w_00001_00015_BOOL],aux1501_BOOL);
constraint array_bool_and([aux223_BOOL,w_00001_00010_BOOL],aux1502_BOOL);
constraint array_bool_and([aux266_BOOL,w_00009_00008_BOOL],aux1503_BOOL);
constraint array_bool_and([aux267_BOOL,w_00009_00020_BOOL],aux1504_BOOL);
constraint array_bool_and([aux266_BOOL,w_00007_00008_BOOL],aux1505_BOOL);
constraint array_bool_and([aux267_BOOL,w_00007_00020_BOOL],aux1506_BOOL);
constraint array_bool_and([aux295_BOOL,w_00007_00006_BOOL],aux1507_BOOL);
constraint array_bool_and([aux297_BOOL,w_00007_00013_BOOL],aux1508_BOOL);
constraint array_bool_and([aux298_BOOL,w_00007_00016_BOOL],aux1509_BOOL);
constraint array_bool_and([aux299_BOOL,w_00007_00018_BOOL],aux1510_BOOL);
constraint int_le_reif(s_00007, s_00017,aux1511_BOOL);
constraint int_lt_reif(s_00017,aux397,aux1512_BOOL);
constraint array_bool_and([w_00004_00007_BOOL,aux1511_BOOL,aux1512_BOOL],false);
constraint int_le_reif(s_00010, s_00017,aux1514_BOOL);
constraint int_lt_reif(s_00017,aux401,aux1515_BOOL);
constraint array_bool_and([w_00004_00010_BOOL,aux1514_BOOL,aux1515_BOOL],false);
constraint int_le_reif(s_00015, s_00017,aux1517_BOOL);
constraint int_lt_reif(s_00017,aux395,aux1518_BOOL);
constraint array_bool_and([w_00004_00015_BOOL,aux1517_BOOL,aux1518_BOOL],false);
constraint array_bool_and([aux266_BOOL,w_00004_00008_BOOL],aux1520_BOOL);
constraint array_bool_and([aux267_BOOL,w_00004_00020_BOOL],aux1521_BOOL);
constraint array_bool_and([aux295_BOOL,w_00004_00006_BOOL],aux1522_BOOL);
constraint array_bool_and([aux297_BOOL,w_00004_00013_BOOL],aux1523_BOOL);
constraint array_bool_and([aux298_BOOL,w_00004_00016_BOOL],aux1524_BOOL);
constraint array_bool_and([aux299_BOOL,w_00004_00018_BOOL],aux1525_BOOL);
constraint array_bool_and([aux23_BOOL,w_00001_00004_BOOL],false);
constraint array_bool_and([aux75_BOOL,w_00001_00005_BOOL],false);
constraint array_bool_and([aux204_BOOL,w_00001_00007_BOOL],false);
constraint array_bool_and([w_00006_00006_BOOL,aux158_BOOL],aux1529_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux164_BOOL],aux1530_BOOL);
constraint array_bool_and([w_00006_00018_BOOL,aux160_BOOL],aux1531_BOOL);
constraint array_bool_and([w_00006_00020_BOOL,aux166_BOOL],aux1532_BOOL);
constraint array_bool_and([aux140_BOOL,w_00002_00006_BOOL],aux1533_BOOL);
constraint array_bool_and([aux141_BOOL,w_00002_00018_BOOL],aux1534_BOOL);
constraint array_bool_and([aux143_BOOL,w_00002_00020_BOOL],aux1535_BOOL);
constraint array_bool_and([aux144_BOOL,w_00002_00012_BOOL],aux1536_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux38_BOOL],aux1537_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux40_BOOL],aux1538_BOOL);
constraint array_bool_and([w_00008_00004_BOOL,aux45_BOOL],aux1539_BOOL);
constraint array_bool_and([w_00008_00006_BOOL,aux93_BOOL],aux1540_BOOL);
constraint int_le_reif(s_00001, s_00003,aux1541_BOOL);
constraint int_lt_reif(s_00003,aux398,aux1542_BOOL);
constraint int_le_reif(s_00001, s_00007,aux1543_BOOL);
constraint int_lt_reif(s_00007,aux398,aux1544_BOOL);
constraint int_le_reif(s_00002, s_00003,aux1545_BOOL);
constraint int_lt_reif(s_00003,aux394,aux1546_BOOL);
constraint int_le_reif(s_00002, s_00006,aux1547_BOOL);
constraint int_lt_reif(s_00006,aux394,aux1548_BOOL);
constraint int_le_reif(s_00003, s_00001,aux1549_BOOL);
constraint int_lt_reif(s_00001,aux406,aux1550_BOOL);
constraint int_le_reif(s_00003, s_00002,aux1551_BOOL);
constraint int_lt_reif(s_00002,aux406,aux1552_BOOL);
constraint int_le_reif(s_00003, s_00006,aux1553_BOOL);
constraint int_lt_reif(s_00006,aux406,aux1554_BOOL);
constraint int_le_reif(s_00003, s_00009,aux1555_BOOL);
constraint int_lt_reif(s_00009,aux406,aux1556_BOOL);
constraint int_le_reif(s_00002, s_00010,aux1557_BOOL);
constraint int_lt_reif(s_00010,aux394,aux1558_BOOL);
constraint int_le_reif(s_00002, s_00011,aux1559_BOOL);
constraint int_lt_reif(s_00011,aux394,aux1560_BOOL);
constraint int_le_reif(s_00004, s_00006,aux1561_BOOL);
constraint int_lt_reif(s_00006,aux409,aux1562_BOOL);
constraint int_le_reif(s_00003, s_00011,aux1563_BOOL);
constraint int_lt_reif(s_00011,aux406,aux1564_BOOL);
constraint int_le_reif(s_00005, s_00006,aux1565_BOOL);
constraint int_lt_reif(s_00006,aux393,aux1566_BOOL);
constraint int_le_reif(s_00005, s_00007,aux1567_BOOL);
constraint int_lt_reif(s_00007,aux393,aux1568_BOOL);
constraint int_le_reif(s_00005, s_00009,aux1569_BOOL);
constraint int_lt_reif(s_00009,aux393,aux1570_BOOL);
constraint int_le_reif(s_00004, s_00010,aux1571_BOOL);
constraint int_lt_reif(s_00010,aux409,aux1572_BOOL);
constraint int_le_reif(s_00006, s_00003,aux1573_BOOL);
constraint int_lt_reif(s_00003,aux411,aux1574_BOOL);
constraint int_le_reif(s_00004, s_00015,aux1575_BOOL);
constraint int_lt_reif(s_00015,aux409,aux1576_BOOL);
constraint int_le_reif(s_00006, s_00005,aux1577_BOOL);
constraint int_lt_reif(s_00005,aux411,aux1578_BOOL);
constraint int_le_reif(s_00006, s_00008,aux1579_BOOL);
constraint int_lt_reif(s_00008,aux411,aux1580_BOOL);
constraint int_le_reif(s_00006, s_00009,aux1581_BOOL);
constraint int_lt_reif(s_00009,aux411,aux1582_BOOL);
constraint int_le_reif(s_00005, s_00010,aux1583_BOOL);
constraint int_lt_reif(s_00010,aux393,aux1584_BOOL);
constraint int_le_reif(s_00007, s_00001,aux1585_BOOL);
constraint int_lt_reif(s_00001,aux397,aux1586_BOOL);
constraint int_le_reif(s_00005, s_00014,aux1587_BOOL);
constraint int_lt_reif(s_00014,aux393,aux1588_BOOL);
constraint int_le_reif(s_00005, s_00015,aux1589_BOOL);
constraint int_lt_reif(s_00015,aux393,aux1590_BOOL);
constraint int_le_reif(s_00007, s_00005,aux1591_BOOL);
constraint int_lt_reif(s_00005,aux397,aux1592_BOOL);
constraint int_le_reif(s_00007, s_00009,aux1593_BOOL);
constraint int_lt_reif(s_00009,aux397,aux1594_BOOL);
constraint int_le_reif(s_00006, s_00011,aux1595_BOOL);
constraint int_lt_reif(s_00011,aux411,aux1596_BOOL);
constraint int_le_reif(s_00006, s_00012,aux1597_BOOL);
constraint int_lt_reif(s_00012,aux411,aux1598_BOOL);
constraint int_le_reif(s_00006, s_00013,aux1599_BOOL);
constraint int_lt_reif(s_00013,aux411,aux1600_BOOL);
constraint int_le_reif(s_00006, s_00014,aux1601_BOOL);
constraint int_lt_reif(s_00014,aux411,aux1602_BOOL);
constraint int_le_reif(s_00008, s_00006,aux1603_BOOL);
constraint int_lt_reif(s_00006,aux403,aux1604_BOOL);
constraint int_le_reif(s_00006, s_00016,aux1605_BOOL);
constraint int_lt_reif(s_00016,aux411,aux1606_BOOL);
constraint int_le_reif(s_00006, s_00017,aux1607_BOOL);
constraint int_lt_reif(s_00017,aux411,aux1608_BOOL);
constraint int_le_reif(s_00008, s_00009,aux1609_BOOL);
constraint int_lt_reif(s_00009,aux403,aux1610_BOOL);
constraint int_le_reif(s_00006, s_00019,aux1611_BOOL);
constraint int_lt_reif(s_00019,aux411,aux1612_BOOL);
constraint int_le_reif(s_00007, s_00010,aux1613_BOOL);
constraint int_lt_reif(s_00010,aux397,aux1614_BOOL);
constraint int_le_reif(s_00007, s_00011,aux1615_BOOL);
constraint int_lt_reif(s_00011,aux397,aux1616_BOOL);
constraint int_le_reif(s_00009, s_00003,aux1617_BOOL);
constraint int_lt_reif(s_00003,aux404,aux1618_BOOL);
constraint int_le_reif(s_00009, s_00005,aux1619_BOOL);
constraint int_lt_reif(s_00005,aux404,aux1620_BOOL);
constraint int_le_reif(s_00007, s_00015,aux1621_BOOL);
constraint int_lt_reif(s_00015,aux397,aux1622_BOOL);
constraint int_le_reif(s_00009, s_00006,aux1623_BOOL);
constraint int_lt_reif(s_00006,aux404,aux1624_BOOL);
constraint int_le_reif(s_00007, s_00016,aux1625_BOOL);
constraint int_lt_reif(s_00016,aux397,aux1626_BOOL);
constraint int_le_reif(s_00009, s_00007,aux1627_BOOL);
constraint int_lt_reif(s_00007,aux404,aux1628_BOOL);
constraint int_le_reif(s_00009, s_00008,aux1629_BOOL);
constraint int_lt_reif(s_00008,aux404,aux1630_BOOL);
constraint int_le_reif(s_00008, s_00010,aux1631_BOOL);
constraint int_lt_reif(s_00010,aux403,aux1632_BOOL);
constraint int_le_reif(s_00008, s_00012,aux1633_BOOL);
constraint int_lt_reif(s_00012,aux403,aux1634_BOOL);
constraint int_le_reif(s_00008, s_00015,aux1635_BOOL);
constraint int_lt_reif(s_00015,aux403,aux1636_BOOL);
constraint int_le_reif(s_00008, s_00017,aux1637_BOOL);
constraint int_lt_reif(s_00017,aux403,aux1638_BOOL);
constraint int_le_reif(s_00010, s_00002,aux1639_BOOL);
constraint int_lt_reif(s_00002,aux401,aux1640_BOOL);
constraint int_le_reif(s_00010, s_00004,aux1641_BOOL);
constraint int_lt_reif(s_00004,aux401,aux1642_BOOL);
constraint int_le_reif(s_00010, s_00005,aux1643_BOOL);
constraint int_lt_reif(s_00005,aux401,aux1644_BOOL);
constraint int_le_reif(s_00010, s_00007,aux1645_BOOL);
constraint int_lt_reif(s_00007,aux401,aux1646_BOOL);
constraint int_le_reif(s_00010, s_00008,aux1647_BOOL);
constraint int_lt_reif(s_00008,aux401,aux1648_BOOL);
constraint int_le_reif(s_00011, s_00002,aux1649_BOOL);
constraint int_lt_reif(s_00002,aux407,aux1650_BOOL);
constraint int_le_reif(s_00011, s_00003,aux1651_BOOL);
constraint int_lt_reif(s_00003,aux407,aux1652_BOOL);
constraint int_le_reif(s_00011, s_00006,aux1653_BOOL);
constraint int_lt_reif(s_00006,aux407,aux1654_BOOL);
constraint int_le_reif(s_00011, s_00007,aux1655_BOOL);
constraint int_lt_reif(s_00007,aux407,aux1656_BOOL);
constraint int_le_reif(s_00010, s_00013,aux1657_BOOL);
constraint int_lt_reif(s_00013,aux401,aux1658_BOOL);
constraint int_le_reif(s_00012, s_00006,aux1659_BOOL);
constraint int_lt_reif(s_00006,aux399,aux1660_BOOL);
constraint int_le_reif(s_00012, s_00008,aux1661_BOOL);
constraint int_lt_reif(s_00008,aux399,aux1662_BOOL);
constraint int_le_reif(s_00013, s_00006,aux1663_BOOL);
constraint int_lt_reif(s_00006,aux408,aux1664_BOOL);
constraint int_le_reif(s_00012, s_00013,aux1665_BOOL);
constraint int_lt_reif(s_00013,aux399,aux1666_BOOL);
constraint int_le_reif(s_00012, s_00014,aux1667_BOOL);
constraint int_lt_reif(s_00014,aux399,aux1668_BOOL);
constraint int_le_reif(s_00014, s_00005,aux1669_BOOL);
constraint int_lt_reif(s_00005,aux400,aux1670_BOOL);
constraint int_le_reif(s_00014, s_00006,aux1671_BOOL);
constraint int_lt_reif(s_00006,aux400,aux1672_BOOL);
constraint int_le_reif(s_00012, s_00016,aux1673_BOOL);
constraint int_lt_reif(s_00016,aux399,aux1674_BOOL);
constraint int_le_reif(s_00012, s_00018,aux1675_BOOL);
constraint int_lt_reif(s_00018,aux399,aux1676_BOOL);
constraint int_le_reif(s_00013, s_00010,aux1677_BOOL);
constraint int_lt_reif(s_00010,aux408,aux1678_BOOL);
constraint int_le_reif(s_00013, s_00012,aux1679_BOOL);
constraint int_lt_reif(s_00012,aux408,aux1680_BOOL);
constraint int_le_reif(s_00013, s_00014,aux1681_BOOL);
constraint int_lt_reif(s_00014,aux408,aux1682_BOOL);
constraint int_le_reif(s_00015, s_00004,aux1683_BOOL);
constraint int_lt_reif(s_00004,aux395,aux1684_BOOL);
constraint int_le_reif(s_00013, s_00015,aux1685_BOOL);
constraint int_lt_reif(s_00015,aux408,aux1686_BOOL);
constraint int_le_reif(s_00015, s_00005,aux1687_BOOL);
constraint int_lt_reif(s_00005,aux395,aux1688_BOOL);
constraint int_le_reif(s_00013, s_00017,aux1689_BOOL);
constraint int_lt_reif(s_00017,aux408,aux1690_BOOL);
constraint int_le_reif(s_00015, s_00007,aux1691_BOOL);
constraint int_lt_reif(s_00007,aux395,aux1692_BOOL);
constraint int_le_reif(s_00015, s_00008,aux1693_BOOL);
constraint int_lt_reif(s_00008,aux395,aux1694_BOOL);
constraint int_le_reif(s_00013, s_00019,aux1695_BOOL);
constraint int_lt_reif(s_00019,aux408,aux1696_BOOL);
constraint int_le_reif(s_00012, s_00020,aux1697_BOOL);
constraint int_lt_reif(s_00020,aux399,aux1698_BOOL);
constraint int_le_reif(s_00014, s_00012,aux1699_BOOL);
constraint int_lt_reif(s_00012,aux400,aux1700_BOOL);
constraint int_le_reif(s_00014, s_00013,aux1701_BOOL);
constraint int_lt_reif(s_00013,aux400,aux1702_BOOL);
constraint int_le_reif(s_00016, s_00006,aux1703_BOOL);
constraint int_lt_reif(s_00006,aux410,aux1704_BOOL);
constraint int_le_reif(s_00016, s_00007,aux1705_BOOL);
constraint int_lt_reif(s_00007,aux410,aux1706_BOOL);
constraint int_le_reif(s_00013, s_00020,aux1707_BOOL);
constraint int_lt_reif(s_00020,aux408,aux1708_BOOL);
constraint int_le_reif(s_00015, s_00013,aux1709_BOOL);
constraint int_lt_reif(s_00013,aux395,aux1710_BOOL);
constraint int_le_reif(s_00017, s_00006,aux1711_BOOL);
constraint int_lt_reif(s_00006,aux396,aux1712_BOOL);
constraint int_le_reif(s_00017, s_00008,aux1713_BOOL);
constraint int_lt_reif(s_00008,aux396,aux1714_BOOL);
constraint int_le_reif(s_00016, s_00012,aux1715_BOOL);
constraint int_lt_reif(s_00012,aux410,aux1716_BOOL);
constraint int_le_reif(s_00016, s_00017,aux1717_BOOL);
constraint int_lt_reif(s_00017,aux410,aux1718_BOOL);
constraint int_le_reif(s_00016, s_00018,aux1719_BOOL);
constraint int_lt_reif(s_00018,aux410,aux1720_BOOL);
constraint int_le_reif(s_00017, s_00013,aux1721_BOOL);
constraint int_lt_reif(s_00013,aux396,aux1722_BOOL);
constraint int_le_reif(s_00019, s_00006,aux1723_BOOL);
constraint int_lt_reif(s_00006,aux392,aux1724_BOOL);
constraint int_le_reif(s_00017, s_00016,aux1725_BOOL);
constraint int_lt_reif(s_00016,aux396,aux1726_BOOL);
constraint int_le_reif(s_00017, s_00018,aux1727_BOOL);
constraint int_lt_reif(s_00018,aux396,aux1728_BOOL);
constraint int_le_reif(s_00016, s_00020,aux1729_BOOL);
constraint int_lt_reif(s_00020,aux410,aux1730_BOOL);
constraint int_le_reif(s_00018, s_00012,aux1731_BOOL);
constraint int_lt_reif(s_00012,aux405,aux1732_BOOL);
constraint int_le_reif(s_00018, s_00016,aux1733_BOOL);
constraint int_lt_reif(s_00016,aux405,aux1734_BOOL);
constraint int_le_reif(s_00018, s_00017,aux1735_BOOL);
constraint int_lt_reif(s_00017,aux405,aux1736_BOOL);
constraint int_le_reif(s_00018, s_00019,aux1737_BOOL);
constraint int_lt_reif(s_00019,aux405,aux1738_BOOL);
constraint int_le_reif(s_00017, s_00020,aux1739_BOOL);
constraint int_lt_reif(s_00020,aux396,aux1740_BOOL);
constraint int_le_reif(s_00019, s_00013,aux1741_BOOL);
constraint int_lt_reif(s_00013,aux392,aux1742_BOOL);
constraint int_le_reif(s_00019, s_00018,aux1743_BOOL);
constraint int_lt_reif(s_00018,aux392,aux1744_BOOL);
constraint int_le_reif(s_00018, s_00020,aux1745_BOOL);
constraint int_lt_reif(s_00020,aux405,aux1746_BOOL);
constraint int_le_reif(s_00019, s_00020,aux1747_BOOL);
constraint int_lt_reif(s_00020,aux392,aux1748_BOOL);
constraint int_le_reif(s_00020, s_00012,aux1749_BOOL);
constraint int_lt_reif(s_00012,aux402,aux1750_BOOL);
constraint int_le_reif(s_00020, s_00013,aux1751_BOOL);
constraint int_lt_reif(s_00013,aux402,aux1752_BOOL);
constraint int_le_reif(s_00020, s_00016,aux1753_BOOL);
constraint int_lt_reif(s_00016,aux402,aux1754_BOOL);
constraint int_le_reif(s_00020, s_00017,aux1755_BOOL);
constraint int_lt_reif(s_00017,aux402,aux1756_BOOL);
constraint int_le_reif(s_00020, s_00018,aux1757_BOOL);
constraint int_lt_reif(s_00018,aux402,aux1758_BOOL);
constraint int_le_reif(s_00020, s_00019,aux1759_BOOL);
constraint int_lt_reif(s_00019,aux402,aux1760_BOOL);
constraint array_bool_and([aux200_BOOL,w_00004_00008_BOOL],aux1761_BOOL);
constraint array_bool_and([aux201_BOOL,w_00004_00005_BOOL],aux1762_BOOL);
constraint array_bool_and([aux280_BOOL,w_00004_00006_BOOL],aux1763_BOOL);
constraint array_bool_and([aux325_BOOL,w_00004_00007_BOOL],aux1764_BOOL);
constraint array_bool_and([aux70_BOOL,w_00004_00004_BOOL],aux1765_BOOL);
constraint array_bool_and([aux197_BOOL,w_00007_00009_BOOL],aux1766_BOOL);
constraint array_bool_and([aux258_BOOL,w_00007_00014_BOOL],aux1767_BOOL);
constraint array_bool_and([aux272_BOOL,w_00007_00006_BOOL],aux1768_BOOL);
constraint array_bool_and([w_00007_00001_BOOL,aux77_BOOL],aux1769_BOOL);
constraint array_bool_and([w_00007_00008_BOOL,aux18_BOOL],aux1770_BOOL);
constraint array_bool_and([w_00007_00011_BOOL,aux51_BOOL],aux1771_BOOL);
constraint array_bool_and([w_00007_00016_BOOL,aux79_BOOL],aux1772_BOOL);
constraint array_bool_and([w_00007_00020_BOOL,aux73_BOOL],aux1773_BOOL);
constraint array_bool_and([aux196_BOOL,w_00004_00011_BOOL],aux1774_BOOL);
constraint array_bool_and([aux321_BOOL,w_00004_00010_BOOL],aux1775_BOOL);
constraint array_bool_and([aux45_BOOL,w_00004_00004_BOOL],aux1776_BOOL);
constraint array_bool_and([aux93_BOOL,w_00004_00006_BOOL],aux1777_BOOL);
constraint array_bool_and([aux153_BOOL,w_00008_00016_BOOL],aux1778_BOOL);
constraint array_bool_and([aux154_BOOL,w_00008_00020_BOOL],aux1779_BOOL);
constraint array_bool_and([aux155_BOOL,w_00008_00012_BOOL],aux1780_BOOL);
constraint array_bool_and([aux156_BOOL,w_00008_00019_BOOL],aux1781_BOOL);
constraint array_bool_and([aux190_BOOL,w_00009_00002_BOOL],aux1782_BOOL);
constraint array_bool_and([aux310_BOOL,w_00009_00009_BOOL],aux1783_BOOL);
constraint array_bool_and([aux311_BOOL,w_00009_00011_BOOL],aux1784_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux187_BOOL],aux1785_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux196_BOOL],aux1786_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux45_BOOL],aux1787_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux93_BOOL],aux1788_BOOL);
constraint array_bool_and([aux158_BOOL,w_00007_00006_BOOL],aux1789_BOOL);
constraint array_bool_and([aux160_BOOL,w_00007_00018_BOOL],aux1790_BOOL);
constraint array_bool_and([aux164_BOOL,w_00007_00013_BOOL],aux1791_BOOL);
constraint array_bool_and([aux166_BOOL,w_00007_00020_BOOL],aux1792_BOOL);
constraint array_bool_and([aux214_BOOL,w_00001_00005_BOOL],aux1793_BOOL);
constraint array_bool_and([aux215_BOOL,w_00001_00015_BOOL],aux1794_BOOL);
constraint array_bool_and([aux217_BOOL,w_00001_00011_BOOL],aux1795_BOOL);
constraint array_bool_and([aux219_BOOL,w_00001_00016_BOOL],aux1796_BOOL);
constraint array_bool_and([aux220_BOOL,w_00001_00010_BOOL],aux1797_BOOL);
constraint array_bool_and([aux127_BOOL,w_00007_00006_BOOL],aux1798_BOOL);
constraint array_bool_and([aux129_BOOL,w_00007_00014_BOOL],aux1799_BOOL);
constraint array_bool_and([aux130_BOOL,w_00007_00020_BOOL],aux1800_BOOL);
constraint array_bool_and([aux131_BOOL,w_00007_00012_BOOL],aux1801_BOOL);
constraint array_bool_and([aux132_BOOL,w_00007_00019_BOOL],aux1802_BOOL);
constraint array_bool_and([aux292_BOOL,w_00007_00017_BOOL],aux1803_BOOL);
constraint array_bool_and([w_00007_00011_BOOL,aux84_BOOL],aux1804_BOOL);
constraint array_bool_and([w_00007_00016_BOOL,aux36_BOOL],aux1805_BOOL);
constraint array_bool_and([aux153_BOOL,w_00007_00016_BOOL],aux1806_BOOL);
constraint array_bool_and([aux154_BOOL,w_00007_00020_BOOL],aux1807_BOOL);
constraint array_bool_and([aux155_BOOL,w_00007_00012_BOOL],aux1808_BOOL);
constraint array_bool_and([aux156_BOOL,w_00007_00019_BOOL],aux1809_BOOL);
constraint array_bool_and([aux304_BOOL,w_00007_00017_BOOL],aux1810_BOOL);
constraint array_bool_and([aux270_BOOL,w_00009_00017_BOOL],aux1811_BOOL);
constraint array_bool_and([aux21_BOOL,w_00009_00008_BOOL],aux1812_BOOL);
constraint array_bool_and([aux74_BOOL,w_00009_00005_BOOL],aux1813_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux173_BOOL],aux1814_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux171_BOOL],aux1815_BOOL);
constraint array_bool_and([w_00006_00016_BOOL,aux172_BOOL],aux1816_BOOL);
constraint array_bool_and([w_00006_00018_BOOL,aux169_BOOL],aux1817_BOOL);
constraint array_bool_and([w_00006_00019_BOOL,aux174_BOOL],aux1818_BOOL);
constraint array_bool_and([w_00006_00017_BOOL,aux270_BOOL],aux1819_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux21_BOOL],aux1820_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux74_BOOL],aux1821_BOOL);
constraint int_lt(s_00012,aux399);
constraint int_lt(s_00005,aux393);
constraint int_lt(s_00009,aux404);
constraint int_lt(s_00008,aux403);
constraint int_lt(s_00016,aux410);
constraint int_lt(s_00007,aux397);
constraint int_lt(s_00003,aux406);
constraint int_lt(s_00015,aux395);
constraint int_lt(s_00017,aux396);
constraint int_lt(s_00010,aux401);
constraint int_lt(s_00001,aux398);
constraint int_lt(s_00004,aux409);
constraint int_lt(s_00018,aux405);
constraint int_lt(s_00011,aux407);
constraint int_lt(s_00020,aux402);
constraint int_lt(s_00002,aux394);
constraint int_lt(s_00006,aux411);
constraint int_lt(s_00014,aux400);
constraint int_lt(s_00013,aux408);
constraint int_lt(s_00019,aux392);
constraint int_lin_eq([-1,1,1],[aux403,2,s_00008],0);
constraint int_lin_eq([-1,1,1],[aux409,2,s_00004],0);
constraint int_lin_eq([-1,1,1],[aux394,4,s_00002],0);
constraint int_lin_eq([-1,1,1],[aux398,4,s_00001],0);
constraint int_lin_eq([-1,1,1],[aux393,3,s_00005],0);
constraint int_lin_eq([-1,1,1],[aux408,3,s_00013],0);
constraint int_lin_eq([-1,1,1],[aux410,3,s_00016],0);
constraint int_lin_eq([-1,1,1],[aux402,2,s_00020],0);
constraint int_lin_eq([-1,1,1],[aux400,2,s_00014],0);
constraint int_lin_eq([-1,1,1],[aux407,3,s_00011],0);
constraint int_lin_eq([-1,1,1],[aux411,2,s_00006],0);
constraint int_lin_eq([-1,1,1],[aux404,2,s_00009],0);
constraint int_lin_eq([-1,1,1],[aux405,1,s_00018],0);
constraint int_lin_eq([-1,1,1],[aux399,4,s_00012],0);
constraint int_lin_eq([-1,1,1],[aux392,4,s_00019],0);
constraint int_lin_eq([-1,1,1],[aux395,1,s_00015],0);
constraint int_lin_eq([-1,1,1],[aux397,3,s_00007],0);
constraint int_lin_eq([-1,1,1],[aux396,4,s_00017],0);
constraint int_lin_eq([-1,1,1],[aux401,5,s_00010],0);
constraint int_lin_eq([-1,1,1],[aux406,3,s_00003],0);
constraint int_lin_eq([1,-1,1],[w_00006_00002_INTEGER,aux365,w_00007_00002_INTEGER],0);
constraint int_lin_eq([1,-1,1,1],[w_00006_00004_INTEGER,aux366,w_00007_00004_INTEGER,w_00004_00004_INTEGER],0);
constraint int_lin_eq([1,-1,1],[w_00006_00008_INTEGER,aux367,w_00007_00008_INTEGER],0);
constraint int_lin_eq([1,-1,1,1],[w_00006_00014_INTEGER,aux368,w_00007_00014_INTEGER,w_00004_00014_INTEGER],0);
constraint int_lin_eq([1,-1,1],[w_00006_00020_INTEGER,aux369,w_00007_00020_INTEGER],0);
constraint int_lin_eq([-1,1,1],[aux370,1,aux42_INTEGER],0);
constraint int_lin_eq([-1,1,1],[aux371,aux38_INTEGER,aux40_INTEGER],0);
constraint int_lin_le([1,1,1,1,1,1,-1],[aux412_INTEGER,aux413_INTEGER,aux414_INTEGER,aux415_INTEGER,aux416_INTEGER,w_00009_00011_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,-1],[aux417_INTEGER,aux418_INTEGER,aux419_INTEGER,aux420_INTEGER,aux421_INTEGER,aux422_INTEGER,aux423_INTEGER,w_00004_00011_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,-1],[aux424_INTEGER,aux425_INTEGER,aux426_INTEGER,aux427_INTEGER,w_00009_00009_INTEGER,1],0);
constraint int_le(aux403, s_00013);
constraint int_le(aux409, s_00005);
constraint int_le(aux409, s_00007);
constraint int_le(aux403, s_00019);
constraint int_le(aux394, s_00005);
constraint int_le(aux409, s_00016);
constraint int_le(aux394, s_00007);
constraint int_le(aux394, s_00014);
constraint int_le(aux398, s_00006);
constraint int_le(aux398, s_00008);
constraint int_le(aux398, s_00009);
constraint int_le(aux393, s_00012);
constraint int_le(aux393, s_00013);
constraint int_le(aux408, s_00018);
constraint int_le(aux410, s_00019);
constraint int_le(aux400, s_00015);
constraint int_le(aux400, s_00018);
constraint int_le(aux407, s_00012);
constraint int_le(aux407, s_00014);
constraint int_le(aux411, s_00018);
constraint int_le(aux411, s_00020);
constraint int_le(aux404, s_00010);
constraint int_le(aux404, s_00013);
constraint int_le(aux399, s_00017);
constraint int_le(aux395, s_00016);
constraint int_le(aux395, s_00017);
constraint int_le(aux397, s_00008);
constraint int_le(aux395, s_00020);
constraint int_le(aux397, s_00017);
constraint int_le(aux397, s_00020);
constraint int_le(aux396, s_00019);
constraint int_le(aux401, s_00011);
constraint int_le(aux406, s_00004);
constraint int_le(aux406, s_00014);
constraint int_lin_le([1,1,1,1,1,1,1,1,-1],[aux431_INTEGER,aux432_INTEGER,aux433_INTEGER,aux434_INTEGER,aux435_INTEGER,aux436_INTEGER,aux437_INTEGER,w_00007_00012_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,-1],[aux438_INTEGER,aux439_INTEGER,aux440_INTEGER,aux441_INTEGER,aux442_INTEGER,w_00002_00014_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,-1],[w_00006_00014_INTEGER,aux443_INTEGER,aux444_INTEGER,aux445_INTEGER,aux446_INTEGER,aux447_INTEGER,aux448_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[aux449_INTEGER,w_00003_00002_INTEGER,1],0);
constraint int_lin_le([1,1,-1],[aux450_INTEGER,w_00003_00003_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,-1],[aux451_INTEGER,aux452_INTEGER,aux453_INTEGER,aux454_INTEGER,aux455_INTEGER,w_00005_00008_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,2,-1],[aux127_INTEGER,aux129_INTEGER,aux130_INTEGER,aux131_INTEGER,aux132_INTEGER,aux36_INTEGER,4],0);
constraint int_lin_le([1,1,-1],[aux456_INTEGER,w_00008_00001_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,-1],[w_00006_00001_INTEGER,aux457_INTEGER,aux458_INTEGER,aux459_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,-1,1],[aux365,w_00002_00002_INTEGER,w_00008_00002_INTEGER,w_00004_00002_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,-1,1],[aux367,w_00002_00008_INTEGER,w_00008_00008_INTEGER,w_00004_00008_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,-1,1],[aux369,w_00002_00020_INTEGER,w_00008_00020_INTEGER,w_00004_00020_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,-1,1],[w_00006_00003_INTEGER,w_00007_00003_INTEGER,w_00003_00003_INTEGER,w_00009_00003_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,1],[w_00006_00005_INTEGER,w_00007_00005_INTEGER,w_00003_00005_INTEGER,w_00009_00005_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,-1],[aux328_INTEGER,aux460_INTEGER,aux461_INTEGER,aux462_INTEGER,aux463_INTEGER,aux464_INTEGER,w_00001_00010_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,1,-1],[aux465_INTEGER,aux466_INTEGER,aux467_INTEGER,aux468_INTEGER,aux469_INTEGER,aux470_INTEGER,aux471_INTEGER,aux472_INTEGER,w_00004_00004_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,-1],[aux473_INTEGER,aux474_INTEGER,aux475_INTEGER,aux476_INTEGER,w_00008_00004_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,-1],[aux209_INTEGER,aux210_INTEGER,aux211_INTEGER,aux18_INTEGER,aux51_INTEGER,aux77_INTEGER,aux79_INTEGER,1],0);
constraint int_lin_le([1,2,2,-1],[aux370,aux41_INTEGER,aux69_INTEGER,4],0);
constraint int_lin_le([1,1,1,1,1,1,1,-1],[aux477_INTEGER,aux478_INTEGER,aux479_INTEGER,aux480_INTEGER,aux481_INTEGER,aux482_INTEGER,w_00008_00016_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,-1],[aux483_INTEGER,aux484_INTEGER,aux485_INTEGER,aux486_INTEGER,aux487_INTEGER,w_00001_00015_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,1,1,1,-1],[aux490_INTEGER,aux493_INTEGER,aux496_INTEGER,aux509_INTEGER,aux510_INTEGER,aux511_INTEGER,aux512_INTEGER,aux513_INTEGER,aux514_INTEGER,aux515_INTEGER,w_00004_00007_INTEGER,1],0);
constraint int_lin_le([1,1,2,1,1,-1],[aux224_INTEGER,aux225_INTEGER,aux226_INTEGER,aux228_INTEGER,aux231_INTEGER,2],0);
constraint int_lin_le([1,1,1,1,1,1,-1],[aux516_INTEGER,aux517_INTEGER,aux518_INTEGER,aux519_INTEGER,aux520_INTEGER,w_00005_00011_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,1,-1],[aux523_INTEGER,aux526_INTEGER,aux535_INTEGER,aux542_INTEGER,aux543_INTEGER,aux544_INTEGER,aux545_INTEGER,aux546_INTEGER,w_00004_00015_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,-1],[aux547_INTEGER,aux548_INTEGER,aux549_INTEGER,aux550_INTEGER,aux551_INTEGER,aux552_INTEGER,aux553_INTEGER,w_00007_00011_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,-1],[aux554_INTEGER,aux555_INTEGER,aux556_INTEGER,aux557_INTEGER,w_00007_00002_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,1,-1],[w_00006_00016_INTEGER,aux558_INTEGER,aux559_INTEGER,aux560_INTEGER,aux561_INTEGER,aux562_INTEGER,aux563_INTEGER,aux564_INTEGER,aux565_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,-1],[aux566_INTEGER,aux567_INTEGER,aux568_INTEGER,aux27_INTEGER,aux46_INTEGER,aux69_INTEGER,w_00001_00004_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,-1],[aux569_INTEGER,aux570_INTEGER,aux571_INTEGER,aux572_INTEGER,w_00005_00016_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,1,-1],[aux197_INTEGER,aux573_INTEGER,aux574_INTEGER,aux575_INTEGER,aux576_INTEGER,aux577_INTEGER,aux578_INTEGER,aux77_INTEGER,w_00001_00005_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,1,1,-1],[aux579_INTEGER,aux580_INTEGER,aux581_INTEGER,aux582_INTEGER,aux583_INTEGER,aux584_INTEGER,aux585_INTEGER,aux586_INTEGER,aux587_INTEGER,w_00007_00008_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,1,1,-1],[aux590_INTEGER,aux596_INTEGER,aux597_INTEGER,aux598_INTEGER,aux599_INTEGER,aux600_INTEGER,aux601_INTEGER,aux602_INTEGER,aux603_INTEGER,w_00004_00012_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,-1],[aux202_INTEGER,aux604_INTEGER,aux605_INTEGER,aux606_INTEGER,aux607_INTEGER,aux608_INTEGER,w_00001_00011_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,-1],[aux609_INTEGER,aux610_INTEGER,aux611_INTEGER,aux612_INTEGER,w_00002_00018_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux615_INTEGER,aux618_INTEGER,aux621_INTEGER,aux622_INTEGER,aux623_INTEGER,aux624_INTEGER,aux625_INTEGER,aux626_INTEGER,aux627_INTEGER,aux628_INTEGER,aux629_INTEGER,aux630_INTEGER,aux631_INTEGER,aux632_INTEGER,aux633_INTEGER,w_00004_00006_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,2,1,1,-1],[aux101_INTEGER,aux102_INTEGER,aux105_INTEGER,aux106_INTEGER,aux107_INTEGER,aux108_INTEGER,aux110_INTEGER,aux111_INTEGER,4],0);
constraint array_bool_and([aux634_BOOL,aux635_BOOL],false);
constraint array_bool_and([aux636_BOOL,aux637_BOOL],false);
constraint array_bool_and([aux638_BOOL,aux639_BOOL],false);
constraint array_bool_and([aux640_BOOL,aux641_BOOL],false);
constraint array_bool_and([aux642_BOOL,aux643_BOOL],false);
constraint array_bool_and([aux644_BOOL,aux645_BOOL],false);
constraint array_bool_and([aux646_BOOL,aux647_BOOL],false);
constraint array_bool_and([aux648_BOOL,aux649_BOOL],false);
constraint array_bool_and([aux650_BOOL,aux651_BOOL],false);
constraint array_bool_and([aux652_BOOL,aux653_BOOL],false);
constraint array_bool_and([aux654_BOOL,aux655_BOOL],false);
constraint array_bool_and([aux656_BOOL,aux657_BOOL],false);
constraint array_bool_and([aux658_BOOL,aux659_BOOL],false);
constraint array_bool_and([aux660_BOOL,aux661_BOOL],false);
constraint array_bool_and([aux662_BOOL,aux663_BOOL],false);
constraint array_bool_and([aux664_BOOL,aux665_BOOL],false);
constraint array_bool_and([aux666_BOOL,aux667_BOOL],false);
constraint array_bool_and([aux668_BOOL,aux669_BOOL],false);
constraint array_bool_and([aux670_BOOL,aux671_BOOL],false);
constraint array_bool_and([aux672_BOOL,aux673_BOOL],false);
constraint array_bool_and([aux674_BOOL,aux675_BOOL],false);
constraint array_bool_and([aux676_BOOL,aux677_BOOL],false);
constraint array_bool_and([aux678_BOOL,aux679_BOOL],false);
constraint array_bool_and([aux680_BOOL,aux681_BOOL],false);
constraint array_bool_and([aux682_BOOL,aux683_BOOL],false);
constraint array_bool_and([aux684_BOOL,aux685_BOOL],false);
constraint array_bool_and([aux686_BOOL,aux687_BOOL],false);
constraint array_bool_and([aux688_BOOL,aux689_BOOL],false);
constraint array_bool_and([aux690_BOOL,aux691_BOOL],false);
constraint array_bool_and([aux692_BOOL,aux693_BOOL],false);
constraint array_bool_and([aux694_BOOL,aux695_BOOL],false);
constraint array_bool_and([aux696_BOOL,aux697_BOOL],false);
constraint array_bool_and([aux698_BOOL,aux699_BOOL],false);
constraint array_bool_and([aux700_BOOL,aux701_BOOL],false);
constraint array_bool_and([aux702_BOOL,aux703_BOOL],false);
constraint array_bool_and([aux704_BOOL,aux705_BOOL],false);
constraint array_bool_and([aux706_BOOL,aux707_BOOL],false);
constraint array_bool_and([aux708_BOOL,aux709_BOOL],false);
constraint array_bool_and([aux710_BOOL,aux711_BOOL],false);
constraint array_bool_and([aux712_BOOL,aux713_BOOL],false);
constraint array_bool_and([aux714_BOOL,aux715_BOOL],false);
constraint array_bool_and([aux716_BOOL,aux717_BOOL],false);
constraint array_bool_and([aux718_BOOL,aux719_BOOL],false);
constraint array_bool_and([aux720_BOOL,aux721_BOOL],false);
constraint array_bool_and([aux722_BOOL,aux723_BOOL],false);
constraint array_bool_and([aux724_BOOL,aux725_BOOL],false);
constraint array_bool_and([aux726_BOOL,aux727_BOOL],false);
constraint array_bool_and([aux728_BOOL,aux729_BOOL],false);
constraint array_bool_and([aux730_BOOL,aux731_BOOL],false);
constraint array_bool_and([aux732_BOOL,aux733_BOOL],false);
constraint array_bool_and([aux734_BOOL,aux735_BOOL],false);
constraint array_bool_and([aux736_BOOL,aux737_BOOL],false);
constraint array_bool_and([aux738_BOOL,aux739_BOOL],false);
constraint array_bool_and([aux740_BOOL,aux741_BOOL],false);
constraint array_bool_and([aux742_BOOL,aux743_BOOL],false);
constraint array_bool_and([aux744_BOOL,aux745_BOOL],false);
constraint array_bool_and([aux746_BOOL,aux747_BOOL],false);
constraint array_bool_and([aux748_BOOL,aux749_BOOL],false);
constraint array_bool_and([aux750_BOOL,aux751_BOOL],false);
constraint array_bool_and([aux752_BOOL,aux753_BOOL],false);
constraint array_bool_and([aux754_BOOL,aux755_BOOL],false);
constraint array_bool_and([aux756_BOOL,aux757_BOOL],false);
constraint array_bool_and([aux758_BOOL,aux759_BOOL],false);
constraint array_bool_and([aux760_BOOL,aux761_BOOL],false);
constraint array_bool_and([aux762_BOOL,aux763_BOOL],false);
constraint array_bool_and([aux764_BOOL,aux765_BOOL],false);
constraint array_bool_and([aux766_BOOL,aux767_BOOL],false);
constraint array_bool_and([aux768_BOOL,aux769_BOOL],false);
constraint array_bool_and([aux770_BOOL,aux771_BOOL],false);
constraint array_bool_and([aux772_BOOL,aux773_BOOL],false);
constraint array_bool_and([aux774_BOOL,aux775_BOOL],false);
constraint array_bool_and([aux776_BOOL,aux777_BOOL],false);
constraint array_bool_and([aux778_BOOL,aux779_BOOL],false);
constraint array_bool_and([aux780_BOOL,aux781_BOOL],false);
constraint array_bool_and([aux782_BOOL,aux783_BOOL],false);
constraint array_bool_and([aux784_BOOL,aux785_BOOL],false);
constraint array_bool_and([aux786_BOOL,aux787_BOOL],false);
constraint array_bool_and([aux788_BOOL,aux789_BOOL],false);
constraint array_bool_and([aux790_BOOL,aux791_BOOL],false);
constraint array_bool_and([aux792_BOOL,aux793_BOOL],false);
constraint array_bool_and([aux794_BOOL,aux795_BOOL],false);
constraint array_bool_and([aux796_BOOL,aux797_BOOL],false);
constraint array_bool_and([aux798_BOOL,aux799_BOOL],false);
constraint array_bool_and([aux800_BOOL,aux801_BOOL],false);
constraint array_bool_and([aux802_BOOL,aux803_BOOL],false);
constraint array_bool_and([aux804_BOOL,aux805_BOOL],false);
constraint array_bool_and([aux806_BOOL,aux807_BOOL],false);
constraint array_bool_and([aux808_BOOL,aux809_BOOL],false);
constraint array_bool_and([aux810_BOOL,aux811_BOOL],false);
constraint array_bool_and([aux812_BOOL,aux813_BOOL],false);
constraint array_bool_and([aux814_BOOL,aux815_BOOL],false);
constraint array_bool_and([aux816_BOOL,aux817_BOOL],false);
constraint array_bool_and([aux818_BOOL,aux819_BOOL],false);
constraint array_bool_and([aux820_BOOL,aux821_BOOL],false);
constraint array_bool_and([aux822_BOOL,aux823_BOOL],false);
constraint array_bool_and([aux824_BOOL,aux825_BOOL],false);
constraint array_bool_and([aux826_BOOL,aux827_BOOL],false);
constraint array_bool_and([aux828_BOOL,aux829_BOOL],false);
constraint array_bool_and([aux830_BOOL,aux831_BOOL],false);
constraint array_bool_and([aux832_BOOL,aux833_BOOL],false);
constraint array_bool_and([aux834_BOOL,aux835_BOOL],false);
constraint array_bool_and([aux836_BOOL,aux837_BOOL],false);
constraint array_bool_and([aux838_BOOL,aux839_BOOL],false);
constraint array_bool_and([aux840_BOOL,aux841_BOOL],false);
constraint array_bool_and([aux842_BOOL,aux843_BOOL],false);
constraint array_bool_and([aux844_BOOL,aux845_BOOL],false);
constraint array_bool_and([aux846_BOOL,aux847_BOOL],false);
constraint array_bool_and([aux848_BOOL,aux849_BOOL],false);
constraint array_bool_and([aux850_BOOL,aux851_BOOL],false);
constraint array_bool_and([aux852_BOOL,aux853_BOOL],false);
constraint array_bool_and([aux854_BOOL,aux855_BOOL],false);
constraint array_bool_and([aux856_BOOL,aux857_BOOL],false);
constraint array_bool_and([aux858_BOOL,aux859_BOOL],false);
constraint array_bool_and([aux860_BOOL,aux861_BOOL],false);
constraint array_bool_and([aux862_BOOL,aux863_BOOL],false);
constraint array_bool_and([aux864_BOOL,aux865_BOOL],false);
constraint array_bool_and([aux866_BOOL,aux867_BOOL],false);
constraint array_bool_and([aux868_BOOL,aux869_BOOL],false);
constraint array_bool_and([aux870_BOOL,aux871_BOOL],false);
constraint array_bool_and([aux872_BOOL,aux873_BOOL],false);
constraint array_bool_and([aux874_BOOL,aux875_BOOL],false);
constraint array_bool_and([aux876_BOOL,aux877_BOOL],false);
constraint array_bool_and([aux878_BOOL,aux879_BOOL],false);
constraint array_bool_and([aux880_BOOL,aux881_BOOL],false);
constraint array_bool_and([aux882_BOOL,aux883_BOOL],false);
constraint array_bool_and([aux884_BOOL,aux885_BOOL],false);
constraint array_bool_and([aux886_BOOL,aux887_BOOL],false);
constraint array_bool_and([aux888_BOOL,aux889_BOOL],false);
constraint array_bool_and([aux890_BOOL,aux891_BOOL],false);
constraint array_bool_and([aux892_BOOL,aux893_BOOL],false);
constraint array_bool_and([aux894_BOOL,aux895_BOOL],false);
constraint array_bool_and([aux896_BOOL,aux897_BOOL],false);
constraint array_bool_and([aux898_BOOL,aux899_BOOL],false);
constraint array_bool_and([aux900_BOOL,aux901_BOOL],false);
constraint array_bool_and([aux902_BOOL,aux903_BOOL],false);
constraint array_bool_and([aux904_BOOL,aux905_BOOL],false);
constraint array_bool_and([aux906_BOOL,aux907_BOOL],false);
constraint array_bool_and([aux908_BOOL,aux909_BOOL],false);
constraint array_bool_and([aux910_BOOL,aux911_BOOL],false);
constraint array_bool_and([aux912_BOOL,aux913_BOOL],false);
constraint array_bool_and([aux914_BOOL,aux915_BOOL],false);
constraint array_bool_and([aux916_BOOL,aux917_BOOL],false);
constraint array_bool_and([aux918_BOOL,aux919_BOOL],false);
constraint array_bool_and([aux920_BOOL,aux921_BOOL],false);
constraint array_bool_and([aux922_BOOL,aux923_BOOL],false);
constraint array_bool_and([aux924_BOOL,aux925_BOOL],false);
constraint array_bool_and([aux926_BOOL,aux927_BOOL],false);
constraint array_bool_and([aux928_BOOL,aux929_BOOL],false);
constraint array_bool_and([aux930_BOOL,aux931_BOOL],false);
constraint array_bool_and([aux932_BOOL,aux933_BOOL],false);
constraint array_bool_and([aux934_BOOL,aux935_BOOL],false);
constraint array_bool_and([aux936_BOOL,aux937_BOOL],false);
constraint array_bool_and([aux938_BOOL,aux939_BOOL],false);
constraint array_bool_and([aux940_BOOL,aux941_BOOL],false);
constraint array_bool_and([aux942_BOOL,aux943_BOOL],false);
constraint array_bool_and([aux944_BOOL,aux945_BOOL],false);
constraint array_bool_and([aux946_BOOL,aux947_BOOL],false);
constraint array_bool_and([aux948_BOOL,aux949_BOOL],false);
constraint array_bool_and([aux950_BOOL,aux951_BOOL],false);
constraint array_bool_and([aux952_BOOL,aux953_BOOL],false);
constraint array_bool_and([aux954_BOOL,aux955_BOOL],false);
constraint array_bool_and([aux956_BOOL,aux957_BOOL],false);
constraint array_bool_and([aux958_BOOL,aux959_BOOL],false);
constraint array_bool_and([aux960_BOOL,aux961_BOOL],false);
constraint array_bool_and([aux962_BOOL,aux963_BOOL],false);
constraint array_bool_and([aux964_BOOL,aux965_BOOL],false);
constraint array_bool_and([aux966_BOOL,aux967_BOOL],false);
constraint array_bool_and([aux968_BOOL,aux969_BOOL],false);
constraint array_bool_and([aux970_BOOL,aux971_BOOL],false);
constraint array_bool_and([aux972_BOOL,aux973_BOOL],false);
constraint array_bool_and([aux974_BOOL,aux975_BOOL],false);
constraint array_bool_and([aux976_BOOL,aux977_BOOL],false);
constraint array_bool_and([aux978_BOOL,aux979_BOOL],false);
constraint array_bool_and([aux980_BOOL,aux981_BOOL],false);
constraint array_bool_and([aux982_BOOL,aux983_BOOL],false);
constraint array_bool_and([aux984_BOOL,aux985_BOOL],false);
constraint array_bool_and([aux986_BOOL,aux987_BOOL],false);
constraint array_bool_and([aux988_BOOL,aux989_BOOL],false);
constraint array_bool_and([aux990_BOOL,aux991_BOOL],false);
constraint array_bool_and([aux992_BOOL,aux993_BOOL],false);
constraint array_bool_and([aux994_BOOL,aux995_BOOL],false);
constraint array_bool_and([aux996_BOOL,aux997_BOOL],false);
constraint array_bool_and([aux998_BOOL,aux999_BOOL],false);
constraint array_bool_and([aux1000_BOOL,aux1001_BOOL],false);
constraint array_bool_and([aux1002_BOOL,aux1003_BOOL],false);
constraint array_bool_and([aux1004_BOOL,aux1005_BOOL],false);
constraint array_bool_and([aux1006_BOOL,aux1007_BOOL],false);
constraint array_bool_and([aux1008_BOOL,aux1009_BOOL],false);
constraint int_lin_le([1,1,1,1,1,1,-1],[aux1010_INTEGER,aux1011_INTEGER,aux1012_INTEGER,aux1013_INTEGER,aux1014_INTEGER,w_00005_00015_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,-1],[aux1015_INTEGER,aux1016_INTEGER,aux1017_INTEGER,w_00004_00001_INTEGER,1],0);
constraint array_bool_and([aux1018_BOOL,aux1019_BOOL],aux27_BOOL);
constraint array_bool_and([aux1020_BOOL,aux1021_BOOL],aux77_BOOL);
constraint array_bool_and([aux1022_BOOL,aux1023_BOOL],aux46_BOOL);
constraint array_bool_and([aux1024_BOOL,aux1025_BOOL],aux23_BOOL);
constraint array_bool_and([aux1026_BOOL,aux1027_BOOL],aux45_BOOL);
constraint array_bool_and([aux1028_BOOL,aux1029_BOOL],aux70_BOOL);
constraint array_bool_and([aux1030_BOOL,aux1031_BOOL],aux75_BOOL);
constraint array_bool_and([aux1032_BOOL,aux1033_BOOL],aux19_BOOL);
constraint array_bool_and([aux1034_BOOL,aux1035_BOOL],aux43_BOOL);
constraint array_bool_and([aux1036_BOOL,aux1037_BOOL],aux93_BOOL);
constraint array_bool_and([aux1038_BOOL,aux1039_BOOL],aux44_BOOL);
constraint array_bool_and([aux1040_BOOL,aux1041_BOOL],aux97_BOOL);
constraint array_bool_and([aux1042_BOOL,aux1043_BOOL],aux54_BOOL);
constraint array_bool_and([aux1044_BOOL,aux1045_BOOL],aux85_BOOL);
constraint array_bool_and([aux1046_BOOL,aux1047_BOOL],aux18_BOOL);
constraint array_bool_and([aux1048_BOOL,aux1049_BOOL],aux74_BOOL);
constraint array_bool_and([aux1050_BOOL,aux1051_BOOL],aux69_BOOL);
constraint array_bool_and([aux1052_BOOL,aux1053_BOOL],aux53_BOOL);
constraint array_bool_and([aux1054_BOOL,aux1055_BOOL],aux63_BOOL);
constraint array_bool_and([aux1056_BOOL,aux1057_BOOL],aux38_BOOL);
constraint array_bool_and([aux1058_BOOL,aux1059_BOOL],aux21_BOOL);
constraint array_bool_and([aux1060_BOOL,aux1061_BOOL],aux42_BOOL);
constraint array_bool_and([aux1062_BOOL,aux1063_BOOL],aux51_BOOL);
constraint array_bool_and([aux1064_BOOL,aux1065_BOOL],aux52_BOOL);
constraint array_bool_and([aux1066_BOOL,aux1067_BOOL],aux84_BOOL);
constraint array_bool_and([aux1068_BOOL,aux1069_BOOL],aux41_BOOL);
constraint array_bool_and([aux1070_BOOL,aux1071_BOOL],aux61_BOOL);
constraint array_bool_and([aux1072_BOOL,aux1073_BOOL],aux81_BOOL);
constraint array_bool_and([aux1074_BOOL,aux1075_BOOL],aux40_BOOL);
constraint array_bool_and([aux1076_BOOL,aux1077_BOOL],aux79_BOOL);
constraint array_bool_and([aux1078_BOOL,aux1079_BOOL],aux32_BOOL);
constraint array_bool_and([aux1080_BOOL,aux1081_BOOL],aux36_BOOL);
constraint array_bool_and([aux1082_BOOL,aux1083_BOOL],aux73_BOOL);
constraint array_bool_and([aux1084_BOOL,aux1085_BOOL],aux20_BOOL);
constraint int_lin_le([1,1,1,1,1,1,-1],[w_00006_00018_INTEGER,aux1086_INTEGER,aux1087_INTEGER,aux1088_INTEGER,aux1089_INTEGER,aux1090_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,-1],[aux1091_INTEGER,aux1092_INTEGER,aux1093_INTEGER,aux1094_INTEGER,aux1095_INTEGER,w_00009_00005_INTEGER,1],0);
constraint int_lin_le([1,1,1,2,1,-1],[aux112_INTEGER,aux114_INTEGER,aux20_INTEGER,aux32_INTEGER,aux61_INTEGER,4],0);
constraint int_le(aux402, objective);
constraint int_le(aux405, objective);
constraint int_le(aux392, objective);
constraint int_lin_le([1,1,1,1,1,1,1,1,-1],[aux1096_INTEGER,aux1097_INTEGER,aux1098_INTEGER,aux1099_INTEGER,aux1100_INTEGER,aux1101_INTEGER,aux1102_INTEGER,w_00008_00012_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,-1],[aux1103_INTEGER,aux1104_INTEGER,aux1105_INTEGER,aux1106_INTEGER,w_00001_00013_INTEGER,1],0);
constraint int_lin_le([1,1,1,2,1,-1],[aux234_INTEGER,aux43_INTEGER,aux53_INTEGER,aux54_INTEGER,aux81_INTEGER,2],0);
constraint int_lin_le([1,1,1,1,1,1,-1],[w_00002_00008_INTEGER,aux1107_INTEGER,aux1108_INTEGER,aux1109_INTEGER,aux1110_INTEGER,aux1111_INTEGER,1],0);
constraint int_lin_le([2,1,1,1,-1],[aux153_INTEGER,aux154_INTEGER,aux155_INTEGER,aux156_INTEGER,4],0);
constraint int_lin_le([1,1,1,1,1,1,-1],[aux1112_INTEGER,aux1113_INTEGER,aux1114_INTEGER,aux1115_INTEGER,aux1116_INTEGER,w_00008_00008_INTEGER,1],0);
constraint int_lin_le([1,1,2,-1],[aux249_INTEGER,aux371,aux85_INTEGER,2],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,-1],[w_00006_00011_INTEGER,aux1117_INTEGER,aux1118_INTEGER,aux1119_INTEGER,aux1120_INTEGER,aux1121_INTEGER,aux1122_INTEGER,aux1123_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,-1],[aux1133_INTEGER,aux1134_INTEGER,aux1135_INTEGER,aux1136_INTEGER,w_00004_00019_INTEGER,1],0);
constraint int_lin_le([1,1,1,-1],[aux1137_INTEGER,aux1138_INTEGER,w_00003_00008_INTEGER,1],0);
constraint int_lin_le([1,1,1,-1],[aux1139_INTEGER,aux1140_INTEGER,w_00003_00020_INTEGER,1],0);
constraint int_lin_le([1,1,1,-1],[aux1141_INTEGER,aux1142_INTEGER,w_00003_00005_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,-1],[aux140_INTEGER,aux141_INTEGER,aux143_INTEGER,aux144_INTEGER,aux371,3],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[w_00006_00006_INTEGER,aux1143_INTEGER,aux1144_INTEGER,aux1145_INTEGER,aux1146_INTEGER,aux1147_INTEGER,aux1148_INTEGER,aux1149_INTEGER,aux1150_INTEGER,aux1151_INTEGER,aux1152_INTEGER,aux1153_INTEGER,aux1154_INTEGER,aux1155_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,1,-1],[aux1165_INTEGER,aux1166_INTEGER,aux1167_INTEGER,aux1168_INTEGER,aux1169_INTEGER,aux1170_INTEGER,aux1171_INTEGER,aux1172_INTEGER,w_00004_00020_INTEGER,1],0);
constraint array_int_lq([w_00002_00001_INTEGER, w_00002_00002_INTEGER, w_00002_00004_INTEGER, w_00002_00006_INTEGER, w_00002_00008_INTEGER, w_00002_00012_INTEGER, w_00002_00013_INTEGER, w_00002_00014_INTEGER, w_00002_00016_INTEGER, w_00002_00018_INTEGER, w_00002_00019_INTEGER, w_00002_00020_INTEGER],[w_00008_00001_INTEGER, w_00008_00002_INTEGER, w_00008_00004_INTEGER, w_00008_00006_INTEGER, w_00008_00008_INTEGER, w_00008_00012_INTEGER, w_00008_00013_INTEGER, w_00008_00014_INTEGER, w_00008_00016_INTEGER, w_00008_00018_INTEGER, w_00008_00019_INTEGER, w_00008_00020_INTEGER]);
constraint int_lin_le([1,1,1,1,1,1,1,1,1,-1],[w_00007_00020_INTEGER,aux1177_INTEGER,aux1178_INTEGER,aux1179_INTEGER,aux1180_INTEGER,aux1181_INTEGER,aux1182_INTEGER,aux1183_INTEGER,aux1184_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,-1],[w_00002_00013_INTEGER,aux1185_INTEGER,aux1186_INTEGER,aux1187_INTEGER,aux1188_INTEGER,aux1189_INTEGER,aux1190_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,-1],[aux1191_INTEGER,aux1192_INTEGER,aux1193_INTEGER,aux1194_INTEGER,w_00005_00004_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,-1],[aux206_INTEGER,aux208_INTEGER,aux370,aux27_INTEGER,3],0);
constraint int_lin_le([1,1,1,1,1,1,1,-1],[aux1195_INTEGER,aux1196_INTEGER,aux1197_INTEGER,aux1198_INTEGER,aux1199_INTEGER,aux1200_INTEGER,w_00005_00007_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux365,w_00003_00002_INTEGER,w_00009_00002_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux367,w_00003_00008_INTEGER,w_00009_00008_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux369,w_00003_00020_INTEGER,w_00009_00020_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,-1],[w_00006_00003_INTEGER,aux1201_INTEGER,aux1202_INTEGER,aux1203_INTEGER,aux1204_INTEGER,aux1205_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,-1],[aux1206_INTEGER,aux1207_INTEGER,aux1208_INTEGER,aux1209_INTEGER,w_00008_00019_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,-1],[aux1210_INTEGER,aux1211_INTEGER,aux1212_INTEGER,w_00009_00002_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,-1],[aux1213_INTEGER,aux1214_INTEGER,aux1215_INTEGER,w_00005_00001_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,-1],[w_00006_00017_INTEGER,aux1216_INTEGER,aux1217_INTEGER,aux1218_INTEGER,aux1219_INTEGER,aux1220_INTEGER,aux1221_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,1,-1],[w_00002_00006_INTEGER,aux1222_INTEGER,aux1223_INTEGER,aux1224_INTEGER,aux1225_INTEGER,aux1226_INTEGER,aux1227_INTEGER,aux1228_INTEGER,aux1229_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux1230_INTEGER,aux1231_INTEGER,aux1232_INTEGER,aux1233_INTEGER,aux1234_INTEGER,aux1235_INTEGER,aux1236_INTEGER,aux1237_INTEGER,aux1238_INTEGER,aux1239_INTEGER,aux1240_INTEGER,w_00004_00008_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,-1],[aux133_INTEGER,aux136_INTEGER,aux138_INTEGER,aux44_INTEGER,aux63_INTEGER,4],0);
constraint int_lin_le([1,1,1,1,1,1,-1],[w_00007_00009_INTEGER,aux1241_INTEGER,aux1242_INTEGER,aux1243_INTEGER,aux1244_INTEGER,aux1245_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,-1],[aux1246_INTEGER,aux1247_INTEGER,aux1248_INTEGER,aux1249_INTEGER,w_00009_00004_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,-1],[aux1250_INTEGER,aux1251_INTEGER,aux1252_INTEGER,aux1253_INTEGER,aux1254_INTEGER,w_00008_00014_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,-1],[aux1257_INTEGER,aux1264_INTEGER,aux1265_INTEGER,aux1266_INTEGER,aux1267_INTEGER,aux1268_INTEGER,aux1269_INTEGER,w_00004_00014_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,-1],[aux1270_INTEGER,aux1271_INTEGER,aux1272_INTEGER,aux1273_INTEGER,aux1274_INTEGER,w_00005_00010_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,-1],[aux236_INTEGER,aux238_INTEGER,aux36_INTEGER,aux84_INTEGER,2],0);
constraint int_lin_le([1,1,1,1,1,1,-1],[w_00006_00009_INTEGER,aux1275_INTEGER,aux1276_INTEGER,aux1277_INTEGER,aux1278_INTEGER,aux1279_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,1,1,-1],[w_00006_00008_INTEGER,aux1280_INTEGER,aux1281_INTEGER,aux1282_INTEGER,aux1283_INTEGER,aux1284_INTEGER,aux1285_INTEGER,aux1286_INTEGER,aux1287_INTEGER,aux1288_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[w_00007_00006_INTEGER,aux1289_INTEGER,aux1290_INTEGER,aux1291_INTEGER,aux1292_INTEGER,aux1293_INTEGER,aux1294_INTEGER,aux1295_INTEGER,aux1296_INTEGER,aux1297_INTEGER,aux1298_INTEGER,aux1299_INTEGER,aux1300_INTEGER,aux1301_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,-1,1],[w_00006_00009_INTEGER,w_00007_00009_INTEGER,w_00004_00009_INTEGER,w_00009_00009_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,1],[w_00006_00011_INTEGER,w_00007_00011_INTEGER,w_00004_00011_INTEGER,w_00009_00011_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,-1,1],[w_00006_00017_INTEGER,w_00007_00017_INTEGER,w_00004_00017_INTEGER,w_00009_00017_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,-1],[w_00007_00004_INTEGER,aux1302_INTEGER,aux1303_INTEGER,aux1304_INTEGER,aux1305_INTEGER,aux1306_INTEGER,aux1307_INTEGER,1],0);
constraint gecode_table_int([s_00001, s_00002],[0,4,0,5,0,6,0,7,0,8,0,9,0,10,0,11,0,12,0,13,0,14,0,15,0,16,0,17,0,18,0,19,0,20,0,21,0,22,0,23,0,24,0,25,0,26,0,27,0,28,0,29,0,30,0,31,0,32,0,33,0,34,0,35,0,36,0,37,0,38,1,5,1,6,1,7,1,8,1,9,1,10,1,11,1,12,1,13,1,14,1,15,1,16,1,17,1,18,1,19,1,20,1,21,1,22,1,23,1,24,1,25,1,26,1,27,1,28,1,29,1,30,1,31,1,32,1,33,1,34,1,35,1,36,1,37,1,38,2,6,2,7,2,8,2,9,2,10,2,11,2,12,2,13,2,14,2,15,2,16,2,17,2,18,2,19,2,20,2,21,2,22,2,23,2,24,2,25,2,26,2,27,2,28,2,29,2,30,2,31,2,32,2,33,2,34,2,35,2,36,2,37,2,38,3,7,3,8,3,9,3,10,3,11,3,12,3,13,3,14,3,15,3,16,3,17,3,18,3,19,3,20,3,21,3,22,3,23,3,24,3,25,3,26,3,27,3,28,3,29,3,30,3,31,3,32,3,33,3,34,3,35,3,36,3,37,3,38,4,0,4,8,4,9,4,10,4,11,4,12,4,13,4,14,4,15,4,16,4,17,4,18,4,19,4,20,4,21,4,22,4,23,4,24,4,25,4,26,4,27,4,28,4,29,4,30,4,31,4,32,4,33,4,34,4,35,4,36,4,37,4,38,5,0,5,1,5,9,5,10,5,11,5,12,5,13,5,14,5,15,5,16,5,17,5,18,5,19,5,20,5,21,5,22,5,23,5,24,5,25,5,26,5,27,5,28,5,29,5,30,5,31,5,32,5,33,5,34,5,35,5,36,5,37,5,38,6,0,6,1,6,2,6,10,6,11,6,12,6,13,6,14,6,15,6,16,6,17,6,18,6,19,6,20,6,21,6,22,6,23,6,24,6,25,6,26,6,27,6,28,6,29,6,30,6,31,6,32,6,33,6,34,6,35,6,36,6,37,6,38,7,0,7,1,7,2,7,3,7,11,7,12,7,13,7,14,7,15,7,16,7,17,7,18,7,19,7,20,7,21,7,22,7,23,7,24,7,25,7,26,7,27,7,28,7,29,7,30,7,31,7,32,7,33,7,34,7,35,7,36,7,37,7,38,8,0,8,1,8,2,8,3,8,4,8,12,8,13,8,14,8,15,8,16,8,17,8,18,8,19,8,20,8,21,8,22,8,23,8,24,8,25,8,26,8,27,8,28,8,29,8,30,8,31,8,32,8,33,8,34,8,35,8,36,8,37,8,38,9,0,9,1,9,2,9,3,9,4,9,5,9,13,9,14,9,15,9,16,9,17,9,18,9,19,9,20,9,21,9,22,9,23,9,24,9,25,9,26,9,27,9,28,9,29,9,30,9,31,9,32,9,33,9,34,9,35,9,36,9,37,9,38,10,0,10,1,10,2,10,3,10,4,10,5,10,6,10,14,10,15,10,16,10,17,10,18,10,19,10,20,10,21,10,22,10,23,10,24,10,25,10,26,10,27,10,28,10,29,10,30,10,31,10,32,10,33,10,34,10,35,10,36,10,37,10,38,11,0,11,1,11,2,11,3,11,4,11,5,11,6,11,7,11,15,11,16,11,17,11,18,11,19,11,20,11,21,11,22,11,23,11,24,11,25,11,26,11,27,11,28,11,29,11,30,11,31,11,32,11,33,11,34,11,35,11,36,11,37,11,38,12,0,12,1,12,2,12,3,12,4,12,5,12,6,12,7,12,8,12,16,12,17,12,18,12,19,12,20,12,21,12,22,12,23,12,24,12,25,12,26,12,27,12,28,12,29,12,30,12,31,12,32,12,33,12,34,12,35,12,36,12,37,12,38,13,0,13,1,13,2,13,3,13,4,13,5,13,6,13,7,13,8,13,9,13,17,13,18,13,19,13,20,13,21,13,22,13,23,13,24,13,25,13,26,13,27,13,28,13,29,13,30,13,31,13,32,13,33,13,34,13,35,13,36,13,37,13,38,14,0,14,1,14,2,14,3,14,4,14,5,14,6,14,7,14,8,14,9,14,10,14,18,14,19,14,20,14,21,14,22,14,23,14,24,14,25,14,26,14,27,14,28,14,29,14,30,14,31,14,32,14,33,14,34,14,35,14,36,14,37,14,38,15,0,15,1,15,2,15,3,15,4,15,5,15,6,15,7,15,8,15,9,15,10,15,11,15,19,15,20,15,21,15,22,15,23,15,24,15,25,15,26,15,27,15,28,15,29,15,30,15,31,15,32,15,33,15,34,15,35,15,36,15,37,15,38,16,0,16,1,16,2,16,3,16,4,16,5,16,6,16,7,16,8,16,9,16,10,16,11,16,12,16,20,16,21,16,22,16,23,16,24,16,25,16,26,16,27,16,28,16,29,16,30,16,31,16,32,16,33,16,34,16,35,16,36,16,37,16,38,17,0,17,1,17,2,17,3,17,4,17,5,17,6,17,7,17,8,17,9,17,10,17,11,17,12,17,13,17,21,17,22,17,23,17,24,17,25,17,26,17,27,17,28,17,29,17,30,17,31,17,32,17,33,17,34,17,35,17,36,17,37,17,38,18,0,18,1,18,2,18,3,18,4,18,5,18,6,18,7,18,8,18,9,18,10,18,11,18,12,18,13,18,14,18,22,18,23,18,24,18,25,18,26,18,27,18,28,18,29,18,30,18,31,18,32,18,33,18,34,18,35,18,36,18,37,18,38,19,0,19,1,19,2,19,3,19,4,19,5,19,6,19,7,19,8,19,9,19,10,19,11,19,12,19,13,19,14,19,15,19,23,19,24,19,25,19,26,19,27,19,28,19,29,19,30,19,31,19,32,19,33,19,34,19,35,19,36,19,37,19,38,20,0,20,1,20,2,20,3,20,4,20,5,20,6,20,7,20,8,20,9,20,10,20,11,20,12,20,13,20,14,20,15,20,16,20,24,20,25,20,26,20,27,20,28,20,29,20,30,20,31,20,32,20,33,20,34,20,35,20,36,20,37,20,38,21,0,21,1,21,2,21,3,21,4,21,5,21,6,21,7,21,8,21,9,21,10,21,11,21,12,21,13,21,14,21,15,21,16,21,17,21,25,21,26,21,27,21,28,21,29,21,30,21,31,21,32,21,33,21,34,21,35,21,36,21,37,21,38,22,0,22,1,22,2,22,3,22,4,22,5,22,6,22,7,22,8,22,9,22,10,22,11,22,12,22,13,22,14,22,15,22,16,22,17,22,18,22,26,22,27,22,28,22,29,22,30,22,31,22,32,22,33,22,34,22,35,22,36,22,37,22,38,23,0,23,1,23,2,23,3,23,4,23,5,23,6,23,7,23,8,23,9,23,10,23,11,23,12,23,13,23,14,23,15,23,16,23,17,23,18,23,19,23,27,23,28,23,29,23,30,23,31,23,32,23,33,23,34,23,35,23,36,23,37,23,38,24,0,24,1,24,2,24,3,24,4,24,5,24,6,24,7,24,8,24,9,24,10,24,11,24,12,24,13,24,14,24,15,24,16,24,17,24,18,24,19,24,20,24,28,24,29,24,30,24,31,24,32,24,33,24,34,24,35,24,36,24,37,24,38,25,0,25,1,25,2,25,3,25,4,25,5,25,6,25,7,25,8,25,9,25,10,25,11,25,12,25,13,25,14,25,15,25,16,25,17,25,18,25,19,25,20,25,21,25,29,25,30,25,31,25,32,25,33,25,34,25,35,25,36,25,37,25,38,26,0,26,1,26,2,26,3,26,4,26,5,26,6,26,7,26,8,26,9,26,10,26,11,26,12,26,13,26,14,26,15,26,16,26,17,26,18,26,19,26,20,26,21,26,22,26,30,26,31,26,32,26,33,26,34,26,35,26,36,26,37,26,38,27,0,27,1,27,2,27,3,27,4,27,5,27,6,27,7,27,8,27,9,27,10,27,11,27,12,27,13,27,14,27,15,27,16,27,17,27,18,27,19,27,20,27,21,27,22,27,23,27,31,27,32,27,33,27,34,27,35,27,36,27,37,27,38,28,0,28,1,28,2,28,3,28,4,28,5,28,6,28,7,28,8,28,9,28,10,28,11,28,12,28,13,28,14,28,15,28,16,28,17,28,18,28,19,28,20,28,21,28,22,28,23,28,24,28,32,28,33,28,34,28,35,28,36,28,37,28,38,29,0,29,1,29,2,29,3,29,4,29,5,29,6,29,7,29,8,29,9,29,10,29,11,29,12,29,13,29,14,29,15,29,16,29,17,29,18,29,19,29,20,29,21,29,22,29,23,29,24,29,25,29,33,29,34,29,35,29,36,29,37,29,38,30,0,30,1,30,2,30,3,30,4,30,5,30,6,30,7,30,8,30,9,30,10,30,11,30,12,30,13,30,14,30,15,30,16,30,17,30,18,30,19,30,20,30,21,30,22,30,23,30,24,30,25,30,26,30,34,30,35,30,36,30,37,30,38,31,0,31,1,31,2,31,3,31,4,31,5,31,6,31,7,31,8,31,9,31,10,31,11,31,12,31,13,31,14,31,15,31,16,31,17,31,18,31,19,31,20,31,21,31,22,31,23,31,24,31,25,31,26,31,27,31,35,31,36,31,37,31,38,]);
constraint gecode_table_int([s_00009, s_00002],[4,0,4,6,4,7,4,8,4,9,4,10,4,11,4,12,4,13,4,14,4,15,4,16,4,17,4,18,4,19,4,20,4,21,4,22,4,23,4,24,4,25,4,26,4,27,4,28,4,29,4,30,4,31,4,32,4,33,4,34,4,35,4,36,4,37,4,38,5,0,5,1,5,7,5,8,5,9,5,10,5,11,5,12,5,13,5,14,5,15,5,16,5,17,5,18,5,19,5,20,5,21,5,22,5,23,5,24,5,25,5,26,5,27,5,28,5,29,5,30,5,31,5,32,5,33,5,34,5,35,5,36,5,37,5,38,6,0,6,1,6,2,6,8,6,9,6,10,6,11,6,12,6,13,6,14,6,15,6,16,6,17,6,18,6,19,6,20,6,21,6,22,6,23,6,24,6,25,6,26,6,27,6,28,6,29,6,30,6,31,6,32,6,33,6,34,6,35,6,36,6,37,6,38,7,0,7,1,7,2,7,3,7,9,7,10,7,11,7,12,7,13,7,14,7,15,7,16,7,17,7,18,7,19,7,20,7,21,7,22,7,23,7,24,7,25,7,26,7,27,7,28,7,29,7,30,7,31,7,32,7,33,7,34,7,35,7,36,7,37,7,38,8,0,8,1,8,2,8,3,8,4,8,10,8,11,8,12,8,13,8,14,8,15,8,16,8,17,8,18,8,19,8,20,8,21,8,22,8,23,8,24,8,25,8,26,8,27,8,28,8,29,8,30,8,31,8,32,8,33,8,34,8,35,8,36,8,37,8,38,9,0,9,1,9,2,9,3,9,4,9,5,9,11,9,12,9,13,9,14,9,15,9,16,9,17,9,18,9,19,9,20,9,21,9,22,9,23,9,24,9,25,9,26,9,27,9,28,9,29,9,30,9,31,9,32,9,33,9,34,9,35,9,36,9,37,9,38,10,0,10,1,10,2,10,3,10,4,10,5,10,6,10,12,10,13,10,14,10,15,10,16,10,17,10,18,10,19,10,20,10,21,10,22,10,23,10,24,10,25,10,26,10,27,10,28,10,29,10,30,10,31,10,32,10,33,10,34,10,35,10,36,10,37,10,38,11,0,11,1,11,2,11,3,11,4,11,5,11,6,11,7,11,13,11,14,11,15,11,16,11,17,11,18,11,19,11,20,11,21,11,22,11,23,11,24,11,25,11,26,11,27,11,28,11,29,11,30,11,31,11,32,11,33,11,34,11,35,11,36,11,37,11,38,12,0,12,1,12,2,12,3,12,4,12,5,12,6,12,7,12,8,12,14,12,15,12,16,12,17,12,18,12,19,12,20,12,21,12,22,12,23,12,24,12,25,12,26,12,27,12,28,12,29,12,30,12,31,12,32,12,33,12,34,12,35,12,36,12,37,12,38,13,0,13,1,13,2,13,3,13,4,13,5,13,6,13,7,13,8,13,9,13,15,13,16,13,17,13,18,13,19,13,20,13,21,13,22,13,23,13,24,13,25,13,26,13,27,13,28,13,29,13,30,13,31,13,32,13,33,13,34,13,35,13,36,13,37,13,38,14,0,14,1,14,2,14,3,14,4,14,5,14,6,14,7,14,8,14,9,14,10,14,16,14,17,14,18,14,19,14,20,14,21,14,22,14,23,14,24,14,25,14,26,14,27,14,28,14,29,14,30,14,31,14,32,14,33,14,34,14,35,14,36,14,37,14,38,15,0,15,1,15,2,15,3,15,4,15,5,15,6,15,7,15,8,15,9,15,10,15,11,15,17,15,18,15,19,15,20,15,21,15,22,15,23,15,24,15,25,15,26,15,27,15,28,15,29,15,30,15,31,15,32,15,33,15,34,15,35,15,36,15,37,15,38,16,0,16,1,16,2,16,3,16,4,16,5,16,6,16,7,16,8,16,9,16,10,16,11,16,12,16,18,16,19,16,20,16,21,16,22,16,23,16,24,16,25,16,26,16,27,16,28,16,29,16,30,16,31,16,32,16,33,16,34,16,35,16,36,16,37,16,38,17,0,17,1,17,2,17,3,17,4,17,5,17,6,17,7,17,8,17,9,17,10,17,11,17,12,17,13,17,19,17,20,17,21,17,22,17,23,17,24,17,25,17,26,17,27,17,28,17,29,17,30,17,31,17,32,17,33,17,34,17,35,17,36,17,37,17,38,18,0,18,1,18,2,18,3,18,4,18,5,18,6,18,7,18,8,18,9,18,10,18,11,18,12,18,13,18,14,18,20,18,21,18,22,18,23,18,24,18,25,18,26,18,27,18,28,18,29,18,30,18,31,18,32,18,33,18,34,18,35,18,36,18,37,18,38,19,0,19,1,19,2,19,3,19,4,19,5,19,6,19,7,19,8,19,9,19,10,19,11,19,12,19,13,19,14,19,15,19,21,19,22,19,23,19,24,19,25,19,26,19,27,19,28,19,29,19,30,19,31,19,32,19,33,19,34,19,35,19,36,19,37,19,38,20,0,20,1,20,2,20,3,20,4,20,5,20,6,20,7,20,8,20,9,20,10,20,11,20,12,20,13,20,14,20,15,20,16,20,22,20,23,20,24,20,25,20,26,20,27,20,28,20,29,20,30,20,31,20,32,20,33,20,34,20,35,20,36,20,37,20,38,21,0,21,1,21,2,21,3,21,4,21,5,21,6,21,7,21,8,21,9,21,10,21,11,21,12,21,13,21,14,21,15,21,16,21,17,21,23,21,24,21,25,21,26,21,27,21,28,21,29,21,30,21,31,21,32,21,33,21,34,21,35,21,36,21,37,21,38,22,0,22,1,22,2,22,3,22,4,22,5,22,6,22,7,22,8,22,9,22,10,22,11,22,12,22,13,22,14,22,15,22,16,22,17,22,18,22,24,22,25,22,26,22,27,22,28,22,29,22,30,22,31,22,32,22,33,22,34,22,35,22,36,22,37,22,38,23,0,23,1,23,2,23,3,23,4,23,5,23,6,23,7,23,8,23,9,23,10,23,11,23,12,23,13,23,14,23,15,23,16,23,17,23,18,23,19,23,25,23,26,23,27,23,28,23,29,23,30,23,31,23,32,23,33,23,34,23,35,23,36,23,37,23,38,24,0,24,1,24,2,24,3,24,4,24,5,24,6,24,7,24,8,24,9,24,10,24,11,24,12,24,13,24,14,24,15,24,16,24,17,24,18,24,19,24,20,24,26,24,27,24,28,24,29,24,30,24,31,24,32,24,33,24,34,24,35,24,36,24,37,24,38,25,0,25,1,25,2,25,3,25,4,25,5,25,6,25,7,25,8,25,9,25,10,25,11,25,12,25,13,25,14,25,15,25,16,25,17,25,18,25,19,25,20,25,21,25,27,25,28,25,29,25,30,25,31,25,32,25,33,25,34,25,35,25,36,25,37,25,38,26,0,26,1,26,2,26,3,26,4,26,5,26,6,26,7,26,8,26,9,26,10,26,11,26,12,26,13,26,14,26,15,26,16,26,17,26,18,26,19,26,20,26,21,26,22,26,28,26,29,26,30,26,31,26,32,26,33,26,34,26,35,26,36,26,37,26,38,27,0,27,1,27,2,27,3,27,4,27,5,27,6,27,7,27,8,27,9,27,10,27,11,27,12,27,13,27,14,27,15,27,16,27,17,27,18,27,19,27,20,27,21,27,22,27,23,27,29,27,30,27,31,27,32,27,33,27,34,27,35,27,36,27,37,27,38,28,0,28,1,28,2,28,3,28,4,28,5,28,6,28,7,28,8,28,9,28,10,28,11,28,12,28,13,28,14,28,15,28,16,28,17,28,18,28,19,28,20,28,21,28,22,28,23,28,24,28,30,28,31,28,32,28,33,28,34,28,35,28,36,28,37,28,38,29,0,29,1,29,2,29,3,29,4,29,5,29,6,29,7,29,8,29,9,29,10,29,11,29,12,29,13,29,14,29,15,29,16,29,17,29,18,29,19,29,20,29,21,29,22,29,23,29,24,29,25,29,31,29,32,29,33,29,34,29,35,29,36,29,37,29,38,30,0,30,1,30,2,30,3,30,4,30,5,30,6,30,7,30,8,30,9,30,10,30,11,30,12,30,13,30,14,30,15,30,16,30,17,30,18,30,19,30,20,30,21,30,22,30,23,30,24,30,25,30,26,30,32,30,33,30,34,30,35,30,36,30,37,30,38,31,0,31,1,31,2,31,3,31,4,31,5,31,6,31,7,31,8,31,9,31,10,31,11,31,12,31,13,31,14,31,15,31,16,31,17,31,18,31,19,31,20,31,21,31,22,31,23,31,24,31,25,31,26,31,27,31,33,31,34,31,35,31,36,31,37,31,38,32,0,32,1,32,2,32,3,32,4,32,5,32,6,32,7,32,8,32,9,32,10,32,11,32,12,32,13,32,14,32,15,32,16,32,17,32,18,32,19,32,20,32,21,32,22,32,23,32,24,32,25,32,26,32,27,32,28,32,34,32,35,32,36,32,37,32,38,33,0,33,1,33,2,33,3,33,4,33,5,33,6,33,7,33,8,33,9,33,10,33,11,33,12,33,13,33,14,33,15,33,16,33,17,33,18,33,19,33,20,33,21,33,22,33,23,33,24,33,25,33,26,33,27,33,28,33,29,33,35,33,36,33,37,33,38,34,0,34,1,34,2,34,3,34,4,34,5,34,6,34,7,34,8,34,9,34,10,34,11,34,12,34,13,34,14,34,15,34,16,34,17,34,18,34,19,34,20,34,21,34,22,34,23,34,24,34,25,34,26,34,27,34,28,34,29,34,30,34,36,34,37,34,38,35,0,35,1,35,2,35,3,35,4,35,5,35,6,35,7,35,8,35,9,35,10,35,11,35,12,35,13,35,14,35,15,35,16,35,17,35,18,35,19,35,20,35,21,35,22,35,23,35,24,35,25,35,26,35,27,35,28,35,29,35,30,35,31,35,37,35,38,]);
constraint int_lin_le([-1,-1,-1,-1,-1,1],[w_00006_00001_INTEGER,w_00002_00001_INTEGER,w_00007_00001_INTEGER,w_00008_00001_INTEGER,w_00004_00001_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,-1,-1,1],[w_00006_00006_INTEGER,w_00002_00006_INTEGER,w_00007_00006_INTEGER,w_00008_00006_INTEGER,w_00004_00006_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,-1,-1,1],[w_00006_00012_INTEGER,w_00002_00012_INTEGER,w_00007_00012_INTEGER,w_00008_00012_INTEGER,w_00004_00012_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,-1,-1,1],[w_00006_00013_INTEGER,w_00002_00013_INTEGER,w_00007_00013_INTEGER,w_00008_00013_INTEGER,w_00004_00013_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,-1,-1,1],[w_00006_00016_INTEGER,w_00002_00016_INTEGER,w_00007_00016_INTEGER,w_00008_00016_INTEGER,w_00004_00016_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,1],[w_00006_00018_INTEGER,w_00002_00018_INTEGER,w_00007_00018_INTEGER,w_00008_00018_INTEGER,w_00004_00018_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,-1,-1,1],[w_00006_00019_INTEGER,w_00002_00019_INTEGER,w_00007_00019_INTEGER,w_00008_00019_INTEGER,w_00004_00019_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,-1],[w_00006_00004_INTEGER,aux1308_INTEGER,aux1309_INTEGER,aux1310_INTEGER,aux1311_INTEGER,aux1312_INTEGER,aux1313_INTEGER,1],0);
constraint int_lin_le([1,1,2,1,1,1,-1],[aux169_INTEGER,aux171_INTEGER,aux172_INTEGER,aux173_INTEGER,aux174_INTEGER,aux21_INTEGER,4],0);
constraint int_lin_le([1,1,-1],[w_00002_00001_INTEGER,aux1314_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,-1],[aux1315_INTEGER,aux1316_INTEGER,aux1317_INTEGER,aux1318_INTEGER,aux1319_INTEGER,aux1320_INTEGER,w_00008_00020_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,-1],[aux1321_INTEGER,aux1322_INTEGER,aux1323_INTEGER,aux1324_INTEGER,aux1325_INTEGER,aux1326_INTEGER,w_00008_00013_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,-1],[w_00007_00014_INTEGER,aux1327_INTEGER,aux1328_INTEGER,aux1329_INTEGER,aux1330_INTEGER,aux1331_INTEGER,aux1332_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,1,1,-1],[aux1333_INTEGER,aux1334_INTEGER,aux1335_INTEGER,aux1336_INTEGER,aux1337_INTEGER,aux1338_INTEGER,aux1339_INTEGER,aux1340_INTEGER,aux1341_INTEGER,w_00004_00016_INTEGER,1],0);
constraint int_lin_le([2,1,1,1,1,1,-1],[aux214_INTEGER,aux215_INTEGER,aux216_INTEGER,aux217_INTEGER,aux219_INTEGER,aux220_INTEGER,2],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,1,-1],[aux1342_INTEGER,aux1343_INTEGER,aux1344_INTEGER,aux1345_INTEGER,aux1346_INTEGER,aux1347_INTEGER,aux1348_INTEGER,aux1349_INTEGER,w_00008_00006_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[w_00004_00004_INTEGER,w_00005_00004_INTEGER,w_00001_00004_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[w_00004_00005_INTEGER,w_00005_00005_INTEGER,w_00001_00005_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,1],[w_00004_00007_INTEGER,w_00005_00007_INTEGER,w_00001_00007_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[w_00004_00008_INTEGER,w_00005_00008_INTEGER,w_00001_00008_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[w_00004_00010_INTEGER,w_00005_00010_INTEGER,w_00001_00010_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[w_00004_00011_INTEGER,w_00005_00011_INTEGER,w_00001_00011_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[w_00004_00013_INTEGER,w_00005_00013_INTEGER,w_00001_00013_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[w_00004_00015_INTEGER,w_00005_00015_INTEGER,w_00001_00015_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[w_00004_00016_INTEGER,w_00005_00016_INTEGER,w_00001_00016_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,-1],[aux1350_INTEGER,aux1351_INTEGER,aux1352_INTEGER,w_00009_00014_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,1,-1],[w_00006_00005_INTEGER,aux1353_INTEGER,aux1354_INTEGER,aux1355_INTEGER,aux1356_INTEGER,aux1357_INTEGER,aux1358_INTEGER,aux1359_INTEGER,aux1360_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,-1],[w_00006_00012_INTEGER,aux1361_INTEGER,aux1362_INTEGER,aux1363_INTEGER,aux1364_INTEGER,aux1365_INTEGER,aux1366_INTEGER,aux1367_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,-1],[aux1376_INTEGER,aux1377_INTEGER,aux1378_INTEGER,aux1379_INTEGER,aux1380_INTEGER,aux1381_INTEGER,w_00004_00018_INTEGER,1],0);
constraint gecode_table_int([s_00001, s_00009, s_00002],[0,4,6,0,4,7,0,4,8,0,4,9,0,4,10,0,4,11,0,4,12,0,4,13,0,4,14,0,4,15,0,4,16,0,4,17,0,4,18,0,4,19,0,4,20,0,4,21,0,4,22,0,4,23,0,4,24,0,4,25,0,4,26,0,4,27,0,4,28,0,4,29,0,4,30,0,4,31,0,4,32,0,4,33,0,4,34,0,4,35,0,4,36,0,4,37,0,4,38,0,5,7,0,5,8,0,5,9,0,5,10,0,5,11,0,5,12,0,5,13,0,5,14,0,5,15,0,5,16,0,5,17,0,5,18,0,5,19,0,5,20,0,5,21,0,5,22,0,5,23,0,5,24,0,5,25,0,5,26,0,5,27,0,5,28,0,5,29,0,5,30,0,5,31,0,5,32,0,5,33,0,5,34,0,5,35,0,5,36,0,5,37,0,5,38,0,6,8,0,6,9,0,6,10,0,6,11,0,6,12,0,6,13,0,6,14,0,6,15,0,6,16,0,6,17,0,6,18,0,6,19,0,6,20,0,6,21,0,6,22,0,6,23,0,6,24,0,6,25,0,6,26,0,6,27,0,6,28,0,6,29,0,6,30,0,6,31,0,6,32,0,6,33,0,6,34,0,6,35,0,6,36,0,6,37,0,6,38,0,7,9,0,7,10,0,7,11,0,7,12,0,7,13,0,7,14,0,7,15,0,7,16,0,7,17,0,7,18,0,7,19,0,7,20,0,7,21,0,7,22,0,7,23,0,7,24,0,7,25,0,7,26,0,7,27,0,7,28,0,7,29,0,7,30,0,7,31,0,7,32,0,7,33,0,7,34,0,7,35,0,7,36,0,7,37,0,7,38,0,8,4,0,8,10,0,8,11,0,8,12,0,8,13,0,8,14,0,8,15,0,8,16,0,8,17,0,8,18,0,8,19,0,8,20,0,8,21,0,8,22,0,8,23,0,8,24,0,8,25,0,8,26,0,8,27,0,8,28,0,8,29,0,8,30,0,8,31,0,8,32,0,8,33,0,8,34,0,8,35,0,8,36,0,8,37,0,8,38,0,9,4,0,9,5,0,9,11,0,9,12,0,9,13,0,9,14,0,9,15,0,9,16,0,9,17,0,9,18,0,9,19,0,9,20,0,9,21,0,9,22,0,9,23,0,9,24,0,9,25,0,9,26,0,9,27,0,9,28,0,9,29,0,9,30,0,9,31,0,9,32,0,9,33,0,9,34,0,9,35,0,9,36,0,9,37,0,9,38,0,10,4,0,10,5,0,10,6,0,10,12,0,10,13,0,10,14,0,10,15,0,10,16,0,10,17,0,10,18,0,10,19,0,10,20,0,10,21,0,10,22,0,10,23,0,10,24,0,10,25,0,10,26,0,10,27,0,10,28,0,10,29,0,10,30,0,10,31,0,10,32,0,10,33,0,10,34,0,10,35,0,10,36,0,10,37,0,10,38,0,11,4,0,11,5,0,11,6,0,11,7,0,11,13,0,11,14,0,11,15,0,11,16,0,11,17,0,11,18,0,11,19,0,11,20,0,11,21,0,11,22,0,11,23,0,11,24,0,11,25,0,11,26,0,11,27,0,11,28,0,11,29,0,11,30,0,11,31,0,11,32,0,11,33,0,11,34,0,11,35,0,11,36,0,11,37,0,11,38,0,12,4,0,12,5,0,12,6,0,12,7,0,12,8,0,12,14,0,12,15,0,12,16,0,12,17,0,12,18,0,12,19,0,12,20,0,12,21,0,12,22,0,12,23,0,12,24,0,12,25,0,12,26,0,12,27,0,12,28,0,12,29,0,12,30,0,12,31,0,12,32,0,12,33,0,12,34,0,12,35,0,12,36,0,12,37,0,12,38,0,13,4,0,13,5,0,13,6,0,13,7,0,13,8,0,13,9,0,13,15,0,13,16,0,13,17,0,13,18,0,13,19,0,13,20,0,13,21,0,13,22,0,13,23,0,13,24,0,13,25,0,13,26,0,13,27,0,13,28,0,13,29,0,13,30,0,13,31,0,13,32,0,13,33,0,13,34,0,13,35,0,13,36,0,13,37,0,13,38,0,14,4,0,14,5,0,14,6,0,14,7,0,14,8,0,14,9,0,14,10,0,14,16,0,14,17,0,14,18,0,14,19,0,14,20,0,14,21,0,14,22,0,14,23,0,14,24,0,14,25,0,14,26,0,14,27,0,14,28,0,14,29,0,14,30,0,14,31,0,14,32,0,14,33,0,14,34,0,14,35,0,14,36,0,14,37,0,14,38,0,15,4,0,15,5,0,15,6,0,15,7,0,15,8,0,15,9,0,15,10,0,15,11,0,15,17,0,15,18,0,15,19,0,15,20,0,15,21,0,15,22,0,15,23,0,15,24,0,15,25,0,15,26,0,15,27,0,15,28,0,15,29,0,15,30,0,15,31,0,15,32,0,15,33,0,15,34,0,15,35,0,15,36,0,15,37,0,15,38,0,16,4,0,16,5,0,16,6,0,16,7,0,16,8,0,16,9,0,16,10,0,16,11,0,16,12,0,16,18,0,16,19,0,16,20,0,16,21,0,16,22,0,16,23,0,16,24,0,16,25,0,16,26,0,16,27,0,16,28,0,16,29,0,16,30,0,16,31,0,16,32,0,16,33,0,16,34,0,16,35,0,16,36,0,16,37,0,16,38,0,17,4,0,17,5,0,17,6,0,17,7,0,17,8,0,17,9,0,17,10,0,17,11,0,17,12,0,17,13,0,17,19,0,17,20,0,17,21,0,17,22,0,17,23,0,17,24,0,17,25,0,17,26,0,17,27,0,17,28,0,17,29,0,17,30,0,17,31,0,17,32,0,17,33,0,17,34,0,17,35,0,17,36,0,17,37,0,17,38,0,18,4,0,18,5,0,18,6,0,18,7,0,18,8,0,18,9,0,18,10,0,18,11,0,18,12,0,18,13,0,18,14,0,18,20,0,18,21,0,18,22,0,18,23,0,18,24,0,18,25,0,18,26,0,18,27,0,18,28,0,18,29,0,18,30,0,18,31,0,18,32,0,18,33,0,18,34,0,18,35,0,18,36,0,18,37,0,18,38,0,19,4,0,19,5,0,19,6,0,19,7,0,19,8,0,19,9,0,19,10,0,19,11,0,19,12,0,19,13,0,19,14,0,19,15,0,19,21,0,19,22,0,19,23,0,19,24,0,19,25,0,19,26,0,19,27,0,19,28,0,19,29,0,19,30,0,19,31,0,19,32,0,19,33,0,19,34,0,19,35,0,19,36,0,19,37,0,19,38,0,20,4,0,20,5,0,20,6,0,20,7,0,20,8,0,20,9,0,20,10,0,20,11,0,20,12,0,20,13,0,20,14,0,20,15,0,20,16,0,20,22,0,20,23,0,20,24,0,20,25,0,20,26,0,20,27,0,20,28,0,20,29,0,20,30,0,20,31,0,20,32,0,20,33,0,20,34,0,20,35,0,20,36,0,20,37,0,20,38,0,21,4,0,21,5,0,21,6,0,21,7,0,21,8,0,21,9,0,21,10,0,21,11,0,21,12,0,21,13,0,21,14,0,21,15,0,21,16,0,21,17,0,21,23,0,21,24,0,21,25,0,21,26,0,21,27,0,21,28,0,21,29,0,21,30,0,21,31,0,21,32,0,21,33,0,21,34,0,21,35,0,21,36,0,21,37,0,21,38,0,22,4,0,22,5,0,22,6,0,22,7,0,22,8,0,22,9,0,22,10,0,22,11,0,22,12,0,22,13,0,22,14,0,22,15,0,22,16,0,22,17,0,22,18,0,22,24,0,22,25,0,22,26,0,22,27,0,22,28,0,22,29,0,22,30,0,22,31,0,22,32,0,22,33,0,22,34,0,22,35,0,22,36,0,22,37,0,22,38,0,23,4,0,23,5,0,23,6,0,23,7,0,23,8,0,23,9,0,23,10,0,23,11,0,23,12,0,23,13,0,23,14,0,23,15,0,23,16,0,23,17,0,23,18,0,23,19,0,23,25,0,23,26,0,23,27,0,23,28,0,23,29,0,23,30,0,23,31,0,23,32,0,23,33,0,23,34,0,23,35,0,23,36,0,23,37,0,23,38,0,24,4,0,24,5,0,24,6,0,24,7,0,24,8,0,24,9,0,24,10,0,24,11,0,24,12,0,24,13,0,24,14,0,24,15,0,24,16,0,24,17,0,24,18,0,24,19,0,24,20,0,24,26,0,24,27,0,24,28,0,24,29,0,24,30,0,24,31,0,24,32,0,24,33,0,24,34,0,24,35,0,24,36,0,24,37,0,24,38,0,25,4,0,25,5,0,25,6,0,25,7,0,25,8,0,25,9,0,25,10,0,25,11,0,25,12,0,25,13,0,25,14,0,25,15,0,25,16,0,25,17,0,25,18,0,25,19,0,25,20,0,25,21,0,25,27,0,25,28,0,25,29,0,25,30,0,25,31,0,25,32,0,25,33,0,25,34,0,25,35,0,25,36,0,25,37,0,25,38,0,26,4,0,26,5,0,26,6,0,26,7,0,26,8,0,26,9,0,26,10,0,26,11,0,26,12,0,26,13,0,26,14,0,26,15,0,26,16,0,26,17,0,26,18,0,26,19,0,26,20,0,26,21,0,26,22,0,26,28,0,26,29,0,26,30,0,26,31,0,26,32,0,26,33,0,26,34,0,26,35,0,26,36,0,26,37,0,26,38,0,27,4,0,27,5,0,27,6,0,27,7,0,27,8,0,27,9,0,27,10,0,27,11,0,27,12,0,27,13,0,27,14,0,27,15,0,27,16,0,27,17,0,27,18,0,27,19,0,27,20,0,27,21,0,27,22,0,27,23,0,27,29,0,27,30,0,27,31,0,27,32,0,27,33,0,27,34,0,27,35,0,27,36,0,27,37,0,27,38,0,28,4,0,28,5,0,28,6,0,28,7,0,28,8,0,28,9,0,28,10,0,28,11,0,28,12,0,28,13,0,28,14,0,28,15,0,28,16,0,28,17,0,28,18,0,28,19,0,28,20,0,28,21,0,28,22,0,28,23,0,28,24,0,28,30,0,28,31,0,28,32,0,28,33,0,28,34,0,28,35,0,28,36,0,28,37,0,28,38,0,29,4,0,29,5,0,29,6,0,29,7,0,29,8,0,29,9,0,29,10,0,29,11,0,29,12,0,29,13,0,29,14,0,29,15,0,29,16,0,29,17,0,29,18,0,29,19,0,29,20,0,29,21,0,29,22,0,29,23,0,29,24,0,29,25,0,29,31,0,29,32,0,29,33,0,29,34,0,29,35,0,29,36,0,29,37,0,29,38,0,30,4,0,30,5,0,30,6,0,30,7,0,30,8,0,30,9,0,30,10,0,30,11,0,30,12,0,30,13,0,30,14,0,30,15,0,30,16,0,30,17,0,30,18,0,30,19,0,30,20,0,30,21,0,30,22,0,30,23,0,30,24,0,30,25,0,30,26,0,30,32,0,30,33,0,30,34,0,30,35,0,30,36,0,30,37,0,30,38,0,31,4,0,31,5,0,31,6,0,31,7,0,31,8,0,31,9,0,31,10,0,31,11,0,31,12,0,31,13,0,31,14,0,31,15,0,31,16,0,31,17,0,31,18,0,31,19,0,31,20,0,31,21,0,31,22,0,31,23,0,31,24,0,31,25,0,31,26,0,31,27,0,31,33,0,31,34,0,31,35,0,31,36,0,31,37,0,31,38,0,32,4,0,32,5,0,32,6,0,32,7,0,32,8,0,32,9,0,32,10,0,32,11,0,32,12,0,32,13,0,32,14,0,32,15,0,32,16,0,32,17,0,32,18,0,32,19,0,32,20,0,32,21,0,32,22,0,32,23,0,32,24,0,32,25,0,32,26,0,32,27,0,32,28,0,32,34,0,32,35,0,32,36,0,32,37,0,32,38,0,33,4,0,33,5,0,33,6,0,33,7,0,33,8,0,33,9,0,33,10,0,33,11,0,33,12,0,33,13,0,33,14,0,33,15,0,33,16,0,33,17,0,33,18,0,33,19,0,33,20,0,33,21,0,33,22,0,33,23,0,33,24,0,33,25,0,33,26,0,33,27,0,33,28,0,33,29,0,33,35,0,33,36,0,33,37,0,33,38,0,34,4,0,34,5,0,34,6,0,34,7,0,34,8,0,34,9,0,34,10,0,34,11,0,34,12,0,34,13,0,34,14,0,34,15,0,34,16,0,34,17,0,34,18,0,34,19,0,34,20,0,34,21,0,34,22,0,34,23,0,34,24,0,34,25,0,34,26,0,34,27,0,34,28,0,34,29,0,34,30,0,34,36,0,34,37,0,34,38,0,35,4,0,35,5,0,35,6,0,35,7,0,35,8,0,35,9,0,35,10,0,35,11,0,35,12,0,35,13,0,35,14,0,35,15,0,35,16,0,35,17,0,35,18,0,35,19,0,35,20,0,35,21,0,35,22,0,35,23,0,35,24,0,35,25,0,35,26,0,35,27,0,35,28,0,35,29,0,35,30,0,35,31,0,35,37,0,35,38,1,5,7,1,5,8,1,5,9,1,5,10,1,5,11,1,5,12,1,5,13,1,5,14,1,5,15,1,5,16,1,5,17,1,5,18,1,5,19,1,5,20,1,5,21,1,5,22,1,5,23,1,5,24,1,5,25,1,5,26,1,5,27,1,5,28,1,5,29,1,5,30,1,5,31,1,5,32,1,5,33,1,5,34,1,5,35,1,5,36,1,5,37,1,5,38,1,6,8,1,6,9,1,6,10,1,6,11,1,6,12,1,6,13,1,6,14,1,6,15,1,6,16,1,6,17,1,6,18,1,6,19,1,6,20,1,6,21,1,6,22,1,6,23,1,6,24,1,6,25,1,6,26,1,6,27,1,6,28,1,6,29,1,6,30,1,6,31,1,6,32,1,6,33,1,6,34,1,6,35,1,6,36,1,6,37,1,6,38,1,7,9,1,7,10,1,7,11,1,7,12,1,7,13,1,7,14,1,7,15,1,7,16,1,7,17,1,7,18,1,7,19,1,7,20,1,7,21,1,7,22,1,7,23,1,7,24,1,7,25,1,7,26,1,7,27,1,7,28,1,7,29,1,7,30,1,7,31,1,7,32,1,7,33,1,7,34,1,7,35,1,7,36,1,7,37,1,7,38,1,8,10,1,8,11,1,8,12,1,8,13,1,8,14,1,8,15,1,8,16,1,8,17,1,8,18,1,8,19,1,8,20,1,8,21,1,8,22,1,8,23,1,8,24,1,8,25,1,8,26,1,8,27,1,8,28,1,8,29,1,8,30,1,8,31,1,8,32,1,8,33,1,8,34,1,8,35,1,8,36,1,8,37,1,8,38,1,9,5,1,9,11,1,9,12,1,9,13,1,9,14,1,9,15,1,9,16,1,9,17,1,9,18,1,9,19,1,9,20,1,9,21,1,9,22,1,9,23,1,9,24,1,9,25,1,9,26,1,9,27,1,9,28,1,9,29,1,9,30,1,9,31,1,9,32,1,9,33,1,9,34,1,9,35,1,9,36,1,9,37,1,9,38,1,10,5,1,10,6,1,10,12,1,10,13,1,10,14,1,10,15,1,10,16,1,10,17,1,10,18,1,10,19,1,10,20,1,10,21,1,10,22,1,10,23,1,10,24,1,10,25,1,10,26,1,10,27,1,10,28,1,10,29,1,10,30,1,10,31,1,10,32,1,10,33,1,10,34,1,10,35,1,10,36,1,10,37,1,10,38,1,11,5,1,11,6,1,11,7,1,11,13,1,11,14,1,11,15,1,11,16,1,11,17,1,11,18,1,11,19,1,11,20,1,11,21,1,11,22,1,11,23,1,11,24,1,11,25,1,11,26,1,11,27,1,11,28,1,11,29,1,11,30,1,11,31,1,11,32,1,11,33,1,11,34,1,11,35,1,11,36,1,11,37,1,11,38,1,12,5,1,12,6,1,12,7,1,12,8,1,12,14,1,12,15,1,12,16,1,12,17,1,12,18,1,12,19,1,12,20,1,12,21,1,12,22,1,12,23,1,12,24,1,12,25,1,12,26,1,12,27,1,12,28,1,12,29,1,12,30,1,12,31,1,12,32,1,12,33,1,12,34,1,12,35,1,12,36,1,12,37,1,12,38,1,13,5,1,13,6,1,13,7,1,13,8,1,13,9,1,13,15,1,13,16,1,13,17,1,13,18,1,13,19,1,13,20,1,13,21,1,13,22,1,13,23,1,13,24,1,13,25,1,13,26,1,13,27,1,13,28,1,13,29,1,13,30,1,13,31,1,13,32,1,13,33,1,13,34,1,13,35,1,13,36,1,13,37,1,13,38,1,14,5,1,14,6,1,14,7,1,14,8,1,14,9,1,14,10,1,14,16,1,14,17,1,14,18,1,14,19,1,14,20,1,14,21,1,14,22,1,14,23,1,14,24,1,14,25,1,14,26,1,14,27,1,14,28,1,14,29,1,14,30,1,14,31,1,14,32,1,14,33,1,14,34,1,14,35,1,14,36,1,14,37,1,14,38,1,15,5,1,15,6,1,15,7,1,15,8,1,15,9,1,15,10,1,15,11,1,15,17,1,15,18,1,15,19,1,15,20,1,15,21,1,15,22,1,15,23,1,15,24,1,15,25,1,15,26,1,15,27,1,15,28,1,15,29,1,15,30,1,15,31,1,15,32,1,15,33,1,15,34,1,15,35,1,15,36,1,15,37,1,15,38,1,16,5,1,16,6,1,16,7,1,16,8,1,16,9,1,16,10,1,16,11,1,16,12,1,16,18,1,16,19,1,16,20,1,16,21,1,16,22,1,16,23,1,16,24,1,16,25,1,16,26,1,16,27,1,16,28,1,16,29,1,16,30,1,16,31,1,16,32,1,16,33,1,16,34,1,16,35,1,16,36,1,16,37,1,16,38,1,17,5,1,17,6,1,17,7,1,17,8,1,17,9,1,17,10,1,17,11,1,17,12,1,17,13,1,17,19,1,17,20,1,17,21,1,17,22,1,17,23,1,17,24,1,17,25,1,17,26,1,17,27,1,17,28,1,17,29,1,17,30,1,17,31,1,17,32,1,17,33,1,17,34,1,17,35,1,17,36,1,17,37,1,17,38,1,18,5,1,18,6,1,18,7,1,18,8,1,18,9,1,18,10,1,18,11,1,18,12,1,18,13,1,18,14,1,18,20,1,18,21,1,18,22,1,18,23,1,18,24,1,18,25,1,18,26,1,18,27,1,18,28,1,18,29,1,18,30,1,18,31,1,18,32,1,18,33,1,18,34,1,18,35,1,18,36,1,18,37,1,18,38,1,19,5,1,19,6,1,19,7,1,19,8,1,19,9,1,19,10,1,19,11,1,19,12,1,19,13,1,19,14,1,19,15,1,19,21,1,19,22,1,19,23,1,19,24,1,19,25,1,19,26,1,19,27,1,19,28,1,19,29,1,19,30,1,19,31,1,19,32,1,19,33,1,19,34,1,19,35,1,19,36,1,19,37,1,19,38,1,20,5,1,20,6,1,20,7,1,20,8,1,20,9,1,20,10,1,20,11,1,20,12,1,20,13,1,20,14,1,20,15,1,20,16,1,20,22,1,20,23,1,20,24,1,20,25,1,20,26,1,20,27,1,20,28,1,20,29,1,20,30,1,20,31,1,20,32,1,20,33,1,20,34,1,20,35,1,20,36,1,20,37,1,20,38,1,21,5,1,21,6,1,21,7,1,21,8,1,21,9,1,21,10,1,21,11,1,21,12,1,21,13,1,21,14,1,21,15,1,21,16,1,21,17,1,21,23,1,21,24,1,21,25,1,21,26,1,21,27,1,21,28,1,21,29,1,21,30,1,21,31,1,21,32,1,21,33,1,21,34,1,21,35,1,21,36,1,21,37,1,21,38,1,22,5,1,22,6,1,22,7,1,22,8,1,22,9,1,22,10,1,22,11,1,22,12,1,22,13,1,22,14,1,22,15,1,22,16,1,22,17,1,22,18,1,22,24,1,22,25,1,22,26,1,22,27,1,22,28,1,22,29,1,22,30,1,22,31,1,22,32,1,22,33,1,22,34,1,22,35,1,22,36,1,22,37,1,22,38,1,23,5,1,23,6,1,23,7,1,23,8,1,23,9,1,23,10,1,23,11,1,23,12,1,23,13,1,23,14,1,23,15,1,23,16,1,23,17,1,23,18,1,23,19,1,23,25,1,23,26,1,23,27,1,23,28,1,23,29,1,23,30,1,23,31,1,23,32,1,23,33,1,23,34,1,23,35,1,23,36,1,23,37,1,23,38,1,24,5,1,24,6,1,24,7,1,24,8,1,24,9,1,24,10,1,24,11,1,24,12,1,24,13,1,24,14,1,24,15,1,24,16,1,24,17,1,24,18,1,24,19,1,24,20,1,24,26,1,24,27,1,24,28,1,24,29,1,24,30,1,24,31,1,24,32,1,24,33,1,24,34,1,24,35,1,24,36,1,24,37,1,24,38,1,25,5,1,25,6,1,25,7,1,25,8,1,25,9,1,25,10,1,25,11,1,25,12,1,25,13,1,25,14,1,25,15,1,25,16,1,25,17,1,25,18,1,25,19,1,25,20,1,25,21,1,25,27,1,25,28,1,25,29,1,25,30,1,25,31,1,25,32,1,25,33,1,25,34,1,25,35,1,25,36,1,25,37,1,25,38,1,26,5,1,26,6,1,26,7,1,26,8,1,26,9,1,26,10,1,26,11,1,26,12,1,26,13,1,26,14,1,26,15,1,26,16,1,26,17,1,26,18,1,26,19,1,26,20,1,26,21,1,26,22,1,26,28,1,26,29,1,26,30,1,26,31,1,26,32,1,26,33,1,26,34,1,26,35,1,26,36,1,26,37,1,26,38,1,27,5,1,27,6,1,27,7,1,27,8,1,27,9,1,27,10,1,27,11,1,27,12,1,27,13,1,27,14,1,27,15,1,27,16,1,27,17,1,27,18,1,27,19,1,27,20,1,27,21,1,27,22,1,27,23,1,27,29,1,27,30,1,27,31,1,27,32,1,27,33,1,27,34,1,27,35,1,27,36,1,27,37,1,27,38,1,28,5,1,28,6,1,28,7,1,28,8,1,28,9,1,28,10,1,28,11,1,28,12,1,28,13,1,28,14,1,28,15,1,28,16,1,28,17,1,28,18,1,28,19,1,28,20,1,28,21,1,28,22,1,28,23,1,28,24,1,28,30,1,28,31,1,28,32,1,28,33,1,28,34,1,28,35,1,28,36,1,28,37,1,28,38,1,29,5,1,29,6,1,29,7,1,29,8,1,29,9,1,29,10,1,29,11,1,29,12,1,29,13,1,29,14,1,29,15,1,29,16,1,29,17,1,29,18,1,29,19,1,29,20,1,29,21,1,29,22,1,29,23,1,29,24,1,29,25,1,29,31,1,29,32,1,29,33,1,29,34,1,29,35,1,29,36,1,29,37,1,29,38,1,30,5,1,30,6,1,30,7,1,30,8,1,30,9,1,30,10,1,30,11,1,30,12,1,30,13,1,30,14,1,30,15,1,30,16,1,30,17,1,30,18,1,30,19,1,30,20,1,30,21,1,30,22,1,30,23,1,30,24,1,30,25,1,30,26,1,30,32,1,30,33,1,30,34,1,30,35,1,30,36,1,30,37,1,30,38,1,31,5,1,31,6,1,31,7,1,31,8,1,31,9,1,31,10,1,31,11,1,31,12,1,31,13,1,31,14,1,31,15,1,31,16,1,31,17,1,31,18,1,31,19,1,31,20,1,31,21,1,31,22,1,31,23,1,31,24,1,31,25,1,31,26,1,31,27,1,31,33,1,31,34,1,31,35,1,31,36,1,31,37,1,31,38,1,32,5,1,32,6,1,32,7,1,32,8,1,32,9,1,32,10,1,32,11,1,32,12,1,32,13,1,32,14,1,32,15,1,32,16,1,32,17,1,32,18,1,32,19,1,32,20,1,32,21,1,32,22,1,32,23,1,32,24,1,32,25,1,32,26,1,32,27,1,32,28,1,32,34,1,32,35,1,32,36,1,32,37,1,32,38,1,33,5,1,33,6,1,33,7,1,33,8,1,33,9,1,33,10,1,33,11,1,33,12,1,33,13,1,33,14,1,33,15,1,33,16,1,33,17,1,33,18,1,33,19,1,33,20,1,33,21,1,33,22,1,33,23,1,33,24,1,33,25,1,33,26,1,33,27,1,33,28,1,33,29,1,33,35,1,33,36,1,33,37,1,33,38,1,34,5,1,34,6,1,34,7,1,34,8,1,34,9,1,34,10,1,34,11,1,34,12,1,34,13,1,34,14,1,34,15,1,34,16,1,34,17,1,34,18,1,34,19,1,34,20,1,34,21,1,34,22,1,34,23,1,34,24,1,34,25,1,34,26,1,34,27,1,34,28,1,34,29,1,34,30,1,34,36,1,34,37,1,34,38,1,35,5,1,35,6,1,35,7,1,35,8,1,35,9,1,35,10,1,35,11,1,35,12,1,35,13,1,35,14,1,35,15,1,35,16,1,35,17,1,35,18,1,35,19,1,35,20,1,35,21,1,35,22,1,35,23,1,35,24,1,35,25,1,35,26,1,35,27,1,35,28,1,35,29,1,35,30,1,35,31,1,35,37,1,35,38,2,6,8,2,6,9,2,6,10,2,6,11,2,6,12,2,6,13,2,6,14,2,6,15,2,6,16,2,6,17,2,6,18,2,6,19,2,6,20,2,6,21,2,6,22,2,6,23,2,6,24,2,6,25,2,6,26,2,6,27,2,6,28,2,6,29,2,6,30,2,6,31,2,6,32,2,6,33,2,6,34,2,6,35,2,6,36,2,6,37,2,6,38,2,7,9,2,7,10,2,7,11,2,7,12,2,7,13,2,7,14,2,7,15,2,7,16,2,7,17,2,7,18,2,7,19,2,7,20,2,7,21,2,7,22,2,7,23,2,7,24,2,7,25,2,7,26,2,7,27,2,7,28,2,7,29,2,7,30,2,7,31,2,7,32,2,7,33,2,7,34,2,7,35,2,7,36,2,7,37,2,7,38,2,8,10,2,8,11,2,8,12,2,8,13,2,8,14,2,8,15,2,8,16,2,8,17,2,8,18,2,8,19,2,8,20,2,8,21,2,8,22,2,8,23,2,8,24,2,8,25,2,8,26,2,8,27,2,8,28,2,8,29,2,8,30,2,8,31,2,8,32,2,8,33,2,8,34,2,8,35,2,8,36,2,8,37,2,8,38,2,9,11,2,9,12,2,9,13,2,9,14,2,9,15,2,9,16,2,9,17,2,9,18,2,9,19,2,9,20,2,9,21,2,9,22,2,9,23,2,9,24,2,9,25,2,9,26,2,9,27,2,9,28,2,9,29,2,9,30,2,9,31,2,9,32,2,9,33,2,9,34,2,9,35,2,9,36,2,9,37,2,9,38,2,10,6,2,10,12,2,10,13,2,10,14,2,10,15,2,10,16,2,10,17,2,10,18,2,10,19,2,10,20,2,10,21,2,10,22,2,10,23,2,10,24,2,10,25,2,10,26,2,10,27,2,10,28,2,10,29,2,10,30,2,10,31,2,10,32,2,10,33,2,10,34,2,10,35,2,10,36,2,10,37,2,10,38,2,11,6,2,11,7,2,11,13,2,11,14,2,11,15,2,11,16,2,11,17,2,11,18,2,11,19,2,11,20,2,11,21,2,11,22,2,11,23,2,11,24,2,11,25,2,11,26,2,11,27,2,11,28,2,11,29,2,11,30,2,11,31,2,11,32,2,11,33,2,11,34,2,11,35,2,11,36,2,11,37,2,11,38,2,12,6,2,12,7,2,12,8,2,12,14,2,12,15,2,12,16,2,12,17,2,12,18,2,12,19,2,12,20,2,12,21,2,12,22,2,12,23,2,12,24,2,12,25,2,12,26,2,12,27,2,12,28,2,12,29,2,12,30,2,12,31,2,12,32,2,12,33,2,12,34,2,12,35,2,12,36,2,12,37,2,12,38,2,13,6,2,13,7,2,13,8,2,13,9,2,13,15,2,13,16,2,13,17,2,13,18,2,13,19,2,13,20,2,13,21,2,13,22,2,13,23,2,13,24,2,13,25,2,13,26,2,13,27,2,13,28,2,13,29,2,13,30,2,13,31,2,13,32,2,13,33,2,13,34,2,13,35,2,13,36,2,13,37,2,13,38,2,14,6,2,14,7,2,14,8,2,14,9,2,14,10,2,14,16,2,14,17,2,14,18,2,14,19,2,14,20,2,14,21,2,14,22,2,14,23,2,14,24,2,14,25,2,14,26,2,14,27,2,14,28,2,14,29,2,14,30,2,14,31,2,14,32,2,14,33,2,14,34,2,14,35,2,14,36,2,14,37,2,14,38,2,15,6,2,15,7,2,15,8,2,15,9,2,15,10,2,15,11,2,15,17,2,15,18,2,15,19,2,15,20,2,15,21,2,15,22,2,15,23,2,15,24,2,15,25,2,15,26,2,15,27,2,15,28,2,15,29,2,15,30,2,15,31,2,15,32,2,15,33,2,15,34,2,15,35,2,15,36,2,15,37,2,15,38,2,16,6,2,16,7,2,16,8,2,16,9,2,16,10,2,16,11,2,16,12,2,16,18,2,16,19,2,16,20,2,16,21,2,16,22,2,16,23,2,16,24,2,16,25,2,16,26,2,16,27,2,16,28,2,16,29,2,16,30,2,16,31,2,16,32,2,16,33,2,16,34,2,16,35,2,16,36,2,16,37,2,16,38,2,17,6,2,17,7,2,17,8,2,17,9,2,17,10,2,17,11,2,17,12,2,17,13,2,17,19,2,17,20,2,17,21,2,17,22,2,17,23,2,17,24,2,17,25,2,17,26,2,17,27,2,17,28,2,17,29,2,17,30,2,17,31,2,17,32,2,17,33,2,17,34,2,17,35,2,17,36,2,17,37,2,17,38,2,18,6,2,18,7,2,18,8,2,18,9,2,18,10,2,18,11,2,18,12,2,18,13,2,18,14,2,18,20,2,18,21,2,18,22,2,18,23,2,18,24,2,18,25,2,18,26,2,18,27,2,18,28,2,18,29,2,18,30,2,18,31,2,18,32,2,18,33,2,18,34,2,18,35,2,18,36,2,18,37,2,18,38,2,19,6,2,19,7,2,19,8,2,19,9,2,19,10,2,19,11,2,19,12,2,19,13,2,19,14,2,19,15,2,19,21,2,19,22,2,19,23,2,19,24,2,19,25,2,19,26,2,19,27,2,19,28,2,19,29,2,19,30,2,19,31,2,19,32,2,19,33,2,19,34,2,19,35,2,19,36,2,19,37,2,19,38,2,20,6,2,20,7,2,20,8,2,20,9,2,20,10,2,20,11,2,20,12,2,20,13,2,20,14,2,20,15,2,20,16,2,20,22,2,20,23,2,20,24,2,20,25,2,20,26,2,20,27,2,20,28,2,20,29,2,20,30,2,20,31,2,20,32,2,20,33,2,20,34,2,20,35,2,20,36,2,20,37,2,20,38,2,21,6,2,21,7,2,21,8,2,21,9,2,21,10,2,21,11,2,21,12,2,21,13,2,21,14,2,21,15,2,21,16,2,21,17,2,21,23,2,21,24,2,21,25,2,21,26,2,21,27,2,21,28,2,21,29,2,21,30,2,21,31,2,21,32,2,21,33,2,21,34,2,21,35,2,21,36,2,21,37,2,21,38,2,22,6,2,22,7,2,22,8,2,22,9,2,22,10,2,22,11,2,22,12,2,22,13,2,22,14,2,22,15,2,22,16,2,22,17,2,22,18,2,22,24,2,22,25,2,22,26,2,22,27,2,22,28,2,22,29,2,22,30,2,22,31,2,22,32,2,22,33,2,22,34,2,22,35,2,22,36,2,22,37,2,22,38,2,23,6,2,23,7,2,23,8,2,23,9,2,23,10,2,23,11,2,23,12,2,23,13,2,23,14,2,23,15,2,23,16,2,23,17,2,23,18,2,23,19,2,23,25,2,23,26,2,23,27,2,23,28,2,23,29,2,23,30,2,23,31,2,23,32,2,23,33,2,23,34,2,23,35,2,23,36,2,23,37,2,23,38,2,24,6,2,24,7,2,24,8,2,24,9,2,24,10,2,24,11,2,24,12,2,24,13,2,24,14,2,24,15,2,24,16,2,24,17,2,24,18,2,24,19,2,24,20,2,24,26,2,24,27,2,24,28,2,24,29,2,24,30,2,24,31,2,24,32,2,24,33,2,24,34,2,24,35,2,24,36,2,24,37,2,24,38,2,25,6,2,25,7,2,25,8,2,25,9,2,25,10,2,25,11,2,25,12,2,25,13,2,25,14,2,25,15,2,25,16,2,25,17,2,25,18,2,25,19,2,25,20,2,25,21,2,25,27,2,25,28,2,25,29,2,25,30,2,25,31,2,25,32,2,25,33,2,25,34,2,25,35,2,25,36,2,25,37,2,25,38,2,26,6,2,26,7,2,26,8,2,26,9,2,26,10,2,26,11,2,26,12,2,26,13,2,26,14,2,26,15,2,26,16,2,26,17,2,26,18,2,26,19,2,26,20,2,26,21,2,26,22,2,26,28,2,26,29,2,26,30,2,26,31,2,26,32,2,26,33,2,26,34,2,26,35,2,26,36,2,26,37,2,26,38,2,27,6,2,27,7,2,27,8,2,27,9,2,27,10,2,27,11,2,27,12,2,27,13,2,27,14,2,27,15,2,27,16,2,27,17,2,27,18,2,27,19,2,27,20,2,27,21,2,27,22,2,27,23,2,27,29,2,27,30,2,27,31,2,27,32,2,27,33,2,27,34,2,27,35,2,27,36,2,27,37,2,27,38,2,28,6,2,28,7,2,28,8,2,28,9,2,28,10,2,28,11,2,28,12,2,28,13,2,28,14,2,28,15,2,28,16,2,28,17,2,28,18,2,28,19,2,28,20,2,28,21,2,28,22,2,28,23,2,28,24,2,28,30,2,28,31,2,28,32,2,28,33,2,28,34,2,28,35,2,28,36,2,28,37,2,28,38,2,29,6,2,29,7,2,29,8,2,29,9,2,29,10,2,29,11,2,29,12,2,29,13,2,29,14,2,29,15,2,29,16,2,29,17,2,29,18,2,29,19,2,29,20,2,29,21,2,29,22,2,29,23,2,29,24,2,29,25,2,29,31,2,29,32,2,29,33,2,29,34,2,29,35,2,29,36,2,29,37,2,29,38,2,30,6,2,30,7,2,30,8,2,30,9,2,30,10,2,30,11,2,30,12,2,30,13,2,30,14,2,30,15,2,30,16,2,30,17,2,30,18,2,30,19,2,30,20,2,30,21,2,30,22,2,30,23,2,30,24,2,30,25,2,30,26,2,30,32,2,30,33,2,30,34,2,30,35,2,30,36,2,30,37,2,30,38,2,31,6,2,31,7,2,31,8,2,31,9,2,31,10,2,31,11,2,31,12,2,31,13,2,31,14,2,31,15,2,31,16,2,31,17,2,31,18,2,31,19,2,31,20,2,31,21,2,31,22,2,31,23,2,31,24,2,31,25,2,31,26,2,31,27,2,31,33,2,31,34,2,31,35,2,31,36,2,31,37,2,31,38,2,32,6,2,32,7,2,32,8,2,32,9,2,32,10,2,32,11,2,32,12,2,32,13,2,32,14,2,32,15,2,32,16,2,32,17,2,32,18,2,32,19,2,32,20,2,32,21,2,32,22,2,32,23,2,32,24,2,32,25,2,32,26,2,32,27,2,32,28,2,32,34,2,32,35,2,32,36,2,32,37,2,32,38,2,33,6,2,33,7,2,33,8,2,33,9,2,33,10,2,33,11,2,33,12,2,33,13,2,33,14,2,33,15,2,33,16,2,33,17,2,33,18,2,33,19,2,33,20,2,33,21,2,33,22,2,33,23,2,33,24,2,33,25,2,33,26,2,33,27,2,33,28,2,33,29,2,33,35,2,33,36,2,33,37,2,33,38,2,34,6,2,34,7,2,34,8,2,34,9,2,34,10,2,34,11,2,34,12,2,34,13,2,34,14,2,34,15,2,34,16,2,34,17,2,34,18,2,34,19,2,34,20,2,34,21,2,34,22,2,34,23,2,34,24,2,34,25,2,34,26,2,34,27,2,34,28,2,34,29,2,34,30,2,34,36,2,34,37,2,34,38,2,35,6,2,35,7,2,35,8,2,35,9,2,35,10,2,35,11,2,35,12,2,35,13,2,35,14,2,35,15,2,35,16,2,35,17,2,35,18,2,35,19,2,35,20,2,35,21,2,35,22,2,35,23,2,35,24,2,35,25,2,35,26,2,35,27,2,35,28,2,35,29,2,35,30,2,35,31,2,35,37,2,35,38,3,7,9,3,7,10,3,7,11,3,7,12,3,7,13,3,7,14,3,7,15,3,7,16,3,7,17,3,7,18,3,7,19,3,7,20,3,7,21,3,7,22,3,7,23,3,7,24,3,7,25,3,7,26,3,7,27,3,7,28,3,7,29,3,7,30,3,7,31,3,7,32,3,7,33,3,7,34,3,7,35,3,7,36,3,7,37,3,7,38,3,8,10,3,8,11,3,8,12,3,8,13,3,8,14,3,8,15,3,8,16,3,8,17,3,8,18,3,8,19,3,8,20,3,8,21,3,8,22,3,8,23,3,8,24,3,8,25,3,8,26,3,8,27,3,8,28,3,8,29,3,8,30,3,8,31,3,8,32,3,8,33,3,8,34,3,8,35,3,8,36,3,8,37,3,8,38,3,9,11,3,9,12,3,9,13,3,9,14,3,9,15,3,9,16,3,9,17,3,9,18,3,9,19,3,9,20,3,9,21,3,9,22,3,9,23,3,9,24,3,9,25,3,9,26,3,9,27,3,9,28,3,9,29,3,9,30,3,9,31,3,9,32,3,9,33,3,9,34,3,9,35,3,9,36,3,9,37,3,9,38,3,10,12,3,10,13,3,10,14,3,10,15,3,10,16,3,10,17,3,10,18,3,10,19,3,10,20,3,10,21,3,10,22,3,10,23,3,10,24,3,10,25,3,10,26,3,10,27,3,10,28,3,10,29,3,10,30,3,10,31,3,10,32,3,10,33,3,10,34,3,10,35,3,10,36,3,10,37,3,10,38,3,11,7,3,11,13,3,11,14,3,11,15,3,11,16,3,11,17,3,11,18,3,11,19,3,11,20,3,11,21,3,11,22,3,11,23,3,11,24,3,11,25,3,11,26,3,11,27,3,11,28,3,11,29,3,11,30,3,11,31,3,11,32,3,11,33,3,11,34,3,11,35,3,11,36,3,11,37,3,11,38,3,12,7,3,12,8,3,12,14,3,12,15,3,12,16,3,12,17,3,12,18,3,12,19,3,12,20,3,12,21,3,12,22,3,12,23,3,12,24,3,12,25,3,12,26,3,12,27,3,12,28,3,12,29,3,12,30,3,12,31,3,12,32,3,12,33,3,12,34,3,12,35,3,12,36,3,12,37,3,12,38,3,13,7,3,13,8,3,13,9,3,13,15,3,13,16,3,13,17,3,13,18,3,13,19,3,13,20,3,13,21,3,13,22,3,13,23,3,13,24,3,13,25,3,13,26,3,13,27,3,13,28,3,13,29,3,13,30,3,13,31,3,13,32,3,13,33,3,13,34,3,13,35,3,13,36,3,13,37,3,13,38,3,14,7,3,14,8,3,14,9,3,14,10,3,14,16,3,14,17,3,14,18,3,14,19,3,14,20,3,14,21,3,14,22,3,14,23,3,14,24,3,14,25,3,14,26,3,14,27,3,14,28,3,14,29,3,14,30,3,14,31,3,14,32,3,14,33,3,14,34,3,14,35,3,14,36,3,14,37,3,14,38,3,15,7,3,15,8,3,15,9,3,15,10,3,15,11,3,15,17,3,15,18,3,15,19,3,15,20,3,15,21,3,15,22,3,15,23,3,15,24,3,15,25,3,15,26,3,15,27,3,15,28,3,15,29,3,15,30,3,15,31,3,15,32,3,15,33,3,15,34,3,15,35,3,15,36,3,15,37,3,15,38,3,16,7,3,16,8,3,16,9,3,16,10,3,16,11,3,16,12,3,16,18,3,16,19,3,16,20,3,16,21,3,16,22,3,16,23,3,16,24,3,16,25,3,16,26,3,16,27,3,16,28,3,16,29,3,16,30,3,16,31,3,16,32,3,16,33,3,16,34,3,16,35,3,16,36,3,16,37,3,16,38,3,17,7,3,17,8,3,17,9,3,17,10,3,17,11,3,17,12,3,17,13,3,17,19,3,17,20,3,17,21,3,17,22,3,17,23,3,17,24,3,17,25,3,17,26,3,17,27,3,17,28,3,17,29,3,17,30,3,17,31,3,17,32,3,17,33,3,17,34,3,17,35,3,17,36,3,17,37,3,17,38,3,18,7,3,18,8,3,18,9,3,18,10,3,18,11,3,18,12,3,18,13,3,18,14,3,18,20,3,18,21,3,18,22,3,18,23,3,18,24,3,18,25,3,18,26,3,18,27,3,18,28,3,18,29,3,18,30,3,18,31,3,18,32,3,18,33,3,18,34,3,18,35,3,18,36,3,18,37,3,18,38,3,19,7,3,19,8,3,19,9,3,19,10,3,19,11,3,19,12,3,19,13,3,19,14,3,19,15,3,19,21,3,19,22,3,19,23,3,19,24,3,19,25,3,19,26,3,19,27,3,19,28,3,19,29,3,19,30,3,19,31,3,19,32,3,19,33,3,19,34,3,19,35,3,19,36,3,19,37,3,19,38,3,20,7,3,20,8,3,20,9,3,20,10,3,20,11,3,20,12,3,20,13,3,20,14,3,20,15,3,20,16,3,20,22,3,20,23,3,20,24,3,20,25,3,20,26,3,20,27,3,20,28,3,20,29,3,20,30,3,20,31,3,20,32,3,20,33,3,20,34,3,20,35,3,20,36,3,20,37,3,20,38,3,21,7,3,21,8,3,21,9,3,21,10,3,21,11,3,21,12,3,21,13,3,21,14,3,21,15,3,21,16,3,21,17,3,21,23,3,21,24,3,21,25,3,21,26,3,21,27,3,21,28,3,21,29,3,21,30,3,21,31,3,21,32,3,21,33,3,21,34,3,21,35,3,21,36,3,21,37,3,21,38,3,22,7,3,22,8,3,22,9,3,22,10,3,22,11,3,22,12,3,22,13,3,22,14,3,22,15,3,22,16,3,22,17,3,22,18,3,22,24,3,22,25,3,22,26,3,22,27,3,22,28,3,22,29,3,22,30,3,22,31,3,22,32,3,22,33,3,22,34,3,22,35,3,22,36,3,22,37,3,22,38,3,23,7,3,23,8,3,23,9,3,23,10,3,23,11,3,23,12,3,23,13,3,23,14,3,23,15,3,23,16,3,23,17,3,23,18,3,23,19,3,23,25,3,23,26,3,23,27,3,23,28,3,23,29,3,23,30,3,23,31,3,23,32,3,23,33,3,23,34,3,23,35,3,23,36,3,23,37,3,23,38,3,24,7,3,24,8,3,24,9,3,24,10,3,24,11,3,24,12,3,24,13,3,24,14,3,24,15,3,24,16,3,24,17,3,24,18,3,24,19,3,24,20,3,24,26,3,24,27,3,24,28,3,24,29,3,24,30,3,24,31,3,24,32,3,24,33,3,24,34,3,24,35,3,24,36,3,24,37,3,24,38,3,25,7,3,25,8,3,25,9,3,25,10,3,25,11,3,25,12,3,25,13,3,25,14,3,25,15,3,25,16,3,25,17,3,25,18,3,25,19,3,25,20,3,25,21,3,25,27,3,25,28,3,25,29,3,25,30,3,25,31,3,25,32,3,25,33,3,25,34,3,25,35,3,25,36,3,25,37,3,25,38,3,26,7,3,26,8,3,26,9,3,26,10,3,26,11,3,26,12,3,26,13,3,26,14,3,26,15,3,26,16,3,26,17,3,26,18,3,26,19,3,26,20,3,26,21,3,26,22,3,26,28,3,26,29,3,26,30,3,26,31,3,26,32,3,26,33,3,26,34,3,26,35,3,26,36,3,26,37,3,26,38,3,27,7,3,27,8,3,27,9,3,27,10,3,27,11,3,27,12,3,27,13,3,27,14,3,27,15,3,27,16,3,27,17,3,27,18,3,27,19,3,27,20,3,27,21,3,27,22,3,27,23,3,27,29,3,27,30,3,27,31,3,27,32,3,27,33,3,27,34,3,27,35,3,27,36,3,27,37,3,27,38,3,28,7,3,28,8,3,28,9,3,28,10,3,28,11,3,28,12,3,28,13,3,28,14,3,28,15,3,28,16,3,28,17,3,28,18,3,28,19,3,28,20,3,28,21,3,28,22,3,28,23,3,28,24,3,28,30,3,28,31,3,28,32,3,28,33,3,28,34,3,28,35,3,28,36,3,28,37,3,28,38,3,29,7,3,29,8,3,29,9,3,29,10,3,29,11,3,29,12,3,29,13,3,29,14,3,29,15,3,29,16,3,29,17,3,29,18,3,29,19,3,29,20,3,29,21,3,29,22,3,29,23,3,29,24,3,29,25,3,29,31,3,29,32,3,29,33,3,29,34,3,29,35,3,29,36,3,29,37,3,29,38,3,30,7,3,30,8,3,30,9,3,30,10,3,30,11,3,30,12,3,30,13,3,30,14,3,30,15,3,30,16,3,30,17,3,30,18,3,30,19,3,30,20,3,30,21,3,30,22,3,30,23,3,30,24,3,30,25,3,30,26,3,30,32,3,30,33,3,30,34,3,30,35,3,30,36,3,30,37,3,30,38,3,31,7,3,31,8,3,31,9,3,31,10,3,31,11,3,31,12,3,31,13,3,31,14,3,31,15,3,31,16,3,31,17,3,31,18,3,31,19,3,31,20,3,31,21,3,31,22,3,31,23,3,31,24,3,31,25,3,31,26,3,31,27,3,31,33,3,31,34,3,31,35,3,31,36,3,31,37,3,31,38,3,32,7,3,32,8,3,32,9,3,32,10,3,32,11,3,32,12,3,32,13,3,32,14,3,32,15,3,32,16,3,32,17,3,32,18,3,32,19,3,32,20,3,32,21,3,32,22,3,32,23,3,32,24,3,32,25,3,32,26,3,32,27,3,32,28,3,32,34,3,32,35,3,32,36,3,32,37,3,32,38,3,33,7,3,33,8,3,33,9,3,33,10,3,33,11,3,33,12,3,33,13,3,33,14,3,33,15,3,33,16,3,33,17,3,33,18,3,33,19,3,33,20,3,33,21,3,33,22,3,33,23,3,33,24,3,33,25,3,33,26,3,33,27,3,33,28,3,33,29,3,33,35,3,33,36,3,33,37,3,33,38,3,34,7,3,34,8,3,34,9,3,34,10,3,34,11,3,34,12,3,34,13,3,34,14,3,34,15,3,34,16,3,34,17,3,34,18,3,34,19,3,34,20,3,34,21,3,34,22,3,34,23,3,34,24,3,34,25,3,34,26,3,34,27,3,34,28,3,34,29,3,34,30,3,34,36,3,34,37,3,34,38,3,35,7,3,35,8,3,35,9,3,35,10,3,35,11,3,35,12,3,35,13,3,35,14,3,35,15,3,35,16,3,35,17,3,35,18,3,35,19,3,35,20,3,35,21,3,35,22,3,35,23,3,35,24,3,35,25,3,35,26,3,35,27,3,35,28,3,35,29,3,35,30,3,35,31,3,35,37,3,35,38,4,8,0,4,8,10,4,8,11,4,8,12,4,8,13,4,8,14,4,8,15,4,8,16,4,8,17,4,8,18,4,8,19,4,8,20,4,8,21,4,8,22,4,8,23,4,8,24,4,8,25,4,8,26,4,8,27,4,8,28,4,8,29,4,8,30,4,8,31,4,8,32,4,8,33,4,8,34,4,8,35,4,8,36,4,8,37,4,8,38,4,9,0,4,9,11,4,9,12,4,9,13,4,9,14,4,9,15,4,9,16,4,9,17,4,9,18,4,9,19,4,9,20,4,9,21,4,9,22,4,9,23,4,9,24,4,9,25,4,9,26,4,9,27,4,9,28,4,9,29,4,9,30,4,9,31,4,9,32,4,9,33,4,9,34,4,9,35,4,9,36,4,9,37,4,9,38,4,10,0,4,10,12,4,10,13,4,10,14,4,10,15,4,10,16,4,10,17,4,10,18,4,10,19,4,10,20,4,10,21,4,10,22,4,10,23,4,10,24,4,10,25,4,10,26,4,10,27,4,10,28,4,10,29,4,10,30,4,10,31,4,10,32,4,10,33,4,10,34,4,10,35,4,10,36,4,10,37,4,10,38,4,11,0,4,11,13,4,11,14,4,11,15,4,11,16,4,11,17,4,11,18,4,11,19,4,11,20,4,11,21,4,11,22,4,11,23,4,11,24,4,11,25,4,11,26,4,11,27,4,11,28,4,11,29,4,11,30,4,11,31,4,11,32,4,11,33,4,11,34,4,11,35,4,11,36,4,11,37,4,11,38,4,12,0,4,12,8,4,12,14,4,12,15,4,12,16,4,12,17,4,12,18,4,12,19,4,12,20,4,12,21,4,12,22,4,12,23,4,12,24,4,12,25,4,12,26,4,12,27,4,12,28,4,12,29,4,12,30,4,12,31,4,12,32,4,12,33,4,12,34,4,12,35,4,12,36,4,12,37,4,12,38,4,13,0,4,13,8,4,13,9,4,13,15,4,13,16,4,13,17,4,13,18,4,13,19,4,13,20,4,13,21,4,13,22,4,13,23,4,13,24,4,13,25,4,13,26,4,13,27,4,13,28,4,13,29,4,13,30,4,13,31,4,13,32,4,13,33,4,13,34,4,13,35,4,13,36,4,13,37,4,13,38,4,14,0,4,14,8,4,14,9,4,14,10,4,14,16,4,14,17,4,14,18,4,14,19,4,14,20,4,14,21,4,14,22,4,14,23,4,14,24,4,14,25,4,14,26,4,14,27,4,14,28,4,14,29,4,14,30,4,14,31,4,14,32,4,14,33,4,14,34,4,14,35,4,14,36,4,14,37,4,14,38,4,15,0,4,15,8,4,15,9,4,15,10,4,15,11,4,15,17,4,15,18,4,15,19,4,15,20,4,15,21,4,15,22,4,15,23,4,15,24,4,15,25,4,15,26,4,15,27,4,15,28,4,15,29,4,15,30,4,15,31,4,15,32,4,15,33,4,15,34,4,15,35,4,15,36,4,15,37,4,15,38,4,16,0,4,16,8,4,16,9,4,16,10,4,16,11,4,16,12,4,16,18,4,16,19,4,16,20,4,16,21,4,16,22,4,16,23,4,16,24,4,16,25,4,16,26,4,16,27,4,16,28,4,16,29,4,16,30,4,16,31,4,16,32,4,16,33,4,16,34,4,16,35,4,16,36,4,16,37,4,16,38,4,17,0,4,17,8,4,17,9,4,17,10,4,17,11,4,17,12,4,17,13,4,17,19,4,17,20,4,17,21,4,17,22,4,17,23,4,17,24,4,17,25,4,17,26,4,17,27,4,17,28,4,17,29,4,17,30,4,17,31,4,17,32,4,17,33,4,17,34,4,17,35,4,17,36,4,17,37,4,17,38,4,18,0,4,18,8,4,18,9,4,18,10,4,18,11,4,18,12,4,18,13,4,18,14,4,18,20,4,18,21,4,18,22,4,18,23,4,18,24,4,18,25,4,18,26,4,18,27,4,18,28,4,18,29,4,18,30,4,18,31,4,18,32,4,18,33,4,18,34,4,18,35,4,18,36,4,18,37,4,18,38,4,19,0,4,19,8,4,19,9,4,19,10,4,19,11,4,19,12,4,19,13,4,19,14,4,19,15,4,19,21,4,19,22,4,19,23,4,19,24,4,19,25,4,19,26,4,19,27,4,19,28,4,19,29,4,19,30,4,19,31,4,19,32,4,19,33,4,19,34,4,19,35,4,19,36,4,19,37,4,19,38,4,20,0,4,20,8,4,20,9,4,20,10,4,20,11,4,20,12,4,20,13,4,20,14,4,20,15,4,20,16,4,20,22,4,20,23,4,20,24,4,20,25,4,20,26,4,20,27,4,20,28,4,20,29,4,20,30,4,20,31,4,20,32,4,20,33,4,20,34,4,20,35,4,20,36,4,20,37,4,20,38,4,21,0,4,21,8,4,21,9,4,21,10,4,21,11,4,21,12,4,21,13,4,21,14,4,21,15,4,21,16,4,21,17,4,21,23,4,21,24,4,21,25,4,21,26,4,21,27,4,21,28,4,21,29,4,21,30,4,21,31,4,21,32,4,21,33,4,21,34,4,21,35,4,21,36,4,21,37,4,21,38,4,22,0,4,22,8,4,22,9,4,22,10,4,22,11,4,22,12,4,22,13,4,22,14,4,22,15,4,22,16,4,22,17,4,22,18,4,22,24,4,22,25,4,22,26,4,22,27,4,22,28,4,22,29,4,22,30,4,22,31,4,22,32,4,22,33,4,22,34,4,22,35,4,22,36,4,22,37,4,22,38,4,23,0,4,23,8,4,23,9,4,23,10,4,23,11,4,23,12,4,23,13,4,23,14,4,23,15,4,23,16,4,23,17,4,23,18,4,23,19,4,23,25,4,23,26,4,23,27,4,23,28,4,23,29,4,23,30,4,23,31,4,23,32,4,23,33,4,23,34,4,23,35,4,23,36,4,23,37,4,23,38,4,24,0,4,24,8,4,24,9,4,24,10,4,24,11,4,24,12,4,24,13,4,24,14,4,24,15,4,24,16,4,24,17,4,24,18,4,24,19,4,24,20,4,24,26,4,24,27,4,24,28,4,24,29,4,24,30,4,24,31,4,24,32,4,24,33,4,24,34,4,24,35,4,24,36,4,24,37,4,24,38,4,25,0,4,25,8,4,25,9,4,25,10,4,25,11,4,25,12,4,25,13,4,25,14,4,25,15,4,25,16,4,25,17,4,25,18,4,25,19,4,25,20,4,25,21,4,25,27,4,25,28,4,25,29,4,25,30,4,25,31,4,25,32,4,25,33,4,25,34,4,25,35,4,25,36,4,25,37,4,25,38,4,26,0,4,26,8,4,26,9,4,26,10,4,26,11,4,26,12,4,26,13,4,26,14,4,26,15,4,26,16,4,26,17,4,26,18,4,26,19,4,26,20,4,26,21,4,26,22,4,26,28,4,26,29,4,26,30,4,26,31,4,26,32,4,26,33,4,26,34,4,26,35,4,26,36,4,26,37,4,26,38,4,27,0,4,27,8,4,27,9,4,27,10,4,27,11,4,27,12,4,27,13,4,27,14,4,27,15,4,27,16,4,27,17,4,27,18,4,27,19,4,27,20,4,27,21,4,27,22,4,27,23,4,27,29,4,27,30,4,27,31,4,27,32,4,27,33,4,27,34,4,27,35,4,27,36,4,27,37,4,27,38,4,28,0,4,28,8,4,28,9,4,28,10,4,28,11,4,28,12,4,28,13,4,28,14,4,28,15,4,28,16,4,28,17,4,28,18,4,28,19,4,28,20,4,28,21,4,28,22,4,28,23,4,28,24,4,28,30,4,28,31,4,28,32,4,28,33,4,28,34,4,28,35,4,28,36,4,28,37,4,28,38,4,29,0,4,29,8,4,29,9,4,29,10,4,29,11,4,29,12,4,29,13,4,29,14,4,29,15,4,29,16,4,29,17,4,29,18,4,29,19,4,29,20,4,29,21,4,29,22,4,29,23,4,29,24,4,29,25,4,29,31,4,29,32,4,29,33,4,29,34,4,29,35,4,29,36,4,29,37,4,29,38,4,30,0,4,30,8,4,30,9,4,30,10,4,30,11,4,30,12,4,30,13,4,30,14,4,30,15,4,30,16,4,30,17,4,30,18,4,30,19,4,30,20,4,30,21,4,30,22,4,30,23,4,30,24,4,30,25,4,30,26,4,30,32,4,30,33,4,30,34,4,30,35,4,30,36,4,30,37,4,30,38,4,31,0,4,31,8,4,31,9,4,31,10,4,31,11,4,31,12,4,31,13,4,31,14,4,31,15,4,31,16,4,31,17,4,31,18,4,31,19,4,31,20,4,31,21,4,31,22,4,31,23,4,31,24,4,31,25,4,31,26,4,31,27,4,31,33,4,31,34,4,31,35,4,31,36,4,31,37,4,31,38,4,32,0,4,32,8,4,32,9,4,32,10,4,32,11,4,32,12,4,32,13,4,32,14,4,32,15,4,32,16,4,32,17,4,32,18,4,32,19,4,32,20,4,32,21,4,32,22,4,32,23,4,32,24,4,32,25,4,32,26,4,32,27,4,32,28,4,32,34,4,32,35,4,32,36,4,32,37,4,32,38,4,33,0,4,33,8,4,33,9,4,33,10,4,33,11,4,33,12,4,33,13,4,33,14,4,33,15,4,33,16,4,33,17,4,33,18,4,33,19,4,33,20,4,33,21,4,33,22,4,33,23,4,33,24,4,33,25,4,33,26,4,33,27,4,33,28,4,33,29,4,33,35,4,33,36,4,33,37,4,33,38,4,34,0,4,34,8,4,34,9,4,34,10,4,34,11,4,34,12,4,34,13,4,34,14,4,34,15,4,34,16,4,34,17,4,34,18,4,34,19,4,34,20,4,34,21,4,34,22,4,34,23,4,34,24,4,34,25,4,34,26,4,34,27,4,34,28,4,34,29,4,34,30,4,34,36,4,34,37,4,34,38,4,35,0,4,35,8,4,35,9,4,35,10,4,35,11,4,35,12,4,35,13,4,35,14,4,35,15,4,35,16,4,35,17,4,35,18,4,35,19,4,35,20,4,35,21,4,35,22,4,35,23,4,35,24,4,35,25,4,35,26,4,35,27,4,35,28,4,35,29,4,35,30,4,35,31,4,35,37,4,35,38,5,9,0,5,9,1,5,9,11,5,9,12,5,9,13,5,9,14,5,9,15,5,9,16,5,9,17,5,9,18,5,9,19,5,9,20,5,9,21,5,9,22,5,9,23,5,9,24,5,9,25,5,9,26,5,9,27,5,9,28,5,9,29,5,9,30,5,9,31,5,9,32,5,9,33,5,9,34,5,9,35,5,9,36,5,9,37,5,9,38,5,10,0,5,10,1,5,10,12,5,10,13,5,10,14,5,10,15,5,10,16,5,10,17,5,10,18,5,10,19,5,10,20,5,10,21,5,10,22,5,10,23,5,10,24,5,10,25,5,10,26,5,10,27,5,10,28,5,10,29,5,10,30,5,10,31,5,10,32,5,10,33,5,10,34,5,10,35,5,10,36,5,10,37,5,10,38,5,11,0,5,11,1,5,11,13,5,11,14,5,11,15,5,11,16,5,11,17,5,11,18,5,11,19,5,11,20,5,11,21,5,11,22,5,11,23,5,11,24,5,11,25,5,11,26,5,11,27,5,11,28,5,11,29,5,11,30,5,11,31,5,11,32,5,11,33,5,11,34,5,11,35,5,11,36,5,11,37,5,11,38,5,12,0,5,12,1,5,12,14,5,12,15,5,12,16,5,12,17,5,12,18,5,12,19,5,12,20,5,12,21,5,12,22,5,12,23,5,12,24,5,12,25,5,12,26,5,12,27,5,12,28,5,12,29,5,12,30,5,12,31,5,12,32,5,12,33,5,12,34,5,12,35,5,12,36,5,12,37,5,12,38,5,13,0,5,13,1,5,13,9,5,13,15,5,13,16,5,13,17,5,13,18,5,13,19,5,13,20,5,13,21,5,13,22,5,13,23,5,13,24,5,13,25,5,13,26,5,13,27,5,13,28,5,13,29,5,13,30,5,13,31,5,13,32,5,13,33,5,13,34,5,13,35,5,13,36,5,13,37,5,13,38,5,14,0,5,14,1,5,14,9,5,14,10,5,14,16,5,14,17,5,14,18,5,14,19,5,14,20,5,14,21,5,14,22,5,14,23,5,14,24,5,14,25,5,14,26,5,14,27,5,14,28,5,14,29,5,14,30,5,14,31,5,14,32,5,14,33,5,14,34,5,14,35,5,14,36,5,14,37,5,14,38,5,15,0,5,15,1,5,15,9,5,15,10,5,15,11,5,15,17,5,15,18,5,15,19,5,15,20,5,15,21,5,15,22,5,15,23,5,15,24,5,15,25,5,15,26,5,15,27,5,15,28,5,15,29,5,15,30,5,15,31,5,15,32,5,15,33,5,15,34,5,15,35,5,15,36,5,15,37,5,15,38,5,16,0,5,16,1,5,16,9,5,16,10,5,16,11,5,16,12,5,16,18,5,16,19,5,16,20,5,16,21,5,16,22,5,16,23,5,16,24,5,16,25,5,16,26,5,16,27,5,16,28,5,16,29,5,16,30,5,16,31,5,16,32,5,16,33,5,16,34,5,16,35,5,16,36,5,16,37,5,16,38,5,17,0,5,17,1,5,17,9,5,17,10,5,17,11,5,17,12,5,17,13,5,17,19,5,17,20,5,17,21,5,17,22,5,17,23,5,17,24,5,17,25,5,17,26,5,17,27,5,17,28,5,17,29,5,17,30,5,17,31,5,17,32,5,17,33,5,17,34,5,17,35,5,17,36,5,17,37,5,17,38,5,18,0,5,18,1,5,18,9,5,18,10,5,18,11,5,18,12,5,18,13,5,18,14,5,18,20,5,18,21,5,18,22,5,18,23,5,18,24,5,18,25,5,18,26,5,18,27,5,18,28,5,18,29,5,18,30,5,18,31,5,18,32,5,18,33,5,18,34,5,18,35,5,18,36,5,18,37,5,18,38,5,19,0,5,19,1,5,19,9,5,19,10,5,19,11,5,19,12,5,19,13,5,19,14,5,19,15,5,19,21,5,19,22,5,19,23,5,19,24,5,19,25,5,19,26,5,19,27,5,19,28,5,19,29,5,19,30,5,19,31,5,19,32,5,19,33,5,19,34,5,19,35,5,19,36,5,19,37,5,19,38,5,20,0,5,20,1,5,20,9,5,20,10,5,20,11,5,20,12,5,20,13,5,20,14,5,20,15,5,20,16,5,20,22,5,20,23,5,20,24,5,20,25,5,20,26,5,20,27,5,20,28,5,20,29,5,20,30,5,20,31,5,20,32,5,20,33,5,20,34,5,20,35,5,20,36,5,20,37,5,20,38,5,21,0,5,21,1,5,21,9,5,21,10,5,21,11,5,21,12,5,21,13,5,21,14,5,21,15,5,21,16,5,21,17,5,21,23,5,21,24,5,21,25,5,21,26,5,21,27,5,21,28,5,21,29,5,21,30,5,21,31,5,21,32,5,21,33,5,21,34,5,21,35,5,21,36,5,21,37,5,21,38,5,22,0,5,22,1,5,22,9,5,22,10,5,22,11,5,22,12,5,22,13,5,22,14,5,22,15,5,22,16,5,22,17,5,22,18,5,22,24,5,22,25,5,22,26,5,22,27,5,22,28,5,22,29,5,22,30,5,22,31,5,22,32,5,22,33,5,22,34,5,22,35,5,22,36,5,22,37,5,22,38,5,23,0,5,23,1,5,23,9,5,23,10,5,23,11,5,23,12,5,23,13,5,23,14,5,23,15,5,23,16,5,23,17,5,23,18,5,23,19,5,23,25,5,23,26,5,23,27,5,23,28,5,23,29,5,23,30,5,23,31,5,23,32,5,23,33,5,23,34,5,23,35,5,23,36,5,23,37,5,23,38,5,24,0,5,24,1,5,24,9,5,24,10,5,24,11,5,24,12,5,24,13,5,24,14,5,24,15,5,24,16,5,24,17,5,24,18,5,24,19,5,24,20,5,24,26,5,24,27,5,24,28,5,24,29,5,24,30,5,24,31,5,24,32,5,24,33,5,24,34,5,24,35,5,24,36,5,24,37,5,24,38,5,25,0,5,25,1,5,25,9,5,25,10,5,25,11,5,25,12,5,25,13,5,25,14,5,25,15,5,25,16,5,25,17,5,25,18,5,25,19,5,25,20,5,25,21,5,25,27,5,25,28,5,25,29,5,25,30,5,25,31,5,25,32,5,25,33,5,25,34,5,25,35,5,25,36,5,25,37,5,25,38,5,26,0,5,26,1,5,26,9,5,26,10,5,26,11,5,26,12,5,26,13,5,26,14,5,26,15,5,26,16,5,26,17,5,26,18,5,26,19,5,26,20,5,26,21,5,26,22,5,26,28,5,26,29,5,26,30,5,26,31,5,26,32,5,26,33,5,26,34,5,26,35,5,26,36,5,26,37,5,26,38,5,27,0,5,27,1,5,27,9,5,27,10,5,27,11,5,27,12,5,27,13,5,27,14,5,27,15,5,27,16,5,27,17,5,27,18,5,27,19,5,27,20,5,27,21,5,27,22,5,27,23,5,27,29,5,27,30,5,27,31,5,27,32,5,27,33,5,27,34,5,27,35,5,27,36,5,27,37,5,27,38,5,28,0,5,28,1,5,28,9,5,28,10,5,28,11,5,28,12,5,28,13,5,28,14,5,28,15,5,28,16,5,28,17,5,28,18,5,28,19,5,28,20,5,28,21,5,28,22,5,28,23,5,28,24,5,28,30,5,28,31,5,28,32,5,28,33,5,28,34,5,28,35,5,28,36,5,28,37,5,28,38,5,29,0,5,29,1,5,29,9,5,29,10,5,29,11,5,29,12,5,29,13,5,29,14,5,29,15,5,29,16,5,29,17,5,29,18,5,29,19,5,29,20,5,29,21,5,29,22,5,29,23,5,29,24,5,29,25,5,29,31,5,29,32,5,29,33,5,29,34,5,29,35,5,29,36,5,29,37,5,29,38,5,30,0,5,30,1,5,30,9,5,30,10,5,30,11,5,30,12,5,30,13,5,30,14,5,30,15,5,30,16,5,30,17,5,30,18,5,30,19,5,30,20,5,30,21,5,30,22,5,30,23,5,30,24,5,30,25,5,30,26,5,30,32,5,30,33,5,30,34,5,30,35,5,30,36,5,30,37,5,30,38,5,31,0,5,31,1,5,31,9,5,31,10,5,31,11,5,31,12,5,31,13,5,31,14,5,31,15,5,31,16,5,31,17,5,31,18,5,31,19,5,31,20,5,31,21,5,31,22,5,31,23,5,31,24,5,31,25,5,31,26,5,31,27,5,31,33,5,31,34,5,31,35,5,31,36,5,31,37,5,31,38,5,32,0,5,32,1,5,32,9,5,32,10,5,32,11,5,32,12,5,32,13,5,32,14,5,32,15,5,32,16,5,32,17,5,32,18,5,32,19,5,32,20,5,32,21,5,32,22,5,32,23,5,32,24,5,32,25,5,32,26,5,32,27,5,32,28,5,32,34,5,32,35,5,32,36,5,32,37,5,32,38,5,33,0,5,33,1,5,33,9,5,33,10,5,33,11,5,33,12,5,33,13,5,33,14,5,33,15,5,33,16,5,33,17,5,33,18,5,33,19,5,33,20,5,33,21,5,33,22,5,33,23,5,33,24,5,33,25,5,33,26,5,33,27,5,33,28,5,33,29,5,33,35,5,33,36,5,33,37,5,33,38,5,34,0,5,34,1,5,34,9,5,34,10,5,34,11,5,34,12,5,34,13,5,34,14,5,34,15,5,34,16,5,34,17,5,34,18,5,34,19,5,34,20,5,34,21,5,34,22,5,34,23,5,34,24,5,34,25,5,34,26,5,34,27,5,34,28,5,34,29,5,34,30,5,34,36,5,34,37,5,34,38,5,35,0,5,35,1,5,35,9,5,35,10,5,35,11,5,35,12,5,35,13,5,35,14,5,35,15,5,35,16,5,35,17,5,35,18,5,35,19,5,35,20,5,35,21,5,35,22,5,35,23,5,35,24,5,35,25,5,35,26,5,35,27,5,35,28,5,35,29,5,35,30,5,35,31,5,35,37,5,35,38,6,4,0,6,4,10,6,4,11,6,4,12,6,4,13,6,4,14,6,4,15,6,4,16,6,4,17,6,4,18,6,4,19,6,4,20,6,4,21,6,4,22,6,4,23,6,4,24,6,4,25,6,4,26,6,4,27,6,4,28,6,4,29,6,4,30,6,4,31,6,4,32,6,4,33,6,4,34,6,4,35,6,4,36,6,4,37,6,4,38,6,10,0,6,10,1,6,10,2,6,10,12,6,10,13,6,10,14,6,10,15,6,10,16,6,10,17,6,10,18,6,10,19,6,10,20,6,10,21,6,10,22,6,10,23,6,10,24,6,10,25,6,10,26,6,10,27,6,10,28,6,10,29,6,10,30,6,10,31,6,10,32,6,10,33,6,10,34,6,10,35,6,10,36,6,10,37,6,10,38,6,11,0,6,11,1,6,11,2,6,11,13,6,11,14,6,11,15,6,11,16,6,11,17,6,11,18,6,11,19,6,11,20,6,11,21,6,11,22,6,11,23,6,11,24,6,11,25,6,11,26,6,11,27,6,11,28,6,11,29,6,11,30,6,11,31,6,11,32,6,11,33,6,11,34,6,11,35,6,11,36,6,11,37,6,11,38,6,12,0,6,12,1,6,12,2,6,12,14,6,12,15,6,12,16,6,12,17,6,12,18,6,12,19,6,12,20,6,12,21,6,12,22,6,12,23,6,12,24,6,12,25,6,12,26,6,12,27,6,12,28,6,12,29,6,12,30,6,12,31,6,12,32,6,12,33,6,12,34,6,12,35,6,12,36,6,12,37,6,12,38,6,13,0,6,13,1,6,13,2,6,13,15,6,13,16,6,13,17,6,13,18,6,13,19,6,13,20,6,13,21,6,13,22,6,13,23,6,13,24,6,13,25,6,13,26,6,13,27,6,13,28,6,13,29,6,13,30,6,13,31,6,13,32,6,13,33,6,13,34,6,13,35,6,13,36,6,13,37,6,13,38,6,14,0,6,14,1,6,14,2,6,14,10,6,14,16,6,14,17,6,14,18,6,14,19,6,14,20,6,14,21,6,14,22,6,14,23,6,14,24,6,14,25,6,14,26,6,14,27,6,14,28,6,14,29,6,14,30,6,14,31,6,14,32,6,14,33,6,14,34,6,14,35,6,14,36,6,14,37,6,14,38,6,15,0,6,15,1,6,15,2,6,15,10,6,15,11,6,15,17,6,15,18,6,15,19,6,15,20,6,15,21,6,15,22,6,15,23,6,15,24,6,15,25,6,15,26,6,15,27,6,15,28,6,15,29,6,15,30,6,15,31,6,15,32,6,15,33,6,15,34,6,15,35,6,15,36,6,15,37,6,15,38,6,16,0,6,16,1,6,16,2,6,16,10,6,16,11,6,16,12,6,16,18,6,16,19,6,16,20,6,16,21,6,16,22,6,16,23,6,16,24,6,16,25,6,16,26,6,16,27,6,16,28,6,16,29,6,16,30,6,16,31,6,16,32,6,16,33,6,16,34,6,16,35,6,16,36,6,16,37,6,16,38,6,17,0,6,17,1,6,17,2,6,17,10,6,17,11,6,17,12,6,17,13,6,17,19,6,17,20,6,17,21,6,17,22,6,17,23,6,17,24,6,17,25,6,17,26,6,17,27,6,17,28,6,17,29,6,17,30,6,17,31,6,17,32,6,17,33,6,17,34,6,17,35,6,17,36,6,17,37,6,17,38,6,18,0,6,18,1,6,18,2,6,18,10,6,18,11,6,18,12,6,18,13,6,18,14,6,18,20,6,18,21,6,18,22,6,18,23,6,18,24,6,18,25,6,18,26,6,18,27,6,18,28,6,18,29,6,18,30,6,18,31,6,18,32,6,18,33,6,18,34,6,18,35,6,18,36,6,18,37,6,18,38,6,19,0,6,19,1,6,19,2,6,19,10,6,19,11,6,19,12,6,19,13,6,19,14,6,19,15,6,19,21,6,19,22,6,19,23,6,19,24,6,19,25,6,19,26,6,19,27,6,19,28,6,19,29,6,19,30,6,19,31,6,19,32,6,19,33,6,19,34,6,19,35,6,19,36,6,19,37,6,19,38,6,20,0,6,20,1,6,20,2,6,20,10,6,20,11,6,20,12,6,20,13,6,20,14,6,20,15,6,20,16,6,20,22,6,20,23,6,20,24,6,20,25,6,20,26,6,20,27,6,20,28,6,20,29,6,20,30,6,20,31,6,20,32,6,20,33,6,20,34,6,20,35,6,20,36,6,20,37,6,20,38,6,21,0,6,21,1,6,21,2,6,21,10,6,21,11,6,21,12,6,21,13,6,21,14,6,21,15,6,21,16,6,21,17,6,21,23,6,21,24,6,21,25,6,21,26,6,21,27,6,21,28,6,21,29,6,21,30,6,21,31,6,21,32,6,21,33,6,21,34,6,21,35,6,21,36,6,21,37,6,21,38,6,22,0,6,22,1,6,22,2,6,22,10,6,22,11,6,22,12,6,22,13,6,22,14,6,22,15,6,22,16,6,22,17,6,22,18,6,22,24,6,22,25,6,22,26,6,22,27,6,22,28,6,22,29,6,22,30,6,22,31,6,22,32,6,22,33,6,22,34,6,22,35,6,22,36,6,22,37,6,22,38,6,23,0,6,23,1,6,23,2,6,23,10,6,23,11,6,23,12,6,23,13,6,23,14,6,23,15,6,23,16,6,23,17,6,23,18,6,23,19,6,23,25,6,23,26,6,23,27,6,23,28,6,23,29,6,23,30,6,23,31,6,23,32,6,23,33,6,23,34,6,23,35,6,23,36,6,23,37,6,23,38,6,24,0,6,24,1,6,24,2,6,24,10,6,24,11,6,24,12,6,24,13,6,24,14,6,24,15,6,24,16,6,24,17,6,24,18,6,24,19,6,24,20,6,24,26,6,24,27,6,24,28,6,24,29,6,24,30,6,24,31,6,24,32,6,24,33,6,24,34,6,24,35,6,24,36,6,24,37,6,24,38,6,25,0,6,25,1,6,25,2,6,25,10,6,25,11,6,25,12,6,25,13,6,25,14,6,25,15,6,25,16,6,25,17,6,25,18,6,25,19,6,25,20,6,25,21,6,25,27,6,25,28,6,25,29,6,25,30,6,25,31,6,25,32,6,25,33,6,25,34,6,25,35,6,25,36,6,25,37,6,25,38,6,26,0,6,26,1,6,26,2,6,26,10,6,26,11,6,26,12,6,26,13,6,26,14,6,26,15,6,26,16,6,26,17,6,26,18,6,26,19,6,26,20,6,26,21,6,26,22,6,26,28,6,26,29,6,26,30,6,26,31,6,26,32,6,26,33,6,26,34,6,26,35,6,26,36,6,26,37,6,26,38,6,27,0,6,27,1,6,27,2,6,27,10,6,27,11,6,27,12,6,27,13,6,27,14,6,27,15,6,27,16,6,27,17,6,27,18,6,27,19,6,27,20,6,27,21,6,27,22,6,27,23,6,27,29,6,27,30,6,27,31,6,27,32,6,27,33,6,27,34,6,27,35,6,27,36,6,27,37,6,27,38,6,28,0,6,28,1,6,28,2,6,28,10,6,28,11,6,28,12,6,28,13,6,28,14,6,28,15,6,28,16,6,28,17,6,28,18,6,28,19,6,28,20,6,28,21,6,28,22,6,28,23,6,28,24,6,28,30,6,28,31,6,28,32,6,28,33,6,28,34,6,28,35,6,28,36,6,28,37,6,28,38,6,29,0,6,29,1,6,29,2,6,29,10,6,29,11,6,29,12,6,29,13,6,29,14,6,29,15,6,29,16,6,29,17,6,29,18,6,29,19,6,29,20,6,29,21,6,29,22,6,29,23,6,29,24,6,29,25,6,29,31,6,29,32,6,29,33,6,29,34,6,29,35,6,29,36,6,29,37,6,29,38,6,30,0,6,30,1,6,30,2,6,30,10,6,30,11,6,30,12,6,30,13,6,30,14,6,30,15,6,30,16,6,30,17,6,30,18,6,30,19,6,30,20,6,30,21,6,30,22,6,30,23,6,30,24,6,30,25,6,30,26,6,30,32,6,30,33,6,30,34,6,30,35,6,30,36,6,30,37,6,30,38,6,31,0,6,31,1,6,31,2,6,31,10,6,31,11,6,31,12,6,31,13,6,31,14,6,31,15,6,31,16,6,31,17,6,31,18,6,31,19,6,31,20,6,31,21,6,31,22,6,31,23,6,31,24,6,31,25,6,31,26,6,31,27,6,31,33,6,31,34,6,31,35,6,31,36,6,31,37,6,31,38,6,32,0,6,32,1,6,32,2,6,32,10,6,32,11,6,32,12,6,32,13,6,32,14,6,32,15,6,32,16,6,32,17,6,32,18,6,32,19,6,32,20,6,32,21,6,32,22,6,32,23,6,32,24,6,32,25,6,32,26,6,32,27,6,32,28,6,32,34,6,32,35,6,32,36,6,32,37,6,32,38,6,33,0,6,33,1,6,33,2,6,33,10,6,33,11,6,33,12,6,33,13,6,33,14,6,33,15,6,33,16,6,33,17,6,33,18,6,33,19,6,33,20,6,33,21,6,33,22,6,33,23,6,33,24,6,33,25,6,33,26,6,33,27,6,33,28,6,33,29,6,33,35,6,33,36,6,33,37,6,33,38,6,34,0,6,34,1,6,34,2,6,34,10,6,34,11,6,34,12,6,34,13,6,34,14,6,34,15,6,34,16,6,34,17,6,34,18,6,34,19,6,34,20,6,34,21,6,34,22,6,34,23,6,34,24,6,34,25,6,34,26,6,34,27,6,34,28,6,34,29,6,34,30,6,34,36,6,34,37,6,34,38,6,35,0,6,35,1,6,35,2,6,35,10,6,35,11,6,35,12,6,35,13,6,35,14,6,35,15,6,35,16,6,35,17,6,35,18,6,35,19,6,35,20,6,35,21,6,35,22,6,35,23,6,35,24,6,35,25,6,35,26,6,35,27,6,35,28,6,35,29,6,35,30,6,35,31,6,35,37,6,35,38,7,4,0,7,4,11,7,4,12,7,4,13,7,4,14,7,4,15,7,4,16,7,4,17,7,4,18,7,4,19,7,4,20,7,4,21,7,4,22,7,4,23,7,4,24,7,4,25,7,4,26,7,4,27,7,4,28,7,4,29,7,4,30,7,4,31,7,4,32,7,4,33,7,4,34,7,4,35,7,4,36,7,4,37,7,4,38,7,5,0,7,5,1,7,5,11,7,5,12,7,5,13,7,5,14,7,5,15,7,5,16,7,5,17,7,5,18,7,5,19,7,5,20,7,5,21,7,5,22,7,5,23,7,5,24,7,5,25,7,5,26,7,5,27,7,5,28,7,5,29,7,5,30,7,5,31,7,5,32,7,5,33,7,5,34,7,5,35,7,5,36,7,5,37,7,5,38,7,11,0,7,11,1,7,11,2,7,11,3,7,11,13,7,11,14,7,11,15,7,11,16,7,11,17,7,11,18,7,11,19,7,11,20,7,11,21,7,11,22,7,11,23,7,11,24,7,11,25,7,11,26,7,11,27,7,11,28,7,11,29,7,11,30,7,11,31,7,11,32,7,11,33,7,11,34,7,11,35,7,11,36,7,11,37,7,11,38,7,12,0,7,12,1,7,12,2,7,12,3,7,12,14,7,12,15,7,12,16,7,12,17,7,12,18,7,12,19,7,12,20,7,12,21,7,12,22,7,12,23,7,12,24,7,12,25,7,12,26,7,12,27,7,12,28,7,12,29,7,12,30,7,12,31,7,12,32,7,12,33,7,12,34,7,12,35,7,12,36,7,12,37,7,12,38,7,13,0,7,13,1,7,13,2,7,13,3,7,13,15,7,13,16,7,13,17,7,13,18,7,13,19,7,13,20,7,13,21,7,13,22,7,13,23,7,13,24,7,13,25,7,13,26,7,13,27,7,13,28,7,13,29,7,13,30,7,13,31,7,13,32,7,13,33,7,13,34,7,13,35,7,13,36,7,13,37,7,13,38,7,14,0,7,14,1,7,14,2,7,14,3,7,14,16,7,14,17,7,14,18,7,14,19,7,14,20,7,14,21,7,14,22,7,14,23,7,14,24,7,14,25,7,14,26,7,14,27,7,14,28,7,14,29,7,14,30,7,14,31,7,14,32,7,14,33,7,14,34,7,14,35,7,14,36,7,14,37,7,14,38,7,15,0,7,15,1,7,15,2,7,15,3,7,15,11,7,15,17,7,15,18,7,15,19,7,15,20,7,15,21,7,15,22,7,15,23,7,15,24,7,15,25,7,15,26,7,15,27,7,15,28,7,15,29,7,15,30,7,15,31,7,15,32,7,15,33,7,15,34,7,15,35,7,15,36,7,15,37,7,15,38,7,16,0,7,16,1,7,16,2,7,16,3,7,16,11,7,16,12,7,16,18,7,16,19,7,16,20,7,16,21,7,16,22,7,16,23,7,16,24,7,16,25,7,16,26,7,16,27,7,16,28,7,16,29,7,16,30,7,16,31,7,16,32,7,16,33,7,16,34,7,16,35,7,16,36,7,16,37,7,16,38,7,17,0,7,17,1,7,17,2,7,17,3,7,17,11,7,17,12,7,17,13,7,17,19,7,17,20,7,17,21,7,17,22,7,17,23,7,17,24,7,17,25,7,17,26,7,17,27,7,17,28,7,17,29,7,17,30,7,17,31,7,17,32,7,17,33,7,17,34,7,17,35,7,17,36,7,17,37,7,17,38,7,18,0,7,18,1,7,18,2,7,18,3,7,18,11,7,18,12,7,18,13,7,18,14,7,18,20,7,18,21,7,18,22,7,18,23,7,18,24,7,18,25,7,18,26,7,18,27,7,18,28,7,18,29,7,18,30,7,18,31,7,18,32,7,18,33,7,18,34,7,18,35,7,18,36,7,18,37,7,18,38,7,19,0,7,19,1,7,19,2,7,19,3,7,19,11,7,19,12,7,19,13,7,19,14,7,19,15,7,19,21,7,19,22,7,19,23,7,19,24,7,19,25,7,19,26,7,19,27,7,19,28,7,19,29,7,19,30,7,19,31,7,19,32,7,19,33,7,19,34,7,19,35,7,19,36,7,19,37,7,19,38,7,20,0,7,20,1,7,20,2,7,20,3,7,20,11,7,20,12,7,20,13,7,20,14,7,20,15,7,20,16,7,20,22,7,20,23,7,20,24,7,20,25,7,20,26,7,20,27,7,20,28,7,20,29,7,20,30,7,20,31,7,20,32,7,20,33,7,20,34,7,20,35,7,20,36,7,20,37,7,20,38,7,21,0,7,21,1,7,21,2,7,21,3,7,21,11,7,21,12,7,21,13,7,21,14,7,21,15,7,21,16,7,21,17,7,21,23,7,21,24,7,21,25,7,21,26,7,21,27,7,21,28,7,21,29,7,21,30,7,21,31,7,21,32,7,21,33,7,21,34,7,21,35,7,21,36,7,21,37,7,21,38,7,22,0,7,22,1,7,22,2,7,22,3,7,22,11,7,22,12,7,22,13,7,22,14,7,22,15,7,22,16,7,22,17,7,22,18,7,22,24,7,22,25,7,22,26,7,22,27,7,22,28,7,22,29,7,22,30,7,22,31,7,22,32,7,22,33,7,22,34,7,22,35,7,22,36,7,22,37,7,22,38,7,23,0,7,23,1,7,23,2,7,23,3,7,23,11,7,23,12,7,23,13,7,23,14,7,23,15,7,23,16,7,23,17,7,23,18,7,23,19,7,23,25,7,23,26,7,23,27,7,23,28,7,23,29,7,23,30,7,23,31,7,23,32,7,23,33,7,23,34,7,23,35,7,23,36,7,23,37,7,23,38,7,24,0,7,24,1,7,24,2,7,24,3,7,24,11,7,24,12,7,24,13,7,24,14,7,24,15,7,24,16,7,24,17,7,24,18,7,24,19,7,24,20,7,24,26,7,24,27,7,24,28,7,24,29,7,24,30,7,24,31,7,24,32,7,24,33,7,24,34,7,24,35,7,24,36,7,24,37,7,24,38,7,25,0,7,25,1,7,25,2,7,25,3,7,25,11,7,25,12,7,25,13,7,25,14,7,25,15,7,25,16,7,25,17,7,25,18,7,25,19,7,25,20,7,25,21,7,25,27,7,25,28,7,25,29,7,25,30,7,25,31,7,25,32,7,25,33,7,25,34,7,25,35,7,25,36,7,25,37,7,25,38,7,26,0,7,26,1,7,26,2,7,26,3,7,26,11,7,26,12,7,26,13,7,26,14,7,26,15,7,26,16,7,26,17,7,26,18,7,26,19,7,26,20,7,26,21,7,26,22,7,26,28,7,26,29,7,26,30,7,26,31,7,26,32,7,26,33,7,26,34,7,26,35,7,26,36,7,26,37,7,26,38,7,27,0,7,27,1,7,27,2,7,27,3,7,27,11,7,27,12,7,27,13,7,27,14,7,27,15,7,27,16,7,27,17,7,27,18,7,27,19,7,27,20,7,27,21,7,27,22,7,27,23,7,27,29,7,27,30,7,27,31,7,27,32,7,27,33,7,27,34,7,27,35,7,27,36,7,27,37,7,27,38,7,28,0,7,28,1,7,28,2,7,28,3,7,28,11,7,28,12,7,28,13,7,28,14,7,28,15,7,28,16,7,28,17,7,28,18,7,28,19,7,28,20,7,28,21,7,28,22,7,28,23,7,28,24,7,28,30,7,28,31,7,28,32,7,28,33,7,28,34,7,28,35,7,28,36,7,28,37,7,28,38,7,29,0,7,29,1,7,29,2,7,29,3,7,29,11,7,29,12,7,29,13,7,29,14,7,29,15,7,29,16,7,29,17,7,29,18,7,29,19,7,29,20,7,29,21,7,29,22,7,29,23,7,29,24,7,29,25,7,29,31,7,29,32,7,29,33,7,29,34,7,29,35,7,29,36,7,29,37,7,29,38,7,30,0,7,30,1,7,30,2,7,30,3,7,30,11,7,30,12,7,30,13,7,30,14,7,30,15,7,30,16,7,30,17,7,30,18,7,30,19,7,30,20,7,30,21,7,30,22,7,30,23,7,30,24,7,30,25,7,30,26,7,30,32,7,30,33,7,30,34,7,30,35,7,30,36,7,30,37,7,30,38,7,31,0,7,31,1,7,31,2,7,31,3,7,31,11,7,31,12,7,31,13,7,31,14,7,31,15,7,31,16,7,31,17,7,31,18,7,31,19,7,31,20,7,31,21,7,31,22,7,31,23,7,31,24,7,31,25,7,31,26,7,31,27,7,31,33,7,31,34,7,31,35,7,31,36,7,31,37,7,31,38,7,32,0,7,32,1,7,32,2,7,32,3,7,32,11,7,32,12,7,32,13,7,32,14,7,32,15,7,32,16,7,32,17,7,32,18,7,32,19,7,32,20,7,32,21,7,32,22,7,32,23,7,32,24,7,32,25,7,32,26,7,32,27,7,32,28,7,32,34,7,32,35,7,32,36,7,32,37,7,32,38,7,33,0,7,33,1,7,33,2,7,33,3,7,33,11,7,33,12,7,33,13,7,33,14,7,33,15,7,33,16,7,33,17,7,33,18,7,33,19,7,33,20,7,33,21,7,33,22,7,33,23,7,33,24,7,33,25,7,33,26,7,33,27,7,33,28,7,33,29,7,33,35,7,33,36,7,33,37,7,33,38,7,34,0,7,34,1,7,34,2,7,34,3,7,34,11,7,34,12,7,34,13,7,34,14,7,34,15,7,34,16,7,34,17,7,34,18,7,34,19,7,34,20,7,34,21,7,34,22,7,34,23,7,34,24,7,34,25,7,34,26,7,34,27,7,34,28,7,34,29,7,34,30,7,34,36,7,34,37,7,34,38,7,35,0,7,35,1,7,35,2,7,35,3,7,35,11,7,35,12,7,35,13,7,35,14,7,35,15,7,35,16,7,35,17,7,35,18,7,35,19,7,35,20,7,35,21,7,35,22,7,35,23,7,35,24,7,35,25,7,35,26,7,35,27,7,35,28,7,35,29,7,35,30,7,35,31,7,35,37,7,35,38,8,4,0,8,4,12,8,4,13,8,4,14,8,4,15,8,4,16,8,4,17,8,4,18,8,4,19,8,4,20,8,4,21,8,4,22,8,4,23,8,4,24,8,4,25,8,4,26,8,4,27,8,4,28,8,4,29,8,4,30,8,4,31,8,4,32,8,4,33,8,4,34,8,4,35,8,4,36,8,4,37,8,4,38,8,5,0,8,5,1,8,5,12,8,5,13,8,5,14,8,5,15,8,5,16,8,5,17,8,5,18,8,5,19,8,5,20,8,5,21,8,5,22,8,5,23,8,5,24,8,5,25,8,5,26,8,5,27,8,5,28,8,5,29,8,5,30,8,5,31,8,5,32,8,5,33,8,5,34,8,5,35,8,5,36,8,5,37,8,5,38,8,6,0,8,6,1,8,6,2,8,6,12,8,6,13,8,6,14,8,6,15,8,6,16,8,6,17,8,6,18,8,6,19,8,6,20,8,6,21,8,6,22,8,6,23,8,6,24,8,6,25,8,6,26,8,6,27,8,6,28,8,6,29,8,6,30,8,6,31,8,6,32,8,6,33,8,6,34,8,6,35,8,6,36,8,6,37,8,6,38,8,12,0,8,12,1,8,12,2,8,12,3,8,12,4,8,12,14,8,12,15,8,12,16,8,12,17,8,12,18,8,12,19,8,12,20,8,12,21,8,12,22,8,12,23,8,12,24,8,12,25,8,12,26,8,12,27,8,12,28,8,12,29,8,12,30,8,12,31,8,12,32,8,12,33,8,12,34,8,12,35,8,12,36,8,12,37,8,12,38,8,13,0,8,13,1,8,13,2,8,13,3,8,13,4,8,13,15,8,13,16,8,13,17,8,13,18,8,13,19,8,13,20,8,13,21,8,13,22,8,13,23,8,13,24,8,13,25,8,13,26,8,13,27,8,13,28,8,13,29,8,13,30,8,13,31,8,13,32,8,13,33,8,13,34,8,13,35,8,13,36,8,13,37,8,13,38,8,14,0,8,14,1,8,14,2,8,14,3,8,14,4,8,14,16,8,14,17,8,14,18,8,14,19,8,14,20,8,14,21,8,14,22,8,14,23,8,14,24,8,14,25,8,14,26,8,14,27,8,14,28,8,14,29,8,14,30,8,14,31,8,14,32,8,14,33,8,14,34,8,14,35,8,14,36,8,14,37,8,14,38,8,15,0,8,15,1,8,15,2,8,15,3,8,15,4,8,15,17,8,15,18,8,15,19,8,15,20,8,15,21,8,15,22,8,15,23,8,15,24,8,15,25,8,15,26,8,15,27,8,15,28,8,15,29,8,15,30,8,15,31,8,15,32,8,15,33,8,15,34,8,15,35,8,15,36,8,15,37,8,15,38,8,16,0,8,16,1,8,16,2,8,16,3,8,16,4,8,16,12,8,16,18,8,16,19,8,16,20,8,16,21,8,16,22,8,16,23,8,16,24,8,16,25,8,16,26,8,16,27,8,16,28,8,16,29,8,16,30,8,16,31,8,16,32,8,16,33,8,16,34,8,16,35,8,16,36,8,16,37,8,16,38,8,17,0,8,17,1,8,17,2,8,17,3,8,17,4,8,17,12,8,17,13,8,17,19,8,17,20,8,17,21,8,17,22,8,17,23,8,17,24,8,17,25,8,17,26,8,17,27,8,17,28,8,17,29,8,17,30,8,17,31,8,17,32,8,17,33,8,17,34,8,17,35,8,17,36,8,17,37,8,17,38,8,18,0,8,18,1,8,18,2,8,18,3,8,18,4,8,18,12,8,18,13,8,18,14,8,18,20,8,18,21,8,18,22,8,18,23,8,18,24,8,18,25,8,18,26,8,18,27,8,18,28,8,18,29,8,18,30,8,18,31,8,18,32,8,18,33,8,18,34,8,18,35,8,18,36,8,18,37,8,18,38,8,19,0,8,19,1,8,19,2,8,19,3,8,19,4,8,19,12,8,19,13,8,19,14,8,19,15,8,19,21,8,19,22,8,19,23,8,19,24,8,19,25,8,19,26,8,19,27,8,19,28,8,19,29,8,19,30,8,19,31,8,19,32,8,19,33,8,19,34,8,19,35,8,19,36,8,19,37,8,19,38,8,20,0,8,20,1,8,20,2,8,20,3,8,20,4,8,20,12,8,20,13,8,20,14,8,20,15,8,20,16,8,20,22,8,20,23,8,20,24,8,20,25,8,20,26,8,20,27,8,20,28,8,20,29,8,20,30,8,20,31,8,20,32,8,20,33,8,20,34,8,20,35,8,20,36,8,20,37,8,20,38,8,21,0,8,21,1,8,21,2,8,21,3,8,21,4,8,21,12,8,21,13,8,21,14,8,21,15,8,21,16,8,21,17,8,21,23,8,21,24,8,21,25,8,21,26,8,21,27,8,21,28,8,21,29,8,21,30,8,21,31,8,21,32,8,21,33,8,21,34,8,21,35,8,21,36,8,21,37,8,21,38,8,22,0,8,22,1,8,22,2,8,22,3,8,22,4,8,22,12,8,22,13,8,22,14,8,22,15,8,22,16,8,22,17,8,22,18,8,22,24,8,22,25,8,22,26,8,22,27,8,22,28,8,22,29,8,22,30,8,22,31,8,22,32,8,22,33,8,22,34,8,22,35,8,22,36,8,22,37,8,22,38,8,23,0,8,23,1,8,23,2,8,23,3,8,23,4,8,23,12,8,23,13,8,23,14,8,23,15,8,23,16,8,23,17,8,23,18,8,23,19,8,23,25,8,23,26,8,23,27,8,23,28,8,23,29,8,23,30,8,23,31,8,23,32,8,23,33,8,23,34,8,23,35,8,23,36,8,23,37,8,23,38,8,24,0,8,24,1,8,24,2,8,24,3,8,24,4,8,24,12,8,24,13,8,24,14,8,24,15,8,24,16,8,24,17,8,24,18,8,24,19,8,24,20,8,24,26,8,24,27,8,24,28,8,24,29,8,24,30,8,24,31,8,24,32,8,24,33,8,24,34,8,24,35,8,24,36,8,24,37,8,24,38,8,25,0,8,25,1,8,25,2,8,25,3,8,25,4,8,25,12,8,25,13,8,25,14,8,25,15,8,25,16,8,25,17,8,25,18,8,25,19,8,25,20,8,25,21,8,25,27,8,25,28,8,25,29,8,25,30,8,25,31,8,25,32,8,25,33,8,25,34,8,25,35,8,25,36,8,25,37,8,25,38,8,26,0,8,26,1,8,26,2,8,26,3,8,26,4,8,26,12,8,26,13,8,26,14,8,26,15,8,26,16,8,26,17,8,26,18,8,26,19,8,26,20,8,26,21,8,26,22,8,26,28,8,26,29,8,26,30,8,26,31,8,26,32,8,26,33,8,26,34,8,26,35,8,26,36,8,26,37,8,26,38,8,27,0,8,27,1,8,27,2,8,27,3,8,27,4,8,27,12,8,27,13,8,27,14,8,27,15,8,27,16,8,27,17,8,27,18,8,27,19,8,27,20,8,27,21,8,27,22,8,27,23,8,27,29,8,27,30,8,27,31,8,27,32,8,27,33,8,27,34,8,27,35,8,27,36,8,27,37,8,27,38,8,28,0,8,28,1,8,28,2,8,28,3,8,28,4,8,28,12,8,28,13,8,28,14,8,28,15,8,28,16,8,28,17,8,28,18,8,28,19,8,28,20,8,28,21,8,28,22,8,28,23,8,28,24,8,28,30,8,28,31,8,28,32,8,28,33,8,28,34,8,28,35,8,28,36,8,28,37,8,28,38,8,29,0,8,29,1,8,29,2,8,29,3,8,29,4,8,29,12,8,29,13,8,29,14,8,29,15,8,29,16,8,29,17,8,29,18,8,29,19,8,29,20,8,29,21,8,29,22,8,29,23,8,29,24,8,29,25,8,29,31,8,29,32,8,29,33,8,29,34,8,29,35,8,29,36,8,29,37,8,29,38,8,30,0,8,30,1,8,30,2,8,30,3,8,30,4,8,30,12,8,30,13,8,30,14,8,30,15,8,30,16,8,30,17,8,30,18,8,30,19,8,30,20,8,30,21,8,30,22,8,30,23,8,30,24,8,30,25,8,30,26,8,30,32,8,30,33,8,30,34,8,30,35,8,30,36,8,30,37,8,30,38,8,31,0,8,31,1,8,31,2,8,31,3,8,31,4,8,31,12,8,31,13,8,31,14,8,31,15,8,31,16,8,31,17,8,31,18,8,31,19,8,31,20,8,31,21,8,31,22,8,31,23,8,31,24,8,31,25,8,31,26,8,31,27,8,31,33,8,31,34,8,31,35,8,31,36,8,31,37,8,31,38,8,32,0,8,32,1,8,32,2,8,32,3,8,32,4,8,32,12,8,32,13,8,32,14,8,32,15,8,32,16,8,32,17,8,32,18,8,32,19,8,32,20,8,32,21,8,32,22,8,32,23,8,32,24,8,32,25,8,32,26,8,32,27,8,32,28,8,32,34,8,32,35,8,32,36,8,32,37,8,32,38,8,33,0,8,33,1,8,33,2,8,33,3,8,33,4,8,33,12,8,33,13,8,33,14,8,33,15,8,33,16,8,33,17,8,33,18,8,33,19,8,33,20,8,33,21,8,33,22,8,33,23,8,33,24,8,33,25,8,33,26,8,33,27,8,33,28,8,33,29,8,33,35,8,33,36,8,33,37,8,33,38,8,34,0,8,34,1,8,34,2,8,34,3,8,34,4,8,34,12,8,34,13,8,34,14,8,34,15,8,34,16,8,34,17,8,34,18,8,34,19,8,34,20,8,34,21,8,34,22,8,34,23,8,34,24,8,34,25,8,34,26,8,34,27,8,34,28,8,34,29,8,34,30,8,34,36,8,34,37,8,34,38,8,35,0,8,35,1,8,35,2,8,35,3,8,35,4,8,35,12,8,35,13,8,35,14,8,35,15,8,35,16,8,35,17,8,35,18,8,35,19,8,35,20,8,35,21,8,35,22,8,35,23,8,35,24,8,35,25,8,35,26,8,35,27,8,35,28,8,35,29,8,35,30,8,35,31,8,35,37,8,35,38,9,4,0,9,4,13,9,4,14,9,4,15,9,4,16,9,4,17,9,4,18,9,4,19,9,4,20,9,4,21,9,4,22,9,4,23,9,4,24,9,4,25,9,4,26,9,4,27,9,4,28,9,4,29,9,4,30,9,4,31,9,4,32,9,4,33,9,4,34,9,4,35,9,4,36,9,4,37,9,4,38,9,5,0,9,5,1,9,5,13,9,5,14,9,5,15,9,5,16,9,5,17,9,5,18,9,5,19,9,5,20,9,5,21,9,5,22,9,5,23,9,5,24,9,5,25,9,5,26,9,5,27,9,5,28,9,5,29,9,5,30,9,5,31,9,5,32,9,5,33,9,5,34,9,5,35,9,5,36,9,5,37,9,5,38,9,6,0,9,6,1,9,6,2,9,6,13,9,6,14,9,6,15,9,6,16,9,6,17,9,6,18,9,6,19,9,6,20,9,6,21,9,6,22,9,6,23,9,6,24,9,6,25,9,6,26,9,6,27,9,6,28,9,6,29,9,6,30,9,6,31,9,6,32,9,6,33,9,6,34,9,6,35,9,6,36,9,6,37,9,6,38,9,7,0,9,7,1,9,7,2,9,7,3,9,7,13,9,7,14,9,7,15,9,7,16,9,7,17,9,7,18,9,7,19,9,7,20,9,7,21,9,7,22,9,7,23,9,7,24,9,7,25,9,7,26,9,7,27,9,7,28,9,7,29,9,7,30,9,7,31,9,7,32,9,7,33,9,7,34,9,7,35,9,7,36,9,7,37,9,7,38,9,13,0,9,13,1,9,13,2,9,13,3,9,13,4,9,13,5,9,13,15,9,13,16,9,13,17,9,13,18,9,13,19,9,13,20,9,13,21,9,13,22,9,13,23,9,13,24,9,13,25,9,13,26,9,13,27,9,13,28,9,13,29,9,13,30,9,13,31,9,13,32,9,13,33,9,13,34,9,13,35,9,13,36,9,13,37,9,13,38,9,14,0,9,14,1,9,14,2,9,14,3,9,14,4,9,14,5,9,14,16,9,14,17,9,14,18,9,14,19,9,14,20,9,14,21,9,14,22,9,14,23,9,14,24,9,14,25,9,14,26,9,14,27,9,14,28,9,14,29,9,14,30,9,14,31,9,14,32,9,14,33,9,14,34,9,14,35,9,14,36,9,14,37,9,14,38,9,15,0,9,15,1,9,15,2,9,15,3,9,15,4,9,15,5,9,15,17,9,15,18,9,15,19,9,15,20,9,15,21,9,15,22,9,15,23,9,15,24,9,15,25,9,15,26,9,15,27,9,15,28,9,15,29,9,15,30,9,15,31,9,15,32,9,15,33,9,15,34,9,15,35,9,15,36,9,15,37,9,15,38,9,16,0,9,16,1,9,16,2,9,16,3,9,16,4,9,16,5,9,16,18,9,16,19,9,16,20,9,16,21,9,16,22,9,16,23,9,16,24,9,16,25,9,16,26,9,16,27,9,16,28,9,16,29,9,16,30,9,16,31,9,16,32,9,16,33,9,16,34,9,16,35,9,16,36,9,16,37,9,16,38,9,17,0,9,17,1,9,17,2,9,17,3,9,17,4,9,17,5,9,17,13,9,17,19,9,17,20,9,17,21,9,17,22,9,17,23,9,17,24,9,17,25,9,17,26,9,17,27,9,17,28,9,17,29,9,17,30,9,17,31,9,17,32,9,17,33,9,17,34,9,17,35,9,17,36,9,17,37,9,17,38,9,18,0,9,18,1,9,18,2,9,18,3,9,18,4,9,18,5,9,18,13,9,18,14,9,18,20,9,18,21,9,18,22,9,18,23,9,18,24,9,18,25,9,18,26,9,18,27,9,18,28,9,18,29,9,18,30,9,18,31,9,18,32,9,18,33,9,18,34,9,18,35,9,18,36,9,18,37,9,18,38,9,19,0,9,19,1,9,19,2,9,19,3,9,19,4,9,19,5,9,19,13,9,19,14,9,19,15,9,19,21,9,19,22,9,19,23,9,19,24,9,19,25,9,19,26,9,19,27,9,19,28,9,19,29,9,19,30,9,19,31,9,19,32,9,19,33,9,19,34,9,19,35,9,19,36,9,19,37,9,19,38,9,20,0,9,20,1,9,20,2,9,20,3,9,20,4,9,20,5,9,20,13,9,20,14,9,20,15,9,20,16,9,20,22,9,20,23,9,20,24,9,20,25,9,20,26,9,20,27,9,20,28,9,20,29,9,20,30,9,20,31,9,20,32,9,20,33,9,20,34,9,20,35,9,20,36,9,20,37,9,20,38,9,21,0,9,21,1,9,21,2,9,21,3,9,21,4,9,21,5,9,21,13,9,21,14,9,21,15,9,21,16,9,21,17,9,21,23,9,21,24,9,21,25,9,21,26,9,21,27,9,21,28,9,21,29,9,21,30,9,21,31,9,21,32,9,21,33,9,21,34,9,21,35,9,21,36,9,21,37,9,21,38,9,22,0,9,22,1,9,22,2,9,22,3,9,22,4,9,22,5,9,22,13,9,22,14,9,22,15,9,22,16,9,22,17,9,22,18,9,22,24,9,22,25,9,22,26,9,22,27,9,22,28,9,22,29,9,22,30,9,22,31,9,22,32,9,22,33,9,22,34,9,22,35,9,22,36,9,22,37,9,22,38,9,23,0,9,23,1,9,23,2,9,23,3,9,23,4,9,23,5,9,23,13,9,23,14,9,23,15,9,23,16,9,23,17,9,23,18,9,23,19,9,23,25,9,23,26,9,23,27,9,23,28,9,23,29,9,23,30,9,23,31,9,23,32,9,23,33,9,23,34,9,23,35,9,23,36,9,23,37,9,23,38,9,24,0,9,24,1,9,24,2,9,24,3,9,24,4,9,24,5,9,24,13,9,24,14,9,24,15,9,24,16,9,24,17,9,24,18,9,24,19,9,24,20,9,24,26,9,24,27,9,24,28,9,24,29,9,24,30,9,24,31,9,24,32,9,24,33,9,24,34,9,24,35,9,24,36,9,24,37,9,24,38,9,25,0,9,25,1,9,25,2,9,25,3,9,25,4,9,25,5,9,25,13,9,25,14,9,25,15,9,25,16,9,25,17,9,25,18,9,25,19,9,25,20,9,25,21,9,25,27,9,25,28,9,25,29,9,25,30,9,25,31,9,25,32,9,25,33,9,25,34,9,25,35,9,25,36,9,25,37,9,25,38,9,26,0,9,26,1,9,26,2,9,26,3,9,26,4,9,26,5,9,26,13,9,26,14,9,26,15,9,26,16,9,26,17,9,26,18,9,26,19,9,26,20,9,26,21,9,26,22,9,26,28,9,26,29,9,26,30,9,26,31,9,26,32,9,26,33,9,26,34,9,26,35,9,26,36,9,26,37,9,26,38,9,27,0,9,27,1,9,27,2,9,27,3,9,27,4,9,27,5,9,27,13,9,27,14,9,27,15,9,27,16,9,27,17,9,27,18,9,27,19,9,27,20,9,27,21,9,27,22,9,27,23,9,27,29,9,27,30,9,27,31,9,27,32,9,27,33,9,27,34,9,27,35,9,27,36,9,27,37,9,27,38,9,28,0,9,28,1,9,28,2,9,28,3,9,28,4,9,28,5,9,28,13,9,28,14,9,28,15,9,28,16,9,28,17,9,28,18,9,28,19,9,28,20,9,28,21,9,28,22,9,28,23,9,28,24,9,28,30,9,28,31,9,28,32,9,28,33,9,28,34,9,28,35,9,28,36,9,28,37,9,28,38,9,29,0,9,29,1,9,29,2,9,29,3,9,29,4,9,29,5,9,29,13,9,29,14,9,29,15,9,29,16,9,29,17,9,29,18,9,29,19,9,29,20,9,29,21,9,29,22,9,29,23,9,29,24,9,29,25,9,29,31,9,29,32,9,29,33,9,29,34,9,29,35,9,29,36,9,29,37,9,29,38,9,30,0,9,30,1,9,30,2,9,30,3,9,30,4,9,30,5,9,30,13,9,30,14,9,30,15,9,30,16,9,30,17,9,30,18,9,30,19,9,30,20,9,30,21,9,30,22,9,30,23,9,30,24,9,30,25,9,30,26,9,30,32,9,30,33,9,30,34,9,30,35,9,30,36,9,30,37,9,30,38,9,31,0,9,31,1,9,31,2,9,31,3,9,31,4,9,31,5,9,31,13,9,31,14,9,31,15,9,31,16,9,31,17,9,31,18,9,31,19,9,31,20,9,31,21,9,31,22,9,31,23,9,31,24,9,31,25,9,31,26,9,31,27,9,31,33,9,31,34,9,31,35,9,31,36,9,31,37,9,31,38,9,32,0,9,32,1,9,32,2,9,32,3,9,32,4,9,32,5,9,32,13,9,32,14,9,32,15,9,32,16,9,32,17,9,32,18,9,32,19,9,32,20,9,32,21,9,32,22,9,32,23,9,32,24,9,32,25,9,32,26,9,32,27,9,32,28,9,32,34,9,32,35,9,32,36,9,32,37,9,32,38,9,33,0,9,33,1,9,33,2,9,33,3,9,33,4,9,33,5,9,33,13,9,33,14,9,33,15,9,33,16,9,33,17,9,33,18,9,33,19,9,33,20,9,33,21,9,33,22,9,33,23,9,33,24,9,33,25,9,33,26,9,33,27,9,33,28,9,33,29,9,33,35,9,33,36,9,33,37,9,33,38,9,34,0,9,34,1,9,34,2,9,34,3,9,34,4,9,34,5,9,34,13,9,34,14,9,34,15,9,34,16,9,34,17,9,34,18,9,34,19,9,34,20,9,34,21,9,34,22,9,34,23,9,34,24,9,34,25,9,34,26,9,34,27,9,34,28,9,34,29,9,34,30,9,34,36,9,34,37,9,34,38,9,35,0,9,35,1,9,35,2,9,35,3,9,35,4,9,35,5,9,35,13,9,35,14,9,35,15,9,35,16,9,35,17,9,35,18,9,35,19,9,35,20,9,35,21,9,35,22,9,35,23,9,35,24,9,35,25,9,35,26,9,35,27,9,35,28,9,35,29,9,35,30,9,35,31,9,35,37,9,35,38,10,4,0,10,4,6,10,4,14,10,4,15,10,4,16,10,4,17,10,4,18,10,4,19,10,4,20,10,4,21,10,4,22,10,4,23,10,4,24,10,4,25,10,4,26,10,4,27,10,4,28,10,4,29,10,4,30,10,4,31,10,4,32,10,4,33,10,4,34,10,4,35,10,4,36,10,4,37,10,4,38,10,5,0,10,5,1,10,5,14,10,5,15,10,5,16,10,5,17,10,5,18,10,5,19,10,5,20,10,5,21,10,5,22,10,5,23,10,5,24,10,5,25,10,5,26,10,5,27,10,5,28,10,5,29,10,5,30,10,5,31,10,5,32,10,5,33,10,5,34,10,5,35,10,5,36,10,5,37,10,5,38,10,6,0,10,6,1,10,6,2,10,6,14,10,6,15,10,6,16,10,6,17,10,6,18,10,6,19,10,6,20,10,6,21,10,6,22,10,6,23,10,6,24,10,6,25,10,6,26,10,6,27,10,6,28,10,6,29,10,6,30,10,6,31,10,6,32,10,6,33,10,6,34,10,6,35,10,6,36,10,6,37,10,6,38,10,7,0,10,7,1,10,7,2,10,7,3,10,7,14,10,7,15,10,7,16,10,7,17,10,7,18,10,7,19,10,7,20,10,7,21,10,7,22,10,7,23,10,7,24,10,7,25,10,7,26,10,7,27,10,7,28,10,7,29,10,7,30,10,7,31,10,7,32,10,7,33,10,7,34,10,7,35,10,7,36,10,7,37,10,7,38,10,8,0,10,8,1,10,8,2,10,8,3,10,8,4,10,8,14,10,8,15,10,8,16,10,8,17,10,8,18,10,8,19,10,8,20,10,8,21,10,8,22,10,8,23,10,8,24,10,8,25,10,8,26,10,8,27,10,8,28,10,8,29,10,8,30,10,8,31,10,8,32,10,8,33,10,8,34,10,8,35,10,8,36,10,8,37,10,8,38,10,14,0,10,14,1,10,14,2,10,14,3,10,14,4,10,14,5,10,14,6,10,14,16,10,14,17,10,14,18,10,14,19,10,14,20,10,14,21,10,14,22,10,14,23,10,14,24,10,14,25,10,14,26,10,14,27,10,14,28,10,14,29,10,14,30,10,14,31,10,14,32,10,14,33,10,14,34,10,14,35,10,14,36,10,14,37,10,14,38,10,15,0,10,15,1,10,15,2,10,15,3,10,15,4,10,15,5,10,15,6,10,15,17,10,15,18,10,15,19,10,15,20,10,15,21,10,15,22,10,15,23,10,15,24,10,15,25,10,15,26,10,15,27,10,15,28,10,15,29,10,15,30,10,15,31,10,15,32,10,15,33,10,15,34,10,15,35,10,15,36,10,15,37,10,15,38,10,16,0,10,16,1,10,16,2,10,16,3,10,16,4,10,16,5,10,16,6,10,16,18,10,16,19,10,16,20,10,16,21,10,16,22,10,16,23,10,16,24,10,16,25,10,16,26,10,16,27,10,16,28,10,16,29,10,16,30,10,16,31,10,16,32,10,16,33,10,16,34,10,16,35,10,16,36,10,16,37,10,16,38,10,17,0,10,17,1,10,17,2,10,17,3,10,17,4,10,17,5,10,17,6,10,17,19,10,17,20,10,17,21,10,17,22,10,17,23,10,17,24,10,17,25,10,17,26,10,17,27,10,17,28,10,17,29,10,17,30,10,17,31,10,17,32,10,17,33,10,17,34,10,17,35,10,17,36,10,17,37,10,17,38,10,18,0,10,18,1,10,18,2,10,18,3,10,18,4,10,18,5,10,18,6,10,18,14,10,18,20,10,18,21,10,18,22,10,18,23,10,18,24,10,18,25,10,18,26,10,18,27,10,18,28,10,18,29,10,18,30,10,18,31,10,18,32,10,18,33,10,18,34,10,18,35,10,18,36,10,18,37,10,18,38,10,19,0,10,19,1,10,19,2,10,19,3,10,19,4,10,19,5,10,19,6,10,19,14,10,19,15,10,19,21,10,19,22,10,19,23,10,19,24,10,19,25,10,19,26,10,19,27,10,19,28,10,19,29,10,19,30,10,19,31,10,19,32,10,19,33,10,19,34,10,19,35,10,19,36,10,19,37,10,19,38,10,20,0,10,20,1,10,20,2,10,20,3,10,20,4,10,20,5,10,20,6,10,20,14,10,20,15,10,20,16,10,20,22,10,20,23,10,20,24,10,20,25,10,20,26,10,20,27,10,20,28,10,20,29,10,20,30,10,20,31,10,20,32,10,20,33,10,20,34,10,20,35,10,20,36,10,20,37,10,20,38,10,21,0,10,21,1,10,21,2,10,21,3,10,21,4,10,21,5,10,21,6,10,21,14,10,21,15,10,21,16,10,21,17,10,21,23,10,21,24,10,21,25,10,21,26,10,21,27,10,21,28,10,21,29,10,21,30,10,21,31,10,21,32,10,21,33,10,21,34,10,21,35,10,21,36,10,21,37,10,21,38,10,22,0,10,22,1,10,22,2,10,22,3,10,22,4,10,22,5,10,22,6,10,22,14,10,22,15,10,22,16,10,22,17,10,22,18,10,22,24,10,22,25,10,22,26,10,22,27,10,22,28,10,22,29,10,22,30,10,22,31,10,22,32,10,22,33,10,22,34,10,22,35,10,22,36,10,22,37,10,22,38,10,23,0,10,23,1,10,23,2,10,23,3,10,23,4,10,23,5,10,23,6,10,23,14,10,23,15,10,23,16,10,23,17,10,23,18,10,23,19,10,23,25,10,23,26,10,23,27,10,23,28,10,23,29,10,23,30,10,23,31,10,23,32,10,23,33,10,23,34,10,23,35,10,23,36,10,23,37,10,23,38,10,24,0,10,24,1,10,24,2,10,24,3,10,24,4,10,24,5,10,24,6,10,24,14,10,24,15,10,24,16,10,24,17,10,24,18,10,24,19,10,24,20,10,24,26,10,24,27,10,24,28,10,24,29,10,24,30,10,24,31,10,24,32,10,24,33,10,24,34,10,24,35,10,24,36,10,24,37,10,24,38,10,25,0,10,25,1,10,25,2,10,25,3,10,25,4,10,25,5,10,25,6,10,25,14,10,25,15,10,25,16,10,25,17,10,25,18,10,25,19,10,25,20,10,25,21,10,25,27,10,25,28,10,25,29,10,25,30,10,25,31,10,25,32,10,25,33,10,25,34,10,25,35,10,25,36,10,25,37,10,25,38,10,26,0,10,26,1,10,26,2,10,26,3,10,26,4,10,26,5,10,26,6,10,26,14,10,26,15,10,26,16,10,26,17,10,26,18,10,26,19,10,26,20,10,26,21,10,26,22,10,26,28,10,26,29,10,26,30,10,26,31,10,26,32,10,26,33,10,26,34,10,26,35,10,26,36,10,26,37,10,26,38,10,27,0,10,27,1,10,27,2,10,27,3,10,27,4,10,27,5,10,27,6,10,27,14,10,27,15,10,27,16,10,27,17,10,27,18,10,27,19,10,27,20,10,27,21,10,27,22,10,27,23,10,27,29,10,27,30,10,27,31,10,27,32,10,27,33,10,27,34,10,27,35,10,27,36,10,27,37,10,27,38,10,28,0,10,28,1,10,28,2,10,28,3,10,28,4,10,28,5,10,28,6,10,28,14,10,28,15,10,28,16,10,28,17,10,28,18,10,28,19,10,28,20,10,28,21,10,28,22,10,28,23,10,28,24,10,28,30,10,28,31,10,28,32,10,28,33,10,28,34,10,28,35,10,28,36,10,28,37,10,28,38,10,29,0,10,29,1,10,29,2,10,29,3,10,29,4,10,29,5,10,29,6,10,29,14,10,29,15,10,29,16,10,29,17,10,29,18,10,29,19,10,29,20,10,29,21,10,29,22,10,29,23,10,29,24,10,29,25,10,29,31,10,29,32,10,29,33,10,29,34,10,29,35,10,29,36,10,29,37,10,29,38,10,30,0,10,30,1,10,30,2,10,30,3,10,30,4,10,30,5,10,30,6,10,30,14,10,30,15,10,30,16,10,30,17,10,30,18,10,30,19,10,30,20,10,30,21,10,30,22,10,30,23,10,30,24,10,30,25,10,30,26,10,30,32,10,30,33,10,30,34,10,30,35,10,30,36,10,30,37,10,30,38,10,31,0,10,31,1,10,31,2,10,31,3,10,31,4,10,31,5,10,31,6,10,31,14,10,31,15,10,31,16,10,31,17,10,31,18,10,31,19,10,31,20,10,31,21,10,31,22,10,31,23,10,31,24,10,31,25,10,31,26,10,31,27,10,31,33,10,31,34,10,31,35,10,31,36,10,31,37,10,31,38,10,32,0,10,32,1,10,32,2,10,32,3,10,32,4,10,32,5,10,32,6,10,32,14,10,32,15,10,32,16,10,32,17,10,32,18,10,32,19,10,32,20,10,32,21,10,32,22,10,32,23,10,32,24,10,32,25,10,32,26,10,32,27,10,32,28,10,32,34,10,32,35,10,32,36,10,32,37,10,32,38,10,33,0,10,33,1,10,33,2,10,33,3,10,33,4,10,33,5,10,33,6,10,33,14,10,33,15,10,33,16,10,33,17,10,33,18,10,33,19,10,33,20,10,33,21,10,33,22,10,33,23,10,33,24,10,33,25,10,33,26,10,33,27,10,33,28,10,33,29,10,33,35,10,33,36,10,33,37,10,33,38,10,34,0,10,34,1,10,34,2,10,34,3,10,34,4,10,34,5,10,34,6,10,34,14,10,34,15,10,34,16,10,34,17,10,34,18,10,34,19,10,34,20,10,34,21,10,34,22,10,34,23,10,34,24,10,34,25,10,34,26,10,34,27,10,34,28,10,34,29,10,34,30,10,34,36,10,34,37,10,34,38,10,35,0,10,35,1,10,35,2,10,35,3,10,35,4,10,35,5,10,35,6,10,35,14,10,35,15,10,35,16,10,35,17,10,35,18,10,35,19,10,35,20,10,35,21,10,35,22,10,35,23,10,35,24,10,35,25,10,35,26,10,35,27,10,35,28,10,35,29,10,35,30,10,35,31,10,35,37,10,35,38,11,4,0,11,4,6,11,4,7,11,4,15,11,4,16,11,4,17,11,4,18,11,4,19,11,4,20,11,4,21,11,4,22,11,4,23,11,4,24,11,4,25,11,4,26,11,4,27,11,4,28,11,4,29,11,4,30,11,4,31,11,4,32,11,4,33,11,4,34,11,4,35,11,4,36,11,4,37,11,4,38,11,5,0,11,5,1,11,5,7,11,5,15,11,5,16,11,5,17,11,5,18,11,5,19,11,5,20,11,5,21,11,5,22,11,5,23,11,5,24,11,5,25,11,5,26,11,5,27,11,5,28,11,5,29,11,5,30,11,5,31,11,5,32,11,5,33,11,5,34,11,5,35,11,5,36,11,5,37,11,5,38,11,6,0,11,6,1,11,6,2,11,6,15,11,6,16,11,6,17,11,6,18,11,6,19,11,6,20,11,6,21,11,6,22,11,6,23,11,6,24,11,6,25,11,6,26,11,6,27,11,6,28,11,6,29,11,6,30,11,6,31,11,6,32,11,6,33,11,6,34,11,6,35,11,6,36,11,6,37,11,6,38,11,7,0,11,7,1,11,7,2,11,7,3,11,7,15,11,7,16,11,7,17,11,7,18,11,7,19,11,7,20,11,7,21,11,7,22,11,7,23,11,7,24,11,7,25,11,7,26,11,7,27,11,7,28,11,7,29,11,7,30,11,7,31,11,7,32,11,7,33,11,7,34,11,7,35,11,7,36,11,7,37,11,7,38,11,8,0,11,8,1,11,8,2,11,8,3,11,8,4,11,8,15,11,8,16,11,8,17,11,8,18,11,8,19,11,8,20,11,8,21,11,8,22,11,8,23,11,8,24,11,8,25,11,8,26,11,8,27,11,8,28,11,8,29,11,8,30,11,8,31,11,8,32,11,8,33,11,8,34,11,8,35,11,8,36,11,8,37,11,8,38,11,9,0,11,9,1,11,9,2,11,9,3,11,9,4,11,9,5,11,9,15,11,9,16,11,9,17,11,9,18,11,9,19,11,9,20,11,9,21,11,9,22,11,9,23,11,9,24,11,9,25,11,9,26,11,9,27,11,9,28,11,9,29,11,9,30,11,9,31,11,9,32,11,9,33,11,9,34,11,9,35,11,9,36,11,9,37,11,9,38,11,15,0,11,15,1,11,15,2,11,15,3,11,15,4,11,15,5,11,15,6,11,15,7,11,15,17,11,15,18,11,15,19,11,15,20,11,15,21,11,15,22,11,15,23,11,15,24,11,15,25,11,15,26,11,15,27,11,15,28,11,15,29,11,15,30,11,15,31,11,15,32,11,15,33,11,15,34,11,15,35,11,15,36,11,15,37,11,15,38,11,16,0,11,16,1,11,16,2,11,16,3,11,16,4,11,16,5,11,16,6,11,16,7,11,16,18,11,16,19,11,16,20,11,16,21,11,16,22,11,16,23,11,16,24,11,16,25,11,16,26,11,16,27,11,16,28,11,16,29,11,16,30,11,16,31,11,16,32,11,16,33,11,16,34,11,16,35,11,16,36,11,16,37,11,16,38,11,17,0,11,17,1,11,17,2,11,17,3,11,17,4,11,17,5,11,17,6,11,17,7,11,17,19,11,17,20,11,17,21,11,17,22,11,17,23,11,17,24,11,17,25,11,17,26,11,17,27,11,17,28,11,17,29,11,17,30,11,17,31,11,17,32,11,17,33,11,17,34,11,17,35,11,17,36,11,17,37,11,17,38,11,18,0,11,18,1,11,18,2,11,18,3,11,18,4,11,18,5,11,18,6,11,18,7,11,18,20,11,18,21,11,18,22,11,18,23,11,18,24,11,18,25,11,18,26,11,18,27,11,18,28,11,18,29,11,18,30,11,18,31,11,18,32,11,18,33,11,18,34,11,18,35,11,18,36,11,18,37,11,18,38,11,19,0,11,19,1,11,19,2,11,19,3,11,19,4,11,19,5,11,19,6,11,19,7,11,19,15,11,19,21,11,19,22,11,19,23,11,19,24,11,19,25,11,19,26,11,19,27,11,19,28,11,19,29,11,19,30,11,19,31,11,19,32,11,19,33,11,19,34,11,19,35,11,19,36,11,19,37,11,19,38,11,20,0,11,20,1,11,20,2,11,20,3,11,20,4,11,20,5,11,20,6,11,20,7,11,20,15,11,20,16,11,20,22,11,20,23,11,20,24,11,20,25,11,20,26,11,20,27,11,20,28,11,20,29,11,20,30,11,20,31,11,20,32,11,20,33,11,20,34,11,20,35,11,20,36,11,20,37,11,20,38,11,21,0,11,21,1,11,21,2,11,21,3,11,21,4,11,21,5,11,21,6,11,21,7,11,21,15,11,21,16,11,21,17,11,21,23,11,21,24,11,21,25,11,21,26,11,21,27,11,21,28,11,21,29,11,21,30,11,21,31,11,21,32,11,21,33,11,21,34,11,21,35,11,21,36,11,21,37,11,21,38,11,22,0,11,22,1,11,22,2,11,22,3,11,22,4,11,22,5,11,22,6,11,22,7,11,22,15,11,22,16,11,22,17,11,22,18,11,22,24,11,22,25,11,22,26,11,22,27,11,22,28,11,22,29,11,22,30,11,22,31,11,22,32,11,22,33,11,22,34,11,22,35,11,22,36,11,22,37,11,22,38,11,23,0,11,23,1,11,23,2,11,23,3,11,23,4,11,23,5,11,23,6,11,23,7,11,23,15,11,23,16,11,23,17,11,23,18,11,23,19,11,23,25,11,23,26,11,23,27,11,23,28,11,23,29,11,23,30,11,23,31,11,23,32,11,23,33,11,23,34,11,23,35,11,23,36,11,23,37,11,23,38,11,24,0,11,24,1,11,24,2,11,24,3,11,24,4,11,24,5,11,24,6,11,24,7,11,24,15,11,24,16,11,24,17,11,24,18,11,24,19,11,24,20,11,24,26,11,24,27,11,24,28,11,24,29,11,24,30,11,24,31,11,24,32,11,24,33,11,24,34,11,24,35,11,24,36,11,24,37,11,24,38,11,25,0,11,25,1,11,25,2,11,25,3,11,25,4,11,25,5,11,25,6,11,25,7,11,25,15,11,25,16,11,25,17,11,25,18,11,25,19,11,25,20,11,25,21,11,25,27,11,25,28,11,25,29,11,25,30,11,25,31,11,25,32,11,25,33,11,25,34,11,25,35,11,25,36,11,25,37,11,25,38,11,26,0,11,26,1,11,26,2,11,26,3,11,26,4,11,26,5,11,26,6,11,26,7,11,26,15,11,26,16,11,26,17,11,26,18,11,26,19,11,26,20,11,26,21,11,26,22,11,26,28,11,26,29,11,26,30,11,26,31,11,26,32,11,26,33,11,26,34,11,26,35,11,26,36,11,26,37,11,26,38,11,27,0,11,27,1,11,27,2,11,27,3,11,27,4,11,27,5,11,27,6,11,27,7,11,27,15,11,27,16,11,27,17,11,27,18,11,27,19,11,27,20,11,27,21,11,27,22,11,27,23,11,27,29,11,27,30,11,27,31,11,27,32,11,27,33,11,27,34,11,27,35,11,27,36,11,27,37,11,27,38,11,28,0,11,28,1,11,28,2,11,28,3,11,28,4,11,28,5,11,28,6,11,28,7,11,28,15,11,28,16,11,28,17,11,28,18,11,28,19,11,28,20,11,28,21,11,28,22,11,28,23,11,28,24,11,28,30,11,28,31,11,28,32,11,28,33,11,28,34,11,28,35,11,28,36,11,28,37,11,28,38,11,29,0,11,29,1,11,29,2,11,29,3,11,29,4,11,29,5,11,29,6,11,29,7,11,29,15,11,29,16,11,29,17,11,29,18,11,29,19,11,29,20,11,29,21,11,29,22,11,29,23,11,29,24,11,29,25,11,29,31,11,29,32,11,29,33,11,29,34,11,29,35,11,29,36,11,29,37,11,29,38,11,30,0,11,30,1,11,30,2,11,30,3,11,30,4,11,30,5,11,30,6,11,30,7,11,30,15,11,30,16,11,30,17,11,30,18,11,30,19,11,30,20,11,30,21,11,30,22,11,30,23,11,30,24,11,30,25,11,30,26,11,30,32,11,30,33,11,30,34,11,30,35,11,30,36,11,30,37,11,30,38,11,31,0,11,31,1,11,31,2,11,31,3,11,31,4,11,31,5,11,31,6,11,31,7,11,31,15,11,31,16,11,31,17,11,31,18,11,31,19,11,31,20,11,31,21,11,31,22,11,31,23,11,31,24,11,31,25,11,31,26,11,31,27,11,31,33,11,31,34,11,31,35,11,31,36,11,31,37,11,31,38,11,32,0,11,32,1,11,32,2,11,32,3,11,32,4,11,32,5,11,32,6,11,32,7,11,32,15,11,32,16,11,32,17,11,32,18,11,32,19,11,32,20,11,32,21,11,32,22,11,32,23,11,32,24,11,32,25,11,32,26,11,32,27,11,32,28,11,32,34,11,32,35,11,32,36,11,32,37,11,32,38,11,33,0,11,33,1,11,33,2,11,33,3,11,33,4,11,33,5,11,33,6,11,33,7,11,33,15,11,33,16,11,33,17,11,33,18,11,33,19,11,33,20,11,33,21,11,33,22,11,33,23,11,33,24,11,33,25,11,33,26,11,33,27,11,33,28,11,33,29,11,33,35,11,33,36,11,33,37,11,33,38,11,34,0,11,34,1,11,34,2,11,34,3,11,34,4,11,34,5,11,34,6,11,34,7,11,34,15,11,34,16,11,34,17,11,34,18,11,34,19,11,34,20,11,34,21,11,34,22,11,34,23,11,34,24,11,34,25,11,34,26,11,34,27,11,34,28,11,34,29,11,34,30,11,34,36,11,34,37,11,34,38,11,35,0,11,35,1,11,35,2,11,35,3,11,35,4,11,35,5,11,35,6,11,35,7,11,35,15,11,35,16,11,35,17,11,35,18,11,35,19,11,35,20,11,35,21,11,35,22,11,35,23,11,35,24,11,35,25,11,35,26,11,35,27,11,35,28,11,35,29,11,35,30,11,35,31,11,35,37,11,35,38,12,4,0,12,4,6,12,4,7,12,4,8,12,4,16,12,4,17,12,4,18,12,4,19,12,4,20,12,4,21,12,4,22,12,4,23,12,4,24,12,4,25,12,4,26,12,4,27,12,4,28,12,4,29,12,4,30,12,4,31,12,4,32,12,4,33,12,4,34,12,4,35,12,4,36,12,4,37,12,4,38,12,5,0,12,5,1,12,5,7,12,5,8,12,5,16,12,5,17,12,5,18,12,5,19,12,5,20,12,5,21,12,5,22,12,5,23,12,5,24,12,5,25,12,5,26,12,5,27,12,5,28,12,5,29,12,5,30,12,5,31,12,5,32,12,5,33,12,5,34,12,5,35,12,5,36,12,5,37,12,5,38,12,6,0,12,6,1,12,6,2,12,6,8,12,6,16,12,6,17,12,6,18,12,6,19,12,6,20,12,6,21,12,6,22,12,6,23,12,6,24,12,6,25,12,6,26,12,6,27,12,6,28,12,6,29,12,6,30,12,6,31,12,6,32,12,6,33,12,6,34,12,6,35,12,6,36,12,6,37,12,6,38,12,7,0,12,7,1,12,7,2,12,7,3,12,7,16,12,7,17,12,7,18,12,7,19,12,7,20,12,7,21,12,7,22,12,7,23,12,7,24,12,7,25,12,7,26,12,7,27,12,7,28,12,7,29,12,7,30,12,7,31,12,7,32,12,7,33,12,7,34,12,7,35,12,7,36,12,7,37,12,7,38,12,8,0,12,8,1,12,8,2,12,8,3,12,8,4,12,8,16,12,8,17,12,8,18,12,8,19,12,8,20,12,8,21,12,8,22,12,8,23,12,8,24,12,8,25,12,8,26,12,8,27,12,8,28,12,8,29,12,8,30,12,8,31,12,8,32,12,8,33,12,8,34,12,8,35,12,8,36,12,8,37,12,8,38,12,9,0,12,9,1,12,9,2,12,9,3,12,9,4,12,9,5,12,9,16,12,9,17,12,9,18,12,9,19,12,9,20,12,9,21,12,9,22,12,9,23,12,9,24,12,9,25,12,9,26,12,9,27,12,9,28,12,9,29,12,9,30,12,9,31,12,9,32,12,9,33,12,9,34,12,9,35,12,9,36,12,9,37,12,9,38,12,10,0,12,10,1,12,10,2,12,10,3,12,10,4,12,10,5,12,10,6,12,10,16,12,10,17,12,10,18,12,10,19,12,10,20,12,10,21,12,10,22,12,10,23,12,10,24,12,10,25,12,10,26,12,10,27,12,10,28,12,10,29,12,10,30,12,10,31,12,10,32,12,10,33,12,10,34,12,10,35,12,10,36,12,10,37,12,10,38,12,16,0,12,16,1,12,16,2,12,16,3,12,16,4,12,16,5,12,16,6,12,16,7,12,16,8,12,16,18,12,16,19,12,16,20,12,16,21,12,16,22,12,16,23,12,16,24,12,16,25,12,16,26,12,16,27,12,16,28,12,16,29,12,16,30,12,16,31,12,16,32,12,16,33,12,16,34,12,16,35,12,16,36,12,16,37,12,16,38,12,17,0,12,17,1,12,17,2,12,17,3,12,17,4,12,17,5,12,17,6,12,17,7,12,17,8,12,17,19,12,17,20,12,17,21,12,17,22,12,17,23,12,17,24,12,17,25,12,17,26,12,17,27,12,17,28,12,17,29,12,17,30,12,17,31,12,17,32,12,17,33,12,17,34,12,17,35,12,17,36,12,17,37,12,17,38,12,18,0,12,18,1,12,18,2,12,18,3,12,18,4,12,18,5,12,18,6,12,18,7,12,18,8,12,18,20,12,18,21,12,18,22,12,18,23,12,18,24,12,18,25,12,18,26,12,18,27,12,18,28,12,18,29,12,18,30,12,18,31,12,18,32,12,18,33,12,18,34,12,18,35,12,18,36,12,18,37,12,18,38,12,19,0,12,19,1,12,19,2,12,19,3,12,19,4,12,19,5,12,19,6,12,19,7,12,19,8,12,19,21,12,19,22,12,19,23,12,19,24,12,19,25,12,19,26,12,19,27,12,19,28,12,19,29,12,19,30,12,19,31,12,19,32,12,19,33,12,19,34,12,19,35,12,19,36,12,19,37,12,19,38,12,20,0,12,20,1,12,20,2,12,20,3,12,20,4,12,20,5,12,20,6,12,20,7,12,20,8,12,20,16,12,20,22,12,20,23,12,20,24,12,20,25,12,20,26,12,20,27,12,20,28,12,20,29,12,20,30,12,20,31,12,20,32,12,20,33,12,20,34,12,20,35,12,20,36,12,20,37,12,20,38,12,21,0,12,21,1,12,21,2,12,21,3,12,21,4,12,21,5,12,21,6,12,21,7,12,21,8,12,21,16,12,21,17,12,21,23,12,21,24,12,21,25,12,21,26,12,21,27,12,21,28,12,21,29,12,21,30,12,21,31,12,21,32,12,21,33,12,21,34,12,21,35,12,21,36,12,21,37,12,21,38,12,22,0,12,22,1,12,22,2,12,22,3,12,22,4,12,22,5,12,22,6,12,22,7,12,22,8,12,22,16,12,22,17,12,22,18,12,22,24,12,22,25,12,22,26,12,22,27,12,22,28,12,22,29,12,22,30,12,22,31,12,22,32,12,22,33,12,22,34,12,22,35,12,22,36,12,22,37,12,22,38,12,23,0,12,23,1,12,23,2,12,23,3,12,23,4,12,23,5,12,23,6,12,23,7,12,23,8,12,23,16,12,23,17,12,23,18,12,23,19,12,23,25,12,23,26,12,23,27,12,23,28,12,23,29,12,23,30,12,23,31,12,23,32,12,23,33,12,23,34,12,23,35,12,23,36,12,23,37,12,23,38,12,24,0,12,24,1,12,24,2,12,24,3,12,24,4,12,24,5,12,24,6,12,24,7,12,24,8,12,24,16,12,24,17,12,24,18,12,24,19,12,24,20,12,24,26,12,24,27,12,24,28,12,24,29,12,24,30,12,24,31,12,24,32,12,24,33,12,24,34,12,24,35,12,24,36,12,24,37,12,24,38,12,25,0,12,25,1,12,25,2,12,25,3,12,25,4,12,25,5,12,25,6,12,25,7,12,25,8,12,25,16,12,25,17,12,25,18,12,25,19,12,25,20,12,25,21,12,25,27,12,25,28,12,25,29,12,25,30,12,25,31,12,25,32,12,25,33,12,25,34,12,25,35,12,25,36,12,25,37,12,25,38,12,26,0,12,26,1,12,26,2,12,26,3,12,26,4,12,26,5,12,26,6,12,26,7,12,26,8,12,26,16,12,26,17,12,26,18,12,26,19,12,26,20,12,26,21,12,26,22,12,26,28,12,26,29,12,26,30,12,26,31,12,26,32,12,26,33,12,26,34,12,26,35,12,26,36,12,26,37,12,26,38,12,27,0,12,27,1,12,27,2,12,27,3,12,27,4,12,27,5,12,27,6,12,27,7,12,27,8,12,27,16,12,27,17,12,27,18,12,27,19,12,27,20,12,27,21,12,27,22,12,27,23,12,27,29,12,27,30,12,27,31,12,27,32,12,27,33,12,27,34,12,27,35,12,27,36,12,27,37,12,27,38,12,28,0,12,28,1,12,28,2,12,28,3,12,28,4,12,28,5,12,28,6,12,28,7,12,28,8,12,28,16,12,28,17,12,28,18,12,28,19,12,28,20,12,28,21,12,28,22,12,28,23,12,28,24,12,28,30,12,28,31,12,28,32,12,28,33,12,28,34,12,28,35,12,28,36,12,28,37,12,28,38,12,29,0,12,29,1,12,29,2,12,29,3,12,29,4,12,29,5,12,29,6,12,29,7,12,29,8,12,29,16,12,29,17,12,29,18,12,29,19,12,29,20,12,29,21,12,29,22,12,29,23,12,29,24,12,29,25,12,29,31,12,29,32,12,29,33,12,29,34,12,29,35,12,29,36,12,29,37,12,29,38,12,30,0,12,30,1,12,30,2,12,30,3,12,30,4,12,30,5,12,30,6,12,30,7,12,30,8,12,30,16,12,30,17,12,30,18,12,30,19,12,30,20,12,30,21,12,30,22,12,30,23,12,30,24,12,30,25,12,30,26,12,30,32,12,30,33,12,30,34,12,30,35,12,30,36,12,30,37,12,30,38,12,31,0,12,31,1,12,31,2,12,31,3,12,31,4,12,31,5,12,31,6,12,31,7,12,31,8,12,31,16,12,31,17,12,31,18,12,31,19,12,31,20,12,31,21,12,31,22,12,31,23,12,31,24,12,31,25,12,31,26,12,31,27,12,31,33,12,31,34,12,31,35,12,31,36,12,31,37,12,31,38,12,32,0,12,32,1,12,32,2,12,32,3,12,32,4,12,32,5,12,32,6,12,32,7,12,32,8,12,32,16,12,32,17,12,32,18,12,32,19,12,32,20,12,32,21,12,32,22,12,32,23,12,32,24,12,32,25,12,32,26,12,32,27,12,32,28,12,32,34,12,32,35,12,32,36,12,32,37,12,32,38,12,33,0,12,33,1,12,33,2,12,33,3,12,33,4,12,33,5,12,33,6,12,33,7,12,33,8,12,33,16,12,33,17,12,33,18,12,33,19,12,33,20,12,33,21,12,33,22,12,33,23,12,33,24,12,33,25,12,33,26,12,33,27,12,33,28,12,33,29,12,33,35,12,33,36,12,33,37,12,33,38,12,34,0,12,34,1,12,34,2,12,34,3,12,34,4,12,34,5,12,34,6,12,34,7,12,34,8,12,34,16,12,34,17,12,34,18,12,34,19,12,34,20,12,34,21,12,34,22,12,34,23,12,34,24,12,34,25,12,34,26,12,34,27,12,34,28,12,34,29,12,34,30,12,34,36,12,34,37,12,34,38,12,35,0,12,35,1,12,35,2,12,35,3,12,35,4,12,35,5,12,35,6,12,35,7,12,35,8,12,35,16,12,35,17,12,35,18,12,35,19,12,35,20,12,35,21,12,35,22,12,35,23,12,35,24,12,35,25,12,35,26,12,35,27,12,35,28,12,35,29,12,35,30,12,35,31,12,35,37,12,35,38,13,4,0,13,4,6,13,4,7,13,4,8,13,4,9,13,4,17,13,4,18,13,4,19,13,4,20,13,4,21,13,4,22,13,4,23,13,4,24,13,4,25,13,4,26,13,4,27,13,4,28,13,4,29,13,4,30,13,4,31,13,4,32,13,4,33,13,4,34,13,4,35,13,4,36,13,4,37,13,4,38,13,5,0,13,5,1,13,5,7,13,5,8,13,5,9,13,5,17,13,5,18,13,5,19,13,5,20,13,5,21,13,5,22,13,5,23,13,5,24,13,5,25,13,5,26,13,5,27,13,5,28,13,5,29,13,5,30,13,5,31,13,5,32,13,5,33,13,5,34,13,5,35,13,5,36,13,5,37,13,5,38,13,6,0,13,6,1,13,6,2,13,6,8,13,6,9,13,6,17,13,6,18,13,6,19,13,6,20,13,6,21,13,6,22,13,6,23,13,6,24,13,6,25,13,6,26,13,6,27,13,6,28,13,6,29,13,6,30,13,6,31,13,6,32,13,6,33,13,6,34,13,6,35,13,6,36,13,6,37,13,6,38,13,7,0,13,7,1,13,7,2,13,7,3,13,7,9,13,7,17,13,7,18,13,7,19,13,7,20,13,7,21,13,7,22,13,7,23,13,7,24,13,7,25,13,7,26,13,7,27,13,7,28,13,7,29,13,7,30,13,7,31,13,7,32,13,7,33,13,7,34,13,7,35,13,7,36,13,7,37,13,7,38,13,8,0,13,8,1,13,8,2,13,8,3,13,8,4,13,8,17,13,8,18,13,8,19,13,8,20,13,8,21,13,8,22,13,8,23,13,8,24,13,8,25,13,8,26,13,8,27,13,8,28,13,8,29,13,8,30,13,8,31,13,8,32,13,8,33,13,8,34,13,8,35,13,8,36,13,8,37,13,8,38,13,9,0,13,9,1,13,9,2,13,9,3,13,9,4,13,9,5,13,9,17,13,9,18,13,9,19,13,9,20,13,9,21,13,9,22,13,9,23,13,9,24,13,9,25,13,9,26,13,9,27,13,9,28,13,9,29,13,9,30,13,9,31,13,9,32,13,9,33,13,9,34,13,9,35,13,9,36,13,9,37,13,9,38,13,10,0,13,10,1,13,10,2,13,10,3,13,10,4,13,10,5,13,10,6,13,10,17,13,10,18,13,10,19,13,10,20,13,10,21,13,10,22,13,10,23,13,10,24,13,10,25,13,10,26,13,10,27,13,10,28,13,10,29,13,10,30,13,10,31,13,10,32,13,10,33,13,10,34,13,10,35,13,10,36,13,10,37,13,10,38,13,11,0,13,11,1,13,11,2,13,11,3,13,11,4,13,11,5,13,11,6,13,11,7,13,11,17,13,11,18,13,11,19,13,11,20,13,11,21,13,11,22,13,11,23,13,11,24,13,11,25,13,11,26,13,11,27,13,11,28,13,11,29,13,11,30,13,11,31,13,11,32,13,11,33,13,11,34,13,11,35,13,11,36,13,11,37,13,11,38,13,17,0,13,17,1,13,17,2,13,17,3,13,17,4,13,17,5,13,17,6,13,17,7,13,17,8,13,17,9,13,17,19,13,17,20,13,17,21,13,17,22,13,17,23,13,17,24,13,17,25,13,17,26,13,17,27,13,17,28,13,17,29,13,17,30,13,17,31,13,17,32,13,17,33,13,17,34,13,17,35,13,17,36,13,17,37,13,17,38,13,18,0,13,18,1,13,18,2,13,18,3,13,18,4,13,18,5,13,18,6,13,18,7,13,18,8,13,18,9,13,18,20,13,18,21,13,18,22,13,18,23,13,18,24,13,18,25,13,18,26,13,18,27,13,18,28,13,18,29,13,18,30,13,18,31,13,18,32,13,18,33,13,18,34,13,18,35,13,18,36,13,18,37,13,18,38,13,19,0,13,19,1,13,19,2,13,19,3,13,19,4,13,19,5,13,19,6,13,19,7,13,19,8,13,19,9,13,19,21,13,19,22,13,19,23,13,19,24,13,19,25,13,19,26,13,19,27,13,19,28,13,19,29,13,19,30,13,19,31,13,19,32,13,19,33,13,19,34,13,19,35,13,19,36,13,19,37,13,19,38,13,20,0,13,20,1,13,20,2,13,20,3,13,20,4,13,20,5,13,20,6,13,20,7,13,20,8,13,20,9,13,20,22,13,20,23,13,20,24,13,20,25,13,20,26,13,20,27,13,20,28,13,20,29,13,20,30,13,20,31,13,20,32,13,20,33,13,20,34,13,20,35,13,20,36,13,20,37,13,20,38,13,21,0,13,21,1,13,21,2,13,21,3,13,21,4,13,21,5,13,21,6,13,21,7,13,21,8,13,21,9,13,21,17,13,21,23,13,21,24,13,21,25,13,21,26,13,21,27,13,21,28,13,21,29,13,21,30,13,21,31,13,21,32,13,21,33,13,21,34,13,21,35,13,21,36,13,21,37,13,21,38,13,22,0,13,22,1,13,22,2,13,22,3,13,22,4,13,22,5,13,22,6,13,22,7,13,22,8,13,22,9,13,22,17,13,22,18,13,22,24,13,22,25,13,22,26,13,22,27,13,22,28,13,22,29,13,22,30,13,22,31,13,22,32,13,22,33,13,22,34,13,22,35,13,22,36,13,22,37,13,22,38,13,23,0,13,23,1,13,23,2,13,23,3,13,23,4,13,23,5,13,23,6,13,23,7,13,23,8,13,23,9,13,23,17,13,23,18,13,23,19,13,23,25,13,23,26,13,23,27,13,23,28,13,23,29,13,23,30,13,23,31,13,23,32,13,23,33,13,23,34,13,23,35,13,23,36,13,23,37,13,23,38,13,24,0,13,24,1,13,24,2,13,24,3,13,24,4,13,24,5,13,24,6,13,24,7,13,24,8,13,24,9,13,24,17,13,24,18,13,24,19,13,24,20,13,24,26,13,24,27,13,24,28,13,24,29,13,24,30,13,24,31,13,24,32,13,24,33,13,24,34,13,24,35,13,24,36,13,24,37,13,24,38,13,25,0,13,25,1,13,25,2,13,25,3,13,25,4,13,25,5,13,25,6,13,25,7,13,25,8,13,25,9,13,25,17,13,25,18,13,25,19,13,25,20,13,25,21,13,25,27,13,25,28,13,25,29,13,25,30,13,25,31,13,25,32,13,25,33,13,25,34,13,25,35,13,25,36,13,25,37,13,25,38,13,26,0,13,26,1,13,26,2,13,26,3,13,26,4,13,26,5,13,26,6,13,26,7,13,26,8,13,26,9,13,26,17,13,26,18,13,26,19,13,26,20,13,26,21,13,26,22,13,26,28,13,26,29,13,26,30,13,26,31,13,26,32,13,26,33,13,26,34,13,26,35,13,26,36,13,26,37,13,26,38,13,27,0,13,27,1,13,27,2,13,27,3,13,27,4,13,27,5,13,27,6,13,27,7,13,27,8,13,27,9,13,27,17,13,27,18,13,27,19,13,27,20,13,27,21,13,27,22,13,27,23,13,27,29,13,27,30,13,27,31,13,27,32,13,27,33,13,27,34,13,27,35,13,27,36,13,27,37,13,27,38,13,28,0,13,28,1,13,28,2,13,28,3,13,28,4,13,28,5,13,28,6,13,28,7,13,28,8,13,28,9,13,28,17,13,28,18,13,28,19,13,28,20,13,28,21,13,28,22,13,28,23,13,28,24,13,28,30,13,28,31,13,28,32,13,28,33,13,28,34,13,28,35,13,28,36,13,28,37,13,28,38,13,29,0,13,29,1,13,29,2,13,29,3,13,29,4,13,29,5,13,29,6,13,29,7,13,29,8,13,29,9,13,29,17,13,29,18,13,29,19,13,29,20,13,29,21,13,29,22,13,29,23,13,29,24,13,29,25,13,29,31,13,29,32,13,29,33,13,29,34,13,29,35,13,29,36,13,29,37,13,29,38,13,30,0,13,30,1,13,30,2,13,30,3,13,30,4,13,30,5,13,30,6,13,30,7,13,30,8,13,30,9,13,30,17,13,30,18,13,30,19,13,30,20,13,30,21,13,30,22,13,30,23,13,30,24,13,30,25,13,30,26,13,30,32,13,30,33,13,30,34,13,30,35,13,30,36,13,30,37,13,30,38,13,31,0,13,31,1,13,31,2,13,31,3,13,31,4,13,31,5,13,31,6,13,31,7,13,31,8,13,31,9,13,31,17,13,31,18,13,31,19,13,31,20,13,31,21,13,31,22,13,31,23,13,31,24,13,31,25,13,31,26,13,31,27,13,31,33,13,31,34,13,31,35,13,31,36,13,31,37,13,31,38,13,32,0,13,32,1,13,32,2,13,32,3,13,32,4,13,32,5,13,32,6,13,32,7,13,32,8,13,32,9,13,32,17,13,32,18,13,32,19,13,32,20,13,32,21,13,32,22,13,32,23,13,32,24,13,32,25,13,32,26,13,32,27,13,32,28,13,32,34,13,32,35,13,32,36,13,32,37,13,32,38,13,33,0,13,33,1,13,33,2,13,33,3,13,33,4,13,33,5,13,33,6,13,33,7,13,33,8,13,33,9,13,33,17,13,33,18,13,33,19,13,33,20,13,33,21,13,33,22,13,33,23,13,33,24,13,33,25,13,33,26,13,33,27,13,33,28,13,33,29,13,33,35,13,33,36,13,33,37,13,33,38,13,34,0,13,34,1,13,34,2,13,34,3,13,34,4,13,34,5,13,34,6,13,34,7,13,34,8,13,34,9,13,34,17,13,34,18,13,34,19,13,34,20,13,34,21,13,34,22,13,34,23,13,34,24,13,34,25,13,34,26,13,34,27,13,34,28,13,34,29,13,34,30,13,34,36,13,34,37,13,34,38,13,35,0,13,35,1,13,35,2,13,35,3,13,35,4,13,35,5,13,35,6,13,35,7,13,35,8,13,35,9,13,35,17,13,35,18,13,35,19,13,35,20,13,35,21,13,35,22,13,35,23,13,35,24,13,35,25,13,35,26,13,35,27,13,35,28,13,35,29,13,35,30,13,35,31,13,35,37,13,35,38,14,4,0,14,4,6,14,4,7,14,4,8,14,4,9,14,4,10,14,4,18,14,4,19,14,4,20,14,4,21,14,4,22,14,4,23,14,4,24,14,4,25,14,4,26,14,4,27,14,4,28,14,4,29,14,4,30,14,4,31,14,4,32,14,4,33,14,4,34,14,4,35,14,4,36,14,4,37,14,4,38,14,5,0,14,5,1,14,5,7,14,5,8,14,5,9,14,5,10,14,5,18,14,5,19,14,5,20,14,5,21,14,5,22,14,5,23,14,5,24,14,5,25,14,5,26,14,5,27,14,5,28,14,5,29,14,5,30,14,5,31,14,5,32,14,5,33,14,5,34,14,5,35,14,5,36,14,5,37,14,5,38,14,6,0,14,6,1,14,6,2,14,6,8,14,6,9,14,6,10,14,6,18,14,6,19,14,6,20,14,6,21,14,6,22,14,6,23,14,6,24,14,6,25,14,6,26,14,6,27,14,6,28,14,6,29,14,6,30,14,6,31,14,6,32,14,6,33,14,6,34,14,6,35,14,6,36,14,6,37,14,6,38,14,7,0,14,7,1,14,7,2,14,7,3,14,7,9,14,7,10,14,7,18,14,7,19,14,7,20,14,7,21,14,7,22,14,7,23,14,7,24,14,7,25,14,7,26,14,7,27,14,7,28,14,7,29,14,7,30,14,7,31,14,7,32,14,7,33,14,7,34,14,7,35,14,7,36,14,7,37,14,7,38,14,8,0,14,8,1,14,8,2,14,8,3,14,8,4,14,8,10,14,8,18,14,8,19,14,8,20,14,8,21,14,8,22,14,8,23,14,8,24,14,8,25,14,8,26,14,8,27,14,8,28,14,8,29,14,8,30,14,8,31,14,8,32,14,8,33,14,8,34,14,8,35,14,8,36,14,8,37,14,8,38,14,9,0,14,9,1,14,9,2,14,9,3,14,9,4,14,9,5,14,9,18,14,9,19,14,9,20,14,9,21,14,9,22,14,9,23,14,9,24,14,9,25,14,9,26,14,9,27,14,9,28,14,9,29,14,9,30,14,9,31,14,9,32,14,9,33,14,9,34,14,9,35,14,9,36,14,9,37,14,9,38,14,10,0,14,10,1,14,10,2,14,10,3,14,10,4,14,10,5,14,10,6,14,10,18,14,10,19,14,10,20,14,10,21,14,10,22,14,10,23,14,10,24,14,10,25,14,10,26,14,10,27,14,10,28,14,10,29,14,10,30,14,10,31,14,10,32,14,10,33,14,10,34,14,10,35,14,10,36,14,10,37,14,10,38,14,11,0,14,11,1,14,11,2,14,11,3,14,11,4,14,11,5,14,11,6,14,11,7,14,11,18,14,11,19,14,11,20,14,11,21,14,11,22,14,11,23,14,11,24,14,11,25,14,11,26,14,11,27,14,11,28,14,11,29,14,11,30,14,11,31,14,11,32,14,11,33,14,11,34,14,11,35,14,11,36,14,11,37,14,11,38,14,12,0,14,12,1,14,12,2,14,12,3,14,12,4,14,12,5,14,12,6,14,12,7,14,12,8,14,12,18,14,12,19,14,12,20,14,12,21,14,12,22,14,12,23,14,12,24,14,12,25,14,12,26,14,12,27,14,12,28,14,12,29,14,12,30,14,12,31,14,12,32,14,12,33,14,12,34,14,12,35,14,12,36,14,12,37,14,12,38,14,18,0,14,18,1,14,18,2,14,18,3,14,18,4,14,18,5,14,18,6,14,18,7,14,18,8,14,18,9,14,18,10,14,18,20,14,18,21,14,18,22,14,18,23,14,18,24,14,18,25,14,18,26,14,18,27,14,18,28,14,18,29,14,18,30,14,18,31,14,18,32,14,18,33,14,18,34,14,18,35,14,18,36,14,18,37,14,18,38,14,19,0,14,19,1,14,19,2,14,19,3,14,19,4,14,19,5,14,19,6,14,19,7,14,19,8,14,19,9,14,19,10,14,19,21,14,19,22,14,19,23,14,19,24,14,19,25,14,19,26,14,19,27,14,19,28,14,19,29,14,19,30,14,19,31,14,19,32,14,19,33,14,19,34,14,19,35,14,19,36,14,19,37,14,19,38,14,20,0,14,20,1,14,20,2,14,20,3,14,20,4,14,20,5,14,20,6,14,20,7,14,20,8,14,20,9,14,20,10,14,20,22,14,20,23,14,20,24,14,20,25,14,20,26,14,20,27,14,20,28,14,20,29,14,20,30,14,20,31,14,20,32,14,20,33,14,20,34,14,20,35,14,20,36,14,20,37,14,20,38,14,21,0,14,21,1,14,21,2,14,21,3,14,21,4,14,21,5,14,21,6,14,21,7,14,21,8,14,21,9,14,21,10,14,21,23,14,21,24,14,21,25,14,21,26,14,21,27,14,21,28,14,21,29,14,21,30,14,21,31,14,21,32,14,21,33,14,21,34,14,21,35,14,21,36,14,21,37,14,21,38,14,22,0,14,22,1,14,22,2,14,22,3,14,22,4,14,22,5,14,22,6,14,22,7,14,22,8,14,22,9,14,22,10,14,22,18,14,22,24,14,22,25,14,22,26,14,22,27,14,22,28,14,22,29,14,22,30,14,22,31,14,22,32,14,22,33,14,22,34,14,22,35,14,22,36,14,22,37,14,22,38,14,23,0,14,23,1,14,23,2,14,23,3,14,23,4,14,23,5,14,23,6,14,23,7,14,23,8,14,23,9,14,23,10,14,23,18,14,23,19,14,23,25,14,23,26,14,23,27,14,23,28,14,23,29,14,23,30,14,23,31,14,23,32,14,23,33,14,23,34,14,23,35,14,23,36,14,23,37,14,23,38,14,24,0,14,24,1,14,24,2,14,24,3,14,24,4,14,24,5,14,24,6,14,24,7,14,24,8,14,24,9,14,24,10,14,24,18,14,24,19,14,24,20,14,24,26,14,24,27,14,24,28,14,24,29,14,24,30,14,24,31,14,24,32,14,24,33,14,24,34,14,24,35,14,24,36,14,24,37,14,24,38,14,25,0,14,25,1,14,25,2,14,25,3,14,25,4,14,25,5,14,25,6,14,25,7,14,25,8,14,25,9,14,25,10,14,25,18,14,25,19,14,25,20,14,25,21,14,25,27,14,25,28,14,25,29,14,25,30,14,25,31,14,25,32,14,25,33,14,25,34,14,25,35,14,25,36,14,25,37,14,25,38,14,26,0,14,26,1,14,26,2,14,26,3,14,26,4,14,26,5,14,26,6,14,26,7,14,26,8,14,26,9,14,26,10,14,26,18,14,26,19,14,26,20,14,26,21,14,26,22,14,26,28,14,26,29,14,26,30,14,26,31,14,26,32,14,26,33,14,26,34,14,26,35,14,26,36,14,26,37,14,26,38,14,27,0,14,27,1,14,27,2,14,27,3,14,27,4,14,27,5,14,27,6,14,27,7,14,27,8,14,27,9,14,27,10,14,27,18,14,27,19,14,27,20,14,27,21,14,27,22,14,27,23,14,27,29,14,27,30,14,27,31,14,27,32,14,27,33,14,27,34,14,27,35,14,27,36,14,27,37,14,27,38,14,28,0,14,28,1,14,28,2,14,28,3,14,28,4,14,28,5,14,28,6,14,28,7,14,28,8,14,28,9,14,28,10,14,28,18,14,28,19,14,28,20,14,28,21,14,28,22,14,28,23,14,28,24,14,28,30,14,28,31,14,28,32,14,28,33,14,28,34,14,28,35,14,28,36,14,28,37,14,28,38,14,29,0,14,29,1,14,29,2,14,29,3,14,29,4,14,29,5,14,29,6,14,29,7,14,29,8,14,29,9,14,29,10,14,29,18,14,29,19,14,29,20,14,29,21,14,29,22,14,29,23,14,29,24,14,29,25,14,29,31,14,29,32,14,29,33,14,29,34,14,29,35,14,29,36,14,29,37,14,29,38,14,30,0,14,30,1,14,30,2,14,30,3,14,30,4,14,30,5,14,30,6,14,30,7,14,30,8,14,30,9,14,30,10,14,30,18,14,30,19,14,30,20,14,30,21,14,30,22,14,30,23,14,30,24,14,30,25,14,30,26,14,30,32,14,30,33,14,30,34,14,30,35,14,30,36,14,30,37,14,30,38,14,31,0,14,31,1,14,31,2,14,31,3,14,31,4,14,31,5,14,31,6,14,31,7,14,31,8,14,31,9,14,31,10,14,31,18,14,31,19,14,31,20,14,31,21,14,31,22,14,31,23,14,31,24,14,31,25,14,31,26,14,31,27,14,31,33,14,31,34,14,31,35,14,31,36,14,31,37,14,31,38,14,32,0,14,32,1,14,32,2,14,32,3,14,32,4,14,32,5,14,32,6,14,32,7,14,32,8,14,32,9,14,32,10,14,32,18,14,32,19,14,32,20,14,32,21,14,32,22,14,32,23,14,32,24,14,32,25,14,32,26,14,32,27,14,32,28,14,32,34,14,32,35,14,32,36,14,32,37,14,32,38,14,33,0,14,33,1,14,33,2,14,33,3,14,33,4,14,33,5,14,33,6,14,33,7,14,33,8,14,33,9,14,33,10,14,33,18,14,33,19,14,33,20,14,33,21,14,33,22,14,33,23,14,33,24,14,33,25,14,33,26,14,33,27,14,33,28,14,33,29,14,33,35,14,33,36,14,33,37,14,33,38,14,34,0,14,34,1,14,34,2,14,34,3,14,34,4,14,34,5,14,34,6,14,34,7,14,34,8,14,34,9,14,34,10,14,34,18,14,34,19,14,34,20,14,34,21,14,34,22,14,34,23,14,34,24,14,34,25,14,34,26,14,34,27,14,34,28,14,34,29,14,34,30,14,34,36,14,34,37,14,34,38,14,35,0,14,35,1,14,35,2,14,35,3,14,35,4,14,35,5,14,35,6,14,35,7,14,35,8,14,35,9,14,35,10,14,35,18,14,35,19,14,35,20,14,35,21,14,35,22,14,35,23,14,35,24,14,35,25,14,35,26,14,35,27,14,35,28,14,35,29,14,35,30,14,35,31,14,35,37,14,35,38,15,4,0,15,4,6,15,4,7,15,4,8,15,4,9,15,4,10,15,4,11,15,4,19,15,4,20,15,4,21,15,4,22,15,4,23,15,4,24,15,4,25,15,4,26,15,4,27,15,4,28,15,4,29,15,4,30,15,4,31,15,4,32,15,4,33,15,4,34,15,4,35,15,4,36,15,4,37,15,4,38,15,5,0,15,5,1,15,5,7,15,5,8,15,5,9,15,5,10,15,5,11,15,5,19,15,5,20,15,5,21,15,5,22,15,5,23,15,5,24,15,5,25,15,5,26,15,5,27,15,5,28,15,5,29,15,5,30,15,5,31,15,5,32,15,5,33,15,5,34,15,5,35,15,5,36,15,5,37,15,5,38,15,6,0,15,6,1,15,6,2,15,6,8,15,6,9,15,6,10,15,6,11,15,6,19,15,6,20,15,6,21,15,6,22,15,6,23,15,6,24,15,6,25,15,6,26,15,6,27,15,6,28,15,6,29,15,6,30,15,6,31,15,6,32,15,6,33,15,6,34,15,6,35,15,6,36,15,6,37,15,6,38,15,7,0,15,7,1,15,7,2,15,7,3,15,7,9,15,7,10,15,7,11,15,7,19,15,7,20,15,7,21,15,7,22,15,7,23,15,7,24,15,7,25,15,7,26,15,7,27,15,7,28,15,7,29,15,7,30,15,7,31,15,7,32,15,7,33,15,7,34,15,7,35,15,7,36,15,7,37,15,7,38,15,8,0,15,8,1,15,8,2,15,8,3,15,8,4,15,8,10,15,8,11,15,8,19,15,8,20,15,8,21,15,8,22,15,8,23,15,8,24,15,8,25,15,8,26,15,8,27,15,8,28,15,8,29,15,8,30,15,8,31,15,8,32,15,8,33,15,8,34,15,8,35,15,8,36,15,8,37,15,8,38,15,9,0,15,9,1,15,9,2,15,9,3,15,9,4,15,9,5,15,9,11,15,9,19,15,9,20,15,9,21,15,9,22,15,9,23,15,9,24,15,9,25,15,9,26,15,9,27,15,9,28,15,9,29,15,9,30,15,9,31,15,9,32,15,9,33,15,9,34,15,9,35,15,9,36,15,9,37,15,9,38,15,10,0,15,10,1,15,10,2,15,10,3,15,10,4,15,10,5,15,10,6,15,10,19,15,10,20,15,10,21,15,10,22,15,10,23,15,10,24,15,10,25,15,10,26,15,10,27,15,10,28,15,10,29,15,10,30,15,10,31,15,10,32,15,10,33,15,10,34,15,10,35,15,10,36,15,10,37,15,10,38,15,11,0,15,11,1,15,11,2,15,11,3,15,11,4,15,11,5,15,11,6,15,11,7,15,11,19,15,11,20,15,11,21,15,11,22,15,11,23,15,11,24,15,11,25,15,11,26,15,11,27,15,11,28,15,11,29,15,11,30,15,11,31,15,11,32,15,11,33,15,11,34,15,11,35,15,11,36,15,11,37,15,11,38,15,12,0,15,12,1,15,12,2,15,12,3,15,12,4,15,12,5,15,12,6,15,12,7,15,12,8,15,12,19,15,12,20,15,12,21,15,12,22,15,12,23,15,12,24,15,12,25,15,12,26,15,12,27,15,12,28,15,12,29,15,12,30,15,12,31,15,12,32,15,12,33,15,12,34,15,12,35,15,12,36,15,12,37,15,12,38,15,13,0,15,13,1,15,13,2,15,13,3,15,13,4,15,13,5,15,13,6,15,13,7,15,13,8,15,13,9,15,13,19,15,13,20,15,13,21,15,13,22,15,13,23,15,13,24,15,13,25,15,13,26,15,13,27,15,13,28,15,13,29,15,13,30,15,13,31,15,13,32,15,13,33,15,13,34,15,13,35,15,13,36,15,13,37,15,13,38,15,19,0,15,19,1,15,19,2,15,19,3,15,19,4,15,19,5,15,19,6,15,19,7,15,19,8,15,19,9,15,19,10,15,19,11,15,19,21,15,19,22,15,19,23,15,19,24,15,19,25,15,19,26,15,19,27,15,19,28,15,19,29,15,19,30,15,19,31,15,19,32,15,19,33,15,19,34,15,19,35,15,19,36,15,19,37,15,19,38,15,20,0,15,20,1,15,20,2,15,20,3,15,20,4,15,20,5,15,20,6,15,20,7,15,20,8,15,20,9,15,20,10,15,20,11,15,20,22,15,20,23,15,20,24,15,20,25,15,20,26,15,20,27,15,20,28,15,20,29,15,20,30,15,20,31,15,20,32,15,20,33,15,20,34,15,20,35,15,20,36,15,20,37,15,20,38,15,21,0,15,21,1,15,21,2,15,21,3,15,21,4,15,21,5,15,21,6,15,21,7,15,21,8,15,21,9,15,21,10,15,21,11,15,21,23,15,21,24,15,21,25,15,21,26,15,21,27,15,21,28,15,21,29,15,21,30,15,21,31,15,21,32,15,21,33,15,21,34,15,21,35,15,21,36,15,21,37,15,21,38,15,22,0,15,22,1,15,22,2,15,22,3,15,22,4,15,22,5,15,22,6,15,22,7,15,22,8,15,22,9,15,22,10,15,22,11,15,22,24,15,22,25,15,22,26,15,22,27,15,22,28,15,22,29,15,22,30,15,22,31,15,22,32,15,22,33,15,22,34,15,22,35,15,22,36,15,22,37,15,22,38,15,23,0,15,23,1,15,23,2,15,23,3,15,23,4,15,23,5,15,23,6,15,23,7,15,23,8,15,23,9,15,23,10,15,23,11,15,23,19,15,23,25,15,23,26,15,23,27,15,23,28,15,23,29,15,23,30,15,23,31,15,23,32,15,23,33,15,23,34,15,23,35,15,23,36,15,23,37,15,23,38,15,24,0,15,24,1,15,24,2,15,24,3,15,24,4,15,24,5,15,24,6,15,24,7,15,24,8,15,24,9,15,24,10,15,24,11,15,24,19,15,24,20,15,24,26,15,24,27,15,24,28,15,24,29,15,24,30,15,24,31,15,24,32,15,24,33,15,24,34,15,24,35,15,24,36,15,24,37,15,24,38,15,25,0,15,25,1,15,25,2,15,25,3,15,25,4,15,25,5,15,25,6,15,25,7,15,25,8,15,25,9,15,25,10,15,25,11,15,25,19,15,25,20,15,25,21,15,25,27,15,25,28,15,25,29,15,25,30,15,25,31,15,25,32,15,25,33,15,25,34,15,25,35,15,25,36,15,25,37,15,25,38,15,26,0,15,26,1,15,26,2,15,26,3,15,26,4,15,26,5,15,26,6,15,26,7,15,26,8,15,26,9,15,26,10,15,26,11,15,26,19,15,26,20,15,26,21,15,26,22,15,26,28,15,26,29,15,26,30,15,26,31,15,26,32,15,26,33,15,26,34,15,26,35,15,26,36,15,26,37,15,26,38,15,27,0,15,27,1,15,27,2,15,27,3,15,27,4,15,27,5,15,27,6,15,27,7,15,27,8,15,27,9,15,27,10,15,27,11,15,27,19,15,27,20,15,27,21,15,27,22,15,27,23,15,27,29,15,27,30,15,27,31,15,27,32,15,27,33,15,27,34,15,27,35,15,27,36,15,27,37,15,27,38,15,28,0,15,28,1,15,28,2,15,28,3,15,28,4,15,28,5,15,28,6,15,28,7,15,28,8,15,28,9,15,28,10,15,28,11,15,28,19,15,28,20,15,28,21,15,28,22,15,28,23,15,28,24,15,28,30,15,28,31,15,28,32,15,28,33,15,28,34,15,28,35,15,28,36,15,28,37,15,28,38,15,29,0,15,29,1,15,29,2,15,29,3,15,29,4,15,29,5,15,29,6,15,29,7,15,29,8,15,29,9,15,29,10,15,29,11,15,29,19,15,29,20,15,29,21,15,29,22,15,29,23,15,29,24,15,29,25,15,29,31,15,29,32,15,29,33,15,29,34,15,29,35,15,29,36,15,29,37,15,29,38,15,30,0,15,30,1,15,30,2,15,30,3,15,30,4,15,30,5,15,30,6,15,30,7,15,30,8,15,30,9,15,30,10,15,30,11,15,30,19,15,30,20,15,30,21,15,30,22,15,30,23,15,30,24,15,30,25,15,30,26,15,30,32,15,30,33,15,30,34,15,30,35,15,30,36,15,30,37,15,30,38,15,31,0,15,31,1,15,31,2,15,31,3,15,31,4,15,31,5,15,31,6,15,31,7,15,31,8,15,31,9,15,31,10,15,31,11,15,31,19,15,31,20,15,31,21,15,31,22,15,31,23,15,31,24,15,31,25,15,31,26,15,31,27,15,31,33,15,31,34,15,31,35,15,31,36,15,31,37,15,31,38,15,32,0,15,32,1,15,32,2,15,32,3,15,32,4,15,32,5,15,32,6,15,32,7,15,32,8,15,32,9,15,32,10,15,32,11,15,32,19,15,32,20,15,32,21,15,32,22,15,32,23,15,32,24,15,32,25,15,32,26,15,32,27,15,32,28,15,32,34,15,32,35,15,32,36,15,32,37,15,32,38,15,33,0,15,33,1,15,33,2,15,33,3,15,33,4,15,33,5,15,33,6,15,33,7,15,33,8,15,33,9,15,33,10,15,33,11,15,33,19,15,33,20,15,33,21,15,33,22,15,33,23,15,33,24,15,33,25,15,33,26,15,33,27,15,33,28,15,33,29,15,33,35,15,33,36,15,33,37,15,33,38,15,34,0,15,34,1,15,34,2,15,34,3,15,34,4,15,34,5,15,34,6,15,34,7,15,34,8,15,34,9,15,34,10,15,34,11,15,34,19,15,34,20,15,34,21,15,34,22,15,34,23,15,34,24,15,34,25,15,34,26,15,34,27,15,34,28,15,34,29,15,34,30,15,34,36,15,34,37,15,34,38,15,35,0,15,35,1,15,35,2,15,35,3,15,35,4,15,35,5,15,35,6,15,35,7,15,35,8,15,35,9,15,35,10,15,35,11,15,35,19,15,35,20,15,35,21,15,35,22,15,35,23,15,35,24,15,35,25,15,35,26,15,35,27,15,35,28,15,35,29,15,35,30,15,35,31,15,35,37,15,35,38,16,4,0,16,4,6,16,4,7,16,4,8,16,4,9,16,4,10,16,4,11,16,4,12,16,4,20,16,4,21,16,4,22,16,4,23,16,4,24,16,4,25,16,4,26,16,4,27,16,4,28,16,4,29,16,4,30,16,4,31,16,4,32,16,4,33,16,4,34,16,4,35,16,4,36,16,4,37,16,4,38,16,5,0,16,5,1,16,5,7,16,5,8,16,5,9,16,5,10,16,5,11,16,5,12,16,5,20,16,5,21,16,5,22,16,5,23,16,5,24,16,5,25,16,5,26,16,5,27,16,5,28,16,5,29,16,5,30,16,5,31,16,5,32,16,5,33,16,5,34,16,5,35,16,5,36,16,5,37,16,5,38,16,6,0,16,6,1,16,6,2,16,6,8,16,6,9,16,6,10,16,6,11,16,6,12,16,6,20,16,6,21,16,6,22,16,6,23,16,6,24,16,6,25,16,6,26,16,6,27,16,6,28,16,6,29,16,6,30,16,6,31,16,6,32,16,6,33,16,6,34,16,6,35,16,6,36,16,6,37,16,6,38,16,7,0,16,7,1,16,7,2,16,7,3,16,7,9,16,7,10,16,7,11,16,7,12,16,7,20,16,7,21,16,7,22,16,7,23,16,7,24,16,7,25,16,7,26,16,7,27,16,7,28,16,7,29,16,7,30,16,7,31,16,7,32,16,7,33,16,7,34,16,7,35,16,7,36,16,7,37,16,7,38,16,8,0,16,8,1,16,8,2,16,8,3,16,8,4,16,8,10,16,8,11,16,8,12,16,8,20,16,8,21,16,8,22,16,8,23,16,8,24,16,8,25,16,8,26,16,8,27,16,8,28,16,8,29,16,8,30,16,8,31,16,8,32,16,8,33,16,8,34,16,8,35,16,8,36,16,8,37,16,8,38,16,9,0,16,9,1,16,9,2,16,9,3,16,9,4,16,9,5,16,9,11,16,9,12,16,9,20,16,9,21,16,9,22,16,9,23,16,9,24,16,9,25,16,9,26,16,9,27,16,9,28,16,9,29,16,9,30,16,9,31,16,9,32,16,9,33,16,9,34,16,9,35,16,9,36,16,9,37,16,9,38,16,10,0,16,10,1,16,10,2,16,10,3,16,10,4,16,10,5,16,10,6,16,10,12,16,10,20,16,10,21,16,10,22,16,10,23,16,10,24,16,10,25,16,10,26,16,10,27,16,10,28,16,10,29,16,10,30,16,10,31,16,10,32,16,10,33,16,10,34,16,10,35,16,10,36,16,10,37,16,10,38,16,11,0,16,11,1,16,11,2,16,11,3,16,11,4,16,11,5,16,11,6,16,11,7,16,11,20,16,11,21,16,11,22,16,11,23,16,11,24,16,11,25,16,11,26,16,11,27,16,11,28,16,11,29,16,11,30,16,11,31,16,11,32,16,11,33,16,11,34,16,11,35,16,11,36,16,11,37,16,11,38,16,12,0,16,12,1,16,12,2,16,12,3,16,12,4,16,12,5,16,12,6,16,12,7,16,12,8,16,12,20,16,12,21,16,12,22,16,12,23,16,12,24,16,12,25,16,12,26,16,12,27,16,12,28,16,12,29,16,12,30,16,12,31,16,12,32,16,12,33,16,12,34,16,12,35,16,12,36,16,12,37,16,12,38,16,13,0,16,13,1,16,13,2,16,13,3,16,13,4,16,13,5,16,13,6,16,13,7,16,13,8,16,13,9,16,13,20,16,13,21,16,13,22,16,13,23,16,13,24,16,13,25,16,13,26,16,13,27,16,13,28,16,13,29,16,13,30,16,13,31,16,13,32,16,13,33,16,13,34,16,13,35,16,13,36,16,13,37,16,13,38,16,14,0,16,14,1,16,14,2,16,14,3,16,14,4,16,14,5,16,14,6,16,14,7,16,14,8,16,14,9,16,14,10,16,14,20,16,14,21,16,14,22,16,14,23,16,14,24,16,14,25,16,14,26,16,14,27,16,14,28,16,14,29,16,14,30,16,14,31,16,14,32,16,14,33,16,14,34,16,14,35,16,14,36,16,14,37,16,14,38,16,20,0,16,20,1,16,20,2,16,20,3,16,20,4,16,20,5,16,20,6,16,20,7,16,20,8,16,20,9,16,20,10,16,20,11,16,20,12,16,20,22,16,20,23,16,20,24,16,20,25,16,20,26,16,20,27,16,20,28,16,20,29,16,20,30,16,20,31,16,20,32,16,20,33,16,20,34,16,20,35,16,20,36,16,20,37,16,20,38,16,21,0,16,21,1,16,21,2,16,21,3,16,21,4,16,21,5,16,21,6,16,21,7,16,21,8,16,21,9,16,21,10,16,21,11,16,21,12,16,21,23,16,21,24,16,21,25,16,21,26,16,21,27,16,21,28,16,21,29,16,21,30,16,21,31,16,21,32,16,21,33,16,21,34,16,21,35,16,21,36,16,21,37,16,21,38,16,22,0,16,22,1,16,22,2,16,22,3,16,22,4,16,22,5,16,22,6,16,22,7,16,22,8,16,22,9,16,22,10,16,22,11,16,22,12,16,22,24,16,22,25,16,22,26,16,22,27,16,22,28,16,22,29,16,22,30,16,22,31,16,22,32,16,22,33,16,22,34,16,22,35,16,22,36,16,22,37,16,22,38,16,23,0,16,23,1,16,23,2,16,23,3,16,23,4,16,23,5,16,23,6,16,23,7,16,23,8,16,23,9,16,23,10,16,23,11,16,23,12,16,23,25,16,23,26,16,23,27,16,23,28,16,23,29,16,23,30,16,23,31,16,23,32,16,23,33,16,23,34,16,23,35,16,23,36,16,23,37,16,23,38,16,24,0,16,24,1,16,24,2,16,24,3,16,24,4,16,24,5,16,24,6,16,24,7,16,24,8,16,24,9,16,24,10,16,24,11,16,24,12,16,24,20,16,24,26,16,24,27,16,24,28,16,24,29,16,24,30,16,24,31,16,24,32,16,24,33,16,24,34,16,24,35,16,24,36,16,24,37,16,24,38,16,25,0,16,25,1,16,25,2,16,25,3,16,25,4,16,25,5,16,25,6,16,25,7,16,25,8,16,25,9,16,25,10,16,25,11,16,25,12,16,25,20,16,25,21,16,25,27,16,25,28,16,25,29,16,25,30,16,25,31,16,25,32,16,25,33,16,25,34,16,25,35,16,25,36,16,25,37,16,25,38,16,26,0,16,26,1,16,26,2,16,26,3,16,26,4,16,26,5,16,26,6,16,26,7,16,26,8,16,26,9,16,26,10,16,26,11,16,26,12,16,26,20,16,26,21,16,26,22,16,26,28,16,26,29,16,26,30,16,26,31,16,26,32,16,26,33,16,26,34,16,26,35,16,26,36,16,26,37,16,26,38,16,27,0,16,27,1,16,27,2,16,27,3,16,27,4,16,27,5,16,27,6,16,27,7,16,27,8,16,27,9,16,27,10,16,27,11,16,27,12,16,27,20,16,27,21,16,27,22,16,27,23,16,27,29,16,27,30,16,27,31,16,27,32,16,27,33,16,27,34,16,27,35,16,27,36,16,27,37,16,27,38,16,28,0,16,28,1,16,28,2,16,28,3,16,28,4,16,28,5,16,28,6,16,28,7,16,28,8,16,28,9,16,28,10,16,28,11,16,28,12,16,28,20,16,28,21,16,28,22,16,28,23,16,28,24,16,28,30,16,28,31,16,28,32,16,28,33,16,28,34,16,28,35,16,28,36,16,28,37,16,28,38,16,29,0,16,29,1,16,29,2,16,29,3,16,29,4,16,29,5,16,29,6,16,29,7,16,29,8,16,29,9,16,29,10,16,29,11,16,29,12,16,29,20,16,29,21,16,29,22,16,29,23,16,29,24,16,29,25,16,29,31,16,29,32,16,29,33,16,29,34,16,29,35,16,29,36,16,29,37,16,29,38,16,30,0,16,30,1,16,30,2,16,30,3,16,30,4,16,30,5,16,30,6,16,30,7,16,30,8,16,30,9,16,30,10,16,30,11,16,30,12,16,30,20,16,30,21,16,30,22,16,30,23,16,30,24,16,30,25,16,30,26,16,30,32,16,30,33,16,30,34,16,30,35,16,30,36,16,30,37,16,30,38,16,31,0,16,31,1,16,31,2,16,31,3,16,31,4,16,31,5,16,31,6,16,31,7,16,31,8,16,31,9,16,31,10,16,31,11,16,31,12,16,31,20,16,31,21,16,31,22,16,31,23,16,31,24,16,31,25,16,31,26,16,31,27,16,31,33,16,31,34,16,31,35,16,31,36,16,31,37,16,31,38,16,32,0,16,32,1,16,32,2,16,32,3,16,32,4,16,32,5,16,32,6,16,32,7,16,32,8,16,32,9,16,32,10,16,32,11,16,32,12,16,32,20,16,32,21,16,32,22,16,32,23,16,32,24,16,32,25,16,32,26,16,32,27,16,32,28,16,32,34,16,32,35,16,32,36,16,32,37,16,32,38,16,33,0,16,33,1,16,33,2,16,33,3,16,33,4,16,33,5,16,33,6,16,33,7,16,33,8,16,33,9,16,33,10,16,33,11,16,33,12,16,33,20,16,33,21,16,33,22,16,33,23,16,33,24,16,33,25,16,33,26,16,33,27,16,33,28,16,33,29,16,33,35,16,33,36,16,33,37,16,33,38,16,34,0,16,34,1,16,34,2,16,34,3,16,34,4,16,34,5,16,34,6,16,34,7,16,34,8,16,34,9,16,34,10,16,34,11,16,34,12,16,34,20,16,34,21,16,34,22,16,34,23,16,34,24,16,34,25,16,34,26,16,34,27,16,34,28,16,34,29,16,34,30,16,34,36,16,34,37,16,34,38,16,35,0,16,35,1,16,35,2,16,35,3,16,35,4,16,35,5,16,35,6,16,35,7,16,35,8,16,35,9,16,35,10,16,35,11,16,35,12,16,35,20,16,35,21,16,35,22,16,35,23,16,35,24,16,35,25,16,35,26,16,35,27,16,35,28,16,35,29,16,35,30,16,35,31,16,35,37,16,35,38,17,4,0,17,4,6,17,4,7,17,4,8,17,4,9,17,4,10,17,4,11,17,4,12,17,4,13,17,4,21,17,4,22,17,4,23,17,4,24,17,4,25,17,4,26,17,4,27,17,4,28,17,4,29,17,4,30,17,4,31,17,4,32,17,4,33,17,4,34,17,4,35,17,4,36,17,4,37,17,4,38,17,5,0,17,5,1,17,5,7,17,5,8,17,5,9,17,5,10,17,5,11,17,5,12,17,5,13,17,5,21,17,5,22,17,5,23,17,5,24,17,5,25,17,5,26,17,5,27,17,5,28,17,5,29,17,5,30,17,5,31,17,5,32,17,5,33,17,5,34,17,5,35,17,5,36,17,5,37,17,5,38,17,6,0,17,6,1,17,6,2,17,6,8,17,6,9,17,6,10,17,6,11,17,6,12,17,6,13,17,6,21,17,6,22,17,6,23,17,6,24,17,6,25,17,6,26,17,6,27,17,6,28,17,6,29,17,6,30,17,6,31,17,6,32,17,6,33,17,6,34,17,6,35,17,6,36,17,6,37,17,6,38,17,7,0,17,7,1,17,7,2,17,7,3,17,7,9,17,7,10,17,7,11,17,7,12,17,7,13,17,7,21,17,7,22,17,7,23,17,7,24,17,7,25,17,7,26,17,7,27,17,7,28,17,7,29,17,7,30,17,7,31,17,7,32,17,7,33,17,7,34,17,7,35,17,7,36,17,7,37,17,7,38,17,8,0,17,8,1,17,8,2,17,8,3,17,8,4,17,8,10,17,8,11,17,8,12,17,8,13,17,8,21,17,8,22,17,8,23,17,8,24,17,8,25,17,8,26,17,8,27,17,8,28,17,8,29,17,8,30,17,8,31,17,8,32,17,8,33,17,8,34,17,8,35,17,8,36,17,8,37,17,8,38,17,9,0,17,9,1,17,9,2,17,9,3,17,9,4,17,9,5,17,9,11,17,9,12,17,9,13,17,9,21,17,9,22,17,9,23,17,9,24,17,9,25,17,9,26,17,9,27,17,9,28,17,9,29,17,9,30,17,9,31,17,9,32,17,9,33,17,9,34,17,9,35,17,9,36,17,9,37,17,9,38,17,10,0,17,10,1,17,10,2,17,10,3,17,10,4,17,10,5,17,10,6,17,10,12,17,10,13,17,10,21,17,10,22,17,10,23,17,10,24,17,10,25,17,10,26,17,10,27,17,10,28,17,10,29,17,10,30,17,10,31,17,10,32,17,10,33,17,10,34,17,10,35,17,10,36,17,10,37,17,10,38,17,11,0,17,11,1,17,11,2,17,11,3,17,11,4,17,11,5,17,11,6,17,11,7,17,11,13,17,11,21,17,11,22,17,11,23,17,11,24,17,11,25,17,11,26,17,11,27,17,11,28,17,11,29,17,11,30,17,11,31,17,11,32,17,11,33,17,11,34,17,11,35,17,11,36,17,11,37,17,11,38,17,12,0,17,12,1,17,12,2,17,12,3,17,12,4,17,12,5,17,12,6,17,12,7,17,12,8,17,12,21,17,12,22,17,12,23,17,12,24,17,12,25,17,12,26,17,12,27,17,12,28,17,12,29,17,12,30,17,12,31,17,12,32,17,12,33,17,12,34,17,12,35,17,12,36,17,12,37,17,12,38,17,13,0,17,13,1,17,13,2,17,13,3,17,13,4,17,13,5,17,13,6,17,13,7,17,13,8,17,13,9,17,13,21,17,13,22,17,13,23,17,13,24,17,13,25,17,13,26,17,13,27,17,13,28,17,13,29,17,13,30,17,13,31,17,13,32,17,13,33,17,13,34,17,13,35,17,13,36,17,13,37,17,13,38,17,14,0,17,14,1,17,14,2,17,14,3,17,14,4,17,14,5,17,14,6,17,14,7,17,14,8,17,14,9,17,14,10,17,14,21,17,14,22,17,14,23,17,14,24,17,14,25,17,14,26,17,14,27,17,14,28,17,14,29,17,14,30,17,14,31,17,14,32,17,14,33,17,14,34,17,14,35,17,14,36,17,14,37,17,14,38,17,15,0,17,15,1,17,15,2,17,15,3,17,15,4,17,15,5,17,15,6,17,15,7,17,15,8,17,15,9,17,15,10,17,15,11,17,15,21,17,15,22,17,15,23,17,15,24,17,15,25,17,15,26,17,15,27,17,15,28,17,15,29,17,15,30,17,15,31,17,15,32,17,15,33,17,15,34,17,15,35,17,15,36,17,15,37,17,15,38,17,21,0,17,21,1,17,21,2,17,21,3,17,21,4,17,21,5,17,21,6,17,21,7,17,21,8,17,21,9,17,21,10,17,21,11,17,21,12,17,21,13,17,21,23,17,21,24,17,21,25,17,21,26,17,21,27,17,21,28,17,21,29,17,21,30,17,21,31,17,21,32,17,21,33,17,21,34,17,21,35,17,21,36,17,21,37,17,21,38,17,22,0,17,22,1,17,22,2,17,22,3,17,22,4,17,22,5,17,22,6,17,22,7,17,22,8,17,22,9,17,22,10,17,22,11,17,22,12,17,22,13,17,22,24,17,22,25,17,22,26,17,22,27,17,22,28,17,22,29,17,22,30,17,22,31,17,22,32,17,22,33,17,22,34,17,22,35,17,22,36,17,22,37,17,22,38,17,23,0,17,23,1,17,23,2,17,23,3,17,23,4,17,23,5,17,23,6,17,23,7,17,23,8,17,23,9,17,23,10,17,23,11,17,23,12,17,23,13,17,23,25,17,23,26,17,23,27,17,23,28,17,23,29,17,23,30,17,23,31,17,23,32,17,23,33,17,23,34,17,23,35,17,23,36,17,23,37,17,23,38,17,24,0,17,24,1,17,24,2,17,24,3,17,24,4,17,24,5,17,24,6,17,24,7,17,24,8,17,24,9,17,24,10,17,24,11,17,24,12,17,24,13,17,24,26,17,24,27,17,24,28,17,24,29,17,24,30,17,24,31,17,24,32,17,24,33,17,24,34,17,24,35,17,24,36,17,24,37,17,24,38,17,25,0,17,25,1,17,25,2,17,25,3,17,25,4,17,25,5,17,25,6,17,25,7,17,25,8,17,25,9,17,25,10,17,25,11,17,25,12,17,25,13,17,25,21,17,25,27,17,25,28,17,25,29,17,25,30,17,25,31,17,25,32,17,25,33,17,25,34,17,25,35,17,25,36,17,25,37,17,25,38,17,26,0,17,26,1,17,26,2,17,26,3,17,26,4,17,26,5,17,26,6,17,26,7,17,26,8,17,26,9,17,26,10,17,26,11,17,26,12,17,26,13,17,26,21,17,26,22,17,26,28,17,26,29,17,26,30,17,26,31,17,26,32,17,26,33,17,26,34,17,26,35,17,26,36,17,26,37,17,26,38,17,27,0,17,27,1,17,27,2,17,27,3,17,27,4,17,27,5,17,27,6,17,27,7,17,27,8,17,27,9,17,27,10,17,27,11,17,27,12,17,27,13,17,27,21,17,27,22,17,27,23,17,27,29,17,27,30,17,27,31,17,27,32,17,27,33,17,27,34,17,27,35,17,27,36,17,27,37,17,27,38,17,28,0,17,28,1,17,28,2,17,28,3,17,28,4,17,28,5,17,28,6,17,28,7,17,28,8,17,28,9,17,28,10,17,28,11,17,28,12,17,28,13,17,28,21,17,28,22,17,28,23,17,28,24,17,28,30,17,28,31,17,28,32,17,28,33,17,28,34,17,28,35,17,28,36,17,28,37,17,28,38,17,29,0,17,29,1,17,29,2,17,29,3,17,29,4,17,29,5,17,29,6,17,29,7,17,29,8,17,29,9,17,29,10,17,29,11,17,29,12,17,29,13,17,29,21,17,29,22,17,29,23,17,29,24,17,29,25,17,29,31,17,29,32,17,29,33,17,29,34,17,29,35,17,29,36,17,29,37,17,29,38,17,30,0,17,30,1,17,30,2,17,30,3,17,30,4,17,30,5,17,30,6,17,30,7,17,30,8,17,30,9,17,30,10,17,30,11,17,30,12,17,30,13,17,30,21,17,30,22,17,30,23,17,30,24,17,30,25,17,30,26,17,30,32,17,30,33,17,30,34,17,30,35,17,30,36,17,30,37,17,30,38,17,31,0,17,31,1,17,31,2,17,31,3,17,31,4,17,31,5,17,31,6,17,31,7,17,31,8,17,31,9,17,31,10,17,31,11,17,31,12,17,31,13,17,31,21,17,31,22,17,31,23,17,31,24,17,31,25,17,31,26,17,31,27,17,31,33,17,31,34,17,31,35,17,31,36,17,31,37,17,31,38,17,32,0,17,32,1,17,32,2,17,32,3,17,32,4,17,32,5,17,32,6,17,32,7,17,32,8,17,32,9,17,32,10,17,32,11,17,32,12,17,32,13,17,32,21,17,32,22,17,32,23,17,32,24,17,32,25,17,32,26,17,32,27,17,32,28,17,32,34,17,32,35,17,32,36,17,32,37,17,32,38,17,33,0,17,33,1,17,33,2,17,33,3,17,33,4,17,33,5,17,33,6,17,33,7,17,33,8,17,33,9,17,33,10,17,33,11,17,33,12,17,33,13,17,33,21,17,33,22,17,33,23,17,33,24,17,33,25,17,33,26,17,33,27,17,33,28,17,33,29,17,33,35,17,33,36,17,33,37,17,33,38,17,34,0,17,34,1,17,34,2,17,34,3,17,34,4,17,34,5,17,34,6,17,34,7,17,34,8,17,34,9,17,34,10,17,34,11,17,34,12,17,34,13,17,34,21,17,34,22,17,34,23,17,34,24,17,34,25,17,34,26,17,34,27,17,34,28,17,34,29,17,34,30,17,34,36,17,34,37,17,34,38,17,35,0,17,35,1,17,35,2,17,35,3,17,35,4,17,35,5,17,35,6,17,35,7,17,35,8,17,35,9,17,35,10,17,35,11,17,35,12,17,35,13,17,35,21,17,35,22,17,35,23,17,35,24,17,35,25,17,35,26,17,35,27,17,35,28,17,35,29,17,35,30,17,35,31,17,35,37,17,35,38,18,4,0,18,4,6,18,4,7,18,4,8,18,4,9,18,4,10,18,4,11,18,4,12,18,4,13,18,4,14,18,4,22,18,4,23,18,4,24,18,4,25,18,4,26,18,4,27,18,4,28,18,4,29,18,4,30,18,4,31,18,4,32,18,4,33,18,4,34,18,4,35,18,4,36,18,4,37,18,4,38,18,5,0,18,5,1,18,5,7,18,5,8,18,5,9,18,5,10,18,5,11,18,5,12,18,5,13,18,5,14,18,5,22,18,5,23,18,5,24,18,5,25,18,5,26,18,5,27,18,5,28,18,5,29,18,5,30,18,5,31,18,5,32,18,5,33,18,5,34,18,5,35,18,5,36,18,5,37,18,5,38,18,6,0,18,6,1,18,6,2,18,6,8,18,6,9,18,6,10,18,6,11,18,6,12,18,6,13,18,6,14,18,6,22,18,6,23,18,6,24,18,6,25,18,6,26,18,6,27,18,6,28,18,6,29,18,6,30,18,6,31,18,6,32,18,6,33,18,6,34,18,6,35,18,6,36,18,6,37,18,6,38,18,7,0,18,7,1,18,7,2,18,7,3,18,7,9,18,7,10,18,7,11,18,7,12,18,7,13,18,7,14,18,7,22,18,7,23,18,7,24,18,7,25,18,7,26,18,7,27,18,7,28,18,7,29,18,7,30,18,7,31,18,7,32,18,7,33,18,7,34,18,7,35,18,7,36,18,7,37,18,7,38,18,8,0,18,8,1,18,8,2,18,8,3,18,8,4,18,8,10,18,8,11,18,8,12,18,8,13,18,8,14,18,8,22,18,8,23,18,8,24,18,8,25,18,8,26,18,8,27,18,8,28,18,8,29,18,8,30,18,8,31,18,8,32,18,8,33,18,8,34,18,8,35,18,8,36,18,8,37,18,8,38,18,9,0,18,9,1,18,9,2,18,9,3,18,9,4,18,9,5,18,9,11,18,9,12,18,9,13,18,9,14,18,9,22,18,9,23,18,9,24,18,9,25,18,9,26,18,9,27,18,9,28,18,9,29,18,9,30,18,9,31,18,9,32,18,9,33,18,9,34,18,9,35,18,9,36,18,9,37,18,9,38,18,10,0,18,10,1,18,10,2,18,10,3,18,10,4,18,10,5,18,10,6,18,10,12,18,10,13,18,10,14,18,10,22,18,10,23,18,10,24,18,10,25,18,10,26,18,10,27,18,10,28,18,10,29,18,10,30,18,10,31,18,10,32,18,10,33,18,10,34,18,10,35,18,10,36,18,10,37,18,10,38,18,11,0,18,11,1,18,11,2,18,11,3,18,11,4,18,11,5,18,11,6,18,11,7,18,11,13,18,11,14,18,11,22,18,11,23,18,11,24,18,11,25,18,11,26,18,11,27,18,11,28,18,11,29,18,11,30,18,11,31,18,11,32,18,11,33,18,11,34,18,11,35,18,11,36,18,11,37,18,11,38,18,12,0,18,12,1,18,12,2,18,12,3,18,12,4,18,12,5,18,12,6,18,12,7,18,12,8,18,12,14,18,12,22,18,12,23,18,12,24,18,12,25,18,12,26,18,12,27,18,12,28,18,12,29,18,12,30,18,12,31,18,12,32,18,12,33,18,12,34,18,12,35,18,12,36,18,12,37,18,12,38,18,13,0,18,13,1,18,13,2,18,13,3,18,13,4,18,13,5,18,13,6,18,13,7,18,13,8,18,13,9,18,13,22,18,13,23,18,13,24,18,13,25,18,13,26,18,13,27,18,13,28,18,13,29,18,13,30,18,13,31,18,13,32,18,13,33,18,13,34,18,13,35,18,13,36,18,13,37,18,13,38,18,14,0,18,14,1,18,14,2,18,14,3,18,14,4,18,14,5,18,14,6,18,14,7,18,14,8,18,14,9,18,14,10,18,14,22,18,14,23,18,14,24,18,14,25,18,14,26,18,14,27,18,14,28,18,14,29,18,14,30,18,14,31,18,14,32,18,14,33,18,14,34,18,14,35,18,14,36,18,14,37,18,14,38,18,15,0,18,15,1,18,15,2,18,15,3,18,15,4,18,15,5,18,15,6,18,15,7,18,15,8,18,15,9,18,15,10,18,15,11,18,15,22,18,15,23,18,15,24,18,15,25,18,15,26,18,15,27,18,15,28,18,15,29,18,15,30,18,15,31,18,15,32,18,15,33,18,15,34,18,15,35,18,15,36,18,15,37,18,15,38,18,16,0,18,16,1,18,16,2,18,16,3,18,16,4,18,16,5,18,16,6,18,16,7,18,16,8,18,16,9,18,16,10,18,16,11,18,16,12,18,16,22,18,16,23,18,16,24,18,16,25,18,16,26,18,16,27,18,16,28,18,16,29,18,16,30,18,16,31,18,16,32,18,16,33,18,16,34,18,16,35,18,16,36,18,16,37,18,16,38,18,22,0,18,22,1,18,22,2,18,22,3,18,22,4,18,22,5,18,22,6,18,22,7,18,22,8,18,22,9,18,22,10,18,22,11,18,22,12,18,22,13,18,22,14,18,22,24,18,22,25,18,22,26,18,22,27,18,22,28,18,22,29,18,22,30,18,22,31,18,22,32,18,22,33,18,22,34,18,22,35,18,22,36,18,22,37,18,22,38,18,23,0,18,23,1,18,23,2,18,23,3,18,23,4,18,23,5,18,23,6,18,23,7,18,23,8,18,23,9,18,23,10,18,23,11,18,23,12,18,23,13,18,23,14,18,23,25,18,23,26,18,23,27,18,23,28,18,23,29,18,23,30,18,23,31,18,23,32,18,23,33,18,23,34,18,23,35,18,23,36,18,23,37,18,23,38,18,24,0,18,24,1,18,24,2,18,24,3,18,24,4,18,24,5,18,24,6,18,24,7,18,24,8,18,24,9,18,24,10,18,24,11,18,24,12,18,24,13,18,24,14,18,24,26,18,24,27,18,24,28,18,24,29,18,24,30,18,24,31,18,24,32,18,24,33,18,24,34,18,24,35,18,24,36,18,24,37,18,24,38,18,25,0,18,25,1,18,25,2,18,25,3,18,25,4,18,25,5,18,25,6,18,25,7,18,25,8,18,25,9,18,25,10,18,25,11,18,25,12,18,25,13,18,25,14,18,25,27,18,25,28,18,25,29,18,25,30,18,25,31,18,25,32,18,25,33,18,25,34,18,25,35,18,25,36,18,25,37,18,25,38,18,26,0,18,26,1,18,26,2,18,26,3,18,26,4,18,26,5,18,26,6,18,26,7,18,26,8,18,26,9,18,26,10,18,26,11,18,26,12,18,26,13,18,26,14,18,26,22,18,26,28,18,26,29,18,26,30,18,26,31,18,26,32,18,26,33,18,26,34,18,26,35,18,26,36,18,26,37,18,26,38,18,27,0,18,27,1,18,27,2,18,27,3,18,27,4,18,27,5,18,27,6,18,27,7,18,27,8,18,27,9,18,27,10,18,27,11,18,27,12,18,27,13,18,27,14,18,27,22,18,27,23,18,27,29,18,27,30,18,27,31,18,27,32,18,27,33,18,27,34,18,27,35,18,27,36,18,27,37,18,27,38,18,28,0,18,28,1,18,28,2,18,28,3,18,28,4,18,28,5,18,28,6,18,28,7,18,28,8,18,28,9,18,28,10,18,28,11,18,28,12,18,28,13,18,28,14,18,28,22,18,28,23,18,28,24,18,28,30,18,28,31,18,28,32,18,28,33,18,28,34,18,28,35,18,28,36,18,28,37,18,28,38,18,29,0,18,29,1,18,29,2,18,29,3,18,29,4,18,29,5,18,29,6,18,29,7,18,29,8,18,29,9,18,29,10,18,29,11,18,29,12,18,29,13,18,29,14,18,29,22,18,29,23,18,29,24,18,29,25,18,29,31,18,29,32,18,29,33,18,29,34,18,29,35,18,29,36,18,29,37,18,29,38,18,30,0,18,30,1,18,30,2,18,30,3,18,30,4,18,30,5,18,30,6,18,30,7,18,30,8,18,30,9,18,30,10,18,30,11,18,30,12,18,30,13,18,30,14,18,30,22,18,30,23,18,30,24,18,30,25,18,30,26,18,30,32,18,30,33,18,30,34,18,30,35,18,30,36,18,30,37,18,30,38,18,31,0,18,31,1,18,31,2,18,31,3,18,31,4,18,31,5,18,31,6,18,31,7,18,31,8,18,31,9,18,31,10,18,31,11,18,31,12,18,31,13,18,31,14,18,31,22,18,31,23,18,31,24,18,31,25,18,31,26,18,31,27,18,31,33,18,31,34,18,31,35,18,31,36,18,31,37,18,31,38,18,32,0,18,32,1,18,32,2,18,32,3,18,32,4,18,32,5,18,32,6,18,32,7,18,32,8,18,32,9,18,32,10,18,32,11,18,32,12,18,32,13,18,32,14,18,32,22,18,32,23,18,32,24,18,32,25,18,32,26,18,32,27,18,32,28,18,32,34,18,32,35,18,32,36,18,32,37,18,32,38,18,33,0,18,33,1,18,33,2,18,33,3,18,33,4,18,33,5,18,33,6,18,33,7,18,33,8,18,33,9,18,33,10,18,33,11,18,33,12,18,33,13,18,33,14,18,33,22,18,33,23,18,33,24,18,33,25,18,33,26,18,33,27,18,33,28,18,33,29,18,33,35,18,33,36,18,33,37,18,33,38,18,34,0,18,34,1,18,34,2,18,34,3,18,34,4,18,34,5,18,34,6,18,34,7,18,34,8,18,34,9,18,34,10,18,34,11,18,34,12,18,34,13,18,34,14,18,34,22,18,34,23,18,34,24,18,34,25,18,34,26,18,34,27,18,34,28,18,34,29,18,34,30,18,34,36,18,34,37,18,34,38,18,35,0,18,35,1,18,35,2,18,35,3,18,35,4,18,35,5,18,35,6,18,35,7,18,35,8,18,35,9,18,35,10,18,35,11,18,35,12,18,35,13,18,35,14,18,35,22,18,35,23,18,35,24,18,35,25,18,35,26,18,35,27,18,35,28,18,35,29,18,35,30,18,35,31,18,35,37,18,35,38,19,4,0,19,4,6,19,4,7,19,4,8,19,4,9,19,4,10,19,4,11,19,4,12,19,4,13,19,4,14,19,4,15,19,4,23,19,4,24,19,4,25,19,4,26,19,4,27,19,4,28,19,4,29,19,4,30,19,4,31,19,4,32,19,4,33,19,4,34,19,4,35,19,4,36,19,4,37,19,4,38,19,5,0,19,5,1,19,5,7,19,5,8,19,5,9,19,5,10,19,5,11,19,5,12,19,5,13,19,5,14,19,5,15,19,5,23,19,5,24,19,5,25,19,5,26,19,5,27,19,5,28,19,5,29,19,5,30,19,5,31,19,5,32,19,5,33,19,5,34,19,5,35,19,5,36,19,5,37,19,5,38,19,6,0,19,6,1,19,6,2,19,6,8,19,6,9,19,6,10,19,6,11,19,6,12,19,6,13,19,6,14,19,6,15,19,6,23,19,6,24,19,6,25,19,6,26,19,6,27,19,6,28,19,6,29,19,6,30,19,6,31,19,6,32,19,6,33,19,6,34,19,6,35,19,6,36,19,6,37,19,6,38,19,7,0,19,7,1,19,7,2,19,7,3,19,7,9,19,7,10,19,7,11,19,7,12,19,7,13,19,7,14,19,7,15,19,7,23,19,7,24,19,7,25,19,7,26,19,7,27,19,7,28,19,7,29,19,7,30,19,7,31,19,7,32,19,7,33,19,7,34,19,7,35,19,7,36,19,7,37,19,7,38,19,8,0,19,8,1,19,8,2,19,8,3,19,8,4,19,8,10,19,8,11,19,8,12,19,8,13,19,8,14,19,8,15,19,8,23,19,8,24,19,8,25,19,8,26,19,8,27,19,8,28,19,8,29,19,8,30,19,8,31,19,8,32,19,8,33,19,8,34,19,8,35,19,8,36,19,8,37,19,8,38,19,9,0,19,9,1,19,9,2,19,9,3,19,9,4,19,9,5,19,9,11,19,9,12,19,9,13,19,9,14,19,9,15,19,9,23,19,9,24,19,9,25,19,9,26,19,9,27,19,9,28,19,9,29,19,9,30,19,9,31,19,9,32,19,9,33,19,9,34,19,9,35,19,9,36,19,9,37,19,9,38,19,10,0,19,10,1,19,10,2,19,10,3,19,10,4,19,10,5,19,10,6,19,10,12,19,10,13,19,10,14,19,10,15,19,10,23,19,10,24,19,10,25,19,10,26,19,10,27,19,10,28,19,10,29,19,10,30,19,10,31,19,10,32,19,10,33,19,10,34,19,10,35,19,10,36,19,10,37,19,10,38,19,11,0,19,11,1,19,11,2,19,11,3,19,11,4,19,11,5,19,11,6,19,11,7,19,11,13,19,11,14,19,11,15,19,11,23,19,11,24,19,11,25,19,11,26,19,11,27,19,11,28,19,11,29,19,11,30,19,11,31,19,11,32,19,11,33,19,11,34,19,11,35,19,11,36,19,11,37,19,11,38,19,12,0,19,12,1,19,12,2,19,12,3,19,12,4,19,12,5,19,12,6,19,12,7,19,12,8,19,12,14,19,12,15,19,12,23,19,12,24,19,12,25,19,12,26,19,12,27,19,12,28,19,12,29,19,12,30,19,12,31,19,12,32,19,12,33,19,12,34,19,12,35,19,12,36,19,12,37,19,12,38,19,13,0,19,13,1,19,13,2,19,13,3,19,13,4,19,13,5,19,13,6,19,13,7,19,13,8,19,13,9,19,13,15,19,13,23,19,13,24,19,13,25,19,13,26,19,13,27,19,13,28,19,13,29,19,13,30,19,13,31,19,13,32,19,13,33,19,13,34,19,13,35,19,13,36,19,13,37,19,13,38,19,14,0,19,14,1,19,14,2,19,14,3,19,14,4,19,14,5,19,14,6,19,14,7,19,14,8,19,14,9,19,14,10,19,14,23,19,14,24,19,14,25,19,14,26,19,14,27,19,14,28,19,14,29,19,14,30,19,14,31,19,14,32,19,14,33,19,14,34,19,14,35,19,14,36,19,14,37,19,14,38,19,15,0,19,15,1,19,15,2,19,15,3,19,15,4,19,15,5,19,15,6,19,15,7,19,15,8,19,15,9,19,15,10,19,15,11,19,15,23,19,15,24,19,15,25,19,15,26,19,15,27,19,15,28,19,15,29,19,15,30,19,15,31,19,15,32,19,15,33,19,15,34,19,15,35,19,15,36,19,15,37,19,15,38,19,16,0,19,16,1,19,16,2,19,16,3,19,16,4,19,16,5,19,16,6,19,16,7,19,16,8,19,16,9,19,16,10,19,16,11,19,16,12,19,16,23,19,16,24,19,16,25,19,16,26,19,16,27,19,16,28,19,16,29,19,16,30,19,16,31,19,16,32,19,16,33,19,16,34,19,16,35,19,16,36,19,16,37,19,16,38,19,17,0,19,17,1,19,17,2,19,17,3,19,17,4,19,17,5,19,17,6,19,17,7,19,17,8,19,17,9,19,17,10,19,17,11,19,17,12,19,17,13,19,17,23,19,17,24,19,17,25,19,17,26,19,17,27,19,17,28,19,17,29,19,17,30,19,17,31,19,17,32,19,17,33,19,17,34,19,17,35,19,17,36,19,17,37,19,17,38,19,23,0,19,23,1,19,23,2,19,23,3,19,23,4,19,23,5,19,23,6,19,23,7,19,23,8,19,23,9,19,23,10,19,23,11,19,23,12,19,23,13,19,23,14,19,23,15,19,23,25,19,23,26,19,23,27,19,23,28,19,23,29,19,23,30,19,23,31,19,23,32,19,23,33,19,23,34,19,23,35,19,23,36,19,23,37,19,23,38,19,24,0,19,24,1,19,24,2,19,24,3,19,24,4,19,24,5,19,24,6,19,24,7,19,24,8,19,24,9,19,24,10,19,24,11,19,24,12,19,24,13,19,24,14,19,24,15,19,24,26,19,24,27,19,24,28,19,24,29,19,24,30,19,24,31,19,24,32,19,24,33,19,24,34,19,24,35,19,24,36,19,24,37,19,24,38,19,25,0,19,25,1,19,25,2,19,25,3,19,25,4,19,25,5,19,25,6,19,25,7,19,25,8,19,25,9,19,25,10,19,25,11,19,25,12,19,25,13,19,25,14,19,25,15,19,25,27,19,25,28,19,25,29,19,25,30,19,25,31,19,25,32,19,25,33,19,25,34,19,25,35,19,25,36,19,25,37,19,25,38,19,26,0,19,26,1,19,26,2,19,26,3,19,26,4,19,26,5,19,26,6,19,26,7,19,26,8,19,26,9,19,26,10,19,26,11,19,26,12,19,26,13,19,26,14,19,26,15,19,26,28,19,26,29,19,26,30,19,26,31,19,26,32,19,26,33,19,26,34,19,26,35,19,26,36,19,26,37,19,26,38,19,27,0,19,27,1,19,27,2,19,27,3,19,27,4,19,27,5,19,27,6,19,27,7,19,27,8,19,27,9,19,27,10,19,27,11,19,27,12,19,27,13,19,27,14,19,27,15,19,27,23,19,27,29,19,27,30,19,27,31,19,27,32,19,27,33,19,27,34,19,27,35,19,27,36,19,27,37,19,27,38,19,28,0,19,28,1,19,28,2,19,28,3,19,28,4,19,28,5,19,28,6,19,28,7,19,28,8,19,28,9,19,28,10,19,28,11,19,28,12,19,28,13,19,28,14,19,28,15,19,28,23,19,28,24,19,28,30,19,28,31,19,28,32,19,28,33,19,28,34,19,28,35,19,28,36,19,28,37,19,28,38,19,29,0,19,29,1,19,29,2,19,29,3,19,29,4,19,29,5,19,29,6,19,29,7,19,29,8,19,29,9,19,29,10,19,29,11,19,29,12,19,29,13,19,29,14,19,29,15,19,29,23,19,29,24,19,29,25,19,29,31,19,29,32,19,29,33,19,29,34,19,29,35,19,29,36,19,29,37,19,29,38,19,30,0,19,30,1,19,30,2,19,30,3,19,30,4,19,30,5,19,30,6,19,30,7,19,30,8,19,30,9,19,30,10,19,30,11,19,30,12,19,30,13,19,30,14,19,30,15,19,30,23,19,30,24,19,30,25,19,30,26,19,30,32,19,30,33,19,30,34,19,30,35,19,30,36,19,30,37,19,30,38,19,31,0,19,31,1,19,31,2,19,31,3,19,31,4,19,31,5,19,31,6,19,31,7,19,31,8,19,31,9,19,31,10,19,31,11,19,31,12,19,31,13,19,31,14,19,31,15,19,31,23,19,31,24,19,31,25,19,31,26,19,31,27,19,31,33,19,31,34,19,31,35,19,31,36,19,31,37,19,31,38,19,32,0,19,32,1,19,32,2,19,32,3,19,32,4,19,32,5,19,32,6,19,32,7,19,32,8,19,32,9,19,32,10,19,32,11,19,32,12,19,32,13,19,32,14,19,32,15,19,32,23,19,32,24,19,32,25,19,32,26,19,32,27,19,32,28,19,32,34,19,32,35,19,32,36,19,32,37,19,32,38,19,33,0,19,33,1,19,33,2,19,33,3,19,33,4,19,33,5,19,33,6,19,33,7,19,33,8,19,33,9,19,33,10,19,33,11,19,33,12,19,33,13,19,33,14,19,33,15,19,33,23,19,33,24,19,33,25,19,33,26,19,33,27,19,33,28,19,33,29,19,33,35,19,33,36,19,33,37,19,33,38,19,34,0,19,34,1,19,34,2,19,34,3,19,34,4,19,34,5,19,34,6,19,34,7,19,34,8,19,34,9,19,34,10,19,34,11,19,34,12,19,34,13,19,34,14,19,34,15,19,34,23,19,34,24,19,34,25,19,34,26,19,34,27,19,34,28,19,34,29,19,34,30,19,34,36,19,34,37,19,34,38,19,35,0,19,35,1,19,35,2,19,35,3,19,35,4,19,35,5,19,35,6,19,35,7,19,35,8,19,35,9,19,35,10,19,35,11,19,35,12,19,35,13,19,35,14,19,35,15,19,35,23,19,35,24,19,35,25,19,35,26,19,35,27,19,35,28,19,35,29,19,35,30,19,35,31,19,35,37,19,35,38,20,4,0,20,4,6,20,4,7,20,4,8,20,4,9,20,4,10,20,4,11,20,4,12,20,4,13,20,4,14,20,4,15,20,4,16,20,4,24,20,4,25,20,4,26,20,4,27,20,4,28,20,4,29,20,4,30,20,4,31,20,4,32,20,4,33,20,4,34,20,4,35,20,4,36,20,4,37,20,4,38,20,5,0,20,5,1,20,5,7,20,5,8,20,5,9,20,5,10,20,5,11,20,5,12,20,5,13,20,5,14,20,5,15,20,5,16,20,5,24,20,5,25,20,5,26,20,5,27,20,5,28,20,5,29,20,5,30,20,5,31,20,5,32,20,5,33,20,5,34,20,5,35,20,5,36,20,5,37,20,5,38,20,6,0,20,6,1,20,6,2,20,6,8,20,6,9,20,6,10,20,6,11,20,6,12,20,6,13,20,6,14,20,6,15,20,6,16,20,6,24,20,6,25,20,6,26,20,6,27,20,6,28,20,6,29,20,6,30,20,6,31,20,6,32,20,6,33,20,6,34,20,6,35,20,6,36,20,6,37,20,6,38,20,7,0,20,7,1,20,7,2,20,7,3,20,7,9,20,7,10,20,7,11,20,7,12,20,7,13,20,7,14,20,7,15,20,7,16,20,7,24,20,7,25,20,7,26,20,7,27,20,7,28,20,7,29,20,7,30,20,7,31,20,7,32,20,7,33,20,7,34,20,7,35,20,7,36,20,7,37,20,7,38,20,8,0,20,8,1,20,8,2,20,8,3,20,8,4,20,8,10,20,8,11,20,8,12,20,8,13,20,8,14,20,8,15,20,8,16,20,8,24,20,8,25,20,8,26,20,8,27,20,8,28,20,8,29,20,8,30,20,8,31,20,8,32,20,8,33,20,8,34,20,8,35,20,8,36,20,8,37,20,8,38,20,9,0,20,9,1,20,9,2,20,9,3,20,9,4,20,9,5,20,9,11,20,9,12,20,9,13,20,9,14,20,9,15,20,9,16,20,9,24,20,9,25,20,9,26,20,9,27,20,9,28,20,9,29,20,9,30,20,9,31,20,9,32,20,9,33,20,9,34,20,9,35,20,9,36,20,9,37,20,9,38,20,10,0,20,10,1,20,10,2,20,10,3,20,10,4,20,10,5,20,10,6,20,10,12,20,10,13,20,10,14,20,10,15,20,10,16,20,10,24,20,10,25,20,10,26,20,10,27,20,10,28,20,10,29,20,10,30,20,10,31,20,10,32,20,10,33,20,10,34,20,10,35,20,10,36,20,10,37,20,10,38,20,11,0,20,11,1,20,11,2,20,11,3,20,11,4,20,11,5,20,11,6,20,11,7,20,11,13,20,11,14,20,11,15,20,11,16,20,11,24,20,11,25,20,11,26,20,11,27,20,11,28,20,11,29,20,11,30,20,11,31,20,11,32,20,11,33,20,11,34,20,11,35,20,11,36,20,11,37,20,11,38,20,12,0,20,12,1,20,12,2,20,12,3,20,12,4,20,12,5,20,12,6,20,12,7,20,12,8,20,12,14,20,12,15,20,12,16,20,12,24,20,12,25,20,12,26,20,12,27,20,12,28,20,12,29,20,12,30,20,12,31,20,12,32,20,12,33,20,12,34,20,12,35,20,12,36,20,12,37,20,12,38,20,13,0,20,13,1,20,13,2,20,13,3,20,13,4,20,13,5,20,13,6,20,13,7,20,13,8,20,13,9,20,13,15,20,13,16,20,13,24,20,13,25,20,13,26,20,13,27,20,13,28,20,13,29,20,13,30,20,13,31,20,13,32,20,13,33,20,13,34,20,13,35,20,13,36,20,13,37,20,13,38,20,14,0,20,14,1,20,14,2,20,14,3,20,14,4,20,14,5,20,14,6,20,14,7,20,14,8,20,14,9,20,14,10,20,14,16,20,14,24,20,14,25,20,14,26,20,14,27,20,14,28,20,14,29,20,14,30,20,14,31,20,14,32,20,14,33,20,14,34,20,14,35,20,14,36,20,14,37,20,14,38,20,15,0,20,15,1,20,15,2,20,15,3,20,15,4,20,15,5,20,15,6,20,15,7,20,15,8,20,15,9,20,15,10,20,15,11,20,15,24,20,15,25,20,15,26,20,15,27,20,15,28,20,15,29,20,15,30,20,15,31,20,15,32,20,15,33,20,15,34,20,15,35,20,15,36,20,15,37,20,15,38,20,16,0,20,16,1,20,16,2,20,16,3,20,16,4,20,16,5,20,16,6,20,16,7,20,16,8,20,16,9,20,16,10,20,16,11,20,16,12,20,16,24,20,16,25,20,16,26,20,16,27,20,16,28,20,16,29,20,16,30,20,16,31,20,16,32,20,16,33,20,16,34,20,16,35,20,16,36,20,16,37,20,16,38,20,17,0,20,17,1,20,17,2,20,17,3,20,17,4,20,17,5,20,17,6,20,17,7,20,17,8,20,17,9,20,17,10,20,17,11,20,17,12,20,17,13,20,17,24,20,17,25,20,17,26,20,17,27,20,17,28,20,17,29,20,17,30,20,17,31,20,17,32,20,17,33,20,17,34,20,17,35,20,17,36,20,17,37,20,17,38,20,18,0,20,18,1,20,18,2,20,18,3,20,18,4,20,18,5,20,18,6,20,18,7,20,18,8,20,18,9,20,18,10,20,18,11,20,18,12,20,18,13,20,18,14,20,18,24,20,18,25,20,18,26,20,18,27,20,18,28,20,18,29,20,18,30,20,18,31,20,18,32,20,18,33,20,18,34,20,18,35,20,18,36,20,18,37,20,18,38,20,24,0,20,24,1,20,24,2,20,24,3,20,24,4,20,24,5,20,24,6,20,24,7,20,24,8,20,24,9,20,24,10,20,24,11,20,24,12,20,24,13,20,24,14,20,24,15,20,24,16,20,24,26,20,24,27,20,24,28,20,24,29,20,24,30,20,24,31,20,24,32,20,24,33,20,24,34,20,24,35,20,24,36,20,24,37,20,24,38,20,25,0,20,25,1,20,25,2,20,25,3,20,25,4,20,25,5,20,25,6,20,25,7,20,25,8,20,25,9,20,25,10,20,25,11,20,25,12,20,25,13,20,25,14,20,25,15,20,25,16,20,25,27,20,25,28,20,25,29,20,25,30,20,25,31,20,25,32,20,25,33,20,25,34,20,25,35,20,25,36,20,25,37,20,25,38,20,26,0,20,26,1,20,26,2,20,26,3,20,26,4,20,26,5,20,26,6,20,26,7,20,26,8,20,26,9,20,26,10,20,26,11,20,26,12,20,26,13,20,26,14,20,26,15,20,26,16,20,26,28,20,26,29,20,26,30,20,26,31,20,26,32,20,26,33,20,26,34,20,26,35,20,26,36,20,26,37,20,26,38,20,27,0,20,27,1,20,27,2,20,27,3,20,27,4,20,27,5,20,27,6,20,27,7,20,27,8,20,27,9,20,27,10,20,27,11,20,27,12,20,27,13,20,27,14,20,27,15,20,27,16,20,27,29,20,27,30,20,27,31,20,27,32,20,27,33,20,27,34,20,27,35,20,27,36,20,27,37,20,27,38,20,28,0,20,28,1,20,28,2,20,28,3,20,28,4,20,28,5,20,28,6,20,28,7,20,28,8,20,28,9,20,28,10,20,28,11,20,28,12,20,28,13,20,28,14,20,28,15,20,28,16,20,28,24,20,28,30,20,28,31,20,28,32,20,28,33,20,28,34,20,28,35,20,28,36,20,28,37,20,28,38,20,29,0,20,29,1,20,29,2,20,29,3,20,29,4,20,29,5,20,29,6,20,29,7,20,29,8,20,29,9,20,29,10,20,29,11,20,29,12,20,29,13,20,29,14,20,29,15,20,29,16,20,29,24,20,29,25,20,29,31,20,29,32,20,29,33,20,29,34,20,29,35,20,29,36,20,29,37,20,29,38,20,30,0,20,30,1,20,30,2,20,30,3,20,30,4,20,30,5,20,30,6,20,30,7,20,30,8,20,30,9,20,30,10,20,30,11,20,30,12,20,30,13,20,30,14,20,30,15,20,30,16,20,30,24,20,30,25,20,30,26,20,30,32,20,30,33,20,30,34,20,30,35,20,30,36,20,30,37,20,30,38,20,31,0,20,31,1,20,31,2,20,31,3,20,31,4,20,31,5,20,31,6,20,31,7,20,31,8,20,31,9,20,31,10,20,31,11,20,31,12,20,31,13,20,31,14,20,31,15,20,31,16,20,31,24,20,31,25,20,31,26,20,31,27,20,31,33,20,31,34,20,31,35,20,31,36,20,31,37,20,31,38,20,32,0,20,32,1,20,32,2,20,32,3,20,32,4,20,32,5,20,32,6,20,32,7,20,32,8,20,32,9,20,32,10,20,32,11,20,32,12,20,32,13,20,32,14,20,32,15,20,32,16,20,32,24,20,32,25,20,32,26,20,32,27,20,32,28,20,32,34,20,32,35,20,32,36,20,32,37,20,32,38,20,33,0,20,33,1,20,33,2,20,33,3,20,33,4,20,33,5,20,33,6,20,33,7,20,33,8,20,33,9,20,33,10,20,33,11,20,33,12,20,33,13,20,33,14,20,33,15,20,33,16,20,33,24,20,33,25,20,33,26,20,33,27,20,33,28,20,33,29,20,33,35,20,33,36,20,33,37,20,33,38,20,34,0,20,34,1,20,34,2,20,34,3,20,34,4,20,34,5,20,34,6,20,34,7,20,34,8,20,34,9,20,34,10,20,34,11,20,34,12,20,34,13,20,34,14,20,34,15,20,34,16,20,34,24,20,34,25,20,34,26,20,34,27,20,34,28,20,34,29,20,34,30,20,34,36,20,34,37,20,34,38,20,35,0,20,35,1,20,35,2,20,35,3,20,35,4,20,35,5,20,35,6,20,35,7,20,35,8,20,35,9,20,35,10,20,35,11,20,35,12,20,35,13,20,35,14,20,35,15,20,35,16,20,35,24,20,35,25,20,35,26,20,35,27,20,35,28,20,35,29,20,35,30,20,35,31,20,35,37,20,35,38,21,4,0,21,4,6,21,4,7,21,4,8,21,4,9,21,4,10,21,4,11,21,4,12,21,4,13,21,4,14,21,4,15,21,4,16,21,4,17,21,4,25,21,4,26,21,4,27,21,4,28,21,4,29,21,4,30,21,4,31,21,4,32,21,4,33,21,4,34,21,4,35,21,4,36,21,4,37,21,4,38,21,5,0,21,5,1,21,5,7,21,5,8,21,5,9,21,5,10,21,5,11,21,5,12,21,5,13,21,5,14,21,5,15,21,5,16,21,5,17,21,5,25,21,5,26,21,5,27,21,5,28,21,5,29,21,5,30,21,5,31,21,5,32,21,5,33,21,5,34,21,5,35,21,5,36,21,5,37,21,5,38,21,6,0,21,6,1,21,6,2,21,6,8,21,6,9,21,6,10,21,6,11,21,6,12,21,6,13,21,6,14,21,6,15,21,6,16,21,6,17,21,6,25,21,6,26,21,6,27,21,6,28,21,6,29,21,6,30,21,6,31,21,6,32,21,6,33,21,6,34,21,6,35,21,6,36,21,6,37,21,6,38,21,7,0,21,7,1,21,7,2,21,7,3,21,7,9,21,7,10,21,7,11,21,7,12,21,7,13,21,7,14,21,7,15,21,7,16,21,7,17,21,7,25,21,7,26,21,7,27,21,7,28,21,7,29,21,7,30,21,7,31,21,7,32,21,7,33,21,7,34,21,7,35,21,7,36,21,7,37,21,7,38,21,8,0,21,8,1,21,8,2,21,8,3,21,8,4,21,8,10,21,8,11,21,8,12,21,8,13,21,8,14,21,8,15,21,8,16,21,8,17,21,8,25,21,8,26,21,8,27,21,8,28,21,8,29,21,8,30,21,8,31,21,8,32,21,8,33,21,8,34,21,8,35,21,8,36,21,8,37,21,8,38,21,9,0,21,9,1,21,9,2,21,9,3,21,9,4,21,9,5,21,9,11,21,9,12,21,9,13,21,9,14,21,9,15,21,9,16,21,9,17,21,9,25,21,9,26,21,9,27,21,9,28,21,9,29,21,9,30,21,9,31,21,9,32,21,9,33,21,9,34,21,9,35,21,9,36,21,9,37,21,9,38,21,10,0,21,10,1,21,10,2,21,10,3,21,10,4,21,10,5,21,10,6,21,10,12,21,10,13,21,10,14,21,10,15,21,10,16,21,10,17,21,10,25,21,10,26,21,10,27,21,10,28,21,10,29,21,10,30,21,10,31,21,10,32,21,10,33,21,10,34,21,10,35,21,10,36,21,10,37,21,10,38,21,11,0,21,11,1,21,11,2,21,11,3,21,11,4,21,11,5,21,11,6,21,11,7,21,11,13,21,11,14,21,11,15,21,11,16,21,11,17,21,11,25,21,11,26,21,11,27,21,11,28,21,11,29,21,11,30,21,11,31,21,11,32,21,11,33,21,11,34,21,11,35,21,11,36,21,11,37,21,11,38,21,12,0,21,12,1,21,12,2,21,12,3,21,12,4,21,12,5,21,12,6,21,12,7,21,12,8,21,12,14,21,12,15,21,12,16,21,12,17,21,12,25,21,12,26,21,12,27,21,12,28,21,12,29,21,12,30,21,12,31,21,12,32,21,12,33,21,12,34,21,12,35,21,12,36,21,12,37,21,12,38,21,13,0,21,13,1,21,13,2,21,13,3,21,13,4,21,13,5,21,13,6,21,13,7,21,13,8,21,13,9,21,13,15,21,13,16,21,13,17,21,13,25,21,13,26,21,13,27,21,13,28,21,13,29,21,13,30,21,13,31,21,13,32,21,13,33,21,13,34,21,13,35,21,13,36,21,13,37,21,13,38,21,14,0,21,14,1,21,14,2,21,14,3,21,14,4,21,14,5,21,14,6,21,14,7,21,14,8,21,14,9,21,14,10,21,14,16,21,14,17,21,14,25,21,14,26,21,14,27,21,14,28,21,14,29,21,14,30,21,14,31,21,14,32,21,14,33,21,14,34,21,14,35,21,14,36,21,14,37,21,14,38,21,15,0,21,15,1,21,15,2,21,15,3,21,15,4,21,15,5,21,15,6,21,15,7,21,15,8,21,15,9,21,15,10,21,15,11,21,15,17,21,15,25,21,15,26,21,15,27,21,15,28,21,15,29,21,15,30,21,15,31,21,15,32,21,15,33,21,15,34,21,15,35,21,15,36,21,15,37,21,15,38,21,16,0,21,16,1,21,16,2,21,16,3,21,16,4,21,16,5,21,16,6,21,16,7,21,16,8,21,16,9,21,16,10,21,16,11,21,16,12,21,16,25,21,16,26,21,16,27,21,16,28,21,16,29,21,16,30,21,16,31,21,16,32,21,16,33,21,16,34,21,16,35,21,16,36,21,16,37,21,16,38,21,17,0,21,17,1,21,17,2,21,17,3,21,17,4,21,17,5,21,17,6,21,17,7,21,17,8,21,17,9,21,17,10,21,17,11,21,17,12,21,17,13,21,17,25,21,17,26,21,17,27,21,17,28,21,17,29,21,17,30,21,17,31,21,17,32,21,17,33,21,17,34,21,17,35,21,17,36,21,17,37,21,17,38,21,18,0,21,18,1,21,18,2,21,18,3,21,18,4,21,18,5,21,18,6,21,18,7,21,18,8,21,18,9,21,18,10,21,18,11,21,18,12,21,18,13,21,18,14,21,18,25,21,18,26,21,18,27,21,18,28,21,18,29,21,18,30,21,18,31,21,18,32,21,18,33,21,18,34,21,18,35,21,18,36,21,18,37,21,18,38,21,19,0,21,19,1,21,19,2,21,19,3,21,19,4,21,19,5,21,19,6,21,19,7,21,19,8,21,19,9,21,19,10,21,19,11,21,19,12,21,19,13,21,19,14,21,19,15,21,19,25,21,19,26,21,19,27,21,19,28,21,19,29,21,19,30,21,19,31,21,19,32,21,19,33,21,19,34,21,19,35,21,19,36,21,19,37,21,19,38,21,25,0,21,25,1,21,25,2,21,25,3,21,25,4,21,25,5,21,25,6,21,25,7,21,25,8,21,25,9,21,25,10,21,25,11,21,25,12,21,25,13,21,25,14,21,25,15,21,25,16,21,25,17,21,25,27,21,25,28,21,25,29,21,25,30,21,25,31,21,25,32,21,25,33,21,25,34,21,25,35,21,25,36,21,25,37,21,25,38,21,26,0,21,26,1,21,26,2,21,26,3,21,26,4,21,26,5,21,26,6,21,26,7,21,26,8,21,26,9,21,26,10,21,26,11,21,26,12,21,26,13,21,26,14,21,26,15,21,26,16,21,26,17,21,26,28,21,26,29,21,26,30,21,26,31,21,26,32,21,26,33,21,26,34,21,26,35,21,26,36,21,26,37,21,26,38,21,27,0,21,27,1,21,27,2,21,27,3,21,27,4,21,27,5,21,27,6,21,27,7,21,27,8,21,27,9,21,27,10,21,27,11,21,27,12,21,27,13,21,27,14,21,27,15,21,27,16,21,27,17,21,27,29,21,27,30,21,27,31,21,27,32,21,27,33,21,27,34,21,27,35,21,27,36,21,27,37,21,27,38,21,28,0,21,28,1,21,28,2,21,28,3,21,28,4,21,28,5,21,28,6,21,28,7,21,28,8,21,28,9,21,28,10,21,28,11,21,28,12,21,28,13,21,28,14,21,28,15,21,28,16,21,28,17,21,28,30,21,28,31,21,28,32,21,28,33,21,28,34,21,28,35,21,28,36,21,28,37,21,28,38,21,29,0,21,29,1,21,29,2,21,29,3,21,29,4,21,29,5,21,29,6,21,29,7,21,29,8,21,29,9,21,29,10,21,29,11,21,29,12,21,29,13,21,29,14,21,29,15,21,29,16,21,29,17,21,29,25,21,29,31,21,29,32,21,29,33,21,29,34,21,29,35,21,29,36,21,29,37,21,29,38,21,30,0,21,30,1,21,30,2,21,30,3,21,30,4,21,30,5,21,30,6,21,30,7,21,30,8,21,30,9,21,30,10,21,30,11,21,30,12,21,30,13,21,30,14,21,30,15,21,30,16,21,30,17,21,30,25,21,30,26,21,30,32,21,30,33,21,30,34,21,30,35,21,30,36,21,30,37,21,30,38,21,31,0,21,31,1,21,31,2,21,31,3,21,31,4,21,31,5,21,31,6,21,31,7,21,31,8,21,31,9,21,31,10,21,31,11,21,31,12,21,31,13,21,31,14,21,31,15,21,31,16,21,31,17,21,31,25,21,31,26,21,31,27,21,31,33,21,31,34,21,31,35,21,31,36,21,31,37,21,31,38,21,32,0,21,32,1,21,32,2,21,32,3,21,32,4,21,32,5,21,32,6,21,32,7,21,32,8,21,32,9,21,32,10,21,32,11,21,32,12,21,32,13,21,32,14,21,32,15,21,32,16,21,32,17,21,32,25,21,32,26,21,32,27,21,32,28,21,32,34,21,32,35,21,32,36,21,32,37,21,32,38,21,33,0,21,33,1,21,33,2,21,33,3,21,33,4,21,33,5,21,33,6,21,33,7,21,33,8,21,33,9,21,33,10,21,33,11,21,33,12,21,33,13,21,33,14,21,33,15,21,33,16,21,33,17,21,33,25,21,33,26,21,33,27,21,33,28,21,33,29,21,33,35,21,33,36,21,33,37,21,33,38,21,34,0,21,34,1,21,34,2,21,34,3,21,34,4,21,34,5,21,34,6,21,34,7,21,34,8,21,34,9,21,34,10,21,34,11,21,34,12,21,34,13,21,34,14,21,34,15,21,34,16,21,34,17,21,34,25,21,34,26,21,34,27,21,34,28,21,34,29,21,34,30,21,34,36,21,34,37,21,34,38,21,35,0,21,35,1,21,35,2,21,35,3,21,35,4,21,35,5,21,35,6,21,35,7,21,35,8,21,35,9,21,35,10,21,35,11,21,35,12,21,35,13,21,35,14,21,35,15,21,35,16,21,35,17,21,35,25,21,35,26,21,35,27,21,35,28,21,35,29,21,35,30,21,35,31,21,35,37,21,35,38,22,4,0,22,4,6,22,4,7,22,4,8,22,4,9,22,4,10,22,4,11,22,4,12,22,4,13,22,4,14,22,4,15,22,4,16,22,4,17,22,4,18,22,4,26,22,4,27,22,4,28,22,4,29,22,4,30,22,4,31,22,4,32,22,4,33,22,4,34,22,4,35,22,4,36,22,4,37,22,4,38,22,5,0,22,5,1,22,5,7,22,5,8,22,5,9,22,5,10,22,5,11,22,5,12,22,5,13,22,5,14,22,5,15,22,5,16,22,5,17,22,5,18,22,5,26,22,5,27,22,5,28,22,5,29,22,5,30,22,5,31,22,5,32,22,5,33,22,5,34,22,5,35,22,5,36,22,5,37,22,5,38,22,6,0,22,6,1,22,6,2,22,6,8,22,6,9,22,6,10,22,6,11,22,6,12,22,6,13,22,6,14,22,6,15,22,6,16,22,6,17,22,6,18,22,6,26,22,6,27,22,6,28,22,6,29,22,6,30,22,6,31,22,6,32,22,6,33,22,6,34,22,6,35,22,6,36,22,6,37,22,6,38,22,7,0,22,7,1,22,7,2,22,7,3,22,7,9,22,7,10,22,7,11,22,7,12,22,7,13,22,7,14,22,7,15,22,7,16,22,7,17,22,7,18,22,7,26,22,7,27,22,7,28,22,7,29,22,7,30,22,7,31,22,7,32,22,7,33,22,7,34,22,7,35,22,7,36,22,7,37,22,7,38,22,8,0,22,8,1,22,8,2,22,8,3,22,8,4,22,8,10,22,8,11,22,8,12,22,8,13,22,8,14,22,8,15,22,8,16,22,8,17,22,8,18,22,8,26,22,8,27,22,8,28,22,8,29,22,8,30,22,8,31,22,8,32,22,8,33,22,8,34,22,8,35,22,8,36,22,8,37,22,8,38,22,9,0,22,9,1,22,9,2,22,9,3,22,9,4,22,9,5,22,9,11,22,9,12,22,9,13,22,9,14,22,9,15,22,9,16,22,9,17,22,9,18,22,9,26,22,9,27,22,9,28,22,9,29,22,9,30,22,9,31,22,9,32,22,9,33,22,9,34,22,9,35,22,9,36,22,9,37,22,9,38,22,10,0,22,10,1,22,10,2,22,10,3,22,10,4,22,10,5,22,10,6,22,10,12,22,10,13,22,10,14,22,10,15,22,10,16,22,10,17,22,10,18,22,10,26,22,10,27,22,10,28,22,10,29,22,10,30,22,10,31,22,10,32,22,10,33,22,10,34,22,10,35,22,10,36,22,10,37,22,10,38,22,11,0,22,11,1,22,11,2,22,11,3,22,11,4,22,11,5,22,11,6,22,11,7,22,11,13,22,11,14,22,11,15,22,11,16,22,11,17,22,11,18,22,11,26,22,11,27,22,11,28,22,11,29,22,11,30,22,11,31,22,11,32,22,11,33,22,11,34,22,11,35,22,11,36,22,11,37,22,11,38,22,12,0,22,12,1,22,12,2,22,12,3,22,12,4,22,12,5,22,12,6,22,12,7,22,12,8,22,12,14,22,12,15,22,12,16,22,12,17,22,12,18,22,12,26,22,12,27,22,12,28,22,12,29,22,12,30,22,12,31,22,12,32,22,12,33,22,12,34,22,12,35,22,12,36,22,12,37,22,12,38,22,13,0,22,13,1,22,13,2,22,13,3,22,13,4,22,13,5,22,13,6,22,13,7,22,13,8,22,13,9,22,13,15,22,13,16,22,13,17,22,13,18,22,13,26,22,13,27,22,13,28,22,13,29,22,13,30,22,13,31,22,13,32,22,13,33,22,13,34,22,13,35,22,13,36,22,13,37,22,13,38,22,14,0,22,14,1,22,14,2,22,14,3,22,14,4,22,14,5,22,14,6,22,14,7,22,14,8,22,14,9,22,14,10,22,14,16,22,14,17,22,14,18,22,14,26,22,14,27,22,14,28,22,14,29,22,14,30,22,14,31,22,14,32,22,14,33,22,14,34,22,14,35,22,14,36,22,14,37,22,14,38,22,15,0,22,15,1,22,15,2,22,15,3,22,15,4,22,15,5,22,15,6,22,15,7,22,15,8,22,15,9,22,15,10,22,15,11,22,15,17,22,15,18,22,15,26,22,15,27,22,15,28,22,15,29,22,15,30,22,15,31,22,15,32,22,15,33,22,15,34,22,15,35,22,15,36,22,15,37,22,15,38,22,16,0,22,16,1,22,16,2,22,16,3,22,16,4,22,16,5,22,16,6,22,16,7,22,16,8,22,16,9,22,16,10,22,16,11,22,16,12,22,16,18,22,16,26,22,16,27,22,16,28,22,16,29,22,16,30,22,16,31,22,16,32,22,16,33,22,16,34,22,16,35,22,16,36,22,16,37,22,16,38,22,17,0,22,17,1,22,17,2,22,17,3,22,17,4,22,17,5,22,17,6,22,17,7,22,17,8,22,17,9,22,17,10,22,17,11,22,17,12,22,17,13,22,17,26,22,17,27,22,17,28,22,17,29,22,17,30,22,17,31,22,17,32,22,17,33,22,17,34,22,17,35,22,17,36,22,17,37,22,17,38,22,18,0,22,18,1,22,18,2,22,18,3,22,18,4,22,18,5,22,18,6,22,18,7,22,18,8,22,18,9,22,18,10,22,18,11,22,18,12,22,18,13,22,18,14,22,18,26,22,18,27,22,18,28,22,18,29,22,18,30,22,18,31,22,18,32,22,18,33,22,18,34,22,18,35,22,18,36,22,18,37,22,18,38,22,19,0,22,19,1,22,19,2,22,19,3,22,19,4,22,19,5,22,19,6,22,19,7,22,19,8,22,19,9,22,19,10,22,19,11,22,19,12,22,19,13,22,19,14,22,19,15,22,19,26,22,19,27,22,19,28,22,19,29,22,19,30,22,19,31,22,19,32,22,19,33,22,19,34,22,19,35,22,19,36,22,19,37,22,19,38,22,20,0,22,20,1,22,20,2,22,20,3,22,20,4,22,20,5,22,20,6,22,20,7,22,20,8,22,20,9,22,20,10,22,20,11,22,20,12,22,20,13,22,20,14,22,20,15,22,20,16,22,20,26,22,20,27,22,20,28,22,20,29,22,20,30,22,20,31,22,20,32,22,20,33,22,20,34,22,20,35,22,20,36,22,20,37,22,20,38,22,26,0,22,26,1,22,26,2,22,26,3,22,26,4,22,26,5,22,26,6,22,26,7,22,26,8,22,26,9,22,26,10,22,26,11,22,26,12,22,26,13,22,26,14,22,26,15,22,26,16,22,26,17,22,26,18,22,26,28,22,26,29,22,26,30,22,26,31,22,26,32,22,26,33,22,26,34,22,26,35,22,26,36,22,26,37,22,26,38,22,27,0,22,27,1,22,27,2,22,27,3,22,27,4,22,27,5,22,27,6,22,27,7,22,27,8,22,27,9,22,27,10,22,27,11,22,27,12,22,27,13,22,27,14,22,27,15,22,27,16,22,27,17,22,27,18,22,27,29,22,27,30,22,27,31,22,27,32,22,27,33,22,27,34,22,27,35,22,27,36,22,27,37,22,27,38,22,28,0,22,28,1,22,28,2,22,28,3,22,28,4,22,28,5,22,28,6,22,28,7,22,28,8,22,28,9,22,28,10,22,28,11,22,28,12,22,28,13,22,28,14,22,28,15,22,28,16,22,28,17,22,28,18,22,28,30,22,28,31,22,28,32,22,28,33,22,28,34,22,28,35,22,28,36,22,28,37,22,28,38,22,29,0,22,29,1,22,29,2,22,29,3,22,29,4,22,29,5,22,29,6,22,29,7,22,29,8,22,29,9,22,29,10,22,29,11,22,29,12,22,29,13,22,29,14,22,29,15,22,29,16,22,29,17,22,29,18,22,29,31,22,29,32,22,29,33,22,29,34,22,29,35,22,29,36,22,29,37,22,29,38,22,30,0,22,30,1,22,30,2,22,30,3,22,30,4,22,30,5,22,30,6,22,30,7,22,30,8,22,30,9,22,30,10,22,30,11,22,30,12,22,30,13,22,30,14,22,30,15,22,30,16,22,30,17,22,30,18,22,30,26,22,30,32,22,30,33,22,30,34,22,30,35,22,30,36,22,30,37,22,30,38,22,31,0,22,31,1,22,31,2,22,31,3,22,31,4,22,31,5,22,31,6,22,31,7,22,31,8,22,31,9,22,31,10,22,31,11,22,31,12,22,31,13,22,31,14,22,31,15,22,31,16,22,31,17,22,31,18,22,31,26,22,31,27,22,31,33,22,31,34,22,31,35,22,31,36,22,31,37,22,31,38,22,32,0,22,32,1,22,32,2,22,32,3,22,32,4,22,32,5,22,32,6,22,32,7,22,32,8,22,32,9,22,32,10,22,32,11,22,32,12,22,32,13,22,32,14,22,32,15,22,32,16,22,32,17,22,32,18,22,32,26,22,32,27,22,32,28,22,32,34,22,32,35,22,32,36,22,32,37,22,32,38,22,33,0,22,33,1,22,33,2,22,33,3,22,33,4,22,33,5,22,33,6,22,33,7,22,33,8,22,33,9,22,33,10,22,33,11,22,33,12,22,33,13,22,33,14,22,33,15,22,33,16,22,33,17,22,33,18,22,33,26,22,33,27,22,33,28,22,33,29,22,33,35,22,33,36,22,33,37,22,33,38,22,34,0,22,34,1,22,34,2,22,34,3,22,34,4,22,34,5,22,34,6,22,34,7,22,34,8,22,34,9,22,34,10,22,34,11,22,34,12,22,34,13,22,34,14,22,34,15,22,34,16,22,34,17,22,34,18,22,34,26,22,34,27,22,34,28,22,34,29,22,34,30,22,34,36,22,34,37,22,34,38,22,35,0,22,35,1,22,35,2,22,35,3,22,35,4,22,35,5,22,35,6,22,35,7,22,35,8,22,35,9,22,35,10,22,35,11,22,35,12,22,35,13,22,35,14,22,35,15,22,35,16,22,35,17,22,35,18,22,35,26,22,35,27,22,35,28,22,35,29,22,35,30,22,35,31,22,35,37,22,35,38,23,4,0,23,4,6,23,4,7,23,4,8,23,4,9,23,4,10,23,4,11,23,4,12,23,4,13,23,4,14,23,4,15,23,4,16,23,4,17,23,4,18,23,4,19,23,4,27,23,4,28,23,4,29,23,4,30,23,4,31,23,4,32,23,4,33,23,4,34,23,4,35,23,4,36,23,4,37,23,4,38,23,5,0,23,5,1,23,5,7,23,5,8,23,5,9,23,5,10,23,5,11,23,5,12,23,5,13,23,5,14,23,5,15,23,5,16,23,5,17,23,5,18,23,5,19,23,5,27,23,5,28,23,5,29,23,5,30,23,5,31,23,5,32,23,5,33,23,5,34,23,5,35,23,5,36,23,5,37,23,5,38,23,6,0,23,6,1,23,6,2,23,6,8,23,6,9,23,6,10,23,6,11,23,6,12,23,6,13,23,6,14,23,6,15,23,6,16,23,6,17,23,6,18,23,6,19,23,6,27,23,6,28,23,6,29,23,6,30,23,6,31,23,6,32,23,6,33,23,6,34,23,6,35,23,6,36,23,6,37,23,6,38,23,7,0,23,7,1,23,7,2,23,7,3,23,7,9,23,7,10,23,7,11,23,7,12,23,7,13,23,7,14,23,7,15,23,7,16,23,7,17,23,7,18,23,7,19,23,7,27,23,7,28,23,7,29,23,7,30,23,7,31,23,7,32,23,7,33,23,7,34,23,7,35,23,7,36,23,7,37,23,7,38,23,8,0,23,8,1,23,8,2,23,8,3,23,8,4,23,8,10,23,8,11,23,8,12,23,8,13,23,8,14,23,8,15,23,8,16,23,8,17,23,8,18,23,8,19,23,8,27,23,8,28,23,8,29,23,8,30,23,8,31,23,8,32,23,8,33,23,8,34,23,8,35,23,8,36,23,8,37,23,8,38,23,9,0,23,9,1,23,9,2,23,9,3,23,9,4,23,9,5,23,9,11,23,9,12,23,9,13,23,9,14,23,9,15,23,9,16,23,9,17,23,9,18,23,9,19,23,9,27,23,9,28,23,9,29,23,9,30,23,9,31,23,9,32,23,9,33,23,9,34,23,9,35,23,9,36,23,9,37,23,9,38,23,10,0,23,10,1,23,10,2,23,10,3,23,10,4,23,10,5,23,10,6,23,10,12,23,10,13,23,10,14,23,10,15,23,10,16,23,10,17,23,10,18,23,10,19,23,10,27,23,10,28,23,10,29,23,10,30,23,10,31,23,10,32,23,10,33,23,10,34,23,10,35,23,10,36,23,10,37,23,10,38,23,11,0,23,11,1,23,11,2,23,11,3,23,11,4,23,11,5,23,11,6,23,11,7,23,11,13,23,11,14,23,11,15,23,11,16,23,11,17,23,11,18,23,11,19,23,11,27,23,11,28,23,11,29,23,11,30,23,11,31,23,11,32,23,11,33,23,11,34,23,11,35,23,11,36,23,11,37,23,11,38,23,12,0,23,12,1,23,12,2,23,12,3,23,12,4,23,12,5,23,12,6,23,12,7,23,12,8,23,12,14,23,12,15,23,12,16,23,12,17,23,12,18,23,12,19,23,12,27,23,12,28,23,12,29,23,12,30,23,12,31,23,12,32,23,12,33,23,12,34,23,12,35,23,12,36,23,12,37,23,12,38,23,13,0,23,13,1,23,13,2,23,13,3,23,13,4,23,13,5,23,13,6,23,13,7,23,13,8,23,13,9,23,13,15,23,13,16,23,13,17,23,13,18,23,13,19,23,13,27,23,13,28,23,13,29,23,13,30,23,13,31,23,13,32,23,13,33,23,13,34,23,13,35,23,13,36,23,13,37,23,13,38,23,14,0,23,14,1,23,14,2,23,14,3,23,14,4,23,14,5,23,14,6,23,14,7,23,14,8,23,14,9,23,14,10,23,14,16,23,14,17,23,14,18,23,14,19,23,14,27,23,14,28,23,14,29,23,14,30,23,14,31,23,14,32,23,14,33,23,14,34,23,14,35,23,14,36,23,14,37,23,14,38,23,15,0,23,15,1,23,15,2,23,15,3,23,15,4,23,15,5,23,15,6,23,15,7,23,15,8,23,15,9,23,15,10,23,15,11,23,15,17,23,15,18,23,15,19,23,15,27,23,15,28,23,15,29,23,15,30,23,15,31,23,15,32,23,15,33,23,15,34,23,15,35,23,15,36,23,15,37,23,15,38,23,16,0,23,16,1,23,16,2,23,16,3,23,16,4,23,16,5,23,16,6,23,16,7,23,16,8,23,16,9,23,16,10,23,16,11,23,16,12,23,16,18,23,16,19,23,16,27,23,16,28,23,16,29,23,16,30,23,16,31,23,16,32,23,16,33,23,16,34,23,16,35,23,16,36,23,16,37,23,16,38,23,17,0,23,17,1,23,17,2,23,17,3,23,17,4,23,17,5,23,17,6,23,17,7,23,17,8,23,17,9,23,17,10,23,17,11,23,17,12,23,17,13,23,17,19,23,17,27,23,17,28,23,17,29,23,17,30,23,17,31,23,17,32,23,17,33,23,17,34,23,17,35,23,17,36,23,17,37,23,17,38,23,18,0,23,18,1,23,18,2,23,18,3,23,18,4,23,18,5,23,18,6,23,18,7,23,18,8,23,18,9,23,18,10,23,18,11,23,18,12,23,18,13,23,18,14,23,18,27,23,18,28,23,18,29,23,18,30,23,18,31,23,18,32,23,18,33,23,18,34,23,18,35,23,18,36,23,18,37,23,18,38,23,19,0,23,19,1,23,19,2,23,19,3,23,19,4,23,19,5,23,19,6,23,19,7,23,19,8,23,19,9,23,19,10,23,19,11,23,19,12,23,19,13,23,19,14,23,19,15,23,19,27,23,19,28,23,19,29,23,19,30,23,19,31,23,19,32,23,19,33,23,19,34,23,19,35,23,19,36,23,19,37,23,19,38,23,20,0,23,20,1,23,20,2,23,20,3,23,20,4,23,20,5,23,20,6,23,20,7,23,20,8,23,20,9,23,20,10,23,20,11,23,20,12,23,20,13,23,20,14,23,20,15,23,20,16,23,20,27,23,20,28,23,20,29,23,20,30,23,20,31,23,20,32,23,20,33,23,20,34,23,20,35,23,20,36,23,20,37,23,20,38,23,21,0,23,21,1,23,21,2,23,21,3,23,21,4,23,21,5,23,21,6,23,21,7,23,21,8,23,21,9,23,21,10,23,21,11,23,21,12,23,21,13,23,21,14,23,21,15,23,21,16,23,21,17,23,21,27,23,21,28,23,21,29,23,21,30,23,21,31,23,21,32,23,21,33,23,21,34,23,21,35,23,21,36,23,21,37,23,21,38,23,27,0,23,27,1,23,27,2,23,27,3,23,27,4,23,27,5,23,27,6,23,27,7,23,27,8,23,27,9,23,27,10,23,27,11,23,27,12,23,27,13,23,27,14,23,27,15,23,27,16,23,27,17,23,27,18,23,27,19,23,27,29,23,27,30,23,27,31,23,27,32,23,27,33,23,27,34,23,27,35,23,27,36,23,27,37,23,27,38,23,28,0,23,28,1,23,28,2,23,28,3,23,28,4,23,28,5,23,28,6,23,28,7,23,28,8,23,28,9,23,28,10,23,28,11,23,28,12,23,28,13,23,28,14,23,28,15,23,28,16,23,28,17,23,28,18,23,28,19,23,28,30,23,28,31,23,28,32,23,28,33,23,28,34,23,28,35,23,28,36,23,28,37,23,28,38,23,29,0,23,29,1,23,29,2,23,29,3,23,29,4,23,29,5,23,29,6,23,29,7,23,29,8,23,29,9,23,29,10,23,29,11,23,29,12,23,29,13,23,29,14,23,29,15,23,29,16,23,29,17,23,29,18,23,29,19,23,29,31,23,29,32,23,29,33,23,29,34,23,29,35,23,29,36,23,29,37,23,29,38,23,30,0,23,30,1,23,30,2,23,30,3,23,30,4,23,30,5,23,30,6,23,30,7,23,30,8,23,30,9,23,30,10,23,30,11,23,30,12,23,30,13,23,30,14,23,30,15,23,30,16,23,30,17,23,30,18,23,30,19,23,30,32,23,30,33,23,30,34,23,30,35,23,30,36,23,30,37,23,30,38,23,31,0,23,31,1,23,31,2,23,31,3,23,31,4,23,31,5,23,31,6,23,31,7,23,31,8,23,31,9,23,31,10,23,31,11,23,31,12,23,31,13,23,31,14,23,31,15,23,31,16,23,31,17,23,31,18,23,31,19,23,31,27,23,31,33,23,31,34,23,31,35,23,31,36,23,31,37,23,31,38,23,32,0,23,32,1,23,32,2,23,32,3,23,32,4,23,32,5,23,32,6,23,32,7,23,32,8,23,32,9,23,32,10,23,32,11,23,32,12,23,32,13,23,32,14,23,32,15,23,32,16,23,32,17,23,32,18,23,32,19,23,32,27,23,32,28,23,32,34,23,32,35,23,32,36,23,32,37,23,32,38,23,33,0,23,33,1,23,33,2,23,33,3,23,33,4,23,33,5,23,33,6,23,33,7,23,33,8,23,33,9,23,33,10,23,33,11,23,33,12,23,33,13,23,33,14,23,33,15,23,33,16,23,33,17,23,33,18,23,33,19,23,33,27,23,33,28,23,33,29,23,33,35,23,33,36,23,33,37,23,33,38,23,34,0,23,34,1,23,34,2,23,34,3,23,34,4,23,34,5,23,34,6,23,34,7,23,34,8,23,34,9,23,34,10,23,34,11,23,34,12,23,34,13,23,34,14,23,34,15,23,34,16,23,34,17,23,34,18,23,34,19,23,34,27,23,34,28,23,34,29,23,34,30,23,34,36,23,34,37,23,34,38,23,35,0,23,35,1,23,35,2,23,35,3,23,35,4,23,35,5,23,35,6,23,35,7,23,35,8,23,35,9,23,35,10,23,35,11,23,35,12,23,35,13,23,35,14,23,35,15,23,35,16,23,35,17,23,35,18,23,35,19,23,35,27,23,35,28,23,35,29,23,35,30,23,35,31,23,35,37,23,35,38,24,4,0,24,4,6,24,4,7,24,4,8,24,4,9,24,4,10,24,4,11,24,4,12,24,4,13,24,4,14,24,4,15,24,4,16,24,4,17,24,4,18,24,4,19,24,4,20,24,4,28,24,4,29,24,4,30,24,4,31,24,4,32,24,4,33,24,4,34,24,4,35,24,4,36,24,4,37,24,4,38,24,5,0,24,5,1,24,5,7,24,5,8,24,5,9,24,5,10,24,5,11,24,5,12,24,5,13,24,5,14,24,5,15,24,5,16,24,5,17,24,5,18,24,5,19,24,5,20,24,5,28,24,5,29,24,5,30,24,5,31,24,5,32,24,5,33,24,5,34,24,5,35,24,5,36,24,5,37,24,5,38,24,6,0,24,6,1,24,6,2,24,6,8,24,6,9,24,6,10,24,6,11,24,6,12,24,6,13,24,6,14,24,6,15,24,6,16,24,6,17,24,6,18,24,6,19,24,6,20,24,6,28,24,6,29,24,6,30,24,6,31,24,6,32,24,6,33,24,6,34,24,6,35,24,6,36,24,6,37,24,6,38,24,7,0,24,7,1,24,7,2,24,7,3,24,7,9,24,7,10,24,7,11,24,7,12,24,7,13,24,7,14,24,7,15,24,7,16,24,7,17,24,7,18,24,7,19,24,7,20,24,7,28,24,7,29,24,7,30,24,7,31,24,7,32,24,7,33,24,7,34,24,7,35,24,7,36,24,7,37,24,7,38,24,8,0,24,8,1,24,8,2,24,8,3,24,8,4,24,8,10,24,8,11,24,8,12,24,8,13,24,8,14,24,8,15,24,8,16,24,8,17,24,8,18,24,8,19,24,8,20,24,8,28,24,8,29,24,8,30,24,8,31,24,8,32,24,8,33,24,8,34,24,8,35,24,8,36,24,8,37,24,8,38,24,9,0,24,9,1,24,9,2,24,9,3,24,9,4,24,9,5,24,9,11,24,9,12,24,9,13,24,9,14,24,9,15,24,9,16,24,9,17,24,9,18,24,9,19,24,9,20,24,9,28,24,9,29,24,9,30,24,9,31,24,9,32,24,9,33,24,9,34,24,9,35,24,9,36,24,9,37,24,9,38,24,10,0,24,10,1,24,10,2,24,10,3,24,10,4,24,10,5,24,10,6,24,10,12,24,10,13,24,10,14,24,10,15,24,10,16,24,10,17,24,10,18,24,10,19,24,10,20,24,10,28,24,10,29,24,10,30,24,10,31,24,10,32,24,10,33,24,10,34,24,10,35,24,10,36,24,10,37,24,10,38,24,11,0,24,11,1,24,11,2,24,11,3,24,11,4,24,11,5,24,11,6,24,11,7,24,11,13,24,11,14,24,11,15,24,11,16,24,11,17,24,11,18,24,11,19,24,11,20,24,11,28,24,11,29,24,11,30,24,11,31,24,11,32,24,11,33,24,11,34,24,11,35,24,11,36,24,11,37,24,11,38,24,12,0,24,12,1,24,12,2,24,12,3,24,12,4,24,12,5,24,12,6,24,12,7,24,12,8,24,12,14,24,12,15,24,12,16,24,12,17,24,12,18,24,12,19,24,12,20,24,12,28,24,12,29,24,12,30,24,12,31,24,12,32,24,12,33,24,12,34,24,12,35,24,12,36,24,12,37,24,12,38,24,13,0,24,13,1,24,13,2,24,13,3,24,13,4,24,13,5,24,13,6,24,13,7,24,13,8,24,13,9,24,13,15,24,13,16,24,13,17,24,13,18,24,13,19,24,13,20,24,13,28,24,13,29,24,13,30,24,13,31,24,13,32,24,13,33,24,13,34,24,13,35,24,13,36,24,13,37,24,13,38,24,14,0,24,14,1,24,14,2,24,14,3,24,14,4,24,14,5,24,14,6,24,14,7,24,14,8,24,14,9,24,14,10,24,14,16,24,14,17,24,14,18,24,14,19,24,14,20,24,14,28,24,14,29,24,14,30,24,14,31,24,14,32,24,14,33,24,14,34,24,14,35,24,14,36,24,14,37,24,14,38,24,15,0,24,15,1,24,15,2,24,15,3,24,15,4,24,15,5,24,15,6,24,15,7,24,15,8,24,15,9,24,15,10,24,15,11,24,15,17,24,15,18,24,15,19,24,15,20,24,15,28,24,15,29,24,15,30,24,15,31,24,15,32,24,15,33,24,15,34,24,15,35,24,15,36,24,15,37,24,15,38,24,16,0,24,16,1,24,16,2,24,16,3,24,16,4,24,16,5,24,16,6,24,16,7,24,16,8,24,16,9,24,16,10,24,16,11,24,16,12,24,16,18,24,16,19,24,16,20,24,16,28,24,16,29,24,16,30,24,16,31,24,16,32,24,16,33,24,16,34,24,16,35,24,16,36,24,16,37,24,16,38,24,17,0,24,17,1,24,17,2,24,17,3,24,17,4,24,17,5,24,17,6,24,17,7,24,17,8,24,17,9,24,17,10,24,17,11,24,17,12,24,17,13,24,17,19,24,17,20,24,17,28,24,17,29,24,17,30,24,17,31,24,17,32,24,17,33,24,17,34,24,17,35,24,17,36,24,17,37,24,17,38,24,18,0,24,18,1,24,18,2,24,18,3,24,18,4,24,18,5,24,18,6,24,18,7,24,18,8,24,18,9,24,18,10,24,18,11,24,18,12,24,18,13,24,18,14,24,18,20,24,18,28,24,18,29,24,18,30,24,18,31,24,18,32,24,18,33,24,18,34,24,18,35,24,18,36,24,18,37,24,18,38,24,19,0,24,19,1,24,19,2,24,19,3,24,19,4,24,19,5,24,19,6,24,19,7,24,19,8,24,19,9,24,19,10,24,19,11,24,19,12,24,19,13,24,19,14,24,19,15,24,19,28,24,19,29,24,19,30,24,19,31,24,19,32,24,19,33,24,19,34,24,19,35,24,19,36,24,19,37,24,19,38,24,20,0,24,20,1,24,20,2,24,20,3,24,20,4,24,20,5,24,20,6,24,20,7,24,20,8,24,20,9,24,20,10,24,20,11,24,20,12,24,20,13,24,20,14,24,20,15,24,20,16,24,20,28,24,20,29,24,20,30,24,20,31,24,20,32,24,20,33,24,20,34,24,20,35,24,20,36,24,20,37,24,20,38,24,21,0,24,21,1,24,21,2,24,21,3,24,21,4,24,21,5,24,21,6,24,21,7,24,21,8,24,21,9,24,21,10,24,21,11,24,21,12,24,21,13,24,21,14,24,21,15,24,21,16,24,21,17,24,21,28,24,21,29,24,21,30,24,21,31,24,21,32,24,21,33,24,21,34,24,21,35,24,21,36,24,21,37,24,21,38,24,22,0,24,22,1,24,22,2,24,22,3,24,22,4,24,22,5,24,22,6,24,22,7,24,22,8,24,22,9,24,22,10,24,22,11,24,22,12,24,22,13,24,22,14,24,22,15,24,22,16,24,22,17,24,22,18,24,22,28,24,22,29,24,22,30,24,22,31,24,22,32,24,22,33,24,22,34,24,22,35,24,22,36,24,22,37,24,22,38,24,28,0,24,28,1,24,28,2,24,28,3,24,28,4,24,28,5,24,28,6,24,28,7,24,28,8,24,28,9,24,28,10,24,28,11,24,28,12,24,28,13,24,28,14,24,28,15,24,28,16,24,28,17,24,28,18,24,28,19,24,28,20,24,28,30,24,28,31,24,28,32,24,28,33,24,28,34,24,28,35,24,28,36,24,28,37,24,28,38,24,29,0,24,29,1,24,29,2,24,29,3,24,29,4,24,29,5,24,29,6,24,29,7,24,29,8,24,29,9,24,29,10,24,29,11,24,29,12,24,29,13,24,29,14,24,29,15,24,29,16,24,29,17,24,29,18,24,29,19,24,29,20,24,29,31,24,29,32,24,29,33,24,29,34,24,29,35,24,29,36,24,29,37,24,29,38,24,30,0,24,30,1,24,30,2,24,30,3,24,30,4,24,30,5,24,30,6,24,30,7,24,30,8,24,30,9,24,30,10,24,30,11,24,30,12,24,30,13,24,30,14,24,30,15,24,30,16,24,30,17,24,30,18,24,30,19,24,30,20,24,30,32,24,30,33,24,30,34,24,30,35,24,30,36,24,30,37,24,30,38,24,31,0,24,31,1,24,31,2,24,31,3,24,31,4,24,31,5,24,31,6,24,31,7,24,31,8,24,31,9,24,31,10,24,31,11,24,31,12,24,31,13,24,31,14,24,31,15,24,31,16,24,31,17,24,31,18,24,31,19,24,31,20,24,31,33,24,31,34,24,31,35,24,31,36,24,31,37,24,31,38,24,32,0,24,32,1,24,32,2,24,32,3,24,32,4,24,32,5,24,32,6,24,32,7,24,32,8,24,32,9,24,32,10,24,32,11,24,32,12,24,32,13,24,32,14,24,32,15,24,32,16,24,32,17,24,32,18,24,32,19,24,32,20,24,32,28,24,32,34,24,32,35,24,32,36,24,32,37,24,32,38,24,33,0,24,33,1,24,33,2,24,33,3,24,33,4,24,33,5,24,33,6,24,33,7,24,33,8,24,33,9,24,33,10,24,33,11,24,33,12,24,33,13,24,33,14,24,33,15,24,33,16,24,33,17,24,33,18,24,33,19,24,33,20,24,33,28,24,33,29,24,33,35,24,33,36,24,33,37,24,33,38,24,34,0,24,34,1,24,34,2,24,34,3,24,34,4,24,34,5,24,34,6,24,34,7,24,34,8,24,34,9,24,34,10,24,34,11,24,34,12,24,34,13,24,34,14,24,34,15,24,34,16,24,34,17,24,34,18,24,34,19,24,34,20,24,34,28,24,34,29,24,34,30,24,34,36,24,34,37,24,34,38,24,35,0,24,35,1,24,35,2,24,35,3,24,35,4,24,35,5,24,35,6,24,35,7,24,35,8,24,35,9,24,35,10,24,35,11,24,35,12,24,35,13,24,35,14,24,35,15,24,35,16,24,35,17,24,35,18,24,35,19,24,35,20,24,35,28,24,35,29,24,35,30,24,35,31,24,35,37,24,35,38,25,4,0,25,4,6,25,4,7,25,4,8,25,4,9,25,4,10,25,4,11,25,4,12,25,4,13,25,4,14,25,4,15,25,4,16,25,4,17,25,4,18,25,4,19,25,4,20,25,4,21,25,4,29,25,4,30,25,4,31,25,4,32,25,4,33,25,4,34,25,4,35,25,4,36,25,4,37,25,4,38,25,5,0,25,5,1,25,5,7,25,5,8,25,5,9,25,5,10,25,5,11,25,5,12,25,5,13,25,5,14,25,5,15,25,5,16,25,5,17,25,5,18,25,5,19,25,5,20,25,5,21,25,5,29,25,5,30,25,5,31,25,5,32,25,5,33,25,5,34,25,5,35,25,5,36,25,5,37,25,5,38,25,6,0,25,6,1,25,6,2,25,6,8,25,6,9,25,6,10,25,6,11,25,6,12,25,6,13,25,6,14,25,6,15,25,6,16,25,6,17,25,6,18,25,6,19,25,6,20,25,6,21,25,6,29,25,6,30,25,6,31,25,6,32,25,6,33,25,6,34,25,6,35,25,6,36,25,6,37,25,6,38,25,7,0,25,7,1,25,7,2,25,7,3,25,7,9,25,7,10,25,7,11,25,7,12,25,7,13,25,7,14,25,7,15,25,7,16,25,7,17,25,7,18,25,7,19,25,7,20,25,7,21,25,7,29,25,7,30,25,7,31,25,7,32,25,7,33,25,7,34,25,7,35,25,7,36,25,7,37,25,7,38,25,8,0,25,8,1,25,8,2,25,8,3,25,8,4,25,8,10,25,8,11,25,8,12,25,8,13,25,8,14,25,8,15,25,8,16,25,8,17,25,8,18,25,8,19,25,8,20,25,8,21,25,8,29,25,8,30,25,8,31,25,8,32,25,8,33,25,8,34,25,8,35,25,8,36,25,8,37,25,8,38,25,9,0,25,9,1,25,9,2,25,9,3,25,9,4,25,9,5,25,9,11,25,9,12,25,9,13,25,9,14,25,9,15,25,9,16,25,9,17,25,9,18,25,9,19,25,9,20,25,9,21,25,9,29,25,9,30,25,9,31,25,9,32,25,9,33,25,9,34,25,9,35,25,9,36,25,9,37,25,9,38,25,10,0,25,10,1,25,10,2,25,10,3,25,10,4,25,10,5,25,10,6,25,10,12,25,10,13,25,10,14,25,10,15,25,10,16,25,10,17,25,10,18,25,10,19,25,10,20,25,10,21,25,10,29,25,10,30,25,10,31,25,10,32,25,10,33,25,10,34,25,10,35,25,10,36,25,10,37,25,10,38,25,11,0,25,11,1,25,11,2,25,11,3,25,11,4,25,11,5,25,11,6,25,11,7,25,11,13,25,11,14,25,11,15,25,11,16,25,11,17,25,11,18,25,11,19,25,11,20,25,11,21,25,11,29,25,11,30,25,11,31,25,11,32,25,11,33,25,11,34,25,11,35,25,11,36,25,11,37,25,11,38,25,12,0,25,12,1,25,12,2,25,12,3,25,12,4,25,12,5,25,12,6,25,12,7,25,12,8,25,12,14,25,12,15,25,12,16,25,12,17,25,12,18,25,12,19,25,12,20,25,12,21,25,12,29,25,12,30,25,12,31,25,12,32,25,12,33,25,12,34,25,12,35,25,12,36,25,12,37,25,12,38,25,13,0,25,13,1,25,13,2,25,13,3,25,13,4,25,13,5,25,13,6,25,13,7,25,13,8,25,13,9,25,13,15,25,13,16,25,13,17,25,13,18,25,13,19,25,13,20,25,13,21,25,13,29,25,13,30,25,13,31,25,13,32,25,13,33,25,13,34,25,13,35,25,13,36,25,13,37,25,13,38,25,14,0,25,14,1,25,14,2,25,14,3,25,14,4,25,14,5,25,14,6,25,14,7,25,14,8,25,14,9,25,14,10,25,14,16,25,14,17,25,14,18,25,14,19,25,14,20,25,14,21,25,14,29,25,14,30,25,14,31,25,14,32,25,14,33,25,14,34,25,14,35,25,14,36,25,14,37,25,14,38,25,15,0,25,15,1,25,15,2,25,15,3,25,15,4,25,15,5,25,15,6,25,15,7,25,15,8,25,15,9,25,15,10,25,15,11,25,15,17,25,15,18,25,15,19,25,15,20,25,15,21,25,15,29,25,15,30,25,15,31,25,15,32,25,15,33,25,15,34,25,15,35,25,15,36,25,15,37,25,15,38,25,16,0,25,16,1,25,16,2,25,16,3,25,16,4,25,16,5,25,16,6,25,16,7,25,16,8,25,16,9,25,16,10,25,16,11,25,16,12,25,16,18,25,16,19,25,16,20,25,16,21,25,16,29,25,16,30,25,16,31,25,16,32,25,16,33,25,16,34,25,16,35,25,16,36,25,16,37,25,16,38,25,17,0,25,17,1,25,17,2,25,17,3,25,17,4,25,17,5,25,17,6,25,17,7,25,17,8,25,17,9,25,17,10,25,17,11,25,17,12,25,17,13,25,17,19,25,17,20,25,17,21,25,17,29,25,17,30,25,17,31,25,17,32,25,17,33,25,17,34,25,17,35,25,17,36,25,17,37,25,17,38,25,18,0,25,18,1,25,18,2,25,18,3,25,18,4,25,18,5,25,18,6,25,18,7,25,18,8,25,18,9,25,18,10,25,18,11,25,18,12,25,18,13,25,18,14,25,18,20,25,18,21,25,18,29,25,18,30,25,18,31,25,18,32,25,18,33,25,18,34,25,18,35,25,18,36,25,18,37,25,18,38,25,19,0,25,19,1,25,19,2,25,19,3,25,19,4,25,19,5,25,19,6,25,19,7,25,19,8,25,19,9,25,19,10,25,19,11,25,19,12,25,19,13,25,19,14,25,19,15,25,19,21,25,19,29,25,19,30,25,19,31,25,19,32,25,19,33,25,19,34,25,19,35,25,19,36,25,19,37,25,19,38,25,20,0,25,20,1,25,20,2,25,20,3,25,20,4,25,20,5,25,20,6,25,20,7,25,20,8,25,20,9,25,20,10,25,20,11,25,20,12,25,20,13,25,20,14,25,20,15,25,20,16,25,20,29,25,20,30,25,20,31,25,20,32,25,20,33,25,20,34,25,20,35,25,20,36,25,20,37,25,20,38,25,21,0,25,21,1,25,21,2,25,21,3,25,21,4,25,21,5,25,21,6,25,21,7,25,21,8,25,21,9,25,21,10,25,21,11,25,21,12,25,21,13,25,21,14,25,21,15,25,21,16,25,21,17,25,21,29,25,21,30,25,21,31,25,21,32,25,21,33,25,21,34,25,21,35,25,21,36,25,21,37,25,21,38,25,22,0,25,22,1,25,22,2,25,22,3,25,22,4,25,22,5,25,22,6,25,22,7,25,22,8,25,22,9,25,22,10,25,22,11,25,22,12,25,22,13,25,22,14,25,22,15,25,22,16,25,22,17,25,22,18,25,22,29,25,22,30,25,22,31,25,22,32,25,22,33,25,22,34,25,22,35,25,22,36,25,22,37,25,22,38,25,23,0,25,23,1,25,23,2,25,23,3,25,23,4,25,23,5,25,23,6,25,23,7,25,23,8,25,23,9,25,23,10,25,23,11,25,23,12,25,23,13,25,23,14,25,23,15,25,23,16,25,23,17,25,23,18,25,23,19,25,23,29,25,23,30,25,23,31,25,23,32,25,23,33,25,23,34,25,23,35,25,23,36,25,23,37,25,23,38,25,29,0,25,29,1,25,29,2,25,29,3,25,29,4,25,29,5,25,29,6,25,29,7,25,29,8,25,29,9,25,29,10,25,29,11,25,29,12,25,29,13,25,29,14,25,29,15,25,29,16,25,29,17,25,29,18,25,29,19,25,29,20,25,29,21,25,29,31,25,29,32,25,29,33,25,29,34,25,29,35,25,29,36,25,29,37,25,29,38,25,30,0,25,30,1,25,30,2,25,30,3,25,30,4,25,30,5,25,30,6,25,30,7,25,30,8,25,30,9,25,30,10,25,30,11,25,30,12,25,30,13,25,30,14,25,30,15,25,30,16,25,30,17,25,30,18,25,30,19,25,30,20,25,30,21,25,30,32,25,30,33,25,30,34,25,30,35,25,30,36,25,30,37,25,30,38,25,31,0,25,31,1,25,31,2,25,31,3,25,31,4,25,31,5,25,31,6,25,31,7,25,31,8,25,31,9,25,31,10,25,31,11,25,31,12,25,31,13,25,31,14,25,31,15,25,31,16,25,31,17,25,31,18,25,31,19,25,31,20,25,31,21,25,31,33,25,31,34,25,31,35,25,31,36,25,31,37,25,31,38,25,32,0,25,32,1,25,32,2,25,32,3,25,32,4,25,32,5,25,32,6,25,32,7,25,32,8,25,32,9,25,32,10,25,32,11,25,32,12,25,32,13,25,32,14,25,32,15,25,32,16,25,32,17,25,32,18,25,32,19,25,32,20,25,32,21,25,32,34,25,32,35,25,32,36,25,32,37,25,32,38,25,33,0,25,33,1,25,33,2,25,33,3,25,33,4,25,33,5,25,33,6,25,33,7,25,33,8,25,33,9,25,33,10,25,33,11,25,33,12,25,33,13,25,33,14,25,33,15,25,33,16,25,33,17,25,33,18,25,33,19,25,33,20,25,33,21,25,33,29,25,33,35,25,33,36,25,33,37,25,33,38,25,34,0,25,34,1,25,34,2,25,34,3,25,34,4,25,34,5,25,34,6,25,34,7,25,34,8,25,34,9,25,34,10,25,34,11,25,34,12,25,34,13,25,34,14,25,34,15,25,34,16,25,34,17,25,34,18,25,34,19,25,34,20,25,34,21,25,34,29,25,34,30,25,34,36,25,34,37,25,34,38,25,35,0,25,35,1,25,35,2,25,35,3,25,35,4,25,35,5,25,35,6,25,35,7,25,35,8,25,35,9,25,35,10,25,35,11,25,35,12,25,35,13,25,35,14,25,35,15,25,35,16,25,35,17,25,35,18,25,35,19,25,35,20,25,35,21,25,35,29,25,35,30,25,35,31,25,35,37,25,35,38,26,4,0,26,4,6,26,4,7,26,4,8,26,4,9,26,4,10,26,4,11,26,4,12,26,4,13,26,4,14,26,4,15,26,4,16,26,4,17,26,4,18,26,4,19,26,4,20,26,4,21,26,4,22,26,4,30,26,4,31,26,4,32,26,4,33,26,4,34,26,4,35,26,4,36,26,4,37,26,4,38,26,5,0,26,5,1,26,5,7,26,5,8,26,5,9,26,5,10,26,5,11,26,5,12,26,5,13,26,5,14,26,5,15,26,5,16,26,5,17,26,5,18,26,5,19,26,5,20,26,5,21,26,5,22,26,5,30,26,5,31,26,5,32,26,5,33,26,5,34,26,5,35,26,5,36,26,5,37,26,5,38,26,6,0,26,6,1,26,6,2,26,6,8,26,6,9,26,6,10,26,6,11,26,6,12,26,6,13,26,6,14,26,6,15,26,6,16,26,6,17,26,6,18,26,6,19,26,6,20,26,6,21,26,6,22,26,6,30,26,6,31,26,6,32,26,6,33,26,6,34,26,6,35,26,6,36,26,6,37,26,6,38,26,7,0,26,7,1,26,7,2,26,7,3,26,7,9,26,7,10,26,7,11,26,7,12,26,7,13,26,7,14,26,7,15,26,7,16,26,7,17,26,7,18,26,7,19,26,7,20,26,7,21,26,7,22,26,7,30,26,7,31,26,7,32,26,7,33,26,7,34,26,7,35,26,7,36,26,7,37,26,7,38,26,8,0,26,8,1,26,8,2,26,8,3,26,8,4,26,8,10,26,8,11,26,8,12,26,8,13,26,8,14,26,8,15,26,8,16,26,8,17,26,8,18,26,8,19,26,8,20,26,8,21,26,8,22,26,8,30,26,8,31,26,8,32,26,8,33,26,8,34,26,8,35,26,8,36,26,8,37,26,8,38,26,9,0,26,9,1,26,9,2,26,9,3,26,9,4,26,9,5,26,9,11,26,9,12,26,9,13,26,9,14,26,9,15,26,9,16,26,9,17,26,9,18,26,9,19,26,9,20,26,9,21,26,9,22,26,9,30,26,9,31,26,9,32,26,9,33,26,9,34,26,9,35,26,9,36,26,9,37,26,9,38,26,10,0,26,10,1,26,10,2,26,10,3,26,10,4,26,10,5,26,10,6,26,10,12,26,10,13,26,10,14,26,10,15,26,10,16,26,10,17,26,10,18,26,10,19,26,10,20,26,10,21,26,10,22,26,10,30,26,10,31,26,10,32,26,10,33,26,10,34,26,10,35,26,10,36,26,10,37,26,10,38,26,11,0,26,11,1,26,11,2,26,11,3,26,11,4,26,11,5,26,11,6,26,11,7,26,11,13,26,11,14,26,11,15,26,11,16,26,11,17,26,11,18,26,11,19,26,11,20,26,11,21,26,11,22,26,11,30,26,11,31,26,11,32,26,11,33,26,11,34,26,11,35,26,11,36,26,11,37,26,11,38,26,12,0,26,12,1,26,12,2,26,12,3,26,12,4,26,12,5,26,12,6,26,12,7,26,12,8,26,12,14,26,12,15,26,12,16,26,12,17,26,12,18,26,12,19,26,12,20,26,12,21,26,12,22,26,12,30,26,12,31,26,12,32,26,12,33,26,12,34,26,12,35,26,12,36,26,12,37,26,12,38,26,13,0,26,13,1,26,13,2,26,13,3,26,13,4,26,13,5,26,13,6,26,13,7,26,13,8,26,13,9,26,13,15,26,13,16,26,13,17,26,13,18,26,13,19,26,13,20,26,13,21,26,13,22,26,13,30,26,13,31,26,13,32,26,13,33,26,13,34,26,13,35,26,13,36,26,13,37,26,13,38,26,14,0,26,14,1,26,14,2,26,14,3,26,14,4,26,14,5,26,14,6,26,14,7,26,14,8,26,14,9,26,14,10,26,14,16,26,14,17,26,14,18,26,14,19,26,14,20,26,14,21,26,14,22,26,14,30,26,14,31,26,14,32,26,14,33,26,14,34,26,14,35,26,14,36,26,14,37,26,14,38,26,15,0,26,15,1,26,15,2,26,15,3,26,15,4,26,15,5,26,15,6,26,15,7,26,15,8,26,15,9,26,15,10,26,15,11,26,15,17,26,15,18,26,15,19,26,15,20,26,15,21,26,15,22,26,15,30,26,15,31,26,15,32,26,15,33,26,15,34,26,15,35,26,15,36,26,15,37,26,15,38,26,16,0,26,16,1,26,16,2,26,16,3,26,16,4,26,16,5,26,16,6,26,16,7,26,16,8,26,16,9,26,16,10,26,16,11,26,16,12,26,16,18,26,16,19,26,16,20,26,16,21,26,16,22,26,16,30,26,16,31,26,16,32,26,16,33,26,16,34,26,16,35,26,16,36,26,16,37,26,16,38,26,17,0,26,17,1,26,17,2,26,17,3,26,17,4,26,17,5,26,17,6,26,17,7,26,17,8,26,17,9,26,17,10,26,17,11,26,17,12,26,17,13,26,17,19,26,17,20,26,17,21,26,17,22,26,17,30,26,17,31,26,17,32,26,17,33,26,17,34,26,17,35,26,17,36,26,17,37,26,17,38,26,18,0,26,18,1,26,18,2,26,18,3,26,18,4,26,18,5,26,18,6,26,18,7,26,18,8,26,18,9,26,18,10,26,18,11,26,18,12,26,18,13,26,18,14,26,18,20,26,18,21,26,18,22,26,18,30,26,18,31,26,18,32,26,18,33,26,18,34,26,18,35,26,18,36,26,18,37,26,18,38,26,19,0,26,19,1,26,19,2,26,19,3,26,19,4,26,19,5,26,19,6,26,19,7,26,19,8,26,19,9,26,19,10,26,19,11,26,19,12,26,19,13,26,19,14,26,19,15,26,19,21,26,19,22,26,19,30,26,19,31,26,19,32,26,19,33,26,19,34,26,19,35,26,19,36,26,19,37,26,19,38,26,20,0,26,20,1,26,20,2,26,20,3,26,20,4,26,20,5,26,20,6,26,20,7,26,20,8,26,20,9,26,20,10,26,20,11,26,20,12,26,20,13,26,20,14,26,20,15,26,20,16,26,20,22,26,20,30,26,20,31,26,20,32,26,20,33,26,20,34,26,20,35,26,20,36,26,20,37,26,20,38,26,21,0,26,21,1,26,21,2,26,21,3,26,21,4,26,21,5,26,21,6,26,21,7,26,21,8,26,21,9,26,21,10,26,21,11,26,21,12,26,21,13,26,21,14,26,21,15,26,21,16,26,21,17,26,21,30,26,21,31,26,21,32,26,21,33,26,21,34,26,21,35,26,21,36,26,21,37,26,21,38,26,22,0,26,22,1,26,22,2,26,22,3,26,22,4,26,22,5,26,22,6,26,22,7,26,22,8,26,22,9,26,22,10,26,22,11,26,22,12,26,22,13,26,22,14,26,22,15,26,22,16,26,22,17,26,22,18,26,22,30,26,22,31,26,22,32,26,22,33,26,22,34,26,22,35,26,22,36,26,22,37,26,22,38,26,23,0,26,23,1,26,23,2,26,23,3,26,23,4,26,23,5,26,23,6,26,23,7,26,23,8,26,23,9,26,23,10,26,23,11,26,23,12,26,23,13,26,23,14,26,23,15,26,23,16,26,23,17,26,23,18,26,23,19,26,23,30,26,23,31,26,23,32,26,23,33,26,23,34,26,23,35,26,23,36,26,23,37,26,23,38,26,24,0,26,24,1,26,24,2,26,24,3,26,24,4,26,24,5,26,24,6,26,24,7,26,24,8,26,24,9,26,24,10,26,24,11,26,24,12,26,24,13,26,24,14,26,24,15,26,24,16,26,24,17,26,24,18,26,24,19,26,24,20,26,24,30,26,24,31,26,24,32,26,24,33,26,24,34,26,24,35,26,24,36,26,24,37,26,24,38,26,30,0,26,30,1,26,30,2,26,30,3,26,30,4,26,30,5,26,30,6,26,30,7,26,30,8,26,30,9,26,30,10,26,30,11,26,30,12,26,30,13,26,30,14,26,30,15,26,30,16,26,30,17,26,30,18,26,30,19,26,30,20,26,30,21,26,30,22,26,30,32,26,30,33,26,30,34,26,30,35,26,30,36,26,30,37,26,30,38,26,31,0,26,31,1,26,31,2,26,31,3,26,31,4,26,31,5,26,31,6,26,31,7,26,31,8,26,31,9,26,31,10,26,31,11,26,31,12,26,31,13,26,31,14,26,31,15,26,31,16,26,31,17,26,31,18,26,31,19,26,31,20,26,31,21,26,31,22,26,31,33,26,31,34,26,31,35,26,31,36,26,31,37,26,31,38,26,32,0,26,32,1,26,32,2,26,32,3,26,32,4,26,32,5,26,32,6,26,32,7,26,32,8,26,32,9,26,32,10,26,32,11,26,32,12,26,32,13,26,32,14,26,32,15,26,32,16,26,32,17,26,32,18,26,32,19,26,32,20,26,32,21,26,32,22,26,32,34,26,32,35,26,32,36,26,32,37,26,32,38,26,33,0,26,33,1,26,33,2,26,33,3,26,33,4,26,33,5,26,33,6,26,33,7,26,33,8,26,33,9,26,33,10,26,33,11,26,33,12,26,33,13,26,33,14,26,33,15,26,33,16,26,33,17,26,33,18,26,33,19,26,33,20,26,33,21,26,33,22,26,33,35,26,33,36,26,33,37,26,33,38,26,34,0,26,34,1,26,34,2,26,34,3,26,34,4,26,34,5,26,34,6,26,34,7,26,34,8,26,34,9,26,34,10,26,34,11,26,34,12,26,34,13,26,34,14,26,34,15,26,34,16,26,34,17,26,34,18,26,34,19,26,34,20,26,34,21,26,34,22,26,34,30,26,34,36,26,34,37,26,34,38,26,35,0,26,35,1,26,35,2,26,35,3,26,35,4,26,35,5,26,35,6,26,35,7,26,35,8,26,35,9,26,35,10,26,35,11,26,35,12,26,35,13,26,35,14,26,35,15,26,35,16,26,35,17,26,35,18,26,35,19,26,35,20,26,35,21,26,35,22,26,35,30,26,35,31,26,35,37,26,35,38,27,4,0,27,4,6,27,4,7,27,4,8,27,4,9,27,4,10,27,4,11,27,4,12,27,4,13,27,4,14,27,4,15,27,4,16,27,4,17,27,4,18,27,4,19,27,4,20,27,4,21,27,4,22,27,4,23,27,4,31,27,4,32,27,4,33,27,4,34,27,4,35,27,4,36,27,4,37,27,4,38,27,5,0,27,5,1,27,5,7,27,5,8,27,5,9,27,5,10,27,5,11,27,5,12,27,5,13,27,5,14,27,5,15,27,5,16,27,5,17,27,5,18,27,5,19,27,5,20,27,5,21,27,5,22,27,5,23,27,5,31,27,5,32,27,5,33,27,5,34,27,5,35,27,5,36,27,5,37,27,5,38,27,6,0,27,6,1,27,6,2,27,6,8,27,6,9,27,6,10,27,6,11,27,6,12,27,6,13,27,6,14,27,6,15,27,6,16,27,6,17,27,6,18,27,6,19,27,6,20,27,6,21,27,6,22,27,6,23,27,6,31,27,6,32,27,6,33,27,6,34,27,6,35,27,6,36,27,6,37,27,6,38,27,7,0,27,7,1,27,7,2,27,7,3,27,7,9,27,7,10,27,7,11,27,7,12,27,7,13,27,7,14,27,7,15,27,7,16,27,7,17,27,7,18,27,7,19,27,7,20,27,7,21,27,7,22,27,7,23,27,7,31,27,7,32,27,7,33,27,7,34,27,7,35,27,7,36,27,7,37,27,7,38,27,8,0,27,8,1,27,8,2,27,8,3,27,8,4,27,8,10,27,8,11,27,8,12,27,8,13,27,8,14,27,8,15,27,8,16,27,8,17,27,8,18,27,8,19,27,8,20,27,8,21,27,8,22,27,8,23,27,8,31,27,8,32,27,8,33,27,8,34,27,8,35,27,8,36,27,8,37,27,8,38,27,9,0,27,9,1,27,9,2,27,9,3,27,9,4,27,9,5,27,9,11,27,9,12,27,9,13,27,9,14,27,9,15,27,9,16,27,9,17,27,9,18,27,9,19,27,9,20,27,9,21,27,9,22,27,9,23,27,9,31,27,9,32,27,9,33,27,9,34,27,9,35,27,9,36,27,9,37,27,9,38,27,10,0,27,10,1,27,10,2,27,10,3,27,10,4,27,10,5,27,10,6,27,10,12,27,10,13,27,10,14,27,10,15,27,10,16,27,10,17,27,10,18,27,10,19,27,10,20,27,10,21,27,10,22,27,10,23,27,10,31,27,10,32,27,10,33,27,10,34,27,10,35,27,10,36,27,10,37,27,10,38,27,11,0,27,11,1,27,11,2,27,11,3,27,11,4,27,11,5,27,11,6,27,11,7,27,11,13,27,11,14,27,11,15,27,11,16,27,11,17,27,11,18,27,11,19,27,11,20,27,11,21,27,11,22,27,11,23,27,11,31,27,11,32,27,11,33,27,11,34,27,11,35,27,11,36,27,11,37,27,11,38,27,12,0,27,12,1,27,12,2,27,12,3,27,12,4,27,12,5,27,12,6,27,12,7,27,12,8,27,12,14,27,12,15,27,12,16,27,12,17,27,12,18,27,12,19,27,12,20,27,12,21,27,12,22,27,12,23,27,12,31,27,12,32,27,12,33,27,12,34,27,12,35,27,12,36,27,12,37,27,12,38,27,13,0,27,13,1,27,13,2,27,13,3,27,13,4,27,13,5,27,13,6,27,13,7,27,13,8,27,13,9,27,13,15,27,13,16,27,13,17,27,13,18,27,13,19,27,13,20,27,13,21,27,13,22,27,13,23,27,13,31,27,13,32,27,13,33,27,13,34,27,13,35,27,13,36,27,13,37,27,13,38,27,14,0,27,14,1,27,14,2,27,14,3,27,14,4,27,14,5,27,14,6,27,14,7,27,14,8,27,14,9,27,14,10,27,14,16,27,14,17,27,14,18,27,14,19,27,14,20,27,14,21,27,14,22,27,14,23,27,14,31,27,14,32,27,14,33,27,14,34,27,14,35,27,14,36,27,14,37,27,14,38,27,15,0,27,15,1,27,15,2,27,15,3,27,15,4,27,15,5,27,15,6,27,15,7,27,15,8,27,15,9,27,15,10,27,15,11,27,15,17,27,15,18,27,15,19,27,15,20,27,15,21,27,15,22,27,15,23,27,15,31,27,15,32,27,15,33,27,15,34,27,15,35,27,15,36,27,15,37,27,15,38,27,16,0,27,16,1,27,16,2,27,16,3,27,16,4,27,16,5,27,16,6,27,16,7,27,16,8,27,16,9,27,16,10,27,16,11,27,16,12,27,16,18,27,16,19,27,16,20,27,16,21,27,16,22,27,16,23,27,16,31,27,16,32,27,16,33,27,16,34,27,16,35,27,16,36,27,16,37,27,16,38,27,17,0,27,17,1,27,17,2,27,17,3,27,17,4,27,17,5,27,17,6,27,17,7,27,17,8,27,17,9,27,17,10,27,17,11,27,17,12,27,17,13,27,17,19,27,17,20,27,17,21,27,17,22,27,17,23,27,17,31,27,17,32,27,17,33,27,17,34,27,17,35,27,17,36,27,17,37,27,17,38,27,18,0,27,18,1,27,18,2,27,18,3,27,18,4,27,18,5,27,18,6,27,18,7,27,18,8,27,18,9,27,18,10,27,18,11,27,18,12,27,18,13,27,18,14,27,18,20,27,18,21,27,18,22,27,18,23,27,18,31,27,18,32,27,18,33,27,18,34,27,18,35,27,18,36,27,18,37,27,18,38,27,19,0,27,19,1,27,19,2,27,19,3,27,19,4,27,19,5,27,19,6,27,19,7,27,19,8,27,19,9,27,19,10,27,19,11,27,19,12,27,19,13,27,19,14,27,19,15,27,19,21,27,19,22,27,19,23,27,19,31,27,19,32,27,19,33,27,19,34,27,19,35,27,19,36,27,19,37,27,19,38,27,20,0,27,20,1,27,20,2,27,20,3,27,20,4,27,20,5,27,20,6,27,20,7,27,20,8,27,20,9,27,20,10,27,20,11,27,20,12,27,20,13,27,20,14,27,20,15,27,20,16,27,20,22,27,20,23,27,20,31,27,20,32,27,20,33,27,20,34,27,20,35,27,20,36,27,20,37,27,20,38,27,21,0,27,21,1,27,21,2,27,21,3,27,21,4,27,21,5,27,21,6,27,21,7,27,21,8,27,21,9,27,21,10,27,21,11,27,21,12,27,21,13,27,21,14,27,21,15,27,21,16,27,21,17,27,21,23,27,21,31,27,21,32,27,21,33,27,21,34,27,21,35,27,21,36,27,21,37,27,21,38,27,22,0,27,22,1,27,22,2,27,22,3,27,22,4,27,22,5,27,22,6,27,22,7,27,22,8,27,22,9,27,22,10,27,22,11,27,22,12,27,22,13,27,22,14,27,22,15,27,22,16,27,22,17,27,22,18,27,22,31,27,22,32,27,22,33,27,22,34,27,22,35,27,22,36,27,22,37,27,22,38,27,23,0,27,23,1,27,23,2,27,23,3,27,23,4,27,23,5,27,23,6,27,23,7,27,23,8,27,23,9,27,23,10,27,23,11,27,23,12,27,23,13,27,23,14,27,23,15,27,23,16,27,23,17,27,23,18,27,23,19,27,23,31,27,23,32,27,23,33,27,23,34,27,23,35,27,23,36,27,23,37,27,23,38,27,24,0,27,24,1,27,24,2,27,24,3,27,24,4,27,24,5,27,24,6,27,24,7,27,24,8,27,24,9,27,24,10,27,24,11,27,24,12,27,24,13,27,24,14,27,24,15,27,24,16,27,24,17,27,24,18,27,24,19,27,24,20,27,24,31,27,24,32,27,24,33,27,24,34,27,24,35,27,24,36,27,24,37,27,24,38,27,25,0,27,25,1,27,25,2,27,25,3,27,25,4,27,25,5,27,25,6,27,25,7,27,25,8,27,25,9,27,25,10,27,25,11,27,25,12,27,25,13,27,25,14,27,25,15,27,25,16,27,25,17,27,25,18,27,25,19,27,25,20,27,25,21,27,25,31,27,25,32,27,25,33,27,25,34,27,25,35,27,25,36,27,25,37,27,25,38,27,31,0,27,31,1,27,31,2,27,31,3,27,31,4,27,31,5,27,31,6,27,31,7,27,31,8,27,31,9,27,31,10,27,31,11,27,31,12,27,31,13,27,31,14,27,31,15,27,31,16,27,31,17,27,31,18,27,31,19,27,31,20,27,31,21,27,31,22,27,31,23,27,31,33,27,31,34,27,31,35,27,31,36,27,31,37,27,31,38,27,32,0,27,32,1,27,32,2,27,32,3,27,32,4,27,32,5,27,32,6,27,32,7,27,32,8,27,32,9,27,32,10,27,32,11,27,32,12,27,32,13,27,32,14,27,32,15,27,32,16,27,32,17,27,32,18,27,32,19,27,32,20,27,32,21,27,32,22,27,32,23,27,32,34,27,32,35,27,32,36,27,32,37,27,32,38,27,33,0,27,33,1,27,33,2,27,33,3,27,33,4,27,33,5,27,33,6,27,33,7,27,33,8,27,33,9,27,33,10,27,33,11,27,33,12,27,33,13,27,33,14,27,33,15,27,33,16,27,33,17,27,33,18,27,33,19,27,33,20,27,33,21,27,33,22,27,33,23,27,33,35,27,33,36,27,33,37,27,33,38,27,34,0,27,34,1,27,34,2,27,34,3,27,34,4,27,34,5,27,34,6,27,34,7,27,34,8,27,34,9,27,34,10,27,34,11,27,34,12,27,34,13,27,34,14,27,34,15,27,34,16,27,34,17,27,34,18,27,34,19,27,34,20,27,34,21,27,34,22,27,34,23,27,34,36,27,34,37,27,34,38,27,35,0,27,35,1,27,35,2,27,35,3,27,35,4,27,35,5,27,35,6,27,35,7,27,35,8,27,35,9,27,35,10,27,35,11,27,35,12,27,35,13,27,35,14,27,35,15,27,35,16,27,35,17,27,35,18,27,35,19,27,35,20,27,35,21,27,35,22,27,35,23,27,35,31,27,35,37,27,35,38,28,4,0,28,4,6,28,4,7,28,4,8,28,4,9,28,4,10,28,4,11,28,4,12,28,4,13,28,4,14,28,4,15,28,4,16,28,4,17,28,4,18,28,4,19,28,4,20,28,4,21,28,4,22,28,4,23,28,4,24,28,4,32,28,4,33,28,4,34,28,4,35,28,4,36,28,4,37,28,4,38,28,5,0,28,5,1,28,5,7,28,5,8,28,5,9,28,5,10,28,5,11,28,5,12,28,5,13,28,5,14,28,5,15,28,5,16,28,5,17,28,5,18,28,5,19,28,5,20,28,5,21,28,5,22,28,5,23,28,5,24,28,5,32,28,5,33,28,5,34,28,5,35,28,5,36,28,5,37,28,5,38,28,6,0,28,6,1,28,6,2,28,6,8,28,6,9,28,6,10,28,6,11,28,6,12,28,6,13,28,6,14,28,6,15,28,6,16,28,6,17,28,6,18,28,6,19,28,6,20,28,6,21,28,6,22,28,6,23,28,6,24,28,6,32,28,6,33,28,6,34,28,6,35,28,6,36,28,6,37,28,6,38,28,7,0,28,7,1,28,7,2,28,7,3,28,7,9,28,7,10,28,7,11,28,7,12,28,7,13,28,7,14,28,7,15,28,7,16,28,7,17,28,7,18,28,7,19,28,7,20,28,7,21,28,7,22,28,7,23,28,7,24,28,7,32,28,7,33,28,7,34,28,7,35,28,7,36,28,7,37,28,7,38,28,8,0,28,8,1,28,8,2,28,8,3,28,8,4,28,8,10,28,8,11,28,8,12,28,8,13,28,8,14,28,8,15,28,8,16,28,8,17,28,8,18,28,8,19,28,8,20,28,8,21,28,8,22,28,8,23,28,8,24,28,8,32,28,8,33,28,8,34,28,8,35,28,8,36,28,8,37,28,8,38,28,9,0,28,9,1,28,9,2,28,9,3,28,9,4,28,9,5,28,9,11,28,9,12,28,9,13,28,9,14,28,9,15,28,9,16,28,9,17,28,9,18,28,9,19,28,9,20,28,9,21,28,9,22,28,9,23,28,9,24,28,9,32,28,9,33,28,9,34,28,9,35,28,9,36,28,9,37,28,9,38,28,10,0,28,10,1,28,10,2,28,10,3,28,10,4,28,10,5,28,10,6,28,10,12,28,10,13,28,10,14,28,10,15,28,10,16,28,10,17,28,10,18,28,10,19,28,10,20,28,10,21,28,10,22,28,10,23,28,10,24,28,10,32,28,10,33,28,10,34,28,10,35,28,10,36,28,10,37,28,10,38,28,11,0,28,11,1,28,11,2,28,11,3,28,11,4,28,11,5,28,11,6,28,11,7,28,11,13,28,11,14,28,11,15,28,11,16,28,11,17,28,11,18,28,11,19,28,11,20,28,11,21,28,11,22,28,11,23,28,11,24,28,11,32,28,11,33,28,11,34,28,11,35,28,11,36,28,11,37,28,11,38,28,12,0,28,12,1,28,12,2,28,12,3,28,12,4,28,12,5,28,12,6,28,12,7,28,12,8,28,12,14,28,12,15,28,12,16,28,12,17,28,12,18,28,12,19,28,12,20,28,12,21,28,12,22,28,12,23,28,12,24,28,12,32,28,12,33,28,12,34,28,12,35,28,12,36,28,12,37,28,12,38,28,13,0,28,13,1,28,13,2,28,13,3,28,13,4,28,13,5,28,13,6,28,13,7,28,13,8,28,13,9,28,13,15,28,13,16,28,13,17,28,13,18,28,13,19,28,13,20,28,13,21,28,13,22,28,13,23,28,13,24,28,13,32,28,13,33,28,13,34,28,13,35,28,13,36,28,13,37,28,13,38,28,14,0,28,14,1,28,14,2,28,14,3,28,14,4,28,14,5,28,14,6,28,14,7,28,14,8,28,14,9,28,14,10,28,14,16,28,14,17,28,14,18,28,14,19,28,14,20,28,14,21,28,14,22,28,14,23,28,14,24,28,14,32,28,14,33,28,14,34,28,14,35,28,14,36,28,14,37,28,14,38,28,15,0,28,15,1,28,15,2,28,15,3,28,15,4,28,15,5,28,15,6,28,15,7,28,15,8,28,15,9,28,15,10,28,15,11,28,15,17,28,15,18,28,15,19,28,15,20,28,15,21,28,15,22,28,15,23,28,15,24,28,15,32,28,15,33,28,15,34,28,15,35,28,15,36,28,15,37,28,15,38,28,16,0,28,16,1,28,16,2,28,16,3,28,16,4,28,16,5,28,16,6,28,16,7,28,16,8,28,16,9,28,16,10,28,16,11,28,16,12,28,16,18,28,16,19,28,16,20,28,16,21,28,16,22,28,16,23,28,16,24,28,16,32,28,16,33,28,16,34,28,16,35,28,16,36,28,16,37,28,16,38,28,17,0,28,17,1,28,17,2,28,17,3,28,17,4,28,17,5,28,17,6,28,17,7,28,17,8,28,17,9,28,17,10,28,17,11,28,17,12,28,17,13,28,17,19,28,17,20,28,17,21,28,17,22,28,17,23,28,17,24,28,17,32,28,17,33,28,17,34,28,17,35,28,17,36,28,17,37,28,17,38,28,18,0,28,18,1,28,18,2,28,18,3,28,18,4,28,18,5,28,18,6,28,18,7,28,18,8,28,18,9,28,18,10,28,18,11,28,18,12,28,18,13,28,18,14,28,18,20,28,18,21,28,18,22,28,18,23,28,18,24,28,18,32,28,18,33,28,18,34,28,18,35,28,18,36,28,18,37,28,18,38,28,19,0,28,19,1,28,19,2,28,19,3,28,19,4,28,19,5,28,19,6,28,19,7,28,19,8,28,19,9,28,19,10,28,19,11,28,19,12,28,19,13,28,19,14,28,19,15,28,19,21,28,19,22,28,19,23,28,19,24,28,19,32,28,19,33,28,19,34,28,19,35,28,19,36,28,19,37,28,19,38,28,20,0,28,20,1,28,20,2,28,20,3,28,20,4,28,20,5,28,20,6,28,20,7,28,20,8,28,20,9,28,20,10,28,20,11,28,20,12,28,20,13,28,20,14,28,20,15,28,20,16,28,20,22,28,20,23,28,20,24,28,20,32,28,20,33,28,20,34,28,20,35,28,20,36,28,20,37,28,20,38,28,21,0,28,21,1,28,21,2,28,21,3,28,21,4,28,21,5,28,21,6,28,21,7,28,21,8,28,21,9,28,21,10,28,21,11,28,21,12,28,21,13,28,21,14,28,21,15,28,21,16,28,21,17,28,21,23,28,21,24,28,21,32,28,21,33,28,21,34,28,21,35,28,21,36,28,21,37,28,21,38,28,22,0,28,22,1,28,22,2,28,22,3,28,22,4,28,22,5,28,22,6,28,22,7,28,22,8,28,22,9,28,22,10,28,22,11,28,22,12,28,22,13,28,22,14,28,22,15,28,22,16,28,22,17,28,22,18,28,22,24,28,22,32,28,22,33,28,22,34,28,22,35,28,22,36,28,22,37,28,22,38,28,23,0,28,23,1,28,23,2,28,23,3,28,23,4,28,23,5,28,23,6,28,23,7,28,23,8,28,23,9,28,23,10,28,23,11,28,23,12,28,23,13,28,23,14,28,23,15,28,23,16,28,23,17,28,23,18,28,23,19,28,23,32,28,23,33,28,23,34,28,23,35,28,23,36,28,23,37,28,23,38,28,24,0,28,24,1,28,24,2,28,24,3,28,24,4,28,24,5,28,24,6,28,24,7,28,24,8,28,24,9,28,24,10,28,24,11,28,24,12,28,24,13,28,24,14,28,24,15,28,24,16,28,24,17,28,24,18,28,24,19,28,24,20,28,24,32,28,24,33,28,24,34,28,24,35,28,24,36,28,24,37,28,24,38,28,25,0,28,25,1,28,25,2,28,25,3,28,25,4,28,25,5,28,25,6,28,25,7,28,25,8,28,25,9,28,25,10,28,25,11,28,25,12,28,25,13,28,25,14,28,25,15,28,25,16,28,25,17,28,25,18,28,25,19,28,25,20,28,25,21,28,25,32,28,25,33,28,25,34,28,25,35,28,25,36,28,25,37,28,25,38,28,26,0,28,26,1,28,26,2,28,26,3,28,26,4,28,26,5,28,26,6,28,26,7,28,26,8,28,26,9,28,26,10,28,26,11,28,26,12,28,26,13,28,26,14,28,26,15,28,26,16,28,26,17,28,26,18,28,26,19,28,26,20,28,26,21,28,26,22,28,26,32,28,26,33,28,26,34,28,26,35,28,26,36,28,26,37,28,26,38,28,32,0,28,32,1,28,32,2,28,32,3,28,32,4,28,32,5,28,32,6,28,32,7,28,32,8,28,32,9,28,32,10,28,32,11,28,32,12,28,32,13,28,32,14,28,32,15,28,32,16,28,32,17,28,32,18,28,32,19,28,32,20,28,32,21,28,32,22,28,32,23,28,32,24,28,32,34,28,32,35,28,32,36,28,32,37,28,32,38,28,33,0,28,33,1,28,33,2,28,33,3,28,33,4,28,33,5,28,33,6,28,33,7,28,33,8,28,33,9,28,33,10,28,33,11,28,33,12,28,33,13,28,33,14,28,33,15,28,33,16,28,33,17,28,33,18,28,33,19,28,33,20,28,33,21,28,33,22,28,33,23,28,33,24,28,33,35,28,33,36,28,33,37,28,33,38,28,34,0,28,34,1,28,34,2,28,34,3,28,34,4,28,34,5,28,34,6,28,34,7,28,34,8,28,34,9,28,34,10,28,34,11,28,34,12,28,34,13,28,34,14,28,34,15,28,34,16,28,34,17,28,34,18,28,34,19,28,34,20,28,34,21,28,34,22,28,34,23,28,34,24,28,34,36,28,34,37,28,34,38,28,35,0,28,35,1,28,35,2,28,35,3,28,35,4,28,35,5,28,35,6,28,35,7,28,35,8,28,35,9,28,35,10,28,35,11,28,35,12,28,35,13,28,35,14,28,35,15,28,35,16,28,35,17,28,35,18,28,35,19,28,35,20,28,35,21,28,35,22,28,35,23,28,35,24,28,35,37,28,35,38,29,4,0,29,4,6,29,4,7,29,4,8,29,4,9,29,4,10,29,4,11,29,4,12,29,4,13,29,4,14,29,4,15,29,4,16,29,4,17,29,4,18,29,4,19,29,4,20,29,4,21,29,4,22,29,4,23,29,4,24,29,4,25,29,4,33,29,4,34,29,4,35,29,4,36,29,4,37,29,4,38,29,5,0,29,5,1,29,5,7,29,5,8,29,5,9,29,5,10,29,5,11,29,5,12,29,5,13,29,5,14,29,5,15,29,5,16,29,5,17,29,5,18,29,5,19,29,5,20,29,5,21,29,5,22,29,5,23,29,5,24,29,5,25,29,5,33,29,5,34,29,5,35,29,5,36,29,5,37,29,5,38,29,6,0,29,6,1,29,6,2,29,6,8,29,6,9,29,6,10,29,6,11,29,6,12,29,6,13,29,6,14,29,6,15,29,6,16,29,6,17,29,6,18,29,6,19,29,6,20,29,6,21,29,6,22,29,6,23,29,6,24,29,6,25,29,6,33,29,6,34,29,6,35,29,6,36,29,6,37,29,6,38,29,7,0,29,7,1,29,7,2,29,7,3,29,7,9,29,7,10,29,7,11,29,7,12,29,7,13,29,7,14,29,7,15,29,7,16,29,7,17,29,7,18,29,7,19,29,7,20,29,7,21,29,7,22,29,7,23,29,7,24,29,7,25,29,7,33,29,7,34,29,7,35,29,7,36,29,7,37,29,7,38,29,8,0,29,8,1,29,8,2,29,8,3,29,8,4,29,8,10,29,8,11,29,8,12,29,8,13,29,8,14,29,8,15,29,8,16,29,8,17,29,8,18,29,8,19,29,8,20,29,8,21,29,8,22,29,8,23,29,8,24,29,8,25,29,8,33,29,8,34,29,8,35,29,8,36,29,8,37,29,8,38,29,9,0,29,9,1,29,9,2,29,9,3,29,9,4,29,9,5,29,9,11,29,9,12,29,9,13,29,9,14,29,9,15,29,9,16,29,9,17,29,9,18,29,9,19,29,9,20,29,9,21,29,9,22,29,9,23,29,9,24,29,9,25,29,9,33,29,9,34,29,9,35,29,9,36,29,9,37,29,9,38,29,10,0,29,10,1,29,10,2,29,10,3,29,10,4,29,10,5,29,10,6,29,10,12,29,10,13,29,10,14,29,10,15,29,10,16,29,10,17,29,10,18,29,10,19,29,10,20,29,10,21,29,10,22,29,10,23,29,10,24,29,10,25,29,10,33,29,10,34,29,10,35,29,10,36,29,10,37,29,10,38,29,11,0,29,11,1,29,11,2,29,11,3,29,11,4,29,11,5,29,11,6,29,11,7,29,11,13,29,11,14,29,11,15,29,11,16,29,11,17,29,11,18,29,11,19,29,11,20,29,11,21,29,11,22,29,11,23,29,11,24,29,11,25,29,11,33,29,11,34,29,11,35,29,11,36,29,11,37,29,11,38,29,12,0,29,12,1,29,12,2,29,12,3,29,12,4,29,12,5,29,12,6,29,12,7,29,12,8,29,12,14,29,12,15,29,12,16,29,12,17,29,12,18,29,12,19,29,12,20,29,12,21,29,12,22,29,12,23,29,12,24,29,12,25,29,12,33,29,12,34,29,12,35,29,12,36,29,12,37,29,12,38,29,13,0,29,13,1,29,13,2,29,13,3,29,13,4,29,13,5,29,13,6,29,13,7,29,13,8,29,13,9,29,13,15,29,13,16,29,13,17,29,13,18,29,13,19,29,13,20,29,13,21,29,13,22,29,13,23,29,13,24,29,13,25,29,13,33,29,13,34,29,13,35,29,13,36,29,13,37,29,13,38,29,14,0,29,14,1,29,14,2,29,14,3,29,14,4,29,14,5,29,14,6,29,14,7,29,14,8,29,14,9,29,14,10,29,14,16,29,14,17,29,14,18,29,14,19,29,14,20,29,14,21,29,14,22,29,14,23,29,14,24,29,14,25,29,14,33,29,14,34,29,14,35,29,14,36,29,14,37,29,14,38,29,15,0,29,15,1,29,15,2,29,15,3,29,15,4,29,15,5,29,15,6,29,15,7,29,15,8,29,15,9,29,15,10,29,15,11,29,15,17,29,15,18,29,15,19,29,15,20,29,15,21,29,15,22,29,15,23,29,15,24,29,15,25,29,15,33,29,15,34,29,15,35,29,15,36,29,15,37,29,15,38,29,16,0,29,16,1,29,16,2,29,16,3,29,16,4,29,16,5,29,16,6,29,16,7,29,16,8,29,16,9,29,16,10,29,16,11,29,16,12,29,16,18,29,16,19,29,16,20,29,16,21,29,16,22,29,16,23,29,16,24,29,16,25,29,16,33,29,16,34,29,16,35,29,16,36,29,16,37,29,16,38,29,17,0,29,17,1,29,17,2,29,17,3,29,17,4,29,17,5,29,17,6,29,17,7,29,17,8,29,17,9,29,17,10,29,17,11,29,17,12,29,17,13,29,17,19,29,17,20,29,17,21,29,17,22,29,17,23,29,17,24,29,17,25,29,17,33,29,17,34,29,17,35,29,17,36,29,17,37,29,17,38,29,18,0,29,18,1,29,18,2,29,18,3,29,18,4,29,18,5,29,18,6,29,18,7,29,18,8,29,18,9,29,18,10,29,18,11,29,18,12,29,18,13,29,18,14,29,18,20,29,18,21,29,18,22,29,18,23,29,18,24,29,18,25,29,18,33,29,18,34,29,18,35,29,18,36,29,18,37,29,18,38,29,19,0,29,19,1,29,19,2,29,19,3,29,19,4,29,19,5,29,19,6,29,19,7,29,19,8,29,19,9,29,19,10,29,19,11,29,19,12,29,19,13,29,19,14,29,19,15,29,19,21,29,19,22,29,19,23,29,19,24,29,19,25,29,19,33,29,19,34,29,19,35,29,19,36,29,19,37,29,19,38,29,20,0,29,20,1,29,20,2,29,20,3,29,20,4,29,20,5,29,20,6,29,20,7,29,20,8,29,20,9,29,20,10,29,20,11,29,20,12,29,20,13,29,20,14,29,20,15,29,20,16,29,20,22,29,20,23,29,20,24,29,20,25,29,20,33,29,20,34,29,20,35,29,20,36,29,20,37,29,20,38,29,21,0,29,21,1,29,21,2,29,21,3,29,21,4,29,21,5,29,21,6,29,21,7,29,21,8,29,21,9,29,21,10,29,21,11,29,21,12,29,21,13,29,21,14,29,21,15,29,21,16,29,21,17,29,21,23,29,21,24,29,21,25,29,21,33,29,21,34,29,21,35,29,21,36,29,21,37,29,21,38,29,22,0,29,22,1,29,22,2,29,22,3,29,22,4,29,22,5,29,22,6,29,22,7,29,22,8,29,22,9,29,22,10,29,22,11,29,22,12,29,22,13,29,22,14,29,22,15,29,22,16,29,22,17,29,22,18,29,22,24,29,22,25,29,22,33,29,22,34,29,22,35,29,22,36,29,22,37,29,22,38,29,23,0,29,23,1,29,23,2,29,23,3,29,23,4,29,23,5,29,23,6,29,23,7,29,23,8,29,23,9,29,23,10,29,23,11,29,23,12,29,23,13,29,23,14,29,23,15,29,23,16,29,23,17,29,23,18,29,23,19,29,23,25,29,23,33,29,23,34,29,23,35,29,23,36,29,23,37,29,23,38,29,24,0,29,24,1,29,24,2,29,24,3,29,24,4,29,24,5,29,24,6,29,24,7,29,24,8,29,24,9,29,24,10,29,24,11,29,24,12,29,24,13,29,24,14,29,24,15,29,24,16,29,24,17,29,24,18,29,24,19,29,24,20,29,24,33,29,24,34,29,24,35,29,24,36,29,24,37,29,24,38,29,25,0,29,25,1,29,25,2,29,25,3,29,25,4,29,25,5,29,25,6,29,25,7,29,25,8,29,25,9,29,25,10,29,25,11,29,25,12,29,25,13,29,25,14,29,25,15,29,25,16,29,25,17,29,25,18,29,25,19,29,25,20,29,25,21,29,25,33,29,25,34,29,25,35,29,25,36,29,25,37,29,25,38,29,26,0,29,26,1,29,26,2,29,26,3,29,26,4,29,26,5,29,26,6,29,26,7,29,26,8,29,26,9,29,26,10,29,26,11,29,26,12,29,26,13,29,26,14,29,26,15,29,26,16,29,26,17,29,26,18,29,26,19,29,26,20,29,26,21,29,26,22,29,26,33,29,26,34,29,26,35,29,26,36,29,26,37,29,26,38,29,27,0,29,27,1,29,27,2,29,27,3,29,27,4,29,27,5,29,27,6,29,27,7,29,27,8,29,27,9,29,27,10,29,27,11,29,27,12,29,27,13,29,27,14,29,27,15,29,27,16,29,27,17,29,27,18,29,27,19,29,27,20,29,27,21,29,27,22,29,27,23,29,27,33,29,27,34,29,27,35,29,27,36,29,27,37,29,27,38,29,33,0,29,33,1,29,33,2,29,33,3,29,33,4,29,33,5,29,33,6,29,33,7,29,33,8,29,33,9,29,33,10,29,33,11,29,33,12,29,33,13,29,33,14,29,33,15,29,33,16,29,33,17,29,33,18,29,33,19,29,33,20,29,33,21,29,33,22,29,33,23,29,33,24,29,33,25,29,33,35,29,33,36,29,33,37,29,33,38,29,34,0,29,34,1,29,34,2,29,34,3,29,34,4,29,34,5,29,34,6,29,34,7,29,34,8,29,34,9,29,34,10,29,34,11,29,34,12,29,34,13,29,34,14,29,34,15,29,34,16,29,34,17,29,34,18,29,34,19,29,34,20,29,34,21,29,34,22,29,34,23,29,34,24,29,34,25,29,34,36,29,34,37,29,34,38,29,35,0,29,35,1,29,35,2,29,35,3,29,35,4,29,35,5,29,35,6,29,35,7,29,35,8,29,35,9,29,35,10,29,35,11,29,35,12,29,35,13,29,35,14,29,35,15,29,35,16,29,35,17,29,35,18,29,35,19,29,35,20,29,35,21,29,35,22,29,35,23,29,35,24,29,35,25,29,35,37,29,35,38,30,4,0,30,4,6,30,4,7,30,4,8,30,4,9,30,4,10,30,4,11,30,4,12,30,4,13,30,4,14,30,4,15,30,4,16,30,4,17,30,4,18,30,4,19,30,4,20,30,4,21,30,4,22,30,4,23,30,4,24,30,4,25,30,4,26,30,4,34,30,4,35,30,4,36,30,4,37,30,4,38,30,5,0,30,5,1,30,5,7,30,5,8,30,5,9,30,5,10,30,5,11,30,5,12,30,5,13,30,5,14,30,5,15,30,5,16,30,5,17,30,5,18,30,5,19,30,5,20,30,5,21,30,5,22,30,5,23,30,5,24,30,5,25,30,5,26,30,5,34,30,5,35,30,5,36,30,5,37,30,5,38,30,6,0,30,6,1,30,6,2,30,6,8,30,6,9,30,6,10,30,6,11,30,6,12,30,6,13,30,6,14,30,6,15,30,6,16,30,6,17,30,6,18,30,6,19,30,6,20,30,6,21,30,6,22,30,6,23,30,6,24,30,6,25,30,6,26,30,6,34,30,6,35,30,6,36,30,6,37,30,6,38,30,7,0,30,7,1,30,7,2,30,7,3,30,7,9,30,7,10,30,7,11,30,7,12,30,7,13,30,7,14,30,7,15,30,7,16,30,7,17,30,7,18,30,7,19,30,7,20,30,7,21,30,7,22,30,7,23,30,7,24,30,7,25,30,7,26,30,7,34,30,7,35,30,7,36,30,7,37,30,7,38,30,8,0,30,8,1,30,8,2,30,8,3,30,8,4,30,8,10,30,8,11,30,8,12,30,8,13,30,8,14,30,8,15,30,8,16,30,8,17,30,8,18,30,8,19,30,8,20,30,8,21,30,8,22,30,8,23,30,8,24,30,8,25,30,8,26,30,8,34,30,8,35,30,8,36,30,8,37,30,8,38,30,9,0,30,9,1,30,9,2,30,9,3,30,9,4,30,9,5,30,9,11,30,9,12,30,9,13,30,9,14,30,9,15,30,9,16,30,9,17,30,9,18,30,9,19,30,9,20,30,9,21,30,9,22,30,9,23,30,9,24,30,9,25,30,9,26,30,9,34,30,9,35,30,9,36,30,9,37,30,9,38,30,10,0,30,10,1,30,10,2,30,10,3,30,10,4,30,10,5,30,10,6,30,10,12,30,10,13,30,10,14,30,10,15,30,10,16,30,10,17,30,10,18,30,10,19,30,10,20,30,10,21,30,10,22,30,10,23,30,10,24,30,10,25,30,10,26,30,10,34,30,10,35,30,10,36,30,10,37,30,10,38,30,11,0,30,11,1,30,11,2,30,11,3,30,11,4,30,11,5,30,11,6,30,11,7,30,11,13,30,11,14,30,11,15,30,11,16,30,11,17,30,11,18,30,11,19,30,11,20,30,11,21,30,11,22,30,11,23,30,11,24,30,11,25,30,11,26,30,11,34,30,11,35,30,11,36,30,11,37,30,11,38,30,12,0,30,12,1,30,12,2,30,12,3,30,12,4,30,12,5,30,12,6,30,12,7,30,12,8,30,12,14,30,12,15,30,12,16,30,12,17,30,12,18,30,12,19,30,12,20,30,12,21,30,12,22,30,12,23,30,12,24,30,12,25,30,12,26,30,12,34,30,12,35,30,12,36,30,12,37,30,12,38,30,13,0,30,13,1,30,13,2,30,13,3,30,13,4,30,13,5,30,13,6,30,13,7,30,13,8,30,13,9,30,13,15,30,13,16,30,13,17,30,13,18,30,13,19,30,13,20,30,13,21,30,13,22,30,13,23,30,13,24,30,13,25,30,13,26,30,13,34,30,13,35,30,13,36,30,13,37,30,13,38,30,14,0,30,14,1,30,14,2,30,14,3,30,14,4,30,14,5,30,14,6,30,14,7,30,14,8,30,14,9,30,14,10,30,14,16,30,14,17,30,14,18,30,14,19,30,14,20,30,14,21,30,14,22,30,14,23,30,14,24,30,14,25,30,14,26,30,14,34,30,14,35,30,14,36,30,14,37,30,14,38,30,15,0,30,15,1,30,15,2,30,15,3,30,15,4,30,15,5,30,15,6,30,15,7,30,15,8,30,15,9,30,15,10,30,15,11,30,15,17,30,15,18,30,15,19,30,15,20,30,15,21,30,15,22,30,15,23,30,15,24,30,15,25,30,15,26,30,15,34,30,15,35,30,15,36,30,15,37,30,15,38,30,16,0,30,16,1,30,16,2,30,16,3,30,16,4,30,16,5,30,16,6,30,16,7,30,16,8,30,16,9,30,16,10,30,16,11,30,16,12,30,16,18,30,16,19,30,16,20,30,16,21,30,16,22,30,16,23,30,16,24,30,16,25,30,16,26,30,16,34,30,16,35,30,16,36,30,16,37,30,16,38,30,17,0,30,17,1,30,17,2,30,17,3,30,17,4,30,17,5,30,17,6,30,17,7,30,17,8,30,17,9,30,17,10,30,17,11,30,17,12,30,17,13,30,17,19,30,17,20,30,17,21,30,17,22,30,17,23,30,17,24,30,17,25,30,17,26,30,17,34,30,17,35,30,17,36,30,17,37,30,17,38,30,18,0,30,18,1,30,18,2,30,18,3,30,18,4,30,18,5,30,18,6,30,18,7,30,18,8,30,18,9,30,18,10,30,18,11,30,18,12,30,18,13,30,18,14,30,18,20,30,18,21,30,18,22,30,18,23,30,18,24,30,18,25,30,18,26,30,18,34,30,18,35,30,18,36,30,18,37,30,18,38,30,19,0,30,19,1,30,19,2,30,19,3,30,19,4,30,19,5,30,19,6,30,19,7,30,19,8,30,19,9,30,19,10,30,19,11,30,19,12,30,19,13,30,19,14,30,19,15,30,19,21,30,19,22,30,19,23,30,19,24,30,19,25,30,19,26,30,19,34,30,19,35,30,19,36,30,19,37,30,19,38,30,20,0,30,20,1,30,20,2,30,20,3,30,20,4,30,20,5,30,20,6,30,20,7,30,20,8,30,20,9,30,20,10,30,20,11,30,20,12,30,20,13,30,20,14,30,20,15,30,20,16,30,20,22,30,20,23,30,20,24,30,20,25,30,20,26,30,20,34,30,20,35,30,20,36,30,20,37,30,20,38,30,21,0,30,21,1,30,21,2,30,21,3,30,21,4,30,21,5,30,21,6,30,21,7,30,21,8,30,21,9,30,21,10,30,21,11,30,21,12,30,21,13,30,21,14,30,21,15,30,21,16,30,21,17,30,21,23,30,21,24,30,21,25,30,21,26,30,21,34,30,21,35,30,21,36,30,21,37,30,21,38,30,22,0,30,22,1,30,22,2,30,22,3,30,22,4,30,22,5,30,22,6,30,22,7,30,22,8,30,22,9,30,22,10,30,22,11,30,22,12,30,22,13,30,22,14,30,22,15,30,22,16,30,22,17,30,22,18,30,22,24,30,22,25,30,22,26,30,22,34,30,22,35,30,22,36,30,22,37,30,22,38,30,23,0,30,23,1,30,23,2,30,23,3,30,23,4,30,23,5,30,23,6,30,23,7,30,23,8,30,23,9,30,23,10,30,23,11,30,23,12,30,23,13,30,23,14,30,23,15,30,23,16,30,23,17,30,23,18,30,23,19,30,23,25,30,23,26,30,23,34,30,23,35,30,23,36,30,23,37,30,23,38,30,24,0,30,24,1,30,24,2,30,24,3,30,24,4,30,24,5,30,24,6,30,24,7,30,24,8,30,24,9,30,24,10,30,24,11,30,24,12,30,24,13,30,24,14,30,24,15,30,24,16,30,24,17,30,24,18,30,24,19,30,24,20,30,24,26,30,24,34,30,24,35,30,24,36,30,24,37,30,24,38,30,25,0,30,25,1,30,25,2,30,25,3,30,25,4,30,25,5,30,25,6,30,25,7,30,25,8,30,25,9,30,25,10,30,25,11,30,25,12,30,25,13,30,25,14,30,25,15,30,25,16,30,25,17,30,25,18,30,25,19,30,25,20,30,25,21,30,25,34,30,25,35,30,25,36,30,25,37,30,25,38,30,26,0,30,26,1,30,26,2,30,26,3,30,26,4,30,26,5,30,26,6,30,26,7,30,26,8,30,26,9,30,26,10,30,26,11,30,26,12,30,26,13,30,26,14,30,26,15,30,26,16,30,26,17,30,26,18,30,26,19,30,26,20,30,26,21,30,26,22,30,26,34,30,26,35,30,26,36,30,26,37,30,26,38,30,27,0,30,27,1,30,27,2,30,27,3,30,27,4,30,27,5,30,27,6,30,27,7,30,27,8,30,27,9,30,27,10,30,27,11,30,27,12,30,27,13,30,27,14,30,27,15,30,27,16,30,27,17,30,27,18,30,27,19,30,27,20,30,27,21,30,27,22,30,27,23,30,27,34,30,27,35,30,27,36,30,27,37,30,27,38,30,28,0,30,28,1,30,28,2,30,28,3,30,28,4,30,28,5,30,28,6,30,28,7,30,28,8,30,28,9,30,28,10,30,28,11,30,28,12,30,28,13,30,28,14,30,28,15,30,28,16,30,28,17,30,28,18,30,28,19,30,28,20,30,28,21,30,28,22,30,28,23,30,28,24,30,28,34,30,28,35,30,28,36,30,28,37,30,28,38,30,34,0,30,34,1,30,34,2,30,34,3,30,34,4,30,34,5,30,34,6,30,34,7,30,34,8,30,34,9,30,34,10,30,34,11,30,34,12,30,34,13,30,34,14,30,34,15,30,34,16,30,34,17,30,34,18,30,34,19,30,34,20,30,34,21,30,34,22,30,34,23,30,34,24,30,34,25,30,34,26,30,34,36,30,34,37,30,34,38,30,35,0,30,35,1,30,35,2,30,35,3,30,35,4,30,35,5,30,35,6,30,35,7,30,35,8,30,35,9,30,35,10,30,35,11,30,35,12,30,35,13,30,35,14,30,35,15,30,35,16,30,35,17,30,35,18,30,35,19,30,35,20,30,35,21,30,35,22,30,35,23,30,35,24,30,35,25,30,35,26,30,35,37,30,35,38,31,4,0,31,4,6,31,4,7,31,4,8,31,4,9,31,4,10,31,4,11,31,4,12,31,4,13,31,4,14,31,4,15,31,4,16,31,4,17,31,4,18,31,4,19,31,4,20,31,4,21,31,4,22,31,4,23,31,4,24,31,4,25,31,4,26,31,4,27,31,4,35,31,4,36,31,4,37,31,4,38,31,5,0,31,5,1,31,5,7,31,5,8,31,5,9,31,5,10,31,5,11,31,5,12,31,5,13,31,5,14,31,5,15,31,5,16,31,5,17,31,5,18,31,5,19,31,5,20,31,5,21,31,5,22,31,5,23,31,5,24,31,5,25,31,5,26,31,5,27,31,5,35,31,5,36,31,5,37,31,5,38,31,6,0,31,6,1,31,6,2,31,6,8,31,6,9,31,6,10,31,6,11,31,6,12,31,6,13,31,6,14,31,6,15,31,6,16,31,6,17,31,6,18,31,6,19,31,6,20,31,6,21,31,6,22,31,6,23,31,6,24,31,6,25,31,6,26,31,6,27,31,6,35,31,6,36,31,6,37,31,6,38,31,7,0,31,7,1,31,7,2,31,7,3,31,7,9,31,7,10,31,7,11,31,7,12,31,7,13,31,7,14,31,7,15,31,7,16,31,7,17,31,7,18,31,7,19,31,7,20,31,7,21,31,7,22,31,7,23,31,7,24,31,7,25,31,7,26,31,7,27,31,7,35,31,7,36,31,7,37,31,7,38,31,8,0,31,8,1,31,8,2,31,8,3,31,8,4,31,8,10,31,8,11,31,8,12,31,8,13,31,8,14,31,8,15,31,8,16,31,8,17,31,8,18,31,8,19,31,8,20,31,8,21,31,8,22,31,8,23,31,8,24,31,8,25,31,8,26,31,8,27,31,8,35,31,8,36,31,8,37,31,8,38,31,9,0,31,9,1,31,9,2,31,9,3,31,9,4,31,9,5,31,9,11,31,9,12,31,9,13,31,9,14,31,9,15,31,9,16,31,9,17,31,9,18,31,9,19,31,9,20,31,9,21,31,9,22,31,9,23,31,9,24,31,9,25,31,9,26,31,9,27,31,9,35,31,9,36,31,9,37,31,9,38,31,10,0,31,10,1,31,10,2,31,10,3,31,10,4,31,10,5,31,10,6,31,10,12,31,10,13,31,10,14,31,10,15,31,10,16,31,10,17,31,10,18,31,10,19,31,10,20,31,10,21,31,10,22,31,10,23,31,10,24,31,10,25,31,10,26,31,10,27,31,10,35,31,10,36,31,10,37,31,10,38,31,11,0,31,11,1,31,11,2,31,11,3,31,11,4,31,11,5,31,11,6,31,11,7,31,11,13,31,11,14,31,11,15,31,11,16,31,11,17,31,11,18,31,11,19,31,11,20,31,11,21,31,11,22,31,11,23,31,11,24,31,11,25,31,11,26,31,11,27,31,11,35,31,11,36,31,11,37,31,11,38,31,12,0,31,12,1,31,12,2,31,12,3,31,12,4,31,12,5,31,12,6,31,12,7,31,12,8,31,12,14,31,12,15,31,12,16,31,12,17,31,12,18,31,12,19,31,12,20,31,12,21,31,12,22,31,12,23,31,12,24,31,12,25,31,12,26,31,12,27,31,12,35,31,12,36,31,12,37,31,12,38,31,13,0,31,13,1,31,13,2,31,13,3,31,13,4,31,13,5,31,13,6,31,13,7,31,13,8,31,13,9,31,13,15,31,13,16,31,13,17,31,13,18,31,13,19,31,13,20,31,13,21,31,13,22,31,13,23,31,13,24,31,13,25,31,13,26,31,13,27,31,13,35,31,13,36,31,13,37,31,13,38,31,14,0,31,14,1,31,14,2,31,14,3,31,14,4,31,14,5,31,14,6,31,14,7,31,14,8,31,14,9,31,14,10,31,14,16,31,14,17,31,14,18,31,14,19,31,14,20,31,14,21,31,14,22,31,14,23,31,14,24,31,14,25,31,14,26,31,14,27,31,14,35,31,14,36,31,14,37,31,14,38,31,15,0,31,15,1,31,15,2,31,15,3,31,15,4,31,15,5,31,15,6,31,15,7,31,15,8,31,15,9,31,15,10,31,15,11,31,15,17,31,15,18,31,15,19,31,15,20,31,15,21,31,15,22,31,15,23,31,15,24,31,15,25,31,15,26,31,15,27,31,15,35,31,15,36,31,15,37,31,15,38,31,16,0,31,16,1,31,16,2,31,16,3,31,16,4,31,16,5,31,16,6,31,16,7,31,16,8,31,16,9,31,16,10,31,16,11,31,16,12,31,16,18,31,16,19,31,16,20,31,16,21,31,16,22,31,16,23,31,16,24,31,16,25,31,16,26,31,16,27,31,16,35,31,16,36,31,16,37,31,16,38,31,17,0,31,17,1,31,17,2,31,17,3,31,17,4,31,17,5,31,17,6,31,17,7,31,17,8,31,17,9,31,17,10,31,17,11,31,17,12,31,17,13,31,17,19,31,17,20,31,17,21,31,17,22,31,17,23,31,17,24,31,17,25,31,17,26,31,17,27,31,17,35,31,17,36,31,17,37,31,17,38,31,18,0,31,18,1,31,18,2,31,18,3,31,18,4,31,18,5,31,18,6,31,18,7,31,18,8,31,18,9,31,18,10,31,18,11,31,18,12,31,18,13,31,18,14,31,18,20,31,18,21,31,18,22,31,18,23,31,18,24,31,18,25,31,18,26,31,18,27,31,18,35,31,18,36,31,18,37,31,18,38,31,19,0,31,19,1,31,19,2,31,19,3,31,19,4,31,19,5,31,19,6,31,19,7,31,19,8,31,19,9,31,19,10,31,19,11,31,19,12,31,19,13,31,19,14,31,19,15,31,19,21,31,19,22,31,19,23,31,19,24,31,19,25,31,19,26,31,19,27,31,19,35,31,19,36,31,19,37,31,19,38,31,20,0,31,20,1,31,20,2,31,20,3,31,20,4,31,20,5,31,20,6,31,20,7,31,20,8,31,20,9,31,20,10,31,20,11,31,20,12,31,20,13,31,20,14,31,20,15,31,20,16,31,20,22,31,20,23,31,20,24,31,20,25,31,20,26,31,20,27,31,20,35,31,20,36,31,20,37,31,20,38,31,21,0,31,21,1,31,21,2,31,21,3,31,21,4,31,21,5,31,21,6,31,21,7,31,21,8,31,21,9,31,21,10,31,21,11,31,21,12,31,21,13,31,21,14,31,21,15,31,21,16,31,21,17,31,21,23,31,21,24,31,21,25,31,21,26,31,21,27,31,21,35,31,21,36,31,21,37,31,21,38,31,22,0,31,22,1,31,22,2,31,22,3,31,22,4,31,22,5,31,22,6,31,22,7,31,22,8,31,22,9,31,22,10,31,22,11,31,22,12,31,22,13,31,22,14,31,22,15,31,22,16,31,22,17,31,22,18,31,22,24,31,22,25,31,22,26,31,22,27,31,22,35,31,22,36,31,22,37,31,22,38,31,23,0,31,23,1,31,23,2,31,23,3,31,23,4,31,23,5,31,23,6,31,23,7,31,23,8,31,23,9,31,23,10,31,23,11,31,23,12,31,23,13,31,23,14,31,23,15,31,23,16,31,23,17,31,23,18,31,23,19,31,23,25,31,23,26,31,23,27,31,23,35,31,23,36,31,23,37,31,23,38,31,24,0,31,24,1,31,24,2,31,24,3,31,24,4,31,24,5,31,24,6,31,24,7,31,24,8,31,24,9,31,24,10,31,24,11,31,24,12,31,24,13,31,24,14,31,24,15,31,24,16,31,24,17,31,24,18,31,24,19,31,24,20,31,24,26,31,24,27,31,24,35,31,24,36,31,24,37,31,24,38,31,25,0,31,25,1,31,25,2,31,25,3,31,25,4,31,25,5,31,25,6,31,25,7,31,25,8,31,25,9,31,25,10,31,25,11,31,25,12,31,25,13,31,25,14,31,25,15,31,25,16,31,25,17,31,25,18,31,25,19,31,25,20,31,25,21,31,25,27,31,25,35,31,25,36,31,25,37,31,25,38,31,26,0,31,26,1,31,26,2,31,26,3,31,26,4,31,26,5,31,26,6,31,26,7,31,26,8,31,26,9,31,26,10,31,26,11,31,26,12,31,26,13,31,26,14,31,26,15,31,26,16,31,26,17,31,26,18,31,26,19,31,26,20,31,26,21,31,26,22,31,26,35,31,26,36,31,26,37,31,26,38,31,27,0,31,27,1,31,27,2,31,27,3,31,27,4,31,27,5,31,27,6,31,27,7,31,27,8,31,27,9,31,27,10,31,27,11,31,27,12,31,27,13,31,27,14,31,27,15,31,27,16,31,27,17,31,27,18,31,27,19,31,27,20,31,27,21,31,27,22,31,27,23,31,27,35,31,27,36,31,27,37,31,27,38,31,28,0,31,28,1,31,28,2,31,28,3,31,28,4,31,28,5,31,28,6,31,28,7,31,28,8,31,28,9,31,28,10,31,28,11,31,28,12,31,28,13,31,28,14,31,28,15,31,28,16,31,28,17,31,28,18,31,28,19,31,28,20,31,28,21,31,28,22,31,28,23,31,28,24,31,28,35,31,28,36,31,28,37,31,28,38,31,29,0,31,29,1,31,29,2,31,29,3,31,29,4,31,29,5,31,29,6,31,29,7,31,29,8,31,29,9,31,29,10,31,29,11,31,29,12,31,29,13,31,29,14,31,29,15,31,29,16,31,29,17,31,29,18,31,29,19,31,29,20,31,29,21,31,29,22,31,29,23,31,29,24,31,29,25,31,29,35,31,29,36,31,29,37,31,29,38,31,35,0,31,35,1,31,35,2,31,35,3,31,35,4,31,35,5,31,35,6,31,35,7,31,35,8,31,35,9,31,35,10,31,35,11,31,35,12,31,35,13,31,35,14,31,35,15,31,35,16,31,35,17,31,35,18,31,35,19,31,35,20,31,35,21,31,35,22,31,35,23,31,35,24,31,35,25,31,35,26,31,35,27,31,35,37,31,35,38,]);
constraint int_lin_le([1,1,1,-1],[w_00002_00002_INTEGER,aux1382_INTEGER,aux1383_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,-1],[w_00007_00003_INTEGER,aux1384_INTEGER,aux1385_INTEGER,aux1386_INTEGER,aux1387_INTEGER,aux1388_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,1,-1],[w_00006_00013_INTEGER,aux1389_INTEGER,aux1390_INTEGER,aux1391_INTEGER,aux1392_INTEGER,aux1393_INTEGER,aux1394_INTEGER,aux1395_INTEGER,aux1396_INTEGER,1],0);
constraint int_lin_le([1,1,2,1,1,-1],[aux221_INTEGER,aux223_INTEGER,aux19_INTEGER,aux32_INTEGER,aux52_INTEGER,2],0);
constraint int_lin_le([1,1,1,1,1,-1],[aux1397_INTEGER,aux1398_INTEGER,aux1399_INTEGER,aux1400_INTEGER,w_00005_00013_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,-1],[w_00002_00019_INTEGER,aux1401_INTEGER,aux1402_INTEGER,aux1403_INTEGER,aux1404_INTEGER,1],0);
constraint array_int_lq([w_00002_00001_INTEGER, w_00002_00002_INTEGER, w_00002_00004_INTEGER, w_00002_00006_INTEGER, w_00002_00008_INTEGER, w_00002_00012_INTEGER, w_00002_00013_INTEGER, w_00002_00014_INTEGER, w_00002_00016_INTEGER, w_00002_00018_INTEGER, w_00002_00019_INTEGER, w_00002_00020_INTEGER, w_00006_00001_INTEGER, w_00006_00002_INTEGER, w_00006_00003_INTEGER, w_00006_00004_INTEGER, w_00006_00005_INTEGER, w_00006_00006_INTEGER, w_00006_00008_INTEGER, w_00006_00009_INTEGER, w_00006_00011_INTEGER, w_00006_00012_INTEGER, w_00006_00013_INTEGER, w_00006_00014_INTEGER, w_00006_00016_INTEGER, w_00006_00017_INTEGER, w_00006_00018_INTEGER, w_00006_00019_INTEGER, w_00006_00020_INTEGER],[w_00008_00001_INTEGER, w_00008_00002_INTEGER, w_00008_00004_INTEGER, w_00008_00006_INTEGER, w_00008_00008_INTEGER, w_00008_00012_INTEGER, w_00008_00013_INTEGER, w_00008_00014_INTEGER, w_00008_00016_INTEGER, w_00008_00018_INTEGER, w_00008_00019_INTEGER, w_00008_00020_INTEGER, w_00007_00001_INTEGER, w_00007_00002_INTEGER, w_00007_00003_INTEGER, w_00007_00004_INTEGER, w_00007_00005_INTEGER, w_00007_00006_INTEGER, w_00007_00008_INTEGER, w_00007_00009_INTEGER, w_00007_00011_INTEGER, w_00007_00012_INTEGER, w_00007_00013_INTEGER, w_00007_00014_INTEGER, w_00007_00016_INTEGER, w_00007_00017_INTEGER, w_00007_00018_INTEGER, w_00007_00019_INTEGER, w_00007_00020_INTEGER]);
constraint int_lin_le([1,1,1,1,1,1,1,-1],[aux1405_INTEGER,aux1406_INTEGER,aux1407_INTEGER,aux1408_INTEGER,aux1409_INTEGER,aux1410_INTEGER,w_00009_00008_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,-1],[w_00002_00004_INTEGER,aux1411_INTEGER,aux1412_INTEGER,aux1413_INTEGER,aux1414_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,1,1,1,-1],[aux1415_INTEGER,aux1416_INTEGER,aux1417_INTEGER,aux1418_INTEGER,aux1419_INTEGER,aux1420_INTEGER,aux1421_INTEGER,aux1422_INTEGER,aux1423_INTEGER,aux1424_INTEGER,w_00004_00013_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,1,-1],[w_00007_00016_INTEGER,aux1425_INTEGER,aux1426_INTEGER,aux1427_INTEGER,aux1428_INTEGER,aux1429_INTEGER,aux1430_INTEGER,aux1431_INTEGER,aux1432_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,-1],[aux1435_INTEGER,aux1454_INTEGER,aux1455_INTEGER,aux1456_INTEGER,aux1457_INTEGER,aux1458_INTEGER,aux1459_INTEGER,w_00004_00010_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,1,1,-1],[aux1461_INTEGER,aux1462_INTEGER,aux1463_INTEGER,aux1464_INTEGER,aux1465_INTEGER,aux1466_INTEGER,aux1467_INTEGER,aux1468_INTEGER,aux1470_INTEGER,w_00004_00005_INTEGER,1],0);
constraint int_lin_le([-1,-1,1],[aux366,w_00009_00004_INTEGER,1],0);
constraint int_lin_le([-1,-1,1],[aux368,w_00009_00014_INTEGER,2],0);
constraint int_lin_le([1,1,1,1,1,1,1,-1],[w_00002_00020_INTEGER,aux1471_INTEGER,aux1472_INTEGER,aux1473_INTEGER,aux1474_INTEGER,aux1475_INTEGER,aux1476_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux366,w_00002_00004_INTEGER,w_00008_00004_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,-1],[aux1477_INTEGER,aux1478_INTEGER,aux1479_INTEGER,aux1480_INTEGER,w_00001_00016_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,-1],[w_00002_00012_INTEGER,aux1481_INTEGER,aux1482_INTEGER,aux1483_INTEGER,aux1484_INTEGER,aux1485_INTEGER,aux1486_INTEGER,aux1487_INTEGER,1],0);
constraint int_lin_le([1,1,2,-1],[aux204_INTEGER,aux23_INTEGER,aux75_INTEGER,2],0);
constraint int_lin_le([1,1,1,1,1,1,1,-1],[aux1488_INTEGER,aux1489_INTEGER,aux1491_INTEGER,aux1492_INTEGER,aux1493_INTEGER,aux1494_INTEGER,w_00005_00005_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,-1],[w_00007_00001_INTEGER,aux1495_INTEGER,aux1496_INTEGER,aux1497_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,-1],[aux198_INTEGER,aux1498_INTEGER,aux1499_INTEGER,aux1500_INTEGER,aux1501_INTEGER,aux1502_INTEGER,w_00001_00008_INTEGER,1],0);
constraint int_lin_le([1,1,1,-1],[aux1503_INTEGER,aux1504_INTEGER,w_00009_00017_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,-1],[w_00007_00017_INTEGER,aux1505_INTEGER,aux1506_INTEGER,aux1507_INTEGER,aux1508_INTEGER,aux1509_INTEGER,aux1510_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,2,1,-1],[aux117_INTEGER,aux118_INTEGER,aux119_INTEGER,aux122_INTEGER,aux123_INTEGER,aux124_INTEGER,aux125_INTEGER,4],0);
constraint int_lin_le([1,1,1,1,1,1,1,-1],[aux1520_INTEGER,aux1521_INTEGER,aux1522_INTEGER,aux1523_INTEGER,aux1524_INTEGER,aux1525_INTEGER,w_00004_00017_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,-1],[w_00006_00019_INTEGER,aux1529_INTEGER,aux1530_INTEGER,aux1531_INTEGER,aux1532_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,-1],[w_00002_00016_INTEGER,aux1533_INTEGER,aux1534_INTEGER,aux1535_INTEGER,aux1536_INTEGER,aux1537_INTEGER,aux1538_INTEGER,1],0);
constraint int_lin_le([1,1,1,-1],[aux1539_INTEGER,aux1540_INTEGER,w_00008_00002_INTEGER,1],0);
constraint array_bool_and([aux1541_BOOL,aux1542_BOOL],aux332_BOOL);
constraint array_bool_and([aux1543_BOOL,aux1544_BOOL],aux216_BOOL);
constraint array_bool_and([aux1545_BOOL,aux1546_BOOL],aux190_BOOL);
constraint array_bool_and([aux1547_BOOL,aux1548_BOOL],aux105_BOOL);
constraint array_bool_and([aux1549_BOOL,aux1550_BOOL],aux331_BOOL);
constraint array_bool_and([aux1551_BOOL,aux1552_BOOL],aux187_BOOL);
constraint array_bool_and([aux1553_BOOL,aux1554_BOOL],aux339_BOOL);
constraint array_bool_and([aux1555_BOOL,aux1556_BOOL],aux315_BOOL);
constraint array_bool_and([aux1557_BOOL,aux1558_BOOL],aux328_BOOL);
constraint array_bool_and([aux1559_BOOL,aux1560_BOOL],aux202_BOOL);
constraint array_bool_and([aux1561_BOOL,aux1562_BOOL],aux101_BOOL);
constraint array_bool_and([aux1563_BOOL,aux1564_BOOL],aux316_BOOL);
constraint array_bool_and([aux1565_BOOL,aux1566_BOOL],aux276_BOOL);
constraint array_bool_and([aux1567_BOOL,aux1568_BOOL],aux214_BOOL);
constraint array_bool_and([aux1569_BOOL,aux1570_BOOL],aux201_BOOL);
constraint array_bool_and([aux1571_BOOL,aux1572_BOOL],aux224_BOOL);
constraint array_bool_and([aux1573_BOOL,aux1574_BOOL],aux333_BOOL);
constraint array_bool_and([aux1575_BOOL,aux1576_BOOL],aux239_BOOL);
constraint array_bool_and([aux1577_BOOL,aux1578_BOOL],aux272_BOOL);
constraint array_bool_and([aux1579_BOOL,aux1580_BOOL],aux112_BOOL);
constraint array_bool_and([aux1581_BOOL,aux1582_BOOL],aux280_BOOL);
constraint array_bool_and([aux1583_BOOL,aux1584_BOOL],aux226_BOOL);
constraint array_bool_and([aux1585_BOOL,aux1586_BOOL],aux204_BOOL);
constraint array_bool_and([aux1587_BOOL,aux1588_BOOL],aux263_BOOL);
constraint array_bool_and([aux1589_BOOL,aux1590_BOOL],aux241_BOOL);
constraint array_bool_and([aux1591_BOOL,aux1592_BOOL],aux210_BOOL);
constraint array_bool_and([aux1593_BOOL,aux1594_BOOL],aux325_BOOL);
constraint array_bool_and([aux1595_BOOL,aux1596_BOOL],aux284_BOOL);
constraint array_bool_and([aux1597_BOOL,aux1598_BOOL],aux117_BOOL);
constraint array_bool_and([aux1599_BOOL,aux1600_BOOL],aux127_BOOL);
constraint array_bool_and([aux1601_BOOL,aux1602_BOOL],aux133_BOOL);
constraint array_bool_and([aux1603_BOOL,aux1604_BOOL],aux102_BOOL);
constraint array_bool_and([aux1605_BOOL,aux1606_BOOL],aux140_BOOL);
constraint array_bool_and([aux1607_BOOL,aux1608_BOOL],aux295_BOOL);
constraint array_bool_and([aux1609_BOOL,aux1610_BOOL],aux200_BOOL);
constraint array_bool_and([aux1611_BOOL,aux1612_BOOL],aux158_BOOL);
constraint array_bool_and([aux1613_BOOL,aux1614_BOOL],aux228_BOOL);
constraint array_bool_and([aux1615_BOOL,aux1616_BOOL],aux234_BOOL);
constraint array_bool_and([aux1617_BOOL,aux1618_BOOL],aux310_BOOL);
constraint array_bool_and([aux1619_BOOL,aux1620_BOOL],aux197_BOOL);
constraint array_bool_and([aux1621_BOOL,aux1622_BOOL],aux242_BOOL);
constraint array_bool_and([aux1623_BOOL,aux1624_BOOL],aux277_BOOL);
constraint array_bool_and([aux1625_BOOL,aux1626_BOOL],aux249_BOOL);
constraint array_bool_and([aux1627_BOOL,aux1628_BOOL],aux322_BOOL);
constraint array_bool_and([aux1629_BOOL,aux1630_BOOL],aux198_BOOL);
constraint array_bool_and([aux1631_BOOL,aux1632_BOOL],aux225_BOOL);
constraint array_bool_and([aux1633_BOOL,aux1634_BOOL],aux118_BOOL);
constraint array_bool_and([aux1635_BOOL,aux1636_BOOL],aux240_BOOL);
constraint array_bool_and([aux1637_BOOL,aux1638_BOOL],aux266_BOOL);
constraint array_bool_and([aux1639_BOOL,aux1640_BOOL],aux321_BOOL);
constraint array_bool_and([aux1641_BOOL,aux1642_BOOL],aux208_BOOL);
constraint array_bool_and([aux1643_BOOL,aux1644_BOOL],aux211_BOOL);
constraint array_bool_and([aux1645_BOOL,aux1646_BOOL],aux220_BOOL);
constraint array_bool_and([aux1647_BOOL,aux1648_BOOL],aux223_BOOL);
constraint array_bool_and([aux1649_BOOL,aux1650_BOOL],aux196_BOOL);
constraint array_bool_and([aux1651_BOOL,aux1652_BOOL],aux311_BOOL);
constraint array_bool_and([aux1653_BOOL,aux1654_BOOL],aux278_BOOL);
constraint array_bool_and([aux1655_BOOL,aux1656_BOOL],aux217_BOOL);
constraint array_bool_and([aux1657_BOOL,aux1658_BOOL],aux238_BOOL);
constraint array_bool_and([aux1659_BOOL,aux1660_BOOL],aux110_BOOL);
constraint array_bool_and([aux1661_BOOL,aux1662_BOOL],aux114_BOOL);
constraint array_bool_and([aux1663_BOOL,aux1664_BOOL],aux107_BOOL);
constraint array_bool_and([aux1665_BOOL,aux1666_BOOL],aux131_BOOL);
constraint array_bool_and([aux1667_BOOL,aux1668_BOOL],aux138_BOOL);
constraint array_bool_and([aux1669_BOOL,aux1670_BOOL],aux258_BOOL);
constraint array_bool_and([aux1671_BOOL,aux1672_BOOL],aux106_BOOL);
constraint array_bool_and([aux1673_BOOL,aux1674_BOOL],aux144_BOOL);
constraint array_bool_and([aux1675_BOOL,aux1676_BOOL],aux155_BOOL);
constraint array_bool_and([aux1677_BOOL,aux1678_BOOL],aux231_BOOL);
constraint array_bool_and([aux1679_BOOL,aux1680_BOOL],aux123_BOOL);
constraint array_bool_and([aux1681_BOOL,aux1682_BOOL],aux136_BOOL);
constraint array_bool_and([aux1683_BOOL,aux1684_BOOL],aux206_BOOL);
constraint array_bool_and([aux1685_BOOL,aux1686_BOOL],aux245_BOOL);
constraint array_bool_and([aux1687_BOOL,aux1688_BOOL],aux209_BOOL);
constraint array_bool_and([aux1689_BOOL,aux1690_BOOL],aux297_BOOL);
constraint array_bool_and([aux1691_BOOL,aux1692_BOOL],aux215_BOOL);
constraint array_bool_and([aux1693_BOOL,aux1694_BOOL],aux221_BOOL);
constraint array_bool_and([aux1695_BOOL,aux1696_BOOL],aux164_BOOL);
constraint array_bool_and([aux1697_BOOL,aux1698_BOOL],aux173_BOOL);
constraint array_bool_and([aux1699_BOOL,aux1700_BOOL],aux122_BOOL);
constraint array_bool_and([aux1701_BOOL,aux1702_BOOL],aux129_BOOL);
constraint array_bool_and([aux1703_BOOL,aux1704_BOOL],aux108_BOOL);
constraint array_bool_and([aux1705_BOOL,aux1706_BOOL],aux219_BOOL);
constraint array_bool_and([aux1707_BOOL,aux1708_BOOL],aux171_BOOL);
constraint array_bool_and([aux1709_BOOL,aux1710_BOOL],aux236_BOOL);
constraint array_bool_and([aux1711_BOOL,aux1712_BOOL],aux279_BOOL);
constraint array_bool_and([aux1713_BOOL,aux1714_BOOL],aux260_BOOL);
constraint array_bool_and([aux1715_BOOL,aux1716_BOOL],aux124_BOOL);
constraint array_bool_and([aux1717_BOOL,aux1718_BOOL],aux298_BOOL);
constraint array_bool_and([aux1719_BOOL,aux1720_BOOL],aux153_BOOL);
constraint array_bool_and([aux1721_BOOL,aux1722_BOOL],aux292_BOOL);
constraint array_bool_and([aux1723_BOOL,aux1724_BOOL],aux111_BOOL);
constraint array_bool_and([aux1725_BOOL,aux1726_BOOL],aux293_BOOL);
constraint array_bool_and([aux1727_BOOL,aux1728_BOOL],aux304_BOOL);
constraint array_bool_and([aux1729_BOOL,aux1730_BOOL],aux172_BOOL);
constraint array_bool_and([aux1731_BOOL,aux1732_BOOL],aux119_BOOL);
constraint array_bool_and([aux1733_BOOL,aux1734_BOOL],aux141_BOOL);
constraint array_bool_and([aux1735_BOOL,aux1736_BOOL],aux299_BOOL);
constraint array_bool_and([aux1737_BOOL,aux1738_BOOL],aux160_BOOL);
constraint array_bool_and([aux1739_BOOL,aux1740_BOOL],aux270_BOOL);
constraint array_bool_and([aux1741_BOOL,aux1742_BOOL],aux132_BOOL);
constraint array_bool_and([aux1743_BOOL,aux1744_BOOL],aux156_BOOL);
constraint array_bool_and([aux1745_BOOL,aux1746_BOOL],aux169_BOOL);
constraint array_bool_and([aux1747_BOOL,aux1748_BOOL],aux174_BOOL);
constraint array_bool_and([aux1749_BOOL,aux1750_BOOL],aux125_BOOL);
constraint array_bool_and([aux1751_BOOL,aux1752_BOOL],aux130_BOOL);
constraint array_bool_and([aux1753_BOOL,aux1754_BOOL],aux143_BOOL);
constraint array_bool_and([aux1755_BOOL,aux1756_BOOL],aux267_BOOL);
constraint array_bool_and([aux1757_BOOL,aux1758_BOOL],aux154_BOOL);
constraint array_bool_and([aux1759_BOOL,aux1760_BOOL],aux166_BOOL);
constraint int_lin_le([1,1,1,1,1,1,-1],[aux1761_INTEGER,aux1762_INTEGER,aux1763_INTEGER,aux1764_INTEGER,aux1765_INTEGER,w_00004_00009_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,1,-1],[w_00007_00005_INTEGER,aux1766_INTEGER,aux1767_INTEGER,aux1768_INTEGER,aux1769_INTEGER,aux1770_INTEGER,aux1771_INTEGER,aux1772_INTEGER,aux1773_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,-1],[aux1774_INTEGER,aux1775_INTEGER,aux1776_INTEGER,aux1777_INTEGER,w_00004_00002_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,-1],[aux1778_INTEGER,aux1779_INTEGER,aux1780_INTEGER,aux1781_INTEGER,w_00008_00018_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,-1],[aux1782_INTEGER,aux1783_INTEGER,aux1784_INTEGER,w_00009_00003_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,-1],[w_00006_00002_INTEGER,aux1785_INTEGER,aux1786_INTEGER,aux1787_INTEGER,aux1788_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,-1],[w_00007_00019_INTEGER,aux1789_INTEGER,aux1790_INTEGER,aux1791_INTEGER,aux1792_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,-1],[aux216_INTEGER,aux322_INTEGER,aux1793_INTEGER,aux1794_INTEGER,aux1795_INTEGER,aux1796_INTEGER,aux1797_INTEGER,w_00001_00007_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,1,-1],[w_00007_00013_INTEGER,aux1798_INTEGER,aux1799_INTEGER,aux1800_INTEGER,aux1801_INTEGER,aux1802_INTEGER,aux1803_INTEGER,aux1804_INTEGER,aux1805_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,-1],[w_00007_00018_INTEGER,aux1806_INTEGER,aux1807_INTEGER,aux1808_INTEGER,aux1809_INTEGER,aux1810_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,-1],[aux1811_INTEGER,aux1812_INTEGER,aux1813_INTEGER,w_00009_00020_INTEGER,1],0);
constraint int_lin_le([1,1,2,1,1,-1],[aux239_INTEGER,aux240_INTEGER,aux241_INTEGER,aux242_INTEGER,aux245_INTEGER,2],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,1,-1],[w_00006_00020_INTEGER,aux1814_INTEGER,aux1815_INTEGER,aux1816_INTEGER,aux1817_INTEGER,aux1818_INTEGER,aux1819_INTEGER,aux1820_INTEGER,aux1821_INTEGER,1],0);

solve :: int_search([s_00001, s_00002, s_00003, s_00004, s_00005, s_00006, s_00007, s_00008, s_00009, s_00010, s_00011, s_00012, s_00013, s_00014, s_00015, s_00016, s_00017, s_00018, s_00019, s_00020, 1, 1, 0, w_00001_00004_INTEGER, w_00001_00005_INTEGER, 0, w_00001_00007_INTEGER, w_00001_00008_INTEGER, 1, w_00001_00010_INTEGER, w_00001_00011_INTEGER, 0, w_00001_00013_INTEGER, 0, w_00001_00015_INTEGER, w_00001_00016_INTEGER, 0, 0, 0, 0, w_00002_00001_INTEGER, w_00002_00002_INTEGER, 0, w_00002_00004_INTEGER, 0, w_00002_00006_INTEGER, 0, w_00002_00008_INTEGER, 0, 0, 0, w_00002_00012_INTEGER, w_00002_00013_INTEGER, w_00002_00014_INTEGER, 0, w_00002_00016_INTEGER, 0, w_00002_00018_INTEGER, w_00002_00019_INTEGER, w_00002_00020_INTEGER, 0, w_00003_00002_INTEGER, w_00003_00003_INTEGER, 0, w_00003_00005_INTEGER, 0, 0, w_00003_00008_INTEGER, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, w_00003_00020_INTEGER, w_00004_00001_INTEGER, w_00004_00002_INTEGER, 0, w_00004_00004_INTEGER, w_00004_00005_INTEGER, w_00004_00006_INTEGER, w_00004_00007_INTEGER, w_00004_00008_INTEGER, w_00004_00009_INTEGER, w_00004_00010_INTEGER, w_00004_00011_INTEGER, w_00004_00012_INTEGER, w_00004_00013_INTEGER, w_00004_00014_INTEGER, w_00004_00015_INTEGER, w_00004_00016_INTEGER, w_00004_00017_INTEGER, w_00004_00018_INTEGER, w_00004_00019_INTEGER, w_00004_00020_INTEGER, w_00005_00001_INTEGER, 0, 0, w_00005_00004_INTEGER, w_00005_00005_INTEGER, 0, w_00005_00007_INTEGER, w_00005_00008_INTEGER, 0, w_00005_00010_INTEGER, w_00005_00011_INTEGER, 0, w_00005_00013_INTEGER, 0, w_00005_00015_INTEGER, w_00005_00016_INTEGER, 0, 0, 0, 0, w_00006_00001_INTEGER, w_00006_00002_INTEGER, w_00006_00003_INTEGER, w_00006_00004_INTEGER, w_00006_00005_INTEGER, w_00006_00006_INTEGER, 0, w_00006_00008_INTEGER, w_00006_00009_INTEGER, 0, w_00006_00011_INTEGER, w_00006_00012_INTEGER, w_00006_00013_INTEGER, w_00006_00014_INTEGER, 0, w_00006_00016_INTEGER, w_00006_00017_INTEGER, w_00006_00018_INTEGER, w_00006_00019_INTEGER, w_00006_00020_INTEGER, w_00007_00001_INTEGER, w_00007_00002_INTEGER, w_00007_00003_INTEGER, w_00007_00004_INTEGER, w_00007_00005_INTEGER, w_00007_00006_INTEGER, 0, w_00007_00008_INTEGER, w_00007_00009_INTEGER, 0, w_00007_00011_INTEGER, w_00007_00012_INTEGER, w_00007_00013_INTEGER, w_00007_00014_INTEGER, 0, w_00007_00016_INTEGER, w_00007_00017_INTEGER, w_00007_00018_INTEGER, w_00007_00019_INTEGER, w_00007_00020_INTEGER, w_00008_00001_INTEGER, w_00008_00002_INTEGER, 0, w_00008_00004_INTEGER, 0, w_00008_00006_INTEGER, 0, w_00008_00008_INTEGER, 0, 0, 0, w_00008_00012_INTEGER, w_00008_00013_INTEGER, w_00008_00014_INTEGER, 0, w_00008_00016_INTEGER, 0, w_00008_00018_INTEGER, w_00008_00019_INTEGER, w_00008_00020_INTEGER, 0, w_00009_00002_INTEGER, w_00009_00003_INTEGER, w_00009_00004_INTEGER, w_00009_00005_INTEGER, 0, 0, w_00009_00008_INTEGER, w_00009_00009_INTEGER, 0, w_00009_00011_INTEGER, 0, 0, w_00009_00014_INTEGER, 0, 0, w_00009_00017_INTEGER, 0, 0, w_00009_00020_INTEGER, objective], input_order, indomain_min, complete)
minimize objective;
