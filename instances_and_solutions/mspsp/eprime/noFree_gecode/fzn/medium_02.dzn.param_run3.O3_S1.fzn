predicate gecode_global_cardinality(array[int] of var int: x, array[int] of int: cover, array[int] of var int: counts);
array [1..1] of int: aux1 = [1];
array [1..14] of int: aux0 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0];
array [1..8] of int: aux3 = [1, 1, 1, 1, 2, 2, 1, 1];
array [1..14] of int: aux2 = [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0];
array [1..14] of int: d = [2, 6, 1, 2, 1, 4, 2, 2, 2, 1, 2, 3, 3, 3];
array [1..5] of int: rc = [1, 4, 2, 5, 3];
array [1..2] of int: aux9 = [2, 1];
array [1..14] of int: aux8 = [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0];
array [1..3] of int: aux5 = [1, 1, 1];
array [1..14] of int: aux4 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1];
array [1..8] of int: aux7 = [1, 1, 1, 1, 1, 1, 1, 1];
array [1..14] of int: aux6 = [1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1];
var 0..23: s_00001:: output_var ;
var 0..19: s_00002:: output_var ;
var 0..24: s_00003:: output_var ;
var 1..29: s_00004:: output_var ;
var 2..28: s_00005:: output_var ;
var 6..25: s_00006:: output_var ;
var 6..26: s_00007:: output_var ;
var 2..26: s_00008:: output_var ;
var 10..29: s_00009:: output_var ;
var 8..28: s_00010:: output_var ;
var 10..29: s_00011:: output_var ;
var 9..31: s_00012:: output_var ;
var 9..31: s_00013:: output_var ;
var 12..31: s_00014:: output_var ;
var bool: w_00001_00001_BOOL;
var {0,1}: w_00001_00001_INTEGER :: output_var ;
var bool: w_00001_00003_BOOL;
var {0,1}: w_00001_00003_INTEGER :: output_var ;
var bool: w_00001_00005_BOOL;
var {0,1}: w_00001_00005_INTEGER :: output_var ;
var bool: w_00001_00006_BOOL;
var {0,1}: w_00001_00006_INTEGER :: output_var ;
var bool: w_00001_00007_BOOL;
var {0,1}: w_00001_00007_INTEGER :: output_var ;
var bool: w_00001_00008_BOOL;
var {0,1}: w_00001_00008_INTEGER :: output_var ;
var bool: w_00001_00009_BOOL;
var {0,1}: w_00001_00009_INTEGER :: output_var ;
var bool: w_00001_00010_BOOL;
var {0,1}: w_00001_00010_INTEGER :: output_var ;
var bool: w_00001_00011_BOOL;
var {0,1}: w_00001_00011_INTEGER :: output_var ;
var bool: w_00001_00012_BOOL;
var {0,1}: w_00001_00012_INTEGER :: output_var ;
var bool: w_00002_00001_BOOL;
var {0,1}: w_00002_00001_INTEGER :: output_var ;
var bool: w_00002_00002_BOOL;
var {0,1}: w_00002_00002_INTEGER :: output_var ;
var bool: w_00002_00004_BOOL;
var {0,1}: w_00002_00004_INTEGER :: output_var ;
var bool: w_00002_00005_BOOL;
var {0,1}: w_00002_00005_INTEGER :: output_var ;
var bool: w_00002_00007_BOOL;
var {0,1}: w_00002_00007_INTEGER :: output_var ;
var bool: w_00002_00012_BOOL;
var {0,1}: w_00002_00012_INTEGER :: output_var ;
var bool: w_00002_00013_BOOL;
var {0,1}: w_00002_00013_INTEGER :: output_var ;
var bool: w_00002_00014_BOOL;
var {0,1}: w_00002_00014_INTEGER :: output_var ;
var bool: w_00003_00001_BOOL;
var {0,1}: w_00003_00001_INTEGER :: output_var ;
var bool: w_00003_00002_BOOL;
var {0,1}: w_00003_00002_INTEGER :: output_var ;
var bool: w_00003_00004_BOOL;
var {0,1}: w_00003_00004_INTEGER :: output_var ;
var bool: w_00003_00005_BOOL;
var {0,1}: w_00003_00005_INTEGER :: output_var ;
var bool: w_00003_00006_BOOL;
var {0,1}: w_00003_00006_INTEGER :: output_var ;
var bool: w_00003_00007_BOOL;
var {0,1}: w_00003_00007_INTEGER :: output_var ;
var bool: w_00003_00009_BOOL;
var {0,1}: w_00003_00009_INTEGER :: output_var ;
var bool: w_00003_00010_BOOL;
var {0,1}: w_00003_00010_INTEGER :: output_var ;
var bool: w_00003_00011_BOOL;
var {0,1}: w_00003_00011_INTEGER :: output_var ;
var bool: w_00003_00012_BOOL;
var {0,1}: w_00003_00012_INTEGER :: output_var ;
var bool: w_00003_00013_BOOL;
var {0,1}: w_00003_00013_INTEGER :: output_var ;
var bool: w_00003_00014_BOOL;
var {0,1}: w_00003_00014_INTEGER :: output_var ;
var bool: w_00004_00001_BOOL;
var {0,1}: w_00004_00001_INTEGER :: output_var ;
var bool: w_00004_00002_BOOL;
var {0,1}: w_00004_00002_INTEGER :: output_var ;
var bool: w_00004_00004_BOOL;
var {0,1}: w_00004_00004_INTEGER :: output_var ;
var bool: w_00004_00005_BOOL;
var {0,1}: w_00004_00005_INTEGER :: output_var ;
var bool: w_00004_00006_BOOL;
var {0,1}: w_00004_00006_INTEGER :: output_var ;
var bool: w_00004_00007_BOOL;
var {0,1}: w_00004_00007_INTEGER :: output_var ;
var bool: w_00004_00011_BOOL;
var {0,1}: w_00004_00011_INTEGER :: output_var ;
var bool: w_00004_00012_BOOL;
var {0,1}: w_00004_00012_INTEGER :: output_var ;
var bool: w_00004_00013_BOOL;
var {0,1}: w_00004_00013_INTEGER :: output_var ;
var bool: w_00004_00014_BOOL;
var {0,1}: w_00004_00014_INTEGER :: output_var ;
var bool: w_00005_00001_BOOL;
var {0,1}: w_00005_00001_INTEGER :: output_var ;
var bool: w_00005_00002_BOOL;
var {0,1}: w_00005_00002_INTEGER :: output_var ;
var bool: w_00005_00003_BOOL;
var {0,1}: w_00005_00003_INTEGER :: output_var ;
var bool: w_00005_00004_BOOL;
var {0,1}: w_00005_00004_INTEGER :: output_var ;
var bool: w_00005_00005_BOOL;
var {0,1}: w_00005_00005_INTEGER :: output_var ;
var bool: w_00005_00006_BOOL;
var {0,1}: w_00005_00006_INTEGER :: output_var ;
var bool: w_00005_00007_BOOL;
var {0,1}: w_00005_00007_INTEGER :: output_var ;
var bool: w_00005_00008_BOOL;
var {0,1}: w_00005_00008_INTEGER :: output_var ;
var bool: w_00005_00009_BOOL;
var {0,1}: w_00005_00009_INTEGER :: output_var ;
var bool: w_00005_00010_BOOL;
var {0,1}: w_00005_00010_INTEGER :: output_var ;
var bool: w_00005_00011_BOOL;
var {0,1}: w_00005_00011_INTEGER :: output_var ;
var bool: w_00005_00012_BOOL;
var {0,1}: w_00005_00012_INTEGER :: output_var ;
var bool: w_00005_00013_BOOL;
var {0,1}: w_00005_00013_INTEGER :: output_var ;
var bool: w_00005_00014_BOOL;
var {0,1}: w_00005_00014_INTEGER :: output_var ;
var bool: w_00006_00001_BOOL;
var {0,1}: w_00006_00001_INTEGER :: output_var ;
var bool: w_00006_00002_BOOL;
var {0,1}: w_00006_00002_INTEGER :: output_var ;
var bool: w_00006_00003_BOOL;
var {0,1}: w_00006_00003_INTEGER :: output_var ;
var bool: w_00006_00004_BOOL;
var {0,1}: w_00006_00004_INTEGER :: output_var ;
var bool: w_00006_00005_BOOL;
var {0,1}: w_00006_00005_INTEGER :: output_var ;
var bool: w_00006_00006_BOOL;
var {0,1}: w_00006_00006_INTEGER :: output_var ;
var bool: w_00006_00007_BOOL;
var {0,1}: w_00006_00007_INTEGER :: output_var ;
var bool: w_00006_00008_BOOL;
var {0,1}: w_00006_00008_INTEGER :: output_var ;
var bool: w_00006_00009_BOOL;
var {0,1}: w_00006_00009_INTEGER :: output_var ;
var bool: w_00006_00010_BOOL;
var {0,1}: w_00006_00010_INTEGER :: output_var ;
var bool: w_00006_00011_BOOL;
var {0,1}: w_00006_00011_INTEGER :: output_var ;
var bool: w_00006_00012_BOOL;
var {0,1}: w_00006_00012_INTEGER :: output_var ;
var bool: w_00006_00014_BOOL;
var {0,1}: w_00006_00014_INTEGER :: output_var ;
var 15..34: objective:: output_var ;
var bool: aux12_BOOL:: var_is_introduced ;
var bool: aux15_BOOL:: var_is_introduced ;
var {0,1}: aux15_INTEGER :: var_is_introduced ;
var bool: aux17_BOOL:: var_is_introduced ;
var bool: aux18_BOOL:: var_is_introduced ;
var bool: aux26_BOOL:: var_is_introduced ;
var {0,1}: aux26_INTEGER :: var_is_introduced ;
var bool: aux27_BOOL:: var_is_introduced ;
var {0,1}: aux27_INTEGER :: var_is_introduced ;
var bool: aux29_BOOL:: var_is_introduced ;
var {0,1}: aux29_INTEGER :: var_is_introduced ;
var bool: aux31_BOOL:: var_is_introduced ;
var {0,1}: aux31_INTEGER :: var_is_introduced ;
var bool: aux33_BOOL:: var_is_introduced ;
var bool: aux38_BOOL:: var_is_introduced ;
var bool: aux39_BOOL:: var_is_introduced ;
var {0,1}: aux39_INTEGER :: var_is_introduced ;
var bool: aux40_BOOL:: var_is_introduced ;
var {0,1}: aux40_INTEGER :: var_is_introduced ;
var bool: aux41_BOOL:: var_is_introduced ;
var bool: aux44_BOOL:: var_is_introduced ;
var bool: aux45_BOOL:: var_is_introduced ;
var bool: aux46_BOOL:: var_is_introduced ;
var bool: aux47_BOOL:: var_is_introduced ;
var bool: aux52_BOOL:: var_is_introduced ;
var {0,1}: aux52_INTEGER :: var_is_introduced ;
var bool: aux53_BOOL:: var_is_introduced ;
var {0,1}: aux53_INTEGER :: var_is_introduced ;
var bool: aux54_BOOL:: var_is_introduced ;
var {0,1}: aux54_INTEGER :: var_is_introduced ;
var bool: aux55_BOOL:: var_is_introduced ;
var {0,1}: aux55_INTEGER :: var_is_introduced ;
var bool: aux58_BOOL:: var_is_introduced ;
var {0,1}: aux58_INTEGER :: var_is_introduced ;
var bool: aux59_BOOL:: var_is_introduced ;
var bool: aux62_BOOL:: var_is_introduced ;
var bool: aux63_BOOL:: var_is_introduced ;
var bool: aux67_BOOL:: var_is_introduced ;
var bool: aux68_BOOL:: var_is_introduced ;
var {0,1}: aux68_INTEGER :: var_is_introduced ;
var bool: aux69_BOOL:: var_is_introduced ;
var bool: aux75_BOOL:: var_is_introduced ;
var bool: aux76_BOOL:: var_is_introduced ;
var bool: aux82_BOOL:: var_is_introduced ;
var bool: aux83_BOOL:: var_is_introduced ;
var {0,1}: aux83_INTEGER :: var_is_introduced ;
var bool: aux87_BOOL:: var_is_introduced ;
var {0,1}: aux87_INTEGER :: var_is_introduced ;
var bool: aux88_BOOL:: var_is_introduced ;
var {0,1}: aux88_INTEGER :: var_is_introduced ;
var bool: aux90_BOOL:: var_is_introduced ;
var {0,1}: aux90_INTEGER :: var_is_introduced ;
var bool: aux93_BOOL:: var_is_introduced ;
var {0,1}: aux93_INTEGER :: var_is_introduced ;
var bool: aux96_BOOL:: var_is_introduced ;
var {0,1}: aux96_INTEGER :: var_is_introduced ;
var bool: aux97_BOOL:: var_is_introduced ;
var {0,1}: aux97_INTEGER :: var_is_introduced ;
var bool: aux99_BOOL:: var_is_introduced ;
var {0,1}: aux99_INTEGER :: var_is_introduced ;
var bool: aux100_BOOL:: var_is_introduced ;
var {0,1}: aux100_INTEGER :: var_is_introduced ;
var bool: aux103_BOOL:: var_is_introduced ;
var {0,1}: aux103_INTEGER :: var_is_introduced ;
var bool: aux105_BOOL:: var_is_introduced ;
var {0,1}: aux105_INTEGER :: var_is_introduced ;
var bool: aux107_BOOL:: var_is_introduced ;
var bool: aux109_BOOL:: var_is_introduced ;
var {0,1}: aux109_INTEGER :: var_is_introduced ;
var bool: aux113_BOOL:: var_is_introduced ;
var bool: aux114_BOOL:: var_is_introduced ;
var bool: aux115_BOOL:: var_is_introduced ;
var bool: aux117_BOOL:: var_is_introduced ;
var {0,1}: aux117_INTEGER :: var_is_introduced ;
var bool: aux119_BOOL:: var_is_introduced ;
var bool: aux121_BOOL:: var_is_introduced ;
var {0,1}: aux121_INTEGER :: var_is_introduced ;
var bool: aux123_BOOL:: var_is_introduced ;
var bool: aux124_BOOL:: var_is_introduced ;
var bool: aux127_BOOL:: var_is_introduced ;
var bool: aux129_BOOL:: var_is_introduced ;
var bool: aux130_BOOL:: var_is_introduced ;
var bool: aux131_BOOL:: var_is_introduced ;
var bool: aux132_BOOL:: var_is_introduced ;
var bool: aux134_BOOL:: var_is_introduced ;
var bool: aux138_BOOL:: var_is_introduced ;
var bool: aux139_BOOL:: var_is_introduced ;
var bool: aux141_BOOL:: var_is_introduced ;
var bool: aux142_BOOL:: var_is_introduced ;
var bool: aux143_BOOL:: var_is_introduced ;
var bool: aux144_BOOL:: var_is_introduced ;
var bool: aux145_BOOL:: var_is_introduced ;
var bool: aux147_BOOL:: var_is_introduced ;
var bool: aux148_BOOL:: var_is_introduced ;
var bool: aux151_BOOL:: var_is_introduced ;
var bool: aux154_BOOL:: var_is_introduced ;
var bool: aux155_BOOL:: var_is_introduced ;
var bool: aux163_BOOL:: var_is_introduced ;
var bool: aux164_BOOL:: var_is_introduced ;
var bool: aux165_BOOL:: var_is_introduced ;
var bool: aux167_BOOL:: var_is_introduced ;
var {0,1}: aux167_INTEGER :: var_is_introduced ;
var bool: aux169_BOOL:: var_is_introduced ;
var bool: aux173_BOOL:: var_is_introduced ;
var bool: aux177_BOOL:: var_is_introduced ;
var bool: aux178_BOOL:: var_is_introduced ;
var bool: aux182_BOOL:: var_is_introduced ;
var bool: aux184_BOOL:: var_is_introduced ;
var bool: aux185_BOOL:: var_is_introduced ;
var bool: aux188_BOOL:: var_is_introduced ;
var 0..3: aux207:: var_is_introduced ;
var 0..3: aux208:: var_is_introduced ;
var 0..3: aux209:: var_is_introduced ;
var 0..3: aux210:: var_is_introduced ;
var 1..2: aux211:: var_is_introduced ;
var 12..34: aux226:: var_is_introduced ;
var 12..34: aux227:: var_is_introduced ;
var 2..25: aux228:: var_is_introduced ;
var 1..25: aux229:: var_is_introduced ;
var 9..29: aux230:: var_is_introduced ;
var 12..31: aux231:: var_is_introduced ;
var 3..31: aux232:: var_is_introduced ;
var 12..31: aux233:: var_is_introduced ;
var 6..25: aux234:: var_is_introduced ;
var 3..29: aux235:: var_is_introduced ;
var 15..34: aux236:: var_is_introduced ;
var 8..28: aux237:: var_is_introduced ;
var 10..29: aux238:: var_is_introduced ;
var 4..28: aux239:: var_is_introduced ;
var bool: aux240_BOOL:: var_is_introduced ;
var {0,1}: aux240_INTEGER :: var_is_introduced ;
var bool: aux241_BOOL:: var_is_introduced ;
var {0,1}: aux241_INTEGER :: var_is_introduced ;
var bool: aux242_BOOL:: var_is_introduced ;
var {0,1}: aux242_INTEGER :: var_is_introduced ;
var bool: aux243_BOOL:: var_is_introduced ;
var {0,1}: aux243_INTEGER :: var_is_introduced ;
var bool: aux244_BOOL:: var_is_introduced ;
var {0,1}: aux244_INTEGER :: var_is_introduced ;
var bool: aux245_BOOL:: var_is_introduced ;
var {0,1}: aux245_INTEGER :: var_is_introduced ;
var bool: aux246_BOOL:: var_is_introduced ;
var {0,1}: aux246_INTEGER :: var_is_introduced ;
var bool: aux247_BOOL:: var_is_introduced ;
var {0,1}: aux247_INTEGER :: var_is_introduced ;
var bool: aux248_BOOL:: var_is_introduced ;
var {0,1}: aux248_INTEGER :: var_is_introduced ;
var bool: aux249_BOOL:: var_is_introduced ;
var {0,1}: aux249_INTEGER :: var_is_introduced ;
var bool: aux250_BOOL:: var_is_introduced ;
var {0,1}: aux250_INTEGER :: var_is_introduced ;
var bool: aux251_BOOL:: var_is_introduced ;
var {0,1}: aux251_INTEGER :: var_is_introduced ;
var bool: aux252_BOOL:: var_is_introduced ;
var {0,1}: aux252_INTEGER :: var_is_introduced ;
var bool: aux253_BOOL:: var_is_introduced ;
var {0,1}: aux253_INTEGER :: var_is_introduced ;
var bool: aux254_BOOL:: var_is_introduced ;
var {0,1}: aux254_INTEGER :: var_is_introduced ;
var bool: aux255_BOOL:: var_is_introduced ;
var {0,1}: aux255_INTEGER :: var_is_introduced ;
var bool: aux256_BOOL:: var_is_introduced ;
var {0,1}: aux256_INTEGER :: var_is_introduced ;
var bool: aux257_BOOL:: var_is_introduced ;
var {0,1}: aux257_INTEGER :: var_is_introduced ;
var bool: aux258_BOOL:: var_is_introduced ;
var {0,1}: aux258_INTEGER :: var_is_introduced ;
var bool: aux259_BOOL:: var_is_introduced ;
var {0,1}: aux259_INTEGER :: var_is_introduced ;
var bool: aux260_BOOL:: var_is_introduced ;
var {0,1}: aux260_INTEGER :: var_is_introduced ;
var bool: aux261_BOOL:: var_is_introduced ;
var {0,1}: aux261_INTEGER :: var_is_introduced ;
var bool: aux262_BOOL:: var_is_introduced ;
var {0,1}: aux262_INTEGER :: var_is_introduced ;
var bool: aux263_BOOL:: var_is_introduced ;
var {0,1}: aux263_INTEGER :: var_is_introduced ;
var bool: aux264_BOOL:: var_is_introduced ;
var {0,1}: aux264_INTEGER :: var_is_introduced ;
var bool: aux265_BOOL:: var_is_introduced ;
var {0,1}: aux265_INTEGER :: var_is_introduced ;
var bool: aux266_BOOL:: var_is_introduced ;
var {0,1}: aux266_INTEGER :: var_is_introduced ;
var bool: aux267_BOOL:: var_is_introduced ;
var {0,1}: aux267_INTEGER :: var_is_introduced ;
var bool: aux268_BOOL:: var_is_introduced ;
var {0,1}: aux268_INTEGER :: var_is_introduced ;
var bool: aux269_BOOL:: var_is_introduced ;
var {0,1}: aux269_INTEGER :: var_is_introduced ;
var bool: aux270_BOOL:: var_is_introduced ;
var {0,1}: aux270_INTEGER :: var_is_introduced ;
var bool: aux271_BOOL:: var_is_introduced ;
var {0,1}: aux271_INTEGER :: var_is_introduced ;
var bool: aux272_BOOL:: var_is_introduced ;
var {0,1}: aux272_INTEGER :: var_is_introduced ;
var bool: aux273_BOOL:: var_is_introduced ;
var {0,1}: aux273_INTEGER :: var_is_introduced ;
var bool: aux274_BOOL:: var_is_introduced ;
var {0,1}: aux274_INTEGER :: var_is_introduced ;
var bool: aux275_BOOL:: var_is_introduced ;
var {0,1}: aux275_INTEGER :: var_is_introduced ;
var bool: aux276_BOOL:: var_is_introduced ;
var {0,1}: aux276_INTEGER :: var_is_introduced ;
var bool: aux277_BOOL:: var_is_introduced ;
var {0,1}: aux277_INTEGER :: var_is_introduced ;
var bool: aux278_BOOL:: var_is_introduced ;
var {0,1}: aux278_INTEGER :: var_is_introduced ;
var bool: aux279_BOOL:: var_is_introduced ;
var {0,1}: aux279_INTEGER :: var_is_introduced ;
var bool: aux280_BOOL:: var_is_introduced ;
var {0,1}: aux280_INTEGER :: var_is_introduced ;
var bool: aux281_BOOL:: var_is_introduced ;
var {0,1}: aux281_INTEGER :: var_is_introduced ;
var bool: aux282_BOOL:: var_is_introduced ;
var {0,1}: aux282_INTEGER :: var_is_introduced ;
var bool: aux283_BOOL:: var_is_introduced ;
var {0,1}: aux283_INTEGER :: var_is_introduced ;
var bool: aux284_BOOL:: var_is_introduced ;
var {0,1}: aux284_INTEGER :: var_is_introduced ;
var bool: aux285_BOOL:: var_is_introduced ;
var {0,1}: aux285_INTEGER :: var_is_introduced ;
var bool: aux286_BOOL:: var_is_introduced ;
var {0,1}: aux286_INTEGER :: var_is_introduced ;
var bool: aux287_BOOL:: var_is_introduced ;
var {0,1}: aux287_INTEGER :: var_is_introduced ;
var bool: aux288_BOOL:: var_is_introduced ;
var {0,1}: aux288_INTEGER :: var_is_introduced ;
var bool: aux289_BOOL:: var_is_introduced ;
var {0,1}: aux289_INTEGER :: var_is_introduced ;
var bool: aux290_BOOL:: var_is_introduced ;
var {0,1}: aux290_INTEGER :: var_is_introduced ;
var bool: aux291_BOOL:: var_is_introduced ;
var {0,1}: aux291_INTEGER :: var_is_introduced ;
var bool: aux292_BOOL:: var_is_introduced ;
var {0,1}: aux292_INTEGER :: var_is_introduced ;
var bool: aux293_BOOL:: var_is_introduced ;
var {0,1}: aux293_INTEGER :: var_is_introduced ;
var bool: aux294_BOOL:: var_is_introduced ;
var {0,1}: aux294_INTEGER :: var_is_introduced ;
var bool: aux295_BOOL:: var_is_introduced ;
var {0,1}: aux295_INTEGER :: var_is_introduced ;
var bool: aux296_BOOL:: var_is_introduced ;
var {0,1}: aux296_INTEGER :: var_is_introduced ;
var bool: aux297_BOOL:: var_is_introduced ;
var {0,1}: aux297_INTEGER :: var_is_introduced ;
var bool: aux298_BOOL:: var_is_introduced ;
var {0,1}: aux298_INTEGER :: var_is_introduced ;
var bool: aux299_BOOL:: var_is_introduced ;
var {0,1}: aux299_INTEGER :: var_is_introduced ;
var bool: aux300_BOOL:: var_is_introduced ;
var {0,1}: aux300_INTEGER :: var_is_introduced ;
var bool: aux301_BOOL:: var_is_introduced ;
var {0,1}: aux301_INTEGER :: var_is_introduced ;
var bool: aux302_BOOL:: var_is_introduced ;
var {0,1}: aux302_INTEGER :: var_is_introduced ;
var bool: aux303_BOOL:: var_is_introduced ;
var {0,1}: aux303_INTEGER :: var_is_introduced ;
var bool: aux304_BOOL:: var_is_introduced ;
var {0,1}: aux304_INTEGER :: var_is_introduced ;
var bool: aux305_BOOL:: var_is_introduced ;
var {0,1}: aux305_INTEGER :: var_is_introduced ;
var bool: aux306_BOOL:: var_is_introduced ;
var {0,1}: aux306_INTEGER :: var_is_introduced ;
var bool: aux307_BOOL:: var_is_introduced ;
var {0,1}: aux307_INTEGER :: var_is_introduced ;
var bool: aux308_BOOL:: var_is_introduced ;
var {0,1}: aux308_INTEGER :: var_is_introduced ;
var bool: aux309_BOOL:: var_is_introduced ;
var {0,1}: aux309_INTEGER :: var_is_introduced ;
var bool: aux310_BOOL:: var_is_introduced ;
var {0,1}: aux310_INTEGER :: var_is_introduced ;
var bool: aux311_BOOL:: var_is_introduced ;
var {0,1}: aux311_INTEGER :: var_is_introduced ;
var bool: aux312_BOOL:: var_is_introduced ;
var {0,1}: aux312_INTEGER :: var_is_introduced ;
var bool: aux313_BOOL:: var_is_introduced ;
var {0,1}: aux313_INTEGER :: var_is_introduced ;
var bool: aux314_BOOL:: var_is_introduced ;
var {0,1}: aux314_INTEGER :: var_is_introduced ;
var bool: aux315_BOOL:: var_is_introduced ;
var {0,1}: aux315_INTEGER :: var_is_introduced ;
var bool: aux316_BOOL:: var_is_introduced ;
var {0,1}: aux316_INTEGER :: var_is_introduced ;
var bool: aux317_BOOL:: var_is_introduced ;
var {0,1}: aux317_INTEGER :: var_is_introduced ;
var bool: aux318_BOOL:: var_is_introduced ;
var {0,1}: aux318_INTEGER :: var_is_introduced ;
var bool: aux319_BOOL:: var_is_introduced ;
var {0,1}: aux319_INTEGER :: var_is_introduced ;
var bool: aux320_BOOL:: var_is_introduced ;
var {0,1}: aux320_INTEGER :: var_is_introduced ;
var bool: aux321_BOOL:: var_is_introduced ;
var {0,1}: aux321_INTEGER :: var_is_introduced ;
var bool: aux322_BOOL:: var_is_introduced ;
var {0,1}: aux322_INTEGER :: var_is_introduced ;
var bool: aux323_BOOL:: var_is_introduced ;
var {0,1}: aux323_INTEGER :: var_is_introduced ;
var bool: aux324_BOOL:: var_is_introduced ;
var {0,1}: aux324_INTEGER :: var_is_introduced ;
var bool: aux325_BOOL:: var_is_introduced ;
var {0,1}: aux325_INTEGER :: var_is_introduced ;
var bool: aux326_BOOL:: var_is_introduced ;
var {0,1}: aux326_INTEGER :: var_is_introduced ;
var bool: aux327_BOOL:: var_is_introduced ;
var {0,1}: aux327_INTEGER :: var_is_introduced ;
var bool: aux328_BOOL:: var_is_introduced ;
var {0,1}: aux328_INTEGER :: var_is_introduced ;
var bool: aux329_BOOL:: var_is_introduced ;
var {0,1}: aux329_INTEGER :: var_is_introduced ;
var bool: aux330_BOOL:: var_is_introduced ;
var {0,1}: aux330_INTEGER :: var_is_introduced ;
var bool: aux331_BOOL:: var_is_introduced ;
var {0,1}: aux331_INTEGER :: var_is_introduced ;
var bool: aux332_BOOL:: var_is_introduced ;
var {0,1}: aux332_INTEGER :: var_is_introduced ;
var bool: aux333_BOOL:: var_is_introduced ;
var bool: aux334_BOOL:: var_is_introduced ;
var bool: aux335_BOOL:: var_is_introduced ;
var bool: aux336_BOOL:: var_is_introduced ;
var bool: aux337_BOOL:: var_is_introduced ;
var bool: aux338_BOOL:: var_is_introduced ;
var bool: aux339_BOOL:: var_is_introduced ;
var bool: aux340_BOOL:: var_is_introduced ;
var bool: aux341_BOOL:: var_is_introduced ;
var bool: aux342_BOOL:: var_is_introduced ;
var bool: aux343_BOOL:: var_is_introduced ;
var bool: aux344_BOOL:: var_is_introduced ;
var bool: aux345_BOOL:: var_is_introduced ;
var bool: aux346_BOOL:: var_is_introduced ;
var bool: aux347_BOOL:: var_is_introduced ;
var bool: aux348_BOOL:: var_is_introduced ;
var bool: aux349_BOOL:: var_is_introduced ;
var bool: aux350_BOOL:: var_is_introduced ;
var bool: aux351_BOOL:: var_is_introduced ;
var bool: aux352_BOOL:: var_is_introduced ;
var bool: aux353_BOOL:: var_is_introduced ;
var bool: aux354_BOOL:: var_is_introduced ;
var bool: aux355_BOOL:: var_is_introduced ;
var bool: aux356_BOOL:: var_is_introduced ;
var bool: aux357_BOOL:: var_is_introduced ;
var bool: aux358_BOOL:: var_is_introduced ;
var bool: aux359_BOOL:: var_is_introduced ;
var bool: aux360_BOOL:: var_is_introduced ;
var bool: aux361_BOOL:: var_is_introduced ;
var bool: aux362_BOOL:: var_is_introduced ;
var bool: aux363_BOOL:: var_is_introduced ;
var bool: aux364_BOOL:: var_is_introduced ;
var bool: aux365_BOOL:: var_is_introduced ;
var bool: aux366_BOOL:: var_is_introduced ;
var bool: aux367_BOOL:: var_is_introduced ;
var bool: aux368_BOOL:: var_is_introduced ;
var bool: aux369_BOOL:: var_is_introduced ;
var bool: aux370_BOOL:: var_is_introduced ;
var bool: aux371_BOOL:: var_is_introduced ;
var bool: aux372_BOOL:: var_is_introduced ;
var bool: aux373_BOOL:: var_is_introduced ;
var bool: aux374_BOOL:: var_is_introduced ;
var bool: aux375_BOOL:: var_is_introduced ;
var bool: aux376_BOOL:: var_is_introduced ;
var bool: aux377_BOOL:: var_is_introduced ;
var bool: aux378_BOOL:: var_is_introduced ;
var bool: aux379_BOOL:: var_is_introduced ;
var bool: aux380_BOOL:: var_is_introduced ;
var bool: aux381_BOOL:: var_is_introduced ;
var bool: aux382_BOOL:: var_is_introduced ;
var bool: aux383_BOOL:: var_is_introduced ;
var bool: aux384_BOOL:: var_is_introduced ;
var bool: aux385_BOOL:: var_is_introduced ;
var bool: aux386_BOOL:: var_is_introduced ;
var bool: aux387_BOOL:: var_is_introduced ;
var bool: aux388_BOOL:: var_is_introduced ;
var bool: aux389_BOOL:: var_is_introduced ;
var bool: aux390_BOOL:: var_is_introduced ;
var bool: aux391_BOOL:: var_is_introduced ;
var bool: aux392_BOOL:: var_is_introduced ;
var bool: aux393_BOOL:: var_is_introduced ;
var bool: aux394_BOOL:: var_is_introduced ;
var bool: aux395_BOOL:: var_is_introduced ;
var bool: aux396_BOOL:: var_is_introduced ;
var bool: aux397_BOOL:: var_is_introduced ;
var bool: aux398_BOOL:: var_is_introduced ;
var bool: aux399_BOOL:: var_is_introduced ;
var bool: aux400_BOOL:: var_is_introduced ;
var bool: aux401_BOOL:: var_is_introduced ;
var bool: aux402_BOOL:: var_is_introduced ;
var bool: aux403_BOOL:: var_is_introduced ;
var bool: aux404_BOOL:: var_is_introduced ;
var bool: aux405_BOOL:: var_is_introduced ;
var bool: aux406_BOOL:: var_is_introduced ;
var bool: aux407_BOOL:: var_is_introduced ;
var bool: aux408_BOOL:: var_is_introduced ;
var bool: aux409_BOOL:: var_is_introduced ;
var bool: aux410_BOOL:: var_is_introduced ;
var bool: aux411_BOOL:: var_is_introduced ;
var bool: aux412_BOOL:: var_is_introduced ;
var bool: aux413_BOOL:: var_is_introduced ;
var bool: aux414_BOOL:: var_is_introduced ;
var bool: aux415_BOOL:: var_is_introduced ;
var bool: aux416_BOOL:: var_is_introduced ;
var bool: aux417_BOOL:: var_is_introduced ;
var bool: aux418_BOOL:: var_is_introduced ;
var bool: aux419_BOOL:: var_is_introduced ;
var bool: aux420_BOOL:: var_is_introduced ;
var bool: aux421_BOOL:: var_is_introduced ;
var bool: aux422_BOOL:: var_is_introduced ;
var bool: aux423_BOOL:: var_is_introduced ;
var bool: aux424_BOOL:: var_is_introduced ;
var bool: aux425_BOOL:: var_is_introduced ;
var bool: aux426_BOOL:: var_is_introduced ;
var bool: aux427_BOOL:: var_is_introduced ;
var bool: aux428_BOOL:: var_is_introduced ;
var bool: aux429_BOOL:: var_is_introduced ;
var bool: aux430_BOOL:: var_is_introduced ;
var bool: aux431_BOOL:: var_is_introduced ;
var bool: aux432_BOOL:: var_is_introduced ;
var bool: aux433_BOOL:: var_is_introduced ;
var bool: aux434_BOOL:: var_is_introduced ;
var bool: aux435_BOOL:: var_is_introduced ;
var bool: aux436_BOOL:: var_is_introduced ;
var bool: aux437_BOOL:: var_is_introduced ;
var bool: aux438_BOOL:: var_is_introduced ;
var bool: aux439_BOOL:: var_is_introduced ;
var bool: aux440_BOOL:: var_is_introduced ;
var bool: aux441_BOOL:: var_is_introduced ;
var bool: aux442_BOOL:: var_is_introduced ;
var bool: aux443_BOOL:: var_is_introduced ;
var bool: aux444_BOOL:: var_is_introduced ;
var bool: aux445_BOOL:: var_is_introduced ;
var bool: aux446_BOOL:: var_is_introduced ;
var bool: aux447_BOOL:: var_is_introduced ;
var bool: aux448_BOOL:: var_is_introduced ;
var bool: aux449_BOOL:: var_is_introduced ;
var bool: aux450_BOOL:: var_is_introduced ;
var bool: aux451_BOOL:: var_is_introduced ;
var bool: aux452_BOOL:: var_is_introduced ;
var bool: aux453_BOOL:: var_is_introduced ;
var bool: aux454_BOOL:: var_is_introduced ;
var bool: aux455_BOOL:: var_is_introduced ;
var bool: aux456_BOOL:: var_is_introduced ;
var bool: aux457_BOOL:: var_is_introduced ;
var bool: aux458_BOOL:: var_is_introduced ;
var bool: aux459_BOOL:: var_is_introduced ;
var bool: aux460_BOOL:: var_is_introduced ;
var bool: aux461_BOOL:: var_is_introduced ;
var bool: aux462_BOOL:: var_is_introduced ;
var bool: aux463_BOOL:: var_is_introduced ;
var bool: aux464_BOOL:: var_is_introduced ;
var bool: aux465_BOOL:: var_is_introduced ;
var bool: aux466_BOOL:: var_is_introduced ;
var bool: aux467_BOOL:: var_is_introduced ;
var bool: aux468_BOOL:: var_is_introduced ;
var bool: aux469_BOOL:: var_is_introduced ;
var bool: aux470_BOOL:: var_is_introduced ;
var bool: aux471_BOOL:: var_is_introduced ;
var bool: aux472_BOOL:: var_is_introduced ;
var bool: aux473_BOOL:: var_is_introduced ;
var bool: aux474_BOOL:: var_is_introduced ;
var bool: aux475_BOOL:: var_is_introduced ;
var bool: aux476_BOOL:: var_is_introduced ;
var bool: aux477_BOOL:: var_is_introduced ;
var bool: aux478_BOOL:: var_is_introduced ;
var bool: aux479_BOOL:: var_is_introduced ;
var bool: aux480_BOOL:: var_is_introduced ;
var bool: aux481_BOOL:: var_is_introduced ;
var bool: aux482_BOOL:: var_is_introduced ;
var bool: aux483_BOOL:: var_is_introduced ;
var bool: aux484_BOOL:: var_is_introduced ;
var bool: aux485_BOOL:: var_is_introduced ;
var bool: aux486_BOOL:: var_is_introduced ;
var bool: aux487_BOOL:: var_is_introduced ;
var bool: aux488_BOOL:: var_is_introduced ;
var bool: aux489_BOOL:: var_is_introduced ;
var bool: aux490_BOOL:: var_is_introduced ;
var bool: aux491_BOOL:: var_is_introduced ;
var bool: aux492_BOOL:: var_is_introduced ;
var bool: aux493_BOOL:: var_is_introduced ;
var bool: aux494_BOOL:: var_is_introduced ;
var bool: aux495_BOOL:: var_is_introduced ;
var bool: aux496_BOOL:: var_is_introduced ;
var bool: aux497_BOOL:: var_is_introduced ;
var bool: aux498_BOOL:: var_is_introduced ;
var bool: aux499_BOOL:: var_is_introduced ;
var bool: aux500_BOOL:: var_is_introduced ;
var bool: aux501_BOOL:: var_is_introduced ;
var bool: aux502_BOOL:: var_is_introduced ;
var bool: aux503_BOOL:: var_is_introduced ;
var bool: aux504_BOOL:: var_is_introduced ;
var bool: aux505_BOOL:: var_is_introduced ;
var bool: aux506_BOOL:: var_is_introduced ;
var bool: aux507_BOOL:: var_is_introduced ;
var bool: aux508_BOOL:: var_is_introduced ;
var bool: aux509_BOOL:: var_is_introduced ;
var bool: aux510_BOOL:: var_is_introduced ;
var bool: aux511_BOOL:: var_is_introduced ;
var bool: aux512_BOOL:: var_is_introduced ;
var bool: aux513_BOOL:: var_is_introduced ;
var bool: aux514_BOOL:: var_is_introduced ;
var bool: aux515_BOOL:: var_is_introduced ;
var bool: aux516_BOOL:: var_is_introduced ;
var bool: aux517_BOOL:: var_is_introduced ;
var bool: aux518_BOOL:: var_is_introduced ;
var bool: aux519_BOOL:: var_is_introduced ;
var bool: aux520_BOOL:: var_is_introduced ;
var bool: aux521_BOOL:: var_is_introduced ;
var bool: aux522_BOOL:: var_is_introduced ;
var bool: aux523_BOOL:: var_is_introduced ;
var bool: aux524_BOOL:: var_is_introduced ;
var bool: aux525_BOOL:: var_is_introduced ;
var bool: aux526_BOOL:: var_is_introduced ;
var bool: aux527_BOOL:: var_is_introduced ;
var bool: aux528_BOOL:: var_is_introduced ;
var bool: aux529_BOOL:: var_is_introduced ;
var bool: aux530_BOOL:: var_is_introduced ;
var bool: aux531_BOOL:: var_is_introduced ;
var bool: aux532_BOOL:: var_is_introduced ;
var bool: aux533_BOOL:: var_is_introduced ;
var bool: aux534_BOOL:: var_is_introduced ;
var bool: aux535_BOOL:: var_is_introduced ;
var bool: aux536_BOOL:: var_is_introduced ;
var bool: aux537_BOOL:: var_is_introduced ;
var bool: aux538_BOOL:: var_is_introduced ;
var bool: aux539_BOOL:: var_is_introduced ;
var bool: aux540_BOOL:: var_is_introduced ;
var bool: aux541_BOOL:: var_is_introduced ;
var bool: aux542_BOOL:: var_is_introduced ;
var bool: aux543_BOOL:: var_is_introduced ;
var bool: aux544_BOOL:: var_is_introduced ;
var bool: aux545_BOOL:: var_is_introduced ;
var bool: aux546_BOOL:: var_is_introduced ;
var bool: aux547_BOOL:: var_is_introduced ;
var bool: aux548_BOOL:: var_is_introduced ;
var bool: aux549_BOOL:: var_is_introduced ;
var bool: aux550_BOOL:: var_is_introduced ;
var bool: aux551_BOOL:: var_is_introduced ;
var bool: aux552_BOOL:: var_is_introduced ;
var bool: aux553_BOOL:: var_is_introduced ;
var bool: aux554_BOOL:: var_is_introduced ;
var bool: aux555_BOOL:: var_is_introduced ;
var bool: aux556_BOOL:: var_is_introduced ;
var bool: aux557_BOOL:: var_is_introduced ;
var bool: aux558_BOOL:: var_is_introduced ;
var bool: aux559_BOOL:: var_is_introduced ;
var bool: aux560_BOOL:: var_is_introduced ;
var bool: aux561_BOOL:: var_is_introduced ;
var bool: aux562_BOOL:: var_is_introduced ;
var bool: aux563_BOOL:: var_is_introduced ;
var bool: aux564_BOOL:: var_is_introduced ;
var bool: aux565_BOOL:: var_is_introduced ;
var bool: aux566_BOOL:: var_is_introduced ;
var bool: aux567_BOOL:: var_is_introduced ;
var bool: aux568_BOOL:: var_is_introduced ;
var bool: aux569_BOOL:: var_is_introduced ;
var bool: aux570_BOOL:: var_is_introduced ;
var bool: aux571_BOOL:: var_is_introduced ;
var bool: aux572_BOOL:: var_is_introduced ;
var bool: aux573_BOOL:: var_is_introduced ;
var bool: aux574_BOOL:: var_is_introduced ;
var bool: aux575_BOOL:: var_is_introduced ;
var bool: aux576_BOOL:: var_is_introduced ;
var bool: aux577_BOOL:: var_is_introduced ;
var bool: aux578_BOOL:: var_is_introduced ;
var bool: aux579_BOOL:: var_is_introduced ;
var bool: aux580_BOOL:: var_is_introduced ;
var bool: aux581_BOOL:: var_is_introduced ;
var bool: aux582_BOOL:: var_is_introduced ;
var bool: aux583_BOOL:: var_is_introduced ;
var bool: aux584_BOOL:: var_is_introduced ;
var bool: aux585_BOOL:: var_is_introduced ;
var bool: aux586_BOOL:: var_is_introduced ;
var bool: aux587_BOOL:: var_is_introduced ;
var bool: aux588_BOOL:: var_is_introduced ;
var bool: aux589_BOOL:: var_is_introduced ;
var bool: aux590_BOOL:: var_is_introduced ;
var bool: aux591_BOOL:: var_is_introduced ;
var bool: aux592_BOOL:: var_is_introduced ;
var bool: aux593_BOOL:: var_is_introduced ;
var bool: aux594_BOOL:: var_is_introduced ;
var bool: aux595_BOOL:: var_is_introduced ;
var bool: aux596_BOOL:: var_is_introduced ;
var bool: aux597_BOOL:: var_is_introduced ;
var bool: aux598_BOOL:: var_is_introduced ;
var bool: aux599_BOOL:: var_is_introduced ;
var bool: aux600_BOOL:: var_is_introduced ;
var bool: aux601_BOOL:: var_is_introduced ;
var bool: aux602_BOOL:: var_is_introduced ;
var bool: aux603_BOOL:: var_is_introduced ;
var bool: aux604_BOOL:: var_is_introduced ;
var bool: aux605_BOOL:: var_is_introduced ;
var bool: aux606_BOOL:: var_is_introduced ;
var bool: aux607_BOOL:: var_is_introduced ;
var bool: aux608_BOOL:: var_is_introduced ;
var bool: aux609_BOOL:: var_is_introduced ;
var bool: aux610_BOOL:: var_is_introduced ;
var bool: aux611_BOOL:: var_is_introduced ;
var {0,1}: aux611_INTEGER :: var_is_introduced ;
var bool: aux612_BOOL:: var_is_introduced ;
var {0,1}: aux612_INTEGER :: var_is_introduced ;
var bool: aux613_BOOL:: var_is_introduced ;
var {0,1}: aux613_INTEGER :: var_is_introduced ;
var bool: aux614_BOOL:: var_is_introduced ;
var {0,1}: aux614_INTEGER :: var_is_introduced ;
var bool: aux615_BOOL:: var_is_introduced ;
var {0,1}: aux615_INTEGER :: var_is_introduced ;
var bool: aux616_BOOL:: var_is_introduced ;
var {0,1}: aux616_INTEGER :: var_is_introduced ;
var bool: aux617_BOOL:: var_is_introduced ;
var {0,1}: aux617_INTEGER :: var_is_introduced ;
var bool: aux618_BOOL:: var_is_introduced ;
var {0,1}: aux618_INTEGER :: var_is_introduced ;
var bool: aux619_BOOL:: var_is_introduced ;
var {0,1}: aux619_INTEGER :: var_is_introduced ;
var bool: aux620_BOOL:: var_is_introduced ;
var {0,1}: aux620_INTEGER :: var_is_introduced ;
var bool: aux621_BOOL:: var_is_introduced ;
var {0,1}: aux621_INTEGER :: var_is_introduced ;
var bool: aux622_BOOL:: var_is_introduced ;
var {0,1}: aux622_INTEGER :: var_is_introduced ;
var bool: aux623_BOOL:: var_is_introduced ;
var {0,1}: aux623_INTEGER :: var_is_introduced ;
var bool: aux624_BOOL:: var_is_introduced ;
var {0,1}: aux624_INTEGER :: var_is_introduced ;
var bool: aux625_BOOL:: var_is_introduced ;
var {0,1}: aux625_INTEGER :: var_is_introduced ;
var bool: aux626_BOOL:: var_is_introduced ;
var {0,1}: aux626_INTEGER :: var_is_introduced ;
var bool: aux627_BOOL:: var_is_introduced ;
var {0,1}: aux627_INTEGER :: var_is_introduced ;
var bool: aux628_BOOL:: var_is_introduced ;
var {0,1}: aux628_INTEGER :: var_is_introduced ;
var bool: aux629_BOOL:: var_is_introduced ;
var {0,1}: aux629_INTEGER :: var_is_introduced ;
var bool: aux630_BOOL:: var_is_introduced ;
var {0,1}: aux630_INTEGER :: var_is_introduced ;
var bool: aux631_BOOL:: var_is_introduced ;
var {0,1}: aux631_INTEGER :: var_is_introduced ;
var bool: aux632_BOOL:: var_is_introduced ;
var {0,1}: aux632_INTEGER :: var_is_introduced ;
var bool: aux633_BOOL:: var_is_introduced ;
var {0,1}: aux633_INTEGER :: var_is_introduced ;
var bool: aux634_BOOL:: var_is_introduced ;
var {0,1}: aux634_INTEGER :: var_is_introduced ;
var bool: aux635_BOOL:: var_is_introduced ;
var {0,1}: aux635_INTEGER :: var_is_introduced ;
var bool: aux636_BOOL:: var_is_introduced ;
var {0,1}: aux636_INTEGER :: var_is_introduced ;
var bool: aux637_BOOL:: var_is_introduced ;
var {0,1}: aux637_INTEGER :: var_is_introduced ;
var bool: aux638_BOOL:: var_is_introduced ;
var {0,1}: aux638_INTEGER :: var_is_introduced ;
var bool: aux639_BOOL:: var_is_introduced ;
var {0,1}: aux639_INTEGER :: var_is_introduced ;
var bool: aux640_BOOL:: var_is_introduced ;
var {0,1}: aux640_INTEGER :: var_is_introduced ;
var bool: aux641_BOOL:: var_is_introduced ;
var {0,1}: aux641_INTEGER :: var_is_introduced ;
var bool: aux642_BOOL:: var_is_introduced ;
var {0,1}: aux642_INTEGER :: var_is_introduced ;
var bool: aux643_BOOL:: var_is_introduced ;
var {0,1}: aux643_INTEGER :: var_is_introduced ;
var bool: aux644_BOOL:: var_is_introduced ;
var {0,1}: aux644_INTEGER :: var_is_introduced ;
var bool: aux645_BOOL:: var_is_introduced ;
var {0,1}: aux645_INTEGER :: var_is_introduced ;
var bool: aux646_BOOL:: var_is_introduced ;
var {0,1}: aux646_INTEGER :: var_is_introduced ;
var bool: aux647_BOOL:: var_is_introduced ;
var {0,1}: aux647_INTEGER :: var_is_introduced ;
var bool: aux648_BOOL:: var_is_introduced ;
var {0,1}: aux648_INTEGER :: var_is_introduced ;
var bool: aux649_BOOL:: var_is_introduced ;
var {0,1}: aux649_INTEGER :: var_is_introduced ;
var bool: aux650_BOOL:: var_is_introduced ;
var {0,1}: aux650_INTEGER :: var_is_introduced ;
var bool: aux651_BOOL:: var_is_introduced ;
var {0,1}: aux651_INTEGER :: var_is_introduced ;
var bool: aux652_BOOL:: var_is_introduced ;
var {0,1}: aux652_INTEGER :: var_is_introduced ;
var bool: aux653_BOOL:: var_is_introduced ;
var {0,1}: aux653_INTEGER :: var_is_introduced ;
var bool: aux654_BOOL:: var_is_introduced ;
var {0,1}: aux654_INTEGER :: var_is_introduced ;
var bool: aux655_BOOL:: var_is_introduced ;
var {0,1}: aux655_INTEGER :: var_is_introduced ;
var bool: aux656_BOOL:: var_is_introduced ;
var {0,1}: aux656_INTEGER :: var_is_introduced ;
var bool: aux657_BOOL:: var_is_introduced ;
var {0,1}: aux657_INTEGER :: var_is_introduced ;
var bool: aux658_BOOL:: var_is_introduced ;
var {0,1}: aux658_INTEGER :: var_is_introduced ;
var bool: aux659_BOOL:: var_is_introduced ;
var {0,1}: aux659_INTEGER :: var_is_introduced ;
var bool: aux660_BOOL:: var_is_introduced ;
var {0,1}: aux660_INTEGER :: var_is_introduced ;
var bool: aux661_BOOL:: var_is_introduced ;
var {0,1}: aux661_INTEGER :: var_is_introduced ;
var bool: aux662_BOOL:: var_is_introduced ;
var {0,1}: aux662_INTEGER :: var_is_introduced ;
var bool: aux663_BOOL:: var_is_introduced ;
var {0,1}: aux663_INTEGER :: var_is_introduced ;
var bool: aux664_BOOL:: var_is_introduced ;
var {0,1}: aux664_INTEGER :: var_is_introduced ;
var bool: aux665_BOOL:: var_is_introduced ;
var {0,1}: aux665_INTEGER :: var_is_introduced ;
var bool: aux666_BOOL:: var_is_introduced ;
var {0,1}: aux666_INTEGER :: var_is_introduced ;
var bool: aux667_BOOL:: var_is_introduced ;
var {0,1}: aux667_INTEGER :: var_is_introduced ;
var bool: aux668_BOOL:: var_is_introduced ;
var {0,1}: aux668_INTEGER :: var_is_introduced ;
var bool: aux669_BOOL:: var_is_introduced ;
var {0,1}: aux669_INTEGER :: var_is_introduced ;
var bool: aux670_BOOL:: var_is_introduced ;
var {0,1}: aux670_INTEGER :: var_is_introduced ;
var bool: aux671_BOOL:: var_is_introduced ;
var {0,1}: aux671_INTEGER :: var_is_introduced ;
var bool: aux672_BOOL:: var_is_introduced ;
var {0,1}: aux672_INTEGER :: var_is_introduced ;
var bool: aux673_BOOL:: var_is_introduced ;
var {0,1}: aux673_INTEGER :: var_is_introduced ;
var bool: aux674_BOOL:: var_is_introduced ;
var {0,1}: aux674_INTEGER :: var_is_introduced ;
var bool: aux675_BOOL:: var_is_introduced ;
var {0,1}: aux675_INTEGER :: var_is_introduced ;
var bool: aux676_BOOL:: var_is_introduced ;
var {0,1}: aux676_INTEGER :: var_is_introduced ;
var bool: aux677_BOOL:: var_is_introduced ;
var {0,1}: aux677_INTEGER :: var_is_introduced ;
var bool: aux678_BOOL:: var_is_introduced ;
var {0,1}: aux678_INTEGER :: var_is_introduced ;
var bool: aux679_BOOL:: var_is_introduced ;
var {0,1}: aux679_INTEGER :: var_is_introduced ;
var bool: aux680_BOOL:: var_is_introduced ;
var {0,1}: aux680_INTEGER :: var_is_introduced ;
var bool: aux681_BOOL:: var_is_introduced ;
var {0,1}: aux681_INTEGER :: var_is_introduced ;
var bool: aux682_BOOL:: var_is_introduced ;
var {0,1}: aux682_INTEGER :: var_is_introduced ;
var bool: aux683_BOOL:: var_is_introduced ;
var {0,1}: aux683_INTEGER :: var_is_introduced ;
var bool: aux684_BOOL:: var_is_introduced ;
var {0,1}: aux684_INTEGER :: var_is_introduced ;
var bool: aux685_BOOL:: var_is_introduced ;
var {0,1}: aux685_INTEGER :: var_is_introduced ;
var bool: aux686_BOOL:: var_is_introduced ;
var {0,1}: aux686_INTEGER :: var_is_introduced ;
var bool: aux687_BOOL:: var_is_introduced ;
var {0,1}: aux687_INTEGER :: var_is_introduced ;
var bool: aux688_BOOL:: var_is_introduced ;
var {0,1}: aux688_INTEGER :: var_is_introduced ;
var bool: aux689_BOOL:: var_is_introduced ;
var {0,1}: aux689_INTEGER :: var_is_introduced ;
var bool: aux690_BOOL:: var_is_introduced ;
var {0,1}: aux690_INTEGER :: var_is_introduced ;
var bool: aux691_BOOL:: var_is_introduced ;
var {0,1}: aux691_INTEGER :: var_is_introduced ;
var bool: aux692_BOOL:: var_is_introduced ;
var {0,1}: aux692_INTEGER :: var_is_introduced ;
var bool: aux693_BOOL:: var_is_introduced ;
var {0,1}: aux693_INTEGER :: var_is_introduced ;
var bool: aux694_BOOL:: var_is_introduced ;
var {0,1}: aux694_INTEGER :: var_is_introduced ;
var bool: aux695_BOOL:: var_is_introduced ;
var {0,1}: aux695_INTEGER :: var_is_introduced ;
var bool: aux696_BOOL:: var_is_introduced ;
var {0,1}: aux696_INTEGER :: var_is_introduced ;
var bool: aux697_BOOL:: var_is_introduced ;
var {0,1}: aux697_INTEGER :: var_is_introduced ;
var bool: aux698_BOOL:: var_is_introduced ;
var {0,1}: aux698_INTEGER :: var_is_introduced ;
var bool: aux699_BOOL:: var_is_introduced ;
var {0,1}: aux699_INTEGER :: var_is_introduced ;
var bool: aux700_BOOL:: var_is_introduced ;
var {0,1}: aux700_INTEGER :: var_is_introduced ;
var bool: aux701_BOOL:: var_is_introduced ;
var {0,1}: aux701_INTEGER :: var_is_introduced ;
var bool: aux702_BOOL:: var_is_introduced ;
var {0,1}: aux702_INTEGER :: var_is_introduced ;
var bool: aux703_BOOL:: var_is_introduced ;
var {0,1}: aux703_INTEGER :: var_is_introduced ;
var bool: aux704_BOOL:: var_is_introduced ;
var {0,1}: aux704_INTEGER :: var_is_introduced ;
var bool: aux705_BOOL:: var_is_introduced ;
var {0,1}: aux705_INTEGER :: var_is_introduced ;
var bool: aux706_BOOL:: var_is_introduced ;
var {0,1}: aux706_INTEGER :: var_is_introduced ;
var bool: aux707_BOOL:: var_is_introduced ;
var {0,1}: aux707_INTEGER :: var_is_introduced ;
var bool: aux708_BOOL:: var_is_introduced ;
var {0,1}: aux708_INTEGER :: var_is_introduced ;
var bool: aux709_BOOL:: var_is_introduced ;
var {0,1}: aux709_INTEGER :: var_is_introduced ;
var bool: aux710_BOOL:: var_is_introduced ;
var {0,1}: aux710_INTEGER :: var_is_introduced ;
var bool: aux711_BOOL:: var_is_introduced ;
var {0,1}: aux711_INTEGER :: var_is_introduced ;
var bool: aux712_BOOL:: var_is_introduced ;
var {0,1}: aux712_INTEGER :: var_is_introduced ;
var bool: aux713_BOOL:: var_is_introduced ;
var {0,1}: aux713_INTEGER :: var_is_introduced ;
var bool: aux714_BOOL:: var_is_introduced ;
var {0,1}: aux714_INTEGER :: var_is_introduced ;
var bool: aux715_BOOL:: var_is_introduced ;
var {0,1}: aux715_INTEGER :: var_is_introduced ;
var bool: aux716_BOOL:: var_is_introduced ;
var {0,1}: aux716_INTEGER :: var_is_introduced ;
var bool: aux717_BOOL:: var_is_introduced ;
var {0,1}: aux717_INTEGER :: var_is_introduced ;
var bool: aux718_BOOL:: var_is_introduced ;
var {0,1}: aux718_INTEGER :: var_is_introduced ;
var bool: aux719_BOOL:: var_is_introduced ;
var {0,1}: aux719_INTEGER :: var_is_introduced ;
var bool: aux720_BOOL:: var_is_introduced ;
var {0,1}: aux720_INTEGER :: var_is_introduced ;
var bool: aux721_BOOL:: var_is_introduced ;
var {0,1}: aux721_INTEGER :: var_is_introduced ;
var bool: aux722_BOOL:: var_is_introduced ;
var {0,1}: aux722_INTEGER :: var_is_introduced ;
var bool: aux723_BOOL:: var_is_introduced ;
var {0,1}: aux723_INTEGER :: var_is_introduced ;
var bool: aux724_BOOL:: var_is_introduced ;
var {0,1}: aux724_INTEGER :: var_is_introduced ;
var bool: aux725_BOOL:: var_is_introduced ;
var {0,1}: aux725_INTEGER :: var_is_introduced ;
var bool: aux726_BOOL:: var_is_introduced ;
var {0,1}: aux726_INTEGER :: var_is_introduced ;
var bool: aux727_BOOL:: var_is_introduced ;
var {0,1}: aux727_INTEGER :: var_is_introduced ;
var bool: aux728_BOOL:: var_is_introduced ;
var {0,1}: aux728_INTEGER :: var_is_introduced ;
var bool: aux729_BOOL:: var_is_introduced ;
var {0,1}: aux729_INTEGER :: var_is_introduced ;
var bool: aux730_BOOL:: var_is_introduced ;
var {0,1}: aux730_INTEGER :: var_is_introduced ;
var bool: aux731_BOOL:: var_is_introduced ;
var {0,1}: aux731_INTEGER :: var_is_introduced ;
var bool: aux732_BOOL:: var_is_introduced ;
var {0,1}: aux732_INTEGER :: var_is_introduced ;
var bool: aux733_BOOL:: var_is_introduced ;
var {0,1}: aux733_INTEGER :: var_is_introduced ;
var bool: aux734_BOOL:: var_is_introduced ;
var {0,1}: aux734_INTEGER :: var_is_introduced ;
var bool: aux735_BOOL:: var_is_introduced ;
var {0,1}: aux735_INTEGER :: var_is_introduced ;
var bool: aux736_BOOL:: var_is_introduced ;
var {0,1}: aux736_INTEGER :: var_is_introduced ;
var bool: aux737_BOOL:: var_is_introduced ;
var {0,1}: aux737_INTEGER :: var_is_introduced ;
var bool: aux738_BOOL:: var_is_introduced ;
var {0,1}: aux738_INTEGER :: var_is_introduced ;
var bool: aux739_BOOL:: var_is_introduced ;
var {0,1}: aux739_INTEGER :: var_is_introduced ;
var bool: aux745_BOOL:: var_is_introduced ;
var {0,1}: aux745_INTEGER :: var_is_introduced ;
var bool: aux746_BOOL:: var_is_introduced ;
var {0,1}: aux746_INTEGER :: var_is_introduced ;
var bool: aux747_BOOL:: var_is_introduced ;
var {0,1}: aux747_INTEGER :: var_is_introduced ;
var bool: aux748_BOOL:: var_is_introduced ;
var {0,1}: aux748_INTEGER :: var_is_introduced ;
var bool: aux749_BOOL:: var_is_introduced ;
var {0,1}: aux749_INTEGER :: var_is_introduced ;
var bool: aux750_BOOL:: var_is_introduced ;
var {0,1}: aux750_INTEGER :: var_is_introduced ;
var bool: aux751_BOOL:: var_is_introduced ;
var {0,1}: aux751_INTEGER :: var_is_introduced ;
var bool: aux752_BOOL:: var_is_introduced ;
var {0,1}: aux752_INTEGER :: var_is_introduced ;
var bool: aux753_BOOL:: var_is_introduced ;
var {0,1}: aux753_INTEGER :: var_is_introduced ;
var bool: aux754_BOOL:: var_is_introduced ;
var {0,1}: aux754_INTEGER :: var_is_introduced ;
var bool: aux755_BOOL:: var_is_introduced ;
var {0,1}: aux755_INTEGER :: var_is_introduced ;
var bool: aux756_BOOL:: var_is_introduced ;
var {0,1}: aux756_INTEGER :: var_is_introduced ;
var bool: aux757_BOOL:: var_is_introduced ;
var {0,1}: aux757_INTEGER :: var_is_introduced ;
var bool: aux758_BOOL:: var_is_introduced ;
var {0,1}: aux758_INTEGER :: var_is_introduced ;
var bool: aux759_BOOL:: var_is_introduced ;
var {0,1}: aux759_INTEGER :: var_is_introduced ;
var bool: aux760_BOOL:: var_is_introduced ;
var {0,1}: aux760_INTEGER :: var_is_introduced ;
var bool: aux761_BOOL:: var_is_introduced ;
var {0,1}: aux761_INTEGER :: var_is_introduced ;
var bool: aux762_BOOL:: var_is_introduced ;
var {0,1}: aux762_INTEGER :: var_is_introduced ;
var bool: aux763_BOOL:: var_is_introduced ;
var {0,1}: aux763_INTEGER :: var_is_introduced ;
var bool: aux764_BOOL:: var_is_introduced ;
var {0,1}: aux764_INTEGER :: var_is_introduced ;
var bool: aux765_BOOL:: var_is_introduced ;
var {0,1}: aux765_INTEGER :: var_is_introduced ;
var bool: aux766_BOOL:: var_is_introduced ;
var {0,1}: aux766_INTEGER :: var_is_introduced ;
var bool: aux767_BOOL:: var_is_introduced ;
var {0,1}: aux767_INTEGER :: var_is_introduced ;
var bool: aux768_BOOL:: var_is_introduced ;
var {0,1}: aux768_INTEGER :: var_is_introduced ;
var bool: aux769_BOOL:: var_is_introduced ;
var {0,1}: aux769_INTEGER :: var_is_introduced ;
var bool: aux770_BOOL:: var_is_introduced ;
var {0,1}: aux770_INTEGER :: var_is_introduced ;
var bool: aux771_BOOL:: var_is_introduced ;
var {0,1}: aux771_INTEGER :: var_is_introduced ;
var bool: aux772_BOOL:: var_is_introduced ;
var {0,1}: aux772_INTEGER :: var_is_introduced ;
var bool: aux773_BOOL:: var_is_introduced ;
var {0,1}: aux773_INTEGER :: var_is_introduced ;
var bool: aux774_BOOL:: var_is_introduced ;
var {0,1}: aux774_INTEGER :: var_is_introduced ;
var bool: aux775_BOOL:: var_is_introduced ;
var {0,1}: aux775_INTEGER :: var_is_introduced ;
var bool: aux776_BOOL:: var_is_introduced ;
var {0,1}: aux776_INTEGER :: var_is_introduced ;
var bool: aux777_BOOL:: var_is_introduced ;
var {0,1}: aux777_INTEGER :: var_is_introduced ;
var bool: aux778_BOOL:: var_is_introduced ;
var {0,1}: aux778_INTEGER :: var_is_introduced ;
var bool: aux779_BOOL:: var_is_introduced ;
var {0,1}: aux779_INTEGER :: var_is_introduced ;
var bool: aux780_BOOL:: var_is_introduced ;
var {0,1}: aux780_INTEGER :: var_is_introduced ;
var bool: aux781_BOOL:: var_is_introduced ;
var {0,1}: aux781_INTEGER :: var_is_introduced ;
var bool: aux782_BOOL:: var_is_introduced ;
var {0,1}: aux782_INTEGER :: var_is_introduced ;
var bool: aux783_BOOL:: var_is_introduced ;
var {0,1}: aux783_INTEGER :: var_is_introduced ;
var bool: aux784_BOOL:: var_is_introduced ;
var {0,1}: aux784_INTEGER :: var_is_introduced ;
var bool: aux785_BOOL:: var_is_introduced ;
var {0,1}: aux785_INTEGER :: var_is_introduced ;
var bool: aux786_BOOL:: var_is_introduced ;
var {0,1}: aux786_INTEGER :: var_is_introduced ;
var bool: aux787_BOOL:: var_is_introduced ;
var {0,1}: aux787_INTEGER :: var_is_introduced ;
var bool: aux788_BOOL:: var_is_introduced ;
var {0,1}: aux788_INTEGER :: var_is_introduced ;
var bool: aux789_BOOL:: var_is_introduced ;
var {0,1}: aux789_INTEGER :: var_is_introduced ;
var bool: aux790_BOOL:: var_is_introduced ;
var {0,1}: aux790_INTEGER :: var_is_introduced ;
var bool: aux791_BOOL:: var_is_introduced ;
var {0,1}: aux791_INTEGER :: var_is_introduced ;
var bool: aux792_BOOL:: var_is_introduced ;
var {0,1}: aux792_INTEGER :: var_is_introduced ;
var bool: aux793_BOOL:: var_is_introduced ;
var {0,1}: aux793_INTEGER :: var_is_introduced ;
var bool: aux794_BOOL:: var_is_introduced ;
var {0,1}: aux794_INTEGER :: var_is_introduced ;
var bool: aux795_BOOL:: var_is_introduced ;
var {0,1}: aux795_INTEGER :: var_is_introduced ;
var bool: aux796_BOOL:: var_is_introduced ;
var {0,1}: aux796_INTEGER :: var_is_introduced ;
var bool: aux797_BOOL:: var_is_introduced ;
var {0,1}: aux797_INTEGER :: var_is_introduced ;
var bool: aux798_BOOL:: var_is_introduced ;
var {0,1}: aux798_INTEGER :: var_is_introduced ;
var bool: aux799_BOOL:: var_is_introduced ;
var {0,1}: aux799_INTEGER :: var_is_introduced ;
var bool: aux800_BOOL:: var_is_introduced ;
var {0,1}: aux800_INTEGER :: var_is_introduced ;
var bool: aux801_BOOL:: var_is_introduced ;
var {0,1}: aux801_INTEGER :: var_is_introduced ;
var bool: aux802_BOOL:: var_is_introduced ;
var {0,1}: aux802_INTEGER :: var_is_introduced ;
var bool: aux803_BOOL:: var_is_introduced ;
var {0,1}: aux803_INTEGER :: var_is_introduced ;
var bool: aux804_BOOL:: var_is_introduced ;
var {0,1}: aux804_INTEGER :: var_is_introduced ;
var bool: aux805_BOOL:: var_is_introduced ;
var {0,1}: aux805_INTEGER :: var_is_introduced ;
var bool: aux806_BOOL:: var_is_introduced ;
var {0,1}: aux806_INTEGER :: var_is_introduced ;
var bool: aux807_BOOL:: var_is_introduced ;
var {0,1}: aux807_INTEGER :: var_is_introduced ;
var bool: aux808_BOOL:: var_is_introduced ;
var {0,1}: aux808_INTEGER :: var_is_introduced ;
var bool: aux809_BOOL:: var_is_introduced ;
var {0,1}: aux809_INTEGER :: var_is_introduced ;
var bool: aux810_BOOL:: var_is_introduced ;
var {0,1}: aux810_INTEGER :: var_is_introduced ;
var bool: aux811_BOOL:: var_is_introduced ;
var {0,1}: aux811_INTEGER :: var_is_introduced ;
var bool: aux812_BOOL:: var_is_introduced ;
var {0,1}: aux812_INTEGER :: var_is_introduced ;
var bool: aux813_BOOL:: var_is_introduced ;
var {0,1}: aux813_INTEGER :: var_is_introduced ;
var bool: aux814_BOOL:: var_is_introduced ;
var {0,1}: aux814_INTEGER :: var_is_introduced ;
var bool: aux815_BOOL:: var_is_introduced ;
var {0,1}: aux815_INTEGER :: var_is_introduced ;
var bool: aux816_BOOL:: var_is_introduced ;
var {0,1}: aux816_INTEGER :: var_is_introduced ;
var bool: aux817_BOOL:: var_is_introduced ;
var {0,1}: aux817_INTEGER :: var_is_introduced ;
var bool: aux818_BOOL:: var_is_introduced ;
var {0,1}: aux818_INTEGER :: var_is_introduced ;
var bool: aux819_BOOL:: var_is_introduced ;
var {0,1}: aux819_INTEGER :: var_is_introduced ;
var bool: aux820_BOOL:: var_is_introduced ;
var {0,1}: aux820_INTEGER :: var_is_introduced ;
var bool: aux821_BOOL:: var_is_introduced ;
var {0,1}: aux821_INTEGER :: var_is_introduced ;
var bool: aux822_BOOL:: var_is_introduced ;
var {0,1}: aux822_INTEGER :: var_is_introduced ;
var bool: aux823_BOOL:: var_is_introduced ;
var {0,1}: aux823_INTEGER :: var_is_introduced ;
var bool: aux824_BOOL:: var_is_introduced ;
var {0,1}: aux824_INTEGER :: var_is_introduced ;
var bool: aux825_BOOL:: var_is_introduced ;
var {0,1}: aux825_INTEGER :: var_is_introduced ;
var bool: aux826_BOOL:: var_is_introduced ;
var {0,1}: aux826_INTEGER :: var_is_introduced ;
var bool: aux827_BOOL:: var_is_introduced ;
var {0,1}: aux827_INTEGER :: var_is_introduced ;
var bool: aux828_BOOL:: var_is_introduced ;
var {0,1}: aux828_INTEGER :: var_is_introduced ;
var bool: aux829_BOOL:: var_is_introduced ;
var {0,1}: aux829_INTEGER :: var_is_introduced ;
var bool: aux830_BOOL:: var_is_introduced ;
var {0,1}: aux830_INTEGER :: var_is_introduced ;
var bool: aux831_BOOL:: var_is_introduced ;
var bool: aux832_BOOL:: var_is_introduced ;
var bool: aux833_BOOL:: var_is_introduced ;
var bool: aux834_BOOL:: var_is_introduced ;
var bool: aux835_BOOL:: var_is_introduced ;
var bool: aux836_BOOL:: var_is_introduced ;
var bool: aux837_BOOL:: var_is_introduced ;
var bool: aux838_BOOL:: var_is_introduced ;
var bool: aux839_BOOL:: var_is_introduced ;
var bool: aux840_BOOL:: var_is_introduced ;
var bool: aux841_BOOL:: var_is_introduced ;
var bool: aux842_BOOL:: var_is_introduced ;
var bool: aux843_BOOL:: var_is_introduced ;
var bool: aux844_BOOL:: var_is_introduced ;
var bool: aux845_BOOL:: var_is_introduced ;
var bool: aux846_BOOL:: var_is_introduced ;
var bool: aux847_BOOL:: var_is_introduced ;
var bool: aux848_BOOL:: var_is_introduced ;
var bool: aux849_BOOL:: var_is_introduced ;
var bool: aux850_BOOL:: var_is_introduced ;
var bool: aux851_BOOL:: var_is_introduced ;
var bool: aux852_BOOL:: var_is_introduced ;
var bool: aux853_BOOL:: var_is_introduced ;
var bool: aux854_BOOL:: var_is_introduced ;
var bool: aux855_BOOL:: var_is_introduced ;
var bool: aux856_BOOL:: var_is_introduced ;
var bool: aux857_BOOL:: var_is_introduced ;
var bool: aux858_BOOL:: var_is_introduced ;
var bool: aux859_BOOL:: var_is_introduced ;
var bool: aux860_BOOL:: var_is_introduced ;
var bool: aux861_BOOL:: var_is_introduced ;
var bool: aux862_BOOL:: var_is_introduced ;
var bool: aux863_BOOL:: var_is_introduced ;
var bool: aux864_BOOL:: var_is_introduced ;
var bool: aux865_BOOL:: var_is_introduced ;
var bool: aux866_BOOL:: var_is_introduced ;
var bool: aux867_BOOL:: var_is_introduced ;
var bool: aux868_BOOL:: var_is_introduced ;
var bool: aux869_BOOL:: var_is_introduced ;
var bool: aux870_BOOL:: var_is_introduced ;
var bool: aux871_BOOL:: var_is_introduced ;
var bool: aux872_BOOL:: var_is_introduced ;
var bool: aux873_BOOL:: var_is_introduced ;
var bool: aux874_BOOL:: var_is_introduced ;
var bool: aux875_BOOL:: var_is_introduced ;
var bool: aux876_BOOL:: var_is_introduced ;
var bool: aux877_BOOL:: var_is_introduced ;
var bool: aux878_BOOL:: var_is_introduced ;
var bool: aux879_BOOL:: var_is_introduced ;
var bool: aux880_BOOL:: var_is_introduced ;
var bool: aux881_BOOL:: var_is_introduced ;
var bool: aux882_BOOL:: var_is_introduced ;
var bool: aux883_BOOL:: var_is_introduced ;
var bool: aux884_BOOL:: var_is_introduced ;
var bool: aux885_BOOL:: var_is_introduced ;
var bool: aux886_BOOL:: var_is_introduced ;
var bool: aux887_BOOL:: var_is_introduced ;
var bool: aux888_BOOL:: var_is_introduced ;
var bool: aux889_BOOL:: var_is_introduced ;
var bool: aux890_BOOL:: var_is_introduced ;
var bool: aux891_BOOL:: var_is_introduced ;
var bool: aux892_BOOL:: var_is_introduced ;
var bool: aux893_BOOL:: var_is_introduced ;
var bool: aux894_BOOL:: var_is_introduced ;
var bool: aux895_BOOL:: var_is_introduced ;
var bool: aux896_BOOL:: var_is_introduced ;
var bool: aux897_BOOL:: var_is_introduced ;
var bool: aux898_BOOL:: var_is_introduced ;
var bool: aux899_BOOL:: var_is_introduced ;
var bool: aux900_BOOL:: var_is_introduced ;
var bool: aux901_BOOL:: var_is_introduced ;
var bool: aux902_BOOL:: var_is_introduced ;
var bool: aux903_BOOL:: var_is_introduced ;
var bool: aux904_BOOL:: var_is_introduced ;
var bool: aux905_BOOL:: var_is_introduced ;
var bool: aux906_BOOL:: var_is_introduced ;
var bool: aux907_BOOL:: var_is_introduced ;
var bool: aux908_BOOL:: var_is_introduced ;
var bool: aux909_BOOL:: var_is_introduced ;
var bool: aux910_BOOL:: var_is_introduced ;
var bool: aux911_BOOL:: var_is_introduced ;
var bool: aux912_BOOL:: var_is_introduced ;
var bool: aux913_BOOL:: var_is_introduced ;
var bool: aux914_BOOL:: var_is_introduced ;
var bool: aux915_BOOL:: var_is_introduced ;
var bool: aux916_BOOL:: var_is_introduced ;
var bool: aux917_BOOL:: var_is_introduced ;
var {0,1}: aux917_INTEGER :: var_is_introduced ;
var bool: aux918_BOOL:: var_is_introduced ;
var {0,1}: aux918_INTEGER :: var_is_introduced ;
var bool: aux919_BOOL:: var_is_introduced ;
var {0,1}: aux919_INTEGER :: var_is_introduced ;
var bool: aux920_BOOL:: var_is_introduced ;
var {0,1}: aux920_INTEGER :: var_is_introduced ;
var bool: aux921_BOOL:: var_is_introduced ;
var {0,1}: aux921_INTEGER :: var_is_introduced ;
var bool: aux922_BOOL:: var_is_introduced ;
var {0,1}: aux922_INTEGER :: var_is_introduced ;
var bool: aux923_BOOL:: var_is_introduced ;
var {0,1}: aux923_INTEGER :: var_is_introduced ;
var bool: aux924_BOOL:: var_is_introduced ;
var {0,1}: aux924_INTEGER :: var_is_introduced ;
var bool: aux925_BOOL:: var_is_introduced ;
var {0,1}: aux925_INTEGER :: var_is_introduced ;
var bool: aux926_BOOL:: var_is_introduced ;
var {0,1}: aux926_INTEGER :: var_is_introduced ;
constraint bool2int(w_00001_00001_BOOL,w_00001_00001_INTEGER);
constraint bool2int(w_00001_00003_BOOL,w_00001_00003_INTEGER);
constraint bool2int(w_00001_00005_BOOL,w_00001_00005_INTEGER);
constraint bool2int(w_00001_00006_BOOL,w_00001_00006_INTEGER);
constraint bool2int(w_00001_00007_BOOL,w_00001_00007_INTEGER);
constraint bool2int(w_00001_00008_BOOL,w_00001_00008_INTEGER);
constraint bool2int(w_00001_00009_BOOL,w_00001_00009_INTEGER);
constraint bool2int(w_00001_00010_BOOL,w_00001_00010_INTEGER);
constraint bool2int(w_00001_00011_BOOL,w_00001_00011_INTEGER);
constraint bool2int(w_00001_00012_BOOL,w_00001_00012_INTEGER);
constraint bool2int(w_00002_00001_BOOL,w_00002_00001_INTEGER);
constraint bool2int(w_00002_00002_BOOL,w_00002_00002_INTEGER);
constraint bool2int(w_00002_00004_BOOL,w_00002_00004_INTEGER);
constraint bool2int(w_00002_00005_BOOL,w_00002_00005_INTEGER);
constraint bool2int(w_00002_00007_BOOL,w_00002_00007_INTEGER);
constraint bool2int(w_00002_00012_BOOL,w_00002_00012_INTEGER);
constraint bool2int(w_00002_00013_BOOL,w_00002_00013_INTEGER);
constraint bool2int(w_00002_00014_BOOL,w_00002_00014_INTEGER);
constraint bool2int(w_00003_00001_BOOL,w_00003_00001_INTEGER);
constraint bool2int(w_00003_00002_BOOL,w_00003_00002_INTEGER);
constraint bool2int(w_00003_00004_BOOL,w_00003_00004_INTEGER);
constraint bool2int(w_00003_00005_BOOL,w_00003_00005_INTEGER);
constraint bool2int(w_00003_00006_BOOL,w_00003_00006_INTEGER);
constraint bool2int(w_00003_00007_BOOL,w_00003_00007_INTEGER);
constraint bool2int(w_00003_00009_BOOL,w_00003_00009_INTEGER);
constraint bool2int(w_00003_00010_BOOL,w_00003_00010_INTEGER);
constraint bool2int(w_00003_00011_BOOL,w_00003_00011_INTEGER);
constraint bool2int(w_00003_00012_BOOL,w_00003_00012_INTEGER);
constraint bool2int(w_00003_00013_BOOL,w_00003_00013_INTEGER);
constraint bool2int(w_00003_00014_BOOL,w_00003_00014_INTEGER);
constraint bool2int(w_00004_00001_BOOL,w_00004_00001_INTEGER);
constraint bool2int(w_00004_00002_BOOL,w_00004_00002_INTEGER);
constraint bool2int(w_00004_00004_BOOL,w_00004_00004_INTEGER);
constraint bool2int(w_00004_00005_BOOL,w_00004_00005_INTEGER);
constraint bool2int(w_00004_00006_BOOL,w_00004_00006_INTEGER);
constraint bool2int(w_00004_00007_BOOL,w_00004_00007_INTEGER);
constraint bool2int(w_00004_00011_BOOL,w_00004_00011_INTEGER);
constraint bool2int(w_00004_00012_BOOL,w_00004_00012_INTEGER);
constraint bool2int(w_00004_00013_BOOL,w_00004_00013_INTEGER);
constraint bool2int(w_00004_00014_BOOL,w_00004_00014_INTEGER);
constraint bool2int(w_00005_00001_BOOL,w_00005_00001_INTEGER);
constraint bool2int(w_00005_00002_BOOL,w_00005_00002_INTEGER);
constraint bool2int(w_00005_00003_BOOL,w_00005_00003_INTEGER);
constraint bool2int(w_00005_00004_BOOL,w_00005_00004_INTEGER);
constraint bool2int(w_00005_00005_BOOL,w_00005_00005_INTEGER);
constraint bool2int(w_00005_00006_BOOL,w_00005_00006_INTEGER);
constraint bool2int(w_00005_00007_BOOL,w_00005_00007_INTEGER);
constraint bool2int(w_00005_00008_BOOL,w_00005_00008_INTEGER);
constraint bool2int(w_00005_00009_BOOL,w_00005_00009_INTEGER);
constraint bool2int(w_00005_00010_BOOL,w_00005_00010_INTEGER);
constraint bool2int(w_00005_00011_BOOL,w_00005_00011_INTEGER);
constraint bool2int(w_00005_00012_BOOL,w_00005_00012_INTEGER);
constraint bool2int(w_00005_00013_BOOL,w_00005_00013_INTEGER);
constraint bool2int(w_00005_00014_BOOL,w_00005_00014_INTEGER);
constraint bool2int(w_00006_00001_BOOL,w_00006_00001_INTEGER);
constraint bool2int(w_00006_00002_BOOL,w_00006_00002_INTEGER);
constraint bool2int(w_00006_00003_BOOL,w_00006_00003_INTEGER);
constraint bool2int(w_00006_00004_BOOL,w_00006_00004_INTEGER);
constraint bool2int(w_00006_00005_BOOL,w_00006_00005_INTEGER);
constraint bool2int(w_00006_00006_BOOL,w_00006_00006_INTEGER);
constraint bool2int(w_00006_00007_BOOL,w_00006_00007_INTEGER);
constraint bool2int(w_00006_00008_BOOL,w_00006_00008_INTEGER);
constraint bool2int(w_00006_00009_BOOL,w_00006_00009_INTEGER);
constraint bool2int(w_00006_00010_BOOL,w_00006_00010_INTEGER);
constraint bool2int(w_00006_00011_BOOL,w_00006_00011_INTEGER);
constraint bool2int(w_00006_00012_BOOL,w_00006_00012_INTEGER);
constraint bool2int(w_00006_00014_BOOL,w_00006_00014_INTEGER);
constraint bool2int(aux15_BOOL,aux15_INTEGER);
constraint bool2int(aux26_BOOL,aux26_INTEGER);
constraint bool2int(aux27_BOOL,aux27_INTEGER);
constraint bool2int(aux29_BOOL,aux29_INTEGER);
constraint bool2int(aux31_BOOL,aux31_INTEGER);
constraint bool2int(aux39_BOOL,aux39_INTEGER);
constraint bool2int(aux40_BOOL,aux40_INTEGER);
constraint bool2int(aux52_BOOL,aux52_INTEGER);
constraint bool2int(aux53_BOOL,aux53_INTEGER);
constraint bool2int(aux54_BOOL,aux54_INTEGER);
constraint bool2int(aux55_BOOL,aux55_INTEGER);
constraint bool2int(aux58_BOOL,aux58_INTEGER);
constraint bool2int(aux68_BOOL,aux68_INTEGER);
constraint bool2int(aux83_BOOL,aux83_INTEGER);
constraint bool2int(aux87_BOOL,aux87_INTEGER);
constraint bool2int(aux88_BOOL,aux88_INTEGER);
constraint bool2int(aux90_BOOL,aux90_INTEGER);
constraint bool2int(aux93_BOOL,aux93_INTEGER);
constraint bool2int(aux96_BOOL,aux96_INTEGER);
constraint bool2int(aux97_BOOL,aux97_INTEGER);
constraint bool2int(aux99_BOOL,aux99_INTEGER);
constraint bool2int(aux100_BOOL,aux100_INTEGER);
constraint bool2int(aux103_BOOL,aux103_INTEGER);
constraint bool2int(aux105_BOOL,aux105_INTEGER);
constraint bool2int(aux109_BOOL,aux109_INTEGER);
constraint bool2int(aux117_BOOL,aux117_INTEGER);
constraint bool2int(aux121_BOOL,aux121_INTEGER);
constraint bool2int(aux167_BOOL,aux167_INTEGER);
constraint bool2int(aux240_BOOL,aux240_INTEGER);
constraint bool2int(aux241_BOOL,aux241_INTEGER);
constraint bool2int(aux242_BOOL,aux242_INTEGER);
constraint bool2int(aux243_BOOL,aux243_INTEGER);
constraint bool2int(aux244_BOOL,aux244_INTEGER);
constraint bool2int(aux245_BOOL,aux245_INTEGER);
constraint bool2int(aux246_BOOL,aux246_INTEGER);
constraint bool2int(aux247_BOOL,aux247_INTEGER);
constraint bool2int(aux248_BOOL,aux248_INTEGER);
constraint bool2int(aux249_BOOL,aux249_INTEGER);
constraint bool2int(aux250_BOOL,aux250_INTEGER);
constraint bool2int(aux251_BOOL,aux251_INTEGER);
constraint bool2int(aux252_BOOL,aux252_INTEGER);
constraint bool2int(aux253_BOOL,aux253_INTEGER);
constraint bool2int(aux254_BOOL,aux254_INTEGER);
constraint bool2int(aux255_BOOL,aux255_INTEGER);
constraint bool2int(aux256_BOOL,aux256_INTEGER);
constraint bool2int(aux257_BOOL,aux257_INTEGER);
constraint bool2int(aux258_BOOL,aux258_INTEGER);
constraint bool2int(aux259_BOOL,aux259_INTEGER);
constraint bool2int(aux260_BOOL,aux260_INTEGER);
constraint bool2int(aux261_BOOL,aux261_INTEGER);
constraint bool2int(aux262_BOOL,aux262_INTEGER);
constraint bool2int(aux263_BOOL,aux263_INTEGER);
constraint bool2int(aux264_BOOL,aux264_INTEGER);
constraint bool2int(aux265_BOOL,aux265_INTEGER);
constraint bool2int(aux266_BOOL,aux266_INTEGER);
constraint bool2int(aux267_BOOL,aux267_INTEGER);
constraint bool2int(aux268_BOOL,aux268_INTEGER);
constraint bool2int(aux269_BOOL,aux269_INTEGER);
constraint bool2int(aux270_BOOL,aux270_INTEGER);
constraint bool2int(aux271_BOOL,aux271_INTEGER);
constraint bool2int(aux272_BOOL,aux272_INTEGER);
constraint bool2int(aux273_BOOL,aux273_INTEGER);
constraint bool2int(aux274_BOOL,aux274_INTEGER);
constraint bool2int(aux275_BOOL,aux275_INTEGER);
constraint bool2int(aux276_BOOL,aux276_INTEGER);
constraint bool2int(aux277_BOOL,aux277_INTEGER);
constraint bool2int(aux278_BOOL,aux278_INTEGER);
constraint bool2int(aux279_BOOL,aux279_INTEGER);
constraint bool2int(aux280_BOOL,aux280_INTEGER);
constraint bool2int(aux281_BOOL,aux281_INTEGER);
constraint bool2int(aux282_BOOL,aux282_INTEGER);
constraint bool2int(aux283_BOOL,aux283_INTEGER);
constraint bool2int(aux284_BOOL,aux284_INTEGER);
constraint bool2int(aux285_BOOL,aux285_INTEGER);
constraint bool2int(aux286_BOOL,aux286_INTEGER);
constraint bool2int(aux287_BOOL,aux287_INTEGER);
constraint bool2int(aux288_BOOL,aux288_INTEGER);
constraint bool2int(aux289_BOOL,aux289_INTEGER);
constraint bool2int(aux290_BOOL,aux290_INTEGER);
constraint bool2int(aux291_BOOL,aux291_INTEGER);
constraint bool2int(aux292_BOOL,aux292_INTEGER);
constraint bool2int(aux293_BOOL,aux293_INTEGER);
constraint bool2int(aux294_BOOL,aux294_INTEGER);
constraint bool2int(aux295_BOOL,aux295_INTEGER);
constraint bool2int(aux296_BOOL,aux296_INTEGER);
constraint bool2int(aux297_BOOL,aux297_INTEGER);
constraint bool2int(aux298_BOOL,aux298_INTEGER);
constraint bool2int(aux299_BOOL,aux299_INTEGER);
constraint bool2int(aux300_BOOL,aux300_INTEGER);
constraint bool2int(aux301_BOOL,aux301_INTEGER);
constraint bool2int(aux302_BOOL,aux302_INTEGER);
constraint bool2int(aux303_BOOL,aux303_INTEGER);
constraint bool2int(aux304_BOOL,aux304_INTEGER);
constraint bool2int(aux305_BOOL,aux305_INTEGER);
constraint bool2int(aux306_BOOL,aux306_INTEGER);
constraint bool2int(aux307_BOOL,aux307_INTEGER);
constraint bool2int(aux308_BOOL,aux308_INTEGER);
constraint bool2int(aux309_BOOL,aux309_INTEGER);
constraint bool2int(aux310_BOOL,aux310_INTEGER);
constraint bool2int(aux311_BOOL,aux311_INTEGER);
constraint bool2int(aux312_BOOL,aux312_INTEGER);
constraint bool2int(aux313_BOOL,aux313_INTEGER);
constraint bool2int(aux314_BOOL,aux314_INTEGER);
constraint bool2int(aux315_BOOL,aux315_INTEGER);
constraint bool2int(aux316_BOOL,aux316_INTEGER);
constraint bool2int(aux317_BOOL,aux317_INTEGER);
constraint bool2int(aux318_BOOL,aux318_INTEGER);
constraint bool2int(aux319_BOOL,aux319_INTEGER);
constraint bool2int(aux320_BOOL,aux320_INTEGER);
constraint bool2int(aux321_BOOL,aux321_INTEGER);
constraint bool2int(aux322_BOOL,aux322_INTEGER);
constraint bool2int(aux323_BOOL,aux323_INTEGER);
constraint bool2int(aux324_BOOL,aux324_INTEGER);
constraint bool2int(aux325_BOOL,aux325_INTEGER);
constraint bool2int(aux326_BOOL,aux326_INTEGER);
constraint bool2int(aux327_BOOL,aux327_INTEGER);
constraint bool2int(aux328_BOOL,aux328_INTEGER);
constraint bool2int(aux329_BOOL,aux329_INTEGER);
constraint bool2int(aux330_BOOL,aux330_INTEGER);
constraint bool2int(aux331_BOOL,aux331_INTEGER);
constraint bool2int(aux332_BOOL,aux332_INTEGER);
constraint bool2int(aux611_BOOL,aux611_INTEGER);
constraint bool2int(aux612_BOOL,aux612_INTEGER);
constraint bool2int(aux613_BOOL,aux613_INTEGER);
constraint bool2int(aux614_BOOL,aux614_INTEGER);
constraint bool2int(aux615_BOOL,aux615_INTEGER);
constraint bool2int(aux616_BOOL,aux616_INTEGER);
constraint bool2int(aux617_BOOL,aux617_INTEGER);
constraint bool2int(aux618_BOOL,aux618_INTEGER);
constraint bool2int(aux619_BOOL,aux619_INTEGER);
constraint bool2int(aux620_BOOL,aux620_INTEGER);
constraint bool2int(aux621_BOOL,aux621_INTEGER);
constraint bool2int(aux622_BOOL,aux622_INTEGER);
constraint bool2int(aux623_BOOL,aux623_INTEGER);
constraint bool2int(aux624_BOOL,aux624_INTEGER);
constraint bool2int(aux625_BOOL,aux625_INTEGER);
constraint bool2int(aux626_BOOL,aux626_INTEGER);
constraint bool2int(aux627_BOOL,aux627_INTEGER);
constraint bool2int(aux628_BOOL,aux628_INTEGER);
constraint bool2int(aux629_BOOL,aux629_INTEGER);
constraint bool2int(aux630_BOOL,aux630_INTEGER);
constraint bool2int(aux631_BOOL,aux631_INTEGER);
constraint bool2int(aux632_BOOL,aux632_INTEGER);
constraint bool2int(aux633_BOOL,aux633_INTEGER);
constraint bool2int(aux634_BOOL,aux634_INTEGER);
constraint bool2int(aux635_BOOL,aux635_INTEGER);
constraint bool2int(aux636_BOOL,aux636_INTEGER);
constraint bool2int(aux637_BOOL,aux637_INTEGER);
constraint bool2int(aux638_BOOL,aux638_INTEGER);
constraint bool2int(aux639_BOOL,aux639_INTEGER);
constraint bool2int(aux640_BOOL,aux640_INTEGER);
constraint bool2int(aux641_BOOL,aux641_INTEGER);
constraint bool2int(aux642_BOOL,aux642_INTEGER);
constraint bool2int(aux643_BOOL,aux643_INTEGER);
constraint bool2int(aux644_BOOL,aux644_INTEGER);
constraint bool2int(aux645_BOOL,aux645_INTEGER);
constraint bool2int(aux646_BOOL,aux646_INTEGER);
constraint bool2int(aux647_BOOL,aux647_INTEGER);
constraint bool2int(aux648_BOOL,aux648_INTEGER);
constraint bool2int(aux649_BOOL,aux649_INTEGER);
constraint bool2int(aux650_BOOL,aux650_INTEGER);
constraint bool2int(aux651_BOOL,aux651_INTEGER);
constraint bool2int(aux652_BOOL,aux652_INTEGER);
constraint bool2int(aux653_BOOL,aux653_INTEGER);
constraint bool2int(aux654_BOOL,aux654_INTEGER);
constraint bool2int(aux655_BOOL,aux655_INTEGER);
constraint bool2int(aux656_BOOL,aux656_INTEGER);
constraint bool2int(aux657_BOOL,aux657_INTEGER);
constraint bool2int(aux658_BOOL,aux658_INTEGER);
constraint bool2int(aux659_BOOL,aux659_INTEGER);
constraint bool2int(aux660_BOOL,aux660_INTEGER);
constraint bool2int(aux661_BOOL,aux661_INTEGER);
constraint bool2int(aux662_BOOL,aux662_INTEGER);
constraint bool2int(aux663_BOOL,aux663_INTEGER);
constraint bool2int(aux664_BOOL,aux664_INTEGER);
constraint bool2int(aux665_BOOL,aux665_INTEGER);
constraint bool2int(aux666_BOOL,aux666_INTEGER);
constraint bool2int(aux667_BOOL,aux667_INTEGER);
constraint bool2int(aux668_BOOL,aux668_INTEGER);
constraint bool2int(aux669_BOOL,aux669_INTEGER);
constraint bool2int(aux670_BOOL,aux670_INTEGER);
constraint bool2int(aux671_BOOL,aux671_INTEGER);
constraint bool2int(aux672_BOOL,aux672_INTEGER);
constraint bool2int(aux673_BOOL,aux673_INTEGER);
constraint bool2int(aux674_BOOL,aux674_INTEGER);
constraint bool2int(aux675_BOOL,aux675_INTEGER);
constraint bool2int(aux676_BOOL,aux676_INTEGER);
constraint bool2int(aux677_BOOL,aux677_INTEGER);
constraint bool2int(aux678_BOOL,aux678_INTEGER);
constraint bool2int(aux679_BOOL,aux679_INTEGER);
constraint bool2int(aux680_BOOL,aux680_INTEGER);
constraint bool2int(aux681_BOOL,aux681_INTEGER);
constraint bool2int(aux682_BOOL,aux682_INTEGER);
constraint bool2int(aux683_BOOL,aux683_INTEGER);
constraint bool2int(aux684_BOOL,aux684_INTEGER);
constraint bool2int(aux685_BOOL,aux685_INTEGER);
constraint bool2int(aux686_BOOL,aux686_INTEGER);
constraint bool2int(aux687_BOOL,aux687_INTEGER);
constraint bool2int(aux688_BOOL,aux688_INTEGER);
constraint bool2int(aux689_BOOL,aux689_INTEGER);
constraint bool2int(aux690_BOOL,aux690_INTEGER);
constraint bool2int(aux691_BOOL,aux691_INTEGER);
constraint bool2int(aux692_BOOL,aux692_INTEGER);
constraint bool2int(aux693_BOOL,aux693_INTEGER);
constraint bool2int(aux694_BOOL,aux694_INTEGER);
constraint bool2int(aux695_BOOL,aux695_INTEGER);
constraint bool2int(aux696_BOOL,aux696_INTEGER);
constraint bool2int(aux697_BOOL,aux697_INTEGER);
constraint bool2int(aux698_BOOL,aux698_INTEGER);
constraint bool2int(aux699_BOOL,aux699_INTEGER);
constraint bool2int(aux700_BOOL,aux700_INTEGER);
constraint bool2int(aux701_BOOL,aux701_INTEGER);
constraint bool2int(aux702_BOOL,aux702_INTEGER);
constraint bool2int(aux703_BOOL,aux703_INTEGER);
constraint bool2int(aux704_BOOL,aux704_INTEGER);
constraint bool2int(aux705_BOOL,aux705_INTEGER);
constraint bool2int(aux706_BOOL,aux706_INTEGER);
constraint bool2int(aux707_BOOL,aux707_INTEGER);
constraint bool2int(aux708_BOOL,aux708_INTEGER);
constraint bool2int(aux709_BOOL,aux709_INTEGER);
constraint bool2int(aux710_BOOL,aux710_INTEGER);
constraint bool2int(aux711_BOOL,aux711_INTEGER);
constraint bool2int(aux712_BOOL,aux712_INTEGER);
constraint bool2int(aux713_BOOL,aux713_INTEGER);
constraint bool2int(aux714_BOOL,aux714_INTEGER);
constraint bool2int(aux715_BOOL,aux715_INTEGER);
constraint bool2int(aux716_BOOL,aux716_INTEGER);
constraint bool2int(aux717_BOOL,aux717_INTEGER);
constraint bool2int(aux718_BOOL,aux718_INTEGER);
constraint bool2int(aux719_BOOL,aux719_INTEGER);
constraint bool2int(aux720_BOOL,aux720_INTEGER);
constraint bool2int(aux721_BOOL,aux721_INTEGER);
constraint bool2int(aux722_BOOL,aux722_INTEGER);
constraint bool2int(aux723_BOOL,aux723_INTEGER);
constraint bool2int(aux724_BOOL,aux724_INTEGER);
constraint bool2int(aux725_BOOL,aux725_INTEGER);
constraint bool2int(aux726_BOOL,aux726_INTEGER);
constraint bool2int(aux727_BOOL,aux727_INTEGER);
constraint bool2int(aux728_BOOL,aux728_INTEGER);
constraint bool2int(aux729_BOOL,aux729_INTEGER);
constraint bool2int(aux730_BOOL,aux730_INTEGER);
constraint bool2int(aux731_BOOL,aux731_INTEGER);
constraint bool2int(aux732_BOOL,aux732_INTEGER);
constraint bool2int(aux733_BOOL,aux733_INTEGER);
constraint bool2int(aux734_BOOL,aux734_INTEGER);
constraint bool2int(aux735_BOOL,aux735_INTEGER);
constraint bool2int(aux736_BOOL,aux736_INTEGER);
constraint bool2int(aux737_BOOL,aux737_INTEGER);
constraint bool2int(aux738_BOOL,aux738_INTEGER);
constraint bool2int(aux739_BOOL,aux739_INTEGER);
constraint bool2int(aux745_BOOL,aux745_INTEGER);
constraint bool2int(aux746_BOOL,aux746_INTEGER);
constraint bool2int(aux747_BOOL,aux747_INTEGER);
constraint bool2int(aux748_BOOL,aux748_INTEGER);
constraint bool2int(aux749_BOOL,aux749_INTEGER);
constraint bool2int(aux750_BOOL,aux750_INTEGER);
constraint bool2int(aux751_BOOL,aux751_INTEGER);
constraint bool2int(aux752_BOOL,aux752_INTEGER);
constraint bool2int(aux753_BOOL,aux753_INTEGER);
constraint bool2int(aux754_BOOL,aux754_INTEGER);
constraint bool2int(aux755_BOOL,aux755_INTEGER);
constraint bool2int(aux756_BOOL,aux756_INTEGER);
constraint bool2int(aux757_BOOL,aux757_INTEGER);
constraint bool2int(aux758_BOOL,aux758_INTEGER);
constraint bool2int(aux759_BOOL,aux759_INTEGER);
constraint bool2int(aux760_BOOL,aux760_INTEGER);
constraint bool2int(aux761_BOOL,aux761_INTEGER);
constraint bool2int(aux762_BOOL,aux762_INTEGER);
constraint bool2int(aux763_BOOL,aux763_INTEGER);
constraint bool2int(aux764_BOOL,aux764_INTEGER);
constraint bool2int(aux765_BOOL,aux765_INTEGER);
constraint bool2int(aux766_BOOL,aux766_INTEGER);
constraint bool2int(aux767_BOOL,aux767_INTEGER);
constraint bool2int(aux768_BOOL,aux768_INTEGER);
constraint bool2int(aux769_BOOL,aux769_INTEGER);
constraint bool2int(aux770_BOOL,aux770_INTEGER);
constraint bool2int(aux771_BOOL,aux771_INTEGER);
constraint bool2int(aux772_BOOL,aux772_INTEGER);
constraint bool2int(aux773_BOOL,aux773_INTEGER);
constraint bool2int(aux774_BOOL,aux774_INTEGER);
constraint bool2int(aux775_BOOL,aux775_INTEGER);
constraint bool2int(aux776_BOOL,aux776_INTEGER);
constraint bool2int(aux777_BOOL,aux777_INTEGER);
constraint bool2int(aux778_BOOL,aux778_INTEGER);
constraint bool2int(aux779_BOOL,aux779_INTEGER);
constraint bool2int(aux780_BOOL,aux780_INTEGER);
constraint bool2int(aux781_BOOL,aux781_INTEGER);
constraint bool2int(aux782_BOOL,aux782_INTEGER);
constraint bool2int(aux783_BOOL,aux783_INTEGER);
constraint bool2int(aux784_BOOL,aux784_INTEGER);
constraint bool2int(aux785_BOOL,aux785_INTEGER);
constraint bool2int(aux786_BOOL,aux786_INTEGER);
constraint bool2int(aux787_BOOL,aux787_INTEGER);
constraint bool2int(aux788_BOOL,aux788_INTEGER);
constraint bool2int(aux789_BOOL,aux789_INTEGER);
constraint bool2int(aux790_BOOL,aux790_INTEGER);
constraint bool2int(aux791_BOOL,aux791_INTEGER);
constraint bool2int(aux792_BOOL,aux792_INTEGER);
constraint bool2int(aux793_BOOL,aux793_INTEGER);
constraint bool2int(aux794_BOOL,aux794_INTEGER);
constraint bool2int(aux795_BOOL,aux795_INTEGER);
constraint bool2int(aux796_BOOL,aux796_INTEGER);
constraint bool2int(aux797_BOOL,aux797_INTEGER);
constraint bool2int(aux798_BOOL,aux798_INTEGER);
constraint bool2int(aux799_BOOL,aux799_INTEGER);
constraint bool2int(aux800_BOOL,aux800_INTEGER);
constraint bool2int(aux801_BOOL,aux801_INTEGER);
constraint bool2int(aux802_BOOL,aux802_INTEGER);
constraint bool2int(aux803_BOOL,aux803_INTEGER);
constraint bool2int(aux804_BOOL,aux804_INTEGER);
constraint bool2int(aux805_BOOL,aux805_INTEGER);
constraint bool2int(aux806_BOOL,aux806_INTEGER);
constraint bool2int(aux807_BOOL,aux807_INTEGER);
constraint bool2int(aux808_BOOL,aux808_INTEGER);
constraint bool2int(aux809_BOOL,aux809_INTEGER);
constraint bool2int(aux810_BOOL,aux810_INTEGER);
constraint bool2int(aux811_BOOL,aux811_INTEGER);
constraint bool2int(aux812_BOOL,aux812_INTEGER);
constraint bool2int(aux813_BOOL,aux813_INTEGER);
constraint bool2int(aux814_BOOL,aux814_INTEGER);
constraint bool2int(aux815_BOOL,aux815_INTEGER);
constraint bool2int(aux816_BOOL,aux816_INTEGER);
constraint bool2int(aux817_BOOL,aux817_INTEGER);
constraint bool2int(aux818_BOOL,aux818_INTEGER);
constraint bool2int(aux819_BOOL,aux819_INTEGER);
constraint bool2int(aux820_BOOL,aux820_INTEGER);
constraint bool2int(aux821_BOOL,aux821_INTEGER);
constraint bool2int(aux822_BOOL,aux822_INTEGER);
constraint bool2int(aux823_BOOL,aux823_INTEGER);
constraint bool2int(aux824_BOOL,aux824_INTEGER);
constraint bool2int(aux825_BOOL,aux825_INTEGER);
constraint bool2int(aux826_BOOL,aux826_INTEGER);
constraint bool2int(aux827_BOOL,aux827_INTEGER);
constraint bool2int(aux828_BOOL,aux828_INTEGER);
constraint bool2int(aux829_BOOL,aux829_INTEGER);
constraint bool2int(aux830_BOOL,aux830_INTEGER);
constraint bool2int(aux917_BOOL,aux917_INTEGER);
constraint bool2int(aux918_BOOL,aux918_INTEGER);
constraint bool2int(aux919_BOOL,aux919_INTEGER);
constraint bool2int(aux920_BOOL,aux920_INTEGER);
constraint bool2int(aux921_BOOL,aux921_INTEGER);
constraint bool2int(aux922_BOOL,aux922_INTEGER);
constraint bool2int(aux923_BOOL,aux923_INTEGER);
constraint bool2int(aux924_BOOL,aux924_INTEGER);
constraint bool2int(aux925_BOOL,aux925_INTEGER);
constraint bool2int(aux926_BOOL,aux926_INTEGER);
constraint array_bool_and([w_00006_00012_BOOL,aux82_BOOL],aux240_BOOL);
constraint array_bool_and([aux123_BOOL,w_00004_00006_BOOL],aux241_BOOL);
constraint array_bool_and([aux124_BOOL,w_00004_00011_BOOL],aux242_BOOL);
constraint array_bool_and([aux75_BOOL,w_00004_00012_BOOL],aux243_BOOL);
constraint array_bool_and([aux76_BOOL,w_00004_00014_BOOL],aux244_BOOL);
constraint array_bool_and([aux17_BOOL,w_00004_00005_BOOL],aux245_BOOL);
constraint array_bool_and([aux18_BOOL,w_00004_00001_BOOL],aux246_BOOL);
constraint array_bool_and([aux33_BOOL,w_00004_00006_BOOL],aux247_BOOL);
constraint array_bool_and([aux63_BOOL,w_00004_00004_BOOL],aux248_BOOL);
constraint array_bool_and([aux93_BOOL,w_00005_00005_BOOL],aux249_BOOL);
constraint array_bool_and([aux96_BOOL,w_00005_00010_BOOL],aux250_BOOL);
constraint array_bool_and([aux97_BOOL,w_00005_00011_BOOL],aux251_BOOL);
constraint array_bool_and([aux99_BOOL,w_00005_00012_BOOL],aux252_BOOL);
constraint array_bool_and([aux154_BOOL,w_00005_00008_BOOL],aux253_BOOL);
constraint array_bool_and([aux165_BOOL,w_00005_00004_BOOL],aux254_BOOL);
constraint array_bool_and([aux167_BOOL,w_00005_00013_BOOL],aux255_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux44_BOOL],aux256_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux41_BOOL],aux257_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux12_BOOL],aux258_BOOL);
constraint array_bool_and([aux82_BOOL,w_00004_00012_BOOL],aux259_BOOL);
constraint array_bool_and([aux83_BOOL,w_00004_00013_BOOL],aux260_BOOL);
constraint array_bool_and([aux12_BOOL,w_00005_00007_BOOL],aux261_BOOL);
constraint array_bool_and([aux41_BOOL,w_00005_00004_BOOL],aux262_BOOL);
constraint array_bool_and([aux44_BOOL,w_00005_00002_BOOL],aux263_BOOL);
constraint array_bool_and([aux127_BOOL,w_00005_00003_BOOL],aux264_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux62_BOOL],aux265_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux15_BOOL],aux266_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux59_BOOL],aux267_BOOL);
constraint array_bool_and([aux52_BOOL,w_00005_00005_BOOL],aux268_BOOL);
constraint array_bool_and([aux53_BOOL,w_00005_00001_BOOL],aux269_BOOL);
constraint array_bool_and([aux54_BOOL,w_00005_00007_BOOL],aux270_BOOL);
constraint array_bool_and([aux55_BOOL,w_00005_00012_BOOL],aux271_BOOL);
constraint array_bool_and([aux58_BOOL,w_00005_00002_BOOL],aux272_BOOL);
constraint array_bool_and([aux113_BOOL,w_00005_00006_BOOL],aux273_BOOL);
constraint array_bool_and([aux114_BOOL,w_00005_00011_BOOL],aux274_BOOL);
constraint array_bool_and([aux163_BOOL,w_00005_00009_BOOL],aux275_BOOL);
constraint array_bool_and([aux164_BOOL,w_00005_00010_BOOL],aux276_BOOL);
constraint array_bool_and([aux184_BOOL,w_00005_00008_BOOL],aux277_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux165_BOOL],aux278_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux154_BOOL],aux279_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux93_BOOL],aux280_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux96_BOOL],aux281_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux97_BOOL],aux282_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux99_BOOL],aux283_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux18_BOOL],aux284_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux17_BOOL],aux285_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux63_BOOL],aux286_BOOL);
constraint array_bool_and([aux100_BOOL,w_00005_00005_BOOL],aux287_BOOL);
constraint array_bool_and([aux103_BOOL,w_00005_00009_BOOL],aux288_BOOL);
constraint array_bool_and([aux105_BOOL,w_00005_00006_BOOL],aux289_BOOL);
constraint array_bool_and([aux155_BOOL,w_00005_00003_BOOL],aux290_BOOL);
constraint array_bool_and([aux169_BOOL,w_00005_00004_BOOL],aux291_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux142_BOOL],aux292_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux143_BOOL],aux293_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux18_BOOL],aux294_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux17_BOOL],aux295_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux33_BOOL],aux296_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux63_BOOL],aux297_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux100_BOOL],aux298_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux105_BOOL],aux299_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux155_BOOL],aux300_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux103_BOOL],aux301_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux169_BOOL],aux302_BOOL);
constraint array_bool_and([aux45_BOOL,w_00004_00005_BOOL],aux303_BOOL);
constraint array_bool_and([aux46_BOOL,w_00004_00001_BOOL],aux304_BOOL);
constraint array_bool_and([aux47_BOOL,w_00004_00004_BOOL],aux305_BOOL);
constraint array_bool_and([aux15_BOOL,w_00004_00007_BOOL],aux306_BOOL);
constraint array_bool_and([aux26_BOOL,w_00004_00006_BOOL],aux307_BOOL);
constraint array_bool_and([aux59_BOOL,w_00004_00004_BOOL],aux308_BOOL);
constraint array_bool_and([aux62_BOOL,w_00004_00002_BOOL],aux309_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux53_BOOL],aux310_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux58_BOOL],aux311_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux52_BOOL],aux312_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux54_BOOL],aux313_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux55_BOOL],aux314_BOOL);
constraint array_bool_and([aux113_BOOL,w_00003_00006_BOOL],aux315_BOOL);
constraint array_bool_and([aux114_BOOL,w_00003_00011_BOOL],aux316_BOOL);
constraint array_bool_and([aux163_BOOL,w_00003_00009_BOOL],aux317_BOOL);
constraint array_bool_and([aux164_BOOL,w_00003_00010_BOOL],aux318_BOOL);
constraint array_bool_and([aux144_BOOL,w_00005_00003_BOOL],aux319_BOOL);
constraint array_bool_and([aux145_BOOL,w_00005_00005_BOOL],aux320_BOOL);
constraint array_bool_and([aux147_BOOL,w_00005_00007_BOOL],aux321_BOOL);
constraint array_bool_and([aux148_BOOL,w_00005_00009_BOOL],aux322_BOOL);
constraint array_bool_and([aux151_BOOL,w_00005_00006_BOOL],aux323_BOOL);
constraint array_bool_and([aux185_BOOL,w_00005_00004_BOOL],aux324_BOOL);
constraint array_bool_and([aux188_BOOL,w_00005_00002_BOOL],aux325_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux38_BOOL],aux326_BOOL);
constraint array_bool_and([aux107_BOOL,w_00003_00009_BOOL],aux327_BOOL);
constraint array_bool_and([aux119_BOOL,w_00003_00004_BOOL],aux328_BOOL);
constraint array_bool_and([aux121_BOOL,w_00003_00013_BOOL],aux329_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux46_BOOL],aux330_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux47_BOOL],aux331_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux45_BOOL],aux332_BOOL);
constraint int_le_reif(s_00001, s_00005,aux333_BOOL);
constraint int_lt_reif(s_00005,aux228,aux334_BOOL);
constraint int_le_reif(s_00001, s_00006,aux335_BOOL);
constraint int_lt_reif(s_00006,aux228,aux336_BOOL);
constraint int_le_reif(s_00001, s_00008,aux337_BOOL);
constraint int_lt_reif(s_00008,aux228,aux338_BOOL);
constraint int_le_reif(s_00001, s_00009,aux339_BOOL);
constraint int_lt_reif(s_00009,aux228,aux340_BOOL);
constraint int_le_reif(s_00001, s_00010,aux341_BOOL);
constraint int_lt_reif(s_00010,aux228,aux342_BOOL);
constraint int_le_reif(s_00001, s_00011,aux343_BOOL);
constraint int_lt_reif(s_00011,aux228,aux344_BOOL);
constraint int_le_reif(s_00002, s_00006,aux345_BOOL);
constraint int_lt_reif(s_00006,aux234,aux346_BOOL);
constraint int_le_reif(s_00001, s_00012,aux347_BOOL);
constraint int_lt_reif(s_00012,aux228,aux348_BOOL);
constraint int_le_reif(s_00002, s_00007,aux349_BOOL);
constraint int_lt_reif(s_00007,aux234,aux350_BOOL);
constraint int_le_reif(s_00001, s_00013,aux351_BOOL);
constraint int_lt_reif(s_00013,aux228,aux352_BOOL);
constraint int_le_reif(s_00001, s_00014,aux353_BOOL);
constraint int_lt_reif(s_00014,aux228,aux354_BOOL);
constraint int_le_reif(s_00002, s_00009,aux355_BOOL);
constraint int_lt_reif(s_00009,aux234,aux356_BOOL);
constraint int_le_reif(s_00003, s_00004,aux357_BOOL);
constraint int_lt_reif(s_00004,aux229,aux358_BOOL);
constraint int_le_reif(s_00003, s_00006,aux359_BOOL);
constraint int_lt_reif(s_00006,aux229,aux360_BOOL);
constraint int_le_reif(s_00004, s_00003,aux361_BOOL);
constraint int_lt_reif(s_00003,aux232,aux362_BOOL);
constraint int_le_reif(s_00003, s_00009,aux363_BOOL);
constraint int_lt_reif(s_00009,aux229,aux364_BOOL);
constraint int_le_reif(s_00002, s_00010,aux365_BOOL);
constraint int_lt_reif(s_00010,aux234,aux366_BOOL);
constraint int_le_reif(s_00002, s_00011,aux367_BOOL);
constraint int_lt_reif(s_00011,aux234,aux368_BOOL);
constraint int_le_reif(s_00002, s_00012,aux369_BOOL);
constraint int_lt_reif(s_00012,aux234,aux370_BOOL);
constraint int_le_reif(s_00002, s_00013,aux371_BOOL);
constraint int_lt_reif(s_00013,aux234,aux372_BOOL);
constraint int_le_reif(s_00002, s_00014,aux373_BOOL);
constraint int_lt_reif(s_00014,aux234,aux374_BOOL);
constraint int_le_reif(s_00005, s_00001,aux375_BOOL);
constraint int_lt_reif(s_00001,aux235,aux376_BOOL);
constraint int_le_reif(s_00003, s_00011,aux377_BOOL);
constraint int_lt_reif(s_00011,aux229,aux378_BOOL);
constraint int_le_reif(s_00003, s_00012,aux379_BOOL);
constraint int_lt_reif(s_00012,aux229,aux380_BOOL);
constraint int_le_reif(s_00003, s_00013,aux381_BOOL);
constraint int_lt_reif(s_00013,aux229,aux382_BOOL);
constraint int_le_reif(s_00003, s_00014,aux383_BOOL);
constraint int_lt_reif(s_00014,aux229,aux384_BOOL);
constraint int_le_reif(s_00006, s_00001,aux385_BOOL);
constraint int_lt_reif(s_00001,aux238,aux386_BOOL);
constraint int_le_reif(s_00006, s_00002,aux387_BOOL);
constraint int_lt_reif(s_00002,aux238,aux388_BOOL);
constraint int_le_reif(s_00006, s_00003,aux389_BOOL);
constraint int_lt_reif(s_00003,aux238,aux390_BOOL);
constraint int_le_reif(s_00004, s_00013,aux391_BOOL);
constraint int_lt_reif(s_00013,aux232,aux392_BOOL);
constraint int_le_reif(s_00004, s_00014,aux393_BOOL);
constraint int_lt_reif(s_00014,aux232,aux394_BOOL);
constraint int_le_reif(s_00006, s_00009,aux395_BOOL);
constraint int_lt_reif(s_00009,aux238,aux396_BOOL);
constraint int_le_reif(s_00005, s_00011,aux397_BOOL);
constraint int_lt_reif(s_00011,aux235,aux398_BOOL);
constraint int_le_reif(s_00005, s_00012,aux399_BOOL);
constraint int_lt_reif(s_00012,aux235,aux400_BOOL);
constraint int_le_reif(s_00007, s_00002,aux401_BOOL);
constraint int_lt_reif(s_00002,aux237,aux402_BOOL);
constraint int_le_reif(s_00005, s_00013,aux403_BOOL);
constraint int_lt_reif(s_00013,aux235,aux404_BOOL);
constraint int_le_reif(s_00005, s_00014,aux405_BOOL);
constraint int_lt_reif(s_00014,aux235,aux406_BOOL);
constraint int_le_reif(s_00007, s_00009,aux407_BOOL);
constraint int_lt_reif(s_00009,aux237,aux408_BOOL);
constraint int_le_reif(s_00006, s_00011,aux409_BOOL);
constraint int_lt_reif(s_00011,aux238,aux410_BOOL);
constraint int_le_reif(s_00006, s_00014,aux411_BOOL);
constraint int_lt_reif(s_00014,aux238,aux412_BOOL);
constraint int_le_reif(s_00008, s_00001,aux413_BOOL);
constraint int_lt_reif(s_00001,aux239,aux414_BOOL);
constraint int_le_reif(s_00007, s_00010,aux415_BOOL);
constraint int_lt_reif(s_00010,aux237,aux416_BOOL);
constraint int_le_reif(s_00007, s_00011,aux417_BOOL);
constraint int_lt_reif(s_00011,aux237,aux418_BOOL);
constraint int_le_reif(s_00007, s_00012,aux419_BOOL);
constraint int_lt_reif(s_00012,aux237,aux420_BOOL);
constraint int_le_reif(s_00007, s_00013,aux421_BOOL);
constraint int_lt_reif(s_00013,aux237,aux422_BOOL);
constraint int_le_reif(s_00007, s_00014,aux423_BOOL);
constraint int_lt_reif(s_00014,aux237,aux424_BOOL);
constraint int_le_reif(s_00009, s_00001,aux425_BOOL);
constraint int_lt_reif(s_00001,aux231,aux426_BOOL);
constraint int_le_reif(s_00009, s_00002,aux427_BOOL);
constraint int_lt_reif(s_00002,aux231,aux428_BOOL);
constraint int_le_reif(s_00009, s_00003,aux429_BOOL);
constraint int_lt_reif(s_00003,aux231,aux430_BOOL);
constraint int_le_reif(s_00009, s_00006,aux431_BOOL);
constraint int_lt_reif(s_00006,aux231,aux432_BOOL);
constraint int_le_reif(s_00009, s_00007,aux433_BOOL);
constraint int_lt_reif(s_00007,aux231,aux434_BOOL);
constraint int_le_reif(s_00008, s_00010,aux435_BOOL);
constraint int_lt_reif(s_00010,aux239,aux436_BOOL);
constraint int_le_reif(s_00008, s_00011,aux437_BOOL);
constraint int_lt_reif(s_00011,aux239,aux438_BOOL);
constraint int_le_reif(s_00008, s_00012,aux439_BOOL);
constraint int_lt_reif(s_00012,aux239,aux440_BOOL);
constraint int_le_reif(s_00008, s_00013,aux441_BOOL);
constraint int_lt_reif(s_00013,aux239,aux442_BOOL);
constraint int_le_reif(s_00008, s_00014,aux443_BOOL);
constraint int_lt_reif(s_00014,aux239,aux444_BOOL);
constraint int_le_reif(s_00009, s_00014,aux445_BOOL);
constraint int_lt_reif(s_00014,aux231,aux446_BOOL);
constraint int_le_reif(s_00010, s_00001,aux447_BOOL);
constraint int_lt_reif(s_00001,aux230,aux448_BOOL);
constraint int_le_reif(s_00010, s_00002,aux449_BOOL);
constraint int_lt_reif(s_00002,aux230,aux450_BOOL);
constraint int_le_reif(s_00010, s_00007,aux451_BOOL);
constraint int_lt_reif(s_00007,aux230,aux452_BOOL);
constraint int_le_reif(s_00010, s_00008,aux453_BOOL);
constraint int_lt_reif(s_00008,aux230,aux454_BOOL);
constraint int_le_reif(s_00011, s_00001,aux455_BOOL);
constraint int_lt_reif(s_00001,aux233,aux456_BOOL);
constraint int_le_reif(s_00011, s_00002,aux457_BOOL);
constraint int_lt_reif(s_00002,aux233,aux458_BOOL);
constraint int_le_reif(s_00011, s_00003,aux459_BOOL);
constraint int_lt_reif(s_00003,aux233,aux460_BOOL);
constraint int_le_reif(s_00011, s_00005,aux461_BOOL);
constraint int_lt_reif(s_00005,aux233,aux462_BOOL);
constraint int_le_reif(s_00012, s_00001,aux463_BOOL);
constraint int_lt_reif(s_00001,aux226,aux464_BOOL);
constraint int_le_reif(s_00010, s_00011,aux465_BOOL);
constraint int_lt_reif(s_00011,aux230,aux466_BOOL);
constraint int_le_reif(s_00011, s_00006,aux467_BOOL);
constraint int_lt_reif(s_00006,aux233,aux468_BOOL);
constraint int_le_reif(s_00012, s_00002,aux469_BOOL);
constraint int_lt_reif(s_00002,aux226,aux470_BOOL);
constraint int_le_reif(s_00010, s_00012,aux471_BOOL);
constraint int_lt_reif(s_00012,aux230,aux472_BOOL);
constraint int_le_reif(s_00011, s_00007,aux473_BOOL);
constraint int_lt_reif(s_00007,aux233,aux474_BOOL);
constraint int_le_reif(s_00012, s_00003,aux475_BOOL);
constraint int_lt_reif(s_00003,aux226,aux476_BOOL);
constraint int_le_reif(s_00010, s_00013,aux477_BOOL);
constraint int_lt_reif(s_00013,aux230,aux478_BOOL);
constraint int_le_reif(s_00011, s_00008,aux479_BOOL);
constraint int_lt_reif(s_00008,aux233,aux480_BOOL);
constraint int_le_reif(s_00010, s_00014,aux481_BOOL);
constraint int_lt_reif(s_00014,aux230,aux482_BOOL);
constraint int_le_reif(s_00012, s_00005,aux483_BOOL);
constraint int_lt_reif(s_00005,aux226,aux484_BOOL);
constraint int_le_reif(s_00012, s_00007,aux485_BOOL);
constraint int_lt_reif(s_00007,aux226,aux486_BOOL);
constraint int_le_reif(s_00012, s_00008,aux487_BOOL);
constraint int_lt_reif(s_00008,aux226,aux488_BOOL);
constraint int_le_reif(s_00011, s_00010,aux489_BOOL);
constraint int_lt_reif(s_00010,aux233,aux490_BOOL);
constraint int_le_reif(s_00013, s_00001,aux491_BOOL);
constraint int_lt_reif(s_00001,aux227,aux492_BOOL);
constraint int_le_reif(s_00013, s_00002,aux493_BOOL);
constraint int_lt_reif(s_00002,aux227,aux494_BOOL);
constraint int_le_reif(s_00013, s_00003,aux495_BOOL);
constraint int_lt_reif(s_00003,aux227,aux496_BOOL);
constraint int_le_reif(s_00011, s_00014,aux497_BOOL);
constraint int_lt_reif(s_00014,aux233,aux498_BOOL);
constraint int_le_reif(s_00013, s_00004,aux499_BOOL);
constraint int_lt_reif(s_00004,aux227,aux500_BOOL);
constraint int_le_reif(s_00012, s_00010,aux501_BOOL);
constraint int_lt_reif(s_00010,aux226,aux502_BOOL);
constraint int_le_reif(s_00013, s_00005,aux503_BOOL);
constraint int_lt_reif(s_00005,aux227,aux504_BOOL);
constraint int_le_reif(s_00013, s_00007,aux505_BOOL);
constraint int_lt_reif(s_00007,aux227,aux506_BOOL);
constraint int_le_reif(s_00013, s_00008,aux507_BOOL);
constraint int_lt_reif(s_00008,aux227,aux508_BOOL);
constraint int_le_reif(s_00014, s_00001,aux509_BOOL);
constraint int_lt_reif(s_00001,aux236,aux510_BOOL);
constraint int_le_reif(s_00014, s_00002,aux511_BOOL);
constraint int_lt_reif(s_00002,aux236,aux512_BOOL);
constraint int_le_reif(s_00014, s_00003,aux513_BOOL);
constraint int_lt_reif(s_00003,aux236,aux514_BOOL);
constraint int_le_reif(s_00014, s_00004,aux515_BOOL);
constraint int_lt_reif(s_00004,aux236,aux516_BOOL);
constraint int_le_reif(s_00014, s_00005,aux517_BOOL);
constraint int_lt_reif(s_00005,aux236,aux518_BOOL);
constraint int_le_reif(s_00014, s_00006,aux519_BOOL);
constraint int_lt_reif(s_00006,aux236,aux520_BOOL);
constraint int_le_reif(s_00014, s_00007,aux521_BOOL);
constraint int_lt_reif(s_00007,aux236,aux522_BOOL);
constraint int_le_reif(s_00014, s_00008,aux523_BOOL);
constraint int_lt_reif(s_00008,aux236,aux524_BOOL);
constraint int_le_reif(s_00014, s_00009,aux525_BOOL);
constraint int_lt_reif(s_00009,aux236,aux526_BOOL);
constraint int_le_reif(s_00013, s_00010,aux527_BOOL);
constraint int_lt_reif(s_00010,aux227,aux528_BOOL);
constraint int_le_reif(s_00014, s_00010,aux529_BOOL);
constraint int_lt_reif(s_00010,aux236,aux530_BOOL);
constraint int_le_reif(s_00014, s_00011,aux531_BOOL);
constraint int_lt_reif(s_00011,aux236,aux532_BOOL);
constraint int_le_reif(s_00001, s_00002,aux533_BOOL);
constraint int_lt_reif(s_00002,aux228,aux534_BOOL);
constraint int_le_reif(s_00001, s_00004,aux535_BOOL);
constraint int_lt_reif(s_00004,aux228,aux536_BOOL);
constraint int_le_reif(s_00001, s_00007,aux537_BOOL);
constraint int_lt_reif(s_00007,aux228,aux538_BOOL);
constraint int_le_reif(s_00002, s_00001,aux539_BOOL);
constraint int_lt_reif(s_00001,aux234,aux540_BOOL);
constraint int_le_reif(s_00002, s_00004,aux541_BOOL);
constraint int_lt_reif(s_00004,aux234,aux542_BOOL);
constraint int_le_reif(s_00002, s_00005,aux543_BOOL);
constraint int_lt_reif(s_00005,aux234,aux544_BOOL);
constraint int_le_reif(s_00004, s_00001,aux545_BOOL);
constraint int_lt_reif(s_00001,aux232,aux546_BOOL);
constraint int_le_reif(s_00004, s_00002,aux547_BOOL);
constraint int_lt_reif(s_00002,aux232,aux548_BOOL);
constraint int_le_reif(s_00004, s_00005,aux549_BOOL);
constraint int_lt_reif(s_00005,aux232,aux550_BOOL);
constraint int_le_reif(s_00004, s_00007,aux551_BOOL);
constraint int_lt_reif(s_00007,aux232,aux552_BOOL);
constraint int_le_reif(s_00005, s_00002,aux553_BOOL);
constraint int_lt_reif(s_00002,aux235,aux554_BOOL);
constraint int_le_reif(s_00005, s_00004,aux555_BOOL);
constraint int_lt_reif(s_00004,aux235,aux556_BOOL);
constraint int_le_reif(s_00005, s_00006,aux557_BOOL);
constraint int_lt_reif(s_00006,aux235,aux558_BOOL);
constraint int_le_reif(s_00005, s_00007,aux559_BOOL);
constraint int_lt_reif(s_00007,aux235,aux560_BOOL);
constraint int_le_reif(s_00005, s_00009,aux561_BOOL);
constraint int_lt_reif(s_00009,aux235,aux562_BOOL);
constraint int_le_reif(s_00004, s_00012,aux563_BOOL);
constraint int_lt_reif(s_00012,aux232,aux564_BOOL);
constraint int_le_reif(s_00006, s_00005,aux565_BOOL);
constraint int_lt_reif(s_00005,aux238,aux566_BOOL);
constraint int_le_reif(s_00006, s_00007,aux567_BOOL);
constraint int_lt_reif(s_00007,aux238,aux568_BOOL);
constraint int_le_reif(s_00007, s_00001,aux569_BOOL);
constraint int_lt_reif(s_00001,aux237,aux570_BOOL);
constraint int_le_reif(s_00007, s_00004,aux571_BOOL);
constraint int_lt_reif(s_00004,aux237,aux572_BOOL);
constraint int_le_reif(s_00007, s_00005,aux573_BOOL);
constraint int_lt_reif(s_00005,aux237,aux574_BOOL);
constraint int_le_reif(s_00007, s_00006,aux575_BOOL);
constraint int_lt_reif(s_00006,aux237,aux576_BOOL);
constraint int_le_reif(s_00006, s_00012,aux577_BOOL);
constraint int_lt_reif(s_00012,aux238,aux578_BOOL);
constraint int_le_reif(s_00009, s_00005,aux579_BOOL);
constraint int_lt_reif(s_00005,aux231,aux580_BOOL);
constraint int_le_reif(s_00010, s_00005,aux581_BOOL);
constraint int_lt_reif(s_00005,aux230,aux582_BOOL);
constraint int_le_reif(s_00010, s_00006,aux583_BOOL);
constraint int_lt_reif(s_00006,aux230,aux584_BOOL);
constraint int_le_reif(s_00010, s_00009,aux585_BOOL);
constraint int_lt_reif(s_00009,aux230,aux586_BOOL);
constraint int_le_reif(s_00012, s_00004,aux587_BOOL);
constraint int_lt_reif(s_00004,aux226,aux588_BOOL);
constraint int_le_reif(s_00011, s_00009,aux589_BOOL);
constraint int_lt_reif(s_00009,aux233,aux590_BOOL);
constraint int_le_reif(s_00012, s_00006,aux591_BOOL);
constraint int_lt_reif(s_00006,aux226,aux592_BOOL);
constraint int_le_reif(s_00012, s_00009,aux593_BOOL);
constraint int_lt_reif(s_00009,aux226,aux594_BOOL);
constraint int_le_reif(s_00011, s_00012,aux595_BOOL);
constraint int_lt_reif(s_00012,aux233,aux596_BOOL);
constraint int_le_reif(s_00012, s_00011,aux597_BOOL);
constraint int_lt_reif(s_00011,aux226,aux598_BOOL);
constraint int_le_reif(s_00012, s_00013,aux599_BOOL);
constraint int_lt_reif(s_00013,aux226,aux600_BOOL);
constraint int_le_reif(s_00012, s_00014,aux601_BOOL);
constraint int_lt_reif(s_00014,aux226,aux602_BOOL);
constraint int_le_reif(s_00013, s_00012,aux603_BOOL);
constraint int_lt_reif(s_00012,aux227,aux604_BOOL);
constraint int_le_reif(s_00013, s_00014,aux605_BOOL);
constraint int_lt_reif(s_00014,aux227,aux606_BOOL);
constraint int_le_reif(s_00014, s_00012,aux607_BOOL);
constraint int_lt_reif(s_00012,aux236,aux608_BOOL);
constraint int_le_reif(s_00014, s_00013,aux609_BOOL);
constraint int_lt_reif(s_00013,aux236,aux610_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux75_BOOL],aux611_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux76_BOOL],aux612_BOOL);
constraint array_bool_and([aux123_BOOL,w_00003_00006_BOOL],aux613_BOOL);
constraint array_bool_and([aux124_BOOL,w_00003_00011_BOOL],aux614_BOOL);
constraint array_bool_and([aux173_BOOL,w_00003_00009_BOOL],aux615_BOOL);
constraint array_bool_and([aux27_BOOL,w_00001_00005_BOOL],aux616_BOOL);
constraint array_bool_and([aux29_BOOL,w_00001_00007_BOOL],aux617_BOOL);
constraint array_bool_and([aux31_BOOL,w_00001_00012_BOOL],aux618_BOOL);
constraint array_bool_and([aux90_BOOL,w_00001_00010_BOOL],aux619_BOOL);
constraint array_bool_and([aux141_BOOL,w_00001_00008_BOOL],aux620_BOOL);
constraint array_bool_and([aux100_BOOL,w_00003_00005_BOOL],aux621_BOOL);
constraint array_bool_and([aux103_BOOL,w_00003_00009_BOOL],aux622_BOOL);
constraint array_bool_and([aux105_BOOL,w_00003_00006_BOOL],aux623_BOOL);
constraint array_bool_and([aux169_BOOL,w_00003_00004_BOOL],aux624_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux27_BOOL],aux625_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux29_BOOL],aux626_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux31_BOOL],aux627_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux90_BOOL],aux628_BOOL);
constraint array_bool_and([aux115_BOOL,w_00003_00004_BOOL],aux629_BOOL);
constraint array_bool_and([aux117_BOOL,w_00003_00013_BOOL],aux630_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux82_BOOL],aux631_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux83_BOOL],aux632_BOOL);
constraint array_bool_and([aux39_BOOL,w_00001_00011_BOOL],aux633_BOOL);
constraint array_bool_and([aux40_BOOL,w_00001_00006_BOOL],aux634_BOOL);
constraint array_bool_and([aux109_BOOL,w_00001_00009_BOOL],aux635_BOOL);
constraint array_bool_and([aux144_BOOL,w_00001_00003_BOOL],aux636_BOOL);
constraint array_bool_and([aux145_BOOL,w_00001_00005_BOOL],aux637_BOOL);
constraint array_bool_and([aux147_BOOL,w_00001_00007_BOOL],aux638_BOOL);
constraint array_bool_and([aux148_BOOL,w_00001_00009_BOOL],aux639_BOOL);
constraint array_bool_and([aux151_BOOL,w_00001_00006_BOOL],aux640_BOOL);
constraint array_bool_and([aux93_BOOL,w_00001_00005_BOOL],aux641_BOOL);
constraint array_bool_and([aux96_BOOL,w_00001_00010_BOOL],aux642_BOOL);
constraint array_bool_and([aux97_BOOL,w_00001_00011_BOOL],aux643_BOOL);
constraint array_bool_and([aux99_BOOL,w_00001_00012_BOOL],aux644_BOOL);
constraint array_bool_and([aux154_BOOL,w_00001_00008_BOOL],aux645_BOOL);
constraint array_bool_and([aux12_BOOL,w_00001_00007_BOOL],aux646_BOOL);
constraint array_bool_and([aux127_BOOL,w_00001_00003_BOOL],aux647_BOOL);
constraint array_bool_and([aux15_BOOL,w_00005_00007_BOOL],aux648_BOOL);
constraint array_bool_and([aux26_BOOL,w_00005_00006_BOOL],aux649_BOOL);
constraint array_bool_and([aux59_BOOL,w_00005_00004_BOOL],aux650_BOOL);
constraint array_bool_and([aux62_BOOL,w_00005_00002_BOOL],aux651_BOOL);
constraint array_bool_and([aux87_BOOL,w_00005_00009_BOOL],aux652_BOOL);
constraint array_bool_and([aux88_BOOL,w_00005_00010_BOOL],aux653_BOOL);
constraint array_bool_and([aux138_BOOL,w_00005_00003_BOOL],aux654_BOOL);
constraint array_bool_and([aux139_BOOL,w_00005_00008_BOOL],aux655_BOOL);
constraint array_bool_and([aux38_BOOL,w_00001_00012_BOOL],aux656_BOOL);
constraint array_bool_and([aux107_BOOL,w_00001_00009_BOOL],aux657_BOOL);
constraint array_bool_and([aux129_BOOL,w_00005_00005_BOOL],aux658_BOOL);
constraint array_bool_and([aux130_BOOL,w_00005_00001_BOOL],aux659_BOOL);
constraint array_bool_and([aux131_BOOL,w_00005_00007_BOOL],aux660_BOOL);
constraint array_bool_and([aux132_BOOL,w_00005_00008_BOOL],aux661_BOOL);
constraint array_bool_and([aux134_BOOL,w_00005_00010_BOOL],aux662_BOOL);
constraint array_bool_and([aux182_BOOL,w_00005_00002_BOOL],aux663_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux138_BOOL],aux664_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux139_BOOL],aux665_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux62_BOOL],aux666_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux15_BOOL],aux667_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux26_BOOL],aux668_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux59_BOOL],aux669_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux87_BOOL],aux670_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux88_BOOL],aux671_BOOL);
constraint array_bool_and([aux100_BOOL,w_00001_00005_BOOL],aux672_BOOL);
constraint array_bool_and([aux103_BOOL,w_00001_00009_BOOL],aux673_BOOL);
constraint array_bool_and([aux105_BOOL,w_00001_00006_BOOL],aux674_BOOL);
constraint array_bool_and([aux155_BOOL,w_00001_00003_BOOL],aux675_BOOL);
constraint array_bool_and([aux115_BOOL,w_00004_00004_BOOL],aux676_BOOL);
constraint array_bool_and([aux117_BOOL,w_00004_00013_BOOL],aux677_BOOL);
constraint array_bool_and([aux27_BOOL,w_00004_00005_BOOL],aux678_BOOL);
constraint array_bool_and([aux29_BOOL,w_00004_00007_BOOL],aux679_BOOL);
constraint array_bool_and([aux31_BOOL,w_00004_00012_BOOL],aux680_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux67_BOOL],aux681_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux68_BOOL],aux682_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux69_BOOL],aux683_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux130_BOOL],aux684_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux129_BOOL],aux685_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux131_BOOL],aux686_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux182_BOOL],aux687_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux132_BOOL],aux688_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux134_BOOL],aux689_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux18_BOOL],aux690_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux17_BOOL],aux691_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux33_BOOL],aux692_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux63_BOOL],aux693_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux46_BOOL],aux694_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux47_BOOL],aux695_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux45_BOOL],aux696_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux53_BOOL],aux697_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux58_BOOL],aux698_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux52_BOOL],aux699_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux54_BOOL],aux700_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux55_BOOL],aux701_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux44_BOOL],aux702_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux41_BOOL],aux703_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux12_BOOL],aux704_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux62_BOOL],aux705_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux15_BOOL],aux706_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux26_BOOL],aux707_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux59_BOOL],aux708_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux87_BOOL],aux709_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux88_BOOL],aux710_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux109_BOOL],aux711_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux40_BOOL],aux712_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux67_BOOL],aux713_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux39_BOOL],aux714_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux69_BOOL],aux715_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux144_BOOL],aux716_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux145_BOOL],aux717_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux188_BOOL],aux718_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux151_BOOL],aux719_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux147_BOOL],aux720_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux185_BOOL],aux721_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux148_BOOL],aux722_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux40_BOOL],aux723_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux67_BOOL],aux724_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux39_BOOL],aux725_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux68_BOOL],aux726_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux69_BOOL],aux727_BOOL);
constraint array_bool_and([aux109_BOOL,w_00003_00009_BOOL],aux728_BOOL);
constraint array_bool_and([aux38_BOOL,w_00005_00012_BOOL],aux729_BOOL);
constraint array_bool_and([aux107_BOOL,w_00005_00009_BOOL],aux730_BOOL);
constraint array_bool_and([aux119_BOOL,w_00005_00004_BOOL],aux731_BOOL);
constraint array_bool_and([aux121_BOOL,w_00005_00013_BOOL],aux732_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux75_BOOL],aux733_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux76_BOOL],aux734_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux119_BOOL],aux735_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux107_BOOL],aux736_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux38_BOOL],aux737_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux82_BOOL],aux738_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux83_BOOL],aux739_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux123_BOOL],false);
constraint array_bool_and([w_00006_00009_BOOL,aux173_BOOL],false);
constraint array_bool_and([w_00006_00011_BOOL,aux124_BOOL],false);
constraint array_bool_and([w_00006_00012_BOOL,aux75_BOOL],false);
constraint array_bool_and([w_00006_00014_BOOL,aux76_BOOL],false);
constraint array_bool_and([aux27_BOOL,w_00005_00005_BOOL],aux745_BOOL);
constraint array_bool_and([aux29_BOOL,w_00005_00007_BOOL],aux746_BOOL);
constraint array_bool_and([aux31_BOOL,w_00005_00012_BOOL],aux747_BOOL);
constraint array_bool_and([aux90_BOOL,w_00005_00010_BOOL],aux748_BOOL);
constraint array_bool_and([aux115_BOOL,w_00005_00004_BOOL],aux749_BOOL);
constraint array_bool_and([aux117_BOOL,w_00005_00013_BOOL],aux750_BOOL);
constraint array_bool_and([aux141_BOOL,w_00005_00008_BOOL],aux751_BOOL);
constraint array_bool_and([aux39_BOOL,w_00005_00011_BOOL],aux752_BOOL);
constraint array_bool_and([aux40_BOOL,w_00005_00006_BOOL],aux753_BOOL);
constraint array_bool_and([aux67_BOOL,w_00005_00004_BOOL],aux754_BOOL);
constraint array_bool_and([aux68_BOOL,w_00005_00013_BOOL],aux755_BOOL);
constraint array_bool_and([aux69_BOOL,w_00005_00014_BOOL],aux756_BOOL);
constraint array_bool_and([aux109_BOOL,w_00005_00009_BOOL],aux757_BOOL);
constraint array_bool_and([aux119_BOOL,w_00004_00004_BOOL],aux758_BOOL);
constraint array_bool_and([aux121_BOOL,w_00004_00013_BOOL],aux759_BOOL);
constraint array_bool_and([aux38_BOOL,w_00004_00012_BOOL],aux760_BOOL);
constraint array_bool_and([aux17_BOOL,w_00001_00005_BOOL],aux761_BOOL);
constraint array_bool_and([aux18_BOOL,w_00001_00001_BOOL],aux762_BOOL);
constraint array_bool_and([aux33_BOOL,w_00001_00006_BOOL],aux763_BOOL);
constraint array_bool_and([aux142_BOOL,w_00001_00003_BOOL],aux764_BOOL);
constraint array_bool_and([aux143_BOOL,w_00001_00008_BOOL],aux765_BOOL);
constraint array_bool_and([aux17_BOOL,w_00005_00005_BOOL],aux766_BOOL);
constraint array_bool_and([aux18_BOOL,w_00005_00001_BOOL],aux767_BOOL);
constraint array_bool_and([aux33_BOOL,w_00005_00006_BOOL],aux768_BOOL);
constraint array_bool_and([aux63_BOOL,w_00005_00004_BOOL],aux769_BOOL);
constraint array_bool_and([aux142_BOOL,w_00005_00003_BOOL],aux770_BOOL);
constraint array_bool_and([aux143_BOOL,w_00005_00008_BOOL],aux771_BOOL);
constraint array_bool_and([aux75_BOOL,w_00005_00012_BOOL],aux772_BOOL);
constraint array_bool_and([aux76_BOOL,w_00005_00014_BOOL],aux773_BOOL);
constraint array_bool_and([aux123_BOOL,w_00005_00006_BOOL],aux774_BOOL);
constraint array_bool_and([aux124_BOOL,w_00005_00011_BOOL],aux775_BOOL);
constraint array_bool_and([aux173_BOOL,w_00005_00009_BOOL],aux776_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux113_BOOL],aux777_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux163_BOOL],aux778_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux184_BOOL],aux779_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux114_BOOL],aux780_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux164_BOOL],aux781_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux53_BOOL],aux782_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux58_BOOL],aux783_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux52_BOOL],aux784_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux54_BOOL],aux785_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux55_BOOL],aux786_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux127_BOOL],aux787_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux44_BOOL],aux788_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux41_BOOL],aux789_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux12_BOOL],aux790_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux93_BOOL],aux791_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux96_BOOL],aux792_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux97_BOOL],aux793_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux99_BOOL],aux794_BOOL);
constraint array_bool_and([aux165_BOOL,w_00003_00004_BOOL],aux795_BOOL);
constraint array_bool_and([aux167_BOOL,w_00003_00013_BOOL],aux796_BOOL);
constraint array_bool_and([aux45_BOOL,w_00005_00005_BOOL],aux797_BOOL);
constraint array_bool_and([aux46_BOOL,w_00005_00001_BOOL],aux798_BOOL);
constraint array_bool_and([aux47_BOOL,w_00005_00004_BOOL],aux799_BOOL);
constraint array_bool_and([aux177_BOOL,w_00005_00003_BOOL],aux800_BOOL);
constraint array_bool_and([aux178_BOOL,w_00005_00008_BOOL],aux801_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux177_BOOL],aux802_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux178_BOOL],aux803_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux46_BOOL],aux804_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux47_BOOL],aux805_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux45_BOOL],aux806_BOOL);
constraint array_bool_and([aux15_BOOL,w_00001_00007_BOOL],aux807_BOOL);
constraint array_bool_and([aux26_BOOL,w_00001_00006_BOOL],aux808_BOOL);
constraint array_bool_and([aux87_BOOL,w_00001_00009_BOOL],aux809_BOOL);
constraint array_bool_and([aux88_BOOL,w_00001_00010_BOOL],aux810_BOOL);
constraint array_bool_and([aux138_BOOL,w_00001_00003_BOOL],aux811_BOOL);
constraint array_bool_and([aux139_BOOL,w_00001_00008_BOOL],aux812_BOOL);
constraint array_bool_and([aux39_BOOL,w_00004_00011_BOOL],aux813_BOOL);
constraint array_bool_and([aux40_BOOL,w_00004_00006_BOOL],aux814_BOOL);
constraint array_bool_and([aux67_BOOL,w_00004_00004_BOOL],aux815_BOOL);
constraint array_bool_and([aux68_BOOL,w_00004_00013_BOOL],aux816_BOOL);
constraint array_bool_and([aux69_BOOL,w_00004_00014_BOOL],aux817_BOOL);
constraint array_bool_and([aux113_BOOL,w_00004_00006_BOOL],aux818_BOOL);
constraint array_bool_and([aux114_BOOL,w_00004_00011_BOOL],aux819_BOOL);
constraint array_bool_and([aux52_BOOL,w_00004_00005_BOOL],aux820_BOOL);
constraint array_bool_and([aux53_BOOL,w_00004_00001_BOOL],aux821_BOOL);
constraint array_bool_and([aux54_BOOL,w_00004_00007_BOOL],aux822_BOOL);
constraint array_bool_and([aux55_BOOL,w_00004_00012_BOOL],aux823_BOOL);
constraint array_bool_and([aux58_BOOL,w_00004_00002_BOOL],aux824_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux115_BOOL],aux825_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux141_BOOL],aux826_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux27_BOOL],aux827_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux29_BOOL],aux828_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux31_BOOL],aux829_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux90_BOOL],aux830_BOOL);
constraint int_le_reif(s_00001, s_00003,aux831_BOOL);
constraint int_lt_reif(s_00003,aux228,aux832_BOOL);
constraint int_le_reif(s_00002, s_00003,aux833_BOOL);
constraint int_lt_reif(s_00003,aux234,aux834_BOOL);
constraint int_le_reif(s_00002, s_00008,aux835_BOOL);
constraint int_lt_reif(s_00008,aux234,aux836_BOOL);
constraint int_le_reif(s_00003, s_00001,aux837_BOOL);
constraint int_lt_reif(s_00001,aux229,aux838_BOOL);
constraint int_le_reif(s_00003, s_00002,aux839_BOOL);
constraint int_lt_reif(s_00002,aux229,aux840_BOOL);
constraint int_le_reif(s_00003, s_00005,aux841_BOOL);
constraint int_lt_reif(s_00005,aux229,aux842_BOOL);
constraint int_le_reif(s_00003, s_00007,aux843_BOOL);
constraint int_lt_reif(s_00007,aux229,aux844_BOOL);
constraint int_le_reif(s_00003, s_00008,aux845_BOOL);
constraint int_lt_reif(s_00008,aux229,aux846_BOOL);
constraint int_le_reif(s_00004, s_00006,aux847_BOOL);
constraint int_lt_reif(s_00006,aux232,aux848_BOOL);
constraint int_le_reif(s_00004, s_00008,aux849_BOOL);
constraint int_lt_reif(s_00008,aux232,aux850_BOOL);
constraint int_le_reif(s_00004, s_00009,aux851_BOOL);
constraint int_lt_reif(s_00009,aux232,aux852_BOOL);
constraint int_le_reif(s_00005, s_00003,aux853_BOOL);
constraint int_lt_reif(s_00003,aux235,aux854_BOOL);
constraint int_le_reif(s_00005, s_00008,aux855_BOOL);
constraint int_lt_reif(s_00008,aux235,aux856_BOOL);
constraint int_le_reif(s_00003, s_00010,aux857_BOOL);
constraint int_lt_reif(s_00010,aux229,aux858_BOOL);
constraint int_le_reif(s_00004, s_00010,aux859_BOOL);
constraint int_lt_reif(s_00010,aux232,aux860_BOOL);
constraint int_le_reif(s_00004, s_00011,aux861_BOOL);
constraint int_lt_reif(s_00011,aux232,aux862_BOOL);
constraint int_le_reif(s_00006, s_00004,aux863_BOOL);
constraint int_lt_reif(s_00004,aux238,aux864_BOOL);
constraint int_le_reif(s_00006, s_00008,aux865_BOOL);
constraint int_lt_reif(s_00008,aux238,aux866_BOOL);
constraint int_le_reif(s_00005, s_00010,aux867_BOOL);
constraint int_lt_reif(s_00010,aux235,aux868_BOOL);
constraint int_le_reif(s_00007, s_00003,aux869_BOOL);
constraint int_lt_reif(s_00003,aux237,aux870_BOOL);
constraint int_le_reif(s_00007, s_00008,aux871_BOOL);
constraint int_lt_reif(s_00008,aux237,aux872_BOOL);
constraint int_le_reif(s_00006, s_00010,aux873_BOOL);
constraint int_lt_reif(s_00010,aux238,aux874_BOOL);
constraint int_le_reif(s_00006, s_00013,aux875_BOOL);
constraint int_lt_reif(s_00013,aux238,aux876_BOOL);
constraint int_le_reif(s_00008, s_00002,aux877_BOOL);
constraint int_lt_reif(s_00002,aux239,aux878_BOOL);
constraint int_le_reif(s_00008, s_00003,aux879_BOOL);
constraint int_lt_reif(s_00003,aux239,aux880_BOOL);
constraint int_le_reif(s_00008, s_00004,aux881_BOOL);
constraint int_lt_reif(s_00004,aux239,aux882_BOOL);
constraint int_le_reif(s_00008, s_00005,aux883_BOOL);
constraint int_lt_reif(s_00005,aux239,aux884_BOOL);
constraint int_le_reif(s_00008, s_00006,aux885_BOOL);
constraint int_lt_reif(s_00006,aux239,aux886_BOOL);
constraint int_le_reif(s_00008, s_00007,aux887_BOOL);
constraint int_lt_reif(s_00007,aux239,aux888_BOOL);
constraint int_le_reif(s_00008, s_00009,aux889_BOOL);
constraint int_lt_reif(s_00009,aux239,aux890_BOOL);
constraint int_le_reif(s_00009, s_00004,aux891_BOOL);
constraint int_lt_reif(s_00004,aux231,aux892_BOOL);
constraint int_le_reif(s_00009, s_00008,aux893_BOOL);
constraint int_lt_reif(s_00008,aux231,aux894_BOOL);
constraint int_le_reif(s_00009, s_00010,aux895_BOOL);
constraint int_lt_reif(s_00010,aux231,aux896_BOOL);
constraint int_le_reif(s_00009, s_00011,aux897_BOOL);
constraint int_lt_reif(s_00011,aux231,aux898_BOOL);
constraint int_le_reif(s_00009, s_00012,aux899_BOOL);
constraint int_lt_reif(s_00012,aux231,aux900_BOOL);
constraint int_le_reif(s_00009, s_00013,aux901_BOOL);
constraint int_lt_reif(s_00013,aux231,aux902_BOOL);
constraint int_le_reif(s_00010, s_00003,aux903_BOOL);
constraint int_lt_reif(s_00003,aux230,aux904_BOOL);
constraint int_le_reif(s_00010, s_00004,aux905_BOOL);
constraint int_lt_reif(s_00004,aux230,aux906_BOOL);
constraint int_le_reif(s_00011, s_00004,aux907_BOOL);
constraint int_lt_reif(s_00004,aux233,aux908_BOOL);
constraint int_le_reif(s_00011, s_00013,aux909_BOOL);
constraint int_lt_reif(s_00013,aux233,aux910_BOOL);
constraint int_le_reif(s_00013, s_00006,aux911_BOOL);
constraint int_lt_reif(s_00006,aux227,aux912_BOOL);
constraint int_le_reif(s_00013, s_00009,aux913_BOOL);
constraint int_lt_reif(s_00009,aux227,aux914_BOOL);
constraint int_le_reif(s_00013, s_00011,aux915_BOOL);
constraint int_lt_reif(s_00011,aux227,aux916_BOOL);
constraint array_bool_and([aux82_BOOL,w_00005_00012_BOOL],aux917_BOOL);
constraint array_bool_and([aux83_BOOL,w_00005_00013_BOOL],aux918_BOOL);
constraint array_bool_and([aux129_BOOL,w_00001_00005_BOOL],aux919_BOOL);
constraint array_bool_and([aux130_BOOL,w_00001_00001_BOOL],aux920_BOOL);
constraint array_bool_and([aux131_BOOL,w_00001_00007_BOOL],aux921_BOOL);
constraint array_bool_and([aux132_BOOL,w_00001_00008_BOOL],aux922_BOOL);
constraint array_bool_and([aux134_BOOL,w_00001_00010_BOOL],aux923_BOOL);
constraint array_bool_and([aux12_BOOL,w_00004_00007_BOOL],aux924_BOOL);
constraint array_bool_and([aux41_BOOL,w_00004_00004_BOOL],aux925_BOOL);
constraint array_bool_and([aux44_BOOL,w_00004_00002_BOOL],aux926_BOOL);
constraint int_lt(s_00014,aux236);
constraint int_lt(s_00006,aux238);
constraint int_lt(s_00011,aux233);
constraint int_lt(s_00013,aux227);
constraint int_lt(s_00001,aux228);
constraint int_lt(s_00005,aux235);
constraint int_lt(s_00002,aux234);
constraint int_lt(s_00009,aux231);
constraint int_lt(s_00010,aux230);
constraint int_lt(s_00004,aux232);
constraint int_lt(s_00012,aux226);
constraint int_lt(s_00008,aux239);
constraint int_lt(s_00003,aux229);
constraint int_lt(s_00007,aux237);
constraint int_lin_eq([-1,1,1],[aux235,1,s_00005],0);
constraint int_lin_eq([-1,1,1],[aux228,2,s_00001],0);
constraint int_lin_eq([-1,1,1],[aux237,2,s_00007],0);
constraint int_lin_eq([-1,1,1],[aux226,3,s_00012],0);
constraint int_lin_eq([-1,1,1],[aux238,4,s_00006],0);
constraint int_lin_eq([-1,1,1],[aux232,2,s_00004],0);
constraint int_lin_eq([-1,1,1],[aux230,1,s_00010],0);
constraint int_lin_eq([-1,1,1],[aux234,6,s_00002],0);
constraint int_lin_eq([-1,1,1],[aux233,2,s_00011],0);
constraint int_lin_eq([-1,1,1],[aux227,3,s_00013],0);
constraint int_lin_eq([-1,1,1],[aux236,3,s_00014],0);
constraint int_lin_eq([-1,1,1],[aux231,2,s_00009],0);
constraint int_lin_eq([-1,1,1],[aux229,1,s_00003],0);
constraint int_lin_eq([-1,1,1],[aux239,2,s_00008],0);
constraint int_lin_eq([1,-1,1,1],[w_00006_00001_INTEGER,aux207,w_00003_00001_INTEGER,w_00005_00001_INTEGER],0);
constraint int_lin_eq([1,-1,1,1],[w_00006_00005_INTEGER,aux208,w_00003_00005_INTEGER,w_00005_00005_INTEGER],0);
constraint int_lin_eq([1,-1,1,1],[w_00006_00007_INTEGER,aux209,w_00003_00007_INTEGER,w_00005_00007_INTEGER],0);
constraint int_lin_eq([1,-1,1,1],[w_00006_00012_INTEGER,aux210,w_00003_00012_INTEGER,w_00005_00012_INTEGER],0);
constraint int_lin_eq([-1,1,1],[aux211,w_00003_00014_INTEGER,w_00004_00014_INTEGER],0);
constraint int_lin_le([1,1,1,-1],[w_00006_00014_INTEGER,aux240_INTEGER,aux83_INTEGER,1],0);
constraint int_lin_le([1,2,1,1,-1],[aux93_INTEGER,aux96_INTEGER,aux97_INTEGER,aux99_INTEGER,2],0);
constraint int_lin_le([1,1,1,1,1,-1],[aux241_INTEGER,aux242_INTEGER,aux243_INTEGER,aux244_INTEGER,w_00004_00013_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,-1],[aux245_INTEGER,aux246_INTEGER,aux247_INTEGER,aux248_INTEGER,w_00004_00007_INTEGER,1],0);
constraint int_lin_le([-1,-1,1],[w_00003_00006_INTEGER,w_00004_00006_INTEGER,1],0);
constraint int_lin_le([-1,-1,1],[w_00003_00011_INTEGER,w_00004_00011_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,-1],[aux52_INTEGER,aux53_INTEGER,aux54_INTEGER,aux55_INTEGER,aux58_INTEGER,4],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,-1],[aux249_INTEGER,aux250_INTEGER,aux251_INTEGER,aux252_INTEGER,aux253_INTEGER,aux254_INTEGER,aux255_INTEGER,w_00005_00009_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,-1],[aux256_INTEGER,aux257_INTEGER,aux258_INTEGER,w_00002_00001_INTEGER,1],0);
constraint int_le(aux235, s_00011);
constraint int_le(aux235, s_00012);
constraint int_le(aux235, s_00013);
constraint int_le(aux228, s_00005);
constraint int_le(aux228, s_00006);
constraint int_le(aux228, s_00008);
constraint int_le(aux237, s_00009);
constraint int_le(aux237, s_00010);
constraint int_le(aux238, s_00009);
constraint int_le(aux238, s_00011);
constraint int_le(aux232, s_00013);
constraint int_le(aux232, s_00014);
constraint int_le(aux230, s_00011);
constraint int_le(aux230, s_00012);
constraint int_le(aux230, s_00013);
constraint int_le(aux234, s_00006);
constraint int_le(aux234, s_00007);
constraint int_le(aux233, s_00014);
constraint int_le(aux231, s_00014);
constraint int_le(aux229, s_00004);
constraint int_le(aux229, s_00006);
constraint int_le(aux229, s_00012);
constraint int_le(aux239, s_00010);
constraint int_lin_le([1,1,1,-1],[aux259_INTEGER,aux260_INTEGER,w_00004_00014_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,-1],[aux261_INTEGER,aux262_INTEGER,aux263_INTEGER,aux264_INTEGER,w_00005_00001_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,-1],[aux265_INTEGER,aux266_INTEGER,aux267_INTEGER,w_00002_00005_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,1,1,1,-1],[aux268_INTEGER,aux269_INTEGER,aux270_INTEGER,aux271_INTEGER,aux272_INTEGER,aux273_INTEGER,aux274_INTEGER,aux275_INTEGER,aux276_INTEGER,aux277_INTEGER,w_00005_00004_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,-1],[w_00006_00009_INTEGER,aux167_INTEGER,aux278_INTEGER,aux279_INTEGER,aux280_INTEGER,aux281_INTEGER,aux282_INTEGER,aux283_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,-1],[aux284_INTEGER,aux285_INTEGER,aux286_INTEGER,w_00002_00007_INTEGER,1],0);
constraint int_lin_le([-1,-1,1],[aux207,w_00001_00001_INTEGER,1],0);
constraint int_lin_le([-1,-1,1],[aux208,w_00001_00005_INTEGER,1],0);
constraint int_lin_le([-1,-1,1],[aux209,w_00001_00007_INTEGER,1],0);
constraint int_lin_le([-1,-1,1],[aux210,w_00001_00012_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,-1],[aux287_INTEGER,aux288_INTEGER,aux289_INTEGER,aux290_INTEGER,aux291_INTEGER,w_00005_00010_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,-1],[w_00006_00007_INTEGER,aux292_INTEGER,aux293_INTEGER,aux294_INTEGER,aux295_INTEGER,aux296_INTEGER,aux297_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,-1],[w_00006_00010_INTEGER,aux298_INTEGER,aux299_INTEGER,aux300_INTEGER,aux301_INTEGER,aux302_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,-1],[aux303_INTEGER,aux304_INTEGER,aux305_INTEGER,w_00004_00002_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,-1],[aux306_INTEGER,aux307_INTEGER,aux308_INTEGER,aux309_INTEGER,w_00004_00005_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,1,1,-1],[aux310_INTEGER,aux311_INTEGER,aux312_INTEGER,aux313_INTEGER,aux314_INTEGER,aux315_INTEGER,aux316_INTEGER,aux317_INTEGER,aux318_INTEGER,w_00003_00004_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,-1],[aux319_INTEGER,aux320_INTEGER,aux321_INTEGER,aux322_INTEGER,aux323_INTEGER,aux324_INTEGER,aux325_INTEGER,w_00005_00008_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,-1],[aux326_INTEGER,aux327_INTEGER,aux328_INTEGER,aux329_INTEGER,w_00003_00011_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,-1],[aux330_INTEGER,aux331_INTEGER,aux332_INTEGER,w_00002_00002_INTEGER,1],0);
constraint array_bool_and([aux333_BOOL,aux334_BOOL],false);
constraint array_bool_and([aux335_BOOL,aux336_BOOL],false);
constraint array_bool_and([aux337_BOOL,aux338_BOOL],false);
constraint array_bool_and([aux339_BOOL,aux340_BOOL],false);
constraint array_bool_and([aux341_BOOL,aux342_BOOL],false);
constraint array_bool_and([aux343_BOOL,aux344_BOOL],false);
constraint array_bool_and([aux345_BOOL,aux346_BOOL],false);
constraint array_bool_and([aux347_BOOL,aux348_BOOL],false);
constraint array_bool_and([aux349_BOOL,aux350_BOOL],false);
constraint array_bool_and([aux351_BOOL,aux352_BOOL],false);
constraint array_bool_and([aux353_BOOL,aux354_BOOL],false);
constraint array_bool_and([aux355_BOOL,aux356_BOOL],false);
constraint array_bool_and([aux357_BOOL,aux358_BOOL],false);
constraint array_bool_and([aux359_BOOL,aux360_BOOL],false);
constraint array_bool_and([aux361_BOOL,aux362_BOOL],false);
constraint array_bool_and([aux363_BOOL,aux364_BOOL],false);
constraint array_bool_and([aux365_BOOL,aux366_BOOL],false);
constraint array_bool_and([aux367_BOOL,aux368_BOOL],false);
constraint array_bool_and([aux369_BOOL,aux370_BOOL],false);
constraint array_bool_and([aux371_BOOL,aux372_BOOL],false);
constraint array_bool_and([aux373_BOOL,aux374_BOOL],false);
constraint array_bool_and([aux375_BOOL,aux376_BOOL],false);
constraint array_bool_and([aux377_BOOL,aux378_BOOL],false);
constraint array_bool_and([aux379_BOOL,aux380_BOOL],false);
constraint array_bool_and([aux381_BOOL,aux382_BOOL],false);
constraint array_bool_and([aux383_BOOL,aux384_BOOL],false);
constraint array_bool_and([aux385_BOOL,aux386_BOOL],false);
constraint array_bool_and([aux387_BOOL,aux388_BOOL],false);
constraint array_bool_and([aux389_BOOL,aux390_BOOL],false);
constraint array_bool_and([aux391_BOOL,aux392_BOOL],false);
constraint array_bool_and([aux393_BOOL,aux394_BOOL],false);
constraint array_bool_and([aux395_BOOL,aux396_BOOL],false);
constraint array_bool_and([aux397_BOOL,aux398_BOOL],false);
constraint array_bool_and([aux399_BOOL,aux400_BOOL],false);
constraint array_bool_and([aux401_BOOL,aux402_BOOL],false);
constraint array_bool_and([aux403_BOOL,aux404_BOOL],false);
constraint array_bool_and([aux405_BOOL,aux406_BOOL],false);
constraint array_bool_and([aux407_BOOL,aux408_BOOL],false);
constraint array_bool_and([aux409_BOOL,aux410_BOOL],false);
constraint array_bool_and([aux411_BOOL,aux412_BOOL],false);
constraint array_bool_and([aux413_BOOL,aux414_BOOL],false);
constraint array_bool_and([aux415_BOOL,aux416_BOOL],false);
constraint array_bool_and([aux417_BOOL,aux418_BOOL],false);
constraint array_bool_and([aux419_BOOL,aux420_BOOL],false);
constraint array_bool_and([aux421_BOOL,aux422_BOOL],false);
constraint array_bool_and([aux423_BOOL,aux424_BOOL],false);
constraint array_bool_and([aux425_BOOL,aux426_BOOL],false);
constraint array_bool_and([aux427_BOOL,aux428_BOOL],false);
constraint array_bool_and([aux429_BOOL,aux430_BOOL],false);
constraint array_bool_and([aux431_BOOL,aux432_BOOL],false);
constraint array_bool_and([aux433_BOOL,aux434_BOOL],false);
constraint array_bool_and([aux435_BOOL,aux436_BOOL],false);
constraint array_bool_and([aux437_BOOL,aux438_BOOL],false);
constraint array_bool_and([aux439_BOOL,aux440_BOOL],false);
constraint array_bool_and([aux441_BOOL,aux442_BOOL],false);
constraint array_bool_and([aux443_BOOL,aux444_BOOL],false);
constraint array_bool_and([aux445_BOOL,aux446_BOOL],false);
constraint array_bool_and([aux447_BOOL,aux448_BOOL],false);
constraint array_bool_and([aux449_BOOL,aux450_BOOL],false);
constraint array_bool_and([aux451_BOOL,aux452_BOOL],false);
constraint array_bool_and([aux453_BOOL,aux454_BOOL],false);
constraint array_bool_and([aux455_BOOL,aux456_BOOL],false);
constraint array_bool_and([aux457_BOOL,aux458_BOOL],false);
constraint array_bool_and([aux459_BOOL,aux460_BOOL],false);
constraint array_bool_and([aux461_BOOL,aux462_BOOL],false);
constraint array_bool_and([aux463_BOOL,aux464_BOOL],false);
constraint array_bool_and([aux465_BOOL,aux466_BOOL],false);
constraint array_bool_and([aux467_BOOL,aux468_BOOL],false);
constraint array_bool_and([aux469_BOOL,aux470_BOOL],false);
constraint array_bool_and([aux471_BOOL,aux472_BOOL],false);
constraint array_bool_and([aux473_BOOL,aux474_BOOL],false);
constraint array_bool_and([aux475_BOOL,aux476_BOOL],false);
constraint array_bool_and([aux477_BOOL,aux478_BOOL],false);
constraint array_bool_and([aux479_BOOL,aux480_BOOL],false);
constraint array_bool_and([aux481_BOOL,aux482_BOOL],false);
constraint array_bool_and([aux483_BOOL,aux484_BOOL],false);
constraint array_bool_and([aux485_BOOL,aux486_BOOL],false);
constraint array_bool_and([aux487_BOOL,aux488_BOOL],false);
constraint array_bool_and([aux489_BOOL,aux490_BOOL],false);
constraint array_bool_and([aux491_BOOL,aux492_BOOL],false);
constraint array_bool_and([aux493_BOOL,aux494_BOOL],false);
constraint array_bool_and([aux495_BOOL,aux496_BOOL],false);
constraint array_bool_and([aux497_BOOL,aux498_BOOL],false);
constraint array_bool_and([aux499_BOOL,aux500_BOOL],false);
constraint array_bool_and([aux501_BOOL,aux502_BOOL],false);
constraint array_bool_and([aux503_BOOL,aux504_BOOL],false);
constraint array_bool_and([aux505_BOOL,aux506_BOOL],false);
constraint array_bool_and([aux507_BOOL,aux508_BOOL],false);
constraint array_bool_and([aux509_BOOL,aux510_BOOL],false);
constraint array_bool_and([aux511_BOOL,aux512_BOOL],false);
constraint array_bool_and([aux513_BOOL,aux514_BOOL],false);
constraint array_bool_and([aux515_BOOL,aux516_BOOL],false);
constraint array_bool_and([aux517_BOOL,aux518_BOOL],false);
constraint array_bool_and([aux519_BOOL,aux520_BOOL],false);
constraint array_bool_and([aux521_BOOL,aux522_BOOL],false);
constraint array_bool_and([aux523_BOOL,aux524_BOOL],false);
constraint array_bool_and([aux525_BOOL,aux526_BOOL],false);
constraint array_bool_and([aux527_BOOL,aux528_BOOL],false);
constraint array_bool_and([aux529_BOOL,aux530_BOOL],false);
constraint array_bool_and([aux531_BOOL,aux532_BOOL],false);
constraint array_bool_and([aux533_BOOL,aux534_BOOL],aux46_BOOL);
constraint array_bool_and([aux535_BOOL,aux536_BOOL],aux53_BOOL);
constraint array_bool_and([aux537_BOOL,aux538_BOOL],aux18_BOOL);
constraint array_bool_and([aux539_BOOL,aux540_BOOL],aux44_BOOL);
constraint array_bool_and([aux541_BOOL,aux542_BOOL],aux58_BOOL);
constraint array_bool_and([aux543_BOOL,aux544_BOOL],aux62_BOOL);
constraint array_bool_and([aux545_BOOL,aux546_BOOL],aux41_BOOL);
constraint array_bool_and([aux547_BOOL,aux548_BOOL],aux47_BOOL);
constraint array_bool_and([aux549_BOOL,aux550_BOOL],aux59_BOOL);
constraint array_bool_and([aux551_BOOL,aux552_BOOL],aux63_BOOL);
constraint array_bool_and([aux553_BOOL,aux554_BOOL],aux45_BOOL);
constraint array_bool_and([aux555_BOOL,aux556_BOOL],aux52_BOOL);
constraint array_bool_and([aux557_BOOL,aux558_BOOL],aux27_BOOL);
constraint array_bool_and([aux559_BOOL,aux560_BOOL],aux17_BOOL);
constraint array_bool_and([aux561_BOOL,aux562_BOOL],aux93_BOOL);
constraint array_bool_and([aux563_BOOL,aux564_BOOL],aux67_BOOL);
constraint array_bool_and([aux565_BOOL,aux566_BOOL],aux26_BOOL);
constraint array_bool_and([aux567_BOOL,aux568_BOOL],aux33_BOOL);
constraint array_bool_and([aux569_BOOL,aux570_BOOL],aux12_BOOL);
constraint array_bool_and([aux571_BOOL,aux572_BOOL],aux54_BOOL);
constraint array_bool_and([aux573_BOOL,aux574_BOOL],aux15_BOOL);
constraint array_bool_and([aux575_BOOL,aux576_BOOL],aux29_BOOL);
constraint array_bool_and([aux577_BOOL,aux578_BOOL],aux40_BOOL);
constraint array_bool_and([aux579_BOOL,aux580_BOOL],aux87_BOOL);
constraint array_bool_and([aux581_BOOL,aux582_BOOL],aux88_BOOL);
constraint array_bool_and([aux583_BOOL,aux584_BOOL],aux90_BOOL);
constraint array_bool_and([aux585_BOOL,aux586_BOOL],aux96_BOOL);
constraint array_bool_and([aux587_BOOL,aux588_BOOL],aux55_BOOL);
constraint array_bool_and([aux589_BOOL,aux590_BOOL],aux97_BOOL);
constraint array_bool_and([aux591_BOOL,aux592_BOOL],aux31_BOOL);
constraint array_bool_and([aux593_BOOL,aux594_BOOL],aux99_BOOL);
constraint array_bool_and([aux595_BOOL,aux596_BOOL],aux39_BOOL);
constraint array_bool_and([aux597_BOOL,aux598_BOOL],aux38_BOOL);
constraint array_bool_and([aux599_BOOL,aux600_BOOL],aux75_BOOL);
constraint array_bool_and([aux601_BOOL,aux602_BOOL],aux82_BOOL);
constraint array_bool_and([aux603_BOOL,aux604_BOOL],aux68_BOOL);
constraint array_bool_and([aux605_BOOL,aux606_BOOL],aux83_BOOL);
constraint array_bool_and([aux607_BOOL,aux608_BOOL],aux69_BOOL);
constraint array_bool_and([aux609_BOOL,aux610_BOOL],aux76_BOOL);
constraint int_le(aux226, objective);
constraint int_le(aux227, objective);
constraint int_le(aux236, objective);
constraint int_lin_le([1,1,1,1,1,1,-1],[aux611_INTEGER,aux612_INTEGER,aux613_INTEGER,aux614_INTEGER,aux615_INTEGER,w_00003_00013_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,-1],[aux616_INTEGER,aux617_INTEGER,aux618_INTEGER,aux619_INTEGER,aux620_INTEGER,w_00001_00006_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,-1],[aux621_INTEGER,aux622_INTEGER,aux623_INTEGER,aux624_INTEGER,w_00003_00010_INTEGER,1],0);
constraint int_lin_le([1,1,2,2,-1],[aux15_INTEGER,aux26_INTEGER,aux87_INTEGER,aux88_INTEGER,3],0);
constraint int_lin_le([1,1,1,1,1,1,1,-1],[aux625_INTEGER,aux626_INTEGER,aux627_INTEGER,aux628_INTEGER,aux629_INTEGER,aux630_INTEGER,w_00003_00006_INTEGER,1],0);
constraint int_lin_le([1,1,1,-1],[aux631_INTEGER,aux632_INTEGER,w_00003_00014_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,-1],[aux633_INTEGER,aux634_INTEGER,aux635_INTEGER,w_00001_00012_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,-1],[aux636_INTEGER,aux637_INTEGER,aux638_INTEGER,aux639_INTEGER,aux640_INTEGER,w_00001_00008_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,-1],[aux641_INTEGER,aux642_INTEGER,aux643_INTEGER,aux644_INTEGER,aux645_INTEGER,w_00001_00009_INTEGER,1],0);
constraint int_lin_le([1,1,1,-1],[aux646_INTEGER,aux647_INTEGER,w_00001_00001_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,1,-1],[aux648_INTEGER,aux649_INTEGER,aux650_INTEGER,aux651_INTEGER,aux652_INTEGER,aux653_INTEGER,aux654_INTEGER,aux655_INTEGER,w_00005_00005_INTEGER,1],0);
constraint int_lin_le([1,1,1,-1],[aux656_INTEGER,aux657_INTEGER,w_00001_00011_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,-1],[aux658_INTEGER,aux659_INTEGER,aux660_INTEGER,aux661_INTEGER,aux662_INTEGER,aux663_INTEGER,w_00005_00003_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,1,-1],[w_00006_00005_INTEGER,aux664_INTEGER,aux665_INTEGER,aux666_INTEGER,aux667_INTEGER,aux668_INTEGER,aux669_INTEGER,aux670_INTEGER,aux671_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,-1],[aux672_INTEGER,aux673_INTEGER,aux674_INTEGER,aux675_INTEGER,w_00001_00010_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,-1],[aux676_INTEGER,aux677_INTEGER,aux678_INTEGER,aux679_INTEGER,aux680_INTEGER,w_00004_00006_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,-1],[aux681_INTEGER,aux682_INTEGER,aux683_INTEGER,w_00002_00012_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,-1],[w_00006_00003_INTEGER,aux684_INTEGER,aux685_INTEGER,aux686_INTEGER,aux687_INTEGER,aux688_INTEGER,aux689_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,-1],[aux690_INTEGER,aux691_INTEGER,aux692_INTEGER,aux693_INTEGER,w_00003_00007_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,-1],[aux694_INTEGER,aux695_INTEGER,aux696_INTEGER,w_00003_00002_INTEGER,1],0);
constraint int_lin_le([1,1,1,2,-1],[aux27_INTEGER,aux29_INTEGER,aux31_INTEGER,aux90_INTEGER,3],0);
constraint int_lin_le([1,1,1,1,1,1,-1],[aux697_INTEGER,aux698_INTEGER,aux699_INTEGER,aux700_INTEGER,aux701_INTEGER,w_00002_00004_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,-1],[aux702_INTEGER,aux703_INTEGER,aux704_INTEGER,w_00003_00001_INTEGER,1],0);
constraint int_lin_le([1,2,1,-1],[aux100_INTEGER,aux103_INTEGER,aux105_INTEGER,2],0);
constraint int_lin_le([1,1,1,1,1,1,1,-1],[aux705_INTEGER,aux706_INTEGER,aux707_INTEGER,aux708_INTEGER,aux709_INTEGER,aux710_INTEGER,w_00003_00005_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,-1],[w_00006_00012_INTEGER,aux711_INTEGER,aux712_INTEGER,aux713_INTEGER,aux714_INTEGER,aux715_INTEGER,aux68_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,-1],[w_00006_00008_INTEGER,aux716_INTEGER,aux717_INTEGER,aux718_INTEGER,aux719_INTEGER,aux720_INTEGER,aux721_INTEGER,aux722_INTEGER,1],0);
constraint int_lin_le([2,1,1,-1],[aux109_INTEGER,aux39_INTEGER,aux40_INTEGER,3],0);
constraint int_lin_le([1,1,1,1,1,1,1,-1],[aux723_INTEGER,aux724_INTEGER,aux725_INTEGER,aux726_INTEGER,aux727_INTEGER,aux728_INTEGER,w_00003_00012_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,-1],[aux729_INTEGER,aux730_INTEGER,aux731_INTEGER,aux732_INTEGER,w_00005_00011_INTEGER,1],0);
constraint gecode_table_int([s_00006, s_00011, s_00014],[6,10,12,6,10,13,6,10,14,6,10,15,6,10,16,6,10,17,6,10,18,6,10,19,6,10,20,6,10,21,6,10,22,6,10,23,6,10,24,6,10,25,6,10,26,6,10,27,6,10,28,6,10,29,6,10,30,6,10,31,6,11,12,6,11,13,6,11,14,6,11,15,6,11,16,6,11,17,6,11,18,6,11,19,6,11,20,6,11,21,6,11,22,6,11,23,6,11,24,6,11,25,6,11,26,6,11,27,6,11,28,6,11,29,6,11,30,6,11,31,6,12,12,6,12,13,6,12,14,6,12,15,6,12,16,6,12,17,6,12,18,6,12,19,6,12,20,6,12,21,6,12,22,6,12,23,6,12,24,6,12,25,6,12,26,6,12,27,6,12,28,6,12,29,6,12,30,6,12,31,6,13,12,6,13,13,6,13,14,6,13,15,6,13,16,6,13,17,6,13,18,6,13,19,6,13,20,6,13,21,6,13,22,6,13,23,6,13,24,6,13,25,6,13,26,6,13,27,6,13,28,6,13,29,6,13,30,6,13,31,6,14,12,6,14,13,6,14,14,6,14,15,6,14,16,6,14,17,6,14,18,6,14,19,6,14,20,6,14,21,6,14,22,6,14,23,6,14,24,6,14,25,6,14,26,6,14,27,6,14,28,6,14,29,6,14,30,6,14,31,6,15,12,6,15,13,6,15,14,6,15,15,6,15,16,6,15,17,6,15,18,6,15,19,6,15,20,6,15,21,6,15,22,6,15,23,6,15,24,6,15,25,6,15,26,6,15,27,6,15,28,6,15,29,6,15,30,6,15,31,6,16,12,6,16,13,6,16,14,6,16,15,6,16,16,6,16,17,6,16,18,6,16,19,6,16,20,6,16,21,6,16,22,6,16,23,6,16,24,6,16,25,6,16,26,6,16,27,6,16,28,6,16,29,6,16,30,6,16,31,6,17,12,6,17,13,6,17,14,6,17,15,6,17,16,6,17,17,6,17,18,6,17,19,6,17,20,6,17,21,6,17,22,6,17,23,6,17,24,6,17,25,6,17,26,6,17,27,6,17,28,6,17,29,6,17,30,6,17,31,6,18,12,6,18,13,6,18,14,6,18,15,6,18,16,6,18,17,6,18,18,6,18,19,6,18,20,6,18,21,6,18,22,6,18,23,6,18,24,6,18,25,6,18,26,6,18,27,6,18,28,6,18,29,6,18,30,6,18,31,6,19,12,6,19,13,6,19,14,6,19,15,6,19,16,6,19,17,6,19,18,6,19,19,6,19,20,6,19,21,6,19,22,6,19,23,6,19,24,6,19,25,6,19,26,6,19,27,6,19,28,6,19,29,6,19,30,6,19,31,6,20,12,6,20,13,6,20,14,6,20,15,6,20,16,6,20,17,6,20,18,6,20,19,6,20,20,6,20,21,6,20,22,6,20,23,6,20,24,6,20,25,6,20,26,6,20,27,6,20,28,6,20,29,6,20,30,6,20,31,6,21,12,6,21,13,6,21,14,6,21,15,6,21,16,6,21,17,6,21,18,6,21,19,6,21,20,6,21,21,6,21,22,6,21,23,6,21,24,6,21,25,6,21,26,6,21,27,6,21,28,6,21,29,6,21,30,6,21,31,6,22,12,6,22,13,6,22,14,6,22,15,6,22,16,6,22,17,6,22,18,6,22,19,6,22,20,6,22,21,6,22,22,6,22,23,6,22,24,6,22,25,6,22,26,6,22,27,6,22,28,6,22,29,6,22,30,6,22,31,6,23,12,6,23,13,6,23,14,6,23,15,6,23,16,6,23,17,6,23,18,6,23,19,6,23,20,6,23,21,6,23,22,6,23,23,6,23,24,6,23,25,6,23,26,6,23,27,6,23,28,6,23,29,6,23,30,6,23,31,6,24,12,6,24,13,6,24,14,6,24,15,6,24,16,6,24,17,6,24,18,6,24,19,6,24,20,6,24,21,6,24,22,6,24,23,6,24,24,6,24,25,6,24,26,6,24,27,6,24,28,6,24,29,6,24,30,6,24,31,6,25,12,6,25,13,6,25,14,6,25,15,6,25,16,6,25,17,6,25,18,6,25,19,6,25,20,6,25,21,6,25,22,6,25,23,6,25,24,6,25,25,6,25,26,6,25,27,6,25,28,6,25,29,6,25,30,6,25,31,6,26,12,6,26,13,6,26,14,6,26,15,6,26,16,6,26,17,6,26,18,6,26,19,6,26,20,6,26,21,6,26,22,6,26,23,6,26,24,6,26,25,6,26,26,6,26,27,6,26,28,6,26,29,6,26,30,6,26,31,6,27,12,6,27,13,6,27,14,6,27,15,6,27,16,6,27,17,6,27,18,6,27,19,6,27,20,6,27,21,6,27,22,6,27,23,6,27,24,6,27,25,6,27,26,6,27,27,6,27,28,6,27,29,6,27,30,6,27,31,6,28,12,6,28,13,6,28,14,6,28,15,6,28,16,6,28,17,6,28,18,6,28,19,6,28,20,6,28,21,6,28,22,6,28,23,6,28,24,6,28,25,6,28,26,6,28,27,6,28,28,6,28,29,6,28,30,6,28,31,6,29,12,6,29,13,6,29,14,6,29,15,6,29,16,6,29,17,6,29,18,6,29,19,6,29,20,6,29,21,6,29,22,6,29,23,6,29,24,6,29,25,6,29,26,6,29,27,6,29,28,6,29,29,6,29,30,6,29,31,7,10,12,7,10,13,7,10,14,7,10,15,7,10,16,7,10,17,7,10,18,7,10,19,7,10,20,7,10,21,7,10,22,7,10,23,7,10,24,7,10,25,7,10,26,7,10,27,7,10,28,7,10,29,7,10,30,7,10,31,7,11,12,7,11,13,7,11,14,7,11,15,7,11,16,7,11,17,7,11,18,7,11,19,7,11,20,7,11,21,7,11,22,7,11,23,7,11,24,7,11,25,7,11,26,7,11,27,7,11,28,7,11,29,7,11,30,7,11,31,7,12,12,7,12,13,7,12,14,7,12,15,7,12,16,7,12,17,7,12,18,7,12,19,7,12,20,7,12,21,7,12,22,7,12,23,7,12,24,7,12,25,7,12,26,7,12,27,7,12,28,7,12,29,7,12,30,7,12,31,7,13,12,7,13,13,7,13,14,7,13,15,7,13,16,7,13,17,7,13,18,7,13,19,7,13,20,7,13,21,7,13,22,7,13,23,7,13,24,7,13,25,7,13,26,7,13,27,7,13,28,7,13,29,7,13,30,7,13,31,7,14,12,7,14,13,7,14,14,7,14,15,7,14,16,7,14,17,7,14,18,7,14,19,7,14,20,7,14,21,7,14,22,7,14,23,7,14,24,7,14,25,7,14,26,7,14,27,7,14,28,7,14,29,7,14,30,7,14,31,7,15,12,7,15,13,7,15,14,7,15,15,7,15,16,7,15,17,7,15,18,7,15,19,7,15,20,7,15,21,7,15,22,7,15,23,7,15,24,7,15,25,7,15,26,7,15,27,7,15,28,7,15,29,7,15,30,7,15,31,7,16,12,7,16,13,7,16,14,7,16,15,7,16,16,7,16,17,7,16,18,7,16,19,7,16,20,7,16,21,7,16,22,7,16,23,7,16,24,7,16,25,7,16,26,7,16,27,7,16,28,7,16,29,7,16,30,7,16,31,7,17,12,7,17,13,7,17,14,7,17,15,7,17,16,7,17,17,7,17,18,7,17,19,7,17,20,7,17,21,7,17,22,7,17,23,7,17,24,7,17,25,7,17,26,7,17,27,7,17,28,7,17,29,7,17,30,7,17,31,7,18,12,7,18,13,7,18,14,7,18,15,7,18,16,7,18,17,7,18,18,7,18,19,7,18,20,7,18,21,7,18,22,7,18,23,7,18,24,7,18,25,7,18,26,7,18,27,7,18,28,7,18,29,7,18,30,7,18,31,7,19,12,7,19,13,7,19,14,7,19,15,7,19,16,7,19,17,7,19,18,7,19,19,7,19,20,7,19,21,7,19,22,7,19,23,7,19,24,7,19,25,7,19,26,7,19,27,7,19,28,7,19,29,7,19,30,7,19,31,7,20,12,7,20,13,7,20,14,7,20,15,7,20,16,7,20,17,7,20,18,7,20,19,7,20,20,7,20,21,7,20,22,7,20,23,7,20,24,7,20,25,7,20,26,7,20,27,7,20,28,7,20,29,7,20,30,7,20,31,7,21,12,7,21,13,7,21,14,7,21,15,7,21,16,7,21,17,7,21,18,7,21,19,7,21,20,7,21,21,7,21,22,7,21,23,7,21,24,7,21,25,7,21,26,7,21,27,7,21,28,7,21,29,7,21,30,7,21,31,7,22,12,7,22,13,7,22,14,7,22,15,7,22,16,7,22,17,7,22,18,7,22,19,7,22,20,7,22,21,7,22,22,7,22,23,7,22,24,7,22,25,7,22,26,7,22,27,7,22,28,7,22,29,7,22,30,7,22,31,7,23,12,7,23,13,7,23,14,7,23,15,7,23,16,7,23,17,7,23,18,7,23,19,7,23,20,7,23,21,7,23,22,7,23,23,7,23,24,7,23,25,7,23,26,7,23,27,7,23,28,7,23,29,7,23,30,7,23,31,7,24,12,7,24,13,7,24,14,7,24,15,7,24,16,7,24,17,7,24,18,7,24,19,7,24,20,7,24,21,7,24,22,7,24,23,7,24,24,7,24,25,7,24,26,7,24,27,7,24,28,7,24,29,7,24,30,7,24,31,7,25,12,7,25,13,7,25,14,7,25,15,7,25,16,7,25,17,7,25,18,7,25,19,7,25,20,7,25,21,7,25,22,7,25,23,7,25,24,7,25,25,7,25,26,7,25,27,7,25,28,7,25,29,7,25,30,7,25,31,7,26,12,7,26,13,7,26,14,7,26,15,7,26,16,7,26,17,7,26,18,7,26,19,7,26,20,7,26,21,7,26,22,7,26,23,7,26,24,7,26,25,7,26,26,7,26,27,7,26,28,7,26,29,7,26,30,7,26,31,7,27,12,7,27,13,7,27,14,7,27,15,7,27,16,7,27,17,7,27,18,7,27,19,7,27,20,7,27,21,7,27,22,7,27,23,7,27,24,7,27,25,7,27,26,7,27,27,7,27,28,7,27,29,7,27,30,7,27,31,7,28,12,7,28,13,7,28,14,7,28,15,7,28,16,7,28,17,7,28,18,7,28,19,7,28,20,7,28,21,7,28,22,7,28,23,7,28,24,7,28,25,7,28,26,7,28,27,7,28,28,7,28,29,7,28,30,7,28,31,7,29,12,7,29,13,7,29,14,7,29,15,7,29,16,7,29,17,7,29,18,7,29,19,7,29,20,7,29,21,7,29,22,7,29,23,7,29,24,7,29,25,7,29,26,7,29,27,7,29,28,7,29,29,7,29,30,7,29,31,8,10,12,8,10,13,8,10,14,8,10,15,8,10,16,8,10,17,8,10,18,8,10,19,8,10,20,8,10,21,8,10,22,8,10,23,8,10,24,8,10,25,8,10,26,8,10,27,8,10,28,8,10,29,8,10,30,8,10,31,8,11,12,8,11,13,8,11,14,8,11,15,8,11,16,8,11,17,8,11,18,8,11,19,8,11,20,8,11,21,8,11,22,8,11,23,8,11,24,8,11,25,8,11,26,8,11,27,8,11,28,8,11,29,8,11,30,8,11,31,8,12,12,8,12,13,8,12,14,8,12,15,8,12,16,8,12,17,8,12,18,8,12,19,8,12,20,8,12,21,8,12,22,8,12,23,8,12,24,8,12,25,8,12,26,8,12,27,8,12,28,8,12,29,8,12,30,8,12,31,8,13,12,8,13,13,8,13,14,8,13,15,8,13,16,8,13,17,8,13,18,8,13,19,8,13,20,8,13,21,8,13,22,8,13,23,8,13,24,8,13,25,8,13,26,8,13,27,8,13,28,8,13,29,8,13,30,8,13,31,8,14,12,8,14,13,8,14,14,8,14,15,8,14,16,8,14,17,8,14,18,8,14,19,8,14,20,8,14,21,8,14,22,8,14,23,8,14,24,8,14,25,8,14,26,8,14,27,8,14,28,8,14,29,8,14,30,8,14,31,8,15,12,8,15,13,8,15,14,8,15,15,8,15,16,8,15,17,8,15,18,8,15,19,8,15,20,8,15,21,8,15,22,8,15,23,8,15,24,8,15,25,8,15,26,8,15,27,8,15,28,8,15,29,8,15,30,8,15,31,8,16,12,8,16,13,8,16,14,8,16,15,8,16,16,8,16,17,8,16,18,8,16,19,8,16,20,8,16,21,8,16,22,8,16,23,8,16,24,8,16,25,8,16,26,8,16,27,8,16,28,8,16,29,8,16,30,8,16,31,8,17,12,8,17,13,8,17,14,8,17,15,8,17,16,8,17,17,8,17,18,8,17,19,8,17,20,8,17,21,8,17,22,8,17,23,8,17,24,8,17,25,8,17,26,8,17,27,8,17,28,8,17,29,8,17,30,8,17,31,8,18,12,8,18,13,8,18,14,8,18,15,8,18,16,8,18,17,8,18,18,8,18,19,8,18,20,8,18,21,8,18,22,8,18,23,8,18,24,8,18,25,8,18,26,8,18,27,8,18,28,8,18,29,8,18,30,8,18,31,8,19,12,8,19,13,8,19,14,8,19,15,8,19,16,8,19,17,8,19,18,8,19,19,8,19,20,8,19,21,8,19,22,8,19,23,8,19,24,8,19,25,8,19,26,8,19,27,8,19,28,8,19,29,8,19,30,8,19,31,8,20,12,8,20,13,8,20,14,8,20,15,8,20,16,8,20,17,8,20,18,8,20,19,8,20,20,8,20,21,8,20,22,8,20,23,8,20,24,8,20,25,8,20,26,8,20,27,8,20,28,8,20,29,8,20,30,8,20,31,8,21,12,8,21,13,8,21,14,8,21,15,8,21,16,8,21,17,8,21,18,8,21,19,8,21,20,8,21,21,8,21,22,8,21,23,8,21,24,8,21,25,8,21,26,8,21,27,8,21,28,8,21,29,8,21,30,8,21,31,8,22,12,8,22,13,8,22,14,8,22,15,8,22,16,8,22,17,8,22,18,8,22,19,8,22,20,8,22,21,8,22,22,8,22,23,8,22,24,8,22,25,8,22,26,8,22,27,8,22,28,8,22,29,8,22,30,8,22,31,8,23,12,8,23,13,8,23,14,8,23,15,8,23,16,8,23,17,8,23,18,8,23,19,8,23,20,8,23,21,8,23,22,8,23,23,8,23,24,8,23,25,8,23,26,8,23,27,8,23,28,8,23,29,8,23,30,8,23,31,8,24,12,8,24,13,8,24,14,8,24,15,8,24,16,8,24,17,8,24,18,8,24,19,8,24,20,8,24,21,8,24,22,8,24,23,8,24,24,8,24,25,8,24,26,8,24,27,8,24,28,8,24,29,8,24,30,8,24,31,8,25,12,8,25,13,8,25,14,8,25,15,8,25,16,8,25,17,8,25,18,8,25,19,8,25,20,8,25,21,8,25,22,8,25,23,8,25,24,8,25,25,8,25,26,8,25,27,8,25,28,8,25,29,8,25,30,8,25,31,8,26,12,8,26,13,8,26,14,8,26,15,8,26,16,8,26,17,8,26,18,8,26,19,8,26,20,8,26,21,8,26,22,8,26,23,8,26,24,8,26,25,8,26,26,8,26,27,8,26,28,8,26,29,8,26,30,8,26,31,8,27,12,8,27,13,8,27,14,8,27,15,8,27,16,8,27,17,8,27,18,8,27,19,8,27,20,8,27,21,8,27,22,8,27,23,8,27,24,8,27,25,8,27,26,8,27,27,8,27,28,8,27,29,8,27,30,8,27,31,8,28,12,8,28,13,8,28,14,8,28,15,8,28,16,8,28,17,8,28,18,8,28,19,8,28,20,8,28,21,8,28,22,8,28,23,8,28,24,8,28,25,8,28,26,8,28,27,8,28,28,8,28,29,8,28,30,8,28,31,8,29,12,8,29,13,8,29,14,8,29,15,8,29,16,8,29,17,8,29,18,8,29,19,8,29,20,8,29,21,8,29,22,8,29,23,8,29,24,8,29,25,8,29,26,8,29,27,8,29,28,8,29,29,8,29,30,8,29,31,9,10,12,9,10,13,9,10,14,9,10,15,9,10,16,9,10,17,9,10,18,9,10,19,9,10,20,9,10,21,9,10,22,9,10,23,9,10,24,9,10,25,9,10,26,9,10,27,9,10,28,9,10,29,9,10,30,9,10,31,9,11,13,9,11,14,9,11,15,9,11,16,9,11,17,9,11,18,9,11,19,9,11,20,9,11,21,9,11,22,9,11,23,9,11,24,9,11,25,9,11,26,9,11,27,9,11,28,9,11,29,9,11,30,9,11,31,9,12,13,9,12,14,9,12,15,9,12,16,9,12,17,9,12,18,9,12,19,9,12,20,9,12,21,9,12,22,9,12,23,9,12,24,9,12,25,9,12,26,9,12,27,9,12,28,9,12,29,9,12,30,9,12,31,9,13,12,9,13,13,9,13,14,9,13,15,9,13,16,9,13,17,9,13,18,9,13,19,9,13,20,9,13,21,9,13,22,9,13,23,9,13,24,9,13,25,9,13,26,9,13,27,9,13,28,9,13,29,9,13,30,9,13,31,9,14,12,9,14,13,9,14,14,9,14,15,9,14,16,9,14,17,9,14,18,9,14,19,9,14,20,9,14,21,9,14,22,9,14,23,9,14,24,9,14,25,9,14,26,9,14,27,9,14,28,9,14,29,9,14,30,9,14,31,9,15,12,9,15,13,9,15,14,9,15,15,9,15,16,9,15,17,9,15,18,9,15,19,9,15,20,9,15,21,9,15,22,9,15,23,9,15,24,9,15,25,9,15,26,9,15,27,9,15,28,9,15,29,9,15,30,9,15,31,9,16,12,9,16,13,9,16,14,9,16,15,9,16,16,9,16,17,9,16,18,9,16,19,9,16,20,9,16,21,9,16,22,9,16,23,9,16,24,9,16,25,9,16,26,9,16,27,9,16,28,9,16,29,9,16,30,9,16,31,9,17,12,9,17,13,9,17,14,9,17,15,9,17,16,9,17,17,9,17,18,9,17,19,9,17,20,9,17,21,9,17,22,9,17,23,9,17,24,9,17,25,9,17,26,9,17,27,9,17,28,9,17,29,9,17,30,9,17,31,9,18,12,9,18,13,9,18,14,9,18,15,9,18,16,9,18,17,9,18,18,9,18,19,9,18,20,9,18,21,9,18,22,9,18,23,9,18,24,9,18,25,9,18,26,9,18,27,9,18,28,9,18,29,9,18,30,9,18,31,9,19,12,9,19,13,9,19,14,9,19,15,9,19,16,9,19,17,9,19,18,9,19,19,9,19,20,9,19,21,9,19,22,9,19,23,9,19,24,9,19,25,9,19,26,9,19,27,9,19,28,9,19,29,9,19,30,9,19,31,9,20,12,9,20,13,9,20,14,9,20,15,9,20,16,9,20,17,9,20,18,9,20,19,9,20,20,9,20,21,9,20,22,9,20,23,9,20,24,9,20,25,9,20,26,9,20,27,9,20,28,9,20,29,9,20,30,9,20,31,9,21,12,9,21,13,9,21,14,9,21,15,9,21,16,9,21,17,9,21,18,9,21,19,9,21,20,9,21,21,9,21,22,9,21,23,9,21,24,9,21,25,9,21,26,9,21,27,9,21,28,9,21,29,9,21,30,9,21,31,9,22,12,9,22,13,9,22,14,9,22,15,9,22,16,9,22,17,9,22,18,9,22,19,9,22,20,9,22,21,9,22,22,9,22,23,9,22,24,9,22,25,9,22,26,9,22,27,9,22,28,9,22,29,9,22,30,9,22,31,9,23,12,9,23,13,9,23,14,9,23,15,9,23,16,9,23,17,9,23,18,9,23,19,9,23,20,9,23,21,9,23,22,9,23,23,9,23,24,9,23,25,9,23,26,9,23,27,9,23,28,9,23,29,9,23,30,9,23,31,9,24,12,9,24,13,9,24,14,9,24,15,9,24,16,9,24,17,9,24,18,9,24,19,9,24,20,9,24,21,9,24,22,9,24,23,9,24,24,9,24,25,9,24,26,9,24,27,9,24,28,9,24,29,9,24,30,9,24,31,9,25,12,9,25,13,9,25,14,9,25,15,9,25,16,9,25,17,9,25,18,9,25,19,9,25,20,9,25,21,9,25,22,9,25,23,9,25,24,9,25,25,9,25,26,9,25,27,9,25,28,9,25,29,9,25,30,9,25,31,9,26,12,9,26,13,9,26,14,9,26,15,9,26,16,9,26,17,9,26,18,9,26,19,9,26,20,9,26,21,9,26,22,9,26,23,9,26,24,9,26,25,9,26,26,9,26,27,9,26,28,9,26,29,9,26,30,9,26,31,9,27,12,9,27,13,9,27,14,9,27,15,9,27,16,9,27,17,9,27,18,9,27,19,9,27,20,9,27,21,9,27,22,9,27,23,9,27,24,9,27,25,9,27,26,9,27,27,9,27,28,9,27,29,9,27,30,9,27,31,9,28,12,9,28,13,9,28,14,9,28,15,9,28,16,9,28,17,9,28,18,9,28,19,9,28,20,9,28,21,9,28,22,9,28,23,9,28,24,9,28,25,9,28,26,9,28,27,9,28,28,9,28,29,9,28,30,9,28,31,9,29,12,9,29,13,9,29,14,9,29,15,9,29,16,9,29,17,9,29,18,9,29,19,9,29,20,9,29,21,9,29,22,9,29,23,9,29,24,9,29,25,9,29,26,9,29,27,9,29,28,9,29,29,9,29,30,9,29,31,10,10,12,10,10,13,10,10,14,10,10,15,10,10,16,10,10,17,10,10,18,10,10,19,10,10,20,10,10,21,10,10,22,10,10,23,10,10,24,10,10,25,10,10,26,10,10,27,10,10,28,10,10,29,10,10,30,10,10,31,10,11,13,10,11,14,10,11,15,10,11,16,10,11,17,10,11,18,10,11,19,10,11,20,10,11,21,10,11,22,10,11,23,10,11,24,10,11,25,10,11,26,10,11,27,10,11,28,10,11,29,10,11,30,10,11,31,10,12,14,10,12,15,10,12,16,10,12,17,10,12,18,10,12,19,10,12,20,10,12,21,10,12,22,10,12,23,10,12,24,10,12,25,10,12,26,10,12,27,10,12,28,10,12,29,10,12,30,10,12,31,10,13,14,10,13,15,10,13,16,10,13,17,10,13,18,10,13,19,10,13,20,10,13,21,10,13,22,10,13,23,10,13,24,10,13,25,10,13,26,10,13,27,10,13,28,10,13,29,10,13,30,10,13,31,10,14,12,10,14,13,10,14,14,10,14,15,10,14,16,10,14,17,10,14,18,10,14,19,10,14,20,10,14,21,10,14,22,10,14,23,10,14,24,10,14,25,10,14,26,10,14,27,10,14,28,10,14,29,10,14,30,10,14,31,10,15,12,10,15,13,10,15,14,10,15,15,10,15,16,10,15,17,10,15,18,10,15,19,10,15,20,10,15,21,10,15,22,10,15,23,10,15,24,10,15,25,10,15,26,10,15,27,10,15,28,10,15,29,10,15,30,10,15,31,10,16,12,10,16,13,10,16,14,10,16,15,10,16,16,10,16,17,10,16,18,10,16,19,10,16,20,10,16,21,10,16,22,10,16,23,10,16,24,10,16,25,10,16,26,10,16,27,10,16,28,10,16,29,10,16,30,10,16,31,10,17,12,10,17,13,10,17,14,10,17,15,10,17,16,10,17,17,10,17,18,10,17,19,10,17,20,10,17,21,10,17,22,10,17,23,10,17,24,10,17,25,10,17,26,10,17,27,10,17,28,10,17,29,10,17,30,10,17,31,10,18,12,10,18,13,10,18,14,10,18,15,10,18,16,10,18,17,10,18,18,10,18,19,10,18,20,10,18,21,10,18,22,10,18,23,10,18,24,10,18,25,10,18,26,10,18,27,10,18,28,10,18,29,10,18,30,10,18,31,10,19,12,10,19,13,10,19,14,10,19,15,10,19,16,10,19,17,10,19,18,10,19,19,10,19,20,10,19,21,10,19,22,10,19,23,10,19,24,10,19,25,10,19,26,10,19,27,10,19,28,10,19,29,10,19,30,10,19,31,10,20,12,10,20,13,10,20,14,10,20,15,10,20,16,10,20,17,10,20,18,10,20,19,10,20,20,10,20,21,10,20,22,10,20,23,10,20,24,10,20,25,10,20,26,10,20,27,10,20,28,10,20,29,10,20,30,10,20,31,10,21,12,10,21,13,10,21,14,10,21,15,10,21,16,10,21,17,10,21,18,10,21,19,10,21,20,10,21,21,10,21,22,10,21,23,10,21,24,10,21,25,10,21,26,10,21,27,10,21,28,10,21,29,10,21,30,10,21,31,10,22,12,10,22,13,10,22,14,10,22,15,10,22,16,10,22,17,10,22,18,10,22,19,10,22,20,10,22,21,10,22,22,10,22,23,10,22,24,10,22,25,10,22,26,10,22,27,10,22,28,10,22,29,10,22,30,10,22,31,10,23,12,10,23,13,10,23,14,10,23,15,10,23,16,10,23,17,10,23,18,10,23,19,10,23,20,10,23,21,10,23,22,10,23,23,10,23,24,10,23,25,10,23,26,10,23,27,10,23,28,10,23,29,10,23,30,10,23,31,10,24,12,10,24,13,10,24,14,10,24,15,10,24,16,10,24,17,10,24,18,10,24,19,10,24,20,10,24,21,10,24,22,10,24,23,10,24,24,10,24,25,10,24,26,10,24,27,10,24,28,10,24,29,10,24,30,10,24,31,10,25,12,10,25,13,10,25,14,10,25,15,10,25,16,10,25,17,10,25,18,10,25,19,10,25,20,10,25,21,10,25,22,10,25,23,10,25,24,10,25,25,10,25,26,10,25,27,10,25,28,10,25,29,10,25,30,10,25,31,10,26,12,10,26,13,10,26,14,10,26,15,10,26,16,10,26,17,10,26,18,10,26,19,10,26,20,10,26,21,10,26,22,10,26,23,10,26,24,10,26,25,10,26,26,10,26,27,10,26,28,10,26,29,10,26,30,10,26,31,10,27,12,10,27,13,10,27,14,10,27,15,10,27,16,10,27,17,10,27,18,10,27,19,10,27,20,10,27,21,10,27,22,10,27,23,10,27,24,10,27,25,10,27,26,10,27,27,10,27,28,10,27,29,10,27,30,10,27,31,10,28,12,10,28,13,10,28,14,10,28,15,10,28,16,10,28,17,10,28,18,10,28,19,10,28,20,10,28,21,10,28,22,10,28,23,10,28,24,10,28,25,10,28,26,10,28,27,10,28,28,10,28,29,10,28,30,10,28,31,10,29,12,10,29,13,10,29,14,10,29,15,10,29,16,10,29,17,10,29,18,10,29,19,10,29,20,10,29,21,10,29,22,10,29,23,10,29,24,10,29,25,10,29,26,10,29,27,10,29,28,10,29,29,10,29,30,10,29,31,11,10,12,11,10,13,11,10,14,11,10,15,11,10,16,11,10,17,11,10,18,11,10,19,11,10,20,11,10,21,11,10,22,11,10,23,11,10,24,11,10,25,11,10,26,11,10,27,11,10,28,11,10,29,11,10,30,11,10,31,11,11,13,11,11,14,11,11,15,11,11,16,11,11,17,11,11,18,11,11,19,11,11,20,11,11,21,11,11,22,11,11,23,11,11,24,11,11,25,11,11,26,11,11,27,11,11,28,11,11,29,11,11,30,11,11,31,11,12,14,11,12,15,11,12,16,11,12,17,11,12,18,11,12,19,11,12,20,11,12,21,11,12,22,11,12,23,11,12,24,11,12,25,11,12,26,11,12,27,11,12,28,11,12,29,11,12,30,11,12,31,11,13,15,11,13,16,11,13,17,11,13,18,11,13,19,11,13,20,11,13,21,11,13,22,11,13,23,11,13,24,11,13,25,11,13,26,11,13,27,11,13,28,11,13,29,11,13,30,11,13,31,11,14,15,11,14,16,11,14,17,11,14,18,11,14,19,11,14,20,11,14,21,11,14,22,11,14,23,11,14,24,11,14,25,11,14,26,11,14,27,11,14,28,11,14,29,11,14,30,11,14,31,11,15,12,11,15,13,11,15,14,11,15,15,11,15,16,11,15,17,11,15,18,11,15,19,11,15,20,11,15,21,11,15,22,11,15,23,11,15,24,11,15,25,11,15,26,11,15,27,11,15,28,11,15,29,11,15,30,11,15,31,11,16,12,11,16,13,11,16,14,11,16,15,11,16,16,11,16,17,11,16,18,11,16,19,11,16,20,11,16,21,11,16,22,11,16,23,11,16,24,11,16,25,11,16,26,11,16,27,11,16,28,11,16,29,11,16,30,11,16,31,11,17,12,11,17,13,11,17,14,11,17,15,11,17,16,11,17,17,11,17,18,11,17,19,11,17,20,11,17,21,11,17,22,11,17,23,11,17,24,11,17,25,11,17,26,11,17,27,11,17,28,11,17,29,11,17,30,11,17,31,11,18,12,11,18,13,11,18,14,11,18,15,11,18,16,11,18,17,11,18,18,11,18,19,11,18,20,11,18,21,11,18,22,11,18,23,11,18,24,11,18,25,11,18,26,11,18,27,11,18,28,11,18,29,11,18,30,11,18,31,11,19,12,11,19,13,11,19,14,11,19,15,11,19,16,11,19,17,11,19,18,11,19,19,11,19,20,11,19,21,11,19,22,11,19,23,11,19,24,11,19,25,11,19,26,11,19,27,11,19,28,11,19,29,11,19,30,11,19,31,11,20,12,11,20,13,11,20,14,11,20,15,11,20,16,11,20,17,11,20,18,11,20,19,11,20,20,11,20,21,11,20,22,11,20,23,11,20,24,11,20,25,11,20,26,11,20,27,11,20,28,11,20,29,11,20,30,11,20,31,11,21,12,11,21,13,11,21,14,11,21,15,11,21,16,11,21,17,11,21,18,11,21,19,11,21,20,11,21,21,11,21,22,11,21,23,11,21,24,11,21,25,11,21,26,11,21,27,11,21,28,11,21,29,11,21,30,11,21,31,11,22,12,11,22,13,11,22,14,11,22,15,11,22,16,11,22,17,11,22,18,11,22,19,11,22,20,11,22,21,11,22,22,11,22,23,11,22,24,11,22,25,11,22,26,11,22,27,11,22,28,11,22,29,11,22,30,11,22,31,11,23,12,11,23,13,11,23,14,11,23,15,11,23,16,11,23,17,11,23,18,11,23,19,11,23,20,11,23,21,11,23,22,11,23,23,11,23,24,11,23,25,11,23,26,11,23,27,11,23,28,11,23,29,11,23,30,11,23,31,11,24,12,11,24,13,11,24,14,11,24,15,11,24,16,11,24,17,11,24,18,11,24,19,11,24,20,11,24,21,11,24,22,11,24,23,11,24,24,11,24,25,11,24,26,11,24,27,11,24,28,11,24,29,11,24,30,11,24,31,11,25,12,11,25,13,11,25,14,11,25,15,11,25,16,11,25,17,11,25,18,11,25,19,11,25,20,11,25,21,11,25,22,11,25,23,11,25,24,11,25,25,11,25,26,11,25,27,11,25,28,11,25,29,11,25,30,11,25,31,11,26,12,11,26,13,11,26,14,11,26,15,11,26,16,11,26,17,11,26,18,11,26,19,11,26,20,11,26,21,11,26,22,11,26,23,11,26,24,11,26,25,11,26,26,11,26,27,11,26,28,11,26,29,11,26,30,11,26,31,11,27,12,11,27,13,11,27,14,11,27,15,11,27,16,11,27,17,11,27,18,11,27,19,11,27,20,11,27,21,11,27,22,11,27,23,11,27,24,11,27,25,11,27,26,11,27,27,11,27,28,11,27,29,11,27,30,11,27,31,11,28,12,11,28,13,11,28,14,11,28,15,11,28,16,11,28,17,11,28,18,11,28,19,11,28,20,11,28,21,11,28,22,11,28,23,11,28,24,11,28,25,11,28,26,11,28,27,11,28,28,11,28,29,11,28,30,11,28,31,11,29,12,11,29,13,11,29,14,11,29,15,11,29,16,11,29,17,11,29,18,11,29,19,11,29,20,11,29,21,11,29,22,11,29,23,11,29,24,11,29,25,11,29,26,11,29,27,11,29,28,11,29,29,11,29,30,11,29,31,12,10,12,12,10,13,12,10,14,12,10,15,12,10,16,12,10,17,12,10,18,12,10,19,12,10,20,12,10,21,12,10,22,12,10,23,12,10,24,12,10,25,12,10,26,12,10,27,12,10,28,12,10,29,12,10,30,12,10,31,12,11,13,12,11,14,12,11,15,12,11,16,12,11,17,12,11,18,12,11,19,12,11,20,12,11,21,12,11,22,12,11,23,12,11,24,12,11,25,12,11,26,12,11,27,12,11,28,12,11,29,12,11,30,12,11,31,12,12,14,12,12,15,12,12,16,12,12,17,12,12,18,12,12,19,12,12,20,12,12,21,12,12,22,12,12,23,12,12,24,12,12,25,12,12,26,12,12,27,12,12,28,12,12,29,12,12,30,12,12,31,12,13,15,12,13,16,12,13,17,12,13,18,12,13,19,12,13,20,12,13,21,12,13,22,12,13,23,12,13,24,12,13,25,12,13,26,12,13,27,12,13,28,12,13,29,12,13,30,12,13,31,12,14,16,12,14,17,12,14,18,12,14,19,12,14,20,12,14,21,12,14,22,12,14,23,12,14,24,12,14,25,12,14,26,12,14,27,12,14,28,12,14,29,12,14,30,12,14,31,12,15,12,12,15,16,12,15,17,12,15,18,12,15,19,12,15,20,12,15,21,12,15,22,12,15,23,12,15,24,12,15,25,12,15,26,12,15,27,12,15,28,12,15,29,12,15,30,12,15,31,12,16,12,12,16,13,12,16,14,12,16,15,12,16,16,12,16,17,12,16,18,12,16,19,12,16,20,12,16,21,12,16,22,12,16,23,12,16,24,12,16,25,12,16,26,12,16,27,12,16,28,12,16,29,12,16,30,12,16,31,12,17,12,12,17,13,12,17,14,12,17,15,12,17,16,12,17,17,12,17,18,12,17,19,12,17,20,12,17,21,12,17,22,12,17,23,12,17,24,12,17,25,12,17,26,12,17,27,12,17,28,12,17,29,12,17,30,12,17,31,12,18,12,12,18,13,12,18,14,12,18,15,12,18,16,12,18,17,12,18,18,12,18,19,12,18,20,12,18,21,12,18,22,12,18,23,12,18,24,12,18,25,12,18,26,12,18,27,12,18,28,12,18,29,12,18,30,12,18,31,12,19,12,12,19,13,12,19,14,12,19,15,12,19,16,12,19,17,12,19,18,12,19,19,12,19,20,12,19,21,12,19,22,12,19,23,12,19,24,12,19,25,12,19,26,12,19,27,12,19,28,12,19,29,12,19,30,12,19,31,12,20,12,12,20,13,12,20,14,12,20,15,12,20,16,12,20,17,12,20,18,12,20,19,12,20,20,12,20,21,12,20,22,12,20,23,12,20,24,12,20,25,12,20,26,12,20,27,12,20,28,12,20,29,12,20,30,12,20,31,12,21,12,12,21,13,12,21,14,12,21,15,12,21,16,12,21,17,12,21,18,12,21,19,12,21,20,12,21,21,12,21,22,12,21,23,12,21,24,12,21,25,12,21,26,12,21,27,12,21,28,12,21,29,12,21,30,12,21,31,12,22,12,12,22,13,12,22,14,12,22,15,12,22,16,12,22,17,12,22,18,12,22,19,12,22,20,12,22,21,12,22,22,12,22,23,12,22,24,12,22,25,12,22,26,12,22,27,12,22,28,12,22,29,12,22,30,12,22,31,12,23,12,12,23,13,12,23,14,12,23,15,12,23,16,12,23,17,12,23,18,12,23,19,12,23,20,12,23,21,12,23,22,12,23,23,12,23,24,12,23,25,12,23,26,12,23,27,12,23,28,12,23,29,12,23,30,12,23,31,12,24,12,12,24,13,12,24,14,12,24,15,12,24,16,12,24,17,12,24,18,12,24,19,12,24,20,12,24,21,12,24,22,12,24,23,12,24,24,12,24,25,12,24,26,12,24,27,12,24,28,12,24,29,12,24,30,12,24,31,12,25,12,12,25,13,12,25,14,12,25,15,12,25,16,12,25,17,12,25,18,12,25,19,12,25,20,12,25,21,12,25,22,12,25,23,12,25,24,12,25,25,12,25,26,12,25,27,12,25,28,12,25,29,12,25,30,12,25,31,12,26,12,12,26,13,12,26,14,12,26,15,12,26,16,12,26,17,12,26,18,12,26,19,12,26,20,12,26,21,12,26,22,12,26,23,12,26,24,12,26,25,12,26,26,12,26,27,12,26,28,12,26,29,12,26,30,12,26,31,12,27,12,12,27,13,12,27,14,12,27,15,12,27,16,12,27,17,12,27,18,12,27,19,12,27,20,12,27,21,12,27,22,12,27,23,12,27,24,12,27,25,12,27,26,12,27,27,12,27,28,12,27,29,12,27,30,12,27,31,12,28,12,12,28,13,12,28,14,12,28,15,12,28,16,12,28,17,12,28,18,12,28,19,12,28,20,12,28,21,12,28,22,12,28,23,12,28,24,12,28,25,12,28,26,12,28,27,12,28,28,12,28,29,12,28,30,12,28,31,12,29,12,12,29,13,12,29,14,12,29,15,12,29,16,12,29,17,12,29,18,12,29,19,12,29,20,12,29,21,12,29,22,12,29,23,12,29,24,12,29,25,12,29,26,12,29,27,12,29,28,12,29,29,12,29,30,12,29,31,13,10,12,13,10,13,13,10,14,13,10,15,13,10,16,13,10,17,13,10,18,13,10,19,13,10,20,13,10,21,13,10,22,13,10,23,13,10,24,13,10,25,13,10,26,13,10,27,13,10,28,13,10,29,13,10,30,13,10,31,13,11,12,13,11,13,13,11,14,13,11,15,13,11,16,13,11,17,13,11,18,13,11,19,13,11,20,13,11,21,13,11,22,13,11,23,13,11,24,13,11,25,13,11,26,13,11,27,13,11,28,13,11,29,13,11,30,13,11,31,13,12,14,13,12,15,13,12,16,13,12,17,13,12,18,13,12,19,13,12,20,13,12,21,13,12,22,13,12,23,13,12,24,13,12,25,13,12,26,13,12,27,13,12,28,13,12,29,13,12,30,13,12,31,13,13,15,13,13,16,13,13,17,13,13,18,13,13,19,13,13,20,13,13,21,13,13,22,13,13,23,13,13,24,13,13,25,13,13,26,13,13,27,13,13,28,13,13,29,13,13,30,13,13,31,13,14,16,13,14,17,13,14,18,13,14,19,13,14,20,13,14,21,13,14,22,13,14,23,13,14,24,13,14,25,13,14,26,13,14,27,13,14,28,13,14,29,13,14,30,13,14,31,13,15,12,13,15,17,13,15,18,13,15,19,13,15,20,13,15,21,13,15,22,13,15,23,13,15,24,13,15,25,13,15,26,13,15,27,13,15,28,13,15,29,13,15,30,13,15,31,13,16,12,13,16,13,13,16,17,13,16,18,13,16,19,13,16,20,13,16,21,13,16,22,13,16,23,13,16,24,13,16,25,13,16,26,13,16,27,13,16,28,13,16,29,13,16,30,13,16,31,13,17,12,13,17,13,13,17,14,13,17,15,13,17,16,13,17,17,13,17,18,13,17,19,13,17,20,13,17,21,13,17,22,13,17,23,13,17,24,13,17,25,13,17,26,13,17,27,13,17,28,13,17,29,13,17,30,13,17,31,13,18,12,13,18,13,13,18,14,13,18,15,13,18,16,13,18,17,13,18,18,13,18,19,13,18,20,13,18,21,13,18,22,13,18,23,13,18,24,13,18,25,13,18,26,13,18,27,13,18,28,13,18,29,13,18,30,13,18,31,13,19,12,13,19,13,13,19,14,13,19,15,13,19,16,13,19,17,13,19,18,13,19,19,13,19,20,13,19,21,13,19,22,13,19,23,13,19,24,13,19,25,13,19,26,13,19,27,13,19,28,13,19,29,13,19,30,13,19,31,13,20,12,13,20,13,13,20,14,13,20,15,13,20,16,13,20,17,13,20,18,13,20,19,13,20,20,13,20,21,13,20,22,13,20,23,13,20,24,13,20,25,13,20,26,13,20,27,13,20,28,13,20,29,13,20,30,13,20,31,13,21,12,13,21,13,13,21,14,13,21,15,13,21,16,13,21,17,13,21,18,13,21,19,13,21,20,13,21,21,13,21,22,13,21,23,13,21,24,13,21,25,13,21,26,13,21,27,13,21,28,13,21,29,13,21,30,13,21,31,13,22,12,13,22,13,13,22,14,13,22,15,13,22,16,13,22,17,13,22,18,13,22,19,13,22,20,13,22,21,13,22,22,13,22,23,13,22,24,13,22,25,13,22,26,13,22,27,13,22,28,13,22,29,13,22,30,13,22,31,13,23,12,13,23,13,13,23,14,13,23,15,13,23,16,13,23,17,13,23,18,13,23,19,13,23,20,13,23,21,13,23,22,13,23,23,13,23,24,13,23,25,13,23,26,13,23,27,13,23,28,13,23,29,13,23,30,13,23,31,13,24,12,13,24,13,13,24,14,13,24,15,13,24,16,13,24,17,13,24,18,13,24,19,13,24,20,13,24,21,13,24,22,13,24,23,13,24,24,13,24,25,13,24,26,13,24,27,13,24,28,13,24,29,13,24,30,13,24,31,13,25,12,13,25,13,13,25,14,13,25,15,13,25,16,13,25,17,13,25,18,13,25,19,13,25,20,13,25,21,13,25,22,13,25,23,13,25,24,13,25,25,13,25,26,13,25,27,13,25,28,13,25,29,13,25,30,13,25,31,13,26,12,13,26,13,13,26,14,13,26,15,13,26,16,13,26,17,13,26,18,13,26,19,13,26,20,13,26,21,13,26,22,13,26,23,13,26,24,13,26,25,13,26,26,13,26,27,13,26,28,13,26,29,13,26,30,13,26,31,13,27,12,13,27,13,13,27,14,13,27,15,13,27,16,13,27,17,13,27,18,13,27,19,13,27,20,13,27,21,13,27,22,13,27,23,13,27,24,13,27,25,13,27,26,13,27,27,13,27,28,13,27,29,13,27,30,13,27,31,13,28,12,13,28,13,13,28,14,13,28,15,13,28,16,13,28,17,13,28,18,13,28,19,13,28,20,13,28,21,13,28,22,13,28,23,13,28,24,13,28,25,13,28,26,13,28,27,13,28,28,13,28,29,13,28,30,13,28,31,13,29,12,13,29,13,13,29,14,13,29,15,13,29,16,13,29,17,13,29,18,13,29,19,13,29,20,13,29,21,13,29,22,13,29,23,13,29,24,13,29,25,13,29,26,13,29,27,13,29,28,13,29,29,13,29,30,13,29,31,14,10,12,14,10,13,14,10,14,14,10,15,14,10,16,14,10,17,14,10,18,14,10,19,14,10,20,14,10,21,14,10,22,14,10,23,14,10,24,14,10,25,14,10,26,14,10,27,14,10,28,14,10,29,14,10,30,14,10,31,14,11,12,14,11,13,14,11,14,14,11,15,14,11,16,14,11,17,14,11,18,14,11,19,14,11,20,14,11,21,14,11,22,14,11,23,14,11,24,14,11,25,14,11,26,14,11,27,14,11,28,14,11,29,14,11,30,14,11,31,14,12,12,14,12,13,14,12,14,14,12,15,14,12,16,14,12,17,14,12,18,14,12,19,14,12,20,14,12,21,14,12,22,14,12,23,14,12,24,14,12,25,14,12,26,14,12,27,14,12,28,14,12,29,14,12,30,14,12,31,14,13,15,14,13,16,14,13,17,14,13,18,14,13,19,14,13,20,14,13,21,14,13,22,14,13,23,14,13,24,14,13,25,14,13,26,14,13,27,14,13,28,14,13,29,14,13,30,14,13,31,14,14,16,14,14,17,14,14,18,14,14,19,14,14,20,14,14,21,14,14,22,14,14,23,14,14,24,14,14,25,14,14,26,14,14,27,14,14,28,14,14,29,14,14,30,14,14,31,14,15,12,14,15,17,14,15,18,14,15,19,14,15,20,14,15,21,14,15,22,14,15,23,14,15,24,14,15,25,14,15,26,14,15,27,14,15,28,14,15,29,14,15,30,14,15,31,14,16,12,14,16,13,14,16,18,14,16,19,14,16,20,14,16,21,14,16,22,14,16,23,14,16,24,14,16,25,14,16,26,14,16,27,14,16,28,14,16,29,14,16,30,14,16,31,14,17,12,14,17,13,14,17,14,14,17,18,14,17,19,14,17,20,14,17,21,14,17,22,14,17,23,14,17,24,14,17,25,14,17,26,14,17,27,14,17,28,14,17,29,14,17,30,14,17,31,14,18,12,14,18,13,14,18,14,14,18,15,14,18,16,14,18,17,14,18,18,14,18,19,14,18,20,14,18,21,14,18,22,14,18,23,14,18,24,14,18,25,14,18,26,14,18,27,14,18,28,14,18,29,14,18,30,14,18,31,14,19,12,14,19,13,14,19,14,14,19,15,14,19,16,14,19,17,14,19,18,14,19,19,14,19,20,14,19,21,14,19,22,14,19,23,14,19,24,14,19,25,14,19,26,14,19,27,14,19,28,14,19,29,14,19,30,14,19,31,14,20,12,14,20,13,14,20,14,14,20,15,14,20,16,14,20,17,14,20,18,14,20,19,14,20,20,14,20,21,14,20,22,14,20,23,14,20,24,14,20,25,14,20,26,14,20,27,14,20,28,14,20,29,14,20,30,14,20,31,14,21,12,14,21,13,14,21,14,14,21,15,14,21,16,14,21,17,14,21,18,14,21,19,14,21,20,14,21,21,14,21,22,14,21,23,14,21,24,14,21,25,14,21,26,14,21,27,14,21,28,14,21,29,14,21,30,14,21,31,14,22,12,14,22,13,14,22,14,14,22,15,14,22,16,14,22,17,14,22,18,14,22,19,14,22,20,14,22,21,14,22,22,14,22,23,14,22,24,14,22,25,14,22,26,14,22,27,14,22,28,14,22,29,14,22,30,14,22,31,14,23,12,14,23,13,14,23,14,14,23,15,14,23,16,14,23,17,14,23,18,14,23,19,14,23,20,14,23,21,14,23,22,14,23,23,14,23,24,14,23,25,14,23,26,14,23,27,14,23,28,14,23,29,14,23,30,14,23,31,14,24,12,14,24,13,14,24,14,14,24,15,14,24,16,14,24,17,14,24,18,14,24,19,14,24,20,14,24,21,14,24,22,14,24,23,14,24,24,14,24,25,14,24,26,14,24,27,14,24,28,14,24,29,14,24,30,14,24,31,14,25,12,14,25,13,14,25,14,14,25,15,14,25,16,14,25,17,14,25,18,14,25,19,14,25,20,14,25,21,14,25,22,14,25,23,14,25,24,14,25,25,14,25,26,14,25,27,14,25,28,14,25,29,14,25,30,14,25,31,14,26,12,14,26,13,14,26,14,14,26,15,14,26,16,14,26,17,14,26,18,14,26,19,14,26,20,14,26,21,14,26,22,14,26,23,14,26,24,14,26,25,14,26,26,14,26,27,14,26,28,14,26,29,14,26,30,14,26,31,14,27,12,14,27,13,14,27,14,14,27,15,14,27,16,14,27,17,14,27,18,14,27,19,14,27,20,14,27,21,14,27,22,14,27,23,14,27,24,14,27,25,14,27,26,14,27,27,14,27,28,14,27,29,14,27,30,14,27,31,14,28,12,14,28,13,14,28,14,14,28,15,14,28,16,14,28,17,14,28,18,14,28,19,14,28,20,14,28,21,14,28,22,14,28,23,14,28,24,14,28,25,14,28,26,14,28,27,14,28,28,14,28,29,14,28,30,14,28,31,14,29,12,14,29,13,14,29,14,14,29,15,14,29,16,14,29,17,14,29,18,14,29,19,14,29,20,14,29,21,14,29,22,14,29,23,14,29,24,14,29,25,14,29,26,14,29,27,14,29,28,14,29,29,14,29,30,14,29,31,15,10,12,15,10,13,15,10,14,15,10,15,15,10,16,15,10,17,15,10,18,15,10,19,15,10,20,15,10,21,15,10,22,15,10,23,15,10,24,15,10,25,15,10,26,15,10,27,15,10,28,15,10,29,15,10,30,15,10,31,15,11,12,15,11,13,15,11,14,15,11,15,15,11,16,15,11,17,15,11,18,15,11,19,15,11,20,15,11,21,15,11,22,15,11,23,15,11,24,15,11,25,15,11,26,15,11,27,15,11,28,15,11,29,15,11,30,15,11,31,15,12,12,15,12,13,15,12,14,15,12,15,15,12,16,15,12,17,15,12,18,15,12,19,15,12,20,15,12,21,15,12,22,15,12,23,15,12,24,15,12,25,15,12,26,15,12,27,15,12,28,15,12,29,15,12,30,15,12,31,15,13,12,15,13,13,15,13,14,15,13,15,15,13,16,15,13,17,15,13,18,15,13,19,15,13,20,15,13,21,15,13,22,15,13,23,15,13,24,15,13,25,15,13,26,15,13,27,15,13,28,15,13,29,15,13,30,15,13,31,15,14,12,15,14,16,15,14,17,15,14,18,15,14,19,15,14,20,15,14,21,15,14,22,15,14,23,15,14,24,15,14,25,15,14,26,15,14,27,15,14,28,15,14,29,15,14,30,15,14,31,15,15,12,15,15,17,15,15,18,15,15,19,15,15,20,15,15,21,15,15,22,15,15,23,15,15,24,15,15,25,15,15,26,15,15,27,15,15,28,15,15,29,15,15,30,15,15,31,15,16,12,15,16,13,15,16,18,15,16,19,15,16,20,15,16,21,15,16,22,15,16,23,15,16,24,15,16,25,15,16,26,15,16,27,15,16,28,15,16,29,15,16,30,15,16,31,15,17,12,15,17,13,15,17,14,15,17,19,15,17,20,15,17,21,15,17,22,15,17,23,15,17,24,15,17,25,15,17,26,15,17,27,15,17,28,15,17,29,15,17,30,15,17,31,15,18,12,15,18,13,15,18,14,15,18,15,15,18,19,15,18,20,15,18,21,15,18,22,15,18,23,15,18,24,15,18,25,15,18,26,15,18,27,15,18,28,15,18,29,15,18,30,15,18,31,15,19,12,15,19,13,15,19,14,15,19,15,15,19,16,15,19,17,15,19,18,15,19,19,15,19,20,15,19,21,15,19,22,15,19,23,15,19,24,15,19,25,15,19,26,15,19,27,15,19,28,15,19,29,15,19,30,15,19,31,15,20,12,15,20,13,15,20,14,15,20,15,15,20,16,15,20,17,15,20,18,15,20,19,15,20,20,15,20,21,15,20,22,15,20,23,15,20,24,15,20,25,15,20,26,15,20,27,15,20,28,15,20,29,15,20,30,15,20,31,15,21,12,15,21,13,15,21,14,15,21,15,15,21,16,15,21,17,15,21,18,15,21,19,15,21,20,15,21,21,15,21,22,15,21,23,15,21,24,15,21,25,15,21,26,15,21,27,15,21,28,15,21,29,15,21,30,15,21,31,15,22,12,15,22,13,15,22,14,15,22,15,15,22,16,15,22,17,15,22,18,15,22,19,15,22,20,15,22,21,15,22,22,15,22,23,15,22,24,15,22,25,15,22,26,15,22,27,15,22,28,15,22,29,15,22,30,15,22,31,15,23,12,15,23,13,15,23,14,15,23,15,15,23,16,15,23,17,15,23,18,15,23,19,15,23,20,15,23,21,15,23,22,15,23,23,15,23,24,15,23,25,15,23,26,15,23,27,15,23,28,15,23,29,15,23,30,15,23,31,15,24,12,15,24,13,15,24,14,15,24,15,15,24,16,15,24,17,15,24,18,15,24,19,15,24,20,15,24,21,15,24,22,15,24,23,15,24,24,15,24,25,15,24,26,15,24,27,15,24,28,15,24,29,15,24,30,15,24,31,15,25,12,15,25,13,15,25,14,15,25,15,15,25,16,15,25,17,15,25,18,15,25,19,15,25,20,15,25,21,15,25,22,15,25,23,15,25,24,15,25,25,15,25,26,15,25,27,15,25,28,15,25,29,15,25,30,15,25,31,15,26,12,15,26,13,15,26,14,15,26,15,15,26,16,15,26,17,15,26,18,15,26,19,15,26,20,15,26,21,15,26,22,15,26,23,15,26,24,15,26,25,15,26,26,15,26,27,15,26,28,15,26,29,15,26,30,15,26,31,15,27,12,15,27,13,15,27,14,15,27,15,15,27,16,15,27,17,15,27,18,15,27,19,15,27,20,15,27,21,15,27,22,15,27,23,15,27,24,15,27,25,15,27,26,15,27,27,15,27,28,15,27,29,15,27,30,15,27,31,15,28,12,15,28,13,15,28,14,15,28,15,15,28,16,15,28,17,15,28,18,15,28,19,15,28,20,15,28,21,15,28,22,15,28,23,15,28,24,15,28,25,15,28,26,15,28,27,15,28,28,15,28,29,15,28,30,15,28,31,15,29,12,15,29,13,15,29,14,15,29,15,15,29,16,15,29,17,15,29,18,15,29,19,15,29,20,15,29,21,15,29,22,15,29,23,15,29,24,15,29,25,15,29,26,15,29,27,15,29,28,15,29,29,15,29,30,15,29,31,16,10,12,16,10,13,16,10,14,16,10,15,16,10,16,16,10,17,16,10,18,16,10,19,16,10,20,16,10,21,16,10,22,16,10,23,16,10,24,16,10,25,16,10,26,16,10,27,16,10,28,16,10,29,16,10,30,16,10,31,16,11,12,16,11,13,16,11,14,16,11,15,16,11,16,16,11,17,16,11,18,16,11,19,16,11,20,16,11,21,16,11,22,16,11,23,16,11,24,16,11,25,16,11,26,16,11,27,16,11,28,16,11,29,16,11,30,16,11,31,16,12,12,16,12,13,16,12,14,16,12,15,16,12,16,16,12,17,16,12,18,16,12,19,16,12,20,16,12,21,16,12,22,16,12,23,16,12,24,16,12,25,16,12,26,16,12,27,16,12,28,16,12,29,16,12,30,16,12,31,16,13,12,16,13,13,16,13,14,16,13,15,16,13,16,16,13,17,16,13,18,16,13,19,16,13,20,16,13,21,16,13,22,16,13,23,16,13,24,16,13,25,16,13,26,16,13,27,16,13,28,16,13,29,16,13,30,16,13,31,16,14,12,16,14,13,16,14,14,16,14,15,16,14,16,16,14,17,16,14,18,16,14,19,16,14,20,16,14,21,16,14,22,16,14,23,16,14,24,16,14,25,16,14,26,16,14,27,16,14,28,16,14,29,16,14,30,16,14,31,16,15,12,16,15,13,16,15,17,16,15,18,16,15,19,16,15,20,16,15,21,16,15,22,16,15,23,16,15,24,16,15,25,16,15,26,16,15,27,16,15,28,16,15,29,16,15,30,16,15,31,16,16,12,16,16,13,16,16,18,16,16,19,16,16,20,16,16,21,16,16,22,16,16,23,16,16,24,16,16,25,16,16,26,16,16,27,16,16,28,16,16,29,16,16,30,16,16,31,16,17,12,16,17,13,16,17,14,16,17,19,16,17,20,16,17,21,16,17,22,16,17,23,16,17,24,16,17,25,16,17,26,16,17,27,16,17,28,16,17,29,16,17,30,16,17,31,16,18,12,16,18,13,16,18,14,16,18,15,16,18,20,16,18,21,16,18,22,16,18,23,16,18,24,16,18,25,16,18,26,16,18,27,16,18,28,16,18,29,16,18,30,16,18,31,16,19,12,16,19,13,16,19,14,16,19,15,16,19,16,16,19,20,16,19,21,16,19,22,16,19,23,16,19,24,16,19,25,16,19,26,16,19,27,16,19,28,16,19,29,16,19,30,16,19,31,16,20,12,16,20,13,16,20,14,16,20,15,16,20,16,16,20,17,16,20,18,16,20,19,16,20,20,16,20,21,16,20,22,16,20,23,16,20,24,16,20,25,16,20,26,16,20,27,16,20,28,16,20,29,16,20,30,16,20,31,16,21,12,16,21,13,16,21,14,16,21,15,16,21,16,16,21,17,16,21,18,16,21,19,16,21,20,16,21,21,16,21,22,16,21,23,16,21,24,16,21,25,16,21,26,16,21,27,16,21,28,16,21,29,16,21,30,16,21,31,16,22,12,16,22,13,16,22,14,16,22,15,16,22,16,16,22,17,16,22,18,16,22,19,16,22,20,16,22,21,16,22,22,16,22,23,16,22,24,16,22,25,16,22,26,16,22,27,16,22,28,16,22,29,16,22,30,16,22,31,16,23,12,16,23,13,16,23,14,16,23,15,16,23,16,16,23,17,16,23,18,16,23,19,16,23,20,16,23,21,16,23,22,16,23,23,16,23,24,16,23,25,16,23,26,16,23,27,16,23,28,16,23,29,16,23,30,16,23,31,16,24,12,16,24,13,16,24,14,16,24,15,16,24,16,16,24,17,16,24,18,16,24,19,16,24,20,16,24,21,16,24,22,16,24,23,16,24,24,16,24,25,16,24,26,16,24,27,16,24,28,16,24,29,16,24,30,16,24,31,16,25,12,16,25,13,16,25,14,16,25,15,16,25,16,16,25,17,16,25,18,16,25,19,16,25,20,16,25,21,16,25,22,16,25,23,16,25,24,16,25,25,16,25,26,16,25,27,16,25,28,16,25,29,16,25,30,16,25,31,16,26,12,16,26,13,16,26,14,16,26,15,16,26,16,16,26,17,16,26,18,16,26,19,16,26,20,16,26,21,16,26,22,16,26,23,16,26,24,16,26,25,16,26,26,16,26,27,16,26,28,16,26,29,16,26,30,16,26,31,16,27,12,16,27,13,16,27,14,16,27,15,16,27,16,16,27,17,16,27,18,16,27,19,16,27,20,16,27,21,16,27,22,16,27,23,16,27,24,16,27,25,16,27,26,16,27,27,16,27,28,16,27,29,16,27,30,16,27,31,16,28,12,16,28,13,16,28,14,16,28,15,16,28,16,16,28,17,16,28,18,16,28,19,16,28,20,16,28,21,16,28,22,16,28,23,16,28,24,16,28,25,16,28,26,16,28,27,16,28,28,16,28,29,16,28,30,16,28,31,16,29,12,16,29,13,16,29,14,16,29,15,16,29,16,16,29,17,16,29,18,16,29,19,16,29,20,16,29,21,16,29,22,16,29,23,16,29,24,16,29,25,16,29,26,16,29,27,16,29,28,16,29,29,16,29,30,16,29,31,17,10,12,17,10,13,17,10,14,17,10,15,17,10,16,17,10,17,17,10,18,17,10,19,17,10,20,17,10,21,17,10,22,17,10,23,17,10,24,17,10,25,17,10,26,17,10,27,17,10,28,17,10,29,17,10,30,17,10,31,17,11,12,17,11,13,17,11,14,17,11,15,17,11,16,17,11,17,17,11,18,17,11,19,17,11,20,17,11,21,17,11,22,17,11,23,17,11,24,17,11,25,17,11,26,17,11,27,17,11,28,17,11,29,17,11,30,17,11,31,17,12,12,17,12,13,17,12,14,17,12,15,17,12,16,17,12,17,17,12,18,17,12,19,17,12,20,17,12,21,17,12,22,17,12,23,17,12,24,17,12,25,17,12,26,17,12,27,17,12,28,17,12,29,17,12,30,17,12,31,17,13,12,17,13,13,17,13,14,17,13,15,17,13,16,17,13,17,17,13,18,17,13,19,17,13,20,17,13,21,17,13,22,17,13,23,17,13,24,17,13,25,17,13,26,17,13,27,17,13,28,17,13,29,17,13,30,17,13,31,17,14,12,17,14,13,17,14,14,17,14,15,17,14,16,17,14,17,17,14,18,17,14,19,17,14,20,17,14,21,17,14,22,17,14,23,17,14,24,17,14,25,17,14,26,17,14,27,17,14,28,17,14,29,17,14,30,17,14,31,17,15,12,17,15,13,17,15,14,17,15,15,17,15,16,17,15,17,17,15,18,17,15,19,17,15,20,17,15,21,17,15,22,17,15,23,17,15,24,17,15,25,17,15,26,17,15,27,17,15,28,17,15,29,17,15,30,17,15,31,17,16,12,17,16,13,17,16,14,17,16,18,17,16,19,17,16,20,17,16,21,17,16,22,17,16,23,17,16,24,17,16,25,17,16,26,17,16,27,17,16,28,17,16,29,17,16,30,17,16,31,17,17,12,17,17,13,17,17,14,17,17,19,17,17,20,17,17,21,17,17,22,17,17,23,17,17,24,17,17,25,17,17,26,17,17,27,17,17,28,17,17,29,17,17,30,17,17,31,17,18,12,17,18,13,17,18,14,17,18,15,17,18,20,17,18,21,17,18,22,17,18,23,17,18,24,17,18,25,17,18,26,17,18,27,17,18,28,17,18,29,17,18,30,17,18,31,17,19,12,17,19,13,17,19,14,17,19,15,17,19,16,17,19,21,17,19,22,17,19,23,17,19,24,17,19,25,17,19,26,17,19,27,17,19,28,17,19,29,17,19,30,17,19,31,17,20,12,17,20,13,17,20,14,17,20,15,17,20,16,17,20,17,17,20,21,17,20,22,17,20,23,17,20,24,17,20,25,17,20,26,17,20,27,17,20,28,17,20,29,17,20,30,17,20,31,17,21,12,17,21,13,17,21,14,17,21,15,17,21,16,17,21,17,17,21,18,17,21,19,17,21,20,17,21,21,17,21,22,17,21,23,17,21,24,17,21,25,17,21,26,17,21,27,17,21,28,17,21,29,17,21,30,17,21,31,17,22,12,17,22,13,17,22,14,17,22,15,17,22,16,17,22,17,17,22,18,17,22,19,17,22,20,17,22,21,17,22,22,17,22,23,17,22,24,17,22,25,17,22,26,17,22,27,17,22,28,17,22,29,17,22,30,17,22,31,17,23,12,17,23,13,17,23,14,17,23,15,17,23,16,17,23,17,17,23,18,17,23,19,17,23,20,17,23,21,17,23,22,17,23,23,17,23,24,17,23,25,17,23,26,17,23,27,17,23,28,17,23,29,17,23,30,17,23,31,17,24,12,17,24,13,17,24,14,17,24,15,17,24,16,17,24,17,17,24,18,17,24,19,17,24,20,17,24,21,17,24,22,17,24,23,17,24,24,17,24,25,17,24,26,17,24,27,17,24,28,17,24,29,17,24,30,17,24,31,17,25,12,17,25,13,17,25,14,17,25,15,17,25,16,17,25,17,17,25,18,17,25,19,17,25,20,17,25,21,17,25,22,17,25,23,17,25,24,17,25,25,17,25,26,17,25,27,17,25,28,17,25,29,17,25,30,17,25,31,17,26,12,17,26,13,17,26,14,17,26,15,17,26,16,17,26,17,17,26,18,17,26,19,17,26,20,17,26,21,17,26,22,17,26,23,17,26,24,17,26,25,17,26,26,17,26,27,17,26,28,17,26,29,17,26,30,17,26,31,17,27,12,17,27,13,17,27,14,17,27,15,17,27,16,17,27,17,17,27,18,17,27,19,17,27,20,17,27,21,17,27,22,17,27,23,17,27,24,17,27,25,17,27,26,17,27,27,17,27,28,17,27,29,17,27,30,17,27,31,17,28,12,17,28,13,17,28,14,17,28,15,17,28,16,17,28,17,17,28,18,17,28,19,17,28,20,17,28,21,17,28,22,17,28,23,17,28,24,17,28,25,17,28,26,17,28,27,17,28,28,17,28,29,17,28,30,17,28,31,17,29,12,17,29,13,17,29,14,17,29,15,17,29,16,17,29,17,17,29,18,17,29,19,17,29,20,17,29,21,17,29,22,17,29,23,17,29,24,17,29,25,17,29,26,17,29,27,17,29,28,17,29,29,17,29,30,17,29,31,18,10,12,18,10,13,18,10,14,18,10,15,18,10,16,18,10,17,18,10,18,18,10,19,18,10,20,18,10,21,18,10,22,18,10,23,18,10,24,18,10,25,18,10,26,18,10,27,18,10,28,18,10,29,18,10,30,18,10,31,18,11,12,18,11,13,18,11,14,18,11,15,18,11,16,18,11,17,18,11,18,18,11,19,18,11,20,18,11,21,18,11,22,18,11,23,18,11,24,18,11,25,18,11,26,18,11,27,18,11,28,18,11,29,18,11,30,18,11,31,18,12,12,18,12,13,18,12,14,18,12,15,18,12,16,18,12,17,18,12,18,18,12,19,18,12,20,18,12,21,18,12,22,18,12,23,18,12,24,18,12,25,18,12,26,18,12,27,18,12,28,18,12,29,18,12,30,18,12,31,18,13,12,18,13,13,18,13,14,18,13,15,18,13,16,18,13,17,18,13,18,18,13,19,18,13,20,18,13,21,18,13,22,18,13,23,18,13,24,18,13,25,18,13,26,18,13,27,18,13,28,18,13,29,18,13,30,18,13,31,18,14,12,18,14,13,18,14,14,18,14,15,18,14,16,18,14,17,18,14,18,18,14,19,18,14,20,18,14,21,18,14,22,18,14,23,18,14,24,18,14,25,18,14,26,18,14,27,18,14,28,18,14,29,18,14,30,18,14,31,18,15,12,18,15,13,18,15,14,18,15,15,18,15,16,18,15,17,18,15,18,18,15,19,18,15,20,18,15,21,18,15,22,18,15,23,18,15,24,18,15,25,18,15,26,18,15,27,18,15,28,18,15,29,18,15,30,18,15,31,18,16,12,18,16,13,18,16,14,18,16,15,18,16,16,18,16,17,18,16,18,18,16,19,18,16,20,18,16,21,18,16,22,18,16,23,18,16,24,18,16,25,18,16,26,18,16,27,18,16,28,18,16,29,18,16,30,18,16,31,18,17,12,18,17,13,18,17,14,18,17,15,18,17,19,18,17,20,18,17,21,18,17,22,18,17,23,18,17,24,18,17,25,18,17,26,18,17,27,18,17,28,18,17,29,18,17,30,18,17,31,18,18,12,18,18,13,18,18,14,18,18,15,18,18,20,18,18,21,18,18,22,18,18,23,18,18,24,18,18,25,18,18,26,18,18,27,18,18,28,18,18,29,18,18,30,18,18,31,18,19,12,18,19,13,18,19,14,18,19,15,18,19,16,18,19,21,18,19,22,18,19,23,18,19,24,18,19,25,18,19,26,18,19,27,18,19,28,18,19,29,18,19,30,18,19,31,18,20,12,18,20,13,18,20,14,18,20,15,18,20,16,18,20,17,18,20,22,18,20,23,18,20,24,18,20,25,18,20,26,18,20,27,18,20,28,18,20,29,18,20,30,18,20,31,18,21,12,18,21,13,18,21,14,18,21,15,18,21,16,18,21,17,18,21,18,18,21,22,18,21,23,18,21,24,18,21,25,18,21,26,18,21,27,18,21,28,18,21,29,18,21,30,18,21,31,18,22,12,18,22,13,18,22,14,18,22,15,18,22,16,18,22,17,18,22,18,18,22,19,18,22,20,18,22,21,18,22,22,18,22,23,18,22,24,18,22,25,18,22,26,18,22,27,18,22,28,18,22,29,18,22,30,18,22,31,18,23,12,18,23,13,18,23,14,18,23,15,18,23,16,18,23,17,18,23,18,18,23,19,18,23,20,18,23,21,18,23,22,18,23,23,18,23,24,18,23,25,18,23,26,18,23,27,18,23,28,18,23,29,18,23,30,18,23,31,18,24,12,18,24,13,18,24,14,18,24,15,18,24,16,18,24,17,18,24,18,18,24,19,18,24,20,18,24,21,18,24,22,18,24,23,18,24,24,18,24,25,18,24,26,18,24,27,18,24,28,18,24,29,18,24,30,18,24,31,18,25,12,18,25,13,18,25,14,18,25,15,18,25,16,18,25,17,18,25,18,18,25,19,18,25,20,18,25,21,18,25,22,18,25,23,18,25,24,18,25,25,18,25,26,18,25,27,18,25,28,18,25,29,18,25,30,18,25,31,18,26,12,18,26,13,18,26,14,18,26,15,18,26,16,18,26,17,18,26,18,18,26,19,18,26,20,18,26,21,18,26,22,18,26,23,18,26,24,18,26,25,18,26,26,18,26,27,18,26,28,18,26,29,18,26,30,18,26,31,18,27,12,18,27,13,18,27,14,18,27,15,18,27,16,18,27,17,18,27,18,18,27,19,18,27,20,18,27,21,18,27,22,18,27,23,18,27,24,18,27,25,18,27,26,18,27,27,18,27,28,18,27,29,18,27,30,18,27,31,18,28,12,18,28,13,18,28,14,18,28,15,18,28,16,18,28,17,18,28,18,18,28,19,18,28,20,18,28,21,18,28,22,18,28,23,18,28,24,18,28,25,18,28,26,18,28,27,18,28,28,18,28,29,18,28,30,18,28,31,18,29,12,18,29,13,18,29,14,18,29,15,18,29,16,18,29,17,18,29,18,18,29,19,18,29,20,18,29,21,18,29,22,18,29,23,18,29,24,18,29,25,18,29,26,18,29,27,18,29,28,18,29,29,18,29,30,18,29,31,19,10,12,19,10,13,19,10,14,19,10,15,19,10,16,19,10,17,19,10,18,19,10,19,19,10,20,19,10,21,19,10,22,19,10,23,19,10,24,19,10,25,19,10,26,19,10,27,19,10,28,19,10,29,19,10,30,19,10,31,19,11,12,19,11,13,19,11,14,19,11,15,19,11,16,19,11,17,19,11,18,19,11,19,19,11,20,19,11,21,19,11,22,19,11,23,19,11,24,19,11,25,19,11,26,19,11,27,19,11,28,19,11,29,19,11,30,19,11,31,19,12,12,19,12,13,19,12,14,19,12,15,19,12,16,19,12,17,19,12,18,19,12,19,19,12,20,19,12,21,19,12,22,19,12,23,19,12,24,19,12,25,19,12,26,19,12,27,19,12,28,19,12,29,19,12,30,19,12,31,19,13,12,19,13,13,19,13,14,19,13,15,19,13,16,19,13,17,19,13,18,19,13,19,19,13,20,19,13,21,19,13,22,19,13,23,19,13,24,19,13,25,19,13,26,19,13,27,19,13,28,19,13,29,19,13,30,19,13,31,19,14,12,19,14,13,19,14,14,19,14,15,19,14,16,19,14,17,19,14,18,19,14,19,19,14,20,19,14,21,19,14,22,19,14,23,19,14,24,19,14,25,19,14,26,19,14,27,19,14,28,19,14,29,19,14,30,19,14,31,19,15,12,19,15,13,19,15,14,19,15,15,19,15,16,19,15,17,19,15,18,19,15,19,19,15,20,19,15,21,19,15,22,19,15,23,19,15,24,19,15,25,19,15,26,19,15,27,19,15,28,19,15,29,19,15,30,19,15,31,19,16,12,19,16,13,19,16,14,19,16,15,19,16,16,19,16,17,19,16,18,19,16,19,19,16,20,19,16,21,19,16,22,19,16,23,19,16,24,19,16,25,19,16,26,19,16,27,19,16,28,19,16,29,19,16,30,19,16,31,19,17,12,19,17,13,19,17,14,19,17,15,19,17,16,19,17,17,19,17,18,19,17,19,19,17,20,19,17,21,19,17,22,19,17,23,19,17,24,19,17,25,19,17,26,19,17,27,19,17,28,19,17,29,19,17,30,19,17,31,19,18,12,19,18,13,19,18,14,19,18,15,19,18,16,19,18,20,19,18,21,19,18,22,19,18,23,19,18,24,19,18,25,19,18,26,19,18,27,19,18,28,19,18,29,19,18,30,19,18,31,19,19,12,19,19,13,19,19,14,19,19,15,19,19,16,19,19,21,19,19,22,19,19,23,19,19,24,19,19,25,19,19,26,19,19,27,19,19,28,19,19,29,19,19,30,19,19,31,19,20,12,19,20,13,19,20,14,19,20,15,19,20,16,19,20,17,19,20,22,19,20,23,19,20,24,19,20,25,19,20,26,19,20,27,19,20,28,19,20,29,19,20,30,19,20,31,19,21,12,19,21,13,19,21,14,19,21,15,19,21,16,19,21,17,19,21,18,19,21,23,19,21,24,19,21,25,19,21,26,19,21,27,19,21,28,19,21,29,19,21,30,19,21,31,19,22,12,19,22,13,19,22,14,19,22,15,19,22,16,19,22,17,19,22,18,19,22,19,19,22,23,19,22,24,19,22,25,19,22,26,19,22,27,19,22,28,19,22,29,19,22,30,19,22,31,19,23,12,19,23,13,19,23,14,19,23,15,19,23,16,19,23,17,19,23,18,19,23,19,19,23,20,19,23,21,19,23,22,19,23,23,19,23,24,19,23,25,19,23,26,19,23,27,19,23,28,19,23,29,19,23,30,19,23,31,19,24,12,19,24,13,19,24,14,19,24,15,19,24,16,19,24,17,19,24,18,19,24,19,19,24,20,19,24,21,19,24,22,19,24,23,19,24,24,19,24,25,19,24,26,19,24,27,19,24,28,19,24,29,19,24,30,19,24,31,19,25,12,19,25,13,19,25,14,19,25,15,19,25,16,19,25,17,19,25,18,19,25,19,19,25,20,19,25,21,19,25,22,19,25,23,19,25,24,19,25,25,19,25,26,19,25,27,19,25,28,19,25,29,19,25,30,19,25,31,19,26,12,19,26,13,19,26,14,19,26,15,19,26,16,19,26,17,19,26,18,19,26,19,19,26,20,19,26,21,19,26,22,19,26,23,19,26,24,19,26,25,19,26,26,19,26,27,19,26,28,19,26,29,19,26,30,19,26,31,19,27,12,19,27,13,19,27,14,19,27,15,19,27,16,19,27,17,19,27,18,19,27,19,19,27,20,19,27,21,19,27,22,19,27,23,19,27,24,19,27,25,19,27,26,19,27,27,19,27,28,19,27,29,19,27,30,19,27,31,19,28,12,19,28,13,19,28,14,19,28,15,19,28,16,19,28,17,19,28,18,19,28,19,19,28,20,19,28,21,19,28,22,19,28,23,19,28,24,19,28,25,19,28,26,19,28,27,19,28,28,19,28,29,19,28,30,19,28,31,19,29,12,19,29,13,19,29,14,19,29,15,19,29,16,19,29,17,19,29,18,19,29,19,19,29,20,19,29,21,19,29,22,19,29,23,19,29,24,19,29,25,19,29,26,19,29,27,19,29,28,19,29,29,19,29,30,19,29,31,20,10,12,20,10,13,20,10,14,20,10,15,20,10,16,20,10,17,20,10,18,20,10,19,20,10,20,20,10,21,20,10,22,20,10,23,20,10,24,20,10,25,20,10,26,20,10,27,20,10,28,20,10,29,20,10,30,20,10,31,20,11,12,20,11,13,20,11,14,20,11,15,20,11,16,20,11,17,20,11,18,20,11,19,20,11,20,20,11,21,20,11,22,20,11,23,20,11,24,20,11,25,20,11,26,20,11,27,20,11,28,20,11,29,20,11,30,20,11,31,20,12,12,20,12,13,20,12,14,20,12,15,20,12,16,20,12,17,20,12,18,20,12,19,20,12,20,20,12,21,20,12,22,20,12,23,20,12,24,20,12,25,20,12,26,20,12,27,20,12,28,20,12,29,20,12,30,20,12,31,20,13,12,20,13,13,20,13,14,20,13,15,20,13,16,20,13,17,20,13,18,20,13,19,20,13,20,20,13,21,20,13,22,20,13,23,20,13,24,20,13,25,20,13,26,20,13,27,20,13,28,20,13,29,20,13,30,20,13,31,20,14,12,20,14,13,20,14,14,20,14,15,20,14,16,20,14,17,20,14,18,20,14,19,20,14,20,20,14,21,20,14,22,20,14,23,20,14,24,20,14,25,20,14,26,20,14,27,20,14,28,20,14,29,20,14,30,20,14,31,20,15,12,20,15,13,20,15,14,20,15,15,20,15,16,20,15,17,20,15,18,20,15,19,20,15,20,20,15,21,20,15,22,20,15,23,20,15,24,20,15,25,20,15,26,20,15,27,20,15,28,20,15,29,20,15,30,20,15,31,20,16,12,20,16,13,20,16,14,20,16,15,20,16,16,20,16,17,20,16,18,20,16,19,20,16,20,20,16,21,20,16,22,20,16,23,20,16,24,20,16,25,20,16,26,20,16,27,20,16,28,20,16,29,20,16,30,20,16,31,20,17,12,20,17,13,20,17,14,20,17,15,20,17,16,20,17,17,20,17,18,20,17,19,20,17,20,20,17,21,20,17,22,20,17,23,20,17,24,20,17,25,20,17,26,20,17,27,20,17,28,20,17,29,20,17,30,20,17,31,20,18,12,20,18,13,20,18,14,20,18,15,20,18,16,20,18,17,20,18,18,20,18,19,20,18,20,20,18,21,20,18,22,20,18,23,20,18,24,20,18,25,20,18,26,20,18,27,20,18,28,20,18,29,20,18,30,20,18,31,20,19,12,20,19,13,20,19,14,20,19,15,20,19,16,20,19,17,20,19,21,20,19,22,20,19,23,20,19,24,20,19,25,20,19,26,20,19,27,20,19,28,20,19,29,20,19,30,20,19,31,20,20,12,20,20,13,20,20,14,20,20,15,20,20,16,20,20,17,20,20,22,20,20,23,20,20,24,20,20,25,20,20,26,20,20,27,20,20,28,20,20,29,20,20,30,20,20,31,20,21,12,20,21,13,20,21,14,20,21,15,20,21,16,20,21,17,20,21,18,20,21,23,20,21,24,20,21,25,20,21,26,20,21,27,20,21,28,20,21,29,20,21,30,20,21,31,20,22,12,20,22,13,20,22,14,20,22,15,20,22,16,20,22,17,20,22,18,20,22,19,20,22,24,20,22,25,20,22,26,20,22,27,20,22,28,20,22,29,20,22,30,20,22,31,20,23,12,20,23,13,20,23,14,20,23,15,20,23,16,20,23,17,20,23,18,20,23,19,20,23,20,20,23,24,20,23,25,20,23,26,20,23,27,20,23,28,20,23,29,20,23,30,20,23,31,20,24,12,20,24,13,20,24,14,20,24,15,20,24,16,20,24,17,20,24,18,20,24,19,20,24,20,20,24,21,20,24,22,20,24,23,20,24,24,20,24,25,20,24,26,20,24,27,20,24,28,20,24,29,20,24,30,20,24,31,20,25,12,20,25,13,20,25,14,20,25,15,20,25,16,20,25,17,20,25,18,20,25,19,20,25,20,20,25,21,20,25,22,20,25,23,20,25,24,20,25,25,20,25,26,20,25,27,20,25,28,20,25,29,20,25,30,20,25,31,20,26,12,20,26,13,20,26,14,20,26,15,20,26,16,20,26,17,20,26,18,20,26,19,20,26,20,20,26,21,20,26,22,20,26,23,20,26,24,20,26,25,20,26,26,20,26,27,20,26,28,20,26,29,20,26,30,20,26,31,20,27,12,20,27,13,20,27,14,20,27,15,20,27,16,20,27,17,20,27,18,20,27,19,20,27,20,20,27,21,20,27,22,20,27,23,20,27,24,20,27,25,20,27,26,20,27,27,20,27,28,20,27,29,20,27,30,20,27,31,20,28,12,20,28,13,20,28,14,20,28,15,20,28,16,20,28,17,20,28,18,20,28,19,20,28,20,20,28,21,20,28,22,20,28,23,20,28,24,20,28,25,20,28,26,20,28,27,20,28,28,20,28,29,20,28,30,20,28,31,20,29,12,20,29,13,20,29,14,20,29,15,20,29,16,20,29,17,20,29,18,20,29,19,20,29,20,20,29,21,20,29,22,20,29,23,20,29,24,20,29,25,20,29,26,20,29,27,20,29,28,20,29,29,20,29,30,20,29,31,21,10,12,21,10,13,21,10,14,21,10,15,21,10,16,21,10,17,21,10,18,21,10,19,21,10,20,21,10,21,21,10,22,21,10,23,21,10,24,21,10,25,21,10,26,21,10,27,21,10,28,21,10,29,21,10,30,21,10,31,21,11,12,21,11,13,21,11,14,21,11,15,21,11,16,21,11,17,21,11,18,21,11,19,21,11,20,21,11,21,21,11,22,21,11,23,21,11,24,21,11,25,21,11,26,21,11,27,21,11,28,21,11,29,21,11,30,21,11,31,21,12,12,21,12,13,21,12,14,21,12,15,21,12,16,21,12,17,21,12,18,21,12,19,21,12,20,21,12,21,21,12,22,21,12,23,21,12,24,21,12,25,21,12,26,21,12,27,21,12,28,21,12,29,21,12,30,21,12,31,21,13,12,21,13,13,21,13,14,21,13,15,21,13,16,21,13,17,21,13,18,21,13,19,21,13,20,21,13,21,21,13,22,21,13,23,21,13,24,21,13,25,21,13,26,21,13,27,21,13,28,21,13,29,21,13,30,21,13,31,21,14,12,21,14,13,21,14,14,21,14,15,21,14,16,21,14,17,21,14,18,21,14,19,21,14,20,21,14,21,21,14,22,21,14,23,21,14,24,21,14,25,21,14,26,21,14,27,21,14,28,21,14,29,21,14,30,21,14,31,21,15,12,21,15,13,21,15,14,21,15,15,21,15,16,21,15,17,21,15,18,21,15,19,21,15,20,21,15,21,21,15,22,21,15,23,21,15,24,21,15,25,21,15,26,21,15,27,21,15,28,21,15,29,21,15,30,21,15,31,21,16,12,21,16,13,21,16,14,21,16,15,21,16,16,21,16,17,21,16,18,21,16,19,21,16,20,21,16,21,21,16,22,21,16,23,21,16,24,21,16,25,21,16,26,21,16,27,21,16,28,21,16,29,21,16,30,21,16,31,21,17,12,21,17,13,21,17,14,21,17,15,21,17,16,21,17,17,21,17,18,21,17,19,21,17,20,21,17,21,21,17,22,21,17,23,21,17,24,21,17,25,21,17,26,21,17,27,21,17,28,21,17,29,21,17,30,21,17,31,21,18,12,21,18,13,21,18,14,21,18,15,21,18,16,21,18,17,21,18,18,21,18,19,21,18,20,21,18,21,21,18,22,21,18,23,21,18,24,21,18,25,21,18,26,21,18,27,21,18,28,21,18,29,21,18,30,21,18,31,21,19,12,21,19,13,21,19,14,21,19,15,21,19,16,21,19,17,21,19,18,21,19,19,21,19,20,21,19,21,21,19,22,21,19,23,21,19,24,21,19,25,21,19,26,21,19,27,21,19,28,21,19,29,21,19,30,21,19,31,21,20,12,21,20,13,21,20,14,21,20,15,21,20,16,21,20,17,21,20,18,21,20,22,21,20,23,21,20,24,21,20,25,21,20,26,21,20,27,21,20,28,21,20,29,21,20,30,21,20,31,21,21,12,21,21,13,21,21,14,21,21,15,21,21,16,21,21,17,21,21,18,21,21,23,21,21,24,21,21,25,21,21,26,21,21,27,21,21,28,21,21,29,21,21,30,21,21,31,21,22,12,21,22,13,21,22,14,21,22,15,21,22,16,21,22,17,21,22,18,21,22,19,21,22,24,21,22,25,21,22,26,21,22,27,21,22,28,21,22,29,21,22,30,21,22,31,21,23,12,21,23,13,21,23,14,21,23,15,21,23,16,21,23,17,21,23,18,21,23,19,21,23,20,21,23,25,21,23,26,21,23,27,21,23,28,21,23,29,21,23,30,21,23,31,21,24,12,21,24,13,21,24,14,21,24,15,21,24,16,21,24,17,21,24,18,21,24,19,21,24,20,21,24,21,21,24,25,21,24,26,21,24,27,21,24,28,21,24,29,21,24,30,21,24,31,21,25,12,21,25,13,21,25,14,21,25,15,21,25,16,21,25,17,21,25,18,21,25,19,21,25,20,21,25,21,21,25,22,21,25,23,21,25,24,21,25,25,21,25,26,21,25,27,21,25,28,21,25,29,21,25,30,21,25,31,21,26,12,21,26,13,21,26,14,21,26,15,21,26,16,21,26,17,21,26,18,21,26,19,21,26,20,21,26,21,21,26,22,21,26,23,21,26,24,21,26,25,21,26,26,21,26,27,21,26,28,21,26,29,21,26,30,21,26,31,21,27,12,21,27,13,21,27,14,21,27,15,21,27,16,21,27,17,21,27,18,21,27,19,21,27,20,21,27,21,21,27,22,21,27,23,21,27,24,21,27,25,21,27,26,21,27,27,21,27,28,21,27,29,21,27,30,21,27,31,21,28,12,21,28,13,21,28,14,21,28,15,21,28,16,21,28,17,21,28,18,21,28,19,21,28,20,21,28,21,21,28,22,21,28,23,21,28,24,21,28,25,21,28,26,21,28,27,21,28,28,21,28,29,21,28,30,21,28,31,21,29,12,21,29,13,21,29,14,21,29,15,21,29,16,21,29,17,21,29,18,21,29,19,21,29,20,21,29,21,21,29,22,21,29,23,21,29,24,21,29,25,21,29,26,21,29,27,21,29,28,21,29,29,21,29,30,21,29,31,22,10,12,22,10,13,22,10,14,22,10,15,22,10,16,22,10,17,22,10,18,22,10,19,22,10,20,22,10,21,22,10,22,22,10,23,22,10,24,22,10,25,22,10,26,22,10,27,22,10,28,22,10,29,22,10,30,22,10,31,22,11,12,22,11,13,22,11,14,22,11,15,22,11,16,22,11,17,22,11,18,22,11,19,22,11,20,22,11,21,22,11,22,22,11,23,22,11,24,22,11,25,22,11,26,22,11,27,22,11,28,22,11,29,22,11,30,22,11,31,22,12,12,22,12,13,22,12,14,22,12,15,22,12,16,22,12,17,22,12,18,22,12,19,22,12,20,22,12,21,22,12,22,22,12,23,22,12,24,22,12,25,22,12,26,22,12,27,22,12,28,22,12,29,22,12,30,22,12,31,22,13,12,22,13,13,22,13,14,22,13,15,22,13,16,22,13,17,22,13,18,22,13,19,22,13,20,22,13,21,22,13,22,22,13,23,22,13,24,22,13,25,22,13,26,22,13,27,22,13,28,22,13,29,22,13,30,22,13,31,22,14,12,22,14,13,22,14,14,22,14,15,22,14,16,22,14,17,22,14,18,22,14,19,22,14,20,22,14,21,22,14,22,22,14,23,22,14,24,22,14,25,22,14,26,22,14,27,22,14,28,22,14,29,22,14,30,22,14,31,22,15,12,22,15,13,22,15,14,22,15,15,22,15,16,22,15,17,22,15,18,22,15,19,22,15,20,22,15,21,22,15,22,22,15,23,22,15,24,22,15,25,22,15,26,22,15,27,22,15,28,22,15,29,22,15,30,22,15,31,22,16,12,22,16,13,22,16,14,22,16,15,22,16,16,22,16,17,22,16,18,22,16,19,22,16,20,22,16,21,22,16,22,22,16,23,22,16,24,22,16,25,22,16,26,22,16,27,22,16,28,22,16,29,22,16,30,22,16,31,22,17,12,22,17,13,22,17,14,22,17,15,22,17,16,22,17,17,22,17,18,22,17,19,22,17,20,22,17,21,22,17,22,22,17,23,22,17,24,22,17,25,22,17,26,22,17,27,22,17,28,22,17,29,22,17,30,22,17,31,22,18,12,22,18,13,22,18,14,22,18,15,22,18,16,22,18,17,22,18,18,22,18,19,22,18,20,22,18,21,22,18,22,22,18,23,22,18,24,22,18,25,22,18,26,22,18,27,22,18,28,22,18,29,22,18,30,22,18,31,22,19,12,22,19,13,22,19,14,22,19,15,22,19,16,22,19,17,22,19,18,22,19,19,22,19,20,22,19,21,22,19,22,22,19,23,22,19,24,22,19,25,22,19,26,22,19,27,22,19,28,22,19,29,22,19,30,22,19,31,22,20,12,22,20,13,22,20,14,22,20,15,22,20,16,22,20,17,22,20,18,22,20,19,22,20,20,22,20,21,22,20,22,22,20,23,22,20,24,22,20,25,22,20,26,22,20,27,22,20,28,22,20,29,22,20,30,22,20,31,22,21,12,22,21,13,22,21,14,22,21,15,22,21,16,22,21,17,22,21,18,22,21,19,22,21,23,22,21,24,22,21,25,22,21,26,22,21,27,22,21,28,22,21,29,22,21,30,22,21,31,22,22,12,22,22,13,22,22,14,22,22,15,22,22,16,22,22,17,22,22,18,22,22,19,22,22,24,22,22,25,22,22,26,22,22,27,22,22,28,22,22,29,22,22,30,22,22,31,22,23,12,22,23,13,22,23,14,22,23,15,22,23,16,22,23,17,22,23,18,22,23,19,22,23,20,22,23,25,22,23,26,22,23,27,22,23,28,22,23,29,22,23,30,22,23,31,22,24,12,22,24,13,22,24,14,22,24,15,22,24,16,22,24,17,22,24,18,22,24,19,22,24,20,22,24,21,22,24,26,22,24,27,22,24,28,22,24,29,22,24,30,22,24,31,22,25,12,22,25,13,22,25,14,22,25,15,22,25,16,22,25,17,22,25,18,22,25,19,22,25,20,22,25,21,22,25,22,22,25,26,22,25,27,22,25,28,22,25,29,22,25,30,22,25,31,22,26,12,22,26,13,22,26,14,22,26,15,22,26,16,22,26,17,22,26,18,22,26,19,22,26,20,22,26,21,22,26,22,22,26,23,22,26,24,22,26,25,22,26,26,22,26,27,22,26,28,22,26,29,22,26,30,22,26,31,22,27,12,22,27,13,22,27,14,22,27,15,22,27,16,22,27,17,22,27,18,22,27,19,22,27,20,22,27,21,22,27,22,22,27,23,22,27,24,22,27,25,22,27,26,22,27,27,22,27,28,22,27,29,22,27,30,22,27,31,22,28,12,22,28,13,22,28,14,22,28,15,22,28,16,22,28,17,22,28,18,22,28,19,22,28,20,22,28,21,22,28,22,22,28,23,22,28,24,22,28,25,22,28,26,22,28,27,22,28,28,22,28,29,22,28,30,22,28,31,22,29,12,22,29,13,22,29,14,22,29,15,22,29,16,22,29,17,22,29,18,22,29,19,22,29,20,22,29,21,22,29,22,22,29,23,22,29,24,22,29,25,22,29,26,22,29,27,22,29,28,22,29,29,22,29,30,22,29,31,23,10,12,23,10,13,23,10,14,23,10,15,23,10,16,23,10,17,23,10,18,23,10,19,23,10,20,23,10,21,23,10,22,23,10,23,23,10,24,23,10,25,23,10,26,23,10,27,23,10,28,23,10,29,23,10,30,23,10,31,23,11,12,23,11,13,23,11,14,23,11,15,23,11,16,23,11,17,23,11,18,23,11,19,23,11,20,23,11,21,23,11,22,23,11,23,23,11,24,23,11,25,23,11,26,23,11,27,23,11,28,23,11,29,23,11,30,23,11,31,23,12,12,23,12,13,23,12,14,23,12,15,23,12,16,23,12,17,23,12,18,23,12,19,23,12,20,23,12,21,23,12,22,23,12,23,23,12,24,23,12,25,23,12,26,23,12,27,23,12,28,23,12,29,23,12,30,23,12,31,23,13,12,23,13,13,23,13,14,23,13,15,23,13,16,23,13,17,23,13,18,23,13,19,23,13,20,23,13,21,23,13,22,23,13,23,23,13,24,23,13,25,23,13,26,23,13,27,23,13,28,23,13,29,23,13,30,23,13,31,23,14,12,23,14,13,23,14,14,23,14,15,23,14,16,23,14,17,23,14,18,23,14,19,23,14,20,23,14,21,23,14,22,23,14,23,23,14,24,23,14,25,23,14,26,23,14,27,23,14,28,23,14,29,23,14,30,23,14,31,23,15,12,23,15,13,23,15,14,23,15,15,23,15,16,23,15,17,23,15,18,23,15,19,23,15,20,23,15,21,23,15,22,23,15,23,23,15,24,23,15,25,23,15,26,23,15,27,23,15,28,23,15,29,23,15,30,23,15,31,23,16,12,23,16,13,23,16,14,23,16,15,23,16,16,23,16,17,23,16,18,23,16,19,23,16,20,23,16,21,23,16,22,23,16,23,23,16,24,23,16,25,23,16,26,23,16,27,23,16,28,23,16,29,23,16,30,23,16,31,23,17,12,23,17,13,23,17,14,23,17,15,23,17,16,23,17,17,23,17,18,23,17,19,23,17,20,23,17,21,23,17,22,23,17,23,23,17,24,23,17,25,23,17,26,23,17,27,23,17,28,23,17,29,23,17,30,23,17,31,23,18,12,23,18,13,23,18,14,23,18,15,23,18,16,23,18,17,23,18,18,23,18,19,23,18,20,23,18,21,23,18,22,23,18,23,23,18,24,23,18,25,23,18,26,23,18,27,23,18,28,23,18,29,23,18,30,23,18,31,23,19,12,23,19,13,23,19,14,23,19,15,23,19,16,23,19,17,23,19,18,23,19,19,23,19,20,23,19,21,23,19,22,23,19,23,23,19,24,23,19,25,23,19,26,23,19,27,23,19,28,23,19,29,23,19,30,23,19,31,23,20,12,23,20,13,23,20,14,23,20,15,23,20,16,23,20,17,23,20,18,23,20,19,23,20,20,23,20,21,23,20,22,23,20,23,23,20,24,23,20,25,23,20,26,23,20,27,23,20,28,23,20,29,23,20,30,23,20,31,23,21,12,23,21,13,23,21,14,23,21,15,23,21,16,23,21,17,23,21,18,23,21,19,23,21,20,23,21,21,23,21,22,23,21,23,23,21,24,23,21,25,23,21,26,23,21,27,23,21,28,23,21,29,23,21,30,23,21,31,23,22,12,23,22,13,23,22,14,23,22,15,23,22,16,23,22,17,23,22,18,23,22,19,23,22,20,23,22,24,23,22,25,23,22,26,23,22,27,23,22,28,23,22,29,23,22,30,23,22,31,23,23,12,23,23,13,23,23,14,23,23,15,23,23,16,23,23,17,23,23,18,23,23,19,23,23,20,23,23,25,23,23,26,23,23,27,23,23,28,23,23,29,23,23,30,23,23,31,23,24,12,23,24,13,23,24,14,23,24,15,23,24,16,23,24,17,23,24,18,23,24,19,23,24,20,23,24,21,23,24,26,23,24,27,23,24,28,23,24,29,23,24,30,23,24,31,23,25,12,23,25,13,23,25,14,23,25,15,23,25,16,23,25,17,23,25,18,23,25,19,23,25,20,23,25,21,23,25,22,23,25,27,23,25,28,23,25,29,23,25,30,23,25,31,23,26,12,23,26,13,23,26,14,23,26,15,23,26,16,23,26,17,23,26,18,23,26,19,23,26,20,23,26,21,23,26,22,23,26,23,23,26,27,23,26,28,23,26,29,23,26,30,23,26,31,23,27,12,23,27,13,23,27,14,23,27,15,23,27,16,23,27,17,23,27,18,23,27,19,23,27,20,23,27,21,23,27,22,23,27,23,23,27,24,23,27,25,23,27,26,23,27,27,23,27,28,23,27,29,23,27,30,23,27,31,23,28,12,23,28,13,23,28,14,23,28,15,23,28,16,23,28,17,23,28,18,23,28,19,23,28,20,23,28,21,23,28,22,23,28,23,23,28,24,23,28,25,23,28,26,23,28,27,23,28,28,23,28,29,23,28,30,23,28,31,23,29,12,23,29,13,23,29,14,23,29,15,23,29,16,23,29,17,23,29,18,23,29,19,23,29,20,23,29,21,23,29,22,23,29,23,23,29,24,23,29,25,23,29,26,23,29,27,23,29,28,23,29,29,23,29,30,23,29,31,24,10,12,24,10,13,24,10,14,24,10,15,24,10,16,24,10,17,24,10,18,24,10,19,24,10,20,24,10,21,24,10,22,24,10,23,24,10,24,24,10,25,24,10,26,24,10,27,24,10,28,24,10,29,24,10,30,24,10,31,24,11,12,24,11,13,24,11,14,24,11,15,24,11,16,24,11,17,24,11,18,24,11,19,24,11,20,24,11,21,24,11,22,24,11,23,24,11,24,24,11,25,24,11,26,24,11,27,24,11,28,24,11,29,24,11,30,24,11,31,24,12,12,24,12,13,24,12,14,24,12,15,24,12,16,24,12,17,24,12,18,24,12,19,24,12,20,24,12,21,24,12,22,24,12,23,24,12,24,24,12,25,24,12,26,24,12,27,24,12,28,24,12,29,24,12,30,24,12,31,24,13,12,24,13,13,24,13,14,24,13,15,24,13,16,24,13,17,24,13,18,24,13,19,24,13,20,24,13,21,24,13,22,24,13,23,24,13,24,24,13,25,24,13,26,24,13,27,24,13,28,24,13,29,24,13,30,24,13,31,24,14,12,24,14,13,24,14,14,24,14,15,24,14,16,24,14,17,24,14,18,24,14,19,24,14,20,24,14,21,24,14,22,24,14,23,24,14,24,24,14,25,24,14,26,24,14,27,24,14,28,24,14,29,24,14,30,24,14,31,24,15,12,24,15,13,24,15,14,24,15,15,24,15,16,24,15,17,24,15,18,24,15,19,24,15,20,24,15,21,24,15,22,24,15,23,24,15,24,24,15,25,24,15,26,24,15,27,24,15,28,24,15,29,24,15,30,24,15,31,24,16,12,24,16,13,24,16,14,24,16,15,24,16,16,24,16,17,24,16,18,24,16,19,24,16,20,24,16,21,24,16,22,24,16,23,24,16,24,24,16,25,24,16,26,24,16,27,24,16,28,24,16,29,24,16,30,24,16,31,24,17,12,24,17,13,24,17,14,24,17,15,24,17,16,24,17,17,24,17,18,24,17,19,24,17,20,24,17,21,24,17,22,24,17,23,24,17,24,24,17,25,24,17,26,24,17,27,24,17,28,24,17,29,24,17,30,24,17,31,24,18,12,24,18,13,24,18,14,24,18,15,24,18,16,24,18,17,24,18,18,24,18,19,24,18,20,24,18,21,24,18,22,24,18,23,24,18,24,24,18,25,24,18,26,24,18,27,24,18,28,24,18,29,24,18,30,24,18,31,24,19,12,24,19,13,24,19,14,24,19,15,24,19,16,24,19,17,24,19,18,24,19,19,24,19,20,24,19,21,24,19,22,24,19,23,24,19,24,24,19,25,24,19,26,24,19,27,24,19,28,24,19,29,24,19,30,24,19,31,24,20,12,24,20,13,24,20,14,24,20,15,24,20,16,24,20,17,24,20,18,24,20,19,24,20,20,24,20,21,24,20,22,24,20,23,24,20,24,24,20,25,24,20,26,24,20,27,24,20,28,24,20,29,24,20,30,24,20,31,24,21,12,24,21,13,24,21,14,24,21,15,24,21,16,24,21,17,24,21,18,24,21,19,24,21,20,24,21,21,24,21,22,24,21,23,24,21,24,24,21,25,24,21,26,24,21,27,24,21,28,24,21,29,24,21,30,24,21,31,24,22,12,24,22,13,24,22,14,24,22,15,24,22,16,24,22,17,24,22,18,24,22,19,24,22,20,24,22,21,24,22,22,24,22,23,24,22,24,24,22,25,24,22,26,24,22,27,24,22,28,24,22,29,24,22,30,24,22,31,24,23,12,24,23,13,24,23,14,24,23,15,24,23,16,24,23,17,24,23,18,24,23,19,24,23,20,24,23,21,24,23,25,24,23,26,24,23,27,24,23,28,24,23,29,24,23,30,24,23,31,24,24,12,24,24,13,24,24,14,24,24,15,24,24,16,24,24,17,24,24,18,24,24,19,24,24,20,24,24,21,24,24,26,24,24,27,24,24,28,24,24,29,24,24,30,24,24,31,24,25,12,24,25,13,24,25,14,24,25,15,24,25,16,24,25,17,24,25,18,24,25,19,24,25,20,24,25,21,24,25,22,24,25,27,24,25,28,24,25,29,24,25,30,24,25,31,24,26,12,24,26,13,24,26,14,24,26,15,24,26,16,24,26,17,24,26,18,24,26,19,24,26,20,24,26,21,24,26,22,24,26,23,24,26,28,24,26,29,24,26,30,24,26,31,24,27,12,24,27,13,24,27,14,24,27,15,24,27,16,24,27,17,24,27,18,24,27,19,24,27,20,24,27,21,24,27,22,24,27,23,24,27,24,24,27,28,24,27,29,24,27,30,24,27,31,24,28,12,24,28,13,24,28,14,24,28,15,24,28,16,24,28,17,24,28,18,24,28,19,24,28,20,24,28,21,24,28,22,24,28,23,24,28,24,24,28,25,24,28,26,24,28,27,24,28,28,24,28,29,24,28,30,24,28,31,24,29,12,24,29,13,24,29,14,24,29,15,24,29,16,24,29,17,24,29,18,24,29,19,24,29,20,24,29,21,24,29,22,24,29,23,24,29,24,24,29,25,24,29,26,24,29,27,24,29,28,24,29,29,24,29,30,24,29,31,25,10,12,25,10,13,25,10,14,25,10,15,25,10,16,25,10,17,25,10,18,25,10,19,25,10,20,25,10,21,25,10,22,25,10,23,25,10,24,25,10,25,25,10,26,25,10,27,25,10,28,25,10,29,25,10,30,25,10,31,25,11,12,25,11,13,25,11,14,25,11,15,25,11,16,25,11,17,25,11,18,25,11,19,25,11,20,25,11,21,25,11,22,25,11,23,25,11,24,25,11,25,25,11,26,25,11,27,25,11,28,25,11,29,25,11,30,25,11,31,25,12,12,25,12,13,25,12,14,25,12,15,25,12,16,25,12,17,25,12,18,25,12,19,25,12,20,25,12,21,25,12,22,25,12,23,25,12,24,25,12,25,25,12,26,25,12,27,25,12,28,25,12,29,25,12,30,25,12,31,25,13,12,25,13,13,25,13,14,25,13,15,25,13,16,25,13,17,25,13,18,25,13,19,25,13,20,25,13,21,25,13,22,25,13,23,25,13,24,25,13,25,25,13,26,25,13,27,25,13,28,25,13,29,25,13,30,25,13,31,25,14,12,25,14,13,25,14,14,25,14,15,25,14,16,25,14,17,25,14,18,25,14,19,25,14,20,25,14,21,25,14,22,25,14,23,25,14,24,25,14,25,25,14,26,25,14,27,25,14,28,25,14,29,25,14,30,25,14,31,25,15,12,25,15,13,25,15,14,25,15,15,25,15,16,25,15,17,25,15,18,25,15,19,25,15,20,25,15,21,25,15,22,25,15,23,25,15,24,25,15,25,25,15,26,25,15,27,25,15,28,25,15,29,25,15,30,25,15,31,25,16,12,25,16,13,25,16,14,25,16,15,25,16,16,25,16,17,25,16,18,25,16,19,25,16,20,25,16,21,25,16,22,25,16,23,25,16,24,25,16,25,25,16,26,25,16,27,25,16,28,25,16,29,25,16,30,25,16,31,25,17,12,25,17,13,25,17,14,25,17,15,25,17,16,25,17,17,25,17,18,25,17,19,25,17,20,25,17,21,25,17,22,25,17,23,25,17,24,25,17,25,25,17,26,25,17,27,25,17,28,25,17,29,25,17,30,25,17,31,25,18,12,25,18,13,25,18,14,25,18,15,25,18,16,25,18,17,25,18,18,25,18,19,25,18,20,25,18,21,25,18,22,25,18,23,25,18,24,25,18,25,25,18,26,25,18,27,25,18,28,25,18,29,25,18,30,25,18,31,25,19,12,25,19,13,25,19,14,25,19,15,25,19,16,25,19,17,25,19,18,25,19,19,25,19,20,25,19,21,25,19,22,25,19,23,25,19,24,25,19,25,25,19,26,25,19,27,25,19,28,25,19,29,25,19,30,25,19,31,25,20,12,25,20,13,25,20,14,25,20,15,25,20,16,25,20,17,25,20,18,25,20,19,25,20,20,25,20,21,25,20,22,25,20,23,25,20,24,25,20,25,25,20,26,25,20,27,25,20,28,25,20,29,25,20,30,25,20,31,25,21,12,25,21,13,25,21,14,25,21,15,25,21,16,25,21,17,25,21,18,25,21,19,25,21,20,25,21,21,25,21,22,25,21,23,25,21,24,25,21,25,25,21,26,25,21,27,25,21,28,25,21,29,25,21,30,25,21,31,25,22,12,25,22,13,25,22,14,25,22,15,25,22,16,25,22,17,25,22,18,25,22,19,25,22,20,25,22,21,25,22,22,25,22,23,25,22,24,25,22,25,25,22,26,25,22,27,25,22,28,25,22,29,25,22,30,25,22,31,25,23,12,25,23,13,25,23,14,25,23,15,25,23,16,25,23,17,25,23,18,25,23,19,25,23,20,25,23,21,25,23,22,25,23,23,25,23,24,25,23,25,25,23,26,25,23,27,25,23,28,25,23,29,25,23,30,25,23,31,25,24,12,25,24,13,25,24,14,25,24,15,25,24,16,25,24,17,25,24,18,25,24,19,25,24,20,25,24,21,25,24,22,25,24,26,25,24,27,25,24,28,25,24,29,25,24,30,25,24,31,25,25,12,25,25,13,25,25,14,25,25,15,25,25,16,25,25,17,25,25,18,25,25,19,25,25,20,25,25,21,25,25,22,25,25,27,25,25,28,25,25,29,25,25,30,25,25,31,25,26,12,25,26,13,25,26,14,25,26,15,25,26,16,25,26,17,25,26,18,25,26,19,25,26,20,25,26,21,25,26,22,25,26,23,25,26,28,25,26,29,25,26,30,25,26,31,25,27,12,25,27,13,25,27,14,25,27,15,25,27,16,25,27,17,25,27,18,25,27,19,25,27,20,25,27,21,25,27,22,25,27,23,25,27,24,25,27,29,25,27,30,25,27,31,25,28,12,25,28,13,25,28,14,25,28,15,25,28,16,25,28,17,25,28,18,25,28,19,25,28,20,25,28,21,25,28,22,25,28,23,25,28,24,25,28,25,25,28,29,25,28,30,25,28,31,25,29,12,25,29,13,25,29,14,25,29,15,25,29,16,25,29,17,25,29,18,25,29,19,25,29,20,25,29,21,25,29,22,25,29,23,25,29,24,25,29,25,25,29,26,25,29,27,25,29,28,25,29,29,25,29,30,25,29,31,]);
constraint int_lin_le([1,1,1,-1],[aux733_INTEGER,aux734_INTEGER,w_00002_00013_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,-1],[w_00006_00011_INTEGER,aux121_INTEGER,aux735_INTEGER,aux736_INTEGER,aux737_INTEGER,1],0);
constraint int_lin_le([1,1,1,-1],[aux738_INTEGER,aux739_INTEGER,w_00002_00014_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,-1],[aux745_INTEGER,aux746_INTEGER,aux747_INTEGER,aux748_INTEGER,aux749_INTEGER,aux750_INTEGER,aux751_INTEGER,w_00005_00006_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,-1],[aux752_INTEGER,aux753_INTEGER,aux754_INTEGER,aux755_INTEGER,aux756_INTEGER,aux757_INTEGER,w_00005_00012_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,-1],[aux758_INTEGER,aux759_INTEGER,aux760_INTEGER,w_00004_00011_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,-1],[aux761_INTEGER,aux762_INTEGER,aux763_INTEGER,aux764_INTEGER,aux765_INTEGER,w_00001_00007_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,-1],[aux766_INTEGER,aux767_INTEGER,aux768_INTEGER,aux769_INTEGER,aux770_INTEGER,aux771_INTEGER,w_00005_00007_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,-1],[aux772_INTEGER,aux773_INTEGER,aux774_INTEGER,aux775_INTEGER,aux776_INTEGER,w_00005_00013_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[w_00006_00003_INTEGER,w_00005_00003_INTEGER,w_00001_00003_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,1],[w_00006_00008_INTEGER,w_00005_00008_INTEGER,w_00001_00008_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,-1,-1,1],[w_00006_00002_INTEGER,w_00002_00002_INTEGER,w_00003_00002_INTEGER,w_00004_00002_INTEGER,w_00005_00002_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,-1,-1,1],[w_00006_00004_INTEGER,w_00002_00004_INTEGER,w_00003_00004_INTEGER,w_00004_00004_INTEGER,w_00005_00004_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,1,1,1,-1],[w_00006_00004_INTEGER,aux777_INTEGER,aux778_INTEGER,aux779_INTEGER,aux780_INTEGER,aux781_INTEGER,aux782_INTEGER,aux783_INTEGER,aux784_INTEGER,aux785_INTEGER,aux786_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,-1],[w_00006_00001_INTEGER,aux787_INTEGER,aux788_INTEGER,aux789_INTEGER,aux790_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,-1],[aux791_INTEGER,aux792_INTEGER,aux793_INTEGER,aux794_INTEGER,aux795_INTEGER,aux796_INTEGER,w_00003_00009_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,-1],[aux797_INTEGER,aux798_INTEGER,aux799_INTEGER,aux800_INTEGER,aux801_INTEGER,w_00005_00002_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,-1],[w_00006_00002_INTEGER,aux802_INTEGER,aux803_INTEGER,aux804_INTEGER,aux805_INTEGER,aux806_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,-1],[aux807_INTEGER,aux808_INTEGER,aux809_INTEGER,aux810_INTEGER,aux811_INTEGER,aux812_INTEGER,w_00001_00005_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,-1],[aux813_INTEGER,aux814_INTEGER,aux815_INTEGER,aux816_INTEGER,aux817_INTEGER,w_00004_00012_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,-1],[aux818_INTEGER,aux819_INTEGER,aux820_INTEGER,aux821_INTEGER,aux822_INTEGER,aux823_INTEGER,aux824_INTEGER,w_00004_00004_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,-1],[w_00006_00006_INTEGER,aux117_INTEGER,aux825_INTEGER,aux826_INTEGER,aux827_INTEGER,aux828_INTEGER,aux829_INTEGER,aux830_INTEGER,1],0);
constraint array_bool_and([aux831_BOOL,aux832_BOOL],aux130_BOOL);
constraint array_bool_and([aux833_BOOL,aux834_BOOL],aux182_BOOL);
constraint array_bool_and([aux835_BOOL,aux836_BOOL],aux188_BOOL);
constraint array_bool_and([aux837_BOOL,aux838_BOOL],aux127_BOOL);
constraint array_bool_and([aux839_BOOL,aux840_BOOL],aux177_BOOL);
constraint array_bool_and([aux841_BOOL,aux842_BOOL],aux138_BOOL);
constraint array_bool_and([aux843_BOOL,aux844_BOOL],aux142_BOOL);
constraint array_bool_and([aux845_BOOL,aux846_BOOL],aux144_BOOL);
constraint array_bool_and([aux847_BOOL,aux848_BOOL],aux115_BOOL);
constraint array_bool_and([aux849_BOOL,aux850_BOOL],aux185_BOOL);
constraint array_bool_and([aux851_BOOL,aux852_BOOL],aux165_BOOL);
constraint array_bool_and([aux853_BOOL,aux854_BOOL],aux129_BOOL);
constraint array_bool_and([aux855_BOOL,aux856_BOOL],aux145_BOOL);
constraint array_bool_and([aux857_BOOL,aux858_BOOL],aux155_BOOL);
constraint array_bool_and([aux859_BOOL,aux860_BOOL],aux169_BOOL);
constraint array_bool_and([aux861_BOOL,aux862_BOOL],aux119_BOOL);
constraint array_bool_and([aux863_BOOL,aux864_BOOL],aux113_BOOL);
constraint array_bool_and([aux865_BOOL,aux866_BOOL],aux151_BOOL);
constraint array_bool_and([aux867_BOOL,aux868_BOOL],aux100_BOOL);
constraint array_bool_and([aux869_BOOL,aux870_BOOL],aux131_BOOL);
constraint array_bool_and([aux871_BOOL,aux872_BOOL],aux147_BOOL);
constraint array_bool_and([aux873_BOOL,aux874_BOOL],aux105_BOOL);
constraint array_bool_and([aux875_BOOL,aux876_BOOL],aux123_BOOL);
constraint array_bool_and([aux877_BOOL,aux878_BOOL],aux178_BOOL);
constraint array_bool_and([aux879_BOOL,aux880_BOOL],aux132_BOOL);
constraint array_bool_and([aux881_BOOL,aux882_BOOL],aux184_BOOL);
constraint array_bool_and([aux883_BOOL,aux884_BOOL],aux139_BOOL);
constraint array_bool_and([aux885_BOOL,aux886_BOOL],aux141_BOOL);
constraint array_bool_and([aux887_BOOL,aux888_BOOL],aux143_BOOL);
constraint array_bool_and([aux889_BOOL,aux890_BOOL],aux154_BOOL);
constraint array_bool_and([aux891_BOOL,aux892_BOOL],aux163_BOOL);
constraint array_bool_and([aux893_BOOL,aux894_BOOL],aux148_BOOL);
constraint array_bool_and([aux895_BOOL,aux896_BOOL],aux103_BOOL);
constraint array_bool_and([aux897_BOOL,aux898_BOOL],aux107_BOOL);
constraint array_bool_and([aux899_BOOL,aux900_BOOL],aux109_BOOL);
constraint array_bool_and([aux901_BOOL,aux902_BOOL],aux173_BOOL);
constraint array_bool_and([aux903_BOOL,aux904_BOOL],aux134_BOOL);
constraint array_bool_and([aux905_BOOL,aux906_BOOL],aux164_BOOL);
constraint array_bool_and([aux907_BOOL,aux908_BOOL],aux114_BOOL);
constraint array_bool_and([aux909_BOOL,aux910_BOOL],aux124_BOOL);
constraint array_bool_and([aux911_BOOL,aux912_BOOL],aux117_BOOL);
constraint array_bool_and([aux913_BOOL,aux914_BOOL],aux167_BOOL);
constraint array_bool_and([aux915_BOOL,aux916_BOOL],aux121_BOOL);
constraint int_lin_le([-1,-1,-1,-1,1],[w_00006_00006_INTEGER,w_00003_00006_INTEGER,w_00005_00006_INTEGER,w_00001_00006_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,-1,1],[w_00006_00009_INTEGER,w_00003_00009_INTEGER,w_00005_00009_INTEGER,w_00001_00009_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,1],[w_00006_00010_INTEGER,w_00003_00010_INTEGER,w_00005_00010_INTEGER,w_00001_00010_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,1],[w_00006_00011_INTEGER,w_00003_00011_INTEGER,w_00005_00011_INTEGER,w_00001_00011_INTEGER,1],0);
constraint int_lin_le([1,1,1,-1],[aux917_INTEGER,aux918_INTEGER,w_00005_00014_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,1,1,-1],[aux919_INTEGER,aux920_INTEGER,aux921_INTEGER,aux922_INTEGER,aux923_INTEGER,w_00001_00003_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux207,w_00002_00001_INTEGER,w_00004_00001_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux208,w_00002_00005_INTEGER,w_00004_00005_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux209,w_00002_00007_INTEGER,w_00004_00007_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux210,w_00002_00012_INTEGER,w_00004_00012_INTEGER,1],0);
constraint int_lin_le([1,1,1,1,-1],[aux924_INTEGER,aux925_INTEGER,aux926_INTEGER,w_00004_00001_INTEGER,1],0);

solve :: int_search([s_00001, s_00002, s_00003, s_00004, s_00005, s_00006, s_00007, s_00008, s_00009, s_00010, s_00011, s_00012, s_00013, s_00014, w_00001_00001_INTEGER, 0, w_00001_00003_INTEGER, 0, w_00001_00005_INTEGER, w_00001_00006_INTEGER, w_00001_00007_INTEGER, w_00001_00008_INTEGER, w_00001_00009_INTEGER, w_00001_00010_INTEGER, w_00001_00011_INTEGER, w_00001_00012_INTEGER, 0, 0, w_00002_00001_INTEGER, w_00002_00002_INTEGER, 0, w_00002_00004_INTEGER, w_00002_00005_INTEGER, 0, w_00002_00007_INTEGER, 0, 0, 0, 0, w_00002_00012_INTEGER, w_00002_00013_INTEGER, w_00002_00014_INTEGER, w_00003_00001_INTEGER, w_00003_00002_INTEGER, 0, w_00003_00004_INTEGER, w_00003_00005_INTEGER, w_00003_00006_INTEGER, w_00003_00007_INTEGER, 0, w_00003_00009_INTEGER, w_00003_00010_INTEGER, w_00003_00011_INTEGER, w_00003_00012_INTEGER, w_00003_00013_INTEGER, w_00003_00014_INTEGER, w_00004_00001_INTEGER, w_00004_00002_INTEGER, 0, w_00004_00004_INTEGER, w_00004_00005_INTEGER, w_00004_00006_INTEGER, w_00004_00007_INTEGER, 0, 0, 0, w_00004_00011_INTEGER, w_00004_00012_INTEGER, w_00004_00013_INTEGER, w_00004_00014_INTEGER, w_00005_00001_INTEGER, w_00005_00002_INTEGER, w_00005_00003_INTEGER, w_00005_00004_INTEGER, w_00005_00005_INTEGER, w_00005_00006_INTEGER, w_00005_00007_INTEGER, w_00005_00008_INTEGER, w_00005_00009_INTEGER, w_00005_00010_INTEGER, w_00005_00011_INTEGER, w_00005_00012_INTEGER, w_00005_00013_INTEGER, w_00005_00014_INTEGER, w_00006_00001_INTEGER, w_00006_00002_INTEGER, w_00006_00003_INTEGER, w_00006_00004_INTEGER, w_00006_00005_INTEGER, w_00006_00006_INTEGER, w_00006_00007_INTEGER, w_00006_00008_INTEGER, w_00006_00009_INTEGER, w_00006_00010_INTEGER, w_00006_00011_INTEGER, w_00006_00012_INTEGER, 1, w_00006_00014_INTEGER, objective], input_order, indomain_min, complete)
minimize objective;
