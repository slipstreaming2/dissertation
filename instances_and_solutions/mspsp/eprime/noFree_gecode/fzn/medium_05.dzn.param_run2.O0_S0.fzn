predicate gecode_global_cardinality(array[int] of var int: x, array[int] of int: cover, array[int] of var int: counts);
array [1..12] of int: aux1 = [1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2];
array [1..20] of int: aux0 = [1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0];
array [1..13] of int: aux3 = [1, 1, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1];
array [1..20] of int: aux2 = [1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0];
array [1..20] of int: d = [1, 2, 3, 2, 2, 3, 2, 1, 2, 1, 2, 2, 1, 4, 2, 3, 1, 3, 2, 3];
array [1..5] of int: rc = [3, 3, 4, 3, 3];
array [1..13] of int: aux9 = [1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2, 2];
array [1..20] of int: aux8 = [1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1];
array [1..14] of int: aux5 = [1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 1];
array [1..20] of int: aux4 = [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0];
array [1..11] of int: aux7 = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
array [1..20] of int: aux6 = [1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1];
var 0..42: s_00001:: output_var ;
var 0..42: s_00002:: output_var ;
var 0..42: s_00003:: output_var ;
var 0..42: s_00004:: output_var ;
var 0..42: s_00005:: output_var ;
var 0..42: s_00006:: output_var ;
var 0..42: s_00007:: output_var ;
var 0..42: s_00008:: output_var ;
var 0..42: s_00009:: output_var ;
var 0..42: s_00010:: output_var ;
var 0..42: s_00011:: output_var ;
var 0..42: s_00012:: output_var ;
var 0..42: s_00013:: output_var ;
var 0..42: s_00014:: output_var ;
var 0..42: s_00015:: output_var ;
var 0..42: s_00016:: output_var ;
var 0..42: s_00017:: output_var ;
var 0..42: s_00018:: output_var ;
var 0..42: s_00019:: output_var ;
var 0..42: s_00020:: output_var ;
var bool: w_00001_00001_BOOL;
var {0,1}: w_00001_00001_INTEGER :: output_var ;
var bool: w_00001_00002_BOOL;
var {0,1}: w_00001_00002_INTEGER :: output_var ;
var bool: w_00001_00003_BOOL;
var {0,1}: w_00001_00003_INTEGER :: output_var ;
var bool: w_00001_00004_BOOL;
var {0,1}: w_00001_00004_INTEGER :: output_var ;
var bool: w_00001_00005_BOOL;
var {0,1}: w_00001_00005_INTEGER :: output_var ;
var bool: w_00001_00006_BOOL;
var {0,1}: w_00001_00006_INTEGER :: output_var ;
var bool: w_00001_00007_BOOL;
var {0,1}: w_00001_00007_INTEGER :: output_var ;
var bool: w_00001_00008_BOOL;
var {0,1}: w_00001_00008_INTEGER :: output_var ;
var bool: w_00001_00009_BOOL;
var {0,1}: w_00001_00009_INTEGER :: output_var ;
var bool: w_00001_00010_BOOL;
var {0,1}: w_00001_00010_INTEGER :: output_var ;
var bool: w_00001_00011_BOOL;
var {0,1}: w_00001_00011_INTEGER :: output_var ;
var bool: w_00001_00012_BOOL;
var {0,1}: w_00001_00012_INTEGER :: output_var ;
var bool: w_00001_00013_BOOL;
var {0,1}: w_00001_00013_INTEGER :: output_var ;
var bool: w_00001_00014_BOOL;
var {0,1}: w_00001_00014_INTEGER :: output_var ;
var bool: w_00001_00015_BOOL;
var {0,1}: w_00001_00015_INTEGER :: output_var ;
var bool: w_00001_00016_BOOL;
var {0,1}: w_00001_00016_INTEGER :: output_var ;
var bool: w_00001_00017_BOOL;
var {0,1}: w_00001_00017_INTEGER :: output_var ;
var bool: w_00001_00018_BOOL;
var {0,1}: w_00001_00018_INTEGER :: output_var ;
var bool: w_00001_00019_BOOL;
var {0,1}: w_00001_00019_INTEGER :: output_var ;
var bool: w_00001_00020_BOOL;
var {0,1}: w_00001_00020_INTEGER :: output_var ;
var bool: w_00002_00001_BOOL;
var {0,1}: w_00002_00001_INTEGER :: output_var ;
var bool: w_00002_00002_BOOL;
var {0,1}: w_00002_00002_INTEGER :: output_var ;
var bool: w_00002_00003_BOOL;
var {0,1}: w_00002_00003_INTEGER :: output_var ;
var bool: w_00002_00004_BOOL;
var {0,1}: w_00002_00004_INTEGER :: output_var ;
var bool: w_00002_00005_BOOL;
var {0,1}: w_00002_00005_INTEGER :: output_var ;
var bool: w_00002_00006_BOOL;
var {0,1}: w_00002_00006_INTEGER :: output_var ;
var bool: w_00002_00007_BOOL;
var {0,1}: w_00002_00007_INTEGER :: output_var ;
var bool: w_00002_00008_BOOL;
var {0,1}: w_00002_00008_INTEGER :: output_var ;
var bool: w_00002_00009_BOOL;
var {0,1}: w_00002_00009_INTEGER :: output_var ;
var bool: w_00002_00010_BOOL;
var {0,1}: w_00002_00010_INTEGER :: output_var ;
var bool: w_00002_00011_BOOL;
var {0,1}: w_00002_00011_INTEGER :: output_var ;
var bool: w_00002_00012_BOOL;
var {0,1}: w_00002_00012_INTEGER :: output_var ;
var bool: w_00002_00013_BOOL;
var {0,1}: w_00002_00013_INTEGER :: output_var ;
var bool: w_00002_00014_BOOL;
var {0,1}: w_00002_00014_INTEGER :: output_var ;
var bool: w_00002_00015_BOOL;
var {0,1}: w_00002_00015_INTEGER :: output_var ;
var bool: w_00002_00016_BOOL;
var {0,1}: w_00002_00016_INTEGER :: output_var ;
var bool: w_00002_00017_BOOL;
var {0,1}: w_00002_00017_INTEGER :: output_var ;
var bool: w_00002_00018_BOOL;
var {0,1}: w_00002_00018_INTEGER :: output_var ;
var bool: w_00002_00019_BOOL;
var {0,1}: w_00002_00019_INTEGER :: output_var ;
var bool: w_00002_00020_BOOL;
var {0,1}: w_00002_00020_INTEGER :: output_var ;
var bool: w_00003_00001_BOOL;
var {0,1}: w_00003_00001_INTEGER :: output_var ;
var bool: w_00003_00002_BOOL;
var {0,1}: w_00003_00002_INTEGER :: output_var ;
var bool: w_00003_00003_BOOL;
var {0,1}: w_00003_00003_INTEGER :: output_var ;
var bool: w_00003_00004_BOOL;
var {0,1}: w_00003_00004_INTEGER :: output_var ;
var bool: w_00003_00005_BOOL;
var {0,1}: w_00003_00005_INTEGER :: output_var ;
var bool: w_00003_00006_BOOL;
var {0,1}: w_00003_00006_INTEGER :: output_var ;
var bool: w_00003_00007_BOOL;
var {0,1}: w_00003_00007_INTEGER :: output_var ;
var bool: w_00003_00008_BOOL;
var {0,1}: w_00003_00008_INTEGER :: output_var ;
var bool: w_00003_00009_BOOL;
var {0,1}: w_00003_00009_INTEGER :: output_var ;
var bool: w_00003_00010_BOOL;
var {0,1}: w_00003_00010_INTEGER :: output_var ;
var bool: w_00003_00011_BOOL;
var {0,1}: w_00003_00011_INTEGER :: output_var ;
var bool: w_00003_00012_BOOL;
var {0,1}: w_00003_00012_INTEGER :: output_var ;
var bool: w_00003_00013_BOOL;
var {0,1}: w_00003_00013_INTEGER :: output_var ;
var bool: w_00003_00014_BOOL;
var {0,1}: w_00003_00014_INTEGER :: output_var ;
var bool: w_00003_00015_BOOL;
var {0,1}: w_00003_00015_INTEGER :: output_var ;
var bool: w_00003_00016_BOOL;
var {0,1}: w_00003_00016_INTEGER :: output_var ;
var bool: w_00003_00017_BOOL;
var {0,1}: w_00003_00017_INTEGER :: output_var ;
var bool: w_00003_00018_BOOL;
var {0,1}: w_00003_00018_INTEGER :: output_var ;
var bool: w_00003_00019_BOOL;
var {0,1}: w_00003_00019_INTEGER :: output_var ;
var bool: w_00003_00020_BOOL;
var {0,1}: w_00003_00020_INTEGER :: output_var ;
var bool: w_00004_00001_BOOL;
var {0,1}: w_00004_00001_INTEGER :: output_var ;
var bool: w_00004_00002_BOOL;
var {0,1}: w_00004_00002_INTEGER :: output_var ;
var bool: w_00004_00003_BOOL;
var {0,1}: w_00004_00003_INTEGER :: output_var ;
var bool: w_00004_00004_BOOL;
var {0,1}: w_00004_00004_INTEGER :: output_var ;
var bool: w_00004_00005_BOOL;
var {0,1}: w_00004_00005_INTEGER :: output_var ;
var bool: w_00004_00006_BOOL;
var {0,1}: w_00004_00006_INTEGER :: output_var ;
var bool: w_00004_00007_BOOL;
var {0,1}: w_00004_00007_INTEGER :: output_var ;
var bool: w_00004_00008_BOOL;
var {0,1}: w_00004_00008_INTEGER :: output_var ;
var bool: w_00004_00009_BOOL;
var {0,1}: w_00004_00009_INTEGER :: output_var ;
var bool: w_00004_00010_BOOL;
var {0,1}: w_00004_00010_INTEGER :: output_var ;
var bool: w_00004_00011_BOOL;
var {0,1}: w_00004_00011_INTEGER :: output_var ;
var bool: w_00004_00012_BOOL;
var {0,1}: w_00004_00012_INTEGER :: output_var ;
var bool: w_00004_00013_BOOL;
var {0,1}: w_00004_00013_INTEGER :: output_var ;
var bool: w_00004_00014_BOOL;
var {0,1}: w_00004_00014_INTEGER :: output_var ;
var bool: w_00004_00015_BOOL;
var {0,1}: w_00004_00015_INTEGER :: output_var ;
var bool: w_00004_00016_BOOL;
var {0,1}: w_00004_00016_INTEGER :: output_var ;
var bool: w_00004_00017_BOOL;
var {0,1}: w_00004_00017_INTEGER :: output_var ;
var bool: w_00004_00018_BOOL;
var {0,1}: w_00004_00018_INTEGER :: output_var ;
var bool: w_00004_00019_BOOL;
var {0,1}: w_00004_00019_INTEGER :: output_var ;
var bool: w_00004_00020_BOOL;
var {0,1}: w_00004_00020_INTEGER :: output_var ;
var bool: w_00005_00001_BOOL;
var {0,1}: w_00005_00001_INTEGER :: output_var ;
var bool: w_00005_00002_BOOL;
var {0,1}: w_00005_00002_INTEGER :: output_var ;
var bool: w_00005_00003_BOOL;
var {0,1}: w_00005_00003_INTEGER :: output_var ;
var bool: w_00005_00004_BOOL;
var {0,1}: w_00005_00004_INTEGER :: output_var ;
var bool: w_00005_00005_BOOL;
var {0,1}: w_00005_00005_INTEGER :: output_var ;
var bool: w_00005_00006_BOOL;
var {0,1}: w_00005_00006_INTEGER :: output_var ;
var bool: w_00005_00007_BOOL;
var {0,1}: w_00005_00007_INTEGER :: output_var ;
var bool: w_00005_00008_BOOL;
var {0,1}: w_00005_00008_INTEGER :: output_var ;
var bool: w_00005_00009_BOOL;
var {0,1}: w_00005_00009_INTEGER :: output_var ;
var bool: w_00005_00010_BOOL;
var {0,1}: w_00005_00010_INTEGER :: output_var ;
var bool: w_00005_00011_BOOL;
var {0,1}: w_00005_00011_INTEGER :: output_var ;
var bool: w_00005_00012_BOOL;
var {0,1}: w_00005_00012_INTEGER :: output_var ;
var bool: w_00005_00013_BOOL;
var {0,1}: w_00005_00013_INTEGER :: output_var ;
var bool: w_00005_00014_BOOL;
var {0,1}: w_00005_00014_INTEGER :: output_var ;
var bool: w_00005_00015_BOOL;
var {0,1}: w_00005_00015_INTEGER :: output_var ;
var bool: w_00005_00016_BOOL;
var {0,1}: w_00005_00016_INTEGER :: output_var ;
var bool: w_00005_00017_BOOL;
var {0,1}: w_00005_00017_INTEGER :: output_var ;
var bool: w_00005_00018_BOOL;
var {0,1}: w_00005_00018_INTEGER :: output_var ;
var bool: w_00005_00019_BOOL;
var {0,1}: w_00005_00019_INTEGER :: output_var ;
var bool: w_00005_00020_BOOL;
var {0,1}: w_00005_00020_INTEGER :: output_var ;
var bool: w_00006_00001_BOOL;
var {0,1}: w_00006_00001_INTEGER :: output_var ;
var bool: w_00006_00002_BOOL;
var {0,1}: w_00006_00002_INTEGER :: output_var ;
var bool: w_00006_00003_BOOL;
var {0,1}: w_00006_00003_INTEGER :: output_var ;
var bool: w_00006_00004_BOOL;
var {0,1}: w_00006_00004_INTEGER :: output_var ;
var bool: w_00006_00005_BOOL;
var {0,1}: w_00006_00005_INTEGER :: output_var ;
var bool: w_00006_00006_BOOL;
var {0,1}: w_00006_00006_INTEGER :: output_var ;
var bool: w_00006_00007_BOOL;
var {0,1}: w_00006_00007_INTEGER :: output_var ;
var bool: w_00006_00008_BOOL;
var {0,1}: w_00006_00008_INTEGER :: output_var ;
var bool: w_00006_00009_BOOL;
var {0,1}: w_00006_00009_INTEGER :: output_var ;
var bool: w_00006_00010_BOOL;
var {0,1}: w_00006_00010_INTEGER :: output_var ;
var bool: w_00006_00011_BOOL;
var {0,1}: w_00006_00011_INTEGER :: output_var ;
var bool: w_00006_00012_BOOL;
var {0,1}: w_00006_00012_INTEGER :: output_var ;
var bool: w_00006_00013_BOOL;
var {0,1}: w_00006_00013_INTEGER :: output_var ;
var bool: w_00006_00014_BOOL;
var {0,1}: w_00006_00014_INTEGER :: output_var ;
var bool: w_00006_00015_BOOL;
var {0,1}: w_00006_00015_INTEGER :: output_var ;
var bool: w_00006_00016_BOOL;
var {0,1}: w_00006_00016_INTEGER :: output_var ;
var bool: w_00006_00017_BOOL;
var {0,1}: w_00006_00017_INTEGER :: output_var ;
var bool: w_00006_00018_BOOL;
var {0,1}: w_00006_00018_INTEGER :: output_var ;
var bool: w_00006_00019_BOOL;
var {0,1}: w_00006_00019_INTEGER :: output_var ;
var bool: w_00006_00020_BOOL;
var {0,1}: w_00006_00020_INTEGER :: output_var ;
var bool: w_00007_00001_BOOL;
var {0,1}: w_00007_00001_INTEGER :: output_var ;
var bool: w_00007_00002_BOOL;
var {0,1}: w_00007_00002_INTEGER :: output_var ;
var bool: w_00007_00003_BOOL;
var {0,1}: w_00007_00003_INTEGER :: output_var ;
var bool: w_00007_00004_BOOL;
var {0,1}: w_00007_00004_INTEGER :: output_var ;
var bool: w_00007_00005_BOOL;
var {0,1}: w_00007_00005_INTEGER :: output_var ;
var bool: w_00007_00006_BOOL;
var {0,1}: w_00007_00006_INTEGER :: output_var ;
var bool: w_00007_00007_BOOL;
var {0,1}: w_00007_00007_INTEGER :: output_var ;
var bool: w_00007_00008_BOOL;
var {0,1}: w_00007_00008_INTEGER :: output_var ;
var bool: w_00007_00009_BOOL;
var {0,1}: w_00007_00009_INTEGER :: output_var ;
var bool: w_00007_00010_BOOL;
var {0,1}: w_00007_00010_INTEGER :: output_var ;
var bool: w_00007_00011_BOOL;
var {0,1}: w_00007_00011_INTEGER :: output_var ;
var bool: w_00007_00012_BOOL;
var {0,1}: w_00007_00012_INTEGER :: output_var ;
var bool: w_00007_00013_BOOL;
var {0,1}: w_00007_00013_INTEGER :: output_var ;
var bool: w_00007_00014_BOOL;
var {0,1}: w_00007_00014_INTEGER :: output_var ;
var bool: w_00007_00015_BOOL;
var {0,1}: w_00007_00015_INTEGER :: output_var ;
var bool: w_00007_00016_BOOL;
var {0,1}: w_00007_00016_INTEGER :: output_var ;
var bool: w_00007_00017_BOOL;
var {0,1}: w_00007_00017_INTEGER :: output_var ;
var bool: w_00007_00018_BOOL;
var {0,1}: w_00007_00018_INTEGER :: output_var ;
var bool: w_00007_00019_BOOL;
var {0,1}: w_00007_00019_INTEGER :: output_var ;
var bool: w_00007_00020_BOOL;
var {0,1}: w_00007_00020_INTEGER :: output_var ;
var bool: w_00008_00001_BOOL;
var {0,1}: w_00008_00001_INTEGER :: output_var ;
var bool: w_00008_00002_BOOL;
var {0,1}: w_00008_00002_INTEGER :: output_var ;
var bool: w_00008_00003_BOOL;
var {0,1}: w_00008_00003_INTEGER :: output_var ;
var bool: w_00008_00004_BOOL;
var {0,1}: w_00008_00004_INTEGER :: output_var ;
var bool: w_00008_00005_BOOL;
var {0,1}: w_00008_00005_INTEGER :: output_var ;
var bool: w_00008_00006_BOOL;
var {0,1}: w_00008_00006_INTEGER :: output_var ;
var bool: w_00008_00007_BOOL;
var {0,1}: w_00008_00007_INTEGER :: output_var ;
var bool: w_00008_00008_BOOL;
var {0,1}: w_00008_00008_INTEGER :: output_var ;
var bool: w_00008_00009_BOOL;
var {0,1}: w_00008_00009_INTEGER :: output_var ;
var bool: w_00008_00010_BOOL;
var {0,1}: w_00008_00010_INTEGER :: output_var ;
var bool: w_00008_00011_BOOL;
var {0,1}: w_00008_00011_INTEGER :: output_var ;
var bool: w_00008_00012_BOOL;
var {0,1}: w_00008_00012_INTEGER :: output_var ;
var bool: w_00008_00013_BOOL;
var {0,1}: w_00008_00013_INTEGER :: output_var ;
var bool: w_00008_00014_BOOL;
var {0,1}: w_00008_00014_INTEGER :: output_var ;
var bool: w_00008_00015_BOOL;
var {0,1}: w_00008_00015_INTEGER :: output_var ;
var bool: w_00008_00016_BOOL;
var {0,1}: w_00008_00016_INTEGER :: output_var ;
var bool: w_00008_00017_BOOL;
var {0,1}: w_00008_00017_INTEGER :: output_var ;
var bool: w_00008_00018_BOOL;
var {0,1}: w_00008_00018_INTEGER :: output_var ;
var bool: w_00008_00019_BOOL;
var {0,1}: w_00008_00019_INTEGER :: output_var ;
var bool: w_00008_00020_BOOL;
var {0,1}: w_00008_00020_INTEGER :: output_var ;
var 0..42: objective:: output_var ;
var {0,1}: TWorkers_00001_00001_INTEGER :: output_var ;
var {0,1}: TWorkers_00001_00002_INTEGER :: output_var ;
var {0,1}: TWorkers_00001_00003_INTEGER :: output_var ;
var {0,1}: TWorkers_00001_00004_INTEGER :: output_var ;
var {0,1}: TWorkers_00001_00005_INTEGER :: output_var ;
var {0,1}: TWorkers_00001_00006_INTEGER :: output_var ;
var {0,1}: TWorkers_00001_00007_INTEGER :: output_var ;
var {0,1}: TWorkers_00001_00008_INTEGER :: output_var ;
var {0,1}: TWorkers_00001_00009_INTEGER :: output_var ;
var {0,1}: TWorkers_00001_00010_INTEGER :: output_var ;
var {0,1}: TWorkers_00001_00011_INTEGER :: output_var ;
var {0,1}: TWorkers_00001_00012_INTEGER :: output_var ;
var {0,1}: TWorkers_00001_00013_INTEGER :: output_var ;
var {0,1}: TWorkers_00001_00014_INTEGER :: output_var ;
var {0,1}: TWorkers_00001_00015_INTEGER :: output_var ;
var {0,1}: TWorkers_00001_00016_INTEGER :: output_var ;
var {0,1}: TWorkers_00001_00017_INTEGER :: output_var ;
var {0,1}: TWorkers_00001_00018_INTEGER :: output_var ;
var {0,1}: TWorkers_00001_00019_INTEGER :: output_var ;
var {0,1}: TWorkers_00001_00020_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00001_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00002_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00003_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00004_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00005_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00006_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00007_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00008_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00009_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00010_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00011_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00012_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00013_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00014_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00015_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00016_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00017_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00018_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00019_INTEGER :: output_var ;
var {0,1}: TWorkers_00002_00020_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00001_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00002_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00003_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00004_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00005_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00006_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00007_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00008_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00009_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00010_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00011_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00012_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00013_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00014_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00015_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00016_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00017_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00018_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00019_INTEGER :: output_var ;
var {0,1}: TWorkers_00003_00020_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00001_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00002_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00003_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00004_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00005_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00006_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00007_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00008_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00009_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00010_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00011_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00012_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00013_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00014_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00015_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00016_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00017_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00018_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00019_INTEGER :: output_var ;
var {0,1}: TWorkers_00004_00020_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00001_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00002_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00003_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00004_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00005_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00006_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00007_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00008_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00009_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00010_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00011_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00012_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00013_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00014_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00015_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00016_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00017_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00018_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00019_INTEGER :: output_var ;
var {0,1}: TWorkers_00005_00020_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00001_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00002_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00003_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00004_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00005_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00006_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00007_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00008_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00009_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00010_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00011_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00012_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00013_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00014_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00015_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00016_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00017_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00018_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00019_INTEGER :: output_var ;
var {0,1}: TWorkers_00006_00020_INTEGER :: output_var ;
var {0,1}: TWorkers_00007_00001_INTEGER :: output_var ;
var {0,1}: TWorkers_00007_00002_INTEGER :: output_var ;
var {0,1}: TWorkers_00007_00003_INTEGER :: output_var ;
var {0,1}: TWorkers_00007_00004_INTEGER :: output_var ;
var {0,1}: TWorkers_00007_00005_INTEGER :: output_var ;
var {0,1}: TWorkers_00007_00006_INTEGER :: output_var ;
var {0,1}: TWorkers_00007_00007_INTEGER :: output_var ;
var {0,1}: TWorkers_00007_00008_INTEGER :: output_var ;
var {0,1}: TWorkers_00007_00009_INTEGER :: output_var ;
var {0,1}: TWorkers_00007_00010_INTEGER :: output_var ;
var {0,1}: TWorkers_00007_00011_INTEGER :: output_var ;
var {0,1}: TWorkers_00007_00012_INTEGER :: output_var ;
var {0,1}: TWorkers_00007_00013_INTEGER :: output_var ;
var {0,1}: TWorkers_00007_00014_INTEGER :: output_var ;
var {0,1}: TWorkers_00007_00015_INTEGER :: output_var ;
var {0,1}: TWorkers_00007_00016_INTEGER :: output_var ;
var {0,1}: TWorkers_00007_00017_INTEGER :: output_var ;
var {0,1}: TWorkers_00007_00018_INTEGER :: output_var ;
var {0,1}: TWorkers_00007_00019_INTEGER :: output_var ;
var {0,1}: TWorkers_00007_00020_INTEGER :: output_var ;
var {0,1}: TWorkers_00008_00001_INTEGER :: output_var ;
var {0,1}: TWorkers_00008_00002_INTEGER :: output_var ;
var {0,1}: TWorkers_00008_00003_INTEGER :: output_var ;
var {0,1}: TWorkers_00008_00004_INTEGER :: output_var ;
var {0,1}: TWorkers_00008_00005_INTEGER :: output_var ;
var {0,1}: TWorkers_00008_00006_INTEGER :: output_var ;
var {0,1}: TWorkers_00008_00007_INTEGER :: output_var ;
var {0,1}: TWorkers_00008_00008_INTEGER :: output_var ;
var {0,1}: TWorkers_00008_00009_INTEGER :: output_var ;
var {0,1}: TWorkers_00008_00010_INTEGER :: output_var ;
var {0,1}: TWorkers_00008_00011_INTEGER :: output_var ;
var {0,1}: TWorkers_00008_00012_INTEGER :: output_var ;
var {0,1}: TWorkers_00008_00013_INTEGER :: output_var ;
var {0,1}: TWorkers_00008_00014_INTEGER :: output_var ;
var {0,1}: TWorkers_00008_00015_INTEGER :: output_var ;
var {0,1}: TWorkers_00008_00016_INTEGER :: output_var ;
var {0,1}: TWorkers_00008_00017_INTEGER :: output_var ;
var {0,1}: TWorkers_00008_00018_INTEGER :: output_var ;
var {0,1}: TWorkers_00008_00019_INTEGER :: output_var ;
var {0,1}: TWorkers_00008_00020_INTEGER :: output_var ;
var bool: aux10_BOOL:: var_is_introduced ;
var bool: aux11_BOOL:: var_is_introduced ;
var {0,1}: aux11_INTEGER :: var_is_introduced ;
var bool: aux12_BOOL:: var_is_introduced ;
var bool: aux13_BOOL:: var_is_introduced ;
var {0,1}: aux13_INTEGER :: var_is_introduced ;
var bool: aux14_BOOL:: var_is_introduced ;
var bool: aux15_BOOL:: var_is_introduced ;
var {0,1}: aux15_INTEGER :: var_is_introduced ;
var bool: aux16_BOOL:: var_is_introduced ;
var bool: aux17_BOOL:: var_is_introduced ;
var {0,1}: aux17_INTEGER :: var_is_introduced ;
var bool: aux18_BOOL:: var_is_introduced ;
var bool: aux19_BOOL:: var_is_introduced ;
var {0,1}: aux19_INTEGER :: var_is_introduced ;
var bool: aux20_BOOL:: var_is_introduced ;
var bool: aux21_BOOL:: var_is_introduced ;
var {0,1}: aux21_INTEGER :: var_is_introduced ;
var bool: aux22_BOOL:: var_is_introduced ;
var bool: aux23_BOOL:: var_is_introduced ;
var {0,1}: aux23_INTEGER :: var_is_introduced ;
var bool: aux24_BOOL:: var_is_introduced ;
var bool: aux25_BOOL:: var_is_introduced ;
var {0,1}: aux25_INTEGER :: var_is_introduced ;
var bool: aux26_BOOL:: var_is_introduced ;
var bool: aux27_BOOL:: var_is_introduced ;
var {0,1}: aux27_INTEGER :: var_is_introduced ;
var bool: aux28_BOOL:: var_is_introduced ;
var bool: aux29_BOOL:: var_is_introduced ;
var {0,1}: aux29_INTEGER :: var_is_introduced ;
var bool: aux30_BOOL:: var_is_introduced ;
var bool: aux31_BOOL:: var_is_introduced ;
var {0,1}: aux31_INTEGER :: var_is_introduced ;
var bool: aux32_BOOL:: var_is_introduced ;
var bool: aux33_BOOL:: var_is_introduced ;
var {0,1}: aux33_INTEGER :: var_is_introduced ;
var bool: aux34_BOOL:: var_is_introduced ;
var bool: aux35_BOOL:: var_is_introduced ;
var {0,1}: aux35_INTEGER :: var_is_introduced ;
var bool: aux36_BOOL:: var_is_introduced ;
var bool: aux37_BOOL:: var_is_introduced ;
var {0,1}: aux37_INTEGER :: var_is_introduced ;
var bool: aux38_BOOL:: var_is_introduced ;
var bool: aux39_BOOL:: var_is_introduced ;
var {0,1}: aux39_INTEGER :: var_is_introduced ;
var bool: aux40_BOOL:: var_is_introduced ;
var bool: aux41_BOOL:: var_is_introduced ;
var {0,1}: aux41_INTEGER :: var_is_introduced ;
var bool: aux42_BOOL:: var_is_introduced ;
var bool: aux43_BOOL:: var_is_introduced ;
var {0,1}: aux43_INTEGER :: var_is_introduced ;
var bool: aux44_BOOL:: var_is_introduced ;
var bool: aux45_BOOL:: var_is_introduced ;
var {0,1}: aux45_INTEGER :: var_is_introduced ;
var bool: aux46_BOOL:: var_is_introduced ;
var bool: aux47_BOOL:: var_is_introduced ;
var {0,1}: aux47_INTEGER :: var_is_introduced ;
var bool: aux48_BOOL:: var_is_introduced ;
var bool: aux49_BOOL:: var_is_introduced ;
var {0,1}: aux49_INTEGER :: var_is_introduced ;
var bool: aux50_BOOL:: var_is_introduced ;
var bool: aux51_BOOL:: var_is_introduced ;
var {0,1}: aux51_INTEGER :: var_is_introduced ;
var bool: aux52_BOOL:: var_is_introduced ;
var bool: aux53_BOOL:: var_is_introduced ;
var {0,1}: aux53_INTEGER :: var_is_introduced ;
var bool: aux54_BOOL:: var_is_introduced ;
var bool: aux55_BOOL:: var_is_introduced ;
var {0,1}: aux55_INTEGER :: var_is_introduced ;
var bool: aux56_BOOL:: var_is_introduced ;
var bool: aux57_BOOL:: var_is_introduced ;
var {0,1}: aux57_INTEGER :: var_is_introduced ;
var bool: aux58_BOOL:: var_is_introduced ;
var bool: aux59_BOOL:: var_is_introduced ;
var {0,1}: aux59_INTEGER :: var_is_introduced ;
var bool: aux60_BOOL:: var_is_introduced ;
var bool: aux61_BOOL:: var_is_introduced ;
var {0,1}: aux61_INTEGER :: var_is_introduced ;
var bool: aux62_BOOL:: var_is_introduced ;
var bool: aux63_BOOL:: var_is_introduced ;
var {0,1}: aux63_INTEGER :: var_is_introduced ;
var bool: aux64_BOOL:: var_is_introduced ;
var bool: aux65_BOOL:: var_is_introduced ;
var {0,1}: aux65_INTEGER :: var_is_introduced ;
var bool: aux66_BOOL:: var_is_introduced ;
var bool: aux67_BOOL:: var_is_introduced ;
var {0,1}: aux67_INTEGER :: var_is_introduced ;
var bool: aux68_BOOL:: var_is_introduced ;
var bool: aux69_BOOL:: var_is_introduced ;
var {0,1}: aux69_INTEGER :: var_is_introduced ;
var bool: aux70_BOOL:: var_is_introduced ;
var bool: aux71_BOOL:: var_is_introduced ;
var {0,1}: aux71_INTEGER :: var_is_introduced ;
var bool: aux72_BOOL:: var_is_introduced ;
var bool: aux73_BOOL:: var_is_introduced ;
var {0,1}: aux73_INTEGER :: var_is_introduced ;
var bool: aux74_BOOL:: var_is_introduced ;
var bool: aux75_BOOL:: var_is_introduced ;
var {0,1}: aux75_INTEGER :: var_is_introduced ;
var bool: aux76_BOOL:: var_is_introduced ;
var bool: aux77_BOOL:: var_is_introduced ;
var {0,1}: aux77_INTEGER :: var_is_introduced ;
var bool: aux78_BOOL:: var_is_introduced ;
var bool: aux79_BOOL:: var_is_introduced ;
var {0,1}: aux79_INTEGER :: var_is_introduced ;
var bool: aux80_BOOL:: var_is_introduced ;
var bool: aux81_BOOL:: var_is_introduced ;
var {0,1}: aux81_INTEGER :: var_is_introduced ;
var bool: aux82_BOOL:: var_is_introduced ;
var bool: aux83_BOOL:: var_is_introduced ;
var {0,1}: aux83_INTEGER :: var_is_introduced ;
var bool: aux84_BOOL:: var_is_introduced ;
var bool: aux85_BOOL:: var_is_introduced ;
var {0,1}: aux85_INTEGER :: var_is_introduced ;
var bool: aux86_BOOL:: var_is_introduced ;
var bool: aux87_BOOL:: var_is_introduced ;
var {0,1}: aux87_INTEGER :: var_is_introduced ;
var bool: aux88_BOOL:: var_is_introduced ;
var bool: aux89_BOOL:: var_is_introduced ;
var {0,1}: aux89_INTEGER :: var_is_introduced ;
var bool: aux90_BOOL:: var_is_introduced ;
var bool: aux91_BOOL:: var_is_introduced ;
var {0,1}: aux91_INTEGER :: var_is_introduced ;
var bool: aux92_BOOL:: var_is_introduced ;
var bool: aux93_BOOL:: var_is_introduced ;
var {0,1}: aux93_INTEGER :: var_is_introduced ;
var bool: aux94_BOOL:: var_is_introduced ;
var bool: aux95_BOOL:: var_is_introduced ;
var {0,1}: aux95_INTEGER :: var_is_introduced ;
var bool: aux96_BOOL:: var_is_introduced ;
var bool: aux97_BOOL:: var_is_introduced ;
var {0,1}: aux97_INTEGER :: var_is_introduced ;
var bool: aux98_BOOL:: var_is_introduced ;
var bool: aux99_BOOL:: var_is_introduced ;
var {0,1}: aux99_INTEGER :: var_is_introduced ;
var bool: aux100_BOOL:: var_is_introduced ;
var bool: aux101_BOOL:: var_is_introduced ;
var {0,1}: aux101_INTEGER :: var_is_introduced ;
var bool: aux102_BOOL:: var_is_introduced ;
var bool: aux103_BOOL:: var_is_introduced ;
var {0,1}: aux103_INTEGER :: var_is_introduced ;
var bool: aux104_BOOL:: var_is_introduced ;
var bool: aux105_BOOL:: var_is_introduced ;
var {0,1}: aux105_INTEGER :: var_is_introduced ;
var bool: aux106_BOOL:: var_is_introduced ;
var bool: aux107_BOOL:: var_is_introduced ;
var {0,1}: aux107_INTEGER :: var_is_introduced ;
var bool: aux108_BOOL:: var_is_introduced ;
var bool: aux109_BOOL:: var_is_introduced ;
var {0,1}: aux109_INTEGER :: var_is_introduced ;
var bool: aux110_BOOL:: var_is_introduced ;
var bool: aux111_BOOL:: var_is_introduced ;
var {0,1}: aux111_INTEGER :: var_is_introduced ;
var bool: aux112_BOOL:: var_is_introduced ;
var bool: aux113_BOOL:: var_is_introduced ;
var {0,1}: aux113_INTEGER :: var_is_introduced ;
var bool: aux114_BOOL:: var_is_introduced ;
var bool: aux115_BOOL:: var_is_introduced ;
var {0,1}: aux115_INTEGER :: var_is_introduced ;
var bool: aux116_BOOL:: var_is_introduced ;
var bool: aux117_BOOL:: var_is_introduced ;
var {0,1}: aux117_INTEGER :: var_is_introduced ;
var bool: aux118_BOOL:: var_is_introduced ;
var bool: aux119_BOOL:: var_is_introduced ;
var {0,1}: aux119_INTEGER :: var_is_introduced ;
var bool: aux120_BOOL:: var_is_introduced ;
var bool: aux121_BOOL:: var_is_introduced ;
var {0,1}: aux121_INTEGER :: var_is_introduced ;
var bool: aux122_BOOL:: var_is_introduced ;
var bool: aux123_BOOL:: var_is_introduced ;
var {0,1}: aux123_INTEGER :: var_is_introduced ;
var bool: aux124_BOOL:: var_is_introduced ;
var bool: aux125_BOOL:: var_is_introduced ;
var {0,1}: aux125_INTEGER :: var_is_introduced ;
var bool: aux126_BOOL:: var_is_introduced ;
var bool: aux127_BOOL:: var_is_introduced ;
var {0,1}: aux127_INTEGER :: var_is_introduced ;
var bool: aux128_BOOL:: var_is_introduced ;
var bool: aux129_BOOL:: var_is_introduced ;
var {0,1}: aux129_INTEGER :: var_is_introduced ;
var bool: aux130_BOOL:: var_is_introduced ;
var bool: aux131_BOOL:: var_is_introduced ;
var {0,1}: aux131_INTEGER :: var_is_introduced ;
var bool: aux132_BOOL:: var_is_introduced ;
var bool: aux133_BOOL:: var_is_introduced ;
var {0,1}: aux133_INTEGER :: var_is_introduced ;
var bool: aux134_BOOL:: var_is_introduced ;
var bool: aux135_BOOL:: var_is_introduced ;
var {0,1}: aux135_INTEGER :: var_is_introduced ;
var bool: aux136_BOOL:: var_is_introduced ;
var bool: aux137_BOOL:: var_is_introduced ;
var {0,1}: aux137_INTEGER :: var_is_introduced ;
var bool: aux138_BOOL:: var_is_introduced ;
var bool: aux139_BOOL:: var_is_introduced ;
var {0,1}: aux139_INTEGER :: var_is_introduced ;
var bool: aux140_BOOL:: var_is_introduced ;
var bool: aux141_BOOL:: var_is_introduced ;
var {0,1}: aux141_INTEGER :: var_is_introduced ;
var bool: aux142_BOOL:: var_is_introduced ;
var bool: aux143_BOOL:: var_is_introduced ;
var {0,1}: aux143_INTEGER :: var_is_introduced ;
var bool: aux144_BOOL:: var_is_introduced ;
var bool: aux145_BOOL:: var_is_introduced ;
var {0,1}: aux145_INTEGER :: var_is_introduced ;
var bool: aux146_BOOL:: var_is_introduced ;
var bool: aux147_BOOL:: var_is_introduced ;
var {0,1}: aux147_INTEGER :: var_is_introduced ;
var bool: aux148_BOOL:: var_is_introduced ;
var bool: aux149_BOOL:: var_is_introduced ;
var {0,1}: aux149_INTEGER :: var_is_introduced ;
var bool: aux150_BOOL:: var_is_introduced ;
var bool: aux151_BOOL:: var_is_introduced ;
var {0,1}: aux151_INTEGER :: var_is_introduced ;
var bool: aux152_BOOL:: var_is_introduced ;
var bool: aux153_BOOL:: var_is_introduced ;
var {0,1}: aux153_INTEGER :: var_is_introduced ;
var bool: aux154_BOOL:: var_is_introduced ;
var bool: aux155_BOOL:: var_is_introduced ;
var {0,1}: aux155_INTEGER :: var_is_introduced ;
var bool: aux156_BOOL:: var_is_introduced ;
var bool: aux157_BOOL:: var_is_introduced ;
var {0,1}: aux157_INTEGER :: var_is_introduced ;
var bool: aux158_BOOL:: var_is_introduced ;
var bool: aux159_BOOL:: var_is_introduced ;
var {0,1}: aux159_INTEGER :: var_is_introduced ;
var bool: aux160_BOOL:: var_is_introduced ;
var bool: aux161_BOOL:: var_is_introduced ;
var {0,1}: aux161_INTEGER :: var_is_introduced ;
var bool: aux162_BOOL:: var_is_introduced ;
var bool: aux163_BOOL:: var_is_introduced ;
var {0,1}: aux163_INTEGER :: var_is_introduced ;
var bool: aux164_BOOL:: var_is_introduced ;
var bool: aux165_BOOL:: var_is_introduced ;
var {0,1}: aux165_INTEGER :: var_is_introduced ;
var bool: aux166_BOOL:: var_is_introduced ;
var bool: aux167_BOOL:: var_is_introduced ;
var {0,1}: aux167_INTEGER :: var_is_introduced ;
var bool: aux168_BOOL:: var_is_introduced ;
var bool: aux169_BOOL:: var_is_introduced ;
var {0,1}: aux169_INTEGER :: var_is_introduced ;
var bool: aux170_BOOL:: var_is_introduced ;
var bool: aux171_BOOL:: var_is_introduced ;
var {0,1}: aux171_INTEGER :: var_is_introduced ;
var bool: aux172_BOOL:: var_is_introduced ;
var bool: aux173_BOOL:: var_is_introduced ;
var {0,1}: aux173_INTEGER :: var_is_introduced ;
var bool: aux174_BOOL:: var_is_introduced ;
var bool: aux175_BOOL:: var_is_introduced ;
var {0,1}: aux175_INTEGER :: var_is_introduced ;
var bool: aux176_BOOL:: var_is_introduced ;
var bool: aux177_BOOL:: var_is_introduced ;
var {0,1}: aux177_INTEGER :: var_is_introduced ;
var bool: aux178_BOOL:: var_is_introduced ;
var bool: aux179_BOOL:: var_is_introduced ;
var {0,1}: aux179_INTEGER :: var_is_introduced ;
var bool: aux180_BOOL:: var_is_introduced ;
var bool: aux181_BOOL:: var_is_introduced ;
var {0,1}: aux181_INTEGER :: var_is_introduced ;
var bool: aux182_BOOL:: var_is_introduced ;
var bool: aux183_BOOL:: var_is_introduced ;
var {0,1}: aux183_INTEGER :: var_is_introduced ;
var bool: aux184_BOOL:: var_is_introduced ;
var bool: aux185_BOOL:: var_is_introduced ;
var {0,1}: aux185_INTEGER :: var_is_introduced ;
var bool: aux186_BOOL:: var_is_introduced ;
var bool: aux187_BOOL:: var_is_introduced ;
var {0,1}: aux187_INTEGER :: var_is_introduced ;
var bool: aux188_BOOL:: var_is_introduced ;
var bool: aux189_BOOL:: var_is_introduced ;
var {0,1}: aux189_INTEGER :: var_is_introduced ;
var bool: aux190_BOOL:: var_is_introduced ;
var bool: aux191_BOOL:: var_is_introduced ;
var {0,1}: aux191_INTEGER :: var_is_introduced ;
var bool: aux192_BOOL:: var_is_introduced ;
var bool: aux193_BOOL:: var_is_introduced ;
var {0,1}: aux193_INTEGER :: var_is_introduced ;
var bool: aux194_BOOL:: var_is_introduced ;
var bool: aux195_BOOL:: var_is_introduced ;
var {0,1}: aux195_INTEGER :: var_is_introduced ;
var bool: aux196_BOOL:: var_is_introduced ;
var bool: aux197_BOOL:: var_is_introduced ;
var {0,1}: aux197_INTEGER :: var_is_introduced ;
var bool: aux198_BOOL:: var_is_introduced ;
var bool: aux199_BOOL:: var_is_introduced ;
var {0,1}: aux199_INTEGER :: var_is_introduced ;
var bool: aux200_BOOL:: var_is_introduced ;
var bool: aux201_BOOL:: var_is_introduced ;
var {0,1}: aux201_INTEGER :: var_is_introduced ;
var bool: aux202_BOOL:: var_is_introduced ;
var bool: aux203_BOOL:: var_is_introduced ;
var {0,1}: aux203_INTEGER :: var_is_introduced ;
var bool: aux204_BOOL:: var_is_introduced ;
var bool: aux205_BOOL:: var_is_introduced ;
var {0,1}: aux205_INTEGER :: var_is_introduced ;
var bool: aux206_BOOL:: var_is_introduced ;
var bool: aux207_BOOL:: var_is_introduced ;
var {0,1}: aux207_INTEGER :: var_is_introduced ;
var bool: aux208_BOOL:: var_is_introduced ;
var bool: aux209_BOOL:: var_is_introduced ;
var {0,1}: aux209_INTEGER :: var_is_introduced ;
var bool: aux210_BOOL:: var_is_introduced ;
var bool: aux211_BOOL:: var_is_introduced ;
var {0,1}: aux211_INTEGER :: var_is_introduced ;
var bool: aux212_BOOL:: var_is_introduced ;
var bool: aux213_BOOL:: var_is_introduced ;
var {0,1}: aux213_INTEGER :: var_is_introduced ;
var bool: aux214_BOOL:: var_is_introduced ;
var bool: aux215_BOOL:: var_is_introduced ;
var {0,1}: aux215_INTEGER :: var_is_introduced ;
var bool: aux216_BOOL:: var_is_introduced ;
var bool: aux217_BOOL:: var_is_introduced ;
var {0,1}: aux217_INTEGER :: var_is_introduced ;
var bool: aux218_BOOL:: var_is_introduced ;
var bool: aux219_BOOL:: var_is_introduced ;
var {0,1}: aux219_INTEGER :: var_is_introduced ;
var bool: aux220_BOOL:: var_is_introduced ;
var bool: aux221_BOOL:: var_is_introduced ;
var {0,1}: aux221_INTEGER :: var_is_introduced ;
var bool: aux222_BOOL:: var_is_introduced ;
var bool: aux223_BOOL:: var_is_introduced ;
var {0,1}: aux223_INTEGER :: var_is_introduced ;
var bool: aux224_BOOL:: var_is_introduced ;
var bool: aux225_BOOL:: var_is_introduced ;
var {0,1}: aux225_INTEGER :: var_is_introduced ;
var bool: aux226_BOOL:: var_is_introduced ;
var bool: aux227_BOOL:: var_is_introduced ;
var {0,1}: aux227_INTEGER :: var_is_introduced ;
var bool: aux228_BOOL:: var_is_introduced ;
var bool: aux229_BOOL:: var_is_introduced ;
var {0,1}: aux229_INTEGER :: var_is_introduced ;
var bool: aux230_BOOL:: var_is_introduced ;
var bool: aux231_BOOL:: var_is_introduced ;
var {0,1}: aux231_INTEGER :: var_is_introduced ;
var bool: aux232_BOOL:: var_is_introduced ;
var bool: aux233_BOOL:: var_is_introduced ;
var {0,1}: aux233_INTEGER :: var_is_introduced ;
var bool: aux234_BOOL:: var_is_introduced ;
var bool: aux235_BOOL:: var_is_introduced ;
var {0,1}: aux235_INTEGER :: var_is_introduced ;
var bool: aux236_BOOL:: var_is_introduced ;
var bool: aux237_BOOL:: var_is_introduced ;
var {0,1}: aux237_INTEGER :: var_is_introduced ;
var bool: aux238_BOOL:: var_is_introduced ;
var bool: aux239_BOOL:: var_is_introduced ;
var {0,1}: aux239_INTEGER :: var_is_introduced ;
var bool: aux240_BOOL:: var_is_introduced ;
var bool: aux241_BOOL:: var_is_introduced ;
var {0,1}: aux241_INTEGER :: var_is_introduced ;
var bool: aux242_BOOL:: var_is_introduced ;
var bool: aux243_BOOL:: var_is_introduced ;
var {0,1}: aux243_INTEGER :: var_is_introduced ;
var bool: aux244_BOOL:: var_is_introduced ;
var bool: aux245_BOOL:: var_is_introduced ;
var {0,1}: aux245_INTEGER :: var_is_introduced ;
var bool: aux246_BOOL:: var_is_introduced ;
var bool: aux247_BOOL:: var_is_introduced ;
var {0,1}: aux247_INTEGER :: var_is_introduced ;
var bool: aux248_BOOL:: var_is_introduced ;
var bool: aux249_BOOL:: var_is_introduced ;
var {0,1}: aux249_INTEGER :: var_is_introduced ;
var bool: aux250_BOOL:: var_is_introduced ;
var bool: aux251_BOOL:: var_is_introduced ;
var {0,1}: aux251_INTEGER :: var_is_introduced ;
var bool: aux252_BOOL:: var_is_introduced ;
var bool: aux253_BOOL:: var_is_introduced ;
var {0,1}: aux253_INTEGER :: var_is_introduced ;
var bool: aux254_BOOL:: var_is_introduced ;
var bool: aux255_BOOL:: var_is_introduced ;
var {0,1}: aux255_INTEGER :: var_is_introduced ;
var bool: aux256_BOOL:: var_is_introduced ;
var bool: aux257_BOOL:: var_is_introduced ;
var {0,1}: aux257_INTEGER :: var_is_introduced ;
var bool: aux258_BOOL:: var_is_introduced ;
var bool: aux259_BOOL:: var_is_introduced ;
var {0,1}: aux259_INTEGER :: var_is_introduced ;
var bool: aux260_BOOL:: var_is_introduced ;
var bool: aux261_BOOL:: var_is_introduced ;
var {0,1}: aux261_INTEGER :: var_is_introduced ;
var bool: aux262_BOOL:: var_is_introduced ;
var bool: aux263_BOOL:: var_is_introduced ;
var {0,1}: aux263_INTEGER :: var_is_introduced ;
var bool: aux264_BOOL:: var_is_introduced ;
var bool: aux265_BOOL:: var_is_introduced ;
var {0,1}: aux265_INTEGER :: var_is_introduced ;
var bool: aux266_BOOL:: var_is_introduced ;
var bool: aux267_BOOL:: var_is_introduced ;
var {0,1}: aux267_INTEGER :: var_is_introduced ;
var bool: aux268_BOOL:: var_is_introduced ;
var bool: aux269_BOOL:: var_is_introduced ;
var {0,1}: aux269_INTEGER :: var_is_introduced ;
var bool: aux270_BOOL:: var_is_introduced ;
var bool: aux271_BOOL:: var_is_introduced ;
var {0,1}: aux271_INTEGER :: var_is_introduced ;
var bool: aux272_BOOL:: var_is_introduced ;
var bool: aux273_BOOL:: var_is_introduced ;
var {0,1}: aux273_INTEGER :: var_is_introduced ;
var bool: aux274_BOOL:: var_is_introduced ;
var bool: aux275_BOOL:: var_is_introduced ;
var {0,1}: aux275_INTEGER :: var_is_introduced ;
var bool: aux276_BOOL:: var_is_introduced ;
var bool: aux277_BOOL:: var_is_introduced ;
var {0,1}: aux277_INTEGER :: var_is_introduced ;
var bool: aux278_BOOL:: var_is_introduced ;
var bool: aux279_BOOL:: var_is_introduced ;
var {0,1}: aux279_INTEGER :: var_is_introduced ;
var bool: aux280_BOOL:: var_is_introduced ;
var bool: aux281_BOOL:: var_is_introduced ;
var {0,1}: aux281_INTEGER :: var_is_introduced ;
var bool: aux282_BOOL:: var_is_introduced ;
var bool: aux283_BOOL:: var_is_introduced ;
var {0,1}: aux283_INTEGER :: var_is_introduced ;
var bool: aux284_BOOL:: var_is_introduced ;
var bool: aux285_BOOL:: var_is_introduced ;
var {0,1}: aux285_INTEGER :: var_is_introduced ;
var bool: aux286_BOOL:: var_is_introduced ;
var bool: aux287_BOOL:: var_is_introduced ;
var {0,1}: aux287_INTEGER :: var_is_introduced ;
var bool: aux288_BOOL:: var_is_introduced ;
var bool: aux289_BOOL:: var_is_introduced ;
var {0,1}: aux289_INTEGER :: var_is_introduced ;
var bool: aux290_BOOL:: var_is_introduced ;
var bool: aux291_BOOL:: var_is_introduced ;
var {0,1}: aux291_INTEGER :: var_is_introduced ;
var bool: aux292_BOOL:: var_is_introduced ;
var bool: aux293_BOOL:: var_is_introduced ;
var {0,1}: aux293_INTEGER :: var_is_introduced ;
var bool: aux294_BOOL:: var_is_introduced ;
var bool: aux295_BOOL:: var_is_introduced ;
var {0,1}: aux295_INTEGER :: var_is_introduced ;
var bool: aux296_BOOL:: var_is_introduced ;
var bool: aux297_BOOL:: var_is_introduced ;
var {0,1}: aux297_INTEGER :: var_is_introduced ;
var bool: aux298_BOOL:: var_is_introduced ;
var bool: aux299_BOOL:: var_is_introduced ;
var {0,1}: aux299_INTEGER :: var_is_introduced ;
var bool: aux300_BOOL:: var_is_introduced ;
var bool: aux301_BOOL:: var_is_introduced ;
var {0,1}: aux301_INTEGER :: var_is_introduced ;
var bool: aux302_BOOL:: var_is_introduced ;
var bool: aux303_BOOL:: var_is_introduced ;
var {0,1}: aux303_INTEGER :: var_is_introduced ;
var bool: aux304_BOOL:: var_is_introduced ;
var bool: aux305_BOOL:: var_is_introduced ;
var {0,1}: aux305_INTEGER :: var_is_introduced ;
var bool: aux306_BOOL:: var_is_introduced ;
var bool: aux307_BOOL:: var_is_introduced ;
var {0,1}: aux307_INTEGER :: var_is_introduced ;
var bool: aux308_BOOL:: var_is_introduced ;
var bool: aux309_BOOL:: var_is_introduced ;
var {0,1}: aux309_INTEGER :: var_is_introduced ;
var bool: aux310_BOOL:: var_is_introduced ;
var bool: aux311_BOOL:: var_is_introduced ;
var {0,1}: aux311_INTEGER :: var_is_introduced ;
var bool: aux312_BOOL:: var_is_introduced ;
var bool: aux313_BOOL:: var_is_introduced ;
var {0,1}: aux313_INTEGER :: var_is_introduced ;
var bool: aux314_BOOL:: var_is_introduced ;
var bool: aux315_BOOL:: var_is_introduced ;
var {0,1}: aux315_INTEGER :: var_is_introduced ;
var bool: aux316_BOOL:: var_is_introduced ;
var bool: aux317_BOOL:: var_is_introduced ;
var {0,1}: aux317_INTEGER :: var_is_introduced ;
var bool: aux318_BOOL:: var_is_introduced ;
var bool: aux319_BOOL:: var_is_introduced ;
var {0,1}: aux319_INTEGER :: var_is_introduced ;
var bool: aux320_BOOL:: var_is_introduced ;
var bool: aux321_BOOL:: var_is_introduced ;
var {0,1}: aux321_INTEGER :: var_is_introduced ;
var bool: aux322_BOOL:: var_is_introduced ;
var bool: aux323_BOOL:: var_is_introduced ;
var {0,1}: aux323_INTEGER :: var_is_introduced ;
var bool: aux324_BOOL:: var_is_introduced ;
var bool: aux325_BOOL:: var_is_introduced ;
var {0,1}: aux325_INTEGER :: var_is_introduced ;
var bool: aux326_BOOL:: var_is_introduced ;
var bool: aux327_BOOL:: var_is_introduced ;
var {0,1}: aux327_INTEGER :: var_is_introduced ;
var bool: aux328_BOOL:: var_is_introduced ;
var bool: aux329_BOOL:: var_is_introduced ;
var {0,1}: aux329_INTEGER :: var_is_introduced ;
var bool: aux330_BOOL:: var_is_introduced ;
var bool: aux331_BOOL:: var_is_introduced ;
var {0,1}: aux331_INTEGER :: var_is_introduced ;
var bool: aux332_BOOL:: var_is_introduced ;
var bool: aux333_BOOL:: var_is_introduced ;
var {0,1}: aux333_INTEGER :: var_is_introduced ;
var bool: aux334_BOOL:: var_is_introduced ;
var bool: aux335_BOOL:: var_is_introduced ;
var {0,1}: aux335_INTEGER :: var_is_introduced ;
var bool: aux336_BOOL:: var_is_introduced ;
var bool: aux337_BOOL:: var_is_introduced ;
var {0,1}: aux337_INTEGER :: var_is_introduced ;
var bool: aux338_BOOL:: var_is_introduced ;
var bool: aux339_BOOL:: var_is_introduced ;
var {0,1}: aux339_INTEGER :: var_is_introduced ;
var bool: aux340_BOOL:: var_is_introduced ;
var bool: aux341_BOOL:: var_is_introduced ;
var {0,1}: aux341_INTEGER :: var_is_introduced ;
var bool: aux342_BOOL:: var_is_introduced ;
var bool: aux343_BOOL:: var_is_introduced ;
var {0,1}: aux343_INTEGER :: var_is_introduced ;
var bool: aux344_BOOL:: var_is_introduced ;
var bool: aux345_BOOL:: var_is_introduced ;
var {0,1}: aux345_INTEGER :: var_is_introduced ;
var bool: aux346_BOOL:: var_is_introduced ;
var bool: aux347_BOOL:: var_is_introduced ;
var {0,1}: aux347_INTEGER :: var_is_introduced ;
var bool: aux348_BOOL:: var_is_introduced ;
var bool: aux349_BOOL:: var_is_introduced ;
var {0,1}: aux349_INTEGER :: var_is_introduced ;
var bool: aux350_BOOL:: var_is_introduced ;
var bool: aux351_BOOL:: var_is_introduced ;
var {0,1}: aux351_INTEGER :: var_is_introduced ;
var bool: aux352_BOOL:: var_is_introduced ;
var bool: aux353_BOOL:: var_is_introduced ;
var {0,1}: aux353_INTEGER :: var_is_introduced ;
var bool: aux354_BOOL:: var_is_introduced ;
var bool: aux355_BOOL:: var_is_introduced ;
var {0,1}: aux355_INTEGER :: var_is_introduced ;
var bool: aux356_BOOL:: var_is_introduced ;
var bool: aux357_BOOL:: var_is_introduced ;
var {0,1}: aux357_INTEGER :: var_is_introduced ;
var bool: aux358_BOOL:: var_is_introduced ;
var bool: aux359_BOOL:: var_is_introduced ;
var {0,1}: aux359_INTEGER :: var_is_introduced ;
var bool: aux360_BOOL:: var_is_introduced ;
var bool: aux361_BOOL:: var_is_introduced ;
var {0,1}: aux361_INTEGER :: var_is_introduced ;
var bool: aux362_BOOL:: var_is_introduced ;
var bool: aux363_BOOL:: var_is_introduced ;
var {0,1}: aux363_INTEGER :: var_is_introduced ;
var bool: aux364_BOOL:: var_is_introduced ;
var bool: aux365_BOOL:: var_is_introduced ;
var {0,1}: aux365_INTEGER :: var_is_introduced ;
var bool: aux366_BOOL:: var_is_introduced ;
var bool: aux367_BOOL:: var_is_introduced ;
var {0,1}: aux367_INTEGER :: var_is_introduced ;
var bool: aux368_BOOL:: var_is_introduced ;
var bool: aux369_BOOL:: var_is_introduced ;
var {0,1}: aux369_INTEGER :: var_is_introduced ;
var bool: aux370_BOOL:: var_is_introduced ;
var bool: aux371_BOOL:: var_is_introduced ;
var {0,1}: aux371_INTEGER :: var_is_introduced ;
var bool: aux372_BOOL:: var_is_introduced ;
var bool: aux373_BOOL:: var_is_introduced ;
var {0,1}: aux373_INTEGER :: var_is_introduced ;
var bool: aux374_BOOL:: var_is_introduced ;
var bool: aux375_BOOL:: var_is_introduced ;
var {0,1}: aux375_INTEGER :: var_is_introduced ;
var bool: aux376_BOOL:: var_is_introduced ;
var bool: aux377_BOOL:: var_is_introduced ;
var {0,1}: aux377_INTEGER :: var_is_introduced ;
var bool: aux378_BOOL:: var_is_introduced ;
var bool: aux379_BOOL:: var_is_introduced ;
var {0,1}: aux379_INTEGER :: var_is_introduced ;
var bool: aux380_BOOL:: var_is_introduced ;
var bool: aux381_BOOL:: var_is_introduced ;
var {0,1}: aux381_INTEGER :: var_is_introduced ;
var bool: aux382_BOOL:: var_is_introduced ;
var bool: aux383_BOOL:: var_is_introduced ;
var {0,1}: aux383_INTEGER :: var_is_introduced ;
var bool: aux384_BOOL:: var_is_introduced ;
var bool: aux385_BOOL:: var_is_introduced ;
var {0,1}: aux385_INTEGER :: var_is_introduced ;
var bool: aux386_BOOL:: var_is_introduced ;
var bool: aux387_BOOL:: var_is_introduced ;
var {0,1}: aux387_INTEGER :: var_is_introduced ;
var bool: aux388_BOOL:: var_is_introduced ;
var bool: aux389_BOOL:: var_is_introduced ;
var {0,1}: aux389_INTEGER :: var_is_introduced ;
var bool: aux390_BOOL:: var_is_introduced ;
var bool: aux391_BOOL:: var_is_introduced ;
var {0,1}: aux391_INTEGER :: var_is_introduced ;
var bool: aux392_BOOL:: var_is_introduced ;
var bool: aux393_BOOL:: var_is_introduced ;
var {0,1}: aux393_INTEGER :: var_is_introduced ;
var bool: aux394_BOOL:: var_is_introduced ;
var bool: aux395_BOOL:: var_is_introduced ;
var {0,1}: aux395_INTEGER :: var_is_introduced ;
var bool: aux396_BOOL:: var_is_introduced ;
var bool: aux397_BOOL:: var_is_introduced ;
var {0,1}: aux397_INTEGER :: var_is_introduced ;
var bool: aux398_BOOL:: var_is_introduced ;
var bool: aux399_BOOL:: var_is_introduced ;
var {0,1}: aux399_INTEGER :: var_is_introduced ;
var bool: aux400_BOOL:: var_is_introduced ;
var bool: aux401_BOOL:: var_is_introduced ;
var {0,1}: aux401_INTEGER :: var_is_introduced ;
var bool: aux402_BOOL:: var_is_introduced ;
var bool: aux403_BOOL:: var_is_introduced ;
var {0,1}: aux403_INTEGER :: var_is_introduced ;
var bool: aux404_BOOL:: var_is_introduced ;
var bool: aux405_BOOL:: var_is_introduced ;
var {0,1}: aux405_INTEGER :: var_is_introduced ;
var bool: aux406_BOOL:: var_is_introduced ;
var bool: aux407_BOOL:: var_is_introduced ;
var {0,1}: aux407_INTEGER :: var_is_introduced ;
var bool: aux408_BOOL:: var_is_introduced ;
var bool: aux409_BOOL:: var_is_introduced ;
var {0,1}: aux409_INTEGER :: var_is_introduced ;
var bool: aux410_BOOL:: var_is_introduced ;
var bool: aux411_BOOL:: var_is_introduced ;
var {0,1}: aux411_INTEGER :: var_is_introduced ;
var bool: aux412_BOOL:: var_is_introduced ;
var bool: aux413_BOOL:: var_is_introduced ;
var {0,1}: aux413_INTEGER :: var_is_introduced ;
var bool: aux414_BOOL:: var_is_introduced ;
var bool: aux415_BOOL:: var_is_introduced ;
var {0,1}: aux415_INTEGER :: var_is_introduced ;
var bool: aux416_BOOL:: var_is_introduced ;
var bool: aux417_BOOL:: var_is_introduced ;
var bool: aux418_BOOL:: var_is_introduced ;
var bool: aux419_BOOL:: var_is_introduced ;
var bool: aux420_BOOL:: var_is_introduced ;
var bool: aux421_BOOL:: var_is_introduced ;
var bool: aux422_BOOL:: var_is_introduced ;
var bool: aux423_BOOL:: var_is_introduced ;
var bool: aux424_BOOL:: var_is_introduced ;
var bool: aux425_BOOL:: var_is_introduced ;
var bool: aux426_BOOL:: var_is_introduced ;
var bool: aux427_BOOL:: var_is_introduced ;
var bool: aux428_BOOL:: var_is_introduced ;
var bool: aux429_BOOL:: var_is_introduced ;
var bool: aux430_BOOL:: var_is_introduced ;
var bool: aux431_BOOL:: var_is_introduced ;
var bool: aux432_BOOL:: var_is_introduced ;
var bool: aux433_BOOL:: var_is_introduced ;
var bool: aux434_BOOL:: var_is_introduced ;
var bool: aux435_BOOL:: var_is_introduced ;
var bool: aux436_BOOL:: var_is_introduced ;
var bool: aux437_BOOL:: var_is_introduced ;
var bool: aux438_BOOL:: var_is_introduced ;
var bool: aux439_BOOL:: var_is_introduced ;
var bool: aux440_BOOL:: var_is_introduced ;
var bool: aux441_BOOL:: var_is_introduced ;
var bool: aux442_BOOL:: var_is_introduced ;
var bool: aux443_BOOL:: var_is_introduced ;
var bool: aux444_BOOL:: var_is_introduced ;
var bool: aux445_BOOL:: var_is_introduced ;
var bool: aux446_BOOL:: var_is_introduced ;
var bool: aux447_BOOL:: var_is_introduced ;
var bool: aux448_BOOL:: var_is_introduced ;
var bool: aux449_BOOL:: var_is_introduced ;
var bool: aux450_BOOL:: var_is_introduced ;
var bool: aux451_BOOL:: var_is_introduced ;
var bool: aux452_BOOL:: var_is_introduced ;
var bool: aux453_BOOL:: var_is_introduced ;
var bool: aux454_BOOL:: var_is_introduced ;
var bool: aux455_BOOL:: var_is_introduced ;
var bool: aux456_BOOL:: var_is_introduced ;
var bool: aux457_BOOL:: var_is_introduced ;
var bool: aux458_BOOL:: var_is_introduced ;
var bool: aux459_BOOL:: var_is_introduced ;
var bool: aux460_BOOL:: var_is_introduced ;
var bool: aux461_BOOL:: var_is_introduced ;
var bool: aux462_BOOL:: var_is_introduced ;
var bool: aux463_BOOL:: var_is_introduced ;
var bool: aux464_BOOL:: var_is_introduced ;
var bool: aux465_BOOL:: var_is_introduced ;
var bool: aux466_BOOL:: var_is_introduced ;
var bool: aux467_BOOL:: var_is_introduced ;
var bool: aux468_BOOL:: var_is_introduced ;
var bool: aux469_BOOL:: var_is_introduced ;
var bool: aux470_BOOL:: var_is_introduced ;
var bool: aux471_BOOL:: var_is_introduced ;
var bool: aux472_BOOL:: var_is_introduced ;
var bool: aux473_BOOL:: var_is_introduced ;
var bool: aux474_BOOL:: var_is_introduced ;
var bool: aux475_BOOL:: var_is_introduced ;
var bool: aux476_BOOL:: var_is_introduced ;
var bool: aux477_BOOL:: var_is_introduced ;
var bool: aux478_BOOL:: var_is_introduced ;
var bool: aux479_BOOL:: var_is_introduced ;
var bool: aux480_BOOL:: var_is_introduced ;
var bool: aux481_BOOL:: var_is_introduced ;
var bool: aux482_BOOL:: var_is_introduced ;
var bool: aux483_BOOL:: var_is_introduced ;
var bool: aux484_BOOL:: var_is_introduced ;
var bool: aux485_BOOL:: var_is_introduced ;
var bool: aux486_BOOL:: var_is_introduced ;
var bool: aux487_BOOL:: var_is_introduced ;
var bool: aux488_BOOL:: var_is_introduced ;
var bool: aux489_BOOL:: var_is_introduced ;
var bool: aux490_BOOL:: var_is_introduced ;
var bool: aux491_BOOL:: var_is_introduced ;
var bool: aux492_BOOL:: var_is_introduced ;
var bool: aux493_BOOL:: var_is_introduced ;
var bool: aux494_BOOL:: var_is_introduced ;
var bool: aux495_BOOL:: var_is_introduced ;
var bool: aux496_BOOL:: var_is_introduced ;
var bool: aux497_BOOL:: var_is_introduced ;
var bool: aux498_BOOL:: var_is_introduced ;
var bool: aux499_BOOL:: var_is_introduced ;
var bool: aux500_BOOL:: var_is_introduced ;
var bool: aux501_BOOL:: var_is_introduced ;
var bool: aux502_BOOL:: var_is_introduced ;
var bool: aux503_BOOL:: var_is_introduced ;
var bool: aux504_BOOL:: var_is_introduced ;
var bool: aux505_BOOL:: var_is_introduced ;
var bool: aux506_BOOL:: var_is_introduced ;
var bool: aux507_BOOL:: var_is_introduced ;
var bool: aux508_BOOL:: var_is_introduced ;
var bool: aux509_BOOL:: var_is_introduced ;
var bool: aux510_BOOL:: var_is_introduced ;
var bool: aux511_BOOL:: var_is_introduced ;
var bool: aux512_BOOL:: var_is_introduced ;
var bool: aux513_BOOL:: var_is_introduced ;
var bool: aux514_BOOL:: var_is_introduced ;
var bool: aux515_BOOL:: var_is_introduced ;
var bool: aux516_BOOL:: var_is_introduced ;
var bool: aux517_BOOL:: var_is_introduced ;
var bool: aux518_BOOL:: var_is_introduced ;
var bool: aux519_BOOL:: var_is_introduced ;
var bool: aux520_BOOL:: var_is_introduced ;
var bool: aux521_BOOL:: var_is_introduced ;
var bool: aux522_BOOL:: var_is_introduced ;
var bool: aux523_BOOL:: var_is_introduced ;
var bool: aux524_BOOL:: var_is_introduced ;
var bool: aux525_BOOL:: var_is_introduced ;
var bool: aux526_BOOL:: var_is_introduced ;
var bool: aux527_BOOL:: var_is_introduced ;
var bool: aux528_BOOL:: var_is_introduced ;
var bool: aux529_BOOL:: var_is_introduced ;
var bool: aux530_BOOL:: var_is_introduced ;
var bool: aux531_BOOL:: var_is_introduced ;
var bool: aux532_BOOL:: var_is_introduced ;
var bool: aux533_BOOL:: var_is_introduced ;
var bool: aux534_BOOL:: var_is_introduced ;
var bool: aux535_BOOL:: var_is_introduced ;
var bool: aux536_BOOL:: var_is_introduced ;
var bool: aux537_BOOL:: var_is_introduced ;
var bool: aux538_BOOL:: var_is_introduced ;
var bool: aux539_BOOL:: var_is_introduced ;
var bool: aux540_BOOL:: var_is_introduced ;
var bool: aux541_BOOL:: var_is_introduced ;
var bool: aux542_BOOL:: var_is_introduced ;
var bool: aux543_BOOL:: var_is_introduced ;
var bool: aux544_BOOL:: var_is_introduced ;
var bool: aux545_BOOL:: var_is_introduced ;
var bool: aux546_BOOL:: var_is_introduced ;
var bool: aux547_BOOL:: var_is_introduced ;
var bool: aux548_BOOL:: var_is_introduced ;
var bool: aux549_BOOL:: var_is_introduced ;
var bool: aux550_BOOL:: var_is_introduced ;
var bool: aux551_BOOL:: var_is_introduced ;
var bool: aux552_BOOL:: var_is_introduced ;
var bool: aux553_BOOL:: var_is_introduced ;
var bool: aux554_BOOL:: var_is_introduced ;
var bool: aux555_BOOL:: var_is_introduced ;
var bool: aux556_BOOL:: var_is_introduced ;
var bool: aux557_BOOL:: var_is_introduced ;
var bool: aux558_BOOL:: var_is_introduced ;
var bool: aux559_BOOL:: var_is_introduced ;
var bool: aux560_BOOL:: var_is_introduced ;
var bool: aux561_BOOL:: var_is_introduced ;
var bool: aux562_BOOL:: var_is_introduced ;
var bool: aux563_BOOL:: var_is_introduced ;
var bool: aux564_BOOL:: var_is_introduced ;
var bool: aux565_BOOL:: var_is_introduced ;
var bool: aux566_BOOL:: var_is_introduced ;
var bool: aux567_BOOL:: var_is_introduced ;
var bool: aux568_BOOL:: var_is_introduced ;
var bool: aux569_BOOL:: var_is_introduced ;
var bool: aux570_BOOL:: var_is_introduced ;
var bool: aux571_BOOL:: var_is_introduced ;
var bool: aux572_BOOL:: var_is_introduced ;
var bool: aux573_BOOL:: var_is_introduced ;
var bool: aux574_BOOL:: var_is_introduced ;
var bool: aux575_BOOL:: var_is_introduced ;
var bool: aux576_BOOL:: var_is_introduced ;
var 2..44: aux577:: var_is_introduced ;
var bool: aux578_BOOL:: var_is_introduced ;
var bool: aux579_BOOL:: var_is_introduced ;
var {0,1}: aux579_INTEGER :: var_is_introduced ;
var bool: aux580_BOOL:: var_is_introduced ;
var bool: aux581_BOOL:: var_is_introduced ;
var 1..43: aux582:: var_is_introduced ;
var bool: aux583_BOOL:: var_is_introduced ;
var bool: aux584_BOOL:: var_is_introduced ;
var bool: aux585_BOOL:: var_is_introduced ;
var {0,1}: aux585_INTEGER :: var_is_introduced ;
var bool: aux586_BOOL:: var_is_introduced ;
var bool: aux587_BOOL:: var_is_introduced ;
var 2..44: aux588:: var_is_introduced ;
var bool: aux589_BOOL:: var_is_introduced ;
var bool: aux590_BOOL:: var_is_introduced ;
var bool: aux591_BOOL:: var_is_introduced ;
var {0,1}: aux591_INTEGER :: var_is_introduced ;
var bool: aux592_BOOL:: var_is_introduced ;
var bool: aux593_BOOL:: var_is_introduced ;
var 3..45: aux594:: var_is_introduced ;
var bool: aux595_BOOL:: var_is_introduced ;
var bool: aux596_BOOL:: var_is_introduced ;
var bool: aux597_BOOL:: var_is_introduced ;
var {0,1}: aux597_INTEGER :: var_is_introduced ;
var bool: aux598_BOOL:: var_is_introduced ;
var bool: aux599_BOOL:: var_is_introduced ;
var 2..44: aux600:: var_is_introduced ;
var bool: aux601_BOOL:: var_is_introduced ;
var bool: aux602_BOOL:: var_is_introduced ;
var bool: aux603_BOOL:: var_is_introduced ;
var {0,1}: aux603_INTEGER :: var_is_introduced ;
var bool: aux604_BOOL:: var_is_introduced ;
var bool: aux605_BOOL:: var_is_introduced ;
var 2..44: aux606:: var_is_introduced ;
var bool: aux607_BOOL:: var_is_introduced ;
var bool: aux608_BOOL:: var_is_introduced ;
var bool: aux609_BOOL:: var_is_introduced ;
var {0,1}: aux609_INTEGER :: var_is_introduced ;
var bool: aux610_BOOL:: var_is_introduced ;
var bool: aux611_BOOL:: var_is_introduced ;
var 3..45: aux612:: var_is_introduced ;
var bool: aux613_BOOL:: var_is_introduced ;
var bool: aux614_BOOL:: var_is_introduced ;
var bool: aux615_BOOL:: var_is_introduced ;
var {0,1}: aux615_INTEGER :: var_is_introduced ;
var bool: aux616_BOOL:: var_is_introduced ;
var bool: aux617_BOOL:: var_is_introduced ;
var 2..44: aux618:: var_is_introduced ;
var bool: aux619_BOOL:: var_is_introduced ;
var bool: aux620_BOOL:: var_is_introduced ;
var bool: aux621_BOOL:: var_is_introduced ;
var {0,1}: aux621_INTEGER :: var_is_introduced ;
var bool: aux622_BOOL:: var_is_introduced ;
var bool: aux623_BOOL:: var_is_introduced ;
var 1..43: aux624:: var_is_introduced ;
var bool: aux625_BOOL:: var_is_introduced ;
var bool: aux626_BOOL:: var_is_introduced ;
var bool: aux627_BOOL:: var_is_introduced ;
var {0,1}: aux627_INTEGER :: var_is_introduced ;
var bool: aux628_BOOL:: var_is_introduced ;
var bool: aux629_BOOL:: var_is_introduced ;
var 2..44: aux630:: var_is_introduced ;
var bool: aux631_BOOL:: var_is_introduced ;
var bool: aux632_BOOL:: var_is_introduced ;
var bool: aux633_BOOL:: var_is_introduced ;
var {0,1}: aux633_INTEGER :: var_is_introduced ;
var bool: aux634_BOOL:: var_is_introduced ;
var bool: aux635_BOOL:: var_is_introduced ;
var 1..43: aux636:: var_is_introduced ;
var bool: aux637_BOOL:: var_is_introduced ;
var bool: aux638_BOOL:: var_is_introduced ;
var bool: aux639_BOOL:: var_is_introduced ;
var {0,1}: aux639_INTEGER :: var_is_introduced ;
var bool: aux640_BOOL:: var_is_introduced ;
var bool: aux641_BOOL:: var_is_introduced ;
var 2..44: aux642:: var_is_introduced ;
var bool: aux643_BOOL:: var_is_introduced ;
var bool: aux644_BOOL:: var_is_introduced ;
var bool: aux645_BOOL:: var_is_introduced ;
var {0,1}: aux645_INTEGER :: var_is_introduced ;
var bool: aux646_BOOL:: var_is_introduced ;
var bool: aux647_BOOL:: var_is_introduced ;
var 1..43: aux648:: var_is_introduced ;
var bool: aux649_BOOL:: var_is_introduced ;
var bool: aux650_BOOL:: var_is_introduced ;
var bool: aux651_BOOL:: var_is_introduced ;
var {0,1}: aux651_INTEGER :: var_is_introduced ;
var bool: aux652_BOOL:: var_is_introduced ;
var bool: aux653_BOOL:: var_is_introduced ;
var 2..44: aux654:: var_is_introduced ;
var bool: aux655_BOOL:: var_is_introduced ;
var bool: aux656_BOOL:: var_is_introduced ;
var bool: aux657_BOOL:: var_is_introduced ;
var {0,1}: aux657_INTEGER :: var_is_introduced ;
var bool: aux658_BOOL:: var_is_introduced ;
var bool: aux659_BOOL:: var_is_introduced ;
var 4..46: aux660:: var_is_introduced ;
var bool: aux661_BOOL:: var_is_introduced ;
var bool: aux662_BOOL:: var_is_introduced ;
var bool: aux663_BOOL:: var_is_introduced ;
var {0,1}: aux663_INTEGER :: var_is_introduced ;
var bool: aux664_BOOL:: var_is_introduced ;
var bool: aux665_BOOL:: var_is_introduced ;
var 1..43: aux666:: var_is_introduced ;
var bool: aux667_BOOL:: var_is_introduced ;
var bool: aux668_BOOL:: var_is_introduced ;
var bool: aux669_BOOL:: var_is_introduced ;
var {0,1}: aux669_INTEGER :: var_is_introduced ;
var bool: aux670_BOOL:: var_is_introduced ;
var bool: aux671_BOOL:: var_is_introduced ;
var 3..45: aux672:: var_is_introduced ;
var bool: aux673_BOOL:: var_is_introduced ;
var bool: aux674_BOOL:: var_is_introduced ;
var bool: aux675_BOOL:: var_is_introduced ;
var {0,1}: aux675_INTEGER :: var_is_introduced ;
var bool: aux676_BOOL:: var_is_introduced ;
var bool: aux677_BOOL:: var_is_introduced ;
var 3..45: aux678:: var_is_introduced ;
var bool: aux679_BOOL:: var_is_introduced ;
var bool: aux680_BOOL:: var_is_introduced ;
var bool: aux681_BOOL:: var_is_introduced ;
var {0,1}: aux681_INTEGER :: var_is_introduced ;
var bool: aux682_BOOL:: var_is_introduced ;
var bool: aux683_BOOL:: var_is_introduced ;
var 2..44: aux684:: var_is_introduced ;
var bool: aux685_BOOL:: var_is_introduced ;
var bool: aux686_BOOL:: var_is_introduced ;
var bool: aux687_BOOL:: var_is_introduced ;
var {0,1}: aux687_INTEGER :: var_is_introduced ;
var bool: aux688_BOOL:: var_is_introduced ;
var bool: aux689_BOOL:: var_is_introduced ;
var 3..45: aux690:: var_is_introduced ;
var bool: aux691_BOOL:: var_is_introduced ;
var bool: aux692_BOOL:: var_is_introduced ;
var bool: aux693_BOOL:: var_is_introduced ;
var {0,1}: aux693_INTEGER :: var_is_introduced ;
var bool: aux694_BOOL:: var_is_introduced ;
var bool: aux695_BOOL:: var_is_introduced ;
var 2..44: aux696:: var_is_introduced ;
var bool: aux697_BOOL:: var_is_introduced ;
var bool: aux698_BOOL:: var_is_introduced ;
var {0,1}: aux698_INTEGER :: var_is_introduced ;
var bool: aux699_BOOL:: var_is_introduced ;
var bool: aux700_BOOL:: var_is_introduced ;
var 1..43: aux701:: var_is_introduced ;
var bool: aux702_BOOL:: var_is_introduced ;
var bool: aux703_BOOL:: var_is_introduced ;
var bool: aux704_BOOL:: var_is_introduced ;
var {0,1}: aux704_INTEGER :: var_is_introduced ;
var bool: aux705_BOOL:: var_is_introduced ;
var bool: aux706_BOOL:: var_is_introduced ;
var 2..44: aux707:: var_is_introduced ;
var bool: aux708_BOOL:: var_is_introduced ;
var bool: aux709_BOOL:: var_is_introduced ;
var bool: aux710_BOOL:: var_is_introduced ;
var {0,1}: aux710_INTEGER :: var_is_introduced ;
var bool: aux711_BOOL:: var_is_introduced ;
var bool: aux712_BOOL:: var_is_introduced ;
var 3..45: aux713:: var_is_introduced ;
var bool: aux714_BOOL:: var_is_introduced ;
var bool: aux715_BOOL:: var_is_introduced ;
var bool: aux716_BOOL:: var_is_introduced ;
var {0,1}: aux716_INTEGER :: var_is_introduced ;
var bool: aux717_BOOL:: var_is_introduced ;
var bool: aux718_BOOL:: var_is_introduced ;
var 2..44: aux719:: var_is_introduced ;
var bool: aux720_BOOL:: var_is_introduced ;
var bool: aux721_BOOL:: var_is_introduced ;
var bool: aux722_BOOL:: var_is_introduced ;
var {0,1}: aux722_INTEGER :: var_is_introduced ;
var bool: aux723_BOOL:: var_is_introduced ;
var bool: aux724_BOOL:: var_is_introduced ;
var 3..45: aux725:: var_is_introduced ;
var bool: aux726_BOOL:: var_is_introduced ;
var bool: aux727_BOOL:: var_is_introduced ;
var bool: aux728_BOOL:: var_is_introduced ;
var {0,1}: aux728_INTEGER :: var_is_introduced ;
var bool: aux729_BOOL:: var_is_introduced ;
var bool: aux730_BOOL:: var_is_introduced ;
var 2..44: aux731:: var_is_introduced ;
var bool: aux732_BOOL:: var_is_introduced ;
var bool: aux733_BOOL:: var_is_introduced ;
var bool: aux734_BOOL:: var_is_introduced ;
var {0,1}: aux734_INTEGER :: var_is_introduced ;
var bool: aux735_BOOL:: var_is_introduced ;
var bool: aux736_BOOL:: var_is_introduced ;
var 1..43: aux737:: var_is_introduced ;
var bool: aux738_BOOL:: var_is_introduced ;
var bool: aux739_BOOL:: var_is_introduced ;
var bool: aux740_BOOL:: var_is_introduced ;
var {0,1}: aux740_INTEGER :: var_is_introduced ;
var bool: aux741_BOOL:: var_is_introduced ;
var bool: aux742_BOOL:: var_is_introduced ;
var 2..44: aux743:: var_is_introduced ;
var bool: aux744_BOOL:: var_is_introduced ;
var bool: aux745_BOOL:: var_is_introduced ;
var bool: aux746_BOOL:: var_is_introduced ;
var {0,1}: aux746_INTEGER :: var_is_introduced ;
var bool: aux747_BOOL:: var_is_introduced ;
var bool: aux748_BOOL:: var_is_introduced ;
var 1..43: aux749:: var_is_introduced ;
var bool: aux750_BOOL:: var_is_introduced ;
var bool: aux751_BOOL:: var_is_introduced ;
var bool: aux752_BOOL:: var_is_introduced ;
var {0,1}: aux752_INTEGER :: var_is_introduced ;
var bool: aux753_BOOL:: var_is_introduced ;
var bool: aux754_BOOL:: var_is_introduced ;
var 2..44: aux755:: var_is_introduced ;
var bool: aux756_BOOL:: var_is_introduced ;
var bool: aux757_BOOL:: var_is_introduced ;
var bool: aux758_BOOL:: var_is_introduced ;
var {0,1}: aux758_INTEGER :: var_is_introduced ;
var bool: aux759_BOOL:: var_is_introduced ;
var bool: aux760_BOOL:: var_is_introduced ;
var 2..44: aux761:: var_is_introduced ;
var bool: aux762_BOOL:: var_is_introduced ;
var bool: aux763_BOOL:: var_is_introduced ;
var bool: aux764_BOOL:: var_is_introduced ;
var {0,1}: aux764_INTEGER :: var_is_introduced ;
var bool: aux765_BOOL:: var_is_introduced ;
var bool: aux766_BOOL:: var_is_introduced ;
var 1..43: aux767:: var_is_introduced ;
var bool: aux768_BOOL:: var_is_introduced ;
var bool: aux769_BOOL:: var_is_introduced ;
var bool: aux770_BOOL:: var_is_introduced ;
var {0,1}: aux770_INTEGER :: var_is_introduced ;
var bool: aux771_BOOL:: var_is_introduced ;
var bool: aux772_BOOL:: var_is_introduced ;
var 2..44: aux773:: var_is_introduced ;
var bool: aux774_BOOL:: var_is_introduced ;
var bool: aux775_BOOL:: var_is_introduced ;
var bool: aux776_BOOL:: var_is_introduced ;
var {0,1}: aux776_INTEGER :: var_is_introduced ;
var bool: aux777_BOOL:: var_is_introduced ;
var bool: aux778_BOOL:: var_is_introduced ;
var 4..46: aux779:: var_is_introduced ;
var bool: aux780_BOOL:: var_is_introduced ;
var bool: aux781_BOOL:: var_is_introduced ;
var bool: aux782_BOOL:: var_is_introduced ;
var {0,1}: aux782_INTEGER :: var_is_introduced ;
var bool: aux783_BOOL:: var_is_introduced ;
var bool: aux784_BOOL:: var_is_introduced ;
var 1..43: aux785:: var_is_introduced ;
var bool: aux786_BOOL:: var_is_introduced ;
var bool: aux787_BOOL:: var_is_introduced ;
var bool: aux788_BOOL:: var_is_introduced ;
var {0,1}: aux788_INTEGER :: var_is_introduced ;
var bool: aux789_BOOL:: var_is_introduced ;
var bool: aux790_BOOL:: var_is_introduced ;
var 3..45: aux791:: var_is_introduced ;
var bool: aux792_BOOL:: var_is_introduced ;
var bool: aux793_BOOL:: var_is_introduced ;
var bool: aux794_BOOL:: var_is_introduced ;
var {0,1}: aux794_INTEGER :: var_is_introduced ;
var bool: aux795_BOOL:: var_is_introduced ;
var bool: aux796_BOOL:: var_is_introduced ;
var 3..45: aux797:: var_is_introduced ;
var bool: aux798_BOOL:: var_is_introduced ;
var bool: aux799_BOOL:: var_is_introduced ;
var bool: aux800_BOOL:: var_is_introduced ;
var {0,1}: aux800_INTEGER :: var_is_introduced ;
var bool: aux801_BOOL:: var_is_introduced ;
var bool: aux802_BOOL:: var_is_introduced ;
var 2..44: aux803:: var_is_introduced ;
var bool: aux804_BOOL:: var_is_introduced ;
var bool: aux805_BOOL:: var_is_introduced ;
var bool: aux806_BOOL:: var_is_introduced ;
var {0,1}: aux806_INTEGER :: var_is_introduced ;
var bool: aux807_BOOL:: var_is_introduced ;
var bool: aux808_BOOL:: var_is_introduced ;
var 3..45: aux809:: var_is_introduced ;
var bool: aux810_BOOL:: var_is_introduced ;
var bool: aux811_BOOL:: var_is_introduced ;
var bool: aux812_BOOL:: var_is_introduced ;
var {0,1}: aux812_INTEGER :: var_is_introduced ;
var bool: aux813_BOOL:: var_is_introduced ;
var bool: aux814_BOOL:: var_is_introduced ;
var 3..45: aux815:: var_is_introduced ;
var bool: aux816_BOOL:: var_is_introduced ;
var bool: aux817_BOOL:: var_is_introduced ;
var {0,1}: aux817_INTEGER :: var_is_introduced ;
var bool: aux818_BOOL:: var_is_introduced ;
var bool: aux819_BOOL:: var_is_introduced ;
var 1..43: aux820:: var_is_introduced ;
var bool: aux821_BOOL:: var_is_introduced ;
var bool: aux822_BOOL:: var_is_introduced ;
var bool: aux823_BOOL:: var_is_introduced ;
var {0,1}: aux823_INTEGER :: var_is_introduced ;
var bool: aux824_BOOL:: var_is_introduced ;
var bool: aux825_BOOL:: var_is_introduced ;
var 2..44: aux826:: var_is_introduced ;
var bool: aux827_BOOL:: var_is_introduced ;
var bool: aux828_BOOL:: var_is_introduced ;
var bool: aux829_BOOL:: var_is_introduced ;
var {0,1}: aux829_INTEGER :: var_is_introduced ;
var bool: aux830_BOOL:: var_is_introduced ;
var bool: aux831_BOOL:: var_is_introduced ;
var 2..44: aux832:: var_is_introduced ;
var bool: aux833_BOOL:: var_is_introduced ;
var bool: aux834_BOOL:: var_is_introduced ;
var bool: aux835_BOOL:: var_is_introduced ;
var {0,1}: aux835_INTEGER :: var_is_introduced ;
var bool: aux836_BOOL:: var_is_introduced ;
var bool: aux837_BOOL:: var_is_introduced ;
var 2..44: aux838:: var_is_introduced ;
var bool: aux839_BOOL:: var_is_introduced ;
var bool: aux840_BOOL:: var_is_introduced ;
var bool: aux841_BOOL:: var_is_introduced ;
var {0,1}: aux841_INTEGER :: var_is_introduced ;
var bool: aux842_BOOL:: var_is_introduced ;
var bool: aux843_BOOL:: var_is_introduced ;
var 3..45: aux844:: var_is_introduced ;
var bool: aux845_BOOL:: var_is_introduced ;
var bool: aux846_BOOL:: var_is_introduced ;
var bool: aux847_BOOL:: var_is_introduced ;
var {0,1}: aux847_INTEGER :: var_is_introduced ;
var bool: aux848_BOOL:: var_is_introduced ;
var bool: aux849_BOOL:: var_is_introduced ;
var 2..44: aux850:: var_is_introduced ;
var bool: aux851_BOOL:: var_is_introduced ;
var bool: aux852_BOOL:: var_is_introduced ;
var bool: aux853_BOOL:: var_is_introduced ;
var {0,1}: aux853_INTEGER :: var_is_introduced ;
var bool: aux854_BOOL:: var_is_introduced ;
var bool: aux855_BOOL:: var_is_introduced ;
var 1..43: aux856:: var_is_introduced ;
var bool: aux857_BOOL:: var_is_introduced ;
var bool: aux858_BOOL:: var_is_introduced ;
var bool: aux859_BOOL:: var_is_introduced ;
var {0,1}: aux859_INTEGER :: var_is_introduced ;
var bool: aux860_BOOL:: var_is_introduced ;
var bool: aux861_BOOL:: var_is_introduced ;
var 2..44: aux862:: var_is_introduced ;
var bool: aux863_BOOL:: var_is_introduced ;
var bool: aux864_BOOL:: var_is_introduced ;
var bool: aux865_BOOL:: var_is_introduced ;
var {0,1}: aux865_INTEGER :: var_is_introduced ;
var bool: aux866_BOOL:: var_is_introduced ;
var bool: aux867_BOOL:: var_is_introduced ;
var 1..43: aux868:: var_is_introduced ;
var bool: aux869_BOOL:: var_is_introduced ;
var bool: aux870_BOOL:: var_is_introduced ;
var bool: aux871_BOOL:: var_is_introduced ;
var {0,1}: aux871_INTEGER :: var_is_introduced ;
var bool: aux872_BOOL:: var_is_introduced ;
var bool: aux873_BOOL:: var_is_introduced ;
var 2..44: aux874:: var_is_introduced ;
var bool: aux875_BOOL:: var_is_introduced ;
var bool: aux876_BOOL:: var_is_introduced ;
var bool: aux877_BOOL:: var_is_introduced ;
var {0,1}: aux877_INTEGER :: var_is_introduced ;
var bool: aux878_BOOL:: var_is_introduced ;
var bool: aux879_BOOL:: var_is_introduced ;
var 2..44: aux880:: var_is_introduced ;
var bool: aux881_BOOL:: var_is_introduced ;
var bool: aux882_BOOL:: var_is_introduced ;
var bool: aux883_BOOL:: var_is_introduced ;
var {0,1}: aux883_INTEGER :: var_is_introduced ;
var bool: aux884_BOOL:: var_is_introduced ;
var bool: aux885_BOOL:: var_is_introduced ;
var 1..43: aux886:: var_is_introduced ;
var bool: aux887_BOOL:: var_is_introduced ;
var bool: aux888_BOOL:: var_is_introduced ;
var bool: aux889_BOOL:: var_is_introduced ;
var {0,1}: aux889_INTEGER :: var_is_introduced ;
var bool: aux890_BOOL:: var_is_introduced ;
var bool: aux891_BOOL:: var_is_introduced ;
var 2..44: aux892:: var_is_introduced ;
var bool: aux893_BOOL:: var_is_introduced ;
var bool: aux894_BOOL:: var_is_introduced ;
var bool: aux895_BOOL:: var_is_introduced ;
var {0,1}: aux895_INTEGER :: var_is_introduced ;
var bool: aux896_BOOL:: var_is_introduced ;
var bool: aux897_BOOL:: var_is_introduced ;
var 4..46: aux898:: var_is_introduced ;
var bool: aux899_BOOL:: var_is_introduced ;
var bool: aux900_BOOL:: var_is_introduced ;
var bool: aux901_BOOL:: var_is_introduced ;
var {0,1}: aux901_INTEGER :: var_is_introduced ;
var bool: aux902_BOOL:: var_is_introduced ;
var bool: aux903_BOOL:: var_is_introduced ;
var 1..43: aux904:: var_is_introduced ;
var bool: aux905_BOOL:: var_is_introduced ;
var bool: aux906_BOOL:: var_is_introduced ;
var bool: aux907_BOOL:: var_is_introduced ;
var {0,1}: aux907_INTEGER :: var_is_introduced ;
var bool: aux908_BOOL:: var_is_introduced ;
var bool: aux909_BOOL:: var_is_introduced ;
var 3..45: aux910:: var_is_introduced ;
var bool: aux911_BOOL:: var_is_introduced ;
var bool: aux912_BOOL:: var_is_introduced ;
var bool: aux913_BOOL:: var_is_introduced ;
var {0,1}: aux913_INTEGER :: var_is_introduced ;
var bool: aux914_BOOL:: var_is_introduced ;
var bool: aux915_BOOL:: var_is_introduced ;
var 3..45: aux916:: var_is_introduced ;
var bool: aux917_BOOL:: var_is_introduced ;
var bool: aux918_BOOL:: var_is_introduced ;
var bool: aux919_BOOL:: var_is_introduced ;
var {0,1}: aux919_INTEGER :: var_is_introduced ;
var bool: aux920_BOOL:: var_is_introduced ;
var bool: aux921_BOOL:: var_is_introduced ;
var 2..44: aux922:: var_is_introduced ;
var bool: aux923_BOOL:: var_is_introduced ;
var bool: aux924_BOOL:: var_is_introduced ;
var bool: aux925_BOOL:: var_is_introduced ;
var {0,1}: aux925_INTEGER :: var_is_introduced ;
var bool: aux926_BOOL:: var_is_introduced ;
var bool: aux927_BOOL:: var_is_introduced ;
var 3..45: aux928:: var_is_introduced ;
var bool: aux929_BOOL:: var_is_introduced ;
var bool: aux930_BOOL:: var_is_introduced ;
var bool: aux931_BOOL:: var_is_introduced ;
var {0,1}: aux931_INTEGER :: var_is_introduced ;
var bool: aux932_BOOL:: var_is_introduced ;
var bool: aux933_BOOL:: var_is_introduced ;
var 3..45: aux934:: var_is_introduced ;
var bool: aux935_BOOL:: var_is_introduced ;
var bool: aux936_BOOL:: var_is_introduced ;
var {0,1}: aux936_INTEGER :: var_is_introduced ;
var bool: aux937_BOOL:: var_is_introduced ;
var bool: aux938_BOOL:: var_is_introduced ;
var 1..43: aux939:: var_is_introduced ;
var bool: aux940_BOOL:: var_is_introduced ;
var bool: aux941_BOOL:: var_is_introduced ;
var bool: aux942_BOOL:: var_is_introduced ;
var {0,1}: aux942_INTEGER :: var_is_introduced ;
var bool: aux943_BOOL:: var_is_introduced ;
var bool: aux944_BOOL:: var_is_introduced ;
var 2..44: aux945:: var_is_introduced ;
var bool: aux946_BOOL:: var_is_introduced ;
var bool: aux947_BOOL:: var_is_introduced ;
var bool: aux948_BOOL:: var_is_introduced ;
var {0,1}: aux948_INTEGER :: var_is_introduced ;
var bool: aux949_BOOL:: var_is_introduced ;
var bool: aux950_BOOL:: var_is_introduced ;
var 3..45: aux951:: var_is_introduced ;
var bool: aux952_BOOL:: var_is_introduced ;
var bool: aux953_BOOL:: var_is_introduced ;
var bool: aux954_BOOL:: var_is_introduced ;
var {0,1}: aux954_INTEGER :: var_is_introduced ;
var bool: aux955_BOOL:: var_is_introduced ;
var bool: aux956_BOOL:: var_is_introduced ;
var 2..44: aux957:: var_is_introduced ;
var bool: aux958_BOOL:: var_is_introduced ;
var bool: aux959_BOOL:: var_is_introduced ;
var bool: aux960_BOOL:: var_is_introduced ;
var {0,1}: aux960_INTEGER :: var_is_introduced ;
var bool: aux961_BOOL:: var_is_introduced ;
var bool: aux962_BOOL:: var_is_introduced ;
var 2..44: aux963:: var_is_introduced ;
var bool: aux964_BOOL:: var_is_introduced ;
var bool: aux965_BOOL:: var_is_introduced ;
var bool: aux966_BOOL:: var_is_introduced ;
var {0,1}: aux966_INTEGER :: var_is_introduced ;
var bool: aux967_BOOL:: var_is_introduced ;
var bool: aux968_BOOL:: var_is_introduced ;
var 3..45: aux969:: var_is_introduced ;
var bool: aux970_BOOL:: var_is_introduced ;
var bool: aux971_BOOL:: var_is_introduced ;
var bool: aux972_BOOL:: var_is_introduced ;
var {0,1}: aux972_INTEGER :: var_is_introduced ;
var bool: aux973_BOOL:: var_is_introduced ;
var bool: aux974_BOOL:: var_is_introduced ;
var 2..44: aux975:: var_is_introduced ;
var bool: aux976_BOOL:: var_is_introduced ;
var bool: aux977_BOOL:: var_is_introduced ;
var bool: aux978_BOOL:: var_is_introduced ;
var {0,1}: aux978_INTEGER :: var_is_introduced ;
var bool: aux979_BOOL:: var_is_introduced ;
var bool: aux980_BOOL:: var_is_introduced ;
var 1..43: aux981:: var_is_introduced ;
var bool: aux982_BOOL:: var_is_introduced ;
var bool: aux983_BOOL:: var_is_introduced ;
var bool: aux984_BOOL:: var_is_introduced ;
var {0,1}: aux984_INTEGER :: var_is_introduced ;
var bool: aux985_BOOL:: var_is_introduced ;
var bool: aux986_BOOL:: var_is_introduced ;
var 2..44: aux987:: var_is_introduced ;
var bool: aux988_BOOL:: var_is_introduced ;
var bool: aux989_BOOL:: var_is_introduced ;
var bool: aux990_BOOL:: var_is_introduced ;
var {0,1}: aux990_INTEGER :: var_is_introduced ;
var bool: aux991_BOOL:: var_is_introduced ;
var bool: aux992_BOOL:: var_is_introduced ;
var 1..43: aux993:: var_is_introduced ;
var bool: aux994_BOOL:: var_is_introduced ;
var bool: aux995_BOOL:: var_is_introduced ;
var bool: aux996_BOOL:: var_is_introduced ;
var {0,1}: aux996_INTEGER :: var_is_introduced ;
var bool: aux997_BOOL:: var_is_introduced ;
var bool: aux998_BOOL:: var_is_introduced ;
var 2..44: aux999:: var_is_introduced ;
var bool: aux1000_BOOL:: var_is_introduced ;
var bool: aux1001_BOOL:: var_is_introduced ;
var bool: aux1002_BOOL:: var_is_introduced ;
var {0,1}: aux1002_INTEGER :: var_is_introduced ;
var bool: aux1003_BOOL:: var_is_introduced ;
var bool: aux1004_BOOL:: var_is_introduced ;
var 2..44: aux1005:: var_is_introduced ;
var bool: aux1006_BOOL:: var_is_introduced ;
var bool: aux1007_BOOL:: var_is_introduced ;
var bool: aux1008_BOOL:: var_is_introduced ;
var {0,1}: aux1008_INTEGER :: var_is_introduced ;
var bool: aux1009_BOOL:: var_is_introduced ;
var bool: aux1010_BOOL:: var_is_introduced ;
var 1..43: aux1011:: var_is_introduced ;
var bool: aux1012_BOOL:: var_is_introduced ;
var bool: aux1013_BOOL:: var_is_introduced ;
var bool: aux1014_BOOL:: var_is_introduced ;
var {0,1}: aux1014_INTEGER :: var_is_introduced ;
var bool: aux1015_BOOL:: var_is_introduced ;
var bool: aux1016_BOOL:: var_is_introduced ;
var 4..46: aux1017:: var_is_introduced ;
var bool: aux1018_BOOL:: var_is_introduced ;
var bool: aux1019_BOOL:: var_is_introduced ;
var bool: aux1020_BOOL:: var_is_introduced ;
var {0,1}: aux1020_INTEGER :: var_is_introduced ;
var bool: aux1021_BOOL:: var_is_introduced ;
var bool: aux1022_BOOL:: var_is_introduced ;
var 2..44: aux1023:: var_is_introduced ;
var bool: aux1024_BOOL:: var_is_introduced ;
var bool: aux1025_BOOL:: var_is_introduced ;
var bool: aux1026_BOOL:: var_is_introduced ;
var {0,1}: aux1026_INTEGER :: var_is_introduced ;
var bool: aux1027_BOOL:: var_is_introduced ;
var bool: aux1028_BOOL:: var_is_introduced ;
var 3..45: aux1029:: var_is_introduced ;
var bool: aux1030_BOOL:: var_is_introduced ;
var bool: aux1031_BOOL:: var_is_introduced ;
var bool: aux1032_BOOL:: var_is_introduced ;
var {0,1}: aux1032_INTEGER :: var_is_introduced ;
var bool: aux1033_BOOL:: var_is_introduced ;
var bool: aux1034_BOOL:: var_is_introduced ;
var 1..43: aux1035:: var_is_introduced ;
var bool: aux1036_BOOL:: var_is_introduced ;
var bool: aux1037_BOOL:: var_is_introduced ;
var bool: aux1038_BOOL:: var_is_introduced ;
var {0,1}: aux1038_INTEGER :: var_is_introduced ;
var bool: aux1039_BOOL:: var_is_introduced ;
var bool: aux1040_BOOL:: var_is_introduced ;
var 3..45: aux1041:: var_is_introduced ;
var bool: aux1042_BOOL:: var_is_introduced ;
var bool: aux1043_BOOL:: var_is_introduced ;
var bool: aux1044_BOOL:: var_is_introduced ;
var {0,1}: aux1044_INTEGER :: var_is_introduced ;
var bool: aux1045_BOOL:: var_is_introduced ;
var bool: aux1046_BOOL:: var_is_introduced ;
var 2..44: aux1047:: var_is_introduced ;
var bool: aux1048_BOOL:: var_is_introduced ;
var bool: aux1049_BOOL:: var_is_introduced ;
var bool: aux1050_BOOL:: var_is_introduced ;
var {0,1}: aux1050_INTEGER :: var_is_introduced ;
var bool: aux1051_BOOL:: var_is_introduced ;
var bool: aux1052_BOOL:: var_is_introduced ;
var 3..45: aux1053:: var_is_introduced ;
var bool: aux1054_BOOL:: var_is_introduced ;
var bool: aux1055_BOOL:: var_is_introduced ;
var {0,1}: aux1055_INTEGER :: var_is_introduced ;
var bool: aux1056_BOOL:: var_is_introduced ;
var bool: aux1057_BOOL:: var_is_introduced ;
var 1..43: aux1058:: var_is_introduced ;
var bool: aux1059_BOOL:: var_is_introduced ;
var bool: aux1060_BOOL:: var_is_introduced ;
var bool: aux1061_BOOL:: var_is_introduced ;
var {0,1}: aux1061_INTEGER :: var_is_introduced ;
var bool: aux1062_BOOL:: var_is_introduced ;
var bool: aux1063_BOOL:: var_is_introduced ;
var 2..44: aux1064:: var_is_introduced ;
var bool: aux1065_BOOL:: var_is_introduced ;
var bool: aux1066_BOOL:: var_is_introduced ;
var bool: aux1067_BOOL:: var_is_introduced ;
var {0,1}: aux1067_INTEGER :: var_is_introduced ;
var bool: aux1068_BOOL:: var_is_introduced ;
var bool: aux1069_BOOL:: var_is_introduced ;
var 3..45: aux1070:: var_is_introduced ;
var bool: aux1071_BOOL:: var_is_introduced ;
var bool: aux1072_BOOL:: var_is_introduced ;
var bool: aux1073_BOOL:: var_is_introduced ;
var {0,1}: aux1073_INTEGER :: var_is_introduced ;
var bool: aux1074_BOOL:: var_is_introduced ;
var bool: aux1075_BOOL:: var_is_introduced ;
var 2..44: aux1076:: var_is_introduced ;
var bool: aux1077_BOOL:: var_is_introduced ;
var bool: aux1078_BOOL:: var_is_introduced ;
var bool: aux1079_BOOL:: var_is_introduced ;
var {0,1}: aux1079_INTEGER :: var_is_introduced ;
var bool: aux1080_BOOL:: var_is_introduced ;
var bool: aux1081_BOOL:: var_is_introduced ;
var 2..44: aux1082:: var_is_introduced ;
var bool: aux1083_BOOL:: var_is_introduced ;
var bool: aux1084_BOOL:: var_is_introduced ;
var bool: aux1085_BOOL:: var_is_introduced ;
var {0,1}: aux1085_INTEGER :: var_is_introduced ;
var bool: aux1086_BOOL:: var_is_introduced ;
var bool: aux1087_BOOL:: var_is_introduced ;
var 3..45: aux1088:: var_is_introduced ;
var bool: aux1089_BOOL:: var_is_introduced ;
var bool: aux1090_BOOL:: var_is_introduced ;
var bool: aux1091_BOOL:: var_is_introduced ;
var {0,1}: aux1091_INTEGER :: var_is_introduced ;
var bool: aux1092_BOOL:: var_is_introduced ;
var bool: aux1093_BOOL:: var_is_introduced ;
var 2..44: aux1094:: var_is_introduced ;
var bool: aux1095_BOOL:: var_is_introduced ;
var bool: aux1096_BOOL:: var_is_introduced ;
var bool: aux1097_BOOL:: var_is_introduced ;
var {0,1}: aux1097_INTEGER :: var_is_introduced ;
var bool: aux1098_BOOL:: var_is_introduced ;
var bool: aux1099_BOOL:: var_is_introduced ;
var 1..43: aux1100:: var_is_introduced ;
var bool: aux1101_BOOL:: var_is_introduced ;
var bool: aux1102_BOOL:: var_is_introduced ;
var bool: aux1103_BOOL:: var_is_introduced ;
var {0,1}: aux1103_INTEGER :: var_is_introduced ;
var bool: aux1104_BOOL:: var_is_introduced ;
var bool: aux1105_BOOL:: var_is_introduced ;
var 2..44: aux1106:: var_is_introduced ;
var bool: aux1107_BOOL:: var_is_introduced ;
var bool: aux1108_BOOL:: var_is_introduced ;
var bool: aux1109_BOOL:: var_is_introduced ;
var {0,1}: aux1109_INTEGER :: var_is_introduced ;
var bool: aux1110_BOOL:: var_is_introduced ;
var bool: aux1111_BOOL:: var_is_introduced ;
var 1..43: aux1112:: var_is_introduced ;
var bool: aux1113_BOOL:: var_is_introduced ;
var bool: aux1114_BOOL:: var_is_introduced ;
var bool: aux1115_BOOL:: var_is_introduced ;
var {0,1}: aux1115_INTEGER :: var_is_introduced ;
var bool: aux1116_BOOL:: var_is_introduced ;
var bool: aux1117_BOOL:: var_is_introduced ;
var 2..44: aux1118:: var_is_introduced ;
var bool: aux1119_BOOL:: var_is_introduced ;
var bool: aux1120_BOOL:: var_is_introduced ;
var bool: aux1121_BOOL:: var_is_introduced ;
var {0,1}: aux1121_INTEGER :: var_is_introduced ;
var bool: aux1122_BOOL:: var_is_introduced ;
var bool: aux1123_BOOL:: var_is_introduced ;
var 2..44: aux1124:: var_is_introduced ;
var bool: aux1125_BOOL:: var_is_introduced ;
var bool: aux1126_BOOL:: var_is_introduced ;
var bool: aux1127_BOOL:: var_is_introduced ;
var {0,1}: aux1127_INTEGER :: var_is_introduced ;
var bool: aux1128_BOOL:: var_is_introduced ;
var bool: aux1129_BOOL:: var_is_introduced ;
var 1..43: aux1130:: var_is_introduced ;
var bool: aux1131_BOOL:: var_is_introduced ;
var bool: aux1132_BOOL:: var_is_introduced ;
var bool: aux1133_BOOL:: var_is_introduced ;
var {0,1}: aux1133_INTEGER :: var_is_introduced ;
var bool: aux1134_BOOL:: var_is_introduced ;
var bool: aux1135_BOOL:: var_is_introduced ;
var 4..46: aux1136:: var_is_introduced ;
var bool: aux1137_BOOL:: var_is_introduced ;
var bool: aux1138_BOOL:: var_is_introduced ;
var bool: aux1139_BOOL:: var_is_introduced ;
var {0,1}: aux1139_INTEGER :: var_is_introduced ;
var bool: aux1140_BOOL:: var_is_introduced ;
var bool: aux1141_BOOL:: var_is_introduced ;
var 2..44: aux1142:: var_is_introduced ;
var bool: aux1143_BOOL:: var_is_introduced ;
var bool: aux1144_BOOL:: var_is_introduced ;
var bool: aux1145_BOOL:: var_is_introduced ;
var {0,1}: aux1145_INTEGER :: var_is_introduced ;
var bool: aux1146_BOOL:: var_is_introduced ;
var bool: aux1147_BOOL:: var_is_introduced ;
var 3..45: aux1148:: var_is_introduced ;
var bool: aux1149_BOOL:: var_is_introduced ;
var bool: aux1150_BOOL:: var_is_introduced ;
var bool: aux1151_BOOL:: var_is_introduced ;
var {0,1}: aux1151_INTEGER :: var_is_introduced ;
var bool: aux1152_BOOL:: var_is_introduced ;
var bool: aux1153_BOOL:: var_is_introduced ;
var 1..43: aux1154:: var_is_introduced ;
var bool: aux1155_BOOL:: var_is_introduced ;
var bool: aux1156_BOOL:: var_is_introduced ;
var bool: aux1157_BOOL:: var_is_introduced ;
var {0,1}: aux1157_INTEGER :: var_is_introduced ;
var bool: aux1158_BOOL:: var_is_introduced ;
var bool: aux1159_BOOL:: var_is_introduced ;
var 2..44: aux1160:: var_is_introduced ;
var bool: aux1161_BOOL:: var_is_introduced ;
var bool: aux1162_BOOL:: var_is_introduced ;
var bool: aux1163_BOOL:: var_is_introduced ;
var {0,1}: aux1163_INTEGER :: var_is_introduced ;
var bool: aux1164_BOOL:: var_is_introduced ;
var bool: aux1165_BOOL:: var_is_introduced ;
var 3..45: aux1166:: var_is_introduced ;
var bool: aux1167_BOOL:: var_is_introduced ;
var bool: aux1168_BOOL:: var_is_introduced ;
var bool: aux1169_BOOL:: var_is_introduced ;
var {0,1}: aux1169_INTEGER :: var_is_introduced ;
var bool: aux1170_BOOL:: var_is_introduced ;
var bool: aux1171_BOOL:: var_is_introduced ;
var 1..43: aux1172:: var_is_introduced ;
var bool: aux1173_BOOL:: var_is_introduced ;
var bool: aux1174_BOOL:: var_is_introduced ;
var {0,1}: aux1174_INTEGER :: var_is_introduced ;
var bool: aux1175_BOOL:: var_is_introduced ;
var bool: aux1176_BOOL:: var_is_introduced ;
var 1..43: aux1177:: var_is_introduced ;
var bool: aux1178_BOOL:: var_is_introduced ;
var bool: aux1179_BOOL:: var_is_introduced ;
var bool: aux1180_BOOL:: var_is_introduced ;
var {0,1}: aux1180_INTEGER :: var_is_introduced ;
var bool: aux1181_BOOL:: var_is_introduced ;
var bool: aux1182_BOOL:: var_is_introduced ;
var 2..44: aux1183:: var_is_introduced ;
var bool: aux1184_BOOL:: var_is_introduced ;
var bool: aux1185_BOOL:: var_is_introduced ;
var bool: aux1186_BOOL:: var_is_introduced ;
var {0,1}: aux1186_INTEGER :: var_is_introduced ;
var bool: aux1187_BOOL:: var_is_introduced ;
var bool: aux1188_BOOL:: var_is_introduced ;
var 3..45: aux1189:: var_is_introduced ;
var bool: aux1190_BOOL:: var_is_introduced ;
var bool: aux1191_BOOL:: var_is_introduced ;
var bool: aux1192_BOOL:: var_is_introduced ;
var {0,1}: aux1192_INTEGER :: var_is_introduced ;
var bool: aux1193_BOOL:: var_is_introduced ;
var bool: aux1194_BOOL:: var_is_introduced ;
var 2..44: aux1195:: var_is_introduced ;
var bool: aux1196_BOOL:: var_is_introduced ;
var bool: aux1197_BOOL:: var_is_introduced ;
var bool: aux1198_BOOL:: var_is_introduced ;
var {0,1}: aux1198_INTEGER :: var_is_introduced ;
var bool: aux1199_BOOL:: var_is_introduced ;
var bool: aux1200_BOOL:: var_is_introduced ;
var 2..44: aux1201:: var_is_introduced ;
var bool: aux1202_BOOL:: var_is_introduced ;
var bool: aux1203_BOOL:: var_is_introduced ;
var bool: aux1204_BOOL:: var_is_introduced ;
var {0,1}: aux1204_INTEGER :: var_is_introduced ;
var bool: aux1205_BOOL:: var_is_introduced ;
var bool: aux1206_BOOL:: var_is_introduced ;
var 3..45: aux1207:: var_is_introduced ;
var bool: aux1208_BOOL:: var_is_introduced ;
var bool: aux1209_BOOL:: var_is_introduced ;
var bool: aux1210_BOOL:: var_is_introduced ;
var {0,1}: aux1210_INTEGER :: var_is_introduced ;
var bool: aux1211_BOOL:: var_is_introduced ;
var bool: aux1212_BOOL:: var_is_introduced ;
var 2..44: aux1213:: var_is_introduced ;
var bool: aux1214_BOOL:: var_is_introduced ;
var bool: aux1215_BOOL:: var_is_introduced ;
var bool: aux1216_BOOL:: var_is_introduced ;
var {0,1}: aux1216_INTEGER :: var_is_introduced ;
var bool: aux1217_BOOL:: var_is_introduced ;
var bool: aux1218_BOOL:: var_is_introduced ;
var 1..43: aux1219:: var_is_introduced ;
var bool: aux1220_BOOL:: var_is_introduced ;
var bool: aux1221_BOOL:: var_is_introduced ;
var bool: aux1222_BOOL:: var_is_introduced ;
var {0,1}: aux1222_INTEGER :: var_is_introduced ;
var bool: aux1223_BOOL:: var_is_introduced ;
var bool: aux1224_BOOL:: var_is_introduced ;
var 2..44: aux1225:: var_is_introduced ;
var bool: aux1226_BOOL:: var_is_introduced ;
var bool: aux1227_BOOL:: var_is_introduced ;
var bool: aux1228_BOOL:: var_is_introduced ;
var {0,1}: aux1228_INTEGER :: var_is_introduced ;
var bool: aux1229_BOOL:: var_is_introduced ;
var bool: aux1230_BOOL:: var_is_introduced ;
var 2..44: aux1231:: var_is_introduced ;
var bool: aux1232_BOOL:: var_is_introduced ;
var bool: aux1233_BOOL:: var_is_introduced ;
var bool: aux1234_BOOL:: var_is_introduced ;
var {0,1}: aux1234_INTEGER :: var_is_introduced ;
var bool: aux1235_BOOL:: var_is_introduced ;
var bool: aux1236_BOOL:: var_is_introduced ;
var 2..44: aux1237:: var_is_introduced ;
var bool: aux1238_BOOL:: var_is_introduced ;
var bool: aux1239_BOOL:: var_is_introduced ;
var bool: aux1240_BOOL:: var_is_introduced ;
var {0,1}: aux1240_INTEGER :: var_is_introduced ;
var bool: aux1241_BOOL:: var_is_introduced ;
var bool: aux1242_BOOL:: var_is_introduced ;
var 1..43: aux1243:: var_is_introduced ;
var bool: aux1244_BOOL:: var_is_introduced ;
var bool: aux1245_BOOL:: var_is_introduced ;
var bool: aux1246_BOOL:: var_is_introduced ;
var {0,1}: aux1246_INTEGER :: var_is_introduced ;
var bool: aux1247_BOOL:: var_is_introduced ;
var bool: aux1248_BOOL:: var_is_introduced ;
var 2..44: aux1249:: var_is_introduced ;
var bool: aux1250_BOOL:: var_is_introduced ;
var bool: aux1251_BOOL:: var_is_introduced ;
var bool: aux1252_BOOL:: var_is_introduced ;
var {0,1}: aux1252_INTEGER :: var_is_introduced ;
var bool: aux1253_BOOL:: var_is_introduced ;
var bool: aux1254_BOOL:: var_is_introduced ;
var 4..46: aux1255:: var_is_introduced ;
var bool: aux1256_BOOL:: var_is_introduced ;
var bool: aux1257_BOOL:: var_is_introduced ;
var bool: aux1258_BOOL:: var_is_introduced ;
var {0,1}: aux1258_INTEGER :: var_is_introduced ;
var bool: aux1259_BOOL:: var_is_introduced ;
var bool: aux1260_BOOL:: var_is_introduced ;
var 1..43: aux1261:: var_is_introduced ;
var bool: aux1262_BOOL:: var_is_introduced ;
var bool: aux1263_BOOL:: var_is_introduced ;
var bool: aux1264_BOOL:: var_is_introduced ;
var {0,1}: aux1264_INTEGER :: var_is_introduced ;
var bool: aux1265_BOOL:: var_is_introduced ;
var bool: aux1266_BOOL:: var_is_introduced ;
var 3..45: aux1267:: var_is_introduced ;
var bool: aux1268_BOOL:: var_is_introduced ;
var bool: aux1269_BOOL:: var_is_introduced ;
var bool: aux1270_BOOL:: var_is_introduced ;
var {0,1}: aux1270_INTEGER :: var_is_introduced ;
var bool: aux1271_BOOL:: var_is_introduced ;
var bool: aux1272_BOOL:: var_is_introduced ;
var 3..45: aux1273:: var_is_introduced ;
var bool: aux1274_BOOL:: var_is_introduced ;
var bool: aux1275_BOOL:: var_is_introduced ;
var bool: aux1276_BOOL:: var_is_introduced ;
var {0,1}: aux1276_INTEGER :: var_is_introduced ;
var bool: aux1277_BOOL:: var_is_introduced ;
var bool: aux1278_BOOL:: var_is_introduced ;
var 2..44: aux1279:: var_is_introduced ;
var bool: aux1280_BOOL:: var_is_introduced ;
var bool: aux1281_BOOL:: var_is_introduced ;
var bool: aux1282_BOOL:: var_is_introduced ;
var {0,1}: aux1282_INTEGER :: var_is_introduced ;
var bool: aux1283_BOOL:: var_is_introduced ;
var bool: aux1284_BOOL:: var_is_introduced ;
var 3..45: aux1285:: var_is_introduced ;
var bool: aux1286_BOOL:: var_is_introduced ;
var bool: aux1287_BOOL:: var_is_introduced ;
var bool: aux1288_BOOL:: var_is_introduced ;
var {0,1}: aux1288_INTEGER :: var_is_introduced ;
var bool: aux1289_BOOL:: var_is_introduced ;
var bool: aux1290_BOOL:: var_is_introduced ;
var 1..43: aux1291:: var_is_introduced ;
var bool: aux1292_BOOL:: var_is_introduced ;
var bool: aux1293_BOOL:: var_is_introduced ;
var {0,1}: aux1293_INTEGER :: var_is_introduced ;
var bool: aux1294_BOOL:: var_is_introduced ;
var bool: aux1295_BOOL:: var_is_introduced ;
var 1..43: aux1296:: var_is_introduced ;
var bool: aux1297_BOOL:: var_is_introduced ;
var bool: aux1298_BOOL:: var_is_introduced ;
var bool: aux1299_BOOL:: var_is_introduced ;
var {0,1}: aux1299_INTEGER :: var_is_introduced ;
var bool: aux1300_BOOL:: var_is_introduced ;
var bool: aux1301_BOOL:: var_is_introduced ;
var 2..44: aux1302:: var_is_introduced ;
var bool: aux1303_BOOL:: var_is_introduced ;
var bool: aux1304_BOOL:: var_is_introduced ;
var bool: aux1305_BOOL:: var_is_introduced ;
var {0,1}: aux1305_INTEGER :: var_is_introduced ;
var bool: aux1306_BOOL:: var_is_introduced ;
var bool: aux1307_BOOL:: var_is_introduced ;
var 3..45: aux1308:: var_is_introduced ;
var bool: aux1309_BOOL:: var_is_introduced ;
var bool: aux1310_BOOL:: var_is_introduced ;
var bool: aux1311_BOOL:: var_is_introduced ;
var {0,1}: aux1311_INTEGER :: var_is_introduced ;
var bool: aux1312_BOOL:: var_is_introduced ;
var bool: aux1313_BOOL:: var_is_introduced ;
var 2..44: aux1314:: var_is_introduced ;
var bool: aux1315_BOOL:: var_is_introduced ;
var bool: aux1316_BOOL:: var_is_introduced ;
var bool: aux1317_BOOL:: var_is_introduced ;
var {0,1}: aux1317_INTEGER :: var_is_introduced ;
var bool: aux1318_BOOL:: var_is_introduced ;
var bool: aux1319_BOOL:: var_is_introduced ;
var 2..44: aux1320:: var_is_introduced ;
var bool: aux1321_BOOL:: var_is_introduced ;
var bool: aux1322_BOOL:: var_is_introduced ;
var bool: aux1323_BOOL:: var_is_introduced ;
var {0,1}: aux1323_INTEGER :: var_is_introduced ;
var bool: aux1324_BOOL:: var_is_introduced ;
var bool: aux1325_BOOL:: var_is_introduced ;
var 3..45: aux1326:: var_is_introduced ;
var bool: aux1327_BOOL:: var_is_introduced ;
var bool: aux1328_BOOL:: var_is_introduced ;
var bool: aux1329_BOOL:: var_is_introduced ;
var {0,1}: aux1329_INTEGER :: var_is_introduced ;
var bool: aux1330_BOOL:: var_is_introduced ;
var bool: aux1331_BOOL:: var_is_introduced ;
var 2..44: aux1332:: var_is_introduced ;
var bool: aux1333_BOOL:: var_is_introduced ;
var bool: aux1334_BOOL:: var_is_introduced ;
var bool: aux1335_BOOL:: var_is_introduced ;
var {0,1}: aux1335_INTEGER :: var_is_introduced ;
var bool: aux1336_BOOL:: var_is_introduced ;
var bool: aux1337_BOOL:: var_is_introduced ;
var 1..43: aux1338:: var_is_introduced ;
var bool: aux1339_BOOL:: var_is_introduced ;
var bool: aux1340_BOOL:: var_is_introduced ;
var bool: aux1341_BOOL:: var_is_introduced ;
var {0,1}: aux1341_INTEGER :: var_is_introduced ;
var bool: aux1342_BOOL:: var_is_introduced ;
var bool: aux1343_BOOL:: var_is_introduced ;
var 2..44: aux1344:: var_is_introduced ;
var bool: aux1345_BOOL:: var_is_introduced ;
var bool: aux1346_BOOL:: var_is_introduced ;
var bool: aux1347_BOOL:: var_is_introduced ;
var {0,1}: aux1347_INTEGER :: var_is_introduced ;
var bool: aux1348_BOOL:: var_is_introduced ;
var bool: aux1349_BOOL:: var_is_introduced ;
var 1..43: aux1350:: var_is_introduced ;
var bool: aux1351_BOOL:: var_is_introduced ;
var bool: aux1352_BOOL:: var_is_introduced ;
var bool: aux1353_BOOL:: var_is_introduced ;
var {0,1}: aux1353_INTEGER :: var_is_introduced ;
var bool: aux1354_BOOL:: var_is_introduced ;
var bool: aux1355_BOOL:: var_is_introduced ;
var 2..44: aux1356:: var_is_introduced ;
var bool: aux1357_BOOL:: var_is_introduced ;
var bool: aux1358_BOOL:: var_is_introduced ;
var bool: aux1359_BOOL:: var_is_introduced ;
var {0,1}: aux1359_INTEGER :: var_is_introduced ;
var bool: aux1360_BOOL:: var_is_introduced ;
var bool: aux1361_BOOL:: var_is_introduced ;
var 2..44: aux1362:: var_is_introduced ;
var bool: aux1363_BOOL:: var_is_introduced ;
var bool: aux1364_BOOL:: var_is_introduced ;
var bool: aux1365_BOOL:: var_is_introduced ;
var {0,1}: aux1365_INTEGER :: var_is_introduced ;
var bool: aux1366_BOOL:: var_is_introduced ;
var bool: aux1367_BOOL:: var_is_introduced ;
var 1..43: aux1368:: var_is_introduced ;
var bool: aux1369_BOOL:: var_is_introduced ;
var bool: aux1370_BOOL:: var_is_introduced ;
var bool: aux1371_BOOL:: var_is_introduced ;
var {0,1}: aux1371_INTEGER :: var_is_introduced ;
var bool: aux1372_BOOL:: var_is_introduced ;
var bool: aux1373_BOOL:: var_is_introduced ;
var 4..46: aux1374:: var_is_introduced ;
var bool: aux1375_BOOL:: var_is_introduced ;
var bool: aux1376_BOOL:: var_is_introduced ;
var bool: aux1377_BOOL:: var_is_introduced ;
var {0,1}: aux1377_INTEGER :: var_is_introduced ;
var bool: aux1378_BOOL:: var_is_introduced ;
var bool: aux1379_BOOL:: var_is_introduced ;
var 2..44: aux1380:: var_is_introduced ;
var bool: aux1381_BOOL:: var_is_introduced ;
var bool: aux1382_BOOL:: var_is_introduced ;
var bool: aux1383_BOOL:: var_is_introduced ;
var {0,1}: aux1383_INTEGER :: var_is_introduced ;
var bool: aux1384_BOOL:: var_is_introduced ;
var bool: aux1385_BOOL:: var_is_introduced ;
var 3..45: aux1386:: var_is_introduced ;
var bool: aux1387_BOOL:: var_is_introduced ;
var bool: aux1388_BOOL:: var_is_introduced ;
var bool: aux1389_BOOL:: var_is_introduced ;
var {0,1}: aux1389_INTEGER :: var_is_introduced ;
var bool: aux1390_BOOL:: var_is_introduced ;
var bool: aux1391_BOOL:: var_is_introduced ;
var 3..45: aux1392:: var_is_introduced ;
var bool: aux1393_BOOL:: var_is_introduced ;
var bool: aux1394_BOOL:: var_is_introduced ;
var bool: aux1395_BOOL:: var_is_introduced ;
var {0,1}: aux1395_INTEGER :: var_is_introduced ;
var bool: aux1396_BOOL:: var_is_introduced ;
var bool: aux1397_BOOL:: var_is_introduced ;
var 2..44: aux1398:: var_is_introduced ;
var bool: aux1399_BOOL:: var_is_introduced ;
var bool: aux1400_BOOL:: var_is_introduced ;
var bool: aux1401_BOOL:: var_is_introduced ;
var {0,1}: aux1401_INTEGER :: var_is_introduced ;
var bool: aux1402_BOOL:: var_is_introduced ;
var bool: aux1403_BOOL:: var_is_introduced ;
var 3..45: aux1404:: var_is_introduced ;
var bool: aux1405_BOOL:: var_is_introduced ;
var bool: aux1406_BOOL:: var_is_introduced ;
var bool: aux1407_BOOL:: var_is_introduced ;
var {0,1}: aux1407_INTEGER :: var_is_introduced ;
var bool: aux1408_BOOL:: var_is_introduced ;
var bool: aux1409_BOOL:: var_is_introduced ;
var 2..44: aux1410:: var_is_introduced ;
var bool: aux1411_BOOL:: var_is_introduced ;
var bool: aux1412_BOOL:: var_is_introduced ;
var {0,1}: aux1412_INTEGER :: var_is_introduced ;
var bool: aux1413_BOOL:: var_is_introduced ;
var bool: aux1414_BOOL:: var_is_introduced ;
var 1..43: aux1415:: var_is_introduced ;
var bool: aux1416_BOOL:: var_is_introduced ;
var bool: aux1417_BOOL:: var_is_introduced ;
var bool: aux1418_BOOL:: var_is_introduced ;
var {0,1}: aux1418_INTEGER :: var_is_introduced ;
var bool: aux1419_BOOL:: var_is_introduced ;
var bool: aux1420_BOOL:: var_is_introduced ;
var 2..44: aux1421:: var_is_introduced ;
var bool: aux1422_BOOL:: var_is_introduced ;
var bool: aux1423_BOOL:: var_is_introduced ;
var bool: aux1424_BOOL:: var_is_introduced ;
var {0,1}: aux1424_INTEGER :: var_is_introduced ;
var bool: aux1425_BOOL:: var_is_introduced ;
var bool: aux1426_BOOL:: var_is_introduced ;
var 3..45: aux1427:: var_is_introduced ;
var bool: aux1428_BOOL:: var_is_introduced ;
var bool: aux1429_BOOL:: var_is_introduced ;
var bool: aux1430_BOOL:: var_is_introduced ;
var {0,1}: aux1430_INTEGER :: var_is_introduced ;
var bool: aux1431_BOOL:: var_is_introduced ;
var bool: aux1432_BOOL:: var_is_introduced ;
var 2..44: aux1433:: var_is_introduced ;
var bool: aux1434_BOOL:: var_is_introduced ;
var bool: aux1435_BOOL:: var_is_introduced ;
var bool: aux1436_BOOL:: var_is_introduced ;
var {0,1}: aux1436_INTEGER :: var_is_introduced ;
var bool: aux1437_BOOL:: var_is_introduced ;
var bool: aux1438_BOOL:: var_is_introduced ;
var 2..44: aux1439:: var_is_introduced ;
var bool: aux1440_BOOL:: var_is_introduced ;
var bool: aux1441_BOOL:: var_is_introduced ;
var bool: aux1442_BOOL:: var_is_introduced ;
var {0,1}: aux1442_INTEGER :: var_is_introduced ;
var bool: aux1443_BOOL:: var_is_introduced ;
var bool: aux1444_BOOL:: var_is_introduced ;
var 3..45: aux1445:: var_is_introduced ;
var bool: aux1446_BOOL:: var_is_introduced ;
var bool: aux1447_BOOL:: var_is_introduced ;
var bool: aux1448_BOOL:: var_is_introduced ;
var {0,1}: aux1448_INTEGER :: var_is_introduced ;
var bool: aux1449_BOOL:: var_is_introduced ;
var bool: aux1450_BOOL:: var_is_introduced ;
var 2..44: aux1451:: var_is_introduced ;
var bool: aux1452_BOOL:: var_is_introduced ;
var bool: aux1453_BOOL:: var_is_introduced ;
var bool: aux1454_BOOL:: var_is_introduced ;
var {0,1}: aux1454_INTEGER :: var_is_introduced ;
var bool: aux1455_BOOL:: var_is_introduced ;
var bool: aux1456_BOOL:: var_is_introduced ;
var 1..43: aux1457:: var_is_introduced ;
var bool: aux1458_BOOL:: var_is_introduced ;
var bool: aux1459_BOOL:: var_is_introduced ;
var bool: aux1460_BOOL:: var_is_introduced ;
var {0,1}: aux1460_INTEGER :: var_is_introduced ;
var bool: aux1461_BOOL:: var_is_introduced ;
var bool: aux1462_BOOL:: var_is_introduced ;
var 2..44: aux1463:: var_is_introduced ;
var bool: aux1464_BOOL:: var_is_introduced ;
var bool: aux1465_BOOL:: var_is_introduced ;
var bool: aux1466_BOOL:: var_is_introduced ;
var {0,1}: aux1466_INTEGER :: var_is_introduced ;
var bool: aux1467_BOOL:: var_is_introduced ;
var bool: aux1468_BOOL:: var_is_introduced ;
var 1..43: aux1469:: var_is_introduced ;
var bool: aux1470_BOOL:: var_is_introduced ;
var bool: aux1471_BOOL:: var_is_introduced ;
var bool: aux1472_BOOL:: var_is_introduced ;
var {0,1}: aux1472_INTEGER :: var_is_introduced ;
var bool: aux1473_BOOL:: var_is_introduced ;
var bool: aux1474_BOOL:: var_is_introduced ;
var 2..44: aux1475:: var_is_introduced ;
var bool: aux1476_BOOL:: var_is_introduced ;
var bool: aux1477_BOOL:: var_is_introduced ;
var bool: aux1478_BOOL:: var_is_introduced ;
var {0,1}: aux1478_INTEGER :: var_is_introduced ;
var bool: aux1479_BOOL:: var_is_introduced ;
var bool: aux1480_BOOL:: var_is_introduced ;
var 2..44: aux1481:: var_is_introduced ;
var bool: aux1482_BOOL:: var_is_introduced ;
var bool: aux1483_BOOL:: var_is_introduced ;
var bool: aux1484_BOOL:: var_is_introduced ;
var {0,1}: aux1484_INTEGER :: var_is_introduced ;
var bool: aux1485_BOOL:: var_is_introduced ;
var bool: aux1486_BOOL:: var_is_introduced ;
var 1..43: aux1487:: var_is_introduced ;
var bool: aux1488_BOOL:: var_is_introduced ;
var bool: aux1489_BOOL:: var_is_introduced ;
var bool: aux1490_BOOL:: var_is_introduced ;
var {0,1}: aux1490_INTEGER :: var_is_introduced ;
var bool: aux1491_BOOL:: var_is_introduced ;
var bool: aux1492_BOOL:: var_is_introduced ;
var 4..46: aux1493:: var_is_introduced ;
var bool: aux1494_BOOL:: var_is_introduced ;
var bool: aux1495_BOOL:: var_is_introduced ;
var bool: aux1496_BOOL:: var_is_introduced ;
var {0,1}: aux1496_INTEGER :: var_is_introduced ;
var bool: aux1497_BOOL:: var_is_introduced ;
var bool: aux1498_BOOL:: var_is_introduced ;
var 1..43: aux1499:: var_is_introduced ;
var bool: aux1500_BOOL:: var_is_introduced ;
var bool: aux1501_BOOL:: var_is_introduced ;
var bool: aux1502_BOOL:: var_is_introduced ;
var {0,1}: aux1502_INTEGER :: var_is_introduced ;
var bool: aux1503_BOOL:: var_is_introduced ;
var bool: aux1504_BOOL:: var_is_introduced ;
var 3..45: aux1505:: var_is_introduced ;
var bool: aux1506_BOOL:: var_is_introduced ;
var bool: aux1507_BOOL:: var_is_introduced ;
var bool: aux1508_BOOL:: var_is_introduced ;
var {0,1}: aux1508_INTEGER :: var_is_introduced ;
var bool: aux1509_BOOL:: var_is_introduced ;
var bool: aux1510_BOOL:: var_is_introduced ;
var 3..45: aux1511:: var_is_introduced ;
var bool: aux1512_BOOL:: var_is_introduced ;
var bool: aux1513_BOOL:: var_is_introduced ;
var bool: aux1514_BOOL:: var_is_introduced ;
var {0,1}: aux1514_INTEGER :: var_is_introduced ;
var bool: aux1515_BOOL:: var_is_introduced ;
var bool: aux1516_BOOL:: var_is_introduced ;
var 2..44: aux1517:: var_is_introduced ;
var bool: aux1518_BOOL:: var_is_introduced ;
var bool: aux1519_BOOL:: var_is_introduced ;
var bool: aux1520_BOOL:: var_is_introduced ;
var {0,1}: aux1520_INTEGER :: var_is_introduced ;
var bool: aux1521_BOOL:: var_is_introduced ;
var bool: aux1522_BOOL:: var_is_introduced ;
var 3..45: aux1523:: var_is_introduced ;
var bool: aux1524_BOOL:: var_is_introduced ;
var bool: aux1525_BOOL:: var_is_introduced ;
var bool: aux1526_BOOL:: var_is_introduced ;
var {0,1}: aux1526_INTEGER :: var_is_introduced ;
var bool: aux1527_BOOL:: var_is_introduced ;
var bool: aux1528_BOOL:: var_is_introduced ;
var 1..43: aux1529:: var_is_introduced ;
var bool: aux1530_BOOL:: var_is_introduced ;
var bool: aux1531_BOOL:: var_is_introduced ;
var {0,1}: aux1531_INTEGER :: var_is_introduced ;
var bool: aux1532_BOOL:: var_is_introduced ;
var bool: aux1533_BOOL:: var_is_introduced ;
var 1..43: aux1534:: var_is_introduced ;
var bool: aux1535_BOOL:: var_is_introduced ;
var bool: aux1536_BOOL:: var_is_introduced ;
var bool: aux1537_BOOL:: var_is_introduced ;
var {0,1}: aux1537_INTEGER :: var_is_introduced ;
var bool: aux1538_BOOL:: var_is_introduced ;
var bool: aux1539_BOOL:: var_is_introduced ;
var 2..44: aux1540:: var_is_introduced ;
var bool: aux1541_BOOL:: var_is_introduced ;
var bool: aux1542_BOOL:: var_is_introduced ;
var bool: aux1543_BOOL:: var_is_introduced ;
var {0,1}: aux1543_INTEGER :: var_is_introduced ;
var bool: aux1544_BOOL:: var_is_introduced ;
var bool: aux1545_BOOL:: var_is_introduced ;
var 3..45: aux1546:: var_is_introduced ;
var bool: aux1547_BOOL:: var_is_introduced ;
var bool: aux1548_BOOL:: var_is_introduced ;
var bool: aux1549_BOOL:: var_is_introduced ;
var {0,1}: aux1549_INTEGER :: var_is_introduced ;
var bool: aux1550_BOOL:: var_is_introduced ;
var bool: aux1551_BOOL:: var_is_introduced ;
var 2..44: aux1552:: var_is_introduced ;
var bool: aux1553_BOOL:: var_is_introduced ;
var bool: aux1554_BOOL:: var_is_introduced ;
var bool: aux1555_BOOL:: var_is_introduced ;
var {0,1}: aux1555_INTEGER :: var_is_introduced ;
var bool: aux1556_BOOL:: var_is_introduced ;
var bool: aux1557_BOOL:: var_is_introduced ;
var 2..44: aux1558:: var_is_introduced ;
var bool: aux1559_BOOL:: var_is_introduced ;
var bool: aux1560_BOOL:: var_is_introduced ;
var bool: aux1561_BOOL:: var_is_introduced ;
var {0,1}: aux1561_INTEGER :: var_is_introduced ;
var bool: aux1562_BOOL:: var_is_introduced ;
var bool: aux1563_BOOL:: var_is_introduced ;
var 3..45: aux1564:: var_is_introduced ;
var bool: aux1565_BOOL:: var_is_introduced ;
var bool: aux1566_BOOL:: var_is_introduced ;
var bool: aux1567_BOOL:: var_is_introduced ;
var {0,1}: aux1567_INTEGER :: var_is_introduced ;
var bool: aux1568_BOOL:: var_is_introduced ;
var bool: aux1569_BOOL:: var_is_introduced ;
var 2..44: aux1570:: var_is_introduced ;
var bool: aux1571_BOOL:: var_is_introduced ;
var bool: aux1572_BOOL:: var_is_introduced ;
var bool: aux1573_BOOL:: var_is_introduced ;
var {0,1}: aux1573_INTEGER :: var_is_introduced ;
var bool: aux1574_BOOL:: var_is_introduced ;
var bool: aux1575_BOOL:: var_is_introduced ;
var 1..43: aux1576:: var_is_introduced ;
var bool: aux1577_BOOL:: var_is_introduced ;
var bool: aux1578_BOOL:: var_is_introduced ;
var bool: aux1579_BOOL:: var_is_introduced ;
var {0,1}: aux1579_INTEGER :: var_is_introduced ;
var bool: aux1580_BOOL:: var_is_introduced ;
var bool: aux1581_BOOL:: var_is_introduced ;
var 2..44: aux1582:: var_is_introduced ;
var bool: aux1583_BOOL:: var_is_introduced ;
var bool: aux1584_BOOL:: var_is_introduced ;
var bool: aux1585_BOOL:: var_is_introduced ;
var {0,1}: aux1585_INTEGER :: var_is_introduced ;
var bool: aux1586_BOOL:: var_is_introduced ;
var bool: aux1587_BOOL:: var_is_introduced ;
var 1..43: aux1588:: var_is_introduced ;
var bool: aux1589_BOOL:: var_is_introduced ;
var bool: aux1590_BOOL:: var_is_introduced ;
var bool: aux1591_BOOL:: var_is_introduced ;
var {0,1}: aux1591_INTEGER :: var_is_introduced ;
var bool: aux1592_BOOL:: var_is_introduced ;
var bool: aux1593_BOOL:: var_is_introduced ;
var 2..44: aux1594:: var_is_introduced ;
var bool: aux1595_BOOL:: var_is_introduced ;
var bool: aux1596_BOOL:: var_is_introduced ;
var bool: aux1597_BOOL:: var_is_introduced ;
var {0,1}: aux1597_INTEGER :: var_is_introduced ;
var bool: aux1598_BOOL:: var_is_introduced ;
var bool: aux1599_BOOL:: var_is_introduced ;
var 2..44: aux1600:: var_is_introduced ;
var bool: aux1601_BOOL:: var_is_introduced ;
var bool: aux1602_BOOL:: var_is_introduced ;
var bool: aux1603_BOOL:: var_is_introduced ;
var {0,1}: aux1603_INTEGER :: var_is_introduced ;
var bool: aux1604_BOOL:: var_is_introduced ;
var bool: aux1605_BOOL:: var_is_introduced ;
var 2..44: aux1606:: var_is_introduced ;
var bool: aux1607_BOOL:: var_is_introduced ;
var bool: aux1608_BOOL:: var_is_introduced ;
var bool: aux1609_BOOL:: var_is_introduced ;
var {0,1}: aux1609_INTEGER :: var_is_introduced ;
var bool: aux1610_BOOL:: var_is_introduced ;
var bool: aux1611_BOOL:: var_is_introduced ;
var 4..46: aux1612:: var_is_introduced ;
var bool: aux1613_BOOL:: var_is_introduced ;
var bool: aux1614_BOOL:: var_is_introduced ;
var bool: aux1615_BOOL:: var_is_introduced ;
var {0,1}: aux1615_INTEGER :: var_is_introduced ;
var bool: aux1616_BOOL:: var_is_introduced ;
var bool: aux1617_BOOL:: var_is_introduced ;
var 1..43: aux1618:: var_is_introduced ;
var bool: aux1619_BOOL:: var_is_introduced ;
var bool: aux1620_BOOL:: var_is_introduced ;
var bool: aux1621_BOOL:: var_is_introduced ;
var {0,1}: aux1621_INTEGER :: var_is_introduced ;
var bool: aux1622_BOOL:: var_is_introduced ;
var bool: aux1623_BOOL:: var_is_introduced ;
var 3..45: aux1624:: var_is_introduced ;
var bool: aux1625_BOOL:: var_is_introduced ;
var bool: aux1626_BOOL:: var_is_introduced ;
var bool: aux1627_BOOL:: var_is_introduced ;
var {0,1}: aux1627_INTEGER :: var_is_introduced ;
var bool: aux1628_BOOL:: var_is_introduced ;
var bool: aux1629_BOOL:: var_is_introduced ;
var 3..45: aux1630:: var_is_introduced ;
var bool: aux1631_BOOL:: var_is_introduced ;
var bool: aux1632_BOOL:: var_is_introduced ;
var bool: aux1633_BOOL:: var_is_introduced ;
var {0,1}: aux1633_INTEGER :: var_is_introduced ;
var bool: aux1634_BOOL:: var_is_introduced ;
var bool: aux1635_BOOL:: var_is_introduced ;
var 2..44: aux1636:: var_is_introduced ;
var bool: aux1637_BOOL:: var_is_introduced ;
var bool: aux1638_BOOL:: var_is_introduced ;
var bool: aux1639_BOOL:: var_is_introduced ;
var {0,1}: aux1639_INTEGER :: var_is_introduced ;
var bool: aux1640_BOOL:: var_is_introduced ;
var bool: aux1641_BOOL:: var_is_introduced ;
var 3..45: aux1642:: var_is_introduced ;
var bool: aux1643_BOOL:: var_is_introduced ;
var bool: aux1644_BOOL:: var_is_introduced ;
var bool: aux1645_BOOL:: var_is_introduced ;
var {0,1}: aux1645_INTEGER :: var_is_introduced ;
var bool: aux1646_BOOL:: var_is_introduced ;
var bool: aux1647_BOOL:: var_is_introduced ;
var 2..44: aux1648:: var_is_introduced ;
var bool: aux1649_BOOL:: var_is_introduced ;
var bool: aux1650_BOOL:: var_is_introduced ;
var {0,1}: aux1650_INTEGER :: var_is_introduced ;
var bool: aux1651_BOOL:: var_is_introduced ;
var bool: aux1652_BOOL:: var_is_introduced ;
var 1..43: aux1653:: var_is_introduced ;
var bool: aux1654_BOOL:: var_is_introduced ;
var bool: aux1655_BOOL:: var_is_introduced ;
var bool: aux1656_BOOL:: var_is_introduced ;
var {0,1}: aux1656_INTEGER :: var_is_introduced ;
var bool: aux1657_BOOL:: var_is_introduced ;
var bool: aux1658_BOOL:: var_is_introduced ;
var 3..45: aux1659:: var_is_introduced ;
var bool: aux1660_BOOL:: var_is_introduced ;
var bool: aux1661_BOOL:: var_is_introduced ;
var bool: aux1662_BOOL:: var_is_introduced ;
var {0,1}: aux1662_INTEGER :: var_is_introduced ;
var bool: aux1663_BOOL:: var_is_introduced ;
var bool: aux1664_BOOL:: var_is_introduced ;
var 2..44: aux1665:: var_is_introduced ;
var bool: aux1666_BOOL:: var_is_introduced ;
var bool: aux1667_BOOL:: var_is_introduced ;
var bool: aux1668_BOOL:: var_is_introduced ;
var {0,1}: aux1668_INTEGER :: var_is_introduced ;
var bool: aux1669_BOOL:: var_is_introduced ;
var bool: aux1670_BOOL:: var_is_introduced ;
var 2..44: aux1671:: var_is_introduced ;
var bool: aux1672_BOOL:: var_is_introduced ;
var bool: aux1673_BOOL:: var_is_introduced ;
var bool: aux1674_BOOL:: var_is_introduced ;
var {0,1}: aux1674_INTEGER :: var_is_introduced ;
var bool: aux1675_BOOL:: var_is_introduced ;
var bool: aux1676_BOOL:: var_is_introduced ;
var 3..45: aux1677:: var_is_introduced ;
var bool: aux1678_BOOL:: var_is_introduced ;
var bool: aux1679_BOOL:: var_is_introduced ;
var bool: aux1680_BOOL:: var_is_introduced ;
var {0,1}: aux1680_INTEGER :: var_is_introduced ;
var bool: aux1681_BOOL:: var_is_introduced ;
var bool: aux1682_BOOL:: var_is_introduced ;
var 2..44: aux1683:: var_is_introduced ;
var bool: aux1684_BOOL:: var_is_introduced ;
var bool: aux1685_BOOL:: var_is_introduced ;
var bool: aux1686_BOOL:: var_is_introduced ;
var {0,1}: aux1686_INTEGER :: var_is_introduced ;
var bool: aux1687_BOOL:: var_is_introduced ;
var bool: aux1688_BOOL:: var_is_introduced ;
var 1..43: aux1689:: var_is_introduced ;
var bool: aux1690_BOOL:: var_is_introduced ;
var bool: aux1691_BOOL:: var_is_introduced ;
var bool: aux1692_BOOL:: var_is_introduced ;
var {0,1}: aux1692_INTEGER :: var_is_introduced ;
var bool: aux1693_BOOL:: var_is_introduced ;
var bool: aux1694_BOOL:: var_is_introduced ;
var 2..44: aux1695:: var_is_introduced ;
var bool: aux1696_BOOL:: var_is_introduced ;
var bool: aux1697_BOOL:: var_is_introduced ;
var bool: aux1698_BOOL:: var_is_introduced ;
var {0,1}: aux1698_INTEGER :: var_is_introduced ;
var bool: aux1699_BOOL:: var_is_introduced ;
var bool: aux1700_BOOL:: var_is_introduced ;
var 1..43: aux1701:: var_is_introduced ;
var bool: aux1702_BOOL:: var_is_introduced ;
var bool: aux1703_BOOL:: var_is_introduced ;
var bool: aux1704_BOOL:: var_is_introduced ;
var {0,1}: aux1704_INTEGER :: var_is_introduced ;
var bool: aux1705_BOOL:: var_is_introduced ;
var bool: aux1706_BOOL:: var_is_introduced ;
var 2..44: aux1707:: var_is_introduced ;
var bool: aux1708_BOOL:: var_is_introduced ;
var bool: aux1709_BOOL:: var_is_introduced ;
var bool: aux1710_BOOL:: var_is_introduced ;
var {0,1}: aux1710_INTEGER :: var_is_introduced ;
var bool: aux1711_BOOL:: var_is_introduced ;
var bool: aux1712_BOOL:: var_is_introduced ;
var 2..44: aux1713:: var_is_introduced ;
var bool: aux1714_BOOL:: var_is_introduced ;
var bool: aux1715_BOOL:: var_is_introduced ;
var bool: aux1716_BOOL:: var_is_introduced ;
var {0,1}: aux1716_INTEGER :: var_is_introduced ;
var bool: aux1717_BOOL:: var_is_introduced ;
var bool: aux1718_BOOL:: var_is_introduced ;
var 1..43: aux1719:: var_is_introduced ;
var bool: aux1720_BOOL:: var_is_introduced ;
var bool: aux1721_BOOL:: var_is_introduced ;
var bool: aux1722_BOOL:: var_is_introduced ;
var {0,1}: aux1722_INTEGER :: var_is_introduced ;
var bool: aux1723_BOOL:: var_is_introduced ;
var bool: aux1724_BOOL:: var_is_introduced ;
var 2..44: aux1725:: var_is_introduced ;
var bool: aux1726_BOOL:: var_is_introduced ;
var bool: aux1727_BOOL:: var_is_introduced ;
var bool: aux1728_BOOL:: var_is_introduced ;
var {0,1}: aux1728_INTEGER :: var_is_introduced ;
var bool: aux1729_BOOL:: var_is_introduced ;
var bool: aux1730_BOOL:: var_is_introduced ;
var 4..46: aux1731:: var_is_introduced ;
var bool: aux1732_BOOL:: var_is_introduced ;
var bool: aux1733_BOOL:: var_is_introduced ;
var bool: aux1734_BOOL:: var_is_introduced ;
var {0,1}: aux1734_INTEGER :: var_is_introduced ;
var bool: aux1735_BOOL:: var_is_introduced ;
var bool: aux1736_BOOL:: var_is_introduced ;
var 1..43: aux1737:: var_is_introduced ;
var bool: aux1738_BOOL:: var_is_introduced ;
var bool: aux1739_BOOL:: var_is_introduced ;
var bool: aux1740_BOOL:: var_is_introduced ;
var {0,1}: aux1740_INTEGER :: var_is_introduced ;
var bool: aux1741_BOOL:: var_is_introduced ;
var bool: aux1742_BOOL:: var_is_introduced ;
var 3..45: aux1743:: var_is_introduced ;
var bool: aux1744_BOOL:: var_is_introduced ;
var bool: aux1745_BOOL:: var_is_introduced ;
var bool: aux1746_BOOL:: var_is_introduced ;
var {0,1}: aux1746_INTEGER :: var_is_introduced ;
var bool: aux1747_BOOL:: var_is_introduced ;
var bool: aux1748_BOOL:: var_is_introduced ;
var 3..45: aux1749:: var_is_introduced ;
var bool: aux1750_BOOL:: var_is_introduced ;
var bool: aux1751_BOOL:: var_is_introduced ;
var bool: aux1752_BOOL:: var_is_introduced ;
var {0,1}: aux1752_INTEGER :: var_is_introduced ;
var bool: aux1753_BOOL:: var_is_introduced ;
var bool: aux1754_BOOL:: var_is_introduced ;
var 2..44: aux1755:: var_is_introduced ;
var bool: aux1756_BOOL:: var_is_introduced ;
var bool: aux1757_BOOL:: var_is_introduced ;
var bool: aux1758_BOOL:: var_is_introduced ;
var {0,1}: aux1758_INTEGER :: var_is_introduced ;
var bool: aux1759_BOOL:: var_is_introduced ;
var bool: aux1760_BOOL:: var_is_introduced ;
var 3..45: aux1761:: var_is_introduced ;
var bool: aux1762_BOOL:: var_is_introduced ;
var bool: aux1763_BOOL:: var_is_introduced ;
var bool: aux1764_BOOL:: var_is_introduced ;
var {0,1}: aux1764_INTEGER :: var_is_introduced ;
var bool: aux1765_BOOL:: var_is_introduced ;
var bool: aux1766_BOOL:: var_is_introduced ;
var 2..44: aux1767:: var_is_introduced ;
var bool: aux1768_BOOL:: var_is_introduced ;
var bool: aux1769_BOOL:: var_is_introduced ;
var {0,1}: aux1769_INTEGER :: var_is_introduced ;
var bool: aux1770_BOOL:: var_is_introduced ;
var bool: aux1771_BOOL:: var_is_introduced ;
var 1..43: aux1772:: var_is_introduced ;
var bool: aux1773_BOOL:: var_is_introduced ;
var bool: aux1774_BOOL:: var_is_introduced ;
var bool: aux1775_BOOL:: var_is_introduced ;
var {0,1}: aux1775_INTEGER :: var_is_introduced ;
var bool: aux1776_BOOL:: var_is_introduced ;
var bool: aux1777_BOOL:: var_is_introduced ;
var 2..44: aux1778:: var_is_introduced ;
var bool: aux1779_BOOL:: var_is_introduced ;
var bool: aux1780_BOOL:: var_is_introduced ;
var bool: aux1781_BOOL:: var_is_introduced ;
var {0,1}: aux1781_INTEGER :: var_is_introduced ;
var bool: aux1782_BOOL:: var_is_introduced ;
var bool: aux1783_BOOL:: var_is_introduced ;
var 3..45: aux1784:: var_is_introduced ;
var bool: aux1785_BOOL:: var_is_introduced ;
var bool: aux1786_BOOL:: var_is_introduced ;
var bool: aux1787_BOOL:: var_is_introduced ;
var {0,1}: aux1787_INTEGER :: var_is_introduced ;
var bool: aux1788_BOOL:: var_is_introduced ;
var bool: aux1789_BOOL:: var_is_introduced ;
var 2..44: aux1790:: var_is_introduced ;
var bool: aux1791_BOOL:: var_is_introduced ;
var bool: aux1792_BOOL:: var_is_introduced ;
var bool: aux1793_BOOL:: var_is_introduced ;
var {0,1}: aux1793_INTEGER :: var_is_introduced ;
var bool: aux1794_BOOL:: var_is_introduced ;
var bool: aux1795_BOOL:: var_is_introduced ;
var 2..44: aux1796:: var_is_introduced ;
var bool: aux1797_BOOL:: var_is_introduced ;
var bool: aux1798_BOOL:: var_is_introduced ;
var bool: aux1799_BOOL:: var_is_introduced ;
var {0,1}: aux1799_INTEGER :: var_is_introduced ;
var bool: aux1800_BOOL:: var_is_introduced ;
var bool: aux1801_BOOL:: var_is_introduced ;
var 3..45: aux1802:: var_is_introduced ;
var bool: aux1803_BOOL:: var_is_introduced ;
var bool: aux1804_BOOL:: var_is_introduced ;
var bool: aux1805_BOOL:: var_is_introduced ;
var {0,1}: aux1805_INTEGER :: var_is_introduced ;
var bool: aux1806_BOOL:: var_is_introduced ;
var bool: aux1807_BOOL:: var_is_introduced ;
var 2..44: aux1808:: var_is_introduced ;
var bool: aux1809_BOOL:: var_is_introduced ;
var bool: aux1810_BOOL:: var_is_introduced ;
var bool: aux1811_BOOL:: var_is_introduced ;
var {0,1}: aux1811_INTEGER :: var_is_introduced ;
var bool: aux1812_BOOL:: var_is_introduced ;
var bool: aux1813_BOOL:: var_is_introduced ;
var 1..43: aux1814:: var_is_introduced ;
var bool: aux1815_BOOL:: var_is_introduced ;
var bool: aux1816_BOOL:: var_is_introduced ;
var bool: aux1817_BOOL:: var_is_introduced ;
var {0,1}: aux1817_INTEGER :: var_is_introduced ;
var bool: aux1818_BOOL:: var_is_introduced ;
var bool: aux1819_BOOL:: var_is_introduced ;
var 1..43: aux1820:: var_is_introduced ;
var bool: aux1821_BOOL:: var_is_introduced ;
var bool: aux1822_BOOL:: var_is_introduced ;
var bool: aux1823_BOOL:: var_is_introduced ;
var {0,1}: aux1823_INTEGER :: var_is_introduced ;
var bool: aux1824_BOOL:: var_is_introduced ;
var bool: aux1825_BOOL:: var_is_introduced ;
var 2..44: aux1826:: var_is_introduced ;
var bool: aux1827_BOOL:: var_is_introduced ;
var bool: aux1828_BOOL:: var_is_introduced ;
var bool: aux1829_BOOL:: var_is_introduced ;
var {0,1}: aux1829_INTEGER :: var_is_introduced ;
var bool: aux1830_BOOL:: var_is_introduced ;
var bool: aux1831_BOOL:: var_is_introduced ;
var 2..44: aux1832:: var_is_introduced ;
var bool: aux1833_BOOL:: var_is_introduced ;
var bool: aux1834_BOOL:: var_is_introduced ;
var bool: aux1835_BOOL:: var_is_introduced ;
var {0,1}: aux1835_INTEGER :: var_is_introduced ;
var bool: aux1836_BOOL:: var_is_introduced ;
var bool: aux1837_BOOL:: var_is_introduced ;
var 1..43: aux1838:: var_is_introduced ;
var bool: aux1839_BOOL:: var_is_introduced ;
var bool: aux1840_BOOL:: var_is_introduced ;
var bool: aux1841_BOOL:: var_is_introduced ;
var {0,1}: aux1841_INTEGER :: var_is_introduced ;
var bool: aux1842_BOOL:: var_is_introduced ;
var bool: aux1843_BOOL:: var_is_introduced ;
var 2..44: aux1844:: var_is_introduced ;
var bool: aux1845_BOOL:: var_is_introduced ;
var bool: aux1846_BOOL:: var_is_introduced ;
var bool: aux1847_BOOL:: var_is_introduced ;
var {0,1}: aux1847_INTEGER :: var_is_introduced ;
var bool: aux1848_BOOL:: var_is_introduced ;
var bool: aux1849_BOOL:: var_is_introduced ;
var 4..46: aux1850:: var_is_introduced ;
var bool: aux1851_BOOL:: var_is_introduced ;
var bool: aux1852_BOOL:: var_is_introduced ;
var bool: aux1853_BOOL:: var_is_introduced ;
var {0,1}: aux1853_INTEGER :: var_is_introduced ;
var bool: aux1854_BOOL:: var_is_introduced ;
var bool: aux1855_BOOL:: var_is_introduced ;
var 1..43: aux1856:: var_is_introduced ;
var bool: aux1857_BOOL:: var_is_introduced ;
var bool: aux1858_BOOL:: var_is_introduced ;
var bool: aux1859_BOOL:: var_is_introduced ;
var {0,1}: aux1859_INTEGER :: var_is_introduced ;
var bool: aux1860_BOOL:: var_is_introduced ;
var bool: aux1861_BOOL:: var_is_introduced ;
var 3..45: aux1862:: var_is_introduced ;
var bool: aux1863_BOOL:: var_is_introduced ;
var bool: aux1864_BOOL:: var_is_introduced ;
var bool: aux1865_BOOL:: var_is_introduced ;
var {0,1}: aux1865_INTEGER :: var_is_introduced ;
var bool: aux1866_BOOL:: var_is_introduced ;
var bool: aux1867_BOOL:: var_is_introduced ;
var 3..45: aux1868:: var_is_introduced ;
var bool: aux1869_BOOL:: var_is_introduced ;
var bool: aux1870_BOOL:: var_is_introduced ;
var bool: aux1871_BOOL:: var_is_introduced ;
var {0,1}: aux1871_INTEGER :: var_is_introduced ;
var bool: aux1872_BOOL:: var_is_introduced ;
var bool: aux1873_BOOL:: var_is_introduced ;
var 2..44: aux1874:: var_is_introduced ;
var bool: aux1875_BOOL:: var_is_introduced ;
var bool: aux1876_BOOL:: var_is_introduced ;
var bool: aux1877_BOOL:: var_is_introduced ;
var {0,1}: aux1877_INTEGER :: var_is_introduced ;
var bool: aux1878_BOOL:: var_is_introduced ;
var bool: aux1879_BOOL:: var_is_introduced ;
var 3..45: aux1880:: var_is_introduced ;
var bool: aux1881_BOOL:: var_is_introduced ;
var bool: aux1882_BOOL:: var_is_introduced ;
var bool: aux1883_BOOL:: var_is_introduced ;
var {0,1}: aux1883_INTEGER :: var_is_introduced ;
var bool: aux1884_BOOL:: var_is_introduced ;
var bool: aux1885_BOOL:: var_is_introduced ;
var 3..45: aux1886:: var_is_introduced ;
var bool: aux1887_BOOL:: var_is_introduced ;
var bool: aux1888_BOOL:: var_is_introduced ;
var {0,1}: aux1888_INTEGER :: var_is_introduced ;
var bool: aux1889_BOOL:: var_is_introduced ;
var bool: aux1890_BOOL:: var_is_introduced ;
var 1..43: aux1891:: var_is_introduced ;
var bool: aux1892_BOOL:: var_is_introduced ;
var bool: aux1893_BOOL:: var_is_introduced ;
var bool: aux1894_BOOL:: var_is_introduced ;
var {0,1}: aux1894_INTEGER :: var_is_introduced ;
var bool: aux1895_BOOL:: var_is_introduced ;
var bool: aux1896_BOOL:: var_is_introduced ;
var 2..44: aux1897:: var_is_introduced ;
var bool: aux1898_BOOL:: var_is_introduced ;
var bool: aux1899_BOOL:: var_is_introduced ;
var bool: aux1900_BOOL:: var_is_introduced ;
var {0,1}: aux1900_INTEGER :: var_is_introduced ;
var bool: aux1901_BOOL:: var_is_introduced ;
var bool: aux1902_BOOL:: var_is_introduced ;
var 3..45: aux1903:: var_is_introduced ;
var bool: aux1904_BOOL:: var_is_introduced ;
var bool: aux1905_BOOL:: var_is_introduced ;
var bool: aux1906_BOOL:: var_is_introduced ;
var {0,1}: aux1906_INTEGER :: var_is_introduced ;
var bool: aux1907_BOOL:: var_is_introduced ;
var bool: aux1908_BOOL:: var_is_introduced ;
var 2..44: aux1909:: var_is_introduced ;
var bool: aux1910_BOOL:: var_is_introduced ;
var bool: aux1911_BOOL:: var_is_introduced ;
var bool: aux1912_BOOL:: var_is_introduced ;
var {0,1}: aux1912_INTEGER :: var_is_introduced ;
var bool: aux1913_BOOL:: var_is_introduced ;
var bool: aux1914_BOOL:: var_is_introduced ;
var 2..44: aux1915:: var_is_introduced ;
var bool: aux1916_BOOL:: var_is_introduced ;
var bool: aux1917_BOOL:: var_is_introduced ;
var bool: aux1918_BOOL:: var_is_introduced ;
var {0,1}: aux1918_INTEGER :: var_is_introduced ;
var bool: aux1919_BOOL:: var_is_introduced ;
var bool: aux1920_BOOL:: var_is_introduced ;
var 2..44: aux1921:: var_is_introduced ;
var bool: aux1922_BOOL:: var_is_introduced ;
var bool: aux1923_BOOL:: var_is_introduced ;
var bool: aux1924_BOOL:: var_is_introduced ;
var {0,1}: aux1924_INTEGER :: var_is_introduced ;
var bool: aux1925_BOOL:: var_is_introduced ;
var bool: aux1926_BOOL:: var_is_introduced ;
var 1..43: aux1927:: var_is_introduced ;
var bool: aux1928_BOOL:: var_is_introduced ;
var bool: aux1929_BOOL:: var_is_introduced ;
var bool: aux1930_BOOL:: var_is_introduced ;
var {0,1}: aux1930_INTEGER :: var_is_introduced ;
var bool: aux1931_BOOL:: var_is_introduced ;
var bool: aux1932_BOOL:: var_is_introduced ;
var 2..44: aux1933:: var_is_introduced ;
var bool: aux1934_BOOL:: var_is_introduced ;
var bool: aux1935_BOOL:: var_is_introduced ;
var bool: aux1936_BOOL:: var_is_introduced ;
var {0,1}: aux1936_INTEGER :: var_is_introduced ;
var bool: aux1937_BOOL:: var_is_introduced ;
var bool: aux1938_BOOL:: var_is_introduced ;
var 1..43: aux1939:: var_is_introduced ;
var bool: aux1940_BOOL:: var_is_introduced ;
var bool: aux1941_BOOL:: var_is_introduced ;
var bool: aux1942_BOOL:: var_is_introduced ;
var {0,1}: aux1942_INTEGER :: var_is_introduced ;
var bool: aux1943_BOOL:: var_is_introduced ;
var bool: aux1944_BOOL:: var_is_introduced ;
var 2..44: aux1945:: var_is_introduced ;
var bool: aux1946_BOOL:: var_is_introduced ;
var bool: aux1947_BOOL:: var_is_introduced ;
var bool: aux1948_BOOL:: var_is_introduced ;
var {0,1}: aux1948_INTEGER :: var_is_introduced ;
var bool: aux1949_BOOL:: var_is_introduced ;
var bool: aux1950_BOOL:: var_is_introduced ;
var 2..44: aux1951:: var_is_introduced ;
var bool: aux1952_BOOL:: var_is_introduced ;
var bool: aux1953_BOOL:: var_is_introduced ;
var bool: aux1954_BOOL:: var_is_introduced ;
var {0,1}: aux1954_INTEGER :: var_is_introduced ;
var bool: aux1955_BOOL:: var_is_introduced ;
var bool: aux1956_BOOL:: var_is_introduced ;
var 1..43: aux1957:: var_is_introduced ;
var bool: aux1958_BOOL:: var_is_introduced ;
var bool: aux1959_BOOL:: var_is_introduced ;
var bool: aux1960_BOOL:: var_is_introduced ;
var {0,1}: aux1960_INTEGER :: var_is_introduced ;
var bool: aux1961_BOOL:: var_is_introduced ;
var bool: aux1962_BOOL:: var_is_introduced ;
var 2..44: aux1963:: var_is_introduced ;
var bool: aux1964_BOOL:: var_is_introduced ;
var bool: aux1965_BOOL:: var_is_introduced ;
var bool: aux1966_BOOL:: var_is_introduced ;
var {0,1}: aux1966_INTEGER :: var_is_introduced ;
var bool: aux1967_BOOL:: var_is_introduced ;
var bool: aux1968_BOOL:: var_is_introduced ;
var 4..46: aux1969:: var_is_introduced ;
var bool: aux1970_BOOL:: var_is_introduced ;
var bool: aux1971_BOOL:: var_is_introduced ;
var bool: aux1972_BOOL:: var_is_introduced ;
var {0,1}: aux1972_INTEGER :: var_is_introduced ;
var bool: aux1973_BOOL:: var_is_introduced ;
var bool: aux1974_BOOL:: var_is_introduced ;
var 1..43: aux1975:: var_is_introduced ;
var bool: aux1976_BOOL:: var_is_introduced ;
var bool: aux1977_BOOL:: var_is_introduced ;
var bool: aux1978_BOOL:: var_is_introduced ;
var {0,1}: aux1978_INTEGER :: var_is_introduced ;
var bool: aux1979_BOOL:: var_is_introduced ;
var bool: aux1980_BOOL:: var_is_introduced ;
var 3..45: aux1981:: var_is_introduced ;
var bool: aux1982_BOOL:: var_is_introduced ;
var bool: aux1983_BOOL:: var_is_introduced ;
var bool: aux1984_BOOL:: var_is_introduced ;
var {0,1}: aux1984_INTEGER :: var_is_introduced ;
var bool: aux1985_BOOL:: var_is_introduced ;
var bool: aux1986_BOOL:: var_is_introduced ;
var 3..45: aux1987:: var_is_introduced ;
var bool: aux1988_BOOL:: var_is_introduced ;
var bool: aux1989_BOOL:: var_is_introduced ;
var bool: aux1990_BOOL:: var_is_introduced ;
var {0,1}: aux1990_INTEGER :: var_is_introduced ;
var bool: aux1991_BOOL:: var_is_introduced ;
var bool: aux1992_BOOL:: var_is_introduced ;
var 2..44: aux1993:: var_is_introduced ;
var bool: aux1994_BOOL:: var_is_introduced ;
var bool: aux1995_BOOL:: var_is_introduced ;
var bool: aux1996_BOOL:: var_is_introduced ;
var {0,1}: aux1996_INTEGER :: var_is_introduced ;
var bool: aux1997_BOOL:: var_is_introduced ;
var bool: aux1998_BOOL:: var_is_introduced ;
var 3..45: aux1999:: var_is_introduced ;
var bool: aux2000_BOOL:: var_is_introduced ;
var bool: aux2001_BOOL:: var_is_introduced ;
var bool: aux2002_BOOL:: var_is_introduced ;
var {0,1}: aux2002_INTEGER :: var_is_introduced ;
var bool: aux2003_BOOL:: var_is_introduced ;
var bool: aux2004_BOOL:: var_is_introduced ;
var 2..44: aux2005:: var_is_introduced ;
var bool: aux2006_BOOL:: var_is_introduced ;
var bool: aux2007_BOOL:: var_is_introduced ;
var {0,1}: aux2007_INTEGER :: var_is_introduced ;
var bool: aux2008_BOOL:: var_is_introduced ;
var bool: aux2009_BOOL:: var_is_introduced ;
var 1..43: aux2010:: var_is_introduced ;
var bool: aux2011_BOOL:: var_is_introduced ;
var bool: aux2012_BOOL:: var_is_introduced ;
var bool: aux2013_BOOL:: var_is_introduced ;
var {0,1}: aux2013_INTEGER :: var_is_introduced ;
var bool: aux2014_BOOL:: var_is_introduced ;
var bool: aux2015_BOOL:: var_is_introduced ;
var 2..44: aux2016:: var_is_introduced ;
var bool: aux2017_BOOL:: var_is_introduced ;
var bool: aux2018_BOOL:: var_is_introduced ;
var bool: aux2019_BOOL:: var_is_introduced ;
var {0,1}: aux2019_INTEGER :: var_is_introduced ;
var bool: aux2020_BOOL:: var_is_introduced ;
var bool: aux2021_BOOL:: var_is_introduced ;
var 3..45: aux2022:: var_is_introduced ;
var bool: aux2023_BOOL:: var_is_introduced ;
var bool: aux2024_BOOL:: var_is_introduced ;
var bool: aux2025_BOOL:: var_is_introduced ;
var {0,1}: aux2025_INTEGER :: var_is_introduced ;
var bool: aux2026_BOOL:: var_is_introduced ;
var bool: aux2027_BOOL:: var_is_introduced ;
var 2..44: aux2028:: var_is_introduced ;
var bool: aux2029_BOOL:: var_is_introduced ;
var bool: aux2030_BOOL:: var_is_introduced ;
var bool: aux2031_BOOL:: var_is_introduced ;
var {0,1}: aux2031_INTEGER :: var_is_introduced ;
var bool: aux2032_BOOL:: var_is_introduced ;
var bool: aux2033_BOOL:: var_is_introduced ;
var 2..44: aux2034:: var_is_introduced ;
var bool: aux2035_BOOL:: var_is_introduced ;
var bool: aux2036_BOOL:: var_is_introduced ;
var bool: aux2037_BOOL:: var_is_introduced ;
var {0,1}: aux2037_INTEGER :: var_is_introduced ;
var bool: aux2038_BOOL:: var_is_introduced ;
var bool: aux2039_BOOL:: var_is_introduced ;
var 3..45: aux2040:: var_is_introduced ;
var bool: aux2041_BOOL:: var_is_introduced ;
var bool: aux2042_BOOL:: var_is_introduced ;
var bool: aux2043_BOOL:: var_is_introduced ;
var {0,1}: aux2043_INTEGER :: var_is_introduced ;
var bool: aux2044_BOOL:: var_is_introduced ;
var bool: aux2045_BOOL:: var_is_introduced ;
var 2..44: aux2046:: var_is_introduced ;
var bool: aux2047_BOOL:: var_is_introduced ;
var bool: aux2048_BOOL:: var_is_introduced ;
var bool: aux2049_BOOL:: var_is_introduced ;
var {0,1}: aux2049_INTEGER :: var_is_introduced ;
var bool: aux2050_BOOL:: var_is_introduced ;
var bool: aux2051_BOOL:: var_is_introduced ;
var 1..43: aux2052:: var_is_introduced ;
var bool: aux2053_BOOL:: var_is_introduced ;
var bool: aux2054_BOOL:: var_is_introduced ;
var bool: aux2055_BOOL:: var_is_introduced ;
var {0,1}: aux2055_INTEGER :: var_is_introduced ;
var bool: aux2056_BOOL:: var_is_introduced ;
var bool: aux2057_BOOL:: var_is_introduced ;
var 2..44: aux2058:: var_is_introduced ;
var bool: aux2059_BOOL:: var_is_introduced ;
var bool: aux2060_BOOL:: var_is_introduced ;
var bool: aux2061_BOOL:: var_is_introduced ;
var {0,1}: aux2061_INTEGER :: var_is_introduced ;
var bool: aux2062_BOOL:: var_is_introduced ;
var bool: aux2063_BOOL:: var_is_introduced ;
var 1..43: aux2064:: var_is_introduced ;
var bool: aux2065_BOOL:: var_is_introduced ;
var bool: aux2066_BOOL:: var_is_introduced ;
var bool: aux2067_BOOL:: var_is_introduced ;
var {0,1}: aux2067_INTEGER :: var_is_introduced ;
var bool: aux2068_BOOL:: var_is_introduced ;
var bool: aux2069_BOOL:: var_is_introduced ;
var 2..44: aux2070:: var_is_introduced ;
var bool: aux2071_BOOL:: var_is_introduced ;
var bool: aux2072_BOOL:: var_is_introduced ;
var bool: aux2073_BOOL:: var_is_introduced ;
var {0,1}: aux2073_INTEGER :: var_is_introduced ;
var bool: aux2074_BOOL:: var_is_introduced ;
var bool: aux2075_BOOL:: var_is_introduced ;
var 2..44: aux2076:: var_is_introduced ;
var bool: aux2077_BOOL:: var_is_introduced ;
var bool: aux2078_BOOL:: var_is_introduced ;
var bool: aux2079_BOOL:: var_is_introduced ;
var {0,1}: aux2079_INTEGER :: var_is_introduced ;
var bool: aux2080_BOOL:: var_is_introduced ;
var bool: aux2081_BOOL:: var_is_introduced ;
var 1..43: aux2082:: var_is_introduced ;
var bool: aux2083_BOOL:: var_is_introduced ;
var bool: aux2084_BOOL:: var_is_introduced ;
var bool: aux2085_BOOL:: var_is_introduced ;
var {0,1}: aux2085_INTEGER :: var_is_introduced ;
var bool: aux2086_BOOL:: var_is_introduced ;
var bool: aux2087_BOOL:: var_is_introduced ;
var 4..46: aux2088:: var_is_introduced ;
var bool: aux2089_BOOL:: var_is_introduced ;
var bool: aux2090_BOOL:: var_is_introduced ;
var bool: aux2091_BOOL:: var_is_introduced ;
var {0,1}: aux2091_INTEGER :: var_is_introduced ;
var bool: aux2092_BOOL:: var_is_introduced ;
var bool: aux2093_BOOL:: var_is_introduced ;
var 2..44: aux2094:: var_is_introduced ;
var bool: aux2095_BOOL:: var_is_introduced ;
var bool: aux2096_BOOL:: var_is_introduced ;
var bool: aux2097_BOOL:: var_is_introduced ;
var {0,1}: aux2097_INTEGER :: var_is_introduced ;
var bool: aux2098_BOOL:: var_is_introduced ;
var bool: aux2099_BOOL:: var_is_introduced ;
var 3..45: aux2100:: var_is_introduced ;
var bool: aux2101_BOOL:: var_is_introduced ;
var bool: aux2102_BOOL:: var_is_introduced ;
var bool: aux2103_BOOL:: var_is_introduced ;
var {0,1}: aux2103_INTEGER :: var_is_introduced ;
var bool: aux2104_BOOL:: var_is_introduced ;
var bool: aux2105_BOOL:: var_is_introduced ;
var 1..43: aux2106:: var_is_introduced ;
var bool: aux2107_BOOL:: var_is_introduced ;
var bool: aux2108_BOOL:: var_is_introduced ;
var bool: aux2109_BOOL:: var_is_introduced ;
var {0,1}: aux2109_INTEGER :: var_is_introduced ;
var bool: aux2110_BOOL:: var_is_introduced ;
var bool: aux2111_BOOL:: var_is_introduced ;
var 3..45: aux2112:: var_is_introduced ;
var bool: aux2113_BOOL:: var_is_introduced ;
var bool: aux2114_BOOL:: var_is_introduced ;
var bool: aux2115_BOOL:: var_is_introduced ;
var {0,1}: aux2115_INTEGER :: var_is_introduced ;
var bool: aux2116_BOOL:: var_is_introduced ;
var bool: aux2117_BOOL:: var_is_introduced ;
var 3..45: aux2118:: var_is_introduced ;
var bool: aux2119_BOOL:: var_is_introduced ;
var bool: aux2120_BOOL:: var_is_introduced ;
var bool: aux2121_BOOL:: var_is_introduced ;
var {0,1}: aux2121_INTEGER :: var_is_introduced ;
var bool: aux2122_BOOL:: var_is_introduced ;
var bool: aux2123_BOOL:: var_is_introduced ;
var 4..46: aux2124:: var_is_introduced ;
var bool: aux2125_BOOL:: var_is_introduced ;
var bool: aux2126_BOOL:: var_is_introduced ;
var {0,1}: aux2126_INTEGER :: var_is_introduced ;
var bool: aux2127_BOOL:: var_is_introduced ;
var bool: aux2128_BOOL:: var_is_introduced ;
var 1..43: aux2129:: var_is_introduced ;
var bool: aux2130_BOOL:: var_is_introduced ;
var bool: aux2131_BOOL:: var_is_introduced ;
var bool: aux2132_BOOL:: var_is_introduced ;
var {0,1}: aux2132_INTEGER :: var_is_introduced ;
var bool: aux2133_BOOL:: var_is_introduced ;
var bool: aux2134_BOOL:: var_is_introduced ;
var 2..44: aux2135:: var_is_introduced ;
var bool: aux2136_BOOL:: var_is_introduced ;
var bool: aux2137_BOOL:: var_is_introduced ;
var bool: aux2138_BOOL:: var_is_introduced ;
var {0,1}: aux2138_INTEGER :: var_is_introduced ;
var bool: aux2139_BOOL:: var_is_introduced ;
var bool: aux2140_BOOL:: var_is_introduced ;
var 3..45: aux2141:: var_is_introduced ;
var bool: aux2142_BOOL:: var_is_introduced ;
var bool: aux2143_BOOL:: var_is_introduced ;
var bool: aux2144_BOOL:: var_is_introduced ;
var {0,1}: aux2144_INTEGER :: var_is_introduced ;
var bool: aux2145_BOOL:: var_is_introduced ;
var bool: aux2146_BOOL:: var_is_introduced ;
var 2..44: aux2147:: var_is_introduced ;
var bool: aux2148_BOOL:: var_is_introduced ;
var bool: aux2149_BOOL:: var_is_introduced ;
var bool: aux2150_BOOL:: var_is_introduced ;
var {0,1}: aux2150_INTEGER :: var_is_introduced ;
var bool: aux2151_BOOL:: var_is_introduced ;
var bool: aux2152_BOOL:: var_is_introduced ;
var 2..44: aux2153:: var_is_introduced ;
var bool: aux2154_BOOL:: var_is_introduced ;
var bool: aux2155_BOOL:: var_is_introduced ;
var bool: aux2156_BOOL:: var_is_introduced ;
var {0,1}: aux2156_INTEGER :: var_is_introduced ;
var bool: aux2157_BOOL:: var_is_introduced ;
var bool: aux2158_BOOL:: var_is_introduced ;
var 3..45: aux2159:: var_is_introduced ;
var bool: aux2160_BOOL:: var_is_introduced ;
var bool: aux2161_BOOL:: var_is_introduced ;
var bool: aux2162_BOOL:: var_is_introduced ;
var {0,1}: aux2162_INTEGER :: var_is_introduced ;
var bool: aux2163_BOOL:: var_is_introduced ;
var bool: aux2164_BOOL:: var_is_introduced ;
var 2..44: aux2165:: var_is_introduced ;
var bool: aux2166_BOOL:: var_is_introduced ;
var bool: aux2167_BOOL:: var_is_introduced ;
var bool: aux2168_BOOL:: var_is_introduced ;
var {0,1}: aux2168_INTEGER :: var_is_introduced ;
var bool: aux2169_BOOL:: var_is_introduced ;
var bool: aux2170_BOOL:: var_is_introduced ;
var 1..43: aux2171:: var_is_introduced ;
var bool: aux2172_BOOL:: var_is_introduced ;
var bool: aux2173_BOOL:: var_is_introduced ;
var bool: aux2174_BOOL:: var_is_introduced ;
var {0,1}: aux2174_INTEGER :: var_is_introduced ;
var bool: aux2175_BOOL:: var_is_introduced ;
var bool: aux2176_BOOL:: var_is_introduced ;
var 2..44: aux2177:: var_is_introduced ;
var bool: aux2178_BOOL:: var_is_introduced ;
var bool: aux2179_BOOL:: var_is_introduced ;
var bool: aux2180_BOOL:: var_is_introduced ;
var {0,1}: aux2180_INTEGER :: var_is_introduced ;
var bool: aux2181_BOOL:: var_is_introduced ;
var bool: aux2182_BOOL:: var_is_introduced ;
var 1..43: aux2183:: var_is_introduced ;
var bool: aux2184_BOOL:: var_is_introduced ;
var bool: aux2185_BOOL:: var_is_introduced ;
var bool: aux2186_BOOL:: var_is_introduced ;
var {0,1}: aux2186_INTEGER :: var_is_introduced ;
var bool: aux2187_BOOL:: var_is_introduced ;
var bool: aux2188_BOOL:: var_is_introduced ;
var 2..44: aux2189:: var_is_introduced ;
var bool: aux2190_BOOL:: var_is_introduced ;
var bool: aux2191_BOOL:: var_is_introduced ;
var bool: aux2192_BOOL:: var_is_introduced ;
var {0,1}: aux2192_INTEGER :: var_is_introduced ;
var bool: aux2193_BOOL:: var_is_introduced ;
var bool: aux2194_BOOL:: var_is_introduced ;
var 2..44: aux2195:: var_is_introduced ;
var bool: aux2196_BOOL:: var_is_introduced ;
var bool: aux2197_BOOL:: var_is_introduced ;
var bool: aux2198_BOOL:: var_is_introduced ;
var {0,1}: aux2198_INTEGER :: var_is_introduced ;
var bool: aux2199_BOOL:: var_is_introduced ;
var bool: aux2200_BOOL:: var_is_introduced ;
var 1..43: aux2201:: var_is_introduced ;
var bool: aux2202_BOOL:: var_is_introduced ;
var bool: aux2203_BOOL:: var_is_introduced ;
var bool: aux2204_BOOL:: var_is_introduced ;
var {0,1}: aux2204_INTEGER :: var_is_introduced ;
var bool: aux2205_BOOL:: var_is_introduced ;
var bool: aux2206_BOOL:: var_is_introduced ;
var 2..44: aux2207:: var_is_introduced ;
var bool: aux2208_BOOL:: var_is_introduced ;
var bool: aux2209_BOOL:: var_is_introduced ;
var bool: aux2210_BOOL:: var_is_introduced ;
var {0,1}: aux2210_INTEGER :: var_is_introduced ;
var bool: aux2211_BOOL:: var_is_introduced ;
var bool: aux2212_BOOL:: var_is_introduced ;
var 1..43: aux2213:: var_is_introduced ;
var bool: aux2214_BOOL:: var_is_introduced ;
var bool: aux2215_BOOL:: var_is_introduced ;
var bool: aux2216_BOOL:: var_is_introduced ;
var {0,1}: aux2216_INTEGER :: var_is_introduced ;
var bool: aux2217_BOOL:: var_is_introduced ;
var bool: aux2218_BOOL:: var_is_introduced ;
var 3..45: aux2219:: var_is_introduced ;
var bool: aux2220_BOOL:: var_is_introduced ;
var bool: aux2221_BOOL:: var_is_introduced ;
var bool: aux2222_BOOL:: var_is_introduced ;
var {0,1}: aux2222_INTEGER :: var_is_introduced ;
var bool: aux2223_BOOL:: var_is_introduced ;
var bool: aux2224_BOOL:: var_is_introduced ;
var 3..45: aux2225:: var_is_introduced ;
var bool: aux2226_BOOL:: var_is_introduced ;
var bool: aux2227_BOOL:: var_is_introduced ;
var bool: aux2228_BOOL:: var_is_introduced ;
var {0,1}: aux2228_INTEGER :: var_is_introduced ;
var bool: aux2229_BOOL:: var_is_introduced ;
var bool: aux2230_BOOL:: var_is_introduced ;
var 2..44: aux2231:: var_is_introduced ;
var bool: aux2232_BOOL:: var_is_introduced ;
var bool: aux2233_BOOL:: var_is_introduced ;
var bool: aux2234_BOOL:: var_is_introduced ;
var {0,1}: aux2234_INTEGER :: var_is_introduced ;
var bool: aux2235_BOOL:: var_is_introduced ;
var bool: aux2236_BOOL:: var_is_introduced ;
var 3..45: aux2237:: var_is_introduced ;
var bool: aux2238_BOOL:: var_is_introduced ;
var bool: aux2239_BOOL:: var_is_introduced ;
var bool: aux2240_BOOL:: var_is_introduced ;
var {0,1}: aux2240_INTEGER :: var_is_introduced ;
var bool: aux2241_BOOL:: var_is_introduced ;
var bool: aux2242_BOOL:: var_is_introduced ;
var 1..43: aux2243:: var_is_introduced ;
var bool: aux2244_BOOL:: var_is_introduced ;
var bool: aux2245_BOOL:: var_is_introduced ;
var {0,1}: aux2245_INTEGER :: var_is_introduced ;
var bool: aux2246_BOOL:: var_is_introduced ;
var bool: aux2247_BOOL:: var_is_introduced ;
var 2..44: aux2248:: var_is_introduced ;
var bool: aux2249_BOOL:: var_is_introduced ;
var bool: aux2250_BOOL:: var_is_introduced ;
var bool: aux2251_BOOL:: var_is_introduced ;
var {0,1}: aux2251_INTEGER :: var_is_introduced ;
var bool: aux2252_BOOL:: var_is_introduced ;
var bool: aux2253_BOOL:: var_is_introduced ;
var 3..45: aux2254:: var_is_introduced ;
var bool: aux2255_BOOL:: var_is_introduced ;
var bool: aux2256_BOOL:: var_is_introduced ;
var bool: aux2257_BOOL:: var_is_introduced ;
var {0,1}: aux2257_INTEGER :: var_is_introduced ;
var bool: aux2258_BOOL:: var_is_introduced ;
var bool: aux2259_BOOL:: var_is_introduced ;
var 2..44: aux2260:: var_is_introduced ;
var bool: aux2261_BOOL:: var_is_introduced ;
var bool: aux2262_BOOL:: var_is_introduced ;
var bool: aux2263_BOOL:: var_is_introduced ;
var {0,1}: aux2263_INTEGER :: var_is_introduced ;
var bool: aux2264_BOOL:: var_is_introduced ;
var bool: aux2265_BOOL:: var_is_introduced ;
var 2..44: aux2266:: var_is_introduced ;
var bool: aux2267_BOOL:: var_is_introduced ;
var bool: aux2268_BOOL:: var_is_introduced ;
var bool: aux2269_BOOL:: var_is_introduced ;
var {0,1}: aux2269_INTEGER :: var_is_introduced ;
var bool: aux2270_BOOL:: var_is_introduced ;
var bool: aux2271_BOOL:: var_is_introduced ;
var 3..45: aux2272:: var_is_introduced ;
var bool: aux2273_BOOL:: var_is_introduced ;
var bool: aux2274_BOOL:: var_is_introduced ;
var bool: aux2275_BOOL:: var_is_introduced ;
var {0,1}: aux2275_INTEGER :: var_is_introduced ;
var bool: aux2276_BOOL:: var_is_introduced ;
var bool: aux2277_BOOL:: var_is_introduced ;
var 2..44: aux2278:: var_is_introduced ;
var bool: aux2279_BOOL:: var_is_introduced ;
var bool: aux2280_BOOL:: var_is_introduced ;
var bool: aux2281_BOOL:: var_is_introduced ;
var {0,1}: aux2281_INTEGER :: var_is_introduced ;
var bool: aux2282_BOOL:: var_is_introduced ;
var bool: aux2283_BOOL:: var_is_introduced ;
var 1..43: aux2284:: var_is_introduced ;
var bool: aux2285_BOOL:: var_is_introduced ;
var bool: aux2286_BOOL:: var_is_introduced ;
var bool: aux2287_BOOL:: var_is_introduced ;
var {0,1}: aux2287_INTEGER :: var_is_introduced ;
var bool: aux2288_BOOL:: var_is_introduced ;
var bool: aux2289_BOOL:: var_is_introduced ;
var 2..44: aux2290:: var_is_introduced ;
var bool: aux2291_BOOL:: var_is_introduced ;
var bool: aux2292_BOOL:: var_is_introduced ;
var bool: aux2293_BOOL:: var_is_introduced ;
var {0,1}: aux2293_INTEGER :: var_is_introduced ;
var bool: aux2294_BOOL:: var_is_introduced ;
var bool: aux2295_BOOL:: var_is_introduced ;
var 1..43: aux2296:: var_is_introduced ;
var bool: aux2297_BOOL:: var_is_introduced ;
var bool: aux2298_BOOL:: var_is_introduced ;
var bool: aux2299_BOOL:: var_is_introduced ;
var {0,1}: aux2299_INTEGER :: var_is_introduced ;
var bool: aux2300_BOOL:: var_is_introduced ;
var bool: aux2301_BOOL:: var_is_introduced ;
var 2..44: aux2302:: var_is_introduced ;
var bool: aux2303_BOOL:: var_is_introduced ;
var bool: aux2304_BOOL:: var_is_introduced ;
var bool: aux2305_BOOL:: var_is_introduced ;
var {0,1}: aux2305_INTEGER :: var_is_introduced ;
var bool: aux2306_BOOL:: var_is_introduced ;
var bool: aux2307_BOOL:: var_is_introduced ;
var 2..44: aux2308:: var_is_introduced ;
var bool: aux2309_BOOL:: var_is_introduced ;
var bool: aux2310_BOOL:: var_is_introduced ;
var bool: aux2311_BOOL:: var_is_introduced ;
var {0,1}: aux2311_INTEGER :: var_is_introduced ;
var bool: aux2312_BOOL:: var_is_introduced ;
var bool: aux2313_BOOL:: var_is_introduced ;
var 1..43: aux2314:: var_is_introduced ;
var bool: aux2315_BOOL:: var_is_introduced ;
var bool: aux2316_BOOL:: var_is_introduced ;
var bool: aux2317_BOOL:: var_is_introduced ;
var {0,1}: aux2317_INTEGER :: var_is_introduced ;
var bool: aux2318_BOOL:: var_is_introduced ;
var bool: aux2319_BOOL:: var_is_introduced ;
var 2..44: aux2320:: var_is_introduced ;
var bool: aux2321_BOOL:: var_is_introduced ;
var bool: aux2322_BOOL:: var_is_introduced ;
var bool: aux2323_BOOL:: var_is_introduced ;
var {0,1}: aux2323_INTEGER :: var_is_introduced ;
var bool: aux2324_BOOL:: var_is_introduced ;
var bool: aux2325_BOOL:: var_is_introduced ;
var 4..46: aux2326:: var_is_introduced ;
var bool: aux2327_BOOL:: var_is_introduced ;
var bool: aux2328_BOOL:: var_is_introduced ;
var bool: aux2329_BOOL:: var_is_introduced ;
var {0,1}: aux2329_INTEGER :: var_is_introduced ;
var bool: aux2330_BOOL:: var_is_introduced ;
var bool: aux2331_BOOL:: var_is_introduced ;
var 1..43: aux2332:: var_is_introduced ;
var bool: aux2333_BOOL:: var_is_introduced ;
var bool: aux2334_BOOL:: var_is_introduced ;
var bool: aux2335_BOOL:: var_is_introduced ;
var {0,1}: aux2335_INTEGER :: var_is_introduced ;
var bool: aux2336_BOOL:: var_is_introduced ;
var bool: aux2337_BOOL:: var_is_introduced ;
var 3..45: aux2338:: var_is_introduced ;
var bool: aux2339_BOOL:: var_is_introduced ;
var bool: aux2340_BOOL:: var_is_introduced ;
var bool: aux2341_BOOL:: var_is_introduced ;
var {0,1}: aux2341_INTEGER :: var_is_introduced ;
var bool: aux2342_BOOL:: var_is_introduced ;
var bool: aux2343_BOOL:: var_is_introduced ;
var 3..45: aux2344:: var_is_introduced ;
var bool: aux2345_BOOL:: var_is_introduced ;
var bool: aux2346_BOOL:: var_is_introduced ;
var bool: aux2347_BOOL:: var_is_introduced ;
var {0,1}: aux2347_INTEGER :: var_is_introduced ;
var bool: aux2348_BOOL:: var_is_introduced ;
var bool: aux2349_BOOL:: var_is_introduced ;
var 2..44: aux2350:: var_is_introduced ;
var bool: aux2351_BOOL:: var_is_introduced ;
var bool: aux2352_BOOL:: var_is_introduced ;
var bool: aux2353_BOOL:: var_is_introduced ;
var {0,1}: aux2353_INTEGER :: var_is_introduced ;
var bool: aux2354_BOOL:: var_is_introduced ;
var bool: aux2355_BOOL:: var_is_introduced ;
var 3..45: aux2356:: var_is_introduced ;
var bool: aux2357_BOOL:: var_is_introduced ;
var bool: aux2358_BOOL:: var_is_introduced ;
var bool: aux2359_BOOL:: var_is_introduced ;
var {0,1}: aux2359_INTEGER :: var_is_introduced ;
var bool: aux2360_BOOL:: var_is_introduced ;
var bool: aux2361_BOOL:: var_is_introduced ;
var 2..44: aux2362:: var_is_introduced ;
var bool: aux2363_BOOL:: var_is_introduced ;
var bool: aux2364_BOOL:: var_is_introduced ;
var {0,1}: aux2364_INTEGER :: var_is_introduced ;
var bool: aux2365_BOOL:: var_is_introduced ;
var bool: aux2366_BOOL:: var_is_introduced ;
var 1..43: aux2367:: var_is_introduced ;
var bool: aux2368_BOOL:: var_is_introduced ;
var bool: aux2369_BOOL:: var_is_introduced ;
var bool: aux2370_BOOL:: var_is_introduced ;
var {0,1}: aux2370_INTEGER :: var_is_introduced ;
var bool: aux2371_BOOL:: var_is_introduced ;
var bool: aux2372_BOOL:: var_is_introduced ;
var 2..44: aux2373:: var_is_introduced ;
var bool: aux2374_BOOL:: var_is_introduced ;
var bool: aux2375_BOOL:: var_is_introduced ;
var bool: aux2376_BOOL:: var_is_introduced ;
var {0,1}: aux2376_INTEGER :: var_is_introduced ;
var bool: aux2377_BOOL:: var_is_introduced ;
var bool: aux2378_BOOL:: var_is_introduced ;
var 3..45: aux2379:: var_is_introduced ;
var bool: aux2380_BOOL:: var_is_introduced ;
var bool: aux2381_BOOL:: var_is_introduced ;
var bool: aux2382_BOOL:: var_is_introduced ;
var {0,1}: aux2382_INTEGER :: var_is_introduced ;
var bool: aux2383_BOOL:: var_is_introduced ;
var bool: aux2384_BOOL:: var_is_introduced ;
var 2..44: aux2385:: var_is_introduced ;
var bool: aux2386_BOOL:: var_is_introduced ;
var bool: aux2387_BOOL:: var_is_introduced ;
var bool: aux2388_BOOL:: var_is_introduced ;
var {0,1}: aux2388_INTEGER :: var_is_introduced ;
var bool: aux2389_BOOL:: var_is_introduced ;
var bool: aux2390_BOOL:: var_is_introduced ;
var 2..44: aux2391:: var_is_introduced ;
var bool: aux2392_BOOL:: var_is_introduced ;
var bool: aux2393_BOOL:: var_is_introduced ;
var bool: aux2394_BOOL:: var_is_introduced ;
var {0,1}: aux2394_INTEGER :: var_is_introduced ;
var bool: aux2395_BOOL:: var_is_introduced ;
var bool: aux2396_BOOL:: var_is_introduced ;
var 3..45: aux2397:: var_is_introduced ;
var bool: aux2398_BOOL:: var_is_introduced ;
var bool: aux2399_BOOL:: var_is_introduced ;
var bool: aux2400_BOOL:: var_is_introduced ;
var {0,1}: aux2400_INTEGER :: var_is_introduced ;
var bool: aux2401_BOOL:: var_is_introduced ;
var bool: aux2402_BOOL:: var_is_introduced ;
var 2..44: aux2403:: var_is_introduced ;
var bool: aux2404_BOOL:: var_is_introduced ;
var bool: aux2405_BOOL:: var_is_introduced ;
var bool: aux2406_BOOL:: var_is_introduced ;
var {0,1}: aux2406_INTEGER :: var_is_introduced ;
var bool: aux2407_BOOL:: var_is_introduced ;
var bool: aux2408_BOOL:: var_is_introduced ;
var 1..43: aux2409:: var_is_introduced ;
var bool: aux2410_BOOL:: var_is_introduced ;
var bool: aux2411_BOOL:: var_is_introduced ;
var bool: aux2412_BOOL:: var_is_introduced ;
var {0,1}: aux2412_INTEGER :: var_is_introduced ;
var bool: aux2413_BOOL:: var_is_introduced ;
var bool: aux2414_BOOL:: var_is_introduced ;
var 2..44: aux2415:: var_is_introduced ;
var bool: aux2416_BOOL:: var_is_introduced ;
var bool: aux2417_BOOL:: var_is_introduced ;
var bool: aux2418_BOOL:: var_is_introduced ;
var {0,1}: aux2418_INTEGER :: var_is_introduced ;
var bool: aux2419_BOOL:: var_is_introduced ;
var bool: aux2420_BOOL:: var_is_introduced ;
var 1..43: aux2421:: var_is_introduced ;
var bool: aux2422_BOOL:: var_is_introduced ;
var bool: aux2423_BOOL:: var_is_introduced ;
var bool: aux2424_BOOL:: var_is_introduced ;
var {0,1}: aux2424_INTEGER :: var_is_introduced ;
var bool: aux2425_BOOL:: var_is_introduced ;
var bool: aux2426_BOOL:: var_is_introduced ;
var 2..44: aux2427:: var_is_introduced ;
var bool: aux2428_BOOL:: var_is_introduced ;
var bool: aux2429_BOOL:: var_is_introduced ;
var bool: aux2430_BOOL:: var_is_introduced ;
var {0,1}: aux2430_INTEGER :: var_is_introduced ;
var bool: aux2431_BOOL:: var_is_introduced ;
var bool: aux2432_BOOL:: var_is_introduced ;
var 1..43: aux2433:: var_is_introduced ;
var bool: aux2434_BOOL:: var_is_introduced ;
var bool: aux2435_BOOL:: var_is_introduced ;
var bool: aux2436_BOOL:: var_is_introduced ;
var {0,1}: aux2436_INTEGER :: var_is_introduced ;
var bool: aux2437_BOOL:: var_is_introduced ;
var bool: aux2438_BOOL:: var_is_introduced ;
var 2..44: aux2439:: var_is_introduced ;
var bool: aux2440_BOOL:: var_is_introduced ;
var bool: aux2441_BOOL:: var_is_introduced ;
var bool: aux2442_BOOL:: var_is_introduced ;
var {0,1}: aux2442_INTEGER :: var_is_introduced ;
var bool: aux2443_BOOL:: var_is_introduced ;
var bool: aux2444_BOOL:: var_is_introduced ;
var 4..46: aux2445:: var_is_introduced ;
var bool: aux2446_BOOL:: var_is_introduced ;
var bool: aux2447_BOOL:: var_is_introduced ;
var bool: aux2448_BOOL:: var_is_introduced ;
var {0,1}: aux2448_INTEGER :: var_is_introduced ;
var bool: aux2449_BOOL:: var_is_introduced ;
var bool: aux2450_BOOL:: var_is_introduced ;
var 1..43: aux2451:: var_is_introduced ;
var bool: aux2452_BOOL:: var_is_introduced ;
var bool: aux2453_BOOL:: var_is_introduced ;
var bool: aux2454_BOOL:: var_is_introduced ;
var {0,1}: aux2454_INTEGER :: var_is_introduced ;
var bool: aux2455_BOOL:: var_is_introduced ;
var bool: aux2456_BOOL:: var_is_introduced ;
var 3..45: aux2457:: var_is_introduced ;
var bool: aux2458_BOOL:: var_is_introduced ;
var bool: aux2459_BOOL:: var_is_introduced ;
var bool: aux2460_BOOL:: var_is_introduced ;
var {0,1}: aux2460_INTEGER :: var_is_introduced ;
var bool: aux2461_BOOL:: var_is_introduced ;
var bool: aux2462_BOOL:: var_is_introduced ;
var 3..45: aux2463:: var_is_introduced ;
var bool: aux2464_BOOL:: var_is_introduced ;
var bool: aux2465_BOOL:: var_is_introduced ;
var bool: aux2466_BOOL:: var_is_introduced ;
var {0,1}: aux2466_INTEGER :: var_is_introduced ;
var bool: aux2467_BOOL:: var_is_introduced ;
var bool: aux2468_BOOL:: var_is_introduced ;
var 2..44: aux2469:: var_is_introduced ;
var bool: aux2470_BOOL:: var_is_introduced ;
var bool: aux2471_BOOL:: var_is_introduced ;
var bool: aux2472_BOOL:: var_is_introduced ;
var {0,1}: aux2472_INTEGER :: var_is_introduced ;
var bool: aux2473_BOOL:: var_is_introduced ;
var bool: aux2474_BOOL:: var_is_introduced ;
var 3..45: aux2475:: var_is_introduced ;
var bool: aux2476_BOOL:: var_is_introduced ;
var bool: aux2477_BOOL:: var_is_introduced ;
var bool: aux2478_BOOL:: var_is_introduced ;
var {0,1}: aux2478_INTEGER :: var_is_introduced ;
var bool: aux2479_BOOL:: var_is_introduced ;
var bool: aux2480_BOOL:: var_is_introduced ;
var 3..45: aux2481:: var_is_introduced ;
var bool: aux2482_BOOL:: var_is_introduced ;
var bool: aux2483_BOOL:: var_is_introduced ;
var {0,1}: aux2483_INTEGER :: var_is_introduced ;
var bool: aux2484_BOOL:: var_is_introduced ;
var bool: aux2485_BOOL:: var_is_introduced ;
var 1..43: aux2486:: var_is_introduced ;
var bool: aux2487_BOOL:: var_is_introduced ;
var bool: aux2488_BOOL:: var_is_introduced ;
var bool: aux2489_BOOL:: var_is_introduced ;
var {0,1}: aux2489_INTEGER :: var_is_introduced ;
var bool: aux2490_BOOL:: var_is_introduced ;
var bool: aux2491_BOOL:: var_is_introduced ;
var 2..44: aux2492:: var_is_introduced ;
var bool: aux2493_BOOL:: var_is_introduced ;
var bool: aux2494_BOOL:: var_is_introduced ;
var bool: aux2495_BOOL:: var_is_introduced ;
var {0,1}: aux2495_INTEGER :: var_is_introduced ;
var bool: aux2496_BOOL:: var_is_introduced ;
var bool: aux2497_BOOL:: var_is_introduced ;
var 3..45: aux2498:: var_is_introduced ;
var bool: aux2499_BOOL:: var_is_introduced ;
var bool: aux2500_BOOL:: var_is_introduced ;
var bool: aux2501_BOOL:: var_is_introduced ;
var {0,1}: aux2501_INTEGER :: var_is_introduced ;
var bool: aux2502_BOOL:: var_is_introduced ;
var bool: aux2503_BOOL:: var_is_introduced ;
var 2..44: aux2504:: var_is_introduced ;
var bool: aux2505_BOOL:: var_is_introduced ;
var bool: aux2506_BOOL:: var_is_introduced ;
var bool: aux2507_BOOL:: var_is_introduced ;
var {0,1}: aux2507_INTEGER :: var_is_introduced ;
var bool: aux2508_BOOL:: var_is_introduced ;
var bool: aux2509_BOOL:: var_is_introduced ;
var 2..44: aux2510:: var_is_introduced ;
var bool: aux2511_BOOL:: var_is_introduced ;
var bool: aux2512_BOOL:: var_is_introduced ;
var bool: aux2513_BOOL:: var_is_introduced ;
var {0,1}: aux2513_INTEGER :: var_is_introduced ;
var bool: aux2514_BOOL:: var_is_introduced ;
var bool: aux2515_BOOL:: var_is_introduced ;
var 3..45: aux2516:: var_is_introduced ;
var bool: aux2517_BOOL:: var_is_introduced ;
var bool: aux2518_BOOL:: var_is_introduced ;
var bool: aux2519_BOOL:: var_is_introduced ;
var {0,1}: aux2519_INTEGER :: var_is_introduced ;
var bool: aux2520_BOOL:: var_is_introduced ;
var bool: aux2521_BOOL:: var_is_introduced ;
var 2..44: aux2522:: var_is_introduced ;
var bool: aux2523_BOOL:: var_is_introduced ;
var bool: aux2524_BOOL:: var_is_introduced ;
var bool: aux2525_BOOL:: var_is_introduced ;
var {0,1}: aux2525_INTEGER :: var_is_introduced ;
var bool: aux2526_BOOL:: var_is_introduced ;
var bool: aux2527_BOOL:: var_is_introduced ;
var 1..43: aux2528:: var_is_introduced ;
var bool: aux2529_BOOL:: var_is_introduced ;
var bool: aux2530_BOOL:: var_is_introduced ;
var bool: aux2531_BOOL:: var_is_introduced ;
var {0,1}: aux2531_INTEGER :: var_is_introduced ;
var bool: aux2532_BOOL:: var_is_introduced ;
var bool: aux2533_BOOL:: var_is_introduced ;
var 2..44: aux2534:: var_is_introduced ;
var bool: aux2535_BOOL:: var_is_introduced ;
var bool: aux2536_BOOL:: var_is_introduced ;
var bool: aux2537_BOOL:: var_is_introduced ;
var {0,1}: aux2537_INTEGER :: var_is_introduced ;
var bool: aux2538_BOOL:: var_is_introduced ;
var bool: aux2539_BOOL:: var_is_introduced ;
var 1..43: aux2540:: var_is_introduced ;
var bool: aux2541_BOOL:: var_is_introduced ;
var bool: aux2542_BOOL:: var_is_introduced ;
var bool: aux2543_BOOL:: var_is_introduced ;
var {0,1}: aux2543_INTEGER :: var_is_introduced ;
var bool: aux2544_BOOL:: var_is_introduced ;
var bool: aux2545_BOOL:: var_is_introduced ;
var 2..44: aux2546:: var_is_introduced ;
var bool: aux2547_BOOL:: var_is_introduced ;
var bool: aux2548_BOOL:: var_is_introduced ;
var bool: aux2549_BOOL:: var_is_introduced ;
var {0,1}: aux2549_INTEGER :: var_is_introduced ;
var bool: aux2550_BOOL:: var_is_introduced ;
var bool: aux2551_BOOL:: var_is_introduced ;
var 2..44: aux2552:: var_is_introduced ;
var bool: aux2553_BOOL:: var_is_introduced ;
var bool: aux2554_BOOL:: var_is_introduced ;
var bool: aux2555_BOOL:: var_is_introduced ;
var {0,1}: aux2555_INTEGER :: var_is_introduced ;
var bool: aux2556_BOOL:: var_is_introduced ;
var bool: aux2557_BOOL:: var_is_introduced ;
var 1..43: aux2558:: var_is_introduced ;
var bool: aux2559_BOOL:: var_is_introduced ;
var bool: aux2560_BOOL:: var_is_introduced ;
var bool: aux2561_BOOL:: var_is_introduced ;
var {0,1}: aux2561_INTEGER :: var_is_introduced ;
var bool: aux2562_BOOL:: var_is_introduced ;
var bool: aux2563_BOOL:: var_is_introduced ;
var 4..46: aux2564:: var_is_introduced ;
var bool: aux2565_BOOL:: var_is_introduced ;
var bool: aux2566_BOOL:: var_is_introduced ;
var bool: aux2567_BOOL:: var_is_introduced ;
var {0,1}: aux2567_INTEGER :: var_is_introduced ;
var bool: aux2568_BOOL:: var_is_introduced ;
var bool: aux2569_BOOL:: var_is_introduced ;
var 2..44: aux2570:: var_is_introduced ;
var bool: aux2571_BOOL:: var_is_introduced ;
var bool: aux2572_BOOL:: var_is_introduced ;
var bool: aux2573_BOOL:: var_is_introduced ;
var {0,1}: aux2573_INTEGER :: var_is_introduced ;
var bool: aux2574_BOOL:: var_is_introduced ;
var bool: aux2575_BOOL:: var_is_introduced ;
var 1..43: aux2576:: var_is_introduced ;
var bool: aux2577_BOOL:: var_is_introduced ;
var bool: aux2578_BOOL:: var_is_introduced ;
var bool: aux2579_BOOL:: var_is_introduced ;
var {0,1}: aux2579_INTEGER :: var_is_introduced ;
var bool: aux2580_BOOL:: var_is_introduced ;
var bool: aux2581_BOOL:: var_is_introduced ;
var 3..45: aux2582:: var_is_introduced ;
var bool: aux2583_BOOL:: var_is_introduced ;
var bool: aux2584_BOOL:: var_is_introduced ;
var bool: aux2585_BOOL:: var_is_introduced ;
var {0,1}: aux2585_INTEGER :: var_is_introduced ;
var bool: aux2586_BOOL:: var_is_introduced ;
var bool: aux2587_BOOL:: var_is_introduced ;
var 2..44: aux2588:: var_is_introduced ;
var bool: aux2589_BOOL:: var_is_introduced ;
var bool: aux2590_BOOL:: var_is_introduced ;
var bool: aux2591_BOOL:: var_is_introduced ;
var {0,1}: aux2591_INTEGER :: var_is_introduced ;
var bool: aux2592_BOOL:: var_is_introduced ;
var bool: aux2593_BOOL:: var_is_introduced ;
var 3..45: aux2594:: var_is_introduced ;
var bool: aux2595_BOOL:: var_is_introduced ;
var bool: aux2596_BOOL:: var_is_introduced ;
var bool: aux2597_BOOL:: var_is_introduced ;
var {0,1}: aux2597_INTEGER :: var_is_introduced ;
var bool: aux2598_BOOL:: var_is_introduced ;
var bool: aux2599_BOOL:: var_is_introduced ;
var 2..44: aux2600:: var_is_introduced ;
var bool: aux2601_BOOL:: var_is_introduced ;
var bool: aux2602_BOOL:: var_is_introduced ;
var {0,1}: aux2602_INTEGER :: var_is_introduced ;
var bool: aux2603_BOOL:: var_is_introduced ;
var bool: aux2604_BOOL:: var_is_introduced ;
var 1..43: aux2605:: var_is_introduced ;
var bool: aux2606_BOOL:: var_is_introduced ;
var bool: aux2607_BOOL:: var_is_introduced ;
var bool: aux2608_BOOL:: var_is_introduced ;
var {0,1}: aux2608_INTEGER :: var_is_introduced ;
var bool: aux2609_BOOL:: var_is_introduced ;
var bool: aux2610_BOOL:: var_is_introduced ;
var 2..44: aux2611:: var_is_introduced ;
var bool: aux2612_BOOL:: var_is_introduced ;
var bool: aux2613_BOOL:: var_is_introduced ;
var bool: aux2614_BOOL:: var_is_introduced ;
var {0,1}: aux2614_INTEGER :: var_is_introduced ;
var bool: aux2615_BOOL:: var_is_introduced ;
var bool: aux2616_BOOL:: var_is_introduced ;
var 3..45: aux2617:: var_is_introduced ;
var bool: aux2618_BOOL:: var_is_introduced ;
var bool: aux2619_BOOL:: var_is_introduced ;
var bool: aux2620_BOOL:: var_is_introduced ;
var {0,1}: aux2620_INTEGER :: var_is_introduced ;
var bool: aux2621_BOOL:: var_is_introduced ;
var bool: aux2622_BOOL:: var_is_introduced ;
var 2..44: aux2623:: var_is_introduced ;
var bool: aux2624_BOOL:: var_is_introduced ;
var bool: aux2625_BOOL:: var_is_introduced ;
var bool: aux2626_BOOL:: var_is_introduced ;
var {0,1}: aux2626_INTEGER :: var_is_introduced ;
var bool: aux2627_BOOL:: var_is_introduced ;
var bool: aux2628_BOOL:: var_is_introduced ;
var 3..45: aux2629:: var_is_introduced ;
var bool: aux2630_BOOL:: var_is_introduced ;
var bool: aux2631_BOOL:: var_is_introduced ;
var bool: aux2632_BOOL:: var_is_introduced ;
var {0,1}: aux2632_INTEGER :: var_is_introduced ;
var bool: aux2633_BOOL:: var_is_introduced ;
var bool: aux2634_BOOL:: var_is_introduced ;
var 2..44: aux2635:: var_is_introduced ;
var bool: aux2636_BOOL:: var_is_introduced ;
var bool: aux2637_BOOL:: var_is_introduced ;
var bool: aux2638_BOOL:: var_is_introduced ;
var {0,1}: aux2638_INTEGER :: var_is_introduced ;
var bool: aux2639_BOOL:: var_is_introduced ;
var bool: aux2640_BOOL:: var_is_introduced ;
var 1..43: aux2641:: var_is_introduced ;
var bool: aux2642_BOOL:: var_is_introduced ;
var bool: aux2643_BOOL:: var_is_introduced ;
var bool: aux2644_BOOL:: var_is_introduced ;
var {0,1}: aux2644_INTEGER :: var_is_introduced ;
var bool: aux2645_BOOL:: var_is_introduced ;
var bool: aux2646_BOOL:: var_is_introduced ;
var 2..44: aux2647:: var_is_introduced ;
var bool: aux2648_BOOL:: var_is_introduced ;
var bool: aux2649_BOOL:: var_is_introduced ;
var bool: aux2650_BOOL:: var_is_introduced ;
var {0,1}: aux2650_INTEGER :: var_is_introduced ;
var bool: aux2651_BOOL:: var_is_introduced ;
var bool: aux2652_BOOL:: var_is_introduced ;
var 1..43: aux2653:: var_is_introduced ;
var bool: aux2654_BOOL:: var_is_introduced ;
var bool: aux2655_BOOL:: var_is_introduced ;
var bool: aux2656_BOOL:: var_is_introduced ;
var {0,1}: aux2656_INTEGER :: var_is_introduced ;
var bool: aux2657_BOOL:: var_is_introduced ;
var bool: aux2658_BOOL:: var_is_introduced ;
var 2..44: aux2659:: var_is_introduced ;
var bool: aux2660_BOOL:: var_is_introduced ;
var bool: aux2661_BOOL:: var_is_introduced ;
var bool: aux2662_BOOL:: var_is_introduced ;
var {0,1}: aux2662_INTEGER :: var_is_introduced ;
var bool: aux2663_BOOL:: var_is_introduced ;
var bool: aux2664_BOOL:: var_is_introduced ;
var 2..44: aux2665:: var_is_introduced ;
var bool: aux2666_BOOL:: var_is_introduced ;
var bool: aux2667_BOOL:: var_is_introduced ;
var bool: aux2668_BOOL:: var_is_introduced ;
var {0,1}: aux2668_INTEGER :: var_is_introduced ;
var bool: aux2669_BOOL:: var_is_introduced ;
var bool: aux2670_BOOL:: var_is_introduced ;
var 1..43: aux2671:: var_is_introduced ;
var bool: aux2672_BOOL:: var_is_introduced ;
var bool: aux2673_BOOL:: var_is_introduced ;
var bool: aux2674_BOOL:: var_is_introduced ;
var {0,1}: aux2674_INTEGER :: var_is_introduced ;
var bool: aux2675_BOOL:: var_is_introduced ;
var bool: aux2676_BOOL:: var_is_introduced ;
var 2..44: aux2677:: var_is_introduced ;
var bool: aux2678_BOOL:: var_is_introduced ;
var bool: aux2679_BOOL:: var_is_introduced ;
var bool: aux2680_BOOL:: var_is_introduced ;
var {0,1}: aux2680_INTEGER :: var_is_introduced ;
var bool: aux2681_BOOL:: var_is_introduced ;
var bool: aux2682_BOOL:: var_is_introduced ;
var 4..46: aux2683:: var_is_introduced ;
var bool: aux2684_BOOL:: var_is_introduced ;
var bool: aux2685_BOOL:: var_is_introduced ;
var bool: aux2686_BOOL:: var_is_introduced ;
var {0,1}: aux2686_INTEGER :: var_is_introduced ;
var bool: aux2687_BOOL:: var_is_introduced ;
var bool: aux2688_BOOL:: var_is_introduced ;
var 1..43: aux2689:: var_is_introduced ;
var bool: aux2690_BOOL:: var_is_introduced ;
var bool: aux2691_BOOL:: var_is_introduced ;
var bool: aux2692_BOOL:: var_is_introduced ;
var {0,1}: aux2692_INTEGER :: var_is_introduced ;
var bool: aux2693_BOOL:: var_is_introduced ;
var bool: aux2694_BOOL:: var_is_introduced ;
var 3..45: aux2695:: var_is_introduced ;
var bool: aux2696_BOOL:: var_is_introduced ;
var bool: aux2697_BOOL:: var_is_introduced ;
var bool: aux2698_BOOL:: var_is_introduced ;
var {0,1}: aux2698_INTEGER :: var_is_introduced ;
var bool: aux2699_BOOL:: var_is_introduced ;
var bool: aux2700_BOOL:: var_is_introduced ;
var 3..45: aux2701:: var_is_introduced ;
var bool: aux2702_BOOL:: var_is_introduced ;
var bool: aux2703_BOOL:: var_is_introduced ;
var bool: aux2704_BOOL:: var_is_introduced ;
var {0,1}: aux2704_INTEGER :: var_is_introduced ;
var bool: aux2705_BOOL:: var_is_introduced ;
var bool: aux2706_BOOL:: var_is_introduced ;
var 2..44: aux2707:: var_is_introduced ;
var bool: aux2708_BOOL:: var_is_introduced ;
var bool: aux2709_BOOL:: var_is_introduced ;
var bool: aux2710_BOOL:: var_is_introduced ;
var {0,1}: aux2710_INTEGER :: var_is_introduced ;
var bool: aux2711_BOOL:: var_is_introduced ;
var bool: aux2712_BOOL:: var_is_introduced ;
var 3..45: aux2713:: var_is_introduced ;
var bool: aux2714_BOOL:: var_is_introduced ;
var bool: aux2715_BOOL:: var_is_introduced ;
var bool: aux2716_BOOL:: var_is_introduced ;
var {0,1}: aux2716_INTEGER :: var_is_introduced ;
var bool: aux2717_BOOL:: var_is_introduced ;
var bool: aux2718_BOOL:: var_is_introduced ;
var 2..44: aux2719:: var_is_introduced ;
var bool: aux2720_BOOL:: var_is_introduced ;
var bool: aux2721_BOOL:: var_is_introduced ;
var {0,1}: aux2721_INTEGER :: var_is_introduced ;
var bool: aux2722_BOOL:: var_is_introduced ;
var bool: aux2723_BOOL:: var_is_introduced ;
var 1..43: aux2724:: var_is_introduced ;
var bool: aux2725_BOOL:: var_is_introduced ;
var bool: aux2726_BOOL:: var_is_introduced ;
var bool: aux2727_BOOL:: var_is_introduced ;
var {0,1}: aux2727_INTEGER :: var_is_introduced ;
var bool: aux2728_BOOL:: var_is_introduced ;
var bool: aux2729_BOOL:: var_is_introduced ;
var 2..44: aux2730:: var_is_introduced ;
var bool: aux2731_BOOL:: var_is_introduced ;
var bool: aux2732_BOOL:: var_is_introduced ;
var bool: aux2733_BOOL:: var_is_introduced ;
var {0,1}: aux2733_INTEGER :: var_is_introduced ;
var bool: aux2734_BOOL:: var_is_introduced ;
var bool: aux2735_BOOL:: var_is_introduced ;
var 3..45: aux2736:: var_is_introduced ;
var bool: aux2737_BOOL:: var_is_introduced ;
var bool: aux2738_BOOL:: var_is_introduced ;
var bool: aux2739_BOOL:: var_is_introduced ;
var {0,1}: aux2739_INTEGER :: var_is_introduced ;
var bool: aux2740_BOOL:: var_is_introduced ;
var bool: aux2741_BOOL:: var_is_introduced ;
var 2..44: aux2742:: var_is_introduced ;
var bool: aux2743_BOOL:: var_is_introduced ;
var bool: aux2744_BOOL:: var_is_introduced ;
var bool: aux2745_BOOL:: var_is_introduced ;
var {0,1}: aux2745_INTEGER :: var_is_introduced ;
var bool: aux2746_BOOL:: var_is_introduced ;
var bool: aux2747_BOOL:: var_is_introduced ;
var 2..44: aux2748:: var_is_introduced ;
var bool: aux2749_BOOL:: var_is_introduced ;
var bool: aux2750_BOOL:: var_is_introduced ;
var bool: aux2751_BOOL:: var_is_introduced ;
var {0,1}: aux2751_INTEGER :: var_is_introduced ;
var bool: aux2752_BOOL:: var_is_introduced ;
var bool: aux2753_BOOL:: var_is_introduced ;
var 3..45: aux2754:: var_is_introduced ;
var bool: aux2755_BOOL:: var_is_introduced ;
var bool: aux2756_BOOL:: var_is_introduced ;
var bool: aux2757_BOOL:: var_is_introduced ;
var {0,1}: aux2757_INTEGER :: var_is_introduced ;
var bool: aux2758_BOOL:: var_is_introduced ;
var bool: aux2759_BOOL:: var_is_introduced ;
var 1..43: aux2760:: var_is_introduced ;
var bool: aux2761_BOOL:: var_is_introduced ;
var bool: aux2762_BOOL:: var_is_introduced ;
var bool: aux2763_BOOL:: var_is_introduced ;
var {0,1}: aux2763_INTEGER :: var_is_introduced ;
var bool: aux2764_BOOL:: var_is_introduced ;
var bool: aux2765_BOOL:: var_is_introduced ;
var 2..44: aux2766:: var_is_introduced ;
var bool: aux2767_BOOL:: var_is_introduced ;
var bool: aux2768_BOOL:: var_is_introduced ;
var bool: aux2769_BOOL:: var_is_introduced ;
var {0,1}: aux2769_INTEGER :: var_is_introduced ;
var bool: aux2770_BOOL:: var_is_introduced ;
var bool: aux2771_BOOL:: var_is_introduced ;
var 1..43: aux2772:: var_is_introduced ;
var bool: aux2773_BOOL:: var_is_introduced ;
var bool: aux2774_BOOL:: var_is_introduced ;
var bool: aux2775_BOOL:: var_is_introduced ;
var {0,1}: aux2775_INTEGER :: var_is_introduced ;
var bool: aux2776_BOOL:: var_is_introduced ;
var bool: aux2777_BOOL:: var_is_introduced ;
var 2..44: aux2778:: var_is_introduced ;
var bool: aux2779_BOOL:: var_is_introduced ;
var bool: aux2780_BOOL:: var_is_introduced ;
var bool: aux2781_BOOL:: var_is_introduced ;
var {0,1}: aux2781_INTEGER :: var_is_introduced ;
var bool: aux2782_BOOL:: var_is_introduced ;
var bool: aux2783_BOOL:: var_is_introduced ;
var 2..44: aux2784:: var_is_introduced ;
var bool: aux2785_BOOL:: var_is_introduced ;
var bool: aux2786_BOOL:: var_is_introduced ;
var bool: aux2787_BOOL:: var_is_introduced ;
var {0,1}: aux2787_INTEGER :: var_is_introduced ;
var bool: aux2788_BOOL:: var_is_introduced ;
var bool: aux2789_BOOL:: var_is_introduced ;
var 1..43: aux2790:: var_is_introduced ;
var bool: aux2791_BOOL:: var_is_introduced ;
var bool: aux2792_BOOL:: var_is_introduced ;
var bool: aux2793_BOOL:: var_is_introduced ;
var {0,1}: aux2793_INTEGER :: var_is_introduced ;
var bool: aux2794_BOOL:: var_is_introduced ;
var bool: aux2795_BOOL:: var_is_introduced ;
var 2..44: aux2796:: var_is_introduced ;
var bool: aux2797_BOOL:: var_is_introduced ;
var bool: aux2798_BOOL:: var_is_introduced ;
var bool: aux2799_BOOL:: var_is_introduced ;
var {0,1}: aux2799_INTEGER :: var_is_introduced ;
var bool: aux2800_BOOL:: var_is_introduced ;
var bool: aux2801_BOOL:: var_is_introduced ;
var 4..46: aux2802:: var_is_introduced ;
var bool: aux2803_BOOL:: var_is_introduced ;
var bool: aux2804_BOOL:: var_is_introduced ;
var bool: aux2805_BOOL:: var_is_introduced ;
var {0,1}: aux2805_INTEGER :: var_is_introduced ;
var bool: aux2806_BOOL:: var_is_introduced ;
var bool: aux2807_BOOL:: var_is_introduced ;
var 1..43: aux2808:: var_is_introduced ;
var bool: aux2809_BOOL:: var_is_introduced ;
var bool: aux2810_BOOL:: var_is_introduced ;
var bool: aux2811_BOOL:: var_is_introduced ;
var {0,1}: aux2811_INTEGER :: var_is_introduced ;
var bool: aux2812_BOOL:: var_is_introduced ;
var bool: aux2813_BOOL:: var_is_introduced ;
var 3..45: aux2814:: var_is_introduced ;
var bool: aux2815_BOOL:: var_is_introduced ;
var bool: aux2816_BOOL:: var_is_introduced ;
var bool: aux2817_BOOL:: var_is_introduced ;
var {0,1}: aux2817_INTEGER :: var_is_introduced ;
var bool: aux2818_BOOL:: var_is_introduced ;
var bool: aux2819_BOOL:: var_is_introduced ;
var 3..45: aux2820:: var_is_introduced ;
var bool: aux2821_BOOL:: var_is_introduced ;
var bool: aux2822_BOOL:: var_is_introduced ;
var bool: aux2823_BOOL:: var_is_introduced ;
var {0,1}: aux2823_INTEGER :: var_is_introduced ;
var bool: aux2824_BOOL:: var_is_introduced ;
var bool: aux2825_BOOL:: var_is_introduced ;
var 2..44: aux2826:: var_is_introduced ;
var bool: aux2827_BOOL:: var_is_introduced ;
var bool: aux2828_BOOL:: var_is_introduced ;
var bool: aux2829_BOOL:: var_is_introduced ;
var {0,1}: aux2829_INTEGER :: var_is_introduced ;
var bool: aux2830_BOOL:: var_is_introduced ;
var bool: aux2831_BOOL:: var_is_introduced ;
var 3..45: aux2832:: var_is_introduced ;
var bool: aux2833_BOOL:: var_is_introduced ;
var bool: aux2834_BOOL:: var_is_introduced ;
var bool: aux2835_BOOL:: var_is_introduced ;
var {0,1}: aux2835_INTEGER :: var_is_introduced ;
var bool: aux2836_BOOL:: var_is_introduced ;
var bool: aux2837_BOOL:: var_is_introduced ;
var 1..43: aux2838:: var_is_introduced ;
var bool: aux2839_BOOL:: var_is_introduced ;
var bool: aux2840_BOOL:: var_is_introduced ;
var {0,1}: aux2840_INTEGER :: var_is_introduced ;
var bool: aux2841_BOOL:: var_is_introduced ;
var bool: aux2842_BOOL:: var_is_introduced ;
var 1..43: aux2843:: var_is_introduced ;
var bool: aux2844_BOOL:: var_is_introduced ;
var bool: aux2845_BOOL:: var_is_introduced ;
var bool: aux2846_BOOL:: var_is_introduced ;
var {0,1}: aux2846_INTEGER :: var_is_introduced ;
var bool: aux2847_BOOL:: var_is_introduced ;
var bool: aux2848_BOOL:: var_is_introduced ;
var 2..44: aux2849:: var_is_introduced ;
var bool: aux2850_BOOL:: var_is_introduced ;
var bool: aux2851_BOOL:: var_is_introduced ;
var bool: aux2852_BOOL:: var_is_introduced ;
var {0,1}: aux2852_INTEGER :: var_is_introduced ;
var bool: aux2853_BOOL:: var_is_introduced ;
var bool: aux2854_BOOL:: var_is_introduced ;
var 3..45: aux2855:: var_is_introduced ;
var bool: aux2856_BOOL:: var_is_introduced ;
var bool: aux2857_BOOL:: var_is_introduced ;
var bool: aux2858_BOOL:: var_is_introduced ;
var {0,1}: aux2858_INTEGER :: var_is_introduced ;
var bool: aux2859_BOOL:: var_is_introduced ;
var bool: aux2860_BOOL:: var_is_introduced ;
var 2..44: aux2861:: var_is_introduced ;
var bool: aux2862_BOOL:: var_is_introduced ;
var bool: aux2863_BOOL:: var_is_introduced ;
var bool: aux2864_BOOL:: var_is_introduced ;
var {0,1}: aux2864_INTEGER :: var_is_introduced ;
var bool: aux2865_BOOL:: var_is_introduced ;
var bool: aux2866_BOOL:: var_is_introduced ;
var 2..44: aux2867:: var_is_introduced ;
var bool: aux2868_BOOL:: var_is_introduced ;
var bool: aux2869_BOOL:: var_is_introduced ;
var bool: aux2870_BOOL:: var_is_introduced ;
var {0,1}: aux2870_INTEGER :: var_is_introduced ;
var bool: aux2871_BOOL:: var_is_introduced ;
var bool: aux2872_BOOL:: var_is_introduced ;
var 3..45: aux2873:: var_is_introduced ;
var bool: aux2874_BOOL:: var_is_introduced ;
var bool: aux2875_BOOL:: var_is_introduced ;
var bool: aux2876_BOOL:: var_is_introduced ;
var {0,1}: aux2876_INTEGER :: var_is_introduced ;
var bool: aux2877_BOOL:: var_is_introduced ;
var bool: aux2878_BOOL:: var_is_introduced ;
var 2..44: aux2879:: var_is_introduced ;
var bool: aux2880_BOOL:: var_is_introduced ;
var bool: aux2881_BOOL:: var_is_introduced ;
var bool: aux2882_BOOL:: var_is_introduced ;
var {0,1}: aux2882_INTEGER :: var_is_introduced ;
var bool: aux2883_BOOL:: var_is_introduced ;
var bool: aux2884_BOOL:: var_is_introduced ;
var 2..44: aux2885:: var_is_introduced ;
var bool: aux2886_BOOL:: var_is_introduced ;
var bool: aux2887_BOOL:: var_is_introduced ;
var bool: aux2888_BOOL:: var_is_introduced ;
var {0,1}: aux2888_INTEGER :: var_is_introduced ;
var bool: aux2889_BOOL:: var_is_introduced ;
var bool: aux2890_BOOL:: var_is_introduced ;
var 1..43: aux2891:: var_is_introduced ;
var bool: aux2892_BOOL:: var_is_introduced ;
var bool: aux2893_BOOL:: var_is_introduced ;
var bool: aux2894_BOOL:: var_is_introduced ;
var {0,1}: aux2894_INTEGER :: var_is_introduced ;
var bool: aux2895_BOOL:: var_is_introduced ;
var bool: aux2896_BOOL:: var_is_introduced ;
var 2..44: aux2897:: var_is_introduced ;
var bool: aux2898_BOOL:: var_is_introduced ;
var bool: aux2899_BOOL:: var_is_introduced ;
var bool: aux2900_BOOL:: var_is_introduced ;
var {0,1}: aux2900_INTEGER :: var_is_introduced ;
var bool: aux2901_BOOL:: var_is_introduced ;
var bool: aux2902_BOOL:: var_is_introduced ;
var 2..44: aux2903:: var_is_introduced ;
var bool: aux2904_BOOL:: var_is_introduced ;
var bool: aux2905_BOOL:: var_is_introduced ;
var bool: aux2906_BOOL:: var_is_introduced ;
var {0,1}: aux2906_INTEGER :: var_is_introduced ;
var bool: aux2907_BOOL:: var_is_introduced ;
var bool: aux2908_BOOL:: var_is_introduced ;
var 1..43: aux2909:: var_is_introduced ;
var bool: aux2910_BOOL:: var_is_introduced ;
var bool: aux2911_BOOL:: var_is_introduced ;
var bool: aux2912_BOOL:: var_is_introduced ;
var {0,1}: aux2912_INTEGER :: var_is_introduced ;
var bool: aux2913_BOOL:: var_is_introduced ;
var bool: aux2914_BOOL:: var_is_introduced ;
var 2..44: aux2915:: var_is_introduced ;
var bool: aux2916_BOOL:: var_is_introduced ;
var bool: aux2917_BOOL:: var_is_introduced ;
var bool: aux2918_BOOL:: var_is_introduced ;
var {0,1}: aux2918_INTEGER :: var_is_introduced ;
var bool: aux2919_BOOL:: var_is_introduced ;
var bool: aux2920_BOOL:: var_is_introduced ;
var 4..46: aux2921:: var_is_introduced ;
var bool: aux2922_BOOL:: var_is_introduced ;
var bool: aux2923_BOOL:: var_is_introduced ;
var bool: aux2924_BOOL:: var_is_introduced ;
var {0,1}: aux2924_INTEGER :: var_is_introduced ;
var bool: aux2925_BOOL:: var_is_introduced ;
var bool: aux2926_BOOL:: var_is_introduced ;
var 1..43: aux2927:: var_is_introduced ;
var bool: aux2928_BOOL:: var_is_introduced ;
var bool: aux2929_BOOL:: var_is_introduced ;
var bool: aux2930_BOOL:: var_is_introduced ;
var {0,1}: aux2930_INTEGER :: var_is_introduced ;
var bool: aux2931_BOOL:: var_is_introduced ;
var bool: aux2932_BOOL:: var_is_introduced ;
var 3..45: aux2933:: var_is_introduced ;
var bool: aux2934_BOOL:: var_is_introduced ;
var bool: aux2935_BOOL:: var_is_introduced ;
var bool: aux2936_BOOL:: var_is_introduced ;
var {0,1}: aux2936_INTEGER :: var_is_introduced ;
var bool: aux2937_BOOL:: var_is_introduced ;
var bool: aux2938_BOOL:: var_is_introduced ;
var 3..45: aux2939:: var_is_introduced ;
var bool: aux2940_BOOL:: var_is_introduced ;
var bool: aux2941_BOOL:: var_is_introduced ;
var bool: aux2942_BOOL:: var_is_introduced ;
var {0,1}: aux2942_INTEGER :: var_is_introduced ;
var bool: aux2943_BOOL:: var_is_introduced ;
var bool: aux2944_BOOL:: var_is_introduced ;
var 2..44: aux2945:: var_is_introduced ;
var bool: aux2946_BOOL:: var_is_introduced ;
var bool: aux2947_BOOL:: var_is_introduced ;
var bool: aux2948_BOOL:: var_is_introduced ;
var {0,1}: aux2948_INTEGER :: var_is_introduced ;
var bool: aux2949_BOOL:: var_is_introduced ;
var bool: aux2950_BOOL:: var_is_introduced ;
var 3..45: aux2951:: var_is_introduced ;
var bool: aux2952_BOOL:: var_is_introduced ;
var bool: aux2953_BOOL:: var_is_introduced ;
var bool: aux2954_BOOL:: var_is_introduced ;
var {0,1}: aux2954_INTEGER :: var_is_introduced ;
var bool: aux2955_BOOL:: var_is_introduced ;
var bool: aux2956_BOOL:: var_is_introduced ;
var bool: aux2957_BOOL:: var_is_introduced ;
var bool: aux2958_BOOL:: var_is_introduced ;
var 2..44: aux2959:: var_is_introduced ;
var bool: aux2960_BOOL:: var_is_introduced ;
var bool: aux2961_BOOL:: var_is_introduced ;
var {0,1}: aux2961_INTEGER :: var_is_introduced ;
var bool: aux2962_BOOL:: var_is_introduced ;
var bool: aux2963_BOOL:: var_is_introduced ;
var 1..43: aux2964:: var_is_introduced ;
var bool: aux2965_BOOL:: var_is_introduced ;
var bool: aux2966_BOOL:: var_is_introduced ;
var bool: aux2967_BOOL:: var_is_introduced ;
var {0,1}: aux2967_INTEGER :: var_is_introduced ;
var bool: aux2968_BOOL:: var_is_introduced ;
var bool: aux2969_BOOL:: var_is_introduced ;
var 2..44: aux2970:: var_is_introduced ;
var bool: aux2971_BOOL:: var_is_introduced ;
var bool: aux2972_BOOL:: var_is_introduced ;
var bool: aux2973_BOOL:: var_is_introduced ;
var {0,1}: aux2973_INTEGER :: var_is_introduced ;
var bool: aux2974_BOOL:: var_is_introduced ;
var bool: aux2975_BOOL:: var_is_introduced ;
var 3..45: aux2976:: var_is_introduced ;
var bool: aux2977_BOOL:: var_is_introduced ;
var bool: aux2978_BOOL:: var_is_introduced ;
var bool: aux2979_BOOL:: var_is_introduced ;
var {0,1}: aux2979_INTEGER :: var_is_introduced ;
var bool: aux2980_BOOL:: var_is_introduced ;
var bool: aux2981_BOOL:: var_is_introduced ;
var 2..44: aux2982:: var_is_introduced ;
var bool: aux2983_BOOL:: var_is_introduced ;
var bool: aux2984_BOOL:: var_is_introduced ;
var bool: aux2985_BOOL:: var_is_introduced ;
var {0,1}: aux2985_INTEGER :: var_is_introduced ;
var bool: aux2986_BOOL:: var_is_introduced ;
var bool: aux2987_BOOL:: var_is_introduced ;
var 3..45: aux2988:: var_is_introduced ;
var bool: aux2989_BOOL:: var_is_introduced ;
var bool: aux2990_BOOL:: var_is_introduced ;
var bool: aux2991_BOOL:: var_is_introduced ;
var {0,1}: aux2991_INTEGER :: var_is_introduced ;
var bool: aux2992_BOOL:: var_is_introduced ;
var bool: aux2993_BOOL:: var_is_introduced ;
var 2..44: aux2994:: var_is_introduced ;
var bool: aux2995_BOOL:: var_is_introduced ;
var bool: aux2996_BOOL:: var_is_introduced ;
var bool: aux2997_BOOL:: var_is_introduced ;
var {0,1}: aux2997_INTEGER :: var_is_introduced ;
var bool: aux2998_BOOL:: var_is_introduced ;
var bool: aux2999_BOOL:: var_is_introduced ;
var 1..43: aux3000:: var_is_introduced ;
var bool: aux3001_BOOL:: var_is_introduced ;
var bool: aux3002_BOOL:: var_is_introduced ;
var bool: aux3003_BOOL:: var_is_introduced ;
var {0,1}: aux3003_INTEGER :: var_is_introduced ;
var bool: aux3004_BOOL:: var_is_introduced ;
var bool: aux3005_BOOL:: var_is_introduced ;
var 2..44: aux3006:: var_is_introduced ;
var bool: aux3007_BOOL:: var_is_introduced ;
var bool: aux3008_BOOL:: var_is_introduced ;
var bool: aux3009_BOOL:: var_is_introduced ;
var {0,1}: aux3009_INTEGER :: var_is_introduced ;
var bool: aux3010_BOOL:: var_is_introduced ;
var bool: aux3011_BOOL:: var_is_introduced ;
var 1..43: aux3012:: var_is_introduced ;
var bool: aux3013_BOOL:: var_is_introduced ;
var bool: aux3014_BOOL:: var_is_introduced ;
var bool: aux3015_BOOL:: var_is_introduced ;
var {0,1}: aux3015_INTEGER :: var_is_introduced ;
var bool: aux3016_BOOL:: var_is_introduced ;
var bool: aux3017_BOOL:: var_is_introduced ;
var 2..44: aux3018:: var_is_introduced ;
var bool: aux3019_BOOL:: var_is_introduced ;
var bool: aux3020_BOOL:: var_is_introduced ;
var bool: aux3021_BOOL:: var_is_introduced ;
var {0,1}: aux3021_INTEGER :: var_is_introduced ;
var bool: aux3022_BOOL:: var_is_introduced ;
var bool: aux3023_BOOL:: var_is_introduced ;
var 2..44: aux3024:: var_is_introduced ;
var bool: aux3025_BOOL:: var_is_introduced ;
var bool: aux3026_BOOL:: var_is_introduced ;
var bool: aux3027_BOOL:: var_is_introduced ;
var {0,1}: aux3027_INTEGER :: var_is_introduced ;
var bool: aux3028_BOOL:: var_is_introduced ;
var bool: aux3029_BOOL:: var_is_introduced ;
var 1..43: aux3030:: var_is_introduced ;
var bool: aux3031_BOOL:: var_is_introduced ;
var bool: aux3032_BOOL:: var_is_introduced ;
var bool: aux3033_BOOL:: var_is_introduced ;
var {0,1}: aux3033_INTEGER :: var_is_introduced ;
var bool: aux3034_BOOL:: var_is_introduced ;
var bool: aux3035_BOOL:: var_is_introduced ;
var 4..46: aux3036:: var_is_introduced ;
var bool: aux3037_BOOL:: var_is_introduced ;
var bool: aux3038_BOOL:: var_is_introduced ;
var bool: aux3039_BOOL:: var_is_introduced ;
var {0,1}: aux3039_INTEGER :: var_is_introduced ;
var bool: aux3040_BOOL:: var_is_introduced ;
var bool: aux3041_BOOL:: var_is_introduced ;
var 2..44: aux3042:: var_is_introduced ;
var bool: aux3043_BOOL:: var_is_introduced ;
var bool: aux3044_BOOL:: var_is_introduced ;
var bool: aux3045_BOOL:: var_is_introduced ;
var {0,1}: aux3045_INTEGER :: var_is_introduced ;
var bool: aux3046_BOOL:: var_is_introduced ;
var bool: aux3047_BOOL:: var_is_introduced ;
var 3..45: aux3048:: var_is_introduced ;
var bool: aux3049_BOOL:: var_is_introduced ;
var bool: aux3050_BOOL:: var_is_introduced ;
var bool: aux3051_BOOL:: var_is_introduced ;
var {0,1}: aux3051_INTEGER :: var_is_introduced ;
var bool: aux3052_BOOL:: var_is_introduced ;
var bool: aux3053_BOOL:: var_is_introduced ;
var 1..43: aux3054:: var_is_introduced ;
var bool: aux3055_BOOL:: var_is_introduced ;
var bool: aux3056_BOOL:: var_is_introduced ;
var bool: aux3057_BOOL:: var_is_introduced ;
var {0,1}: aux3057_INTEGER :: var_is_introduced ;
var bool: aux3058_BOOL:: var_is_introduced ;
var bool: aux3059_BOOL:: var_is_introduced ;
var 3..45: aux3060:: var_is_introduced ;
var bool: aux3061_BOOL:: var_is_introduced ;
var bool: aux3062_BOOL:: var_is_introduced ;
var bool: aux3063_BOOL:: var_is_introduced ;
var {0,1}: aux3063_INTEGER :: var_is_introduced ;
var bool: aux3064_BOOL:: var_is_introduced ;
var bool: aux3065_BOOL:: var_is_introduced ;
var 2..44: aux3066:: var_is_introduced ;
var bool: aux3067_BOOL:: var_is_introduced ;
var bool: aux3068_BOOL:: var_is_introduced ;
var bool: aux3069_BOOL:: var_is_introduced ;
var {0,1}: aux3069_INTEGER :: var_is_introduced ;
var bool: aux3070_BOOL:: var_is_introduced ;
var bool: aux3071_BOOL:: var_is_introduced ;
var 3..45: aux3072:: var_is_introduced ;
var bool: aux3073_BOOL:: var_is_introduced ;
var bool: aux3074_BOOL:: var_is_introduced ;
var bool: aux3075_BOOL:: var_is_introduced ;
var {0,1}: aux3075_INTEGER :: var_is_introduced ;
var bool: aux3076_BOOL:: var_is_introduced ;
var bool: aux3077_BOOL:: var_is_introduced ;
var 2..44: aux3078:: var_is_introduced ;
var bool: aux3079_BOOL:: var_is_introduced ;
var bool: aux3080_BOOL:: var_is_introduced ;
var {0,1}: aux3080_INTEGER :: var_is_introduced ;
var bool: aux3081_BOOL:: var_is_introduced ;
var bool: aux3082_BOOL:: var_is_introduced ;
var 1..43: aux3083:: var_is_introduced ;
var bool: aux3084_BOOL:: var_is_introduced ;
var bool: aux3085_BOOL:: var_is_introduced ;
var bool: aux3086_BOOL:: var_is_introduced ;
var {0,1}: aux3086_INTEGER :: var_is_introduced ;
var bool: aux3087_BOOL:: var_is_introduced ;
var bool: aux3088_BOOL:: var_is_introduced ;
var 2..44: aux3089:: var_is_introduced ;
var bool: aux3090_BOOL:: var_is_introduced ;
var bool: aux3091_BOOL:: var_is_introduced ;
var bool: aux3092_BOOL:: var_is_introduced ;
var {0,1}: aux3092_INTEGER :: var_is_introduced ;
var bool: aux3093_BOOL:: var_is_introduced ;
var bool: aux3094_BOOL:: var_is_introduced ;
var 3..45: aux3095:: var_is_introduced ;
var bool: aux3096_BOOL:: var_is_introduced ;
var bool: aux3097_BOOL:: var_is_introduced ;
var bool: aux3098_BOOL:: var_is_introduced ;
var {0,1}: aux3098_INTEGER :: var_is_introduced ;
var bool: aux3099_BOOL:: var_is_introduced ;
var bool: aux3100_BOOL:: var_is_introduced ;
var 2..44: aux3101:: var_is_introduced ;
var bool: aux3102_BOOL:: var_is_introduced ;
var bool: aux3103_BOOL:: var_is_introduced ;
var bool: aux3104_BOOL:: var_is_introduced ;
var {0,1}: aux3104_INTEGER :: var_is_introduced ;
var bool: aux3105_BOOL:: var_is_introduced ;
var bool: aux3106_BOOL:: var_is_introduced ;
var 2..44: aux3107:: var_is_introduced ;
var bool: aux3108_BOOL:: var_is_introduced ;
var bool: aux3109_BOOL:: var_is_introduced ;
var bool: aux3110_BOOL:: var_is_introduced ;
var {0,1}: aux3110_INTEGER :: var_is_introduced ;
var bool: aux3111_BOOL:: var_is_introduced ;
var bool: aux3112_BOOL:: var_is_introduced ;
var 3..45: aux3113:: var_is_introduced ;
var bool: aux3114_BOOL:: var_is_introduced ;
var bool: aux3115_BOOL:: var_is_introduced ;
var bool: aux3116_BOOL:: var_is_introduced ;
var {0,1}: aux3116_INTEGER :: var_is_introduced ;
var bool: aux3117_BOOL:: var_is_introduced ;
var bool: aux3118_BOOL:: var_is_introduced ;
var 1..43: aux3119:: var_is_introduced ;
var bool: aux3120_BOOL:: var_is_introduced ;
var bool: aux3121_BOOL:: var_is_introduced ;
var bool: aux3122_BOOL:: var_is_introduced ;
var {0,1}: aux3122_INTEGER :: var_is_introduced ;
var bool: aux3123_BOOL:: var_is_introduced ;
var bool: aux3124_BOOL:: var_is_introduced ;
var 2..44: aux3125:: var_is_introduced ;
var bool: aux3126_BOOL:: var_is_introduced ;
var bool: aux3127_BOOL:: var_is_introduced ;
var bool: aux3128_BOOL:: var_is_introduced ;
var {0,1}: aux3128_INTEGER :: var_is_introduced ;
var bool: aux3129_BOOL:: var_is_introduced ;
var bool: aux3130_BOOL:: var_is_introduced ;
var 1..43: aux3131:: var_is_introduced ;
var bool: aux3132_BOOL:: var_is_introduced ;
var bool: aux3133_BOOL:: var_is_introduced ;
var bool: aux3134_BOOL:: var_is_introduced ;
var {0,1}: aux3134_INTEGER :: var_is_introduced ;
var bool: aux3135_BOOL:: var_is_introduced ;
var bool: aux3136_BOOL:: var_is_introduced ;
var 2..44: aux3137:: var_is_introduced ;
var bool: aux3138_BOOL:: var_is_introduced ;
var bool: aux3139_BOOL:: var_is_introduced ;
var bool: aux3140_BOOL:: var_is_introduced ;
var {0,1}: aux3140_INTEGER :: var_is_introduced ;
var bool: aux3141_BOOL:: var_is_introduced ;
var bool: aux3142_BOOL:: var_is_introduced ;
var 2..44: aux3143:: var_is_introduced ;
var bool: aux3144_BOOL:: var_is_introduced ;
var bool: aux3145_BOOL:: var_is_introduced ;
var bool: aux3146_BOOL:: var_is_introduced ;
var {0,1}: aux3146_INTEGER :: var_is_introduced ;
var bool: aux3147_BOOL:: var_is_introduced ;
var bool: aux3148_BOOL:: var_is_introduced ;
var 1..43: aux3149:: var_is_introduced ;
var bool: aux3150_BOOL:: var_is_introduced ;
var bool: aux3151_BOOL:: var_is_introduced ;
var bool: aux3152_BOOL:: var_is_introduced ;
var {0,1}: aux3152_INTEGER :: var_is_introduced ;
var bool: aux3153_BOOL:: var_is_introduced ;
var bool: aux3154_BOOL:: var_is_introduced ;
var 4..46: aux3155:: var_is_introduced ;
var bool: aux3156_BOOL:: var_is_introduced ;
var bool: aux3157_BOOL:: var_is_introduced ;
var bool: aux3158_BOOL:: var_is_introduced ;
var {0,1}: aux3158_INTEGER :: var_is_introduced ;
var bool: aux3159_BOOL:: var_is_introduced ;
var bool: aux3160_BOOL:: var_is_introduced ;
var 2..44: aux3161:: var_is_introduced ;
var bool: aux3162_BOOL:: var_is_introduced ;
var bool: aux3163_BOOL:: var_is_introduced ;
var bool: aux3164_BOOL:: var_is_introduced ;
var {0,1}: aux3164_INTEGER :: var_is_introduced ;
var bool: aux3165_BOOL:: var_is_introduced ;
var bool: aux3166_BOOL:: var_is_introduced ;
var 3..45: aux3167:: var_is_introduced ;
var bool: aux3168_BOOL:: var_is_introduced ;
var bool: aux3169_BOOL:: var_is_introduced ;
var bool: aux3170_BOOL:: var_is_introduced ;
var {0,1}: aux3170_INTEGER :: var_is_introduced ;
var bool: aux3171_BOOL:: var_is_introduced ;
var bool: aux3172_BOOL:: var_is_introduced ;
var 1..43: aux3173:: var_is_introduced ;
var bool: aux3174_BOOL:: var_is_introduced ;
var bool: aux3175_BOOL:: var_is_introduced ;
var bool: aux3176_BOOL:: var_is_introduced ;
var {0,1}: aux3176_INTEGER :: var_is_introduced ;
var bool: aux3177_BOOL:: var_is_introduced ;
var bool: aux3178_BOOL:: var_is_introduced ;
var 3..45: aux3179:: var_is_introduced ;
var bool: aux3180_BOOL:: var_is_introduced ;
var bool: aux3181_BOOL:: var_is_introduced ;
var bool: aux3182_BOOL:: var_is_introduced ;
var {0,1}: aux3182_INTEGER :: var_is_introduced ;
var bool: aux3183_BOOL:: var_is_introduced ;
var bool: aux3184_BOOL:: var_is_introduced ;
var 2..44: aux3185:: var_is_introduced ;
var bool: aux3186_BOOL:: var_is_introduced ;
var bool: aux3187_BOOL:: var_is_introduced ;
var bool: aux3188_BOOL:: var_is_introduced ;
var {0,1}: aux3188_INTEGER :: var_is_introduced ;
var bool: aux3189_BOOL:: var_is_introduced ;
var bool: aux3190_BOOL:: var_is_introduced ;
var 3..45: aux3191:: var_is_introduced ;
var bool: aux3192_BOOL:: var_is_introduced ;
var bool: aux3193_BOOL:: var_is_introduced ;
var bool: aux3194_BOOL:: var_is_introduced ;
var {0,1}: aux3194_INTEGER :: var_is_introduced ;
var bool: aux3195_BOOL:: var_is_introduced ;
var bool: aux3196_BOOL:: var_is_introduced ;
var 2..44: aux3197:: var_is_introduced ;
var bool: aux3198_BOOL:: var_is_introduced ;
var bool: aux3199_BOOL:: var_is_introduced ;
var {0,1}: aux3199_INTEGER :: var_is_introduced ;
var bool: aux3200_BOOL:: var_is_introduced ;
var bool: aux3201_BOOL:: var_is_introduced ;
var 1..43: aux3202:: var_is_introduced ;
var bool: aux3203_BOOL:: var_is_introduced ;
var bool: aux3204_BOOL:: var_is_introduced ;
var bool: aux3205_BOOL:: var_is_introduced ;
var {0,1}: aux3205_INTEGER :: var_is_introduced ;
var bool: aux3206_BOOL:: var_is_introduced ;
var bool: aux3207_BOOL:: var_is_introduced ;
var 2..44: aux3208:: var_is_introduced ;
var bool: aux3209_BOOL:: var_is_introduced ;
var bool: aux3210_BOOL:: var_is_introduced ;
var bool: aux3211_BOOL:: var_is_introduced ;
var {0,1}: aux3211_INTEGER :: var_is_introduced ;
var bool: aux3212_BOOL:: var_is_introduced ;
var bool: aux3213_BOOL:: var_is_introduced ;
var 3..45: aux3214:: var_is_introduced ;
var bool: aux3215_BOOL:: var_is_introduced ;
var bool: aux3216_BOOL:: var_is_introduced ;
var bool: aux3217_BOOL:: var_is_introduced ;
var {0,1}: aux3217_INTEGER :: var_is_introduced ;
var bool: aux3218_BOOL:: var_is_introduced ;
var bool: aux3219_BOOL:: var_is_introduced ;
var 2..44: aux3220:: var_is_introduced ;
var bool: aux3221_BOOL:: var_is_introduced ;
var bool: aux3222_BOOL:: var_is_introduced ;
var bool: aux3223_BOOL:: var_is_introduced ;
var {0,1}: aux3223_INTEGER :: var_is_introduced ;
var bool: aux3224_BOOL:: var_is_introduced ;
var bool: aux3225_BOOL:: var_is_introduced ;
var 2..44: aux3226:: var_is_introduced ;
var bool: aux3227_BOOL:: var_is_introduced ;
var bool: aux3228_BOOL:: var_is_introduced ;
var bool: aux3229_BOOL:: var_is_introduced ;
var {0,1}: aux3229_INTEGER :: var_is_introduced ;
var bool: aux3230_BOOL:: var_is_introduced ;
var bool: aux3231_BOOL:: var_is_introduced ;
var 3..45: aux3232:: var_is_introduced ;
var bool: aux3233_BOOL:: var_is_introduced ;
var bool: aux3234_BOOL:: var_is_introduced ;
var bool: aux3235_BOOL:: var_is_introduced ;
var {0,1}: aux3235_INTEGER :: var_is_introduced ;
var bool: aux3236_BOOL:: var_is_introduced ;
var bool: aux3237_BOOL:: var_is_introduced ;
var 2..44: aux3238:: var_is_introduced ;
var bool: aux3239_BOOL:: var_is_introduced ;
var bool: aux3240_BOOL:: var_is_introduced ;
var bool: aux3241_BOOL:: var_is_introduced ;
var {0,1}: aux3241_INTEGER :: var_is_introduced ;
var bool: aux3242_BOOL:: var_is_introduced ;
var bool: aux3243_BOOL:: var_is_introduced ;
var 1..43: aux3244:: var_is_introduced ;
var bool: aux3245_BOOL:: var_is_introduced ;
var bool: aux3246_BOOL:: var_is_introduced ;
var bool: aux3247_BOOL:: var_is_introduced ;
var {0,1}: aux3247_INTEGER :: var_is_introduced ;
var bool: aux3248_BOOL:: var_is_introduced ;
var bool: aux3249_BOOL:: var_is_introduced ;
var 2..44: aux3250:: var_is_introduced ;
var bool: aux3251_BOOL:: var_is_introduced ;
var bool: aux3252_BOOL:: var_is_introduced ;
var bool: aux3253_BOOL:: var_is_introduced ;
var {0,1}: aux3253_INTEGER :: var_is_introduced ;
var bool: aux3254_BOOL:: var_is_introduced ;
var bool: aux3255_BOOL:: var_is_introduced ;
var 1..43: aux3256:: var_is_introduced ;
var bool: aux3257_BOOL:: var_is_introduced ;
var bool: aux3258_BOOL:: var_is_introduced ;
var bool: aux3259_BOOL:: var_is_introduced ;
var {0,1}: aux3259_INTEGER :: var_is_introduced ;
var bool: aux3260_BOOL:: var_is_introduced ;
var bool: aux3261_BOOL:: var_is_introduced ;
var 2..44: aux3262:: var_is_introduced ;
var bool: aux3263_BOOL:: var_is_introduced ;
var bool: aux3264_BOOL:: var_is_introduced ;
var bool: aux3265_BOOL:: var_is_introduced ;
var {0,1}: aux3265_INTEGER :: var_is_introduced ;
var bool: aux3266_BOOL:: var_is_introduced ;
var bool: aux3267_BOOL:: var_is_introduced ;
var 1..43: aux3268:: var_is_introduced ;
var bool: aux3269_BOOL:: var_is_introduced ;
var bool: aux3270_BOOL:: var_is_introduced ;
var bool: aux3271_BOOL:: var_is_introduced ;
var {0,1}: aux3271_INTEGER :: var_is_introduced ;
var bool: aux3272_BOOL:: var_is_introduced ;
var bool: aux3273_BOOL:: var_is_introduced ;
var 4..46: aux3274:: var_is_introduced ;
var bool: aux3275_BOOL:: var_is_introduced ;
var bool: aux3276_BOOL:: var_is_introduced ;
var bool: aux3277_BOOL:: var_is_introduced ;
var {0,1}: aux3277_INTEGER :: var_is_introduced ;
var bool: aux3278_BOOL:: var_is_introduced ;
var bool: aux3279_BOOL:: var_is_introduced ;
var 2..44: aux3280:: var_is_introduced ;
var bool: aux3281_BOOL:: var_is_introduced ;
var bool: aux3282_BOOL:: var_is_introduced ;
var bool: aux3283_BOOL:: var_is_introduced ;
var {0,1}: aux3283_INTEGER :: var_is_introduced ;
var bool: aux3284_BOOL:: var_is_introduced ;
var bool: aux3285_BOOL:: var_is_introduced ;
var 3..45: aux3286:: var_is_introduced ;
var bool: aux3287_BOOL:: var_is_introduced ;
var bool: aux3288_BOOL:: var_is_introduced ;
var bool: aux3289_BOOL:: var_is_introduced ;
var {0,1}: aux3289_INTEGER :: var_is_introduced ;
var bool: aux3290_BOOL:: var_is_introduced ;
var bool: aux3291_BOOL:: var_is_introduced ;
var 1..43: aux3292:: var_is_introduced ;
var bool: aux3293_BOOL:: var_is_introduced ;
var bool: aux3294_BOOL:: var_is_introduced ;
var bool: aux3295_BOOL:: var_is_introduced ;
var {0,1}: aux3295_INTEGER :: var_is_introduced ;
var bool: aux3296_BOOL:: var_is_introduced ;
var bool: aux3297_BOOL:: var_is_introduced ;
var 3..45: aux3298:: var_is_introduced ;
var bool: aux3299_BOOL:: var_is_introduced ;
var bool: aux3300_BOOL:: var_is_introduced ;
var bool: aux3301_BOOL:: var_is_introduced ;
var {0,1}: aux3301_INTEGER :: var_is_introduced ;
var bool: aux3302_BOOL:: var_is_introduced ;
var bool: aux3303_BOOL:: var_is_introduced ;
var 2..44: aux3304:: var_is_introduced ;
var bool: aux3305_BOOL:: var_is_introduced ;
var bool: aux3306_BOOL:: var_is_introduced ;
var bool: aux3307_BOOL:: var_is_introduced ;
var {0,1}: aux3307_INTEGER :: var_is_introduced ;
var bool: aux3308_BOOL:: var_is_introduced ;
var bool: aux3309_BOOL:: var_is_introduced ;
var 3..45: aux3310:: var_is_introduced ;
var bool: aux3311_BOOL:: var_is_introduced ;
var bool: aux3312_BOOL:: var_is_introduced ;
var bool: aux3313_BOOL:: var_is_introduced ;
var {0,1}: aux3313_INTEGER :: var_is_introduced ;
var bool: aux3314_BOOL:: var_is_introduced ;
var bool: aux3315_BOOL:: var_is_introduced ;
var 2..44: aux3316:: var_is_introduced ;
var bool: aux3317_BOOL:: var_is_introduced ;
var bool: aux3318_BOOL:: var_is_introduced ;
var {0,1}: aux3318_INTEGER :: var_is_introduced ;
var bool: aux3319_BOOL:: var_is_introduced ;
var bool: aux3320_BOOL:: var_is_introduced ;
var 1..43: aux3321:: var_is_introduced ;
var bool: aux3322_BOOL:: var_is_introduced ;
var bool: aux3323_BOOL:: var_is_introduced ;
var bool: aux3324_BOOL:: var_is_introduced ;
var {0,1}: aux3324_INTEGER :: var_is_introduced ;
var bool: aux3325_BOOL:: var_is_introduced ;
var bool: aux3326_BOOL:: var_is_introduced ;
var 2..44: aux3327:: var_is_introduced ;
var bool: aux3328_BOOL:: var_is_introduced ;
var bool: aux3329_BOOL:: var_is_introduced ;
var bool: aux3330_BOOL:: var_is_introduced ;
var {0,1}: aux3330_INTEGER :: var_is_introduced ;
var bool: aux3331_BOOL:: var_is_introduced ;
var bool: aux3332_BOOL:: var_is_introduced ;
var 3..45: aux3333:: var_is_introduced ;
var bool: aux3334_BOOL:: var_is_introduced ;
var bool: aux3335_BOOL:: var_is_introduced ;
var bool: aux3336_BOOL:: var_is_introduced ;
var {0,1}: aux3336_INTEGER :: var_is_introduced ;
var bool: aux3337_BOOL:: var_is_introduced ;
var bool: aux3338_BOOL:: var_is_introduced ;
var 2..44: aux3339:: var_is_introduced ;
var bool: aux3340_BOOL:: var_is_introduced ;
var bool: aux3341_BOOL:: var_is_introduced ;
var bool: aux3342_BOOL:: var_is_introduced ;
var {0,1}: aux3342_INTEGER :: var_is_introduced ;
var bool: aux3343_BOOL:: var_is_introduced ;
var bool: aux3344_BOOL:: var_is_introduced ;
var 3..45: aux3345:: var_is_introduced ;
var bool: aux3346_BOOL:: var_is_introduced ;
var bool: aux3347_BOOL:: var_is_introduced ;
var bool: aux3348_BOOL:: var_is_introduced ;
var {0,1}: aux3348_INTEGER :: var_is_introduced ;
var bool: aux3349_BOOL:: var_is_introduced ;
var bool: aux3350_BOOL:: var_is_introduced ;
var 2..44: aux3351:: var_is_introduced ;
var bool: aux3352_BOOL:: var_is_introduced ;
var bool: aux3353_BOOL:: var_is_introduced ;
var bool: aux3354_BOOL:: var_is_introduced ;
var {0,1}: aux3354_INTEGER :: var_is_introduced ;
var bool: aux3355_BOOL:: var_is_introduced ;
var bool: aux3356_BOOL:: var_is_introduced ;
var 1..43: aux3357:: var_is_introduced ;
var bool: aux3358_BOOL:: var_is_introduced ;
var bool: aux3359_BOOL:: var_is_introduced ;
var bool: aux3360_BOOL:: var_is_introduced ;
var {0,1}: aux3360_INTEGER :: var_is_introduced ;
var bool: aux3361_BOOL:: var_is_introduced ;
var bool: aux3362_BOOL:: var_is_introduced ;
var 2..44: aux3363:: var_is_introduced ;
var bool: aux3364_BOOL:: var_is_introduced ;
var bool: aux3365_BOOL:: var_is_introduced ;
var bool: aux3366_BOOL:: var_is_introduced ;
var {0,1}: aux3366_INTEGER :: var_is_introduced ;
var bool: aux3367_BOOL:: var_is_introduced ;
var bool: aux3368_BOOL:: var_is_introduced ;
var 1..43: aux3369:: var_is_introduced ;
var bool: aux3370_BOOL:: var_is_introduced ;
var bool: aux3371_BOOL:: var_is_introduced ;
var bool: aux3372_BOOL:: var_is_introduced ;
var {0,1}: aux3372_INTEGER :: var_is_introduced ;
var bool: aux3373_BOOL:: var_is_introduced ;
var bool: aux3374_BOOL:: var_is_introduced ;
var 2..44: aux3375:: var_is_introduced ;
var bool: aux3376_BOOL:: var_is_introduced ;
var bool: aux3377_BOOL:: var_is_introduced ;
var bool: aux3378_BOOL:: var_is_introduced ;
var {0,1}: aux3378_INTEGER :: var_is_introduced ;
var bool: aux3379_BOOL:: var_is_introduced ;
var bool: aux3380_BOOL:: var_is_introduced ;
var 2..44: aux3381:: var_is_introduced ;
var bool: aux3382_BOOL:: var_is_introduced ;
var bool: aux3383_BOOL:: var_is_introduced ;
var bool: aux3384_BOOL:: var_is_introduced ;
var {0,1}: aux3384_INTEGER :: var_is_introduced ;
var bool: aux3385_BOOL:: var_is_introduced ;
var bool: aux3386_BOOL:: var_is_introduced ;
var 1..43: aux3387:: var_is_introduced ;
var bool: aux3388_BOOL:: var_is_introduced ;
var bool: aux3389_BOOL:: var_is_introduced ;
var bool: aux3390_BOOL:: var_is_introduced ;
var {0,1}: aux3390_INTEGER :: var_is_introduced ;
var bool: aux3391_BOOL:: var_is_introduced ;
var bool: aux3392_BOOL:: var_is_introduced ;
var 4..46: aux3393:: var_is_introduced ;
var bool: aux3394_BOOL:: var_is_introduced ;
var bool: aux3395_BOOL:: var_is_introduced ;
var bool: aux3396_BOOL:: var_is_introduced ;
var {0,1}: aux3396_INTEGER :: var_is_introduced ;
var bool: aux3397_BOOL:: var_is_introduced ;
var bool: aux3398_BOOL:: var_is_introduced ;
var 2..44: aux3399:: var_is_introduced ;
var bool: aux3400_BOOL:: var_is_introduced ;
var bool: aux3401_BOOL:: var_is_introduced ;
var bool: aux3402_BOOL:: var_is_introduced ;
var {0,1}: aux3402_INTEGER :: var_is_introduced ;
var bool: aux3403_BOOL:: var_is_introduced ;
var bool: aux3404_BOOL:: var_is_introduced ;
var 3..45: aux3405:: var_is_introduced ;
var bool: aux3406_BOOL:: var_is_introduced ;
var bool: aux3407_BOOL:: var_is_introduced ;
var bool: aux3408_BOOL:: var_is_introduced ;
var {0,1}: aux3408_INTEGER :: var_is_introduced ;
var bool: aux3409_BOOL:: var_is_introduced ;
var bool: aux3410_BOOL:: var_is_introduced ;
var 1..43: aux3411:: var_is_introduced ;
var bool: aux3412_BOOL:: var_is_introduced ;
var bool: aux3413_BOOL:: var_is_introduced ;
var bool: aux3414_BOOL:: var_is_introduced ;
var {0,1}: aux3414_INTEGER :: var_is_introduced ;
var bool: aux3415_BOOL:: var_is_introduced ;
var bool: aux3416_BOOL:: var_is_introduced ;
var 3..45: aux3417:: var_is_introduced ;
var bool: aux3418_BOOL:: var_is_introduced ;
var bool: aux3419_BOOL:: var_is_introduced ;
var bool: aux3420_BOOL:: var_is_introduced ;
var {0,1}: aux3420_INTEGER :: var_is_introduced ;
var bool: aux3421_BOOL:: var_is_introduced ;
var bool: aux3422_BOOL:: var_is_introduced ;
var 2..44: aux3423:: var_is_introduced ;
var bool: aux3424_BOOL:: var_is_introduced ;
var bool: aux3425_BOOL:: var_is_introduced ;
var bool: aux3426_BOOL:: var_is_introduced ;
var {0,1}: aux3426_INTEGER :: var_is_introduced ;
var bool: aux3427_BOOL:: var_is_introduced ;
var bool: aux3428_BOOL:: var_is_introduced ;
var 3..45: aux3429:: var_is_introduced ;
var bool: aux3430_BOOL:: var_is_introduced ;
var bool: aux3431_BOOL:: var_is_introduced ;
var bool: aux3432_BOOL:: var_is_introduced ;
var {0,1}: aux3432_INTEGER :: var_is_introduced ;
var bool: aux3433_BOOL:: var_is_introduced ;
var bool: aux3434_BOOL:: var_is_introduced ;
var 1..43: aux3435:: var_is_introduced ;
var bool: aux3436_BOOL:: var_is_introduced ;
var bool: aux3437_BOOL:: var_is_introduced ;
var {0,1}: aux3437_INTEGER :: var_is_introduced ;
var bool: aux3438_BOOL:: var_is_introduced ;
var bool: aux3439_BOOL:: var_is_introduced ;
var 1..43: aux3440:: var_is_introduced ;
var bool: aux3441_BOOL:: var_is_introduced ;
var bool: aux3442_BOOL:: var_is_introduced ;
var bool: aux3443_BOOL:: var_is_introduced ;
var {0,1}: aux3443_INTEGER :: var_is_introduced ;
var bool: aux3444_BOOL:: var_is_introduced ;
var bool: aux3445_BOOL:: var_is_introduced ;
var 2..44: aux3446:: var_is_introduced ;
var bool: aux3447_BOOL:: var_is_introduced ;
var bool: aux3448_BOOL:: var_is_introduced ;
var bool: aux3449_BOOL:: var_is_introduced ;
var {0,1}: aux3449_INTEGER :: var_is_introduced ;
var bool: aux3450_BOOL:: var_is_introduced ;
var bool: aux3451_BOOL:: var_is_introduced ;
var 3..45: aux3452:: var_is_introduced ;
var bool: aux3453_BOOL:: var_is_introduced ;
var bool: aux3454_BOOL:: var_is_introduced ;
var bool: aux3455_BOOL:: var_is_introduced ;
var {0,1}: aux3455_INTEGER :: var_is_introduced ;
var bool: aux3456_BOOL:: var_is_introduced ;
var bool: aux3457_BOOL:: var_is_introduced ;
var 2..44: aux3458:: var_is_introduced ;
var bool: aux3459_BOOL:: var_is_introduced ;
var bool: aux3460_BOOL:: var_is_introduced ;
var bool: aux3461_BOOL:: var_is_introduced ;
var {0,1}: aux3461_INTEGER :: var_is_introduced ;
var bool: aux3462_BOOL:: var_is_introduced ;
var bool: aux3463_BOOL:: var_is_introduced ;
var 2..44: aux3464:: var_is_introduced ;
var bool: aux3465_BOOL:: var_is_introduced ;
var bool: aux3466_BOOL:: var_is_introduced ;
var bool: aux3467_BOOL:: var_is_introduced ;
var {0,1}: aux3467_INTEGER :: var_is_introduced ;
var bool: aux3468_BOOL:: var_is_introduced ;
var bool: aux3469_BOOL:: var_is_introduced ;
var 3..45: aux3470:: var_is_introduced ;
var bool: aux3471_BOOL:: var_is_introduced ;
var bool: aux3472_BOOL:: var_is_introduced ;
var bool: aux3473_BOOL:: var_is_introduced ;
var {0,1}: aux3473_INTEGER :: var_is_introduced ;
var bool: aux3474_BOOL:: var_is_introduced ;
var bool: aux3475_BOOL:: var_is_introduced ;
var 2..44: aux3476:: var_is_introduced ;
var bool: aux3477_BOOL:: var_is_introduced ;
var bool: aux3478_BOOL:: var_is_introduced ;
var bool: aux3479_BOOL:: var_is_introduced ;
var {0,1}: aux3479_INTEGER :: var_is_introduced ;
var bool: aux3480_BOOL:: var_is_introduced ;
var bool: aux3481_BOOL:: var_is_introduced ;
var 1..43: aux3482:: var_is_introduced ;
var bool: aux3483_BOOL:: var_is_introduced ;
var bool: aux3484_BOOL:: var_is_introduced ;
var bool: aux3485_BOOL:: var_is_introduced ;
var {0,1}: aux3485_INTEGER :: var_is_introduced ;
var bool: aux3486_BOOL:: var_is_introduced ;
var bool: aux3487_BOOL:: var_is_introduced ;
var 2..44: aux3488:: var_is_introduced ;
var bool: aux3489_BOOL:: var_is_introduced ;
var bool: aux3490_BOOL:: var_is_introduced ;
var bool: aux3491_BOOL:: var_is_introduced ;
var {0,1}: aux3491_INTEGER :: var_is_introduced ;
var bool: aux3492_BOOL:: var_is_introduced ;
var bool: aux3493_BOOL:: var_is_introduced ;
var 2..44: aux3494:: var_is_introduced ;
var bool: aux3495_BOOL:: var_is_introduced ;
var bool: aux3496_BOOL:: var_is_introduced ;
var bool: aux3497_BOOL:: var_is_introduced ;
var {0,1}: aux3497_INTEGER :: var_is_introduced ;
var bool: aux3498_BOOL:: var_is_introduced ;
var bool: aux3499_BOOL:: var_is_introduced ;
var 2..44: aux3500:: var_is_introduced ;
var bool: aux3501_BOOL:: var_is_introduced ;
var bool: aux3502_BOOL:: var_is_introduced ;
var bool: aux3503_BOOL:: var_is_introduced ;
var {0,1}: aux3503_INTEGER :: var_is_introduced ;
var bool: aux3504_BOOL:: var_is_introduced ;
var bool: aux3505_BOOL:: var_is_introduced ;
var 1..43: aux3506:: var_is_introduced ;
var bool: aux3507_BOOL:: var_is_introduced ;
var bool: aux3508_BOOL:: var_is_introduced ;
var bool: aux3509_BOOL:: var_is_introduced ;
var {0,1}: aux3509_INTEGER :: var_is_introduced ;
var bool: aux3510_BOOL:: var_is_introduced ;
var bool: aux3511_BOOL:: var_is_introduced ;
var 4..46: aux3512:: var_is_introduced ;
var bool: aux3513_BOOL:: var_is_introduced ;
var bool: aux3514_BOOL:: var_is_introduced ;
var bool: aux3515_BOOL:: var_is_introduced ;
var {0,1}: aux3515_INTEGER :: var_is_introduced ;
var bool: aux3516_BOOL:: var_is_introduced ;
var bool: aux3517_BOOL:: var_is_introduced ;
var 2..44: aux3518:: var_is_introduced ;
var bool: aux3519_BOOL:: var_is_introduced ;
var bool: aux3520_BOOL:: var_is_introduced ;
var bool: aux3521_BOOL:: var_is_introduced ;
var {0,1}: aux3521_INTEGER :: var_is_introduced ;
var bool: aux3522_BOOL:: var_is_introduced ;
var bool: aux3523_BOOL:: var_is_introduced ;
var 3..45: aux3524:: var_is_introduced ;
var bool: aux3525_BOOL:: var_is_introduced ;
var bool: aux3526_BOOL:: var_is_introduced ;
var bool: aux3527_BOOL:: var_is_introduced ;
var {0,1}: aux3527_INTEGER :: var_is_introduced ;
var bool: aux3528_BOOL:: var_is_introduced ;
var bool: aux3529_BOOL:: var_is_introduced ;
var 1..43: aux3530:: var_is_introduced ;
var bool: aux3531_BOOL:: var_is_introduced ;
var bool: aux3532_BOOL:: var_is_introduced ;
var bool: aux3533_BOOL:: var_is_introduced ;
var {0,1}: aux3533_INTEGER :: var_is_introduced ;
var bool: aux3534_BOOL:: var_is_introduced ;
var bool: aux3535_BOOL:: var_is_introduced ;
var 3..45: aux3536:: var_is_introduced ;
var bool: aux3537_BOOL:: var_is_introduced ;
var bool: aux3538_BOOL:: var_is_introduced ;
var bool: aux3539_BOOL:: var_is_introduced ;
var {0,1}: aux3539_INTEGER :: var_is_introduced ;
var bool: aux3540_BOOL:: var_is_introduced ;
var bool: aux3541_BOOL:: var_is_introduced ;
var 2..44: aux3542:: var_is_introduced ;
var bool: aux3543_BOOL:: var_is_introduced ;
var bool: aux3544_BOOL:: var_is_introduced ;
var bool: aux3545_BOOL:: var_is_introduced ;
var {0,1}: aux3545_INTEGER :: var_is_introduced ;
var bool: aux3546_BOOL:: var_is_introduced ;
var bool: aux3547_BOOL:: var_is_introduced ;
var 3..45: aux3548:: var_is_introduced ;
var bool: aux3549_BOOL:: var_is_introduced ;
var bool: aux3550_BOOL:: var_is_introduced ;
var bool: aux3551_BOOL:: var_is_introduced ;
var {0,1}: aux3551_INTEGER :: var_is_introduced ;
var bool: aux3552_BOOL:: var_is_introduced ;
var bool: aux3553_BOOL:: var_is_introduced ;
var 1..43: aux3554:: var_is_introduced ;
var bool: aux3555_BOOL:: var_is_introduced ;
var bool: aux3556_BOOL:: var_is_introduced ;
var {0,1}: aux3556_INTEGER :: var_is_introduced ;
var bool: aux3557_BOOL:: var_is_introduced ;
var bool: aux3558_BOOL:: var_is_introduced ;
var 1..43: aux3559:: var_is_introduced ;
var bool: aux3560_BOOL:: var_is_introduced ;
var bool: aux3561_BOOL:: var_is_introduced ;
var bool: aux3562_BOOL:: var_is_introduced ;
var {0,1}: aux3562_INTEGER :: var_is_introduced ;
var bool: aux3563_BOOL:: var_is_introduced ;
var bool: aux3564_BOOL:: var_is_introduced ;
var 2..44: aux3565:: var_is_introduced ;
var bool: aux3566_BOOL:: var_is_introduced ;
var bool: aux3567_BOOL:: var_is_introduced ;
var bool: aux3568_BOOL:: var_is_introduced ;
var {0,1}: aux3568_INTEGER :: var_is_introduced ;
var bool: aux3569_BOOL:: var_is_introduced ;
var bool: aux3570_BOOL:: var_is_introduced ;
var 3..45: aux3571:: var_is_introduced ;
var bool: aux3572_BOOL:: var_is_introduced ;
var bool: aux3573_BOOL:: var_is_introduced ;
var bool: aux3574_BOOL:: var_is_introduced ;
var {0,1}: aux3574_INTEGER :: var_is_introduced ;
var bool: aux3575_BOOL:: var_is_introduced ;
var bool: aux3576_BOOL:: var_is_introduced ;
var 2..44: aux3577:: var_is_introduced ;
var bool: aux3578_BOOL:: var_is_introduced ;
var bool: aux3579_BOOL:: var_is_introduced ;
var bool: aux3580_BOOL:: var_is_introduced ;
var {0,1}: aux3580_INTEGER :: var_is_introduced ;
var bool: aux3581_BOOL:: var_is_introduced ;
var bool: aux3582_BOOL:: var_is_introduced ;
var 2..44: aux3583:: var_is_introduced ;
var bool: aux3584_BOOL:: var_is_introduced ;
var bool: aux3585_BOOL:: var_is_introduced ;
var bool: aux3586_BOOL:: var_is_introduced ;
var {0,1}: aux3586_INTEGER :: var_is_introduced ;
var bool: aux3587_BOOL:: var_is_introduced ;
var bool: aux3588_BOOL:: var_is_introduced ;
var 3..45: aux3589:: var_is_introduced ;
var bool: aux3590_BOOL:: var_is_introduced ;
var bool: aux3591_BOOL:: var_is_introduced ;
var bool: aux3592_BOOL:: var_is_introduced ;
var {0,1}: aux3592_INTEGER :: var_is_introduced ;
var bool: aux3593_BOOL:: var_is_introduced ;
var bool: aux3594_BOOL:: var_is_introduced ;
var 2..44: aux3595:: var_is_introduced ;
var bool: aux3596_BOOL:: var_is_introduced ;
var bool: aux3597_BOOL:: var_is_introduced ;
var bool: aux3598_BOOL:: var_is_introduced ;
var {0,1}: aux3598_INTEGER :: var_is_introduced ;
var bool: aux3599_BOOL:: var_is_introduced ;
var bool: aux3600_BOOL:: var_is_introduced ;
var 2..44: aux3601:: var_is_introduced ;
var bool: aux3602_BOOL:: var_is_introduced ;
var bool: aux3603_BOOL:: var_is_introduced ;
var bool: aux3604_BOOL:: var_is_introduced ;
var {0,1}: aux3604_INTEGER :: var_is_introduced ;
var bool: aux3605_BOOL:: var_is_introduced ;
var bool: aux3606_BOOL:: var_is_introduced ;
var 1..43: aux3607:: var_is_introduced ;
var bool: aux3608_BOOL:: var_is_introduced ;
var bool: aux3609_BOOL:: var_is_introduced ;
var bool: aux3610_BOOL:: var_is_introduced ;
var {0,1}: aux3610_INTEGER :: var_is_introduced ;
var bool: aux3611_BOOL:: var_is_introduced ;
var bool: aux3612_BOOL:: var_is_introduced ;
var 2..44: aux3613:: var_is_introduced ;
var bool: aux3614_BOOL:: var_is_introduced ;
var bool: aux3615_BOOL:: var_is_introduced ;
var bool: aux3616_BOOL:: var_is_introduced ;
var {0,1}: aux3616_INTEGER :: var_is_introduced ;
var bool: aux3617_BOOL:: var_is_introduced ;
var bool: aux3618_BOOL:: var_is_introduced ;
var 2..44: aux3619:: var_is_introduced ;
var bool: aux3620_BOOL:: var_is_introduced ;
var bool: aux3621_BOOL:: var_is_introduced ;
var bool: aux3622_BOOL:: var_is_introduced ;
var {0,1}: aux3622_INTEGER :: var_is_introduced ;
var bool: aux3623_BOOL:: var_is_introduced ;
var bool: aux3624_BOOL:: var_is_introduced ;
var 1..43: aux3625:: var_is_introduced ;
var bool: aux3626_BOOL:: var_is_introduced ;
var bool: aux3627_BOOL:: var_is_introduced ;
var bool: aux3628_BOOL:: var_is_introduced ;
var {0,1}: aux3628_INTEGER :: var_is_introduced ;
var bool: aux3629_BOOL:: var_is_introduced ;
var bool: aux3630_BOOL:: var_is_introduced ;
var 4..46: aux3631:: var_is_introduced ;
var bool: aux3632_BOOL:: var_is_introduced ;
var bool: aux3633_BOOL:: var_is_introduced ;
var bool: aux3634_BOOL:: var_is_introduced ;
var {0,1}: aux3634_INTEGER :: var_is_introduced ;
var bool: aux3635_BOOL:: var_is_introduced ;
var bool: aux3636_BOOL:: var_is_introduced ;
var 2..44: aux3637:: var_is_introduced ;
var bool: aux3638_BOOL:: var_is_introduced ;
var bool: aux3639_BOOL:: var_is_introduced ;
var bool: aux3640_BOOL:: var_is_introduced ;
var {0,1}: aux3640_INTEGER :: var_is_introduced ;
var bool: aux3641_BOOL:: var_is_introduced ;
var bool: aux3642_BOOL:: var_is_introduced ;
var 3..45: aux3643:: var_is_introduced ;
var bool: aux3644_BOOL:: var_is_introduced ;
var bool: aux3645_BOOL:: var_is_introduced ;
var bool: aux3646_BOOL:: var_is_introduced ;
var {0,1}: aux3646_INTEGER :: var_is_introduced ;
var bool: aux3647_BOOL:: var_is_introduced ;
var bool: aux3648_BOOL:: var_is_introduced ;
var 1..43: aux3649:: var_is_introduced ;
var bool: aux3650_BOOL:: var_is_introduced ;
var bool: aux3651_BOOL:: var_is_introduced ;
var bool: aux3652_BOOL:: var_is_introduced ;
var {0,1}: aux3652_INTEGER :: var_is_introduced ;
var bool: aux3653_BOOL:: var_is_introduced ;
var bool: aux3654_BOOL:: var_is_introduced ;
var 3..45: aux3655:: var_is_introduced ;
var bool: aux3656_BOOL:: var_is_introduced ;
var bool: aux3657_BOOL:: var_is_introduced ;
var bool: aux3658_BOOL:: var_is_introduced ;
var {0,1}: aux3658_INTEGER :: var_is_introduced ;
var bool: aux3659_BOOL:: var_is_introduced ;
var bool: aux3660_BOOL:: var_is_introduced ;
var 2..44: aux3661:: var_is_introduced ;
var bool: aux3662_BOOL:: var_is_introduced ;
var bool: aux3663_BOOL:: var_is_introduced ;
var bool: aux3664_BOOL:: var_is_introduced ;
var {0,1}: aux3664_INTEGER :: var_is_introduced ;
var bool: aux3665_BOOL:: var_is_introduced ;
var bool: aux3666_BOOL:: var_is_introduced ;
var 3..45: aux3667:: var_is_introduced ;
var bool: aux3668_BOOL:: var_is_introduced ;
var bool: aux3669_BOOL:: var_is_introduced ;
var bool: aux3670_BOOL:: var_is_introduced ;
var {0,1}: aux3670_INTEGER :: var_is_introduced ;
var bool: aux3671_BOOL:: var_is_introduced ;
var bool: aux3672_BOOL:: var_is_introduced ;
var 3..45: aux3673:: var_is_introduced ;
var bool: aux3674_BOOL:: var_is_introduced ;
var bool: aux3675_BOOL:: var_is_introduced ;
var {0,1}: aux3675_INTEGER :: var_is_introduced ;
var bool: aux3676_BOOL:: var_is_introduced ;
var bool: aux3677_BOOL:: var_is_introduced ;
var 1..43: aux3678:: var_is_introduced ;
var bool: aux3679_BOOL:: var_is_introduced ;
var bool: aux3680_BOOL:: var_is_introduced ;
var bool: aux3681_BOOL:: var_is_introduced ;
var {0,1}: aux3681_INTEGER :: var_is_introduced ;
var bool: aux3682_BOOL:: var_is_introduced ;
var bool: aux3683_BOOL:: var_is_introduced ;
var 2..44: aux3684:: var_is_introduced ;
var bool: aux3685_BOOL:: var_is_introduced ;
var bool: aux3686_BOOL:: var_is_introduced ;
var bool: aux3687_BOOL:: var_is_introduced ;
var {0,1}: aux3687_INTEGER :: var_is_introduced ;
var bool: aux3688_BOOL:: var_is_introduced ;
var bool: aux3689_BOOL:: var_is_introduced ;
var 3..45: aux3690:: var_is_introduced ;
var bool: aux3691_BOOL:: var_is_introduced ;
var bool: aux3692_BOOL:: var_is_introduced ;
var bool: aux3693_BOOL:: var_is_introduced ;
var {0,1}: aux3693_INTEGER :: var_is_introduced ;
var bool: aux3694_BOOL:: var_is_introduced ;
var bool: aux3695_BOOL:: var_is_introduced ;
var 2..44: aux3696:: var_is_introduced ;
var bool: aux3697_BOOL:: var_is_introduced ;
var bool: aux3698_BOOL:: var_is_introduced ;
var bool: aux3699_BOOL:: var_is_introduced ;
var {0,1}: aux3699_INTEGER :: var_is_introduced ;
var bool: aux3700_BOOL:: var_is_introduced ;
var bool: aux3701_BOOL:: var_is_introduced ;
var 2..44: aux3702:: var_is_introduced ;
var bool: aux3703_BOOL:: var_is_introduced ;
var bool: aux3704_BOOL:: var_is_introduced ;
var bool: aux3705_BOOL:: var_is_introduced ;
var {0,1}: aux3705_INTEGER :: var_is_introduced ;
var bool: aux3706_BOOL:: var_is_introduced ;
var bool: aux3707_BOOL:: var_is_introduced ;
var 3..45: aux3708:: var_is_introduced ;
var bool: aux3709_BOOL:: var_is_introduced ;
var bool: aux3710_BOOL:: var_is_introduced ;
var bool: aux3711_BOOL:: var_is_introduced ;
var {0,1}: aux3711_INTEGER :: var_is_introduced ;
var bool: aux3712_BOOL:: var_is_introduced ;
var bool: aux3713_BOOL:: var_is_introduced ;
var 2..44: aux3714:: var_is_introduced ;
var bool: aux3715_BOOL:: var_is_introduced ;
var bool: aux3716_BOOL:: var_is_introduced ;
var bool: aux3717_BOOL:: var_is_introduced ;
var {0,1}: aux3717_INTEGER :: var_is_introduced ;
var bool: aux3718_BOOL:: var_is_introduced ;
var bool: aux3719_BOOL:: var_is_introduced ;
var 1..43: aux3720:: var_is_introduced ;
var bool: aux3721_BOOL:: var_is_introduced ;
var bool: aux3722_BOOL:: var_is_introduced ;
var bool: aux3723_BOOL:: var_is_introduced ;
var {0,1}: aux3723_INTEGER :: var_is_introduced ;
var bool: aux3724_BOOL:: var_is_introduced ;
var bool: aux3725_BOOL:: var_is_introduced ;
var 2..44: aux3726:: var_is_introduced ;
var bool: aux3727_BOOL:: var_is_introduced ;
var bool: aux3728_BOOL:: var_is_introduced ;
var bool: aux3729_BOOL:: var_is_introduced ;
var {0,1}: aux3729_INTEGER :: var_is_introduced ;
var bool: aux3730_BOOL:: var_is_introduced ;
var bool: aux3731_BOOL:: var_is_introduced ;
var 1..43: aux3732:: var_is_introduced ;
var bool: aux3733_BOOL:: var_is_introduced ;
var bool: aux3734_BOOL:: var_is_introduced ;
var bool: aux3735_BOOL:: var_is_introduced ;
var {0,1}: aux3735_INTEGER :: var_is_introduced ;
var bool: aux3736_BOOL:: var_is_introduced ;
var bool: aux3737_BOOL:: var_is_introduced ;
var 2..44: aux3738:: var_is_introduced ;
var bool: aux3739_BOOL:: var_is_introduced ;
var bool: aux3740_BOOL:: var_is_introduced ;
var bool: aux3741_BOOL:: var_is_introduced ;
var {0,1}: aux3741_INTEGER :: var_is_introduced ;
var bool: aux3742_BOOL:: var_is_introduced ;
var bool: aux3743_BOOL:: var_is_introduced ;
var 2..44: aux3744:: var_is_introduced ;
var bool: aux3745_BOOL:: var_is_introduced ;
var bool: aux3746_BOOL:: var_is_introduced ;
var bool: aux3747_BOOL:: var_is_introduced ;
var {0,1}: aux3747_INTEGER :: var_is_introduced ;
var bool: aux3748_BOOL:: var_is_introduced ;
var bool: aux3749_BOOL:: var_is_introduced ;
var 1..43: aux3750:: var_is_introduced ;
var bool: aux3751_BOOL:: var_is_introduced ;
var bool: aux3752_BOOL:: var_is_introduced ;
var bool: aux3753_BOOL:: var_is_introduced ;
var {0,1}: aux3753_INTEGER :: var_is_introduced ;
var bool: aux3754_BOOL:: var_is_introduced ;
var bool: aux3755_BOOL:: var_is_introduced ;
var 4..46: aux3756:: var_is_introduced ;
var bool: aux3757_BOOL:: var_is_introduced ;
var bool: aux3758_BOOL:: var_is_introduced ;
var bool: aux3759_BOOL:: var_is_introduced ;
var {0,1}: aux3759_INTEGER :: var_is_introduced ;
var bool: aux3760_BOOL:: var_is_introduced ;
var bool: aux3761_BOOL:: var_is_introduced ;
var 2..44: aux3762:: var_is_introduced ;
var bool: aux3763_BOOL:: var_is_introduced ;
var bool: aux3764_BOOL:: var_is_introduced ;
var bool: aux3765_BOOL:: var_is_introduced ;
var {0,1}: aux3765_INTEGER :: var_is_introduced ;
var bool: aux3766_BOOL:: var_is_introduced ;
var bool: aux3767_BOOL:: var_is_introduced ;
var 3..45: aux3768:: var_is_introduced ;
var bool: aux3769_BOOL:: var_is_introduced ;
var bool: aux3770_BOOL:: var_is_introduced ;
var bool: aux3771_BOOL:: var_is_introduced ;
var {0,1}: aux3771_INTEGER :: var_is_introduced ;
var bool: aux3772_BOOL:: var_is_introduced ;
var bool: aux3773_BOOL:: var_is_introduced ;
var 1..43: aux3774:: var_is_introduced ;
var bool: aux3775_BOOL:: var_is_introduced ;
var bool: aux3776_BOOL:: var_is_introduced ;
var bool: aux3777_BOOL:: var_is_introduced ;
var {0,1}: aux3777_INTEGER :: var_is_introduced ;
var bool: aux3778_BOOL:: var_is_introduced ;
var bool: aux3779_BOOL:: var_is_introduced ;
var 3..45: aux3780:: var_is_introduced ;
var bool: aux3781_BOOL:: var_is_introduced ;
var bool: aux3782_BOOL:: var_is_introduced ;
var bool: aux3783_BOOL:: var_is_introduced ;
var {0,1}: aux3783_INTEGER :: var_is_introduced ;
var bool: aux3784_BOOL:: var_is_introduced ;
var bool: aux3785_BOOL:: var_is_introduced ;
var 2..44: aux3786:: var_is_introduced ;
var bool: aux3787_BOOL:: var_is_introduced ;
var bool: aux3788_BOOL:: var_is_introduced ;
var bool: aux3789_BOOL:: var_is_introduced ;
var {0,1}: aux3789_INTEGER :: var_is_introduced ;
var bool: aux3790_BOOL:: var_is_introduced ;
var bool: aux3791_BOOL:: var_is_introduced ;
var 2..44: aux3792:: var_is_introduced ;
var bool: aux3793_BOOL:: var_is_introduced ;
var bool: aux3794_BOOL:: var_is_introduced ;
var {0,1}: aux3794_INTEGER :: var_is_introduced ;
var bool: aux3795_BOOL:: var_is_introduced ;
var bool: aux3796_BOOL:: var_is_introduced ;
var 1..43: aux3797:: var_is_introduced ;
var bool: aux3798_BOOL:: var_is_introduced ;
var bool: aux3799_BOOL:: var_is_introduced ;
var bool: aux3800_BOOL:: var_is_introduced ;
var {0,1}: aux3800_INTEGER :: var_is_introduced ;
var bool: aux3801_BOOL:: var_is_introduced ;
var bool: aux3802_BOOL:: var_is_introduced ;
var 2..44: aux3803:: var_is_introduced ;
var bool: aux3804_BOOL:: var_is_introduced ;
var bool: aux3805_BOOL:: var_is_introduced ;
var bool: aux3806_BOOL:: var_is_introduced ;
var {0,1}: aux3806_INTEGER :: var_is_introduced ;
var bool: aux3807_BOOL:: var_is_introduced ;
var bool: aux3808_BOOL:: var_is_introduced ;
var 3..45: aux3809:: var_is_introduced ;
var bool: aux3810_BOOL:: var_is_introduced ;
var bool: aux3811_BOOL:: var_is_introduced ;
var bool: aux3812_BOOL:: var_is_introduced ;
var {0,1}: aux3812_INTEGER :: var_is_introduced ;
var bool: aux3813_BOOL:: var_is_introduced ;
var bool: aux3814_BOOL:: var_is_introduced ;
var 2..44: aux3815:: var_is_introduced ;
var bool: aux3816_BOOL:: var_is_introduced ;
var bool: aux3817_BOOL:: var_is_introduced ;
var bool: aux3818_BOOL:: var_is_introduced ;
var {0,1}: aux3818_INTEGER :: var_is_introduced ;
var bool: aux3819_BOOL:: var_is_introduced ;
var bool: aux3820_BOOL:: var_is_introduced ;
var 2..44: aux3821:: var_is_introduced ;
var bool: aux3822_BOOL:: var_is_introduced ;
var bool: aux3823_BOOL:: var_is_introduced ;
var bool: aux3824_BOOL:: var_is_introduced ;
var {0,1}: aux3824_INTEGER :: var_is_introduced ;
var bool: aux3825_BOOL:: var_is_introduced ;
var bool: aux3826_BOOL:: var_is_introduced ;
var 3..45: aux3827:: var_is_introduced ;
var bool: aux3828_BOOL:: var_is_introduced ;
var bool: aux3829_BOOL:: var_is_introduced ;
var bool: aux3830_BOOL:: var_is_introduced ;
var {0,1}: aux3830_INTEGER :: var_is_introduced ;
var bool: aux3831_BOOL:: var_is_introduced ;
var bool: aux3832_BOOL:: var_is_introduced ;
var 2..44: aux3833:: var_is_introduced ;
var bool: aux3834_BOOL:: var_is_introduced ;
var bool: aux3835_BOOL:: var_is_introduced ;
var bool: aux3836_BOOL:: var_is_introduced ;
var {0,1}: aux3836_INTEGER :: var_is_introduced ;
var bool: aux3837_BOOL:: var_is_introduced ;
var bool: aux3838_BOOL:: var_is_introduced ;
var 1..43: aux3839:: var_is_introduced ;
var bool: aux3840_BOOL:: var_is_introduced ;
var bool: aux3841_BOOL:: var_is_introduced ;
var bool: aux3842_BOOL:: var_is_introduced ;
var {0,1}: aux3842_INTEGER :: var_is_introduced ;
var bool: aux3843_BOOL:: var_is_introduced ;
var bool: aux3844_BOOL:: var_is_introduced ;
var 2..44: aux3845:: var_is_introduced ;
var bool: aux3846_BOOL:: var_is_introduced ;
var bool: aux3847_BOOL:: var_is_introduced ;
var bool: aux3848_BOOL:: var_is_introduced ;
var {0,1}: aux3848_INTEGER :: var_is_introduced ;
var bool: aux3849_BOOL:: var_is_introduced ;
var bool: aux3850_BOOL:: var_is_introduced ;
var 1..43: aux3851:: var_is_introduced ;
var bool: aux3852_BOOL:: var_is_introduced ;
var bool: aux3853_BOOL:: var_is_introduced ;
var bool: aux3854_BOOL:: var_is_introduced ;
var {0,1}: aux3854_INTEGER :: var_is_introduced ;
var bool: aux3855_BOOL:: var_is_introduced ;
var bool: aux3856_BOOL:: var_is_introduced ;
var 2..44: aux3857:: var_is_introduced ;
var bool: aux3858_BOOL:: var_is_introduced ;
var bool: aux3859_BOOL:: var_is_introduced ;
var bool: aux3860_BOOL:: var_is_introduced ;
var {0,1}: aux3860_INTEGER :: var_is_introduced ;
var bool: aux3861_BOOL:: var_is_introduced ;
var bool: aux3862_BOOL:: var_is_introduced ;
var 2..44: aux3863:: var_is_introduced ;
var bool: aux3864_BOOL:: var_is_introduced ;
var bool: aux3865_BOOL:: var_is_introduced ;
var bool: aux3866_BOOL:: var_is_introduced ;
var {0,1}: aux3866_INTEGER :: var_is_introduced ;
var bool: aux3867_BOOL:: var_is_introduced ;
var bool: aux3868_BOOL:: var_is_introduced ;
var 1..43: aux3869:: var_is_introduced ;
var bool: aux3870_BOOL:: var_is_introduced ;
var bool: aux3871_BOOL:: var_is_introduced ;
var bool: aux3872_BOOL:: var_is_introduced ;
var {0,1}: aux3872_INTEGER :: var_is_introduced ;
var bool: aux3873_BOOL:: var_is_introduced ;
var bool: aux3874_BOOL:: var_is_introduced ;
var 4..46: aux3875:: var_is_introduced ;
var bool: aux3876_BOOL:: var_is_introduced ;
var bool: aux3877_BOOL:: var_is_introduced ;
var bool: aux3878_BOOL:: var_is_introduced ;
var {0,1}: aux3878_INTEGER :: var_is_introduced ;
var bool: aux3879_BOOL:: var_is_introduced ;
var bool: aux3880_BOOL:: var_is_introduced ;
var 2..44: aux3881:: var_is_introduced ;
var bool: aux3882_BOOL:: var_is_introduced ;
var bool: aux3883_BOOL:: var_is_introduced ;
var bool: aux3884_BOOL:: var_is_introduced ;
var {0,1}: aux3884_INTEGER :: var_is_introduced ;
var bool: aux3885_BOOL:: var_is_introduced ;
var bool: aux3886_BOOL:: var_is_introduced ;
var 3..45: aux3887:: var_is_introduced ;
var bool: aux3888_BOOL:: var_is_introduced ;
var bool: aux3889_BOOL:: var_is_introduced ;
var bool: aux3890_BOOL:: var_is_introduced ;
var {0,1}: aux3890_INTEGER :: var_is_introduced ;
var bool: aux3891_BOOL:: var_is_introduced ;
var bool: aux3892_BOOL:: var_is_introduced ;
var 1..43: aux3893:: var_is_introduced ;
var bool: aux3894_BOOL:: var_is_introduced ;
var bool: aux3895_BOOL:: var_is_introduced ;
var bool: aux3896_BOOL:: var_is_introduced ;
var {0,1}: aux3896_INTEGER :: var_is_introduced ;
var bool: aux3897_BOOL:: var_is_introduced ;
var bool: aux3898_BOOL:: var_is_introduced ;
var 3..45: aux3899:: var_is_introduced ;
var bool: aux3900_BOOL:: var_is_introduced ;
var bool: aux3901_BOOL:: var_is_introduced ;
var bool: aux3902_BOOL:: var_is_introduced ;
var {0,1}: aux3902_INTEGER :: var_is_introduced ;
var bool: aux3903_BOOL:: var_is_introduced ;
var bool: aux3904_BOOL:: var_is_introduced ;
var 3..45: aux3905:: var_is_introduced ;
var bool: aux3906_BOOL:: var_is_introduced ;
var bool: aux3907_BOOL:: var_is_introduced ;
var bool: aux3908_BOOL:: var_is_introduced ;
var {0,1}: aux3908_INTEGER :: var_is_introduced ;
var bool: aux3909_BOOL:: var_is_introduced ;
var bool: aux3910_BOOL:: var_is_introduced ;
var 3..45: aux3911:: var_is_introduced ;
var bool: aux3912_BOOL:: var_is_introduced ;
var bool: aux3913_BOOL:: var_is_introduced ;
var {0,1}: aux3913_INTEGER :: var_is_introduced ;
var bool: aux3914_BOOL:: var_is_introduced ;
var bool: aux3915_BOOL:: var_is_introduced ;
var 1..43: aux3916:: var_is_introduced ;
var bool: aux3917_BOOL:: var_is_introduced ;
var bool: aux3918_BOOL:: var_is_introduced ;
var bool: aux3919_BOOL:: var_is_introduced ;
var {0,1}: aux3919_INTEGER :: var_is_introduced ;
var bool: aux3920_BOOL:: var_is_introduced ;
var bool: aux3921_BOOL:: var_is_introduced ;
var 2..44: aux3922:: var_is_introduced ;
var bool: aux3923_BOOL:: var_is_introduced ;
var bool: aux3924_BOOL:: var_is_introduced ;
var bool: aux3925_BOOL:: var_is_introduced ;
var {0,1}: aux3925_INTEGER :: var_is_introduced ;
var bool: aux3926_BOOL:: var_is_introduced ;
var bool: aux3927_BOOL:: var_is_introduced ;
var 3..45: aux3928:: var_is_introduced ;
var bool: aux3929_BOOL:: var_is_introduced ;
var bool: aux3930_BOOL:: var_is_introduced ;
var bool: aux3931_BOOL:: var_is_introduced ;
var {0,1}: aux3931_INTEGER :: var_is_introduced ;
var bool: aux3932_BOOL:: var_is_introduced ;
var bool: aux3933_BOOL:: var_is_introduced ;
var 2..44: aux3934:: var_is_introduced ;
var bool: aux3935_BOOL:: var_is_introduced ;
var bool: aux3936_BOOL:: var_is_introduced ;
var bool: aux3937_BOOL:: var_is_introduced ;
var {0,1}: aux3937_INTEGER :: var_is_introduced ;
var bool: aux3938_BOOL:: var_is_introduced ;
var bool: aux3939_BOOL:: var_is_introduced ;
var 2..44: aux3940:: var_is_introduced ;
var bool: aux3941_BOOL:: var_is_introduced ;
var bool: aux3942_BOOL:: var_is_introduced ;
var bool: aux3943_BOOL:: var_is_introduced ;
var {0,1}: aux3943_INTEGER :: var_is_introduced ;
var bool: aux3944_BOOL:: var_is_introduced ;
var bool: aux3945_BOOL:: var_is_introduced ;
var 2..44: aux3946:: var_is_introduced ;
var bool: aux3947_BOOL:: var_is_introduced ;
var bool: aux3948_BOOL:: var_is_introduced ;
var bool: aux3949_BOOL:: var_is_introduced ;
var {0,1}: aux3949_INTEGER :: var_is_introduced ;
var bool: aux3950_BOOL:: var_is_introduced ;
var bool: aux3951_BOOL:: var_is_introduced ;
var 1..43: aux3952:: var_is_introduced ;
var bool: aux3953_BOOL:: var_is_introduced ;
var bool: aux3954_BOOL:: var_is_introduced ;
var bool: aux3955_BOOL:: var_is_introduced ;
var {0,1}: aux3955_INTEGER :: var_is_introduced ;
var bool: aux3956_BOOL:: var_is_introduced ;
var bool: aux3957_BOOL:: var_is_introduced ;
var 2..44: aux3958:: var_is_introduced ;
var bool: aux3959_BOOL:: var_is_introduced ;
var bool: aux3960_BOOL:: var_is_introduced ;
var bool: aux3961_BOOL:: var_is_introduced ;
var {0,1}: aux3961_INTEGER :: var_is_introduced ;
var bool: aux3962_BOOL:: var_is_introduced ;
var bool: aux3963_BOOL:: var_is_introduced ;
var 1..43: aux3964:: var_is_introduced ;
var bool: aux3965_BOOL:: var_is_introduced ;
var bool: aux3966_BOOL:: var_is_introduced ;
var bool: aux3967_BOOL:: var_is_introduced ;
var {0,1}: aux3967_INTEGER :: var_is_introduced ;
var bool: aux3968_BOOL:: var_is_introduced ;
var bool: aux3969_BOOL:: var_is_introduced ;
var 2..44: aux3970:: var_is_introduced ;
var bool: aux3971_BOOL:: var_is_introduced ;
var bool: aux3972_BOOL:: var_is_introduced ;
var bool: aux3973_BOOL:: var_is_introduced ;
var {0,1}: aux3973_INTEGER :: var_is_introduced ;
var bool: aux3974_BOOL:: var_is_introduced ;
var bool: aux3975_BOOL:: var_is_introduced ;
var 2..44: aux3976:: var_is_introduced ;
var bool: aux3977_BOOL:: var_is_introduced ;
var bool: aux3978_BOOL:: var_is_introduced ;
var bool: aux3979_BOOL:: var_is_introduced ;
var {0,1}: aux3979_INTEGER :: var_is_introduced ;
var bool: aux3980_BOOL:: var_is_introduced ;
var bool: aux3981_BOOL:: var_is_introduced ;
var 1..43: aux3982:: var_is_introduced ;
var bool: aux3983_BOOL:: var_is_introduced ;
var bool: aux3984_BOOL:: var_is_introduced ;
var bool: aux3985_BOOL:: var_is_introduced ;
var {0,1}: aux3985_INTEGER :: var_is_introduced ;
var bool: aux3986_BOOL:: var_is_introduced ;
var bool: aux3987_BOOL:: var_is_introduced ;
var 4..46: aux3988:: var_is_introduced ;
var bool: aux3989_BOOL:: var_is_introduced ;
var bool: aux3990_BOOL:: var_is_introduced ;
var bool: aux3991_BOOL:: var_is_introduced ;
var {0,1}: aux3991_INTEGER :: var_is_introduced ;
var bool: aux3992_BOOL:: var_is_introduced ;
var bool: aux3993_BOOL:: var_is_introduced ;
var 2..44: aux3994:: var_is_introduced ;
var bool: aux3995_BOOL:: var_is_introduced ;
var bool: aux3996_BOOL:: var_is_introduced ;
var bool: aux3997_BOOL:: var_is_introduced ;
var {0,1}: aux3997_INTEGER :: var_is_introduced ;
var bool: aux3998_BOOL:: var_is_introduced ;
var bool: aux3999_BOOL:: var_is_introduced ;
var 3..45: aux4000:: var_is_introduced ;
var bool: aux4001_BOOL:: var_is_introduced ;
var bool: aux4002_BOOL:: var_is_introduced ;
var bool: aux4003_BOOL:: var_is_introduced ;
var {0,1}: aux4003_INTEGER :: var_is_introduced ;
var bool: aux4004_BOOL:: var_is_introduced ;
var bool: aux4005_BOOL:: var_is_introduced ;
var 1..43: aux4006:: var_is_introduced ;
var bool: aux4007_BOOL:: var_is_introduced ;
var bool: aux4008_BOOL:: var_is_introduced ;
var bool: aux4009_BOOL:: var_is_introduced ;
var {0,1}: aux4009_INTEGER :: var_is_introduced ;
var bool: aux4010_BOOL:: var_is_introduced ;
var bool: aux4011_BOOL:: var_is_introduced ;
var 3..45: aux4012:: var_is_introduced ;
var bool: aux4013_BOOL:: var_is_introduced ;
var bool: aux4014_BOOL:: var_is_introduced ;
var bool: aux4015_BOOL:: var_is_introduced ;
var {0,1}: aux4015_INTEGER :: var_is_introduced ;
var bool: aux4016_BOOL:: var_is_introduced ;
var bool: aux4017_BOOL:: var_is_introduced ;
var 2..44: aux4018:: var_is_introduced ;
var bool: aux4019_BOOL:: var_is_introduced ;
var bool: aux4020_BOOL:: var_is_introduced ;
var bool: aux4021_BOOL:: var_is_introduced ;
var {0,1}: aux4021_INTEGER :: var_is_introduced ;
var bool: aux4022_BOOL:: var_is_introduced ;
var bool: aux4023_BOOL:: var_is_introduced ;
var 3..45: aux4024:: var_is_introduced ;
var bool: aux4025_BOOL:: var_is_introduced ;
var bool: aux4026_BOOL:: var_is_introduced ;
var bool: aux4027_BOOL:: var_is_introduced ;
var {0,1}: aux4027_INTEGER :: var_is_introduced ;
var bool: aux4028_BOOL:: var_is_introduced ;
var bool: aux4029_BOOL:: var_is_introduced ;
var 4..46: aux4030:: var_is_introduced ;
var bool: aux4031_BOOL:: var_is_introduced ;
var bool: aux4032_BOOL:: var_is_introduced ;
var {0,1}: aux4032_INTEGER :: var_is_introduced ;
var bool: aux4033_BOOL:: var_is_introduced ;
var bool: aux4034_BOOL:: var_is_introduced ;
var 1..43: aux4035:: var_is_introduced ;
var bool: aux4036_BOOL:: var_is_introduced ;
var bool: aux4037_BOOL:: var_is_introduced ;
var bool: aux4038_BOOL:: var_is_introduced ;
var {0,1}: aux4038_INTEGER :: var_is_introduced ;
var bool: aux4039_BOOL:: var_is_introduced ;
var bool: aux4040_BOOL:: var_is_introduced ;
var 2..44: aux4041:: var_is_introduced ;
var bool: aux4042_BOOL:: var_is_introduced ;
var bool: aux4043_BOOL:: var_is_introduced ;
var bool: aux4044_BOOL:: var_is_introduced ;
var {0,1}: aux4044_INTEGER :: var_is_introduced ;
var bool: aux4045_BOOL:: var_is_introduced ;
var bool: aux4046_BOOL:: var_is_introduced ;
var 3..45: aux4047:: var_is_introduced ;
var bool: aux4048_BOOL:: var_is_introduced ;
var bool: aux4049_BOOL:: var_is_introduced ;
var bool: aux4050_BOOL:: var_is_introduced ;
var {0,1}: aux4050_INTEGER :: var_is_introduced ;
var bool: aux4051_BOOL:: var_is_introduced ;
var bool: aux4052_BOOL:: var_is_introduced ;
var 2..44: aux4053:: var_is_introduced ;
var bool: aux4054_BOOL:: var_is_introduced ;
var bool: aux4055_BOOL:: var_is_introduced ;
var bool: aux4056_BOOL:: var_is_introduced ;
var {0,1}: aux4056_INTEGER :: var_is_introduced ;
var bool: aux4057_BOOL:: var_is_introduced ;
var bool: aux4058_BOOL:: var_is_introduced ;
var 2..44: aux4059:: var_is_introduced ;
var bool: aux4060_BOOL:: var_is_introduced ;
var bool: aux4061_BOOL:: var_is_introduced ;
var bool: aux4062_BOOL:: var_is_introduced ;
var {0,1}: aux4062_INTEGER :: var_is_introduced ;
var bool: aux4063_BOOL:: var_is_introduced ;
var bool: aux4064_BOOL:: var_is_introduced ;
var 3..45: aux4065:: var_is_introduced ;
var bool: aux4066_BOOL:: var_is_introduced ;
var bool: aux4067_BOOL:: var_is_introduced ;
var bool: aux4068_BOOL:: var_is_introduced ;
var {0,1}: aux4068_INTEGER :: var_is_introduced ;
var bool: aux4069_BOOL:: var_is_introduced ;
var bool: aux4070_BOOL:: var_is_introduced ;
var 2..44: aux4071:: var_is_introduced ;
var bool: aux4072_BOOL:: var_is_introduced ;
var bool: aux4073_BOOL:: var_is_introduced ;
var bool: aux4074_BOOL:: var_is_introduced ;
var {0,1}: aux4074_INTEGER :: var_is_introduced ;
var bool: aux4075_BOOL:: var_is_introduced ;
var bool: aux4076_BOOL:: var_is_introduced ;
var 1..43: aux4077:: var_is_introduced ;
var bool: aux4078_BOOL:: var_is_introduced ;
var bool: aux4079_BOOL:: var_is_introduced ;
var bool: aux4080_BOOL:: var_is_introduced ;
var {0,1}: aux4080_INTEGER :: var_is_introduced ;
var bool: aux4081_BOOL:: var_is_introduced ;
var bool: aux4082_BOOL:: var_is_introduced ;
var 2..44: aux4083:: var_is_introduced ;
var bool: aux4084_BOOL:: var_is_introduced ;
var bool: aux4085_BOOL:: var_is_introduced ;
var bool: aux4086_BOOL:: var_is_introduced ;
var {0,1}: aux4086_INTEGER :: var_is_introduced ;
var bool: aux4087_BOOL:: var_is_introduced ;
var bool: aux4088_BOOL:: var_is_introduced ;
var 1..43: aux4089:: var_is_introduced ;
var bool: aux4090_BOOL:: var_is_introduced ;
var bool: aux4091_BOOL:: var_is_introduced ;
var bool: aux4092_BOOL:: var_is_introduced ;
var {0,1}: aux4092_INTEGER :: var_is_introduced ;
var bool: aux4093_BOOL:: var_is_introduced ;
var bool: aux4094_BOOL:: var_is_introduced ;
var 2..44: aux4095:: var_is_introduced ;
var bool: aux4096_BOOL:: var_is_introduced ;
var bool: aux4097_BOOL:: var_is_introduced ;
var bool: aux4098_BOOL:: var_is_introduced ;
var {0,1}: aux4098_INTEGER :: var_is_introduced ;
var bool: aux4099_BOOL:: var_is_introduced ;
var bool: aux4100_BOOL:: var_is_introduced ;
var 2..44: aux4101:: var_is_introduced ;
var bool: aux4102_BOOL:: var_is_introduced ;
var bool: aux4103_BOOL:: var_is_introduced ;
var bool: aux4104_BOOL:: var_is_introduced ;
var {0,1}: aux4104_INTEGER :: var_is_introduced ;
var bool: aux4105_BOOL:: var_is_introduced ;
var bool: aux4106_BOOL:: var_is_introduced ;
var 1..43: aux4107:: var_is_introduced ;
var bool: aux4108_BOOL:: var_is_introduced ;
var bool: aux4109_BOOL:: var_is_introduced ;
var bool: aux4110_BOOL:: var_is_introduced ;
var {0,1}: aux4110_INTEGER :: var_is_introduced ;
var bool: aux4111_BOOL:: var_is_introduced ;
var bool: aux4112_BOOL:: var_is_introduced ;
var 2..44: aux4113:: var_is_introduced ;
var bool: aux4114_BOOL:: var_is_introduced ;
var bool: aux4115_BOOL:: var_is_introduced ;
var bool: aux4116_BOOL:: var_is_introduced ;
var {0,1}: aux4116_INTEGER :: var_is_introduced ;
var bool: aux4117_BOOL:: var_is_introduced ;
var bool: aux4118_BOOL:: var_is_introduced ;
var 3..45: aux4119:: var_is_introduced ;
var bool: aux4120_BOOL:: var_is_introduced ;
var bool: aux4121_BOOL:: var_is_introduced ;
var bool: aux4122_BOOL:: var_is_introduced ;
var {0,1}: aux4122_INTEGER :: var_is_introduced ;
var bool: aux4123_BOOL:: var_is_introduced ;
var bool: aux4124_BOOL:: var_is_introduced ;
var 1..43: aux4125:: var_is_introduced ;
var bool: aux4126_BOOL:: var_is_introduced ;
var bool: aux4127_BOOL:: var_is_introduced ;
var bool: aux4128_BOOL:: var_is_introduced ;
var {0,1}: aux4128_INTEGER :: var_is_introduced ;
var bool: aux4129_BOOL:: var_is_introduced ;
var bool: aux4130_BOOL:: var_is_introduced ;
var 3..45: aux4131:: var_is_introduced ;
var bool: aux4132_BOOL:: var_is_introduced ;
var bool: aux4133_BOOL:: var_is_introduced ;
var bool: aux4134_BOOL:: var_is_introduced ;
var {0,1}: aux4134_INTEGER :: var_is_introduced ;
var bool: aux4135_BOOL:: var_is_introduced ;
var bool: aux4136_BOOL:: var_is_introduced ;
var 2..44: aux4137:: var_is_introduced ;
var bool: aux4138_BOOL:: var_is_introduced ;
var bool: aux4139_BOOL:: var_is_introduced ;
var bool: aux4140_BOOL:: var_is_introduced ;
var {0,1}: aux4140_INTEGER :: var_is_introduced ;
var bool: aux4141_BOOL:: var_is_introduced ;
var bool: aux4142_BOOL:: var_is_introduced ;
var 3..45: aux4143:: var_is_introduced ;
var bool: aux4144_BOOL:: var_is_introduced ;
var bool: aux4145_BOOL:: var_is_introduced ;
var bool: aux4146_BOOL:: var_is_introduced ;
var {0,1}: aux4146_INTEGER :: var_is_introduced ;
var bool: aux4147_BOOL:: var_is_introduced ;
var bool: aux4148_BOOL:: var_is_introduced ;
var 3..45: aux4149:: var_is_introduced ;
var bool: aux4150_BOOL:: var_is_introduced ;
var bool: aux4151_BOOL:: var_is_introduced ;
var {0,1}: aux4151_INTEGER :: var_is_introduced ;
var bool: aux4152_BOOL:: var_is_introduced ;
var bool: aux4153_BOOL:: var_is_introduced ;
var 1..43: aux4154:: var_is_introduced ;
var bool: aux4155_BOOL:: var_is_introduced ;
var bool: aux4156_BOOL:: var_is_introduced ;
var bool: aux4157_BOOL:: var_is_introduced ;
var {0,1}: aux4157_INTEGER :: var_is_introduced ;
var bool: aux4158_BOOL:: var_is_introduced ;
var bool: aux4159_BOOL:: var_is_introduced ;
var 2..44: aux4160:: var_is_introduced ;
var bool: aux4161_BOOL:: var_is_introduced ;
var bool: aux4162_BOOL:: var_is_introduced ;
var bool: aux4163_BOOL:: var_is_introduced ;
var {0,1}: aux4163_INTEGER :: var_is_introduced ;
var bool: aux4164_BOOL:: var_is_introduced ;
var bool: aux4165_BOOL:: var_is_introduced ;
var 2..44: aux4166:: var_is_introduced ;
var bool: aux4167_BOOL:: var_is_introduced ;
var bool: aux4168_BOOL:: var_is_introduced ;
var bool: aux4169_BOOL:: var_is_introduced ;
var {0,1}: aux4169_INTEGER :: var_is_introduced ;
var bool: aux4170_BOOL:: var_is_introduced ;
var bool: aux4171_BOOL:: var_is_introduced ;
var 2..44: aux4172:: var_is_introduced ;
var bool: aux4173_BOOL:: var_is_introduced ;
var bool: aux4174_BOOL:: var_is_introduced ;
var bool: aux4175_BOOL:: var_is_introduced ;
var {0,1}: aux4175_INTEGER :: var_is_introduced ;
var bool: aux4176_BOOL:: var_is_introduced ;
var bool: aux4177_BOOL:: var_is_introduced ;
var 3..45: aux4178:: var_is_introduced ;
var bool: aux4179_BOOL:: var_is_introduced ;
var bool: aux4180_BOOL:: var_is_introduced ;
var bool: aux4181_BOOL:: var_is_introduced ;
var {0,1}: aux4181_INTEGER :: var_is_introduced ;
var bool: aux4182_BOOL:: var_is_introduced ;
var bool: aux4183_BOOL:: var_is_introduced ;
var 2..44: aux4184:: var_is_introduced ;
var bool: aux4185_BOOL:: var_is_introduced ;
var bool: aux4186_BOOL:: var_is_introduced ;
var bool: aux4187_BOOL:: var_is_introduced ;
var {0,1}: aux4187_INTEGER :: var_is_introduced ;
var bool: aux4188_BOOL:: var_is_introduced ;
var bool: aux4189_BOOL:: var_is_introduced ;
var 1..43: aux4190:: var_is_introduced ;
var bool: aux4191_BOOL:: var_is_introduced ;
var bool: aux4192_BOOL:: var_is_introduced ;
var bool: aux4193_BOOL:: var_is_introduced ;
var {0,1}: aux4193_INTEGER :: var_is_introduced ;
var bool: aux4194_BOOL:: var_is_introduced ;
var bool: aux4195_BOOL:: var_is_introduced ;
var 2..44: aux4196:: var_is_introduced ;
var bool: aux4197_BOOL:: var_is_introduced ;
var bool: aux4198_BOOL:: var_is_introduced ;
var bool: aux4199_BOOL:: var_is_introduced ;
var {0,1}: aux4199_INTEGER :: var_is_introduced ;
var bool: aux4200_BOOL:: var_is_introduced ;
var bool: aux4201_BOOL:: var_is_introduced ;
var 1..43: aux4202:: var_is_introduced ;
var bool: aux4203_BOOL:: var_is_introduced ;
var bool: aux4204_BOOL:: var_is_introduced ;
var bool: aux4205_BOOL:: var_is_introduced ;
var {0,1}: aux4205_INTEGER :: var_is_introduced ;
var bool: aux4206_BOOL:: var_is_introduced ;
var bool: aux4207_BOOL:: var_is_introduced ;
var 2..44: aux4208:: var_is_introduced ;
var bool: aux4209_BOOL:: var_is_introduced ;
var bool: aux4210_BOOL:: var_is_introduced ;
var bool: aux4211_BOOL:: var_is_introduced ;
var {0,1}: aux4211_INTEGER :: var_is_introduced ;
var bool: aux4212_BOOL:: var_is_introduced ;
var bool: aux4213_BOOL:: var_is_introduced ;
var 2..44: aux4214:: var_is_introduced ;
var bool: aux4215_BOOL:: var_is_introduced ;
var bool: aux4216_BOOL:: var_is_introduced ;
var bool: aux4217_BOOL:: var_is_introduced ;
var {0,1}: aux4217_INTEGER :: var_is_introduced ;
var bool: aux4218_BOOL:: var_is_introduced ;
var bool: aux4219_BOOL:: var_is_introduced ;
var 1..43: aux4220:: var_is_introduced ;
var bool: aux4221_BOOL:: var_is_introduced ;
var bool: aux4222_BOOL:: var_is_introduced ;
var bool: aux4223_BOOL:: var_is_introduced ;
var {0,1}: aux4223_INTEGER :: var_is_introduced ;
var bool: aux4224_BOOL:: var_is_introduced ;
var bool: aux4225_BOOL:: var_is_introduced ;
var 4..46: aux4226:: var_is_introduced ;
var bool: aux4227_BOOL:: var_is_introduced ;
var bool: aux4228_BOOL:: var_is_introduced ;
var bool: aux4229_BOOL:: var_is_introduced ;
var {0,1}: aux4229_INTEGER :: var_is_introduced ;
var bool: aux4230_BOOL:: var_is_introduced ;
var bool: aux4231_BOOL:: var_is_introduced ;
var 2..44: aux4232:: var_is_introduced ;
var bool: aux4233_BOOL:: var_is_introduced ;
var bool: aux4234_BOOL:: var_is_introduced ;
var bool: aux4235_BOOL:: var_is_introduced ;
var {0,1}: aux4235_INTEGER :: var_is_introduced ;
var bool: aux4236_BOOL:: var_is_introduced ;
var bool: aux4237_BOOL:: var_is_introduced ;
var 3..45: aux4238:: var_is_introduced ;
var bool: aux4239_BOOL:: var_is_introduced ;
var bool: aux4240_BOOL:: var_is_introduced ;
var bool: aux4241_BOOL:: var_is_introduced ;
var {0,1}: aux4241_INTEGER :: var_is_introduced ;
var bool: aux4242_BOOL:: var_is_introduced ;
var bool: aux4243_BOOL:: var_is_introduced ;
var 1..43: aux4244:: var_is_introduced ;
var bool: aux4245_BOOL:: var_is_introduced ;
var bool: aux4246_BOOL:: var_is_introduced ;
var bool: aux4247_BOOL:: var_is_introduced ;
var {0,1}: aux4247_INTEGER :: var_is_introduced ;
var bool: aux4248_BOOL:: var_is_introduced ;
var bool: aux4249_BOOL:: var_is_introduced ;
var 3..45: aux4250:: var_is_introduced ;
var bool: aux4251_BOOL:: var_is_introduced ;
var bool: aux4252_BOOL:: var_is_introduced ;
var bool: aux4253_BOOL:: var_is_introduced ;
var {0,1}: aux4253_INTEGER :: var_is_introduced ;
var bool: aux4254_BOOL:: var_is_introduced ;
var bool: aux4255_BOOL:: var_is_introduced ;
var 2..44: aux4256:: var_is_introduced ;
var bool: aux4257_BOOL:: var_is_introduced ;
var bool: aux4258_BOOL:: var_is_introduced ;
var bool: aux4259_BOOL:: var_is_introduced ;
var {0,1}: aux4259_INTEGER :: var_is_introduced ;
var bool: aux4260_BOOL:: var_is_introduced ;
var bool: aux4261_BOOL:: var_is_introduced ;
var 3..45: aux4262:: var_is_introduced ;
var bool: aux4263_BOOL:: var_is_introduced ;
var bool: aux4264_BOOL:: var_is_introduced ;
var bool: aux4265_BOOL:: var_is_introduced ;
var {0,1}: aux4265_INTEGER :: var_is_introduced ;
var bool: aux4266_BOOL:: var_is_introduced ;
var bool: aux4267_BOOL:: var_is_introduced ;
var 1..43: aux4268:: var_is_introduced ;
var bool: aux4269_BOOL:: var_is_introduced ;
var bool: aux4270_BOOL:: var_is_introduced ;
var {0,1}: aux4270_INTEGER :: var_is_introduced ;
var bool: aux4271_BOOL:: var_is_introduced ;
var bool: aux4272_BOOL:: var_is_introduced ;
var 2..44: aux4273:: var_is_introduced ;
var bool: aux4274_BOOL:: var_is_introduced ;
var bool: aux4275_BOOL:: var_is_introduced ;
var bool: aux4276_BOOL:: var_is_introduced ;
var {0,1}: aux4276_INTEGER :: var_is_introduced ;
var bool: aux4277_BOOL:: var_is_introduced ;
var bool: aux4278_BOOL:: var_is_introduced ;
var 3..45: aux4279:: var_is_introduced ;
var bool: aux4280_BOOL:: var_is_introduced ;
var bool: aux4281_BOOL:: var_is_introduced ;
var bool: aux4282_BOOL:: var_is_introduced ;
var {0,1}: aux4282_INTEGER :: var_is_introduced ;
var bool: aux4283_BOOL:: var_is_introduced ;
var bool: aux4284_BOOL:: var_is_introduced ;
var 2..44: aux4285:: var_is_introduced ;
var bool: aux4286_BOOL:: var_is_introduced ;
var bool: aux4287_BOOL:: var_is_introduced ;
var bool: aux4288_BOOL:: var_is_introduced ;
var {0,1}: aux4288_INTEGER :: var_is_introduced ;
var bool: aux4289_BOOL:: var_is_introduced ;
var bool: aux4290_BOOL:: var_is_introduced ;
var 2..44: aux4291:: var_is_introduced ;
var bool: aux4292_BOOL:: var_is_introduced ;
var bool: aux4293_BOOL:: var_is_introduced ;
var bool: aux4294_BOOL:: var_is_introduced ;
var {0,1}: aux4294_INTEGER :: var_is_introduced ;
var bool: aux4295_BOOL:: var_is_introduced ;
var bool: aux4296_BOOL:: var_is_introduced ;
var 3..45: aux4297:: var_is_introduced ;
var bool: aux4298_BOOL:: var_is_introduced ;
var bool: aux4299_BOOL:: var_is_introduced ;
var bool: aux4300_BOOL:: var_is_introduced ;
var {0,1}: aux4300_INTEGER :: var_is_introduced ;
var bool: aux4301_BOOL:: var_is_introduced ;
var bool: aux4302_BOOL:: var_is_introduced ;
var 2..44: aux4303:: var_is_introduced ;
var bool: aux4304_BOOL:: var_is_introduced ;
var bool: aux4305_BOOL:: var_is_introduced ;
var bool: aux4306_BOOL:: var_is_introduced ;
var {0,1}: aux4306_INTEGER :: var_is_introduced ;
var bool: aux4307_BOOL:: var_is_introduced ;
var bool: aux4308_BOOL:: var_is_introduced ;
var 1..43: aux4309:: var_is_introduced ;
var bool: aux4310_BOOL:: var_is_introduced ;
var bool: aux4311_BOOL:: var_is_introduced ;
var bool: aux4312_BOOL:: var_is_introduced ;
var {0,1}: aux4312_INTEGER :: var_is_introduced ;
var bool: aux4313_BOOL:: var_is_introduced ;
var bool: aux4314_BOOL:: var_is_introduced ;
var 2..44: aux4315:: var_is_introduced ;
var bool: aux4316_BOOL:: var_is_introduced ;
var bool: aux4317_BOOL:: var_is_introduced ;
var bool: aux4318_BOOL:: var_is_introduced ;
var {0,1}: aux4318_INTEGER :: var_is_introduced ;
var bool: aux4319_BOOL:: var_is_introduced ;
var bool: aux4320_BOOL:: var_is_introduced ;
var 1..43: aux4321:: var_is_introduced ;
var bool: aux4322_BOOL:: var_is_introduced ;
var bool: aux4323_BOOL:: var_is_introduced ;
var bool: aux4324_BOOL:: var_is_introduced ;
var {0,1}: aux4324_INTEGER :: var_is_introduced ;
var bool: aux4325_BOOL:: var_is_introduced ;
var bool: aux4326_BOOL:: var_is_introduced ;
var 2..44: aux4327:: var_is_introduced ;
var bool: aux4328_BOOL:: var_is_introduced ;
var bool: aux4329_BOOL:: var_is_introduced ;
var bool: aux4330_BOOL:: var_is_introduced ;
var {0,1}: aux4330_INTEGER :: var_is_introduced ;
var bool: aux4331_BOOL:: var_is_introduced ;
var bool: aux4332_BOOL:: var_is_introduced ;
var 2..44: aux4333:: var_is_introduced ;
var bool: aux4334_BOOL:: var_is_introduced ;
var bool: aux4335_BOOL:: var_is_introduced ;
var bool: aux4336_BOOL:: var_is_introduced ;
var {0,1}: aux4336_INTEGER :: var_is_introduced ;
var bool: aux4337_BOOL:: var_is_introduced ;
var bool: aux4338_BOOL:: var_is_introduced ;
var 1..43: aux4339:: var_is_introduced ;
var bool: aux4340_BOOL:: var_is_introduced ;
var bool: aux4341_BOOL:: var_is_introduced ;
var bool: aux4342_BOOL:: var_is_introduced ;
var {0,1}: aux4342_INTEGER :: var_is_introduced ;
var bool: aux4343_BOOL:: var_is_introduced ;
var bool: aux4344_BOOL:: var_is_introduced ;
var 4..46: aux4345:: var_is_introduced ;
var bool: aux4346_BOOL:: var_is_introduced ;
var bool: aux4347_BOOL:: var_is_introduced ;
var bool: aux4348_BOOL:: var_is_introduced ;
var {0,1}: aux4348_INTEGER :: var_is_introduced ;
var bool: aux4349_BOOL:: var_is_introduced ;
var bool: aux4350_BOOL:: var_is_introduced ;
var 2..44: aux4351:: var_is_introduced ;
var bool: aux4352_BOOL:: var_is_introduced ;
var bool: aux4353_BOOL:: var_is_introduced ;
var bool: aux4354_BOOL:: var_is_introduced ;
var {0,1}: aux4354_INTEGER :: var_is_introduced ;
var bool: aux4355_BOOL:: var_is_introduced ;
var bool: aux4356_BOOL:: var_is_introduced ;
var 3..45: aux4357:: var_is_introduced ;
var bool: aux4358_BOOL:: var_is_introduced ;
var bool: aux4359_BOOL:: var_is_introduced ;
var bool: aux4360_BOOL:: var_is_introduced ;
var {0,1}: aux4360_INTEGER :: var_is_introduced ;
var bool: aux4361_BOOL:: var_is_introduced ;
var bool: aux4362_BOOL:: var_is_introduced ;
var 1..43: aux4363:: var_is_introduced ;
var bool: aux4364_BOOL:: var_is_introduced ;
var bool: aux4365_BOOL:: var_is_introduced ;
var bool: aux4366_BOOL:: var_is_introduced ;
var {0,1}: aux4366_INTEGER :: var_is_introduced ;
var bool: aux4367_BOOL:: var_is_introduced ;
var bool: aux4368_BOOL:: var_is_introduced ;
var 3..45: aux4369:: var_is_introduced ;
var bool: aux4370_BOOL:: var_is_introduced ;
var bool: aux4371_BOOL:: var_is_introduced ;
var bool: aux4372_BOOL:: var_is_introduced ;
var {0,1}: aux4372_INTEGER :: var_is_introduced ;
var bool: aux4373_BOOL:: var_is_introduced ;
var bool: aux4374_BOOL:: var_is_introduced ;
var 2..44: aux4375:: var_is_introduced ;
var bool: aux4376_BOOL:: var_is_introduced ;
var bool: aux4377_BOOL:: var_is_introduced ;
var bool: aux4378_BOOL:: var_is_introduced ;
var {0,1}: aux4378_INTEGER :: var_is_introduced ;
var bool: aux4379_BOOL:: var_is_introduced ;
var bool: aux4380_BOOL:: var_is_introduced ;
var 3..45: aux4381:: var_is_introduced ;
var bool: aux4382_BOOL:: var_is_introduced ;
var bool: aux4383_BOOL:: var_is_introduced ;
var bool: aux4384_BOOL:: var_is_introduced ;
var {0,1}: aux4384_INTEGER :: var_is_introduced ;
var bool: aux4385_BOOL:: var_is_introduced ;
var bool: aux4386_BOOL:: var_is_introduced ;
var 2..44: aux4387:: var_is_introduced ;
var bool: aux4388_BOOL:: var_is_introduced ;
var bool: aux4389_BOOL:: var_is_introduced ;
var {0,1}: aux4389_INTEGER :: var_is_introduced ;
var bool: aux4390_BOOL:: var_is_introduced ;
var bool: aux4391_BOOL:: var_is_introduced ;
var 1..43: aux4392:: var_is_introduced ;
var bool: aux4393_BOOL:: var_is_introduced ;
var bool: aux4394_BOOL:: var_is_introduced ;
var bool: aux4395_BOOL:: var_is_introduced ;
var {0,1}: aux4395_INTEGER :: var_is_introduced ;
var bool: aux4396_BOOL:: var_is_introduced ;
var bool: aux4397_BOOL:: var_is_introduced ;
var 2..44: aux4398:: var_is_introduced ;
var bool: aux4399_BOOL:: var_is_introduced ;
var bool: aux4400_BOOL:: var_is_introduced ;
var bool: aux4401_BOOL:: var_is_introduced ;
var {0,1}: aux4401_INTEGER :: var_is_introduced ;
var bool: aux4402_BOOL:: var_is_introduced ;
var bool: aux4403_BOOL:: var_is_introduced ;
var 3..45: aux4404:: var_is_introduced ;
var bool: aux4405_BOOL:: var_is_introduced ;
var bool: aux4406_BOOL:: var_is_introduced ;
var bool: aux4407_BOOL:: var_is_introduced ;
var {0,1}: aux4407_INTEGER :: var_is_introduced ;
var bool: aux4408_BOOL:: var_is_introduced ;
var bool: aux4409_BOOL:: var_is_introduced ;
var 2..44: aux4410:: var_is_introduced ;
var bool: aux4411_BOOL:: var_is_introduced ;
var bool: aux4412_BOOL:: var_is_introduced ;
var bool: aux4413_BOOL:: var_is_introduced ;
var {0,1}: aux4413_INTEGER :: var_is_introduced ;
var bool: aux4414_BOOL:: var_is_introduced ;
var bool: aux4415_BOOL:: var_is_introduced ;
var 2..44: aux4416:: var_is_introduced ;
var bool: aux4417_BOOL:: var_is_introduced ;
var bool: aux4418_BOOL:: var_is_introduced ;
var bool: aux4419_BOOL:: var_is_introduced ;
var {0,1}: aux4419_INTEGER :: var_is_introduced ;
var bool: aux4420_BOOL:: var_is_introduced ;
var bool: aux4421_BOOL:: var_is_introduced ;
var 3..45: aux4422:: var_is_introduced ;
var bool: aux4423_BOOL:: var_is_introduced ;
var bool: aux4424_BOOL:: var_is_introduced ;
var bool: aux4425_BOOL:: var_is_introduced ;
var {0,1}: aux4425_INTEGER :: var_is_introduced ;
var bool: aux4426_BOOL:: var_is_introduced ;
var bool: aux4427_BOOL:: var_is_introduced ;
var 2..44: aux4428:: var_is_introduced ;
var bool: aux4429_BOOL:: var_is_introduced ;
var bool: aux4430_BOOL:: var_is_introduced ;
var bool: aux4431_BOOL:: var_is_introduced ;
var {0,1}: aux4431_INTEGER :: var_is_introduced ;
var bool: aux4432_BOOL:: var_is_introduced ;
var bool: aux4433_BOOL:: var_is_introduced ;
var 1..43: aux4434:: var_is_introduced ;
var bool: aux4435_BOOL:: var_is_introduced ;
var bool: aux4436_BOOL:: var_is_introduced ;
var bool: aux4437_BOOL:: var_is_introduced ;
var {0,1}: aux4437_INTEGER :: var_is_introduced ;
var bool: aux4438_BOOL:: var_is_introduced ;
var bool: aux4439_BOOL:: var_is_introduced ;
var 2..44: aux4440:: var_is_introduced ;
var bool: aux4441_BOOL:: var_is_introduced ;
var bool: aux4442_BOOL:: var_is_introduced ;
var bool: aux4443_BOOL:: var_is_introduced ;
var {0,1}: aux4443_INTEGER :: var_is_introduced ;
var bool: aux4444_BOOL:: var_is_introduced ;
var bool: aux4445_BOOL:: var_is_introduced ;
var 1..43: aux4446:: var_is_introduced ;
var bool: aux4447_BOOL:: var_is_introduced ;
var bool: aux4448_BOOL:: var_is_introduced ;
var bool: aux4449_BOOL:: var_is_introduced ;
var {0,1}: aux4449_INTEGER :: var_is_introduced ;
var bool: aux4450_BOOL:: var_is_introduced ;
var bool: aux4451_BOOL:: var_is_introduced ;
var 2..44: aux4452:: var_is_introduced ;
var bool: aux4453_BOOL:: var_is_introduced ;
var bool: aux4454_BOOL:: var_is_introduced ;
var bool: aux4455_BOOL:: var_is_introduced ;
var {0,1}: aux4455_INTEGER :: var_is_introduced ;
var bool: aux4456_BOOL:: var_is_introduced ;
var bool: aux4457_BOOL:: var_is_introduced ;
var 2..44: aux4458:: var_is_introduced ;
var bool: aux4459_BOOL:: var_is_introduced ;
var bool: aux4460_BOOL:: var_is_introduced ;
var bool: aux4461_BOOL:: var_is_introduced ;
var {0,1}: aux4461_INTEGER :: var_is_introduced ;
var bool: aux4462_BOOL:: var_is_introduced ;
var bool: aux4463_BOOL:: var_is_introduced ;
var 1..43: aux4464:: var_is_introduced ;
var bool: aux4465_BOOL:: var_is_introduced ;
var bool: aux4466_BOOL:: var_is_introduced ;
var bool: aux4467_BOOL:: var_is_introduced ;
var {0,1}: aux4467_INTEGER :: var_is_introduced ;
var bool: aux4468_BOOL:: var_is_introduced ;
var bool: aux4469_BOOL:: var_is_introduced ;
var 4..46: aux4470:: var_is_introduced ;
var bool: aux4471_BOOL:: var_is_introduced ;
var bool: aux4472_BOOL:: var_is_introduced ;
var bool: aux4473_BOOL:: var_is_introduced ;
var {0,1}: aux4473_INTEGER :: var_is_introduced ;
var bool: aux4474_BOOL:: var_is_introduced ;
var bool: aux4475_BOOL:: var_is_introduced ;
var 3..45: aux4476:: var_is_introduced ;
var bool: aux4477_BOOL:: var_is_introduced ;
var bool: aux4478_BOOL:: var_is_introduced ;
var bool: aux4479_BOOL:: var_is_introduced ;
var {0,1}: aux4479_INTEGER :: var_is_introduced ;
var bool: aux4480_BOOL:: var_is_introduced ;
var bool: aux4481_BOOL:: var_is_introduced ;
var 1..43: aux4482:: var_is_introduced ;
var bool: aux4483_BOOL:: var_is_introduced ;
var bool: aux4484_BOOL:: var_is_introduced ;
var bool: aux4485_BOOL:: var_is_introduced ;
var {0,1}: aux4485_INTEGER :: var_is_introduced ;
var bool: aux4486_BOOL:: var_is_introduced ;
var bool: aux4487_BOOL:: var_is_introduced ;
var 3..45: aux4488:: var_is_introduced ;
var bool: aux4489_BOOL:: var_is_introduced ;
var bool: aux4490_BOOL:: var_is_introduced ;
var bool: aux4491_BOOL:: var_is_introduced ;
var {0,1}: aux4491_INTEGER :: var_is_introduced ;
var bool: aux4492_BOOL:: var_is_introduced ;
var bool: aux4493_BOOL:: var_is_introduced ;
var 2..44: aux4494:: var_is_introduced ;
var bool: aux4495_BOOL:: var_is_introduced ;
var bool: aux4496_BOOL:: var_is_introduced ;
var bool: aux4497_BOOL:: var_is_introduced ;
var {0,1}: aux4497_INTEGER :: var_is_introduced ;
var bool: aux4498_BOOL:: var_is_introduced ;
var bool: aux4499_BOOL:: var_is_introduced ;
var 3..45: aux4500:: var_is_introduced ;
var bool: aux4501_BOOL:: var_is_introduced ;
var bool: aux4502_BOOL:: var_is_introduced ;
var bool: aux4503_BOOL:: var_is_introduced ;
var {0,1}: aux4503_INTEGER :: var_is_introduced ;
var bool: aux4504_BOOL:: var_is_introduced ;
var bool: aux4505_BOOL:: var_is_introduced ;
var 1..43: aux4506:: var_is_introduced ;
var bool: aux4507_BOOL:: var_is_introduced ;
var bool: aux4508_BOOL:: var_is_introduced ;
var {0,1}: aux4508_INTEGER :: var_is_introduced ;
var bool: aux4509_BOOL:: var_is_introduced ;
var bool: aux4510_BOOL:: var_is_introduced ;
var 1..43: aux4511:: var_is_introduced ;
var bool: aux4512_BOOL:: var_is_introduced ;
var bool: aux4513_BOOL:: var_is_introduced ;
var bool: aux4514_BOOL:: var_is_introduced ;
var {0,1}: aux4514_INTEGER :: var_is_introduced ;
var bool: aux4515_BOOL:: var_is_introduced ;
var bool: aux4516_BOOL:: var_is_introduced ;
var 2..44: aux4517:: var_is_introduced ;
var bool: aux4518_BOOL:: var_is_introduced ;
var bool: aux4519_BOOL:: var_is_introduced ;
var bool: aux4520_BOOL:: var_is_introduced ;
var {0,1}: aux4520_INTEGER :: var_is_introduced ;
var bool: aux4521_BOOL:: var_is_introduced ;
var bool: aux4522_BOOL:: var_is_introduced ;
var 3..45: aux4523:: var_is_introduced ;
var bool: aux4524_BOOL:: var_is_introduced ;
var bool: aux4525_BOOL:: var_is_introduced ;
var bool: aux4526_BOOL:: var_is_introduced ;
var {0,1}: aux4526_INTEGER :: var_is_introduced ;
var bool: aux4527_BOOL:: var_is_introduced ;
var bool: aux4528_BOOL:: var_is_introduced ;
var 2..44: aux4529:: var_is_introduced ;
var bool: aux4530_BOOL:: var_is_introduced ;
var bool: aux4531_BOOL:: var_is_introduced ;
var bool: aux4532_BOOL:: var_is_introduced ;
var {0,1}: aux4532_INTEGER :: var_is_introduced ;
var bool: aux4533_BOOL:: var_is_introduced ;
var bool: aux4534_BOOL:: var_is_introduced ;
var 2..44: aux4535:: var_is_introduced ;
var bool: aux4536_BOOL:: var_is_introduced ;
var bool: aux4537_BOOL:: var_is_introduced ;
var bool: aux4538_BOOL:: var_is_introduced ;
var {0,1}: aux4538_INTEGER :: var_is_introduced ;
var bool: aux4539_BOOL:: var_is_introduced ;
var bool: aux4540_BOOL:: var_is_introduced ;
var 3..45: aux4541:: var_is_introduced ;
var bool: aux4542_BOOL:: var_is_introduced ;
var bool: aux4543_BOOL:: var_is_introduced ;
var bool: aux4544_BOOL:: var_is_introduced ;
var {0,1}: aux4544_INTEGER :: var_is_introduced ;
var bool: aux4545_BOOL:: var_is_introduced ;
var bool: aux4546_BOOL:: var_is_introduced ;
var 2..44: aux4547:: var_is_introduced ;
var bool: aux4548_BOOL:: var_is_introduced ;
var bool: aux4549_BOOL:: var_is_introduced ;
var bool: aux4550_BOOL:: var_is_introduced ;
var {0,1}: aux4550_INTEGER :: var_is_introduced ;
var bool: aux4551_BOOL:: var_is_introduced ;
var bool: aux4552_BOOL:: var_is_introduced ;
var 1..43: aux4553:: var_is_introduced ;
var bool: aux4554_BOOL:: var_is_introduced ;
var bool: aux4555_BOOL:: var_is_introduced ;
var bool: aux4556_BOOL:: var_is_introduced ;
var {0,1}: aux4556_INTEGER :: var_is_introduced ;
var bool: aux4557_BOOL:: var_is_introduced ;
var bool: aux4558_BOOL:: var_is_introduced ;
var 2..44: aux4559:: var_is_introduced ;
var bool: aux4560_BOOL:: var_is_introduced ;
var bool: aux4561_BOOL:: var_is_introduced ;
var bool: aux4562_BOOL:: var_is_introduced ;
var {0,1}: aux4562_INTEGER :: var_is_introduced ;
var bool: aux4563_BOOL:: var_is_introduced ;
var bool: aux4564_BOOL:: var_is_introduced ;
var 1..43: aux4565:: var_is_introduced ;
var bool: aux4566_BOOL:: var_is_introduced ;
var bool: aux4567_BOOL:: var_is_introduced ;
var bool: aux4568_BOOL:: var_is_introduced ;
var {0,1}: aux4568_INTEGER :: var_is_introduced ;
var bool: aux4569_BOOL:: var_is_introduced ;
var bool: aux4570_BOOL:: var_is_introduced ;
var 2..44: aux4571:: var_is_introduced ;
var bool: aux4572_BOOL:: var_is_introduced ;
var bool: aux4573_BOOL:: var_is_introduced ;
var bool: aux4574_BOOL:: var_is_introduced ;
var {0,1}: aux4574_INTEGER :: var_is_introduced ;
var bool: aux4575_BOOL:: var_is_introduced ;
var bool: aux4576_BOOL:: var_is_introduced ;
var 2..44: aux4577:: var_is_introduced ;
var bool: aux4578_BOOL:: var_is_introduced ;
var bool: aux4579_BOOL:: var_is_introduced ;
var bool: aux4580_BOOL:: var_is_introduced ;
var {0,1}: aux4580_INTEGER :: var_is_introduced ;
var bool: aux4581_BOOL:: var_is_introduced ;
var bool: aux4582_BOOL:: var_is_introduced ;
var 4..46: aux4583:: var_is_introduced ;
var bool: aux4584_BOOL:: var_is_introduced ;
var bool: aux4585_BOOL:: var_is_introduced ;
var bool: aux4586_BOOL:: var_is_introduced ;
var {0,1}: aux4586_INTEGER :: var_is_introduced ;
var bool: aux4587_BOOL:: var_is_introduced ;
var bool: aux4588_BOOL:: var_is_introduced ;
var 2..44: aux4589:: var_is_introduced ;
var bool: aux4590_BOOL:: var_is_introduced ;
var bool: aux4591_BOOL:: var_is_introduced ;
var bool: aux4592_BOOL:: var_is_introduced ;
var {0,1}: aux4592_INTEGER :: var_is_introduced ;
var bool: aux4593_BOOL:: var_is_introduced ;
var bool: aux4594_BOOL:: var_is_introduced ;
var 3..45: aux4595:: var_is_introduced ;
var bool: aux4596_BOOL:: var_is_introduced ;
var bool: aux4597_BOOL:: var_is_introduced ;
var bool: aux4598_BOOL:: var_is_introduced ;
var {0,1}: aux4598_INTEGER :: var_is_introduced ;
var bool: aux4599_BOOL:: var_is_introduced ;
var bool: aux4600_BOOL:: var_is_introduced ;
var 1..43: aux4601:: var_is_introduced ;
var bool: aux4602_BOOL:: var_is_introduced ;
var bool: aux4603_BOOL:: var_is_introduced ;
var bool: aux4604_BOOL:: var_is_introduced ;
var {0,1}: aux4604_INTEGER :: var_is_introduced ;
var bool: aux4605_BOOL:: var_is_introduced ;
var bool: aux4606_BOOL:: var_is_introduced ;
var 3..45: aux4607:: var_is_introduced ;
var bool: aux4608_BOOL:: var_is_introduced ;
var bool: aux4609_BOOL:: var_is_introduced ;
var bool: aux4610_BOOL:: var_is_introduced ;
var {0,1}: aux4610_INTEGER :: var_is_introduced ;
var bool: aux4611_BOOL:: var_is_introduced ;
var bool: aux4612_BOOL:: var_is_introduced ;
var 2..44: aux4613:: var_is_introduced ;
var bool: aux4614_BOOL:: var_is_introduced ;
var bool: aux4615_BOOL:: var_is_introduced ;
var bool: aux4616_BOOL:: var_is_introduced ;
var {0,1}: aux4616_INTEGER :: var_is_introduced ;
var bool: aux4617_BOOL:: var_is_introduced ;
var bool: aux4618_BOOL:: var_is_introduced ;
var 3..45: aux4619:: var_is_introduced ;
var bool: aux4620_BOOL:: var_is_introduced ;
var bool: aux4621_BOOL:: var_is_introduced ;
var bool: aux4622_BOOL:: var_is_introduced ;
var {0,1}: aux4622_INTEGER :: var_is_introduced ;
var bool: aux4623_BOOL:: var_is_introduced ;
var bool: aux4624_BOOL:: var_is_introduced ;
var 3..45: aux4625:: var_is_introduced ;
var bool: aux4626_BOOL:: var_is_introduced ;
var bool: aux4627_BOOL:: var_is_introduced ;
var {0,1}: aux4627_INTEGER :: var_is_introduced ;
var bool: aux4628_BOOL:: var_is_introduced ;
var bool: aux4629_BOOL:: var_is_introduced ;
var 1..43: aux4630:: var_is_introduced ;
var bool: aux4631_BOOL:: var_is_introduced ;
var bool: aux4632_BOOL:: var_is_introduced ;
var bool: aux4633_BOOL:: var_is_introduced ;
var {0,1}: aux4633_INTEGER :: var_is_introduced ;
var bool: aux4634_BOOL:: var_is_introduced ;
var bool: aux4635_BOOL:: var_is_introduced ;
var 2..44: aux4636:: var_is_introduced ;
var bool: aux4637_BOOL:: var_is_introduced ;
var bool: aux4638_BOOL:: var_is_introduced ;
var bool: aux4639_BOOL:: var_is_introduced ;
var {0,1}: aux4639_INTEGER :: var_is_introduced ;
var bool: aux4640_BOOL:: var_is_introduced ;
var bool: aux4641_BOOL:: var_is_introduced ;
var 3..45: aux4642:: var_is_introduced ;
var bool: aux4643_BOOL:: var_is_introduced ;
var bool: aux4644_BOOL:: var_is_introduced ;
var bool: aux4645_BOOL:: var_is_introduced ;
var {0,1}: aux4645_INTEGER :: var_is_introduced ;
var bool: aux4646_BOOL:: var_is_introduced ;
var bool: aux4647_BOOL:: var_is_introduced ;
var 2..44: aux4648:: var_is_introduced ;
var bool: aux4649_BOOL:: var_is_introduced ;
var bool: aux4650_BOOL:: var_is_introduced ;
var bool: aux4651_BOOL:: var_is_introduced ;
var {0,1}: aux4651_INTEGER :: var_is_introduced ;
var bool: aux4652_BOOL:: var_is_introduced ;
var bool: aux4653_BOOL:: var_is_introduced ;
var 2..44: aux4654:: var_is_introduced ;
var bool: aux4655_BOOL:: var_is_introduced ;
var bool: aux4656_BOOL:: var_is_introduced ;
var bool: aux4657_BOOL:: var_is_introduced ;
var {0,1}: aux4657_INTEGER :: var_is_introduced ;
var bool: aux4658_BOOL:: var_is_introduced ;
var bool: aux4659_BOOL:: var_is_introduced ;
var 3..45: aux4660:: var_is_introduced ;
var bool: aux4661_BOOL:: var_is_introduced ;
var bool: aux4662_BOOL:: var_is_introduced ;
var bool: aux4663_BOOL:: var_is_introduced ;
var {0,1}: aux4663_INTEGER :: var_is_introduced ;
var bool: aux4664_BOOL:: var_is_introduced ;
var bool: aux4665_BOOL:: var_is_introduced ;
var 2..44: aux4666:: var_is_introduced ;
var bool: aux4667_BOOL:: var_is_introduced ;
var bool: aux4668_BOOL:: var_is_introduced ;
var bool: aux4669_BOOL:: var_is_introduced ;
var {0,1}: aux4669_INTEGER :: var_is_introduced ;
var bool: aux4670_BOOL:: var_is_introduced ;
var bool: aux4671_BOOL:: var_is_introduced ;
var 1..43: aux4672:: var_is_introduced ;
var bool: aux4673_BOOL:: var_is_introduced ;
var bool: aux4674_BOOL:: var_is_introduced ;
var bool: aux4675_BOOL:: var_is_introduced ;
var {0,1}: aux4675_INTEGER :: var_is_introduced ;
var bool: aux4676_BOOL:: var_is_introduced ;
var bool: aux4677_BOOL:: var_is_introduced ;
var 2..44: aux4678:: var_is_introduced ;
var bool: aux4679_BOOL:: var_is_introduced ;
var bool: aux4680_BOOL:: var_is_introduced ;
var bool: aux4681_BOOL:: var_is_introduced ;
var {0,1}: aux4681_INTEGER :: var_is_introduced ;
var bool: aux4682_BOOL:: var_is_introduced ;
var bool: aux4683_BOOL:: var_is_introduced ;
var 1..43: aux4684:: var_is_introduced ;
var bool: aux4685_BOOL:: var_is_introduced ;
var bool: aux4686_BOOL:: var_is_introduced ;
var bool: aux4687_BOOL:: var_is_introduced ;
var {0,1}: aux4687_INTEGER :: var_is_introduced ;
var bool: aux4688_BOOL:: var_is_introduced ;
var bool: aux4689_BOOL:: var_is_introduced ;
var 2..44: aux4690:: var_is_introduced ;
var bool: aux4691_BOOL:: var_is_introduced ;
var bool: aux4692_BOOL:: var_is_introduced ;
var bool: aux4693_BOOL:: var_is_introduced ;
var {0,1}: aux4693_INTEGER :: var_is_introduced ;
var bool: aux4694_BOOL:: var_is_introduced ;
var bool: aux4695_BOOL:: var_is_introduced ;
var 2..44: aux4696:: var_is_introduced ;
var bool: aux4697_BOOL:: var_is_introduced ;
var bool: aux4698_BOOL:: var_is_introduced ;
var bool: aux4699_BOOL:: var_is_introduced ;
var {0,1}: aux4699_INTEGER :: var_is_introduced ;
var bool: aux4700_BOOL:: var_is_introduced ;
var bool: aux4701_BOOL:: var_is_introduced ;
var 1..43: aux4702:: var_is_introduced ;
var bool: aux4703_BOOL:: var_is_introduced ;
var bool: aux4704_BOOL:: var_is_introduced ;
var bool: aux4705_BOOL:: var_is_introduced ;
var {0,1}: aux4705_INTEGER :: var_is_introduced ;
var bool: aux4706_BOOL:: var_is_introduced ;
var bool: aux4707_BOOL:: var_is_introduced ;
var 4..46: aux4708:: var_is_introduced ;
var bool: aux4709_BOOL:: var_is_introduced ;
var bool: aux4710_BOOL:: var_is_introduced ;
var bool: aux4711_BOOL:: var_is_introduced ;
var {0,1}: aux4711_INTEGER :: var_is_introduced ;
var bool: aux4712_BOOL:: var_is_introduced ;
var bool: aux4713_BOOL:: var_is_introduced ;
var 2..44: aux4714:: var_is_introduced ;
var bool: aux4715_BOOL:: var_is_introduced ;
var bool: aux4716_BOOL:: var_is_introduced ;
var bool: aux4717_BOOL:: var_is_introduced ;
var {0,1}: aux4717_INTEGER :: var_is_introduced ;
var bool: aux4718_BOOL:: var_is_introduced ;
var bool: aux4719_BOOL:: var_is_introduced ;
var 1..43: aux4720:: var_is_introduced ;
var bool: aux4721_BOOL:: var_is_introduced ;
var bool: aux4722_BOOL:: var_is_introduced ;
var bool: aux4723_BOOL:: var_is_introduced ;
var {0,1}: aux4723_INTEGER :: var_is_introduced ;
var bool: aux4724_BOOL:: var_is_introduced ;
var bool: aux4725_BOOL:: var_is_introduced ;
var 3..45: aux4726:: var_is_introduced ;
var bool: aux4727_BOOL:: var_is_introduced ;
var bool: aux4728_BOOL:: var_is_introduced ;
var bool: aux4729_BOOL:: var_is_introduced ;
var {0,1}: aux4729_INTEGER :: var_is_introduced ;
var bool: aux4730_BOOL:: var_is_introduced ;
var bool: aux4731_BOOL:: var_is_introduced ;
var 2..44: aux4732:: var_is_introduced ;
var bool: aux4733_BOOL:: var_is_introduced ;
var bool: aux4734_BOOL:: var_is_introduced ;
var bool: aux4735_BOOL:: var_is_introduced ;
var {0,1}: aux4735_INTEGER :: var_is_introduced ;
var bool: aux4736_BOOL:: var_is_introduced ;
var bool: aux4737_BOOL:: var_is_introduced ;
var 3..45: aux4738:: var_is_introduced ;
var bool: aux4739_BOOL:: var_is_introduced ;
var bool: aux4740_BOOL:: var_is_introduced ;
var bool: aux4741_BOOL:: var_is_introduced ;
var {0,1}: aux4741_INTEGER :: var_is_introduced ;
var bool: aux4742_BOOL:: var_is_introduced ;
var bool: aux4743_BOOL:: var_is_introduced ;
var 2..44: aux4744:: var_is_introduced ;
var bool: aux4745_BOOL:: var_is_introduced ;
var bool: aux4746_BOOL:: var_is_introduced ;
var {0,1}: aux4746_INTEGER :: var_is_introduced ;
var bool: aux4747_BOOL:: var_is_introduced ;
var bool: aux4748_BOOL:: var_is_introduced ;
var 1..43: aux4749:: var_is_introduced ;
var bool: aux4750_BOOL:: var_is_introduced ;
var bool: aux4751_BOOL:: var_is_introduced ;
var bool: aux4752_BOOL:: var_is_introduced ;
var {0,1}: aux4752_INTEGER :: var_is_introduced ;
var bool: aux4753_BOOL:: var_is_introduced ;
var bool: aux4754_BOOL:: var_is_introduced ;
var 2..44: aux4755:: var_is_introduced ;
var bool: aux4756_BOOL:: var_is_introduced ;
var bool: aux4757_BOOL:: var_is_introduced ;
var bool: aux4758_BOOL:: var_is_introduced ;
var {0,1}: aux4758_INTEGER :: var_is_introduced ;
var bool: aux4759_BOOL:: var_is_introduced ;
var bool: aux4760_BOOL:: var_is_introduced ;
var 3..45: aux4761:: var_is_introduced ;
var bool: aux4762_BOOL:: var_is_introduced ;
var bool: aux4763_BOOL:: var_is_introduced ;
var bool: aux4764_BOOL:: var_is_introduced ;
var {0,1}: aux4764_INTEGER :: var_is_introduced ;
var bool: aux4765_BOOL:: var_is_introduced ;
var bool: aux4766_BOOL:: var_is_introduced ;
var 2..44: aux4767:: var_is_introduced ;
var bool: aux4768_BOOL:: var_is_introduced ;
var bool: aux4769_BOOL:: var_is_introduced ;
var bool: aux4770_BOOL:: var_is_introduced ;
var {0,1}: aux4770_INTEGER :: var_is_introduced ;
var bool: aux4771_BOOL:: var_is_introduced ;
var bool: aux4772_BOOL:: var_is_introduced ;
var 2..44: aux4773:: var_is_introduced ;
var bool: aux4774_BOOL:: var_is_introduced ;
var bool: aux4775_BOOL:: var_is_introduced ;
var bool: aux4776_BOOL:: var_is_introduced ;
var {0,1}: aux4776_INTEGER :: var_is_introduced ;
var bool: aux4777_BOOL:: var_is_introduced ;
var bool: aux4778_BOOL:: var_is_introduced ;
var 3..45: aux4779:: var_is_introduced ;
var bool: aux4780_BOOL:: var_is_introduced ;
var bool: aux4781_BOOL:: var_is_introduced ;
var bool: aux4782_BOOL:: var_is_introduced ;
var {0,1}: aux4782_INTEGER :: var_is_introduced ;
var bool: aux4783_BOOL:: var_is_introduced ;
var bool: aux4784_BOOL:: var_is_introduced ;
var 2..44: aux4785:: var_is_introduced ;
var bool: aux4786_BOOL:: var_is_introduced ;
var bool: aux4787_BOOL:: var_is_introduced ;
var bool: aux4788_BOOL:: var_is_introduced ;
var {0,1}: aux4788_INTEGER :: var_is_introduced ;
var bool: aux4789_BOOL:: var_is_introduced ;
var bool: aux4790_BOOL:: var_is_introduced ;
var 1..43: aux4791:: var_is_introduced ;
var bool: aux4792_BOOL:: var_is_introduced ;
var bool: aux4793_BOOL:: var_is_introduced ;
var bool: aux4794_BOOL:: var_is_introduced ;
var {0,1}: aux4794_INTEGER :: var_is_introduced ;
var bool: aux4795_BOOL:: var_is_introduced ;
var bool: aux4796_BOOL:: var_is_introduced ;
var 1..43: aux4797:: var_is_introduced ;
var bool: aux4798_BOOL:: var_is_introduced ;
var bool: aux4799_BOOL:: var_is_introduced ;
var bool: aux4800_BOOL:: var_is_introduced ;
var {0,1}: aux4800_INTEGER :: var_is_introduced ;
var bool: aux4801_BOOL:: var_is_introduced ;
var bool: aux4802_BOOL:: var_is_introduced ;
var 2..44: aux4803:: var_is_introduced ;
var bool: aux4804_BOOL:: var_is_introduced ;
var bool: aux4805_BOOL:: var_is_introduced ;
var bool: aux4806_BOOL:: var_is_introduced ;
var {0,1}: aux4806_INTEGER :: var_is_introduced ;
var bool: aux4807_BOOL:: var_is_introduced ;
var bool: aux4808_BOOL:: var_is_introduced ;
var 2..44: aux4809:: var_is_introduced ;
var bool: aux4810_BOOL:: var_is_introduced ;
var bool: aux4811_BOOL:: var_is_introduced ;
var bool: aux4812_BOOL:: var_is_introduced ;
var {0,1}: aux4812_INTEGER :: var_is_introduced ;
var bool: aux4813_BOOL:: var_is_introduced ;
var bool: aux4814_BOOL:: var_is_introduced ;
var 1..43: aux4815:: var_is_introduced ;
var bool: aux4816_BOOL:: var_is_introduced ;
var bool: aux4817_BOOL:: var_is_introduced ;
var bool: aux4818_BOOL:: var_is_introduced ;
var {0,1}: aux4818_INTEGER :: var_is_introduced ;
var bool: aux4819_BOOL:: var_is_introduced ;
var bool: aux4820_BOOL:: var_is_introduced ;
var 4..46: aux4821:: var_is_introduced ;
var bool: aux4822_BOOL:: var_is_introduced ;
var bool: aux4823_BOOL:: var_is_introduced ;
var bool: aux4824_BOOL:: var_is_introduced ;
var {0,1}: aux4824_INTEGER :: var_is_introduced ;
var bool: aux4825_BOOL:: var_is_introduced ;
var bool: aux4826_BOOL:: var_is_introduced ;
var 2..44: aux4827:: var_is_introduced ;
var bool: aux4828_BOOL:: var_is_introduced ;
var bool: aux4829_BOOL:: var_is_introduced ;
var bool: aux4830_BOOL:: var_is_introduced ;
var {0,1}: aux4830_INTEGER :: var_is_introduced ;
var bool: aux4831_BOOL:: var_is_introduced ;
var bool: aux4832_BOOL:: var_is_introduced ;
var 3..45: aux4833:: var_is_introduced ;
var bool: aux4834_BOOL:: var_is_introduced ;
var bool: aux4835_BOOL:: var_is_introduced ;
var bool: aux4836_BOOL:: var_is_introduced ;
var {0,1}: aux4836_INTEGER :: var_is_introduced ;
var bool: aux4837_BOOL:: var_is_introduced ;
var bool: aux4838_BOOL:: var_is_introduced ;
var 1..43: aux4839:: var_is_introduced ;
var bool: aux4840_BOOL:: var_is_introduced ;
var bool: aux4841_BOOL:: var_is_introduced ;
var bool: aux4842_BOOL:: var_is_introduced ;
var {0,1}: aux4842_INTEGER :: var_is_introduced ;
var bool: aux4843_BOOL:: var_is_introduced ;
var bool: aux4844_BOOL:: var_is_introduced ;
var 3..45: aux4845:: var_is_introduced ;
var bool: aux4846_BOOL:: var_is_introduced ;
var bool: aux4847_BOOL:: var_is_introduced ;
var bool: aux4848_BOOL:: var_is_introduced ;
var {0,1}: aux4848_INTEGER :: var_is_introduced ;
var bool: aux4849_BOOL:: var_is_introduced ;
var bool: aux4850_BOOL:: var_is_introduced ;
var 2..44: aux4851:: var_is_introduced ;
var bool: aux4852_BOOL:: var_is_introduced ;
var bool: aux4853_BOOL:: var_is_introduced ;
var bool: aux4854_BOOL:: var_is_introduced ;
var {0,1}: aux4854_INTEGER :: var_is_introduced ;
var bool: aux4855_BOOL:: var_is_introduced ;
var bool: aux4856_BOOL:: var_is_introduced ;
var 3..45: aux4857:: var_is_introduced ;
var bool: aux4858_BOOL:: var_is_introduced ;
var bool: aux4859_BOOL:: var_is_introduced ;
var bool: aux4860_BOOL:: var_is_introduced ;
var {0,1}: aux4860_INTEGER :: var_is_introduced ;
var bool: aux4861_BOOL:: var_is_introduced ;
var bool: aux4862_BOOL:: var_is_introduced ;
var 3..45: aux4863:: var_is_introduced ;
var bool: aux4864_BOOL:: var_is_introduced ;
var bool: aux4865_BOOL:: var_is_introduced ;
var {0,1}: aux4865_INTEGER :: var_is_introduced ;
var bool: aux4866_BOOL:: var_is_introduced ;
var bool: aux4867_BOOL:: var_is_introduced ;
var 1..43: aux4868:: var_is_introduced ;
var bool: aux4869_BOOL:: var_is_introduced ;
var bool: aux4870_BOOL:: var_is_introduced ;
var bool: aux4871_BOOL:: var_is_introduced ;
var {0,1}: aux4871_INTEGER :: var_is_introduced ;
var bool: aux4872_BOOL:: var_is_introduced ;
var bool: aux4873_BOOL:: var_is_introduced ;
var 2..44: aux4874:: var_is_introduced ;
var bool: aux4875_BOOL:: var_is_introduced ;
var bool: aux4876_BOOL:: var_is_introduced ;
var bool: aux4877_BOOL:: var_is_introduced ;
var {0,1}: aux4877_INTEGER :: var_is_introduced ;
var bool: aux4878_BOOL:: var_is_introduced ;
var bool: aux4879_BOOL:: var_is_introduced ;
var 3..45: aux4880:: var_is_introduced ;
var bool: aux4881_BOOL:: var_is_introduced ;
var bool: aux4882_BOOL:: var_is_introduced ;
var bool: aux4883_BOOL:: var_is_introduced ;
var {0,1}: aux4883_INTEGER :: var_is_introduced ;
var bool: aux4884_BOOL:: var_is_introduced ;
var bool: aux4885_BOOL:: var_is_introduced ;
var 2..44: aux4886:: var_is_introduced ;
var bool: aux4887_BOOL:: var_is_introduced ;
var bool: aux4888_BOOL:: var_is_introduced ;
var bool: aux4889_BOOL:: var_is_introduced ;
var {0,1}: aux4889_INTEGER :: var_is_introduced ;
var bool: aux4890_BOOL:: var_is_introduced ;
var bool: aux4891_BOOL:: var_is_introduced ;
var 2..44: aux4892:: var_is_introduced ;
var bool: aux4893_BOOL:: var_is_introduced ;
var bool: aux4894_BOOL:: var_is_introduced ;
var bool: aux4895_BOOL:: var_is_introduced ;
var {0,1}: aux4895_INTEGER :: var_is_introduced ;
var bool: aux4896_BOOL:: var_is_introduced ;
var bool: aux4897_BOOL:: var_is_introduced ;
var 3..45: aux4898:: var_is_introduced ;
var bool: aux4899_BOOL:: var_is_introduced ;
var bool: aux4900_BOOL:: var_is_introduced ;
var bool: aux4901_BOOL:: var_is_introduced ;
var {0,1}: aux4901_INTEGER :: var_is_introduced ;
var bool: aux4902_BOOL:: var_is_introduced ;
var bool: aux4903_BOOL:: var_is_introduced ;
var 2..44: aux4904:: var_is_introduced ;
var bool: aux4905_BOOL:: var_is_introduced ;
var bool: aux4906_BOOL:: var_is_introduced ;
var bool: aux4907_BOOL:: var_is_introduced ;
var {0,1}: aux4907_INTEGER :: var_is_introduced ;
var bool: aux4908_BOOL:: var_is_introduced ;
var bool: aux4909_BOOL:: var_is_introduced ;
var 1..43: aux4910:: var_is_introduced ;
var bool: aux4911_BOOL:: var_is_introduced ;
var bool: aux4912_BOOL:: var_is_introduced ;
var bool: aux4913_BOOL:: var_is_introduced ;
var {0,1}: aux4913_INTEGER :: var_is_introduced ;
var bool: aux4914_BOOL:: var_is_introduced ;
var bool: aux4915_BOOL:: var_is_introduced ;
var 2..44: aux4916:: var_is_introduced ;
var bool: aux4917_BOOL:: var_is_introduced ;
var bool: aux4918_BOOL:: var_is_introduced ;
var bool: aux4919_BOOL:: var_is_introduced ;
var {0,1}: aux4919_INTEGER :: var_is_introduced ;
var bool: aux4920_BOOL:: var_is_introduced ;
var bool: aux4921_BOOL:: var_is_introduced ;
var 1..43: aux4922:: var_is_introduced ;
var bool: aux4923_BOOL:: var_is_introduced ;
var bool: aux4924_BOOL:: var_is_introduced ;
var bool: aux4925_BOOL:: var_is_introduced ;
var {0,1}: aux4925_INTEGER :: var_is_introduced ;
var bool: aux4926_BOOL:: var_is_introduced ;
var bool: aux4927_BOOL:: var_is_introduced ;
var 2..44: aux4928:: var_is_introduced ;
var bool: aux4929_BOOL:: var_is_introduced ;
var bool: aux4930_BOOL:: var_is_introduced ;
var bool: aux4931_BOOL:: var_is_introduced ;
var {0,1}: aux4931_INTEGER :: var_is_introduced ;
var bool: aux4932_BOOL:: var_is_introduced ;
var bool: aux4933_BOOL:: var_is_introduced ;
var 2..44: aux4934:: var_is_introduced ;
var bool: aux4935_BOOL:: var_is_introduced ;
var bool: aux4936_BOOL:: var_is_introduced ;
var bool: aux4937_BOOL:: var_is_introduced ;
var {0,1}: aux4937_INTEGER :: var_is_introduced ;
var bool: aux4938_BOOL:: var_is_introduced ;
var bool: aux4939_BOOL:: var_is_introduced ;
var 1..43: aux4940:: var_is_introduced ;
var bool: aux4941_BOOL:: var_is_introduced ;
var bool: aux4942_BOOL:: var_is_introduced ;
var bool: aux4943_BOOL:: var_is_introduced ;
var {0,1}: aux4943_INTEGER :: var_is_introduced ;
var bool: aux4944_BOOL:: var_is_introduced ;
var bool: aux4945_BOOL:: var_is_introduced ;
var 4..46: aux4946:: var_is_introduced ;
var bool: aux4947_BOOL:: var_is_introduced ;
var bool: aux4948_BOOL:: var_is_introduced ;
var bool: aux4949_BOOL:: var_is_introduced ;
var {0,1}: aux4949_INTEGER :: var_is_introduced ;
var bool: aux4950_BOOL:: var_is_introduced ;
var bool: aux4951_BOOL:: var_is_introduced ;
var 2..44: aux4952:: var_is_introduced ;
var bool: aux4953_BOOL:: var_is_introduced ;
var bool: aux4954_BOOL:: var_is_introduced ;
var bool: aux4955_BOOL:: var_is_introduced ;
var {0,1}: aux4955_INTEGER :: var_is_introduced ;
var bool: aux4956_BOOL:: var_is_introduced ;
var bool: aux4957_BOOL:: var_is_introduced ;
var 3..45: aux4958:: var_is_introduced ;
var bool: aux4959_BOOL:: var_is_introduced ;
var bool: aux4960_BOOL:: var_is_introduced ;
var bool: aux4961_BOOL:: var_is_introduced ;
var {0,1}: aux4961_INTEGER :: var_is_introduced ;
var bool: aux4962_BOOL:: var_is_introduced ;
var bool: aux4963_BOOL:: var_is_introduced ;
var 1..43: aux4964:: var_is_introduced ;
var bool: aux4965_BOOL:: var_is_introduced ;
var bool: aux4966_BOOL:: var_is_introduced ;
var bool: aux4967_BOOL:: var_is_introduced ;
var {0,1}: aux4967_INTEGER :: var_is_introduced ;
var bool: aux4968_BOOL:: var_is_introduced ;
var bool: aux4969_BOOL:: var_is_introduced ;
var 2..44: aux4970:: var_is_introduced ;
var bool: aux4971_BOOL:: var_is_introduced ;
var bool: aux4972_BOOL:: var_is_introduced ;
var bool: aux4973_BOOL:: var_is_introduced ;
var {0,1}: aux4973_INTEGER :: var_is_introduced ;
var bool: aux4974_BOOL:: var_is_introduced ;
var bool: aux4975_BOOL:: var_is_introduced ;
var 3..45: aux4976:: var_is_introduced ;
var bool: aux4977_BOOL:: var_is_introduced ;
var bool: aux4978_BOOL:: var_is_introduced ;
var bool: aux4979_BOOL:: var_is_introduced ;
var {0,1}: aux4979_INTEGER :: var_is_introduced ;
var bool: aux4980_BOOL:: var_is_introduced ;
var bool: aux4981_BOOL:: var_is_introduced ;
var 1..43: aux4982:: var_is_introduced ;
var bool: aux4983_BOOL:: var_is_introduced ;
var bool: aux4984_BOOL:: var_is_introduced ;
var {0,1}: aux4984_INTEGER :: var_is_introduced ;
var bool: aux4985_BOOL:: var_is_introduced ;
var bool: aux4986_BOOL:: var_is_introduced ;
var 1..43: aux4987:: var_is_introduced ;
var bool: aux4988_BOOL:: var_is_introduced ;
var bool: aux4989_BOOL:: var_is_introduced ;
var bool: aux4990_BOOL:: var_is_introduced ;
var {0,1}: aux4990_INTEGER :: var_is_introduced ;
var bool: aux4991_BOOL:: var_is_introduced ;
var bool: aux4992_BOOL:: var_is_introduced ;
var 2..44: aux4993:: var_is_introduced ;
var bool: aux4994_BOOL:: var_is_introduced ;
var bool: aux4995_BOOL:: var_is_introduced ;
var bool: aux4996_BOOL:: var_is_introduced ;
var {0,1}: aux4996_INTEGER :: var_is_introduced ;
var bool: aux4997_BOOL:: var_is_introduced ;
var bool: aux4998_BOOL:: var_is_introduced ;
var 3..45: aux4999:: var_is_introduced ;
var bool: aux5000_BOOL:: var_is_introduced ;
var bool: aux5001_BOOL:: var_is_introduced ;
var bool: aux5002_BOOL:: var_is_introduced ;
var {0,1}: aux5002_INTEGER :: var_is_introduced ;
var bool: aux5003_BOOL:: var_is_introduced ;
var bool: aux5004_BOOL:: var_is_introduced ;
var 2..44: aux5005:: var_is_introduced ;
var bool: aux5006_BOOL:: var_is_introduced ;
var bool: aux5007_BOOL:: var_is_introduced ;
var bool: aux5008_BOOL:: var_is_introduced ;
var {0,1}: aux5008_INTEGER :: var_is_introduced ;
var bool: aux5009_BOOL:: var_is_introduced ;
var bool: aux5010_BOOL:: var_is_introduced ;
var 2..44: aux5011:: var_is_introduced ;
var bool: aux5012_BOOL:: var_is_introduced ;
var bool: aux5013_BOOL:: var_is_introduced ;
var bool: aux5014_BOOL:: var_is_introduced ;
var {0,1}: aux5014_INTEGER :: var_is_introduced ;
var bool: aux5015_BOOL:: var_is_introduced ;
var bool: aux5016_BOOL:: var_is_introduced ;
var 3..45: aux5017:: var_is_introduced ;
var bool: aux5018_BOOL:: var_is_introduced ;
var bool: aux5019_BOOL:: var_is_introduced ;
var bool: aux5020_BOOL:: var_is_introduced ;
var {0,1}: aux5020_INTEGER :: var_is_introduced ;
var bool: aux5021_BOOL:: var_is_introduced ;
var bool: aux5022_BOOL:: var_is_introduced ;
var 2..44: aux5023:: var_is_introduced ;
var bool: aux5024_BOOL:: var_is_introduced ;
var bool: aux5025_BOOL:: var_is_introduced ;
var bool: aux5026_BOOL:: var_is_introduced ;
var {0,1}: aux5026_INTEGER :: var_is_introduced ;
var bool: aux5027_BOOL:: var_is_introduced ;
var bool: aux5028_BOOL:: var_is_introduced ;
var 1..43: aux5029:: var_is_introduced ;
var bool: aux5030_BOOL:: var_is_introduced ;
var bool: aux5031_BOOL:: var_is_introduced ;
var bool: aux5032_BOOL:: var_is_introduced ;
var {0,1}: aux5032_INTEGER :: var_is_introduced ;
var bool: aux5033_BOOL:: var_is_introduced ;
var bool: aux5034_BOOL:: var_is_introduced ;
var 2..44: aux5035:: var_is_introduced ;
var bool: aux5036_BOOL:: var_is_introduced ;
var bool: aux5037_BOOL:: var_is_introduced ;
var bool: aux5038_BOOL:: var_is_introduced ;
var {0,1}: aux5038_INTEGER :: var_is_introduced ;
var bool: aux5039_BOOL:: var_is_introduced ;
var bool: aux5040_BOOL:: var_is_introduced ;
var 1..43: aux5041:: var_is_introduced ;
var bool: aux5042_BOOL:: var_is_introduced ;
var bool: aux5043_BOOL:: var_is_introduced ;
var bool: aux5044_BOOL:: var_is_introduced ;
var {0,1}: aux5044_INTEGER :: var_is_introduced ;
var bool: aux5045_BOOL:: var_is_introduced ;
var bool: aux5046_BOOL:: var_is_introduced ;
var 2..44: aux5047:: var_is_introduced ;
var bool: aux5048_BOOL:: var_is_introduced ;
var bool: aux5049_BOOL:: var_is_introduced ;
var bool: aux5050_BOOL:: var_is_introduced ;
var {0,1}: aux5050_INTEGER :: var_is_introduced ;
var bool: aux5051_BOOL:: var_is_introduced ;
var bool: aux5052_BOOL:: var_is_introduced ;
var 2..44: aux5053:: var_is_introduced ;
var bool: aux5054_BOOL:: var_is_introduced ;
var bool: aux5055_BOOL:: var_is_introduced ;
var bool: aux5056_BOOL:: var_is_introduced ;
var {0,1}: aux5056_INTEGER :: var_is_introduced ;
var bool: aux5057_BOOL:: var_is_introduced ;
var bool: aux5058_BOOL:: var_is_introduced ;
var 1..43: aux5059:: var_is_introduced ;
var bool: aux5060_BOOL:: var_is_introduced ;
var bool: aux5061_BOOL:: var_is_introduced ;
var bool: aux5062_BOOL:: var_is_introduced ;
var {0,1}: aux5062_INTEGER :: var_is_introduced ;
var bool: aux5063_BOOL:: var_is_introduced ;
var bool: aux5064_BOOL:: var_is_introduced ;
var 4..46: aux5065:: var_is_introduced ;
var bool: aux5066_BOOL:: var_is_introduced ;
var bool: aux5067_BOOL:: var_is_introduced ;
var bool: aux5068_BOOL:: var_is_introduced ;
var {0,1}: aux5068_INTEGER :: var_is_introduced ;
var bool: aux5069_BOOL:: var_is_introduced ;
var bool: aux5070_BOOL:: var_is_introduced ;
var 2..44: aux5071:: var_is_introduced ;
var bool: aux5072_BOOL:: var_is_introduced ;
var bool: aux5073_BOOL:: var_is_introduced ;
var bool: aux5074_BOOL:: var_is_introduced ;
var {0,1}: aux5074_INTEGER :: var_is_introduced ;
var bool: aux5075_BOOL:: var_is_introduced ;
var bool: aux5076_BOOL:: var_is_introduced ;
var 3..45: aux5077:: var_is_introduced ;
var bool: aux5078_BOOL:: var_is_introduced ;
var bool: aux5079_BOOL:: var_is_introduced ;
var bool: aux5080_BOOL:: var_is_introduced ;
var {0,1}: aux5080_INTEGER :: var_is_introduced ;
var bool: aux5081_BOOL:: var_is_introduced ;
var bool: aux5082_BOOL:: var_is_introduced ;
var 3..45: aux5083:: var_is_introduced ;
var bool: aux5084_BOOL:: var_is_introduced ;
var bool: aux5085_BOOL:: var_is_introduced ;
var bool: aux5086_BOOL:: var_is_introduced ;
var {0,1}: aux5086_INTEGER :: var_is_introduced ;
var bool: aux5087_BOOL:: var_is_introduced ;
var bool: aux5088_BOOL:: var_is_introduced ;
var 2..44: aux5089:: var_is_introduced ;
var bool: aux5090_BOOL:: var_is_introduced ;
var bool: aux5091_BOOL:: var_is_introduced ;
var bool: aux5092_BOOL:: var_is_introduced ;
var {0,1}: aux5092_INTEGER :: var_is_introduced ;
var bool: aux5093_BOOL:: var_is_introduced ;
var bool: aux5094_BOOL:: var_is_introduced ;
var 3..45: aux5095:: var_is_introduced ;
var bool: aux5096_BOOL:: var_is_introduced ;
var bool: aux5097_BOOL:: var_is_introduced ;
var bool: aux5098_BOOL:: var_is_introduced ;
var {0,1}: aux5098_INTEGER :: var_is_introduced ;
var bool: aux5099_BOOL:: var_is_introduced ;
var bool: aux5100_BOOL:: var_is_introduced ;
var 2..44: aux5101:: var_is_introduced ;
var bool: aux5102_BOOL:: var_is_introduced ;
var bool: aux5103_BOOL:: var_is_introduced ;
var {0,1}: aux5103_INTEGER :: var_is_introduced ;
var bool: aux5104_BOOL:: var_is_introduced ;
var bool: aux5105_BOOL:: var_is_introduced ;
var 1..43: aux5106:: var_is_introduced ;
var bool: aux5107_BOOL:: var_is_introduced ;
var bool: aux5108_BOOL:: var_is_introduced ;
var bool: aux5109_BOOL:: var_is_introduced ;
var {0,1}: aux5109_INTEGER :: var_is_introduced ;
var bool: aux5110_BOOL:: var_is_introduced ;
var bool: aux5111_BOOL:: var_is_introduced ;
var 2..44: aux5112:: var_is_introduced ;
var bool: aux5113_BOOL:: var_is_introduced ;
var bool: aux5114_BOOL:: var_is_introduced ;
var bool: aux5115_BOOL:: var_is_introduced ;
var {0,1}: aux5115_INTEGER :: var_is_introduced ;
var bool: aux5116_BOOL:: var_is_introduced ;
var bool: aux5117_BOOL:: var_is_introduced ;
var 3..45: aux5118:: var_is_introduced ;
var bool: aux5119_BOOL:: var_is_introduced ;
var bool: aux5120_BOOL:: var_is_introduced ;
var bool: aux5121_BOOL:: var_is_introduced ;
var {0,1}: aux5121_INTEGER :: var_is_introduced ;
var bool: aux5122_BOOL:: var_is_introduced ;
var bool: aux5123_BOOL:: var_is_introduced ;
var 2..44: aux5124:: var_is_introduced ;
var bool: aux5125_BOOL:: var_is_introduced ;
var bool: aux5126_BOOL:: var_is_introduced ;
var bool: aux5127_BOOL:: var_is_introduced ;
var {0,1}: aux5127_INTEGER :: var_is_introduced ;
var bool: aux5128_BOOL:: var_is_introduced ;
var bool: aux5129_BOOL:: var_is_introduced ;
var 2..44: aux5130:: var_is_introduced ;
var bool: aux5131_BOOL:: var_is_introduced ;
var bool: aux5132_BOOL:: var_is_introduced ;
var bool: aux5133_BOOL:: var_is_introduced ;
var {0,1}: aux5133_INTEGER :: var_is_introduced ;
var bool: aux5134_BOOL:: var_is_introduced ;
var bool: aux5135_BOOL:: var_is_introduced ;
var 3..45: aux5136:: var_is_introduced ;
var bool: aux5137_BOOL:: var_is_introduced ;
var bool: aux5138_BOOL:: var_is_introduced ;
var bool: aux5139_BOOL:: var_is_introduced ;
var {0,1}: aux5139_INTEGER :: var_is_introduced ;
var bool: aux5140_BOOL:: var_is_introduced ;
var bool: aux5141_BOOL:: var_is_introduced ;
var 2..44: aux5142:: var_is_introduced ;
var bool: aux5143_BOOL:: var_is_introduced ;
var bool: aux5144_BOOL:: var_is_introduced ;
var bool: aux5145_BOOL:: var_is_introduced ;
var {0,1}: aux5145_INTEGER :: var_is_introduced ;
var bool: aux5146_BOOL:: var_is_introduced ;
var bool: aux5147_BOOL:: var_is_introduced ;
var 1..43: aux5148:: var_is_introduced ;
var bool: aux5149_BOOL:: var_is_introduced ;
var bool: aux5150_BOOL:: var_is_introduced ;
var bool: aux5151_BOOL:: var_is_introduced ;
var {0,1}: aux5151_INTEGER :: var_is_introduced ;
var bool: aux5152_BOOL:: var_is_introduced ;
var bool: aux5153_BOOL:: var_is_introduced ;
var 2..44: aux5154:: var_is_introduced ;
var bool: aux5155_BOOL:: var_is_introduced ;
var bool: aux5156_BOOL:: var_is_introduced ;
var bool: aux5157_BOOL:: var_is_introduced ;
var {0,1}: aux5157_INTEGER :: var_is_introduced ;
var bool: aux5158_BOOL:: var_is_introduced ;
var bool: aux5159_BOOL:: var_is_introduced ;
var 1..43: aux5160:: var_is_introduced ;
var bool: aux5161_BOOL:: var_is_introduced ;
var bool: aux5162_BOOL:: var_is_introduced ;
var bool: aux5163_BOOL:: var_is_introduced ;
var {0,1}: aux5163_INTEGER :: var_is_introduced ;
var bool: aux5164_BOOL:: var_is_introduced ;
var bool: aux5165_BOOL:: var_is_introduced ;
var 2..44: aux5166:: var_is_introduced ;
var bool: aux5167_BOOL:: var_is_introduced ;
var bool: aux5168_BOOL:: var_is_introduced ;
var bool: aux5169_BOOL:: var_is_introduced ;
var {0,1}: aux5169_INTEGER :: var_is_introduced ;
var bool: aux5170_BOOL:: var_is_introduced ;
var bool: aux5171_BOOL:: var_is_introduced ;
var 1..43: aux5172:: var_is_introduced ;
var bool: aux5173_BOOL:: var_is_introduced ;
var bool: aux5174_BOOL:: var_is_introduced ;
var bool: aux5175_BOOL:: var_is_introduced ;
var {0,1}: aux5175_INTEGER :: var_is_introduced ;
var bool: aux5176_BOOL:: var_is_introduced ;
var bool: aux5177_BOOL:: var_is_introduced ;
var 4..46: aux5178:: var_is_introduced ;
var bool: aux5179_BOOL:: var_is_introduced ;
var bool: aux5180_BOOL:: var_is_introduced ;
var bool: aux5181_BOOL:: var_is_introduced ;
var {0,1}: aux5181_INTEGER :: var_is_introduced ;
var bool: aux5182_BOOL:: var_is_introduced ;
var bool: aux5183_BOOL:: var_is_introduced ;
var 2..44: aux5184:: var_is_introduced ;
var bool: aux5185_BOOL:: var_is_introduced ;
var bool: aux5186_BOOL:: var_is_introduced ;
var bool: aux5187_BOOL:: var_is_introduced ;
var {0,1}: aux5187_INTEGER :: var_is_introduced ;
var bool: aux5188_BOOL:: var_is_introduced ;
var bool: aux5189_BOOL:: var_is_introduced ;
var 3..45: aux5190:: var_is_introduced ;
var bool: aux5191_BOOL:: var_is_introduced ;
var bool: aux5192_BOOL:: var_is_introduced ;
var bool: aux5193_BOOL:: var_is_introduced ;
var {0,1}: aux5193_INTEGER :: var_is_introduced ;
var bool: aux5194_BOOL:: var_is_introduced ;
var bool: aux5195_BOOL:: var_is_introduced ;
var 1..43: aux5196:: var_is_introduced ;
var bool: aux5197_BOOL:: var_is_introduced ;
var bool: aux5198_BOOL:: var_is_introduced ;
var bool: aux5199_BOOL:: var_is_introduced ;
var {0,1}: aux5199_INTEGER :: var_is_introduced ;
var bool: aux5200_BOOL:: var_is_introduced ;
var bool: aux5201_BOOL:: var_is_introduced ;
var 3..45: aux5202:: var_is_introduced ;
var bool: aux5203_BOOL:: var_is_introduced ;
var bool: aux5204_BOOL:: var_is_introduced ;
var bool: aux5205_BOOL:: var_is_introduced ;
var {0,1}: aux5205_INTEGER :: var_is_introduced ;
var bool: aux5206_BOOL:: var_is_introduced ;
var bool: aux5207_BOOL:: var_is_introduced ;
var 2..44: aux5208:: var_is_introduced ;
var bool: aux5209_BOOL:: var_is_introduced ;
var bool: aux5210_BOOL:: var_is_introduced ;
var bool: aux5211_BOOL:: var_is_introduced ;
var {0,1}: aux5211_INTEGER :: var_is_introduced ;
var bool: aux5212_BOOL:: var_is_introduced ;
var bool: aux5213_BOOL:: var_is_introduced ;
var 3..45: aux5214:: var_is_introduced ;
var bool: aux5215_BOOL:: var_is_introduced ;
var bool: aux5216_BOOL:: var_is_introduced ;
var bool: aux5217_BOOL:: var_is_introduced ;
var {0,1}: aux5217_INTEGER :: var_is_introduced ;
var bool: aux5218_BOOL:: var_is_introduced ;
var bool: aux5219_BOOL:: var_is_introduced ;
var 2..44: aux5220:: var_is_introduced ;
var bool: aux5221_BOOL:: var_is_introduced ;
var bool: aux5222_BOOL:: var_is_introduced ;
var {0,1}: aux5222_INTEGER :: var_is_introduced ;
var bool: aux5223_BOOL:: var_is_introduced ;
var bool: aux5224_BOOL:: var_is_introduced ;
var 1..43: aux5225:: var_is_introduced ;
var bool: aux5226_BOOL:: var_is_introduced ;
var bool: aux5227_BOOL:: var_is_introduced ;
var bool: aux5228_BOOL:: var_is_introduced ;
var {0,1}: aux5228_INTEGER :: var_is_introduced ;
var bool: aux5229_BOOL:: var_is_introduced ;
var bool: aux5230_BOOL:: var_is_introduced ;
var 3..45: aux5231:: var_is_introduced ;
var bool: aux5232_BOOL:: var_is_introduced ;
var bool: aux5233_BOOL:: var_is_introduced ;
var bool: aux5234_BOOL:: var_is_introduced ;
var {0,1}: aux5234_INTEGER :: var_is_introduced ;
var bool: aux5235_BOOL:: var_is_introduced ;
var bool: aux5236_BOOL:: var_is_introduced ;
var 2..44: aux5237:: var_is_introduced ;
var bool: aux5238_BOOL:: var_is_introduced ;
var bool: aux5239_BOOL:: var_is_introduced ;
var bool: aux5240_BOOL:: var_is_introduced ;
var {0,1}: aux5240_INTEGER :: var_is_introduced ;
var bool: aux5241_BOOL:: var_is_introduced ;
var bool: aux5242_BOOL:: var_is_introduced ;
var 2..44: aux5243:: var_is_introduced ;
var bool: aux5244_BOOL:: var_is_introduced ;
var bool: aux5245_BOOL:: var_is_introduced ;
var bool: aux5246_BOOL:: var_is_introduced ;
var {0,1}: aux5246_INTEGER :: var_is_introduced ;
var bool: aux5247_BOOL:: var_is_introduced ;
var bool: aux5248_BOOL:: var_is_introduced ;
var 3..45: aux5249:: var_is_introduced ;
var bool: aux5250_BOOL:: var_is_introduced ;
var bool: aux5251_BOOL:: var_is_introduced ;
var bool: aux5252_BOOL:: var_is_introduced ;
var {0,1}: aux5252_INTEGER :: var_is_introduced ;
var bool: aux5253_BOOL:: var_is_introduced ;
var bool: aux5254_BOOL:: var_is_introduced ;
var 2..44: aux5255:: var_is_introduced ;
var bool: aux5256_BOOL:: var_is_introduced ;
var bool: aux5257_BOOL:: var_is_introduced ;
var bool: aux5258_BOOL:: var_is_introduced ;
var {0,1}: aux5258_INTEGER :: var_is_introduced ;
var bool: aux5259_BOOL:: var_is_introduced ;
var bool: aux5260_BOOL:: var_is_introduced ;
var 1..43: aux5261:: var_is_introduced ;
var bool: aux5262_BOOL:: var_is_introduced ;
var bool: aux5263_BOOL:: var_is_introduced ;
var bool: aux5264_BOOL:: var_is_introduced ;
var {0,1}: aux5264_INTEGER :: var_is_introduced ;
var bool: aux5265_BOOL:: var_is_introduced ;
var bool: aux5266_BOOL:: var_is_introduced ;
var 2..44: aux5267:: var_is_introduced ;
var bool: aux5268_BOOL:: var_is_introduced ;
var bool: aux5269_BOOL:: var_is_introduced ;
var bool: aux5270_BOOL:: var_is_introduced ;
var {0,1}: aux5270_INTEGER :: var_is_introduced ;
var bool: aux5271_BOOL:: var_is_introduced ;
var bool: aux5272_BOOL:: var_is_introduced ;
var 1..43: aux5273:: var_is_introduced ;
var bool: aux5274_BOOL:: var_is_introduced ;
var bool: aux5275_BOOL:: var_is_introduced ;
var bool: aux5276_BOOL:: var_is_introduced ;
var {0,1}: aux5276_INTEGER :: var_is_introduced ;
var bool: aux5277_BOOL:: var_is_introduced ;
var bool: aux5278_BOOL:: var_is_introduced ;
var 2..44: aux5279:: var_is_introduced ;
var bool: aux5280_BOOL:: var_is_introduced ;
var bool: aux5281_BOOL:: var_is_introduced ;
var bool: aux5282_BOOL:: var_is_introduced ;
var {0,1}: aux5282_INTEGER :: var_is_introduced ;
var bool: aux5283_BOOL:: var_is_introduced ;
var bool: aux5284_BOOL:: var_is_introduced ;
var 2..44: aux5285:: var_is_introduced ;
var bool: aux5286_BOOL:: var_is_introduced ;
var bool: aux5287_BOOL:: var_is_introduced ;
var bool: aux5288_BOOL:: var_is_introduced ;
var {0,1}: aux5288_INTEGER :: var_is_introduced ;
var bool: aux5289_BOOL:: var_is_introduced ;
var bool: aux5290_BOOL:: var_is_introduced ;
var 1..43: aux5291:: var_is_introduced ;
var bool: aux5292_BOOL:: var_is_introduced ;
var bool: aux5293_BOOL:: var_is_introduced ;
var bool: aux5294_BOOL:: var_is_introduced ;
var {0,1}: aux5294_INTEGER :: var_is_introduced ;
var bool: aux5295_BOOL:: var_is_introduced ;
var bool: aux5296_BOOL:: var_is_introduced ;
var 4..46: aux5297:: var_is_introduced ;
var bool: aux5298_BOOL:: var_is_introduced ;
var bool: aux5299_BOOL:: var_is_introduced ;
var bool: aux5300_BOOL:: var_is_introduced ;
var {0,1}: aux5300_INTEGER :: var_is_introduced ;
var bool: aux5301_BOOL:: var_is_introduced ;
var bool: aux5302_BOOL:: var_is_introduced ;
var 2..44: aux5303:: var_is_introduced ;
var bool: aux5304_BOOL:: var_is_introduced ;
var bool: aux5305_BOOL:: var_is_introduced ;
var bool: aux5306_BOOL:: var_is_introduced ;
var {0,1}: aux5306_INTEGER :: var_is_introduced ;
var bool: aux5307_BOOL:: var_is_introduced ;
var bool: aux5308_BOOL:: var_is_introduced ;
var 3..45: aux5309:: var_is_introduced ;
var bool: aux5310_BOOL:: var_is_introduced ;
var bool: aux5311_BOOL:: var_is_introduced ;
var bool: aux5312_BOOL:: var_is_introduced ;
var {0,1}: aux5312_INTEGER :: var_is_introduced ;
var bool: aux5313_BOOL:: var_is_introduced ;
var bool: aux5314_BOOL:: var_is_introduced ;
var 1..43: aux5315:: var_is_introduced ;
var bool: aux5316_BOOL:: var_is_introduced ;
var bool: aux5317_BOOL:: var_is_introduced ;
var bool: aux5318_BOOL:: var_is_introduced ;
var {0,1}: aux5318_INTEGER :: var_is_introduced ;
var bool: aux5319_BOOL:: var_is_introduced ;
var bool: aux5320_BOOL:: var_is_introduced ;
var 3..45: aux5321:: var_is_introduced ;
var bool: aux5322_BOOL:: var_is_introduced ;
var bool: aux5323_BOOL:: var_is_introduced ;
var bool: aux5324_BOOL:: var_is_introduced ;
var {0,1}: aux5324_INTEGER :: var_is_introduced ;
var bool: aux5325_BOOL:: var_is_introduced ;
var bool: aux5326_BOOL:: var_is_introduced ;
var 2..44: aux5327:: var_is_introduced ;
var bool: aux5328_BOOL:: var_is_introduced ;
var bool: aux5329_BOOL:: var_is_introduced ;
var bool: aux5330_BOOL:: var_is_introduced ;
var {0,1}: aux5330_INTEGER :: var_is_introduced ;
var bool: aux5331_BOOL:: var_is_introduced ;
var bool: aux5332_BOOL:: var_is_introduced ;
var 3..45: aux5333:: var_is_introduced ;
var bool: aux5334_BOOL:: var_is_introduced ;
var bool: aux5335_BOOL:: var_is_introduced ;
var bool: aux5336_BOOL:: var_is_introduced ;
var {0,1}: aux5336_INTEGER :: var_is_introduced ;
var bool: aux5337_BOOL:: var_is_introduced ;
var bool: aux5338_BOOL:: var_is_introduced ;
var bool: aux5339_BOOL:: var_is_introduced ;
var 1..43: aux5340:: var_is_introduced ;
var bool: aux5341_BOOL:: var_is_introduced ;
var bool: aux5342_BOOL:: var_is_introduced ;
var bool: aux5343_BOOL:: var_is_introduced ;
var bool: aux5344_BOOL:: var_is_introduced ;
var bool: aux5345_BOOL:: var_is_introduced ;
var {0,1}: aux5345_INTEGER :: var_is_introduced ;
var 2..44: aux5346:: var_is_introduced ;
var bool: aux5347_BOOL:: var_is_introduced ;
var bool: aux5348_BOOL:: var_is_introduced ;
var bool: aux5349_BOOL:: var_is_introduced ;
var bool: aux5350_BOOL:: var_is_introduced ;
var bool: aux5351_BOOL:: var_is_introduced ;
var {0,1}: aux5351_INTEGER :: var_is_introduced ;
var 3..45: aux5352:: var_is_introduced ;
var bool: aux5353_BOOL:: var_is_introduced ;
var bool: aux5354_BOOL:: var_is_introduced ;
var bool: aux5355_BOOL:: var_is_introduced ;
var bool: aux5356_BOOL:: var_is_introduced ;
var bool: aux5357_BOOL:: var_is_introduced ;
var {0,1}: aux5357_INTEGER :: var_is_introduced ;
var 2..44: aux5358:: var_is_introduced ;
var bool: aux5359_BOOL:: var_is_introduced ;
var bool: aux5360_BOOL:: var_is_introduced ;
var bool: aux5361_BOOL:: var_is_introduced ;
var bool: aux5362_BOOL:: var_is_introduced ;
var bool: aux5363_BOOL:: var_is_introduced ;
var {0,1}: aux5363_INTEGER :: var_is_introduced ;
var 2..44: aux5364:: var_is_introduced ;
var bool: aux5365_BOOL:: var_is_introduced ;
var bool: aux5366_BOOL:: var_is_introduced ;
var bool: aux5367_BOOL:: var_is_introduced ;
var bool: aux5368_BOOL:: var_is_introduced ;
var bool: aux5369_BOOL:: var_is_introduced ;
var {0,1}: aux5369_INTEGER :: var_is_introduced ;
var 3..45: aux5370:: var_is_introduced ;
var bool: aux5371_BOOL:: var_is_introduced ;
var bool: aux5372_BOOL:: var_is_introduced ;
var bool: aux5373_BOOL:: var_is_introduced ;
var bool: aux5374_BOOL:: var_is_introduced ;
var bool: aux5375_BOOL:: var_is_introduced ;
var {0,1}: aux5375_INTEGER :: var_is_introduced ;
var 2..44: aux5376:: var_is_introduced ;
var bool: aux5377_BOOL:: var_is_introduced ;
var bool: aux5378_BOOL:: var_is_introduced ;
var bool: aux5379_BOOL:: var_is_introduced ;
var bool: aux5380_BOOL:: var_is_introduced ;
var bool: aux5381_BOOL:: var_is_introduced ;
var {0,1}: aux5381_INTEGER :: var_is_introduced ;
var 1..43: aux5382:: var_is_introduced ;
var bool: aux5383_BOOL:: var_is_introduced ;
var bool: aux5384_BOOL:: var_is_introduced ;
var bool: aux5385_BOOL:: var_is_introduced ;
var bool: aux5386_BOOL:: var_is_introduced ;
var bool: aux5387_BOOL:: var_is_introduced ;
var {0,1}: aux5387_INTEGER :: var_is_introduced ;
var 2..44: aux5388:: var_is_introduced ;
var bool: aux5389_BOOL:: var_is_introduced ;
var bool: aux5390_BOOL:: var_is_introduced ;
var bool: aux5391_BOOL:: var_is_introduced ;
var bool: aux5392_BOOL:: var_is_introduced ;
var bool: aux5393_BOOL:: var_is_introduced ;
var {0,1}: aux5393_INTEGER :: var_is_introduced ;
var 1..43: aux5394:: var_is_introduced ;
var bool: aux5395_BOOL:: var_is_introduced ;
var bool: aux5396_BOOL:: var_is_introduced ;
var bool: aux5397_BOOL:: var_is_introduced ;
var bool: aux5398_BOOL:: var_is_introduced ;
var bool: aux5399_BOOL:: var_is_introduced ;
var {0,1}: aux5399_INTEGER :: var_is_introduced ;
var 2..44: aux5400:: var_is_introduced ;
var bool: aux5401_BOOL:: var_is_introduced ;
var bool: aux5402_BOOL:: var_is_introduced ;
var bool: aux5403_BOOL:: var_is_introduced ;
var bool: aux5404_BOOL:: var_is_introduced ;
var bool: aux5405_BOOL:: var_is_introduced ;
var {0,1}: aux5405_INTEGER :: var_is_introduced ;
var 2..44: aux5406:: var_is_introduced ;
var bool: aux5407_BOOL:: var_is_introduced ;
var bool: aux5408_BOOL:: var_is_introduced ;
var bool: aux5409_BOOL:: var_is_introduced ;
var bool: aux5410_BOOL:: var_is_introduced ;
var bool: aux5411_BOOL:: var_is_introduced ;
var {0,1}: aux5411_INTEGER :: var_is_introduced ;
var 1..43: aux5412:: var_is_introduced ;
var bool: aux5413_BOOL:: var_is_introduced ;
var bool: aux5414_BOOL:: var_is_introduced ;
var bool: aux5415_BOOL:: var_is_introduced ;
var bool: aux5416_BOOL:: var_is_introduced ;
var bool: aux5417_BOOL:: var_is_introduced ;
var {0,1}: aux5417_INTEGER :: var_is_introduced ;
var 4..46: aux5418:: var_is_introduced ;
var bool: aux5419_BOOL:: var_is_introduced ;
var bool: aux5420_BOOL:: var_is_introduced ;
var bool: aux5421_BOOL:: var_is_introduced ;
var bool: aux5422_BOOL:: var_is_introduced ;
var bool: aux5423_BOOL:: var_is_introduced ;
var {0,1}: aux5423_INTEGER :: var_is_introduced ;
var 1..43: aux5424:: var_is_introduced ;
var bool: aux5425_BOOL:: var_is_introduced ;
var bool: aux5426_BOOL:: var_is_introduced ;
var bool: aux5427_BOOL:: var_is_introduced ;
var bool: aux5428_BOOL:: var_is_introduced ;
var bool: aux5429_BOOL:: var_is_introduced ;
var {0,1}: aux5429_INTEGER :: var_is_introduced ;
var 3..45: aux5430:: var_is_introduced ;
var bool: aux5431_BOOL:: var_is_introduced ;
var bool: aux5432_BOOL:: var_is_introduced ;
var bool: aux5433_BOOL:: var_is_introduced ;
var bool: aux5434_BOOL:: var_is_introduced ;
var bool: aux5435_BOOL:: var_is_introduced ;
var {0,1}: aux5435_INTEGER :: var_is_introduced ;
var 3..45: aux5436:: var_is_introduced ;
var bool: aux5437_BOOL:: var_is_introduced ;
var bool: aux5438_BOOL:: var_is_introduced ;
var bool: aux5439_BOOL:: var_is_introduced ;
var bool: aux5440_BOOL:: var_is_introduced ;
var bool: aux5441_BOOL:: var_is_introduced ;
var {0,1}: aux5441_INTEGER :: var_is_introduced ;
var 2..44: aux5442:: var_is_introduced ;
var bool: aux5443_BOOL:: var_is_introduced ;
var bool: aux5444_BOOL:: var_is_introduced ;
var bool: aux5445_BOOL:: var_is_introduced ;
var bool: aux5446_BOOL:: var_is_introduced ;
var bool: aux5447_BOOL:: var_is_introduced ;
var {0,1}: aux5447_INTEGER :: var_is_introduced ;
var 3..45: aux5448:: var_is_introduced ;
var bool: aux5449_BOOL:: var_is_introduced ;
var bool: aux5450_BOOL:: var_is_introduced ;
var bool: aux5451_BOOL:: var_is_introduced ;
var bool: aux5452_BOOL:: var_is_introduced ;
var bool: aux5453_BOOL:: var_is_introduced ;
var {0,1}: aux5453_INTEGER :: var_is_introduced ;
var 2..44: aux5454:: var_is_introduced ;
var bool: aux5455_BOOL:: var_is_introduced ;
var bool: aux5456_BOOL:: var_is_introduced ;
var bool: aux5457_BOOL:: var_is_introduced ;
var {0,1}: aux5457_INTEGER :: var_is_introduced ;
var bool: aux5458_BOOL:: var_is_introduced ;
var 1..43: aux5459:: var_is_introduced ;
var bool: aux5460_BOOL:: var_is_introduced ;
var bool: aux5461_BOOL:: var_is_introduced ;
var bool: aux5462_BOOL:: var_is_introduced ;
var bool: aux5463_BOOL:: var_is_introduced ;
var bool: aux5464_BOOL:: var_is_introduced ;
var {0,1}: aux5464_INTEGER :: var_is_introduced ;
var 2..44: aux5465:: var_is_introduced ;
var bool: aux5466_BOOL:: var_is_introduced ;
var bool: aux5467_BOOL:: var_is_introduced ;
var bool: aux5468_BOOL:: var_is_introduced ;
var bool: aux5469_BOOL:: var_is_introduced ;
var bool: aux5470_BOOL:: var_is_introduced ;
var {0,1}: aux5470_INTEGER :: var_is_introduced ;
var 3..45: aux5471:: var_is_introduced ;
var bool: aux5472_BOOL:: var_is_introduced ;
var bool: aux5473_BOOL:: var_is_introduced ;
var bool: aux5474_BOOL:: var_is_introduced ;
var bool: aux5475_BOOL:: var_is_introduced ;
var bool: aux5476_BOOL:: var_is_introduced ;
var {0,1}: aux5476_INTEGER :: var_is_introduced ;
var 2..44: aux5477:: var_is_introduced ;
var bool: aux5478_BOOL:: var_is_introduced ;
var bool: aux5479_BOOL:: var_is_introduced ;
var bool: aux5480_BOOL:: var_is_introduced ;
var bool: aux5481_BOOL:: var_is_introduced ;
var bool: aux5482_BOOL:: var_is_introduced ;
var {0,1}: aux5482_INTEGER :: var_is_introduced ;
var 2..44: aux5483:: var_is_introduced ;
var bool: aux5484_BOOL:: var_is_introduced ;
var bool: aux5485_BOOL:: var_is_introduced ;
var bool: aux5486_BOOL:: var_is_introduced ;
var bool: aux5487_BOOL:: var_is_introduced ;
var bool: aux5488_BOOL:: var_is_introduced ;
var {0,1}: aux5488_INTEGER :: var_is_introduced ;
var 3..45: aux5489:: var_is_introduced ;
var bool: aux5490_BOOL:: var_is_introduced ;
var bool: aux5491_BOOL:: var_is_introduced ;
var bool: aux5492_BOOL:: var_is_introduced ;
var bool: aux5493_BOOL:: var_is_introduced ;
var bool: aux5494_BOOL:: var_is_introduced ;
var {0,1}: aux5494_INTEGER :: var_is_introduced ;
var 2..44: aux5495:: var_is_introduced ;
var bool: aux5496_BOOL:: var_is_introduced ;
var bool: aux5497_BOOL:: var_is_introduced ;
var bool: aux5498_BOOL:: var_is_introduced ;
var bool: aux5499_BOOL:: var_is_introduced ;
var bool: aux5500_BOOL:: var_is_introduced ;
var {0,1}: aux5500_INTEGER :: var_is_introduced ;
var 1..43: aux5501:: var_is_introduced ;
var bool: aux5502_BOOL:: var_is_introduced ;
var bool: aux5503_BOOL:: var_is_introduced ;
var bool: aux5504_BOOL:: var_is_introduced ;
var bool: aux5505_BOOL:: var_is_introduced ;
var bool: aux5506_BOOL:: var_is_introduced ;
var {0,1}: aux5506_INTEGER :: var_is_introduced ;
var 2..44: aux5507:: var_is_introduced ;
var bool: aux5508_BOOL:: var_is_introduced ;
var bool: aux5509_BOOL:: var_is_introduced ;
var bool: aux5510_BOOL:: var_is_introduced ;
var bool: aux5511_BOOL:: var_is_introduced ;
var bool: aux5512_BOOL:: var_is_introduced ;
var {0,1}: aux5512_INTEGER :: var_is_introduced ;
var 1..43: aux5513:: var_is_introduced ;
var bool: aux5514_BOOL:: var_is_introduced ;
var bool: aux5515_BOOL:: var_is_introduced ;
var bool: aux5516_BOOL:: var_is_introduced ;
var bool: aux5517_BOOL:: var_is_introduced ;
var bool: aux5518_BOOL:: var_is_introduced ;
var {0,1}: aux5518_INTEGER :: var_is_introduced ;
var 2..44: aux5519:: var_is_introduced ;
var bool: aux5520_BOOL:: var_is_introduced ;
var bool: aux5521_BOOL:: var_is_introduced ;
var bool: aux5522_BOOL:: var_is_introduced ;
var bool: aux5523_BOOL:: var_is_introduced ;
var bool: aux5524_BOOL:: var_is_introduced ;
var {0,1}: aux5524_INTEGER :: var_is_introduced ;
var 2..44: aux5525:: var_is_introduced ;
var bool: aux5526_BOOL:: var_is_introduced ;
var bool: aux5527_BOOL:: var_is_introduced ;
var bool: aux5528_BOOL:: var_is_introduced ;
var bool: aux5529_BOOL:: var_is_introduced ;
var bool: aux5530_BOOL:: var_is_introduced ;
var {0,1}: aux5530_INTEGER :: var_is_introduced ;
var 1..43: aux5531:: var_is_introduced ;
var bool: aux5532_BOOL:: var_is_introduced ;
var bool: aux5533_BOOL:: var_is_introduced ;
var bool: aux5534_BOOL:: var_is_introduced ;
var bool: aux5535_BOOL:: var_is_introduced ;
var bool: aux5536_BOOL:: var_is_introduced ;
var {0,1}: aux5536_INTEGER :: var_is_introduced ;
var 2..44: aux5537:: var_is_introduced ;
var bool: aux5538_BOOL:: var_is_introduced ;
var bool: aux5539_BOOL:: var_is_introduced ;
var bool: aux5540_BOOL:: var_is_introduced ;
var bool: aux5541_BOOL:: var_is_introduced ;
var bool: aux5542_BOOL:: var_is_introduced ;
var {0,1}: aux5542_INTEGER :: var_is_introduced ;
var 4..46: aux5543:: var_is_introduced ;
var bool: aux5544_BOOL:: var_is_introduced ;
var bool: aux5545_BOOL:: var_is_introduced ;
var bool: aux5546_BOOL:: var_is_introduced ;
var bool: aux5547_BOOL:: var_is_introduced ;
var bool: aux5548_BOOL:: var_is_introduced ;
var {0,1}: aux5548_INTEGER :: var_is_introduced ;
var 1..43: aux5549:: var_is_introduced ;
var bool: aux5550_BOOL:: var_is_introduced ;
var bool: aux5551_BOOL:: var_is_introduced ;
var bool: aux5552_BOOL:: var_is_introduced ;
var bool: aux5553_BOOL:: var_is_introduced ;
var bool: aux5554_BOOL:: var_is_introduced ;
var {0,1}: aux5554_INTEGER :: var_is_introduced ;
var 3..45: aux5555:: var_is_introduced ;
var bool: aux5556_BOOL:: var_is_introduced ;
var bool: aux5557_BOOL:: var_is_introduced ;
var bool: aux5558_BOOL:: var_is_introduced ;
var bool: aux5559_BOOL:: var_is_introduced ;
var bool: aux5560_BOOL:: var_is_introduced ;
var {0,1}: aux5560_INTEGER :: var_is_introduced ;
var 2..44: aux5561:: var_is_introduced ;
var bool: aux5562_BOOL:: var_is_introduced ;
var bool: aux5563_BOOL:: var_is_introduced ;
var bool: aux5564_BOOL:: var_is_introduced ;
var bool: aux5565_BOOL:: var_is_introduced ;
var bool: aux5566_BOOL:: var_is_introduced ;
var {0,1}: aux5566_INTEGER :: var_is_introduced ;
var 3..45: aux5567:: var_is_introduced ;
var bool: aux5568_BOOL:: var_is_introduced ;
var bool: aux5569_BOOL:: var_is_introduced ;
var bool: aux5570_BOOL:: var_is_introduced ;
var bool: aux5571_BOOL:: var_is_introduced ;
var bool: aux5572_BOOL:: var_is_introduced ;
var {0,1}: aux5572_INTEGER :: var_is_introduced ;
var 3..45: aux5573:: var_is_introduced ;
var bool: aux5574_BOOL:: var_is_introduced ;
var bool: aux5575_BOOL:: var_is_introduced ;
var bool: aux5576_BOOL:: var_is_introduced ;
var {0,1}: aux5576_INTEGER :: var_is_introduced ;
var bool: aux5577_BOOL:: var_is_introduced ;
var 1..43: aux5578:: var_is_introduced ;
var bool: aux5579_BOOL:: var_is_introduced ;
var bool: aux5580_BOOL:: var_is_introduced ;
var bool: aux5581_BOOL:: var_is_introduced ;
var bool: aux5582_BOOL:: var_is_introduced ;
var bool: aux5583_BOOL:: var_is_introduced ;
var {0,1}: aux5583_INTEGER :: var_is_introduced ;
var 3..45: aux5584:: var_is_introduced ;
var bool: aux5585_BOOL:: var_is_introduced ;
var bool: aux5586_BOOL:: var_is_introduced ;
var bool: aux5587_BOOL:: var_is_introduced ;
var bool: aux5588_BOOL:: var_is_introduced ;
var bool: aux5589_BOOL:: var_is_introduced ;
var {0,1}: aux5589_INTEGER :: var_is_introduced ;
var 2..44: aux5590:: var_is_introduced ;
var bool: aux5591_BOOL:: var_is_introduced ;
var bool: aux5592_BOOL:: var_is_introduced ;
var bool: aux5593_BOOL:: var_is_introduced ;
var bool: aux5594_BOOL:: var_is_introduced ;
var bool: aux5595_BOOL:: var_is_introduced ;
var {0,1}: aux5595_INTEGER :: var_is_introduced ;
var 2..44: aux5596:: var_is_introduced ;
var bool: aux5597_BOOL:: var_is_introduced ;
var bool: aux5598_BOOL:: var_is_introduced ;
var bool: aux5599_BOOL:: var_is_introduced ;
var bool: aux5600_BOOL:: var_is_introduced ;
var bool: aux5601_BOOL:: var_is_introduced ;
var {0,1}: aux5601_INTEGER :: var_is_introduced ;
var 3..45: aux5602:: var_is_introduced ;
var bool: aux5603_BOOL:: var_is_introduced ;
var bool: aux5604_BOOL:: var_is_introduced ;
var bool: aux5605_BOOL:: var_is_introduced ;
var bool: aux5606_BOOL:: var_is_introduced ;
var bool: aux5607_BOOL:: var_is_introduced ;
var {0,1}: aux5607_INTEGER :: var_is_introduced ;
var 2..44: aux5608:: var_is_introduced ;
var bool: aux5609_BOOL:: var_is_introduced ;
var bool: aux5610_BOOL:: var_is_introduced ;
var bool: aux5611_BOOL:: var_is_introduced ;
var bool: aux5612_BOOL:: var_is_introduced ;
var bool: aux5613_BOOL:: var_is_introduced ;
var {0,1}: aux5613_INTEGER :: var_is_introduced ;
var 1..43: aux5614:: var_is_introduced ;
var bool: aux5615_BOOL:: var_is_introduced ;
var bool: aux5616_BOOL:: var_is_introduced ;
var bool: aux5617_BOOL:: var_is_introduced ;
var bool: aux5618_BOOL:: var_is_introduced ;
var bool: aux5619_BOOL:: var_is_introduced ;
var {0,1}: aux5619_INTEGER :: var_is_introduced ;
var 2..44: aux5620:: var_is_introduced ;
var bool: aux5621_BOOL:: var_is_introduced ;
var bool: aux5622_BOOL:: var_is_introduced ;
var bool: aux5623_BOOL:: var_is_introduced ;
var bool: aux5624_BOOL:: var_is_introduced ;
var bool: aux5625_BOOL:: var_is_introduced ;
var {0,1}: aux5625_INTEGER :: var_is_introduced ;
var 1..43: aux5626:: var_is_introduced ;
var bool: aux5627_BOOL:: var_is_introduced ;
var bool: aux5628_BOOL:: var_is_introduced ;
var bool: aux5629_BOOL:: var_is_introduced ;
var bool: aux5630_BOOL:: var_is_introduced ;
var bool: aux5631_BOOL:: var_is_introduced ;
var {0,1}: aux5631_INTEGER :: var_is_introduced ;
var 2..44: aux5632:: var_is_introduced ;
var bool: aux5633_BOOL:: var_is_introduced ;
var bool: aux5634_BOOL:: var_is_introduced ;
var bool: aux5635_BOOL:: var_is_introduced ;
var bool: aux5636_BOOL:: var_is_introduced ;
var bool: aux5637_BOOL:: var_is_introduced ;
var {0,1}: aux5637_INTEGER :: var_is_introduced ;
var 2..44: aux5638:: var_is_introduced ;
var bool: aux5639_BOOL:: var_is_introduced ;
var bool: aux5640_BOOL:: var_is_introduced ;
var bool: aux5641_BOOL:: var_is_introduced ;
var bool: aux5642_BOOL:: var_is_introduced ;
var bool: aux5643_BOOL:: var_is_introduced ;
var {0,1}: aux5643_INTEGER :: var_is_introduced ;
var 1..43: aux5644:: var_is_introduced ;
var bool: aux5645_BOOL:: var_is_introduced ;
var bool: aux5646_BOOL:: var_is_introduced ;
var bool: aux5647_BOOL:: var_is_introduced ;
var bool: aux5648_BOOL:: var_is_introduced ;
var bool: aux5649_BOOL:: var_is_introduced ;
var {0,1}: aux5649_INTEGER :: var_is_introduced ;
var 2..44: aux5650:: var_is_introduced ;
var bool: aux5651_BOOL:: var_is_introduced ;
var bool: aux5652_BOOL:: var_is_introduced ;
var bool: aux5653_BOOL:: var_is_introduced ;
var bool: aux5654_BOOL:: var_is_introduced ;
var bool: aux5655_BOOL:: var_is_introduced ;
var {0,1}: aux5655_INTEGER :: var_is_introduced ;
var 4..46: aux5656:: var_is_introduced ;
var bool: aux5657_BOOL:: var_is_introduced ;
var bool: aux5658_BOOL:: var_is_introduced ;
var bool: aux5659_BOOL:: var_is_introduced ;
var bool: aux5660_BOOL:: var_is_introduced ;
var bool: aux5661_BOOL:: var_is_introduced ;
var {0,1}: aux5661_INTEGER :: var_is_introduced ;
var 1..43: aux5662:: var_is_introduced ;
var bool: aux5663_BOOL:: var_is_introduced ;
var bool: aux5664_BOOL:: var_is_introduced ;
var bool: aux5665_BOOL:: var_is_introduced ;
var bool: aux5666_BOOL:: var_is_introduced ;
var bool: aux5667_BOOL:: var_is_introduced ;
var {0,1}: aux5667_INTEGER :: var_is_introduced ;
var 3..45: aux5668:: var_is_introduced ;
var bool: aux5669_BOOL:: var_is_introduced ;
var bool: aux5670_BOOL:: var_is_introduced ;
var bool: aux5671_BOOL:: var_is_introduced ;
var bool: aux5672_BOOL:: var_is_introduced ;
var bool: aux5673_BOOL:: var_is_introduced ;
var {0,1}: aux5673_INTEGER :: var_is_introduced ;
var 3..45: aux5674:: var_is_introduced ;
var bool: aux5675_BOOL:: var_is_introduced ;
var bool: aux5676_BOOL:: var_is_introduced ;
var bool: aux5677_BOOL:: var_is_introduced ;
var bool: aux5678_BOOL:: var_is_introduced ;
var bool: aux5679_BOOL:: var_is_introduced ;
var {0,1}: aux5679_INTEGER :: var_is_introduced ;
var 2..44: aux5680:: var_is_introduced ;
var bool: aux5681_BOOL:: var_is_introduced ;
var bool: aux5682_BOOL:: var_is_introduced ;
var bool: aux5683_BOOL:: var_is_introduced ;
var bool: aux5684_BOOL:: var_is_introduced ;
var bool: aux5685_BOOL:: var_is_introduced ;
var {0,1}: aux5685_INTEGER :: var_is_introduced ;
var 3..45: aux5686:: var_is_introduced ;
var bool: aux5687_BOOL:: var_is_introduced ;
var bool: aux5688_BOOL:: var_is_introduced ;
var bool: aux5689_BOOL:: var_is_introduced ;
var bool: aux5690_BOOL:: var_is_introduced ;
var bool: aux5691_BOOL:: var_is_introduced ;
var {0,1}: aux5691_INTEGER :: var_is_introduced ;
var 2..44: aux5692:: var_is_introduced ;
var bool: aux5693_BOOL:: var_is_introduced ;
var bool: aux5694_BOOL:: var_is_introduced ;
var bool: aux5695_BOOL:: var_is_introduced ;
var {0,1}: aux5695_INTEGER :: var_is_introduced ;
var bool: aux5696_BOOL:: var_is_introduced ;
var 1..43: aux5697:: var_is_introduced ;
var bool: aux5698_BOOL:: var_is_introduced ;
var bool: aux5699_BOOL:: var_is_introduced ;
var bool: aux5700_BOOL:: var_is_introduced ;
var bool: aux5701_BOOL:: var_is_introduced ;
var bool: aux5702_BOOL:: var_is_introduced ;
var {0,1}: aux5702_INTEGER :: var_is_introduced ;
var 2..44: aux5703:: var_is_introduced ;
var bool: aux5704_BOOL:: var_is_introduced ;
var bool: aux5705_BOOL:: var_is_introduced ;
var bool: aux5706_BOOL:: var_is_introduced ;
var bool: aux5707_BOOL:: var_is_introduced ;
var bool: aux5708_BOOL:: var_is_introduced ;
var {0,1}: aux5708_INTEGER :: var_is_introduced ;
var 3..45: aux5709:: var_is_introduced ;
var bool: aux5710_BOOL:: var_is_introduced ;
var bool: aux5711_BOOL:: var_is_introduced ;
var bool: aux5712_BOOL:: var_is_introduced ;
var bool: aux5713_BOOL:: var_is_introduced ;
var bool: aux5714_BOOL:: var_is_introduced ;
var {0,1}: aux5714_INTEGER :: var_is_introduced ;
var 2..44: aux5715:: var_is_introduced ;
var bool: aux5716_BOOL:: var_is_introduced ;
var bool: aux5717_BOOL:: var_is_introduced ;
var bool: aux5718_BOOL:: var_is_introduced ;
var bool: aux5719_BOOL:: var_is_introduced ;
var bool: aux5720_BOOL:: var_is_introduced ;
var {0,1}: aux5720_INTEGER :: var_is_introduced ;
var 2..44: aux5721:: var_is_introduced ;
var bool: aux5722_BOOL:: var_is_introduced ;
var bool: aux5723_BOOL:: var_is_introduced ;
var bool: aux5724_BOOL:: var_is_introduced ;
var bool: aux5725_BOOL:: var_is_introduced ;
var bool: aux5726_BOOL:: var_is_introduced ;
var {0,1}: aux5726_INTEGER :: var_is_introduced ;
var 3..45: aux5727:: var_is_introduced ;
var bool: aux5728_BOOL:: var_is_introduced ;
var bool: aux5729_BOOL:: var_is_introduced ;
var bool: aux5730_BOOL:: var_is_introduced ;
var bool: aux5731_BOOL:: var_is_introduced ;
var bool: aux5732_BOOL:: var_is_introduced ;
var {0,1}: aux5732_INTEGER :: var_is_introduced ;
var 2..44: aux5733:: var_is_introduced ;
var bool: aux5734_BOOL:: var_is_introduced ;
var bool: aux5735_BOOL:: var_is_introduced ;
var bool: aux5736_BOOL:: var_is_introduced ;
var bool: aux5737_BOOL:: var_is_introduced ;
var bool: aux5738_BOOL:: var_is_introduced ;
var {0,1}: aux5738_INTEGER :: var_is_introduced ;
var 1..43: aux5739:: var_is_introduced ;
var bool: aux5740_BOOL:: var_is_introduced ;
var bool: aux5741_BOOL:: var_is_introduced ;
var bool: aux5742_BOOL:: var_is_introduced ;
var bool: aux5743_BOOL:: var_is_introduced ;
var bool: aux5744_BOOL:: var_is_introduced ;
var {0,1}: aux5744_INTEGER :: var_is_introduced ;
var 2..44: aux5745:: var_is_introduced ;
var bool: aux5746_BOOL:: var_is_introduced ;
var bool: aux5747_BOOL:: var_is_introduced ;
var bool: aux5748_BOOL:: var_is_introduced ;
var bool: aux5749_BOOL:: var_is_introduced ;
var bool: aux5750_BOOL:: var_is_introduced ;
var {0,1}: aux5750_INTEGER :: var_is_introduced ;
var 1..43: aux5751:: var_is_introduced ;
var bool: aux5752_BOOL:: var_is_introduced ;
var bool: aux5753_BOOL:: var_is_introduced ;
var bool: aux5754_BOOL:: var_is_introduced ;
var bool: aux5755_BOOL:: var_is_introduced ;
var bool: aux5756_BOOL:: var_is_introduced ;
var {0,1}: aux5756_INTEGER :: var_is_introduced ;
var 2..44: aux5757:: var_is_introduced ;
var bool: aux5758_BOOL:: var_is_introduced ;
var bool: aux5759_BOOL:: var_is_introduced ;
var bool: aux5760_BOOL:: var_is_introduced ;
var bool: aux5761_BOOL:: var_is_introduced ;
var bool: aux5762_BOOL:: var_is_introduced ;
var {0,1}: aux5762_INTEGER :: var_is_introduced ;
var 2..44: aux5763:: var_is_introduced ;
var bool: aux5764_BOOL:: var_is_introduced ;
var bool: aux5765_BOOL:: var_is_introduced ;
var bool: aux5766_BOOL:: var_is_introduced ;
var bool: aux5767_BOOL:: var_is_introduced ;
var bool: aux5768_BOOL:: var_is_introduced ;
var {0,1}: aux5768_INTEGER :: var_is_introduced ;
var 2..44: aux5769:: var_is_introduced ;
var bool: aux5770_BOOL:: var_is_introduced ;
var bool: aux5771_BOOL:: var_is_introduced ;
var bool: aux5772_BOOL:: var_is_introduced ;
var bool: aux5773_BOOL:: var_is_introduced ;
var bool: aux5774_BOOL:: var_is_introduced ;
var {0,1}: aux5774_INTEGER :: var_is_introduced ;
var 4..46: aux5775:: var_is_introduced ;
var bool: aux5776_BOOL:: var_is_introduced ;
var bool: aux5777_BOOL:: var_is_introduced ;
var bool: aux5778_BOOL:: var_is_introduced ;
var bool: aux5779_BOOL:: var_is_introduced ;
var bool: aux5780_BOOL:: var_is_introduced ;
var {0,1}: aux5780_INTEGER :: var_is_introduced ;
var 1..43: aux5781:: var_is_introduced ;
var bool: aux5782_BOOL:: var_is_introduced ;
var bool: aux5783_BOOL:: var_is_introduced ;
var bool: aux5784_BOOL:: var_is_introduced ;
var bool: aux5785_BOOL:: var_is_introduced ;
var bool: aux5786_BOOL:: var_is_introduced ;
var {0,1}: aux5786_INTEGER :: var_is_introduced ;
var 3..45: aux5787:: var_is_introduced ;
var bool: aux5788_BOOL:: var_is_introduced ;
var bool: aux5789_BOOL:: var_is_introduced ;
var bool: aux5790_BOOL:: var_is_introduced ;
var bool: aux5791_BOOL:: var_is_introduced ;
var bool: aux5792_BOOL:: var_is_introduced ;
var {0,1}: aux5792_INTEGER :: var_is_introduced ;
var 3..45: aux5793:: var_is_introduced ;
var bool: aux5794_BOOL:: var_is_introduced ;
var bool: aux5795_BOOL:: var_is_introduced ;
var bool: aux5796_BOOL:: var_is_introduced ;
var bool: aux5797_BOOL:: var_is_introduced ;
var bool: aux5798_BOOL:: var_is_introduced ;
var {0,1}: aux5798_INTEGER :: var_is_introduced ;
var 2..44: aux5799:: var_is_introduced ;
var bool: aux5800_BOOL:: var_is_introduced ;
var bool: aux5801_BOOL:: var_is_introduced ;
var bool: aux5802_BOOL:: var_is_introduced ;
var bool: aux5803_BOOL:: var_is_introduced ;
var bool: aux5804_BOOL:: var_is_introduced ;
var {0,1}: aux5804_INTEGER :: var_is_introduced ;
var 3..45: aux5805:: var_is_introduced ;
var bool: aux5806_BOOL:: var_is_introduced ;
var bool: aux5807_BOOL:: var_is_introduced ;
var bool: aux5808_BOOL:: var_is_introduced ;
var bool: aux5809_BOOL:: var_is_introduced ;
var bool: aux5810_BOOL:: var_is_introduced ;
var {0,1}: aux5810_INTEGER :: var_is_introduced ;
var 1..43: aux5811:: var_is_introduced ;
var bool: aux5812_BOOL:: var_is_introduced ;
var bool: aux5813_BOOL:: var_is_introduced ;
var bool: aux5814_BOOL:: var_is_introduced ;
var {0,1}: aux5814_INTEGER :: var_is_introduced ;
var bool: aux5815_BOOL:: var_is_introduced ;
var 1..43: aux5816:: var_is_introduced ;
var bool: aux5817_BOOL:: var_is_introduced ;
var bool: aux5818_BOOL:: var_is_introduced ;
var bool: aux5819_BOOL:: var_is_introduced ;
var bool: aux5820_BOOL:: var_is_introduced ;
var bool: aux5821_BOOL:: var_is_introduced ;
var {0,1}: aux5821_INTEGER :: var_is_introduced ;
var 2..44: aux5822:: var_is_introduced ;
var bool: aux5823_BOOL:: var_is_introduced ;
var bool: aux5824_BOOL:: var_is_introduced ;
var bool: aux5825_BOOL:: var_is_introduced ;
var bool: aux5826_BOOL:: var_is_introduced ;
var bool: aux5827_BOOL:: var_is_introduced ;
var {0,1}: aux5827_INTEGER :: var_is_introduced ;
var 2..44: aux5828:: var_is_introduced ;
var bool: aux5829_BOOL:: var_is_introduced ;
var bool: aux5830_BOOL:: var_is_introduced ;
var bool: aux5831_BOOL:: var_is_introduced ;
var bool: aux5832_BOOL:: var_is_introduced ;
var bool: aux5833_BOOL:: var_is_introduced ;
var {0,1}: aux5833_INTEGER :: var_is_introduced ;
var 2..44: aux5834:: var_is_introduced ;
var bool: aux5835_BOOL:: var_is_introduced ;
var bool: aux5836_BOOL:: var_is_introduced ;
var bool: aux5837_BOOL:: var_is_introduced ;
var bool: aux5838_BOOL:: var_is_introduced ;
var bool: aux5839_BOOL:: var_is_introduced ;
var {0,1}: aux5839_INTEGER :: var_is_introduced ;
var 3..45: aux5840:: var_is_introduced ;
var bool: aux5841_BOOL:: var_is_introduced ;
var bool: aux5842_BOOL:: var_is_introduced ;
var bool: aux5843_BOOL:: var_is_introduced ;
var bool: aux5844_BOOL:: var_is_introduced ;
var bool: aux5845_BOOL:: var_is_introduced ;
var {0,1}: aux5845_INTEGER :: var_is_introduced ;
var 2..44: aux5846:: var_is_introduced ;
var bool: aux5847_BOOL:: var_is_introduced ;
var bool: aux5848_BOOL:: var_is_introduced ;
var bool: aux5849_BOOL:: var_is_introduced ;
var bool: aux5850_BOOL:: var_is_introduced ;
var bool: aux5851_BOOL:: var_is_introduced ;
var {0,1}: aux5851_INTEGER :: var_is_introduced ;
var 1..43: aux5852:: var_is_introduced ;
var bool: aux5853_BOOL:: var_is_introduced ;
var bool: aux5854_BOOL:: var_is_introduced ;
var bool: aux5855_BOOL:: var_is_introduced ;
var bool: aux5856_BOOL:: var_is_introduced ;
var bool: aux5857_BOOL:: var_is_introduced ;
var {0,1}: aux5857_INTEGER :: var_is_introduced ;
var 2..44: aux5858:: var_is_introduced ;
var bool: aux5859_BOOL:: var_is_introduced ;
var bool: aux5860_BOOL:: var_is_introduced ;
var bool: aux5861_BOOL:: var_is_introduced ;
var bool: aux5862_BOOL:: var_is_introduced ;
var bool: aux5863_BOOL:: var_is_introduced ;
var {0,1}: aux5863_INTEGER :: var_is_introduced ;
var 1..43: aux5864:: var_is_introduced ;
var bool: aux5865_BOOL:: var_is_introduced ;
var bool: aux5866_BOOL:: var_is_introduced ;
var bool: aux5867_BOOL:: var_is_introduced ;
var bool: aux5868_BOOL:: var_is_introduced ;
var bool: aux5869_BOOL:: var_is_introduced ;
var {0,1}: aux5869_INTEGER :: var_is_introduced ;
var 2..44: aux5870:: var_is_introduced ;
var bool: aux5871_BOOL:: var_is_introduced ;
var bool: aux5872_BOOL:: var_is_introduced ;
var bool: aux5873_BOOL:: var_is_introduced ;
var bool: aux5874_BOOL:: var_is_introduced ;
var bool: aux5875_BOOL:: var_is_introduced ;
var {0,1}: aux5875_INTEGER :: var_is_introduced ;
var 2..44: aux5876:: var_is_introduced ;
var bool: aux5877_BOOL:: var_is_introduced ;
var bool: aux5878_BOOL:: var_is_introduced ;
var bool: aux5879_BOOL:: var_is_introduced ;
var bool: aux5880_BOOL:: var_is_introduced ;
var bool: aux5881_BOOL:: var_is_introduced ;
var {0,1}: aux5881_INTEGER :: var_is_introduced ;
var 1..43: aux5882:: var_is_introduced ;
var bool: aux5883_BOOL:: var_is_introduced ;
var bool: aux5884_BOOL:: var_is_introduced ;
var bool: aux5885_BOOL:: var_is_introduced ;
var bool: aux5886_BOOL:: var_is_introduced ;
var bool: aux5887_BOOL:: var_is_introduced ;
var {0,1}: aux5887_INTEGER :: var_is_introduced ;
var 2..44: aux5888:: var_is_introduced ;
var bool: aux5889_BOOL:: var_is_introduced ;
var bool: aux5890_BOOL:: var_is_introduced ;
var bool: aux5891_BOOL:: var_is_introduced ;
var bool: aux5892_BOOL:: var_is_introduced ;
var bool: aux5893_BOOL:: var_is_introduced ;
var {0,1}: aux5893_INTEGER :: var_is_introduced ;
var 4..46: aux5894:: var_is_introduced ;
var bool: aux5895_BOOL:: var_is_introduced ;
var bool: aux5896_BOOL:: var_is_introduced ;
var bool: aux5897_BOOL:: var_is_introduced ;
var bool: aux5898_BOOL:: var_is_introduced ;
var bool: aux5899_BOOL:: var_is_introduced ;
var {0,1}: aux5899_INTEGER :: var_is_introduced ;
var 1..43: aux5900:: var_is_introduced ;
var bool: aux5901_BOOL:: var_is_introduced ;
var bool: aux5902_BOOL:: var_is_introduced ;
var bool: aux5903_BOOL:: var_is_introduced ;
var bool: aux5904_BOOL:: var_is_introduced ;
var bool: aux5905_BOOL:: var_is_introduced ;
var {0,1}: aux5905_INTEGER :: var_is_introduced ;
var 3..45: aux5906:: var_is_introduced ;
var bool: aux5907_BOOL:: var_is_introduced ;
var bool: aux5908_BOOL:: var_is_introduced ;
var bool: aux5909_BOOL:: var_is_introduced ;
var bool: aux5910_BOOL:: var_is_introduced ;
var bool: aux5911_BOOL:: var_is_introduced ;
var {0,1}: aux5911_INTEGER :: var_is_introduced ;
var 3..45: aux5912:: var_is_introduced ;
var bool: aux5913_BOOL:: var_is_introduced ;
var bool: aux5914_BOOL:: var_is_introduced ;
var bool: aux5915_BOOL:: var_is_introduced ;
var bool: aux5916_BOOL:: var_is_introduced ;
var bool: aux5917_BOOL:: var_is_introduced ;
var {0,1}: aux5917_INTEGER :: var_is_introduced ;
var 2..44: aux5918:: var_is_introduced ;
var bool: aux5919_BOOL:: var_is_introduced ;
var bool: aux5920_BOOL:: var_is_introduced ;
var bool: aux5921_BOOL:: var_is_introduced ;
var bool: aux5922_BOOL:: var_is_introduced ;
var bool: aux5923_BOOL:: var_is_introduced ;
var {0,1}: aux5923_INTEGER :: var_is_introduced ;
var 3..45: aux5924:: var_is_introduced ;
var bool: aux5925_BOOL:: var_is_introduced ;
var bool: aux5926_BOOL:: var_is_introduced ;
var bool: aux5927_BOOL:: var_is_introduced ;
var bool: aux5928_BOOL:: var_is_introduced ;
var bool: aux5929_BOOL:: var_is_introduced ;
var {0,1}: aux5929_INTEGER :: var_is_introduced ;
var 3..45: aux5930:: var_is_introduced ;
var bool: aux5931_BOOL:: var_is_introduced ;
var bool: aux5932_BOOL:: var_is_introduced ;
var bool: aux5933_BOOL:: var_is_introduced ;
var {0,1}: aux5933_INTEGER :: var_is_introduced ;
var bool: aux5934_BOOL:: var_is_introduced ;
var 1..43: aux5935:: var_is_introduced ;
var bool: aux5936_BOOL:: var_is_introduced ;
var bool: aux5937_BOOL:: var_is_introduced ;
var bool: aux5938_BOOL:: var_is_introduced ;
var bool: aux5939_BOOL:: var_is_introduced ;
var bool: aux5940_BOOL:: var_is_introduced ;
var {0,1}: aux5940_INTEGER :: var_is_introduced ;
var 2..44: aux5941:: var_is_introduced ;
var bool: aux5942_BOOL:: var_is_introduced ;
var bool: aux5943_BOOL:: var_is_introduced ;
var bool: aux5944_BOOL:: var_is_introduced ;
var bool: aux5945_BOOL:: var_is_introduced ;
var bool: aux5946_BOOL:: var_is_introduced ;
var {0,1}: aux5946_INTEGER :: var_is_introduced ;
var 3..45: aux5947:: var_is_introduced ;
var bool: aux5948_BOOL:: var_is_introduced ;
var bool: aux5949_BOOL:: var_is_introduced ;
var bool: aux5950_BOOL:: var_is_introduced ;
var bool: aux5951_BOOL:: var_is_introduced ;
var bool: aux5952_BOOL:: var_is_introduced ;
var {0,1}: aux5952_INTEGER :: var_is_introduced ;
var 2..44: aux5953:: var_is_introduced ;
var bool: aux5954_BOOL:: var_is_introduced ;
var bool: aux5955_BOOL:: var_is_introduced ;
var bool: aux5956_BOOL:: var_is_introduced ;
var bool: aux5957_BOOL:: var_is_introduced ;
var bool: aux5958_BOOL:: var_is_introduced ;
var {0,1}: aux5958_INTEGER :: var_is_introduced ;
var 2..44: aux5959:: var_is_introduced ;
var bool: aux5960_BOOL:: var_is_introduced ;
var bool: aux5961_BOOL:: var_is_introduced ;
var bool: aux5962_BOOL:: var_is_introduced ;
var bool: aux5963_BOOL:: var_is_introduced ;
var bool: aux5964_BOOL:: var_is_introduced ;
var {0,1}: aux5964_INTEGER :: var_is_introduced ;
var 3..45: aux5965:: var_is_introduced ;
var bool: aux5966_BOOL:: var_is_introduced ;
var bool: aux5967_BOOL:: var_is_introduced ;
var bool: aux5968_BOOL:: var_is_introduced ;
var bool: aux5969_BOOL:: var_is_introduced ;
var bool: aux5970_BOOL:: var_is_introduced ;
var {0,1}: aux5970_INTEGER :: var_is_introduced ;
var 2..44: aux5971:: var_is_introduced ;
var bool: aux5972_BOOL:: var_is_introduced ;
var bool: aux5973_BOOL:: var_is_introduced ;
var bool: aux5974_BOOL:: var_is_introduced ;
var bool: aux5975_BOOL:: var_is_introduced ;
var bool: aux5976_BOOL:: var_is_introduced ;
var {0,1}: aux5976_INTEGER :: var_is_introduced ;
var 1..43: aux5977:: var_is_introduced ;
var bool: aux5978_BOOL:: var_is_introduced ;
var bool: aux5979_BOOL:: var_is_introduced ;
var bool: aux5980_BOOL:: var_is_introduced ;
var bool: aux5981_BOOL:: var_is_introduced ;
var bool: aux5982_BOOL:: var_is_introduced ;
var {0,1}: aux5982_INTEGER :: var_is_introduced ;
var 2..44: aux5983:: var_is_introduced ;
var bool: aux5984_BOOL:: var_is_introduced ;
var bool: aux5985_BOOL:: var_is_introduced ;
var bool: aux5986_BOOL:: var_is_introduced ;
var bool: aux5987_BOOL:: var_is_introduced ;
var bool: aux5988_BOOL:: var_is_introduced ;
var {0,1}: aux5988_INTEGER :: var_is_introduced ;
var 1..43: aux5989:: var_is_introduced ;
var bool: aux5990_BOOL:: var_is_introduced ;
var bool: aux5991_BOOL:: var_is_introduced ;
var bool: aux5992_BOOL:: var_is_introduced ;
var bool: aux5993_BOOL:: var_is_introduced ;
var bool: aux5994_BOOL:: var_is_introduced ;
var {0,1}: aux5994_INTEGER :: var_is_introduced ;
var 2..44: aux5995:: var_is_introduced ;
var bool: aux5996_BOOL:: var_is_introduced ;
var bool: aux5997_BOOL:: var_is_introduced ;
var bool: aux5998_BOOL:: var_is_introduced ;
var bool: aux5999_BOOL:: var_is_introduced ;
var bool: aux6000_BOOL:: var_is_introduced ;
var {0,1}: aux6000_INTEGER :: var_is_introduced ;
var 2..44: aux6001:: var_is_introduced ;
var bool: aux6002_BOOL:: var_is_introduced ;
var bool: aux6003_BOOL:: var_is_introduced ;
var bool: aux6004_BOOL:: var_is_introduced ;
var bool: aux6005_BOOL:: var_is_introduced ;
var bool: aux6006_BOOL:: var_is_introduced ;
var {0,1}: aux6006_INTEGER :: var_is_introduced ;
var 1..43: aux6007:: var_is_introduced ;
var bool: aux6008_BOOL:: var_is_introduced ;
var bool: aux6009_BOOL:: var_is_introduced ;
var bool: aux6010_BOOL:: var_is_introduced ;
var bool: aux6011_BOOL:: var_is_introduced ;
var bool: aux6012_BOOL:: var_is_introduced ;
var {0,1}: aux6012_INTEGER :: var_is_introduced ;
var 2..44: aux6013:: var_is_introduced ;
var bool: aux6014_BOOL:: var_is_introduced ;
var bool: aux6015_BOOL:: var_is_introduced ;
var bool: aux6016_BOOL:: var_is_introduced ;
var bool: aux6017_BOOL:: var_is_introduced ;
var bool: aux6018_BOOL:: var_is_introduced ;
var {0,1}: aux6018_INTEGER :: var_is_introduced ;
var 4..46: aux6019:: var_is_introduced ;
var bool: aux6020_BOOL:: var_is_introduced ;
var bool: aux6021_BOOL:: var_is_introduced ;
var bool: aux6022_BOOL:: var_is_introduced ;
var bool: aux6023_BOOL:: var_is_introduced ;
var bool: aux6024_BOOL:: var_is_introduced ;
var {0,1}: aux6024_INTEGER :: var_is_introduced ;
var 1..43: aux6025:: var_is_introduced ;
var bool: aux6026_BOOL:: var_is_introduced ;
var bool: aux6027_BOOL:: var_is_introduced ;
var bool: aux6028_BOOL:: var_is_introduced ;
var bool: aux6029_BOOL:: var_is_introduced ;
var bool: aux6030_BOOL:: var_is_introduced ;
var {0,1}: aux6030_INTEGER :: var_is_introduced ;
var 3..45: aux6031:: var_is_introduced ;
var bool: aux6032_BOOL:: var_is_introduced ;
var bool: aux6033_BOOL:: var_is_introduced ;
var bool: aux6034_BOOL:: var_is_introduced ;
var bool: aux6035_BOOL:: var_is_introduced ;
var bool: aux6036_BOOL:: var_is_introduced ;
var {0,1}: aux6036_INTEGER :: var_is_introduced ;
var 3..45: aux6037:: var_is_introduced ;
var bool: aux6038_BOOL:: var_is_introduced ;
var bool: aux6039_BOOL:: var_is_introduced ;
var bool: aux6040_BOOL:: var_is_introduced ;
var bool: aux6041_BOOL:: var_is_introduced ;
var bool: aux6042_BOOL:: var_is_introduced ;
var {0,1}: aux6042_INTEGER :: var_is_introduced ;
var 3..45: aux6043:: var_is_introduced ;
var bool: aux6044_BOOL:: var_is_introduced ;
var bool: aux6045_BOOL:: var_is_introduced ;
var bool: aux6046_BOOL:: var_is_introduced ;
var bool: aux6047_BOOL:: var_is_introduced ;
var bool: aux6048_BOOL:: var_is_introduced ;
var {0,1}: aux6048_INTEGER :: var_is_introduced ;
var 2..44: aux6049:: var_is_introduced ;
var bool: aux6050_BOOL:: var_is_introduced ;
var bool: aux6051_BOOL:: var_is_introduced ;
var bool: aux6052_BOOL:: var_is_introduced ;
var {0,1}: aux6052_INTEGER :: var_is_introduced ;
var bool: aux6053_BOOL:: var_is_introduced ;
var 1..43: aux6054:: var_is_introduced ;
var bool: aux6055_BOOL:: var_is_introduced ;
var bool: aux6056_BOOL:: var_is_introduced ;
var bool: aux6057_BOOL:: var_is_introduced ;
var bool: aux6058_BOOL:: var_is_introduced ;
var bool: aux6059_BOOL:: var_is_introduced ;
var {0,1}: aux6059_INTEGER :: var_is_introduced ;
var 2..44: aux6060:: var_is_introduced ;
var bool: aux6061_BOOL:: var_is_introduced ;
var bool: aux6062_BOOL:: var_is_introduced ;
var bool: aux6063_BOOL:: var_is_introduced ;
var bool: aux6064_BOOL:: var_is_introduced ;
var bool: aux6065_BOOL:: var_is_introduced ;
var {0,1}: aux6065_INTEGER :: var_is_introduced ;
var 3..45: aux6066:: var_is_introduced ;
var bool: aux6067_BOOL:: var_is_introduced ;
var bool: aux6068_BOOL:: var_is_introduced ;
var bool: aux6069_BOOL:: var_is_introduced ;
var bool: aux6070_BOOL:: var_is_introduced ;
var bool: aux6071_BOOL:: var_is_introduced ;
var {0,1}: aux6071_INTEGER :: var_is_introduced ;
var 2..44: aux6072:: var_is_introduced ;
var bool: aux6073_BOOL:: var_is_introduced ;
var bool: aux6074_BOOL:: var_is_introduced ;
var bool: aux6075_BOOL:: var_is_introduced ;
var bool: aux6076_BOOL:: var_is_introduced ;
var bool: aux6077_BOOL:: var_is_introduced ;
var {0,1}: aux6077_INTEGER :: var_is_introduced ;
var 2..44: aux6078:: var_is_introduced ;
var bool: aux6079_BOOL:: var_is_introduced ;
var bool: aux6080_BOOL:: var_is_introduced ;
var bool: aux6081_BOOL:: var_is_introduced ;
var bool: aux6082_BOOL:: var_is_introduced ;
var bool: aux6083_BOOL:: var_is_introduced ;
var {0,1}: aux6083_INTEGER :: var_is_introduced ;
var 3..45: aux6084:: var_is_introduced ;
var bool: aux6085_BOOL:: var_is_introduced ;
var bool: aux6086_BOOL:: var_is_introduced ;
var bool: aux6087_BOOL:: var_is_introduced ;
var bool: aux6088_BOOL:: var_is_introduced ;
var bool: aux6089_BOOL:: var_is_introduced ;
var {0,1}: aux6089_INTEGER :: var_is_introduced ;
var 2..44: aux6090:: var_is_introduced ;
var bool: aux6091_BOOL:: var_is_introduced ;
var bool: aux6092_BOOL:: var_is_introduced ;
var bool: aux6093_BOOL:: var_is_introduced ;
var bool: aux6094_BOOL:: var_is_introduced ;
var bool: aux6095_BOOL:: var_is_introduced ;
var {0,1}: aux6095_INTEGER :: var_is_introduced ;
var 1..43: aux6096:: var_is_introduced ;
var bool: aux6097_BOOL:: var_is_introduced ;
var bool: aux6098_BOOL:: var_is_introduced ;
var bool: aux6099_BOOL:: var_is_introduced ;
var bool: aux6100_BOOL:: var_is_introduced ;
var bool: aux6101_BOOL:: var_is_introduced ;
var {0,1}: aux6101_INTEGER :: var_is_introduced ;
var 2..44: aux6102:: var_is_introduced ;
var bool: aux6103_BOOL:: var_is_introduced ;
var bool: aux6104_BOOL:: var_is_introduced ;
var bool: aux6105_BOOL:: var_is_introduced ;
var bool: aux6106_BOOL:: var_is_introduced ;
var bool: aux6107_BOOL:: var_is_introduced ;
var {0,1}: aux6107_INTEGER :: var_is_introduced ;
var 1..43: aux6108:: var_is_introduced ;
var bool: aux6109_BOOL:: var_is_introduced ;
var bool: aux6110_BOOL:: var_is_introduced ;
var bool: aux6111_BOOL:: var_is_introduced ;
var bool: aux6112_BOOL:: var_is_introduced ;
var bool: aux6113_BOOL:: var_is_introduced ;
var {0,1}: aux6113_INTEGER :: var_is_introduced ;
var 2..44: aux6114:: var_is_introduced ;
var bool: aux6115_BOOL:: var_is_introduced ;
var bool: aux6116_BOOL:: var_is_introduced ;
var bool: aux6117_BOOL:: var_is_introduced ;
var bool: aux6118_BOOL:: var_is_introduced ;
var bool: aux6119_BOOL:: var_is_introduced ;
var {0,1}: aux6119_INTEGER :: var_is_introduced ;
var 1..43: aux6120:: var_is_introduced ;
var bool: aux6121_BOOL:: var_is_introduced ;
var bool: aux6122_BOOL:: var_is_introduced ;
var bool: aux6123_BOOL:: var_is_introduced ;
var bool: aux6124_BOOL:: var_is_introduced ;
var bool: aux6125_BOOL:: var_is_introduced ;
var {0,1}: aux6125_INTEGER :: var_is_introduced ;
var 2..44: aux6126:: var_is_introduced ;
var bool: aux6127_BOOL:: var_is_introduced ;
var bool: aux6128_BOOL:: var_is_introduced ;
var bool: aux6129_BOOL:: var_is_introduced ;
var bool: aux6130_BOOL:: var_is_introduced ;
var bool: aux6131_BOOL:: var_is_introduced ;
var {0,1}: aux6131_INTEGER :: var_is_introduced ;
var 4..46: aux6132:: var_is_introduced ;
var bool: aux6133_BOOL:: var_is_introduced ;
var bool: aux6134_BOOL:: var_is_introduced ;
var bool: aux6135_BOOL:: var_is_introduced ;
var bool: aux6136_BOOL:: var_is_introduced ;
var bool: aux6137_BOOL:: var_is_introduced ;
var {0,1}: aux6137_INTEGER :: var_is_introduced ;
var 1..43: aux6138:: var_is_introduced ;
var bool: aux6139_BOOL:: var_is_introduced ;
var bool: aux6140_BOOL:: var_is_introduced ;
var bool: aux6141_BOOL:: var_is_introduced ;
var bool: aux6142_BOOL:: var_is_introduced ;
var bool: aux6143_BOOL:: var_is_introduced ;
var {0,1}: aux6143_INTEGER :: var_is_introduced ;
var 3..45: aux6144:: var_is_introduced ;
var bool: aux6145_BOOL:: var_is_introduced ;
var bool: aux6146_BOOL:: var_is_introduced ;
var bool: aux6147_BOOL:: var_is_introduced ;
var bool: aux6148_BOOL:: var_is_introduced ;
var bool: aux6149_BOOL:: var_is_introduced ;
var {0,1}: aux6149_INTEGER :: var_is_introduced ;
var 3..45: aux6150:: var_is_introduced ;
var bool: aux6151_BOOL:: var_is_introduced ;
var bool: aux6152_BOOL:: var_is_introduced ;
var bool: aux6153_BOOL:: var_is_introduced ;
var bool: aux6154_BOOL:: var_is_introduced ;
var bool: aux6155_BOOL:: var_is_introduced ;
var {0,1}: aux6155_INTEGER :: var_is_introduced ;
var 2..44: aux6156:: var_is_introduced ;
var bool: aux6157_BOOL:: var_is_introduced ;
var bool: aux6158_BOOL:: var_is_introduced ;
var bool: aux6159_BOOL:: var_is_introduced ;
var bool: aux6160_BOOL:: var_is_introduced ;
var bool: aux6161_BOOL:: var_is_introduced ;
var {0,1}: aux6161_INTEGER :: var_is_introduced ;
var 3..45: aux6162:: var_is_introduced ;
var bool: aux6163_BOOL:: var_is_introduced ;
var bool: aux6164_BOOL:: var_is_introduced ;
var bool: aux6165_BOOL:: var_is_introduced ;
var bool: aux6166_BOOL:: var_is_introduced ;
var bool: aux6167_BOOL:: var_is_introduced ;
var {0,1}: aux6167_INTEGER :: var_is_introduced ;
var 2..44: aux6168:: var_is_introduced ;
var bool: aux6169_BOOL:: var_is_introduced ;
var bool: aux6170_BOOL:: var_is_introduced ;
var bool: aux6171_BOOL:: var_is_introduced ;
var {0,1}: aux6171_INTEGER :: var_is_introduced ;
var bool: aux6172_BOOL:: var_is_introduced ;
var 1..43: aux6173:: var_is_introduced ;
var bool: aux6174_BOOL:: var_is_introduced ;
var bool: aux6175_BOOL:: var_is_introduced ;
var bool: aux6176_BOOL:: var_is_introduced ;
var bool: aux6177_BOOL:: var_is_introduced ;
var bool: aux6178_BOOL:: var_is_introduced ;
var {0,1}: aux6178_INTEGER :: var_is_introduced ;
var 2..44: aux6179:: var_is_introduced ;
var bool: aux6180_BOOL:: var_is_introduced ;
var bool: aux6181_BOOL:: var_is_introduced ;
var bool: aux6182_BOOL:: var_is_introduced ;
var bool: aux6183_BOOL:: var_is_introduced ;
var bool: aux6184_BOOL:: var_is_introduced ;
var {0,1}: aux6184_INTEGER :: var_is_introduced ;
var 3..45: aux6185:: var_is_introduced ;
var bool: aux6186_BOOL:: var_is_introduced ;
var bool: aux6187_BOOL:: var_is_introduced ;
var bool: aux6188_BOOL:: var_is_introduced ;
var bool: aux6189_BOOL:: var_is_introduced ;
var bool: aux6190_BOOL:: var_is_introduced ;
var {0,1}: aux6190_INTEGER :: var_is_introduced ;
var 2..44: aux6191:: var_is_introduced ;
var bool: aux6192_BOOL:: var_is_introduced ;
var bool: aux6193_BOOL:: var_is_introduced ;
var bool: aux6194_BOOL:: var_is_introduced ;
var bool: aux6195_BOOL:: var_is_introduced ;
var bool: aux6196_BOOL:: var_is_introduced ;
var {0,1}: aux6196_INTEGER :: var_is_introduced ;
var 2..44: aux6197:: var_is_introduced ;
var bool: aux6198_BOOL:: var_is_introduced ;
var bool: aux6199_BOOL:: var_is_introduced ;
var bool: aux6200_BOOL:: var_is_introduced ;
var bool: aux6201_BOOL:: var_is_introduced ;
var bool: aux6202_BOOL:: var_is_introduced ;
var {0,1}: aux6202_INTEGER :: var_is_introduced ;
var 3..45: aux6203:: var_is_introduced ;
var bool: aux6204_BOOL:: var_is_introduced ;
var bool: aux6205_BOOL:: var_is_introduced ;
var bool: aux6206_BOOL:: var_is_introduced ;
var bool: aux6207_BOOL:: var_is_introduced ;
var bool: aux6208_BOOL:: var_is_introduced ;
var {0,1}: aux6208_INTEGER :: var_is_introduced ;
var 1..43: aux6209:: var_is_introduced ;
var bool: aux6210_BOOL:: var_is_introduced ;
var bool: aux6211_BOOL:: var_is_introduced ;
var bool: aux6212_BOOL:: var_is_introduced ;
var bool: aux6213_BOOL:: var_is_introduced ;
var bool: aux6214_BOOL:: var_is_introduced ;
var {0,1}: aux6214_INTEGER :: var_is_introduced ;
var 2..44: aux6215:: var_is_introduced ;
var bool: aux6216_BOOL:: var_is_introduced ;
var bool: aux6217_BOOL:: var_is_introduced ;
var bool: aux6218_BOOL:: var_is_introduced ;
var bool: aux6219_BOOL:: var_is_introduced ;
var bool: aux6220_BOOL:: var_is_introduced ;
var {0,1}: aux6220_INTEGER :: var_is_introduced ;
var 1..43: aux6221:: var_is_introduced ;
var bool: aux6222_BOOL:: var_is_introduced ;
var bool: aux6223_BOOL:: var_is_introduced ;
var bool: aux6224_BOOL:: var_is_introduced ;
var bool: aux6225_BOOL:: var_is_introduced ;
var bool: aux6226_BOOL:: var_is_introduced ;
var {0,1}: aux6226_INTEGER :: var_is_introduced ;
var 2..44: aux6227:: var_is_introduced ;
var bool: aux6228_BOOL:: var_is_introduced ;
var bool: aux6229_BOOL:: var_is_introduced ;
var bool: aux6230_BOOL:: var_is_introduced ;
var bool: aux6231_BOOL:: var_is_introduced ;
var bool: aux6232_BOOL:: var_is_introduced ;
var {0,1}: aux6232_INTEGER :: var_is_introduced ;
var 2..44: aux6233:: var_is_introduced ;
var bool: aux6234_BOOL:: var_is_introduced ;
var bool: aux6235_BOOL:: var_is_introduced ;
var bool: aux6236_BOOL:: var_is_introduced ;
var bool: aux6237_BOOL:: var_is_introduced ;
var bool: aux6238_BOOL:: var_is_introduced ;
var {0,1}: aux6238_INTEGER :: var_is_introduced ;
var 1..43: aux6239:: var_is_introduced ;
var bool: aux6240_BOOL:: var_is_introduced ;
var bool: aux6241_BOOL:: var_is_introduced ;
var bool: aux6242_BOOL:: var_is_introduced ;
var bool: aux6243_BOOL:: var_is_introduced ;
var bool: aux6244_BOOL:: var_is_introduced ;
var {0,1}: aux6244_INTEGER :: var_is_introduced ;
var 2..44: aux6245:: var_is_introduced ;
var bool: aux6246_BOOL:: var_is_introduced ;
var bool: aux6247_BOOL:: var_is_introduced ;
var bool: aux6248_BOOL:: var_is_introduced ;
var bool: aux6249_BOOL:: var_is_introduced ;
var bool: aux6250_BOOL:: var_is_introduced ;
var {0,1}: aux6250_INTEGER :: var_is_introduced ;
var 4..46: aux6251:: var_is_introduced ;
var bool: aux6252_BOOL:: var_is_introduced ;
var bool: aux6253_BOOL:: var_is_introduced ;
var bool: aux6254_BOOL:: var_is_introduced ;
var bool: aux6255_BOOL:: var_is_introduced ;
var bool: aux6256_BOOL:: var_is_introduced ;
var {0,1}: aux6256_INTEGER :: var_is_introduced ;
var 1..43: aux6257:: var_is_introduced ;
var bool: aux6258_BOOL:: var_is_introduced ;
var bool: aux6259_BOOL:: var_is_introduced ;
var bool: aux6260_BOOL:: var_is_introduced ;
var bool: aux6261_BOOL:: var_is_introduced ;
var bool: aux6262_BOOL:: var_is_introduced ;
var {0,1}: aux6262_INTEGER :: var_is_introduced ;
var 3..45: aux6263:: var_is_introduced ;
var bool: aux6264_BOOL:: var_is_introduced ;
var bool: aux6265_BOOL:: var_is_introduced ;
var bool: aux6266_BOOL:: var_is_introduced ;
var bool: aux6267_BOOL:: var_is_introduced ;
var bool: aux6268_BOOL:: var_is_introduced ;
var {0,1}: aux6268_INTEGER :: var_is_introduced ;
var 3..45: aux6269:: var_is_introduced ;
var bool: aux6270_BOOL:: var_is_introduced ;
var bool: aux6271_BOOL:: var_is_introduced ;
var bool: aux6272_BOOL:: var_is_introduced ;
var bool: aux6273_BOOL:: var_is_introduced ;
var bool: aux6274_BOOL:: var_is_introduced ;
var {0,1}: aux6274_INTEGER :: var_is_introduced ;
var 2..44: aux6275:: var_is_introduced ;
var bool: aux6276_BOOL:: var_is_introduced ;
var bool: aux6277_BOOL:: var_is_introduced ;
var bool: aux6278_BOOL:: var_is_introduced ;
var bool: aux6279_BOOL:: var_is_introduced ;
var bool: aux6280_BOOL:: var_is_introduced ;
var {0,1}: aux6280_INTEGER :: var_is_introduced ;
var 3..45: aux6281:: var_is_introduced ;
var bool: aux6282_BOOL:: var_is_introduced ;
var bool: aux6283_BOOL:: var_is_introduced ;
var bool: aux6284_BOOL:: var_is_introduced ;
var bool: aux6285_BOOL:: var_is_introduced ;
var bool: aux6286_BOOL:: var_is_introduced ;
var {0,1}: aux6286_INTEGER :: var_is_introduced ;
var 2..44: aux6287:: var_is_introduced ;
var bool: aux6288_BOOL:: var_is_introduced ;
var bool: aux6289_BOOL:: var_is_introduced ;
var bool: aux6290_BOOL:: var_is_introduced ;
var {0,1}: aux6290_INTEGER :: var_is_introduced ;
var bool: aux6291_BOOL:: var_is_introduced ;
var 1..43: aux6292:: var_is_introduced ;
var bool: aux6293_BOOL:: var_is_introduced ;
var bool: aux6294_BOOL:: var_is_introduced ;
var bool: aux6295_BOOL:: var_is_introduced ;
var bool: aux6296_BOOL:: var_is_introduced ;
var bool: aux6297_BOOL:: var_is_introduced ;
var {0,1}: aux6297_INTEGER :: var_is_introduced ;
var 2..44: aux6298:: var_is_introduced ;
var bool: aux6299_BOOL:: var_is_introduced ;
var bool: aux6300_BOOL:: var_is_introduced ;
var bool: aux6301_BOOL:: var_is_introduced ;
var bool: aux6302_BOOL:: var_is_introduced ;
var bool: aux6303_BOOL:: var_is_introduced ;
var {0,1}: aux6303_INTEGER :: var_is_introduced ;
var 3..45: aux6304:: var_is_introduced ;
var bool: aux6305_BOOL:: var_is_introduced ;
var bool: aux6306_BOOL:: var_is_introduced ;
var bool: aux6307_BOOL:: var_is_introduced ;
var bool: aux6308_BOOL:: var_is_introduced ;
var bool: aux6309_BOOL:: var_is_introduced ;
var {0,1}: aux6309_INTEGER :: var_is_introduced ;
var 2..44: aux6310:: var_is_introduced ;
var bool: aux6311_BOOL:: var_is_introduced ;
var bool: aux6312_BOOL:: var_is_introduced ;
var bool: aux6313_BOOL:: var_is_introduced ;
var bool: aux6314_BOOL:: var_is_introduced ;
var bool: aux6315_BOOL:: var_is_introduced ;
var {0,1}: aux6315_INTEGER :: var_is_introduced ;
var 2..44: aux6316:: var_is_introduced ;
var bool: aux6317_BOOL:: var_is_introduced ;
var bool: aux6318_BOOL:: var_is_introduced ;
var bool: aux6319_BOOL:: var_is_introduced ;
var bool: aux6320_BOOL:: var_is_introduced ;
var bool: aux6321_BOOL:: var_is_introduced ;
var {0,1}: aux6321_INTEGER :: var_is_introduced ;
var 2..44: aux6322:: var_is_introduced ;
var bool: aux6323_BOOL:: var_is_introduced ;
var bool: aux6324_BOOL:: var_is_introduced ;
var bool: aux6325_BOOL:: var_is_introduced ;
var bool: aux6326_BOOL:: var_is_introduced ;
var bool: aux6327_BOOL:: var_is_introduced ;
var {0,1}: aux6327_INTEGER :: var_is_introduced ;
var 1..43: aux6328:: var_is_introduced ;
var bool: aux6329_BOOL:: var_is_introduced ;
var bool: aux6330_BOOL:: var_is_introduced ;
var bool: aux6331_BOOL:: var_is_introduced ;
var bool: aux6332_BOOL:: var_is_introduced ;
var bool: aux6333_BOOL:: var_is_introduced ;
var {0,1}: aux6333_INTEGER :: var_is_introduced ;
var 2..44: aux6334:: var_is_introduced ;
var bool: aux6335_BOOL:: var_is_introduced ;
var bool: aux6336_BOOL:: var_is_introduced ;
var bool: aux6337_BOOL:: var_is_introduced ;
var bool: aux6338_BOOL:: var_is_introduced ;
var bool: aux6339_BOOL:: var_is_introduced ;
var {0,1}: aux6339_INTEGER :: var_is_introduced ;
var 1..43: aux6340:: var_is_introduced ;
var bool: aux6341_BOOL:: var_is_introduced ;
var bool: aux6342_BOOL:: var_is_introduced ;
var bool: aux6343_BOOL:: var_is_introduced ;
var bool: aux6344_BOOL:: var_is_introduced ;
var bool: aux6345_BOOL:: var_is_introduced ;
var {0,1}: aux6345_INTEGER :: var_is_introduced ;
var 2..44: aux6346:: var_is_introduced ;
var bool: aux6347_BOOL:: var_is_introduced ;
var bool: aux6348_BOOL:: var_is_introduced ;
var bool: aux6349_BOOL:: var_is_introduced ;
var bool: aux6350_BOOL:: var_is_introduced ;
var bool: aux6351_BOOL:: var_is_introduced ;
var {0,1}: aux6351_INTEGER :: var_is_introduced ;
var 2..44: aux6352:: var_is_introduced ;
var bool: aux6353_BOOL:: var_is_introduced ;
var bool: aux6354_BOOL:: var_is_introduced ;
var bool: aux6355_BOOL:: var_is_introduced ;
var bool: aux6356_BOOL:: var_is_introduced ;
var bool: aux6357_BOOL:: var_is_introduced ;
var {0,1}: aux6357_INTEGER :: var_is_introduced ;
var 1..43: aux6358:: var_is_introduced ;
var bool: aux6359_BOOL:: var_is_introduced ;
var bool: aux6360_BOOL:: var_is_introduced ;
var bool: aux6361_BOOL:: var_is_introduced ;
var bool: aux6362_BOOL:: var_is_introduced ;
var bool: aux6363_BOOL:: var_is_introduced ;
var {0,1}: aux6363_INTEGER :: var_is_introduced ;
var 2..44: aux6364:: var_is_introduced ;
var bool: aux6365_BOOL:: var_is_introduced ;
var bool: aux6366_BOOL:: var_is_introduced ;
var bool: aux6367_BOOL:: var_is_introduced ;
var bool: aux6368_BOOL:: var_is_introduced ;
var bool: aux6369_BOOL:: var_is_introduced ;
var {0,1}: aux6369_INTEGER :: var_is_introduced ;
var 4..46: aux6370:: var_is_introduced ;
var bool: aux6371_BOOL:: var_is_introduced ;
var bool: aux6372_BOOL:: var_is_introduced ;
var bool: aux6373_BOOL:: var_is_introduced ;
var bool: aux6374_BOOL:: var_is_introduced ;
var bool: aux6375_BOOL:: var_is_introduced ;
var {0,1}: aux6375_INTEGER :: var_is_introduced ;
var 1..43: aux6376:: var_is_introduced ;
var bool: aux6377_BOOL:: var_is_introduced ;
var bool: aux6378_BOOL:: var_is_introduced ;
var bool: aux6379_BOOL:: var_is_introduced ;
var bool: aux6380_BOOL:: var_is_introduced ;
var bool: aux6381_BOOL:: var_is_introduced ;
var {0,1}: aux6381_INTEGER :: var_is_introduced ;
var 3..45: aux6382:: var_is_introduced ;
var bool: aux6383_BOOL:: var_is_introduced ;
var bool: aux6384_BOOL:: var_is_introduced ;
var bool: aux6385_BOOL:: var_is_introduced ;
var bool: aux6386_BOOL:: var_is_introduced ;
var bool: aux6387_BOOL:: var_is_introduced ;
var {0,1}: aux6387_INTEGER :: var_is_introduced ;
var 3..45: aux6388:: var_is_introduced ;
var bool: aux6389_BOOL:: var_is_introduced ;
var bool: aux6390_BOOL:: var_is_introduced ;
var bool: aux6391_BOOL:: var_is_introduced ;
var bool: aux6392_BOOL:: var_is_introduced ;
var bool: aux6393_BOOL:: var_is_introduced ;
var {0,1}: aux6393_INTEGER :: var_is_introduced ;
var 2..44: aux6394:: var_is_introduced ;
var bool: aux6395_BOOL:: var_is_introduced ;
var bool: aux6396_BOOL:: var_is_introduced ;
var bool: aux6397_BOOL:: var_is_introduced ;
var bool: aux6398_BOOL:: var_is_introduced ;
var bool: aux6399_BOOL:: var_is_introduced ;
var {0,1}: aux6399_INTEGER :: var_is_introduced ;
var 3..45: aux6400:: var_is_introduced ;
var bool: aux6401_BOOL:: var_is_introduced ;
var bool: aux6402_BOOL:: var_is_introduced ;
var bool: aux6403_BOOL:: var_is_introduced ;
var bool: aux6404_BOOL:: var_is_introduced ;
var bool: aux6405_BOOL:: var_is_introduced ;
var {0,1}: aux6405_INTEGER :: var_is_introduced ;
var 3..45: aux6406:: var_is_introduced ;
var bool: aux6407_BOOL:: var_is_introduced ;
var bool: aux6408_BOOL:: var_is_introduced ;
var bool: aux6409_BOOL:: var_is_introduced ;
var {0,1}: aux6409_INTEGER :: var_is_introduced ;
var bool: aux6410_BOOL:: var_is_introduced ;
var 1..43: aux6411:: var_is_introduced ;
var bool: aux6412_BOOL:: var_is_introduced ;
var bool: aux6413_BOOL:: var_is_introduced ;
var bool: aux6414_BOOL:: var_is_introduced ;
var bool: aux6415_BOOL:: var_is_introduced ;
var bool: aux6416_BOOL:: var_is_introduced ;
var {0,1}: aux6416_INTEGER :: var_is_introduced ;
var 2..44: aux6417:: var_is_introduced ;
var bool: aux6418_BOOL:: var_is_introduced ;
var bool: aux6419_BOOL:: var_is_introduced ;
var bool: aux6420_BOOL:: var_is_introduced ;
var bool: aux6421_BOOL:: var_is_introduced ;
var bool: aux6422_BOOL:: var_is_introduced ;
var {0,1}: aux6422_INTEGER :: var_is_introduced ;
var 3..45: aux6423:: var_is_introduced ;
var bool: aux6424_BOOL:: var_is_introduced ;
var bool: aux6425_BOOL:: var_is_introduced ;
var bool: aux6426_BOOL:: var_is_introduced ;
var bool: aux6427_BOOL:: var_is_introduced ;
var bool: aux6428_BOOL:: var_is_introduced ;
var {0,1}: aux6428_INTEGER :: var_is_introduced ;
var 2..44: aux6429:: var_is_introduced ;
var bool: aux6430_BOOL:: var_is_introduced ;
var bool: aux6431_BOOL:: var_is_introduced ;
var bool: aux6432_BOOL:: var_is_introduced ;
var bool: aux6433_BOOL:: var_is_introduced ;
var bool: aux6434_BOOL:: var_is_introduced ;
var {0,1}: aux6434_INTEGER :: var_is_introduced ;
var 2..44: aux6435:: var_is_introduced ;
var bool: aux6436_BOOL:: var_is_introduced ;
var bool: aux6437_BOOL:: var_is_introduced ;
var bool: aux6438_BOOL:: var_is_introduced ;
var bool: aux6439_BOOL:: var_is_introduced ;
var bool: aux6440_BOOL:: var_is_introduced ;
var {0,1}: aux6440_INTEGER :: var_is_introduced ;
var 3..45: aux6441:: var_is_introduced ;
var bool: aux6442_BOOL:: var_is_introduced ;
var bool: aux6443_BOOL:: var_is_introduced ;
var bool: aux6444_BOOL:: var_is_introduced ;
var bool: aux6445_BOOL:: var_is_introduced ;
var bool: aux6446_BOOL:: var_is_introduced ;
var {0,1}: aux6446_INTEGER :: var_is_introduced ;
var 2..44: aux6447:: var_is_introduced ;
var bool: aux6448_BOOL:: var_is_introduced ;
var bool: aux6449_BOOL:: var_is_introduced ;
var bool: aux6450_BOOL:: var_is_introduced ;
var bool: aux6451_BOOL:: var_is_introduced ;
var bool: aux6452_BOOL:: var_is_introduced ;
var {0,1}: aux6452_INTEGER :: var_is_introduced ;
var 1..43: aux6453:: var_is_introduced ;
var bool: aux6454_BOOL:: var_is_introduced ;
var bool: aux6455_BOOL:: var_is_introduced ;
var bool: aux6456_BOOL:: var_is_introduced ;
var bool: aux6457_BOOL:: var_is_introduced ;
var bool: aux6458_BOOL:: var_is_introduced ;
var {0,1}: aux6458_INTEGER :: var_is_introduced ;
var 2..44: aux6459:: var_is_introduced ;
var bool: aux6460_BOOL:: var_is_introduced ;
var bool: aux6461_BOOL:: var_is_introduced ;
var bool: aux6462_BOOL:: var_is_introduced ;
var bool: aux6463_BOOL:: var_is_introduced ;
var bool: aux6464_BOOL:: var_is_introduced ;
var {0,1}: aux6464_INTEGER :: var_is_introduced ;
var 1..43: aux6465:: var_is_introduced ;
var bool: aux6466_BOOL:: var_is_introduced ;
var bool: aux6467_BOOL:: var_is_introduced ;
var bool: aux6468_BOOL:: var_is_introduced ;
var bool: aux6469_BOOL:: var_is_introduced ;
var bool: aux6470_BOOL:: var_is_introduced ;
var {0,1}: aux6470_INTEGER :: var_is_introduced ;
var 2..44: aux6471:: var_is_introduced ;
var bool: aux6472_BOOL:: var_is_introduced ;
var bool: aux6473_BOOL:: var_is_introduced ;
var bool: aux6474_BOOL:: var_is_introduced ;
var bool: aux6475_BOOL:: var_is_introduced ;
var bool: aux6476_BOOL:: var_is_introduced ;
var {0,1}: aux6476_INTEGER :: var_is_introduced ;
var 2..44: aux6477:: var_is_introduced ;
var bool: aux6478_BOOL:: var_is_introduced ;
var bool: aux6479_BOOL:: var_is_introduced ;
var bool: aux6480_BOOL:: var_is_introduced ;
var bool: aux6481_BOOL:: var_is_introduced ;
var bool: aux6482_BOOL:: var_is_introduced ;
var {0,1}: aux6482_INTEGER :: var_is_introduced ;
var 1..43: aux6483:: var_is_introduced ;
var bool: aux6484_BOOL:: var_is_introduced ;
var bool: aux6485_BOOL:: var_is_introduced ;
var bool: aux6486_BOOL:: var_is_introduced ;
var bool: aux6487_BOOL:: var_is_introduced ;
var bool: aux6488_BOOL:: var_is_introduced ;
var {0,1}: aux6488_INTEGER :: var_is_introduced ;
var 2..44: aux6489:: var_is_introduced ;
var bool: aux6490_BOOL:: var_is_introduced ;
var bool: aux6491_BOOL:: var_is_introduced ;
var bool: aux6492_BOOL:: var_is_introduced ;
var bool: aux6493_BOOL:: var_is_introduced ;
var bool: aux6494_BOOL:: var_is_introduced ;
var {0,1}: aux6494_INTEGER :: var_is_introduced ;
var 4..46: aux6495:: var_is_introduced ;
var bool: aux6496_BOOL:: var_is_introduced ;
var bool: aux6497_BOOL:: var_is_introduced ;
var bool: aux6498_BOOL:: var_is_introduced ;
var bool: aux6499_BOOL:: var_is_introduced ;
var bool: aux6500_BOOL:: var_is_introduced ;
var {0,1}: aux6500_INTEGER :: var_is_introduced ;
var 1..43: aux6501:: var_is_introduced ;
var bool: aux6502_BOOL:: var_is_introduced ;
var bool: aux6503_BOOL:: var_is_introduced ;
var bool: aux6504_BOOL:: var_is_introduced ;
var bool: aux6505_BOOL:: var_is_introduced ;
var bool: aux6506_BOOL:: var_is_introduced ;
var {0,1}: aux6506_INTEGER :: var_is_introduced ;
var 3..45: aux6507:: var_is_introduced ;
var bool: aux6508_BOOL:: var_is_introduced ;
var bool: aux6509_BOOL:: var_is_introduced ;
var bool: aux6510_BOOL:: var_is_introduced ;
var bool: aux6511_BOOL:: var_is_introduced ;
var bool: aux6512_BOOL:: var_is_introduced ;
var {0,1}: aux6512_INTEGER :: var_is_introduced ;
var 2..44: aux6513:: var_is_introduced ;
var bool: aux6514_BOOL:: var_is_introduced ;
var bool: aux6515_BOOL:: var_is_introduced ;
var bool: aux6516_BOOL:: var_is_introduced ;
var bool: aux6517_BOOL:: var_is_introduced ;
var bool: aux6518_BOOL:: var_is_introduced ;
var {0,1}: aux6518_INTEGER :: var_is_introduced ;
var 3..45: aux6519:: var_is_introduced ;
var bool: aux6520_BOOL:: var_is_introduced ;
var bool: aux6521_BOOL:: var_is_introduced ;
var bool: aux6522_BOOL:: var_is_introduced ;
var bool: aux6523_BOOL:: var_is_introduced ;
var bool: aux6524_BOOL:: var_is_introduced ;
var {0,1}: aux6524_INTEGER :: var_is_introduced ;
var 3..45: aux6525:: var_is_introduced ;
var bool: aux6526_BOOL:: var_is_introduced ;
var bool: aux6527_BOOL:: var_is_introduced ;
var bool: aux6528_BOOL:: var_is_introduced ;
var {0,1}: aux6528_INTEGER :: var_is_introduced ;
var bool: aux6529_BOOL:: var_is_introduced ;
var 1..43: aux6530:: var_is_introduced ;
var bool: aux6531_BOOL:: var_is_introduced ;
var bool: aux6532_BOOL:: var_is_introduced ;
var bool: aux6533_BOOL:: var_is_introduced ;
var bool: aux6534_BOOL:: var_is_introduced ;
var bool: aux6535_BOOL:: var_is_introduced ;
var {0,1}: aux6535_INTEGER :: var_is_introduced ;
var 2..44: aux6536:: var_is_introduced ;
var bool: aux6537_BOOL:: var_is_introduced ;
var bool: aux6538_BOOL:: var_is_introduced ;
var bool: aux6539_BOOL:: var_is_introduced ;
var bool: aux6540_BOOL:: var_is_introduced ;
var bool: aux6541_BOOL:: var_is_introduced ;
var {0,1}: aux6541_INTEGER :: var_is_introduced ;
var 3..45: aux6542:: var_is_introduced ;
var bool: aux6543_BOOL:: var_is_introduced ;
var bool: aux6544_BOOL:: var_is_introduced ;
var bool: aux6545_BOOL:: var_is_introduced ;
var bool: aux6546_BOOL:: var_is_introduced ;
var bool: aux6547_BOOL:: var_is_introduced ;
var {0,1}: aux6547_INTEGER :: var_is_introduced ;
var 2..44: aux6548:: var_is_introduced ;
var bool: aux6549_BOOL:: var_is_introduced ;
var bool: aux6550_BOOL:: var_is_introduced ;
var bool: aux6551_BOOL:: var_is_introduced ;
var bool: aux6552_BOOL:: var_is_introduced ;
var bool: aux6553_BOOL:: var_is_introduced ;
var {0,1}: aux6553_INTEGER :: var_is_introduced ;
var 2..44: aux6554:: var_is_introduced ;
var bool: aux6555_BOOL:: var_is_introduced ;
var bool: aux6556_BOOL:: var_is_introduced ;
var bool: aux6557_BOOL:: var_is_introduced ;
var bool: aux6558_BOOL:: var_is_introduced ;
var bool: aux6559_BOOL:: var_is_introduced ;
var {0,1}: aux6559_INTEGER :: var_is_introduced ;
var 3..45: aux6560:: var_is_introduced ;
var bool: aux6561_BOOL:: var_is_introduced ;
var bool: aux6562_BOOL:: var_is_introduced ;
var bool: aux6563_BOOL:: var_is_introduced ;
var bool: aux6564_BOOL:: var_is_introduced ;
var bool: aux6565_BOOL:: var_is_introduced ;
var {0,1}: aux6565_INTEGER :: var_is_introduced ;
var 2..44: aux6566:: var_is_introduced ;
var bool: aux6567_BOOL:: var_is_introduced ;
var bool: aux6568_BOOL:: var_is_introduced ;
var bool: aux6569_BOOL:: var_is_introduced ;
var bool: aux6570_BOOL:: var_is_introduced ;
var bool: aux6571_BOOL:: var_is_introduced ;
var {0,1}: aux6571_INTEGER :: var_is_introduced ;
var 1..43: aux6572:: var_is_introduced ;
var bool: aux6573_BOOL:: var_is_introduced ;
var bool: aux6574_BOOL:: var_is_introduced ;
var bool: aux6575_BOOL:: var_is_introduced ;
var bool: aux6576_BOOL:: var_is_introduced ;
var bool: aux6577_BOOL:: var_is_introduced ;
var {0,1}: aux6577_INTEGER :: var_is_introduced ;
var 2..44: aux6578:: var_is_introduced ;
var bool: aux6579_BOOL:: var_is_introduced ;
var bool: aux6580_BOOL:: var_is_introduced ;
var bool: aux6581_BOOL:: var_is_introduced ;
var bool: aux6582_BOOL:: var_is_introduced ;
var bool: aux6583_BOOL:: var_is_introduced ;
var {0,1}: aux6583_INTEGER :: var_is_introduced ;
var 1..43: aux6584:: var_is_introduced ;
var bool: aux6585_BOOL:: var_is_introduced ;
var bool: aux6586_BOOL:: var_is_introduced ;
var bool: aux6587_BOOL:: var_is_introduced ;
var bool: aux6588_BOOL:: var_is_introduced ;
var bool: aux6589_BOOL:: var_is_introduced ;
var {0,1}: aux6589_INTEGER :: var_is_introduced ;
var 2..44: aux6590:: var_is_introduced ;
var bool: aux6591_BOOL:: var_is_introduced ;
var bool: aux6592_BOOL:: var_is_introduced ;
var bool: aux6593_BOOL:: var_is_introduced ;
var bool: aux6594_BOOL:: var_is_introduced ;
var bool: aux6595_BOOL:: var_is_introduced ;
var {0,1}: aux6595_INTEGER :: var_is_introduced ;
var 2..44: aux6596:: var_is_introduced ;
var bool: aux6597_BOOL:: var_is_introduced ;
var bool: aux6598_BOOL:: var_is_introduced ;
var bool: aux6599_BOOL:: var_is_introduced ;
var bool: aux6600_BOOL:: var_is_introduced ;
var bool: aux6601_BOOL:: var_is_introduced ;
var {0,1}: aux6601_INTEGER :: var_is_introduced ;
var 1..43: aux6602:: var_is_introduced ;
var bool: aux6603_BOOL:: var_is_introduced ;
var bool: aux6604_BOOL:: var_is_introduced ;
var bool: aux6605_BOOL:: var_is_introduced ;
var bool: aux6606_BOOL:: var_is_introduced ;
var bool: aux6607_BOOL:: var_is_introduced ;
var {0,1}: aux6607_INTEGER :: var_is_introduced ;
var 2..44: aux6608:: var_is_introduced ;
var bool: aux6609_BOOL:: var_is_introduced ;
var bool: aux6610_BOOL:: var_is_introduced ;
var bool: aux6611_BOOL:: var_is_introduced ;
var bool: aux6612_BOOL:: var_is_introduced ;
var bool: aux6613_BOOL:: var_is_introduced ;
var {0,1}: aux6613_INTEGER :: var_is_introduced ;
var 4..46: aux6614:: var_is_introduced ;
var bool: aux6615_BOOL:: var_is_introduced ;
var bool: aux6616_BOOL:: var_is_introduced ;
var bool: aux6617_BOOL:: var_is_introduced ;
var bool: aux6618_BOOL:: var_is_introduced ;
var bool: aux6619_BOOL:: var_is_introduced ;
var {0,1}: aux6619_INTEGER :: var_is_introduced ;
var 1..43: aux6620:: var_is_introduced ;
var bool: aux6621_BOOL:: var_is_introduced ;
var bool: aux6622_BOOL:: var_is_introduced ;
var bool: aux6623_BOOL:: var_is_introduced ;
var bool: aux6624_BOOL:: var_is_introduced ;
var bool: aux6625_BOOL:: var_is_introduced ;
var {0,1}: aux6625_INTEGER :: var_is_introduced ;
var 3..45: aux6626:: var_is_introduced ;
var bool: aux6627_BOOL:: var_is_introduced ;
var bool: aux6628_BOOL:: var_is_introduced ;
var bool: aux6629_BOOL:: var_is_introduced ;
var bool: aux6630_BOOL:: var_is_introduced ;
var bool: aux6631_BOOL:: var_is_introduced ;
var {0,1}: aux6631_INTEGER :: var_is_introduced ;
var 3..45: aux6632:: var_is_introduced ;
var bool: aux6633_BOOL:: var_is_introduced ;
var bool: aux6634_BOOL:: var_is_introduced ;
var bool: aux6635_BOOL:: var_is_introduced ;
var bool: aux6636_BOOL:: var_is_introduced ;
var bool: aux6637_BOOL:: var_is_introduced ;
var {0,1}: aux6637_INTEGER :: var_is_introduced ;
var 2..44: aux6638:: var_is_introduced ;
var bool: aux6639_BOOL:: var_is_introduced ;
var bool: aux6640_BOOL:: var_is_introduced ;
var bool: aux6641_BOOL:: var_is_introduced ;
var bool: aux6642_BOOL:: var_is_introduced ;
var bool: aux6643_BOOL:: var_is_introduced ;
var {0,1}: aux6643_INTEGER :: var_is_introduced ;
var 3..45: aux6644:: var_is_introduced ;
var bool: aux6645_BOOL:: var_is_introduced ;
var bool: aux6646_BOOL:: var_is_introduced ;
var bool: aux6647_BOOL:: var_is_introduced ;
var {0,1}: aux6647_INTEGER :: var_is_introduced ;
var bool: aux6648_BOOL:: var_is_introduced ;
var 1..43: aux6649:: var_is_introduced ;
var bool: aux6650_BOOL:: var_is_introduced ;
var bool: aux6651_BOOL:: var_is_introduced ;
var bool: aux6652_BOOL:: var_is_introduced ;
var bool: aux6653_BOOL:: var_is_introduced ;
var bool: aux6654_BOOL:: var_is_introduced ;
var {0,1}: aux6654_INTEGER :: var_is_introduced ;
var 2..44: aux6655:: var_is_introduced ;
var bool: aux6656_BOOL:: var_is_introduced ;
var bool: aux6657_BOOL:: var_is_introduced ;
var bool: aux6658_BOOL:: var_is_introduced ;
var bool: aux6659_BOOL:: var_is_introduced ;
var bool: aux6660_BOOL:: var_is_introduced ;
var {0,1}: aux6660_INTEGER :: var_is_introduced ;
var 3..45: aux6661:: var_is_introduced ;
var bool: aux6662_BOOL:: var_is_introduced ;
var bool: aux6663_BOOL:: var_is_introduced ;
var bool: aux6664_BOOL:: var_is_introduced ;
var bool: aux6665_BOOL:: var_is_introduced ;
var bool: aux6666_BOOL:: var_is_introduced ;
var {0,1}: aux6666_INTEGER :: var_is_introduced ;
var 2..44: aux6667:: var_is_introduced ;
var bool: aux6668_BOOL:: var_is_introduced ;
var bool: aux6669_BOOL:: var_is_introduced ;
var bool: aux6670_BOOL:: var_is_introduced ;
var bool: aux6671_BOOL:: var_is_introduced ;
var bool: aux6672_BOOL:: var_is_introduced ;
var {0,1}: aux6672_INTEGER :: var_is_introduced ;
var 2..44: aux6673:: var_is_introduced ;
var bool: aux6674_BOOL:: var_is_introduced ;
var bool: aux6675_BOOL:: var_is_introduced ;
var bool: aux6676_BOOL:: var_is_introduced ;
var bool: aux6677_BOOL:: var_is_introduced ;
var bool: aux6678_BOOL:: var_is_introduced ;
var {0,1}: aux6678_INTEGER :: var_is_introduced ;
var 3..45: aux6679:: var_is_introduced ;
var bool: aux6680_BOOL:: var_is_introduced ;
var bool: aux6681_BOOL:: var_is_introduced ;
var bool: aux6682_BOOL:: var_is_introduced ;
var bool: aux6683_BOOL:: var_is_introduced ;
var bool: aux6684_BOOL:: var_is_introduced ;
var {0,1}: aux6684_INTEGER :: var_is_introduced ;
var 2..44: aux6685:: var_is_introduced ;
var bool: aux6686_BOOL:: var_is_introduced ;
var bool: aux6687_BOOL:: var_is_introduced ;
var bool: aux6688_BOOL:: var_is_introduced ;
var bool: aux6689_BOOL:: var_is_introduced ;
var bool: aux6690_BOOL:: var_is_introduced ;
var {0,1}: aux6690_INTEGER :: var_is_introduced ;
var 2..44: aux6691:: var_is_introduced ;
var bool: aux6692_BOOL:: var_is_introduced ;
var bool: aux6693_BOOL:: var_is_introduced ;
var bool: aux6694_BOOL:: var_is_introduced ;
var bool: aux6695_BOOL:: var_is_introduced ;
var bool: aux6696_BOOL:: var_is_introduced ;
var {0,1}: aux6696_INTEGER :: var_is_introduced ;
var 1..43: aux6697:: var_is_introduced ;
var bool: aux6698_BOOL:: var_is_introduced ;
var bool: aux6699_BOOL:: var_is_introduced ;
var bool: aux6700_BOOL:: var_is_introduced ;
var bool: aux6701_BOOL:: var_is_introduced ;
var bool: aux6702_BOOL:: var_is_introduced ;
var {0,1}: aux6702_INTEGER :: var_is_introduced ;
var 2..44: aux6703:: var_is_introduced ;
var bool: aux6704_BOOL:: var_is_introduced ;
var bool: aux6705_BOOL:: var_is_introduced ;
var bool: aux6706_BOOL:: var_is_introduced ;
var bool: aux6707_BOOL:: var_is_introduced ;
var bool: aux6708_BOOL:: var_is_introduced ;
var {0,1}: aux6708_INTEGER :: var_is_introduced ;
var 2..44: aux6709:: var_is_introduced ;
var bool: aux6710_BOOL:: var_is_introduced ;
var bool: aux6711_BOOL:: var_is_introduced ;
var bool: aux6712_BOOL:: var_is_introduced ;
var bool: aux6713_BOOL:: var_is_introduced ;
var bool: aux6714_BOOL:: var_is_introduced ;
var {0,1}: aux6714_INTEGER :: var_is_introduced ;
var 1..43: aux6715:: var_is_introduced ;
var bool: aux6716_BOOL:: var_is_introduced ;
var bool: aux6717_BOOL:: var_is_introduced ;
var bool: aux6718_BOOL:: var_is_introduced ;
var bool: aux6719_BOOL:: var_is_introduced ;
var bool: aux6720_BOOL:: var_is_introduced ;
var {0,1}: aux6720_INTEGER :: var_is_introduced ;
var 2..44: aux6721:: var_is_introduced ;
var bool: aux6722_BOOL:: var_is_introduced ;
var bool: aux6723_BOOL:: var_is_introduced ;
var bool: aux6724_BOOL:: var_is_introduced ;
var bool: aux6725_BOOL:: var_is_introduced ;
var bool: aux6726_BOOL:: var_is_introduced ;
var {0,1}: aux6726_INTEGER :: var_is_introduced ;
var 4..46: aux6727:: var_is_introduced ;
var bool: aux6728_BOOL:: var_is_introduced ;
var bool: aux6729_BOOL:: var_is_introduced ;
var bool: aux6730_BOOL:: var_is_introduced ;
var bool: aux6731_BOOL:: var_is_introduced ;
var bool: aux6732_BOOL:: var_is_introduced ;
var {0,1}: aux6732_INTEGER :: var_is_introduced ;
var 1..43: aux6733:: var_is_introduced ;
var bool: aux6734_BOOL:: var_is_introduced ;
var bool: aux6735_BOOL:: var_is_introduced ;
var bool: aux6736_BOOL:: var_is_introduced ;
var bool: aux6737_BOOL:: var_is_introduced ;
var bool: aux6738_BOOL:: var_is_introduced ;
var {0,1}: aux6738_INTEGER :: var_is_introduced ;
var 3..45: aux6739:: var_is_introduced ;
var bool: aux6740_BOOL:: var_is_introduced ;
var bool: aux6741_BOOL:: var_is_introduced ;
var bool: aux6742_BOOL:: var_is_introduced ;
var bool: aux6743_BOOL:: var_is_introduced ;
var bool: aux6744_BOOL:: var_is_introduced ;
var {0,1}: aux6744_INTEGER :: var_is_introduced ;
var 3..45: aux6745:: var_is_introduced ;
var bool: aux6746_BOOL:: var_is_introduced ;
var bool: aux6747_BOOL:: var_is_introduced ;
var bool: aux6748_BOOL:: var_is_introduced ;
var bool: aux6749_BOOL:: var_is_introduced ;
var bool: aux6750_BOOL:: var_is_introduced ;
var {0,1}: aux6750_INTEGER :: var_is_introduced ;
var 2..44: aux6751:: var_is_introduced ;
var bool: aux6752_BOOL:: var_is_introduced ;
var bool: aux6753_BOOL:: var_is_introduced ;
var bool: aux6754_BOOL:: var_is_introduced ;
var bool: aux6755_BOOL:: var_is_introduced ;
var bool: aux6756_BOOL:: var_is_introduced ;
var {0,1}: aux6756_INTEGER :: var_is_introduced ;
var 3..45: aux6757:: var_is_introduced ;
var bool: aux6758_BOOL:: var_is_introduced ;
var bool: aux6759_BOOL:: var_is_introduced ;
var bool: aux6760_BOOL:: var_is_introduced ;
var bool: aux6761_BOOL:: var_is_introduced ;
var bool: aux6762_BOOL:: var_is_introduced ;
var {0,1}: aux6762_INTEGER :: var_is_introduced ;
var 1..43: aux6763:: var_is_introduced ;
var bool: aux6764_BOOL:: var_is_introduced ;
var bool: aux6765_BOOL:: var_is_introduced ;
var bool: aux6766_BOOL:: var_is_introduced ;
var {0,1}: aux6766_INTEGER :: var_is_introduced ;
var bool: aux6767_BOOL:: var_is_introduced ;
var 2..44: aux6768:: var_is_introduced ;
var bool: aux6769_BOOL:: var_is_introduced ;
var bool: aux6770_BOOL:: var_is_introduced ;
var bool: aux6771_BOOL:: var_is_introduced ;
var bool: aux6772_BOOL:: var_is_introduced ;
var bool: aux6773_BOOL:: var_is_introduced ;
var {0,1}: aux6773_INTEGER :: var_is_introduced ;
var 3..45: aux6774:: var_is_introduced ;
var bool: aux6775_BOOL:: var_is_introduced ;
var bool: aux6776_BOOL:: var_is_introduced ;
var bool: aux6777_BOOL:: var_is_introduced ;
var bool: aux6778_BOOL:: var_is_introduced ;
var bool: aux6779_BOOL:: var_is_introduced ;
var {0,1}: aux6779_INTEGER :: var_is_introduced ;
var 2..44: aux6780:: var_is_introduced ;
var bool: aux6781_BOOL:: var_is_introduced ;
var bool: aux6782_BOOL:: var_is_introduced ;
var bool: aux6783_BOOL:: var_is_introduced ;
var bool: aux6784_BOOL:: var_is_introduced ;
var bool: aux6785_BOOL:: var_is_introduced ;
var {0,1}: aux6785_INTEGER :: var_is_introduced ;
var 2..44: aux6786:: var_is_introduced ;
var bool: aux6787_BOOL:: var_is_introduced ;
var bool: aux6788_BOOL:: var_is_introduced ;
var bool: aux6789_BOOL:: var_is_introduced ;
var bool: aux6790_BOOL:: var_is_introduced ;
var bool: aux6791_BOOL:: var_is_introduced ;
var {0,1}: aux6791_INTEGER :: var_is_introduced ;
var 3..45: aux6792:: var_is_introduced ;
var bool: aux6793_BOOL:: var_is_introduced ;
var bool: aux6794_BOOL:: var_is_introduced ;
var bool: aux6795_BOOL:: var_is_introduced ;
var bool: aux6796_BOOL:: var_is_introduced ;
var bool: aux6797_BOOL:: var_is_introduced ;
var {0,1}: aux6797_INTEGER :: var_is_introduced ;
var 2..44: aux6798:: var_is_introduced ;
var bool: aux6799_BOOL:: var_is_introduced ;
var bool: aux6800_BOOL:: var_is_introduced ;
var bool: aux6801_BOOL:: var_is_introduced ;
var bool: aux6802_BOOL:: var_is_introduced ;
var bool: aux6803_BOOL:: var_is_introduced ;
var {0,1}: aux6803_INTEGER :: var_is_introduced ;
var 1..43: aux6804:: var_is_introduced ;
var bool: aux6805_BOOL:: var_is_introduced ;
var bool: aux6806_BOOL:: var_is_introduced ;
var bool: aux6807_BOOL:: var_is_introduced ;
var bool: aux6808_BOOL:: var_is_introduced ;
var bool: aux6809_BOOL:: var_is_introduced ;
var {0,1}: aux6809_INTEGER :: var_is_introduced ;
var 2..44: aux6810:: var_is_introduced ;
var bool: aux6811_BOOL:: var_is_introduced ;
var bool: aux6812_BOOL:: var_is_introduced ;
var bool: aux6813_BOOL:: var_is_introduced ;
var bool: aux6814_BOOL:: var_is_introduced ;
var bool: aux6815_BOOL:: var_is_introduced ;
var {0,1}: aux6815_INTEGER :: var_is_introduced ;
var 1..43: aux6816:: var_is_introduced ;
var bool: aux6817_BOOL:: var_is_introduced ;
var bool: aux6818_BOOL:: var_is_introduced ;
var bool: aux6819_BOOL:: var_is_introduced ;
var bool: aux6820_BOOL:: var_is_introduced ;
var bool: aux6821_BOOL:: var_is_introduced ;
var {0,1}: aux6821_INTEGER :: var_is_introduced ;
var 2..44: aux6822:: var_is_introduced ;
var bool: aux6823_BOOL:: var_is_introduced ;
var bool: aux6824_BOOL:: var_is_introduced ;
var bool: aux6825_BOOL:: var_is_introduced ;
var bool: aux6826_BOOL:: var_is_introduced ;
var bool: aux6827_BOOL:: var_is_introduced ;
var {0,1}: aux6827_INTEGER :: var_is_introduced ;
var 2..44: aux6828:: var_is_introduced ;
var bool: aux6829_BOOL:: var_is_introduced ;
var bool: aux6830_BOOL:: var_is_introduced ;
var bool: aux6831_BOOL:: var_is_introduced ;
var bool: aux6832_BOOL:: var_is_introduced ;
var bool: aux6833_BOOL:: var_is_introduced ;
var {0,1}: aux6833_INTEGER :: var_is_introduced ;
var 1..43: aux6834:: var_is_introduced ;
var bool: aux6835_BOOL:: var_is_introduced ;
var bool: aux6836_BOOL:: var_is_introduced ;
var bool: aux6837_BOOL:: var_is_introduced ;
var bool: aux6838_BOOL:: var_is_introduced ;
var bool: aux6839_BOOL:: var_is_introduced ;
var {0,1}: aux6839_INTEGER :: var_is_introduced ;
var 2..44: aux6840:: var_is_introduced ;
var bool: aux6841_BOOL:: var_is_introduced ;
var bool: aux6842_BOOL:: var_is_introduced ;
var bool: aux6843_BOOL:: var_is_introduced ;
var bool: aux6844_BOOL:: var_is_introduced ;
var bool: aux6845_BOOL:: var_is_introduced ;
var {0,1}: aux6845_INTEGER :: var_is_introduced ;
var 4..46: aux6846:: var_is_introduced ;
var bool: aux6847_BOOL:: var_is_introduced ;
var bool: aux6848_BOOL:: var_is_introduced ;
var bool: aux6849_BOOL:: var_is_introduced ;
var bool: aux6850_BOOL:: var_is_introduced ;
var bool: aux6851_BOOL:: var_is_introduced ;
var {0,1}: aux6851_INTEGER :: var_is_introduced ;
var 1..43: aux6852:: var_is_introduced ;
var bool: aux6853_BOOL:: var_is_introduced ;
var bool: aux6854_BOOL:: var_is_introduced ;
var bool: aux6855_BOOL:: var_is_introduced ;
var bool: aux6856_BOOL:: var_is_introduced ;
var bool: aux6857_BOOL:: var_is_introduced ;
var {0,1}: aux6857_INTEGER :: var_is_introduced ;
var 3..45: aux6858:: var_is_introduced ;
var bool: aux6859_BOOL:: var_is_introduced ;
var bool: aux6860_BOOL:: var_is_introduced ;
var bool: aux6861_BOOL:: var_is_introduced ;
var bool: aux6862_BOOL:: var_is_introduced ;
var bool: aux6863_BOOL:: var_is_introduced ;
var {0,1}: aux6863_INTEGER :: var_is_introduced ;
var 3..45: aux6864:: var_is_introduced ;
var bool: aux6865_BOOL:: var_is_introduced ;
var bool: aux6866_BOOL:: var_is_introduced ;
var bool: aux6867_BOOL:: var_is_introduced ;
var bool: aux6868_BOOL:: var_is_introduced ;
var bool: aux6869_BOOL:: var_is_introduced ;
var {0,1}: aux6869_INTEGER :: var_is_introduced ;
var 2..44: aux6870:: var_is_introduced ;
var bool: aux6871_BOOL:: var_is_introduced ;
var bool: aux6872_BOOL:: var_is_introduced ;
var bool: aux6873_BOOL:: var_is_introduced ;
var bool: aux6874_BOOL:: var_is_introduced ;
var bool: aux6875_BOOL:: var_is_introduced ;
var {0,1}: aux6875_INTEGER :: var_is_introduced ;
var 3..45: aux6876:: var_is_introduced ;
var bool: aux6877_BOOL:: var_is_introduced ;
var bool: aux6878_BOOL:: var_is_introduced ;
var bool: aux6879_BOOL:: var_is_introduced ;
var bool: aux6880_BOOL:: var_is_introduced ;
var bool: aux6881_BOOL:: var_is_introduced ;
var {0,1}: aux6881_INTEGER :: var_is_introduced ;
var 1..43: aux6882:: var_is_introduced ;
var bool: aux6883_BOOL:: var_is_introduced ;
var bool: aux6884_BOOL:: var_is_introduced ;
var bool: aux6885_BOOL:: var_is_introduced ;
var {0,1}: aux6885_INTEGER :: var_is_introduced ;
var bool: aux6886_BOOL:: var_is_introduced ;
var 1..43: aux6887:: var_is_introduced ;
var bool: aux6888_BOOL:: var_is_introduced ;
var bool: aux6889_BOOL:: var_is_introduced ;
var bool: aux6890_BOOL:: var_is_introduced ;
var bool: aux6891_BOOL:: var_is_introduced ;
var bool: aux6892_BOOL:: var_is_introduced ;
var {0,1}: aux6892_INTEGER :: var_is_introduced ;
var 2..44: aux6893:: var_is_introduced ;
var bool: aux6894_BOOL:: var_is_introduced ;
var bool: aux6895_BOOL:: var_is_introduced ;
var bool: aux6896_BOOL:: var_is_introduced ;
var bool: aux6897_BOOL:: var_is_introduced ;
var bool: aux6898_BOOL:: var_is_introduced ;
var {0,1}: aux6898_INTEGER :: var_is_introduced ;
var 3..45: aux6899:: var_is_introduced ;
var bool: aux6900_BOOL:: var_is_introduced ;
var bool: aux6901_BOOL:: var_is_introduced ;
var bool: aux6902_BOOL:: var_is_introduced ;
var bool: aux6903_BOOL:: var_is_introduced ;
var bool: aux6904_BOOL:: var_is_introduced ;
var {0,1}: aux6904_INTEGER :: var_is_introduced ;
var 2..44: aux6905:: var_is_introduced ;
var bool: aux6906_BOOL:: var_is_introduced ;
var bool: aux6907_BOOL:: var_is_introduced ;
var bool: aux6908_BOOL:: var_is_introduced ;
var bool: aux6909_BOOL:: var_is_introduced ;
var bool: aux6910_BOOL:: var_is_introduced ;
var {0,1}: aux6910_INTEGER :: var_is_introduced ;
var 2..44: aux6911:: var_is_introduced ;
var bool: aux6912_BOOL:: var_is_introduced ;
var bool: aux6913_BOOL:: var_is_introduced ;
var bool: aux6914_BOOL:: var_is_introduced ;
var bool: aux6915_BOOL:: var_is_introduced ;
var bool: aux6916_BOOL:: var_is_introduced ;
var {0,1}: aux6916_INTEGER :: var_is_introduced ;
var 3..45: aux6917:: var_is_introduced ;
var bool: aux6918_BOOL:: var_is_introduced ;
var bool: aux6919_BOOL:: var_is_introduced ;
var bool: aux6920_BOOL:: var_is_introduced ;
var bool: aux6921_BOOL:: var_is_introduced ;
var bool: aux6922_BOOL:: var_is_introduced ;
var {0,1}: aux6922_INTEGER :: var_is_introduced ;
var 2..44: aux6923:: var_is_introduced ;
var bool: aux6924_BOOL:: var_is_introduced ;
var bool: aux6925_BOOL:: var_is_introduced ;
var bool: aux6926_BOOL:: var_is_introduced ;
var bool: aux6927_BOOL:: var_is_introduced ;
var bool: aux6928_BOOL:: var_is_introduced ;
var {0,1}: aux6928_INTEGER :: var_is_introduced ;
var 1..43: aux6929:: var_is_introduced ;
var bool: aux6930_BOOL:: var_is_introduced ;
var bool: aux6931_BOOL:: var_is_introduced ;
var bool: aux6932_BOOL:: var_is_introduced ;
var bool: aux6933_BOOL:: var_is_introduced ;
var bool: aux6934_BOOL:: var_is_introduced ;
var {0,1}: aux6934_INTEGER :: var_is_introduced ;
var 2..44: aux6935:: var_is_introduced ;
var bool: aux6936_BOOL:: var_is_introduced ;
var bool: aux6937_BOOL:: var_is_introduced ;
var bool: aux6938_BOOL:: var_is_introduced ;
var bool: aux6939_BOOL:: var_is_introduced ;
var bool: aux6940_BOOL:: var_is_introduced ;
var {0,1}: aux6940_INTEGER :: var_is_introduced ;
var 1..43: aux6941:: var_is_introduced ;
var bool: aux6942_BOOL:: var_is_introduced ;
var bool: aux6943_BOOL:: var_is_introduced ;
var bool: aux6944_BOOL:: var_is_introduced ;
var bool: aux6945_BOOL:: var_is_introduced ;
var bool: aux6946_BOOL:: var_is_introduced ;
var {0,1}: aux6946_INTEGER :: var_is_introduced ;
var 2..44: aux6947:: var_is_introduced ;
var bool: aux6948_BOOL:: var_is_introduced ;
var bool: aux6949_BOOL:: var_is_introduced ;
var bool: aux6950_BOOL:: var_is_introduced ;
var bool: aux6951_BOOL:: var_is_introduced ;
var bool: aux6952_BOOL:: var_is_introduced ;
var {0,1}: aux6952_INTEGER :: var_is_introduced ;
var 2..44: aux6953:: var_is_introduced ;
var bool: aux6954_BOOL:: var_is_introduced ;
var bool: aux6955_BOOL:: var_is_introduced ;
var bool: aux6956_BOOL:: var_is_introduced ;
var bool: aux6957_BOOL:: var_is_introduced ;
var bool: aux6958_BOOL:: var_is_introduced ;
var {0,1}: aux6958_INTEGER :: var_is_introduced ;
var 1..43: aux6959:: var_is_introduced ;
var bool: aux6960_BOOL:: var_is_introduced ;
var bool: aux6961_BOOL:: var_is_introduced ;
var bool: aux6962_BOOL:: var_is_introduced ;
var bool: aux6963_BOOL:: var_is_introduced ;
var bool: aux6964_BOOL:: var_is_introduced ;
var {0,1}: aux6964_INTEGER :: var_is_introduced ;
var 2..44: aux6965:: var_is_introduced ;
var bool: aux6966_BOOL:: var_is_introduced ;
var bool: aux6967_BOOL:: var_is_introduced ;
var bool: aux6968_BOOL:: var_is_introduced ;
var bool: aux6969_BOOL:: var_is_introduced ;
var bool: aux6970_BOOL:: var_is_introduced ;
var {0,1}: aux6970_INTEGER :: var_is_introduced ;
var 1..43: aux6971:: var_is_introduced ;
var bool: aux6972_BOOL:: var_is_introduced ;
var bool: aux6973_BOOL:: var_is_introduced ;
var bool: aux6974_BOOL:: var_is_introduced ;
var bool: aux6975_BOOL:: var_is_introduced ;
var bool: aux6976_BOOL:: var_is_introduced ;
var {0,1}: aux6976_INTEGER :: var_is_introduced ;
var 3..45: aux6977:: var_is_introduced ;
var bool: aux6978_BOOL:: var_is_introduced ;
var bool: aux6979_BOOL:: var_is_introduced ;
var bool: aux6980_BOOL:: var_is_introduced ;
var bool: aux6981_BOOL:: var_is_introduced ;
var bool: aux6982_BOOL:: var_is_introduced ;
var {0,1}: aux6982_INTEGER :: var_is_introduced ;
var 3..45: aux6983:: var_is_introduced ;
var bool: aux6984_BOOL:: var_is_introduced ;
var bool: aux6985_BOOL:: var_is_introduced ;
var bool: aux6986_BOOL:: var_is_introduced ;
var bool: aux6987_BOOL:: var_is_introduced ;
var bool: aux6988_BOOL:: var_is_introduced ;
var {0,1}: aux6988_INTEGER :: var_is_introduced ;
var 2..44: aux6989:: var_is_introduced ;
var bool: aux6990_BOOL:: var_is_introduced ;
var bool: aux6991_BOOL:: var_is_introduced ;
var bool: aux6992_BOOL:: var_is_introduced ;
var bool: aux6993_BOOL:: var_is_introduced ;
var bool: aux6994_BOOL:: var_is_introduced ;
var {0,1}: aux6994_INTEGER :: var_is_introduced ;
var 3..45: aux6995:: var_is_introduced ;
var bool: aux6996_BOOL:: var_is_introduced ;
var bool: aux6997_BOOL:: var_is_introduced ;
var bool: aux6998_BOOL:: var_is_introduced ;
var bool: aux6999_BOOL:: var_is_introduced ;
var bool: aux7000_BOOL:: var_is_introduced ;
var {0,1}: aux7000_INTEGER :: var_is_introduced ;
var 4..46: aux7001:: var_is_introduced ;
var bool: aux7002_BOOL:: var_is_introduced ;
var bool: aux7003_BOOL:: var_is_introduced ;
var bool: aux7004_BOOL:: var_is_introduced ;
var {0,1}: aux7004_INTEGER :: var_is_introduced ;
var bool: aux7005_BOOL:: var_is_introduced ;
var 1..43: aux7006:: var_is_introduced ;
var bool: aux7007_BOOL:: var_is_introduced ;
var bool: aux7008_BOOL:: var_is_introduced ;
var bool: aux7009_BOOL:: var_is_introduced ;
var bool: aux7010_BOOL:: var_is_introduced ;
var bool: aux7011_BOOL:: var_is_introduced ;
var {0,1}: aux7011_INTEGER :: var_is_introduced ;
var 2..44: aux7012:: var_is_introduced ;
var bool: aux7013_BOOL:: var_is_introduced ;
var bool: aux7014_BOOL:: var_is_introduced ;
var bool: aux7015_BOOL:: var_is_introduced ;
var bool: aux7016_BOOL:: var_is_introduced ;
var bool: aux7017_BOOL:: var_is_introduced ;
var {0,1}: aux7017_INTEGER :: var_is_introduced ;
var 3..45: aux7018:: var_is_introduced ;
var bool: aux7019_BOOL:: var_is_introduced ;
var bool: aux7020_BOOL:: var_is_introduced ;
var bool: aux7021_BOOL:: var_is_introduced ;
var bool: aux7022_BOOL:: var_is_introduced ;
var bool: aux7023_BOOL:: var_is_introduced ;
var {0,1}: aux7023_INTEGER :: var_is_introduced ;
var 2..44: aux7024:: var_is_introduced ;
var bool: aux7025_BOOL:: var_is_introduced ;
var bool: aux7026_BOOL:: var_is_introduced ;
var bool: aux7027_BOOL:: var_is_introduced ;
var bool: aux7028_BOOL:: var_is_introduced ;
var bool: aux7029_BOOL:: var_is_introduced ;
var {0,1}: aux7029_INTEGER :: var_is_introduced ;
var 3..45: aux7030:: var_is_introduced ;
var bool: aux7031_BOOL:: var_is_introduced ;
var bool: aux7032_BOOL:: var_is_introduced ;
var bool: aux7033_BOOL:: var_is_introduced ;
var bool: aux7034_BOOL:: var_is_introduced ;
var bool: aux7035_BOOL:: var_is_introduced ;
var {0,1}: aux7035_INTEGER :: var_is_introduced ;
var 2..44: aux7036:: var_is_introduced ;
var bool: aux7037_BOOL:: var_is_introduced ;
var bool: aux7038_BOOL:: var_is_introduced ;
var bool: aux7039_BOOL:: var_is_introduced ;
var bool: aux7040_BOOL:: var_is_introduced ;
var bool: aux7041_BOOL:: var_is_introduced ;
var {0,1}: aux7041_INTEGER :: var_is_introduced ;
var 1..43: aux7042:: var_is_introduced ;
var bool: aux7043_BOOL:: var_is_introduced ;
var bool: aux7044_BOOL:: var_is_introduced ;
var bool: aux7045_BOOL:: var_is_introduced ;
var bool: aux7046_BOOL:: var_is_introduced ;
var bool: aux7047_BOOL:: var_is_introduced ;
var {0,1}: aux7047_INTEGER :: var_is_introduced ;
var 2..44: aux7048:: var_is_introduced ;
var bool: aux7049_BOOL:: var_is_introduced ;
var bool: aux7050_BOOL:: var_is_introduced ;
var bool: aux7051_BOOL:: var_is_introduced ;
var bool: aux7052_BOOL:: var_is_introduced ;
var bool: aux7053_BOOL:: var_is_introduced ;
var {0,1}: aux7053_INTEGER :: var_is_introduced ;
var 1..43: aux7054:: var_is_introduced ;
var bool: aux7055_BOOL:: var_is_introduced ;
var bool: aux7056_BOOL:: var_is_introduced ;
var bool: aux7057_BOOL:: var_is_introduced ;
var bool: aux7058_BOOL:: var_is_introduced ;
var bool: aux7059_BOOL:: var_is_introduced ;
var {0,1}: aux7059_INTEGER :: var_is_introduced ;
var 2..44: aux7060:: var_is_introduced ;
var bool: aux7061_BOOL:: var_is_introduced ;
var bool: aux7062_BOOL:: var_is_introduced ;
var bool: aux7063_BOOL:: var_is_introduced ;
var bool: aux7064_BOOL:: var_is_introduced ;
var bool: aux7065_BOOL:: var_is_introduced ;
var {0,1}: aux7065_INTEGER :: var_is_introduced ;
var 2..44: aux7066:: var_is_introduced ;
var bool: aux7067_BOOL:: var_is_introduced ;
var bool: aux7068_BOOL:: var_is_introduced ;
var bool: aux7069_BOOL:: var_is_introduced ;
var bool: aux7070_BOOL:: var_is_introduced ;
var bool: aux7071_BOOL:: var_is_introduced ;
var {0,1}: aux7071_INTEGER :: var_is_introduced ;
var 1..43: aux7072:: var_is_introduced ;
var bool: aux7073_BOOL:: var_is_introduced ;
var bool: aux7074_BOOL:: var_is_introduced ;
var bool: aux7075_BOOL:: var_is_introduced ;
var bool: aux7076_BOOL:: var_is_introduced ;
var bool: aux7077_BOOL:: var_is_introduced ;
var {0,1}: aux7077_INTEGER :: var_is_introduced ;
var 2..44: aux7078:: var_is_introduced ;
var bool: aux7079_BOOL:: var_is_introduced ;
var bool: aux7080_BOOL:: var_is_introduced ;
var bool: aux7081_BOOL:: var_is_introduced ;
var bool: aux7082_BOOL:: var_is_introduced ;
var bool: aux7083_BOOL:: var_is_introduced ;
var {0,1}: aux7083_INTEGER :: var_is_introduced ;
var 4..46: aux7084:: var_is_introduced ;
var bool: aux7085_BOOL:: var_is_introduced ;
var bool: aux7086_BOOL:: var_is_introduced ;
var bool: aux7087_BOOL:: var_is_introduced ;
var bool: aux7088_BOOL:: var_is_introduced ;
var bool: aux7089_BOOL:: var_is_introduced ;
var {0,1}: aux7089_INTEGER :: var_is_introduced ;
var 1..43: aux7090:: var_is_introduced ;
var bool: aux7091_BOOL:: var_is_introduced ;
var bool: aux7092_BOOL:: var_is_introduced ;
var bool: aux7093_BOOL:: var_is_introduced ;
var bool: aux7094_BOOL:: var_is_introduced ;
var bool: aux7095_BOOL:: var_is_introduced ;
var {0,1}: aux7095_INTEGER :: var_is_introduced ;
var 3..45: aux7096:: var_is_introduced ;
var bool: aux7097_BOOL:: var_is_introduced ;
var bool: aux7098_BOOL:: var_is_introduced ;
var bool: aux7099_BOOL:: var_is_introduced ;
var bool: aux7100_BOOL:: var_is_introduced ;
var bool: aux7101_BOOL:: var_is_introduced ;
var {0,1}: aux7101_INTEGER :: var_is_introduced ;
var 3..45: aux7102:: var_is_introduced ;
var bool: aux7103_BOOL:: var_is_introduced ;
var bool: aux7104_BOOL:: var_is_introduced ;
var bool: aux7105_BOOL:: var_is_introduced ;
var bool: aux7106_BOOL:: var_is_introduced ;
var bool: aux7107_BOOL:: var_is_introduced ;
var {0,1}: aux7107_INTEGER :: var_is_introduced ;
var 2..44: aux7108:: var_is_introduced ;
var bool: aux7109_BOOL:: var_is_introduced ;
var bool: aux7110_BOOL:: var_is_introduced ;
var bool: aux7111_BOOL:: var_is_introduced ;
var bool: aux7112_BOOL:: var_is_introduced ;
var bool: aux7113_BOOL:: var_is_introduced ;
var {0,1}: aux7113_INTEGER :: var_is_introduced ;
var 3..45: aux7114:: var_is_introduced ;
var bool: aux7115_BOOL:: var_is_introduced ;
var bool: aux7116_BOOL:: var_is_introduced ;
var bool: aux7117_BOOL:: var_is_introduced ;
var bool: aux7118_BOOL:: var_is_introduced ;
var bool: aux7119_BOOL:: var_is_introduced ;
var {0,1}: aux7119_INTEGER :: var_is_introduced ;
var 2..44: aux7120:: var_is_introduced ;
var bool: aux7121_BOOL:: var_is_introduced ;
var bool: aux7122_BOOL:: var_is_introduced ;
var bool: aux7123_BOOL:: var_is_introduced ;
var {0,1}: aux7123_INTEGER :: var_is_introduced ;
var bool: aux7124_BOOL:: var_is_introduced ;
var 1..43: aux7125:: var_is_introduced ;
var bool: aux7126_BOOL:: var_is_introduced ;
var bool: aux7127_BOOL:: var_is_introduced ;
var bool: aux7128_BOOL:: var_is_introduced ;
var bool: aux7129_BOOL:: var_is_introduced ;
var bool: aux7130_BOOL:: var_is_introduced ;
var {0,1}: aux7130_INTEGER :: var_is_introduced ;
var 2..44: aux7131:: var_is_introduced ;
var bool: aux7132_BOOL:: var_is_introduced ;
var bool: aux7133_BOOL:: var_is_introduced ;
var bool: aux7134_BOOL:: var_is_introduced ;
var bool: aux7135_BOOL:: var_is_introduced ;
var bool: aux7136_BOOL:: var_is_introduced ;
var {0,1}: aux7136_INTEGER :: var_is_introduced ;
var 3..45: aux7137:: var_is_introduced ;
var bool: aux7138_BOOL:: var_is_introduced ;
var bool: aux7139_BOOL:: var_is_introduced ;
var bool: aux7140_BOOL:: var_is_introduced ;
var bool: aux7141_BOOL:: var_is_introduced ;
var bool: aux7142_BOOL:: var_is_introduced ;
var {0,1}: aux7142_INTEGER :: var_is_introduced ;
var 2..44: aux7143:: var_is_introduced ;
var bool: aux7144_BOOL:: var_is_introduced ;
var bool: aux7145_BOOL:: var_is_introduced ;
var bool: aux7146_BOOL:: var_is_introduced ;
var bool: aux7147_BOOL:: var_is_introduced ;
var bool: aux7148_BOOL:: var_is_introduced ;
var {0,1}: aux7148_INTEGER :: var_is_introduced ;
var 3..45: aux7149:: var_is_introduced ;
var bool: aux7150_BOOL:: var_is_introduced ;
var bool: aux7151_BOOL:: var_is_introduced ;
var bool: aux7152_BOOL:: var_is_introduced ;
var bool: aux7153_BOOL:: var_is_introduced ;
var bool: aux7154_BOOL:: var_is_introduced ;
var {0,1}: aux7154_INTEGER :: var_is_introduced ;
var 2..44: aux7155:: var_is_introduced ;
var bool: aux7156_BOOL:: var_is_introduced ;
var bool: aux7157_BOOL:: var_is_introduced ;
var bool: aux7158_BOOL:: var_is_introduced ;
var bool: aux7159_BOOL:: var_is_introduced ;
var bool: aux7160_BOOL:: var_is_introduced ;
var {0,1}: aux7160_INTEGER :: var_is_introduced ;
var 1..43: aux7161:: var_is_introduced ;
var bool: aux7162_BOOL:: var_is_introduced ;
var bool: aux7163_BOOL:: var_is_introduced ;
var bool: aux7164_BOOL:: var_is_introduced ;
var bool: aux7165_BOOL:: var_is_introduced ;
var bool: aux7166_BOOL:: var_is_introduced ;
var {0,1}: aux7166_INTEGER :: var_is_introduced ;
var 2..44: aux7167:: var_is_introduced ;
var bool: aux7168_BOOL:: var_is_introduced ;
var bool: aux7169_BOOL:: var_is_introduced ;
var bool: aux7170_BOOL:: var_is_introduced ;
var bool: aux7171_BOOL:: var_is_introduced ;
var bool: aux7172_BOOL:: var_is_introduced ;
var {0,1}: aux7172_INTEGER :: var_is_introduced ;
var 1..43: aux7173:: var_is_introduced ;
var bool: aux7174_BOOL:: var_is_introduced ;
var bool: aux7175_BOOL:: var_is_introduced ;
var bool: aux7176_BOOL:: var_is_introduced ;
var bool: aux7177_BOOL:: var_is_introduced ;
var bool: aux7178_BOOL:: var_is_introduced ;
var {0,1}: aux7178_INTEGER :: var_is_introduced ;
var 2..44: aux7179:: var_is_introduced ;
var bool: aux7180_BOOL:: var_is_introduced ;
var bool: aux7181_BOOL:: var_is_introduced ;
var bool: aux7182_BOOL:: var_is_introduced ;
var bool: aux7183_BOOL:: var_is_introduced ;
var bool: aux7184_BOOL:: var_is_introduced ;
var {0,1}: aux7184_INTEGER :: var_is_introduced ;
var 2..44: aux7185:: var_is_introduced ;
var bool: aux7186_BOOL:: var_is_introduced ;
var bool: aux7187_BOOL:: var_is_introduced ;
var bool: aux7188_BOOL:: var_is_introduced ;
var bool: aux7189_BOOL:: var_is_introduced ;
var bool: aux7190_BOOL:: var_is_introduced ;
var {0,1}: aux7190_INTEGER :: var_is_introduced ;
var 1..43: aux7191:: var_is_introduced ;
var bool: aux7192_BOOL:: var_is_introduced ;
var bool: aux7193_BOOL:: var_is_introduced ;
var bool: aux7194_BOOL:: var_is_introduced ;
var bool: aux7195_BOOL:: var_is_introduced ;
var bool: aux7196_BOOL:: var_is_introduced ;
var {0,1}: aux7196_INTEGER :: var_is_introduced ;
var 2..44: aux7197:: var_is_introduced ;
var bool: aux7198_BOOL:: var_is_introduced ;
var bool: aux7199_BOOL:: var_is_introduced ;
var bool: aux7200_BOOL:: var_is_introduced ;
var bool: aux7201_BOOL:: var_is_introduced ;
var bool: aux7202_BOOL:: var_is_introduced ;
var {0,1}: aux7202_INTEGER :: var_is_introduced ;
var 4..46: aux7203:: var_is_introduced ;
var bool: aux7204_BOOL:: var_is_introduced ;
var bool: aux7205_BOOL:: var_is_introduced ;
var bool: aux7206_BOOL:: var_is_introduced ;
var bool: aux7207_BOOL:: var_is_introduced ;
var bool: aux7208_BOOL:: var_is_introduced ;
var {0,1}: aux7208_INTEGER :: var_is_introduced ;
var 1..43: aux7209:: var_is_introduced ;
var bool: aux7210_BOOL:: var_is_introduced ;
var bool: aux7211_BOOL:: var_is_introduced ;
var bool: aux7212_BOOL:: var_is_introduced ;
var bool: aux7213_BOOL:: var_is_introduced ;
var bool: aux7214_BOOL:: var_is_introduced ;
var {0,1}: aux7214_INTEGER :: var_is_introduced ;
var 3..45: aux7215:: var_is_introduced ;
var bool: aux7216_BOOL:: var_is_introduced ;
var bool: aux7217_BOOL:: var_is_introduced ;
var bool: aux7218_BOOL:: var_is_introduced ;
var bool: aux7219_BOOL:: var_is_introduced ;
var bool: aux7220_BOOL:: var_is_introduced ;
var {0,1}: aux7220_INTEGER :: var_is_introduced ;
var 3..45: aux7221:: var_is_introduced ;
var bool: aux7222_BOOL:: var_is_introduced ;
var bool: aux7223_BOOL:: var_is_introduced ;
var bool: aux7224_BOOL:: var_is_introduced ;
var bool: aux7225_BOOL:: var_is_introduced ;
var bool: aux7226_BOOL:: var_is_introduced ;
var {0,1}: aux7226_INTEGER :: var_is_introduced ;
var 2..44: aux7227:: var_is_introduced ;
var bool: aux7228_BOOL:: var_is_introduced ;
var bool: aux7229_BOOL:: var_is_introduced ;
var bool: aux7230_BOOL:: var_is_introduced ;
var bool: aux7231_BOOL:: var_is_introduced ;
var bool: aux7232_BOOL:: var_is_introduced ;
var {0,1}: aux7232_INTEGER :: var_is_introduced ;
var 3..45: aux7233:: var_is_introduced ;
var bool: aux7234_BOOL:: var_is_introduced ;
var bool: aux7235_BOOL:: var_is_introduced ;
var bool: aux7236_BOOL:: var_is_introduced ;
var bool: aux7237_BOOL:: var_is_introduced ;
var bool: aux7238_BOOL:: var_is_introduced ;
var {0,1}: aux7238_INTEGER :: var_is_introduced ;
var 2..44: aux7239:: var_is_introduced ;
var bool: aux7240_BOOL:: var_is_introduced ;
var bool: aux7241_BOOL:: var_is_introduced ;
var bool: aux7242_BOOL:: var_is_introduced ;
var {0,1}: aux7242_INTEGER :: var_is_introduced ;
var bool: aux7243_BOOL:: var_is_introduced ;
var 1..43: aux7244:: var_is_introduced ;
var bool: aux7245_BOOL:: var_is_introduced ;
var bool: aux7246_BOOL:: var_is_introduced ;
var bool: aux7247_BOOL:: var_is_introduced ;
var bool: aux7248_BOOL:: var_is_introduced ;
var bool: aux7249_BOOL:: var_is_introduced ;
var {0,1}: aux7249_INTEGER :: var_is_introduced ;
var 2..44: aux7250:: var_is_introduced ;
var bool: aux7251_BOOL:: var_is_introduced ;
var bool: aux7252_BOOL:: var_is_introduced ;
var bool: aux7253_BOOL:: var_is_introduced ;
var bool: aux7254_BOOL:: var_is_introduced ;
var bool: aux7255_BOOL:: var_is_introduced ;
var {0,1}: aux7255_INTEGER :: var_is_introduced ;
var 3..45: aux7256:: var_is_introduced ;
var bool: aux7257_BOOL:: var_is_introduced ;
var bool: aux7258_BOOL:: var_is_introduced ;
var bool: aux7259_BOOL:: var_is_introduced ;
var bool: aux7260_BOOL:: var_is_introduced ;
var bool: aux7261_BOOL:: var_is_introduced ;
var {0,1}: aux7261_INTEGER :: var_is_introduced ;
var 2..44: aux7262:: var_is_introduced ;
var bool: aux7263_BOOL:: var_is_introduced ;
var bool: aux7264_BOOL:: var_is_introduced ;
var bool: aux7265_BOOL:: var_is_introduced ;
var bool: aux7266_BOOL:: var_is_introduced ;
var bool: aux7267_BOOL:: var_is_introduced ;
var {0,1}: aux7267_INTEGER :: var_is_introduced ;
var 2..44: aux7268:: var_is_introduced ;
var bool: aux7269_BOOL:: var_is_introduced ;
var bool: aux7270_BOOL:: var_is_introduced ;
var bool: aux7271_BOOL:: var_is_introduced ;
var bool: aux7272_BOOL:: var_is_introduced ;
var bool: aux7273_BOOL:: var_is_introduced ;
var {0,1}: aux7273_INTEGER :: var_is_introduced ;
var 3..45: aux7274:: var_is_introduced ;
var bool: aux7275_BOOL:: var_is_introduced ;
var bool: aux7276_BOOL:: var_is_introduced ;
var bool: aux7277_BOOL:: var_is_introduced ;
var bool: aux7278_BOOL:: var_is_introduced ;
var bool: aux7279_BOOL:: var_is_introduced ;
var {0,1}: aux7279_INTEGER :: var_is_introduced ;
var 2..44: aux7280:: var_is_introduced ;
var bool: aux7281_BOOL:: var_is_introduced ;
var bool: aux7282_BOOL:: var_is_introduced ;
var bool: aux7283_BOOL:: var_is_introduced ;
var bool: aux7284_BOOL:: var_is_introduced ;
var bool: aux7285_BOOL:: var_is_introduced ;
var {0,1}: aux7285_INTEGER :: var_is_introduced ;
var 1..43: aux7286:: var_is_introduced ;
var bool: aux7287_BOOL:: var_is_introduced ;
var bool: aux7288_BOOL:: var_is_introduced ;
var bool: aux7289_BOOL:: var_is_introduced ;
var bool: aux7290_BOOL:: var_is_introduced ;
var bool: aux7291_BOOL:: var_is_introduced ;
var {0,1}: aux7291_INTEGER :: var_is_introduced ;
var 2..44: aux7292:: var_is_introduced ;
var bool: aux7293_BOOL:: var_is_introduced ;
var bool: aux7294_BOOL:: var_is_introduced ;
var bool: aux7295_BOOL:: var_is_introduced ;
var bool: aux7296_BOOL:: var_is_introduced ;
var bool: aux7297_BOOL:: var_is_introduced ;
var {0,1}: aux7297_INTEGER :: var_is_introduced ;
var 2..44: aux7298:: var_is_introduced ;
var bool: aux7299_BOOL:: var_is_introduced ;
var bool: aux7300_BOOL:: var_is_introduced ;
var bool: aux7301_BOOL:: var_is_introduced ;
var bool: aux7302_BOOL:: var_is_introduced ;
var bool: aux7303_BOOL:: var_is_introduced ;
var {0,1}: aux7303_INTEGER :: var_is_introduced ;
var 2..44: aux7304:: var_is_introduced ;
var bool: aux7305_BOOL:: var_is_introduced ;
var bool: aux7306_BOOL:: var_is_introduced ;
var bool: aux7307_BOOL:: var_is_introduced ;
var bool: aux7308_BOOL:: var_is_introduced ;
var bool: aux7309_BOOL:: var_is_introduced ;
var {0,1}: aux7309_INTEGER :: var_is_introduced ;
var 1..43: aux7310:: var_is_introduced ;
var bool: aux7311_BOOL:: var_is_introduced ;
var bool: aux7312_BOOL:: var_is_introduced ;
var bool: aux7313_BOOL:: var_is_introduced ;
var bool: aux7314_BOOL:: var_is_introduced ;
var bool: aux7315_BOOL:: var_is_introduced ;
var {0,1}: aux7315_INTEGER :: var_is_introduced ;
var 2..44: aux7316:: var_is_introduced ;
var bool: aux7317_BOOL:: var_is_introduced ;
var bool: aux7318_BOOL:: var_is_introduced ;
var bool: aux7319_BOOL:: var_is_introduced ;
var bool: aux7320_BOOL:: var_is_introduced ;
var bool: aux7321_BOOL:: var_is_introduced ;
var {0,1}: aux7321_INTEGER :: var_is_introduced ;
var 4..46: aux7322:: var_is_introduced ;
var bool: aux7323_BOOL:: var_is_introduced ;
var bool: aux7324_BOOL:: var_is_introduced ;
var bool: aux7325_BOOL:: var_is_introduced ;
var bool: aux7326_BOOL:: var_is_introduced ;
var bool: aux7327_BOOL:: var_is_introduced ;
var {0,1}: aux7327_INTEGER :: var_is_introduced ;
var 1..43: aux7328:: var_is_introduced ;
var bool: aux7329_BOOL:: var_is_introduced ;
var bool: aux7330_BOOL:: var_is_introduced ;
var bool: aux7331_BOOL:: var_is_introduced ;
var bool: aux7332_BOOL:: var_is_introduced ;
var bool: aux7333_BOOL:: var_is_introduced ;
var {0,1}: aux7333_INTEGER :: var_is_introduced ;
var 3..45: aux7334:: var_is_introduced ;
var bool: aux7335_BOOL:: var_is_introduced ;
var bool: aux7336_BOOL:: var_is_introduced ;
var bool: aux7337_BOOL:: var_is_introduced ;
var bool: aux7338_BOOL:: var_is_introduced ;
var bool: aux7339_BOOL:: var_is_introduced ;
var {0,1}: aux7339_INTEGER :: var_is_introduced ;
var 3..45: aux7340:: var_is_introduced ;
var bool: aux7341_BOOL:: var_is_introduced ;
var bool: aux7342_BOOL:: var_is_introduced ;
var bool: aux7343_BOOL:: var_is_introduced ;
var bool: aux7344_BOOL:: var_is_introduced ;
var bool: aux7345_BOOL:: var_is_introduced ;
var {0,1}: aux7345_INTEGER :: var_is_introduced ;
var 2..44: aux7346:: var_is_introduced ;
var bool: aux7347_BOOL:: var_is_introduced ;
var bool: aux7348_BOOL:: var_is_introduced ;
var bool: aux7349_BOOL:: var_is_introduced ;
var bool: aux7350_BOOL:: var_is_introduced ;
var bool: aux7351_BOOL:: var_is_introduced ;
var {0,1}: aux7351_INTEGER :: var_is_introduced ;
var 3..45: aux7352:: var_is_introduced ;
var bool: aux7353_BOOL:: var_is_introduced ;
var bool: aux7354_BOOL:: var_is_introduced ;
var bool: aux7355_BOOL:: var_is_introduced ;
var bool: aux7356_BOOL:: var_is_introduced ;
var bool: aux7357_BOOL:: var_is_introduced ;
var {0,1}: aux7357_INTEGER :: var_is_introduced ;
var 1..43: aux7358:: var_is_introduced ;
var bool: aux7359_BOOL:: var_is_introduced ;
var bool: aux7360_BOOL:: var_is_introduced ;
var bool: aux7361_BOOL:: var_is_introduced ;
var {0,1}: aux7361_INTEGER :: var_is_introduced ;
var bool: aux7362_BOOL:: var_is_introduced ;
var 1..43: aux7363:: var_is_introduced ;
var bool: aux7364_BOOL:: var_is_introduced ;
var bool: aux7365_BOOL:: var_is_introduced ;
var bool: aux7366_BOOL:: var_is_introduced ;
var bool: aux7367_BOOL:: var_is_introduced ;
var bool: aux7368_BOOL:: var_is_introduced ;
var {0,1}: aux7368_INTEGER :: var_is_introduced ;
var 2..44: aux7369:: var_is_introduced ;
var bool: aux7370_BOOL:: var_is_introduced ;
var bool: aux7371_BOOL:: var_is_introduced ;
var bool: aux7372_BOOL:: var_is_introduced ;
var bool: aux7373_BOOL:: var_is_introduced ;
var bool: aux7374_BOOL:: var_is_introduced ;
var {0,1}: aux7374_INTEGER :: var_is_introduced ;
var 3..45: aux7375:: var_is_introduced ;
var bool: aux7376_BOOL:: var_is_introduced ;
var bool: aux7377_BOOL:: var_is_introduced ;
var bool: aux7378_BOOL:: var_is_introduced ;
var bool: aux7379_BOOL:: var_is_introduced ;
var bool: aux7380_BOOL:: var_is_introduced ;
var {0,1}: aux7380_INTEGER :: var_is_introduced ;
var 2..44: aux7381:: var_is_introduced ;
var bool: aux7382_BOOL:: var_is_introduced ;
var bool: aux7383_BOOL:: var_is_introduced ;
var bool: aux7384_BOOL:: var_is_introduced ;
var bool: aux7385_BOOL:: var_is_introduced ;
var bool: aux7386_BOOL:: var_is_introduced ;
var {0,1}: aux7386_INTEGER :: var_is_introduced ;
var 2..44: aux7387:: var_is_introduced ;
var bool: aux7388_BOOL:: var_is_introduced ;
var bool: aux7389_BOOL:: var_is_introduced ;
var bool: aux7390_BOOL:: var_is_introduced ;
var bool: aux7391_BOOL:: var_is_introduced ;
var bool: aux7392_BOOL:: var_is_introduced ;
var {0,1}: aux7392_INTEGER :: var_is_introduced ;
var 3..45: aux7393:: var_is_introduced ;
var bool: aux7394_BOOL:: var_is_introduced ;
var bool: aux7395_BOOL:: var_is_introduced ;
var bool: aux7396_BOOL:: var_is_introduced ;
var bool: aux7397_BOOL:: var_is_introduced ;
var bool: aux7398_BOOL:: var_is_introduced ;
var {0,1}: aux7398_INTEGER :: var_is_introduced ;
var 2..44: aux7399:: var_is_introduced ;
var bool: aux7400_BOOL:: var_is_introduced ;
var bool: aux7401_BOOL:: var_is_introduced ;
var bool: aux7402_BOOL:: var_is_introduced ;
var bool: aux7403_BOOL:: var_is_introduced ;
var bool: aux7404_BOOL:: var_is_introduced ;
var {0,1}: aux7404_INTEGER :: var_is_introduced ;
var 1..43: aux7405:: var_is_introduced ;
var bool: aux7406_BOOL:: var_is_introduced ;
var bool: aux7407_BOOL:: var_is_introduced ;
var bool: aux7408_BOOL:: var_is_introduced ;
var bool: aux7409_BOOL:: var_is_introduced ;
var bool: aux7410_BOOL:: var_is_introduced ;
var {0,1}: aux7410_INTEGER :: var_is_introduced ;
var 2..44: aux7411:: var_is_introduced ;
var bool: aux7412_BOOL:: var_is_introduced ;
var bool: aux7413_BOOL:: var_is_introduced ;
var bool: aux7414_BOOL:: var_is_introduced ;
var bool: aux7415_BOOL:: var_is_introduced ;
var bool: aux7416_BOOL:: var_is_introduced ;
var {0,1}: aux7416_INTEGER :: var_is_introduced ;
var 1..43: aux7417:: var_is_introduced ;
var bool: aux7418_BOOL:: var_is_introduced ;
var bool: aux7419_BOOL:: var_is_introduced ;
var bool: aux7420_BOOL:: var_is_introduced ;
var bool: aux7421_BOOL:: var_is_introduced ;
var bool: aux7422_BOOL:: var_is_introduced ;
var {0,1}: aux7422_INTEGER :: var_is_introduced ;
var 2..44: aux7423:: var_is_introduced ;
var bool: aux7424_BOOL:: var_is_introduced ;
var bool: aux7425_BOOL:: var_is_introduced ;
var bool: aux7426_BOOL:: var_is_introduced ;
var bool: aux7427_BOOL:: var_is_introduced ;
var bool: aux7428_BOOL:: var_is_introduced ;
var {0,1}: aux7428_INTEGER :: var_is_introduced ;
var 2..44: aux7429:: var_is_introduced ;
var bool: aux7430_BOOL:: var_is_introduced ;
var bool: aux7431_BOOL:: var_is_introduced ;
var bool: aux7432_BOOL:: var_is_introduced ;
var bool: aux7433_BOOL:: var_is_introduced ;
var bool: aux7434_BOOL:: var_is_introduced ;
var {0,1}: aux7434_INTEGER :: var_is_introduced ;
var 1..43: aux7435:: var_is_introduced ;
var bool: aux7436_BOOL:: var_is_introduced ;
var bool: aux7437_BOOL:: var_is_introduced ;
var bool: aux7438_BOOL:: var_is_introduced ;
var bool: aux7439_BOOL:: var_is_introduced ;
var bool: aux7440_BOOL:: var_is_introduced ;
var {0,1}: aux7440_INTEGER :: var_is_introduced ;
var 2..44: aux7441:: var_is_introduced ;
var bool: aux7442_BOOL:: var_is_introduced ;
var bool: aux7443_BOOL:: var_is_introduced ;
var bool: aux7444_BOOL:: var_is_introduced ;
var bool: aux7445_BOOL:: var_is_introduced ;
var bool: aux7446_BOOL:: var_is_introduced ;
var {0,1}: aux7446_INTEGER :: var_is_introduced ;
var 4..46: aux7447:: var_is_introduced ;
var bool: aux7448_BOOL:: var_is_introduced ;
var bool: aux7449_BOOL:: var_is_introduced ;
var bool: aux7450_BOOL:: var_is_introduced ;
var bool: aux7451_BOOL:: var_is_introduced ;
var bool: aux7452_BOOL:: var_is_introduced ;
var {0,1}: aux7452_INTEGER :: var_is_introduced ;
var 3..45: aux7453:: var_is_introduced ;
var bool: aux7454_BOOL:: var_is_introduced ;
var bool: aux7455_BOOL:: var_is_introduced ;
var bool: aux7456_BOOL:: var_is_introduced ;
var bool: aux7457_BOOL:: var_is_introduced ;
var bool: aux7458_BOOL:: var_is_introduced ;
var {0,1}: aux7458_INTEGER :: var_is_introduced ;
var 3..45: aux7459:: var_is_introduced ;
var bool: aux7460_BOOL:: var_is_introduced ;
var bool: aux7461_BOOL:: var_is_introduced ;
var bool: aux7462_BOOL:: var_is_introduced ;
var bool: aux7463_BOOL:: var_is_introduced ;
var bool: aux7464_BOOL:: var_is_introduced ;
var {0,1}: aux7464_INTEGER :: var_is_introduced ;
var 2..44: aux7465:: var_is_introduced ;
var bool: aux7466_BOOL:: var_is_introduced ;
var bool: aux7467_BOOL:: var_is_introduced ;
var bool: aux7468_BOOL:: var_is_introduced ;
var bool: aux7469_BOOL:: var_is_introduced ;
var bool: aux7470_BOOL:: var_is_introduced ;
var {0,1}: aux7470_INTEGER :: var_is_introduced ;
var 3..45: aux7471:: var_is_introduced ;
var bool: aux7472_BOOL:: var_is_introduced ;
var bool: aux7473_BOOL:: var_is_introduced ;
var bool: aux7474_BOOL:: var_is_introduced ;
var bool: aux7475_BOOL:: var_is_introduced ;
var bool: aux7476_BOOL:: var_is_introduced ;
var {0,1}: aux7476_INTEGER :: var_is_introduced ;
var 1..43: aux7477:: var_is_introduced ;
var bool: aux7478_BOOL:: var_is_introduced ;
var bool: aux7479_BOOL:: var_is_introduced ;
var bool: aux7480_BOOL:: var_is_introduced ;
var {0,1}: aux7480_INTEGER :: var_is_introduced ;
var bool: aux7481_BOOL:: var_is_introduced ;
var 1..43: aux7482:: var_is_introduced ;
var bool: aux7483_BOOL:: var_is_introduced ;
var bool: aux7484_BOOL:: var_is_introduced ;
var bool: aux7485_BOOL:: var_is_introduced ;
var bool: aux7486_BOOL:: var_is_introduced ;
var bool: aux7487_BOOL:: var_is_introduced ;
var {0,1}: aux7487_INTEGER :: var_is_introduced ;
var 2..44: aux7488:: var_is_introduced ;
var bool: aux7489_BOOL:: var_is_introduced ;
var bool: aux7490_BOOL:: var_is_introduced ;
var bool: aux7491_BOOL:: var_is_introduced ;
var bool: aux7492_BOOL:: var_is_introduced ;
var bool: aux7493_BOOL:: var_is_introduced ;
var {0,1}: aux7493_INTEGER :: var_is_introduced ;
var 3..45: aux7494:: var_is_introduced ;
var bool: aux7495_BOOL:: var_is_introduced ;
var bool: aux7496_BOOL:: var_is_introduced ;
var bool: aux7497_BOOL:: var_is_introduced ;
var bool: aux7498_BOOL:: var_is_introduced ;
var bool: aux7499_BOOL:: var_is_introduced ;
var {0,1}: aux7499_INTEGER :: var_is_introduced ;
var 2..44: aux7500:: var_is_introduced ;
var bool: aux7501_BOOL:: var_is_introduced ;
var bool: aux7502_BOOL:: var_is_introduced ;
var bool: aux7503_BOOL:: var_is_introduced ;
var bool: aux7504_BOOL:: var_is_introduced ;
var bool: aux7505_BOOL:: var_is_introduced ;
var {0,1}: aux7505_INTEGER :: var_is_introduced ;
var 2..44: aux7506:: var_is_introduced ;
var bool: aux7507_BOOL:: var_is_introduced ;
var bool: aux7508_BOOL:: var_is_introduced ;
var bool: aux7509_BOOL:: var_is_introduced ;
var bool: aux7510_BOOL:: var_is_introduced ;
var bool: aux7511_BOOL:: var_is_introduced ;
var {0,1}: aux7511_INTEGER :: var_is_introduced ;
var 3..45: aux7512:: var_is_introduced ;
var bool: aux7513_BOOL:: var_is_introduced ;
var bool: aux7514_BOOL:: var_is_introduced ;
var bool: aux7515_BOOL:: var_is_introduced ;
var bool: aux7516_BOOL:: var_is_introduced ;
var bool: aux7517_BOOL:: var_is_introduced ;
var {0,1}: aux7517_INTEGER :: var_is_introduced ;
var 2..44: aux7518:: var_is_introduced ;
var bool: aux7519_BOOL:: var_is_introduced ;
var bool: aux7520_BOOL:: var_is_introduced ;
var bool: aux7521_BOOL:: var_is_introduced ;
var bool: aux7522_BOOL:: var_is_introduced ;
var bool: aux7523_BOOL:: var_is_introduced ;
var {0,1}: aux7523_INTEGER :: var_is_introduced ;
var 1..43: aux7524:: var_is_introduced ;
var bool: aux7525_BOOL:: var_is_introduced ;
var bool: aux7526_BOOL:: var_is_introduced ;
var bool: aux7527_BOOL:: var_is_introduced ;
var bool: aux7528_BOOL:: var_is_introduced ;
var bool: aux7529_BOOL:: var_is_introduced ;
var {0,1}: aux7529_INTEGER :: var_is_introduced ;
var 1..43: aux7530:: var_is_introduced ;
var bool: aux7531_BOOL:: var_is_introduced ;
var bool: aux7532_BOOL:: var_is_introduced ;
var bool: aux7533_BOOL:: var_is_introduced ;
var bool: aux7534_BOOL:: var_is_introduced ;
var bool: aux7535_BOOL:: var_is_introduced ;
var {0,1}: aux7535_INTEGER :: var_is_introduced ;
var 2..44: aux7536:: var_is_introduced ;
var bool: aux7537_BOOL:: var_is_introduced ;
var bool: aux7538_BOOL:: var_is_introduced ;
var bool: aux7539_BOOL:: var_is_introduced ;
var bool: aux7540_BOOL:: var_is_introduced ;
var bool: aux7541_BOOL:: var_is_introduced ;
var {0,1}: aux7541_INTEGER :: var_is_introduced ;
var 2..44: aux7542:: var_is_introduced ;
var bool: aux7543_BOOL:: var_is_introduced ;
var bool: aux7544_BOOL:: var_is_introduced ;
var bool: aux7545_BOOL:: var_is_introduced ;
var bool: aux7546_BOOL:: var_is_introduced ;
var bool: aux7547_BOOL:: var_is_introduced ;
var {0,1}: aux7547_INTEGER :: var_is_introduced ;
var 1..43: aux7548:: var_is_introduced ;
var bool: aux7549_BOOL:: var_is_introduced ;
var bool: aux7550_BOOL:: var_is_introduced ;
var bool: aux7551_BOOL:: var_is_introduced ;
var bool: aux7552_BOOL:: var_is_introduced ;
var bool: aux7553_BOOL:: var_is_introduced ;
var {0,1}: aux7553_INTEGER :: var_is_introduced ;
var 2..44: aux7554:: var_is_introduced ;
var bool: aux7555_BOOL:: var_is_introduced ;
var bool: aux7556_BOOL:: var_is_introduced ;
var bool: aux7557_BOOL:: var_is_introduced ;
var bool: aux7558_BOOL:: var_is_introduced ;
var bool: aux7559_BOOL:: var_is_introduced ;
var {0,1}: aux7559_INTEGER :: var_is_introduced ;
var 4..46: aux7560:: var_is_introduced ;
var bool: aux7561_BOOL:: var_is_introduced ;
var bool: aux7562_BOOL:: var_is_introduced ;
var bool: aux7563_BOOL:: var_is_introduced ;
var bool: aux7564_BOOL:: var_is_introduced ;
var bool: aux7565_BOOL:: var_is_introduced ;
var {0,1}: aux7565_INTEGER :: var_is_introduced ;
var 1..43: aux7566:: var_is_introduced ;
var bool: aux7567_BOOL:: var_is_introduced ;
var bool: aux7568_BOOL:: var_is_introduced ;
var bool: aux7569_BOOL:: var_is_introduced ;
var bool: aux7570_BOOL:: var_is_introduced ;
var bool: aux7571_BOOL:: var_is_introduced ;
var {0,1}: aux7571_INTEGER :: var_is_introduced ;
var 3..45: aux7572:: var_is_introduced ;
var bool: aux7573_BOOL:: var_is_introduced ;
var bool: aux7574_BOOL:: var_is_introduced ;
var bool: aux7575_BOOL:: var_is_introduced ;
var bool: aux7576_BOOL:: var_is_introduced ;
var bool: aux7577_BOOL:: var_is_introduced ;
var {0,1}: aux7577_INTEGER :: var_is_introduced ;
var 3..45: aux7578:: var_is_introduced ;
var bool: aux7579_BOOL:: var_is_introduced ;
var bool: aux7580_BOOL:: var_is_introduced ;
var bool: aux7581_BOOL:: var_is_introduced ;
var bool: aux7582_BOOL:: var_is_introduced ;
var bool: aux7583_BOOL:: var_is_introduced ;
var {0,1}: aux7583_INTEGER :: var_is_introduced ;
var 2..44: aux7584:: var_is_introduced ;
var bool: aux7585_BOOL:: var_is_introduced ;
var bool: aux7586_BOOL:: var_is_introduced ;
var bool: aux7587_BOOL:: var_is_introduced ;
var bool: aux7588_BOOL:: var_is_introduced ;
var bool: aux7589_BOOL:: var_is_introduced ;
var {0,1}: aux7589_INTEGER :: var_is_introduced ;
var 3..45: aux7590:: var_is_introduced ;
var bool: aux7591_BOOL:: var_is_introduced ;
var bool: aux7592_BOOL:: var_is_introduced ;
var bool: aux7593_BOOL:: var_is_introduced ;
var bool: aux7594_BOOL:: var_is_introduced ;
var bool: aux7595_BOOL:: var_is_introduced ;
var {0,1}: aux7595_INTEGER :: var_is_introduced ;
var 2..44: aux7596:: var_is_introduced ;
var bool: aux7597_BOOL:: var_is_introduced ;
var bool: aux7598_BOOL:: var_is_introduced ;
var bool: aux7599_BOOL:: var_is_introduced ;
var {0,1}: aux7599_INTEGER :: var_is_introduced ;
var bool: aux7600_BOOL:: var_is_introduced ;
var 1..43: aux7601:: var_is_introduced ;
var bool: aux7602_BOOL:: var_is_introduced ;
var bool: aux7603_BOOL:: var_is_introduced ;
var bool: aux7604_BOOL:: var_is_introduced ;
var bool: aux7605_BOOL:: var_is_introduced ;
var bool: aux7606_BOOL:: var_is_introduced ;
var {0,1}: aux7606_INTEGER :: var_is_introduced ;
var 2..44: aux7607:: var_is_introduced ;
var bool: aux7608_BOOL:: var_is_introduced ;
var bool: aux7609_BOOL:: var_is_introduced ;
var bool: aux7610_BOOL:: var_is_introduced ;
var bool: aux7611_BOOL:: var_is_introduced ;
var bool: aux7612_BOOL:: var_is_introduced ;
var {0,1}: aux7612_INTEGER :: var_is_introduced ;
var 3..45: aux7613:: var_is_introduced ;
var bool: aux7614_BOOL:: var_is_introduced ;
var bool: aux7615_BOOL:: var_is_introduced ;
var bool: aux7616_BOOL:: var_is_introduced ;
var bool: aux7617_BOOL:: var_is_introduced ;
var bool: aux7618_BOOL:: var_is_introduced ;
var {0,1}: aux7618_INTEGER :: var_is_introduced ;
var 2..44: aux7619:: var_is_introduced ;
var bool: aux7620_BOOL:: var_is_introduced ;
var bool: aux7621_BOOL:: var_is_introduced ;
var bool: aux7622_BOOL:: var_is_introduced ;
var bool: aux7623_BOOL:: var_is_introduced ;
var bool: aux7624_BOOL:: var_is_introduced ;
var {0,1}: aux7624_INTEGER :: var_is_introduced ;
var 2..44: aux7625:: var_is_introduced ;
var bool: aux7626_BOOL:: var_is_introduced ;
var bool: aux7627_BOOL:: var_is_introduced ;
var bool: aux7628_BOOL:: var_is_introduced ;
var bool: aux7629_BOOL:: var_is_introduced ;
var bool: aux7630_BOOL:: var_is_introduced ;
var {0,1}: aux7630_INTEGER :: var_is_introduced ;
var 3..45: aux7631:: var_is_introduced ;
var bool: aux7632_BOOL:: var_is_introduced ;
var bool: aux7633_BOOL:: var_is_introduced ;
var bool: aux7634_BOOL:: var_is_introduced ;
var bool: aux7635_BOOL:: var_is_introduced ;
var bool: aux7636_BOOL:: var_is_introduced ;
var {0,1}: aux7636_INTEGER :: var_is_introduced ;
var 2..44: aux7637:: var_is_introduced ;
var bool: aux7638_BOOL:: var_is_introduced ;
var bool: aux7639_BOOL:: var_is_introduced ;
var bool: aux7640_BOOL:: var_is_introduced ;
var bool: aux7641_BOOL:: var_is_introduced ;
var bool: aux7642_BOOL:: var_is_introduced ;
var {0,1}: aux7642_INTEGER :: var_is_introduced ;
var 1..43: aux7643:: var_is_introduced ;
var bool: aux7644_BOOL:: var_is_introduced ;
var bool: aux7645_BOOL:: var_is_introduced ;
var bool: aux7646_BOOL:: var_is_introduced ;
var bool: aux7647_BOOL:: var_is_introduced ;
var bool: aux7648_BOOL:: var_is_introduced ;
var {0,1}: aux7648_INTEGER :: var_is_introduced ;
var 2..44: aux7649:: var_is_introduced ;
var bool: aux7650_BOOL:: var_is_introduced ;
var bool: aux7651_BOOL:: var_is_introduced ;
var bool: aux7652_BOOL:: var_is_introduced ;
var bool: aux7653_BOOL:: var_is_introduced ;
var bool: aux7654_BOOL:: var_is_introduced ;
var {0,1}: aux7654_INTEGER :: var_is_introduced ;
var 1..43: aux7655:: var_is_introduced ;
var bool: aux7656_BOOL:: var_is_introduced ;
var bool: aux7657_BOOL:: var_is_introduced ;
var bool: aux7658_BOOL:: var_is_introduced ;
var bool: aux7659_BOOL:: var_is_introduced ;
var bool: aux7660_BOOL:: var_is_introduced ;
var {0,1}: aux7660_INTEGER :: var_is_introduced ;
var 2..44: aux7661:: var_is_introduced ;
var bool: aux7662_BOOL:: var_is_introduced ;
var bool: aux7663_BOOL:: var_is_introduced ;
var bool: aux7664_BOOL:: var_is_introduced ;
var bool: aux7665_BOOL:: var_is_introduced ;
var bool: aux7666_BOOL:: var_is_introduced ;
var {0,1}: aux7666_INTEGER :: var_is_introduced ;
var 1..43: aux7667:: var_is_introduced ;
var bool: aux7668_BOOL:: var_is_introduced ;
var bool: aux7669_BOOL:: var_is_introduced ;
var bool: aux7670_BOOL:: var_is_introduced ;
var bool: aux7671_BOOL:: var_is_introduced ;
var bool: aux7672_BOOL:: var_is_introduced ;
var {0,1}: aux7672_INTEGER :: var_is_introduced ;
var 2..44: aux7673:: var_is_introduced ;
var bool: aux7674_BOOL:: var_is_introduced ;
var bool: aux7675_BOOL:: var_is_introduced ;
var bool: aux7676_BOOL:: var_is_introduced ;
var bool: aux7677_BOOL:: var_is_introduced ;
var bool: aux7678_BOOL:: var_is_introduced ;
var {0,1}: aux7678_INTEGER :: var_is_introduced ;
var 4..46: aux7679:: var_is_introduced ;
var bool: aux7680_BOOL:: var_is_introduced ;
var bool: aux7681_BOOL:: var_is_introduced ;
var bool: aux7682_BOOL:: var_is_introduced ;
var bool: aux7683_BOOL:: var_is_introduced ;
var bool: aux7684_BOOL:: var_is_introduced ;
var {0,1}: aux7684_INTEGER :: var_is_introduced ;
var 1..43: aux7685:: var_is_introduced ;
var bool: aux7686_BOOL:: var_is_introduced ;
var bool: aux7687_BOOL:: var_is_introduced ;
var bool: aux7688_BOOL:: var_is_introduced ;
var bool: aux7689_BOOL:: var_is_introduced ;
var bool: aux7690_BOOL:: var_is_introduced ;
var {0,1}: aux7690_INTEGER :: var_is_introduced ;
var 3..45: aux7691:: var_is_introduced ;
var bool: aux7692_BOOL:: var_is_introduced ;
var bool: aux7693_BOOL:: var_is_introduced ;
var bool: aux7694_BOOL:: var_is_introduced ;
var bool: aux7695_BOOL:: var_is_introduced ;
var bool: aux7696_BOOL:: var_is_introduced ;
var {0,1}: aux7696_INTEGER :: var_is_introduced ;
var 3..45: aux7697:: var_is_introduced ;
var bool: aux7698_BOOL:: var_is_introduced ;
var bool: aux7699_BOOL:: var_is_introduced ;
var bool: aux7700_BOOL:: var_is_introduced ;
var bool: aux7701_BOOL:: var_is_introduced ;
var bool: aux7702_BOOL:: var_is_introduced ;
var {0,1}: aux7702_INTEGER :: var_is_introduced ;
var 2..44: aux7703:: var_is_introduced ;
var bool: aux7704_BOOL:: var_is_introduced ;
var bool: aux7705_BOOL:: var_is_introduced ;
var bool: aux7706_BOOL:: var_is_introduced ;
var bool: aux7707_BOOL:: var_is_introduced ;
var bool: aux7708_BOOL:: var_is_introduced ;
var {0,1}: aux7708_INTEGER :: var_is_introduced ;
var 3..45: aux7709:: var_is_introduced ;
var bool: aux7710_BOOL:: var_is_introduced ;
var bool: aux7711_BOOL:: var_is_introduced ;
var bool: aux7712_BOOL:: var_is_introduced ;
var bool: aux7713_BOOL:: var_is_introduced ;
var bool: aux7714_BOOL:: var_is_introduced ;
var {0,1}: aux7714_INTEGER :: var_is_introduced ;
var 2..44: aux7715:: var_is_introduced ;
var bool: aux7716_BOOL:: var_is_introduced ;
var bool: aux7717_BOOL:: var_is_introduced ;
var bool: aux7718_BOOL:: var_is_introduced ;
var {0,1}: aux7718_INTEGER :: var_is_introduced ;
var bool: aux7719_BOOL:: var_is_introduced ;
var bool: aux7720_BOOL:: var_is_introduced ;
var bool: aux7721_BOOL:: var_is_introduced ;
var bool: aux7722_BOOL:: var_is_introduced ;
var 1..43: aux7723:: var_is_introduced ;
var bool: aux7724_BOOL:: var_is_introduced ;
var bool: aux7725_BOOL:: var_is_introduced ;
var {0,1}: aux7725_INTEGER :: var_is_introduced ;
var bool: aux7726_BOOL:: var_is_introduced ;
var bool: aux7727_BOOL:: var_is_introduced ;
var 1..43: aux7728:: var_is_introduced ;
var bool: aux7729_BOOL:: var_is_introduced ;
var bool: aux7730_BOOL:: var_is_introduced ;
var bool: aux7731_BOOL:: var_is_introduced ;
var {0,1}: aux7731_INTEGER :: var_is_introduced ;
var bool: aux7732_BOOL:: var_is_introduced ;
var bool: aux7733_BOOL:: var_is_introduced ;
var 2..44: aux7734:: var_is_introduced ;
var bool: aux7735_BOOL:: var_is_introduced ;
var bool: aux7736_BOOL:: var_is_introduced ;
var bool: aux7737_BOOL:: var_is_introduced ;
var {0,1}: aux7737_INTEGER :: var_is_introduced ;
var bool: aux7738_BOOL:: var_is_introduced ;
var bool: aux7739_BOOL:: var_is_introduced ;
var 3..45: aux7740:: var_is_introduced ;
var bool: aux7741_BOOL:: var_is_introduced ;
var bool: aux7742_BOOL:: var_is_introduced ;
var bool: aux7743_BOOL:: var_is_introduced ;
var {0,1}: aux7743_INTEGER :: var_is_introduced ;
var bool: aux7744_BOOL:: var_is_introduced ;
var bool: aux7745_BOOL:: var_is_introduced ;
var 2..44: aux7746:: var_is_introduced ;
var bool: aux7747_BOOL:: var_is_introduced ;
var bool: aux7748_BOOL:: var_is_introduced ;
var bool: aux7749_BOOL:: var_is_introduced ;
var {0,1}: aux7749_INTEGER :: var_is_introduced ;
var bool: aux7750_BOOL:: var_is_introduced ;
var bool: aux7751_BOOL:: var_is_introduced ;
var 2..44: aux7752:: var_is_introduced ;
var bool: aux7753_BOOL:: var_is_introduced ;
var bool: aux7754_BOOL:: var_is_introduced ;
var bool: aux7755_BOOL:: var_is_introduced ;
var {0,1}: aux7755_INTEGER :: var_is_introduced ;
var bool: aux7756_BOOL:: var_is_introduced ;
var bool: aux7757_BOOL:: var_is_introduced ;
var 3..45: aux7758:: var_is_introduced ;
var bool: aux7759_BOOL:: var_is_introduced ;
var bool: aux7760_BOOL:: var_is_introduced ;
var bool: aux7761_BOOL:: var_is_introduced ;
var {0,1}: aux7761_INTEGER :: var_is_introduced ;
var bool: aux7762_BOOL:: var_is_introduced ;
var bool: aux7763_BOOL:: var_is_introduced ;
var 2..44: aux7764:: var_is_introduced ;
var bool: aux7765_BOOL:: var_is_introduced ;
var bool: aux7766_BOOL:: var_is_introduced ;
var bool: aux7767_BOOL:: var_is_introduced ;
var {0,1}: aux7767_INTEGER :: var_is_introduced ;
var bool: aux7768_BOOL:: var_is_introduced ;
var bool: aux7769_BOOL:: var_is_introduced ;
var 2..44: aux7770:: var_is_introduced ;
var bool: aux7771_BOOL:: var_is_introduced ;
var bool: aux7772_BOOL:: var_is_introduced ;
var bool: aux7773_BOOL:: var_is_introduced ;
var {0,1}: aux7773_INTEGER :: var_is_introduced ;
var bool: aux7774_BOOL:: var_is_introduced ;
var bool: aux7775_BOOL:: var_is_introduced ;
var 1..43: aux7776:: var_is_introduced ;
var bool: aux7777_BOOL:: var_is_introduced ;
var bool: aux7778_BOOL:: var_is_introduced ;
var bool: aux7779_BOOL:: var_is_introduced ;
var {0,1}: aux7779_INTEGER :: var_is_introduced ;
var bool: aux7780_BOOL:: var_is_introduced ;
var bool: aux7781_BOOL:: var_is_introduced ;
var 2..44: aux7782:: var_is_introduced ;
var bool: aux7783_BOOL:: var_is_introduced ;
var bool: aux7784_BOOL:: var_is_introduced ;
var bool: aux7785_BOOL:: var_is_introduced ;
var {0,1}: aux7785_INTEGER :: var_is_introduced ;
var bool: aux7786_BOOL:: var_is_introduced ;
var bool: aux7787_BOOL:: var_is_introduced ;
var 2..44: aux7788:: var_is_introduced ;
var bool: aux7789_BOOL:: var_is_introduced ;
var bool: aux7790_BOOL:: var_is_introduced ;
var bool: aux7791_BOOL:: var_is_introduced ;
var {0,1}: aux7791_INTEGER :: var_is_introduced ;
var bool: aux7792_BOOL:: var_is_introduced ;
var bool: aux7793_BOOL:: var_is_introduced ;
var 1..43: aux7794:: var_is_introduced ;
var bool: aux7795_BOOL:: var_is_introduced ;
var bool: aux7796_BOOL:: var_is_introduced ;
var bool: aux7797_BOOL:: var_is_introduced ;
var {0,1}: aux7797_INTEGER :: var_is_introduced ;
var bool: aux7798_BOOL:: var_is_introduced ;
var bool: aux7799_BOOL:: var_is_introduced ;
var 4..46: aux7800:: var_is_introduced ;
var bool: aux7801_BOOL:: var_is_introduced ;
var bool: aux7802_BOOL:: var_is_introduced ;
var bool: aux7803_BOOL:: var_is_introduced ;
var {0,1}: aux7803_INTEGER :: var_is_introduced ;
var bool: aux7804_BOOL:: var_is_introduced ;
var bool: aux7805_BOOL:: var_is_introduced ;
var 2..44: aux7806:: var_is_introduced ;
var bool: aux7807_BOOL:: var_is_introduced ;
var bool: aux7808_BOOL:: var_is_introduced ;
var bool: aux7809_BOOL:: var_is_introduced ;
var {0,1}: aux7809_INTEGER :: var_is_introduced ;
var bool: aux7810_BOOL:: var_is_introduced ;
var bool: aux7811_BOOL:: var_is_introduced ;
var 3..45: aux7812:: var_is_introduced ;
var bool: aux7813_BOOL:: var_is_introduced ;
var bool: aux7814_BOOL:: var_is_introduced ;
var bool: aux7815_BOOL:: var_is_introduced ;
var {0,1}: aux7815_INTEGER :: var_is_introduced ;
var bool: aux7816_BOOL:: var_is_introduced ;
var bool: aux7817_BOOL:: var_is_introduced ;
var 1..43: aux7818:: var_is_introduced ;
var bool: aux7819_BOOL:: var_is_introduced ;
var bool: aux7820_BOOL:: var_is_introduced ;
var bool: aux7821_BOOL:: var_is_introduced ;
var {0,1}: aux7821_INTEGER :: var_is_introduced ;
var bool: aux7822_BOOL:: var_is_introduced ;
var bool: aux7823_BOOL:: var_is_introduced ;
var 3..45: aux7824:: var_is_introduced ;
var bool: aux7825_BOOL:: var_is_introduced ;
var bool: aux7826_BOOL:: var_is_introduced ;
var bool: aux7827_BOOL:: var_is_introduced ;
var {0,1}: aux7827_INTEGER :: var_is_introduced ;
var bool: aux7828_BOOL:: var_is_introduced ;
var bool: aux7829_BOOL:: var_is_introduced ;
var 2..44: aux7830:: var_is_introduced ;
var bool: aux7831_BOOL:: var_is_introduced ;
var bool: aux7832_BOOL:: var_is_introduced ;
var bool: aux7833_BOOL:: var_is_introduced ;
var {0,1}: aux7833_INTEGER :: var_is_introduced ;
var bool: aux7834_BOOL:: var_is_introduced ;
var bool: aux7835_BOOL:: var_is_introduced ;
var 3..45: aux7836:: var_is_introduced ;
var bool: aux7837_BOOL:: var_is_introduced ;
var bool: aux7838_BOOL:: var_is_introduced ;
var bool: aux7839_BOOL:: var_is_introduced ;
var {0,1}: aux7839_INTEGER :: var_is_introduced ;
var bool: aux7840_BOOL:: var_is_introduced ;
var bool: aux7841_BOOL:: var_is_introduced ;
var bool: aux7842_BOOL:: var_is_introduced ;
var 1..43: aux7843:: var_is_introduced ;
var bool: aux7844_BOOL:: var_is_introduced ;
var bool: aux7845_BOOL:: var_is_introduced ;
var bool: aux7846_BOOL:: var_is_introduced ;
var {0,1}: aux7846_INTEGER :: var_is_introduced ;
var bool: aux7847_BOOL:: var_is_introduced ;
var bool: aux7848_BOOL:: var_is_introduced ;
var 2..44: aux7849:: var_is_introduced ;
var bool: aux7850_BOOL:: var_is_introduced ;
var bool: aux7851_BOOL:: var_is_introduced ;
var bool: aux7852_BOOL:: var_is_introduced ;
var {0,1}: aux7852_INTEGER :: var_is_introduced ;
var bool: aux7853_BOOL:: var_is_introduced ;
var bool: aux7854_BOOL:: var_is_introduced ;
var 2..44: aux7855:: var_is_introduced ;
var bool: aux7856_BOOL:: var_is_introduced ;
var bool: aux7857_BOOL:: var_is_introduced ;
var bool: aux7858_BOOL:: var_is_introduced ;
var {0,1}: aux7858_INTEGER :: var_is_introduced ;
var bool: aux7859_BOOL:: var_is_introduced ;
var bool: aux7860_BOOL:: var_is_introduced ;
var 1..43: aux7861:: var_is_introduced ;
var bool: aux7862_BOOL:: var_is_introduced ;
var bool: aux7863_BOOL:: var_is_introduced ;
var bool: aux7864_BOOL:: var_is_introduced ;
var {0,1}: aux7864_INTEGER :: var_is_introduced ;
var bool: aux7865_BOOL:: var_is_introduced ;
var bool: aux7866_BOOL:: var_is_introduced ;
var 2..44: aux7867:: var_is_introduced ;
var bool: aux7868_BOOL:: var_is_introduced ;
var bool: aux7869_BOOL:: var_is_introduced ;
var bool: aux7870_BOOL:: var_is_introduced ;
var {0,1}: aux7870_INTEGER :: var_is_introduced ;
var bool: aux7871_BOOL:: var_is_introduced ;
var bool: aux7872_BOOL:: var_is_introduced ;
var 3..45: aux7873:: var_is_introduced ;
var bool: aux7874_BOOL:: var_is_introduced ;
var bool: aux7875_BOOL:: var_is_introduced ;
var bool: aux7876_BOOL:: var_is_introduced ;
var {0,1}: aux7876_INTEGER :: var_is_introduced ;
var bool: aux7877_BOOL:: var_is_introduced ;
var bool: aux7878_BOOL:: var_is_introduced ;
var 1..43: aux7879:: var_is_introduced ;
var bool: aux7880_BOOL:: var_is_introduced ;
var bool: aux7881_BOOL:: var_is_introduced ;
var bool: aux7882_BOOL:: var_is_introduced ;
var {0,1}: aux7882_INTEGER :: var_is_introduced ;
var bool: aux7883_BOOL:: var_is_introduced ;
var bool: aux7884_BOOL:: var_is_introduced ;
var 3..45: aux7885:: var_is_introduced ;
var bool: aux7886_BOOL:: var_is_introduced ;
var bool: aux7887_BOOL:: var_is_introduced ;
var bool: aux7888_BOOL:: var_is_introduced ;
var {0,1}: aux7888_INTEGER :: var_is_introduced ;
var bool: aux7889_BOOL:: var_is_introduced ;
var bool: aux7890_BOOL:: var_is_introduced ;
var 2..44: aux7891:: var_is_introduced ;
var bool: aux7892_BOOL:: var_is_introduced ;
var bool: aux7893_BOOL:: var_is_introduced ;
var bool: aux7894_BOOL:: var_is_introduced ;
var {0,1}: aux7894_INTEGER :: var_is_introduced ;
var bool: aux7895_BOOL:: var_is_introduced ;
var bool: aux7896_BOOL:: var_is_introduced ;
var 3..45: aux7897:: var_is_introduced ;
var bool: aux7898_BOOL:: var_is_introduced ;
var bool: aux7899_BOOL:: var_is_introduced ;
var bool: aux7900_BOOL:: var_is_introduced ;
var {0,1}: aux7900_INTEGER :: var_is_introduced ;
var bool: aux7901_BOOL:: var_is_introduced ;
var 4..46: aux7902:: var_is_introduced ;
var bool: aux7903_BOOL:: var_is_introduced ;
var bool: aux7904_BOOL:: var_is_introduced ;
var {0,1}: aux7904_INTEGER :: var_is_introduced ;
var bool: aux7905_BOOL:: var_is_introduced ;
var bool: aux7906_BOOL:: var_is_introduced ;
var 1..43: aux7907:: var_is_introduced ;
var bool: aux7908_BOOL:: var_is_introduced ;
var bool: aux7909_BOOL:: var_is_introduced ;
var bool: aux7910_BOOL:: var_is_introduced ;
var {0,1}: aux7910_INTEGER :: var_is_introduced ;
var bool: aux7911_BOOL:: var_is_introduced ;
var bool: aux7912_BOOL:: var_is_introduced ;
var 2..44: aux7913:: var_is_introduced ;
var bool: aux7914_BOOL:: var_is_introduced ;
var bool: aux7915_BOOL:: var_is_introduced ;
var bool: aux7916_BOOL:: var_is_introduced ;
var {0,1}: aux7916_INTEGER :: var_is_introduced ;
var bool: aux7917_BOOL:: var_is_introduced ;
var bool: aux7918_BOOL:: var_is_introduced ;
var 3..45: aux7919:: var_is_introduced ;
var bool: aux7920_BOOL:: var_is_introduced ;
var bool: aux7921_BOOL:: var_is_introduced ;
var bool: aux7922_BOOL:: var_is_introduced ;
var {0,1}: aux7922_INTEGER :: var_is_introduced ;
var bool: aux7923_BOOL:: var_is_introduced ;
var bool: aux7924_BOOL:: var_is_introduced ;
var 2..44: aux7925:: var_is_introduced ;
var bool: aux7926_BOOL:: var_is_introduced ;
var bool: aux7927_BOOL:: var_is_introduced ;
var bool: aux7928_BOOL:: var_is_introduced ;
var {0,1}: aux7928_INTEGER :: var_is_introduced ;
var bool: aux7929_BOOL:: var_is_introduced ;
var bool: aux7930_BOOL:: var_is_introduced ;
var 2..44: aux7931:: var_is_introduced ;
var bool: aux7932_BOOL:: var_is_introduced ;
var bool: aux7933_BOOL:: var_is_introduced ;
var bool: aux7934_BOOL:: var_is_introduced ;
var {0,1}: aux7934_INTEGER :: var_is_introduced ;
var bool: aux7935_BOOL:: var_is_introduced ;
var bool: aux7936_BOOL:: var_is_introduced ;
var 3..45: aux7937:: var_is_introduced ;
var bool: aux7938_BOOL:: var_is_introduced ;
var bool: aux7939_BOOL:: var_is_introduced ;
var bool: aux7940_BOOL:: var_is_introduced ;
var {0,1}: aux7940_INTEGER :: var_is_introduced ;
var bool: aux7941_BOOL:: var_is_introduced ;
var bool: aux7942_BOOL:: var_is_introduced ;
var 2..44: aux7943:: var_is_introduced ;
var bool: aux7944_BOOL:: var_is_introduced ;
var bool: aux7945_BOOL:: var_is_introduced ;
var bool: aux7946_BOOL:: var_is_introduced ;
var {0,1}: aux7946_INTEGER :: var_is_introduced ;
var bool: aux7947_BOOL:: var_is_introduced ;
var bool: aux7948_BOOL:: var_is_introduced ;
var 1..43: aux7949:: var_is_introduced ;
var bool: aux7950_BOOL:: var_is_introduced ;
var bool: aux7951_BOOL:: var_is_introduced ;
var bool: aux7952_BOOL:: var_is_introduced ;
var {0,1}: aux7952_INTEGER :: var_is_introduced ;
var bool: aux7953_BOOL:: var_is_introduced ;
var bool: aux7954_BOOL:: var_is_introduced ;
var 2..44: aux7955:: var_is_introduced ;
var bool: aux7956_BOOL:: var_is_introduced ;
var bool: aux7957_BOOL:: var_is_introduced ;
var bool: aux7958_BOOL:: var_is_introduced ;
var {0,1}: aux7958_INTEGER :: var_is_introduced ;
var bool: aux7959_BOOL:: var_is_introduced ;
var bool: aux7960_BOOL:: var_is_introduced ;
var bool: aux7961_BOOL:: var_is_introduced ;
var 1..43: aux7962:: var_is_introduced ;
var bool: aux7963_BOOL:: var_is_introduced ;
var bool: aux7964_BOOL:: var_is_introduced ;
var bool: aux7965_BOOL:: var_is_introduced ;
var {0,1}: aux7965_INTEGER :: var_is_introduced ;
var bool: aux7966_BOOL:: var_is_introduced ;
var bool: aux7967_BOOL:: var_is_introduced ;
var 2..44: aux7968:: var_is_introduced ;
var bool: aux7969_BOOL:: var_is_introduced ;
var bool: aux7970_BOOL:: var_is_introduced ;
var bool: aux7971_BOOL:: var_is_introduced ;
var {0,1}: aux7971_INTEGER :: var_is_introduced ;
var bool: aux7972_BOOL:: var_is_introduced ;
var bool: aux7973_BOOL:: var_is_introduced ;
var 1..43: aux7974:: var_is_introduced ;
var bool: aux7975_BOOL:: var_is_introduced ;
var bool: aux7976_BOOL:: var_is_introduced ;
var bool: aux7977_BOOL:: var_is_introduced ;
var {0,1}: aux7977_INTEGER :: var_is_introduced ;
var bool: aux7978_BOOL:: var_is_introduced ;
var bool: aux7979_BOOL:: var_is_introduced ;
var 4..46: aux7980:: var_is_introduced ;
var bool: aux7981_BOOL:: var_is_introduced ;
var bool: aux7982_BOOL:: var_is_introduced ;
var bool: aux7983_BOOL:: var_is_introduced ;
var {0,1}: aux7983_INTEGER :: var_is_introduced ;
var bool: aux7984_BOOL:: var_is_introduced ;
var bool: aux7985_BOOL:: var_is_introduced ;
var 2..44: aux7986:: var_is_introduced ;
var bool: aux7987_BOOL:: var_is_introduced ;
var bool: aux7988_BOOL:: var_is_introduced ;
var bool: aux7989_BOOL:: var_is_introduced ;
var {0,1}: aux7989_INTEGER :: var_is_introduced ;
var bool: aux7990_BOOL:: var_is_introduced ;
var bool: aux7991_BOOL:: var_is_introduced ;
var 3..45: aux7992:: var_is_introduced ;
var bool: aux7993_BOOL:: var_is_introduced ;
var bool: aux7994_BOOL:: var_is_introduced ;
var bool: aux7995_BOOL:: var_is_introduced ;
var {0,1}: aux7995_INTEGER :: var_is_introduced ;
var bool: aux7996_BOOL:: var_is_introduced ;
var bool: aux7997_BOOL:: var_is_introduced ;
var 1..43: aux7998:: var_is_introduced ;
var bool: aux7999_BOOL:: var_is_introduced ;
var bool: aux8000_BOOL:: var_is_introduced ;
var bool: aux8001_BOOL:: var_is_introduced ;
var {0,1}: aux8001_INTEGER :: var_is_introduced ;
var bool: aux8002_BOOL:: var_is_introduced ;
var bool: aux8003_BOOL:: var_is_introduced ;
var 3..45: aux8004:: var_is_introduced ;
var bool: aux8005_BOOL:: var_is_introduced ;
var bool: aux8006_BOOL:: var_is_introduced ;
var bool: aux8007_BOOL:: var_is_introduced ;
var {0,1}: aux8007_INTEGER :: var_is_introduced ;
var bool: aux8008_BOOL:: var_is_introduced ;
var bool: aux8009_BOOL:: var_is_introduced ;
var 2..44: aux8010:: var_is_introduced ;
var bool: aux8011_BOOL:: var_is_introduced ;
var bool: aux8012_BOOL:: var_is_introduced ;
var bool: aux8013_BOOL:: var_is_introduced ;
var {0,1}: aux8013_INTEGER :: var_is_introduced ;
var bool: aux8014_BOOL:: var_is_introduced ;
var bool: aux8015_BOOL:: var_is_introduced ;
var 3..45: aux8016:: var_is_introduced ;
var bool: aux8017_BOOL:: var_is_introduced ;
var bool: aux8018_BOOL:: var_is_introduced ;
var bool: aux8019_BOOL:: var_is_introduced ;
var {0,1}: aux8019_INTEGER :: var_is_introduced ;
var bool: aux8020_BOOL:: var_is_introduced ;
var 2..44: aux8021:: var_is_introduced ;
var bool: aux8022_BOOL:: var_is_introduced ;
var bool: aux8023_BOOL:: var_is_introduced ;
var {0,1}: aux8023_INTEGER :: var_is_introduced ;
var bool: aux8024_BOOL:: var_is_introduced ;
var bool: aux8025_BOOL:: var_is_introduced ;
var 1..43: aux8026:: var_is_introduced ;
var bool: aux8027_BOOL:: var_is_introduced ;
var bool: aux8028_BOOL:: var_is_introduced ;
var bool: aux8029_BOOL:: var_is_introduced ;
var {0,1}: aux8029_INTEGER :: var_is_introduced ;
var bool: aux8030_BOOL:: var_is_introduced ;
var bool: aux8031_BOOL:: var_is_introduced ;
var 2..44: aux8032:: var_is_introduced ;
var bool: aux8033_BOOL:: var_is_introduced ;
var bool: aux8034_BOOL:: var_is_introduced ;
var bool: aux8035_BOOL:: var_is_introduced ;
var {0,1}: aux8035_INTEGER :: var_is_introduced ;
var bool: aux8036_BOOL:: var_is_introduced ;
var bool: aux8037_BOOL:: var_is_introduced ;
var 3..45: aux8038:: var_is_introduced ;
var bool: aux8039_BOOL:: var_is_introduced ;
var bool: aux8040_BOOL:: var_is_introduced ;
var bool: aux8041_BOOL:: var_is_introduced ;
var {0,1}: aux8041_INTEGER :: var_is_introduced ;
var bool: aux8042_BOOL:: var_is_introduced ;
var bool: aux8043_BOOL:: var_is_introduced ;
var 2..44: aux8044:: var_is_introduced ;
var bool: aux8045_BOOL:: var_is_introduced ;
var bool: aux8046_BOOL:: var_is_introduced ;
var bool: aux8047_BOOL:: var_is_introduced ;
var {0,1}: aux8047_INTEGER :: var_is_introduced ;
var bool: aux8048_BOOL:: var_is_introduced ;
var bool: aux8049_BOOL:: var_is_introduced ;
var 2..44: aux8050:: var_is_introduced ;
var bool: aux8051_BOOL:: var_is_introduced ;
var bool: aux8052_BOOL:: var_is_introduced ;
var bool: aux8053_BOOL:: var_is_introduced ;
var {0,1}: aux8053_INTEGER :: var_is_introduced ;
var bool: aux8054_BOOL:: var_is_introduced ;
var bool: aux8055_BOOL:: var_is_introduced ;
var 3..45: aux8056:: var_is_introduced ;
var bool: aux8057_BOOL:: var_is_introduced ;
var bool: aux8058_BOOL:: var_is_introduced ;
var bool: aux8059_BOOL:: var_is_introduced ;
var {0,1}: aux8059_INTEGER :: var_is_introduced ;
var bool: aux8060_BOOL:: var_is_introduced ;
var bool: aux8061_BOOL:: var_is_introduced ;
var 2..44: aux8062:: var_is_introduced ;
var bool: aux8063_BOOL:: var_is_introduced ;
var bool: aux8064_BOOL:: var_is_introduced ;
var bool: aux8065_BOOL:: var_is_introduced ;
var {0,1}: aux8065_INTEGER :: var_is_introduced ;
var bool: aux8066_BOOL:: var_is_introduced ;
var bool: aux8067_BOOL:: var_is_introduced ;
var 1..43: aux8068:: var_is_introduced ;
var bool: aux8069_BOOL:: var_is_introduced ;
var bool: aux8070_BOOL:: var_is_introduced ;
var bool: aux8071_BOOL:: var_is_introduced ;
var {0,1}: aux8071_INTEGER :: var_is_introduced ;
var bool: aux8072_BOOL:: var_is_introduced ;
var bool: aux8073_BOOL:: var_is_introduced ;
var 2..44: aux8074:: var_is_introduced ;
var bool: aux8075_BOOL:: var_is_introduced ;
var bool: aux8076_BOOL:: var_is_introduced ;
var bool: aux8077_BOOL:: var_is_introduced ;
var {0,1}: aux8077_INTEGER :: var_is_introduced ;
var bool: aux8078_BOOL:: var_is_introduced ;
var bool: aux8079_BOOL:: var_is_introduced ;
var 3..45: aux8080:: var_is_introduced ;
var bool: aux8081_BOOL:: var_is_introduced ;
var bool: aux8082_BOOL:: var_is_introduced ;
var {0,1}: aux8082_INTEGER :: var_is_introduced ;
var bool: aux8083_BOOL:: var_is_introduced ;
var bool: aux8084_BOOL:: var_is_introduced ;
var 1..43: aux8085:: var_is_introduced ;
var bool: aux8086_BOOL:: var_is_introduced ;
var bool: aux8087_BOOL:: var_is_introduced ;
var bool: aux8088_BOOL:: var_is_introduced ;
var {0,1}: aux8088_INTEGER :: var_is_introduced ;
var bool: aux8089_BOOL:: var_is_introduced ;
var bool: aux8090_BOOL:: var_is_introduced ;
var 2..44: aux8091:: var_is_introduced ;
var bool: aux8092_BOOL:: var_is_introduced ;
var bool: aux8093_BOOL:: var_is_introduced ;
var bool: aux8094_BOOL:: var_is_introduced ;
var {0,1}: aux8094_INTEGER :: var_is_introduced ;
var bool: aux8095_BOOL:: var_is_introduced ;
var bool: aux8096_BOOL:: var_is_introduced ;
var 2..44: aux8097:: var_is_introduced ;
var bool: aux8098_BOOL:: var_is_introduced ;
var bool: aux8099_BOOL:: var_is_introduced ;
var bool: aux8100_BOOL:: var_is_introduced ;
var {0,1}: aux8100_INTEGER :: var_is_introduced ;
var bool: aux8101_BOOL:: var_is_introduced ;
var bool: aux8102_BOOL:: var_is_introduced ;
var 2..44: aux8103:: var_is_introduced ;
var bool: aux8104_BOOL:: var_is_introduced ;
var bool: aux8105_BOOL:: var_is_introduced ;
var bool: aux8106_BOOL:: var_is_introduced ;
var {0,1}: aux8106_INTEGER :: var_is_introduced ;
var bool: aux8107_BOOL:: var_is_introduced ;
var bool: aux8108_BOOL:: var_is_introduced ;
var 3..45: aux8109:: var_is_introduced ;
var bool: aux8110_BOOL:: var_is_introduced ;
var bool: aux8111_BOOL:: var_is_introduced ;
var bool: aux8112_BOOL:: var_is_introduced ;
var {0,1}: aux8112_INTEGER :: var_is_introduced ;
var bool: aux8113_BOOL:: var_is_introduced ;
var bool: aux8114_BOOL:: var_is_introduced ;
var 2..44: aux8115:: var_is_introduced ;
var bool: aux8116_BOOL:: var_is_introduced ;
var bool: aux8117_BOOL:: var_is_introduced ;
var bool: aux8118_BOOL:: var_is_introduced ;
var {0,1}: aux8118_INTEGER :: var_is_introduced ;
var bool: aux8119_BOOL:: var_is_introduced ;
var bool: aux8120_BOOL:: var_is_introduced ;
var 1..43: aux8121:: var_is_introduced ;
var bool: aux8122_BOOL:: var_is_introduced ;
var bool: aux8123_BOOL:: var_is_introduced ;
var bool: aux8124_BOOL:: var_is_introduced ;
var {0,1}: aux8124_INTEGER :: var_is_introduced ;
var bool: aux8125_BOOL:: var_is_introduced ;
var bool: aux8126_BOOL:: var_is_introduced ;
var 2..44: aux8127:: var_is_introduced ;
var bool: aux8128_BOOL:: var_is_introduced ;
var bool: aux8129_BOOL:: var_is_introduced ;
var bool: aux8130_BOOL:: var_is_introduced ;
var {0,1}: aux8130_INTEGER :: var_is_introduced ;
var bool: aux8131_BOOL:: var_is_introduced ;
var bool: aux8132_BOOL:: var_is_introduced ;
var 1..43: aux8133:: var_is_introduced ;
var bool: aux8134_BOOL:: var_is_introduced ;
var bool: aux8135_BOOL:: var_is_introduced ;
var bool: aux8136_BOOL:: var_is_introduced ;
var {0,1}: aux8136_INTEGER :: var_is_introduced ;
var bool: aux8137_BOOL:: var_is_introduced ;
var bool: aux8138_BOOL:: var_is_introduced ;
var 2..44: aux8139:: var_is_introduced ;
var bool: aux8140_BOOL:: var_is_introduced ;
var bool: aux8141_BOOL:: var_is_introduced ;
var bool: aux8142_BOOL:: var_is_introduced ;
var {0,1}: aux8142_INTEGER :: var_is_introduced ;
var bool: aux8143_BOOL:: var_is_introduced ;
var bool: aux8144_BOOL:: var_is_introduced ;
var 2..44: aux8145:: var_is_introduced ;
var bool: aux8146_BOOL:: var_is_introduced ;
var bool: aux8147_BOOL:: var_is_introduced ;
var bool: aux8148_BOOL:: var_is_introduced ;
var {0,1}: aux8148_INTEGER :: var_is_introduced ;
var bool: aux8149_BOOL:: var_is_introduced ;
var bool: aux8150_BOOL:: var_is_introduced ;
var 1..43: aux8151:: var_is_introduced ;
var bool: aux8152_BOOL:: var_is_introduced ;
var bool: aux8153_BOOL:: var_is_introduced ;
var bool: aux8154_BOOL:: var_is_introduced ;
var {0,1}: aux8154_INTEGER :: var_is_introduced ;
var bool: aux8155_BOOL:: var_is_introduced ;
var bool: aux8156_BOOL:: var_is_introduced ;
var 4..46: aux8157:: var_is_introduced ;
var bool: aux8158_BOOL:: var_is_introduced ;
var bool: aux8159_BOOL:: var_is_introduced ;
var bool: aux8160_BOOL:: var_is_introduced ;
var {0,1}: aux8160_INTEGER :: var_is_introduced ;
var bool: aux8161_BOOL:: var_is_introduced ;
var bool: aux8162_BOOL:: var_is_introduced ;
var 2..44: aux8163:: var_is_introduced ;
var bool: aux8164_BOOL:: var_is_introduced ;
var bool: aux8165_BOOL:: var_is_introduced ;
var bool: aux8166_BOOL:: var_is_introduced ;
var {0,1}: aux8166_INTEGER :: var_is_introduced ;
var bool: aux8167_BOOL:: var_is_introduced ;
var bool: aux8168_BOOL:: var_is_introduced ;
var 3..45: aux8169:: var_is_introduced ;
var bool: aux8170_BOOL:: var_is_introduced ;
var bool: aux8171_BOOL:: var_is_introduced ;
var bool: aux8172_BOOL:: var_is_introduced ;
var {0,1}: aux8172_INTEGER :: var_is_introduced ;
var bool: aux8173_BOOL:: var_is_introduced ;
var bool: aux8174_BOOL:: var_is_introduced ;
var 1..43: aux8175:: var_is_introduced ;
var bool: aux8176_BOOL:: var_is_introduced ;
var bool: aux8177_BOOL:: var_is_introduced ;
var bool: aux8178_BOOL:: var_is_introduced ;
var {0,1}: aux8178_INTEGER :: var_is_introduced ;
var bool: aux8179_BOOL:: var_is_introduced ;
var bool: aux8180_BOOL:: var_is_introduced ;
var 3..45: aux8181:: var_is_introduced ;
var bool: aux8182_BOOL:: var_is_introduced ;
var bool: aux8183_BOOL:: var_is_introduced ;
var bool: aux8184_BOOL:: var_is_introduced ;
var {0,1}: aux8184_INTEGER :: var_is_introduced ;
var bool: aux8185_BOOL:: var_is_introduced ;
var bool: aux8186_BOOL:: var_is_introduced ;
var 2..44: aux8187:: var_is_introduced ;
var bool: aux8188_BOOL:: var_is_introduced ;
var bool: aux8189_BOOL:: var_is_introduced ;
var bool: aux8190_BOOL:: var_is_introduced ;
var {0,1}: aux8190_INTEGER :: var_is_introduced ;
var bool: aux8191_BOOL:: var_is_introduced ;
var bool: aux8192_BOOL:: var_is_introduced ;
var 3..45: aux8193:: var_is_introduced ;
var bool: aux8194_BOOL:: var_is_introduced ;
var bool: aux8195_BOOL:: var_is_introduced ;
var bool: aux8196_BOOL:: var_is_introduced ;
var {0,1}: aux8196_INTEGER :: var_is_introduced ;
var bool: aux8197_BOOL:: var_is_introduced ;
var bool: aux8198_BOOL:: var_is_introduced ;
var bool: aux8199_BOOL:: var_is_introduced ;
var 1..43: aux8200:: var_is_introduced ;
var bool: aux8201_BOOL:: var_is_introduced ;
var bool: aux8202_BOOL:: var_is_introduced ;
var bool: aux8203_BOOL:: var_is_introduced ;
var {0,1}: aux8203_INTEGER :: var_is_introduced ;
var bool: aux8204_BOOL:: var_is_introduced ;
var bool: aux8205_BOOL:: var_is_introduced ;
var 2..44: aux8206:: var_is_introduced ;
var bool: aux8207_BOOL:: var_is_introduced ;
var bool: aux8208_BOOL:: var_is_introduced ;
var bool: aux8209_BOOL:: var_is_introduced ;
var {0,1}: aux8209_INTEGER :: var_is_introduced ;
var bool: aux8210_BOOL:: var_is_introduced ;
var bool: aux8211_BOOL:: var_is_introduced ;
var 2..44: aux8212:: var_is_introduced ;
var bool: aux8213_BOOL:: var_is_introduced ;
var bool: aux8214_BOOL:: var_is_introduced ;
var bool: aux8215_BOOL:: var_is_introduced ;
var {0,1}: aux8215_INTEGER :: var_is_introduced ;
var bool: aux8216_BOOL:: var_is_introduced ;
var bool: aux8217_BOOL:: var_is_introduced ;
var 1..43: aux8218:: var_is_introduced ;
var bool: aux8219_BOOL:: var_is_introduced ;
var bool: aux8220_BOOL:: var_is_introduced ;
var bool: aux8221_BOOL:: var_is_introduced ;
var {0,1}: aux8221_INTEGER :: var_is_introduced ;
var bool: aux8222_BOOL:: var_is_introduced ;
var bool: aux8223_BOOL:: var_is_introduced ;
var 4..46: aux8224:: var_is_introduced ;
var bool: aux8225_BOOL:: var_is_introduced ;
var bool: aux8226_BOOL:: var_is_introduced ;
var bool: aux8227_BOOL:: var_is_introduced ;
var {0,1}: aux8227_INTEGER :: var_is_introduced ;
var bool: aux8228_BOOL:: var_is_introduced ;
var bool: aux8229_BOOL:: var_is_introduced ;
var 3..45: aux8230:: var_is_introduced ;
var bool: aux8231_BOOL:: var_is_introduced ;
var bool: aux8232_BOOL:: var_is_introduced ;
var bool: aux8233_BOOL:: var_is_introduced ;
var {0,1}: aux8233_INTEGER :: var_is_introduced ;
var bool: aux8234_BOOL:: var_is_introduced ;
var bool: aux8235_BOOL:: var_is_introduced ;
var 1..43: aux8236:: var_is_introduced ;
var bool: aux8237_BOOL:: var_is_introduced ;
var bool: aux8238_BOOL:: var_is_introduced ;
var bool: aux8239_BOOL:: var_is_introduced ;
var {0,1}: aux8239_INTEGER :: var_is_introduced ;
var bool: aux8240_BOOL:: var_is_introduced ;
var bool: aux8241_BOOL:: var_is_introduced ;
var 3..45: aux8242:: var_is_introduced ;
var bool: aux8243_BOOL:: var_is_introduced ;
var bool: aux8244_BOOL:: var_is_introduced ;
var bool: aux8245_BOOL:: var_is_introduced ;
var {0,1}: aux8245_INTEGER :: var_is_introduced ;
var bool: aux8246_BOOL:: var_is_introduced ;
var bool: aux8247_BOOL:: var_is_introduced ;
var 2..44: aux8248:: var_is_introduced ;
var bool: aux8249_BOOL:: var_is_introduced ;
var bool: aux8250_BOOL:: var_is_introduced ;
var bool: aux8251_BOOL:: var_is_introduced ;
var {0,1}: aux8251_INTEGER :: var_is_introduced ;
var bool: aux8252_BOOL:: var_is_introduced ;
var bool: aux8253_BOOL:: var_is_introduced ;
var 3..45: aux8254:: var_is_introduced ;
var bool: aux8255_BOOL:: var_is_introduced ;
var bool: aux8256_BOOL:: var_is_introduced ;
var bool: aux8257_BOOL:: var_is_introduced ;
var {0,1}: aux8257_INTEGER :: var_is_introduced ;
var bool: aux8258_BOOL:: var_is_introduced ;
var 2..44: aux8259:: var_is_introduced ;
var bool: aux8260_BOOL:: var_is_introduced ;
var bool: aux8261_BOOL:: var_is_introduced ;
var {0,1}: aux8261_INTEGER :: var_is_introduced ;
var bool: aux8262_BOOL:: var_is_introduced ;
var bool: aux8263_BOOL:: var_is_introduced ;
var 1..43: aux8264:: var_is_introduced ;
var bool: aux8265_BOOL:: var_is_introduced ;
var bool: aux8266_BOOL:: var_is_introduced ;
var bool: aux8267_BOOL:: var_is_introduced ;
var {0,1}: aux8267_INTEGER :: var_is_introduced ;
var bool: aux8268_BOOL:: var_is_introduced ;
var bool: aux8269_BOOL:: var_is_introduced ;
var 2..44: aux8270:: var_is_introduced ;
var bool: aux8271_BOOL:: var_is_introduced ;
var bool: aux8272_BOOL:: var_is_introduced ;
var bool: aux8273_BOOL:: var_is_introduced ;
var {0,1}: aux8273_INTEGER :: var_is_introduced ;
var bool: aux8274_BOOL:: var_is_introduced ;
var bool: aux8275_BOOL:: var_is_introduced ;
var 3..45: aux8276:: var_is_introduced ;
var bool: aux8277_BOOL:: var_is_introduced ;
var bool: aux8278_BOOL:: var_is_introduced ;
var bool: aux8279_BOOL:: var_is_introduced ;
var {0,1}: aux8279_INTEGER :: var_is_introduced ;
var bool: aux8280_BOOL:: var_is_introduced ;
var bool: aux8281_BOOL:: var_is_introduced ;
var 2..44: aux8282:: var_is_introduced ;
var bool: aux8283_BOOL:: var_is_introduced ;
var bool: aux8284_BOOL:: var_is_introduced ;
var bool: aux8285_BOOL:: var_is_introduced ;
var {0,1}: aux8285_INTEGER :: var_is_introduced ;
var bool: aux8286_BOOL:: var_is_introduced ;
var bool: aux8287_BOOL:: var_is_introduced ;
var 2..44: aux8288:: var_is_introduced ;
var bool: aux8289_BOOL:: var_is_introduced ;
var bool: aux8290_BOOL:: var_is_introduced ;
var bool: aux8291_BOOL:: var_is_introduced ;
var {0,1}: aux8291_INTEGER :: var_is_introduced ;
var bool: aux8292_BOOL:: var_is_introduced ;
var bool: aux8293_BOOL:: var_is_introduced ;
var 3..45: aux8294:: var_is_introduced ;
var bool: aux8295_BOOL:: var_is_introduced ;
var bool: aux8296_BOOL:: var_is_introduced ;
var bool: aux8297_BOOL:: var_is_introduced ;
var {0,1}: aux8297_INTEGER :: var_is_introduced ;
var bool: aux8298_BOOL:: var_is_introduced ;
var bool: aux8299_BOOL:: var_is_introduced ;
var 2..44: aux8300:: var_is_introduced ;
var bool: aux8301_BOOL:: var_is_introduced ;
var bool: aux8302_BOOL:: var_is_introduced ;
var bool: aux8303_BOOL:: var_is_introduced ;
var {0,1}: aux8303_INTEGER :: var_is_introduced ;
var bool: aux8304_BOOL:: var_is_introduced ;
var bool: aux8305_BOOL:: var_is_introduced ;
var 1..43: aux8306:: var_is_introduced ;
var bool: aux8307_BOOL:: var_is_introduced ;
var bool: aux8308_BOOL:: var_is_introduced ;
var bool: aux8309_BOOL:: var_is_introduced ;
var {0,1}: aux8309_INTEGER :: var_is_introduced ;
var bool: aux8310_BOOL:: var_is_introduced ;
var bool: aux8311_BOOL:: var_is_introduced ;
var 2..44: aux8312:: var_is_introduced ;
var bool: aux8313_BOOL:: var_is_introduced ;
var bool: aux8314_BOOL:: var_is_introduced ;
var bool: aux8315_BOOL:: var_is_introduced ;
var {0,1}: aux8315_INTEGER :: var_is_introduced ;
var bool: aux8316_BOOL:: var_is_introduced ;
var bool: aux8317_BOOL:: var_is_introduced ;
var 2..44: aux8318:: var_is_introduced ;
var bool: aux8319_BOOL:: var_is_introduced ;
var bool: aux8320_BOOL:: var_is_introduced ;
var {0,1}: aux8320_INTEGER :: var_is_introduced ;
var bool: aux8321_BOOL:: var_is_introduced ;
var bool: aux8322_BOOL:: var_is_introduced ;
var 1..43: aux8323:: var_is_introduced ;
var bool: aux8324_BOOL:: var_is_introduced ;
var bool: aux8325_BOOL:: var_is_introduced ;
var bool: aux8326_BOOL:: var_is_introduced ;
var {0,1}: aux8326_INTEGER :: var_is_introduced ;
var bool: aux8327_BOOL:: var_is_introduced ;
var bool: aux8328_BOOL:: var_is_introduced ;
var 3..45: aux8329:: var_is_introduced ;
var bool: aux8330_BOOL:: var_is_introduced ;
var bool: aux8331_BOOL:: var_is_introduced ;
var bool: aux8332_BOOL:: var_is_introduced ;
var {0,1}: aux8332_INTEGER :: var_is_introduced ;
var bool: aux8333_BOOL:: var_is_introduced ;
var bool: aux8334_BOOL:: var_is_introduced ;
var 2..44: aux8335:: var_is_introduced ;
var bool: aux8336_BOOL:: var_is_introduced ;
var bool: aux8337_BOOL:: var_is_introduced ;
var bool: aux8338_BOOL:: var_is_introduced ;
var {0,1}: aux8338_INTEGER :: var_is_introduced ;
var bool: aux8339_BOOL:: var_is_introduced ;
var bool: aux8340_BOOL:: var_is_introduced ;
var 2..44: aux8341:: var_is_introduced ;
var bool: aux8342_BOOL:: var_is_introduced ;
var bool: aux8343_BOOL:: var_is_introduced ;
var bool: aux8344_BOOL:: var_is_introduced ;
var {0,1}: aux8344_INTEGER :: var_is_introduced ;
var bool: aux8345_BOOL:: var_is_introduced ;
var bool: aux8346_BOOL:: var_is_introduced ;
var 3..45: aux8347:: var_is_introduced ;
var bool: aux8348_BOOL:: var_is_introduced ;
var bool: aux8349_BOOL:: var_is_introduced ;
var bool: aux8350_BOOL:: var_is_introduced ;
var {0,1}: aux8350_INTEGER :: var_is_introduced ;
var bool: aux8351_BOOL:: var_is_introduced ;
var bool: aux8352_BOOL:: var_is_introduced ;
var 2..44: aux8353:: var_is_introduced ;
var bool: aux8354_BOOL:: var_is_introduced ;
var bool: aux8355_BOOL:: var_is_introduced ;
var bool: aux8356_BOOL:: var_is_introduced ;
var {0,1}: aux8356_INTEGER :: var_is_introduced ;
var bool: aux8357_BOOL:: var_is_introduced ;
var bool: aux8358_BOOL:: var_is_introduced ;
var 1..43: aux8359:: var_is_introduced ;
var bool: aux8360_BOOL:: var_is_introduced ;
var bool: aux8361_BOOL:: var_is_introduced ;
var bool: aux8362_BOOL:: var_is_introduced ;
var {0,1}: aux8362_INTEGER :: var_is_introduced ;
var bool: aux8363_BOOL:: var_is_introduced ;
var bool: aux8364_BOOL:: var_is_introduced ;
var 2..44: aux8365:: var_is_introduced ;
var bool: aux8366_BOOL:: var_is_introduced ;
var bool: aux8367_BOOL:: var_is_introduced ;
var bool: aux8368_BOOL:: var_is_introduced ;
var {0,1}: aux8368_INTEGER :: var_is_introduced ;
var bool: aux8369_BOOL:: var_is_introduced ;
var bool: aux8370_BOOL:: var_is_introduced ;
var 1..43: aux8371:: var_is_introduced ;
var bool: aux8372_BOOL:: var_is_introduced ;
var bool: aux8373_BOOL:: var_is_introduced ;
var bool: aux8374_BOOL:: var_is_introduced ;
var {0,1}: aux8374_INTEGER :: var_is_introduced ;
var bool: aux8375_BOOL:: var_is_introduced ;
var bool: aux8376_BOOL:: var_is_introduced ;
var 2..44: aux8377:: var_is_introduced ;
var bool: aux8378_BOOL:: var_is_introduced ;
var bool: aux8379_BOOL:: var_is_introduced ;
var bool: aux8380_BOOL:: var_is_introduced ;
var {0,1}: aux8380_INTEGER :: var_is_introduced ;
var bool: aux8381_BOOL:: var_is_introduced ;
var bool: aux8382_BOOL:: var_is_introduced ;
var 2..44: aux8383:: var_is_introduced ;
var bool: aux8384_BOOL:: var_is_introduced ;
var bool: aux8385_BOOL:: var_is_introduced ;
var bool: aux8386_BOOL:: var_is_introduced ;
var {0,1}: aux8386_INTEGER :: var_is_introduced ;
var bool: aux8387_BOOL:: var_is_introduced ;
var bool: aux8388_BOOL:: var_is_introduced ;
var 1..43: aux8389:: var_is_introduced ;
var bool: aux8390_BOOL:: var_is_introduced ;
var bool: aux8391_BOOL:: var_is_introduced ;
var bool: aux8392_BOOL:: var_is_introduced ;
var {0,1}: aux8392_INTEGER :: var_is_introduced ;
var bool: aux8393_BOOL:: var_is_introduced ;
var bool: aux8394_BOOL:: var_is_introduced ;
var 4..46: aux8395:: var_is_introduced ;
var bool: aux8396_BOOL:: var_is_introduced ;
var bool: aux8397_BOOL:: var_is_introduced ;
var bool: aux8398_BOOL:: var_is_introduced ;
var {0,1}: aux8398_INTEGER :: var_is_introduced ;
var bool: aux8399_BOOL:: var_is_introduced ;
var bool: aux8400_BOOL:: var_is_introduced ;
var 2..44: aux8401:: var_is_introduced ;
var bool: aux8402_BOOL:: var_is_introduced ;
var bool: aux8403_BOOL:: var_is_introduced ;
var bool: aux8404_BOOL:: var_is_introduced ;
var {0,1}: aux8404_INTEGER :: var_is_introduced ;
var bool: aux8405_BOOL:: var_is_introduced ;
var bool: aux8406_BOOL:: var_is_introduced ;
var 3..45: aux8407:: var_is_introduced ;
var bool: aux8408_BOOL:: var_is_introduced ;
var bool: aux8409_BOOL:: var_is_introduced ;
var bool: aux8410_BOOL:: var_is_introduced ;
var {0,1}: aux8410_INTEGER :: var_is_introduced ;
var bool: aux8411_BOOL:: var_is_introduced ;
var bool: aux8412_BOOL:: var_is_introduced ;
var 1..43: aux8413:: var_is_introduced ;
var bool: aux8414_BOOL:: var_is_introduced ;
var bool: aux8415_BOOL:: var_is_introduced ;
var bool: aux8416_BOOL:: var_is_introduced ;
var {0,1}: aux8416_INTEGER :: var_is_introduced ;
var bool: aux8417_BOOL:: var_is_introduced ;
var bool: aux8418_BOOL:: var_is_introduced ;
var 3..45: aux8419:: var_is_introduced ;
var bool: aux8420_BOOL:: var_is_introduced ;
var bool: aux8421_BOOL:: var_is_introduced ;
var bool: aux8422_BOOL:: var_is_introduced ;
var {0,1}: aux8422_INTEGER :: var_is_introduced ;
var bool: aux8423_BOOL:: var_is_introduced ;
var bool: aux8424_BOOL:: var_is_introduced ;
var 2..44: aux8425:: var_is_introduced ;
var bool: aux8426_BOOL:: var_is_introduced ;
var bool: aux8427_BOOL:: var_is_introduced ;
var bool: aux8428_BOOL:: var_is_introduced ;
var {0,1}: aux8428_INTEGER :: var_is_introduced ;
var bool: aux8429_BOOL:: var_is_introduced ;
var bool: aux8430_BOOL:: var_is_introduced ;
var 3..45: aux8431:: var_is_introduced ;
var bool: aux8432_BOOL:: var_is_introduced ;
var bool: aux8433_BOOL:: var_is_introduced ;
var bool: aux8434_BOOL:: var_is_introduced ;
var {0,1}: aux8434_INTEGER :: var_is_introduced ;
var bool: aux8435_BOOL:: var_is_introduced ;
var bool: aux8436_BOOL:: var_is_introduced ;
var bool: aux8437_BOOL:: var_is_introduced ;
var 1..43: aux8438:: var_is_introduced ;
var bool: aux8439_BOOL:: var_is_introduced ;
var bool: aux8440_BOOL:: var_is_introduced ;
var bool: aux8441_BOOL:: var_is_introduced ;
var {0,1}: aux8441_INTEGER :: var_is_introduced ;
var bool: aux8442_BOOL:: var_is_introduced ;
var bool: aux8443_BOOL:: var_is_introduced ;
var 2..44: aux8444:: var_is_introduced ;
var bool: aux8445_BOOL:: var_is_introduced ;
var bool: aux8446_BOOL:: var_is_introduced ;
var bool: aux8447_BOOL:: var_is_introduced ;
var {0,1}: aux8447_INTEGER :: var_is_introduced ;
var bool: aux8448_BOOL:: var_is_introduced ;
var bool: aux8449_BOOL:: var_is_introduced ;
var 2..44: aux8450:: var_is_introduced ;
var bool: aux8451_BOOL:: var_is_introduced ;
var bool: aux8452_BOOL:: var_is_introduced ;
var bool: aux8453_BOOL:: var_is_introduced ;
var {0,1}: aux8453_INTEGER :: var_is_introduced ;
var bool: aux8454_BOOL:: var_is_introduced ;
var bool: aux8455_BOOL:: var_is_introduced ;
var 1..43: aux8456:: var_is_introduced ;
var bool: aux8457_BOOL:: var_is_introduced ;
var bool: aux8458_BOOL:: var_is_introduced ;
var bool: aux8459_BOOL:: var_is_introduced ;
var {0,1}: aux8459_INTEGER :: var_is_introduced ;
var bool: aux8460_BOOL:: var_is_introduced ;
var bool: aux8461_BOOL:: var_is_introduced ;
var 4..46: aux8462:: var_is_introduced ;
var bool: aux8463_BOOL:: var_is_introduced ;
var bool: aux8464_BOOL:: var_is_introduced ;
var bool: aux8465_BOOL:: var_is_introduced ;
var {0,1}: aux8465_INTEGER :: var_is_introduced ;
var bool: aux8466_BOOL:: var_is_introduced ;
var bool: aux8467_BOOL:: var_is_introduced ;
var 2..44: aux8468:: var_is_introduced ;
var bool: aux8469_BOOL:: var_is_introduced ;
var bool: aux8470_BOOL:: var_is_introduced ;
var bool: aux8471_BOOL:: var_is_introduced ;
var {0,1}: aux8471_INTEGER :: var_is_introduced ;
var bool: aux8472_BOOL:: var_is_introduced ;
var bool: aux8473_BOOL:: var_is_introduced ;
var 3..45: aux8474:: var_is_introduced ;
var bool: aux8475_BOOL:: var_is_introduced ;
var bool: aux8476_BOOL:: var_is_introduced ;
var bool: aux8477_BOOL:: var_is_introduced ;
var {0,1}: aux8477_INTEGER :: var_is_introduced ;
var bool: aux8478_BOOL:: var_is_introduced ;
var bool: aux8479_BOOL:: var_is_introduced ;
var 3..45: aux8480:: var_is_introduced ;
var bool: aux8481_BOOL:: var_is_introduced ;
var bool: aux8482_BOOL:: var_is_introduced ;
var bool: aux8483_BOOL:: var_is_introduced ;
var {0,1}: aux8483_INTEGER :: var_is_introduced ;
var bool: aux8484_BOOL:: var_is_introduced ;
var bool: aux8485_BOOL:: var_is_introduced ;
var 2..44: aux8486:: var_is_introduced ;
var bool: aux8487_BOOL:: var_is_introduced ;
var bool: aux8488_BOOL:: var_is_introduced ;
var bool: aux8489_BOOL:: var_is_introduced ;
var {0,1}: aux8489_INTEGER :: var_is_introduced ;
var bool: aux8490_BOOL:: var_is_introduced ;
var bool: aux8491_BOOL:: var_is_introduced ;
var 3..45: aux8492:: var_is_introduced ;
var bool: aux8493_BOOL:: var_is_introduced ;
var bool: aux8494_BOOL:: var_is_introduced ;
var bool: aux8495_BOOL:: var_is_introduced ;
var {0,1}: aux8495_INTEGER :: var_is_introduced ;
var bool: aux8496_BOOL:: var_is_introduced ;
var 1..43: aux8497:: var_is_introduced ;
var bool: aux8498_BOOL:: var_is_introduced ;
var bool: aux8499_BOOL:: var_is_introduced ;
var {0,1}: aux8499_INTEGER :: var_is_introduced ;
var bool: aux8500_BOOL:: var_is_introduced ;
var bool: aux8501_BOOL:: var_is_introduced ;
var 1..43: aux8502:: var_is_introduced ;
var bool: aux8503_BOOL:: var_is_introduced ;
var bool: aux8504_BOOL:: var_is_introduced ;
var bool: aux8505_BOOL:: var_is_introduced ;
var {0,1}: aux8505_INTEGER :: var_is_introduced ;
var bool: aux8506_BOOL:: var_is_introduced ;
var bool: aux8507_BOOL:: var_is_introduced ;
var 2..44: aux8508:: var_is_introduced ;
var bool: aux8509_BOOL:: var_is_introduced ;
var bool: aux8510_BOOL:: var_is_introduced ;
var bool: aux8511_BOOL:: var_is_introduced ;
var {0,1}: aux8511_INTEGER :: var_is_introduced ;
var bool: aux8512_BOOL:: var_is_introduced ;
var bool: aux8513_BOOL:: var_is_introduced ;
var 3..45: aux8514:: var_is_introduced ;
var bool: aux8515_BOOL:: var_is_introduced ;
var bool: aux8516_BOOL:: var_is_introduced ;
var bool: aux8517_BOOL:: var_is_introduced ;
var {0,1}: aux8517_INTEGER :: var_is_introduced ;
var bool: aux8518_BOOL:: var_is_introduced ;
var bool: aux8519_BOOL:: var_is_introduced ;
var 2..44: aux8520:: var_is_introduced ;
var bool: aux8521_BOOL:: var_is_introduced ;
var bool: aux8522_BOOL:: var_is_introduced ;
var bool: aux8523_BOOL:: var_is_introduced ;
var {0,1}: aux8523_INTEGER :: var_is_introduced ;
var bool: aux8524_BOOL:: var_is_introduced ;
var bool: aux8525_BOOL:: var_is_introduced ;
var 2..44: aux8526:: var_is_introduced ;
var bool: aux8527_BOOL:: var_is_introduced ;
var bool: aux8528_BOOL:: var_is_introduced ;
var bool: aux8529_BOOL:: var_is_introduced ;
var {0,1}: aux8529_INTEGER :: var_is_introduced ;
var bool: aux8530_BOOL:: var_is_introduced ;
var bool: aux8531_BOOL:: var_is_introduced ;
var 3..45: aux8532:: var_is_introduced ;
var bool: aux8533_BOOL:: var_is_introduced ;
var bool: aux8534_BOOL:: var_is_introduced ;
var bool: aux8535_BOOL:: var_is_introduced ;
var {0,1}: aux8535_INTEGER :: var_is_introduced ;
var bool: aux8536_BOOL:: var_is_introduced ;
var bool: aux8537_BOOL:: var_is_introduced ;
var 2..44: aux8538:: var_is_introduced ;
var bool: aux8539_BOOL:: var_is_introduced ;
var bool: aux8540_BOOL:: var_is_introduced ;
var bool: aux8541_BOOL:: var_is_introduced ;
var {0,1}: aux8541_INTEGER :: var_is_introduced ;
var bool: aux8542_BOOL:: var_is_introduced ;
var bool: aux8543_BOOL:: var_is_introduced ;
var 1..43: aux8544:: var_is_introduced ;
var bool: aux8545_BOOL:: var_is_introduced ;
var bool: aux8546_BOOL:: var_is_introduced ;
var bool: aux8547_BOOL:: var_is_introduced ;
var {0,1}: aux8547_INTEGER :: var_is_introduced ;
var bool: aux8548_BOOL:: var_is_introduced ;
var bool: aux8549_BOOL:: var_is_introduced ;
var 2..44: aux8550:: var_is_introduced ;
var bool: aux8551_BOOL:: var_is_introduced ;
var bool: aux8552_BOOL:: var_is_introduced ;
var bool: aux8553_BOOL:: var_is_introduced ;
var {0,1}: aux8553_INTEGER :: var_is_introduced ;
var bool: aux8554_BOOL:: var_is_introduced ;
var bool: aux8555_BOOL:: var_is_introduced ;
var 2..44: aux8556:: var_is_introduced ;
var bool: aux8557_BOOL:: var_is_introduced ;
var bool: aux8558_BOOL:: var_is_introduced ;
var {0,1}: aux8558_INTEGER :: var_is_introduced ;
var bool: aux8559_BOOL:: var_is_introduced ;
var bool: aux8560_BOOL:: var_is_introduced ;
var 1..43: aux8561:: var_is_introduced ;
var bool: aux8562_BOOL:: var_is_introduced ;
var bool: aux8563_BOOL:: var_is_introduced ;
var bool: aux8564_BOOL:: var_is_introduced ;
var {0,1}: aux8564_INTEGER :: var_is_introduced ;
var bool: aux8565_BOOL:: var_is_introduced ;
var bool: aux8566_BOOL:: var_is_introduced ;
var 2..44: aux8567:: var_is_introduced ;
var bool: aux8568_BOOL:: var_is_introduced ;
var bool: aux8569_BOOL:: var_is_introduced ;
var bool: aux8570_BOOL:: var_is_introduced ;
var {0,1}: aux8570_INTEGER :: var_is_introduced ;
var bool: aux8571_BOOL:: var_is_introduced ;
var bool: aux8572_BOOL:: var_is_introduced ;
var 3..45: aux8573:: var_is_introduced ;
var bool: aux8574_BOOL:: var_is_introduced ;
var bool: aux8575_BOOL:: var_is_introduced ;
var bool: aux8576_BOOL:: var_is_introduced ;
var {0,1}: aux8576_INTEGER :: var_is_introduced ;
var bool: aux8577_BOOL:: var_is_introduced ;
var bool: aux8578_BOOL:: var_is_introduced ;
var 2..44: aux8579:: var_is_introduced ;
var bool: aux8580_BOOL:: var_is_introduced ;
var bool: aux8581_BOOL:: var_is_introduced ;
var bool: aux8582_BOOL:: var_is_introduced ;
var {0,1}: aux8582_INTEGER :: var_is_introduced ;
var bool: aux8583_BOOL:: var_is_introduced ;
var bool: aux8584_BOOL:: var_is_introduced ;
var 3..45: aux8585:: var_is_introduced ;
var bool: aux8586_BOOL:: var_is_introduced ;
var bool: aux8587_BOOL:: var_is_introduced ;
var bool: aux8588_BOOL:: var_is_introduced ;
var {0,1}: aux8588_INTEGER :: var_is_introduced ;
var bool: aux8589_BOOL:: var_is_introduced ;
var bool: aux8590_BOOL:: var_is_introduced ;
var 2..44: aux8591:: var_is_introduced ;
var bool: aux8592_BOOL:: var_is_introduced ;
var bool: aux8593_BOOL:: var_is_introduced ;
var bool: aux8594_BOOL:: var_is_introduced ;
var {0,1}: aux8594_INTEGER :: var_is_introduced ;
var bool: aux8595_BOOL:: var_is_introduced ;
var bool: aux8596_BOOL:: var_is_introduced ;
var 1..43: aux8597:: var_is_introduced ;
var bool: aux8598_BOOL:: var_is_introduced ;
var bool: aux8599_BOOL:: var_is_introduced ;
var bool: aux8600_BOOL:: var_is_introduced ;
var {0,1}: aux8600_INTEGER :: var_is_introduced ;
var bool: aux8601_BOOL:: var_is_introduced ;
var bool: aux8602_BOOL:: var_is_introduced ;
var 2..44: aux8603:: var_is_introduced ;
var bool: aux8604_BOOL:: var_is_introduced ;
var bool: aux8605_BOOL:: var_is_introduced ;
var bool: aux8606_BOOL:: var_is_introduced ;
var {0,1}: aux8606_INTEGER :: var_is_introduced ;
var bool: aux8607_BOOL:: var_is_introduced ;
var bool: aux8608_BOOL:: var_is_introduced ;
var 1..43: aux8609:: var_is_introduced ;
var bool: aux8610_BOOL:: var_is_introduced ;
var bool: aux8611_BOOL:: var_is_introduced ;
var bool: aux8612_BOOL:: var_is_introduced ;
var {0,1}: aux8612_INTEGER :: var_is_introduced ;
var bool: aux8613_BOOL:: var_is_introduced ;
var bool: aux8614_BOOL:: var_is_introduced ;
var 2..44: aux8615:: var_is_introduced ;
var bool: aux8616_BOOL:: var_is_introduced ;
var bool: aux8617_BOOL:: var_is_introduced ;
var bool: aux8618_BOOL:: var_is_introduced ;
var {0,1}: aux8618_INTEGER :: var_is_introduced ;
var bool: aux8619_BOOL:: var_is_introduced ;
var bool: aux8620_BOOL:: var_is_introduced ;
var 2..44: aux8621:: var_is_introduced ;
var bool: aux8622_BOOL:: var_is_introduced ;
var bool: aux8623_BOOL:: var_is_introduced ;
var bool: aux8624_BOOL:: var_is_introduced ;
var {0,1}: aux8624_INTEGER :: var_is_introduced ;
var bool: aux8625_BOOL:: var_is_introduced ;
var bool: aux8626_BOOL:: var_is_introduced ;
var 1..43: aux8627:: var_is_introduced ;
var bool: aux8628_BOOL:: var_is_introduced ;
var bool: aux8629_BOOL:: var_is_introduced ;
var bool: aux8630_BOOL:: var_is_introduced ;
var {0,1}: aux8630_INTEGER :: var_is_introduced ;
var bool: aux8631_BOOL:: var_is_introduced ;
var bool: aux8632_BOOL:: var_is_introduced ;
var 4..46: aux8633:: var_is_introduced ;
var bool: aux8634_BOOL:: var_is_introduced ;
var bool: aux8635_BOOL:: var_is_introduced ;
var bool: aux8636_BOOL:: var_is_introduced ;
var {0,1}: aux8636_INTEGER :: var_is_introduced ;
var bool: aux8637_BOOL:: var_is_introduced ;
var bool: aux8638_BOOL:: var_is_introduced ;
var 2..44: aux8639:: var_is_introduced ;
var bool: aux8640_BOOL:: var_is_introduced ;
var bool: aux8641_BOOL:: var_is_introduced ;
var bool: aux8642_BOOL:: var_is_introduced ;
var {0,1}: aux8642_INTEGER :: var_is_introduced ;
var bool: aux8643_BOOL:: var_is_introduced ;
var bool: aux8644_BOOL:: var_is_introduced ;
var 3..45: aux8645:: var_is_introduced ;
var bool: aux8646_BOOL:: var_is_introduced ;
var bool: aux8647_BOOL:: var_is_introduced ;
var bool: aux8648_BOOL:: var_is_introduced ;
var {0,1}: aux8648_INTEGER :: var_is_introduced ;
var bool: aux8649_BOOL:: var_is_introduced ;
var bool: aux8650_BOOL:: var_is_introduced ;
var 1..43: aux8651:: var_is_introduced ;
var bool: aux8652_BOOL:: var_is_introduced ;
var bool: aux8653_BOOL:: var_is_introduced ;
var bool: aux8654_BOOL:: var_is_introduced ;
var {0,1}: aux8654_INTEGER :: var_is_introduced ;
var bool: aux8655_BOOL:: var_is_introduced ;
var bool: aux8656_BOOL:: var_is_introduced ;
var 3..45: aux8657:: var_is_introduced ;
var bool: aux8658_BOOL:: var_is_introduced ;
var bool: aux8659_BOOL:: var_is_introduced ;
var bool: aux8660_BOOL:: var_is_introduced ;
var {0,1}: aux8660_INTEGER :: var_is_introduced ;
var bool: aux8661_BOOL:: var_is_introduced ;
var bool: aux8662_BOOL:: var_is_introduced ;
var 2..44: aux8663:: var_is_introduced ;
var bool: aux8664_BOOL:: var_is_introduced ;
var bool: aux8665_BOOL:: var_is_introduced ;
var bool: aux8666_BOOL:: var_is_introduced ;
var {0,1}: aux8666_INTEGER :: var_is_introduced ;
var bool: aux8667_BOOL:: var_is_introduced ;
var bool: aux8668_BOOL:: var_is_introduced ;
var 3..45: aux8669:: var_is_introduced ;
var bool: aux8670_BOOL:: var_is_introduced ;
var bool: aux8671_BOOL:: var_is_introduced ;
var bool: aux8672_BOOL:: var_is_introduced ;
var {0,1}: aux8672_INTEGER :: var_is_introduced ;
var bool: aux8673_BOOL:: var_is_introduced ;
var bool: aux8674_BOOL:: var_is_introduced ;
var 2..44: aux8675:: var_is_introduced ;
var bool: aux8676_BOOL:: var_is_introduced ;
var bool: aux8677_BOOL:: var_is_introduced ;
var {0,1}: aux8677_INTEGER :: var_is_introduced ;
var bool: aux8678_BOOL:: var_is_introduced ;
var bool: aux8679_BOOL:: var_is_introduced ;
var 1..43: aux8680:: var_is_introduced ;
var bool: aux8681_BOOL:: var_is_introduced ;
var bool: aux8682_BOOL:: var_is_introduced ;
var bool: aux8683_BOOL:: var_is_introduced ;
var {0,1}: aux8683_INTEGER :: var_is_introduced ;
var bool: aux8684_BOOL:: var_is_introduced ;
var bool: aux8685_BOOL:: var_is_introduced ;
var 2..44: aux8686:: var_is_introduced ;
var bool: aux8687_BOOL:: var_is_introduced ;
var bool: aux8688_BOOL:: var_is_introduced ;
var bool: aux8689_BOOL:: var_is_introduced ;
var {0,1}: aux8689_INTEGER :: var_is_introduced ;
var bool: aux8690_BOOL:: var_is_introduced ;
var bool: aux8691_BOOL:: var_is_introduced ;
var 3..45: aux8692:: var_is_introduced ;
var bool: aux8693_BOOL:: var_is_introduced ;
var bool: aux8694_BOOL:: var_is_introduced ;
var bool: aux8695_BOOL:: var_is_introduced ;
var {0,1}: aux8695_INTEGER :: var_is_introduced ;
var bool: aux8696_BOOL:: var_is_introduced ;
var bool: aux8697_BOOL:: var_is_introduced ;
var 2..44: aux8698:: var_is_introduced ;
var bool: aux8699_BOOL:: var_is_introduced ;
var bool: aux8700_BOOL:: var_is_introduced ;
var bool: aux8701_BOOL:: var_is_introduced ;
var {0,1}: aux8701_INTEGER :: var_is_introduced ;
var bool: aux8702_BOOL:: var_is_introduced ;
var bool: aux8703_BOOL:: var_is_introduced ;
var 3..45: aux8704:: var_is_introduced ;
var bool: aux8705_BOOL:: var_is_introduced ;
var bool: aux8706_BOOL:: var_is_introduced ;
var bool: aux8707_BOOL:: var_is_introduced ;
var {0,1}: aux8707_INTEGER :: var_is_introduced ;
var bool: aux8708_BOOL:: var_is_introduced ;
var bool: aux8709_BOOL:: var_is_introduced ;
var 2..44: aux8710:: var_is_introduced ;
var bool: aux8711_BOOL:: var_is_introduced ;
var bool: aux8712_BOOL:: var_is_introduced ;
var bool: aux8713_BOOL:: var_is_introduced ;
var {0,1}: aux8713_INTEGER :: var_is_introduced ;
var bool: aux8714_BOOL:: var_is_introduced ;
var bool: aux8715_BOOL:: var_is_introduced ;
var 1..43: aux8716:: var_is_introduced ;
var bool: aux8717_BOOL:: var_is_introduced ;
var bool: aux8718_BOOL:: var_is_introduced ;
var bool: aux8719_BOOL:: var_is_introduced ;
var {0,1}: aux8719_INTEGER :: var_is_introduced ;
var bool: aux8720_BOOL:: var_is_introduced ;
var bool: aux8721_BOOL:: var_is_introduced ;
var 2..44: aux8722:: var_is_introduced ;
var bool: aux8723_BOOL:: var_is_introduced ;
var bool: aux8724_BOOL:: var_is_introduced ;
var bool: aux8725_BOOL:: var_is_introduced ;
var {0,1}: aux8725_INTEGER :: var_is_introduced ;
var bool: aux8726_BOOL:: var_is_introduced ;
var bool: aux8727_BOOL:: var_is_introduced ;
var 1..43: aux8728:: var_is_introduced ;
var bool: aux8729_BOOL:: var_is_introduced ;
var bool: aux8730_BOOL:: var_is_introduced ;
var bool: aux8731_BOOL:: var_is_introduced ;
var {0,1}: aux8731_INTEGER :: var_is_introduced ;
var bool: aux8732_BOOL:: var_is_introduced ;
var bool: aux8733_BOOL:: var_is_introduced ;
var 2..44: aux8734:: var_is_introduced ;
var bool: aux8735_BOOL:: var_is_introduced ;
var bool: aux8736_BOOL:: var_is_introduced ;
var bool: aux8737_BOOL:: var_is_introduced ;
var {0,1}: aux8737_INTEGER :: var_is_introduced ;
var bool: aux8738_BOOL:: var_is_introduced ;
var bool: aux8739_BOOL:: var_is_introduced ;
var 2..44: aux8740:: var_is_introduced ;
var bool: aux8741_BOOL:: var_is_introduced ;
var bool: aux8742_BOOL:: var_is_introduced ;
var bool: aux8743_BOOL:: var_is_introduced ;
var {0,1}: aux8743_INTEGER :: var_is_introduced ;
var bool: aux8744_BOOL:: var_is_introduced ;
var bool: aux8745_BOOL:: var_is_introduced ;
var 1..43: aux8746:: var_is_introduced ;
var bool: aux8747_BOOL:: var_is_introduced ;
var bool: aux8748_BOOL:: var_is_introduced ;
var bool: aux8749_BOOL:: var_is_introduced ;
var {0,1}: aux8749_INTEGER :: var_is_introduced ;
var bool: aux8750_BOOL:: var_is_introduced ;
var bool: aux8751_BOOL:: var_is_introduced ;
var 4..46: aux8752:: var_is_introduced ;
var bool: aux8753_BOOL:: var_is_introduced ;
var bool: aux8754_BOOL:: var_is_introduced ;
var bool: aux8755_BOOL:: var_is_introduced ;
var {0,1}: aux8755_INTEGER :: var_is_introduced ;
var bool: aux8756_BOOL:: var_is_introduced ;
var bool: aux8757_BOOL:: var_is_introduced ;
var 2..44: aux8758:: var_is_introduced ;
var bool: aux8759_BOOL:: var_is_introduced ;
var bool: aux8760_BOOL:: var_is_introduced ;
var bool: aux8761_BOOL:: var_is_introduced ;
var {0,1}: aux8761_INTEGER :: var_is_introduced ;
var bool: aux8762_BOOL:: var_is_introduced ;
var bool: aux8763_BOOL:: var_is_introduced ;
var 3..45: aux8764:: var_is_introduced ;
var bool: aux8765_BOOL:: var_is_introduced ;
var bool: aux8766_BOOL:: var_is_introduced ;
var bool: aux8767_BOOL:: var_is_introduced ;
var {0,1}: aux8767_INTEGER :: var_is_introduced ;
var bool: aux8768_BOOL:: var_is_introduced ;
var bool: aux8769_BOOL:: var_is_introduced ;
var 1..43: aux8770:: var_is_introduced ;
var bool: aux8771_BOOL:: var_is_introduced ;
var bool: aux8772_BOOL:: var_is_introduced ;
var bool: aux8773_BOOL:: var_is_introduced ;
var {0,1}: aux8773_INTEGER :: var_is_introduced ;
var bool: aux8774_BOOL:: var_is_introduced ;
var bool: aux8775_BOOL:: var_is_introduced ;
var 3..45: aux8776:: var_is_introduced ;
var bool: aux8777_BOOL:: var_is_introduced ;
var bool: aux8778_BOOL:: var_is_introduced ;
var bool: aux8779_BOOL:: var_is_introduced ;
var {0,1}: aux8779_INTEGER :: var_is_introduced ;
var bool: aux8780_BOOL:: var_is_introduced ;
var bool: aux8781_BOOL:: var_is_introduced ;
var 2..44: aux8782:: var_is_introduced ;
var bool: aux8783_BOOL:: var_is_introduced ;
var bool: aux8784_BOOL:: var_is_introduced ;
var bool: aux8785_BOOL:: var_is_introduced ;
var {0,1}: aux8785_INTEGER :: var_is_introduced ;
var bool: aux8786_BOOL:: var_is_introduced ;
var bool: aux8787_BOOL:: var_is_introduced ;
var 3..45: aux8788:: var_is_introduced ;
var bool: aux8789_BOOL:: var_is_introduced ;
var bool: aux8790_BOOL:: var_is_introduced ;
var bool: aux8791_BOOL:: var_is_introduced ;
var {0,1}: aux8791_INTEGER :: var_is_introduced ;
var bool: aux8792_BOOL:: var_is_introduced ;
var bool: aux8793_BOOL:: var_is_introduced ;
var bool: aux8794_BOOL:: var_is_introduced ;
var 1..43: aux8795:: var_is_introduced ;
var bool: aux8796_BOOL:: var_is_introduced ;
var bool: aux8797_BOOL:: var_is_introduced ;
var bool: aux8798_BOOL:: var_is_introduced ;
var {0,1}: aux8798_INTEGER :: var_is_introduced ;
var bool: aux8799_BOOL:: var_is_introduced ;
var bool: aux8800_BOOL:: var_is_introduced ;
var 2..44: aux8801:: var_is_introduced ;
var bool: aux8802_BOOL:: var_is_introduced ;
var bool: aux8803_BOOL:: var_is_introduced ;
var bool: aux8804_BOOL:: var_is_introduced ;
var {0,1}: aux8804_INTEGER :: var_is_introduced ;
var bool: aux8805_BOOL:: var_is_introduced ;
var bool: aux8806_BOOL:: var_is_introduced ;
var 1..43: aux8807:: var_is_introduced ;
var bool: aux8808_BOOL:: var_is_introduced ;
var bool: aux8809_BOOL:: var_is_introduced ;
var bool: aux8810_BOOL:: var_is_introduced ;
var {0,1}: aux8810_INTEGER :: var_is_introduced ;
var bool: aux8811_BOOL:: var_is_introduced ;
var bool: aux8812_BOOL:: var_is_introduced ;
var 4..46: aux8813:: var_is_introduced ;
var bool: aux8814_BOOL:: var_is_introduced ;
var bool: aux8815_BOOL:: var_is_introduced ;
var bool: aux8816_BOOL:: var_is_introduced ;
var {0,1}: aux8816_INTEGER :: var_is_introduced ;
var bool: aux8817_BOOL:: var_is_introduced ;
var bool: aux8818_BOOL:: var_is_introduced ;
var 2..44: aux8819:: var_is_introduced ;
var bool: aux8820_BOOL:: var_is_introduced ;
var bool: aux8821_BOOL:: var_is_introduced ;
var bool: aux8822_BOOL:: var_is_introduced ;
var {0,1}: aux8822_INTEGER :: var_is_introduced ;
var bool: aux8823_BOOL:: var_is_introduced ;
var bool: aux8824_BOOL:: var_is_introduced ;
var 3..45: aux8825:: var_is_introduced ;
var bool: aux8826_BOOL:: var_is_introduced ;
var bool: aux8827_BOOL:: var_is_introduced ;
var bool: aux8828_BOOL:: var_is_introduced ;
var {0,1}: aux8828_INTEGER :: var_is_introduced ;
var bool: aux8829_BOOL:: var_is_introduced ;
var bool: aux8830_BOOL:: var_is_introduced ;
var 1..43: aux8831:: var_is_introduced ;
var bool: aux8832_BOOL:: var_is_introduced ;
var bool: aux8833_BOOL:: var_is_introduced ;
var bool: aux8834_BOOL:: var_is_introduced ;
var {0,1}: aux8834_INTEGER :: var_is_introduced ;
var bool: aux8835_BOOL:: var_is_introduced ;
var bool: aux8836_BOOL:: var_is_introduced ;
var 3..45: aux8837:: var_is_introduced ;
var bool: aux8838_BOOL:: var_is_introduced ;
var bool: aux8839_BOOL:: var_is_introduced ;
var bool: aux8840_BOOL:: var_is_introduced ;
var {0,1}: aux8840_INTEGER :: var_is_introduced ;
var bool: aux8841_BOOL:: var_is_introduced ;
var bool: aux8842_BOOL:: var_is_introduced ;
var 2..44: aux8843:: var_is_introduced ;
var bool: aux8844_BOOL:: var_is_introduced ;
var bool: aux8845_BOOL:: var_is_introduced ;
var bool: aux8846_BOOL:: var_is_introduced ;
var {0,1}: aux8846_INTEGER :: var_is_introduced ;
var bool: aux8847_BOOL:: var_is_introduced ;
var bool: aux8848_BOOL:: var_is_introduced ;
var 3..45: aux8849:: var_is_introduced ;
var bool: aux8850_BOOL:: var_is_introduced ;
var bool: aux8851_BOOL:: var_is_introduced ;
var bool: aux8852_BOOL:: var_is_introduced ;
var {0,1}: aux8852_INTEGER :: var_is_introduced ;
var bool: aux8853_BOOL:: var_is_introduced ;
var 2..44: aux8854:: var_is_introduced ;
var bool: aux8855_BOOL:: var_is_introduced ;
var bool: aux8856_BOOL:: var_is_introduced ;
var {0,1}: aux8856_INTEGER :: var_is_introduced ;
var bool: aux8857_BOOL:: var_is_introduced ;
var bool: aux8858_BOOL:: var_is_introduced ;
var 1..43: aux8859:: var_is_introduced ;
var bool: aux8860_BOOL:: var_is_introduced ;
var bool: aux8861_BOOL:: var_is_introduced ;
var bool: aux8862_BOOL:: var_is_introduced ;
var {0,1}: aux8862_INTEGER :: var_is_introduced ;
var bool: aux8863_BOOL:: var_is_introduced ;
var bool: aux8864_BOOL:: var_is_introduced ;
var 2..44: aux8865:: var_is_introduced ;
var bool: aux8866_BOOL:: var_is_introduced ;
var bool: aux8867_BOOL:: var_is_introduced ;
var bool: aux8868_BOOL:: var_is_introduced ;
var {0,1}: aux8868_INTEGER :: var_is_introduced ;
var bool: aux8869_BOOL:: var_is_introduced ;
var bool: aux8870_BOOL:: var_is_introduced ;
var 3..45: aux8871:: var_is_introduced ;
var bool: aux8872_BOOL:: var_is_introduced ;
var bool: aux8873_BOOL:: var_is_introduced ;
var bool: aux8874_BOOL:: var_is_introduced ;
var {0,1}: aux8874_INTEGER :: var_is_introduced ;
var bool: aux8875_BOOL:: var_is_introduced ;
var bool: aux8876_BOOL:: var_is_introduced ;
var 2..44: aux8877:: var_is_introduced ;
var bool: aux8878_BOOL:: var_is_introduced ;
var bool: aux8879_BOOL:: var_is_introduced ;
var bool: aux8880_BOOL:: var_is_introduced ;
var {0,1}: aux8880_INTEGER :: var_is_introduced ;
var bool: aux8881_BOOL:: var_is_introduced ;
var bool: aux8882_BOOL:: var_is_introduced ;
var 2..44: aux8883:: var_is_introduced ;
var bool: aux8884_BOOL:: var_is_introduced ;
var bool: aux8885_BOOL:: var_is_introduced ;
var bool: aux8886_BOOL:: var_is_introduced ;
var {0,1}: aux8886_INTEGER :: var_is_introduced ;
var bool: aux8887_BOOL:: var_is_introduced ;
var bool: aux8888_BOOL:: var_is_introduced ;
var 3..45: aux8889:: var_is_introduced ;
var bool: aux8890_BOOL:: var_is_introduced ;
var bool: aux8891_BOOL:: var_is_introduced ;
var bool: aux8892_BOOL:: var_is_introduced ;
var {0,1}: aux8892_INTEGER :: var_is_introduced ;
var bool: aux8893_BOOL:: var_is_introduced ;
var bool: aux8894_BOOL:: var_is_introduced ;
var 2..44: aux8895:: var_is_introduced ;
var bool: aux8896_BOOL:: var_is_introduced ;
var bool: aux8897_BOOL:: var_is_introduced ;
var bool: aux8898_BOOL:: var_is_introduced ;
var {0,1}: aux8898_INTEGER :: var_is_introduced ;
var bool: aux8899_BOOL:: var_is_introduced ;
var bool: aux8900_BOOL:: var_is_introduced ;
var 1..43: aux8901:: var_is_introduced ;
var bool: aux8902_BOOL:: var_is_introduced ;
var bool: aux8903_BOOL:: var_is_introduced ;
var bool: aux8904_BOOL:: var_is_introduced ;
var {0,1}: aux8904_INTEGER :: var_is_introduced ;
var bool: aux8905_BOOL:: var_is_introduced ;
var bool: aux8906_BOOL:: var_is_introduced ;
var 2..44: aux8907:: var_is_introduced ;
var bool: aux8908_BOOL:: var_is_introduced ;
var bool: aux8909_BOOL:: var_is_introduced ;
var bool: aux8910_BOOL:: var_is_introduced ;
var {0,1}: aux8910_INTEGER :: var_is_introduced ;
var bool: aux8911_BOOL:: var_is_introduced ;
var bool: aux8912_BOOL:: var_is_introduced ;
var bool: aux8913_BOOL:: var_is_introduced ;
var 1..43: aux8914:: var_is_introduced ;
var bool: aux8915_BOOL:: var_is_introduced ;
var bool: aux8916_BOOL:: var_is_introduced ;
var bool: aux8917_BOOL:: var_is_introduced ;
var {0,1}: aux8917_INTEGER :: var_is_introduced ;
var bool: aux8918_BOOL:: var_is_introduced ;
var bool: aux8919_BOOL:: var_is_introduced ;
var 2..44: aux8920:: var_is_introduced ;
var bool: aux8921_BOOL:: var_is_introduced ;
var bool: aux8922_BOOL:: var_is_introduced ;
var bool: aux8923_BOOL:: var_is_introduced ;
var {0,1}: aux8923_INTEGER :: var_is_introduced ;
var bool: aux8924_BOOL:: var_is_introduced ;
var bool: aux8925_BOOL:: var_is_introduced ;
var 2..44: aux8926:: var_is_introduced ;
var bool: aux8927_BOOL:: var_is_introduced ;
var bool: aux8928_BOOL:: var_is_introduced ;
var bool: aux8929_BOOL:: var_is_introduced ;
var {0,1}: aux8929_INTEGER :: var_is_introduced ;
var bool: aux8930_BOOL:: var_is_introduced ;
var bool: aux8931_BOOL:: var_is_introduced ;
var 4..46: aux8932:: var_is_introduced ;
var bool: aux8933_BOOL:: var_is_introduced ;
var bool: aux8934_BOOL:: var_is_introduced ;
var bool: aux8935_BOOL:: var_is_introduced ;
var {0,1}: aux8935_INTEGER :: var_is_introduced ;
var bool: aux8936_BOOL:: var_is_introduced ;
var bool: aux8937_BOOL:: var_is_introduced ;
var 2..44: aux8938:: var_is_introduced ;
var bool: aux8939_BOOL:: var_is_introduced ;
var bool: aux8940_BOOL:: var_is_introduced ;
var bool: aux8941_BOOL:: var_is_introduced ;
var {0,1}: aux8941_INTEGER :: var_is_introduced ;
var bool: aux8942_BOOL:: var_is_introduced ;
var bool: aux8943_BOOL:: var_is_introduced ;
var 3..45: aux8944:: var_is_introduced ;
var bool: aux8945_BOOL:: var_is_introduced ;
var bool: aux8946_BOOL:: var_is_introduced ;
var bool: aux8947_BOOL:: var_is_introduced ;
var {0,1}: aux8947_INTEGER :: var_is_introduced ;
var bool: aux8948_BOOL:: var_is_introduced ;
var bool: aux8949_BOOL:: var_is_introduced ;
var 1..43: aux8950:: var_is_introduced ;
var bool: aux8951_BOOL:: var_is_introduced ;
var bool: aux8952_BOOL:: var_is_introduced ;
var bool: aux8953_BOOL:: var_is_introduced ;
var {0,1}: aux8953_INTEGER :: var_is_introduced ;
var bool: aux8954_BOOL:: var_is_introduced ;
var bool: aux8955_BOOL:: var_is_introduced ;
var 3..45: aux8956:: var_is_introduced ;
var bool: aux8957_BOOL:: var_is_introduced ;
var bool: aux8958_BOOL:: var_is_introduced ;
var bool: aux8959_BOOL:: var_is_introduced ;
var {0,1}: aux8959_INTEGER :: var_is_introduced ;
var bool: aux8960_BOOL:: var_is_introduced ;
var bool: aux8961_BOOL:: var_is_introduced ;
var 2..44: aux8962:: var_is_introduced ;
var bool: aux8963_BOOL:: var_is_introduced ;
var bool: aux8964_BOOL:: var_is_introduced ;
var bool: aux8965_BOOL:: var_is_introduced ;
var {0,1}: aux8965_INTEGER :: var_is_introduced ;
var bool: aux8966_BOOL:: var_is_introduced ;
var bool: aux8967_BOOL:: var_is_introduced ;
var 3..45: aux8968:: var_is_introduced ;
var bool: aux8969_BOOL:: var_is_introduced ;
var bool: aux8970_BOOL:: var_is_introduced ;
var bool: aux8971_BOOL:: var_is_introduced ;
var {0,1}: aux8971_INTEGER :: var_is_introduced ;
var bool: aux8972_BOOL:: var_is_introduced ;
var 1..43: aux8973:: var_is_introduced ;
var bool: aux8974_BOOL:: var_is_introduced ;
var bool: aux8975_BOOL:: var_is_introduced ;
var {0,1}: aux8975_INTEGER :: var_is_introduced ;
var bool: aux8976_BOOL:: var_is_introduced ;
var bool: aux8977_BOOL:: var_is_introduced ;
var 1..43: aux8978:: var_is_introduced ;
var bool: aux8979_BOOL:: var_is_introduced ;
var bool: aux8980_BOOL:: var_is_introduced ;
var bool: aux8981_BOOL:: var_is_introduced ;
var {0,1}: aux8981_INTEGER :: var_is_introduced ;
var bool: aux8982_BOOL:: var_is_introduced ;
var bool: aux8983_BOOL:: var_is_introduced ;
var 2..44: aux8984:: var_is_introduced ;
var bool: aux8985_BOOL:: var_is_introduced ;
var bool: aux8986_BOOL:: var_is_introduced ;
var bool: aux8987_BOOL:: var_is_introduced ;
var {0,1}: aux8987_INTEGER :: var_is_introduced ;
var bool: aux8988_BOOL:: var_is_introduced ;
var bool: aux8989_BOOL:: var_is_introduced ;
var 3..45: aux8990:: var_is_introduced ;
var bool: aux8991_BOOL:: var_is_introduced ;
var bool: aux8992_BOOL:: var_is_introduced ;
var bool: aux8993_BOOL:: var_is_introduced ;
var {0,1}: aux8993_INTEGER :: var_is_introduced ;
var bool: aux8994_BOOL:: var_is_introduced ;
var bool: aux8995_BOOL:: var_is_introduced ;
var 2..44: aux8996:: var_is_introduced ;
var bool: aux8997_BOOL:: var_is_introduced ;
var bool: aux8998_BOOL:: var_is_introduced ;
var bool: aux8999_BOOL:: var_is_introduced ;
var {0,1}: aux8999_INTEGER :: var_is_introduced ;
var bool: aux9000_BOOL:: var_is_introduced ;
var bool: aux9001_BOOL:: var_is_introduced ;
var 2..44: aux9002:: var_is_introduced ;
var bool: aux9003_BOOL:: var_is_introduced ;
var bool: aux9004_BOOL:: var_is_introduced ;
var bool: aux9005_BOOL:: var_is_introduced ;
var {0,1}: aux9005_INTEGER :: var_is_introduced ;
var bool: aux9006_BOOL:: var_is_introduced ;
var bool: aux9007_BOOL:: var_is_introduced ;
var 3..45: aux9008:: var_is_introduced ;
var bool: aux9009_BOOL:: var_is_introduced ;
var bool: aux9010_BOOL:: var_is_introduced ;
var bool: aux9011_BOOL:: var_is_introduced ;
var {0,1}: aux9011_INTEGER :: var_is_introduced ;
var bool: aux9012_BOOL:: var_is_introduced ;
var bool: aux9013_BOOL:: var_is_introduced ;
var 2..44: aux9014:: var_is_introduced ;
var bool: aux9015_BOOL:: var_is_introduced ;
var bool: aux9016_BOOL:: var_is_introduced ;
var bool: aux9017_BOOL:: var_is_introduced ;
var {0,1}: aux9017_INTEGER :: var_is_introduced ;
var bool: aux9018_BOOL:: var_is_introduced ;
var bool: aux9019_BOOL:: var_is_introduced ;
var 1..43: aux9020:: var_is_introduced ;
var bool: aux9021_BOOL:: var_is_introduced ;
var bool: aux9022_BOOL:: var_is_introduced ;
var bool: aux9023_BOOL:: var_is_introduced ;
var {0,1}: aux9023_INTEGER :: var_is_introduced ;
var bool: aux9024_BOOL:: var_is_introduced ;
var bool: aux9025_BOOL:: var_is_introduced ;
var 2..44: aux9026:: var_is_introduced ;
var bool: aux9027_BOOL:: var_is_introduced ;
var bool: aux9028_BOOL:: var_is_introduced ;
var bool: aux9029_BOOL:: var_is_introduced ;
var {0,1}: aux9029_INTEGER :: var_is_introduced ;
var bool: aux9030_BOOL:: var_is_introduced ;
var bool: aux9031_BOOL:: var_is_introduced ;
var 2..44: aux9032:: var_is_introduced ;
var bool: aux9033_BOOL:: var_is_introduced ;
var bool: aux9034_BOOL:: var_is_introduced ;
var {0,1}: aux9034_INTEGER :: var_is_introduced ;
var bool: aux9035_BOOL:: var_is_introduced ;
var bool: aux9036_BOOL:: var_is_introduced ;
var 1..43: aux9037:: var_is_introduced ;
var bool: aux9038_BOOL:: var_is_introduced ;
var bool: aux9039_BOOL:: var_is_introduced ;
var bool: aux9040_BOOL:: var_is_introduced ;
var {0,1}: aux9040_INTEGER :: var_is_introduced ;
var bool: aux9041_BOOL:: var_is_introduced ;
var bool: aux9042_BOOL:: var_is_introduced ;
var 2..44: aux9043:: var_is_introduced ;
var bool: aux9044_BOOL:: var_is_introduced ;
var bool: aux9045_BOOL:: var_is_introduced ;
var bool: aux9046_BOOL:: var_is_introduced ;
var {0,1}: aux9046_INTEGER :: var_is_introduced ;
var bool: aux9047_BOOL:: var_is_introduced ;
var bool: aux9048_BOOL:: var_is_introduced ;
var 3..45: aux9049:: var_is_introduced ;
var bool: aux9050_BOOL:: var_is_introduced ;
var bool: aux9051_BOOL:: var_is_introduced ;
var bool: aux9052_BOOL:: var_is_introduced ;
var {0,1}: aux9052_INTEGER :: var_is_introduced ;
var bool: aux9053_BOOL:: var_is_introduced ;
var bool: aux9054_BOOL:: var_is_introduced ;
var 2..44: aux9055:: var_is_introduced ;
var bool: aux9056_BOOL:: var_is_introduced ;
var bool: aux9057_BOOL:: var_is_introduced ;
var bool: aux9058_BOOL:: var_is_introduced ;
var {0,1}: aux9058_INTEGER :: var_is_introduced ;
var bool: aux9059_BOOL:: var_is_introduced ;
var bool: aux9060_BOOL:: var_is_introduced ;
var 2..44: aux9061:: var_is_introduced ;
var bool: aux9062_BOOL:: var_is_introduced ;
var bool: aux9063_BOOL:: var_is_introduced ;
var bool: aux9064_BOOL:: var_is_introduced ;
var {0,1}: aux9064_INTEGER :: var_is_introduced ;
var bool: aux9065_BOOL:: var_is_introduced ;
var bool: aux9066_BOOL:: var_is_introduced ;
var 3..45: aux9067:: var_is_introduced ;
var bool: aux9068_BOOL:: var_is_introduced ;
var bool: aux9069_BOOL:: var_is_introduced ;
var bool: aux9070_BOOL:: var_is_introduced ;
var {0,1}: aux9070_INTEGER :: var_is_introduced ;
var bool: aux9071_BOOL:: var_is_introduced ;
var bool: aux9072_BOOL:: var_is_introduced ;
var 2..44: aux9073:: var_is_introduced ;
var bool: aux9074_BOOL:: var_is_introduced ;
var bool: aux9075_BOOL:: var_is_introduced ;
var bool: aux9076_BOOL:: var_is_introduced ;
var {0,1}: aux9076_INTEGER :: var_is_introduced ;
var bool: aux9077_BOOL:: var_is_introduced ;
var bool: aux9078_BOOL:: var_is_introduced ;
var 1..43: aux9079:: var_is_introduced ;
var bool: aux9080_BOOL:: var_is_introduced ;
var bool: aux9081_BOOL:: var_is_introduced ;
var bool: aux9082_BOOL:: var_is_introduced ;
var {0,1}: aux9082_INTEGER :: var_is_introduced ;
var bool: aux9083_BOOL:: var_is_introduced ;
var bool: aux9084_BOOL:: var_is_introduced ;
var 1..43: aux9085:: var_is_introduced ;
var bool: aux9086_BOOL:: var_is_introduced ;
var bool: aux9087_BOOL:: var_is_introduced ;
var bool: aux9088_BOOL:: var_is_introduced ;
var {0,1}: aux9088_INTEGER :: var_is_introduced ;
var bool: aux9089_BOOL:: var_is_introduced ;
var bool: aux9090_BOOL:: var_is_introduced ;
var 2..44: aux9091:: var_is_introduced ;
var bool: aux9092_BOOL:: var_is_introduced ;
var bool: aux9093_BOOL:: var_is_introduced ;
var bool: aux9094_BOOL:: var_is_introduced ;
var {0,1}: aux9094_INTEGER :: var_is_introduced ;
var bool: aux9095_BOOL:: var_is_introduced ;
var bool: aux9096_BOOL:: var_is_introduced ;
var 2..44: aux9097:: var_is_introduced ;
var bool: aux9098_BOOL:: var_is_introduced ;
var bool: aux9099_BOOL:: var_is_introduced ;
var bool: aux9100_BOOL:: var_is_introduced ;
var {0,1}: aux9100_INTEGER :: var_is_introduced ;
var bool: aux9101_BOOL:: var_is_introduced ;
var bool: aux9102_BOOL:: var_is_introduced ;
var 1..43: aux9103:: var_is_introduced ;
var bool: aux9104_BOOL:: var_is_introduced ;
var bool: aux9105_BOOL:: var_is_introduced ;
var bool: aux9106_BOOL:: var_is_introduced ;
var {0,1}: aux9106_INTEGER :: var_is_introduced ;
var bool: aux9107_BOOL:: var_is_introduced ;
var bool: aux9108_BOOL:: var_is_introduced ;
var 4..46: aux9109:: var_is_introduced ;
var bool: aux9110_BOOL:: var_is_introduced ;
var bool: aux9111_BOOL:: var_is_introduced ;
var bool: aux9112_BOOL:: var_is_introduced ;
var {0,1}: aux9112_INTEGER :: var_is_introduced ;
var bool: aux9113_BOOL:: var_is_introduced ;
var bool: aux9114_BOOL:: var_is_introduced ;
var 2..44: aux9115:: var_is_introduced ;
var bool: aux9116_BOOL:: var_is_introduced ;
var bool: aux9117_BOOL:: var_is_introduced ;
var bool: aux9118_BOOL:: var_is_introduced ;
var {0,1}: aux9118_INTEGER :: var_is_introduced ;
var bool: aux9119_BOOL:: var_is_introduced ;
var bool: aux9120_BOOL:: var_is_introduced ;
var 3..45: aux9121:: var_is_introduced ;
var bool: aux9122_BOOL:: var_is_introduced ;
var bool: aux9123_BOOL:: var_is_introduced ;
var bool: aux9124_BOOL:: var_is_introduced ;
var {0,1}: aux9124_INTEGER :: var_is_introduced ;
var bool: aux9125_BOOL:: var_is_introduced ;
var bool: aux9126_BOOL:: var_is_introduced ;
var 1..43: aux9127:: var_is_introduced ;
var bool: aux9128_BOOL:: var_is_introduced ;
var bool: aux9129_BOOL:: var_is_introduced ;
var bool: aux9130_BOOL:: var_is_introduced ;
var {0,1}: aux9130_INTEGER :: var_is_introduced ;
var bool: aux9131_BOOL:: var_is_introduced ;
var bool: aux9132_BOOL:: var_is_introduced ;
var 3..45: aux9133:: var_is_introduced ;
var bool: aux9134_BOOL:: var_is_introduced ;
var bool: aux9135_BOOL:: var_is_introduced ;
var bool: aux9136_BOOL:: var_is_introduced ;
var {0,1}: aux9136_INTEGER :: var_is_introduced ;
var bool: aux9137_BOOL:: var_is_introduced ;
var bool: aux9138_BOOL:: var_is_introduced ;
var 2..44: aux9139:: var_is_introduced ;
var bool: aux9140_BOOL:: var_is_introduced ;
var bool: aux9141_BOOL:: var_is_introduced ;
var bool: aux9142_BOOL:: var_is_introduced ;
var {0,1}: aux9142_INTEGER :: var_is_introduced ;
var bool: aux9143_BOOL:: var_is_introduced ;
var bool: aux9144_BOOL:: var_is_introduced ;
var 3..45: aux9145:: var_is_introduced ;
var bool: aux9146_BOOL:: var_is_introduced ;
var bool: aux9147_BOOL:: var_is_introduced ;
var bool: aux9148_BOOL:: var_is_introduced ;
var {0,1}: aux9148_INTEGER :: var_is_introduced ;
var bool: aux9149_BOOL:: var_is_introduced ;
var bool: aux9150_BOOL:: var_is_introduced ;
var 1..43: aux9151:: var_is_introduced ;
var bool: aux9152_BOOL:: var_is_introduced ;
var bool: aux9153_BOOL:: var_is_introduced ;
var {0,1}: aux9153_INTEGER :: var_is_introduced ;
var bool: aux9154_BOOL:: var_is_introduced ;
var bool: aux9155_BOOL:: var_is_introduced ;
var 2..44: aux9156:: var_is_introduced ;
var bool: aux9157_BOOL:: var_is_introduced ;
var bool: aux9158_BOOL:: var_is_introduced ;
var bool: aux9159_BOOL:: var_is_introduced ;
var {0,1}: aux9159_INTEGER :: var_is_introduced ;
var bool: aux9160_BOOL:: var_is_introduced ;
var bool: aux9161_BOOL:: var_is_introduced ;
var 3..45: aux9162:: var_is_introduced ;
var bool: aux9163_BOOL:: var_is_introduced ;
var bool: aux9164_BOOL:: var_is_introduced ;
var bool: aux9165_BOOL:: var_is_introduced ;
var {0,1}: aux9165_INTEGER :: var_is_introduced ;
var bool: aux9166_BOOL:: var_is_introduced ;
var bool: aux9167_BOOL:: var_is_introduced ;
var 2..44: aux9168:: var_is_introduced ;
var bool: aux9169_BOOL:: var_is_introduced ;
var bool: aux9170_BOOL:: var_is_introduced ;
var bool: aux9171_BOOL:: var_is_introduced ;
var {0,1}: aux9171_INTEGER :: var_is_introduced ;
var bool: aux9172_BOOL:: var_is_introduced ;
var bool: aux9173_BOOL:: var_is_introduced ;
var 2..44: aux9174:: var_is_introduced ;
var bool: aux9175_BOOL:: var_is_introduced ;
var bool: aux9176_BOOL:: var_is_introduced ;
var bool: aux9177_BOOL:: var_is_introduced ;
var {0,1}: aux9177_INTEGER :: var_is_introduced ;
var bool: aux9178_BOOL:: var_is_introduced ;
var bool: aux9179_BOOL:: var_is_introduced ;
var 3..45: aux9180:: var_is_introduced ;
var bool: aux9181_BOOL:: var_is_introduced ;
var bool: aux9182_BOOL:: var_is_introduced ;
var bool: aux9183_BOOL:: var_is_introduced ;
var {0,1}: aux9183_INTEGER :: var_is_introduced ;
var bool: aux9184_BOOL:: var_is_introduced ;
var bool: aux9185_BOOL:: var_is_introduced ;
var 2..44: aux9186:: var_is_introduced ;
var bool: aux9187_BOOL:: var_is_introduced ;
var bool: aux9188_BOOL:: var_is_introduced ;
var bool: aux9189_BOOL:: var_is_introduced ;
var {0,1}: aux9189_INTEGER :: var_is_introduced ;
var bool: aux9190_BOOL:: var_is_introduced ;
var bool: aux9191_BOOL:: var_is_introduced ;
var 1..43: aux9192:: var_is_introduced ;
var bool: aux9193_BOOL:: var_is_introduced ;
var bool: aux9194_BOOL:: var_is_introduced ;
var bool: aux9195_BOOL:: var_is_introduced ;
var {0,1}: aux9195_INTEGER :: var_is_introduced ;
var bool: aux9196_BOOL:: var_is_introduced ;
var bool: aux9197_BOOL:: var_is_introduced ;
var 2..44: aux9198:: var_is_introduced ;
var bool: aux9199_BOOL:: var_is_introduced ;
var bool: aux9200_BOOL:: var_is_introduced ;
var bool: aux9201_BOOL:: var_is_introduced ;
var {0,1}: aux9201_INTEGER :: var_is_introduced ;
var bool: aux9202_BOOL:: var_is_introduced ;
var bool: aux9203_BOOL:: var_is_introduced ;
var 1..43: aux9204:: var_is_introduced ;
var bool: aux9205_BOOL:: var_is_introduced ;
var bool: aux9206_BOOL:: var_is_introduced ;
var bool: aux9207_BOOL:: var_is_introduced ;
var {0,1}: aux9207_INTEGER :: var_is_introduced ;
var bool: aux9208_BOOL:: var_is_introduced ;
var bool: aux9209_BOOL:: var_is_introduced ;
var 2..44: aux9210:: var_is_introduced ;
var bool: aux9211_BOOL:: var_is_introduced ;
var bool: aux9212_BOOL:: var_is_introduced ;
var bool: aux9213_BOOL:: var_is_introduced ;
var {0,1}: aux9213_INTEGER :: var_is_introduced ;
var bool: aux9214_BOOL:: var_is_introduced ;
var bool: aux9215_BOOL:: var_is_introduced ;
var 2..44: aux9216:: var_is_introduced ;
var bool: aux9217_BOOL:: var_is_introduced ;
var bool: aux9218_BOOL:: var_is_introduced ;
var bool: aux9219_BOOL:: var_is_introduced ;
var {0,1}: aux9219_INTEGER :: var_is_introduced ;
var bool: aux9220_BOOL:: var_is_introduced ;
var bool: aux9221_BOOL:: var_is_introduced ;
var 1..43: aux9222:: var_is_introduced ;
var bool: aux9223_BOOL:: var_is_introduced ;
var bool: aux9224_BOOL:: var_is_introduced ;
var bool: aux9225_BOOL:: var_is_introduced ;
var {0,1}: aux9225_INTEGER :: var_is_introduced ;
var bool: aux9226_BOOL:: var_is_introduced ;
var bool: aux9227_BOOL:: var_is_introduced ;
var 4..46: aux9228:: var_is_introduced ;
var bool: aux9229_BOOL:: var_is_introduced ;
var bool: aux9230_BOOL:: var_is_introduced ;
var bool: aux9231_BOOL:: var_is_introduced ;
var {0,1}: aux9231_INTEGER :: var_is_introduced ;
var bool: aux9232_BOOL:: var_is_introduced ;
var bool: aux9233_BOOL:: var_is_introduced ;
var 2..44: aux9234:: var_is_introduced ;
var bool: aux9235_BOOL:: var_is_introduced ;
var bool: aux9236_BOOL:: var_is_introduced ;
var bool: aux9237_BOOL:: var_is_introduced ;
var {0,1}: aux9237_INTEGER :: var_is_introduced ;
var bool: aux9238_BOOL:: var_is_introduced ;
var bool: aux9239_BOOL:: var_is_introduced ;
var 3..45: aux9240:: var_is_introduced ;
var bool: aux9241_BOOL:: var_is_introduced ;
var bool: aux9242_BOOL:: var_is_introduced ;
var bool: aux9243_BOOL:: var_is_introduced ;
var {0,1}: aux9243_INTEGER :: var_is_introduced ;
var bool: aux9244_BOOL:: var_is_introduced ;
var bool: aux9245_BOOL:: var_is_introduced ;
var 1..43: aux9246:: var_is_introduced ;
var bool: aux9247_BOOL:: var_is_introduced ;
var bool: aux9248_BOOL:: var_is_introduced ;
var bool: aux9249_BOOL:: var_is_introduced ;
var {0,1}: aux9249_INTEGER :: var_is_introduced ;
var bool: aux9250_BOOL:: var_is_introduced ;
var bool: aux9251_BOOL:: var_is_introduced ;
var 3..45: aux9252:: var_is_introduced ;
var bool: aux9253_BOOL:: var_is_introduced ;
var bool: aux9254_BOOL:: var_is_introduced ;
var bool: aux9255_BOOL:: var_is_introduced ;
var {0,1}: aux9255_INTEGER :: var_is_introduced ;
var bool: aux9256_BOOL:: var_is_introduced ;
var bool: aux9257_BOOL:: var_is_introduced ;
var 2..44: aux9258:: var_is_introduced ;
var bool: aux9259_BOOL:: var_is_introduced ;
var bool: aux9260_BOOL:: var_is_introduced ;
var bool: aux9261_BOOL:: var_is_introduced ;
var {0,1}: aux9261_INTEGER :: var_is_introduced ;
var bool: aux9262_BOOL:: var_is_introduced ;
var bool: aux9263_BOOL:: var_is_introduced ;
var 3..45: aux9264:: var_is_introduced ;
var bool: aux9265_BOOL:: var_is_introduced ;
var bool: aux9266_BOOL:: var_is_introduced ;
var bool: aux9267_BOOL:: var_is_introduced ;
var {0,1}: aux9267_INTEGER :: var_is_introduced ;
var bool: aux9268_BOOL:: var_is_introduced ;
var bool: aux9269_BOOL:: var_is_introduced ;
var bool: aux9270_BOOL:: var_is_introduced ;
var 1..43: aux9271:: var_is_introduced ;
var bool: aux9272_BOOL:: var_is_introduced ;
var bool: aux9273_BOOL:: var_is_introduced ;
var bool: aux9274_BOOL:: var_is_introduced ;
var {0,1}: aux9274_INTEGER :: var_is_introduced ;
var bool: aux9275_BOOL:: var_is_introduced ;
var bool: aux9276_BOOL:: var_is_introduced ;
var 2..44: aux9277:: var_is_introduced ;
var bool: aux9278_BOOL:: var_is_introduced ;
var bool: aux9279_BOOL:: var_is_introduced ;
var bool: aux9280_BOOL:: var_is_introduced ;
var {0,1}: aux9280_INTEGER :: var_is_introduced ;
var bool: aux9281_BOOL:: var_is_introduced ;
var bool: aux9282_BOOL:: var_is_introduced ;
var 2..44: aux9283:: var_is_introduced ;
var bool: aux9284_BOOL:: var_is_introduced ;
var bool: aux9285_BOOL:: var_is_introduced ;
var bool: aux9286_BOOL:: var_is_introduced ;
var {0,1}: aux9286_INTEGER :: var_is_introduced ;
var bool: aux9287_BOOL:: var_is_introduced ;
var bool: aux9288_BOOL:: var_is_introduced ;
var 1..43: aux9289:: var_is_introduced ;
var bool: aux9290_BOOL:: var_is_introduced ;
var bool: aux9291_BOOL:: var_is_introduced ;
var bool: aux9292_BOOL:: var_is_introduced ;
var {0,1}: aux9292_INTEGER :: var_is_introduced ;
var bool: aux9293_BOOL:: var_is_introduced ;
var bool: aux9294_BOOL:: var_is_introduced ;
var 4..46: aux9295:: var_is_introduced ;
var bool: aux9296_BOOL:: var_is_introduced ;
var bool: aux9297_BOOL:: var_is_introduced ;
var bool: aux9298_BOOL:: var_is_introduced ;
var {0,1}: aux9298_INTEGER :: var_is_introduced ;
var bool: aux9299_BOOL:: var_is_introduced ;
var bool: aux9300_BOOL:: var_is_introduced ;
var 2..44: aux9301:: var_is_introduced ;
var bool: aux9302_BOOL:: var_is_introduced ;
var bool: aux9303_BOOL:: var_is_introduced ;
var bool: aux9304_BOOL:: var_is_introduced ;
var {0,1}: aux9304_INTEGER :: var_is_introduced ;
var bool: aux9305_BOOL:: var_is_introduced ;
var bool: aux9306_BOOL:: var_is_introduced ;
var 3..45: aux9307:: var_is_introduced ;
var bool: aux9308_BOOL:: var_is_introduced ;
var bool: aux9309_BOOL:: var_is_introduced ;
var bool: aux9310_BOOL:: var_is_introduced ;
var {0,1}: aux9310_INTEGER :: var_is_introduced ;
var bool: aux9311_BOOL:: var_is_introduced ;
var bool: aux9312_BOOL:: var_is_introduced ;
var 1..43: aux9313:: var_is_introduced ;
var bool: aux9314_BOOL:: var_is_introduced ;
var bool: aux9315_BOOL:: var_is_introduced ;
var bool: aux9316_BOOL:: var_is_introduced ;
var {0,1}: aux9316_INTEGER :: var_is_introduced ;
var bool: aux9317_BOOL:: var_is_introduced ;
var bool: aux9318_BOOL:: var_is_introduced ;
var 3..45: aux9319:: var_is_introduced ;
var bool: aux9320_BOOL:: var_is_introduced ;
var bool: aux9321_BOOL:: var_is_introduced ;
var bool: aux9322_BOOL:: var_is_introduced ;
var {0,1}: aux9322_INTEGER :: var_is_introduced ;
var bool: aux9323_BOOL:: var_is_introduced ;
var bool: aux9324_BOOL:: var_is_introduced ;
var 2..44: aux9325:: var_is_introduced ;
var bool: aux9326_BOOL:: var_is_introduced ;
var bool: aux9327_BOOL:: var_is_introduced ;
var bool: aux9328_BOOL:: var_is_introduced ;
var {0,1}: aux9328_INTEGER :: var_is_introduced ;
var bool: aux9329_BOOL:: var_is_introduced ;
var 3..45: aux9330:: var_is_introduced ;
var bool: aux9331_BOOL:: var_is_introduced ;
var bool: aux9332_BOOL:: var_is_introduced ;
var {0,1}: aux9332_INTEGER :: var_is_introduced ;
var bool: aux9333_BOOL:: var_is_introduced ;
var bool: aux9334_BOOL:: var_is_introduced ;
var 1..43: aux9335:: var_is_introduced ;
var bool: aux9336_BOOL:: var_is_introduced ;
var bool: aux9337_BOOL:: var_is_introduced ;
var bool: aux9338_BOOL:: var_is_introduced ;
var {0,1}: aux9338_INTEGER :: var_is_introduced ;
var bool: aux9339_BOOL:: var_is_introduced ;
var bool: aux9340_BOOL:: var_is_introduced ;
var 2..44: aux9341:: var_is_introduced ;
var bool: aux9342_BOOL:: var_is_introduced ;
var bool: aux9343_BOOL:: var_is_introduced ;
var bool: aux9344_BOOL:: var_is_introduced ;
var {0,1}: aux9344_INTEGER :: var_is_introduced ;
var bool: aux9345_BOOL:: var_is_introduced ;
var bool: aux9346_BOOL:: var_is_introduced ;
var 3..45: aux9347:: var_is_introduced ;
var bool: aux9348_BOOL:: var_is_introduced ;
var bool: aux9349_BOOL:: var_is_introduced ;
var bool: aux9350_BOOL:: var_is_introduced ;
var {0,1}: aux9350_INTEGER :: var_is_introduced ;
var bool: aux9351_BOOL:: var_is_introduced ;
var bool: aux9352_BOOL:: var_is_introduced ;
var 2..44: aux9353:: var_is_introduced ;
var bool: aux9354_BOOL:: var_is_introduced ;
var bool: aux9355_BOOL:: var_is_introduced ;
var bool: aux9356_BOOL:: var_is_introduced ;
var {0,1}: aux9356_INTEGER :: var_is_introduced ;
var bool: aux9357_BOOL:: var_is_introduced ;
var bool: aux9358_BOOL:: var_is_introduced ;
var 2..44: aux9359:: var_is_introduced ;
var bool: aux9360_BOOL:: var_is_introduced ;
var bool: aux9361_BOOL:: var_is_introduced ;
var bool: aux9362_BOOL:: var_is_introduced ;
var {0,1}: aux9362_INTEGER :: var_is_introduced ;
var bool: aux9363_BOOL:: var_is_introduced ;
var bool: aux9364_BOOL:: var_is_introduced ;
var 3..45: aux9365:: var_is_introduced ;
var bool: aux9366_BOOL:: var_is_introduced ;
var bool: aux9367_BOOL:: var_is_introduced ;
var bool: aux9368_BOOL:: var_is_introduced ;
var {0,1}: aux9368_INTEGER :: var_is_introduced ;
var bool: aux9369_BOOL:: var_is_introduced ;
var bool: aux9370_BOOL:: var_is_introduced ;
var 2..44: aux9371:: var_is_introduced ;
var bool: aux9372_BOOL:: var_is_introduced ;
var bool: aux9373_BOOL:: var_is_introduced ;
var bool: aux9374_BOOL:: var_is_introduced ;
var {0,1}: aux9374_INTEGER :: var_is_introduced ;
var bool: aux9375_BOOL:: var_is_introduced ;
var bool: aux9376_BOOL:: var_is_introduced ;
var 1..43: aux9377:: var_is_introduced ;
var bool: aux9378_BOOL:: var_is_introduced ;
var bool: aux9379_BOOL:: var_is_introduced ;
var bool: aux9380_BOOL:: var_is_introduced ;
var {0,1}: aux9380_INTEGER :: var_is_introduced ;
var bool: aux9381_BOOL:: var_is_introduced ;
var bool: aux9382_BOOL:: var_is_introduced ;
var 2..44: aux9383:: var_is_introduced ;
var bool: aux9384_BOOL:: var_is_introduced ;
var bool: aux9385_BOOL:: var_is_introduced ;
var bool: aux9386_BOOL:: var_is_introduced ;
var {0,1}: aux9386_INTEGER :: var_is_introduced ;
var bool: aux9387_BOOL:: var_is_introduced ;
var bool: aux9388_BOOL:: var_is_introduced ;
var bool: aux9389_BOOL:: var_is_introduced ;
var 1..43: aux9390:: var_is_introduced ;
var bool: aux9391_BOOL:: var_is_introduced ;
var bool: aux9392_BOOL:: var_is_introduced ;
var bool: aux9393_BOOL:: var_is_introduced ;
var {0,1}: aux9393_INTEGER :: var_is_introduced ;
var bool: aux9394_BOOL:: var_is_introduced ;
var bool: aux9395_BOOL:: var_is_introduced ;
var 2..44: aux9396:: var_is_introduced ;
var bool: aux9397_BOOL:: var_is_introduced ;
var bool: aux9398_BOOL:: var_is_introduced ;
var bool: aux9399_BOOL:: var_is_introduced ;
var {0,1}: aux9399_INTEGER :: var_is_introduced ;
var bool: aux9400_BOOL:: var_is_introduced ;
var bool: aux9401_BOOL:: var_is_introduced ;
var 2..44: aux9402:: var_is_introduced ;
var bool: aux9403_BOOL:: var_is_introduced ;
var bool: aux9404_BOOL:: var_is_introduced ;
var bool: aux9405_BOOL:: var_is_introduced ;
var {0,1}: aux9405_INTEGER :: var_is_introduced ;
var bool: aux9406_BOOL:: var_is_introduced ;
var bool: aux9407_BOOL:: var_is_introduced ;
var 1..43: aux9408:: var_is_introduced ;
var bool: aux9409_BOOL:: var_is_introduced ;
var bool: aux9410_BOOL:: var_is_introduced ;
var bool: aux9411_BOOL:: var_is_introduced ;
var {0,1}: aux9411_INTEGER :: var_is_introduced ;
var bool: aux9412_BOOL:: var_is_introduced ;
var bool: aux9413_BOOL:: var_is_introduced ;
var 4..46: aux9414:: var_is_introduced ;
var bool: aux9415_BOOL:: var_is_introduced ;
var bool: aux9416_BOOL:: var_is_introduced ;
var bool: aux9417_BOOL:: var_is_introduced ;
var {0,1}: aux9417_INTEGER :: var_is_introduced ;
var bool: aux9418_BOOL:: var_is_introduced ;
var bool: aux9419_BOOL:: var_is_introduced ;
var 2..44: aux9420:: var_is_introduced ;
var bool: aux9421_BOOL:: var_is_introduced ;
var bool: aux9422_BOOL:: var_is_introduced ;
var bool: aux9423_BOOL:: var_is_introduced ;
var {0,1}: aux9423_INTEGER :: var_is_introduced ;
var bool: aux9424_BOOL:: var_is_introduced ;
var bool: aux9425_BOOL:: var_is_introduced ;
var 3..45: aux9426:: var_is_introduced ;
var bool: aux9427_BOOL:: var_is_introduced ;
var bool: aux9428_BOOL:: var_is_introduced ;
var bool: aux9429_BOOL:: var_is_introduced ;
var {0,1}: aux9429_INTEGER :: var_is_introduced ;
var bool: aux9430_BOOL:: var_is_introduced ;
var bool: aux9431_BOOL:: var_is_introduced ;
var 1..43: aux9432:: var_is_introduced ;
var bool: aux9433_BOOL:: var_is_introduced ;
var bool: aux9434_BOOL:: var_is_introduced ;
var bool: aux9435_BOOL:: var_is_introduced ;
var {0,1}: aux9435_INTEGER :: var_is_introduced ;
var bool: aux9436_BOOL:: var_is_introduced ;
var bool: aux9437_BOOL:: var_is_introduced ;
var 2..44: aux9438:: var_is_introduced ;
var bool: aux9439_BOOL:: var_is_introduced ;
var bool: aux9440_BOOL:: var_is_introduced ;
var bool: aux9441_BOOL:: var_is_introduced ;
var {0,1}: aux9441_INTEGER :: var_is_introduced ;
var bool: aux9442_BOOL:: var_is_introduced ;
var bool: aux9443_BOOL:: var_is_introduced ;
var 3..45: aux9444:: var_is_introduced ;
var bool: aux9445_BOOL:: var_is_introduced ;
var bool: aux9446_BOOL:: var_is_introduced ;
var bool: aux9447_BOOL:: var_is_introduced ;
var {0,1}: aux9447_INTEGER :: var_is_introduced ;
var bool: aux9448_BOOL:: var_is_introduced ;
var 3..45: aux9449:: var_is_introduced ;
var bool: aux9450_BOOL:: var_is_introduced ;
var bool: aux9451_BOOL:: var_is_introduced ;
var {0,1}: aux9451_INTEGER :: var_is_introduced ;
var bool: aux9452_BOOL:: var_is_introduced ;
var bool: aux9453_BOOL:: var_is_introduced ;
var 1..43: aux9454:: var_is_introduced ;
var bool: aux9455_BOOL:: var_is_introduced ;
var bool: aux9456_BOOL:: var_is_introduced ;
var bool: aux9457_BOOL:: var_is_introduced ;
var {0,1}: aux9457_INTEGER :: var_is_introduced ;
var bool: aux9458_BOOL:: var_is_introduced ;
var bool: aux9459_BOOL:: var_is_introduced ;
var 2..44: aux9460:: var_is_introduced ;
var bool: aux9461_BOOL:: var_is_introduced ;
var bool: aux9462_BOOL:: var_is_introduced ;
var bool: aux9463_BOOL:: var_is_introduced ;
var {0,1}: aux9463_INTEGER :: var_is_introduced ;
var bool: aux9464_BOOL:: var_is_introduced ;
var bool: aux9465_BOOL:: var_is_introduced ;
var 3..45: aux9466:: var_is_introduced ;
var bool: aux9467_BOOL:: var_is_introduced ;
var bool: aux9468_BOOL:: var_is_introduced ;
var bool: aux9469_BOOL:: var_is_introduced ;
var {0,1}: aux9469_INTEGER :: var_is_introduced ;
var bool: aux9470_BOOL:: var_is_introduced ;
var bool: aux9471_BOOL:: var_is_introduced ;
var 2..44: aux9472:: var_is_introduced ;
var bool: aux9473_BOOL:: var_is_introduced ;
var bool: aux9474_BOOL:: var_is_introduced ;
var bool: aux9475_BOOL:: var_is_introduced ;
var {0,1}: aux9475_INTEGER :: var_is_introduced ;
var bool: aux9476_BOOL:: var_is_introduced ;
var bool: aux9477_BOOL:: var_is_introduced ;
var 2..44: aux9478:: var_is_introduced ;
var bool: aux9479_BOOL:: var_is_introduced ;
var bool: aux9480_BOOL:: var_is_introduced ;
var bool: aux9481_BOOL:: var_is_introduced ;
var {0,1}: aux9481_INTEGER :: var_is_introduced ;
var bool: aux9482_BOOL:: var_is_introduced ;
var bool: aux9483_BOOL:: var_is_introduced ;
var 3..45: aux9484:: var_is_introduced ;
var bool: aux9485_BOOL:: var_is_introduced ;
var bool: aux9486_BOOL:: var_is_introduced ;
var bool: aux9487_BOOL:: var_is_introduced ;
var {0,1}: aux9487_INTEGER :: var_is_introduced ;
var bool: aux9488_BOOL:: var_is_introduced ;
var bool: aux9489_BOOL:: var_is_introduced ;
var 2..44: aux9490:: var_is_introduced ;
var bool: aux9491_BOOL:: var_is_introduced ;
var bool: aux9492_BOOL:: var_is_introduced ;
var bool: aux9493_BOOL:: var_is_introduced ;
var {0,1}: aux9493_INTEGER :: var_is_introduced ;
var bool: aux9494_BOOL:: var_is_introduced ;
var bool: aux9495_BOOL:: var_is_introduced ;
var 1..43: aux9496:: var_is_introduced ;
var bool: aux9497_BOOL:: var_is_introduced ;
var bool: aux9498_BOOL:: var_is_introduced ;
var bool: aux9499_BOOL:: var_is_introduced ;
var {0,1}: aux9499_INTEGER :: var_is_introduced ;
var bool: aux9500_BOOL:: var_is_introduced ;
var bool: aux9501_BOOL:: var_is_introduced ;
var 2..44: aux9502:: var_is_introduced ;
var bool: aux9503_BOOL:: var_is_introduced ;
var bool: aux9504_BOOL:: var_is_introduced ;
var bool: aux9505_BOOL:: var_is_introduced ;
var {0,1}: aux9505_INTEGER :: var_is_introduced ;
var bool: aux9506_BOOL:: var_is_introduced ;
var bool: aux9507_BOOL:: var_is_introduced ;
var bool: aux9508_BOOL:: var_is_introduced ;
var 2..44: aux9509:: var_is_introduced ;
var bool: aux9510_BOOL:: var_is_introduced ;
var bool: aux9511_BOOL:: var_is_introduced ;
var bool: aux9512_BOOL:: var_is_introduced ;
var {0,1}: aux9512_INTEGER :: var_is_introduced ;
var bool: aux9513_BOOL:: var_is_introduced ;
var bool: aux9514_BOOL:: var_is_introduced ;
var 2..44: aux9515:: var_is_introduced ;
var bool: aux9516_BOOL:: var_is_introduced ;
var bool: aux9517_BOOL:: var_is_introduced ;
var bool: aux9518_BOOL:: var_is_introduced ;
var {0,1}: aux9518_INTEGER :: var_is_introduced ;
var bool: aux9519_BOOL:: var_is_introduced ;
var bool: aux9520_BOOL:: var_is_introduced ;
var 1..43: aux9521:: var_is_introduced ;
var bool: aux9522_BOOL:: var_is_introduced ;
var bool: aux9523_BOOL:: var_is_introduced ;
var bool: aux9524_BOOL:: var_is_introduced ;
var {0,1}: aux9524_INTEGER :: var_is_introduced ;
var bool: aux9525_BOOL:: var_is_introduced ;
var bool: aux9526_BOOL:: var_is_introduced ;
var 4..46: aux9527:: var_is_introduced ;
var bool: aux9528_BOOL:: var_is_introduced ;
var bool: aux9529_BOOL:: var_is_introduced ;
var bool: aux9530_BOOL:: var_is_introduced ;
var {0,1}: aux9530_INTEGER :: var_is_introduced ;
var bool: aux9531_BOOL:: var_is_introduced ;
var bool: aux9532_BOOL:: var_is_introduced ;
var 2..44: aux9533:: var_is_introduced ;
var bool: aux9534_BOOL:: var_is_introduced ;
var bool: aux9535_BOOL:: var_is_introduced ;
var bool: aux9536_BOOL:: var_is_introduced ;
var {0,1}: aux9536_INTEGER :: var_is_introduced ;
var bool: aux9537_BOOL:: var_is_introduced ;
var bool: aux9538_BOOL:: var_is_introduced ;
var 3..45: aux9539:: var_is_introduced ;
var bool: aux9540_BOOL:: var_is_introduced ;
var bool: aux9541_BOOL:: var_is_introduced ;
var bool: aux9542_BOOL:: var_is_introduced ;
var {0,1}: aux9542_INTEGER :: var_is_introduced ;
var bool: aux9543_BOOL:: var_is_introduced ;
var bool: aux9544_BOOL:: var_is_introduced ;
var 1..43: aux9545:: var_is_introduced ;
var bool: aux9546_BOOL:: var_is_introduced ;
var bool: aux9547_BOOL:: var_is_introduced ;
var bool: aux9548_BOOL:: var_is_introduced ;
var {0,1}: aux9548_INTEGER :: var_is_introduced ;
var bool: aux9549_BOOL:: var_is_introduced ;
var bool: aux9550_BOOL:: var_is_introduced ;
var 3..45: aux9551:: var_is_introduced ;
var bool: aux9552_BOOL:: var_is_introduced ;
var bool: aux9553_BOOL:: var_is_introduced ;
var bool: aux9554_BOOL:: var_is_introduced ;
var {0,1}: aux9554_INTEGER :: var_is_introduced ;
var bool: aux9555_BOOL:: var_is_introduced ;
var bool: aux9556_BOOL:: var_is_introduced ;
var 2..44: aux9557:: var_is_introduced ;
var bool: aux9558_BOOL:: var_is_introduced ;
var bool: aux9559_BOOL:: var_is_introduced ;
var bool: aux9560_BOOL:: var_is_introduced ;
var {0,1}: aux9560_INTEGER :: var_is_introduced ;
var bool: aux9561_BOOL:: var_is_introduced ;
var bool: aux9562_BOOL:: var_is_introduced ;
var 3..45: aux9563:: var_is_introduced ;
var bool: aux9564_BOOL:: var_is_introduced ;
var bool: aux9565_BOOL:: var_is_introduced ;
var bool: aux9566_BOOL:: var_is_introduced ;
var {0,1}: aux9566_INTEGER :: var_is_introduced ;
var bool: aux9567_BOOL:: var_is_introduced ;
var 1..43: aux9568:: var_is_introduced ;
var bool: aux9569_BOOL:: var_is_introduced ;
var bool: aux9570_BOOL:: var_is_introduced ;
var {0,1}: aux9570_INTEGER :: var_is_introduced ;
var bool: aux9571_BOOL:: var_is_introduced ;
var bool: aux9572_BOOL:: var_is_introduced ;
var 1..43: aux9573:: var_is_introduced ;
var bool: aux9574_BOOL:: var_is_introduced ;
var bool: aux9575_BOOL:: var_is_introduced ;
var bool: aux9576_BOOL:: var_is_introduced ;
var {0,1}: aux9576_INTEGER :: var_is_introduced ;
var bool: aux9577_BOOL:: var_is_introduced ;
var bool: aux9578_BOOL:: var_is_introduced ;
var 2..44: aux9579:: var_is_introduced ;
var bool: aux9580_BOOL:: var_is_introduced ;
var bool: aux9581_BOOL:: var_is_introduced ;
var bool: aux9582_BOOL:: var_is_introduced ;
var {0,1}: aux9582_INTEGER :: var_is_introduced ;
var bool: aux9583_BOOL:: var_is_introduced ;
var bool: aux9584_BOOL:: var_is_introduced ;
var 3..45: aux9585:: var_is_introduced ;
var bool: aux9586_BOOL:: var_is_introduced ;
var bool: aux9587_BOOL:: var_is_introduced ;
var bool: aux9588_BOOL:: var_is_introduced ;
var {0,1}: aux9588_INTEGER :: var_is_introduced ;
var bool: aux9589_BOOL:: var_is_introduced ;
var bool: aux9590_BOOL:: var_is_introduced ;
var 2..44: aux9591:: var_is_introduced ;
var bool: aux9592_BOOL:: var_is_introduced ;
var bool: aux9593_BOOL:: var_is_introduced ;
var bool: aux9594_BOOL:: var_is_introduced ;
var {0,1}: aux9594_INTEGER :: var_is_introduced ;
var bool: aux9595_BOOL:: var_is_introduced ;
var bool: aux9596_BOOL:: var_is_introduced ;
var 2..44: aux9597:: var_is_introduced ;
var bool: aux9598_BOOL:: var_is_introduced ;
var bool: aux9599_BOOL:: var_is_introduced ;
var bool: aux9600_BOOL:: var_is_introduced ;
var {0,1}: aux9600_INTEGER :: var_is_introduced ;
var bool: aux9601_BOOL:: var_is_introduced ;
var bool: aux9602_BOOL:: var_is_introduced ;
var 3..45: aux9603:: var_is_introduced ;
var bool: aux9604_BOOL:: var_is_introduced ;
var bool: aux9605_BOOL:: var_is_introduced ;
var bool: aux9606_BOOL:: var_is_introduced ;
var {0,1}: aux9606_INTEGER :: var_is_introduced ;
var bool: aux9607_BOOL:: var_is_introduced ;
var bool: aux9608_BOOL:: var_is_introduced ;
var 2..44: aux9609:: var_is_introduced ;
var bool: aux9610_BOOL:: var_is_introduced ;
var bool: aux9611_BOOL:: var_is_introduced ;
var bool: aux9612_BOOL:: var_is_introduced ;
var {0,1}: aux9612_INTEGER :: var_is_introduced ;
var bool: aux9613_BOOL:: var_is_introduced ;
var bool: aux9614_BOOL:: var_is_introduced ;
var 1..43: aux9615:: var_is_introduced ;
var bool: aux9616_BOOL:: var_is_introduced ;
var bool: aux9617_BOOL:: var_is_introduced ;
var bool: aux9618_BOOL:: var_is_introduced ;
var {0,1}: aux9618_INTEGER :: var_is_introduced ;
var bool: aux9619_BOOL:: var_is_introduced ;
var bool: aux9620_BOOL:: var_is_introduced ;
var 2..44: aux9621:: var_is_introduced ;
var bool: aux9622_BOOL:: var_is_introduced ;
var bool: aux9623_BOOL:: var_is_introduced ;
var bool: aux9624_BOOL:: var_is_introduced ;
var {0,1}: aux9624_INTEGER :: var_is_introduced ;
var bool: aux9625_BOOL:: var_is_introduced ;
var bool: aux9626_BOOL:: var_is_introduced ;
var bool: aux9627_BOOL:: var_is_introduced ;
var 1..43: aux9628:: var_is_introduced ;
var bool: aux9629_BOOL:: var_is_introduced ;
var bool: aux9630_BOOL:: var_is_introduced ;
var bool: aux9631_BOOL:: var_is_introduced ;
var {0,1}: aux9631_INTEGER :: var_is_introduced ;
var bool: aux9632_BOOL:: var_is_introduced ;
var bool: aux9633_BOOL:: var_is_introduced ;
var 2..44: aux9634:: var_is_introduced ;
var bool: aux9635_BOOL:: var_is_introduced ;
var bool: aux9636_BOOL:: var_is_introduced ;
var bool: aux9637_BOOL:: var_is_introduced ;
var {0,1}: aux9637_INTEGER :: var_is_introduced ;
var bool: aux9638_BOOL:: var_is_introduced ;
var bool: aux9639_BOOL:: var_is_introduced ;
var 2..44: aux9640:: var_is_introduced ;
var bool: aux9641_BOOL:: var_is_introduced ;
var bool: aux9642_BOOL:: var_is_introduced ;
var bool: aux9643_BOOL:: var_is_introduced ;
var {0,1}: aux9643_INTEGER :: var_is_introduced ;
var bool: aux9644_BOOL:: var_is_introduced ;
var bool: aux9645_BOOL:: var_is_introduced ;
var 1..43: aux9646:: var_is_introduced ;
var bool: aux9647_BOOL:: var_is_introduced ;
var bool: aux9648_BOOL:: var_is_introduced ;
var bool: aux9649_BOOL:: var_is_introduced ;
var {0,1}: aux9649_INTEGER :: var_is_introduced ;
var bool: aux9650_BOOL:: var_is_introduced ;
var bool: aux9651_BOOL:: var_is_introduced ;
var 4..46: aux9652:: var_is_introduced ;
var bool: aux9653_BOOL:: var_is_introduced ;
var bool: aux9654_BOOL:: var_is_introduced ;
var bool: aux9655_BOOL:: var_is_introduced ;
var {0,1}: aux9655_INTEGER :: var_is_introduced ;
var bool: aux9656_BOOL:: var_is_introduced ;
var bool: aux9657_BOOL:: var_is_introduced ;
var 2..44: aux9658:: var_is_introduced ;
var bool: aux9659_BOOL:: var_is_introduced ;
var bool: aux9660_BOOL:: var_is_introduced ;
var bool: aux9661_BOOL:: var_is_introduced ;
var {0,1}: aux9661_INTEGER :: var_is_introduced ;
var bool: aux9662_BOOL:: var_is_introduced ;
var bool: aux9663_BOOL:: var_is_introduced ;
var 3..45: aux9664:: var_is_introduced ;
var bool: aux9665_BOOL:: var_is_introduced ;
var bool: aux9666_BOOL:: var_is_introduced ;
var bool: aux9667_BOOL:: var_is_introduced ;
var {0,1}: aux9667_INTEGER :: var_is_introduced ;
var bool: aux9668_BOOL:: var_is_introduced ;
var bool: aux9669_BOOL:: var_is_introduced ;
var 1..43: aux9670:: var_is_introduced ;
var bool: aux9671_BOOL:: var_is_introduced ;
var bool: aux9672_BOOL:: var_is_introduced ;
var bool: aux9673_BOOL:: var_is_introduced ;
var {0,1}: aux9673_INTEGER :: var_is_introduced ;
var bool: aux9674_BOOL:: var_is_introduced ;
var bool: aux9675_BOOL:: var_is_introduced ;
var 3..45: aux9676:: var_is_introduced ;
var bool: aux9677_BOOL:: var_is_introduced ;
var bool: aux9678_BOOL:: var_is_introduced ;
var bool: aux9679_BOOL:: var_is_introduced ;
var {0,1}: aux9679_INTEGER :: var_is_introduced ;
var bool: aux9680_BOOL:: var_is_introduced ;
var bool: aux9681_BOOL:: var_is_introduced ;
var 3..45: aux9682:: var_is_introduced ;
var bool: aux9683_BOOL:: var_is_introduced ;
var bool: aux9684_BOOL:: var_is_introduced ;
var bool: aux9685_BOOL:: var_is_introduced ;
var {0,1}: aux9685_INTEGER :: var_is_introduced ;
var bool: aux9686_BOOL:: var_is_introduced ;
var 2..44: aux9687:: var_is_introduced ;
var bool: aux9688_BOOL:: var_is_introduced ;
var bool: aux9689_BOOL:: var_is_introduced ;
var {0,1}: aux9689_INTEGER :: var_is_introduced ;
var bool: aux9690_BOOL:: var_is_introduced ;
var bool: aux9691_BOOL:: var_is_introduced ;
var 1..43: aux9692:: var_is_introduced ;
var bool: aux9693_BOOL:: var_is_introduced ;
var bool: aux9694_BOOL:: var_is_introduced ;
var bool: aux9695_BOOL:: var_is_introduced ;
var {0,1}: aux9695_INTEGER :: var_is_introduced ;
var bool: aux9696_BOOL:: var_is_introduced ;
var bool: aux9697_BOOL:: var_is_introduced ;
var 2..44: aux9698:: var_is_introduced ;
var bool: aux9699_BOOL:: var_is_introduced ;
var bool: aux9700_BOOL:: var_is_introduced ;
var bool: aux9701_BOOL:: var_is_introduced ;
var {0,1}: aux9701_INTEGER :: var_is_introduced ;
var bool: aux9702_BOOL:: var_is_introduced ;
var bool: aux9703_BOOL:: var_is_introduced ;
var 3..45: aux9704:: var_is_introduced ;
var bool: aux9705_BOOL:: var_is_introduced ;
var bool: aux9706_BOOL:: var_is_introduced ;
var bool: aux9707_BOOL:: var_is_introduced ;
var {0,1}: aux9707_INTEGER :: var_is_introduced ;
var bool: aux9708_BOOL:: var_is_introduced ;
var bool: aux9709_BOOL:: var_is_introduced ;
var 2..44: aux9710:: var_is_introduced ;
var bool: aux9711_BOOL:: var_is_introduced ;
var bool: aux9712_BOOL:: var_is_introduced ;
var bool: aux9713_BOOL:: var_is_introduced ;
var {0,1}: aux9713_INTEGER :: var_is_introduced ;
var bool: aux9714_BOOL:: var_is_introduced ;
var bool: aux9715_BOOL:: var_is_introduced ;
var 2..44: aux9716:: var_is_introduced ;
var bool: aux9717_BOOL:: var_is_introduced ;
var bool: aux9718_BOOL:: var_is_introduced ;
var bool: aux9719_BOOL:: var_is_introduced ;
var {0,1}: aux9719_INTEGER :: var_is_introduced ;
var bool: aux9720_BOOL:: var_is_introduced ;
var bool: aux9721_BOOL:: var_is_introduced ;
var 3..45: aux9722:: var_is_introduced ;
var bool: aux9723_BOOL:: var_is_introduced ;
var bool: aux9724_BOOL:: var_is_introduced ;
var bool: aux9725_BOOL:: var_is_introduced ;
var {0,1}: aux9725_INTEGER :: var_is_introduced ;
var bool: aux9726_BOOL:: var_is_introduced ;
var bool: aux9727_BOOL:: var_is_introduced ;
var 2..44: aux9728:: var_is_introduced ;
var bool: aux9729_BOOL:: var_is_introduced ;
var bool: aux9730_BOOL:: var_is_introduced ;
var bool: aux9731_BOOL:: var_is_introduced ;
var {0,1}: aux9731_INTEGER :: var_is_introduced ;
var bool: aux9732_BOOL:: var_is_introduced ;
var bool: aux9733_BOOL:: var_is_introduced ;
var 1..43: aux9734:: var_is_introduced ;
var bool: aux9735_BOOL:: var_is_introduced ;
var bool: aux9736_BOOL:: var_is_introduced ;
var bool: aux9737_BOOL:: var_is_introduced ;
var {0,1}: aux9737_INTEGER :: var_is_introduced ;
var bool: aux9738_BOOL:: var_is_introduced ;
var bool: aux9739_BOOL:: var_is_introduced ;
var 2..44: aux9740:: var_is_introduced ;
var bool: aux9741_BOOL:: var_is_introduced ;
var bool: aux9742_BOOL:: var_is_introduced ;
var bool: aux9743_BOOL:: var_is_introduced ;
var {0,1}: aux9743_INTEGER :: var_is_introduced ;
var bool: aux9744_BOOL:: var_is_introduced ;
var bool: aux9745_BOOL:: var_is_introduced ;
var bool: aux9746_BOOL:: var_is_introduced ;
var 1..43: aux9747:: var_is_introduced ;
var bool: aux9748_BOOL:: var_is_introduced ;
var bool: aux9749_BOOL:: var_is_introduced ;
var bool: aux9750_BOOL:: var_is_introduced ;
var {0,1}: aux9750_INTEGER :: var_is_introduced ;
var bool: aux9751_BOOL:: var_is_introduced ;
var bool: aux9752_BOOL:: var_is_introduced ;
var 2..44: aux9753:: var_is_introduced ;
var bool: aux9754_BOOL:: var_is_introduced ;
var bool: aux9755_BOOL:: var_is_introduced ;
var bool: aux9756_BOOL:: var_is_introduced ;
var {0,1}: aux9756_INTEGER :: var_is_introduced ;
var bool: aux9757_BOOL:: var_is_introduced ;
var bool: aux9758_BOOL:: var_is_introduced ;
var 2..44: aux9759:: var_is_introduced ;
var bool: aux9760_BOOL:: var_is_introduced ;
var bool: aux9761_BOOL:: var_is_introduced ;
var bool: aux9762_BOOL:: var_is_introduced ;
var {0,1}: aux9762_INTEGER :: var_is_introduced ;
var bool: aux9763_BOOL:: var_is_introduced ;
var bool: aux9764_BOOL:: var_is_introduced ;
var 1..43: aux9765:: var_is_introduced ;
var bool: aux9766_BOOL:: var_is_introduced ;
var bool: aux9767_BOOL:: var_is_introduced ;
var bool: aux9768_BOOL:: var_is_introduced ;
var {0,1}: aux9768_INTEGER :: var_is_introduced ;
var bool: aux9769_BOOL:: var_is_introduced ;
var bool: aux9770_BOOL:: var_is_introduced ;
var 4..46: aux9771:: var_is_introduced ;
var bool: aux9772_BOOL:: var_is_introduced ;
var bool: aux9773_BOOL:: var_is_introduced ;
var bool: aux9774_BOOL:: var_is_introduced ;
var {0,1}: aux9774_INTEGER :: var_is_introduced ;
var bool: aux9775_BOOL:: var_is_introduced ;
var bool: aux9776_BOOL:: var_is_introduced ;
var 2..44: aux9777:: var_is_introduced ;
var bool: aux9778_BOOL:: var_is_introduced ;
var bool: aux9779_BOOL:: var_is_introduced ;
var bool: aux9780_BOOL:: var_is_introduced ;
var {0,1}: aux9780_INTEGER :: var_is_introduced ;
var bool: aux9781_BOOL:: var_is_introduced ;
var bool: aux9782_BOOL:: var_is_introduced ;
var 1..43: aux9783:: var_is_introduced ;
var bool: aux9784_BOOL:: var_is_introduced ;
var bool: aux9785_BOOL:: var_is_introduced ;
var bool: aux9786_BOOL:: var_is_introduced ;
var {0,1}: aux9786_INTEGER :: var_is_introduced ;
var bool: aux9787_BOOL:: var_is_introduced ;
var bool: aux9788_BOOL:: var_is_introduced ;
var 3..45: aux9789:: var_is_introduced ;
var bool: aux9790_BOOL:: var_is_introduced ;
var bool: aux9791_BOOL:: var_is_introduced ;
var bool: aux9792_BOOL:: var_is_introduced ;
var {0,1}: aux9792_INTEGER :: var_is_introduced ;
var bool: aux9793_BOOL:: var_is_introduced ;
var bool: aux9794_BOOL:: var_is_introduced ;
var 2..44: aux9795:: var_is_introduced ;
var bool: aux9796_BOOL:: var_is_introduced ;
var bool: aux9797_BOOL:: var_is_introduced ;
var bool: aux9798_BOOL:: var_is_introduced ;
var {0,1}: aux9798_INTEGER :: var_is_introduced ;
var bool: aux9799_BOOL:: var_is_introduced ;
var bool: aux9800_BOOL:: var_is_introduced ;
var 3..45: aux9801:: var_is_introduced ;
var bool: aux9802_BOOL:: var_is_introduced ;
var bool: aux9803_BOOL:: var_is_introduced ;
var bool: aux9804_BOOL:: var_is_introduced ;
var {0,1}: aux9804_INTEGER :: var_is_introduced ;
var bool: aux9805_BOOL:: var_is_introduced ;
var 3..45: aux9806:: var_is_introduced ;
var bool: aux9807_BOOL:: var_is_introduced ;
var bool: aux9808_BOOL:: var_is_introduced ;
var {0,1}: aux9808_INTEGER :: var_is_introduced ;
var bool: aux9809_BOOL:: var_is_introduced ;
var bool: aux9810_BOOL:: var_is_introduced ;
var 1..43: aux9811:: var_is_introduced ;
var bool: aux9812_BOOL:: var_is_introduced ;
var bool: aux9813_BOOL:: var_is_introduced ;
var bool: aux9814_BOOL:: var_is_introduced ;
var {0,1}: aux9814_INTEGER :: var_is_introduced ;
var bool: aux9815_BOOL:: var_is_introduced ;
var bool: aux9816_BOOL:: var_is_introduced ;
var 2..44: aux9817:: var_is_introduced ;
var bool: aux9818_BOOL:: var_is_introduced ;
var bool: aux9819_BOOL:: var_is_introduced ;
var bool: aux9820_BOOL:: var_is_introduced ;
var {0,1}: aux9820_INTEGER :: var_is_introduced ;
var bool: aux9821_BOOL:: var_is_introduced ;
var bool: aux9822_BOOL:: var_is_introduced ;
var 3..45: aux9823:: var_is_introduced ;
var bool: aux9824_BOOL:: var_is_introduced ;
var bool: aux9825_BOOL:: var_is_introduced ;
var bool: aux9826_BOOL:: var_is_introduced ;
var {0,1}: aux9826_INTEGER :: var_is_introduced ;
var bool: aux9827_BOOL:: var_is_introduced ;
var bool: aux9828_BOOL:: var_is_introduced ;
var 2..44: aux9829:: var_is_introduced ;
var bool: aux9830_BOOL:: var_is_introduced ;
var bool: aux9831_BOOL:: var_is_introduced ;
var bool: aux9832_BOOL:: var_is_introduced ;
var {0,1}: aux9832_INTEGER :: var_is_introduced ;
var bool: aux9833_BOOL:: var_is_introduced ;
var bool: aux9834_BOOL:: var_is_introduced ;
var 2..44: aux9835:: var_is_introduced ;
var bool: aux9836_BOOL:: var_is_introduced ;
var bool: aux9837_BOOL:: var_is_introduced ;
var bool: aux9838_BOOL:: var_is_introduced ;
var {0,1}: aux9838_INTEGER :: var_is_introduced ;
var bool: aux9839_BOOL:: var_is_introduced ;
var bool: aux9840_BOOL:: var_is_introduced ;
var 3..45: aux9841:: var_is_introduced ;
var bool: aux9842_BOOL:: var_is_introduced ;
var bool: aux9843_BOOL:: var_is_introduced ;
var bool: aux9844_BOOL:: var_is_introduced ;
var {0,1}: aux9844_INTEGER :: var_is_introduced ;
var bool: aux9845_BOOL:: var_is_introduced ;
var bool: aux9846_BOOL:: var_is_introduced ;
var 2..44: aux9847:: var_is_introduced ;
var bool: aux9848_BOOL:: var_is_introduced ;
var bool: aux9849_BOOL:: var_is_introduced ;
var bool: aux9850_BOOL:: var_is_introduced ;
var {0,1}: aux9850_INTEGER :: var_is_introduced ;
var bool: aux9851_BOOL:: var_is_introduced ;
var bool: aux9852_BOOL:: var_is_introduced ;
var 1..43: aux9853:: var_is_introduced ;
var bool: aux9854_BOOL:: var_is_introduced ;
var bool: aux9855_BOOL:: var_is_introduced ;
var bool: aux9856_BOOL:: var_is_introduced ;
var {0,1}: aux9856_INTEGER :: var_is_introduced ;
var bool: aux9857_BOOL:: var_is_introduced ;
var bool: aux9858_BOOL:: var_is_introduced ;
var 2..44: aux9859:: var_is_introduced ;
var bool: aux9860_BOOL:: var_is_introduced ;
var bool: aux9861_BOOL:: var_is_introduced ;
var bool: aux9862_BOOL:: var_is_introduced ;
var {0,1}: aux9862_INTEGER :: var_is_introduced ;
var bool: aux9863_BOOL:: var_is_introduced ;
var bool: aux9864_BOOL:: var_is_introduced ;
var 3..45: aux9865:: var_is_introduced ;
var bool: aux9866_BOOL:: var_is_introduced ;
var bool: aux9867_BOOL:: var_is_introduced ;
var {0,1}: aux9867_INTEGER :: var_is_introduced ;
var bool: aux9868_BOOL:: var_is_introduced ;
var bool: aux9869_BOOL:: var_is_introduced ;
var 1..43: aux9870:: var_is_introduced ;
var bool: aux9871_BOOL:: var_is_introduced ;
var bool: aux9872_BOOL:: var_is_introduced ;
var bool: aux9873_BOOL:: var_is_introduced ;
var {0,1}: aux9873_INTEGER :: var_is_introduced ;
var bool: aux9874_BOOL:: var_is_introduced ;
var bool: aux9875_BOOL:: var_is_introduced ;
var 2..44: aux9876:: var_is_introduced ;
var bool: aux9877_BOOL:: var_is_introduced ;
var bool: aux9878_BOOL:: var_is_introduced ;
var bool: aux9879_BOOL:: var_is_introduced ;
var {0,1}: aux9879_INTEGER :: var_is_introduced ;
var bool: aux9880_BOOL:: var_is_introduced ;
var bool: aux9881_BOOL:: var_is_introduced ;
var 3..45: aux9882:: var_is_introduced ;
var bool: aux9883_BOOL:: var_is_introduced ;
var bool: aux9884_BOOL:: var_is_introduced ;
var bool: aux9885_BOOL:: var_is_introduced ;
var {0,1}: aux9885_INTEGER :: var_is_introduced ;
var bool: aux9886_BOOL:: var_is_introduced ;
var bool: aux9887_BOOL:: var_is_introduced ;
var 2..44: aux9888:: var_is_introduced ;
var bool: aux9889_BOOL:: var_is_introduced ;
var bool: aux9890_BOOL:: var_is_introduced ;
var bool: aux9891_BOOL:: var_is_introduced ;
var {0,1}: aux9891_INTEGER :: var_is_introduced ;
var bool: aux9892_BOOL:: var_is_introduced ;
var bool: aux9893_BOOL:: var_is_introduced ;
var 2..44: aux9894:: var_is_introduced ;
var bool: aux9895_BOOL:: var_is_introduced ;
var bool: aux9896_BOOL:: var_is_introduced ;
var bool: aux9897_BOOL:: var_is_introduced ;
var {0,1}: aux9897_INTEGER :: var_is_introduced ;
var bool: aux9898_BOOL:: var_is_introduced ;
var bool: aux9899_BOOL:: var_is_introduced ;
var 2..44: aux9900:: var_is_introduced ;
var bool: aux9901_BOOL:: var_is_introduced ;
var bool: aux9902_BOOL:: var_is_introduced ;
var bool: aux9903_BOOL:: var_is_introduced ;
var {0,1}: aux9903_INTEGER :: var_is_introduced ;
var bool: aux9904_BOOL:: var_is_introduced ;
var bool: aux9905_BOOL:: var_is_introduced ;
var 1..43: aux9906:: var_is_introduced ;
var bool: aux9907_BOOL:: var_is_introduced ;
var bool: aux9908_BOOL:: var_is_introduced ;
var bool: aux9909_BOOL:: var_is_introduced ;
var {0,1}: aux9909_INTEGER :: var_is_introduced ;
var bool: aux9910_BOOL:: var_is_introduced ;
var bool: aux9911_BOOL:: var_is_introduced ;
var 2..44: aux9912:: var_is_introduced ;
var bool: aux9913_BOOL:: var_is_introduced ;
var bool: aux9914_BOOL:: var_is_introduced ;
var bool: aux9915_BOOL:: var_is_introduced ;
var {0,1}: aux9915_INTEGER :: var_is_introduced ;
var bool: aux9916_BOOL:: var_is_introduced ;
var bool: aux9917_BOOL:: var_is_introduced ;
var 1..43: aux9918:: var_is_introduced ;
var bool: aux9919_BOOL:: var_is_introduced ;
var bool: aux9920_BOOL:: var_is_introduced ;
var bool: aux9921_BOOL:: var_is_introduced ;
var {0,1}: aux9921_INTEGER :: var_is_introduced ;
var bool: aux9922_BOOL:: var_is_introduced ;
var bool: aux9923_BOOL:: var_is_introduced ;
var 2..44: aux9924:: var_is_introduced ;
var bool: aux9925_BOOL:: var_is_introduced ;
var bool: aux9926_BOOL:: var_is_introduced ;
var bool: aux9927_BOOL:: var_is_introduced ;
var {0,1}: aux9927_INTEGER :: var_is_introduced ;
var bool: aux9928_BOOL:: var_is_introduced ;
var bool: aux9929_BOOL:: var_is_introduced ;
var 2..44: aux9930:: var_is_introduced ;
var bool: aux9931_BOOL:: var_is_introduced ;
var bool: aux9932_BOOL:: var_is_introduced ;
var bool: aux9933_BOOL:: var_is_introduced ;
var {0,1}: aux9933_INTEGER :: var_is_introduced ;
var bool: aux9934_BOOL:: var_is_introduced ;
var bool: aux9935_BOOL:: var_is_introduced ;
var 1..43: aux9936:: var_is_introduced ;
var bool: aux9937_BOOL:: var_is_introduced ;
var bool: aux9938_BOOL:: var_is_introduced ;
var bool: aux9939_BOOL:: var_is_introduced ;
var {0,1}: aux9939_INTEGER :: var_is_introduced ;
var bool: aux9940_BOOL:: var_is_introduced ;
var bool: aux9941_BOOL:: var_is_introduced ;
var 4..46: aux9942:: var_is_introduced ;
var bool: aux9943_BOOL:: var_is_introduced ;
var bool: aux9944_BOOL:: var_is_introduced ;
var bool: aux9945_BOOL:: var_is_introduced ;
var {0,1}: aux9945_INTEGER :: var_is_introduced ;
var bool: aux9946_BOOL:: var_is_introduced ;
var bool: aux9947_BOOL:: var_is_introduced ;
var 2..44: aux9948:: var_is_introduced ;
var bool: aux9949_BOOL:: var_is_introduced ;
var bool: aux9950_BOOL:: var_is_introduced ;
var bool: aux9951_BOOL:: var_is_introduced ;
var {0,1}: aux9951_INTEGER :: var_is_introduced ;
var bool: aux9952_BOOL:: var_is_introduced ;
var bool: aux9953_BOOL:: var_is_introduced ;
var 3..45: aux9954:: var_is_introduced ;
var bool: aux9955_BOOL:: var_is_introduced ;
var bool: aux9956_BOOL:: var_is_introduced ;
var bool: aux9957_BOOL:: var_is_introduced ;
var {0,1}: aux9957_INTEGER :: var_is_introduced ;
var bool: aux9958_BOOL:: var_is_introduced ;
var bool: aux9959_BOOL:: var_is_introduced ;
var 1..43: aux9960:: var_is_introduced ;
var bool: aux9961_BOOL:: var_is_introduced ;
var bool: aux9962_BOOL:: var_is_introduced ;
var bool: aux9963_BOOL:: var_is_introduced ;
var {0,1}: aux9963_INTEGER :: var_is_introduced ;
var bool: aux9964_BOOL:: var_is_introduced ;
var bool: aux9965_BOOL:: var_is_introduced ;
var 3..45: aux9966:: var_is_introduced ;
var bool: aux9967_BOOL:: var_is_introduced ;
var bool: aux9968_BOOL:: var_is_introduced ;
var bool: aux9969_BOOL:: var_is_introduced ;
var {0,1}: aux9969_INTEGER :: var_is_introduced ;
var bool: aux9970_BOOL:: var_is_introduced ;
var bool: aux9971_BOOL:: var_is_introduced ;
var 2..44: aux9972:: var_is_introduced ;
var bool: aux9973_BOOL:: var_is_introduced ;
var bool: aux9974_BOOL:: var_is_introduced ;
var bool: aux9975_BOOL:: var_is_introduced ;
var {0,1}: aux9975_INTEGER :: var_is_introduced ;
var bool: aux9976_BOOL:: var_is_introduced ;
var bool: aux9977_BOOL:: var_is_introduced ;
var 3..45: aux9978:: var_is_introduced ;
var bool: aux9979_BOOL:: var_is_introduced ;
var bool: aux9980_BOOL:: var_is_introduced ;
var bool: aux9981_BOOL:: var_is_introduced ;
var {0,1}: aux9981_INTEGER :: var_is_introduced ;
var bool: aux9982_BOOL:: var_is_introduced ;
var bool: aux9983_BOOL:: var_is_introduced ;
var 2..44: aux9984:: var_is_introduced ;
var bool: aux9985_BOOL:: var_is_introduced ;
var bool: aux9986_BOOL:: var_is_introduced ;
var {0,1}: aux9986_INTEGER :: var_is_introduced ;
var bool: aux9987_BOOL:: var_is_introduced ;
var bool: aux9988_BOOL:: var_is_introduced ;
var 1..43: aux9989:: var_is_introduced ;
var bool: aux9990_BOOL:: var_is_introduced ;
var bool: aux9991_BOOL:: var_is_introduced ;
var bool: aux9992_BOOL:: var_is_introduced ;
var {0,1}: aux9992_INTEGER :: var_is_introduced ;
var bool: aux9993_BOOL:: var_is_introduced ;
var bool: aux9994_BOOL:: var_is_introduced ;
var 2..44: aux9995:: var_is_introduced ;
var bool: aux9996_BOOL:: var_is_introduced ;
var bool: aux9997_BOOL:: var_is_introduced ;
var bool: aux9998_BOOL:: var_is_introduced ;
var {0,1}: aux9998_INTEGER :: var_is_introduced ;
var bool: aux9999_BOOL:: var_is_introduced ;
var bool: aux10000_BOOL:: var_is_introduced ;
var 3..45: aux10001:: var_is_introduced ;
var bool: aux10002_BOOL:: var_is_introduced ;
var bool: aux10003_BOOL:: var_is_introduced ;
var bool: aux10004_BOOL:: var_is_introduced ;
var {0,1}: aux10004_INTEGER :: var_is_introduced ;
var bool: aux10005_BOOL:: var_is_introduced ;
var bool: aux10006_BOOL:: var_is_introduced ;
var 2..44: aux10007:: var_is_introduced ;
var bool: aux10008_BOOL:: var_is_introduced ;
var bool: aux10009_BOOL:: var_is_introduced ;
var bool: aux10010_BOOL:: var_is_introduced ;
var {0,1}: aux10010_INTEGER :: var_is_introduced ;
var bool: aux10011_BOOL:: var_is_introduced ;
var bool: aux10012_BOOL:: var_is_introduced ;
var 2..44: aux10013:: var_is_introduced ;
var bool: aux10014_BOOL:: var_is_introduced ;
var bool: aux10015_BOOL:: var_is_introduced ;
var bool: aux10016_BOOL:: var_is_introduced ;
var {0,1}: aux10016_INTEGER :: var_is_introduced ;
var bool: aux10017_BOOL:: var_is_introduced ;
var bool: aux10018_BOOL:: var_is_introduced ;
var 3..45: aux10019:: var_is_introduced ;
var bool: aux10020_BOOL:: var_is_introduced ;
var bool: aux10021_BOOL:: var_is_introduced ;
var bool: aux10022_BOOL:: var_is_introduced ;
var {0,1}: aux10022_INTEGER :: var_is_introduced ;
var bool: aux10023_BOOL:: var_is_introduced ;
var bool: aux10024_BOOL:: var_is_introduced ;
var 1..43: aux10025:: var_is_introduced ;
var bool: aux10026_BOOL:: var_is_introduced ;
var bool: aux10027_BOOL:: var_is_introduced ;
var bool: aux10028_BOOL:: var_is_introduced ;
var {0,1}: aux10028_INTEGER :: var_is_introduced ;
var bool: aux10029_BOOL:: var_is_introduced ;
var bool: aux10030_BOOL:: var_is_introduced ;
var 2..44: aux10031:: var_is_introduced ;
var bool: aux10032_BOOL:: var_is_introduced ;
var bool: aux10033_BOOL:: var_is_introduced ;
var bool: aux10034_BOOL:: var_is_introduced ;
var {0,1}: aux10034_INTEGER :: var_is_introduced ;
var bool: aux10035_BOOL:: var_is_introduced ;
var bool: aux10036_BOOL:: var_is_introduced ;
var 1..43: aux10037:: var_is_introduced ;
var bool: aux10038_BOOL:: var_is_introduced ;
var bool: aux10039_BOOL:: var_is_introduced ;
var bool: aux10040_BOOL:: var_is_introduced ;
var {0,1}: aux10040_INTEGER :: var_is_introduced ;
var bool: aux10041_BOOL:: var_is_introduced ;
var bool: aux10042_BOOL:: var_is_introduced ;
var 2..44: aux10043:: var_is_introduced ;
var bool: aux10044_BOOL:: var_is_introduced ;
var bool: aux10045_BOOL:: var_is_introduced ;
var bool: aux10046_BOOL:: var_is_introduced ;
var {0,1}: aux10046_INTEGER :: var_is_introduced ;
var bool: aux10047_BOOL:: var_is_introduced ;
var bool: aux10048_BOOL:: var_is_introduced ;
var 2..44: aux10049:: var_is_introduced ;
var bool: aux10050_BOOL:: var_is_introduced ;
var bool: aux10051_BOOL:: var_is_introduced ;
var bool: aux10052_BOOL:: var_is_introduced ;
var {0,1}: aux10052_INTEGER :: var_is_introduced ;
var bool: aux10053_BOOL:: var_is_introduced ;
var bool: aux10054_BOOL:: var_is_introduced ;
var 1..43: aux10055:: var_is_introduced ;
var bool: aux10056_BOOL:: var_is_introduced ;
var bool: aux10057_BOOL:: var_is_introduced ;
var bool: aux10058_BOOL:: var_is_introduced ;
var {0,1}: aux10058_INTEGER :: var_is_introduced ;
var bool: aux10059_BOOL:: var_is_introduced ;
var bool: aux10060_BOOL:: var_is_introduced ;
var 4..46: aux10061:: var_is_introduced ;
var bool: aux10062_BOOL:: var_is_introduced ;
var bool: aux10063_BOOL:: var_is_introduced ;
var bool: aux10064_BOOL:: var_is_introduced ;
var {0,1}: aux10064_INTEGER :: var_is_introduced ;
var bool: aux10065_BOOL:: var_is_introduced ;
var bool: aux10066_BOOL:: var_is_introduced ;
var 2..44: aux10067:: var_is_introduced ;
var bool: aux10068_BOOL:: var_is_introduced ;
var bool: aux10069_BOOL:: var_is_introduced ;
var bool: aux10070_BOOL:: var_is_introduced ;
var {0,1}: aux10070_INTEGER :: var_is_introduced ;
var bool: aux10071_BOOL:: var_is_introduced ;
var bool: aux10072_BOOL:: var_is_introduced ;
var 3..45: aux10073:: var_is_introduced ;
var bool: aux10074_BOOL:: var_is_introduced ;
var bool: aux10075_BOOL:: var_is_introduced ;
var bool: aux10076_BOOL:: var_is_introduced ;
var {0,1}: aux10076_INTEGER :: var_is_introduced ;
var bool: aux10077_BOOL:: var_is_introduced ;
var bool: aux10078_BOOL:: var_is_introduced ;
var 1..43: aux10079:: var_is_introduced ;
var bool: aux10080_BOOL:: var_is_introduced ;
var bool: aux10081_BOOL:: var_is_introduced ;
var bool: aux10082_BOOL:: var_is_introduced ;
var {0,1}: aux10082_INTEGER :: var_is_introduced ;
var bool: aux10083_BOOL:: var_is_introduced ;
var bool: aux10084_BOOL:: var_is_introduced ;
var 3..45: aux10085:: var_is_introduced ;
var bool: aux10086_BOOL:: var_is_introduced ;
var bool: aux10087_BOOL:: var_is_introduced ;
var bool: aux10088_BOOL:: var_is_introduced ;
var {0,1}: aux10088_INTEGER :: var_is_introduced ;
var bool: aux10089_BOOL:: var_is_introduced ;
var bool: aux10090_BOOL:: var_is_introduced ;
var 2..44: aux10091:: var_is_introduced ;
var bool: aux10092_BOOL:: var_is_introduced ;
var bool: aux10093_BOOL:: var_is_introduced ;
var bool: aux10094_BOOL:: var_is_introduced ;
var {0,1}: aux10094_INTEGER :: var_is_introduced ;
var bool: aux10095_BOOL:: var_is_introduced ;
var bool: aux10096_BOOL:: var_is_introduced ;
var 3..45: aux10097:: var_is_introduced ;
var bool: aux10098_BOOL:: var_is_introduced ;
var bool: aux10099_BOOL:: var_is_introduced ;
var bool: aux10100_BOOL:: var_is_introduced ;
var {0,1}: aux10100_INTEGER :: var_is_introduced ;
var bool: aux10101_BOOL:: var_is_introduced ;
var bool: aux10102_BOOL:: var_is_introduced ;
var bool: aux10103_BOOL:: var_is_introduced ;
var 1..43: aux10104:: var_is_introduced ;
var bool: aux10105_BOOL:: var_is_introduced ;
var bool: aux10106_BOOL:: var_is_introduced ;
var bool: aux10107_BOOL:: var_is_introduced ;
var bool: aux10108_BOOL:: var_is_introduced ;
var bool: aux10109_BOOL:: var_is_introduced ;
var {0,1}: aux10109_INTEGER :: var_is_introduced ;
var 1..43: aux10110:: var_is_introduced ;
var bool: aux10111_BOOL:: var_is_introduced ;
var bool: aux10112_BOOL:: var_is_introduced ;
var bool: aux10113_BOOL:: var_is_introduced ;
var bool: aux10114_BOOL:: var_is_introduced ;
var bool: aux10115_BOOL:: var_is_introduced ;
var {0,1}: aux10115_INTEGER :: var_is_introduced ;
var 2..44: aux10116:: var_is_introduced ;
var bool: aux10117_BOOL:: var_is_introduced ;
var bool: aux10118_BOOL:: var_is_introduced ;
var bool: aux10119_BOOL:: var_is_introduced ;
var bool: aux10120_BOOL:: var_is_introduced ;
var bool: aux10121_BOOL:: var_is_introduced ;
var {0,1}: aux10121_INTEGER :: var_is_introduced ;
var 1..43: aux10122:: var_is_introduced ;
var bool: aux10123_BOOL:: var_is_introduced ;
var bool: aux10124_BOOL:: var_is_introduced ;
var bool: aux10125_BOOL:: var_is_introduced ;
var bool: aux10126_BOOL:: var_is_introduced ;
var bool: aux10127_BOOL:: var_is_introduced ;
var {0,1}: aux10127_INTEGER :: var_is_introduced ;
var 2..44: aux10128:: var_is_introduced ;
var bool: aux10129_BOOL:: var_is_introduced ;
var bool: aux10130_BOOL:: var_is_introduced ;
var bool: aux10131_BOOL:: var_is_introduced ;
var bool: aux10132_BOOL:: var_is_introduced ;
var bool: aux10133_BOOL:: var_is_introduced ;
var {0,1}: aux10133_INTEGER :: var_is_introduced ;
var 2..44: aux10134:: var_is_introduced ;
var bool: aux10135_BOOL:: var_is_introduced ;
var bool: aux10136_BOOL:: var_is_introduced ;
var bool: aux10137_BOOL:: var_is_introduced ;
var bool: aux10138_BOOL:: var_is_introduced ;
var bool: aux10139_BOOL:: var_is_introduced ;
var {0,1}: aux10139_INTEGER :: var_is_introduced ;
var 1..43: aux10140:: var_is_introduced ;
var bool: aux10141_BOOL:: var_is_introduced ;
var bool: aux10142_BOOL:: var_is_introduced ;
var bool: aux10143_BOOL:: var_is_introduced ;
var bool: aux10144_BOOL:: var_is_introduced ;
var bool: aux10145_BOOL:: var_is_introduced ;
var {0,1}: aux10145_INTEGER :: var_is_introduced ;
var 1..43: aux10146:: var_is_introduced ;
var bool: aux10147_BOOL:: var_is_introduced ;
var bool: aux10148_BOOL:: var_is_introduced ;
var bool: aux10149_BOOL:: var_is_introduced ;
var bool: aux10150_BOOL:: var_is_introduced ;
var bool: aux10151_BOOL:: var_is_introduced ;
var {0,1}: aux10151_INTEGER :: var_is_introduced ;
var 2..44: aux10152:: var_is_introduced ;
var bool: aux10153_BOOL:: var_is_introduced ;
var bool: aux10154_BOOL:: var_is_introduced ;
var bool: aux10155_BOOL:: var_is_introduced ;
var bool: aux10156_BOOL:: var_is_introduced ;
var bool: aux10157_BOOL:: var_is_introduced ;
var {0,1}: aux10157_INTEGER :: var_is_introduced ;
var 3..45: aux10158:: var_is_introduced ;
var bool: aux10159_BOOL:: var_is_introduced ;
var bool: aux10160_BOOL:: var_is_introduced ;
var bool: aux10161_BOOL:: var_is_introduced ;
var bool: aux10162_BOOL:: var_is_introduced ;
var bool: aux10163_BOOL:: var_is_introduced ;
var {0,1}: aux10163_INTEGER :: var_is_introduced ;
var 2..44: aux10164:: var_is_introduced ;
var bool: aux10165_BOOL:: var_is_introduced ;
var bool: aux10166_BOOL:: var_is_introduced ;
var bool: aux10167_BOOL:: var_is_introduced ;
var bool: aux10168_BOOL:: var_is_introduced ;
var bool: aux10169_BOOL:: var_is_introduced ;
var {0,1}: aux10169_INTEGER :: var_is_introduced ;
var 2..44: aux10170:: var_is_introduced ;
var bool: aux10171_BOOL:: var_is_introduced ;
var bool: aux10172_BOOL:: var_is_introduced ;
var bool: aux10173_BOOL:: var_is_introduced ;
var bool: aux10174_BOOL:: var_is_introduced ;
var bool: aux10175_BOOL:: var_is_introduced ;
var {0,1}: aux10175_INTEGER :: var_is_introduced ;
var 3..45: aux10176:: var_is_introduced ;
var bool: aux10177_BOOL:: var_is_introduced ;
var bool: aux10178_BOOL:: var_is_introduced ;
var bool: aux10179_BOOL:: var_is_introduced ;
var bool: aux10180_BOOL:: var_is_introduced ;
var bool: aux10181_BOOL:: var_is_introduced ;
var {0,1}: aux10181_INTEGER :: var_is_introduced ;
var 2..44: aux10182:: var_is_introduced ;
var bool: aux10183_BOOL:: var_is_introduced ;
var bool: aux10184_BOOL:: var_is_introduced ;
var bool: aux10185_BOOL:: var_is_introduced ;
var bool: aux10186_BOOL:: var_is_introduced ;
var bool: aux10187_BOOL:: var_is_introduced ;
var {0,1}: aux10187_INTEGER :: var_is_introduced ;
var 2..44: aux10188:: var_is_introduced ;
var bool: aux10189_BOOL:: var_is_introduced ;
var bool: aux10190_BOOL:: var_is_introduced ;
var bool: aux10191_BOOL:: var_is_introduced ;
var bool: aux10192_BOOL:: var_is_introduced ;
var bool: aux10193_BOOL:: var_is_introduced ;
var {0,1}: aux10193_INTEGER :: var_is_introduced ;
var 3..45: aux10194:: var_is_introduced ;
var bool: aux10195_BOOL:: var_is_introduced ;
var bool: aux10196_BOOL:: var_is_introduced ;
var bool: aux10197_BOOL:: var_is_introduced ;
var bool: aux10198_BOOL:: var_is_introduced ;
var bool: aux10199_BOOL:: var_is_introduced ;
var {0,1}: aux10199_INTEGER :: var_is_introduced ;
var 3..45: aux10200:: var_is_introduced ;
var bool: aux10201_BOOL:: var_is_introduced ;
var bool: aux10202_BOOL:: var_is_introduced ;
var bool: aux10203_BOOL:: var_is_introduced ;
var bool: aux10204_BOOL:: var_is_introduced ;
var bool: aux10205_BOOL:: var_is_introduced ;
var {0,1}: aux10205_INTEGER :: var_is_introduced ;
var 3..45: aux10206:: var_is_introduced ;
var bool: aux10207_BOOL:: var_is_introduced ;
var bool: aux10208_BOOL:: var_is_introduced ;
var bool: aux10209_BOOL:: var_is_introduced ;
var bool: aux10210_BOOL:: var_is_introduced ;
var bool: aux10211_BOOL:: var_is_introduced ;
var {0,1}: aux10211_INTEGER :: var_is_introduced ;
var 4..46: aux10212:: var_is_introduced ;
var bool: aux10213_BOOL:: var_is_introduced ;
var bool: aux10214_BOOL:: var_is_introduced ;
var bool: aux10215_BOOL:: var_is_introduced ;
var bool: aux10216_BOOL:: var_is_introduced ;
var bool: aux10217_BOOL:: var_is_introduced ;
var {0,1}: aux10217_INTEGER :: var_is_introduced ;
var 2..44: aux10218:: var_is_introduced ;
var bool: aux10219_BOOL:: var_is_introduced ;
var bool: aux10220_BOOL:: var_is_introduced ;
var bool: aux10221_BOOL:: var_is_introduced ;
var {0,1}: aux10221_INTEGER :: var_is_introduced ;
var bool: aux10222_BOOL:: var_is_introduced ;
var 1..43: aux10223:: var_is_introduced ;
var bool: aux10224_BOOL:: var_is_introduced ;
var bool: aux10225_BOOL:: var_is_introduced ;
var bool: aux10226_BOOL:: var_is_introduced ;
var bool: aux10227_BOOL:: var_is_introduced ;
var bool: aux10228_BOOL:: var_is_introduced ;
var {0,1}: aux10228_INTEGER :: var_is_introduced ;
var 1..43: aux10229:: var_is_introduced ;
var bool: aux10230_BOOL:: var_is_introduced ;
var bool: aux10231_BOOL:: var_is_introduced ;
var bool: aux10232_BOOL:: var_is_introduced ;
var bool: aux10233_BOOL:: var_is_introduced ;
var bool: aux10234_BOOL:: var_is_introduced ;
var {0,1}: aux10234_INTEGER :: var_is_introduced ;
var 2..44: aux10235:: var_is_introduced ;
var bool: aux10236_BOOL:: var_is_introduced ;
var bool: aux10237_BOOL:: var_is_introduced ;
var bool: aux10238_BOOL:: var_is_introduced ;
var bool: aux10239_BOOL:: var_is_introduced ;
var bool: aux10240_BOOL:: var_is_introduced ;
var {0,1}: aux10240_INTEGER :: var_is_introduced ;
var 2..44: aux10241:: var_is_introduced ;
var bool: aux10242_BOOL:: var_is_introduced ;
var bool: aux10243_BOOL:: var_is_introduced ;
var bool: aux10244_BOOL:: var_is_introduced ;
var bool: aux10245_BOOL:: var_is_introduced ;
var bool: aux10246_BOOL:: var_is_introduced ;
var {0,1}: aux10246_INTEGER :: var_is_introduced ;
var 2..44: aux10247:: var_is_introduced ;
var bool: aux10248_BOOL:: var_is_introduced ;
var bool: aux10249_BOOL:: var_is_introduced ;
var bool: aux10250_BOOL:: var_is_introduced ;
var bool: aux10251_BOOL:: var_is_introduced ;
var bool: aux10252_BOOL:: var_is_introduced ;
var {0,1}: aux10252_INTEGER :: var_is_introduced ;
var 2..44: aux10253:: var_is_introduced ;
var bool: aux10254_BOOL:: var_is_introduced ;
var bool: aux10255_BOOL:: var_is_introduced ;
var bool: aux10256_BOOL:: var_is_introduced ;
var bool: aux10257_BOOL:: var_is_introduced ;
var bool: aux10258_BOOL:: var_is_introduced ;
var {0,1}: aux10258_INTEGER :: var_is_introduced ;
var 2..44: aux10259:: var_is_introduced ;
var bool: aux10260_BOOL:: var_is_introduced ;
var bool: aux10261_BOOL:: var_is_introduced ;
var bool: aux10262_BOOL:: var_is_introduced ;
var bool: aux10263_BOOL:: var_is_introduced ;
var bool: aux10264_BOOL:: var_is_introduced ;
var {0,1}: aux10264_INTEGER :: var_is_introduced ;
var 1..43: aux10265:: var_is_introduced ;
var bool: aux10266_BOOL:: var_is_introduced ;
var bool: aux10267_BOOL:: var_is_introduced ;
var bool: aux10268_BOOL:: var_is_introduced ;
var bool: aux10269_BOOL:: var_is_introduced ;
var bool: aux10270_BOOL:: var_is_introduced ;
var {0,1}: aux10270_INTEGER :: var_is_introduced ;
var 1..43: aux10271:: var_is_introduced ;
var bool: aux10272_BOOL:: var_is_introduced ;
var bool: aux10273_BOOL:: var_is_introduced ;
var bool: aux10274_BOOL:: var_is_introduced ;
var bool: aux10275_BOOL:: var_is_introduced ;
var bool: aux10276_BOOL:: var_is_introduced ;
var {0,1}: aux10276_INTEGER :: var_is_introduced ;
var 3..45: aux10277:: var_is_introduced ;
var bool: aux10278_BOOL:: var_is_introduced ;
var bool: aux10279_BOOL:: var_is_introduced ;
var bool: aux10280_BOOL:: var_is_introduced ;
var bool: aux10281_BOOL:: var_is_introduced ;
var bool: aux10282_BOOL:: var_is_introduced ;
var {0,1}: aux10282_INTEGER :: var_is_introduced ;
var 1..43: aux10283:: var_is_introduced ;
var bool: aux10284_BOOL:: var_is_introduced ;
var bool: aux10285_BOOL:: var_is_introduced ;
var bool: aux10286_BOOL:: var_is_introduced ;
var bool: aux10287_BOOL:: var_is_introduced ;
var bool: aux10288_BOOL:: var_is_introduced ;
var {0,1}: aux10288_INTEGER :: var_is_introduced ;
var 3..45: aux10289:: var_is_introduced ;
var bool: aux10290_BOOL:: var_is_introduced ;
var bool: aux10291_BOOL:: var_is_introduced ;
var bool: aux10292_BOOL:: var_is_introduced ;
var bool: aux10293_BOOL:: var_is_introduced ;
var bool: aux10294_BOOL:: var_is_introduced ;
var {0,1}: aux10294_INTEGER :: var_is_introduced ;
var 2..44: aux10295:: var_is_introduced ;
var bool: aux10296_BOOL:: var_is_introduced ;
var bool: aux10297_BOOL:: var_is_introduced ;
var bool: aux10298_BOOL:: var_is_introduced ;
var bool: aux10299_BOOL:: var_is_introduced ;
var bool: aux10300_BOOL:: var_is_introduced ;
var {0,1}: aux10300_INTEGER :: var_is_introduced ;
var 2..44: aux10301:: var_is_introduced ;
var bool: aux10302_BOOL:: var_is_introduced ;
var bool: aux10303_BOOL:: var_is_introduced ;
var bool: aux10304_BOOL:: var_is_introduced ;
var bool: aux10305_BOOL:: var_is_introduced ;
var bool: aux10306_BOOL:: var_is_introduced ;
var {0,1}: aux10306_INTEGER :: var_is_introduced ;
var 2..44: aux10307:: var_is_introduced ;
var bool: aux10308_BOOL:: var_is_introduced ;
var bool: aux10309_BOOL:: var_is_introduced ;
var bool: aux10310_BOOL:: var_is_introduced ;
var bool: aux10311_BOOL:: var_is_introduced ;
var bool: aux10312_BOOL:: var_is_introduced ;
var {0,1}: aux10312_INTEGER :: var_is_introduced ;
var 3..45: aux10313:: var_is_introduced ;
var bool: aux10314_BOOL:: var_is_introduced ;
var bool: aux10315_BOOL:: var_is_introduced ;
var bool: aux10316_BOOL:: var_is_introduced ;
var bool: aux10317_BOOL:: var_is_introduced ;
var bool: aux10318_BOOL:: var_is_introduced ;
var {0,1}: aux10318_INTEGER :: var_is_introduced ;
var 3..45: aux10319:: var_is_introduced ;
var bool: aux10320_BOOL:: var_is_introduced ;
var bool: aux10321_BOOL:: var_is_introduced ;
var bool: aux10322_BOOL:: var_is_introduced ;
var bool: aux10323_BOOL:: var_is_introduced ;
var bool: aux10324_BOOL:: var_is_introduced ;
var {0,1}: aux10324_INTEGER :: var_is_introduced ;
var 3..45: aux10325:: var_is_introduced ;
var bool: aux10326_BOOL:: var_is_introduced ;
var bool: aux10327_BOOL:: var_is_introduced ;
var bool: aux10328_BOOL:: var_is_introduced ;
var bool: aux10329_BOOL:: var_is_introduced ;
var bool: aux10330_BOOL:: var_is_introduced ;
var {0,1}: aux10330_INTEGER :: var_is_introduced ;
var 4..46: aux10331:: var_is_introduced ;
var bool: aux10332_BOOL:: var_is_introduced ;
var bool: aux10333_BOOL:: var_is_introduced ;
var bool: aux10334_BOOL:: var_is_introduced ;
var bool: aux10335_BOOL:: var_is_introduced ;
var bool: aux10336_BOOL:: var_is_introduced ;
var {0,1}: aux10336_INTEGER :: var_is_introduced ;
var 2..44: aux10337:: var_is_introduced ;
var bool: aux10338_BOOL:: var_is_introduced ;
var bool: aux10339_BOOL:: var_is_introduced ;
var bool: aux10340_BOOL:: var_is_introduced ;
var {0,1}: aux10340_INTEGER :: var_is_introduced ;
var bool: aux10341_BOOL:: var_is_introduced ;
var 1..43: aux10342:: var_is_introduced ;
var bool: aux10343_BOOL:: var_is_introduced ;
var bool: aux10344_BOOL:: var_is_introduced ;
var bool: aux10345_BOOL:: var_is_introduced ;
var bool: aux10346_BOOL:: var_is_introduced ;
var bool: aux10347_BOOL:: var_is_introduced ;
var {0,1}: aux10347_INTEGER :: var_is_introduced ;
var 1..43: aux10348:: var_is_introduced ;
var bool: aux10349_BOOL:: var_is_introduced ;
var bool: aux10350_BOOL:: var_is_introduced ;
var bool: aux10351_BOOL:: var_is_introduced ;
var bool: aux10352_BOOL:: var_is_introduced ;
var bool: aux10353_BOOL:: var_is_introduced ;
var {0,1}: aux10353_INTEGER :: var_is_introduced ;
var 2..44: aux10354:: var_is_introduced ;
var bool: aux10355_BOOL:: var_is_introduced ;
var bool: aux10356_BOOL:: var_is_introduced ;
var bool: aux10357_BOOL:: var_is_introduced ;
var bool: aux10358_BOOL:: var_is_introduced ;
var bool: aux10359_BOOL:: var_is_introduced ;
var {0,1}: aux10359_INTEGER :: var_is_introduced ;
var 1..43: aux10360:: var_is_introduced ;
var bool: aux10361_BOOL:: var_is_introduced ;
var bool: aux10362_BOOL:: var_is_introduced ;
var bool: aux10363_BOOL:: var_is_introduced ;
var bool: aux10364_BOOL:: var_is_introduced ;
var bool: aux10365_BOOL:: var_is_introduced ;
var {0,1}: aux10365_INTEGER :: var_is_introduced ;
var 2..44: aux10366:: var_is_introduced ;
var bool: aux10367_BOOL:: var_is_introduced ;
var bool: aux10368_BOOL:: var_is_introduced ;
var bool: aux10369_BOOL:: var_is_introduced ;
var bool: aux10370_BOOL:: var_is_introduced ;
var bool: aux10371_BOOL:: var_is_introduced ;
var {0,1}: aux10371_INTEGER :: var_is_introduced ;
var 1..43: aux10372:: var_is_introduced ;
var bool: aux10373_BOOL:: var_is_introduced ;
var bool: aux10374_BOOL:: var_is_introduced ;
var bool: aux10375_BOOL:: var_is_introduced ;
var bool: aux10376_BOOL:: var_is_introduced ;
var bool: aux10377_BOOL:: var_is_introduced ;
var {0,1}: aux10377_INTEGER :: var_is_introduced ;
var 2..44: aux10378:: var_is_introduced ;
var bool: aux10379_BOOL:: var_is_introduced ;
var bool: aux10380_BOOL:: var_is_introduced ;
var bool: aux10381_BOOL:: var_is_introduced ;
var bool: aux10382_BOOL:: var_is_introduced ;
var bool: aux10383_BOOL:: var_is_introduced ;
var {0,1}: aux10383_INTEGER :: var_is_introduced ;
var 1..43: aux10384:: var_is_introduced ;
var bool: aux10385_BOOL:: var_is_introduced ;
var bool: aux10386_BOOL:: var_is_introduced ;
var bool: aux10387_BOOL:: var_is_introduced ;
var bool: aux10388_BOOL:: var_is_introduced ;
var bool: aux10389_BOOL:: var_is_introduced ;
var {0,1}: aux10389_INTEGER :: var_is_introduced ;
var 2..44: aux10390:: var_is_introduced ;
var bool: aux10391_BOOL:: var_is_introduced ;
var bool: aux10392_BOOL:: var_is_introduced ;
var bool: aux10393_BOOL:: var_is_introduced ;
var bool: aux10394_BOOL:: var_is_introduced ;
var bool: aux10395_BOOL:: var_is_introduced ;
var {0,1}: aux10395_INTEGER :: var_is_introduced ;
var 3..45: aux10396:: var_is_introduced ;
var bool: aux10397_BOOL:: var_is_introduced ;
var bool: aux10398_BOOL:: var_is_introduced ;
var bool: aux10399_BOOL:: var_is_introduced ;
var bool: aux10400_BOOL:: var_is_introduced ;
var bool: aux10401_BOOL:: var_is_introduced ;
var {0,1}: aux10401_INTEGER :: var_is_introduced ;
var 2..44: aux10402:: var_is_introduced ;
var bool: aux10403_BOOL:: var_is_introduced ;
var bool: aux10404_BOOL:: var_is_introduced ;
var bool: aux10405_BOOL:: var_is_introduced ;
var bool: aux10406_BOOL:: var_is_introduced ;
var bool: aux10407_BOOL:: var_is_introduced ;
var {0,1}: aux10407_INTEGER :: var_is_introduced ;
var 2..44: aux10408:: var_is_introduced ;
var bool: aux10409_BOOL:: var_is_introduced ;
var bool: aux10410_BOOL:: var_is_introduced ;
var bool: aux10411_BOOL:: var_is_introduced ;
var bool: aux10412_BOOL:: var_is_introduced ;
var bool: aux10413_BOOL:: var_is_introduced ;
var {0,1}: aux10413_INTEGER :: var_is_introduced ;
var 2..44: aux10414:: var_is_introduced ;
var bool: aux10415_BOOL:: var_is_introduced ;
var bool: aux10416_BOOL:: var_is_introduced ;
var bool: aux10417_BOOL:: var_is_introduced ;
var bool: aux10418_BOOL:: var_is_introduced ;
var bool: aux10419_BOOL:: var_is_introduced ;
var {0,1}: aux10419_INTEGER :: var_is_introduced ;
var 3..45: aux10420:: var_is_introduced ;
var bool: aux10421_BOOL:: var_is_introduced ;
var bool: aux10422_BOOL:: var_is_introduced ;
var bool: aux10423_BOOL:: var_is_introduced ;
var bool: aux10424_BOOL:: var_is_introduced ;
var bool: aux10425_BOOL:: var_is_introduced ;
var {0,1}: aux10425_INTEGER :: var_is_introduced ;
var 2..44: aux10426:: var_is_introduced ;
var bool: aux10427_BOOL:: var_is_introduced ;
var bool: aux10428_BOOL:: var_is_introduced ;
var bool: aux10429_BOOL:: var_is_introduced ;
var bool: aux10430_BOOL:: var_is_introduced ;
var bool: aux10431_BOOL:: var_is_introduced ;
var {0,1}: aux10431_INTEGER :: var_is_introduced ;
var 3..45: aux10432:: var_is_introduced ;
var bool: aux10433_BOOL:: var_is_introduced ;
var bool: aux10434_BOOL:: var_is_introduced ;
var bool: aux10435_BOOL:: var_is_introduced ;
var bool: aux10436_BOOL:: var_is_introduced ;
var bool: aux10437_BOOL:: var_is_introduced ;
var {0,1}: aux10437_INTEGER :: var_is_introduced ;
var 3..45: aux10438:: var_is_introduced ;
var bool: aux10439_BOOL:: var_is_introduced ;
var bool: aux10440_BOOL:: var_is_introduced ;
var bool: aux10441_BOOL:: var_is_introduced ;
var bool: aux10442_BOOL:: var_is_introduced ;
var bool: aux10443_BOOL:: var_is_introduced ;
var {0,1}: aux10443_INTEGER :: var_is_introduced ;
var 3..45: aux10444:: var_is_introduced ;
var bool: aux10445_BOOL:: var_is_introduced ;
var bool: aux10446_BOOL:: var_is_introduced ;
var bool: aux10447_BOOL:: var_is_introduced ;
var bool: aux10448_BOOL:: var_is_introduced ;
var bool: aux10449_BOOL:: var_is_introduced ;
var {0,1}: aux10449_INTEGER :: var_is_introduced ;
var 4..46: aux10450:: var_is_introduced ;
var bool: aux10451_BOOL:: var_is_introduced ;
var bool: aux10452_BOOL:: var_is_introduced ;
var bool: aux10453_BOOL:: var_is_introduced ;
var bool: aux10454_BOOL:: var_is_introduced ;
var bool: aux10455_BOOL:: var_is_introduced ;
var {0,1}: aux10455_INTEGER :: var_is_introduced ;
var 2..44: aux10456:: var_is_introduced ;
var bool: aux10457_BOOL:: var_is_introduced ;
var bool: aux10458_BOOL:: var_is_introduced ;
var bool: aux10459_BOOL:: var_is_introduced ;
var {0,1}: aux10459_INTEGER :: var_is_introduced ;
var bool: aux10460_BOOL:: var_is_introduced ;
var 1..43: aux10461:: var_is_introduced ;
var bool: aux10462_BOOL:: var_is_introduced ;
var bool: aux10463_BOOL:: var_is_introduced ;
var bool: aux10464_BOOL:: var_is_introduced ;
var bool: aux10465_BOOL:: var_is_introduced ;
var bool: aux10466_BOOL:: var_is_introduced ;
var {0,1}: aux10466_INTEGER :: var_is_introduced ;
var 1..43: aux10467:: var_is_introduced ;
var bool: aux10468_BOOL:: var_is_introduced ;
var bool: aux10469_BOOL:: var_is_introduced ;
var bool: aux10470_BOOL:: var_is_introduced ;
var bool: aux10471_BOOL:: var_is_introduced ;
var bool: aux10472_BOOL:: var_is_introduced ;
var {0,1}: aux10472_INTEGER :: var_is_introduced ;
var 2..44: aux10473:: var_is_introduced ;
var bool: aux10474_BOOL:: var_is_introduced ;
var bool: aux10475_BOOL:: var_is_introduced ;
var bool: aux10476_BOOL:: var_is_introduced ;
var bool: aux10477_BOOL:: var_is_introduced ;
var bool: aux10478_BOOL:: var_is_introduced ;
var {0,1}: aux10478_INTEGER :: var_is_introduced ;
var 2..44: aux10479:: var_is_introduced ;
var bool: aux10480_BOOL:: var_is_introduced ;
var bool: aux10481_BOOL:: var_is_introduced ;
var bool: aux10482_BOOL:: var_is_introduced ;
var bool: aux10483_BOOL:: var_is_introduced ;
var bool: aux10484_BOOL:: var_is_introduced ;
var {0,1}: aux10484_INTEGER :: var_is_introduced ;
var 2..44: aux10485:: var_is_introduced ;
var bool: aux10486_BOOL:: var_is_introduced ;
var bool: aux10487_BOOL:: var_is_introduced ;
var bool: aux10488_BOOL:: var_is_introduced ;
var bool: aux10489_BOOL:: var_is_introduced ;
var bool: aux10490_BOOL:: var_is_introduced ;
var {0,1}: aux10490_INTEGER :: var_is_introduced ;
var 2..44: aux10491:: var_is_introduced ;
var bool: aux10492_BOOL:: var_is_introduced ;
var bool: aux10493_BOOL:: var_is_introduced ;
var bool: aux10494_BOOL:: var_is_introduced ;
var bool: aux10495_BOOL:: var_is_introduced ;
var bool: aux10496_BOOL:: var_is_introduced ;
var {0,1}: aux10496_INTEGER :: var_is_introduced ;
var 2..44: aux10497:: var_is_introduced ;
var bool: aux10498_BOOL:: var_is_introduced ;
var bool: aux10499_BOOL:: var_is_introduced ;
var bool: aux10500_BOOL:: var_is_introduced ;
var bool: aux10501_BOOL:: var_is_introduced ;
var bool: aux10502_BOOL:: var_is_introduced ;
var {0,1}: aux10502_INTEGER :: var_is_introduced ;
var 1..43: aux10503:: var_is_introduced ;
var bool: aux10504_BOOL:: var_is_introduced ;
var bool: aux10505_BOOL:: var_is_introduced ;
var bool: aux10506_BOOL:: var_is_introduced ;
var bool: aux10507_BOOL:: var_is_introduced ;
var bool: aux10508_BOOL:: var_is_introduced ;
var {0,1}: aux10508_INTEGER :: var_is_introduced ;
var 3..45: aux10509:: var_is_introduced ;
var bool: aux10510_BOOL:: var_is_introduced ;
var bool: aux10511_BOOL:: var_is_introduced ;
var bool: aux10512_BOOL:: var_is_introduced ;
var bool: aux10513_BOOL:: var_is_introduced ;
var bool: aux10514_BOOL:: var_is_introduced ;
var {0,1}: aux10514_INTEGER :: var_is_introduced ;
var 1..43: aux10515:: var_is_introduced ;
var bool: aux10516_BOOL:: var_is_introduced ;
var bool: aux10517_BOOL:: var_is_introduced ;
var bool: aux10518_BOOL:: var_is_introduced ;
var bool: aux10519_BOOL:: var_is_introduced ;
var bool: aux10520_BOOL:: var_is_introduced ;
var {0,1}: aux10520_INTEGER :: var_is_introduced ;
var 3..45: aux10521:: var_is_introduced ;
var bool: aux10522_BOOL:: var_is_introduced ;
var bool: aux10523_BOOL:: var_is_introduced ;
var bool: aux10524_BOOL:: var_is_introduced ;
var bool: aux10525_BOOL:: var_is_introduced ;
var bool: aux10526_BOOL:: var_is_introduced ;
var {0,1}: aux10526_INTEGER :: var_is_introduced ;
var 2..44: aux10527:: var_is_introduced ;
var bool: aux10528_BOOL:: var_is_introduced ;
var bool: aux10529_BOOL:: var_is_introduced ;
var bool: aux10530_BOOL:: var_is_introduced ;
var bool: aux10531_BOOL:: var_is_introduced ;
var bool: aux10532_BOOL:: var_is_introduced ;
var {0,1}: aux10532_INTEGER :: var_is_introduced ;
var 2..44: aux10533:: var_is_introduced ;
var bool: aux10534_BOOL:: var_is_introduced ;
var bool: aux10535_BOOL:: var_is_introduced ;
var bool: aux10536_BOOL:: var_is_introduced ;
var bool: aux10537_BOOL:: var_is_introduced ;
var bool: aux10538_BOOL:: var_is_introduced ;
var {0,1}: aux10538_INTEGER :: var_is_introduced ;
var 2..44: aux10539:: var_is_introduced ;
var bool: aux10540_BOOL:: var_is_introduced ;
var bool: aux10541_BOOL:: var_is_introduced ;
var bool: aux10542_BOOL:: var_is_introduced ;
var bool: aux10543_BOOL:: var_is_introduced ;
var bool: aux10544_BOOL:: var_is_introduced ;
var {0,1}: aux10544_INTEGER :: var_is_introduced ;
var 2..44: aux10545:: var_is_introduced ;
var bool: aux10546_BOOL:: var_is_introduced ;
var bool: aux10547_BOOL:: var_is_introduced ;
var bool: aux10548_BOOL:: var_is_introduced ;
var bool: aux10549_BOOL:: var_is_introduced ;
var bool: aux10550_BOOL:: var_is_introduced ;
var {0,1}: aux10550_INTEGER :: var_is_introduced ;
var 3..45: aux10551:: var_is_introduced ;
var bool: aux10552_BOOL:: var_is_introduced ;
var bool: aux10553_BOOL:: var_is_introduced ;
var bool: aux10554_BOOL:: var_is_introduced ;
var bool: aux10555_BOOL:: var_is_introduced ;
var bool: aux10556_BOOL:: var_is_introduced ;
var {0,1}: aux10556_INTEGER :: var_is_introduced ;
var 3..45: aux10557:: var_is_introduced ;
var bool: aux10558_BOOL:: var_is_introduced ;
var bool: aux10559_BOOL:: var_is_introduced ;
var bool: aux10560_BOOL:: var_is_introduced ;
var bool: aux10561_BOOL:: var_is_introduced ;
var bool: aux10562_BOOL:: var_is_introduced ;
var {0,1}: aux10562_INTEGER :: var_is_introduced ;
var 3..45: aux10563:: var_is_introduced ;
var bool: aux10564_BOOL:: var_is_introduced ;
var bool: aux10565_BOOL:: var_is_introduced ;
var bool: aux10566_BOOL:: var_is_introduced ;
var bool: aux10567_BOOL:: var_is_introduced ;
var bool: aux10568_BOOL:: var_is_introduced ;
var {0,1}: aux10568_INTEGER :: var_is_introduced ;
var 4..46: aux10569:: var_is_introduced ;
var bool: aux10570_BOOL:: var_is_introduced ;
var bool: aux10571_BOOL:: var_is_introduced ;
var bool: aux10572_BOOL:: var_is_introduced ;
var bool: aux10573_BOOL:: var_is_introduced ;
var bool: aux10574_BOOL:: var_is_introduced ;
var {0,1}: aux10574_INTEGER :: var_is_introduced ;
var 1..43: aux10575:: var_is_introduced ;
var bool: aux10576_BOOL:: var_is_introduced ;
var bool: aux10577_BOOL:: var_is_introduced ;
var bool: aux10578_BOOL:: var_is_introduced ;
var {0,1}: aux10578_INTEGER :: var_is_introduced ;
var bool: aux10579_BOOL:: var_is_introduced ;
var 1..43: aux10580:: var_is_introduced ;
var bool: aux10581_BOOL:: var_is_introduced ;
var bool: aux10582_BOOL:: var_is_introduced ;
var bool: aux10583_BOOL:: var_is_introduced ;
var bool: aux10584_BOOL:: var_is_introduced ;
var bool: aux10585_BOOL:: var_is_introduced ;
var {0,1}: aux10585_INTEGER :: var_is_introduced ;
var 1..43: aux10586:: var_is_introduced ;
var bool: aux10587_BOOL:: var_is_introduced ;
var bool: aux10588_BOOL:: var_is_introduced ;
var bool: aux10589_BOOL:: var_is_introduced ;
var bool: aux10590_BOOL:: var_is_introduced ;
var bool: aux10591_BOOL:: var_is_introduced ;
var {0,1}: aux10591_INTEGER :: var_is_introduced ;
var 2..44: aux10592:: var_is_introduced ;
var bool: aux10593_BOOL:: var_is_introduced ;
var bool: aux10594_BOOL:: var_is_introduced ;
var bool: aux10595_BOOL:: var_is_introduced ;
var bool: aux10596_BOOL:: var_is_introduced ;
var bool: aux10597_BOOL:: var_is_introduced ;
var {0,1}: aux10597_INTEGER :: var_is_introduced ;
var 2..44: aux10598:: var_is_introduced ;
var bool: aux10599_BOOL:: var_is_introduced ;
var bool: aux10600_BOOL:: var_is_introduced ;
var bool: aux10601_BOOL:: var_is_introduced ;
var bool: aux10602_BOOL:: var_is_introduced ;
var bool: aux10603_BOOL:: var_is_introduced ;
var {0,1}: aux10603_INTEGER :: var_is_introduced ;
var 2..44: aux10604:: var_is_introduced ;
var bool: aux10605_BOOL:: var_is_introduced ;
var bool: aux10606_BOOL:: var_is_introduced ;
var bool: aux10607_BOOL:: var_is_introduced ;
var bool: aux10608_BOOL:: var_is_introduced ;
var bool: aux10609_BOOL:: var_is_introduced ;
var {0,1}: aux10609_INTEGER :: var_is_introduced ;
var 2..44: aux10610:: var_is_introduced ;
var bool: aux10611_BOOL:: var_is_introduced ;
var bool: aux10612_BOOL:: var_is_introduced ;
var bool: aux10613_BOOL:: var_is_introduced ;
var bool: aux10614_BOOL:: var_is_introduced ;
var bool: aux10615_BOOL:: var_is_introduced ;
var {0,1}: aux10615_INTEGER :: var_is_introduced ;
var 2..44: aux10616:: var_is_introduced ;
var bool: aux10617_BOOL:: var_is_introduced ;
var bool: aux10618_BOOL:: var_is_introduced ;
var bool: aux10619_BOOL:: var_is_introduced ;
var bool: aux10620_BOOL:: var_is_introduced ;
var bool: aux10621_BOOL:: var_is_introduced ;
var {0,1}: aux10621_INTEGER :: var_is_introduced ;
var 1..43: aux10622:: var_is_introduced ;
var bool: aux10623_BOOL:: var_is_introduced ;
var bool: aux10624_BOOL:: var_is_introduced ;
var bool: aux10625_BOOL:: var_is_introduced ;
var bool: aux10626_BOOL:: var_is_introduced ;
var bool: aux10627_BOOL:: var_is_introduced ;
var {0,1}: aux10627_INTEGER :: var_is_introduced ;
var 1..43: aux10628:: var_is_introduced ;
var bool: aux10629_BOOL:: var_is_introduced ;
var bool: aux10630_BOOL:: var_is_introduced ;
var bool: aux10631_BOOL:: var_is_introduced ;
var bool: aux10632_BOOL:: var_is_introduced ;
var bool: aux10633_BOOL:: var_is_introduced ;
var {0,1}: aux10633_INTEGER :: var_is_introduced ;
var 3..45: aux10634:: var_is_introduced ;
var bool: aux10635_BOOL:: var_is_introduced ;
var bool: aux10636_BOOL:: var_is_introduced ;
var bool: aux10637_BOOL:: var_is_introduced ;
var bool: aux10638_BOOL:: var_is_introduced ;
var bool: aux10639_BOOL:: var_is_introduced ;
var {0,1}: aux10639_INTEGER :: var_is_introduced ;
var 1..43: aux10640:: var_is_introduced ;
var bool: aux10641_BOOL:: var_is_introduced ;
var bool: aux10642_BOOL:: var_is_introduced ;
var bool: aux10643_BOOL:: var_is_introduced ;
var bool: aux10644_BOOL:: var_is_introduced ;
var bool: aux10645_BOOL:: var_is_introduced ;
var {0,1}: aux10645_INTEGER :: var_is_introduced ;
var 3..45: aux10646:: var_is_introduced ;
var bool: aux10647_BOOL:: var_is_introduced ;
var bool: aux10648_BOOL:: var_is_introduced ;
var bool: aux10649_BOOL:: var_is_introduced ;
var bool: aux10650_BOOL:: var_is_introduced ;
var bool: aux10651_BOOL:: var_is_introduced ;
var {0,1}: aux10651_INTEGER :: var_is_introduced ;
var 2..44: aux10652:: var_is_introduced ;
var bool: aux10653_BOOL:: var_is_introduced ;
var bool: aux10654_BOOL:: var_is_introduced ;
var bool: aux10655_BOOL:: var_is_introduced ;
var bool: aux10656_BOOL:: var_is_introduced ;
var bool: aux10657_BOOL:: var_is_introduced ;
var {0,1}: aux10657_INTEGER :: var_is_introduced ;
var 2..44: aux10658:: var_is_introduced ;
var bool: aux10659_BOOL:: var_is_introduced ;
var bool: aux10660_BOOL:: var_is_introduced ;
var bool: aux10661_BOOL:: var_is_introduced ;
var bool: aux10662_BOOL:: var_is_introduced ;
var bool: aux10663_BOOL:: var_is_introduced ;
var {0,1}: aux10663_INTEGER :: var_is_introduced ;
var 2..44: aux10664:: var_is_introduced ;
var bool: aux10665_BOOL:: var_is_introduced ;
var bool: aux10666_BOOL:: var_is_introduced ;
var bool: aux10667_BOOL:: var_is_introduced ;
var bool: aux10668_BOOL:: var_is_introduced ;
var bool: aux10669_BOOL:: var_is_introduced ;
var {0,1}: aux10669_INTEGER :: var_is_introduced ;
var 3..45: aux10670:: var_is_introduced ;
var bool: aux10671_BOOL:: var_is_introduced ;
var bool: aux10672_BOOL:: var_is_introduced ;
var bool: aux10673_BOOL:: var_is_introduced ;
var bool: aux10674_BOOL:: var_is_introduced ;
var bool: aux10675_BOOL:: var_is_introduced ;
var {0,1}: aux10675_INTEGER :: var_is_introduced ;
var 3..45: aux10676:: var_is_introduced ;
var bool: aux10677_BOOL:: var_is_introduced ;
var bool: aux10678_BOOL:: var_is_introduced ;
var bool: aux10679_BOOL:: var_is_introduced ;
var bool: aux10680_BOOL:: var_is_introduced ;
var bool: aux10681_BOOL:: var_is_introduced ;
var {0,1}: aux10681_INTEGER :: var_is_introduced ;
var 3..45: aux10682:: var_is_introduced ;
var bool: aux10683_BOOL:: var_is_introduced ;
var bool: aux10684_BOOL:: var_is_introduced ;
var bool: aux10685_BOOL:: var_is_introduced ;
var bool: aux10686_BOOL:: var_is_introduced ;
var bool: aux10687_BOOL:: var_is_introduced ;
var {0,1}: aux10687_INTEGER :: var_is_introduced ;
var 4..46: aux10688:: var_is_introduced ;
var bool: aux10689_BOOL:: var_is_introduced ;
var bool: aux10690_BOOL:: var_is_introduced ;
var bool: aux10691_BOOL:: var_is_introduced ;
var bool: aux10692_BOOL:: var_is_introduced ;
var bool: aux10693_BOOL:: var_is_introduced ;
var {0,1}: aux10693_INTEGER :: var_is_introduced ;
var 2..44: aux10694:: var_is_introduced ;
var bool: aux10695_BOOL:: var_is_introduced ;
var bool: aux10696_BOOL:: var_is_introduced ;
var bool: aux10697_BOOL:: var_is_introduced ;
var {0,1}: aux10697_INTEGER :: var_is_introduced ;
var bool: aux10698_BOOL:: var_is_introduced ;
var 1..43: aux10699:: var_is_introduced ;
var bool: aux10700_BOOL:: var_is_introduced ;
var bool: aux10701_BOOL:: var_is_introduced ;
var bool: aux10702_BOOL:: var_is_introduced ;
var bool: aux10703_BOOL:: var_is_introduced ;
var bool: aux10704_BOOL:: var_is_introduced ;
var {0,1}: aux10704_INTEGER :: var_is_introduced ;
var 1..43: aux10705:: var_is_introduced ;
var bool: aux10706_BOOL:: var_is_introduced ;
var bool: aux10707_BOOL:: var_is_introduced ;
var bool: aux10708_BOOL:: var_is_introduced ;
var bool: aux10709_BOOL:: var_is_introduced ;
var bool: aux10710_BOOL:: var_is_introduced ;
var {0,1}: aux10710_INTEGER :: var_is_introduced ;
var 2..44: aux10711:: var_is_introduced ;
var bool: aux10712_BOOL:: var_is_introduced ;
var bool: aux10713_BOOL:: var_is_introduced ;
var bool: aux10714_BOOL:: var_is_introduced ;
var bool: aux10715_BOOL:: var_is_introduced ;
var bool: aux10716_BOOL:: var_is_introduced ;
var {0,1}: aux10716_INTEGER :: var_is_introduced ;
var 2..44: aux10717:: var_is_introduced ;
var bool: aux10718_BOOL:: var_is_introduced ;
var bool: aux10719_BOOL:: var_is_introduced ;
var bool: aux10720_BOOL:: var_is_introduced ;
var bool: aux10721_BOOL:: var_is_introduced ;
var bool: aux10722_BOOL:: var_is_introduced ;
var {0,1}: aux10722_INTEGER :: var_is_introduced ;
var 2..44: aux10723:: var_is_introduced ;
var bool: aux10724_BOOL:: var_is_introduced ;
var bool: aux10725_BOOL:: var_is_introduced ;
var bool: aux10726_BOOL:: var_is_introduced ;
var bool: aux10727_BOOL:: var_is_introduced ;
var bool: aux10728_BOOL:: var_is_introduced ;
var {0,1}: aux10728_INTEGER :: var_is_introduced ;
var 2..44: aux10729:: var_is_introduced ;
var bool: aux10730_BOOL:: var_is_introduced ;
var bool: aux10731_BOOL:: var_is_introduced ;
var bool: aux10732_BOOL:: var_is_introduced ;
var bool: aux10733_BOOL:: var_is_introduced ;
var bool: aux10734_BOOL:: var_is_introduced ;
var {0,1}: aux10734_INTEGER :: var_is_introduced ;
var 2..44: aux10735:: var_is_introduced ;
var bool: aux10736_BOOL:: var_is_introduced ;
var bool: aux10737_BOOL:: var_is_introduced ;
var bool: aux10738_BOOL:: var_is_introduced ;
var bool: aux10739_BOOL:: var_is_introduced ;
var bool: aux10740_BOOL:: var_is_introduced ;
var {0,1}: aux10740_INTEGER :: var_is_introduced ;
var 1..43: aux10741:: var_is_introduced ;
var bool: aux10742_BOOL:: var_is_introduced ;
var bool: aux10743_BOOL:: var_is_introduced ;
var bool: aux10744_BOOL:: var_is_introduced ;
var bool: aux10745_BOOL:: var_is_introduced ;
var bool: aux10746_BOOL:: var_is_introduced ;
var {0,1}: aux10746_INTEGER :: var_is_introduced ;
var 3..45: aux10747:: var_is_introduced ;
var bool: aux10748_BOOL:: var_is_introduced ;
var bool: aux10749_BOOL:: var_is_introduced ;
var bool: aux10750_BOOL:: var_is_introduced ;
var bool: aux10751_BOOL:: var_is_introduced ;
var bool: aux10752_BOOL:: var_is_introduced ;
var {0,1}: aux10752_INTEGER :: var_is_introduced ;
var 1..43: aux10753:: var_is_introduced ;
var bool: aux10754_BOOL:: var_is_introduced ;
var bool: aux10755_BOOL:: var_is_introduced ;
var bool: aux10756_BOOL:: var_is_introduced ;
var bool: aux10757_BOOL:: var_is_introduced ;
var bool: aux10758_BOOL:: var_is_introduced ;
var {0,1}: aux10758_INTEGER :: var_is_introduced ;
var 3..45: aux10759:: var_is_introduced ;
var bool: aux10760_BOOL:: var_is_introduced ;
var bool: aux10761_BOOL:: var_is_introduced ;
var bool: aux10762_BOOL:: var_is_introduced ;
var bool: aux10763_BOOL:: var_is_introduced ;
var bool: aux10764_BOOL:: var_is_introduced ;
var {0,1}: aux10764_INTEGER :: var_is_introduced ;
var 1..43: aux10765:: var_is_introduced ;
var bool: aux10766_BOOL:: var_is_introduced ;
var bool: aux10767_BOOL:: var_is_introduced ;
var bool: aux10768_BOOL:: var_is_introduced ;
var bool: aux10769_BOOL:: var_is_introduced ;
var bool: aux10770_BOOL:: var_is_introduced ;
var {0,1}: aux10770_INTEGER :: var_is_introduced ;
var 2..44: aux10771:: var_is_introduced ;
var bool: aux10772_BOOL:: var_is_introduced ;
var bool: aux10773_BOOL:: var_is_introduced ;
var bool: aux10774_BOOL:: var_is_introduced ;
var bool: aux10775_BOOL:: var_is_introduced ;
var bool: aux10776_BOOL:: var_is_introduced ;
var {0,1}: aux10776_INTEGER :: var_is_introduced ;
var 2..44: aux10777:: var_is_introduced ;
var bool: aux10778_BOOL:: var_is_introduced ;
var bool: aux10779_BOOL:: var_is_introduced ;
var bool: aux10780_BOOL:: var_is_introduced ;
var bool: aux10781_BOOL:: var_is_introduced ;
var bool: aux10782_BOOL:: var_is_introduced ;
var {0,1}: aux10782_INTEGER :: var_is_introduced ;
var 2..44: aux10783:: var_is_introduced ;
var bool: aux10784_BOOL:: var_is_introduced ;
var bool: aux10785_BOOL:: var_is_introduced ;
var bool: aux10786_BOOL:: var_is_introduced ;
var bool: aux10787_BOOL:: var_is_introduced ;
var bool: aux10788_BOOL:: var_is_introduced ;
var {0,1}: aux10788_INTEGER :: var_is_introduced ;
var 3..45: aux10789:: var_is_introduced ;
var bool: aux10790_BOOL:: var_is_introduced ;
var bool: aux10791_BOOL:: var_is_introduced ;
var bool: aux10792_BOOL:: var_is_introduced ;
var bool: aux10793_BOOL:: var_is_introduced ;
var bool: aux10794_BOOL:: var_is_introduced ;
var {0,1}: aux10794_INTEGER :: var_is_introduced ;
var 3..45: aux10795:: var_is_introduced ;
var bool: aux10796_BOOL:: var_is_introduced ;
var bool: aux10797_BOOL:: var_is_introduced ;
var bool: aux10798_BOOL:: var_is_introduced ;
var bool: aux10799_BOOL:: var_is_introduced ;
var bool: aux10800_BOOL:: var_is_introduced ;
var {0,1}: aux10800_INTEGER :: var_is_introduced ;
var 3..45: aux10801:: var_is_introduced ;
var bool: aux10802_BOOL:: var_is_introduced ;
var bool: aux10803_BOOL:: var_is_introduced ;
var bool: aux10804_BOOL:: var_is_introduced ;
var bool: aux10805_BOOL:: var_is_introduced ;
var bool: aux10806_BOOL:: var_is_introduced ;
var {0,1}: aux10806_INTEGER :: var_is_introduced ;
var 4..46: aux10807:: var_is_introduced ;
var bool: aux10808_BOOL:: var_is_introduced ;
var bool: aux10809_BOOL:: var_is_introduced ;
var bool: aux10810_BOOL:: var_is_introduced ;
var bool: aux10811_BOOL:: var_is_introduced ;
var bool: aux10812_BOOL:: var_is_introduced ;
var {0,1}: aux10812_INTEGER :: var_is_introduced ;
var 2..44: aux10813:: var_is_introduced ;
var bool: aux10814_BOOL:: var_is_introduced ;
var bool: aux10815_BOOL:: var_is_introduced ;
var bool: aux10816_BOOL:: var_is_introduced ;
var {0,1}: aux10816_INTEGER :: var_is_introduced ;
var bool: aux10817_BOOL:: var_is_introduced ;
var 1..43: aux10818:: var_is_introduced ;
var bool: aux10819_BOOL:: var_is_introduced ;
var bool: aux10820_BOOL:: var_is_introduced ;
var bool: aux10821_BOOL:: var_is_introduced ;
var bool: aux10822_BOOL:: var_is_introduced ;
var bool: aux10823_BOOL:: var_is_introduced ;
var {0,1}: aux10823_INTEGER :: var_is_introduced ;
var 1..43: aux10824:: var_is_introduced ;
var bool: aux10825_BOOL:: var_is_introduced ;
var bool: aux10826_BOOL:: var_is_introduced ;
var bool: aux10827_BOOL:: var_is_introduced ;
var bool: aux10828_BOOL:: var_is_introduced ;
var bool: aux10829_BOOL:: var_is_introduced ;
var {0,1}: aux10829_INTEGER :: var_is_introduced ;
var 2..44: aux10830:: var_is_introduced ;
var bool: aux10831_BOOL:: var_is_introduced ;
var bool: aux10832_BOOL:: var_is_introduced ;
var bool: aux10833_BOOL:: var_is_introduced ;
var bool: aux10834_BOOL:: var_is_introduced ;
var bool: aux10835_BOOL:: var_is_introduced ;
var {0,1}: aux10835_INTEGER :: var_is_introduced ;
var 2..44: aux10836:: var_is_introduced ;
var bool: aux10837_BOOL:: var_is_introduced ;
var bool: aux10838_BOOL:: var_is_introduced ;
var bool: aux10839_BOOL:: var_is_introduced ;
var bool: aux10840_BOOL:: var_is_introduced ;
var bool: aux10841_BOOL:: var_is_introduced ;
var {0,1}: aux10841_INTEGER :: var_is_introduced ;
var 2..44: aux10842:: var_is_introduced ;
var bool: aux10843_BOOL:: var_is_introduced ;
var bool: aux10844_BOOL:: var_is_introduced ;
var bool: aux10845_BOOL:: var_is_introduced ;
var bool: aux10846_BOOL:: var_is_introduced ;
var bool: aux10847_BOOL:: var_is_introduced ;
var {0,1}: aux10847_INTEGER :: var_is_introduced ;
var 2..44: aux10848:: var_is_introduced ;
var bool: aux10849_BOOL:: var_is_introduced ;
var bool: aux10850_BOOL:: var_is_introduced ;
var bool: aux10851_BOOL:: var_is_introduced ;
var bool: aux10852_BOOL:: var_is_introduced ;
var bool: aux10853_BOOL:: var_is_introduced ;
var {0,1}: aux10853_INTEGER :: var_is_introduced ;
var 2..44: aux10854:: var_is_introduced ;
var bool: aux10855_BOOL:: var_is_introduced ;
var bool: aux10856_BOOL:: var_is_introduced ;
var bool: aux10857_BOOL:: var_is_introduced ;
var bool: aux10858_BOOL:: var_is_introduced ;
var bool: aux10859_BOOL:: var_is_introduced ;
var {0,1}: aux10859_INTEGER :: var_is_introduced ;
var 1..43: aux10860:: var_is_introduced ;
var bool: aux10861_BOOL:: var_is_introduced ;
var bool: aux10862_BOOL:: var_is_introduced ;
var bool: aux10863_BOOL:: var_is_introduced ;
var bool: aux10864_BOOL:: var_is_introduced ;
var bool: aux10865_BOOL:: var_is_introduced ;
var {0,1}: aux10865_INTEGER :: var_is_introduced ;
var 3..45: aux10866:: var_is_introduced ;
var bool: aux10867_BOOL:: var_is_introduced ;
var bool: aux10868_BOOL:: var_is_introduced ;
var bool: aux10869_BOOL:: var_is_introduced ;
var bool: aux10870_BOOL:: var_is_introduced ;
var bool: aux10871_BOOL:: var_is_introduced ;
var {0,1}: aux10871_INTEGER :: var_is_introduced ;
var 1..43: aux10872:: var_is_introduced ;
var bool: aux10873_BOOL:: var_is_introduced ;
var bool: aux10874_BOOL:: var_is_introduced ;
var bool: aux10875_BOOL:: var_is_introduced ;
var bool: aux10876_BOOL:: var_is_introduced ;
var bool: aux10877_BOOL:: var_is_introduced ;
var {0,1}: aux10877_INTEGER :: var_is_introduced ;
var 1..43: aux10878:: var_is_introduced ;
var bool: aux10879_BOOL:: var_is_introduced ;
var bool: aux10880_BOOL:: var_is_introduced ;
var bool: aux10881_BOOL:: var_is_introduced ;
var bool: aux10882_BOOL:: var_is_introduced ;
var bool: aux10883_BOOL:: var_is_introduced ;
var {0,1}: aux10883_INTEGER :: var_is_introduced ;
var 3..45: aux10884:: var_is_introduced ;
var bool: aux10885_BOOL:: var_is_introduced ;
var bool: aux10886_BOOL:: var_is_introduced ;
var bool: aux10887_BOOL:: var_is_introduced ;
var bool: aux10888_BOOL:: var_is_introduced ;
var bool: aux10889_BOOL:: var_is_introduced ;
var {0,1}: aux10889_INTEGER :: var_is_introduced ;
var 2..44: aux10890:: var_is_introduced ;
var bool: aux10891_BOOL:: var_is_introduced ;
var bool: aux10892_BOOL:: var_is_introduced ;
var bool: aux10893_BOOL:: var_is_introduced ;
var bool: aux10894_BOOL:: var_is_introduced ;
var bool: aux10895_BOOL:: var_is_introduced ;
var {0,1}: aux10895_INTEGER :: var_is_introduced ;
var 2..44: aux10896:: var_is_introduced ;
var bool: aux10897_BOOL:: var_is_introduced ;
var bool: aux10898_BOOL:: var_is_introduced ;
var bool: aux10899_BOOL:: var_is_introduced ;
var bool: aux10900_BOOL:: var_is_introduced ;
var bool: aux10901_BOOL:: var_is_introduced ;
var {0,1}: aux10901_INTEGER :: var_is_introduced ;
var 2..44: aux10902:: var_is_introduced ;
var bool: aux10903_BOOL:: var_is_introduced ;
var bool: aux10904_BOOL:: var_is_introduced ;
var bool: aux10905_BOOL:: var_is_introduced ;
var bool: aux10906_BOOL:: var_is_introduced ;
var bool: aux10907_BOOL:: var_is_introduced ;
var {0,1}: aux10907_INTEGER :: var_is_introduced ;
var 2..44: aux10908:: var_is_introduced ;
var bool: aux10909_BOOL:: var_is_introduced ;
var bool: aux10910_BOOL:: var_is_introduced ;
var bool: aux10911_BOOL:: var_is_introduced ;
var bool: aux10912_BOOL:: var_is_introduced ;
var bool: aux10913_BOOL:: var_is_introduced ;
var {0,1}: aux10913_INTEGER :: var_is_introduced ;
var 3..45: aux10914:: var_is_introduced ;
var bool: aux10915_BOOL:: var_is_introduced ;
var bool: aux10916_BOOL:: var_is_introduced ;
var bool: aux10917_BOOL:: var_is_introduced ;
var bool: aux10918_BOOL:: var_is_introduced ;
var bool: aux10919_BOOL:: var_is_introduced ;
var {0,1}: aux10919_INTEGER :: var_is_introduced ;
var 3..45: aux10920:: var_is_introduced ;
var bool: aux10921_BOOL:: var_is_introduced ;
var bool: aux10922_BOOL:: var_is_introduced ;
var bool: aux10923_BOOL:: var_is_introduced ;
var bool: aux10924_BOOL:: var_is_introduced ;
var bool: aux10925_BOOL:: var_is_introduced ;
var {0,1}: aux10925_INTEGER :: var_is_introduced ;
var 3..45: aux10926:: var_is_introduced ;
var bool: aux10927_BOOL:: var_is_introduced ;
var bool: aux10928_BOOL:: var_is_introduced ;
var bool: aux10929_BOOL:: var_is_introduced ;
var bool: aux10930_BOOL:: var_is_introduced ;
var bool: aux10931_BOOL:: var_is_introduced ;
var {0,1}: aux10931_INTEGER :: var_is_introduced ;
var 4..46: aux10932:: var_is_introduced ;
var bool: aux10933_BOOL:: var_is_introduced ;
var bool: aux10934_BOOL:: var_is_introduced ;
var bool: aux10935_BOOL:: var_is_introduced ;
var {0,1}: aux10935_INTEGER :: var_is_introduced ;
var bool: aux10936_BOOL:: var_is_introduced ;
var 1..43: aux10937:: var_is_introduced ;
var bool: aux10938_BOOL:: var_is_introduced ;
var bool: aux10939_BOOL:: var_is_introduced ;
var bool: aux10940_BOOL:: var_is_introduced ;
var bool: aux10941_BOOL:: var_is_introduced ;
var bool: aux10942_BOOL:: var_is_introduced ;
var {0,1}: aux10942_INTEGER :: var_is_introduced ;
var 1..43: aux10943:: var_is_introduced ;
var bool: aux10944_BOOL:: var_is_introduced ;
var bool: aux10945_BOOL:: var_is_introduced ;
var bool: aux10946_BOOL:: var_is_introduced ;
var bool: aux10947_BOOL:: var_is_introduced ;
var bool: aux10948_BOOL:: var_is_introduced ;
var {0,1}: aux10948_INTEGER :: var_is_introduced ;
var 2..44: aux10949:: var_is_introduced ;
var bool: aux10950_BOOL:: var_is_introduced ;
var bool: aux10951_BOOL:: var_is_introduced ;
var bool: aux10952_BOOL:: var_is_introduced ;
var bool: aux10953_BOOL:: var_is_introduced ;
var bool: aux10954_BOOL:: var_is_introduced ;
var {0,1}: aux10954_INTEGER :: var_is_introduced ;
var 2..44: aux10955:: var_is_introduced ;
var bool: aux10956_BOOL:: var_is_introduced ;
var bool: aux10957_BOOL:: var_is_introduced ;
var bool: aux10958_BOOL:: var_is_introduced ;
var bool: aux10959_BOOL:: var_is_introduced ;
var bool: aux10960_BOOL:: var_is_introduced ;
var {0,1}: aux10960_INTEGER :: var_is_introduced ;
var 2..44: aux10961:: var_is_introduced ;
var bool: aux10962_BOOL:: var_is_introduced ;
var bool: aux10963_BOOL:: var_is_introduced ;
var bool: aux10964_BOOL:: var_is_introduced ;
var bool: aux10965_BOOL:: var_is_introduced ;
var bool: aux10966_BOOL:: var_is_introduced ;
var {0,1}: aux10966_INTEGER :: var_is_introduced ;
var 2..44: aux10967:: var_is_introduced ;
var bool: aux10968_BOOL:: var_is_introduced ;
var bool: aux10969_BOOL:: var_is_introduced ;
var bool: aux10970_BOOL:: var_is_introduced ;
var bool: aux10971_BOOL:: var_is_introduced ;
var bool: aux10972_BOOL:: var_is_introduced ;
var {0,1}: aux10972_INTEGER :: var_is_introduced ;
var 2..44: aux10973:: var_is_introduced ;
var bool: aux10974_BOOL:: var_is_introduced ;
var bool: aux10975_BOOL:: var_is_introduced ;
var bool: aux10976_BOOL:: var_is_introduced ;
var bool: aux10977_BOOL:: var_is_introduced ;
var bool: aux10978_BOOL:: var_is_introduced ;
var {0,1}: aux10978_INTEGER :: var_is_introduced ;
var 1..43: aux10979:: var_is_introduced ;
var bool: aux10980_BOOL:: var_is_introduced ;
var bool: aux10981_BOOL:: var_is_introduced ;
var bool: aux10982_BOOL:: var_is_introduced ;
var bool: aux10983_BOOL:: var_is_introduced ;
var bool: aux10984_BOOL:: var_is_introduced ;
var {0,1}: aux10984_INTEGER :: var_is_introduced ;
var 3..45: aux10985:: var_is_introduced ;
var bool: aux10986_BOOL:: var_is_introduced ;
var bool: aux10987_BOOL:: var_is_introduced ;
var bool: aux10988_BOOL:: var_is_introduced ;
var bool: aux10989_BOOL:: var_is_introduced ;
var bool: aux10990_BOOL:: var_is_introduced ;
var {0,1}: aux10990_INTEGER :: var_is_introduced ;
var 1..43: aux10991:: var_is_introduced ;
var bool: aux10992_BOOL:: var_is_introduced ;
var bool: aux10993_BOOL:: var_is_introduced ;
var bool: aux10994_BOOL:: var_is_introduced ;
var bool: aux10995_BOOL:: var_is_introduced ;
var bool: aux10996_BOOL:: var_is_introduced ;
var {0,1}: aux10996_INTEGER :: var_is_introduced ;
var 3..45: aux10997:: var_is_introduced ;
var bool: aux10998_BOOL:: var_is_introduced ;
var bool: aux10999_BOOL:: var_is_introduced ;
var bool: aux11000_BOOL:: var_is_introduced ;
var bool: aux11001_BOOL:: var_is_introduced ;
var bool: aux11002_BOOL:: var_is_introduced ;
var {0,1}: aux11002_INTEGER :: var_is_introduced ;
var 1..43: aux11003:: var_is_introduced ;
var bool: aux11004_BOOL:: var_is_introduced ;
var bool: aux11005_BOOL:: var_is_introduced ;
var bool: aux11006_BOOL:: var_is_introduced ;
var bool: aux11007_BOOL:: var_is_introduced ;
var bool: aux11008_BOOL:: var_is_introduced ;
var {0,1}: aux11008_INTEGER :: var_is_introduced ;
var 2..44: aux11009:: var_is_introduced ;
var bool: aux11010_BOOL:: var_is_introduced ;
var bool: aux11011_BOOL:: var_is_introduced ;
var bool: aux11012_BOOL:: var_is_introduced ;
var bool: aux11013_BOOL:: var_is_introduced ;
var bool: aux11014_BOOL:: var_is_introduced ;
var {0,1}: aux11014_INTEGER :: var_is_introduced ;
var 2..44: aux11015:: var_is_introduced ;
var bool: aux11016_BOOL:: var_is_introduced ;
var bool: aux11017_BOOL:: var_is_introduced ;
var bool: aux11018_BOOL:: var_is_introduced ;
var bool: aux11019_BOOL:: var_is_introduced ;
var bool: aux11020_BOOL:: var_is_introduced ;
var {0,1}: aux11020_INTEGER :: var_is_introduced ;
var 2..44: aux11021:: var_is_introduced ;
var bool: aux11022_BOOL:: var_is_introduced ;
var bool: aux11023_BOOL:: var_is_introduced ;
var bool: aux11024_BOOL:: var_is_introduced ;
var bool: aux11025_BOOL:: var_is_introduced ;
var bool: aux11026_BOOL:: var_is_introduced ;
var {0,1}: aux11026_INTEGER :: var_is_introduced ;
var 3..45: aux11027:: var_is_introduced ;
var bool: aux11028_BOOL:: var_is_introduced ;
var bool: aux11029_BOOL:: var_is_introduced ;
var bool: aux11030_BOOL:: var_is_introduced ;
var bool: aux11031_BOOL:: var_is_introduced ;
var bool: aux11032_BOOL:: var_is_introduced ;
var {0,1}: aux11032_INTEGER :: var_is_introduced ;
var 3..45: aux11033:: var_is_introduced ;
var bool: aux11034_BOOL:: var_is_introduced ;
var bool: aux11035_BOOL:: var_is_introduced ;
var bool: aux11036_BOOL:: var_is_introduced ;
var bool: aux11037_BOOL:: var_is_introduced ;
var bool: aux11038_BOOL:: var_is_introduced ;
var {0,1}: aux11038_INTEGER :: var_is_introduced ;
var 4..46: aux11039:: var_is_introduced ;
var bool: aux11040_BOOL:: var_is_introduced ;
var bool: aux11041_BOOL:: var_is_introduced ;
var bool: aux11042_BOOL:: var_is_introduced ;
var bool: aux11043_BOOL:: var_is_introduced ;
var bool: aux11044_BOOL:: var_is_introduced ;
var {0,1}: aux11044_INTEGER :: var_is_introduced ;
var 3..45: aux11045:: var_is_introduced ;
var bool: aux11046_BOOL:: var_is_introduced ;
var bool: aux11047_BOOL:: var_is_introduced ;
var bool: aux11048_BOOL:: var_is_introduced ;
var bool: aux11049_BOOL:: var_is_introduced ;
var bool: aux11050_BOOL:: var_is_introduced ;
var {0,1}: aux11050_INTEGER :: var_is_introduced ;
var 2..44: aux11051:: var_is_introduced ;
var bool: aux11052_BOOL:: var_is_introduced ;
var bool: aux11053_BOOL:: var_is_introduced ;
var bool: aux11054_BOOL:: var_is_introduced ;
var {0,1}: aux11054_INTEGER :: var_is_introduced ;
var bool: aux11055_BOOL:: var_is_introduced ;
var 1..43: aux11056:: var_is_introduced ;
var bool: aux11057_BOOL:: var_is_introduced ;
var bool: aux11058_BOOL:: var_is_introduced ;
var bool: aux11059_BOOL:: var_is_introduced ;
var bool: aux11060_BOOL:: var_is_introduced ;
var bool: aux11061_BOOL:: var_is_introduced ;
var {0,1}: aux11061_INTEGER :: var_is_introduced ;
var 1..43: aux11062:: var_is_introduced ;
var bool: aux11063_BOOL:: var_is_introduced ;
var bool: aux11064_BOOL:: var_is_introduced ;
var bool: aux11065_BOOL:: var_is_introduced ;
var bool: aux11066_BOOL:: var_is_introduced ;
var bool: aux11067_BOOL:: var_is_introduced ;
var {0,1}: aux11067_INTEGER :: var_is_introduced ;
var 2..44: aux11068:: var_is_introduced ;
var bool: aux11069_BOOL:: var_is_introduced ;
var bool: aux11070_BOOL:: var_is_introduced ;
var bool: aux11071_BOOL:: var_is_introduced ;
var bool: aux11072_BOOL:: var_is_introduced ;
var bool: aux11073_BOOL:: var_is_introduced ;
var {0,1}: aux11073_INTEGER :: var_is_introduced ;
var 1..43: aux11074:: var_is_introduced ;
var bool: aux11075_BOOL:: var_is_introduced ;
var bool: aux11076_BOOL:: var_is_introduced ;
var bool: aux11077_BOOL:: var_is_introduced ;
var bool: aux11078_BOOL:: var_is_introduced ;
var bool: aux11079_BOOL:: var_is_introduced ;
var {0,1}: aux11079_INTEGER :: var_is_introduced ;
var 2..44: aux11080:: var_is_introduced ;
var bool: aux11081_BOOL:: var_is_introduced ;
var bool: aux11082_BOOL:: var_is_introduced ;
var bool: aux11083_BOOL:: var_is_introduced ;
var bool: aux11084_BOOL:: var_is_introduced ;
var bool: aux11085_BOOL:: var_is_introduced ;
var {0,1}: aux11085_INTEGER :: var_is_introduced ;
var 2..44: aux11086:: var_is_introduced ;
var bool: aux11087_BOOL:: var_is_introduced ;
var bool: aux11088_BOOL:: var_is_introduced ;
var bool: aux11089_BOOL:: var_is_introduced ;
var bool: aux11090_BOOL:: var_is_introduced ;
var bool: aux11091_BOOL:: var_is_introduced ;
var {0,1}: aux11091_INTEGER :: var_is_introduced ;
var 2..44: aux11092:: var_is_introduced ;
var bool: aux11093_BOOL:: var_is_introduced ;
var bool: aux11094_BOOL:: var_is_introduced ;
var bool: aux11095_BOOL:: var_is_introduced ;
var bool: aux11096_BOOL:: var_is_introduced ;
var bool: aux11097_BOOL:: var_is_introduced ;
var {0,1}: aux11097_INTEGER :: var_is_introduced ;
var 1..43: aux11098:: var_is_introduced ;
var bool: aux11099_BOOL:: var_is_introduced ;
var bool: aux11100_BOOL:: var_is_introduced ;
var bool: aux11101_BOOL:: var_is_introduced ;
var bool: aux11102_BOOL:: var_is_introduced ;
var bool: aux11103_BOOL:: var_is_introduced ;
var {0,1}: aux11103_INTEGER :: var_is_introduced ;
var 2..44: aux11104:: var_is_introduced ;
var bool: aux11105_BOOL:: var_is_introduced ;
var bool: aux11106_BOOL:: var_is_introduced ;
var bool: aux11107_BOOL:: var_is_introduced ;
var bool: aux11108_BOOL:: var_is_introduced ;
var bool: aux11109_BOOL:: var_is_introduced ;
var {0,1}: aux11109_INTEGER :: var_is_introduced ;
var 2..44: aux11110:: var_is_introduced ;
var bool: aux11111_BOOL:: var_is_introduced ;
var bool: aux11112_BOOL:: var_is_introduced ;
var bool: aux11113_BOOL:: var_is_introduced ;
var bool: aux11114_BOOL:: var_is_introduced ;
var bool: aux11115_BOOL:: var_is_introduced ;
var {0,1}: aux11115_INTEGER :: var_is_introduced ;
var 2..44: aux11116:: var_is_introduced ;
var bool: aux11117_BOOL:: var_is_introduced ;
var bool: aux11118_BOOL:: var_is_introduced ;
var bool: aux11119_BOOL:: var_is_introduced ;
var bool: aux11120_BOOL:: var_is_introduced ;
var bool: aux11121_BOOL:: var_is_introduced ;
var {0,1}: aux11121_INTEGER :: var_is_introduced ;
var 3..45: aux11122:: var_is_introduced ;
var bool: aux11123_BOOL:: var_is_introduced ;
var bool: aux11124_BOOL:: var_is_introduced ;
var bool: aux11125_BOOL:: var_is_introduced ;
var bool: aux11126_BOOL:: var_is_introduced ;
var bool: aux11127_BOOL:: var_is_introduced ;
var {0,1}: aux11127_INTEGER :: var_is_introduced ;
var 2..44: aux11128:: var_is_introduced ;
var bool: aux11129_BOOL:: var_is_introduced ;
var bool: aux11130_BOOL:: var_is_introduced ;
var bool: aux11131_BOOL:: var_is_introduced ;
var bool: aux11132_BOOL:: var_is_introduced ;
var bool: aux11133_BOOL:: var_is_introduced ;
var {0,1}: aux11133_INTEGER :: var_is_introduced ;
var 3..45: aux11134:: var_is_introduced ;
var bool: aux11135_BOOL:: var_is_introduced ;
var bool: aux11136_BOOL:: var_is_introduced ;
var bool: aux11137_BOOL:: var_is_introduced ;
var bool: aux11138_BOOL:: var_is_introduced ;
var bool: aux11139_BOOL:: var_is_introduced ;
var {0,1}: aux11139_INTEGER :: var_is_introduced ;
var 2..44: aux11140:: var_is_introduced ;
var bool: aux11141_BOOL:: var_is_introduced ;
var bool: aux11142_BOOL:: var_is_introduced ;
var bool: aux11143_BOOL:: var_is_introduced ;
var bool: aux11144_BOOL:: var_is_introduced ;
var bool: aux11145_BOOL:: var_is_introduced ;
var {0,1}: aux11145_INTEGER :: var_is_introduced ;
var 3..45: aux11146:: var_is_introduced ;
var bool: aux11147_BOOL:: var_is_introduced ;
var bool: aux11148_BOOL:: var_is_introduced ;
var bool: aux11149_BOOL:: var_is_introduced ;
var bool: aux11150_BOOL:: var_is_introduced ;
var bool: aux11151_BOOL:: var_is_introduced ;
var {0,1}: aux11151_INTEGER :: var_is_introduced ;
var 3..45: aux11152:: var_is_introduced ;
var bool: aux11153_BOOL:: var_is_introduced ;
var bool: aux11154_BOOL:: var_is_introduced ;
var bool: aux11155_BOOL:: var_is_introduced ;
var bool: aux11156_BOOL:: var_is_introduced ;
var bool: aux11157_BOOL:: var_is_introduced ;
var {0,1}: aux11157_INTEGER :: var_is_introduced ;
var 3..45: aux11158:: var_is_introduced ;
var bool: aux11159_BOOL:: var_is_introduced ;
var bool: aux11160_BOOL:: var_is_introduced ;
var bool: aux11161_BOOL:: var_is_introduced ;
var bool: aux11162_BOOL:: var_is_introduced ;
var bool: aux11163_BOOL:: var_is_introduced ;
var {0,1}: aux11163_INTEGER :: var_is_introduced ;
var 4..46: aux11164:: var_is_introduced ;
var bool: aux11165_BOOL:: var_is_introduced ;
var bool: aux11166_BOOL:: var_is_introduced ;
var bool: aux11167_BOOL:: var_is_introduced ;
var bool: aux11168_BOOL:: var_is_introduced ;
var bool: aux11169_BOOL:: var_is_introduced ;
var {0,1}: aux11169_INTEGER :: var_is_introduced ;
var 1..43: aux11170:: var_is_introduced ;
var bool: aux11171_BOOL:: var_is_introduced ;
var bool: aux11172_BOOL:: var_is_introduced ;
var bool: aux11173_BOOL:: var_is_introduced ;
var {0,1}: aux11173_INTEGER :: var_is_introduced ;
var bool: aux11174_BOOL:: var_is_introduced ;
var 1..43: aux11175:: var_is_introduced ;
var bool: aux11176_BOOL:: var_is_introduced ;
var bool: aux11177_BOOL:: var_is_introduced ;
var bool: aux11178_BOOL:: var_is_introduced ;
var bool: aux11179_BOOL:: var_is_introduced ;
var bool: aux11180_BOOL:: var_is_introduced ;
var {0,1}: aux11180_INTEGER :: var_is_introduced ;
var 1..43: aux11181:: var_is_introduced ;
var bool: aux11182_BOOL:: var_is_introduced ;
var bool: aux11183_BOOL:: var_is_introduced ;
var bool: aux11184_BOOL:: var_is_introduced ;
var bool: aux11185_BOOL:: var_is_introduced ;
var bool: aux11186_BOOL:: var_is_introduced ;
var {0,1}: aux11186_INTEGER :: var_is_introduced ;
var 2..44: aux11187:: var_is_introduced ;
var bool: aux11188_BOOL:: var_is_introduced ;
var bool: aux11189_BOOL:: var_is_introduced ;
var bool: aux11190_BOOL:: var_is_introduced ;
var bool: aux11191_BOOL:: var_is_introduced ;
var bool: aux11192_BOOL:: var_is_introduced ;
var {0,1}: aux11192_INTEGER :: var_is_introduced ;
var 2..44: aux11193:: var_is_introduced ;
var bool: aux11194_BOOL:: var_is_introduced ;
var bool: aux11195_BOOL:: var_is_introduced ;
var bool: aux11196_BOOL:: var_is_introduced ;
var bool: aux11197_BOOL:: var_is_introduced ;
var bool: aux11198_BOOL:: var_is_introduced ;
var {0,1}: aux11198_INTEGER :: var_is_introduced ;
var 1..43: aux11199:: var_is_introduced ;
var bool: aux11200_BOOL:: var_is_introduced ;
var bool: aux11201_BOOL:: var_is_introduced ;
var bool: aux11202_BOOL:: var_is_introduced ;
var bool: aux11203_BOOL:: var_is_introduced ;
var bool: aux11204_BOOL:: var_is_introduced ;
var {0,1}: aux11204_INTEGER :: var_is_introduced ;
var 2..44: aux11205:: var_is_introduced ;
var bool: aux11206_BOOL:: var_is_introduced ;
var bool: aux11207_BOOL:: var_is_introduced ;
var bool: aux11208_BOOL:: var_is_introduced ;
var bool: aux11209_BOOL:: var_is_introduced ;
var bool: aux11210_BOOL:: var_is_introduced ;
var {0,1}: aux11210_INTEGER :: var_is_introduced ;
var 1..43: aux11211:: var_is_introduced ;
var bool: aux11212_BOOL:: var_is_introduced ;
var bool: aux11213_BOOL:: var_is_introduced ;
var bool: aux11214_BOOL:: var_is_introduced ;
var bool: aux11215_BOOL:: var_is_introduced ;
var bool: aux11216_BOOL:: var_is_introduced ;
var {0,1}: aux11216_INTEGER :: var_is_introduced ;
var 2..44: aux11217:: var_is_introduced ;
var bool: aux11218_BOOL:: var_is_introduced ;
var bool: aux11219_BOOL:: var_is_introduced ;
var bool: aux11220_BOOL:: var_is_introduced ;
var bool: aux11221_BOOL:: var_is_introduced ;
var bool: aux11222_BOOL:: var_is_introduced ;
var {0,1}: aux11222_INTEGER :: var_is_introduced ;
var 1..43: aux11223:: var_is_introduced ;
var bool: aux11224_BOOL:: var_is_introduced ;
var bool: aux11225_BOOL:: var_is_introduced ;
var bool: aux11226_BOOL:: var_is_introduced ;
var bool: aux11227_BOOL:: var_is_introduced ;
var bool: aux11228_BOOL:: var_is_introduced ;
var {0,1}: aux11228_INTEGER :: var_is_introduced ;
var 3..45: aux11229:: var_is_introduced ;
var bool: aux11230_BOOL:: var_is_introduced ;
var bool: aux11231_BOOL:: var_is_introduced ;
var bool: aux11232_BOOL:: var_is_introduced ;
var bool: aux11233_BOOL:: var_is_introduced ;
var bool: aux11234_BOOL:: var_is_introduced ;
var {0,1}: aux11234_INTEGER :: var_is_introduced ;
var 2..44: aux11235:: var_is_introduced ;
var bool: aux11236_BOOL:: var_is_introduced ;
var bool: aux11237_BOOL:: var_is_introduced ;
var bool: aux11238_BOOL:: var_is_introduced ;
var bool: aux11239_BOOL:: var_is_introduced ;
var bool: aux11240_BOOL:: var_is_introduced ;
var {0,1}: aux11240_INTEGER :: var_is_introduced ;
var 2..44: aux11241:: var_is_introduced ;
var bool: aux11242_BOOL:: var_is_introduced ;
var bool: aux11243_BOOL:: var_is_introduced ;
var bool: aux11244_BOOL:: var_is_introduced ;
var bool: aux11245_BOOL:: var_is_introduced ;
var bool: aux11246_BOOL:: var_is_introduced ;
var {0,1}: aux11246_INTEGER :: var_is_introduced ;
var 3..45: aux11247:: var_is_introduced ;
var bool: aux11248_BOOL:: var_is_introduced ;
var bool: aux11249_BOOL:: var_is_introduced ;
var bool: aux11250_BOOL:: var_is_introduced ;
var bool: aux11251_BOOL:: var_is_introduced ;
var bool: aux11252_BOOL:: var_is_introduced ;
var {0,1}: aux11252_INTEGER :: var_is_introduced ;
var 2..44: aux11253:: var_is_introduced ;
var bool: aux11254_BOOL:: var_is_introduced ;
var bool: aux11255_BOOL:: var_is_introduced ;
var bool: aux11256_BOOL:: var_is_introduced ;
var bool: aux11257_BOOL:: var_is_introduced ;
var bool: aux11258_BOOL:: var_is_introduced ;
var {0,1}: aux11258_INTEGER :: var_is_introduced ;
var 2..44: aux11259:: var_is_introduced ;
var bool: aux11260_BOOL:: var_is_introduced ;
var bool: aux11261_BOOL:: var_is_introduced ;
var bool: aux11262_BOOL:: var_is_introduced ;
var bool: aux11263_BOOL:: var_is_introduced ;
var bool: aux11264_BOOL:: var_is_introduced ;
var {0,1}: aux11264_INTEGER :: var_is_introduced ;
var 3..45: aux11265:: var_is_introduced ;
var bool: aux11266_BOOL:: var_is_introduced ;
var bool: aux11267_BOOL:: var_is_introduced ;
var bool: aux11268_BOOL:: var_is_introduced ;
var bool: aux11269_BOOL:: var_is_introduced ;
var bool: aux11270_BOOL:: var_is_introduced ;
var {0,1}: aux11270_INTEGER :: var_is_introduced ;
var 3..45: aux11271:: var_is_introduced ;
var bool: aux11272_BOOL:: var_is_introduced ;
var bool: aux11273_BOOL:: var_is_introduced ;
var bool: aux11274_BOOL:: var_is_introduced ;
var bool: aux11275_BOOL:: var_is_introduced ;
var bool: aux11276_BOOL:: var_is_introduced ;
var {0,1}: aux11276_INTEGER :: var_is_introduced ;
var 3..45: aux11277:: var_is_introduced ;
var bool: aux11278_BOOL:: var_is_introduced ;
var bool: aux11279_BOOL:: var_is_introduced ;
var bool: aux11280_BOOL:: var_is_introduced ;
var bool: aux11281_BOOL:: var_is_introduced ;
var bool: aux11282_BOOL:: var_is_introduced ;
var {0,1}: aux11282_INTEGER :: var_is_introduced ;
var 4..46: aux11283:: var_is_introduced ;
var bool: aux11284_BOOL:: var_is_introduced ;
var bool: aux11285_BOOL:: var_is_introduced ;
var bool: aux11286_BOOL:: var_is_introduced ;
var bool: aux11287_BOOL:: var_is_introduced ;
var bool: aux11288_BOOL:: var_is_introduced ;
var {0,1}: aux11288_INTEGER :: var_is_introduced ;
var 2..44: aux11289:: var_is_introduced ;
var bool: aux11290_BOOL:: var_is_introduced ;
var bool: aux11291_BOOL:: var_is_introduced ;
var bool: aux11292_BOOL:: var_is_introduced ;
var {0,1}: aux11292_INTEGER :: var_is_introduced ;
var bool: aux11293_BOOL:: var_is_introduced ;
var 1..43: aux11294:: var_is_introduced ;
var bool: aux11295_BOOL:: var_is_introduced ;
var bool: aux11296_BOOL:: var_is_introduced ;
var bool: aux11297_BOOL:: var_is_introduced ;
var bool: aux11298_BOOL:: var_is_introduced ;
var bool: aux11299_BOOL:: var_is_introduced ;
var {0,1}: aux11299_INTEGER :: var_is_introduced ;
var 1..43: aux11300:: var_is_introduced ;
var bool: aux11301_BOOL:: var_is_introduced ;
var bool: aux11302_BOOL:: var_is_introduced ;
var bool: aux11303_BOOL:: var_is_introduced ;
var bool: aux11304_BOOL:: var_is_introduced ;
var bool: aux11305_BOOL:: var_is_introduced ;
var {0,1}: aux11305_INTEGER :: var_is_introduced ;
var 2..44: aux11306:: var_is_introduced ;
var bool: aux11307_BOOL:: var_is_introduced ;
var bool: aux11308_BOOL:: var_is_introduced ;
var bool: aux11309_BOOL:: var_is_introduced ;
var bool: aux11310_BOOL:: var_is_introduced ;
var bool: aux11311_BOOL:: var_is_introduced ;
var {0,1}: aux11311_INTEGER :: var_is_introduced ;
var 2..44: aux11312:: var_is_introduced ;
var bool: aux11313_BOOL:: var_is_introduced ;
var bool: aux11314_BOOL:: var_is_introduced ;
var bool: aux11315_BOOL:: var_is_introduced ;
var bool: aux11316_BOOL:: var_is_introduced ;
var bool: aux11317_BOOL:: var_is_introduced ;
var {0,1}: aux11317_INTEGER :: var_is_introduced ;
var 2..44: aux11318:: var_is_introduced ;
var bool: aux11319_BOOL:: var_is_introduced ;
var bool: aux11320_BOOL:: var_is_introduced ;
var bool: aux11321_BOOL:: var_is_introduced ;
var bool: aux11322_BOOL:: var_is_introduced ;
var bool: aux11323_BOOL:: var_is_introduced ;
var {0,1}: aux11323_INTEGER :: var_is_introduced ;
var 2..44: aux11324:: var_is_introduced ;
var bool: aux11325_BOOL:: var_is_introduced ;
var bool: aux11326_BOOL:: var_is_introduced ;
var bool: aux11327_BOOL:: var_is_introduced ;
var bool: aux11328_BOOL:: var_is_introduced ;
var bool: aux11329_BOOL:: var_is_introduced ;
var {0,1}: aux11329_INTEGER :: var_is_introduced ;
var 2..44: aux11330:: var_is_introduced ;
var bool: aux11331_BOOL:: var_is_introduced ;
var bool: aux11332_BOOL:: var_is_introduced ;
var bool: aux11333_BOOL:: var_is_introduced ;
var bool: aux11334_BOOL:: var_is_introduced ;
var bool: aux11335_BOOL:: var_is_introduced ;
var {0,1}: aux11335_INTEGER :: var_is_introduced ;
var 1..43: aux11336:: var_is_introduced ;
var bool: aux11337_BOOL:: var_is_introduced ;
var bool: aux11338_BOOL:: var_is_introduced ;
var bool: aux11339_BOOL:: var_is_introduced ;
var bool: aux11340_BOOL:: var_is_introduced ;
var bool: aux11341_BOOL:: var_is_introduced ;
var {0,1}: aux11341_INTEGER :: var_is_introduced ;
var 3..45: aux11342:: var_is_introduced ;
var bool: aux11343_BOOL:: var_is_introduced ;
var bool: aux11344_BOOL:: var_is_introduced ;
var bool: aux11345_BOOL:: var_is_introduced ;
var bool: aux11346_BOOL:: var_is_introduced ;
var bool: aux11347_BOOL:: var_is_introduced ;
var {0,1}: aux11347_INTEGER :: var_is_introduced ;
var 1..43: aux11348:: var_is_introduced ;
var bool: aux11349_BOOL:: var_is_introduced ;
var bool: aux11350_BOOL:: var_is_introduced ;
var bool: aux11351_BOOL:: var_is_introduced ;
var bool: aux11352_BOOL:: var_is_introduced ;
var bool: aux11353_BOOL:: var_is_introduced ;
var {0,1}: aux11353_INTEGER :: var_is_introduced ;
var 3..45: aux11354:: var_is_introduced ;
var bool: aux11355_BOOL:: var_is_introduced ;
var bool: aux11356_BOOL:: var_is_introduced ;
var bool: aux11357_BOOL:: var_is_introduced ;
var bool: aux11358_BOOL:: var_is_introduced ;
var bool: aux11359_BOOL:: var_is_introduced ;
var {0,1}: aux11359_INTEGER :: var_is_introduced ;
var 2..44: aux11360:: var_is_introduced ;
var bool: aux11361_BOOL:: var_is_introduced ;
var bool: aux11362_BOOL:: var_is_introduced ;
var bool: aux11363_BOOL:: var_is_introduced ;
var bool: aux11364_BOOL:: var_is_introduced ;
var bool: aux11365_BOOL:: var_is_introduced ;
var {0,1}: aux11365_INTEGER :: var_is_introduced ;
var 2..44: aux11366:: var_is_introduced ;
var bool: aux11367_BOOL:: var_is_introduced ;
var bool: aux11368_BOOL:: var_is_introduced ;
var bool: aux11369_BOOL:: var_is_introduced ;
var bool: aux11370_BOOL:: var_is_introduced ;
var bool: aux11371_BOOL:: var_is_introduced ;
var {0,1}: aux11371_INTEGER :: var_is_introduced ;
var 2..44: aux11372:: var_is_introduced ;
var bool: aux11373_BOOL:: var_is_introduced ;
var bool: aux11374_BOOL:: var_is_introduced ;
var bool: aux11375_BOOL:: var_is_introduced ;
var bool: aux11376_BOOL:: var_is_introduced ;
var bool: aux11377_BOOL:: var_is_introduced ;
var {0,1}: aux11377_INTEGER :: var_is_introduced ;
var 2..44: aux11378:: var_is_introduced ;
var bool: aux11379_BOOL:: var_is_introduced ;
var bool: aux11380_BOOL:: var_is_introduced ;
var bool: aux11381_BOOL:: var_is_introduced ;
var bool: aux11382_BOOL:: var_is_introduced ;
var bool: aux11383_BOOL:: var_is_introduced ;
var {0,1}: aux11383_INTEGER :: var_is_introduced ;
var 3..45: aux11384:: var_is_introduced ;
var bool: aux11385_BOOL:: var_is_introduced ;
var bool: aux11386_BOOL:: var_is_introduced ;
var bool: aux11387_BOOL:: var_is_introduced ;
var bool: aux11388_BOOL:: var_is_introduced ;
var bool: aux11389_BOOL:: var_is_introduced ;
var {0,1}: aux11389_INTEGER :: var_is_introduced ;
var 3..45: aux11390:: var_is_introduced ;
var bool: aux11391_BOOL:: var_is_introduced ;
var bool: aux11392_BOOL:: var_is_introduced ;
var bool: aux11393_BOOL:: var_is_introduced ;
var bool: aux11394_BOOL:: var_is_introduced ;
var bool: aux11395_BOOL:: var_is_introduced ;
var {0,1}: aux11395_INTEGER :: var_is_introduced ;
var 3..45: aux11396:: var_is_introduced ;
var bool: aux11397_BOOL:: var_is_introduced ;
var bool: aux11398_BOOL:: var_is_introduced ;
var bool: aux11399_BOOL:: var_is_introduced ;
var bool: aux11400_BOOL:: var_is_introduced ;
var bool: aux11401_BOOL:: var_is_introduced ;
var {0,1}: aux11401_INTEGER :: var_is_introduced ;
var 4..46: aux11402:: var_is_introduced ;
var bool: aux11403_BOOL:: var_is_introduced ;
var bool: aux11404_BOOL:: var_is_introduced ;
var bool: aux11405_BOOL:: var_is_introduced ;
var bool: aux11406_BOOL:: var_is_introduced ;
var bool: aux11407_BOOL:: var_is_introduced ;
var {0,1}: aux11407_INTEGER :: var_is_introduced ;
var 1..43: aux11408:: var_is_introduced ;
var bool: aux11409_BOOL:: var_is_introduced ;
var bool: aux11410_BOOL:: var_is_introduced ;
var bool: aux11411_BOOL:: var_is_introduced ;
var {0,1}: aux11411_INTEGER :: var_is_introduced ;
var bool: aux11412_BOOL:: var_is_introduced ;
var 1..43: aux11413:: var_is_introduced ;
var bool: aux11414_BOOL:: var_is_introduced ;
var bool: aux11415_BOOL:: var_is_introduced ;
var bool: aux11416_BOOL:: var_is_introduced ;
var bool: aux11417_BOOL:: var_is_introduced ;
var bool: aux11418_BOOL:: var_is_introduced ;
var {0,1}: aux11418_INTEGER :: var_is_introduced ;
var 1..43: aux11419:: var_is_introduced ;
var bool: aux11420_BOOL:: var_is_introduced ;
var bool: aux11421_BOOL:: var_is_introduced ;
var bool: aux11422_BOOL:: var_is_introduced ;
var bool: aux11423_BOOL:: var_is_introduced ;
var bool: aux11424_BOOL:: var_is_introduced ;
var {0,1}: aux11424_INTEGER :: var_is_introduced ;
var 2..44: aux11425:: var_is_introduced ;
var bool: aux11426_BOOL:: var_is_introduced ;
var bool: aux11427_BOOL:: var_is_introduced ;
var bool: aux11428_BOOL:: var_is_introduced ;
var bool: aux11429_BOOL:: var_is_introduced ;
var bool: aux11430_BOOL:: var_is_introduced ;
var {0,1}: aux11430_INTEGER :: var_is_introduced ;
var 2..44: aux11431:: var_is_introduced ;
var bool: aux11432_BOOL:: var_is_introduced ;
var bool: aux11433_BOOL:: var_is_introduced ;
var bool: aux11434_BOOL:: var_is_introduced ;
var bool: aux11435_BOOL:: var_is_introduced ;
var bool: aux11436_BOOL:: var_is_introduced ;
var {0,1}: aux11436_INTEGER :: var_is_introduced ;
var 2..44: aux11437:: var_is_introduced ;
var bool: aux11438_BOOL:: var_is_introduced ;
var bool: aux11439_BOOL:: var_is_introduced ;
var bool: aux11440_BOOL:: var_is_introduced ;
var bool: aux11441_BOOL:: var_is_introduced ;
var bool: aux11442_BOOL:: var_is_introduced ;
var {0,1}: aux11442_INTEGER :: var_is_introduced ;
var 2..44: aux11443:: var_is_introduced ;
var bool: aux11444_BOOL:: var_is_introduced ;
var bool: aux11445_BOOL:: var_is_introduced ;
var bool: aux11446_BOOL:: var_is_introduced ;
var bool: aux11447_BOOL:: var_is_introduced ;
var bool: aux11448_BOOL:: var_is_introduced ;
var {0,1}: aux11448_INTEGER :: var_is_introduced ;
var 2..44: aux11449:: var_is_introduced ;
var bool: aux11450_BOOL:: var_is_introduced ;
var bool: aux11451_BOOL:: var_is_introduced ;
var bool: aux11452_BOOL:: var_is_introduced ;
var bool: aux11453_BOOL:: var_is_introduced ;
var bool: aux11454_BOOL:: var_is_introduced ;
var {0,1}: aux11454_INTEGER :: var_is_introduced ;
var 1..43: aux11455:: var_is_introduced ;
var bool: aux11456_BOOL:: var_is_introduced ;
var bool: aux11457_BOOL:: var_is_introduced ;
var bool: aux11458_BOOL:: var_is_introduced ;
var bool: aux11459_BOOL:: var_is_introduced ;
var bool: aux11460_BOOL:: var_is_introduced ;
var {0,1}: aux11460_INTEGER :: var_is_introduced ;
var 3..45: aux11461:: var_is_introduced ;
var bool: aux11462_BOOL:: var_is_introduced ;
var bool: aux11463_BOOL:: var_is_introduced ;
var bool: aux11464_BOOL:: var_is_introduced ;
var bool: aux11465_BOOL:: var_is_introduced ;
var bool: aux11466_BOOL:: var_is_introduced ;
var {0,1}: aux11466_INTEGER :: var_is_introduced ;
var 1..43: aux11467:: var_is_introduced ;
var bool: aux11468_BOOL:: var_is_introduced ;
var bool: aux11469_BOOL:: var_is_introduced ;
var bool: aux11470_BOOL:: var_is_introduced ;
var bool: aux11471_BOOL:: var_is_introduced ;
var bool: aux11472_BOOL:: var_is_introduced ;
var {0,1}: aux11472_INTEGER :: var_is_introduced ;
var 3..45: aux11473:: var_is_introduced ;
var bool: aux11474_BOOL:: var_is_introduced ;
var bool: aux11475_BOOL:: var_is_introduced ;
var bool: aux11476_BOOL:: var_is_introduced ;
var bool: aux11477_BOOL:: var_is_introduced ;
var bool: aux11478_BOOL:: var_is_introduced ;
var {0,1}: aux11478_INTEGER :: var_is_introduced ;
var 2..44: aux11479:: var_is_introduced ;
var bool: aux11480_BOOL:: var_is_introduced ;
var bool: aux11481_BOOL:: var_is_introduced ;
var bool: aux11482_BOOL:: var_is_introduced ;
var bool: aux11483_BOOL:: var_is_introduced ;
var bool: aux11484_BOOL:: var_is_introduced ;
var {0,1}: aux11484_INTEGER :: var_is_introduced ;
var 2..44: aux11485:: var_is_introduced ;
var bool: aux11486_BOOL:: var_is_introduced ;
var bool: aux11487_BOOL:: var_is_introduced ;
var bool: aux11488_BOOL:: var_is_introduced ;
var bool: aux11489_BOOL:: var_is_introduced ;
var bool: aux11490_BOOL:: var_is_introduced ;
var {0,1}: aux11490_INTEGER :: var_is_introduced ;
var 2..44: aux11491:: var_is_introduced ;
var bool: aux11492_BOOL:: var_is_introduced ;
var bool: aux11493_BOOL:: var_is_introduced ;
var bool: aux11494_BOOL:: var_is_introduced ;
var bool: aux11495_BOOL:: var_is_introduced ;
var bool: aux11496_BOOL:: var_is_introduced ;
var {0,1}: aux11496_INTEGER :: var_is_introduced ;
var 2..44: aux11497:: var_is_introduced ;
var bool: aux11498_BOOL:: var_is_introduced ;
var bool: aux11499_BOOL:: var_is_introduced ;
var bool: aux11500_BOOL:: var_is_introduced ;
var bool: aux11501_BOOL:: var_is_introduced ;
var bool: aux11502_BOOL:: var_is_introduced ;
var {0,1}: aux11502_INTEGER :: var_is_introduced ;
var 3..45: aux11503:: var_is_introduced ;
var bool: aux11504_BOOL:: var_is_introduced ;
var bool: aux11505_BOOL:: var_is_introduced ;
var bool: aux11506_BOOL:: var_is_introduced ;
var bool: aux11507_BOOL:: var_is_introduced ;
var bool: aux11508_BOOL:: var_is_introduced ;
var {0,1}: aux11508_INTEGER :: var_is_introduced ;
var 3..45: aux11509:: var_is_introduced ;
var bool: aux11510_BOOL:: var_is_introduced ;
var bool: aux11511_BOOL:: var_is_introduced ;
var bool: aux11512_BOOL:: var_is_introduced ;
var bool: aux11513_BOOL:: var_is_introduced ;
var bool: aux11514_BOOL:: var_is_introduced ;
var {0,1}: aux11514_INTEGER :: var_is_introduced ;
var 3..45: aux11515:: var_is_introduced ;
var bool: aux11516_BOOL:: var_is_introduced ;
var bool: aux11517_BOOL:: var_is_introduced ;
var bool: aux11518_BOOL:: var_is_introduced ;
var bool: aux11519_BOOL:: var_is_introduced ;
var bool: aux11520_BOOL:: var_is_introduced ;
var {0,1}: aux11520_INTEGER :: var_is_introduced ;
var 4..46: aux11521:: var_is_introduced ;
var bool: aux11522_BOOL:: var_is_introduced ;
var bool: aux11523_BOOL:: var_is_introduced ;
var bool: aux11524_BOOL:: var_is_introduced ;
var bool: aux11525_BOOL:: var_is_introduced ;
var bool: aux11526_BOOL:: var_is_introduced ;
var {0,1}: aux11526_INTEGER :: var_is_introduced ;
var 1..43: aux11527:: var_is_introduced ;
var bool: aux11528_BOOL:: var_is_introduced ;
var bool: aux11529_BOOL:: var_is_introduced ;
var bool: aux11530_BOOL:: var_is_introduced ;
var {0,1}: aux11530_INTEGER :: var_is_introduced ;
var bool: aux11531_BOOL:: var_is_introduced ;
var 1..43: aux11532:: var_is_introduced ;
var bool: aux11533_BOOL:: var_is_introduced ;
var bool: aux11534_BOOL:: var_is_introduced ;
var bool: aux11535_BOOL:: var_is_introduced ;
var bool: aux11536_BOOL:: var_is_introduced ;
var bool: aux11537_BOOL:: var_is_introduced ;
var {0,1}: aux11537_INTEGER :: var_is_introduced ;
var 1..43: aux11538:: var_is_introduced ;
var bool: aux11539_BOOL:: var_is_introduced ;
var bool: aux11540_BOOL:: var_is_introduced ;
var bool: aux11541_BOOL:: var_is_introduced ;
var bool: aux11542_BOOL:: var_is_introduced ;
var bool: aux11543_BOOL:: var_is_introduced ;
var {0,1}: aux11543_INTEGER :: var_is_introduced ;
var 2..44: aux11544:: var_is_introduced ;
var bool: aux11545_BOOL:: var_is_introduced ;
var bool: aux11546_BOOL:: var_is_introduced ;
var bool: aux11547_BOOL:: var_is_introduced ;
var bool: aux11548_BOOL:: var_is_introduced ;
var bool: aux11549_BOOL:: var_is_introduced ;
var {0,1}: aux11549_INTEGER :: var_is_introduced ;
var 2..44: aux11550:: var_is_introduced ;
var bool: aux11551_BOOL:: var_is_introduced ;
var bool: aux11552_BOOL:: var_is_introduced ;
var bool: aux11553_BOOL:: var_is_introduced ;
var bool: aux11554_BOOL:: var_is_introduced ;
var bool: aux11555_BOOL:: var_is_introduced ;
var {0,1}: aux11555_INTEGER :: var_is_introduced ;
var 2..44: aux11556:: var_is_introduced ;
var bool: aux11557_BOOL:: var_is_introduced ;
var bool: aux11558_BOOL:: var_is_introduced ;
var bool: aux11559_BOOL:: var_is_introduced ;
var bool: aux11560_BOOL:: var_is_introduced ;
var bool: aux11561_BOOL:: var_is_introduced ;
var {0,1}: aux11561_INTEGER :: var_is_introduced ;
var 2..44: aux11562:: var_is_introduced ;
var bool: aux11563_BOOL:: var_is_introduced ;
var bool: aux11564_BOOL:: var_is_introduced ;
var bool: aux11565_BOOL:: var_is_introduced ;
var bool: aux11566_BOOL:: var_is_introduced ;
var bool: aux11567_BOOL:: var_is_introduced ;
var {0,1}: aux11567_INTEGER :: var_is_introduced ;
var 2..44: aux11568:: var_is_introduced ;
var bool: aux11569_BOOL:: var_is_introduced ;
var bool: aux11570_BOOL:: var_is_introduced ;
var bool: aux11571_BOOL:: var_is_introduced ;
var bool: aux11572_BOOL:: var_is_introduced ;
var bool: aux11573_BOOL:: var_is_introduced ;
var {0,1}: aux11573_INTEGER :: var_is_introduced ;
var 1..43: aux11574:: var_is_introduced ;
var bool: aux11575_BOOL:: var_is_introduced ;
var bool: aux11576_BOOL:: var_is_introduced ;
var bool: aux11577_BOOL:: var_is_introduced ;
var bool: aux11578_BOOL:: var_is_introduced ;
var bool: aux11579_BOOL:: var_is_introduced ;
var {0,1}: aux11579_INTEGER :: var_is_introduced ;
var 3..45: aux11580:: var_is_introduced ;
var bool: aux11581_BOOL:: var_is_introduced ;
var bool: aux11582_BOOL:: var_is_introduced ;
var bool: aux11583_BOOL:: var_is_introduced ;
var bool: aux11584_BOOL:: var_is_introduced ;
var bool: aux11585_BOOL:: var_is_introduced ;
var {0,1}: aux11585_INTEGER :: var_is_introduced ;
var 1..43: aux11586:: var_is_introduced ;
var bool: aux11587_BOOL:: var_is_introduced ;
var bool: aux11588_BOOL:: var_is_introduced ;
var bool: aux11589_BOOL:: var_is_introduced ;
var bool: aux11590_BOOL:: var_is_introduced ;
var bool: aux11591_BOOL:: var_is_introduced ;
var {0,1}: aux11591_INTEGER :: var_is_introduced ;
var 3..45: aux11592:: var_is_introduced ;
var bool: aux11593_BOOL:: var_is_introduced ;
var bool: aux11594_BOOL:: var_is_introduced ;
var bool: aux11595_BOOL:: var_is_introduced ;
var bool: aux11596_BOOL:: var_is_introduced ;
var bool: aux11597_BOOL:: var_is_introduced ;
var {0,1}: aux11597_INTEGER :: var_is_introduced ;
var 1..43: aux11598:: var_is_introduced ;
var bool: aux11599_BOOL:: var_is_introduced ;
var bool: aux11600_BOOL:: var_is_introduced ;
var bool: aux11601_BOOL:: var_is_introduced ;
var bool: aux11602_BOOL:: var_is_introduced ;
var bool: aux11603_BOOL:: var_is_introduced ;
var {0,1}: aux11603_INTEGER :: var_is_introduced ;
var 2..44: aux11604:: var_is_introduced ;
var bool: aux11605_BOOL:: var_is_introduced ;
var bool: aux11606_BOOL:: var_is_introduced ;
var bool: aux11607_BOOL:: var_is_introduced ;
var bool: aux11608_BOOL:: var_is_introduced ;
var bool: aux11609_BOOL:: var_is_introduced ;
var {0,1}: aux11609_INTEGER :: var_is_introduced ;
var 2..44: aux11610:: var_is_introduced ;
var bool: aux11611_BOOL:: var_is_introduced ;
var bool: aux11612_BOOL:: var_is_introduced ;
var bool: aux11613_BOOL:: var_is_introduced ;
var bool: aux11614_BOOL:: var_is_introduced ;
var bool: aux11615_BOOL:: var_is_introduced ;
var {0,1}: aux11615_INTEGER :: var_is_introduced ;
var 2..44: aux11616:: var_is_introduced ;
var bool: aux11617_BOOL:: var_is_introduced ;
var bool: aux11618_BOOL:: var_is_introduced ;
var bool: aux11619_BOOL:: var_is_introduced ;
var bool: aux11620_BOOL:: var_is_introduced ;
var bool: aux11621_BOOL:: var_is_introduced ;
var {0,1}: aux11621_INTEGER :: var_is_introduced ;
var 2..44: aux11622:: var_is_introduced ;
var bool: aux11623_BOOL:: var_is_introduced ;
var bool: aux11624_BOOL:: var_is_introduced ;
var bool: aux11625_BOOL:: var_is_introduced ;
var bool: aux11626_BOOL:: var_is_introduced ;
var bool: aux11627_BOOL:: var_is_introduced ;
var {0,1}: aux11627_INTEGER :: var_is_introduced ;
var 3..45: aux11628:: var_is_introduced ;
var bool: aux11629_BOOL:: var_is_introduced ;
var bool: aux11630_BOOL:: var_is_introduced ;
var bool: aux11631_BOOL:: var_is_introduced ;
var bool: aux11632_BOOL:: var_is_introduced ;
var bool: aux11633_BOOL:: var_is_introduced ;
var {0,1}: aux11633_INTEGER :: var_is_introduced ;
var 3..45: aux11634:: var_is_introduced ;
var bool: aux11635_BOOL:: var_is_introduced ;
var bool: aux11636_BOOL:: var_is_introduced ;
var bool: aux11637_BOOL:: var_is_introduced ;
var bool: aux11638_BOOL:: var_is_introduced ;
var bool: aux11639_BOOL:: var_is_introduced ;
var {0,1}: aux11639_INTEGER :: var_is_introduced ;
var 4..46: aux11640:: var_is_introduced ;
var bool: aux11641_BOOL:: var_is_introduced ;
var bool: aux11642_BOOL:: var_is_introduced ;
var bool: aux11643_BOOL:: var_is_introduced ;
var bool: aux11644_BOOL:: var_is_introduced ;
var bool: aux11645_BOOL:: var_is_introduced ;
var {0,1}: aux11645_INTEGER :: var_is_introduced ;
var 3..45: aux11646:: var_is_introduced ;
var bool: aux11647_BOOL:: var_is_introduced ;
var bool: aux11648_BOOL:: var_is_introduced ;
var bool: aux11649_BOOL:: var_is_introduced ;
var {0,1}: aux11649_INTEGER :: var_is_introduced ;
var bool: aux11650_BOOL:: var_is_introduced ;
var 1..43: aux11651:: var_is_introduced ;
var bool: aux11652_BOOL:: var_is_introduced ;
var bool: aux11653_BOOL:: var_is_introduced ;
var bool: aux11654_BOOL:: var_is_introduced ;
var bool: aux11655_BOOL:: var_is_introduced ;
var bool: aux11656_BOOL:: var_is_introduced ;
var {0,1}: aux11656_INTEGER :: var_is_introduced ;
var 1..43: aux11657:: var_is_introduced ;
var bool: aux11658_BOOL:: var_is_introduced ;
var bool: aux11659_BOOL:: var_is_introduced ;
var bool: aux11660_BOOL:: var_is_introduced ;
var bool: aux11661_BOOL:: var_is_introduced ;
var bool: aux11662_BOOL:: var_is_introduced ;
var {0,1}: aux11662_INTEGER :: var_is_introduced ;
var 2..44: aux11663:: var_is_introduced ;
var bool: aux11664_BOOL:: var_is_introduced ;
var bool: aux11665_BOOL:: var_is_introduced ;
var bool: aux11666_BOOL:: var_is_introduced ;
var bool: aux11667_BOOL:: var_is_introduced ;
var bool: aux11668_BOOL:: var_is_introduced ;
var {0,1}: aux11668_INTEGER :: var_is_introduced ;
var 1..43: aux11669:: var_is_introduced ;
var bool: aux11670_BOOL:: var_is_introduced ;
var bool: aux11671_BOOL:: var_is_introduced ;
var bool: aux11672_BOOL:: var_is_introduced ;
var bool: aux11673_BOOL:: var_is_introduced ;
var bool: aux11674_BOOL:: var_is_introduced ;
var {0,1}: aux11674_INTEGER :: var_is_introduced ;
var 2..44: aux11675:: var_is_introduced ;
var bool: aux11676_BOOL:: var_is_introduced ;
var bool: aux11677_BOOL:: var_is_introduced ;
var bool: aux11678_BOOL:: var_is_introduced ;
var bool: aux11679_BOOL:: var_is_introduced ;
var bool: aux11680_BOOL:: var_is_introduced ;
var {0,1}: aux11680_INTEGER :: var_is_introduced ;
var 1..43: aux11681:: var_is_introduced ;
var bool: aux11682_BOOL:: var_is_introduced ;
var bool: aux11683_BOOL:: var_is_introduced ;
var bool: aux11684_BOOL:: var_is_introduced ;
var bool: aux11685_BOOL:: var_is_introduced ;
var bool: aux11686_BOOL:: var_is_introduced ;
var {0,1}: aux11686_INTEGER :: var_is_introduced ;
var 2..44: aux11687:: var_is_introduced ;
var bool: aux11688_BOOL:: var_is_introduced ;
var bool: aux11689_BOOL:: var_is_introduced ;
var bool: aux11690_BOOL:: var_is_introduced ;
var bool: aux11691_BOOL:: var_is_introduced ;
var bool: aux11692_BOOL:: var_is_introduced ;
var {0,1}: aux11692_INTEGER :: var_is_introduced ;
var 2..44: aux11693:: var_is_introduced ;
var bool: aux11694_BOOL:: var_is_introduced ;
var bool: aux11695_BOOL:: var_is_introduced ;
var bool: aux11696_BOOL:: var_is_introduced ;
var bool: aux11697_BOOL:: var_is_introduced ;
var bool: aux11698_BOOL:: var_is_introduced ;
var {0,1}: aux11698_INTEGER :: var_is_introduced ;
var 1..43: aux11699:: var_is_introduced ;
var bool: aux11700_BOOL:: var_is_introduced ;
var bool: aux11701_BOOL:: var_is_introduced ;
var bool: aux11702_BOOL:: var_is_introduced ;
var bool: aux11703_BOOL:: var_is_introduced ;
var bool: aux11704_BOOL:: var_is_introduced ;
var {0,1}: aux11704_INTEGER :: var_is_introduced ;
var 2..44: aux11705:: var_is_introduced ;
var bool: aux11706_BOOL:: var_is_introduced ;
var bool: aux11707_BOOL:: var_is_introduced ;
var bool: aux11708_BOOL:: var_is_introduced ;
var bool: aux11709_BOOL:: var_is_introduced ;
var bool: aux11710_BOOL:: var_is_introduced ;
var {0,1}: aux11710_INTEGER :: var_is_introduced ;
var 3..45: aux11711:: var_is_introduced ;
var bool: aux11712_BOOL:: var_is_introduced ;
var bool: aux11713_BOOL:: var_is_introduced ;
var bool: aux11714_BOOL:: var_is_introduced ;
var bool: aux11715_BOOL:: var_is_introduced ;
var bool: aux11716_BOOL:: var_is_introduced ;
var {0,1}: aux11716_INTEGER :: var_is_introduced ;
var 2..44: aux11717:: var_is_introduced ;
var bool: aux11718_BOOL:: var_is_introduced ;
var bool: aux11719_BOOL:: var_is_introduced ;
var bool: aux11720_BOOL:: var_is_introduced ;
var bool: aux11721_BOOL:: var_is_introduced ;
var bool: aux11722_BOOL:: var_is_introduced ;
var {0,1}: aux11722_INTEGER :: var_is_introduced ;
var 2..44: aux11723:: var_is_introduced ;
var bool: aux11724_BOOL:: var_is_introduced ;
var bool: aux11725_BOOL:: var_is_introduced ;
var bool: aux11726_BOOL:: var_is_introduced ;
var bool: aux11727_BOOL:: var_is_introduced ;
var bool: aux11728_BOOL:: var_is_introduced ;
var {0,1}: aux11728_INTEGER :: var_is_introduced ;
var 2..44: aux11729:: var_is_introduced ;
var bool: aux11730_BOOL:: var_is_introduced ;
var bool: aux11731_BOOL:: var_is_introduced ;
var bool: aux11732_BOOL:: var_is_introduced ;
var bool: aux11733_BOOL:: var_is_introduced ;
var bool: aux11734_BOOL:: var_is_introduced ;
var {0,1}: aux11734_INTEGER :: var_is_introduced ;
var 2..44: aux11735:: var_is_introduced ;
var bool: aux11736_BOOL:: var_is_introduced ;
var bool: aux11737_BOOL:: var_is_introduced ;
var bool: aux11738_BOOL:: var_is_introduced ;
var bool: aux11739_BOOL:: var_is_introduced ;
var bool: aux11740_BOOL:: var_is_introduced ;
var {0,1}: aux11740_INTEGER :: var_is_introduced ;
var 3..45: aux11741:: var_is_introduced ;
var bool: aux11742_BOOL:: var_is_introduced ;
var bool: aux11743_BOOL:: var_is_introduced ;
var bool: aux11744_BOOL:: var_is_introduced ;
var bool: aux11745_BOOL:: var_is_introduced ;
var bool: aux11746_BOOL:: var_is_introduced ;
var {0,1}: aux11746_INTEGER :: var_is_introduced ;
var 3..45: aux11747:: var_is_introduced ;
var bool: aux11748_BOOL:: var_is_introduced ;
var bool: aux11749_BOOL:: var_is_introduced ;
var bool: aux11750_BOOL:: var_is_introduced ;
var bool: aux11751_BOOL:: var_is_introduced ;
var bool: aux11752_BOOL:: var_is_introduced ;
var {0,1}: aux11752_INTEGER :: var_is_introduced ;
var 3..45: aux11753:: var_is_introduced ;
var bool: aux11754_BOOL:: var_is_introduced ;
var bool: aux11755_BOOL:: var_is_introduced ;
var bool: aux11756_BOOL:: var_is_introduced ;
var bool: aux11757_BOOL:: var_is_introduced ;
var bool: aux11758_BOOL:: var_is_introduced ;
var {0,1}: aux11758_INTEGER :: var_is_introduced ;
var 4..46: aux11759:: var_is_introduced ;
var bool: aux11760_BOOL:: var_is_introduced ;
var bool: aux11761_BOOL:: var_is_introduced ;
var bool: aux11762_BOOL:: var_is_introduced ;
var bool: aux11763_BOOL:: var_is_introduced ;
var bool: aux11764_BOOL:: var_is_introduced ;
var {0,1}: aux11764_INTEGER :: var_is_introduced ;
var 3..45: aux11765:: var_is_introduced ;
var bool: aux11766_BOOL:: var_is_introduced ;
var bool: aux11767_BOOL:: var_is_introduced ;
var bool: aux11768_BOOL:: var_is_introduced ;
var {0,1}: aux11768_INTEGER :: var_is_introduced ;
var bool: aux11769_BOOL:: var_is_introduced ;
var 1..43: aux11770:: var_is_introduced ;
var bool: aux11771_BOOL:: var_is_introduced ;
var bool: aux11772_BOOL:: var_is_introduced ;
var bool: aux11773_BOOL:: var_is_introduced ;
var bool: aux11774_BOOL:: var_is_introduced ;
var bool: aux11775_BOOL:: var_is_introduced ;
var {0,1}: aux11775_INTEGER :: var_is_introduced ;
var 1..43: aux11776:: var_is_introduced ;
var bool: aux11777_BOOL:: var_is_introduced ;
var bool: aux11778_BOOL:: var_is_introduced ;
var bool: aux11779_BOOL:: var_is_introduced ;
var bool: aux11780_BOOL:: var_is_introduced ;
var bool: aux11781_BOOL:: var_is_introduced ;
var {0,1}: aux11781_INTEGER :: var_is_introduced ;
var 1..43: aux11782:: var_is_introduced ;
var bool: aux11783_BOOL:: var_is_introduced ;
var bool: aux11784_BOOL:: var_is_introduced ;
var bool: aux11785_BOOL:: var_is_introduced ;
var bool: aux11786_BOOL:: var_is_introduced ;
var bool: aux11787_BOOL:: var_is_introduced ;
var {0,1}: aux11787_INTEGER :: var_is_introduced ;
var 1..43: aux11788:: var_is_introduced ;
var bool: aux11789_BOOL:: var_is_introduced ;
var bool: aux11790_BOOL:: var_is_introduced ;
var bool: aux11791_BOOL:: var_is_introduced ;
var bool: aux11792_BOOL:: var_is_introduced ;
var bool: aux11793_BOOL:: var_is_introduced ;
var {0,1}: aux11793_INTEGER :: var_is_introduced ;
var 2..44: aux11794:: var_is_introduced ;
var bool: aux11795_BOOL:: var_is_introduced ;
var bool: aux11796_BOOL:: var_is_introduced ;
var bool: aux11797_BOOL:: var_is_introduced ;
var bool: aux11798_BOOL:: var_is_introduced ;
var bool: aux11799_BOOL:: var_is_introduced ;
var {0,1}: aux11799_INTEGER :: var_is_introduced ;
var 2..44: aux11800:: var_is_introduced ;
var bool: aux11801_BOOL:: var_is_introduced ;
var bool: aux11802_BOOL:: var_is_introduced ;
var bool: aux11803_BOOL:: var_is_introduced ;
var bool: aux11804_BOOL:: var_is_introduced ;
var bool: aux11805_BOOL:: var_is_introduced ;
var {0,1}: aux11805_INTEGER :: var_is_introduced ;
var 2..44: aux11806:: var_is_introduced ;
var bool: aux11807_BOOL:: var_is_introduced ;
var bool: aux11808_BOOL:: var_is_introduced ;
var bool: aux11809_BOOL:: var_is_introduced ;
var bool: aux11810_BOOL:: var_is_introduced ;
var bool: aux11811_BOOL:: var_is_introduced ;
var {0,1}: aux11811_INTEGER :: var_is_introduced ;
var 1..43: aux11812:: var_is_introduced ;
var bool: aux11813_BOOL:: var_is_introduced ;
var bool: aux11814_BOOL:: var_is_introduced ;
var bool: aux11815_BOOL:: var_is_introduced ;
var bool: aux11816_BOOL:: var_is_introduced ;
var bool: aux11817_BOOL:: var_is_introduced ;
var {0,1}: aux11817_INTEGER :: var_is_introduced ;
var 2..44: aux11818:: var_is_introduced ;
var bool: aux11819_BOOL:: var_is_introduced ;
var bool: aux11820_BOOL:: var_is_introduced ;
var bool: aux11821_BOOL:: var_is_introduced ;
var bool: aux11822_BOOL:: var_is_introduced ;
var bool: aux11823_BOOL:: var_is_introduced ;
var {0,1}: aux11823_INTEGER :: var_is_introduced ;
var 2..44: aux11824:: var_is_introduced ;
var bool: aux11825_BOOL:: var_is_introduced ;
var bool: aux11826_BOOL:: var_is_introduced ;
var bool: aux11827_BOOL:: var_is_introduced ;
var bool: aux11828_BOOL:: var_is_introduced ;
var bool: aux11829_BOOL:: var_is_introduced ;
var {0,1}: aux11829_INTEGER :: var_is_introduced ;
var 2..44: aux11830:: var_is_introduced ;
var bool: aux11831_BOOL:: var_is_introduced ;
var bool: aux11832_BOOL:: var_is_introduced ;
var bool: aux11833_BOOL:: var_is_introduced ;
var bool: aux11834_BOOL:: var_is_introduced ;
var bool: aux11835_BOOL:: var_is_introduced ;
var {0,1}: aux11835_INTEGER :: var_is_introduced ;
var 3..45: aux11836:: var_is_introduced ;
var bool: aux11837_BOOL:: var_is_introduced ;
var bool: aux11838_BOOL:: var_is_introduced ;
var bool: aux11839_BOOL:: var_is_introduced ;
var bool: aux11840_BOOL:: var_is_introduced ;
var bool: aux11841_BOOL:: var_is_introduced ;
var {0,1}: aux11841_INTEGER :: var_is_introduced ;
var 2..44: aux11842:: var_is_introduced ;
var bool: aux11843_BOOL:: var_is_introduced ;
var bool: aux11844_BOOL:: var_is_introduced ;
var bool: aux11845_BOOL:: var_is_introduced ;
var bool: aux11846_BOOL:: var_is_introduced ;
var bool: aux11847_BOOL:: var_is_introduced ;
var {0,1}: aux11847_INTEGER :: var_is_introduced ;
var 3..45: aux11848:: var_is_introduced ;
var bool: aux11849_BOOL:: var_is_introduced ;
var bool: aux11850_BOOL:: var_is_introduced ;
var bool: aux11851_BOOL:: var_is_introduced ;
var bool: aux11852_BOOL:: var_is_introduced ;
var bool: aux11853_BOOL:: var_is_introduced ;
var {0,1}: aux11853_INTEGER :: var_is_introduced ;
var 2..44: aux11854:: var_is_introduced ;
var bool: aux11855_BOOL:: var_is_introduced ;
var bool: aux11856_BOOL:: var_is_introduced ;
var bool: aux11857_BOOL:: var_is_introduced ;
var bool: aux11858_BOOL:: var_is_introduced ;
var bool: aux11859_BOOL:: var_is_introduced ;
var {0,1}: aux11859_INTEGER :: var_is_introduced ;
var 3..45: aux11860:: var_is_introduced ;
var bool: aux11861_BOOL:: var_is_introduced ;
var bool: aux11862_BOOL:: var_is_introduced ;
var bool: aux11863_BOOL:: var_is_introduced ;
var bool: aux11864_BOOL:: var_is_introduced ;
var bool: aux11865_BOOL:: var_is_introduced ;
var {0,1}: aux11865_INTEGER :: var_is_introduced ;
var 3..45: aux11866:: var_is_introduced ;
var bool: aux11867_BOOL:: var_is_introduced ;
var bool: aux11868_BOOL:: var_is_introduced ;
var bool: aux11869_BOOL:: var_is_introduced ;
var bool: aux11870_BOOL:: var_is_introduced ;
var bool: aux11871_BOOL:: var_is_introduced ;
var {0,1}: aux11871_INTEGER :: var_is_introduced ;
var 3..45: aux11872:: var_is_introduced ;
var bool: aux11873_BOOL:: var_is_introduced ;
var bool: aux11874_BOOL:: var_is_introduced ;
var bool: aux11875_BOOL:: var_is_introduced ;
var bool: aux11876_BOOL:: var_is_introduced ;
var bool: aux11877_BOOL:: var_is_introduced ;
var {0,1}: aux11877_INTEGER :: var_is_introduced ;
var 4..46: aux11878:: var_is_introduced ;
var bool: aux11879_BOOL:: var_is_introduced ;
var bool: aux11880_BOOL:: var_is_introduced ;
var bool: aux11881_BOOL:: var_is_introduced ;
var bool: aux11882_BOOL:: var_is_introduced ;
var bool: aux11883_BOOL:: var_is_introduced ;
var {0,1}: aux11883_INTEGER :: var_is_introduced ;
var 2..44: aux11884:: var_is_introduced ;
var bool: aux11885_BOOL:: var_is_introduced ;
var bool: aux11886_BOOL:: var_is_introduced ;
var bool: aux11887_BOOL:: var_is_introduced ;
var {0,1}: aux11887_INTEGER :: var_is_introduced ;
var bool: aux11888_BOOL:: var_is_introduced ;
var 3..45: aux11889:: var_is_introduced ;
var bool: aux11890_BOOL:: var_is_introduced ;
var bool: aux11891_BOOL:: var_is_introduced ;
var bool: aux11892_BOOL:: var_is_introduced ;
var {0,1}: aux11892_INTEGER :: var_is_introduced ;
var 1..43: aux11893:: var_is_introduced ;
var bool: aux11894_BOOL:: var_is_introduced ;
var bool: aux11895_BOOL:: var_is_introduced ;
var bool: aux11896_BOOL:: var_is_introduced ;
var bool: aux11897_BOOL:: var_is_introduced ;
var bool: aux11898_BOOL:: var_is_introduced ;
var {0,1}: aux11898_INTEGER :: var_is_introduced ;
var 1..43: aux11899:: var_is_introduced ;
var bool: aux11900_BOOL:: var_is_introduced ;
var bool: aux11901_BOOL:: var_is_introduced ;
var bool: aux11902_BOOL:: var_is_introduced ;
var bool: aux11903_BOOL:: var_is_introduced ;
var bool: aux11904_BOOL:: var_is_introduced ;
var {0,1}: aux11904_INTEGER :: var_is_introduced ;
var 2..44: aux11905:: var_is_introduced ;
var bool: aux11906_BOOL:: var_is_introduced ;
var bool: aux11907_BOOL:: var_is_introduced ;
var bool: aux11908_BOOL:: var_is_introduced ;
var bool: aux11909_BOOL:: var_is_introduced ;
var bool: aux11910_BOOL:: var_is_introduced ;
var {0,1}: aux11910_INTEGER :: var_is_introduced ;
var 2..44: aux11911:: var_is_introduced ;
var bool: aux11912_BOOL:: var_is_introduced ;
var bool: aux11913_BOOL:: var_is_introduced ;
var bool: aux11914_BOOL:: var_is_introduced ;
var bool: aux11915_BOOL:: var_is_introduced ;
var bool: aux11916_BOOL:: var_is_introduced ;
var {0,1}: aux11916_INTEGER :: var_is_introduced ;
var 2..44: aux11917:: var_is_introduced ;
var bool: aux11918_BOOL:: var_is_introduced ;
var bool: aux11919_BOOL:: var_is_introduced ;
var bool: aux11920_BOOL:: var_is_introduced ;
var bool: aux11921_BOOL:: var_is_introduced ;
var bool: aux11922_BOOL:: var_is_introduced ;
var {0,1}: aux11922_INTEGER :: var_is_introduced ;
var 2..44: aux11923:: var_is_introduced ;
var bool: aux11924_BOOL:: var_is_introduced ;
var bool: aux11925_BOOL:: var_is_introduced ;
var bool: aux11926_BOOL:: var_is_introduced ;
var bool: aux11927_BOOL:: var_is_introduced ;
var bool: aux11928_BOOL:: var_is_introduced ;
var {0,1}: aux11928_INTEGER :: var_is_introduced ;
var 2..44: aux11929:: var_is_introduced ;
var bool: aux11930_BOOL:: var_is_introduced ;
var bool: aux11931_BOOL:: var_is_introduced ;
var bool: aux11932_BOOL:: var_is_introduced ;
var bool: aux11933_BOOL:: var_is_introduced ;
var bool: aux11934_BOOL:: var_is_introduced ;
var {0,1}: aux11934_INTEGER :: var_is_introduced ;
var 1..43: aux11935:: var_is_introduced ;
var bool: aux11936_BOOL:: var_is_introduced ;
var bool: aux11937_BOOL:: var_is_introduced ;
var bool: aux11938_BOOL:: var_is_introduced ;
var bool: aux11939_BOOL:: var_is_introduced ;
var bool: aux11940_BOOL:: var_is_introduced ;
var {0,1}: aux11940_INTEGER :: var_is_introduced ;
var 3..45: aux11941:: var_is_introduced ;
var bool: aux11942_BOOL:: var_is_introduced ;
var bool: aux11943_BOOL:: var_is_introduced ;
var bool: aux11944_BOOL:: var_is_introduced ;
var bool: aux11945_BOOL:: var_is_introduced ;
var bool: aux11946_BOOL:: var_is_introduced ;
var {0,1}: aux11946_INTEGER :: var_is_introduced ;
var 1..43: aux11947:: var_is_introduced ;
var bool: aux11948_BOOL:: var_is_introduced ;
var bool: aux11949_BOOL:: var_is_introduced ;
var bool: aux11950_BOOL:: var_is_introduced ;
var bool: aux11951_BOOL:: var_is_introduced ;
var bool: aux11952_BOOL:: var_is_introduced ;
var {0,1}: aux11952_INTEGER :: var_is_introduced ;
var 3..45: aux11953:: var_is_introduced ;
var bool: aux11954_BOOL:: var_is_introduced ;
var bool: aux11955_BOOL:: var_is_introduced ;
var bool: aux11956_BOOL:: var_is_introduced ;
var bool: aux11957_BOOL:: var_is_introduced ;
var bool: aux11958_BOOL:: var_is_introduced ;
var {0,1}: aux11958_INTEGER :: var_is_introduced ;
var 1..43: aux11959:: var_is_introduced ;
var bool: aux11960_BOOL:: var_is_introduced ;
var bool: aux11961_BOOL:: var_is_introduced ;
var bool: aux11962_BOOL:: var_is_introduced ;
var bool: aux11963_BOOL:: var_is_introduced ;
var bool: aux11964_BOOL:: var_is_introduced ;
var {0,1}: aux11964_INTEGER :: var_is_introduced ;
var 2..44: aux11965:: var_is_introduced ;
var bool: aux11966_BOOL:: var_is_introduced ;
var bool: aux11967_BOOL:: var_is_introduced ;
var bool: aux11968_BOOL:: var_is_introduced ;
var bool: aux11969_BOOL:: var_is_introduced ;
var bool: aux11970_BOOL:: var_is_introduced ;
var {0,1}: aux11970_INTEGER :: var_is_introduced ;
var 2..44: aux11971:: var_is_introduced ;
var bool: aux11972_BOOL:: var_is_introduced ;
var bool: aux11973_BOOL:: var_is_introduced ;
var bool: aux11974_BOOL:: var_is_introduced ;
var bool: aux11975_BOOL:: var_is_introduced ;
var bool: aux11976_BOOL:: var_is_introduced ;
var {0,1}: aux11976_INTEGER :: var_is_introduced ;
var 2..44: aux11977:: var_is_introduced ;
var bool: aux11978_BOOL:: var_is_introduced ;
var bool: aux11979_BOOL:: var_is_introduced ;
var bool: aux11980_BOOL:: var_is_introduced ;
var bool: aux11981_BOOL:: var_is_introduced ;
var bool: aux11982_BOOL:: var_is_introduced ;
var {0,1}: aux11982_INTEGER :: var_is_introduced ;
var 2..44: aux11983:: var_is_introduced ;
var bool: aux11984_BOOL:: var_is_introduced ;
var bool: aux11985_BOOL:: var_is_introduced ;
var bool: aux11986_BOOL:: var_is_introduced ;
var bool: aux11987_BOOL:: var_is_introduced ;
var bool: aux11988_BOOL:: var_is_introduced ;
var {0,1}: aux11988_INTEGER :: var_is_introduced ;
var 3..45: aux11989:: var_is_introduced ;
var bool: aux11990_BOOL:: var_is_introduced ;
var bool: aux11991_BOOL:: var_is_introduced ;
var bool: aux11992_BOOL:: var_is_introduced ;
var bool: aux11993_BOOL:: var_is_introduced ;
var bool: aux11994_BOOL:: var_is_introduced ;
var {0,1}: aux11994_INTEGER :: var_is_introduced ;
var 3..45: aux11995:: var_is_introduced ;
var bool: aux11996_BOOL:: var_is_introduced ;
var bool: aux11997_BOOL:: var_is_introduced ;
var bool: aux11998_BOOL:: var_is_introduced ;
var bool: aux11999_BOOL:: var_is_introduced ;
var bool: aux12000_BOOL:: var_is_introduced ;
var {0,1}: aux12000_INTEGER :: var_is_introduced ;
var 4..46: aux12001:: var_is_introduced ;
var bool: aux12002_BOOL:: var_is_introduced ;
var bool: aux12003_BOOL:: var_is_introduced ;
var bool: aux12004_BOOL:: var_is_introduced ;
var bool: aux12005_BOOL:: var_is_introduced ;
var bool: aux12006_BOOL:: var_is_introduced ;
var {0,1}: aux12006_INTEGER :: var_is_introduced ;
var bool: aux12007_BOOL:: var_is_introduced ;
var 1..43: aux12008:: var_is_introduced ;
var bool: aux12009_BOOL:: var_is_introduced ;
var bool: aux12010_BOOL:: var_is_introduced ;
var bool: aux12011_BOOL:: var_is_introduced ;
var bool: aux12012_BOOL:: var_is_introduced ;
var bool: aux12013_BOOL:: var_is_introduced ;
var {0,1}: aux12013_INTEGER :: var_is_introduced ;
var 1..43: aux12014:: var_is_introduced ;
var bool: aux12015_BOOL:: var_is_introduced ;
var bool: aux12016_BOOL:: var_is_introduced ;
var bool: aux12017_BOOL:: var_is_introduced ;
var bool: aux12018_BOOL:: var_is_introduced ;
var bool: aux12019_BOOL:: var_is_introduced ;
var {0,1}: aux12019_INTEGER :: var_is_introduced ;
var 2..44: aux12020:: var_is_introduced ;
var bool: aux12021_BOOL:: var_is_introduced ;
var bool: aux12022_BOOL:: var_is_introduced ;
var bool: aux12023_BOOL:: var_is_introduced ;
var bool: aux12024_BOOL:: var_is_introduced ;
var bool: aux12025_BOOL:: var_is_introduced ;
var {0,1}: aux12025_INTEGER :: var_is_introduced ;
var 2..44: aux12026:: var_is_introduced ;
var bool: aux12027_BOOL:: var_is_introduced ;
var bool: aux12028_BOOL:: var_is_introduced ;
var bool: aux12029_BOOL:: var_is_introduced ;
var bool: aux12030_BOOL:: var_is_introduced ;
var bool: aux12031_BOOL:: var_is_introduced ;
var {0,1}: aux12031_INTEGER :: var_is_introduced ;
var 2..44: aux12032:: var_is_introduced ;
var bool: aux12033_BOOL:: var_is_introduced ;
var bool: aux12034_BOOL:: var_is_introduced ;
var bool: aux12035_BOOL:: var_is_introduced ;
var bool: aux12036_BOOL:: var_is_introduced ;
var bool: aux12037_BOOL:: var_is_introduced ;
var {0,1}: aux12037_INTEGER :: var_is_introduced ;
var 2..44: aux12038:: var_is_introduced ;
var bool: aux12039_BOOL:: var_is_introduced ;
var bool: aux12040_BOOL:: var_is_introduced ;
var bool: aux12041_BOOL:: var_is_introduced ;
var bool: aux12042_BOOL:: var_is_introduced ;
var bool: aux12043_BOOL:: var_is_introduced ;
var {0,1}: aux12043_INTEGER :: var_is_introduced ;
var 2..44: aux12044:: var_is_introduced ;
var bool: aux12045_BOOL:: var_is_introduced ;
var bool: aux12046_BOOL:: var_is_introduced ;
var bool: aux12047_BOOL:: var_is_introduced ;
var bool: aux12048_BOOL:: var_is_introduced ;
var bool: aux12049_BOOL:: var_is_introduced ;
var {0,1}: aux12049_INTEGER :: var_is_introduced ;
var 1..43: aux12050:: var_is_introduced ;
var bool: aux12051_BOOL:: var_is_introduced ;
var bool: aux12052_BOOL:: var_is_introduced ;
var bool: aux12053_BOOL:: var_is_introduced ;
var bool: aux12054_BOOL:: var_is_introduced ;
var bool: aux12055_BOOL:: var_is_introduced ;
var {0,1}: aux12055_INTEGER :: var_is_introduced ;
var 3..45: aux12056:: var_is_introduced ;
var bool: aux12057_BOOL:: var_is_introduced ;
var bool: aux12058_BOOL:: var_is_introduced ;
var bool: aux12059_BOOL:: var_is_introduced ;
var bool: aux12060_BOOL:: var_is_introduced ;
var bool: aux12061_BOOL:: var_is_introduced ;
var {0,1}: aux12061_INTEGER :: var_is_introduced ;
var 1..43: aux12062:: var_is_introduced ;
var bool: aux12063_BOOL:: var_is_introduced ;
var bool: aux12064_BOOL:: var_is_introduced ;
var bool: aux12065_BOOL:: var_is_introduced ;
var bool: aux12066_BOOL:: var_is_introduced ;
var bool: aux12067_BOOL:: var_is_introduced ;
var {0,1}: aux12067_INTEGER :: var_is_introduced ;
var 3..45: aux12068:: var_is_introduced ;
var bool: aux12069_BOOL:: var_is_introduced ;
var bool: aux12070_BOOL:: var_is_introduced ;
var bool: aux12071_BOOL:: var_is_introduced ;
var bool: aux12072_BOOL:: var_is_introduced ;
var bool: aux12073_BOOL:: var_is_introduced ;
var {0,1}: aux12073_INTEGER :: var_is_introduced ;
var 1..43: aux12074:: var_is_introduced ;
var bool: aux12075_BOOL:: var_is_introduced ;
var bool: aux12076_BOOL:: var_is_introduced ;
var bool: aux12077_BOOL:: var_is_introduced ;
var bool: aux12078_BOOL:: var_is_introduced ;
var bool: aux12079_BOOL:: var_is_introduced ;
var {0,1}: aux12079_INTEGER :: var_is_introduced ;
var 2..44: aux12080:: var_is_introduced ;
var bool: aux12081_BOOL:: var_is_introduced ;
var bool: aux12082_BOOL:: var_is_introduced ;
var bool: aux12083_BOOL:: var_is_introduced ;
var bool: aux12084_BOOL:: var_is_introduced ;
var bool: aux12085_BOOL:: var_is_introduced ;
var {0,1}: aux12085_INTEGER :: var_is_introduced ;
var 2..44: aux12086:: var_is_introduced ;
var bool: aux12087_BOOL:: var_is_introduced ;
var bool: aux12088_BOOL:: var_is_introduced ;
var bool: aux12089_BOOL:: var_is_introduced ;
var bool: aux12090_BOOL:: var_is_introduced ;
var bool: aux12091_BOOL:: var_is_introduced ;
var {0,1}: aux12091_INTEGER :: var_is_introduced ;
var 2..44: aux12092:: var_is_introduced ;
var bool: aux12093_BOOL:: var_is_introduced ;
var bool: aux12094_BOOL:: var_is_introduced ;
var bool: aux12095_BOOL:: var_is_introduced ;
var bool: aux12096_BOOL:: var_is_introduced ;
var bool: aux12097_BOOL:: var_is_introduced ;
var {0,1}: aux12097_INTEGER :: var_is_introduced ;
var 2..44: aux12098:: var_is_introduced ;
var bool: aux12099_BOOL:: var_is_introduced ;
var bool: aux12100_BOOL:: var_is_introduced ;
var bool: aux12101_BOOL:: var_is_introduced ;
var bool: aux12102_BOOL:: var_is_introduced ;
var bool: aux12103_BOOL:: var_is_introduced ;
var {0,1}: aux12103_INTEGER :: var_is_introduced ;
var 3..45: aux12104:: var_is_introduced ;
var bool: aux12105_BOOL:: var_is_introduced ;
var bool: aux12106_BOOL:: var_is_introduced ;
var bool: aux12107_BOOL:: var_is_introduced ;
var bool: aux12108_BOOL:: var_is_introduced ;
var bool: aux12109_BOOL:: var_is_introduced ;
var {0,1}: aux12109_INTEGER :: var_is_introduced ;
var 4..46: aux12110:: var_is_introduced ;
var bool: aux12111_BOOL:: var_is_introduced ;
var bool: aux12112_BOOL:: var_is_introduced ;
var bool: aux12113_BOOL:: var_is_introduced ;
var bool: aux12114_BOOL:: var_is_introduced ;
var bool: aux12115_BOOL:: var_is_introduced ;
var {0,1}: aux12115_INTEGER :: var_is_introduced ;
var 3..45: aux12116:: var_is_introduced ;
var bool: aux12117_BOOL:: var_is_introduced ;
var bool: aux12118_BOOL:: var_is_introduced ;
var bool: aux12119_BOOL:: var_is_introduced ;
var bool: aux12120_BOOL:: var_is_introduced ;
var bool: aux12121_BOOL:: var_is_introduced ;
var {0,1}: aux12121_INTEGER :: var_is_introduced ;
var 3..45: aux12122:: var_is_introduced ;
var bool: aux12123_BOOL:: var_is_introduced ;
var bool: aux12124_BOOL:: var_is_introduced ;
var bool: aux12125_BOOL:: var_is_introduced ;
var {0,1}: aux12125_INTEGER :: var_is_introduced ;
var bool: aux12126_BOOL:: var_is_introduced ;
var 1..43: aux12127:: var_is_introduced ;
var bool: aux12128_BOOL:: var_is_introduced ;
var bool: aux12129_BOOL:: var_is_introduced ;
var bool: aux12130_BOOL:: var_is_introduced ;
var bool: aux12131_BOOL:: var_is_introduced ;
var bool: aux12132_BOOL:: var_is_introduced ;
var {0,1}: aux12132_INTEGER :: var_is_introduced ;
var 1..43: aux12133:: var_is_introduced ;
var bool: aux12134_BOOL:: var_is_introduced ;
var bool: aux12135_BOOL:: var_is_introduced ;
var bool: aux12136_BOOL:: var_is_introduced ;
var bool: aux12137_BOOL:: var_is_introduced ;
var bool: aux12138_BOOL:: var_is_introduced ;
var {0,1}: aux12138_INTEGER :: var_is_introduced ;
var 1..43: aux12139:: var_is_introduced ;
var bool: aux12140_BOOL:: var_is_introduced ;
var bool: aux12141_BOOL:: var_is_introduced ;
var bool: aux12142_BOOL:: var_is_introduced ;
var bool: aux12143_BOOL:: var_is_introduced ;
var bool: aux12144_BOOL:: var_is_introduced ;
var {0,1}: aux12144_INTEGER :: var_is_introduced ;
var 2..44: aux12145:: var_is_introduced ;
var bool: aux12146_BOOL:: var_is_introduced ;
var bool: aux12147_BOOL:: var_is_introduced ;
var bool: aux12148_BOOL:: var_is_introduced ;
var bool: aux12149_BOOL:: var_is_introduced ;
var bool: aux12150_BOOL:: var_is_introduced ;
var {0,1}: aux12150_INTEGER :: var_is_introduced ;
var 1..43: aux12151:: var_is_introduced ;
var bool: aux12152_BOOL:: var_is_introduced ;
var bool: aux12153_BOOL:: var_is_introduced ;
var bool: aux12154_BOOL:: var_is_introduced ;
var bool: aux12155_BOOL:: var_is_introduced ;
var bool: aux12156_BOOL:: var_is_introduced ;
var {0,1}: aux12156_INTEGER :: var_is_introduced ;
var 2..44: aux12157:: var_is_introduced ;
var bool: aux12158_BOOL:: var_is_introduced ;
var bool: aux12159_BOOL:: var_is_introduced ;
var bool: aux12160_BOOL:: var_is_introduced ;
var bool: aux12161_BOOL:: var_is_introduced ;
var bool: aux12162_BOOL:: var_is_introduced ;
var {0,1}: aux12162_INTEGER :: var_is_introduced ;
var 2..44: aux12163:: var_is_introduced ;
var bool: aux12164_BOOL:: var_is_introduced ;
var bool: aux12165_BOOL:: var_is_introduced ;
var bool: aux12166_BOOL:: var_is_introduced ;
var bool: aux12167_BOOL:: var_is_introduced ;
var bool: aux12168_BOOL:: var_is_introduced ;
var {0,1}: aux12168_INTEGER :: var_is_introduced ;
var 2..44: aux12169:: var_is_introduced ;
var bool: aux12170_BOOL:: var_is_introduced ;
var bool: aux12171_BOOL:: var_is_introduced ;
var bool: aux12172_BOOL:: var_is_introduced ;
var bool: aux12173_BOOL:: var_is_introduced ;
var bool: aux12174_BOOL:: var_is_introduced ;
var {0,1}: aux12174_INTEGER :: var_is_introduced ;
var 1..43: aux12175:: var_is_introduced ;
var bool: aux12176_BOOL:: var_is_introduced ;
var bool: aux12177_BOOL:: var_is_introduced ;
var bool: aux12178_BOOL:: var_is_introduced ;
var bool: aux12179_BOOL:: var_is_introduced ;
var bool: aux12180_BOOL:: var_is_introduced ;
var {0,1}: aux12180_INTEGER :: var_is_introduced ;
var 2..44: aux12181:: var_is_introduced ;
var bool: aux12182_BOOL:: var_is_introduced ;
var bool: aux12183_BOOL:: var_is_introduced ;
var bool: aux12184_BOOL:: var_is_introduced ;
var bool: aux12185_BOOL:: var_is_introduced ;
var bool: aux12186_BOOL:: var_is_introduced ;
var {0,1}: aux12186_INTEGER :: var_is_introduced ;
var 2..44: aux12187:: var_is_introduced ;
var bool: aux12188_BOOL:: var_is_introduced ;
var bool: aux12189_BOOL:: var_is_introduced ;
var bool: aux12190_BOOL:: var_is_introduced ;
var bool: aux12191_BOOL:: var_is_introduced ;
var bool: aux12192_BOOL:: var_is_introduced ;
var {0,1}: aux12192_INTEGER :: var_is_introduced ;
var 2..44: aux12193:: var_is_introduced ;
var bool: aux12194_BOOL:: var_is_introduced ;
var bool: aux12195_BOOL:: var_is_introduced ;
var bool: aux12196_BOOL:: var_is_introduced ;
var bool: aux12197_BOOL:: var_is_introduced ;
var bool: aux12198_BOOL:: var_is_introduced ;
var {0,1}: aux12198_INTEGER :: var_is_introduced ;
var 2..44: aux12199:: var_is_introduced ;
var bool: aux12200_BOOL:: var_is_introduced ;
var bool: aux12201_BOOL:: var_is_introduced ;
var bool: aux12202_BOOL:: var_is_introduced ;
var bool: aux12203_BOOL:: var_is_introduced ;
var bool: aux12204_BOOL:: var_is_introduced ;
var {0,1}: aux12204_INTEGER :: var_is_introduced ;
var 3..45: aux12205:: var_is_introduced ;
var bool: aux12206_BOOL:: var_is_introduced ;
var bool: aux12207_BOOL:: var_is_introduced ;
var bool: aux12208_BOOL:: var_is_introduced ;
var bool: aux12209_BOOL:: var_is_introduced ;
var bool: aux12210_BOOL:: var_is_introduced ;
var {0,1}: aux12210_INTEGER :: var_is_introduced ;
var 2..44: aux12211:: var_is_introduced ;
var bool: aux12212_BOOL:: var_is_introduced ;
var bool: aux12213_BOOL:: var_is_introduced ;
var bool: aux12214_BOOL:: var_is_introduced ;
var bool: aux12215_BOOL:: var_is_introduced ;
var bool: aux12216_BOOL:: var_is_introduced ;
var {0,1}: aux12216_INTEGER :: var_is_introduced ;
var 3..45: aux12217:: var_is_introduced ;
var bool: aux12218_BOOL:: var_is_introduced ;
var bool: aux12219_BOOL:: var_is_introduced ;
var bool: aux12220_BOOL:: var_is_introduced ;
var bool: aux12221_BOOL:: var_is_introduced ;
var bool: aux12222_BOOL:: var_is_introduced ;
var {0,1}: aux12222_INTEGER :: var_is_introduced ;
var 3..45: aux12223:: var_is_introduced ;
var bool: aux12224_BOOL:: var_is_introduced ;
var bool: aux12225_BOOL:: var_is_introduced ;
var bool: aux12226_BOOL:: var_is_introduced ;
var bool: aux12227_BOOL:: var_is_introduced ;
var bool: aux12228_BOOL:: var_is_introduced ;
var {0,1}: aux12228_INTEGER :: var_is_introduced ;
var 3..45: aux12229:: var_is_introduced ;
var bool: aux12230_BOOL:: var_is_introduced ;
var bool: aux12231_BOOL:: var_is_introduced ;
var bool: aux12232_BOOL:: var_is_introduced ;
var bool: aux12233_BOOL:: var_is_introduced ;
var bool: aux12234_BOOL:: var_is_introduced ;
var {0,1}: aux12234_INTEGER :: var_is_introduced ;
var 4..46: aux12235:: var_is_introduced ;
var bool: aux12236_BOOL:: var_is_introduced ;
var bool: aux12237_BOOL:: var_is_introduced ;
var bool: aux12238_BOOL:: var_is_introduced ;
var bool: aux12239_BOOL:: var_is_introduced ;
var bool: aux12240_BOOL:: var_is_introduced ;
var {0,1}: aux12240_INTEGER :: var_is_introduced ;
var 3..45: aux12241:: var_is_introduced ;
var bool: aux12242_BOOL:: var_is_introduced ;
var bool: aux12243_BOOL:: var_is_introduced ;
var bool: aux12244_BOOL:: var_is_introduced ;
var {0,1}: aux12244_INTEGER :: var_is_introduced ;
var bool: aux12245_BOOL:: var_is_introduced ;
var 1..43: aux12246:: var_is_introduced ;
var bool: aux12247_BOOL:: var_is_introduced ;
var bool: aux12248_BOOL:: var_is_introduced ;
var bool: aux12249_BOOL:: var_is_introduced ;
var bool: aux12250_BOOL:: var_is_introduced ;
var bool: aux12251_BOOL:: var_is_introduced ;
var {0,1}: aux12251_INTEGER :: var_is_introduced ;
var 2..44: aux12252:: var_is_introduced ;
var bool: aux12253_BOOL:: var_is_introduced ;
var bool: aux12254_BOOL:: var_is_introduced ;
var bool: aux12255_BOOL:: var_is_introduced ;
var bool: aux12256_BOOL:: var_is_introduced ;
var bool: aux12257_BOOL:: var_is_introduced ;
var {0,1}: aux12257_INTEGER :: var_is_introduced ;
var 2..44: aux12258:: var_is_introduced ;
var bool: aux12259_BOOL:: var_is_introduced ;
var bool: aux12260_BOOL:: var_is_introduced ;
var bool: aux12261_BOOL:: var_is_introduced ;
var bool: aux12262_BOOL:: var_is_introduced ;
var bool: aux12263_BOOL:: var_is_introduced ;
var {0,1}: aux12263_INTEGER :: var_is_introduced ;
var 1..43: aux12264:: var_is_introduced ;
var bool: aux12265_BOOL:: var_is_introduced ;
var bool: aux12266_BOOL:: var_is_introduced ;
var bool: aux12267_BOOL:: var_is_introduced ;
var bool: aux12268_BOOL:: var_is_introduced ;
var bool: aux12269_BOOL:: var_is_introduced ;
var {0,1}: aux12269_INTEGER :: var_is_introduced ;
var 2..44: aux12270:: var_is_introduced ;
var bool: aux12271_BOOL:: var_is_introduced ;
var bool: aux12272_BOOL:: var_is_introduced ;
var bool: aux12273_BOOL:: var_is_introduced ;
var bool: aux12274_BOOL:: var_is_introduced ;
var bool: aux12275_BOOL:: var_is_introduced ;
var {0,1}: aux12275_INTEGER :: var_is_introduced ;
var 1..43: aux12276:: var_is_introduced ;
var bool: aux12277_BOOL:: var_is_introduced ;
var bool: aux12278_BOOL:: var_is_introduced ;
var bool: aux12279_BOOL:: var_is_introduced ;
var bool: aux12280_BOOL:: var_is_introduced ;
var bool: aux12281_BOOL:: var_is_introduced ;
var {0,1}: aux12281_INTEGER :: var_is_introduced ;
var 2..44: aux12282:: var_is_introduced ;
var bool: aux12283_BOOL:: var_is_introduced ;
var bool: aux12284_BOOL:: var_is_introduced ;
var bool: aux12285_BOOL:: var_is_introduced ;
var bool: aux12286_BOOL:: var_is_introduced ;
var bool: aux12287_BOOL:: var_is_introduced ;
var {0,1}: aux12287_INTEGER :: var_is_introduced ;
var 1..43: aux12288:: var_is_introduced ;
var bool: aux12289_BOOL:: var_is_introduced ;
var bool: aux12290_BOOL:: var_is_introduced ;
var bool: aux12291_BOOL:: var_is_introduced ;
var bool: aux12292_BOOL:: var_is_introduced ;
var bool: aux12293_BOOL:: var_is_introduced ;
var {0,1}: aux12293_INTEGER :: var_is_introduced ;
var 2..44: aux12294:: var_is_introduced ;
var bool: aux12295_BOOL:: var_is_introduced ;
var bool: aux12296_BOOL:: var_is_introduced ;
var bool: aux12297_BOOL:: var_is_introduced ;
var bool: aux12298_BOOL:: var_is_introduced ;
var bool: aux12299_BOOL:: var_is_introduced ;
var {0,1}: aux12299_INTEGER :: var_is_introduced ;
var 3..45: aux12300:: var_is_introduced ;
var bool: aux12301_BOOL:: var_is_introduced ;
var bool: aux12302_BOOL:: var_is_introduced ;
var bool: aux12303_BOOL:: var_is_introduced ;
var bool: aux12304_BOOL:: var_is_introduced ;
var bool: aux12305_BOOL:: var_is_introduced ;
var {0,1}: aux12305_INTEGER :: var_is_introduced ;
var 2..44: aux12306:: var_is_introduced ;
var bool: aux12307_BOOL:: var_is_introduced ;
var bool: aux12308_BOOL:: var_is_introduced ;
var bool: aux12309_BOOL:: var_is_introduced ;
var bool: aux12310_BOOL:: var_is_introduced ;
var bool: aux12311_BOOL:: var_is_introduced ;
var {0,1}: aux12311_INTEGER :: var_is_introduced ;
var 2..44: aux12312:: var_is_introduced ;
var bool: aux12313_BOOL:: var_is_introduced ;
var bool: aux12314_BOOL:: var_is_introduced ;
var bool: aux12315_BOOL:: var_is_introduced ;
var bool: aux12316_BOOL:: var_is_introduced ;
var bool: aux12317_BOOL:: var_is_introduced ;
var {0,1}: aux12317_INTEGER :: var_is_introduced ;
var 3..45: aux12318:: var_is_introduced ;
var bool: aux12319_BOOL:: var_is_introduced ;
var bool: aux12320_BOOL:: var_is_introduced ;
var bool: aux12321_BOOL:: var_is_introduced ;
var bool: aux12322_BOOL:: var_is_introduced ;
var bool: aux12323_BOOL:: var_is_introduced ;
var {0,1}: aux12323_INTEGER :: var_is_introduced ;
var 2..44: aux12324:: var_is_introduced ;
var bool: aux12325_BOOL:: var_is_introduced ;
var bool: aux12326_BOOL:: var_is_introduced ;
var bool: aux12327_BOOL:: var_is_introduced ;
var bool: aux12328_BOOL:: var_is_introduced ;
var bool: aux12329_BOOL:: var_is_introduced ;
var {0,1}: aux12329_INTEGER :: var_is_introduced ;
var 2..44: aux12330:: var_is_introduced ;
var bool: aux12331_BOOL:: var_is_introduced ;
var bool: aux12332_BOOL:: var_is_introduced ;
var bool: aux12333_BOOL:: var_is_introduced ;
var bool: aux12334_BOOL:: var_is_introduced ;
var bool: aux12335_BOOL:: var_is_introduced ;
var {0,1}: aux12335_INTEGER :: var_is_introduced ;
var 3..45: aux12336:: var_is_introduced ;
var bool: aux12337_BOOL:: var_is_introduced ;
var bool: aux12338_BOOL:: var_is_introduced ;
var bool: aux12339_BOOL:: var_is_introduced ;
var bool: aux12340_BOOL:: var_is_introduced ;
var bool: aux12341_BOOL:: var_is_introduced ;
var {0,1}: aux12341_INTEGER :: var_is_introduced ;
var 3..45: aux12342:: var_is_introduced ;
var bool: aux12343_BOOL:: var_is_introduced ;
var bool: aux12344_BOOL:: var_is_introduced ;
var bool: aux12345_BOOL:: var_is_introduced ;
var bool: aux12346_BOOL:: var_is_introduced ;
var bool: aux12347_BOOL:: var_is_introduced ;
var {0,1}: aux12347_INTEGER :: var_is_introduced ;
var 3..45: aux12348:: var_is_introduced ;
var bool: aux12349_BOOL:: var_is_introduced ;
var bool: aux12350_BOOL:: var_is_introduced ;
var bool: aux12351_BOOL:: var_is_introduced ;
var bool: aux12352_BOOL:: var_is_introduced ;
var bool: aux12353_BOOL:: var_is_introduced ;
var {0,1}: aux12353_INTEGER :: var_is_introduced ;
var 4..46: aux12354:: var_is_introduced ;
var bool: aux12355_BOOL:: var_is_introduced ;
var bool: aux12356_BOOL:: var_is_introduced ;
var bool: aux12357_BOOL:: var_is_introduced ;
var bool: aux12358_BOOL:: var_is_introduced ;
var bool: aux12359_BOOL:: var_is_introduced ;
var {0,1}: aux12359_INTEGER :: var_is_introduced ;
var 1..43: aux12360:: var_is_introduced ;
var bool: aux12361_BOOL:: var_is_introduced ;
var bool: aux12362_BOOL:: var_is_introduced ;
var bool: aux12363_BOOL:: var_is_introduced ;
var {0,1}: aux12363_INTEGER :: var_is_introduced ;
var bool: aux12364_BOOL:: var_is_introduced ;
var 1..43: aux12365:: var_is_introduced ;
var bool: aux12366_BOOL:: var_is_introduced ;
var bool: aux12367_BOOL:: var_is_introduced ;
var bool: aux12368_BOOL:: var_is_introduced ;
var bool: aux12369_BOOL:: var_is_introduced ;
var bool: aux12370_BOOL:: var_is_introduced ;
var {0,1}: aux12370_INTEGER :: var_is_introduced ;
var 1..43: aux12371:: var_is_introduced ;
var bool: aux12372_BOOL:: var_is_introduced ;
var bool: aux12373_BOOL:: var_is_introduced ;
var bool: aux12374_BOOL:: var_is_introduced ;
var bool: aux12375_BOOL:: var_is_introduced ;
var bool: aux12376_BOOL:: var_is_introduced ;
var {0,1}: aux12376_INTEGER :: var_is_introduced ;
var 2..44: aux12377:: var_is_introduced ;
var bool: aux12378_BOOL:: var_is_introduced ;
var bool: aux12379_BOOL:: var_is_introduced ;
var bool: aux12380_BOOL:: var_is_introduced ;
var bool: aux12381_BOOL:: var_is_introduced ;
var bool: aux12382_BOOL:: var_is_introduced ;
var {0,1}: aux12382_INTEGER :: var_is_introduced ;
var 1..43: aux12383:: var_is_introduced ;
var bool: aux12384_BOOL:: var_is_introduced ;
var bool: aux12385_BOOL:: var_is_introduced ;
var bool: aux12386_BOOL:: var_is_introduced ;
var bool: aux12387_BOOL:: var_is_introduced ;
var bool: aux12388_BOOL:: var_is_introduced ;
var {0,1}: aux12388_INTEGER :: var_is_introduced ;
var 1..43: aux12389:: var_is_introduced ;
var bool: aux12390_BOOL:: var_is_introduced ;
var bool: aux12391_BOOL:: var_is_introduced ;
var bool: aux12392_BOOL:: var_is_introduced ;
var bool: aux12393_BOOL:: var_is_introduced ;
var bool: aux12394_BOOL:: var_is_introduced ;
var {0,1}: aux12394_INTEGER :: var_is_introduced ;
var 2..44: aux12395:: var_is_introduced ;
var bool: aux12396_BOOL:: var_is_introduced ;
var bool: aux12397_BOOL:: var_is_introduced ;
var bool: aux12398_BOOL:: var_is_introduced ;
var bool: aux12399_BOOL:: var_is_introduced ;
var bool: aux12400_BOOL:: var_is_introduced ;
var {0,1}: aux12400_INTEGER :: var_is_introduced ;
var 2..44: aux12401:: var_is_introduced ;
var bool: aux12402_BOOL:: var_is_introduced ;
var bool: aux12403_BOOL:: var_is_introduced ;
var bool: aux12404_BOOL:: var_is_introduced ;
var bool: aux12405_BOOL:: var_is_introduced ;
var bool: aux12406_BOOL:: var_is_introduced ;
var {0,1}: aux12406_INTEGER :: var_is_introduced ;
var 1..43: aux12407:: var_is_introduced ;
var bool: aux12408_BOOL:: var_is_introduced ;
var bool: aux12409_BOOL:: var_is_introduced ;
var bool: aux12410_BOOL:: var_is_introduced ;
var bool: aux12411_BOOL:: var_is_introduced ;
var bool: aux12412_BOOL:: var_is_introduced ;
var {0,1}: aux12412_INTEGER :: var_is_introduced ;
var 2..44: aux12413:: var_is_introduced ;
var bool: aux12414_BOOL:: var_is_introduced ;
var bool: aux12415_BOOL:: var_is_introduced ;
var bool: aux12416_BOOL:: var_is_introduced ;
var bool: aux12417_BOOL:: var_is_introduced ;
var bool: aux12418_BOOL:: var_is_introduced ;
var {0,1}: aux12418_INTEGER :: var_is_introduced ;
var 2..44: aux12419:: var_is_introduced ;
var bool: aux12420_BOOL:: var_is_introduced ;
var bool: aux12421_BOOL:: var_is_introduced ;
var bool: aux12422_BOOL:: var_is_introduced ;
var bool: aux12423_BOOL:: var_is_introduced ;
var bool: aux12424_BOOL:: var_is_introduced ;
var {0,1}: aux12424_INTEGER :: var_is_introduced ;
var 3..45: aux12425:: var_is_introduced ;
var bool: aux12426_BOOL:: var_is_introduced ;
var bool: aux12427_BOOL:: var_is_introduced ;
var bool: aux12428_BOOL:: var_is_introduced ;
var bool: aux12429_BOOL:: var_is_introduced ;
var bool: aux12430_BOOL:: var_is_introduced ;
var {0,1}: aux12430_INTEGER :: var_is_introduced ;
var 2..44: aux12431:: var_is_introduced ;
var bool: aux12432_BOOL:: var_is_introduced ;
var bool: aux12433_BOOL:: var_is_introduced ;
var bool: aux12434_BOOL:: var_is_introduced ;
var bool: aux12435_BOOL:: var_is_introduced ;
var bool: aux12436_BOOL:: var_is_introduced ;
var {0,1}: aux12436_INTEGER :: var_is_introduced ;
var 2..44: aux12437:: var_is_introduced ;
var bool: aux12438_BOOL:: var_is_introduced ;
var bool: aux12439_BOOL:: var_is_introduced ;
var bool: aux12440_BOOL:: var_is_introduced ;
var bool: aux12441_BOOL:: var_is_introduced ;
var bool: aux12442_BOOL:: var_is_introduced ;
var {0,1}: aux12442_INTEGER :: var_is_introduced ;
var 3..45: aux12443:: var_is_introduced ;
var bool: aux12444_BOOL:: var_is_introduced ;
var bool: aux12445_BOOL:: var_is_introduced ;
var bool: aux12446_BOOL:: var_is_introduced ;
var bool: aux12447_BOOL:: var_is_introduced ;
var bool: aux12448_BOOL:: var_is_introduced ;
var {0,1}: aux12448_INTEGER :: var_is_introduced ;
var 2..44: aux12449:: var_is_introduced ;
var bool: aux12450_BOOL:: var_is_introduced ;
var bool: aux12451_BOOL:: var_is_introduced ;
var bool: aux12452_BOOL:: var_is_introduced ;
var bool: aux12453_BOOL:: var_is_introduced ;
var bool: aux12454_BOOL:: var_is_introduced ;
var {0,1}: aux12454_INTEGER :: var_is_introduced ;
var 3..45: aux12455:: var_is_introduced ;
var bool: aux12456_BOOL:: var_is_introduced ;
var bool: aux12457_BOOL:: var_is_introduced ;
var bool: aux12458_BOOL:: var_is_introduced ;
var bool: aux12459_BOOL:: var_is_introduced ;
var bool: aux12460_BOOL:: var_is_introduced ;
var {0,1}: aux12460_INTEGER :: var_is_introduced ;
var 3..45: aux12461:: var_is_introduced ;
var bool: aux12462_BOOL:: var_is_introduced ;
var bool: aux12463_BOOL:: var_is_introduced ;
var bool: aux12464_BOOL:: var_is_introduced ;
var bool: aux12465_BOOL:: var_is_introduced ;
var bool: aux12466_BOOL:: var_is_introduced ;
var {0,1}: aux12466_INTEGER :: var_is_introduced ;
var 3..45: aux12467:: var_is_introduced ;
var bool: aux12468_BOOL:: var_is_introduced ;
var bool: aux12469_BOOL:: var_is_introduced ;
var bool: aux12470_BOOL:: var_is_introduced ;
var bool: aux12471_BOOL:: var_is_introduced ;
var bool: aux12472_BOOL:: var_is_introduced ;
var {0,1}: aux12472_INTEGER :: var_is_introduced ;
var 4..46: aux12473:: var_is_introduced ;
var bool: aux12474_BOOL:: var_is_introduced ;
var bool: aux12475_BOOL:: var_is_introduced ;
var bool: aux12476_BOOL:: var_is_introduced ;
var bool: aux12477_BOOL:: var_is_introduced ;
var bool: aux12478_BOOL:: var_is_introduced ;
var {0,1}: aux12478_INTEGER :: var_is_introduced ;
var 2..44: aux12479:: var_is_introduced ;
var bool: aux12480_BOOL:: var_is_introduced ;
var bool: aux12481_BOOL:: var_is_introduced ;
var bool: aux12482_BOOL:: var_is_introduced ;
var {0,1}: aux12482_INTEGER :: var_is_introduced ;
var bool: aux12483_BOOL:: var_is_introduced ;
var bool: aux12484_BOOL:: var_is_introduced ;
var bool: aux12485_BOOL:: var_is_introduced ;
var bool: aux12486_BOOL:: var_is_introduced ;
var bool: aux12487_BOOL:: var_is_introduced ;
var 1..43: aux12488:: var_is_introduced ;
var bool: aux12489_BOOL:: var_is_introduced ;
var bool: aux12490_BOOL:: var_is_introduced ;
var bool: aux12491_BOOL:: var_is_introduced ;
var {0,1}: aux12491_INTEGER :: var_is_introduced ;
var bool: aux12492_BOOL:: var_is_introduced ;
var bool: aux12493_BOOL:: var_is_introduced ;
var 2..44: aux12494:: var_is_introduced ;
var bool: aux12495_BOOL:: var_is_introduced ;
var bool: aux12496_BOOL:: var_is_introduced ;
var bool: aux12497_BOOL:: var_is_introduced ;
var {0,1}: aux12497_INTEGER :: var_is_introduced ;
var bool: aux12498_BOOL:: var_is_introduced ;
var bool: aux12499_BOOL:: var_is_introduced ;
var 3..45: aux12500:: var_is_introduced ;
var bool: aux12501_BOOL:: var_is_introduced ;
var bool: aux12502_BOOL:: var_is_introduced ;
var bool: aux12503_BOOL:: var_is_introduced ;
var {0,1}: aux12503_INTEGER :: var_is_introduced ;
var bool: aux12504_BOOL:: var_is_introduced ;
var bool: aux12505_BOOL:: var_is_introduced ;
var 2..44: aux12506:: var_is_introduced ;
var bool: aux12507_BOOL:: var_is_introduced ;
var bool: aux12508_BOOL:: var_is_introduced ;
var bool: aux12509_BOOL:: var_is_introduced ;
var {0,1}: aux12509_INTEGER :: var_is_introduced ;
var bool: aux12510_BOOL:: var_is_introduced ;
var bool: aux12511_BOOL:: var_is_introduced ;
var 2..44: aux12512:: var_is_introduced ;
var bool: aux12513_BOOL:: var_is_introduced ;
var bool: aux12514_BOOL:: var_is_introduced ;
var bool: aux12515_BOOL:: var_is_introduced ;
var {0,1}: aux12515_INTEGER :: var_is_introduced ;
var bool: aux12516_BOOL:: var_is_introduced ;
var bool: aux12517_BOOL:: var_is_introduced ;
var 3..45: aux12518:: var_is_introduced ;
var bool: aux12519_BOOL:: var_is_introduced ;
var bool: aux12520_BOOL:: var_is_introduced ;
var bool: aux12521_BOOL:: var_is_introduced ;
var {0,1}: aux12521_INTEGER :: var_is_introduced ;
var bool: aux12522_BOOL:: var_is_introduced ;
var bool: aux12523_BOOL:: var_is_introduced ;
var 2..44: aux12524:: var_is_introduced ;
var bool: aux12525_BOOL:: var_is_introduced ;
var bool: aux12526_BOOL:: var_is_introduced ;
var bool: aux12527_BOOL:: var_is_introduced ;
var {0,1}: aux12527_INTEGER :: var_is_introduced ;
var bool: aux12528_BOOL:: var_is_introduced ;
var bool: aux12529_BOOL:: var_is_introduced ;
var 1..43: aux12530:: var_is_introduced ;
var bool: aux12531_BOOL:: var_is_introduced ;
var bool: aux12532_BOOL:: var_is_introduced ;
var bool: aux12533_BOOL:: var_is_introduced ;
var {0,1}: aux12533_INTEGER :: var_is_introduced ;
var bool: aux12534_BOOL:: var_is_introduced ;
var bool: aux12535_BOOL:: var_is_introduced ;
var 2..44: aux12536:: var_is_introduced ;
var bool: aux12537_BOOL:: var_is_introduced ;
var bool: aux12538_BOOL:: var_is_introduced ;
var bool: aux12539_BOOL:: var_is_introduced ;
var {0,1}: aux12539_INTEGER :: var_is_introduced ;
var bool: aux12540_BOOL:: var_is_introduced ;
var bool: aux12541_BOOL:: var_is_introduced ;
var 1..43: aux12542:: var_is_introduced ;
var bool: aux12543_BOOL:: var_is_introduced ;
var bool: aux12544_BOOL:: var_is_introduced ;
var bool: aux12545_BOOL:: var_is_introduced ;
var {0,1}: aux12545_INTEGER :: var_is_introduced ;
var bool: aux12546_BOOL:: var_is_introduced ;
var bool: aux12547_BOOL:: var_is_introduced ;
var 2..44: aux12548:: var_is_introduced ;
var bool: aux12549_BOOL:: var_is_introduced ;
var bool: aux12550_BOOL:: var_is_introduced ;
var bool: aux12551_BOOL:: var_is_introduced ;
var {0,1}: aux12551_INTEGER :: var_is_introduced ;
var bool: aux12552_BOOL:: var_is_introduced ;
var bool: aux12553_BOOL:: var_is_introduced ;
var 1..43: aux12554:: var_is_introduced ;
var bool: aux12555_BOOL:: var_is_introduced ;
var bool: aux12556_BOOL:: var_is_introduced ;
var bool: aux12557_BOOL:: var_is_introduced ;
var {0,1}: aux12557_INTEGER :: var_is_introduced ;
var bool: aux12558_BOOL:: var_is_introduced ;
var bool: aux12559_BOOL:: var_is_introduced ;
var 4..46: aux12560:: var_is_introduced ;
var bool: aux12561_BOOL:: var_is_introduced ;
var bool: aux12562_BOOL:: var_is_introduced ;
var bool: aux12563_BOOL:: var_is_introduced ;
var {0,1}: aux12563_INTEGER :: var_is_introduced ;
var bool: aux12564_BOOL:: var_is_introduced ;
var bool: aux12565_BOOL:: var_is_introduced ;
var 2..44: aux12566:: var_is_introduced ;
var bool: aux12567_BOOL:: var_is_introduced ;
var bool: aux12568_BOOL:: var_is_introduced ;
var bool: aux12569_BOOL:: var_is_introduced ;
var {0,1}: aux12569_INTEGER :: var_is_introduced ;
var bool: aux12570_BOOL:: var_is_introduced ;
var bool: aux12571_BOOL:: var_is_introduced ;
var 3..45: aux12572:: var_is_introduced ;
var bool: aux12573_BOOL:: var_is_introduced ;
var bool: aux12574_BOOL:: var_is_introduced ;
var bool: aux12575_BOOL:: var_is_introduced ;
var {0,1}: aux12575_INTEGER :: var_is_introduced ;
var bool: aux12576_BOOL:: var_is_introduced ;
var bool: aux12577_BOOL:: var_is_introduced ;
var 1..43: aux12578:: var_is_introduced ;
var bool: aux12579_BOOL:: var_is_introduced ;
var bool: aux12580_BOOL:: var_is_introduced ;
var bool: aux12581_BOOL:: var_is_introduced ;
var {0,1}: aux12581_INTEGER :: var_is_introduced ;
var bool: aux12582_BOOL:: var_is_introduced ;
var bool: aux12583_BOOL:: var_is_introduced ;
var 3..45: aux12584:: var_is_introduced ;
var bool: aux12585_BOOL:: var_is_introduced ;
var bool: aux12586_BOOL:: var_is_introduced ;
var bool: aux12587_BOOL:: var_is_introduced ;
var {0,1}: aux12587_INTEGER :: var_is_introduced ;
var bool: aux12588_BOOL:: var_is_introduced ;
var bool: aux12589_BOOL:: var_is_introduced ;
var 2..44: aux12590:: var_is_introduced ;
var bool: aux12591_BOOL:: var_is_introduced ;
var bool: aux12592_BOOL:: var_is_introduced ;
var bool: aux12593_BOOL:: var_is_introduced ;
var {0,1}: aux12593_INTEGER :: var_is_introduced ;
var bool: aux12594_BOOL:: var_is_introduced ;
var bool: aux12595_BOOL:: var_is_introduced ;
var 3..45: aux12596:: var_is_introduced ;
var bool: aux12597_BOOL:: var_is_introduced ;
var bool: aux12598_BOOL:: var_is_introduced ;
var bool: aux12599_BOOL:: var_is_introduced ;
var {0,1}: aux12599_INTEGER :: var_is_introduced ;
var bool: aux12600_BOOL:: var_is_introduced ;
var 2..44: aux12601:: var_is_introduced ;
var bool: aux12602_BOOL:: var_is_introduced ;
var bool: aux12603_BOOL:: var_is_introduced ;
var {0,1}: aux12603_INTEGER :: var_is_introduced ;
var bool: aux12604_BOOL:: var_is_introduced ;
var bool: aux12605_BOOL:: var_is_introduced ;
var bool: aux12606_BOOL:: var_is_introduced ;
var 1..43: aux12607:: var_is_introduced ;
var bool: aux12608_BOOL:: var_is_introduced ;
var bool: aux12609_BOOL:: var_is_introduced ;
var bool: aux12610_BOOL:: var_is_introduced ;
var {0,1}: aux12610_INTEGER :: var_is_introduced ;
var bool: aux12611_BOOL:: var_is_introduced ;
var bool: aux12612_BOOL:: var_is_introduced ;
var 2..44: aux12613:: var_is_introduced ;
var bool: aux12614_BOOL:: var_is_introduced ;
var bool: aux12615_BOOL:: var_is_introduced ;
var bool: aux12616_BOOL:: var_is_introduced ;
var {0,1}: aux12616_INTEGER :: var_is_introduced ;
var bool: aux12617_BOOL:: var_is_introduced ;
var bool: aux12618_BOOL:: var_is_introduced ;
var 3..45: aux12619:: var_is_introduced ;
var bool: aux12620_BOOL:: var_is_introduced ;
var bool: aux12621_BOOL:: var_is_introduced ;
var bool: aux12622_BOOL:: var_is_introduced ;
var {0,1}: aux12622_INTEGER :: var_is_introduced ;
var bool: aux12623_BOOL:: var_is_introduced ;
var bool: aux12624_BOOL:: var_is_introduced ;
var 2..44: aux12625:: var_is_introduced ;
var bool: aux12626_BOOL:: var_is_introduced ;
var bool: aux12627_BOOL:: var_is_introduced ;
var bool: aux12628_BOOL:: var_is_introduced ;
var {0,1}: aux12628_INTEGER :: var_is_introduced ;
var bool: aux12629_BOOL:: var_is_introduced ;
var bool: aux12630_BOOL:: var_is_introduced ;
var 2..44: aux12631:: var_is_introduced ;
var bool: aux12632_BOOL:: var_is_introduced ;
var bool: aux12633_BOOL:: var_is_introduced ;
var bool: aux12634_BOOL:: var_is_introduced ;
var {0,1}: aux12634_INTEGER :: var_is_introduced ;
var bool: aux12635_BOOL:: var_is_introduced ;
var bool: aux12636_BOOL:: var_is_introduced ;
var 3..45: aux12637:: var_is_introduced ;
var bool: aux12638_BOOL:: var_is_introduced ;
var bool: aux12639_BOOL:: var_is_introduced ;
var bool: aux12640_BOOL:: var_is_introduced ;
var {0,1}: aux12640_INTEGER :: var_is_introduced ;
var bool: aux12641_BOOL:: var_is_introduced ;
var bool: aux12642_BOOL:: var_is_introduced ;
var 2..44: aux12643:: var_is_introduced ;
var bool: aux12644_BOOL:: var_is_introduced ;
var bool: aux12645_BOOL:: var_is_introduced ;
var bool: aux12646_BOOL:: var_is_introduced ;
var {0,1}: aux12646_INTEGER :: var_is_introduced ;
var bool: aux12647_BOOL:: var_is_introduced ;
var bool: aux12648_BOOL:: var_is_introduced ;
var 1..43: aux12649:: var_is_introduced ;
var bool: aux12650_BOOL:: var_is_introduced ;
var bool: aux12651_BOOL:: var_is_introduced ;
var bool: aux12652_BOOL:: var_is_introduced ;
var {0,1}: aux12652_INTEGER :: var_is_introduced ;
var bool: aux12653_BOOL:: var_is_introduced ;
var bool: aux12654_BOOL:: var_is_introduced ;
var 2..44: aux12655:: var_is_introduced ;
var bool: aux12656_BOOL:: var_is_introduced ;
var bool: aux12657_BOOL:: var_is_introduced ;
var bool: aux12658_BOOL:: var_is_introduced ;
var {0,1}: aux12658_INTEGER :: var_is_introduced ;
var bool: aux12659_BOOL:: var_is_introduced ;
var bool: aux12660_BOOL:: var_is_introduced ;
var 1..43: aux12661:: var_is_introduced ;
var bool: aux12662_BOOL:: var_is_introduced ;
var bool: aux12663_BOOL:: var_is_introduced ;
var bool: aux12664_BOOL:: var_is_introduced ;
var {0,1}: aux12664_INTEGER :: var_is_introduced ;
var bool: aux12665_BOOL:: var_is_introduced ;
var bool: aux12666_BOOL:: var_is_introduced ;
var 2..44: aux12667:: var_is_introduced ;
var bool: aux12668_BOOL:: var_is_introduced ;
var bool: aux12669_BOOL:: var_is_introduced ;
var bool: aux12670_BOOL:: var_is_introduced ;
var {0,1}: aux12670_INTEGER :: var_is_introduced ;
var bool: aux12671_BOOL:: var_is_introduced ;
var bool: aux12672_BOOL:: var_is_introduced ;
var 2..44: aux12673:: var_is_introduced ;
var bool: aux12674_BOOL:: var_is_introduced ;
var bool: aux12675_BOOL:: var_is_introduced ;
var bool: aux12676_BOOL:: var_is_introduced ;
var {0,1}: aux12676_INTEGER :: var_is_introduced ;
var bool: aux12677_BOOL:: var_is_introduced ;
var bool: aux12678_BOOL:: var_is_introduced ;
var 1..43: aux12679:: var_is_introduced ;
var bool: aux12680_BOOL:: var_is_introduced ;
var bool: aux12681_BOOL:: var_is_introduced ;
var bool: aux12682_BOOL:: var_is_introduced ;
var {0,1}: aux12682_INTEGER :: var_is_introduced ;
var bool: aux12683_BOOL:: var_is_introduced ;
var bool: aux12684_BOOL:: var_is_introduced ;
var 4..46: aux12685:: var_is_introduced ;
var bool: aux12686_BOOL:: var_is_introduced ;
var bool: aux12687_BOOL:: var_is_introduced ;
var bool: aux12688_BOOL:: var_is_introduced ;
var {0,1}: aux12688_INTEGER :: var_is_introduced ;
var bool: aux12689_BOOL:: var_is_introduced ;
var bool: aux12690_BOOL:: var_is_introduced ;
var 3..45: aux12691:: var_is_introduced ;
var bool: aux12692_BOOL:: var_is_introduced ;
var bool: aux12693_BOOL:: var_is_introduced ;
var bool: aux12694_BOOL:: var_is_introduced ;
var {0,1}: aux12694_INTEGER :: var_is_introduced ;
var bool: aux12695_BOOL:: var_is_introduced ;
var bool: aux12696_BOOL:: var_is_introduced ;
var 1..43: aux12697:: var_is_introduced ;
var bool: aux12698_BOOL:: var_is_introduced ;
var bool: aux12699_BOOL:: var_is_introduced ;
var bool: aux12700_BOOL:: var_is_introduced ;
var {0,1}: aux12700_INTEGER :: var_is_introduced ;
var bool: aux12701_BOOL:: var_is_introduced ;
var bool: aux12702_BOOL:: var_is_introduced ;
var 3..45: aux12703:: var_is_introduced ;
var bool: aux12704_BOOL:: var_is_introduced ;
var bool: aux12705_BOOL:: var_is_introduced ;
var bool: aux12706_BOOL:: var_is_introduced ;
var {0,1}: aux12706_INTEGER :: var_is_introduced ;
var bool: aux12707_BOOL:: var_is_introduced ;
var bool: aux12708_BOOL:: var_is_introduced ;
var 2..44: aux12709:: var_is_introduced ;
var bool: aux12710_BOOL:: var_is_introduced ;
var bool: aux12711_BOOL:: var_is_introduced ;
var bool: aux12712_BOOL:: var_is_introduced ;
var {0,1}: aux12712_INTEGER :: var_is_introduced ;
var bool: aux12713_BOOL:: var_is_introduced ;
var bool: aux12714_BOOL:: var_is_introduced ;
var 3..45: aux12715:: var_is_introduced ;
var bool: aux12716_BOOL:: var_is_introduced ;
var bool: aux12717_BOOL:: var_is_introduced ;
var bool: aux12718_BOOL:: var_is_introduced ;
var {0,1}: aux12718_INTEGER :: var_is_introduced ;
var bool: aux12719_BOOL:: var_is_introduced ;
var 2..44: aux12720:: var_is_introduced ;
var bool: aux12721_BOOL:: var_is_introduced ;
var bool: aux12722_BOOL:: var_is_introduced ;
var {0,1}: aux12722_INTEGER :: var_is_introduced ;
var bool: aux12723_BOOL:: var_is_introduced ;
var bool: aux12724_BOOL:: var_is_introduced ;
var bool: aux12725_BOOL:: var_is_introduced ;
var 1..43: aux12726:: var_is_introduced ;
var bool: aux12727_BOOL:: var_is_introduced ;
var bool: aux12728_BOOL:: var_is_introduced ;
var bool: aux12729_BOOL:: var_is_introduced ;
var {0,1}: aux12729_INTEGER :: var_is_introduced ;
var bool: aux12730_BOOL:: var_is_introduced ;
var bool: aux12731_BOOL:: var_is_introduced ;
var 2..44: aux12732:: var_is_introduced ;
var bool: aux12733_BOOL:: var_is_introduced ;
var bool: aux12734_BOOL:: var_is_introduced ;
var bool: aux12735_BOOL:: var_is_introduced ;
var {0,1}: aux12735_INTEGER :: var_is_introduced ;
var bool: aux12736_BOOL:: var_is_introduced ;
var bool: aux12737_BOOL:: var_is_introduced ;
var 3..45: aux12738:: var_is_introduced ;
var bool: aux12739_BOOL:: var_is_introduced ;
var bool: aux12740_BOOL:: var_is_introduced ;
var bool: aux12741_BOOL:: var_is_introduced ;
var {0,1}: aux12741_INTEGER :: var_is_introduced ;
var bool: aux12742_BOOL:: var_is_introduced ;
var bool: aux12743_BOOL:: var_is_introduced ;
var 2..44: aux12744:: var_is_introduced ;
var bool: aux12745_BOOL:: var_is_introduced ;
var bool: aux12746_BOOL:: var_is_introduced ;
var bool: aux12747_BOOL:: var_is_introduced ;
var {0,1}: aux12747_INTEGER :: var_is_introduced ;
var bool: aux12748_BOOL:: var_is_introduced ;
var bool: aux12749_BOOL:: var_is_introduced ;
var 2..44: aux12750:: var_is_introduced ;
var bool: aux12751_BOOL:: var_is_introduced ;
var bool: aux12752_BOOL:: var_is_introduced ;
var bool: aux12753_BOOL:: var_is_introduced ;
var {0,1}: aux12753_INTEGER :: var_is_introduced ;
var bool: aux12754_BOOL:: var_is_introduced ;
var bool: aux12755_BOOL:: var_is_introduced ;
var 3..45: aux12756:: var_is_introduced ;
var bool: aux12757_BOOL:: var_is_introduced ;
var bool: aux12758_BOOL:: var_is_introduced ;
var bool: aux12759_BOOL:: var_is_introduced ;
var {0,1}: aux12759_INTEGER :: var_is_introduced ;
var bool: aux12760_BOOL:: var_is_introduced ;
var bool: aux12761_BOOL:: var_is_introduced ;
var 2..44: aux12762:: var_is_introduced ;
var bool: aux12763_BOOL:: var_is_introduced ;
var bool: aux12764_BOOL:: var_is_introduced ;
var bool: aux12765_BOOL:: var_is_introduced ;
var {0,1}: aux12765_INTEGER :: var_is_introduced ;
var bool: aux12766_BOOL:: var_is_introduced ;
var bool: aux12767_BOOL:: var_is_introduced ;
var 1..43: aux12768:: var_is_introduced ;
var bool: aux12769_BOOL:: var_is_introduced ;
var bool: aux12770_BOOL:: var_is_introduced ;
var bool: aux12771_BOOL:: var_is_introduced ;
var {0,1}: aux12771_INTEGER :: var_is_introduced ;
var bool: aux12772_BOOL:: var_is_introduced ;
var bool: aux12773_BOOL:: var_is_introduced ;
var 2..44: aux12774:: var_is_introduced ;
var bool: aux12775_BOOL:: var_is_introduced ;
var bool: aux12776_BOOL:: var_is_introduced ;
var bool: aux12777_BOOL:: var_is_introduced ;
var {0,1}: aux12777_INTEGER :: var_is_introduced ;
var bool: aux12778_BOOL:: var_is_introduced ;
var bool: aux12779_BOOL:: var_is_introduced ;
var 2..44: aux12780:: var_is_introduced ;
var bool: aux12781_BOOL:: var_is_introduced ;
var bool: aux12782_BOOL:: var_is_introduced ;
var bool: aux12783_BOOL:: var_is_introduced ;
var {0,1}: aux12783_INTEGER :: var_is_introduced ;
var bool: aux12784_BOOL:: var_is_introduced ;
var bool: aux12785_BOOL:: var_is_introduced ;
var 2..44: aux12786:: var_is_introduced ;
var bool: aux12787_BOOL:: var_is_introduced ;
var bool: aux12788_BOOL:: var_is_introduced ;
var bool: aux12789_BOOL:: var_is_introduced ;
var {0,1}: aux12789_INTEGER :: var_is_introduced ;
var bool: aux12790_BOOL:: var_is_introduced ;
var bool: aux12791_BOOL:: var_is_introduced ;
var 1..43: aux12792:: var_is_introduced ;
var bool: aux12793_BOOL:: var_is_introduced ;
var bool: aux12794_BOOL:: var_is_introduced ;
var bool: aux12795_BOOL:: var_is_introduced ;
var {0,1}: aux12795_INTEGER :: var_is_introduced ;
var bool: aux12796_BOOL:: var_is_introduced ;
var bool: aux12797_BOOL:: var_is_introduced ;
var 4..46: aux12798:: var_is_introduced ;
var bool: aux12799_BOOL:: var_is_introduced ;
var bool: aux12800_BOOL:: var_is_introduced ;
var bool: aux12801_BOOL:: var_is_introduced ;
var {0,1}: aux12801_INTEGER :: var_is_introduced ;
var bool: aux12802_BOOL:: var_is_introduced ;
var bool: aux12803_BOOL:: var_is_introduced ;
var 2..44: aux12804:: var_is_introduced ;
var bool: aux12805_BOOL:: var_is_introduced ;
var bool: aux12806_BOOL:: var_is_introduced ;
var bool: aux12807_BOOL:: var_is_introduced ;
var {0,1}: aux12807_INTEGER :: var_is_introduced ;
var bool: aux12808_BOOL:: var_is_introduced ;
var bool: aux12809_BOOL:: var_is_introduced ;
var 3..45: aux12810:: var_is_introduced ;
var bool: aux12811_BOOL:: var_is_introduced ;
var bool: aux12812_BOOL:: var_is_introduced ;
var bool: aux12813_BOOL:: var_is_introduced ;
var {0,1}: aux12813_INTEGER :: var_is_introduced ;
var bool: aux12814_BOOL:: var_is_introduced ;
var bool: aux12815_BOOL:: var_is_introduced ;
var 1..43: aux12816:: var_is_introduced ;
var bool: aux12817_BOOL:: var_is_introduced ;
var bool: aux12818_BOOL:: var_is_introduced ;
var bool: aux12819_BOOL:: var_is_introduced ;
var {0,1}: aux12819_INTEGER :: var_is_introduced ;
var bool: aux12820_BOOL:: var_is_introduced ;
var bool: aux12821_BOOL:: var_is_introduced ;
var 3..45: aux12822:: var_is_introduced ;
var bool: aux12823_BOOL:: var_is_introduced ;
var bool: aux12824_BOOL:: var_is_introduced ;
var bool: aux12825_BOOL:: var_is_introduced ;
var {0,1}: aux12825_INTEGER :: var_is_introduced ;
var bool: aux12826_BOOL:: var_is_introduced ;
var bool: aux12827_BOOL:: var_is_introduced ;
var 2..44: aux12828:: var_is_introduced ;
var bool: aux12829_BOOL:: var_is_introduced ;
var bool: aux12830_BOOL:: var_is_introduced ;
var bool: aux12831_BOOL:: var_is_introduced ;
var {0,1}: aux12831_INTEGER :: var_is_introduced ;
var bool: aux12832_BOOL:: var_is_introduced ;
var bool: aux12833_BOOL:: var_is_introduced ;
var 3..45: aux12834:: var_is_introduced ;
var bool: aux12835_BOOL:: var_is_introduced ;
var bool: aux12836_BOOL:: var_is_introduced ;
var bool: aux12837_BOOL:: var_is_introduced ;
var {0,1}: aux12837_INTEGER :: var_is_introduced ;
var bool: aux12838_BOOL:: var_is_introduced ;
var 1..43: aux12839:: var_is_introduced ;
var bool: aux12840_BOOL:: var_is_introduced ;
var bool: aux12841_BOOL:: var_is_introduced ;
var {0,1}: aux12841_INTEGER :: var_is_introduced ;
var bool: aux12842_BOOL:: var_is_introduced ;
var bool: aux12843_BOOL:: var_is_introduced ;
var bool: aux12844_BOOL:: var_is_introduced ;
var 1..43: aux12845:: var_is_introduced ;
var bool: aux12846_BOOL:: var_is_introduced ;
var bool: aux12847_BOOL:: var_is_introduced ;
var bool: aux12848_BOOL:: var_is_introduced ;
var {0,1}: aux12848_INTEGER :: var_is_introduced ;
var bool: aux12849_BOOL:: var_is_introduced ;
var bool: aux12850_BOOL:: var_is_introduced ;
var 2..44: aux12851:: var_is_introduced ;
var bool: aux12852_BOOL:: var_is_introduced ;
var bool: aux12853_BOOL:: var_is_introduced ;
var bool: aux12854_BOOL:: var_is_introduced ;
var {0,1}: aux12854_INTEGER :: var_is_introduced ;
var bool: aux12855_BOOL:: var_is_introduced ;
var bool: aux12856_BOOL:: var_is_introduced ;
var 3..45: aux12857:: var_is_introduced ;
var bool: aux12858_BOOL:: var_is_introduced ;
var bool: aux12859_BOOL:: var_is_introduced ;
var bool: aux12860_BOOL:: var_is_introduced ;
var {0,1}: aux12860_INTEGER :: var_is_introduced ;
var bool: aux12861_BOOL:: var_is_introduced ;
var bool: aux12862_BOOL:: var_is_introduced ;
var 2..44: aux12863:: var_is_introduced ;
var bool: aux12864_BOOL:: var_is_introduced ;
var bool: aux12865_BOOL:: var_is_introduced ;
var bool: aux12866_BOOL:: var_is_introduced ;
var {0,1}: aux12866_INTEGER :: var_is_introduced ;
var bool: aux12867_BOOL:: var_is_introduced ;
var bool: aux12868_BOOL:: var_is_introduced ;
var 3..45: aux12869:: var_is_introduced ;
var bool: aux12870_BOOL:: var_is_introduced ;
var bool: aux12871_BOOL:: var_is_introduced ;
var bool: aux12872_BOOL:: var_is_introduced ;
var {0,1}: aux12872_INTEGER :: var_is_introduced ;
var bool: aux12873_BOOL:: var_is_introduced ;
var bool: aux12874_BOOL:: var_is_introduced ;
var 2..44: aux12875:: var_is_introduced ;
var bool: aux12876_BOOL:: var_is_introduced ;
var bool: aux12877_BOOL:: var_is_introduced ;
var bool: aux12878_BOOL:: var_is_introduced ;
var {0,1}: aux12878_INTEGER :: var_is_introduced ;
var bool: aux12879_BOOL:: var_is_introduced ;
var bool: aux12880_BOOL:: var_is_introduced ;
var 1..43: aux12881:: var_is_introduced ;
var bool: aux12882_BOOL:: var_is_introduced ;
var bool: aux12883_BOOL:: var_is_introduced ;
var bool: aux12884_BOOL:: var_is_introduced ;
var {0,1}: aux12884_INTEGER :: var_is_introduced ;
var bool: aux12885_BOOL:: var_is_introduced ;
var bool: aux12886_BOOL:: var_is_introduced ;
var 2..44: aux12887:: var_is_introduced ;
var bool: aux12888_BOOL:: var_is_introduced ;
var bool: aux12889_BOOL:: var_is_introduced ;
var bool: aux12890_BOOL:: var_is_introduced ;
var {0,1}: aux12890_INTEGER :: var_is_introduced ;
var bool: aux12891_BOOL:: var_is_introduced ;
var bool: aux12892_BOOL:: var_is_introduced ;
var 1..43: aux12893:: var_is_introduced ;
var bool: aux12894_BOOL:: var_is_introduced ;
var bool: aux12895_BOOL:: var_is_introduced ;
var bool: aux12896_BOOL:: var_is_introduced ;
var {0,1}: aux12896_INTEGER :: var_is_introduced ;
var bool: aux12897_BOOL:: var_is_introduced ;
var bool: aux12898_BOOL:: var_is_introduced ;
var 2..44: aux12899:: var_is_introduced ;
var bool: aux12900_BOOL:: var_is_introduced ;
var bool: aux12901_BOOL:: var_is_introduced ;
var bool: aux12902_BOOL:: var_is_introduced ;
var {0,1}: aux12902_INTEGER :: var_is_introduced ;
var bool: aux12903_BOOL:: var_is_introduced ;
var bool: aux12904_BOOL:: var_is_introduced ;
var 2..44: aux12905:: var_is_introduced ;
var bool: aux12906_BOOL:: var_is_introduced ;
var bool: aux12907_BOOL:: var_is_introduced ;
var bool: aux12908_BOOL:: var_is_introduced ;
var {0,1}: aux12908_INTEGER :: var_is_introduced ;
var bool: aux12909_BOOL:: var_is_introduced ;
var bool: aux12910_BOOL:: var_is_introduced ;
var 1..43: aux12911:: var_is_introduced ;
var bool: aux12912_BOOL:: var_is_introduced ;
var bool: aux12913_BOOL:: var_is_introduced ;
var bool: aux12914_BOOL:: var_is_introduced ;
var {0,1}: aux12914_INTEGER :: var_is_introduced ;
var bool: aux12915_BOOL:: var_is_introduced ;
var bool: aux12916_BOOL:: var_is_introduced ;
var 4..46: aux12917:: var_is_introduced ;
var bool: aux12918_BOOL:: var_is_introduced ;
var bool: aux12919_BOOL:: var_is_introduced ;
var bool: aux12920_BOOL:: var_is_introduced ;
var {0,1}: aux12920_INTEGER :: var_is_introduced ;
var bool: aux12921_BOOL:: var_is_introduced ;
var bool: aux12922_BOOL:: var_is_introduced ;
var 2..44: aux12923:: var_is_introduced ;
var bool: aux12924_BOOL:: var_is_introduced ;
var bool: aux12925_BOOL:: var_is_introduced ;
var bool: aux12926_BOOL:: var_is_introduced ;
var {0,1}: aux12926_INTEGER :: var_is_introduced ;
var bool: aux12927_BOOL:: var_is_introduced ;
var bool: aux12928_BOOL:: var_is_introduced ;
var 3..45: aux12929:: var_is_introduced ;
var bool: aux12930_BOOL:: var_is_introduced ;
var bool: aux12931_BOOL:: var_is_introduced ;
var bool: aux12932_BOOL:: var_is_introduced ;
var {0,1}: aux12932_INTEGER :: var_is_introduced ;
var bool: aux12933_BOOL:: var_is_introduced ;
var bool: aux12934_BOOL:: var_is_introduced ;
var 1..43: aux12935:: var_is_introduced ;
var bool: aux12936_BOOL:: var_is_introduced ;
var bool: aux12937_BOOL:: var_is_introduced ;
var bool: aux12938_BOOL:: var_is_introduced ;
var {0,1}: aux12938_INTEGER :: var_is_introduced ;
var bool: aux12939_BOOL:: var_is_introduced ;
var bool: aux12940_BOOL:: var_is_introduced ;
var 3..45: aux12941:: var_is_introduced ;
var bool: aux12942_BOOL:: var_is_introduced ;
var bool: aux12943_BOOL:: var_is_introduced ;
var bool: aux12944_BOOL:: var_is_introduced ;
var {0,1}: aux12944_INTEGER :: var_is_introduced ;
var bool: aux12945_BOOL:: var_is_introduced ;
var bool: aux12946_BOOL:: var_is_introduced ;
var 2..44: aux12947:: var_is_introduced ;
var bool: aux12948_BOOL:: var_is_introduced ;
var bool: aux12949_BOOL:: var_is_introduced ;
var bool: aux12950_BOOL:: var_is_introduced ;
var {0,1}: aux12950_INTEGER :: var_is_introduced ;
var bool: aux12951_BOOL:: var_is_introduced ;
var bool: aux12952_BOOL:: var_is_introduced ;
var 3..45: aux12953:: var_is_introduced ;
var bool: aux12954_BOOL:: var_is_introduced ;
var bool: aux12955_BOOL:: var_is_introduced ;
var bool: aux12956_BOOL:: var_is_introduced ;
var {0,1}: aux12956_INTEGER :: var_is_introduced ;
var bool: aux12957_BOOL:: var_is_introduced ;
var 2..44: aux12958:: var_is_introduced ;
var bool: aux12959_BOOL:: var_is_introduced ;
var bool: aux12960_BOOL:: var_is_introduced ;
var {0,1}: aux12960_INTEGER :: var_is_introduced ;
var bool: aux12961_BOOL:: var_is_introduced ;
var bool: aux12962_BOOL:: var_is_introduced ;
var bool: aux12963_BOOL:: var_is_introduced ;
var 1..43: aux12964:: var_is_introduced ;
var bool: aux12965_BOOL:: var_is_introduced ;
var bool: aux12966_BOOL:: var_is_introduced ;
var bool: aux12967_BOOL:: var_is_introduced ;
var {0,1}: aux12967_INTEGER :: var_is_introduced ;
var bool: aux12968_BOOL:: var_is_introduced ;
var bool: aux12969_BOOL:: var_is_introduced ;
var 2..44: aux12970:: var_is_introduced ;
var bool: aux12971_BOOL:: var_is_introduced ;
var bool: aux12972_BOOL:: var_is_introduced ;
var bool: aux12973_BOOL:: var_is_introduced ;
var {0,1}: aux12973_INTEGER :: var_is_introduced ;
var bool: aux12974_BOOL:: var_is_introduced ;
var bool: aux12975_BOOL:: var_is_introduced ;
var 3..45: aux12976:: var_is_introduced ;
var bool: aux12977_BOOL:: var_is_introduced ;
var bool: aux12978_BOOL:: var_is_introduced ;
var bool: aux12979_BOOL:: var_is_introduced ;
var {0,1}: aux12979_INTEGER :: var_is_introduced ;
var bool: aux12980_BOOL:: var_is_introduced ;
var bool: aux12981_BOOL:: var_is_introduced ;
var 2..44: aux12982:: var_is_introduced ;
var bool: aux12983_BOOL:: var_is_introduced ;
var bool: aux12984_BOOL:: var_is_introduced ;
var bool: aux12985_BOOL:: var_is_introduced ;
var {0,1}: aux12985_INTEGER :: var_is_introduced ;
var bool: aux12986_BOOL:: var_is_introduced ;
var bool: aux12987_BOOL:: var_is_introduced ;
var 2..44: aux12988:: var_is_introduced ;
var bool: aux12989_BOOL:: var_is_introduced ;
var bool: aux12990_BOOL:: var_is_introduced ;
var bool: aux12991_BOOL:: var_is_introduced ;
var {0,1}: aux12991_INTEGER :: var_is_introduced ;
var bool: aux12992_BOOL:: var_is_introduced ;
var bool: aux12993_BOOL:: var_is_introduced ;
var 3..45: aux12994:: var_is_introduced ;
var bool: aux12995_BOOL:: var_is_introduced ;
var bool: aux12996_BOOL:: var_is_introduced ;
var bool: aux12997_BOOL:: var_is_introduced ;
var {0,1}: aux12997_INTEGER :: var_is_introduced ;
var bool: aux12998_BOOL:: var_is_introduced ;
var bool: aux12999_BOOL:: var_is_introduced ;
var 1..43: aux13000:: var_is_introduced ;
var bool: aux13001_BOOL:: var_is_introduced ;
var bool: aux13002_BOOL:: var_is_introduced ;
var bool: aux13003_BOOL:: var_is_introduced ;
var {0,1}: aux13003_INTEGER :: var_is_introduced ;
var bool: aux13004_BOOL:: var_is_introduced ;
var bool: aux13005_BOOL:: var_is_introduced ;
var 2..44: aux13006:: var_is_introduced ;
var bool: aux13007_BOOL:: var_is_introduced ;
var bool: aux13008_BOOL:: var_is_introduced ;
var bool: aux13009_BOOL:: var_is_introduced ;
var {0,1}: aux13009_INTEGER :: var_is_introduced ;
var bool: aux13010_BOOL:: var_is_introduced ;
var bool: aux13011_BOOL:: var_is_introduced ;
var 1..43: aux13012:: var_is_introduced ;
var bool: aux13013_BOOL:: var_is_introduced ;
var bool: aux13014_BOOL:: var_is_introduced ;
var bool: aux13015_BOOL:: var_is_introduced ;
var {0,1}: aux13015_INTEGER :: var_is_introduced ;
var bool: aux13016_BOOL:: var_is_introduced ;
var bool: aux13017_BOOL:: var_is_introduced ;
var 2..44: aux13018:: var_is_introduced ;
var bool: aux13019_BOOL:: var_is_introduced ;
var bool: aux13020_BOOL:: var_is_introduced ;
var bool: aux13021_BOOL:: var_is_introduced ;
var {0,1}: aux13021_INTEGER :: var_is_introduced ;
var bool: aux13022_BOOL:: var_is_introduced ;
var bool: aux13023_BOOL:: var_is_introduced ;
var 2..44: aux13024:: var_is_introduced ;
var bool: aux13025_BOOL:: var_is_introduced ;
var bool: aux13026_BOOL:: var_is_introduced ;
var bool: aux13027_BOOL:: var_is_introduced ;
var {0,1}: aux13027_INTEGER :: var_is_introduced ;
var bool: aux13028_BOOL:: var_is_introduced ;
var bool: aux13029_BOOL:: var_is_introduced ;
var 1..43: aux13030:: var_is_introduced ;
var bool: aux13031_BOOL:: var_is_introduced ;
var bool: aux13032_BOOL:: var_is_introduced ;
var bool: aux13033_BOOL:: var_is_introduced ;
var {0,1}: aux13033_INTEGER :: var_is_introduced ;
var bool: aux13034_BOOL:: var_is_introduced ;
var bool: aux13035_BOOL:: var_is_introduced ;
var 4..46: aux13036:: var_is_introduced ;
var bool: aux13037_BOOL:: var_is_introduced ;
var bool: aux13038_BOOL:: var_is_introduced ;
var bool: aux13039_BOOL:: var_is_introduced ;
var {0,1}: aux13039_INTEGER :: var_is_introduced ;
var bool: aux13040_BOOL:: var_is_introduced ;
var bool: aux13041_BOOL:: var_is_introduced ;
var 2..44: aux13042:: var_is_introduced ;
var bool: aux13043_BOOL:: var_is_introduced ;
var bool: aux13044_BOOL:: var_is_introduced ;
var bool: aux13045_BOOL:: var_is_introduced ;
var {0,1}: aux13045_INTEGER :: var_is_introduced ;
var bool: aux13046_BOOL:: var_is_introduced ;
var bool: aux13047_BOOL:: var_is_introduced ;
var 3..45: aux13048:: var_is_introduced ;
var bool: aux13049_BOOL:: var_is_introduced ;
var bool: aux13050_BOOL:: var_is_introduced ;
var bool: aux13051_BOOL:: var_is_introduced ;
var {0,1}: aux13051_INTEGER :: var_is_introduced ;
var bool: aux13052_BOOL:: var_is_introduced ;
var bool: aux13053_BOOL:: var_is_introduced ;
var 1..43: aux13054:: var_is_introduced ;
var bool: aux13055_BOOL:: var_is_introduced ;
var bool: aux13056_BOOL:: var_is_introduced ;
var bool: aux13057_BOOL:: var_is_introduced ;
var {0,1}: aux13057_INTEGER :: var_is_introduced ;
var bool: aux13058_BOOL:: var_is_introduced ;
var bool: aux13059_BOOL:: var_is_introduced ;
var 3..45: aux13060:: var_is_introduced ;
var bool: aux13061_BOOL:: var_is_introduced ;
var bool: aux13062_BOOL:: var_is_introduced ;
var bool: aux13063_BOOL:: var_is_introduced ;
var {0,1}: aux13063_INTEGER :: var_is_introduced ;
var bool: aux13064_BOOL:: var_is_introduced ;
var bool: aux13065_BOOL:: var_is_introduced ;
var 2..44: aux13066:: var_is_introduced ;
var bool: aux13067_BOOL:: var_is_introduced ;
var bool: aux13068_BOOL:: var_is_introduced ;
var bool: aux13069_BOOL:: var_is_introduced ;
var {0,1}: aux13069_INTEGER :: var_is_introduced ;
var bool: aux13070_BOOL:: var_is_introduced ;
var bool: aux13071_BOOL:: var_is_introduced ;
var 3..45: aux13072:: var_is_introduced ;
var bool: aux13073_BOOL:: var_is_introduced ;
var bool: aux13074_BOOL:: var_is_introduced ;
var bool: aux13075_BOOL:: var_is_introduced ;
var {0,1}: aux13075_INTEGER :: var_is_introduced ;
var bool: aux13076_BOOL:: var_is_introduced ;
var 2..44: aux13077:: var_is_introduced ;
var bool: aux13078_BOOL:: var_is_introduced ;
var bool: aux13079_BOOL:: var_is_introduced ;
var {0,1}: aux13079_INTEGER :: var_is_introduced ;
var bool: aux13080_BOOL:: var_is_introduced ;
var bool: aux13081_BOOL:: var_is_introduced ;
var bool: aux13082_BOOL:: var_is_introduced ;
var 1..43: aux13083:: var_is_introduced ;
var bool: aux13084_BOOL:: var_is_introduced ;
var bool: aux13085_BOOL:: var_is_introduced ;
var bool: aux13086_BOOL:: var_is_introduced ;
var {0,1}: aux13086_INTEGER :: var_is_introduced ;
var bool: aux13087_BOOL:: var_is_introduced ;
var bool: aux13088_BOOL:: var_is_introduced ;
var 2..44: aux13089:: var_is_introduced ;
var bool: aux13090_BOOL:: var_is_introduced ;
var bool: aux13091_BOOL:: var_is_introduced ;
var bool: aux13092_BOOL:: var_is_introduced ;
var {0,1}: aux13092_INTEGER :: var_is_introduced ;
var bool: aux13093_BOOL:: var_is_introduced ;
var bool: aux13094_BOOL:: var_is_introduced ;
var 2..44: aux13095:: var_is_introduced ;
var bool: aux13096_BOOL:: var_is_introduced ;
var bool: aux13097_BOOL:: var_is_introduced ;
var bool: aux13098_BOOL:: var_is_introduced ;
var {0,1}: aux13098_INTEGER :: var_is_introduced ;
var bool: aux13099_BOOL:: var_is_introduced ;
var bool: aux13100_BOOL:: var_is_introduced ;
var 2..44: aux13101:: var_is_introduced ;
var bool: aux13102_BOOL:: var_is_introduced ;
var bool: aux13103_BOOL:: var_is_introduced ;
var bool: aux13104_BOOL:: var_is_introduced ;
var {0,1}: aux13104_INTEGER :: var_is_introduced ;
var bool: aux13105_BOOL:: var_is_introduced ;
var bool: aux13106_BOOL:: var_is_introduced ;
var 3..45: aux13107:: var_is_introduced ;
var bool: aux13108_BOOL:: var_is_introduced ;
var bool: aux13109_BOOL:: var_is_introduced ;
var bool: aux13110_BOOL:: var_is_introduced ;
var {0,1}: aux13110_INTEGER :: var_is_introduced ;
var bool: aux13111_BOOL:: var_is_introduced ;
var bool: aux13112_BOOL:: var_is_introduced ;
var 2..44: aux13113:: var_is_introduced ;
var bool: aux13114_BOOL:: var_is_introduced ;
var bool: aux13115_BOOL:: var_is_introduced ;
var bool: aux13116_BOOL:: var_is_introduced ;
var {0,1}: aux13116_INTEGER :: var_is_introduced ;
var bool: aux13117_BOOL:: var_is_introduced ;
var bool: aux13118_BOOL:: var_is_introduced ;
var 1..43: aux13119:: var_is_introduced ;
var bool: aux13120_BOOL:: var_is_introduced ;
var bool: aux13121_BOOL:: var_is_introduced ;
var bool: aux13122_BOOL:: var_is_introduced ;
var {0,1}: aux13122_INTEGER :: var_is_introduced ;
var bool: aux13123_BOOL:: var_is_introduced ;
var bool: aux13124_BOOL:: var_is_introduced ;
var 2..44: aux13125:: var_is_introduced ;
var bool: aux13126_BOOL:: var_is_introduced ;
var bool: aux13127_BOOL:: var_is_introduced ;
var bool: aux13128_BOOL:: var_is_introduced ;
var {0,1}: aux13128_INTEGER :: var_is_introduced ;
var bool: aux13129_BOOL:: var_is_introduced ;
var bool: aux13130_BOOL:: var_is_introduced ;
var 1..43: aux13131:: var_is_introduced ;
var bool: aux13132_BOOL:: var_is_introduced ;
var bool: aux13133_BOOL:: var_is_introduced ;
var bool: aux13134_BOOL:: var_is_introduced ;
var {0,1}: aux13134_INTEGER :: var_is_introduced ;
var bool: aux13135_BOOL:: var_is_introduced ;
var bool: aux13136_BOOL:: var_is_introduced ;
var 2..44: aux13137:: var_is_introduced ;
var bool: aux13138_BOOL:: var_is_introduced ;
var bool: aux13139_BOOL:: var_is_introduced ;
var bool: aux13140_BOOL:: var_is_introduced ;
var {0,1}: aux13140_INTEGER :: var_is_introduced ;
var bool: aux13141_BOOL:: var_is_introduced ;
var bool: aux13142_BOOL:: var_is_introduced ;
var 2..44: aux13143:: var_is_introduced ;
var bool: aux13144_BOOL:: var_is_introduced ;
var bool: aux13145_BOOL:: var_is_introduced ;
var bool: aux13146_BOOL:: var_is_introduced ;
var {0,1}: aux13146_INTEGER :: var_is_introduced ;
var bool: aux13147_BOOL:: var_is_introduced ;
var bool: aux13148_BOOL:: var_is_introduced ;
var 1..43: aux13149:: var_is_introduced ;
var bool: aux13150_BOOL:: var_is_introduced ;
var bool: aux13151_BOOL:: var_is_introduced ;
var bool: aux13152_BOOL:: var_is_introduced ;
var {0,1}: aux13152_INTEGER :: var_is_introduced ;
var bool: aux13153_BOOL:: var_is_introduced ;
var bool: aux13154_BOOL:: var_is_introduced ;
var 4..46: aux13155:: var_is_introduced ;
var bool: aux13156_BOOL:: var_is_introduced ;
var bool: aux13157_BOOL:: var_is_introduced ;
var bool: aux13158_BOOL:: var_is_introduced ;
var {0,1}: aux13158_INTEGER :: var_is_introduced ;
var bool: aux13159_BOOL:: var_is_introduced ;
var bool: aux13160_BOOL:: var_is_introduced ;
var 2..44: aux13161:: var_is_introduced ;
var bool: aux13162_BOOL:: var_is_introduced ;
var bool: aux13163_BOOL:: var_is_introduced ;
var bool: aux13164_BOOL:: var_is_introduced ;
var {0,1}: aux13164_INTEGER :: var_is_introduced ;
var bool: aux13165_BOOL:: var_is_introduced ;
var bool: aux13166_BOOL:: var_is_introduced ;
var 3..45: aux13167:: var_is_introduced ;
var bool: aux13168_BOOL:: var_is_introduced ;
var bool: aux13169_BOOL:: var_is_introduced ;
var bool: aux13170_BOOL:: var_is_introduced ;
var {0,1}: aux13170_INTEGER :: var_is_introduced ;
var bool: aux13171_BOOL:: var_is_introduced ;
var bool: aux13172_BOOL:: var_is_introduced ;
var 1..43: aux13173:: var_is_introduced ;
var bool: aux13174_BOOL:: var_is_introduced ;
var bool: aux13175_BOOL:: var_is_introduced ;
var bool: aux13176_BOOL:: var_is_introduced ;
var {0,1}: aux13176_INTEGER :: var_is_introduced ;
var bool: aux13177_BOOL:: var_is_introduced ;
var bool: aux13178_BOOL:: var_is_introduced ;
var 3..45: aux13179:: var_is_introduced ;
var bool: aux13180_BOOL:: var_is_introduced ;
var bool: aux13181_BOOL:: var_is_introduced ;
var bool: aux13182_BOOL:: var_is_introduced ;
var {0,1}: aux13182_INTEGER :: var_is_introduced ;
var bool: aux13183_BOOL:: var_is_introduced ;
var bool: aux13184_BOOL:: var_is_introduced ;
var 2..44: aux13185:: var_is_introduced ;
var bool: aux13186_BOOL:: var_is_introduced ;
var bool: aux13187_BOOL:: var_is_introduced ;
var bool: aux13188_BOOL:: var_is_introduced ;
var {0,1}: aux13188_INTEGER :: var_is_introduced ;
var bool: aux13189_BOOL:: var_is_introduced ;
var bool: aux13190_BOOL:: var_is_introduced ;
var 3..45: aux13191:: var_is_introduced ;
var bool: aux13192_BOOL:: var_is_introduced ;
var bool: aux13193_BOOL:: var_is_introduced ;
var bool: aux13194_BOOL:: var_is_introduced ;
var {0,1}: aux13194_INTEGER :: var_is_introduced ;
var bool: aux13195_BOOL:: var_is_introduced ;
var 3..45: aux13196:: var_is_introduced ;
var bool: aux13197_BOOL:: var_is_introduced ;
var bool: aux13198_BOOL:: var_is_introduced ;
var {0,1}: aux13198_INTEGER :: var_is_introduced ;
var bool: aux13199_BOOL:: var_is_introduced ;
var bool: aux13200_BOOL:: var_is_introduced ;
var bool: aux13201_BOOL:: var_is_introduced ;
var 1..43: aux13202:: var_is_introduced ;
var bool: aux13203_BOOL:: var_is_introduced ;
var bool: aux13204_BOOL:: var_is_introduced ;
var bool: aux13205_BOOL:: var_is_introduced ;
var {0,1}: aux13205_INTEGER :: var_is_introduced ;
var bool: aux13206_BOOL:: var_is_introduced ;
var bool: aux13207_BOOL:: var_is_introduced ;
var 3..45: aux13208:: var_is_introduced ;
var bool: aux13209_BOOL:: var_is_introduced ;
var bool: aux13210_BOOL:: var_is_introduced ;
var bool: aux13211_BOOL:: var_is_introduced ;
var {0,1}: aux13211_INTEGER :: var_is_introduced ;
var bool: aux13212_BOOL:: var_is_introduced ;
var bool: aux13213_BOOL:: var_is_introduced ;
var 2..44: aux13214:: var_is_introduced ;
var bool: aux13215_BOOL:: var_is_introduced ;
var bool: aux13216_BOOL:: var_is_introduced ;
var bool: aux13217_BOOL:: var_is_introduced ;
var {0,1}: aux13217_INTEGER :: var_is_introduced ;
var bool: aux13218_BOOL:: var_is_introduced ;
var bool: aux13219_BOOL:: var_is_introduced ;
var 2..44: aux13220:: var_is_introduced ;
var bool: aux13221_BOOL:: var_is_introduced ;
var bool: aux13222_BOOL:: var_is_introduced ;
var bool: aux13223_BOOL:: var_is_introduced ;
var {0,1}: aux13223_INTEGER :: var_is_introduced ;
var bool: aux13224_BOOL:: var_is_introduced ;
var bool: aux13225_BOOL:: var_is_introduced ;
var 3..45: aux13226:: var_is_introduced ;
var bool: aux13227_BOOL:: var_is_introduced ;
var bool: aux13228_BOOL:: var_is_introduced ;
var bool: aux13229_BOOL:: var_is_introduced ;
var {0,1}: aux13229_INTEGER :: var_is_introduced ;
var bool: aux13230_BOOL:: var_is_introduced ;
var bool: aux13231_BOOL:: var_is_introduced ;
var 2..44: aux13232:: var_is_introduced ;
var bool: aux13233_BOOL:: var_is_introduced ;
var bool: aux13234_BOOL:: var_is_introduced ;
var bool: aux13235_BOOL:: var_is_introduced ;
var {0,1}: aux13235_INTEGER :: var_is_introduced ;
var bool: aux13236_BOOL:: var_is_introduced ;
var bool: aux13237_BOOL:: var_is_introduced ;
var 1..43: aux13238:: var_is_introduced ;
var bool: aux13239_BOOL:: var_is_introduced ;
var bool: aux13240_BOOL:: var_is_introduced ;
var bool: aux13241_BOOL:: var_is_introduced ;
var {0,1}: aux13241_INTEGER :: var_is_introduced ;
var bool: aux13242_BOOL:: var_is_introduced ;
var bool: aux13243_BOOL:: var_is_introduced ;
var 2..44: aux13244:: var_is_introduced ;
var bool: aux13245_BOOL:: var_is_introduced ;
var bool: aux13246_BOOL:: var_is_introduced ;
var bool: aux13247_BOOL:: var_is_introduced ;
var {0,1}: aux13247_INTEGER :: var_is_introduced ;
var bool: aux13248_BOOL:: var_is_introduced ;
var bool: aux13249_BOOL:: var_is_introduced ;
var 1..43: aux13250:: var_is_introduced ;
var bool: aux13251_BOOL:: var_is_introduced ;
var bool: aux13252_BOOL:: var_is_introduced ;
var bool: aux13253_BOOL:: var_is_introduced ;
var {0,1}: aux13253_INTEGER :: var_is_introduced ;
var bool: aux13254_BOOL:: var_is_introduced ;
var bool: aux13255_BOOL:: var_is_introduced ;
var 2..44: aux13256:: var_is_introduced ;
var bool: aux13257_BOOL:: var_is_introduced ;
var bool: aux13258_BOOL:: var_is_introduced ;
var bool: aux13259_BOOL:: var_is_introduced ;
var {0,1}: aux13259_INTEGER :: var_is_introduced ;
var bool: aux13260_BOOL:: var_is_introduced ;
var bool: aux13261_BOOL:: var_is_introduced ;
var 2..44: aux13262:: var_is_introduced ;
var bool: aux13263_BOOL:: var_is_introduced ;
var bool: aux13264_BOOL:: var_is_introduced ;
var bool: aux13265_BOOL:: var_is_introduced ;
var {0,1}: aux13265_INTEGER :: var_is_introduced ;
var bool: aux13266_BOOL:: var_is_introduced ;
var bool: aux13267_BOOL:: var_is_introduced ;
var 1..43: aux13268:: var_is_introduced ;
var bool: aux13269_BOOL:: var_is_introduced ;
var bool: aux13270_BOOL:: var_is_introduced ;
var bool: aux13271_BOOL:: var_is_introduced ;
var {0,1}: aux13271_INTEGER :: var_is_introduced ;
var bool: aux13272_BOOL:: var_is_introduced ;
var bool: aux13273_BOOL:: var_is_introduced ;
var 4..46: aux13274:: var_is_introduced ;
var bool: aux13275_BOOL:: var_is_introduced ;
var bool: aux13276_BOOL:: var_is_introduced ;
var bool: aux13277_BOOL:: var_is_introduced ;
var {0,1}: aux13277_INTEGER :: var_is_introduced ;
var bool: aux13278_BOOL:: var_is_introduced ;
var bool: aux13279_BOOL:: var_is_introduced ;
var 2..44: aux13280:: var_is_introduced ;
var bool: aux13281_BOOL:: var_is_introduced ;
var bool: aux13282_BOOL:: var_is_introduced ;
var bool: aux13283_BOOL:: var_is_introduced ;
var {0,1}: aux13283_INTEGER :: var_is_introduced ;
var bool: aux13284_BOOL:: var_is_introduced ;
var bool: aux13285_BOOL:: var_is_introduced ;
var 3..45: aux13286:: var_is_introduced ;
var bool: aux13287_BOOL:: var_is_introduced ;
var bool: aux13288_BOOL:: var_is_introduced ;
var bool: aux13289_BOOL:: var_is_introduced ;
var {0,1}: aux13289_INTEGER :: var_is_introduced ;
var bool: aux13290_BOOL:: var_is_introduced ;
var bool: aux13291_BOOL:: var_is_introduced ;
var 1..43: aux13292:: var_is_introduced ;
var bool: aux13293_BOOL:: var_is_introduced ;
var bool: aux13294_BOOL:: var_is_introduced ;
var bool: aux13295_BOOL:: var_is_introduced ;
var {0,1}: aux13295_INTEGER :: var_is_introduced ;
var bool: aux13296_BOOL:: var_is_introduced ;
var bool: aux13297_BOOL:: var_is_introduced ;
var 3..45: aux13298:: var_is_introduced ;
var bool: aux13299_BOOL:: var_is_introduced ;
var bool: aux13300_BOOL:: var_is_introduced ;
var bool: aux13301_BOOL:: var_is_introduced ;
var {0,1}: aux13301_INTEGER :: var_is_introduced ;
var bool: aux13302_BOOL:: var_is_introduced ;
var bool: aux13303_BOOL:: var_is_introduced ;
var 2..44: aux13304:: var_is_introduced ;
var bool: aux13305_BOOL:: var_is_introduced ;
var bool: aux13306_BOOL:: var_is_introduced ;
var bool: aux13307_BOOL:: var_is_introduced ;
var {0,1}: aux13307_INTEGER :: var_is_introduced ;
var bool: aux13308_BOOL:: var_is_introduced ;
var bool: aux13309_BOOL:: var_is_introduced ;
var 3..45: aux13310:: var_is_introduced ;
var bool: aux13311_BOOL:: var_is_introduced ;
var bool: aux13312_BOOL:: var_is_introduced ;
var bool: aux13313_BOOL:: var_is_introduced ;
var {0,1}: aux13313_INTEGER :: var_is_introduced ;
var bool: aux13314_BOOL:: var_is_introduced ;
var 2..44: aux13315:: var_is_introduced ;
var bool: aux13316_BOOL:: var_is_introduced ;
var bool: aux13317_BOOL:: var_is_introduced ;
var {0,1}: aux13317_INTEGER :: var_is_introduced ;
var bool: aux13318_BOOL:: var_is_introduced ;
var bool: aux13319_BOOL:: var_is_introduced ;
var bool: aux13320_BOOL:: var_is_introduced ;
var 1..43: aux13321:: var_is_introduced ;
var bool: aux13322_BOOL:: var_is_introduced ;
var bool: aux13323_BOOL:: var_is_introduced ;
var bool: aux13324_BOOL:: var_is_introduced ;
var {0,1}: aux13324_INTEGER :: var_is_introduced ;
var bool: aux13325_BOOL:: var_is_introduced ;
var bool: aux13326_BOOL:: var_is_introduced ;
var 2..44: aux13327:: var_is_introduced ;
var bool: aux13328_BOOL:: var_is_introduced ;
var bool: aux13329_BOOL:: var_is_introduced ;
var bool: aux13330_BOOL:: var_is_introduced ;
var {0,1}: aux13330_INTEGER :: var_is_introduced ;
var bool: aux13331_BOOL:: var_is_introduced ;
var bool: aux13332_BOOL:: var_is_introduced ;
var 3..45: aux13333:: var_is_introduced ;
var bool: aux13334_BOOL:: var_is_introduced ;
var bool: aux13335_BOOL:: var_is_introduced ;
var bool: aux13336_BOOL:: var_is_introduced ;
var {0,1}: aux13336_INTEGER :: var_is_introduced ;
var bool: aux13337_BOOL:: var_is_introduced ;
var bool: aux13338_BOOL:: var_is_introduced ;
var 2..44: aux13339:: var_is_introduced ;
var bool: aux13340_BOOL:: var_is_introduced ;
var bool: aux13341_BOOL:: var_is_introduced ;
var bool: aux13342_BOOL:: var_is_introduced ;
var {0,1}: aux13342_INTEGER :: var_is_introduced ;
var bool: aux13343_BOOL:: var_is_introduced ;
var bool: aux13344_BOOL:: var_is_introduced ;
var 2..44: aux13345:: var_is_introduced ;
var bool: aux13346_BOOL:: var_is_introduced ;
var bool: aux13347_BOOL:: var_is_introduced ;
var bool: aux13348_BOOL:: var_is_introduced ;
var {0,1}: aux13348_INTEGER :: var_is_introduced ;
var bool: aux13349_BOOL:: var_is_introduced ;
var bool: aux13350_BOOL:: var_is_introduced ;
var 3..45: aux13351:: var_is_introduced ;
var bool: aux13352_BOOL:: var_is_introduced ;
var bool: aux13353_BOOL:: var_is_introduced ;
var bool: aux13354_BOOL:: var_is_introduced ;
var {0,1}: aux13354_INTEGER :: var_is_introduced ;
var bool: aux13355_BOOL:: var_is_introduced ;
var bool: aux13356_BOOL:: var_is_introduced ;
var 2..44: aux13357:: var_is_introduced ;
var bool: aux13358_BOOL:: var_is_introduced ;
var bool: aux13359_BOOL:: var_is_introduced ;
var bool: aux13360_BOOL:: var_is_introduced ;
var {0,1}: aux13360_INTEGER :: var_is_introduced ;
var bool: aux13361_BOOL:: var_is_introduced ;
var bool: aux13362_BOOL:: var_is_introduced ;
var 1..43: aux13363:: var_is_introduced ;
var bool: aux13364_BOOL:: var_is_introduced ;
var bool: aux13365_BOOL:: var_is_introduced ;
var bool: aux13366_BOOL:: var_is_introduced ;
var {0,1}: aux13366_INTEGER :: var_is_introduced ;
var bool: aux13367_BOOL:: var_is_introduced ;
var bool: aux13368_BOOL:: var_is_introduced ;
var 2..44: aux13369:: var_is_introduced ;
var bool: aux13370_BOOL:: var_is_introduced ;
var bool: aux13371_BOOL:: var_is_introduced ;
var bool: aux13372_BOOL:: var_is_introduced ;
var {0,1}: aux13372_INTEGER :: var_is_introduced ;
var bool: aux13373_BOOL:: var_is_introduced ;
var bool: aux13374_BOOL:: var_is_introduced ;
var 1..43: aux13375:: var_is_introduced ;
var bool: aux13376_BOOL:: var_is_introduced ;
var bool: aux13377_BOOL:: var_is_introduced ;
var bool: aux13378_BOOL:: var_is_introduced ;
var {0,1}: aux13378_INTEGER :: var_is_introduced ;
var bool: aux13379_BOOL:: var_is_introduced ;
var bool: aux13380_BOOL:: var_is_introduced ;
var 2..44: aux13381:: var_is_introduced ;
var bool: aux13382_BOOL:: var_is_introduced ;
var bool: aux13383_BOOL:: var_is_introduced ;
var bool: aux13384_BOOL:: var_is_introduced ;
var {0,1}: aux13384_INTEGER :: var_is_introduced ;
var bool: aux13385_BOOL:: var_is_introduced ;
var bool: aux13386_BOOL:: var_is_introduced ;
var 1..43: aux13387:: var_is_introduced ;
var bool: aux13388_BOOL:: var_is_introduced ;
var bool: aux13389_BOOL:: var_is_introduced ;
var bool: aux13390_BOOL:: var_is_introduced ;
var {0,1}: aux13390_INTEGER :: var_is_introduced ;
var bool: aux13391_BOOL:: var_is_introduced ;
var bool: aux13392_BOOL:: var_is_introduced ;
var 4..46: aux13393:: var_is_introduced ;
var bool: aux13394_BOOL:: var_is_introduced ;
var bool: aux13395_BOOL:: var_is_introduced ;
var bool: aux13396_BOOL:: var_is_introduced ;
var {0,1}: aux13396_INTEGER :: var_is_introduced ;
var bool: aux13397_BOOL:: var_is_introduced ;
var bool: aux13398_BOOL:: var_is_introduced ;
var 2..44: aux13399:: var_is_introduced ;
var bool: aux13400_BOOL:: var_is_introduced ;
var bool: aux13401_BOOL:: var_is_introduced ;
var bool: aux13402_BOOL:: var_is_introduced ;
var {0,1}: aux13402_INTEGER :: var_is_introduced ;
var bool: aux13403_BOOL:: var_is_introduced ;
var bool: aux13404_BOOL:: var_is_introduced ;
var 3..45: aux13405:: var_is_introduced ;
var bool: aux13406_BOOL:: var_is_introduced ;
var bool: aux13407_BOOL:: var_is_introduced ;
var bool: aux13408_BOOL:: var_is_introduced ;
var {0,1}: aux13408_INTEGER :: var_is_introduced ;
var bool: aux13409_BOOL:: var_is_introduced ;
var bool: aux13410_BOOL:: var_is_introduced ;
var 1..43: aux13411:: var_is_introduced ;
var bool: aux13412_BOOL:: var_is_introduced ;
var bool: aux13413_BOOL:: var_is_introduced ;
var bool: aux13414_BOOL:: var_is_introduced ;
var {0,1}: aux13414_INTEGER :: var_is_introduced ;
var bool: aux13415_BOOL:: var_is_introduced ;
var bool: aux13416_BOOL:: var_is_introduced ;
var 3..45: aux13417:: var_is_introduced ;
var bool: aux13418_BOOL:: var_is_introduced ;
var bool: aux13419_BOOL:: var_is_introduced ;
var bool: aux13420_BOOL:: var_is_introduced ;
var {0,1}: aux13420_INTEGER :: var_is_introduced ;
var bool: aux13421_BOOL:: var_is_introduced ;
var bool: aux13422_BOOL:: var_is_introduced ;
var 2..44: aux13423:: var_is_introduced ;
var bool: aux13424_BOOL:: var_is_introduced ;
var bool: aux13425_BOOL:: var_is_introduced ;
var bool: aux13426_BOOL:: var_is_introduced ;
var {0,1}: aux13426_INTEGER :: var_is_introduced ;
var bool: aux13427_BOOL:: var_is_introduced ;
var bool: aux13428_BOOL:: var_is_introduced ;
var 3..45: aux13429:: var_is_introduced ;
var bool: aux13430_BOOL:: var_is_introduced ;
var bool: aux13431_BOOL:: var_is_introduced ;
var bool: aux13432_BOOL:: var_is_introduced ;
var {0,1}: aux13432_INTEGER :: var_is_introduced ;
var bool: aux13433_BOOL:: var_is_introduced ;
var 2..44: aux13434:: var_is_introduced ;
var bool: aux13435_BOOL:: var_is_introduced ;
var bool: aux13436_BOOL:: var_is_introduced ;
var {0,1}: aux13436_INTEGER :: var_is_introduced ;
var bool: aux13437_BOOL:: var_is_introduced ;
var bool: aux13438_BOOL:: var_is_introduced ;
var bool: aux13439_BOOL:: var_is_introduced ;
var 1..43: aux13440:: var_is_introduced ;
var bool: aux13441_BOOL:: var_is_introduced ;
var bool: aux13442_BOOL:: var_is_introduced ;
var bool: aux13443_BOOL:: var_is_introduced ;
var {0,1}: aux13443_INTEGER :: var_is_introduced ;
var bool: aux13444_BOOL:: var_is_introduced ;
var bool: aux13445_BOOL:: var_is_introduced ;
var 2..44: aux13446:: var_is_introduced ;
var bool: aux13447_BOOL:: var_is_introduced ;
var bool: aux13448_BOOL:: var_is_introduced ;
var bool: aux13449_BOOL:: var_is_introduced ;
var {0,1}: aux13449_INTEGER :: var_is_introduced ;
var bool: aux13450_BOOL:: var_is_introduced ;
var bool: aux13451_BOOL:: var_is_introduced ;
var 3..45: aux13452:: var_is_introduced ;
var bool: aux13453_BOOL:: var_is_introduced ;
var bool: aux13454_BOOL:: var_is_introduced ;
var bool: aux13455_BOOL:: var_is_introduced ;
var {0,1}: aux13455_INTEGER :: var_is_introduced ;
var bool: aux13456_BOOL:: var_is_introduced ;
var bool: aux13457_BOOL:: var_is_introduced ;
var 2..44: aux13458:: var_is_introduced ;
var bool: aux13459_BOOL:: var_is_introduced ;
var bool: aux13460_BOOL:: var_is_introduced ;
var bool: aux13461_BOOL:: var_is_introduced ;
var {0,1}: aux13461_INTEGER :: var_is_introduced ;
var bool: aux13462_BOOL:: var_is_introduced ;
var bool: aux13463_BOOL:: var_is_introduced ;
var 2..44: aux13464:: var_is_introduced ;
var bool: aux13465_BOOL:: var_is_introduced ;
var bool: aux13466_BOOL:: var_is_introduced ;
var bool: aux13467_BOOL:: var_is_introduced ;
var {0,1}: aux13467_INTEGER :: var_is_introduced ;
var bool: aux13468_BOOL:: var_is_introduced ;
var bool: aux13469_BOOL:: var_is_introduced ;
var 2..44: aux13470:: var_is_introduced ;
var bool: aux13471_BOOL:: var_is_introduced ;
var bool: aux13472_BOOL:: var_is_introduced ;
var bool: aux13473_BOOL:: var_is_introduced ;
var {0,1}: aux13473_INTEGER :: var_is_introduced ;
var bool: aux13474_BOOL:: var_is_introduced ;
var bool: aux13475_BOOL:: var_is_introduced ;
var 1..43: aux13476:: var_is_introduced ;
var bool: aux13477_BOOL:: var_is_introduced ;
var bool: aux13478_BOOL:: var_is_introduced ;
var bool: aux13479_BOOL:: var_is_introduced ;
var {0,1}: aux13479_INTEGER :: var_is_introduced ;
var bool: aux13480_BOOL:: var_is_introduced ;
var bool: aux13481_BOOL:: var_is_introduced ;
var 2..44: aux13482:: var_is_introduced ;
var bool: aux13483_BOOL:: var_is_introduced ;
var bool: aux13484_BOOL:: var_is_introduced ;
var bool: aux13485_BOOL:: var_is_introduced ;
var {0,1}: aux13485_INTEGER :: var_is_introduced ;
var bool: aux13486_BOOL:: var_is_introduced ;
var bool: aux13487_BOOL:: var_is_introduced ;
var 1..43: aux13488:: var_is_introduced ;
var bool: aux13489_BOOL:: var_is_introduced ;
var bool: aux13490_BOOL:: var_is_introduced ;
var bool: aux13491_BOOL:: var_is_introduced ;
var {0,1}: aux13491_INTEGER :: var_is_introduced ;
var bool: aux13492_BOOL:: var_is_introduced ;
var bool: aux13493_BOOL:: var_is_introduced ;
var 2..44: aux13494:: var_is_introduced ;
var bool: aux13495_BOOL:: var_is_introduced ;
var bool: aux13496_BOOL:: var_is_introduced ;
var bool: aux13497_BOOL:: var_is_introduced ;
var {0,1}: aux13497_INTEGER :: var_is_introduced ;
var bool: aux13498_BOOL:: var_is_introduced ;
var bool: aux13499_BOOL:: var_is_introduced ;
var 2..44: aux13500:: var_is_introduced ;
var bool: aux13501_BOOL:: var_is_introduced ;
var bool: aux13502_BOOL:: var_is_introduced ;
var bool: aux13503_BOOL:: var_is_introduced ;
var {0,1}: aux13503_INTEGER :: var_is_introduced ;
var bool: aux13504_BOOL:: var_is_introduced ;
var bool: aux13505_BOOL:: var_is_introduced ;
var 1..43: aux13506:: var_is_introduced ;
var bool: aux13507_BOOL:: var_is_introduced ;
var bool: aux13508_BOOL:: var_is_introduced ;
var bool: aux13509_BOOL:: var_is_introduced ;
var {0,1}: aux13509_INTEGER :: var_is_introduced ;
var bool: aux13510_BOOL:: var_is_introduced ;
var bool: aux13511_BOOL:: var_is_introduced ;
var 4..46: aux13512:: var_is_introduced ;
var bool: aux13513_BOOL:: var_is_introduced ;
var bool: aux13514_BOOL:: var_is_introduced ;
var bool: aux13515_BOOL:: var_is_introduced ;
var {0,1}: aux13515_INTEGER :: var_is_introduced ;
var bool: aux13516_BOOL:: var_is_introduced ;
var bool: aux13517_BOOL:: var_is_introduced ;
var 2..44: aux13518:: var_is_introduced ;
var bool: aux13519_BOOL:: var_is_introduced ;
var bool: aux13520_BOOL:: var_is_introduced ;
var bool: aux13521_BOOL:: var_is_introduced ;
var {0,1}: aux13521_INTEGER :: var_is_introduced ;
var bool: aux13522_BOOL:: var_is_introduced ;
var bool: aux13523_BOOL:: var_is_introduced ;
var 3..45: aux13524:: var_is_introduced ;
var bool: aux13525_BOOL:: var_is_introduced ;
var bool: aux13526_BOOL:: var_is_introduced ;
var bool: aux13527_BOOL:: var_is_introduced ;
var {0,1}: aux13527_INTEGER :: var_is_introduced ;
var bool: aux13528_BOOL:: var_is_introduced ;
var bool: aux13529_BOOL:: var_is_introduced ;
var 1..43: aux13530:: var_is_introduced ;
var bool: aux13531_BOOL:: var_is_introduced ;
var bool: aux13532_BOOL:: var_is_introduced ;
var bool: aux13533_BOOL:: var_is_introduced ;
var {0,1}: aux13533_INTEGER :: var_is_introduced ;
var bool: aux13534_BOOL:: var_is_introduced ;
var bool: aux13535_BOOL:: var_is_introduced ;
var 3..45: aux13536:: var_is_introduced ;
var bool: aux13537_BOOL:: var_is_introduced ;
var bool: aux13538_BOOL:: var_is_introduced ;
var bool: aux13539_BOOL:: var_is_introduced ;
var {0,1}: aux13539_INTEGER :: var_is_introduced ;
var bool: aux13540_BOOL:: var_is_introduced ;
var bool: aux13541_BOOL:: var_is_introduced ;
var 2..44: aux13542:: var_is_introduced ;
var bool: aux13543_BOOL:: var_is_introduced ;
var bool: aux13544_BOOL:: var_is_introduced ;
var bool: aux13545_BOOL:: var_is_introduced ;
var {0,1}: aux13545_INTEGER :: var_is_introduced ;
var bool: aux13546_BOOL:: var_is_introduced ;
var bool: aux13547_BOOL:: var_is_introduced ;
var 3..45: aux13548:: var_is_introduced ;
var bool: aux13549_BOOL:: var_is_introduced ;
var bool: aux13550_BOOL:: var_is_introduced ;
var bool: aux13551_BOOL:: var_is_introduced ;
var {0,1}: aux13551_INTEGER :: var_is_introduced ;
var bool: aux13552_BOOL:: var_is_introduced ;
var 3..45: aux13553:: var_is_introduced ;
var bool: aux13554_BOOL:: var_is_introduced ;
var bool: aux13555_BOOL:: var_is_introduced ;
var {0,1}: aux13555_INTEGER :: var_is_introduced ;
var bool: aux13556_BOOL:: var_is_introduced ;
var bool: aux13557_BOOL:: var_is_introduced ;
var bool: aux13558_BOOL:: var_is_introduced ;
var 1..43: aux13559:: var_is_introduced ;
var bool: aux13560_BOOL:: var_is_introduced ;
var bool: aux13561_BOOL:: var_is_introduced ;
var bool: aux13562_BOOL:: var_is_introduced ;
var {0,1}: aux13562_INTEGER :: var_is_introduced ;
var bool: aux13563_BOOL:: var_is_introduced ;
var bool: aux13564_BOOL:: var_is_introduced ;
var 2..44: aux13565:: var_is_introduced ;
var bool: aux13566_BOOL:: var_is_introduced ;
var bool: aux13567_BOOL:: var_is_introduced ;
var bool: aux13568_BOOL:: var_is_introduced ;
var {0,1}: aux13568_INTEGER :: var_is_introduced ;
var bool: aux13569_BOOL:: var_is_introduced ;
var bool: aux13570_BOOL:: var_is_introduced ;
var 3..45: aux13571:: var_is_introduced ;
var bool: aux13572_BOOL:: var_is_introduced ;
var bool: aux13573_BOOL:: var_is_introduced ;
var bool: aux13574_BOOL:: var_is_introduced ;
var {0,1}: aux13574_INTEGER :: var_is_introduced ;
var bool: aux13575_BOOL:: var_is_introduced ;
var bool: aux13576_BOOL:: var_is_introduced ;
var 2..44: aux13577:: var_is_introduced ;
var bool: aux13578_BOOL:: var_is_introduced ;
var bool: aux13579_BOOL:: var_is_introduced ;
var bool: aux13580_BOOL:: var_is_introduced ;
var {0,1}: aux13580_INTEGER :: var_is_introduced ;
var bool: aux13581_BOOL:: var_is_introduced ;
var bool: aux13582_BOOL:: var_is_introduced ;
var 2..44: aux13583:: var_is_introduced ;
var bool: aux13584_BOOL:: var_is_introduced ;
var bool: aux13585_BOOL:: var_is_introduced ;
var bool: aux13586_BOOL:: var_is_introduced ;
var {0,1}: aux13586_INTEGER :: var_is_introduced ;
var bool: aux13587_BOOL:: var_is_introduced ;
var bool: aux13588_BOOL:: var_is_introduced ;
var 3..45: aux13589:: var_is_introduced ;
var bool: aux13590_BOOL:: var_is_introduced ;
var bool: aux13591_BOOL:: var_is_introduced ;
var bool: aux13592_BOOL:: var_is_introduced ;
var {0,1}: aux13592_INTEGER :: var_is_introduced ;
var bool: aux13593_BOOL:: var_is_introduced ;
var bool: aux13594_BOOL:: var_is_introduced ;
var 2..44: aux13595:: var_is_introduced ;
var bool: aux13596_BOOL:: var_is_introduced ;
var bool: aux13597_BOOL:: var_is_introduced ;
var bool: aux13598_BOOL:: var_is_introduced ;
var {0,1}: aux13598_INTEGER :: var_is_introduced ;
var bool: aux13599_BOOL:: var_is_introduced ;
var bool: aux13600_BOOL:: var_is_introduced ;
var 1..43: aux13601:: var_is_introduced ;
var bool: aux13602_BOOL:: var_is_introduced ;
var bool: aux13603_BOOL:: var_is_introduced ;
var bool: aux13604_BOOL:: var_is_introduced ;
var {0,1}: aux13604_INTEGER :: var_is_introduced ;
var bool: aux13605_BOOL:: var_is_introduced ;
var bool: aux13606_BOOL:: var_is_introduced ;
var 2..44: aux13607:: var_is_introduced ;
var bool: aux13608_BOOL:: var_is_introduced ;
var bool: aux13609_BOOL:: var_is_introduced ;
var bool: aux13610_BOOL:: var_is_introduced ;
var {0,1}: aux13610_INTEGER :: var_is_introduced ;
var bool: aux13611_BOOL:: var_is_introduced ;
var bool: aux13612_BOOL:: var_is_introduced ;
var 1..43: aux13613:: var_is_introduced ;
var bool: aux13614_BOOL:: var_is_introduced ;
var bool: aux13615_BOOL:: var_is_introduced ;
var bool: aux13616_BOOL:: var_is_introduced ;
var {0,1}: aux13616_INTEGER :: var_is_introduced ;
var bool: aux13617_BOOL:: var_is_introduced ;
var bool: aux13618_BOOL:: var_is_introduced ;
var 2..44: aux13619:: var_is_introduced ;
var bool: aux13620_BOOL:: var_is_introduced ;
var bool: aux13621_BOOL:: var_is_introduced ;
var bool: aux13622_BOOL:: var_is_introduced ;
var {0,1}: aux13622_INTEGER :: var_is_introduced ;
var bool: aux13623_BOOL:: var_is_introduced ;
var bool: aux13624_BOOL:: var_is_introduced ;
var 2..44: aux13625:: var_is_introduced ;
var bool: aux13626_BOOL:: var_is_introduced ;
var bool: aux13627_BOOL:: var_is_introduced ;
var bool: aux13628_BOOL:: var_is_introduced ;
var {0,1}: aux13628_INTEGER :: var_is_introduced ;
var bool: aux13629_BOOL:: var_is_introduced ;
var bool: aux13630_BOOL:: var_is_introduced ;
var 1..43: aux13631:: var_is_introduced ;
var bool: aux13632_BOOL:: var_is_introduced ;
var bool: aux13633_BOOL:: var_is_introduced ;
var bool: aux13634_BOOL:: var_is_introduced ;
var {0,1}: aux13634_INTEGER :: var_is_introduced ;
var bool: aux13635_BOOL:: var_is_introduced ;
var bool: aux13636_BOOL:: var_is_introduced ;
var 4..46: aux13637:: var_is_introduced ;
var bool: aux13638_BOOL:: var_is_introduced ;
var bool: aux13639_BOOL:: var_is_introduced ;
var bool: aux13640_BOOL:: var_is_introduced ;
var {0,1}: aux13640_INTEGER :: var_is_introduced ;
var bool: aux13641_BOOL:: var_is_introduced ;
var bool: aux13642_BOOL:: var_is_introduced ;
var 2..44: aux13643:: var_is_introduced ;
var bool: aux13644_BOOL:: var_is_introduced ;
var bool: aux13645_BOOL:: var_is_introduced ;
var bool: aux13646_BOOL:: var_is_introduced ;
var {0,1}: aux13646_INTEGER :: var_is_introduced ;
var bool: aux13647_BOOL:: var_is_introduced ;
var bool: aux13648_BOOL:: var_is_introduced ;
var 3..45: aux13649:: var_is_introduced ;
var bool: aux13650_BOOL:: var_is_introduced ;
var bool: aux13651_BOOL:: var_is_introduced ;
var bool: aux13652_BOOL:: var_is_introduced ;
var {0,1}: aux13652_INTEGER :: var_is_introduced ;
var bool: aux13653_BOOL:: var_is_introduced ;
var bool: aux13654_BOOL:: var_is_introduced ;
var 1..43: aux13655:: var_is_introduced ;
var bool: aux13656_BOOL:: var_is_introduced ;
var bool: aux13657_BOOL:: var_is_introduced ;
var bool: aux13658_BOOL:: var_is_introduced ;
var {0,1}: aux13658_INTEGER :: var_is_introduced ;
var bool: aux13659_BOOL:: var_is_introduced ;
var bool: aux13660_BOOL:: var_is_introduced ;
var 2..44: aux13661:: var_is_introduced ;
var bool: aux13662_BOOL:: var_is_introduced ;
var bool: aux13663_BOOL:: var_is_introduced ;
var bool: aux13664_BOOL:: var_is_introduced ;
var {0,1}: aux13664_INTEGER :: var_is_introduced ;
var bool: aux13665_BOOL:: var_is_introduced ;
var bool: aux13666_BOOL:: var_is_introduced ;
var 3..45: aux13667:: var_is_introduced ;
var bool: aux13668_BOOL:: var_is_introduced ;
var bool: aux13669_BOOL:: var_is_introduced ;
var bool: aux13670_BOOL:: var_is_introduced ;
var {0,1}: aux13670_INTEGER :: var_is_introduced ;
var bool: aux13671_BOOL:: var_is_introduced ;
var 3..45: aux13672:: var_is_introduced ;
var bool: aux13673_BOOL:: var_is_introduced ;
var bool: aux13674_BOOL:: var_is_introduced ;
var {0,1}: aux13674_INTEGER :: var_is_introduced ;
var bool: aux13675_BOOL:: var_is_introduced ;
var bool: aux13676_BOOL:: var_is_introduced ;
var bool: aux13677_BOOL:: var_is_introduced ;
var 2..44: aux13678:: var_is_introduced ;
var bool: aux13679_BOOL:: var_is_introduced ;
var bool: aux13680_BOOL:: var_is_introduced ;
var bool: aux13681_BOOL:: var_is_introduced ;
var {0,1}: aux13681_INTEGER :: var_is_introduced ;
var bool: aux13682_BOOL:: var_is_introduced ;
var bool: aux13683_BOOL:: var_is_introduced ;
var 3..45: aux13684:: var_is_introduced ;
var bool: aux13685_BOOL:: var_is_introduced ;
var bool: aux13686_BOOL:: var_is_introduced ;
var bool: aux13687_BOOL:: var_is_introduced ;
var {0,1}: aux13687_INTEGER :: var_is_introduced ;
var bool: aux13688_BOOL:: var_is_introduced ;
var bool: aux13689_BOOL:: var_is_introduced ;
var 2..44: aux13690:: var_is_introduced ;
var bool: aux13691_BOOL:: var_is_introduced ;
var bool: aux13692_BOOL:: var_is_introduced ;
var bool: aux13693_BOOL:: var_is_introduced ;
var {0,1}: aux13693_INTEGER :: var_is_introduced ;
var bool: aux13694_BOOL:: var_is_introduced ;
var bool: aux13695_BOOL:: var_is_introduced ;
var 2..44: aux13696:: var_is_introduced ;
var bool: aux13697_BOOL:: var_is_introduced ;
var bool: aux13698_BOOL:: var_is_introduced ;
var bool: aux13699_BOOL:: var_is_introduced ;
var {0,1}: aux13699_INTEGER :: var_is_introduced ;
var bool: aux13700_BOOL:: var_is_introduced ;
var bool: aux13701_BOOL:: var_is_introduced ;
var 3..45: aux13702:: var_is_introduced ;
var bool: aux13703_BOOL:: var_is_introduced ;
var bool: aux13704_BOOL:: var_is_introduced ;
var bool: aux13705_BOOL:: var_is_introduced ;
var {0,1}: aux13705_INTEGER :: var_is_introduced ;
var bool: aux13706_BOOL:: var_is_introduced ;
var bool: aux13707_BOOL:: var_is_introduced ;
var 2..44: aux13708:: var_is_introduced ;
var bool: aux13709_BOOL:: var_is_introduced ;
var bool: aux13710_BOOL:: var_is_introduced ;
var bool: aux13711_BOOL:: var_is_introduced ;
var {0,1}: aux13711_INTEGER :: var_is_introduced ;
var bool: aux13712_BOOL:: var_is_introduced ;
var bool: aux13713_BOOL:: var_is_introduced ;
var 1..43: aux13714:: var_is_introduced ;
var bool: aux13715_BOOL:: var_is_introduced ;
var bool: aux13716_BOOL:: var_is_introduced ;
var bool: aux13717_BOOL:: var_is_introduced ;
var {0,1}: aux13717_INTEGER :: var_is_introduced ;
var bool: aux13718_BOOL:: var_is_introduced ;
var bool: aux13719_BOOL:: var_is_introduced ;
var 2..44: aux13720:: var_is_introduced ;
var bool: aux13721_BOOL:: var_is_introduced ;
var bool: aux13722_BOOL:: var_is_introduced ;
var bool: aux13723_BOOL:: var_is_introduced ;
var {0,1}: aux13723_INTEGER :: var_is_introduced ;
var bool: aux13724_BOOL:: var_is_introduced ;
var bool: aux13725_BOOL:: var_is_introduced ;
var 1..43: aux13726:: var_is_introduced ;
var bool: aux13727_BOOL:: var_is_introduced ;
var bool: aux13728_BOOL:: var_is_introduced ;
var bool: aux13729_BOOL:: var_is_introduced ;
var {0,1}: aux13729_INTEGER :: var_is_introduced ;
var bool: aux13730_BOOL:: var_is_introduced ;
var bool: aux13731_BOOL:: var_is_introduced ;
var 2..44: aux13732:: var_is_introduced ;
var bool: aux13733_BOOL:: var_is_introduced ;
var bool: aux13734_BOOL:: var_is_introduced ;
var bool: aux13735_BOOL:: var_is_introduced ;
var {0,1}: aux13735_INTEGER :: var_is_introduced ;
var bool: aux13736_BOOL:: var_is_introduced ;
var bool: aux13737_BOOL:: var_is_introduced ;
var 2..44: aux13738:: var_is_introduced ;
var bool: aux13739_BOOL:: var_is_introduced ;
var bool: aux13740_BOOL:: var_is_introduced ;
var bool: aux13741_BOOL:: var_is_introduced ;
var {0,1}: aux13741_INTEGER :: var_is_introduced ;
var bool: aux13742_BOOL:: var_is_introduced ;
var bool: aux13743_BOOL:: var_is_introduced ;
var 1..43: aux13744:: var_is_introduced ;
var bool: aux13745_BOOL:: var_is_introduced ;
var bool: aux13746_BOOL:: var_is_introduced ;
var bool: aux13747_BOOL:: var_is_introduced ;
var {0,1}: aux13747_INTEGER :: var_is_introduced ;
var bool: aux13748_BOOL:: var_is_introduced ;
var bool: aux13749_BOOL:: var_is_introduced ;
var 4..46: aux13750:: var_is_introduced ;
var bool: aux13751_BOOL:: var_is_introduced ;
var bool: aux13752_BOOL:: var_is_introduced ;
var bool: aux13753_BOOL:: var_is_introduced ;
var {0,1}: aux13753_INTEGER :: var_is_introduced ;
var bool: aux13754_BOOL:: var_is_introduced ;
var bool: aux13755_BOOL:: var_is_introduced ;
var 2..44: aux13756:: var_is_introduced ;
var bool: aux13757_BOOL:: var_is_introduced ;
var bool: aux13758_BOOL:: var_is_introduced ;
var bool: aux13759_BOOL:: var_is_introduced ;
var {0,1}: aux13759_INTEGER :: var_is_introduced ;
var bool: aux13760_BOOL:: var_is_introduced ;
var bool: aux13761_BOOL:: var_is_introduced ;
var 3..45: aux13762:: var_is_introduced ;
var bool: aux13763_BOOL:: var_is_introduced ;
var bool: aux13764_BOOL:: var_is_introduced ;
var bool: aux13765_BOOL:: var_is_introduced ;
var {0,1}: aux13765_INTEGER :: var_is_introduced ;
var bool: aux13766_BOOL:: var_is_introduced ;
var bool: aux13767_BOOL:: var_is_introduced ;
var 1..43: aux13768:: var_is_introduced ;
var bool: aux13769_BOOL:: var_is_introduced ;
var bool: aux13770_BOOL:: var_is_introduced ;
var bool: aux13771_BOOL:: var_is_introduced ;
var {0,1}: aux13771_INTEGER :: var_is_introduced ;
var bool: aux13772_BOOL:: var_is_introduced ;
var bool: aux13773_BOOL:: var_is_introduced ;
var 3..45: aux13774:: var_is_introduced ;
var bool: aux13775_BOOL:: var_is_introduced ;
var bool: aux13776_BOOL:: var_is_introduced ;
var bool: aux13777_BOOL:: var_is_introduced ;
var {0,1}: aux13777_INTEGER :: var_is_introduced ;
var bool: aux13778_BOOL:: var_is_introduced ;
var bool: aux13779_BOOL:: var_is_introduced ;
var 2..44: aux13780:: var_is_introduced ;
var bool: aux13781_BOOL:: var_is_introduced ;
var bool: aux13782_BOOL:: var_is_introduced ;
var bool: aux13783_BOOL:: var_is_introduced ;
var {0,1}: aux13783_INTEGER :: var_is_introduced ;
var bool: aux13784_BOOL:: var_is_introduced ;
var bool: aux13785_BOOL:: var_is_introduced ;
var 3..45: aux13786:: var_is_introduced ;
var bool: aux13787_BOOL:: var_is_introduced ;
var bool: aux13788_BOOL:: var_is_introduced ;
var bool: aux13789_BOOL:: var_is_introduced ;
var {0,1}: aux13789_INTEGER :: var_is_introduced ;
var bool: aux13790_BOOL:: var_is_introduced ;
var 1..43: aux13791:: var_is_introduced ;
var bool: aux13792_BOOL:: var_is_introduced ;
var bool: aux13793_BOOL:: var_is_introduced ;
var {0,1}: aux13793_INTEGER :: var_is_introduced ;
var bool: aux13794_BOOL:: var_is_introduced ;
var bool: aux13795_BOOL:: var_is_introduced ;
var bool: aux13796_BOOL:: var_is_introduced ;
var 1..43: aux13797:: var_is_introduced ;
var bool: aux13798_BOOL:: var_is_introduced ;
var bool: aux13799_BOOL:: var_is_introduced ;
var bool: aux13800_BOOL:: var_is_introduced ;
var {0,1}: aux13800_INTEGER :: var_is_introduced ;
var bool: aux13801_BOOL:: var_is_introduced ;
var bool: aux13802_BOOL:: var_is_introduced ;
var 2..44: aux13803:: var_is_introduced ;
var bool: aux13804_BOOL:: var_is_introduced ;
var bool: aux13805_BOOL:: var_is_introduced ;
var bool: aux13806_BOOL:: var_is_introduced ;
var {0,1}: aux13806_INTEGER :: var_is_introduced ;
var bool: aux13807_BOOL:: var_is_introduced ;
var bool: aux13808_BOOL:: var_is_introduced ;
var 3..45: aux13809:: var_is_introduced ;
var bool: aux13810_BOOL:: var_is_introduced ;
var bool: aux13811_BOOL:: var_is_introduced ;
var bool: aux13812_BOOL:: var_is_introduced ;
var {0,1}: aux13812_INTEGER :: var_is_introduced ;
var bool: aux13813_BOOL:: var_is_introduced ;
var bool: aux13814_BOOL:: var_is_introduced ;
var 2..44: aux13815:: var_is_introduced ;
var bool: aux13816_BOOL:: var_is_introduced ;
var bool: aux13817_BOOL:: var_is_introduced ;
var bool: aux13818_BOOL:: var_is_introduced ;
var {0,1}: aux13818_INTEGER :: var_is_introduced ;
var bool: aux13819_BOOL:: var_is_introduced ;
var bool: aux13820_BOOL:: var_is_introduced ;
var 2..44: aux13821:: var_is_introduced ;
var bool: aux13822_BOOL:: var_is_introduced ;
var bool: aux13823_BOOL:: var_is_introduced ;
var bool: aux13824_BOOL:: var_is_introduced ;
var {0,1}: aux13824_INTEGER :: var_is_introduced ;
var bool: aux13825_BOOL:: var_is_introduced ;
var bool: aux13826_BOOL:: var_is_introduced ;
var 3..45: aux13827:: var_is_introduced ;
var bool: aux13828_BOOL:: var_is_introduced ;
var bool: aux13829_BOOL:: var_is_introduced ;
var bool: aux13830_BOOL:: var_is_introduced ;
var {0,1}: aux13830_INTEGER :: var_is_introduced ;
var bool: aux13831_BOOL:: var_is_introduced ;
var bool: aux13832_BOOL:: var_is_introduced ;
var 2..44: aux13833:: var_is_introduced ;
var bool: aux13834_BOOL:: var_is_introduced ;
var bool: aux13835_BOOL:: var_is_introduced ;
var bool: aux13836_BOOL:: var_is_introduced ;
var {0,1}: aux13836_INTEGER :: var_is_introduced ;
var bool: aux13837_BOOL:: var_is_introduced ;
var bool: aux13838_BOOL:: var_is_introduced ;
var 2..44: aux13839:: var_is_introduced ;
var bool: aux13840_BOOL:: var_is_introduced ;
var bool: aux13841_BOOL:: var_is_introduced ;
var bool: aux13842_BOOL:: var_is_introduced ;
var {0,1}: aux13842_INTEGER :: var_is_introduced ;
var bool: aux13843_BOOL:: var_is_introduced ;
var bool: aux13844_BOOL:: var_is_introduced ;
var 1..43: aux13845:: var_is_introduced ;
var bool: aux13846_BOOL:: var_is_introduced ;
var bool: aux13847_BOOL:: var_is_introduced ;
var bool: aux13848_BOOL:: var_is_introduced ;
var {0,1}: aux13848_INTEGER :: var_is_introduced ;
var bool: aux13849_BOOL:: var_is_introduced ;
var bool: aux13850_BOOL:: var_is_introduced ;
var 2..44: aux13851:: var_is_introduced ;
var bool: aux13852_BOOL:: var_is_introduced ;
var bool: aux13853_BOOL:: var_is_introduced ;
var bool: aux13854_BOOL:: var_is_introduced ;
var {0,1}: aux13854_INTEGER :: var_is_introduced ;
var bool: aux13855_BOOL:: var_is_introduced ;
var bool: aux13856_BOOL:: var_is_introduced ;
var 2..44: aux13857:: var_is_introduced ;
var bool: aux13858_BOOL:: var_is_introduced ;
var bool: aux13859_BOOL:: var_is_introduced ;
var bool: aux13860_BOOL:: var_is_introduced ;
var {0,1}: aux13860_INTEGER :: var_is_introduced ;
var bool: aux13861_BOOL:: var_is_introduced ;
var bool: aux13862_BOOL:: var_is_introduced ;
var 1..43: aux13863:: var_is_introduced ;
var bool: aux13864_BOOL:: var_is_introduced ;
var bool: aux13865_BOOL:: var_is_introduced ;
var bool: aux13866_BOOL:: var_is_introduced ;
var {0,1}: aux13866_INTEGER :: var_is_introduced ;
var bool: aux13867_BOOL:: var_is_introduced ;
var bool: aux13868_BOOL:: var_is_introduced ;
var 4..46: aux13869:: var_is_introduced ;
var bool: aux13870_BOOL:: var_is_introduced ;
var bool: aux13871_BOOL:: var_is_introduced ;
var bool: aux13872_BOOL:: var_is_introduced ;
var {0,1}: aux13872_INTEGER :: var_is_introduced ;
var bool: aux13873_BOOL:: var_is_introduced ;
var bool: aux13874_BOOL:: var_is_introduced ;
var 2..44: aux13875:: var_is_introduced ;
var bool: aux13876_BOOL:: var_is_introduced ;
var bool: aux13877_BOOL:: var_is_introduced ;
var bool: aux13878_BOOL:: var_is_introduced ;
var {0,1}: aux13878_INTEGER :: var_is_introduced ;
var bool: aux13879_BOOL:: var_is_introduced ;
var bool: aux13880_BOOL:: var_is_introduced ;
var 3..45: aux13881:: var_is_introduced ;
var bool: aux13882_BOOL:: var_is_introduced ;
var bool: aux13883_BOOL:: var_is_introduced ;
var bool: aux13884_BOOL:: var_is_introduced ;
var {0,1}: aux13884_INTEGER :: var_is_introduced ;
var bool: aux13885_BOOL:: var_is_introduced ;
var bool: aux13886_BOOL:: var_is_introduced ;
var 1..43: aux13887:: var_is_introduced ;
var bool: aux13888_BOOL:: var_is_introduced ;
var bool: aux13889_BOOL:: var_is_introduced ;
var bool: aux13890_BOOL:: var_is_introduced ;
var {0,1}: aux13890_INTEGER :: var_is_introduced ;
var bool: aux13891_BOOL:: var_is_introduced ;
var bool: aux13892_BOOL:: var_is_introduced ;
var 3..45: aux13893:: var_is_introduced ;
var bool: aux13894_BOOL:: var_is_introduced ;
var bool: aux13895_BOOL:: var_is_introduced ;
var bool: aux13896_BOOL:: var_is_introduced ;
var {0,1}: aux13896_INTEGER :: var_is_introduced ;
var bool: aux13897_BOOL:: var_is_introduced ;
var bool: aux13898_BOOL:: var_is_introduced ;
var 2..44: aux13899:: var_is_introduced ;
var bool: aux13900_BOOL:: var_is_introduced ;
var bool: aux13901_BOOL:: var_is_introduced ;
var bool: aux13902_BOOL:: var_is_introduced ;
var {0,1}: aux13902_INTEGER :: var_is_introduced ;
var bool: aux13903_BOOL:: var_is_introduced ;
var bool: aux13904_BOOL:: var_is_introduced ;
var 3..45: aux13905:: var_is_introduced ;
var bool: aux13906_BOOL:: var_is_introduced ;
var bool: aux13907_BOOL:: var_is_introduced ;
var bool: aux13908_BOOL:: var_is_introduced ;
var {0,1}: aux13908_INTEGER :: var_is_introduced ;
var bool: aux13909_BOOL:: var_is_introduced ;
var 1..43: aux13910:: var_is_introduced ;
var bool: aux13911_BOOL:: var_is_introduced ;
var bool: aux13912_BOOL:: var_is_introduced ;
var {0,1}: aux13912_INTEGER :: var_is_introduced ;
var bool: aux13913_BOOL:: var_is_introduced ;
var bool: aux13914_BOOL:: var_is_introduced ;
var bool: aux13915_BOOL:: var_is_introduced ;
var 1..43: aux13916:: var_is_introduced ;
var bool: aux13917_BOOL:: var_is_introduced ;
var bool: aux13918_BOOL:: var_is_introduced ;
var bool: aux13919_BOOL:: var_is_introduced ;
var {0,1}: aux13919_INTEGER :: var_is_introduced ;
var bool: aux13920_BOOL:: var_is_introduced ;
var bool: aux13921_BOOL:: var_is_introduced ;
var 2..44: aux13922:: var_is_introduced ;
var bool: aux13923_BOOL:: var_is_introduced ;
var bool: aux13924_BOOL:: var_is_introduced ;
var bool: aux13925_BOOL:: var_is_introduced ;
var {0,1}: aux13925_INTEGER :: var_is_introduced ;
var bool: aux13926_BOOL:: var_is_introduced ;
var bool: aux13927_BOOL:: var_is_introduced ;
var 3..45: aux13928:: var_is_introduced ;
var bool: aux13929_BOOL:: var_is_introduced ;
var bool: aux13930_BOOL:: var_is_introduced ;
var bool: aux13931_BOOL:: var_is_introduced ;
var {0,1}: aux13931_INTEGER :: var_is_introduced ;
var bool: aux13932_BOOL:: var_is_introduced ;
var bool: aux13933_BOOL:: var_is_introduced ;
var 2..44: aux13934:: var_is_introduced ;
var bool: aux13935_BOOL:: var_is_introduced ;
var bool: aux13936_BOOL:: var_is_introduced ;
var bool: aux13937_BOOL:: var_is_introduced ;
var {0,1}: aux13937_INTEGER :: var_is_introduced ;
var bool: aux13938_BOOL:: var_is_introduced ;
var bool: aux13939_BOOL:: var_is_introduced ;
var 2..44: aux13940:: var_is_introduced ;
var bool: aux13941_BOOL:: var_is_introduced ;
var bool: aux13942_BOOL:: var_is_introduced ;
var bool: aux13943_BOOL:: var_is_introduced ;
var {0,1}: aux13943_INTEGER :: var_is_introduced ;
var bool: aux13944_BOOL:: var_is_introduced ;
var bool: aux13945_BOOL:: var_is_introduced ;
var 3..45: aux13946:: var_is_introduced ;
var bool: aux13947_BOOL:: var_is_introduced ;
var bool: aux13948_BOOL:: var_is_introduced ;
var bool: aux13949_BOOL:: var_is_introduced ;
var {0,1}: aux13949_INTEGER :: var_is_introduced ;
var bool: aux13950_BOOL:: var_is_introduced ;
var bool: aux13951_BOOL:: var_is_introduced ;
var 2..44: aux13952:: var_is_introduced ;
var bool: aux13953_BOOL:: var_is_introduced ;
var bool: aux13954_BOOL:: var_is_introduced ;
var bool: aux13955_BOOL:: var_is_introduced ;
var {0,1}: aux13955_INTEGER :: var_is_introduced ;
var bool: aux13956_BOOL:: var_is_introduced ;
var bool: aux13957_BOOL:: var_is_introduced ;
var 1..43: aux13958:: var_is_introduced ;
var bool: aux13959_BOOL:: var_is_introduced ;
var bool: aux13960_BOOL:: var_is_introduced ;
var bool: aux13961_BOOL:: var_is_introduced ;
var {0,1}: aux13961_INTEGER :: var_is_introduced ;
var bool: aux13962_BOOL:: var_is_introduced ;
var bool: aux13963_BOOL:: var_is_introduced ;
var 2..44: aux13964:: var_is_introduced ;
var bool: aux13965_BOOL:: var_is_introduced ;
var bool: aux13966_BOOL:: var_is_introduced ;
var bool: aux13967_BOOL:: var_is_introduced ;
var {0,1}: aux13967_INTEGER :: var_is_introduced ;
var bool: aux13968_BOOL:: var_is_introduced ;
var bool: aux13969_BOOL:: var_is_introduced ;
var 1..43: aux13970:: var_is_introduced ;
var bool: aux13971_BOOL:: var_is_introduced ;
var bool: aux13972_BOOL:: var_is_introduced ;
var bool: aux13973_BOOL:: var_is_introduced ;
var {0,1}: aux13973_INTEGER :: var_is_introduced ;
var bool: aux13974_BOOL:: var_is_introduced ;
var bool: aux13975_BOOL:: var_is_introduced ;
var 2..44: aux13976:: var_is_introduced ;
var bool: aux13977_BOOL:: var_is_introduced ;
var bool: aux13978_BOOL:: var_is_introduced ;
var bool: aux13979_BOOL:: var_is_introduced ;
var {0,1}: aux13979_INTEGER :: var_is_introduced ;
var bool: aux13980_BOOL:: var_is_introduced ;
var bool: aux13981_BOOL:: var_is_introduced ;
var 2..44: aux13982:: var_is_introduced ;
var bool: aux13983_BOOL:: var_is_introduced ;
var bool: aux13984_BOOL:: var_is_introduced ;
var bool: aux13985_BOOL:: var_is_introduced ;
var {0,1}: aux13985_INTEGER :: var_is_introduced ;
var bool: aux13986_BOOL:: var_is_introduced ;
var bool: aux13987_BOOL:: var_is_introduced ;
var 1..43: aux13988:: var_is_introduced ;
var bool: aux13989_BOOL:: var_is_introduced ;
var bool: aux13990_BOOL:: var_is_introduced ;
var bool: aux13991_BOOL:: var_is_introduced ;
var {0,1}: aux13991_INTEGER :: var_is_introduced ;
var bool: aux13992_BOOL:: var_is_introduced ;
var bool: aux13993_BOOL:: var_is_introduced ;
var 4..46: aux13994:: var_is_introduced ;
var bool: aux13995_BOOL:: var_is_introduced ;
var bool: aux13996_BOOL:: var_is_introduced ;
var bool: aux13997_BOOL:: var_is_introduced ;
var {0,1}: aux13997_INTEGER :: var_is_introduced ;
var bool: aux13998_BOOL:: var_is_introduced ;
var bool: aux13999_BOOL:: var_is_introduced ;
var 2..44: aux14000:: var_is_introduced ;
var bool: aux14001_BOOL:: var_is_introduced ;
var bool: aux14002_BOOL:: var_is_introduced ;
var bool: aux14003_BOOL:: var_is_introduced ;
var {0,1}: aux14003_INTEGER :: var_is_introduced ;
var bool: aux14004_BOOL:: var_is_introduced ;
var bool: aux14005_BOOL:: var_is_introduced ;
var 3..45: aux14006:: var_is_introduced ;
var bool: aux14007_BOOL:: var_is_introduced ;
var bool: aux14008_BOOL:: var_is_introduced ;
var bool: aux14009_BOOL:: var_is_introduced ;
var {0,1}: aux14009_INTEGER :: var_is_introduced ;
var bool: aux14010_BOOL:: var_is_introduced ;
var bool: aux14011_BOOL:: var_is_introduced ;
var 1..43: aux14012:: var_is_introduced ;
var bool: aux14013_BOOL:: var_is_introduced ;
var bool: aux14014_BOOL:: var_is_introduced ;
var bool: aux14015_BOOL:: var_is_introduced ;
var {0,1}: aux14015_INTEGER :: var_is_introduced ;
var bool: aux14016_BOOL:: var_is_introduced ;
var bool: aux14017_BOOL:: var_is_introduced ;
var 3..45: aux14018:: var_is_introduced ;
var bool: aux14019_BOOL:: var_is_introduced ;
var bool: aux14020_BOOL:: var_is_introduced ;
var bool: aux14021_BOOL:: var_is_introduced ;
var {0,1}: aux14021_INTEGER :: var_is_introduced ;
var bool: aux14022_BOOL:: var_is_introduced ;
var bool: aux14023_BOOL:: var_is_introduced ;
var 3..45: aux14024:: var_is_introduced ;
var bool: aux14025_BOOL:: var_is_introduced ;
var bool: aux14026_BOOL:: var_is_introduced ;
var bool: aux14027_BOOL:: var_is_introduced ;
var {0,1}: aux14027_INTEGER :: var_is_introduced ;
var bool: aux14028_BOOL:: var_is_introduced ;
var 2..44: aux14029:: var_is_introduced ;
var bool: aux14030_BOOL:: var_is_introduced ;
var bool: aux14031_BOOL:: var_is_introduced ;
var {0,1}: aux14031_INTEGER :: var_is_introduced ;
var bool: aux14032_BOOL:: var_is_introduced ;
var bool: aux14033_BOOL:: var_is_introduced ;
var bool: aux14034_BOOL:: var_is_introduced ;
var 1..43: aux14035:: var_is_introduced ;
var bool: aux14036_BOOL:: var_is_introduced ;
var bool: aux14037_BOOL:: var_is_introduced ;
var bool: aux14038_BOOL:: var_is_introduced ;
var {0,1}: aux14038_INTEGER :: var_is_introduced ;
var bool: aux14039_BOOL:: var_is_introduced ;
var bool: aux14040_BOOL:: var_is_introduced ;
var 2..44: aux14041:: var_is_introduced ;
var bool: aux14042_BOOL:: var_is_introduced ;
var bool: aux14043_BOOL:: var_is_introduced ;
var bool: aux14044_BOOL:: var_is_introduced ;
var {0,1}: aux14044_INTEGER :: var_is_introduced ;
var bool: aux14045_BOOL:: var_is_introduced ;
var bool: aux14046_BOOL:: var_is_introduced ;
var 3..45: aux14047:: var_is_introduced ;
var bool: aux14048_BOOL:: var_is_introduced ;
var bool: aux14049_BOOL:: var_is_introduced ;
var bool: aux14050_BOOL:: var_is_introduced ;
var {0,1}: aux14050_INTEGER :: var_is_introduced ;
var bool: aux14051_BOOL:: var_is_introduced ;
var bool: aux14052_BOOL:: var_is_introduced ;
var 2..44: aux14053:: var_is_introduced ;
var bool: aux14054_BOOL:: var_is_introduced ;
var bool: aux14055_BOOL:: var_is_introduced ;
var bool: aux14056_BOOL:: var_is_introduced ;
var {0,1}: aux14056_INTEGER :: var_is_introduced ;
var bool: aux14057_BOOL:: var_is_introduced ;
var bool: aux14058_BOOL:: var_is_introduced ;
var 3..45: aux14059:: var_is_introduced ;
var bool: aux14060_BOOL:: var_is_introduced ;
var bool: aux14061_BOOL:: var_is_introduced ;
var bool: aux14062_BOOL:: var_is_introduced ;
var {0,1}: aux14062_INTEGER :: var_is_introduced ;
var bool: aux14063_BOOL:: var_is_introduced ;
var bool: aux14064_BOOL:: var_is_introduced ;
var 2..44: aux14065:: var_is_introduced ;
var bool: aux14066_BOOL:: var_is_introduced ;
var bool: aux14067_BOOL:: var_is_introduced ;
var bool: aux14068_BOOL:: var_is_introduced ;
var {0,1}: aux14068_INTEGER :: var_is_introduced ;
var bool: aux14069_BOOL:: var_is_introduced ;
var bool: aux14070_BOOL:: var_is_introduced ;
var 1..43: aux14071:: var_is_introduced ;
var bool: aux14072_BOOL:: var_is_introduced ;
var bool: aux14073_BOOL:: var_is_introduced ;
var bool: aux14074_BOOL:: var_is_introduced ;
var {0,1}: aux14074_INTEGER :: var_is_introduced ;
var bool: aux14075_BOOL:: var_is_introduced ;
var bool: aux14076_BOOL:: var_is_introduced ;
var 2..44: aux14077:: var_is_introduced ;
var bool: aux14078_BOOL:: var_is_introduced ;
var bool: aux14079_BOOL:: var_is_introduced ;
var bool: aux14080_BOOL:: var_is_introduced ;
var {0,1}: aux14080_INTEGER :: var_is_introduced ;
var bool: aux14081_BOOL:: var_is_introduced ;
var bool: aux14082_BOOL:: var_is_introduced ;
var 1..43: aux14083:: var_is_introduced ;
var bool: aux14084_BOOL:: var_is_introduced ;
var bool: aux14085_BOOL:: var_is_introduced ;
var bool: aux14086_BOOL:: var_is_introduced ;
var {0,1}: aux14086_INTEGER :: var_is_introduced ;
var bool: aux14087_BOOL:: var_is_introduced ;
var bool: aux14088_BOOL:: var_is_introduced ;
var 2..44: aux14089:: var_is_introduced ;
var bool: aux14090_BOOL:: var_is_introduced ;
var bool: aux14091_BOOL:: var_is_introduced ;
var bool: aux14092_BOOL:: var_is_introduced ;
var {0,1}: aux14092_INTEGER :: var_is_introduced ;
var bool: aux14093_BOOL:: var_is_introduced ;
var bool: aux14094_BOOL:: var_is_introduced ;
var 2..44: aux14095:: var_is_introduced ;
var bool: aux14096_BOOL:: var_is_introduced ;
var bool: aux14097_BOOL:: var_is_introduced ;
var bool: aux14098_BOOL:: var_is_introduced ;
var {0,1}: aux14098_INTEGER :: var_is_introduced ;
var bool: aux14099_BOOL:: var_is_introduced ;
var bool: aux14100_BOOL:: var_is_introduced ;
var 1..43: aux14101:: var_is_introduced ;
var bool: aux14102_BOOL:: var_is_introduced ;
var bool: aux14103_BOOL:: var_is_introduced ;
var bool: aux14104_BOOL:: var_is_introduced ;
var {0,1}: aux14104_INTEGER :: var_is_introduced ;
var bool: aux14105_BOOL:: var_is_introduced ;
var bool: aux14106_BOOL:: var_is_introduced ;
var 4..46: aux14107:: var_is_introduced ;
var bool: aux14108_BOOL:: var_is_introduced ;
var bool: aux14109_BOOL:: var_is_introduced ;
var bool: aux14110_BOOL:: var_is_introduced ;
var {0,1}: aux14110_INTEGER :: var_is_introduced ;
var bool: aux14111_BOOL:: var_is_introduced ;
var bool: aux14112_BOOL:: var_is_introduced ;
var 2..44: aux14113:: var_is_introduced ;
var bool: aux14114_BOOL:: var_is_introduced ;
var bool: aux14115_BOOL:: var_is_introduced ;
var bool: aux14116_BOOL:: var_is_introduced ;
var {0,1}: aux14116_INTEGER :: var_is_introduced ;
var bool: aux14117_BOOL:: var_is_introduced ;
var bool: aux14118_BOOL:: var_is_introduced ;
var 3..45: aux14119:: var_is_introduced ;
var bool: aux14120_BOOL:: var_is_introduced ;
var bool: aux14121_BOOL:: var_is_introduced ;
var bool: aux14122_BOOL:: var_is_introduced ;
var {0,1}: aux14122_INTEGER :: var_is_introduced ;
var bool: aux14123_BOOL:: var_is_introduced ;
var bool: aux14124_BOOL:: var_is_introduced ;
var 1..43: aux14125:: var_is_introduced ;
var bool: aux14126_BOOL:: var_is_introduced ;
var bool: aux14127_BOOL:: var_is_introduced ;
var bool: aux14128_BOOL:: var_is_introduced ;
var {0,1}: aux14128_INTEGER :: var_is_introduced ;
var bool: aux14129_BOOL:: var_is_introduced ;
var bool: aux14130_BOOL:: var_is_introduced ;
var 3..45: aux14131:: var_is_introduced ;
var bool: aux14132_BOOL:: var_is_introduced ;
var bool: aux14133_BOOL:: var_is_introduced ;
var bool: aux14134_BOOL:: var_is_introduced ;
var {0,1}: aux14134_INTEGER :: var_is_introduced ;
var bool: aux14135_BOOL:: var_is_introduced ;
var bool: aux14136_BOOL:: var_is_introduced ;
var 2..44: aux14137:: var_is_introduced ;
var bool: aux14138_BOOL:: var_is_introduced ;
var bool: aux14139_BOOL:: var_is_introduced ;
var bool: aux14140_BOOL:: var_is_introduced ;
var {0,1}: aux14140_INTEGER :: var_is_introduced ;
var bool: aux14141_BOOL:: var_is_introduced ;
var bool: aux14142_BOOL:: var_is_introduced ;
var 3..45: aux14143:: var_is_introduced ;
var bool: aux14144_BOOL:: var_is_introduced ;
var bool: aux14145_BOOL:: var_is_introduced ;
var bool: aux14146_BOOL:: var_is_introduced ;
var {0,1}: aux14146_INTEGER :: var_is_introduced ;
var bool: aux14147_BOOL:: var_is_introduced ;
var 2..44: aux14148:: var_is_introduced ;
var bool: aux14149_BOOL:: var_is_introduced ;
var bool: aux14150_BOOL:: var_is_introduced ;
var {0,1}: aux14150_INTEGER :: var_is_introduced ;
var bool: aux14151_BOOL:: var_is_introduced ;
var bool: aux14152_BOOL:: var_is_introduced ;
var bool: aux14153_BOOL:: var_is_introduced ;
var 1..43: aux14154:: var_is_introduced ;
var bool: aux14155_BOOL:: var_is_introduced ;
var bool: aux14156_BOOL:: var_is_introduced ;
var bool: aux14157_BOOL:: var_is_introduced ;
var {0,1}: aux14157_INTEGER :: var_is_introduced ;
var bool: aux14158_BOOL:: var_is_introduced ;
var bool: aux14159_BOOL:: var_is_introduced ;
var 2..44: aux14160:: var_is_introduced ;
var bool: aux14161_BOOL:: var_is_introduced ;
var bool: aux14162_BOOL:: var_is_introduced ;
var bool: aux14163_BOOL:: var_is_introduced ;
var {0,1}: aux14163_INTEGER :: var_is_introduced ;
var bool: aux14164_BOOL:: var_is_introduced ;
var bool: aux14165_BOOL:: var_is_introduced ;
var 3..45: aux14166:: var_is_introduced ;
var bool: aux14167_BOOL:: var_is_introduced ;
var bool: aux14168_BOOL:: var_is_introduced ;
var bool: aux14169_BOOL:: var_is_introduced ;
var {0,1}: aux14169_INTEGER :: var_is_introduced ;
var bool: aux14170_BOOL:: var_is_introduced ;
var bool: aux14171_BOOL:: var_is_introduced ;
var 2..44: aux14172:: var_is_introduced ;
var bool: aux14173_BOOL:: var_is_introduced ;
var bool: aux14174_BOOL:: var_is_introduced ;
var bool: aux14175_BOOL:: var_is_introduced ;
var {0,1}: aux14175_INTEGER :: var_is_introduced ;
var bool: aux14176_BOOL:: var_is_introduced ;
var bool: aux14177_BOOL:: var_is_introduced ;
var 2..44: aux14178:: var_is_introduced ;
var bool: aux14179_BOOL:: var_is_introduced ;
var bool: aux14180_BOOL:: var_is_introduced ;
var bool: aux14181_BOOL:: var_is_introduced ;
var {0,1}: aux14181_INTEGER :: var_is_introduced ;
var bool: aux14182_BOOL:: var_is_introduced ;
var bool: aux14183_BOOL:: var_is_introduced ;
var 3..45: aux14184:: var_is_introduced ;
var bool: aux14185_BOOL:: var_is_introduced ;
var bool: aux14186_BOOL:: var_is_introduced ;
var bool: aux14187_BOOL:: var_is_introduced ;
var {0,1}: aux14187_INTEGER :: var_is_introduced ;
var bool: aux14188_BOOL:: var_is_introduced ;
var bool: aux14189_BOOL:: var_is_introduced ;
var 2..44: aux14190:: var_is_introduced ;
var bool: aux14191_BOOL:: var_is_introduced ;
var bool: aux14192_BOOL:: var_is_introduced ;
var bool: aux14193_BOOL:: var_is_introduced ;
var {0,1}: aux14193_INTEGER :: var_is_introduced ;
var bool: aux14194_BOOL:: var_is_introduced ;
var bool: aux14195_BOOL:: var_is_introduced ;
var 1..43: aux14196:: var_is_introduced ;
var bool: aux14197_BOOL:: var_is_introduced ;
var bool: aux14198_BOOL:: var_is_introduced ;
var bool: aux14199_BOOL:: var_is_introduced ;
var {0,1}: aux14199_INTEGER :: var_is_introduced ;
var bool: aux14200_BOOL:: var_is_introduced ;
var bool: aux14201_BOOL:: var_is_introduced ;
var 1..43: aux14202:: var_is_introduced ;
var bool: aux14203_BOOL:: var_is_introduced ;
var bool: aux14204_BOOL:: var_is_introduced ;
var bool: aux14205_BOOL:: var_is_introduced ;
var {0,1}: aux14205_INTEGER :: var_is_introduced ;
var bool: aux14206_BOOL:: var_is_introduced ;
var bool: aux14207_BOOL:: var_is_introduced ;
var 2..44: aux14208:: var_is_introduced ;
var bool: aux14209_BOOL:: var_is_introduced ;
var bool: aux14210_BOOL:: var_is_introduced ;
var bool: aux14211_BOOL:: var_is_introduced ;
var {0,1}: aux14211_INTEGER :: var_is_introduced ;
var bool: aux14212_BOOL:: var_is_introduced ;
var bool: aux14213_BOOL:: var_is_introduced ;
var 2..44: aux14214:: var_is_introduced ;
var bool: aux14215_BOOL:: var_is_introduced ;
var bool: aux14216_BOOL:: var_is_introduced ;
var bool: aux14217_BOOL:: var_is_introduced ;
var {0,1}: aux14217_INTEGER :: var_is_introduced ;
var bool: aux14218_BOOL:: var_is_introduced ;
var bool: aux14219_BOOL:: var_is_introduced ;
var 1..43: aux14220:: var_is_introduced ;
var bool: aux14221_BOOL:: var_is_introduced ;
var bool: aux14222_BOOL:: var_is_introduced ;
var bool: aux14223_BOOL:: var_is_introduced ;
var {0,1}: aux14223_INTEGER :: var_is_introduced ;
var bool: aux14224_BOOL:: var_is_introduced ;
var bool: aux14225_BOOL:: var_is_introduced ;
var 4..46: aux14226:: var_is_introduced ;
var bool: aux14227_BOOL:: var_is_introduced ;
var bool: aux14228_BOOL:: var_is_introduced ;
var bool: aux14229_BOOL:: var_is_introduced ;
var {0,1}: aux14229_INTEGER :: var_is_introduced ;
var bool: aux14230_BOOL:: var_is_introduced ;
var bool: aux14231_BOOL:: var_is_introduced ;
var 2..44: aux14232:: var_is_introduced ;
var bool: aux14233_BOOL:: var_is_introduced ;
var bool: aux14234_BOOL:: var_is_introduced ;
var bool: aux14235_BOOL:: var_is_introduced ;
var {0,1}: aux14235_INTEGER :: var_is_introduced ;
var bool: aux14236_BOOL:: var_is_introduced ;
var bool: aux14237_BOOL:: var_is_introduced ;
var 3..45: aux14238:: var_is_introduced ;
var bool: aux14239_BOOL:: var_is_introduced ;
var bool: aux14240_BOOL:: var_is_introduced ;
var bool: aux14241_BOOL:: var_is_introduced ;
var {0,1}: aux14241_INTEGER :: var_is_introduced ;
var bool: aux14242_BOOL:: var_is_introduced ;
var bool: aux14243_BOOL:: var_is_introduced ;
var 1..43: aux14244:: var_is_introduced ;
var bool: aux14245_BOOL:: var_is_introduced ;
var bool: aux14246_BOOL:: var_is_introduced ;
var bool: aux14247_BOOL:: var_is_introduced ;
var {0,1}: aux14247_INTEGER :: var_is_introduced ;
var bool: aux14248_BOOL:: var_is_introduced ;
var bool: aux14249_BOOL:: var_is_introduced ;
var 3..45: aux14250:: var_is_introduced ;
var bool: aux14251_BOOL:: var_is_introduced ;
var bool: aux14252_BOOL:: var_is_introduced ;
var bool: aux14253_BOOL:: var_is_introduced ;
var {0,1}: aux14253_INTEGER :: var_is_introduced ;
var bool: aux14254_BOOL:: var_is_introduced ;
var bool: aux14255_BOOL:: var_is_introduced ;
var 2..44: aux14256:: var_is_introduced ;
var bool: aux14257_BOOL:: var_is_introduced ;
var bool: aux14258_BOOL:: var_is_introduced ;
var bool: aux14259_BOOL:: var_is_introduced ;
var {0,1}: aux14259_INTEGER :: var_is_introduced ;
var bool: aux14260_BOOL:: var_is_introduced ;
var bool: aux14261_BOOL:: var_is_introduced ;
var 3..45: aux14262:: var_is_introduced ;
var bool: aux14263_BOOL:: var_is_introduced ;
var bool: aux14264_BOOL:: var_is_introduced ;
var bool: aux14265_BOOL:: var_is_introduced ;
var {0,1}: aux14265_INTEGER :: var_is_introduced ;
var bool: aux14266_BOOL:: var_is_introduced ;
var 2..44: aux14267:: var_is_introduced ;
var bool: aux14268_BOOL:: var_is_introduced ;
var bool: aux14269_BOOL:: var_is_introduced ;
var {0,1}: aux14269_INTEGER :: var_is_introduced ;
var bool: aux14270_BOOL:: var_is_introduced ;
var bool: aux14271_BOOL:: var_is_introduced ;
var bool: aux14272_BOOL:: var_is_introduced ;
var 1..43: aux14273:: var_is_introduced ;
var bool: aux14274_BOOL:: var_is_introduced ;
var bool: aux14275_BOOL:: var_is_introduced ;
var bool: aux14276_BOOL:: var_is_introduced ;
var {0,1}: aux14276_INTEGER :: var_is_introduced ;
var bool: aux14277_BOOL:: var_is_introduced ;
var bool: aux14278_BOOL:: var_is_introduced ;
var 2..44: aux14279:: var_is_introduced ;
var bool: aux14280_BOOL:: var_is_introduced ;
var bool: aux14281_BOOL:: var_is_introduced ;
var bool: aux14282_BOOL:: var_is_introduced ;
var {0,1}: aux14282_INTEGER :: var_is_introduced ;
var bool: aux14283_BOOL:: var_is_introduced ;
var bool: aux14284_BOOL:: var_is_introduced ;
var 3..45: aux14285:: var_is_introduced ;
var bool: aux14286_BOOL:: var_is_introduced ;
var bool: aux14287_BOOL:: var_is_introduced ;
var bool: aux14288_BOOL:: var_is_introduced ;
var {0,1}: aux14288_INTEGER :: var_is_introduced ;
var bool: aux14289_BOOL:: var_is_introduced ;
var bool: aux14290_BOOL:: var_is_introduced ;
var 2..44: aux14291:: var_is_introduced ;
var bool: aux14292_BOOL:: var_is_introduced ;
var bool: aux14293_BOOL:: var_is_introduced ;
var bool: aux14294_BOOL:: var_is_introduced ;
var {0,1}: aux14294_INTEGER :: var_is_introduced ;
var bool: aux14295_BOOL:: var_is_introduced ;
var bool: aux14296_BOOL:: var_is_introduced ;
var 2..44: aux14297:: var_is_introduced ;
var bool: aux14298_BOOL:: var_is_introduced ;
var bool: aux14299_BOOL:: var_is_introduced ;
var bool: aux14300_BOOL:: var_is_introduced ;
var {0,1}: aux14300_INTEGER :: var_is_introduced ;
var bool: aux14301_BOOL:: var_is_introduced ;
var bool: aux14302_BOOL:: var_is_introduced ;
var 3..45: aux14303:: var_is_introduced ;
var bool: aux14304_BOOL:: var_is_introduced ;
var bool: aux14305_BOOL:: var_is_introduced ;
var bool: aux14306_BOOL:: var_is_introduced ;
var {0,1}: aux14306_INTEGER :: var_is_introduced ;
var bool: aux14307_BOOL:: var_is_introduced ;
var bool: aux14308_BOOL:: var_is_introduced ;
var 2..44: aux14309:: var_is_introduced ;
var bool: aux14310_BOOL:: var_is_introduced ;
var bool: aux14311_BOOL:: var_is_introduced ;
var bool: aux14312_BOOL:: var_is_introduced ;
var {0,1}: aux14312_INTEGER :: var_is_introduced ;
var bool: aux14313_BOOL:: var_is_introduced ;
var bool: aux14314_BOOL:: var_is_introduced ;
var 1..43: aux14315:: var_is_introduced ;
var bool: aux14316_BOOL:: var_is_introduced ;
var bool: aux14317_BOOL:: var_is_introduced ;
var bool: aux14318_BOOL:: var_is_introduced ;
var {0,1}: aux14318_INTEGER :: var_is_introduced ;
var bool: aux14319_BOOL:: var_is_introduced ;
var bool: aux14320_BOOL:: var_is_introduced ;
var 2..44: aux14321:: var_is_introduced ;
var bool: aux14322_BOOL:: var_is_introduced ;
var bool: aux14323_BOOL:: var_is_introduced ;
var bool: aux14324_BOOL:: var_is_introduced ;
var {0,1}: aux14324_INTEGER :: var_is_introduced ;
var bool: aux14325_BOOL:: var_is_introduced ;
var bool: aux14326_BOOL:: var_is_introduced ;
var 1..43: aux14327:: var_is_introduced ;
var bool: aux14328_BOOL:: var_is_introduced ;
var bool: aux14329_BOOL:: var_is_introduced ;
var bool: aux14330_BOOL:: var_is_introduced ;
var {0,1}: aux14330_INTEGER :: var_is_introduced ;
var bool: aux14331_BOOL:: var_is_introduced ;
var bool: aux14332_BOOL:: var_is_introduced ;
var 2..44: aux14333:: var_is_introduced ;
var bool: aux14334_BOOL:: var_is_introduced ;
var bool: aux14335_BOOL:: var_is_introduced ;
var bool: aux14336_BOOL:: var_is_introduced ;
var {0,1}: aux14336_INTEGER :: var_is_introduced ;
var bool: aux14337_BOOL:: var_is_introduced ;
var bool: aux14338_BOOL:: var_is_introduced ;
var 2..44: aux14339:: var_is_introduced ;
var bool: aux14340_BOOL:: var_is_introduced ;
var bool: aux14341_BOOL:: var_is_introduced ;
var bool: aux14342_BOOL:: var_is_introduced ;
var {0,1}: aux14342_INTEGER :: var_is_introduced ;
var bool: aux14343_BOOL:: var_is_introduced ;
var bool: aux14344_BOOL:: var_is_introduced ;
var 1..43: aux14345:: var_is_introduced ;
var bool: aux14346_BOOL:: var_is_introduced ;
var bool: aux14347_BOOL:: var_is_introduced ;
var bool: aux14348_BOOL:: var_is_introduced ;
var {0,1}: aux14348_INTEGER :: var_is_introduced ;
var bool: aux14349_BOOL:: var_is_introduced ;
var bool: aux14350_BOOL:: var_is_introduced ;
var 4..46: aux14351:: var_is_introduced ;
var bool: aux14352_BOOL:: var_is_introduced ;
var bool: aux14353_BOOL:: var_is_introduced ;
var bool: aux14354_BOOL:: var_is_introduced ;
var {0,1}: aux14354_INTEGER :: var_is_introduced ;
var bool: aux14355_BOOL:: var_is_introduced ;
var bool: aux14356_BOOL:: var_is_introduced ;
var 2..44: aux14357:: var_is_introduced ;
var bool: aux14358_BOOL:: var_is_introduced ;
var bool: aux14359_BOOL:: var_is_introduced ;
var bool: aux14360_BOOL:: var_is_introduced ;
var {0,1}: aux14360_INTEGER :: var_is_introduced ;
var bool: aux14361_BOOL:: var_is_introduced ;
var bool: aux14362_BOOL:: var_is_introduced ;
var 1..43: aux14363:: var_is_introduced ;
var bool: aux14364_BOOL:: var_is_introduced ;
var bool: aux14365_BOOL:: var_is_introduced ;
var bool: aux14366_BOOL:: var_is_introduced ;
var {0,1}: aux14366_INTEGER :: var_is_introduced ;
var bool: aux14367_BOOL:: var_is_introduced ;
var bool: aux14368_BOOL:: var_is_introduced ;
var 3..45: aux14369:: var_is_introduced ;
var bool: aux14370_BOOL:: var_is_introduced ;
var bool: aux14371_BOOL:: var_is_introduced ;
var bool: aux14372_BOOL:: var_is_introduced ;
var {0,1}: aux14372_INTEGER :: var_is_introduced ;
var bool: aux14373_BOOL:: var_is_introduced ;
var bool: aux14374_BOOL:: var_is_introduced ;
var 2..44: aux14375:: var_is_introduced ;
var bool: aux14376_BOOL:: var_is_introduced ;
var bool: aux14377_BOOL:: var_is_introduced ;
var bool: aux14378_BOOL:: var_is_introduced ;
var {0,1}: aux14378_INTEGER :: var_is_introduced ;
var bool: aux14379_BOOL:: var_is_introduced ;
var bool: aux14380_BOOL:: var_is_introduced ;
var 3..45: aux14381:: var_is_introduced ;
var bool: aux14382_BOOL:: var_is_introduced ;
var bool: aux14383_BOOL:: var_is_introduced ;
var bool: aux14384_BOOL:: var_is_introduced ;
var {0,1}: aux14384_INTEGER :: var_is_introduced ;
var bool: aux14385_BOOL:: var_is_introduced ;
var 3..45: aux14386:: var_is_introduced ;
var bool: aux14387_BOOL:: var_is_introduced ;
var bool: aux14388_BOOL:: var_is_introduced ;
var {0,1}: aux14388_INTEGER :: var_is_introduced ;
var bool: aux14389_BOOL:: var_is_introduced ;
var bool: aux14390_BOOL:: var_is_introduced ;
var bool: aux14391_BOOL:: var_is_introduced ;
var 1..43: aux14392:: var_is_introduced ;
var bool: aux14393_BOOL:: var_is_introduced ;
var bool: aux14394_BOOL:: var_is_introduced ;
var bool: aux14395_BOOL:: var_is_introduced ;
var {0,1}: aux14395_INTEGER :: var_is_introduced ;
var bool: aux14396_BOOL:: var_is_introduced ;
var bool: aux14397_BOOL:: var_is_introduced ;
var 2..44: aux14398:: var_is_introduced ;
var bool: aux14399_BOOL:: var_is_introduced ;
var bool: aux14400_BOOL:: var_is_introduced ;
var bool: aux14401_BOOL:: var_is_introduced ;
var {0,1}: aux14401_INTEGER :: var_is_introduced ;
var bool: aux14402_BOOL:: var_is_introduced ;
var bool: aux14403_BOOL:: var_is_introduced ;
var 3..45: aux14404:: var_is_introduced ;
var bool: aux14405_BOOL:: var_is_introduced ;
var bool: aux14406_BOOL:: var_is_introduced ;
var bool: aux14407_BOOL:: var_is_introduced ;
var {0,1}: aux14407_INTEGER :: var_is_introduced ;
var bool: aux14408_BOOL:: var_is_introduced ;
var bool: aux14409_BOOL:: var_is_introduced ;
var 2..44: aux14410:: var_is_introduced ;
var bool: aux14411_BOOL:: var_is_introduced ;
var bool: aux14412_BOOL:: var_is_introduced ;
var bool: aux14413_BOOL:: var_is_introduced ;
var {0,1}: aux14413_INTEGER :: var_is_introduced ;
var bool: aux14414_BOOL:: var_is_introduced ;
var bool: aux14415_BOOL:: var_is_introduced ;
var 2..44: aux14416:: var_is_introduced ;
var bool: aux14417_BOOL:: var_is_introduced ;
var bool: aux14418_BOOL:: var_is_introduced ;
var bool: aux14419_BOOL:: var_is_introduced ;
var {0,1}: aux14419_INTEGER :: var_is_introduced ;
var bool: aux14420_BOOL:: var_is_introduced ;
var bool: aux14421_BOOL:: var_is_introduced ;
var 3..45: aux14422:: var_is_introduced ;
var bool: aux14423_BOOL:: var_is_introduced ;
var bool: aux14424_BOOL:: var_is_introduced ;
var bool: aux14425_BOOL:: var_is_introduced ;
var {0,1}: aux14425_INTEGER :: var_is_introduced ;
var bool: aux14426_BOOL:: var_is_introduced ;
var bool: aux14427_BOOL:: var_is_introduced ;
var 2..44: aux14428:: var_is_introduced ;
var bool: aux14429_BOOL:: var_is_introduced ;
var bool: aux14430_BOOL:: var_is_introduced ;
var bool: aux14431_BOOL:: var_is_introduced ;
var {0,1}: aux14431_INTEGER :: var_is_introduced ;
var bool: aux14432_BOOL:: var_is_introduced ;
var bool: aux14433_BOOL:: var_is_introduced ;
var 1..43: aux14434:: var_is_introduced ;
var bool: aux14435_BOOL:: var_is_introduced ;
var bool: aux14436_BOOL:: var_is_introduced ;
var bool: aux14437_BOOL:: var_is_introduced ;
var {0,1}: aux14437_INTEGER :: var_is_introduced ;
var bool: aux14438_BOOL:: var_is_introduced ;
var bool: aux14439_BOOL:: var_is_introduced ;
var 2..44: aux14440:: var_is_introduced ;
var bool: aux14441_BOOL:: var_is_introduced ;
var bool: aux14442_BOOL:: var_is_introduced ;
var bool: aux14443_BOOL:: var_is_introduced ;
var {0,1}: aux14443_INTEGER :: var_is_introduced ;
var bool: aux14444_BOOL:: var_is_introduced ;
var bool: aux14445_BOOL:: var_is_introduced ;
var 1..43: aux14446:: var_is_introduced ;
var bool: aux14447_BOOL:: var_is_introduced ;
var bool: aux14448_BOOL:: var_is_introduced ;
var bool: aux14449_BOOL:: var_is_introduced ;
var {0,1}: aux14449_INTEGER :: var_is_introduced ;
var bool: aux14450_BOOL:: var_is_introduced ;
var bool: aux14451_BOOL:: var_is_introduced ;
var 2..44: aux14452:: var_is_introduced ;
var bool: aux14453_BOOL:: var_is_introduced ;
var bool: aux14454_BOOL:: var_is_introduced ;
var bool: aux14455_BOOL:: var_is_introduced ;
var {0,1}: aux14455_INTEGER :: var_is_introduced ;
var bool: aux14456_BOOL:: var_is_introduced ;
var bool: aux14457_BOOL:: var_is_introduced ;
var 2..44: aux14458:: var_is_introduced ;
var bool: aux14459_BOOL:: var_is_introduced ;
var bool: aux14460_BOOL:: var_is_introduced ;
var bool: aux14461_BOOL:: var_is_introduced ;
var {0,1}: aux14461_INTEGER :: var_is_introduced ;
var bool: aux14462_BOOL:: var_is_introduced ;
var bool: aux14463_BOOL:: var_is_introduced ;
var 1..43: aux14464:: var_is_introduced ;
var bool: aux14465_BOOL:: var_is_introduced ;
var bool: aux14466_BOOL:: var_is_introduced ;
var bool: aux14467_BOOL:: var_is_introduced ;
var {0,1}: aux14467_INTEGER :: var_is_introduced ;
var bool: aux14468_BOOL:: var_is_introduced ;
var bool: aux14469_BOOL:: var_is_introduced ;
var 4..46: aux14470:: var_is_introduced ;
var bool: aux14471_BOOL:: var_is_introduced ;
var bool: aux14472_BOOL:: var_is_introduced ;
var bool: aux14473_BOOL:: var_is_introduced ;
var {0,1}: aux14473_INTEGER :: var_is_introduced ;
var bool: aux14474_BOOL:: var_is_introduced ;
var bool: aux14475_BOOL:: var_is_introduced ;
var 2..44: aux14476:: var_is_introduced ;
var bool: aux14477_BOOL:: var_is_introduced ;
var bool: aux14478_BOOL:: var_is_introduced ;
var bool: aux14479_BOOL:: var_is_introduced ;
var {0,1}: aux14479_INTEGER :: var_is_introduced ;
var bool: aux14480_BOOL:: var_is_introduced ;
var bool: aux14481_BOOL:: var_is_introduced ;
var 3..45: aux14482:: var_is_introduced ;
var bool: aux14483_BOOL:: var_is_introduced ;
var bool: aux14484_BOOL:: var_is_introduced ;
var bool: aux14485_BOOL:: var_is_introduced ;
var {0,1}: aux14485_INTEGER :: var_is_introduced ;
var bool: aux14486_BOOL:: var_is_introduced ;
var bool: aux14487_BOOL:: var_is_introduced ;
var 3..45: aux14488:: var_is_introduced ;
var bool: aux14489_BOOL:: var_is_introduced ;
var bool: aux14490_BOOL:: var_is_introduced ;
var bool: aux14491_BOOL:: var_is_introduced ;
var {0,1}: aux14491_INTEGER :: var_is_introduced ;
var bool: aux14492_BOOL:: var_is_introduced ;
var bool: aux14493_BOOL:: var_is_introduced ;
var 2..44: aux14494:: var_is_introduced ;
var bool: aux14495_BOOL:: var_is_introduced ;
var bool: aux14496_BOOL:: var_is_introduced ;
var bool: aux14497_BOOL:: var_is_introduced ;
var {0,1}: aux14497_INTEGER :: var_is_introduced ;
var bool: aux14498_BOOL:: var_is_introduced ;
var bool: aux14499_BOOL:: var_is_introduced ;
var 3..45: aux14500:: var_is_introduced ;
var bool: aux14501_BOOL:: var_is_introduced ;
var bool: aux14502_BOOL:: var_is_introduced ;
var bool: aux14503_BOOL:: var_is_introduced ;
var {0,1}: aux14503_INTEGER :: var_is_introduced ;
var bool: aux14504_BOOL:: var_is_introduced ;
var 1..43: aux14505:: var_is_introduced ;
var bool: aux14506_BOOL:: var_is_introduced ;
var bool: aux14507_BOOL:: var_is_introduced ;
var {0,1}: aux14507_INTEGER :: var_is_introduced ;
var bool: aux14508_BOOL:: var_is_introduced ;
var bool: aux14509_BOOL:: var_is_introduced ;
var bool: aux14510_BOOL:: var_is_introduced ;
var 1..43: aux14511:: var_is_introduced ;
var bool: aux14512_BOOL:: var_is_introduced ;
var bool: aux14513_BOOL:: var_is_introduced ;
var bool: aux14514_BOOL:: var_is_introduced ;
var {0,1}: aux14514_INTEGER :: var_is_introduced ;
var bool: aux14515_BOOL:: var_is_introduced ;
var bool: aux14516_BOOL:: var_is_introduced ;
var 2..44: aux14517:: var_is_introduced ;
var bool: aux14518_BOOL:: var_is_introduced ;
var bool: aux14519_BOOL:: var_is_introduced ;
var bool: aux14520_BOOL:: var_is_introduced ;
var {0,1}: aux14520_INTEGER :: var_is_introduced ;
var bool: aux14521_BOOL:: var_is_introduced ;
var bool: aux14522_BOOL:: var_is_introduced ;
var 3..45: aux14523:: var_is_introduced ;
var bool: aux14524_BOOL:: var_is_introduced ;
var bool: aux14525_BOOL:: var_is_introduced ;
var bool: aux14526_BOOL:: var_is_introduced ;
var {0,1}: aux14526_INTEGER :: var_is_introduced ;
var bool: aux14527_BOOL:: var_is_introduced ;
var bool: aux14528_BOOL:: var_is_introduced ;
var 2..44: aux14529:: var_is_introduced ;
var bool: aux14530_BOOL:: var_is_introduced ;
var bool: aux14531_BOOL:: var_is_introduced ;
var bool: aux14532_BOOL:: var_is_introduced ;
var {0,1}: aux14532_INTEGER :: var_is_introduced ;
var bool: aux14533_BOOL:: var_is_introduced ;
var bool: aux14534_BOOL:: var_is_introduced ;
var 2..44: aux14535:: var_is_introduced ;
var bool: aux14536_BOOL:: var_is_introduced ;
var bool: aux14537_BOOL:: var_is_introduced ;
var bool: aux14538_BOOL:: var_is_introduced ;
var {0,1}: aux14538_INTEGER :: var_is_introduced ;
var bool: aux14539_BOOL:: var_is_introduced ;
var bool: aux14540_BOOL:: var_is_introduced ;
var 3..45: aux14541:: var_is_introduced ;
var bool: aux14542_BOOL:: var_is_introduced ;
var bool: aux14543_BOOL:: var_is_introduced ;
var bool: aux14544_BOOL:: var_is_introduced ;
var {0,1}: aux14544_INTEGER :: var_is_introduced ;
var bool: aux14545_BOOL:: var_is_introduced ;
var bool: aux14546_BOOL:: var_is_introduced ;
var 2..44: aux14547:: var_is_introduced ;
var bool: aux14548_BOOL:: var_is_introduced ;
var bool: aux14549_BOOL:: var_is_introduced ;
var bool: aux14550_BOOL:: var_is_introduced ;
var {0,1}: aux14550_INTEGER :: var_is_introduced ;
var bool: aux14551_BOOL:: var_is_introduced ;
var bool: aux14552_BOOL:: var_is_introduced ;
var 1..43: aux14553:: var_is_introduced ;
var bool: aux14554_BOOL:: var_is_introduced ;
var bool: aux14555_BOOL:: var_is_introduced ;
var bool: aux14556_BOOL:: var_is_introduced ;
var {0,1}: aux14556_INTEGER :: var_is_introduced ;
var bool: aux14557_BOOL:: var_is_introduced ;
var bool: aux14558_BOOL:: var_is_introduced ;
var 2..44: aux14559:: var_is_introduced ;
var bool: aux14560_BOOL:: var_is_introduced ;
var bool: aux14561_BOOL:: var_is_introduced ;
var bool: aux14562_BOOL:: var_is_introduced ;
var {0,1}: aux14562_INTEGER :: var_is_introduced ;
var bool: aux14563_BOOL:: var_is_introduced ;
var bool: aux14564_BOOL:: var_is_introduced ;
var 1..43: aux14565:: var_is_introduced ;
var bool: aux14566_BOOL:: var_is_introduced ;
var bool: aux14567_BOOL:: var_is_introduced ;
var bool: aux14568_BOOL:: var_is_introduced ;
var {0,1}: aux14568_INTEGER :: var_is_introduced ;
var bool: aux14569_BOOL:: var_is_introduced ;
var bool: aux14570_BOOL:: var_is_introduced ;
var 2..44: aux14571:: var_is_introduced ;
var bool: aux14572_BOOL:: var_is_introduced ;
var bool: aux14573_BOOL:: var_is_introduced ;
var bool: aux14574_BOOL:: var_is_introduced ;
var {0,1}: aux14574_INTEGER :: var_is_introduced ;
var bool: aux14575_BOOL:: var_is_introduced ;
var bool: aux14576_BOOL:: var_is_introduced ;
var 2..44: aux14577:: var_is_introduced ;
var bool: aux14578_BOOL:: var_is_introduced ;
var bool: aux14579_BOOL:: var_is_introduced ;
var bool: aux14580_BOOL:: var_is_introduced ;
var {0,1}: aux14580_INTEGER :: var_is_introduced ;
var bool: aux14581_BOOL:: var_is_introduced ;
var bool: aux14582_BOOL:: var_is_introduced ;
var 1..43: aux14583:: var_is_introduced ;
var bool: aux14584_BOOL:: var_is_introduced ;
var bool: aux14585_BOOL:: var_is_introduced ;
var bool: aux14586_BOOL:: var_is_introduced ;
var {0,1}: aux14586_INTEGER :: var_is_introduced ;
var bool: aux14587_BOOL:: var_is_introduced ;
var bool: aux14588_BOOL:: var_is_introduced ;
var 4..46: aux14589:: var_is_introduced ;
var bool: aux14590_BOOL:: var_is_introduced ;
var bool: aux14591_BOOL:: var_is_introduced ;
var bool: aux14592_BOOL:: var_is_introduced ;
var {0,1}: aux14592_INTEGER :: var_is_introduced ;
var bool: aux14593_BOOL:: var_is_introduced ;
var bool: aux14594_BOOL:: var_is_introduced ;
var 2..44: aux14595:: var_is_introduced ;
var bool: aux14596_BOOL:: var_is_introduced ;
var bool: aux14597_BOOL:: var_is_introduced ;
var bool: aux14598_BOOL:: var_is_introduced ;
var {0,1}: aux14598_INTEGER :: var_is_introduced ;
var bool: aux14599_BOOL:: var_is_introduced ;
var bool: aux14600_BOOL:: var_is_introduced ;
var 3..45: aux14601:: var_is_introduced ;
var bool: aux14602_BOOL:: var_is_introduced ;
var bool: aux14603_BOOL:: var_is_introduced ;
var bool: aux14604_BOOL:: var_is_introduced ;
var {0,1}: aux14604_INTEGER :: var_is_introduced ;
var bool: aux14605_BOOL:: var_is_introduced ;
var bool: aux14606_BOOL:: var_is_introduced ;
var 1..43: aux14607:: var_is_introduced ;
var bool: aux14608_BOOL:: var_is_introduced ;
var bool: aux14609_BOOL:: var_is_introduced ;
var bool: aux14610_BOOL:: var_is_introduced ;
var {0,1}: aux14610_INTEGER :: var_is_introduced ;
var bool: aux14611_BOOL:: var_is_introduced ;
var bool: aux14612_BOOL:: var_is_introduced ;
var 3..45: aux14613:: var_is_introduced ;
var bool: aux14614_BOOL:: var_is_introduced ;
var bool: aux14615_BOOL:: var_is_introduced ;
var bool: aux14616_BOOL:: var_is_introduced ;
var {0,1}: aux14616_INTEGER :: var_is_introduced ;
var bool: aux14617_BOOL:: var_is_introduced ;
var bool: aux14618_BOOL:: var_is_introduced ;
var 2..44: aux14619:: var_is_introduced ;
var bool: aux14620_BOOL:: var_is_introduced ;
var bool: aux14621_BOOL:: var_is_introduced ;
var bool: aux14622_BOOL:: var_is_introduced ;
var {0,1}: aux14622_INTEGER :: var_is_introduced ;
var bool: aux14623_BOOL:: var_is_introduced ;
var 3..45: aux14624:: var_is_introduced ;
var bool: aux14625_BOOL:: var_is_introduced ;
var bool: aux14626_BOOL:: var_is_introduced ;
var {0,1}: aux14626_INTEGER :: var_is_introduced ;
var bool: aux14627_BOOL:: var_is_introduced ;
var bool: aux14628_BOOL:: var_is_introduced ;
var bool: aux14629_BOOL:: var_is_introduced ;
var 1..43: aux14630:: var_is_introduced ;
var bool: aux14631_BOOL:: var_is_introduced ;
var bool: aux14632_BOOL:: var_is_introduced ;
var bool: aux14633_BOOL:: var_is_introduced ;
var {0,1}: aux14633_INTEGER :: var_is_introduced ;
var bool: aux14634_BOOL:: var_is_introduced ;
var bool: aux14635_BOOL:: var_is_introduced ;
var 2..44: aux14636:: var_is_introduced ;
var bool: aux14637_BOOL:: var_is_introduced ;
var bool: aux14638_BOOL:: var_is_introduced ;
var bool: aux14639_BOOL:: var_is_introduced ;
var {0,1}: aux14639_INTEGER :: var_is_introduced ;
var bool: aux14640_BOOL:: var_is_introduced ;
var bool: aux14641_BOOL:: var_is_introduced ;
var 3..45: aux14642:: var_is_introduced ;
var bool: aux14643_BOOL:: var_is_introduced ;
var bool: aux14644_BOOL:: var_is_introduced ;
var bool: aux14645_BOOL:: var_is_introduced ;
var {0,1}: aux14645_INTEGER :: var_is_introduced ;
var bool: aux14646_BOOL:: var_is_introduced ;
var bool: aux14647_BOOL:: var_is_introduced ;
var 2..44: aux14648:: var_is_introduced ;
var bool: aux14649_BOOL:: var_is_introduced ;
var bool: aux14650_BOOL:: var_is_introduced ;
var bool: aux14651_BOOL:: var_is_introduced ;
var {0,1}: aux14651_INTEGER :: var_is_introduced ;
var bool: aux14652_BOOL:: var_is_introduced ;
var bool: aux14653_BOOL:: var_is_introduced ;
var 2..44: aux14654:: var_is_introduced ;
var bool: aux14655_BOOL:: var_is_introduced ;
var bool: aux14656_BOOL:: var_is_introduced ;
var bool: aux14657_BOOL:: var_is_introduced ;
var {0,1}: aux14657_INTEGER :: var_is_introduced ;
var bool: aux14658_BOOL:: var_is_introduced ;
var bool: aux14659_BOOL:: var_is_introduced ;
var 3..45: aux14660:: var_is_introduced ;
var bool: aux14661_BOOL:: var_is_introduced ;
var bool: aux14662_BOOL:: var_is_introduced ;
var bool: aux14663_BOOL:: var_is_introduced ;
var {0,1}: aux14663_INTEGER :: var_is_introduced ;
var bool: aux14664_BOOL:: var_is_introduced ;
var bool: aux14665_BOOL:: var_is_introduced ;
var 2..44: aux14666:: var_is_introduced ;
var bool: aux14667_BOOL:: var_is_introduced ;
var bool: aux14668_BOOL:: var_is_introduced ;
var bool: aux14669_BOOL:: var_is_introduced ;
var {0,1}: aux14669_INTEGER :: var_is_introduced ;
var bool: aux14670_BOOL:: var_is_introduced ;
var bool: aux14671_BOOL:: var_is_introduced ;
var 1..43: aux14672:: var_is_introduced ;
var bool: aux14673_BOOL:: var_is_introduced ;
var bool: aux14674_BOOL:: var_is_introduced ;
var bool: aux14675_BOOL:: var_is_introduced ;
var {0,1}: aux14675_INTEGER :: var_is_introduced ;
var bool: aux14676_BOOL:: var_is_introduced ;
var bool: aux14677_BOOL:: var_is_introduced ;
var 2..44: aux14678:: var_is_introduced ;
var bool: aux14679_BOOL:: var_is_introduced ;
var bool: aux14680_BOOL:: var_is_introduced ;
var bool: aux14681_BOOL:: var_is_introduced ;
var {0,1}: aux14681_INTEGER :: var_is_introduced ;
var bool: aux14682_BOOL:: var_is_introduced ;
var bool: aux14683_BOOL:: var_is_introduced ;
var 1..43: aux14684:: var_is_introduced ;
var bool: aux14685_BOOL:: var_is_introduced ;
var bool: aux14686_BOOL:: var_is_introduced ;
var bool: aux14687_BOOL:: var_is_introduced ;
var {0,1}: aux14687_INTEGER :: var_is_introduced ;
var bool: aux14688_BOOL:: var_is_introduced ;
var bool: aux14689_BOOL:: var_is_introduced ;
var 2..44: aux14690:: var_is_introduced ;
var bool: aux14691_BOOL:: var_is_introduced ;
var bool: aux14692_BOOL:: var_is_introduced ;
var bool: aux14693_BOOL:: var_is_introduced ;
var {0,1}: aux14693_INTEGER :: var_is_introduced ;
var bool: aux14694_BOOL:: var_is_introduced ;
var bool: aux14695_BOOL:: var_is_introduced ;
var 2..44: aux14696:: var_is_introduced ;
var bool: aux14697_BOOL:: var_is_introduced ;
var bool: aux14698_BOOL:: var_is_introduced ;
var bool: aux14699_BOOL:: var_is_introduced ;
var {0,1}: aux14699_INTEGER :: var_is_introduced ;
var bool: aux14700_BOOL:: var_is_introduced ;
var bool: aux14701_BOOL:: var_is_introduced ;
var 1..43: aux14702:: var_is_introduced ;
var bool: aux14703_BOOL:: var_is_introduced ;
var bool: aux14704_BOOL:: var_is_introduced ;
var bool: aux14705_BOOL:: var_is_introduced ;
var {0,1}: aux14705_INTEGER :: var_is_introduced ;
var bool: aux14706_BOOL:: var_is_introduced ;
var bool: aux14707_BOOL:: var_is_introduced ;
var 2..44: aux14708:: var_is_introduced ;
var bool: aux14709_BOOL:: var_is_introduced ;
var bool: aux14710_BOOL:: var_is_introduced ;
var bool: aux14711_BOOL:: var_is_introduced ;
var {0,1}: aux14711_INTEGER :: var_is_introduced ;
var bool: aux14712_BOOL:: var_is_introduced ;
var bool: aux14713_BOOL:: var_is_introduced ;
var 3..45: aux14714:: var_is_introduced ;
var bool: aux14715_BOOL:: var_is_introduced ;
var bool: aux14716_BOOL:: var_is_introduced ;
var bool: aux14717_BOOL:: var_is_introduced ;
var {0,1}: aux14717_INTEGER :: var_is_introduced ;
var bool: aux14718_BOOL:: var_is_introduced ;
var bool: aux14719_BOOL:: var_is_introduced ;
var 1..43: aux14720:: var_is_introduced ;
var bool: aux14721_BOOL:: var_is_introduced ;
var bool: aux14722_BOOL:: var_is_introduced ;
var bool: aux14723_BOOL:: var_is_introduced ;
var {0,1}: aux14723_INTEGER :: var_is_introduced ;
var bool: aux14724_BOOL:: var_is_introduced ;
var bool: aux14725_BOOL:: var_is_introduced ;
var 3..45: aux14726:: var_is_introduced ;
var bool: aux14727_BOOL:: var_is_introduced ;
var bool: aux14728_BOOL:: var_is_introduced ;
var bool: aux14729_BOOL:: var_is_introduced ;
var {0,1}: aux14729_INTEGER :: var_is_introduced ;
var bool: aux14730_BOOL:: var_is_introduced ;
var bool: aux14731_BOOL:: var_is_introduced ;
var 2..44: aux14732:: var_is_introduced ;
var bool: aux14733_BOOL:: var_is_introduced ;
var bool: aux14734_BOOL:: var_is_introduced ;
var bool: aux14735_BOOL:: var_is_introduced ;
var {0,1}: aux14735_INTEGER :: var_is_introduced ;
var bool: aux14736_BOOL:: var_is_introduced ;
var bool: aux14737_BOOL:: var_is_introduced ;
var 3..45: aux14738:: var_is_introduced ;
var bool: aux14739_BOOL:: var_is_introduced ;
var bool: aux14740_BOOL:: var_is_introduced ;
var bool: aux14741_BOOL:: var_is_introduced ;
var {0,1}: aux14741_INTEGER :: var_is_introduced ;
var bool: aux14742_BOOL:: var_is_introduced ;
var 4..46: aux14743:: var_is_introduced ;
var bool: aux14744_BOOL:: var_is_introduced ;
var bool: aux14745_BOOL:: var_is_introduced ;
var {0,1}: aux14745_INTEGER :: var_is_introduced ;
var bool: aux14746_BOOL:: var_is_introduced ;
var bool: aux14747_BOOL:: var_is_introduced ;
var bool: aux14748_BOOL:: var_is_introduced ;
var 1..43: aux14749:: var_is_introduced ;
var bool: aux14750_BOOL:: var_is_introduced ;
var bool: aux14751_BOOL:: var_is_introduced ;
var bool: aux14752_BOOL:: var_is_introduced ;
var {0,1}: aux14752_INTEGER :: var_is_introduced ;
var bool: aux14753_BOOL:: var_is_introduced ;
var bool: aux14754_BOOL:: var_is_introduced ;
var 2..44: aux14755:: var_is_introduced ;
var bool: aux14756_BOOL:: var_is_introduced ;
var bool: aux14757_BOOL:: var_is_introduced ;
var bool: aux14758_BOOL:: var_is_introduced ;
var {0,1}: aux14758_INTEGER :: var_is_introduced ;
var bool: aux14759_BOOL:: var_is_introduced ;
var bool: aux14760_BOOL:: var_is_introduced ;
var 3..45: aux14761:: var_is_introduced ;
var bool: aux14762_BOOL:: var_is_introduced ;
var bool: aux14763_BOOL:: var_is_introduced ;
var bool: aux14764_BOOL:: var_is_introduced ;
var {0,1}: aux14764_INTEGER :: var_is_introduced ;
var bool: aux14765_BOOL:: var_is_introduced ;
var bool: aux14766_BOOL:: var_is_introduced ;
var 2..44: aux14767:: var_is_introduced ;
var bool: aux14768_BOOL:: var_is_introduced ;
var bool: aux14769_BOOL:: var_is_introduced ;
var bool: aux14770_BOOL:: var_is_introduced ;
var {0,1}: aux14770_INTEGER :: var_is_introduced ;
var bool: aux14771_BOOL:: var_is_introduced ;
var bool: aux14772_BOOL:: var_is_introduced ;
var 2..44: aux14773:: var_is_introduced ;
var bool: aux14774_BOOL:: var_is_introduced ;
var bool: aux14775_BOOL:: var_is_introduced ;
var bool: aux14776_BOOL:: var_is_introduced ;
var {0,1}: aux14776_INTEGER :: var_is_introduced ;
var bool: aux14777_BOOL:: var_is_introduced ;
var bool: aux14778_BOOL:: var_is_introduced ;
var 3..45: aux14779:: var_is_introduced ;
var bool: aux14780_BOOL:: var_is_introduced ;
var bool: aux14781_BOOL:: var_is_introduced ;
var bool: aux14782_BOOL:: var_is_introduced ;
var {0,1}: aux14782_INTEGER :: var_is_introduced ;
var bool: aux14783_BOOL:: var_is_introduced ;
var bool: aux14784_BOOL:: var_is_introduced ;
var 2..44: aux14785:: var_is_introduced ;
var bool: aux14786_BOOL:: var_is_introduced ;
var bool: aux14787_BOOL:: var_is_introduced ;
var bool: aux14788_BOOL:: var_is_introduced ;
var {0,1}: aux14788_INTEGER :: var_is_introduced ;
var bool: aux14789_BOOL:: var_is_introduced ;
var bool: aux14790_BOOL:: var_is_introduced ;
var 1..43: aux14791:: var_is_introduced ;
var bool: aux14792_BOOL:: var_is_introduced ;
var bool: aux14793_BOOL:: var_is_introduced ;
var bool: aux14794_BOOL:: var_is_introduced ;
var {0,1}: aux14794_INTEGER :: var_is_introduced ;
var bool: aux14795_BOOL:: var_is_introduced ;
var bool: aux14796_BOOL:: var_is_introduced ;
var 2..44: aux14797:: var_is_introduced ;
var bool: aux14798_BOOL:: var_is_introduced ;
var bool: aux14799_BOOL:: var_is_introduced ;
var bool: aux14800_BOOL:: var_is_introduced ;
var {0,1}: aux14800_INTEGER :: var_is_introduced ;
var bool: aux14801_BOOL:: var_is_introduced ;
var bool: aux14802_BOOL:: var_is_introduced ;
var 1..43: aux14803:: var_is_introduced ;
var bool: aux14804_BOOL:: var_is_introduced ;
var bool: aux14805_BOOL:: var_is_introduced ;
var bool: aux14806_BOOL:: var_is_introduced ;
var {0,1}: aux14806_INTEGER :: var_is_introduced ;
var bool: aux14807_BOOL:: var_is_introduced ;
var bool: aux14808_BOOL:: var_is_introduced ;
var 2..44: aux14809:: var_is_introduced ;
var bool: aux14810_BOOL:: var_is_introduced ;
var bool: aux14811_BOOL:: var_is_introduced ;
var bool: aux14812_BOOL:: var_is_introduced ;
var {0,1}: aux14812_INTEGER :: var_is_introduced ;
var bool: aux14813_BOOL:: var_is_introduced ;
var bool: aux14814_BOOL:: var_is_introduced ;
var 2..44: aux14815:: var_is_introduced ;
var bool: aux14816_BOOL:: var_is_introduced ;
var bool: aux14817_BOOL:: var_is_introduced ;
var bool: aux14818_BOOL:: var_is_introduced ;
var {0,1}: aux14818_INTEGER :: var_is_introduced ;
var bool: aux14819_BOOL:: var_is_introduced ;
var bool: aux14820_BOOL:: var_is_introduced ;
var 4..46: aux14821:: var_is_introduced ;
var bool: aux14822_BOOL:: var_is_introduced ;
var bool: aux14823_BOOL:: var_is_introduced ;
var bool: aux14824_BOOL:: var_is_introduced ;
var {0,1}: aux14824_INTEGER :: var_is_introduced ;
var bool: aux14825_BOOL:: var_is_introduced ;
var bool: aux14826_BOOL:: var_is_introduced ;
var 2..44: aux14827:: var_is_introduced ;
var bool: aux14828_BOOL:: var_is_introduced ;
var bool: aux14829_BOOL:: var_is_introduced ;
var bool: aux14830_BOOL:: var_is_introduced ;
var {0,1}: aux14830_INTEGER :: var_is_introduced ;
var bool: aux14831_BOOL:: var_is_introduced ;
var bool: aux14832_BOOL:: var_is_introduced ;
var 3..45: aux14833:: var_is_introduced ;
var bool: aux14834_BOOL:: var_is_introduced ;
var bool: aux14835_BOOL:: var_is_introduced ;
var bool: aux14836_BOOL:: var_is_introduced ;
var {0,1}: aux14836_INTEGER :: var_is_introduced ;
var bool: aux14837_BOOL:: var_is_introduced ;
var bool: aux14838_BOOL:: var_is_introduced ;
var 1..43: aux14839:: var_is_introduced ;
var bool: aux14840_BOOL:: var_is_introduced ;
var bool: aux14841_BOOL:: var_is_introduced ;
var bool: aux14842_BOOL:: var_is_introduced ;
var {0,1}: aux14842_INTEGER :: var_is_introduced ;
var bool: aux14843_BOOL:: var_is_introduced ;
var bool: aux14844_BOOL:: var_is_introduced ;
var 3..45: aux14845:: var_is_introduced ;
var bool: aux14846_BOOL:: var_is_introduced ;
var bool: aux14847_BOOL:: var_is_introduced ;
var bool: aux14848_BOOL:: var_is_introduced ;
var {0,1}: aux14848_INTEGER :: var_is_introduced ;
var bool: aux14849_BOOL:: var_is_introduced ;
var bool: aux14850_BOOL:: var_is_introduced ;
var 2..44: aux14851:: var_is_introduced ;
var bool: aux14852_BOOL:: var_is_introduced ;
var bool: aux14853_BOOL:: var_is_introduced ;
var bool: aux14854_BOOL:: var_is_introduced ;
var {0,1}: aux14854_INTEGER :: var_is_introduced ;
var bool: aux14855_BOOL:: var_is_introduced ;
var bool: aux14856_BOOL:: var_is_introduced ;
var 3..45: aux14857:: var_is_introduced ;
var bool: aux14858_BOOL:: var_is_introduced ;
var bool: aux14859_BOOL:: var_is_introduced ;
var bool: aux14860_BOOL:: var_is_introduced ;
var {0,1}: aux14860_INTEGER :: var_is_introduced ;
var bool: aux14861_BOOL:: var_is_introduced ;
var 1..43: aux14862:: var_is_introduced ;
var bool: aux14863_BOOL:: var_is_introduced ;
var bool: aux14864_BOOL:: var_is_introduced ;
var {0,1}: aux14864_INTEGER :: var_is_introduced ;
var bool: aux14865_BOOL:: var_is_introduced ;
var bool: aux14866_BOOL:: var_is_introduced ;
var bool: aux14867_BOOL:: var_is_introduced ;
var bool: aux14868_BOOL:: var_is_introduced ;
var bool: aux14869_BOOL:: var_is_introduced ;
var 1..43: aux14870:: var_is_introduced ;
var bool: aux14871_BOOL:: var_is_introduced ;
var bool: aux14872_BOOL:: var_is_introduced ;
var bool: aux14873_BOOL:: var_is_introduced ;
var {0,1}: aux14873_INTEGER :: var_is_introduced ;
var bool: aux14874_BOOL:: var_is_introduced ;
var bool: aux14875_BOOL:: var_is_introduced ;
var 2..44: aux14876:: var_is_introduced ;
var bool: aux14877_BOOL:: var_is_introduced ;
var bool: aux14878_BOOL:: var_is_introduced ;
var bool: aux14879_BOOL:: var_is_introduced ;
var {0,1}: aux14879_INTEGER :: var_is_introduced ;
var bool: aux14880_BOOL:: var_is_introduced ;
var bool: aux14881_BOOL:: var_is_introduced ;
var 3..45: aux14882:: var_is_introduced ;
var bool: aux14883_BOOL:: var_is_introduced ;
var bool: aux14884_BOOL:: var_is_introduced ;
var bool: aux14885_BOOL:: var_is_introduced ;
var {0,1}: aux14885_INTEGER :: var_is_introduced ;
var bool: aux14886_BOOL:: var_is_introduced ;
var bool: aux14887_BOOL:: var_is_introduced ;
var 2..44: aux14888:: var_is_introduced ;
var bool: aux14889_BOOL:: var_is_introduced ;
var bool: aux14890_BOOL:: var_is_introduced ;
var bool: aux14891_BOOL:: var_is_introduced ;
var {0,1}: aux14891_INTEGER :: var_is_introduced ;
var bool: aux14892_BOOL:: var_is_introduced ;
var bool: aux14893_BOOL:: var_is_introduced ;
var 2..44: aux14894:: var_is_introduced ;
var bool: aux14895_BOOL:: var_is_introduced ;
var bool: aux14896_BOOL:: var_is_introduced ;
var bool: aux14897_BOOL:: var_is_introduced ;
var {0,1}: aux14897_INTEGER :: var_is_introduced ;
var bool: aux14898_BOOL:: var_is_introduced ;
var bool: aux14899_BOOL:: var_is_introduced ;
var 3..45: aux14900:: var_is_introduced ;
var bool: aux14901_BOOL:: var_is_introduced ;
var bool: aux14902_BOOL:: var_is_introduced ;
var bool: aux14903_BOOL:: var_is_introduced ;
var {0,1}: aux14903_INTEGER :: var_is_introduced ;
var bool: aux14904_BOOL:: var_is_introduced ;
var bool: aux14905_BOOL:: var_is_introduced ;
var 2..44: aux14906:: var_is_introduced ;
var bool: aux14907_BOOL:: var_is_introduced ;
var bool: aux14908_BOOL:: var_is_introduced ;
var bool: aux14909_BOOL:: var_is_introduced ;
var {0,1}: aux14909_INTEGER :: var_is_introduced ;
var bool: aux14910_BOOL:: var_is_introduced ;
var bool: aux14911_BOOL:: var_is_introduced ;
var 1..43: aux14912:: var_is_introduced ;
var bool: aux14913_BOOL:: var_is_introduced ;
var bool: aux14914_BOOL:: var_is_introduced ;
var bool: aux14915_BOOL:: var_is_introduced ;
var {0,1}: aux14915_INTEGER :: var_is_introduced ;
var bool: aux14916_BOOL:: var_is_introduced ;
var bool: aux14917_BOOL:: var_is_introduced ;
var 2..44: aux14918:: var_is_introduced ;
var bool: aux14919_BOOL:: var_is_introduced ;
var bool: aux14920_BOOL:: var_is_introduced ;
var bool: aux14921_BOOL:: var_is_introduced ;
var {0,1}: aux14921_INTEGER :: var_is_introduced ;
var bool: aux14922_BOOL:: var_is_introduced ;
var bool: aux14923_BOOL:: var_is_introduced ;
var 1..43: aux14924:: var_is_introduced ;
var bool: aux14925_BOOL:: var_is_introduced ;
var bool: aux14926_BOOL:: var_is_introduced ;
var bool: aux14927_BOOL:: var_is_introduced ;
var {0,1}: aux14927_INTEGER :: var_is_introduced ;
var bool: aux14928_BOOL:: var_is_introduced ;
var bool: aux14929_BOOL:: var_is_introduced ;
var 2..44: aux14930:: var_is_introduced ;
var bool: aux14931_BOOL:: var_is_introduced ;
var bool: aux14932_BOOL:: var_is_introduced ;
var bool: aux14933_BOOL:: var_is_introduced ;
var {0,1}: aux14933_INTEGER :: var_is_introduced ;
var bool: aux14934_BOOL:: var_is_introduced ;
var bool: aux14935_BOOL:: var_is_introduced ;
var 1..43: aux14936:: var_is_introduced ;
var bool: aux14937_BOOL:: var_is_introduced ;
var bool: aux14938_BOOL:: var_is_introduced ;
var bool: aux14939_BOOL:: var_is_introduced ;
var {0,1}: aux14939_INTEGER :: var_is_introduced ;
var bool: aux14940_BOOL:: var_is_introduced ;
var bool: aux14941_BOOL:: var_is_introduced ;
var 4..46: aux14942:: var_is_introduced ;
var bool: aux14943_BOOL:: var_is_introduced ;
var bool: aux14944_BOOL:: var_is_introduced ;
var bool: aux14945_BOOL:: var_is_introduced ;
var {0,1}: aux14945_INTEGER :: var_is_introduced ;
var bool: aux14946_BOOL:: var_is_introduced ;
var bool: aux14947_BOOL:: var_is_introduced ;
var 2..44: aux14948:: var_is_introduced ;
var bool: aux14949_BOOL:: var_is_introduced ;
var bool: aux14950_BOOL:: var_is_introduced ;
var bool: aux14951_BOOL:: var_is_introduced ;
var {0,1}: aux14951_INTEGER :: var_is_introduced ;
var bool: aux14952_BOOL:: var_is_introduced ;
var bool: aux14953_BOOL:: var_is_introduced ;
var 3..45: aux14954:: var_is_introduced ;
var bool: aux14955_BOOL:: var_is_introduced ;
var bool: aux14956_BOOL:: var_is_introduced ;
var bool: aux14957_BOOL:: var_is_introduced ;
var {0,1}: aux14957_INTEGER :: var_is_introduced ;
var bool: aux14958_BOOL:: var_is_introduced ;
var bool: aux14959_BOOL:: var_is_introduced ;
var 1..43: aux14960:: var_is_introduced ;
var bool: aux14961_BOOL:: var_is_introduced ;
var bool: aux14962_BOOL:: var_is_introduced ;
var bool: aux14963_BOOL:: var_is_introduced ;
var {0,1}: aux14963_INTEGER :: var_is_introduced ;
var bool: aux14964_BOOL:: var_is_introduced ;
var bool: aux14965_BOOL:: var_is_introduced ;
var 3..45: aux14966:: var_is_introduced ;
var bool: aux14967_BOOL:: var_is_introduced ;
var bool: aux14968_BOOL:: var_is_introduced ;
var bool: aux14969_BOOL:: var_is_introduced ;
var {0,1}: aux14969_INTEGER :: var_is_introduced ;
var bool: aux14970_BOOL:: var_is_introduced ;
var bool: aux14971_BOOL:: var_is_introduced ;
var 2..44: aux14972:: var_is_introduced ;
var bool: aux14973_BOOL:: var_is_introduced ;
var bool: aux14974_BOOL:: var_is_introduced ;
var bool: aux14975_BOOL:: var_is_introduced ;
var {0,1}: aux14975_INTEGER :: var_is_introduced ;
var bool: aux14976_BOOL:: var_is_introduced ;
var bool: aux14977_BOOL:: var_is_introduced ;
var 3..45: aux14978:: var_is_introduced ;
var bool: aux14979_BOOL:: var_is_introduced ;
var bool: aux14980_BOOL:: var_is_introduced ;
var bool: aux14981_BOOL:: var_is_introduced ;
var {0,1}: aux14981_INTEGER :: var_is_introduced ;
var bool: aux14982_BOOL:: var_is_introduced ;
var 2..44: aux14983:: var_is_introduced ;
var bool: aux14984_BOOL:: var_is_introduced ;
var bool: aux14985_BOOL:: var_is_introduced ;
var {0,1}: aux14985_INTEGER :: var_is_introduced ;
var bool: aux14986_BOOL:: var_is_introduced ;
var bool: aux14987_BOOL:: var_is_introduced ;
var bool: aux14988_BOOL:: var_is_introduced ;
var 1..43: aux14989:: var_is_introduced ;
var bool: aux14990_BOOL:: var_is_introduced ;
var bool: aux14991_BOOL:: var_is_introduced ;
var bool: aux14992_BOOL:: var_is_introduced ;
var {0,1}: aux14992_INTEGER :: var_is_introduced ;
var bool: aux14993_BOOL:: var_is_introduced ;
var bool: aux14994_BOOL:: var_is_introduced ;
var 2..44: aux14995:: var_is_introduced ;
var bool: aux14996_BOOL:: var_is_introduced ;
var bool: aux14997_BOOL:: var_is_introduced ;
var bool: aux14998_BOOL:: var_is_introduced ;
var {0,1}: aux14998_INTEGER :: var_is_introduced ;
var bool: aux14999_BOOL:: var_is_introduced ;
var bool: aux15000_BOOL:: var_is_introduced ;
var 3..45: aux15001:: var_is_introduced ;
var bool: aux15002_BOOL:: var_is_introduced ;
var bool: aux15003_BOOL:: var_is_introduced ;
var bool: aux15004_BOOL:: var_is_introduced ;
var {0,1}: aux15004_INTEGER :: var_is_introduced ;
var bool: aux15005_BOOL:: var_is_introduced ;
var bool: aux15006_BOOL:: var_is_introduced ;
var 2..44: aux15007:: var_is_introduced ;
var bool: aux15008_BOOL:: var_is_introduced ;
var bool: aux15009_BOOL:: var_is_introduced ;
var bool: aux15010_BOOL:: var_is_introduced ;
var {0,1}: aux15010_INTEGER :: var_is_introduced ;
var bool: aux15011_BOOL:: var_is_introduced ;
var bool: aux15012_BOOL:: var_is_introduced ;
var 2..44: aux15013:: var_is_introduced ;
var bool: aux15014_BOOL:: var_is_introduced ;
var bool: aux15015_BOOL:: var_is_introduced ;
var bool: aux15016_BOOL:: var_is_introduced ;
var {0,1}: aux15016_INTEGER :: var_is_introduced ;
var bool: aux15017_BOOL:: var_is_introduced ;
var bool: aux15018_BOOL:: var_is_introduced ;
var 3..45: aux15019:: var_is_introduced ;
var bool: aux15020_BOOL:: var_is_introduced ;
var bool: aux15021_BOOL:: var_is_introduced ;
var bool: aux15022_BOOL:: var_is_introduced ;
var {0,1}: aux15022_INTEGER :: var_is_introduced ;
var bool: aux15023_BOOL:: var_is_introduced ;
var bool: aux15024_BOOL:: var_is_introduced ;
var 2..44: aux15025:: var_is_introduced ;
var bool: aux15026_BOOL:: var_is_introduced ;
var bool: aux15027_BOOL:: var_is_introduced ;
var bool: aux15028_BOOL:: var_is_introduced ;
var {0,1}: aux15028_INTEGER :: var_is_introduced ;
var bool: aux15029_BOOL:: var_is_introduced ;
var bool: aux15030_BOOL:: var_is_introduced ;
var 1..43: aux15031:: var_is_introduced ;
var bool: aux15032_BOOL:: var_is_introduced ;
var bool: aux15033_BOOL:: var_is_introduced ;
var bool: aux15034_BOOL:: var_is_introduced ;
var {0,1}: aux15034_INTEGER :: var_is_introduced ;
var bool: aux15035_BOOL:: var_is_introduced ;
var bool: aux15036_BOOL:: var_is_introduced ;
var 2..44: aux15037:: var_is_introduced ;
var bool: aux15038_BOOL:: var_is_introduced ;
var bool: aux15039_BOOL:: var_is_introduced ;
var bool: aux15040_BOOL:: var_is_introduced ;
var {0,1}: aux15040_INTEGER :: var_is_introduced ;
var bool: aux15041_BOOL:: var_is_introduced ;
var bool: aux15042_BOOL:: var_is_introduced ;
var 1..43: aux15043:: var_is_introduced ;
var bool: aux15044_BOOL:: var_is_introduced ;
var bool: aux15045_BOOL:: var_is_introduced ;
var bool: aux15046_BOOL:: var_is_introduced ;
var {0,1}: aux15046_INTEGER :: var_is_introduced ;
var bool: aux15047_BOOL:: var_is_introduced ;
var bool: aux15048_BOOL:: var_is_introduced ;
var 2..44: aux15049:: var_is_introduced ;
var bool: aux15050_BOOL:: var_is_introduced ;
var bool: aux15051_BOOL:: var_is_introduced ;
var bool: aux15052_BOOL:: var_is_introduced ;
var {0,1}: aux15052_INTEGER :: var_is_introduced ;
var bool: aux15053_BOOL:: var_is_introduced ;
var bool: aux15054_BOOL:: var_is_introduced ;
var 2..44: aux15055:: var_is_introduced ;
var bool: aux15056_BOOL:: var_is_introduced ;
var bool: aux15057_BOOL:: var_is_introduced ;
var bool: aux15058_BOOL:: var_is_introduced ;
var {0,1}: aux15058_INTEGER :: var_is_introduced ;
var bool: aux15059_BOOL:: var_is_introduced ;
var bool: aux15060_BOOL:: var_is_introduced ;
var 1..43: aux15061:: var_is_introduced ;
var bool: aux15062_BOOL:: var_is_introduced ;
var bool: aux15063_BOOL:: var_is_introduced ;
var bool: aux15064_BOOL:: var_is_introduced ;
var {0,1}: aux15064_INTEGER :: var_is_introduced ;
var bool: aux15065_BOOL:: var_is_introduced ;
var bool: aux15066_BOOL:: var_is_introduced ;
var 4..46: aux15067:: var_is_introduced ;
var bool: aux15068_BOOL:: var_is_introduced ;
var bool: aux15069_BOOL:: var_is_introduced ;
var bool: aux15070_BOOL:: var_is_introduced ;
var {0,1}: aux15070_INTEGER :: var_is_introduced ;
var bool: aux15071_BOOL:: var_is_introduced ;
var bool: aux15072_BOOL:: var_is_introduced ;
var 3..45: aux15073:: var_is_introduced ;
var bool: aux15074_BOOL:: var_is_introduced ;
var bool: aux15075_BOOL:: var_is_introduced ;
var bool: aux15076_BOOL:: var_is_introduced ;
var {0,1}: aux15076_INTEGER :: var_is_introduced ;
var bool: aux15077_BOOL:: var_is_introduced ;
var bool: aux15078_BOOL:: var_is_introduced ;
var 1..43: aux15079:: var_is_introduced ;
var bool: aux15080_BOOL:: var_is_introduced ;
var bool: aux15081_BOOL:: var_is_introduced ;
var bool: aux15082_BOOL:: var_is_introduced ;
var {0,1}: aux15082_INTEGER :: var_is_introduced ;
var bool: aux15083_BOOL:: var_is_introduced ;
var bool: aux15084_BOOL:: var_is_introduced ;
var 3..45: aux15085:: var_is_introduced ;
var bool: aux15086_BOOL:: var_is_introduced ;
var bool: aux15087_BOOL:: var_is_introduced ;
var bool: aux15088_BOOL:: var_is_introduced ;
var {0,1}: aux15088_INTEGER :: var_is_introduced ;
var bool: aux15089_BOOL:: var_is_introduced ;
var bool: aux15090_BOOL:: var_is_introduced ;
var 2..44: aux15091:: var_is_introduced ;
var bool: aux15092_BOOL:: var_is_introduced ;
var bool: aux15093_BOOL:: var_is_introduced ;
var bool: aux15094_BOOL:: var_is_introduced ;
var {0,1}: aux15094_INTEGER :: var_is_introduced ;
var bool: aux15095_BOOL:: var_is_introduced ;
var bool: aux15096_BOOL:: var_is_introduced ;
var 3..45: aux15097:: var_is_introduced ;
var bool: aux15098_BOOL:: var_is_introduced ;
var bool: aux15099_BOOL:: var_is_introduced ;
var bool: aux15100_BOOL:: var_is_introduced ;
var {0,1}: aux15100_INTEGER :: var_is_introduced ;
var bool: aux15101_BOOL:: var_is_introduced ;
var 2..44: aux15102:: var_is_introduced ;
var bool: aux15103_BOOL:: var_is_introduced ;
var bool: aux15104_BOOL:: var_is_introduced ;
var {0,1}: aux15104_INTEGER :: var_is_introduced ;
var bool: aux15105_BOOL:: var_is_introduced ;
var bool: aux15106_BOOL:: var_is_introduced ;
var bool: aux15107_BOOL:: var_is_introduced ;
var 1..43: aux15108:: var_is_introduced ;
var bool: aux15109_BOOL:: var_is_introduced ;
var bool: aux15110_BOOL:: var_is_introduced ;
var bool: aux15111_BOOL:: var_is_introduced ;
var {0,1}: aux15111_INTEGER :: var_is_introduced ;
var bool: aux15112_BOOL:: var_is_introduced ;
var bool: aux15113_BOOL:: var_is_introduced ;
var 2..44: aux15114:: var_is_introduced ;
var bool: aux15115_BOOL:: var_is_introduced ;
var bool: aux15116_BOOL:: var_is_introduced ;
var bool: aux15117_BOOL:: var_is_introduced ;
var {0,1}: aux15117_INTEGER :: var_is_introduced ;
var bool: aux15118_BOOL:: var_is_introduced ;
var bool: aux15119_BOOL:: var_is_introduced ;
var 3..45: aux15120:: var_is_introduced ;
var bool: aux15121_BOOL:: var_is_introduced ;
var bool: aux15122_BOOL:: var_is_introduced ;
var bool: aux15123_BOOL:: var_is_introduced ;
var {0,1}: aux15123_INTEGER :: var_is_introduced ;
var bool: aux15124_BOOL:: var_is_introduced ;
var bool: aux15125_BOOL:: var_is_introduced ;
var 2..44: aux15126:: var_is_introduced ;
var bool: aux15127_BOOL:: var_is_introduced ;
var bool: aux15128_BOOL:: var_is_introduced ;
var bool: aux15129_BOOL:: var_is_introduced ;
var {0,1}: aux15129_INTEGER :: var_is_introduced ;
var bool: aux15130_BOOL:: var_is_introduced ;
var bool: aux15131_BOOL:: var_is_introduced ;
var 2..44: aux15132:: var_is_introduced ;
var bool: aux15133_BOOL:: var_is_introduced ;
var bool: aux15134_BOOL:: var_is_introduced ;
var bool: aux15135_BOOL:: var_is_introduced ;
var {0,1}: aux15135_INTEGER :: var_is_introduced ;
var bool: aux15136_BOOL:: var_is_introduced ;
var bool: aux15137_BOOL:: var_is_introduced ;
var 3..45: aux15138:: var_is_introduced ;
var bool: aux15139_BOOL:: var_is_introduced ;
var bool: aux15140_BOOL:: var_is_introduced ;
var bool: aux15141_BOOL:: var_is_introduced ;
var {0,1}: aux15141_INTEGER :: var_is_introduced ;
var bool: aux15142_BOOL:: var_is_introduced ;
var bool: aux15143_BOOL:: var_is_introduced ;
var 2..44: aux15144:: var_is_introduced ;
var bool: aux15145_BOOL:: var_is_introduced ;
var bool: aux15146_BOOL:: var_is_introduced ;
var bool: aux15147_BOOL:: var_is_introduced ;
var {0,1}: aux15147_INTEGER :: var_is_introduced ;
var bool: aux15148_BOOL:: var_is_introduced ;
var bool: aux15149_BOOL:: var_is_introduced ;
var 1..43: aux15150:: var_is_introduced ;
var bool: aux15151_BOOL:: var_is_introduced ;
var bool: aux15152_BOOL:: var_is_introduced ;
var bool: aux15153_BOOL:: var_is_introduced ;
var {0,1}: aux15153_INTEGER :: var_is_introduced ;
var bool: aux15154_BOOL:: var_is_introduced ;
var bool: aux15155_BOOL:: var_is_introduced ;
var 2..44: aux15156:: var_is_introduced ;
var bool: aux15157_BOOL:: var_is_introduced ;
var bool: aux15158_BOOL:: var_is_introduced ;
var bool: aux15159_BOOL:: var_is_introduced ;
var {0,1}: aux15159_INTEGER :: var_is_introduced ;
var bool: aux15160_BOOL:: var_is_introduced ;
var bool: aux15161_BOOL:: var_is_introduced ;
var 2..44: aux15162:: var_is_introduced ;
var bool: aux15163_BOOL:: var_is_introduced ;
var bool: aux15164_BOOL:: var_is_introduced ;
var bool: aux15165_BOOL:: var_is_introduced ;
var {0,1}: aux15165_INTEGER :: var_is_introduced ;
var bool: aux15166_BOOL:: var_is_introduced ;
var bool: aux15167_BOOL:: var_is_introduced ;
var 2..44: aux15168:: var_is_introduced ;
var bool: aux15169_BOOL:: var_is_introduced ;
var bool: aux15170_BOOL:: var_is_introduced ;
var bool: aux15171_BOOL:: var_is_introduced ;
var {0,1}: aux15171_INTEGER :: var_is_introduced ;
var bool: aux15172_BOOL:: var_is_introduced ;
var bool: aux15173_BOOL:: var_is_introduced ;
var 1..43: aux15174:: var_is_introduced ;
var bool: aux15175_BOOL:: var_is_introduced ;
var bool: aux15176_BOOL:: var_is_introduced ;
var bool: aux15177_BOOL:: var_is_introduced ;
var {0,1}: aux15177_INTEGER :: var_is_introduced ;
var bool: aux15178_BOOL:: var_is_introduced ;
var bool: aux15179_BOOL:: var_is_introduced ;
var 4..46: aux15180:: var_is_introduced ;
var bool: aux15181_BOOL:: var_is_introduced ;
var bool: aux15182_BOOL:: var_is_introduced ;
var bool: aux15183_BOOL:: var_is_introduced ;
var {0,1}: aux15183_INTEGER :: var_is_introduced ;
var bool: aux15184_BOOL:: var_is_introduced ;
var bool: aux15185_BOOL:: var_is_introduced ;
var 2..44: aux15186:: var_is_introduced ;
var bool: aux15187_BOOL:: var_is_introduced ;
var bool: aux15188_BOOL:: var_is_introduced ;
var bool: aux15189_BOOL:: var_is_introduced ;
var {0,1}: aux15189_INTEGER :: var_is_introduced ;
var bool: aux15190_BOOL:: var_is_introduced ;
var bool: aux15191_BOOL:: var_is_introduced ;
var 3..45: aux15192:: var_is_introduced ;
var bool: aux15193_BOOL:: var_is_introduced ;
var bool: aux15194_BOOL:: var_is_introduced ;
var bool: aux15195_BOOL:: var_is_introduced ;
var {0,1}: aux15195_INTEGER :: var_is_introduced ;
var bool: aux15196_BOOL:: var_is_introduced ;
var bool: aux15197_BOOL:: var_is_introduced ;
var 1..43: aux15198:: var_is_introduced ;
var bool: aux15199_BOOL:: var_is_introduced ;
var bool: aux15200_BOOL:: var_is_introduced ;
var bool: aux15201_BOOL:: var_is_introduced ;
var {0,1}: aux15201_INTEGER :: var_is_introduced ;
var bool: aux15202_BOOL:: var_is_introduced ;
var bool: aux15203_BOOL:: var_is_introduced ;
var 3..45: aux15204:: var_is_introduced ;
var bool: aux15205_BOOL:: var_is_introduced ;
var bool: aux15206_BOOL:: var_is_introduced ;
var bool: aux15207_BOOL:: var_is_introduced ;
var {0,1}: aux15207_INTEGER :: var_is_introduced ;
var bool: aux15208_BOOL:: var_is_introduced ;
var bool: aux15209_BOOL:: var_is_introduced ;
var 2..44: aux15210:: var_is_introduced ;
var bool: aux15211_BOOL:: var_is_introduced ;
var bool: aux15212_BOOL:: var_is_introduced ;
var bool: aux15213_BOOL:: var_is_introduced ;
var {0,1}: aux15213_INTEGER :: var_is_introduced ;
var bool: aux15214_BOOL:: var_is_introduced ;
var bool: aux15215_BOOL:: var_is_introduced ;
var 3..45: aux15216:: var_is_introduced ;
var bool: aux15217_BOOL:: var_is_introduced ;
var bool: aux15218_BOOL:: var_is_introduced ;
var bool: aux15219_BOOL:: var_is_introduced ;
var {0,1}: aux15219_INTEGER :: var_is_introduced ;
var bool: aux15220_BOOL:: var_is_introduced ;
var 1..43: aux15221:: var_is_introduced ;
var bool: aux15222_BOOL:: var_is_introduced ;
var bool: aux15223_BOOL:: var_is_introduced ;
var {0,1}: aux15223_INTEGER :: var_is_introduced ;
var bool: aux15224_BOOL:: var_is_introduced ;
var bool: aux15225_BOOL:: var_is_introduced ;
var bool: aux15226_BOOL:: var_is_introduced ;
var 1..43: aux15227:: var_is_introduced ;
var bool: aux15228_BOOL:: var_is_introduced ;
var bool: aux15229_BOOL:: var_is_introduced ;
var bool: aux15230_BOOL:: var_is_introduced ;
var {0,1}: aux15230_INTEGER :: var_is_introduced ;
var bool: aux15231_BOOL:: var_is_introduced ;
var bool: aux15232_BOOL:: var_is_introduced ;
var 2..44: aux15233:: var_is_introduced ;
var bool: aux15234_BOOL:: var_is_introduced ;
var bool: aux15235_BOOL:: var_is_introduced ;
var bool: aux15236_BOOL:: var_is_introduced ;
var {0,1}: aux15236_INTEGER :: var_is_introduced ;
var bool: aux15237_BOOL:: var_is_introduced ;
var bool: aux15238_BOOL:: var_is_introduced ;
var 3..45: aux15239:: var_is_introduced ;
var bool: aux15240_BOOL:: var_is_introduced ;
var bool: aux15241_BOOL:: var_is_introduced ;
var bool: aux15242_BOOL:: var_is_introduced ;
var {0,1}: aux15242_INTEGER :: var_is_introduced ;
var bool: aux15243_BOOL:: var_is_introduced ;
var bool: aux15244_BOOL:: var_is_introduced ;
var 2..44: aux15245:: var_is_introduced ;
var bool: aux15246_BOOL:: var_is_introduced ;
var bool: aux15247_BOOL:: var_is_introduced ;
var bool: aux15248_BOOL:: var_is_introduced ;
var {0,1}: aux15248_INTEGER :: var_is_introduced ;
var bool: aux15249_BOOL:: var_is_introduced ;
var bool: aux15250_BOOL:: var_is_introduced ;
var 3..45: aux15251:: var_is_introduced ;
var bool: aux15252_BOOL:: var_is_introduced ;
var bool: aux15253_BOOL:: var_is_introduced ;
var bool: aux15254_BOOL:: var_is_introduced ;
var {0,1}: aux15254_INTEGER :: var_is_introduced ;
var bool: aux15255_BOOL:: var_is_introduced ;
var bool: aux15256_BOOL:: var_is_introduced ;
var 2..44: aux15257:: var_is_introduced ;
var bool: aux15258_BOOL:: var_is_introduced ;
var bool: aux15259_BOOL:: var_is_introduced ;
var bool: aux15260_BOOL:: var_is_introduced ;
var {0,1}: aux15260_INTEGER :: var_is_introduced ;
var bool: aux15261_BOOL:: var_is_introduced ;
var bool: aux15262_BOOL:: var_is_introduced ;
var 1..43: aux15263:: var_is_introduced ;
var bool: aux15264_BOOL:: var_is_introduced ;
var bool: aux15265_BOOL:: var_is_introduced ;
var bool: aux15266_BOOL:: var_is_introduced ;
var {0,1}: aux15266_INTEGER :: var_is_introduced ;
var bool: aux15267_BOOL:: var_is_introduced ;
var bool: aux15268_BOOL:: var_is_introduced ;
var 2..44: aux15269:: var_is_introduced ;
var bool: aux15270_BOOL:: var_is_introduced ;
var bool: aux15271_BOOL:: var_is_introduced ;
var bool: aux15272_BOOL:: var_is_introduced ;
var {0,1}: aux15272_INTEGER :: var_is_introduced ;
var bool: aux15273_BOOL:: var_is_introduced ;
var bool: aux15274_BOOL:: var_is_introduced ;
var 1..43: aux15275:: var_is_introduced ;
var bool: aux15276_BOOL:: var_is_introduced ;
var bool: aux15277_BOOL:: var_is_introduced ;
var bool: aux15278_BOOL:: var_is_introduced ;
var {0,1}: aux15278_INTEGER :: var_is_introduced ;
var bool: aux15279_BOOL:: var_is_introduced ;
var bool: aux15280_BOOL:: var_is_introduced ;
var 2..44: aux15281:: var_is_introduced ;
var bool: aux15282_BOOL:: var_is_introduced ;
var bool: aux15283_BOOL:: var_is_introduced ;
var bool: aux15284_BOOL:: var_is_introduced ;
var {0,1}: aux15284_INTEGER :: var_is_introduced ;
var bool: aux15285_BOOL:: var_is_introduced ;
var bool: aux15286_BOOL:: var_is_introduced ;
var 2..44: aux15287:: var_is_introduced ;
var bool: aux15288_BOOL:: var_is_introduced ;
var bool: aux15289_BOOL:: var_is_introduced ;
var bool: aux15290_BOOL:: var_is_introduced ;
var {0,1}: aux15290_INTEGER :: var_is_introduced ;
var bool: aux15291_BOOL:: var_is_introduced ;
var bool: aux15292_BOOL:: var_is_introduced ;
var 1..43: aux15293:: var_is_introduced ;
var bool: aux15294_BOOL:: var_is_introduced ;
var bool: aux15295_BOOL:: var_is_introduced ;
var bool: aux15296_BOOL:: var_is_introduced ;
var {0,1}: aux15296_INTEGER :: var_is_introduced ;
var bool: aux15297_BOOL:: var_is_introduced ;
var bool: aux15298_BOOL:: var_is_introduced ;
var 4..46: aux15299:: var_is_introduced ;
var bool: aux15300_BOOL:: var_is_introduced ;
var bool: aux15301_BOOL:: var_is_introduced ;
var bool: aux15302_BOOL:: var_is_introduced ;
var {0,1}: aux15302_INTEGER :: var_is_introduced ;
var bool: aux15303_BOOL:: var_is_introduced ;
var bool: aux15304_BOOL:: var_is_introduced ;
var 2..44: aux15305:: var_is_introduced ;
var bool: aux15306_BOOL:: var_is_introduced ;
var bool: aux15307_BOOL:: var_is_introduced ;
var bool: aux15308_BOOL:: var_is_introduced ;
var {0,1}: aux15308_INTEGER :: var_is_introduced ;
var bool: aux15309_BOOL:: var_is_introduced ;
var bool: aux15310_BOOL:: var_is_introduced ;
var 3..45: aux15311:: var_is_introduced ;
var bool: aux15312_BOOL:: var_is_introduced ;
var bool: aux15313_BOOL:: var_is_introduced ;
var bool: aux15314_BOOL:: var_is_introduced ;
var {0,1}: aux15314_INTEGER :: var_is_introduced ;
var bool: aux15315_BOOL:: var_is_introduced ;
var bool: aux15316_BOOL:: var_is_introduced ;
var 1..43: aux15317:: var_is_introduced ;
var bool: aux15318_BOOL:: var_is_introduced ;
var bool: aux15319_BOOL:: var_is_introduced ;
var bool: aux15320_BOOL:: var_is_introduced ;
var {0,1}: aux15320_INTEGER :: var_is_introduced ;
var bool: aux15321_BOOL:: var_is_introduced ;
var bool: aux15322_BOOL:: var_is_introduced ;
var 3..45: aux15323:: var_is_introduced ;
var bool: aux15324_BOOL:: var_is_introduced ;
var bool: aux15325_BOOL:: var_is_introduced ;
var bool: aux15326_BOOL:: var_is_introduced ;
var {0,1}: aux15326_INTEGER :: var_is_introduced ;
var bool: aux15327_BOOL:: var_is_introduced ;
var bool: aux15328_BOOL:: var_is_introduced ;
var 2..44: aux15329:: var_is_introduced ;
var bool: aux15330_BOOL:: var_is_introduced ;
var bool: aux15331_BOOL:: var_is_introduced ;
var bool: aux15332_BOOL:: var_is_introduced ;
var {0,1}: aux15332_INTEGER :: var_is_introduced ;
var bool: aux15333_BOOL:: var_is_introduced ;
var bool: aux15334_BOOL:: var_is_introduced ;
var 3..45: aux15335:: var_is_introduced ;
var bool: aux15336_BOOL:: var_is_introduced ;
var bool: aux15337_BOOL:: var_is_introduced ;
var bool: aux15338_BOOL:: var_is_introduced ;
var {0,1}: aux15338_INTEGER :: var_is_introduced ;
var bool: aux15339_BOOL:: var_is_introduced ;
var 2..44: aux15340:: var_is_introduced ;
var bool: aux15341_BOOL:: var_is_introduced ;
var bool: aux15342_BOOL:: var_is_introduced ;
var {0,1}: aux15342_INTEGER :: var_is_introduced ;
var bool: aux15343_BOOL:: var_is_introduced ;
var bool: aux15344_BOOL:: var_is_introduced ;
var bool: aux15345_BOOL:: var_is_introduced ;
var 1..43: aux15346:: var_is_introduced ;
var bool: aux15347_BOOL:: var_is_introduced ;
var bool: aux15348_BOOL:: var_is_introduced ;
var bool: aux15349_BOOL:: var_is_introduced ;
var {0,1}: aux15349_INTEGER :: var_is_introduced ;
var bool: aux15350_BOOL:: var_is_introduced ;
var bool: aux15351_BOOL:: var_is_introduced ;
var 2..44: aux15352:: var_is_introduced ;
var bool: aux15353_BOOL:: var_is_introduced ;
var bool: aux15354_BOOL:: var_is_introduced ;
var bool: aux15355_BOOL:: var_is_introduced ;
var {0,1}: aux15355_INTEGER :: var_is_introduced ;
var bool: aux15356_BOOL:: var_is_introduced ;
var bool: aux15357_BOOL:: var_is_introduced ;
var 3..45: aux15358:: var_is_introduced ;
var bool: aux15359_BOOL:: var_is_introduced ;
var bool: aux15360_BOOL:: var_is_introduced ;
var bool: aux15361_BOOL:: var_is_introduced ;
var {0,1}: aux15361_INTEGER :: var_is_introduced ;
var bool: aux15362_BOOL:: var_is_introduced ;
var bool: aux15363_BOOL:: var_is_introduced ;
var 2..44: aux15364:: var_is_introduced ;
var bool: aux15365_BOOL:: var_is_introduced ;
var bool: aux15366_BOOL:: var_is_introduced ;
var bool: aux15367_BOOL:: var_is_introduced ;
var {0,1}: aux15367_INTEGER :: var_is_introduced ;
var bool: aux15368_BOOL:: var_is_introduced ;
var bool: aux15369_BOOL:: var_is_introduced ;
var 2..44: aux15370:: var_is_introduced ;
var bool: aux15371_BOOL:: var_is_introduced ;
var bool: aux15372_BOOL:: var_is_introduced ;
var bool: aux15373_BOOL:: var_is_introduced ;
var {0,1}: aux15373_INTEGER :: var_is_introduced ;
var bool: aux15374_BOOL:: var_is_introduced ;
var bool: aux15375_BOOL:: var_is_introduced ;
var 3..45: aux15376:: var_is_introduced ;
var bool: aux15377_BOOL:: var_is_introduced ;
var bool: aux15378_BOOL:: var_is_introduced ;
var bool: aux15379_BOOL:: var_is_introduced ;
var {0,1}: aux15379_INTEGER :: var_is_introduced ;
var bool: aux15380_BOOL:: var_is_introduced ;
var bool: aux15381_BOOL:: var_is_introduced ;
var 1..43: aux15382:: var_is_introduced ;
var bool: aux15383_BOOL:: var_is_introduced ;
var bool: aux15384_BOOL:: var_is_introduced ;
var bool: aux15385_BOOL:: var_is_introduced ;
var {0,1}: aux15385_INTEGER :: var_is_introduced ;
var bool: aux15386_BOOL:: var_is_introduced ;
var bool: aux15387_BOOL:: var_is_introduced ;
var 2..44: aux15388:: var_is_introduced ;
var bool: aux15389_BOOL:: var_is_introduced ;
var bool: aux15390_BOOL:: var_is_introduced ;
var bool: aux15391_BOOL:: var_is_introduced ;
var {0,1}: aux15391_INTEGER :: var_is_introduced ;
var bool: aux15392_BOOL:: var_is_introduced ;
var bool: aux15393_BOOL:: var_is_introduced ;
var 1..43: aux15394:: var_is_introduced ;
var bool: aux15395_BOOL:: var_is_introduced ;
var bool: aux15396_BOOL:: var_is_introduced ;
var bool: aux15397_BOOL:: var_is_introduced ;
var {0,1}: aux15397_INTEGER :: var_is_introduced ;
var bool: aux15398_BOOL:: var_is_introduced ;
var bool: aux15399_BOOL:: var_is_introduced ;
var 2..44: aux15400:: var_is_introduced ;
var bool: aux15401_BOOL:: var_is_introduced ;
var bool: aux15402_BOOL:: var_is_introduced ;
var bool: aux15403_BOOL:: var_is_introduced ;
var {0,1}: aux15403_INTEGER :: var_is_introduced ;
var bool: aux15404_BOOL:: var_is_introduced ;
var bool: aux15405_BOOL:: var_is_introduced ;
var 2..44: aux15406:: var_is_introduced ;
var bool: aux15407_BOOL:: var_is_introduced ;
var bool: aux15408_BOOL:: var_is_introduced ;
var bool: aux15409_BOOL:: var_is_introduced ;
var {0,1}: aux15409_INTEGER :: var_is_introduced ;
var bool: aux15410_BOOL:: var_is_introduced ;
var bool: aux15411_BOOL:: var_is_introduced ;
var 1..43: aux15412:: var_is_introduced ;
var bool: aux15413_BOOL:: var_is_introduced ;
var bool: aux15414_BOOL:: var_is_introduced ;
var bool: aux15415_BOOL:: var_is_introduced ;
var {0,1}: aux15415_INTEGER :: var_is_introduced ;
var bool: aux15416_BOOL:: var_is_introduced ;
var bool: aux15417_BOOL:: var_is_introduced ;
var 4..46: aux15418:: var_is_introduced ;
var bool: aux15419_BOOL:: var_is_introduced ;
var bool: aux15420_BOOL:: var_is_introduced ;
var bool: aux15421_BOOL:: var_is_introduced ;
var {0,1}: aux15421_INTEGER :: var_is_introduced ;
var bool: aux15422_BOOL:: var_is_introduced ;
var bool: aux15423_BOOL:: var_is_introduced ;
var 2..44: aux15424:: var_is_introduced ;
var bool: aux15425_BOOL:: var_is_introduced ;
var bool: aux15426_BOOL:: var_is_introduced ;
var bool: aux15427_BOOL:: var_is_introduced ;
var {0,1}: aux15427_INTEGER :: var_is_introduced ;
var bool: aux15428_BOOL:: var_is_introduced ;
var bool: aux15429_BOOL:: var_is_introduced ;
var 3..45: aux15430:: var_is_introduced ;
var bool: aux15431_BOOL:: var_is_introduced ;
var bool: aux15432_BOOL:: var_is_introduced ;
var bool: aux15433_BOOL:: var_is_introduced ;
var {0,1}: aux15433_INTEGER :: var_is_introduced ;
var bool: aux15434_BOOL:: var_is_introduced ;
var bool: aux15435_BOOL:: var_is_introduced ;
var 1..43: aux15436:: var_is_introduced ;
var bool: aux15437_BOOL:: var_is_introduced ;
var bool: aux15438_BOOL:: var_is_introduced ;
var bool: aux15439_BOOL:: var_is_introduced ;
var {0,1}: aux15439_INTEGER :: var_is_introduced ;
var bool: aux15440_BOOL:: var_is_introduced ;
var bool: aux15441_BOOL:: var_is_introduced ;
var 3..45: aux15442:: var_is_introduced ;
var bool: aux15443_BOOL:: var_is_introduced ;
var bool: aux15444_BOOL:: var_is_introduced ;
var bool: aux15445_BOOL:: var_is_introduced ;
var {0,1}: aux15445_INTEGER :: var_is_introduced ;
var bool: aux15446_BOOL:: var_is_introduced ;
var bool: aux15447_BOOL:: var_is_introduced ;
var 2..44: aux15448:: var_is_introduced ;
var bool: aux15449_BOOL:: var_is_introduced ;
var bool: aux15450_BOOL:: var_is_introduced ;
var bool: aux15451_BOOL:: var_is_introduced ;
var {0,1}: aux15451_INTEGER :: var_is_introduced ;
var bool: aux15452_BOOL:: var_is_introduced ;
var bool: aux15453_BOOL:: var_is_introduced ;
var 3..45: aux15454:: var_is_introduced ;
var bool: aux15455_BOOL:: var_is_introduced ;
var bool: aux15456_BOOL:: var_is_introduced ;
var bool: aux15457_BOOL:: var_is_introduced ;
var {0,1}: aux15457_INTEGER :: var_is_introduced ;
var bool: aux15458_BOOL:: var_is_introduced ;
var 2..44: aux15459:: var_is_introduced ;
var bool: aux15460_BOOL:: var_is_introduced ;
var bool: aux15461_BOOL:: var_is_introduced ;
var {0,1}: aux15461_INTEGER :: var_is_introduced ;
var bool: aux15462_BOOL:: var_is_introduced ;
var bool: aux15463_BOOL:: var_is_introduced ;
var bool: aux15464_BOOL:: var_is_introduced ;
var 1..43: aux15465:: var_is_introduced ;
var bool: aux15466_BOOL:: var_is_introduced ;
var bool: aux15467_BOOL:: var_is_introduced ;
var bool: aux15468_BOOL:: var_is_introduced ;
var {0,1}: aux15468_INTEGER :: var_is_introduced ;
var bool: aux15469_BOOL:: var_is_introduced ;
var bool: aux15470_BOOL:: var_is_introduced ;
var 2..44: aux15471:: var_is_introduced ;
var bool: aux15472_BOOL:: var_is_introduced ;
var bool: aux15473_BOOL:: var_is_introduced ;
var bool: aux15474_BOOL:: var_is_introduced ;
var {0,1}: aux15474_INTEGER :: var_is_introduced ;
var bool: aux15475_BOOL:: var_is_introduced ;
var bool: aux15476_BOOL:: var_is_introduced ;
var 2..44: aux15477:: var_is_introduced ;
var bool: aux15478_BOOL:: var_is_introduced ;
var bool: aux15479_BOOL:: var_is_introduced ;
var bool: aux15480_BOOL:: var_is_introduced ;
var {0,1}: aux15480_INTEGER :: var_is_introduced ;
var bool: aux15481_BOOL:: var_is_introduced ;
var bool: aux15482_BOOL:: var_is_introduced ;
var 2..44: aux15483:: var_is_introduced ;
var bool: aux15484_BOOL:: var_is_introduced ;
var bool: aux15485_BOOL:: var_is_introduced ;
var bool: aux15486_BOOL:: var_is_introduced ;
var {0,1}: aux15486_INTEGER :: var_is_introduced ;
var bool: aux15487_BOOL:: var_is_introduced ;
var bool: aux15488_BOOL:: var_is_introduced ;
var 3..45: aux15489:: var_is_introduced ;
var bool: aux15490_BOOL:: var_is_introduced ;
var bool: aux15491_BOOL:: var_is_introduced ;
var bool: aux15492_BOOL:: var_is_introduced ;
var {0,1}: aux15492_INTEGER :: var_is_introduced ;
var bool: aux15493_BOOL:: var_is_introduced ;
var bool: aux15494_BOOL:: var_is_introduced ;
var 2..44: aux15495:: var_is_introduced ;
var bool: aux15496_BOOL:: var_is_introduced ;
var bool: aux15497_BOOL:: var_is_introduced ;
var bool: aux15498_BOOL:: var_is_introduced ;
var {0,1}: aux15498_INTEGER :: var_is_introduced ;
var bool: aux15499_BOOL:: var_is_introduced ;
var bool: aux15500_BOOL:: var_is_introduced ;
var 1..43: aux15501:: var_is_introduced ;
var bool: aux15502_BOOL:: var_is_introduced ;
var bool: aux15503_BOOL:: var_is_introduced ;
var bool: aux15504_BOOL:: var_is_introduced ;
var {0,1}: aux15504_INTEGER :: var_is_introduced ;
var bool: aux15505_BOOL:: var_is_introduced ;
var bool: aux15506_BOOL:: var_is_introduced ;
var 2..44: aux15507:: var_is_introduced ;
var bool: aux15508_BOOL:: var_is_introduced ;
var bool: aux15509_BOOL:: var_is_introduced ;
var bool: aux15510_BOOL:: var_is_introduced ;
var {0,1}: aux15510_INTEGER :: var_is_introduced ;
var bool: aux15511_BOOL:: var_is_introduced ;
var bool: aux15512_BOOL:: var_is_introduced ;
var 1..43: aux15513:: var_is_introduced ;
var bool: aux15514_BOOL:: var_is_introduced ;
var bool: aux15515_BOOL:: var_is_introduced ;
var bool: aux15516_BOOL:: var_is_introduced ;
var {0,1}: aux15516_INTEGER :: var_is_introduced ;
var bool: aux15517_BOOL:: var_is_introduced ;
var bool: aux15518_BOOL:: var_is_introduced ;
var 2..44: aux15519:: var_is_introduced ;
var bool: aux15520_BOOL:: var_is_introduced ;
var bool: aux15521_BOOL:: var_is_introduced ;
var bool: aux15522_BOOL:: var_is_introduced ;
var {0,1}: aux15522_INTEGER :: var_is_introduced ;
var bool: aux15523_BOOL:: var_is_introduced ;
var bool: aux15524_BOOL:: var_is_introduced ;
var 2..44: aux15525:: var_is_introduced ;
var bool: aux15526_BOOL:: var_is_introduced ;
var bool: aux15527_BOOL:: var_is_introduced ;
var bool: aux15528_BOOL:: var_is_introduced ;
var {0,1}: aux15528_INTEGER :: var_is_introduced ;
var bool: aux15529_BOOL:: var_is_introduced ;
var bool: aux15530_BOOL:: var_is_introduced ;
var 1..43: aux15531:: var_is_introduced ;
var bool: aux15532_BOOL:: var_is_introduced ;
var bool: aux15533_BOOL:: var_is_introduced ;
var bool: aux15534_BOOL:: var_is_introduced ;
var {0,1}: aux15534_INTEGER :: var_is_introduced ;
var bool: aux15535_BOOL:: var_is_introduced ;
var bool: aux15536_BOOL:: var_is_introduced ;
var 4..46: aux15537:: var_is_introduced ;
var bool: aux15538_BOOL:: var_is_introduced ;
var bool: aux15539_BOOL:: var_is_introduced ;
var bool: aux15540_BOOL:: var_is_introduced ;
var {0,1}: aux15540_INTEGER :: var_is_introduced ;
var bool: aux15541_BOOL:: var_is_introduced ;
var bool: aux15542_BOOL:: var_is_introduced ;
var 2..44: aux15543:: var_is_introduced ;
var bool: aux15544_BOOL:: var_is_introduced ;
var bool: aux15545_BOOL:: var_is_introduced ;
var bool: aux15546_BOOL:: var_is_introduced ;
var {0,1}: aux15546_INTEGER :: var_is_introduced ;
var bool: aux15547_BOOL:: var_is_introduced ;
var bool: aux15548_BOOL:: var_is_introduced ;
var 3..45: aux15549:: var_is_introduced ;
var bool: aux15550_BOOL:: var_is_introduced ;
var bool: aux15551_BOOL:: var_is_introduced ;
var bool: aux15552_BOOL:: var_is_introduced ;
var {0,1}: aux15552_INTEGER :: var_is_introduced ;
var bool: aux15553_BOOL:: var_is_introduced ;
var bool: aux15554_BOOL:: var_is_introduced ;
var 1..43: aux15555:: var_is_introduced ;
var bool: aux15556_BOOL:: var_is_introduced ;
var bool: aux15557_BOOL:: var_is_introduced ;
var bool: aux15558_BOOL:: var_is_introduced ;
var {0,1}: aux15558_INTEGER :: var_is_introduced ;
var bool: aux15559_BOOL:: var_is_introduced ;
var bool: aux15560_BOOL:: var_is_introduced ;
var 3..45: aux15561:: var_is_introduced ;
var bool: aux15562_BOOL:: var_is_introduced ;
var bool: aux15563_BOOL:: var_is_introduced ;
var bool: aux15564_BOOL:: var_is_introduced ;
var {0,1}: aux15564_INTEGER :: var_is_introduced ;
var bool: aux15565_BOOL:: var_is_introduced ;
var bool: aux15566_BOOL:: var_is_introduced ;
var 2..44: aux15567:: var_is_introduced ;
var bool: aux15568_BOOL:: var_is_introduced ;
var bool: aux15569_BOOL:: var_is_introduced ;
var bool: aux15570_BOOL:: var_is_introduced ;
var {0,1}: aux15570_INTEGER :: var_is_introduced ;
var bool: aux15571_BOOL:: var_is_introduced ;
var bool: aux15572_BOOL:: var_is_introduced ;
var 3..45: aux15573:: var_is_introduced ;
var bool: aux15574_BOOL:: var_is_introduced ;
var bool: aux15575_BOOL:: var_is_introduced ;
var bool: aux15576_BOOL:: var_is_introduced ;
var {0,1}: aux15576_INTEGER :: var_is_introduced ;
var bool: aux15577_BOOL:: var_is_introduced ;
var 3..45: aux15578:: var_is_introduced ;
var bool: aux15579_BOOL:: var_is_introduced ;
var bool: aux15580_BOOL:: var_is_introduced ;
var {0,1}: aux15580_INTEGER :: var_is_introduced ;
var bool: aux15581_BOOL:: var_is_introduced ;
var bool: aux15582_BOOL:: var_is_introduced ;
var bool: aux15583_BOOL:: var_is_introduced ;
var 1..43: aux15584:: var_is_introduced ;
var bool: aux15585_BOOL:: var_is_introduced ;
var bool: aux15586_BOOL:: var_is_introduced ;
var bool: aux15587_BOOL:: var_is_introduced ;
var {0,1}: aux15587_INTEGER :: var_is_introduced ;
var bool: aux15588_BOOL:: var_is_introduced ;
var bool: aux15589_BOOL:: var_is_introduced ;
var 3..45: aux15590:: var_is_introduced ;
var bool: aux15591_BOOL:: var_is_introduced ;
var bool: aux15592_BOOL:: var_is_introduced ;
var bool: aux15593_BOOL:: var_is_introduced ;
var {0,1}: aux15593_INTEGER :: var_is_introduced ;
var bool: aux15594_BOOL:: var_is_introduced ;
var bool: aux15595_BOOL:: var_is_introduced ;
var 2..44: aux15596:: var_is_introduced ;
var bool: aux15597_BOOL:: var_is_introduced ;
var bool: aux15598_BOOL:: var_is_introduced ;
var bool: aux15599_BOOL:: var_is_introduced ;
var {0,1}: aux15599_INTEGER :: var_is_introduced ;
var bool: aux15600_BOOL:: var_is_introduced ;
var bool: aux15601_BOOL:: var_is_introduced ;
var 2..44: aux15602:: var_is_introduced ;
var bool: aux15603_BOOL:: var_is_introduced ;
var bool: aux15604_BOOL:: var_is_introduced ;
var bool: aux15605_BOOL:: var_is_introduced ;
var {0,1}: aux15605_INTEGER :: var_is_introduced ;
var bool: aux15606_BOOL:: var_is_introduced ;
var bool: aux15607_BOOL:: var_is_introduced ;
var 3..45: aux15608:: var_is_introduced ;
var bool: aux15609_BOOL:: var_is_introduced ;
var bool: aux15610_BOOL:: var_is_introduced ;
var bool: aux15611_BOOL:: var_is_introduced ;
var {0,1}: aux15611_INTEGER :: var_is_introduced ;
var bool: aux15612_BOOL:: var_is_introduced ;
var bool: aux15613_BOOL:: var_is_introduced ;
var 2..44: aux15614:: var_is_introduced ;
var bool: aux15615_BOOL:: var_is_introduced ;
var bool: aux15616_BOOL:: var_is_introduced ;
var bool: aux15617_BOOL:: var_is_introduced ;
var {0,1}: aux15617_INTEGER :: var_is_introduced ;
var bool: aux15618_BOOL:: var_is_introduced ;
var bool: aux15619_BOOL:: var_is_introduced ;
var 1..43: aux15620:: var_is_introduced ;
var bool: aux15621_BOOL:: var_is_introduced ;
var bool: aux15622_BOOL:: var_is_introduced ;
var bool: aux15623_BOOL:: var_is_introduced ;
var {0,1}: aux15623_INTEGER :: var_is_introduced ;
var bool: aux15624_BOOL:: var_is_introduced ;
var bool: aux15625_BOOL:: var_is_introduced ;
var 2..44: aux15626:: var_is_introduced ;
var bool: aux15627_BOOL:: var_is_introduced ;
var bool: aux15628_BOOL:: var_is_introduced ;
var bool: aux15629_BOOL:: var_is_introduced ;
var {0,1}: aux15629_INTEGER :: var_is_introduced ;
var bool: aux15630_BOOL:: var_is_introduced ;
var bool: aux15631_BOOL:: var_is_introduced ;
var 1..43: aux15632:: var_is_introduced ;
var bool: aux15633_BOOL:: var_is_introduced ;
var bool: aux15634_BOOL:: var_is_introduced ;
var bool: aux15635_BOOL:: var_is_introduced ;
var {0,1}: aux15635_INTEGER :: var_is_introduced ;
var bool: aux15636_BOOL:: var_is_introduced ;
var bool: aux15637_BOOL:: var_is_introduced ;
var 2..44: aux15638:: var_is_introduced ;
var bool: aux15639_BOOL:: var_is_introduced ;
var bool: aux15640_BOOL:: var_is_introduced ;
var bool: aux15641_BOOL:: var_is_introduced ;
var {0,1}: aux15641_INTEGER :: var_is_introduced ;
var bool: aux15642_BOOL:: var_is_introduced ;
var bool: aux15643_BOOL:: var_is_introduced ;
var 2..44: aux15644:: var_is_introduced ;
var bool: aux15645_BOOL:: var_is_introduced ;
var bool: aux15646_BOOL:: var_is_introduced ;
var bool: aux15647_BOOL:: var_is_introduced ;
var {0,1}: aux15647_INTEGER :: var_is_introduced ;
var bool: aux15648_BOOL:: var_is_introduced ;
var bool: aux15649_BOOL:: var_is_introduced ;
var 1..43: aux15650:: var_is_introduced ;
var bool: aux15651_BOOL:: var_is_introduced ;
var bool: aux15652_BOOL:: var_is_introduced ;
var bool: aux15653_BOOL:: var_is_introduced ;
var {0,1}: aux15653_INTEGER :: var_is_introduced ;
var bool: aux15654_BOOL:: var_is_introduced ;
var bool: aux15655_BOOL:: var_is_introduced ;
var 4..46: aux15656:: var_is_introduced ;
var bool: aux15657_BOOL:: var_is_introduced ;
var bool: aux15658_BOOL:: var_is_introduced ;
var bool: aux15659_BOOL:: var_is_introduced ;
var {0,1}: aux15659_INTEGER :: var_is_introduced ;
var bool: aux15660_BOOL:: var_is_introduced ;
var bool: aux15661_BOOL:: var_is_introduced ;
var 2..44: aux15662:: var_is_introduced ;
var bool: aux15663_BOOL:: var_is_introduced ;
var bool: aux15664_BOOL:: var_is_introduced ;
var bool: aux15665_BOOL:: var_is_introduced ;
var {0,1}: aux15665_INTEGER :: var_is_introduced ;
var bool: aux15666_BOOL:: var_is_introduced ;
var bool: aux15667_BOOL:: var_is_introduced ;
var 3..45: aux15668:: var_is_introduced ;
var bool: aux15669_BOOL:: var_is_introduced ;
var bool: aux15670_BOOL:: var_is_introduced ;
var bool: aux15671_BOOL:: var_is_introduced ;
var {0,1}: aux15671_INTEGER :: var_is_introduced ;
var bool: aux15672_BOOL:: var_is_introduced ;
var bool: aux15673_BOOL:: var_is_introduced ;
var 1..43: aux15674:: var_is_introduced ;
var bool: aux15675_BOOL:: var_is_introduced ;
var bool: aux15676_BOOL:: var_is_introduced ;
var bool: aux15677_BOOL:: var_is_introduced ;
var {0,1}: aux15677_INTEGER :: var_is_introduced ;
var bool: aux15678_BOOL:: var_is_introduced ;
var bool: aux15679_BOOL:: var_is_introduced ;
var 3..45: aux15680:: var_is_introduced ;
var bool: aux15681_BOOL:: var_is_introduced ;
var bool: aux15682_BOOL:: var_is_introduced ;
var bool: aux15683_BOOL:: var_is_introduced ;
var {0,1}: aux15683_INTEGER :: var_is_introduced ;
var bool: aux15684_BOOL:: var_is_introduced ;
var bool: aux15685_BOOL:: var_is_introduced ;
var 2..44: aux15686:: var_is_introduced ;
var bool: aux15687_BOOL:: var_is_introduced ;
var bool: aux15688_BOOL:: var_is_introduced ;
var bool: aux15689_BOOL:: var_is_introduced ;
var {0,1}: aux15689_INTEGER :: var_is_introduced ;
var bool: aux15690_BOOL:: var_is_introduced ;
var bool: aux15691_BOOL:: var_is_introduced ;
var 3..45: aux15692:: var_is_introduced ;
var bool: aux15693_BOOL:: var_is_introduced ;
var bool: aux15694_BOOL:: var_is_introduced ;
var bool: aux15695_BOOL:: var_is_introduced ;
var {0,1}: aux15695_INTEGER :: var_is_introduced ;
var bool: aux15696_BOOL:: var_is_introduced ;
var 2..44: aux15697:: var_is_introduced ;
var bool: aux15698_BOOL:: var_is_introduced ;
var bool: aux15699_BOOL:: var_is_introduced ;
var {0,1}: aux15699_INTEGER :: var_is_introduced ;
var bool: aux15700_BOOL:: var_is_introduced ;
var bool: aux15701_BOOL:: var_is_introduced ;
var bool: aux15702_BOOL:: var_is_introduced ;
var 1..43: aux15703:: var_is_introduced ;
var bool: aux15704_BOOL:: var_is_introduced ;
var bool: aux15705_BOOL:: var_is_introduced ;
var bool: aux15706_BOOL:: var_is_introduced ;
var {0,1}: aux15706_INTEGER :: var_is_introduced ;
var bool: aux15707_BOOL:: var_is_introduced ;
var bool: aux15708_BOOL:: var_is_introduced ;
var 2..44: aux15709:: var_is_introduced ;
var bool: aux15710_BOOL:: var_is_introduced ;
var bool: aux15711_BOOL:: var_is_introduced ;
var bool: aux15712_BOOL:: var_is_introduced ;
var {0,1}: aux15712_INTEGER :: var_is_introduced ;
var bool: aux15713_BOOL:: var_is_introduced ;
var bool: aux15714_BOOL:: var_is_introduced ;
var 3..45: aux15715:: var_is_introduced ;
var bool: aux15716_BOOL:: var_is_introduced ;
var bool: aux15717_BOOL:: var_is_introduced ;
var bool: aux15718_BOOL:: var_is_introduced ;
var {0,1}: aux15718_INTEGER :: var_is_introduced ;
var bool: aux15719_BOOL:: var_is_introduced ;
var bool: aux15720_BOOL:: var_is_introduced ;
var 2..44: aux15721:: var_is_introduced ;
var bool: aux15722_BOOL:: var_is_introduced ;
var bool: aux15723_BOOL:: var_is_introduced ;
var bool: aux15724_BOOL:: var_is_introduced ;
var {0,1}: aux15724_INTEGER :: var_is_introduced ;
var bool: aux15725_BOOL:: var_is_introduced ;
var bool: aux15726_BOOL:: var_is_introduced ;
var 2..44: aux15727:: var_is_introduced ;
var bool: aux15728_BOOL:: var_is_introduced ;
var bool: aux15729_BOOL:: var_is_introduced ;
var bool: aux15730_BOOL:: var_is_introduced ;
var {0,1}: aux15730_INTEGER :: var_is_introduced ;
var bool: aux15731_BOOL:: var_is_introduced ;
var bool: aux15732_BOOL:: var_is_introduced ;
var 3..45: aux15733:: var_is_introduced ;
var bool: aux15734_BOOL:: var_is_introduced ;
var bool: aux15735_BOOL:: var_is_introduced ;
var bool: aux15736_BOOL:: var_is_introduced ;
var {0,1}: aux15736_INTEGER :: var_is_introduced ;
var bool: aux15737_BOOL:: var_is_introduced ;
var bool: aux15738_BOOL:: var_is_introduced ;
var 2..44: aux15739:: var_is_introduced ;
var bool: aux15740_BOOL:: var_is_introduced ;
var bool: aux15741_BOOL:: var_is_introduced ;
var bool: aux15742_BOOL:: var_is_introduced ;
var {0,1}: aux15742_INTEGER :: var_is_introduced ;
var bool: aux15743_BOOL:: var_is_introduced ;
var bool: aux15744_BOOL:: var_is_introduced ;
var 1..43: aux15745:: var_is_introduced ;
var bool: aux15746_BOOL:: var_is_introduced ;
var bool: aux15747_BOOL:: var_is_introduced ;
var bool: aux15748_BOOL:: var_is_introduced ;
var {0,1}: aux15748_INTEGER :: var_is_introduced ;
var bool: aux15749_BOOL:: var_is_introduced ;
var bool: aux15750_BOOL:: var_is_introduced ;
var 2..44: aux15751:: var_is_introduced ;
var bool: aux15752_BOOL:: var_is_introduced ;
var bool: aux15753_BOOL:: var_is_introduced ;
var bool: aux15754_BOOL:: var_is_introduced ;
var {0,1}: aux15754_INTEGER :: var_is_introduced ;
var bool: aux15755_BOOL:: var_is_introduced ;
var bool: aux15756_BOOL:: var_is_introduced ;
var 1..43: aux15757:: var_is_introduced ;
var bool: aux15758_BOOL:: var_is_introduced ;
var bool: aux15759_BOOL:: var_is_introduced ;
var bool: aux15760_BOOL:: var_is_introduced ;
var {0,1}: aux15760_INTEGER :: var_is_introduced ;
var bool: aux15761_BOOL:: var_is_introduced ;
var bool: aux15762_BOOL:: var_is_introduced ;
var 2..44: aux15763:: var_is_introduced ;
var bool: aux15764_BOOL:: var_is_introduced ;
var bool: aux15765_BOOL:: var_is_introduced ;
var bool: aux15766_BOOL:: var_is_introduced ;
var {0,1}: aux15766_INTEGER :: var_is_introduced ;
var bool: aux15767_BOOL:: var_is_introduced ;
var bool: aux15768_BOOL:: var_is_introduced ;
var 1..43: aux15769:: var_is_introduced ;
var bool: aux15770_BOOL:: var_is_introduced ;
var bool: aux15771_BOOL:: var_is_introduced ;
var bool: aux15772_BOOL:: var_is_introduced ;
var {0,1}: aux15772_INTEGER :: var_is_introduced ;
var bool: aux15773_BOOL:: var_is_introduced ;
var bool: aux15774_BOOL:: var_is_introduced ;
var 4..46: aux15775:: var_is_introduced ;
var bool: aux15776_BOOL:: var_is_introduced ;
var bool: aux15777_BOOL:: var_is_introduced ;
var bool: aux15778_BOOL:: var_is_introduced ;
var {0,1}: aux15778_INTEGER :: var_is_introduced ;
var bool: aux15779_BOOL:: var_is_introduced ;
var bool: aux15780_BOOL:: var_is_introduced ;
var 2..44: aux15781:: var_is_introduced ;
var bool: aux15782_BOOL:: var_is_introduced ;
var bool: aux15783_BOOL:: var_is_introduced ;
var bool: aux15784_BOOL:: var_is_introduced ;
var {0,1}: aux15784_INTEGER :: var_is_introduced ;
var bool: aux15785_BOOL:: var_is_introduced ;
var bool: aux15786_BOOL:: var_is_introduced ;
var 3..45: aux15787:: var_is_introduced ;
var bool: aux15788_BOOL:: var_is_introduced ;
var bool: aux15789_BOOL:: var_is_introduced ;
var bool: aux15790_BOOL:: var_is_introduced ;
var {0,1}: aux15790_INTEGER :: var_is_introduced ;
var bool: aux15791_BOOL:: var_is_introduced ;
var bool: aux15792_BOOL:: var_is_introduced ;
var 1..43: aux15793:: var_is_introduced ;
var bool: aux15794_BOOL:: var_is_introduced ;
var bool: aux15795_BOOL:: var_is_introduced ;
var bool: aux15796_BOOL:: var_is_introduced ;
var {0,1}: aux15796_INTEGER :: var_is_introduced ;
var bool: aux15797_BOOL:: var_is_introduced ;
var bool: aux15798_BOOL:: var_is_introduced ;
var 3..45: aux15799:: var_is_introduced ;
var bool: aux15800_BOOL:: var_is_introduced ;
var bool: aux15801_BOOL:: var_is_introduced ;
var bool: aux15802_BOOL:: var_is_introduced ;
var {0,1}: aux15802_INTEGER :: var_is_introduced ;
var bool: aux15803_BOOL:: var_is_introduced ;
var bool: aux15804_BOOL:: var_is_introduced ;
var 2..44: aux15805:: var_is_introduced ;
var bool: aux15806_BOOL:: var_is_introduced ;
var bool: aux15807_BOOL:: var_is_introduced ;
var bool: aux15808_BOOL:: var_is_introduced ;
var {0,1}: aux15808_INTEGER :: var_is_introduced ;
var bool: aux15809_BOOL:: var_is_introduced ;
var bool: aux15810_BOOL:: var_is_introduced ;
var 3..45: aux15811:: var_is_introduced ;
var bool: aux15812_BOOL:: var_is_introduced ;
var bool: aux15813_BOOL:: var_is_introduced ;
var bool: aux15814_BOOL:: var_is_introduced ;
var {0,1}: aux15814_INTEGER :: var_is_introduced ;
var bool: aux15815_BOOL:: var_is_introduced ;
var 2..44: aux15816:: var_is_introduced ;
var bool: aux15817_BOOL:: var_is_introduced ;
var bool: aux15818_BOOL:: var_is_introduced ;
var {0,1}: aux15818_INTEGER :: var_is_introduced ;
var bool: aux15819_BOOL:: var_is_introduced ;
var bool: aux15820_BOOL:: var_is_introduced ;
var bool: aux15821_BOOL:: var_is_introduced ;
var 1..43: aux15822:: var_is_introduced ;
var bool: aux15823_BOOL:: var_is_introduced ;
var bool: aux15824_BOOL:: var_is_introduced ;
var bool: aux15825_BOOL:: var_is_introduced ;
var {0,1}: aux15825_INTEGER :: var_is_introduced ;
var bool: aux15826_BOOL:: var_is_introduced ;
var bool: aux15827_BOOL:: var_is_introduced ;
var 2..44: aux15828:: var_is_introduced ;
var bool: aux15829_BOOL:: var_is_introduced ;
var bool: aux15830_BOOL:: var_is_introduced ;
var bool: aux15831_BOOL:: var_is_introduced ;
var {0,1}: aux15831_INTEGER :: var_is_introduced ;
var bool: aux15832_BOOL:: var_is_introduced ;
var bool: aux15833_BOOL:: var_is_introduced ;
var 3..45: aux15834:: var_is_introduced ;
var bool: aux15835_BOOL:: var_is_introduced ;
var bool: aux15836_BOOL:: var_is_introduced ;
var bool: aux15837_BOOL:: var_is_introduced ;
var {0,1}: aux15837_INTEGER :: var_is_introduced ;
var bool: aux15838_BOOL:: var_is_introduced ;
var bool: aux15839_BOOL:: var_is_introduced ;
var 2..44: aux15840:: var_is_introduced ;
var bool: aux15841_BOOL:: var_is_introduced ;
var bool: aux15842_BOOL:: var_is_introduced ;
var bool: aux15843_BOOL:: var_is_introduced ;
var {0,1}: aux15843_INTEGER :: var_is_introduced ;
var bool: aux15844_BOOL:: var_is_introduced ;
var bool: aux15845_BOOL:: var_is_introduced ;
var 2..44: aux15846:: var_is_introduced ;
var bool: aux15847_BOOL:: var_is_introduced ;
var bool: aux15848_BOOL:: var_is_introduced ;
var bool: aux15849_BOOL:: var_is_introduced ;
var {0,1}: aux15849_INTEGER :: var_is_introduced ;
var bool: aux15850_BOOL:: var_is_introduced ;
var bool: aux15851_BOOL:: var_is_introduced ;
var 2..44: aux15852:: var_is_introduced ;
var bool: aux15853_BOOL:: var_is_introduced ;
var bool: aux15854_BOOL:: var_is_introduced ;
var bool: aux15855_BOOL:: var_is_introduced ;
var {0,1}: aux15855_INTEGER :: var_is_introduced ;
var bool: aux15856_BOOL:: var_is_introduced ;
var bool: aux15857_BOOL:: var_is_introduced ;
var 1..43: aux15858:: var_is_introduced ;
var bool: aux15859_BOOL:: var_is_introduced ;
var bool: aux15860_BOOL:: var_is_introduced ;
var bool: aux15861_BOOL:: var_is_introduced ;
var {0,1}: aux15861_INTEGER :: var_is_introduced ;
var bool: aux15862_BOOL:: var_is_introduced ;
var bool: aux15863_BOOL:: var_is_introduced ;
var 2..44: aux15864:: var_is_introduced ;
var bool: aux15865_BOOL:: var_is_introduced ;
var bool: aux15866_BOOL:: var_is_introduced ;
var bool: aux15867_BOOL:: var_is_introduced ;
var {0,1}: aux15867_INTEGER :: var_is_introduced ;
var bool: aux15868_BOOL:: var_is_introduced ;
var bool: aux15869_BOOL:: var_is_introduced ;
var 1..43: aux15870:: var_is_introduced ;
var bool: aux15871_BOOL:: var_is_introduced ;
var bool: aux15872_BOOL:: var_is_introduced ;
var bool: aux15873_BOOL:: var_is_introduced ;
var {0,1}: aux15873_INTEGER :: var_is_introduced ;
var bool: aux15874_BOOL:: var_is_introduced ;
var bool: aux15875_BOOL:: var_is_introduced ;
var 2..44: aux15876:: var_is_introduced ;
var bool: aux15877_BOOL:: var_is_introduced ;
var bool: aux15878_BOOL:: var_is_introduced ;
var bool: aux15879_BOOL:: var_is_introduced ;
var {0,1}: aux15879_INTEGER :: var_is_introduced ;
var bool: aux15880_BOOL:: var_is_introduced ;
var bool: aux15881_BOOL:: var_is_introduced ;
var 2..44: aux15882:: var_is_introduced ;
var bool: aux15883_BOOL:: var_is_introduced ;
var bool: aux15884_BOOL:: var_is_introduced ;
var bool: aux15885_BOOL:: var_is_introduced ;
var {0,1}: aux15885_INTEGER :: var_is_introduced ;
var bool: aux15886_BOOL:: var_is_introduced ;
var bool: aux15887_BOOL:: var_is_introduced ;
var 1..43: aux15888:: var_is_introduced ;
var bool: aux15889_BOOL:: var_is_introduced ;
var bool: aux15890_BOOL:: var_is_introduced ;
var bool: aux15891_BOOL:: var_is_introduced ;
var {0,1}: aux15891_INTEGER :: var_is_introduced ;
var bool: aux15892_BOOL:: var_is_introduced ;
var bool: aux15893_BOOL:: var_is_introduced ;
var 4..46: aux15894:: var_is_introduced ;
var bool: aux15895_BOOL:: var_is_introduced ;
var bool: aux15896_BOOL:: var_is_introduced ;
var bool: aux15897_BOOL:: var_is_introduced ;
var {0,1}: aux15897_INTEGER :: var_is_introduced ;
var bool: aux15898_BOOL:: var_is_introduced ;
var bool: aux15899_BOOL:: var_is_introduced ;
var 2..44: aux15900:: var_is_introduced ;
var bool: aux15901_BOOL:: var_is_introduced ;
var bool: aux15902_BOOL:: var_is_introduced ;
var bool: aux15903_BOOL:: var_is_introduced ;
var {0,1}: aux15903_INTEGER :: var_is_introduced ;
var bool: aux15904_BOOL:: var_is_introduced ;
var bool: aux15905_BOOL:: var_is_introduced ;
var 3..45: aux15906:: var_is_introduced ;
var bool: aux15907_BOOL:: var_is_introduced ;
var bool: aux15908_BOOL:: var_is_introduced ;
var bool: aux15909_BOOL:: var_is_introduced ;
var {0,1}: aux15909_INTEGER :: var_is_introduced ;
var bool: aux15910_BOOL:: var_is_introduced ;
var bool: aux15911_BOOL:: var_is_introduced ;
var 1..43: aux15912:: var_is_introduced ;
var bool: aux15913_BOOL:: var_is_introduced ;
var bool: aux15914_BOOL:: var_is_introduced ;
var bool: aux15915_BOOL:: var_is_introduced ;
var {0,1}: aux15915_INTEGER :: var_is_introduced ;
var bool: aux15916_BOOL:: var_is_introduced ;
var bool: aux15917_BOOL:: var_is_introduced ;
var 3..45: aux15918:: var_is_introduced ;
var bool: aux15919_BOOL:: var_is_introduced ;
var bool: aux15920_BOOL:: var_is_introduced ;
var bool: aux15921_BOOL:: var_is_introduced ;
var {0,1}: aux15921_INTEGER :: var_is_introduced ;
var bool: aux15922_BOOL:: var_is_introduced ;
var bool: aux15923_BOOL:: var_is_introduced ;
var 2..44: aux15924:: var_is_introduced ;
var bool: aux15925_BOOL:: var_is_introduced ;
var bool: aux15926_BOOL:: var_is_introduced ;
var bool: aux15927_BOOL:: var_is_introduced ;
var {0,1}: aux15927_INTEGER :: var_is_introduced ;
var bool: aux15928_BOOL:: var_is_introduced ;
var bool: aux15929_BOOL:: var_is_introduced ;
var 3..45: aux15930:: var_is_introduced ;
var bool: aux15931_BOOL:: var_is_introduced ;
var bool: aux15932_BOOL:: var_is_introduced ;
var bool: aux15933_BOOL:: var_is_introduced ;
var {0,1}: aux15933_INTEGER :: var_is_introduced ;
var bool: aux15934_BOOL:: var_is_introduced ;
var 3..45: aux15935:: var_is_introduced ;
var bool: aux15936_BOOL:: var_is_introduced ;
var bool: aux15937_BOOL:: var_is_introduced ;
var {0,1}: aux15937_INTEGER :: var_is_introduced ;
var bool: aux15938_BOOL:: var_is_introduced ;
var bool: aux15939_BOOL:: var_is_introduced ;
var bool: aux15940_BOOL:: var_is_introduced ;
var 1..43: aux15941:: var_is_introduced ;
var bool: aux15942_BOOL:: var_is_introduced ;
var bool: aux15943_BOOL:: var_is_introduced ;
var bool: aux15944_BOOL:: var_is_introduced ;
var {0,1}: aux15944_INTEGER :: var_is_introduced ;
var bool: aux15945_BOOL:: var_is_introduced ;
var bool: aux15946_BOOL:: var_is_introduced ;
var 2..44: aux15947:: var_is_introduced ;
var bool: aux15948_BOOL:: var_is_introduced ;
var bool: aux15949_BOOL:: var_is_introduced ;
var bool: aux15950_BOOL:: var_is_introduced ;
var {0,1}: aux15950_INTEGER :: var_is_introduced ;
var bool: aux15951_BOOL:: var_is_introduced ;
var bool: aux15952_BOOL:: var_is_introduced ;
var 3..45: aux15953:: var_is_introduced ;
var bool: aux15954_BOOL:: var_is_introduced ;
var bool: aux15955_BOOL:: var_is_introduced ;
var bool: aux15956_BOOL:: var_is_introduced ;
var {0,1}: aux15956_INTEGER :: var_is_introduced ;
var bool: aux15957_BOOL:: var_is_introduced ;
var bool: aux15958_BOOL:: var_is_introduced ;
var 2..44: aux15959:: var_is_introduced ;
var bool: aux15960_BOOL:: var_is_introduced ;
var bool: aux15961_BOOL:: var_is_introduced ;
var bool: aux15962_BOOL:: var_is_introduced ;
var {0,1}: aux15962_INTEGER :: var_is_introduced ;
var bool: aux15963_BOOL:: var_is_introduced ;
var bool: aux15964_BOOL:: var_is_introduced ;
var 2..44: aux15965:: var_is_introduced ;
var bool: aux15966_BOOL:: var_is_introduced ;
var bool: aux15967_BOOL:: var_is_introduced ;
var bool: aux15968_BOOL:: var_is_introduced ;
var {0,1}: aux15968_INTEGER :: var_is_introduced ;
var bool: aux15969_BOOL:: var_is_introduced ;
var bool: aux15970_BOOL:: var_is_introduced ;
var 3..45: aux15971:: var_is_introduced ;
var bool: aux15972_BOOL:: var_is_introduced ;
var bool: aux15973_BOOL:: var_is_introduced ;
var bool: aux15974_BOOL:: var_is_introduced ;
var {0,1}: aux15974_INTEGER :: var_is_introduced ;
var bool: aux15975_BOOL:: var_is_introduced ;
var bool: aux15976_BOOL:: var_is_introduced ;
var 2..44: aux15977:: var_is_introduced ;
var bool: aux15978_BOOL:: var_is_introduced ;
var bool: aux15979_BOOL:: var_is_introduced ;
var bool: aux15980_BOOL:: var_is_introduced ;
var {0,1}: aux15980_INTEGER :: var_is_introduced ;
var bool: aux15981_BOOL:: var_is_introduced ;
var bool: aux15982_BOOL:: var_is_introduced ;
var 1..43: aux15983:: var_is_introduced ;
var bool: aux15984_BOOL:: var_is_introduced ;
var bool: aux15985_BOOL:: var_is_introduced ;
var bool: aux15986_BOOL:: var_is_introduced ;
var {0,1}: aux15986_INTEGER :: var_is_introduced ;
var bool: aux15987_BOOL:: var_is_introduced ;
var bool: aux15988_BOOL:: var_is_introduced ;
var 2..44: aux15989:: var_is_introduced ;
var bool: aux15990_BOOL:: var_is_introduced ;
var bool: aux15991_BOOL:: var_is_introduced ;
var bool: aux15992_BOOL:: var_is_introduced ;
var {0,1}: aux15992_INTEGER :: var_is_introduced ;
var bool: aux15993_BOOL:: var_is_introduced ;
var bool: aux15994_BOOL:: var_is_introduced ;
var 1..43: aux15995:: var_is_introduced ;
var bool: aux15996_BOOL:: var_is_introduced ;
var bool: aux15997_BOOL:: var_is_introduced ;
var bool: aux15998_BOOL:: var_is_introduced ;
var {0,1}: aux15998_INTEGER :: var_is_introduced ;
var bool: aux15999_BOOL:: var_is_introduced ;
var bool: aux16000_BOOL:: var_is_introduced ;
var 2..44: aux16001:: var_is_introduced ;
var bool: aux16002_BOOL:: var_is_introduced ;
var bool: aux16003_BOOL:: var_is_introduced ;
var bool: aux16004_BOOL:: var_is_introduced ;
var {0,1}: aux16004_INTEGER :: var_is_introduced ;
var bool: aux16005_BOOL:: var_is_introduced ;
var bool: aux16006_BOOL:: var_is_introduced ;
var 2..44: aux16007:: var_is_introduced ;
var bool: aux16008_BOOL:: var_is_introduced ;
var bool: aux16009_BOOL:: var_is_introduced ;
var bool: aux16010_BOOL:: var_is_introduced ;
var {0,1}: aux16010_INTEGER :: var_is_introduced ;
var bool: aux16011_BOOL:: var_is_introduced ;
var bool: aux16012_BOOL:: var_is_introduced ;
var 1..43: aux16013:: var_is_introduced ;
var bool: aux16014_BOOL:: var_is_introduced ;
var bool: aux16015_BOOL:: var_is_introduced ;
var bool: aux16016_BOOL:: var_is_introduced ;
var {0,1}: aux16016_INTEGER :: var_is_introduced ;
var bool: aux16017_BOOL:: var_is_introduced ;
var bool: aux16018_BOOL:: var_is_introduced ;
var 4..46: aux16019:: var_is_introduced ;
var bool: aux16020_BOOL:: var_is_introduced ;
var bool: aux16021_BOOL:: var_is_introduced ;
var bool: aux16022_BOOL:: var_is_introduced ;
var {0,1}: aux16022_INTEGER :: var_is_introduced ;
var bool: aux16023_BOOL:: var_is_introduced ;
var bool: aux16024_BOOL:: var_is_introduced ;
var 2..44: aux16025:: var_is_introduced ;
var bool: aux16026_BOOL:: var_is_introduced ;
var bool: aux16027_BOOL:: var_is_introduced ;
var bool: aux16028_BOOL:: var_is_introduced ;
var {0,1}: aux16028_INTEGER :: var_is_introduced ;
var bool: aux16029_BOOL:: var_is_introduced ;
var bool: aux16030_BOOL:: var_is_introduced ;
var 3..45: aux16031:: var_is_introduced ;
var bool: aux16032_BOOL:: var_is_introduced ;
var bool: aux16033_BOOL:: var_is_introduced ;
var bool: aux16034_BOOL:: var_is_introduced ;
var {0,1}: aux16034_INTEGER :: var_is_introduced ;
var bool: aux16035_BOOL:: var_is_introduced ;
var bool: aux16036_BOOL:: var_is_introduced ;
var 1..43: aux16037:: var_is_introduced ;
var bool: aux16038_BOOL:: var_is_introduced ;
var bool: aux16039_BOOL:: var_is_introduced ;
var bool: aux16040_BOOL:: var_is_introduced ;
var {0,1}: aux16040_INTEGER :: var_is_introduced ;
var bool: aux16041_BOOL:: var_is_introduced ;
var bool: aux16042_BOOL:: var_is_introduced ;
var 2..44: aux16043:: var_is_introduced ;
var bool: aux16044_BOOL:: var_is_introduced ;
var bool: aux16045_BOOL:: var_is_introduced ;
var bool: aux16046_BOOL:: var_is_introduced ;
var {0,1}: aux16046_INTEGER :: var_is_introduced ;
var bool: aux16047_BOOL:: var_is_introduced ;
var bool: aux16048_BOOL:: var_is_introduced ;
var 3..45: aux16049:: var_is_introduced ;
var bool: aux16050_BOOL:: var_is_introduced ;
var bool: aux16051_BOOL:: var_is_introduced ;
var bool: aux16052_BOOL:: var_is_introduced ;
var {0,1}: aux16052_INTEGER :: var_is_introduced ;
var bool: aux16053_BOOL:: var_is_introduced ;
var 3..45: aux16054:: var_is_introduced ;
var bool: aux16055_BOOL:: var_is_introduced ;
var bool: aux16056_BOOL:: var_is_introduced ;
var {0,1}: aux16056_INTEGER :: var_is_introduced ;
var bool: aux16057_BOOL:: var_is_introduced ;
var bool: aux16058_BOOL:: var_is_introduced ;
var bool: aux16059_BOOL:: var_is_introduced ;
var 2..44: aux16060:: var_is_introduced ;
var bool: aux16061_BOOL:: var_is_introduced ;
var bool: aux16062_BOOL:: var_is_introduced ;
var bool: aux16063_BOOL:: var_is_introduced ;
var {0,1}: aux16063_INTEGER :: var_is_introduced ;
var bool: aux16064_BOOL:: var_is_introduced ;
var bool: aux16065_BOOL:: var_is_introduced ;
var 3..45: aux16066:: var_is_introduced ;
var bool: aux16067_BOOL:: var_is_introduced ;
var bool: aux16068_BOOL:: var_is_introduced ;
var bool: aux16069_BOOL:: var_is_introduced ;
var {0,1}: aux16069_INTEGER :: var_is_introduced ;
var bool: aux16070_BOOL:: var_is_introduced ;
var bool: aux16071_BOOL:: var_is_introduced ;
var 2..44: aux16072:: var_is_introduced ;
var bool: aux16073_BOOL:: var_is_introduced ;
var bool: aux16074_BOOL:: var_is_introduced ;
var bool: aux16075_BOOL:: var_is_introduced ;
var {0,1}: aux16075_INTEGER :: var_is_introduced ;
var bool: aux16076_BOOL:: var_is_introduced ;
var bool: aux16077_BOOL:: var_is_introduced ;
var 2..44: aux16078:: var_is_introduced ;
var bool: aux16079_BOOL:: var_is_introduced ;
var bool: aux16080_BOOL:: var_is_introduced ;
var bool: aux16081_BOOL:: var_is_introduced ;
var {0,1}: aux16081_INTEGER :: var_is_introduced ;
var bool: aux16082_BOOL:: var_is_introduced ;
var bool: aux16083_BOOL:: var_is_introduced ;
var 3..45: aux16084:: var_is_introduced ;
var bool: aux16085_BOOL:: var_is_introduced ;
var bool: aux16086_BOOL:: var_is_introduced ;
var bool: aux16087_BOOL:: var_is_introduced ;
var {0,1}: aux16087_INTEGER :: var_is_introduced ;
var bool: aux16088_BOOL:: var_is_introduced ;
var bool: aux16089_BOOL:: var_is_introduced ;
var 2..44: aux16090:: var_is_introduced ;
var bool: aux16091_BOOL:: var_is_introduced ;
var bool: aux16092_BOOL:: var_is_introduced ;
var bool: aux16093_BOOL:: var_is_introduced ;
var {0,1}: aux16093_INTEGER :: var_is_introduced ;
var bool: aux16094_BOOL:: var_is_introduced ;
var bool: aux16095_BOOL:: var_is_introduced ;
var 1..43: aux16096:: var_is_introduced ;
var bool: aux16097_BOOL:: var_is_introduced ;
var bool: aux16098_BOOL:: var_is_introduced ;
var bool: aux16099_BOOL:: var_is_introduced ;
var {0,1}: aux16099_INTEGER :: var_is_introduced ;
var bool: aux16100_BOOL:: var_is_introduced ;
var bool: aux16101_BOOL:: var_is_introduced ;
var 2..44: aux16102:: var_is_introduced ;
var bool: aux16103_BOOL:: var_is_introduced ;
var bool: aux16104_BOOL:: var_is_introduced ;
var bool: aux16105_BOOL:: var_is_introduced ;
var {0,1}: aux16105_INTEGER :: var_is_introduced ;
var bool: aux16106_BOOL:: var_is_introduced ;
var bool: aux16107_BOOL:: var_is_introduced ;
var 1..43: aux16108:: var_is_introduced ;
var bool: aux16109_BOOL:: var_is_introduced ;
var bool: aux16110_BOOL:: var_is_introduced ;
var bool: aux16111_BOOL:: var_is_introduced ;
var {0,1}: aux16111_INTEGER :: var_is_introduced ;
var bool: aux16112_BOOL:: var_is_introduced ;
var bool: aux16113_BOOL:: var_is_introduced ;
var 2..44: aux16114:: var_is_introduced ;
var bool: aux16115_BOOL:: var_is_introduced ;
var bool: aux16116_BOOL:: var_is_introduced ;
var bool: aux16117_BOOL:: var_is_introduced ;
var {0,1}: aux16117_INTEGER :: var_is_introduced ;
var bool: aux16118_BOOL:: var_is_introduced ;
var bool: aux16119_BOOL:: var_is_introduced ;
var 2..44: aux16120:: var_is_introduced ;
var bool: aux16121_BOOL:: var_is_introduced ;
var bool: aux16122_BOOL:: var_is_introduced ;
var bool: aux16123_BOOL:: var_is_introduced ;
var {0,1}: aux16123_INTEGER :: var_is_introduced ;
var bool: aux16124_BOOL:: var_is_introduced ;
var bool: aux16125_BOOL:: var_is_introduced ;
var 1..43: aux16126:: var_is_introduced ;
var bool: aux16127_BOOL:: var_is_introduced ;
var bool: aux16128_BOOL:: var_is_introduced ;
var bool: aux16129_BOOL:: var_is_introduced ;
var {0,1}: aux16129_INTEGER :: var_is_introduced ;
var bool: aux16130_BOOL:: var_is_introduced ;
var bool: aux16131_BOOL:: var_is_introduced ;
var 4..46: aux16132:: var_is_introduced ;
var bool: aux16133_BOOL:: var_is_introduced ;
var bool: aux16134_BOOL:: var_is_introduced ;
var bool: aux16135_BOOL:: var_is_introduced ;
var {0,1}: aux16135_INTEGER :: var_is_introduced ;
var bool: aux16136_BOOL:: var_is_introduced ;
var bool: aux16137_BOOL:: var_is_introduced ;
var 2..44: aux16138:: var_is_introduced ;
var bool: aux16139_BOOL:: var_is_introduced ;
var bool: aux16140_BOOL:: var_is_introduced ;
var bool: aux16141_BOOL:: var_is_introduced ;
var {0,1}: aux16141_INTEGER :: var_is_introduced ;
var bool: aux16142_BOOL:: var_is_introduced ;
var bool: aux16143_BOOL:: var_is_introduced ;
var 3..45: aux16144:: var_is_introduced ;
var bool: aux16145_BOOL:: var_is_introduced ;
var bool: aux16146_BOOL:: var_is_introduced ;
var bool: aux16147_BOOL:: var_is_introduced ;
var {0,1}: aux16147_INTEGER :: var_is_introduced ;
var bool: aux16148_BOOL:: var_is_introduced ;
var bool: aux16149_BOOL:: var_is_introduced ;
var 1..43: aux16150:: var_is_introduced ;
var bool: aux16151_BOOL:: var_is_introduced ;
var bool: aux16152_BOOL:: var_is_introduced ;
var bool: aux16153_BOOL:: var_is_introduced ;
var {0,1}: aux16153_INTEGER :: var_is_introduced ;
var bool: aux16154_BOOL:: var_is_introduced ;
var bool: aux16155_BOOL:: var_is_introduced ;
var 3..45: aux16156:: var_is_introduced ;
var bool: aux16157_BOOL:: var_is_introduced ;
var bool: aux16158_BOOL:: var_is_introduced ;
var bool: aux16159_BOOL:: var_is_introduced ;
var {0,1}: aux16159_INTEGER :: var_is_introduced ;
var bool: aux16160_BOOL:: var_is_introduced ;
var bool: aux16161_BOOL:: var_is_introduced ;
var 2..44: aux16162:: var_is_introduced ;
var bool: aux16163_BOOL:: var_is_introduced ;
var bool: aux16164_BOOL:: var_is_introduced ;
var bool: aux16165_BOOL:: var_is_introduced ;
var {0,1}: aux16165_INTEGER :: var_is_introduced ;
var bool: aux16166_BOOL:: var_is_introduced ;
var bool: aux16167_BOOL:: var_is_introduced ;
var 3..45: aux16168:: var_is_introduced ;
var bool: aux16169_BOOL:: var_is_introduced ;
var bool: aux16170_BOOL:: var_is_introduced ;
var bool: aux16171_BOOL:: var_is_introduced ;
var {0,1}: aux16171_INTEGER :: var_is_introduced ;
var bool: aux16172_BOOL:: var_is_introduced ;
var 1..43: aux16173:: var_is_introduced ;
var bool: aux16174_BOOL:: var_is_introduced ;
var bool: aux16175_BOOL:: var_is_introduced ;
var {0,1}: aux16175_INTEGER :: var_is_introduced ;
var bool: aux16176_BOOL:: var_is_introduced ;
var bool: aux16177_BOOL:: var_is_introduced ;
var bool: aux16178_BOOL:: var_is_introduced ;
var 1..43: aux16179:: var_is_introduced ;
var bool: aux16180_BOOL:: var_is_introduced ;
var bool: aux16181_BOOL:: var_is_introduced ;
var bool: aux16182_BOOL:: var_is_introduced ;
var {0,1}: aux16182_INTEGER :: var_is_introduced ;
var bool: aux16183_BOOL:: var_is_introduced ;
var bool: aux16184_BOOL:: var_is_introduced ;
var 2..44: aux16185:: var_is_introduced ;
var bool: aux16186_BOOL:: var_is_introduced ;
var bool: aux16187_BOOL:: var_is_introduced ;
var bool: aux16188_BOOL:: var_is_introduced ;
var {0,1}: aux16188_INTEGER :: var_is_introduced ;
var bool: aux16189_BOOL:: var_is_introduced ;
var bool: aux16190_BOOL:: var_is_introduced ;
var 3..45: aux16191:: var_is_introduced ;
var bool: aux16192_BOOL:: var_is_introduced ;
var bool: aux16193_BOOL:: var_is_introduced ;
var bool: aux16194_BOOL:: var_is_introduced ;
var {0,1}: aux16194_INTEGER :: var_is_introduced ;
var bool: aux16195_BOOL:: var_is_introduced ;
var bool: aux16196_BOOL:: var_is_introduced ;
var 2..44: aux16197:: var_is_introduced ;
var bool: aux16198_BOOL:: var_is_introduced ;
var bool: aux16199_BOOL:: var_is_introduced ;
var bool: aux16200_BOOL:: var_is_introduced ;
var {0,1}: aux16200_INTEGER :: var_is_introduced ;
var bool: aux16201_BOOL:: var_is_introduced ;
var bool: aux16202_BOOL:: var_is_introduced ;
var 2..44: aux16203:: var_is_introduced ;
var bool: aux16204_BOOL:: var_is_introduced ;
var bool: aux16205_BOOL:: var_is_introduced ;
var bool: aux16206_BOOL:: var_is_introduced ;
var {0,1}: aux16206_INTEGER :: var_is_introduced ;
var bool: aux16207_BOOL:: var_is_introduced ;
var bool: aux16208_BOOL:: var_is_introduced ;
var 3..45: aux16209:: var_is_introduced ;
var bool: aux16210_BOOL:: var_is_introduced ;
var bool: aux16211_BOOL:: var_is_introduced ;
var bool: aux16212_BOOL:: var_is_introduced ;
var {0,1}: aux16212_INTEGER :: var_is_introduced ;
var bool: aux16213_BOOL:: var_is_introduced ;
var bool: aux16214_BOOL:: var_is_introduced ;
var 2..44: aux16215:: var_is_introduced ;
var bool: aux16216_BOOL:: var_is_introduced ;
var bool: aux16217_BOOL:: var_is_introduced ;
var bool: aux16218_BOOL:: var_is_introduced ;
var {0,1}: aux16218_INTEGER :: var_is_introduced ;
var bool: aux16219_BOOL:: var_is_introduced ;
var bool: aux16220_BOOL:: var_is_introduced ;
var 2..44: aux16221:: var_is_introduced ;
var bool: aux16222_BOOL:: var_is_introduced ;
var bool: aux16223_BOOL:: var_is_introduced ;
var bool: aux16224_BOOL:: var_is_introduced ;
var {0,1}: aux16224_INTEGER :: var_is_introduced ;
var bool: aux16225_BOOL:: var_is_introduced ;
var bool: aux16226_BOOL:: var_is_introduced ;
var 1..43: aux16227:: var_is_introduced ;
var bool: aux16228_BOOL:: var_is_introduced ;
var bool: aux16229_BOOL:: var_is_introduced ;
var bool: aux16230_BOOL:: var_is_introduced ;
var {0,1}: aux16230_INTEGER :: var_is_introduced ;
var bool: aux16231_BOOL:: var_is_introduced ;
var bool: aux16232_BOOL:: var_is_introduced ;
var 2..44: aux16233:: var_is_introduced ;
var bool: aux16234_BOOL:: var_is_introduced ;
var bool: aux16235_BOOL:: var_is_introduced ;
var bool: aux16236_BOOL:: var_is_introduced ;
var {0,1}: aux16236_INTEGER :: var_is_introduced ;
var bool: aux16237_BOOL:: var_is_introduced ;
var bool: aux16238_BOOL:: var_is_introduced ;
var 2..44: aux16239:: var_is_introduced ;
var bool: aux16240_BOOL:: var_is_introduced ;
var bool: aux16241_BOOL:: var_is_introduced ;
var bool: aux16242_BOOL:: var_is_introduced ;
var {0,1}: aux16242_INTEGER :: var_is_introduced ;
var bool: aux16243_BOOL:: var_is_introduced ;
var bool: aux16244_BOOL:: var_is_introduced ;
var 1..43: aux16245:: var_is_introduced ;
var bool: aux16246_BOOL:: var_is_introduced ;
var bool: aux16247_BOOL:: var_is_introduced ;
var bool: aux16248_BOOL:: var_is_introduced ;
var {0,1}: aux16248_INTEGER :: var_is_introduced ;
var bool: aux16249_BOOL:: var_is_introduced ;
var bool: aux16250_BOOL:: var_is_introduced ;
var 4..46: aux16251:: var_is_introduced ;
var bool: aux16252_BOOL:: var_is_introduced ;
var bool: aux16253_BOOL:: var_is_introduced ;
var bool: aux16254_BOOL:: var_is_introduced ;
var {0,1}: aux16254_INTEGER :: var_is_introduced ;
var bool: aux16255_BOOL:: var_is_introduced ;
var bool: aux16256_BOOL:: var_is_introduced ;
var 2..44: aux16257:: var_is_introduced ;
var bool: aux16258_BOOL:: var_is_introduced ;
var bool: aux16259_BOOL:: var_is_introduced ;
var bool: aux16260_BOOL:: var_is_introduced ;
var {0,1}: aux16260_INTEGER :: var_is_introduced ;
var bool: aux16261_BOOL:: var_is_introduced ;
var bool: aux16262_BOOL:: var_is_introduced ;
var 3..45: aux16263:: var_is_introduced ;
var bool: aux16264_BOOL:: var_is_introduced ;
var bool: aux16265_BOOL:: var_is_introduced ;
var bool: aux16266_BOOL:: var_is_introduced ;
var {0,1}: aux16266_INTEGER :: var_is_introduced ;
var bool: aux16267_BOOL:: var_is_introduced ;
var bool: aux16268_BOOL:: var_is_introduced ;
var 1..43: aux16269:: var_is_introduced ;
var bool: aux16270_BOOL:: var_is_introduced ;
var bool: aux16271_BOOL:: var_is_introduced ;
var bool: aux16272_BOOL:: var_is_introduced ;
var {0,1}: aux16272_INTEGER :: var_is_introduced ;
var bool: aux16273_BOOL:: var_is_introduced ;
var bool: aux16274_BOOL:: var_is_introduced ;
var 3..45: aux16275:: var_is_introduced ;
var bool: aux16276_BOOL:: var_is_introduced ;
var bool: aux16277_BOOL:: var_is_introduced ;
var bool: aux16278_BOOL:: var_is_introduced ;
var {0,1}: aux16278_INTEGER :: var_is_introduced ;
var bool: aux16279_BOOL:: var_is_introduced ;
var bool: aux16280_BOOL:: var_is_introduced ;
var 2..44: aux16281:: var_is_introduced ;
var bool: aux16282_BOOL:: var_is_introduced ;
var bool: aux16283_BOOL:: var_is_introduced ;
var bool: aux16284_BOOL:: var_is_introduced ;
var {0,1}: aux16284_INTEGER :: var_is_introduced ;
var bool: aux16285_BOOL:: var_is_introduced ;
var bool: aux16286_BOOL:: var_is_introduced ;
var 3..45: aux16287:: var_is_introduced ;
var bool: aux16288_BOOL:: var_is_introduced ;
var bool: aux16289_BOOL:: var_is_introduced ;
var bool: aux16290_BOOL:: var_is_introduced ;
var {0,1}: aux16290_INTEGER :: var_is_introduced ;
var bool: aux16291_BOOL:: var_is_introduced ;
var 1..43: aux16292:: var_is_introduced ;
var bool: aux16293_BOOL:: var_is_introduced ;
var bool: aux16294_BOOL:: var_is_introduced ;
var {0,1}: aux16294_INTEGER :: var_is_introduced ;
var bool: aux16295_BOOL:: var_is_introduced ;
var bool: aux16296_BOOL:: var_is_introduced ;
var bool: aux16297_BOOL:: var_is_introduced ;
var 1..43: aux16298:: var_is_introduced ;
var bool: aux16299_BOOL:: var_is_introduced ;
var bool: aux16300_BOOL:: var_is_introduced ;
var bool: aux16301_BOOL:: var_is_introduced ;
var {0,1}: aux16301_INTEGER :: var_is_introduced ;
var bool: aux16302_BOOL:: var_is_introduced ;
var bool: aux16303_BOOL:: var_is_introduced ;
var 2..44: aux16304:: var_is_introduced ;
var bool: aux16305_BOOL:: var_is_introduced ;
var bool: aux16306_BOOL:: var_is_introduced ;
var bool: aux16307_BOOL:: var_is_introduced ;
var {0,1}: aux16307_INTEGER :: var_is_introduced ;
var bool: aux16308_BOOL:: var_is_introduced ;
var bool: aux16309_BOOL:: var_is_introduced ;
var 3..45: aux16310:: var_is_introduced ;
var bool: aux16311_BOOL:: var_is_introduced ;
var bool: aux16312_BOOL:: var_is_introduced ;
var bool: aux16313_BOOL:: var_is_introduced ;
var {0,1}: aux16313_INTEGER :: var_is_introduced ;
var bool: aux16314_BOOL:: var_is_introduced ;
var bool: aux16315_BOOL:: var_is_introduced ;
var 2..44: aux16316:: var_is_introduced ;
var bool: aux16317_BOOL:: var_is_introduced ;
var bool: aux16318_BOOL:: var_is_introduced ;
var bool: aux16319_BOOL:: var_is_introduced ;
var {0,1}: aux16319_INTEGER :: var_is_introduced ;
var bool: aux16320_BOOL:: var_is_introduced ;
var bool: aux16321_BOOL:: var_is_introduced ;
var 2..44: aux16322:: var_is_introduced ;
var bool: aux16323_BOOL:: var_is_introduced ;
var bool: aux16324_BOOL:: var_is_introduced ;
var bool: aux16325_BOOL:: var_is_introduced ;
var {0,1}: aux16325_INTEGER :: var_is_introduced ;
var bool: aux16326_BOOL:: var_is_introduced ;
var bool: aux16327_BOOL:: var_is_introduced ;
var 3..45: aux16328:: var_is_introduced ;
var bool: aux16329_BOOL:: var_is_introduced ;
var bool: aux16330_BOOL:: var_is_introduced ;
var bool: aux16331_BOOL:: var_is_introduced ;
var {0,1}: aux16331_INTEGER :: var_is_introduced ;
var bool: aux16332_BOOL:: var_is_introduced ;
var bool: aux16333_BOOL:: var_is_introduced ;
var 2..44: aux16334:: var_is_introduced ;
var bool: aux16335_BOOL:: var_is_introduced ;
var bool: aux16336_BOOL:: var_is_introduced ;
var bool: aux16337_BOOL:: var_is_introduced ;
var {0,1}: aux16337_INTEGER :: var_is_introduced ;
var bool: aux16338_BOOL:: var_is_introduced ;
var bool: aux16339_BOOL:: var_is_introduced ;
var 1..43: aux16340:: var_is_introduced ;
var bool: aux16341_BOOL:: var_is_introduced ;
var bool: aux16342_BOOL:: var_is_introduced ;
var bool: aux16343_BOOL:: var_is_introduced ;
var {0,1}: aux16343_INTEGER :: var_is_introduced ;
var bool: aux16344_BOOL:: var_is_introduced ;
var bool: aux16345_BOOL:: var_is_introduced ;
var 2..44: aux16346:: var_is_introduced ;
var bool: aux16347_BOOL:: var_is_introduced ;
var bool: aux16348_BOOL:: var_is_introduced ;
var bool: aux16349_BOOL:: var_is_introduced ;
var {0,1}: aux16349_INTEGER :: var_is_introduced ;
var bool: aux16350_BOOL:: var_is_introduced ;
var bool: aux16351_BOOL:: var_is_introduced ;
var 1..43: aux16352:: var_is_introduced ;
var bool: aux16353_BOOL:: var_is_introduced ;
var bool: aux16354_BOOL:: var_is_introduced ;
var bool: aux16355_BOOL:: var_is_introduced ;
var {0,1}: aux16355_INTEGER :: var_is_introduced ;
var bool: aux16356_BOOL:: var_is_introduced ;
var bool: aux16357_BOOL:: var_is_introduced ;
var 2..44: aux16358:: var_is_introduced ;
var bool: aux16359_BOOL:: var_is_introduced ;
var bool: aux16360_BOOL:: var_is_introduced ;
var bool: aux16361_BOOL:: var_is_introduced ;
var {0,1}: aux16361_INTEGER :: var_is_introduced ;
var bool: aux16362_BOOL:: var_is_introduced ;
var bool: aux16363_BOOL:: var_is_introduced ;
var 2..44: aux16364:: var_is_introduced ;
var bool: aux16365_BOOL:: var_is_introduced ;
var bool: aux16366_BOOL:: var_is_introduced ;
var bool: aux16367_BOOL:: var_is_introduced ;
var {0,1}: aux16367_INTEGER :: var_is_introduced ;
var bool: aux16368_BOOL:: var_is_introduced ;
var bool: aux16369_BOOL:: var_is_introduced ;
var 1..43: aux16370:: var_is_introduced ;
var bool: aux16371_BOOL:: var_is_introduced ;
var bool: aux16372_BOOL:: var_is_introduced ;
var bool: aux16373_BOOL:: var_is_introduced ;
var {0,1}: aux16373_INTEGER :: var_is_introduced ;
var bool: aux16374_BOOL:: var_is_introduced ;
var bool: aux16375_BOOL:: var_is_introduced ;
var 4..46: aux16376:: var_is_introduced ;
var bool: aux16377_BOOL:: var_is_introduced ;
var bool: aux16378_BOOL:: var_is_introduced ;
var bool: aux16379_BOOL:: var_is_introduced ;
var {0,1}: aux16379_INTEGER :: var_is_introduced ;
var bool: aux16380_BOOL:: var_is_introduced ;
var bool: aux16381_BOOL:: var_is_introduced ;
var 2..44: aux16382:: var_is_introduced ;
var bool: aux16383_BOOL:: var_is_introduced ;
var bool: aux16384_BOOL:: var_is_introduced ;
var bool: aux16385_BOOL:: var_is_introduced ;
var {0,1}: aux16385_INTEGER :: var_is_introduced ;
var bool: aux16386_BOOL:: var_is_introduced ;
var bool: aux16387_BOOL:: var_is_introduced ;
var 3..45: aux16388:: var_is_introduced ;
var bool: aux16389_BOOL:: var_is_introduced ;
var bool: aux16390_BOOL:: var_is_introduced ;
var bool: aux16391_BOOL:: var_is_introduced ;
var {0,1}: aux16391_INTEGER :: var_is_introduced ;
var bool: aux16392_BOOL:: var_is_introduced ;
var bool: aux16393_BOOL:: var_is_introduced ;
var 1..43: aux16394:: var_is_introduced ;
var bool: aux16395_BOOL:: var_is_introduced ;
var bool: aux16396_BOOL:: var_is_introduced ;
var bool: aux16397_BOOL:: var_is_introduced ;
var {0,1}: aux16397_INTEGER :: var_is_introduced ;
var bool: aux16398_BOOL:: var_is_introduced ;
var bool: aux16399_BOOL:: var_is_introduced ;
var 3..45: aux16400:: var_is_introduced ;
var bool: aux16401_BOOL:: var_is_introduced ;
var bool: aux16402_BOOL:: var_is_introduced ;
var bool: aux16403_BOOL:: var_is_introduced ;
var {0,1}: aux16403_INTEGER :: var_is_introduced ;
var bool: aux16404_BOOL:: var_is_introduced ;
var bool: aux16405_BOOL:: var_is_introduced ;
var 3..45: aux16406:: var_is_introduced ;
var bool: aux16407_BOOL:: var_is_introduced ;
var bool: aux16408_BOOL:: var_is_introduced ;
var bool: aux16409_BOOL:: var_is_introduced ;
var {0,1}: aux16409_INTEGER :: var_is_introduced ;
var bool: aux16410_BOOL:: var_is_introduced ;
var 2..44: aux16411:: var_is_introduced ;
var bool: aux16412_BOOL:: var_is_introduced ;
var bool: aux16413_BOOL:: var_is_introduced ;
var {0,1}: aux16413_INTEGER :: var_is_introduced ;
var bool: aux16414_BOOL:: var_is_introduced ;
var bool: aux16415_BOOL:: var_is_introduced ;
var bool: aux16416_BOOL:: var_is_introduced ;
var 1..43: aux16417:: var_is_introduced ;
var bool: aux16418_BOOL:: var_is_introduced ;
var bool: aux16419_BOOL:: var_is_introduced ;
var bool: aux16420_BOOL:: var_is_introduced ;
var {0,1}: aux16420_INTEGER :: var_is_introduced ;
var bool: aux16421_BOOL:: var_is_introduced ;
var bool: aux16422_BOOL:: var_is_introduced ;
var 2..44: aux16423:: var_is_introduced ;
var bool: aux16424_BOOL:: var_is_introduced ;
var bool: aux16425_BOOL:: var_is_introduced ;
var bool: aux16426_BOOL:: var_is_introduced ;
var {0,1}: aux16426_INTEGER :: var_is_introduced ;
var bool: aux16427_BOOL:: var_is_introduced ;
var bool: aux16428_BOOL:: var_is_introduced ;
var 3..45: aux16429:: var_is_introduced ;
var bool: aux16430_BOOL:: var_is_introduced ;
var bool: aux16431_BOOL:: var_is_introduced ;
var bool: aux16432_BOOL:: var_is_introduced ;
var {0,1}: aux16432_INTEGER :: var_is_introduced ;
var bool: aux16433_BOOL:: var_is_introduced ;
var bool: aux16434_BOOL:: var_is_introduced ;
var 2..44: aux16435:: var_is_introduced ;
var bool: aux16436_BOOL:: var_is_introduced ;
var bool: aux16437_BOOL:: var_is_introduced ;
var bool: aux16438_BOOL:: var_is_introduced ;
var {0,1}: aux16438_INTEGER :: var_is_introduced ;
var bool: aux16439_BOOL:: var_is_introduced ;
var bool: aux16440_BOOL:: var_is_introduced ;
var 3..45: aux16441:: var_is_introduced ;
var bool: aux16442_BOOL:: var_is_introduced ;
var bool: aux16443_BOOL:: var_is_introduced ;
var bool: aux16444_BOOL:: var_is_introduced ;
var {0,1}: aux16444_INTEGER :: var_is_introduced ;
var bool: aux16445_BOOL:: var_is_introduced ;
var bool: aux16446_BOOL:: var_is_introduced ;
var 2..44: aux16447:: var_is_introduced ;
var bool: aux16448_BOOL:: var_is_introduced ;
var bool: aux16449_BOOL:: var_is_introduced ;
var bool: aux16450_BOOL:: var_is_introduced ;
var {0,1}: aux16450_INTEGER :: var_is_introduced ;
var bool: aux16451_BOOL:: var_is_introduced ;
var bool: aux16452_BOOL:: var_is_introduced ;
var 1..43: aux16453:: var_is_introduced ;
var bool: aux16454_BOOL:: var_is_introduced ;
var bool: aux16455_BOOL:: var_is_introduced ;
var bool: aux16456_BOOL:: var_is_introduced ;
var {0,1}: aux16456_INTEGER :: var_is_introduced ;
var bool: aux16457_BOOL:: var_is_introduced ;
var bool: aux16458_BOOL:: var_is_introduced ;
var 2..44: aux16459:: var_is_introduced ;
var bool: aux16460_BOOL:: var_is_introduced ;
var bool: aux16461_BOOL:: var_is_introduced ;
var bool: aux16462_BOOL:: var_is_introduced ;
var {0,1}: aux16462_INTEGER :: var_is_introduced ;
var bool: aux16463_BOOL:: var_is_introduced ;
var bool: aux16464_BOOL:: var_is_introduced ;
var 1..43: aux16465:: var_is_introduced ;
var bool: aux16466_BOOL:: var_is_introduced ;
var bool: aux16467_BOOL:: var_is_introduced ;
var bool: aux16468_BOOL:: var_is_introduced ;
var {0,1}: aux16468_INTEGER :: var_is_introduced ;
var bool: aux16469_BOOL:: var_is_introduced ;
var bool: aux16470_BOOL:: var_is_introduced ;
var 2..44: aux16471:: var_is_introduced ;
var bool: aux16472_BOOL:: var_is_introduced ;
var bool: aux16473_BOOL:: var_is_introduced ;
var bool: aux16474_BOOL:: var_is_introduced ;
var {0,1}: aux16474_INTEGER :: var_is_introduced ;
var bool: aux16475_BOOL:: var_is_introduced ;
var bool: aux16476_BOOL:: var_is_introduced ;
var 2..44: aux16477:: var_is_introduced ;
var bool: aux16478_BOOL:: var_is_introduced ;
var bool: aux16479_BOOL:: var_is_introduced ;
var bool: aux16480_BOOL:: var_is_introduced ;
var {0,1}: aux16480_INTEGER :: var_is_introduced ;
var bool: aux16481_BOOL:: var_is_introduced ;
var bool: aux16482_BOOL:: var_is_introduced ;
var 1..43: aux16483:: var_is_introduced ;
var bool: aux16484_BOOL:: var_is_introduced ;
var bool: aux16485_BOOL:: var_is_introduced ;
var bool: aux16486_BOOL:: var_is_introduced ;
var {0,1}: aux16486_INTEGER :: var_is_introduced ;
var bool: aux16487_BOOL:: var_is_introduced ;
var bool: aux16488_BOOL:: var_is_introduced ;
var 4..46: aux16489:: var_is_introduced ;
var bool: aux16490_BOOL:: var_is_introduced ;
var bool: aux16491_BOOL:: var_is_introduced ;
var bool: aux16492_BOOL:: var_is_introduced ;
var {0,1}: aux16492_INTEGER :: var_is_introduced ;
var bool: aux16493_BOOL:: var_is_introduced ;
var bool: aux16494_BOOL:: var_is_introduced ;
var 2..44: aux16495:: var_is_introduced ;
var bool: aux16496_BOOL:: var_is_introduced ;
var bool: aux16497_BOOL:: var_is_introduced ;
var bool: aux16498_BOOL:: var_is_introduced ;
var {0,1}: aux16498_INTEGER :: var_is_introduced ;
var bool: aux16499_BOOL:: var_is_introduced ;
var bool: aux16500_BOOL:: var_is_introduced ;
var 3..45: aux16501:: var_is_introduced ;
var bool: aux16502_BOOL:: var_is_introduced ;
var bool: aux16503_BOOL:: var_is_introduced ;
var bool: aux16504_BOOL:: var_is_introduced ;
var {0,1}: aux16504_INTEGER :: var_is_introduced ;
var bool: aux16505_BOOL:: var_is_introduced ;
var bool: aux16506_BOOL:: var_is_introduced ;
var 1..43: aux16507:: var_is_introduced ;
var bool: aux16508_BOOL:: var_is_introduced ;
var bool: aux16509_BOOL:: var_is_introduced ;
var bool: aux16510_BOOL:: var_is_introduced ;
var {0,1}: aux16510_INTEGER :: var_is_introduced ;
var bool: aux16511_BOOL:: var_is_introduced ;
var bool: aux16512_BOOL:: var_is_introduced ;
var 3..45: aux16513:: var_is_introduced ;
var bool: aux16514_BOOL:: var_is_introduced ;
var bool: aux16515_BOOL:: var_is_introduced ;
var bool: aux16516_BOOL:: var_is_introduced ;
var {0,1}: aux16516_INTEGER :: var_is_introduced ;
var bool: aux16517_BOOL:: var_is_introduced ;
var bool: aux16518_BOOL:: var_is_introduced ;
var 2..44: aux16519:: var_is_introduced ;
var bool: aux16520_BOOL:: var_is_introduced ;
var bool: aux16521_BOOL:: var_is_introduced ;
var bool: aux16522_BOOL:: var_is_introduced ;
var {0,1}: aux16522_INTEGER :: var_is_introduced ;
var bool: aux16523_BOOL:: var_is_introduced ;
var bool: aux16524_BOOL:: var_is_introduced ;
var 3..45: aux16525:: var_is_introduced ;
var bool: aux16526_BOOL:: var_is_introduced ;
var bool: aux16527_BOOL:: var_is_introduced ;
var bool: aux16528_BOOL:: var_is_introduced ;
var {0,1}: aux16528_INTEGER :: var_is_introduced ;
var bool: aux16529_BOOL:: var_is_introduced ;
var 2..44: aux16530:: var_is_introduced ;
var bool: aux16531_BOOL:: var_is_introduced ;
var bool: aux16532_BOOL:: var_is_introduced ;
var {0,1}: aux16532_INTEGER :: var_is_introduced ;
var bool: aux16533_BOOL:: var_is_introduced ;
var bool: aux16534_BOOL:: var_is_introduced ;
var bool: aux16535_BOOL:: var_is_introduced ;
var 1..43: aux16536:: var_is_introduced ;
var bool: aux16537_BOOL:: var_is_introduced ;
var bool: aux16538_BOOL:: var_is_introduced ;
var bool: aux16539_BOOL:: var_is_introduced ;
var {0,1}: aux16539_INTEGER :: var_is_introduced ;
var bool: aux16540_BOOL:: var_is_introduced ;
var bool: aux16541_BOOL:: var_is_introduced ;
var 2..44: aux16542:: var_is_introduced ;
var bool: aux16543_BOOL:: var_is_introduced ;
var bool: aux16544_BOOL:: var_is_introduced ;
var bool: aux16545_BOOL:: var_is_introduced ;
var {0,1}: aux16545_INTEGER :: var_is_introduced ;
var bool: aux16546_BOOL:: var_is_introduced ;
var bool: aux16547_BOOL:: var_is_introduced ;
var 3..45: aux16548:: var_is_introduced ;
var bool: aux16549_BOOL:: var_is_introduced ;
var bool: aux16550_BOOL:: var_is_introduced ;
var bool: aux16551_BOOL:: var_is_introduced ;
var {0,1}: aux16551_INTEGER :: var_is_introduced ;
var bool: aux16552_BOOL:: var_is_introduced ;
var bool: aux16553_BOOL:: var_is_introduced ;
var 2..44: aux16554:: var_is_introduced ;
var bool: aux16555_BOOL:: var_is_introduced ;
var bool: aux16556_BOOL:: var_is_introduced ;
var bool: aux16557_BOOL:: var_is_introduced ;
var {0,1}: aux16557_INTEGER :: var_is_introduced ;
var bool: aux16558_BOOL:: var_is_introduced ;
var bool: aux16559_BOOL:: var_is_introduced ;
var 2..44: aux16560:: var_is_introduced ;
var bool: aux16561_BOOL:: var_is_introduced ;
var bool: aux16562_BOOL:: var_is_introduced ;
var bool: aux16563_BOOL:: var_is_introduced ;
var {0,1}: aux16563_INTEGER :: var_is_introduced ;
var bool: aux16564_BOOL:: var_is_introduced ;
var bool: aux16565_BOOL:: var_is_introduced ;
var 3..45: aux16566:: var_is_introduced ;
var bool: aux16567_BOOL:: var_is_introduced ;
var bool: aux16568_BOOL:: var_is_introduced ;
var bool: aux16569_BOOL:: var_is_introduced ;
var {0,1}: aux16569_INTEGER :: var_is_introduced ;
var bool: aux16570_BOOL:: var_is_introduced ;
var bool: aux16571_BOOL:: var_is_introduced ;
var 2..44: aux16572:: var_is_introduced ;
var bool: aux16573_BOOL:: var_is_introduced ;
var bool: aux16574_BOOL:: var_is_introduced ;
var bool: aux16575_BOOL:: var_is_introduced ;
var {0,1}: aux16575_INTEGER :: var_is_introduced ;
var bool: aux16576_BOOL:: var_is_introduced ;
var bool: aux16577_BOOL:: var_is_introduced ;
var 1..43: aux16578:: var_is_introduced ;
var bool: aux16579_BOOL:: var_is_introduced ;
var bool: aux16580_BOOL:: var_is_introduced ;
var bool: aux16581_BOOL:: var_is_introduced ;
var {0,1}: aux16581_INTEGER :: var_is_introduced ;
var bool: aux16582_BOOL:: var_is_introduced ;
var bool: aux16583_BOOL:: var_is_introduced ;
var 1..43: aux16584:: var_is_introduced ;
var bool: aux16585_BOOL:: var_is_introduced ;
var bool: aux16586_BOOL:: var_is_introduced ;
var bool: aux16587_BOOL:: var_is_introduced ;
var {0,1}: aux16587_INTEGER :: var_is_introduced ;
var bool: aux16588_BOOL:: var_is_introduced ;
var bool: aux16589_BOOL:: var_is_introduced ;
var 2..44: aux16590:: var_is_introduced ;
var bool: aux16591_BOOL:: var_is_introduced ;
var bool: aux16592_BOOL:: var_is_introduced ;
var bool: aux16593_BOOL:: var_is_introduced ;
var {0,1}: aux16593_INTEGER :: var_is_introduced ;
var bool: aux16594_BOOL:: var_is_introduced ;
var bool: aux16595_BOOL:: var_is_introduced ;
var 2..44: aux16596:: var_is_introduced ;
var bool: aux16597_BOOL:: var_is_introduced ;
var bool: aux16598_BOOL:: var_is_introduced ;
var bool: aux16599_BOOL:: var_is_introduced ;
var {0,1}: aux16599_INTEGER :: var_is_introduced ;
var bool: aux16600_BOOL:: var_is_introduced ;
var bool: aux16601_BOOL:: var_is_introduced ;
var 1..43: aux16602:: var_is_introduced ;
var bool: aux16603_BOOL:: var_is_introduced ;
var bool: aux16604_BOOL:: var_is_introduced ;
var bool: aux16605_BOOL:: var_is_introduced ;
var {0,1}: aux16605_INTEGER :: var_is_introduced ;
var bool: aux16606_BOOL:: var_is_introduced ;
var bool: aux16607_BOOL:: var_is_introduced ;
var 4..46: aux16608:: var_is_introduced ;
var bool: aux16609_BOOL:: var_is_introduced ;
var bool: aux16610_BOOL:: var_is_introduced ;
var bool: aux16611_BOOL:: var_is_introduced ;
var {0,1}: aux16611_INTEGER :: var_is_introduced ;
var bool: aux16612_BOOL:: var_is_introduced ;
var bool: aux16613_BOOL:: var_is_introduced ;
var 2..44: aux16614:: var_is_introduced ;
var bool: aux16615_BOOL:: var_is_introduced ;
var bool: aux16616_BOOL:: var_is_introduced ;
var bool: aux16617_BOOL:: var_is_introduced ;
var {0,1}: aux16617_INTEGER :: var_is_introduced ;
var bool: aux16618_BOOL:: var_is_introduced ;
var bool: aux16619_BOOL:: var_is_introduced ;
var 3..45: aux16620:: var_is_introduced ;
var bool: aux16621_BOOL:: var_is_introduced ;
var bool: aux16622_BOOL:: var_is_introduced ;
var bool: aux16623_BOOL:: var_is_introduced ;
var {0,1}: aux16623_INTEGER :: var_is_introduced ;
var bool: aux16624_BOOL:: var_is_introduced ;
var bool: aux16625_BOOL:: var_is_introduced ;
var 1..43: aux16626:: var_is_introduced ;
var bool: aux16627_BOOL:: var_is_introduced ;
var bool: aux16628_BOOL:: var_is_introduced ;
var bool: aux16629_BOOL:: var_is_introduced ;
var {0,1}: aux16629_INTEGER :: var_is_introduced ;
var bool: aux16630_BOOL:: var_is_introduced ;
var bool: aux16631_BOOL:: var_is_introduced ;
var 3..45: aux16632:: var_is_introduced ;
var bool: aux16633_BOOL:: var_is_introduced ;
var bool: aux16634_BOOL:: var_is_introduced ;
var bool: aux16635_BOOL:: var_is_introduced ;
var {0,1}: aux16635_INTEGER :: var_is_introduced ;
var bool: aux16636_BOOL:: var_is_introduced ;
var bool: aux16637_BOOL:: var_is_introduced ;
var 2..44: aux16638:: var_is_introduced ;
var bool: aux16639_BOOL:: var_is_introduced ;
var bool: aux16640_BOOL:: var_is_introduced ;
var bool: aux16641_BOOL:: var_is_introduced ;
var {0,1}: aux16641_INTEGER :: var_is_introduced ;
var bool: aux16642_BOOL:: var_is_introduced ;
var bool: aux16643_BOOL:: var_is_introduced ;
var 3..45: aux16644:: var_is_introduced ;
var bool: aux16645_BOOL:: var_is_introduced ;
var bool: aux16646_BOOL:: var_is_introduced ;
var bool: aux16647_BOOL:: var_is_introduced ;
var {0,1}: aux16647_INTEGER :: var_is_introduced ;
var bool: aux16648_BOOL:: var_is_introduced ;
var 2..44: aux16649:: var_is_introduced ;
var bool: aux16650_BOOL:: var_is_introduced ;
var bool: aux16651_BOOL:: var_is_introduced ;
var {0,1}: aux16651_INTEGER :: var_is_introduced ;
var bool: aux16652_BOOL:: var_is_introduced ;
var bool: aux16653_BOOL:: var_is_introduced ;
var bool: aux16654_BOOL:: var_is_introduced ;
var 1..43: aux16655:: var_is_introduced ;
var bool: aux16656_BOOL:: var_is_introduced ;
var bool: aux16657_BOOL:: var_is_introduced ;
var bool: aux16658_BOOL:: var_is_introduced ;
var {0,1}: aux16658_INTEGER :: var_is_introduced ;
var bool: aux16659_BOOL:: var_is_introduced ;
var bool: aux16660_BOOL:: var_is_introduced ;
var 2..44: aux16661:: var_is_introduced ;
var bool: aux16662_BOOL:: var_is_introduced ;
var bool: aux16663_BOOL:: var_is_introduced ;
var bool: aux16664_BOOL:: var_is_introduced ;
var {0,1}: aux16664_INTEGER :: var_is_introduced ;
var bool: aux16665_BOOL:: var_is_introduced ;
var bool: aux16666_BOOL:: var_is_introduced ;
var 3..45: aux16667:: var_is_introduced ;
var bool: aux16668_BOOL:: var_is_introduced ;
var bool: aux16669_BOOL:: var_is_introduced ;
var bool: aux16670_BOOL:: var_is_introduced ;
var {0,1}: aux16670_INTEGER :: var_is_introduced ;
var bool: aux16671_BOOL:: var_is_introduced ;
var bool: aux16672_BOOL:: var_is_introduced ;
var 2..44: aux16673:: var_is_introduced ;
var bool: aux16674_BOOL:: var_is_introduced ;
var bool: aux16675_BOOL:: var_is_introduced ;
var bool: aux16676_BOOL:: var_is_introduced ;
var {0,1}: aux16676_INTEGER :: var_is_introduced ;
var bool: aux16677_BOOL:: var_is_introduced ;
var bool: aux16678_BOOL:: var_is_introduced ;
var 2..44: aux16679:: var_is_introduced ;
var bool: aux16680_BOOL:: var_is_introduced ;
var bool: aux16681_BOOL:: var_is_introduced ;
var bool: aux16682_BOOL:: var_is_introduced ;
var {0,1}: aux16682_INTEGER :: var_is_introduced ;
var bool: aux16683_BOOL:: var_is_introduced ;
var bool: aux16684_BOOL:: var_is_introduced ;
var 3..45: aux16685:: var_is_introduced ;
var bool: aux16686_BOOL:: var_is_introduced ;
var bool: aux16687_BOOL:: var_is_introduced ;
var bool: aux16688_BOOL:: var_is_introduced ;
var {0,1}: aux16688_INTEGER :: var_is_introduced ;
var bool: aux16689_BOOL:: var_is_introduced ;
var bool: aux16690_BOOL:: var_is_introduced ;
var 2..44: aux16691:: var_is_introduced ;
var bool: aux16692_BOOL:: var_is_introduced ;
var bool: aux16693_BOOL:: var_is_introduced ;
var bool: aux16694_BOOL:: var_is_introduced ;
var {0,1}: aux16694_INTEGER :: var_is_introduced ;
var bool: aux16695_BOOL:: var_is_introduced ;
var bool: aux16696_BOOL:: var_is_introduced ;
var 1..43: aux16697:: var_is_introduced ;
var bool: aux16698_BOOL:: var_is_introduced ;
var bool: aux16699_BOOL:: var_is_introduced ;
var bool: aux16700_BOOL:: var_is_introduced ;
var {0,1}: aux16700_INTEGER :: var_is_introduced ;
var bool: aux16701_BOOL:: var_is_introduced ;
var bool: aux16702_BOOL:: var_is_introduced ;
var 2..44: aux16703:: var_is_introduced ;
var bool: aux16704_BOOL:: var_is_introduced ;
var bool: aux16705_BOOL:: var_is_introduced ;
var bool: aux16706_BOOL:: var_is_introduced ;
var {0,1}: aux16706_INTEGER :: var_is_introduced ;
var bool: aux16707_BOOL:: var_is_introduced ;
var bool: aux16708_BOOL:: var_is_introduced ;
var 1..43: aux16709:: var_is_introduced ;
var bool: aux16710_BOOL:: var_is_introduced ;
var bool: aux16711_BOOL:: var_is_introduced ;
var bool: aux16712_BOOL:: var_is_introduced ;
var {0,1}: aux16712_INTEGER :: var_is_introduced ;
var bool: aux16713_BOOL:: var_is_introduced ;
var bool: aux16714_BOOL:: var_is_introduced ;
var 2..44: aux16715:: var_is_introduced ;
var bool: aux16716_BOOL:: var_is_introduced ;
var bool: aux16717_BOOL:: var_is_introduced ;
var bool: aux16718_BOOL:: var_is_introduced ;
var {0,1}: aux16718_INTEGER :: var_is_introduced ;
var bool: aux16719_BOOL:: var_is_introduced ;
var bool: aux16720_BOOL:: var_is_introduced ;
var 2..44: aux16721:: var_is_introduced ;
var bool: aux16722_BOOL:: var_is_introduced ;
var bool: aux16723_BOOL:: var_is_introduced ;
var bool: aux16724_BOOL:: var_is_introduced ;
var {0,1}: aux16724_INTEGER :: var_is_introduced ;
var bool: aux16725_BOOL:: var_is_introduced ;
var bool: aux16726_BOOL:: var_is_introduced ;
var 1..43: aux16727:: var_is_introduced ;
var bool: aux16728_BOOL:: var_is_introduced ;
var bool: aux16729_BOOL:: var_is_introduced ;
var bool: aux16730_BOOL:: var_is_introduced ;
var {0,1}: aux16730_INTEGER :: var_is_introduced ;
var bool: aux16731_BOOL:: var_is_introduced ;
var bool: aux16732_BOOL:: var_is_introduced ;
var 4..46: aux16733:: var_is_introduced ;
var bool: aux16734_BOOL:: var_is_introduced ;
var bool: aux16735_BOOL:: var_is_introduced ;
var bool: aux16736_BOOL:: var_is_introduced ;
var {0,1}: aux16736_INTEGER :: var_is_introduced ;
var bool: aux16737_BOOL:: var_is_introduced ;
var bool: aux16738_BOOL:: var_is_introduced ;
var 2..44: aux16739:: var_is_introduced ;
var bool: aux16740_BOOL:: var_is_introduced ;
var bool: aux16741_BOOL:: var_is_introduced ;
var bool: aux16742_BOOL:: var_is_introduced ;
var {0,1}: aux16742_INTEGER :: var_is_introduced ;
var bool: aux16743_BOOL:: var_is_introduced ;
var bool: aux16744_BOOL:: var_is_introduced ;
var 1..43: aux16745:: var_is_introduced ;
var bool: aux16746_BOOL:: var_is_introduced ;
var bool: aux16747_BOOL:: var_is_introduced ;
var bool: aux16748_BOOL:: var_is_introduced ;
var {0,1}: aux16748_INTEGER :: var_is_introduced ;
var bool: aux16749_BOOL:: var_is_introduced ;
var bool: aux16750_BOOL:: var_is_introduced ;
var 3..45: aux16751:: var_is_introduced ;
var bool: aux16752_BOOL:: var_is_introduced ;
var bool: aux16753_BOOL:: var_is_introduced ;
var bool: aux16754_BOOL:: var_is_introduced ;
var {0,1}: aux16754_INTEGER :: var_is_introduced ;
var bool: aux16755_BOOL:: var_is_introduced ;
var bool: aux16756_BOOL:: var_is_introduced ;
var 2..44: aux16757:: var_is_introduced ;
var bool: aux16758_BOOL:: var_is_introduced ;
var bool: aux16759_BOOL:: var_is_introduced ;
var bool: aux16760_BOOL:: var_is_introduced ;
var {0,1}: aux16760_INTEGER :: var_is_introduced ;
var bool: aux16761_BOOL:: var_is_introduced ;
var bool: aux16762_BOOL:: var_is_introduced ;
var 3..45: aux16763:: var_is_introduced ;
var bool: aux16764_BOOL:: var_is_introduced ;
var bool: aux16765_BOOL:: var_is_introduced ;
var bool: aux16766_BOOL:: var_is_introduced ;
var {0,1}: aux16766_INTEGER :: var_is_introduced ;
var bool: aux16767_BOOL:: var_is_introduced ;
var 3..45: aux16768:: var_is_introduced ;
var bool: aux16769_BOOL:: var_is_introduced ;
var bool: aux16770_BOOL:: var_is_introduced ;
var {0,1}: aux16770_INTEGER :: var_is_introduced ;
var bool: aux16771_BOOL:: var_is_introduced ;
var bool: aux16772_BOOL:: var_is_introduced ;
var bool: aux16773_BOOL:: var_is_introduced ;
var 1..43: aux16774:: var_is_introduced ;
var bool: aux16775_BOOL:: var_is_introduced ;
var bool: aux16776_BOOL:: var_is_introduced ;
var bool: aux16777_BOOL:: var_is_introduced ;
var {0,1}: aux16777_INTEGER :: var_is_introduced ;
var bool: aux16778_BOOL:: var_is_introduced ;
var bool: aux16779_BOOL:: var_is_introduced ;
var 2..44: aux16780:: var_is_introduced ;
var bool: aux16781_BOOL:: var_is_introduced ;
var bool: aux16782_BOOL:: var_is_introduced ;
var bool: aux16783_BOOL:: var_is_introduced ;
var {0,1}: aux16783_INTEGER :: var_is_introduced ;
var bool: aux16784_BOOL:: var_is_introduced ;
var bool: aux16785_BOOL:: var_is_introduced ;
var 3..45: aux16786:: var_is_introduced ;
var bool: aux16787_BOOL:: var_is_introduced ;
var bool: aux16788_BOOL:: var_is_introduced ;
var bool: aux16789_BOOL:: var_is_introduced ;
var {0,1}: aux16789_INTEGER :: var_is_introduced ;
var bool: aux16790_BOOL:: var_is_introduced ;
var bool: aux16791_BOOL:: var_is_introduced ;
var 2..44: aux16792:: var_is_introduced ;
var bool: aux16793_BOOL:: var_is_introduced ;
var bool: aux16794_BOOL:: var_is_introduced ;
var bool: aux16795_BOOL:: var_is_introduced ;
var {0,1}: aux16795_INTEGER :: var_is_introduced ;
var bool: aux16796_BOOL:: var_is_introduced ;
var bool: aux16797_BOOL:: var_is_introduced ;
var 2..44: aux16798:: var_is_introduced ;
var bool: aux16799_BOOL:: var_is_introduced ;
var bool: aux16800_BOOL:: var_is_introduced ;
var bool: aux16801_BOOL:: var_is_introduced ;
var {0,1}: aux16801_INTEGER :: var_is_introduced ;
var bool: aux16802_BOOL:: var_is_introduced ;
var bool: aux16803_BOOL:: var_is_introduced ;
var 3..45: aux16804:: var_is_introduced ;
var bool: aux16805_BOOL:: var_is_introduced ;
var bool: aux16806_BOOL:: var_is_introduced ;
var bool: aux16807_BOOL:: var_is_introduced ;
var {0,1}: aux16807_INTEGER :: var_is_introduced ;
var bool: aux16808_BOOL:: var_is_introduced ;
var bool: aux16809_BOOL:: var_is_introduced ;
var 2..44: aux16810:: var_is_introduced ;
var bool: aux16811_BOOL:: var_is_introduced ;
var bool: aux16812_BOOL:: var_is_introduced ;
var bool: aux16813_BOOL:: var_is_introduced ;
var {0,1}: aux16813_INTEGER :: var_is_introduced ;
var bool: aux16814_BOOL:: var_is_introduced ;
var bool: aux16815_BOOL:: var_is_introduced ;
var 1..43: aux16816:: var_is_introduced ;
var bool: aux16817_BOOL:: var_is_introduced ;
var bool: aux16818_BOOL:: var_is_introduced ;
var bool: aux16819_BOOL:: var_is_introduced ;
var {0,1}: aux16819_INTEGER :: var_is_introduced ;
var bool: aux16820_BOOL:: var_is_introduced ;
var bool: aux16821_BOOL:: var_is_introduced ;
var 2..44: aux16822:: var_is_introduced ;
var bool: aux16823_BOOL:: var_is_introduced ;
var bool: aux16824_BOOL:: var_is_introduced ;
var bool: aux16825_BOOL:: var_is_introduced ;
var {0,1}: aux16825_INTEGER :: var_is_introduced ;
var bool: aux16826_BOOL:: var_is_introduced ;
var bool: aux16827_BOOL:: var_is_introduced ;
var 1..43: aux16828:: var_is_introduced ;
var bool: aux16829_BOOL:: var_is_introduced ;
var bool: aux16830_BOOL:: var_is_introduced ;
var bool: aux16831_BOOL:: var_is_introduced ;
var {0,1}: aux16831_INTEGER :: var_is_introduced ;
var bool: aux16832_BOOL:: var_is_introduced ;
var bool: aux16833_BOOL:: var_is_introduced ;
var 2..44: aux16834:: var_is_introduced ;
var bool: aux16835_BOOL:: var_is_introduced ;
var bool: aux16836_BOOL:: var_is_introduced ;
var bool: aux16837_BOOL:: var_is_introduced ;
var {0,1}: aux16837_INTEGER :: var_is_introduced ;
var bool: aux16838_BOOL:: var_is_introduced ;
var bool: aux16839_BOOL:: var_is_introduced ;
var 2..44: aux16840:: var_is_introduced ;
var bool: aux16841_BOOL:: var_is_introduced ;
var bool: aux16842_BOOL:: var_is_introduced ;
var bool: aux16843_BOOL:: var_is_introduced ;
var {0,1}: aux16843_INTEGER :: var_is_introduced ;
var bool: aux16844_BOOL:: var_is_introduced ;
var bool: aux16845_BOOL:: var_is_introduced ;
var 1..43: aux16846:: var_is_introduced ;
var bool: aux16847_BOOL:: var_is_introduced ;
var bool: aux16848_BOOL:: var_is_introduced ;
var bool: aux16849_BOOL:: var_is_introduced ;
var {0,1}: aux16849_INTEGER :: var_is_introduced ;
var bool: aux16850_BOOL:: var_is_introduced ;
var bool: aux16851_BOOL:: var_is_introduced ;
var 4..46: aux16852:: var_is_introduced ;
var bool: aux16853_BOOL:: var_is_introduced ;
var bool: aux16854_BOOL:: var_is_introduced ;
var bool: aux16855_BOOL:: var_is_introduced ;
var {0,1}: aux16855_INTEGER :: var_is_introduced ;
var bool: aux16856_BOOL:: var_is_introduced ;
var bool: aux16857_BOOL:: var_is_introduced ;
var 2..44: aux16858:: var_is_introduced ;
var bool: aux16859_BOOL:: var_is_introduced ;
var bool: aux16860_BOOL:: var_is_introduced ;
var bool: aux16861_BOOL:: var_is_introduced ;
var {0,1}: aux16861_INTEGER :: var_is_introduced ;
var bool: aux16862_BOOL:: var_is_introduced ;
var bool: aux16863_BOOL:: var_is_introduced ;
var 3..45: aux16864:: var_is_introduced ;
var bool: aux16865_BOOL:: var_is_introduced ;
var bool: aux16866_BOOL:: var_is_introduced ;
var bool: aux16867_BOOL:: var_is_introduced ;
var {0,1}: aux16867_INTEGER :: var_is_introduced ;
var bool: aux16868_BOOL:: var_is_introduced ;
var bool: aux16869_BOOL:: var_is_introduced ;
var 3..45: aux16870:: var_is_introduced ;
var bool: aux16871_BOOL:: var_is_introduced ;
var bool: aux16872_BOOL:: var_is_introduced ;
var bool: aux16873_BOOL:: var_is_introduced ;
var {0,1}: aux16873_INTEGER :: var_is_introduced ;
var bool: aux16874_BOOL:: var_is_introduced ;
var bool: aux16875_BOOL:: var_is_introduced ;
var 2..44: aux16876:: var_is_introduced ;
var bool: aux16877_BOOL:: var_is_introduced ;
var bool: aux16878_BOOL:: var_is_introduced ;
var bool: aux16879_BOOL:: var_is_introduced ;
var {0,1}: aux16879_INTEGER :: var_is_introduced ;
var bool: aux16880_BOOL:: var_is_introduced ;
var bool: aux16881_BOOL:: var_is_introduced ;
var 3..45: aux16882:: var_is_introduced ;
var bool: aux16883_BOOL:: var_is_introduced ;
var bool: aux16884_BOOL:: var_is_introduced ;
var bool: aux16885_BOOL:: var_is_introduced ;
var {0,1}: aux16885_INTEGER :: var_is_introduced ;
var bool: aux16886_BOOL:: var_is_introduced ;
var 1..43: aux16887:: var_is_introduced ;
var bool: aux16888_BOOL:: var_is_introduced ;
var bool: aux16889_BOOL:: var_is_introduced ;
var {0,1}: aux16889_INTEGER :: var_is_introduced ;
var bool: aux16890_BOOL:: var_is_introduced ;
var bool: aux16891_BOOL:: var_is_introduced ;
var bool: aux16892_BOOL:: var_is_introduced ;
var 1..43: aux16893:: var_is_introduced ;
var bool: aux16894_BOOL:: var_is_introduced ;
var bool: aux16895_BOOL:: var_is_introduced ;
var bool: aux16896_BOOL:: var_is_introduced ;
var {0,1}: aux16896_INTEGER :: var_is_introduced ;
var bool: aux16897_BOOL:: var_is_introduced ;
var bool: aux16898_BOOL:: var_is_introduced ;
var 2..44: aux16899:: var_is_introduced ;
var bool: aux16900_BOOL:: var_is_introduced ;
var bool: aux16901_BOOL:: var_is_introduced ;
var bool: aux16902_BOOL:: var_is_introduced ;
var {0,1}: aux16902_INTEGER :: var_is_introduced ;
var bool: aux16903_BOOL:: var_is_introduced ;
var bool: aux16904_BOOL:: var_is_introduced ;
var 3..45: aux16905:: var_is_introduced ;
var bool: aux16906_BOOL:: var_is_introduced ;
var bool: aux16907_BOOL:: var_is_introduced ;
var bool: aux16908_BOOL:: var_is_introduced ;
var {0,1}: aux16908_INTEGER :: var_is_introduced ;
var bool: aux16909_BOOL:: var_is_introduced ;
var bool: aux16910_BOOL:: var_is_introduced ;
var 2..44: aux16911:: var_is_introduced ;
var bool: aux16912_BOOL:: var_is_introduced ;
var bool: aux16913_BOOL:: var_is_introduced ;
var bool: aux16914_BOOL:: var_is_introduced ;
var {0,1}: aux16914_INTEGER :: var_is_introduced ;
var bool: aux16915_BOOL:: var_is_introduced ;
var bool: aux16916_BOOL:: var_is_introduced ;
var 2..44: aux16917:: var_is_introduced ;
var bool: aux16918_BOOL:: var_is_introduced ;
var bool: aux16919_BOOL:: var_is_introduced ;
var bool: aux16920_BOOL:: var_is_introduced ;
var {0,1}: aux16920_INTEGER :: var_is_introduced ;
var bool: aux16921_BOOL:: var_is_introduced ;
var bool: aux16922_BOOL:: var_is_introduced ;
var 3..45: aux16923:: var_is_introduced ;
var bool: aux16924_BOOL:: var_is_introduced ;
var bool: aux16925_BOOL:: var_is_introduced ;
var bool: aux16926_BOOL:: var_is_introduced ;
var {0,1}: aux16926_INTEGER :: var_is_introduced ;
var bool: aux16927_BOOL:: var_is_introduced ;
var bool: aux16928_BOOL:: var_is_introduced ;
var 2..44: aux16929:: var_is_introduced ;
var bool: aux16930_BOOL:: var_is_introduced ;
var bool: aux16931_BOOL:: var_is_introduced ;
var bool: aux16932_BOOL:: var_is_introduced ;
var {0,1}: aux16932_INTEGER :: var_is_introduced ;
var bool: aux16933_BOOL:: var_is_introduced ;
var bool: aux16934_BOOL:: var_is_introduced ;
var 1..43: aux16935:: var_is_introduced ;
var bool: aux16936_BOOL:: var_is_introduced ;
var bool: aux16937_BOOL:: var_is_introduced ;
var bool: aux16938_BOOL:: var_is_introduced ;
var {0,1}: aux16938_INTEGER :: var_is_introduced ;
var bool: aux16939_BOOL:: var_is_introduced ;
var bool: aux16940_BOOL:: var_is_introduced ;
var 2..44: aux16941:: var_is_introduced ;
var bool: aux16942_BOOL:: var_is_introduced ;
var bool: aux16943_BOOL:: var_is_introduced ;
var bool: aux16944_BOOL:: var_is_introduced ;
var {0,1}: aux16944_INTEGER :: var_is_introduced ;
var bool: aux16945_BOOL:: var_is_introduced ;
var bool: aux16946_BOOL:: var_is_introduced ;
var 1..43: aux16947:: var_is_introduced ;
var bool: aux16948_BOOL:: var_is_introduced ;
var bool: aux16949_BOOL:: var_is_introduced ;
var bool: aux16950_BOOL:: var_is_introduced ;
var {0,1}: aux16950_INTEGER :: var_is_introduced ;
var bool: aux16951_BOOL:: var_is_introduced ;
var bool: aux16952_BOOL:: var_is_introduced ;
var 2..44: aux16953:: var_is_introduced ;
var bool: aux16954_BOOL:: var_is_introduced ;
var bool: aux16955_BOOL:: var_is_introduced ;
var bool: aux16956_BOOL:: var_is_introduced ;
var {0,1}: aux16956_INTEGER :: var_is_introduced ;
var bool: aux16957_BOOL:: var_is_introduced ;
var bool: aux16958_BOOL:: var_is_introduced ;
var 2..44: aux16959:: var_is_introduced ;
var bool: aux16960_BOOL:: var_is_introduced ;
var bool: aux16961_BOOL:: var_is_introduced ;
var bool: aux16962_BOOL:: var_is_introduced ;
var {0,1}: aux16962_INTEGER :: var_is_introduced ;
var bool: aux16963_BOOL:: var_is_introduced ;
var bool: aux16964_BOOL:: var_is_introduced ;
var 1..43: aux16965:: var_is_introduced ;
var bool: aux16966_BOOL:: var_is_introduced ;
var bool: aux16967_BOOL:: var_is_introduced ;
var bool: aux16968_BOOL:: var_is_introduced ;
var {0,1}: aux16968_INTEGER :: var_is_introduced ;
var bool: aux16969_BOOL:: var_is_introduced ;
var bool: aux16970_BOOL:: var_is_introduced ;
var 4..46: aux16971:: var_is_introduced ;
var bool: aux16972_BOOL:: var_is_introduced ;
var bool: aux16973_BOOL:: var_is_introduced ;
var bool: aux16974_BOOL:: var_is_introduced ;
var {0,1}: aux16974_INTEGER :: var_is_introduced ;
var bool: aux16975_BOOL:: var_is_introduced ;
var bool: aux16976_BOOL:: var_is_introduced ;
var 2..44: aux16977:: var_is_introduced ;
var bool: aux16978_BOOL:: var_is_introduced ;
var bool: aux16979_BOOL:: var_is_introduced ;
var bool: aux16980_BOOL:: var_is_introduced ;
var {0,1}: aux16980_INTEGER :: var_is_introduced ;
var bool: aux16981_BOOL:: var_is_introduced ;
var bool: aux16982_BOOL:: var_is_introduced ;
var 3..45: aux16983:: var_is_introduced ;
var bool: aux16984_BOOL:: var_is_introduced ;
var bool: aux16985_BOOL:: var_is_introduced ;
var bool: aux16986_BOOL:: var_is_introduced ;
var {0,1}: aux16986_INTEGER :: var_is_introduced ;
var bool: aux16987_BOOL:: var_is_introduced ;
var bool: aux16988_BOOL:: var_is_introduced ;
var 1..43: aux16989:: var_is_introduced ;
var bool: aux16990_BOOL:: var_is_introduced ;
var bool: aux16991_BOOL:: var_is_introduced ;
var bool: aux16992_BOOL:: var_is_introduced ;
var {0,1}: aux16992_INTEGER :: var_is_introduced ;
var bool: aux16993_BOOL:: var_is_introduced ;
var bool: aux16994_BOOL:: var_is_introduced ;
var 3..45: aux16995:: var_is_introduced ;
var bool: aux16996_BOOL:: var_is_introduced ;
var bool: aux16997_BOOL:: var_is_introduced ;
var bool: aux16998_BOOL:: var_is_introduced ;
var {0,1}: aux16998_INTEGER :: var_is_introduced ;
var bool: aux16999_BOOL:: var_is_introduced ;
var bool: aux17000_BOOL:: var_is_introduced ;
var 2..44: aux17001:: var_is_introduced ;
var bool: aux17002_BOOL:: var_is_introduced ;
var bool: aux17003_BOOL:: var_is_introduced ;
var bool: aux17004_BOOL:: var_is_introduced ;
var {0,1}: aux17004_INTEGER :: var_is_introduced ;
var bool: aux17005_BOOL:: var_is_introduced ;
var 3..45: aux17006:: var_is_introduced ;
var bool: aux17007_BOOL:: var_is_introduced ;
var bool: aux17008_BOOL:: var_is_introduced ;
var {0,1}: aux17008_INTEGER :: var_is_introduced ;
var bool: aux17009_BOOL:: var_is_introduced ;
var bool: aux17010_BOOL:: var_is_introduced ;
var bool: aux17011_BOOL:: var_is_introduced ;
var 1..43: aux17012:: var_is_introduced ;
var bool: aux17013_BOOL:: var_is_introduced ;
var bool: aux17014_BOOL:: var_is_introduced ;
var bool: aux17015_BOOL:: var_is_introduced ;
var {0,1}: aux17015_INTEGER :: var_is_introduced ;
var bool: aux17016_BOOL:: var_is_introduced ;
var bool: aux17017_BOOL:: var_is_introduced ;
var 2..44: aux17018:: var_is_introduced ;
var bool: aux17019_BOOL:: var_is_introduced ;
var bool: aux17020_BOOL:: var_is_introduced ;
var bool: aux17021_BOOL:: var_is_introduced ;
var {0,1}: aux17021_INTEGER :: var_is_introduced ;
var bool: aux17022_BOOL:: var_is_introduced ;
var bool: aux17023_BOOL:: var_is_introduced ;
var 3..45: aux17024:: var_is_introduced ;
var bool: aux17025_BOOL:: var_is_introduced ;
var bool: aux17026_BOOL:: var_is_introduced ;
var bool: aux17027_BOOL:: var_is_introduced ;
var {0,1}: aux17027_INTEGER :: var_is_introduced ;
var bool: aux17028_BOOL:: var_is_introduced ;
var bool: aux17029_BOOL:: var_is_introduced ;
var 2..44: aux17030:: var_is_introduced ;
var bool: aux17031_BOOL:: var_is_introduced ;
var bool: aux17032_BOOL:: var_is_introduced ;
var bool: aux17033_BOOL:: var_is_introduced ;
var {0,1}: aux17033_INTEGER :: var_is_introduced ;
var bool: aux17034_BOOL:: var_is_introduced ;
var bool: aux17035_BOOL:: var_is_introduced ;
var 2..44: aux17036:: var_is_introduced ;
var bool: aux17037_BOOL:: var_is_introduced ;
var bool: aux17038_BOOL:: var_is_introduced ;
var bool: aux17039_BOOL:: var_is_introduced ;
var {0,1}: aux17039_INTEGER :: var_is_introduced ;
var bool: aux17040_BOOL:: var_is_introduced ;
var bool: aux17041_BOOL:: var_is_introduced ;
var 3..45: aux17042:: var_is_introduced ;
var bool: aux17043_BOOL:: var_is_introduced ;
var bool: aux17044_BOOL:: var_is_introduced ;
var bool: aux17045_BOOL:: var_is_introduced ;
var {0,1}: aux17045_INTEGER :: var_is_introduced ;
var bool: aux17046_BOOL:: var_is_introduced ;
var bool: aux17047_BOOL:: var_is_introduced ;
var 2..44: aux17048:: var_is_introduced ;
var bool: aux17049_BOOL:: var_is_introduced ;
var bool: aux17050_BOOL:: var_is_introduced ;
var bool: aux17051_BOOL:: var_is_introduced ;
var {0,1}: aux17051_INTEGER :: var_is_introduced ;
var bool: aux17052_BOOL:: var_is_introduced ;
var bool: aux17053_BOOL:: var_is_introduced ;
var 1..43: aux17054:: var_is_introduced ;
var bool: aux17055_BOOL:: var_is_introduced ;
var bool: aux17056_BOOL:: var_is_introduced ;
var bool: aux17057_BOOL:: var_is_introduced ;
var {0,1}: aux17057_INTEGER :: var_is_introduced ;
var bool: aux17058_BOOL:: var_is_introduced ;
var bool: aux17059_BOOL:: var_is_introduced ;
var 2..44: aux17060:: var_is_introduced ;
var bool: aux17061_BOOL:: var_is_introduced ;
var bool: aux17062_BOOL:: var_is_introduced ;
var bool: aux17063_BOOL:: var_is_introduced ;
var {0,1}: aux17063_INTEGER :: var_is_introduced ;
var bool: aux17064_BOOL:: var_is_introduced ;
var bool: aux17065_BOOL:: var_is_introduced ;
var 1..43: aux17066:: var_is_introduced ;
var bool: aux17067_BOOL:: var_is_introduced ;
var bool: aux17068_BOOL:: var_is_introduced ;
var bool: aux17069_BOOL:: var_is_introduced ;
var {0,1}: aux17069_INTEGER :: var_is_introduced ;
var bool: aux17070_BOOL:: var_is_introduced ;
var bool: aux17071_BOOL:: var_is_introduced ;
var 2..44: aux17072:: var_is_introduced ;
var bool: aux17073_BOOL:: var_is_introduced ;
var bool: aux17074_BOOL:: var_is_introduced ;
var bool: aux17075_BOOL:: var_is_introduced ;
var {0,1}: aux17075_INTEGER :: var_is_introduced ;
var bool: aux17076_BOOL:: var_is_introduced ;
var bool: aux17077_BOOL:: var_is_introduced ;
var 2..44: aux17078:: var_is_introduced ;
var bool: aux17079_BOOL:: var_is_introduced ;
var bool: aux17080_BOOL:: var_is_introduced ;
var bool: aux17081_BOOL:: var_is_introduced ;
var {0,1}: aux17081_INTEGER :: var_is_introduced ;
var bool: aux17082_BOOL:: var_is_introduced ;
var bool: aux17083_BOOL:: var_is_introduced ;
var 1..43: aux17084:: var_is_introduced ;
var bool: aux17085_BOOL:: var_is_introduced ;
var bool: aux17086_BOOL:: var_is_introduced ;
var bool: aux17087_BOOL:: var_is_introduced ;
var {0,1}: aux17087_INTEGER :: var_is_introduced ;
var bool: aux17088_BOOL:: var_is_introduced ;
var bool: aux17089_BOOL:: var_is_introduced ;
var 2..44: aux17090:: var_is_introduced ;
var bool: aux17091_BOOL:: var_is_introduced ;
var bool: aux17092_BOOL:: var_is_introduced ;
var bool: aux17093_BOOL:: var_is_introduced ;
var {0,1}: aux17093_INTEGER :: var_is_introduced ;
var bool: aux17094_BOOL:: var_is_introduced ;
var bool: aux17095_BOOL:: var_is_introduced ;
var 3..45: aux17096:: var_is_introduced ;
var bool: aux17097_BOOL:: var_is_introduced ;
var bool: aux17098_BOOL:: var_is_introduced ;
var bool: aux17099_BOOL:: var_is_introduced ;
var {0,1}: aux17099_INTEGER :: var_is_introduced ;
var bool: aux17100_BOOL:: var_is_introduced ;
var bool: aux17101_BOOL:: var_is_introduced ;
var 1..43: aux17102:: var_is_introduced ;
var bool: aux17103_BOOL:: var_is_introduced ;
var bool: aux17104_BOOL:: var_is_introduced ;
var bool: aux17105_BOOL:: var_is_introduced ;
var {0,1}: aux17105_INTEGER :: var_is_introduced ;
var bool: aux17106_BOOL:: var_is_introduced ;
var bool: aux17107_BOOL:: var_is_introduced ;
var 3..45: aux17108:: var_is_introduced ;
var bool: aux17109_BOOL:: var_is_introduced ;
var bool: aux17110_BOOL:: var_is_introduced ;
var bool: aux17111_BOOL:: var_is_introduced ;
var {0,1}: aux17111_INTEGER :: var_is_introduced ;
var bool: aux17112_BOOL:: var_is_introduced ;
var bool: aux17113_BOOL:: var_is_introduced ;
var 2..44: aux17114:: var_is_introduced ;
var bool: aux17115_BOOL:: var_is_introduced ;
var bool: aux17116_BOOL:: var_is_introduced ;
var bool: aux17117_BOOL:: var_is_introduced ;
var {0,1}: aux17117_INTEGER :: var_is_introduced ;
var bool: aux17118_BOOL:: var_is_introduced ;
var bool: aux17119_BOOL:: var_is_introduced ;
var 3..45: aux17120:: var_is_introduced ;
var bool: aux17121_BOOL:: var_is_introduced ;
var bool: aux17122_BOOL:: var_is_introduced ;
var bool: aux17123_BOOL:: var_is_introduced ;
var {0,1}: aux17123_INTEGER :: var_is_introduced ;
var bool: aux17124_BOOL:: var_is_introduced ;
var 4..46: aux17125:: var_is_introduced ;
var bool: aux17126_BOOL:: var_is_introduced ;
var bool: aux17127_BOOL:: var_is_introduced ;
var {0,1}: aux17127_INTEGER :: var_is_introduced ;
var bool: aux17128_BOOL:: var_is_introduced ;
var bool: aux17129_BOOL:: var_is_introduced ;
var bool: aux17130_BOOL:: var_is_introduced ;
var 1..43: aux17131:: var_is_introduced ;
var bool: aux17132_BOOL:: var_is_introduced ;
var bool: aux17133_BOOL:: var_is_introduced ;
var bool: aux17134_BOOL:: var_is_introduced ;
var {0,1}: aux17134_INTEGER :: var_is_introduced ;
var bool: aux17135_BOOL:: var_is_introduced ;
var bool: aux17136_BOOL:: var_is_introduced ;
var 2..44: aux17137:: var_is_introduced ;
var bool: aux17138_BOOL:: var_is_introduced ;
var bool: aux17139_BOOL:: var_is_introduced ;
var bool: aux17140_BOOL:: var_is_introduced ;
var {0,1}: aux17140_INTEGER :: var_is_introduced ;
var bool: aux17141_BOOL:: var_is_introduced ;
var bool: aux17142_BOOL:: var_is_introduced ;
var 3..45: aux17143:: var_is_introduced ;
var bool: aux17144_BOOL:: var_is_introduced ;
var bool: aux17145_BOOL:: var_is_introduced ;
var bool: aux17146_BOOL:: var_is_introduced ;
var {0,1}: aux17146_INTEGER :: var_is_introduced ;
var bool: aux17147_BOOL:: var_is_introduced ;
var bool: aux17148_BOOL:: var_is_introduced ;
var 2..44: aux17149:: var_is_introduced ;
var bool: aux17150_BOOL:: var_is_introduced ;
var bool: aux17151_BOOL:: var_is_introduced ;
var bool: aux17152_BOOL:: var_is_introduced ;
var {0,1}: aux17152_INTEGER :: var_is_introduced ;
var bool: aux17153_BOOL:: var_is_introduced ;
var bool: aux17154_BOOL:: var_is_introduced ;
var 2..44: aux17155:: var_is_introduced ;
var bool: aux17156_BOOL:: var_is_introduced ;
var bool: aux17157_BOOL:: var_is_introduced ;
var bool: aux17158_BOOL:: var_is_introduced ;
var {0,1}: aux17158_INTEGER :: var_is_introduced ;
var bool: aux17159_BOOL:: var_is_introduced ;
var bool: aux17160_BOOL:: var_is_introduced ;
var 3..45: aux17161:: var_is_introduced ;
var bool: aux17162_BOOL:: var_is_introduced ;
var bool: aux17163_BOOL:: var_is_introduced ;
var bool: aux17164_BOOL:: var_is_introduced ;
var {0,1}: aux17164_INTEGER :: var_is_introduced ;
var bool: aux17165_BOOL:: var_is_introduced ;
var bool: aux17166_BOOL:: var_is_introduced ;
var 2..44: aux17167:: var_is_introduced ;
var bool: aux17168_BOOL:: var_is_introduced ;
var bool: aux17169_BOOL:: var_is_introduced ;
var bool: aux17170_BOOL:: var_is_introduced ;
var {0,1}: aux17170_INTEGER :: var_is_introduced ;
var bool: aux17171_BOOL:: var_is_introduced ;
var bool: aux17172_BOOL:: var_is_introduced ;
var 1..43: aux17173:: var_is_introduced ;
var bool: aux17174_BOOL:: var_is_introduced ;
var bool: aux17175_BOOL:: var_is_introduced ;
var bool: aux17176_BOOL:: var_is_introduced ;
var {0,1}: aux17176_INTEGER :: var_is_introduced ;
var bool: aux17177_BOOL:: var_is_introduced ;
var bool: aux17178_BOOL:: var_is_introduced ;
var 2..44: aux17179:: var_is_introduced ;
var bool: aux17180_BOOL:: var_is_introduced ;
var bool: aux17181_BOOL:: var_is_introduced ;
var bool: aux17182_BOOL:: var_is_introduced ;
var {0,1}: aux17182_INTEGER :: var_is_introduced ;
var bool: aux17183_BOOL:: var_is_introduced ;
var bool: aux17184_BOOL:: var_is_introduced ;
var 1..43: aux17185:: var_is_introduced ;
var bool: aux17186_BOOL:: var_is_introduced ;
var bool: aux17187_BOOL:: var_is_introduced ;
var bool: aux17188_BOOL:: var_is_introduced ;
var {0,1}: aux17188_INTEGER :: var_is_introduced ;
var bool: aux17189_BOOL:: var_is_introduced ;
var bool: aux17190_BOOL:: var_is_introduced ;
var 2..44: aux17191:: var_is_introduced ;
var bool: aux17192_BOOL:: var_is_introduced ;
var bool: aux17193_BOOL:: var_is_introduced ;
var bool: aux17194_BOOL:: var_is_introduced ;
var {0,1}: aux17194_INTEGER :: var_is_introduced ;
var bool: aux17195_BOOL:: var_is_introduced ;
var bool: aux17196_BOOL:: var_is_introduced ;
var 2..44: aux17197:: var_is_introduced ;
var bool: aux17198_BOOL:: var_is_introduced ;
var bool: aux17199_BOOL:: var_is_introduced ;
var bool: aux17200_BOOL:: var_is_introduced ;
var {0,1}: aux17200_INTEGER :: var_is_introduced ;
var bool: aux17201_BOOL:: var_is_introduced ;
var bool: aux17202_BOOL:: var_is_introduced ;
var 4..46: aux17203:: var_is_introduced ;
var bool: aux17204_BOOL:: var_is_introduced ;
var bool: aux17205_BOOL:: var_is_introduced ;
var bool: aux17206_BOOL:: var_is_introduced ;
var {0,1}: aux17206_INTEGER :: var_is_introduced ;
var bool: aux17207_BOOL:: var_is_introduced ;
var bool: aux17208_BOOL:: var_is_introduced ;
var 2..44: aux17209:: var_is_introduced ;
var bool: aux17210_BOOL:: var_is_introduced ;
var bool: aux17211_BOOL:: var_is_introduced ;
var bool: aux17212_BOOL:: var_is_introduced ;
var {0,1}: aux17212_INTEGER :: var_is_introduced ;
var bool: aux17213_BOOL:: var_is_introduced ;
var bool: aux17214_BOOL:: var_is_introduced ;
var 3..45: aux17215:: var_is_introduced ;
var bool: aux17216_BOOL:: var_is_introduced ;
var bool: aux17217_BOOL:: var_is_introduced ;
var bool: aux17218_BOOL:: var_is_introduced ;
var {0,1}: aux17218_INTEGER :: var_is_introduced ;
var bool: aux17219_BOOL:: var_is_introduced ;
var bool: aux17220_BOOL:: var_is_introduced ;
var 1..43: aux17221:: var_is_introduced ;
var bool: aux17222_BOOL:: var_is_introduced ;
var bool: aux17223_BOOL:: var_is_introduced ;
var bool: aux17224_BOOL:: var_is_introduced ;
var {0,1}: aux17224_INTEGER :: var_is_introduced ;
var bool: aux17225_BOOL:: var_is_introduced ;
var bool: aux17226_BOOL:: var_is_introduced ;
var 3..45: aux17227:: var_is_introduced ;
var bool: aux17228_BOOL:: var_is_introduced ;
var bool: aux17229_BOOL:: var_is_introduced ;
var bool: aux17230_BOOL:: var_is_introduced ;
var {0,1}: aux17230_INTEGER :: var_is_introduced ;
var bool: aux17231_BOOL:: var_is_introduced ;
var bool: aux17232_BOOL:: var_is_introduced ;
var 2..44: aux17233:: var_is_introduced ;
var bool: aux17234_BOOL:: var_is_introduced ;
var bool: aux17235_BOOL:: var_is_introduced ;
var bool: aux17236_BOOL:: var_is_introduced ;
var {0,1}: aux17236_INTEGER :: var_is_introduced ;
var bool: aux17237_BOOL:: var_is_introduced ;
var bool: aux17238_BOOL:: var_is_introduced ;
var 3..45: aux17239:: var_is_introduced ;
var bool: aux17240_BOOL:: var_is_introduced ;
var bool: aux17241_BOOL:: var_is_introduced ;
var bool: aux17242_BOOL:: var_is_introduced ;
var {0,1}: aux17242_INTEGER :: var_is_introduced ;
var bool: aux17243_BOOL:: var_is_introduced ;
var 1..43: aux17244:: var_is_introduced ;
var bool: aux17245_BOOL:: var_is_introduced ;
var bool: aux17246_BOOL:: var_is_introduced ;
var {0,1}: aux17246_INTEGER :: var_is_introduced ;
var bool: aux17247_BOOL:: var_is_introduced ;
var bool: aux17248_BOOL:: var_is_introduced ;
var bool: aux17249_BOOL:: var_is_introduced ;
var bool: aux17250_BOOL:: var_is_introduced ;
var 3..45: aux17251:: var_is_introduced ;
var bool: aux17252_BOOL:: var_is_introduced ;
var bool: aux17253_BOOL:: var_is_introduced ;
var bool: aux17254_BOOL:: var_is_introduced ;
var {0,1}: aux17254_INTEGER :: var_is_introduced ;
var 1..43: aux17255:: var_is_introduced ;
var bool: aux17256_BOOL:: var_is_introduced ;
var bool: aux17257_BOOL:: var_is_introduced ;
var bool: aux17258_BOOL:: var_is_introduced ;
var bool: aux17259_BOOL:: var_is_introduced ;
var bool: aux17260_BOOL:: var_is_introduced ;
var {0,1}: aux17260_INTEGER :: var_is_introduced ;
var 2..44: aux17261:: var_is_introduced ;
var bool: aux17262_BOOL:: var_is_introduced ;
var bool: aux17263_BOOL:: var_is_introduced ;
var bool: aux17264_BOOL:: var_is_introduced ;
var bool: aux17265_BOOL:: var_is_introduced ;
var bool: aux17266_BOOL:: var_is_introduced ;
var {0,1}: aux17266_INTEGER :: var_is_introduced ;
var 3..45: aux17267:: var_is_introduced ;
var bool: aux17268_BOOL:: var_is_introduced ;
var bool: aux17269_BOOL:: var_is_introduced ;
var bool: aux17270_BOOL:: var_is_introduced ;
var bool: aux17271_BOOL:: var_is_introduced ;
var bool: aux17272_BOOL:: var_is_introduced ;
var {0,1}: aux17272_INTEGER :: var_is_introduced ;
var 2..44: aux17273:: var_is_introduced ;
var bool: aux17274_BOOL:: var_is_introduced ;
var bool: aux17275_BOOL:: var_is_introduced ;
var bool: aux17276_BOOL:: var_is_introduced ;
var bool: aux17277_BOOL:: var_is_introduced ;
var bool: aux17278_BOOL:: var_is_introduced ;
var {0,1}: aux17278_INTEGER :: var_is_introduced ;
var 2..44: aux17279:: var_is_introduced ;
var bool: aux17280_BOOL:: var_is_introduced ;
var bool: aux17281_BOOL:: var_is_introduced ;
var bool: aux17282_BOOL:: var_is_introduced ;
var bool: aux17283_BOOL:: var_is_introduced ;
var bool: aux17284_BOOL:: var_is_introduced ;
var {0,1}: aux17284_INTEGER :: var_is_introduced ;
var 3..45: aux17285:: var_is_introduced ;
var bool: aux17286_BOOL:: var_is_introduced ;
var bool: aux17287_BOOL:: var_is_introduced ;
var bool: aux17288_BOOL:: var_is_introduced ;
var bool: aux17289_BOOL:: var_is_introduced ;
var bool: aux17290_BOOL:: var_is_introduced ;
var {0,1}: aux17290_INTEGER :: var_is_introduced ;
var 2..44: aux17291:: var_is_introduced ;
var bool: aux17292_BOOL:: var_is_introduced ;
var bool: aux17293_BOOL:: var_is_introduced ;
var bool: aux17294_BOOL:: var_is_introduced ;
var bool: aux17295_BOOL:: var_is_introduced ;
var bool: aux17296_BOOL:: var_is_introduced ;
var {0,1}: aux17296_INTEGER :: var_is_introduced ;
var 1..43: aux17297:: var_is_introduced ;
var bool: aux17298_BOOL:: var_is_introduced ;
var bool: aux17299_BOOL:: var_is_introduced ;
var bool: aux17300_BOOL:: var_is_introduced ;
var bool: aux17301_BOOL:: var_is_introduced ;
var bool: aux17302_BOOL:: var_is_introduced ;
var {0,1}: aux17302_INTEGER :: var_is_introduced ;
var 2..44: aux17303:: var_is_introduced ;
var bool: aux17304_BOOL:: var_is_introduced ;
var bool: aux17305_BOOL:: var_is_introduced ;
var bool: aux17306_BOOL:: var_is_introduced ;
var bool: aux17307_BOOL:: var_is_introduced ;
var bool: aux17308_BOOL:: var_is_introduced ;
var {0,1}: aux17308_INTEGER :: var_is_introduced ;
var 1..43: aux17309:: var_is_introduced ;
var bool: aux17310_BOOL:: var_is_introduced ;
var bool: aux17311_BOOL:: var_is_introduced ;
var bool: aux17312_BOOL:: var_is_introduced ;
var bool: aux17313_BOOL:: var_is_introduced ;
var bool: aux17314_BOOL:: var_is_introduced ;
var {0,1}: aux17314_INTEGER :: var_is_introduced ;
var 2..44: aux17315:: var_is_introduced ;
var bool: aux17316_BOOL:: var_is_introduced ;
var bool: aux17317_BOOL:: var_is_introduced ;
var bool: aux17318_BOOL:: var_is_introduced ;
var bool: aux17319_BOOL:: var_is_introduced ;
var bool: aux17320_BOOL:: var_is_introduced ;
var {0,1}: aux17320_INTEGER :: var_is_introduced ;
var 2..44: aux17321:: var_is_introduced ;
var bool: aux17322_BOOL:: var_is_introduced ;
var bool: aux17323_BOOL:: var_is_introduced ;
var bool: aux17324_BOOL:: var_is_introduced ;
var bool: aux17325_BOOL:: var_is_introduced ;
var bool: aux17326_BOOL:: var_is_introduced ;
var {0,1}: aux17326_INTEGER :: var_is_introduced ;
var 1..43: aux17327:: var_is_introduced ;
var bool: aux17328_BOOL:: var_is_introduced ;
var bool: aux17329_BOOL:: var_is_introduced ;
var bool: aux17330_BOOL:: var_is_introduced ;
var bool: aux17331_BOOL:: var_is_introduced ;
var bool: aux17332_BOOL:: var_is_introduced ;
var {0,1}: aux17332_INTEGER :: var_is_introduced ;
var 2..44: aux17333:: var_is_introduced ;
var bool: aux17334_BOOL:: var_is_introduced ;
var bool: aux17335_BOOL:: var_is_introduced ;
var bool: aux17336_BOOL:: var_is_introduced ;
var bool: aux17337_BOOL:: var_is_introduced ;
var bool: aux17338_BOOL:: var_is_introduced ;
var {0,1}: aux17338_INTEGER :: var_is_introduced ;
var 4..46: aux17339:: var_is_introduced ;
var bool: aux17340_BOOL:: var_is_introduced ;
var bool: aux17341_BOOL:: var_is_introduced ;
var bool: aux17342_BOOL:: var_is_introduced ;
var bool: aux17343_BOOL:: var_is_introduced ;
var bool: aux17344_BOOL:: var_is_introduced ;
var {0,1}: aux17344_INTEGER :: var_is_introduced ;
var 1..43: aux17345:: var_is_introduced ;
var bool: aux17346_BOOL:: var_is_introduced ;
var bool: aux17347_BOOL:: var_is_introduced ;
var bool: aux17348_BOOL:: var_is_introduced ;
var bool: aux17349_BOOL:: var_is_introduced ;
var bool: aux17350_BOOL:: var_is_introduced ;
var {0,1}: aux17350_INTEGER :: var_is_introduced ;
var 3..45: aux17351:: var_is_introduced ;
var bool: aux17352_BOOL:: var_is_introduced ;
var bool: aux17353_BOOL:: var_is_introduced ;
var bool: aux17354_BOOL:: var_is_introduced ;
var bool: aux17355_BOOL:: var_is_introduced ;
var bool: aux17356_BOOL:: var_is_introduced ;
var {0,1}: aux17356_INTEGER :: var_is_introduced ;
var 3..45: aux17357:: var_is_introduced ;
var bool: aux17358_BOOL:: var_is_introduced ;
var bool: aux17359_BOOL:: var_is_introduced ;
var bool: aux17360_BOOL:: var_is_introduced ;
var bool: aux17361_BOOL:: var_is_introduced ;
var bool: aux17362_BOOL:: var_is_introduced ;
var {0,1}: aux17362_INTEGER :: var_is_introduced ;
var 2..44: aux17363:: var_is_introduced ;
var bool: aux17364_BOOL:: var_is_introduced ;
var bool: aux17365_BOOL:: var_is_introduced ;
var bool: aux17366_BOOL:: var_is_introduced ;
var bool: aux17367_BOOL:: var_is_introduced ;
var bool: aux17368_BOOL:: var_is_introduced ;
var {0,1}: aux17368_INTEGER :: var_is_introduced ;
var bool: aux17369_BOOL:: var_is_introduced ;
var 1..43: aux17370:: var_is_introduced ;
var bool: aux17371_BOOL:: var_is_introduced ;
var bool: aux17372_BOOL:: var_is_introduced ;
var bool: aux17373_BOOL:: var_is_introduced ;
var {0,1}: aux17373_INTEGER :: var_is_introduced ;
var 1..43: aux17374:: var_is_introduced ;
var bool: aux17375_BOOL:: var_is_introduced ;
var bool: aux17376_BOOL:: var_is_introduced ;
var bool: aux17377_BOOL:: var_is_introduced ;
var bool: aux17378_BOOL:: var_is_introduced ;
var bool: aux17379_BOOL:: var_is_introduced ;
var {0,1}: aux17379_INTEGER :: var_is_introduced ;
var 2..44: aux17380:: var_is_introduced ;
var bool: aux17381_BOOL:: var_is_introduced ;
var bool: aux17382_BOOL:: var_is_introduced ;
var bool: aux17383_BOOL:: var_is_introduced ;
var bool: aux17384_BOOL:: var_is_introduced ;
var bool: aux17385_BOOL:: var_is_introduced ;
var {0,1}: aux17385_INTEGER :: var_is_introduced ;
var 3..45: aux17386:: var_is_introduced ;
var bool: aux17387_BOOL:: var_is_introduced ;
var bool: aux17388_BOOL:: var_is_introduced ;
var bool: aux17389_BOOL:: var_is_introduced ;
var bool: aux17390_BOOL:: var_is_introduced ;
var bool: aux17391_BOOL:: var_is_introduced ;
var {0,1}: aux17391_INTEGER :: var_is_introduced ;
var 2..44: aux17392:: var_is_introduced ;
var bool: aux17393_BOOL:: var_is_introduced ;
var bool: aux17394_BOOL:: var_is_introduced ;
var bool: aux17395_BOOL:: var_is_introduced ;
var bool: aux17396_BOOL:: var_is_introduced ;
var bool: aux17397_BOOL:: var_is_introduced ;
var {0,1}: aux17397_INTEGER :: var_is_introduced ;
var 2..44: aux17398:: var_is_introduced ;
var bool: aux17399_BOOL:: var_is_introduced ;
var bool: aux17400_BOOL:: var_is_introduced ;
var bool: aux17401_BOOL:: var_is_introduced ;
var bool: aux17402_BOOL:: var_is_introduced ;
var bool: aux17403_BOOL:: var_is_introduced ;
var {0,1}: aux17403_INTEGER :: var_is_introduced ;
var 3..45: aux17404:: var_is_introduced ;
var bool: aux17405_BOOL:: var_is_introduced ;
var bool: aux17406_BOOL:: var_is_introduced ;
var bool: aux17407_BOOL:: var_is_introduced ;
var bool: aux17408_BOOL:: var_is_introduced ;
var bool: aux17409_BOOL:: var_is_introduced ;
var {0,1}: aux17409_INTEGER :: var_is_introduced ;
var 2..44: aux17410:: var_is_introduced ;
var bool: aux17411_BOOL:: var_is_introduced ;
var bool: aux17412_BOOL:: var_is_introduced ;
var bool: aux17413_BOOL:: var_is_introduced ;
var bool: aux17414_BOOL:: var_is_introduced ;
var bool: aux17415_BOOL:: var_is_introduced ;
var {0,1}: aux17415_INTEGER :: var_is_introduced ;
var 1..43: aux17416:: var_is_introduced ;
var bool: aux17417_BOOL:: var_is_introduced ;
var bool: aux17418_BOOL:: var_is_introduced ;
var bool: aux17419_BOOL:: var_is_introduced ;
var bool: aux17420_BOOL:: var_is_introduced ;
var bool: aux17421_BOOL:: var_is_introduced ;
var {0,1}: aux17421_INTEGER :: var_is_introduced ;
var 2..44: aux17422:: var_is_introduced ;
var bool: aux17423_BOOL:: var_is_introduced ;
var bool: aux17424_BOOL:: var_is_introduced ;
var bool: aux17425_BOOL:: var_is_introduced ;
var bool: aux17426_BOOL:: var_is_introduced ;
var bool: aux17427_BOOL:: var_is_introduced ;
var {0,1}: aux17427_INTEGER :: var_is_introduced ;
var 1..43: aux17428:: var_is_introduced ;
var bool: aux17429_BOOL:: var_is_introduced ;
var bool: aux17430_BOOL:: var_is_introduced ;
var bool: aux17431_BOOL:: var_is_introduced ;
var bool: aux17432_BOOL:: var_is_introduced ;
var bool: aux17433_BOOL:: var_is_introduced ;
var {0,1}: aux17433_INTEGER :: var_is_introduced ;
var 2..44: aux17434:: var_is_introduced ;
var bool: aux17435_BOOL:: var_is_introduced ;
var bool: aux17436_BOOL:: var_is_introduced ;
var bool: aux17437_BOOL:: var_is_introduced ;
var bool: aux17438_BOOL:: var_is_introduced ;
var bool: aux17439_BOOL:: var_is_introduced ;
var {0,1}: aux17439_INTEGER :: var_is_introduced ;
var 2..44: aux17440:: var_is_introduced ;
var bool: aux17441_BOOL:: var_is_introduced ;
var bool: aux17442_BOOL:: var_is_introduced ;
var bool: aux17443_BOOL:: var_is_introduced ;
var bool: aux17444_BOOL:: var_is_introduced ;
var bool: aux17445_BOOL:: var_is_introduced ;
var {0,1}: aux17445_INTEGER :: var_is_introduced ;
var 1..43: aux17446:: var_is_introduced ;
var bool: aux17447_BOOL:: var_is_introduced ;
var bool: aux17448_BOOL:: var_is_introduced ;
var bool: aux17449_BOOL:: var_is_introduced ;
var bool: aux17450_BOOL:: var_is_introduced ;
var bool: aux17451_BOOL:: var_is_introduced ;
var {0,1}: aux17451_INTEGER :: var_is_introduced ;
var 2..44: aux17452:: var_is_introduced ;
var bool: aux17453_BOOL:: var_is_introduced ;
var bool: aux17454_BOOL:: var_is_introduced ;
var bool: aux17455_BOOL:: var_is_introduced ;
var bool: aux17456_BOOL:: var_is_introduced ;
var bool: aux17457_BOOL:: var_is_introduced ;
var {0,1}: aux17457_INTEGER :: var_is_introduced ;
var 4..46: aux17458:: var_is_introduced ;
var bool: aux17459_BOOL:: var_is_introduced ;
var bool: aux17460_BOOL:: var_is_introduced ;
var bool: aux17461_BOOL:: var_is_introduced ;
var bool: aux17462_BOOL:: var_is_introduced ;
var bool: aux17463_BOOL:: var_is_introduced ;
var {0,1}: aux17463_INTEGER :: var_is_introduced ;
var 3..45: aux17464:: var_is_introduced ;
var bool: aux17465_BOOL:: var_is_introduced ;
var bool: aux17466_BOOL:: var_is_introduced ;
var bool: aux17467_BOOL:: var_is_introduced ;
var bool: aux17468_BOOL:: var_is_introduced ;
var bool: aux17469_BOOL:: var_is_introduced ;
var {0,1}: aux17469_INTEGER :: var_is_introduced ;
var 3..45: aux17470:: var_is_introduced ;
var bool: aux17471_BOOL:: var_is_introduced ;
var bool: aux17472_BOOL:: var_is_introduced ;
var bool: aux17473_BOOL:: var_is_introduced ;
var bool: aux17474_BOOL:: var_is_introduced ;
var bool: aux17475_BOOL:: var_is_introduced ;
var {0,1}: aux17475_INTEGER :: var_is_introduced ;
var 2..44: aux17476:: var_is_introduced ;
var bool: aux17477_BOOL:: var_is_introduced ;
var bool: aux17478_BOOL:: var_is_introduced ;
var bool: aux17479_BOOL:: var_is_introduced ;
var bool: aux17480_BOOL:: var_is_introduced ;
var bool: aux17481_BOOL:: var_is_introduced ;
var {0,1}: aux17481_INTEGER :: var_is_introduced ;
var 3..45: aux17482:: var_is_introduced ;
var bool: aux17483_BOOL:: var_is_introduced ;
var bool: aux17484_BOOL:: var_is_introduced ;
var bool: aux17485_BOOL:: var_is_introduced ;
var bool: aux17486_BOOL:: var_is_introduced ;
var bool: aux17487_BOOL:: var_is_introduced ;
var {0,1}: aux17487_INTEGER :: var_is_introduced ;
var bool: aux17488_BOOL:: var_is_introduced ;
var 3..45: aux17489:: var_is_introduced ;
var bool: aux17490_BOOL:: var_is_introduced ;
var bool: aux17491_BOOL:: var_is_introduced ;
var bool: aux17492_BOOL:: var_is_introduced ;
var {0,1}: aux17492_INTEGER :: var_is_introduced ;
var 1..43: aux17493:: var_is_introduced ;
var bool: aux17494_BOOL:: var_is_introduced ;
var bool: aux17495_BOOL:: var_is_introduced ;
var bool: aux17496_BOOL:: var_is_introduced ;
var bool: aux17497_BOOL:: var_is_introduced ;
var bool: aux17498_BOOL:: var_is_introduced ;
var {0,1}: aux17498_INTEGER :: var_is_introduced ;
var 2..44: aux17499:: var_is_introduced ;
var bool: aux17500_BOOL:: var_is_introduced ;
var bool: aux17501_BOOL:: var_is_introduced ;
var bool: aux17502_BOOL:: var_is_introduced ;
var bool: aux17503_BOOL:: var_is_introduced ;
var bool: aux17504_BOOL:: var_is_introduced ;
var {0,1}: aux17504_INTEGER :: var_is_introduced ;
var 3..45: aux17505:: var_is_introduced ;
var bool: aux17506_BOOL:: var_is_introduced ;
var bool: aux17507_BOOL:: var_is_introduced ;
var bool: aux17508_BOOL:: var_is_introduced ;
var bool: aux17509_BOOL:: var_is_introduced ;
var bool: aux17510_BOOL:: var_is_introduced ;
var {0,1}: aux17510_INTEGER :: var_is_introduced ;
var 2..44: aux17511:: var_is_introduced ;
var bool: aux17512_BOOL:: var_is_introduced ;
var bool: aux17513_BOOL:: var_is_introduced ;
var bool: aux17514_BOOL:: var_is_introduced ;
var bool: aux17515_BOOL:: var_is_introduced ;
var bool: aux17516_BOOL:: var_is_introduced ;
var {0,1}: aux17516_INTEGER :: var_is_introduced ;
var 2..44: aux17517:: var_is_introduced ;
var bool: aux17518_BOOL:: var_is_introduced ;
var bool: aux17519_BOOL:: var_is_introduced ;
var bool: aux17520_BOOL:: var_is_introduced ;
var bool: aux17521_BOOL:: var_is_introduced ;
var bool: aux17522_BOOL:: var_is_introduced ;
var {0,1}: aux17522_INTEGER :: var_is_introduced ;
var 2..44: aux17523:: var_is_introduced ;
var bool: aux17524_BOOL:: var_is_introduced ;
var bool: aux17525_BOOL:: var_is_introduced ;
var bool: aux17526_BOOL:: var_is_introduced ;
var bool: aux17527_BOOL:: var_is_introduced ;
var bool: aux17528_BOOL:: var_is_introduced ;
var {0,1}: aux17528_INTEGER :: var_is_introduced ;
var 1..43: aux17529:: var_is_introduced ;
var bool: aux17530_BOOL:: var_is_introduced ;
var bool: aux17531_BOOL:: var_is_introduced ;
var bool: aux17532_BOOL:: var_is_introduced ;
var bool: aux17533_BOOL:: var_is_introduced ;
var bool: aux17534_BOOL:: var_is_introduced ;
var {0,1}: aux17534_INTEGER :: var_is_introduced ;
var 2..44: aux17535:: var_is_introduced ;
var bool: aux17536_BOOL:: var_is_introduced ;
var bool: aux17537_BOOL:: var_is_introduced ;
var bool: aux17538_BOOL:: var_is_introduced ;
var bool: aux17539_BOOL:: var_is_introduced ;
var bool: aux17540_BOOL:: var_is_introduced ;
var {0,1}: aux17540_INTEGER :: var_is_introduced ;
var 1..43: aux17541:: var_is_introduced ;
var bool: aux17542_BOOL:: var_is_introduced ;
var bool: aux17543_BOOL:: var_is_introduced ;
var bool: aux17544_BOOL:: var_is_introduced ;
var bool: aux17545_BOOL:: var_is_introduced ;
var bool: aux17546_BOOL:: var_is_introduced ;
var {0,1}: aux17546_INTEGER :: var_is_introduced ;
var 2..44: aux17547:: var_is_introduced ;
var bool: aux17548_BOOL:: var_is_introduced ;
var bool: aux17549_BOOL:: var_is_introduced ;
var bool: aux17550_BOOL:: var_is_introduced ;
var bool: aux17551_BOOL:: var_is_introduced ;
var bool: aux17552_BOOL:: var_is_introduced ;
var {0,1}: aux17552_INTEGER :: var_is_introduced ;
var 2..44: aux17553:: var_is_introduced ;
var bool: aux17554_BOOL:: var_is_introduced ;
var bool: aux17555_BOOL:: var_is_introduced ;
var bool: aux17556_BOOL:: var_is_introduced ;
var bool: aux17557_BOOL:: var_is_introduced ;
var bool: aux17558_BOOL:: var_is_introduced ;
var {0,1}: aux17558_INTEGER :: var_is_introduced ;
var 1..43: aux17559:: var_is_introduced ;
var bool: aux17560_BOOL:: var_is_introduced ;
var bool: aux17561_BOOL:: var_is_introduced ;
var bool: aux17562_BOOL:: var_is_introduced ;
var bool: aux17563_BOOL:: var_is_introduced ;
var bool: aux17564_BOOL:: var_is_introduced ;
var {0,1}: aux17564_INTEGER :: var_is_introduced ;
var 2..44: aux17565:: var_is_introduced ;
var bool: aux17566_BOOL:: var_is_introduced ;
var bool: aux17567_BOOL:: var_is_introduced ;
var bool: aux17568_BOOL:: var_is_introduced ;
var bool: aux17569_BOOL:: var_is_introduced ;
var bool: aux17570_BOOL:: var_is_introduced ;
var {0,1}: aux17570_INTEGER :: var_is_introduced ;
var 4..46: aux17571:: var_is_introduced ;
var bool: aux17572_BOOL:: var_is_introduced ;
var bool: aux17573_BOOL:: var_is_introduced ;
var bool: aux17574_BOOL:: var_is_introduced ;
var bool: aux17575_BOOL:: var_is_introduced ;
var bool: aux17576_BOOL:: var_is_introduced ;
var {0,1}: aux17576_INTEGER :: var_is_introduced ;
var 1..43: aux17577:: var_is_introduced ;
var bool: aux17578_BOOL:: var_is_introduced ;
var bool: aux17579_BOOL:: var_is_introduced ;
var bool: aux17580_BOOL:: var_is_introduced ;
var bool: aux17581_BOOL:: var_is_introduced ;
var bool: aux17582_BOOL:: var_is_introduced ;
var {0,1}: aux17582_INTEGER :: var_is_introduced ;
var 3..45: aux17583:: var_is_introduced ;
var bool: aux17584_BOOL:: var_is_introduced ;
var bool: aux17585_BOOL:: var_is_introduced ;
var bool: aux17586_BOOL:: var_is_introduced ;
var bool: aux17587_BOOL:: var_is_introduced ;
var bool: aux17588_BOOL:: var_is_introduced ;
var {0,1}: aux17588_INTEGER :: var_is_introduced ;
var 3..45: aux17589:: var_is_introduced ;
var bool: aux17590_BOOL:: var_is_introduced ;
var bool: aux17591_BOOL:: var_is_introduced ;
var bool: aux17592_BOOL:: var_is_introduced ;
var bool: aux17593_BOOL:: var_is_introduced ;
var bool: aux17594_BOOL:: var_is_introduced ;
var {0,1}: aux17594_INTEGER :: var_is_introduced ;
var 2..44: aux17595:: var_is_introduced ;
var bool: aux17596_BOOL:: var_is_introduced ;
var bool: aux17597_BOOL:: var_is_introduced ;
var bool: aux17598_BOOL:: var_is_introduced ;
var bool: aux17599_BOOL:: var_is_introduced ;
var bool: aux17600_BOOL:: var_is_introduced ;
var {0,1}: aux17600_INTEGER :: var_is_introduced ;
var 3..45: aux17601:: var_is_introduced ;
var bool: aux17602_BOOL:: var_is_introduced ;
var bool: aux17603_BOOL:: var_is_introduced ;
var bool: aux17604_BOOL:: var_is_introduced ;
var bool: aux17605_BOOL:: var_is_introduced ;
var bool: aux17606_BOOL:: var_is_introduced ;
var {0,1}: aux17606_INTEGER :: var_is_introduced ;
var bool: aux17607_BOOL:: var_is_introduced ;
var 1..43: aux17608:: var_is_introduced ;
var bool: aux17609_BOOL:: var_is_introduced ;
var bool: aux17610_BOOL:: var_is_introduced ;
var bool: aux17611_BOOL:: var_is_introduced ;
var {0,1}: aux17611_INTEGER :: var_is_introduced ;
var 1..43: aux17612:: var_is_introduced ;
var bool: aux17613_BOOL:: var_is_introduced ;
var bool: aux17614_BOOL:: var_is_introduced ;
var bool: aux17615_BOOL:: var_is_introduced ;
var bool: aux17616_BOOL:: var_is_introduced ;
var bool: aux17617_BOOL:: var_is_introduced ;
var {0,1}: aux17617_INTEGER :: var_is_introduced ;
var 2..44: aux17618:: var_is_introduced ;
var bool: aux17619_BOOL:: var_is_introduced ;
var bool: aux17620_BOOL:: var_is_introduced ;
var bool: aux17621_BOOL:: var_is_introduced ;
var bool: aux17622_BOOL:: var_is_introduced ;
var bool: aux17623_BOOL:: var_is_introduced ;
var {0,1}: aux17623_INTEGER :: var_is_introduced ;
var 3..45: aux17624:: var_is_introduced ;
var bool: aux17625_BOOL:: var_is_introduced ;
var bool: aux17626_BOOL:: var_is_introduced ;
var bool: aux17627_BOOL:: var_is_introduced ;
var bool: aux17628_BOOL:: var_is_introduced ;
var bool: aux17629_BOOL:: var_is_introduced ;
var {0,1}: aux17629_INTEGER :: var_is_introduced ;
var 2..44: aux17630:: var_is_introduced ;
var bool: aux17631_BOOL:: var_is_introduced ;
var bool: aux17632_BOOL:: var_is_introduced ;
var bool: aux17633_BOOL:: var_is_introduced ;
var bool: aux17634_BOOL:: var_is_introduced ;
var bool: aux17635_BOOL:: var_is_introduced ;
var {0,1}: aux17635_INTEGER :: var_is_introduced ;
var 2..44: aux17636:: var_is_introduced ;
var bool: aux17637_BOOL:: var_is_introduced ;
var bool: aux17638_BOOL:: var_is_introduced ;
var bool: aux17639_BOOL:: var_is_introduced ;
var bool: aux17640_BOOL:: var_is_introduced ;
var bool: aux17641_BOOL:: var_is_introduced ;
var {0,1}: aux17641_INTEGER :: var_is_introduced ;
var 3..45: aux17642:: var_is_introduced ;
var bool: aux17643_BOOL:: var_is_introduced ;
var bool: aux17644_BOOL:: var_is_introduced ;
var bool: aux17645_BOOL:: var_is_introduced ;
var bool: aux17646_BOOL:: var_is_introduced ;
var bool: aux17647_BOOL:: var_is_introduced ;
var {0,1}: aux17647_INTEGER :: var_is_introduced ;
var 2..44: aux17648:: var_is_introduced ;
var bool: aux17649_BOOL:: var_is_introduced ;
var bool: aux17650_BOOL:: var_is_introduced ;
var bool: aux17651_BOOL:: var_is_introduced ;
var bool: aux17652_BOOL:: var_is_introduced ;
var bool: aux17653_BOOL:: var_is_introduced ;
var {0,1}: aux17653_INTEGER :: var_is_introduced ;
var 1..43: aux17654:: var_is_introduced ;
var bool: aux17655_BOOL:: var_is_introduced ;
var bool: aux17656_BOOL:: var_is_introduced ;
var bool: aux17657_BOOL:: var_is_introduced ;
var bool: aux17658_BOOL:: var_is_introduced ;
var bool: aux17659_BOOL:: var_is_introduced ;
var {0,1}: aux17659_INTEGER :: var_is_introduced ;
var 2..44: aux17660:: var_is_introduced ;
var bool: aux17661_BOOL:: var_is_introduced ;
var bool: aux17662_BOOL:: var_is_introduced ;
var bool: aux17663_BOOL:: var_is_introduced ;
var bool: aux17664_BOOL:: var_is_introduced ;
var bool: aux17665_BOOL:: var_is_introduced ;
var {0,1}: aux17665_INTEGER :: var_is_introduced ;
var 1..43: aux17666:: var_is_introduced ;
var bool: aux17667_BOOL:: var_is_introduced ;
var bool: aux17668_BOOL:: var_is_introduced ;
var bool: aux17669_BOOL:: var_is_introduced ;
var bool: aux17670_BOOL:: var_is_introduced ;
var bool: aux17671_BOOL:: var_is_introduced ;
var {0,1}: aux17671_INTEGER :: var_is_introduced ;
var 2..44: aux17672:: var_is_introduced ;
var bool: aux17673_BOOL:: var_is_introduced ;
var bool: aux17674_BOOL:: var_is_introduced ;
var bool: aux17675_BOOL:: var_is_introduced ;
var bool: aux17676_BOOL:: var_is_introduced ;
var bool: aux17677_BOOL:: var_is_introduced ;
var {0,1}: aux17677_INTEGER :: var_is_introduced ;
var 2..44: aux17678:: var_is_introduced ;
var bool: aux17679_BOOL:: var_is_introduced ;
var bool: aux17680_BOOL:: var_is_introduced ;
var bool: aux17681_BOOL:: var_is_introduced ;
var bool: aux17682_BOOL:: var_is_introduced ;
var bool: aux17683_BOOL:: var_is_introduced ;
var {0,1}: aux17683_INTEGER :: var_is_introduced ;
var 2..44: aux17684:: var_is_introduced ;
var bool: aux17685_BOOL:: var_is_introduced ;
var bool: aux17686_BOOL:: var_is_introduced ;
var bool: aux17687_BOOL:: var_is_introduced ;
var bool: aux17688_BOOL:: var_is_introduced ;
var bool: aux17689_BOOL:: var_is_introduced ;
var {0,1}: aux17689_INTEGER :: var_is_introduced ;
var 4..46: aux17690:: var_is_introduced ;
var bool: aux17691_BOOL:: var_is_introduced ;
var bool: aux17692_BOOL:: var_is_introduced ;
var bool: aux17693_BOOL:: var_is_introduced ;
var bool: aux17694_BOOL:: var_is_introduced ;
var bool: aux17695_BOOL:: var_is_introduced ;
var {0,1}: aux17695_INTEGER :: var_is_introduced ;
var 1..43: aux17696:: var_is_introduced ;
var bool: aux17697_BOOL:: var_is_introduced ;
var bool: aux17698_BOOL:: var_is_introduced ;
var bool: aux17699_BOOL:: var_is_introduced ;
var bool: aux17700_BOOL:: var_is_introduced ;
var bool: aux17701_BOOL:: var_is_introduced ;
var {0,1}: aux17701_INTEGER :: var_is_introduced ;
var 3..45: aux17702:: var_is_introduced ;
var bool: aux17703_BOOL:: var_is_introduced ;
var bool: aux17704_BOOL:: var_is_introduced ;
var bool: aux17705_BOOL:: var_is_introduced ;
var bool: aux17706_BOOL:: var_is_introduced ;
var bool: aux17707_BOOL:: var_is_introduced ;
var {0,1}: aux17707_INTEGER :: var_is_introduced ;
var 3..45: aux17708:: var_is_introduced ;
var bool: aux17709_BOOL:: var_is_introduced ;
var bool: aux17710_BOOL:: var_is_introduced ;
var bool: aux17711_BOOL:: var_is_introduced ;
var bool: aux17712_BOOL:: var_is_introduced ;
var bool: aux17713_BOOL:: var_is_introduced ;
var {0,1}: aux17713_INTEGER :: var_is_introduced ;
var 2..44: aux17714:: var_is_introduced ;
var bool: aux17715_BOOL:: var_is_introduced ;
var bool: aux17716_BOOL:: var_is_introduced ;
var bool: aux17717_BOOL:: var_is_introduced ;
var bool: aux17718_BOOL:: var_is_introduced ;
var bool: aux17719_BOOL:: var_is_introduced ;
var {0,1}: aux17719_INTEGER :: var_is_introduced ;
var 3..45: aux17720:: var_is_introduced ;
var bool: aux17721_BOOL:: var_is_introduced ;
var bool: aux17722_BOOL:: var_is_introduced ;
var bool: aux17723_BOOL:: var_is_introduced ;
var bool: aux17724_BOOL:: var_is_introduced ;
var bool: aux17725_BOOL:: var_is_introduced ;
var {0,1}: aux17725_INTEGER :: var_is_introduced ;
var bool: aux17726_BOOL:: var_is_introduced ;
var 1..43: aux17727:: var_is_introduced ;
var bool: aux17728_BOOL:: var_is_introduced ;
var bool: aux17729_BOOL:: var_is_introduced ;
var bool: aux17730_BOOL:: var_is_introduced ;
var {0,1}: aux17730_INTEGER :: var_is_introduced ;
var 1..43: aux17731:: var_is_introduced ;
var bool: aux17732_BOOL:: var_is_introduced ;
var bool: aux17733_BOOL:: var_is_introduced ;
var bool: aux17734_BOOL:: var_is_introduced ;
var bool: aux17735_BOOL:: var_is_introduced ;
var bool: aux17736_BOOL:: var_is_introduced ;
var {0,1}: aux17736_INTEGER :: var_is_introduced ;
var 2..44: aux17737:: var_is_introduced ;
var bool: aux17738_BOOL:: var_is_introduced ;
var bool: aux17739_BOOL:: var_is_introduced ;
var bool: aux17740_BOOL:: var_is_introduced ;
var bool: aux17741_BOOL:: var_is_introduced ;
var bool: aux17742_BOOL:: var_is_introduced ;
var {0,1}: aux17742_INTEGER :: var_is_introduced ;
var 3..45: aux17743:: var_is_introduced ;
var bool: aux17744_BOOL:: var_is_introduced ;
var bool: aux17745_BOOL:: var_is_introduced ;
var bool: aux17746_BOOL:: var_is_introduced ;
var bool: aux17747_BOOL:: var_is_introduced ;
var bool: aux17748_BOOL:: var_is_introduced ;
var {0,1}: aux17748_INTEGER :: var_is_introduced ;
var 2..44: aux17749:: var_is_introduced ;
var bool: aux17750_BOOL:: var_is_introduced ;
var bool: aux17751_BOOL:: var_is_introduced ;
var bool: aux17752_BOOL:: var_is_introduced ;
var bool: aux17753_BOOL:: var_is_introduced ;
var bool: aux17754_BOOL:: var_is_introduced ;
var {0,1}: aux17754_INTEGER :: var_is_introduced ;
var 2..44: aux17755:: var_is_introduced ;
var bool: aux17756_BOOL:: var_is_introduced ;
var bool: aux17757_BOOL:: var_is_introduced ;
var bool: aux17758_BOOL:: var_is_introduced ;
var bool: aux17759_BOOL:: var_is_introduced ;
var bool: aux17760_BOOL:: var_is_introduced ;
var {0,1}: aux17760_INTEGER :: var_is_introduced ;
var 3..45: aux17761:: var_is_introduced ;
var bool: aux17762_BOOL:: var_is_introduced ;
var bool: aux17763_BOOL:: var_is_introduced ;
var bool: aux17764_BOOL:: var_is_introduced ;
var bool: aux17765_BOOL:: var_is_introduced ;
var bool: aux17766_BOOL:: var_is_introduced ;
var {0,1}: aux17766_INTEGER :: var_is_introduced ;
var 2..44: aux17767:: var_is_introduced ;
var bool: aux17768_BOOL:: var_is_introduced ;
var bool: aux17769_BOOL:: var_is_introduced ;
var bool: aux17770_BOOL:: var_is_introduced ;
var bool: aux17771_BOOL:: var_is_introduced ;
var bool: aux17772_BOOL:: var_is_introduced ;
var {0,1}: aux17772_INTEGER :: var_is_introduced ;
var 2..44: aux17773:: var_is_introduced ;
var bool: aux17774_BOOL:: var_is_introduced ;
var bool: aux17775_BOOL:: var_is_introduced ;
var bool: aux17776_BOOL:: var_is_introduced ;
var bool: aux17777_BOOL:: var_is_introduced ;
var bool: aux17778_BOOL:: var_is_introduced ;
var {0,1}: aux17778_INTEGER :: var_is_introduced ;
var 1..43: aux17779:: var_is_introduced ;
var bool: aux17780_BOOL:: var_is_introduced ;
var bool: aux17781_BOOL:: var_is_introduced ;
var bool: aux17782_BOOL:: var_is_introduced ;
var bool: aux17783_BOOL:: var_is_introduced ;
var bool: aux17784_BOOL:: var_is_introduced ;
var {0,1}: aux17784_INTEGER :: var_is_introduced ;
var 2..44: aux17785:: var_is_introduced ;
var bool: aux17786_BOOL:: var_is_introduced ;
var bool: aux17787_BOOL:: var_is_introduced ;
var bool: aux17788_BOOL:: var_is_introduced ;
var bool: aux17789_BOOL:: var_is_introduced ;
var bool: aux17790_BOOL:: var_is_introduced ;
var {0,1}: aux17790_INTEGER :: var_is_introduced ;
var 2..44: aux17791:: var_is_introduced ;
var bool: aux17792_BOOL:: var_is_introduced ;
var bool: aux17793_BOOL:: var_is_introduced ;
var bool: aux17794_BOOL:: var_is_introduced ;
var bool: aux17795_BOOL:: var_is_introduced ;
var bool: aux17796_BOOL:: var_is_introduced ;
var {0,1}: aux17796_INTEGER :: var_is_introduced ;
var 1..43: aux17797:: var_is_introduced ;
var bool: aux17798_BOOL:: var_is_introduced ;
var bool: aux17799_BOOL:: var_is_introduced ;
var bool: aux17800_BOOL:: var_is_introduced ;
var bool: aux17801_BOOL:: var_is_introduced ;
var bool: aux17802_BOOL:: var_is_introduced ;
var {0,1}: aux17802_INTEGER :: var_is_introduced ;
var 2..44: aux17803:: var_is_introduced ;
var bool: aux17804_BOOL:: var_is_introduced ;
var bool: aux17805_BOOL:: var_is_introduced ;
var bool: aux17806_BOOL:: var_is_introduced ;
var bool: aux17807_BOOL:: var_is_introduced ;
var bool: aux17808_BOOL:: var_is_introduced ;
var {0,1}: aux17808_INTEGER :: var_is_introduced ;
var 4..46: aux17809:: var_is_introduced ;
var bool: aux17810_BOOL:: var_is_introduced ;
var bool: aux17811_BOOL:: var_is_introduced ;
var bool: aux17812_BOOL:: var_is_introduced ;
var bool: aux17813_BOOL:: var_is_introduced ;
var bool: aux17814_BOOL:: var_is_introduced ;
var {0,1}: aux17814_INTEGER :: var_is_introduced ;
var 1..43: aux17815:: var_is_introduced ;
var bool: aux17816_BOOL:: var_is_introduced ;
var bool: aux17817_BOOL:: var_is_introduced ;
var bool: aux17818_BOOL:: var_is_introduced ;
var bool: aux17819_BOOL:: var_is_introduced ;
var bool: aux17820_BOOL:: var_is_introduced ;
var {0,1}: aux17820_INTEGER :: var_is_introduced ;
var 3..45: aux17821:: var_is_introduced ;
var bool: aux17822_BOOL:: var_is_introduced ;
var bool: aux17823_BOOL:: var_is_introduced ;
var bool: aux17824_BOOL:: var_is_introduced ;
var bool: aux17825_BOOL:: var_is_introduced ;
var bool: aux17826_BOOL:: var_is_introduced ;
var {0,1}: aux17826_INTEGER :: var_is_introduced ;
var 3..45: aux17827:: var_is_introduced ;
var bool: aux17828_BOOL:: var_is_introduced ;
var bool: aux17829_BOOL:: var_is_introduced ;
var bool: aux17830_BOOL:: var_is_introduced ;
var bool: aux17831_BOOL:: var_is_introduced ;
var bool: aux17832_BOOL:: var_is_introduced ;
var {0,1}: aux17832_INTEGER :: var_is_introduced ;
var 2..44: aux17833:: var_is_introduced ;
var bool: aux17834_BOOL:: var_is_introduced ;
var bool: aux17835_BOOL:: var_is_introduced ;
var bool: aux17836_BOOL:: var_is_introduced ;
var bool: aux17837_BOOL:: var_is_introduced ;
var bool: aux17838_BOOL:: var_is_introduced ;
var {0,1}: aux17838_INTEGER :: var_is_introduced ;
var 3..45: aux17839:: var_is_introduced ;
var bool: aux17840_BOOL:: var_is_introduced ;
var bool: aux17841_BOOL:: var_is_introduced ;
var bool: aux17842_BOOL:: var_is_introduced ;
var bool: aux17843_BOOL:: var_is_introduced ;
var bool: aux17844_BOOL:: var_is_introduced ;
var {0,1}: aux17844_INTEGER :: var_is_introduced ;
var bool: aux17845_BOOL:: var_is_introduced ;
var 2..44: aux17846:: var_is_introduced ;
var bool: aux17847_BOOL:: var_is_introduced ;
var bool: aux17848_BOOL:: var_is_introduced ;
var bool: aux17849_BOOL:: var_is_introduced ;
var {0,1}: aux17849_INTEGER :: var_is_introduced ;
var 1..43: aux17850:: var_is_introduced ;
var bool: aux17851_BOOL:: var_is_introduced ;
var bool: aux17852_BOOL:: var_is_introduced ;
var bool: aux17853_BOOL:: var_is_introduced ;
var bool: aux17854_BOOL:: var_is_introduced ;
var bool: aux17855_BOOL:: var_is_introduced ;
var {0,1}: aux17855_INTEGER :: var_is_introduced ;
var 3..45: aux17856:: var_is_introduced ;
var bool: aux17857_BOOL:: var_is_introduced ;
var bool: aux17858_BOOL:: var_is_introduced ;
var bool: aux17859_BOOL:: var_is_introduced ;
var bool: aux17860_BOOL:: var_is_introduced ;
var bool: aux17861_BOOL:: var_is_introduced ;
var {0,1}: aux17861_INTEGER :: var_is_introduced ;
var 2..44: aux17862:: var_is_introduced ;
var bool: aux17863_BOOL:: var_is_introduced ;
var bool: aux17864_BOOL:: var_is_introduced ;
var bool: aux17865_BOOL:: var_is_introduced ;
var bool: aux17866_BOOL:: var_is_introduced ;
var bool: aux17867_BOOL:: var_is_introduced ;
var {0,1}: aux17867_INTEGER :: var_is_introduced ;
var 2..44: aux17868:: var_is_introduced ;
var bool: aux17869_BOOL:: var_is_introduced ;
var bool: aux17870_BOOL:: var_is_introduced ;
var bool: aux17871_BOOL:: var_is_introduced ;
var bool: aux17872_BOOL:: var_is_introduced ;
var bool: aux17873_BOOL:: var_is_introduced ;
var {0,1}: aux17873_INTEGER :: var_is_introduced ;
var 3..45: aux17874:: var_is_introduced ;
var bool: aux17875_BOOL:: var_is_introduced ;
var bool: aux17876_BOOL:: var_is_introduced ;
var bool: aux17877_BOOL:: var_is_introduced ;
var bool: aux17878_BOOL:: var_is_introduced ;
var bool: aux17879_BOOL:: var_is_introduced ;
var {0,1}: aux17879_INTEGER :: var_is_introduced ;
var 2..44: aux17880:: var_is_introduced ;
var bool: aux17881_BOOL:: var_is_introduced ;
var bool: aux17882_BOOL:: var_is_introduced ;
var bool: aux17883_BOOL:: var_is_introduced ;
var bool: aux17884_BOOL:: var_is_introduced ;
var bool: aux17885_BOOL:: var_is_introduced ;
var {0,1}: aux17885_INTEGER :: var_is_introduced ;
var 1..43: aux17886:: var_is_introduced ;
var bool: aux17887_BOOL:: var_is_introduced ;
var bool: aux17888_BOOL:: var_is_introduced ;
var bool: aux17889_BOOL:: var_is_introduced ;
var bool: aux17890_BOOL:: var_is_introduced ;
var bool: aux17891_BOOL:: var_is_introduced ;
var {0,1}: aux17891_INTEGER :: var_is_introduced ;
var 2..44: aux17892:: var_is_introduced ;
var bool: aux17893_BOOL:: var_is_introduced ;
var bool: aux17894_BOOL:: var_is_introduced ;
var bool: aux17895_BOOL:: var_is_introduced ;
var bool: aux17896_BOOL:: var_is_introduced ;
var bool: aux17897_BOOL:: var_is_introduced ;
var {0,1}: aux17897_INTEGER :: var_is_introduced ;
var 1..43: aux17898:: var_is_introduced ;
var bool: aux17899_BOOL:: var_is_introduced ;
var bool: aux17900_BOOL:: var_is_introduced ;
var bool: aux17901_BOOL:: var_is_introduced ;
var bool: aux17902_BOOL:: var_is_introduced ;
var bool: aux17903_BOOL:: var_is_introduced ;
var {0,1}: aux17903_INTEGER :: var_is_introduced ;
var 2..44: aux17904:: var_is_introduced ;
var bool: aux17905_BOOL:: var_is_introduced ;
var bool: aux17906_BOOL:: var_is_introduced ;
var bool: aux17907_BOOL:: var_is_introduced ;
var bool: aux17908_BOOL:: var_is_introduced ;
var bool: aux17909_BOOL:: var_is_introduced ;
var {0,1}: aux17909_INTEGER :: var_is_introduced ;
var 2..44: aux17910:: var_is_introduced ;
var bool: aux17911_BOOL:: var_is_introduced ;
var bool: aux17912_BOOL:: var_is_introduced ;
var bool: aux17913_BOOL:: var_is_introduced ;
var bool: aux17914_BOOL:: var_is_introduced ;
var bool: aux17915_BOOL:: var_is_introduced ;
var {0,1}: aux17915_INTEGER :: var_is_introduced ;
var 1..43: aux17916:: var_is_introduced ;
var bool: aux17917_BOOL:: var_is_introduced ;
var bool: aux17918_BOOL:: var_is_introduced ;
var bool: aux17919_BOOL:: var_is_introduced ;
var bool: aux17920_BOOL:: var_is_introduced ;
var bool: aux17921_BOOL:: var_is_introduced ;
var {0,1}: aux17921_INTEGER :: var_is_introduced ;
var 2..44: aux17922:: var_is_introduced ;
var bool: aux17923_BOOL:: var_is_introduced ;
var bool: aux17924_BOOL:: var_is_introduced ;
var bool: aux17925_BOOL:: var_is_introduced ;
var bool: aux17926_BOOL:: var_is_introduced ;
var bool: aux17927_BOOL:: var_is_introduced ;
var {0,1}: aux17927_INTEGER :: var_is_introduced ;
var 4..46: aux17928:: var_is_introduced ;
var bool: aux17929_BOOL:: var_is_introduced ;
var bool: aux17930_BOOL:: var_is_introduced ;
var bool: aux17931_BOOL:: var_is_introduced ;
var bool: aux17932_BOOL:: var_is_introduced ;
var bool: aux17933_BOOL:: var_is_introduced ;
var {0,1}: aux17933_INTEGER :: var_is_introduced ;
var 1..43: aux17934:: var_is_introduced ;
var bool: aux17935_BOOL:: var_is_introduced ;
var bool: aux17936_BOOL:: var_is_introduced ;
var bool: aux17937_BOOL:: var_is_introduced ;
var bool: aux17938_BOOL:: var_is_introduced ;
var bool: aux17939_BOOL:: var_is_introduced ;
var {0,1}: aux17939_INTEGER :: var_is_introduced ;
var 3..45: aux17940:: var_is_introduced ;
var bool: aux17941_BOOL:: var_is_introduced ;
var bool: aux17942_BOOL:: var_is_introduced ;
var bool: aux17943_BOOL:: var_is_introduced ;
var bool: aux17944_BOOL:: var_is_introduced ;
var bool: aux17945_BOOL:: var_is_introduced ;
var {0,1}: aux17945_INTEGER :: var_is_introduced ;
var 3..45: aux17946:: var_is_introduced ;
var bool: aux17947_BOOL:: var_is_introduced ;
var bool: aux17948_BOOL:: var_is_introduced ;
var bool: aux17949_BOOL:: var_is_introduced ;
var bool: aux17950_BOOL:: var_is_introduced ;
var bool: aux17951_BOOL:: var_is_introduced ;
var {0,1}: aux17951_INTEGER :: var_is_introduced ;
var 2..44: aux17952:: var_is_introduced ;
var bool: aux17953_BOOL:: var_is_introduced ;
var bool: aux17954_BOOL:: var_is_introduced ;
var bool: aux17955_BOOL:: var_is_introduced ;
var bool: aux17956_BOOL:: var_is_introduced ;
var bool: aux17957_BOOL:: var_is_introduced ;
var {0,1}: aux17957_INTEGER :: var_is_introduced ;
var 3..45: aux17958:: var_is_introduced ;
var bool: aux17959_BOOL:: var_is_introduced ;
var bool: aux17960_BOOL:: var_is_introduced ;
var bool: aux17961_BOOL:: var_is_introduced ;
var bool: aux17962_BOOL:: var_is_introduced ;
var bool: aux17963_BOOL:: var_is_introduced ;
var {0,1}: aux17963_INTEGER :: var_is_introduced ;
var bool: aux17964_BOOL:: var_is_introduced ;
var 2..44: aux17965:: var_is_introduced ;
var bool: aux17966_BOOL:: var_is_introduced ;
var bool: aux17967_BOOL:: var_is_introduced ;
var bool: aux17968_BOOL:: var_is_introduced ;
var {0,1}: aux17968_INTEGER :: var_is_introduced ;
var 1..43: aux17969:: var_is_introduced ;
var bool: aux17970_BOOL:: var_is_introduced ;
var bool: aux17971_BOOL:: var_is_introduced ;
var bool: aux17972_BOOL:: var_is_introduced ;
var bool: aux17973_BOOL:: var_is_introduced ;
var bool: aux17974_BOOL:: var_is_introduced ;
var {0,1}: aux17974_INTEGER :: var_is_introduced ;
var 2..44: aux17975:: var_is_introduced ;
var bool: aux17976_BOOL:: var_is_introduced ;
var bool: aux17977_BOOL:: var_is_introduced ;
var bool: aux17978_BOOL:: var_is_introduced ;
var bool: aux17979_BOOL:: var_is_introduced ;
var bool: aux17980_BOOL:: var_is_introduced ;
var {0,1}: aux17980_INTEGER :: var_is_introduced ;
var 3..45: aux17981:: var_is_introduced ;
var bool: aux17982_BOOL:: var_is_introduced ;
var bool: aux17983_BOOL:: var_is_introduced ;
var bool: aux17984_BOOL:: var_is_introduced ;
var bool: aux17985_BOOL:: var_is_introduced ;
var bool: aux17986_BOOL:: var_is_introduced ;
var {0,1}: aux17986_INTEGER :: var_is_introduced ;
var 2..44: aux17987:: var_is_introduced ;
var bool: aux17988_BOOL:: var_is_introduced ;
var bool: aux17989_BOOL:: var_is_introduced ;
var bool: aux17990_BOOL:: var_is_introduced ;
var bool: aux17991_BOOL:: var_is_introduced ;
var bool: aux17992_BOOL:: var_is_introduced ;
var {0,1}: aux17992_INTEGER :: var_is_introduced ;
var 2..44: aux17993:: var_is_introduced ;
var bool: aux17994_BOOL:: var_is_introduced ;
var bool: aux17995_BOOL:: var_is_introduced ;
var bool: aux17996_BOOL:: var_is_introduced ;
var bool: aux17997_BOOL:: var_is_introduced ;
var bool: aux17998_BOOL:: var_is_introduced ;
var {0,1}: aux17998_INTEGER :: var_is_introduced ;
var 3..45: aux17999:: var_is_introduced ;
var bool: aux18000_BOOL:: var_is_introduced ;
var bool: aux18001_BOOL:: var_is_introduced ;
var bool: aux18002_BOOL:: var_is_introduced ;
var bool: aux18003_BOOL:: var_is_introduced ;
var bool: aux18004_BOOL:: var_is_introduced ;
var {0,1}: aux18004_INTEGER :: var_is_introduced ;
var 1..43: aux18005:: var_is_introduced ;
var bool: aux18006_BOOL:: var_is_introduced ;
var bool: aux18007_BOOL:: var_is_introduced ;
var bool: aux18008_BOOL:: var_is_introduced ;
var bool: aux18009_BOOL:: var_is_introduced ;
var bool: aux18010_BOOL:: var_is_introduced ;
var {0,1}: aux18010_INTEGER :: var_is_introduced ;
var 2..44: aux18011:: var_is_introduced ;
var bool: aux18012_BOOL:: var_is_introduced ;
var bool: aux18013_BOOL:: var_is_introduced ;
var bool: aux18014_BOOL:: var_is_introduced ;
var bool: aux18015_BOOL:: var_is_introduced ;
var bool: aux18016_BOOL:: var_is_introduced ;
var {0,1}: aux18016_INTEGER :: var_is_introduced ;
var 1..43: aux18017:: var_is_introduced ;
var bool: aux18018_BOOL:: var_is_introduced ;
var bool: aux18019_BOOL:: var_is_introduced ;
var bool: aux18020_BOOL:: var_is_introduced ;
var bool: aux18021_BOOL:: var_is_introduced ;
var bool: aux18022_BOOL:: var_is_introduced ;
var {0,1}: aux18022_INTEGER :: var_is_introduced ;
var 2..44: aux18023:: var_is_introduced ;
var bool: aux18024_BOOL:: var_is_introduced ;
var bool: aux18025_BOOL:: var_is_introduced ;
var bool: aux18026_BOOL:: var_is_introduced ;
var bool: aux18027_BOOL:: var_is_introduced ;
var bool: aux18028_BOOL:: var_is_introduced ;
var {0,1}: aux18028_INTEGER :: var_is_introduced ;
var 2..44: aux18029:: var_is_introduced ;
var bool: aux18030_BOOL:: var_is_introduced ;
var bool: aux18031_BOOL:: var_is_introduced ;
var bool: aux18032_BOOL:: var_is_introduced ;
var bool: aux18033_BOOL:: var_is_introduced ;
var bool: aux18034_BOOL:: var_is_introduced ;
var {0,1}: aux18034_INTEGER :: var_is_introduced ;
var 1..43: aux18035:: var_is_introduced ;
var bool: aux18036_BOOL:: var_is_introduced ;
var bool: aux18037_BOOL:: var_is_introduced ;
var bool: aux18038_BOOL:: var_is_introduced ;
var bool: aux18039_BOOL:: var_is_introduced ;
var bool: aux18040_BOOL:: var_is_introduced ;
var {0,1}: aux18040_INTEGER :: var_is_introduced ;
var 2..44: aux18041:: var_is_introduced ;
var bool: aux18042_BOOL:: var_is_introduced ;
var bool: aux18043_BOOL:: var_is_introduced ;
var bool: aux18044_BOOL:: var_is_introduced ;
var bool: aux18045_BOOL:: var_is_introduced ;
var bool: aux18046_BOOL:: var_is_introduced ;
var {0,1}: aux18046_INTEGER :: var_is_introduced ;
var 4..46: aux18047:: var_is_introduced ;
var bool: aux18048_BOOL:: var_is_introduced ;
var bool: aux18049_BOOL:: var_is_introduced ;
var bool: aux18050_BOOL:: var_is_introduced ;
var bool: aux18051_BOOL:: var_is_introduced ;
var bool: aux18052_BOOL:: var_is_introduced ;
var {0,1}: aux18052_INTEGER :: var_is_introduced ;
var 1..43: aux18053:: var_is_introduced ;
var bool: aux18054_BOOL:: var_is_introduced ;
var bool: aux18055_BOOL:: var_is_introduced ;
var bool: aux18056_BOOL:: var_is_introduced ;
var bool: aux18057_BOOL:: var_is_introduced ;
var bool: aux18058_BOOL:: var_is_introduced ;
var {0,1}: aux18058_INTEGER :: var_is_introduced ;
var 3..45: aux18059:: var_is_introduced ;
var bool: aux18060_BOOL:: var_is_introduced ;
var bool: aux18061_BOOL:: var_is_introduced ;
var bool: aux18062_BOOL:: var_is_introduced ;
var bool: aux18063_BOOL:: var_is_introduced ;
var bool: aux18064_BOOL:: var_is_introduced ;
var {0,1}: aux18064_INTEGER :: var_is_introduced ;
var 3..45: aux18065:: var_is_introduced ;
var bool: aux18066_BOOL:: var_is_introduced ;
var bool: aux18067_BOOL:: var_is_introduced ;
var bool: aux18068_BOOL:: var_is_introduced ;
var bool: aux18069_BOOL:: var_is_introduced ;
var bool: aux18070_BOOL:: var_is_introduced ;
var {0,1}: aux18070_INTEGER :: var_is_introduced ;
var 2..44: aux18071:: var_is_introduced ;
var bool: aux18072_BOOL:: var_is_introduced ;
var bool: aux18073_BOOL:: var_is_introduced ;
var bool: aux18074_BOOL:: var_is_introduced ;
var bool: aux18075_BOOL:: var_is_introduced ;
var bool: aux18076_BOOL:: var_is_introduced ;
var {0,1}: aux18076_INTEGER :: var_is_introduced ;
var 3..45: aux18077:: var_is_introduced ;
var bool: aux18078_BOOL:: var_is_introduced ;
var bool: aux18079_BOOL:: var_is_introduced ;
var bool: aux18080_BOOL:: var_is_introduced ;
var bool: aux18081_BOOL:: var_is_introduced ;
var bool: aux18082_BOOL:: var_is_introduced ;
var {0,1}: aux18082_INTEGER :: var_is_introduced ;
var bool: aux18083_BOOL:: var_is_introduced ;
var 2..44: aux18084:: var_is_introduced ;
var bool: aux18085_BOOL:: var_is_introduced ;
var bool: aux18086_BOOL:: var_is_introduced ;
var bool: aux18087_BOOL:: var_is_introduced ;
var {0,1}: aux18087_INTEGER :: var_is_introduced ;
var 1..43: aux18088:: var_is_introduced ;
var bool: aux18089_BOOL:: var_is_introduced ;
var bool: aux18090_BOOL:: var_is_introduced ;
var bool: aux18091_BOOL:: var_is_introduced ;
var bool: aux18092_BOOL:: var_is_introduced ;
var bool: aux18093_BOOL:: var_is_introduced ;
var {0,1}: aux18093_INTEGER :: var_is_introduced ;
var 2..44: aux18094:: var_is_introduced ;
var bool: aux18095_BOOL:: var_is_introduced ;
var bool: aux18096_BOOL:: var_is_introduced ;
var bool: aux18097_BOOL:: var_is_introduced ;
var bool: aux18098_BOOL:: var_is_introduced ;
var bool: aux18099_BOOL:: var_is_introduced ;
var {0,1}: aux18099_INTEGER :: var_is_introduced ;
var 3..45: aux18100:: var_is_introduced ;
var bool: aux18101_BOOL:: var_is_introduced ;
var bool: aux18102_BOOL:: var_is_introduced ;
var bool: aux18103_BOOL:: var_is_introduced ;
var bool: aux18104_BOOL:: var_is_introduced ;
var bool: aux18105_BOOL:: var_is_introduced ;
var {0,1}: aux18105_INTEGER :: var_is_introduced ;
var 2..44: aux18106:: var_is_introduced ;
var bool: aux18107_BOOL:: var_is_introduced ;
var bool: aux18108_BOOL:: var_is_introduced ;
var bool: aux18109_BOOL:: var_is_introduced ;
var bool: aux18110_BOOL:: var_is_introduced ;
var bool: aux18111_BOOL:: var_is_introduced ;
var {0,1}: aux18111_INTEGER :: var_is_introduced ;
var 3..45: aux18112:: var_is_introduced ;
var bool: aux18113_BOOL:: var_is_introduced ;
var bool: aux18114_BOOL:: var_is_introduced ;
var bool: aux18115_BOOL:: var_is_introduced ;
var bool: aux18116_BOOL:: var_is_introduced ;
var bool: aux18117_BOOL:: var_is_introduced ;
var {0,1}: aux18117_INTEGER :: var_is_introduced ;
var 2..44: aux18118:: var_is_introduced ;
var bool: aux18119_BOOL:: var_is_introduced ;
var bool: aux18120_BOOL:: var_is_introduced ;
var bool: aux18121_BOOL:: var_is_introduced ;
var bool: aux18122_BOOL:: var_is_introduced ;
var bool: aux18123_BOOL:: var_is_introduced ;
var {0,1}: aux18123_INTEGER :: var_is_introduced ;
var 1..43: aux18124:: var_is_introduced ;
var bool: aux18125_BOOL:: var_is_introduced ;
var bool: aux18126_BOOL:: var_is_introduced ;
var bool: aux18127_BOOL:: var_is_introduced ;
var bool: aux18128_BOOL:: var_is_introduced ;
var bool: aux18129_BOOL:: var_is_introduced ;
var {0,1}: aux18129_INTEGER :: var_is_introduced ;
var 2..44: aux18130:: var_is_introduced ;
var bool: aux18131_BOOL:: var_is_introduced ;
var bool: aux18132_BOOL:: var_is_introduced ;
var bool: aux18133_BOOL:: var_is_introduced ;
var bool: aux18134_BOOL:: var_is_introduced ;
var bool: aux18135_BOOL:: var_is_introduced ;
var {0,1}: aux18135_INTEGER :: var_is_introduced ;
var 1..43: aux18136:: var_is_introduced ;
var bool: aux18137_BOOL:: var_is_introduced ;
var bool: aux18138_BOOL:: var_is_introduced ;
var bool: aux18139_BOOL:: var_is_introduced ;
var bool: aux18140_BOOL:: var_is_introduced ;
var bool: aux18141_BOOL:: var_is_introduced ;
var {0,1}: aux18141_INTEGER :: var_is_introduced ;
var 2..44: aux18142:: var_is_introduced ;
var bool: aux18143_BOOL:: var_is_introduced ;
var bool: aux18144_BOOL:: var_is_introduced ;
var bool: aux18145_BOOL:: var_is_introduced ;
var bool: aux18146_BOOL:: var_is_introduced ;
var bool: aux18147_BOOL:: var_is_introduced ;
var {0,1}: aux18147_INTEGER :: var_is_introduced ;
var 2..44: aux18148:: var_is_introduced ;
var bool: aux18149_BOOL:: var_is_introduced ;
var bool: aux18150_BOOL:: var_is_introduced ;
var bool: aux18151_BOOL:: var_is_introduced ;
var bool: aux18152_BOOL:: var_is_introduced ;
var bool: aux18153_BOOL:: var_is_introduced ;
var {0,1}: aux18153_INTEGER :: var_is_introduced ;
var 1..43: aux18154:: var_is_introduced ;
var bool: aux18155_BOOL:: var_is_introduced ;
var bool: aux18156_BOOL:: var_is_introduced ;
var bool: aux18157_BOOL:: var_is_introduced ;
var bool: aux18158_BOOL:: var_is_introduced ;
var bool: aux18159_BOOL:: var_is_introduced ;
var {0,1}: aux18159_INTEGER :: var_is_introduced ;
var 2..44: aux18160:: var_is_introduced ;
var bool: aux18161_BOOL:: var_is_introduced ;
var bool: aux18162_BOOL:: var_is_introduced ;
var bool: aux18163_BOOL:: var_is_introduced ;
var bool: aux18164_BOOL:: var_is_introduced ;
var bool: aux18165_BOOL:: var_is_introduced ;
var {0,1}: aux18165_INTEGER :: var_is_introduced ;
var 4..46: aux18166:: var_is_introduced ;
var bool: aux18167_BOOL:: var_is_introduced ;
var bool: aux18168_BOOL:: var_is_introduced ;
var bool: aux18169_BOOL:: var_is_introduced ;
var bool: aux18170_BOOL:: var_is_introduced ;
var bool: aux18171_BOOL:: var_is_introduced ;
var {0,1}: aux18171_INTEGER :: var_is_introduced ;
var 1..43: aux18172:: var_is_introduced ;
var bool: aux18173_BOOL:: var_is_introduced ;
var bool: aux18174_BOOL:: var_is_introduced ;
var bool: aux18175_BOOL:: var_is_introduced ;
var bool: aux18176_BOOL:: var_is_introduced ;
var bool: aux18177_BOOL:: var_is_introduced ;
var {0,1}: aux18177_INTEGER :: var_is_introduced ;
var 3..45: aux18178:: var_is_introduced ;
var bool: aux18179_BOOL:: var_is_introduced ;
var bool: aux18180_BOOL:: var_is_introduced ;
var bool: aux18181_BOOL:: var_is_introduced ;
var bool: aux18182_BOOL:: var_is_introduced ;
var bool: aux18183_BOOL:: var_is_introduced ;
var {0,1}: aux18183_INTEGER :: var_is_introduced ;
var 3..45: aux18184:: var_is_introduced ;
var bool: aux18185_BOOL:: var_is_introduced ;
var bool: aux18186_BOOL:: var_is_introduced ;
var bool: aux18187_BOOL:: var_is_introduced ;
var bool: aux18188_BOOL:: var_is_introduced ;
var bool: aux18189_BOOL:: var_is_introduced ;
var {0,1}: aux18189_INTEGER :: var_is_introduced ;
var 2..44: aux18190:: var_is_introduced ;
var bool: aux18191_BOOL:: var_is_introduced ;
var bool: aux18192_BOOL:: var_is_introduced ;
var bool: aux18193_BOOL:: var_is_introduced ;
var bool: aux18194_BOOL:: var_is_introduced ;
var bool: aux18195_BOOL:: var_is_introduced ;
var {0,1}: aux18195_INTEGER :: var_is_introduced ;
var 3..45: aux18196:: var_is_introduced ;
var bool: aux18197_BOOL:: var_is_introduced ;
var bool: aux18198_BOOL:: var_is_introduced ;
var bool: aux18199_BOOL:: var_is_introduced ;
var bool: aux18200_BOOL:: var_is_introduced ;
var bool: aux18201_BOOL:: var_is_introduced ;
var {0,1}: aux18201_INTEGER :: var_is_introduced ;
var bool: aux18202_BOOL:: var_is_introduced ;
var 3..45: aux18203:: var_is_introduced ;
var bool: aux18204_BOOL:: var_is_introduced ;
var bool: aux18205_BOOL:: var_is_introduced ;
var bool: aux18206_BOOL:: var_is_introduced ;
var {0,1}: aux18206_INTEGER :: var_is_introduced ;
var 1..43: aux18207:: var_is_introduced ;
var bool: aux18208_BOOL:: var_is_introduced ;
var bool: aux18209_BOOL:: var_is_introduced ;
var bool: aux18210_BOOL:: var_is_introduced ;
var bool: aux18211_BOOL:: var_is_introduced ;
var bool: aux18212_BOOL:: var_is_introduced ;
var {0,1}: aux18212_INTEGER :: var_is_introduced ;
var 2..44: aux18213:: var_is_introduced ;
var bool: aux18214_BOOL:: var_is_introduced ;
var bool: aux18215_BOOL:: var_is_introduced ;
var bool: aux18216_BOOL:: var_is_introduced ;
var bool: aux18217_BOOL:: var_is_introduced ;
var bool: aux18218_BOOL:: var_is_introduced ;
var {0,1}: aux18218_INTEGER :: var_is_introduced ;
var 3..45: aux18219:: var_is_introduced ;
var bool: aux18220_BOOL:: var_is_introduced ;
var bool: aux18221_BOOL:: var_is_introduced ;
var bool: aux18222_BOOL:: var_is_introduced ;
var bool: aux18223_BOOL:: var_is_introduced ;
var bool: aux18224_BOOL:: var_is_introduced ;
var {0,1}: aux18224_INTEGER :: var_is_introduced ;
var 2..44: aux18225:: var_is_introduced ;
var bool: aux18226_BOOL:: var_is_introduced ;
var bool: aux18227_BOOL:: var_is_introduced ;
var bool: aux18228_BOOL:: var_is_introduced ;
var bool: aux18229_BOOL:: var_is_introduced ;
var bool: aux18230_BOOL:: var_is_introduced ;
var {0,1}: aux18230_INTEGER :: var_is_introduced ;
var 2..44: aux18231:: var_is_introduced ;
var bool: aux18232_BOOL:: var_is_introduced ;
var bool: aux18233_BOOL:: var_is_introduced ;
var bool: aux18234_BOOL:: var_is_introduced ;
var bool: aux18235_BOOL:: var_is_introduced ;
var bool: aux18236_BOOL:: var_is_introduced ;
var {0,1}: aux18236_INTEGER :: var_is_introduced ;
var 3..45: aux18237:: var_is_introduced ;
var bool: aux18238_BOOL:: var_is_introduced ;
var bool: aux18239_BOOL:: var_is_introduced ;
var bool: aux18240_BOOL:: var_is_introduced ;
var bool: aux18241_BOOL:: var_is_introduced ;
var bool: aux18242_BOOL:: var_is_introduced ;
var {0,1}: aux18242_INTEGER :: var_is_introduced ;
var 2..44: aux18243:: var_is_introduced ;
var bool: aux18244_BOOL:: var_is_introduced ;
var bool: aux18245_BOOL:: var_is_introduced ;
var bool: aux18246_BOOL:: var_is_introduced ;
var bool: aux18247_BOOL:: var_is_introduced ;
var bool: aux18248_BOOL:: var_is_introduced ;
var {0,1}: aux18248_INTEGER :: var_is_introduced ;
var 1..43: aux18249:: var_is_introduced ;
var bool: aux18250_BOOL:: var_is_introduced ;
var bool: aux18251_BOOL:: var_is_introduced ;
var bool: aux18252_BOOL:: var_is_introduced ;
var bool: aux18253_BOOL:: var_is_introduced ;
var bool: aux18254_BOOL:: var_is_introduced ;
var {0,1}: aux18254_INTEGER :: var_is_introduced ;
var 2..44: aux18255:: var_is_introduced ;
var bool: aux18256_BOOL:: var_is_introduced ;
var bool: aux18257_BOOL:: var_is_introduced ;
var bool: aux18258_BOOL:: var_is_introduced ;
var bool: aux18259_BOOL:: var_is_introduced ;
var bool: aux18260_BOOL:: var_is_introduced ;
var {0,1}: aux18260_INTEGER :: var_is_introduced ;
var 1..43: aux18261:: var_is_introduced ;
var bool: aux18262_BOOL:: var_is_introduced ;
var bool: aux18263_BOOL:: var_is_introduced ;
var bool: aux18264_BOOL:: var_is_introduced ;
var bool: aux18265_BOOL:: var_is_introduced ;
var bool: aux18266_BOOL:: var_is_introduced ;
var {0,1}: aux18266_INTEGER :: var_is_introduced ;
var 2..44: aux18267:: var_is_introduced ;
var bool: aux18268_BOOL:: var_is_introduced ;
var bool: aux18269_BOOL:: var_is_introduced ;
var bool: aux18270_BOOL:: var_is_introduced ;
var bool: aux18271_BOOL:: var_is_introduced ;
var bool: aux18272_BOOL:: var_is_introduced ;
var {0,1}: aux18272_INTEGER :: var_is_introduced ;
var 2..44: aux18273:: var_is_introduced ;
var bool: aux18274_BOOL:: var_is_introduced ;
var bool: aux18275_BOOL:: var_is_introduced ;
var bool: aux18276_BOOL:: var_is_introduced ;
var bool: aux18277_BOOL:: var_is_introduced ;
var bool: aux18278_BOOL:: var_is_introduced ;
var {0,1}: aux18278_INTEGER :: var_is_introduced ;
var 1..43: aux18279:: var_is_introduced ;
var bool: aux18280_BOOL:: var_is_introduced ;
var bool: aux18281_BOOL:: var_is_introduced ;
var bool: aux18282_BOOL:: var_is_introduced ;
var bool: aux18283_BOOL:: var_is_introduced ;
var bool: aux18284_BOOL:: var_is_introduced ;
var {0,1}: aux18284_INTEGER :: var_is_introduced ;
var 2..44: aux18285:: var_is_introduced ;
var bool: aux18286_BOOL:: var_is_introduced ;
var bool: aux18287_BOOL:: var_is_introduced ;
var bool: aux18288_BOOL:: var_is_introduced ;
var bool: aux18289_BOOL:: var_is_introduced ;
var bool: aux18290_BOOL:: var_is_introduced ;
var {0,1}: aux18290_INTEGER :: var_is_introduced ;
var 4..46: aux18291:: var_is_introduced ;
var bool: aux18292_BOOL:: var_is_introduced ;
var bool: aux18293_BOOL:: var_is_introduced ;
var bool: aux18294_BOOL:: var_is_introduced ;
var bool: aux18295_BOOL:: var_is_introduced ;
var bool: aux18296_BOOL:: var_is_introduced ;
var {0,1}: aux18296_INTEGER :: var_is_introduced ;
var 1..43: aux18297:: var_is_introduced ;
var bool: aux18298_BOOL:: var_is_introduced ;
var bool: aux18299_BOOL:: var_is_introduced ;
var bool: aux18300_BOOL:: var_is_introduced ;
var bool: aux18301_BOOL:: var_is_introduced ;
var bool: aux18302_BOOL:: var_is_introduced ;
var {0,1}: aux18302_INTEGER :: var_is_introduced ;
var 3..45: aux18303:: var_is_introduced ;
var bool: aux18304_BOOL:: var_is_introduced ;
var bool: aux18305_BOOL:: var_is_introduced ;
var bool: aux18306_BOOL:: var_is_introduced ;
var bool: aux18307_BOOL:: var_is_introduced ;
var bool: aux18308_BOOL:: var_is_introduced ;
var {0,1}: aux18308_INTEGER :: var_is_introduced ;
var 2..44: aux18309:: var_is_introduced ;
var bool: aux18310_BOOL:: var_is_introduced ;
var bool: aux18311_BOOL:: var_is_introduced ;
var bool: aux18312_BOOL:: var_is_introduced ;
var bool: aux18313_BOOL:: var_is_introduced ;
var bool: aux18314_BOOL:: var_is_introduced ;
var {0,1}: aux18314_INTEGER :: var_is_introduced ;
var 3..45: aux18315:: var_is_introduced ;
var bool: aux18316_BOOL:: var_is_introduced ;
var bool: aux18317_BOOL:: var_is_introduced ;
var bool: aux18318_BOOL:: var_is_introduced ;
var bool: aux18319_BOOL:: var_is_introduced ;
var bool: aux18320_BOOL:: var_is_introduced ;
var {0,1}: aux18320_INTEGER :: var_is_introduced ;
var bool: aux18321_BOOL:: var_is_introduced ;
var 2..44: aux18322:: var_is_introduced ;
var bool: aux18323_BOOL:: var_is_introduced ;
var bool: aux18324_BOOL:: var_is_introduced ;
var bool: aux18325_BOOL:: var_is_introduced ;
var {0,1}: aux18325_INTEGER :: var_is_introduced ;
var 1..43: aux18326:: var_is_introduced ;
var bool: aux18327_BOOL:: var_is_introduced ;
var bool: aux18328_BOOL:: var_is_introduced ;
var bool: aux18329_BOOL:: var_is_introduced ;
var bool: aux18330_BOOL:: var_is_introduced ;
var bool: aux18331_BOOL:: var_is_introduced ;
var {0,1}: aux18331_INTEGER :: var_is_introduced ;
var 2..44: aux18332:: var_is_introduced ;
var bool: aux18333_BOOL:: var_is_introduced ;
var bool: aux18334_BOOL:: var_is_introduced ;
var bool: aux18335_BOOL:: var_is_introduced ;
var bool: aux18336_BOOL:: var_is_introduced ;
var bool: aux18337_BOOL:: var_is_introduced ;
var {0,1}: aux18337_INTEGER :: var_is_introduced ;
var 3..45: aux18338:: var_is_introduced ;
var bool: aux18339_BOOL:: var_is_introduced ;
var bool: aux18340_BOOL:: var_is_introduced ;
var bool: aux18341_BOOL:: var_is_introduced ;
var bool: aux18342_BOOL:: var_is_introduced ;
var bool: aux18343_BOOL:: var_is_introduced ;
var {0,1}: aux18343_INTEGER :: var_is_introduced ;
var 2..44: aux18344:: var_is_introduced ;
var bool: aux18345_BOOL:: var_is_introduced ;
var bool: aux18346_BOOL:: var_is_introduced ;
var bool: aux18347_BOOL:: var_is_introduced ;
var bool: aux18348_BOOL:: var_is_introduced ;
var bool: aux18349_BOOL:: var_is_introduced ;
var {0,1}: aux18349_INTEGER :: var_is_introduced ;
var 3..45: aux18350:: var_is_introduced ;
var bool: aux18351_BOOL:: var_is_introduced ;
var bool: aux18352_BOOL:: var_is_introduced ;
var bool: aux18353_BOOL:: var_is_introduced ;
var bool: aux18354_BOOL:: var_is_introduced ;
var bool: aux18355_BOOL:: var_is_introduced ;
var {0,1}: aux18355_INTEGER :: var_is_introduced ;
var 2..44: aux18356:: var_is_introduced ;
var bool: aux18357_BOOL:: var_is_introduced ;
var bool: aux18358_BOOL:: var_is_introduced ;
var bool: aux18359_BOOL:: var_is_introduced ;
var bool: aux18360_BOOL:: var_is_introduced ;
var bool: aux18361_BOOL:: var_is_introduced ;
var {0,1}: aux18361_INTEGER :: var_is_introduced ;
var 1..43: aux18362:: var_is_introduced ;
var bool: aux18363_BOOL:: var_is_introduced ;
var bool: aux18364_BOOL:: var_is_introduced ;
var bool: aux18365_BOOL:: var_is_introduced ;
var bool: aux18366_BOOL:: var_is_introduced ;
var bool: aux18367_BOOL:: var_is_introduced ;
var {0,1}: aux18367_INTEGER :: var_is_introduced ;
var 2..44: aux18368:: var_is_introduced ;
var bool: aux18369_BOOL:: var_is_introduced ;
var bool: aux18370_BOOL:: var_is_introduced ;
var bool: aux18371_BOOL:: var_is_introduced ;
var bool: aux18372_BOOL:: var_is_introduced ;
var bool: aux18373_BOOL:: var_is_introduced ;
var {0,1}: aux18373_INTEGER :: var_is_introduced ;
var 1..43: aux18374:: var_is_introduced ;
var bool: aux18375_BOOL:: var_is_introduced ;
var bool: aux18376_BOOL:: var_is_introduced ;
var bool: aux18377_BOOL:: var_is_introduced ;
var bool: aux18378_BOOL:: var_is_introduced ;
var bool: aux18379_BOOL:: var_is_introduced ;
var {0,1}: aux18379_INTEGER :: var_is_introduced ;
var 2..44: aux18380:: var_is_introduced ;
var bool: aux18381_BOOL:: var_is_introduced ;
var bool: aux18382_BOOL:: var_is_introduced ;
var bool: aux18383_BOOL:: var_is_introduced ;
var bool: aux18384_BOOL:: var_is_introduced ;
var bool: aux18385_BOOL:: var_is_introduced ;
var {0,1}: aux18385_INTEGER :: var_is_introduced ;
var 2..44: aux18386:: var_is_introduced ;
var bool: aux18387_BOOL:: var_is_introduced ;
var bool: aux18388_BOOL:: var_is_introduced ;
var bool: aux18389_BOOL:: var_is_introduced ;
var bool: aux18390_BOOL:: var_is_introduced ;
var bool: aux18391_BOOL:: var_is_introduced ;
var {0,1}: aux18391_INTEGER :: var_is_introduced ;
var 1..43: aux18392:: var_is_introduced ;
var bool: aux18393_BOOL:: var_is_introduced ;
var bool: aux18394_BOOL:: var_is_introduced ;
var bool: aux18395_BOOL:: var_is_introduced ;
var bool: aux18396_BOOL:: var_is_introduced ;
var bool: aux18397_BOOL:: var_is_introduced ;
var {0,1}: aux18397_INTEGER :: var_is_introduced ;
var 2..44: aux18398:: var_is_introduced ;
var bool: aux18399_BOOL:: var_is_introduced ;
var bool: aux18400_BOOL:: var_is_introduced ;
var bool: aux18401_BOOL:: var_is_introduced ;
var bool: aux18402_BOOL:: var_is_introduced ;
var bool: aux18403_BOOL:: var_is_introduced ;
var {0,1}: aux18403_INTEGER :: var_is_introduced ;
var 4..46: aux18404:: var_is_introduced ;
var bool: aux18405_BOOL:: var_is_introduced ;
var bool: aux18406_BOOL:: var_is_introduced ;
var bool: aux18407_BOOL:: var_is_introduced ;
var bool: aux18408_BOOL:: var_is_introduced ;
var bool: aux18409_BOOL:: var_is_introduced ;
var {0,1}: aux18409_INTEGER :: var_is_introduced ;
var 1..43: aux18410:: var_is_introduced ;
var bool: aux18411_BOOL:: var_is_introduced ;
var bool: aux18412_BOOL:: var_is_introduced ;
var bool: aux18413_BOOL:: var_is_introduced ;
var bool: aux18414_BOOL:: var_is_introduced ;
var bool: aux18415_BOOL:: var_is_introduced ;
var {0,1}: aux18415_INTEGER :: var_is_introduced ;
var 3..45: aux18416:: var_is_introduced ;
var bool: aux18417_BOOL:: var_is_introduced ;
var bool: aux18418_BOOL:: var_is_introduced ;
var bool: aux18419_BOOL:: var_is_introduced ;
var bool: aux18420_BOOL:: var_is_introduced ;
var bool: aux18421_BOOL:: var_is_introduced ;
var {0,1}: aux18421_INTEGER :: var_is_introduced ;
var 3..45: aux18422:: var_is_introduced ;
var bool: aux18423_BOOL:: var_is_introduced ;
var bool: aux18424_BOOL:: var_is_introduced ;
var bool: aux18425_BOOL:: var_is_introduced ;
var bool: aux18426_BOOL:: var_is_introduced ;
var bool: aux18427_BOOL:: var_is_introduced ;
var {0,1}: aux18427_INTEGER :: var_is_introduced ;
var 2..44: aux18428:: var_is_introduced ;
var bool: aux18429_BOOL:: var_is_introduced ;
var bool: aux18430_BOOL:: var_is_introduced ;
var bool: aux18431_BOOL:: var_is_introduced ;
var bool: aux18432_BOOL:: var_is_introduced ;
var bool: aux18433_BOOL:: var_is_introduced ;
var {0,1}: aux18433_INTEGER :: var_is_introduced ;
var 3..45: aux18434:: var_is_introduced ;
var bool: aux18435_BOOL:: var_is_introduced ;
var bool: aux18436_BOOL:: var_is_introduced ;
var bool: aux18437_BOOL:: var_is_introduced ;
var bool: aux18438_BOOL:: var_is_introduced ;
var bool: aux18439_BOOL:: var_is_introduced ;
var {0,1}: aux18439_INTEGER :: var_is_introduced ;
var bool: aux18440_BOOL:: var_is_introduced ;
var 2..44: aux18441:: var_is_introduced ;
var bool: aux18442_BOOL:: var_is_introduced ;
var bool: aux18443_BOOL:: var_is_introduced ;
var bool: aux18444_BOOL:: var_is_introduced ;
var {0,1}: aux18444_INTEGER :: var_is_introduced ;
var 1..43: aux18445:: var_is_introduced ;
var bool: aux18446_BOOL:: var_is_introduced ;
var bool: aux18447_BOOL:: var_is_introduced ;
var bool: aux18448_BOOL:: var_is_introduced ;
var bool: aux18449_BOOL:: var_is_introduced ;
var bool: aux18450_BOOL:: var_is_introduced ;
var {0,1}: aux18450_INTEGER :: var_is_introduced ;
var 2..44: aux18451:: var_is_introduced ;
var bool: aux18452_BOOL:: var_is_introduced ;
var bool: aux18453_BOOL:: var_is_introduced ;
var bool: aux18454_BOOL:: var_is_introduced ;
var bool: aux18455_BOOL:: var_is_introduced ;
var bool: aux18456_BOOL:: var_is_introduced ;
var {0,1}: aux18456_INTEGER :: var_is_introduced ;
var 3..45: aux18457:: var_is_introduced ;
var bool: aux18458_BOOL:: var_is_introduced ;
var bool: aux18459_BOOL:: var_is_introduced ;
var bool: aux18460_BOOL:: var_is_introduced ;
var bool: aux18461_BOOL:: var_is_introduced ;
var bool: aux18462_BOOL:: var_is_introduced ;
var {0,1}: aux18462_INTEGER :: var_is_introduced ;
var 2..44: aux18463:: var_is_introduced ;
var bool: aux18464_BOOL:: var_is_introduced ;
var bool: aux18465_BOOL:: var_is_introduced ;
var bool: aux18466_BOOL:: var_is_introduced ;
var bool: aux18467_BOOL:: var_is_introduced ;
var bool: aux18468_BOOL:: var_is_introduced ;
var {0,1}: aux18468_INTEGER :: var_is_introduced ;
var 2..44: aux18469:: var_is_introduced ;
var bool: aux18470_BOOL:: var_is_introduced ;
var bool: aux18471_BOOL:: var_is_introduced ;
var bool: aux18472_BOOL:: var_is_introduced ;
var bool: aux18473_BOOL:: var_is_introduced ;
var bool: aux18474_BOOL:: var_is_introduced ;
var {0,1}: aux18474_INTEGER :: var_is_introduced ;
var 3..45: aux18475:: var_is_introduced ;
var bool: aux18476_BOOL:: var_is_introduced ;
var bool: aux18477_BOOL:: var_is_introduced ;
var bool: aux18478_BOOL:: var_is_introduced ;
var bool: aux18479_BOOL:: var_is_introduced ;
var bool: aux18480_BOOL:: var_is_introduced ;
var {0,1}: aux18480_INTEGER :: var_is_introduced ;
var 2..44: aux18481:: var_is_introduced ;
var bool: aux18482_BOOL:: var_is_introduced ;
var bool: aux18483_BOOL:: var_is_introduced ;
var bool: aux18484_BOOL:: var_is_introduced ;
var bool: aux18485_BOOL:: var_is_introduced ;
var bool: aux18486_BOOL:: var_is_introduced ;
var {0,1}: aux18486_INTEGER :: var_is_introduced ;
var 1..43: aux18487:: var_is_introduced ;
var bool: aux18488_BOOL:: var_is_introduced ;
var bool: aux18489_BOOL:: var_is_introduced ;
var bool: aux18490_BOOL:: var_is_introduced ;
var bool: aux18491_BOOL:: var_is_introduced ;
var bool: aux18492_BOOL:: var_is_introduced ;
var {0,1}: aux18492_INTEGER :: var_is_introduced ;
var 2..44: aux18493:: var_is_introduced ;
var bool: aux18494_BOOL:: var_is_introduced ;
var bool: aux18495_BOOL:: var_is_introduced ;
var bool: aux18496_BOOL:: var_is_introduced ;
var bool: aux18497_BOOL:: var_is_introduced ;
var bool: aux18498_BOOL:: var_is_introduced ;
var {0,1}: aux18498_INTEGER :: var_is_introduced ;
var 1..43: aux18499:: var_is_introduced ;
var bool: aux18500_BOOL:: var_is_introduced ;
var bool: aux18501_BOOL:: var_is_introduced ;
var bool: aux18502_BOOL:: var_is_introduced ;
var bool: aux18503_BOOL:: var_is_introduced ;
var bool: aux18504_BOOL:: var_is_introduced ;
var {0,1}: aux18504_INTEGER :: var_is_introduced ;
var 2..44: aux18505:: var_is_introduced ;
var bool: aux18506_BOOL:: var_is_introduced ;
var bool: aux18507_BOOL:: var_is_introduced ;
var bool: aux18508_BOOL:: var_is_introduced ;
var bool: aux18509_BOOL:: var_is_introduced ;
var bool: aux18510_BOOL:: var_is_introduced ;
var {0,1}: aux18510_INTEGER :: var_is_introduced ;
var 1..43: aux18511:: var_is_introduced ;
var bool: aux18512_BOOL:: var_is_introduced ;
var bool: aux18513_BOOL:: var_is_introduced ;
var bool: aux18514_BOOL:: var_is_introduced ;
var bool: aux18515_BOOL:: var_is_introduced ;
var bool: aux18516_BOOL:: var_is_introduced ;
var {0,1}: aux18516_INTEGER :: var_is_introduced ;
var 2..44: aux18517:: var_is_introduced ;
var bool: aux18518_BOOL:: var_is_introduced ;
var bool: aux18519_BOOL:: var_is_introduced ;
var bool: aux18520_BOOL:: var_is_introduced ;
var bool: aux18521_BOOL:: var_is_introduced ;
var bool: aux18522_BOOL:: var_is_introduced ;
var {0,1}: aux18522_INTEGER :: var_is_introduced ;
var 4..46: aux18523:: var_is_introduced ;
var bool: aux18524_BOOL:: var_is_introduced ;
var bool: aux18525_BOOL:: var_is_introduced ;
var bool: aux18526_BOOL:: var_is_introduced ;
var bool: aux18527_BOOL:: var_is_introduced ;
var bool: aux18528_BOOL:: var_is_introduced ;
var {0,1}: aux18528_INTEGER :: var_is_introduced ;
var 1..43: aux18529:: var_is_introduced ;
var bool: aux18530_BOOL:: var_is_introduced ;
var bool: aux18531_BOOL:: var_is_introduced ;
var bool: aux18532_BOOL:: var_is_introduced ;
var bool: aux18533_BOOL:: var_is_introduced ;
var bool: aux18534_BOOL:: var_is_introduced ;
var {0,1}: aux18534_INTEGER :: var_is_introduced ;
var 3..45: aux18535:: var_is_introduced ;
var bool: aux18536_BOOL:: var_is_introduced ;
var bool: aux18537_BOOL:: var_is_introduced ;
var bool: aux18538_BOOL:: var_is_introduced ;
var bool: aux18539_BOOL:: var_is_introduced ;
var bool: aux18540_BOOL:: var_is_introduced ;
var {0,1}: aux18540_INTEGER :: var_is_introduced ;
var 3..45: aux18541:: var_is_introduced ;
var bool: aux18542_BOOL:: var_is_introduced ;
var bool: aux18543_BOOL:: var_is_introduced ;
var bool: aux18544_BOOL:: var_is_introduced ;
var bool: aux18545_BOOL:: var_is_introduced ;
var bool: aux18546_BOOL:: var_is_introduced ;
var {0,1}: aux18546_INTEGER :: var_is_introduced ;
var 2..44: aux18547:: var_is_introduced ;
var bool: aux18548_BOOL:: var_is_introduced ;
var bool: aux18549_BOOL:: var_is_introduced ;
var bool: aux18550_BOOL:: var_is_introduced ;
var bool: aux18551_BOOL:: var_is_introduced ;
var bool: aux18552_BOOL:: var_is_introduced ;
var {0,1}: aux18552_INTEGER :: var_is_introduced ;
var 3..45: aux18553:: var_is_introduced ;
var bool: aux18554_BOOL:: var_is_introduced ;
var bool: aux18555_BOOL:: var_is_introduced ;
var bool: aux18556_BOOL:: var_is_introduced ;
var bool: aux18557_BOOL:: var_is_introduced ;
var bool: aux18558_BOOL:: var_is_introduced ;
var {0,1}: aux18558_INTEGER :: var_is_introduced ;
var bool: aux18559_BOOL:: var_is_introduced ;
var 1..43: aux18560:: var_is_introduced ;
var bool: aux18561_BOOL:: var_is_introduced ;
var bool: aux18562_BOOL:: var_is_introduced ;
var bool: aux18563_BOOL:: var_is_introduced ;
var {0,1}: aux18563_INTEGER :: var_is_introduced ;
var 2..44: aux18564:: var_is_introduced ;
var bool: aux18565_BOOL:: var_is_introduced ;
var bool: aux18566_BOOL:: var_is_introduced ;
var bool: aux18567_BOOL:: var_is_introduced ;
var bool: aux18568_BOOL:: var_is_introduced ;
var bool: aux18569_BOOL:: var_is_introduced ;
var {0,1}: aux18569_INTEGER :: var_is_introduced ;
var 3..45: aux18570:: var_is_introduced ;
var bool: aux18571_BOOL:: var_is_introduced ;
var bool: aux18572_BOOL:: var_is_introduced ;
var bool: aux18573_BOOL:: var_is_introduced ;
var bool: aux18574_BOOL:: var_is_introduced ;
var bool: aux18575_BOOL:: var_is_introduced ;
var {0,1}: aux18575_INTEGER :: var_is_introduced ;
var 2..44: aux18576:: var_is_introduced ;
var bool: aux18577_BOOL:: var_is_introduced ;
var bool: aux18578_BOOL:: var_is_introduced ;
var bool: aux18579_BOOL:: var_is_introduced ;
var bool: aux18580_BOOL:: var_is_introduced ;
var bool: aux18581_BOOL:: var_is_introduced ;
var {0,1}: aux18581_INTEGER :: var_is_introduced ;
var 2..44: aux18582:: var_is_introduced ;
var bool: aux18583_BOOL:: var_is_introduced ;
var bool: aux18584_BOOL:: var_is_introduced ;
var bool: aux18585_BOOL:: var_is_introduced ;
var bool: aux18586_BOOL:: var_is_introduced ;
var bool: aux18587_BOOL:: var_is_introduced ;
var {0,1}: aux18587_INTEGER :: var_is_introduced ;
var 3..45: aux18588:: var_is_introduced ;
var bool: aux18589_BOOL:: var_is_introduced ;
var bool: aux18590_BOOL:: var_is_introduced ;
var bool: aux18591_BOOL:: var_is_introduced ;
var bool: aux18592_BOOL:: var_is_introduced ;
var bool: aux18593_BOOL:: var_is_introduced ;
var {0,1}: aux18593_INTEGER :: var_is_introduced ;
var 2..44: aux18594:: var_is_introduced ;
var bool: aux18595_BOOL:: var_is_introduced ;
var bool: aux18596_BOOL:: var_is_introduced ;
var bool: aux18597_BOOL:: var_is_introduced ;
var bool: aux18598_BOOL:: var_is_introduced ;
var bool: aux18599_BOOL:: var_is_introduced ;
var {0,1}: aux18599_INTEGER :: var_is_introduced ;
var 1..43: aux18600:: var_is_introduced ;
var bool: aux18601_BOOL:: var_is_introduced ;
var bool: aux18602_BOOL:: var_is_introduced ;
var bool: aux18603_BOOL:: var_is_introduced ;
var bool: aux18604_BOOL:: var_is_introduced ;
var bool: aux18605_BOOL:: var_is_introduced ;
var {0,1}: aux18605_INTEGER :: var_is_introduced ;
var 2..44: aux18606:: var_is_introduced ;
var bool: aux18607_BOOL:: var_is_introduced ;
var bool: aux18608_BOOL:: var_is_introduced ;
var bool: aux18609_BOOL:: var_is_introduced ;
var bool: aux18610_BOOL:: var_is_introduced ;
var bool: aux18611_BOOL:: var_is_introduced ;
var {0,1}: aux18611_INTEGER :: var_is_introduced ;
var 1..43: aux18612:: var_is_introduced ;
var bool: aux18613_BOOL:: var_is_introduced ;
var bool: aux18614_BOOL:: var_is_introduced ;
var bool: aux18615_BOOL:: var_is_introduced ;
var bool: aux18616_BOOL:: var_is_introduced ;
var bool: aux18617_BOOL:: var_is_introduced ;
var {0,1}: aux18617_INTEGER :: var_is_introduced ;
var 2..44: aux18618:: var_is_introduced ;
var bool: aux18619_BOOL:: var_is_introduced ;
var bool: aux18620_BOOL:: var_is_introduced ;
var bool: aux18621_BOOL:: var_is_introduced ;
var bool: aux18622_BOOL:: var_is_introduced ;
var bool: aux18623_BOOL:: var_is_introduced ;
var {0,1}: aux18623_INTEGER :: var_is_introduced ;
var 2..44: aux18624:: var_is_introduced ;
var bool: aux18625_BOOL:: var_is_introduced ;
var bool: aux18626_BOOL:: var_is_introduced ;
var bool: aux18627_BOOL:: var_is_introduced ;
var bool: aux18628_BOOL:: var_is_introduced ;
var bool: aux18629_BOOL:: var_is_introduced ;
var {0,1}: aux18629_INTEGER :: var_is_introduced ;
var 1..43: aux18630:: var_is_introduced ;
var bool: aux18631_BOOL:: var_is_introduced ;
var bool: aux18632_BOOL:: var_is_introduced ;
var bool: aux18633_BOOL:: var_is_introduced ;
var bool: aux18634_BOOL:: var_is_introduced ;
var bool: aux18635_BOOL:: var_is_introduced ;
var {0,1}: aux18635_INTEGER :: var_is_introduced ;
var 2..44: aux18636:: var_is_introduced ;
var bool: aux18637_BOOL:: var_is_introduced ;
var bool: aux18638_BOOL:: var_is_introduced ;
var bool: aux18639_BOOL:: var_is_introduced ;
var bool: aux18640_BOOL:: var_is_introduced ;
var bool: aux18641_BOOL:: var_is_introduced ;
var {0,1}: aux18641_INTEGER :: var_is_introduced ;
var 4..46: aux18642:: var_is_introduced ;
var bool: aux18643_BOOL:: var_is_introduced ;
var bool: aux18644_BOOL:: var_is_introduced ;
var bool: aux18645_BOOL:: var_is_introduced ;
var bool: aux18646_BOOL:: var_is_introduced ;
var bool: aux18647_BOOL:: var_is_introduced ;
var {0,1}: aux18647_INTEGER :: var_is_introduced ;
var 1..43: aux18648:: var_is_introduced ;
var bool: aux18649_BOOL:: var_is_introduced ;
var bool: aux18650_BOOL:: var_is_introduced ;
var bool: aux18651_BOOL:: var_is_introduced ;
var bool: aux18652_BOOL:: var_is_introduced ;
var bool: aux18653_BOOL:: var_is_introduced ;
var {0,1}: aux18653_INTEGER :: var_is_introduced ;
var 3..45: aux18654:: var_is_introduced ;
var bool: aux18655_BOOL:: var_is_introduced ;
var bool: aux18656_BOOL:: var_is_introduced ;
var bool: aux18657_BOOL:: var_is_introduced ;
var bool: aux18658_BOOL:: var_is_introduced ;
var bool: aux18659_BOOL:: var_is_introduced ;
var {0,1}: aux18659_INTEGER :: var_is_introduced ;
var 3..45: aux18660:: var_is_introduced ;
var bool: aux18661_BOOL:: var_is_introduced ;
var bool: aux18662_BOOL:: var_is_introduced ;
var bool: aux18663_BOOL:: var_is_introduced ;
var bool: aux18664_BOOL:: var_is_introduced ;
var bool: aux18665_BOOL:: var_is_introduced ;
var {0,1}: aux18665_INTEGER :: var_is_introduced ;
var 2..44: aux18666:: var_is_introduced ;
var bool: aux18667_BOOL:: var_is_introduced ;
var bool: aux18668_BOOL:: var_is_introduced ;
var bool: aux18669_BOOL:: var_is_introduced ;
var bool: aux18670_BOOL:: var_is_introduced ;
var bool: aux18671_BOOL:: var_is_introduced ;
var {0,1}: aux18671_INTEGER :: var_is_introduced ;
var 3..45: aux18672:: var_is_introduced ;
var bool: aux18673_BOOL:: var_is_introduced ;
var bool: aux18674_BOOL:: var_is_introduced ;
var bool: aux18675_BOOL:: var_is_introduced ;
var bool: aux18676_BOOL:: var_is_introduced ;
var bool: aux18677_BOOL:: var_is_introduced ;
var {0,1}: aux18677_INTEGER :: var_is_introduced ;
var bool: aux18678_BOOL:: var_is_introduced ;
var 2..44: aux18679:: var_is_introduced ;
var bool: aux18680_BOOL:: var_is_introduced ;
var bool: aux18681_BOOL:: var_is_introduced ;
var bool: aux18682_BOOL:: var_is_introduced ;
var {0,1}: aux18682_INTEGER :: var_is_introduced ;
var 1..43: aux18683:: var_is_introduced ;
var bool: aux18684_BOOL:: var_is_introduced ;
var bool: aux18685_BOOL:: var_is_introduced ;
var bool: aux18686_BOOL:: var_is_introduced ;
var bool: aux18687_BOOL:: var_is_introduced ;
var bool: aux18688_BOOL:: var_is_introduced ;
var {0,1}: aux18688_INTEGER :: var_is_introduced ;
var 2..44: aux18689:: var_is_introduced ;
var bool: aux18690_BOOL:: var_is_introduced ;
var bool: aux18691_BOOL:: var_is_introduced ;
var bool: aux18692_BOOL:: var_is_introduced ;
var bool: aux18693_BOOL:: var_is_introduced ;
var bool: aux18694_BOOL:: var_is_introduced ;
var {0,1}: aux18694_INTEGER :: var_is_introduced ;
var 3..45: aux18695:: var_is_introduced ;
var bool: aux18696_BOOL:: var_is_introduced ;
var bool: aux18697_BOOL:: var_is_introduced ;
var bool: aux18698_BOOL:: var_is_introduced ;
var bool: aux18699_BOOL:: var_is_introduced ;
var bool: aux18700_BOOL:: var_is_introduced ;
var {0,1}: aux18700_INTEGER :: var_is_introduced ;
var 2..44: aux18701:: var_is_introduced ;
var bool: aux18702_BOOL:: var_is_introduced ;
var bool: aux18703_BOOL:: var_is_introduced ;
var bool: aux18704_BOOL:: var_is_introduced ;
var bool: aux18705_BOOL:: var_is_introduced ;
var bool: aux18706_BOOL:: var_is_introduced ;
var {0,1}: aux18706_INTEGER :: var_is_introduced ;
var 2..44: aux18707:: var_is_introduced ;
var bool: aux18708_BOOL:: var_is_introduced ;
var bool: aux18709_BOOL:: var_is_introduced ;
var bool: aux18710_BOOL:: var_is_introduced ;
var bool: aux18711_BOOL:: var_is_introduced ;
var bool: aux18712_BOOL:: var_is_introduced ;
var {0,1}: aux18712_INTEGER :: var_is_introduced ;
var 3..45: aux18713:: var_is_introduced ;
var bool: aux18714_BOOL:: var_is_introduced ;
var bool: aux18715_BOOL:: var_is_introduced ;
var bool: aux18716_BOOL:: var_is_introduced ;
var bool: aux18717_BOOL:: var_is_introduced ;
var bool: aux18718_BOOL:: var_is_introduced ;
var {0,1}: aux18718_INTEGER :: var_is_introduced ;
var 2..44: aux18719:: var_is_introduced ;
var bool: aux18720_BOOL:: var_is_introduced ;
var bool: aux18721_BOOL:: var_is_introduced ;
var bool: aux18722_BOOL:: var_is_introduced ;
var bool: aux18723_BOOL:: var_is_introduced ;
var bool: aux18724_BOOL:: var_is_introduced ;
var {0,1}: aux18724_INTEGER :: var_is_introduced ;
var 1..43: aux18725:: var_is_introduced ;
var bool: aux18726_BOOL:: var_is_introduced ;
var bool: aux18727_BOOL:: var_is_introduced ;
var bool: aux18728_BOOL:: var_is_introduced ;
var bool: aux18729_BOOL:: var_is_introduced ;
var bool: aux18730_BOOL:: var_is_introduced ;
var {0,1}: aux18730_INTEGER :: var_is_introduced ;
var 2..44: aux18731:: var_is_introduced ;
var bool: aux18732_BOOL:: var_is_introduced ;
var bool: aux18733_BOOL:: var_is_introduced ;
var bool: aux18734_BOOL:: var_is_introduced ;
var bool: aux18735_BOOL:: var_is_introduced ;
var bool: aux18736_BOOL:: var_is_introduced ;
var {0,1}: aux18736_INTEGER :: var_is_introduced ;
var 1..43: aux18737:: var_is_introduced ;
var bool: aux18738_BOOL:: var_is_introduced ;
var bool: aux18739_BOOL:: var_is_introduced ;
var bool: aux18740_BOOL:: var_is_introduced ;
var bool: aux18741_BOOL:: var_is_introduced ;
var bool: aux18742_BOOL:: var_is_introduced ;
var {0,1}: aux18742_INTEGER :: var_is_introduced ;
var 2..44: aux18743:: var_is_introduced ;
var bool: aux18744_BOOL:: var_is_introduced ;
var bool: aux18745_BOOL:: var_is_introduced ;
var bool: aux18746_BOOL:: var_is_introduced ;
var bool: aux18747_BOOL:: var_is_introduced ;
var bool: aux18748_BOOL:: var_is_introduced ;
var {0,1}: aux18748_INTEGER :: var_is_introduced ;
var 1..43: aux18749:: var_is_introduced ;
var bool: aux18750_BOOL:: var_is_introduced ;
var bool: aux18751_BOOL:: var_is_introduced ;
var bool: aux18752_BOOL:: var_is_introduced ;
var bool: aux18753_BOOL:: var_is_introduced ;
var bool: aux18754_BOOL:: var_is_introduced ;
var {0,1}: aux18754_INTEGER :: var_is_introduced ;
var 2..44: aux18755:: var_is_introduced ;
var bool: aux18756_BOOL:: var_is_introduced ;
var bool: aux18757_BOOL:: var_is_introduced ;
var bool: aux18758_BOOL:: var_is_introduced ;
var bool: aux18759_BOOL:: var_is_introduced ;
var bool: aux18760_BOOL:: var_is_introduced ;
var {0,1}: aux18760_INTEGER :: var_is_introduced ;
var 4..46: aux18761:: var_is_introduced ;
var bool: aux18762_BOOL:: var_is_introduced ;
var bool: aux18763_BOOL:: var_is_introduced ;
var bool: aux18764_BOOL:: var_is_introduced ;
var bool: aux18765_BOOL:: var_is_introduced ;
var bool: aux18766_BOOL:: var_is_introduced ;
var {0,1}: aux18766_INTEGER :: var_is_introduced ;
var 1..43: aux18767:: var_is_introduced ;
var bool: aux18768_BOOL:: var_is_introduced ;
var bool: aux18769_BOOL:: var_is_introduced ;
var bool: aux18770_BOOL:: var_is_introduced ;
var bool: aux18771_BOOL:: var_is_introduced ;
var bool: aux18772_BOOL:: var_is_introduced ;
var {0,1}: aux18772_INTEGER :: var_is_introduced ;
var 3..45: aux18773:: var_is_introduced ;
var bool: aux18774_BOOL:: var_is_introduced ;
var bool: aux18775_BOOL:: var_is_introduced ;
var bool: aux18776_BOOL:: var_is_introduced ;
var bool: aux18777_BOOL:: var_is_introduced ;
var bool: aux18778_BOOL:: var_is_introduced ;
var {0,1}: aux18778_INTEGER :: var_is_introduced ;
var 3..45: aux18779:: var_is_introduced ;
var bool: aux18780_BOOL:: var_is_introduced ;
var bool: aux18781_BOOL:: var_is_introduced ;
var bool: aux18782_BOOL:: var_is_introduced ;
var bool: aux18783_BOOL:: var_is_introduced ;
var bool: aux18784_BOOL:: var_is_introduced ;
var {0,1}: aux18784_INTEGER :: var_is_introduced ;
var 2..44: aux18785:: var_is_introduced ;
var bool: aux18786_BOOL:: var_is_introduced ;
var bool: aux18787_BOOL:: var_is_introduced ;
var bool: aux18788_BOOL:: var_is_introduced ;
var bool: aux18789_BOOL:: var_is_introduced ;
var bool: aux18790_BOOL:: var_is_introduced ;
var {0,1}: aux18790_INTEGER :: var_is_introduced ;
var 3..45: aux18791:: var_is_introduced ;
var bool: aux18792_BOOL:: var_is_introduced ;
var bool: aux18793_BOOL:: var_is_introduced ;
var bool: aux18794_BOOL:: var_is_introduced ;
var bool: aux18795_BOOL:: var_is_introduced ;
var bool: aux18796_BOOL:: var_is_introduced ;
var {0,1}: aux18796_INTEGER :: var_is_introduced ;
var bool: aux18797_BOOL:: var_is_introduced ;
var 4..46: aux18798:: var_is_introduced ;
var bool: aux18799_BOOL:: var_is_introduced ;
var bool: aux18800_BOOL:: var_is_introduced ;
var bool: aux18801_BOOL:: var_is_introduced ;
var {0,1}: aux18801_INTEGER :: var_is_introduced ;
var 1..43: aux18802:: var_is_introduced ;
var bool: aux18803_BOOL:: var_is_introduced ;
var bool: aux18804_BOOL:: var_is_introduced ;
var bool: aux18805_BOOL:: var_is_introduced ;
var bool: aux18806_BOOL:: var_is_introduced ;
var bool: aux18807_BOOL:: var_is_introduced ;
var {0,1}: aux18807_INTEGER :: var_is_introduced ;
var 2..44: aux18808:: var_is_introduced ;
var bool: aux18809_BOOL:: var_is_introduced ;
var bool: aux18810_BOOL:: var_is_introduced ;
var bool: aux18811_BOOL:: var_is_introduced ;
var bool: aux18812_BOOL:: var_is_introduced ;
var bool: aux18813_BOOL:: var_is_introduced ;
var {0,1}: aux18813_INTEGER :: var_is_introduced ;
var 3..45: aux18814:: var_is_introduced ;
var bool: aux18815_BOOL:: var_is_introduced ;
var bool: aux18816_BOOL:: var_is_introduced ;
var bool: aux18817_BOOL:: var_is_introduced ;
var bool: aux18818_BOOL:: var_is_introduced ;
var bool: aux18819_BOOL:: var_is_introduced ;
var {0,1}: aux18819_INTEGER :: var_is_introduced ;
var 2..44: aux18820:: var_is_introduced ;
var bool: aux18821_BOOL:: var_is_introduced ;
var bool: aux18822_BOOL:: var_is_introduced ;
var bool: aux18823_BOOL:: var_is_introduced ;
var bool: aux18824_BOOL:: var_is_introduced ;
var bool: aux18825_BOOL:: var_is_introduced ;
var {0,1}: aux18825_INTEGER :: var_is_introduced ;
var 2..44: aux18826:: var_is_introduced ;
var bool: aux18827_BOOL:: var_is_introduced ;
var bool: aux18828_BOOL:: var_is_introduced ;
var bool: aux18829_BOOL:: var_is_introduced ;
var bool: aux18830_BOOL:: var_is_introduced ;
var bool: aux18831_BOOL:: var_is_introduced ;
var {0,1}: aux18831_INTEGER :: var_is_introduced ;
var 3..45: aux18832:: var_is_introduced ;
var bool: aux18833_BOOL:: var_is_introduced ;
var bool: aux18834_BOOL:: var_is_introduced ;
var bool: aux18835_BOOL:: var_is_introduced ;
var bool: aux18836_BOOL:: var_is_introduced ;
var bool: aux18837_BOOL:: var_is_introduced ;
var {0,1}: aux18837_INTEGER :: var_is_introduced ;
var 2..44: aux18838:: var_is_introduced ;
var bool: aux18839_BOOL:: var_is_introduced ;
var bool: aux18840_BOOL:: var_is_introduced ;
var bool: aux18841_BOOL:: var_is_introduced ;
var bool: aux18842_BOOL:: var_is_introduced ;
var bool: aux18843_BOOL:: var_is_introduced ;
var {0,1}: aux18843_INTEGER :: var_is_introduced ;
var 1..43: aux18844:: var_is_introduced ;
var bool: aux18845_BOOL:: var_is_introduced ;
var bool: aux18846_BOOL:: var_is_introduced ;
var bool: aux18847_BOOL:: var_is_introduced ;
var bool: aux18848_BOOL:: var_is_introduced ;
var bool: aux18849_BOOL:: var_is_introduced ;
var {0,1}: aux18849_INTEGER :: var_is_introduced ;
var 2..44: aux18850:: var_is_introduced ;
var bool: aux18851_BOOL:: var_is_introduced ;
var bool: aux18852_BOOL:: var_is_introduced ;
var bool: aux18853_BOOL:: var_is_introduced ;
var bool: aux18854_BOOL:: var_is_introduced ;
var bool: aux18855_BOOL:: var_is_introduced ;
var {0,1}: aux18855_INTEGER :: var_is_introduced ;
var 1..43: aux18856:: var_is_introduced ;
var bool: aux18857_BOOL:: var_is_introduced ;
var bool: aux18858_BOOL:: var_is_introduced ;
var bool: aux18859_BOOL:: var_is_introduced ;
var bool: aux18860_BOOL:: var_is_introduced ;
var bool: aux18861_BOOL:: var_is_introduced ;
var {0,1}: aux18861_INTEGER :: var_is_introduced ;
var 2..44: aux18862:: var_is_introduced ;
var bool: aux18863_BOOL:: var_is_introduced ;
var bool: aux18864_BOOL:: var_is_introduced ;
var bool: aux18865_BOOL:: var_is_introduced ;
var bool: aux18866_BOOL:: var_is_introduced ;
var bool: aux18867_BOOL:: var_is_introduced ;
var {0,1}: aux18867_INTEGER :: var_is_introduced ;
var 2..44: aux18868:: var_is_introduced ;
var bool: aux18869_BOOL:: var_is_introduced ;
var bool: aux18870_BOOL:: var_is_introduced ;
var bool: aux18871_BOOL:: var_is_introduced ;
var bool: aux18872_BOOL:: var_is_introduced ;
var bool: aux18873_BOOL:: var_is_introduced ;
var {0,1}: aux18873_INTEGER :: var_is_introduced ;
var 1..43: aux18874:: var_is_introduced ;
var bool: aux18875_BOOL:: var_is_introduced ;
var bool: aux18876_BOOL:: var_is_introduced ;
var bool: aux18877_BOOL:: var_is_introduced ;
var bool: aux18878_BOOL:: var_is_introduced ;
var bool: aux18879_BOOL:: var_is_introduced ;
var {0,1}: aux18879_INTEGER :: var_is_introduced ;
var 2..44: aux18880:: var_is_introduced ;
var bool: aux18881_BOOL:: var_is_introduced ;
var bool: aux18882_BOOL:: var_is_introduced ;
var bool: aux18883_BOOL:: var_is_introduced ;
var bool: aux18884_BOOL:: var_is_introduced ;
var bool: aux18885_BOOL:: var_is_introduced ;
var {0,1}: aux18885_INTEGER :: var_is_introduced ;
var 1..43: aux18886:: var_is_introduced ;
var bool: aux18887_BOOL:: var_is_introduced ;
var bool: aux18888_BOOL:: var_is_introduced ;
var bool: aux18889_BOOL:: var_is_introduced ;
var bool: aux18890_BOOL:: var_is_introduced ;
var bool: aux18891_BOOL:: var_is_introduced ;
var {0,1}: aux18891_INTEGER :: var_is_introduced ;
var 3..45: aux18892:: var_is_introduced ;
var bool: aux18893_BOOL:: var_is_introduced ;
var bool: aux18894_BOOL:: var_is_introduced ;
var bool: aux18895_BOOL:: var_is_introduced ;
var bool: aux18896_BOOL:: var_is_introduced ;
var bool: aux18897_BOOL:: var_is_introduced ;
var {0,1}: aux18897_INTEGER :: var_is_introduced ;
var 3..45: aux18898:: var_is_introduced ;
var bool: aux18899_BOOL:: var_is_introduced ;
var bool: aux18900_BOOL:: var_is_introduced ;
var bool: aux18901_BOOL:: var_is_introduced ;
var bool: aux18902_BOOL:: var_is_introduced ;
var bool: aux18903_BOOL:: var_is_introduced ;
var {0,1}: aux18903_INTEGER :: var_is_introduced ;
var 2..44: aux18904:: var_is_introduced ;
var bool: aux18905_BOOL:: var_is_introduced ;
var bool: aux18906_BOOL:: var_is_introduced ;
var bool: aux18907_BOOL:: var_is_introduced ;
var bool: aux18908_BOOL:: var_is_introduced ;
var bool: aux18909_BOOL:: var_is_introduced ;
var {0,1}: aux18909_INTEGER :: var_is_introduced ;
var 3..45: aux18910:: var_is_introduced ;
var bool: aux18911_BOOL:: var_is_introduced ;
var bool: aux18912_BOOL:: var_is_introduced ;
var bool: aux18913_BOOL:: var_is_introduced ;
var bool: aux18914_BOOL:: var_is_introduced ;
var bool: aux18915_BOOL:: var_is_introduced ;
var {0,1}: aux18915_INTEGER :: var_is_introduced ;
var bool: aux18916_BOOL:: var_is_introduced ;
var 2..44: aux18917:: var_is_introduced ;
var bool: aux18918_BOOL:: var_is_introduced ;
var bool: aux18919_BOOL:: var_is_introduced ;
var bool: aux18920_BOOL:: var_is_introduced ;
var {0,1}: aux18920_INTEGER :: var_is_introduced ;
var 1..43: aux18921:: var_is_introduced ;
var bool: aux18922_BOOL:: var_is_introduced ;
var bool: aux18923_BOOL:: var_is_introduced ;
var bool: aux18924_BOOL:: var_is_introduced ;
var bool: aux18925_BOOL:: var_is_introduced ;
var bool: aux18926_BOOL:: var_is_introduced ;
var {0,1}: aux18926_INTEGER :: var_is_introduced ;
var 2..44: aux18927:: var_is_introduced ;
var bool: aux18928_BOOL:: var_is_introduced ;
var bool: aux18929_BOOL:: var_is_introduced ;
var bool: aux18930_BOOL:: var_is_introduced ;
var bool: aux18931_BOOL:: var_is_introduced ;
var bool: aux18932_BOOL:: var_is_introduced ;
var {0,1}: aux18932_INTEGER :: var_is_introduced ;
var 3..45: aux18933:: var_is_introduced ;
var bool: aux18934_BOOL:: var_is_introduced ;
var bool: aux18935_BOOL:: var_is_introduced ;
var bool: aux18936_BOOL:: var_is_introduced ;
var bool: aux18937_BOOL:: var_is_introduced ;
var bool: aux18938_BOOL:: var_is_introduced ;
var {0,1}: aux18938_INTEGER :: var_is_introduced ;
var 2..44: aux18939:: var_is_introduced ;
var bool: aux18940_BOOL:: var_is_introduced ;
var bool: aux18941_BOOL:: var_is_introduced ;
var bool: aux18942_BOOL:: var_is_introduced ;
var bool: aux18943_BOOL:: var_is_introduced ;
var bool: aux18944_BOOL:: var_is_introduced ;
var {0,1}: aux18944_INTEGER :: var_is_introduced ;
var 2..44: aux18945:: var_is_introduced ;
var bool: aux18946_BOOL:: var_is_introduced ;
var bool: aux18947_BOOL:: var_is_introduced ;
var bool: aux18948_BOOL:: var_is_introduced ;
var bool: aux18949_BOOL:: var_is_introduced ;
var bool: aux18950_BOOL:: var_is_introduced ;
var {0,1}: aux18950_INTEGER :: var_is_introduced ;
var 3..45: aux18951:: var_is_introduced ;
var bool: aux18952_BOOL:: var_is_introduced ;
var bool: aux18953_BOOL:: var_is_introduced ;
var bool: aux18954_BOOL:: var_is_introduced ;
var bool: aux18955_BOOL:: var_is_introduced ;
var bool: aux18956_BOOL:: var_is_introduced ;
var {0,1}: aux18956_INTEGER :: var_is_introduced ;
var 2..44: aux18957:: var_is_introduced ;
var bool: aux18958_BOOL:: var_is_introduced ;
var bool: aux18959_BOOL:: var_is_introduced ;
var bool: aux18960_BOOL:: var_is_introduced ;
var bool: aux18961_BOOL:: var_is_introduced ;
var bool: aux18962_BOOL:: var_is_introduced ;
var {0,1}: aux18962_INTEGER :: var_is_introduced ;
var 1..43: aux18963:: var_is_introduced ;
var bool: aux18964_BOOL:: var_is_introduced ;
var bool: aux18965_BOOL:: var_is_introduced ;
var bool: aux18966_BOOL:: var_is_introduced ;
var bool: aux18967_BOOL:: var_is_introduced ;
var bool: aux18968_BOOL:: var_is_introduced ;
var {0,1}: aux18968_INTEGER :: var_is_introduced ;
var 2..44: aux18969:: var_is_introduced ;
var bool: aux18970_BOOL:: var_is_introduced ;
var bool: aux18971_BOOL:: var_is_introduced ;
var bool: aux18972_BOOL:: var_is_introduced ;
var bool: aux18973_BOOL:: var_is_introduced ;
var bool: aux18974_BOOL:: var_is_introduced ;
var {0,1}: aux18974_INTEGER :: var_is_introduced ;
var 1..43: aux18975:: var_is_introduced ;
var bool: aux18976_BOOL:: var_is_introduced ;
var bool: aux18977_BOOL:: var_is_introduced ;
var bool: aux18978_BOOL:: var_is_introduced ;
var bool: aux18979_BOOL:: var_is_introduced ;
var bool: aux18980_BOOL:: var_is_introduced ;
var {0,1}: aux18980_INTEGER :: var_is_introduced ;
var 2..44: aux18981:: var_is_introduced ;
var bool: aux18982_BOOL:: var_is_introduced ;
var bool: aux18983_BOOL:: var_is_introduced ;
var bool: aux18984_BOOL:: var_is_introduced ;
var bool: aux18985_BOOL:: var_is_introduced ;
var bool: aux18986_BOOL:: var_is_introduced ;
var {0,1}: aux18986_INTEGER :: var_is_introduced ;
var 2..44: aux18987:: var_is_introduced ;
var bool: aux18988_BOOL:: var_is_introduced ;
var bool: aux18989_BOOL:: var_is_introduced ;
var bool: aux18990_BOOL:: var_is_introduced ;
var bool: aux18991_BOOL:: var_is_introduced ;
var bool: aux18992_BOOL:: var_is_introduced ;
var {0,1}: aux18992_INTEGER :: var_is_introduced ;
var 1..43: aux18993:: var_is_introduced ;
var bool: aux18994_BOOL:: var_is_introduced ;
var bool: aux18995_BOOL:: var_is_introduced ;
var bool: aux18996_BOOL:: var_is_introduced ;
var bool: aux18997_BOOL:: var_is_introduced ;
var bool: aux18998_BOOL:: var_is_introduced ;
var {0,1}: aux18998_INTEGER :: var_is_introduced ;
var 4..46: aux18999:: var_is_introduced ;
var bool: aux19000_BOOL:: var_is_introduced ;
var bool: aux19001_BOOL:: var_is_introduced ;
var bool: aux19002_BOOL:: var_is_introduced ;
var bool: aux19003_BOOL:: var_is_introduced ;
var bool: aux19004_BOOL:: var_is_introduced ;
var {0,1}: aux19004_INTEGER :: var_is_introduced ;
var 1..43: aux19005:: var_is_introduced ;
var bool: aux19006_BOOL:: var_is_introduced ;
var bool: aux19007_BOOL:: var_is_introduced ;
var bool: aux19008_BOOL:: var_is_introduced ;
var bool: aux19009_BOOL:: var_is_introduced ;
var bool: aux19010_BOOL:: var_is_introduced ;
var {0,1}: aux19010_INTEGER :: var_is_introduced ;
var 3..45: aux19011:: var_is_introduced ;
var bool: aux19012_BOOL:: var_is_introduced ;
var bool: aux19013_BOOL:: var_is_introduced ;
var bool: aux19014_BOOL:: var_is_introduced ;
var bool: aux19015_BOOL:: var_is_introduced ;
var bool: aux19016_BOOL:: var_is_introduced ;
var {0,1}: aux19016_INTEGER :: var_is_introduced ;
var 3..45: aux19017:: var_is_introduced ;
var bool: aux19018_BOOL:: var_is_introduced ;
var bool: aux19019_BOOL:: var_is_introduced ;
var bool: aux19020_BOOL:: var_is_introduced ;
var bool: aux19021_BOOL:: var_is_introduced ;
var bool: aux19022_BOOL:: var_is_introduced ;
var {0,1}: aux19022_INTEGER :: var_is_introduced ;
var 2..44: aux19023:: var_is_introduced ;
var bool: aux19024_BOOL:: var_is_introduced ;
var bool: aux19025_BOOL:: var_is_introduced ;
var bool: aux19026_BOOL:: var_is_introduced ;
var bool: aux19027_BOOL:: var_is_introduced ;
var bool: aux19028_BOOL:: var_is_introduced ;
var {0,1}: aux19028_INTEGER :: var_is_introduced ;
var 3..45: aux19029:: var_is_introduced ;
var bool: aux19030_BOOL:: var_is_introduced ;
var bool: aux19031_BOOL:: var_is_introduced ;
var bool: aux19032_BOOL:: var_is_introduced ;
var bool: aux19033_BOOL:: var_is_introduced ;
var bool: aux19034_BOOL:: var_is_introduced ;
var {0,1}: aux19034_INTEGER :: var_is_introduced ;
var bool: aux19035_BOOL:: var_is_introduced ;
var 1..43: aux19036:: var_is_introduced ;
var bool: aux19037_BOOL:: var_is_introduced ;
var bool: aux19038_BOOL:: var_is_introduced ;
var bool: aux19039_BOOL:: var_is_introduced ;
var {0,1}: aux19039_INTEGER :: var_is_introduced ;
var 1..43: aux19040:: var_is_introduced ;
var bool: aux19041_BOOL:: var_is_introduced ;
var bool: aux19042_BOOL:: var_is_introduced ;
var bool: aux19043_BOOL:: var_is_introduced ;
var bool: aux19044_BOOL:: var_is_introduced ;
var bool: aux19045_BOOL:: var_is_introduced ;
var {0,1}: aux19045_INTEGER :: var_is_introduced ;
var 2..44: aux19046:: var_is_introduced ;
var bool: aux19047_BOOL:: var_is_introduced ;
var bool: aux19048_BOOL:: var_is_introduced ;
var bool: aux19049_BOOL:: var_is_introduced ;
var bool: aux19050_BOOL:: var_is_introduced ;
var bool: aux19051_BOOL:: var_is_introduced ;
var {0,1}: aux19051_INTEGER :: var_is_introduced ;
var 3..45: aux19052:: var_is_introduced ;
var bool: aux19053_BOOL:: var_is_introduced ;
var bool: aux19054_BOOL:: var_is_introduced ;
var bool: aux19055_BOOL:: var_is_introduced ;
var bool: aux19056_BOOL:: var_is_introduced ;
var bool: aux19057_BOOL:: var_is_introduced ;
var {0,1}: aux19057_INTEGER :: var_is_introduced ;
var 2..44: aux19058:: var_is_introduced ;
var bool: aux19059_BOOL:: var_is_introduced ;
var bool: aux19060_BOOL:: var_is_introduced ;
var bool: aux19061_BOOL:: var_is_introduced ;
var bool: aux19062_BOOL:: var_is_introduced ;
var bool: aux19063_BOOL:: var_is_introduced ;
var {0,1}: aux19063_INTEGER :: var_is_introduced ;
var 2..44: aux19064:: var_is_introduced ;
var bool: aux19065_BOOL:: var_is_introduced ;
var bool: aux19066_BOOL:: var_is_introduced ;
var bool: aux19067_BOOL:: var_is_introduced ;
var bool: aux19068_BOOL:: var_is_introduced ;
var bool: aux19069_BOOL:: var_is_introduced ;
var {0,1}: aux19069_INTEGER :: var_is_introduced ;
var 3..45: aux19070:: var_is_introduced ;
var bool: aux19071_BOOL:: var_is_introduced ;
var bool: aux19072_BOOL:: var_is_introduced ;
var bool: aux19073_BOOL:: var_is_introduced ;
var bool: aux19074_BOOL:: var_is_introduced ;
var bool: aux19075_BOOL:: var_is_introduced ;
var {0,1}: aux19075_INTEGER :: var_is_introduced ;
var 2..44: aux19076:: var_is_introduced ;
var bool: aux19077_BOOL:: var_is_introduced ;
var bool: aux19078_BOOL:: var_is_introduced ;
var bool: aux19079_BOOL:: var_is_introduced ;
var bool: aux19080_BOOL:: var_is_introduced ;
var bool: aux19081_BOOL:: var_is_introduced ;
var {0,1}: aux19081_INTEGER :: var_is_introduced ;
var 1..43: aux19082:: var_is_introduced ;
var bool: aux19083_BOOL:: var_is_introduced ;
var bool: aux19084_BOOL:: var_is_introduced ;
var bool: aux19085_BOOL:: var_is_introduced ;
var bool: aux19086_BOOL:: var_is_introduced ;
var bool: aux19087_BOOL:: var_is_introduced ;
var {0,1}: aux19087_INTEGER :: var_is_introduced ;
var 2..44: aux19088:: var_is_introduced ;
var bool: aux19089_BOOL:: var_is_introduced ;
var bool: aux19090_BOOL:: var_is_introduced ;
var bool: aux19091_BOOL:: var_is_introduced ;
var bool: aux19092_BOOL:: var_is_introduced ;
var bool: aux19093_BOOL:: var_is_introduced ;
var {0,1}: aux19093_INTEGER :: var_is_introduced ;
var 2..44: aux19094:: var_is_introduced ;
var bool: aux19095_BOOL:: var_is_introduced ;
var bool: aux19096_BOOL:: var_is_introduced ;
var bool: aux19097_BOOL:: var_is_introduced ;
var bool: aux19098_BOOL:: var_is_introduced ;
var bool: aux19099_BOOL:: var_is_introduced ;
var {0,1}: aux19099_INTEGER :: var_is_introduced ;
var 2..44: aux19100:: var_is_introduced ;
var bool: aux19101_BOOL:: var_is_introduced ;
var bool: aux19102_BOOL:: var_is_introduced ;
var bool: aux19103_BOOL:: var_is_introduced ;
var bool: aux19104_BOOL:: var_is_introduced ;
var bool: aux19105_BOOL:: var_is_introduced ;
var {0,1}: aux19105_INTEGER :: var_is_introduced ;
var 1..43: aux19106:: var_is_introduced ;
var bool: aux19107_BOOL:: var_is_introduced ;
var bool: aux19108_BOOL:: var_is_introduced ;
var bool: aux19109_BOOL:: var_is_introduced ;
var bool: aux19110_BOOL:: var_is_introduced ;
var bool: aux19111_BOOL:: var_is_introduced ;
var {0,1}: aux19111_INTEGER :: var_is_introduced ;
var 2..44: aux19112:: var_is_introduced ;
var bool: aux19113_BOOL:: var_is_introduced ;
var bool: aux19114_BOOL:: var_is_introduced ;
var bool: aux19115_BOOL:: var_is_introduced ;
var bool: aux19116_BOOL:: var_is_introduced ;
var bool: aux19117_BOOL:: var_is_introduced ;
var {0,1}: aux19117_INTEGER :: var_is_introduced ;
var 4..46: aux19118:: var_is_introduced ;
var bool: aux19119_BOOL:: var_is_introduced ;
var bool: aux19120_BOOL:: var_is_introduced ;
var bool: aux19121_BOOL:: var_is_introduced ;
var bool: aux19122_BOOL:: var_is_introduced ;
var bool: aux19123_BOOL:: var_is_introduced ;
var {0,1}: aux19123_INTEGER :: var_is_introduced ;
var 1..43: aux19124:: var_is_introduced ;
var bool: aux19125_BOOL:: var_is_introduced ;
var bool: aux19126_BOOL:: var_is_introduced ;
var bool: aux19127_BOOL:: var_is_introduced ;
var bool: aux19128_BOOL:: var_is_introduced ;
var bool: aux19129_BOOL:: var_is_introduced ;
var {0,1}: aux19129_INTEGER :: var_is_introduced ;
var 3..45: aux19130:: var_is_introduced ;
var bool: aux19131_BOOL:: var_is_introduced ;
var bool: aux19132_BOOL:: var_is_introduced ;
var bool: aux19133_BOOL:: var_is_introduced ;
var bool: aux19134_BOOL:: var_is_introduced ;
var bool: aux19135_BOOL:: var_is_introduced ;
var {0,1}: aux19135_INTEGER :: var_is_introduced ;
var 3..45: aux19136:: var_is_introduced ;
var bool: aux19137_BOOL:: var_is_introduced ;
var bool: aux19138_BOOL:: var_is_introduced ;
var bool: aux19139_BOOL:: var_is_introduced ;
var bool: aux19140_BOOL:: var_is_introduced ;
var bool: aux19141_BOOL:: var_is_introduced ;
var {0,1}: aux19141_INTEGER :: var_is_introduced ;
var 2..44: aux19142:: var_is_introduced ;
var bool: aux19143_BOOL:: var_is_introduced ;
var bool: aux19144_BOOL:: var_is_introduced ;
var bool: aux19145_BOOL:: var_is_introduced ;
var bool: aux19146_BOOL:: var_is_introduced ;
var bool: aux19147_BOOL:: var_is_introduced ;
var {0,1}: aux19147_INTEGER :: var_is_introduced ;
var 3..45: aux19148:: var_is_introduced ;
var bool: aux19149_BOOL:: var_is_introduced ;
var bool: aux19150_BOOL:: var_is_introduced ;
var bool: aux19151_BOOL:: var_is_introduced ;
var bool: aux19152_BOOL:: var_is_introduced ;
var bool: aux19153_BOOL:: var_is_introduced ;
var {0,1}: aux19153_INTEGER :: var_is_introduced ;
var bool: aux19154_BOOL:: var_is_introduced ;
var 3..45: aux19155:: var_is_introduced ;
var bool: aux19156_BOOL:: var_is_introduced ;
var bool: aux19157_BOOL:: var_is_introduced ;
var bool: aux19158_BOOL:: var_is_introduced ;
var {0,1}: aux19158_INTEGER :: var_is_introduced ;
var 1..43: aux19159:: var_is_introduced ;
var bool: aux19160_BOOL:: var_is_introduced ;
var bool: aux19161_BOOL:: var_is_introduced ;
var bool: aux19162_BOOL:: var_is_introduced ;
var bool: aux19163_BOOL:: var_is_introduced ;
var bool: aux19164_BOOL:: var_is_introduced ;
var {0,1}: aux19164_INTEGER :: var_is_introduced ;
var 2..44: aux19165:: var_is_introduced ;
var bool: aux19166_BOOL:: var_is_introduced ;
var bool: aux19167_BOOL:: var_is_introduced ;
var bool: aux19168_BOOL:: var_is_introduced ;
var bool: aux19169_BOOL:: var_is_introduced ;
var bool: aux19170_BOOL:: var_is_introduced ;
var {0,1}: aux19170_INTEGER :: var_is_introduced ;
var 2..44: aux19171:: var_is_introduced ;
var bool: aux19172_BOOL:: var_is_introduced ;
var bool: aux19173_BOOL:: var_is_introduced ;
var bool: aux19174_BOOL:: var_is_introduced ;
var bool: aux19175_BOOL:: var_is_introduced ;
var bool: aux19176_BOOL:: var_is_introduced ;
var {0,1}: aux19176_INTEGER :: var_is_introduced ;
var 2..44: aux19177:: var_is_introduced ;
var bool: aux19178_BOOL:: var_is_introduced ;
var bool: aux19179_BOOL:: var_is_introduced ;
var bool: aux19180_BOOL:: var_is_introduced ;
var bool: aux19181_BOOL:: var_is_introduced ;
var bool: aux19182_BOOL:: var_is_introduced ;
var {0,1}: aux19182_INTEGER :: var_is_introduced ;
var 3..45: aux19183:: var_is_introduced ;
var bool: aux19184_BOOL:: var_is_introduced ;
var bool: aux19185_BOOL:: var_is_introduced ;
var bool: aux19186_BOOL:: var_is_introduced ;
var bool: aux19187_BOOL:: var_is_introduced ;
var bool: aux19188_BOOL:: var_is_introduced ;
var {0,1}: aux19188_INTEGER :: var_is_introduced ;
var 2..44: aux19189:: var_is_introduced ;
var bool: aux19190_BOOL:: var_is_introduced ;
var bool: aux19191_BOOL:: var_is_introduced ;
var bool: aux19192_BOOL:: var_is_introduced ;
var bool: aux19193_BOOL:: var_is_introduced ;
var bool: aux19194_BOOL:: var_is_introduced ;
var {0,1}: aux19194_INTEGER :: var_is_introduced ;
var 1..43: aux19195:: var_is_introduced ;
var bool: aux19196_BOOL:: var_is_introduced ;
var bool: aux19197_BOOL:: var_is_introduced ;
var bool: aux19198_BOOL:: var_is_introduced ;
var bool: aux19199_BOOL:: var_is_introduced ;
var bool: aux19200_BOOL:: var_is_introduced ;
var {0,1}: aux19200_INTEGER :: var_is_introduced ;
var 2..44: aux19201:: var_is_introduced ;
var bool: aux19202_BOOL:: var_is_introduced ;
var bool: aux19203_BOOL:: var_is_introduced ;
var bool: aux19204_BOOL:: var_is_introduced ;
var bool: aux19205_BOOL:: var_is_introduced ;
var bool: aux19206_BOOL:: var_is_introduced ;
var {0,1}: aux19206_INTEGER :: var_is_introduced ;
var 1..43: aux19207:: var_is_introduced ;
var bool: aux19208_BOOL:: var_is_introduced ;
var bool: aux19209_BOOL:: var_is_introduced ;
var bool: aux19210_BOOL:: var_is_introduced ;
var bool: aux19211_BOOL:: var_is_introduced ;
var bool: aux19212_BOOL:: var_is_introduced ;
var {0,1}: aux19212_INTEGER :: var_is_introduced ;
var 2..44: aux19213:: var_is_introduced ;
var bool: aux19214_BOOL:: var_is_introduced ;
var bool: aux19215_BOOL:: var_is_introduced ;
var bool: aux19216_BOOL:: var_is_introduced ;
var bool: aux19217_BOOL:: var_is_introduced ;
var bool: aux19218_BOOL:: var_is_introduced ;
var {0,1}: aux19218_INTEGER :: var_is_introduced ;
var 2..44: aux19219:: var_is_introduced ;
var bool: aux19220_BOOL:: var_is_introduced ;
var bool: aux19221_BOOL:: var_is_introduced ;
var bool: aux19222_BOOL:: var_is_introduced ;
var bool: aux19223_BOOL:: var_is_introduced ;
var bool: aux19224_BOOL:: var_is_introduced ;
var {0,1}: aux19224_INTEGER :: var_is_introduced ;
var 1..43: aux19225:: var_is_introduced ;
var bool: aux19226_BOOL:: var_is_introduced ;
var bool: aux19227_BOOL:: var_is_introduced ;
var bool: aux19228_BOOL:: var_is_introduced ;
var bool: aux19229_BOOL:: var_is_introduced ;
var bool: aux19230_BOOL:: var_is_introduced ;
var {0,1}: aux19230_INTEGER :: var_is_introduced ;
var 2..44: aux19231:: var_is_introduced ;
var bool: aux19232_BOOL:: var_is_introduced ;
var bool: aux19233_BOOL:: var_is_introduced ;
var bool: aux19234_BOOL:: var_is_introduced ;
var bool: aux19235_BOOL:: var_is_introduced ;
var bool: aux19236_BOOL:: var_is_introduced ;
var {0,1}: aux19236_INTEGER :: var_is_introduced ;
var 4..46: aux19237:: var_is_introduced ;
var bool: aux19238_BOOL:: var_is_introduced ;
var bool: aux19239_BOOL:: var_is_introduced ;
var bool: aux19240_BOOL:: var_is_introduced ;
var bool: aux19241_BOOL:: var_is_introduced ;
var bool: aux19242_BOOL:: var_is_introduced ;
var {0,1}: aux19242_INTEGER :: var_is_introduced ;
var 1..43: aux19243:: var_is_introduced ;
var bool: aux19244_BOOL:: var_is_introduced ;
var bool: aux19245_BOOL:: var_is_introduced ;
var bool: aux19246_BOOL:: var_is_introduced ;
var bool: aux19247_BOOL:: var_is_introduced ;
var bool: aux19248_BOOL:: var_is_introduced ;
var {0,1}: aux19248_INTEGER :: var_is_introduced ;
var 3..45: aux19249:: var_is_introduced ;
var bool: aux19250_BOOL:: var_is_introduced ;
var bool: aux19251_BOOL:: var_is_introduced ;
var bool: aux19252_BOOL:: var_is_introduced ;
var bool: aux19253_BOOL:: var_is_introduced ;
var bool: aux19254_BOOL:: var_is_introduced ;
var {0,1}: aux19254_INTEGER :: var_is_introduced ;
var 3..45: aux19255:: var_is_introduced ;
var bool: aux19256_BOOL:: var_is_introduced ;
var bool: aux19257_BOOL:: var_is_introduced ;
var bool: aux19258_BOOL:: var_is_introduced ;
var bool: aux19259_BOOL:: var_is_introduced ;
var bool: aux19260_BOOL:: var_is_introduced ;
var {0,1}: aux19260_INTEGER :: var_is_introduced ;
var 2..44: aux19261:: var_is_introduced ;
var bool: aux19262_BOOL:: var_is_introduced ;
var bool: aux19263_BOOL:: var_is_introduced ;
var bool: aux19264_BOOL:: var_is_introduced ;
var bool: aux19265_BOOL:: var_is_introduced ;
var bool: aux19266_BOOL:: var_is_introduced ;
var {0,1}: aux19266_INTEGER :: var_is_introduced ;
var 3..45: aux19267:: var_is_introduced ;
var bool: aux19268_BOOL:: var_is_introduced ;
var bool: aux19269_BOOL:: var_is_introduced ;
var bool: aux19270_BOOL:: var_is_introduced ;
var bool: aux19271_BOOL:: var_is_introduced ;
var bool: aux19272_BOOL:: var_is_introduced ;
var {0,1}: aux19272_INTEGER :: var_is_introduced ;
var bool: aux19273_BOOL:: var_is_introduced ;
var 2..44: aux19274:: var_is_introduced ;
var bool: aux19275_BOOL:: var_is_introduced ;
var bool: aux19276_BOOL:: var_is_introduced ;
var bool: aux19277_BOOL:: var_is_introduced ;
var {0,1}: aux19277_INTEGER :: var_is_introduced ;
var 1..43: aux19278:: var_is_introduced ;
var bool: aux19279_BOOL:: var_is_introduced ;
var bool: aux19280_BOOL:: var_is_introduced ;
var bool: aux19281_BOOL:: var_is_introduced ;
var bool: aux19282_BOOL:: var_is_introduced ;
var bool: aux19283_BOOL:: var_is_introduced ;
var {0,1}: aux19283_INTEGER :: var_is_introduced ;
var 2..44: aux19284:: var_is_introduced ;
var bool: aux19285_BOOL:: var_is_introduced ;
var bool: aux19286_BOOL:: var_is_introduced ;
var bool: aux19287_BOOL:: var_is_introduced ;
var bool: aux19288_BOOL:: var_is_introduced ;
var bool: aux19289_BOOL:: var_is_introduced ;
var {0,1}: aux19289_INTEGER :: var_is_introduced ;
var 3..45: aux19290:: var_is_introduced ;
var bool: aux19291_BOOL:: var_is_introduced ;
var bool: aux19292_BOOL:: var_is_introduced ;
var bool: aux19293_BOOL:: var_is_introduced ;
var bool: aux19294_BOOL:: var_is_introduced ;
var bool: aux19295_BOOL:: var_is_introduced ;
var {0,1}: aux19295_INTEGER :: var_is_introduced ;
var 2..44: aux19296:: var_is_introduced ;
var bool: aux19297_BOOL:: var_is_introduced ;
var bool: aux19298_BOOL:: var_is_introduced ;
var bool: aux19299_BOOL:: var_is_introduced ;
var bool: aux19300_BOOL:: var_is_introduced ;
var bool: aux19301_BOOL:: var_is_introduced ;
var {0,1}: aux19301_INTEGER :: var_is_introduced ;
var 2..44: aux19302:: var_is_introduced ;
var bool: aux19303_BOOL:: var_is_introduced ;
var bool: aux19304_BOOL:: var_is_introduced ;
var bool: aux19305_BOOL:: var_is_introduced ;
var bool: aux19306_BOOL:: var_is_introduced ;
var bool: aux19307_BOOL:: var_is_introduced ;
var {0,1}: aux19307_INTEGER :: var_is_introduced ;
var 3..45: aux19308:: var_is_introduced ;
var bool: aux19309_BOOL:: var_is_introduced ;
var bool: aux19310_BOOL:: var_is_introduced ;
var bool: aux19311_BOOL:: var_is_introduced ;
var bool: aux19312_BOOL:: var_is_introduced ;
var bool: aux19313_BOOL:: var_is_introduced ;
var {0,1}: aux19313_INTEGER :: var_is_introduced ;
var 2..44: aux19314:: var_is_introduced ;
var bool: aux19315_BOOL:: var_is_introduced ;
var bool: aux19316_BOOL:: var_is_introduced ;
var bool: aux19317_BOOL:: var_is_introduced ;
var bool: aux19318_BOOL:: var_is_introduced ;
var bool: aux19319_BOOL:: var_is_introduced ;
var {0,1}: aux19319_INTEGER :: var_is_introduced ;
var 1..43: aux19320:: var_is_introduced ;
var bool: aux19321_BOOL:: var_is_introduced ;
var bool: aux19322_BOOL:: var_is_introduced ;
var bool: aux19323_BOOL:: var_is_introduced ;
var bool: aux19324_BOOL:: var_is_introduced ;
var bool: aux19325_BOOL:: var_is_introduced ;
var {0,1}: aux19325_INTEGER :: var_is_introduced ;
var 2..44: aux19326:: var_is_introduced ;
var bool: aux19327_BOOL:: var_is_introduced ;
var bool: aux19328_BOOL:: var_is_introduced ;
var bool: aux19329_BOOL:: var_is_introduced ;
var bool: aux19330_BOOL:: var_is_introduced ;
var bool: aux19331_BOOL:: var_is_introduced ;
var {0,1}: aux19331_INTEGER :: var_is_introduced ;
var 1..43: aux19332:: var_is_introduced ;
var bool: aux19333_BOOL:: var_is_introduced ;
var bool: aux19334_BOOL:: var_is_introduced ;
var bool: aux19335_BOOL:: var_is_introduced ;
var bool: aux19336_BOOL:: var_is_introduced ;
var bool: aux19337_BOOL:: var_is_introduced ;
var {0,1}: aux19337_INTEGER :: var_is_introduced ;
var 2..44: aux19338:: var_is_introduced ;
var bool: aux19339_BOOL:: var_is_introduced ;
var bool: aux19340_BOOL:: var_is_introduced ;
var bool: aux19341_BOOL:: var_is_introduced ;
var bool: aux19342_BOOL:: var_is_introduced ;
var bool: aux19343_BOOL:: var_is_introduced ;
var {0,1}: aux19343_INTEGER :: var_is_introduced ;
var 2..44: aux19344:: var_is_introduced ;
var bool: aux19345_BOOL:: var_is_introduced ;
var bool: aux19346_BOOL:: var_is_introduced ;
var bool: aux19347_BOOL:: var_is_introduced ;
var bool: aux19348_BOOL:: var_is_introduced ;
var bool: aux19349_BOOL:: var_is_introduced ;
var {0,1}: aux19349_INTEGER :: var_is_introduced ;
var 1..43: aux19350:: var_is_introduced ;
var bool: aux19351_BOOL:: var_is_introduced ;
var bool: aux19352_BOOL:: var_is_introduced ;
var bool: aux19353_BOOL:: var_is_introduced ;
var bool: aux19354_BOOL:: var_is_introduced ;
var bool: aux19355_BOOL:: var_is_introduced ;
var {0,1}: aux19355_INTEGER :: var_is_introduced ;
var 2..44: aux19356:: var_is_introduced ;
var bool: aux19357_BOOL:: var_is_introduced ;
var bool: aux19358_BOOL:: var_is_introduced ;
var bool: aux19359_BOOL:: var_is_introduced ;
var bool: aux19360_BOOL:: var_is_introduced ;
var bool: aux19361_BOOL:: var_is_introduced ;
var {0,1}: aux19361_INTEGER :: var_is_introduced ;
var 4..46: aux19362:: var_is_introduced ;
var bool: aux19363_BOOL:: var_is_introduced ;
var bool: aux19364_BOOL:: var_is_introduced ;
var bool: aux19365_BOOL:: var_is_introduced ;
var bool: aux19366_BOOL:: var_is_introduced ;
var bool: aux19367_BOOL:: var_is_introduced ;
var {0,1}: aux19367_INTEGER :: var_is_introduced ;
var 1..43: aux19368:: var_is_introduced ;
var bool: aux19369_BOOL:: var_is_introduced ;
var bool: aux19370_BOOL:: var_is_introduced ;
var bool: aux19371_BOOL:: var_is_introduced ;
var bool: aux19372_BOOL:: var_is_introduced ;
var bool: aux19373_BOOL:: var_is_introduced ;
var {0,1}: aux19373_INTEGER :: var_is_introduced ;
var 3..45: aux19374:: var_is_introduced ;
var bool: aux19375_BOOL:: var_is_introduced ;
var bool: aux19376_BOOL:: var_is_introduced ;
var bool: aux19377_BOOL:: var_is_introduced ;
var bool: aux19378_BOOL:: var_is_introduced ;
var bool: aux19379_BOOL:: var_is_introduced ;
var {0,1}: aux19379_INTEGER :: var_is_introduced ;
var 3..45: aux19380:: var_is_introduced ;
var bool: aux19381_BOOL:: var_is_introduced ;
var bool: aux19382_BOOL:: var_is_introduced ;
var bool: aux19383_BOOL:: var_is_introduced ;
var bool: aux19384_BOOL:: var_is_introduced ;
var bool: aux19385_BOOL:: var_is_introduced ;
var {0,1}: aux19385_INTEGER :: var_is_introduced ;
var 3..45: aux19386:: var_is_introduced ;
var bool: aux19387_BOOL:: var_is_introduced ;
var bool: aux19388_BOOL:: var_is_introduced ;
var bool: aux19389_BOOL:: var_is_introduced ;
var bool: aux19390_BOOL:: var_is_introduced ;
var bool: aux19391_BOOL:: var_is_introduced ;
var {0,1}: aux19391_INTEGER :: var_is_introduced ;
var bool: aux19392_BOOL:: var_is_introduced ;
var 3..45: aux19393:: var_is_introduced ;
var bool: aux19394_BOOL:: var_is_introduced ;
var bool: aux19395_BOOL:: var_is_introduced ;
var bool: aux19396_BOOL:: var_is_introduced ;
var {0,1}: aux19396_INTEGER :: var_is_introduced ;
var 1..43: aux19397:: var_is_introduced ;
var bool: aux19398_BOOL:: var_is_introduced ;
var bool: aux19399_BOOL:: var_is_introduced ;
var bool: aux19400_BOOL:: var_is_introduced ;
var bool: aux19401_BOOL:: var_is_introduced ;
var bool: aux19402_BOOL:: var_is_introduced ;
var {0,1}: aux19402_INTEGER :: var_is_introduced ;
var 2..44: aux19403:: var_is_introduced ;
var bool: aux19404_BOOL:: var_is_introduced ;
var bool: aux19405_BOOL:: var_is_introduced ;
var bool: aux19406_BOOL:: var_is_introduced ;
var bool: aux19407_BOOL:: var_is_introduced ;
var bool: aux19408_BOOL:: var_is_introduced ;
var {0,1}: aux19408_INTEGER :: var_is_introduced ;
var 3..45: aux19409:: var_is_introduced ;
var bool: aux19410_BOOL:: var_is_introduced ;
var bool: aux19411_BOOL:: var_is_introduced ;
var bool: aux19412_BOOL:: var_is_introduced ;
var bool: aux19413_BOOL:: var_is_introduced ;
var bool: aux19414_BOOL:: var_is_introduced ;
var {0,1}: aux19414_INTEGER :: var_is_introduced ;
var 2..44: aux19415:: var_is_introduced ;
var bool: aux19416_BOOL:: var_is_introduced ;
var bool: aux19417_BOOL:: var_is_introduced ;
var bool: aux19418_BOOL:: var_is_introduced ;
var bool: aux19419_BOOL:: var_is_introduced ;
var bool: aux19420_BOOL:: var_is_introduced ;
var {0,1}: aux19420_INTEGER :: var_is_introduced ;
var 2..44: aux19421:: var_is_introduced ;
var bool: aux19422_BOOL:: var_is_introduced ;
var bool: aux19423_BOOL:: var_is_introduced ;
var bool: aux19424_BOOL:: var_is_introduced ;
var bool: aux19425_BOOL:: var_is_introduced ;
var bool: aux19426_BOOL:: var_is_introduced ;
var {0,1}: aux19426_INTEGER :: var_is_introduced ;
var 3..45: aux19427:: var_is_introduced ;
var bool: aux19428_BOOL:: var_is_introduced ;
var bool: aux19429_BOOL:: var_is_introduced ;
var bool: aux19430_BOOL:: var_is_introduced ;
var bool: aux19431_BOOL:: var_is_introduced ;
var bool: aux19432_BOOL:: var_is_introduced ;
var {0,1}: aux19432_INTEGER :: var_is_introduced ;
var 2..44: aux19433:: var_is_introduced ;
var bool: aux19434_BOOL:: var_is_introduced ;
var bool: aux19435_BOOL:: var_is_introduced ;
var bool: aux19436_BOOL:: var_is_introduced ;
var bool: aux19437_BOOL:: var_is_introduced ;
var bool: aux19438_BOOL:: var_is_introduced ;
var {0,1}: aux19438_INTEGER :: var_is_introduced ;
var 1..43: aux19439:: var_is_introduced ;
var bool: aux19440_BOOL:: var_is_introduced ;
var bool: aux19441_BOOL:: var_is_introduced ;
var bool: aux19442_BOOL:: var_is_introduced ;
var bool: aux19443_BOOL:: var_is_introduced ;
var bool: aux19444_BOOL:: var_is_introduced ;
var {0,1}: aux19444_INTEGER :: var_is_introduced ;
var 2..44: aux19445:: var_is_introduced ;
var bool: aux19446_BOOL:: var_is_introduced ;
var bool: aux19447_BOOL:: var_is_introduced ;
var bool: aux19448_BOOL:: var_is_introduced ;
var bool: aux19449_BOOL:: var_is_introduced ;
var bool: aux19450_BOOL:: var_is_introduced ;
var {0,1}: aux19450_INTEGER :: var_is_introduced ;
var 1..43: aux19451:: var_is_introduced ;
var bool: aux19452_BOOL:: var_is_introduced ;
var bool: aux19453_BOOL:: var_is_introduced ;
var bool: aux19454_BOOL:: var_is_introduced ;
var bool: aux19455_BOOL:: var_is_introduced ;
var bool: aux19456_BOOL:: var_is_introduced ;
var {0,1}: aux19456_INTEGER :: var_is_introduced ;
var 2..44: aux19457:: var_is_introduced ;
var bool: aux19458_BOOL:: var_is_introduced ;
var bool: aux19459_BOOL:: var_is_introduced ;
var bool: aux19460_BOOL:: var_is_introduced ;
var bool: aux19461_BOOL:: var_is_introduced ;
var bool: aux19462_BOOL:: var_is_introduced ;
var {0,1}: aux19462_INTEGER :: var_is_introduced ;
var 2..44: aux19463:: var_is_introduced ;
var bool: aux19464_BOOL:: var_is_introduced ;
var bool: aux19465_BOOL:: var_is_introduced ;
var bool: aux19466_BOOL:: var_is_introduced ;
var bool: aux19467_BOOL:: var_is_introduced ;
var bool: aux19468_BOOL:: var_is_introduced ;
var {0,1}: aux19468_INTEGER :: var_is_introduced ;
var 1..43: aux19469:: var_is_introduced ;
var bool: aux19470_BOOL:: var_is_introduced ;
var bool: aux19471_BOOL:: var_is_introduced ;
var bool: aux19472_BOOL:: var_is_introduced ;
var bool: aux19473_BOOL:: var_is_introduced ;
var bool: aux19474_BOOL:: var_is_introduced ;
var {0,1}: aux19474_INTEGER :: var_is_introduced ;
var 2..44: aux19475:: var_is_introduced ;
var bool: aux19476_BOOL:: var_is_introduced ;
var bool: aux19477_BOOL:: var_is_introduced ;
var bool: aux19478_BOOL:: var_is_introduced ;
var bool: aux19479_BOOL:: var_is_introduced ;
var bool: aux19480_BOOL:: var_is_introduced ;
var {0,1}: aux19480_INTEGER :: var_is_introduced ;
var 4..46: aux19481:: var_is_introduced ;
var bool: aux19482_BOOL:: var_is_introduced ;
var bool: aux19483_BOOL:: var_is_introduced ;
var bool: aux19484_BOOL:: var_is_introduced ;
var bool: aux19485_BOOL:: var_is_introduced ;
var bool: aux19486_BOOL:: var_is_introduced ;
var {0,1}: aux19486_INTEGER :: var_is_introduced ;
var 1..43: aux19487:: var_is_introduced ;
var bool: aux19488_BOOL:: var_is_introduced ;
var bool: aux19489_BOOL:: var_is_introduced ;
var bool: aux19490_BOOL:: var_is_introduced ;
var bool: aux19491_BOOL:: var_is_introduced ;
var bool: aux19492_BOOL:: var_is_introduced ;
var {0,1}: aux19492_INTEGER :: var_is_introduced ;
var 3..45: aux19493:: var_is_introduced ;
var bool: aux19494_BOOL:: var_is_introduced ;
var bool: aux19495_BOOL:: var_is_introduced ;
var bool: aux19496_BOOL:: var_is_introduced ;
var bool: aux19497_BOOL:: var_is_introduced ;
var bool: aux19498_BOOL:: var_is_introduced ;
var {0,1}: aux19498_INTEGER :: var_is_introduced ;
var 2..44: aux19499:: var_is_introduced ;
var bool: aux19500_BOOL:: var_is_introduced ;
var bool: aux19501_BOOL:: var_is_introduced ;
var bool: aux19502_BOOL:: var_is_introduced ;
var bool: aux19503_BOOL:: var_is_introduced ;
var bool: aux19504_BOOL:: var_is_introduced ;
var {0,1}: aux19504_INTEGER :: var_is_introduced ;
var 3..45: aux19505:: var_is_introduced ;
var bool: aux19506_BOOL:: var_is_introduced ;
var bool: aux19507_BOOL:: var_is_introduced ;
var bool: aux19508_BOOL:: var_is_introduced ;
var bool: aux19509_BOOL:: var_is_introduced ;
var bool: aux19510_BOOL:: var_is_introduced ;
var {0,1}: aux19510_INTEGER :: var_is_introduced ;
var bool: aux19511_BOOL:: var_is_introduced ;
var 2..44: aux19512:: var_is_introduced ;
var bool: aux19513_BOOL:: var_is_introduced ;
var bool: aux19514_BOOL:: var_is_introduced ;
var bool: aux19515_BOOL:: var_is_introduced ;
var {0,1}: aux19515_INTEGER :: var_is_introduced ;
var 1..43: aux19516:: var_is_introduced ;
var bool: aux19517_BOOL:: var_is_introduced ;
var bool: aux19518_BOOL:: var_is_introduced ;
var bool: aux19519_BOOL:: var_is_introduced ;
var bool: aux19520_BOOL:: var_is_introduced ;
var bool: aux19521_BOOL:: var_is_introduced ;
var {0,1}: aux19521_INTEGER :: var_is_introduced ;
var 2..44: aux19522:: var_is_introduced ;
var bool: aux19523_BOOL:: var_is_introduced ;
var bool: aux19524_BOOL:: var_is_introduced ;
var bool: aux19525_BOOL:: var_is_introduced ;
var bool: aux19526_BOOL:: var_is_introduced ;
var bool: aux19527_BOOL:: var_is_introduced ;
var {0,1}: aux19527_INTEGER :: var_is_introduced ;
var 3..45: aux19528:: var_is_introduced ;
var bool: aux19529_BOOL:: var_is_introduced ;
var bool: aux19530_BOOL:: var_is_introduced ;
var bool: aux19531_BOOL:: var_is_introduced ;
var bool: aux19532_BOOL:: var_is_introduced ;
var bool: aux19533_BOOL:: var_is_introduced ;
var {0,1}: aux19533_INTEGER :: var_is_introduced ;
var 2..44: aux19534:: var_is_introduced ;
var bool: aux19535_BOOL:: var_is_introduced ;
var bool: aux19536_BOOL:: var_is_introduced ;
var bool: aux19537_BOOL:: var_is_introduced ;
var bool: aux19538_BOOL:: var_is_introduced ;
var bool: aux19539_BOOL:: var_is_introduced ;
var {0,1}: aux19539_INTEGER :: var_is_introduced ;
var 2..44: aux19540:: var_is_introduced ;
var bool: aux19541_BOOL:: var_is_introduced ;
var bool: aux19542_BOOL:: var_is_introduced ;
var bool: aux19543_BOOL:: var_is_introduced ;
var bool: aux19544_BOOL:: var_is_introduced ;
var bool: aux19545_BOOL:: var_is_introduced ;
var {0,1}: aux19545_INTEGER :: var_is_introduced ;
var 3..45: aux19546:: var_is_introduced ;
var bool: aux19547_BOOL:: var_is_introduced ;
var bool: aux19548_BOOL:: var_is_introduced ;
var bool: aux19549_BOOL:: var_is_introduced ;
var bool: aux19550_BOOL:: var_is_introduced ;
var bool: aux19551_BOOL:: var_is_introduced ;
var {0,1}: aux19551_INTEGER :: var_is_introduced ;
var 2..44: aux19552:: var_is_introduced ;
var bool: aux19553_BOOL:: var_is_introduced ;
var bool: aux19554_BOOL:: var_is_introduced ;
var bool: aux19555_BOOL:: var_is_introduced ;
var bool: aux19556_BOOL:: var_is_introduced ;
var bool: aux19557_BOOL:: var_is_introduced ;
var {0,1}: aux19557_INTEGER :: var_is_introduced ;
var 1..43: aux19558:: var_is_introduced ;
var bool: aux19559_BOOL:: var_is_introduced ;
var bool: aux19560_BOOL:: var_is_introduced ;
var bool: aux19561_BOOL:: var_is_introduced ;
var bool: aux19562_BOOL:: var_is_introduced ;
var bool: aux19563_BOOL:: var_is_introduced ;
var {0,1}: aux19563_INTEGER :: var_is_introduced ;
var 1..43: aux19564:: var_is_introduced ;
var bool: aux19565_BOOL:: var_is_introduced ;
var bool: aux19566_BOOL:: var_is_introduced ;
var bool: aux19567_BOOL:: var_is_introduced ;
var bool: aux19568_BOOL:: var_is_introduced ;
var bool: aux19569_BOOL:: var_is_introduced ;
var {0,1}: aux19569_INTEGER :: var_is_introduced ;
var 2..44: aux19570:: var_is_introduced ;
var bool: aux19571_BOOL:: var_is_introduced ;
var bool: aux19572_BOOL:: var_is_introduced ;
var bool: aux19573_BOOL:: var_is_introduced ;
var bool: aux19574_BOOL:: var_is_introduced ;
var bool: aux19575_BOOL:: var_is_introduced ;
var {0,1}: aux19575_INTEGER :: var_is_introduced ;
var 2..44: aux19576:: var_is_introduced ;
var bool: aux19577_BOOL:: var_is_introduced ;
var bool: aux19578_BOOL:: var_is_introduced ;
var bool: aux19579_BOOL:: var_is_introduced ;
var bool: aux19580_BOOL:: var_is_introduced ;
var bool: aux19581_BOOL:: var_is_introduced ;
var {0,1}: aux19581_INTEGER :: var_is_introduced ;
var 1..43: aux19582:: var_is_introduced ;
var bool: aux19583_BOOL:: var_is_introduced ;
var bool: aux19584_BOOL:: var_is_introduced ;
var bool: aux19585_BOOL:: var_is_introduced ;
var bool: aux19586_BOOL:: var_is_introduced ;
var bool: aux19587_BOOL:: var_is_introduced ;
var {0,1}: aux19587_INTEGER :: var_is_introduced ;
var 2..44: aux19588:: var_is_introduced ;
var bool: aux19589_BOOL:: var_is_introduced ;
var bool: aux19590_BOOL:: var_is_introduced ;
var bool: aux19591_BOOL:: var_is_introduced ;
var bool: aux19592_BOOL:: var_is_introduced ;
var bool: aux19593_BOOL:: var_is_introduced ;
var {0,1}: aux19593_INTEGER :: var_is_introduced ;
var 4..46: aux19594:: var_is_introduced ;
var bool: aux19595_BOOL:: var_is_introduced ;
var bool: aux19596_BOOL:: var_is_introduced ;
var bool: aux19597_BOOL:: var_is_introduced ;
var bool: aux19598_BOOL:: var_is_introduced ;
var bool: aux19599_BOOL:: var_is_introduced ;
var {0,1}: aux19599_INTEGER :: var_is_introduced ;
var 1..43: aux19600:: var_is_introduced ;
var bool: aux19601_BOOL:: var_is_introduced ;
var bool: aux19602_BOOL:: var_is_introduced ;
var bool: aux19603_BOOL:: var_is_introduced ;
var bool: aux19604_BOOL:: var_is_introduced ;
var bool: aux19605_BOOL:: var_is_introduced ;
var {0,1}: aux19605_INTEGER :: var_is_introduced ;
var 3..45: aux19606:: var_is_introduced ;
var bool: aux19607_BOOL:: var_is_introduced ;
var bool: aux19608_BOOL:: var_is_introduced ;
var bool: aux19609_BOOL:: var_is_introduced ;
var bool: aux19610_BOOL:: var_is_introduced ;
var bool: aux19611_BOOL:: var_is_introduced ;
var {0,1}: aux19611_INTEGER :: var_is_introduced ;
var 3..45: aux19612:: var_is_introduced ;
var bool: aux19613_BOOL:: var_is_introduced ;
var bool: aux19614_BOOL:: var_is_introduced ;
var bool: aux19615_BOOL:: var_is_introduced ;
var bool: aux19616_BOOL:: var_is_introduced ;
var bool: aux19617_BOOL:: var_is_introduced ;
var {0,1}: aux19617_INTEGER :: var_is_introduced ;
var 2..44: aux19618:: var_is_introduced ;
var bool: aux19619_BOOL:: var_is_introduced ;
var bool: aux19620_BOOL:: var_is_introduced ;
var bool: aux19621_BOOL:: var_is_introduced ;
var bool: aux19622_BOOL:: var_is_introduced ;
var bool: aux19623_BOOL:: var_is_introduced ;
var {0,1}: aux19623_INTEGER :: var_is_introduced ;
var 3..45: aux19624:: var_is_introduced ;
var bool: aux19625_BOOL:: var_is_introduced ;
var bool: aux19626_BOOL:: var_is_introduced ;
var bool: aux19627_BOOL:: var_is_introduced ;
var bool: aux19628_BOOL:: var_is_introduced ;
var bool: aux19629_BOOL:: var_is_introduced ;
var {0,1}: aux19629_INTEGER :: var_is_introduced ;
var bool: aux19630_BOOL:: var_is_introduced ;
var bool: aux19631_BOOL:: var_is_introduced ;
var bool: aux19632_BOOL:: var_is_introduced ;
var bool: aux19633_BOOL:: var_is_introduced ;
var bool: aux19634_BOOL:: var_is_introduced ;
var bool: aux19635_BOOL:: var_is_introduced ;
var bool: aux19636_BOOL:: var_is_introduced ;
var bool: aux19637_BOOL:: var_is_introduced ;
var bool: aux19638_BOOL:: var_is_introduced ;
var bool: aux19639_BOOL:: var_is_introduced ;
var bool: aux19640_BOOL:: var_is_introduced ;
var bool: aux19641_BOOL:: var_is_introduced ;
var bool: aux19642_BOOL:: var_is_introduced ;
var bool: aux19643_BOOL:: var_is_introduced ;
var bool: aux19644_BOOL:: var_is_introduced ;
var bool: aux19645_BOOL:: var_is_introduced ;
var bool: aux19646_BOOL:: var_is_introduced ;
var bool: aux19647_BOOL:: var_is_introduced ;
var bool: aux19648_BOOL:: var_is_introduced ;
var bool: aux19649_BOOL:: var_is_introduced ;
var bool: aux19650_BOOL:: var_is_introduced ;
var bool: aux19651_BOOL:: var_is_introduced ;
var bool: aux19652_BOOL:: var_is_introduced ;
var bool: aux19653_BOOL:: var_is_introduced ;
var bool: aux19654_BOOL:: var_is_introduced ;
var bool: aux19655_BOOL:: var_is_introduced ;
var bool: aux19656_BOOL:: var_is_introduced ;
var bool: aux19657_BOOL:: var_is_introduced ;
var bool: aux19658_BOOL:: var_is_introduced ;
var bool: aux19659_BOOL:: var_is_introduced ;
var bool: aux19660_BOOL:: var_is_introduced ;
var bool: aux19661_BOOL:: var_is_introduced ;
var bool: aux19662_BOOL:: var_is_introduced ;
var bool: aux19663_BOOL:: var_is_introduced ;
var 2..44: aux19664:: var_is_introduced ;
var bool: aux19665_BOOL:: var_is_introduced ;
var bool: aux19666_BOOL:: var_is_introduced ;
var bool: aux19667_BOOL:: var_is_introduced ;
var {0,1}: aux19667_INTEGER :: var_is_introduced ;
var 2..44: aux19668:: var_is_introduced ;
var bool: aux19669_BOOL:: var_is_introduced ;
var bool: aux19670_BOOL:: var_is_introduced ;
var bool: aux19671_BOOL:: var_is_introduced ;
var {0,1}: aux19671_INTEGER :: var_is_introduced ;
var 2..44: aux19672:: var_is_introduced ;
var bool: aux19673_BOOL:: var_is_introduced ;
var bool: aux19674_BOOL:: var_is_introduced ;
var bool: aux19675_BOOL:: var_is_introduced ;
var {0,1}: aux19675_INTEGER :: var_is_introduced ;
var 3..45: aux19676:: var_is_introduced ;
var bool: aux19677_BOOL:: var_is_introduced ;
var bool: aux19678_BOOL:: var_is_introduced ;
var bool: aux19679_BOOL:: var_is_introduced ;
var {0,1}: aux19679_INTEGER :: var_is_introduced ;
var 1..43: aux19680:: var_is_introduced ;
var bool: aux19681_BOOL:: var_is_introduced ;
var bool: aux19682_BOOL:: var_is_introduced ;
var bool: aux19683_BOOL:: var_is_introduced ;
var {0,1}: aux19683_INTEGER :: var_is_introduced ;
var 3..45: aux19684:: var_is_introduced ;
var bool: aux19685_BOOL:: var_is_introduced ;
var bool: aux19686_BOOL:: var_is_introduced ;
var bool: aux19687_BOOL:: var_is_introduced ;
var {0,1}: aux19687_INTEGER :: var_is_introduced ;
var 2..44: aux19688:: var_is_introduced ;
var bool: aux19689_BOOL:: var_is_introduced ;
var bool: aux19690_BOOL:: var_is_introduced ;
var bool: aux19691_BOOL:: var_is_introduced ;
var {0,1}: aux19691_INTEGER :: var_is_introduced ;
var 2..44: aux19692:: var_is_introduced ;
var bool: aux19693_BOOL:: var_is_introduced ;
var bool: aux19694_BOOL:: var_is_introduced ;
var bool: aux19695_BOOL:: var_is_introduced ;
var {0,1}: aux19695_INTEGER :: var_is_introduced ;
var 2..44: aux19696:: var_is_introduced ;
var bool: aux19697_BOOL:: var_is_introduced ;
var bool: aux19698_BOOL:: var_is_introduced ;
var bool: aux19699_BOOL:: var_is_introduced ;
var {0,1}: aux19699_INTEGER :: var_is_introduced ;
var 3..45: aux19700:: var_is_introduced ;
var bool: aux19701_BOOL:: var_is_introduced ;
var bool: aux19702_BOOL:: var_is_introduced ;
var bool: aux19703_BOOL:: var_is_introduced ;
var {0,1}: aux19703_INTEGER :: var_is_introduced ;
var 3..45: aux19704:: var_is_introduced ;
var bool: aux19705_BOOL:: var_is_introduced ;
var bool: aux19706_BOOL:: var_is_introduced ;
var bool: aux19707_BOOL:: var_is_introduced ;
var {0,1}: aux19707_INTEGER :: var_is_introduced ;
var 1..43: aux19708:: var_is_introduced ;
var bool: aux19709_BOOL:: var_is_introduced ;
var {0,1}: aux19709_INTEGER :: var_is_introduced ;
var 1..43: aux19710:: var_is_introduced ;
var bool: aux19711_BOOL:: var_is_introduced ;
var bool: aux19712_BOOL:: var_is_introduced ;
var bool: aux19713_BOOL:: var_is_introduced ;
var {0,1}: aux19713_INTEGER :: var_is_introduced ;
var 2..44: aux19714:: var_is_introduced ;
var bool: aux19715_BOOL:: var_is_introduced ;
var bool: aux19716_BOOL:: var_is_introduced ;
var bool: aux19717_BOOL:: var_is_introduced ;
var {0,1}: aux19717_INTEGER :: var_is_introduced ;
var 2..44: aux19718:: var_is_introduced ;
var bool: aux19719_BOOL:: var_is_introduced ;
var bool: aux19720_BOOL:: var_is_introduced ;
var bool: aux19721_BOOL:: var_is_introduced ;
var {0,1}: aux19721_INTEGER :: var_is_introduced ;
var 3..45: aux19722:: var_is_introduced ;
var bool: aux19723_BOOL:: var_is_introduced ;
var bool: aux19724_BOOL:: var_is_introduced ;
var bool: aux19725_BOOL:: var_is_introduced ;
var {0,1}: aux19725_INTEGER :: var_is_introduced ;
var 1..43: aux19726:: var_is_introduced ;
var bool: aux19727_BOOL:: var_is_introduced ;
var bool: aux19728_BOOL:: var_is_introduced ;
var bool: aux19729_BOOL:: var_is_introduced ;
var {0,1}: aux19729_INTEGER :: var_is_introduced ;
var 3..45: aux19730:: var_is_introduced ;
var bool: aux19731_BOOL:: var_is_introduced ;
var bool: aux19732_BOOL:: var_is_introduced ;
var bool: aux19733_BOOL:: var_is_introduced ;
var {0,1}: aux19733_INTEGER :: var_is_introduced ;
var 2..44: aux19734:: var_is_introduced ;
var bool: aux19735_BOOL:: var_is_introduced ;
var bool: aux19736_BOOL:: var_is_introduced ;
var bool: aux19737_BOOL:: var_is_introduced ;
var {0,1}: aux19737_INTEGER :: var_is_introduced ;
var 2..44: aux19738:: var_is_introduced ;
var bool: aux19739_BOOL:: var_is_introduced ;
var bool: aux19740_BOOL:: var_is_introduced ;
var bool: aux19741_BOOL:: var_is_introduced ;
var {0,1}: aux19741_INTEGER :: var_is_introduced ;
var 2..44: aux19742:: var_is_introduced ;
var bool: aux19743_BOOL:: var_is_introduced ;
var bool: aux19744_BOOL:: var_is_introduced ;
var bool: aux19745_BOOL:: var_is_introduced ;
var {0,1}: aux19745_INTEGER :: var_is_introduced ;
var 3..45: aux19746:: var_is_introduced ;
var bool: aux19747_BOOL:: var_is_introduced ;
var bool: aux19748_BOOL:: var_is_introduced ;
var bool: aux19749_BOOL:: var_is_introduced ;
var {0,1}: aux19749_INTEGER :: var_is_introduced ;
var 3..45: aux19750:: var_is_introduced ;
var bool: aux19751_BOOL:: var_is_introduced ;
var bool: aux19752_BOOL:: var_is_introduced ;
var bool: aux19753_BOOL:: var_is_introduced ;
var {0,1}: aux19753_INTEGER :: var_is_introduced ;
var 2..44: aux19754:: var_is_introduced ;
var bool: aux19755_BOOL:: var_is_introduced ;
var {0,1}: aux19755_INTEGER :: var_is_introduced ;
var 1..43: aux19756:: var_is_introduced ;
var bool: aux19757_BOOL:: var_is_introduced ;
var bool: aux19758_BOOL:: var_is_introduced ;
var bool: aux19759_BOOL:: var_is_introduced ;
var {0,1}: aux19759_INTEGER :: var_is_introduced ;
var 2..44: aux19760:: var_is_introduced ;
var bool: aux19761_BOOL:: var_is_introduced ;
var bool: aux19762_BOOL:: var_is_introduced ;
var bool: aux19763_BOOL:: var_is_introduced ;
var {0,1}: aux19763_INTEGER :: var_is_introduced ;
var 2..44: aux19764:: var_is_introduced ;
var bool: aux19765_BOOL:: var_is_introduced ;
var bool: aux19766_BOOL:: var_is_introduced ;
var bool: aux19767_BOOL:: var_is_introduced ;
var {0,1}: aux19767_INTEGER :: var_is_introduced ;
var 2..44: aux19768:: var_is_introduced ;
var bool: aux19769_BOOL:: var_is_introduced ;
var bool: aux19770_BOOL:: var_is_introduced ;
var bool: aux19771_BOOL:: var_is_introduced ;
var {0,1}: aux19771_INTEGER :: var_is_introduced ;
var 1..43: aux19772:: var_is_introduced ;
var bool: aux19773_BOOL:: var_is_introduced ;
var bool: aux19774_BOOL:: var_is_introduced ;
var bool: aux19775_BOOL:: var_is_introduced ;
var {0,1}: aux19775_INTEGER :: var_is_introduced ;
var 3..45: aux19776:: var_is_introduced ;
var bool: aux19777_BOOL:: var_is_introduced ;
var bool: aux19778_BOOL:: var_is_introduced ;
var bool: aux19779_BOOL:: var_is_introduced ;
var {0,1}: aux19779_INTEGER :: var_is_introduced ;
var 2..44: aux19780:: var_is_introduced ;
var bool: aux19781_BOOL:: var_is_introduced ;
var bool: aux19782_BOOL:: var_is_introduced ;
var bool: aux19783_BOOL:: var_is_introduced ;
var {0,1}: aux19783_INTEGER :: var_is_introduced ;
var 2..44: aux19784:: var_is_introduced ;
var bool: aux19785_BOOL:: var_is_introduced ;
var bool: aux19786_BOOL:: var_is_introduced ;
var bool: aux19787_BOOL:: var_is_introduced ;
var {0,1}: aux19787_INTEGER :: var_is_introduced ;
var 2..44: aux19788:: var_is_introduced ;
var bool: aux19789_BOOL:: var_is_introduced ;
var bool: aux19790_BOOL:: var_is_introduced ;
var bool: aux19791_BOOL:: var_is_introduced ;
var {0,1}: aux19791_INTEGER :: var_is_introduced ;
var 3..45: aux19792:: var_is_introduced ;
var bool: aux19793_BOOL:: var_is_introduced ;
var bool: aux19794_BOOL:: var_is_introduced ;
var bool: aux19795_BOOL:: var_is_introduced ;
var {0,1}: aux19795_INTEGER :: var_is_introduced ;
var 3..45: aux19796:: var_is_introduced ;
var bool: aux19797_BOOL:: var_is_introduced ;
var bool: aux19798_BOOL:: var_is_introduced ;
var bool: aux19799_BOOL:: var_is_introduced ;
var {0,1}: aux19799_INTEGER :: var_is_introduced ;
var 3..45: aux19800:: var_is_introduced ;
var bool: aux19801_BOOL:: var_is_introduced ;
var {0,1}: aux19801_INTEGER :: var_is_introduced ;
var 1..43: aux19802:: var_is_introduced ;
var bool: aux19803_BOOL:: var_is_introduced ;
var bool: aux19804_BOOL:: var_is_introduced ;
var bool: aux19805_BOOL:: var_is_introduced ;
var {0,1}: aux19805_INTEGER :: var_is_introduced ;
var 2..44: aux19806:: var_is_introduced ;
var bool: aux19807_BOOL:: var_is_introduced ;
var bool: aux19808_BOOL:: var_is_introduced ;
var bool: aux19809_BOOL:: var_is_introduced ;
var {0,1}: aux19809_INTEGER :: var_is_introduced ;
var 2..44: aux19810:: var_is_introduced ;
var bool: aux19811_BOOL:: var_is_introduced ;
var bool: aux19812_BOOL:: var_is_introduced ;
var bool: aux19813_BOOL:: var_is_introduced ;
var {0,1}: aux19813_INTEGER :: var_is_introduced ;
var 3..45: aux19814:: var_is_introduced ;
var bool: aux19815_BOOL:: var_is_introduced ;
var bool: aux19816_BOOL:: var_is_introduced ;
var bool: aux19817_BOOL:: var_is_introduced ;
var {0,1}: aux19817_INTEGER :: var_is_introduced ;
var 1..43: aux19818:: var_is_introduced ;
var bool: aux19819_BOOL:: var_is_introduced ;
var bool: aux19820_BOOL:: var_is_introduced ;
var bool: aux19821_BOOL:: var_is_introduced ;
var {0,1}: aux19821_INTEGER :: var_is_introduced ;
var 3..45: aux19822:: var_is_introduced ;
var bool: aux19823_BOOL:: var_is_introduced ;
var bool: aux19824_BOOL:: var_is_introduced ;
var bool: aux19825_BOOL:: var_is_introduced ;
var {0,1}: aux19825_INTEGER :: var_is_introduced ;
var 2..44: aux19826:: var_is_introduced ;
var bool: aux19827_BOOL:: var_is_introduced ;
var bool: aux19828_BOOL:: var_is_introduced ;
var bool: aux19829_BOOL:: var_is_introduced ;
var {0,1}: aux19829_INTEGER :: var_is_introduced ;
var 2..44: aux19830:: var_is_introduced ;
var bool: aux19831_BOOL:: var_is_introduced ;
var bool: aux19832_BOOL:: var_is_introduced ;
var bool: aux19833_BOOL:: var_is_introduced ;
var {0,1}: aux19833_INTEGER :: var_is_introduced ;
var 2..44: aux19834:: var_is_introduced ;
var bool: aux19835_BOOL:: var_is_introduced ;
var bool: aux19836_BOOL:: var_is_introduced ;
var bool: aux19837_BOOL:: var_is_introduced ;
var {0,1}: aux19837_INTEGER :: var_is_introduced ;
var 3..45: aux19838:: var_is_introduced ;
var bool: aux19839_BOOL:: var_is_introduced ;
var bool: aux19840_BOOL:: var_is_introduced ;
var bool: aux19841_BOOL:: var_is_introduced ;
var {0,1}: aux19841_INTEGER :: var_is_introduced ;
var 3..45: aux19842:: var_is_introduced ;
var bool: aux19843_BOOL:: var_is_introduced ;
var bool: aux19844_BOOL:: var_is_introduced ;
var bool: aux19845_BOOL:: var_is_introduced ;
var {0,1}: aux19845_INTEGER :: var_is_introduced ;
var 2..44: aux19846:: var_is_introduced ;
var bool: aux19847_BOOL:: var_is_introduced ;
var {0,1}: aux19847_INTEGER :: var_is_introduced ;
var 1..43: aux19848:: var_is_introduced ;
var bool: aux19849_BOOL:: var_is_introduced ;
var bool: aux19850_BOOL:: var_is_introduced ;
var bool: aux19851_BOOL:: var_is_introduced ;
var {0,1}: aux19851_INTEGER :: var_is_introduced ;
var 2..44: aux19852:: var_is_introduced ;
var bool: aux19853_BOOL:: var_is_introduced ;
var bool: aux19854_BOOL:: var_is_introduced ;
var bool: aux19855_BOOL:: var_is_introduced ;
var {0,1}: aux19855_INTEGER :: var_is_introduced ;
var 2..44: aux19856:: var_is_introduced ;
var bool: aux19857_BOOL:: var_is_introduced ;
var bool: aux19858_BOOL:: var_is_introduced ;
var bool: aux19859_BOOL:: var_is_introduced ;
var {0,1}: aux19859_INTEGER :: var_is_introduced ;
var 2..44: aux19860:: var_is_introduced ;
var bool: aux19861_BOOL:: var_is_introduced ;
var bool: aux19862_BOOL:: var_is_introduced ;
var bool: aux19863_BOOL:: var_is_introduced ;
var {0,1}: aux19863_INTEGER :: var_is_introduced ;
var 3..45: aux19864:: var_is_introduced ;
var bool: aux19865_BOOL:: var_is_introduced ;
var bool: aux19866_BOOL:: var_is_introduced ;
var bool: aux19867_BOOL:: var_is_introduced ;
var {0,1}: aux19867_INTEGER :: var_is_introduced ;
var 1..43: aux19868:: var_is_introduced ;
var bool: aux19869_BOOL:: var_is_introduced ;
var bool: aux19870_BOOL:: var_is_introduced ;
var bool: aux19871_BOOL:: var_is_introduced ;
var {0,1}: aux19871_INTEGER :: var_is_introduced ;
var 2..44: aux19872:: var_is_introduced ;
var bool: aux19873_BOOL:: var_is_introduced ;
var bool: aux19874_BOOL:: var_is_introduced ;
var bool: aux19875_BOOL:: var_is_introduced ;
var {0,1}: aux19875_INTEGER :: var_is_introduced ;
var 2..44: aux19876:: var_is_introduced ;
var bool: aux19877_BOOL:: var_is_introduced ;
var bool: aux19878_BOOL:: var_is_introduced ;
var bool: aux19879_BOOL:: var_is_introduced ;
var {0,1}: aux19879_INTEGER :: var_is_introduced ;
var 2..44: aux19880:: var_is_introduced ;
var bool: aux19881_BOOL:: var_is_introduced ;
var bool: aux19882_BOOL:: var_is_introduced ;
var bool: aux19883_BOOL:: var_is_introduced ;
var {0,1}: aux19883_INTEGER :: var_is_introduced ;
var 3..45: aux19884:: var_is_introduced ;
var bool: aux19885_BOOL:: var_is_introduced ;
var bool: aux19886_BOOL:: var_is_introduced ;
var bool: aux19887_BOOL:: var_is_introduced ;
var {0,1}: aux19887_INTEGER :: var_is_introduced ;
var 3..45: aux19888:: var_is_introduced ;
var bool: aux19889_BOOL:: var_is_introduced ;
var bool: aux19890_BOOL:: var_is_introduced ;
var bool: aux19891_BOOL:: var_is_introduced ;
var {0,1}: aux19891_INTEGER :: var_is_introduced ;
var 3..45: aux19892:: var_is_introduced ;
var bool: aux19893_BOOL:: var_is_introduced ;
var {0,1}: aux19893_INTEGER :: var_is_introduced ;
var 1..43: aux19894:: var_is_introduced ;
var bool: aux19895_BOOL:: var_is_introduced ;
var bool: aux19896_BOOL:: var_is_introduced ;
var bool: aux19897_BOOL:: var_is_introduced ;
var {0,1}: aux19897_INTEGER :: var_is_introduced ;
var 2..44: aux19898:: var_is_introduced ;
var bool: aux19899_BOOL:: var_is_introduced ;
var bool: aux19900_BOOL:: var_is_introduced ;
var bool: aux19901_BOOL:: var_is_introduced ;
var {0,1}: aux19901_INTEGER :: var_is_introduced ;
var 2..44: aux19902:: var_is_introduced ;
var bool: aux19903_BOOL:: var_is_introduced ;
var bool: aux19904_BOOL:: var_is_introduced ;
var bool: aux19905_BOOL:: var_is_introduced ;
var {0,1}: aux19905_INTEGER :: var_is_introduced ;
var 3..45: aux19906:: var_is_introduced ;
var bool: aux19907_BOOL:: var_is_introduced ;
var bool: aux19908_BOOL:: var_is_introduced ;
var bool: aux19909_BOOL:: var_is_introduced ;
var {0,1}: aux19909_INTEGER :: var_is_introduced ;
var 1..43: aux19910:: var_is_introduced ;
var bool: aux19911_BOOL:: var_is_introduced ;
var bool: aux19912_BOOL:: var_is_introduced ;
var bool: aux19913_BOOL:: var_is_introduced ;
var {0,1}: aux19913_INTEGER :: var_is_introduced ;
var 3..45: aux19914:: var_is_introduced ;
var bool: aux19915_BOOL:: var_is_introduced ;
var bool: aux19916_BOOL:: var_is_introduced ;
var bool: aux19917_BOOL:: var_is_introduced ;
var {0,1}: aux19917_INTEGER :: var_is_introduced ;
var 2..44: aux19918:: var_is_introduced ;
var bool: aux19919_BOOL:: var_is_introduced ;
var bool: aux19920_BOOL:: var_is_introduced ;
var bool: aux19921_BOOL:: var_is_introduced ;
var {0,1}: aux19921_INTEGER :: var_is_introduced ;
var 2..44: aux19922:: var_is_introduced ;
var bool: aux19923_BOOL:: var_is_introduced ;
var bool: aux19924_BOOL:: var_is_introduced ;
var bool: aux19925_BOOL:: var_is_introduced ;
var {0,1}: aux19925_INTEGER :: var_is_introduced ;
var 2..44: aux19926:: var_is_introduced ;
var bool: aux19927_BOOL:: var_is_introduced ;
var bool: aux19928_BOOL:: var_is_introduced ;
var bool: aux19929_BOOL:: var_is_introduced ;
var {0,1}: aux19929_INTEGER :: var_is_introduced ;
var 3..45: aux19930:: var_is_introduced ;
var bool: aux19931_BOOL:: var_is_introduced ;
var bool: aux19932_BOOL:: var_is_introduced ;
var bool: aux19933_BOOL:: var_is_introduced ;
var {0,1}: aux19933_INTEGER :: var_is_introduced ;
var 3..45: aux19934:: var_is_introduced ;
var bool: aux19935_BOOL:: var_is_introduced ;
var bool: aux19936_BOOL:: var_is_introduced ;
var bool: aux19937_BOOL:: var_is_introduced ;
var {0,1}: aux19937_INTEGER :: var_is_introduced ;
var 2..44: aux19938:: var_is_introduced ;
var bool: aux19939_BOOL:: var_is_introduced ;
var {0,1}: aux19939_INTEGER :: var_is_introduced ;
var 1..43: aux19940:: var_is_introduced ;
var bool: aux19941_BOOL:: var_is_introduced ;
var bool: aux19942_BOOL:: var_is_introduced ;
var bool: aux19943_BOOL:: var_is_introduced ;
var {0,1}: aux19943_INTEGER :: var_is_introduced ;
var 2..44: aux19944:: var_is_introduced ;
var bool: aux19945_BOOL:: var_is_introduced ;
var bool: aux19946_BOOL:: var_is_introduced ;
var bool: aux19947_BOOL:: var_is_introduced ;
var {0,1}: aux19947_INTEGER :: var_is_introduced ;
var 2..44: aux19948:: var_is_introduced ;
var bool: aux19949_BOOL:: var_is_introduced ;
var bool: aux19950_BOOL:: var_is_introduced ;
var bool: aux19951_BOOL:: var_is_introduced ;
var {0,1}: aux19951_INTEGER :: var_is_introduced ;
var 2..44: aux19952:: var_is_introduced ;
var bool: aux19953_BOOL:: var_is_introduced ;
var bool: aux19954_BOOL:: var_is_introduced ;
var bool: aux19955_BOOL:: var_is_introduced ;
var {0,1}: aux19955_INTEGER :: var_is_introduced ;
var 3..45: aux19956:: var_is_introduced ;
var bool: aux19957_BOOL:: var_is_introduced ;
var bool: aux19958_BOOL:: var_is_introduced ;
var bool: aux19959_BOOL:: var_is_introduced ;
var {0,1}: aux19959_INTEGER :: var_is_introduced ;
var 1..43: aux19960:: var_is_introduced ;
var bool: aux19961_BOOL:: var_is_introduced ;
var bool: aux19962_BOOL:: var_is_introduced ;
var bool: aux19963_BOOL:: var_is_introduced ;
var {0,1}: aux19963_INTEGER :: var_is_introduced ;
var 3..45: aux19964:: var_is_introduced ;
var bool: aux19965_BOOL:: var_is_introduced ;
var bool: aux19966_BOOL:: var_is_introduced ;
var bool: aux19967_BOOL:: var_is_introduced ;
var {0,1}: aux19967_INTEGER :: var_is_introduced ;
var 2..44: aux19968:: var_is_introduced ;
var bool: aux19969_BOOL:: var_is_introduced ;
var bool: aux19970_BOOL:: var_is_introduced ;
var bool: aux19971_BOOL:: var_is_introduced ;
var {0,1}: aux19971_INTEGER :: var_is_introduced ;
var 2..44: aux19972:: var_is_introduced ;
var bool: aux19973_BOOL:: var_is_introduced ;
var bool: aux19974_BOOL:: var_is_introduced ;
var bool: aux19975_BOOL:: var_is_introduced ;
var {0,1}: aux19975_INTEGER :: var_is_introduced ;
var 3..45: aux19976:: var_is_introduced ;
var bool: aux19977_BOOL:: var_is_introduced ;
var bool: aux19978_BOOL:: var_is_introduced ;
var bool: aux19979_BOOL:: var_is_introduced ;
var {0,1}: aux19979_INTEGER :: var_is_introduced ;
var 3..45: aux19980:: var_is_introduced ;
var bool: aux19981_BOOL:: var_is_introduced ;
var bool: aux19982_BOOL:: var_is_introduced ;
var bool: aux19983_BOOL:: var_is_introduced ;
var {0,1}: aux19983_INTEGER :: var_is_introduced ;
var 2..44: aux19984:: var_is_introduced ;
var bool: aux19985_BOOL:: var_is_introduced ;
var {0,1}: aux19985_INTEGER :: var_is_introduced ;
var 1..43: aux19986:: var_is_introduced ;
var bool: aux19987_BOOL:: var_is_introduced ;
var bool: aux19988_BOOL:: var_is_introduced ;
var bool: aux19989_BOOL:: var_is_introduced ;
var {0,1}: aux19989_INTEGER :: var_is_introduced ;
var 2..44: aux19990:: var_is_introduced ;
var bool: aux19991_BOOL:: var_is_introduced ;
var bool: aux19992_BOOL:: var_is_introduced ;
var bool: aux19993_BOOL:: var_is_introduced ;
var {0,1}: aux19993_INTEGER :: var_is_introduced ;
var 2..44: aux19994:: var_is_introduced ;
var bool: aux19995_BOOL:: var_is_introduced ;
var bool: aux19996_BOOL:: var_is_introduced ;
var bool: aux19997_BOOL:: var_is_introduced ;
var {0,1}: aux19997_INTEGER :: var_is_introduced ;
var 2..44: aux19998:: var_is_introduced ;
var bool: aux19999_BOOL:: var_is_introduced ;
var bool: aux20000_BOOL:: var_is_introduced ;
var bool: aux20001_BOOL:: var_is_introduced ;
var {0,1}: aux20001_INTEGER :: var_is_introduced ;
var 3..45: aux20002:: var_is_introduced ;
var bool: aux20003_BOOL:: var_is_introduced ;
var bool: aux20004_BOOL:: var_is_introduced ;
var bool: aux20005_BOOL:: var_is_introduced ;
var {0,1}: aux20005_INTEGER :: var_is_introduced ;
var 3..45: aux20006:: var_is_introduced ;
var bool: aux20007_BOOL:: var_is_introduced ;
var bool: aux20008_BOOL:: var_is_introduced ;
var bool: aux20009_BOOL:: var_is_introduced ;
var {0,1}: aux20009_INTEGER :: var_is_introduced ;
var 2..44: aux20010:: var_is_introduced ;
var bool: aux20011_BOOL:: var_is_introduced ;
var bool: aux20012_BOOL:: var_is_introduced ;
var bool: aux20013_BOOL:: var_is_introduced ;
var {0,1}: aux20013_INTEGER :: var_is_introduced ;
var 2..44: aux20014:: var_is_introduced ;
var bool: aux20015_BOOL:: var_is_introduced ;
var bool: aux20016_BOOL:: var_is_introduced ;
var bool: aux20017_BOOL:: var_is_introduced ;
var {0,1}: aux20017_INTEGER :: var_is_introduced ;
var 2..44: aux20018:: var_is_introduced ;
var bool: aux20019_BOOL:: var_is_introduced ;
var bool: aux20020_BOOL:: var_is_introduced ;
var bool: aux20021_BOOL:: var_is_introduced ;
var {0,1}: aux20021_INTEGER :: var_is_introduced ;
var 3..45: aux20022:: var_is_introduced ;
var bool: aux20023_BOOL:: var_is_introduced ;
var bool: aux20024_BOOL:: var_is_introduced ;
var bool: aux20025_BOOL:: var_is_introduced ;
var {0,1}: aux20025_INTEGER :: var_is_introduced ;
var 3..45: aux20026:: var_is_introduced ;
var bool: aux20027_BOOL:: var_is_introduced ;
var bool: aux20028_BOOL:: var_is_introduced ;
var bool: aux20029_BOOL:: var_is_introduced ;
var {0,1}: aux20029_INTEGER :: var_is_introduced ;
var 1..43: aux20030:: var_is_introduced ;
var bool: aux20031_BOOL:: var_is_introduced ;
var {0,1}: aux20031_INTEGER :: var_is_introduced ;
var 1..43: aux20032:: var_is_introduced ;
var bool: aux20033_BOOL:: var_is_introduced ;
var bool: aux20034_BOOL:: var_is_introduced ;
var bool: aux20035_BOOL:: var_is_introduced ;
var {0,1}: aux20035_INTEGER :: var_is_introduced ;
var 2..44: aux20036:: var_is_introduced ;
var bool: aux20037_BOOL:: var_is_introduced ;
var bool: aux20038_BOOL:: var_is_introduced ;
var bool: aux20039_BOOL:: var_is_introduced ;
var {0,1}: aux20039_INTEGER :: var_is_introduced ;
var 2..44: aux20040:: var_is_introduced ;
var bool: aux20041_BOOL:: var_is_introduced ;
var bool: aux20042_BOOL:: var_is_introduced ;
var bool: aux20043_BOOL:: var_is_introduced ;
var {0,1}: aux20043_INTEGER :: var_is_introduced ;
var 2..44: aux20044:: var_is_introduced ;
var bool: aux20045_BOOL:: var_is_introduced ;
var bool: aux20046_BOOL:: var_is_introduced ;
var bool: aux20047_BOOL:: var_is_introduced ;
var {0,1}: aux20047_INTEGER :: var_is_introduced ;
var 3..45: aux20048:: var_is_introduced ;
var bool: aux20049_BOOL:: var_is_introduced ;
var bool: aux20050_BOOL:: var_is_introduced ;
var bool: aux20051_BOOL:: var_is_introduced ;
var {0,1}: aux20051_INTEGER :: var_is_introduced ;
var 1..43: aux20052:: var_is_introduced ;
var bool: aux20053_BOOL:: var_is_introduced ;
var bool: aux20054_BOOL:: var_is_introduced ;
var bool: aux20055_BOOL:: var_is_introduced ;
var {0,1}: aux20055_INTEGER :: var_is_introduced ;
var 3..45: aux20056:: var_is_introduced ;
var bool: aux20057_BOOL:: var_is_introduced ;
var bool: aux20058_BOOL:: var_is_introduced ;
var bool: aux20059_BOOL:: var_is_introduced ;
var {0,1}: aux20059_INTEGER :: var_is_introduced ;
var 2..44: aux20060:: var_is_introduced ;
var bool: aux20061_BOOL:: var_is_introduced ;
var bool: aux20062_BOOL:: var_is_introduced ;
var bool: aux20063_BOOL:: var_is_introduced ;
var {0,1}: aux20063_INTEGER :: var_is_introduced ;
var 2..44: aux20064:: var_is_introduced ;
var bool: aux20065_BOOL:: var_is_introduced ;
var bool: aux20066_BOOL:: var_is_introduced ;
var bool: aux20067_BOOL:: var_is_introduced ;
var {0,1}: aux20067_INTEGER :: var_is_introduced ;
var 3..45: aux20068:: var_is_introduced ;
var bool: aux20069_BOOL:: var_is_introduced ;
var bool: aux20070_BOOL:: var_is_introduced ;
var bool: aux20071_BOOL:: var_is_introduced ;
var {0,1}: aux20071_INTEGER :: var_is_introduced ;
var 3..45: aux20072:: var_is_introduced ;
var bool: aux20073_BOOL:: var_is_introduced ;
var bool: aux20074_BOOL:: var_is_introduced ;
var bool: aux20075_BOOL:: var_is_introduced ;
var {0,1}: aux20075_INTEGER :: var_is_introduced ;
var 2..44: aux20076:: var_is_introduced ;
var bool: aux20077_BOOL:: var_is_introduced ;
var {0,1}: aux20077_INTEGER :: var_is_introduced ;
var 1..43: aux20078:: var_is_introduced ;
var bool: aux20079_BOOL:: var_is_introduced ;
var bool: aux20080_BOOL:: var_is_introduced ;
var bool: aux20081_BOOL:: var_is_introduced ;
var {0,1}: aux20081_INTEGER :: var_is_introduced ;
var 2..44: aux20082:: var_is_introduced ;
var bool: aux20083_BOOL:: var_is_introduced ;
var bool: aux20084_BOOL:: var_is_introduced ;
var bool: aux20085_BOOL:: var_is_introduced ;
var {0,1}: aux20085_INTEGER :: var_is_introduced ;
var 2..44: aux20086:: var_is_introduced ;
var bool: aux20087_BOOL:: var_is_introduced ;
var bool: aux20088_BOOL:: var_is_introduced ;
var bool: aux20089_BOOL:: var_is_introduced ;
var {0,1}: aux20089_INTEGER :: var_is_introduced ;
var 2..44: aux20090:: var_is_introduced ;
var bool: aux20091_BOOL:: var_is_introduced ;
var bool: aux20092_BOOL:: var_is_introduced ;
var bool: aux20093_BOOL:: var_is_introduced ;
var {0,1}: aux20093_INTEGER :: var_is_introduced ;
var 3..45: aux20094:: var_is_introduced ;
var bool: aux20095_BOOL:: var_is_introduced ;
var bool: aux20096_BOOL:: var_is_introduced ;
var bool: aux20097_BOOL:: var_is_introduced ;
var {0,1}: aux20097_INTEGER :: var_is_introduced ;
var 1..43: aux20098:: var_is_introduced ;
var bool: aux20099_BOOL:: var_is_introduced ;
var bool: aux20100_BOOL:: var_is_introduced ;
var bool: aux20101_BOOL:: var_is_introduced ;
var {0,1}: aux20101_INTEGER :: var_is_introduced ;
var 3..45: aux20102:: var_is_introduced ;
var bool: aux20103_BOOL:: var_is_introduced ;
var bool: aux20104_BOOL:: var_is_introduced ;
var bool: aux20105_BOOL:: var_is_introduced ;
var {0,1}: aux20105_INTEGER :: var_is_introduced ;
var 2..44: aux20106:: var_is_introduced ;
var bool: aux20107_BOOL:: var_is_introduced ;
var bool: aux20108_BOOL:: var_is_introduced ;
var bool: aux20109_BOOL:: var_is_introduced ;
var {0,1}: aux20109_INTEGER :: var_is_introduced ;
var 2..44: aux20110:: var_is_introduced ;
var bool: aux20111_BOOL:: var_is_introduced ;
var bool: aux20112_BOOL:: var_is_introduced ;
var bool: aux20113_BOOL:: var_is_introduced ;
var {0,1}: aux20113_INTEGER :: var_is_introduced ;
var 2..44: aux20114:: var_is_introduced ;
var bool: aux20115_BOOL:: var_is_introduced ;
var bool: aux20116_BOOL:: var_is_introduced ;
var bool: aux20117_BOOL:: var_is_introduced ;
var {0,1}: aux20117_INTEGER :: var_is_introduced ;
var 3..45: aux20118:: var_is_introduced ;
var bool: aux20119_BOOL:: var_is_introduced ;
var bool: aux20120_BOOL:: var_is_introduced ;
var bool: aux20121_BOOL:: var_is_introduced ;
var {0,1}: aux20121_INTEGER :: var_is_introduced ;
var 3..45: aux20122:: var_is_introduced ;
var bool: aux20123_BOOL:: var_is_introduced ;
var {0,1}: aux20123_INTEGER :: var_is_introduced ;
var 1..43: aux20124:: var_is_introduced ;
var bool: aux20125_BOOL:: var_is_introduced ;
var bool: aux20126_BOOL:: var_is_introduced ;
var bool: aux20127_BOOL:: var_is_introduced ;
var {0,1}: aux20127_INTEGER :: var_is_introduced ;
var 2..44: aux20128:: var_is_introduced ;
var bool: aux20129_BOOL:: var_is_introduced ;
var bool: aux20130_BOOL:: var_is_introduced ;
var bool: aux20131_BOOL:: var_is_introduced ;
var {0,1}: aux20131_INTEGER :: var_is_introduced ;
var 2..44: aux20132:: var_is_introduced ;
var bool: aux20133_BOOL:: var_is_introduced ;
var bool: aux20134_BOOL:: var_is_introduced ;
var bool: aux20135_BOOL:: var_is_introduced ;
var {0,1}: aux20135_INTEGER :: var_is_introduced ;
var 2..44: aux20136:: var_is_introduced ;
var bool: aux20137_BOOL:: var_is_introduced ;
var bool: aux20138_BOOL:: var_is_introduced ;
var bool: aux20139_BOOL:: var_is_introduced ;
var {0,1}: aux20139_INTEGER :: var_is_introduced ;
var 3..45: aux20140:: var_is_introduced ;
var bool: aux20141_BOOL:: var_is_introduced ;
var bool: aux20142_BOOL:: var_is_introduced ;
var bool: aux20143_BOOL:: var_is_introduced ;
var {0,1}: aux20143_INTEGER :: var_is_introduced ;
var 1..43: aux20144:: var_is_introduced ;
var bool: aux20145_BOOL:: var_is_introduced ;
var bool: aux20146_BOOL:: var_is_introduced ;
var bool: aux20147_BOOL:: var_is_introduced ;
var {0,1}: aux20147_INTEGER :: var_is_introduced ;
var 3..45: aux20148:: var_is_introduced ;
var bool: aux20149_BOOL:: var_is_introduced ;
var bool: aux20150_BOOL:: var_is_introduced ;
var bool: aux20151_BOOL:: var_is_introduced ;
var {0,1}: aux20151_INTEGER :: var_is_introduced ;
var 2..44: aux20152:: var_is_introduced ;
var bool: aux20153_BOOL:: var_is_introduced ;
var bool: aux20154_BOOL:: var_is_introduced ;
var bool: aux20155_BOOL:: var_is_introduced ;
var {0,1}: aux20155_INTEGER :: var_is_introduced ;
var 2..44: aux20156:: var_is_introduced ;
var bool: aux20157_BOOL:: var_is_introduced ;
var bool: aux20158_BOOL:: var_is_introduced ;
var bool: aux20159_BOOL:: var_is_introduced ;
var {0,1}: aux20159_INTEGER :: var_is_introduced ;
var 2..44: aux20160:: var_is_introduced ;
var bool: aux20161_BOOL:: var_is_introduced ;
var bool: aux20162_BOOL:: var_is_introduced ;
var bool: aux20163_BOOL:: var_is_introduced ;
var {0,1}: aux20163_INTEGER :: var_is_introduced ;
var 3..45: aux20164:: var_is_introduced ;
var bool: aux20165_BOOL:: var_is_introduced ;
var bool: aux20166_BOOL:: var_is_introduced ;
var bool: aux20167_BOOL:: var_is_introduced ;
var {0,1}: aux20167_INTEGER :: var_is_introduced ;
var 3..45: aux20168:: var_is_introduced ;
var bool: aux20169_BOOL:: var_is_introduced ;
var {0,1}: aux20169_INTEGER :: var_is_introduced ;
var 1..43: aux20170:: var_is_introduced ;
var bool: aux20171_BOOL:: var_is_introduced ;
var bool: aux20172_BOOL:: var_is_introduced ;
var bool: aux20173_BOOL:: var_is_introduced ;
var {0,1}: aux20173_INTEGER :: var_is_introduced ;
var 2..44: aux20174:: var_is_introduced ;
var bool: aux20175_BOOL:: var_is_introduced ;
var bool: aux20176_BOOL:: var_is_introduced ;
var bool: aux20177_BOOL:: var_is_introduced ;
var {0,1}: aux20177_INTEGER :: var_is_introduced ;
var 2..44: aux20178:: var_is_introduced ;
var bool: aux20179_BOOL:: var_is_introduced ;
var bool: aux20180_BOOL:: var_is_introduced ;
var bool: aux20181_BOOL:: var_is_introduced ;
var {0,1}: aux20181_INTEGER :: var_is_introduced ;
var 2..44: aux20182:: var_is_introduced ;
var bool: aux20183_BOOL:: var_is_introduced ;
var bool: aux20184_BOOL:: var_is_introduced ;
var bool: aux20185_BOOL:: var_is_introduced ;
var {0,1}: aux20185_INTEGER :: var_is_introduced ;
var 3..45: aux20186:: var_is_introduced ;
var bool: aux20187_BOOL:: var_is_introduced ;
var bool: aux20188_BOOL:: var_is_introduced ;
var bool: aux20189_BOOL:: var_is_introduced ;
var {0,1}: aux20189_INTEGER :: var_is_introduced ;
var 1..43: aux20190:: var_is_introduced ;
var bool: aux20191_BOOL:: var_is_introduced ;
var bool: aux20192_BOOL:: var_is_introduced ;
var bool: aux20193_BOOL:: var_is_introduced ;
var {0,1}: aux20193_INTEGER :: var_is_introduced ;
var 3..45: aux20194:: var_is_introduced ;
var bool: aux20195_BOOL:: var_is_introduced ;
var bool: aux20196_BOOL:: var_is_introduced ;
var bool: aux20197_BOOL:: var_is_introduced ;
var {0,1}: aux20197_INTEGER :: var_is_introduced ;
var 2..44: aux20198:: var_is_introduced ;
var bool: aux20199_BOOL:: var_is_introduced ;
var bool: aux20200_BOOL:: var_is_introduced ;
var bool: aux20201_BOOL:: var_is_introduced ;
var {0,1}: aux20201_INTEGER :: var_is_introduced ;
var 2..44: aux20202:: var_is_introduced ;
var bool: aux20203_BOOL:: var_is_introduced ;
var bool: aux20204_BOOL:: var_is_introduced ;
var bool: aux20205_BOOL:: var_is_introduced ;
var {0,1}: aux20205_INTEGER :: var_is_introduced ;
var 3..45: aux20206:: var_is_introduced ;
var bool: aux20207_BOOL:: var_is_introduced ;
var bool: aux20208_BOOL:: var_is_introduced ;
var bool: aux20209_BOOL:: var_is_introduced ;
var {0,1}: aux20209_INTEGER :: var_is_introduced ;
var 3..45: aux20210:: var_is_introduced ;
var bool: aux20211_BOOL:: var_is_introduced ;
var bool: aux20212_BOOL:: var_is_introduced ;
var bool: aux20213_BOOL:: var_is_introduced ;
var {0,1}: aux20213_INTEGER :: var_is_introduced ;
var 2..44: aux20214:: var_is_introduced ;
var bool: aux20215_BOOL:: var_is_introduced ;
var {0,1}: aux20215_INTEGER :: var_is_introduced ;
var 1..43: aux20216:: var_is_introduced ;
var bool: aux20217_BOOL:: var_is_introduced ;
var bool: aux20218_BOOL:: var_is_introduced ;
var bool: aux20219_BOOL:: var_is_introduced ;
var {0,1}: aux20219_INTEGER :: var_is_introduced ;
var 2..44: aux20220:: var_is_introduced ;
var bool: aux20221_BOOL:: var_is_introduced ;
var bool: aux20222_BOOL:: var_is_introduced ;
var bool: aux20223_BOOL:: var_is_introduced ;
var {0,1}: aux20223_INTEGER :: var_is_introduced ;
var 2..44: aux20224:: var_is_introduced ;
var bool: aux20225_BOOL:: var_is_introduced ;
var bool: aux20226_BOOL:: var_is_introduced ;
var bool: aux20227_BOOL:: var_is_introduced ;
var {0,1}: aux20227_INTEGER :: var_is_introduced ;
var 2..44: aux20228:: var_is_introduced ;
var bool: aux20229_BOOL:: var_is_introduced ;
var bool: aux20230_BOOL:: var_is_introduced ;
var bool: aux20231_BOOL:: var_is_introduced ;
var {0,1}: aux20231_INTEGER :: var_is_introduced ;
var 2..44: aux20232:: var_is_introduced ;
var bool: aux20233_BOOL:: var_is_introduced ;
var bool: aux20234_BOOL:: var_is_introduced ;
var bool: aux20235_BOOL:: var_is_introduced ;
var {0,1}: aux20235_INTEGER :: var_is_introduced ;
var 1..43: aux20236:: var_is_introduced ;
var bool: aux20237_BOOL:: var_is_introduced ;
var bool: aux20238_BOOL:: var_is_introduced ;
var bool: aux20239_BOOL:: var_is_introduced ;
var {0,1}: aux20239_INTEGER :: var_is_introduced ;
var 3..45: aux20240:: var_is_introduced ;
var bool: aux20241_BOOL:: var_is_introduced ;
var bool: aux20242_BOOL:: var_is_introduced ;
var bool: aux20243_BOOL:: var_is_introduced ;
var {0,1}: aux20243_INTEGER :: var_is_introduced ;
var 1..43: aux20244:: var_is_introduced ;
var bool: aux20245_BOOL:: var_is_introduced ;
var bool: aux20246_BOOL:: var_is_introduced ;
var bool: aux20247_BOOL:: var_is_introduced ;
var {0,1}: aux20247_INTEGER :: var_is_introduced ;
var 2..44: aux20248:: var_is_introduced ;
var bool: aux20249_BOOL:: var_is_introduced ;
var bool: aux20250_BOOL:: var_is_introduced ;
var bool: aux20251_BOOL:: var_is_introduced ;
var {0,1}: aux20251_INTEGER :: var_is_introduced ;
var 2..44: aux20252:: var_is_introduced ;
var bool: aux20253_BOOL:: var_is_introduced ;
var bool: aux20254_BOOL:: var_is_introduced ;
var bool: aux20255_BOOL:: var_is_introduced ;
var {0,1}: aux20255_INTEGER :: var_is_introduced ;
var 3..45: aux20256:: var_is_introduced ;
var bool: aux20257_BOOL:: var_is_introduced ;
var bool: aux20258_BOOL:: var_is_introduced ;
var bool: aux20259_BOOL:: var_is_introduced ;
var {0,1}: aux20259_INTEGER :: var_is_introduced ;
var 3..45: aux20260:: var_is_introduced ;
var bool: aux20261_BOOL:: var_is_introduced ;
var bool: aux20262_BOOL:: var_is_introduced ;
var bool: aux20263_BOOL:: var_is_introduced ;
var {0,1}: aux20263_INTEGER :: var_is_introduced ;
var 1..43: aux20264:: var_is_introduced ;
var bool: aux20265_BOOL:: var_is_introduced ;
var {0,1}: aux20265_INTEGER :: var_is_introduced ;
var 1..43: aux20266:: var_is_introduced ;
var bool: aux20267_BOOL:: var_is_introduced ;
var bool: aux20268_BOOL:: var_is_introduced ;
var bool: aux20269_BOOL:: var_is_introduced ;
var {0,1}: aux20269_INTEGER :: var_is_introduced ;
var 1..43: aux20270:: var_is_introduced ;
var bool: aux20271_BOOL:: var_is_introduced ;
var bool: aux20272_BOOL:: var_is_introduced ;
var bool: aux20273_BOOL:: var_is_introduced ;
var {0,1}: aux20273_INTEGER :: var_is_introduced ;
var 2..44: aux20274:: var_is_introduced ;
var bool: aux20275_BOOL:: var_is_introduced ;
var bool: aux20276_BOOL:: var_is_introduced ;
var bool: aux20277_BOOL:: var_is_introduced ;
var {0,1}: aux20277_INTEGER :: var_is_introduced ;
var 2..44: aux20278:: var_is_introduced ;
var bool: aux20279_BOOL:: var_is_introduced ;
var bool: aux20280_BOOL:: var_is_introduced ;
var bool: aux20281_BOOL:: var_is_introduced ;
var {0,1}: aux20281_INTEGER :: var_is_introduced ;
var 2..44: aux20282:: var_is_introduced ;
var bool: aux20283_BOOL:: var_is_introduced ;
var bool: aux20284_BOOL:: var_is_introduced ;
var bool: aux20285_BOOL:: var_is_introduced ;
var {0,1}: aux20285_INTEGER :: var_is_introduced ;
var 2..44: aux20286:: var_is_introduced ;
var bool: aux20287_BOOL:: var_is_introduced ;
var bool: aux20288_BOOL:: var_is_introduced ;
var bool: aux20289_BOOL:: var_is_introduced ;
var {0,1}: aux20289_INTEGER :: var_is_introduced ;
var 1..43: aux20290:: var_is_introduced ;
var bool: aux20291_BOOL:: var_is_introduced ;
var bool: aux20292_BOOL:: var_is_introduced ;
var bool: aux20293_BOOL:: var_is_introduced ;
var {0,1}: aux20293_INTEGER :: var_is_introduced ;
var 1..43: aux20294:: var_is_introduced ;
var bool: aux20295_BOOL:: var_is_introduced ;
var bool: aux20296_BOOL:: var_is_introduced ;
var bool: aux20297_BOOL:: var_is_introduced ;
var {0,1}: aux20297_INTEGER :: var_is_introduced ;
var 2..44: aux20298:: var_is_introduced ;
var bool: aux20299_BOOL:: var_is_introduced ;
var bool: aux20300_BOOL:: var_is_introduced ;
var bool: aux20301_BOOL:: var_is_introduced ;
var {0,1}: aux20301_INTEGER :: var_is_introduced ;
var 2..44: aux20302:: var_is_introduced ;
var bool: aux20303_BOOL:: var_is_introduced ;
var bool: aux20304_BOOL:: var_is_introduced ;
var bool: aux20305_BOOL:: var_is_introduced ;
var {0,1}: aux20305_INTEGER :: var_is_introduced ;
var 3..45: aux20306:: var_is_introduced ;
var bool: aux20307_BOOL:: var_is_introduced ;
var bool: aux20308_BOOL:: var_is_introduced ;
var bool: aux20309_BOOL:: var_is_introduced ;
var {0,1}: aux20309_INTEGER :: var_is_introduced ;
var 3..45: aux20310:: var_is_introduced ;
var bool: aux20311_BOOL:: var_is_introduced ;
var bool: aux20312_BOOL:: var_is_introduced ;
var bool: aux20313_BOOL:: var_is_introduced ;
var {0,1}: aux20313_INTEGER :: var_is_introduced ;
var 3..45: aux20314:: var_is_introduced ;
var bool: aux20315_BOOL:: var_is_introduced ;
var {0,1}: aux20315_INTEGER :: var_is_introduced ;
var 1..43: aux20316:: var_is_introduced ;
var bool: aux20317_BOOL:: var_is_introduced ;
var bool: aux20318_BOOL:: var_is_introduced ;
var bool: aux20319_BOOL:: var_is_introduced ;
var {0,1}: aux20319_INTEGER :: var_is_introduced ;
var 1..43: aux20320:: var_is_introduced ;
var bool: aux20321_BOOL:: var_is_introduced ;
var bool: aux20322_BOOL:: var_is_introduced ;
var bool: aux20323_BOOL:: var_is_introduced ;
var {0,1}: aux20323_INTEGER :: var_is_introduced ;
var 2..44: aux20324:: var_is_introduced ;
var bool: aux20325_BOOL:: var_is_introduced ;
var bool: aux20326_BOOL:: var_is_introduced ;
var bool: aux20327_BOOL:: var_is_introduced ;
var {0,1}: aux20327_INTEGER :: var_is_introduced ;
var 2..44: aux20328:: var_is_introduced ;
var bool: aux20329_BOOL:: var_is_introduced ;
var bool: aux20330_BOOL:: var_is_introduced ;
var bool: aux20331_BOOL:: var_is_introduced ;
var {0,1}: aux20331_INTEGER :: var_is_introduced ;
var 2..44: aux20332:: var_is_introduced ;
var bool: aux20333_BOOL:: var_is_introduced ;
var bool: aux20334_BOOL:: var_is_introduced ;
var bool: aux20335_BOOL:: var_is_introduced ;
var {0,1}: aux20335_INTEGER :: var_is_introduced ;
var 1..43: aux20336:: var_is_introduced ;
var bool: aux20337_BOOL:: var_is_introduced ;
var bool: aux20338_BOOL:: var_is_introduced ;
var bool: aux20339_BOOL:: var_is_introduced ;
var {0,1}: aux20339_INTEGER :: var_is_introduced ;
var 3..45: aux20340:: var_is_introduced ;
var bool: aux20341_BOOL:: var_is_introduced ;
var bool: aux20342_BOOL:: var_is_introduced ;
var bool: aux20343_BOOL:: var_is_introduced ;
var {0,1}: aux20343_INTEGER :: var_is_introduced ;
var 1..43: aux20344:: var_is_introduced ;
var bool: aux20345_BOOL:: var_is_introduced ;
var bool: aux20346_BOOL:: var_is_introduced ;
var bool: aux20347_BOOL:: var_is_introduced ;
var {0,1}: aux20347_INTEGER :: var_is_introduced ;
var 2..44: aux20348:: var_is_introduced ;
var bool: aux20349_BOOL:: var_is_introduced ;
var bool: aux20350_BOOL:: var_is_introduced ;
var bool: aux20351_BOOL:: var_is_introduced ;
var {0,1}: aux20351_INTEGER :: var_is_introduced ;
var 2..44: aux20352:: var_is_introduced ;
var bool: aux20353_BOOL:: var_is_introduced ;
var bool: aux20354_BOOL:: var_is_introduced ;
var bool: aux20355_BOOL:: var_is_introduced ;
var {0,1}: aux20355_INTEGER :: var_is_introduced ;
var 3..45: aux20356:: var_is_introduced ;
var bool: aux20357_BOOL:: var_is_introduced ;
var bool: aux20358_BOOL:: var_is_introduced ;
var bool: aux20359_BOOL:: var_is_introduced ;
var {0,1}: aux20359_INTEGER :: var_is_introduced ;
var 3..45: aux20360:: var_is_introduced ;
var bool: aux20361_BOOL:: var_is_introduced ;
var bool: aux20362_BOOL:: var_is_introduced ;
var bool: aux20363_BOOL:: var_is_introduced ;
var {0,1}: aux20363_INTEGER :: var_is_introduced ;
var 2..44: aux20364:: var_is_introduced ;
var bool: aux20365_BOOL:: var_is_introduced ;
var {0,1}: aux20365_INTEGER :: var_is_introduced ;
var 1..43: aux20366:: var_is_introduced ;
var bool: aux20367_BOOL:: var_is_introduced ;
var bool: aux20368_BOOL:: var_is_introduced ;
var bool: aux20369_BOOL:: var_is_introduced ;
var {0,1}: aux20369_INTEGER :: var_is_introduced ;
var 1..43: aux20370:: var_is_introduced ;
var bool: aux20371_BOOL:: var_is_introduced ;
var bool: aux20372_BOOL:: var_is_introduced ;
var bool: aux20373_BOOL:: var_is_introduced ;
var {0,1}: aux20373_INTEGER :: var_is_introduced ;
var 2..44: aux20374:: var_is_introduced ;
var bool: aux20375_BOOL:: var_is_introduced ;
var bool: aux20376_BOOL:: var_is_introduced ;
var bool: aux20377_BOOL:: var_is_introduced ;
var {0,1}: aux20377_INTEGER :: var_is_introduced ;
var 2..44: aux20378:: var_is_introduced ;
var bool: aux20379_BOOL:: var_is_introduced ;
var bool: aux20380_BOOL:: var_is_introduced ;
var bool: aux20381_BOOL:: var_is_introduced ;
var {0,1}: aux20381_INTEGER :: var_is_introduced ;
var 2..44: aux20382:: var_is_introduced ;
var bool: aux20383_BOOL:: var_is_introduced ;
var bool: aux20384_BOOL:: var_is_introduced ;
var bool: aux20385_BOOL:: var_is_introduced ;
var {0,1}: aux20385_INTEGER :: var_is_introduced ;
var 1..43: aux20386:: var_is_introduced ;
var bool: aux20387_BOOL:: var_is_introduced ;
var bool: aux20388_BOOL:: var_is_introduced ;
var bool: aux20389_BOOL:: var_is_introduced ;
var {0,1}: aux20389_INTEGER :: var_is_introduced ;
var 3..45: aux20390:: var_is_introduced ;
var bool: aux20391_BOOL:: var_is_introduced ;
var bool: aux20392_BOOL:: var_is_introduced ;
var bool: aux20393_BOOL:: var_is_introduced ;
var {0,1}: aux20393_INTEGER :: var_is_introduced ;
var 1..43: aux20394:: var_is_introduced ;
var bool: aux20395_BOOL:: var_is_introduced ;
var bool: aux20396_BOOL:: var_is_introduced ;
var bool: aux20397_BOOL:: var_is_introduced ;
var {0,1}: aux20397_INTEGER :: var_is_introduced ;
var 2..44: aux20398:: var_is_introduced ;
var bool: aux20399_BOOL:: var_is_introduced ;
var bool: aux20400_BOOL:: var_is_introduced ;
var bool: aux20401_BOOL:: var_is_introduced ;
var {0,1}: aux20401_INTEGER :: var_is_introduced ;
var 2..44: aux20402:: var_is_introduced ;
var bool: aux20403_BOOL:: var_is_introduced ;
var bool: aux20404_BOOL:: var_is_introduced ;
var bool: aux20405_BOOL:: var_is_introduced ;
var {0,1}: aux20405_INTEGER :: var_is_introduced ;
var 3..45: aux20406:: var_is_introduced ;
var bool: aux20407_BOOL:: var_is_introduced ;
var bool: aux20408_BOOL:: var_is_introduced ;
var bool: aux20409_BOOL:: var_is_introduced ;
var {0,1}: aux20409_INTEGER :: var_is_introduced ;
var 3..45: aux20410:: var_is_introduced ;
var bool: aux20411_BOOL:: var_is_introduced ;
var bool: aux20412_BOOL:: var_is_introduced ;
var bool: aux20413_BOOL:: var_is_introduced ;
var {0,1}: aux20413_INTEGER :: var_is_introduced ;
var 2..44: aux20414:: var_is_introduced ;
var bool: aux20415_BOOL:: var_is_introduced ;
var {0,1}: aux20415_INTEGER :: var_is_introduced ;
var 1..43: aux20416:: var_is_introduced ;
var bool: aux20417_BOOL:: var_is_introduced ;
var bool: aux20418_BOOL:: var_is_introduced ;
var bool: aux20419_BOOL:: var_is_introduced ;
var {0,1}: aux20419_INTEGER :: var_is_introduced ;
var 1..43: aux20420:: var_is_introduced ;
var bool: aux20421_BOOL:: var_is_introduced ;
var bool: aux20422_BOOL:: var_is_introduced ;
var bool: aux20423_BOOL:: var_is_introduced ;
var {0,1}: aux20423_INTEGER :: var_is_introduced ;
var 2..44: aux20424:: var_is_introduced ;
var bool: aux20425_BOOL:: var_is_introduced ;
var bool: aux20426_BOOL:: var_is_introduced ;
var bool: aux20427_BOOL:: var_is_introduced ;
var {0,1}: aux20427_INTEGER :: var_is_introduced ;
var 2..44: aux20428:: var_is_introduced ;
var bool: aux20429_BOOL:: var_is_introduced ;
var bool: aux20430_BOOL:: var_is_introduced ;
var bool: aux20431_BOOL:: var_is_introduced ;
var {0,1}: aux20431_INTEGER :: var_is_introduced ;
var 2..44: aux20432:: var_is_introduced ;
var bool: aux20433_BOOL:: var_is_introduced ;
var bool: aux20434_BOOL:: var_is_introduced ;
var bool: aux20435_BOOL:: var_is_introduced ;
var {0,1}: aux20435_INTEGER :: var_is_introduced ;
var 1..43: aux20436:: var_is_introduced ;
var bool: aux20437_BOOL:: var_is_introduced ;
var bool: aux20438_BOOL:: var_is_introduced ;
var bool: aux20439_BOOL:: var_is_introduced ;
var {0,1}: aux20439_INTEGER :: var_is_introduced ;
var 3..45: aux20440:: var_is_introduced ;
var bool: aux20441_BOOL:: var_is_introduced ;
var bool: aux20442_BOOL:: var_is_introduced ;
var bool: aux20443_BOOL:: var_is_introduced ;
var {0,1}: aux20443_INTEGER :: var_is_introduced ;
var 1..43: aux20444:: var_is_introduced ;
var bool: aux20445_BOOL:: var_is_introduced ;
var bool: aux20446_BOOL:: var_is_introduced ;
var bool: aux20447_BOOL:: var_is_introduced ;
var {0,1}: aux20447_INTEGER :: var_is_introduced ;
var 2..44: aux20448:: var_is_introduced ;
var bool: aux20449_BOOL:: var_is_introduced ;
var bool: aux20450_BOOL:: var_is_introduced ;
var bool: aux20451_BOOL:: var_is_introduced ;
var {0,1}: aux20451_INTEGER :: var_is_introduced ;
var 2..44: aux20452:: var_is_introduced ;
var bool: aux20453_BOOL:: var_is_introduced ;
var bool: aux20454_BOOL:: var_is_introduced ;
var bool: aux20455_BOOL:: var_is_introduced ;
var {0,1}: aux20455_INTEGER :: var_is_introduced ;
var 3..45: aux20456:: var_is_introduced ;
var bool: aux20457_BOOL:: var_is_introduced ;
var bool: aux20458_BOOL:: var_is_introduced ;
var bool: aux20459_BOOL:: var_is_introduced ;
var {0,1}: aux20459_INTEGER :: var_is_introduced ;
var 3..45: aux20460:: var_is_introduced ;
var bool: aux20461_BOOL:: var_is_introduced ;
var bool: aux20462_BOOL:: var_is_introduced ;
var bool: aux20463_BOOL:: var_is_introduced ;
var {0,1}: aux20463_INTEGER :: var_is_introduced ;
var 2..44: aux20464:: var_is_introduced ;
var bool: aux20465_BOOL:: var_is_introduced ;
var {0,1}: aux20465_INTEGER :: var_is_introduced ;
var 1..43: aux20466:: var_is_introduced ;
var bool: aux20467_BOOL:: var_is_introduced ;
var bool: aux20468_BOOL:: var_is_introduced ;
var bool: aux20469_BOOL:: var_is_introduced ;
var {0,1}: aux20469_INTEGER :: var_is_introduced ;
var 2..44: aux20470:: var_is_introduced ;
var bool: aux20471_BOOL:: var_is_introduced ;
var bool: aux20472_BOOL:: var_is_introduced ;
var bool: aux20473_BOOL:: var_is_introduced ;
var {0,1}: aux20473_INTEGER :: var_is_introduced ;
var 2..44: aux20474:: var_is_introduced ;
var bool: aux20475_BOOL:: var_is_introduced ;
var bool: aux20476_BOOL:: var_is_introduced ;
var bool: aux20477_BOOL:: var_is_introduced ;
var {0,1}: aux20477_INTEGER :: var_is_introduced ;
var 2..44: aux20478:: var_is_introduced ;
var bool: aux20479_BOOL:: var_is_introduced ;
var bool: aux20480_BOOL:: var_is_introduced ;
var bool: aux20481_BOOL:: var_is_introduced ;
var {0,1}: aux20481_INTEGER :: var_is_introduced ;
var 2..44: aux20482:: var_is_introduced ;
var bool: aux20483_BOOL:: var_is_introduced ;
var bool: aux20484_BOOL:: var_is_introduced ;
var bool: aux20485_BOOL:: var_is_introduced ;
var {0,1}: aux20485_INTEGER :: var_is_introduced ;
var 1..43: aux20486:: var_is_introduced ;
var bool: aux20487_BOOL:: var_is_introduced ;
var bool: aux20488_BOOL:: var_is_introduced ;
var bool: aux20489_BOOL:: var_is_introduced ;
var {0,1}: aux20489_INTEGER :: var_is_introduced ;
var 3..45: aux20490:: var_is_introduced ;
var bool: aux20491_BOOL:: var_is_introduced ;
var bool: aux20492_BOOL:: var_is_introduced ;
var bool: aux20493_BOOL:: var_is_introduced ;
var {0,1}: aux20493_INTEGER :: var_is_introduced ;
var 1..43: aux20494:: var_is_introduced ;
var bool: aux20495_BOOL:: var_is_introduced ;
var bool: aux20496_BOOL:: var_is_introduced ;
var bool: aux20497_BOOL:: var_is_introduced ;
var {0,1}: aux20497_INTEGER :: var_is_introduced ;
var 2..44: aux20498:: var_is_introduced ;
var bool: aux20499_BOOL:: var_is_introduced ;
var bool: aux20500_BOOL:: var_is_introduced ;
var bool: aux20501_BOOL:: var_is_introduced ;
var {0,1}: aux20501_INTEGER :: var_is_introduced ;
var 2..44: aux20502:: var_is_introduced ;
var bool: aux20503_BOOL:: var_is_introduced ;
var bool: aux20504_BOOL:: var_is_introduced ;
var bool: aux20505_BOOL:: var_is_introduced ;
var {0,1}: aux20505_INTEGER :: var_is_introduced ;
var 3..45: aux20506:: var_is_introduced ;
var bool: aux20507_BOOL:: var_is_introduced ;
var bool: aux20508_BOOL:: var_is_introduced ;
var bool: aux20509_BOOL:: var_is_introduced ;
var {0,1}: aux20509_INTEGER :: var_is_introduced ;
var 3..45: aux20510:: var_is_introduced ;
var bool: aux20511_BOOL:: var_is_introduced ;
var bool: aux20512_BOOL:: var_is_introduced ;
var bool: aux20513_BOOL:: var_is_introduced ;
var {0,1}: aux20513_INTEGER :: var_is_introduced ;
var 1..43: aux20514:: var_is_introduced ;
var bool: aux20515_BOOL:: var_is_introduced ;
var {0,1}: aux20515_INTEGER :: var_is_introduced ;
var 1..43: aux20516:: var_is_introduced ;
var bool: aux20517_BOOL:: var_is_introduced ;
var bool: aux20518_BOOL:: var_is_introduced ;
var bool: aux20519_BOOL:: var_is_introduced ;
var {0,1}: aux20519_INTEGER :: var_is_introduced ;
var 1..43: aux20520:: var_is_introduced ;
var bool: aux20521_BOOL:: var_is_introduced ;
var bool: aux20522_BOOL:: var_is_introduced ;
var bool: aux20523_BOOL:: var_is_introduced ;
var {0,1}: aux20523_INTEGER :: var_is_introduced ;
var 2..44: aux20524:: var_is_introduced ;
var bool: aux20525_BOOL:: var_is_introduced ;
var bool: aux20526_BOOL:: var_is_introduced ;
var bool: aux20527_BOOL:: var_is_introduced ;
var {0,1}: aux20527_INTEGER :: var_is_introduced ;
var 2..44: aux20528:: var_is_introduced ;
var bool: aux20529_BOOL:: var_is_introduced ;
var bool: aux20530_BOOL:: var_is_introduced ;
var bool: aux20531_BOOL:: var_is_introduced ;
var {0,1}: aux20531_INTEGER :: var_is_introduced ;
var 2..44: aux20532:: var_is_introduced ;
var bool: aux20533_BOOL:: var_is_introduced ;
var bool: aux20534_BOOL:: var_is_introduced ;
var bool: aux20535_BOOL:: var_is_introduced ;
var {0,1}: aux20535_INTEGER :: var_is_introduced ;
var 1..43: aux20536:: var_is_introduced ;
var bool: aux20537_BOOL:: var_is_introduced ;
var bool: aux20538_BOOL:: var_is_introduced ;
var bool: aux20539_BOOL:: var_is_introduced ;
var {0,1}: aux20539_INTEGER :: var_is_introduced ;
var 3..45: aux20540:: var_is_introduced ;
var bool: aux20541_BOOL:: var_is_introduced ;
var bool: aux20542_BOOL:: var_is_introduced ;
var bool: aux20543_BOOL:: var_is_introduced ;
var {0,1}: aux20543_INTEGER :: var_is_introduced ;
var 1..43: aux20544:: var_is_introduced ;
var bool: aux20545_BOOL:: var_is_introduced ;
var bool: aux20546_BOOL:: var_is_introduced ;
var bool: aux20547_BOOL:: var_is_introduced ;
var {0,1}: aux20547_INTEGER :: var_is_introduced ;
var 2..44: aux20548:: var_is_introduced ;
var bool: aux20549_BOOL:: var_is_introduced ;
var bool: aux20550_BOOL:: var_is_introduced ;
var bool: aux20551_BOOL:: var_is_introduced ;
var {0,1}: aux20551_INTEGER :: var_is_introduced ;
var 2..44: aux20552:: var_is_introduced ;
var bool: aux20553_BOOL:: var_is_introduced ;
var bool: aux20554_BOOL:: var_is_introduced ;
var bool: aux20555_BOOL:: var_is_introduced ;
var {0,1}: aux20555_INTEGER :: var_is_introduced ;
var 3..45: aux20556:: var_is_introduced ;
var bool: aux20557_BOOL:: var_is_introduced ;
var bool: aux20558_BOOL:: var_is_introduced ;
var bool: aux20559_BOOL:: var_is_introduced ;
var {0,1}: aux20559_INTEGER :: var_is_introduced ;
var 3..45: aux20560:: var_is_introduced ;
var bool: aux20561_BOOL:: var_is_introduced ;
var bool: aux20562_BOOL:: var_is_introduced ;
var bool: aux20563_BOOL:: var_is_introduced ;
var {0,1}: aux20563_INTEGER :: var_is_introduced ;
var 2..44: aux20564:: var_is_introduced ;
var bool: aux20565_BOOL:: var_is_introduced ;
var {0,1}: aux20565_INTEGER :: var_is_introduced ;
var 1..43: aux20566:: var_is_introduced ;
var bool: aux20567_BOOL:: var_is_introduced ;
var bool: aux20568_BOOL:: var_is_introduced ;
var bool: aux20569_BOOL:: var_is_introduced ;
var {0,1}: aux20569_INTEGER :: var_is_introduced ;
var 1..43: aux20570:: var_is_introduced ;
var bool: aux20571_BOOL:: var_is_introduced ;
var bool: aux20572_BOOL:: var_is_introduced ;
var bool: aux20573_BOOL:: var_is_introduced ;
var {0,1}: aux20573_INTEGER :: var_is_introduced ;
var 2..44: aux20574:: var_is_introduced ;
var bool: aux20575_BOOL:: var_is_introduced ;
var bool: aux20576_BOOL:: var_is_introduced ;
var bool: aux20577_BOOL:: var_is_introduced ;
var {0,1}: aux20577_INTEGER :: var_is_introduced ;
var 2..44: aux20578:: var_is_introduced ;
var bool: aux20579_BOOL:: var_is_introduced ;
var bool: aux20580_BOOL:: var_is_introduced ;
var bool: aux20581_BOOL:: var_is_introduced ;
var {0,1}: aux20581_INTEGER :: var_is_introduced ;
var 2..44: aux20582:: var_is_introduced ;
var bool: aux20583_BOOL:: var_is_introduced ;
var bool: aux20584_BOOL:: var_is_introduced ;
var bool: aux20585_BOOL:: var_is_introduced ;
var {0,1}: aux20585_INTEGER :: var_is_introduced ;
var 2..44: aux20586:: var_is_introduced ;
var bool: aux20587_BOOL:: var_is_introduced ;
var bool: aux20588_BOOL:: var_is_introduced ;
var bool: aux20589_BOOL:: var_is_introduced ;
var {0,1}: aux20589_INTEGER :: var_is_introduced ;
var 3..45: aux20590:: var_is_introduced ;
var bool: aux20591_BOOL:: var_is_introduced ;
var bool: aux20592_BOOL:: var_is_introduced ;
var bool: aux20593_BOOL:: var_is_introduced ;
var {0,1}: aux20593_INTEGER :: var_is_introduced ;
var 1..43: aux20594:: var_is_introduced ;
var bool: aux20595_BOOL:: var_is_introduced ;
var bool: aux20596_BOOL:: var_is_introduced ;
var bool: aux20597_BOOL:: var_is_introduced ;
var {0,1}: aux20597_INTEGER :: var_is_introduced ;
var 2..44: aux20598:: var_is_introduced ;
var bool: aux20599_BOOL:: var_is_introduced ;
var bool: aux20600_BOOL:: var_is_introduced ;
var bool: aux20601_BOOL:: var_is_introduced ;
var {0,1}: aux20601_INTEGER :: var_is_introduced ;
var 2..44: aux20602:: var_is_introduced ;
var bool: aux20603_BOOL:: var_is_introduced ;
var bool: aux20604_BOOL:: var_is_introduced ;
var bool: aux20605_BOOL:: var_is_introduced ;
var {0,1}: aux20605_INTEGER :: var_is_introduced ;
var 3..45: aux20606:: var_is_introduced ;
var bool: aux20607_BOOL:: var_is_introduced ;
var bool: aux20608_BOOL:: var_is_introduced ;
var bool: aux20609_BOOL:: var_is_introduced ;
var {0,1}: aux20609_INTEGER :: var_is_introduced ;
var 3..45: aux20610:: var_is_introduced ;
var bool: aux20611_BOOL:: var_is_introduced ;
var bool: aux20612_BOOL:: var_is_introduced ;
var bool: aux20613_BOOL:: var_is_introduced ;
var {0,1}: aux20613_INTEGER :: var_is_introduced ;
var 1..43: aux20614:: var_is_introduced ;
var bool: aux20615_BOOL:: var_is_introduced ;
var {0,1}: aux20615_INTEGER :: var_is_introduced ;
var 1..43: aux20616:: var_is_introduced ;
var bool: aux20617_BOOL:: var_is_introduced ;
var bool: aux20618_BOOL:: var_is_introduced ;
var bool: aux20619_BOOL:: var_is_introduced ;
var {0,1}: aux20619_INTEGER :: var_is_introduced ;
var 1..43: aux20620:: var_is_introduced ;
var bool: aux20621_BOOL:: var_is_introduced ;
var bool: aux20622_BOOL:: var_is_introduced ;
var bool: aux20623_BOOL:: var_is_introduced ;
var {0,1}: aux20623_INTEGER :: var_is_introduced ;
var 2..44: aux20624:: var_is_introduced ;
var bool: aux20625_BOOL:: var_is_introduced ;
var bool: aux20626_BOOL:: var_is_introduced ;
var bool: aux20627_BOOL:: var_is_introduced ;
var {0,1}: aux20627_INTEGER :: var_is_introduced ;
var 2..44: aux20628:: var_is_introduced ;
var bool: aux20629_BOOL:: var_is_introduced ;
var bool: aux20630_BOOL:: var_is_introduced ;
var bool: aux20631_BOOL:: var_is_introduced ;
var {0,1}: aux20631_INTEGER :: var_is_introduced ;
var 2..44: aux20632:: var_is_introduced ;
var bool: aux20633_BOOL:: var_is_introduced ;
var bool: aux20634_BOOL:: var_is_introduced ;
var bool: aux20635_BOOL:: var_is_introduced ;
var {0,1}: aux20635_INTEGER :: var_is_introduced ;
var 2..44: aux20636:: var_is_introduced ;
var bool: aux20637_BOOL:: var_is_introduced ;
var bool: aux20638_BOOL:: var_is_introduced ;
var bool: aux20639_BOOL:: var_is_introduced ;
var {0,1}: aux20639_INTEGER :: var_is_introduced ;
var 1..43: aux20640:: var_is_introduced ;
var bool: aux20641_BOOL:: var_is_introduced ;
var bool: aux20642_BOOL:: var_is_introduced ;
var bool: aux20643_BOOL:: var_is_introduced ;
var {0,1}: aux20643_INTEGER :: var_is_introduced ;
var 3..45: aux20644:: var_is_introduced ;
var bool: aux20645_BOOL:: var_is_introduced ;
var bool: aux20646_BOOL:: var_is_introduced ;
var bool: aux20647_BOOL:: var_is_introduced ;
var {0,1}: aux20647_INTEGER :: var_is_introduced ;
var 1..43: aux20648:: var_is_introduced ;
var bool: aux20649_BOOL:: var_is_introduced ;
var bool: aux20650_BOOL:: var_is_introduced ;
var bool: aux20651_BOOL:: var_is_introduced ;
var {0,1}: aux20651_INTEGER :: var_is_introduced ;
var 2..44: aux20652:: var_is_introduced ;
var bool: aux20653_BOOL:: var_is_introduced ;
var bool: aux20654_BOOL:: var_is_introduced ;
var bool: aux20655_BOOL:: var_is_introduced ;
var {0,1}: aux20655_INTEGER :: var_is_introduced ;
var 3..45: aux20656:: var_is_introduced ;
var bool: aux20657_BOOL:: var_is_introduced ;
var bool: aux20658_BOOL:: var_is_introduced ;
var bool: aux20659_BOOL:: var_is_introduced ;
var {0,1}: aux20659_INTEGER :: var_is_introduced ;
var 3..45: aux20660:: var_is_introduced ;
var bool: aux20661_BOOL:: var_is_introduced ;
var bool: aux20662_BOOL:: var_is_introduced ;
var bool: aux20663_BOOL:: var_is_introduced ;
var {0,1}: aux20663_INTEGER :: var_is_introduced ;
var 2..44: aux20664:: var_is_introduced ;
var bool: aux20665_BOOL:: var_is_introduced ;
var {0,1}: aux20665_INTEGER :: var_is_introduced ;
var 1..43: aux20666:: var_is_introduced ;
var bool: aux20667_BOOL:: var_is_introduced ;
var bool: aux20668_BOOL:: var_is_introduced ;
var bool: aux20669_BOOL:: var_is_introduced ;
var {0,1}: aux20669_INTEGER :: var_is_introduced ;
var 1..43: aux20670:: var_is_introduced ;
var bool: aux20671_BOOL:: var_is_introduced ;
var bool: aux20672_BOOL:: var_is_introduced ;
var bool: aux20673_BOOL:: var_is_introduced ;
var {0,1}: aux20673_INTEGER :: var_is_introduced ;
var 2..44: aux20674:: var_is_introduced ;
var bool: aux20675_BOOL:: var_is_introduced ;
var bool: aux20676_BOOL:: var_is_introduced ;
var bool: aux20677_BOOL:: var_is_introduced ;
var {0,1}: aux20677_INTEGER :: var_is_introduced ;
var 2..44: aux20678:: var_is_introduced ;
var bool: aux20679_BOOL:: var_is_introduced ;
var bool: aux20680_BOOL:: var_is_introduced ;
var bool: aux20681_BOOL:: var_is_introduced ;
var {0,1}: aux20681_INTEGER :: var_is_introduced ;
var 2..44: aux20682:: var_is_introduced ;
var bool: aux20683_BOOL:: var_is_introduced ;
var bool: aux20684_BOOL:: var_is_introduced ;
var bool: aux20685_BOOL:: var_is_introduced ;
var {0,1}: aux20685_INTEGER :: var_is_introduced ;
var 2..44: aux20686:: var_is_introduced ;
var bool: aux20687_BOOL:: var_is_introduced ;
var bool: aux20688_BOOL:: var_is_introduced ;
var bool: aux20689_BOOL:: var_is_introduced ;
var {0,1}: aux20689_INTEGER :: var_is_introduced ;
var 1..43: aux20690:: var_is_introduced ;
var bool: aux20691_BOOL:: var_is_introduced ;
var bool: aux20692_BOOL:: var_is_introduced ;
var bool: aux20693_BOOL:: var_is_introduced ;
var {0,1}: aux20693_INTEGER :: var_is_introduced ;
var 3..45: aux20694:: var_is_introduced ;
var bool: aux20695_BOOL:: var_is_introduced ;
var bool: aux20696_BOOL:: var_is_introduced ;
var bool: aux20697_BOOL:: var_is_introduced ;
var {0,1}: aux20697_INTEGER :: var_is_introduced ;
var 1..43: aux20698:: var_is_introduced ;
var bool: aux20699_BOOL:: var_is_introduced ;
var bool: aux20700_BOOL:: var_is_introduced ;
var bool: aux20701_BOOL:: var_is_introduced ;
var {0,1}: aux20701_INTEGER :: var_is_introduced ;
var 2..44: aux20702:: var_is_introduced ;
var bool: aux20703_BOOL:: var_is_introduced ;
var bool: aux20704_BOOL:: var_is_introduced ;
var bool: aux20705_BOOL:: var_is_introduced ;
var {0,1}: aux20705_INTEGER :: var_is_introduced ;
var 3..45: aux20706:: var_is_introduced ;
var bool: aux20707_BOOL:: var_is_introduced ;
var bool: aux20708_BOOL:: var_is_introduced ;
var bool: aux20709_BOOL:: var_is_introduced ;
var {0,1}: aux20709_INTEGER :: var_is_introduced ;
var 3..45: aux20710:: var_is_introduced ;
var bool: aux20711_BOOL:: var_is_introduced ;
var bool: aux20712_BOOL:: var_is_introduced ;
var bool: aux20713_BOOL:: var_is_introduced ;
var {0,1}: aux20713_INTEGER :: var_is_introduced ;
var 2..44: aux20714:: var_is_introduced ;
var bool: aux20715_BOOL:: var_is_introduced ;
var {0,1}: aux20715_INTEGER :: var_is_introduced ;
var 1..43: aux20716:: var_is_introduced ;
var bool: aux20717_BOOL:: var_is_introduced ;
var bool: aux20718_BOOL:: var_is_introduced ;
var bool: aux20719_BOOL:: var_is_introduced ;
var {0,1}: aux20719_INTEGER :: var_is_introduced ;
var 1..43: aux20720:: var_is_introduced ;
var bool: aux20721_BOOL:: var_is_introduced ;
var bool: aux20722_BOOL:: var_is_introduced ;
var bool: aux20723_BOOL:: var_is_introduced ;
var {0,1}: aux20723_INTEGER :: var_is_introduced ;
var 2..44: aux20724:: var_is_introduced ;
var bool: aux20725_BOOL:: var_is_introduced ;
var bool: aux20726_BOOL:: var_is_introduced ;
var bool: aux20727_BOOL:: var_is_introduced ;
var {0,1}: aux20727_INTEGER :: var_is_introduced ;
var 2..44: aux20728:: var_is_introduced ;
var bool: aux20729_BOOL:: var_is_introduced ;
var bool: aux20730_BOOL:: var_is_introduced ;
var bool: aux20731_BOOL:: var_is_introduced ;
var {0,1}: aux20731_INTEGER :: var_is_introduced ;
var 2..44: aux20732:: var_is_introduced ;
var bool: aux20733_BOOL:: var_is_introduced ;
var bool: aux20734_BOOL:: var_is_introduced ;
var bool: aux20735_BOOL:: var_is_introduced ;
var {0,1}: aux20735_INTEGER :: var_is_introduced ;
var 2..44: aux20736:: var_is_introduced ;
var bool: aux20737_BOOL:: var_is_introduced ;
var bool: aux20738_BOOL:: var_is_introduced ;
var bool: aux20739_BOOL:: var_is_introduced ;
var {0,1}: aux20739_INTEGER :: var_is_introduced ;
var 1..43: aux20740:: var_is_introduced ;
var bool: aux20741_BOOL:: var_is_introduced ;
var bool: aux20742_BOOL:: var_is_introduced ;
var bool: aux20743_BOOL:: var_is_introduced ;
var {0,1}: aux20743_INTEGER :: var_is_introduced ;
var 3..45: aux20744:: var_is_introduced ;
var bool: aux20745_BOOL:: var_is_introduced ;
var bool: aux20746_BOOL:: var_is_introduced ;
var bool: aux20747_BOOL:: var_is_introduced ;
var {0,1}: aux20747_INTEGER :: var_is_introduced ;
var 1..43: aux20748:: var_is_introduced ;
var bool: aux20749_BOOL:: var_is_introduced ;
var bool: aux20750_BOOL:: var_is_introduced ;
var bool: aux20751_BOOL:: var_is_introduced ;
var {0,1}: aux20751_INTEGER :: var_is_introduced ;
var 2..44: aux20752:: var_is_introduced ;
var bool: aux20753_BOOL:: var_is_introduced ;
var bool: aux20754_BOOL:: var_is_introduced ;
var bool: aux20755_BOOL:: var_is_introduced ;
var {0,1}: aux20755_INTEGER :: var_is_introduced ;
var 2..44: aux20756:: var_is_introduced ;
var bool: aux20757_BOOL:: var_is_introduced ;
var bool: aux20758_BOOL:: var_is_introduced ;
var bool: aux20759_BOOL:: var_is_introduced ;
var {0,1}: aux20759_INTEGER :: var_is_introduced ;
var 3..45: aux20760:: var_is_introduced ;
var bool: aux20761_BOOL:: var_is_introduced ;
var bool: aux20762_BOOL:: var_is_introduced ;
var bool: aux20763_BOOL:: var_is_introduced ;
var {0,1}: aux20763_INTEGER :: var_is_introduced ;
var 3..45: aux20764:: var_is_introduced ;
var bool: aux20765_BOOL:: var_is_introduced ;
var {0,1}: aux20765_INTEGER :: var_is_introduced ;
var 1..43: aux20766:: var_is_introduced ;
var bool: aux20767_BOOL:: var_is_introduced ;
var bool: aux20768_BOOL:: var_is_introduced ;
var bool: aux20769_BOOL:: var_is_introduced ;
var {0,1}: aux20769_INTEGER :: var_is_introduced ;
var 1..43: aux20770:: var_is_introduced ;
var bool: aux20771_BOOL:: var_is_introduced ;
var bool: aux20772_BOOL:: var_is_introduced ;
var bool: aux20773_BOOL:: var_is_introduced ;
var {0,1}: aux20773_INTEGER :: var_is_introduced ;
var 2..44: aux20774:: var_is_introduced ;
var bool: aux20775_BOOL:: var_is_introduced ;
var bool: aux20776_BOOL:: var_is_introduced ;
var bool: aux20777_BOOL:: var_is_introduced ;
var {0,1}: aux20777_INTEGER :: var_is_introduced ;
var 2..44: aux20778:: var_is_introduced ;
var bool: aux20779_BOOL:: var_is_introduced ;
var bool: aux20780_BOOL:: var_is_introduced ;
var bool: aux20781_BOOL:: var_is_introduced ;
var {0,1}: aux20781_INTEGER :: var_is_introduced ;
var 2..44: aux20782:: var_is_introduced ;
var bool: aux20783_BOOL:: var_is_introduced ;
var bool: aux20784_BOOL:: var_is_introduced ;
var bool: aux20785_BOOL:: var_is_introduced ;
var {0,1}: aux20785_INTEGER :: var_is_introduced ;
var 2..44: aux20786:: var_is_introduced ;
var bool: aux20787_BOOL:: var_is_introduced ;
var bool: aux20788_BOOL:: var_is_introduced ;
var bool: aux20789_BOOL:: var_is_introduced ;
var {0,1}: aux20789_INTEGER :: var_is_introduced ;
var 1..43: aux20790:: var_is_introduced ;
var bool: aux20791_BOOL:: var_is_introduced ;
var bool: aux20792_BOOL:: var_is_introduced ;
var bool: aux20793_BOOL:: var_is_introduced ;
var {0,1}: aux20793_INTEGER :: var_is_introduced ;
var 3..45: aux20794:: var_is_introduced ;
var bool: aux20795_BOOL:: var_is_introduced ;
var bool: aux20796_BOOL:: var_is_introduced ;
var bool: aux20797_BOOL:: var_is_introduced ;
var {0,1}: aux20797_INTEGER :: var_is_introduced ;
var 2..44: aux20798:: var_is_introduced ;
var bool: aux20799_BOOL:: var_is_introduced ;
var bool: aux20800_BOOL:: var_is_introduced ;
var bool: aux20801_BOOL:: var_is_introduced ;
var {0,1}: aux20801_INTEGER :: var_is_introduced ;
var 2..44: aux20802:: var_is_introduced ;
var bool: aux20803_BOOL:: var_is_introduced ;
var bool: aux20804_BOOL:: var_is_introduced ;
var bool: aux20805_BOOL:: var_is_introduced ;
var {0,1}: aux20805_INTEGER :: var_is_introduced ;
var 3..45: aux20806:: var_is_introduced ;
var bool: aux20807_BOOL:: var_is_introduced ;
var bool: aux20808_BOOL:: var_is_introduced ;
var bool: aux20809_BOOL:: var_is_introduced ;
var {0,1}: aux20809_INTEGER :: var_is_introduced ;
var 3..45: aux20810:: var_is_introduced ;
var bool: aux20811_BOOL:: var_is_introduced ;
var bool: aux20812_BOOL:: var_is_introduced ;
var bool: aux20813_BOOL:: var_is_introduced ;
var {0,1}: aux20813_INTEGER :: var_is_introduced ;
var 1..43: aux20814:: var_is_introduced ;
var bool: aux20815_BOOL:: var_is_introduced ;
var {0,1}: aux20815_INTEGER :: var_is_introduced ;
var 1..43: aux20816:: var_is_introduced ;
var bool: aux20817_BOOL:: var_is_introduced ;
var bool: aux20818_BOOL:: var_is_introduced ;
var bool: aux20819_BOOL:: var_is_introduced ;
var {0,1}: aux20819_INTEGER :: var_is_introduced ;
var 1..43: aux20820:: var_is_introduced ;
var bool: aux20821_BOOL:: var_is_introduced ;
var bool: aux20822_BOOL:: var_is_introduced ;
var bool: aux20823_BOOL:: var_is_introduced ;
var {0,1}: aux20823_INTEGER :: var_is_introduced ;
var 2..44: aux20824:: var_is_introduced ;
var bool: aux20825_BOOL:: var_is_introduced ;
var bool: aux20826_BOOL:: var_is_introduced ;
var bool: aux20827_BOOL:: var_is_introduced ;
var {0,1}: aux20827_INTEGER :: var_is_introduced ;
var 2..44: aux20828:: var_is_introduced ;
var bool: aux20829_BOOL:: var_is_introduced ;
var bool: aux20830_BOOL:: var_is_introduced ;
var bool: aux20831_BOOL:: var_is_introduced ;
var {0,1}: aux20831_INTEGER :: var_is_introduced ;
var 2..44: aux20832:: var_is_introduced ;
var bool: aux20833_BOOL:: var_is_introduced ;
var bool: aux20834_BOOL:: var_is_introduced ;
var bool: aux20835_BOOL:: var_is_introduced ;
var {0,1}: aux20835_INTEGER :: var_is_introduced ;
var 2..44: aux20836:: var_is_introduced ;
var bool: aux20837_BOOL:: var_is_introduced ;
var bool: aux20838_BOOL:: var_is_introduced ;
var bool: aux20839_BOOL:: var_is_introduced ;
var {0,1}: aux20839_INTEGER :: var_is_introduced ;
var 1..43: aux20840:: var_is_introduced ;
var bool: aux20841_BOOL:: var_is_introduced ;
var bool: aux20842_BOOL:: var_is_introduced ;
var bool: aux20843_BOOL:: var_is_introduced ;
var {0,1}: aux20843_INTEGER :: var_is_introduced ;
var 3..45: aux20844:: var_is_introduced ;
var bool: aux20845_BOOL:: var_is_introduced ;
var bool: aux20846_BOOL:: var_is_introduced ;
var bool: aux20847_BOOL:: var_is_introduced ;
var {0,1}: aux20847_INTEGER :: var_is_introduced ;
var 1..43: aux20848:: var_is_introduced ;
var bool: aux20849_BOOL:: var_is_introduced ;
var bool: aux20850_BOOL:: var_is_introduced ;
var bool: aux20851_BOOL:: var_is_introduced ;
var {0,1}: aux20851_INTEGER :: var_is_introduced ;
var 2..44: aux20852:: var_is_introduced ;
var bool: aux20853_BOOL:: var_is_introduced ;
var bool: aux20854_BOOL:: var_is_introduced ;
var bool: aux20855_BOOL:: var_is_introduced ;
var {0,1}: aux20855_INTEGER :: var_is_introduced ;
var 2..44: aux20856:: var_is_introduced ;
var bool: aux20857_BOOL:: var_is_introduced ;
var bool: aux20858_BOOL:: var_is_introduced ;
var bool: aux20859_BOOL:: var_is_introduced ;
var {0,1}: aux20859_INTEGER :: var_is_introduced ;
var 3..45: aux20860:: var_is_introduced ;
var bool: aux20861_BOOL:: var_is_introduced ;
var bool: aux20862_BOOL:: var_is_introduced ;
var bool: aux20863_BOOL:: var_is_introduced ;
var {0,1}: aux20863_INTEGER :: var_is_introduced ;
var 3..45: aux20864:: var_is_introduced ;
var bool: aux20865_BOOL:: var_is_introduced ;
var {0,1}: aux20865_INTEGER :: var_is_introduced ;
var 1..43: aux20866:: var_is_introduced ;
var bool: aux20867_BOOL:: var_is_introduced ;
var bool: aux20868_BOOL:: var_is_introduced ;
var bool: aux20869_BOOL:: var_is_introduced ;
var {0,1}: aux20869_INTEGER :: var_is_introduced ;
var 2..44: aux20870:: var_is_introduced ;
var bool: aux20871_BOOL:: var_is_introduced ;
var bool: aux20872_BOOL:: var_is_introduced ;
var bool: aux20873_BOOL:: var_is_introduced ;
var {0,1}: aux20873_INTEGER :: var_is_introduced ;
var 2..44: aux20874:: var_is_introduced ;
var bool: aux20875_BOOL:: var_is_introduced ;
var bool: aux20876_BOOL:: var_is_introduced ;
var bool: aux20877_BOOL:: var_is_introduced ;
var {0,1}: aux20877_INTEGER :: var_is_introduced ;
var 2..44: aux20878:: var_is_introduced ;
var bool: aux20879_BOOL:: var_is_introduced ;
var bool: aux20880_BOOL:: var_is_introduced ;
var bool: aux20881_BOOL:: var_is_introduced ;
var {0,1}: aux20881_INTEGER :: var_is_introduced ;
var 1..43: aux20882:: var_is_introduced ;
var bool: aux20883_BOOL:: var_is_introduced ;
var bool: aux20884_BOOL:: var_is_introduced ;
var bool: aux20885_BOOL:: var_is_introduced ;
var {0,1}: aux20885_INTEGER :: var_is_introduced ;
var 3..45: aux20886:: var_is_introduced ;
var bool: aux20887_BOOL:: var_is_introduced ;
var bool: aux20888_BOOL:: var_is_introduced ;
var bool: aux20889_BOOL:: var_is_introduced ;
var {0,1}: aux20889_INTEGER :: var_is_introduced ;
var 1..43: aux20890:: var_is_introduced ;
var bool: aux20891_BOOL:: var_is_introduced ;
var bool: aux20892_BOOL:: var_is_introduced ;
var bool: aux20893_BOOL:: var_is_introduced ;
var {0,1}: aux20893_INTEGER :: var_is_introduced ;
var 2..44: aux20894:: var_is_introduced ;
var bool: aux20895_BOOL:: var_is_introduced ;
var bool: aux20896_BOOL:: var_is_introduced ;
var bool: aux20897_BOOL:: var_is_introduced ;
var {0,1}: aux20897_INTEGER :: var_is_introduced ;
var 2..44: aux20898:: var_is_introduced ;
var bool: aux20899_BOOL:: var_is_introduced ;
var bool: aux20900_BOOL:: var_is_introduced ;
var bool: aux20901_BOOL:: var_is_introduced ;
var {0,1}: aux20901_INTEGER :: var_is_introduced ;
var 2..44: aux20902:: var_is_introduced ;
var bool: aux20903_BOOL:: var_is_introduced ;
var bool: aux20904_BOOL:: var_is_introduced ;
var bool: aux20905_BOOL:: var_is_introduced ;
var {0,1}: aux20905_INTEGER :: var_is_introduced ;
var 3..45: aux20906:: var_is_introduced ;
var bool: aux20907_BOOL:: var_is_introduced ;
var bool: aux20908_BOOL:: var_is_introduced ;
var bool: aux20909_BOOL:: var_is_introduced ;
var {0,1}: aux20909_INTEGER :: var_is_introduced ;
var 3..45: aux20910:: var_is_introduced ;
var bool: aux20911_BOOL:: var_is_introduced ;
var bool: aux20912_BOOL:: var_is_introduced ;
var bool: aux20913_BOOL:: var_is_introduced ;
var {0,1}: aux20913_INTEGER :: var_is_introduced ;
var 4..46: aux20914:: var_is_introduced ;
var bool: aux20915_BOOL:: var_is_introduced ;
var bool: aux20916_BOOL:: var_is_introduced ;
var bool: aux20917_BOOL:: var_is_introduced ;
var {0,1}: aux20917_INTEGER :: var_is_introduced ;
var 1..43: aux20918:: var_is_introduced ;
var bool: aux20919_BOOL:: var_is_introduced ;
var {0,1}: aux20919_INTEGER :: var_is_introduced ;
var 1..43: aux20920:: var_is_introduced ;
var bool: aux20921_BOOL:: var_is_introduced ;
var bool: aux20922_BOOL:: var_is_introduced ;
var bool: aux20923_BOOL:: var_is_introduced ;
var {0,1}: aux20923_INTEGER :: var_is_introduced ;
var 1..43: aux20924:: var_is_introduced ;
var bool: aux20925_BOOL:: var_is_introduced ;
var bool: aux20926_BOOL:: var_is_introduced ;
var bool: aux20927_BOOL:: var_is_introduced ;
var {0,1}: aux20927_INTEGER :: var_is_introduced ;
var 2..44: aux20928:: var_is_introduced ;
var bool: aux20929_BOOL:: var_is_introduced ;
var bool: aux20930_BOOL:: var_is_introduced ;
var bool: aux20931_BOOL:: var_is_introduced ;
var {0,1}: aux20931_INTEGER :: var_is_introduced ;
var 2..44: aux20932:: var_is_introduced ;
var bool: aux20933_BOOL:: var_is_introduced ;
var bool: aux20934_BOOL:: var_is_introduced ;
var bool: aux20935_BOOL:: var_is_introduced ;
var {0,1}: aux20935_INTEGER :: var_is_introduced ;
var 1..43: aux20936:: var_is_introduced ;
var bool: aux20937_BOOL:: var_is_introduced ;
var bool: aux20938_BOOL:: var_is_introduced ;
var bool: aux20939_BOOL:: var_is_introduced ;
var {0,1}: aux20939_INTEGER :: var_is_introduced ;
var 3..45: aux20940:: var_is_introduced ;
var bool: aux20941_BOOL:: var_is_introduced ;
var bool: aux20942_BOOL:: var_is_introduced ;
var bool: aux20943_BOOL:: var_is_introduced ;
var {0,1}: aux20943_INTEGER :: var_is_introduced ;
var 1..43: aux20944:: var_is_introduced ;
var bool: aux20945_BOOL:: var_is_introduced ;
var bool: aux20946_BOOL:: var_is_introduced ;
var bool: aux20947_BOOL:: var_is_introduced ;
var {0,1}: aux20947_INTEGER :: var_is_introduced ;
var 2..44: aux20948:: var_is_introduced ;
var bool: aux20949_BOOL:: var_is_introduced ;
var bool: aux20950_BOOL:: var_is_introduced ;
var bool: aux20951_BOOL:: var_is_introduced ;
var {0,1}: aux20951_INTEGER :: var_is_introduced ;
var 2..44: aux20952:: var_is_introduced ;
var bool: aux20953_BOOL:: var_is_introduced ;
var bool: aux20954_BOOL:: var_is_introduced ;
var bool: aux20955_BOOL:: var_is_introduced ;
var {0,1}: aux20955_INTEGER :: var_is_introduced ;
var 2..44: aux20956:: var_is_introduced ;
var bool: aux20957_BOOL:: var_is_introduced ;
var bool: aux20958_BOOL:: var_is_introduced ;
var bool: aux20959_BOOL:: var_is_introduced ;
var {0,1}: aux20959_INTEGER :: var_is_introduced ;
var 3..45: aux20960:: var_is_introduced ;
var bool: aux20961_BOOL:: var_is_introduced ;
var bool: aux20962_BOOL:: var_is_introduced ;
var bool: aux20963_BOOL:: var_is_introduced ;
var {0,1}: aux20963_INTEGER :: var_is_introduced ;
var 3..45: aux20964:: var_is_introduced ;
var bool: aux20965_BOOL:: var_is_introduced ;
var bool: aux20966_BOOL:: var_is_introduced ;
var bool: aux20967_BOOL:: var_is_introduced ;
var {0,1}: aux20967_INTEGER :: var_is_introduced ;
var 4..46: aux20968:: var_is_introduced ;
var bool: aux20969_BOOL:: var_is_introduced ;
var bool: aux20970_BOOL:: var_is_introduced ;
var bool: aux20971_BOOL:: var_is_introduced ;
var {0,1}: aux20971_INTEGER :: var_is_introduced ;
var 2..44: aux20972:: var_is_introduced ;
var bool: aux20973_BOOL:: var_is_introduced ;
var {0,1}: aux20973_INTEGER :: var_is_introduced ;
var 1..43: aux20974:: var_is_introduced ;
var bool: aux20975_BOOL:: var_is_introduced ;
var bool: aux20976_BOOL:: var_is_introduced ;
var bool: aux20977_BOOL:: var_is_introduced ;
var {0,1}: aux20977_INTEGER :: var_is_introduced ;
var 1..43: aux20978:: var_is_introduced ;
var bool: aux20979_BOOL:: var_is_introduced ;
var bool: aux20980_BOOL:: var_is_introduced ;
var bool: aux20981_BOOL:: var_is_introduced ;
var {0,1}: aux20981_INTEGER :: var_is_introduced ;
var 2..44: aux20982:: var_is_introduced ;
var bool: aux20983_BOOL:: var_is_introduced ;
var bool: aux20984_BOOL:: var_is_introduced ;
var bool: aux20985_BOOL:: var_is_introduced ;
var {0,1}: aux20985_INTEGER :: var_is_introduced ;
var 2..44: aux20986:: var_is_introduced ;
var bool: aux20987_BOOL:: var_is_introduced ;
var bool: aux20988_BOOL:: var_is_introduced ;
var bool: aux20989_BOOL:: var_is_introduced ;
var {0,1}: aux20989_INTEGER :: var_is_introduced ;
var 1..43: aux20990:: var_is_introduced ;
var bool: aux20991_BOOL:: var_is_introduced ;
var bool: aux20992_BOOL:: var_is_introduced ;
var bool: aux20993_BOOL:: var_is_introduced ;
var {0,1}: aux20993_INTEGER :: var_is_introduced ;
var 3..45: aux20994:: var_is_introduced ;
var bool: aux20995_BOOL:: var_is_introduced ;
var bool: aux20996_BOOL:: var_is_introduced ;
var bool: aux20997_BOOL:: var_is_introduced ;
var {0,1}: aux20997_INTEGER :: var_is_introduced ;
var 1..43: aux20998:: var_is_introduced ;
var bool: aux20999_BOOL:: var_is_introduced ;
var bool: aux21000_BOOL:: var_is_introduced ;
var bool: aux21001_BOOL:: var_is_introduced ;
var {0,1}: aux21001_INTEGER :: var_is_introduced ;
var 2..44: aux21002:: var_is_introduced ;
var bool: aux21003_BOOL:: var_is_introduced ;
var bool: aux21004_BOOL:: var_is_introduced ;
var bool: aux21005_BOOL:: var_is_introduced ;
var {0,1}: aux21005_INTEGER :: var_is_introduced ;
var 2..44: aux21006:: var_is_introduced ;
var bool: aux21007_BOOL:: var_is_introduced ;
var bool: aux21008_BOOL:: var_is_introduced ;
var bool: aux21009_BOOL:: var_is_introduced ;
var {0,1}: aux21009_INTEGER :: var_is_introduced ;
var 2..44: aux21010:: var_is_introduced ;
var bool: aux21011_BOOL:: var_is_introduced ;
var bool: aux21012_BOOL:: var_is_introduced ;
var bool: aux21013_BOOL:: var_is_introduced ;
var {0,1}: aux21013_INTEGER :: var_is_introduced ;
var 3..45: aux21014:: var_is_introduced ;
var bool: aux21015_BOOL:: var_is_introduced ;
var bool: aux21016_BOOL:: var_is_introduced ;
var bool: aux21017_BOOL:: var_is_introduced ;
var {0,1}: aux21017_INTEGER :: var_is_introduced ;
var 3..45: aux21018:: var_is_introduced ;
var bool: aux21019_BOOL:: var_is_introduced ;
var bool: aux21020_BOOL:: var_is_introduced ;
var bool: aux21021_BOOL:: var_is_introduced ;
var {0,1}: aux21021_INTEGER :: var_is_introduced ;
var 4..46: aux21022:: var_is_introduced ;
var bool: aux21023_BOOL:: var_is_introduced ;
var bool: aux21024_BOOL:: var_is_introduced ;
var bool: aux21025_BOOL:: var_is_introduced ;
var {0,1}: aux21025_INTEGER :: var_is_introduced ;
var 2..44: aux21026:: var_is_introduced ;
var bool: aux21027_BOOL:: var_is_introduced ;
var {0,1}: aux21027_INTEGER :: var_is_introduced ;
var 1..43: aux21028:: var_is_introduced ;
var bool: aux21029_BOOL:: var_is_introduced ;
var bool: aux21030_BOOL:: var_is_introduced ;
var bool: aux21031_BOOL:: var_is_introduced ;
var {0,1}: aux21031_INTEGER :: var_is_introduced ;
var 1..43: aux21032:: var_is_introduced ;
var bool: aux21033_BOOL:: var_is_introduced ;
var bool: aux21034_BOOL:: var_is_introduced ;
var bool: aux21035_BOOL:: var_is_introduced ;
var {0,1}: aux21035_INTEGER :: var_is_introduced ;
var 2..44: aux21036:: var_is_introduced ;
var bool: aux21037_BOOL:: var_is_introduced ;
var bool: aux21038_BOOL:: var_is_introduced ;
var bool: aux21039_BOOL:: var_is_introduced ;
var {0,1}: aux21039_INTEGER :: var_is_introduced ;
var 2..44: aux21040:: var_is_introduced ;
var bool: aux21041_BOOL:: var_is_introduced ;
var bool: aux21042_BOOL:: var_is_introduced ;
var bool: aux21043_BOOL:: var_is_introduced ;
var {0,1}: aux21043_INTEGER :: var_is_introduced ;
var 2..44: aux21044:: var_is_introduced ;
var bool: aux21045_BOOL:: var_is_introduced ;
var bool: aux21046_BOOL:: var_is_introduced ;
var bool: aux21047_BOOL:: var_is_introduced ;
var {0,1}: aux21047_INTEGER :: var_is_introduced ;
var 1..43: aux21048:: var_is_introduced ;
var bool: aux21049_BOOL:: var_is_introduced ;
var bool: aux21050_BOOL:: var_is_introduced ;
var bool: aux21051_BOOL:: var_is_introduced ;
var {0,1}: aux21051_INTEGER :: var_is_introduced ;
var 1..43: aux21052:: var_is_introduced ;
var bool: aux21053_BOOL:: var_is_introduced ;
var bool: aux21054_BOOL:: var_is_introduced ;
var bool: aux21055_BOOL:: var_is_introduced ;
var {0,1}: aux21055_INTEGER :: var_is_introduced ;
var 2..44: aux21056:: var_is_introduced ;
var bool: aux21057_BOOL:: var_is_introduced ;
var bool: aux21058_BOOL:: var_is_introduced ;
var bool: aux21059_BOOL:: var_is_introduced ;
var {0,1}: aux21059_INTEGER :: var_is_introduced ;
var 2..44: aux21060:: var_is_introduced ;
var bool: aux21061_BOOL:: var_is_introduced ;
var bool: aux21062_BOOL:: var_is_introduced ;
var bool: aux21063_BOOL:: var_is_introduced ;
var {0,1}: aux21063_INTEGER :: var_is_introduced ;
var 2..44: aux21064:: var_is_introduced ;
var bool: aux21065_BOOL:: var_is_introduced ;
var bool: aux21066_BOOL:: var_is_introduced ;
var bool: aux21067_BOOL:: var_is_introduced ;
var {0,1}: aux21067_INTEGER :: var_is_introduced ;
var 3..45: aux21068:: var_is_introduced ;
var bool: aux21069_BOOL:: var_is_introduced ;
var bool: aux21070_BOOL:: var_is_introduced ;
var bool: aux21071_BOOL:: var_is_introduced ;
var {0,1}: aux21071_INTEGER :: var_is_introduced ;
var 3..45: aux21072:: var_is_introduced ;
var bool: aux21073_BOOL:: var_is_introduced ;
var bool: aux21074_BOOL:: var_is_introduced ;
var bool: aux21075_BOOL:: var_is_introduced ;
var {0,1}: aux21075_INTEGER :: var_is_introduced ;
var 4..46: aux21076:: var_is_introduced ;
var bool: aux21077_BOOL:: var_is_introduced ;
var bool: aux21078_BOOL:: var_is_introduced ;
var bool: aux21079_BOOL:: var_is_introduced ;
var {0,1}: aux21079_INTEGER :: var_is_introduced ;
var 3..45: aux21080:: var_is_introduced ;
var bool: aux21081_BOOL:: var_is_introduced ;
var {0,1}: aux21081_INTEGER :: var_is_introduced ;
var 1..43: aux21082:: var_is_introduced ;
var bool: aux21083_BOOL:: var_is_introduced ;
var bool: aux21084_BOOL:: var_is_introduced ;
var bool: aux21085_BOOL:: var_is_introduced ;
var {0,1}: aux21085_INTEGER :: var_is_introduced ;
var 1..43: aux21086:: var_is_introduced ;
var bool: aux21087_BOOL:: var_is_introduced ;
var bool: aux21088_BOOL:: var_is_introduced ;
var bool: aux21089_BOOL:: var_is_introduced ;
var {0,1}: aux21089_INTEGER :: var_is_introduced ;
var 2..44: aux21090:: var_is_introduced ;
var bool: aux21091_BOOL:: var_is_introduced ;
var bool: aux21092_BOOL:: var_is_introduced ;
var bool: aux21093_BOOL:: var_is_introduced ;
var {0,1}: aux21093_INTEGER :: var_is_introduced ;
var 2..44: aux21094:: var_is_introduced ;
var bool: aux21095_BOOL:: var_is_introduced ;
var bool: aux21096_BOOL:: var_is_introduced ;
var bool: aux21097_BOOL:: var_is_introduced ;
var {0,1}: aux21097_INTEGER :: var_is_introduced ;
var 1..43: aux21098:: var_is_introduced ;
var bool: aux21099_BOOL:: var_is_introduced ;
var bool: aux21100_BOOL:: var_is_introduced ;
var bool: aux21101_BOOL:: var_is_introduced ;
var {0,1}: aux21101_INTEGER :: var_is_introduced ;
var 3..45: aux21102:: var_is_introduced ;
var bool: aux21103_BOOL:: var_is_introduced ;
var bool: aux21104_BOOL:: var_is_introduced ;
var bool: aux21105_BOOL:: var_is_introduced ;
var {0,1}: aux21105_INTEGER :: var_is_introduced ;
var 1..43: aux21106:: var_is_introduced ;
var bool: aux21107_BOOL:: var_is_introduced ;
var bool: aux21108_BOOL:: var_is_introduced ;
var bool: aux21109_BOOL:: var_is_introduced ;
var {0,1}: aux21109_INTEGER :: var_is_introduced ;
var 2..44: aux21110:: var_is_introduced ;
var bool: aux21111_BOOL:: var_is_introduced ;
var bool: aux21112_BOOL:: var_is_introduced ;
var bool: aux21113_BOOL:: var_is_introduced ;
var {0,1}: aux21113_INTEGER :: var_is_introduced ;
var 2..44: aux21114:: var_is_introduced ;
var bool: aux21115_BOOL:: var_is_introduced ;
var bool: aux21116_BOOL:: var_is_introduced ;
var bool: aux21117_BOOL:: var_is_introduced ;
var {0,1}: aux21117_INTEGER :: var_is_introduced ;
var 2..44: aux21118:: var_is_introduced ;
var bool: aux21119_BOOL:: var_is_introduced ;
var bool: aux21120_BOOL:: var_is_introduced ;
var bool: aux21121_BOOL:: var_is_introduced ;
var {0,1}: aux21121_INTEGER :: var_is_introduced ;
var 3..45: aux21122:: var_is_introduced ;
var bool: aux21123_BOOL:: var_is_introduced ;
var bool: aux21124_BOOL:: var_is_introduced ;
var bool: aux21125_BOOL:: var_is_introduced ;
var {0,1}: aux21125_INTEGER :: var_is_introduced ;
var 3..45: aux21126:: var_is_introduced ;
var bool: aux21127_BOOL:: var_is_introduced ;
var bool: aux21128_BOOL:: var_is_introduced ;
var bool: aux21129_BOOL:: var_is_introduced ;
var {0,1}: aux21129_INTEGER :: var_is_introduced ;
var 4..46: aux21130:: var_is_introduced ;
var bool: aux21131_BOOL:: var_is_introduced ;
var bool: aux21132_BOOL:: var_is_introduced ;
var bool: aux21133_BOOL:: var_is_introduced ;
var {0,1}: aux21133_INTEGER :: var_is_introduced ;
var 2..44: aux21134:: var_is_introduced ;
var bool: aux21135_BOOL:: var_is_introduced ;
var {0,1}: aux21135_INTEGER :: var_is_introduced ;
var 1..43: aux21136:: var_is_introduced ;
var bool: aux21137_BOOL:: var_is_introduced ;
var bool: aux21138_BOOL:: var_is_introduced ;
var bool: aux21139_BOOL:: var_is_introduced ;
var {0,1}: aux21139_INTEGER :: var_is_introduced ;
var 2..44: aux21140:: var_is_introduced ;
var bool: aux21141_BOOL:: var_is_introduced ;
var bool: aux21142_BOOL:: var_is_introduced ;
var bool: aux21143_BOOL:: var_is_introduced ;
var {0,1}: aux21143_INTEGER :: var_is_introduced ;
var 2..44: aux21144:: var_is_introduced ;
var bool: aux21145_BOOL:: var_is_introduced ;
var bool: aux21146_BOOL:: var_is_introduced ;
var bool: aux21147_BOOL:: var_is_introduced ;
var {0,1}: aux21147_INTEGER :: var_is_introduced ;
var 2..44: aux21148:: var_is_introduced ;
var bool: aux21149_BOOL:: var_is_introduced ;
var bool: aux21150_BOOL:: var_is_introduced ;
var bool: aux21151_BOOL:: var_is_introduced ;
var {0,1}: aux21151_INTEGER :: var_is_introduced ;
var 1..43: aux21152:: var_is_introduced ;
var bool: aux21153_BOOL:: var_is_introduced ;
var bool: aux21154_BOOL:: var_is_introduced ;
var bool: aux21155_BOOL:: var_is_introduced ;
var {0,1}: aux21155_INTEGER :: var_is_introduced ;
var 3..45: aux21156:: var_is_introduced ;
var bool: aux21157_BOOL:: var_is_introduced ;
var bool: aux21158_BOOL:: var_is_introduced ;
var bool: aux21159_BOOL:: var_is_introduced ;
var {0,1}: aux21159_INTEGER :: var_is_introduced ;
var 1..43: aux21160:: var_is_introduced ;
var bool: aux21161_BOOL:: var_is_introduced ;
var bool: aux21162_BOOL:: var_is_introduced ;
var bool: aux21163_BOOL:: var_is_introduced ;
var {0,1}: aux21163_INTEGER :: var_is_introduced ;
var 2..44: aux21164:: var_is_introduced ;
var bool: aux21165_BOOL:: var_is_introduced ;
var bool: aux21166_BOOL:: var_is_introduced ;
var bool: aux21167_BOOL:: var_is_introduced ;
var {0,1}: aux21167_INTEGER :: var_is_introduced ;
var 2..44: aux21168:: var_is_introduced ;
var bool: aux21169_BOOL:: var_is_introduced ;
var bool: aux21170_BOOL:: var_is_introduced ;
var bool: aux21171_BOOL:: var_is_introduced ;
var {0,1}: aux21171_INTEGER :: var_is_introduced ;
var 2..44: aux21172:: var_is_introduced ;
var bool: aux21173_BOOL:: var_is_introduced ;
var bool: aux21174_BOOL:: var_is_introduced ;
var bool: aux21175_BOOL:: var_is_introduced ;
var {0,1}: aux21175_INTEGER :: var_is_introduced ;
var 3..45: aux21176:: var_is_introduced ;
var bool: aux21177_BOOL:: var_is_introduced ;
var bool: aux21178_BOOL:: var_is_introduced ;
var bool: aux21179_BOOL:: var_is_introduced ;
var {0,1}: aux21179_INTEGER :: var_is_introduced ;
var 3..45: aux21180:: var_is_introduced ;
var bool: aux21181_BOOL:: var_is_introduced ;
var bool: aux21182_BOOL:: var_is_introduced ;
var bool: aux21183_BOOL:: var_is_introduced ;
var {0,1}: aux21183_INTEGER :: var_is_introduced ;
var 4..46: aux21184:: var_is_introduced ;
var bool: aux21185_BOOL:: var_is_introduced ;
var bool: aux21186_BOOL:: var_is_introduced ;
var bool: aux21187_BOOL:: var_is_introduced ;
var {0,1}: aux21187_INTEGER :: var_is_introduced ;
var 1..43: aux21188:: var_is_introduced ;
var bool: aux21189_BOOL:: var_is_introduced ;
var {0,1}: aux21189_INTEGER :: var_is_introduced ;
var 1..43: aux21190:: var_is_introduced ;
var bool: aux21191_BOOL:: var_is_introduced ;
var bool: aux21192_BOOL:: var_is_introduced ;
var bool: aux21193_BOOL:: var_is_introduced ;
var {0,1}: aux21193_INTEGER :: var_is_introduced ;
var 1..43: aux21194:: var_is_introduced ;
var bool: aux21195_BOOL:: var_is_introduced ;
var bool: aux21196_BOOL:: var_is_introduced ;
var bool: aux21197_BOOL:: var_is_introduced ;
var {0,1}: aux21197_INTEGER :: var_is_introduced ;
var 2..44: aux21198:: var_is_introduced ;
var bool: aux21199_BOOL:: var_is_introduced ;
var bool: aux21200_BOOL:: var_is_introduced ;
var bool: aux21201_BOOL:: var_is_introduced ;
var {0,1}: aux21201_INTEGER :: var_is_introduced ;
var 2..44: aux21202:: var_is_introduced ;
var bool: aux21203_BOOL:: var_is_introduced ;
var bool: aux21204_BOOL:: var_is_introduced ;
var bool: aux21205_BOOL:: var_is_introduced ;
var {0,1}: aux21205_INTEGER :: var_is_introduced ;
var 2..44: aux21206:: var_is_introduced ;
var bool: aux21207_BOOL:: var_is_introduced ;
var bool: aux21208_BOOL:: var_is_introduced ;
var bool: aux21209_BOOL:: var_is_introduced ;
var {0,1}: aux21209_INTEGER :: var_is_introduced ;
var 3..45: aux21210:: var_is_introduced ;
var bool: aux21211_BOOL:: var_is_introduced ;
var bool: aux21212_BOOL:: var_is_introduced ;
var bool: aux21213_BOOL:: var_is_introduced ;
var {0,1}: aux21213_INTEGER :: var_is_introduced ;
var 1..43: aux21214:: var_is_introduced ;
var bool: aux21215_BOOL:: var_is_introduced ;
var bool: aux21216_BOOL:: var_is_introduced ;
var bool: aux21217_BOOL:: var_is_introduced ;
var {0,1}: aux21217_INTEGER :: var_is_introduced ;
var 2..44: aux21218:: var_is_introduced ;
var bool: aux21219_BOOL:: var_is_introduced ;
var bool: aux21220_BOOL:: var_is_introduced ;
var bool: aux21221_BOOL:: var_is_introduced ;
var {0,1}: aux21221_INTEGER :: var_is_introduced ;
var 2..44: aux21222:: var_is_introduced ;
var bool: aux21223_BOOL:: var_is_introduced ;
var bool: aux21224_BOOL:: var_is_introduced ;
var bool: aux21225_BOOL:: var_is_introduced ;
var {0,1}: aux21225_INTEGER :: var_is_introduced ;
var 2..44: aux21226:: var_is_introduced ;
var bool: aux21227_BOOL:: var_is_introduced ;
var bool: aux21228_BOOL:: var_is_introduced ;
var bool: aux21229_BOOL:: var_is_introduced ;
var {0,1}: aux21229_INTEGER :: var_is_introduced ;
var 3..45: aux21230:: var_is_introduced ;
var bool: aux21231_BOOL:: var_is_introduced ;
var bool: aux21232_BOOL:: var_is_introduced ;
var bool: aux21233_BOOL:: var_is_introduced ;
var {0,1}: aux21233_INTEGER :: var_is_introduced ;
var 3..45: aux21234:: var_is_introduced ;
var bool: aux21235_BOOL:: var_is_introduced ;
var bool: aux21236_BOOL:: var_is_introduced ;
var bool: aux21237_BOOL:: var_is_introduced ;
var {0,1}: aux21237_INTEGER :: var_is_introduced ;
var 4..46: aux21238:: var_is_introduced ;
var bool: aux21239_BOOL:: var_is_introduced ;
var bool: aux21240_BOOL:: var_is_introduced ;
var bool: aux21241_BOOL:: var_is_introduced ;
var {0,1}: aux21241_INTEGER :: var_is_introduced ;
var 1..43: aux21242:: var_is_introduced ;
var bool: aux21243_BOOL:: var_is_introduced ;
var {0,1}: aux21243_INTEGER :: var_is_introduced ;
var 1..43: aux21244:: var_is_introduced ;
var bool: aux21245_BOOL:: var_is_introduced ;
var bool: aux21246_BOOL:: var_is_introduced ;
var bool: aux21247_BOOL:: var_is_introduced ;
var {0,1}: aux21247_INTEGER :: var_is_introduced ;
var 1..43: aux21248:: var_is_introduced ;
var bool: aux21249_BOOL:: var_is_introduced ;
var bool: aux21250_BOOL:: var_is_introduced ;
var bool: aux21251_BOOL:: var_is_introduced ;
var {0,1}: aux21251_INTEGER :: var_is_introduced ;
var 2..44: aux21252:: var_is_introduced ;
var bool: aux21253_BOOL:: var_is_introduced ;
var bool: aux21254_BOOL:: var_is_introduced ;
var bool: aux21255_BOOL:: var_is_introduced ;
var {0,1}: aux21255_INTEGER :: var_is_introduced ;
var 2..44: aux21256:: var_is_introduced ;
var bool: aux21257_BOOL:: var_is_introduced ;
var bool: aux21258_BOOL:: var_is_introduced ;
var bool: aux21259_BOOL:: var_is_introduced ;
var {0,1}: aux21259_INTEGER :: var_is_introduced ;
var 2..44: aux21260:: var_is_introduced ;
var bool: aux21261_BOOL:: var_is_introduced ;
var bool: aux21262_BOOL:: var_is_introduced ;
var bool: aux21263_BOOL:: var_is_introduced ;
var {0,1}: aux21263_INTEGER :: var_is_introduced ;
var 1..43: aux21264:: var_is_introduced ;
var bool: aux21265_BOOL:: var_is_introduced ;
var bool: aux21266_BOOL:: var_is_introduced ;
var bool: aux21267_BOOL:: var_is_introduced ;
var {0,1}: aux21267_INTEGER :: var_is_introduced ;
var 3..45: aux21268:: var_is_introduced ;
var bool: aux21269_BOOL:: var_is_introduced ;
var bool: aux21270_BOOL:: var_is_introduced ;
var bool: aux21271_BOOL:: var_is_introduced ;
var {0,1}: aux21271_INTEGER :: var_is_introduced ;
var 1..43: aux21272:: var_is_introduced ;
var bool: aux21273_BOOL:: var_is_introduced ;
var bool: aux21274_BOOL:: var_is_introduced ;
var bool: aux21275_BOOL:: var_is_introduced ;
var {0,1}: aux21275_INTEGER :: var_is_introduced ;
var 2..44: aux21276:: var_is_introduced ;
var bool: aux21277_BOOL:: var_is_introduced ;
var bool: aux21278_BOOL:: var_is_introduced ;
var bool: aux21279_BOOL:: var_is_introduced ;
var {0,1}: aux21279_INTEGER :: var_is_introduced ;
var 2..44: aux21280:: var_is_introduced ;
var bool: aux21281_BOOL:: var_is_introduced ;
var bool: aux21282_BOOL:: var_is_introduced ;
var bool: aux21283_BOOL:: var_is_introduced ;
var {0,1}: aux21283_INTEGER :: var_is_introduced ;
var 3..45: aux21284:: var_is_introduced ;
var bool: aux21285_BOOL:: var_is_introduced ;
var bool: aux21286_BOOL:: var_is_introduced ;
var bool: aux21287_BOOL:: var_is_introduced ;
var {0,1}: aux21287_INTEGER :: var_is_introduced ;
var 3..45: aux21288:: var_is_introduced ;
var bool: aux21289_BOOL:: var_is_introduced ;
var bool: aux21290_BOOL:: var_is_introduced ;
var bool: aux21291_BOOL:: var_is_introduced ;
var {0,1}: aux21291_INTEGER :: var_is_introduced ;
var 4..46: aux21292:: var_is_introduced ;
var bool: aux21293_BOOL:: var_is_introduced ;
var bool: aux21294_BOOL:: var_is_introduced ;
var bool: aux21295_BOOL:: var_is_introduced ;
var {0,1}: aux21295_INTEGER :: var_is_introduced ;
var 2..44: aux21296:: var_is_introduced ;
var bool: aux21297_BOOL:: var_is_introduced ;
var {0,1}: aux21297_INTEGER :: var_is_introduced ;
var 1..43: aux21298:: var_is_introduced ;
var bool: aux21299_BOOL:: var_is_introduced ;
var bool: aux21300_BOOL:: var_is_introduced ;
var bool: aux21301_BOOL:: var_is_introduced ;
var {0,1}: aux21301_INTEGER :: var_is_introduced ;
var 1..43: aux21302:: var_is_introduced ;
var bool: aux21303_BOOL:: var_is_introduced ;
var bool: aux21304_BOOL:: var_is_introduced ;
var bool: aux21305_BOOL:: var_is_introduced ;
var {0,1}: aux21305_INTEGER :: var_is_introduced ;
var 2..44: aux21306:: var_is_introduced ;
var bool: aux21307_BOOL:: var_is_introduced ;
var bool: aux21308_BOOL:: var_is_introduced ;
var bool: aux21309_BOOL:: var_is_introduced ;
var {0,1}: aux21309_INTEGER :: var_is_introduced ;
var 2..44: aux21310:: var_is_introduced ;
var bool: aux21311_BOOL:: var_is_introduced ;
var bool: aux21312_BOOL:: var_is_introduced ;
var bool: aux21313_BOOL:: var_is_introduced ;
var {0,1}: aux21313_INTEGER :: var_is_introduced ;
var 2..44: aux21314:: var_is_introduced ;
var bool: aux21315_BOOL:: var_is_introduced ;
var bool: aux21316_BOOL:: var_is_introduced ;
var bool: aux21317_BOOL:: var_is_introduced ;
var {0,1}: aux21317_INTEGER :: var_is_introduced ;
var 1..43: aux21318:: var_is_introduced ;
var bool: aux21319_BOOL:: var_is_introduced ;
var bool: aux21320_BOOL:: var_is_introduced ;
var bool: aux21321_BOOL:: var_is_introduced ;
var {0,1}: aux21321_INTEGER :: var_is_introduced ;
var 3..45: aux21322:: var_is_introduced ;
var bool: aux21323_BOOL:: var_is_introduced ;
var bool: aux21324_BOOL:: var_is_introduced ;
var bool: aux21325_BOOL:: var_is_introduced ;
var {0,1}: aux21325_INTEGER :: var_is_introduced ;
var 1..43: aux21326:: var_is_introduced ;
var bool: aux21327_BOOL:: var_is_introduced ;
var bool: aux21328_BOOL:: var_is_introduced ;
var bool: aux21329_BOOL:: var_is_introduced ;
var {0,1}: aux21329_INTEGER :: var_is_introduced ;
var 2..44: aux21330:: var_is_introduced ;
var bool: aux21331_BOOL:: var_is_introduced ;
var bool: aux21332_BOOL:: var_is_introduced ;
var bool: aux21333_BOOL:: var_is_introduced ;
var {0,1}: aux21333_INTEGER :: var_is_introduced ;
var 2..44: aux21334:: var_is_introduced ;
var bool: aux21335_BOOL:: var_is_introduced ;
var bool: aux21336_BOOL:: var_is_introduced ;
var bool: aux21337_BOOL:: var_is_introduced ;
var {0,1}: aux21337_INTEGER :: var_is_introduced ;
var 2..44: aux21338:: var_is_introduced ;
var bool: aux21339_BOOL:: var_is_introduced ;
var bool: aux21340_BOOL:: var_is_introduced ;
var bool: aux21341_BOOL:: var_is_introduced ;
var {0,1}: aux21341_INTEGER :: var_is_introduced ;
var 3..45: aux21342:: var_is_introduced ;
var bool: aux21343_BOOL:: var_is_introduced ;
var bool: aux21344_BOOL:: var_is_introduced ;
var bool: aux21345_BOOL:: var_is_introduced ;
var {0,1}: aux21345_INTEGER :: var_is_introduced ;
var 3..45: aux21346:: var_is_introduced ;
var bool: aux21347_BOOL:: var_is_introduced ;
var bool: aux21348_BOOL:: var_is_introduced ;
var bool: aux21349_BOOL:: var_is_introduced ;
var {0,1}: aux21349_INTEGER :: var_is_introduced ;
var 4..46: aux21350:: var_is_introduced ;
var bool: aux21351_BOOL:: var_is_introduced ;
var {0,1}: aux21351_INTEGER :: var_is_introduced ;
var 1..43: aux21352:: var_is_introduced ;
var bool: aux21353_BOOL:: var_is_introduced ;
var bool: aux21354_BOOL:: var_is_introduced ;
var bool: aux21355_BOOL:: var_is_introduced ;
var {0,1}: aux21355_INTEGER :: var_is_introduced ;
var 1..43: aux21356:: var_is_introduced ;
var bool: aux21357_BOOL:: var_is_introduced ;
var bool: aux21358_BOOL:: var_is_introduced ;
var bool: aux21359_BOOL:: var_is_introduced ;
var {0,1}: aux21359_INTEGER :: var_is_introduced ;
var 2..44: aux21360:: var_is_introduced ;
var bool: aux21361_BOOL:: var_is_introduced ;
var bool: aux21362_BOOL:: var_is_introduced ;
var bool: aux21363_BOOL:: var_is_introduced ;
var {0,1}: aux21363_INTEGER :: var_is_introduced ;
var 2..44: aux21364:: var_is_introduced ;
var bool: aux21365_BOOL:: var_is_introduced ;
var bool: aux21366_BOOL:: var_is_introduced ;
var bool: aux21367_BOOL:: var_is_introduced ;
var {0,1}: aux21367_INTEGER :: var_is_introduced ;
var 2..44: aux21368:: var_is_introduced ;
var bool: aux21369_BOOL:: var_is_introduced ;
var bool: aux21370_BOOL:: var_is_introduced ;
var bool: aux21371_BOOL:: var_is_introduced ;
var {0,1}: aux21371_INTEGER :: var_is_introduced ;
var 1..43: aux21372:: var_is_introduced ;
var bool: aux21373_BOOL:: var_is_introduced ;
var bool: aux21374_BOOL:: var_is_introduced ;
var bool: aux21375_BOOL:: var_is_introduced ;
var {0,1}: aux21375_INTEGER :: var_is_introduced ;
var 3..45: aux21376:: var_is_introduced ;
var bool: aux21377_BOOL:: var_is_introduced ;
var bool: aux21378_BOOL:: var_is_introduced ;
var bool: aux21379_BOOL:: var_is_introduced ;
var {0,1}: aux21379_INTEGER :: var_is_introduced ;
var 1..43: aux21380:: var_is_introduced ;
var bool: aux21381_BOOL:: var_is_introduced ;
var bool: aux21382_BOOL:: var_is_introduced ;
var bool: aux21383_BOOL:: var_is_introduced ;
var {0,1}: aux21383_INTEGER :: var_is_introduced ;
var 2..44: aux21384:: var_is_introduced ;
var bool: aux21385_BOOL:: var_is_introduced ;
var bool: aux21386_BOOL:: var_is_introduced ;
var bool: aux21387_BOOL:: var_is_introduced ;
var {0,1}: aux21387_INTEGER :: var_is_introduced ;
var 2..44: aux21388:: var_is_introduced ;
var bool: aux21389_BOOL:: var_is_introduced ;
var bool: aux21390_BOOL:: var_is_introduced ;
var bool: aux21391_BOOL:: var_is_introduced ;
var {0,1}: aux21391_INTEGER :: var_is_introduced ;
var 3..45: aux21392:: var_is_introduced ;
var bool: aux21393_BOOL:: var_is_introduced ;
var bool: aux21394_BOOL:: var_is_introduced ;
var bool: aux21395_BOOL:: var_is_introduced ;
var {0,1}: aux21395_INTEGER :: var_is_introduced ;
var 3..45: aux21396:: var_is_introduced ;
var bool: aux21397_BOOL:: var_is_introduced ;
var bool: aux21398_BOOL:: var_is_introduced ;
var bool: aux21399_BOOL:: var_is_introduced ;
var {0,1}: aux21399_INTEGER :: var_is_introduced ;
var 4..46: aux21400:: var_is_introduced ;
var bool: aux21401_BOOL:: var_is_introduced ;
var bool: aux21402_BOOL:: var_is_introduced ;
var bool: aux21403_BOOL:: var_is_introduced ;
var {0,1}: aux21403_INTEGER :: var_is_introduced ;
var 2..44: aux21404:: var_is_introduced ;
var bool: aux21405_BOOL:: var_is_introduced ;
var {0,1}: aux21405_INTEGER :: var_is_introduced ;
var 1..43: aux21406:: var_is_introduced ;
var bool: aux21407_BOOL:: var_is_introduced ;
var bool: aux21408_BOOL:: var_is_introduced ;
var bool: aux21409_BOOL:: var_is_introduced ;
var {0,1}: aux21409_INTEGER :: var_is_introduced ;
var 1..43: aux21410:: var_is_introduced ;
var bool: aux21411_BOOL:: var_is_introduced ;
var bool: aux21412_BOOL:: var_is_introduced ;
var bool: aux21413_BOOL:: var_is_introduced ;
var {0,1}: aux21413_INTEGER :: var_is_introduced ;
var 2..44: aux21414:: var_is_introduced ;
var bool: aux21415_BOOL:: var_is_introduced ;
var bool: aux21416_BOOL:: var_is_introduced ;
var bool: aux21417_BOOL:: var_is_introduced ;
var {0,1}: aux21417_INTEGER :: var_is_introduced ;
var 2..44: aux21418:: var_is_introduced ;
var bool: aux21419_BOOL:: var_is_introduced ;
var bool: aux21420_BOOL:: var_is_introduced ;
var bool: aux21421_BOOL:: var_is_introduced ;
var {0,1}: aux21421_INTEGER :: var_is_introduced ;
var 2..44: aux21422:: var_is_introduced ;
var bool: aux21423_BOOL:: var_is_introduced ;
var bool: aux21424_BOOL:: var_is_introduced ;
var bool: aux21425_BOOL:: var_is_introduced ;
var {0,1}: aux21425_INTEGER :: var_is_introduced ;
var 1..43: aux21426:: var_is_introduced ;
var bool: aux21427_BOOL:: var_is_introduced ;
var bool: aux21428_BOOL:: var_is_introduced ;
var bool: aux21429_BOOL:: var_is_introduced ;
var {0,1}: aux21429_INTEGER :: var_is_introduced ;
var 3..45: aux21430:: var_is_introduced ;
var bool: aux21431_BOOL:: var_is_introduced ;
var bool: aux21432_BOOL:: var_is_introduced ;
var bool: aux21433_BOOL:: var_is_introduced ;
var {0,1}: aux21433_INTEGER :: var_is_introduced ;
var 1..43: aux21434:: var_is_introduced ;
var bool: aux21435_BOOL:: var_is_introduced ;
var bool: aux21436_BOOL:: var_is_introduced ;
var bool: aux21437_BOOL:: var_is_introduced ;
var {0,1}: aux21437_INTEGER :: var_is_introduced ;
var 2..44: aux21438:: var_is_introduced ;
var bool: aux21439_BOOL:: var_is_introduced ;
var bool: aux21440_BOOL:: var_is_introduced ;
var bool: aux21441_BOOL:: var_is_introduced ;
var {0,1}: aux21441_INTEGER :: var_is_introduced ;
var 2..44: aux21442:: var_is_introduced ;
var bool: aux21443_BOOL:: var_is_introduced ;
var bool: aux21444_BOOL:: var_is_introduced ;
var bool: aux21445_BOOL:: var_is_introduced ;
var {0,1}: aux21445_INTEGER :: var_is_introduced ;
var 2..44: aux21446:: var_is_introduced ;
var bool: aux21447_BOOL:: var_is_introduced ;
var bool: aux21448_BOOL:: var_is_introduced ;
var bool: aux21449_BOOL:: var_is_introduced ;
var {0,1}: aux21449_INTEGER :: var_is_introduced ;
var 3..45: aux21450:: var_is_introduced ;
var bool: aux21451_BOOL:: var_is_introduced ;
var bool: aux21452_BOOL:: var_is_introduced ;
var bool: aux21453_BOOL:: var_is_introduced ;
var {0,1}: aux21453_INTEGER :: var_is_introduced ;
var 4..46: aux21454:: var_is_introduced ;
var bool: aux21455_BOOL:: var_is_introduced ;
var bool: aux21456_BOOL:: var_is_introduced ;
var bool: aux21457_BOOL:: var_is_introduced ;
var {0,1}: aux21457_INTEGER :: var_is_introduced ;
var 3..45: aux21458:: var_is_introduced ;
var bool: aux21459_BOOL:: var_is_introduced ;
var {0,1}: aux21459_INTEGER :: var_is_introduced ;
var 1..43: aux21460:: var_is_introduced ;
var bool: aux21461_BOOL:: var_is_introduced ;
var bool: aux21462_BOOL:: var_is_introduced ;
var bool: aux21463_BOOL:: var_is_introduced ;
var {0,1}: aux21463_INTEGER :: var_is_introduced ;
var 1..43: aux21464:: var_is_introduced ;
var bool: aux21465_BOOL:: var_is_introduced ;
var bool: aux21466_BOOL:: var_is_introduced ;
var bool: aux21467_BOOL:: var_is_introduced ;
var {0,1}: aux21467_INTEGER :: var_is_introduced ;
var 2..44: aux21468:: var_is_introduced ;
var bool: aux21469_BOOL:: var_is_introduced ;
var bool: aux21470_BOOL:: var_is_introduced ;
var bool: aux21471_BOOL:: var_is_introduced ;
var {0,1}: aux21471_INTEGER :: var_is_introduced ;
var 2..44: aux21472:: var_is_introduced ;
var bool: aux21473_BOOL:: var_is_introduced ;
var bool: aux21474_BOOL:: var_is_introduced ;
var bool: aux21475_BOOL:: var_is_introduced ;
var {0,1}: aux21475_INTEGER :: var_is_introduced ;
var 2..44: aux21476:: var_is_introduced ;
var bool: aux21477_BOOL:: var_is_introduced ;
var bool: aux21478_BOOL:: var_is_introduced ;
var bool: aux21479_BOOL:: var_is_introduced ;
var {0,1}: aux21479_INTEGER :: var_is_introduced ;
var 1..43: aux21480:: var_is_introduced ;
var bool: aux21481_BOOL:: var_is_introduced ;
var bool: aux21482_BOOL:: var_is_introduced ;
var bool: aux21483_BOOL:: var_is_introduced ;
var {0,1}: aux21483_INTEGER :: var_is_introduced ;
var 3..45: aux21484:: var_is_introduced ;
var bool: aux21485_BOOL:: var_is_introduced ;
var bool: aux21486_BOOL:: var_is_introduced ;
var bool: aux21487_BOOL:: var_is_introduced ;
var {0,1}: aux21487_INTEGER :: var_is_introduced ;
var 2..44: aux21488:: var_is_introduced ;
var bool: aux21489_BOOL:: var_is_introduced ;
var bool: aux21490_BOOL:: var_is_introduced ;
var bool: aux21491_BOOL:: var_is_introduced ;
var {0,1}: aux21491_INTEGER :: var_is_introduced ;
var 2..44: aux21492:: var_is_introduced ;
var bool: aux21493_BOOL:: var_is_introduced ;
var bool: aux21494_BOOL:: var_is_introduced ;
var bool: aux21495_BOOL:: var_is_introduced ;
var {0,1}: aux21495_INTEGER :: var_is_introduced ;
var 2..44: aux21496:: var_is_introduced ;
var bool: aux21497_BOOL:: var_is_introduced ;
var bool: aux21498_BOOL:: var_is_introduced ;
var bool: aux21499_BOOL:: var_is_introduced ;
var {0,1}: aux21499_INTEGER :: var_is_introduced ;
var 3..45: aux21500:: var_is_introduced ;
var bool: aux21501_BOOL:: var_is_introduced ;
var bool: aux21502_BOOL:: var_is_introduced ;
var bool: aux21503_BOOL:: var_is_introduced ;
var {0,1}: aux21503_INTEGER :: var_is_introduced ;
var 3..45: aux21504:: var_is_introduced ;
var bool: aux21505_BOOL:: var_is_introduced ;
var bool: aux21506_BOOL:: var_is_introduced ;
var bool: aux21507_BOOL:: var_is_introduced ;
var {0,1}: aux21507_INTEGER :: var_is_introduced ;
var 4..46: aux21508:: var_is_introduced ;
var bool: aux21509_BOOL:: var_is_introduced ;
var bool: aux21510_BOOL:: var_is_introduced ;
var bool: aux21511_BOOL:: var_is_introduced ;
var {0,1}: aux21511_INTEGER :: var_is_introduced ;
var 1..43: aux21512:: var_is_introduced ;
var bool: aux21513_BOOL:: var_is_introduced ;
var {0,1}: aux21513_INTEGER :: var_is_introduced ;
var 1..43: aux21514:: var_is_introduced ;
var bool: aux21515_BOOL:: var_is_introduced ;
var bool: aux21516_BOOL:: var_is_introduced ;
var bool: aux21517_BOOL:: var_is_introduced ;
var {0,1}: aux21517_INTEGER :: var_is_introduced ;
var 1..43: aux21518:: var_is_introduced ;
var bool: aux21519_BOOL:: var_is_introduced ;
var bool: aux21520_BOOL:: var_is_introduced ;
var bool: aux21521_BOOL:: var_is_introduced ;
var {0,1}: aux21521_INTEGER :: var_is_introduced ;
var 2..44: aux21522:: var_is_introduced ;
var bool: aux21523_BOOL:: var_is_introduced ;
var bool: aux21524_BOOL:: var_is_introduced ;
var bool: aux21525_BOOL:: var_is_introduced ;
var {0,1}: aux21525_INTEGER :: var_is_introduced ;
var 2..44: aux21526:: var_is_introduced ;
var bool: aux21527_BOOL:: var_is_introduced ;
var bool: aux21528_BOOL:: var_is_introduced ;
var bool: aux21529_BOOL:: var_is_introduced ;
var {0,1}: aux21529_INTEGER :: var_is_introduced ;
var 2..44: aux21530:: var_is_introduced ;
var bool: aux21531_BOOL:: var_is_introduced ;
var bool: aux21532_BOOL:: var_is_introduced ;
var bool: aux21533_BOOL:: var_is_introduced ;
var {0,1}: aux21533_INTEGER :: var_is_introduced ;
var 1..43: aux21534:: var_is_introduced ;
var bool: aux21535_BOOL:: var_is_introduced ;
var bool: aux21536_BOOL:: var_is_introduced ;
var bool: aux21537_BOOL:: var_is_introduced ;
var {0,1}: aux21537_INTEGER :: var_is_introduced ;
var 3..45: aux21538:: var_is_introduced ;
var bool: aux21539_BOOL:: var_is_introduced ;
var bool: aux21540_BOOL:: var_is_introduced ;
var bool: aux21541_BOOL:: var_is_introduced ;
var {0,1}: aux21541_INTEGER :: var_is_introduced ;
var 1..43: aux21542:: var_is_introduced ;
var bool: aux21543_BOOL:: var_is_introduced ;
var bool: aux21544_BOOL:: var_is_introduced ;
var bool: aux21545_BOOL:: var_is_introduced ;
var {0,1}: aux21545_INTEGER :: var_is_introduced ;
var 2..44: aux21546:: var_is_introduced ;
var bool: aux21547_BOOL:: var_is_introduced ;
var bool: aux21548_BOOL:: var_is_introduced ;
var bool: aux21549_BOOL:: var_is_introduced ;
var {0,1}: aux21549_INTEGER :: var_is_introduced ;
var 2..44: aux21550:: var_is_introduced ;
var bool: aux21551_BOOL:: var_is_introduced ;
var bool: aux21552_BOOL:: var_is_introduced ;
var bool: aux21553_BOOL:: var_is_introduced ;
var {0,1}: aux21553_INTEGER :: var_is_introduced ;
var 2..44: aux21554:: var_is_introduced ;
var bool: aux21555_BOOL:: var_is_introduced ;
var bool: aux21556_BOOL:: var_is_introduced ;
var bool: aux21557_BOOL:: var_is_introduced ;
var {0,1}: aux21557_INTEGER :: var_is_introduced ;
var 3..45: aux21558:: var_is_introduced ;
var bool: aux21559_BOOL:: var_is_introduced ;
var bool: aux21560_BOOL:: var_is_introduced ;
var bool: aux21561_BOOL:: var_is_introduced ;
var {0,1}: aux21561_INTEGER :: var_is_introduced ;
var 4..46: aux21562:: var_is_introduced ;
var bool: aux21563_BOOL:: var_is_introduced ;
var bool: aux21564_BOOL:: var_is_introduced ;
var bool: aux21565_BOOL:: var_is_introduced ;
var {0,1}: aux21565_INTEGER :: var_is_introduced ;
var 3..45: aux21566:: var_is_introduced ;
var bool: aux21567_BOOL:: var_is_introduced ;
var {0,1}: aux21567_INTEGER :: var_is_introduced ;
var 1..43: aux21568:: var_is_introduced ;
var bool: aux21569_BOOL:: var_is_introduced ;
var bool: aux21570_BOOL:: var_is_introduced ;
var bool: aux21571_BOOL:: var_is_introduced ;
var {0,1}: aux21571_INTEGER :: var_is_introduced ;
var 1..43: aux21572:: var_is_introduced ;
var bool: aux21573_BOOL:: var_is_introduced ;
var bool: aux21574_BOOL:: var_is_introduced ;
var bool: aux21575_BOOL:: var_is_introduced ;
var {0,1}: aux21575_INTEGER :: var_is_introduced ;
var 2..44: aux21576:: var_is_introduced ;
var bool: aux21577_BOOL:: var_is_introduced ;
var bool: aux21578_BOOL:: var_is_introduced ;
var bool: aux21579_BOOL:: var_is_introduced ;
var {0,1}: aux21579_INTEGER :: var_is_introduced ;
var 2..44: aux21580:: var_is_introduced ;
var bool: aux21581_BOOL:: var_is_introduced ;
var bool: aux21582_BOOL:: var_is_introduced ;
var bool: aux21583_BOOL:: var_is_introduced ;
var {0,1}: aux21583_INTEGER :: var_is_introduced ;
var 2..44: aux21584:: var_is_introduced ;
var bool: aux21585_BOOL:: var_is_introduced ;
var bool: aux21586_BOOL:: var_is_introduced ;
var bool: aux21587_BOOL:: var_is_introduced ;
var {0,1}: aux21587_INTEGER :: var_is_introduced ;
var 1..43: aux21588:: var_is_introduced ;
var bool: aux21589_BOOL:: var_is_introduced ;
var bool: aux21590_BOOL:: var_is_introduced ;
var bool: aux21591_BOOL:: var_is_introduced ;
var {0,1}: aux21591_INTEGER :: var_is_introduced ;
var 3..45: aux21592:: var_is_introduced ;
var bool: aux21593_BOOL:: var_is_introduced ;
var bool: aux21594_BOOL:: var_is_introduced ;
var bool: aux21595_BOOL:: var_is_introduced ;
var {0,1}: aux21595_INTEGER :: var_is_introduced ;
var 1..43: aux21596:: var_is_introduced ;
var bool: aux21597_BOOL:: var_is_introduced ;
var bool: aux21598_BOOL:: var_is_introduced ;
var bool: aux21599_BOOL:: var_is_introduced ;
var {0,1}: aux21599_INTEGER :: var_is_introduced ;
var 2..44: aux21600:: var_is_introduced ;
var bool: aux21601_BOOL:: var_is_introduced ;
var bool: aux21602_BOOL:: var_is_introduced ;
var bool: aux21603_BOOL:: var_is_introduced ;
var {0,1}: aux21603_INTEGER :: var_is_introduced ;
var 2..44: aux21604:: var_is_introduced ;
var bool: aux21605_BOOL:: var_is_introduced ;
var bool: aux21606_BOOL:: var_is_introduced ;
var bool: aux21607_BOOL:: var_is_introduced ;
var {0,1}: aux21607_INTEGER :: var_is_introduced ;
var 3..45: aux21608:: var_is_introduced ;
var bool: aux21609_BOOL:: var_is_introduced ;
var bool: aux21610_BOOL:: var_is_introduced ;
var bool: aux21611_BOOL:: var_is_introduced ;
var {0,1}: aux21611_INTEGER :: var_is_introduced ;
var 3..45: aux21612:: var_is_introduced ;
var bool: aux21613_BOOL:: var_is_introduced ;
var bool: aux21614_BOOL:: var_is_introduced ;
var bool: aux21615_BOOL:: var_is_introduced ;
var {0,1}: aux21615_INTEGER :: var_is_introduced ;
var 4..46: aux21616:: var_is_introduced ;
var bool: aux21617_BOOL:: var_is_introduced ;
var bool: aux21618_BOOL:: var_is_introduced ;
var bool: aux21619_BOOL:: var_is_introduced ;
var {0,1}: aux21619_INTEGER :: var_is_introduced ;
var 2..44: aux21620:: var_is_introduced ;
var bool: aux21621_BOOL:: var_is_introduced ;
var {0,1}: aux21621_INTEGER :: var_is_introduced ;
var 2..44: aux21622:: var_is_introduced ;
var bool: aux21623_BOOL:: var_is_introduced ;
var bool: aux21624_BOOL:: var_is_introduced ;
var bool: aux21625_BOOL:: var_is_introduced ;
var {0,1}: aux21625_INTEGER :: var_is_introduced ;
var 2..44: aux21626:: var_is_introduced ;
var bool: aux21627_BOOL:: var_is_introduced ;
var bool: aux21628_BOOL:: var_is_introduced ;
var bool: aux21629_BOOL:: var_is_introduced ;
var {0,1}: aux21629_INTEGER :: var_is_introduced ;
var 3..45: aux21630:: var_is_introduced ;
var bool: aux21631_BOOL:: var_is_introduced ;
var bool: aux21632_BOOL:: var_is_introduced ;
var bool: aux21633_BOOL:: var_is_introduced ;
var {0,1}: aux21633_INTEGER :: var_is_introduced ;
var 1..43: aux21634:: var_is_introduced ;
var bool: aux21635_BOOL:: var_is_introduced ;
var bool: aux21636_BOOL:: var_is_introduced ;
var bool: aux21637_BOOL:: var_is_introduced ;
var {0,1}: aux21637_INTEGER :: var_is_introduced ;
var 3..45: aux21638:: var_is_introduced ;
var bool: aux21639_BOOL:: var_is_introduced ;
var bool: aux21640_BOOL:: var_is_introduced ;
var bool: aux21641_BOOL:: var_is_introduced ;
var {0,1}: aux21641_INTEGER :: var_is_introduced ;
var 1..43: aux21642:: var_is_introduced ;
var bool: aux21643_BOOL:: var_is_introduced ;
var bool: aux21644_BOOL:: var_is_introduced ;
var bool: aux21645_BOOL:: var_is_introduced ;
var {0,1}: aux21645_INTEGER :: var_is_introduced ;
var 2..44: aux21646:: var_is_introduced ;
var bool: aux21647_BOOL:: var_is_introduced ;
var bool: aux21648_BOOL:: var_is_introduced ;
var bool: aux21649_BOOL:: var_is_introduced ;
var {0,1}: aux21649_INTEGER :: var_is_introduced ;
var 2..44: aux21650:: var_is_introduced ;
var bool: aux21651_BOOL:: var_is_introduced ;
var bool: aux21652_BOOL:: var_is_introduced ;
var bool: aux21653_BOOL:: var_is_introduced ;
var {0,1}: aux21653_INTEGER :: var_is_introduced ;
var 4..46: aux21654:: var_is_introduced ;
var bool: aux21655_BOOL:: var_is_introduced ;
var bool: aux21656_BOOL:: var_is_introduced ;
var bool: aux21657_BOOL:: var_is_introduced ;
var {0,1}: aux21657_INTEGER :: var_is_introduced ;
var 3..45: aux21658:: var_is_introduced ;
var bool: aux21659_BOOL:: var_is_introduced ;
var bool: aux21660_BOOL:: var_is_introduced ;
var bool: aux21661_BOOL:: var_is_introduced ;
var {0,1}: aux21661_INTEGER :: var_is_introduced ;
var 1..43: aux21662:: var_is_introduced ;
var bool: aux21663_BOOL:: var_is_introduced ;
var {0,1}: aux21663_INTEGER :: var_is_introduced ;
var 1..43: aux21664:: var_is_introduced ;
var bool: aux21665_BOOL:: var_is_introduced ;
var bool: aux21666_BOOL:: var_is_introduced ;
var bool: aux21667_BOOL:: var_is_introduced ;
var {0,1}: aux21667_INTEGER :: var_is_introduced ;
var 2..44: aux21668:: var_is_introduced ;
var bool: aux21669_BOOL:: var_is_introduced ;
var bool: aux21670_BOOL:: var_is_introduced ;
var bool: aux21671_BOOL:: var_is_introduced ;
var {0,1}: aux21671_INTEGER :: var_is_introduced ;
var 2..44: aux21672:: var_is_introduced ;
var bool: aux21673_BOOL:: var_is_introduced ;
var bool: aux21674_BOOL:: var_is_introduced ;
var bool: aux21675_BOOL:: var_is_introduced ;
var {0,1}: aux21675_INTEGER :: var_is_introduced ;
var 1..43: aux21676:: var_is_introduced ;
var bool: aux21677_BOOL:: var_is_introduced ;
var bool: aux21678_BOOL:: var_is_introduced ;
var bool: aux21679_BOOL:: var_is_introduced ;
var {0,1}: aux21679_INTEGER :: var_is_introduced ;
var 3..45: aux21680:: var_is_introduced ;
var bool: aux21681_BOOL:: var_is_introduced ;
var bool: aux21682_BOOL:: var_is_introduced ;
var bool: aux21683_BOOL:: var_is_introduced ;
var {0,1}: aux21683_INTEGER :: var_is_introduced ;
var 1..43: aux21684:: var_is_introduced ;
var bool: aux21685_BOOL:: var_is_introduced ;
var bool: aux21686_BOOL:: var_is_introduced ;
var bool: aux21687_BOOL:: var_is_introduced ;
var {0,1}: aux21687_INTEGER :: var_is_introduced ;
var 2..44: aux21688:: var_is_introduced ;
var bool: aux21689_BOOL:: var_is_introduced ;
var bool: aux21690_BOOL:: var_is_introduced ;
var bool: aux21691_BOOL:: var_is_introduced ;
var {0,1}: aux21691_INTEGER :: var_is_introduced ;
var 2..44: aux21692:: var_is_introduced ;
var bool: aux21693_BOOL:: var_is_introduced ;
var bool: aux21694_BOOL:: var_is_introduced ;
var bool: aux21695_BOOL:: var_is_introduced ;
var {0,1}: aux21695_INTEGER :: var_is_introduced ;
var 4..46: aux21696:: var_is_introduced ;
var bool: aux21697_BOOL:: var_is_introduced ;
var bool: aux21698_BOOL:: var_is_introduced ;
var bool: aux21699_BOOL:: var_is_introduced ;
var {0,1}: aux21699_INTEGER :: var_is_introduced ;
var 3..45: aux21700:: var_is_introduced ;
var bool: aux21701_BOOL:: var_is_introduced ;
var bool: aux21702_BOOL:: var_is_introduced ;
var bool: aux21703_BOOL:: var_is_introduced ;
var {0,1}: aux21703_INTEGER :: var_is_introduced ;
var 3..45: aux21704:: var_is_introduced ;
var bool: aux21705_BOOL:: var_is_introduced ;
var {0,1}: aux21705_INTEGER :: var_is_introduced ;
var 1..43: aux21706:: var_is_introduced ;
var bool: aux21707_BOOL:: var_is_introduced ;
var bool: aux21708_BOOL:: var_is_introduced ;
var bool: aux21709_BOOL:: var_is_introduced ;
var {0,1}: aux21709_INTEGER :: var_is_introduced ;
var 2..44: aux21710:: var_is_introduced ;
var bool: aux21711_BOOL:: var_is_introduced ;
var bool: aux21712_BOOL:: var_is_introduced ;
var bool: aux21713_BOOL:: var_is_introduced ;
var {0,1}: aux21713_INTEGER :: var_is_introduced ;
var 2..44: aux21714:: var_is_introduced ;
var bool: aux21715_BOOL:: var_is_introduced ;
var bool: aux21716_BOOL:: var_is_introduced ;
var bool: aux21717_BOOL:: var_is_introduced ;
var {0,1}: aux21717_INTEGER :: var_is_introduced ;
var 3..45: aux21718:: var_is_introduced ;
var bool: aux21719_BOOL:: var_is_introduced ;
var bool: aux21720_BOOL:: var_is_introduced ;
var bool: aux21721_BOOL:: var_is_introduced ;
var {0,1}: aux21721_INTEGER :: var_is_introduced ;
var 1..43: aux21722:: var_is_introduced ;
var bool: aux21723_BOOL:: var_is_introduced ;
var bool: aux21724_BOOL:: var_is_introduced ;
var bool: aux21725_BOOL:: var_is_introduced ;
var {0,1}: aux21725_INTEGER :: var_is_introduced ;
var 1..43: aux21726:: var_is_introduced ;
var bool: aux21727_BOOL:: var_is_introduced ;
var bool: aux21728_BOOL:: var_is_introduced ;
var bool: aux21729_BOOL:: var_is_introduced ;
var {0,1}: aux21729_INTEGER :: var_is_introduced ;
var 2..44: aux21730:: var_is_introduced ;
var bool: aux21731_BOOL:: var_is_introduced ;
var bool: aux21732_BOOL:: var_is_introduced ;
var bool: aux21733_BOOL:: var_is_introduced ;
var {0,1}: aux21733_INTEGER :: var_is_introduced ;
var 2..44: aux21734:: var_is_introduced ;
var bool: aux21735_BOOL:: var_is_introduced ;
var bool: aux21736_BOOL:: var_is_introduced ;
var bool: aux21737_BOOL:: var_is_introduced ;
var {0,1}: aux21737_INTEGER :: var_is_introduced ;
var 4..46: aux21738:: var_is_introduced ;
var bool: aux21739_BOOL:: var_is_introduced ;
var bool: aux21740_BOOL:: var_is_introduced ;
var bool: aux21741_BOOL:: var_is_introduced ;
var {0,1}: aux21741_INTEGER :: var_is_introduced ;
var 3..45: aux21742:: var_is_introduced ;
var bool: aux21743_BOOL:: var_is_introduced ;
var bool: aux21744_BOOL:: var_is_introduced ;
var bool: aux21745_BOOL:: var_is_introduced ;
var {0,1}: aux21745_INTEGER :: var_is_introduced ;
var 3..45: aux21746:: var_is_introduced ;
var bool: aux21747_BOOL:: var_is_introduced ;
var {0,1}: aux21747_INTEGER :: var_is_introduced ;
var 1..43: aux21748:: var_is_introduced ;
var bool: aux21749_BOOL:: var_is_introduced ;
var bool: aux21750_BOOL:: var_is_introduced ;
var bool: aux21751_BOOL:: var_is_introduced ;
var {0,1}: aux21751_INTEGER :: var_is_introduced ;
var 2..44: aux21752:: var_is_introduced ;
var bool: aux21753_BOOL:: var_is_introduced ;
var bool: aux21754_BOOL:: var_is_introduced ;
var bool: aux21755_BOOL:: var_is_introduced ;
var {0,1}: aux21755_INTEGER :: var_is_introduced ;
var 3..45: aux21756:: var_is_introduced ;
var bool: aux21757_BOOL:: var_is_introduced ;
var bool: aux21758_BOOL:: var_is_introduced ;
var bool: aux21759_BOOL:: var_is_introduced ;
var {0,1}: aux21759_INTEGER :: var_is_introduced ;
var 1..43: aux21760:: var_is_introduced ;
var bool: aux21761_BOOL:: var_is_introduced ;
var bool: aux21762_BOOL:: var_is_introduced ;
var bool: aux21763_BOOL:: var_is_introduced ;
var {0,1}: aux21763_INTEGER :: var_is_introduced ;
var 3..45: aux21764:: var_is_introduced ;
var bool: aux21765_BOOL:: var_is_introduced ;
var bool: aux21766_BOOL:: var_is_introduced ;
var bool: aux21767_BOOL:: var_is_introduced ;
var {0,1}: aux21767_INTEGER :: var_is_introduced ;
var 1..43: aux21768:: var_is_introduced ;
var bool: aux21769_BOOL:: var_is_introduced ;
var bool: aux21770_BOOL:: var_is_introduced ;
var bool: aux21771_BOOL:: var_is_introduced ;
var {0,1}: aux21771_INTEGER :: var_is_introduced ;
var 2..44: aux21772:: var_is_introduced ;
var bool: aux21773_BOOL:: var_is_introduced ;
var bool: aux21774_BOOL:: var_is_introduced ;
var bool: aux21775_BOOL:: var_is_introduced ;
var {0,1}: aux21775_INTEGER :: var_is_introduced ;
var 2..44: aux21776:: var_is_introduced ;
var bool: aux21777_BOOL:: var_is_introduced ;
var bool: aux21778_BOOL:: var_is_introduced ;
var bool: aux21779_BOOL:: var_is_introduced ;
var {0,1}: aux21779_INTEGER :: var_is_introduced ;
var 4..46: aux21780:: var_is_introduced ;
var bool: aux21781_BOOL:: var_is_introduced ;
var bool: aux21782_BOOL:: var_is_introduced ;
var bool: aux21783_BOOL:: var_is_introduced ;
var {0,1}: aux21783_INTEGER :: var_is_introduced ;
var 3..45: aux21784:: var_is_introduced ;
var bool: aux21785_BOOL:: var_is_introduced ;
var bool: aux21786_BOOL:: var_is_introduced ;
var bool: aux21787_BOOL:: var_is_introduced ;
var {0,1}: aux21787_INTEGER :: var_is_introduced ;
var 2..44: aux21788:: var_is_introduced ;
var bool: aux21789_BOOL:: var_is_introduced ;
var {0,1}: aux21789_INTEGER :: var_is_introduced ;
var 1..43: aux21790:: var_is_introduced ;
var bool: aux21791_BOOL:: var_is_introduced ;
var bool: aux21792_BOOL:: var_is_introduced ;
var bool: aux21793_BOOL:: var_is_introduced ;
var {0,1}: aux21793_INTEGER :: var_is_introduced ;
var 2..44: aux21794:: var_is_introduced ;
var bool: aux21795_BOOL:: var_is_introduced ;
var bool: aux21796_BOOL:: var_is_introduced ;
var bool: aux21797_BOOL:: var_is_introduced ;
var {0,1}: aux21797_INTEGER :: var_is_introduced ;
var 3..45: aux21798:: var_is_introduced ;
var bool: aux21799_BOOL:: var_is_introduced ;
var bool: aux21800_BOOL:: var_is_introduced ;
var bool: aux21801_BOOL:: var_is_introduced ;
var {0,1}: aux21801_INTEGER :: var_is_introduced ;
var 1..43: aux21802:: var_is_introduced ;
var bool: aux21803_BOOL:: var_is_introduced ;
var bool: aux21804_BOOL:: var_is_introduced ;
var bool: aux21805_BOOL:: var_is_introduced ;
var {0,1}: aux21805_INTEGER :: var_is_introduced ;
var 3..45: aux21806:: var_is_introduced ;
var bool: aux21807_BOOL:: var_is_introduced ;
var bool: aux21808_BOOL:: var_is_introduced ;
var bool: aux21809_BOOL:: var_is_introduced ;
var {0,1}: aux21809_INTEGER :: var_is_introduced ;
var 1..43: aux21810:: var_is_introduced ;
var bool: aux21811_BOOL:: var_is_introduced ;
var bool: aux21812_BOOL:: var_is_introduced ;
var bool: aux21813_BOOL:: var_is_introduced ;
var {0,1}: aux21813_INTEGER :: var_is_introduced ;
var 2..44: aux21814:: var_is_introduced ;
var bool: aux21815_BOOL:: var_is_introduced ;
var bool: aux21816_BOOL:: var_is_introduced ;
var bool: aux21817_BOOL:: var_is_introduced ;
var {0,1}: aux21817_INTEGER :: var_is_introduced ;
var 2..44: aux21818:: var_is_introduced ;
var bool: aux21819_BOOL:: var_is_introduced ;
var bool: aux21820_BOOL:: var_is_introduced ;
var bool: aux21821_BOOL:: var_is_introduced ;
var {0,1}: aux21821_INTEGER :: var_is_introduced ;
var 4..46: aux21822:: var_is_introduced ;
var bool: aux21823_BOOL:: var_is_introduced ;
var bool: aux21824_BOOL:: var_is_introduced ;
var bool: aux21825_BOOL:: var_is_introduced ;
var {0,1}: aux21825_INTEGER :: var_is_introduced ;
var 3..45: aux21826:: var_is_introduced ;
var bool: aux21827_BOOL:: var_is_introduced ;
var bool: aux21828_BOOL:: var_is_introduced ;
var bool: aux21829_BOOL:: var_is_introduced ;
var {0,1}: aux21829_INTEGER :: var_is_introduced ;
var 2..44: aux21830:: var_is_introduced ;
var bool: aux21831_BOOL:: var_is_introduced ;
var {0,1}: aux21831_INTEGER :: var_is_introduced ;
var 1..43: aux21832:: var_is_introduced ;
var bool: aux21833_BOOL:: var_is_introduced ;
var bool: aux21834_BOOL:: var_is_introduced ;
var bool: aux21835_BOOL:: var_is_introduced ;
var {0,1}: aux21835_INTEGER :: var_is_introduced ;
var 2..44: aux21836:: var_is_introduced ;
var bool: aux21837_BOOL:: var_is_introduced ;
var bool: aux21838_BOOL:: var_is_introduced ;
var bool: aux21839_BOOL:: var_is_introduced ;
var {0,1}: aux21839_INTEGER :: var_is_introduced ;
var 2..44: aux21840:: var_is_introduced ;
var bool: aux21841_BOOL:: var_is_introduced ;
var bool: aux21842_BOOL:: var_is_introduced ;
var bool: aux21843_BOOL:: var_is_introduced ;
var {0,1}: aux21843_INTEGER :: var_is_introduced ;
var 3..45: aux21844:: var_is_introduced ;
var bool: aux21845_BOOL:: var_is_introduced ;
var bool: aux21846_BOOL:: var_is_introduced ;
var bool: aux21847_BOOL:: var_is_introduced ;
var {0,1}: aux21847_INTEGER :: var_is_introduced ;
var 1..43: aux21848:: var_is_introduced ;
var bool: aux21849_BOOL:: var_is_introduced ;
var bool: aux21850_BOOL:: var_is_introduced ;
var bool: aux21851_BOOL:: var_is_introduced ;
var {0,1}: aux21851_INTEGER :: var_is_introduced ;
var 3..45: aux21852:: var_is_introduced ;
var bool: aux21853_BOOL:: var_is_introduced ;
var bool: aux21854_BOOL:: var_is_introduced ;
var bool: aux21855_BOOL:: var_is_introduced ;
var {0,1}: aux21855_INTEGER :: var_is_introduced ;
var 1..43: aux21856:: var_is_introduced ;
var bool: aux21857_BOOL:: var_is_introduced ;
var bool: aux21858_BOOL:: var_is_introduced ;
var bool: aux21859_BOOL:: var_is_introduced ;
var {0,1}: aux21859_INTEGER :: var_is_introduced ;
var 2..44: aux21860:: var_is_introduced ;
var bool: aux21861_BOOL:: var_is_introduced ;
var bool: aux21862_BOOL:: var_is_introduced ;
var bool: aux21863_BOOL:: var_is_introduced ;
var {0,1}: aux21863_INTEGER :: var_is_introduced ;
var 4..46: aux21864:: var_is_introduced ;
var bool: aux21865_BOOL:: var_is_introduced ;
var bool: aux21866_BOOL:: var_is_introduced ;
var bool: aux21867_BOOL:: var_is_introduced ;
var {0,1}: aux21867_INTEGER :: var_is_introduced ;
var 3..45: aux21868:: var_is_introduced ;
var bool: aux21869_BOOL:: var_is_introduced ;
var bool: aux21870_BOOL:: var_is_introduced ;
var bool: aux21871_BOOL:: var_is_introduced ;
var {0,1}: aux21871_INTEGER :: var_is_introduced ;
var 2..44: aux21872:: var_is_introduced ;
var bool: aux21873_BOOL:: var_is_introduced ;
var {0,1}: aux21873_INTEGER :: var_is_introduced ;
var 1..43: aux21874:: var_is_introduced ;
var bool: aux21875_BOOL:: var_is_introduced ;
var bool: aux21876_BOOL:: var_is_introduced ;
var bool: aux21877_BOOL:: var_is_introduced ;
var {0,1}: aux21877_INTEGER :: var_is_introduced ;
var 2..44: aux21878:: var_is_introduced ;
var bool: aux21879_BOOL:: var_is_introduced ;
var bool: aux21880_BOOL:: var_is_introduced ;
var bool: aux21881_BOOL:: var_is_introduced ;
var {0,1}: aux21881_INTEGER :: var_is_introduced ;
var 2..44: aux21882:: var_is_introduced ;
var bool: aux21883_BOOL:: var_is_introduced ;
var bool: aux21884_BOOL:: var_is_introduced ;
var bool: aux21885_BOOL:: var_is_introduced ;
var {0,1}: aux21885_INTEGER :: var_is_introduced ;
var 3..45: aux21886:: var_is_introduced ;
var bool: aux21887_BOOL:: var_is_introduced ;
var bool: aux21888_BOOL:: var_is_introduced ;
var bool: aux21889_BOOL:: var_is_introduced ;
var {0,1}: aux21889_INTEGER :: var_is_introduced ;
var 3..45: aux21890:: var_is_introduced ;
var bool: aux21891_BOOL:: var_is_introduced ;
var bool: aux21892_BOOL:: var_is_introduced ;
var bool: aux21893_BOOL:: var_is_introduced ;
var {0,1}: aux21893_INTEGER :: var_is_introduced ;
var 1..43: aux21894:: var_is_introduced ;
var bool: aux21895_BOOL:: var_is_introduced ;
var bool: aux21896_BOOL:: var_is_introduced ;
var bool: aux21897_BOOL:: var_is_introduced ;
var {0,1}: aux21897_INTEGER :: var_is_introduced ;
var 2..44: aux21898:: var_is_introduced ;
var bool: aux21899_BOOL:: var_is_introduced ;
var bool: aux21900_BOOL:: var_is_introduced ;
var bool: aux21901_BOOL:: var_is_introduced ;
var {0,1}: aux21901_INTEGER :: var_is_introduced ;
var 2..44: aux21902:: var_is_introduced ;
var bool: aux21903_BOOL:: var_is_introduced ;
var bool: aux21904_BOOL:: var_is_introduced ;
var bool: aux21905_BOOL:: var_is_introduced ;
var {0,1}: aux21905_INTEGER :: var_is_introduced ;
var 4..46: aux21906:: var_is_introduced ;
var bool: aux21907_BOOL:: var_is_introduced ;
var bool: aux21908_BOOL:: var_is_introduced ;
var bool: aux21909_BOOL:: var_is_introduced ;
var {0,1}: aux21909_INTEGER :: var_is_introduced ;
var 3..45: aux21910:: var_is_introduced ;
var bool: aux21911_BOOL:: var_is_introduced ;
var bool: aux21912_BOOL:: var_is_introduced ;
var bool: aux21913_BOOL:: var_is_introduced ;
var {0,1}: aux21913_INTEGER :: var_is_introduced ;
var 1..43: aux21914:: var_is_introduced ;
var bool: aux21915_BOOL:: var_is_introduced ;
var {0,1}: aux21915_INTEGER :: var_is_introduced ;
var 1..43: aux21916:: var_is_introduced ;
var bool: aux21917_BOOL:: var_is_introduced ;
var bool: aux21918_BOOL:: var_is_introduced ;
var bool: aux21919_BOOL:: var_is_introduced ;
var {0,1}: aux21919_INTEGER :: var_is_introduced ;
var 2..44: aux21920:: var_is_introduced ;
var bool: aux21921_BOOL:: var_is_introduced ;
var bool: aux21922_BOOL:: var_is_introduced ;
var bool: aux21923_BOOL:: var_is_introduced ;
var {0,1}: aux21923_INTEGER :: var_is_introduced ;
var 2..44: aux21924:: var_is_introduced ;
var bool: aux21925_BOOL:: var_is_introduced ;
var bool: aux21926_BOOL:: var_is_introduced ;
var bool: aux21927_BOOL:: var_is_introduced ;
var {0,1}: aux21927_INTEGER :: var_is_introduced ;
var 3..45: aux21928:: var_is_introduced ;
var bool: aux21929_BOOL:: var_is_introduced ;
var bool: aux21930_BOOL:: var_is_introduced ;
var bool: aux21931_BOOL:: var_is_introduced ;
var {0,1}: aux21931_INTEGER :: var_is_introduced ;
var 1..43: aux21932:: var_is_introduced ;
var bool: aux21933_BOOL:: var_is_introduced ;
var bool: aux21934_BOOL:: var_is_introduced ;
var bool: aux21935_BOOL:: var_is_introduced ;
var {0,1}: aux21935_INTEGER :: var_is_introduced ;
var 3..45: aux21936:: var_is_introduced ;
var bool: aux21937_BOOL:: var_is_introduced ;
var bool: aux21938_BOOL:: var_is_introduced ;
var bool: aux21939_BOOL:: var_is_introduced ;
var {0,1}: aux21939_INTEGER :: var_is_introduced ;
var 1..43: aux21940:: var_is_introduced ;
var bool: aux21941_BOOL:: var_is_introduced ;
var bool: aux21942_BOOL:: var_is_introduced ;
var bool: aux21943_BOOL:: var_is_introduced ;
var {0,1}: aux21943_INTEGER :: var_is_introduced ;
var 2..44: aux21944:: var_is_introduced ;
var bool: aux21945_BOOL:: var_is_introduced ;
var bool: aux21946_BOOL:: var_is_introduced ;
var bool: aux21947_BOOL:: var_is_introduced ;
var {0,1}: aux21947_INTEGER :: var_is_introduced ;
var 2..44: aux21948:: var_is_introduced ;
var bool: aux21949_BOOL:: var_is_introduced ;
var bool: aux21950_BOOL:: var_is_introduced ;
var bool: aux21951_BOOL:: var_is_introduced ;
var {0,1}: aux21951_INTEGER :: var_is_introduced ;
var 3..45: aux21952:: var_is_introduced ;
var bool: aux21953_BOOL:: var_is_introduced ;
var bool: aux21954_BOOL:: var_is_introduced ;
var bool: aux21955_BOOL:: var_is_introduced ;
var {0,1}: aux21955_INTEGER :: var_is_introduced ;
var 4..46: aux21956:: var_is_introduced ;
var bool: aux21957_BOOL:: var_is_introduced ;
var {0,1}: aux21957_INTEGER :: var_is_introduced ;
var 1..43: aux21958:: var_is_introduced ;
var bool: aux21959_BOOL:: var_is_introduced ;
var bool: aux21960_BOOL:: var_is_introduced ;
var bool: aux21961_BOOL:: var_is_introduced ;
var {0,1}: aux21961_INTEGER :: var_is_introduced ;
var 2..44: aux21962:: var_is_introduced ;
var bool: aux21963_BOOL:: var_is_introduced ;
var bool: aux21964_BOOL:: var_is_introduced ;
var bool: aux21965_BOOL:: var_is_introduced ;
var {0,1}: aux21965_INTEGER :: var_is_introduced ;
var 2..44: aux21966:: var_is_introduced ;
var bool: aux21967_BOOL:: var_is_introduced ;
var bool: aux21968_BOOL:: var_is_introduced ;
var bool: aux21969_BOOL:: var_is_introduced ;
var {0,1}: aux21969_INTEGER :: var_is_introduced ;
var 3..45: aux21970:: var_is_introduced ;
var bool: aux21971_BOOL:: var_is_introduced ;
var bool: aux21972_BOOL:: var_is_introduced ;
var bool: aux21973_BOOL:: var_is_introduced ;
var {0,1}: aux21973_INTEGER :: var_is_introduced ;
var 1..43: aux21974:: var_is_introduced ;
var bool: aux21975_BOOL:: var_is_introduced ;
var bool: aux21976_BOOL:: var_is_introduced ;
var bool: aux21977_BOOL:: var_is_introduced ;
var {0,1}: aux21977_INTEGER :: var_is_introduced ;
var 3..45: aux21978:: var_is_introduced ;
var bool: aux21979_BOOL:: var_is_introduced ;
var bool: aux21980_BOOL:: var_is_introduced ;
var bool: aux21981_BOOL:: var_is_introduced ;
var {0,1}: aux21981_INTEGER :: var_is_introduced ;
var 2..44: aux21982:: var_is_introduced ;
var bool: aux21983_BOOL:: var_is_introduced ;
var bool: aux21984_BOOL:: var_is_introduced ;
var bool: aux21985_BOOL:: var_is_introduced ;
var {0,1}: aux21985_INTEGER :: var_is_introduced ;
var 2..44: aux21986:: var_is_introduced ;
var bool: aux21987_BOOL:: var_is_introduced ;
var bool: aux21988_BOOL:: var_is_introduced ;
var bool: aux21989_BOOL:: var_is_introduced ;
var {0,1}: aux21989_INTEGER :: var_is_introduced ;
var 4..46: aux21990:: var_is_introduced ;
var bool: aux21991_BOOL:: var_is_introduced ;
var bool: aux21992_BOOL:: var_is_introduced ;
var bool: aux21993_BOOL:: var_is_introduced ;
var {0,1}: aux21993_INTEGER :: var_is_introduced ;
var 3..45: aux21994:: var_is_introduced ;
var bool: aux21995_BOOL:: var_is_introduced ;
var bool: aux21996_BOOL:: var_is_introduced ;
var bool: aux21997_BOOL:: var_is_introduced ;
var {0,1}: aux21997_INTEGER :: var_is_introduced ;
var 1..43: aux21998:: var_is_introduced ;
var bool: aux21999_BOOL:: var_is_introduced ;
var {0,1}: aux21999_INTEGER :: var_is_introduced ;
var 1..43: aux22000:: var_is_introduced ;
var bool: aux22001_BOOL:: var_is_introduced ;
var bool: aux22002_BOOL:: var_is_introduced ;
var bool: aux22003_BOOL:: var_is_introduced ;
var {0,1}: aux22003_INTEGER :: var_is_introduced ;
var 2..44: aux22004:: var_is_introduced ;
var bool: aux22005_BOOL:: var_is_introduced ;
var bool: aux22006_BOOL:: var_is_introduced ;
var bool: aux22007_BOOL:: var_is_introduced ;
var {0,1}: aux22007_INTEGER :: var_is_introduced ;
var 2..44: aux22008:: var_is_introduced ;
var bool: aux22009_BOOL:: var_is_introduced ;
var bool: aux22010_BOOL:: var_is_introduced ;
var bool: aux22011_BOOL:: var_is_introduced ;
var {0,1}: aux22011_INTEGER :: var_is_introduced ;
var 3..45: aux22012:: var_is_introduced ;
var bool: aux22013_BOOL:: var_is_introduced ;
var bool: aux22014_BOOL:: var_is_introduced ;
var bool: aux22015_BOOL:: var_is_introduced ;
var {0,1}: aux22015_INTEGER :: var_is_introduced ;
var 1..43: aux22016:: var_is_introduced ;
var bool: aux22017_BOOL:: var_is_introduced ;
var bool: aux22018_BOOL:: var_is_introduced ;
var bool: aux22019_BOOL:: var_is_introduced ;
var {0,1}: aux22019_INTEGER :: var_is_introduced ;
var 3..45: aux22020:: var_is_introduced ;
var bool: aux22021_BOOL:: var_is_introduced ;
var bool: aux22022_BOOL:: var_is_introduced ;
var bool: aux22023_BOOL:: var_is_introduced ;
var {0,1}: aux22023_INTEGER :: var_is_introduced ;
var 1..43: aux22024:: var_is_introduced ;
var bool: aux22025_BOOL:: var_is_introduced ;
var bool: aux22026_BOOL:: var_is_introduced ;
var bool: aux22027_BOOL:: var_is_introduced ;
var {0,1}: aux22027_INTEGER :: var_is_introduced ;
var 2..44: aux22028:: var_is_introduced ;
var bool: aux22029_BOOL:: var_is_introduced ;
var bool: aux22030_BOOL:: var_is_introduced ;
var bool: aux22031_BOOL:: var_is_introduced ;
var {0,1}: aux22031_INTEGER :: var_is_introduced ;
var 4..46: aux22032:: var_is_introduced ;
var bool: aux22033_BOOL:: var_is_introduced ;
var bool: aux22034_BOOL:: var_is_introduced ;
var bool: aux22035_BOOL:: var_is_introduced ;
var {0,1}: aux22035_INTEGER :: var_is_introduced ;
var 3..45: aux22036:: var_is_introduced ;
var bool: aux22037_BOOL:: var_is_introduced ;
var bool: aux22038_BOOL:: var_is_introduced ;
var bool: aux22039_BOOL:: var_is_introduced ;
var {0,1}: aux22039_INTEGER :: var_is_introduced ;
var 2..44: aux22040:: var_is_introduced ;
var bool: aux22041_BOOL:: var_is_introduced ;
var {0,1}: aux22041_INTEGER :: var_is_introduced ;
var 1..43: aux22042:: var_is_introduced ;
var bool: aux22043_BOOL:: var_is_introduced ;
var bool: aux22044_BOOL:: var_is_introduced ;
var bool: aux22045_BOOL:: var_is_introduced ;
var {0,1}: aux22045_INTEGER :: var_is_introduced ;
var 2..44: aux22046:: var_is_introduced ;
var bool: aux22047_BOOL:: var_is_introduced ;
var bool: aux22048_BOOL:: var_is_introduced ;
var bool: aux22049_BOOL:: var_is_introduced ;
var {0,1}: aux22049_INTEGER :: var_is_introduced ;
var 2..44: aux22050:: var_is_introduced ;
var bool: aux22051_BOOL:: var_is_introduced ;
var bool: aux22052_BOOL:: var_is_introduced ;
var bool: aux22053_BOOL:: var_is_introduced ;
var {0,1}: aux22053_INTEGER :: var_is_introduced ;
var 3..45: aux22054:: var_is_introduced ;
var bool: aux22055_BOOL:: var_is_introduced ;
var bool: aux22056_BOOL:: var_is_introduced ;
var bool: aux22057_BOOL:: var_is_introduced ;
var {0,1}: aux22057_INTEGER :: var_is_introduced ;
var 1..43: aux22058:: var_is_introduced ;
var bool: aux22059_BOOL:: var_is_introduced ;
var bool: aux22060_BOOL:: var_is_introduced ;
var bool: aux22061_BOOL:: var_is_introduced ;
var {0,1}: aux22061_INTEGER :: var_is_introduced ;
var 3..45: aux22062:: var_is_introduced ;
var bool: aux22063_BOOL:: var_is_introduced ;
var bool: aux22064_BOOL:: var_is_introduced ;
var bool: aux22065_BOOL:: var_is_introduced ;
var {0,1}: aux22065_INTEGER :: var_is_introduced ;
var 1..43: aux22066:: var_is_introduced ;
var bool: aux22067_BOOL:: var_is_introduced ;
var bool: aux22068_BOOL:: var_is_introduced ;
var bool: aux22069_BOOL:: var_is_introduced ;
var {0,1}: aux22069_INTEGER :: var_is_introduced ;
var 2..44: aux22070:: var_is_introduced ;
var bool: aux22071_BOOL:: var_is_introduced ;
var bool: aux22072_BOOL:: var_is_introduced ;
var bool: aux22073_BOOL:: var_is_introduced ;
var {0,1}: aux22073_INTEGER :: var_is_introduced ;
var 2..44: aux22074:: var_is_introduced ;
var bool: aux22075_BOOL:: var_is_introduced ;
var bool: aux22076_BOOL:: var_is_introduced ;
var bool: aux22077_BOOL:: var_is_introduced ;
var {0,1}: aux22077_INTEGER :: var_is_introduced ;
var 4..46: aux22078:: var_is_introduced ;
var bool: aux22079_BOOL:: var_is_introduced ;
var bool: aux22080_BOOL:: var_is_introduced ;
var bool: aux22081_BOOL:: var_is_introduced ;
var {0,1}: aux22081_INTEGER :: var_is_introduced ;
var 3..45: aux22082:: var_is_introduced ;
var bool: aux22083_BOOL:: var_is_introduced ;
var {0,1}: aux22083_INTEGER :: var_is_introduced ;
var 1..43: aux22084:: var_is_introduced ;
var bool: aux22085_BOOL:: var_is_introduced ;
var bool: aux22086_BOOL:: var_is_introduced ;
var bool: aux22087_BOOL:: var_is_introduced ;
var {0,1}: aux22087_INTEGER :: var_is_introduced ;
var 2..44: aux22088:: var_is_introduced ;
var bool: aux22089_BOOL:: var_is_introduced ;
var bool: aux22090_BOOL:: var_is_introduced ;
var bool: aux22091_BOOL:: var_is_introduced ;
var {0,1}: aux22091_INTEGER :: var_is_introduced ;
var 2..44: aux22092:: var_is_introduced ;
var bool: aux22093_BOOL:: var_is_introduced ;
var bool: aux22094_BOOL:: var_is_introduced ;
var bool: aux22095_BOOL:: var_is_introduced ;
var {0,1}: aux22095_INTEGER :: var_is_introduced ;
var 3..45: aux22096:: var_is_introduced ;
var bool: aux22097_BOOL:: var_is_introduced ;
var bool: aux22098_BOOL:: var_is_introduced ;
var bool: aux22099_BOOL:: var_is_introduced ;
var {0,1}: aux22099_INTEGER :: var_is_introduced ;
var 1..43: aux22100:: var_is_introduced ;
var bool: aux22101_BOOL:: var_is_introduced ;
var bool: aux22102_BOOL:: var_is_introduced ;
var bool: aux22103_BOOL:: var_is_introduced ;
var {0,1}: aux22103_INTEGER :: var_is_introduced ;
var 3..45: aux22104:: var_is_introduced ;
var bool: aux22105_BOOL:: var_is_introduced ;
var bool: aux22106_BOOL:: var_is_introduced ;
var bool: aux22107_BOOL:: var_is_introduced ;
var {0,1}: aux22107_INTEGER :: var_is_introduced ;
var 2..44: aux22108:: var_is_introduced ;
var bool: aux22109_BOOL:: var_is_introduced ;
var bool: aux22110_BOOL:: var_is_introduced ;
var bool: aux22111_BOOL:: var_is_introduced ;
var {0,1}: aux22111_INTEGER :: var_is_introduced ;
var 2..44: aux22112:: var_is_introduced ;
var bool: aux22113_BOOL:: var_is_introduced ;
var bool: aux22114_BOOL:: var_is_introduced ;
var bool: aux22115_BOOL:: var_is_introduced ;
var {0,1}: aux22115_INTEGER :: var_is_introduced ;
var 3..45: aux22116:: var_is_introduced ;
var bool: aux22117_BOOL:: var_is_introduced ;
var bool: aux22118_BOOL:: var_is_introduced ;
var bool: aux22119_BOOL:: var_is_introduced ;
var {0,1}: aux22119_INTEGER :: var_is_introduced ;
var 3..45: aux22120:: var_is_introduced ;
var bool: aux22121_BOOL:: var_is_introduced ;
var bool: aux22122_BOOL:: var_is_introduced ;
var bool: aux22123_BOOL:: var_is_introduced ;
var {0,1}: aux22123_INTEGER :: var_is_introduced ;
var 4..46: aux22124:: var_is_introduced ;
var bool: aux22125_BOOL:: var_is_introduced ;
var bool: aux22126_BOOL:: var_is_introduced ;
var bool: aux22127_BOOL:: var_is_introduced ;
var {0,1}: aux22127_INTEGER :: var_is_introduced ;
var 3..45: aux22128:: var_is_introduced ;
var bool: aux22129_BOOL:: var_is_introduced ;
var bool: aux22130_BOOL:: var_is_introduced ;
var bool: aux22131_BOOL:: var_is_introduced ;
var {0,1}: aux22131_INTEGER :: var_is_introduced ;
var 1..43: aux22132:: var_is_introduced ;
var bool: aux22133_BOOL:: var_is_introduced ;
var {0,1}: aux22133_INTEGER :: var_is_introduced ;
var 1..43: aux22134:: var_is_introduced ;
var bool: aux22135_BOOL:: var_is_introduced ;
var bool: aux22136_BOOL:: var_is_introduced ;
var bool: aux22137_BOOL:: var_is_introduced ;
var {0,1}: aux22137_INTEGER :: var_is_introduced ;
var 1..43: aux22138:: var_is_introduced ;
var bool: aux22139_BOOL:: var_is_introduced ;
var bool: aux22140_BOOL:: var_is_introduced ;
var bool: aux22141_BOOL:: var_is_introduced ;
var {0,1}: aux22141_INTEGER :: var_is_introduced ;
var 2..44: aux22142:: var_is_introduced ;
var bool: aux22143_BOOL:: var_is_introduced ;
var bool: aux22144_BOOL:: var_is_introduced ;
var bool: aux22145_BOOL:: var_is_introduced ;
var {0,1}: aux22145_INTEGER :: var_is_introduced ;
var 3..45: aux22146:: var_is_introduced ;
var bool: aux22147_BOOL:: var_is_introduced ;
var bool: aux22148_BOOL:: var_is_introduced ;
var bool: aux22149_BOOL:: var_is_introduced ;
var {0,1}: aux22149_INTEGER :: var_is_introduced ;
var 1..43: aux22150:: var_is_introduced ;
var bool: aux22151_BOOL:: var_is_introduced ;
var bool: aux22152_BOOL:: var_is_introduced ;
var bool: aux22153_BOOL:: var_is_introduced ;
var {0,1}: aux22153_INTEGER :: var_is_introduced ;
var 3..45: aux22154:: var_is_introduced ;
var bool: aux22155_BOOL:: var_is_introduced ;
var bool: aux22156_BOOL:: var_is_introduced ;
var bool: aux22157_BOOL:: var_is_introduced ;
var {0,1}: aux22157_INTEGER :: var_is_introduced ;
var 2..44: aux22158:: var_is_introduced ;
var bool: aux22159_BOOL:: var_is_introduced ;
var bool: aux22160_BOOL:: var_is_introduced ;
var bool: aux22161_BOOL:: var_is_introduced ;
var {0,1}: aux22161_INTEGER :: var_is_introduced ;
var 2..44: aux22162:: var_is_introduced ;
var bool: aux22163_BOOL:: var_is_introduced ;
var bool: aux22164_BOOL:: var_is_introduced ;
var bool: aux22165_BOOL:: var_is_introduced ;
var {0,1}: aux22165_INTEGER :: var_is_introduced ;
var 3..45: aux22166:: var_is_introduced ;
var bool: aux22167_BOOL:: var_is_introduced ;
var bool: aux22168_BOOL:: var_is_introduced ;
var bool: aux22169_BOOL:: var_is_introduced ;
var {0,1}: aux22169_INTEGER :: var_is_introduced ;
var 3..45: aux22170:: var_is_introduced ;
var bool: aux22171_BOOL:: var_is_introduced ;
var bool: aux22172_BOOL:: var_is_introduced ;
var bool: aux22173_BOOL:: var_is_introduced ;
var {0,1}: aux22173_INTEGER :: var_is_introduced ;
var 4..46: aux22174:: var_is_introduced ;
var bool: aux22175_BOOL:: var_is_introduced ;
var bool: aux22176_BOOL:: var_is_introduced ;
var bool: aux22177_BOOL:: var_is_introduced ;
var {0,1}: aux22177_INTEGER :: var_is_introduced ;
var 3..45: aux22178:: var_is_introduced ;
var bool: aux22179_BOOL:: var_is_introduced ;
var bool: aux22180_BOOL:: var_is_introduced ;
var bool: aux22181_BOOL:: var_is_introduced ;
var {0,1}: aux22181_INTEGER :: var_is_introduced ;
var 2..44: aux22182:: var_is_introduced ;
var bool: aux22183_BOOL:: var_is_introduced ;
var {0,1}: aux22183_INTEGER :: var_is_introduced ;
var 1..43: aux22184:: var_is_introduced ;
var bool: aux22185_BOOL:: var_is_introduced ;
var bool: aux22186_BOOL:: var_is_introduced ;
var bool: aux22187_BOOL:: var_is_introduced ;
var {0,1}: aux22187_INTEGER :: var_is_introduced ;
var 1..43: aux22188:: var_is_introduced ;
var bool: aux22189_BOOL:: var_is_introduced ;
var bool: aux22190_BOOL:: var_is_introduced ;
var bool: aux22191_BOOL:: var_is_introduced ;
var {0,1}: aux22191_INTEGER :: var_is_introduced ;
var 2..44: aux22192:: var_is_introduced ;
var bool: aux22193_BOOL:: var_is_introduced ;
var bool: aux22194_BOOL:: var_is_introduced ;
var bool: aux22195_BOOL:: var_is_introduced ;
var {0,1}: aux22195_INTEGER :: var_is_introduced ;
var 2..44: aux22196:: var_is_introduced ;
var bool: aux22197_BOOL:: var_is_introduced ;
var bool: aux22198_BOOL:: var_is_introduced ;
var bool: aux22199_BOOL:: var_is_introduced ;
var {0,1}: aux22199_INTEGER :: var_is_introduced ;
var 1..43: aux22200:: var_is_introduced ;
var bool: aux22201_BOOL:: var_is_introduced ;
var bool: aux22202_BOOL:: var_is_introduced ;
var bool: aux22203_BOOL:: var_is_introduced ;
var {0,1}: aux22203_INTEGER :: var_is_introduced ;
var 3..45: aux22204:: var_is_introduced ;
var bool: aux22205_BOOL:: var_is_introduced ;
var bool: aux22206_BOOL:: var_is_introduced ;
var bool: aux22207_BOOL:: var_is_introduced ;
var {0,1}: aux22207_INTEGER :: var_is_introduced ;
var 2..44: aux22208:: var_is_introduced ;
var bool: aux22209_BOOL:: var_is_introduced ;
var bool: aux22210_BOOL:: var_is_introduced ;
var bool: aux22211_BOOL:: var_is_introduced ;
var {0,1}: aux22211_INTEGER :: var_is_introduced ;
var 2..44: aux22212:: var_is_introduced ;
var bool: aux22213_BOOL:: var_is_introduced ;
var bool: aux22214_BOOL:: var_is_introduced ;
var bool: aux22215_BOOL:: var_is_introduced ;
var {0,1}: aux22215_INTEGER :: var_is_introduced ;
var 3..45: aux22216:: var_is_introduced ;
var bool: aux22217_BOOL:: var_is_introduced ;
var bool: aux22218_BOOL:: var_is_introduced ;
var bool: aux22219_BOOL:: var_is_introduced ;
var {0,1}: aux22219_INTEGER :: var_is_introduced ;
var 3..45: aux22220:: var_is_introduced ;
var bool: aux22221_BOOL:: var_is_introduced ;
var bool: aux22222_BOOL:: var_is_introduced ;
var bool: aux22223_BOOL:: var_is_introduced ;
var {0,1}: aux22223_INTEGER :: var_is_introduced ;
var 4..46: aux22224:: var_is_introduced ;
var bool: aux22225_BOOL:: var_is_introduced ;
var bool: aux22226_BOOL:: var_is_introduced ;
var bool: aux22227_BOOL:: var_is_introduced ;
var {0,1}: aux22227_INTEGER :: var_is_introduced ;
var 3..45: aux22228:: var_is_introduced ;
var bool: aux22229_BOOL:: var_is_introduced ;
var bool: aux22230_BOOL:: var_is_introduced ;
var bool: aux22231_BOOL:: var_is_introduced ;
var {0,1}: aux22231_INTEGER :: var_is_introduced ;
var 3..45: aux22232:: var_is_introduced ;
var bool: aux22233_BOOL:: var_is_introduced ;
var {0,1}: aux22233_INTEGER :: var_is_introduced ;
var 1..43: aux22234:: var_is_introduced ;
var bool: aux22235_BOOL:: var_is_introduced ;
var bool: aux22236_BOOL:: var_is_introduced ;
var bool: aux22237_BOOL:: var_is_introduced ;
var {0,1}: aux22237_INTEGER :: var_is_introduced ;
var 1..43: aux22238:: var_is_introduced ;
var bool: aux22239_BOOL:: var_is_introduced ;
var bool: aux22240_BOOL:: var_is_introduced ;
var bool: aux22241_BOOL:: var_is_introduced ;
var {0,1}: aux22241_INTEGER :: var_is_introduced ;
var 2..44: aux22242:: var_is_introduced ;
var bool: aux22243_BOOL:: var_is_introduced ;
var bool: aux22244_BOOL:: var_is_introduced ;
var bool: aux22245_BOOL:: var_is_introduced ;
var {0,1}: aux22245_INTEGER :: var_is_introduced ;
var 2..44: aux22246:: var_is_introduced ;
var bool: aux22247_BOOL:: var_is_introduced ;
var bool: aux22248_BOOL:: var_is_introduced ;
var bool: aux22249_BOOL:: var_is_introduced ;
var {0,1}: aux22249_INTEGER :: var_is_introduced ;
var 3..45: aux22250:: var_is_introduced ;
var bool: aux22251_BOOL:: var_is_introduced ;
var bool: aux22252_BOOL:: var_is_introduced ;
var bool: aux22253_BOOL:: var_is_introduced ;
var {0,1}: aux22253_INTEGER :: var_is_introduced ;
var 1..43: aux22254:: var_is_introduced ;
var bool: aux22255_BOOL:: var_is_introduced ;
var bool: aux22256_BOOL:: var_is_introduced ;
var bool: aux22257_BOOL:: var_is_introduced ;
var {0,1}: aux22257_INTEGER :: var_is_introduced ;
var 2..44: aux22258:: var_is_introduced ;
var bool: aux22259_BOOL:: var_is_introduced ;
var bool: aux22260_BOOL:: var_is_introduced ;
var bool: aux22261_BOOL:: var_is_introduced ;
var {0,1}: aux22261_INTEGER :: var_is_introduced ;
var 2..44: aux22262:: var_is_introduced ;
var bool: aux22263_BOOL:: var_is_introduced ;
var bool: aux22264_BOOL:: var_is_introduced ;
var bool: aux22265_BOOL:: var_is_introduced ;
var {0,1}: aux22265_INTEGER :: var_is_introduced ;
var 3..45: aux22266:: var_is_introduced ;
var bool: aux22267_BOOL:: var_is_introduced ;
var bool: aux22268_BOOL:: var_is_introduced ;
var bool: aux22269_BOOL:: var_is_introduced ;
var {0,1}: aux22269_INTEGER :: var_is_introduced ;
var 3..45: aux22270:: var_is_introduced ;
var bool: aux22271_BOOL:: var_is_introduced ;
var bool: aux22272_BOOL:: var_is_introduced ;
var bool: aux22273_BOOL:: var_is_introduced ;
var {0,1}: aux22273_INTEGER :: var_is_introduced ;
var 4..46: aux22274:: var_is_introduced ;
var bool: aux22275_BOOL:: var_is_introduced ;
var bool: aux22276_BOOL:: var_is_introduced ;
var bool: aux22277_BOOL:: var_is_introduced ;
var {0,1}: aux22277_INTEGER :: var_is_introduced ;
var 3..45: aux22278:: var_is_introduced ;
var bool: aux22279_BOOL:: var_is_introduced ;
var bool: aux22280_BOOL:: var_is_introduced ;
var bool: aux22281_BOOL:: var_is_introduced ;
var {0,1}: aux22281_INTEGER :: var_is_introduced ;
var 3..45: aux22282:: var_is_introduced ;
var bool: aux22283_BOOL:: var_is_introduced ;
var {0,1}: aux22283_INTEGER :: var_is_introduced ;
var 1..43: aux22284:: var_is_introduced ;
var bool: aux22285_BOOL:: var_is_introduced ;
var bool: aux22286_BOOL:: var_is_introduced ;
var bool: aux22287_BOOL:: var_is_introduced ;
var {0,1}: aux22287_INTEGER :: var_is_introduced ;
var 1..43: aux22288:: var_is_introduced ;
var bool: aux22289_BOOL:: var_is_introduced ;
var bool: aux22290_BOOL:: var_is_introduced ;
var bool: aux22291_BOOL:: var_is_introduced ;
var {0,1}: aux22291_INTEGER :: var_is_introduced ;
var 2..44: aux22292:: var_is_introduced ;
var bool: aux22293_BOOL:: var_is_introduced ;
var bool: aux22294_BOOL:: var_is_introduced ;
var bool: aux22295_BOOL:: var_is_introduced ;
var {0,1}: aux22295_INTEGER :: var_is_introduced ;
var 3..45: aux22296:: var_is_introduced ;
var bool: aux22297_BOOL:: var_is_introduced ;
var bool: aux22298_BOOL:: var_is_introduced ;
var bool: aux22299_BOOL:: var_is_introduced ;
var {0,1}: aux22299_INTEGER :: var_is_introduced ;
var 1..43: aux22300:: var_is_introduced ;
var bool: aux22301_BOOL:: var_is_introduced ;
var bool: aux22302_BOOL:: var_is_introduced ;
var bool: aux22303_BOOL:: var_is_introduced ;
var {0,1}: aux22303_INTEGER :: var_is_introduced ;
var 3..45: aux22304:: var_is_introduced ;
var bool: aux22305_BOOL:: var_is_introduced ;
var bool: aux22306_BOOL:: var_is_introduced ;
var bool: aux22307_BOOL:: var_is_introduced ;
var {0,1}: aux22307_INTEGER :: var_is_introduced ;
var 2..44: aux22308:: var_is_introduced ;
var bool: aux22309_BOOL:: var_is_introduced ;
var bool: aux22310_BOOL:: var_is_introduced ;
var bool: aux22311_BOOL:: var_is_introduced ;
var {0,1}: aux22311_INTEGER :: var_is_introduced ;
var 2..44: aux22312:: var_is_introduced ;
var bool: aux22313_BOOL:: var_is_introduced ;
var bool: aux22314_BOOL:: var_is_introduced ;
var bool: aux22315_BOOL:: var_is_introduced ;
var {0,1}: aux22315_INTEGER :: var_is_introduced ;
var 3..45: aux22316:: var_is_introduced ;
var bool: aux22317_BOOL:: var_is_introduced ;
var bool: aux22318_BOOL:: var_is_introduced ;
var bool: aux22319_BOOL:: var_is_introduced ;
var {0,1}: aux22319_INTEGER :: var_is_introduced ;
var 3..45: aux22320:: var_is_introduced ;
var bool: aux22321_BOOL:: var_is_introduced ;
var bool: aux22322_BOOL:: var_is_introduced ;
var bool: aux22323_BOOL:: var_is_introduced ;
var {0,1}: aux22323_INTEGER :: var_is_introduced ;
var 4..46: aux22324:: var_is_introduced ;
var bool: aux22325_BOOL:: var_is_introduced ;
var bool: aux22326_BOOL:: var_is_introduced ;
var bool: aux22327_BOOL:: var_is_introduced ;
var {0,1}: aux22327_INTEGER :: var_is_introduced ;
var 3..45: aux22328:: var_is_introduced ;
var bool: aux22329_BOOL:: var_is_introduced ;
var bool: aux22330_BOOL:: var_is_introduced ;
var bool: aux22331_BOOL:: var_is_introduced ;
var {0,1}: aux22331_INTEGER :: var_is_introduced ;
var 2..44: aux22332:: var_is_introduced ;
var bool: aux22333_BOOL:: var_is_introduced ;
var {0,1}: aux22333_INTEGER :: var_is_introduced ;
var 1..43: aux22334:: var_is_introduced ;
var bool: aux22335_BOOL:: var_is_introduced ;
var bool: aux22336_BOOL:: var_is_introduced ;
var bool: aux22337_BOOL:: var_is_introduced ;
var {0,1}: aux22337_INTEGER :: var_is_introduced ;
var 2..44: aux22338:: var_is_introduced ;
var bool: aux22339_BOOL:: var_is_introduced ;
var bool: aux22340_BOOL:: var_is_introduced ;
var bool: aux22341_BOOL:: var_is_introduced ;
var {0,1}: aux22341_INTEGER :: var_is_introduced ;
var 2..44: aux22342:: var_is_introduced ;
var bool: aux22343_BOOL:: var_is_introduced ;
var bool: aux22344_BOOL:: var_is_introduced ;
var bool: aux22345_BOOL:: var_is_introduced ;
var {0,1}: aux22345_INTEGER :: var_is_introduced ;
var 3..45: aux22346:: var_is_introduced ;
var bool: aux22347_BOOL:: var_is_introduced ;
var bool: aux22348_BOOL:: var_is_introduced ;
var bool: aux22349_BOOL:: var_is_introduced ;
var {0,1}: aux22349_INTEGER :: var_is_introduced ;
var 1..43: aux22350:: var_is_introduced ;
var bool: aux22351_BOOL:: var_is_introduced ;
var bool: aux22352_BOOL:: var_is_introduced ;
var bool: aux22353_BOOL:: var_is_introduced ;
var {0,1}: aux22353_INTEGER :: var_is_introduced ;
var 3..45: aux22354:: var_is_introduced ;
var bool: aux22355_BOOL:: var_is_introduced ;
var bool: aux22356_BOOL:: var_is_introduced ;
var bool: aux22357_BOOL:: var_is_introduced ;
var {0,1}: aux22357_INTEGER :: var_is_introduced ;
var 2..44: aux22358:: var_is_introduced ;
var bool: aux22359_BOOL:: var_is_introduced ;
var bool: aux22360_BOOL:: var_is_introduced ;
var bool: aux22361_BOOL:: var_is_introduced ;
var {0,1}: aux22361_INTEGER :: var_is_introduced ;
var 2..44: aux22362:: var_is_introduced ;
var bool: aux22363_BOOL:: var_is_introduced ;
var bool: aux22364_BOOL:: var_is_introduced ;
var bool: aux22365_BOOL:: var_is_introduced ;
var {0,1}: aux22365_INTEGER :: var_is_introduced ;
var 3..45: aux22366:: var_is_introduced ;
var bool: aux22367_BOOL:: var_is_introduced ;
var bool: aux22368_BOOL:: var_is_introduced ;
var bool: aux22369_BOOL:: var_is_introduced ;
var {0,1}: aux22369_INTEGER :: var_is_introduced ;
var 3..45: aux22370:: var_is_introduced ;
var bool: aux22371_BOOL:: var_is_introduced ;
var bool: aux22372_BOOL:: var_is_introduced ;
var bool: aux22373_BOOL:: var_is_introduced ;
var {0,1}: aux22373_INTEGER :: var_is_introduced ;
var 4..46: aux22374:: var_is_introduced ;
var bool: aux22375_BOOL:: var_is_introduced ;
var bool: aux22376_BOOL:: var_is_introduced ;
var bool: aux22377_BOOL:: var_is_introduced ;
var {0,1}: aux22377_INTEGER :: var_is_introduced ;
var 3..45: aux22378:: var_is_introduced ;
var bool: aux22379_BOOL:: var_is_introduced ;
var bool: aux22380_BOOL:: var_is_introduced ;
var bool: aux22381_BOOL:: var_is_introduced ;
var {0,1}: aux22381_INTEGER :: var_is_introduced ;
var 1..43: aux22382:: var_is_introduced ;
var bool: aux22383_BOOL:: var_is_introduced ;
var {0,1}: aux22383_INTEGER :: var_is_introduced ;
var 1..43: aux22384:: var_is_introduced ;
var bool: aux22385_BOOL:: var_is_introduced ;
var bool: aux22386_BOOL:: var_is_introduced ;
var bool: aux22387_BOOL:: var_is_introduced ;
var {0,1}: aux22387_INTEGER :: var_is_introduced ;
var 1..43: aux22388:: var_is_introduced ;
var bool: aux22389_BOOL:: var_is_introduced ;
var bool: aux22390_BOOL:: var_is_introduced ;
var bool: aux22391_BOOL:: var_is_introduced ;
var {0,1}: aux22391_INTEGER :: var_is_introduced ;
var 2..44: aux22392:: var_is_introduced ;
var bool: aux22393_BOOL:: var_is_introduced ;
var bool: aux22394_BOOL:: var_is_introduced ;
var bool: aux22395_BOOL:: var_is_introduced ;
var {0,1}: aux22395_INTEGER :: var_is_introduced ;
var 2..44: aux22396:: var_is_introduced ;
var bool: aux22397_BOOL:: var_is_introduced ;
var bool: aux22398_BOOL:: var_is_introduced ;
var bool: aux22399_BOOL:: var_is_introduced ;
var {0,1}: aux22399_INTEGER :: var_is_introduced ;
var 3..45: aux22400:: var_is_introduced ;
var bool: aux22401_BOOL:: var_is_introduced ;
var bool: aux22402_BOOL:: var_is_introduced ;
var bool: aux22403_BOOL:: var_is_introduced ;
var {0,1}: aux22403_INTEGER :: var_is_introduced ;
var 1..43: aux22404:: var_is_introduced ;
var bool: aux22405_BOOL:: var_is_introduced ;
var bool: aux22406_BOOL:: var_is_introduced ;
var bool: aux22407_BOOL:: var_is_introduced ;
var {0,1}: aux22407_INTEGER :: var_is_introduced ;
var 3..45: aux22408:: var_is_introduced ;
var bool: aux22409_BOOL:: var_is_introduced ;
var bool: aux22410_BOOL:: var_is_introduced ;
var bool: aux22411_BOOL:: var_is_introduced ;
var {0,1}: aux22411_INTEGER :: var_is_introduced ;
var 2..44: aux22412:: var_is_introduced ;
var bool: aux22413_BOOL:: var_is_introduced ;
var bool: aux22414_BOOL:: var_is_introduced ;
var bool: aux22415_BOOL:: var_is_introduced ;
var {0,1}: aux22415_INTEGER :: var_is_introduced ;
var 3..45: aux22416:: var_is_introduced ;
var bool: aux22417_BOOL:: var_is_introduced ;
var bool: aux22418_BOOL:: var_is_introduced ;
var bool: aux22419_BOOL:: var_is_introduced ;
var {0,1}: aux22419_INTEGER :: var_is_introduced ;
var 3..45: aux22420:: var_is_introduced ;
var bool: aux22421_BOOL:: var_is_introduced ;
var bool: aux22422_BOOL:: var_is_introduced ;
var bool: aux22423_BOOL:: var_is_introduced ;
var {0,1}: aux22423_INTEGER :: var_is_introduced ;
var 4..46: aux22424:: var_is_introduced ;
var bool: aux22425_BOOL:: var_is_introduced ;
var bool: aux22426_BOOL:: var_is_introduced ;
var bool: aux22427_BOOL:: var_is_introduced ;
var {0,1}: aux22427_INTEGER :: var_is_introduced ;
var 3..45: aux22428:: var_is_introduced ;
var bool: aux22429_BOOL:: var_is_introduced ;
var bool: aux22430_BOOL:: var_is_introduced ;
var bool: aux22431_BOOL:: var_is_introduced ;
var {0,1}: aux22431_INTEGER :: var_is_introduced ;
var 2..44: aux22432:: var_is_introduced ;
var bool: aux22433_BOOL:: var_is_introduced ;
var {0,1}: aux22433_INTEGER :: var_is_introduced ;
var 1..43: aux22434:: var_is_introduced ;
var bool: aux22435_BOOL:: var_is_introduced ;
var bool: aux22436_BOOL:: var_is_introduced ;
var bool: aux22437_BOOL:: var_is_introduced ;
var {0,1}: aux22437_INTEGER :: var_is_introduced ;
var 1..43: aux22438:: var_is_introduced ;
var bool: aux22439_BOOL:: var_is_introduced ;
var bool: aux22440_BOOL:: var_is_introduced ;
var bool: aux22441_BOOL:: var_is_introduced ;
var {0,1}: aux22441_INTEGER :: var_is_introduced ;
var 2..44: aux22442:: var_is_introduced ;
var bool: aux22443_BOOL:: var_is_introduced ;
var bool: aux22444_BOOL:: var_is_introduced ;
var bool: aux22445_BOOL:: var_is_introduced ;
var {0,1}: aux22445_INTEGER :: var_is_introduced ;
var 2..44: aux22446:: var_is_introduced ;
var bool: aux22447_BOOL:: var_is_introduced ;
var bool: aux22448_BOOL:: var_is_introduced ;
var bool: aux22449_BOOL:: var_is_introduced ;
var {0,1}: aux22449_INTEGER :: var_is_introduced ;
var 3..45: aux22450:: var_is_introduced ;
var bool: aux22451_BOOL:: var_is_introduced ;
var bool: aux22452_BOOL:: var_is_introduced ;
var bool: aux22453_BOOL:: var_is_introduced ;
var {0,1}: aux22453_INTEGER :: var_is_introduced ;
var 3..45: aux22454:: var_is_introduced ;
var bool: aux22455_BOOL:: var_is_introduced ;
var bool: aux22456_BOOL:: var_is_introduced ;
var bool: aux22457_BOOL:: var_is_introduced ;
var {0,1}: aux22457_INTEGER :: var_is_introduced ;
var 2..44: aux22458:: var_is_introduced ;
var bool: aux22459_BOOL:: var_is_introduced ;
var bool: aux22460_BOOL:: var_is_introduced ;
var bool: aux22461_BOOL:: var_is_introduced ;
var {0,1}: aux22461_INTEGER :: var_is_introduced ;
var 2..44: aux22462:: var_is_introduced ;
var bool: aux22463_BOOL:: var_is_introduced ;
var bool: aux22464_BOOL:: var_is_introduced ;
var bool: aux22465_BOOL:: var_is_introduced ;
var {0,1}: aux22465_INTEGER :: var_is_introduced ;
var 3..45: aux22466:: var_is_introduced ;
var bool: aux22467_BOOL:: var_is_introduced ;
var bool: aux22468_BOOL:: var_is_introduced ;
var bool: aux22469_BOOL:: var_is_introduced ;
var {0,1}: aux22469_INTEGER :: var_is_introduced ;
var 3..45: aux22470:: var_is_introduced ;
var bool: aux22471_BOOL:: var_is_introduced ;
var bool: aux22472_BOOL:: var_is_introduced ;
var bool: aux22473_BOOL:: var_is_introduced ;
var {0,1}: aux22473_INTEGER :: var_is_introduced ;
var 4..46: aux22474:: var_is_introduced ;
var bool: aux22475_BOOL:: var_is_introduced ;
var bool: aux22476_BOOL:: var_is_introduced ;
var bool: aux22477_BOOL:: var_is_introduced ;
var {0,1}: aux22477_INTEGER :: var_is_introduced ;
var 3..45: aux22478:: var_is_introduced ;
var bool: aux22479_BOOL:: var_is_introduced ;
var bool: aux22480_BOOL:: var_is_introduced ;
var bool: aux22481_BOOL:: var_is_introduced ;
var {0,1}: aux22481_INTEGER :: var_is_introduced ;
var 1..43: aux22482:: var_is_introduced ;
var bool: aux22483_BOOL:: var_is_introduced ;
var {0,1}: aux22483_INTEGER :: var_is_introduced ;
var 1..43: aux22484:: var_is_introduced ;
var bool: aux22485_BOOL:: var_is_introduced ;
var bool: aux22486_BOOL:: var_is_introduced ;
var bool: aux22487_BOOL:: var_is_introduced ;
var {0,1}: aux22487_INTEGER :: var_is_introduced ;
var 1..43: aux22488:: var_is_introduced ;
var bool: aux22489_BOOL:: var_is_introduced ;
var bool: aux22490_BOOL:: var_is_introduced ;
var bool: aux22491_BOOL:: var_is_introduced ;
var {0,1}: aux22491_INTEGER :: var_is_introduced ;
var 2..44: aux22492:: var_is_introduced ;
var bool: aux22493_BOOL:: var_is_introduced ;
var bool: aux22494_BOOL:: var_is_introduced ;
var bool: aux22495_BOOL:: var_is_introduced ;
var {0,1}: aux22495_INTEGER :: var_is_introduced ;
var 2..44: aux22496:: var_is_introduced ;
var bool: aux22497_BOOL:: var_is_introduced ;
var bool: aux22498_BOOL:: var_is_introduced ;
var bool: aux22499_BOOL:: var_is_introduced ;
var {0,1}: aux22499_INTEGER :: var_is_introduced ;
var 3..45: aux22500:: var_is_introduced ;
var bool: aux22501_BOOL:: var_is_introduced ;
var bool: aux22502_BOOL:: var_is_introduced ;
var bool: aux22503_BOOL:: var_is_introduced ;
var {0,1}: aux22503_INTEGER :: var_is_introduced ;
var 1..43: aux22504:: var_is_introduced ;
var bool: aux22505_BOOL:: var_is_introduced ;
var bool: aux22506_BOOL:: var_is_introduced ;
var bool: aux22507_BOOL:: var_is_introduced ;
var {0,1}: aux22507_INTEGER :: var_is_introduced ;
var 3..45: aux22508:: var_is_introduced ;
var bool: aux22509_BOOL:: var_is_introduced ;
var bool: aux22510_BOOL:: var_is_introduced ;
var bool: aux22511_BOOL:: var_is_introduced ;
var {0,1}: aux22511_INTEGER :: var_is_introduced ;
var 2..44: aux22512:: var_is_introduced ;
var bool: aux22513_BOOL:: var_is_introduced ;
var bool: aux22514_BOOL:: var_is_introduced ;
var bool: aux22515_BOOL:: var_is_introduced ;
var {0,1}: aux22515_INTEGER :: var_is_introduced ;
var 2..44: aux22516:: var_is_introduced ;
var bool: aux22517_BOOL:: var_is_introduced ;
var bool: aux22518_BOOL:: var_is_introduced ;
var bool: aux22519_BOOL:: var_is_introduced ;
var {0,1}: aux22519_INTEGER :: var_is_introduced ;
var 3..45: aux22520:: var_is_introduced ;
var bool: aux22521_BOOL:: var_is_introduced ;
var bool: aux22522_BOOL:: var_is_introduced ;
var bool: aux22523_BOOL:: var_is_introduced ;
var {0,1}: aux22523_INTEGER :: var_is_introduced ;
var 3..45: aux22524:: var_is_introduced ;
var bool: aux22525_BOOL:: var_is_introduced ;
var bool: aux22526_BOOL:: var_is_introduced ;
var bool: aux22527_BOOL:: var_is_introduced ;
var {0,1}: aux22527_INTEGER :: var_is_introduced ;
var 3..45: aux22528:: var_is_introduced ;
var bool: aux22529_BOOL:: var_is_introduced ;
var bool: aux22530_BOOL:: var_is_introduced ;
var bool: aux22531_BOOL:: var_is_introduced ;
var {0,1}: aux22531_INTEGER :: var_is_introduced ;
var 4..46: aux22532:: var_is_introduced ;
var bool: aux22533_BOOL:: var_is_introduced ;
var {0,1}: aux22533_INTEGER :: var_is_introduced ;
var 1..43: aux22534:: var_is_introduced ;
var bool: aux22535_BOOL:: var_is_introduced ;
var bool: aux22536_BOOL:: var_is_introduced ;
var bool: aux22537_BOOL:: var_is_introduced ;
var {0,1}: aux22537_INTEGER :: var_is_introduced ;
var 1..43: aux22538:: var_is_introduced ;
var bool: aux22539_BOOL:: var_is_introduced ;
var bool: aux22540_BOOL:: var_is_introduced ;
var bool: aux22541_BOOL:: var_is_introduced ;
var {0,1}: aux22541_INTEGER :: var_is_introduced ;
var 2..44: aux22542:: var_is_introduced ;
var bool: aux22543_BOOL:: var_is_introduced ;
var bool: aux22544_BOOL:: var_is_introduced ;
var bool: aux22545_BOOL:: var_is_introduced ;
var {0,1}: aux22545_INTEGER :: var_is_introduced ;
var 2..44: aux22546:: var_is_introduced ;
var bool: aux22547_BOOL:: var_is_introduced ;
var bool: aux22548_BOOL:: var_is_introduced ;
var bool: aux22549_BOOL:: var_is_introduced ;
var {0,1}: aux22549_INTEGER :: var_is_introduced ;
var 3..45: aux22550:: var_is_introduced ;
var bool: aux22551_BOOL:: var_is_introduced ;
var bool: aux22552_BOOL:: var_is_introduced ;
var bool: aux22553_BOOL:: var_is_introduced ;
var {0,1}: aux22553_INTEGER :: var_is_introduced ;
var 1..43: aux22554:: var_is_introduced ;
var bool: aux22555_BOOL:: var_is_introduced ;
var bool: aux22556_BOOL:: var_is_introduced ;
var bool: aux22557_BOOL:: var_is_introduced ;
var {0,1}: aux22557_INTEGER :: var_is_introduced ;
var 3..45: aux22558:: var_is_introduced ;
var bool: aux22559_BOOL:: var_is_introduced ;
var bool: aux22560_BOOL:: var_is_introduced ;
var bool: aux22561_BOOL:: var_is_introduced ;
var {0,1}: aux22561_INTEGER :: var_is_introduced ;
var 2..44: aux22562:: var_is_introduced ;
var bool: aux22563_BOOL:: var_is_introduced ;
var bool: aux22564_BOOL:: var_is_introduced ;
var bool: aux22565_BOOL:: var_is_introduced ;
var {0,1}: aux22565_INTEGER :: var_is_introduced ;
var 2..44: aux22566:: var_is_introduced ;
var bool: aux22567_BOOL:: var_is_introduced ;
var bool: aux22568_BOOL:: var_is_introduced ;
var bool: aux22569_BOOL:: var_is_introduced ;
var {0,1}: aux22569_INTEGER :: var_is_introduced ;
var 3..45: aux22570:: var_is_introduced ;
var bool: aux22571_BOOL:: var_is_introduced ;
var bool: aux22572_BOOL:: var_is_introduced ;
var bool: aux22573_BOOL:: var_is_introduced ;
var {0,1}: aux22573_INTEGER :: var_is_introduced ;
var 4..46: aux22574:: var_is_introduced ;
var bool: aux22575_BOOL:: var_is_introduced ;
var bool: aux22576_BOOL:: var_is_introduced ;
var bool: aux22577_BOOL:: var_is_introduced ;
var {0,1}: aux22577_INTEGER :: var_is_introduced ;
var 3..45: aux22578:: var_is_introduced ;
var bool: aux22579_BOOL:: var_is_introduced ;
var bool: aux22580_BOOL:: var_is_introduced ;
var bool: aux22581_BOOL:: var_is_introduced ;
var {0,1}: aux22581_INTEGER :: var_is_introduced ;
var 3..45: aux22582:: var_is_introduced ;
var bool: aux22583_BOOL:: var_is_introduced ;
var {0,1}: aux22583_INTEGER :: var_is_introduced ;
var 1..43: aux22584:: var_is_introduced ;
var bool: aux22585_BOOL:: var_is_introduced ;
var bool: aux22586_BOOL:: var_is_introduced ;
var bool: aux22587_BOOL:: var_is_introduced ;
var {0,1}: aux22587_INTEGER :: var_is_introduced ;
var 1..43: aux22588:: var_is_introduced ;
var bool: aux22589_BOOL:: var_is_introduced ;
var bool: aux22590_BOOL:: var_is_introduced ;
var bool: aux22591_BOOL:: var_is_introduced ;
var {0,1}: aux22591_INTEGER :: var_is_introduced ;
var 2..44: aux22592:: var_is_introduced ;
var bool: aux22593_BOOL:: var_is_introduced ;
var bool: aux22594_BOOL:: var_is_introduced ;
var bool: aux22595_BOOL:: var_is_introduced ;
var {0,1}: aux22595_INTEGER :: var_is_introduced ;
var 2..44: aux22596:: var_is_introduced ;
var bool: aux22597_BOOL:: var_is_introduced ;
var bool: aux22598_BOOL:: var_is_introduced ;
var bool: aux22599_BOOL:: var_is_introduced ;
var {0,1}: aux22599_INTEGER :: var_is_introduced ;
var 3..45: aux22600:: var_is_introduced ;
var bool: aux22601_BOOL:: var_is_introduced ;
var bool: aux22602_BOOL:: var_is_introduced ;
var bool: aux22603_BOOL:: var_is_introduced ;
var {0,1}: aux22603_INTEGER :: var_is_introduced ;
var 1..43: aux22604:: var_is_introduced ;
var bool: aux22605_BOOL:: var_is_introduced ;
var bool: aux22606_BOOL:: var_is_introduced ;
var bool: aux22607_BOOL:: var_is_introduced ;
var {0,1}: aux22607_INTEGER :: var_is_introduced ;
var 3..45: aux22608:: var_is_introduced ;
var bool: aux22609_BOOL:: var_is_introduced ;
var bool: aux22610_BOOL:: var_is_introduced ;
var bool: aux22611_BOOL:: var_is_introduced ;
var {0,1}: aux22611_INTEGER :: var_is_introduced ;
var 2..44: aux22612:: var_is_introduced ;
var bool: aux22613_BOOL:: var_is_introduced ;
var bool: aux22614_BOOL:: var_is_introduced ;
var bool: aux22615_BOOL:: var_is_introduced ;
var {0,1}: aux22615_INTEGER :: var_is_introduced ;
var 2..44: aux22616:: var_is_introduced ;
var bool: aux22617_BOOL:: var_is_introduced ;
var bool: aux22618_BOOL:: var_is_introduced ;
var bool: aux22619_BOOL:: var_is_introduced ;
var {0,1}: aux22619_INTEGER :: var_is_introduced ;
var 3..45: aux22620:: var_is_introduced ;
var bool: aux22621_BOOL:: var_is_introduced ;
var bool: aux22622_BOOL:: var_is_introduced ;
var bool: aux22623_BOOL:: var_is_introduced ;
var {0,1}: aux22623_INTEGER :: var_is_introduced ;
var 4..46: aux22624:: var_is_introduced ;
var bool: aux22625_BOOL:: var_is_introduced ;
var bool: aux22626_BOOL:: var_is_introduced ;
var bool: aux22627_BOOL:: var_is_introduced ;
var {0,1}: aux22627_INTEGER :: var_is_introduced ;
var 3..45: aux22628:: var_is_introduced ;
var bool: aux22629_BOOL:: var_is_introduced ;
var bool: aux22630_BOOL:: var_is_introduced ;
var bool: aux22631_BOOL:: var_is_introduced ;
var {0,1}: aux22631_INTEGER :: var_is_introduced ;
var 3..45: aux22632:: var_is_introduced ;
var bool: aux22633_BOOL:: var_is_introduced ;
var {0,1}: aux22633_INTEGER :: var_is_introduced ;
var 1..43: aux22634:: var_is_introduced ;
var bool: aux22635_BOOL:: var_is_introduced ;
var bool: aux22636_BOOL:: var_is_introduced ;
var bool: aux22637_BOOL:: var_is_introduced ;
var {0,1}: aux22637_INTEGER :: var_is_introduced ;
var 1..43: aux22638:: var_is_introduced ;
var bool: aux22639_BOOL:: var_is_introduced ;
var bool: aux22640_BOOL:: var_is_introduced ;
var bool: aux22641_BOOL:: var_is_introduced ;
var {0,1}: aux22641_INTEGER :: var_is_introduced ;
var 2..44: aux22642:: var_is_introduced ;
var bool: aux22643_BOOL:: var_is_introduced ;
var bool: aux22644_BOOL:: var_is_introduced ;
var bool: aux22645_BOOL:: var_is_introduced ;
var {0,1}: aux22645_INTEGER :: var_is_introduced ;
var 2..44: aux22646:: var_is_introduced ;
var bool: aux22647_BOOL:: var_is_introduced ;
var bool: aux22648_BOOL:: var_is_introduced ;
var bool: aux22649_BOOL:: var_is_introduced ;
var {0,1}: aux22649_INTEGER :: var_is_introduced ;
var 3..45: aux22650:: var_is_introduced ;
var bool: aux22651_BOOL:: var_is_introduced ;
var bool: aux22652_BOOL:: var_is_introduced ;
var bool: aux22653_BOOL:: var_is_introduced ;
var {0,1}: aux22653_INTEGER :: var_is_introduced ;
var 1..43: aux22654:: var_is_introduced ;
var bool: aux22655_BOOL:: var_is_introduced ;
var bool: aux22656_BOOL:: var_is_introduced ;
var bool: aux22657_BOOL:: var_is_introduced ;
var {0,1}: aux22657_INTEGER :: var_is_introduced ;
var 3..45: aux22658:: var_is_introduced ;
var bool: aux22659_BOOL:: var_is_introduced ;
var bool: aux22660_BOOL:: var_is_introduced ;
var bool: aux22661_BOOL:: var_is_introduced ;
var {0,1}: aux22661_INTEGER :: var_is_introduced ;
var 2..44: aux22662:: var_is_introduced ;
var bool: aux22663_BOOL:: var_is_introduced ;
var bool: aux22664_BOOL:: var_is_introduced ;
var bool: aux22665_BOOL:: var_is_introduced ;
var {0,1}: aux22665_INTEGER :: var_is_introduced ;
var 3..45: aux22666:: var_is_introduced ;
var bool: aux22667_BOOL:: var_is_introduced ;
var bool: aux22668_BOOL:: var_is_introduced ;
var bool: aux22669_BOOL:: var_is_introduced ;
var {0,1}: aux22669_INTEGER :: var_is_introduced ;
var 3..45: aux22670:: var_is_introduced ;
var bool: aux22671_BOOL:: var_is_introduced ;
var bool: aux22672_BOOL:: var_is_introduced ;
var bool: aux22673_BOOL:: var_is_introduced ;
var {0,1}: aux22673_INTEGER :: var_is_introduced ;
var 4..46: aux22674:: var_is_introduced ;
var bool: aux22675_BOOL:: var_is_introduced ;
var bool: aux22676_BOOL:: var_is_introduced ;
var bool: aux22677_BOOL:: var_is_introduced ;
var {0,1}: aux22677_INTEGER :: var_is_introduced ;
var 3..45: aux22678:: var_is_introduced ;
var bool: aux22679_BOOL:: var_is_introduced ;
var bool: aux22680_BOOL:: var_is_introduced ;
var bool: aux22681_BOOL:: var_is_introduced ;
var {0,1}: aux22681_INTEGER :: var_is_introduced ;
var 2..44: aux22682:: var_is_introduced ;
var bool: aux22683_BOOL:: var_is_introduced ;
var {0,1}: aux22683_INTEGER :: var_is_introduced ;
var 1..43: aux22684:: var_is_introduced ;
var bool: aux22685_BOOL:: var_is_introduced ;
var bool: aux22686_BOOL:: var_is_introduced ;
var bool: aux22687_BOOL:: var_is_introduced ;
var {0,1}: aux22687_INTEGER :: var_is_introduced ;
var 1..43: aux22688:: var_is_introduced ;
var bool: aux22689_BOOL:: var_is_introduced ;
var bool: aux22690_BOOL:: var_is_introduced ;
var bool: aux22691_BOOL:: var_is_introduced ;
var {0,1}: aux22691_INTEGER :: var_is_introduced ;
var 2..44: aux22692:: var_is_introduced ;
var bool: aux22693_BOOL:: var_is_introduced ;
var bool: aux22694_BOOL:: var_is_introduced ;
var bool: aux22695_BOOL:: var_is_introduced ;
var {0,1}: aux22695_INTEGER :: var_is_introduced ;
var 2..44: aux22696:: var_is_introduced ;
var bool: aux22697_BOOL:: var_is_introduced ;
var bool: aux22698_BOOL:: var_is_introduced ;
var bool: aux22699_BOOL:: var_is_introduced ;
var {0,1}: aux22699_INTEGER :: var_is_introduced ;
var 3..45: aux22700:: var_is_introduced ;
var bool: aux22701_BOOL:: var_is_introduced ;
var bool: aux22702_BOOL:: var_is_introduced ;
var bool: aux22703_BOOL:: var_is_introduced ;
var {0,1}: aux22703_INTEGER :: var_is_introduced ;
var 1..43: aux22704:: var_is_introduced ;
var bool: aux22705_BOOL:: var_is_introduced ;
var bool: aux22706_BOOL:: var_is_introduced ;
var bool: aux22707_BOOL:: var_is_introduced ;
var {0,1}: aux22707_INTEGER :: var_is_introduced ;
var 3..45: aux22708:: var_is_introduced ;
var bool: aux22709_BOOL:: var_is_introduced ;
var bool: aux22710_BOOL:: var_is_introduced ;
var bool: aux22711_BOOL:: var_is_introduced ;
var {0,1}: aux22711_INTEGER :: var_is_introduced ;
var 2..44: aux22712:: var_is_introduced ;
var bool: aux22713_BOOL:: var_is_introduced ;
var bool: aux22714_BOOL:: var_is_introduced ;
var bool: aux22715_BOOL:: var_is_introduced ;
var {0,1}: aux22715_INTEGER :: var_is_introduced ;
var 2..44: aux22716:: var_is_introduced ;
var bool: aux22717_BOOL:: var_is_introduced ;
var bool: aux22718_BOOL:: var_is_introduced ;
var bool: aux22719_BOOL:: var_is_introduced ;
var {0,1}: aux22719_INTEGER :: var_is_introduced ;
var 3..45: aux22720:: var_is_introduced ;
var bool: aux22721_BOOL:: var_is_introduced ;
var bool: aux22722_BOOL:: var_is_introduced ;
var bool: aux22723_BOOL:: var_is_introduced ;
var {0,1}: aux22723_INTEGER :: var_is_introduced ;
var 3..45: aux22724:: var_is_introduced ;
var bool: aux22725_BOOL:: var_is_introduced ;
var bool: aux22726_BOOL:: var_is_introduced ;
var bool: aux22727_BOOL:: var_is_introduced ;
var {0,1}: aux22727_INTEGER :: var_is_introduced ;
var 4..46: aux22728:: var_is_introduced ;
var bool: aux22729_BOOL:: var_is_introduced ;
var bool: aux22730_BOOL:: var_is_introduced ;
var bool: aux22731_BOOL:: var_is_introduced ;
var {0,1}: aux22731_INTEGER :: var_is_introduced ;
var 3..45: aux22732:: var_is_introduced ;
var bool: aux22733_BOOL:: var_is_introduced ;
var {0,1}: aux22733_INTEGER :: var_is_introduced ;
constraint bool2int(w_00001_00001_BOOL,w_00001_00001_INTEGER);
constraint bool2int(w_00001_00002_BOOL,w_00001_00002_INTEGER);
constraint bool2int(w_00001_00003_BOOL,w_00001_00003_INTEGER);
constraint bool2int(w_00001_00004_BOOL,w_00001_00004_INTEGER);
constraint bool2int(w_00001_00005_BOOL,w_00001_00005_INTEGER);
constraint bool2int(w_00001_00006_BOOL,w_00001_00006_INTEGER);
constraint bool2int(w_00001_00007_BOOL,w_00001_00007_INTEGER);
constraint bool2int(w_00001_00008_BOOL,w_00001_00008_INTEGER);
constraint bool2int(w_00001_00009_BOOL,w_00001_00009_INTEGER);
constraint bool2int(w_00001_00010_BOOL,w_00001_00010_INTEGER);
constraint bool2int(w_00001_00011_BOOL,w_00001_00011_INTEGER);
constraint bool2int(w_00001_00012_BOOL,w_00001_00012_INTEGER);
constraint bool2int(w_00001_00013_BOOL,w_00001_00013_INTEGER);
constraint bool2int(w_00001_00014_BOOL,w_00001_00014_INTEGER);
constraint bool2int(w_00001_00015_BOOL,w_00001_00015_INTEGER);
constraint bool2int(w_00001_00016_BOOL,w_00001_00016_INTEGER);
constraint bool2int(w_00001_00017_BOOL,w_00001_00017_INTEGER);
constraint bool2int(w_00001_00018_BOOL,w_00001_00018_INTEGER);
constraint bool2int(w_00001_00019_BOOL,w_00001_00019_INTEGER);
constraint bool2int(w_00001_00020_BOOL,w_00001_00020_INTEGER);
constraint bool2int(w_00002_00001_BOOL,w_00002_00001_INTEGER);
constraint bool2int(w_00002_00002_BOOL,w_00002_00002_INTEGER);
constraint bool2int(w_00002_00003_BOOL,w_00002_00003_INTEGER);
constraint bool2int(w_00002_00004_BOOL,w_00002_00004_INTEGER);
constraint bool2int(w_00002_00005_BOOL,w_00002_00005_INTEGER);
constraint bool2int(w_00002_00006_BOOL,w_00002_00006_INTEGER);
constraint bool2int(w_00002_00007_BOOL,w_00002_00007_INTEGER);
constraint bool2int(w_00002_00008_BOOL,w_00002_00008_INTEGER);
constraint bool2int(w_00002_00009_BOOL,w_00002_00009_INTEGER);
constraint bool2int(w_00002_00010_BOOL,w_00002_00010_INTEGER);
constraint bool2int(w_00002_00011_BOOL,w_00002_00011_INTEGER);
constraint bool2int(w_00002_00012_BOOL,w_00002_00012_INTEGER);
constraint bool2int(w_00002_00013_BOOL,w_00002_00013_INTEGER);
constraint bool2int(w_00002_00014_BOOL,w_00002_00014_INTEGER);
constraint bool2int(w_00002_00015_BOOL,w_00002_00015_INTEGER);
constraint bool2int(w_00002_00016_BOOL,w_00002_00016_INTEGER);
constraint bool2int(w_00002_00017_BOOL,w_00002_00017_INTEGER);
constraint bool2int(w_00002_00018_BOOL,w_00002_00018_INTEGER);
constraint bool2int(w_00002_00019_BOOL,w_00002_00019_INTEGER);
constraint bool2int(w_00002_00020_BOOL,w_00002_00020_INTEGER);
constraint bool2int(w_00003_00001_BOOL,w_00003_00001_INTEGER);
constraint bool2int(w_00003_00002_BOOL,w_00003_00002_INTEGER);
constraint bool2int(w_00003_00003_BOOL,w_00003_00003_INTEGER);
constraint bool2int(w_00003_00004_BOOL,w_00003_00004_INTEGER);
constraint bool2int(w_00003_00005_BOOL,w_00003_00005_INTEGER);
constraint bool2int(w_00003_00006_BOOL,w_00003_00006_INTEGER);
constraint bool2int(w_00003_00007_BOOL,w_00003_00007_INTEGER);
constraint bool2int(w_00003_00008_BOOL,w_00003_00008_INTEGER);
constraint bool2int(w_00003_00009_BOOL,w_00003_00009_INTEGER);
constraint bool2int(w_00003_00010_BOOL,w_00003_00010_INTEGER);
constraint bool2int(w_00003_00011_BOOL,w_00003_00011_INTEGER);
constraint bool2int(w_00003_00012_BOOL,w_00003_00012_INTEGER);
constraint bool2int(w_00003_00013_BOOL,w_00003_00013_INTEGER);
constraint bool2int(w_00003_00014_BOOL,w_00003_00014_INTEGER);
constraint bool2int(w_00003_00015_BOOL,w_00003_00015_INTEGER);
constraint bool2int(w_00003_00016_BOOL,w_00003_00016_INTEGER);
constraint bool2int(w_00003_00017_BOOL,w_00003_00017_INTEGER);
constraint bool2int(w_00003_00018_BOOL,w_00003_00018_INTEGER);
constraint bool2int(w_00003_00019_BOOL,w_00003_00019_INTEGER);
constraint bool2int(w_00003_00020_BOOL,w_00003_00020_INTEGER);
constraint bool2int(w_00004_00001_BOOL,w_00004_00001_INTEGER);
constraint bool2int(w_00004_00002_BOOL,w_00004_00002_INTEGER);
constraint bool2int(w_00004_00003_BOOL,w_00004_00003_INTEGER);
constraint bool2int(w_00004_00004_BOOL,w_00004_00004_INTEGER);
constraint bool2int(w_00004_00005_BOOL,w_00004_00005_INTEGER);
constraint bool2int(w_00004_00006_BOOL,w_00004_00006_INTEGER);
constraint bool2int(w_00004_00007_BOOL,w_00004_00007_INTEGER);
constraint bool2int(w_00004_00008_BOOL,w_00004_00008_INTEGER);
constraint bool2int(w_00004_00009_BOOL,w_00004_00009_INTEGER);
constraint bool2int(w_00004_00010_BOOL,w_00004_00010_INTEGER);
constraint bool2int(w_00004_00011_BOOL,w_00004_00011_INTEGER);
constraint bool2int(w_00004_00012_BOOL,w_00004_00012_INTEGER);
constraint bool2int(w_00004_00013_BOOL,w_00004_00013_INTEGER);
constraint bool2int(w_00004_00014_BOOL,w_00004_00014_INTEGER);
constraint bool2int(w_00004_00015_BOOL,w_00004_00015_INTEGER);
constraint bool2int(w_00004_00016_BOOL,w_00004_00016_INTEGER);
constraint bool2int(w_00004_00017_BOOL,w_00004_00017_INTEGER);
constraint bool2int(w_00004_00018_BOOL,w_00004_00018_INTEGER);
constraint bool2int(w_00004_00019_BOOL,w_00004_00019_INTEGER);
constraint bool2int(w_00004_00020_BOOL,w_00004_00020_INTEGER);
constraint bool2int(w_00005_00001_BOOL,w_00005_00001_INTEGER);
constraint bool2int(w_00005_00002_BOOL,w_00005_00002_INTEGER);
constraint bool2int(w_00005_00003_BOOL,w_00005_00003_INTEGER);
constraint bool2int(w_00005_00004_BOOL,w_00005_00004_INTEGER);
constraint bool2int(w_00005_00005_BOOL,w_00005_00005_INTEGER);
constraint bool2int(w_00005_00006_BOOL,w_00005_00006_INTEGER);
constraint bool2int(w_00005_00007_BOOL,w_00005_00007_INTEGER);
constraint bool2int(w_00005_00008_BOOL,w_00005_00008_INTEGER);
constraint bool2int(w_00005_00009_BOOL,w_00005_00009_INTEGER);
constraint bool2int(w_00005_00010_BOOL,w_00005_00010_INTEGER);
constraint bool2int(w_00005_00011_BOOL,w_00005_00011_INTEGER);
constraint bool2int(w_00005_00012_BOOL,w_00005_00012_INTEGER);
constraint bool2int(w_00005_00013_BOOL,w_00005_00013_INTEGER);
constraint bool2int(w_00005_00014_BOOL,w_00005_00014_INTEGER);
constraint bool2int(w_00005_00015_BOOL,w_00005_00015_INTEGER);
constraint bool2int(w_00005_00016_BOOL,w_00005_00016_INTEGER);
constraint bool2int(w_00005_00017_BOOL,w_00005_00017_INTEGER);
constraint bool2int(w_00005_00018_BOOL,w_00005_00018_INTEGER);
constraint bool2int(w_00005_00019_BOOL,w_00005_00019_INTEGER);
constraint bool2int(w_00005_00020_BOOL,w_00005_00020_INTEGER);
constraint bool2int(w_00006_00001_BOOL,w_00006_00001_INTEGER);
constraint bool2int(w_00006_00002_BOOL,w_00006_00002_INTEGER);
constraint bool2int(w_00006_00003_BOOL,w_00006_00003_INTEGER);
constraint bool2int(w_00006_00004_BOOL,w_00006_00004_INTEGER);
constraint bool2int(w_00006_00005_BOOL,w_00006_00005_INTEGER);
constraint bool2int(w_00006_00006_BOOL,w_00006_00006_INTEGER);
constraint bool2int(w_00006_00007_BOOL,w_00006_00007_INTEGER);
constraint bool2int(w_00006_00008_BOOL,w_00006_00008_INTEGER);
constraint bool2int(w_00006_00009_BOOL,w_00006_00009_INTEGER);
constraint bool2int(w_00006_00010_BOOL,w_00006_00010_INTEGER);
constraint bool2int(w_00006_00011_BOOL,w_00006_00011_INTEGER);
constraint bool2int(w_00006_00012_BOOL,w_00006_00012_INTEGER);
constraint bool2int(w_00006_00013_BOOL,w_00006_00013_INTEGER);
constraint bool2int(w_00006_00014_BOOL,w_00006_00014_INTEGER);
constraint bool2int(w_00006_00015_BOOL,w_00006_00015_INTEGER);
constraint bool2int(w_00006_00016_BOOL,w_00006_00016_INTEGER);
constraint bool2int(w_00006_00017_BOOL,w_00006_00017_INTEGER);
constraint bool2int(w_00006_00018_BOOL,w_00006_00018_INTEGER);
constraint bool2int(w_00006_00019_BOOL,w_00006_00019_INTEGER);
constraint bool2int(w_00006_00020_BOOL,w_00006_00020_INTEGER);
constraint bool2int(w_00007_00001_BOOL,w_00007_00001_INTEGER);
constraint bool2int(w_00007_00002_BOOL,w_00007_00002_INTEGER);
constraint bool2int(w_00007_00003_BOOL,w_00007_00003_INTEGER);
constraint bool2int(w_00007_00004_BOOL,w_00007_00004_INTEGER);
constraint bool2int(w_00007_00005_BOOL,w_00007_00005_INTEGER);
constraint bool2int(w_00007_00006_BOOL,w_00007_00006_INTEGER);
constraint bool2int(w_00007_00007_BOOL,w_00007_00007_INTEGER);
constraint bool2int(w_00007_00008_BOOL,w_00007_00008_INTEGER);
constraint bool2int(w_00007_00009_BOOL,w_00007_00009_INTEGER);
constraint bool2int(w_00007_00010_BOOL,w_00007_00010_INTEGER);
constraint bool2int(w_00007_00011_BOOL,w_00007_00011_INTEGER);
constraint bool2int(w_00007_00012_BOOL,w_00007_00012_INTEGER);
constraint bool2int(w_00007_00013_BOOL,w_00007_00013_INTEGER);
constraint bool2int(w_00007_00014_BOOL,w_00007_00014_INTEGER);
constraint bool2int(w_00007_00015_BOOL,w_00007_00015_INTEGER);
constraint bool2int(w_00007_00016_BOOL,w_00007_00016_INTEGER);
constraint bool2int(w_00007_00017_BOOL,w_00007_00017_INTEGER);
constraint bool2int(w_00007_00018_BOOL,w_00007_00018_INTEGER);
constraint bool2int(w_00007_00019_BOOL,w_00007_00019_INTEGER);
constraint bool2int(w_00007_00020_BOOL,w_00007_00020_INTEGER);
constraint bool2int(w_00008_00001_BOOL,w_00008_00001_INTEGER);
constraint bool2int(w_00008_00002_BOOL,w_00008_00002_INTEGER);
constraint bool2int(w_00008_00003_BOOL,w_00008_00003_INTEGER);
constraint bool2int(w_00008_00004_BOOL,w_00008_00004_INTEGER);
constraint bool2int(w_00008_00005_BOOL,w_00008_00005_INTEGER);
constraint bool2int(w_00008_00006_BOOL,w_00008_00006_INTEGER);
constraint bool2int(w_00008_00007_BOOL,w_00008_00007_INTEGER);
constraint bool2int(w_00008_00008_BOOL,w_00008_00008_INTEGER);
constraint bool2int(w_00008_00009_BOOL,w_00008_00009_INTEGER);
constraint bool2int(w_00008_00010_BOOL,w_00008_00010_INTEGER);
constraint bool2int(w_00008_00011_BOOL,w_00008_00011_INTEGER);
constraint bool2int(w_00008_00012_BOOL,w_00008_00012_INTEGER);
constraint bool2int(w_00008_00013_BOOL,w_00008_00013_INTEGER);
constraint bool2int(w_00008_00014_BOOL,w_00008_00014_INTEGER);
constraint bool2int(w_00008_00015_BOOL,w_00008_00015_INTEGER);
constraint bool2int(w_00008_00016_BOOL,w_00008_00016_INTEGER);
constraint bool2int(w_00008_00017_BOOL,w_00008_00017_INTEGER);
constraint bool2int(w_00008_00018_BOOL,w_00008_00018_INTEGER);
constraint bool2int(w_00008_00019_BOOL,w_00008_00019_INTEGER);
constraint bool2int(w_00008_00020_BOOL,w_00008_00020_INTEGER);
constraint bool2int(aux11_BOOL,aux11_INTEGER);
constraint bool2int(aux13_BOOL,aux13_INTEGER);
constraint bool2int(aux15_BOOL,aux15_INTEGER);
constraint bool2int(aux17_BOOL,aux17_INTEGER);
constraint bool2int(aux19_BOOL,aux19_INTEGER);
constraint bool2int(aux21_BOOL,aux21_INTEGER);
constraint bool2int(aux23_BOOL,aux23_INTEGER);
constraint bool2int(aux25_BOOL,aux25_INTEGER);
constraint bool2int(aux27_BOOL,aux27_INTEGER);
constraint bool2int(aux29_BOOL,aux29_INTEGER);
constraint bool2int(aux31_BOOL,aux31_INTEGER);
constraint bool2int(aux33_BOOL,aux33_INTEGER);
constraint bool2int(aux35_BOOL,aux35_INTEGER);
constraint bool2int(aux37_BOOL,aux37_INTEGER);
constraint bool2int(aux39_BOOL,aux39_INTEGER);
constraint bool2int(aux41_BOOL,aux41_INTEGER);
constraint bool2int(aux43_BOOL,aux43_INTEGER);
constraint bool2int(aux45_BOOL,aux45_INTEGER);
constraint bool2int(aux47_BOOL,aux47_INTEGER);
constraint bool2int(aux49_BOOL,aux49_INTEGER);
constraint bool2int(aux51_BOOL,aux51_INTEGER);
constraint bool2int(aux53_BOOL,aux53_INTEGER);
constraint bool2int(aux55_BOOL,aux55_INTEGER);
constraint bool2int(aux57_BOOL,aux57_INTEGER);
constraint bool2int(aux59_BOOL,aux59_INTEGER);
constraint bool2int(aux61_BOOL,aux61_INTEGER);
constraint bool2int(aux63_BOOL,aux63_INTEGER);
constraint bool2int(aux65_BOOL,aux65_INTEGER);
constraint bool2int(aux67_BOOL,aux67_INTEGER);
constraint bool2int(aux69_BOOL,aux69_INTEGER);
constraint bool2int(aux71_BOOL,aux71_INTEGER);
constraint bool2int(aux73_BOOL,aux73_INTEGER);
constraint bool2int(aux75_BOOL,aux75_INTEGER);
constraint bool2int(aux77_BOOL,aux77_INTEGER);
constraint bool2int(aux79_BOOL,aux79_INTEGER);
constraint bool2int(aux81_BOOL,aux81_INTEGER);
constraint bool2int(aux83_BOOL,aux83_INTEGER);
constraint bool2int(aux85_BOOL,aux85_INTEGER);
constraint bool2int(aux87_BOOL,aux87_INTEGER);
constraint bool2int(aux89_BOOL,aux89_INTEGER);
constraint bool2int(aux91_BOOL,aux91_INTEGER);
constraint bool2int(aux93_BOOL,aux93_INTEGER);
constraint bool2int(aux95_BOOL,aux95_INTEGER);
constraint bool2int(aux97_BOOL,aux97_INTEGER);
constraint bool2int(aux99_BOOL,aux99_INTEGER);
constraint bool2int(aux101_BOOL,aux101_INTEGER);
constraint bool2int(aux103_BOOL,aux103_INTEGER);
constraint bool2int(aux105_BOOL,aux105_INTEGER);
constraint bool2int(aux107_BOOL,aux107_INTEGER);
constraint bool2int(aux109_BOOL,aux109_INTEGER);
constraint bool2int(aux111_BOOL,aux111_INTEGER);
constraint bool2int(aux113_BOOL,aux113_INTEGER);
constraint bool2int(aux115_BOOL,aux115_INTEGER);
constraint bool2int(aux117_BOOL,aux117_INTEGER);
constraint bool2int(aux119_BOOL,aux119_INTEGER);
constraint bool2int(aux121_BOOL,aux121_INTEGER);
constraint bool2int(aux123_BOOL,aux123_INTEGER);
constraint bool2int(aux125_BOOL,aux125_INTEGER);
constraint bool2int(aux127_BOOL,aux127_INTEGER);
constraint bool2int(aux129_BOOL,aux129_INTEGER);
constraint bool2int(aux131_BOOL,aux131_INTEGER);
constraint bool2int(aux133_BOOL,aux133_INTEGER);
constraint bool2int(aux135_BOOL,aux135_INTEGER);
constraint bool2int(aux137_BOOL,aux137_INTEGER);
constraint bool2int(aux139_BOOL,aux139_INTEGER);
constraint bool2int(aux141_BOOL,aux141_INTEGER);
constraint bool2int(aux143_BOOL,aux143_INTEGER);
constraint bool2int(aux145_BOOL,aux145_INTEGER);
constraint bool2int(aux147_BOOL,aux147_INTEGER);
constraint bool2int(aux149_BOOL,aux149_INTEGER);
constraint bool2int(aux151_BOOL,aux151_INTEGER);
constraint bool2int(aux153_BOOL,aux153_INTEGER);
constraint bool2int(aux155_BOOL,aux155_INTEGER);
constraint bool2int(aux157_BOOL,aux157_INTEGER);
constraint bool2int(aux159_BOOL,aux159_INTEGER);
constraint bool2int(aux161_BOOL,aux161_INTEGER);
constraint bool2int(aux163_BOOL,aux163_INTEGER);
constraint bool2int(aux165_BOOL,aux165_INTEGER);
constraint bool2int(aux167_BOOL,aux167_INTEGER);
constraint bool2int(aux169_BOOL,aux169_INTEGER);
constraint bool2int(aux171_BOOL,aux171_INTEGER);
constraint bool2int(aux173_BOOL,aux173_INTEGER);
constraint bool2int(aux175_BOOL,aux175_INTEGER);
constraint bool2int(aux177_BOOL,aux177_INTEGER);
constraint bool2int(aux179_BOOL,aux179_INTEGER);
constraint bool2int(aux181_BOOL,aux181_INTEGER);
constraint bool2int(aux183_BOOL,aux183_INTEGER);
constraint bool2int(aux185_BOOL,aux185_INTEGER);
constraint bool2int(aux187_BOOL,aux187_INTEGER);
constraint bool2int(aux189_BOOL,aux189_INTEGER);
constraint bool2int(aux191_BOOL,aux191_INTEGER);
constraint bool2int(aux193_BOOL,aux193_INTEGER);
constraint bool2int(aux195_BOOL,aux195_INTEGER);
constraint bool2int(aux197_BOOL,aux197_INTEGER);
constraint bool2int(aux199_BOOL,aux199_INTEGER);
constraint bool2int(aux201_BOOL,aux201_INTEGER);
constraint bool2int(aux203_BOOL,aux203_INTEGER);
constraint bool2int(aux205_BOOL,aux205_INTEGER);
constraint bool2int(aux207_BOOL,aux207_INTEGER);
constraint bool2int(aux209_BOOL,aux209_INTEGER);
constraint bool2int(aux211_BOOL,aux211_INTEGER);
constraint bool2int(aux213_BOOL,aux213_INTEGER);
constraint bool2int(aux215_BOOL,aux215_INTEGER);
constraint bool2int(aux217_BOOL,aux217_INTEGER);
constraint bool2int(aux219_BOOL,aux219_INTEGER);
constraint bool2int(aux221_BOOL,aux221_INTEGER);
constraint bool2int(aux223_BOOL,aux223_INTEGER);
constraint bool2int(aux225_BOOL,aux225_INTEGER);
constraint bool2int(aux227_BOOL,aux227_INTEGER);
constraint bool2int(aux229_BOOL,aux229_INTEGER);
constraint bool2int(aux231_BOOL,aux231_INTEGER);
constraint bool2int(aux233_BOOL,aux233_INTEGER);
constraint bool2int(aux235_BOOL,aux235_INTEGER);
constraint bool2int(aux237_BOOL,aux237_INTEGER);
constraint bool2int(aux239_BOOL,aux239_INTEGER);
constraint bool2int(aux241_BOOL,aux241_INTEGER);
constraint bool2int(aux243_BOOL,aux243_INTEGER);
constraint bool2int(aux245_BOOL,aux245_INTEGER);
constraint bool2int(aux247_BOOL,aux247_INTEGER);
constraint bool2int(aux249_BOOL,aux249_INTEGER);
constraint bool2int(aux251_BOOL,aux251_INTEGER);
constraint bool2int(aux253_BOOL,aux253_INTEGER);
constraint bool2int(aux255_BOOL,aux255_INTEGER);
constraint bool2int(aux257_BOOL,aux257_INTEGER);
constraint bool2int(aux259_BOOL,aux259_INTEGER);
constraint bool2int(aux261_BOOL,aux261_INTEGER);
constraint bool2int(aux263_BOOL,aux263_INTEGER);
constraint bool2int(aux265_BOOL,aux265_INTEGER);
constraint bool2int(aux267_BOOL,aux267_INTEGER);
constraint bool2int(aux269_BOOL,aux269_INTEGER);
constraint bool2int(aux271_BOOL,aux271_INTEGER);
constraint bool2int(aux273_BOOL,aux273_INTEGER);
constraint bool2int(aux275_BOOL,aux275_INTEGER);
constraint bool2int(aux277_BOOL,aux277_INTEGER);
constraint bool2int(aux279_BOOL,aux279_INTEGER);
constraint bool2int(aux281_BOOL,aux281_INTEGER);
constraint bool2int(aux283_BOOL,aux283_INTEGER);
constraint bool2int(aux285_BOOL,aux285_INTEGER);
constraint bool2int(aux287_BOOL,aux287_INTEGER);
constraint bool2int(aux289_BOOL,aux289_INTEGER);
constraint bool2int(aux291_BOOL,aux291_INTEGER);
constraint bool2int(aux293_BOOL,aux293_INTEGER);
constraint bool2int(aux295_BOOL,aux295_INTEGER);
constraint bool2int(aux297_BOOL,aux297_INTEGER);
constraint bool2int(aux299_BOOL,aux299_INTEGER);
constraint bool2int(aux301_BOOL,aux301_INTEGER);
constraint bool2int(aux303_BOOL,aux303_INTEGER);
constraint bool2int(aux305_BOOL,aux305_INTEGER);
constraint bool2int(aux307_BOOL,aux307_INTEGER);
constraint bool2int(aux309_BOOL,aux309_INTEGER);
constraint bool2int(aux311_BOOL,aux311_INTEGER);
constraint bool2int(aux313_BOOL,aux313_INTEGER);
constraint bool2int(aux315_BOOL,aux315_INTEGER);
constraint bool2int(aux317_BOOL,aux317_INTEGER);
constraint bool2int(aux319_BOOL,aux319_INTEGER);
constraint bool2int(aux321_BOOL,aux321_INTEGER);
constraint bool2int(aux323_BOOL,aux323_INTEGER);
constraint bool2int(aux325_BOOL,aux325_INTEGER);
constraint bool2int(aux327_BOOL,aux327_INTEGER);
constraint bool2int(aux329_BOOL,aux329_INTEGER);
constraint bool2int(aux331_BOOL,aux331_INTEGER);
constraint bool2int(aux333_BOOL,aux333_INTEGER);
constraint bool2int(aux335_BOOL,aux335_INTEGER);
constraint bool2int(aux337_BOOL,aux337_INTEGER);
constraint bool2int(aux339_BOOL,aux339_INTEGER);
constraint bool2int(aux341_BOOL,aux341_INTEGER);
constraint bool2int(aux343_BOOL,aux343_INTEGER);
constraint bool2int(aux345_BOOL,aux345_INTEGER);
constraint bool2int(aux347_BOOL,aux347_INTEGER);
constraint bool2int(aux349_BOOL,aux349_INTEGER);
constraint bool2int(aux351_BOOL,aux351_INTEGER);
constraint bool2int(aux353_BOOL,aux353_INTEGER);
constraint bool2int(aux355_BOOL,aux355_INTEGER);
constraint bool2int(aux357_BOOL,aux357_INTEGER);
constraint bool2int(aux359_BOOL,aux359_INTEGER);
constraint bool2int(aux361_BOOL,aux361_INTEGER);
constraint bool2int(aux363_BOOL,aux363_INTEGER);
constraint bool2int(aux365_BOOL,aux365_INTEGER);
constraint bool2int(aux367_BOOL,aux367_INTEGER);
constraint bool2int(aux369_BOOL,aux369_INTEGER);
constraint bool2int(aux371_BOOL,aux371_INTEGER);
constraint bool2int(aux373_BOOL,aux373_INTEGER);
constraint bool2int(aux375_BOOL,aux375_INTEGER);
constraint bool2int(aux377_BOOL,aux377_INTEGER);
constraint bool2int(aux379_BOOL,aux379_INTEGER);
constraint bool2int(aux381_BOOL,aux381_INTEGER);
constraint bool2int(aux383_BOOL,aux383_INTEGER);
constraint bool2int(aux385_BOOL,aux385_INTEGER);
constraint bool2int(aux387_BOOL,aux387_INTEGER);
constraint bool2int(aux389_BOOL,aux389_INTEGER);
constraint bool2int(aux391_BOOL,aux391_INTEGER);
constraint bool2int(aux393_BOOL,aux393_INTEGER);
constraint bool2int(aux395_BOOL,aux395_INTEGER);
constraint bool2int(aux397_BOOL,aux397_INTEGER);
constraint bool2int(aux399_BOOL,aux399_INTEGER);
constraint bool2int(aux401_BOOL,aux401_INTEGER);
constraint bool2int(aux403_BOOL,aux403_INTEGER);
constraint bool2int(aux405_BOOL,aux405_INTEGER);
constraint bool2int(aux407_BOOL,aux407_INTEGER);
constraint bool2int(aux409_BOOL,aux409_INTEGER);
constraint bool2int(aux411_BOOL,aux411_INTEGER);
constraint bool2int(aux413_BOOL,aux413_INTEGER);
constraint bool2int(aux415_BOOL,aux415_INTEGER);
constraint bool2int(aux579_BOOL,aux579_INTEGER);
constraint bool2int(aux585_BOOL,aux585_INTEGER);
constraint bool2int(aux591_BOOL,aux591_INTEGER);
constraint bool2int(aux597_BOOL,aux597_INTEGER);
constraint bool2int(aux603_BOOL,aux603_INTEGER);
constraint bool2int(aux609_BOOL,aux609_INTEGER);
constraint bool2int(aux615_BOOL,aux615_INTEGER);
constraint bool2int(aux621_BOOL,aux621_INTEGER);
constraint bool2int(aux627_BOOL,aux627_INTEGER);
constraint bool2int(aux633_BOOL,aux633_INTEGER);
constraint bool2int(aux639_BOOL,aux639_INTEGER);
constraint bool2int(aux645_BOOL,aux645_INTEGER);
constraint bool2int(aux651_BOOL,aux651_INTEGER);
constraint bool2int(aux657_BOOL,aux657_INTEGER);
constraint bool2int(aux663_BOOL,aux663_INTEGER);
constraint bool2int(aux669_BOOL,aux669_INTEGER);
constraint bool2int(aux675_BOOL,aux675_INTEGER);
constraint bool2int(aux681_BOOL,aux681_INTEGER);
constraint bool2int(aux687_BOOL,aux687_INTEGER);
constraint bool2int(aux693_BOOL,aux693_INTEGER);
constraint bool2int(aux698_BOOL,aux698_INTEGER);
constraint bool2int(aux704_BOOL,aux704_INTEGER);
constraint bool2int(aux710_BOOL,aux710_INTEGER);
constraint bool2int(aux716_BOOL,aux716_INTEGER);
constraint bool2int(aux722_BOOL,aux722_INTEGER);
constraint bool2int(aux728_BOOL,aux728_INTEGER);
constraint bool2int(aux734_BOOL,aux734_INTEGER);
constraint bool2int(aux740_BOOL,aux740_INTEGER);
constraint bool2int(aux746_BOOL,aux746_INTEGER);
constraint bool2int(aux752_BOOL,aux752_INTEGER);
constraint bool2int(aux758_BOOL,aux758_INTEGER);
constraint bool2int(aux764_BOOL,aux764_INTEGER);
constraint bool2int(aux770_BOOL,aux770_INTEGER);
constraint bool2int(aux776_BOOL,aux776_INTEGER);
constraint bool2int(aux782_BOOL,aux782_INTEGER);
constraint bool2int(aux788_BOOL,aux788_INTEGER);
constraint bool2int(aux794_BOOL,aux794_INTEGER);
constraint bool2int(aux800_BOOL,aux800_INTEGER);
constraint bool2int(aux806_BOOL,aux806_INTEGER);
constraint bool2int(aux812_BOOL,aux812_INTEGER);
constraint bool2int(aux817_BOOL,aux817_INTEGER);
constraint bool2int(aux823_BOOL,aux823_INTEGER);
constraint bool2int(aux829_BOOL,aux829_INTEGER);
constraint bool2int(aux835_BOOL,aux835_INTEGER);
constraint bool2int(aux841_BOOL,aux841_INTEGER);
constraint bool2int(aux847_BOOL,aux847_INTEGER);
constraint bool2int(aux853_BOOL,aux853_INTEGER);
constraint bool2int(aux859_BOOL,aux859_INTEGER);
constraint bool2int(aux865_BOOL,aux865_INTEGER);
constraint bool2int(aux871_BOOL,aux871_INTEGER);
constraint bool2int(aux877_BOOL,aux877_INTEGER);
constraint bool2int(aux883_BOOL,aux883_INTEGER);
constraint bool2int(aux889_BOOL,aux889_INTEGER);
constraint bool2int(aux895_BOOL,aux895_INTEGER);
constraint bool2int(aux901_BOOL,aux901_INTEGER);
constraint bool2int(aux907_BOOL,aux907_INTEGER);
constraint bool2int(aux913_BOOL,aux913_INTEGER);
constraint bool2int(aux919_BOOL,aux919_INTEGER);
constraint bool2int(aux925_BOOL,aux925_INTEGER);
constraint bool2int(aux931_BOOL,aux931_INTEGER);
constraint bool2int(aux936_BOOL,aux936_INTEGER);
constraint bool2int(aux942_BOOL,aux942_INTEGER);
constraint bool2int(aux948_BOOL,aux948_INTEGER);
constraint bool2int(aux954_BOOL,aux954_INTEGER);
constraint bool2int(aux960_BOOL,aux960_INTEGER);
constraint bool2int(aux966_BOOL,aux966_INTEGER);
constraint bool2int(aux972_BOOL,aux972_INTEGER);
constraint bool2int(aux978_BOOL,aux978_INTEGER);
constraint bool2int(aux984_BOOL,aux984_INTEGER);
constraint bool2int(aux990_BOOL,aux990_INTEGER);
constraint bool2int(aux996_BOOL,aux996_INTEGER);
constraint bool2int(aux1002_BOOL,aux1002_INTEGER);
constraint bool2int(aux1008_BOOL,aux1008_INTEGER);
constraint bool2int(aux1014_BOOL,aux1014_INTEGER);
constraint bool2int(aux1020_BOOL,aux1020_INTEGER);
constraint bool2int(aux1026_BOOL,aux1026_INTEGER);
constraint bool2int(aux1032_BOOL,aux1032_INTEGER);
constraint bool2int(aux1038_BOOL,aux1038_INTEGER);
constraint bool2int(aux1044_BOOL,aux1044_INTEGER);
constraint bool2int(aux1050_BOOL,aux1050_INTEGER);
constraint bool2int(aux1055_BOOL,aux1055_INTEGER);
constraint bool2int(aux1061_BOOL,aux1061_INTEGER);
constraint bool2int(aux1067_BOOL,aux1067_INTEGER);
constraint bool2int(aux1073_BOOL,aux1073_INTEGER);
constraint bool2int(aux1079_BOOL,aux1079_INTEGER);
constraint bool2int(aux1085_BOOL,aux1085_INTEGER);
constraint bool2int(aux1091_BOOL,aux1091_INTEGER);
constraint bool2int(aux1097_BOOL,aux1097_INTEGER);
constraint bool2int(aux1103_BOOL,aux1103_INTEGER);
constraint bool2int(aux1109_BOOL,aux1109_INTEGER);
constraint bool2int(aux1115_BOOL,aux1115_INTEGER);
constraint bool2int(aux1121_BOOL,aux1121_INTEGER);
constraint bool2int(aux1127_BOOL,aux1127_INTEGER);
constraint bool2int(aux1133_BOOL,aux1133_INTEGER);
constraint bool2int(aux1139_BOOL,aux1139_INTEGER);
constraint bool2int(aux1145_BOOL,aux1145_INTEGER);
constraint bool2int(aux1151_BOOL,aux1151_INTEGER);
constraint bool2int(aux1157_BOOL,aux1157_INTEGER);
constraint bool2int(aux1163_BOOL,aux1163_INTEGER);
constraint bool2int(aux1169_BOOL,aux1169_INTEGER);
constraint bool2int(aux1174_BOOL,aux1174_INTEGER);
constraint bool2int(aux1180_BOOL,aux1180_INTEGER);
constraint bool2int(aux1186_BOOL,aux1186_INTEGER);
constraint bool2int(aux1192_BOOL,aux1192_INTEGER);
constraint bool2int(aux1198_BOOL,aux1198_INTEGER);
constraint bool2int(aux1204_BOOL,aux1204_INTEGER);
constraint bool2int(aux1210_BOOL,aux1210_INTEGER);
constraint bool2int(aux1216_BOOL,aux1216_INTEGER);
constraint bool2int(aux1222_BOOL,aux1222_INTEGER);
constraint bool2int(aux1228_BOOL,aux1228_INTEGER);
constraint bool2int(aux1234_BOOL,aux1234_INTEGER);
constraint bool2int(aux1240_BOOL,aux1240_INTEGER);
constraint bool2int(aux1246_BOOL,aux1246_INTEGER);
constraint bool2int(aux1252_BOOL,aux1252_INTEGER);
constraint bool2int(aux1258_BOOL,aux1258_INTEGER);
constraint bool2int(aux1264_BOOL,aux1264_INTEGER);
constraint bool2int(aux1270_BOOL,aux1270_INTEGER);
constraint bool2int(aux1276_BOOL,aux1276_INTEGER);
constraint bool2int(aux1282_BOOL,aux1282_INTEGER);
constraint bool2int(aux1288_BOOL,aux1288_INTEGER);
constraint bool2int(aux1293_BOOL,aux1293_INTEGER);
constraint bool2int(aux1299_BOOL,aux1299_INTEGER);
constraint bool2int(aux1305_BOOL,aux1305_INTEGER);
constraint bool2int(aux1311_BOOL,aux1311_INTEGER);
constraint bool2int(aux1317_BOOL,aux1317_INTEGER);
constraint bool2int(aux1323_BOOL,aux1323_INTEGER);
constraint bool2int(aux1329_BOOL,aux1329_INTEGER);
constraint bool2int(aux1335_BOOL,aux1335_INTEGER);
constraint bool2int(aux1341_BOOL,aux1341_INTEGER);
constraint bool2int(aux1347_BOOL,aux1347_INTEGER);
constraint bool2int(aux1353_BOOL,aux1353_INTEGER);
constraint bool2int(aux1359_BOOL,aux1359_INTEGER);
constraint bool2int(aux1365_BOOL,aux1365_INTEGER);
constraint bool2int(aux1371_BOOL,aux1371_INTEGER);
constraint bool2int(aux1377_BOOL,aux1377_INTEGER);
constraint bool2int(aux1383_BOOL,aux1383_INTEGER);
constraint bool2int(aux1389_BOOL,aux1389_INTEGER);
constraint bool2int(aux1395_BOOL,aux1395_INTEGER);
constraint bool2int(aux1401_BOOL,aux1401_INTEGER);
constraint bool2int(aux1407_BOOL,aux1407_INTEGER);
constraint bool2int(aux1412_BOOL,aux1412_INTEGER);
constraint bool2int(aux1418_BOOL,aux1418_INTEGER);
constraint bool2int(aux1424_BOOL,aux1424_INTEGER);
constraint bool2int(aux1430_BOOL,aux1430_INTEGER);
constraint bool2int(aux1436_BOOL,aux1436_INTEGER);
constraint bool2int(aux1442_BOOL,aux1442_INTEGER);
constraint bool2int(aux1448_BOOL,aux1448_INTEGER);
constraint bool2int(aux1454_BOOL,aux1454_INTEGER);
constraint bool2int(aux1460_BOOL,aux1460_INTEGER);
constraint bool2int(aux1466_BOOL,aux1466_INTEGER);
constraint bool2int(aux1472_BOOL,aux1472_INTEGER);
constraint bool2int(aux1478_BOOL,aux1478_INTEGER);
constraint bool2int(aux1484_BOOL,aux1484_INTEGER);
constraint bool2int(aux1490_BOOL,aux1490_INTEGER);
constraint bool2int(aux1496_BOOL,aux1496_INTEGER);
constraint bool2int(aux1502_BOOL,aux1502_INTEGER);
constraint bool2int(aux1508_BOOL,aux1508_INTEGER);
constraint bool2int(aux1514_BOOL,aux1514_INTEGER);
constraint bool2int(aux1520_BOOL,aux1520_INTEGER);
constraint bool2int(aux1526_BOOL,aux1526_INTEGER);
constraint bool2int(aux1531_BOOL,aux1531_INTEGER);
constraint bool2int(aux1537_BOOL,aux1537_INTEGER);
constraint bool2int(aux1543_BOOL,aux1543_INTEGER);
constraint bool2int(aux1549_BOOL,aux1549_INTEGER);
constraint bool2int(aux1555_BOOL,aux1555_INTEGER);
constraint bool2int(aux1561_BOOL,aux1561_INTEGER);
constraint bool2int(aux1567_BOOL,aux1567_INTEGER);
constraint bool2int(aux1573_BOOL,aux1573_INTEGER);
constraint bool2int(aux1579_BOOL,aux1579_INTEGER);
constraint bool2int(aux1585_BOOL,aux1585_INTEGER);
constraint bool2int(aux1591_BOOL,aux1591_INTEGER);
constraint bool2int(aux1597_BOOL,aux1597_INTEGER);
constraint bool2int(aux1603_BOOL,aux1603_INTEGER);
constraint bool2int(aux1609_BOOL,aux1609_INTEGER);
constraint bool2int(aux1615_BOOL,aux1615_INTEGER);
constraint bool2int(aux1621_BOOL,aux1621_INTEGER);
constraint bool2int(aux1627_BOOL,aux1627_INTEGER);
constraint bool2int(aux1633_BOOL,aux1633_INTEGER);
constraint bool2int(aux1639_BOOL,aux1639_INTEGER);
constraint bool2int(aux1645_BOOL,aux1645_INTEGER);
constraint bool2int(aux1650_BOOL,aux1650_INTEGER);
constraint bool2int(aux1656_BOOL,aux1656_INTEGER);
constraint bool2int(aux1662_BOOL,aux1662_INTEGER);
constraint bool2int(aux1668_BOOL,aux1668_INTEGER);
constraint bool2int(aux1674_BOOL,aux1674_INTEGER);
constraint bool2int(aux1680_BOOL,aux1680_INTEGER);
constraint bool2int(aux1686_BOOL,aux1686_INTEGER);
constraint bool2int(aux1692_BOOL,aux1692_INTEGER);
constraint bool2int(aux1698_BOOL,aux1698_INTEGER);
constraint bool2int(aux1704_BOOL,aux1704_INTEGER);
constraint bool2int(aux1710_BOOL,aux1710_INTEGER);
constraint bool2int(aux1716_BOOL,aux1716_INTEGER);
constraint bool2int(aux1722_BOOL,aux1722_INTEGER);
constraint bool2int(aux1728_BOOL,aux1728_INTEGER);
constraint bool2int(aux1734_BOOL,aux1734_INTEGER);
constraint bool2int(aux1740_BOOL,aux1740_INTEGER);
constraint bool2int(aux1746_BOOL,aux1746_INTEGER);
constraint bool2int(aux1752_BOOL,aux1752_INTEGER);
constraint bool2int(aux1758_BOOL,aux1758_INTEGER);
constraint bool2int(aux1764_BOOL,aux1764_INTEGER);
constraint bool2int(aux1769_BOOL,aux1769_INTEGER);
constraint bool2int(aux1775_BOOL,aux1775_INTEGER);
constraint bool2int(aux1781_BOOL,aux1781_INTEGER);
constraint bool2int(aux1787_BOOL,aux1787_INTEGER);
constraint bool2int(aux1793_BOOL,aux1793_INTEGER);
constraint bool2int(aux1799_BOOL,aux1799_INTEGER);
constraint bool2int(aux1805_BOOL,aux1805_INTEGER);
constraint bool2int(aux1811_BOOL,aux1811_INTEGER);
constraint bool2int(aux1817_BOOL,aux1817_INTEGER);
constraint bool2int(aux1823_BOOL,aux1823_INTEGER);
constraint bool2int(aux1829_BOOL,aux1829_INTEGER);
constraint bool2int(aux1835_BOOL,aux1835_INTEGER);
constraint bool2int(aux1841_BOOL,aux1841_INTEGER);
constraint bool2int(aux1847_BOOL,aux1847_INTEGER);
constraint bool2int(aux1853_BOOL,aux1853_INTEGER);
constraint bool2int(aux1859_BOOL,aux1859_INTEGER);
constraint bool2int(aux1865_BOOL,aux1865_INTEGER);
constraint bool2int(aux1871_BOOL,aux1871_INTEGER);
constraint bool2int(aux1877_BOOL,aux1877_INTEGER);
constraint bool2int(aux1883_BOOL,aux1883_INTEGER);
constraint bool2int(aux1888_BOOL,aux1888_INTEGER);
constraint bool2int(aux1894_BOOL,aux1894_INTEGER);
constraint bool2int(aux1900_BOOL,aux1900_INTEGER);
constraint bool2int(aux1906_BOOL,aux1906_INTEGER);
constraint bool2int(aux1912_BOOL,aux1912_INTEGER);
constraint bool2int(aux1918_BOOL,aux1918_INTEGER);
constraint bool2int(aux1924_BOOL,aux1924_INTEGER);
constraint bool2int(aux1930_BOOL,aux1930_INTEGER);
constraint bool2int(aux1936_BOOL,aux1936_INTEGER);
constraint bool2int(aux1942_BOOL,aux1942_INTEGER);
constraint bool2int(aux1948_BOOL,aux1948_INTEGER);
constraint bool2int(aux1954_BOOL,aux1954_INTEGER);
constraint bool2int(aux1960_BOOL,aux1960_INTEGER);
constraint bool2int(aux1966_BOOL,aux1966_INTEGER);
constraint bool2int(aux1972_BOOL,aux1972_INTEGER);
constraint bool2int(aux1978_BOOL,aux1978_INTEGER);
constraint bool2int(aux1984_BOOL,aux1984_INTEGER);
constraint bool2int(aux1990_BOOL,aux1990_INTEGER);
constraint bool2int(aux1996_BOOL,aux1996_INTEGER);
constraint bool2int(aux2002_BOOL,aux2002_INTEGER);
constraint bool2int(aux2007_BOOL,aux2007_INTEGER);
constraint bool2int(aux2013_BOOL,aux2013_INTEGER);
constraint bool2int(aux2019_BOOL,aux2019_INTEGER);
constraint bool2int(aux2025_BOOL,aux2025_INTEGER);
constraint bool2int(aux2031_BOOL,aux2031_INTEGER);
constraint bool2int(aux2037_BOOL,aux2037_INTEGER);
constraint bool2int(aux2043_BOOL,aux2043_INTEGER);
constraint bool2int(aux2049_BOOL,aux2049_INTEGER);
constraint bool2int(aux2055_BOOL,aux2055_INTEGER);
constraint bool2int(aux2061_BOOL,aux2061_INTEGER);
constraint bool2int(aux2067_BOOL,aux2067_INTEGER);
constraint bool2int(aux2073_BOOL,aux2073_INTEGER);
constraint bool2int(aux2079_BOOL,aux2079_INTEGER);
constraint bool2int(aux2085_BOOL,aux2085_INTEGER);
constraint bool2int(aux2091_BOOL,aux2091_INTEGER);
constraint bool2int(aux2097_BOOL,aux2097_INTEGER);
constraint bool2int(aux2103_BOOL,aux2103_INTEGER);
constraint bool2int(aux2109_BOOL,aux2109_INTEGER);
constraint bool2int(aux2115_BOOL,aux2115_INTEGER);
constraint bool2int(aux2121_BOOL,aux2121_INTEGER);
constraint bool2int(aux2126_BOOL,aux2126_INTEGER);
constraint bool2int(aux2132_BOOL,aux2132_INTEGER);
constraint bool2int(aux2138_BOOL,aux2138_INTEGER);
constraint bool2int(aux2144_BOOL,aux2144_INTEGER);
constraint bool2int(aux2150_BOOL,aux2150_INTEGER);
constraint bool2int(aux2156_BOOL,aux2156_INTEGER);
constraint bool2int(aux2162_BOOL,aux2162_INTEGER);
constraint bool2int(aux2168_BOOL,aux2168_INTEGER);
constraint bool2int(aux2174_BOOL,aux2174_INTEGER);
constraint bool2int(aux2180_BOOL,aux2180_INTEGER);
constraint bool2int(aux2186_BOOL,aux2186_INTEGER);
constraint bool2int(aux2192_BOOL,aux2192_INTEGER);
constraint bool2int(aux2198_BOOL,aux2198_INTEGER);
constraint bool2int(aux2204_BOOL,aux2204_INTEGER);
constraint bool2int(aux2210_BOOL,aux2210_INTEGER);
constraint bool2int(aux2216_BOOL,aux2216_INTEGER);
constraint bool2int(aux2222_BOOL,aux2222_INTEGER);
constraint bool2int(aux2228_BOOL,aux2228_INTEGER);
constraint bool2int(aux2234_BOOL,aux2234_INTEGER);
constraint bool2int(aux2240_BOOL,aux2240_INTEGER);
constraint bool2int(aux2245_BOOL,aux2245_INTEGER);
constraint bool2int(aux2251_BOOL,aux2251_INTEGER);
constraint bool2int(aux2257_BOOL,aux2257_INTEGER);
constraint bool2int(aux2263_BOOL,aux2263_INTEGER);
constraint bool2int(aux2269_BOOL,aux2269_INTEGER);
constraint bool2int(aux2275_BOOL,aux2275_INTEGER);
constraint bool2int(aux2281_BOOL,aux2281_INTEGER);
constraint bool2int(aux2287_BOOL,aux2287_INTEGER);
constraint bool2int(aux2293_BOOL,aux2293_INTEGER);
constraint bool2int(aux2299_BOOL,aux2299_INTEGER);
constraint bool2int(aux2305_BOOL,aux2305_INTEGER);
constraint bool2int(aux2311_BOOL,aux2311_INTEGER);
constraint bool2int(aux2317_BOOL,aux2317_INTEGER);
constraint bool2int(aux2323_BOOL,aux2323_INTEGER);
constraint bool2int(aux2329_BOOL,aux2329_INTEGER);
constraint bool2int(aux2335_BOOL,aux2335_INTEGER);
constraint bool2int(aux2341_BOOL,aux2341_INTEGER);
constraint bool2int(aux2347_BOOL,aux2347_INTEGER);
constraint bool2int(aux2353_BOOL,aux2353_INTEGER);
constraint bool2int(aux2359_BOOL,aux2359_INTEGER);
constraint bool2int(aux2364_BOOL,aux2364_INTEGER);
constraint bool2int(aux2370_BOOL,aux2370_INTEGER);
constraint bool2int(aux2376_BOOL,aux2376_INTEGER);
constraint bool2int(aux2382_BOOL,aux2382_INTEGER);
constraint bool2int(aux2388_BOOL,aux2388_INTEGER);
constraint bool2int(aux2394_BOOL,aux2394_INTEGER);
constraint bool2int(aux2400_BOOL,aux2400_INTEGER);
constraint bool2int(aux2406_BOOL,aux2406_INTEGER);
constraint bool2int(aux2412_BOOL,aux2412_INTEGER);
constraint bool2int(aux2418_BOOL,aux2418_INTEGER);
constraint bool2int(aux2424_BOOL,aux2424_INTEGER);
constraint bool2int(aux2430_BOOL,aux2430_INTEGER);
constraint bool2int(aux2436_BOOL,aux2436_INTEGER);
constraint bool2int(aux2442_BOOL,aux2442_INTEGER);
constraint bool2int(aux2448_BOOL,aux2448_INTEGER);
constraint bool2int(aux2454_BOOL,aux2454_INTEGER);
constraint bool2int(aux2460_BOOL,aux2460_INTEGER);
constraint bool2int(aux2466_BOOL,aux2466_INTEGER);
constraint bool2int(aux2472_BOOL,aux2472_INTEGER);
constraint bool2int(aux2478_BOOL,aux2478_INTEGER);
constraint bool2int(aux2483_BOOL,aux2483_INTEGER);
constraint bool2int(aux2489_BOOL,aux2489_INTEGER);
constraint bool2int(aux2495_BOOL,aux2495_INTEGER);
constraint bool2int(aux2501_BOOL,aux2501_INTEGER);
constraint bool2int(aux2507_BOOL,aux2507_INTEGER);
constraint bool2int(aux2513_BOOL,aux2513_INTEGER);
constraint bool2int(aux2519_BOOL,aux2519_INTEGER);
constraint bool2int(aux2525_BOOL,aux2525_INTEGER);
constraint bool2int(aux2531_BOOL,aux2531_INTEGER);
constraint bool2int(aux2537_BOOL,aux2537_INTEGER);
constraint bool2int(aux2543_BOOL,aux2543_INTEGER);
constraint bool2int(aux2549_BOOL,aux2549_INTEGER);
constraint bool2int(aux2555_BOOL,aux2555_INTEGER);
constraint bool2int(aux2561_BOOL,aux2561_INTEGER);
constraint bool2int(aux2567_BOOL,aux2567_INTEGER);
constraint bool2int(aux2573_BOOL,aux2573_INTEGER);
constraint bool2int(aux2579_BOOL,aux2579_INTEGER);
constraint bool2int(aux2585_BOOL,aux2585_INTEGER);
constraint bool2int(aux2591_BOOL,aux2591_INTEGER);
constraint bool2int(aux2597_BOOL,aux2597_INTEGER);
constraint bool2int(aux2602_BOOL,aux2602_INTEGER);
constraint bool2int(aux2608_BOOL,aux2608_INTEGER);
constraint bool2int(aux2614_BOOL,aux2614_INTEGER);
constraint bool2int(aux2620_BOOL,aux2620_INTEGER);
constraint bool2int(aux2626_BOOL,aux2626_INTEGER);
constraint bool2int(aux2632_BOOL,aux2632_INTEGER);
constraint bool2int(aux2638_BOOL,aux2638_INTEGER);
constraint bool2int(aux2644_BOOL,aux2644_INTEGER);
constraint bool2int(aux2650_BOOL,aux2650_INTEGER);
constraint bool2int(aux2656_BOOL,aux2656_INTEGER);
constraint bool2int(aux2662_BOOL,aux2662_INTEGER);
constraint bool2int(aux2668_BOOL,aux2668_INTEGER);
constraint bool2int(aux2674_BOOL,aux2674_INTEGER);
constraint bool2int(aux2680_BOOL,aux2680_INTEGER);
constraint bool2int(aux2686_BOOL,aux2686_INTEGER);
constraint bool2int(aux2692_BOOL,aux2692_INTEGER);
constraint bool2int(aux2698_BOOL,aux2698_INTEGER);
constraint bool2int(aux2704_BOOL,aux2704_INTEGER);
constraint bool2int(aux2710_BOOL,aux2710_INTEGER);
constraint bool2int(aux2716_BOOL,aux2716_INTEGER);
constraint bool2int(aux2721_BOOL,aux2721_INTEGER);
constraint bool2int(aux2727_BOOL,aux2727_INTEGER);
constraint bool2int(aux2733_BOOL,aux2733_INTEGER);
constraint bool2int(aux2739_BOOL,aux2739_INTEGER);
constraint bool2int(aux2745_BOOL,aux2745_INTEGER);
constraint bool2int(aux2751_BOOL,aux2751_INTEGER);
constraint bool2int(aux2757_BOOL,aux2757_INTEGER);
constraint bool2int(aux2763_BOOL,aux2763_INTEGER);
constraint bool2int(aux2769_BOOL,aux2769_INTEGER);
constraint bool2int(aux2775_BOOL,aux2775_INTEGER);
constraint bool2int(aux2781_BOOL,aux2781_INTEGER);
constraint bool2int(aux2787_BOOL,aux2787_INTEGER);
constraint bool2int(aux2793_BOOL,aux2793_INTEGER);
constraint bool2int(aux2799_BOOL,aux2799_INTEGER);
constraint bool2int(aux2805_BOOL,aux2805_INTEGER);
constraint bool2int(aux2811_BOOL,aux2811_INTEGER);
constraint bool2int(aux2817_BOOL,aux2817_INTEGER);
constraint bool2int(aux2823_BOOL,aux2823_INTEGER);
constraint bool2int(aux2829_BOOL,aux2829_INTEGER);
constraint bool2int(aux2835_BOOL,aux2835_INTEGER);
constraint bool2int(aux2840_BOOL,aux2840_INTEGER);
constraint bool2int(aux2846_BOOL,aux2846_INTEGER);
constraint bool2int(aux2852_BOOL,aux2852_INTEGER);
constraint bool2int(aux2858_BOOL,aux2858_INTEGER);
constraint bool2int(aux2864_BOOL,aux2864_INTEGER);
constraint bool2int(aux2870_BOOL,aux2870_INTEGER);
constraint bool2int(aux2876_BOOL,aux2876_INTEGER);
constraint bool2int(aux2882_BOOL,aux2882_INTEGER);
constraint bool2int(aux2888_BOOL,aux2888_INTEGER);
constraint bool2int(aux2894_BOOL,aux2894_INTEGER);
constraint bool2int(aux2900_BOOL,aux2900_INTEGER);
constraint bool2int(aux2906_BOOL,aux2906_INTEGER);
constraint bool2int(aux2912_BOOL,aux2912_INTEGER);
constraint bool2int(aux2918_BOOL,aux2918_INTEGER);
constraint bool2int(aux2924_BOOL,aux2924_INTEGER);
constraint bool2int(aux2930_BOOL,aux2930_INTEGER);
constraint bool2int(aux2936_BOOL,aux2936_INTEGER);
constraint bool2int(aux2942_BOOL,aux2942_INTEGER);
constraint bool2int(aux2948_BOOL,aux2948_INTEGER);
constraint bool2int(aux2954_BOOL,aux2954_INTEGER);
constraint bool2int(aux2961_BOOL,aux2961_INTEGER);
constraint bool2int(aux2967_BOOL,aux2967_INTEGER);
constraint bool2int(aux2973_BOOL,aux2973_INTEGER);
constraint bool2int(aux2979_BOOL,aux2979_INTEGER);
constraint bool2int(aux2985_BOOL,aux2985_INTEGER);
constraint bool2int(aux2991_BOOL,aux2991_INTEGER);
constraint bool2int(aux2997_BOOL,aux2997_INTEGER);
constraint bool2int(aux3003_BOOL,aux3003_INTEGER);
constraint bool2int(aux3009_BOOL,aux3009_INTEGER);
constraint bool2int(aux3015_BOOL,aux3015_INTEGER);
constraint bool2int(aux3021_BOOL,aux3021_INTEGER);
constraint bool2int(aux3027_BOOL,aux3027_INTEGER);
constraint bool2int(aux3033_BOOL,aux3033_INTEGER);
constraint bool2int(aux3039_BOOL,aux3039_INTEGER);
constraint bool2int(aux3045_BOOL,aux3045_INTEGER);
constraint bool2int(aux3051_BOOL,aux3051_INTEGER);
constraint bool2int(aux3057_BOOL,aux3057_INTEGER);
constraint bool2int(aux3063_BOOL,aux3063_INTEGER);
constraint bool2int(aux3069_BOOL,aux3069_INTEGER);
constraint bool2int(aux3075_BOOL,aux3075_INTEGER);
constraint bool2int(aux3080_BOOL,aux3080_INTEGER);
constraint bool2int(aux3086_BOOL,aux3086_INTEGER);
constraint bool2int(aux3092_BOOL,aux3092_INTEGER);
constraint bool2int(aux3098_BOOL,aux3098_INTEGER);
constraint bool2int(aux3104_BOOL,aux3104_INTEGER);
constraint bool2int(aux3110_BOOL,aux3110_INTEGER);
constraint bool2int(aux3116_BOOL,aux3116_INTEGER);
constraint bool2int(aux3122_BOOL,aux3122_INTEGER);
constraint bool2int(aux3128_BOOL,aux3128_INTEGER);
constraint bool2int(aux3134_BOOL,aux3134_INTEGER);
constraint bool2int(aux3140_BOOL,aux3140_INTEGER);
constraint bool2int(aux3146_BOOL,aux3146_INTEGER);
constraint bool2int(aux3152_BOOL,aux3152_INTEGER);
constraint bool2int(aux3158_BOOL,aux3158_INTEGER);
constraint bool2int(aux3164_BOOL,aux3164_INTEGER);
constraint bool2int(aux3170_BOOL,aux3170_INTEGER);
constraint bool2int(aux3176_BOOL,aux3176_INTEGER);
constraint bool2int(aux3182_BOOL,aux3182_INTEGER);
constraint bool2int(aux3188_BOOL,aux3188_INTEGER);
constraint bool2int(aux3194_BOOL,aux3194_INTEGER);
constraint bool2int(aux3199_BOOL,aux3199_INTEGER);
constraint bool2int(aux3205_BOOL,aux3205_INTEGER);
constraint bool2int(aux3211_BOOL,aux3211_INTEGER);
constraint bool2int(aux3217_BOOL,aux3217_INTEGER);
constraint bool2int(aux3223_BOOL,aux3223_INTEGER);
constraint bool2int(aux3229_BOOL,aux3229_INTEGER);
constraint bool2int(aux3235_BOOL,aux3235_INTEGER);
constraint bool2int(aux3241_BOOL,aux3241_INTEGER);
constraint bool2int(aux3247_BOOL,aux3247_INTEGER);
constraint bool2int(aux3253_BOOL,aux3253_INTEGER);
constraint bool2int(aux3259_BOOL,aux3259_INTEGER);
constraint bool2int(aux3265_BOOL,aux3265_INTEGER);
constraint bool2int(aux3271_BOOL,aux3271_INTEGER);
constraint bool2int(aux3277_BOOL,aux3277_INTEGER);
constraint bool2int(aux3283_BOOL,aux3283_INTEGER);
constraint bool2int(aux3289_BOOL,aux3289_INTEGER);
constraint bool2int(aux3295_BOOL,aux3295_INTEGER);
constraint bool2int(aux3301_BOOL,aux3301_INTEGER);
constraint bool2int(aux3307_BOOL,aux3307_INTEGER);
constraint bool2int(aux3313_BOOL,aux3313_INTEGER);
constraint bool2int(aux3318_BOOL,aux3318_INTEGER);
constraint bool2int(aux3324_BOOL,aux3324_INTEGER);
constraint bool2int(aux3330_BOOL,aux3330_INTEGER);
constraint bool2int(aux3336_BOOL,aux3336_INTEGER);
constraint bool2int(aux3342_BOOL,aux3342_INTEGER);
constraint bool2int(aux3348_BOOL,aux3348_INTEGER);
constraint bool2int(aux3354_BOOL,aux3354_INTEGER);
constraint bool2int(aux3360_BOOL,aux3360_INTEGER);
constraint bool2int(aux3366_BOOL,aux3366_INTEGER);
constraint bool2int(aux3372_BOOL,aux3372_INTEGER);
constraint bool2int(aux3378_BOOL,aux3378_INTEGER);
constraint bool2int(aux3384_BOOL,aux3384_INTEGER);
constraint bool2int(aux3390_BOOL,aux3390_INTEGER);
constraint bool2int(aux3396_BOOL,aux3396_INTEGER);
constraint bool2int(aux3402_BOOL,aux3402_INTEGER);
constraint bool2int(aux3408_BOOL,aux3408_INTEGER);
constraint bool2int(aux3414_BOOL,aux3414_INTEGER);
constraint bool2int(aux3420_BOOL,aux3420_INTEGER);
constraint bool2int(aux3426_BOOL,aux3426_INTEGER);
constraint bool2int(aux3432_BOOL,aux3432_INTEGER);
constraint bool2int(aux3437_BOOL,aux3437_INTEGER);
constraint bool2int(aux3443_BOOL,aux3443_INTEGER);
constraint bool2int(aux3449_BOOL,aux3449_INTEGER);
constraint bool2int(aux3455_BOOL,aux3455_INTEGER);
constraint bool2int(aux3461_BOOL,aux3461_INTEGER);
constraint bool2int(aux3467_BOOL,aux3467_INTEGER);
constraint bool2int(aux3473_BOOL,aux3473_INTEGER);
constraint bool2int(aux3479_BOOL,aux3479_INTEGER);
constraint bool2int(aux3485_BOOL,aux3485_INTEGER);
constraint bool2int(aux3491_BOOL,aux3491_INTEGER);
constraint bool2int(aux3497_BOOL,aux3497_INTEGER);
constraint bool2int(aux3503_BOOL,aux3503_INTEGER);
constraint bool2int(aux3509_BOOL,aux3509_INTEGER);
constraint bool2int(aux3515_BOOL,aux3515_INTEGER);
constraint bool2int(aux3521_BOOL,aux3521_INTEGER);
constraint bool2int(aux3527_BOOL,aux3527_INTEGER);
constraint bool2int(aux3533_BOOL,aux3533_INTEGER);
constraint bool2int(aux3539_BOOL,aux3539_INTEGER);
constraint bool2int(aux3545_BOOL,aux3545_INTEGER);
constraint bool2int(aux3551_BOOL,aux3551_INTEGER);
constraint bool2int(aux3556_BOOL,aux3556_INTEGER);
constraint bool2int(aux3562_BOOL,aux3562_INTEGER);
constraint bool2int(aux3568_BOOL,aux3568_INTEGER);
constraint bool2int(aux3574_BOOL,aux3574_INTEGER);
constraint bool2int(aux3580_BOOL,aux3580_INTEGER);
constraint bool2int(aux3586_BOOL,aux3586_INTEGER);
constraint bool2int(aux3592_BOOL,aux3592_INTEGER);
constraint bool2int(aux3598_BOOL,aux3598_INTEGER);
constraint bool2int(aux3604_BOOL,aux3604_INTEGER);
constraint bool2int(aux3610_BOOL,aux3610_INTEGER);
constraint bool2int(aux3616_BOOL,aux3616_INTEGER);
constraint bool2int(aux3622_BOOL,aux3622_INTEGER);
constraint bool2int(aux3628_BOOL,aux3628_INTEGER);
constraint bool2int(aux3634_BOOL,aux3634_INTEGER);
constraint bool2int(aux3640_BOOL,aux3640_INTEGER);
constraint bool2int(aux3646_BOOL,aux3646_INTEGER);
constraint bool2int(aux3652_BOOL,aux3652_INTEGER);
constraint bool2int(aux3658_BOOL,aux3658_INTEGER);
constraint bool2int(aux3664_BOOL,aux3664_INTEGER);
constraint bool2int(aux3670_BOOL,aux3670_INTEGER);
constraint bool2int(aux3675_BOOL,aux3675_INTEGER);
constraint bool2int(aux3681_BOOL,aux3681_INTEGER);
constraint bool2int(aux3687_BOOL,aux3687_INTEGER);
constraint bool2int(aux3693_BOOL,aux3693_INTEGER);
constraint bool2int(aux3699_BOOL,aux3699_INTEGER);
constraint bool2int(aux3705_BOOL,aux3705_INTEGER);
constraint bool2int(aux3711_BOOL,aux3711_INTEGER);
constraint bool2int(aux3717_BOOL,aux3717_INTEGER);
constraint bool2int(aux3723_BOOL,aux3723_INTEGER);
constraint bool2int(aux3729_BOOL,aux3729_INTEGER);
constraint bool2int(aux3735_BOOL,aux3735_INTEGER);
constraint bool2int(aux3741_BOOL,aux3741_INTEGER);
constraint bool2int(aux3747_BOOL,aux3747_INTEGER);
constraint bool2int(aux3753_BOOL,aux3753_INTEGER);
constraint bool2int(aux3759_BOOL,aux3759_INTEGER);
constraint bool2int(aux3765_BOOL,aux3765_INTEGER);
constraint bool2int(aux3771_BOOL,aux3771_INTEGER);
constraint bool2int(aux3777_BOOL,aux3777_INTEGER);
constraint bool2int(aux3783_BOOL,aux3783_INTEGER);
constraint bool2int(aux3789_BOOL,aux3789_INTEGER);
constraint bool2int(aux3794_BOOL,aux3794_INTEGER);
constraint bool2int(aux3800_BOOL,aux3800_INTEGER);
constraint bool2int(aux3806_BOOL,aux3806_INTEGER);
constraint bool2int(aux3812_BOOL,aux3812_INTEGER);
constraint bool2int(aux3818_BOOL,aux3818_INTEGER);
constraint bool2int(aux3824_BOOL,aux3824_INTEGER);
constraint bool2int(aux3830_BOOL,aux3830_INTEGER);
constraint bool2int(aux3836_BOOL,aux3836_INTEGER);
constraint bool2int(aux3842_BOOL,aux3842_INTEGER);
constraint bool2int(aux3848_BOOL,aux3848_INTEGER);
constraint bool2int(aux3854_BOOL,aux3854_INTEGER);
constraint bool2int(aux3860_BOOL,aux3860_INTEGER);
constraint bool2int(aux3866_BOOL,aux3866_INTEGER);
constraint bool2int(aux3872_BOOL,aux3872_INTEGER);
constraint bool2int(aux3878_BOOL,aux3878_INTEGER);
constraint bool2int(aux3884_BOOL,aux3884_INTEGER);
constraint bool2int(aux3890_BOOL,aux3890_INTEGER);
constraint bool2int(aux3896_BOOL,aux3896_INTEGER);
constraint bool2int(aux3902_BOOL,aux3902_INTEGER);
constraint bool2int(aux3908_BOOL,aux3908_INTEGER);
constraint bool2int(aux3913_BOOL,aux3913_INTEGER);
constraint bool2int(aux3919_BOOL,aux3919_INTEGER);
constraint bool2int(aux3925_BOOL,aux3925_INTEGER);
constraint bool2int(aux3931_BOOL,aux3931_INTEGER);
constraint bool2int(aux3937_BOOL,aux3937_INTEGER);
constraint bool2int(aux3943_BOOL,aux3943_INTEGER);
constraint bool2int(aux3949_BOOL,aux3949_INTEGER);
constraint bool2int(aux3955_BOOL,aux3955_INTEGER);
constraint bool2int(aux3961_BOOL,aux3961_INTEGER);
constraint bool2int(aux3967_BOOL,aux3967_INTEGER);
constraint bool2int(aux3973_BOOL,aux3973_INTEGER);
constraint bool2int(aux3979_BOOL,aux3979_INTEGER);
constraint bool2int(aux3985_BOOL,aux3985_INTEGER);
constraint bool2int(aux3991_BOOL,aux3991_INTEGER);
constraint bool2int(aux3997_BOOL,aux3997_INTEGER);
constraint bool2int(aux4003_BOOL,aux4003_INTEGER);
constraint bool2int(aux4009_BOOL,aux4009_INTEGER);
constraint bool2int(aux4015_BOOL,aux4015_INTEGER);
constraint bool2int(aux4021_BOOL,aux4021_INTEGER);
constraint bool2int(aux4027_BOOL,aux4027_INTEGER);
constraint bool2int(aux4032_BOOL,aux4032_INTEGER);
constraint bool2int(aux4038_BOOL,aux4038_INTEGER);
constraint bool2int(aux4044_BOOL,aux4044_INTEGER);
constraint bool2int(aux4050_BOOL,aux4050_INTEGER);
constraint bool2int(aux4056_BOOL,aux4056_INTEGER);
constraint bool2int(aux4062_BOOL,aux4062_INTEGER);
constraint bool2int(aux4068_BOOL,aux4068_INTEGER);
constraint bool2int(aux4074_BOOL,aux4074_INTEGER);
constraint bool2int(aux4080_BOOL,aux4080_INTEGER);
constraint bool2int(aux4086_BOOL,aux4086_INTEGER);
constraint bool2int(aux4092_BOOL,aux4092_INTEGER);
constraint bool2int(aux4098_BOOL,aux4098_INTEGER);
constraint bool2int(aux4104_BOOL,aux4104_INTEGER);
constraint bool2int(aux4110_BOOL,aux4110_INTEGER);
constraint bool2int(aux4116_BOOL,aux4116_INTEGER);
constraint bool2int(aux4122_BOOL,aux4122_INTEGER);
constraint bool2int(aux4128_BOOL,aux4128_INTEGER);
constraint bool2int(aux4134_BOOL,aux4134_INTEGER);
constraint bool2int(aux4140_BOOL,aux4140_INTEGER);
constraint bool2int(aux4146_BOOL,aux4146_INTEGER);
constraint bool2int(aux4151_BOOL,aux4151_INTEGER);
constraint bool2int(aux4157_BOOL,aux4157_INTEGER);
constraint bool2int(aux4163_BOOL,aux4163_INTEGER);
constraint bool2int(aux4169_BOOL,aux4169_INTEGER);
constraint bool2int(aux4175_BOOL,aux4175_INTEGER);
constraint bool2int(aux4181_BOOL,aux4181_INTEGER);
constraint bool2int(aux4187_BOOL,aux4187_INTEGER);
constraint bool2int(aux4193_BOOL,aux4193_INTEGER);
constraint bool2int(aux4199_BOOL,aux4199_INTEGER);
constraint bool2int(aux4205_BOOL,aux4205_INTEGER);
constraint bool2int(aux4211_BOOL,aux4211_INTEGER);
constraint bool2int(aux4217_BOOL,aux4217_INTEGER);
constraint bool2int(aux4223_BOOL,aux4223_INTEGER);
constraint bool2int(aux4229_BOOL,aux4229_INTEGER);
constraint bool2int(aux4235_BOOL,aux4235_INTEGER);
constraint bool2int(aux4241_BOOL,aux4241_INTEGER);
constraint bool2int(aux4247_BOOL,aux4247_INTEGER);
constraint bool2int(aux4253_BOOL,aux4253_INTEGER);
constraint bool2int(aux4259_BOOL,aux4259_INTEGER);
constraint bool2int(aux4265_BOOL,aux4265_INTEGER);
constraint bool2int(aux4270_BOOL,aux4270_INTEGER);
constraint bool2int(aux4276_BOOL,aux4276_INTEGER);
constraint bool2int(aux4282_BOOL,aux4282_INTEGER);
constraint bool2int(aux4288_BOOL,aux4288_INTEGER);
constraint bool2int(aux4294_BOOL,aux4294_INTEGER);
constraint bool2int(aux4300_BOOL,aux4300_INTEGER);
constraint bool2int(aux4306_BOOL,aux4306_INTEGER);
constraint bool2int(aux4312_BOOL,aux4312_INTEGER);
constraint bool2int(aux4318_BOOL,aux4318_INTEGER);
constraint bool2int(aux4324_BOOL,aux4324_INTEGER);
constraint bool2int(aux4330_BOOL,aux4330_INTEGER);
constraint bool2int(aux4336_BOOL,aux4336_INTEGER);
constraint bool2int(aux4342_BOOL,aux4342_INTEGER);
constraint bool2int(aux4348_BOOL,aux4348_INTEGER);
constraint bool2int(aux4354_BOOL,aux4354_INTEGER);
constraint bool2int(aux4360_BOOL,aux4360_INTEGER);
constraint bool2int(aux4366_BOOL,aux4366_INTEGER);
constraint bool2int(aux4372_BOOL,aux4372_INTEGER);
constraint bool2int(aux4378_BOOL,aux4378_INTEGER);
constraint bool2int(aux4384_BOOL,aux4384_INTEGER);
constraint bool2int(aux4389_BOOL,aux4389_INTEGER);
constraint bool2int(aux4395_BOOL,aux4395_INTEGER);
constraint bool2int(aux4401_BOOL,aux4401_INTEGER);
constraint bool2int(aux4407_BOOL,aux4407_INTEGER);
constraint bool2int(aux4413_BOOL,aux4413_INTEGER);
constraint bool2int(aux4419_BOOL,aux4419_INTEGER);
constraint bool2int(aux4425_BOOL,aux4425_INTEGER);
constraint bool2int(aux4431_BOOL,aux4431_INTEGER);
constraint bool2int(aux4437_BOOL,aux4437_INTEGER);
constraint bool2int(aux4443_BOOL,aux4443_INTEGER);
constraint bool2int(aux4449_BOOL,aux4449_INTEGER);
constraint bool2int(aux4455_BOOL,aux4455_INTEGER);
constraint bool2int(aux4461_BOOL,aux4461_INTEGER);
constraint bool2int(aux4467_BOOL,aux4467_INTEGER);
constraint bool2int(aux4473_BOOL,aux4473_INTEGER);
constraint bool2int(aux4479_BOOL,aux4479_INTEGER);
constraint bool2int(aux4485_BOOL,aux4485_INTEGER);
constraint bool2int(aux4491_BOOL,aux4491_INTEGER);
constraint bool2int(aux4497_BOOL,aux4497_INTEGER);
constraint bool2int(aux4503_BOOL,aux4503_INTEGER);
constraint bool2int(aux4508_BOOL,aux4508_INTEGER);
constraint bool2int(aux4514_BOOL,aux4514_INTEGER);
constraint bool2int(aux4520_BOOL,aux4520_INTEGER);
constraint bool2int(aux4526_BOOL,aux4526_INTEGER);
constraint bool2int(aux4532_BOOL,aux4532_INTEGER);
constraint bool2int(aux4538_BOOL,aux4538_INTEGER);
constraint bool2int(aux4544_BOOL,aux4544_INTEGER);
constraint bool2int(aux4550_BOOL,aux4550_INTEGER);
constraint bool2int(aux4556_BOOL,aux4556_INTEGER);
constraint bool2int(aux4562_BOOL,aux4562_INTEGER);
constraint bool2int(aux4568_BOOL,aux4568_INTEGER);
constraint bool2int(aux4574_BOOL,aux4574_INTEGER);
constraint bool2int(aux4580_BOOL,aux4580_INTEGER);
constraint bool2int(aux4586_BOOL,aux4586_INTEGER);
constraint bool2int(aux4592_BOOL,aux4592_INTEGER);
constraint bool2int(aux4598_BOOL,aux4598_INTEGER);
constraint bool2int(aux4604_BOOL,aux4604_INTEGER);
constraint bool2int(aux4610_BOOL,aux4610_INTEGER);
constraint bool2int(aux4616_BOOL,aux4616_INTEGER);
constraint bool2int(aux4622_BOOL,aux4622_INTEGER);
constraint bool2int(aux4627_BOOL,aux4627_INTEGER);
constraint bool2int(aux4633_BOOL,aux4633_INTEGER);
constraint bool2int(aux4639_BOOL,aux4639_INTEGER);
constraint bool2int(aux4645_BOOL,aux4645_INTEGER);
constraint bool2int(aux4651_BOOL,aux4651_INTEGER);
constraint bool2int(aux4657_BOOL,aux4657_INTEGER);
constraint bool2int(aux4663_BOOL,aux4663_INTEGER);
constraint bool2int(aux4669_BOOL,aux4669_INTEGER);
constraint bool2int(aux4675_BOOL,aux4675_INTEGER);
constraint bool2int(aux4681_BOOL,aux4681_INTEGER);
constraint bool2int(aux4687_BOOL,aux4687_INTEGER);
constraint bool2int(aux4693_BOOL,aux4693_INTEGER);
constraint bool2int(aux4699_BOOL,aux4699_INTEGER);
constraint bool2int(aux4705_BOOL,aux4705_INTEGER);
constraint bool2int(aux4711_BOOL,aux4711_INTEGER);
constraint bool2int(aux4717_BOOL,aux4717_INTEGER);
constraint bool2int(aux4723_BOOL,aux4723_INTEGER);
constraint bool2int(aux4729_BOOL,aux4729_INTEGER);
constraint bool2int(aux4735_BOOL,aux4735_INTEGER);
constraint bool2int(aux4741_BOOL,aux4741_INTEGER);
constraint bool2int(aux4746_BOOL,aux4746_INTEGER);
constraint bool2int(aux4752_BOOL,aux4752_INTEGER);
constraint bool2int(aux4758_BOOL,aux4758_INTEGER);
constraint bool2int(aux4764_BOOL,aux4764_INTEGER);
constraint bool2int(aux4770_BOOL,aux4770_INTEGER);
constraint bool2int(aux4776_BOOL,aux4776_INTEGER);
constraint bool2int(aux4782_BOOL,aux4782_INTEGER);
constraint bool2int(aux4788_BOOL,aux4788_INTEGER);
constraint bool2int(aux4794_BOOL,aux4794_INTEGER);
constraint bool2int(aux4800_BOOL,aux4800_INTEGER);
constraint bool2int(aux4806_BOOL,aux4806_INTEGER);
constraint bool2int(aux4812_BOOL,aux4812_INTEGER);
constraint bool2int(aux4818_BOOL,aux4818_INTEGER);
constraint bool2int(aux4824_BOOL,aux4824_INTEGER);
constraint bool2int(aux4830_BOOL,aux4830_INTEGER);
constraint bool2int(aux4836_BOOL,aux4836_INTEGER);
constraint bool2int(aux4842_BOOL,aux4842_INTEGER);
constraint bool2int(aux4848_BOOL,aux4848_INTEGER);
constraint bool2int(aux4854_BOOL,aux4854_INTEGER);
constraint bool2int(aux4860_BOOL,aux4860_INTEGER);
constraint bool2int(aux4865_BOOL,aux4865_INTEGER);
constraint bool2int(aux4871_BOOL,aux4871_INTEGER);
constraint bool2int(aux4877_BOOL,aux4877_INTEGER);
constraint bool2int(aux4883_BOOL,aux4883_INTEGER);
constraint bool2int(aux4889_BOOL,aux4889_INTEGER);
constraint bool2int(aux4895_BOOL,aux4895_INTEGER);
constraint bool2int(aux4901_BOOL,aux4901_INTEGER);
constraint bool2int(aux4907_BOOL,aux4907_INTEGER);
constraint bool2int(aux4913_BOOL,aux4913_INTEGER);
constraint bool2int(aux4919_BOOL,aux4919_INTEGER);
constraint bool2int(aux4925_BOOL,aux4925_INTEGER);
constraint bool2int(aux4931_BOOL,aux4931_INTEGER);
constraint bool2int(aux4937_BOOL,aux4937_INTEGER);
constraint bool2int(aux4943_BOOL,aux4943_INTEGER);
constraint bool2int(aux4949_BOOL,aux4949_INTEGER);
constraint bool2int(aux4955_BOOL,aux4955_INTEGER);
constraint bool2int(aux4961_BOOL,aux4961_INTEGER);
constraint bool2int(aux4967_BOOL,aux4967_INTEGER);
constraint bool2int(aux4973_BOOL,aux4973_INTEGER);
constraint bool2int(aux4979_BOOL,aux4979_INTEGER);
constraint bool2int(aux4984_BOOL,aux4984_INTEGER);
constraint bool2int(aux4990_BOOL,aux4990_INTEGER);
constraint bool2int(aux4996_BOOL,aux4996_INTEGER);
constraint bool2int(aux5002_BOOL,aux5002_INTEGER);
constraint bool2int(aux5008_BOOL,aux5008_INTEGER);
constraint bool2int(aux5014_BOOL,aux5014_INTEGER);
constraint bool2int(aux5020_BOOL,aux5020_INTEGER);
constraint bool2int(aux5026_BOOL,aux5026_INTEGER);
constraint bool2int(aux5032_BOOL,aux5032_INTEGER);
constraint bool2int(aux5038_BOOL,aux5038_INTEGER);
constraint bool2int(aux5044_BOOL,aux5044_INTEGER);
constraint bool2int(aux5050_BOOL,aux5050_INTEGER);
constraint bool2int(aux5056_BOOL,aux5056_INTEGER);
constraint bool2int(aux5062_BOOL,aux5062_INTEGER);
constraint bool2int(aux5068_BOOL,aux5068_INTEGER);
constraint bool2int(aux5074_BOOL,aux5074_INTEGER);
constraint bool2int(aux5080_BOOL,aux5080_INTEGER);
constraint bool2int(aux5086_BOOL,aux5086_INTEGER);
constraint bool2int(aux5092_BOOL,aux5092_INTEGER);
constraint bool2int(aux5098_BOOL,aux5098_INTEGER);
constraint bool2int(aux5103_BOOL,aux5103_INTEGER);
constraint bool2int(aux5109_BOOL,aux5109_INTEGER);
constraint bool2int(aux5115_BOOL,aux5115_INTEGER);
constraint bool2int(aux5121_BOOL,aux5121_INTEGER);
constraint bool2int(aux5127_BOOL,aux5127_INTEGER);
constraint bool2int(aux5133_BOOL,aux5133_INTEGER);
constraint bool2int(aux5139_BOOL,aux5139_INTEGER);
constraint bool2int(aux5145_BOOL,aux5145_INTEGER);
constraint bool2int(aux5151_BOOL,aux5151_INTEGER);
constraint bool2int(aux5157_BOOL,aux5157_INTEGER);
constraint bool2int(aux5163_BOOL,aux5163_INTEGER);
constraint bool2int(aux5169_BOOL,aux5169_INTEGER);
constraint bool2int(aux5175_BOOL,aux5175_INTEGER);
constraint bool2int(aux5181_BOOL,aux5181_INTEGER);
constraint bool2int(aux5187_BOOL,aux5187_INTEGER);
constraint bool2int(aux5193_BOOL,aux5193_INTEGER);
constraint bool2int(aux5199_BOOL,aux5199_INTEGER);
constraint bool2int(aux5205_BOOL,aux5205_INTEGER);
constraint bool2int(aux5211_BOOL,aux5211_INTEGER);
constraint bool2int(aux5217_BOOL,aux5217_INTEGER);
constraint bool2int(aux5222_BOOL,aux5222_INTEGER);
constraint bool2int(aux5228_BOOL,aux5228_INTEGER);
constraint bool2int(aux5234_BOOL,aux5234_INTEGER);
constraint bool2int(aux5240_BOOL,aux5240_INTEGER);
constraint bool2int(aux5246_BOOL,aux5246_INTEGER);
constraint bool2int(aux5252_BOOL,aux5252_INTEGER);
constraint bool2int(aux5258_BOOL,aux5258_INTEGER);
constraint bool2int(aux5264_BOOL,aux5264_INTEGER);
constraint bool2int(aux5270_BOOL,aux5270_INTEGER);
constraint bool2int(aux5276_BOOL,aux5276_INTEGER);
constraint bool2int(aux5282_BOOL,aux5282_INTEGER);
constraint bool2int(aux5288_BOOL,aux5288_INTEGER);
constraint bool2int(aux5294_BOOL,aux5294_INTEGER);
constraint bool2int(aux5300_BOOL,aux5300_INTEGER);
constraint bool2int(aux5306_BOOL,aux5306_INTEGER);
constraint bool2int(aux5312_BOOL,aux5312_INTEGER);
constraint bool2int(aux5318_BOOL,aux5318_INTEGER);
constraint bool2int(aux5324_BOOL,aux5324_INTEGER);
constraint bool2int(aux5330_BOOL,aux5330_INTEGER);
constraint bool2int(aux5336_BOOL,aux5336_INTEGER);
constraint bool2int(aux5345_BOOL,aux5345_INTEGER);
constraint bool2int(aux5351_BOOL,aux5351_INTEGER);
constraint bool2int(aux5357_BOOL,aux5357_INTEGER);
constraint bool2int(aux5363_BOOL,aux5363_INTEGER);
constraint bool2int(aux5369_BOOL,aux5369_INTEGER);
constraint bool2int(aux5375_BOOL,aux5375_INTEGER);
constraint bool2int(aux5381_BOOL,aux5381_INTEGER);
constraint bool2int(aux5387_BOOL,aux5387_INTEGER);
constraint bool2int(aux5393_BOOL,aux5393_INTEGER);
constraint bool2int(aux5399_BOOL,aux5399_INTEGER);
constraint bool2int(aux5405_BOOL,aux5405_INTEGER);
constraint bool2int(aux5411_BOOL,aux5411_INTEGER);
constraint bool2int(aux5417_BOOL,aux5417_INTEGER);
constraint bool2int(aux5423_BOOL,aux5423_INTEGER);
constraint bool2int(aux5429_BOOL,aux5429_INTEGER);
constraint bool2int(aux5435_BOOL,aux5435_INTEGER);
constraint bool2int(aux5441_BOOL,aux5441_INTEGER);
constraint bool2int(aux5447_BOOL,aux5447_INTEGER);
constraint bool2int(aux5453_BOOL,aux5453_INTEGER);
constraint bool2int(aux5457_BOOL,aux5457_INTEGER);
constraint bool2int(aux5464_BOOL,aux5464_INTEGER);
constraint bool2int(aux5470_BOOL,aux5470_INTEGER);
constraint bool2int(aux5476_BOOL,aux5476_INTEGER);
constraint bool2int(aux5482_BOOL,aux5482_INTEGER);
constraint bool2int(aux5488_BOOL,aux5488_INTEGER);
constraint bool2int(aux5494_BOOL,aux5494_INTEGER);
constraint bool2int(aux5500_BOOL,aux5500_INTEGER);
constraint bool2int(aux5506_BOOL,aux5506_INTEGER);
constraint bool2int(aux5512_BOOL,aux5512_INTEGER);
constraint bool2int(aux5518_BOOL,aux5518_INTEGER);
constraint bool2int(aux5524_BOOL,aux5524_INTEGER);
constraint bool2int(aux5530_BOOL,aux5530_INTEGER);
constraint bool2int(aux5536_BOOL,aux5536_INTEGER);
constraint bool2int(aux5542_BOOL,aux5542_INTEGER);
constraint bool2int(aux5548_BOOL,aux5548_INTEGER);
constraint bool2int(aux5554_BOOL,aux5554_INTEGER);
constraint bool2int(aux5560_BOOL,aux5560_INTEGER);
constraint bool2int(aux5566_BOOL,aux5566_INTEGER);
constraint bool2int(aux5572_BOOL,aux5572_INTEGER);
constraint bool2int(aux5576_BOOL,aux5576_INTEGER);
constraint bool2int(aux5583_BOOL,aux5583_INTEGER);
constraint bool2int(aux5589_BOOL,aux5589_INTEGER);
constraint bool2int(aux5595_BOOL,aux5595_INTEGER);
constraint bool2int(aux5601_BOOL,aux5601_INTEGER);
constraint bool2int(aux5607_BOOL,aux5607_INTEGER);
constraint bool2int(aux5613_BOOL,aux5613_INTEGER);
constraint bool2int(aux5619_BOOL,aux5619_INTEGER);
constraint bool2int(aux5625_BOOL,aux5625_INTEGER);
constraint bool2int(aux5631_BOOL,aux5631_INTEGER);
constraint bool2int(aux5637_BOOL,aux5637_INTEGER);
constraint bool2int(aux5643_BOOL,aux5643_INTEGER);
constraint bool2int(aux5649_BOOL,aux5649_INTEGER);
constraint bool2int(aux5655_BOOL,aux5655_INTEGER);
constraint bool2int(aux5661_BOOL,aux5661_INTEGER);
constraint bool2int(aux5667_BOOL,aux5667_INTEGER);
constraint bool2int(aux5673_BOOL,aux5673_INTEGER);
constraint bool2int(aux5679_BOOL,aux5679_INTEGER);
constraint bool2int(aux5685_BOOL,aux5685_INTEGER);
constraint bool2int(aux5691_BOOL,aux5691_INTEGER);
constraint bool2int(aux5695_BOOL,aux5695_INTEGER);
constraint bool2int(aux5702_BOOL,aux5702_INTEGER);
constraint bool2int(aux5708_BOOL,aux5708_INTEGER);
constraint bool2int(aux5714_BOOL,aux5714_INTEGER);
constraint bool2int(aux5720_BOOL,aux5720_INTEGER);
constraint bool2int(aux5726_BOOL,aux5726_INTEGER);
constraint bool2int(aux5732_BOOL,aux5732_INTEGER);
constraint bool2int(aux5738_BOOL,aux5738_INTEGER);
constraint bool2int(aux5744_BOOL,aux5744_INTEGER);
constraint bool2int(aux5750_BOOL,aux5750_INTEGER);
constraint bool2int(aux5756_BOOL,aux5756_INTEGER);
constraint bool2int(aux5762_BOOL,aux5762_INTEGER);
constraint bool2int(aux5768_BOOL,aux5768_INTEGER);
constraint bool2int(aux5774_BOOL,aux5774_INTEGER);
constraint bool2int(aux5780_BOOL,aux5780_INTEGER);
constraint bool2int(aux5786_BOOL,aux5786_INTEGER);
constraint bool2int(aux5792_BOOL,aux5792_INTEGER);
constraint bool2int(aux5798_BOOL,aux5798_INTEGER);
constraint bool2int(aux5804_BOOL,aux5804_INTEGER);
constraint bool2int(aux5810_BOOL,aux5810_INTEGER);
constraint bool2int(aux5814_BOOL,aux5814_INTEGER);
constraint bool2int(aux5821_BOOL,aux5821_INTEGER);
constraint bool2int(aux5827_BOOL,aux5827_INTEGER);
constraint bool2int(aux5833_BOOL,aux5833_INTEGER);
constraint bool2int(aux5839_BOOL,aux5839_INTEGER);
constraint bool2int(aux5845_BOOL,aux5845_INTEGER);
constraint bool2int(aux5851_BOOL,aux5851_INTEGER);
constraint bool2int(aux5857_BOOL,aux5857_INTEGER);
constraint bool2int(aux5863_BOOL,aux5863_INTEGER);
constraint bool2int(aux5869_BOOL,aux5869_INTEGER);
constraint bool2int(aux5875_BOOL,aux5875_INTEGER);
constraint bool2int(aux5881_BOOL,aux5881_INTEGER);
constraint bool2int(aux5887_BOOL,aux5887_INTEGER);
constraint bool2int(aux5893_BOOL,aux5893_INTEGER);
constraint bool2int(aux5899_BOOL,aux5899_INTEGER);
constraint bool2int(aux5905_BOOL,aux5905_INTEGER);
constraint bool2int(aux5911_BOOL,aux5911_INTEGER);
constraint bool2int(aux5917_BOOL,aux5917_INTEGER);
constraint bool2int(aux5923_BOOL,aux5923_INTEGER);
constraint bool2int(aux5929_BOOL,aux5929_INTEGER);
constraint bool2int(aux5933_BOOL,aux5933_INTEGER);
constraint bool2int(aux5940_BOOL,aux5940_INTEGER);
constraint bool2int(aux5946_BOOL,aux5946_INTEGER);
constraint bool2int(aux5952_BOOL,aux5952_INTEGER);
constraint bool2int(aux5958_BOOL,aux5958_INTEGER);
constraint bool2int(aux5964_BOOL,aux5964_INTEGER);
constraint bool2int(aux5970_BOOL,aux5970_INTEGER);
constraint bool2int(aux5976_BOOL,aux5976_INTEGER);
constraint bool2int(aux5982_BOOL,aux5982_INTEGER);
constraint bool2int(aux5988_BOOL,aux5988_INTEGER);
constraint bool2int(aux5994_BOOL,aux5994_INTEGER);
constraint bool2int(aux6000_BOOL,aux6000_INTEGER);
constraint bool2int(aux6006_BOOL,aux6006_INTEGER);
constraint bool2int(aux6012_BOOL,aux6012_INTEGER);
constraint bool2int(aux6018_BOOL,aux6018_INTEGER);
constraint bool2int(aux6024_BOOL,aux6024_INTEGER);
constraint bool2int(aux6030_BOOL,aux6030_INTEGER);
constraint bool2int(aux6036_BOOL,aux6036_INTEGER);
constraint bool2int(aux6042_BOOL,aux6042_INTEGER);
constraint bool2int(aux6048_BOOL,aux6048_INTEGER);
constraint bool2int(aux6052_BOOL,aux6052_INTEGER);
constraint bool2int(aux6059_BOOL,aux6059_INTEGER);
constraint bool2int(aux6065_BOOL,aux6065_INTEGER);
constraint bool2int(aux6071_BOOL,aux6071_INTEGER);
constraint bool2int(aux6077_BOOL,aux6077_INTEGER);
constraint bool2int(aux6083_BOOL,aux6083_INTEGER);
constraint bool2int(aux6089_BOOL,aux6089_INTEGER);
constraint bool2int(aux6095_BOOL,aux6095_INTEGER);
constraint bool2int(aux6101_BOOL,aux6101_INTEGER);
constraint bool2int(aux6107_BOOL,aux6107_INTEGER);
constraint bool2int(aux6113_BOOL,aux6113_INTEGER);
constraint bool2int(aux6119_BOOL,aux6119_INTEGER);
constraint bool2int(aux6125_BOOL,aux6125_INTEGER);
constraint bool2int(aux6131_BOOL,aux6131_INTEGER);
constraint bool2int(aux6137_BOOL,aux6137_INTEGER);
constraint bool2int(aux6143_BOOL,aux6143_INTEGER);
constraint bool2int(aux6149_BOOL,aux6149_INTEGER);
constraint bool2int(aux6155_BOOL,aux6155_INTEGER);
constraint bool2int(aux6161_BOOL,aux6161_INTEGER);
constraint bool2int(aux6167_BOOL,aux6167_INTEGER);
constraint bool2int(aux6171_BOOL,aux6171_INTEGER);
constraint bool2int(aux6178_BOOL,aux6178_INTEGER);
constraint bool2int(aux6184_BOOL,aux6184_INTEGER);
constraint bool2int(aux6190_BOOL,aux6190_INTEGER);
constraint bool2int(aux6196_BOOL,aux6196_INTEGER);
constraint bool2int(aux6202_BOOL,aux6202_INTEGER);
constraint bool2int(aux6208_BOOL,aux6208_INTEGER);
constraint bool2int(aux6214_BOOL,aux6214_INTEGER);
constraint bool2int(aux6220_BOOL,aux6220_INTEGER);
constraint bool2int(aux6226_BOOL,aux6226_INTEGER);
constraint bool2int(aux6232_BOOL,aux6232_INTEGER);
constraint bool2int(aux6238_BOOL,aux6238_INTEGER);
constraint bool2int(aux6244_BOOL,aux6244_INTEGER);
constraint bool2int(aux6250_BOOL,aux6250_INTEGER);
constraint bool2int(aux6256_BOOL,aux6256_INTEGER);
constraint bool2int(aux6262_BOOL,aux6262_INTEGER);
constraint bool2int(aux6268_BOOL,aux6268_INTEGER);
constraint bool2int(aux6274_BOOL,aux6274_INTEGER);
constraint bool2int(aux6280_BOOL,aux6280_INTEGER);
constraint bool2int(aux6286_BOOL,aux6286_INTEGER);
constraint bool2int(aux6290_BOOL,aux6290_INTEGER);
constraint bool2int(aux6297_BOOL,aux6297_INTEGER);
constraint bool2int(aux6303_BOOL,aux6303_INTEGER);
constraint bool2int(aux6309_BOOL,aux6309_INTEGER);
constraint bool2int(aux6315_BOOL,aux6315_INTEGER);
constraint bool2int(aux6321_BOOL,aux6321_INTEGER);
constraint bool2int(aux6327_BOOL,aux6327_INTEGER);
constraint bool2int(aux6333_BOOL,aux6333_INTEGER);
constraint bool2int(aux6339_BOOL,aux6339_INTEGER);
constraint bool2int(aux6345_BOOL,aux6345_INTEGER);
constraint bool2int(aux6351_BOOL,aux6351_INTEGER);
constraint bool2int(aux6357_BOOL,aux6357_INTEGER);
constraint bool2int(aux6363_BOOL,aux6363_INTEGER);
constraint bool2int(aux6369_BOOL,aux6369_INTEGER);
constraint bool2int(aux6375_BOOL,aux6375_INTEGER);
constraint bool2int(aux6381_BOOL,aux6381_INTEGER);
constraint bool2int(aux6387_BOOL,aux6387_INTEGER);
constraint bool2int(aux6393_BOOL,aux6393_INTEGER);
constraint bool2int(aux6399_BOOL,aux6399_INTEGER);
constraint bool2int(aux6405_BOOL,aux6405_INTEGER);
constraint bool2int(aux6409_BOOL,aux6409_INTEGER);
constraint bool2int(aux6416_BOOL,aux6416_INTEGER);
constraint bool2int(aux6422_BOOL,aux6422_INTEGER);
constraint bool2int(aux6428_BOOL,aux6428_INTEGER);
constraint bool2int(aux6434_BOOL,aux6434_INTEGER);
constraint bool2int(aux6440_BOOL,aux6440_INTEGER);
constraint bool2int(aux6446_BOOL,aux6446_INTEGER);
constraint bool2int(aux6452_BOOL,aux6452_INTEGER);
constraint bool2int(aux6458_BOOL,aux6458_INTEGER);
constraint bool2int(aux6464_BOOL,aux6464_INTEGER);
constraint bool2int(aux6470_BOOL,aux6470_INTEGER);
constraint bool2int(aux6476_BOOL,aux6476_INTEGER);
constraint bool2int(aux6482_BOOL,aux6482_INTEGER);
constraint bool2int(aux6488_BOOL,aux6488_INTEGER);
constraint bool2int(aux6494_BOOL,aux6494_INTEGER);
constraint bool2int(aux6500_BOOL,aux6500_INTEGER);
constraint bool2int(aux6506_BOOL,aux6506_INTEGER);
constraint bool2int(aux6512_BOOL,aux6512_INTEGER);
constraint bool2int(aux6518_BOOL,aux6518_INTEGER);
constraint bool2int(aux6524_BOOL,aux6524_INTEGER);
constraint bool2int(aux6528_BOOL,aux6528_INTEGER);
constraint bool2int(aux6535_BOOL,aux6535_INTEGER);
constraint bool2int(aux6541_BOOL,aux6541_INTEGER);
constraint bool2int(aux6547_BOOL,aux6547_INTEGER);
constraint bool2int(aux6553_BOOL,aux6553_INTEGER);
constraint bool2int(aux6559_BOOL,aux6559_INTEGER);
constraint bool2int(aux6565_BOOL,aux6565_INTEGER);
constraint bool2int(aux6571_BOOL,aux6571_INTEGER);
constraint bool2int(aux6577_BOOL,aux6577_INTEGER);
constraint bool2int(aux6583_BOOL,aux6583_INTEGER);
constraint bool2int(aux6589_BOOL,aux6589_INTEGER);
constraint bool2int(aux6595_BOOL,aux6595_INTEGER);
constraint bool2int(aux6601_BOOL,aux6601_INTEGER);
constraint bool2int(aux6607_BOOL,aux6607_INTEGER);
constraint bool2int(aux6613_BOOL,aux6613_INTEGER);
constraint bool2int(aux6619_BOOL,aux6619_INTEGER);
constraint bool2int(aux6625_BOOL,aux6625_INTEGER);
constraint bool2int(aux6631_BOOL,aux6631_INTEGER);
constraint bool2int(aux6637_BOOL,aux6637_INTEGER);
constraint bool2int(aux6643_BOOL,aux6643_INTEGER);
constraint bool2int(aux6647_BOOL,aux6647_INTEGER);
constraint bool2int(aux6654_BOOL,aux6654_INTEGER);
constraint bool2int(aux6660_BOOL,aux6660_INTEGER);
constraint bool2int(aux6666_BOOL,aux6666_INTEGER);
constraint bool2int(aux6672_BOOL,aux6672_INTEGER);
constraint bool2int(aux6678_BOOL,aux6678_INTEGER);
constraint bool2int(aux6684_BOOL,aux6684_INTEGER);
constraint bool2int(aux6690_BOOL,aux6690_INTEGER);
constraint bool2int(aux6696_BOOL,aux6696_INTEGER);
constraint bool2int(aux6702_BOOL,aux6702_INTEGER);
constraint bool2int(aux6708_BOOL,aux6708_INTEGER);
constraint bool2int(aux6714_BOOL,aux6714_INTEGER);
constraint bool2int(aux6720_BOOL,aux6720_INTEGER);
constraint bool2int(aux6726_BOOL,aux6726_INTEGER);
constraint bool2int(aux6732_BOOL,aux6732_INTEGER);
constraint bool2int(aux6738_BOOL,aux6738_INTEGER);
constraint bool2int(aux6744_BOOL,aux6744_INTEGER);
constraint bool2int(aux6750_BOOL,aux6750_INTEGER);
constraint bool2int(aux6756_BOOL,aux6756_INTEGER);
constraint bool2int(aux6762_BOOL,aux6762_INTEGER);
constraint bool2int(aux6766_BOOL,aux6766_INTEGER);
constraint bool2int(aux6773_BOOL,aux6773_INTEGER);
constraint bool2int(aux6779_BOOL,aux6779_INTEGER);
constraint bool2int(aux6785_BOOL,aux6785_INTEGER);
constraint bool2int(aux6791_BOOL,aux6791_INTEGER);
constraint bool2int(aux6797_BOOL,aux6797_INTEGER);
constraint bool2int(aux6803_BOOL,aux6803_INTEGER);
constraint bool2int(aux6809_BOOL,aux6809_INTEGER);
constraint bool2int(aux6815_BOOL,aux6815_INTEGER);
constraint bool2int(aux6821_BOOL,aux6821_INTEGER);
constraint bool2int(aux6827_BOOL,aux6827_INTEGER);
constraint bool2int(aux6833_BOOL,aux6833_INTEGER);
constraint bool2int(aux6839_BOOL,aux6839_INTEGER);
constraint bool2int(aux6845_BOOL,aux6845_INTEGER);
constraint bool2int(aux6851_BOOL,aux6851_INTEGER);
constraint bool2int(aux6857_BOOL,aux6857_INTEGER);
constraint bool2int(aux6863_BOOL,aux6863_INTEGER);
constraint bool2int(aux6869_BOOL,aux6869_INTEGER);
constraint bool2int(aux6875_BOOL,aux6875_INTEGER);
constraint bool2int(aux6881_BOOL,aux6881_INTEGER);
constraint bool2int(aux6885_BOOL,aux6885_INTEGER);
constraint bool2int(aux6892_BOOL,aux6892_INTEGER);
constraint bool2int(aux6898_BOOL,aux6898_INTEGER);
constraint bool2int(aux6904_BOOL,aux6904_INTEGER);
constraint bool2int(aux6910_BOOL,aux6910_INTEGER);
constraint bool2int(aux6916_BOOL,aux6916_INTEGER);
constraint bool2int(aux6922_BOOL,aux6922_INTEGER);
constraint bool2int(aux6928_BOOL,aux6928_INTEGER);
constraint bool2int(aux6934_BOOL,aux6934_INTEGER);
constraint bool2int(aux6940_BOOL,aux6940_INTEGER);
constraint bool2int(aux6946_BOOL,aux6946_INTEGER);
constraint bool2int(aux6952_BOOL,aux6952_INTEGER);
constraint bool2int(aux6958_BOOL,aux6958_INTEGER);
constraint bool2int(aux6964_BOOL,aux6964_INTEGER);
constraint bool2int(aux6970_BOOL,aux6970_INTEGER);
constraint bool2int(aux6976_BOOL,aux6976_INTEGER);
constraint bool2int(aux6982_BOOL,aux6982_INTEGER);
constraint bool2int(aux6988_BOOL,aux6988_INTEGER);
constraint bool2int(aux6994_BOOL,aux6994_INTEGER);
constraint bool2int(aux7000_BOOL,aux7000_INTEGER);
constraint bool2int(aux7004_BOOL,aux7004_INTEGER);
constraint bool2int(aux7011_BOOL,aux7011_INTEGER);
constraint bool2int(aux7017_BOOL,aux7017_INTEGER);
constraint bool2int(aux7023_BOOL,aux7023_INTEGER);
constraint bool2int(aux7029_BOOL,aux7029_INTEGER);
constraint bool2int(aux7035_BOOL,aux7035_INTEGER);
constraint bool2int(aux7041_BOOL,aux7041_INTEGER);
constraint bool2int(aux7047_BOOL,aux7047_INTEGER);
constraint bool2int(aux7053_BOOL,aux7053_INTEGER);
constraint bool2int(aux7059_BOOL,aux7059_INTEGER);
constraint bool2int(aux7065_BOOL,aux7065_INTEGER);
constraint bool2int(aux7071_BOOL,aux7071_INTEGER);
constraint bool2int(aux7077_BOOL,aux7077_INTEGER);
constraint bool2int(aux7083_BOOL,aux7083_INTEGER);
constraint bool2int(aux7089_BOOL,aux7089_INTEGER);
constraint bool2int(aux7095_BOOL,aux7095_INTEGER);
constraint bool2int(aux7101_BOOL,aux7101_INTEGER);
constraint bool2int(aux7107_BOOL,aux7107_INTEGER);
constraint bool2int(aux7113_BOOL,aux7113_INTEGER);
constraint bool2int(aux7119_BOOL,aux7119_INTEGER);
constraint bool2int(aux7123_BOOL,aux7123_INTEGER);
constraint bool2int(aux7130_BOOL,aux7130_INTEGER);
constraint bool2int(aux7136_BOOL,aux7136_INTEGER);
constraint bool2int(aux7142_BOOL,aux7142_INTEGER);
constraint bool2int(aux7148_BOOL,aux7148_INTEGER);
constraint bool2int(aux7154_BOOL,aux7154_INTEGER);
constraint bool2int(aux7160_BOOL,aux7160_INTEGER);
constraint bool2int(aux7166_BOOL,aux7166_INTEGER);
constraint bool2int(aux7172_BOOL,aux7172_INTEGER);
constraint bool2int(aux7178_BOOL,aux7178_INTEGER);
constraint bool2int(aux7184_BOOL,aux7184_INTEGER);
constraint bool2int(aux7190_BOOL,aux7190_INTEGER);
constraint bool2int(aux7196_BOOL,aux7196_INTEGER);
constraint bool2int(aux7202_BOOL,aux7202_INTEGER);
constraint bool2int(aux7208_BOOL,aux7208_INTEGER);
constraint bool2int(aux7214_BOOL,aux7214_INTEGER);
constraint bool2int(aux7220_BOOL,aux7220_INTEGER);
constraint bool2int(aux7226_BOOL,aux7226_INTEGER);
constraint bool2int(aux7232_BOOL,aux7232_INTEGER);
constraint bool2int(aux7238_BOOL,aux7238_INTEGER);
constraint bool2int(aux7242_BOOL,aux7242_INTEGER);
constraint bool2int(aux7249_BOOL,aux7249_INTEGER);
constraint bool2int(aux7255_BOOL,aux7255_INTEGER);
constraint bool2int(aux7261_BOOL,aux7261_INTEGER);
constraint bool2int(aux7267_BOOL,aux7267_INTEGER);
constraint bool2int(aux7273_BOOL,aux7273_INTEGER);
constraint bool2int(aux7279_BOOL,aux7279_INTEGER);
constraint bool2int(aux7285_BOOL,aux7285_INTEGER);
constraint bool2int(aux7291_BOOL,aux7291_INTEGER);
constraint bool2int(aux7297_BOOL,aux7297_INTEGER);
constraint bool2int(aux7303_BOOL,aux7303_INTEGER);
constraint bool2int(aux7309_BOOL,aux7309_INTEGER);
constraint bool2int(aux7315_BOOL,aux7315_INTEGER);
constraint bool2int(aux7321_BOOL,aux7321_INTEGER);
constraint bool2int(aux7327_BOOL,aux7327_INTEGER);
constraint bool2int(aux7333_BOOL,aux7333_INTEGER);
constraint bool2int(aux7339_BOOL,aux7339_INTEGER);
constraint bool2int(aux7345_BOOL,aux7345_INTEGER);
constraint bool2int(aux7351_BOOL,aux7351_INTEGER);
constraint bool2int(aux7357_BOOL,aux7357_INTEGER);
constraint bool2int(aux7361_BOOL,aux7361_INTEGER);
constraint bool2int(aux7368_BOOL,aux7368_INTEGER);
constraint bool2int(aux7374_BOOL,aux7374_INTEGER);
constraint bool2int(aux7380_BOOL,aux7380_INTEGER);
constraint bool2int(aux7386_BOOL,aux7386_INTEGER);
constraint bool2int(aux7392_BOOL,aux7392_INTEGER);
constraint bool2int(aux7398_BOOL,aux7398_INTEGER);
constraint bool2int(aux7404_BOOL,aux7404_INTEGER);
constraint bool2int(aux7410_BOOL,aux7410_INTEGER);
constraint bool2int(aux7416_BOOL,aux7416_INTEGER);
constraint bool2int(aux7422_BOOL,aux7422_INTEGER);
constraint bool2int(aux7428_BOOL,aux7428_INTEGER);
constraint bool2int(aux7434_BOOL,aux7434_INTEGER);
constraint bool2int(aux7440_BOOL,aux7440_INTEGER);
constraint bool2int(aux7446_BOOL,aux7446_INTEGER);
constraint bool2int(aux7452_BOOL,aux7452_INTEGER);
constraint bool2int(aux7458_BOOL,aux7458_INTEGER);
constraint bool2int(aux7464_BOOL,aux7464_INTEGER);
constraint bool2int(aux7470_BOOL,aux7470_INTEGER);
constraint bool2int(aux7476_BOOL,aux7476_INTEGER);
constraint bool2int(aux7480_BOOL,aux7480_INTEGER);
constraint bool2int(aux7487_BOOL,aux7487_INTEGER);
constraint bool2int(aux7493_BOOL,aux7493_INTEGER);
constraint bool2int(aux7499_BOOL,aux7499_INTEGER);
constraint bool2int(aux7505_BOOL,aux7505_INTEGER);
constraint bool2int(aux7511_BOOL,aux7511_INTEGER);
constraint bool2int(aux7517_BOOL,aux7517_INTEGER);
constraint bool2int(aux7523_BOOL,aux7523_INTEGER);
constraint bool2int(aux7529_BOOL,aux7529_INTEGER);
constraint bool2int(aux7535_BOOL,aux7535_INTEGER);
constraint bool2int(aux7541_BOOL,aux7541_INTEGER);
constraint bool2int(aux7547_BOOL,aux7547_INTEGER);
constraint bool2int(aux7553_BOOL,aux7553_INTEGER);
constraint bool2int(aux7559_BOOL,aux7559_INTEGER);
constraint bool2int(aux7565_BOOL,aux7565_INTEGER);
constraint bool2int(aux7571_BOOL,aux7571_INTEGER);
constraint bool2int(aux7577_BOOL,aux7577_INTEGER);
constraint bool2int(aux7583_BOOL,aux7583_INTEGER);
constraint bool2int(aux7589_BOOL,aux7589_INTEGER);
constraint bool2int(aux7595_BOOL,aux7595_INTEGER);
constraint bool2int(aux7599_BOOL,aux7599_INTEGER);
constraint bool2int(aux7606_BOOL,aux7606_INTEGER);
constraint bool2int(aux7612_BOOL,aux7612_INTEGER);
constraint bool2int(aux7618_BOOL,aux7618_INTEGER);
constraint bool2int(aux7624_BOOL,aux7624_INTEGER);
constraint bool2int(aux7630_BOOL,aux7630_INTEGER);
constraint bool2int(aux7636_BOOL,aux7636_INTEGER);
constraint bool2int(aux7642_BOOL,aux7642_INTEGER);
constraint bool2int(aux7648_BOOL,aux7648_INTEGER);
constraint bool2int(aux7654_BOOL,aux7654_INTEGER);
constraint bool2int(aux7660_BOOL,aux7660_INTEGER);
constraint bool2int(aux7666_BOOL,aux7666_INTEGER);
constraint bool2int(aux7672_BOOL,aux7672_INTEGER);
constraint bool2int(aux7678_BOOL,aux7678_INTEGER);
constraint bool2int(aux7684_BOOL,aux7684_INTEGER);
constraint bool2int(aux7690_BOOL,aux7690_INTEGER);
constraint bool2int(aux7696_BOOL,aux7696_INTEGER);
constraint bool2int(aux7702_BOOL,aux7702_INTEGER);
constraint bool2int(aux7708_BOOL,aux7708_INTEGER);
constraint bool2int(aux7714_BOOL,aux7714_INTEGER);
constraint bool2int(aux7718_BOOL,aux7718_INTEGER);
constraint bool2int(aux7725_BOOL,aux7725_INTEGER);
constraint bool2int(aux7731_BOOL,aux7731_INTEGER);
constraint bool2int(aux7737_BOOL,aux7737_INTEGER);
constraint bool2int(aux7743_BOOL,aux7743_INTEGER);
constraint bool2int(aux7749_BOOL,aux7749_INTEGER);
constraint bool2int(aux7755_BOOL,aux7755_INTEGER);
constraint bool2int(aux7761_BOOL,aux7761_INTEGER);
constraint bool2int(aux7767_BOOL,aux7767_INTEGER);
constraint bool2int(aux7773_BOOL,aux7773_INTEGER);
constraint bool2int(aux7779_BOOL,aux7779_INTEGER);
constraint bool2int(aux7785_BOOL,aux7785_INTEGER);
constraint bool2int(aux7791_BOOL,aux7791_INTEGER);
constraint bool2int(aux7797_BOOL,aux7797_INTEGER);
constraint bool2int(aux7803_BOOL,aux7803_INTEGER);
constraint bool2int(aux7809_BOOL,aux7809_INTEGER);
constraint bool2int(aux7815_BOOL,aux7815_INTEGER);
constraint bool2int(aux7821_BOOL,aux7821_INTEGER);
constraint bool2int(aux7827_BOOL,aux7827_INTEGER);
constraint bool2int(aux7833_BOOL,aux7833_INTEGER);
constraint bool2int(aux7839_BOOL,aux7839_INTEGER);
constraint bool2int(aux7846_BOOL,aux7846_INTEGER);
constraint bool2int(aux7852_BOOL,aux7852_INTEGER);
constraint bool2int(aux7858_BOOL,aux7858_INTEGER);
constraint bool2int(aux7864_BOOL,aux7864_INTEGER);
constraint bool2int(aux7870_BOOL,aux7870_INTEGER);
constraint bool2int(aux7876_BOOL,aux7876_INTEGER);
constraint bool2int(aux7882_BOOL,aux7882_INTEGER);
constraint bool2int(aux7888_BOOL,aux7888_INTEGER);
constraint bool2int(aux7894_BOOL,aux7894_INTEGER);
constraint bool2int(aux7900_BOOL,aux7900_INTEGER);
constraint bool2int(aux7904_BOOL,aux7904_INTEGER);
constraint bool2int(aux7910_BOOL,aux7910_INTEGER);
constraint bool2int(aux7916_BOOL,aux7916_INTEGER);
constraint bool2int(aux7922_BOOL,aux7922_INTEGER);
constraint bool2int(aux7928_BOOL,aux7928_INTEGER);
constraint bool2int(aux7934_BOOL,aux7934_INTEGER);
constraint bool2int(aux7940_BOOL,aux7940_INTEGER);
constraint bool2int(aux7946_BOOL,aux7946_INTEGER);
constraint bool2int(aux7952_BOOL,aux7952_INTEGER);
constraint bool2int(aux7958_BOOL,aux7958_INTEGER);
constraint bool2int(aux7965_BOOL,aux7965_INTEGER);
constraint bool2int(aux7971_BOOL,aux7971_INTEGER);
constraint bool2int(aux7977_BOOL,aux7977_INTEGER);
constraint bool2int(aux7983_BOOL,aux7983_INTEGER);
constraint bool2int(aux7989_BOOL,aux7989_INTEGER);
constraint bool2int(aux7995_BOOL,aux7995_INTEGER);
constraint bool2int(aux8001_BOOL,aux8001_INTEGER);
constraint bool2int(aux8007_BOOL,aux8007_INTEGER);
constraint bool2int(aux8013_BOOL,aux8013_INTEGER);
constraint bool2int(aux8019_BOOL,aux8019_INTEGER);
constraint bool2int(aux8023_BOOL,aux8023_INTEGER);
constraint bool2int(aux8029_BOOL,aux8029_INTEGER);
constraint bool2int(aux8035_BOOL,aux8035_INTEGER);
constraint bool2int(aux8041_BOOL,aux8041_INTEGER);
constraint bool2int(aux8047_BOOL,aux8047_INTEGER);
constraint bool2int(aux8053_BOOL,aux8053_INTEGER);
constraint bool2int(aux8059_BOOL,aux8059_INTEGER);
constraint bool2int(aux8065_BOOL,aux8065_INTEGER);
constraint bool2int(aux8071_BOOL,aux8071_INTEGER);
constraint bool2int(aux8077_BOOL,aux8077_INTEGER);
constraint bool2int(aux8082_BOOL,aux8082_INTEGER);
constraint bool2int(aux8088_BOOL,aux8088_INTEGER);
constraint bool2int(aux8094_BOOL,aux8094_INTEGER);
constraint bool2int(aux8100_BOOL,aux8100_INTEGER);
constraint bool2int(aux8106_BOOL,aux8106_INTEGER);
constraint bool2int(aux8112_BOOL,aux8112_INTEGER);
constraint bool2int(aux8118_BOOL,aux8118_INTEGER);
constraint bool2int(aux8124_BOOL,aux8124_INTEGER);
constraint bool2int(aux8130_BOOL,aux8130_INTEGER);
constraint bool2int(aux8136_BOOL,aux8136_INTEGER);
constraint bool2int(aux8142_BOOL,aux8142_INTEGER);
constraint bool2int(aux8148_BOOL,aux8148_INTEGER);
constraint bool2int(aux8154_BOOL,aux8154_INTEGER);
constraint bool2int(aux8160_BOOL,aux8160_INTEGER);
constraint bool2int(aux8166_BOOL,aux8166_INTEGER);
constraint bool2int(aux8172_BOOL,aux8172_INTEGER);
constraint bool2int(aux8178_BOOL,aux8178_INTEGER);
constraint bool2int(aux8184_BOOL,aux8184_INTEGER);
constraint bool2int(aux8190_BOOL,aux8190_INTEGER);
constraint bool2int(aux8196_BOOL,aux8196_INTEGER);
constraint bool2int(aux8203_BOOL,aux8203_INTEGER);
constraint bool2int(aux8209_BOOL,aux8209_INTEGER);
constraint bool2int(aux8215_BOOL,aux8215_INTEGER);
constraint bool2int(aux8221_BOOL,aux8221_INTEGER);
constraint bool2int(aux8227_BOOL,aux8227_INTEGER);
constraint bool2int(aux8233_BOOL,aux8233_INTEGER);
constraint bool2int(aux8239_BOOL,aux8239_INTEGER);
constraint bool2int(aux8245_BOOL,aux8245_INTEGER);
constraint bool2int(aux8251_BOOL,aux8251_INTEGER);
constraint bool2int(aux8257_BOOL,aux8257_INTEGER);
constraint bool2int(aux8261_BOOL,aux8261_INTEGER);
constraint bool2int(aux8267_BOOL,aux8267_INTEGER);
constraint bool2int(aux8273_BOOL,aux8273_INTEGER);
constraint bool2int(aux8279_BOOL,aux8279_INTEGER);
constraint bool2int(aux8285_BOOL,aux8285_INTEGER);
constraint bool2int(aux8291_BOOL,aux8291_INTEGER);
constraint bool2int(aux8297_BOOL,aux8297_INTEGER);
constraint bool2int(aux8303_BOOL,aux8303_INTEGER);
constraint bool2int(aux8309_BOOL,aux8309_INTEGER);
constraint bool2int(aux8315_BOOL,aux8315_INTEGER);
constraint bool2int(aux8320_BOOL,aux8320_INTEGER);
constraint bool2int(aux8326_BOOL,aux8326_INTEGER);
constraint bool2int(aux8332_BOOL,aux8332_INTEGER);
constraint bool2int(aux8338_BOOL,aux8338_INTEGER);
constraint bool2int(aux8344_BOOL,aux8344_INTEGER);
constraint bool2int(aux8350_BOOL,aux8350_INTEGER);
constraint bool2int(aux8356_BOOL,aux8356_INTEGER);
constraint bool2int(aux8362_BOOL,aux8362_INTEGER);
constraint bool2int(aux8368_BOOL,aux8368_INTEGER);
constraint bool2int(aux8374_BOOL,aux8374_INTEGER);
constraint bool2int(aux8380_BOOL,aux8380_INTEGER);
constraint bool2int(aux8386_BOOL,aux8386_INTEGER);
constraint bool2int(aux8392_BOOL,aux8392_INTEGER);
constraint bool2int(aux8398_BOOL,aux8398_INTEGER);
constraint bool2int(aux8404_BOOL,aux8404_INTEGER);
constraint bool2int(aux8410_BOOL,aux8410_INTEGER);
constraint bool2int(aux8416_BOOL,aux8416_INTEGER);
constraint bool2int(aux8422_BOOL,aux8422_INTEGER);
constraint bool2int(aux8428_BOOL,aux8428_INTEGER);
constraint bool2int(aux8434_BOOL,aux8434_INTEGER);
constraint bool2int(aux8441_BOOL,aux8441_INTEGER);
constraint bool2int(aux8447_BOOL,aux8447_INTEGER);
constraint bool2int(aux8453_BOOL,aux8453_INTEGER);
constraint bool2int(aux8459_BOOL,aux8459_INTEGER);
constraint bool2int(aux8465_BOOL,aux8465_INTEGER);
constraint bool2int(aux8471_BOOL,aux8471_INTEGER);
constraint bool2int(aux8477_BOOL,aux8477_INTEGER);
constraint bool2int(aux8483_BOOL,aux8483_INTEGER);
constraint bool2int(aux8489_BOOL,aux8489_INTEGER);
constraint bool2int(aux8495_BOOL,aux8495_INTEGER);
constraint bool2int(aux8499_BOOL,aux8499_INTEGER);
constraint bool2int(aux8505_BOOL,aux8505_INTEGER);
constraint bool2int(aux8511_BOOL,aux8511_INTEGER);
constraint bool2int(aux8517_BOOL,aux8517_INTEGER);
constraint bool2int(aux8523_BOOL,aux8523_INTEGER);
constraint bool2int(aux8529_BOOL,aux8529_INTEGER);
constraint bool2int(aux8535_BOOL,aux8535_INTEGER);
constraint bool2int(aux8541_BOOL,aux8541_INTEGER);
constraint bool2int(aux8547_BOOL,aux8547_INTEGER);
constraint bool2int(aux8553_BOOL,aux8553_INTEGER);
constraint bool2int(aux8558_BOOL,aux8558_INTEGER);
constraint bool2int(aux8564_BOOL,aux8564_INTEGER);
constraint bool2int(aux8570_BOOL,aux8570_INTEGER);
constraint bool2int(aux8576_BOOL,aux8576_INTEGER);
constraint bool2int(aux8582_BOOL,aux8582_INTEGER);
constraint bool2int(aux8588_BOOL,aux8588_INTEGER);
constraint bool2int(aux8594_BOOL,aux8594_INTEGER);
constraint bool2int(aux8600_BOOL,aux8600_INTEGER);
constraint bool2int(aux8606_BOOL,aux8606_INTEGER);
constraint bool2int(aux8612_BOOL,aux8612_INTEGER);
constraint bool2int(aux8618_BOOL,aux8618_INTEGER);
constraint bool2int(aux8624_BOOL,aux8624_INTEGER);
constraint bool2int(aux8630_BOOL,aux8630_INTEGER);
constraint bool2int(aux8636_BOOL,aux8636_INTEGER);
constraint bool2int(aux8642_BOOL,aux8642_INTEGER);
constraint bool2int(aux8648_BOOL,aux8648_INTEGER);
constraint bool2int(aux8654_BOOL,aux8654_INTEGER);
constraint bool2int(aux8660_BOOL,aux8660_INTEGER);
constraint bool2int(aux8666_BOOL,aux8666_INTEGER);
constraint bool2int(aux8672_BOOL,aux8672_INTEGER);
constraint bool2int(aux8677_BOOL,aux8677_INTEGER);
constraint bool2int(aux8683_BOOL,aux8683_INTEGER);
constraint bool2int(aux8689_BOOL,aux8689_INTEGER);
constraint bool2int(aux8695_BOOL,aux8695_INTEGER);
constraint bool2int(aux8701_BOOL,aux8701_INTEGER);
constraint bool2int(aux8707_BOOL,aux8707_INTEGER);
constraint bool2int(aux8713_BOOL,aux8713_INTEGER);
constraint bool2int(aux8719_BOOL,aux8719_INTEGER);
constraint bool2int(aux8725_BOOL,aux8725_INTEGER);
constraint bool2int(aux8731_BOOL,aux8731_INTEGER);
constraint bool2int(aux8737_BOOL,aux8737_INTEGER);
constraint bool2int(aux8743_BOOL,aux8743_INTEGER);
constraint bool2int(aux8749_BOOL,aux8749_INTEGER);
constraint bool2int(aux8755_BOOL,aux8755_INTEGER);
constraint bool2int(aux8761_BOOL,aux8761_INTEGER);
constraint bool2int(aux8767_BOOL,aux8767_INTEGER);
constraint bool2int(aux8773_BOOL,aux8773_INTEGER);
constraint bool2int(aux8779_BOOL,aux8779_INTEGER);
constraint bool2int(aux8785_BOOL,aux8785_INTEGER);
constraint bool2int(aux8791_BOOL,aux8791_INTEGER);
constraint bool2int(aux8798_BOOL,aux8798_INTEGER);
constraint bool2int(aux8804_BOOL,aux8804_INTEGER);
constraint bool2int(aux8810_BOOL,aux8810_INTEGER);
constraint bool2int(aux8816_BOOL,aux8816_INTEGER);
constraint bool2int(aux8822_BOOL,aux8822_INTEGER);
constraint bool2int(aux8828_BOOL,aux8828_INTEGER);
constraint bool2int(aux8834_BOOL,aux8834_INTEGER);
constraint bool2int(aux8840_BOOL,aux8840_INTEGER);
constraint bool2int(aux8846_BOOL,aux8846_INTEGER);
constraint bool2int(aux8852_BOOL,aux8852_INTEGER);
constraint bool2int(aux8856_BOOL,aux8856_INTEGER);
constraint bool2int(aux8862_BOOL,aux8862_INTEGER);
constraint bool2int(aux8868_BOOL,aux8868_INTEGER);
constraint bool2int(aux8874_BOOL,aux8874_INTEGER);
constraint bool2int(aux8880_BOOL,aux8880_INTEGER);
constraint bool2int(aux8886_BOOL,aux8886_INTEGER);
constraint bool2int(aux8892_BOOL,aux8892_INTEGER);
constraint bool2int(aux8898_BOOL,aux8898_INTEGER);
constraint bool2int(aux8904_BOOL,aux8904_INTEGER);
constraint bool2int(aux8910_BOOL,aux8910_INTEGER);
constraint bool2int(aux8917_BOOL,aux8917_INTEGER);
constraint bool2int(aux8923_BOOL,aux8923_INTEGER);
constraint bool2int(aux8929_BOOL,aux8929_INTEGER);
constraint bool2int(aux8935_BOOL,aux8935_INTEGER);
constraint bool2int(aux8941_BOOL,aux8941_INTEGER);
constraint bool2int(aux8947_BOOL,aux8947_INTEGER);
constraint bool2int(aux8953_BOOL,aux8953_INTEGER);
constraint bool2int(aux8959_BOOL,aux8959_INTEGER);
constraint bool2int(aux8965_BOOL,aux8965_INTEGER);
constraint bool2int(aux8971_BOOL,aux8971_INTEGER);
constraint bool2int(aux8975_BOOL,aux8975_INTEGER);
constraint bool2int(aux8981_BOOL,aux8981_INTEGER);
constraint bool2int(aux8987_BOOL,aux8987_INTEGER);
constraint bool2int(aux8993_BOOL,aux8993_INTEGER);
constraint bool2int(aux8999_BOOL,aux8999_INTEGER);
constraint bool2int(aux9005_BOOL,aux9005_INTEGER);
constraint bool2int(aux9011_BOOL,aux9011_INTEGER);
constraint bool2int(aux9017_BOOL,aux9017_INTEGER);
constraint bool2int(aux9023_BOOL,aux9023_INTEGER);
constraint bool2int(aux9029_BOOL,aux9029_INTEGER);
constraint bool2int(aux9034_BOOL,aux9034_INTEGER);
constraint bool2int(aux9040_BOOL,aux9040_INTEGER);
constraint bool2int(aux9046_BOOL,aux9046_INTEGER);
constraint bool2int(aux9052_BOOL,aux9052_INTEGER);
constraint bool2int(aux9058_BOOL,aux9058_INTEGER);
constraint bool2int(aux9064_BOOL,aux9064_INTEGER);
constraint bool2int(aux9070_BOOL,aux9070_INTEGER);
constraint bool2int(aux9076_BOOL,aux9076_INTEGER);
constraint bool2int(aux9082_BOOL,aux9082_INTEGER);
constraint bool2int(aux9088_BOOL,aux9088_INTEGER);
constraint bool2int(aux9094_BOOL,aux9094_INTEGER);
constraint bool2int(aux9100_BOOL,aux9100_INTEGER);
constraint bool2int(aux9106_BOOL,aux9106_INTEGER);
constraint bool2int(aux9112_BOOL,aux9112_INTEGER);
constraint bool2int(aux9118_BOOL,aux9118_INTEGER);
constraint bool2int(aux9124_BOOL,aux9124_INTEGER);
constraint bool2int(aux9130_BOOL,aux9130_INTEGER);
constraint bool2int(aux9136_BOOL,aux9136_INTEGER);
constraint bool2int(aux9142_BOOL,aux9142_INTEGER);
constraint bool2int(aux9148_BOOL,aux9148_INTEGER);
constraint bool2int(aux9153_BOOL,aux9153_INTEGER);
constraint bool2int(aux9159_BOOL,aux9159_INTEGER);
constraint bool2int(aux9165_BOOL,aux9165_INTEGER);
constraint bool2int(aux9171_BOOL,aux9171_INTEGER);
constraint bool2int(aux9177_BOOL,aux9177_INTEGER);
constraint bool2int(aux9183_BOOL,aux9183_INTEGER);
constraint bool2int(aux9189_BOOL,aux9189_INTEGER);
constraint bool2int(aux9195_BOOL,aux9195_INTEGER);
constraint bool2int(aux9201_BOOL,aux9201_INTEGER);
constraint bool2int(aux9207_BOOL,aux9207_INTEGER);
constraint bool2int(aux9213_BOOL,aux9213_INTEGER);
constraint bool2int(aux9219_BOOL,aux9219_INTEGER);
constraint bool2int(aux9225_BOOL,aux9225_INTEGER);
constraint bool2int(aux9231_BOOL,aux9231_INTEGER);
constraint bool2int(aux9237_BOOL,aux9237_INTEGER);
constraint bool2int(aux9243_BOOL,aux9243_INTEGER);
constraint bool2int(aux9249_BOOL,aux9249_INTEGER);
constraint bool2int(aux9255_BOOL,aux9255_INTEGER);
constraint bool2int(aux9261_BOOL,aux9261_INTEGER);
constraint bool2int(aux9267_BOOL,aux9267_INTEGER);
constraint bool2int(aux9274_BOOL,aux9274_INTEGER);
constraint bool2int(aux9280_BOOL,aux9280_INTEGER);
constraint bool2int(aux9286_BOOL,aux9286_INTEGER);
constraint bool2int(aux9292_BOOL,aux9292_INTEGER);
constraint bool2int(aux9298_BOOL,aux9298_INTEGER);
constraint bool2int(aux9304_BOOL,aux9304_INTEGER);
constraint bool2int(aux9310_BOOL,aux9310_INTEGER);
constraint bool2int(aux9316_BOOL,aux9316_INTEGER);
constraint bool2int(aux9322_BOOL,aux9322_INTEGER);
constraint bool2int(aux9328_BOOL,aux9328_INTEGER);
constraint bool2int(aux9332_BOOL,aux9332_INTEGER);
constraint bool2int(aux9338_BOOL,aux9338_INTEGER);
constraint bool2int(aux9344_BOOL,aux9344_INTEGER);
constraint bool2int(aux9350_BOOL,aux9350_INTEGER);
constraint bool2int(aux9356_BOOL,aux9356_INTEGER);
constraint bool2int(aux9362_BOOL,aux9362_INTEGER);
constraint bool2int(aux9368_BOOL,aux9368_INTEGER);
constraint bool2int(aux9374_BOOL,aux9374_INTEGER);
constraint bool2int(aux9380_BOOL,aux9380_INTEGER);
constraint bool2int(aux9386_BOOL,aux9386_INTEGER);
constraint bool2int(aux9393_BOOL,aux9393_INTEGER);
constraint bool2int(aux9399_BOOL,aux9399_INTEGER);
constraint bool2int(aux9405_BOOL,aux9405_INTEGER);
constraint bool2int(aux9411_BOOL,aux9411_INTEGER);
constraint bool2int(aux9417_BOOL,aux9417_INTEGER);
constraint bool2int(aux9423_BOOL,aux9423_INTEGER);
constraint bool2int(aux9429_BOOL,aux9429_INTEGER);
constraint bool2int(aux9435_BOOL,aux9435_INTEGER);
constraint bool2int(aux9441_BOOL,aux9441_INTEGER);
constraint bool2int(aux9447_BOOL,aux9447_INTEGER);
constraint bool2int(aux9451_BOOL,aux9451_INTEGER);
constraint bool2int(aux9457_BOOL,aux9457_INTEGER);
constraint bool2int(aux9463_BOOL,aux9463_INTEGER);
constraint bool2int(aux9469_BOOL,aux9469_INTEGER);
constraint bool2int(aux9475_BOOL,aux9475_INTEGER);
constraint bool2int(aux9481_BOOL,aux9481_INTEGER);
constraint bool2int(aux9487_BOOL,aux9487_INTEGER);
constraint bool2int(aux9493_BOOL,aux9493_INTEGER);
constraint bool2int(aux9499_BOOL,aux9499_INTEGER);
constraint bool2int(aux9505_BOOL,aux9505_INTEGER);
constraint bool2int(aux9512_BOOL,aux9512_INTEGER);
constraint bool2int(aux9518_BOOL,aux9518_INTEGER);
constraint bool2int(aux9524_BOOL,aux9524_INTEGER);
constraint bool2int(aux9530_BOOL,aux9530_INTEGER);
constraint bool2int(aux9536_BOOL,aux9536_INTEGER);
constraint bool2int(aux9542_BOOL,aux9542_INTEGER);
constraint bool2int(aux9548_BOOL,aux9548_INTEGER);
constraint bool2int(aux9554_BOOL,aux9554_INTEGER);
constraint bool2int(aux9560_BOOL,aux9560_INTEGER);
constraint bool2int(aux9566_BOOL,aux9566_INTEGER);
constraint bool2int(aux9570_BOOL,aux9570_INTEGER);
constraint bool2int(aux9576_BOOL,aux9576_INTEGER);
constraint bool2int(aux9582_BOOL,aux9582_INTEGER);
constraint bool2int(aux9588_BOOL,aux9588_INTEGER);
constraint bool2int(aux9594_BOOL,aux9594_INTEGER);
constraint bool2int(aux9600_BOOL,aux9600_INTEGER);
constraint bool2int(aux9606_BOOL,aux9606_INTEGER);
constraint bool2int(aux9612_BOOL,aux9612_INTEGER);
constraint bool2int(aux9618_BOOL,aux9618_INTEGER);
constraint bool2int(aux9624_BOOL,aux9624_INTEGER);
constraint bool2int(aux9631_BOOL,aux9631_INTEGER);
constraint bool2int(aux9637_BOOL,aux9637_INTEGER);
constraint bool2int(aux9643_BOOL,aux9643_INTEGER);
constraint bool2int(aux9649_BOOL,aux9649_INTEGER);
constraint bool2int(aux9655_BOOL,aux9655_INTEGER);
constraint bool2int(aux9661_BOOL,aux9661_INTEGER);
constraint bool2int(aux9667_BOOL,aux9667_INTEGER);
constraint bool2int(aux9673_BOOL,aux9673_INTEGER);
constraint bool2int(aux9679_BOOL,aux9679_INTEGER);
constraint bool2int(aux9685_BOOL,aux9685_INTEGER);
constraint bool2int(aux9689_BOOL,aux9689_INTEGER);
constraint bool2int(aux9695_BOOL,aux9695_INTEGER);
constraint bool2int(aux9701_BOOL,aux9701_INTEGER);
constraint bool2int(aux9707_BOOL,aux9707_INTEGER);
constraint bool2int(aux9713_BOOL,aux9713_INTEGER);
constraint bool2int(aux9719_BOOL,aux9719_INTEGER);
constraint bool2int(aux9725_BOOL,aux9725_INTEGER);
constraint bool2int(aux9731_BOOL,aux9731_INTEGER);
constraint bool2int(aux9737_BOOL,aux9737_INTEGER);
constraint bool2int(aux9743_BOOL,aux9743_INTEGER);
constraint bool2int(aux9750_BOOL,aux9750_INTEGER);
constraint bool2int(aux9756_BOOL,aux9756_INTEGER);
constraint bool2int(aux9762_BOOL,aux9762_INTEGER);
constraint bool2int(aux9768_BOOL,aux9768_INTEGER);
constraint bool2int(aux9774_BOOL,aux9774_INTEGER);
constraint bool2int(aux9780_BOOL,aux9780_INTEGER);
constraint bool2int(aux9786_BOOL,aux9786_INTEGER);
constraint bool2int(aux9792_BOOL,aux9792_INTEGER);
constraint bool2int(aux9798_BOOL,aux9798_INTEGER);
constraint bool2int(aux9804_BOOL,aux9804_INTEGER);
constraint bool2int(aux9808_BOOL,aux9808_INTEGER);
constraint bool2int(aux9814_BOOL,aux9814_INTEGER);
constraint bool2int(aux9820_BOOL,aux9820_INTEGER);
constraint bool2int(aux9826_BOOL,aux9826_INTEGER);
constraint bool2int(aux9832_BOOL,aux9832_INTEGER);
constraint bool2int(aux9838_BOOL,aux9838_INTEGER);
constraint bool2int(aux9844_BOOL,aux9844_INTEGER);
constraint bool2int(aux9850_BOOL,aux9850_INTEGER);
constraint bool2int(aux9856_BOOL,aux9856_INTEGER);
constraint bool2int(aux9862_BOOL,aux9862_INTEGER);
constraint bool2int(aux9867_BOOL,aux9867_INTEGER);
constraint bool2int(aux9873_BOOL,aux9873_INTEGER);
constraint bool2int(aux9879_BOOL,aux9879_INTEGER);
constraint bool2int(aux9885_BOOL,aux9885_INTEGER);
constraint bool2int(aux9891_BOOL,aux9891_INTEGER);
constraint bool2int(aux9897_BOOL,aux9897_INTEGER);
constraint bool2int(aux9903_BOOL,aux9903_INTEGER);
constraint bool2int(aux9909_BOOL,aux9909_INTEGER);
constraint bool2int(aux9915_BOOL,aux9915_INTEGER);
constraint bool2int(aux9921_BOOL,aux9921_INTEGER);
constraint bool2int(aux9927_BOOL,aux9927_INTEGER);
constraint bool2int(aux9933_BOOL,aux9933_INTEGER);
constraint bool2int(aux9939_BOOL,aux9939_INTEGER);
constraint bool2int(aux9945_BOOL,aux9945_INTEGER);
constraint bool2int(aux9951_BOOL,aux9951_INTEGER);
constraint bool2int(aux9957_BOOL,aux9957_INTEGER);
constraint bool2int(aux9963_BOOL,aux9963_INTEGER);
constraint bool2int(aux9969_BOOL,aux9969_INTEGER);
constraint bool2int(aux9975_BOOL,aux9975_INTEGER);
constraint bool2int(aux9981_BOOL,aux9981_INTEGER);
constraint bool2int(aux9986_BOOL,aux9986_INTEGER);
constraint bool2int(aux9992_BOOL,aux9992_INTEGER);
constraint bool2int(aux9998_BOOL,aux9998_INTEGER);
constraint bool2int(aux10004_BOOL,aux10004_INTEGER);
constraint bool2int(aux10010_BOOL,aux10010_INTEGER);
constraint bool2int(aux10016_BOOL,aux10016_INTEGER);
constraint bool2int(aux10022_BOOL,aux10022_INTEGER);
constraint bool2int(aux10028_BOOL,aux10028_INTEGER);
constraint bool2int(aux10034_BOOL,aux10034_INTEGER);
constraint bool2int(aux10040_BOOL,aux10040_INTEGER);
constraint bool2int(aux10046_BOOL,aux10046_INTEGER);
constraint bool2int(aux10052_BOOL,aux10052_INTEGER);
constraint bool2int(aux10058_BOOL,aux10058_INTEGER);
constraint bool2int(aux10064_BOOL,aux10064_INTEGER);
constraint bool2int(aux10070_BOOL,aux10070_INTEGER);
constraint bool2int(aux10076_BOOL,aux10076_INTEGER);
constraint bool2int(aux10082_BOOL,aux10082_INTEGER);
constraint bool2int(aux10088_BOOL,aux10088_INTEGER);
constraint bool2int(aux10094_BOOL,aux10094_INTEGER);
constraint bool2int(aux10100_BOOL,aux10100_INTEGER);
constraint bool2int(aux10109_BOOL,aux10109_INTEGER);
constraint bool2int(aux10115_BOOL,aux10115_INTEGER);
constraint bool2int(aux10121_BOOL,aux10121_INTEGER);
constraint bool2int(aux10127_BOOL,aux10127_INTEGER);
constraint bool2int(aux10133_BOOL,aux10133_INTEGER);
constraint bool2int(aux10139_BOOL,aux10139_INTEGER);
constraint bool2int(aux10145_BOOL,aux10145_INTEGER);
constraint bool2int(aux10151_BOOL,aux10151_INTEGER);
constraint bool2int(aux10157_BOOL,aux10157_INTEGER);
constraint bool2int(aux10163_BOOL,aux10163_INTEGER);
constraint bool2int(aux10169_BOOL,aux10169_INTEGER);
constraint bool2int(aux10175_BOOL,aux10175_INTEGER);
constraint bool2int(aux10181_BOOL,aux10181_INTEGER);
constraint bool2int(aux10187_BOOL,aux10187_INTEGER);
constraint bool2int(aux10193_BOOL,aux10193_INTEGER);
constraint bool2int(aux10199_BOOL,aux10199_INTEGER);
constraint bool2int(aux10205_BOOL,aux10205_INTEGER);
constraint bool2int(aux10211_BOOL,aux10211_INTEGER);
constraint bool2int(aux10217_BOOL,aux10217_INTEGER);
constraint bool2int(aux10221_BOOL,aux10221_INTEGER);
constraint bool2int(aux10228_BOOL,aux10228_INTEGER);
constraint bool2int(aux10234_BOOL,aux10234_INTEGER);
constraint bool2int(aux10240_BOOL,aux10240_INTEGER);
constraint bool2int(aux10246_BOOL,aux10246_INTEGER);
constraint bool2int(aux10252_BOOL,aux10252_INTEGER);
constraint bool2int(aux10258_BOOL,aux10258_INTEGER);
constraint bool2int(aux10264_BOOL,aux10264_INTEGER);
constraint bool2int(aux10270_BOOL,aux10270_INTEGER);
constraint bool2int(aux10276_BOOL,aux10276_INTEGER);
constraint bool2int(aux10282_BOOL,aux10282_INTEGER);
constraint bool2int(aux10288_BOOL,aux10288_INTEGER);
constraint bool2int(aux10294_BOOL,aux10294_INTEGER);
constraint bool2int(aux10300_BOOL,aux10300_INTEGER);
constraint bool2int(aux10306_BOOL,aux10306_INTEGER);
constraint bool2int(aux10312_BOOL,aux10312_INTEGER);
constraint bool2int(aux10318_BOOL,aux10318_INTEGER);
constraint bool2int(aux10324_BOOL,aux10324_INTEGER);
constraint bool2int(aux10330_BOOL,aux10330_INTEGER);
constraint bool2int(aux10336_BOOL,aux10336_INTEGER);
constraint bool2int(aux10340_BOOL,aux10340_INTEGER);
constraint bool2int(aux10347_BOOL,aux10347_INTEGER);
constraint bool2int(aux10353_BOOL,aux10353_INTEGER);
constraint bool2int(aux10359_BOOL,aux10359_INTEGER);
constraint bool2int(aux10365_BOOL,aux10365_INTEGER);
constraint bool2int(aux10371_BOOL,aux10371_INTEGER);
constraint bool2int(aux10377_BOOL,aux10377_INTEGER);
constraint bool2int(aux10383_BOOL,aux10383_INTEGER);
constraint bool2int(aux10389_BOOL,aux10389_INTEGER);
constraint bool2int(aux10395_BOOL,aux10395_INTEGER);
constraint bool2int(aux10401_BOOL,aux10401_INTEGER);
constraint bool2int(aux10407_BOOL,aux10407_INTEGER);
constraint bool2int(aux10413_BOOL,aux10413_INTEGER);
constraint bool2int(aux10419_BOOL,aux10419_INTEGER);
constraint bool2int(aux10425_BOOL,aux10425_INTEGER);
constraint bool2int(aux10431_BOOL,aux10431_INTEGER);
constraint bool2int(aux10437_BOOL,aux10437_INTEGER);
constraint bool2int(aux10443_BOOL,aux10443_INTEGER);
constraint bool2int(aux10449_BOOL,aux10449_INTEGER);
constraint bool2int(aux10455_BOOL,aux10455_INTEGER);
constraint bool2int(aux10459_BOOL,aux10459_INTEGER);
constraint bool2int(aux10466_BOOL,aux10466_INTEGER);
constraint bool2int(aux10472_BOOL,aux10472_INTEGER);
constraint bool2int(aux10478_BOOL,aux10478_INTEGER);
constraint bool2int(aux10484_BOOL,aux10484_INTEGER);
constraint bool2int(aux10490_BOOL,aux10490_INTEGER);
constraint bool2int(aux10496_BOOL,aux10496_INTEGER);
constraint bool2int(aux10502_BOOL,aux10502_INTEGER);
constraint bool2int(aux10508_BOOL,aux10508_INTEGER);
constraint bool2int(aux10514_BOOL,aux10514_INTEGER);
constraint bool2int(aux10520_BOOL,aux10520_INTEGER);
constraint bool2int(aux10526_BOOL,aux10526_INTEGER);
constraint bool2int(aux10532_BOOL,aux10532_INTEGER);
constraint bool2int(aux10538_BOOL,aux10538_INTEGER);
constraint bool2int(aux10544_BOOL,aux10544_INTEGER);
constraint bool2int(aux10550_BOOL,aux10550_INTEGER);
constraint bool2int(aux10556_BOOL,aux10556_INTEGER);
constraint bool2int(aux10562_BOOL,aux10562_INTEGER);
constraint bool2int(aux10568_BOOL,aux10568_INTEGER);
constraint bool2int(aux10574_BOOL,aux10574_INTEGER);
constraint bool2int(aux10578_BOOL,aux10578_INTEGER);
constraint bool2int(aux10585_BOOL,aux10585_INTEGER);
constraint bool2int(aux10591_BOOL,aux10591_INTEGER);
constraint bool2int(aux10597_BOOL,aux10597_INTEGER);
constraint bool2int(aux10603_BOOL,aux10603_INTEGER);
constraint bool2int(aux10609_BOOL,aux10609_INTEGER);
constraint bool2int(aux10615_BOOL,aux10615_INTEGER);
constraint bool2int(aux10621_BOOL,aux10621_INTEGER);
constraint bool2int(aux10627_BOOL,aux10627_INTEGER);
constraint bool2int(aux10633_BOOL,aux10633_INTEGER);
constraint bool2int(aux10639_BOOL,aux10639_INTEGER);
constraint bool2int(aux10645_BOOL,aux10645_INTEGER);
constraint bool2int(aux10651_BOOL,aux10651_INTEGER);
constraint bool2int(aux10657_BOOL,aux10657_INTEGER);
constraint bool2int(aux10663_BOOL,aux10663_INTEGER);
constraint bool2int(aux10669_BOOL,aux10669_INTEGER);
constraint bool2int(aux10675_BOOL,aux10675_INTEGER);
constraint bool2int(aux10681_BOOL,aux10681_INTEGER);
constraint bool2int(aux10687_BOOL,aux10687_INTEGER);
constraint bool2int(aux10693_BOOL,aux10693_INTEGER);
constraint bool2int(aux10697_BOOL,aux10697_INTEGER);
constraint bool2int(aux10704_BOOL,aux10704_INTEGER);
constraint bool2int(aux10710_BOOL,aux10710_INTEGER);
constraint bool2int(aux10716_BOOL,aux10716_INTEGER);
constraint bool2int(aux10722_BOOL,aux10722_INTEGER);
constraint bool2int(aux10728_BOOL,aux10728_INTEGER);
constraint bool2int(aux10734_BOOL,aux10734_INTEGER);
constraint bool2int(aux10740_BOOL,aux10740_INTEGER);
constraint bool2int(aux10746_BOOL,aux10746_INTEGER);
constraint bool2int(aux10752_BOOL,aux10752_INTEGER);
constraint bool2int(aux10758_BOOL,aux10758_INTEGER);
constraint bool2int(aux10764_BOOL,aux10764_INTEGER);
constraint bool2int(aux10770_BOOL,aux10770_INTEGER);
constraint bool2int(aux10776_BOOL,aux10776_INTEGER);
constraint bool2int(aux10782_BOOL,aux10782_INTEGER);
constraint bool2int(aux10788_BOOL,aux10788_INTEGER);
constraint bool2int(aux10794_BOOL,aux10794_INTEGER);
constraint bool2int(aux10800_BOOL,aux10800_INTEGER);
constraint bool2int(aux10806_BOOL,aux10806_INTEGER);
constraint bool2int(aux10812_BOOL,aux10812_INTEGER);
constraint bool2int(aux10816_BOOL,aux10816_INTEGER);
constraint bool2int(aux10823_BOOL,aux10823_INTEGER);
constraint bool2int(aux10829_BOOL,aux10829_INTEGER);
constraint bool2int(aux10835_BOOL,aux10835_INTEGER);
constraint bool2int(aux10841_BOOL,aux10841_INTEGER);
constraint bool2int(aux10847_BOOL,aux10847_INTEGER);
constraint bool2int(aux10853_BOOL,aux10853_INTEGER);
constraint bool2int(aux10859_BOOL,aux10859_INTEGER);
constraint bool2int(aux10865_BOOL,aux10865_INTEGER);
constraint bool2int(aux10871_BOOL,aux10871_INTEGER);
constraint bool2int(aux10877_BOOL,aux10877_INTEGER);
constraint bool2int(aux10883_BOOL,aux10883_INTEGER);
constraint bool2int(aux10889_BOOL,aux10889_INTEGER);
constraint bool2int(aux10895_BOOL,aux10895_INTEGER);
constraint bool2int(aux10901_BOOL,aux10901_INTEGER);
constraint bool2int(aux10907_BOOL,aux10907_INTEGER);
constraint bool2int(aux10913_BOOL,aux10913_INTEGER);
constraint bool2int(aux10919_BOOL,aux10919_INTEGER);
constraint bool2int(aux10925_BOOL,aux10925_INTEGER);
constraint bool2int(aux10931_BOOL,aux10931_INTEGER);
constraint bool2int(aux10935_BOOL,aux10935_INTEGER);
constraint bool2int(aux10942_BOOL,aux10942_INTEGER);
constraint bool2int(aux10948_BOOL,aux10948_INTEGER);
constraint bool2int(aux10954_BOOL,aux10954_INTEGER);
constraint bool2int(aux10960_BOOL,aux10960_INTEGER);
constraint bool2int(aux10966_BOOL,aux10966_INTEGER);
constraint bool2int(aux10972_BOOL,aux10972_INTEGER);
constraint bool2int(aux10978_BOOL,aux10978_INTEGER);
constraint bool2int(aux10984_BOOL,aux10984_INTEGER);
constraint bool2int(aux10990_BOOL,aux10990_INTEGER);
constraint bool2int(aux10996_BOOL,aux10996_INTEGER);
constraint bool2int(aux11002_BOOL,aux11002_INTEGER);
constraint bool2int(aux11008_BOOL,aux11008_INTEGER);
constraint bool2int(aux11014_BOOL,aux11014_INTEGER);
constraint bool2int(aux11020_BOOL,aux11020_INTEGER);
constraint bool2int(aux11026_BOOL,aux11026_INTEGER);
constraint bool2int(aux11032_BOOL,aux11032_INTEGER);
constraint bool2int(aux11038_BOOL,aux11038_INTEGER);
constraint bool2int(aux11044_BOOL,aux11044_INTEGER);
constraint bool2int(aux11050_BOOL,aux11050_INTEGER);
constraint bool2int(aux11054_BOOL,aux11054_INTEGER);
constraint bool2int(aux11061_BOOL,aux11061_INTEGER);
constraint bool2int(aux11067_BOOL,aux11067_INTEGER);
constraint bool2int(aux11073_BOOL,aux11073_INTEGER);
constraint bool2int(aux11079_BOOL,aux11079_INTEGER);
constraint bool2int(aux11085_BOOL,aux11085_INTEGER);
constraint bool2int(aux11091_BOOL,aux11091_INTEGER);
constraint bool2int(aux11097_BOOL,aux11097_INTEGER);
constraint bool2int(aux11103_BOOL,aux11103_INTEGER);
constraint bool2int(aux11109_BOOL,aux11109_INTEGER);
constraint bool2int(aux11115_BOOL,aux11115_INTEGER);
constraint bool2int(aux11121_BOOL,aux11121_INTEGER);
constraint bool2int(aux11127_BOOL,aux11127_INTEGER);
constraint bool2int(aux11133_BOOL,aux11133_INTEGER);
constraint bool2int(aux11139_BOOL,aux11139_INTEGER);
constraint bool2int(aux11145_BOOL,aux11145_INTEGER);
constraint bool2int(aux11151_BOOL,aux11151_INTEGER);
constraint bool2int(aux11157_BOOL,aux11157_INTEGER);
constraint bool2int(aux11163_BOOL,aux11163_INTEGER);
constraint bool2int(aux11169_BOOL,aux11169_INTEGER);
constraint bool2int(aux11173_BOOL,aux11173_INTEGER);
constraint bool2int(aux11180_BOOL,aux11180_INTEGER);
constraint bool2int(aux11186_BOOL,aux11186_INTEGER);
constraint bool2int(aux11192_BOOL,aux11192_INTEGER);
constraint bool2int(aux11198_BOOL,aux11198_INTEGER);
constraint bool2int(aux11204_BOOL,aux11204_INTEGER);
constraint bool2int(aux11210_BOOL,aux11210_INTEGER);
constraint bool2int(aux11216_BOOL,aux11216_INTEGER);
constraint bool2int(aux11222_BOOL,aux11222_INTEGER);
constraint bool2int(aux11228_BOOL,aux11228_INTEGER);
constraint bool2int(aux11234_BOOL,aux11234_INTEGER);
constraint bool2int(aux11240_BOOL,aux11240_INTEGER);
constraint bool2int(aux11246_BOOL,aux11246_INTEGER);
constraint bool2int(aux11252_BOOL,aux11252_INTEGER);
constraint bool2int(aux11258_BOOL,aux11258_INTEGER);
constraint bool2int(aux11264_BOOL,aux11264_INTEGER);
constraint bool2int(aux11270_BOOL,aux11270_INTEGER);
constraint bool2int(aux11276_BOOL,aux11276_INTEGER);
constraint bool2int(aux11282_BOOL,aux11282_INTEGER);
constraint bool2int(aux11288_BOOL,aux11288_INTEGER);
constraint bool2int(aux11292_BOOL,aux11292_INTEGER);
constraint bool2int(aux11299_BOOL,aux11299_INTEGER);
constraint bool2int(aux11305_BOOL,aux11305_INTEGER);
constraint bool2int(aux11311_BOOL,aux11311_INTEGER);
constraint bool2int(aux11317_BOOL,aux11317_INTEGER);
constraint bool2int(aux11323_BOOL,aux11323_INTEGER);
constraint bool2int(aux11329_BOOL,aux11329_INTEGER);
constraint bool2int(aux11335_BOOL,aux11335_INTEGER);
constraint bool2int(aux11341_BOOL,aux11341_INTEGER);
constraint bool2int(aux11347_BOOL,aux11347_INTEGER);
constraint bool2int(aux11353_BOOL,aux11353_INTEGER);
constraint bool2int(aux11359_BOOL,aux11359_INTEGER);
constraint bool2int(aux11365_BOOL,aux11365_INTEGER);
constraint bool2int(aux11371_BOOL,aux11371_INTEGER);
constraint bool2int(aux11377_BOOL,aux11377_INTEGER);
constraint bool2int(aux11383_BOOL,aux11383_INTEGER);
constraint bool2int(aux11389_BOOL,aux11389_INTEGER);
constraint bool2int(aux11395_BOOL,aux11395_INTEGER);
constraint bool2int(aux11401_BOOL,aux11401_INTEGER);
constraint bool2int(aux11407_BOOL,aux11407_INTEGER);
constraint bool2int(aux11411_BOOL,aux11411_INTEGER);
constraint bool2int(aux11418_BOOL,aux11418_INTEGER);
constraint bool2int(aux11424_BOOL,aux11424_INTEGER);
constraint bool2int(aux11430_BOOL,aux11430_INTEGER);
constraint bool2int(aux11436_BOOL,aux11436_INTEGER);
constraint bool2int(aux11442_BOOL,aux11442_INTEGER);
constraint bool2int(aux11448_BOOL,aux11448_INTEGER);
constraint bool2int(aux11454_BOOL,aux11454_INTEGER);
constraint bool2int(aux11460_BOOL,aux11460_INTEGER);
constraint bool2int(aux11466_BOOL,aux11466_INTEGER);
constraint bool2int(aux11472_BOOL,aux11472_INTEGER);
constraint bool2int(aux11478_BOOL,aux11478_INTEGER);
constraint bool2int(aux11484_BOOL,aux11484_INTEGER);
constraint bool2int(aux11490_BOOL,aux11490_INTEGER);
constraint bool2int(aux11496_BOOL,aux11496_INTEGER);
constraint bool2int(aux11502_BOOL,aux11502_INTEGER);
constraint bool2int(aux11508_BOOL,aux11508_INTEGER);
constraint bool2int(aux11514_BOOL,aux11514_INTEGER);
constraint bool2int(aux11520_BOOL,aux11520_INTEGER);
constraint bool2int(aux11526_BOOL,aux11526_INTEGER);
constraint bool2int(aux11530_BOOL,aux11530_INTEGER);
constraint bool2int(aux11537_BOOL,aux11537_INTEGER);
constraint bool2int(aux11543_BOOL,aux11543_INTEGER);
constraint bool2int(aux11549_BOOL,aux11549_INTEGER);
constraint bool2int(aux11555_BOOL,aux11555_INTEGER);
constraint bool2int(aux11561_BOOL,aux11561_INTEGER);
constraint bool2int(aux11567_BOOL,aux11567_INTEGER);
constraint bool2int(aux11573_BOOL,aux11573_INTEGER);
constraint bool2int(aux11579_BOOL,aux11579_INTEGER);
constraint bool2int(aux11585_BOOL,aux11585_INTEGER);
constraint bool2int(aux11591_BOOL,aux11591_INTEGER);
constraint bool2int(aux11597_BOOL,aux11597_INTEGER);
constraint bool2int(aux11603_BOOL,aux11603_INTEGER);
constraint bool2int(aux11609_BOOL,aux11609_INTEGER);
constraint bool2int(aux11615_BOOL,aux11615_INTEGER);
constraint bool2int(aux11621_BOOL,aux11621_INTEGER);
constraint bool2int(aux11627_BOOL,aux11627_INTEGER);
constraint bool2int(aux11633_BOOL,aux11633_INTEGER);
constraint bool2int(aux11639_BOOL,aux11639_INTEGER);
constraint bool2int(aux11645_BOOL,aux11645_INTEGER);
constraint bool2int(aux11649_BOOL,aux11649_INTEGER);
constraint bool2int(aux11656_BOOL,aux11656_INTEGER);
constraint bool2int(aux11662_BOOL,aux11662_INTEGER);
constraint bool2int(aux11668_BOOL,aux11668_INTEGER);
constraint bool2int(aux11674_BOOL,aux11674_INTEGER);
constraint bool2int(aux11680_BOOL,aux11680_INTEGER);
constraint bool2int(aux11686_BOOL,aux11686_INTEGER);
constraint bool2int(aux11692_BOOL,aux11692_INTEGER);
constraint bool2int(aux11698_BOOL,aux11698_INTEGER);
constraint bool2int(aux11704_BOOL,aux11704_INTEGER);
constraint bool2int(aux11710_BOOL,aux11710_INTEGER);
constraint bool2int(aux11716_BOOL,aux11716_INTEGER);
constraint bool2int(aux11722_BOOL,aux11722_INTEGER);
constraint bool2int(aux11728_BOOL,aux11728_INTEGER);
constraint bool2int(aux11734_BOOL,aux11734_INTEGER);
constraint bool2int(aux11740_BOOL,aux11740_INTEGER);
constraint bool2int(aux11746_BOOL,aux11746_INTEGER);
constraint bool2int(aux11752_BOOL,aux11752_INTEGER);
constraint bool2int(aux11758_BOOL,aux11758_INTEGER);
constraint bool2int(aux11764_BOOL,aux11764_INTEGER);
constraint bool2int(aux11768_BOOL,aux11768_INTEGER);
constraint bool2int(aux11775_BOOL,aux11775_INTEGER);
constraint bool2int(aux11781_BOOL,aux11781_INTEGER);
constraint bool2int(aux11787_BOOL,aux11787_INTEGER);
constraint bool2int(aux11793_BOOL,aux11793_INTEGER);
constraint bool2int(aux11799_BOOL,aux11799_INTEGER);
constraint bool2int(aux11805_BOOL,aux11805_INTEGER);
constraint bool2int(aux11811_BOOL,aux11811_INTEGER);
constraint bool2int(aux11817_BOOL,aux11817_INTEGER);
constraint bool2int(aux11823_BOOL,aux11823_INTEGER);
constraint bool2int(aux11829_BOOL,aux11829_INTEGER);
constraint bool2int(aux11835_BOOL,aux11835_INTEGER);
constraint bool2int(aux11841_BOOL,aux11841_INTEGER);
constraint bool2int(aux11847_BOOL,aux11847_INTEGER);
constraint bool2int(aux11853_BOOL,aux11853_INTEGER);
constraint bool2int(aux11859_BOOL,aux11859_INTEGER);
constraint bool2int(aux11865_BOOL,aux11865_INTEGER);
constraint bool2int(aux11871_BOOL,aux11871_INTEGER);
constraint bool2int(aux11877_BOOL,aux11877_INTEGER);
constraint bool2int(aux11883_BOOL,aux11883_INTEGER);
constraint bool2int(aux11887_BOOL,aux11887_INTEGER);
constraint bool2int(aux11892_BOOL,aux11892_INTEGER);
constraint bool2int(aux11898_BOOL,aux11898_INTEGER);
constraint bool2int(aux11904_BOOL,aux11904_INTEGER);
constraint bool2int(aux11910_BOOL,aux11910_INTEGER);
constraint bool2int(aux11916_BOOL,aux11916_INTEGER);
constraint bool2int(aux11922_BOOL,aux11922_INTEGER);
constraint bool2int(aux11928_BOOL,aux11928_INTEGER);
constraint bool2int(aux11934_BOOL,aux11934_INTEGER);
constraint bool2int(aux11940_BOOL,aux11940_INTEGER);
constraint bool2int(aux11946_BOOL,aux11946_INTEGER);
constraint bool2int(aux11952_BOOL,aux11952_INTEGER);
constraint bool2int(aux11958_BOOL,aux11958_INTEGER);
constraint bool2int(aux11964_BOOL,aux11964_INTEGER);
constraint bool2int(aux11970_BOOL,aux11970_INTEGER);
constraint bool2int(aux11976_BOOL,aux11976_INTEGER);
constraint bool2int(aux11982_BOOL,aux11982_INTEGER);
constraint bool2int(aux11988_BOOL,aux11988_INTEGER);
constraint bool2int(aux11994_BOOL,aux11994_INTEGER);
constraint bool2int(aux12000_BOOL,aux12000_INTEGER);
constraint bool2int(aux12006_BOOL,aux12006_INTEGER);
constraint bool2int(aux12013_BOOL,aux12013_INTEGER);
constraint bool2int(aux12019_BOOL,aux12019_INTEGER);
constraint bool2int(aux12025_BOOL,aux12025_INTEGER);
constraint bool2int(aux12031_BOOL,aux12031_INTEGER);
constraint bool2int(aux12037_BOOL,aux12037_INTEGER);
constraint bool2int(aux12043_BOOL,aux12043_INTEGER);
constraint bool2int(aux12049_BOOL,aux12049_INTEGER);
constraint bool2int(aux12055_BOOL,aux12055_INTEGER);
constraint bool2int(aux12061_BOOL,aux12061_INTEGER);
constraint bool2int(aux12067_BOOL,aux12067_INTEGER);
constraint bool2int(aux12073_BOOL,aux12073_INTEGER);
constraint bool2int(aux12079_BOOL,aux12079_INTEGER);
constraint bool2int(aux12085_BOOL,aux12085_INTEGER);
constraint bool2int(aux12091_BOOL,aux12091_INTEGER);
constraint bool2int(aux12097_BOOL,aux12097_INTEGER);
constraint bool2int(aux12103_BOOL,aux12103_INTEGER);
constraint bool2int(aux12109_BOOL,aux12109_INTEGER);
constraint bool2int(aux12115_BOOL,aux12115_INTEGER);
constraint bool2int(aux12121_BOOL,aux12121_INTEGER);
constraint bool2int(aux12125_BOOL,aux12125_INTEGER);
constraint bool2int(aux12132_BOOL,aux12132_INTEGER);
constraint bool2int(aux12138_BOOL,aux12138_INTEGER);
constraint bool2int(aux12144_BOOL,aux12144_INTEGER);
constraint bool2int(aux12150_BOOL,aux12150_INTEGER);
constraint bool2int(aux12156_BOOL,aux12156_INTEGER);
constraint bool2int(aux12162_BOOL,aux12162_INTEGER);
constraint bool2int(aux12168_BOOL,aux12168_INTEGER);
constraint bool2int(aux12174_BOOL,aux12174_INTEGER);
constraint bool2int(aux12180_BOOL,aux12180_INTEGER);
constraint bool2int(aux12186_BOOL,aux12186_INTEGER);
constraint bool2int(aux12192_BOOL,aux12192_INTEGER);
constraint bool2int(aux12198_BOOL,aux12198_INTEGER);
constraint bool2int(aux12204_BOOL,aux12204_INTEGER);
constraint bool2int(aux12210_BOOL,aux12210_INTEGER);
constraint bool2int(aux12216_BOOL,aux12216_INTEGER);
constraint bool2int(aux12222_BOOL,aux12222_INTEGER);
constraint bool2int(aux12228_BOOL,aux12228_INTEGER);
constraint bool2int(aux12234_BOOL,aux12234_INTEGER);
constraint bool2int(aux12240_BOOL,aux12240_INTEGER);
constraint bool2int(aux12244_BOOL,aux12244_INTEGER);
constraint bool2int(aux12251_BOOL,aux12251_INTEGER);
constraint bool2int(aux12257_BOOL,aux12257_INTEGER);
constraint bool2int(aux12263_BOOL,aux12263_INTEGER);
constraint bool2int(aux12269_BOOL,aux12269_INTEGER);
constraint bool2int(aux12275_BOOL,aux12275_INTEGER);
constraint bool2int(aux12281_BOOL,aux12281_INTEGER);
constraint bool2int(aux12287_BOOL,aux12287_INTEGER);
constraint bool2int(aux12293_BOOL,aux12293_INTEGER);
constraint bool2int(aux12299_BOOL,aux12299_INTEGER);
constraint bool2int(aux12305_BOOL,aux12305_INTEGER);
constraint bool2int(aux12311_BOOL,aux12311_INTEGER);
constraint bool2int(aux12317_BOOL,aux12317_INTEGER);
constraint bool2int(aux12323_BOOL,aux12323_INTEGER);
constraint bool2int(aux12329_BOOL,aux12329_INTEGER);
constraint bool2int(aux12335_BOOL,aux12335_INTEGER);
constraint bool2int(aux12341_BOOL,aux12341_INTEGER);
constraint bool2int(aux12347_BOOL,aux12347_INTEGER);
constraint bool2int(aux12353_BOOL,aux12353_INTEGER);
constraint bool2int(aux12359_BOOL,aux12359_INTEGER);
constraint bool2int(aux12363_BOOL,aux12363_INTEGER);
constraint bool2int(aux12370_BOOL,aux12370_INTEGER);
constraint bool2int(aux12376_BOOL,aux12376_INTEGER);
constraint bool2int(aux12382_BOOL,aux12382_INTEGER);
constraint bool2int(aux12388_BOOL,aux12388_INTEGER);
constraint bool2int(aux12394_BOOL,aux12394_INTEGER);
constraint bool2int(aux12400_BOOL,aux12400_INTEGER);
constraint bool2int(aux12406_BOOL,aux12406_INTEGER);
constraint bool2int(aux12412_BOOL,aux12412_INTEGER);
constraint bool2int(aux12418_BOOL,aux12418_INTEGER);
constraint bool2int(aux12424_BOOL,aux12424_INTEGER);
constraint bool2int(aux12430_BOOL,aux12430_INTEGER);
constraint bool2int(aux12436_BOOL,aux12436_INTEGER);
constraint bool2int(aux12442_BOOL,aux12442_INTEGER);
constraint bool2int(aux12448_BOOL,aux12448_INTEGER);
constraint bool2int(aux12454_BOOL,aux12454_INTEGER);
constraint bool2int(aux12460_BOOL,aux12460_INTEGER);
constraint bool2int(aux12466_BOOL,aux12466_INTEGER);
constraint bool2int(aux12472_BOOL,aux12472_INTEGER);
constraint bool2int(aux12478_BOOL,aux12478_INTEGER);
constraint bool2int(aux12482_BOOL,aux12482_INTEGER);
constraint bool2int(aux12491_BOOL,aux12491_INTEGER);
constraint bool2int(aux12497_BOOL,aux12497_INTEGER);
constraint bool2int(aux12503_BOOL,aux12503_INTEGER);
constraint bool2int(aux12509_BOOL,aux12509_INTEGER);
constraint bool2int(aux12515_BOOL,aux12515_INTEGER);
constraint bool2int(aux12521_BOOL,aux12521_INTEGER);
constraint bool2int(aux12527_BOOL,aux12527_INTEGER);
constraint bool2int(aux12533_BOOL,aux12533_INTEGER);
constraint bool2int(aux12539_BOOL,aux12539_INTEGER);
constraint bool2int(aux12545_BOOL,aux12545_INTEGER);
constraint bool2int(aux12551_BOOL,aux12551_INTEGER);
constraint bool2int(aux12557_BOOL,aux12557_INTEGER);
constraint bool2int(aux12563_BOOL,aux12563_INTEGER);
constraint bool2int(aux12569_BOOL,aux12569_INTEGER);
constraint bool2int(aux12575_BOOL,aux12575_INTEGER);
constraint bool2int(aux12581_BOOL,aux12581_INTEGER);
constraint bool2int(aux12587_BOOL,aux12587_INTEGER);
constraint bool2int(aux12593_BOOL,aux12593_INTEGER);
constraint bool2int(aux12599_BOOL,aux12599_INTEGER);
constraint bool2int(aux12603_BOOL,aux12603_INTEGER);
constraint bool2int(aux12610_BOOL,aux12610_INTEGER);
constraint bool2int(aux12616_BOOL,aux12616_INTEGER);
constraint bool2int(aux12622_BOOL,aux12622_INTEGER);
constraint bool2int(aux12628_BOOL,aux12628_INTEGER);
constraint bool2int(aux12634_BOOL,aux12634_INTEGER);
constraint bool2int(aux12640_BOOL,aux12640_INTEGER);
constraint bool2int(aux12646_BOOL,aux12646_INTEGER);
constraint bool2int(aux12652_BOOL,aux12652_INTEGER);
constraint bool2int(aux12658_BOOL,aux12658_INTEGER);
constraint bool2int(aux12664_BOOL,aux12664_INTEGER);
constraint bool2int(aux12670_BOOL,aux12670_INTEGER);
constraint bool2int(aux12676_BOOL,aux12676_INTEGER);
constraint bool2int(aux12682_BOOL,aux12682_INTEGER);
constraint bool2int(aux12688_BOOL,aux12688_INTEGER);
constraint bool2int(aux12694_BOOL,aux12694_INTEGER);
constraint bool2int(aux12700_BOOL,aux12700_INTEGER);
constraint bool2int(aux12706_BOOL,aux12706_INTEGER);
constraint bool2int(aux12712_BOOL,aux12712_INTEGER);
constraint bool2int(aux12718_BOOL,aux12718_INTEGER);
constraint bool2int(aux12722_BOOL,aux12722_INTEGER);
constraint bool2int(aux12729_BOOL,aux12729_INTEGER);
constraint bool2int(aux12735_BOOL,aux12735_INTEGER);
constraint bool2int(aux12741_BOOL,aux12741_INTEGER);
constraint bool2int(aux12747_BOOL,aux12747_INTEGER);
constraint bool2int(aux12753_BOOL,aux12753_INTEGER);
constraint bool2int(aux12759_BOOL,aux12759_INTEGER);
constraint bool2int(aux12765_BOOL,aux12765_INTEGER);
constraint bool2int(aux12771_BOOL,aux12771_INTEGER);
constraint bool2int(aux12777_BOOL,aux12777_INTEGER);
constraint bool2int(aux12783_BOOL,aux12783_INTEGER);
constraint bool2int(aux12789_BOOL,aux12789_INTEGER);
constraint bool2int(aux12795_BOOL,aux12795_INTEGER);
constraint bool2int(aux12801_BOOL,aux12801_INTEGER);
constraint bool2int(aux12807_BOOL,aux12807_INTEGER);
constraint bool2int(aux12813_BOOL,aux12813_INTEGER);
constraint bool2int(aux12819_BOOL,aux12819_INTEGER);
constraint bool2int(aux12825_BOOL,aux12825_INTEGER);
constraint bool2int(aux12831_BOOL,aux12831_INTEGER);
constraint bool2int(aux12837_BOOL,aux12837_INTEGER);
constraint bool2int(aux12841_BOOL,aux12841_INTEGER);
constraint bool2int(aux12848_BOOL,aux12848_INTEGER);
constraint bool2int(aux12854_BOOL,aux12854_INTEGER);
constraint bool2int(aux12860_BOOL,aux12860_INTEGER);
constraint bool2int(aux12866_BOOL,aux12866_INTEGER);
constraint bool2int(aux12872_BOOL,aux12872_INTEGER);
constraint bool2int(aux12878_BOOL,aux12878_INTEGER);
constraint bool2int(aux12884_BOOL,aux12884_INTEGER);
constraint bool2int(aux12890_BOOL,aux12890_INTEGER);
constraint bool2int(aux12896_BOOL,aux12896_INTEGER);
constraint bool2int(aux12902_BOOL,aux12902_INTEGER);
constraint bool2int(aux12908_BOOL,aux12908_INTEGER);
constraint bool2int(aux12914_BOOL,aux12914_INTEGER);
constraint bool2int(aux12920_BOOL,aux12920_INTEGER);
constraint bool2int(aux12926_BOOL,aux12926_INTEGER);
constraint bool2int(aux12932_BOOL,aux12932_INTEGER);
constraint bool2int(aux12938_BOOL,aux12938_INTEGER);
constraint bool2int(aux12944_BOOL,aux12944_INTEGER);
constraint bool2int(aux12950_BOOL,aux12950_INTEGER);
constraint bool2int(aux12956_BOOL,aux12956_INTEGER);
constraint bool2int(aux12960_BOOL,aux12960_INTEGER);
constraint bool2int(aux12967_BOOL,aux12967_INTEGER);
constraint bool2int(aux12973_BOOL,aux12973_INTEGER);
constraint bool2int(aux12979_BOOL,aux12979_INTEGER);
constraint bool2int(aux12985_BOOL,aux12985_INTEGER);
constraint bool2int(aux12991_BOOL,aux12991_INTEGER);
constraint bool2int(aux12997_BOOL,aux12997_INTEGER);
constraint bool2int(aux13003_BOOL,aux13003_INTEGER);
constraint bool2int(aux13009_BOOL,aux13009_INTEGER);
constraint bool2int(aux13015_BOOL,aux13015_INTEGER);
constraint bool2int(aux13021_BOOL,aux13021_INTEGER);
constraint bool2int(aux13027_BOOL,aux13027_INTEGER);
constraint bool2int(aux13033_BOOL,aux13033_INTEGER);
constraint bool2int(aux13039_BOOL,aux13039_INTEGER);
constraint bool2int(aux13045_BOOL,aux13045_INTEGER);
constraint bool2int(aux13051_BOOL,aux13051_INTEGER);
constraint bool2int(aux13057_BOOL,aux13057_INTEGER);
constraint bool2int(aux13063_BOOL,aux13063_INTEGER);
constraint bool2int(aux13069_BOOL,aux13069_INTEGER);
constraint bool2int(aux13075_BOOL,aux13075_INTEGER);
constraint bool2int(aux13079_BOOL,aux13079_INTEGER);
constraint bool2int(aux13086_BOOL,aux13086_INTEGER);
constraint bool2int(aux13092_BOOL,aux13092_INTEGER);
constraint bool2int(aux13098_BOOL,aux13098_INTEGER);
constraint bool2int(aux13104_BOOL,aux13104_INTEGER);
constraint bool2int(aux13110_BOOL,aux13110_INTEGER);
constraint bool2int(aux13116_BOOL,aux13116_INTEGER);
constraint bool2int(aux13122_BOOL,aux13122_INTEGER);
constraint bool2int(aux13128_BOOL,aux13128_INTEGER);
constraint bool2int(aux13134_BOOL,aux13134_INTEGER);
constraint bool2int(aux13140_BOOL,aux13140_INTEGER);
constraint bool2int(aux13146_BOOL,aux13146_INTEGER);
constraint bool2int(aux13152_BOOL,aux13152_INTEGER);
constraint bool2int(aux13158_BOOL,aux13158_INTEGER);
constraint bool2int(aux13164_BOOL,aux13164_INTEGER);
constraint bool2int(aux13170_BOOL,aux13170_INTEGER);
constraint bool2int(aux13176_BOOL,aux13176_INTEGER);
constraint bool2int(aux13182_BOOL,aux13182_INTEGER);
constraint bool2int(aux13188_BOOL,aux13188_INTEGER);
constraint bool2int(aux13194_BOOL,aux13194_INTEGER);
constraint bool2int(aux13198_BOOL,aux13198_INTEGER);
constraint bool2int(aux13205_BOOL,aux13205_INTEGER);
constraint bool2int(aux13211_BOOL,aux13211_INTEGER);
constraint bool2int(aux13217_BOOL,aux13217_INTEGER);
constraint bool2int(aux13223_BOOL,aux13223_INTEGER);
constraint bool2int(aux13229_BOOL,aux13229_INTEGER);
constraint bool2int(aux13235_BOOL,aux13235_INTEGER);
constraint bool2int(aux13241_BOOL,aux13241_INTEGER);
constraint bool2int(aux13247_BOOL,aux13247_INTEGER);
constraint bool2int(aux13253_BOOL,aux13253_INTEGER);
constraint bool2int(aux13259_BOOL,aux13259_INTEGER);
constraint bool2int(aux13265_BOOL,aux13265_INTEGER);
constraint bool2int(aux13271_BOOL,aux13271_INTEGER);
constraint bool2int(aux13277_BOOL,aux13277_INTEGER);
constraint bool2int(aux13283_BOOL,aux13283_INTEGER);
constraint bool2int(aux13289_BOOL,aux13289_INTEGER);
constraint bool2int(aux13295_BOOL,aux13295_INTEGER);
constraint bool2int(aux13301_BOOL,aux13301_INTEGER);
constraint bool2int(aux13307_BOOL,aux13307_INTEGER);
constraint bool2int(aux13313_BOOL,aux13313_INTEGER);
constraint bool2int(aux13317_BOOL,aux13317_INTEGER);
constraint bool2int(aux13324_BOOL,aux13324_INTEGER);
constraint bool2int(aux13330_BOOL,aux13330_INTEGER);
constraint bool2int(aux13336_BOOL,aux13336_INTEGER);
constraint bool2int(aux13342_BOOL,aux13342_INTEGER);
constraint bool2int(aux13348_BOOL,aux13348_INTEGER);
constraint bool2int(aux13354_BOOL,aux13354_INTEGER);
constraint bool2int(aux13360_BOOL,aux13360_INTEGER);
constraint bool2int(aux13366_BOOL,aux13366_INTEGER);
constraint bool2int(aux13372_BOOL,aux13372_INTEGER);
constraint bool2int(aux13378_BOOL,aux13378_INTEGER);
constraint bool2int(aux13384_BOOL,aux13384_INTEGER);
constraint bool2int(aux13390_BOOL,aux13390_INTEGER);
constraint bool2int(aux13396_BOOL,aux13396_INTEGER);
constraint bool2int(aux13402_BOOL,aux13402_INTEGER);
constraint bool2int(aux13408_BOOL,aux13408_INTEGER);
constraint bool2int(aux13414_BOOL,aux13414_INTEGER);
constraint bool2int(aux13420_BOOL,aux13420_INTEGER);
constraint bool2int(aux13426_BOOL,aux13426_INTEGER);
constraint bool2int(aux13432_BOOL,aux13432_INTEGER);
constraint bool2int(aux13436_BOOL,aux13436_INTEGER);
constraint bool2int(aux13443_BOOL,aux13443_INTEGER);
constraint bool2int(aux13449_BOOL,aux13449_INTEGER);
constraint bool2int(aux13455_BOOL,aux13455_INTEGER);
constraint bool2int(aux13461_BOOL,aux13461_INTEGER);
constraint bool2int(aux13467_BOOL,aux13467_INTEGER);
constraint bool2int(aux13473_BOOL,aux13473_INTEGER);
constraint bool2int(aux13479_BOOL,aux13479_INTEGER);
constraint bool2int(aux13485_BOOL,aux13485_INTEGER);
constraint bool2int(aux13491_BOOL,aux13491_INTEGER);
constraint bool2int(aux13497_BOOL,aux13497_INTEGER);
constraint bool2int(aux13503_BOOL,aux13503_INTEGER);
constraint bool2int(aux13509_BOOL,aux13509_INTEGER);
constraint bool2int(aux13515_BOOL,aux13515_INTEGER);
constraint bool2int(aux13521_BOOL,aux13521_INTEGER);
constraint bool2int(aux13527_BOOL,aux13527_INTEGER);
constraint bool2int(aux13533_BOOL,aux13533_INTEGER);
constraint bool2int(aux13539_BOOL,aux13539_INTEGER);
constraint bool2int(aux13545_BOOL,aux13545_INTEGER);
constraint bool2int(aux13551_BOOL,aux13551_INTEGER);
constraint bool2int(aux13555_BOOL,aux13555_INTEGER);
constraint bool2int(aux13562_BOOL,aux13562_INTEGER);
constraint bool2int(aux13568_BOOL,aux13568_INTEGER);
constraint bool2int(aux13574_BOOL,aux13574_INTEGER);
constraint bool2int(aux13580_BOOL,aux13580_INTEGER);
constraint bool2int(aux13586_BOOL,aux13586_INTEGER);
constraint bool2int(aux13592_BOOL,aux13592_INTEGER);
constraint bool2int(aux13598_BOOL,aux13598_INTEGER);
constraint bool2int(aux13604_BOOL,aux13604_INTEGER);
constraint bool2int(aux13610_BOOL,aux13610_INTEGER);
constraint bool2int(aux13616_BOOL,aux13616_INTEGER);
constraint bool2int(aux13622_BOOL,aux13622_INTEGER);
constraint bool2int(aux13628_BOOL,aux13628_INTEGER);
constraint bool2int(aux13634_BOOL,aux13634_INTEGER);
constraint bool2int(aux13640_BOOL,aux13640_INTEGER);
constraint bool2int(aux13646_BOOL,aux13646_INTEGER);
constraint bool2int(aux13652_BOOL,aux13652_INTEGER);
constraint bool2int(aux13658_BOOL,aux13658_INTEGER);
constraint bool2int(aux13664_BOOL,aux13664_INTEGER);
constraint bool2int(aux13670_BOOL,aux13670_INTEGER);
constraint bool2int(aux13674_BOOL,aux13674_INTEGER);
constraint bool2int(aux13681_BOOL,aux13681_INTEGER);
constraint bool2int(aux13687_BOOL,aux13687_INTEGER);
constraint bool2int(aux13693_BOOL,aux13693_INTEGER);
constraint bool2int(aux13699_BOOL,aux13699_INTEGER);
constraint bool2int(aux13705_BOOL,aux13705_INTEGER);
constraint bool2int(aux13711_BOOL,aux13711_INTEGER);
constraint bool2int(aux13717_BOOL,aux13717_INTEGER);
constraint bool2int(aux13723_BOOL,aux13723_INTEGER);
constraint bool2int(aux13729_BOOL,aux13729_INTEGER);
constraint bool2int(aux13735_BOOL,aux13735_INTEGER);
constraint bool2int(aux13741_BOOL,aux13741_INTEGER);
constraint bool2int(aux13747_BOOL,aux13747_INTEGER);
constraint bool2int(aux13753_BOOL,aux13753_INTEGER);
constraint bool2int(aux13759_BOOL,aux13759_INTEGER);
constraint bool2int(aux13765_BOOL,aux13765_INTEGER);
constraint bool2int(aux13771_BOOL,aux13771_INTEGER);
constraint bool2int(aux13777_BOOL,aux13777_INTEGER);
constraint bool2int(aux13783_BOOL,aux13783_INTEGER);
constraint bool2int(aux13789_BOOL,aux13789_INTEGER);
constraint bool2int(aux13793_BOOL,aux13793_INTEGER);
constraint bool2int(aux13800_BOOL,aux13800_INTEGER);
constraint bool2int(aux13806_BOOL,aux13806_INTEGER);
constraint bool2int(aux13812_BOOL,aux13812_INTEGER);
constraint bool2int(aux13818_BOOL,aux13818_INTEGER);
constraint bool2int(aux13824_BOOL,aux13824_INTEGER);
constraint bool2int(aux13830_BOOL,aux13830_INTEGER);
constraint bool2int(aux13836_BOOL,aux13836_INTEGER);
constraint bool2int(aux13842_BOOL,aux13842_INTEGER);
constraint bool2int(aux13848_BOOL,aux13848_INTEGER);
constraint bool2int(aux13854_BOOL,aux13854_INTEGER);
constraint bool2int(aux13860_BOOL,aux13860_INTEGER);
constraint bool2int(aux13866_BOOL,aux13866_INTEGER);
constraint bool2int(aux13872_BOOL,aux13872_INTEGER);
constraint bool2int(aux13878_BOOL,aux13878_INTEGER);
constraint bool2int(aux13884_BOOL,aux13884_INTEGER);
constraint bool2int(aux13890_BOOL,aux13890_INTEGER);
constraint bool2int(aux13896_BOOL,aux13896_INTEGER);
constraint bool2int(aux13902_BOOL,aux13902_INTEGER);
constraint bool2int(aux13908_BOOL,aux13908_INTEGER);
constraint bool2int(aux13912_BOOL,aux13912_INTEGER);
constraint bool2int(aux13919_BOOL,aux13919_INTEGER);
constraint bool2int(aux13925_BOOL,aux13925_INTEGER);
constraint bool2int(aux13931_BOOL,aux13931_INTEGER);
constraint bool2int(aux13937_BOOL,aux13937_INTEGER);
constraint bool2int(aux13943_BOOL,aux13943_INTEGER);
constraint bool2int(aux13949_BOOL,aux13949_INTEGER);
constraint bool2int(aux13955_BOOL,aux13955_INTEGER);
constraint bool2int(aux13961_BOOL,aux13961_INTEGER);
constraint bool2int(aux13967_BOOL,aux13967_INTEGER);
constraint bool2int(aux13973_BOOL,aux13973_INTEGER);
constraint bool2int(aux13979_BOOL,aux13979_INTEGER);
constraint bool2int(aux13985_BOOL,aux13985_INTEGER);
constraint bool2int(aux13991_BOOL,aux13991_INTEGER);
constraint bool2int(aux13997_BOOL,aux13997_INTEGER);
constraint bool2int(aux14003_BOOL,aux14003_INTEGER);
constraint bool2int(aux14009_BOOL,aux14009_INTEGER);
constraint bool2int(aux14015_BOOL,aux14015_INTEGER);
constraint bool2int(aux14021_BOOL,aux14021_INTEGER);
constraint bool2int(aux14027_BOOL,aux14027_INTEGER);
constraint bool2int(aux14031_BOOL,aux14031_INTEGER);
constraint bool2int(aux14038_BOOL,aux14038_INTEGER);
constraint bool2int(aux14044_BOOL,aux14044_INTEGER);
constraint bool2int(aux14050_BOOL,aux14050_INTEGER);
constraint bool2int(aux14056_BOOL,aux14056_INTEGER);
constraint bool2int(aux14062_BOOL,aux14062_INTEGER);
constraint bool2int(aux14068_BOOL,aux14068_INTEGER);
constraint bool2int(aux14074_BOOL,aux14074_INTEGER);
constraint bool2int(aux14080_BOOL,aux14080_INTEGER);
constraint bool2int(aux14086_BOOL,aux14086_INTEGER);
constraint bool2int(aux14092_BOOL,aux14092_INTEGER);
constraint bool2int(aux14098_BOOL,aux14098_INTEGER);
constraint bool2int(aux14104_BOOL,aux14104_INTEGER);
constraint bool2int(aux14110_BOOL,aux14110_INTEGER);
constraint bool2int(aux14116_BOOL,aux14116_INTEGER);
constraint bool2int(aux14122_BOOL,aux14122_INTEGER);
constraint bool2int(aux14128_BOOL,aux14128_INTEGER);
constraint bool2int(aux14134_BOOL,aux14134_INTEGER);
constraint bool2int(aux14140_BOOL,aux14140_INTEGER);
constraint bool2int(aux14146_BOOL,aux14146_INTEGER);
constraint bool2int(aux14150_BOOL,aux14150_INTEGER);
constraint bool2int(aux14157_BOOL,aux14157_INTEGER);
constraint bool2int(aux14163_BOOL,aux14163_INTEGER);
constraint bool2int(aux14169_BOOL,aux14169_INTEGER);
constraint bool2int(aux14175_BOOL,aux14175_INTEGER);
constraint bool2int(aux14181_BOOL,aux14181_INTEGER);
constraint bool2int(aux14187_BOOL,aux14187_INTEGER);
constraint bool2int(aux14193_BOOL,aux14193_INTEGER);
constraint bool2int(aux14199_BOOL,aux14199_INTEGER);
constraint bool2int(aux14205_BOOL,aux14205_INTEGER);
constraint bool2int(aux14211_BOOL,aux14211_INTEGER);
constraint bool2int(aux14217_BOOL,aux14217_INTEGER);
constraint bool2int(aux14223_BOOL,aux14223_INTEGER);
constraint bool2int(aux14229_BOOL,aux14229_INTEGER);
constraint bool2int(aux14235_BOOL,aux14235_INTEGER);
constraint bool2int(aux14241_BOOL,aux14241_INTEGER);
constraint bool2int(aux14247_BOOL,aux14247_INTEGER);
constraint bool2int(aux14253_BOOL,aux14253_INTEGER);
constraint bool2int(aux14259_BOOL,aux14259_INTEGER);
constraint bool2int(aux14265_BOOL,aux14265_INTEGER);
constraint bool2int(aux14269_BOOL,aux14269_INTEGER);
constraint bool2int(aux14276_BOOL,aux14276_INTEGER);
constraint bool2int(aux14282_BOOL,aux14282_INTEGER);
constraint bool2int(aux14288_BOOL,aux14288_INTEGER);
constraint bool2int(aux14294_BOOL,aux14294_INTEGER);
constraint bool2int(aux14300_BOOL,aux14300_INTEGER);
constraint bool2int(aux14306_BOOL,aux14306_INTEGER);
constraint bool2int(aux14312_BOOL,aux14312_INTEGER);
constraint bool2int(aux14318_BOOL,aux14318_INTEGER);
constraint bool2int(aux14324_BOOL,aux14324_INTEGER);
constraint bool2int(aux14330_BOOL,aux14330_INTEGER);
constraint bool2int(aux14336_BOOL,aux14336_INTEGER);
constraint bool2int(aux14342_BOOL,aux14342_INTEGER);
constraint bool2int(aux14348_BOOL,aux14348_INTEGER);
constraint bool2int(aux14354_BOOL,aux14354_INTEGER);
constraint bool2int(aux14360_BOOL,aux14360_INTEGER);
constraint bool2int(aux14366_BOOL,aux14366_INTEGER);
constraint bool2int(aux14372_BOOL,aux14372_INTEGER);
constraint bool2int(aux14378_BOOL,aux14378_INTEGER);
constraint bool2int(aux14384_BOOL,aux14384_INTEGER);
constraint bool2int(aux14388_BOOL,aux14388_INTEGER);
constraint bool2int(aux14395_BOOL,aux14395_INTEGER);
constraint bool2int(aux14401_BOOL,aux14401_INTEGER);
constraint bool2int(aux14407_BOOL,aux14407_INTEGER);
constraint bool2int(aux14413_BOOL,aux14413_INTEGER);
constraint bool2int(aux14419_BOOL,aux14419_INTEGER);
constraint bool2int(aux14425_BOOL,aux14425_INTEGER);
constraint bool2int(aux14431_BOOL,aux14431_INTEGER);
constraint bool2int(aux14437_BOOL,aux14437_INTEGER);
constraint bool2int(aux14443_BOOL,aux14443_INTEGER);
constraint bool2int(aux14449_BOOL,aux14449_INTEGER);
constraint bool2int(aux14455_BOOL,aux14455_INTEGER);
constraint bool2int(aux14461_BOOL,aux14461_INTEGER);
constraint bool2int(aux14467_BOOL,aux14467_INTEGER);
constraint bool2int(aux14473_BOOL,aux14473_INTEGER);
constraint bool2int(aux14479_BOOL,aux14479_INTEGER);
constraint bool2int(aux14485_BOOL,aux14485_INTEGER);
constraint bool2int(aux14491_BOOL,aux14491_INTEGER);
constraint bool2int(aux14497_BOOL,aux14497_INTEGER);
constraint bool2int(aux14503_BOOL,aux14503_INTEGER);
constraint bool2int(aux14507_BOOL,aux14507_INTEGER);
constraint bool2int(aux14514_BOOL,aux14514_INTEGER);
constraint bool2int(aux14520_BOOL,aux14520_INTEGER);
constraint bool2int(aux14526_BOOL,aux14526_INTEGER);
constraint bool2int(aux14532_BOOL,aux14532_INTEGER);
constraint bool2int(aux14538_BOOL,aux14538_INTEGER);
constraint bool2int(aux14544_BOOL,aux14544_INTEGER);
constraint bool2int(aux14550_BOOL,aux14550_INTEGER);
constraint bool2int(aux14556_BOOL,aux14556_INTEGER);
constraint bool2int(aux14562_BOOL,aux14562_INTEGER);
constraint bool2int(aux14568_BOOL,aux14568_INTEGER);
constraint bool2int(aux14574_BOOL,aux14574_INTEGER);
constraint bool2int(aux14580_BOOL,aux14580_INTEGER);
constraint bool2int(aux14586_BOOL,aux14586_INTEGER);
constraint bool2int(aux14592_BOOL,aux14592_INTEGER);
constraint bool2int(aux14598_BOOL,aux14598_INTEGER);
constraint bool2int(aux14604_BOOL,aux14604_INTEGER);
constraint bool2int(aux14610_BOOL,aux14610_INTEGER);
constraint bool2int(aux14616_BOOL,aux14616_INTEGER);
constraint bool2int(aux14622_BOOL,aux14622_INTEGER);
constraint bool2int(aux14626_BOOL,aux14626_INTEGER);
constraint bool2int(aux14633_BOOL,aux14633_INTEGER);
constraint bool2int(aux14639_BOOL,aux14639_INTEGER);
constraint bool2int(aux14645_BOOL,aux14645_INTEGER);
constraint bool2int(aux14651_BOOL,aux14651_INTEGER);
constraint bool2int(aux14657_BOOL,aux14657_INTEGER);
constraint bool2int(aux14663_BOOL,aux14663_INTEGER);
constraint bool2int(aux14669_BOOL,aux14669_INTEGER);
constraint bool2int(aux14675_BOOL,aux14675_INTEGER);
constraint bool2int(aux14681_BOOL,aux14681_INTEGER);
constraint bool2int(aux14687_BOOL,aux14687_INTEGER);
constraint bool2int(aux14693_BOOL,aux14693_INTEGER);
constraint bool2int(aux14699_BOOL,aux14699_INTEGER);
constraint bool2int(aux14705_BOOL,aux14705_INTEGER);
constraint bool2int(aux14711_BOOL,aux14711_INTEGER);
constraint bool2int(aux14717_BOOL,aux14717_INTEGER);
constraint bool2int(aux14723_BOOL,aux14723_INTEGER);
constraint bool2int(aux14729_BOOL,aux14729_INTEGER);
constraint bool2int(aux14735_BOOL,aux14735_INTEGER);
constraint bool2int(aux14741_BOOL,aux14741_INTEGER);
constraint bool2int(aux14745_BOOL,aux14745_INTEGER);
constraint bool2int(aux14752_BOOL,aux14752_INTEGER);
constraint bool2int(aux14758_BOOL,aux14758_INTEGER);
constraint bool2int(aux14764_BOOL,aux14764_INTEGER);
constraint bool2int(aux14770_BOOL,aux14770_INTEGER);
constraint bool2int(aux14776_BOOL,aux14776_INTEGER);
constraint bool2int(aux14782_BOOL,aux14782_INTEGER);
constraint bool2int(aux14788_BOOL,aux14788_INTEGER);
constraint bool2int(aux14794_BOOL,aux14794_INTEGER);
constraint bool2int(aux14800_BOOL,aux14800_INTEGER);
constraint bool2int(aux14806_BOOL,aux14806_INTEGER);
constraint bool2int(aux14812_BOOL,aux14812_INTEGER);
constraint bool2int(aux14818_BOOL,aux14818_INTEGER);
constraint bool2int(aux14824_BOOL,aux14824_INTEGER);
constraint bool2int(aux14830_BOOL,aux14830_INTEGER);
constraint bool2int(aux14836_BOOL,aux14836_INTEGER);
constraint bool2int(aux14842_BOOL,aux14842_INTEGER);
constraint bool2int(aux14848_BOOL,aux14848_INTEGER);
constraint bool2int(aux14854_BOOL,aux14854_INTEGER);
constraint bool2int(aux14860_BOOL,aux14860_INTEGER);
constraint bool2int(aux14864_BOOL,aux14864_INTEGER);
constraint bool2int(aux14873_BOOL,aux14873_INTEGER);
constraint bool2int(aux14879_BOOL,aux14879_INTEGER);
constraint bool2int(aux14885_BOOL,aux14885_INTEGER);
constraint bool2int(aux14891_BOOL,aux14891_INTEGER);
constraint bool2int(aux14897_BOOL,aux14897_INTEGER);
constraint bool2int(aux14903_BOOL,aux14903_INTEGER);
constraint bool2int(aux14909_BOOL,aux14909_INTEGER);
constraint bool2int(aux14915_BOOL,aux14915_INTEGER);
constraint bool2int(aux14921_BOOL,aux14921_INTEGER);
constraint bool2int(aux14927_BOOL,aux14927_INTEGER);
constraint bool2int(aux14933_BOOL,aux14933_INTEGER);
constraint bool2int(aux14939_BOOL,aux14939_INTEGER);
constraint bool2int(aux14945_BOOL,aux14945_INTEGER);
constraint bool2int(aux14951_BOOL,aux14951_INTEGER);
constraint bool2int(aux14957_BOOL,aux14957_INTEGER);
constraint bool2int(aux14963_BOOL,aux14963_INTEGER);
constraint bool2int(aux14969_BOOL,aux14969_INTEGER);
constraint bool2int(aux14975_BOOL,aux14975_INTEGER);
constraint bool2int(aux14981_BOOL,aux14981_INTEGER);
constraint bool2int(aux14985_BOOL,aux14985_INTEGER);
constraint bool2int(aux14992_BOOL,aux14992_INTEGER);
constraint bool2int(aux14998_BOOL,aux14998_INTEGER);
constraint bool2int(aux15004_BOOL,aux15004_INTEGER);
constraint bool2int(aux15010_BOOL,aux15010_INTEGER);
constraint bool2int(aux15016_BOOL,aux15016_INTEGER);
constraint bool2int(aux15022_BOOL,aux15022_INTEGER);
constraint bool2int(aux15028_BOOL,aux15028_INTEGER);
constraint bool2int(aux15034_BOOL,aux15034_INTEGER);
constraint bool2int(aux15040_BOOL,aux15040_INTEGER);
constraint bool2int(aux15046_BOOL,aux15046_INTEGER);
constraint bool2int(aux15052_BOOL,aux15052_INTEGER);
constraint bool2int(aux15058_BOOL,aux15058_INTEGER);
constraint bool2int(aux15064_BOOL,aux15064_INTEGER);
constraint bool2int(aux15070_BOOL,aux15070_INTEGER);
constraint bool2int(aux15076_BOOL,aux15076_INTEGER);
constraint bool2int(aux15082_BOOL,aux15082_INTEGER);
constraint bool2int(aux15088_BOOL,aux15088_INTEGER);
constraint bool2int(aux15094_BOOL,aux15094_INTEGER);
constraint bool2int(aux15100_BOOL,aux15100_INTEGER);
constraint bool2int(aux15104_BOOL,aux15104_INTEGER);
constraint bool2int(aux15111_BOOL,aux15111_INTEGER);
constraint bool2int(aux15117_BOOL,aux15117_INTEGER);
constraint bool2int(aux15123_BOOL,aux15123_INTEGER);
constraint bool2int(aux15129_BOOL,aux15129_INTEGER);
constraint bool2int(aux15135_BOOL,aux15135_INTEGER);
constraint bool2int(aux15141_BOOL,aux15141_INTEGER);
constraint bool2int(aux15147_BOOL,aux15147_INTEGER);
constraint bool2int(aux15153_BOOL,aux15153_INTEGER);
constraint bool2int(aux15159_BOOL,aux15159_INTEGER);
constraint bool2int(aux15165_BOOL,aux15165_INTEGER);
constraint bool2int(aux15171_BOOL,aux15171_INTEGER);
constraint bool2int(aux15177_BOOL,aux15177_INTEGER);
constraint bool2int(aux15183_BOOL,aux15183_INTEGER);
constraint bool2int(aux15189_BOOL,aux15189_INTEGER);
constraint bool2int(aux15195_BOOL,aux15195_INTEGER);
constraint bool2int(aux15201_BOOL,aux15201_INTEGER);
constraint bool2int(aux15207_BOOL,aux15207_INTEGER);
constraint bool2int(aux15213_BOOL,aux15213_INTEGER);
constraint bool2int(aux15219_BOOL,aux15219_INTEGER);
constraint bool2int(aux15223_BOOL,aux15223_INTEGER);
constraint bool2int(aux15230_BOOL,aux15230_INTEGER);
constraint bool2int(aux15236_BOOL,aux15236_INTEGER);
constraint bool2int(aux15242_BOOL,aux15242_INTEGER);
constraint bool2int(aux15248_BOOL,aux15248_INTEGER);
constraint bool2int(aux15254_BOOL,aux15254_INTEGER);
constraint bool2int(aux15260_BOOL,aux15260_INTEGER);
constraint bool2int(aux15266_BOOL,aux15266_INTEGER);
constraint bool2int(aux15272_BOOL,aux15272_INTEGER);
constraint bool2int(aux15278_BOOL,aux15278_INTEGER);
constraint bool2int(aux15284_BOOL,aux15284_INTEGER);
constraint bool2int(aux15290_BOOL,aux15290_INTEGER);
constraint bool2int(aux15296_BOOL,aux15296_INTEGER);
constraint bool2int(aux15302_BOOL,aux15302_INTEGER);
constraint bool2int(aux15308_BOOL,aux15308_INTEGER);
constraint bool2int(aux15314_BOOL,aux15314_INTEGER);
constraint bool2int(aux15320_BOOL,aux15320_INTEGER);
constraint bool2int(aux15326_BOOL,aux15326_INTEGER);
constraint bool2int(aux15332_BOOL,aux15332_INTEGER);
constraint bool2int(aux15338_BOOL,aux15338_INTEGER);
constraint bool2int(aux15342_BOOL,aux15342_INTEGER);
constraint bool2int(aux15349_BOOL,aux15349_INTEGER);
constraint bool2int(aux15355_BOOL,aux15355_INTEGER);
constraint bool2int(aux15361_BOOL,aux15361_INTEGER);
constraint bool2int(aux15367_BOOL,aux15367_INTEGER);
constraint bool2int(aux15373_BOOL,aux15373_INTEGER);
constraint bool2int(aux15379_BOOL,aux15379_INTEGER);
constraint bool2int(aux15385_BOOL,aux15385_INTEGER);
constraint bool2int(aux15391_BOOL,aux15391_INTEGER);
constraint bool2int(aux15397_BOOL,aux15397_INTEGER);
constraint bool2int(aux15403_BOOL,aux15403_INTEGER);
constraint bool2int(aux15409_BOOL,aux15409_INTEGER);
constraint bool2int(aux15415_BOOL,aux15415_INTEGER);
constraint bool2int(aux15421_BOOL,aux15421_INTEGER);
constraint bool2int(aux15427_BOOL,aux15427_INTEGER);
constraint bool2int(aux15433_BOOL,aux15433_INTEGER);
constraint bool2int(aux15439_BOOL,aux15439_INTEGER);
constraint bool2int(aux15445_BOOL,aux15445_INTEGER);
constraint bool2int(aux15451_BOOL,aux15451_INTEGER);
constraint bool2int(aux15457_BOOL,aux15457_INTEGER);
constraint bool2int(aux15461_BOOL,aux15461_INTEGER);
constraint bool2int(aux15468_BOOL,aux15468_INTEGER);
constraint bool2int(aux15474_BOOL,aux15474_INTEGER);
constraint bool2int(aux15480_BOOL,aux15480_INTEGER);
constraint bool2int(aux15486_BOOL,aux15486_INTEGER);
constraint bool2int(aux15492_BOOL,aux15492_INTEGER);
constraint bool2int(aux15498_BOOL,aux15498_INTEGER);
constraint bool2int(aux15504_BOOL,aux15504_INTEGER);
constraint bool2int(aux15510_BOOL,aux15510_INTEGER);
constraint bool2int(aux15516_BOOL,aux15516_INTEGER);
constraint bool2int(aux15522_BOOL,aux15522_INTEGER);
constraint bool2int(aux15528_BOOL,aux15528_INTEGER);
constraint bool2int(aux15534_BOOL,aux15534_INTEGER);
constraint bool2int(aux15540_BOOL,aux15540_INTEGER);
constraint bool2int(aux15546_BOOL,aux15546_INTEGER);
constraint bool2int(aux15552_BOOL,aux15552_INTEGER);
constraint bool2int(aux15558_BOOL,aux15558_INTEGER);
constraint bool2int(aux15564_BOOL,aux15564_INTEGER);
constraint bool2int(aux15570_BOOL,aux15570_INTEGER);
constraint bool2int(aux15576_BOOL,aux15576_INTEGER);
constraint bool2int(aux15580_BOOL,aux15580_INTEGER);
constraint bool2int(aux15587_BOOL,aux15587_INTEGER);
constraint bool2int(aux15593_BOOL,aux15593_INTEGER);
constraint bool2int(aux15599_BOOL,aux15599_INTEGER);
constraint bool2int(aux15605_BOOL,aux15605_INTEGER);
constraint bool2int(aux15611_BOOL,aux15611_INTEGER);
constraint bool2int(aux15617_BOOL,aux15617_INTEGER);
constraint bool2int(aux15623_BOOL,aux15623_INTEGER);
constraint bool2int(aux15629_BOOL,aux15629_INTEGER);
constraint bool2int(aux15635_BOOL,aux15635_INTEGER);
constraint bool2int(aux15641_BOOL,aux15641_INTEGER);
constraint bool2int(aux15647_BOOL,aux15647_INTEGER);
constraint bool2int(aux15653_BOOL,aux15653_INTEGER);
constraint bool2int(aux15659_BOOL,aux15659_INTEGER);
constraint bool2int(aux15665_BOOL,aux15665_INTEGER);
constraint bool2int(aux15671_BOOL,aux15671_INTEGER);
constraint bool2int(aux15677_BOOL,aux15677_INTEGER);
constraint bool2int(aux15683_BOOL,aux15683_INTEGER);
constraint bool2int(aux15689_BOOL,aux15689_INTEGER);
constraint bool2int(aux15695_BOOL,aux15695_INTEGER);
constraint bool2int(aux15699_BOOL,aux15699_INTEGER);
constraint bool2int(aux15706_BOOL,aux15706_INTEGER);
constraint bool2int(aux15712_BOOL,aux15712_INTEGER);
constraint bool2int(aux15718_BOOL,aux15718_INTEGER);
constraint bool2int(aux15724_BOOL,aux15724_INTEGER);
constraint bool2int(aux15730_BOOL,aux15730_INTEGER);
constraint bool2int(aux15736_BOOL,aux15736_INTEGER);
constraint bool2int(aux15742_BOOL,aux15742_INTEGER);
constraint bool2int(aux15748_BOOL,aux15748_INTEGER);
constraint bool2int(aux15754_BOOL,aux15754_INTEGER);
constraint bool2int(aux15760_BOOL,aux15760_INTEGER);
constraint bool2int(aux15766_BOOL,aux15766_INTEGER);
constraint bool2int(aux15772_BOOL,aux15772_INTEGER);
constraint bool2int(aux15778_BOOL,aux15778_INTEGER);
constraint bool2int(aux15784_BOOL,aux15784_INTEGER);
constraint bool2int(aux15790_BOOL,aux15790_INTEGER);
constraint bool2int(aux15796_BOOL,aux15796_INTEGER);
constraint bool2int(aux15802_BOOL,aux15802_INTEGER);
constraint bool2int(aux15808_BOOL,aux15808_INTEGER);
constraint bool2int(aux15814_BOOL,aux15814_INTEGER);
constraint bool2int(aux15818_BOOL,aux15818_INTEGER);
constraint bool2int(aux15825_BOOL,aux15825_INTEGER);
constraint bool2int(aux15831_BOOL,aux15831_INTEGER);
constraint bool2int(aux15837_BOOL,aux15837_INTEGER);
constraint bool2int(aux15843_BOOL,aux15843_INTEGER);
constraint bool2int(aux15849_BOOL,aux15849_INTEGER);
constraint bool2int(aux15855_BOOL,aux15855_INTEGER);
constraint bool2int(aux15861_BOOL,aux15861_INTEGER);
constraint bool2int(aux15867_BOOL,aux15867_INTEGER);
constraint bool2int(aux15873_BOOL,aux15873_INTEGER);
constraint bool2int(aux15879_BOOL,aux15879_INTEGER);
constraint bool2int(aux15885_BOOL,aux15885_INTEGER);
constraint bool2int(aux15891_BOOL,aux15891_INTEGER);
constraint bool2int(aux15897_BOOL,aux15897_INTEGER);
constraint bool2int(aux15903_BOOL,aux15903_INTEGER);
constraint bool2int(aux15909_BOOL,aux15909_INTEGER);
constraint bool2int(aux15915_BOOL,aux15915_INTEGER);
constraint bool2int(aux15921_BOOL,aux15921_INTEGER);
constraint bool2int(aux15927_BOOL,aux15927_INTEGER);
constraint bool2int(aux15933_BOOL,aux15933_INTEGER);
constraint bool2int(aux15937_BOOL,aux15937_INTEGER);
constraint bool2int(aux15944_BOOL,aux15944_INTEGER);
constraint bool2int(aux15950_BOOL,aux15950_INTEGER);
constraint bool2int(aux15956_BOOL,aux15956_INTEGER);
constraint bool2int(aux15962_BOOL,aux15962_INTEGER);
constraint bool2int(aux15968_BOOL,aux15968_INTEGER);
constraint bool2int(aux15974_BOOL,aux15974_INTEGER);
constraint bool2int(aux15980_BOOL,aux15980_INTEGER);
constraint bool2int(aux15986_BOOL,aux15986_INTEGER);
constraint bool2int(aux15992_BOOL,aux15992_INTEGER);
constraint bool2int(aux15998_BOOL,aux15998_INTEGER);
constraint bool2int(aux16004_BOOL,aux16004_INTEGER);
constraint bool2int(aux16010_BOOL,aux16010_INTEGER);
constraint bool2int(aux16016_BOOL,aux16016_INTEGER);
constraint bool2int(aux16022_BOOL,aux16022_INTEGER);
constraint bool2int(aux16028_BOOL,aux16028_INTEGER);
constraint bool2int(aux16034_BOOL,aux16034_INTEGER);
constraint bool2int(aux16040_BOOL,aux16040_INTEGER);
constraint bool2int(aux16046_BOOL,aux16046_INTEGER);
constraint bool2int(aux16052_BOOL,aux16052_INTEGER);
constraint bool2int(aux16056_BOOL,aux16056_INTEGER);
constraint bool2int(aux16063_BOOL,aux16063_INTEGER);
constraint bool2int(aux16069_BOOL,aux16069_INTEGER);
constraint bool2int(aux16075_BOOL,aux16075_INTEGER);
constraint bool2int(aux16081_BOOL,aux16081_INTEGER);
constraint bool2int(aux16087_BOOL,aux16087_INTEGER);
constraint bool2int(aux16093_BOOL,aux16093_INTEGER);
constraint bool2int(aux16099_BOOL,aux16099_INTEGER);
constraint bool2int(aux16105_BOOL,aux16105_INTEGER);
constraint bool2int(aux16111_BOOL,aux16111_INTEGER);
constraint bool2int(aux16117_BOOL,aux16117_INTEGER);
constraint bool2int(aux16123_BOOL,aux16123_INTEGER);
constraint bool2int(aux16129_BOOL,aux16129_INTEGER);
constraint bool2int(aux16135_BOOL,aux16135_INTEGER);
constraint bool2int(aux16141_BOOL,aux16141_INTEGER);
constraint bool2int(aux16147_BOOL,aux16147_INTEGER);
constraint bool2int(aux16153_BOOL,aux16153_INTEGER);
constraint bool2int(aux16159_BOOL,aux16159_INTEGER);
constraint bool2int(aux16165_BOOL,aux16165_INTEGER);
constraint bool2int(aux16171_BOOL,aux16171_INTEGER);
constraint bool2int(aux16175_BOOL,aux16175_INTEGER);
constraint bool2int(aux16182_BOOL,aux16182_INTEGER);
constraint bool2int(aux16188_BOOL,aux16188_INTEGER);
constraint bool2int(aux16194_BOOL,aux16194_INTEGER);
constraint bool2int(aux16200_BOOL,aux16200_INTEGER);
constraint bool2int(aux16206_BOOL,aux16206_INTEGER);
constraint bool2int(aux16212_BOOL,aux16212_INTEGER);
constraint bool2int(aux16218_BOOL,aux16218_INTEGER);
constraint bool2int(aux16224_BOOL,aux16224_INTEGER);
constraint bool2int(aux16230_BOOL,aux16230_INTEGER);
constraint bool2int(aux16236_BOOL,aux16236_INTEGER);
constraint bool2int(aux16242_BOOL,aux16242_INTEGER);
constraint bool2int(aux16248_BOOL,aux16248_INTEGER);
constraint bool2int(aux16254_BOOL,aux16254_INTEGER);
constraint bool2int(aux16260_BOOL,aux16260_INTEGER);
constraint bool2int(aux16266_BOOL,aux16266_INTEGER);
constraint bool2int(aux16272_BOOL,aux16272_INTEGER);
constraint bool2int(aux16278_BOOL,aux16278_INTEGER);
constraint bool2int(aux16284_BOOL,aux16284_INTEGER);
constraint bool2int(aux16290_BOOL,aux16290_INTEGER);
constraint bool2int(aux16294_BOOL,aux16294_INTEGER);
constraint bool2int(aux16301_BOOL,aux16301_INTEGER);
constraint bool2int(aux16307_BOOL,aux16307_INTEGER);
constraint bool2int(aux16313_BOOL,aux16313_INTEGER);
constraint bool2int(aux16319_BOOL,aux16319_INTEGER);
constraint bool2int(aux16325_BOOL,aux16325_INTEGER);
constraint bool2int(aux16331_BOOL,aux16331_INTEGER);
constraint bool2int(aux16337_BOOL,aux16337_INTEGER);
constraint bool2int(aux16343_BOOL,aux16343_INTEGER);
constraint bool2int(aux16349_BOOL,aux16349_INTEGER);
constraint bool2int(aux16355_BOOL,aux16355_INTEGER);
constraint bool2int(aux16361_BOOL,aux16361_INTEGER);
constraint bool2int(aux16367_BOOL,aux16367_INTEGER);
constraint bool2int(aux16373_BOOL,aux16373_INTEGER);
constraint bool2int(aux16379_BOOL,aux16379_INTEGER);
constraint bool2int(aux16385_BOOL,aux16385_INTEGER);
constraint bool2int(aux16391_BOOL,aux16391_INTEGER);
constraint bool2int(aux16397_BOOL,aux16397_INTEGER);
constraint bool2int(aux16403_BOOL,aux16403_INTEGER);
constraint bool2int(aux16409_BOOL,aux16409_INTEGER);
constraint bool2int(aux16413_BOOL,aux16413_INTEGER);
constraint bool2int(aux16420_BOOL,aux16420_INTEGER);
constraint bool2int(aux16426_BOOL,aux16426_INTEGER);
constraint bool2int(aux16432_BOOL,aux16432_INTEGER);
constraint bool2int(aux16438_BOOL,aux16438_INTEGER);
constraint bool2int(aux16444_BOOL,aux16444_INTEGER);
constraint bool2int(aux16450_BOOL,aux16450_INTEGER);
constraint bool2int(aux16456_BOOL,aux16456_INTEGER);
constraint bool2int(aux16462_BOOL,aux16462_INTEGER);
constraint bool2int(aux16468_BOOL,aux16468_INTEGER);
constraint bool2int(aux16474_BOOL,aux16474_INTEGER);
constraint bool2int(aux16480_BOOL,aux16480_INTEGER);
constraint bool2int(aux16486_BOOL,aux16486_INTEGER);
constraint bool2int(aux16492_BOOL,aux16492_INTEGER);
constraint bool2int(aux16498_BOOL,aux16498_INTEGER);
constraint bool2int(aux16504_BOOL,aux16504_INTEGER);
constraint bool2int(aux16510_BOOL,aux16510_INTEGER);
constraint bool2int(aux16516_BOOL,aux16516_INTEGER);
constraint bool2int(aux16522_BOOL,aux16522_INTEGER);
constraint bool2int(aux16528_BOOL,aux16528_INTEGER);
constraint bool2int(aux16532_BOOL,aux16532_INTEGER);
constraint bool2int(aux16539_BOOL,aux16539_INTEGER);
constraint bool2int(aux16545_BOOL,aux16545_INTEGER);
constraint bool2int(aux16551_BOOL,aux16551_INTEGER);
constraint bool2int(aux16557_BOOL,aux16557_INTEGER);
constraint bool2int(aux16563_BOOL,aux16563_INTEGER);
constraint bool2int(aux16569_BOOL,aux16569_INTEGER);
constraint bool2int(aux16575_BOOL,aux16575_INTEGER);
constraint bool2int(aux16581_BOOL,aux16581_INTEGER);
constraint bool2int(aux16587_BOOL,aux16587_INTEGER);
constraint bool2int(aux16593_BOOL,aux16593_INTEGER);
constraint bool2int(aux16599_BOOL,aux16599_INTEGER);
constraint bool2int(aux16605_BOOL,aux16605_INTEGER);
constraint bool2int(aux16611_BOOL,aux16611_INTEGER);
constraint bool2int(aux16617_BOOL,aux16617_INTEGER);
constraint bool2int(aux16623_BOOL,aux16623_INTEGER);
constraint bool2int(aux16629_BOOL,aux16629_INTEGER);
constraint bool2int(aux16635_BOOL,aux16635_INTEGER);
constraint bool2int(aux16641_BOOL,aux16641_INTEGER);
constraint bool2int(aux16647_BOOL,aux16647_INTEGER);
constraint bool2int(aux16651_BOOL,aux16651_INTEGER);
constraint bool2int(aux16658_BOOL,aux16658_INTEGER);
constraint bool2int(aux16664_BOOL,aux16664_INTEGER);
constraint bool2int(aux16670_BOOL,aux16670_INTEGER);
constraint bool2int(aux16676_BOOL,aux16676_INTEGER);
constraint bool2int(aux16682_BOOL,aux16682_INTEGER);
constraint bool2int(aux16688_BOOL,aux16688_INTEGER);
constraint bool2int(aux16694_BOOL,aux16694_INTEGER);
constraint bool2int(aux16700_BOOL,aux16700_INTEGER);
constraint bool2int(aux16706_BOOL,aux16706_INTEGER);
constraint bool2int(aux16712_BOOL,aux16712_INTEGER);
constraint bool2int(aux16718_BOOL,aux16718_INTEGER);
constraint bool2int(aux16724_BOOL,aux16724_INTEGER);
constraint bool2int(aux16730_BOOL,aux16730_INTEGER);
constraint bool2int(aux16736_BOOL,aux16736_INTEGER);
constraint bool2int(aux16742_BOOL,aux16742_INTEGER);
constraint bool2int(aux16748_BOOL,aux16748_INTEGER);
constraint bool2int(aux16754_BOOL,aux16754_INTEGER);
constraint bool2int(aux16760_BOOL,aux16760_INTEGER);
constraint bool2int(aux16766_BOOL,aux16766_INTEGER);
constraint bool2int(aux16770_BOOL,aux16770_INTEGER);
constraint bool2int(aux16777_BOOL,aux16777_INTEGER);
constraint bool2int(aux16783_BOOL,aux16783_INTEGER);
constraint bool2int(aux16789_BOOL,aux16789_INTEGER);
constraint bool2int(aux16795_BOOL,aux16795_INTEGER);
constraint bool2int(aux16801_BOOL,aux16801_INTEGER);
constraint bool2int(aux16807_BOOL,aux16807_INTEGER);
constraint bool2int(aux16813_BOOL,aux16813_INTEGER);
constraint bool2int(aux16819_BOOL,aux16819_INTEGER);
constraint bool2int(aux16825_BOOL,aux16825_INTEGER);
constraint bool2int(aux16831_BOOL,aux16831_INTEGER);
constraint bool2int(aux16837_BOOL,aux16837_INTEGER);
constraint bool2int(aux16843_BOOL,aux16843_INTEGER);
constraint bool2int(aux16849_BOOL,aux16849_INTEGER);
constraint bool2int(aux16855_BOOL,aux16855_INTEGER);
constraint bool2int(aux16861_BOOL,aux16861_INTEGER);
constraint bool2int(aux16867_BOOL,aux16867_INTEGER);
constraint bool2int(aux16873_BOOL,aux16873_INTEGER);
constraint bool2int(aux16879_BOOL,aux16879_INTEGER);
constraint bool2int(aux16885_BOOL,aux16885_INTEGER);
constraint bool2int(aux16889_BOOL,aux16889_INTEGER);
constraint bool2int(aux16896_BOOL,aux16896_INTEGER);
constraint bool2int(aux16902_BOOL,aux16902_INTEGER);
constraint bool2int(aux16908_BOOL,aux16908_INTEGER);
constraint bool2int(aux16914_BOOL,aux16914_INTEGER);
constraint bool2int(aux16920_BOOL,aux16920_INTEGER);
constraint bool2int(aux16926_BOOL,aux16926_INTEGER);
constraint bool2int(aux16932_BOOL,aux16932_INTEGER);
constraint bool2int(aux16938_BOOL,aux16938_INTEGER);
constraint bool2int(aux16944_BOOL,aux16944_INTEGER);
constraint bool2int(aux16950_BOOL,aux16950_INTEGER);
constraint bool2int(aux16956_BOOL,aux16956_INTEGER);
constraint bool2int(aux16962_BOOL,aux16962_INTEGER);
constraint bool2int(aux16968_BOOL,aux16968_INTEGER);
constraint bool2int(aux16974_BOOL,aux16974_INTEGER);
constraint bool2int(aux16980_BOOL,aux16980_INTEGER);
constraint bool2int(aux16986_BOOL,aux16986_INTEGER);
constraint bool2int(aux16992_BOOL,aux16992_INTEGER);
constraint bool2int(aux16998_BOOL,aux16998_INTEGER);
constraint bool2int(aux17004_BOOL,aux17004_INTEGER);
constraint bool2int(aux17008_BOOL,aux17008_INTEGER);
constraint bool2int(aux17015_BOOL,aux17015_INTEGER);
constraint bool2int(aux17021_BOOL,aux17021_INTEGER);
constraint bool2int(aux17027_BOOL,aux17027_INTEGER);
constraint bool2int(aux17033_BOOL,aux17033_INTEGER);
constraint bool2int(aux17039_BOOL,aux17039_INTEGER);
constraint bool2int(aux17045_BOOL,aux17045_INTEGER);
constraint bool2int(aux17051_BOOL,aux17051_INTEGER);
constraint bool2int(aux17057_BOOL,aux17057_INTEGER);
constraint bool2int(aux17063_BOOL,aux17063_INTEGER);
constraint bool2int(aux17069_BOOL,aux17069_INTEGER);
constraint bool2int(aux17075_BOOL,aux17075_INTEGER);
constraint bool2int(aux17081_BOOL,aux17081_INTEGER);
constraint bool2int(aux17087_BOOL,aux17087_INTEGER);
constraint bool2int(aux17093_BOOL,aux17093_INTEGER);
constraint bool2int(aux17099_BOOL,aux17099_INTEGER);
constraint bool2int(aux17105_BOOL,aux17105_INTEGER);
constraint bool2int(aux17111_BOOL,aux17111_INTEGER);
constraint bool2int(aux17117_BOOL,aux17117_INTEGER);
constraint bool2int(aux17123_BOOL,aux17123_INTEGER);
constraint bool2int(aux17127_BOOL,aux17127_INTEGER);
constraint bool2int(aux17134_BOOL,aux17134_INTEGER);
constraint bool2int(aux17140_BOOL,aux17140_INTEGER);
constraint bool2int(aux17146_BOOL,aux17146_INTEGER);
constraint bool2int(aux17152_BOOL,aux17152_INTEGER);
constraint bool2int(aux17158_BOOL,aux17158_INTEGER);
constraint bool2int(aux17164_BOOL,aux17164_INTEGER);
constraint bool2int(aux17170_BOOL,aux17170_INTEGER);
constraint bool2int(aux17176_BOOL,aux17176_INTEGER);
constraint bool2int(aux17182_BOOL,aux17182_INTEGER);
constraint bool2int(aux17188_BOOL,aux17188_INTEGER);
constraint bool2int(aux17194_BOOL,aux17194_INTEGER);
constraint bool2int(aux17200_BOOL,aux17200_INTEGER);
constraint bool2int(aux17206_BOOL,aux17206_INTEGER);
constraint bool2int(aux17212_BOOL,aux17212_INTEGER);
constraint bool2int(aux17218_BOOL,aux17218_INTEGER);
constraint bool2int(aux17224_BOOL,aux17224_INTEGER);
constraint bool2int(aux17230_BOOL,aux17230_INTEGER);
constraint bool2int(aux17236_BOOL,aux17236_INTEGER);
constraint bool2int(aux17242_BOOL,aux17242_INTEGER);
constraint bool2int(aux17246_BOOL,aux17246_INTEGER);
constraint bool2int(aux17254_BOOL,aux17254_INTEGER);
constraint bool2int(aux17260_BOOL,aux17260_INTEGER);
constraint bool2int(aux17266_BOOL,aux17266_INTEGER);
constraint bool2int(aux17272_BOOL,aux17272_INTEGER);
constraint bool2int(aux17278_BOOL,aux17278_INTEGER);
constraint bool2int(aux17284_BOOL,aux17284_INTEGER);
constraint bool2int(aux17290_BOOL,aux17290_INTEGER);
constraint bool2int(aux17296_BOOL,aux17296_INTEGER);
constraint bool2int(aux17302_BOOL,aux17302_INTEGER);
constraint bool2int(aux17308_BOOL,aux17308_INTEGER);
constraint bool2int(aux17314_BOOL,aux17314_INTEGER);
constraint bool2int(aux17320_BOOL,aux17320_INTEGER);
constraint bool2int(aux17326_BOOL,aux17326_INTEGER);
constraint bool2int(aux17332_BOOL,aux17332_INTEGER);
constraint bool2int(aux17338_BOOL,aux17338_INTEGER);
constraint bool2int(aux17344_BOOL,aux17344_INTEGER);
constraint bool2int(aux17350_BOOL,aux17350_INTEGER);
constraint bool2int(aux17356_BOOL,aux17356_INTEGER);
constraint bool2int(aux17362_BOOL,aux17362_INTEGER);
constraint bool2int(aux17368_BOOL,aux17368_INTEGER);
constraint bool2int(aux17373_BOOL,aux17373_INTEGER);
constraint bool2int(aux17379_BOOL,aux17379_INTEGER);
constraint bool2int(aux17385_BOOL,aux17385_INTEGER);
constraint bool2int(aux17391_BOOL,aux17391_INTEGER);
constraint bool2int(aux17397_BOOL,aux17397_INTEGER);
constraint bool2int(aux17403_BOOL,aux17403_INTEGER);
constraint bool2int(aux17409_BOOL,aux17409_INTEGER);
constraint bool2int(aux17415_BOOL,aux17415_INTEGER);
constraint bool2int(aux17421_BOOL,aux17421_INTEGER);
constraint bool2int(aux17427_BOOL,aux17427_INTEGER);
constraint bool2int(aux17433_BOOL,aux17433_INTEGER);
constraint bool2int(aux17439_BOOL,aux17439_INTEGER);
constraint bool2int(aux17445_BOOL,aux17445_INTEGER);
constraint bool2int(aux17451_BOOL,aux17451_INTEGER);
constraint bool2int(aux17457_BOOL,aux17457_INTEGER);
constraint bool2int(aux17463_BOOL,aux17463_INTEGER);
constraint bool2int(aux17469_BOOL,aux17469_INTEGER);
constraint bool2int(aux17475_BOOL,aux17475_INTEGER);
constraint bool2int(aux17481_BOOL,aux17481_INTEGER);
constraint bool2int(aux17487_BOOL,aux17487_INTEGER);
constraint bool2int(aux17492_BOOL,aux17492_INTEGER);
constraint bool2int(aux17498_BOOL,aux17498_INTEGER);
constraint bool2int(aux17504_BOOL,aux17504_INTEGER);
constraint bool2int(aux17510_BOOL,aux17510_INTEGER);
constraint bool2int(aux17516_BOOL,aux17516_INTEGER);
constraint bool2int(aux17522_BOOL,aux17522_INTEGER);
constraint bool2int(aux17528_BOOL,aux17528_INTEGER);
constraint bool2int(aux17534_BOOL,aux17534_INTEGER);
constraint bool2int(aux17540_BOOL,aux17540_INTEGER);
constraint bool2int(aux17546_BOOL,aux17546_INTEGER);
constraint bool2int(aux17552_BOOL,aux17552_INTEGER);
constraint bool2int(aux17558_BOOL,aux17558_INTEGER);
constraint bool2int(aux17564_BOOL,aux17564_INTEGER);
constraint bool2int(aux17570_BOOL,aux17570_INTEGER);
constraint bool2int(aux17576_BOOL,aux17576_INTEGER);
constraint bool2int(aux17582_BOOL,aux17582_INTEGER);
constraint bool2int(aux17588_BOOL,aux17588_INTEGER);
constraint bool2int(aux17594_BOOL,aux17594_INTEGER);
constraint bool2int(aux17600_BOOL,aux17600_INTEGER);
constraint bool2int(aux17606_BOOL,aux17606_INTEGER);
constraint bool2int(aux17611_BOOL,aux17611_INTEGER);
constraint bool2int(aux17617_BOOL,aux17617_INTEGER);
constraint bool2int(aux17623_BOOL,aux17623_INTEGER);
constraint bool2int(aux17629_BOOL,aux17629_INTEGER);
constraint bool2int(aux17635_BOOL,aux17635_INTEGER);
constraint bool2int(aux17641_BOOL,aux17641_INTEGER);
constraint bool2int(aux17647_BOOL,aux17647_INTEGER);
constraint bool2int(aux17653_BOOL,aux17653_INTEGER);
constraint bool2int(aux17659_BOOL,aux17659_INTEGER);
constraint bool2int(aux17665_BOOL,aux17665_INTEGER);
constraint bool2int(aux17671_BOOL,aux17671_INTEGER);
constraint bool2int(aux17677_BOOL,aux17677_INTEGER);
constraint bool2int(aux17683_BOOL,aux17683_INTEGER);
constraint bool2int(aux17689_BOOL,aux17689_INTEGER);
constraint bool2int(aux17695_BOOL,aux17695_INTEGER);
constraint bool2int(aux17701_BOOL,aux17701_INTEGER);
constraint bool2int(aux17707_BOOL,aux17707_INTEGER);
constraint bool2int(aux17713_BOOL,aux17713_INTEGER);
constraint bool2int(aux17719_BOOL,aux17719_INTEGER);
constraint bool2int(aux17725_BOOL,aux17725_INTEGER);
constraint bool2int(aux17730_BOOL,aux17730_INTEGER);
constraint bool2int(aux17736_BOOL,aux17736_INTEGER);
constraint bool2int(aux17742_BOOL,aux17742_INTEGER);
constraint bool2int(aux17748_BOOL,aux17748_INTEGER);
constraint bool2int(aux17754_BOOL,aux17754_INTEGER);
constraint bool2int(aux17760_BOOL,aux17760_INTEGER);
constraint bool2int(aux17766_BOOL,aux17766_INTEGER);
constraint bool2int(aux17772_BOOL,aux17772_INTEGER);
constraint bool2int(aux17778_BOOL,aux17778_INTEGER);
constraint bool2int(aux17784_BOOL,aux17784_INTEGER);
constraint bool2int(aux17790_BOOL,aux17790_INTEGER);
constraint bool2int(aux17796_BOOL,aux17796_INTEGER);
constraint bool2int(aux17802_BOOL,aux17802_INTEGER);
constraint bool2int(aux17808_BOOL,aux17808_INTEGER);
constraint bool2int(aux17814_BOOL,aux17814_INTEGER);
constraint bool2int(aux17820_BOOL,aux17820_INTEGER);
constraint bool2int(aux17826_BOOL,aux17826_INTEGER);
constraint bool2int(aux17832_BOOL,aux17832_INTEGER);
constraint bool2int(aux17838_BOOL,aux17838_INTEGER);
constraint bool2int(aux17844_BOOL,aux17844_INTEGER);
constraint bool2int(aux17849_BOOL,aux17849_INTEGER);
constraint bool2int(aux17855_BOOL,aux17855_INTEGER);
constraint bool2int(aux17861_BOOL,aux17861_INTEGER);
constraint bool2int(aux17867_BOOL,aux17867_INTEGER);
constraint bool2int(aux17873_BOOL,aux17873_INTEGER);
constraint bool2int(aux17879_BOOL,aux17879_INTEGER);
constraint bool2int(aux17885_BOOL,aux17885_INTEGER);
constraint bool2int(aux17891_BOOL,aux17891_INTEGER);
constraint bool2int(aux17897_BOOL,aux17897_INTEGER);
constraint bool2int(aux17903_BOOL,aux17903_INTEGER);
constraint bool2int(aux17909_BOOL,aux17909_INTEGER);
constraint bool2int(aux17915_BOOL,aux17915_INTEGER);
constraint bool2int(aux17921_BOOL,aux17921_INTEGER);
constraint bool2int(aux17927_BOOL,aux17927_INTEGER);
constraint bool2int(aux17933_BOOL,aux17933_INTEGER);
constraint bool2int(aux17939_BOOL,aux17939_INTEGER);
constraint bool2int(aux17945_BOOL,aux17945_INTEGER);
constraint bool2int(aux17951_BOOL,aux17951_INTEGER);
constraint bool2int(aux17957_BOOL,aux17957_INTEGER);
constraint bool2int(aux17963_BOOL,aux17963_INTEGER);
constraint bool2int(aux17968_BOOL,aux17968_INTEGER);
constraint bool2int(aux17974_BOOL,aux17974_INTEGER);
constraint bool2int(aux17980_BOOL,aux17980_INTEGER);
constraint bool2int(aux17986_BOOL,aux17986_INTEGER);
constraint bool2int(aux17992_BOOL,aux17992_INTEGER);
constraint bool2int(aux17998_BOOL,aux17998_INTEGER);
constraint bool2int(aux18004_BOOL,aux18004_INTEGER);
constraint bool2int(aux18010_BOOL,aux18010_INTEGER);
constraint bool2int(aux18016_BOOL,aux18016_INTEGER);
constraint bool2int(aux18022_BOOL,aux18022_INTEGER);
constraint bool2int(aux18028_BOOL,aux18028_INTEGER);
constraint bool2int(aux18034_BOOL,aux18034_INTEGER);
constraint bool2int(aux18040_BOOL,aux18040_INTEGER);
constraint bool2int(aux18046_BOOL,aux18046_INTEGER);
constraint bool2int(aux18052_BOOL,aux18052_INTEGER);
constraint bool2int(aux18058_BOOL,aux18058_INTEGER);
constraint bool2int(aux18064_BOOL,aux18064_INTEGER);
constraint bool2int(aux18070_BOOL,aux18070_INTEGER);
constraint bool2int(aux18076_BOOL,aux18076_INTEGER);
constraint bool2int(aux18082_BOOL,aux18082_INTEGER);
constraint bool2int(aux18087_BOOL,aux18087_INTEGER);
constraint bool2int(aux18093_BOOL,aux18093_INTEGER);
constraint bool2int(aux18099_BOOL,aux18099_INTEGER);
constraint bool2int(aux18105_BOOL,aux18105_INTEGER);
constraint bool2int(aux18111_BOOL,aux18111_INTEGER);
constraint bool2int(aux18117_BOOL,aux18117_INTEGER);
constraint bool2int(aux18123_BOOL,aux18123_INTEGER);
constraint bool2int(aux18129_BOOL,aux18129_INTEGER);
constraint bool2int(aux18135_BOOL,aux18135_INTEGER);
constraint bool2int(aux18141_BOOL,aux18141_INTEGER);
constraint bool2int(aux18147_BOOL,aux18147_INTEGER);
constraint bool2int(aux18153_BOOL,aux18153_INTEGER);
constraint bool2int(aux18159_BOOL,aux18159_INTEGER);
constraint bool2int(aux18165_BOOL,aux18165_INTEGER);
constraint bool2int(aux18171_BOOL,aux18171_INTEGER);
constraint bool2int(aux18177_BOOL,aux18177_INTEGER);
constraint bool2int(aux18183_BOOL,aux18183_INTEGER);
constraint bool2int(aux18189_BOOL,aux18189_INTEGER);
constraint bool2int(aux18195_BOOL,aux18195_INTEGER);
constraint bool2int(aux18201_BOOL,aux18201_INTEGER);
constraint bool2int(aux18206_BOOL,aux18206_INTEGER);
constraint bool2int(aux18212_BOOL,aux18212_INTEGER);
constraint bool2int(aux18218_BOOL,aux18218_INTEGER);
constraint bool2int(aux18224_BOOL,aux18224_INTEGER);
constraint bool2int(aux18230_BOOL,aux18230_INTEGER);
constraint bool2int(aux18236_BOOL,aux18236_INTEGER);
constraint bool2int(aux18242_BOOL,aux18242_INTEGER);
constraint bool2int(aux18248_BOOL,aux18248_INTEGER);
constraint bool2int(aux18254_BOOL,aux18254_INTEGER);
constraint bool2int(aux18260_BOOL,aux18260_INTEGER);
constraint bool2int(aux18266_BOOL,aux18266_INTEGER);
constraint bool2int(aux18272_BOOL,aux18272_INTEGER);
constraint bool2int(aux18278_BOOL,aux18278_INTEGER);
constraint bool2int(aux18284_BOOL,aux18284_INTEGER);
constraint bool2int(aux18290_BOOL,aux18290_INTEGER);
constraint bool2int(aux18296_BOOL,aux18296_INTEGER);
constraint bool2int(aux18302_BOOL,aux18302_INTEGER);
constraint bool2int(aux18308_BOOL,aux18308_INTEGER);
constraint bool2int(aux18314_BOOL,aux18314_INTEGER);
constraint bool2int(aux18320_BOOL,aux18320_INTEGER);
constraint bool2int(aux18325_BOOL,aux18325_INTEGER);
constraint bool2int(aux18331_BOOL,aux18331_INTEGER);
constraint bool2int(aux18337_BOOL,aux18337_INTEGER);
constraint bool2int(aux18343_BOOL,aux18343_INTEGER);
constraint bool2int(aux18349_BOOL,aux18349_INTEGER);
constraint bool2int(aux18355_BOOL,aux18355_INTEGER);
constraint bool2int(aux18361_BOOL,aux18361_INTEGER);
constraint bool2int(aux18367_BOOL,aux18367_INTEGER);
constraint bool2int(aux18373_BOOL,aux18373_INTEGER);
constraint bool2int(aux18379_BOOL,aux18379_INTEGER);
constraint bool2int(aux18385_BOOL,aux18385_INTEGER);
constraint bool2int(aux18391_BOOL,aux18391_INTEGER);
constraint bool2int(aux18397_BOOL,aux18397_INTEGER);
constraint bool2int(aux18403_BOOL,aux18403_INTEGER);
constraint bool2int(aux18409_BOOL,aux18409_INTEGER);
constraint bool2int(aux18415_BOOL,aux18415_INTEGER);
constraint bool2int(aux18421_BOOL,aux18421_INTEGER);
constraint bool2int(aux18427_BOOL,aux18427_INTEGER);
constraint bool2int(aux18433_BOOL,aux18433_INTEGER);
constraint bool2int(aux18439_BOOL,aux18439_INTEGER);
constraint bool2int(aux18444_BOOL,aux18444_INTEGER);
constraint bool2int(aux18450_BOOL,aux18450_INTEGER);
constraint bool2int(aux18456_BOOL,aux18456_INTEGER);
constraint bool2int(aux18462_BOOL,aux18462_INTEGER);
constraint bool2int(aux18468_BOOL,aux18468_INTEGER);
constraint bool2int(aux18474_BOOL,aux18474_INTEGER);
constraint bool2int(aux18480_BOOL,aux18480_INTEGER);
constraint bool2int(aux18486_BOOL,aux18486_INTEGER);
constraint bool2int(aux18492_BOOL,aux18492_INTEGER);
constraint bool2int(aux18498_BOOL,aux18498_INTEGER);
constraint bool2int(aux18504_BOOL,aux18504_INTEGER);
constraint bool2int(aux18510_BOOL,aux18510_INTEGER);
constraint bool2int(aux18516_BOOL,aux18516_INTEGER);
constraint bool2int(aux18522_BOOL,aux18522_INTEGER);
constraint bool2int(aux18528_BOOL,aux18528_INTEGER);
constraint bool2int(aux18534_BOOL,aux18534_INTEGER);
constraint bool2int(aux18540_BOOL,aux18540_INTEGER);
constraint bool2int(aux18546_BOOL,aux18546_INTEGER);
constraint bool2int(aux18552_BOOL,aux18552_INTEGER);
constraint bool2int(aux18558_BOOL,aux18558_INTEGER);
constraint bool2int(aux18563_BOOL,aux18563_INTEGER);
constraint bool2int(aux18569_BOOL,aux18569_INTEGER);
constraint bool2int(aux18575_BOOL,aux18575_INTEGER);
constraint bool2int(aux18581_BOOL,aux18581_INTEGER);
constraint bool2int(aux18587_BOOL,aux18587_INTEGER);
constraint bool2int(aux18593_BOOL,aux18593_INTEGER);
constraint bool2int(aux18599_BOOL,aux18599_INTEGER);
constraint bool2int(aux18605_BOOL,aux18605_INTEGER);
constraint bool2int(aux18611_BOOL,aux18611_INTEGER);
constraint bool2int(aux18617_BOOL,aux18617_INTEGER);
constraint bool2int(aux18623_BOOL,aux18623_INTEGER);
constraint bool2int(aux18629_BOOL,aux18629_INTEGER);
constraint bool2int(aux18635_BOOL,aux18635_INTEGER);
constraint bool2int(aux18641_BOOL,aux18641_INTEGER);
constraint bool2int(aux18647_BOOL,aux18647_INTEGER);
constraint bool2int(aux18653_BOOL,aux18653_INTEGER);
constraint bool2int(aux18659_BOOL,aux18659_INTEGER);
constraint bool2int(aux18665_BOOL,aux18665_INTEGER);
constraint bool2int(aux18671_BOOL,aux18671_INTEGER);
constraint bool2int(aux18677_BOOL,aux18677_INTEGER);
constraint bool2int(aux18682_BOOL,aux18682_INTEGER);
constraint bool2int(aux18688_BOOL,aux18688_INTEGER);
constraint bool2int(aux18694_BOOL,aux18694_INTEGER);
constraint bool2int(aux18700_BOOL,aux18700_INTEGER);
constraint bool2int(aux18706_BOOL,aux18706_INTEGER);
constraint bool2int(aux18712_BOOL,aux18712_INTEGER);
constraint bool2int(aux18718_BOOL,aux18718_INTEGER);
constraint bool2int(aux18724_BOOL,aux18724_INTEGER);
constraint bool2int(aux18730_BOOL,aux18730_INTEGER);
constraint bool2int(aux18736_BOOL,aux18736_INTEGER);
constraint bool2int(aux18742_BOOL,aux18742_INTEGER);
constraint bool2int(aux18748_BOOL,aux18748_INTEGER);
constraint bool2int(aux18754_BOOL,aux18754_INTEGER);
constraint bool2int(aux18760_BOOL,aux18760_INTEGER);
constraint bool2int(aux18766_BOOL,aux18766_INTEGER);
constraint bool2int(aux18772_BOOL,aux18772_INTEGER);
constraint bool2int(aux18778_BOOL,aux18778_INTEGER);
constraint bool2int(aux18784_BOOL,aux18784_INTEGER);
constraint bool2int(aux18790_BOOL,aux18790_INTEGER);
constraint bool2int(aux18796_BOOL,aux18796_INTEGER);
constraint bool2int(aux18801_BOOL,aux18801_INTEGER);
constraint bool2int(aux18807_BOOL,aux18807_INTEGER);
constraint bool2int(aux18813_BOOL,aux18813_INTEGER);
constraint bool2int(aux18819_BOOL,aux18819_INTEGER);
constraint bool2int(aux18825_BOOL,aux18825_INTEGER);
constraint bool2int(aux18831_BOOL,aux18831_INTEGER);
constraint bool2int(aux18837_BOOL,aux18837_INTEGER);
constraint bool2int(aux18843_BOOL,aux18843_INTEGER);
constraint bool2int(aux18849_BOOL,aux18849_INTEGER);
constraint bool2int(aux18855_BOOL,aux18855_INTEGER);
constraint bool2int(aux18861_BOOL,aux18861_INTEGER);
constraint bool2int(aux18867_BOOL,aux18867_INTEGER);
constraint bool2int(aux18873_BOOL,aux18873_INTEGER);
constraint bool2int(aux18879_BOOL,aux18879_INTEGER);
constraint bool2int(aux18885_BOOL,aux18885_INTEGER);
constraint bool2int(aux18891_BOOL,aux18891_INTEGER);
constraint bool2int(aux18897_BOOL,aux18897_INTEGER);
constraint bool2int(aux18903_BOOL,aux18903_INTEGER);
constraint bool2int(aux18909_BOOL,aux18909_INTEGER);
constraint bool2int(aux18915_BOOL,aux18915_INTEGER);
constraint bool2int(aux18920_BOOL,aux18920_INTEGER);
constraint bool2int(aux18926_BOOL,aux18926_INTEGER);
constraint bool2int(aux18932_BOOL,aux18932_INTEGER);
constraint bool2int(aux18938_BOOL,aux18938_INTEGER);
constraint bool2int(aux18944_BOOL,aux18944_INTEGER);
constraint bool2int(aux18950_BOOL,aux18950_INTEGER);
constraint bool2int(aux18956_BOOL,aux18956_INTEGER);
constraint bool2int(aux18962_BOOL,aux18962_INTEGER);
constraint bool2int(aux18968_BOOL,aux18968_INTEGER);
constraint bool2int(aux18974_BOOL,aux18974_INTEGER);
constraint bool2int(aux18980_BOOL,aux18980_INTEGER);
constraint bool2int(aux18986_BOOL,aux18986_INTEGER);
constraint bool2int(aux18992_BOOL,aux18992_INTEGER);
constraint bool2int(aux18998_BOOL,aux18998_INTEGER);
constraint bool2int(aux19004_BOOL,aux19004_INTEGER);
constraint bool2int(aux19010_BOOL,aux19010_INTEGER);
constraint bool2int(aux19016_BOOL,aux19016_INTEGER);
constraint bool2int(aux19022_BOOL,aux19022_INTEGER);
constraint bool2int(aux19028_BOOL,aux19028_INTEGER);
constraint bool2int(aux19034_BOOL,aux19034_INTEGER);
constraint bool2int(aux19039_BOOL,aux19039_INTEGER);
constraint bool2int(aux19045_BOOL,aux19045_INTEGER);
constraint bool2int(aux19051_BOOL,aux19051_INTEGER);
constraint bool2int(aux19057_BOOL,aux19057_INTEGER);
constraint bool2int(aux19063_BOOL,aux19063_INTEGER);
constraint bool2int(aux19069_BOOL,aux19069_INTEGER);
constraint bool2int(aux19075_BOOL,aux19075_INTEGER);
constraint bool2int(aux19081_BOOL,aux19081_INTEGER);
constraint bool2int(aux19087_BOOL,aux19087_INTEGER);
constraint bool2int(aux19093_BOOL,aux19093_INTEGER);
constraint bool2int(aux19099_BOOL,aux19099_INTEGER);
constraint bool2int(aux19105_BOOL,aux19105_INTEGER);
constraint bool2int(aux19111_BOOL,aux19111_INTEGER);
constraint bool2int(aux19117_BOOL,aux19117_INTEGER);
constraint bool2int(aux19123_BOOL,aux19123_INTEGER);
constraint bool2int(aux19129_BOOL,aux19129_INTEGER);
constraint bool2int(aux19135_BOOL,aux19135_INTEGER);
constraint bool2int(aux19141_BOOL,aux19141_INTEGER);
constraint bool2int(aux19147_BOOL,aux19147_INTEGER);
constraint bool2int(aux19153_BOOL,aux19153_INTEGER);
constraint bool2int(aux19158_BOOL,aux19158_INTEGER);
constraint bool2int(aux19164_BOOL,aux19164_INTEGER);
constraint bool2int(aux19170_BOOL,aux19170_INTEGER);
constraint bool2int(aux19176_BOOL,aux19176_INTEGER);
constraint bool2int(aux19182_BOOL,aux19182_INTEGER);
constraint bool2int(aux19188_BOOL,aux19188_INTEGER);
constraint bool2int(aux19194_BOOL,aux19194_INTEGER);
constraint bool2int(aux19200_BOOL,aux19200_INTEGER);
constraint bool2int(aux19206_BOOL,aux19206_INTEGER);
constraint bool2int(aux19212_BOOL,aux19212_INTEGER);
constraint bool2int(aux19218_BOOL,aux19218_INTEGER);
constraint bool2int(aux19224_BOOL,aux19224_INTEGER);
constraint bool2int(aux19230_BOOL,aux19230_INTEGER);
constraint bool2int(aux19236_BOOL,aux19236_INTEGER);
constraint bool2int(aux19242_BOOL,aux19242_INTEGER);
constraint bool2int(aux19248_BOOL,aux19248_INTEGER);
constraint bool2int(aux19254_BOOL,aux19254_INTEGER);
constraint bool2int(aux19260_BOOL,aux19260_INTEGER);
constraint bool2int(aux19266_BOOL,aux19266_INTEGER);
constraint bool2int(aux19272_BOOL,aux19272_INTEGER);
constraint bool2int(aux19277_BOOL,aux19277_INTEGER);
constraint bool2int(aux19283_BOOL,aux19283_INTEGER);
constraint bool2int(aux19289_BOOL,aux19289_INTEGER);
constraint bool2int(aux19295_BOOL,aux19295_INTEGER);
constraint bool2int(aux19301_BOOL,aux19301_INTEGER);
constraint bool2int(aux19307_BOOL,aux19307_INTEGER);
constraint bool2int(aux19313_BOOL,aux19313_INTEGER);
constraint bool2int(aux19319_BOOL,aux19319_INTEGER);
constraint bool2int(aux19325_BOOL,aux19325_INTEGER);
constraint bool2int(aux19331_BOOL,aux19331_INTEGER);
constraint bool2int(aux19337_BOOL,aux19337_INTEGER);
constraint bool2int(aux19343_BOOL,aux19343_INTEGER);
constraint bool2int(aux19349_BOOL,aux19349_INTEGER);
constraint bool2int(aux19355_BOOL,aux19355_INTEGER);
constraint bool2int(aux19361_BOOL,aux19361_INTEGER);
constraint bool2int(aux19367_BOOL,aux19367_INTEGER);
constraint bool2int(aux19373_BOOL,aux19373_INTEGER);
constraint bool2int(aux19379_BOOL,aux19379_INTEGER);
constraint bool2int(aux19385_BOOL,aux19385_INTEGER);
constraint bool2int(aux19391_BOOL,aux19391_INTEGER);
constraint bool2int(aux19396_BOOL,aux19396_INTEGER);
constraint bool2int(aux19402_BOOL,aux19402_INTEGER);
constraint bool2int(aux19408_BOOL,aux19408_INTEGER);
constraint bool2int(aux19414_BOOL,aux19414_INTEGER);
constraint bool2int(aux19420_BOOL,aux19420_INTEGER);
constraint bool2int(aux19426_BOOL,aux19426_INTEGER);
constraint bool2int(aux19432_BOOL,aux19432_INTEGER);
constraint bool2int(aux19438_BOOL,aux19438_INTEGER);
constraint bool2int(aux19444_BOOL,aux19444_INTEGER);
constraint bool2int(aux19450_BOOL,aux19450_INTEGER);
constraint bool2int(aux19456_BOOL,aux19456_INTEGER);
constraint bool2int(aux19462_BOOL,aux19462_INTEGER);
constraint bool2int(aux19468_BOOL,aux19468_INTEGER);
constraint bool2int(aux19474_BOOL,aux19474_INTEGER);
constraint bool2int(aux19480_BOOL,aux19480_INTEGER);
constraint bool2int(aux19486_BOOL,aux19486_INTEGER);
constraint bool2int(aux19492_BOOL,aux19492_INTEGER);
constraint bool2int(aux19498_BOOL,aux19498_INTEGER);
constraint bool2int(aux19504_BOOL,aux19504_INTEGER);
constraint bool2int(aux19510_BOOL,aux19510_INTEGER);
constraint bool2int(aux19515_BOOL,aux19515_INTEGER);
constraint bool2int(aux19521_BOOL,aux19521_INTEGER);
constraint bool2int(aux19527_BOOL,aux19527_INTEGER);
constraint bool2int(aux19533_BOOL,aux19533_INTEGER);
constraint bool2int(aux19539_BOOL,aux19539_INTEGER);
constraint bool2int(aux19545_BOOL,aux19545_INTEGER);
constraint bool2int(aux19551_BOOL,aux19551_INTEGER);
constraint bool2int(aux19557_BOOL,aux19557_INTEGER);
constraint bool2int(aux19563_BOOL,aux19563_INTEGER);
constraint bool2int(aux19569_BOOL,aux19569_INTEGER);
constraint bool2int(aux19575_BOOL,aux19575_INTEGER);
constraint bool2int(aux19581_BOOL,aux19581_INTEGER);
constraint bool2int(aux19587_BOOL,aux19587_INTEGER);
constraint bool2int(aux19593_BOOL,aux19593_INTEGER);
constraint bool2int(aux19599_BOOL,aux19599_INTEGER);
constraint bool2int(aux19605_BOOL,aux19605_INTEGER);
constraint bool2int(aux19611_BOOL,aux19611_INTEGER);
constraint bool2int(aux19617_BOOL,aux19617_INTEGER);
constraint bool2int(aux19623_BOOL,aux19623_INTEGER);
constraint bool2int(aux19629_BOOL,aux19629_INTEGER);
constraint bool2int(aux19667_BOOL,aux19667_INTEGER);
constraint bool2int(aux19671_BOOL,aux19671_INTEGER);
constraint bool2int(aux19675_BOOL,aux19675_INTEGER);
constraint bool2int(aux19679_BOOL,aux19679_INTEGER);
constraint bool2int(aux19683_BOOL,aux19683_INTEGER);
constraint bool2int(aux19687_BOOL,aux19687_INTEGER);
constraint bool2int(aux19691_BOOL,aux19691_INTEGER);
constraint bool2int(aux19695_BOOL,aux19695_INTEGER);
constraint bool2int(aux19699_BOOL,aux19699_INTEGER);
constraint bool2int(aux19703_BOOL,aux19703_INTEGER);
constraint bool2int(aux19707_BOOL,aux19707_INTEGER);
constraint bool2int(aux19709_BOOL,aux19709_INTEGER);
constraint bool2int(aux19713_BOOL,aux19713_INTEGER);
constraint bool2int(aux19717_BOOL,aux19717_INTEGER);
constraint bool2int(aux19721_BOOL,aux19721_INTEGER);
constraint bool2int(aux19725_BOOL,aux19725_INTEGER);
constraint bool2int(aux19729_BOOL,aux19729_INTEGER);
constraint bool2int(aux19733_BOOL,aux19733_INTEGER);
constraint bool2int(aux19737_BOOL,aux19737_INTEGER);
constraint bool2int(aux19741_BOOL,aux19741_INTEGER);
constraint bool2int(aux19745_BOOL,aux19745_INTEGER);
constraint bool2int(aux19749_BOOL,aux19749_INTEGER);
constraint bool2int(aux19753_BOOL,aux19753_INTEGER);
constraint bool2int(aux19755_BOOL,aux19755_INTEGER);
constraint bool2int(aux19759_BOOL,aux19759_INTEGER);
constraint bool2int(aux19763_BOOL,aux19763_INTEGER);
constraint bool2int(aux19767_BOOL,aux19767_INTEGER);
constraint bool2int(aux19771_BOOL,aux19771_INTEGER);
constraint bool2int(aux19775_BOOL,aux19775_INTEGER);
constraint bool2int(aux19779_BOOL,aux19779_INTEGER);
constraint bool2int(aux19783_BOOL,aux19783_INTEGER);
constraint bool2int(aux19787_BOOL,aux19787_INTEGER);
constraint bool2int(aux19791_BOOL,aux19791_INTEGER);
constraint bool2int(aux19795_BOOL,aux19795_INTEGER);
constraint bool2int(aux19799_BOOL,aux19799_INTEGER);
constraint bool2int(aux19801_BOOL,aux19801_INTEGER);
constraint bool2int(aux19805_BOOL,aux19805_INTEGER);
constraint bool2int(aux19809_BOOL,aux19809_INTEGER);
constraint bool2int(aux19813_BOOL,aux19813_INTEGER);
constraint bool2int(aux19817_BOOL,aux19817_INTEGER);
constraint bool2int(aux19821_BOOL,aux19821_INTEGER);
constraint bool2int(aux19825_BOOL,aux19825_INTEGER);
constraint bool2int(aux19829_BOOL,aux19829_INTEGER);
constraint bool2int(aux19833_BOOL,aux19833_INTEGER);
constraint bool2int(aux19837_BOOL,aux19837_INTEGER);
constraint bool2int(aux19841_BOOL,aux19841_INTEGER);
constraint bool2int(aux19845_BOOL,aux19845_INTEGER);
constraint bool2int(aux19847_BOOL,aux19847_INTEGER);
constraint bool2int(aux19851_BOOL,aux19851_INTEGER);
constraint bool2int(aux19855_BOOL,aux19855_INTEGER);
constraint bool2int(aux19859_BOOL,aux19859_INTEGER);
constraint bool2int(aux19863_BOOL,aux19863_INTEGER);
constraint bool2int(aux19867_BOOL,aux19867_INTEGER);
constraint bool2int(aux19871_BOOL,aux19871_INTEGER);
constraint bool2int(aux19875_BOOL,aux19875_INTEGER);
constraint bool2int(aux19879_BOOL,aux19879_INTEGER);
constraint bool2int(aux19883_BOOL,aux19883_INTEGER);
constraint bool2int(aux19887_BOOL,aux19887_INTEGER);
constraint bool2int(aux19891_BOOL,aux19891_INTEGER);
constraint bool2int(aux19893_BOOL,aux19893_INTEGER);
constraint bool2int(aux19897_BOOL,aux19897_INTEGER);
constraint bool2int(aux19901_BOOL,aux19901_INTEGER);
constraint bool2int(aux19905_BOOL,aux19905_INTEGER);
constraint bool2int(aux19909_BOOL,aux19909_INTEGER);
constraint bool2int(aux19913_BOOL,aux19913_INTEGER);
constraint bool2int(aux19917_BOOL,aux19917_INTEGER);
constraint bool2int(aux19921_BOOL,aux19921_INTEGER);
constraint bool2int(aux19925_BOOL,aux19925_INTEGER);
constraint bool2int(aux19929_BOOL,aux19929_INTEGER);
constraint bool2int(aux19933_BOOL,aux19933_INTEGER);
constraint bool2int(aux19937_BOOL,aux19937_INTEGER);
constraint bool2int(aux19939_BOOL,aux19939_INTEGER);
constraint bool2int(aux19943_BOOL,aux19943_INTEGER);
constraint bool2int(aux19947_BOOL,aux19947_INTEGER);
constraint bool2int(aux19951_BOOL,aux19951_INTEGER);
constraint bool2int(aux19955_BOOL,aux19955_INTEGER);
constraint bool2int(aux19959_BOOL,aux19959_INTEGER);
constraint bool2int(aux19963_BOOL,aux19963_INTEGER);
constraint bool2int(aux19967_BOOL,aux19967_INTEGER);
constraint bool2int(aux19971_BOOL,aux19971_INTEGER);
constraint bool2int(aux19975_BOOL,aux19975_INTEGER);
constraint bool2int(aux19979_BOOL,aux19979_INTEGER);
constraint bool2int(aux19983_BOOL,aux19983_INTEGER);
constraint bool2int(aux19985_BOOL,aux19985_INTEGER);
constraint bool2int(aux19989_BOOL,aux19989_INTEGER);
constraint bool2int(aux19993_BOOL,aux19993_INTEGER);
constraint bool2int(aux19997_BOOL,aux19997_INTEGER);
constraint bool2int(aux20001_BOOL,aux20001_INTEGER);
constraint bool2int(aux20005_BOOL,aux20005_INTEGER);
constraint bool2int(aux20009_BOOL,aux20009_INTEGER);
constraint bool2int(aux20013_BOOL,aux20013_INTEGER);
constraint bool2int(aux20017_BOOL,aux20017_INTEGER);
constraint bool2int(aux20021_BOOL,aux20021_INTEGER);
constraint bool2int(aux20025_BOOL,aux20025_INTEGER);
constraint bool2int(aux20029_BOOL,aux20029_INTEGER);
constraint bool2int(aux20031_BOOL,aux20031_INTEGER);
constraint bool2int(aux20035_BOOL,aux20035_INTEGER);
constraint bool2int(aux20039_BOOL,aux20039_INTEGER);
constraint bool2int(aux20043_BOOL,aux20043_INTEGER);
constraint bool2int(aux20047_BOOL,aux20047_INTEGER);
constraint bool2int(aux20051_BOOL,aux20051_INTEGER);
constraint bool2int(aux20055_BOOL,aux20055_INTEGER);
constraint bool2int(aux20059_BOOL,aux20059_INTEGER);
constraint bool2int(aux20063_BOOL,aux20063_INTEGER);
constraint bool2int(aux20067_BOOL,aux20067_INTEGER);
constraint bool2int(aux20071_BOOL,aux20071_INTEGER);
constraint bool2int(aux20075_BOOL,aux20075_INTEGER);
constraint bool2int(aux20077_BOOL,aux20077_INTEGER);
constraint bool2int(aux20081_BOOL,aux20081_INTEGER);
constraint bool2int(aux20085_BOOL,aux20085_INTEGER);
constraint bool2int(aux20089_BOOL,aux20089_INTEGER);
constraint bool2int(aux20093_BOOL,aux20093_INTEGER);
constraint bool2int(aux20097_BOOL,aux20097_INTEGER);
constraint bool2int(aux20101_BOOL,aux20101_INTEGER);
constraint bool2int(aux20105_BOOL,aux20105_INTEGER);
constraint bool2int(aux20109_BOOL,aux20109_INTEGER);
constraint bool2int(aux20113_BOOL,aux20113_INTEGER);
constraint bool2int(aux20117_BOOL,aux20117_INTEGER);
constraint bool2int(aux20121_BOOL,aux20121_INTEGER);
constraint bool2int(aux20123_BOOL,aux20123_INTEGER);
constraint bool2int(aux20127_BOOL,aux20127_INTEGER);
constraint bool2int(aux20131_BOOL,aux20131_INTEGER);
constraint bool2int(aux20135_BOOL,aux20135_INTEGER);
constraint bool2int(aux20139_BOOL,aux20139_INTEGER);
constraint bool2int(aux20143_BOOL,aux20143_INTEGER);
constraint bool2int(aux20147_BOOL,aux20147_INTEGER);
constraint bool2int(aux20151_BOOL,aux20151_INTEGER);
constraint bool2int(aux20155_BOOL,aux20155_INTEGER);
constraint bool2int(aux20159_BOOL,aux20159_INTEGER);
constraint bool2int(aux20163_BOOL,aux20163_INTEGER);
constraint bool2int(aux20167_BOOL,aux20167_INTEGER);
constraint bool2int(aux20169_BOOL,aux20169_INTEGER);
constraint bool2int(aux20173_BOOL,aux20173_INTEGER);
constraint bool2int(aux20177_BOOL,aux20177_INTEGER);
constraint bool2int(aux20181_BOOL,aux20181_INTEGER);
constraint bool2int(aux20185_BOOL,aux20185_INTEGER);
constraint bool2int(aux20189_BOOL,aux20189_INTEGER);
constraint bool2int(aux20193_BOOL,aux20193_INTEGER);
constraint bool2int(aux20197_BOOL,aux20197_INTEGER);
constraint bool2int(aux20201_BOOL,aux20201_INTEGER);
constraint bool2int(aux20205_BOOL,aux20205_INTEGER);
constraint bool2int(aux20209_BOOL,aux20209_INTEGER);
constraint bool2int(aux20213_BOOL,aux20213_INTEGER);
constraint bool2int(aux20215_BOOL,aux20215_INTEGER);
constraint bool2int(aux20219_BOOL,aux20219_INTEGER);
constraint bool2int(aux20223_BOOL,aux20223_INTEGER);
constraint bool2int(aux20227_BOOL,aux20227_INTEGER);
constraint bool2int(aux20231_BOOL,aux20231_INTEGER);
constraint bool2int(aux20235_BOOL,aux20235_INTEGER);
constraint bool2int(aux20239_BOOL,aux20239_INTEGER);
constraint bool2int(aux20243_BOOL,aux20243_INTEGER);
constraint bool2int(aux20247_BOOL,aux20247_INTEGER);
constraint bool2int(aux20251_BOOL,aux20251_INTEGER);
constraint bool2int(aux20255_BOOL,aux20255_INTEGER);
constraint bool2int(aux20259_BOOL,aux20259_INTEGER);
constraint bool2int(aux20263_BOOL,aux20263_INTEGER);
constraint bool2int(aux20265_BOOL,aux20265_INTEGER);
constraint bool2int(aux20269_BOOL,aux20269_INTEGER);
constraint bool2int(aux20273_BOOL,aux20273_INTEGER);
constraint bool2int(aux20277_BOOL,aux20277_INTEGER);
constraint bool2int(aux20281_BOOL,aux20281_INTEGER);
constraint bool2int(aux20285_BOOL,aux20285_INTEGER);
constraint bool2int(aux20289_BOOL,aux20289_INTEGER);
constraint bool2int(aux20293_BOOL,aux20293_INTEGER);
constraint bool2int(aux20297_BOOL,aux20297_INTEGER);
constraint bool2int(aux20301_BOOL,aux20301_INTEGER);
constraint bool2int(aux20305_BOOL,aux20305_INTEGER);
constraint bool2int(aux20309_BOOL,aux20309_INTEGER);
constraint bool2int(aux20313_BOOL,aux20313_INTEGER);
constraint bool2int(aux20315_BOOL,aux20315_INTEGER);
constraint bool2int(aux20319_BOOL,aux20319_INTEGER);
constraint bool2int(aux20323_BOOL,aux20323_INTEGER);
constraint bool2int(aux20327_BOOL,aux20327_INTEGER);
constraint bool2int(aux20331_BOOL,aux20331_INTEGER);
constraint bool2int(aux20335_BOOL,aux20335_INTEGER);
constraint bool2int(aux20339_BOOL,aux20339_INTEGER);
constraint bool2int(aux20343_BOOL,aux20343_INTEGER);
constraint bool2int(aux20347_BOOL,aux20347_INTEGER);
constraint bool2int(aux20351_BOOL,aux20351_INTEGER);
constraint bool2int(aux20355_BOOL,aux20355_INTEGER);
constraint bool2int(aux20359_BOOL,aux20359_INTEGER);
constraint bool2int(aux20363_BOOL,aux20363_INTEGER);
constraint bool2int(aux20365_BOOL,aux20365_INTEGER);
constraint bool2int(aux20369_BOOL,aux20369_INTEGER);
constraint bool2int(aux20373_BOOL,aux20373_INTEGER);
constraint bool2int(aux20377_BOOL,aux20377_INTEGER);
constraint bool2int(aux20381_BOOL,aux20381_INTEGER);
constraint bool2int(aux20385_BOOL,aux20385_INTEGER);
constraint bool2int(aux20389_BOOL,aux20389_INTEGER);
constraint bool2int(aux20393_BOOL,aux20393_INTEGER);
constraint bool2int(aux20397_BOOL,aux20397_INTEGER);
constraint bool2int(aux20401_BOOL,aux20401_INTEGER);
constraint bool2int(aux20405_BOOL,aux20405_INTEGER);
constraint bool2int(aux20409_BOOL,aux20409_INTEGER);
constraint bool2int(aux20413_BOOL,aux20413_INTEGER);
constraint bool2int(aux20415_BOOL,aux20415_INTEGER);
constraint bool2int(aux20419_BOOL,aux20419_INTEGER);
constraint bool2int(aux20423_BOOL,aux20423_INTEGER);
constraint bool2int(aux20427_BOOL,aux20427_INTEGER);
constraint bool2int(aux20431_BOOL,aux20431_INTEGER);
constraint bool2int(aux20435_BOOL,aux20435_INTEGER);
constraint bool2int(aux20439_BOOL,aux20439_INTEGER);
constraint bool2int(aux20443_BOOL,aux20443_INTEGER);
constraint bool2int(aux20447_BOOL,aux20447_INTEGER);
constraint bool2int(aux20451_BOOL,aux20451_INTEGER);
constraint bool2int(aux20455_BOOL,aux20455_INTEGER);
constraint bool2int(aux20459_BOOL,aux20459_INTEGER);
constraint bool2int(aux20463_BOOL,aux20463_INTEGER);
constraint bool2int(aux20465_BOOL,aux20465_INTEGER);
constraint bool2int(aux20469_BOOL,aux20469_INTEGER);
constraint bool2int(aux20473_BOOL,aux20473_INTEGER);
constraint bool2int(aux20477_BOOL,aux20477_INTEGER);
constraint bool2int(aux20481_BOOL,aux20481_INTEGER);
constraint bool2int(aux20485_BOOL,aux20485_INTEGER);
constraint bool2int(aux20489_BOOL,aux20489_INTEGER);
constraint bool2int(aux20493_BOOL,aux20493_INTEGER);
constraint bool2int(aux20497_BOOL,aux20497_INTEGER);
constraint bool2int(aux20501_BOOL,aux20501_INTEGER);
constraint bool2int(aux20505_BOOL,aux20505_INTEGER);
constraint bool2int(aux20509_BOOL,aux20509_INTEGER);
constraint bool2int(aux20513_BOOL,aux20513_INTEGER);
constraint bool2int(aux20515_BOOL,aux20515_INTEGER);
constraint bool2int(aux20519_BOOL,aux20519_INTEGER);
constraint bool2int(aux20523_BOOL,aux20523_INTEGER);
constraint bool2int(aux20527_BOOL,aux20527_INTEGER);
constraint bool2int(aux20531_BOOL,aux20531_INTEGER);
constraint bool2int(aux20535_BOOL,aux20535_INTEGER);
constraint bool2int(aux20539_BOOL,aux20539_INTEGER);
constraint bool2int(aux20543_BOOL,aux20543_INTEGER);
constraint bool2int(aux20547_BOOL,aux20547_INTEGER);
constraint bool2int(aux20551_BOOL,aux20551_INTEGER);
constraint bool2int(aux20555_BOOL,aux20555_INTEGER);
constraint bool2int(aux20559_BOOL,aux20559_INTEGER);
constraint bool2int(aux20563_BOOL,aux20563_INTEGER);
constraint bool2int(aux20565_BOOL,aux20565_INTEGER);
constraint bool2int(aux20569_BOOL,aux20569_INTEGER);
constraint bool2int(aux20573_BOOL,aux20573_INTEGER);
constraint bool2int(aux20577_BOOL,aux20577_INTEGER);
constraint bool2int(aux20581_BOOL,aux20581_INTEGER);
constraint bool2int(aux20585_BOOL,aux20585_INTEGER);
constraint bool2int(aux20589_BOOL,aux20589_INTEGER);
constraint bool2int(aux20593_BOOL,aux20593_INTEGER);
constraint bool2int(aux20597_BOOL,aux20597_INTEGER);
constraint bool2int(aux20601_BOOL,aux20601_INTEGER);
constraint bool2int(aux20605_BOOL,aux20605_INTEGER);
constraint bool2int(aux20609_BOOL,aux20609_INTEGER);
constraint bool2int(aux20613_BOOL,aux20613_INTEGER);
constraint bool2int(aux20615_BOOL,aux20615_INTEGER);
constraint bool2int(aux20619_BOOL,aux20619_INTEGER);
constraint bool2int(aux20623_BOOL,aux20623_INTEGER);
constraint bool2int(aux20627_BOOL,aux20627_INTEGER);
constraint bool2int(aux20631_BOOL,aux20631_INTEGER);
constraint bool2int(aux20635_BOOL,aux20635_INTEGER);
constraint bool2int(aux20639_BOOL,aux20639_INTEGER);
constraint bool2int(aux20643_BOOL,aux20643_INTEGER);
constraint bool2int(aux20647_BOOL,aux20647_INTEGER);
constraint bool2int(aux20651_BOOL,aux20651_INTEGER);
constraint bool2int(aux20655_BOOL,aux20655_INTEGER);
constraint bool2int(aux20659_BOOL,aux20659_INTEGER);
constraint bool2int(aux20663_BOOL,aux20663_INTEGER);
constraint bool2int(aux20665_BOOL,aux20665_INTEGER);
constraint bool2int(aux20669_BOOL,aux20669_INTEGER);
constraint bool2int(aux20673_BOOL,aux20673_INTEGER);
constraint bool2int(aux20677_BOOL,aux20677_INTEGER);
constraint bool2int(aux20681_BOOL,aux20681_INTEGER);
constraint bool2int(aux20685_BOOL,aux20685_INTEGER);
constraint bool2int(aux20689_BOOL,aux20689_INTEGER);
constraint bool2int(aux20693_BOOL,aux20693_INTEGER);
constraint bool2int(aux20697_BOOL,aux20697_INTEGER);
constraint bool2int(aux20701_BOOL,aux20701_INTEGER);
constraint bool2int(aux20705_BOOL,aux20705_INTEGER);
constraint bool2int(aux20709_BOOL,aux20709_INTEGER);
constraint bool2int(aux20713_BOOL,aux20713_INTEGER);
constraint bool2int(aux20715_BOOL,aux20715_INTEGER);
constraint bool2int(aux20719_BOOL,aux20719_INTEGER);
constraint bool2int(aux20723_BOOL,aux20723_INTEGER);
constraint bool2int(aux20727_BOOL,aux20727_INTEGER);
constraint bool2int(aux20731_BOOL,aux20731_INTEGER);
constraint bool2int(aux20735_BOOL,aux20735_INTEGER);
constraint bool2int(aux20739_BOOL,aux20739_INTEGER);
constraint bool2int(aux20743_BOOL,aux20743_INTEGER);
constraint bool2int(aux20747_BOOL,aux20747_INTEGER);
constraint bool2int(aux20751_BOOL,aux20751_INTEGER);
constraint bool2int(aux20755_BOOL,aux20755_INTEGER);
constraint bool2int(aux20759_BOOL,aux20759_INTEGER);
constraint bool2int(aux20763_BOOL,aux20763_INTEGER);
constraint bool2int(aux20765_BOOL,aux20765_INTEGER);
constraint bool2int(aux20769_BOOL,aux20769_INTEGER);
constraint bool2int(aux20773_BOOL,aux20773_INTEGER);
constraint bool2int(aux20777_BOOL,aux20777_INTEGER);
constraint bool2int(aux20781_BOOL,aux20781_INTEGER);
constraint bool2int(aux20785_BOOL,aux20785_INTEGER);
constraint bool2int(aux20789_BOOL,aux20789_INTEGER);
constraint bool2int(aux20793_BOOL,aux20793_INTEGER);
constraint bool2int(aux20797_BOOL,aux20797_INTEGER);
constraint bool2int(aux20801_BOOL,aux20801_INTEGER);
constraint bool2int(aux20805_BOOL,aux20805_INTEGER);
constraint bool2int(aux20809_BOOL,aux20809_INTEGER);
constraint bool2int(aux20813_BOOL,aux20813_INTEGER);
constraint bool2int(aux20815_BOOL,aux20815_INTEGER);
constraint bool2int(aux20819_BOOL,aux20819_INTEGER);
constraint bool2int(aux20823_BOOL,aux20823_INTEGER);
constraint bool2int(aux20827_BOOL,aux20827_INTEGER);
constraint bool2int(aux20831_BOOL,aux20831_INTEGER);
constraint bool2int(aux20835_BOOL,aux20835_INTEGER);
constraint bool2int(aux20839_BOOL,aux20839_INTEGER);
constraint bool2int(aux20843_BOOL,aux20843_INTEGER);
constraint bool2int(aux20847_BOOL,aux20847_INTEGER);
constraint bool2int(aux20851_BOOL,aux20851_INTEGER);
constraint bool2int(aux20855_BOOL,aux20855_INTEGER);
constraint bool2int(aux20859_BOOL,aux20859_INTEGER);
constraint bool2int(aux20863_BOOL,aux20863_INTEGER);
constraint bool2int(aux20865_BOOL,aux20865_INTEGER);
constraint bool2int(aux20869_BOOL,aux20869_INTEGER);
constraint bool2int(aux20873_BOOL,aux20873_INTEGER);
constraint bool2int(aux20877_BOOL,aux20877_INTEGER);
constraint bool2int(aux20881_BOOL,aux20881_INTEGER);
constraint bool2int(aux20885_BOOL,aux20885_INTEGER);
constraint bool2int(aux20889_BOOL,aux20889_INTEGER);
constraint bool2int(aux20893_BOOL,aux20893_INTEGER);
constraint bool2int(aux20897_BOOL,aux20897_INTEGER);
constraint bool2int(aux20901_BOOL,aux20901_INTEGER);
constraint bool2int(aux20905_BOOL,aux20905_INTEGER);
constraint bool2int(aux20909_BOOL,aux20909_INTEGER);
constraint bool2int(aux20913_BOOL,aux20913_INTEGER);
constraint bool2int(aux20917_BOOL,aux20917_INTEGER);
constraint bool2int(aux20919_BOOL,aux20919_INTEGER);
constraint bool2int(aux20923_BOOL,aux20923_INTEGER);
constraint bool2int(aux20927_BOOL,aux20927_INTEGER);
constraint bool2int(aux20931_BOOL,aux20931_INTEGER);
constraint bool2int(aux20935_BOOL,aux20935_INTEGER);
constraint bool2int(aux20939_BOOL,aux20939_INTEGER);
constraint bool2int(aux20943_BOOL,aux20943_INTEGER);
constraint bool2int(aux20947_BOOL,aux20947_INTEGER);
constraint bool2int(aux20951_BOOL,aux20951_INTEGER);
constraint bool2int(aux20955_BOOL,aux20955_INTEGER);
constraint bool2int(aux20959_BOOL,aux20959_INTEGER);
constraint bool2int(aux20963_BOOL,aux20963_INTEGER);
constraint bool2int(aux20967_BOOL,aux20967_INTEGER);
constraint bool2int(aux20971_BOOL,aux20971_INTEGER);
constraint bool2int(aux20973_BOOL,aux20973_INTEGER);
constraint bool2int(aux20977_BOOL,aux20977_INTEGER);
constraint bool2int(aux20981_BOOL,aux20981_INTEGER);
constraint bool2int(aux20985_BOOL,aux20985_INTEGER);
constraint bool2int(aux20989_BOOL,aux20989_INTEGER);
constraint bool2int(aux20993_BOOL,aux20993_INTEGER);
constraint bool2int(aux20997_BOOL,aux20997_INTEGER);
constraint bool2int(aux21001_BOOL,aux21001_INTEGER);
constraint bool2int(aux21005_BOOL,aux21005_INTEGER);
constraint bool2int(aux21009_BOOL,aux21009_INTEGER);
constraint bool2int(aux21013_BOOL,aux21013_INTEGER);
constraint bool2int(aux21017_BOOL,aux21017_INTEGER);
constraint bool2int(aux21021_BOOL,aux21021_INTEGER);
constraint bool2int(aux21025_BOOL,aux21025_INTEGER);
constraint bool2int(aux21027_BOOL,aux21027_INTEGER);
constraint bool2int(aux21031_BOOL,aux21031_INTEGER);
constraint bool2int(aux21035_BOOL,aux21035_INTEGER);
constraint bool2int(aux21039_BOOL,aux21039_INTEGER);
constraint bool2int(aux21043_BOOL,aux21043_INTEGER);
constraint bool2int(aux21047_BOOL,aux21047_INTEGER);
constraint bool2int(aux21051_BOOL,aux21051_INTEGER);
constraint bool2int(aux21055_BOOL,aux21055_INTEGER);
constraint bool2int(aux21059_BOOL,aux21059_INTEGER);
constraint bool2int(aux21063_BOOL,aux21063_INTEGER);
constraint bool2int(aux21067_BOOL,aux21067_INTEGER);
constraint bool2int(aux21071_BOOL,aux21071_INTEGER);
constraint bool2int(aux21075_BOOL,aux21075_INTEGER);
constraint bool2int(aux21079_BOOL,aux21079_INTEGER);
constraint bool2int(aux21081_BOOL,aux21081_INTEGER);
constraint bool2int(aux21085_BOOL,aux21085_INTEGER);
constraint bool2int(aux21089_BOOL,aux21089_INTEGER);
constraint bool2int(aux21093_BOOL,aux21093_INTEGER);
constraint bool2int(aux21097_BOOL,aux21097_INTEGER);
constraint bool2int(aux21101_BOOL,aux21101_INTEGER);
constraint bool2int(aux21105_BOOL,aux21105_INTEGER);
constraint bool2int(aux21109_BOOL,aux21109_INTEGER);
constraint bool2int(aux21113_BOOL,aux21113_INTEGER);
constraint bool2int(aux21117_BOOL,aux21117_INTEGER);
constraint bool2int(aux21121_BOOL,aux21121_INTEGER);
constraint bool2int(aux21125_BOOL,aux21125_INTEGER);
constraint bool2int(aux21129_BOOL,aux21129_INTEGER);
constraint bool2int(aux21133_BOOL,aux21133_INTEGER);
constraint bool2int(aux21135_BOOL,aux21135_INTEGER);
constraint bool2int(aux21139_BOOL,aux21139_INTEGER);
constraint bool2int(aux21143_BOOL,aux21143_INTEGER);
constraint bool2int(aux21147_BOOL,aux21147_INTEGER);
constraint bool2int(aux21151_BOOL,aux21151_INTEGER);
constraint bool2int(aux21155_BOOL,aux21155_INTEGER);
constraint bool2int(aux21159_BOOL,aux21159_INTEGER);
constraint bool2int(aux21163_BOOL,aux21163_INTEGER);
constraint bool2int(aux21167_BOOL,aux21167_INTEGER);
constraint bool2int(aux21171_BOOL,aux21171_INTEGER);
constraint bool2int(aux21175_BOOL,aux21175_INTEGER);
constraint bool2int(aux21179_BOOL,aux21179_INTEGER);
constraint bool2int(aux21183_BOOL,aux21183_INTEGER);
constraint bool2int(aux21187_BOOL,aux21187_INTEGER);
constraint bool2int(aux21189_BOOL,aux21189_INTEGER);
constraint bool2int(aux21193_BOOL,aux21193_INTEGER);
constraint bool2int(aux21197_BOOL,aux21197_INTEGER);
constraint bool2int(aux21201_BOOL,aux21201_INTEGER);
constraint bool2int(aux21205_BOOL,aux21205_INTEGER);
constraint bool2int(aux21209_BOOL,aux21209_INTEGER);
constraint bool2int(aux21213_BOOL,aux21213_INTEGER);
constraint bool2int(aux21217_BOOL,aux21217_INTEGER);
constraint bool2int(aux21221_BOOL,aux21221_INTEGER);
constraint bool2int(aux21225_BOOL,aux21225_INTEGER);
constraint bool2int(aux21229_BOOL,aux21229_INTEGER);
constraint bool2int(aux21233_BOOL,aux21233_INTEGER);
constraint bool2int(aux21237_BOOL,aux21237_INTEGER);
constraint bool2int(aux21241_BOOL,aux21241_INTEGER);
constraint bool2int(aux21243_BOOL,aux21243_INTEGER);
constraint bool2int(aux21247_BOOL,aux21247_INTEGER);
constraint bool2int(aux21251_BOOL,aux21251_INTEGER);
constraint bool2int(aux21255_BOOL,aux21255_INTEGER);
constraint bool2int(aux21259_BOOL,aux21259_INTEGER);
constraint bool2int(aux21263_BOOL,aux21263_INTEGER);
constraint bool2int(aux21267_BOOL,aux21267_INTEGER);
constraint bool2int(aux21271_BOOL,aux21271_INTEGER);
constraint bool2int(aux21275_BOOL,aux21275_INTEGER);
constraint bool2int(aux21279_BOOL,aux21279_INTEGER);
constraint bool2int(aux21283_BOOL,aux21283_INTEGER);
constraint bool2int(aux21287_BOOL,aux21287_INTEGER);
constraint bool2int(aux21291_BOOL,aux21291_INTEGER);
constraint bool2int(aux21295_BOOL,aux21295_INTEGER);
constraint bool2int(aux21297_BOOL,aux21297_INTEGER);
constraint bool2int(aux21301_BOOL,aux21301_INTEGER);
constraint bool2int(aux21305_BOOL,aux21305_INTEGER);
constraint bool2int(aux21309_BOOL,aux21309_INTEGER);
constraint bool2int(aux21313_BOOL,aux21313_INTEGER);
constraint bool2int(aux21317_BOOL,aux21317_INTEGER);
constraint bool2int(aux21321_BOOL,aux21321_INTEGER);
constraint bool2int(aux21325_BOOL,aux21325_INTEGER);
constraint bool2int(aux21329_BOOL,aux21329_INTEGER);
constraint bool2int(aux21333_BOOL,aux21333_INTEGER);
constraint bool2int(aux21337_BOOL,aux21337_INTEGER);
constraint bool2int(aux21341_BOOL,aux21341_INTEGER);
constraint bool2int(aux21345_BOOL,aux21345_INTEGER);
constraint bool2int(aux21349_BOOL,aux21349_INTEGER);
constraint bool2int(aux21351_BOOL,aux21351_INTEGER);
constraint bool2int(aux21355_BOOL,aux21355_INTEGER);
constraint bool2int(aux21359_BOOL,aux21359_INTEGER);
constraint bool2int(aux21363_BOOL,aux21363_INTEGER);
constraint bool2int(aux21367_BOOL,aux21367_INTEGER);
constraint bool2int(aux21371_BOOL,aux21371_INTEGER);
constraint bool2int(aux21375_BOOL,aux21375_INTEGER);
constraint bool2int(aux21379_BOOL,aux21379_INTEGER);
constraint bool2int(aux21383_BOOL,aux21383_INTEGER);
constraint bool2int(aux21387_BOOL,aux21387_INTEGER);
constraint bool2int(aux21391_BOOL,aux21391_INTEGER);
constraint bool2int(aux21395_BOOL,aux21395_INTEGER);
constraint bool2int(aux21399_BOOL,aux21399_INTEGER);
constraint bool2int(aux21403_BOOL,aux21403_INTEGER);
constraint bool2int(aux21405_BOOL,aux21405_INTEGER);
constraint bool2int(aux21409_BOOL,aux21409_INTEGER);
constraint bool2int(aux21413_BOOL,aux21413_INTEGER);
constraint bool2int(aux21417_BOOL,aux21417_INTEGER);
constraint bool2int(aux21421_BOOL,aux21421_INTEGER);
constraint bool2int(aux21425_BOOL,aux21425_INTEGER);
constraint bool2int(aux21429_BOOL,aux21429_INTEGER);
constraint bool2int(aux21433_BOOL,aux21433_INTEGER);
constraint bool2int(aux21437_BOOL,aux21437_INTEGER);
constraint bool2int(aux21441_BOOL,aux21441_INTEGER);
constraint bool2int(aux21445_BOOL,aux21445_INTEGER);
constraint bool2int(aux21449_BOOL,aux21449_INTEGER);
constraint bool2int(aux21453_BOOL,aux21453_INTEGER);
constraint bool2int(aux21457_BOOL,aux21457_INTEGER);
constraint bool2int(aux21459_BOOL,aux21459_INTEGER);
constraint bool2int(aux21463_BOOL,aux21463_INTEGER);
constraint bool2int(aux21467_BOOL,aux21467_INTEGER);
constraint bool2int(aux21471_BOOL,aux21471_INTEGER);
constraint bool2int(aux21475_BOOL,aux21475_INTEGER);
constraint bool2int(aux21479_BOOL,aux21479_INTEGER);
constraint bool2int(aux21483_BOOL,aux21483_INTEGER);
constraint bool2int(aux21487_BOOL,aux21487_INTEGER);
constraint bool2int(aux21491_BOOL,aux21491_INTEGER);
constraint bool2int(aux21495_BOOL,aux21495_INTEGER);
constraint bool2int(aux21499_BOOL,aux21499_INTEGER);
constraint bool2int(aux21503_BOOL,aux21503_INTEGER);
constraint bool2int(aux21507_BOOL,aux21507_INTEGER);
constraint bool2int(aux21511_BOOL,aux21511_INTEGER);
constraint bool2int(aux21513_BOOL,aux21513_INTEGER);
constraint bool2int(aux21517_BOOL,aux21517_INTEGER);
constraint bool2int(aux21521_BOOL,aux21521_INTEGER);
constraint bool2int(aux21525_BOOL,aux21525_INTEGER);
constraint bool2int(aux21529_BOOL,aux21529_INTEGER);
constraint bool2int(aux21533_BOOL,aux21533_INTEGER);
constraint bool2int(aux21537_BOOL,aux21537_INTEGER);
constraint bool2int(aux21541_BOOL,aux21541_INTEGER);
constraint bool2int(aux21545_BOOL,aux21545_INTEGER);
constraint bool2int(aux21549_BOOL,aux21549_INTEGER);
constraint bool2int(aux21553_BOOL,aux21553_INTEGER);
constraint bool2int(aux21557_BOOL,aux21557_INTEGER);
constraint bool2int(aux21561_BOOL,aux21561_INTEGER);
constraint bool2int(aux21565_BOOL,aux21565_INTEGER);
constraint bool2int(aux21567_BOOL,aux21567_INTEGER);
constraint bool2int(aux21571_BOOL,aux21571_INTEGER);
constraint bool2int(aux21575_BOOL,aux21575_INTEGER);
constraint bool2int(aux21579_BOOL,aux21579_INTEGER);
constraint bool2int(aux21583_BOOL,aux21583_INTEGER);
constraint bool2int(aux21587_BOOL,aux21587_INTEGER);
constraint bool2int(aux21591_BOOL,aux21591_INTEGER);
constraint bool2int(aux21595_BOOL,aux21595_INTEGER);
constraint bool2int(aux21599_BOOL,aux21599_INTEGER);
constraint bool2int(aux21603_BOOL,aux21603_INTEGER);
constraint bool2int(aux21607_BOOL,aux21607_INTEGER);
constraint bool2int(aux21611_BOOL,aux21611_INTEGER);
constraint bool2int(aux21615_BOOL,aux21615_INTEGER);
constraint bool2int(aux21619_BOOL,aux21619_INTEGER);
constraint bool2int(aux21621_BOOL,aux21621_INTEGER);
constraint bool2int(aux21625_BOOL,aux21625_INTEGER);
constraint bool2int(aux21629_BOOL,aux21629_INTEGER);
constraint bool2int(aux21633_BOOL,aux21633_INTEGER);
constraint bool2int(aux21637_BOOL,aux21637_INTEGER);
constraint bool2int(aux21641_BOOL,aux21641_INTEGER);
constraint bool2int(aux21645_BOOL,aux21645_INTEGER);
constraint bool2int(aux21649_BOOL,aux21649_INTEGER);
constraint bool2int(aux21653_BOOL,aux21653_INTEGER);
constraint bool2int(aux21657_BOOL,aux21657_INTEGER);
constraint bool2int(aux21661_BOOL,aux21661_INTEGER);
constraint bool2int(aux21663_BOOL,aux21663_INTEGER);
constraint bool2int(aux21667_BOOL,aux21667_INTEGER);
constraint bool2int(aux21671_BOOL,aux21671_INTEGER);
constraint bool2int(aux21675_BOOL,aux21675_INTEGER);
constraint bool2int(aux21679_BOOL,aux21679_INTEGER);
constraint bool2int(aux21683_BOOL,aux21683_INTEGER);
constraint bool2int(aux21687_BOOL,aux21687_INTEGER);
constraint bool2int(aux21691_BOOL,aux21691_INTEGER);
constraint bool2int(aux21695_BOOL,aux21695_INTEGER);
constraint bool2int(aux21699_BOOL,aux21699_INTEGER);
constraint bool2int(aux21703_BOOL,aux21703_INTEGER);
constraint bool2int(aux21705_BOOL,aux21705_INTEGER);
constraint bool2int(aux21709_BOOL,aux21709_INTEGER);
constraint bool2int(aux21713_BOOL,aux21713_INTEGER);
constraint bool2int(aux21717_BOOL,aux21717_INTEGER);
constraint bool2int(aux21721_BOOL,aux21721_INTEGER);
constraint bool2int(aux21725_BOOL,aux21725_INTEGER);
constraint bool2int(aux21729_BOOL,aux21729_INTEGER);
constraint bool2int(aux21733_BOOL,aux21733_INTEGER);
constraint bool2int(aux21737_BOOL,aux21737_INTEGER);
constraint bool2int(aux21741_BOOL,aux21741_INTEGER);
constraint bool2int(aux21745_BOOL,aux21745_INTEGER);
constraint bool2int(aux21747_BOOL,aux21747_INTEGER);
constraint bool2int(aux21751_BOOL,aux21751_INTEGER);
constraint bool2int(aux21755_BOOL,aux21755_INTEGER);
constraint bool2int(aux21759_BOOL,aux21759_INTEGER);
constraint bool2int(aux21763_BOOL,aux21763_INTEGER);
constraint bool2int(aux21767_BOOL,aux21767_INTEGER);
constraint bool2int(aux21771_BOOL,aux21771_INTEGER);
constraint bool2int(aux21775_BOOL,aux21775_INTEGER);
constraint bool2int(aux21779_BOOL,aux21779_INTEGER);
constraint bool2int(aux21783_BOOL,aux21783_INTEGER);
constraint bool2int(aux21787_BOOL,aux21787_INTEGER);
constraint bool2int(aux21789_BOOL,aux21789_INTEGER);
constraint bool2int(aux21793_BOOL,aux21793_INTEGER);
constraint bool2int(aux21797_BOOL,aux21797_INTEGER);
constraint bool2int(aux21801_BOOL,aux21801_INTEGER);
constraint bool2int(aux21805_BOOL,aux21805_INTEGER);
constraint bool2int(aux21809_BOOL,aux21809_INTEGER);
constraint bool2int(aux21813_BOOL,aux21813_INTEGER);
constraint bool2int(aux21817_BOOL,aux21817_INTEGER);
constraint bool2int(aux21821_BOOL,aux21821_INTEGER);
constraint bool2int(aux21825_BOOL,aux21825_INTEGER);
constraint bool2int(aux21829_BOOL,aux21829_INTEGER);
constraint bool2int(aux21831_BOOL,aux21831_INTEGER);
constraint bool2int(aux21835_BOOL,aux21835_INTEGER);
constraint bool2int(aux21839_BOOL,aux21839_INTEGER);
constraint bool2int(aux21843_BOOL,aux21843_INTEGER);
constraint bool2int(aux21847_BOOL,aux21847_INTEGER);
constraint bool2int(aux21851_BOOL,aux21851_INTEGER);
constraint bool2int(aux21855_BOOL,aux21855_INTEGER);
constraint bool2int(aux21859_BOOL,aux21859_INTEGER);
constraint bool2int(aux21863_BOOL,aux21863_INTEGER);
constraint bool2int(aux21867_BOOL,aux21867_INTEGER);
constraint bool2int(aux21871_BOOL,aux21871_INTEGER);
constraint bool2int(aux21873_BOOL,aux21873_INTEGER);
constraint bool2int(aux21877_BOOL,aux21877_INTEGER);
constraint bool2int(aux21881_BOOL,aux21881_INTEGER);
constraint bool2int(aux21885_BOOL,aux21885_INTEGER);
constraint bool2int(aux21889_BOOL,aux21889_INTEGER);
constraint bool2int(aux21893_BOOL,aux21893_INTEGER);
constraint bool2int(aux21897_BOOL,aux21897_INTEGER);
constraint bool2int(aux21901_BOOL,aux21901_INTEGER);
constraint bool2int(aux21905_BOOL,aux21905_INTEGER);
constraint bool2int(aux21909_BOOL,aux21909_INTEGER);
constraint bool2int(aux21913_BOOL,aux21913_INTEGER);
constraint bool2int(aux21915_BOOL,aux21915_INTEGER);
constraint bool2int(aux21919_BOOL,aux21919_INTEGER);
constraint bool2int(aux21923_BOOL,aux21923_INTEGER);
constraint bool2int(aux21927_BOOL,aux21927_INTEGER);
constraint bool2int(aux21931_BOOL,aux21931_INTEGER);
constraint bool2int(aux21935_BOOL,aux21935_INTEGER);
constraint bool2int(aux21939_BOOL,aux21939_INTEGER);
constraint bool2int(aux21943_BOOL,aux21943_INTEGER);
constraint bool2int(aux21947_BOOL,aux21947_INTEGER);
constraint bool2int(aux21951_BOOL,aux21951_INTEGER);
constraint bool2int(aux21955_BOOL,aux21955_INTEGER);
constraint bool2int(aux21957_BOOL,aux21957_INTEGER);
constraint bool2int(aux21961_BOOL,aux21961_INTEGER);
constraint bool2int(aux21965_BOOL,aux21965_INTEGER);
constraint bool2int(aux21969_BOOL,aux21969_INTEGER);
constraint bool2int(aux21973_BOOL,aux21973_INTEGER);
constraint bool2int(aux21977_BOOL,aux21977_INTEGER);
constraint bool2int(aux21981_BOOL,aux21981_INTEGER);
constraint bool2int(aux21985_BOOL,aux21985_INTEGER);
constraint bool2int(aux21989_BOOL,aux21989_INTEGER);
constraint bool2int(aux21993_BOOL,aux21993_INTEGER);
constraint bool2int(aux21997_BOOL,aux21997_INTEGER);
constraint bool2int(aux21999_BOOL,aux21999_INTEGER);
constraint bool2int(aux22003_BOOL,aux22003_INTEGER);
constraint bool2int(aux22007_BOOL,aux22007_INTEGER);
constraint bool2int(aux22011_BOOL,aux22011_INTEGER);
constraint bool2int(aux22015_BOOL,aux22015_INTEGER);
constraint bool2int(aux22019_BOOL,aux22019_INTEGER);
constraint bool2int(aux22023_BOOL,aux22023_INTEGER);
constraint bool2int(aux22027_BOOL,aux22027_INTEGER);
constraint bool2int(aux22031_BOOL,aux22031_INTEGER);
constraint bool2int(aux22035_BOOL,aux22035_INTEGER);
constraint bool2int(aux22039_BOOL,aux22039_INTEGER);
constraint bool2int(aux22041_BOOL,aux22041_INTEGER);
constraint bool2int(aux22045_BOOL,aux22045_INTEGER);
constraint bool2int(aux22049_BOOL,aux22049_INTEGER);
constraint bool2int(aux22053_BOOL,aux22053_INTEGER);
constraint bool2int(aux22057_BOOL,aux22057_INTEGER);
constraint bool2int(aux22061_BOOL,aux22061_INTEGER);
constraint bool2int(aux22065_BOOL,aux22065_INTEGER);
constraint bool2int(aux22069_BOOL,aux22069_INTEGER);
constraint bool2int(aux22073_BOOL,aux22073_INTEGER);
constraint bool2int(aux22077_BOOL,aux22077_INTEGER);
constraint bool2int(aux22081_BOOL,aux22081_INTEGER);
constraint bool2int(aux22083_BOOL,aux22083_INTEGER);
constraint bool2int(aux22087_BOOL,aux22087_INTEGER);
constraint bool2int(aux22091_BOOL,aux22091_INTEGER);
constraint bool2int(aux22095_BOOL,aux22095_INTEGER);
constraint bool2int(aux22099_BOOL,aux22099_INTEGER);
constraint bool2int(aux22103_BOOL,aux22103_INTEGER);
constraint bool2int(aux22107_BOOL,aux22107_INTEGER);
constraint bool2int(aux22111_BOOL,aux22111_INTEGER);
constraint bool2int(aux22115_BOOL,aux22115_INTEGER);
constraint bool2int(aux22119_BOOL,aux22119_INTEGER);
constraint bool2int(aux22123_BOOL,aux22123_INTEGER);
constraint bool2int(aux22127_BOOL,aux22127_INTEGER);
constraint bool2int(aux22131_BOOL,aux22131_INTEGER);
constraint bool2int(aux22133_BOOL,aux22133_INTEGER);
constraint bool2int(aux22137_BOOL,aux22137_INTEGER);
constraint bool2int(aux22141_BOOL,aux22141_INTEGER);
constraint bool2int(aux22145_BOOL,aux22145_INTEGER);
constraint bool2int(aux22149_BOOL,aux22149_INTEGER);
constraint bool2int(aux22153_BOOL,aux22153_INTEGER);
constraint bool2int(aux22157_BOOL,aux22157_INTEGER);
constraint bool2int(aux22161_BOOL,aux22161_INTEGER);
constraint bool2int(aux22165_BOOL,aux22165_INTEGER);
constraint bool2int(aux22169_BOOL,aux22169_INTEGER);
constraint bool2int(aux22173_BOOL,aux22173_INTEGER);
constraint bool2int(aux22177_BOOL,aux22177_INTEGER);
constraint bool2int(aux22181_BOOL,aux22181_INTEGER);
constraint bool2int(aux22183_BOOL,aux22183_INTEGER);
constraint bool2int(aux22187_BOOL,aux22187_INTEGER);
constraint bool2int(aux22191_BOOL,aux22191_INTEGER);
constraint bool2int(aux22195_BOOL,aux22195_INTEGER);
constraint bool2int(aux22199_BOOL,aux22199_INTEGER);
constraint bool2int(aux22203_BOOL,aux22203_INTEGER);
constraint bool2int(aux22207_BOOL,aux22207_INTEGER);
constraint bool2int(aux22211_BOOL,aux22211_INTEGER);
constraint bool2int(aux22215_BOOL,aux22215_INTEGER);
constraint bool2int(aux22219_BOOL,aux22219_INTEGER);
constraint bool2int(aux22223_BOOL,aux22223_INTEGER);
constraint bool2int(aux22227_BOOL,aux22227_INTEGER);
constraint bool2int(aux22231_BOOL,aux22231_INTEGER);
constraint bool2int(aux22233_BOOL,aux22233_INTEGER);
constraint bool2int(aux22237_BOOL,aux22237_INTEGER);
constraint bool2int(aux22241_BOOL,aux22241_INTEGER);
constraint bool2int(aux22245_BOOL,aux22245_INTEGER);
constraint bool2int(aux22249_BOOL,aux22249_INTEGER);
constraint bool2int(aux22253_BOOL,aux22253_INTEGER);
constraint bool2int(aux22257_BOOL,aux22257_INTEGER);
constraint bool2int(aux22261_BOOL,aux22261_INTEGER);
constraint bool2int(aux22265_BOOL,aux22265_INTEGER);
constraint bool2int(aux22269_BOOL,aux22269_INTEGER);
constraint bool2int(aux22273_BOOL,aux22273_INTEGER);
constraint bool2int(aux22277_BOOL,aux22277_INTEGER);
constraint bool2int(aux22281_BOOL,aux22281_INTEGER);
constraint bool2int(aux22283_BOOL,aux22283_INTEGER);
constraint bool2int(aux22287_BOOL,aux22287_INTEGER);
constraint bool2int(aux22291_BOOL,aux22291_INTEGER);
constraint bool2int(aux22295_BOOL,aux22295_INTEGER);
constraint bool2int(aux22299_BOOL,aux22299_INTEGER);
constraint bool2int(aux22303_BOOL,aux22303_INTEGER);
constraint bool2int(aux22307_BOOL,aux22307_INTEGER);
constraint bool2int(aux22311_BOOL,aux22311_INTEGER);
constraint bool2int(aux22315_BOOL,aux22315_INTEGER);
constraint bool2int(aux22319_BOOL,aux22319_INTEGER);
constraint bool2int(aux22323_BOOL,aux22323_INTEGER);
constraint bool2int(aux22327_BOOL,aux22327_INTEGER);
constraint bool2int(aux22331_BOOL,aux22331_INTEGER);
constraint bool2int(aux22333_BOOL,aux22333_INTEGER);
constraint bool2int(aux22337_BOOL,aux22337_INTEGER);
constraint bool2int(aux22341_BOOL,aux22341_INTEGER);
constraint bool2int(aux22345_BOOL,aux22345_INTEGER);
constraint bool2int(aux22349_BOOL,aux22349_INTEGER);
constraint bool2int(aux22353_BOOL,aux22353_INTEGER);
constraint bool2int(aux22357_BOOL,aux22357_INTEGER);
constraint bool2int(aux22361_BOOL,aux22361_INTEGER);
constraint bool2int(aux22365_BOOL,aux22365_INTEGER);
constraint bool2int(aux22369_BOOL,aux22369_INTEGER);
constraint bool2int(aux22373_BOOL,aux22373_INTEGER);
constraint bool2int(aux22377_BOOL,aux22377_INTEGER);
constraint bool2int(aux22381_BOOL,aux22381_INTEGER);
constraint bool2int(aux22383_BOOL,aux22383_INTEGER);
constraint bool2int(aux22387_BOOL,aux22387_INTEGER);
constraint bool2int(aux22391_BOOL,aux22391_INTEGER);
constraint bool2int(aux22395_BOOL,aux22395_INTEGER);
constraint bool2int(aux22399_BOOL,aux22399_INTEGER);
constraint bool2int(aux22403_BOOL,aux22403_INTEGER);
constraint bool2int(aux22407_BOOL,aux22407_INTEGER);
constraint bool2int(aux22411_BOOL,aux22411_INTEGER);
constraint bool2int(aux22415_BOOL,aux22415_INTEGER);
constraint bool2int(aux22419_BOOL,aux22419_INTEGER);
constraint bool2int(aux22423_BOOL,aux22423_INTEGER);
constraint bool2int(aux22427_BOOL,aux22427_INTEGER);
constraint bool2int(aux22431_BOOL,aux22431_INTEGER);
constraint bool2int(aux22433_BOOL,aux22433_INTEGER);
constraint bool2int(aux22437_BOOL,aux22437_INTEGER);
constraint bool2int(aux22441_BOOL,aux22441_INTEGER);
constraint bool2int(aux22445_BOOL,aux22445_INTEGER);
constraint bool2int(aux22449_BOOL,aux22449_INTEGER);
constraint bool2int(aux22453_BOOL,aux22453_INTEGER);
constraint bool2int(aux22457_BOOL,aux22457_INTEGER);
constraint bool2int(aux22461_BOOL,aux22461_INTEGER);
constraint bool2int(aux22465_BOOL,aux22465_INTEGER);
constraint bool2int(aux22469_BOOL,aux22469_INTEGER);
constraint bool2int(aux22473_BOOL,aux22473_INTEGER);
constraint bool2int(aux22477_BOOL,aux22477_INTEGER);
constraint bool2int(aux22481_BOOL,aux22481_INTEGER);
constraint bool2int(aux22483_BOOL,aux22483_INTEGER);
constraint bool2int(aux22487_BOOL,aux22487_INTEGER);
constraint bool2int(aux22491_BOOL,aux22491_INTEGER);
constraint bool2int(aux22495_BOOL,aux22495_INTEGER);
constraint bool2int(aux22499_BOOL,aux22499_INTEGER);
constraint bool2int(aux22503_BOOL,aux22503_INTEGER);
constraint bool2int(aux22507_BOOL,aux22507_INTEGER);
constraint bool2int(aux22511_BOOL,aux22511_INTEGER);
constraint bool2int(aux22515_BOOL,aux22515_INTEGER);
constraint bool2int(aux22519_BOOL,aux22519_INTEGER);
constraint bool2int(aux22523_BOOL,aux22523_INTEGER);
constraint bool2int(aux22527_BOOL,aux22527_INTEGER);
constraint bool2int(aux22531_BOOL,aux22531_INTEGER);
constraint bool2int(aux22533_BOOL,aux22533_INTEGER);
constraint bool2int(aux22537_BOOL,aux22537_INTEGER);
constraint bool2int(aux22541_BOOL,aux22541_INTEGER);
constraint bool2int(aux22545_BOOL,aux22545_INTEGER);
constraint bool2int(aux22549_BOOL,aux22549_INTEGER);
constraint bool2int(aux22553_BOOL,aux22553_INTEGER);
constraint bool2int(aux22557_BOOL,aux22557_INTEGER);
constraint bool2int(aux22561_BOOL,aux22561_INTEGER);
constraint bool2int(aux22565_BOOL,aux22565_INTEGER);
constraint bool2int(aux22569_BOOL,aux22569_INTEGER);
constraint bool2int(aux22573_BOOL,aux22573_INTEGER);
constraint bool2int(aux22577_BOOL,aux22577_INTEGER);
constraint bool2int(aux22581_BOOL,aux22581_INTEGER);
constraint bool2int(aux22583_BOOL,aux22583_INTEGER);
constraint bool2int(aux22587_BOOL,aux22587_INTEGER);
constraint bool2int(aux22591_BOOL,aux22591_INTEGER);
constraint bool2int(aux22595_BOOL,aux22595_INTEGER);
constraint bool2int(aux22599_BOOL,aux22599_INTEGER);
constraint bool2int(aux22603_BOOL,aux22603_INTEGER);
constraint bool2int(aux22607_BOOL,aux22607_INTEGER);
constraint bool2int(aux22611_BOOL,aux22611_INTEGER);
constraint bool2int(aux22615_BOOL,aux22615_INTEGER);
constraint bool2int(aux22619_BOOL,aux22619_INTEGER);
constraint bool2int(aux22623_BOOL,aux22623_INTEGER);
constraint bool2int(aux22627_BOOL,aux22627_INTEGER);
constraint bool2int(aux22631_BOOL,aux22631_INTEGER);
constraint bool2int(aux22633_BOOL,aux22633_INTEGER);
constraint bool2int(aux22637_BOOL,aux22637_INTEGER);
constraint bool2int(aux22641_BOOL,aux22641_INTEGER);
constraint bool2int(aux22645_BOOL,aux22645_INTEGER);
constraint bool2int(aux22649_BOOL,aux22649_INTEGER);
constraint bool2int(aux22653_BOOL,aux22653_INTEGER);
constraint bool2int(aux22657_BOOL,aux22657_INTEGER);
constraint bool2int(aux22661_BOOL,aux22661_INTEGER);
constraint bool2int(aux22665_BOOL,aux22665_INTEGER);
constraint bool2int(aux22669_BOOL,aux22669_INTEGER);
constraint bool2int(aux22673_BOOL,aux22673_INTEGER);
constraint bool2int(aux22677_BOOL,aux22677_INTEGER);
constraint bool2int(aux22681_BOOL,aux22681_INTEGER);
constraint bool2int(aux22683_BOOL,aux22683_INTEGER);
constraint bool2int(aux22687_BOOL,aux22687_INTEGER);
constraint bool2int(aux22691_BOOL,aux22691_INTEGER);
constraint bool2int(aux22695_BOOL,aux22695_INTEGER);
constraint bool2int(aux22699_BOOL,aux22699_INTEGER);
constraint bool2int(aux22703_BOOL,aux22703_INTEGER);
constraint bool2int(aux22707_BOOL,aux22707_INTEGER);
constraint bool2int(aux22711_BOOL,aux22711_INTEGER);
constraint bool2int(aux22715_BOOL,aux22715_INTEGER);
constraint bool2int(aux22719_BOOL,aux22719_INTEGER);
constraint bool2int(aux22723_BOOL,aux22723_INTEGER);
constraint bool2int(aux22727_BOOL,aux22727_INTEGER);
constraint bool2int(aux22731_BOOL,aux22731_INTEGER);
constraint bool2int(aux22733_BOOL,aux22733_INTEGER);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux10_BOOL);
constraint array_bool_and([aux10_BOOL,w_00001_00011_BOOL],aux11_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux12_BOOL);
constraint array_bool_and([aux12_BOOL,w_00005_00011_BOOL],aux13_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux14_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux14_BOOL],aux15_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux16_BOOL);
constraint array_bool_and([w_00008_00011_BOOL,aux16_BOOL],aux17_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux18_BOOL);
constraint array_bool_and([aux18_BOOL,w_00004_00001_BOOL],aux19_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux20_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux20_BOOL],aux21_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux22_BOOL);
constraint array_bool_and([w_00007_00001_BOOL,aux22_BOOL],aux23_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux24_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux24_BOOL],aux25_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux26_BOOL);
constraint array_bool_and([aux26_BOOL,w_00005_00001_BOOL],aux27_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux28_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux28_BOOL],aux29_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux30_BOOL);
constraint array_bool_and([aux30_BOOL,w_00001_00001_BOOL],aux31_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux32_BOOL);
constraint array_bool_and([aux32_BOOL,w_00005_00001_BOOL],aux33_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux34_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux34_BOOL],aux35_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux36_BOOL);
constraint array_bool_and([w_00008_00001_BOOL,aux36_BOOL],aux37_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux38_BOOL);
constraint array_bool_and([aux38_BOOL,w_00001_00001_BOOL],aux39_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux40_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux40_BOOL],aux41_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux42_BOOL);
constraint array_bool_and([w_00007_00001_BOOL,aux42_BOOL],aux43_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux44_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux44_BOOL],aux45_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux46_BOOL);
constraint array_bool_and([aux46_BOOL,w_00004_00001_BOOL],aux47_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux48_BOOL);
constraint array_bool_and([w_00008_00001_BOOL,aux48_BOOL],aux49_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux50_BOOL);
constraint array_bool_and([aux50_BOOL,w_00004_00002_BOOL],aux51_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux52_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux52_BOOL],aux53_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux54_BOOL);
constraint array_bool_and([w_00007_00002_BOOL,aux54_BOOL],aux55_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux56_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux56_BOOL],aux57_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux58_BOOL);
constraint array_bool_and([aux58_BOOL,w_00004_00002_BOOL],aux59_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux60_BOOL);
constraint array_bool_and([w_00008_00002_BOOL,aux60_BOOL],aux61_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux62_BOOL);
constraint array_bool_and([aux62_BOOL,w_00004_00003_BOOL],aux63_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux64_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux64_BOOL],aux65_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux66_BOOL);
constraint array_bool_and([w_00007_00003_BOOL,aux66_BOOL],aux67_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux68_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux68_BOOL],aux69_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux70_BOOL);
constraint array_bool_and([aux70_BOOL,w_00005_00003_BOOL],aux71_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux72_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux72_BOOL],aux73_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux74_BOOL);
constraint array_bool_and([aux74_BOOL,w_00001_00003_BOOL],aux75_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux76_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux76_BOOL],aux77_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux78_BOOL);
constraint array_bool_and([w_00007_00003_BOOL,aux78_BOOL],aux79_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux80_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux80_BOOL],aux81_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux82_BOOL);
constraint array_bool_and([aux82_BOOL,w_00004_00003_BOOL],aux83_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux84_BOOL);
constraint array_bool_and([w_00008_00003_BOOL,aux84_BOOL],aux85_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux86_BOOL);
constraint array_bool_and([aux86_BOOL,w_00004_00004_BOOL],aux87_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux88_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux88_BOOL],aux89_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux90_BOOL);
constraint array_bool_and([w_00007_00004_BOOL,aux90_BOOL],aux91_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux92_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux92_BOOL],aux93_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux94_BOOL);
constraint array_bool_and([aux94_BOOL,w_00005_00004_BOOL],aux95_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux96_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux96_BOOL],aux97_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux98_BOOL);
constraint array_bool_and([aux98_BOOL,w_00001_00004_BOOL],aux99_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux100_BOOL);
constraint array_bool_and([aux100_BOOL,w_00005_00004_BOOL],aux101_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux102_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux102_BOOL],aux103_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux104_BOOL);
constraint array_bool_and([w_00008_00004_BOOL,aux104_BOOL],aux105_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux106_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux106_BOOL],aux107_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux108_BOOL);
constraint array_bool_and([aux108_BOOL,w_00005_00005_BOOL],aux109_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux110_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux110_BOOL],aux111_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux112_BOOL);
constraint array_bool_and([aux112_BOOL,w_00001_00005_BOOL],aux113_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux114_BOOL);
constraint array_bool_and([aux114_BOOL,w_00005_00005_BOOL],aux115_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux116_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux116_BOOL],aux117_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux118_BOOL);
constraint array_bool_and([w_00008_00005_BOOL,aux118_BOOL],aux119_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux120_BOOL);
constraint array_bool_and([aux120_BOOL,w_00004_00006_BOOL],aux121_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux122_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux122_BOOL],aux123_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux124_BOOL);
constraint array_bool_and([w_00007_00006_BOOL,aux124_BOOL],aux125_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux126_BOOL);
constraint array_bool_and([aux126_BOOL,w_00001_00006_BOOL],aux127_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux128_BOOL);
constraint array_bool_and([aux128_BOOL,w_00005_00006_BOOL],aux129_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux130_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux130_BOOL],aux131_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux132_BOOL);
constraint array_bool_and([w_00008_00006_BOOL,aux132_BOOL],aux133_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux134_BOOL);
constraint array_bool_and([aux134_BOOL,w_00001_00006_BOOL],aux135_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux136_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux136_BOOL],aux137_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux138_BOOL);
constraint array_bool_and([w_00007_00006_BOOL,aux138_BOOL],aux139_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux140_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux140_BOOL],aux141_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux142_BOOL);
constraint array_bool_and([aux142_BOOL,w_00004_00006_BOOL],aux143_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux144_BOOL);
constraint array_bool_and([w_00008_00006_BOOL,aux144_BOOL],aux145_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux146_BOOL);
constraint array_bool_and([aux146_BOOL,w_00004_00007_BOOL],aux147_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux148_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux148_BOOL],aux149_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux150_BOOL);
constraint array_bool_and([w_00007_00007_BOOL,aux150_BOOL],aux151_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux152_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux152_BOOL],aux153_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux154_BOOL);
constraint array_bool_and([aux154_BOOL,w_00005_00007_BOOL],aux155_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux156_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux156_BOOL],aux157_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux158_BOOL);
constraint array_bool_and([aux158_BOOL,w_00001_00007_BOOL],aux159_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux160_BOOL);
constraint array_bool_and([aux160_BOOL,w_00005_00007_BOOL],aux161_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux162_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux162_BOOL],aux163_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux164_BOOL);
constraint array_bool_and([w_00008_00007_BOOL,aux164_BOOL],aux165_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux166_BOOL);
constraint array_bool_and([aux166_BOOL,w_00001_00007_BOOL],aux167_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux168_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux168_BOOL],aux169_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux170_BOOL);
constraint array_bool_and([w_00007_00007_BOOL,aux170_BOOL],aux171_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux172_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux172_BOOL],aux173_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux174_BOOL);
constraint array_bool_and([aux174_BOOL,w_00004_00007_BOOL],aux175_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux176_BOOL);
constraint array_bool_and([w_00008_00007_BOOL,aux176_BOOL],aux177_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux178_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux178_BOOL],aux179_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux180_BOOL);
constraint array_bool_and([aux180_BOOL,w_00005_00008_BOOL],aux181_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux182_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux182_BOOL],aux183_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux184_BOOL);
constraint array_bool_and([aux184_BOOL,w_00001_00008_BOOL],aux185_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux186_BOOL);
constraint array_bool_and([aux186_BOOL,w_00005_00008_BOOL],aux187_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux188_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux188_BOOL],aux189_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux190_BOOL);
constraint array_bool_and([w_00008_00008_BOOL,aux190_BOOL],aux191_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux192_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux192_BOOL],aux193_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux194_BOOL);
constraint array_bool_and([aux194_BOOL,w_00004_00008_BOOL],aux195_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux196_BOOL);
constraint array_bool_and([w_00008_00008_BOOL,aux196_BOOL],aux197_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux198_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux198_BOOL],aux199_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux200_BOOL);
constraint array_bool_and([aux200_BOOL,w_00005_00009_BOOL],aux201_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux202_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux202_BOOL],aux203_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux204_BOOL);
constraint array_bool_and([aux204_BOOL,w_00001_00009_BOOL],aux205_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux206_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux206_BOOL],aux207_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux208_BOOL);
constraint array_bool_and([w_00007_00009_BOOL,aux208_BOOL],aux209_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux210_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux210_BOOL],aux211_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux212_BOOL);
constraint array_bool_and([aux212_BOOL,w_00005_00010_BOOL],aux213_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux214_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux214_BOOL],aux215_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux216_BOOL);
constraint array_bool_and([aux216_BOOL,w_00001_00010_BOOL],aux217_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux218_BOOL);
constraint array_bool_and([aux218_BOOL,w_00005_00010_BOOL],aux219_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux220_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux220_BOOL],aux221_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux222_BOOL);
constraint array_bool_and([w_00008_00010_BOOL,aux222_BOOL],aux223_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux224_BOOL);
constraint array_bool_and([aux224_BOOL,w_00004_00012_BOOL],aux225_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux226_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux226_BOOL],aux227_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux228_BOOL);
constraint array_bool_and([w_00007_00012_BOOL,aux228_BOOL],aux229_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux230_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux230_BOOL],aux231_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux232_BOOL);
constraint array_bool_and([aux232_BOOL,w_00005_00012_BOOL],aux233_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux234_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux234_BOOL],aux235_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux236_BOOL);
constraint array_bool_and([aux236_BOOL,w_00001_00012_BOOL],aux237_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux238_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux238_BOOL],aux239_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux240_BOOL);
constraint array_bool_and([w_00007_00012_BOOL,aux240_BOOL],aux241_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux242_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux242_BOOL],aux243_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux244_BOOL);
constraint array_bool_and([aux244_BOOL,w_00004_00012_BOOL],aux245_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux246_BOOL);
constraint array_bool_and([w_00008_00012_BOOL,aux246_BOOL],aux247_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux248_BOOL);
constraint array_bool_and([aux248_BOOL,w_00004_00013_BOOL],aux249_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux250_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux250_BOOL],aux251_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux252_BOOL);
constraint array_bool_and([w_00007_00013_BOOL,aux252_BOOL],aux253_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux254_BOOL);
constraint array_bool_and([aux254_BOOL,w_00001_00013_BOOL],aux255_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux256_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux256_BOOL],aux257_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux258_BOOL);
constraint array_bool_and([w_00007_00013_BOOL,aux258_BOOL],aux259_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux260_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux260_BOOL],aux261_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux262_BOOL);
constraint array_bool_and([aux262_BOOL,w_00004_00013_BOOL],aux263_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux264_BOOL);
constraint array_bool_and([w_00008_00013_BOOL,aux264_BOOL],aux265_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux266_BOOL);
constraint array_bool_and([aux266_BOOL,w_00001_00014_BOOL],aux267_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux268_BOOL);
constraint array_bool_and([aux268_BOOL,w_00005_00014_BOOL],aux269_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux270_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux270_BOOL],aux271_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux272_BOOL);
constraint array_bool_and([w_00008_00014_BOOL,aux272_BOOL],aux273_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux274_BOOL);
constraint array_bool_and([aux274_BOOL,w_00001_00014_BOOL],aux275_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux276_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux276_BOOL],aux277_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux278_BOOL);
constraint array_bool_and([w_00007_00014_BOOL,aux278_BOOL],aux279_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux280_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux280_BOOL],aux281_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux282_BOOL);
constraint array_bool_and([aux282_BOOL,w_00004_00014_BOOL],aux283_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux284_BOOL);
constraint array_bool_and([w_00008_00014_BOOL,aux284_BOOL],aux285_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux286_BOOL);
constraint array_bool_and([aux286_BOOL,w_00004_00015_BOOL],aux287_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux288_BOOL);
constraint array_bool_and([w_00002_00015_BOOL,aux288_BOOL],aux289_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux290_BOOL);
constraint array_bool_and([w_00007_00015_BOOL,aux290_BOOL],aux291_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux292_BOOL);
constraint array_bool_and([w_00006_00015_BOOL,aux292_BOOL],aux293_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux294_BOOL);
constraint array_bool_and([aux294_BOOL,w_00005_00015_BOOL],aux295_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux296_BOOL);
constraint array_bool_and([w_00003_00015_BOOL,aux296_BOOL],aux297_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux298_BOOL);
constraint array_bool_and([aux298_BOOL,w_00001_00015_BOOL],aux299_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux300_BOOL);
constraint array_bool_and([aux300_BOOL,w_00005_00015_BOOL],aux301_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux302_BOOL);
constraint array_bool_and([w_00003_00015_BOOL,aux302_BOOL],aux303_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux304_BOOL);
constraint array_bool_and([w_00008_00015_BOOL,aux304_BOOL],aux305_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux306_BOOL);
constraint array_bool_and([aux306_BOOL,w_00004_00016_BOOL],aux307_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux308_BOOL);
constraint array_bool_and([w_00002_00016_BOOL,aux308_BOOL],aux309_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux310_BOOL);
constraint array_bool_and([w_00007_00016_BOOL,aux310_BOOL],aux311_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux312_BOOL);
constraint array_bool_and([w_00006_00016_BOOL,aux312_BOOL],aux313_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux314_BOOL);
constraint array_bool_and([aux314_BOOL,w_00005_00016_BOOL],aux315_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux316_BOOL);
constraint array_bool_and([w_00003_00016_BOOL,aux316_BOOL],aux317_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux318_BOOL);
constraint array_bool_and([aux318_BOOL,w_00001_00016_BOOL],aux319_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux320_BOOL);
constraint array_bool_and([aux320_BOOL,w_00005_00016_BOOL],aux321_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux322_BOOL);
constraint array_bool_and([w_00003_00016_BOOL,aux322_BOOL],aux323_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux324_BOOL);
constraint array_bool_and([w_00008_00016_BOOL,aux324_BOOL],aux325_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux326_BOOL);
constraint array_bool_and([w_00006_00016_BOOL,aux326_BOOL],aux327_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux328_BOOL);
constraint array_bool_and([aux328_BOOL,w_00004_00016_BOOL],aux329_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux330_BOOL);
constraint array_bool_and([w_00008_00016_BOOL,aux330_BOOL],aux331_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux332_BOOL);
constraint array_bool_and([w_00006_00017_BOOL,aux332_BOOL],aux333_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux334_BOOL);
constraint array_bool_and([aux334_BOOL,w_00005_00017_BOOL],aux335_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux336_BOOL);
constraint array_bool_and([w_00003_00017_BOOL,aux336_BOOL],aux337_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux338_BOOL);
constraint array_bool_and([aux338_BOOL,w_00001_00017_BOOL],aux339_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux340_BOOL);
constraint array_bool_and([aux340_BOOL,w_00005_00017_BOOL],aux341_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux342_BOOL);
constraint array_bool_and([w_00003_00017_BOOL,aux342_BOOL],aux343_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux344_BOOL);
constraint array_bool_and([w_00008_00017_BOOL,aux344_BOOL],aux345_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux346_BOOL);
constraint array_bool_and([aux346_BOOL,w_00001_00017_BOOL],aux347_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux348_BOOL);
constraint array_bool_and([w_00002_00017_BOOL,aux348_BOOL],aux349_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux350_BOOL);
constraint array_bool_and([w_00007_00017_BOOL,aux350_BOOL],aux351_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux352_BOOL);
constraint array_bool_and([aux352_BOOL,w_00004_00018_BOOL],aux353_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux354_BOOL);
constraint array_bool_and([w_00002_00018_BOOL,aux354_BOOL],aux355_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux356_BOOL);
constraint array_bool_and([w_00007_00018_BOOL,aux356_BOOL],aux357_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux358_BOOL);
constraint array_bool_and([w_00006_00018_BOOL,aux358_BOOL],aux359_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux360_BOOL);
constraint array_bool_and([aux360_BOOL,w_00005_00018_BOOL],aux361_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux362_BOOL);
constraint array_bool_and([w_00003_00018_BOOL,aux362_BOOL],aux363_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux364_BOOL);
constraint array_bool_and([aux364_BOOL,w_00001_00018_BOOL],aux365_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux366_BOOL);
constraint array_bool_and([aux366_BOOL,w_00005_00018_BOOL],aux367_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux368_BOOL);
constraint array_bool_and([w_00003_00018_BOOL,aux368_BOOL],aux369_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux370_BOOL);
constraint array_bool_and([w_00008_00018_BOOL,aux370_BOOL],aux371_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux372_BOOL);
constraint array_bool_and([w_00006_00018_BOOL,aux372_BOOL],aux373_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux374_BOOL);
constraint array_bool_and([aux374_BOOL,w_00004_00018_BOOL],aux375_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux376_BOOL);
constraint array_bool_and([w_00008_00018_BOOL,aux376_BOOL],aux377_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux378_BOOL);
constraint array_bool_and([aux378_BOOL,w_00004_00019_BOOL],aux379_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux380_BOOL);
constraint array_bool_and([w_00002_00019_BOOL,aux380_BOOL],aux381_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux382_BOOL);
constraint array_bool_and([w_00007_00019_BOOL,aux382_BOOL],aux383_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux384_BOOL);
constraint array_bool_and([aux384_BOOL,w_00001_00019_BOOL],aux385_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux386_BOOL);
constraint array_bool_and([aux386_BOOL,w_00005_00019_BOOL],aux387_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux388_BOOL);
constraint array_bool_and([w_00003_00019_BOOL,aux388_BOOL],aux389_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux390_BOOL);
constraint array_bool_and([w_00008_00019_BOOL,aux390_BOOL],aux391_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux392_BOOL);
constraint array_bool_and([aux392_BOOL,w_00001_00019_BOOL],aux393_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux394_BOOL);
constraint array_bool_and([w_00002_00019_BOOL,aux394_BOOL],aux395_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux396_BOOL);
constraint array_bool_and([w_00007_00019_BOOL,aux396_BOOL],aux397_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux398_BOOL);
constraint array_bool_and([w_00006_00019_BOOL,aux398_BOOL],aux399_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux400_BOOL);
constraint array_bool_and([aux400_BOOL,w_00004_00019_BOOL],aux401_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux402_BOOL);
constraint array_bool_and([w_00008_00019_BOOL,aux402_BOOL],aux403_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux404_BOOL);
constraint array_bool_and([aux404_BOOL,w_00001_00020_BOOL],aux405_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux406_BOOL);
constraint array_bool_and([w_00002_00020_BOOL,aux406_BOOL],aux407_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux408_BOOL);
constraint array_bool_and([w_00007_00020_BOOL,aux408_BOOL],aux409_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux410_BOOL);
constraint array_bool_and([w_00006_00020_BOOL,aux410_BOOL],aux411_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux412_BOOL);
constraint array_bool_and([aux412_BOOL,w_00004_00020_BOOL],aux413_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux414_BOOL);
constraint array_bool_and([w_00008_00020_BOOL,aux414_BOOL],aux415_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00001_INTEGER,aux416_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00001_INTEGER,aux417_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,0,aux418_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,0,aux419_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,0,aux420_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00001_INTEGER,aux421_BOOL);
constraint int_eq_reif(0,TWorkers_00007_00001_INTEGER,aux422_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,0,aux423_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00002_INTEGER,aux424_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00002_INTEGER,aux425_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,0,aux426_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,0,aux427_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,0,aux428_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00002_INTEGER,aux429_BOOL);
constraint int_eq_reif(0,TWorkers_00007_00002_INTEGER,aux430_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,0,aux431_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00003_INTEGER,aux432_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00003_INTEGER,aux433_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,0,aux434_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,0,aux435_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,0,aux436_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00003_INTEGER,aux437_BOOL);
constraint int_eq_reif(0,TWorkers_00007_00003_INTEGER,aux438_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,0,aux439_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00004_INTEGER,aux440_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00004_INTEGER,aux441_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,0,aux442_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,0,aux443_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,0,aux444_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00004_INTEGER,aux445_BOOL);
constraint int_eq_reif(0,TWorkers_00007_00004_INTEGER,aux446_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,0,aux447_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00005_INTEGER,aux448_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00005_INTEGER,aux449_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,0,aux450_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,0,aux451_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,0,aux452_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00005_INTEGER,aux453_BOOL);
constraint int_eq_reif(0,TWorkers_00007_00005_INTEGER,aux454_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,0,aux455_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00006_INTEGER,aux456_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00006_INTEGER,aux457_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,0,aux458_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,0,aux459_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,0,aux460_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00006_INTEGER,aux461_BOOL);
constraint int_eq_reif(0,TWorkers_00007_00006_INTEGER,aux462_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,0,aux463_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00007_INTEGER,aux464_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00007_INTEGER,aux465_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,0,aux466_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,0,aux467_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,0,aux468_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00007_INTEGER,aux469_BOOL);
constraint int_eq_reif(0,TWorkers_00007_00007_INTEGER,aux470_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,0,aux471_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00008_INTEGER,aux472_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00008_INTEGER,aux473_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,0,aux474_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,0,aux475_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,0,aux476_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00008_INTEGER,aux477_BOOL);
constraint int_eq_reif(0,TWorkers_00007_00008_INTEGER,aux478_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,0,aux479_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00009_INTEGER,aux480_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00009_INTEGER,aux481_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,0,aux482_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,0,aux483_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,0,aux484_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00009_INTEGER,aux485_BOOL);
constraint int_eq_reif(0,TWorkers_00007_00009_INTEGER,aux486_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,0,aux487_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00010_INTEGER,aux488_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00010_INTEGER,aux489_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,0,aux490_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,0,aux491_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,0,aux492_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00010_INTEGER,aux493_BOOL);
constraint int_eq_reif(0,TWorkers_00007_00010_INTEGER,aux494_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,0,aux495_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00011_INTEGER,aux496_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00011_INTEGER,aux497_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,0,aux498_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,0,aux499_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,0,aux500_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00011_INTEGER,aux501_BOOL);
constraint int_eq_reif(0,TWorkers_00007_00011_INTEGER,aux502_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,0,aux503_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00012_INTEGER,aux504_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00012_INTEGER,aux505_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,0,aux506_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,0,aux507_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,0,aux508_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00012_INTEGER,aux509_BOOL);
constraint int_eq_reif(0,TWorkers_00007_00012_INTEGER,aux510_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,0,aux511_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00013_INTEGER,aux512_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00013_INTEGER,aux513_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,0,aux514_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,0,aux515_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,0,aux516_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00013_INTEGER,aux517_BOOL);
constraint int_eq_reif(0,TWorkers_00007_00013_INTEGER,aux518_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,0,aux519_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00014_INTEGER,aux520_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00014_INTEGER,aux521_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,0,aux522_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,0,aux523_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,0,aux524_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00014_INTEGER,aux525_BOOL);
constraint int_eq_reif(0,TWorkers_00007_00014_INTEGER,aux526_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,0,aux527_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00015_INTEGER,aux528_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00015_INTEGER,aux529_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,0,aux530_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,0,aux531_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,0,aux532_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00015_INTEGER,aux533_BOOL);
constraint int_eq_reif(0,TWorkers_00007_00015_INTEGER,aux534_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,0,aux535_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00016_INTEGER,aux536_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00016_INTEGER,aux537_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,0,aux538_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,0,aux539_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,0,aux540_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00016_INTEGER,aux541_BOOL);
constraint int_eq_reif(0,TWorkers_00007_00016_INTEGER,aux542_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,0,aux543_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00017_INTEGER,aux544_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00017_INTEGER,aux545_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,0,aux546_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,0,aux547_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,0,aux548_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00017_INTEGER,aux549_BOOL);
constraint int_eq_reif(0,TWorkers_00007_00017_INTEGER,aux550_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,0,aux551_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00018_INTEGER,aux552_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00018_INTEGER,aux553_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,0,aux554_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,0,aux555_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,0,aux556_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00018_INTEGER,aux557_BOOL);
constraint int_eq_reif(0,TWorkers_00007_00018_INTEGER,aux558_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,0,aux559_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00019_INTEGER,aux560_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00019_INTEGER,aux561_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,0,aux562_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,0,aux563_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,0,aux564_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00019_INTEGER,aux565_BOOL);
constraint int_eq_reif(0,TWorkers_00007_00019_INTEGER,aux566_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,0,aux567_BOOL);
constraint int_eq_reif(0,TWorkers_00001_00020_INTEGER,aux568_BOOL);
constraint int_eq_reif(0,TWorkers_00002_00020_INTEGER,aux569_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,0,aux570_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,0,aux571_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,0,aux572_BOOL);
constraint int_eq_reif(0,TWorkers_00006_00020_INTEGER,aux573_BOOL);
constraint int_eq_reif(0,TWorkers_00007_00020_INTEGER,aux574_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,0,aux575_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux576_BOOL);
constraint int_lin_eq([-1,1,1],[aux577,2,s_00011],0);
constraint int_lt_reif(s_00011,aux577,aux578_BOOL);
constraint array_bool_and([aux576_BOOL,aux578_BOOL,w_00001_00011_BOOL],aux579_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux580_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux581_BOOL);
constraint int_lin_eq([-1,1,1],[aux582,1,s_00001],0);
constraint int_lt_reif(s_00011,aux582,aux583_BOOL);
constraint int_le_reif(s_00001, s_00011,aux584_BOOL);
constraint array_bool_and([aux580_BOOL,aux581_BOOL,aux583_BOOL,aux584_BOOL,w_00001_00001_BOOL],aux585_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux586_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux587_BOOL);
constraint int_lin_eq([-1,1,1],[aux588,2,s_00002],0);
constraint int_lt_reif(s_00011,aux588,aux589_BOOL);
constraint int_le_reif(s_00002, s_00011,aux590_BOOL);
constraint array_bool_and([aux586_BOOL,aux587_BOOL,aux589_BOOL,aux590_BOOL,w_00001_00002_BOOL],aux591_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux592_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux593_BOOL);
constraint int_lin_eq([-1,1,1],[aux594,3,s_00003],0);
constraint int_lt_reif(s_00011,aux594,aux595_BOOL);
constraint int_le_reif(s_00003, s_00011,aux596_BOOL);
constraint array_bool_and([aux592_BOOL,aux593_BOOL,aux595_BOOL,aux596_BOOL,w_00001_00003_BOOL],aux597_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux598_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux599_BOOL);
constraint int_lin_eq([-1,1,1],[aux600,2,s_00004],0);
constraint int_lt_reif(s_00011,aux600,aux601_BOOL);
constraint int_le_reif(s_00004, s_00011,aux602_BOOL);
constraint array_bool_and([aux598_BOOL,aux599_BOOL,aux601_BOOL,aux602_BOOL,w_00001_00004_BOOL],aux603_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux604_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux605_BOOL);
constraint int_lin_eq([-1,1,1],[aux606,2,s_00005],0);
constraint int_lt_reif(s_00011,aux606,aux607_BOOL);
constraint int_le_reif(s_00005, s_00011,aux608_BOOL);
constraint array_bool_and([aux604_BOOL,aux605_BOOL,aux607_BOOL,aux608_BOOL,w_00001_00005_BOOL],aux609_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux610_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux611_BOOL);
constraint int_lin_eq([-1,1,1],[aux612,3,s_00006],0);
constraint int_lt_reif(s_00011,aux612,aux613_BOOL);
constraint int_le_reif(s_00006, s_00011,aux614_BOOL);
constraint array_bool_and([aux610_BOOL,aux611_BOOL,aux613_BOOL,aux614_BOOL,w_00001_00006_BOOL],aux615_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux616_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux617_BOOL);
constraint int_lin_eq([-1,1,1],[aux618,2,s_00007],0);
constraint int_lt_reif(s_00011,aux618,aux619_BOOL);
constraint int_le_reif(s_00007, s_00011,aux620_BOOL);
constraint array_bool_and([aux616_BOOL,aux617_BOOL,aux619_BOOL,aux620_BOOL,w_00001_00007_BOOL],aux621_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux622_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux623_BOOL);
constraint int_lin_eq([-1,1,1],[aux624,1,s_00008],0);
constraint int_lt_reif(s_00011,aux624,aux625_BOOL);
constraint int_le_reif(s_00008, s_00011,aux626_BOOL);
constraint array_bool_and([aux622_BOOL,aux623_BOOL,aux625_BOOL,aux626_BOOL,w_00001_00008_BOOL],aux627_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux628_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux629_BOOL);
constraint int_lin_eq([-1,1,1],[aux630,2,s_00009],0);
constraint int_lt_reif(s_00011,aux630,aux631_BOOL);
constraint int_le_reif(s_00009, s_00011,aux632_BOOL);
constraint array_bool_and([aux628_BOOL,aux629_BOOL,aux631_BOOL,aux632_BOOL,w_00001_00009_BOOL],aux633_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux634_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux635_BOOL);
constraint int_lin_eq([-1,1,1],[aux636,1,s_00010],0);
constraint int_lt_reif(s_00011,aux636,aux637_BOOL);
constraint int_le_reif(s_00010, s_00011,aux638_BOOL);
constraint array_bool_and([aux634_BOOL,aux635_BOOL,aux637_BOOL,aux638_BOOL,w_00001_00010_BOOL],aux639_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux640_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux641_BOOL);
constraint int_lin_eq([-1,1,1],[aux642,2,s_00012],0);
constraint int_lt_reif(s_00011,aux642,aux643_BOOL);
constraint int_le_reif(s_00012, s_00011,aux644_BOOL);
constraint array_bool_and([aux640_BOOL,aux641_BOOL,aux643_BOOL,aux644_BOOL,w_00001_00012_BOOL],aux645_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux646_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux647_BOOL);
constraint int_lin_eq([-1,1,1],[aux648,1,s_00013],0);
constraint int_lt_reif(s_00011,aux648,aux649_BOOL);
constraint int_le_reif(s_00013, s_00011,aux650_BOOL);
constraint array_bool_and([aux646_BOOL,aux647_BOOL,aux649_BOOL,aux650_BOOL,w_00001_00013_BOOL],aux651_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux652_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux653_BOOL);
constraint int_lin_eq([-1,1,1],[aux654,2,s_00015],0);
constraint int_lt_reif(s_00011,aux654,aux655_BOOL);
constraint int_le_reif(s_00015, s_00011,aux656_BOOL);
constraint array_bool_and([aux652_BOOL,aux653_BOOL,aux655_BOOL,aux656_BOOL,w_00001_00015_BOOL],aux657_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux658_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux659_BOOL);
constraint int_lin_eq([-1,1,1],[aux660,4,s_00014],0);
constraint int_lt_reif(s_00011,aux660,aux661_BOOL);
constraint int_le_reif(s_00014, s_00011,aux662_BOOL);
constraint array_bool_and([aux658_BOOL,aux659_BOOL,aux661_BOOL,aux662_BOOL,w_00001_00014_BOOL],aux663_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux664_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux665_BOOL);
constraint int_lin_eq([-1,1,1],[aux666,1,s_00017],0);
constraint int_lt_reif(s_00011,aux666,aux667_BOOL);
constraint int_le_reif(s_00017, s_00011,aux668_BOOL);
constraint array_bool_and([aux664_BOOL,aux665_BOOL,aux667_BOOL,aux668_BOOL,w_00001_00017_BOOL],aux669_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux670_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux671_BOOL);
constraint int_lin_eq([-1,1,1],[aux672,3,s_00016],0);
constraint int_lt_reif(s_00011,aux672,aux673_BOOL);
constraint int_le_reif(s_00016, s_00011,aux674_BOOL);
constraint array_bool_and([aux670_BOOL,aux671_BOOL,aux673_BOOL,aux674_BOOL,w_00001_00016_BOOL],aux675_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux676_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux677_BOOL);
constraint int_lin_eq([-1,1,1],[aux678,3,s_00018],0);
constraint int_lt_reif(s_00011,aux678,aux679_BOOL);
constraint int_le_reif(s_00018, s_00011,aux680_BOOL);
constraint array_bool_and([aux676_BOOL,aux677_BOOL,aux679_BOOL,aux680_BOOL,w_00001_00018_BOOL],aux681_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux682_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux683_BOOL);
constraint int_lin_eq([-1,1,1],[aux684,2,s_00019],0);
constraint int_lt_reif(s_00011,aux684,aux685_BOOL);
constraint int_le_reif(s_00019, s_00011,aux686_BOOL);
constraint array_bool_and([aux682_BOOL,aux683_BOOL,aux685_BOOL,aux686_BOOL,w_00001_00019_BOOL],aux687_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux688_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux689_BOOL);
constraint int_lin_eq([-1,1,1],[aux690,3,s_00020],0);
constraint int_lt_reif(s_00011,aux690,aux691_BOOL);
constraint int_le_reif(s_00020, s_00011,aux692_BOOL);
constraint array_bool_and([aux688_BOOL,aux689_BOOL,aux691_BOOL,aux692_BOOL,w_00001_00020_BOOL],aux693_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux579_INTEGER,aux585_INTEGER,aux591_INTEGER,aux597_INTEGER,aux603_INTEGER,aux609_INTEGER,aux615_INTEGER,aux621_INTEGER,aux627_INTEGER,aux633_INTEGER,aux639_INTEGER,aux645_INTEGER,aux651_INTEGER,aux657_INTEGER,aux663_INTEGER,aux669_INTEGER,aux675_INTEGER,aux681_INTEGER,aux687_INTEGER,aux693_INTEGER,1],0,aux694_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux695_BOOL);
constraint int_lin_eq([-1,1,1],[aux696,2,s_00004],0);
constraint int_lt_reif(s_00004,aux696,aux697_BOOL);
constraint array_bool_and([aux695_BOOL,aux697_BOOL,w_00001_00004_BOOL],aux698_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux699_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux700_BOOL);
constraint int_lin_eq([-1,1,1],[aux701,1,s_00001],0);
constraint int_lt_reif(s_00004,aux701,aux702_BOOL);
constraint int_le_reif(s_00001, s_00004,aux703_BOOL);
constraint array_bool_and([aux699_BOOL,aux700_BOOL,aux702_BOOL,aux703_BOOL,w_00001_00001_BOOL],aux704_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux705_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux706_BOOL);
constraint int_lin_eq([-1,1,1],[aux707,2,s_00002],0);
constraint int_lt_reif(s_00004,aux707,aux708_BOOL);
constraint int_le_reif(s_00002, s_00004,aux709_BOOL);
constraint array_bool_and([aux705_BOOL,aux706_BOOL,aux708_BOOL,aux709_BOOL,w_00001_00002_BOOL],aux710_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux711_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux712_BOOL);
constraint int_lin_eq([-1,1,1],[aux713,3,s_00003],0);
constraint int_lt_reif(s_00004,aux713,aux714_BOOL);
constraint int_le_reif(s_00003, s_00004,aux715_BOOL);
constraint array_bool_and([aux711_BOOL,aux712_BOOL,aux714_BOOL,aux715_BOOL,w_00001_00003_BOOL],aux716_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux717_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux718_BOOL);
constraint int_lin_eq([-1,1,1],[aux719,2,s_00005],0);
constraint int_lt_reif(s_00004,aux719,aux720_BOOL);
constraint int_le_reif(s_00005, s_00004,aux721_BOOL);
constraint array_bool_and([aux717_BOOL,aux718_BOOL,aux720_BOOL,aux721_BOOL,w_00001_00005_BOOL],aux722_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux723_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux724_BOOL);
constraint int_lin_eq([-1,1,1],[aux725,3,s_00006],0);
constraint int_lt_reif(s_00004,aux725,aux726_BOOL);
constraint int_le_reif(s_00006, s_00004,aux727_BOOL);
constraint array_bool_and([aux723_BOOL,aux724_BOOL,aux726_BOOL,aux727_BOOL,w_00001_00006_BOOL],aux728_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux729_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux730_BOOL);
constraint int_lin_eq([-1,1,1],[aux731,2,s_00007],0);
constraint int_lt_reif(s_00004,aux731,aux732_BOOL);
constraint int_le_reif(s_00007, s_00004,aux733_BOOL);
constraint array_bool_and([aux729_BOOL,aux730_BOOL,aux732_BOOL,aux733_BOOL,w_00001_00007_BOOL],aux734_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux735_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux736_BOOL);
constraint int_lin_eq([-1,1,1],[aux737,1,s_00008],0);
constraint int_lt_reif(s_00004,aux737,aux738_BOOL);
constraint int_le_reif(s_00008, s_00004,aux739_BOOL);
constraint array_bool_and([aux735_BOOL,aux736_BOOL,aux738_BOOL,aux739_BOOL,w_00001_00008_BOOL],aux740_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux741_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux742_BOOL);
constraint int_lin_eq([-1,1,1],[aux743,2,s_00009],0);
constraint int_lt_reif(s_00004,aux743,aux744_BOOL);
constraint int_le_reif(s_00009, s_00004,aux745_BOOL);
constraint array_bool_and([aux741_BOOL,aux742_BOOL,aux744_BOOL,aux745_BOOL,w_00001_00009_BOOL],aux746_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux747_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux748_BOOL);
constraint int_lin_eq([-1,1,1],[aux749,1,s_00010],0);
constraint int_lt_reif(s_00004,aux749,aux750_BOOL);
constraint int_le_reif(s_00010, s_00004,aux751_BOOL);
constraint array_bool_and([aux747_BOOL,aux748_BOOL,aux750_BOOL,aux751_BOOL,w_00001_00010_BOOL],aux752_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux753_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux754_BOOL);
constraint int_lin_eq([-1,1,1],[aux755,2,s_00011],0);
constraint int_lt_reif(s_00004,aux755,aux756_BOOL);
constraint int_le_reif(s_00011, s_00004,aux757_BOOL);
constraint array_bool_and([aux753_BOOL,aux754_BOOL,aux756_BOOL,aux757_BOOL,w_00001_00011_BOOL],aux758_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux759_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux760_BOOL);
constraint int_lin_eq([-1,1,1],[aux761,2,s_00012],0);
constraint int_lt_reif(s_00004,aux761,aux762_BOOL);
constraint int_le_reif(s_00012, s_00004,aux763_BOOL);
constraint array_bool_and([aux759_BOOL,aux760_BOOL,aux762_BOOL,aux763_BOOL,w_00001_00012_BOOL],aux764_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux765_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux766_BOOL);
constraint int_lin_eq([-1,1,1],[aux767,1,s_00013],0);
constraint int_lt_reif(s_00004,aux767,aux768_BOOL);
constraint int_le_reif(s_00013, s_00004,aux769_BOOL);
constraint array_bool_and([aux765_BOOL,aux766_BOOL,aux768_BOOL,aux769_BOOL,w_00001_00013_BOOL],aux770_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux771_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux772_BOOL);
constraint int_lin_eq([-1,1,1],[aux773,2,s_00015],0);
constraint int_lt_reif(s_00004,aux773,aux774_BOOL);
constraint int_le_reif(s_00015, s_00004,aux775_BOOL);
constraint array_bool_and([aux771_BOOL,aux772_BOOL,aux774_BOOL,aux775_BOOL,w_00001_00015_BOOL],aux776_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux777_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux778_BOOL);
constraint int_lin_eq([-1,1,1],[aux779,4,s_00014],0);
constraint int_lt_reif(s_00004,aux779,aux780_BOOL);
constraint int_le_reif(s_00014, s_00004,aux781_BOOL);
constraint array_bool_and([aux777_BOOL,aux778_BOOL,aux780_BOOL,aux781_BOOL,w_00001_00014_BOOL],aux782_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux783_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux784_BOOL);
constraint int_lin_eq([-1,1,1],[aux785,1,s_00017],0);
constraint int_lt_reif(s_00004,aux785,aux786_BOOL);
constraint int_le_reif(s_00017, s_00004,aux787_BOOL);
constraint array_bool_and([aux783_BOOL,aux784_BOOL,aux786_BOOL,aux787_BOOL,w_00001_00017_BOOL],aux788_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux789_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux790_BOOL);
constraint int_lin_eq([-1,1,1],[aux791,3,s_00016],0);
constraint int_lt_reif(s_00004,aux791,aux792_BOOL);
constraint int_le_reif(s_00016, s_00004,aux793_BOOL);
constraint array_bool_and([aux789_BOOL,aux790_BOOL,aux792_BOOL,aux793_BOOL,w_00001_00016_BOOL],aux794_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux795_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux796_BOOL);
constraint int_lin_eq([-1,1,1],[aux797,3,s_00018],0);
constraint int_lt_reif(s_00004,aux797,aux798_BOOL);
constraint int_le_reif(s_00018, s_00004,aux799_BOOL);
constraint array_bool_and([aux795_BOOL,aux796_BOOL,aux798_BOOL,aux799_BOOL,w_00001_00018_BOOL],aux800_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux801_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux802_BOOL);
constraint int_lin_eq([-1,1,1],[aux803,2,s_00019],0);
constraint int_lt_reif(s_00004,aux803,aux804_BOOL);
constraint int_le_reif(s_00019, s_00004,aux805_BOOL);
constraint array_bool_and([aux801_BOOL,aux802_BOOL,aux804_BOOL,aux805_BOOL,w_00001_00019_BOOL],aux806_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux807_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux808_BOOL);
constraint int_lin_eq([-1,1,1],[aux809,3,s_00020],0);
constraint int_lt_reif(s_00004,aux809,aux810_BOOL);
constraint int_le_reif(s_00020, s_00004,aux811_BOOL);
constraint array_bool_and([aux807_BOOL,aux808_BOOL,aux810_BOOL,aux811_BOOL,w_00001_00020_BOOL],aux812_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux698_INTEGER,aux704_INTEGER,aux710_INTEGER,aux716_INTEGER,aux722_INTEGER,aux728_INTEGER,aux734_INTEGER,aux740_INTEGER,aux746_INTEGER,aux752_INTEGER,aux758_INTEGER,aux764_INTEGER,aux770_INTEGER,aux776_INTEGER,aux782_INTEGER,aux788_INTEGER,aux794_INTEGER,aux800_INTEGER,aux806_INTEGER,aux812_INTEGER,1],0,aux813_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux814_BOOL);
constraint int_lin_eq([-1,1,1],[aux815,3,s_00003],0);
constraint int_lt_reif(s_00003,aux815,aux816_BOOL);
constraint array_bool_and([aux814_BOOL,aux816_BOOL,w_00001_00003_BOOL],aux817_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux818_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux819_BOOL);
constraint int_lin_eq([-1,1,1],[aux820,1,s_00001],0);
constraint int_lt_reif(s_00003,aux820,aux821_BOOL);
constraint int_le_reif(s_00001, s_00003,aux822_BOOL);
constraint array_bool_and([aux818_BOOL,aux819_BOOL,aux821_BOOL,aux822_BOOL,w_00001_00001_BOOL],aux823_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux824_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux825_BOOL);
constraint int_lin_eq([-1,1,1],[aux826,2,s_00002],0);
constraint int_lt_reif(s_00003,aux826,aux827_BOOL);
constraint int_le_reif(s_00002, s_00003,aux828_BOOL);
constraint array_bool_and([aux824_BOOL,aux825_BOOL,aux827_BOOL,aux828_BOOL,w_00001_00002_BOOL],aux829_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux830_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux831_BOOL);
constraint int_lin_eq([-1,1,1],[aux832,2,s_00004],0);
constraint int_lt_reif(s_00003,aux832,aux833_BOOL);
constraint int_le_reif(s_00004, s_00003,aux834_BOOL);
constraint array_bool_and([aux830_BOOL,aux831_BOOL,aux833_BOOL,aux834_BOOL,w_00001_00004_BOOL],aux835_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux836_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux837_BOOL);
constraint int_lin_eq([-1,1,1],[aux838,2,s_00005],0);
constraint int_lt_reif(s_00003,aux838,aux839_BOOL);
constraint int_le_reif(s_00005, s_00003,aux840_BOOL);
constraint array_bool_and([aux836_BOOL,aux837_BOOL,aux839_BOOL,aux840_BOOL,w_00001_00005_BOOL],aux841_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux842_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux843_BOOL);
constraint int_lin_eq([-1,1,1],[aux844,3,s_00006],0);
constraint int_lt_reif(s_00003,aux844,aux845_BOOL);
constraint int_le_reif(s_00006, s_00003,aux846_BOOL);
constraint array_bool_and([aux842_BOOL,aux843_BOOL,aux845_BOOL,aux846_BOOL,w_00001_00006_BOOL],aux847_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux848_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux849_BOOL);
constraint int_lin_eq([-1,1,1],[aux850,2,s_00007],0);
constraint int_lt_reif(s_00003,aux850,aux851_BOOL);
constraint int_le_reif(s_00007, s_00003,aux852_BOOL);
constraint array_bool_and([aux848_BOOL,aux849_BOOL,aux851_BOOL,aux852_BOOL,w_00001_00007_BOOL],aux853_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux854_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux855_BOOL);
constraint int_lin_eq([-1,1,1],[aux856,1,s_00008],0);
constraint int_lt_reif(s_00003,aux856,aux857_BOOL);
constraint int_le_reif(s_00008, s_00003,aux858_BOOL);
constraint array_bool_and([aux854_BOOL,aux855_BOOL,aux857_BOOL,aux858_BOOL,w_00001_00008_BOOL],aux859_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux860_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux861_BOOL);
constraint int_lin_eq([-1,1,1],[aux862,2,s_00009],0);
constraint int_lt_reif(s_00003,aux862,aux863_BOOL);
constraint int_le_reif(s_00009, s_00003,aux864_BOOL);
constraint array_bool_and([aux860_BOOL,aux861_BOOL,aux863_BOOL,aux864_BOOL,w_00001_00009_BOOL],aux865_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux866_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux867_BOOL);
constraint int_lin_eq([-1,1,1],[aux868,1,s_00010],0);
constraint int_lt_reif(s_00003,aux868,aux869_BOOL);
constraint int_le_reif(s_00010, s_00003,aux870_BOOL);
constraint array_bool_and([aux866_BOOL,aux867_BOOL,aux869_BOOL,aux870_BOOL,w_00001_00010_BOOL],aux871_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux872_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux873_BOOL);
constraint int_lin_eq([-1,1,1],[aux874,2,s_00011],0);
constraint int_lt_reif(s_00003,aux874,aux875_BOOL);
constraint int_le_reif(s_00011, s_00003,aux876_BOOL);
constraint array_bool_and([aux872_BOOL,aux873_BOOL,aux875_BOOL,aux876_BOOL,w_00001_00011_BOOL],aux877_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux878_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux879_BOOL);
constraint int_lin_eq([-1,1,1],[aux880,2,s_00012],0);
constraint int_lt_reif(s_00003,aux880,aux881_BOOL);
constraint int_le_reif(s_00012, s_00003,aux882_BOOL);
constraint array_bool_and([aux878_BOOL,aux879_BOOL,aux881_BOOL,aux882_BOOL,w_00001_00012_BOOL],aux883_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux884_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux885_BOOL);
constraint int_lin_eq([-1,1,1],[aux886,1,s_00013],0);
constraint int_lt_reif(s_00003,aux886,aux887_BOOL);
constraint int_le_reif(s_00013, s_00003,aux888_BOOL);
constraint array_bool_and([aux884_BOOL,aux885_BOOL,aux887_BOOL,aux888_BOOL,w_00001_00013_BOOL],aux889_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux890_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux891_BOOL);
constraint int_lin_eq([-1,1,1],[aux892,2,s_00015],0);
constraint int_lt_reif(s_00003,aux892,aux893_BOOL);
constraint int_le_reif(s_00015, s_00003,aux894_BOOL);
constraint array_bool_and([aux890_BOOL,aux891_BOOL,aux893_BOOL,aux894_BOOL,w_00001_00015_BOOL],aux895_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux896_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux897_BOOL);
constraint int_lin_eq([-1,1,1],[aux898,4,s_00014],0);
constraint int_lt_reif(s_00003,aux898,aux899_BOOL);
constraint int_le_reif(s_00014, s_00003,aux900_BOOL);
constraint array_bool_and([aux896_BOOL,aux897_BOOL,aux899_BOOL,aux900_BOOL,w_00001_00014_BOOL],aux901_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux902_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux903_BOOL);
constraint int_lin_eq([-1,1,1],[aux904,1,s_00017],0);
constraint int_lt_reif(s_00003,aux904,aux905_BOOL);
constraint int_le_reif(s_00017, s_00003,aux906_BOOL);
constraint array_bool_and([aux902_BOOL,aux903_BOOL,aux905_BOOL,aux906_BOOL,w_00001_00017_BOOL],aux907_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux908_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux909_BOOL);
constraint int_lin_eq([-1,1,1],[aux910,3,s_00016],0);
constraint int_lt_reif(s_00003,aux910,aux911_BOOL);
constraint int_le_reif(s_00016, s_00003,aux912_BOOL);
constraint array_bool_and([aux908_BOOL,aux909_BOOL,aux911_BOOL,aux912_BOOL,w_00001_00016_BOOL],aux913_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux914_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux915_BOOL);
constraint int_lin_eq([-1,1,1],[aux916,3,s_00018],0);
constraint int_lt_reif(s_00003,aux916,aux917_BOOL);
constraint int_le_reif(s_00018, s_00003,aux918_BOOL);
constraint array_bool_and([aux914_BOOL,aux915_BOOL,aux917_BOOL,aux918_BOOL,w_00001_00018_BOOL],aux919_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux920_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux921_BOOL);
constraint int_lin_eq([-1,1,1],[aux922,2,s_00019],0);
constraint int_lt_reif(s_00003,aux922,aux923_BOOL);
constraint int_le_reif(s_00019, s_00003,aux924_BOOL);
constraint array_bool_and([aux920_BOOL,aux921_BOOL,aux923_BOOL,aux924_BOOL,w_00001_00019_BOOL],aux925_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux926_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux927_BOOL);
constraint int_lin_eq([-1,1,1],[aux928,3,s_00020],0);
constraint int_lt_reif(s_00003,aux928,aux929_BOOL);
constraint int_le_reif(s_00020, s_00003,aux930_BOOL);
constraint array_bool_and([aux926_BOOL,aux927_BOOL,aux929_BOOL,aux930_BOOL,w_00001_00020_BOOL],aux931_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux817_INTEGER,aux823_INTEGER,aux829_INTEGER,aux835_INTEGER,aux841_INTEGER,aux847_INTEGER,aux853_INTEGER,aux859_INTEGER,aux865_INTEGER,aux871_INTEGER,aux877_INTEGER,aux883_INTEGER,aux889_INTEGER,aux895_INTEGER,aux901_INTEGER,aux907_INTEGER,aux913_INTEGER,aux919_INTEGER,aux925_INTEGER,aux931_INTEGER,1],0,aux932_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux933_BOOL);
constraint int_lin_eq([-1,1,1],[aux934,3,s_00020],0);
constraint int_lt_reif(s_00020,aux934,aux935_BOOL);
constraint array_bool_and([aux933_BOOL,aux935_BOOL,w_00001_00020_BOOL],aux936_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux937_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux938_BOOL);
constraint int_lin_eq([-1,1,1],[aux939,1,s_00001],0);
constraint int_lt_reif(s_00020,aux939,aux940_BOOL);
constraint int_le_reif(s_00001, s_00020,aux941_BOOL);
constraint array_bool_and([aux937_BOOL,aux938_BOOL,aux940_BOOL,aux941_BOOL,w_00001_00001_BOOL],aux942_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux943_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux944_BOOL);
constraint int_lin_eq([-1,1,1],[aux945,2,s_00002],0);
constraint int_lt_reif(s_00020,aux945,aux946_BOOL);
constraint int_le_reif(s_00002, s_00020,aux947_BOOL);
constraint array_bool_and([aux943_BOOL,aux944_BOOL,aux946_BOOL,aux947_BOOL,w_00001_00002_BOOL],aux948_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux949_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux950_BOOL);
constraint int_lin_eq([-1,1,1],[aux951,3,s_00003],0);
constraint int_lt_reif(s_00020,aux951,aux952_BOOL);
constraint int_le_reif(s_00003, s_00020,aux953_BOOL);
constraint array_bool_and([aux949_BOOL,aux950_BOOL,aux952_BOOL,aux953_BOOL,w_00001_00003_BOOL],aux954_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux955_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux956_BOOL);
constraint int_lin_eq([-1,1,1],[aux957,2,s_00004],0);
constraint int_lt_reif(s_00020,aux957,aux958_BOOL);
constraint int_le_reif(s_00004, s_00020,aux959_BOOL);
constraint array_bool_and([aux955_BOOL,aux956_BOOL,aux958_BOOL,aux959_BOOL,w_00001_00004_BOOL],aux960_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux961_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux962_BOOL);
constraint int_lin_eq([-1,1,1],[aux963,2,s_00005],0);
constraint int_lt_reif(s_00020,aux963,aux964_BOOL);
constraint int_le_reif(s_00005, s_00020,aux965_BOOL);
constraint array_bool_and([aux961_BOOL,aux962_BOOL,aux964_BOOL,aux965_BOOL,w_00001_00005_BOOL],aux966_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux967_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux968_BOOL);
constraint int_lin_eq([-1,1,1],[aux969,3,s_00006],0);
constraint int_lt_reif(s_00020,aux969,aux970_BOOL);
constraint int_le_reif(s_00006, s_00020,aux971_BOOL);
constraint array_bool_and([aux967_BOOL,aux968_BOOL,aux970_BOOL,aux971_BOOL,w_00001_00006_BOOL],aux972_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux973_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux974_BOOL);
constraint int_lin_eq([-1,1,1],[aux975,2,s_00007],0);
constraint int_lt_reif(s_00020,aux975,aux976_BOOL);
constraint int_le_reif(s_00007, s_00020,aux977_BOOL);
constraint array_bool_and([aux973_BOOL,aux974_BOOL,aux976_BOOL,aux977_BOOL,w_00001_00007_BOOL],aux978_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux979_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux980_BOOL);
constraint int_lin_eq([-1,1,1],[aux981,1,s_00008],0);
constraint int_lt_reif(s_00020,aux981,aux982_BOOL);
constraint int_le_reif(s_00008, s_00020,aux983_BOOL);
constraint array_bool_and([aux979_BOOL,aux980_BOOL,aux982_BOOL,aux983_BOOL,w_00001_00008_BOOL],aux984_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux985_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux986_BOOL);
constraint int_lin_eq([-1,1,1],[aux987,2,s_00009],0);
constraint int_lt_reif(s_00020,aux987,aux988_BOOL);
constraint int_le_reif(s_00009, s_00020,aux989_BOOL);
constraint array_bool_and([aux985_BOOL,aux986_BOOL,aux988_BOOL,aux989_BOOL,w_00001_00009_BOOL],aux990_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux991_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux992_BOOL);
constraint int_lin_eq([-1,1,1],[aux993,1,s_00010],0);
constraint int_lt_reif(s_00020,aux993,aux994_BOOL);
constraint int_le_reif(s_00010, s_00020,aux995_BOOL);
constraint array_bool_and([aux991_BOOL,aux992_BOOL,aux994_BOOL,aux995_BOOL,w_00001_00010_BOOL],aux996_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux997_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux998_BOOL);
constraint int_lin_eq([-1,1,1],[aux999,2,s_00011],0);
constraint int_lt_reif(s_00020,aux999,aux1000_BOOL);
constraint int_le_reif(s_00011, s_00020,aux1001_BOOL);
constraint array_bool_and([aux997_BOOL,aux998_BOOL,aux1000_BOOL,aux1001_BOOL,w_00001_00011_BOOL],aux1002_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux1003_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux1004_BOOL);
constraint int_lin_eq([-1,1,1],[aux1005,2,s_00012],0);
constraint int_lt_reif(s_00020,aux1005,aux1006_BOOL);
constraint int_le_reif(s_00012, s_00020,aux1007_BOOL);
constraint array_bool_and([aux1003_BOOL,aux1004_BOOL,aux1006_BOOL,aux1007_BOOL,w_00001_00012_BOOL],aux1008_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1009_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux1010_BOOL);
constraint int_lin_eq([-1,1,1],[aux1011,1,s_00013],0);
constraint int_lt_reif(s_00020,aux1011,aux1012_BOOL);
constraint int_le_reif(s_00013, s_00020,aux1013_BOOL);
constraint array_bool_and([aux1009_BOOL,aux1010_BOOL,aux1012_BOOL,aux1013_BOOL,w_00001_00013_BOOL],aux1014_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1015_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux1016_BOOL);
constraint int_lin_eq([-1,1,1],[aux1017,4,s_00014],0);
constraint int_lt_reif(s_00020,aux1017,aux1018_BOOL);
constraint int_le_reif(s_00014, s_00020,aux1019_BOOL);
constraint array_bool_and([aux1015_BOOL,aux1016_BOOL,aux1018_BOOL,aux1019_BOOL,w_00001_00014_BOOL],aux1020_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1021_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux1022_BOOL);
constraint int_lin_eq([-1,1,1],[aux1023,2,s_00015],0);
constraint int_lt_reif(s_00020,aux1023,aux1024_BOOL);
constraint int_le_reif(s_00015, s_00020,aux1025_BOOL);
constraint array_bool_and([aux1021_BOOL,aux1022_BOOL,aux1024_BOOL,aux1025_BOOL,w_00001_00015_BOOL],aux1026_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux1027_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux1028_BOOL);
constraint int_lin_eq([-1,1,1],[aux1029,3,s_00016],0);
constraint int_lt_reif(s_00020,aux1029,aux1030_BOOL);
constraint int_le_reif(s_00016, s_00020,aux1031_BOOL);
constraint array_bool_and([aux1027_BOOL,aux1028_BOOL,aux1030_BOOL,aux1031_BOOL,w_00001_00016_BOOL],aux1032_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux1033_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux1034_BOOL);
constraint int_lin_eq([-1,1,1],[aux1035,1,s_00017],0);
constraint int_lt_reif(s_00020,aux1035,aux1036_BOOL);
constraint int_le_reif(s_00017, s_00020,aux1037_BOOL);
constraint array_bool_and([aux1033_BOOL,aux1034_BOOL,aux1036_BOOL,aux1037_BOOL,w_00001_00017_BOOL],aux1038_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux1039_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux1040_BOOL);
constraint int_lin_eq([-1,1,1],[aux1041,3,s_00018],0);
constraint int_lt_reif(s_00020,aux1041,aux1042_BOOL);
constraint int_le_reif(s_00018, s_00020,aux1043_BOOL);
constraint array_bool_and([aux1039_BOOL,aux1040_BOOL,aux1042_BOOL,aux1043_BOOL,w_00001_00018_BOOL],aux1044_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux1045_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux1046_BOOL);
constraint int_lin_eq([-1,1,1],[aux1047,2,s_00019],0);
constraint int_lt_reif(s_00020,aux1047,aux1048_BOOL);
constraint int_le_reif(s_00019, s_00020,aux1049_BOOL);
constraint array_bool_and([aux1045_BOOL,aux1046_BOOL,aux1048_BOOL,aux1049_BOOL,w_00001_00019_BOOL],aux1050_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux936_INTEGER,aux942_INTEGER,aux948_INTEGER,aux954_INTEGER,aux960_INTEGER,aux966_INTEGER,aux972_INTEGER,aux978_INTEGER,aux984_INTEGER,aux990_INTEGER,aux996_INTEGER,aux1002_INTEGER,aux1008_INTEGER,aux1014_INTEGER,aux1020_INTEGER,aux1026_INTEGER,aux1032_INTEGER,aux1038_INTEGER,aux1044_INTEGER,aux1050_INTEGER,1],0,aux1051_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux1052_BOOL);
constraint int_lin_eq([-1,1,1],[aux1053,3,s_00018],0);
constraint int_lt_reif(s_00018,aux1053,aux1054_BOOL);
constraint array_bool_and([aux1052_BOOL,aux1054_BOOL,w_00001_00018_BOOL],aux1055_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux1056_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux1057_BOOL);
constraint int_lin_eq([-1,1,1],[aux1058,1,s_00001],0);
constraint int_lt_reif(s_00018,aux1058,aux1059_BOOL);
constraint int_le_reif(s_00001, s_00018,aux1060_BOOL);
constraint array_bool_and([aux1056_BOOL,aux1057_BOOL,aux1059_BOOL,aux1060_BOOL,w_00001_00001_BOOL],aux1061_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1062_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux1063_BOOL);
constraint int_lin_eq([-1,1,1],[aux1064,2,s_00002],0);
constraint int_lt_reif(s_00018,aux1064,aux1065_BOOL);
constraint int_le_reif(s_00002, s_00018,aux1066_BOOL);
constraint array_bool_and([aux1062_BOOL,aux1063_BOOL,aux1065_BOOL,aux1066_BOOL,w_00001_00002_BOOL],aux1067_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux1068_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux1069_BOOL);
constraint int_lin_eq([-1,1,1],[aux1070,3,s_00003],0);
constraint int_lt_reif(s_00018,aux1070,aux1071_BOOL);
constraint int_le_reif(s_00003, s_00018,aux1072_BOOL);
constraint array_bool_and([aux1068_BOOL,aux1069_BOOL,aux1071_BOOL,aux1072_BOOL,w_00001_00003_BOOL],aux1073_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux1074_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux1075_BOOL);
constraint int_lin_eq([-1,1,1],[aux1076,2,s_00004],0);
constraint int_lt_reif(s_00018,aux1076,aux1077_BOOL);
constraint int_le_reif(s_00004, s_00018,aux1078_BOOL);
constraint array_bool_and([aux1074_BOOL,aux1075_BOOL,aux1077_BOOL,aux1078_BOOL,w_00001_00004_BOOL],aux1079_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux1080_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux1081_BOOL);
constraint int_lin_eq([-1,1,1],[aux1082,2,s_00005],0);
constraint int_lt_reif(s_00018,aux1082,aux1083_BOOL);
constraint int_le_reif(s_00005, s_00018,aux1084_BOOL);
constraint array_bool_and([aux1080_BOOL,aux1081_BOOL,aux1083_BOOL,aux1084_BOOL,w_00001_00005_BOOL],aux1085_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1086_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux1087_BOOL);
constraint int_lin_eq([-1,1,1],[aux1088,3,s_00006],0);
constraint int_lt_reif(s_00018,aux1088,aux1089_BOOL);
constraint int_le_reif(s_00006, s_00018,aux1090_BOOL);
constraint array_bool_and([aux1086_BOOL,aux1087_BOOL,aux1089_BOOL,aux1090_BOOL,w_00001_00006_BOOL],aux1091_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux1092_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux1093_BOOL);
constraint int_lin_eq([-1,1,1],[aux1094,2,s_00007],0);
constraint int_lt_reif(s_00018,aux1094,aux1095_BOOL);
constraint int_le_reif(s_00007, s_00018,aux1096_BOOL);
constraint array_bool_and([aux1092_BOOL,aux1093_BOOL,aux1095_BOOL,aux1096_BOOL,w_00001_00007_BOOL],aux1097_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux1098_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux1099_BOOL);
constraint int_lin_eq([-1,1,1],[aux1100,1,s_00008],0);
constraint int_lt_reif(s_00018,aux1100,aux1101_BOOL);
constraint int_le_reif(s_00008, s_00018,aux1102_BOOL);
constraint array_bool_and([aux1098_BOOL,aux1099_BOOL,aux1101_BOOL,aux1102_BOOL,w_00001_00008_BOOL],aux1103_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux1104_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux1105_BOOL);
constraint int_lin_eq([-1,1,1],[aux1106,2,s_00009],0);
constraint int_lt_reif(s_00018,aux1106,aux1107_BOOL);
constraint int_le_reif(s_00009, s_00018,aux1108_BOOL);
constraint array_bool_and([aux1104_BOOL,aux1105_BOOL,aux1107_BOOL,aux1108_BOOL,w_00001_00009_BOOL],aux1109_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1110_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux1111_BOOL);
constraint int_lin_eq([-1,1,1],[aux1112,1,s_00010],0);
constraint int_lt_reif(s_00018,aux1112,aux1113_BOOL);
constraint int_le_reif(s_00010, s_00018,aux1114_BOOL);
constraint array_bool_and([aux1110_BOOL,aux1111_BOOL,aux1113_BOOL,aux1114_BOOL,w_00001_00010_BOOL],aux1115_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux1116_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux1117_BOOL);
constraint int_lin_eq([-1,1,1],[aux1118,2,s_00011],0);
constraint int_lt_reif(s_00018,aux1118,aux1119_BOOL);
constraint int_le_reif(s_00011, s_00018,aux1120_BOOL);
constraint array_bool_and([aux1116_BOOL,aux1117_BOOL,aux1119_BOOL,aux1120_BOOL,w_00001_00011_BOOL],aux1121_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux1122_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux1123_BOOL);
constraint int_lin_eq([-1,1,1],[aux1124,2,s_00012],0);
constraint int_lt_reif(s_00018,aux1124,aux1125_BOOL);
constraint int_le_reif(s_00012, s_00018,aux1126_BOOL);
constraint array_bool_and([aux1122_BOOL,aux1123_BOOL,aux1125_BOOL,aux1126_BOOL,w_00001_00012_BOOL],aux1127_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1128_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux1129_BOOL);
constraint int_lin_eq([-1,1,1],[aux1130,1,s_00013],0);
constraint int_lt_reif(s_00018,aux1130,aux1131_BOOL);
constraint int_le_reif(s_00013, s_00018,aux1132_BOOL);
constraint array_bool_and([aux1128_BOOL,aux1129_BOOL,aux1131_BOOL,aux1132_BOOL,w_00001_00013_BOOL],aux1133_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1134_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux1135_BOOL);
constraint int_lin_eq([-1,1,1],[aux1136,4,s_00014],0);
constraint int_lt_reif(s_00018,aux1136,aux1137_BOOL);
constraint int_le_reif(s_00014, s_00018,aux1138_BOOL);
constraint array_bool_and([aux1134_BOOL,aux1135_BOOL,aux1137_BOOL,aux1138_BOOL,w_00001_00014_BOOL],aux1139_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1140_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux1141_BOOL);
constraint int_lin_eq([-1,1,1],[aux1142,2,s_00015],0);
constraint int_lt_reif(s_00018,aux1142,aux1143_BOOL);
constraint int_le_reif(s_00015, s_00018,aux1144_BOOL);
constraint array_bool_and([aux1140_BOOL,aux1141_BOOL,aux1143_BOOL,aux1144_BOOL,w_00001_00015_BOOL],aux1145_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux1146_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux1147_BOOL);
constraint int_lin_eq([-1,1,1],[aux1148,3,s_00016],0);
constraint int_lt_reif(s_00018,aux1148,aux1149_BOOL);
constraint int_le_reif(s_00016, s_00018,aux1150_BOOL);
constraint array_bool_and([aux1146_BOOL,aux1147_BOOL,aux1149_BOOL,aux1150_BOOL,w_00001_00016_BOOL],aux1151_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux1152_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux1153_BOOL);
constraint int_lin_eq([-1,1,1],[aux1154,1,s_00017],0);
constraint int_lt_reif(s_00018,aux1154,aux1155_BOOL);
constraint int_le_reif(s_00017, s_00018,aux1156_BOOL);
constraint array_bool_and([aux1152_BOOL,aux1153_BOOL,aux1155_BOOL,aux1156_BOOL,w_00001_00017_BOOL],aux1157_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux1158_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux1159_BOOL);
constraint int_lin_eq([-1,1,1],[aux1160,2,s_00019],0);
constraint int_lt_reif(s_00018,aux1160,aux1161_BOOL);
constraint int_le_reif(s_00019, s_00018,aux1162_BOOL);
constraint array_bool_and([aux1158_BOOL,aux1159_BOOL,aux1161_BOOL,aux1162_BOOL,w_00001_00019_BOOL],aux1163_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux1164_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux1165_BOOL);
constraint int_lin_eq([-1,1,1],[aux1166,3,s_00020],0);
constraint int_lt_reif(s_00018,aux1166,aux1167_BOOL);
constraint int_le_reif(s_00020, s_00018,aux1168_BOOL);
constraint array_bool_and([aux1164_BOOL,aux1165_BOOL,aux1167_BOOL,aux1168_BOOL,w_00001_00020_BOOL],aux1169_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux1055_INTEGER,aux1061_INTEGER,aux1067_INTEGER,aux1073_INTEGER,aux1079_INTEGER,aux1085_INTEGER,aux1091_INTEGER,aux1097_INTEGER,aux1103_INTEGER,aux1109_INTEGER,aux1115_INTEGER,aux1121_INTEGER,aux1127_INTEGER,aux1133_INTEGER,aux1139_INTEGER,aux1145_INTEGER,aux1151_INTEGER,aux1157_INTEGER,aux1163_INTEGER,aux1169_INTEGER,1],0,aux1170_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1171_BOOL);
constraint int_lin_eq([-1,1,1],[aux1172,1,s_00010],0);
constraint int_lt_reif(s_00010,aux1172,aux1173_BOOL);
constraint array_bool_and([aux1171_BOOL,aux1173_BOOL,w_00001_00010_BOOL],aux1174_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux1175_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1176_BOOL);
constraint int_lin_eq([-1,1,1],[aux1177,1,s_00001],0);
constraint int_lt_reif(s_00010,aux1177,aux1178_BOOL);
constraint int_le_reif(s_00001, s_00010,aux1179_BOOL);
constraint array_bool_and([aux1175_BOOL,aux1176_BOOL,aux1178_BOOL,aux1179_BOOL,w_00001_00001_BOOL],aux1180_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1181_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1182_BOOL);
constraint int_lin_eq([-1,1,1],[aux1183,2,s_00002],0);
constraint int_lt_reif(s_00010,aux1183,aux1184_BOOL);
constraint int_le_reif(s_00002, s_00010,aux1185_BOOL);
constraint array_bool_and([aux1181_BOOL,aux1182_BOOL,aux1184_BOOL,aux1185_BOOL,w_00001_00002_BOOL],aux1186_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux1187_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1188_BOOL);
constraint int_lin_eq([-1,1,1],[aux1189,3,s_00003],0);
constraint int_lt_reif(s_00010,aux1189,aux1190_BOOL);
constraint int_le_reif(s_00003, s_00010,aux1191_BOOL);
constraint array_bool_and([aux1187_BOOL,aux1188_BOOL,aux1190_BOOL,aux1191_BOOL,w_00001_00003_BOOL],aux1192_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux1193_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1194_BOOL);
constraint int_lin_eq([-1,1,1],[aux1195,2,s_00004],0);
constraint int_lt_reif(s_00010,aux1195,aux1196_BOOL);
constraint int_le_reif(s_00004, s_00010,aux1197_BOOL);
constraint array_bool_and([aux1193_BOOL,aux1194_BOOL,aux1196_BOOL,aux1197_BOOL,w_00001_00004_BOOL],aux1198_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux1199_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1200_BOOL);
constraint int_lin_eq([-1,1,1],[aux1201,2,s_00005],0);
constraint int_lt_reif(s_00010,aux1201,aux1202_BOOL);
constraint int_le_reif(s_00005, s_00010,aux1203_BOOL);
constraint array_bool_and([aux1199_BOOL,aux1200_BOOL,aux1202_BOOL,aux1203_BOOL,w_00001_00005_BOOL],aux1204_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1205_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1206_BOOL);
constraint int_lin_eq([-1,1,1],[aux1207,3,s_00006],0);
constraint int_lt_reif(s_00010,aux1207,aux1208_BOOL);
constraint int_le_reif(s_00006, s_00010,aux1209_BOOL);
constraint array_bool_and([aux1205_BOOL,aux1206_BOOL,aux1208_BOOL,aux1209_BOOL,w_00001_00006_BOOL],aux1210_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux1211_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1212_BOOL);
constraint int_lin_eq([-1,1,1],[aux1213,2,s_00007],0);
constraint int_lt_reif(s_00010,aux1213,aux1214_BOOL);
constraint int_le_reif(s_00007, s_00010,aux1215_BOOL);
constraint array_bool_and([aux1211_BOOL,aux1212_BOOL,aux1214_BOOL,aux1215_BOOL,w_00001_00007_BOOL],aux1216_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux1217_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1218_BOOL);
constraint int_lin_eq([-1,1,1],[aux1219,1,s_00008],0);
constraint int_lt_reif(s_00010,aux1219,aux1220_BOOL);
constraint int_le_reif(s_00008, s_00010,aux1221_BOOL);
constraint array_bool_and([aux1217_BOOL,aux1218_BOOL,aux1220_BOOL,aux1221_BOOL,w_00001_00008_BOOL],aux1222_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux1223_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1224_BOOL);
constraint int_lin_eq([-1,1,1],[aux1225,2,s_00009],0);
constraint int_lt_reif(s_00010,aux1225,aux1226_BOOL);
constraint int_le_reif(s_00009, s_00010,aux1227_BOOL);
constraint array_bool_and([aux1223_BOOL,aux1224_BOOL,aux1226_BOOL,aux1227_BOOL,w_00001_00009_BOOL],aux1228_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1229_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux1230_BOOL);
constraint int_lin_eq([-1,1,1],[aux1231,2,s_00011],0);
constraint int_lt_reif(s_00010,aux1231,aux1232_BOOL);
constraint int_le_reif(s_00011, s_00010,aux1233_BOOL);
constraint array_bool_and([aux1229_BOOL,aux1230_BOOL,aux1232_BOOL,aux1233_BOOL,w_00001_00011_BOOL],aux1234_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1235_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux1236_BOOL);
constraint int_lin_eq([-1,1,1],[aux1237,2,s_00012],0);
constraint int_lt_reif(s_00010,aux1237,aux1238_BOOL);
constraint int_le_reif(s_00012, s_00010,aux1239_BOOL);
constraint array_bool_and([aux1235_BOOL,aux1236_BOOL,aux1238_BOOL,aux1239_BOOL,w_00001_00012_BOOL],aux1240_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1241_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1242_BOOL);
constraint int_lin_eq([-1,1,1],[aux1243,1,s_00013],0);
constraint int_lt_reif(s_00010,aux1243,aux1244_BOOL);
constraint int_le_reif(s_00013, s_00010,aux1245_BOOL);
constraint array_bool_and([aux1241_BOOL,aux1242_BOOL,aux1244_BOOL,aux1245_BOOL,w_00001_00013_BOOL],aux1246_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1247_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1248_BOOL);
constraint int_lin_eq([-1,1,1],[aux1249,2,s_00015],0);
constraint int_lt_reif(s_00010,aux1249,aux1250_BOOL);
constraint int_le_reif(s_00015, s_00010,aux1251_BOOL);
constraint array_bool_and([aux1247_BOOL,aux1248_BOOL,aux1250_BOOL,aux1251_BOOL,w_00001_00015_BOOL],aux1252_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1253_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1254_BOOL);
constraint int_lin_eq([-1,1,1],[aux1255,4,s_00014],0);
constraint int_lt_reif(s_00010,aux1255,aux1256_BOOL);
constraint int_le_reif(s_00014, s_00010,aux1257_BOOL);
constraint array_bool_and([aux1253_BOOL,aux1254_BOOL,aux1256_BOOL,aux1257_BOOL,w_00001_00014_BOOL],aux1258_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1259_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux1260_BOOL);
constraint int_lin_eq([-1,1,1],[aux1261,1,s_00017],0);
constraint int_lt_reif(s_00010,aux1261,aux1262_BOOL);
constraint int_le_reif(s_00017, s_00010,aux1263_BOOL);
constraint array_bool_and([aux1259_BOOL,aux1260_BOOL,aux1262_BOOL,aux1263_BOOL,w_00001_00017_BOOL],aux1264_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1265_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux1266_BOOL);
constraint int_lin_eq([-1,1,1],[aux1267,3,s_00016],0);
constraint int_lt_reif(s_00010,aux1267,aux1268_BOOL);
constraint int_le_reif(s_00016, s_00010,aux1269_BOOL);
constraint array_bool_and([aux1265_BOOL,aux1266_BOOL,aux1268_BOOL,aux1269_BOOL,w_00001_00016_BOOL],aux1270_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1271_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux1272_BOOL);
constraint int_lin_eq([-1,1,1],[aux1273,3,s_00018],0);
constraint int_lt_reif(s_00010,aux1273,aux1274_BOOL);
constraint int_le_reif(s_00018, s_00010,aux1275_BOOL);
constraint array_bool_and([aux1271_BOOL,aux1272_BOOL,aux1274_BOOL,aux1275_BOOL,w_00001_00018_BOOL],aux1276_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1277_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux1278_BOOL);
constraint int_lin_eq([-1,1,1],[aux1279,2,s_00019],0);
constraint int_lt_reif(s_00010,aux1279,aux1280_BOOL);
constraint int_le_reif(s_00019, s_00010,aux1281_BOOL);
constraint array_bool_and([aux1277_BOOL,aux1278_BOOL,aux1280_BOOL,aux1281_BOOL,w_00001_00019_BOOL],aux1282_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1283_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux1284_BOOL);
constraint int_lin_eq([-1,1,1],[aux1285,3,s_00020],0);
constraint int_lt_reif(s_00010,aux1285,aux1286_BOOL);
constraint int_le_reif(s_00020, s_00010,aux1287_BOOL);
constraint array_bool_and([aux1283_BOOL,aux1284_BOOL,aux1286_BOOL,aux1287_BOOL,w_00001_00020_BOOL],aux1288_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux1174_INTEGER,aux1180_INTEGER,aux1186_INTEGER,aux1192_INTEGER,aux1198_INTEGER,aux1204_INTEGER,aux1210_INTEGER,aux1216_INTEGER,aux1222_INTEGER,aux1228_INTEGER,aux1234_INTEGER,aux1240_INTEGER,aux1246_INTEGER,aux1252_INTEGER,aux1258_INTEGER,aux1264_INTEGER,aux1270_INTEGER,aux1276_INTEGER,aux1282_INTEGER,aux1288_INTEGER,1],0,aux1289_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux1290_BOOL);
constraint int_lin_eq([-1,1,1],[aux1291,1,s_00017],0);
constraint int_lt_reif(s_00017,aux1291,aux1292_BOOL);
constraint array_bool_and([aux1290_BOOL,aux1292_BOOL,w_00001_00017_BOOL],aux1293_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux1294_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux1295_BOOL);
constraint int_lin_eq([-1,1,1],[aux1296,1,s_00001],0);
constraint int_lt_reif(s_00017,aux1296,aux1297_BOOL);
constraint int_le_reif(s_00001, s_00017,aux1298_BOOL);
constraint array_bool_and([aux1294_BOOL,aux1295_BOOL,aux1297_BOOL,aux1298_BOOL,w_00001_00001_BOOL],aux1299_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1300_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux1301_BOOL);
constraint int_lin_eq([-1,1,1],[aux1302,2,s_00002],0);
constraint int_lt_reif(s_00017,aux1302,aux1303_BOOL);
constraint int_le_reif(s_00002, s_00017,aux1304_BOOL);
constraint array_bool_and([aux1300_BOOL,aux1301_BOOL,aux1303_BOOL,aux1304_BOOL,w_00001_00002_BOOL],aux1305_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux1306_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux1307_BOOL);
constraint int_lin_eq([-1,1,1],[aux1308,3,s_00003],0);
constraint int_lt_reif(s_00017,aux1308,aux1309_BOOL);
constraint int_le_reif(s_00003, s_00017,aux1310_BOOL);
constraint array_bool_and([aux1306_BOOL,aux1307_BOOL,aux1309_BOOL,aux1310_BOOL,w_00001_00003_BOOL],aux1311_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux1312_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux1313_BOOL);
constraint int_lin_eq([-1,1,1],[aux1314,2,s_00004],0);
constraint int_lt_reif(s_00017,aux1314,aux1315_BOOL);
constraint int_le_reif(s_00004, s_00017,aux1316_BOOL);
constraint array_bool_and([aux1312_BOOL,aux1313_BOOL,aux1315_BOOL,aux1316_BOOL,w_00001_00004_BOOL],aux1317_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux1318_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux1319_BOOL);
constraint int_lin_eq([-1,1,1],[aux1320,2,s_00005],0);
constraint int_lt_reif(s_00017,aux1320,aux1321_BOOL);
constraint int_le_reif(s_00005, s_00017,aux1322_BOOL);
constraint array_bool_and([aux1318_BOOL,aux1319_BOOL,aux1321_BOOL,aux1322_BOOL,w_00001_00005_BOOL],aux1323_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1324_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux1325_BOOL);
constraint int_lin_eq([-1,1,1],[aux1326,3,s_00006],0);
constraint int_lt_reif(s_00017,aux1326,aux1327_BOOL);
constraint int_le_reif(s_00006, s_00017,aux1328_BOOL);
constraint array_bool_and([aux1324_BOOL,aux1325_BOOL,aux1327_BOOL,aux1328_BOOL,w_00001_00006_BOOL],aux1329_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux1330_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux1331_BOOL);
constraint int_lin_eq([-1,1,1],[aux1332,2,s_00007],0);
constraint int_lt_reif(s_00017,aux1332,aux1333_BOOL);
constraint int_le_reif(s_00007, s_00017,aux1334_BOOL);
constraint array_bool_and([aux1330_BOOL,aux1331_BOOL,aux1333_BOOL,aux1334_BOOL,w_00001_00007_BOOL],aux1335_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux1336_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux1337_BOOL);
constraint int_lin_eq([-1,1,1],[aux1338,1,s_00008],0);
constraint int_lt_reif(s_00017,aux1338,aux1339_BOOL);
constraint int_le_reif(s_00008, s_00017,aux1340_BOOL);
constraint array_bool_and([aux1336_BOOL,aux1337_BOOL,aux1339_BOOL,aux1340_BOOL,w_00001_00008_BOOL],aux1341_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux1342_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux1343_BOOL);
constraint int_lin_eq([-1,1,1],[aux1344,2,s_00009],0);
constraint int_lt_reif(s_00017,aux1344,aux1345_BOOL);
constraint int_le_reif(s_00009, s_00017,aux1346_BOOL);
constraint array_bool_and([aux1342_BOOL,aux1343_BOOL,aux1345_BOOL,aux1346_BOOL,w_00001_00009_BOOL],aux1347_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1348_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux1349_BOOL);
constraint int_lin_eq([-1,1,1],[aux1350,1,s_00010],0);
constraint int_lt_reif(s_00017,aux1350,aux1351_BOOL);
constraint int_le_reif(s_00010, s_00017,aux1352_BOOL);
constraint array_bool_and([aux1348_BOOL,aux1349_BOOL,aux1351_BOOL,aux1352_BOOL,w_00001_00010_BOOL],aux1353_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux1354_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux1355_BOOL);
constraint int_lin_eq([-1,1,1],[aux1356,2,s_00011],0);
constraint int_lt_reif(s_00017,aux1356,aux1357_BOOL);
constraint int_le_reif(s_00011, s_00017,aux1358_BOOL);
constraint array_bool_and([aux1354_BOOL,aux1355_BOOL,aux1357_BOOL,aux1358_BOOL,w_00001_00011_BOOL],aux1359_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux1360_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux1361_BOOL);
constraint int_lin_eq([-1,1,1],[aux1362,2,s_00012],0);
constraint int_lt_reif(s_00017,aux1362,aux1363_BOOL);
constraint int_le_reif(s_00012, s_00017,aux1364_BOOL);
constraint array_bool_and([aux1360_BOOL,aux1361_BOOL,aux1363_BOOL,aux1364_BOOL,w_00001_00012_BOOL],aux1365_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1366_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux1367_BOOL);
constraint int_lin_eq([-1,1,1],[aux1368,1,s_00013],0);
constraint int_lt_reif(s_00017,aux1368,aux1369_BOOL);
constraint int_le_reif(s_00013, s_00017,aux1370_BOOL);
constraint array_bool_and([aux1366_BOOL,aux1367_BOOL,aux1369_BOOL,aux1370_BOOL,w_00001_00013_BOOL],aux1371_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1372_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux1373_BOOL);
constraint int_lin_eq([-1,1,1],[aux1374,4,s_00014],0);
constraint int_lt_reif(s_00017,aux1374,aux1375_BOOL);
constraint int_le_reif(s_00014, s_00017,aux1376_BOOL);
constraint array_bool_and([aux1372_BOOL,aux1373_BOOL,aux1375_BOOL,aux1376_BOOL,w_00001_00014_BOOL],aux1377_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1378_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux1379_BOOL);
constraint int_lin_eq([-1,1,1],[aux1380,2,s_00015],0);
constraint int_lt_reif(s_00017,aux1380,aux1381_BOOL);
constraint int_le_reif(s_00015, s_00017,aux1382_BOOL);
constraint array_bool_and([aux1378_BOOL,aux1379_BOOL,aux1381_BOOL,aux1382_BOOL,w_00001_00015_BOOL],aux1383_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux1384_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux1385_BOOL);
constraint int_lin_eq([-1,1,1],[aux1386,3,s_00016],0);
constraint int_lt_reif(s_00017,aux1386,aux1387_BOOL);
constraint int_le_reif(s_00016, s_00017,aux1388_BOOL);
constraint array_bool_and([aux1384_BOOL,aux1385_BOOL,aux1387_BOOL,aux1388_BOOL,w_00001_00016_BOOL],aux1389_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux1390_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux1391_BOOL);
constraint int_lin_eq([-1,1,1],[aux1392,3,s_00018],0);
constraint int_lt_reif(s_00017,aux1392,aux1393_BOOL);
constraint int_le_reif(s_00018, s_00017,aux1394_BOOL);
constraint array_bool_and([aux1390_BOOL,aux1391_BOOL,aux1393_BOOL,aux1394_BOOL,w_00001_00018_BOOL],aux1395_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux1396_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux1397_BOOL);
constraint int_lin_eq([-1,1,1],[aux1398,2,s_00019],0);
constraint int_lt_reif(s_00017,aux1398,aux1399_BOOL);
constraint int_le_reif(s_00019, s_00017,aux1400_BOOL);
constraint array_bool_and([aux1396_BOOL,aux1397_BOOL,aux1399_BOOL,aux1400_BOOL,w_00001_00019_BOOL],aux1401_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux1402_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux1403_BOOL);
constraint int_lin_eq([-1,1,1],[aux1404,3,s_00020],0);
constraint int_lt_reif(s_00017,aux1404,aux1405_BOOL);
constraint int_le_reif(s_00020, s_00017,aux1406_BOOL);
constraint array_bool_and([aux1402_BOOL,aux1403_BOOL,aux1405_BOOL,aux1406_BOOL,w_00001_00020_BOOL],aux1407_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux1293_INTEGER,aux1299_INTEGER,aux1305_INTEGER,aux1311_INTEGER,aux1317_INTEGER,aux1323_INTEGER,aux1329_INTEGER,aux1335_INTEGER,aux1341_INTEGER,aux1347_INTEGER,aux1353_INTEGER,aux1359_INTEGER,aux1365_INTEGER,aux1371_INTEGER,aux1377_INTEGER,aux1383_INTEGER,aux1389_INTEGER,aux1395_INTEGER,aux1401_INTEGER,aux1407_INTEGER,1],0,aux1408_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1409_BOOL);
constraint int_lin_eq([-1,1,1],[aux1410,2,s_00015],0);
constraint int_lt_reif(s_00015,aux1410,aux1411_BOOL);
constraint array_bool_and([aux1409_BOOL,aux1411_BOOL,w_00001_00015_BOOL],aux1412_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux1413_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1414_BOOL);
constraint int_lin_eq([-1,1,1],[aux1415,1,s_00001],0);
constraint int_lt_reif(s_00015,aux1415,aux1416_BOOL);
constraint int_le_reif(s_00001, s_00015,aux1417_BOOL);
constraint array_bool_and([aux1413_BOOL,aux1414_BOOL,aux1416_BOOL,aux1417_BOOL,w_00001_00001_BOOL],aux1418_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1419_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1420_BOOL);
constraint int_lin_eq([-1,1,1],[aux1421,2,s_00002],0);
constraint int_lt_reif(s_00015,aux1421,aux1422_BOOL);
constraint int_le_reif(s_00002, s_00015,aux1423_BOOL);
constraint array_bool_and([aux1419_BOOL,aux1420_BOOL,aux1422_BOOL,aux1423_BOOL,w_00001_00002_BOOL],aux1424_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux1425_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1426_BOOL);
constraint int_lin_eq([-1,1,1],[aux1427,3,s_00003],0);
constraint int_lt_reif(s_00015,aux1427,aux1428_BOOL);
constraint int_le_reif(s_00003, s_00015,aux1429_BOOL);
constraint array_bool_and([aux1425_BOOL,aux1426_BOOL,aux1428_BOOL,aux1429_BOOL,w_00001_00003_BOOL],aux1430_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux1431_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1432_BOOL);
constraint int_lin_eq([-1,1,1],[aux1433,2,s_00004],0);
constraint int_lt_reif(s_00015,aux1433,aux1434_BOOL);
constraint int_le_reif(s_00004, s_00015,aux1435_BOOL);
constraint array_bool_and([aux1431_BOOL,aux1432_BOOL,aux1434_BOOL,aux1435_BOOL,w_00001_00004_BOOL],aux1436_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux1437_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1438_BOOL);
constraint int_lin_eq([-1,1,1],[aux1439,2,s_00005],0);
constraint int_lt_reif(s_00015,aux1439,aux1440_BOOL);
constraint int_le_reif(s_00005, s_00015,aux1441_BOOL);
constraint array_bool_and([aux1437_BOOL,aux1438_BOOL,aux1440_BOOL,aux1441_BOOL,w_00001_00005_BOOL],aux1442_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1443_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1444_BOOL);
constraint int_lin_eq([-1,1,1],[aux1445,3,s_00006],0);
constraint int_lt_reif(s_00015,aux1445,aux1446_BOOL);
constraint int_le_reif(s_00006, s_00015,aux1447_BOOL);
constraint array_bool_and([aux1443_BOOL,aux1444_BOOL,aux1446_BOOL,aux1447_BOOL,w_00001_00006_BOOL],aux1448_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux1449_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1450_BOOL);
constraint int_lin_eq([-1,1,1],[aux1451,2,s_00007],0);
constraint int_lt_reif(s_00015,aux1451,aux1452_BOOL);
constraint int_le_reif(s_00007, s_00015,aux1453_BOOL);
constraint array_bool_and([aux1449_BOOL,aux1450_BOOL,aux1452_BOOL,aux1453_BOOL,w_00001_00007_BOOL],aux1454_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux1455_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1456_BOOL);
constraint int_lin_eq([-1,1,1],[aux1457,1,s_00008],0);
constraint int_lt_reif(s_00015,aux1457,aux1458_BOOL);
constraint int_le_reif(s_00008, s_00015,aux1459_BOOL);
constraint array_bool_and([aux1455_BOOL,aux1456_BOOL,aux1458_BOOL,aux1459_BOOL,w_00001_00008_BOOL],aux1460_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux1461_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1462_BOOL);
constraint int_lin_eq([-1,1,1],[aux1463,2,s_00009],0);
constraint int_lt_reif(s_00015,aux1463,aux1464_BOOL);
constraint int_le_reif(s_00009, s_00015,aux1465_BOOL);
constraint array_bool_and([aux1461_BOOL,aux1462_BOOL,aux1464_BOOL,aux1465_BOOL,w_00001_00009_BOOL],aux1466_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1467_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1468_BOOL);
constraint int_lin_eq([-1,1,1],[aux1469,1,s_00010],0);
constraint int_lt_reif(s_00015,aux1469,aux1470_BOOL);
constraint int_le_reif(s_00010, s_00015,aux1471_BOOL);
constraint array_bool_and([aux1467_BOOL,aux1468_BOOL,aux1470_BOOL,aux1471_BOOL,w_00001_00010_BOOL],aux1472_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux1473_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1474_BOOL);
constraint int_lin_eq([-1,1,1],[aux1475,2,s_00011],0);
constraint int_lt_reif(s_00015,aux1475,aux1476_BOOL);
constraint int_le_reif(s_00011, s_00015,aux1477_BOOL);
constraint array_bool_and([aux1473_BOOL,aux1474_BOOL,aux1476_BOOL,aux1477_BOOL,w_00001_00011_BOOL],aux1478_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux1479_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1480_BOOL);
constraint int_lin_eq([-1,1,1],[aux1481,2,s_00012],0);
constraint int_lt_reif(s_00015,aux1481,aux1482_BOOL);
constraint int_le_reif(s_00012, s_00015,aux1483_BOOL);
constraint array_bool_and([aux1479_BOOL,aux1480_BOOL,aux1482_BOOL,aux1483_BOOL,w_00001_00012_BOOL],aux1484_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1485_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1486_BOOL);
constraint int_lin_eq([-1,1,1],[aux1487,1,s_00013],0);
constraint int_lt_reif(s_00015,aux1487,aux1488_BOOL);
constraint int_le_reif(s_00013, s_00015,aux1489_BOOL);
constraint array_bool_and([aux1485_BOOL,aux1486_BOOL,aux1488_BOOL,aux1489_BOOL,w_00001_00013_BOOL],aux1490_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1491_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1492_BOOL);
constraint int_lin_eq([-1,1,1],[aux1493,4,s_00014],0);
constraint int_lt_reif(s_00015,aux1493,aux1494_BOOL);
constraint int_le_reif(s_00014, s_00015,aux1495_BOOL);
constraint array_bool_and([aux1491_BOOL,aux1492_BOOL,aux1494_BOOL,aux1495_BOOL,w_00001_00014_BOOL],aux1496_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1497_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux1498_BOOL);
constraint int_lin_eq([-1,1,1],[aux1499,1,s_00017],0);
constraint int_lt_reif(s_00015,aux1499,aux1500_BOOL);
constraint int_le_reif(s_00017, s_00015,aux1501_BOOL);
constraint array_bool_and([aux1497_BOOL,aux1498_BOOL,aux1500_BOOL,aux1501_BOOL,w_00001_00017_BOOL],aux1502_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1503_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux1504_BOOL);
constraint int_lin_eq([-1,1,1],[aux1505,3,s_00016],0);
constraint int_lt_reif(s_00015,aux1505,aux1506_BOOL);
constraint int_le_reif(s_00016, s_00015,aux1507_BOOL);
constraint array_bool_and([aux1503_BOOL,aux1504_BOOL,aux1506_BOOL,aux1507_BOOL,w_00001_00016_BOOL],aux1508_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1509_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux1510_BOOL);
constraint int_lin_eq([-1,1,1],[aux1511,3,s_00018],0);
constraint int_lt_reif(s_00015,aux1511,aux1512_BOOL);
constraint int_le_reif(s_00018, s_00015,aux1513_BOOL);
constraint array_bool_and([aux1509_BOOL,aux1510_BOOL,aux1512_BOOL,aux1513_BOOL,w_00001_00018_BOOL],aux1514_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1515_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux1516_BOOL);
constraint int_lin_eq([-1,1,1],[aux1517,2,s_00019],0);
constraint int_lt_reif(s_00015,aux1517,aux1518_BOOL);
constraint int_le_reif(s_00019, s_00015,aux1519_BOOL);
constraint array_bool_and([aux1515_BOOL,aux1516_BOOL,aux1518_BOOL,aux1519_BOOL,w_00001_00019_BOOL],aux1520_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1521_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux1522_BOOL);
constraint int_lin_eq([-1,1,1],[aux1523,3,s_00020],0);
constraint int_lt_reif(s_00015,aux1523,aux1524_BOOL);
constraint int_le_reif(s_00020, s_00015,aux1525_BOOL);
constraint array_bool_and([aux1521_BOOL,aux1522_BOOL,aux1524_BOOL,aux1525_BOOL,w_00001_00020_BOOL],aux1526_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux1412_INTEGER,aux1418_INTEGER,aux1424_INTEGER,aux1430_INTEGER,aux1436_INTEGER,aux1442_INTEGER,aux1448_INTEGER,aux1454_INTEGER,aux1460_INTEGER,aux1466_INTEGER,aux1472_INTEGER,aux1478_INTEGER,aux1484_INTEGER,aux1490_INTEGER,aux1496_INTEGER,aux1502_INTEGER,aux1508_INTEGER,aux1514_INTEGER,aux1520_INTEGER,aux1526_INTEGER,1],0,aux1527_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1528_BOOL);
constraint int_lin_eq([-1,1,1],[aux1529,1,s_00013],0);
constraint int_lt_reif(s_00013,aux1529,aux1530_BOOL);
constraint array_bool_and([aux1528_BOOL,aux1530_BOOL,w_00001_00013_BOOL],aux1531_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux1532_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1533_BOOL);
constraint int_lin_eq([-1,1,1],[aux1534,1,s_00001],0);
constraint int_lt_reif(s_00013,aux1534,aux1535_BOOL);
constraint int_le_reif(s_00001, s_00013,aux1536_BOOL);
constraint array_bool_and([aux1532_BOOL,aux1533_BOOL,aux1535_BOOL,aux1536_BOOL,w_00001_00001_BOOL],aux1537_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1538_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1539_BOOL);
constraint int_lin_eq([-1,1,1],[aux1540,2,s_00002],0);
constraint int_lt_reif(s_00013,aux1540,aux1541_BOOL);
constraint int_le_reif(s_00002, s_00013,aux1542_BOOL);
constraint array_bool_and([aux1538_BOOL,aux1539_BOOL,aux1541_BOOL,aux1542_BOOL,w_00001_00002_BOOL],aux1543_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux1544_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1545_BOOL);
constraint int_lin_eq([-1,1,1],[aux1546,3,s_00003],0);
constraint int_lt_reif(s_00013,aux1546,aux1547_BOOL);
constraint int_le_reif(s_00003, s_00013,aux1548_BOOL);
constraint array_bool_and([aux1544_BOOL,aux1545_BOOL,aux1547_BOOL,aux1548_BOOL,w_00001_00003_BOOL],aux1549_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux1550_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1551_BOOL);
constraint int_lin_eq([-1,1,1],[aux1552,2,s_00004],0);
constraint int_lt_reif(s_00013,aux1552,aux1553_BOOL);
constraint int_le_reif(s_00004, s_00013,aux1554_BOOL);
constraint array_bool_and([aux1550_BOOL,aux1551_BOOL,aux1553_BOOL,aux1554_BOOL,w_00001_00004_BOOL],aux1555_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux1556_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1557_BOOL);
constraint int_lin_eq([-1,1,1],[aux1558,2,s_00005],0);
constraint int_lt_reif(s_00013,aux1558,aux1559_BOOL);
constraint int_le_reif(s_00005, s_00013,aux1560_BOOL);
constraint array_bool_and([aux1556_BOOL,aux1557_BOOL,aux1559_BOOL,aux1560_BOOL,w_00001_00005_BOOL],aux1561_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1562_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1563_BOOL);
constraint int_lin_eq([-1,1,1],[aux1564,3,s_00006],0);
constraint int_lt_reif(s_00013,aux1564,aux1565_BOOL);
constraint int_le_reif(s_00006, s_00013,aux1566_BOOL);
constraint array_bool_and([aux1562_BOOL,aux1563_BOOL,aux1565_BOOL,aux1566_BOOL,w_00001_00006_BOOL],aux1567_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux1568_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1569_BOOL);
constraint int_lin_eq([-1,1,1],[aux1570,2,s_00007],0);
constraint int_lt_reif(s_00013,aux1570,aux1571_BOOL);
constraint int_le_reif(s_00007, s_00013,aux1572_BOOL);
constraint array_bool_and([aux1568_BOOL,aux1569_BOOL,aux1571_BOOL,aux1572_BOOL,w_00001_00007_BOOL],aux1573_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux1574_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1575_BOOL);
constraint int_lin_eq([-1,1,1],[aux1576,1,s_00008],0);
constraint int_lt_reif(s_00013,aux1576,aux1577_BOOL);
constraint int_le_reif(s_00008, s_00013,aux1578_BOOL);
constraint array_bool_and([aux1574_BOOL,aux1575_BOOL,aux1577_BOOL,aux1578_BOOL,w_00001_00008_BOOL],aux1579_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux1580_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1581_BOOL);
constraint int_lin_eq([-1,1,1],[aux1582,2,s_00009],0);
constraint int_lt_reif(s_00013,aux1582,aux1583_BOOL);
constraint int_le_reif(s_00009, s_00013,aux1584_BOOL);
constraint array_bool_and([aux1580_BOOL,aux1581_BOOL,aux1583_BOOL,aux1584_BOOL,w_00001_00009_BOOL],aux1585_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1586_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1587_BOOL);
constraint int_lin_eq([-1,1,1],[aux1588,1,s_00010],0);
constraint int_lt_reif(s_00013,aux1588,aux1589_BOOL);
constraint int_le_reif(s_00010, s_00013,aux1590_BOOL);
constraint array_bool_and([aux1586_BOOL,aux1587_BOOL,aux1589_BOOL,aux1590_BOOL,w_00001_00010_BOOL],aux1591_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux1592_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1593_BOOL);
constraint int_lin_eq([-1,1,1],[aux1594,2,s_00011],0);
constraint int_lt_reif(s_00013,aux1594,aux1595_BOOL);
constraint int_le_reif(s_00011, s_00013,aux1596_BOOL);
constraint array_bool_and([aux1592_BOOL,aux1593_BOOL,aux1595_BOOL,aux1596_BOOL,w_00001_00011_BOOL],aux1597_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux1598_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1599_BOOL);
constraint int_lin_eq([-1,1,1],[aux1600,2,s_00012],0);
constraint int_lt_reif(s_00013,aux1600,aux1601_BOOL);
constraint int_le_reif(s_00012, s_00013,aux1602_BOOL);
constraint array_bool_and([aux1598_BOOL,aux1599_BOOL,aux1601_BOOL,aux1602_BOOL,w_00001_00012_BOOL],aux1603_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1604_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1605_BOOL);
constraint int_lin_eq([-1,1,1],[aux1606,2,s_00015],0);
constraint int_lt_reif(s_00013,aux1606,aux1607_BOOL);
constraint int_le_reif(s_00015, s_00013,aux1608_BOOL);
constraint array_bool_and([aux1604_BOOL,aux1605_BOOL,aux1607_BOOL,aux1608_BOOL,w_00001_00015_BOOL],aux1609_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1610_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1611_BOOL);
constraint int_lin_eq([-1,1,1],[aux1612,4,s_00014],0);
constraint int_lt_reif(s_00013,aux1612,aux1613_BOOL);
constraint int_le_reif(s_00014, s_00013,aux1614_BOOL);
constraint array_bool_and([aux1610_BOOL,aux1611_BOOL,aux1613_BOOL,aux1614_BOOL,w_00001_00014_BOOL],aux1615_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1616_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux1617_BOOL);
constraint int_lin_eq([-1,1,1],[aux1618,1,s_00017],0);
constraint int_lt_reif(s_00013,aux1618,aux1619_BOOL);
constraint int_le_reif(s_00017, s_00013,aux1620_BOOL);
constraint array_bool_and([aux1616_BOOL,aux1617_BOOL,aux1619_BOOL,aux1620_BOOL,w_00001_00017_BOOL],aux1621_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1622_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux1623_BOOL);
constraint int_lin_eq([-1,1,1],[aux1624,3,s_00016],0);
constraint int_lt_reif(s_00013,aux1624,aux1625_BOOL);
constraint int_le_reif(s_00016, s_00013,aux1626_BOOL);
constraint array_bool_and([aux1622_BOOL,aux1623_BOOL,aux1625_BOOL,aux1626_BOOL,w_00001_00016_BOOL],aux1627_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1628_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux1629_BOOL);
constraint int_lin_eq([-1,1,1],[aux1630,3,s_00018],0);
constraint int_lt_reif(s_00013,aux1630,aux1631_BOOL);
constraint int_le_reif(s_00018, s_00013,aux1632_BOOL);
constraint array_bool_and([aux1628_BOOL,aux1629_BOOL,aux1631_BOOL,aux1632_BOOL,w_00001_00018_BOOL],aux1633_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1634_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux1635_BOOL);
constraint int_lin_eq([-1,1,1],[aux1636,2,s_00019],0);
constraint int_lt_reif(s_00013,aux1636,aux1637_BOOL);
constraint int_le_reif(s_00019, s_00013,aux1638_BOOL);
constraint array_bool_and([aux1634_BOOL,aux1635_BOOL,aux1637_BOOL,aux1638_BOOL,w_00001_00019_BOOL],aux1639_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1640_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux1641_BOOL);
constraint int_lin_eq([-1,1,1],[aux1642,3,s_00020],0);
constraint int_lt_reif(s_00013,aux1642,aux1643_BOOL);
constraint int_le_reif(s_00020, s_00013,aux1644_BOOL);
constraint array_bool_and([aux1640_BOOL,aux1641_BOOL,aux1643_BOOL,aux1644_BOOL,w_00001_00020_BOOL],aux1645_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux1531_INTEGER,aux1537_INTEGER,aux1543_INTEGER,aux1549_INTEGER,aux1555_INTEGER,aux1561_INTEGER,aux1567_INTEGER,aux1573_INTEGER,aux1579_INTEGER,aux1585_INTEGER,aux1591_INTEGER,aux1597_INTEGER,aux1603_INTEGER,aux1609_INTEGER,aux1615_INTEGER,aux1621_INTEGER,aux1627_INTEGER,aux1633_INTEGER,aux1639_INTEGER,aux1645_INTEGER,1],0,aux1646_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1647_BOOL);
constraint int_lin_eq([-1,1,1],[aux1648,2,s_00002],0);
constraint int_lt_reif(s_00002,aux1648,aux1649_BOOL);
constraint array_bool_and([aux1647_BOOL,aux1649_BOOL,w_00001_00002_BOOL],aux1650_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux1651_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1652_BOOL);
constraint int_lin_eq([-1,1,1],[aux1653,1,s_00001],0);
constraint int_lt_reif(s_00002,aux1653,aux1654_BOOL);
constraint int_le_reif(s_00001, s_00002,aux1655_BOOL);
constraint array_bool_and([aux1651_BOOL,aux1652_BOOL,aux1654_BOOL,aux1655_BOOL,w_00001_00001_BOOL],aux1656_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1657_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux1658_BOOL);
constraint int_lin_eq([-1,1,1],[aux1659,3,s_00003],0);
constraint int_lt_reif(s_00002,aux1659,aux1660_BOOL);
constraint int_le_reif(s_00003, s_00002,aux1661_BOOL);
constraint array_bool_and([aux1657_BOOL,aux1658_BOOL,aux1660_BOOL,aux1661_BOOL,w_00001_00003_BOOL],aux1662_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1663_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux1664_BOOL);
constraint int_lin_eq([-1,1,1],[aux1665,2,s_00004],0);
constraint int_lt_reif(s_00002,aux1665,aux1666_BOOL);
constraint int_le_reif(s_00004, s_00002,aux1667_BOOL);
constraint array_bool_and([aux1663_BOOL,aux1664_BOOL,aux1666_BOOL,aux1667_BOOL,w_00001_00004_BOOL],aux1668_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1669_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux1670_BOOL);
constraint int_lin_eq([-1,1,1],[aux1671,2,s_00005],0);
constraint int_lt_reif(s_00002,aux1671,aux1672_BOOL);
constraint int_le_reif(s_00005, s_00002,aux1673_BOOL);
constraint array_bool_and([aux1669_BOOL,aux1670_BOOL,aux1672_BOOL,aux1673_BOOL,w_00001_00005_BOOL],aux1674_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1675_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1676_BOOL);
constraint int_lin_eq([-1,1,1],[aux1677,3,s_00006],0);
constraint int_lt_reif(s_00002,aux1677,aux1678_BOOL);
constraint int_le_reif(s_00006, s_00002,aux1679_BOOL);
constraint array_bool_and([aux1675_BOOL,aux1676_BOOL,aux1678_BOOL,aux1679_BOOL,w_00001_00006_BOOL],aux1680_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1681_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux1682_BOOL);
constraint int_lin_eq([-1,1,1],[aux1683,2,s_00007],0);
constraint int_lt_reif(s_00002,aux1683,aux1684_BOOL);
constraint int_le_reif(s_00007, s_00002,aux1685_BOOL);
constraint array_bool_and([aux1681_BOOL,aux1682_BOOL,aux1684_BOOL,aux1685_BOOL,w_00001_00007_BOOL],aux1686_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1687_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux1688_BOOL);
constraint int_lin_eq([-1,1,1],[aux1689,1,s_00008],0);
constraint int_lt_reif(s_00002,aux1689,aux1690_BOOL);
constraint int_le_reif(s_00008, s_00002,aux1691_BOOL);
constraint array_bool_and([aux1687_BOOL,aux1688_BOOL,aux1690_BOOL,aux1691_BOOL,w_00001_00008_BOOL],aux1692_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1693_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux1694_BOOL);
constraint int_lin_eq([-1,1,1],[aux1695,2,s_00009],0);
constraint int_lt_reif(s_00002,aux1695,aux1696_BOOL);
constraint int_le_reif(s_00009, s_00002,aux1697_BOOL);
constraint array_bool_and([aux1693_BOOL,aux1694_BOOL,aux1696_BOOL,aux1697_BOOL,w_00001_00009_BOOL],aux1698_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1699_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1700_BOOL);
constraint int_lin_eq([-1,1,1],[aux1701,1,s_00010],0);
constraint int_lt_reif(s_00002,aux1701,aux1702_BOOL);
constraint int_le_reif(s_00010, s_00002,aux1703_BOOL);
constraint array_bool_and([aux1699_BOOL,aux1700_BOOL,aux1702_BOOL,aux1703_BOOL,w_00001_00010_BOOL],aux1704_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1705_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux1706_BOOL);
constraint int_lin_eq([-1,1,1],[aux1707,2,s_00011],0);
constraint int_lt_reif(s_00002,aux1707,aux1708_BOOL);
constraint int_le_reif(s_00011, s_00002,aux1709_BOOL);
constraint array_bool_and([aux1705_BOOL,aux1706_BOOL,aux1708_BOOL,aux1709_BOOL,w_00001_00011_BOOL],aux1710_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1711_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux1712_BOOL);
constraint int_lin_eq([-1,1,1],[aux1713,2,s_00012],0);
constraint int_lt_reif(s_00002,aux1713,aux1714_BOOL);
constraint int_le_reif(s_00012, s_00002,aux1715_BOOL);
constraint array_bool_and([aux1711_BOOL,aux1712_BOOL,aux1714_BOOL,aux1715_BOOL,w_00001_00012_BOOL],aux1716_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1717_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1718_BOOL);
constraint int_lin_eq([-1,1,1],[aux1719,1,s_00013],0);
constraint int_lt_reif(s_00002,aux1719,aux1720_BOOL);
constraint int_le_reif(s_00013, s_00002,aux1721_BOOL);
constraint array_bool_and([aux1717_BOOL,aux1718_BOOL,aux1720_BOOL,aux1721_BOOL,w_00001_00013_BOOL],aux1722_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1723_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1724_BOOL);
constraint int_lin_eq([-1,1,1],[aux1725,2,s_00015],0);
constraint int_lt_reif(s_00002,aux1725,aux1726_BOOL);
constraint int_le_reif(s_00015, s_00002,aux1727_BOOL);
constraint array_bool_and([aux1723_BOOL,aux1724_BOOL,aux1726_BOOL,aux1727_BOOL,w_00001_00015_BOOL],aux1728_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1729_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1730_BOOL);
constraint int_lin_eq([-1,1,1],[aux1731,4,s_00014],0);
constraint int_lt_reif(s_00002,aux1731,aux1732_BOOL);
constraint int_le_reif(s_00014, s_00002,aux1733_BOOL);
constraint array_bool_and([aux1729_BOOL,aux1730_BOOL,aux1732_BOOL,aux1733_BOOL,w_00001_00014_BOOL],aux1734_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1735_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux1736_BOOL);
constraint int_lin_eq([-1,1,1],[aux1737,1,s_00017],0);
constraint int_lt_reif(s_00002,aux1737,aux1738_BOOL);
constraint int_le_reif(s_00017, s_00002,aux1739_BOOL);
constraint array_bool_and([aux1735_BOOL,aux1736_BOOL,aux1738_BOOL,aux1739_BOOL,w_00001_00017_BOOL],aux1740_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1741_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux1742_BOOL);
constraint int_lin_eq([-1,1,1],[aux1743,3,s_00016],0);
constraint int_lt_reif(s_00002,aux1743,aux1744_BOOL);
constraint int_le_reif(s_00016, s_00002,aux1745_BOOL);
constraint array_bool_and([aux1741_BOOL,aux1742_BOOL,aux1744_BOOL,aux1745_BOOL,w_00001_00016_BOOL],aux1746_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1747_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux1748_BOOL);
constraint int_lin_eq([-1,1,1],[aux1749,3,s_00018],0);
constraint int_lt_reif(s_00002,aux1749,aux1750_BOOL);
constraint int_le_reif(s_00018, s_00002,aux1751_BOOL);
constraint array_bool_and([aux1747_BOOL,aux1748_BOOL,aux1750_BOOL,aux1751_BOOL,w_00001_00018_BOOL],aux1752_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1753_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux1754_BOOL);
constraint int_lin_eq([-1,1,1],[aux1755,2,s_00019],0);
constraint int_lt_reif(s_00002,aux1755,aux1756_BOOL);
constraint int_le_reif(s_00019, s_00002,aux1757_BOOL);
constraint array_bool_and([aux1753_BOOL,aux1754_BOOL,aux1756_BOOL,aux1757_BOOL,w_00001_00019_BOOL],aux1758_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1759_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux1760_BOOL);
constraint int_lin_eq([-1,1,1],[aux1761,3,s_00020],0);
constraint int_lt_reif(s_00002,aux1761,aux1762_BOOL);
constraint int_le_reif(s_00020, s_00002,aux1763_BOOL);
constraint array_bool_and([aux1759_BOOL,aux1760_BOOL,aux1762_BOOL,aux1763_BOOL,w_00001_00020_BOOL],aux1764_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux1650_INTEGER,aux1656_INTEGER,aux1662_INTEGER,aux1668_INTEGER,aux1674_INTEGER,aux1680_INTEGER,aux1686_INTEGER,aux1692_INTEGER,aux1698_INTEGER,aux1704_INTEGER,aux1710_INTEGER,aux1716_INTEGER,aux1722_INTEGER,aux1728_INTEGER,aux1734_INTEGER,aux1740_INTEGER,aux1746_INTEGER,aux1752_INTEGER,aux1758_INTEGER,aux1764_INTEGER,1],0,aux1765_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux1766_BOOL);
constraint int_lin_eq([-1,1,1],[aux1767,2,s_00009],0);
constraint int_lt_reif(s_00009,aux1767,aux1768_BOOL);
constraint array_bool_and([aux1766_BOOL,aux1768_BOOL,w_00001_00009_BOOL],aux1769_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux1770_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux1771_BOOL);
constraint int_lin_eq([-1,1,1],[aux1772,1,s_00001],0);
constraint int_lt_reif(s_00009,aux1772,aux1773_BOOL);
constraint int_le_reif(s_00001, s_00009,aux1774_BOOL);
constraint array_bool_and([aux1770_BOOL,aux1771_BOOL,aux1773_BOOL,aux1774_BOOL,w_00001_00001_BOOL],aux1775_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1776_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux1777_BOOL);
constraint int_lin_eq([-1,1,1],[aux1778,2,s_00002],0);
constraint int_lt_reif(s_00009,aux1778,aux1779_BOOL);
constraint int_le_reif(s_00002, s_00009,aux1780_BOOL);
constraint array_bool_and([aux1776_BOOL,aux1777_BOOL,aux1779_BOOL,aux1780_BOOL,w_00001_00002_BOOL],aux1781_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux1782_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux1783_BOOL);
constraint int_lin_eq([-1,1,1],[aux1784,3,s_00003],0);
constraint int_lt_reif(s_00009,aux1784,aux1785_BOOL);
constraint int_le_reif(s_00003, s_00009,aux1786_BOOL);
constraint array_bool_and([aux1782_BOOL,aux1783_BOOL,aux1785_BOOL,aux1786_BOOL,w_00001_00003_BOOL],aux1787_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux1788_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux1789_BOOL);
constraint int_lin_eq([-1,1,1],[aux1790,2,s_00004],0);
constraint int_lt_reif(s_00009,aux1790,aux1791_BOOL);
constraint int_le_reif(s_00004, s_00009,aux1792_BOOL);
constraint array_bool_and([aux1788_BOOL,aux1789_BOOL,aux1791_BOOL,aux1792_BOOL,w_00001_00004_BOOL],aux1793_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux1794_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux1795_BOOL);
constraint int_lin_eq([-1,1,1],[aux1796,2,s_00005],0);
constraint int_lt_reif(s_00009,aux1796,aux1797_BOOL);
constraint int_le_reif(s_00005, s_00009,aux1798_BOOL);
constraint array_bool_and([aux1794_BOOL,aux1795_BOOL,aux1797_BOOL,aux1798_BOOL,w_00001_00005_BOOL],aux1799_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1800_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux1801_BOOL);
constraint int_lin_eq([-1,1,1],[aux1802,3,s_00006],0);
constraint int_lt_reif(s_00009,aux1802,aux1803_BOOL);
constraint int_le_reif(s_00006, s_00009,aux1804_BOOL);
constraint array_bool_and([aux1800_BOOL,aux1801_BOOL,aux1803_BOOL,aux1804_BOOL,w_00001_00006_BOOL],aux1805_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux1806_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux1807_BOOL);
constraint int_lin_eq([-1,1,1],[aux1808,2,s_00007],0);
constraint int_lt_reif(s_00009,aux1808,aux1809_BOOL);
constraint int_le_reif(s_00007, s_00009,aux1810_BOOL);
constraint array_bool_and([aux1806_BOOL,aux1807_BOOL,aux1809_BOOL,aux1810_BOOL,w_00001_00007_BOOL],aux1811_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux1812_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux1813_BOOL);
constraint int_lin_eq([-1,1,1],[aux1814,1,s_00008],0);
constraint int_lt_reif(s_00009,aux1814,aux1815_BOOL);
constraint int_le_reif(s_00008, s_00009,aux1816_BOOL);
constraint array_bool_and([aux1812_BOOL,aux1813_BOOL,aux1815_BOOL,aux1816_BOOL,w_00001_00008_BOOL],aux1817_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux1818_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1819_BOOL);
constraint int_lin_eq([-1,1,1],[aux1820,1,s_00010],0);
constraint int_lt_reif(s_00009,aux1820,aux1821_BOOL);
constraint int_le_reif(s_00010, s_00009,aux1822_BOOL);
constraint array_bool_and([aux1818_BOOL,aux1819_BOOL,aux1821_BOOL,aux1822_BOOL,w_00001_00010_BOOL],aux1823_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux1824_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux1825_BOOL);
constraint int_lin_eq([-1,1,1],[aux1826,2,s_00011],0);
constraint int_lt_reif(s_00009,aux1826,aux1827_BOOL);
constraint int_le_reif(s_00011, s_00009,aux1828_BOOL);
constraint array_bool_and([aux1824_BOOL,aux1825_BOOL,aux1827_BOOL,aux1828_BOOL,w_00001_00011_BOOL],aux1829_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux1830_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux1831_BOOL);
constraint int_lin_eq([-1,1,1],[aux1832,2,s_00012],0);
constraint int_lt_reif(s_00009,aux1832,aux1833_BOOL);
constraint int_le_reif(s_00012, s_00009,aux1834_BOOL);
constraint array_bool_and([aux1830_BOOL,aux1831_BOOL,aux1833_BOOL,aux1834_BOOL,w_00001_00012_BOOL],aux1835_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux1836_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1837_BOOL);
constraint int_lin_eq([-1,1,1],[aux1838,1,s_00013],0);
constraint int_lt_reif(s_00009,aux1838,aux1839_BOOL);
constraint int_le_reif(s_00013, s_00009,aux1840_BOOL);
constraint array_bool_and([aux1836_BOOL,aux1837_BOOL,aux1839_BOOL,aux1840_BOOL,w_00001_00013_BOOL],aux1841_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux1842_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1843_BOOL);
constraint int_lin_eq([-1,1,1],[aux1844,2,s_00015],0);
constraint int_lt_reif(s_00009,aux1844,aux1845_BOOL);
constraint int_le_reif(s_00015, s_00009,aux1846_BOOL);
constraint array_bool_and([aux1842_BOOL,aux1843_BOOL,aux1845_BOOL,aux1846_BOOL,w_00001_00015_BOOL],aux1847_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux1848_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1849_BOOL);
constraint int_lin_eq([-1,1,1],[aux1850,4,s_00014],0);
constraint int_lt_reif(s_00009,aux1850,aux1851_BOOL);
constraint int_le_reif(s_00014, s_00009,aux1852_BOOL);
constraint array_bool_and([aux1848_BOOL,aux1849_BOOL,aux1851_BOOL,aux1852_BOOL,w_00001_00014_BOOL],aux1853_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux1854_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux1855_BOOL);
constraint int_lin_eq([-1,1,1],[aux1856,1,s_00017],0);
constraint int_lt_reif(s_00009,aux1856,aux1857_BOOL);
constraint int_le_reif(s_00017, s_00009,aux1858_BOOL);
constraint array_bool_and([aux1854_BOOL,aux1855_BOOL,aux1857_BOOL,aux1858_BOOL,w_00001_00017_BOOL],aux1859_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux1860_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux1861_BOOL);
constraint int_lin_eq([-1,1,1],[aux1862,3,s_00016],0);
constraint int_lt_reif(s_00009,aux1862,aux1863_BOOL);
constraint int_le_reif(s_00016, s_00009,aux1864_BOOL);
constraint array_bool_and([aux1860_BOOL,aux1861_BOOL,aux1863_BOOL,aux1864_BOOL,w_00001_00016_BOOL],aux1865_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux1866_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux1867_BOOL);
constraint int_lin_eq([-1,1,1],[aux1868,3,s_00018],0);
constraint int_lt_reif(s_00009,aux1868,aux1869_BOOL);
constraint int_le_reif(s_00018, s_00009,aux1870_BOOL);
constraint array_bool_and([aux1866_BOOL,aux1867_BOOL,aux1869_BOOL,aux1870_BOOL,w_00001_00018_BOOL],aux1871_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux1872_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux1873_BOOL);
constraint int_lin_eq([-1,1,1],[aux1874,2,s_00019],0);
constraint int_lt_reif(s_00009,aux1874,aux1875_BOOL);
constraint int_le_reif(s_00019, s_00009,aux1876_BOOL);
constraint array_bool_and([aux1872_BOOL,aux1873_BOOL,aux1875_BOOL,aux1876_BOOL,w_00001_00019_BOOL],aux1877_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux1878_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux1879_BOOL);
constraint int_lin_eq([-1,1,1],[aux1880,3,s_00020],0);
constraint int_lt_reif(s_00009,aux1880,aux1881_BOOL);
constraint int_le_reif(s_00020, s_00009,aux1882_BOOL);
constraint array_bool_and([aux1878_BOOL,aux1879_BOOL,aux1881_BOOL,aux1882_BOOL,w_00001_00020_BOOL],aux1883_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux1769_INTEGER,aux1775_INTEGER,aux1781_INTEGER,aux1787_INTEGER,aux1793_INTEGER,aux1799_INTEGER,aux1805_INTEGER,aux1811_INTEGER,aux1817_INTEGER,aux1823_INTEGER,aux1829_INTEGER,aux1835_INTEGER,aux1841_INTEGER,aux1847_INTEGER,aux1853_INTEGER,aux1859_INTEGER,aux1865_INTEGER,aux1871_INTEGER,aux1877_INTEGER,aux1883_INTEGER,1],0,aux1884_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1885_BOOL);
constraint int_lin_eq([-1,1,1],[aux1886,3,s_00006],0);
constraint int_lt_reif(s_00006,aux1886,aux1887_BOOL);
constraint array_bool_and([aux1885_BOOL,aux1887_BOOL,w_00001_00006_BOOL],aux1888_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux1889_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1890_BOOL);
constraint int_lin_eq([-1,1,1],[aux1891,1,s_00001],0);
constraint int_lt_reif(s_00006,aux1891,aux1892_BOOL);
constraint int_le_reif(s_00001, s_00006,aux1893_BOOL);
constraint array_bool_and([aux1889_BOOL,aux1890_BOOL,aux1892_BOOL,aux1893_BOOL,w_00001_00001_BOOL],aux1894_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux1895_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1896_BOOL);
constraint int_lin_eq([-1,1,1],[aux1897,2,s_00002],0);
constraint int_lt_reif(s_00006,aux1897,aux1898_BOOL);
constraint int_le_reif(s_00002, s_00006,aux1899_BOOL);
constraint array_bool_and([aux1895_BOOL,aux1896_BOOL,aux1898_BOOL,aux1899_BOOL,w_00001_00002_BOOL],aux1900_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux1901_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1902_BOOL);
constraint int_lin_eq([-1,1,1],[aux1903,3,s_00003],0);
constraint int_lt_reif(s_00006,aux1903,aux1904_BOOL);
constraint int_le_reif(s_00003, s_00006,aux1905_BOOL);
constraint array_bool_and([aux1901_BOOL,aux1902_BOOL,aux1904_BOOL,aux1905_BOOL,w_00001_00003_BOOL],aux1906_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux1907_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1908_BOOL);
constraint int_lin_eq([-1,1,1],[aux1909,2,s_00004],0);
constraint int_lt_reif(s_00006,aux1909,aux1910_BOOL);
constraint int_le_reif(s_00004, s_00006,aux1911_BOOL);
constraint array_bool_and([aux1907_BOOL,aux1908_BOOL,aux1910_BOOL,aux1911_BOOL,w_00001_00004_BOOL],aux1912_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux1913_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1914_BOOL);
constraint int_lin_eq([-1,1,1],[aux1915,2,s_00005],0);
constraint int_lt_reif(s_00006,aux1915,aux1916_BOOL);
constraint int_le_reif(s_00005, s_00006,aux1917_BOOL);
constraint array_bool_and([aux1913_BOOL,aux1914_BOOL,aux1916_BOOL,aux1917_BOOL,w_00001_00005_BOOL],aux1918_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1919_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux1920_BOOL);
constraint int_lin_eq([-1,1,1],[aux1921,2,s_00007],0);
constraint int_lt_reif(s_00006,aux1921,aux1922_BOOL);
constraint int_le_reif(s_00007, s_00006,aux1923_BOOL);
constraint array_bool_and([aux1919_BOOL,aux1920_BOOL,aux1922_BOOL,aux1923_BOOL,w_00001_00007_BOOL],aux1924_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1925_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux1926_BOOL);
constraint int_lin_eq([-1,1,1],[aux1927,1,s_00008],0);
constraint int_lt_reif(s_00006,aux1927,aux1928_BOOL);
constraint int_le_reif(s_00008, s_00006,aux1929_BOOL);
constraint array_bool_and([aux1925_BOOL,aux1926_BOOL,aux1928_BOOL,aux1929_BOOL,w_00001_00008_BOOL],aux1930_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1931_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux1932_BOOL);
constraint int_lin_eq([-1,1,1],[aux1933,2,s_00009],0);
constraint int_lt_reif(s_00006,aux1933,aux1934_BOOL);
constraint int_le_reif(s_00009, s_00006,aux1935_BOOL);
constraint array_bool_and([aux1931_BOOL,aux1932_BOOL,aux1934_BOOL,aux1935_BOOL,w_00001_00009_BOOL],aux1936_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1937_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux1938_BOOL);
constraint int_lin_eq([-1,1,1],[aux1939,1,s_00010],0);
constraint int_lt_reif(s_00006,aux1939,aux1940_BOOL);
constraint int_le_reif(s_00010, s_00006,aux1941_BOOL);
constraint array_bool_and([aux1937_BOOL,aux1938_BOOL,aux1940_BOOL,aux1941_BOOL,w_00001_00010_BOOL],aux1942_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1943_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux1944_BOOL);
constraint int_lin_eq([-1,1,1],[aux1945,2,s_00011],0);
constraint int_lt_reif(s_00006,aux1945,aux1946_BOOL);
constraint int_le_reif(s_00011, s_00006,aux1947_BOOL);
constraint array_bool_and([aux1943_BOOL,aux1944_BOOL,aux1946_BOOL,aux1947_BOOL,w_00001_00011_BOOL],aux1948_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1949_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux1950_BOOL);
constraint int_lin_eq([-1,1,1],[aux1951,2,s_00012],0);
constraint int_lt_reif(s_00006,aux1951,aux1952_BOOL);
constraint int_le_reif(s_00012, s_00006,aux1953_BOOL);
constraint array_bool_and([aux1949_BOOL,aux1950_BOOL,aux1952_BOOL,aux1953_BOOL,w_00001_00012_BOOL],aux1954_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1955_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux1956_BOOL);
constraint int_lin_eq([-1,1,1],[aux1957,1,s_00013],0);
constraint int_lt_reif(s_00006,aux1957,aux1958_BOOL);
constraint int_le_reif(s_00013, s_00006,aux1959_BOOL);
constraint array_bool_and([aux1955_BOOL,aux1956_BOOL,aux1958_BOOL,aux1959_BOOL,w_00001_00013_BOOL],aux1960_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1961_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux1962_BOOL);
constraint int_lin_eq([-1,1,1],[aux1963,2,s_00015],0);
constraint int_lt_reif(s_00006,aux1963,aux1964_BOOL);
constraint int_le_reif(s_00015, s_00006,aux1965_BOOL);
constraint array_bool_and([aux1961_BOOL,aux1962_BOOL,aux1964_BOOL,aux1965_BOOL,w_00001_00015_BOOL],aux1966_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1967_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux1968_BOOL);
constraint int_lin_eq([-1,1,1],[aux1969,4,s_00014],0);
constraint int_lt_reif(s_00006,aux1969,aux1970_BOOL);
constraint int_le_reif(s_00014, s_00006,aux1971_BOOL);
constraint array_bool_and([aux1967_BOOL,aux1968_BOOL,aux1970_BOOL,aux1971_BOOL,w_00001_00014_BOOL],aux1972_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1973_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux1974_BOOL);
constraint int_lin_eq([-1,1,1],[aux1975,1,s_00017],0);
constraint int_lt_reif(s_00006,aux1975,aux1976_BOOL);
constraint int_le_reif(s_00017, s_00006,aux1977_BOOL);
constraint array_bool_and([aux1973_BOOL,aux1974_BOOL,aux1976_BOOL,aux1977_BOOL,w_00001_00017_BOOL],aux1978_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1979_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux1980_BOOL);
constraint int_lin_eq([-1,1,1],[aux1981,3,s_00016],0);
constraint int_lt_reif(s_00006,aux1981,aux1982_BOOL);
constraint int_le_reif(s_00016, s_00006,aux1983_BOOL);
constraint array_bool_and([aux1979_BOOL,aux1980_BOOL,aux1982_BOOL,aux1983_BOOL,w_00001_00016_BOOL],aux1984_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1985_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux1986_BOOL);
constraint int_lin_eq([-1,1,1],[aux1987,3,s_00018],0);
constraint int_lt_reif(s_00006,aux1987,aux1988_BOOL);
constraint int_le_reif(s_00018, s_00006,aux1989_BOOL);
constraint array_bool_and([aux1985_BOOL,aux1986_BOOL,aux1988_BOOL,aux1989_BOOL,w_00001_00018_BOOL],aux1990_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1991_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux1992_BOOL);
constraint int_lin_eq([-1,1,1],[aux1993,2,s_00019],0);
constraint int_lt_reif(s_00006,aux1993,aux1994_BOOL);
constraint int_le_reif(s_00019, s_00006,aux1995_BOOL);
constraint array_bool_and([aux1991_BOOL,aux1992_BOOL,aux1994_BOOL,aux1995_BOOL,w_00001_00019_BOOL],aux1996_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux1997_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux1998_BOOL);
constraint int_lin_eq([-1,1,1],[aux1999,3,s_00020],0);
constraint int_lt_reif(s_00006,aux1999,aux2000_BOOL);
constraint int_le_reif(s_00020, s_00006,aux2001_BOOL);
constraint array_bool_and([aux1997_BOOL,aux1998_BOOL,aux2000_BOOL,aux2001_BOOL,w_00001_00020_BOOL],aux2002_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux1888_INTEGER,aux1894_INTEGER,aux1900_INTEGER,aux1906_INTEGER,aux1912_INTEGER,aux1918_INTEGER,aux1924_INTEGER,aux1930_INTEGER,aux1936_INTEGER,aux1942_INTEGER,aux1948_INTEGER,aux1954_INTEGER,aux1960_INTEGER,aux1966_INTEGER,aux1972_INTEGER,aux1978_INTEGER,aux1984_INTEGER,aux1990_INTEGER,aux1996_INTEGER,aux2002_INTEGER,1],0,aux2003_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux2004_BOOL);
constraint int_lin_eq([-1,1,1],[aux2005,2,s_00019],0);
constraint int_lt_reif(s_00019,aux2005,aux2006_BOOL);
constraint array_bool_and([aux2004_BOOL,aux2006_BOOL,w_00001_00019_BOOL],aux2007_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux2008_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux2009_BOOL);
constraint int_lin_eq([-1,1,1],[aux2010,1,s_00001],0);
constraint int_lt_reif(s_00019,aux2010,aux2011_BOOL);
constraint int_le_reif(s_00001, s_00019,aux2012_BOOL);
constraint array_bool_and([aux2008_BOOL,aux2009_BOOL,aux2011_BOOL,aux2012_BOOL,w_00001_00001_BOOL],aux2013_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux2014_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux2015_BOOL);
constraint int_lin_eq([-1,1,1],[aux2016,2,s_00002],0);
constraint int_lt_reif(s_00019,aux2016,aux2017_BOOL);
constraint int_le_reif(s_00002, s_00019,aux2018_BOOL);
constraint array_bool_and([aux2014_BOOL,aux2015_BOOL,aux2017_BOOL,aux2018_BOOL,w_00001_00002_BOOL],aux2019_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux2020_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux2021_BOOL);
constraint int_lin_eq([-1,1,1],[aux2022,3,s_00003],0);
constraint int_lt_reif(s_00019,aux2022,aux2023_BOOL);
constraint int_le_reif(s_00003, s_00019,aux2024_BOOL);
constraint array_bool_and([aux2020_BOOL,aux2021_BOOL,aux2023_BOOL,aux2024_BOOL,w_00001_00003_BOOL],aux2025_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux2026_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux2027_BOOL);
constraint int_lin_eq([-1,1,1],[aux2028,2,s_00004],0);
constraint int_lt_reif(s_00019,aux2028,aux2029_BOOL);
constraint int_le_reif(s_00004, s_00019,aux2030_BOOL);
constraint array_bool_and([aux2026_BOOL,aux2027_BOOL,aux2029_BOOL,aux2030_BOOL,w_00001_00004_BOOL],aux2031_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux2032_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux2033_BOOL);
constraint int_lin_eq([-1,1,1],[aux2034,2,s_00005],0);
constraint int_lt_reif(s_00019,aux2034,aux2035_BOOL);
constraint int_le_reif(s_00005, s_00019,aux2036_BOOL);
constraint array_bool_and([aux2032_BOOL,aux2033_BOOL,aux2035_BOOL,aux2036_BOOL,w_00001_00005_BOOL],aux2037_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux2038_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux2039_BOOL);
constraint int_lin_eq([-1,1,1],[aux2040,3,s_00006],0);
constraint int_lt_reif(s_00019,aux2040,aux2041_BOOL);
constraint int_le_reif(s_00006, s_00019,aux2042_BOOL);
constraint array_bool_and([aux2038_BOOL,aux2039_BOOL,aux2041_BOOL,aux2042_BOOL,w_00001_00006_BOOL],aux2043_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux2044_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux2045_BOOL);
constraint int_lin_eq([-1,1,1],[aux2046,2,s_00007],0);
constraint int_lt_reif(s_00019,aux2046,aux2047_BOOL);
constraint int_le_reif(s_00007, s_00019,aux2048_BOOL);
constraint array_bool_and([aux2044_BOOL,aux2045_BOOL,aux2047_BOOL,aux2048_BOOL,w_00001_00007_BOOL],aux2049_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux2050_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux2051_BOOL);
constraint int_lin_eq([-1,1,1],[aux2052,1,s_00008],0);
constraint int_lt_reif(s_00019,aux2052,aux2053_BOOL);
constraint int_le_reif(s_00008, s_00019,aux2054_BOOL);
constraint array_bool_and([aux2050_BOOL,aux2051_BOOL,aux2053_BOOL,aux2054_BOOL,w_00001_00008_BOOL],aux2055_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux2056_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux2057_BOOL);
constraint int_lin_eq([-1,1,1],[aux2058,2,s_00009],0);
constraint int_lt_reif(s_00019,aux2058,aux2059_BOOL);
constraint int_le_reif(s_00009, s_00019,aux2060_BOOL);
constraint array_bool_and([aux2056_BOOL,aux2057_BOOL,aux2059_BOOL,aux2060_BOOL,w_00001_00009_BOOL],aux2061_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux2062_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux2063_BOOL);
constraint int_lin_eq([-1,1,1],[aux2064,1,s_00010],0);
constraint int_lt_reif(s_00019,aux2064,aux2065_BOOL);
constraint int_le_reif(s_00010, s_00019,aux2066_BOOL);
constraint array_bool_and([aux2062_BOOL,aux2063_BOOL,aux2065_BOOL,aux2066_BOOL,w_00001_00010_BOOL],aux2067_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux2068_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux2069_BOOL);
constraint int_lin_eq([-1,1,1],[aux2070,2,s_00011],0);
constraint int_lt_reif(s_00019,aux2070,aux2071_BOOL);
constraint int_le_reif(s_00011, s_00019,aux2072_BOOL);
constraint array_bool_and([aux2068_BOOL,aux2069_BOOL,aux2071_BOOL,aux2072_BOOL,w_00001_00011_BOOL],aux2073_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux2074_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux2075_BOOL);
constraint int_lin_eq([-1,1,1],[aux2076,2,s_00012],0);
constraint int_lt_reif(s_00019,aux2076,aux2077_BOOL);
constraint int_le_reif(s_00012, s_00019,aux2078_BOOL);
constraint array_bool_and([aux2074_BOOL,aux2075_BOOL,aux2077_BOOL,aux2078_BOOL,w_00001_00012_BOOL],aux2079_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux2080_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux2081_BOOL);
constraint int_lin_eq([-1,1,1],[aux2082,1,s_00013],0);
constraint int_lt_reif(s_00019,aux2082,aux2083_BOOL);
constraint int_le_reif(s_00013, s_00019,aux2084_BOOL);
constraint array_bool_and([aux2080_BOOL,aux2081_BOOL,aux2083_BOOL,aux2084_BOOL,w_00001_00013_BOOL],aux2085_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux2086_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux2087_BOOL);
constraint int_lin_eq([-1,1,1],[aux2088,4,s_00014],0);
constraint int_lt_reif(s_00019,aux2088,aux2089_BOOL);
constraint int_le_reif(s_00014, s_00019,aux2090_BOOL);
constraint array_bool_and([aux2086_BOOL,aux2087_BOOL,aux2089_BOOL,aux2090_BOOL,w_00001_00014_BOOL],aux2091_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux2092_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux2093_BOOL);
constraint int_lin_eq([-1,1,1],[aux2094,2,s_00015],0);
constraint int_lt_reif(s_00019,aux2094,aux2095_BOOL);
constraint int_le_reif(s_00015, s_00019,aux2096_BOOL);
constraint array_bool_and([aux2092_BOOL,aux2093_BOOL,aux2095_BOOL,aux2096_BOOL,w_00001_00015_BOOL],aux2097_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux2098_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux2099_BOOL);
constraint int_lin_eq([-1,1,1],[aux2100,3,s_00016],0);
constraint int_lt_reif(s_00019,aux2100,aux2101_BOOL);
constraint int_le_reif(s_00016, s_00019,aux2102_BOOL);
constraint array_bool_and([aux2098_BOOL,aux2099_BOOL,aux2101_BOOL,aux2102_BOOL,w_00001_00016_BOOL],aux2103_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux2104_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux2105_BOOL);
constraint int_lin_eq([-1,1,1],[aux2106,1,s_00017],0);
constraint int_lt_reif(s_00019,aux2106,aux2107_BOOL);
constraint int_le_reif(s_00017, s_00019,aux2108_BOOL);
constraint array_bool_and([aux2104_BOOL,aux2105_BOOL,aux2107_BOOL,aux2108_BOOL,w_00001_00017_BOOL],aux2109_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux2110_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux2111_BOOL);
constraint int_lin_eq([-1,1,1],[aux2112,3,s_00018],0);
constraint int_lt_reif(s_00019,aux2112,aux2113_BOOL);
constraint int_le_reif(s_00018, s_00019,aux2114_BOOL);
constraint array_bool_and([aux2110_BOOL,aux2111_BOOL,aux2113_BOOL,aux2114_BOOL,w_00001_00018_BOOL],aux2115_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux2116_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux2117_BOOL);
constraint int_lin_eq([-1,1,1],[aux2118,3,s_00020],0);
constraint int_lt_reif(s_00019,aux2118,aux2119_BOOL);
constraint int_le_reif(s_00020, s_00019,aux2120_BOOL);
constraint array_bool_and([aux2116_BOOL,aux2117_BOOL,aux2119_BOOL,aux2120_BOOL,w_00001_00020_BOOL],aux2121_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux2007_INTEGER,aux2013_INTEGER,aux2019_INTEGER,aux2025_INTEGER,aux2031_INTEGER,aux2037_INTEGER,aux2043_INTEGER,aux2049_INTEGER,aux2055_INTEGER,aux2061_INTEGER,aux2067_INTEGER,aux2073_INTEGER,aux2079_INTEGER,aux2085_INTEGER,aux2091_INTEGER,aux2097_INTEGER,aux2103_INTEGER,aux2109_INTEGER,aux2115_INTEGER,aux2121_INTEGER,1],0,aux2122_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux2123_BOOL);
constraint int_lin_eq([-1,1,1],[aux2124,4,s_00014],0);
constraint int_lt_reif(s_00014,aux2124,aux2125_BOOL);
constraint array_bool_and([aux2123_BOOL,aux2125_BOOL,w_00001_00014_BOOL],aux2126_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux2127_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux2128_BOOL);
constraint int_lin_eq([-1,1,1],[aux2129,1,s_00001],0);
constraint int_lt_reif(s_00014,aux2129,aux2130_BOOL);
constraint int_le_reif(s_00001, s_00014,aux2131_BOOL);
constraint array_bool_and([aux2127_BOOL,aux2128_BOOL,aux2130_BOOL,aux2131_BOOL,w_00001_00001_BOOL],aux2132_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux2133_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux2134_BOOL);
constraint int_lin_eq([-1,1,1],[aux2135,2,s_00002],0);
constraint int_lt_reif(s_00014,aux2135,aux2136_BOOL);
constraint int_le_reif(s_00002, s_00014,aux2137_BOOL);
constraint array_bool_and([aux2133_BOOL,aux2134_BOOL,aux2136_BOOL,aux2137_BOOL,w_00001_00002_BOOL],aux2138_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux2139_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux2140_BOOL);
constraint int_lin_eq([-1,1,1],[aux2141,3,s_00003],0);
constraint int_lt_reif(s_00014,aux2141,aux2142_BOOL);
constraint int_le_reif(s_00003, s_00014,aux2143_BOOL);
constraint array_bool_and([aux2139_BOOL,aux2140_BOOL,aux2142_BOOL,aux2143_BOOL,w_00001_00003_BOOL],aux2144_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux2145_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux2146_BOOL);
constraint int_lin_eq([-1,1,1],[aux2147,2,s_00004],0);
constraint int_lt_reif(s_00014,aux2147,aux2148_BOOL);
constraint int_le_reif(s_00004, s_00014,aux2149_BOOL);
constraint array_bool_and([aux2145_BOOL,aux2146_BOOL,aux2148_BOOL,aux2149_BOOL,w_00001_00004_BOOL],aux2150_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux2151_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux2152_BOOL);
constraint int_lin_eq([-1,1,1],[aux2153,2,s_00005],0);
constraint int_lt_reif(s_00014,aux2153,aux2154_BOOL);
constraint int_le_reif(s_00005, s_00014,aux2155_BOOL);
constraint array_bool_and([aux2151_BOOL,aux2152_BOOL,aux2154_BOOL,aux2155_BOOL,w_00001_00005_BOOL],aux2156_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux2157_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux2158_BOOL);
constraint int_lin_eq([-1,1,1],[aux2159,3,s_00006],0);
constraint int_lt_reif(s_00014,aux2159,aux2160_BOOL);
constraint int_le_reif(s_00006, s_00014,aux2161_BOOL);
constraint array_bool_and([aux2157_BOOL,aux2158_BOOL,aux2160_BOOL,aux2161_BOOL,w_00001_00006_BOOL],aux2162_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux2163_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux2164_BOOL);
constraint int_lin_eq([-1,1,1],[aux2165,2,s_00007],0);
constraint int_lt_reif(s_00014,aux2165,aux2166_BOOL);
constraint int_le_reif(s_00007, s_00014,aux2167_BOOL);
constraint array_bool_and([aux2163_BOOL,aux2164_BOOL,aux2166_BOOL,aux2167_BOOL,w_00001_00007_BOOL],aux2168_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux2169_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux2170_BOOL);
constraint int_lin_eq([-1,1,1],[aux2171,1,s_00008],0);
constraint int_lt_reif(s_00014,aux2171,aux2172_BOOL);
constraint int_le_reif(s_00008, s_00014,aux2173_BOOL);
constraint array_bool_and([aux2169_BOOL,aux2170_BOOL,aux2172_BOOL,aux2173_BOOL,w_00001_00008_BOOL],aux2174_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux2175_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux2176_BOOL);
constraint int_lin_eq([-1,1,1],[aux2177,2,s_00009],0);
constraint int_lt_reif(s_00014,aux2177,aux2178_BOOL);
constraint int_le_reif(s_00009, s_00014,aux2179_BOOL);
constraint array_bool_and([aux2175_BOOL,aux2176_BOOL,aux2178_BOOL,aux2179_BOOL,w_00001_00009_BOOL],aux2180_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux2181_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux2182_BOOL);
constraint int_lin_eq([-1,1,1],[aux2183,1,s_00010],0);
constraint int_lt_reif(s_00014,aux2183,aux2184_BOOL);
constraint int_le_reif(s_00010, s_00014,aux2185_BOOL);
constraint array_bool_and([aux2181_BOOL,aux2182_BOOL,aux2184_BOOL,aux2185_BOOL,w_00001_00010_BOOL],aux2186_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux2187_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux2188_BOOL);
constraint int_lin_eq([-1,1,1],[aux2189,2,s_00011],0);
constraint int_lt_reif(s_00014,aux2189,aux2190_BOOL);
constraint int_le_reif(s_00011, s_00014,aux2191_BOOL);
constraint array_bool_and([aux2187_BOOL,aux2188_BOOL,aux2190_BOOL,aux2191_BOOL,w_00001_00011_BOOL],aux2192_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux2193_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux2194_BOOL);
constraint int_lin_eq([-1,1,1],[aux2195,2,s_00012],0);
constraint int_lt_reif(s_00014,aux2195,aux2196_BOOL);
constraint int_le_reif(s_00012, s_00014,aux2197_BOOL);
constraint array_bool_and([aux2193_BOOL,aux2194_BOOL,aux2196_BOOL,aux2197_BOOL,w_00001_00012_BOOL],aux2198_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux2199_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux2200_BOOL);
constraint int_lin_eq([-1,1,1],[aux2201,1,s_00013],0);
constraint int_lt_reif(s_00014,aux2201,aux2202_BOOL);
constraint int_le_reif(s_00013, s_00014,aux2203_BOOL);
constraint array_bool_and([aux2199_BOOL,aux2200_BOOL,aux2202_BOOL,aux2203_BOOL,w_00001_00013_BOOL],aux2204_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux2205_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux2206_BOOL);
constraint int_lin_eq([-1,1,1],[aux2207,2,s_00015],0);
constraint int_lt_reif(s_00014,aux2207,aux2208_BOOL);
constraint int_le_reif(s_00015, s_00014,aux2209_BOOL);
constraint array_bool_and([aux2205_BOOL,aux2206_BOOL,aux2208_BOOL,aux2209_BOOL,w_00001_00015_BOOL],aux2210_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux2211_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux2212_BOOL);
constraint int_lin_eq([-1,1,1],[aux2213,1,s_00017],0);
constraint int_lt_reif(s_00014,aux2213,aux2214_BOOL);
constraint int_le_reif(s_00017, s_00014,aux2215_BOOL);
constraint array_bool_and([aux2211_BOOL,aux2212_BOOL,aux2214_BOOL,aux2215_BOOL,w_00001_00017_BOOL],aux2216_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux2217_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux2218_BOOL);
constraint int_lin_eq([-1,1,1],[aux2219,3,s_00016],0);
constraint int_lt_reif(s_00014,aux2219,aux2220_BOOL);
constraint int_le_reif(s_00016, s_00014,aux2221_BOOL);
constraint array_bool_and([aux2217_BOOL,aux2218_BOOL,aux2220_BOOL,aux2221_BOOL,w_00001_00016_BOOL],aux2222_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux2223_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux2224_BOOL);
constraint int_lin_eq([-1,1,1],[aux2225,3,s_00018],0);
constraint int_lt_reif(s_00014,aux2225,aux2226_BOOL);
constraint int_le_reif(s_00018, s_00014,aux2227_BOOL);
constraint array_bool_and([aux2223_BOOL,aux2224_BOOL,aux2226_BOOL,aux2227_BOOL,w_00001_00018_BOOL],aux2228_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux2229_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux2230_BOOL);
constraint int_lin_eq([-1,1,1],[aux2231,2,s_00019],0);
constraint int_lt_reif(s_00014,aux2231,aux2232_BOOL);
constraint int_le_reif(s_00019, s_00014,aux2233_BOOL);
constraint array_bool_and([aux2229_BOOL,aux2230_BOOL,aux2232_BOOL,aux2233_BOOL,w_00001_00019_BOOL],aux2234_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux2235_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux2236_BOOL);
constraint int_lin_eq([-1,1,1],[aux2237,3,s_00020],0);
constraint int_lt_reif(s_00014,aux2237,aux2238_BOOL);
constraint int_le_reif(s_00020, s_00014,aux2239_BOOL);
constraint array_bool_and([aux2235_BOOL,aux2236_BOOL,aux2238_BOOL,aux2239_BOOL,w_00001_00020_BOOL],aux2240_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux2126_INTEGER,aux2132_INTEGER,aux2138_INTEGER,aux2144_INTEGER,aux2150_INTEGER,aux2156_INTEGER,aux2162_INTEGER,aux2168_INTEGER,aux2174_INTEGER,aux2180_INTEGER,aux2186_INTEGER,aux2192_INTEGER,aux2198_INTEGER,aux2204_INTEGER,aux2210_INTEGER,aux2216_INTEGER,aux2222_INTEGER,aux2228_INTEGER,aux2234_INTEGER,aux2240_INTEGER,1],0,aux2241_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux2242_BOOL);
constraint int_lin_eq([-1,1,1],[aux2243,1,s_00001],0);
constraint int_lt_reif(s_00001,aux2243,aux2244_BOOL);
constraint array_bool_and([aux2242_BOOL,aux2244_BOOL,w_00001_00001_BOOL],aux2245_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux2246_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux2247_BOOL);
constraint int_lin_eq([-1,1,1],[aux2248,2,s_00002],0);
constraint int_lt_reif(s_00001,aux2248,aux2249_BOOL);
constraint int_le_reif(s_00002, s_00001,aux2250_BOOL);
constraint array_bool_and([aux2246_BOOL,aux2247_BOOL,aux2249_BOOL,aux2250_BOOL,w_00001_00002_BOOL],aux2251_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux2252_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux2253_BOOL);
constraint int_lin_eq([-1,1,1],[aux2254,3,s_00003],0);
constraint int_lt_reif(s_00001,aux2254,aux2255_BOOL);
constraint int_le_reif(s_00003, s_00001,aux2256_BOOL);
constraint array_bool_and([aux2252_BOOL,aux2253_BOOL,aux2255_BOOL,aux2256_BOOL,w_00001_00003_BOOL],aux2257_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux2258_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux2259_BOOL);
constraint int_lin_eq([-1,1,1],[aux2260,2,s_00004],0);
constraint int_lt_reif(s_00001,aux2260,aux2261_BOOL);
constraint int_le_reif(s_00004, s_00001,aux2262_BOOL);
constraint array_bool_and([aux2258_BOOL,aux2259_BOOL,aux2261_BOOL,aux2262_BOOL,w_00001_00004_BOOL],aux2263_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux2264_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux2265_BOOL);
constraint int_lin_eq([-1,1,1],[aux2266,2,s_00005],0);
constraint int_lt_reif(s_00001,aux2266,aux2267_BOOL);
constraint int_le_reif(s_00005, s_00001,aux2268_BOOL);
constraint array_bool_and([aux2264_BOOL,aux2265_BOOL,aux2267_BOOL,aux2268_BOOL,w_00001_00005_BOOL],aux2269_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux2270_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux2271_BOOL);
constraint int_lin_eq([-1,1,1],[aux2272,3,s_00006],0);
constraint int_lt_reif(s_00001,aux2272,aux2273_BOOL);
constraint int_le_reif(s_00006, s_00001,aux2274_BOOL);
constraint array_bool_and([aux2270_BOOL,aux2271_BOOL,aux2273_BOOL,aux2274_BOOL,w_00001_00006_BOOL],aux2275_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux2276_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux2277_BOOL);
constraint int_lin_eq([-1,1,1],[aux2278,2,s_00007],0);
constraint int_lt_reif(s_00001,aux2278,aux2279_BOOL);
constraint int_le_reif(s_00007, s_00001,aux2280_BOOL);
constraint array_bool_and([aux2276_BOOL,aux2277_BOOL,aux2279_BOOL,aux2280_BOOL,w_00001_00007_BOOL],aux2281_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux2282_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux2283_BOOL);
constraint int_lin_eq([-1,1,1],[aux2284,1,s_00008],0);
constraint int_lt_reif(s_00001,aux2284,aux2285_BOOL);
constraint int_le_reif(s_00008, s_00001,aux2286_BOOL);
constraint array_bool_and([aux2282_BOOL,aux2283_BOOL,aux2285_BOOL,aux2286_BOOL,w_00001_00008_BOOL],aux2287_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux2288_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux2289_BOOL);
constraint int_lin_eq([-1,1,1],[aux2290,2,s_00009],0);
constraint int_lt_reif(s_00001,aux2290,aux2291_BOOL);
constraint int_le_reif(s_00009, s_00001,aux2292_BOOL);
constraint array_bool_and([aux2288_BOOL,aux2289_BOOL,aux2291_BOOL,aux2292_BOOL,w_00001_00009_BOOL],aux2293_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux2294_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux2295_BOOL);
constraint int_lin_eq([-1,1,1],[aux2296,1,s_00010],0);
constraint int_lt_reif(s_00001,aux2296,aux2297_BOOL);
constraint int_le_reif(s_00010, s_00001,aux2298_BOOL);
constraint array_bool_and([aux2294_BOOL,aux2295_BOOL,aux2297_BOOL,aux2298_BOOL,w_00001_00010_BOOL],aux2299_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux2300_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux2301_BOOL);
constraint int_lin_eq([-1,1,1],[aux2302,2,s_00011],0);
constraint int_lt_reif(s_00001,aux2302,aux2303_BOOL);
constraint int_le_reif(s_00011, s_00001,aux2304_BOOL);
constraint array_bool_and([aux2300_BOOL,aux2301_BOOL,aux2303_BOOL,aux2304_BOOL,w_00001_00011_BOOL],aux2305_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux2306_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux2307_BOOL);
constraint int_lin_eq([-1,1,1],[aux2308,2,s_00012],0);
constraint int_lt_reif(s_00001,aux2308,aux2309_BOOL);
constraint int_le_reif(s_00012, s_00001,aux2310_BOOL);
constraint array_bool_and([aux2306_BOOL,aux2307_BOOL,aux2309_BOOL,aux2310_BOOL,w_00001_00012_BOOL],aux2311_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux2312_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux2313_BOOL);
constraint int_lin_eq([-1,1,1],[aux2314,1,s_00013],0);
constraint int_lt_reif(s_00001,aux2314,aux2315_BOOL);
constraint int_le_reif(s_00013, s_00001,aux2316_BOOL);
constraint array_bool_and([aux2312_BOOL,aux2313_BOOL,aux2315_BOOL,aux2316_BOOL,w_00001_00013_BOOL],aux2317_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux2318_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux2319_BOOL);
constraint int_lin_eq([-1,1,1],[aux2320,2,s_00015],0);
constraint int_lt_reif(s_00001,aux2320,aux2321_BOOL);
constraint int_le_reif(s_00015, s_00001,aux2322_BOOL);
constraint array_bool_and([aux2318_BOOL,aux2319_BOOL,aux2321_BOOL,aux2322_BOOL,w_00001_00015_BOOL],aux2323_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux2324_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux2325_BOOL);
constraint int_lin_eq([-1,1,1],[aux2326,4,s_00014],0);
constraint int_lt_reif(s_00001,aux2326,aux2327_BOOL);
constraint int_le_reif(s_00014, s_00001,aux2328_BOOL);
constraint array_bool_and([aux2324_BOOL,aux2325_BOOL,aux2327_BOOL,aux2328_BOOL,w_00001_00014_BOOL],aux2329_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux2330_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux2331_BOOL);
constraint int_lin_eq([-1,1,1],[aux2332,1,s_00017],0);
constraint int_lt_reif(s_00001,aux2332,aux2333_BOOL);
constraint int_le_reif(s_00017, s_00001,aux2334_BOOL);
constraint array_bool_and([aux2330_BOOL,aux2331_BOOL,aux2333_BOOL,aux2334_BOOL,w_00001_00017_BOOL],aux2335_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux2336_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux2337_BOOL);
constraint int_lin_eq([-1,1,1],[aux2338,3,s_00016],0);
constraint int_lt_reif(s_00001,aux2338,aux2339_BOOL);
constraint int_le_reif(s_00016, s_00001,aux2340_BOOL);
constraint array_bool_and([aux2336_BOOL,aux2337_BOOL,aux2339_BOOL,aux2340_BOOL,w_00001_00016_BOOL],aux2341_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux2342_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux2343_BOOL);
constraint int_lin_eq([-1,1,1],[aux2344,3,s_00018],0);
constraint int_lt_reif(s_00001,aux2344,aux2345_BOOL);
constraint int_le_reif(s_00018, s_00001,aux2346_BOOL);
constraint array_bool_and([aux2342_BOOL,aux2343_BOOL,aux2345_BOOL,aux2346_BOOL,w_00001_00018_BOOL],aux2347_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux2348_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux2349_BOOL);
constraint int_lin_eq([-1,1,1],[aux2350,2,s_00019],0);
constraint int_lt_reif(s_00001,aux2350,aux2351_BOOL);
constraint int_le_reif(s_00019, s_00001,aux2352_BOOL);
constraint array_bool_and([aux2348_BOOL,aux2349_BOOL,aux2351_BOOL,aux2352_BOOL,w_00001_00019_BOOL],aux2353_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux2354_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux2355_BOOL);
constraint int_lin_eq([-1,1,1],[aux2356,3,s_00020],0);
constraint int_lt_reif(s_00001,aux2356,aux2357_BOOL);
constraint int_le_reif(s_00020, s_00001,aux2358_BOOL);
constraint array_bool_and([aux2354_BOOL,aux2355_BOOL,aux2357_BOOL,aux2358_BOOL,w_00001_00020_BOOL],aux2359_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux2245_INTEGER,aux2251_INTEGER,aux2257_INTEGER,aux2263_INTEGER,aux2269_INTEGER,aux2275_INTEGER,aux2281_INTEGER,aux2287_INTEGER,aux2293_INTEGER,aux2299_INTEGER,aux2305_INTEGER,aux2311_INTEGER,aux2317_INTEGER,aux2323_INTEGER,aux2329_INTEGER,aux2335_INTEGER,aux2341_INTEGER,aux2347_INTEGER,aux2353_INTEGER,aux2359_INTEGER,1],0,aux2360_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux2361_BOOL);
constraint int_lin_eq([-1,1,1],[aux2362,2,s_00012],0);
constraint int_lt_reif(s_00012,aux2362,aux2363_BOOL);
constraint array_bool_and([aux2361_BOOL,aux2363_BOOL,w_00001_00012_BOOL],aux2364_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux2365_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux2366_BOOL);
constraint int_lin_eq([-1,1,1],[aux2367,1,s_00001],0);
constraint int_lt_reif(s_00012,aux2367,aux2368_BOOL);
constraint int_le_reif(s_00001, s_00012,aux2369_BOOL);
constraint array_bool_and([aux2365_BOOL,aux2366_BOOL,aux2368_BOOL,aux2369_BOOL,w_00001_00001_BOOL],aux2370_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux2371_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux2372_BOOL);
constraint int_lin_eq([-1,1,1],[aux2373,2,s_00002],0);
constraint int_lt_reif(s_00012,aux2373,aux2374_BOOL);
constraint int_le_reif(s_00002, s_00012,aux2375_BOOL);
constraint array_bool_and([aux2371_BOOL,aux2372_BOOL,aux2374_BOOL,aux2375_BOOL,w_00001_00002_BOOL],aux2376_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux2377_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux2378_BOOL);
constraint int_lin_eq([-1,1,1],[aux2379,3,s_00003],0);
constraint int_lt_reif(s_00012,aux2379,aux2380_BOOL);
constraint int_le_reif(s_00003, s_00012,aux2381_BOOL);
constraint array_bool_and([aux2377_BOOL,aux2378_BOOL,aux2380_BOOL,aux2381_BOOL,w_00001_00003_BOOL],aux2382_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux2383_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux2384_BOOL);
constraint int_lin_eq([-1,1,1],[aux2385,2,s_00004],0);
constraint int_lt_reif(s_00012,aux2385,aux2386_BOOL);
constraint int_le_reif(s_00004, s_00012,aux2387_BOOL);
constraint array_bool_and([aux2383_BOOL,aux2384_BOOL,aux2386_BOOL,aux2387_BOOL,w_00001_00004_BOOL],aux2388_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux2389_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux2390_BOOL);
constraint int_lin_eq([-1,1,1],[aux2391,2,s_00005],0);
constraint int_lt_reif(s_00012,aux2391,aux2392_BOOL);
constraint int_le_reif(s_00005, s_00012,aux2393_BOOL);
constraint array_bool_and([aux2389_BOOL,aux2390_BOOL,aux2392_BOOL,aux2393_BOOL,w_00001_00005_BOOL],aux2394_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux2395_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux2396_BOOL);
constraint int_lin_eq([-1,1,1],[aux2397,3,s_00006],0);
constraint int_lt_reif(s_00012,aux2397,aux2398_BOOL);
constraint int_le_reif(s_00006, s_00012,aux2399_BOOL);
constraint array_bool_and([aux2395_BOOL,aux2396_BOOL,aux2398_BOOL,aux2399_BOOL,w_00001_00006_BOOL],aux2400_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux2401_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux2402_BOOL);
constraint int_lin_eq([-1,1,1],[aux2403,2,s_00007],0);
constraint int_lt_reif(s_00012,aux2403,aux2404_BOOL);
constraint int_le_reif(s_00007, s_00012,aux2405_BOOL);
constraint array_bool_and([aux2401_BOOL,aux2402_BOOL,aux2404_BOOL,aux2405_BOOL,w_00001_00007_BOOL],aux2406_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux2407_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux2408_BOOL);
constraint int_lin_eq([-1,1,1],[aux2409,1,s_00008],0);
constraint int_lt_reif(s_00012,aux2409,aux2410_BOOL);
constraint int_le_reif(s_00008, s_00012,aux2411_BOOL);
constraint array_bool_and([aux2407_BOOL,aux2408_BOOL,aux2410_BOOL,aux2411_BOOL,w_00001_00008_BOOL],aux2412_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux2413_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux2414_BOOL);
constraint int_lin_eq([-1,1,1],[aux2415,2,s_00009],0);
constraint int_lt_reif(s_00012,aux2415,aux2416_BOOL);
constraint int_le_reif(s_00009, s_00012,aux2417_BOOL);
constraint array_bool_and([aux2413_BOOL,aux2414_BOOL,aux2416_BOOL,aux2417_BOOL,w_00001_00009_BOOL],aux2418_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux2419_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux2420_BOOL);
constraint int_lin_eq([-1,1,1],[aux2421,1,s_00010],0);
constraint int_lt_reif(s_00012,aux2421,aux2422_BOOL);
constraint int_le_reif(s_00010, s_00012,aux2423_BOOL);
constraint array_bool_and([aux2419_BOOL,aux2420_BOOL,aux2422_BOOL,aux2423_BOOL,w_00001_00010_BOOL],aux2424_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux2425_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux2426_BOOL);
constraint int_lin_eq([-1,1,1],[aux2427,2,s_00011],0);
constraint int_lt_reif(s_00012,aux2427,aux2428_BOOL);
constraint int_le_reif(s_00011, s_00012,aux2429_BOOL);
constraint array_bool_and([aux2425_BOOL,aux2426_BOOL,aux2428_BOOL,aux2429_BOOL,w_00001_00011_BOOL],aux2430_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux2431_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux2432_BOOL);
constraint int_lin_eq([-1,1,1],[aux2433,1,s_00013],0);
constraint int_lt_reif(s_00012,aux2433,aux2434_BOOL);
constraint int_le_reif(s_00013, s_00012,aux2435_BOOL);
constraint array_bool_and([aux2431_BOOL,aux2432_BOOL,aux2434_BOOL,aux2435_BOOL,w_00001_00013_BOOL],aux2436_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux2437_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux2438_BOOL);
constraint int_lin_eq([-1,1,1],[aux2439,2,s_00015],0);
constraint int_lt_reif(s_00012,aux2439,aux2440_BOOL);
constraint int_le_reif(s_00015, s_00012,aux2441_BOOL);
constraint array_bool_and([aux2437_BOOL,aux2438_BOOL,aux2440_BOOL,aux2441_BOOL,w_00001_00015_BOOL],aux2442_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux2443_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux2444_BOOL);
constraint int_lin_eq([-1,1,1],[aux2445,4,s_00014],0);
constraint int_lt_reif(s_00012,aux2445,aux2446_BOOL);
constraint int_le_reif(s_00014, s_00012,aux2447_BOOL);
constraint array_bool_and([aux2443_BOOL,aux2444_BOOL,aux2446_BOOL,aux2447_BOOL,w_00001_00014_BOOL],aux2448_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux2449_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux2450_BOOL);
constraint int_lin_eq([-1,1,1],[aux2451,1,s_00017],0);
constraint int_lt_reif(s_00012,aux2451,aux2452_BOOL);
constraint int_le_reif(s_00017, s_00012,aux2453_BOOL);
constraint array_bool_and([aux2449_BOOL,aux2450_BOOL,aux2452_BOOL,aux2453_BOOL,w_00001_00017_BOOL],aux2454_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux2455_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux2456_BOOL);
constraint int_lin_eq([-1,1,1],[aux2457,3,s_00016],0);
constraint int_lt_reif(s_00012,aux2457,aux2458_BOOL);
constraint int_le_reif(s_00016, s_00012,aux2459_BOOL);
constraint array_bool_and([aux2455_BOOL,aux2456_BOOL,aux2458_BOOL,aux2459_BOOL,w_00001_00016_BOOL],aux2460_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux2461_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux2462_BOOL);
constraint int_lin_eq([-1,1,1],[aux2463,3,s_00018],0);
constraint int_lt_reif(s_00012,aux2463,aux2464_BOOL);
constraint int_le_reif(s_00018, s_00012,aux2465_BOOL);
constraint array_bool_and([aux2461_BOOL,aux2462_BOOL,aux2464_BOOL,aux2465_BOOL,w_00001_00018_BOOL],aux2466_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux2467_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux2468_BOOL);
constraint int_lin_eq([-1,1,1],[aux2469,2,s_00019],0);
constraint int_lt_reif(s_00012,aux2469,aux2470_BOOL);
constraint int_le_reif(s_00019, s_00012,aux2471_BOOL);
constraint array_bool_and([aux2467_BOOL,aux2468_BOOL,aux2470_BOOL,aux2471_BOOL,w_00001_00019_BOOL],aux2472_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux2473_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux2474_BOOL);
constraint int_lin_eq([-1,1,1],[aux2475,3,s_00020],0);
constraint int_lt_reif(s_00012,aux2475,aux2476_BOOL);
constraint int_le_reif(s_00020, s_00012,aux2477_BOOL);
constraint array_bool_and([aux2473_BOOL,aux2474_BOOL,aux2476_BOOL,aux2477_BOOL,w_00001_00020_BOOL],aux2478_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux2364_INTEGER,aux2370_INTEGER,aux2376_INTEGER,aux2382_INTEGER,aux2388_INTEGER,aux2394_INTEGER,aux2400_INTEGER,aux2406_INTEGER,aux2412_INTEGER,aux2418_INTEGER,aux2424_INTEGER,aux2430_INTEGER,aux2436_INTEGER,aux2442_INTEGER,aux2448_INTEGER,aux2454_INTEGER,aux2460_INTEGER,aux2466_INTEGER,aux2472_INTEGER,aux2478_INTEGER,1],0,aux2479_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux2480_BOOL);
constraint int_lin_eq([-1,1,1],[aux2481,3,s_00016],0);
constraint int_lt_reif(s_00016,aux2481,aux2482_BOOL);
constraint array_bool_and([aux2480_BOOL,aux2482_BOOL,w_00001_00016_BOOL],aux2483_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux2484_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux2485_BOOL);
constraint int_lin_eq([-1,1,1],[aux2486,1,s_00001],0);
constraint int_lt_reif(s_00016,aux2486,aux2487_BOOL);
constraint int_le_reif(s_00001, s_00016,aux2488_BOOL);
constraint array_bool_and([aux2484_BOOL,aux2485_BOOL,aux2487_BOOL,aux2488_BOOL,w_00001_00001_BOOL],aux2489_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux2490_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux2491_BOOL);
constraint int_lin_eq([-1,1,1],[aux2492,2,s_00002],0);
constraint int_lt_reif(s_00016,aux2492,aux2493_BOOL);
constraint int_le_reif(s_00002, s_00016,aux2494_BOOL);
constraint array_bool_and([aux2490_BOOL,aux2491_BOOL,aux2493_BOOL,aux2494_BOOL,w_00001_00002_BOOL],aux2495_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux2496_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux2497_BOOL);
constraint int_lin_eq([-1,1,1],[aux2498,3,s_00003],0);
constraint int_lt_reif(s_00016,aux2498,aux2499_BOOL);
constraint int_le_reif(s_00003, s_00016,aux2500_BOOL);
constraint array_bool_and([aux2496_BOOL,aux2497_BOOL,aux2499_BOOL,aux2500_BOOL,w_00001_00003_BOOL],aux2501_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux2502_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux2503_BOOL);
constraint int_lin_eq([-1,1,1],[aux2504,2,s_00004],0);
constraint int_lt_reif(s_00016,aux2504,aux2505_BOOL);
constraint int_le_reif(s_00004, s_00016,aux2506_BOOL);
constraint array_bool_and([aux2502_BOOL,aux2503_BOOL,aux2505_BOOL,aux2506_BOOL,w_00001_00004_BOOL],aux2507_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux2508_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux2509_BOOL);
constraint int_lin_eq([-1,1,1],[aux2510,2,s_00005],0);
constraint int_lt_reif(s_00016,aux2510,aux2511_BOOL);
constraint int_le_reif(s_00005, s_00016,aux2512_BOOL);
constraint array_bool_and([aux2508_BOOL,aux2509_BOOL,aux2511_BOOL,aux2512_BOOL,w_00001_00005_BOOL],aux2513_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux2514_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux2515_BOOL);
constraint int_lin_eq([-1,1,1],[aux2516,3,s_00006],0);
constraint int_lt_reif(s_00016,aux2516,aux2517_BOOL);
constraint int_le_reif(s_00006, s_00016,aux2518_BOOL);
constraint array_bool_and([aux2514_BOOL,aux2515_BOOL,aux2517_BOOL,aux2518_BOOL,w_00001_00006_BOOL],aux2519_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux2520_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux2521_BOOL);
constraint int_lin_eq([-1,1,1],[aux2522,2,s_00007],0);
constraint int_lt_reif(s_00016,aux2522,aux2523_BOOL);
constraint int_le_reif(s_00007, s_00016,aux2524_BOOL);
constraint array_bool_and([aux2520_BOOL,aux2521_BOOL,aux2523_BOOL,aux2524_BOOL,w_00001_00007_BOOL],aux2525_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux2526_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux2527_BOOL);
constraint int_lin_eq([-1,1,1],[aux2528,1,s_00008],0);
constraint int_lt_reif(s_00016,aux2528,aux2529_BOOL);
constraint int_le_reif(s_00008, s_00016,aux2530_BOOL);
constraint array_bool_and([aux2526_BOOL,aux2527_BOOL,aux2529_BOOL,aux2530_BOOL,w_00001_00008_BOOL],aux2531_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux2532_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux2533_BOOL);
constraint int_lin_eq([-1,1,1],[aux2534,2,s_00009],0);
constraint int_lt_reif(s_00016,aux2534,aux2535_BOOL);
constraint int_le_reif(s_00009, s_00016,aux2536_BOOL);
constraint array_bool_and([aux2532_BOOL,aux2533_BOOL,aux2535_BOOL,aux2536_BOOL,w_00001_00009_BOOL],aux2537_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux2538_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux2539_BOOL);
constraint int_lin_eq([-1,1,1],[aux2540,1,s_00010],0);
constraint int_lt_reif(s_00016,aux2540,aux2541_BOOL);
constraint int_le_reif(s_00010, s_00016,aux2542_BOOL);
constraint array_bool_and([aux2538_BOOL,aux2539_BOOL,aux2541_BOOL,aux2542_BOOL,w_00001_00010_BOOL],aux2543_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux2544_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux2545_BOOL);
constraint int_lin_eq([-1,1,1],[aux2546,2,s_00011],0);
constraint int_lt_reif(s_00016,aux2546,aux2547_BOOL);
constraint int_le_reif(s_00011, s_00016,aux2548_BOOL);
constraint array_bool_and([aux2544_BOOL,aux2545_BOOL,aux2547_BOOL,aux2548_BOOL,w_00001_00011_BOOL],aux2549_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux2550_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux2551_BOOL);
constraint int_lin_eq([-1,1,1],[aux2552,2,s_00012],0);
constraint int_lt_reif(s_00016,aux2552,aux2553_BOOL);
constraint int_le_reif(s_00012, s_00016,aux2554_BOOL);
constraint array_bool_and([aux2550_BOOL,aux2551_BOOL,aux2553_BOOL,aux2554_BOOL,w_00001_00012_BOOL],aux2555_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux2556_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux2557_BOOL);
constraint int_lin_eq([-1,1,1],[aux2558,1,s_00013],0);
constraint int_lt_reif(s_00016,aux2558,aux2559_BOOL);
constraint int_le_reif(s_00013, s_00016,aux2560_BOOL);
constraint array_bool_and([aux2556_BOOL,aux2557_BOOL,aux2559_BOOL,aux2560_BOOL,w_00001_00013_BOOL],aux2561_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux2562_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux2563_BOOL);
constraint int_lin_eq([-1,1,1],[aux2564,4,s_00014],0);
constraint int_lt_reif(s_00016,aux2564,aux2565_BOOL);
constraint int_le_reif(s_00014, s_00016,aux2566_BOOL);
constraint array_bool_and([aux2562_BOOL,aux2563_BOOL,aux2565_BOOL,aux2566_BOOL,w_00001_00014_BOOL],aux2567_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux2568_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux2569_BOOL);
constraint int_lin_eq([-1,1,1],[aux2570,2,s_00015],0);
constraint int_lt_reif(s_00016,aux2570,aux2571_BOOL);
constraint int_le_reif(s_00015, s_00016,aux2572_BOOL);
constraint array_bool_and([aux2568_BOOL,aux2569_BOOL,aux2571_BOOL,aux2572_BOOL,w_00001_00015_BOOL],aux2573_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux2574_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux2575_BOOL);
constraint int_lin_eq([-1,1,1],[aux2576,1,s_00017],0);
constraint int_lt_reif(s_00016,aux2576,aux2577_BOOL);
constraint int_le_reif(s_00017, s_00016,aux2578_BOOL);
constraint array_bool_and([aux2574_BOOL,aux2575_BOOL,aux2577_BOOL,aux2578_BOOL,w_00001_00017_BOOL],aux2579_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux2580_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux2581_BOOL);
constraint int_lin_eq([-1,1,1],[aux2582,3,s_00018],0);
constraint int_lt_reif(s_00016,aux2582,aux2583_BOOL);
constraint int_le_reif(s_00018, s_00016,aux2584_BOOL);
constraint array_bool_and([aux2580_BOOL,aux2581_BOOL,aux2583_BOOL,aux2584_BOOL,w_00001_00018_BOOL],aux2585_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux2586_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux2587_BOOL);
constraint int_lin_eq([-1,1,1],[aux2588,2,s_00019],0);
constraint int_lt_reif(s_00016,aux2588,aux2589_BOOL);
constraint int_le_reif(s_00019, s_00016,aux2590_BOOL);
constraint array_bool_and([aux2586_BOOL,aux2587_BOOL,aux2589_BOOL,aux2590_BOOL,w_00001_00019_BOOL],aux2591_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux2592_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux2593_BOOL);
constraint int_lin_eq([-1,1,1],[aux2594,3,s_00020],0);
constraint int_lt_reif(s_00016,aux2594,aux2595_BOOL);
constraint int_le_reif(s_00020, s_00016,aux2596_BOOL);
constraint array_bool_and([aux2592_BOOL,aux2593_BOOL,aux2595_BOOL,aux2596_BOOL,w_00001_00020_BOOL],aux2597_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux2483_INTEGER,aux2489_INTEGER,aux2495_INTEGER,aux2501_INTEGER,aux2507_INTEGER,aux2513_INTEGER,aux2519_INTEGER,aux2525_INTEGER,aux2531_INTEGER,aux2537_INTEGER,aux2543_INTEGER,aux2549_INTEGER,aux2555_INTEGER,aux2561_INTEGER,aux2567_INTEGER,aux2573_INTEGER,aux2579_INTEGER,aux2585_INTEGER,aux2591_INTEGER,aux2597_INTEGER,1],0,aux2598_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux2599_BOOL);
constraint int_lin_eq([-1,1,1],[aux2600,2,s_00005],0);
constraint int_lt_reif(s_00005,aux2600,aux2601_BOOL);
constraint array_bool_and([aux2599_BOOL,aux2601_BOOL,w_00001_00005_BOOL],aux2602_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux2603_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux2604_BOOL);
constraint int_lin_eq([-1,1,1],[aux2605,1,s_00001],0);
constraint int_lt_reif(s_00005,aux2605,aux2606_BOOL);
constraint int_le_reif(s_00001, s_00005,aux2607_BOOL);
constraint array_bool_and([aux2603_BOOL,aux2604_BOOL,aux2606_BOOL,aux2607_BOOL,w_00001_00001_BOOL],aux2608_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux2609_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux2610_BOOL);
constraint int_lin_eq([-1,1,1],[aux2611,2,s_00002],0);
constraint int_lt_reif(s_00005,aux2611,aux2612_BOOL);
constraint int_le_reif(s_00002, s_00005,aux2613_BOOL);
constraint array_bool_and([aux2609_BOOL,aux2610_BOOL,aux2612_BOOL,aux2613_BOOL,w_00001_00002_BOOL],aux2614_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux2615_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux2616_BOOL);
constraint int_lin_eq([-1,1,1],[aux2617,3,s_00003],0);
constraint int_lt_reif(s_00005,aux2617,aux2618_BOOL);
constraint int_le_reif(s_00003, s_00005,aux2619_BOOL);
constraint array_bool_and([aux2615_BOOL,aux2616_BOOL,aux2618_BOOL,aux2619_BOOL,w_00001_00003_BOOL],aux2620_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux2621_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux2622_BOOL);
constraint int_lin_eq([-1,1,1],[aux2623,2,s_00004],0);
constraint int_lt_reif(s_00005,aux2623,aux2624_BOOL);
constraint int_le_reif(s_00004, s_00005,aux2625_BOOL);
constraint array_bool_and([aux2621_BOOL,aux2622_BOOL,aux2624_BOOL,aux2625_BOOL,w_00001_00004_BOOL],aux2626_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux2627_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux2628_BOOL);
constraint int_lin_eq([-1,1,1],[aux2629,3,s_00006],0);
constraint int_lt_reif(s_00005,aux2629,aux2630_BOOL);
constraint int_le_reif(s_00006, s_00005,aux2631_BOOL);
constraint array_bool_and([aux2627_BOOL,aux2628_BOOL,aux2630_BOOL,aux2631_BOOL,w_00001_00006_BOOL],aux2632_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux2633_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux2634_BOOL);
constraint int_lin_eq([-1,1,1],[aux2635,2,s_00007],0);
constraint int_lt_reif(s_00005,aux2635,aux2636_BOOL);
constraint int_le_reif(s_00007, s_00005,aux2637_BOOL);
constraint array_bool_and([aux2633_BOOL,aux2634_BOOL,aux2636_BOOL,aux2637_BOOL,w_00001_00007_BOOL],aux2638_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux2639_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux2640_BOOL);
constraint int_lin_eq([-1,1,1],[aux2641,1,s_00008],0);
constraint int_lt_reif(s_00005,aux2641,aux2642_BOOL);
constraint int_le_reif(s_00008, s_00005,aux2643_BOOL);
constraint array_bool_and([aux2639_BOOL,aux2640_BOOL,aux2642_BOOL,aux2643_BOOL,w_00001_00008_BOOL],aux2644_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux2645_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux2646_BOOL);
constraint int_lin_eq([-1,1,1],[aux2647,2,s_00009],0);
constraint int_lt_reif(s_00005,aux2647,aux2648_BOOL);
constraint int_le_reif(s_00009, s_00005,aux2649_BOOL);
constraint array_bool_and([aux2645_BOOL,aux2646_BOOL,aux2648_BOOL,aux2649_BOOL,w_00001_00009_BOOL],aux2650_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux2651_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux2652_BOOL);
constraint int_lin_eq([-1,1,1],[aux2653,1,s_00010],0);
constraint int_lt_reif(s_00005,aux2653,aux2654_BOOL);
constraint int_le_reif(s_00010, s_00005,aux2655_BOOL);
constraint array_bool_and([aux2651_BOOL,aux2652_BOOL,aux2654_BOOL,aux2655_BOOL,w_00001_00010_BOOL],aux2656_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux2657_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux2658_BOOL);
constraint int_lin_eq([-1,1,1],[aux2659,2,s_00011],0);
constraint int_lt_reif(s_00005,aux2659,aux2660_BOOL);
constraint int_le_reif(s_00011, s_00005,aux2661_BOOL);
constraint array_bool_and([aux2657_BOOL,aux2658_BOOL,aux2660_BOOL,aux2661_BOOL,w_00001_00011_BOOL],aux2662_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux2663_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux2664_BOOL);
constraint int_lin_eq([-1,1,1],[aux2665,2,s_00012],0);
constraint int_lt_reif(s_00005,aux2665,aux2666_BOOL);
constraint int_le_reif(s_00012, s_00005,aux2667_BOOL);
constraint array_bool_and([aux2663_BOOL,aux2664_BOOL,aux2666_BOOL,aux2667_BOOL,w_00001_00012_BOOL],aux2668_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux2669_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux2670_BOOL);
constraint int_lin_eq([-1,1,1],[aux2671,1,s_00013],0);
constraint int_lt_reif(s_00005,aux2671,aux2672_BOOL);
constraint int_le_reif(s_00013, s_00005,aux2673_BOOL);
constraint array_bool_and([aux2669_BOOL,aux2670_BOOL,aux2672_BOOL,aux2673_BOOL,w_00001_00013_BOOL],aux2674_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux2675_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux2676_BOOL);
constraint int_lin_eq([-1,1,1],[aux2677,2,s_00015],0);
constraint int_lt_reif(s_00005,aux2677,aux2678_BOOL);
constraint int_le_reif(s_00015, s_00005,aux2679_BOOL);
constraint array_bool_and([aux2675_BOOL,aux2676_BOOL,aux2678_BOOL,aux2679_BOOL,w_00001_00015_BOOL],aux2680_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux2681_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux2682_BOOL);
constraint int_lin_eq([-1,1,1],[aux2683,4,s_00014],0);
constraint int_lt_reif(s_00005,aux2683,aux2684_BOOL);
constraint int_le_reif(s_00014, s_00005,aux2685_BOOL);
constraint array_bool_and([aux2681_BOOL,aux2682_BOOL,aux2684_BOOL,aux2685_BOOL,w_00001_00014_BOOL],aux2686_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux2687_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux2688_BOOL);
constraint int_lin_eq([-1,1,1],[aux2689,1,s_00017],0);
constraint int_lt_reif(s_00005,aux2689,aux2690_BOOL);
constraint int_le_reif(s_00017, s_00005,aux2691_BOOL);
constraint array_bool_and([aux2687_BOOL,aux2688_BOOL,aux2690_BOOL,aux2691_BOOL,w_00001_00017_BOOL],aux2692_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux2693_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux2694_BOOL);
constraint int_lin_eq([-1,1,1],[aux2695,3,s_00016],0);
constraint int_lt_reif(s_00005,aux2695,aux2696_BOOL);
constraint int_le_reif(s_00016, s_00005,aux2697_BOOL);
constraint array_bool_and([aux2693_BOOL,aux2694_BOOL,aux2696_BOOL,aux2697_BOOL,w_00001_00016_BOOL],aux2698_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux2699_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux2700_BOOL);
constraint int_lin_eq([-1,1,1],[aux2701,3,s_00018],0);
constraint int_lt_reif(s_00005,aux2701,aux2702_BOOL);
constraint int_le_reif(s_00018, s_00005,aux2703_BOOL);
constraint array_bool_and([aux2699_BOOL,aux2700_BOOL,aux2702_BOOL,aux2703_BOOL,w_00001_00018_BOOL],aux2704_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux2705_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux2706_BOOL);
constraint int_lin_eq([-1,1,1],[aux2707,2,s_00019],0);
constraint int_lt_reif(s_00005,aux2707,aux2708_BOOL);
constraint int_le_reif(s_00019, s_00005,aux2709_BOOL);
constraint array_bool_and([aux2705_BOOL,aux2706_BOOL,aux2708_BOOL,aux2709_BOOL,w_00001_00019_BOOL],aux2710_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux2711_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux2712_BOOL);
constraint int_lin_eq([-1,1,1],[aux2713,3,s_00020],0);
constraint int_lt_reif(s_00005,aux2713,aux2714_BOOL);
constraint int_le_reif(s_00020, s_00005,aux2715_BOOL);
constraint array_bool_and([aux2711_BOOL,aux2712_BOOL,aux2714_BOOL,aux2715_BOOL,w_00001_00020_BOOL],aux2716_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux2602_INTEGER,aux2608_INTEGER,aux2614_INTEGER,aux2620_INTEGER,aux2626_INTEGER,aux2632_INTEGER,aux2638_INTEGER,aux2644_INTEGER,aux2650_INTEGER,aux2656_INTEGER,aux2662_INTEGER,aux2668_INTEGER,aux2674_INTEGER,aux2680_INTEGER,aux2686_INTEGER,aux2692_INTEGER,aux2698_INTEGER,aux2704_INTEGER,aux2710_INTEGER,aux2716_INTEGER,1],0,aux2717_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux2718_BOOL);
constraint int_lin_eq([-1,1,1],[aux2719,2,s_00007],0);
constraint int_lt_reif(s_00007,aux2719,aux2720_BOOL);
constraint array_bool_and([aux2718_BOOL,aux2720_BOOL,w_00001_00007_BOOL],aux2721_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux2722_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux2723_BOOL);
constraint int_lin_eq([-1,1,1],[aux2724,1,s_00001],0);
constraint int_lt_reif(s_00007,aux2724,aux2725_BOOL);
constraint int_le_reif(s_00001, s_00007,aux2726_BOOL);
constraint array_bool_and([aux2722_BOOL,aux2723_BOOL,aux2725_BOOL,aux2726_BOOL,w_00001_00001_BOOL],aux2727_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux2728_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux2729_BOOL);
constraint int_lin_eq([-1,1,1],[aux2730,2,s_00002],0);
constraint int_lt_reif(s_00007,aux2730,aux2731_BOOL);
constraint int_le_reif(s_00002, s_00007,aux2732_BOOL);
constraint array_bool_and([aux2728_BOOL,aux2729_BOOL,aux2731_BOOL,aux2732_BOOL,w_00001_00002_BOOL],aux2733_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux2734_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux2735_BOOL);
constraint int_lin_eq([-1,1,1],[aux2736,3,s_00003],0);
constraint int_lt_reif(s_00007,aux2736,aux2737_BOOL);
constraint int_le_reif(s_00003, s_00007,aux2738_BOOL);
constraint array_bool_and([aux2734_BOOL,aux2735_BOOL,aux2737_BOOL,aux2738_BOOL,w_00001_00003_BOOL],aux2739_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux2740_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux2741_BOOL);
constraint int_lin_eq([-1,1,1],[aux2742,2,s_00004],0);
constraint int_lt_reif(s_00007,aux2742,aux2743_BOOL);
constraint int_le_reif(s_00004, s_00007,aux2744_BOOL);
constraint array_bool_and([aux2740_BOOL,aux2741_BOOL,aux2743_BOOL,aux2744_BOOL,w_00001_00004_BOOL],aux2745_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux2746_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux2747_BOOL);
constraint int_lin_eq([-1,1,1],[aux2748,2,s_00005],0);
constraint int_lt_reif(s_00007,aux2748,aux2749_BOOL);
constraint int_le_reif(s_00005, s_00007,aux2750_BOOL);
constraint array_bool_and([aux2746_BOOL,aux2747_BOOL,aux2749_BOOL,aux2750_BOOL,w_00001_00005_BOOL],aux2751_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux2752_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux2753_BOOL);
constraint int_lin_eq([-1,1,1],[aux2754,3,s_00006],0);
constraint int_lt_reif(s_00007,aux2754,aux2755_BOOL);
constraint int_le_reif(s_00006, s_00007,aux2756_BOOL);
constraint array_bool_and([aux2752_BOOL,aux2753_BOOL,aux2755_BOOL,aux2756_BOOL,w_00001_00006_BOOL],aux2757_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux2758_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux2759_BOOL);
constraint int_lin_eq([-1,1,1],[aux2760,1,s_00008],0);
constraint int_lt_reif(s_00007,aux2760,aux2761_BOOL);
constraint int_le_reif(s_00008, s_00007,aux2762_BOOL);
constraint array_bool_and([aux2758_BOOL,aux2759_BOOL,aux2761_BOOL,aux2762_BOOL,w_00001_00008_BOOL],aux2763_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux2764_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux2765_BOOL);
constraint int_lin_eq([-1,1,1],[aux2766,2,s_00009],0);
constraint int_lt_reif(s_00007,aux2766,aux2767_BOOL);
constraint int_le_reif(s_00009, s_00007,aux2768_BOOL);
constraint array_bool_and([aux2764_BOOL,aux2765_BOOL,aux2767_BOOL,aux2768_BOOL,w_00001_00009_BOOL],aux2769_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux2770_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux2771_BOOL);
constraint int_lin_eq([-1,1,1],[aux2772,1,s_00010],0);
constraint int_lt_reif(s_00007,aux2772,aux2773_BOOL);
constraint int_le_reif(s_00010, s_00007,aux2774_BOOL);
constraint array_bool_and([aux2770_BOOL,aux2771_BOOL,aux2773_BOOL,aux2774_BOOL,w_00001_00010_BOOL],aux2775_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux2776_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux2777_BOOL);
constraint int_lin_eq([-1,1,1],[aux2778,2,s_00011],0);
constraint int_lt_reif(s_00007,aux2778,aux2779_BOOL);
constraint int_le_reif(s_00011, s_00007,aux2780_BOOL);
constraint array_bool_and([aux2776_BOOL,aux2777_BOOL,aux2779_BOOL,aux2780_BOOL,w_00001_00011_BOOL],aux2781_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux2782_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux2783_BOOL);
constraint int_lin_eq([-1,1,1],[aux2784,2,s_00012],0);
constraint int_lt_reif(s_00007,aux2784,aux2785_BOOL);
constraint int_le_reif(s_00012, s_00007,aux2786_BOOL);
constraint array_bool_and([aux2782_BOOL,aux2783_BOOL,aux2785_BOOL,aux2786_BOOL,w_00001_00012_BOOL],aux2787_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux2788_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux2789_BOOL);
constraint int_lin_eq([-1,1,1],[aux2790,1,s_00013],0);
constraint int_lt_reif(s_00007,aux2790,aux2791_BOOL);
constraint int_le_reif(s_00013, s_00007,aux2792_BOOL);
constraint array_bool_and([aux2788_BOOL,aux2789_BOOL,aux2791_BOOL,aux2792_BOOL,w_00001_00013_BOOL],aux2793_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux2794_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux2795_BOOL);
constraint int_lin_eq([-1,1,1],[aux2796,2,s_00015],0);
constraint int_lt_reif(s_00007,aux2796,aux2797_BOOL);
constraint int_le_reif(s_00015, s_00007,aux2798_BOOL);
constraint array_bool_and([aux2794_BOOL,aux2795_BOOL,aux2797_BOOL,aux2798_BOOL,w_00001_00015_BOOL],aux2799_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux2800_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux2801_BOOL);
constraint int_lin_eq([-1,1,1],[aux2802,4,s_00014],0);
constraint int_lt_reif(s_00007,aux2802,aux2803_BOOL);
constraint int_le_reif(s_00014, s_00007,aux2804_BOOL);
constraint array_bool_and([aux2800_BOOL,aux2801_BOOL,aux2803_BOOL,aux2804_BOOL,w_00001_00014_BOOL],aux2805_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux2806_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux2807_BOOL);
constraint int_lin_eq([-1,1,1],[aux2808,1,s_00017],0);
constraint int_lt_reif(s_00007,aux2808,aux2809_BOOL);
constraint int_le_reif(s_00017, s_00007,aux2810_BOOL);
constraint array_bool_and([aux2806_BOOL,aux2807_BOOL,aux2809_BOOL,aux2810_BOOL,w_00001_00017_BOOL],aux2811_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux2812_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux2813_BOOL);
constraint int_lin_eq([-1,1,1],[aux2814,3,s_00016],0);
constraint int_lt_reif(s_00007,aux2814,aux2815_BOOL);
constraint int_le_reif(s_00016, s_00007,aux2816_BOOL);
constraint array_bool_and([aux2812_BOOL,aux2813_BOOL,aux2815_BOOL,aux2816_BOOL,w_00001_00016_BOOL],aux2817_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux2818_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux2819_BOOL);
constraint int_lin_eq([-1,1,1],[aux2820,3,s_00018],0);
constraint int_lt_reif(s_00007,aux2820,aux2821_BOOL);
constraint int_le_reif(s_00018, s_00007,aux2822_BOOL);
constraint array_bool_and([aux2818_BOOL,aux2819_BOOL,aux2821_BOOL,aux2822_BOOL,w_00001_00018_BOOL],aux2823_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux2824_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux2825_BOOL);
constraint int_lin_eq([-1,1,1],[aux2826,2,s_00019],0);
constraint int_lt_reif(s_00007,aux2826,aux2827_BOOL);
constraint int_le_reif(s_00019, s_00007,aux2828_BOOL);
constraint array_bool_and([aux2824_BOOL,aux2825_BOOL,aux2827_BOOL,aux2828_BOOL,w_00001_00019_BOOL],aux2829_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux2830_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux2831_BOOL);
constraint int_lin_eq([-1,1,1],[aux2832,3,s_00020],0);
constraint int_lt_reif(s_00007,aux2832,aux2833_BOOL);
constraint int_le_reif(s_00020, s_00007,aux2834_BOOL);
constraint array_bool_and([aux2830_BOOL,aux2831_BOOL,aux2833_BOOL,aux2834_BOOL,w_00001_00020_BOOL],aux2835_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux2721_INTEGER,aux2727_INTEGER,aux2733_INTEGER,aux2739_INTEGER,aux2745_INTEGER,aux2751_INTEGER,aux2757_INTEGER,aux2763_INTEGER,aux2769_INTEGER,aux2775_INTEGER,aux2781_INTEGER,aux2787_INTEGER,aux2793_INTEGER,aux2799_INTEGER,aux2805_INTEGER,aux2811_INTEGER,aux2817_INTEGER,aux2823_INTEGER,aux2829_INTEGER,aux2835_INTEGER,1],0,aux2836_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux2837_BOOL);
constraint int_lin_eq([-1,1,1],[aux2838,1,s_00008],0);
constraint int_lt_reif(s_00008,aux2838,aux2839_BOOL);
constraint array_bool_and([aux2837_BOOL,aux2839_BOOL,w_00001_00008_BOOL],aux2840_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00001_INTEGER,aux2841_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux2842_BOOL);
constraint int_lin_eq([-1,1,1],[aux2843,1,s_00001],0);
constraint int_lt_reif(s_00008,aux2843,aux2844_BOOL);
constraint int_le_reif(s_00001, s_00008,aux2845_BOOL);
constraint array_bool_and([aux2841_BOOL,aux2842_BOOL,aux2844_BOOL,aux2845_BOOL,w_00001_00001_BOOL],aux2846_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00002_INTEGER,aux2847_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux2848_BOOL);
constraint int_lin_eq([-1,1,1],[aux2849,2,s_00002],0);
constraint int_lt_reif(s_00008,aux2849,aux2850_BOOL);
constraint int_le_reif(s_00002, s_00008,aux2851_BOOL);
constraint array_bool_and([aux2847_BOOL,aux2848_BOOL,aux2850_BOOL,aux2851_BOOL,w_00001_00002_BOOL],aux2852_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00003_INTEGER,aux2853_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux2854_BOOL);
constraint int_lin_eq([-1,1,1],[aux2855,3,s_00003],0);
constraint int_lt_reif(s_00008,aux2855,aux2856_BOOL);
constraint int_le_reif(s_00003, s_00008,aux2857_BOOL);
constraint array_bool_and([aux2853_BOOL,aux2854_BOOL,aux2856_BOOL,aux2857_BOOL,w_00001_00003_BOOL],aux2858_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00004_INTEGER,aux2859_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux2860_BOOL);
constraint int_lin_eq([-1,1,1],[aux2861,2,s_00004],0);
constraint int_lt_reif(s_00008,aux2861,aux2862_BOOL);
constraint int_le_reif(s_00004, s_00008,aux2863_BOOL);
constraint array_bool_and([aux2859_BOOL,aux2860_BOOL,aux2862_BOOL,aux2863_BOOL,w_00001_00004_BOOL],aux2864_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00005_INTEGER,aux2865_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux2866_BOOL);
constraint int_lin_eq([-1,1,1],[aux2867,2,s_00005],0);
constraint int_lt_reif(s_00008,aux2867,aux2868_BOOL);
constraint int_le_reif(s_00005, s_00008,aux2869_BOOL);
constraint array_bool_and([aux2865_BOOL,aux2866_BOOL,aux2868_BOOL,aux2869_BOOL,w_00001_00005_BOOL],aux2870_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00006_INTEGER,aux2871_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux2872_BOOL);
constraint int_lin_eq([-1,1,1],[aux2873,3,s_00006],0);
constraint int_lt_reif(s_00008,aux2873,aux2874_BOOL);
constraint int_le_reif(s_00006, s_00008,aux2875_BOOL);
constraint array_bool_and([aux2871_BOOL,aux2872_BOOL,aux2874_BOOL,aux2875_BOOL,w_00001_00006_BOOL],aux2876_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00007_INTEGER,aux2877_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux2878_BOOL);
constraint int_lin_eq([-1,1,1],[aux2879,2,s_00007],0);
constraint int_lt_reif(s_00008,aux2879,aux2880_BOOL);
constraint int_le_reif(s_00007, s_00008,aux2881_BOOL);
constraint array_bool_and([aux2877_BOOL,aux2878_BOOL,aux2880_BOOL,aux2881_BOOL,w_00001_00007_BOOL],aux2882_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux2883_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00009_INTEGER,aux2884_BOOL);
constraint int_lin_eq([-1,1,1],[aux2885,2,s_00009],0);
constraint int_lt_reif(s_00008,aux2885,aux2886_BOOL);
constraint int_le_reif(s_00009, s_00008,aux2887_BOOL);
constraint array_bool_and([aux2883_BOOL,aux2884_BOOL,aux2886_BOOL,aux2887_BOOL,w_00001_00009_BOOL],aux2888_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux2889_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00010_INTEGER,aux2890_BOOL);
constraint int_lin_eq([-1,1,1],[aux2891,1,s_00010],0);
constraint int_lt_reif(s_00008,aux2891,aux2892_BOOL);
constraint int_le_reif(s_00010, s_00008,aux2893_BOOL);
constraint array_bool_and([aux2889_BOOL,aux2890_BOOL,aux2892_BOOL,aux2893_BOOL,w_00001_00010_BOOL],aux2894_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux2895_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00011_INTEGER,aux2896_BOOL);
constraint int_lin_eq([-1,1,1],[aux2897,2,s_00011],0);
constraint int_lt_reif(s_00008,aux2897,aux2898_BOOL);
constraint int_le_reif(s_00011, s_00008,aux2899_BOOL);
constraint array_bool_and([aux2895_BOOL,aux2896_BOOL,aux2898_BOOL,aux2899_BOOL,w_00001_00011_BOOL],aux2900_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux2901_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00012_INTEGER,aux2902_BOOL);
constraint int_lin_eq([-1,1,1],[aux2903,2,s_00012],0);
constraint int_lt_reif(s_00008,aux2903,aux2904_BOOL);
constraint int_le_reif(s_00012, s_00008,aux2905_BOOL);
constraint array_bool_and([aux2901_BOOL,aux2902_BOOL,aux2904_BOOL,aux2905_BOOL,w_00001_00012_BOOL],aux2906_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux2907_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00013_INTEGER,aux2908_BOOL);
constraint int_lin_eq([-1,1,1],[aux2909,1,s_00013],0);
constraint int_lt_reif(s_00008,aux2909,aux2910_BOOL);
constraint int_le_reif(s_00013, s_00008,aux2911_BOOL);
constraint array_bool_and([aux2907_BOOL,aux2908_BOOL,aux2910_BOOL,aux2911_BOOL,w_00001_00013_BOOL],aux2912_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux2913_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00015_INTEGER,aux2914_BOOL);
constraint int_lin_eq([-1,1,1],[aux2915,2,s_00015],0);
constraint int_lt_reif(s_00008,aux2915,aux2916_BOOL);
constraint int_le_reif(s_00015, s_00008,aux2917_BOOL);
constraint array_bool_and([aux2913_BOOL,aux2914_BOOL,aux2916_BOOL,aux2917_BOOL,w_00001_00015_BOOL],aux2918_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux2919_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00014_INTEGER,aux2920_BOOL);
constraint int_lin_eq([-1,1,1],[aux2921,4,s_00014],0);
constraint int_lt_reif(s_00008,aux2921,aux2922_BOOL);
constraint int_le_reif(s_00014, s_00008,aux2923_BOOL);
constraint array_bool_and([aux2919_BOOL,aux2920_BOOL,aux2922_BOOL,aux2923_BOOL,w_00001_00014_BOOL],aux2924_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux2925_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00017_INTEGER,aux2926_BOOL);
constraint int_lin_eq([-1,1,1],[aux2927,1,s_00017],0);
constraint int_lt_reif(s_00008,aux2927,aux2928_BOOL);
constraint int_le_reif(s_00017, s_00008,aux2929_BOOL);
constraint array_bool_and([aux2925_BOOL,aux2926_BOOL,aux2928_BOOL,aux2929_BOOL,w_00001_00017_BOOL],aux2930_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux2931_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00016_INTEGER,aux2932_BOOL);
constraint int_lin_eq([-1,1,1],[aux2933,3,s_00016],0);
constraint int_lt_reif(s_00008,aux2933,aux2934_BOOL);
constraint int_le_reif(s_00016, s_00008,aux2935_BOOL);
constraint array_bool_and([aux2931_BOOL,aux2932_BOOL,aux2934_BOOL,aux2935_BOOL,w_00001_00016_BOOL],aux2936_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux2937_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00018_INTEGER,aux2938_BOOL);
constraint int_lin_eq([-1,1,1],[aux2939,3,s_00018],0);
constraint int_lt_reif(s_00008,aux2939,aux2940_BOOL);
constraint int_le_reif(s_00018, s_00008,aux2941_BOOL);
constraint array_bool_and([aux2937_BOOL,aux2938_BOOL,aux2940_BOOL,aux2941_BOOL,w_00001_00018_BOOL],aux2942_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux2943_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00019_INTEGER,aux2944_BOOL);
constraint int_lin_eq([-1,1,1],[aux2945,2,s_00019],0);
constraint int_lt_reif(s_00008,aux2945,aux2946_BOOL);
constraint int_le_reif(s_00019, s_00008,aux2947_BOOL);
constraint array_bool_and([aux2943_BOOL,aux2944_BOOL,aux2946_BOOL,aux2947_BOOL,w_00001_00019_BOOL],aux2948_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00008_INTEGER,aux2949_BOOL);
constraint int_eq_reif(1,TWorkers_00001_00020_INTEGER,aux2950_BOOL);
constraint int_lin_eq([-1,1,1],[aux2951,3,s_00020],0);
constraint int_lt_reif(s_00008,aux2951,aux2952_BOOL);
constraint int_le_reif(s_00020, s_00008,aux2953_BOOL);
constraint array_bool_and([aux2949_BOOL,aux2950_BOOL,aux2952_BOOL,aux2953_BOOL,w_00001_00020_BOOL],aux2954_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux2840_INTEGER,aux2846_INTEGER,aux2852_INTEGER,aux2858_INTEGER,aux2864_INTEGER,aux2870_INTEGER,aux2876_INTEGER,aux2882_INTEGER,aux2888_INTEGER,aux2894_INTEGER,aux2900_INTEGER,aux2906_INTEGER,aux2912_INTEGER,aux2918_INTEGER,aux2924_INTEGER,aux2930_INTEGER,aux2936_INTEGER,aux2942_INTEGER,aux2948_INTEGER,aux2954_INTEGER,1],0,aux2955_BOOL);
constraint array_bool_and([aux694_BOOL,aux813_BOOL,aux932_BOOL,aux1051_BOOL,aux1170_BOOL,aux1289_BOOL,aux1408_BOOL,aux1527_BOOL,aux1646_BOOL,aux1765_BOOL,aux1884_BOOL,aux2003_BOOL,aux2122_BOOL,aux2241_BOOL,aux2360_BOOL,aux2479_BOOL,aux2598_BOOL,aux2717_BOOL,aux2836_BOOL,aux2955_BOOL],aux2956_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[TWorkers_00001_00001_INTEGER,TWorkers_00001_00002_INTEGER,TWorkers_00001_00003_INTEGER,TWorkers_00001_00004_INTEGER,TWorkers_00001_00005_INTEGER,TWorkers_00001_00006_INTEGER,TWorkers_00001_00007_INTEGER,TWorkers_00001_00008_INTEGER,TWorkers_00001_00009_INTEGER,TWorkers_00001_00010_INTEGER,TWorkers_00001_00011_INTEGER,TWorkers_00001_00012_INTEGER,TWorkers_00001_00013_INTEGER,TWorkers_00001_00014_INTEGER,TWorkers_00001_00015_INTEGER,TWorkers_00001_00016_INTEGER,TWorkers_00001_00017_INTEGER,TWorkers_00001_00018_INTEGER,TWorkers_00001_00019_INTEGER,TWorkers_00001_00020_INTEGER,1],0,aux2957_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux2958_BOOL);
constraint int_lin_eq([-1,1,1],[aux2959,2,s_00005],0);
constraint int_lt_reif(s_00005,aux2959,aux2960_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux2958_BOOL,aux2960_BOOL],aux2961_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux2962_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux2963_BOOL);
constraint int_lin_eq([-1,1,1],[aux2964,1,s_00001],0);
constraint int_lt_reif(s_00005,aux2964,aux2965_BOOL);
constraint int_le_reif(s_00001, s_00005,aux2966_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux2962_BOOL,aux2963_BOOL,aux2965_BOOL,aux2966_BOOL],aux2967_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux2968_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux2969_BOOL);
constraint int_lin_eq([-1,1,1],[aux2970,2,s_00002],0);
constraint int_lt_reif(s_00005,aux2970,aux2971_BOOL);
constraint int_le_reif(s_00002, s_00005,aux2972_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux2968_BOOL,aux2969_BOOL,aux2971_BOOL,aux2972_BOOL],aux2973_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux2974_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux2975_BOOL);
constraint int_lin_eq([-1,1,1],[aux2976,3,s_00003],0);
constraint int_lt_reif(s_00005,aux2976,aux2977_BOOL);
constraint int_le_reif(s_00003, s_00005,aux2978_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux2974_BOOL,aux2975_BOOL,aux2977_BOOL,aux2978_BOOL],aux2979_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux2980_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux2981_BOOL);
constraint int_lin_eq([-1,1,1],[aux2982,2,s_00004],0);
constraint int_lt_reif(s_00005,aux2982,aux2983_BOOL);
constraint int_le_reif(s_00004, s_00005,aux2984_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux2980_BOOL,aux2981_BOOL,aux2983_BOOL,aux2984_BOOL],aux2985_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux2986_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux2987_BOOL);
constraint int_lin_eq([-1,1,1],[aux2988,3,s_00006],0);
constraint int_lt_reif(s_00005,aux2988,aux2989_BOOL);
constraint int_le_reif(s_00006, s_00005,aux2990_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux2986_BOOL,aux2987_BOOL,aux2989_BOOL,aux2990_BOOL],aux2991_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux2992_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux2993_BOOL);
constraint int_lin_eq([-1,1,1],[aux2994,2,s_00007],0);
constraint int_lt_reif(s_00005,aux2994,aux2995_BOOL);
constraint int_le_reif(s_00007, s_00005,aux2996_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux2992_BOOL,aux2993_BOOL,aux2995_BOOL,aux2996_BOOL],aux2997_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux2998_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux2999_BOOL);
constraint int_lin_eq([-1,1,1],[aux3000,1,s_00008],0);
constraint int_lt_reif(s_00005,aux3000,aux3001_BOOL);
constraint int_le_reif(s_00008, s_00005,aux3002_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux2998_BOOL,aux2999_BOOL,aux3001_BOOL,aux3002_BOOL],aux3003_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux3004_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux3005_BOOL);
constraint int_lin_eq([-1,1,1],[aux3006,2,s_00009],0);
constraint int_lt_reif(s_00005,aux3006,aux3007_BOOL);
constraint int_le_reif(s_00009, s_00005,aux3008_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux3004_BOOL,aux3005_BOOL,aux3007_BOOL,aux3008_BOOL],aux3009_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux3010_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3011_BOOL);
constraint int_lin_eq([-1,1,1],[aux3012,1,s_00010],0);
constraint int_lt_reif(s_00005,aux3012,aux3013_BOOL);
constraint int_le_reif(s_00010, s_00005,aux3014_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux3010_BOOL,aux3011_BOOL,aux3013_BOOL,aux3014_BOOL],aux3015_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux3016_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux3017_BOOL);
constraint int_lin_eq([-1,1,1],[aux3018,2,s_00011],0);
constraint int_lt_reif(s_00005,aux3018,aux3019_BOOL);
constraint int_le_reif(s_00011, s_00005,aux3020_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux3016_BOOL,aux3017_BOOL,aux3019_BOOL,aux3020_BOOL],aux3021_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux3022_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux3023_BOOL);
constraint int_lin_eq([-1,1,1],[aux3024,2,s_00012],0);
constraint int_lt_reif(s_00005,aux3024,aux3025_BOOL);
constraint int_le_reif(s_00012, s_00005,aux3026_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux3022_BOOL,aux3023_BOOL,aux3025_BOOL,aux3026_BOOL],aux3027_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux3028_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux3029_BOOL);
constraint int_lin_eq([-1,1,1],[aux3030,1,s_00013],0);
constraint int_lt_reif(s_00005,aux3030,aux3031_BOOL);
constraint int_le_reif(s_00013, s_00005,aux3032_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux3028_BOOL,aux3029_BOOL,aux3031_BOOL,aux3032_BOOL],aux3033_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux3034_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux3035_BOOL);
constraint int_lin_eq([-1,1,1],[aux3036,4,s_00014],0);
constraint int_lt_reif(s_00005,aux3036,aux3037_BOOL);
constraint int_le_reif(s_00014, s_00005,aux3038_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux3034_BOOL,aux3035_BOOL,aux3037_BOOL,aux3038_BOOL],aux3039_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux3040_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux3041_BOOL);
constraint int_lin_eq([-1,1,1],[aux3042,2,s_00015],0);
constraint int_lt_reif(s_00005,aux3042,aux3043_BOOL);
constraint int_le_reif(s_00015, s_00005,aux3044_BOOL);
constraint array_bool_and([w_00002_00015_BOOL,aux3040_BOOL,aux3041_BOOL,aux3043_BOOL,aux3044_BOOL],aux3045_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux3046_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux3047_BOOL);
constraint int_lin_eq([-1,1,1],[aux3048,3,s_00016],0);
constraint int_lt_reif(s_00005,aux3048,aux3049_BOOL);
constraint int_le_reif(s_00016, s_00005,aux3050_BOOL);
constraint array_bool_and([w_00002_00016_BOOL,aux3046_BOOL,aux3047_BOOL,aux3049_BOOL,aux3050_BOOL],aux3051_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux3052_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux3053_BOOL);
constraint int_lin_eq([-1,1,1],[aux3054,1,s_00017],0);
constraint int_lt_reif(s_00005,aux3054,aux3055_BOOL);
constraint int_le_reif(s_00017, s_00005,aux3056_BOOL);
constraint array_bool_and([w_00002_00017_BOOL,aux3052_BOOL,aux3053_BOOL,aux3055_BOOL,aux3056_BOOL],aux3057_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux3058_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux3059_BOOL);
constraint int_lin_eq([-1,1,1],[aux3060,3,s_00018],0);
constraint int_lt_reif(s_00005,aux3060,aux3061_BOOL);
constraint int_le_reif(s_00018, s_00005,aux3062_BOOL);
constraint array_bool_and([w_00002_00018_BOOL,aux3058_BOOL,aux3059_BOOL,aux3061_BOOL,aux3062_BOOL],aux3063_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux3064_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3065_BOOL);
constraint int_lin_eq([-1,1,1],[aux3066,2,s_00019],0);
constraint int_lt_reif(s_00005,aux3066,aux3067_BOOL);
constraint int_le_reif(s_00019, s_00005,aux3068_BOOL);
constraint array_bool_and([w_00002_00019_BOOL,aux3064_BOOL,aux3065_BOOL,aux3067_BOOL,aux3068_BOOL],aux3069_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux3070_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux3071_BOOL);
constraint int_lin_eq([-1,1,1],[aux3072,3,s_00020],0);
constraint int_lt_reif(s_00005,aux3072,aux3073_BOOL);
constraint int_le_reif(s_00020, s_00005,aux3074_BOOL);
constraint array_bool_and([w_00002_00020_BOOL,aux3070_BOOL,aux3071_BOOL,aux3073_BOOL,aux3074_BOOL],aux3075_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux2961_INTEGER,aux2967_INTEGER,aux2973_INTEGER,aux2979_INTEGER,aux2985_INTEGER,aux2991_INTEGER,aux2997_INTEGER,aux3003_INTEGER,aux3009_INTEGER,aux3015_INTEGER,aux3021_INTEGER,aux3027_INTEGER,aux3033_INTEGER,aux3039_INTEGER,aux3045_INTEGER,aux3051_INTEGER,aux3057_INTEGER,aux3063_INTEGER,aux3069_INTEGER,aux3075_INTEGER,1],0,aux3076_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux3077_BOOL);
constraint int_lin_eq([-1,1,1],[aux3078,2,s_00007],0);
constraint int_lt_reif(s_00007,aux3078,aux3079_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux3077_BOOL,aux3079_BOOL],aux3080_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux3081_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux3082_BOOL);
constraint int_lin_eq([-1,1,1],[aux3083,1,s_00001],0);
constraint int_lt_reif(s_00007,aux3083,aux3084_BOOL);
constraint int_le_reif(s_00001, s_00007,aux3085_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux3081_BOOL,aux3082_BOOL,aux3084_BOOL,aux3085_BOOL],aux3086_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux3087_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux3088_BOOL);
constraint int_lin_eq([-1,1,1],[aux3089,2,s_00002],0);
constraint int_lt_reif(s_00007,aux3089,aux3090_BOOL);
constraint int_le_reif(s_00002, s_00007,aux3091_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux3087_BOOL,aux3088_BOOL,aux3090_BOOL,aux3091_BOOL],aux3092_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux3093_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux3094_BOOL);
constraint int_lin_eq([-1,1,1],[aux3095,3,s_00003],0);
constraint int_lt_reif(s_00007,aux3095,aux3096_BOOL);
constraint int_le_reif(s_00003, s_00007,aux3097_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux3093_BOOL,aux3094_BOOL,aux3096_BOOL,aux3097_BOOL],aux3098_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux3099_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux3100_BOOL);
constraint int_lin_eq([-1,1,1],[aux3101,2,s_00004],0);
constraint int_lt_reif(s_00007,aux3101,aux3102_BOOL);
constraint int_le_reif(s_00004, s_00007,aux3103_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux3099_BOOL,aux3100_BOOL,aux3102_BOOL,aux3103_BOOL],aux3104_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux3105_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux3106_BOOL);
constraint int_lin_eq([-1,1,1],[aux3107,2,s_00005],0);
constraint int_lt_reif(s_00007,aux3107,aux3108_BOOL);
constraint int_le_reif(s_00005, s_00007,aux3109_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux3105_BOOL,aux3106_BOOL,aux3108_BOOL,aux3109_BOOL],aux3110_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux3111_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux3112_BOOL);
constraint int_lin_eq([-1,1,1],[aux3113,3,s_00006],0);
constraint int_lt_reif(s_00007,aux3113,aux3114_BOOL);
constraint int_le_reif(s_00006, s_00007,aux3115_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux3111_BOOL,aux3112_BOOL,aux3114_BOOL,aux3115_BOOL],aux3116_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux3117_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux3118_BOOL);
constraint int_lin_eq([-1,1,1],[aux3119,1,s_00008],0);
constraint int_lt_reif(s_00007,aux3119,aux3120_BOOL);
constraint int_le_reif(s_00008, s_00007,aux3121_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux3117_BOOL,aux3118_BOOL,aux3120_BOOL,aux3121_BOOL],aux3122_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux3123_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux3124_BOOL);
constraint int_lin_eq([-1,1,1],[aux3125,2,s_00009],0);
constraint int_lt_reif(s_00007,aux3125,aux3126_BOOL);
constraint int_le_reif(s_00009, s_00007,aux3127_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux3123_BOOL,aux3124_BOOL,aux3126_BOOL,aux3127_BOOL],aux3128_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux3129_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3130_BOOL);
constraint int_lin_eq([-1,1,1],[aux3131,1,s_00010],0);
constraint int_lt_reif(s_00007,aux3131,aux3132_BOOL);
constraint int_le_reif(s_00010, s_00007,aux3133_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux3129_BOOL,aux3130_BOOL,aux3132_BOOL,aux3133_BOOL],aux3134_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux3135_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux3136_BOOL);
constraint int_lin_eq([-1,1,1],[aux3137,2,s_00011],0);
constraint int_lt_reif(s_00007,aux3137,aux3138_BOOL);
constraint int_le_reif(s_00011, s_00007,aux3139_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux3135_BOOL,aux3136_BOOL,aux3138_BOOL,aux3139_BOOL],aux3140_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux3141_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux3142_BOOL);
constraint int_lin_eq([-1,1,1],[aux3143,2,s_00012],0);
constraint int_lt_reif(s_00007,aux3143,aux3144_BOOL);
constraint int_le_reif(s_00012, s_00007,aux3145_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux3141_BOOL,aux3142_BOOL,aux3144_BOOL,aux3145_BOOL],aux3146_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux3147_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux3148_BOOL);
constraint int_lin_eq([-1,1,1],[aux3149,1,s_00013],0);
constraint int_lt_reif(s_00007,aux3149,aux3150_BOOL);
constraint int_le_reif(s_00013, s_00007,aux3151_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux3147_BOOL,aux3148_BOOL,aux3150_BOOL,aux3151_BOOL],aux3152_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux3153_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux3154_BOOL);
constraint int_lin_eq([-1,1,1],[aux3155,4,s_00014],0);
constraint int_lt_reif(s_00007,aux3155,aux3156_BOOL);
constraint int_le_reif(s_00014, s_00007,aux3157_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux3153_BOOL,aux3154_BOOL,aux3156_BOOL,aux3157_BOOL],aux3158_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux3159_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux3160_BOOL);
constraint int_lin_eq([-1,1,1],[aux3161,2,s_00015],0);
constraint int_lt_reif(s_00007,aux3161,aux3162_BOOL);
constraint int_le_reif(s_00015, s_00007,aux3163_BOOL);
constraint array_bool_and([w_00002_00015_BOOL,aux3159_BOOL,aux3160_BOOL,aux3162_BOOL,aux3163_BOOL],aux3164_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux3165_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux3166_BOOL);
constraint int_lin_eq([-1,1,1],[aux3167,3,s_00016],0);
constraint int_lt_reif(s_00007,aux3167,aux3168_BOOL);
constraint int_le_reif(s_00016, s_00007,aux3169_BOOL);
constraint array_bool_and([w_00002_00016_BOOL,aux3165_BOOL,aux3166_BOOL,aux3168_BOOL,aux3169_BOOL],aux3170_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux3171_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux3172_BOOL);
constraint int_lin_eq([-1,1,1],[aux3173,1,s_00017],0);
constraint int_lt_reif(s_00007,aux3173,aux3174_BOOL);
constraint int_le_reif(s_00017, s_00007,aux3175_BOOL);
constraint array_bool_and([w_00002_00017_BOOL,aux3171_BOOL,aux3172_BOOL,aux3174_BOOL,aux3175_BOOL],aux3176_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux3177_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux3178_BOOL);
constraint int_lin_eq([-1,1,1],[aux3179,3,s_00018],0);
constraint int_lt_reif(s_00007,aux3179,aux3180_BOOL);
constraint int_le_reif(s_00018, s_00007,aux3181_BOOL);
constraint array_bool_and([w_00002_00018_BOOL,aux3177_BOOL,aux3178_BOOL,aux3180_BOOL,aux3181_BOOL],aux3182_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux3183_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3184_BOOL);
constraint int_lin_eq([-1,1,1],[aux3185,2,s_00019],0);
constraint int_lt_reif(s_00007,aux3185,aux3186_BOOL);
constraint int_le_reif(s_00019, s_00007,aux3187_BOOL);
constraint array_bool_and([w_00002_00019_BOOL,aux3183_BOOL,aux3184_BOOL,aux3186_BOOL,aux3187_BOOL],aux3188_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux3189_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux3190_BOOL);
constraint int_lin_eq([-1,1,1],[aux3191,3,s_00020],0);
constraint int_lt_reif(s_00007,aux3191,aux3192_BOOL);
constraint int_le_reif(s_00020, s_00007,aux3193_BOOL);
constraint array_bool_and([w_00002_00020_BOOL,aux3189_BOOL,aux3190_BOOL,aux3192_BOOL,aux3193_BOOL],aux3194_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux3080_INTEGER,aux3086_INTEGER,aux3092_INTEGER,aux3098_INTEGER,aux3104_INTEGER,aux3110_INTEGER,aux3116_INTEGER,aux3122_INTEGER,aux3128_INTEGER,aux3134_INTEGER,aux3140_INTEGER,aux3146_INTEGER,aux3152_INTEGER,aux3158_INTEGER,aux3164_INTEGER,aux3170_INTEGER,aux3176_INTEGER,aux3182_INTEGER,aux3188_INTEGER,aux3194_INTEGER,1],0,aux3195_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux3196_BOOL);
constraint int_lin_eq([-1,1,1],[aux3197,2,s_00012],0);
constraint int_lt_reif(s_00012,aux3197,aux3198_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux3196_BOOL,aux3198_BOOL],aux3199_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux3200_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux3201_BOOL);
constraint int_lin_eq([-1,1,1],[aux3202,1,s_00001],0);
constraint int_lt_reif(s_00012,aux3202,aux3203_BOOL);
constraint int_le_reif(s_00001, s_00012,aux3204_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux3200_BOOL,aux3201_BOOL,aux3203_BOOL,aux3204_BOOL],aux3205_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux3206_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux3207_BOOL);
constraint int_lin_eq([-1,1,1],[aux3208,2,s_00002],0);
constraint int_lt_reif(s_00012,aux3208,aux3209_BOOL);
constraint int_le_reif(s_00002, s_00012,aux3210_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux3206_BOOL,aux3207_BOOL,aux3209_BOOL,aux3210_BOOL],aux3211_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux3212_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux3213_BOOL);
constraint int_lin_eq([-1,1,1],[aux3214,3,s_00003],0);
constraint int_lt_reif(s_00012,aux3214,aux3215_BOOL);
constraint int_le_reif(s_00003, s_00012,aux3216_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux3212_BOOL,aux3213_BOOL,aux3215_BOOL,aux3216_BOOL],aux3217_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux3218_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux3219_BOOL);
constraint int_lin_eq([-1,1,1],[aux3220,2,s_00004],0);
constraint int_lt_reif(s_00012,aux3220,aux3221_BOOL);
constraint int_le_reif(s_00004, s_00012,aux3222_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux3218_BOOL,aux3219_BOOL,aux3221_BOOL,aux3222_BOOL],aux3223_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux3224_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux3225_BOOL);
constraint int_lin_eq([-1,1,1],[aux3226,2,s_00005],0);
constraint int_lt_reif(s_00012,aux3226,aux3227_BOOL);
constraint int_le_reif(s_00005, s_00012,aux3228_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux3224_BOOL,aux3225_BOOL,aux3227_BOOL,aux3228_BOOL],aux3229_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux3230_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux3231_BOOL);
constraint int_lin_eq([-1,1,1],[aux3232,3,s_00006],0);
constraint int_lt_reif(s_00012,aux3232,aux3233_BOOL);
constraint int_le_reif(s_00006, s_00012,aux3234_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux3230_BOOL,aux3231_BOOL,aux3233_BOOL,aux3234_BOOL],aux3235_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux3236_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux3237_BOOL);
constraint int_lin_eq([-1,1,1],[aux3238,2,s_00007],0);
constraint int_lt_reif(s_00012,aux3238,aux3239_BOOL);
constraint int_le_reif(s_00007, s_00012,aux3240_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux3236_BOOL,aux3237_BOOL,aux3239_BOOL,aux3240_BOOL],aux3241_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux3242_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux3243_BOOL);
constraint int_lin_eq([-1,1,1],[aux3244,1,s_00008],0);
constraint int_lt_reif(s_00012,aux3244,aux3245_BOOL);
constraint int_le_reif(s_00008, s_00012,aux3246_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux3242_BOOL,aux3243_BOOL,aux3245_BOOL,aux3246_BOOL],aux3247_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux3248_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux3249_BOOL);
constraint int_lin_eq([-1,1,1],[aux3250,2,s_00009],0);
constraint int_lt_reif(s_00012,aux3250,aux3251_BOOL);
constraint int_le_reif(s_00009, s_00012,aux3252_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux3248_BOOL,aux3249_BOOL,aux3251_BOOL,aux3252_BOOL],aux3253_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3254_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux3255_BOOL);
constraint int_lin_eq([-1,1,1],[aux3256,1,s_00010],0);
constraint int_lt_reif(s_00012,aux3256,aux3257_BOOL);
constraint int_le_reif(s_00010, s_00012,aux3258_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux3254_BOOL,aux3255_BOOL,aux3257_BOOL,aux3258_BOOL],aux3259_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux3260_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux3261_BOOL);
constraint int_lin_eq([-1,1,1],[aux3262,2,s_00011],0);
constraint int_lt_reif(s_00012,aux3262,aux3263_BOOL);
constraint int_le_reif(s_00011, s_00012,aux3264_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux3260_BOOL,aux3261_BOOL,aux3263_BOOL,aux3264_BOOL],aux3265_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux3266_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux3267_BOOL);
constraint int_lin_eq([-1,1,1],[aux3268,1,s_00013],0);
constraint int_lt_reif(s_00012,aux3268,aux3269_BOOL);
constraint int_le_reif(s_00013, s_00012,aux3270_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux3266_BOOL,aux3267_BOOL,aux3269_BOOL,aux3270_BOOL],aux3271_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux3272_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux3273_BOOL);
constraint int_lin_eq([-1,1,1],[aux3274,4,s_00014],0);
constraint int_lt_reif(s_00012,aux3274,aux3275_BOOL);
constraint int_le_reif(s_00014, s_00012,aux3276_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux3272_BOOL,aux3273_BOOL,aux3275_BOOL,aux3276_BOOL],aux3277_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux3278_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux3279_BOOL);
constraint int_lin_eq([-1,1,1],[aux3280,2,s_00015],0);
constraint int_lt_reif(s_00012,aux3280,aux3281_BOOL);
constraint int_le_reif(s_00015, s_00012,aux3282_BOOL);
constraint array_bool_and([w_00002_00015_BOOL,aux3278_BOOL,aux3279_BOOL,aux3281_BOOL,aux3282_BOOL],aux3283_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux3284_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux3285_BOOL);
constraint int_lin_eq([-1,1,1],[aux3286,3,s_00016],0);
constraint int_lt_reif(s_00012,aux3286,aux3287_BOOL);
constraint int_le_reif(s_00016, s_00012,aux3288_BOOL);
constraint array_bool_and([w_00002_00016_BOOL,aux3284_BOOL,aux3285_BOOL,aux3287_BOOL,aux3288_BOOL],aux3289_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux3290_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux3291_BOOL);
constraint int_lin_eq([-1,1,1],[aux3292,1,s_00017],0);
constraint int_lt_reif(s_00012,aux3292,aux3293_BOOL);
constraint int_le_reif(s_00017, s_00012,aux3294_BOOL);
constraint array_bool_and([w_00002_00017_BOOL,aux3290_BOOL,aux3291_BOOL,aux3293_BOOL,aux3294_BOOL],aux3295_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux3296_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux3297_BOOL);
constraint int_lin_eq([-1,1,1],[aux3298,3,s_00018],0);
constraint int_lt_reif(s_00012,aux3298,aux3299_BOOL);
constraint int_le_reif(s_00018, s_00012,aux3300_BOOL);
constraint array_bool_and([w_00002_00018_BOOL,aux3296_BOOL,aux3297_BOOL,aux3299_BOOL,aux3300_BOOL],aux3301_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux3302_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3303_BOOL);
constraint int_lin_eq([-1,1,1],[aux3304,2,s_00019],0);
constraint int_lt_reif(s_00012,aux3304,aux3305_BOOL);
constraint int_le_reif(s_00019, s_00012,aux3306_BOOL);
constraint array_bool_and([w_00002_00019_BOOL,aux3302_BOOL,aux3303_BOOL,aux3305_BOOL,aux3306_BOOL],aux3307_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux3308_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux3309_BOOL);
constraint int_lin_eq([-1,1,1],[aux3310,3,s_00020],0);
constraint int_lt_reif(s_00012,aux3310,aux3311_BOOL);
constraint int_le_reif(s_00020, s_00012,aux3312_BOOL);
constraint array_bool_and([w_00002_00020_BOOL,aux3308_BOOL,aux3309_BOOL,aux3311_BOOL,aux3312_BOOL],aux3313_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux3199_INTEGER,aux3205_INTEGER,aux3211_INTEGER,aux3217_INTEGER,aux3223_INTEGER,aux3229_INTEGER,aux3235_INTEGER,aux3241_INTEGER,aux3247_INTEGER,aux3253_INTEGER,aux3259_INTEGER,aux3265_INTEGER,aux3271_INTEGER,aux3277_INTEGER,aux3283_INTEGER,aux3289_INTEGER,aux3295_INTEGER,aux3301_INTEGER,aux3307_INTEGER,aux3313_INTEGER,1],0,aux3314_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux3315_BOOL);
constraint int_lin_eq([-1,1,1],[aux3316,2,s_00004],0);
constraint int_lt_reif(s_00004,aux3316,aux3317_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux3315_BOOL,aux3317_BOOL],aux3318_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux3319_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux3320_BOOL);
constraint int_lin_eq([-1,1,1],[aux3321,1,s_00001],0);
constraint int_lt_reif(s_00004,aux3321,aux3322_BOOL);
constraint int_le_reif(s_00001, s_00004,aux3323_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux3319_BOOL,aux3320_BOOL,aux3322_BOOL,aux3323_BOOL],aux3324_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux3325_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux3326_BOOL);
constraint int_lin_eq([-1,1,1],[aux3327,2,s_00002],0);
constraint int_lt_reif(s_00004,aux3327,aux3328_BOOL);
constraint int_le_reif(s_00002, s_00004,aux3329_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux3325_BOOL,aux3326_BOOL,aux3328_BOOL,aux3329_BOOL],aux3330_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux3331_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux3332_BOOL);
constraint int_lin_eq([-1,1,1],[aux3333,3,s_00003],0);
constraint int_lt_reif(s_00004,aux3333,aux3334_BOOL);
constraint int_le_reif(s_00003, s_00004,aux3335_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux3331_BOOL,aux3332_BOOL,aux3334_BOOL,aux3335_BOOL],aux3336_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux3337_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux3338_BOOL);
constraint int_lin_eq([-1,1,1],[aux3339,2,s_00005],0);
constraint int_lt_reif(s_00004,aux3339,aux3340_BOOL);
constraint int_le_reif(s_00005, s_00004,aux3341_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux3337_BOOL,aux3338_BOOL,aux3340_BOOL,aux3341_BOOL],aux3342_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux3343_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux3344_BOOL);
constraint int_lin_eq([-1,1,1],[aux3345,3,s_00006],0);
constraint int_lt_reif(s_00004,aux3345,aux3346_BOOL);
constraint int_le_reif(s_00006, s_00004,aux3347_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux3343_BOOL,aux3344_BOOL,aux3346_BOOL,aux3347_BOOL],aux3348_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux3349_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux3350_BOOL);
constraint int_lin_eq([-1,1,1],[aux3351,2,s_00007],0);
constraint int_lt_reif(s_00004,aux3351,aux3352_BOOL);
constraint int_le_reif(s_00007, s_00004,aux3353_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux3349_BOOL,aux3350_BOOL,aux3352_BOOL,aux3353_BOOL],aux3354_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux3355_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux3356_BOOL);
constraint int_lin_eq([-1,1,1],[aux3357,1,s_00008],0);
constraint int_lt_reif(s_00004,aux3357,aux3358_BOOL);
constraint int_le_reif(s_00008, s_00004,aux3359_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux3355_BOOL,aux3356_BOOL,aux3358_BOOL,aux3359_BOOL],aux3360_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux3361_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux3362_BOOL);
constraint int_lin_eq([-1,1,1],[aux3363,2,s_00009],0);
constraint int_lt_reif(s_00004,aux3363,aux3364_BOOL);
constraint int_le_reif(s_00009, s_00004,aux3365_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux3361_BOOL,aux3362_BOOL,aux3364_BOOL,aux3365_BOOL],aux3366_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux3367_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3368_BOOL);
constraint int_lin_eq([-1,1,1],[aux3369,1,s_00010],0);
constraint int_lt_reif(s_00004,aux3369,aux3370_BOOL);
constraint int_le_reif(s_00010, s_00004,aux3371_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux3367_BOOL,aux3368_BOOL,aux3370_BOOL,aux3371_BOOL],aux3372_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux3373_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux3374_BOOL);
constraint int_lin_eq([-1,1,1],[aux3375,2,s_00011],0);
constraint int_lt_reif(s_00004,aux3375,aux3376_BOOL);
constraint int_le_reif(s_00011, s_00004,aux3377_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux3373_BOOL,aux3374_BOOL,aux3376_BOOL,aux3377_BOOL],aux3378_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux3379_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux3380_BOOL);
constraint int_lin_eq([-1,1,1],[aux3381,2,s_00012],0);
constraint int_lt_reif(s_00004,aux3381,aux3382_BOOL);
constraint int_le_reif(s_00012, s_00004,aux3383_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux3379_BOOL,aux3380_BOOL,aux3382_BOOL,aux3383_BOOL],aux3384_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux3385_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux3386_BOOL);
constraint int_lin_eq([-1,1,1],[aux3387,1,s_00013],0);
constraint int_lt_reif(s_00004,aux3387,aux3388_BOOL);
constraint int_le_reif(s_00013, s_00004,aux3389_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux3385_BOOL,aux3386_BOOL,aux3388_BOOL,aux3389_BOOL],aux3390_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux3391_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux3392_BOOL);
constraint int_lin_eq([-1,1,1],[aux3393,4,s_00014],0);
constraint int_lt_reif(s_00004,aux3393,aux3394_BOOL);
constraint int_le_reif(s_00014, s_00004,aux3395_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux3391_BOOL,aux3392_BOOL,aux3394_BOOL,aux3395_BOOL],aux3396_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux3397_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux3398_BOOL);
constraint int_lin_eq([-1,1,1],[aux3399,2,s_00015],0);
constraint int_lt_reif(s_00004,aux3399,aux3400_BOOL);
constraint int_le_reif(s_00015, s_00004,aux3401_BOOL);
constraint array_bool_and([w_00002_00015_BOOL,aux3397_BOOL,aux3398_BOOL,aux3400_BOOL,aux3401_BOOL],aux3402_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux3403_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux3404_BOOL);
constraint int_lin_eq([-1,1,1],[aux3405,3,s_00016],0);
constraint int_lt_reif(s_00004,aux3405,aux3406_BOOL);
constraint int_le_reif(s_00016, s_00004,aux3407_BOOL);
constraint array_bool_and([w_00002_00016_BOOL,aux3403_BOOL,aux3404_BOOL,aux3406_BOOL,aux3407_BOOL],aux3408_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux3409_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux3410_BOOL);
constraint int_lin_eq([-1,1,1],[aux3411,1,s_00017],0);
constraint int_lt_reif(s_00004,aux3411,aux3412_BOOL);
constraint int_le_reif(s_00017, s_00004,aux3413_BOOL);
constraint array_bool_and([w_00002_00017_BOOL,aux3409_BOOL,aux3410_BOOL,aux3412_BOOL,aux3413_BOOL],aux3414_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux3415_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux3416_BOOL);
constraint int_lin_eq([-1,1,1],[aux3417,3,s_00018],0);
constraint int_lt_reif(s_00004,aux3417,aux3418_BOOL);
constraint int_le_reif(s_00018, s_00004,aux3419_BOOL);
constraint array_bool_and([w_00002_00018_BOOL,aux3415_BOOL,aux3416_BOOL,aux3418_BOOL,aux3419_BOOL],aux3420_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux3421_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3422_BOOL);
constraint int_lin_eq([-1,1,1],[aux3423,2,s_00019],0);
constraint int_lt_reif(s_00004,aux3423,aux3424_BOOL);
constraint int_le_reif(s_00019, s_00004,aux3425_BOOL);
constraint array_bool_and([w_00002_00019_BOOL,aux3421_BOOL,aux3422_BOOL,aux3424_BOOL,aux3425_BOOL],aux3426_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux3427_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux3428_BOOL);
constraint int_lin_eq([-1,1,1],[aux3429,3,s_00020],0);
constraint int_lt_reif(s_00004,aux3429,aux3430_BOOL);
constraint int_le_reif(s_00020, s_00004,aux3431_BOOL);
constraint array_bool_and([w_00002_00020_BOOL,aux3427_BOOL,aux3428_BOOL,aux3430_BOOL,aux3431_BOOL],aux3432_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux3318_INTEGER,aux3324_INTEGER,aux3330_INTEGER,aux3336_INTEGER,aux3342_INTEGER,aux3348_INTEGER,aux3354_INTEGER,aux3360_INTEGER,aux3366_INTEGER,aux3372_INTEGER,aux3378_INTEGER,aux3384_INTEGER,aux3390_INTEGER,aux3396_INTEGER,aux3402_INTEGER,aux3408_INTEGER,aux3414_INTEGER,aux3420_INTEGER,aux3426_INTEGER,aux3432_INTEGER,1],0,aux3433_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3434_BOOL);
constraint int_lin_eq([-1,1,1],[aux3435,1,s_00010],0);
constraint int_lt_reif(s_00010,aux3435,aux3436_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux3434_BOOL,aux3436_BOOL],aux3437_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux3438_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3439_BOOL);
constraint int_lin_eq([-1,1,1],[aux3440,1,s_00001],0);
constraint int_lt_reif(s_00010,aux3440,aux3441_BOOL);
constraint int_le_reif(s_00001, s_00010,aux3442_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux3438_BOOL,aux3439_BOOL,aux3441_BOOL,aux3442_BOOL],aux3443_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux3444_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3445_BOOL);
constraint int_lin_eq([-1,1,1],[aux3446,2,s_00002],0);
constraint int_lt_reif(s_00010,aux3446,aux3447_BOOL);
constraint int_le_reif(s_00002, s_00010,aux3448_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux3444_BOOL,aux3445_BOOL,aux3447_BOOL,aux3448_BOOL],aux3449_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux3450_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3451_BOOL);
constraint int_lin_eq([-1,1,1],[aux3452,3,s_00003],0);
constraint int_lt_reif(s_00010,aux3452,aux3453_BOOL);
constraint int_le_reif(s_00003, s_00010,aux3454_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux3450_BOOL,aux3451_BOOL,aux3453_BOOL,aux3454_BOOL],aux3455_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux3456_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3457_BOOL);
constraint int_lin_eq([-1,1,1],[aux3458,2,s_00004],0);
constraint int_lt_reif(s_00010,aux3458,aux3459_BOOL);
constraint int_le_reif(s_00004, s_00010,aux3460_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux3456_BOOL,aux3457_BOOL,aux3459_BOOL,aux3460_BOOL],aux3461_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux3462_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3463_BOOL);
constraint int_lin_eq([-1,1,1],[aux3464,2,s_00005],0);
constraint int_lt_reif(s_00010,aux3464,aux3465_BOOL);
constraint int_le_reif(s_00005, s_00010,aux3466_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux3462_BOOL,aux3463_BOOL,aux3465_BOOL,aux3466_BOOL],aux3467_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux3468_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3469_BOOL);
constraint int_lin_eq([-1,1,1],[aux3470,3,s_00006],0);
constraint int_lt_reif(s_00010,aux3470,aux3471_BOOL);
constraint int_le_reif(s_00006, s_00010,aux3472_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux3468_BOOL,aux3469_BOOL,aux3471_BOOL,aux3472_BOOL],aux3473_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux3474_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3475_BOOL);
constraint int_lin_eq([-1,1,1],[aux3476,2,s_00007],0);
constraint int_lt_reif(s_00010,aux3476,aux3477_BOOL);
constraint int_le_reif(s_00007, s_00010,aux3478_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux3474_BOOL,aux3475_BOOL,aux3477_BOOL,aux3478_BOOL],aux3479_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux3480_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3481_BOOL);
constraint int_lin_eq([-1,1,1],[aux3482,1,s_00008],0);
constraint int_lt_reif(s_00010,aux3482,aux3483_BOOL);
constraint int_le_reif(s_00008, s_00010,aux3484_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux3480_BOOL,aux3481_BOOL,aux3483_BOOL,aux3484_BOOL],aux3485_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux3486_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3487_BOOL);
constraint int_lin_eq([-1,1,1],[aux3488,2,s_00009],0);
constraint int_lt_reif(s_00010,aux3488,aux3489_BOOL);
constraint int_le_reif(s_00009, s_00010,aux3490_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux3486_BOOL,aux3487_BOOL,aux3489_BOOL,aux3490_BOOL],aux3491_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3492_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux3493_BOOL);
constraint int_lin_eq([-1,1,1],[aux3494,2,s_00011],0);
constraint int_lt_reif(s_00010,aux3494,aux3495_BOOL);
constraint int_le_reif(s_00011, s_00010,aux3496_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux3492_BOOL,aux3493_BOOL,aux3495_BOOL,aux3496_BOOL],aux3497_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3498_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux3499_BOOL);
constraint int_lin_eq([-1,1,1],[aux3500,2,s_00012],0);
constraint int_lt_reif(s_00010,aux3500,aux3501_BOOL);
constraint int_le_reif(s_00012, s_00010,aux3502_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux3498_BOOL,aux3499_BOOL,aux3501_BOOL,aux3502_BOOL],aux3503_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3504_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux3505_BOOL);
constraint int_lin_eq([-1,1,1],[aux3506,1,s_00013],0);
constraint int_lt_reif(s_00010,aux3506,aux3507_BOOL);
constraint int_le_reif(s_00013, s_00010,aux3508_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux3504_BOOL,aux3505_BOOL,aux3507_BOOL,aux3508_BOOL],aux3509_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3510_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux3511_BOOL);
constraint int_lin_eq([-1,1,1],[aux3512,4,s_00014],0);
constraint int_lt_reif(s_00010,aux3512,aux3513_BOOL);
constraint int_le_reif(s_00014, s_00010,aux3514_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux3510_BOOL,aux3511_BOOL,aux3513_BOOL,aux3514_BOOL],aux3515_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3516_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux3517_BOOL);
constraint int_lin_eq([-1,1,1],[aux3518,2,s_00015],0);
constraint int_lt_reif(s_00010,aux3518,aux3519_BOOL);
constraint int_le_reif(s_00015, s_00010,aux3520_BOOL);
constraint array_bool_and([w_00002_00015_BOOL,aux3516_BOOL,aux3517_BOOL,aux3519_BOOL,aux3520_BOOL],aux3521_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3522_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux3523_BOOL);
constraint int_lin_eq([-1,1,1],[aux3524,3,s_00016],0);
constraint int_lt_reif(s_00010,aux3524,aux3525_BOOL);
constraint int_le_reif(s_00016, s_00010,aux3526_BOOL);
constraint array_bool_and([w_00002_00016_BOOL,aux3522_BOOL,aux3523_BOOL,aux3525_BOOL,aux3526_BOOL],aux3527_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3528_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux3529_BOOL);
constraint int_lin_eq([-1,1,1],[aux3530,1,s_00017],0);
constraint int_lt_reif(s_00010,aux3530,aux3531_BOOL);
constraint int_le_reif(s_00017, s_00010,aux3532_BOOL);
constraint array_bool_and([w_00002_00017_BOOL,aux3528_BOOL,aux3529_BOOL,aux3531_BOOL,aux3532_BOOL],aux3533_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3534_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux3535_BOOL);
constraint int_lin_eq([-1,1,1],[aux3536,3,s_00018],0);
constraint int_lt_reif(s_00010,aux3536,aux3537_BOOL);
constraint int_le_reif(s_00018, s_00010,aux3538_BOOL);
constraint array_bool_and([w_00002_00018_BOOL,aux3534_BOOL,aux3535_BOOL,aux3537_BOOL,aux3538_BOOL],aux3539_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3540_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3541_BOOL);
constraint int_lin_eq([-1,1,1],[aux3542,2,s_00019],0);
constraint int_lt_reif(s_00010,aux3542,aux3543_BOOL);
constraint int_le_reif(s_00019, s_00010,aux3544_BOOL);
constraint array_bool_and([w_00002_00019_BOOL,aux3540_BOOL,aux3541_BOOL,aux3543_BOOL,aux3544_BOOL],aux3545_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3546_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux3547_BOOL);
constraint int_lin_eq([-1,1,1],[aux3548,3,s_00020],0);
constraint int_lt_reif(s_00010,aux3548,aux3549_BOOL);
constraint int_le_reif(s_00020, s_00010,aux3550_BOOL);
constraint array_bool_and([w_00002_00020_BOOL,aux3546_BOOL,aux3547_BOOL,aux3549_BOOL,aux3550_BOOL],aux3551_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux3437_INTEGER,aux3443_INTEGER,aux3449_INTEGER,aux3455_INTEGER,aux3461_INTEGER,aux3467_INTEGER,aux3473_INTEGER,aux3479_INTEGER,aux3485_INTEGER,aux3491_INTEGER,aux3497_INTEGER,aux3503_INTEGER,aux3509_INTEGER,aux3515_INTEGER,aux3521_INTEGER,aux3527_INTEGER,aux3533_INTEGER,aux3539_INTEGER,aux3545_INTEGER,aux3551_INTEGER,1],0,aux3552_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux3553_BOOL);
constraint int_lin_eq([-1,1,1],[aux3554,1,s_00008],0);
constraint int_lt_reif(s_00008,aux3554,aux3555_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux3553_BOOL,aux3555_BOOL],aux3556_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux3557_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux3558_BOOL);
constraint int_lin_eq([-1,1,1],[aux3559,1,s_00001],0);
constraint int_lt_reif(s_00008,aux3559,aux3560_BOOL);
constraint int_le_reif(s_00001, s_00008,aux3561_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux3557_BOOL,aux3558_BOOL,aux3560_BOOL,aux3561_BOOL],aux3562_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux3563_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux3564_BOOL);
constraint int_lin_eq([-1,1,1],[aux3565,2,s_00002],0);
constraint int_lt_reif(s_00008,aux3565,aux3566_BOOL);
constraint int_le_reif(s_00002, s_00008,aux3567_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux3563_BOOL,aux3564_BOOL,aux3566_BOOL,aux3567_BOOL],aux3568_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux3569_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux3570_BOOL);
constraint int_lin_eq([-1,1,1],[aux3571,3,s_00003],0);
constraint int_lt_reif(s_00008,aux3571,aux3572_BOOL);
constraint int_le_reif(s_00003, s_00008,aux3573_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux3569_BOOL,aux3570_BOOL,aux3572_BOOL,aux3573_BOOL],aux3574_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux3575_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux3576_BOOL);
constraint int_lin_eq([-1,1,1],[aux3577,2,s_00004],0);
constraint int_lt_reif(s_00008,aux3577,aux3578_BOOL);
constraint int_le_reif(s_00004, s_00008,aux3579_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux3575_BOOL,aux3576_BOOL,aux3578_BOOL,aux3579_BOOL],aux3580_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux3581_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux3582_BOOL);
constraint int_lin_eq([-1,1,1],[aux3583,2,s_00005],0);
constraint int_lt_reif(s_00008,aux3583,aux3584_BOOL);
constraint int_le_reif(s_00005, s_00008,aux3585_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux3581_BOOL,aux3582_BOOL,aux3584_BOOL,aux3585_BOOL],aux3586_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux3587_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux3588_BOOL);
constraint int_lin_eq([-1,1,1],[aux3589,3,s_00006],0);
constraint int_lt_reif(s_00008,aux3589,aux3590_BOOL);
constraint int_le_reif(s_00006, s_00008,aux3591_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux3587_BOOL,aux3588_BOOL,aux3590_BOOL,aux3591_BOOL],aux3592_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux3593_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux3594_BOOL);
constraint int_lin_eq([-1,1,1],[aux3595,2,s_00007],0);
constraint int_lt_reif(s_00008,aux3595,aux3596_BOOL);
constraint int_le_reif(s_00007, s_00008,aux3597_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux3593_BOOL,aux3594_BOOL,aux3596_BOOL,aux3597_BOOL],aux3598_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux3599_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux3600_BOOL);
constraint int_lin_eq([-1,1,1],[aux3601,2,s_00009],0);
constraint int_lt_reif(s_00008,aux3601,aux3602_BOOL);
constraint int_le_reif(s_00009, s_00008,aux3603_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux3599_BOOL,aux3600_BOOL,aux3602_BOOL,aux3603_BOOL],aux3604_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux3605_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3606_BOOL);
constraint int_lin_eq([-1,1,1],[aux3607,1,s_00010],0);
constraint int_lt_reif(s_00008,aux3607,aux3608_BOOL);
constraint int_le_reif(s_00010, s_00008,aux3609_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux3605_BOOL,aux3606_BOOL,aux3608_BOOL,aux3609_BOOL],aux3610_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux3611_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux3612_BOOL);
constraint int_lin_eq([-1,1,1],[aux3613,2,s_00011],0);
constraint int_lt_reif(s_00008,aux3613,aux3614_BOOL);
constraint int_le_reif(s_00011, s_00008,aux3615_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux3611_BOOL,aux3612_BOOL,aux3614_BOOL,aux3615_BOOL],aux3616_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux3617_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux3618_BOOL);
constraint int_lin_eq([-1,1,1],[aux3619,2,s_00012],0);
constraint int_lt_reif(s_00008,aux3619,aux3620_BOOL);
constraint int_le_reif(s_00012, s_00008,aux3621_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux3617_BOOL,aux3618_BOOL,aux3620_BOOL,aux3621_BOOL],aux3622_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux3623_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux3624_BOOL);
constraint int_lin_eq([-1,1,1],[aux3625,1,s_00013],0);
constraint int_lt_reif(s_00008,aux3625,aux3626_BOOL);
constraint int_le_reif(s_00013, s_00008,aux3627_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux3623_BOOL,aux3624_BOOL,aux3626_BOOL,aux3627_BOOL],aux3628_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux3629_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux3630_BOOL);
constraint int_lin_eq([-1,1,1],[aux3631,4,s_00014],0);
constraint int_lt_reif(s_00008,aux3631,aux3632_BOOL);
constraint int_le_reif(s_00014, s_00008,aux3633_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux3629_BOOL,aux3630_BOOL,aux3632_BOOL,aux3633_BOOL],aux3634_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux3635_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux3636_BOOL);
constraint int_lin_eq([-1,1,1],[aux3637,2,s_00015],0);
constraint int_lt_reif(s_00008,aux3637,aux3638_BOOL);
constraint int_le_reif(s_00015, s_00008,aux3639_BOOL);
constraint array_bool_and([w_00002_00015_BOOL,aux3635_BOOL,aux3636_BOOL,aux3638_BOOL,aux3639_BOOL],aux3640_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux3641_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux3642_BOOL);
constraint int_lin_eq([-1,1,1],[aux3643,3,s_00016],0);
constraint int_lt_reif(s_00008,aux3643,aux3644_BOOL);
constraint int_le_reif(s_00016, s_00008,aux3645_BOOL);
constraint array_bool_and([w_00002_00016_BOOL,aux3641_BOOL,aux3642_BOOL,aux3644_BOOL,aux3645_BOOL],aux3646_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux3647_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux3648_BOOL);
constraint int_lin_eq([-1,1,1],[aux3649,1,s_00017],0);
constraint int_lt_reif(s_00008,aux3649,aux3650_BOOL);
constraint int_le_reif(s_00017, s_00008,aux3651_BOOL);
constraint array_bool_and([w_00002_00017_BOOL,aux3647_BOOL,aux3648_BOOL,aux3650_BOOL,aux3651_BOOL],aux3652_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux3653_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux3654_BOOL);
constraint int_lin_eq([-1,1,1],[aux3655,3,s_00018],0);
constraint int_lt_reif(s_00008,aux3655,aux3656_BOOL);
constraint int_le_reif(s_00018, s_00008,aux3657_BOOL);
constraint array_bool_and([w_00002_00018_BOOL,aux3653_BOOL,aux3654_BOOL,aux3656_BOOL,aux3657_BOOL],aux3658_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux3659_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3660_BOOL);
constraint int_lin_eq([-1,1,1],[aux3661,2,s_00019],0);
constraint int_lt_reif(s_00008,aux3661,aux3662_BOOL);
constraint int_le_reif(s_00019, s_00008,aux3663_BOOL);
constraint array_bool_and([w_00002_00019_BOOL,aux3659_BOOL,aux3660_BOOL,aux3662_BOOL,aux3663_BOOL],aux3664_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux3665_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux3666_BOOL);
constraint int_lin_eq([-1,1,1],[aux3667,3,s_00020],0);
constraint int_lt_reif(s_00008,aux3667,aux3668_BOOL);
constraint int_le_reif(s_00020, s_00008,aux3669_BOOL);
constraint array_bool_and([w_00002_00020_BOOL,aux3665_BOOL,aux3666_BOOL,aux3668_BOOL,aux3669_BOOL],aux3670_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux3556_INTEGER,aux3562_INTEGER,aux3568_INTEGER,aux3574_INTEGER,aux3580_INTEGER,aux3586_INTEGER,aux3592_INTEGER,aux3598_INTEGER,aux3604_INTEGER,aux3610_INTEGER,aux3616_INTEGER,aux3622_INTEGER,aux3628_INTEGER,aux3634_INTEGER,aux3640_INTEGER,aux3646_INTEGER,aux3652_INTEGER,aux3658_INTEGER,aux3664_INTEGER,aux3670_INTEGER,1],0,aux3671_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux3672_BOOL);
constraint int_lin_eq([-1,1,1],[aux3673,3,s_00020],0);
constraint int_lt_reif(s_00020,aux3673,aux3674_BOOL);
constraint array_bool_and([w_00002_00020_BOOL,aux3672_BOOL,aux3674_BOOL],aux3675_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux3676_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux3677_BOOL);
constraint int_lin_eq([-1,1,1],[aux3678,1,s_00001],0);
constraint int_lt_reif(s_00020,aux3678,aux3679_BOOL);
constraint int_le_reif(s_00001, s_00020,aux3680_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux3676_BOOL,aux3677_BOOL,aux3679_BOOL,aux3680_BOOL],aux3681_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux3682_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux3683_BOOL);
constraint int_lin_eq([-1,1,1],[aux3684,2,s_00002],0);
constraint int_lt_reif(s_00020,aux3684,aux3685_BOOL);
constraint int_le_reif(s_00002, s_00020,aux3686_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux3682_BOOL,aux3683_BOOL,aux3685_BOOL,aux3686_BOOL],aux3687_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux3688_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux3689_BOOL);
constraint int_lin_eq([-1,1,1],[aux3690,3,s_00003],0);
constraint int_lt_reif(s_00020,aux3690,aux3691_BOOL);
constraint int_le_reif(s_00003, s_00020,aux3692_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux3688_BOOL,aux3689_BOOL,aux3691_BOOL,aux3692_BOOL],aux3693_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux3694_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux3695_BOOL);
constraint int_lin_eq([-1,1,1],[aux3696,2,s_00004],0);
constraint int_lt_reif(s_00020,aux3696,aux3697_BOOL);
constraint int_le_reif(s_00004, s_00020,aux3698_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux3694_BOOL,aux3695_BOOL,aux3697_BOOL,aux3698_BOOL],aux3699_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux3700_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux3701_BOOL);
constraint int_lin_eq([-1,1,1],[aux3702,2,s_00005],0);
constraint int_lt_reif(s_00020,aux3702,aux3703_BOOL);
constraint int_le_reif(s_00005, s_00020,aux3704_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux3700_BOOL,aux3701_BOOL,aux3703_BOOL,aux3704_BOOL],aux3705_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux3706_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux3707_BOOL);
constraint int_lin_eq([-1,1,1],[aux3708,3,s_00006],0);
constraint int_lt_reif(s_00020,aux3708,aux3709_BOOL);
constraint int_le_reif(s_00006, s_00020,aux3710_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux3706_BOOL,aux3707_BOOL,aux3709_BOOL,aux3710_BOOL],aux3711_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux3712_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux3713_BOOL);
constraint int_lin_eq([-1,1,1],[aux3714,2,s_00007],0);
constraint int_lt_reif(s_00020,aux3714,aux3715_BOOL);
constraint int_le_reif(s_00007, s_00020,aux3716_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux3712_BOOL,aux3713_BOOL,aux3715_BOOL,aux3716_BOOL],aux3717_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux3718_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux3719_BOOL);
constraint int_lin_eq([-1,1,1],[aux3720,1,s_00008],0);
constraint int_lt_reif(s_00020,aux3720,aux3721_BOOL);
constraint int_le_reif(s_00008, s_00020,aux3722_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux3718_BOOL,aux3719_BOOL,aux3721_BOOL,aux3722_BOOL],aux3723_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux3724_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux3725_BOOL);
constraint int_lin_eq([-1,1,1],[aux3726,2,s_00009],0);
constraint int_lt_reif(s_00020,aux3726,aux3727_BOOL);
constraint int_le_reif(s_00009, s_00020,aux3728_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux3724_BOOL,aux3725_BOOL,aux3727_BOOL,aux3728_BOOL],aux3729_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3730_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux3731_BOOL);
constraint int_lin_eq([-1,1,1],[aux3732,1,s_00010],0);
constraint int_lt_reif(s_00020,aux3732,aux3733_BOOL);
constraint int_le_reif(s_00010, s_00020,aux3734_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux3730_BOOL,aux3731_BOOL,aux3733_BOOL,aux3734_BOOL],aux3735_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux3736_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux3737_BOOL);
constraint int_lin_eq([-1,1,1],[aux3738,2,s_00011],0);
constraint int_lt_reif(s_00020,aux3738,aux3739_BOOL);
constraint int_le_reif(s_00011, s_00020,aux3740_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux3736_BOOL,aux3737_BOOL,aux3739_BOOL,aux3740_BOOL],aux3741_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux3742_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux3743_BOOL);
constraint int_lin_eq([-1,1,1],[aux3744,2,s_00012],0);
constraint int_lt_reif(s_00020,aux3744,aux3745_BOOL);
constraint int_le_reif(s_00012, s_00020,aux3746_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux3742_BOOL,aux3743_BOOL,aux3745_BOOL,aux3746_BOOL],aux3747_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux3748_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux3749_BOOL);
constraint int_lin_eq([-1,1,1],[aux3750,1,s_00013],0);
constraint int_lt_reif(s_00020,aux3750,aux3751_BOOL);
constraint int_le_reif(s_00013, s_00020,aux3752_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux3748_BOOL,aux3749_BOOL,aux3751_BOOL,aux3752_BOOL],aux3753_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux3754_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux3755_BOOL);
constraint int_lin_eq([-1,1,1],[aux3756,4,s_00014],0);
constraint int_lt_reif(s_00020,aux3756,aux3757_BOOL);
constraint int_le_reif(s_00014, s_00020,aux3758_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux3754_BOOL,aux3755_BOOL,aux3757_BOOL,aux3758_BOOL],aux3759_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux3760_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux3761_BOOL);
constraint int_lin_eq([-1,1,1],[aux3762,2,s_00015],0);
constraint int_lt_reif(s_00020,aux3762,aux3763_BOOL);
constraint int_le_reif(s_00015, s_00020,aux3764_BOOL);
constraint array_bool_and([w_00002_00015_BOOL,aux3760_BOOL,aux3761_BOOL,aux3763_BOOL,aux3764_BOOL],aux3765_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux3766_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux3767_BOOL);
constraint int_lin_eq([-1,1,1],[aux3768,3,s_00016],0);
constraint int_lt_reif(s_00020,aux3768,aux3769_BOOL);
constraint int_le_reif(s_00016, s_00020,aux3770_BOOL);
constraint array_bool_and([w_00002_00016_BOOL,aux3766_BOOL,aux3767_BOOL,aux3769_BOOL,aux3770_BOOL],aux3771_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux3772_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux3773_BOOL);
constraint int_lin_eq([-1,1,1],[aux3774,1,s_00017],0);
constraint int_lt_reif(s_00020,aux3774,aux3775_BOOL);
constraint int_le_reif(s_00017, s_00020,aux3776_BOOL);
constraint array_bool_and([w_00002_00017_BOOL,aux3772_BOOL,aux3773_BOOL,aux3775_BOOL,aux3776_BOOL],aux3777_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux3778_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux3779_BOOL);
constraint int_lin_eq([-1,1,1],[aux3780,3,s_00018],0);
constraint int_lt_reif(s_00020,aux3780,aux3781_BOOL);
constraint int_le_reif(s_00018, s_00020,aux3782_BOOL);
constraint array_bool_and([w_00002_00018_BOOL,aux3778_BOOL,aux3779_BOOL,aux3781_BOOL,aux3782_BOOL],aux3783_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3784_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux3785_BOOL);
constraint int_lin_eq([-1,1,1],[aux3786,2,s_00019],0);
constraint int_lt_reif(s_00020,aux3786,aux3787_BOOL);
constraint int_le_reif(s_00019, s_00020,aux3788_BOOL);
constraint array_bool_and([w_00002_00019_BOOL,aux3784_BOOL,aux3785_BOOL,aux3787_BOOL,aux3788_BOOL],aux3789_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux3675_INTEGER,aux3681_INTEGER,aux3687_INTEGER,aux3693_INTEGER,aux3699_INTEGER,aux3705_INTEGER,aux3711_INTEGER,aux3717_INTEGER,aux3723_INTEGER,aux3729_INTEGER,aux3735_INTEGER,aux3741_INTEGER,aux3747_INTEGER,aux3753_INTEGER,aux3759_INTEGER,aux3765_INTEGER,aux3771_INTEGER,aux3777_INTEGER,aux3783_INTEGER,aux3789_INTEGER,1],0,aux3790_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3791_BOOL);
constraint int_lin_eq([-1,1,1],[aux3792,2,s_00019],0);
constraint int_lt_reif(s_00019,aux3792,aux3793_BOOL);
constraint array_bool_and([w_00002_00019_BOOL,aux3791_BOOL,aux3793_BOOL],aux3794_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux3795_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3796_BOOL);
constraint int_lin_eq([-1,1,1],[aux3797,1,s_00001],0);
constraint int_lt_reif(s_00019,aux3797,aux3798_BOOL);
constraint int_le_reif(s_00001, s_00019,aux3799_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux3795_BOOL,aux3796_BOOL,aux3798_BOOL,aux3799_BOOL],aux3800_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux3801_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3802_BOOL);
constraint int_lin_eq([-1,1,1],[aux3803,2,s_00002],0);
constraint int_lt_reif(s_00019,aux3803,aux3804_BOOL);
constraint int_le_reif(s_00002, s_00019,aux3805_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux3801_BOOL,aux3802_BOOL,aux3804_BOOL,aux3805_BOOL],aux3806_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux3807_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3808_BOOL);
constraint int_lin_eq([-1,1,1],[aux3809,3,s_00003],0);
constraint int_lt_reif(s_00019,aux3809,aux3810_BOOL);
constraint int_le_reif(s_00003, s_00019,aux3811_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux3807_BOOL,aux3808_BOOL,aux3810_BOOL,aux3811_BOOL],aux3812_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux3813_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3814_BOOL);
constraint int_lin_eq([-1,1,1],[aux3815,2,s_00004],0);
constraint int_lt_reif(s_00019,aux3815,aux3816_BOOL);
constraint int_le_reif(s_00004, s_00019,aux3817_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux3813_BOOL,aux3814_BOOL,aux3816_BOOL,aux3817_BOOL],aux3818_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux3819_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3820_BOOL);
constraint int_lin_eq([-1,1,1],[aux3821,2,s_00005],0);
constraint int_lt_reif(s_00019,aux3821,aux3822_BOOL);
constraint int_le_reif(s_00005, s_00019,aux3823_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux3819_BOOL,aux3820_BOOL,aux3822_BOOL,aux3823_BOOL],aux3824_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux3825_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3826_BOOL);
constraint int_lin_eq([-1,1,1],[aux3827,3,s_00006],0);
constraint int_lt_reif(s_00019,aux3827,aux3828_BOOL);
constraint int_le_reif(s_00006, s_00019,aux3829_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux3825_BOOL,aux3826_BOOL,aux3828_BOOL,aux3829_BOOL],aux3830_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux3831_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3832_BOOL);
constraint int_lin_eq([-1,1,1],[aux3833,2,s_00007],0);
constraint int_lt_reif(s_00019,aux3833,aux3834_BOOL);
constraint int_le_reif(s_00007, s_00019,aux3835_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux3831_BOOL,aux3832_BOOL,aux3834_BOOL,aux3835_BOOL],aux3836_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux3837_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3838_BOOL);
constraint int_lin_eq([-1,1,1],[aux3839,1,s_00008],0);
constraint int_lt_reif(s_00019,aux3839,aux3840_BOOL);
constraint int_le_reif(s_00008, s_00019,aux3841_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux3837_BOOL,aux3838_BOOL,aux3840_BOOL,aux3841_BOOL],aux3842_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux3843_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3844_BOOL);
constraint int_lin_eq([-1,1,1],[aux3845,2,s_00009],0);
constraint int_lt_reif(s_00019,aux3845,aux3846_BOOL);
constraint int_le_reif(s_00009, s_00019,aux3847_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux3843_BOOL,aux3844_BOOL,aux3846_BOOL,aux3847_BOOL],aux3848_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3849_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3850_BOOL);
constraint int_lin_eq([-1,1,1],[aux3851,1,s_00010],0);
constraint int_lt_reif(s_00019,aux3851,aux3852_BOOL);
constraint int_le_reif(s_00010, s_00019,aux3853_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux3849_BOOL,aux3850_BOOL,aux3852_BOOL,aux3853_BOOL],aux3854_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux3855_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3856_BOOL);
constraint int_lin_eq([-1,1,1],[aux3857,2,s_00011],0);
constraint int_lt_reif(s_00019,aux3857,aux3858_BOOL);
constraint int_le_reif(s_00011, s_00019,aux3859_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux3855_BOOL,aux3856_BOOL,aux3858_BOOL,aux3859_BOOL],aux3860_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux3861_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3862_BOOL);
constraint int_lin_eq([-1,1,1],[aux3863,2,s_00012],0);
constraint int_lt_reif(s_00019,aux3863,aux3864_BOOL);
constraint int_le_reif(s_00012, s_00019,aux3865_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux3861_BOOL,aux3862_BOOL,aux3864_BOOL,aux3865_BOOL],aux3866_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux3867_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3868_BOOL);
constraint int_lin_eq([-1,1,1],[aux3869,1,s_00013],0);
constraint int_lt_reif(s_00019,aux3869,aux3870_BOOL);
constraint int_le_reif(s_00013, s_00019,aux3871_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux3867_BOOL,aux3868_BOOL,aux3870_BOOL,aux3871_BOOL],aux3872_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux3873_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3874_BOOL);
constraint int_lin_eq([-1,1,1],[aux3875,4,s_00014],0);
constraint int_lt_reif(s_00019,aux3875,aux3876_BOOL);
constraint int_le_reif(s_00014, s_00019,aux3877_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux3873_BOOL,aux3874_BOOL,aux3876_BOOL,aux3877_BOOL],aux3878_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux3879_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3880_BOOL);
constraint int_lin_eq([-1,1,1],[aux3881,2,s_00015],0);
constraint int_lt_reif(s_00019,aux3881,aux3882_BOOL);
constraint int_le_reif(s_00015, s_00019,aux3883_BOOL);
constraint array_bool_and([w_00002_00015_BOOL,aux3879_BOOL,aux3880_BOOL,aux3882_BOOL,aux3883_BOOL],aux3884_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux3885_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3886_BOOL);
constraint int_lin_eq([-1,1,1],[aux3887,3,s_00016],0);
constraint int_lt_reif(s_00019,aux3887,aux3888_BOOL);
constraint int_le_reif(s_00016, s_00019,aux3889_BOOL);
constraint array_bool_and([w_00002_00016_BOOL,aux3885_BOOL,aux3886_BOOL,aux3888_BOOL,aux3889_BOOL],aux3890_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux3891_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3892_BOOL);
constraint int_lin_eq([-1,1,1],[aux3893,1,s_00017],0);
constraint int_lt_reif(s_00019,aux3893,aux3894_BOOL);
constraint int_le_reif(s_00017, s_00019,aux3895_BOOL);
constraint array_bool_and([w_00002_00017_BOOL,aux3891_BOOL,aux3892_BOOL,aux3894_BOOL,aux3895_BOOL],aux3896_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux3897_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3898_BOOL);
constraint int_lin_eq([-1,1,1],[aux3899,3,s_00018],0);
constraint int_lt_reif(s_00019,aux3899,aux3900_BOOL);
constraint int_le_reif(s_00018, s_00019,aux3901_BOOL);
constraint array_bool_and([w_00002_00018_BOOL,aux3897_BOOL,aux3898_BOOL,aux3900_BOOL,aux3901_BOOL],aux3902_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux3903_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux3904_BOOL);
constraint int_lin_eq([-1,1,1],[aux3905,3,s_00020],0);
constraint int_lt_reif(s_00019,aux3905,aux3906_BOOL);
constraint int_le_reif(s_00020, s_00019,aux3907_BOOL);
constraint array_bool_and([w_00002_00020_BOOL,aux3903_BOOL,aux3904_BOOL,aux3906_BOOL,aux3907_BOOL],aux3908_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux3794_INTEGER,aux3800_INTEGER,aux3806_INTEGER,aux3812_INTEGER,aux3818_INTEGER,aux3824_INTEGER,aux3830_INTEGER,aux3836_INTEGER,aux3842_INTEGER,aux3848_INTEGER,aux3854_INTEGER,aux3860_INTEGER,aux3866_INTEGER,aux3872_INTEGER,aux3878_INTEGER,aux3884_INTEGER,aux3890_INTEGER,aux3896_INTEGER,aux3902_INTEGER,aux3908_INTEGER,1],0,aux3909_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux3910_BOOL);
constraint int_lin_eq([-1,1,1],[aux3911,3,s_00006],0);
constraint int_lt_reif(s_00006,aux3911,aux3912_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux3910_BOOL,aux3912_BOOL],aux3913_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux3914_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux3915_BOOL);
constraint int_lin_eq([-1,1,1],[aux3916,1,s_00001],0);
constraint int_lt_reif(s_00006,aux3916,aux3917_BOOL);
constraint int_le_reif(s_00001, s_00006,aux3918_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux3914_BOOL,aux3915_BOOL,aux3917_BOOL,aux3918_BOOL],aux3919_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux3920_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux3921_BOOL);
constraint int_lin_eq([-1,1,1],[aux3922,2,s_00002],0);
constraint int_lt_reif(s_00006,aux3922,aux3923_BOOL);
constraint int_le_reif(s_00002, s_00006,aux3924_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux3920_BOOL,aux3921_BOOL,aux3923_BOOL,aux3924_BOOL],aux3925_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux3926_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux3927_BOOL);
constraint int_lin_eq([-1,1,1],[aux3928,3,s_00003],0);
constraint int_lt_reif(s_00006,aux3928,aux3929_BOOL);
constraint int_le_reif(s_00003, s_00006,aux3930_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux3926_BOOL,aux3927_BOOL,aux3929_BOOL,aux3930_BOOL],aux3931_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux3932_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux3933_BOOL);
constraint int_lin_eq([-1,1,1],[aux3934,2,s_00004],0);
constraint int_lt_reif(s_00006,aux3934,aux3935_BOOL);
constraint int_le_reif(s_00004, s_00006,aux3936_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux3932_BOOL,aux3933_BOOL,aux3935_BOOL,aux3936_BOOL],aux3937_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux3938_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux3939_BOOL);
constraint int_lin_eq([-1,1,1],[aux3940,2,s_00005],0);
constraint int_lt_reif(s_00006,aux3940,aux3941_BOOL);
constraint int_le_reif(s_00005, s_00006,aux3942_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux3938_BOOL,aux3939_BOOL,aux3941_BOOL,aux3942_BOOL],aux3943_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux3944_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux3945_BOOL);
constraint int_lin_eq([-1,1,1],[aux3946,2,s_00007],0);
constraint int_lt_reif(s_00006,aux3946,aux3947_BOOL);
constraint int_le_reif(s_00007, s_00006,aux3948_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux3944_BOOL,aux3945_BOOL,aux3947_BOOL,aux3948_BOOL],aux3949_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux3950_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux3951_BOOL);
constraint int_lin_eq([-1,1,1],[aux3952,1,s_00008],0);
constraint int_lt_reif(s_00006,aux3952,aux3953_BOOL);
constraint int_le_reif(s_00008, s_00006,aux3954_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux3950_BOOL,aux3951_BOOL,aux3953_BOOL,aux3954_BOOL],aux3955_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux3956_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux3957_BOOL);
constraint int_lin_eq([-1,1,1],[aux3958,2,s_00009],0);
constraint int_lt_reif(s_00006,aux3958,aux3959_BOOL);
constraint int_le_reif(s_00009, s_00006,aux3960_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux3956_BOOL,aux3957_BOOL,aux3959_BOOL,aux3960_BOOL],aux3961_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux3962_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux3963_BOOL);
constraint int_lin_eq([-1,1,1],[aux3964,1,s_00010],0);
constraint int_lt_reif(s_00006,aux3964,aux3965_BOOL);
constraint int_le_reif(s_00010, s_00006,aux3966_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux3962_BOOL,aux3963_BOOL,aux3965_BOOL,aux3966_BOOL],aux3967_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux3968_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux3969_BOOL);
constraint int_lin_eq([-1,1,1],[aux3970,2,s_00011],0);
constraint int_lt_reif(s_00006,aux3970,aux3971_BOOL);
constraint int_le_reif(s_00011, s_00006,aux3972_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux3968_BOOL,aux3969_BOOL,aux3971_BOOL,aux3972_BOOL],aux3973_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux3974_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux3975_BOOL);
constraint int_lin_eq([-1,1,1],[aux3976,2,s_00012],0);
constraint int_lt_reif(s_00006,aux3976,aux3977_BOOL);
constraint int_le_reif(s_00012, s_00006,aux3978_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux3974_BOOL,aux3975_BOOL,aux3977_BOOL,aux3978_BOOL],aux3979_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux3980_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux3981_BOOL);
constraint int_lin_eq([-1,1,1],[aux3982,1,s_00013],0);
constraint int_lt_reif(s_00006,aux3982,aux3983_BOOL);
constraint int_le_reif(s_00013, s_00006,aux3984_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux3980_BOOL,aux3981_BOOL,aux3983_BOOL,aux3984_BOOL],aux3985_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux3986_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux3987_BOOL);
constraint int_lin_eq([-1,1,1],[aux3988,4,s_00014],0);
constraint int_lt_reif(s_00006,aux3988,aux3989_BOOL);
constraint int_le_reif(s_00014, s_00006,aux3990_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux3986_BOOL,aux3987_BOOL,aux3989_BOOL,aux3990_BOOL],aux3991_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux3992_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux3993_BOOL);
constraint int_lin_eq([-1,1,1],[aux3994,2,s_00015],0);
constraint int_lt_reif(s_00006,aux3994,aux3995_BOOL);
constraint int_le_reif(s_00015, s_00006,aux3996_BOOL);
constraint array_bool_and([w_00002_00015_BOOL,aux3992_BOOL,aux3993_BOOL,aux3995_BOOL,aux3996_BOOL],aux3997_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux3998_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux3999_BOOL);
constraint int_lin_eq([-1,1,1],[aux4000,3,s_00016],0);
constraint int_lt_reif(s_00006,aux4000,aux4001_BOOL);
constraint int_le_reif(s_00016, s_00006,aux4002_BOOL);
constraint array_bool_and([w_00002_00016_BOOL,aux3998_BOOL,aux3999_BOOL,aux4001_BOOL,aux4002_BOOL],aux4003_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux4004_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux4005_BOOL);
constraint int_lin_eq([-1,1,1],[aux4006,1,s_00017],0);
constraint int_lt_reif(s_00006,aux4006,aux4007_BOOL);
constraint int_le_reif(s_00017, s_00006,aux4008_BOOL);
constraint array_bool_and([w_00002_00017_BOOL,aux4004_BOOL,aux4005_BOOL,aux4007_BOOL,aux4008_BOOL],aux4009_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux4010_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux4011_BOOL);
constraint int_lin_eq([-1,1,1],[aux4012,3,s_00018],0);
constraint int_lt_reif(s_00006,aux4012,aux4013_BOOL);
constraint int_le_reif(s_00018, s_00006,aux4014_BOOL);
constraint array_bool_and([w_00002_00018_BOOL,aux4010_BOOL,aux4011_BOOL,aux4013_BOOL,aux4014_BOOL],aux4015_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux4016_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux4017_BOOL);
constraint int_lin_eq([-1,1,1],[aux4018,2,s_00019],0);
constraint int_lt_reif(s_00006,aux4018,aux4019_BOOL);
constraint int_le_reif(s_00019, s_00006,aux4020_BOOL);
constraint array_bool_and([w_00002_00019_BOOL,aux4016_BOOL,aux4017_BOOL,aux4019_BOOL,aux4020_BOOL],aux4021_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux4022_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux4023_BOOL);
constraint int_lin_eq([-1,1,1],[aux4024,3,s_00020],0);
constraint int_lt_reif(s_00006,aux4024,aux4025_BOOL);
constraint int_le_reif(s_00020, s_00006,aux4026_BOOL);
constraint array_bool_and([w_00002_00020_BOOL,aux4022_BOOL,aux4023_BOOL,aux4025_BOOL,aux4026_BOOL],aux4027_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux3913_INTEGER,aux3919_INTEGER,aux3925_INTEGER,aux3931_INTEGER,aux3937_INTEGER,aux3943_INTEGER,aux3949_INTEGER,aux3955_INTEGER,aux3961_INTEGER,aux3967_INTEGER,aux3973_INTEGER,aux3979_INTEGER,aux3985_INTEGER,aux3991_INTEGER,aux3997_INTEGER,aux4003_INTEGER,aux4009_INTEGER,aux4015_INTEGER,aux4021_INTEGER,aux4027_INTEGER,1],0,aux4028_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4029_BOOL);
constraint int_lin_eq([-1,1,1],[aux4030,4,s_00014],0);
constraint int_lt_reif(s_00014,aux4030,aux4031_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux4029_BOOL,aux4031_BOOL],aux4032_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux4033_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4034_BOOL);
constraint int_lin_eq([-1,1,1],[aux4035,1,s_00001],0);
constraint int_lt_reif(s_00014,aux4035,aux4036_BOOL);
constraint int_le_reif(s_00001, s_00014,aux4037_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux4033_BOOL,aux4034_BOOL,aux4036_BOOL,aux4037_BOOL],aux4038_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux4039_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4040_BOOL);
constraint int_lin_eq([-1,1,1],[aux4041,2,s_00002],0);
constraint int_lt_reif(s_00014,aux4041,aux4042_BOOL);
constraint int_le_reif(s_00002, s_00014,aux4043_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux4039_BOOL,aux4040_BOOL,aux4042_BOOL,aux4043_BOOL],aux4044_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux4045_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4046_BOOL);
constraint int_lin_eq([-1,1,1],[aux4047,3,s_00003],0);
constraint int_lt_reif(s_00014,aux4047,aux4048_BOOL);
constraint int_le_reif(s_00003, s_00014,aux4049_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux4045_BOOL,aux4046_BOOL,aux4048_BOOL,aux4049_BOOL],aux4050_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux4051_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4052_BOOL);
constraint int_lin_eq([-1,1,1],[aux4053,2,s_00004],0);
constraint int_lt_reif(s_00014,aux4053,aux4054_BOOL);
constraint int_le_reif(s_00004, s_00014,aux4055_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux4051_BOOL,aux4052_BOOL,aux4054_BOOL,aux4055_BOOL],aux4056_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux4057_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4058_BOOL);
constraint int_lin_eq([-1,1,1],[aux4059,2,s_00005],0);
constraint int_lt_reif(s_00014,aux4059,aux4060_BOOL);
constraint int_le_reif(s_00005, s_00014,aux4061_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux4057_BOOL,aux4058_BOOL,aux4060_BOOL,aux4061_BOOL],aux4062_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux4063_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4064_BOOL);
constraint int_lin_eq([-1,1,1],[aux4065,3,s_00006],0);
constraint int_lt_reif(s_00014,aux4065,aux4066_BOOL);
constraint int_le_reif(s_00006, s_00014,aux4067_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux4063_BOOL,aux4064_BOOL,aux4066_BOOL,aux4067_BOOL],aux4068_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux4069_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4070_BOOL);
constraint int_lin_eq([-1,1,1],[aux4071,2,s_00007],0);
constraint int_lt_reif(s_00014,aux4071,aux4072_BOOL);
constraint int_le_reif(s_00007, s_00014,aux4073_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux4069_BOOL,aux4070_BOOL,aux4072_BOOL,aux4073_BOOL],aux4074_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux4075_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4076_BOOL);
constraint int_lin_eq([-1,1,1],[aux4077,1,s_00008],0);
constraint int_lt_reif(s_00014,aux4077,aux4078_BOOL);
constraint int_le_reif(s_00008, s_00014,aux4079_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux4075_BOOL,aux4076_BOOL,aux4078_BOOL,aux4079_BOOL],aux4080_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux4081_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4082_BOOL);
constraint int_lin_eq([-1,1,1],[aux4083,2,s_00009],0);
constraint int_lt_reif(s_00014,aux4083,aux4084_BOOL);
constraint int_le_reif(s_00009, s_00014,aux4085_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux4081_BOOL,aux4082_BOOL,aux4084_BOOL,aux4085_BOOL],aux4086_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux4087_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4088_BOOL);
constraint int_lin_eq([-1,1,1],[aux4089,1,s_00010],0);
constraint int_lt_reif(s_00014,aux4089,aux4090_BOOL);
constraint int_le_reif(s_00010, s_00014,aux4091_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux4087_BOOL,aux4088_BOOL,aux4090_BOOL,aux4091_BOOL],aux4092_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux4093_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4094_BOOL);
constraint int_lin_eq([-1,1,1],[aux4095,2,s_00011],0);
constraint int_lt_reif(s_00014,aux4095,aux4096_BOOL);
constraint int_le_reif(s_00011, s_00014,aux4097_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux4093_BOOL,aux4094_BOOL,aux4096_BOOL,aux4097_BOOL],aux4098_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux4099_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4100_BOOL);
constraint int_lin_eq([-1,1,1],[aux4101,2,s_00012],0);
constraint int_lt_reif(s_00014,aux4101,aux4102_BOOL);
constraint int_le_reif(s_00012, s_00014,aux4103_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux4099_BOOL,aux4100_BOOL,aux4102_BOOL,aux4103_BOOL],aux4104_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux4105_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4106_BOOL);
constraint int_lin_eq([-1,1,1],[aux4107,1,s_00013],0);
constraint int_lt_reif(s_00014,aux4107,aux4108_BOOL);
constraint int_le_reif(s_00013, s_00014,aux4109_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux4105_BOOL,aux4106_BOOL,aux4108_BOOL,aux4109_BOOL],aux4110_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4111_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4112_BOOL);
constraint int_lin_eq([-1,1,1],[aux4113,2,s_00015],0);
constraint int_lt_reif(s_00014,aux4113,aux4114_BOOL);
constraint int_le_reif(s_00015, s_00014,aux4115_BOOL);
constraint array_bool_and([w_00002_00015_BOOL,aux4111_BOOL,aux4112_BOOL,aux4114_BOOL,aux4115_BOOL],aux4116_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4117_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux4118_BOOL);
constraint int_lin_eq([-1,1,1],[aux4119,3,s_00016],0);
constraint int_lt_reif(s_00014,aux4119,aux4120_BOOL);
constraint int_le_reif(s_00016, s_00014,aux4121_BOOL);
constraint array_bool_and([w_00002_00016_BOOL,aux4117_BOOL,aux4118_BOOL,aux4120_BOOL,aux4121_BOOL],aux4122_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4123_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux4124_BOOL);
constraint int_lin_eq([-1,1,1],[aux4125,1,s_00017],0);
constraint int_lt_reif(s_00014,aux4125,aux4126_BOOL);
constraint int_le_reif(s_00017, s_00014,aux4127_BOOL);
constraint array_bool_and([w_00002_00017_BOOL,aux4123_BOOL,aux4124_BOOL,aux4126_BOOL,aux4127_BOOL],aux4128_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4129_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux4130_BOOL);
constraint int_lin_eq([-1,1,1],[aux4131,3,s_00018],0);
constraint int_lt_reif(s_00014,aux4131,aux4132_BOOL);
constraint int_le_reif(s_00018, s_00014,aux4133_BOOL);
constraint array_bool_and([w_00002_00018_BOOL,aux4129_BOOL,aux4130_BOOL,aux4132_BOOL,aux4133_BOOL],aux4134_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4135_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux4136_BOOL);
constraint int_lin_eq([-1,1,1],[aux4137,2,s_00019],0);
constraint int_lt_reif(s_00014,aux4137,aux4138_BOOL);
constraint int_le_reif(s_00019, s_00014,aux4139_BOOL);
constraint array_bool_and([w_00002_00019_BOOL,aux4135_BOOL,aux4136_BOOL,aux4138_BOOL,aux4139_BOOL],aux4140_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4141_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux4142_BOOL);
constraint int_lin_eq([-1,1,1],[aux4143,3,s_00020],0);
constraint int_lt_reif(s_00014,aux4143,aux4144_BOOL);
constraint int_le_reif(s_00020, s_00014,aux4145_BOOL);
constraint array_bool_and([w_00002_00020_BOOL,aux4141_BOOL,aux4142_BOOL,aux4144_BOOL,aux4145_BOOL],aux4146_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux4032_INTEGER,aux4038_INTEGER,aux4044_INTEGER,aux4050_INTEGER,aux4056_INTEGER,aux4062_INTEGER,aux4068_INTEGER,aux4074_INTEGER,aux4080_INTEGER,aux4086_INTEGER,aux4092_INTEGER,aux4098_INTEGER,aux4104_INTEGER,aux4110_INTEGER,aux4116_INTEGER,aux4122_INTEGER,aux4128_INTEGER,aux4134_INTEGER,aux4140_INTEGER,aux4146_INTEGER,1],0,aux4147_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux4148_BOOL);
constraint int_lin_eq([-1,1,1],[aux4149,3,s_00003],0);
constraint int_lt_reif(s_00003,aux4149,aux4150_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux4148_BOOL,aux4150_BOOL],aux4151_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux4152_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux4153_BOOL);
constraint int_lin_eq([-1,1,1],[aux4154,1,s_00001],0);
constraint int_lt_reif(s_00003,aux4154,aux4155_BOOL);
constraint int_le_reif(s_00001, s_00003,aux4156_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux4152_BOOL,aux4153_BOOL,aux4155_BOOL,aux4156_BOOL],aux4157_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux4158_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux4159_BOOL);
constraint int_lin_eq([-1,1,1],[aux4160,2,s_00002],0);
constraint int_lt_reif(s_00003,aux4160,aux4161_BOOL);
constraint int_le_reif(s_00002, s_00003,aux4162_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux4158_BOOL,aux4159_BOOL,aux4161_BOOL,aux4162_BOOL],aux4163_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux4164_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux4165_BOOL);
constraint int_lin_eq([-1,1,1],[aux4166,2,s_00004],0);
constraint int_lt_reif(s_00003,aux4166,aux4167_BOOL);
constraint int_le_reif(s_00004, s_00003,aux4168_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux4164_BOOL,aux4165_BOOL,aux4167_BOOL,aux4168_BOOL],aux4169_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux4170_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux4171_BOOL);
constraint int_lin_eq([-1,1,1],[aux4172,2,s_00005],0);
constraint int_lt_reif(s_00003,aux4172,aux4173_BOOL);
constraint int_le_reif(s_00005, s_00003,aux4174_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux4170_BOOL,aux4171_BOOL,aux4173_BOOL,aux4174_BOOL],aux4175_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux4176_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux4177_BOOL);
constraint int_lin_eq([-1,1,1],[aux4178,3,s_00006],0);
constraint int_lt_reif(s_00003,aux4178,aux4179_BOOL);
constraint int_le_reif(s_00006, s_00003,aux4180_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux4176_BOOL,aux4177_BOOL,aux4179_BOOL,aux4180_BOOL],aux4181_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux4182_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux4183_BOOL);
constraint int_lin_eq([-1,1,1],[aux4184,2,s_00007],0);
constraint int_lt_reif(s_00003,aux4184,aux4185_BOOL);
constraint int_le_reif(s_00007, s_00003,aux4186_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux4182_BOOL,aux4183_BOOL,aux4185_BOOL,aux4186_BOOL],aux4187_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux4188_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux4189_BOOL);
constraint int_lin_eq([-1,1,1],[aux4190,1,s_00008],0);
constraint int_lt_reif(s_00003,aux4190,aux4191_BOOL);
constraint int_le_reif(s_00008, s_00003,aux4192_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux4188_BOOL,aux4189_BOOL,aux4191_BOOL,aux4192_BOOL],aux4193_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux4194_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux4195_BOOL);
constraint int_lin_eq([-1,1,1],[aux4196,2,s_00009],0);
constraint int_lt_reif(s_00003,aux4196,aux4197_BOOL);
constraint int_le_reif(s_00009, s_00003,aux4198_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux4194_BOOL,aux4195_BOOL,aux4197_BOOL,aux4198_BOOL],aux4199_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux4200_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux4201_BOOL);
constraint int_lin_eq([-1,1,1],[aux4202,1,s_00010],0);
constraint int_lt_reif(s_00003,aux4202,aux4203_BOOL);
constraint int_le_reif(s_00010, s_00003,aux4204_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux4200_BOOL,aux4201_BOOL,aux4203_BOOL,aux4204_BOOL],aux4205_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux4206_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux4207_BOOL);
constraint int_lin_eq([-1,1,1],[aux4208,2,s_00011],0);
constraint int_lt_reif(s_00003,aux4208,aux4209_BOOL);
constraint int_le_reif(s_00011, s_00003,aux4210_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux4206_BOOL,aux4207_BOOL,aux4209_BOOL,aux4210_BOOL],aux4211_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux4212_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux4213_BOOL);
constraint int_lin_eq([-1,1,1],[aux4214,2,s_00012],0);
constraint int_lt_reif(s_00003,aux4214,aux4215_BOOL);
constraint int_le_reif(s_00012, s_00003,aux4216_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux4212_BOOL,aux4213_BOOL,aux4215_BOOL,aux4216_BOOL],aux4217_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux4218_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux4219_BOOL);
constraint int_lin_eq([-1,1,1],[aux4220,1,s_00013],0);
constraint int_lt_reif(s_00003,aux4220,aux4221_BOOL);
constraint int_le_reif(s_00013, s_00003,aux4222_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux4218_BOOL,aux4219_BOOL,aux4221_BOOL,aux4222_BOOL],aux4223_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux4224_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4225_BOOL);
constraint int_lin_eq([-1,1,1],[aux4226,4,s_00014],0);
constraint int_lt_reif(s_00003,aux4226,aux4227_BOOL);
constraint int_le_reif(s_00014, s_00003,aux4228_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux4224_BOOL,aux4225_BOOL,aux4227_BOOL,aux4228_BOOL],aux4229_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux4230_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4231_BOOL);
constraint int_lin_eq([-1,1,1],[aux4232,2,s_00015],0);
constraint int_lt_reif(s_00003,aux4232,aux4233_BOOL);
constraint int_le_reif(s_00015, s_00003,aux4234_BOOL);
constraint array_bool_and([w_00002_00015_BOOL,aux4230_BOOL,aux4231_BOOL,aux4233_BOOL,aux4234_BOOL],aux4235_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux4236_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux4237_BOOL);
constraint int_lin_eq([-1,1,1],[aux4238,3,s_00016],0);
constraint int_lt_reif(s_00003,aux4238,aux4239_BOOL);
constraint int_le_reif(s_00016, s_00003,aux4240_BOOL);
constraint array_bool_and([w_00002_00016_BOOL,aux4236_BOOL,aux4237_BOOL,aux4239_BOOL,aux4240_BOOL],aux4241_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux4242_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux4243_BOOL);
constraint int_lin_eq([-1,1,1],[aux4244,1,s_00017],0);
constraint int_lt_reif(s_00003,aux4244,aux4245_BOOL);
constraint int_le_reif(s_00017, s_00003,aux4246_BOOL);
constraint array_bool_and([w_00002_00017_BOOL,aux4242_BOOL,aux4243_BOOL,aux4245_BOOL,aux4246_BOOL],aux4247_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux4248_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux4249_BOOL);
constraint int_lin_eq([-1,1,1],[aux4250,3,s_00018],0);
constraint int_lt_reif(s_00003,aux4250,aux4251_BOOL);
constraint int_le_reif(s_00018, s_00003,aux4252_BOOL);
constraint array_bool_and([w_00002_00018_BOOL,aux4248_BOOL,aux4249_BOOL,aux4251_BOOL,aux4252_BOOL],aux4253_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux4254_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux4255_BOOL);
constraint int_lin_eq([-1,1,1],[aux4256,2,s_00019],0);
constraint int_lt_reif(s_00003,aux4256,aux4257_BOOL);
constraint int_le_reif(s_00019, s_00003,aux4258_BOOL);
constraint array_bool_and([w_00002_00019_BOOL,aux4254_BOOL,aux4255_BOOL,aux4257_BOOL,aux4258_BOOL],aux4259_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux4260_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux4261_BOOL);
constraint int_lin_eq([-1,1,1],[aux4262,3,s_00020],0);
constraint int_lt_reif(s_00003,aux4262,aux4263_BOOL);
constraint int_le_reif(s_00020, s_00003,aux4264_BOOL);
constraint array_bool_and([w_00002_00020_BOOL,aux4260_BOOL,aux4261_BOOL,aux4263_BOOL,aux4264_BOOL],aux4265_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux4151_INTEGER,aux4157_INTEGER,aux4163_INTEGER,aux4169_INTEGER,aux4175_INTEGER,aux4181_INTEGER,aux4187_INTEGER,aux4193_INTEGER,aux4199_INTEGER,aux4205_INTEGER,aux4211_INTEGER,aux4217_INTEGER,aux4223_INTEGER,aux4229_INTEGER,aux4235_INTEGER,aux4241_INTEGER,aux4247_INTEGER,aux4253_INTEGER,aux4259_INTEGER,aux4265_INTEGER,1],0,aux4266_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux4267_BOOL);
constraint int_lin_eq([-1,1,1],[aux4268,1,s_00001],0);
constraint int_lt_reif(s_00001,aux4268,aux4269_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux4267_BOOL,aux4269_BOOL],aux4270_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux4271_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux4272_BOOL);
constraint int_lin_eq([-1,1,1],[aux4273,2,s_00002],0);
constraint int_lt_reif(s_00001,aux4273,aux4274_BOOL);
constraint int_le_reif(s_00002, s_00001,aux4275_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux4271_BOOL,aux4272_BOOL,aux4274_BOOL,aux4275_BOOL],aux4276_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux4277_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux4278_BOOL);
constraint int_lin_eq([-1,1,1],[aux4279,3,s_00003],0);
constraint int_lt_reif(s_00001,aux4279,aux4280_BOOL);
constraint int_le_reif(s_00003, s_00001,aux4281_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux4277_BOOL,aux4278_BOOL,aux4280_BOOL,aux4281_BOOL],aux4282_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux4283_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux4284_BOOL);
constraint int_lin_eq([-1,1,1],[aux4285,2,s_00004],0);
constraint int_lt_reif(s_00001,aux4285,aux4286_BOOL);
constraint int_le_reif(s_00004, s_00001,aux4287_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux4283_BOOL,aux4284_BOOL,aux4286_BOOL,aux4287_BOOL],aux4288_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux4289_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux4290_BOOL);
constraint int_lin_eq([-1,1,1],[aux4291,2,s_00005],0);
constraint int_lt_reif(s_00001,aux4291,aux4292_BOOL);
constraint int_le_reif(s_00005, s_00001,aux4293_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux4289_BOOL,aux4290_BOOL,aux4292_BOOL,aux4293_BOOL],aux4294_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux4295_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux4296_BOOL);
constraint int_lin_eq([-1,1,1],[aux4297,3,s_00006],0);
constraint int_lt_reif(s_00001,aux4297,aux4298_BOOL);
constraint int_le_reif(s_00006, s_00001,aux4299_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux4295_BOOL,aux4296_BOOL,aux4298_BOOL,aux4299_BOOL],aux4300_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux4301_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux4302_BOOL);
constraint int_lin_eq([-1,1,1],[aux4303,2,s_00007],0);
constraint int_lt_reif(s_00001,aux4303,aux4304_BOOL);
constraint int_le_reif(s_00007, s_00001,aux4305_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux4301_BOOL,aux4302_BOOL,aux4304_BOOL,aux4305_BOOL],aux4306_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux4307_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux4308_BOOL);
constraint int_lin_eq([-1,1,1],[aux4309,1,s_00008],0);
constraint int_lt_reif(s_00001,aux4309,aux4310_BOOL);
constraint int_le_reif(s_00008, s_00001,aux4311_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux4307_BOOL,aux4308_BOOL,aux4310_BOOL,aux4311_BOOL],aux4312_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux4313_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux4314_BOOL);
constraint int_lin_eq([-1,1,1],[aux4315,2,s_00009],0);
constraint int_lt_reif(s_00001,aux4315,aux4316_BOOL);
constraint int_le_reif(s_00009, s_00001,aux4317_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux4313_BOOL,aux4314_BOOL,aux4316_BOOL,aux4317_BOOL],aux4318_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux4319_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux4320_BOOL);
constraint int_lin_eq([-1,1,1],[aux4321,1,s_00010],0);
constraint int_lt_reif(s_00001,aux4321,aux4322_BOOL);
constraint int_le_reif(s_00010, s_00001,aux4323_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux4319_BOOL,aux4320_BOOL,aux4322_BOOL,aux4323_BOOL],aux4324_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux4325_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux4326_BOOL);
constraint int_lin_eq([-1,1,1],[aux4327,2,s_00011],0);
constraint int_lt_reif(s_00001,aux4327,aux4328_BOOL);
constraint int_le_reif(s_00011, s_00001,aux4329_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux4325_BOOL,aux4326_BOOL,aux4328_BOOL,aux4329_BOOL],aux4330_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux4331_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux4332_BOOL);
constraint int_lin_eq([-1,1,1],[aux4333,2,s_00012],0);
constraint int_lt_reif(s_00001,aux4333,aux4334_BOOL);
constraint int_le_reif(s_00012, s_00001,aux4335_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux4331_BOOL,aux4332_BOOL,aux4334_BOOL,aux4335_BOOL],aux4336_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux4337_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux4338_BOOL);
constraint int_lin_eq([-1,1,1],[aux4339,1,s_00013],0);
constraint int_lt_reif(s_00001,aux4339,aux4340_BOOL);
constraint int_le_reif(s_00013, s_00001,aux4341_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux4337_BOOL,aux4338_BOOL,aux4340_BOOL,aux4341_BOOL],aux4342_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux4343_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4344_BOOL);
constraint int_lin_eq([-1,1,1],[aux4345,4,s_00014],0);
constraint int_lt_reif(s_00001,aux4345,aux4346_BOOL);
constraint int_le_reif(s_00014, s_00001,aux4347_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux4343_BOOL,aux4344_BOOL,aux4346_BOOL,aux4347_BOOL],aux4348_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux4349_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4350_BOOL);
constraint int_lin_eq([-1,1,1],[aux4351,2,s_00015],0);
constraint int_lt_reif(s_00001,aux4351,aux4352_BOOL);
constraint int_le_reif(s_00015, s_00001,aux4353_BOOL);
constraint array_bool_and([w_00002_00015_BOOL,aux4349_BOOL,aux4350_BOOL,aux4352_BOOL,aux4353_BOOL],aux4354_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux4355_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux4356_BOOL);
constraint int_lin_eq([-1,1,1],[aux4357,3,s_00016],0);
constraint int_lt_reif(s_00001,aux4357,aux4358_BOOL);
constraint int_le_reif(s_00016, s_00001,aux4359_BOOL);
constraint array_bool_and([w_00002_00016_BOOL,aux4355_BOOL,aux4356_BOOL,aux4358_BOOL,aux4359_BOOL],aux4360_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux4361_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux4362_BOOL);
constraint int_lin_eq([-1,1,1],[aux4363,1,s_00017],0);
constraint int_lt_reif(s_00001,aux4363,aux4364_BOOL);
constraint int_le_reif(s_00017, s_00001,aux4365_BOOL);
constraint array_bool_and([w_00002_00017_BOOL,aux4361_BOOL,aux4362_BOOL,aux4364_BOOL,aux4365_BOOL],aux4366_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux4367_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux4368_BOOL);
constraint int_lin_eq([-1,1,1],[aux4369,3,s_00018],0);
constraint int_lt_reif(s_00001,aux4369,aux4370_BOOL);
constraint int_le_reif(s_00018, s_00001,aux4371_BOOL);
constraint array_bool_and([w_00002_00018_BOOL,aux4367_BOOL,aux4368_BOOL,aux4370_BOOL,aux4371_BOOL],aux4372_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux4373_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux4374_BOOL);
constraint int_lin_eq([-1,1,1],[aux4375,2,s_00019],0);
constraint int_lt_reif(s_00001,aux4375,aux4376_BOOL);
constraint int_le_reif(s_00019, s_00001,aux4377_BOOL);
constraint array_bool_and([w_00002_00019_BOOL,aux4373_BOOL,aux4374_BOOL,aux4376_BOOL,aux4377_BOOL],aux4378_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux4379_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux4380_BOOL);
constraint int_lin_eq([-1,1,1],[aux4381,3,s_00020],0);
constraint int_lt_reif(s_00001,aux4381,aux4382_BOOL);
constraint int_le_reif(s_00020, s_00001,aux4383_BOOL);
constraint array_bool_and([w_00002_00020_BOOL,aux4379_BOOL,aux4380_BOOL,aux4382_BOOL,aux4383_BOOL],aux4384_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux4270_INTEGER,aux4276_INTEGER,aux4282_INTEGER,aux4288_INTEGER,aux4294_INTEGER,aux4300_INTEGER,aux4306_INTEGER,aux4312_INTEGER,aux4318_INTEGER,aux4324_INTEGER,aux4330_INTEGER,aux4336_INTEGER,aux4342_INTEGER,aux4348_INTEGER,aux4354_INTEGER,aux4360_INTEGER,aux4366_INTEGER,aux4372_INTEGER,aux4378_INTEGER,aux4384_INTEGER,1],0,aux4385_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4386_BOOL);
constraint int_lin_eq([-1,1,1],[aux4387,2,s_00015],0);
constraint int_lt_reif(s_00015,aux4387,aux4388_BOOL);
constraint array_bool_and([w_00002_00015_BOOL,aux4386_BOOL,aux4388_BOOL],aux4389_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux4390_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4391_BOOL);
constraint int_lin_eq([-1,1,1],[aux4392,1,s_00001],0);
constraint int_lt_reif(s_00015,aux4392,aux4393_BOOL);
constraint int_le_reif(s_00001, s_00015,aux4394_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux4390_BOOL,aux4391_BOOL,aux4393_BOOL,aux4394_BOOL],aux4395_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux4396_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4397_BOOL);
constraint int_lin_eq([-1,1,1],[aux4398,2,s_00002],0);
constraint int_lt_reif(s_00015,aux4398,aux4399_BOOL);
constraint int_le_reif(s_00002, s_00015,aux4400_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux4396_BOOL,aux4397_BOOL,aux4399_BOOL,aux4400_BOOL],aux4401_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux4402_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4403_BOOL);
constraint int_lin_eq([-1,1,1],[aux4404,3,s_00003],0);
constraint int_lt_reif(s_00015,aux4404,aux4405_BOOL);
constraint int_le_reif(s_00003, s_00015,aux4406_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux4402_BOOL,aux4403_BOOL,aux4405_BOOL,aux4406_BOOL],aux4407_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux4408_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4409_BOOL);
constraint int_lin_eq([-1,1,1],[aux4410,2,s_00004],0);
constraint int_lt_reif(s_00015,aux4410,aux4411_BOOL);
constraint int_le_reif(s_00004, s_00015,aux4412_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux4408_BOOL,aux4409_BOOL,aux4411_BOOL,aux4412_BOOL],aux4413_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux4414_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4415_BOOL);
constraint int_lin_eq([-1,1,1],[aux4416,2,s_00005],0);
constraint int_lt_reif(s_00015,aux4416,aux4417_BOOL);
constraint int_le_reif(s_00005, s_00015,aux4418_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux4414_BOOL,aux4415_BOOL,aux4417_BOOL,aux4418_BOOL],aux4419_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux4420_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4421_BOOL);
constraint int_lin_eq([-1,1,1],[aux4422,3,s_00006],0);
constraint int_lt_reif(s_00015,aux4422,aux4423_BOOL);
constraint int_le_reif(s_00006, s_00015,aux4424_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux4420_BOOL,aux4421_BOOL,aux4423_BOOL,aux4424_BOOL],aux4425_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux4426_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4427_BOOL);
constraint int_lin_eq([-1,1,1],[aux4428,2,s_00007],0);
constraint int_lt_reif(s_00015,aux4428,aux4429_BOOL);
constraint int_le_reif(s_00007, s_00015,aux4430_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux4426_BOOL,aux4427_BOOL,aux4429_BOOL,aux4430_BOOL],aux4431_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux4432_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4433_BOOL);
constraint int_lin_eq([-1,1,1],[aux4434,1,s_00008],0);
constraint int_lt_reif(s_00015,aux4434,aux4435_BOOL);
constraint int_le_reif(s_00008, s_00015,aux4436_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux4432_BOOL,aux4433_BOOL,aux4435_BOOL,aux4436_BOOL],aux4437_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux4438_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4439_BOOL);
constraint int_lin_eq([-1,1,1],[aux4440,2,s_00009],0);
constraint int_lt_reif(s_00015,aux4440,aux4441_BOOL);
constraint int_le_reif(s_00009, s_00015,aux4442_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux4438_BOOL,aux4439_BOOL,aux4441_BOOL,aux4442_BOOL],aux4443_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux4444_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4445_BOOL);
constraint int_lin_eq([-1,1,1],[aux4446,1,s_00010],0);
constraint int_lt_reif(s_00015,aux4446,aux4447_BOOL);
constraint int_le_reif(s_00010, s_00015,aux4448_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux4444_BOOL,aux4445_BOOL,aux4447_BOOL,aux4448_BOOL],aux4449_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux4450_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4451_BOOL);
constraint int_lin_eq([-1,1,1],[aux4452,2,s_00011],0);
constraint int_lt_reif(s_00015,aux4452,aux4453_BOOL);
constraint int_le_reif(s_00011, s_00015,aux4454_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux4450_BOOL,aux4451_BOOL,aux4453_BOOL,aux4454_BOOL],aux4455_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux4456_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4457_BOOL);
constraint int_lin_eq([-1,1,1],[aux4458,2,s_00012],0);
constraint int_lt_reif(s_00015,aux4458,aux4459_BOOL);
constraint int_le_reif(s_00012, s_00015,aux4460_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux4456_BOOL,aux4457_BOOL,aux4459_BOOL,aux4460_BOOL],aux4461_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux4462_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4463_BOOL);
constraint int_lin_eq([-1,1,1],[aux4464,1,s_00013],0);
constraint int_lt_reif(s_00015,aux4464,aux4465_BOOL);
constraint int_le_reif(s_00013, s_00015,aux4466_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux4462_BOOL,aux4463_BOOL,aux4465_BOOL,aux4466_BOOL],aux4467_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4468_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4469_BOOL);
constraint int_lin_eq([-1,1,1],[aux4470,4,s_00014],0);
constraint int_lt_reif(s_00015,aux4470,aux4471_BOOL);
constraint int_le_reif(s_00014, s_00015,aux4472_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux4468_BOOL,aux4469_BOOL,aux4471_BOOL,aux4472_BOOL],aux4473_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4474_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux4475_BOOL);
constraint int_lin_eq([-1,1,1],[aux4476,3,s_00016],0);
constraint int_lt_reif(s_00015,aux4476,aux4477_BOOL);
constraint int_le_reif(s_00016, s_00015,aux4478_BOOL);
constraint array_bool_and([w_00002_00016_BOOL,aux4474_BOOL,aux4475_BOOL,aux4477_BOOL,aux4478_BOOL],aux4479_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4480_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux4481_BOOL);
constraint int_lin_eq([-1,1,1],[aux4482,1,s_00017],0);
constraint int_lt_reif(s_00015,aux4482,aux4483_BOOL);
constraint int_le_reif(s_00017, s_00015,aux4484_BOOL);
constraint array_bool_and([w_00002_00017_BOOL,aux4480_BOOL,aux4481_BOOL,aux4483_BOOL,aux4484_BOOL],aux4485_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4486_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux4487_BOOL);
constraint int_lin_eq([-1,1,1],[aux4488,3,s_00018],0);
constraint int_lt_reif(s_00015,aux4488,aux4489_BOOL);
constraint int_le_reif(s_00018, s_00015,aux4490_BOOL);
constraint array_bool_and([w_00002_00018_BOOL,aux4486_BOOL,aux4487_BOOL,aux4489_BOOL,aux4490_BOOL],aux4491_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4492_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux4493_BOOL);
constraint int_lin_eq([-1,1,1],[aux4494,2,s_00019],0);
constraint int_lt_reif(s_00015,aux4494,aux4495_BOOL);
constraint int_le_reif(s_00019, s_00015,aux4496_BOOL);
constraint array_bool_and([w_00002_00019_BOOL,aux4492_BOOL,aux4493_BOOL,aux4495_BOOL,aux4496_BOOL],aux4497_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4498_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux4499_BOOL);
constraint int_lin_eq([-1,1,1],[aux4500,3,s_00020],0);
constraint int_lt_reif(s_00015,aux4500,aux4501_BOOL);
constraint int_le_reif(s_00020, s_00015,aux4502_BOOL);
constraint array_bool_and([w_00002_00020_BOOL,aux4498_BOOL,aux4499_BOOL,aux4501_BOOL,aux4502_BOOL],aux4503_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux4389_INTEGER,aux4395_INTEGER,aux4401_INTEGER,aux4407_INTEGER,aux4413_INTEGER,aux4419_INTEGER,aux4425_INTEGER,aux4431_INTEGER,aux4437_INTEGER,aux4443_INTEGER,aux4449_INTEGER,aux4455_INTEGER,aux4461_INTEGER,aux4467_INTEGER,aux4473_INTEGER,aux4479_INTEGER,aux4485_INTEGER,aux4491_INTEGER,aux4497_INTEGER,aux4503_INTEGER,1],0,aux4504_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux4505_BOOL);
constraint int_lin_eq([-1,1,1],[aux4506,1,s_00013],0);
constraint int_lt_reif(s_00013,aux4506,aux4507_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux4505_BOOL,aux4507_BOOL],aux4508_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux4509_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux4510_BOOL);
constraint int_lin_eq([-1,1,1],[aux4511,1,s_00001],0);
constraint int_lt_reif(s_00013,aux4511,aux4512_BOOL);
constraint int_le_reif(s_00001, s_00013,aux4513_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux4509_BOOL,aux4510_BOOL,aux4512_BOOL,aux4513_BOOL],aux4514_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux4515_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux4516_BOOL);
constraint int_lin_eq([-1,1,1],[aux4517,2,s_00002],0);
constraint int_lt_reif(s_00013,aux4517,aux4518_BOOL);
constraint int_le_reif(s_00002, s_00013,aux4519_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux4515_BOOL,aux4516_BOOL,aux4518_BOOL,aux4519_BOOL],aux4520_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux4521_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux4522_BOOL);
constraint int_lin_eq([-1,1,1],[aux4523,3,s_00003],0);
constraint int_lt_reif(s_00013,aux4523,aux4524_BOOL);
constraint int_le_reif(s_00003, s_00013,aux4525_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux4521_BOOL,aux4522_BOOL,aux4524_BOOL,aux4525_BOOL],aux4526_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux4527_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux4528_BOOL);
constraint int_lin_eq([-1,1,1],[aux4529,2,s_00004],0);
constraint int_lt_reif(s_00013,aux4529,aux4530_BOOL);
constraint int_le_reif(s_00004, s_00013,aux4531_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux4527_BOOL,aux4528_BOOL,aux4530_BOOL,aux4531_BOOL],aux4532_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux4533_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux4534_BOOL);
constraint int_lin_eq([-1,1,1],[aux4535,2,s_00005],0);
constraint int_lt_reif(s_00013,aux4535,aux4536_BOOL);
constraint int_le_reif(s_00005, s_00013,aux4537_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux4533_BOOL,aux4534_BOOL,aux4536_BOOL,aux4537_BOOL],aux4538_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux4539_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux4540_BOOL);
constraint int_lin_eq([-1,1,1],[aux4541,3,s_00006],0);
constraint int_lt_reif(s_00013,aux4541,aux4542_BOOL);
constraint int_le_reif(s_00006, s_00013,aux4543_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux4539_BOOL,aux4540_BOOL,aux4542_BOOL,aux4543_BOOL],aux4544_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux4545_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux4546_BOOL);
constraint int_lin_eq([-1,1,1],[aux4547,2,s_00007],0);
constraint int_lt_reif(s_00013,aux4547,aux4548_BOOL);
constraint int_le_reif(s_00007, s_00013,aux4549_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux4545_BOOL,aux4546_BOOL,aux4548_BOOL,aux4549_BOOL],aux4550_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux4551_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux4552_BOOL);
constraint int_lin_eq([-1,1,1],[aux4553,1,s_00008],0);
constraint int_lt_reif(s_00013,aux4553,aux4554_BOOL);
constraint int_le_reif(s_00008, s_00013,aux4555_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux4551_BOOL,aux4552_BOOL,aux4554_BOOL,aux4555_BOOL],aux4556_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux4557_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux4558_BOOL);
constraint int_lin_eq([-1,1,1],[aux4559,2,s_00009],0);
constraint int_lt_reif(s_00013,aux4559,aux4560_BOOL);
constraint int_le_reif(s_00009, s_00013,aux4561_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux4557_BOOL,aux4558_BOOL,aux4560_BOOL,aux4561_BOOL],aux4562_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux4563_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux4564_BOOL);
constraint int_lin_eq([-1,1,1],[aux4565,1,s_00010],0);
constraint int_lt_reif(s_00013,aux4565,aux4566_BOOL);
constraint int_le_reif(s_00010, s_00013,aux4567_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux4563_BOOL,aux4564_BOOL,aux4566_BOOL,aux4567_BOOL],aux4568_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux4569_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux4570_BOOL);
constraint int_lin_eq([-1,1,1],[aux4571,2,s_00011],0);
constraint int_lt_reif(s_00013,aux4571,aux4572_BOOL);
constraint int_le_reif(s_00011, s_00013,aux4573_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux4569_BOOL,aux4570_BOOL,aux4572_BOOL,aux4573_BOOL],aux4574_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux4575_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux4576_BOOL);
constraint int_lin_eq([-1,1,1],[aux4577,2,s_00012],0);
constraint int_lt_reif(s_00013,aux4577,aux4578_BOOL);
constraint int_le_reif(s_00012, s_00013,aux4579_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux4575_BOOL,aux4576_BOOL,aux4578_BOOL,aux4579_BOOL],aux4580_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux4581_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4582_BOOL);
constraint int_lin_eq([-1,1,1],[aux4583,4,s_00014],0);
constraint int_lt_reif(s_00013,aux4583,aux4584_BOOL);
constraint int_le_reif(s_00014, s_00013,aux4585_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux4581_BOOL,aux4582_BOOL,aux4584_BOOL,aux4585_BOOL],aux4586_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux4587_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4588_BOOL);
constraint int_lin_eq([-1,1,1],[aux4589,2,s_00015],0);
constraint int_lt_reif(s_00013,aux4589,aux4590_BOOL);
constraint int_le_reif(s_00015, s_00013,aux4591_BOOL);
constraint array_bool_and([w_00002_00015_BOOL,aux4587_BOOL,aux4588_BOOL,aux4590_BOOL,aux4591_BOOL],aux4592_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux4593_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux4594_BOOL);
constraint int_lin_eq([-1,1,1],[aux4595,3,s_00016],0);
constraint int_lt_reif(s_00013,aux4595,aux4596_BOOL);
constraint int_le_reif(s_00016, s_00013,aux4597_BOOL);
constraint array_bool_and([w_00002_00016_BOOL,aux4593_BOOL,aux4594_BOOL,aux4596_BOOL,aux4597_BOOL],aux4598_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux4599_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux4600_BOOL);
constraint int_lin_eq([-1,1,1],[aux4601,1,s_00017],0);
constraint int_lt_reif(s_00013,aux4601,aux4602_BOOL);
constraint int_le_reif(s_00017, s_00013,aux4603_BOOL);
constraint array_bool_and([w_00002_00017_BOOL,aux4599_BOOL,aux4600_BOOL,aux4602_BOOL,aux4603_BOOL],aux4604_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux4605_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux4606_BOOL);
constraint int_lin_eq([-1,1,1],[aux4607,3,s_00018],0);
constraint int_lt_reif(s_00013,aux4607,aux4608_BOOL);
constraint int_le_reif(s_00018, s_00013,aux4609_BOOL);
constraint array_bool_and([w_00002_00018_BOOL,aux4605_BOOL,aux4606_BOOL,aux4608_BOOL,aux4609_BOOL],aux4610_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux4611_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux4612_BOOL);
constraint int_lin_eq([-1,1,1],[aux4613,2,s_00019],0);
constraint int_lt_reif(s_00013,aux4613,aux4614_BOOL);
constraint int_le_reif(s_00019, s_00013,aux4615_BOOL);
constraint array_bool_and([w_00002_00019_BOOL,aux4611_BOOL,aux4612_BOOL,aux4614_BOOL,aux4615_BOOL],aux4616_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux4617_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux4618_BOOL);
constraint int_lin_eq([-1,1,1],[aux4619,3,s_00020],0);
constraint int_lt_reif(s_00013,aux4619,aux4620_BOOL);
constraint int_le_reif(s_00020, s_00013,aux4621_BOOL);
constraint array_bool_and([w_00002_00020_BOOL,aux4617_BOOL,aux4618_BOOL,aux4620_BOOL,aux4621_BOOL],aux4622_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux4508_INTEGER,aux4514_INTEGER,aux4520_INTEGER,aux4526_INTEGER,aux4532_INTEGER,aux4538_INTEGER,aux4544_INTEGER,aux4550_INTEGER,aux4556_INTEGER,aux4562_INTEGER,aux4568_INTEGER,aux4574_INTEGER,aux4580_INTEGER,aux4586_INTEGER,aux4592_INTEGER,aux4598_INTEGER,aux4604_INTEGER,aux4610_INTEGER,aux4616_INTEGER,aux4622_INTEGER,1],0,aux4623_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux4624_BOOL);
constraint int_lin_eq([-1,1,1],[aux4625,3,s_00016],0);
constraint int_lt_reif(s_00016,aux4625,aux4626_BOOL);
constraint array_bool_and([w_00002_00016_BOOL,aux4624_BOOL,aux4626_BOOL],aux4627_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux4628_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux4629_BOOL);
constraint int_lin_eq([-1,1,1],[aux4630,1,s_00001],0);
constraint int_lt_reif(s_00016,aux4630,aux4631_BOOL);
constraint int_le_reif(s_00001, s_00016,aux4632_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux4628_BOOL,aux4629_BOOL,aux4631_BOOL,aux4632_BOOL],aux4633_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux4634_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux4635_BOOL);
constraint int_lin_eq([-1,1,1],[aux4636,2,s_00002],0);
constraint int_lt_reif(s_00016,aux4636,aux4637_BOOL);
constraint int_le_reif(s_00002, s_00016,aux4638_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux4634_BOOL,aux4635_BOOL,aux4637_BOOL,aux4638_BOOL],aux4639_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux4640_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux4641_BOOL);
constraint int_lin_eq([-1,1,1],[aux4642,3,s_00003],0);
constraint int_lt_reif(s_00016,aux4642,aux4643_BOOL);
constraint int_le_reif(s_00003, s_00016,aux4644_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux4640_BOOL,aux4641_BOOL,aux4643_BOOL,aux4644_BOOL],aux4645_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux4646_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux4647_BOOL);
constraint int_lin_eq([-1,1,1],[aux4648,2,s_00004],0);
constraint int_lt_reif(s_00016,aux4648,aux4649_BOOL);
constraint int_le_reif(s_00004, s_00016,aux4650_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux4646_BOOL,aux4647_BOOL,aux4649_BOOL,aux4650_BOOL],aux4651_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux4652_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux4653_BOOL);
constraint int_lin_eq([-1,1,1],[aux4654,2,s_00005],0);
constraint int_lt_reif(s_00016,aux4654,aux4655_BOOL);
constraint int_le_reif(s_00005, s_00016,aux4656_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux4652_BOOL,aux4653_BOOL,aux4655_BOOL,aux4656_BOOL],aux4657_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux4658_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux4659_BOOL);
constraint int_lin_eq([-1,1,1],[aux4660,3,s_00006],0);
constraint int_lt_reif(s_00016,aux4660,aux4661_BOOL);
constraint int_le_reif(s_00006, s_00016,aux4662_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux4658_BOOL,aux4659_BOOL,aux4661_BOOL,aux4662_BOOL],aux4663_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux4664_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux4665_BOOL);
constraint int_lin_eq([-1,1,1],[aux4666,2,s_00007],0);
constraint int_lt_reif(s_00016,aux4666,aux4667_BOOL);
constraint int_le_reif(s_00007, s_00016,aux4668_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux4664_BOOL,aux4665_BOOL,aux4667_BOOL,aux4668_BOOL],aux4669_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux4670_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux4671_BOOL);
constraint int_lin_eq([-1,1,1],[aux4672,1,s_00008],0);
constraint int_lt_reif(s_00016,aux4672,aux4673_BOOL);
constraint int_le_reif(s_00008, s_00016,aux4674_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux4670_BOOL,aux4671_BOOL,aux4673_BOOL,aux4674_BOOL],aux4675_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux4676_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux4677_BOOL);
constraint int_lin_eq([-1,1,1],[aux4678,2,s_00009],0);
constraint int_lt_reif(s_00016,aux4678,aux4679_BOOL);
constraint int_le_reif(s_00009, s_00016,aux4680_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux4676_BOOL,aux4677_BOOL,aux4679_BOOL,aux4680_BOOL],aux4681_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux4682_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux4683_BOOL);
constraint int_lin_eq([-1,1,1],[aux4684,1,s_00010],0);
constraint int_lt_reif(s_00016,aux4684,aux4685_BOOL);
constraint int_le_reif(s_00010, s_00016,aux4686_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux4682_BOOL,aux4683_BOOL,aux4685_BOOL,aux4686_BOOL],aux4687_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux4688_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux4689_BOOL);
constraint int_lin_eq([-1,1,1],[aux4690,2,s_00011],0);
constraint int_lt_reif(s_00016,aux4690,aux4691_BOOL);
constraint int_le_reif(s_00011, s_00016,aux4692_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux4688_BOOL,aux4689_BOOL,aux4691_BOOL,aux4692_BOOL],aux4693_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux4694_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux4695_BOOL);
constraint int_lin_eq([-1,1,1],[aux4696,2,s_00012],0);
constraint int_lt_reif(s_00016,aux4696,aux4697_BOOL);
constraint int_le_reif(s_00012, s_00016,aux4698_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux4694_BOOL,aux4695_BOOL,aux4697_BOOL,aux4698_BOOL],aux4699_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux4700_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux4701_BOOL);
constraint int_lin_eq([-1,1,1],[aux4702,1,s_00013],0);
constraint int_lt_reif(s_00016,aux4702,aux4703_BOOL);
constraint int_le_reif(s_00013, s_00016,aux4704_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux4700_BOOL,aux4701_BOOL,aux4703_BOOL,aux4704_BOOL],aux4705_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4706_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux4707_BOOL);
constraint int_lin_eq([-1,1,1],[aux4708,4,s_00014],0);
constraint int_lt_reif(s_00016,aux4708,aux4709_BOOL);
constraint int_le_reif(s_00014, s_00016,aux4710_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux4706_BOOL,aux4707_BOOL,aux4709_BOOL,aux4710_BOOL],aux4711_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4712_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux4713_BOOL);
constraint int_lin_eq([-1,1,1],[aux4714,2,s_00015],0);
constraint int_lt_reif(s_00016,aux4714,aux4715_BOOL);
constraint int_le_reif(s_00015, s_00016,aux4716_BOOL);
constraint array_bool_and([w_00002_00015_BOOL,aux4712_BOOL,aux4713_BOOL,aux4715_BOOL,aux4716_BOOL],aux4717_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux4718_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux4719_BOOL);
constraint int_lin_eq([-1,1,1],[aux4720,1,s_00017],0);
constraint int_lt_reif(s_00016,aux4720,aux4721_BOOL);
constraint int_le_reif(s_00017, s_00016,aux4722_BOOL);
constraint array_bool_and([w_00002_00017_BOOL,aux4718_BOOL,aux4719_BOOL,aux4721_BOOL,aux4722_BOOL],aux4723_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux4724_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux4725_BOOL);
constraint int_lin_eq([-1,1,1],[aux4726,3,s_00018],0);
constraint int_lt_reif(s_00016,aux4726,aux4727_BOOL);
constraint int_le_reif(s_00018, s_00016,aux4728_BOOL);
constraint array_bool_and([w_00002_00018_BOOL,aux4724_BOOL,aux4725_BOOL,aux4727_BOOL,aux4728_BOOL],aux4729_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux4730_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux4731_BOOL);
constraint int_lin_eq([-1,1,1],[aux4732,2,s_00019],0);
constraint int_lt_reif(s_00016,aux4732,aux4733_BOOL);
constraint int_le_reif(s_00019, s_00016,aux4734_BOOL);
constraint array_bool_and([w_00002_00019_BOOL,aux4730_BOOL,aux4731_BOOL,aux4733_BOOL,aux4734_BOOL],aux4735_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux4736_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux4737_BOOL);
constraint int_lin_eq([-1,1,1],[aux4738,3,s_00020],0);
constraint int_lt_reif(s_00016,aux4738,aux4739_BOOL);
constraint int_le_reif(s_00020, s_00016,aux4740_BOOL);
constraint array_bool_and([w_00002_00020_BOOL,aux4736_BOOL,aux4737_BOOL,aux4739_BOOL,aux4740_BOOL],aux4741_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux4627_INTEGER,aux4633_INTEGER,aux4639_INTEGER,aux4645_INTEGER,aux4651_INTEGER,aux4657_INTEGER,aux4663_INTEGER,aux4669_INTEGER,aux4675_INTEGER,aux4681_INTEGER,aux4687_INTEGER,aux4693_INTEGER,aux4699_INTEGER,aux4705_INTEGER,aux4711_INTEGER,aux4717_INTEGER,aux4723_INTEGER,aux4729_INTEGER,aux4735_INTEGER,aux4741_INTEGER,1],0,aux4742_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux4743_BOOL);
constraint int_lin_eq([-1,1,1],[aux4744,2,s_00009],0);
constraint int_lt_reif(s_00009,aux4744,aux4745_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux4743_BOOL,aux4745_BOOL],aux4746_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux4747_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux4748_BOOL);
constraint int_lin_eq([-1,1,1],[aux4749,1,s_00001],0);
constraint int_lt_reif(s_00009,aux4749,aux4750_BOOL);
constraint int_le_reif(s_00001, s_00009,aux4751_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux4747_BOOL,aux4748_BOOL,aux4750_BOOL,aux4751_BOOL],aux4752_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux4753_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux4754_BOOL);
constraint int_lin_eq([-1,1,1],[aux4755,2,s_00002],0);
constraint int_lt_reif(s_00009,aux4755,aux4756_BOOL);
constraint int_le_reif(s_00002, s_00009,aux4757_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux4753_BOOL,aux4754_BOOL,aux4756_BOOL,aux4757_BOOL],aux4758_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux4759_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux4760_BOOL);
constraint int_lin_eq([-1,1,1],[aux4761,3,s_00003],0);
constraint int_lt_reif(s_00009,aux4761,aux4762_BOOL);
constraint int_le_reif(s_00003, s_00009,aux4763_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux4759_BOOL,aux4760_BOOL,aux4762_BOOL,aux4763_BOOL],aux4764_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux4765_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux4766_BOOL);
constraint int_lin_eq([-1,1,1],[aux4767,2,s_00004],0);
constraint int_lt_reif(s_00009,aux4767,aux4768_BOOL);
constraint int_le_reif(s_00004, s_00009,aux4769_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux4765_BOOL,aux4766_BOOL,aux4768_BOOL,aux4769_BOOL],aux4770_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux4771_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux4772_BOOL);
constraint int_lin_eq([-1,1,1],[aux4773,2,s_00005],0);
constraint int_lt_reif(s_00009,aux4773,aux4774_BOOL);
constraint int_le_reif(s_00005, s_00009,aux4775_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux4771_BOOL,aux4772_BOOL,aux4774_BOOL,aux4775_BOOL],aux4776_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux4777_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux4778_BOOL);
constraint int_lin_eq([-1,1,1],[aux4779,3,s_00006],0);
constraint int_lt_reif(s_00009,aux4779,aux4780_BOOL);
constraint int_le_reif(s_00006, s_00009,aux4781_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux4777_BOOL,aux4778_BOOL,aux4780_BOOL,aux4781_BOOL],aux4782_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux4783_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux4784_BOOL);
constraint int_lin_eq([-1,1,1],[aux4785,2,s_00007],0);
constraint int_lt_reif(s_00009,aux4785,aux4786_BOOL);
constraint int_le_reif(s_00007, s_00009,aux4787_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux4783_BOOL,aux4784_BOOL,aux4786_BOOL,aux4787_BOOL],aux4788_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux4789_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux4790_BOOL);
constraint int_lin_eq([-1,1,1],[aux4791,1,s_00008],0);
constraint int_lt_reif(s_00009,aux4791,aux4792_BOOL);
constraint int_le_reif(s_00008, s_00009,aux4793_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux4789_BOOL,aux4790_BOOL,aux4792_BOOL,aux4793_BOOL],aux4794_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux4795_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux4796_BOOL);
constraint int_lin_eq([-1,1,1],[aux4797,1,s_00010],0);
constraint int_lt_reif(s_00009,aux4797,aux4798_BOOL);
constraint int_le_reif(s_00010, s_00009,aux4799_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux4795_BOOL,aux4796_BOOL,aux4798_BOOL,aux4799_BOOL],aux4800_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux4801_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux4802_BOOL);
constraint int_lin_eq([-1,1,1],[aux4803,2,s_00011],0);
constraint int_lt_reif(s_00009,aux4803,aux4804_BOOL);
constraint int_le_reif(s_00011, s_00009,aux4805_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux4801_BOOL,aux4802_BOOL,aux4804_BOOL,aux4805_BOOL],aux4806_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux4807_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux4808_BOOL);
constraint int_lin_eq([-1,1,1],[aux4809,2,s_00012],0);
constraint int_lt_reif(s_00009,aux4809,aux4810_BOOL);
constraint int_le_reif(s_00012, s_00009,aux4811_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux4807_BOOL,aux4808_BOOL,aux4810_BOOL,aux4811_BOOL],aux4812_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux4813_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux4814_BOOL);
constraint int_lin_eq([-1,1,1],[aux4815,1,s_00013],0);
constraint int_lt_reif(s_00009,aux4815,aux4816_BOOL);
constraint int_le_reif(s_00013, s_00009,aux4817_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux4813_BOOL,aux4814_BOOL,aux4816_BOOL,aux4817_BOOL],aux4818_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux4819_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4820_BOOL);
constraint int_lin_eq([-1,1,1],[aux4821,4,s_00014],0);
constraint int_lt_reif(s_00009,aux4821,aux4822_BOOL);
constraint int_le_reif(s_00014, s_00009,aux4823_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux4819_BOOL,aux4820_BOOL,aux4822_BOOL,aux4823_BOOL],aux4824_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux4825_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4826_BOOL);
constraint int_lin_eq([-1,1,1],[aux4827,2,s_00015],0);
constraint int_lt_reif(s_00009,aux4827,aux4828_BOOL);
constraint int_le_reif(s_00015, s_00009,aux4829_BOOL);
constraint array_bool_and([w_00002_00015_BOOL,aux4825_BOOL,aux4826_BOOL,aux4828_BOOL,aux4829_BOOL],aux4830_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux4831_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux4832_BOOL);
constraint int_lin_eq([-1,1,1],[aux4833,3,s_00016],0);
constraint int_lt_reif(s_00009,aux4833,aux4834_BOOL);
constraint int_le_reif(s_00016, s_00009,aux4835_BOOL);
constraint array_bool_and([w_00002_00016_BOOL,aux4831_BOOL,aux4832_BOOL,aux4834_BOOL,aux4835_BOOL],aux4836_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux4837_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux4838_BOOL);
constraint int_lin_eq([-1,1,1],[aux4839,1,s_00017],0);
constraint int_lt_reif(s_00009,aux4839,aux4840_BOOL);
constraint int_le_reif(s_00017, s_00009,aux4841_BOOL);
constraint array_bool_and([w_00002_00017_BOOL,aux4837_BOOL,aux4838_BOOL,aux4840_BOOL,aux4841_BOOL],aux4842_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux4843_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux4844_BOOL);
constraint int_lin_eq([-1,1,1],[aux4845,3,s_00018],0);
constraint int_lt_reif(s_00009,aux4845,aux4846_BOOL);
constraint int_le_reif(s_00018, s_00009,aux4847_BOOL);
constraint array_bool_and([w_00002_00018_BOOL,aux4843_BOOL,aux4844_BOOL,aux4846_BOOL,aux4847_BOOL],aux4848_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux4849_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux4850_BOOL);
constraint int_lin_eq([-1,1,1],[aux4851,2,s_00019],0);
constraint int_lt_reif(s_00009,aux4851,aux4852_BOOL);
constraint int_le_reif(s_00019, s_00009,aux4853_BOOL);
constraint array_bool_and([w_00002_00019_BOOL,aux4849_BOOL,aux4850_BOOL,aux4852_BOOL,aux4853_BOOL],aux4854_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux4855_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux4856_BOOL);
constraint int_lin_eq([-1,1,1],[aux4857,3,s_00020],0);
constraint int_lt_reif(s_00009,aux4857,aux4858_BOOL);
constraint int_le_reif(s_00020, s_00009,aux4859_BOOL);
constraint array_bool_and([w_00002_00020_BOOL,aux4855_BOOL,aux4856_BOOL,aux4858_BOOL,aux4859_BOOL],aux4860_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux4746_INTEGER,aux4752_INTEGER,aux4758_INTEGER,aux4764_INTEGER,aux4770_INTEGER,aux4776_INTEGER,aux4782_INTEGER,aux4788_INTEGER,aux4794_INTEGER,aux4800_INTEGER,aux4806_INTEGER,aux4812_INTEGER,aux4818_INTEGER,aux4824_INTEGER,aux4830_INTEGER,aux4836_INTEGER,aux4842_INTEGER,aux4848_INTEGER,aux4854_INTEGER,aux4860_INTEGER,1],0,aux4861_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux4862_BOOL);
constraint int_lin_eq([-1,1,1],[aux4863,3,s_00018],0);
constraint int_lt_reif(s_00018,aux4863,aux4864_BOOL);
constraint array_bool_and([w_00002_00018_BOOL,aux4862_BOOL,aux4864_BOOL],aux4865_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux4866_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux4867_BOOL);
constraint int_lin_eq([-1,1,1],[aux4868,1,s_00001],0);
constraint int_lt_reif(s_00018,aux4868,aux4869_BOOL);
constraint int_le_reif(s_00001, s_00018,aux4870_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux4866_BOOL,aux4867_BOOL,aux4869_BOOL,aux4870_BOOL],aux4871_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux4872_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux4873_BOOL);
constraint int_lin_eq([-1,1,1],[aux4874,2,s_00002],0);
constraint int_lt_reif(s_00018,aux4874,aux4875_BOOL);
constraint int_le_reif(s_00002, s_00018,aux4876_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux4872_BOOL,aux4873_BOOL,aux4875_BOOL,aux4876_BOOL],aux4877_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux4878_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux4879_BOOL);
constraint int_lin_eq([-1,1,1],[aux4880,3,s_00003],0);
constraint int_lt_reif(s_00018,aux4880,aux4881_BOOL);
constraint int_le_reif(s_00003, s_00018,aux4882_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux4878_BOOL,aux4879_BOOL,aux4881_BOOL,aux4882_BOOL],aux4883_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux4884_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux4885_BOOL);
constraint int_lin_eq([-1,1,1],[aux4886,2,s_00004],0);
constraint int_lt_reif(s_00018,aux4886,aux4887_BOOL);
constraint int_le_reif(s_00004, s_00018,aux4888_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux4884_BOOL,aux4885_BOOL,aux4887_BOOL,aux4888_BOOL],aux4889_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux4890_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux4891_BOOL);
constraint int_lin_eq([-1,1,1],[aux4892,2,s_00005],0);
constraint int_lt_reif(s_00018,aux4892,aux4893_BOOL);
constraint int_le_reif(s_00005, s_00018,aux4894_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux4890_BOOL,aux4891_BOOL,aux4893_BOOL,aux4894_BOOL],aux4895_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux4896_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux4897_BOOL);
constraint int_lin_eq([-1,1,1],[aux4898,3,s_00006],0);
constraint int_lt_reif(s_00018,aux4898,aux4899_BOOL);
constraint int_le_reif(s_00006, s_00018,aux4900_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux4896_BOOL,aux4897_BOOL,aux4899_BOOL,aux4900_BOOL],aux4901_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux4902_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux4903_BOOL);
constraint int_lin_eq([-1,1,1],[aux4904,2,s_00007],0);
constraint int_lt_reif(s_00018,aux4904,aux4905_BOOL);
constraint int_le_reif(s_00007, s_00018,aux4906_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux4902_BOOL,aux4903_BOOL,aux4905_BOOL,aux4906_BOOL],aux4907_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux4908_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux4909_BOOL);
constraint int_lin_eq([-1,1,1],[aux4910,1,s_00008],0);
constraint int_lt_reif(s_00018,aux4910,aux4911_BOOL);
constraint int_le_reif(s_00008, s_00018,aux4912_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux4908_BOOL,aux4909_BOOL,aux4911_BOOL,aux4912_BOOL],aux4913_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux4914_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux4915_BOOL);
constraint int_lin_eq([-1,1,1],[aux4916,2,s_00009],0);
constraint int_lt_reif(s_00018,aux4916,aux4917_BOOL);
constraint int_le_reif(s_00009, s_00018,aux4918_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux4914_BOOL,aux4915_BOOL,aux4917_BOOL,aux4918_BOOL],aux4919_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux4920_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux4921_BOOL);
constraint int_lin_eq([-1,1,1],[aux4922,1,s_00010],0);
constraint int_lt_reif(s_00018,aux4922,aux4923_BOOL);
constraint int_le_reif(s_00010, s_00018,aux4924_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux4920_BOOL,aux4921_BOOL,aux4923_BOOL,aux4924_BOOL],aux4925_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux4926_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux4927_BOOL);
constraint int_lin_eq([-1,1,1],[aux4928,2,s_00011],0);
constraint int_lt_reif(s_00018,aux4928,aux4929_BOOL);
constraint int_le_reif(s_00011, s_00018,aux4930_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux4926_BOOL,aux4927_BOOL,aux4929_BOOL,aux4930_BOOL],aux4931_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux4932_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux4933_BOOL);
constraint int_lin_eq([-1,1,1],[aux4934,2,s_00012],0);
constraint int_lt_reif(s_00018,aux4934,aux4935_BOOL);
constraint int_le_reif(s_00012, s_00018,aux4936_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux4932_BOOL,aux4933_BOOL,aux4935_BOOL,aux4936_BOOL],aux4937_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux4938_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux4939_BOOL);
constraint int_lin_eq([-1,1,1],[aux4940,1,s_00013],0);
constraint int_lt_reif(s_00018,aux4940,aux4941_BOOL);
constraint int_le_reif(s_00013, s_00018,aux4942_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux4938_BOOL,aux4939_BOOL,aux4941_BOOL,aux4942_BOOL],aux4943_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux4944_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux4945_BOOL);
constraint int_lin_eq([-1,1,1],[aux4946,4,s_00014],0);
constraint int_lt_reif(s_00018,aux4946,aux4947_BOOL);
constraint int_le_reif(s_00014, s_00018,aux4948_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux4944_BOOL,aux4945_BOOL,aux4947_BOOL,aux4948_BOOL],aux4949_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux4950_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux4951_BOOL);
constraint int_lin_eq([-1,1,1],[aux4952,2,s_00015],0);
constraint int_lt_reif(s_00018,aux4952,aux4953_BOOL);
constraint int_le_reif(s_00015, s_00018,aux4954_BOOL);
constraint array_bool_and([w_00002_00015_BOOL,aux4950_BOOL,aux4951_BOOL,aux4953_BOOL,aux4954_BOOL],aux4955_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux4956_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux4957_BOOL);
constraint int_lin_eq([-1,1,1],[aux4958,3,s_00016],0);
constraint int_lt_reif(s_00018,aux4958,aux4959_BOOL);
constraint int_le_reif(s_00016, s_00018,aux4960_BOOL);
constraint array_bool_and([w_00002_00016_BOOL,aux4956_BOOL,aux4957_BOOL,aux4959_BOOL,aux4960_BOOL],aux4961_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux4962_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux4963_BOOL);
constraint int_lin_eq([-1,1,1],[aux4964,1,s_00017],0);
constraint int_lt_reif(s_00018,aux4964,aux4965_BOOL);
constraint int_le_reif(s_00017, s_00018,aux4966_BOOL);
constraint array_bool_and([w_00002_00017_BOOL,aux4962_BOOL,aux4963_BOOL,aux4965_BOOL,aux4966_BOOL],aux4967_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux4968_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux4969_BOOL);
constraint int_lin_eq([-1,1,1],[aux4970,2,s_00019],0);
constraint int_lt_reif(s_00018,aux4970,aux4971_BOOL);
constraint int_le_reif(s_00019, s_00018,aux4972_BOOL);
constraint array_bool_and([w_00002_00019_BOOL,aux4968_BOOL,aux4969_BOOL,aux4971_BOOL,aux4972_BOOL],aux4973_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux4974_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux4975_BOOL);
constraint int_lin_eq([-1,1,1],[aux4976,3,s_00020],0);
constraint int_lt_reif(s_00018,aux4976,aux4977_BOOL);
constraint int_le_reif(s_00020, s_00018,aux4978_BOOL);
constraint array_bool_and([w_00002_00020_BOOL,aux4974_BOOL,aux4975_BOOL,aux4977_BOOL,aux4978_BOOL],aux4979_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux4865_INTEGER,aux4871_INTEGER,aux4877_INTEGER,aux4883_INTEGER,aux4889_INTEGER,aux4895_INTEGER,aux4901_INTEGER,aux4907_INTEGER,aux4913_INTEGER,aux4919_INTEGER,aux4925_INTEGER,aux4931_INTEGER,aux4937_INTEGER,aux4943_INTEGER,aux4949_INTEGER,aux4955_INTEGER,aux4961_INTEGER,aux4967_INTEGER,aux4973_INTEGER,aux4979_INTEGER,1],0,aux4980_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux4981_BOOL);
constraint int_lin_eq([-1,1,1],[aux4982,1,s_00017],0);
constraint int_lt_reif(s_00017,aux4982,aux4983_BOOL);
constraint array_bool_and([w_00002_00017_BOOL,aux4981_BOOL,aux4983_BOOL],aux4984_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux4985_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux4986_BOOL);
constraint int_lin_eq([-1,1,1],[aux4987,1,s_00001],0);
constraint int_lt_reif(s_00017,aux4987,aux4988_BOOL);
constraint int_le_reif(s_00001, s_00017,aux4989_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux4985_BOOL,aux4986_BOOL,aux4988_BOOL,aux4989_BOOL],aux4990_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux4991_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux4992_BOOL);
constraint int_lin_eq([-1,1,1],[aux4993,2,s_00002],0);
constraint int_lt_reif(s_00017,aux4993,aux4994_BOOL);
constraint int_le_reif(s_00002, s_00017,aux4995_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux4991_BOOL,aux4992_BOOL,aux4994_BOOL,aux4995_BOOL],aux4996_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux4997_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux4998_BOOL);
constraint int_lin_eq([-1,1,1],[aux4999,3,s_00003],0);
constraint int_lt_reif(s_00017,aux4999,aux5000_BOOL);
constraint int_le_reif(s_00003, s_00017,aux5001_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux4997_BOOL,aux4998_BOOL,aux5000_BOOL,aux5001_BOOL],aux5002_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux5003_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux5004_BOOL);
constraint int_lin_eq([-1,1,1],[aux5005,2,s_00004],0);
constraint int_lt_reif(s_00017,aux5005,aux5006_BOOL);
constraint int_le_reif(s_00004, s_00017,aux5007_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux5003_BOOL,aux5004_BOOL,aux5006_BOOL,aux5007_BOOL],aux5008_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux5009_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux5010_BOOL);
constraint int_lin_eq([-1,1,1],[aux5011,2,s_00005],0);
constraint int_lt_reif(s_00017,aux5011,aux5012_BOOL);
constraint int_le_reif(s_00005, s_00017,aux5013_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux5009_BOOL,aux5010_BOOL,aux5012_BOOL,aux5013_BOOL],aux5014_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux5015_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux5016_BOOL);
constraint int_lin_eq([-1,1,1],[aux5017,3,s_00006],0);
constraint int_lt_reif(s_00017,aux5017,aux5018_BOOL);
constraint int_le_reif(s_00006, s_00017,aux5019_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux5015_BOOL,aux5016_BOOL,aux5018_BOOL,aux5019_BOOL],aux5020_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux5021_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux5022_BOOL);
constraint int_lin_eq([-1,1,1],[aux5023,2,s_00007],0);
constraint int_lt_reif(s_00017,aux5023,aux5024_BOOL);
constraint int_le_reif(s_00007, s_00017,aux5025_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux5021_BOOL,aux5022_BOOL,aux5024_BOOL,aux5025_BOOL],aux5026_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux5027_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux5028_BOOL);
constraint int_lin_eq([-1,1,1],[aux5029,1,s_00008],0);
constraint int_lt_reif(s_00017,aux5029,aux5030_BOOL);
constraint int_le_reif(s_00008, s_00017,aux5031_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux5027_BOOL,aux5028_BOOL,aux5030_BOOL,aux5031_BOOL],aux5032_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux5033_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux5034_BOOL);
constraint int_lin_eq([-1,1,1],[aux5035,2,s_00009],0);
constraint int_lt_reif(s_00017,aux5035,aux5036_BOOL);
constraint int_le_reif(s_00009, s_00017,aux5037_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux5033_BOOL,aux5034_BOOL,aux5036_BOOL,aux5037_BOOL],aux5038_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux5039_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux5040_BOOL);
constraint int_lin_eq([-1,1,1],[aux5041,1,s_00010],0);
constraint int_lt_reif(s_00017,aux5041,aux5042_BOOL);
constraint int_le_reif(s_00010, s_00017,aux5043_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux5039_BOOL,aux5040_BOOL,aux5042_BOOL,aux5043_BOOL],aux5044_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux5045_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux5046_BOOL);
constraint int_lin_eq([-1,1,1],[aux5047,2,s_00011],0);
constraint int_lt_reif(s_00017,aux5047,aux5048_BOOL);
constraint int_le_reif(s_00011, s_00017,aux5049_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux5045_BOOL,aux5046_BOOL,aux5048_BOOL,aux5049_BOOL],aux5050_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux5051_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux5052_BOOL);
constraint int_lin_eq([-1,1,1],[aux5053,2,s_00012],0);
constraint int_lt_reif(s_00017,aux5053,aux5054_BOOL);
constraint int_le_reif(s_00012, s_00017,aux5055_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux5051_BOOL,aux5052_BOOL,aux5054_BOOL,aux5055_BOOL],aux5056_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux5057_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux5058_BOOL);
constraint int_lin_eq([-1,1,1],[aux5059,1,s_00013],0);
constraint int_lt_reif(s_00017,aux5059,aux5060_BOOL);
constraint int_le_reif(s_00013, s_00017,aux5061_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux5057_BOOL,aux5058_BOOL,aux5060_BOOL,aux5061_BOOL],aux5062_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux5063_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux5064_BOOL);
constraint int_lin_eq([-1,1,1],[aux5065,4,s_00014],0);
constraint int_lt_reif(s_00017,aux5065,aux5066_BOOL);
constraint int_le_reif(s_00014, s_00017,aux5067_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux5063_BOOL,aux5064_BOOL,aux5066_BOOL,aux5067_BOOL],aux5068_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux5069_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux5070_BOOL);
constraint int_lin_eq([-1,1,1],[aux5071,2,s_00015],0);
constraint int_lt_reif(s_00017,aux5071,aux5072_BOOL);
constraint int_le_reif(s_00015, s_00017,aux5073_BOOL);
constraint array_bool_and([w_00002_00015_BOOL,aux5069_BOOL,aux5070_BOOL,aux5072_BOOL,aux5073_BOOL],aux5074_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux5075_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux5076_BOOL);
constraint int_lin_eq([-1,1,1],[aux5077,3,s_00016],0);
constraint int_lt_reif(s_00017,aux5077,aux5078_BOOL);
constraint int_le_reif(s_00016, s_00017,aux5079_BOOL);
constraint array_bool_and([w_00002_00016_BOOL,aux5075_BOOL,aux5076_BOOL,aux5078_BOOL,aux5079_BOOL],aux5080_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux5081_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux5082_BOOL);
constraint int_lin_eq([-1,1,1],[aux5083,3,s_00018],0);
constraint int_lt_reif(s_00017,aux5083,aux5084_BOOL);
constraint int_le_reif(s_00018, s_00017,aux5085_BOOL);
constraint array_bool_and([w_00002_00018_BOOL,aux5081_BOOL,aux5082_BOOL,aux5084_BOOL,aux5085_BOOL],aux5086_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux5087_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux5088_BOOL);
constraint int_lin_eq([-1,1,1],[aux5089,2,s_00019],0);
constraint int_lt_reif(s_00017,aux5089,aux5090_BOOL);
constraint int_le_reif(s_00019, s_00017,aux5091_BOOL);
constraint array_bool_and([w_00002_00019_BOOL,aux5087_BOOL,aux5088_BOOL,aux5090_BOOL,aux5091_BOOL],aux5092_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux5093_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux5094_BOOL);
constraint int_lin_eq([-1,1,1],[aux5095,3,s_00020],0);
constraint int_lt_reif(s_00017,aux5095,aux5096_BOOL);
constraint int_le_reif(s_00020, s_00017,aux5097_BOOL);
constraint array_bool_and([w_00002_00020_BOOL,aux5093_BOOL,aux5094_BOOL,aux5096_BOOL,aux5097_BOOL],aux5098_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux4984_INTEGER,aux4990_INTEGER,aux4996_INTEGER,aux5002_INTEGER,aux5008_INTEGER,aux5014_INTEGER,aux5020_INTEGER,aux5026_INTEGER,aux5032_INTEGER,aux5038_INTEGER,aux5044_INTEGER,aux5050_INTEGER,aux5056_INTEGER,aux5062_INTEGER,aux5068_INTEGER,aux5074_INTEGER,aux5080_INTEGER,aux5086_INTEGER,aux5092_INTEGER,aux5098_INTEGER,1],0,aux5099_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux5100_BOOL);
constraint int_lin_eq([-1,1,1],[aux5101,2,s_00011],0);
constraint int_lt_reif(s_00011,aux5101,aux5102_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux5100_BOOL,aux5102_BOOL],aux5103_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux5104_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux5105_BOOL);
constraint int_lin_eq([-1,1,1],[aux5106,1,s_00001],0);
constraint int_lt_reif(s_00011,aux5106,aux5107_BOOL);
constraint int_le_reif(s_00001, s_00011,aux5108_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux5104_BOOL,aux5105_BOOL,aux5107_BOOL,aux5108_BOOL],aux5109_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux5110_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux5111_BOOL);
constraint int_lin_eq([-1,1,1],[aux5112,2,s_00002],0);
constraint int_lt_reif(s_00011,aux5112,aux5113_BOOL);
constraint int_le_reif(s_00002, s_00011,aux5114_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux5110_BOOL,aux5111_BOOL,aux5113_BOOL,aux5114_BOOL],aux5115_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux5116_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux5117_BOOL);
constraint int_lin_eq([-1,1,1],[aux5118,3,s_00003],0);
constraint int_lt_reif(s_00011,aux5118,aux5119_BOOL);
constraint int_le_reif(s_00003, s_00011,aux5120_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux5116_BOOL,aux5117_BOOL,aux5119_BOOL,aux5120_BOOL],aux5121_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux5122_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux5123_BOOL);
constraint int_lin_eq([-1,1,1],[aux5124,2,s_00004],0);
constraint int_lt_reif(s_00011,aux5124,aux5125_BOOL);
constraint int_le_reif(s_00004, s_00011,aux5126_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux5122_BOOL,aux5123_BOOL,aux5125_BOOL,aux5126_BOOL],aux5127_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux5128_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux5129_BOOL);
constraint int_lin_eq([-1,1,1],[aux5130,2,s_00005],0);
constraint int_lt_reif(s_00011,aux5130,aux5131_BOOL);
constraint int_le_reif(s_00005, s_00011,aux5132_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux5128_BOOL,aux5129_BOOL,aux5131_BOOL,aux5132_BOOL],aux5133_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux5134_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux5135_BOOL);
constraint int_lin_eq([-1,1,1],[aux5136,3,s_00006],0);
constraint int_lt_reif(s_00011,aux5136,aux5137_BOOL);
constraint int_le_reif(s_00006, s_00011,aux5138_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux5134_BOOL,aux5135_BOOL,aux5137_BOOL,aux5138_BOOL],aux5139_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux5140_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux5141_BOOL);
constraint int_lin_eq([-1,1,1],[aux5142,2,s_00007],0);
constraint int_lt_reif(s_00011,aux5142,aux5143_BOOL);
constraint int_le_reif(s_00007, s_00011,aux5144_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux5140_BOOL,aux5141_BOOL,aux5143_BOOL,aux5144_BOOL],aux5145_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux5146_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux5147_BOOL);
constraint int_lin_eq([-1,1,1],[aux5148,1,s_00008],0);
constraint int_lt_reif(s_00011,aux5148,aux5149_BOOL);
constraint int_le_reif(s_00008, s_00011,aux5150_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux5146_BOOL,aux5147_BOOL,aux5149_BOOL,aux5150_BOOL],aux5151_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux5152_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux5153_BOOL);
constraint int_lin_eq([-1,1,1],[aux5154,2,s_00009],0);
constraint int_lt_reif(s_00011,aux5154,aux5155_BOOL);
constraint int_le_reif(s_00009, s_00011,aux5156_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux5152_BOOL,aux5153_BOOL,aux5155_BOOL,aux5156_BOOL],aux5157_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux5158_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux5159_BOOL);
constraint int_lin_eq([-1,1,1],[aux5160,1,s_00010],0);
constraint int_lt_reif(s_00011,aux5160,aux5161_BOOL);
constraint int_le_reif(s_00010, s_00011,aux5162_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux5158_BOOL,aux5159_BOOL,aux5161_BOOL,aux5162_BOOL],aux5163_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux5164_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux5165_BOOL);
constraint int_lin_eq([-1,1,1],[aux5166,2,s_00012],0);
constraint int_lt_reif(s_00011,aux5166,aux5167_BOOL);
constraint int_le_reif(s_00012, s_00011,aux5168_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux5164_BOOL,aux5165_BOOL,aux5167_BOOL,aux5168_BOOL],aux5169_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux5170_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux5171_BOOL);
constraint int_lin_eq([-1,1,1],[aux5172,1,s_00013],0);
constraint int_lt_reif(s_00011,aux5172,aux5173_BOOL);
constraint int_le_reif(s_00013, s_00011,aux5174_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux5170_BOOL,aux5171_BOOL,aux5173_BOOL,aux5174_BOOL],aux5175_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux5176_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux5177_BOOL);
constraint int_lin_eq([-1,1,1],[aux5178,4,s_00014],0);
constraint int_lt_reif(s_00011,aux5178,aux5179_BOOL);
constraint int_le_reif(s_00014, s_00011,aux5180_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux5176_BOOL,aux5177_BOOL,aux5179_BOOL,aux5180_BOOL],aux5181_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux5182_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux5183_BOOL);
constraint int_lin_eq([-1,1,1],[aux5184,2,s_00015],0);
constraint int_lt_reif(s_00011,aux5184,aux5185_BOOL);
constraint int_le_reif(s_00015, s_00011,aux5186_BOOL);
constraint array_bool_and([w_00002_00015_BOOL,aux5182_BOOL,aux5183_BOOL,aux5185_BOOL,aux5186_BOOL],aux5187_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux5188_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux5189_BOOL);
constraint int_lin_eq([-1,1,1],[aux5190,3,s_00016],0);
constraint int_lt_reif(s_00011,aux5190,aux5191_BOOL);
constraint int_le_reif(s_00016, s_00011,aux5192_BOOL);
constraint array_bool_and([w_00002_00016_BOOL,aux5188_BOOL,aux5189_BOOL,aux5191_BOOL,aux5192_BOOL],aux5193_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux5194_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux5195_BOOL);
constraint int_lin_eq([-1,1,1],[aux5196,1,s_00017],0);
constraint int_lt_reif(s_00011,aux5196,aux5197_BOOL);
constraint int_le_reif(s_00017, s_00011,aux5198_BOOL);
constraint array_bool_and([w_00002_00017_BOOL,aux5194_BOOL,aux5195_BOOL,aux5197_BOOL,aux5198_BOOL],aux5199_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux5200_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux5201_BOOL);
constraint int_lin_eq([-1,1,1],[aux5202,3,s_00018],0);
constraint int_lt_reif(s_00011,aux5202,aux5203_BOOL);
constraint int_le_reif(s_00018, s_00011,aux5204_BOOL);
constraint array_bool_and([w_00002_00018_BOOL,aux5200_BOOL,aux5201_BOOL,aux5203_BOOL,aux5204_BOOL],aux5205_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux5206_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux5207_BOOL);
constraint int_lin_eq([-1,1,1],[aux5208,2,s_00019],0);
constraint int_lt_reif(s_00011,aux5208,aux5209_BOOL);
constraint int_le_reif(s_00019, s_00011,aux5210_BOOL);
constraint array_bool_and([w_00002_00019_BOOL,aux5206_BOOL,aux5207_BOOL,aux5209_BOOL,aux5210_BOOL],aux5211_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux5212_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux5213_BOOL);
constraint int_lin_eq([-1,1,1],[aux5214,3,s_00020],0);
constraint int_lt_reif(s_00011,aux5214,aux5215_BOOL);
constraint int_le_reif(s_00020, s_00011,aux5216_BOOL);
constraint array_bool_and([w_00002_00020_BOOL,aux5212_BOOL,aux5213_BOOL,aux5215_BOOL,aux5216_BOOL],aux5217_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux5103_INTEGER,aux5109_INTEGER,aux5115_INTEGER,aux5121_INTEGER,aux5127_INTEGER,aux5133_INTEGER,aux5139_INTEGER,aux5145_INTEGER,aux5151_INTEGER,aux5157_INTEGER,aux5163_INTEGER,aux5169_INTEGER,aux5175_INTEGER,aux5181_INTEGER,aux5187_INTEGER,aux5193_INTEGER,aux5199_INTEGER,aux5205_INTEGER,aux5211_INTEGER,aux5217_INTEGER,1],0,aux5218_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux5219_BOOL);
constraint int_lin_eq([-1,1,1],[aux5220,2,s_00002],0);
constraint int_lt_reif(s_00002,aux5220,aux5221_BOOL);
constraint array_bool_and([w_00002_00002_BOOL,aux5219_BOOL,aux5221_BOOL],aux5222_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00001_INTEGER,aux5223_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux5224_BOOL);
constraint int_lin_eq([-1,1,1],[aux5225,1,s_00001],0);
constraint int_lt_reif(s_00002,aux5225,aux5226_BOOL);
constraint int_le_reif(s_00001, s_00002,aux5227_BOOL);
constraint array_bool_and([w_00002_00001_BOOL,aux5223_BOOL,aux5224_BOOL,aux5226_BOOL,aux5227_BOOL],aux5228_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux5229_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00003_INTEGER,aux5230_BOOL);
constraint int_lin_eq([-1,1,1],[aux5231,3,s_00003],0);
constraint int_lt_reif(s_00002,aux5231,aux5232_BOOL);
constraint int_le_reif(s_00003, s_00002,aux5233_BOOL);
constraint array_bool_and([w_00002_00003_BOOL,aux5229_BOOL,aux5230_BOOL,aux5232_BOOL,aux5233_BOOL],aux5234_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux5235_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00004_INTEGER,aux5236_BOOL);
constraint int_lin_eq([-1,1,1],[aux5237,2,s_00004],0);
constraint int_lt_reif(s_00002,aux5237,aux5238_BOOL);
constraint int_le_reif(s_00004, s_00002,aux5239_BOOL);
constraint array_bool_and([w_00002_00004_BOOL,aux5235_BOOL,aux5236_BOOL,aux5238_BOOL,aux5239_BOOL],aux5240_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux5241_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00005_INTEGER,aux5242_BOOL);
constraint int_lin_eq([-1,1,1],[aux5243,2,s_00005],0);
constraint int_lt_reif(s_00002,aux5243,aux5244_BOOL);
constraint int_le_reif(s_00005, s_00002,aux5245_BOOL);
constraint array_bool_and([w_00002_00005_BOOL,aux5241_BOOL,aux5242_BOOL,aux5244_BOOL,aux5245_BOOL],aux5246_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux5247_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00006_INTEGER,aux5248_BOOL);
constraint int_lin_eq([-1,1,1],[aux5249,3,s_00006],0);
constraint int_lt_reif(s_00002,aux5249,aux5250_BOOL);
constraint int_le_reif(s_00006, s_00002,aux5251_BOOL);
constraint array_bool_and([w_00002_00006_BOOL,aux5247_BOOL,aux5248_BOOL,aux5250_BOOL,aux5251_BOOL],aux5252_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux5253_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00007_INTEGER,aux5254_BOOL);
constraint int_lin_eq([-1,1,1],[aux5255,2,s_00007],0);
constraint int_lt_reif(s_00002,aux5255,aux5256_BOOL);
constraint int_le_reif(s_00007, s_00002,aux5257_BOOL);
constraint array_bool_and([w_00002_00007_BOOL,aux5253_BOOL,aux5254_BOOL,aux5256_BOOL,aux5257_BOOL],aux5258_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux5259_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00008_INTEGER,aux5260_BOOL);
constraint int_lin_eq([-1,1,1],[aux5261,1,s_00008],0);
constraint int_lt_reif(s_00002,aux5261,aux5262_BOOL);
constraint int_le_reif(s_00008, s_00002,aux5263_BOOL);
constraint array_bool_and([w_00002_00008_BOOL,aux5259_BOOL,aux5260_BOOL,aux5262_BOOL,aux5263_BOOL],aux5264_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux5265_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00009_INTEGER,aux5266_BOOL);
constraint int_lin_eq([-1,1,1],[aux5267,2,s_00009],0);
constraint int_lt_reif(s_00002,aux5267,aux5268_BOOL);
constraint int_le_reif(s_00009, s_00002,aux5269_BOOL);
constraint array_bool_and([w_00002_00009_BOOL,aux5265_BOOL,aux5266_BOOL,aux5268_BOOL,aux5269_BOOL],aux5270_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux5271_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00010_INTEGER,aux5272_BOOL);
constraint int_lin_eq([-1,1,1],[aux5273,1,s_00010],0);
constraint int_lt_reif(s_00002,aux5273,aux5274_BOOL);
constraint int_le_reif(s_00010, s_00002,aux5275_BOOL);
constraint array_bool_and([w_00002_00010_BOOL,aux5271_BOOL,aux5272_BOOL,aux5274_BOOL,aux5275_BOOL],aux5276_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux5277_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00011_INTEGER,aux5278_BOOL);
constraint int_lin_eq([-1,1,1],[aux5279,2,s_00011],0);
constraint int_lt_reif(s_00002,aux5279,aux5280_BOOL);
constraint int_le_reif(s_00011, s_00002,aux5281_BOOL);
constraint array_bool_and([w_00002_00011_BOOL,aux5277_BOOL,aux5278_BOOL,aux5280_BOOL,aux5281_BOOL],aux5282_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux5283_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00012_INTEGER,aux5284_BOOL);
constraint int_lin_eq([-1,1,1],[aux5285,2,s_00012],0);
constraint int_lt_reif(s_00002,aux5285,aux5286_BOOL);
constraint int_le_reif(s_00012, s_00002,aux5287_BOOL);
constraint array_bool_and([w_00002_00012_BOOL,aux5283_BOOL,aux5284_BOOL,aux5286_BOOL,aux5287_BOOL],aux5288_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux5289_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00013_INTEGER,aux5290_BOOL);
constraint int_lin_eq([-1,1,1],[aux5291,1,s_00013],0);
constraint int_lt_reif(s_00002,aux5291,aux5292_BOOL);
constraint int_le_reif(s_00013, s_00002,aux5293_BOOL);
constraint array_bool_and([w_00002_00013_BOOL,aux5289_BOOL,aux5290_BOOL,aux5292_BOOL,aux5293_BOOL],aux5294_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux5295_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00014_INTEGER,aux5296_BOOL);
constraint int_lin_eq([-1,1,1],[aux5297,4,s_00014],0);
constraint int_lt_reif(s_00002,aux5297,aux5298_BOOL);
constraint int_le_reif(s_00014, s_00002,aux5299_BOOL);
constraint array_bool_and([w_00002_00014_BOOL,aux5295_BOOL,aux5296_BOOL,aux5298_BOOL,aux5299_BOOL],aux5300_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux5301_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00015_INTEGER,aux5302_BOOL);
constraint int_lin_eq([-1,1,1],[aux5303,2,s_00015],0);
constraint int_lt_reif(s_00002,aux5303,aux5304_BOOL);
constraint int_le_reif(s_00015, s_00002,aux5305_BOOL);
constraint array_bool_and([w_00002_00015_BOOL,aux5301_BOOL,aux5302_BOOL,aux5304_BOOL,aux5305_BOOL],aux5306_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux5307_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00016_INTEGER,aux5308_BOOL);
constraint int_lin_eq([-1,1,1],[aux5309,3,s_00016],0);
constraint int_lt_reif(s_00002,aux5309,aux5310_BOOL);
constraint int_le_reif(s_00016, s_00002,aux5311_BOOL);
constraint array_bool_and([w_00002_00016_BOOL,aux5307_BOOL,aux5308_BOOL,aux5310_BOOL,aux5311_BOOL],aux5312_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux5313_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00017_INTEGER,aux5314_BOOL);
constraint int_lin_eq([-1,1,1],[aux5315,1,s_00017],0);
constraint int_lt_reif(s_00002,aux5315,aux5316_BOOL);
constraint int_le_reif(s_00017, s_00002,aux5317_BOOL);
constraint array_bool_and([w_00002_00017_BOOL,aux5313_BOOL,aux5314_BOOL,aux5316_BOOL,aux5317_BOOL],aux5318_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux5319_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00018_INTEGER,aux5320_BOOL);
constraint int_lin_eq([-1,1,1],[aux5321,3,s_00018],0);
constraint int_lt_reif(s_00002,aux5321,aux5322_BOOL);
constraint int_le_reif(s_00018, s_00002,aux5323_BOOL);
constraint array_bool_and([w_00002_00018_BOOL,aux5319_BOOL,aux5320_BOOL,aux5322_BOOL,aux5323_BOOL],aux5324_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux5325_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00019_INTEGER,aux5326_BOOL);
constraint int_lin_eq([-1,1,1],[aux5327,2,s_00019],0);
constraint int_lt_reif(s_00002,aux5327,aux5328_BOOL);
constraint int_le_reif(s_00019, s_00002,aux5329_BOOL);
constraint array_bool_and([w_00002_00019_BOOL,aux5325_BOOL,aux5326_BOOL,aux5328_BOOL,aux5329_BOOL],aux5330_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00002_INTEGER,aux5331_BOOL);
constraint int_eq_reif(1,TWorkers_00002_00020_INTEGER,aux5332_BOOL);
constraint int_lin_eq([-1,1,1],[aux5333,3,s_00020],0);
constraint int_lt_reif(s_00002,aux5333,aux5334_BOOL);
constraint int_le_reif(s_00020, s_00002,aux5335_BOOL);
constraint array_bool_and([w_00002_00020_BOOL,aux5331_BOOL,aux5332_BOOL,aux5334_BOOL,aux5335_BOOL],aux5336_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux5222_INTEGER,aux5228_INTEGER,aux5234_INTEGER,aux5240_INTEGER,aux5246_INTEGER,aux5252_INTEGER,aux5258_INTEGER,aux5264_INTEGER,aux5270_INTEGER,aux5276_INTEGER,aux5282_INTEGER,aux5288_INTEGER,aux5294_INTEGER,aux5300_INTEGER,aux5306_INTEGER,aux5312_INTEGER,aux5318_INTEGER,aux5324_INTEGER,aux5330_INTEGER,aux5336_INTEGER,1],0,aux5337_BOOL);
constraint array_bool_and([aux3076_BOOL,aux3195_BOOL,aux3314_BOOL,aux3433_BOOL,aux3552_BOOL,aux3671_BOOL,aux3790_BOOL,aux3909_BOOL,aux4028_BOOL,aux4147_BOOL,aux4266_BOOL,aux4385_BOOL,aux4504_BOOL,aux4623_BOOL,aux4742_BOOL,aux4861_BOOL,aux4980_BOOL,aux5099_BOOL,aux5218_BOOL,aux5337_BOOL],aux5338_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[TWorkers_00002_00001_INTEGER,TWorkers_00002_00002_INTEGER,TWorkers_00002_00003_INTEGER,TWorkers_00002_00004_INTEGER,TWorkers_00002_00005_INTEGER,TWorkers_00002_00006_INTEGER,TWorkers_00002_00007_INTEGER,TWorkers_00002_00008_INTEGER,TWorkers_00002_00009_INTEGER,TWorkers_00002_00010_INTEGER,TWorkers_00002_00011_INTEGER,TWorkers_00002_00012_INTEGER,TWorkers_00002_00013_INTEGER,TWorkers_00002_00014_INTEGER,TWorkers_00002_00015_INTEGER,TWorkers_00002_00016_INTEGER,TWorkers_00002_00017_INTEGER,TWorkers_00002_00018_INTEGER,TWorkers_00002_00019_INTEGER,TWorkers_00002_00020_INTEGER,1],0,aux5339_BOOL);
constraint int_lin_eq([-1,1,1],[aux5340,1,s_00001],0);
constraint int_lt_reif(s_00015,aux5340,aux5341_BOOL);
constraint int_le_reif(s_00001, s_00015,aux5342_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux5343_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux5344_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux5341_BOOL,aux5342_BOOL,aux5343_BOOL,aux5344_BOOL],aux5345_BOOL);
constraint int_lin_eq([-1,1,1],[aux5346,2,s_00002],0);
constraint int_lt_reif(s_00015,aux5346,aux5347_BOOL);
constraint int_le_reif(s_00002, s_00015,aux5348_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux5349_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux5350_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux5347_BOOL,aux5348_BOOL,aux5349_BOOL,aux5350_BOOL],aux5351_BOOL);
constraint int_lin_eq([-1,1,1],[aux5352,3,s_00003],0);
constraint int_lt_reif(s_00015,aux5352,aux5353_BOOL);
constraint int_le_reif(s_00003, s_00015,aux5354_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux5355_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux5356_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux5353_BOOL,aux5354_BOOL,aux5355_BOOL,aux5356_BOOL],aux5357_BOOL);
constraint int_lin_eq([-1,1,1],[aux5358,2,s_00004],0);
constraint int_lt_reif(s_00015,aux5358,aux5359_BOOL);
constraint int_le_reif(s_00004, s_00015,aux5360_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux5361_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux5362_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux5359_BOOL,aux5360_BOOL,aux5361_BOOL,aux5362_BOOL],aux5363_BOOL);
constraint int_lin_eq([-1,1,1],[aux5364,2,s_00005],0);
constraint int_lt_reif(s_00015,aux5364,aux5365_BOOL);
constraint int_le_reif(s_00005, s_00015,aux5366_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux5367_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux5368_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux5365_BOOL,aux5366_BOOL,aux5367_BOOL,aux5368_BOOL],aux5369_BOOL);
constraint int_lin_eq([-1,1,1],[aux5370,3,s_00006],0);
constraint int_lt_reif(s_00015,aux5370,aux5371_BOOL);
constraint int_le_reif(s_00006, s_00015,aux5372_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux5373_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux5374_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux5371_BOOL,aux5372_BOOL,aux5373_BOOL,aux5374_BOOL],aux5375_BOOL);
constraint int_lin_eq([-1,1,1],[aux5376,2,s_00007],0);
constraint int_lt_reif(s_00015,aux5376,aux5377_BOOL);
constraint int_le_reif(s_00007, s_00015,aux5378_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux5379_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux5380_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux5377_BOOL,aux5378_BOOL,aux5379_BOOL,aux5380_BOOL],aux5381_BOOL);
constraint int_lin_eq([-1,1,1],[aux5382,1,s_00008],0);
constraint int_lt_reif(s_00015,aux5382,aux5383_BOOL);
constraint int_le_reif(s_00008, s_00015,aux5384_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux5385_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux5386_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux5383_BOOL,aux5384_BOOL,aux5385_BOOL,aux5386_BOOL],aux5387_BOOL);
constraint int_lin_eq([-1,1,1],[aux5388,2,s_00009],0);
constraint int_lt_reif(s_00015,aux5388,aux5389_BOOL);
constraint int_le_reif(s_00009, s_00015,aux5390_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux5391_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux5392_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux5389_BOOL,aux5390_BOOL,aux5391_BOOL,aux5392_BOOL],aux5393_BOOL);
constraint int_lin_eq([-1,1,1],[aux5394,1,s_00010],0);
constraint int_lt_reif(s_00015,aux5394,aux5395_BOOL);
constraint int_le_reif(s_00010, s_00015,aux5396_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux5397_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux5398_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux5395_BOOL,aux5396_BOOL,aux5397_BOOL,aux5398_BOOL],aux5399_BOOL);
constraint int_lin_eq([-1,1,1],[aux5400,2,s_00011],0);
constraint int_lt_reif(s_00015,aux5400,aux5401_BOOL);
constraint int_le_reif(s_00011, s_00015,aux5402_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux5403_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux5404_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux5401_BOOL,aux5402_BOOL,aux5403_BOOL,aux5404_BOOL],aux5405_BOOL);
constraint int_lin_eq([-1,1,1],[aux5406,2,s_00012],0);
constraint int_lt_reif(s_00015,aux5406,aux5407_BOOL);
constraint int_le_reif(s_00012, s_00015,aux5408_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux5409_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux5410_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux5407_BOOL,aux5408_BOOL,aux5409_BOOL,aux5410_BOOL],aux5411_BOOL);
constraint int_lin_eq([-1,1,1],[aux5412,1,s_00013],0);
constraint int_lt_reif(s_00015,aux5412,aux5413_BOOL);
constraint int_le_reif(s_00013, s_00015,aux5414_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux5415_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux5416_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux5413_BOOL,aux5414_BOOL,aux5415_BOOL,aux5416_BOOL],aux5417_BOOL);
constraint int_lin_eq([-1,1,1],[aux5418,4,s_00014],0);
constraint int_lt_reif(s_00015,aux5418,aux5419_BOOL);
constraint int_le_reif(s_00014, s_00015,aux5420_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux5421_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux5422_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux5419_BOOL,aux5420_BOOL,aux5421_BOOL,aux5422_BOOL],aux5423_BOOL);
constraint int_lin_eq([-1,1,1],[aux5424,1,s_00017],0);
constraint int_lt_reif(s_00015,aux5424,aux5425_BOOL);
constraint int_le_reif(s_00017, s_00015,aux5426_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux5427_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux5428_BOOL);
constraint array_bool_and([w_00003_00017_BOOL,aux5425_BOOL,aux5426_BOOL,aux5427_BOOL,aux5428_BOOL],aux5429_BOOL);
constraint int_lin_eq([-1,1,1],[aux5430,3,s_00016],0);
constraint int_lt_reif(s_00015,aux5430,aux5431_BOOL);
constraint int_le_reif(s_00016, s_00015,aux5432_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux5433_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux5434_BOOL);
constraint array_bool_and([w_00003_00016_BOOL,aux5431_BOOL,aux5432_BOOL,aux5433_BOOL,aux5434_BOOL],aux5435_BOOL);
constraint int_lin_eq([-1,1,1],[aux5436,3,s_00018],0);
constraint int_lt_reif(s_00015,aux5436,aux5437_BOOL);
constraint int_le_reif(s_00018, s_00015,aux5438_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux5439_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux5440_BOOL);
constraint array_bool_and([w_00003_00018_BOOL,aux5437_BOOL,aux5438_BOOL,aux5439_BOOL,aux5440_BOOL],aux5441_BOOL);
constraint int_lin_eq([-1,1,1],[aux5442,2,s_00019],0);
constraint int_lt_reif(s_00015,aux5442,aux5443_BOOL);
constraint int_le_reif(s_00019, s_00015,aux5444_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux5445_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux5446_BOOL);
constraint array_bool_and([w_00003_00019_BOOL,aux5443_BOOL,aux5444_BOOL,aux5445_BOOL,aux5446_BOOL],aux5447_BOOL);
constraint int_lin_eq([-1,1,1],[aux5448,3,s_00020],0);
constraint int_lt_reif(s_00015,aux5448,aux5449_BOOL);
constraint int_le_reif(s_00020, s_00015,aux5450_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux5451_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux5452_BOOL);
constraint array_bool_and([w_00003_00020_BOOL,aux5449_BOOL,aux5450_BOOL,aux5451_BOOL,aux5452_BOOL],aux5453_BOOL);
constraint int_lin_eq([-1,1,1],[aux5454,2,s_00015],0);
constraint int_lt_reif(s_00015,aux5454,aux5455_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux5456_BOOL);
constraint array_bool_and([w_00003_00015_BOOL,aux5455_BOOL,aux5456_BOOL],aux5457_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux5345_INTEGER,aux5351_INTEGER,aux5357_INTEGER,aux5363_INTEGER,aux5369_INTEGER,aux5375_INTEGER,aux5381_INTEGER,aux5387_INTEGER,aux5393_INTEGER,aux5399_INTEGER,aux5405_INTEGER,aux5411_INTEGER,aux5417_INTEGER,aux5423_INTEGER,aux5429_INTEGER,aux5435_INTEGER,aux5441_INTEGER,aux5447_INTEGER,aux5453_INTEGER,aux5457_INTEGER,1],0,aux5458_BOOL);
constraint int_lin_eq([-1,1,1],[aux5459,1,s_00001],0);
constraint int_lt_reif(s_00018,aux5459,aux5460_BOOL);
constraint int_le_reif(s_00001, s_00018,aux5461_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux5462_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux5463_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux5460_BOOL,aux5461_BOOL,aux5462_BOOL,aux5463_BOOL],aux5464_BOOL);
constraint int_lin_eq([-1,1,1],[aux5465,2,s_00002],0);
constraint int_lt_reif(s_00018,aux5465,aux5466_BOOL);
constraint int_le_reif(s_00002, s_00018,aux5467_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux5468_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux5469_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux5466_BOOL,aux5467_BOOL,aux5468_BOOL,aux5469_BOOL],aux5470_BOOL);
constraint int_lin_eq([-1,1,1],[aux5471,3,s_00003],0);
constraint int_lt_reif(s_00018,aux5471,aux5472_BOOL);
constraint int_le_reif(s_00003, s_00018,aux5473_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux5474_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux5475_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux5472_BOOL,aux5473_BOOL,aux5474_BOOL,aux5475_BOOL],aux5476_BOOL);
constraint int_lin_eq([-1,1,1],[aux5477,2,s_00004],0);
constraint int_lt_reif(s_00018,aux5477,aux5478_BOOL);
constraint int_le_reif(s_00004, s_00018,aux5479_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux5480_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux5481_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux5478_BOOL,aux5479_BOOL,aux5480_BOOL,aux5481_BOOL],aux5482_BOOL);
constraint int_lin_eq([-1,1,1],[aux5483,2,s_00005],0);
constraint int_lt_reif(s_00018,aux5483,aux5484_BOOL);
constraint int_le_reif(s_00005, s_00018,aux5485_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux5486_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux5487_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux5484_BOOL,aux5485_BOOL,aux5486_BOOL,aux5487_BOOL],aux5488_BOOL);
constraint int_lin_eq([-1,1,1],[aux5489,3,s_00006],0);
constraint int_lt_reif(s_00018,aux5489,aux5490_BOOL);
constraint int_le_reif(s_00006, s_00018,aux5491_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux5492_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux5493_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux5490_BOOL,aux5491_BOOL,aux5492_BOOL,aux5493_BOOL],aux5494_BOOL);
constraint int_lin_eq([-1,1,1],[aux5495,2,s_00007],0);
constraint int_lt_reif(s_00018,aux5495,aux5496_BOOL);
constraint int_le_reif(s_00007, s_00018,aux5497_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux5498_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux5499_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux5496_BOOL,aux5497_BOOL,aux5498_BOOL,aux5499_BOOL],aux5500_BOOL);
constraint int_lin_eq([-1,1,1],[aux5501,1,s_00008],0);
constraint int_lt_reif(s_00018,aux5501,aux5502_BOOL);
constraint int_le_reif(s_00008, s_00018,aux5503_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux5504_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux5505_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux5502_BOOL,aux5503_BOOL,aux5504_BOOL,aux5505_BOOL],aux5506_BOOL);
constraint int_lin_eq([-1,1,1],[aux5507,2,s_00009],0);
constraint int_lt_reif(s_00018,aux5507,aux5508_BOOL);
constraint int_le_reif(s_00009, s_00018,aux5509_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux5510_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux5511_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux5508_BOOL,aux5509_BOOL,aux5510_BOOL,aux5511_BOOL],aux5512_BOOL);
constraint int_lin_eq([-1,1,1],[aux5513,1,s_00010],0);
constraint int_lt_reif(s_00018,aux5513,aux5514_BOOL);
constraint int_le_reif(s_00010, s_00018,aux5515_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux5516_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux5517_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux5514_BOOL,aux5515_BOOL,aux5516_BOOL,aux5517_BOOL],aux5518_BOOL);
constraint int_lin_eq([-1,1,1],[aux5519,2,s_00011],0);
constraint int_lt_reif(s_00018,aux5519,aux5520_BOOL);
constraint int_le_reif(s_00011, s_00018,aux5521_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux5522_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux5523_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux5520_BOOL,aux5521_BOOL,aux5522_BOOL,aux5523_BOOL],aux5524_BOOL);
constraint int_lin_eq([-1,1,1],[aux5525,2,s_00012],0);
constraint int_lt_reif(s_00018,aux5525,aux5526_BOOL);
constraint int_le_reif(s_00012, s_00018,aux5527_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux5528_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux5529_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux5526_BOOL,aux5527_BOOL,aux5528_BOOL,aux5529_BOOL],aux5530_BOOL);
constraint int_lin_eq([-1,1,1],[aux5531,1,s_00013],0);
constraint int_lt_reif(s_00018,aux5531,aux5532_BOOL);
constraint int_le_reif(s_00013, s_00018,aux5533_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux5534_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux5535_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux5532_BOOL,aux5533_BOOL,aux5534_BOOL,aux5535_BOOL],aux5536_BOOL);
constraint int_lin_eq([-1,1,1],[aux5537,2,s_00015],0);
constraint int_lt_reif(s_00018,aux5537,aux5538_BOOL);
constraint int_le_reif(s_00015, s_00018,aux5539_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux5540_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux5541_BOOL);
constraint array_bool_and([w_00003_00015_BOOL,aux5538_BOOL,aux5539_BOOL,aux5540_BOOL,aux5541_BOOL],aux5542_BOOL);
constraint int_lin_eq([-1,1,1],[aux5543,4,s_00014],0);
constraint int_lt_reif(s_00018,aux5543,aux5544_BOOL);
constraint int_le_reif(s_00014, s_00018,aux5545_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux5546_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux5547_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux5544_BOOL,aux5545_BOOL,aux5546_BOOL,aux5547_BOOL],aux5548_BOOL);
constraint int_lin_eq([-1,1,1],[aux5549,1,s_00017],0);
constraint int_lt_reif(s_00018,aux5549,aux5550_BOOL);
constraint int_le_reif(s_00017, s_00018,aux5551_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux5552_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux5553_BOOL);
constraint array_bool_and([w_00003_00017_BOOL,aux5550_BOOL,aux5551_BOOL,aux5552_BOOL,aux5553_BOOL],aux5554_BOOL);
constraint int_lin_eq([-1,1,1],[aux5555,3,s_00016],0);
constraint int_lt_reif(s_00018,aux5555,aux5556_BOOL);
constraint int_le_reif(s_00016, s_00018,aux5557_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux5558_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux5559_BOOL);
constraint array_bool_and([w_00003_00016_BOOL,aux5556_BOOL,aux5557_BOOL,aux5558_BOOL,aux5559_BOOL],aux5560_BOOL);
constraint int_lin_eq([-1,1,1],[aux5561,2,s_00019],0);
constraint int_lt_reif(s_00018,aux5561,aux5562_BOOL);
constraint int_le_reif(s_00019, s_00018,aux5563_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux5564_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux5565_BOOL);
constraint array_bool_and([w_00003_00019_BOOL,aux5562_BOOL,aux5563_BOOL,aux5564_BOOL,aux5565_BOOL],aux5566_BOOL);
constraint int_lin_eq([-1,1,1],[aux5567,3,s_00020],0);
constraint int_lt_reif(s_00018,aux5567,aux5568_BOOL);
constraint int_le_reif(s_00020, s_00018,aux5569_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux5570_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux5571_BOOL);
constraint array_bool_and([w_00003_00020_BOOL,aux5568_BOOL,aux5569_BOOL,aux5570_BOOL,aux5571_BOOL],aux5572_BOOL);
constraint int_lin_eq([-1,1,1],[aux5573,3,s_00018],0);
constraint int_lt_reif(s_00018,aux5573,aux5574_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux5575_BOOL);
constraint array_bool_and([w_00003_00018_BOOL,aux5574_BOOL,aux5575_BOOL],aux5576_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux5464_INTEGER,aux5470_INTEGER,aux5476_INTEGER,aux5482_INTEGER,aux5488_INTEGER,aux5494_INTEGER,aux5500_INTEGER,aux5506_INTEGER,aux5512_INTEGER,aux5518_INTEGER,aux5524_INTEGER,aux5530_INTEGER,aux5536_INTEGER,aux5542_INTEGER,aux5548_INTEGER,aux5554_INTEGER,aux5560_INTEGER,aux5566_INTEGER,aux5572_INTEGER,aux5576_INTEGER,1],0,aux5577_BOOL);
constraint int_lin_eq([-1,1,1],[aux5578,1,s_00001],0);
constraint int_lt_reif(s_00002,aux5578,aux5579_BOOL);
constraint int_le_reif(s_00001, s_00002,aux5580_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux5581_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux5582_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux5579_BOOL,aux5580_BOOL,aux5581_BOOL,aux5582_BOOL],aux5583_BOOL);
constraint int_lin_eq([-1,1,1],[aux5584,3,s_00003],0);
constraint int_lt_reif(s_00002,aux5584,aux5585_BOOL);
constraint int_le_reif(s_00003, s_00002,aux5586_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux5587_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux5588_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux5585_BOOL,aux5586_BOOL,aux5587_BOOL,aux5588_BOOL],aux5589_BOOL);
constraint int_lin_eq([-1,1,1],[aux5590,2,s_00004],0);
constraint int_lt_reif(s_00002,aux5590,aux5591_BOOL);
constraint int_le_reif(s_00004, s_00002,aux5592_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux5593_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux5594_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux5591_BOOL,aux5592_BOOL,aux5593_BOOL,aux5594_BOOL],aux5595_BOOL);
constraint int_lin_eq([-1,1,1],[aux5596,2,s_00005],0);
constraint int_lt_reif(s_00002,aux5596,aux5597_BOOL);
constraint int_le_reif(s_00005, s_00002,aux5598_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux5599_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux5600_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux5597_BOOL,aux5598_BOOL,aux5599_BOOL,aux5600_BOOL],aux5601_BOOL);
constraint int_lin_eq([-1,1,1],[aux5602,3,s_00006],0);
constraint int_lt_reif(s_00002,aux5602,aux5603_BOOL);
constraint int_le_reif(s_00006, s_00002,aux5604_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux5605_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux5606_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux5603_BOOL,aux5604_BOOL,aux5605_BOOL,aux5606_BOOL],aux5607_BOOL);
constraint int_lin_eq([-1,1,1],[aux5608,2,s_00007],0);
constraint int_lt_reif(s_00002,aux5608,aux5609_BOOL);
constraint int_le_reif(s_00007, s_00002,aux5610_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux5611_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux5612_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux5609_BOOL,aux5610_BOOL,aux5611_BOOL,aux5612_BOOL],aux5613_BOOL);
constraint int_lin_eq([-1,1,1],[aux5614,1,s_00008],0);
constraint int_lt_reif(s_00002,aux5614,aux5615_BOOL);
constraint int_le_reif(s_00008, s_00002,aux5616_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux5617_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux5618_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux5615_BOOL,aux5616_BOOL,aux5617_BOOL,aux5618_BOOL],aux5619_BOOL);
constraint int_lin_eq([-1,1,1],[aux5620,2,s_00009],0);
constraint int_lt_reif(s_00002,aux5620,aux5621_BOOL);
constraint int_le_reif(s_00009, s_00002,aux5622_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux5623_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux5624_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux5621_BOOL,aux5622_BOOL,aux5623_BOOL,aux5624_BOOL],aux5625_BOOL);
constraint int_lin_eq([-1,1,1],[aux5626,1,s_00010],0);
constraint int_lt_reif(s_00002,aux5626,aux5627_BOOL);
constraint int_le_reif(s_00010, s_00002,aux5628_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux5629_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux5630_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux5627_BOOL,aux5628_BOOL,aux5629_BOOL,aux5630_BOOL],aux5631_BOOL);
constraint int_lin_eq([-1,1,1],[aux5632,2,s_00011],0);
constraint int_lt_reif(s_00002,aux5632,aux5633_BOOL);
constraint int_le_reif(s_00011, s_00002,aux5634_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux5635_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux5636_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux5633_BOOL,aux5634_BOOL,aux5635_BOOL,aux5636_BOOL],aux5637_BOOL);
constraint int_lin_eq([-1,1,1],[aux5638,2,s_00012],0);
constraint int_lt_reif(s_00002,aux5638,aux5639_BOOL);
constraint int_le_reif(s_00012, s_00002,aux5640_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux5641_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux5642_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux5639_BOOL,aux5640_BOOL,aux5641_BOOL,aux5642_BOOL],aux5643_BOOL);
constraint int_lin_eq([-1,1,1],[aux5644,1,s_00013],0);
constraint int_lt_reif(s_00002,aux5644,aux5645_BOOL);
constraint int_le_reif(s_00013, s_00002,aux5646_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux5647_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux5648_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux5645_BOOL,aux5646_BOOL,aux5647_BOOL,aux5648_BOOL],aux5649_BOOL);
constraint int_lin_eq([-1,1,1],[aux5650,2,s_00015],0);
constraint int_lt_reif(s_00002,aux5650,aux5651_BOOL);
constraint int_le_reif(s_00015, s_00002,aux5652_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux5653_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux5654_BOOL);
constraint array_bool_and([w_00003_00015_BOOL,aux5651_BOOL,aux5652_BOOL,aux5653_BOOL,aux5654_BOOL],aux5655_BOOL);
constraint int_lin_eq([-1,1,1],[aux5656,4,s_00014],0);
constraint int_lt_reif(s_00002,aux5656,aux5657_BOOL);
constraint int_le_reif(s_00014, s_00002,aux5658_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux5659_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux5660_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux5657_BOOL,aux5658_BOOL,aux5659_BOOL,aux5660_BOOL],aux5661_BOOL);
constraint int_lin_eq([-1,1,1],[aux5662,1,s_00017],0);
constraint int_lt_reif(s_00002,aux5662,aux5663_BOOL);
constraint int_le_reif(s_00017, s_00002,aux5664_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux5665_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux5666_BOOL);
constraint array_bool_and([w_00003_00017_BOOL,aux5663_BOOL,aux5664_BOOL,aux5665_BOOL,aux5666_BOOL],aux5667_BOOL);
constraint int_lin_eq([-1,1,1],[aux5668,3,s_00016],0);
constraint int_lt_reif(s_00002,aux5668,aux5669_BOOL);
constraint int_le_reif(s_00016, s_00002,aux5670_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux5671_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux5672_BOOL);
constraint array_bool_and([w_00003_00016_BOOL,aux5669_BOOL,aux5670_BOOL,aux5671_BOOL,aux5672_BOOL],aux5673_BOOL);
constraint int_lin_eq([-1,1,1],[aux5674,3,s_00018],0);
constraint int_lt_reif(s_00002,aux5674,aux5675_BOOL);
constraint int_le_reif(s_00018, s_00002,aux5676_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux5677_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux5678_BOOL);
constraint array_bool_and([w_00003_00018_BOOL,aux5675_BOOL,aux5676_BOOL,aux5677_BOOL,aux5678_BOOL],aux5679_BOOL);
constraint int_lin_eq([-1,1,1],[aux5680,2,s_00019],0);
constraint int_lt_reif(s_00002,aux5680,aux5681_BOOL);
constraint int_le_reif(s_00019, s_00002,aux5682_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux5683_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux5684_BOOL);
constraint array_bool_and([w_00003_00019_BOOL,aux5681_BOOL,aux5682_BOOL,aux5683_BOOL,aux5684_BOOL],aux5685_BOOL);
constraint int_lin_eq([-1,1,1],[aux5686,3,s_00020],0);
constraint int_lt_reif(s_00002,aux5686,aux5687_BOOL);
constraint int_le_reif(s_00020, s_00002,aux5688_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux5689_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux5690_BOOL);
constraint array_bool_and([w_00003_00020_BOOL,aux5687_BOOL,aux5688_BOOL,aux5689_BOOL,aux5690_BOOL],aux5691_BOOL);
constraint int_lin_eq([-1,1,1],[aux5692,2,s_00002],0);
constraint int_lt_reif(s_00002,aux5692,aux5693_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux5694_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux5693_BOOL,aux5694_BOOL],aux5695_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux5583_INTEGER,aux5589_INTEGER,aux5595_INTEGER,aux5601_INTEGER,aux5607_INTEGER,aux5613_INTEGER,aux5619_INTEGER,aux5625_INTEGER,aux5631_INTEGER,aux5637_INTEGER,aux5643_INTEGER,aux5649_INTEGER,aux5655_INTEGER,aux5661_INTEGER,aux5667_INTEGER,aux5673_INTEGER,aux5679_INTEGER,aux5685_INTEGER,aux5691_INTEGER,aux5695_INTEGER,1],0,aux5696_BOOL);
constraint int_lin_eq([-1,1,1],[aux5697,1,s_00001],0);
constraint int_lt_reif(s_00013,aux5697,aux5698_BOOL);
constraint int_le_reif(s_00001, s_00013,aux5699_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux5700_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux5701_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux5698_BOOL,aux5699_BOOL,aux5700_BOOL,aux5701_BOOL],aux5702_BOOL);
constraint int_lin_eq([-1,1,1],[aux5703,2,s_00002],0);
constraint int_lt_reif(s_00013,aux5703,aux5704_BOOL);
constraint int_le_reif(s_00002, s_00013,aux5705_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux5706_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux5707_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux5704_BOOL,aux5705_BOOL,aux5706_BOOL,aux5707_BOOL],aux5708_BOOL);
constraint int_lin_eq([-1,1,1],[aux5709,3,s_00003],0);
constraint int_lt_reif(s_00013,aux5709,aux5710_BOOL);
constraint int_le_reif(s_00003, s_00013,aux5711_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux5712_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux5713_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux5710_BOOL,aux5711_BOOL,aux5712_BOOL,aux5713_BOOL],aux5714_BOOL);
constraint int_lin_eq([-1,1,1],[aux5715,2,s_00004],0);
constraint int_lt_reif(s_00013,aux5715,aux5716_BOOL);
constraint int_le_reif(s_00004, s_00013,aux5717_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux5718_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux5719_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux5716_BOOL,aux5717_BOOL,aux5718_BOOL,aux5719_BOOL],aux5720_BOOL);
constraint int_lin_eq([-1,1,1],[aux5721,2,s_00005],0);
constraint int_lt_reif(s_00013,aux5721,aux5722_BOOL);
constraint int_le_reif(s_00005, s_00013,aux5723_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux5724_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux5725_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux5722_BOOL,aux5723_BOOL,aux5724_BOOL,aux5725_BOOL],aux5726_BOOL);
constraint int_lin_eq([-1,1,1],[aux5727,3,s_00006],0);
constraint int_lt_reif(s_00013,aux5727,aux5728_BOOL);
constraint int_le_reif(s_00006, s_00013,aux5729_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux5730_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux5731_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux5728_BOOL,aux5729_BOOL,aux5730_BOOL,aux5731_BOOL],aux5732_BOOL);
constraint int_lin_eq([-1,1,1],[aux5733,2,s_00007],0);
constraint int_lt_reif(s_00013,aux5733,aux5734_BOOL);
constraint int_le_reif(s_00007, s_00013,aux5735_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux5736_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux5737_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux5734_BOOL,aux5735_BOOL,aux5736_BOOL,aux5737_BOOL],aux5738_BOOL);
constraint int_lin_eq([-1,1,1],[aux5739,1,s_00008],0);
constraint int_lt_reif(s_00013,aux5739,aux5740_BOOL);
constraint int_le_reif(s_00008, s_00013,aux5741_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux5742_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux5743_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux5740_BOOL,aux5741_BOOL,aux5742_BOOL,aux5743_BOOL],aux5744_BOOL);
constraint int_lin_eq([-1,1,1],[aux5745,2,s_00009],0);
constraint int_lt_reif(s_00013,aux5745,aux5746_BOOL);
constraint int_le_reif(s_00009, s_00013,aux5747_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux5748_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux5749_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux5746_BOOL,aux5747_BOOL,aux5748_BOOL,aux5749_BOOL],aux5750_BOOL);
constraint int_lin_eq([-1,1,1],[aux5751,1,s_00010],0);
constraint int_lt_reif(s_00013,aux5751,aux5752_BOOL);
constraint int_le_reif(s_00010, s_00013,aux5753_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux5754_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux5755_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux5752_BOOL,aux5753_BOOL,aux5754_BOOL,aux5755_BOOL],aux5756_BOOL);
constraint int_lin_eq([-1,1,1],[aux5757,2,s_00011],0);
constraint int_lt_reif(s_00013,aux5757,aux5758_BOOL);
constraint int_le_reif(s_00011, s_00013,aux5759_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux5760_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux5761_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux5758_BOOL,aux5759_BOOL,aux5760_BOOL,aux5761_BOOL],aux5762_BOOL);
constraint int_lin_eq([-1,1,1],[aux5763,2,s_00012],0);
constraint int_lt_reif(s_00013,aux5763,aux5764_BOOL);
constraint int_le_reif(s_00012, s_00013,aux5765_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux5766_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux5767_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux5764_BOOL,aux5765_BOOL,aux5766_BOOL,aux5767_BOOL],aux5768_BOOL);
constraint int_lin_eq([-1,1,1],[aux5769,2,s_00015],0);
constraint int_lt_reif(s_00013,aux5769,aux5770_BOOL);
constraint int_le_reif(s_00015, s_00013,aux5771_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux5772_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux5773_BOOL);
constraint array_bool_and([w_00003_00015_BOOL,aux5770_BOOL,aux5771_BOOL,aux5772_BOOL,aux5773_BOOL],aux5774_BOOL);
constraint int_lin_eq([-1,1,1],[aux5775,4,s_00014],0);
constraint int_lt_reif(s_00013,aux5775,aux5776_BOOL);
constraint int_le_reif(s_00014, s_00013,aux5777_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux5778_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux5779_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux5776_BOOL,aux5777_BOOL,aux5778_BOOL,aux5779_BOOL],aux5780_BOOL);
constraint int_lin_eq([-1,1,1],[aux5781,1,s_00017],0);
constraint int_lt_reif(s_00013,aux5781,aux5782_BOOL);
constraint int_le_reif(s_00017, s_00013,aux5783_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux5784_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux5785_BOOL);
constraint array_bool_and([w_00003_00017_BOOL,aux5782_BOOL,aux5783_BOOL,aux5784_BOOL,aux5785_BOOL],aux5786_BOOL);
constraint int_lin_eq([-1,1,1],[aux5787,3,s_00016],0);
constraint int_lt_reif(s_00013,aux5787,aux5788_BOOL);
constraint int_le_reif(s_00016, s_00013,aux5789_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux5790_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux5791_BOOL);
constraint array_bool_and([w_00003_00016_BOOL,aux5788_BOOL,aux5789_BOOL,aux5790_BOOL,aux5791_BOOL],aux5792_BOOL);
constraint int_lin_eq([-1,1,1],[aux5793,3,s_00018],0);
constraint int_lt_reif(s_00013,aux5793,aux5794_BOOL);
constraint int_le_reif(s_00018, s_00013,aux5795_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux5796_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux5797_BOOL);
constraint array_bool_and([w_00003_00018_BOOL,aux5794_BOOL,aux5795_BOOL,aux5796_BOOL,aux5797_BOOL],aux5798_BOOL);
constraint int_lin_eq([-1,1,1],[aux5799,2,s_00019],0);
constraint int_lt_reif(s_00013,aux5799,aux5800_BOOL);
constraint int_le_reif(s_00019, s_00013,aux5801_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux5802_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux5803_BOOL);
constraint array_bool_and([w_00003_00019_BOOL,aux5800_BOOL,aux5801_BOOL,aux5802_BOOL,aux5803_BOOL],aux5804_BOOL);
constraint int_lin_eq([-1,1,1],[aux5805,3,s_00020],0);
constraint int_lt_reif(s_00013,aux5805,aux5806_BOOL);
constraint int_le_reif(s_00020, s_00013,aux5807_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux5808_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux5809_BOOL);
constraint array_bool_and([w_00003_00020_BOOL,aux5806_BOOL,aux5807_BOOL,aux5808_BOOL,aux5809_BOOL],aux5810_BOOL);
constraint int_lin_eq([-1,1,1],[aux5811,1,s_00013],0);
constraint int_lt_reif(s_00013,aux5811,aux5812_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux5813_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux5812_BOOL,aux5813_BOOL],aux5814_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux5702_INTEGER,aux5708_INTEGER,aux5714_INTEGER,aux5720_INTEGER,aux5726_INTEGER,aux5732_INTEGER,aux5738_INTEGER,aux5744_INTEGER,aux5750_INTEGER,aux5756_INTEGER,aux5762_INTEGER,aux5768_INTEGER,aux5774_INTEGER,aux5780_INTEGER,aux5786_INTEGER,aux5792_INTEGER,aux5798_INTEGER,aux5804_INTEGER,aux5810_INTEGER,aux5814_INTEGER,1],0,aux5815_BOOL);
constraint int_lin_eq([-1,1,1],[aux5816,1,s_00001],0);
constraint int_lt_reif(s_00003,aux5816,aux5817_BOOL);
constraint int_le_reif(s_00001, s_00003,aux5818_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux5819_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux5820_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux5817_BOOL,aux5818_BOOL,aux5819_BOOL,aux5820_BOOL],aux5821_BOOL);
constraint int_lin_eq([-1,1,1],[aux5822,2,s_00002],0);
constraint int_lt_reif(s_00003,aux5822,aux5823_BOOL);
constraint int_le_reif(s_00002, s_00003,aux5824_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux5825_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux5826_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux5823_BOOL,aux5824_BOOL,aux5825_BOOL,aux5826_BOOL],aux5827_BOOL);
constraint int_lin_eq([-1,1,1],[aux5828,2,s_00004],0);
constraint int_lt_reif(s_00003,aux5828,aux5829_BOOL);
constraint int_le_reif(s_00004, s_00003,aux5830_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux5831_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux5832_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux5829_BOOL,aux5830_BOOL,aux5831_BOOL,aux5832_BOOL],aux5833_BOOL);
constraint int_lin_eq([-1,1,1],[aux5834,2,s_00005],0);
constraint int_lt_reif(s_00003,aux5834,aux5835_BOOL);
constraint int_le_reif(s_00005, s_00003,aux5836_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux5837_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux5838_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux5835_BOOL,aux5836_BOOL,aux5837_BOOL,aux5838_BOOL],aux5839_BOOL);
constraint int_lin_eq([-1,1,1],[aux5840,3,s_00006],0);
constraint int_lt_reif(s_00003,aux5840,aux5841_BOOL);
constraint int_le_reif(s_00006, s_00003,aux5842_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux5843_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux5844_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux5841_BOOL,aux5842_BOOL,aux5843_BOOL,aux5844_BOOL],aux5845_BOOL);
constraint int_lin_eq([-1,1,1],[aux5846,2,s_00007],0);
constraint int_lt_reif(s_00003,aux5846,aux5847_BOOL);
constraint int_le_reif(s_00007, s_00003,aux5848_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux5849_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux5850_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux5847_BOOL,aux5848_BOOL,aux5849_BOOL,aux5850_BOOL],aux5851_BOOL);
constraint int_lin_eq([-1,1,1],[aux5852,1,s_00008],0);
constraint int_lt_reif(s_00003,aux5852,aux5853_BOOL);
constraint int_le_reif(s_00008, s_00003,aux5854_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux5855_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux5856_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux5853_BOOL,aux5854_BOOL,aux5855_BOOL,aux5856_BOOL],aux5857_BOOL);
constraint int_lin_eq([-1,1,1],[aux5858,2,s_00009],0);
constraint int_lt_reif(s_00003,aux5858,aux5859_BOOL);
constraint int_le_reif(s_00009, s_00003,aux5860_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux5861_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux5862_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux5859_BOOL,aux5860_BOOL,aux5861_BOOL,aux5862_BOOL],aux5863_BOOL);
constraint int_lin_eq([-1,1,1],[aux5864,1,s_00010],0);
constraint int_lt_reif(s_00003,aux5864,aux5865_BOOL);
constraint int_le_reif(s_00010, s_00003,aux5866_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux5867_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux5868_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux5865_BOOL,aux5866_BOOL,aux5867_BOOL,aux5868_BOOL],aux5869_BOOL);
constraint int_lin_eq([-1,1,1],[aux5870,2,s_00011],0);
constraint int_lt_reif(s_00003,aux5870,aux5871_BOOL);
constraint int_le_reif(s_00011, s_00003,aux5872_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux5873_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux5874_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux5871_BOOL,aux5872_BOOL,aux5873_BOOL,aux5874_BOOL],aux5875_BOOL);
constraint int_lin_eq([-1,1,1],[aux5876,2,s_00012],0);
constraint int_lt_reif(s_00003,aux5876,aux5877_BOOL);
constraint int_le_reif(s_00012, s_00003,aux5878_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux5879_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux5880_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux5877_BOOL,aux5878_BOOL,aux5879_BOOL,aux5880_BOOL],aux5881_BOOL);
constraint int_lin_eq([-1,1,1],[aux5882,1,s_00013],0);
constraint int_lt_reif(s_00003,aux5882,aux5883_BOOL);
constraint int_le_reif(s_00013, s_00003,aux5884_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux5885_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux5886_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux5883_BOOL,aux5884_BOOL,aux5885_BOOL,aux5886_BOOL],aux5887_BOOL);
constraint int_lin_eq([-1,1,1],[aux5888,2,s_00015],0);
constraint int_lt_reif(s_00003,aux5888,aux5889_BOOL);
constraint int_le_reif(s_00015, s_00003,aux5890_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux5891_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux5892_BOOL);
constraint array_bool_and([w_00003_00015_BOOL,aux5889_BOOL,aux5890_BOOL,aux5891_BOOL,aux5892_BOOL],aux5893_BOOL);
constraint int_lin_eq([-1,1,1],[aux5894,4,s_00014],0);
constraint int_lt_reif(s_00003,aux5894,aux5895_BOOL);
constraint int_le_reif(s_00014, s_00003,aux5896_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux5897_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux5898_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux5895_BOOL,aux5896_BOOL,aux5897_BOOL,aux5898_BOOL],aux5899_BOOL);
constraint int_lin_eq([-1,1,1],[aux5900,1,s_00017],0);
constraint int_lt_reif(s_00003,aux5900,aux5901_BOOL);
constraint int_le_reif(s_00017, s_00003,aux5902_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux5903_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux5904_BOOL);
constraint array_bool_and([w_00003_00017_BOOL,aux5901_BOOL,aux5902_BOOL,aux5903_BOOL,aux5904_BOOL],aux5905_BOOL);
constraint int_lin_eq([-1,1,1],[aux5906,3,s_00016],0);
constraint int_lt_reif(s_00003,aux5906,aux5907_BOOL);
constraint int_le_reif(s_00016, s_00003,aux5908_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux5909_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux5910_BOOL);
constraint array_bool_and([w_00003_00016_BOOL,aux5907_BOOL,aux5908_BOOL,aux5909_BOOL,aux5910_BOOL],aux5911_BOOL);
constraint int_lin_eq([-1,1,1],[aux5912,3,s_00018],0);
constraint int_lt_reif(s_00003,aux5912,aux5913_BOOL);
constraint int_le_reif(s_00018, s_00003,aux5914_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux5915_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux5916_BOOL);
constraint array_bool_and([w_00003_00018_BOOL,aux5913_BOOL,aux5914_BOOL,aux5915_BOOL,aux5916_BOOL],aux5917_BOOL);
constraint int_lin_eq([-1,1,1],[aux5918,2,s_00019],0);
constraint int_lt_reif(s_00003,aux5918,aux5919_BOOL);
constraint int_le_reif(s_00019, s_00003,aux5920_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux5921_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux5922_BOOL);
constraint array_bool_and([w_00003_00019_BOOL,aux5919_BOOL,aux5920_BOOL,aux5921_BOOL,aux5922_BOOL],aux5923_BOOL);
constraint int_lin_eq([-1,1,1],[aux5924,3,s_00020],0);
constraint int_lt_reif(s_00003,aux5924,aux5925_BOOL);
constraint int_le_reif(s_00020, s_00003,aux5926_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux5927_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux5928_BOOL);
constraint array_bool_and([w_00003_00020_BOOL,aux5925_BOOL,aux5926_BOOL,aux5927_BOOL,aux5928_BOOL],aux5929_BOOL);
constraint int_lin_eq([-1,1,1],[aux5930,3,s_00003],0);
constraint int_lt_reif(s_00003,aux5930,aux5931_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux5932_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux5931_BOOL,aux5932_BOOL],aux5933_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux5821_INTEGER,aux5827_INTEGER,aux5833_INTEGER,aux5839_INTEGER,aux5845_INTEGER,aux5851_INTEGER,aux5857_INTEGER,aux5863_INTEGER,aux5869_INTEGER,aux5875_INTEGER,aux5881_INTEGER,aux5887_INTEGER,aux5893_INTEGER,aux5899_INTEGER,aux5905_INTEGER,aux5911_INTEGER,aux5917_INTEGER,aux5923_INTEGER,aux5929_INTEGER,aux5933_INTEGER,1],0,aux5934_BOOL);
constraint int_lin_eq([-1,1,1],[aux5935,1,s_00001],0);
constraint int_lt_reif(s_00019,aux5935,aux5936_BOOL);
constraint int_le_reif(s_00001, s_00019,aux5937_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux5938_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux5939_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux5936_BOOL,aux5937_BOOL,aux5938_BOOL,aux5939_BOOL],aux5940_BOOL);
constraint int_lin_eq([-1,1,1],[aux5941,2,s_00002],0);
constraint int_lt_reif(s_00019,aux5941,aux5942_BOOL);
constraint int_le_reif(s_00002, s_00019,aux5943_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux5944_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux5945_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux5942_BOOL,aux5943_BOOL,aux5944_BOOL,aux5945_BOOL],aux5946_BOOL);
constraint int_lin_eq([-1,1,1],[aux5947,3,s_00003],0);
constraint int_lt_reif(s_00019,aux5947,aux5948_BOOL);
constraint int_le_reif(s_00003, s_00019,aux5949_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux5950_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux5951_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux5948_BOOL,aux5949_BOOL,aux5950_BOOL,aux5951_BOOL],aux5952_BOOL);
constraint int_lin_eq([-1,1,1],[aux5953,2,s_00004],0);
constraint int_lt_reif(s_00019,aux5953,aux5954_BOOL);
constraint int_le_reif(s_00004, s_00019,aux5955_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux5956_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux5957_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux5954_BOOL,aux5955_BOOL,aux5956_BOOL,aux5957_BOOL],aux5958_BOOL);
constraint int_lin_eq([-1,1,1],[aux5959,2,s_00005],0);
constraint int_lt_reif(s_00019,aux5959,aux5960_BOOL);
constraint int_le_reif(s_00005, s_00019,aux5961_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux5962_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux5963_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux5960_BOOL,aux5961_BOOL,aux5962_BOOL,aux5963_BOOL],aux5964_BOOL);
constraint int_lin_eq([-1,1,1],[aux5965,3,s_00006],0);
constraint int_lt_reif(s_00019,aux5965,aux5966_BOOL);
constraint int_le_reif(s_00006, s_00019,aux5967_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux5968_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux5969_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux5966_BOOL,aux5967_BOOL,aux5968_BOOL,aux5969_BOOL],aux5970_BOOL);
constraint int_lin_eq([-1,1,1],[aux5971,2,s_00007],0);
constraint int_lt_reif(s_00019,aux5971,aux5972_BOOL);
constraint int_le_reif(s_00007, s_00019,aux5973_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux5974_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux5975_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux5972_BOOL,aux5973_BOOL,aux5974_BOOL,aux5975_BOOL],aux5976_BOOL);
constraint int_lin_eq([-1,1,1],[aux5977,1,s_00008],0);
constraint int_lt_reif(s_00019,aux5977,aux5978_BOOL);
constraint int_le_reif(s_00008, s_00019,aux5979_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux5980_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux5981_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux5978_BOOL,aux5979_BOOL,aux5980_BOOL,aux5981_BOOL],aux5982_BOOL);
constraint int_lin_eq([-1,1,1],[aux5983,2,s_00009],0);
constraint int_lt_reif(s_00019,aux5983,aux5984_BOOL);
constraint int_le_reif(s_00009, s_00019,aux5985_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux5986_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux5987_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux5984_BOOL,aux5985_BOOL,aux5986_BOOL,aux5987_BOOL],aux5988_BOOL);
constraint int_lin_eq([-1,1,1],[aux5989,1,s_00010],0);
constraint int_lt_reif(s_00019,aux5989,aux5990_BOOL);
constraint int_le_reif(s_00010, s_00019,aux5991_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux5992_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux5993_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux5990_BOOL,aux5991_BOOL,aux5992_BOOL,aux5993_BOOL],aux5994_BOOL);
constraint int_lin_eq([-1,1,1],[aux5995,2,s_00011],0);
constraint int_lt_reif(s_00019,aux5995,aux5996_BOOL);
constraint int_le_reif(s_00011, s_00019,aux5997_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux5998_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux5999_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux5996_BOOL,aux5997_BOOL,aux5998_BOOL,aux5999_BOOL],aux6000_BOOL);
constraint int_lin_eq([-1,1,1],[aux6001,2,s_00012],0);
constraint int_lt_reif(s_00019,aux6001,aux6002_BOOL);
constraint int_le_reif(s_00012, s_00019,aux6003_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux6004_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux6005_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux6002_BOOL,aux6003_BOOL,aux6004_BOOL,aux6005_BOOL],aux6006_BOOL);
constraint int_lin_eq([-1,1,1],[aux6007,1,s_00013],0);
constraint int_lt_reif(s_00019,aux6007,aux6008_BOOL);
constraint int_le_reif(s_00013, s_00019,aux6009_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux6010_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux6011_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux6008_BOOL,aux6009_BOOL,aux6010_BOOL,aux6011_BOOL],aux6012_BOOL);
constraint int_lin_eq([-1,1,1],[aux6013,2,s_00015],0);
constraint int_lt_reif(s_00019,aux6013,aux6014_BOOL);
constraint int_le_reif(s_00015, s_00019,aux6015_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux6016_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux6017_BOOL);
constraint array_bool_and([w_00003_00015_BOOL,aux6014_BOOL,aux6015_BOOL,aux6016_BOOL,aux6017_BOOL],aux6018_BOOL);
constraint int_lin_eq([-1,1,1],[aux6019,4,s_00014],0);
constraint int_lt_reif(s_00019,aux6019,aux6020_BOOL);
constraint int_le_reif(s_00014, s_00019,aux6021_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux6022_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux6023_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux6020_BOOL,aux6021_BOOL,aux6022_BOOL,aux6023_BOOL],aux6024_BOOL);
constraint int_lin_eq([-1,1,1],[aux6025,1,s_00017],0);
constraint int_lt_reif(s_00019,aux6025,aux6026_BOOL);
constraint int_le_reif(s_00017, s_00019,aux6027_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux6028_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux6029_BOOL);
constraint array_bool_and([w_00003_00017_BOOL,aux6026_BOOL,aux6027_BOOL,aux6028_BOOL,aux6029_BOOL],aux6030_BOOL);
constraint int_lin_eq([-1,1,1],[aux6031,3,s_00016],0);
constraint int_lt_reif(s_00019,aux6031,aux6032_BOOL);
constraint int_le_reif(s_00016, s_00019,aux6033_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux6034_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux6035_BOOL);
constraint array_bool_and([w_00003_00016_BOOL,aux6032_BOOL,aux6033_BOOL,aux6034_BOOL,aux6035_BOOL],aux6036_BOOL);
constraint int_lin_eq([-1,1,1],[aux6037,3,s_00018],0);
constraint int_lt_reif(s_00019,aux6037,aux6038_BOOL);
constraint int_le_reif(s_00018, s_00019,aux6039_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux6040_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux6041_BOOL);
constraint array_bool_and([w_00003_00018_BOOL,aux6038_BOOL,aux6039_BOOL,aux6040_BOOL,aux6041_BOOL],aux6042_BOOL);
constraint int_lin_eq([-1,1,1],[aux6043,3,s_00020],0);
constraint int_lt_reif(s_00019,aux6043,aux6044_BOOL);
constraint int_le_reif(s_00020, s_00019,aux6045_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux6046_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux6047_BOOL);
constraint array_bool_and([w_00003_00020_BOOL,aux6044_BOOL,aux6045_BOOL,aux6046_BOOL,aux6047_BOOL],aux6048_BOOL);
constraint int_lin_eq([-1,1,1],[aux6049,2,s_00019],0);
constraint int_lt_reif(s_00019,aux6049,aux6050_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux6051_BOOL);
constraint array_bool_and([w_00003_00019_BOOL,aux6050_BOOL,aux6051_BOOL],aux6052_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux5940_INTEGER,aux5946_INTEGER,aux5952_INTEGER,aux5958_INTEGER,aux5964_INTEGER,aux5970_INTEGER,aux5976_INTEGER,aux5982_INTEGER,aux5988_INTEGER,aux5994_INTEGER,aux6000_INTEGER,aux6006_INTEGER,aux6012_INTEGER,aux6018_INTEGER,aux6024_INTEGER,aux6030_INTEGER,aux6036_INTEGER,aux6042_INTEGER,aux6048_INTEGER,aux6052_INTEGER,1],0,aux6053_BOOL);
constraint int_lin_eq([-1,1,1],[aux6054,1,s_00001],0);
constraint int_lt_reif(s_00012,aux6054,aux6055_BOOL);
constraint int_le_reif(s_00001, s_00012,aux6056_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux6057_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux6058_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux6055_BOOL,aux6056_BOOL,aux6057_BOOL,aux6058_BOOL],aux6059_BOOL);
constraint int_lin_eq([-1,1,1],[aux6060,2,s_00002],0);
constraint int_lt_reif(s_00012,aux6060,aux6061_BOOL);
constraint int_le_reif(s_00002, s_00012,aux6062_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux6063_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux6064_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux6061_BOOL,aux6062_BOOL,aux6063_BOOL,aux6064_BOOL],aux6065_BOOL);
constraint int_lin_eq([-1,1,1],[aux6066,3,s_00003],0);
constraint int_lt_reif(s_00012,aux6066,aux6067_BOOL);
constraint int_le_reif(s_00003, s_00012,aux6068_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux6069_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux6070_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux6067_BOOL,aux6068_BOOL,aux6069_BOOL,aux6070_BOOL],aux6071_BOOL);
constraint int_lin_eq([-1,1,1],[aux6072,2,s_00004],0);
constraint int_lt_reif(s_00012,aux6072,aux6073_BOOL);
constraint int_le_reif(s_00004, s_00012,aux6074_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux6075_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux6076_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux6073_BOOL,aux6074_BOOL,aux6075_BOOL,aux6076_BOOL],aux6077_BOOL);
constraint int_lin_eq([-1,1,1],[aux6078,2,s_00005],0);
constraint int_lt_reif(s_00012,aux6078,aux6079_BOOL);
constraint int_le_reif(s_00005, s_00012,aux6080_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux6081_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux6082_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux6079_BOOL,aux6080_BOOL,aux6081_BOOL,aux6082_BOOL],aux6083_BOOL);
constraint int_lin_eq([-1,1,1],[aux6084,3,s_00006],0);
constraint int_lt_reif(s_00012,aux6084,aux6085_BOOL);
constraint int_le_reif(s_00006, s_00012,aux6086_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux6087_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux6088_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux6085_BOOL,aux6086_BOOL,aux6087_BOOL,aux6088_BOOL],aux6089_BOOL);
constraint int_lin_eq([-1,1,1],[aux6090,2,s_00007],0);
constraint int_lt_reif(s_00012,aux6090,aux6091_BOOL);
constraint int_le_reif(s_00007, s_00012,aux6092_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6093_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux6094_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux6091_BOOL,aux6092_BOOL,aux6093_BOOL,aux6094_BOOL],aux6095_BOOL);
constraint int_lin_eq([-1,1,1],[aux6096,1,s_00008],0);
constraint int_lt_reif(s_00012,aux6096,aux6097_BOOL);
constraint int_le_reif(s_00008, s_00012,aux6098_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6099_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux6100_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux6097_BOOL,aux6098_BOOL,aux6099_BOOL,aux6100_BOOL],aux6101_BOOL);
constraint int_lin_eq([-1,1,1],[aux6102,2,s_00009],0);
constraint int_lt_reif(s_00012,aux6102,aux6103_BOOL);
constraint int_le_reif(s_00009, s_00012,aux6104_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux6105_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux6106_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux6103_BOOL,aux6104_BOOL,aux6105_BOOL,aux6106_BOOL],aux6107_BOOL);
constraint int_lin_eq([-1,1,1],[aux6108,1,s_00010],0);
constraint int_lt_reif(s_00012,aux6108,aux6109_BOOL);
constraint int_le_reif(s_00010, s_00012,aux6110_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux6111_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux6112_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux6109_BOOL,aux6110_BOOL,aux6111_BOOL,aux6112_BOOL],aux6113_BOOL);
constraint int_lin_eq([-1,1,1],[aux6114,2,s_00011],0);
constraint int_lt_reif(s_00012,aux6114,aux6115_BOOL);
constraint int_le_reif(s_00011, s_00012,aux6116_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux6117_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux6118_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux6115_BOOL,aux6116_BOOL,aux6117_BOOL,aux6118_BOOL],aux6119_BOOL);
constraint int_lin_eq([-1,1,1],[aux6120,1,s_00013],0);
constraint int_lt_reif(s_00012,aux6120,aux6121_BOOL);
constraint int_le_reif(s_00013, s_00012,aux6122_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux6123_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux6124_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux6121_BOOL,aux6122_BOOL,aux6123_BOOL,aux6124_BOOL],aux6125_BOOL);
constraint int_lin_eq([-1,1,1],[aux6126,2,s_00015],0);
constraint int_lt_reif(s_00012,aux6126,aux6127_BOOL);
constraint int_le_reif(s_00015, s_00012,aux6128_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux6129_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux6130_BOOL);
constraint array_bool_and([w_00003_00015_BOOL,aux6127_BOOL,aux6128_BOOL,aux6129_BOOL,aux6130_BOOL],aux6131_BOOL);
constraint int_lin_eq([-1,1,1],[aux6132,4,s_00014],0);
constraint int_lt_reif(s_00012,aux6132,aux6133_BOOL);
constraint int_le_reif(s_00014, s_00012,aux6134_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux6135_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux6136_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux6133_BOOL,aux6134_BOOL,aux6135_BOOL,aux6136_BOOL],aux6137_BOOL);
constraint int_lin_eq([-1,1,1],[aux6138,1,s_00017],0);
constraint int_lt_reif(s_00012,aux6138,aux6139_BOOL);
constraint int_le_reif(s_00017, s_00012,aux6140_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux6141_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux6142_BOOL);
constraint array_bool_and([w_00003_00017_BOOL,aux6139_BOOL,aux6140_BOOL,aux6141_BOOL,aux6142_BOOL],aux6143_BOOL);
constraint int_lin_eq([-1,1,1],[aux6144,3,s_00016],0);
constraint int_lt_reif(s_00012,aux6144,aux6145_BOOL);
constraint int_le_reif(s_00016, s_00012,aux6146_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux6147_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux6148_BOOL);
constraint array_bool_and([w_00003_00016_BOOL,aux6145_BOOL,aux6146_BOOL,aux6147_BOOL,aux6148_BOOL],aux6149_BOOL);
constraint int_lin_eq([-1,1,1],[aux6150,3,s_00018],0);
constraint int_lt_reif(s_00012,aux6150,aux6151_BOOL);
constraint int_le_reif(s_00018, s_00012,aux6152_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux6153_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux6154_BOOL);
constraint array_bool_and([w_00003_00018_BOOL,aux6151_BOOL,aux6152_BOOL,aux6153_BOOL,aux6154_BOOL],aux6155_BOOL);
constraint int_lin_eq([-1,1,1],[aux6156,2,s_00019],0);
constraint int_lt_reif(s_00012,aux6156,aux6157_BOOL);
constraint int_le_reif(s_00019, s_00012,aux6158_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux6159_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux6160_BOOL);
constraint array_bool_and([w_00003_00019_BOOL,aux6157_BOOL,aux6158_BOOL,aux6159_BOOL,aux6160_BOOL],aux6161_BOOL);
constraint int_lin_eq([-1,1,1],[aux6162,3,s_00020],0);
constraint int_lt_reif(s_00012,aux6162,aux6163_BOOL);
constraint int_le_reif(s_00020, s_00012,aux6164_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux6165_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux6166_BOOL);
constraint array_bool_and([w_00003_00020_BOOL,aux6163_BOOL,aux6164_BOOL,aux6165_BOOL,aux6166_BOOL],aux6167_BOOL);
constraint int_lin_eq([-1,1,1],[aux6168,2,s_00012],0);
constraint int_lt_reif(s_00012,aux6168,aux6169_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux6170_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux6169_BOOL,aux6170_BOOL],aux6171_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux6059_INTEGER,aux6065_INTEGER,aux6071_INTEGER,aux6077_INTEGER,aux6083_INTEGER,aux6089_INTEGER,aux6095_INTEGER,aux6101_INTEGER,aux6107_INTEGER,aux6113_INTEGER,aux6119_INTEGER,aux6125_INTEGER,aux6131_INTEGER,aux6137_INTEGER,aux6143_INTEGER,aux6149_INTEGER,aux6155_INTEGER,aux6161_INTEGER,aux6167_INTEGER,aux6171_INTEGER,1],0,aux6172_BOOL);
constraint int_lin_eq([-1,1,1],[aux6173,1,s_00001],0);
constraint int_lt_reif(s_00007,aux6173,aux6174_BOOL);
constraint int_le_reif(s_00001, s_00007,aux6175_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux6176_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6177_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux6174_BOOL,aux6175_BOOL,aux6176_BOOL,aux6177_BOOL],aux6178_BOOL);
constraint int_lin_eq([-1,1,1],[aux6179,2,s_00002],0);
constraint int_lt_reif(s_00007,aux6179,aux6180_BOOL);
constraint int_le_reif(s_00002, s_00007,aux6181_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux6182_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6183_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux6180_BOOL,aux6181_BOOL,aux6182_BOOL,aux6183_BOOL],aux6184_BOOL);
constraint int_lin_eq([-1,1,1],[aux6185,3,s_00003],0);
constraint int_lt_reif(s_00007,aux6185,aux6186_BOOL);
constraint int_le_reif(s_00003, s_00007,aux6187_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux6188_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6189_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux6186_BOOL,aux6187_BOOL,aux6188_BOOL,aux6189_BOOL],aux6190_BOOL);
constraint int_lin_eq([-1,1,1],[aux6191,2,s_00004],0);
constraint int_lt_reif(s_00007,aux6191,aux6192_BOOL);
constraint int_le_reif(s_00004, s_00007,aux6193_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux6194_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6195_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux6192_BOOL,aux6193_BOOL,aux6194_BOOL,aux6195_BOOL],aux6196_BOOL);
constraint int_lin_eq([-1,1,1],[aux6197,2,s_00005],0);
constraint int_lt_reif(s_00007,aux6197,aux6198_BOOL);
constraint int_le_reif(s_00005, s_00007,aux6199_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux6200_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6201_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux6198_BOOL,aux6199_BOOL,aux6200_BOOL,aux6201_BOOL],aux6202_BOOL);
constraint int_lin_eq([-1,1,1],[aux6203,3,s_00006],0);
constraint int_lt_reif(s_00007,aux6203,aux6204_BOOL);
constraint int_le_reif(s_00006, s_00007,aux6205_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux6206_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6207_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux6204_BOOL,aux6205_BOOL,aux6206_BOOL,aux6207_BOOL],aux6208_BOOL);
constraint int_lin_eq([-1,1,1],[aux6209,1,s_00008],0);
constraint int_lt_reif(s_00007,aux6209,aux6210_BOOL);
constraint int_le_reif(s_00008, s_00007,aux6211_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6212_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6213_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux6210_BOOL,aux6211_BOOL,aux6212_BOOL,aux6213_BOOL],aux6214_BOOL);
constraint int_lin_eq([-1,1,1],[aux6215,2,s_00009],0);
constraint int_lt_reif(s_00007,aux6215,aux6216_BOOL);
constraint int_le_reif(s_00009, s_00007,aux6217_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6218_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux6219_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux6216_BOOL,aux6217_BOOL,aux6218_BOOL,aux6219_BOOL],aux6220_BOOL);
constraint int_lin_eq([-1,1,1],[aux6221,1,s_00010],0);
constraint int_lt_reif(s_00007,aux6221,aux6222_BOOL);
constraint int_le_reif(s_00010, s_00007,aux6223_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6224_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux6225_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux6222_BOOL,aux6223_BOOL,aux6224_BOOL,aux6225_BOOL],aux6226_BOOL);
constraint int_lin_eq([-1,1,1],[aux6227,2,s_00011],0);
constraint int_lt_reif(s_00007,aux6227,aux6228_BOOL);
constraint int_le_reif(s_00011, s_00007,aux6229_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6230_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux6231_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux6228_BOOL,aux6229_BOOL,aux6230_BOOL,aux6231_BOOL],aux6232_BOOL);
constraint int_lin_eq([-1,1,1],[aux6233,2,s_00012],0);
constraint int_lt_reif(s_00007,aux6233,aux6234_BOOL);
constraint int_le_reif(s_00012, s_00007,aux6235_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6236_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux6237_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux6234_BOOL,aux6235_BOOL,aux6236_BOOL,aux6237_BOOL],aux6238_BOOL);
constraint int_lin_eq([-1,1,1],[aux6239,1,s_00013],0);
constraint int_lt_reif(s_00007,aux6239,aux6240_BOOL);
constraint int_le_reif(s_00013, s_00007,aux6241_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6242_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux6243_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux6240_BOOL,aux6241_BOOL,aux6242_BOOL,aux6243_BOOL],aux6244_BOOL);
constraint int_lin_eq([-1,1,1],[aux6245,2,s_00015],0);
constraint int_lt_reif(s_00007,aux6245,aux6246_BOOL);
constraint int_le_reif(s_00015, s_00007,aux6247_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6248_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux6249_BOOL);
constraint array_bool_and([w_00003_00015_BOOL,aux6246_BOOL,aux6247_BOOL,aux6248_BOOL,aux6249_BOOL],aux6250_BOOL);
constraint int_lin_eq([-1,1,1],[aux6251,4,s_00014],0);
constraint int_lt_reif(s_00007,aux6251,aux6252_BOOL);
constraint int_le_reif(s_00014, s_00007,aux6253_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6254_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux6255_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux6252_BOOL,aux6253_BOOL,aux6254_BOOL,aux6255_BOOL],aux6256_BOOL);
constraint int_lin_eq([-1,1,1],[aux6257,1,s_00017],0);
constraint int_lt_reif(s_00007,aux6257,aux6258_BOOL);
constraint int_le_reif(s_00017, s_00007,aux6259_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6260_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux6261_BOOL);
constraint array_bool_and([w_00003_00017_BOOL,aux6258_BOOL,aux6259_BOOL,aux6260_BOOL,aux6261_BOOL],aux6262_BOOL);
constraint int_lin_eq([-1,1,1],[aux6263,3,s_00016],0);
constraint int_lt_reif(s_00007,aux6263,aux6264_BOOL);
constraint int_le_reif(s_00016, s_00007,aux6265_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6266_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux6267_BOOL);
constraint array_bool_and([w_00003_00016_BOOL,aux6264_BOOL,aux6265_BOOL,aux6266_BOOL,aux6267_BOOL],aux6268_BOOL);
constraint int_lin_eq([-1,1,1],[aux6269,3,s_00018],0);
constraint int_lt_reif(s_00007,aux6269,aux6270_BOOL);
constraint int_le_reif(s_00018, s_00007,aux6271_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6272_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux6273_BOOL);
constraint array_bool_and([w_00003_00018_BOOL,aux6270_BOOL,aux6271_BOOL,aux6272_BOOL,aux6273_BOOL],aux6274_BOOL);
constraint int_lin_eq([-1,1,1],[aux6275,2,s_00019],0);
constraint int_lt_reif(s_00007,aux6275,aux6276_BOOL);
constraint int_le_reif(s_00019, s_00007,aux6277_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6278_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux6279_BOOL);
constraint array_bool_and([w_00003_00019_BOOL,aux6276_BOOL,aux6277_BOOL,aux6278_BOOL,aux6279_BOOL],aux6280_BOOL);
constraint int_lin_eq([-1,1,1],[aux6281,3,s_00020],0);
constraint int_lt_reif(s_00007,aux6281,aux6282_BOOL);
constraint int_le_reif(s_00020, s_00007,aux6283_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6284_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux6285_BOOL);
constraint array_bool_and([w_00003_00020_BOOL,aux6282_BOOL,aux6283_BOOL,aux6284_BOOL,aux6285_BOOL],aux6286_BOOL);
constraint int_lin_eq([-1,1,1],[aux6287,2,s_00007],0);
constraint int_lt_reif(s_00007,aux6287,aux6288_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6289_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux6288_BOOL,aux6289_BOOL],aux6290_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux6178_INTEGER,aux6184_INTEGER,aux6190_INTEGER,aux6196_INTEGER,aux6202_INTEGER,aux6208_INTEGER,aux6214_INTEGER,aux6220_INTEGER,aux6226_INTEGER,aux6232_INTEGER,aux6238_INTEGER,aux6244_INTEGER,aux6250_INTEGER,aux6256_INTEGER,aux6262_INTEGER,aux6268_INTEGER,aux6274_INTEGER,aux6280_INTEGER,aux6286_INTEGER,aux6290_INTEGER,1],0,aux6291_BOOL);
constraint int_lin_eq([-1,1,1],[aux6292,1,s_00001],0);
constraint int_lt_reif(s_00006,aux6292,aux6293_BOOL);
constraint int_le_reif(s_00001, s_00006,aux6294_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux6295_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux6296_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux6293_BOOL,aux6294_BOOL,aux6295_BOOL,aux6296_BOOL],aux6297_BOOL);
constraint int_lin_eq([-1,1,1],[aux6298,2,s_00002],0);
constraint int_lt_reif(s_00006,aux6298,aux6299_BOOL);
constraint int_le_reif(s_00002, s_00006,aux6300_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux6301_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux6302_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux6299_BOOL,aux6300_BOOL,aux6301_BOOL,aux6302_BOOL],aux6303_BOOL);
constraint int_lin_eq([-1,1,1],[aux6304,3,s_00003],0);
constraint int_lt_reif(s_00006,aux6304,aux6305_BOOL);
constraint int_le_reif(s_00003, s_00006,aux6306_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux6307_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux6308_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux6305_BOOL,aux6306_BOOL,aux6307_BOOL,aux6308_BOOL],aux6309_BOOL);
constraint int_lin_eq([-1,1,1],[aux6310,2,s_00004],0);
constraint int_lt_reif(s_00006,aux6310,aux6311_BOOL);
constraint int_le_reif(s_00004, s_00006,aux6312_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux6313_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux6314_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux6311_BOOL,aux6312_BOOL,aux6313_BOOL,aux6314_BOOL],aux6315_BOOL);
constraint int_lin_eq([-1,1,1],[aux6316,2,s_00005],0);
constraint int_lt_reif(s_00006,aux6316,aux6317_BOOL);
constraint int_le_reif(s_00005, s_00006,aux6318_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux6319_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux6320_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux6317_BOOL,aux6318_BOOL,aux6319_BOOL,aux6320_BOOL],aux6321_BOOL);
constraint int_lin_eq([-1,1,1],[aux6322,2,s_00007],0);
constraint int_lt_reif(s_00006,aux6322,aux6323_BOOL);
constraint int_le_reif(s_00007, s_00006,aux6324_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux6325_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6326_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux6323_BOOL,aux6324_BOOL,aux6325_BOOL,aux6326_BOOL],aux6327_BOOL);
constraint int_lin_eq([-1,1,1],[aux6328,1,s_00008],0);
constraint int_lt_reif(s_00006,aux6328,aux6329_BOOL);
constraint int_le_reif(s_00008, s_00006,aux6330_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux6331_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6332_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux6329_BOOL,aux6330_BOOL,aux6331_BOOL,aux6332_BOOL],aux6333_BOOL);
constraint int_lin_eq([-1,1,1],[aux6334,2,s_00009],0);
constraint int_lt_reif(s_00006,aux6334,aux6335_BOOL);
constraint int_le_reif(s_00009, s_00006,aux6336_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux6337_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux6338_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux6335_BOOL,aux6336_BOOL,aux6337_BOOL,aux6338_BOOL],aux6339_BOOL);
constraint int_lin_eq([-1,1,1],[aux6340,1,s_00010],0);
constraint int_lt_reif(s_00006,aux6340,aux6341_BOOL);
constraint int_le_reif(s_00010, s_00006,aux6342_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux6343_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux6344_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux6341_BOOL,aux6342_BOOL,aux6343_BOOL,aux6344_BOOL],aux6345_BOOL);
constraint int_lin_eq([-1,1,1],[aux6346,2,s_00011],0);
constraint int_lt_reif(s_00006,aux6346,aux6347_BOOL);
constraint int_le_reif(s_00011, s_00006,aux6348_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux6349_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux6350_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux6347_BOOL,aux6348_BOOL,aux6349_BOOL,aux6350_BOOL],aux6351_BOOL);
constraint int_lin_eq([-1,1,1],[aux6352,2,s_00012],0);
constraint int_lt_reif(s_00006,aux6352,aux6353_BOOL);
constraint int_le_reif(s_00012, s_00006,aux6354_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux6355_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux6356_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux6353_BOOL,aux6354_BOOL,aux6355_BOOL,aux6356_BOOL],aux6357_BOOL);
constraint int_lin_eq([-1,1,1],[aux6358,1,s_00013],0);
constraint int_lt_reif(s_00006,aux6358,aux6359_BOOL);
constraint int_le_reif(s_00013, s_00006,aux6360_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux6361_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux6362_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux6359_BOOL,aux6360_BOOL,aux6361_BOOL,aux6362_BOOL],aux6363_BOOL);
constraint int_lin_eq([-1,1,1],[aux6364,2,s_00015],0);
constraint int_lt_reif(s_00006,aux6364,aux6365_BOOL);
constraint int_le_reif(s_00015, s_00006,aux6366_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux6367_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux6368_BOOL);
constraint array_bool_and([w_00003_00015_BOOL,aux6365_BOOL,aux6366_BOOL,aux6367_BOOL,aux6368_BOOL],aux6369_BOOL);
constraint int_lin_eq([-1,1,1],[aux6370,4,s_00014],0);
constraint int_lt_reif(s_00006,aux6370,aux6371_BOOL);
constraint int_le_reif(s_00014, s_00006,aux6372_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux6373_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux6374_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux6371_BOOL,aux6372_BOOL,aux6373_BOOL,aux6374_BOOL],aux6375_BOOL);
constraint int_lin_eq([-1,1,1],[aux6376,1,s_00017],0);
constraint int_lt_reif(s_00006,aux6376,aux6377_BOOL);
constraint int_le_reif(s_00017, s_00006,aux6378_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux6379_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux6380_BOOL);
constraint array_bool_and([w_00003_00017_BOOL,aux6377_BOOL,aux6378_BOOL,aux6379_BOOL,aux6380_BOOL],aux6381_BOOL);
constraint int_lin_eq([-1,1,1],[aux6382,3,s_00016],0);
constraint int_lt_reif(s_00006,aux6382,aux6383_BOOL);
constraint int_le_reif(s_00016, s_00006,aux6384_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux6385_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux6386_BOOL);
constraint array_bool_and([w_00003_00016_BOOL,aux6383_BOOL,aux6384_BOOL,aux6385_BOOL,aux6386_BOOL],aux6387_BOOL);
constraint int_lin_eq([-1,1,1],[aux6388,3,s_00018],0);
constraint int_lt_reif(s_00006,aux6388,aux6389_BOOL);
constraint int_le_reif(s_00018, s_00006,aux6390_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux6391_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux6392_BOOL);
constraint array_bool_and([w_00003_00018_BOOL,aux6389_BOOL,aux6390_BOOL,aux6391_BOOL,aux6392_BOOL],aux6393_BOOL);
constraint int_lin_eq([-1,1,1],[aux6394,2,s_00019],0);
constraint int_lt_reif(s_00006,aux6394,aux6395_BOOL);
constraint int_le_reif(s_00019, s_00006,aux6396_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux6397_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux6398_BOOL);
constraint array_bool_and([w_00003_00019_BOOL,aux6395_BOOL,aux6396_BOOL,aux6397_BOOL,aux6398_BOOL],aux6399_BOOL);
constraint int_lin_eq([-1,1,1],[aux6400,3,s_00020],0);
constraint int_lt_reif(s_00006,aux6400,aux6401_BOOL);
constraint int_le_reif(s_00020, s_00006,aux6402_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux6403_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux6404_BOOL);
constraint array_bool_and([w_00003_00020_BOOL,aux6401_BOOL,aux6402_BOOL,aux6403_BOOL,aux6404_BOOL],aux6405_BOOL);
constraint int_lin_eq([-1,1,1],[aux6406,3,s_00006],0);
constraint int_lt_reif(s_00006,aux6406,aux6407_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux6408_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux6407_BOOL,aux6408_BOOL],aux6409_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux6297_INTEGER,aux6303_INTEGER,aux6309_INTEGER,aux6315_INTEGER,aux6321_INTEGER,aux6327_INTEGER,aux6333_INTEGER,aux6339_INTEGER,aux6345_INTEGER,aux6351_INTEGER,aux6357_INTEGER,aux6363_INTEGER,aux6369_INTEGER,aux6375_INTEGER,aux6381_INTEGER,aux6387_INTEGER,aux6393_INTEGER,aux6399_INTEGER,aux6405_INTEGER,aux6409_INTEGER,1],0,aux6410_BOOL);
constraint int_lin_eq([-1,1,1],[aux6411,1,s_00001],0);
constraint int_lt_reif(s_00016,aux6411,aux6412_BOOL);
constraint int_le_reif(s_00001, s_00016,aux6413_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux6414_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux6415_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux6412_BOOL,aux6413_BOOL,aux6414_BOOL,aux6415_BOOL],aux6416_BOOL);
constraint int_lin_eq([-1,1,1],[aux6417,2,s_00002],0);
constraint int_lt_reif(s_00016,aux6417,aux6418_BOOL);
constraint int_le_reif(s_00002, s_00016,aux6419_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux6420_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux6421_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux6418_BOOL,aux6419_BOOL,aux6420_BOOL,aux6421_BOOL],aux6422_BOOL);
constraint int_lin_eq([-1,1,1],[aux6423,3,s_00003],0);
constraint int_lt_reif(s_00016,aux6423,aux6424_BOOL);
constraint int_le_reif(s_00003, s_00016,aux6425_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux6426_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux6427_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux6424_BOOL,aux6425_BOOL,aux6426_BOOL,aux6427_BOOL],aux6428_BOOL);
constraint int_lin_eq([-1,1,1],[aux6429,2,s_00004],0);
constraint int_lt_reif(s_00016,aux6429,aux6430_BOOL);
constraint int_le_reif(s_00004, s_00016,aux6431_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux6432_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux6433_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux6430_BOOL,aux6431_BOOL,aux6432_BOOL,aux6433_BOOL],aux6434_BOOL);
constraint int_lin_eq([-1,1,1],[aux6435,2,s_00005],0);
constraint int_lt_reif(s_00016,aux6435,aux6436_BOOL);
constraint int_le_reif(s_00005, s_00016,aux6437_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux6438_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux6439_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux6436_BOOL,aux6437_BOOL,aux6438_BOOL,aux6439_BOOL],aux6440_BOOL);
constraint int_lin_eq([-1,1,1],[aux6441,3,s_00006],0);
constraint int_lt_reif(s_00016,aux6441,aux6442_BOOL);
constraint int_le_reif(s_00006, s_00016,aux6443_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux6444_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux6445_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux6442_BOOL,aux6443_BOOL,aux6444_BOOL,aux6445_BOOL],aux6446_BOOL);
constraint int_lin_eq([-1,1,1],[aux6447,2,s_00007],0);
constraint int_lt_reif(s_00016,aux6447,aux6448_BOOL);
constraint int_le_reif(s_00007, s_00016,aux6449_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6450_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux6451_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux6448_BOOL,aux6449_BOOL,aux6450_BOOL,aux6451_BOOL],aux6452_BOOL);
constraint int_lin_eq([-1,1,1],[aux6453,1,s_00008],0);
constraint int_lt_reif(s_00016,aux6453,aux6454_BOOL);
constraint int_le_reif(s_00008, s_00016,aux6455_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6456_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux6457_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux6454_BOOL,aux6455_BOOL,aux6456_BOOL,aux6457_BOOL],aux6458_BOOL);
constraint int_lin_eq([-1,1,1],[aux6459,2,s_00009],0);
constraint int_lt_reif(s_00016,aux6459,aux6460_BOOL);
constraint int_le_reif(s_00009, s_00016,aux6461_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux6462_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux6463_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux6460_BOOL,aux6461_BOOL,aux6462_BOOL,aux6463_BOOL],aux6464_BOOL);
constraint int_lin_eq([-1,1,1],[aux6465,1,s_00010],0);
constraint int_lt_reif(s_00016,aux6465,aux6466_BOOL);
constraint int_le_reif(s_00010, s_00016,aux6467_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux6468_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux6469_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux6466_BOOL,aux6467_BOOL,aux6468_BOOL,aux6469_BOOL],aux6470_BOOL);
constraint int_lin_eq([-1,1,1],[aux6471,2,s_00011],0);
constraint int_lt_reif(s_00016,aux6471,aux6472_BOOL);
constraint int_le_reif(s_00011, s_00016,aux6473_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux6474_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux6475_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux6472_BOOL,aux6473_BOOL,aux6474_BOOL,aux6475_BOOL],aux6476_BOOL);
constraint int_lin_eq([-1,1,1],[aux6477,2,s_00012],0);
constraint int_lt_reif(s_00016,aux6477,aux6478_BOOL);
constraint int_le_reif(s_00012, s_00016,aux6479_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux6480_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux6481_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux6478_BOOL,aux6479_BOOL,aux6480_BOOL,aux6481_BOOL],aux6482_BOOL);
constraint int_lin_eq([-1,1,1],[aux6483,1,s_00013],0);
constraint int_lt_reif(s_00016,aux6483,aux6484_BOOL);
constraint int_le_reif(s_00013, s_00016,aux6485_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux6486_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux6487_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux6484_BOOL,aux6485_BOOL,aux6486_BOOL,aux6487_BOOL],aux6488_BOOL);
constraint int_lin_eq([-1,1,1],[aux6489,2,s_00015],0);
constraint int_lt_reif(s_00016,aux6489,aux6490_BOOL);
constraint int_le_reif(s_00015, s_00016,aux6491_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux6492_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux6493_BOOL);
constraint array_bool_and([w_00003_00015_BOOL,aux6490_BOOL,aux6491_BOOL,aux6492_BOOL,aux6493_BOOL],aux6494_BOOL);
constraint int_lin_eq([-1,1,1],[aux6495,4,s_00014],0);
constraint int_lt_reif(s_00016,aux6495,aux6496_BOOL);
constraint int_le_reif(s_00014, s_00016,aux6497_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux6498_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux6499_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux6496_BOOL,aux6497_BOOL,aux6498_BOOL,aux6499_BOOL],aux6500_BOOL);
constraint int_lin_eq([-1,1,1],[aux6501,1,s_00017],0);
constraint int_lt_reif(s_00016,aux6501,aux6502_BOOL);
constraint int_le_reif(s_00017, s_00016,aux6503_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux6504_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux6505_BOOL);
constraint array_bool_and([w_00003_00017_BOOL,aux6502_BOOL,aux6503_BOOL,aux6504_BOOL,aux6505_BOOL],aux6506_BOOL);
constraint int_lin_eq([-1,1,1],[aux6507,3,s_00018],0);
constraint int_lt_reif(s_00016,aux6507,aux6508_BOOL);
constraint int_le_reif(s_00018, s_00016,aux6509_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux6510_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux6511_BOOL);
constraint array_bool_and([w_00003_00018_BOOL,aux6508_BOOL,aux6509_BOOL,aux6510_BOOL,aux6511_BOOL],aux6512_BOOL);
constraint int_lin_eq([-1,1,1],[aux6513,2,s_00019],0);
constraint int_lt_reif(s_00016,aux6513,aux6514_BOOL);
constraint int_le_reif(s_00019, s_00016,aux6515_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux6516_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux6517_BOOL);
constraint array_bool_and([w_00003_00019_BOOL,aux6514_BOOL,aux6515_BOOL,aux6516_BOOL,aux6517_BOOL],aux6518_BOOL);
constraint int_lin_eq([-1,1,1],[aux6519,3,s_00020],0);
constraint int_lt_reif(s_00016,aux6519,aux6520_BOOL);
constraint int_le_reif(s_00020, s_00016,aux6521_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux6522_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux6523_BOOL);
constraint array_bool_and([w_00003_00020_BOOL,aux6520_BOOL,aux6521_BOOL,aux6522_BOOL,aux6523_BOOL],aux6524_BOOL);
constraint int_lin_eq([-1,1,1],[aux6525,3,s_00016],0);
constraint int_lt_reif(s_00016,aux6525,aux6526_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux6527_BOOL);
constraint array_bool_and([w_00003_00016_BOOL,aux6526_BOOL,aux6527_BOOL],aux6528_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux6416_INTEGER,aux6422_INTEGER,aux6428_INTEGER,aux6434_INTEGER,aux6440_INTEGER,aux6446_INTEGER,aux6452_INTEGER,aux6458_INTEGER,aux6464_INTEGER,aux6470_INTEGER,aux6476_INTEGER,aux6482_INTEGER,aux6488_INTEGER,aux6494_INTEGER,aux6500_INTEGER,aux6506_INTEGER,aux6512_INTEGER,aux6518_INTEGER,aux6524_INTEGER,aux6528_INTEGER,1],0,aux6529_BOOL);
constraint int_lin_eq([-1,1,1],[aux6530,1,s_00001],0);
constraint int_lt_reif(s_00020,aux6530,aux6531_BOOL);
constraint int_le_reif(s_00001, s_00020,aux6532_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux6533_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux6534_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux6531_BOOL,aux6532_BOOL,aux6533_BOOL,aux6534_BOOL],aux6535_BOOL);
constraint int_lin_eq([-1,1,1],[aux6536,2,s_00002],0);
constraint int_lt_reif(s_00020,aux6536,aux6537_BOOL);
constraint int_le_reif(s_00002, s_00020,aux6538_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux6539_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux6540_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux6537_BOOL,aux6538_BOOL,aux6539_BOOL,aux6540_BOOL],aux6541_BOOL);
constraint int_lin_eq([-1,1,1],[aux6542,3,s_00003],0);
constraint int_lt_reif(s_00020,aux6542,aux6543_BOOL);
constraint int_le_reif(s_00003, s_00020,aux6544_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux6545_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux6546_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux6543_BOOL,aux6544_BOOL,aux6545_BOOL,aux6546_BOOL],aux6547_BOOL);
constraint int_lin_eq([-1,1,1],[aux6548,2,s_00004],0);
constraint int_lt_reif(s_00020,aux6548,aux6549_BOOL);
constraint int_le_reif(s_00004, s_00020,aux6550_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux6551_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux6552_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux6549_BOOL,aux6550_BOOL,aux6551_BOOL,aux6552_BOOL],aux6553_BOOL);
constraint int_lin_eq([-1,1,1],[aux6554,2,s_00005],0);
constraint int_lt_reif(s_00020,aux6554,aux6555_BOOL);
constraint int_le_reif(s_00005, s_00020,aux6556_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux6557_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux6558_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux6555_BOOL,aux6556_BOOL,aux6557_BOOL,aux6558_BOOL],aux6559_BOOL);
constraint int_lin_eq([-1,1,1],[aux6560,3,s_00006],0);
constraint int_lt_reif(s_00020,aux6560,aux6561_BOOL);
constraint int_le_reif(s_00006, s_00020,aux6562_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux6563_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux6564_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux6561_BOOL,aux6562_BOOL,aux6563_BOOL,aux6564_BOOL],aux6565_BOOL);
constraint int_lin_eq([-1,1,1],[aux6566,2,s_00007],0);
constraint int_lt_reif(s_00020,aux6566,aux6567_BOOL);
constraint int_le_reif(s_00007, s_00020,aux6568_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6569_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux6570_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux6567_BOOL,aux6568_BOOL,aux6569_BOOL,aux6570_BOOL],aux6571_BOOL);
constraint int_lin_eq([-1,1,1],[aux6572,1,s_00008],0);
constraint int_lt_reif(s_00020,aux6572,aux6573_BOOL);
constraint int_le_reif(s_00008, s_00020,aux6574_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6575_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux6576_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux6573_BOOL,aux6574_BOOL,aux6575_BOOL,aux6576_BOOL],aux6577_BOOL);
constraint int_lin_eq([-1,1,1],[aux6578,2,s_00009],0);
constraint int_lt_reif(s_00020,aux6578,aux6579_BOOL);
constraint int_le_reif(s_00009, s_00020,aux6580_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux6581_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux6582_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux6579_BOOL,aux6580_BOOL,aux6581_BOOL,aux6582_BOOL],aux6583_BOOL);
constraint int_lin_eq([-1,1,1],[aux6584,1,s_00010],0);
constraint int_lt_reif(s_00020,aux6584,aux6585_BOOL);
constraint int_le_reif(s_00010, s_00020,aux6586_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux6587_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux6588_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux6585_BOOL,aux6586_BOOL,aux6587_BOOL,aux6588_BOOL],aux6589_BOOL);
constraint int_lin_eq([-1,1,1],[aux6590,2,s_00011],0);
constraint int_lt_reif(s_00020,aux6590,aux6591_BOOL);
constraint int_le_reif(s_00011, s_00020,aux6592_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux6593_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux6594_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux6591_BOOL,aux6592_BOOL,aux6593_BOOL,aux6594_BOOL],aux6595_BOOL);
constraint int_lin_eq([-1,1,1],[aux6596,2,s_00012],0);
constraint int_lt_reif(s_00020,aux6596,aux6597_BOOL);
constraint int_le_reif(s_00012, s_00020,aux6598_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux6599_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux6600_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux6597_BOOL,aux6598_BOOL,aux6599_BOOL,aux6600_BOOL],aux6601_BOOL);
constraint int_lin_eq([-1,1,1],[aux6602,1,s_00013],0);
constraint int_lt_reif(s_00020,aux6602,aux6603_BOOL);
constraint int_le_reif(s_00013, s_00020,aux6604_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux6605_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux6606_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux6603_BOOL,aux6604_BOOL,aux6605_BOOL,aux6606_BOOL],aux6607_BOOL);
constraint int_lin_eq([-1,1,1],[aux6608,2,s_00015],0);
constraint int_lt_reif(s_00020,aux6608,aux6609_BOOL);
constraint int_le_reif(s_00015, s_00020,aux6610_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux6611_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux6612_BOOL);
constraint array_bool_and([w_00003_00015_BOOL,aux6609_BOOL,aux6610_BOOL,aux6611_BOOL,aux6612_BOOL],aux6613_BOOL);
constraint int_lin_eq([-1,1,1],[aux6614,4,s_00014],0);
constraint int_lt_reif(s_00020,aux6614,aux6615_BOOL);
constraint int_le_reif(s_00014, s_00020,aux6616_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux6617_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux6618_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux6615_BOOL,aux6616_BOOL,aux6617_BOOL,aux6618_BOOL],aux6619_BOOL);
constraint int_lin_eq([-1,1,1],[aux6620,1,s_00017],0);
constraint int_lt_reif(s_00020,aux6620,aux6621_BOOL);
constraint int_le_reif(s_00017, s_00020,aux6622_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux6623_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux6624_BOOL);
constraint array_bool_and([w_00003_00017_BOOL,aux6621_BOOL,aux6622_BOOL,aux6623_BOOL,aux6624_BOOL],aux6625_BOOL);
constraint int_lin_eq([-1,1,1],[aux6626,3,s_00016],0);
constraint int_lt_reif(s_00020,aux6626,aux6627_BOOL);
constraint int_le_reif(s_00016, s_00020,aux6628_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux6629_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux6630_BOOL);
constraint array_bool_and([w_00003_00016_BOOL,aux6627_BOOL,aux6628_BOOL,aux6629_BOOL,aux6630_BOOL],aux6631_BOOL);
constraint int_lin_eq([-1,1,1],[aux6632,3,s_00018],0);
constraint int_lt_reif(s_00020,aux6632,aux6633_BOOL);
constraint int_le_reif(s_00018, s_00020,aux6634_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux6635_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux6636_BOOL);
constraint array_bool_and([w_00003_00018_BOOL,aux6633_BOOL,aux6634_BOOL,aux6635_BOOL,aux6636_BOOL],aux6637_BOOL);
constraint int_lin_eq([-1,1,1],[aux6638,2,s_00019],0);
constraint int_lt_reif(s_00020,aux6638,aux6639_BOOL);
constraint int_le_reif(s_00019, s_00020,aux6640_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux6641_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux6642_BOOL);
constraint array_bool_and([w_00003_00019_BOOL,aux6639_BOOL,aux6640_BOOL,aux6641_BOOL,aux6642_BOOL],aux6643_BOOL);
constraint int_lin_eq([-1,1,1],[aux6644,3,s_00020],0);
constraint int_lt_reif(s_00020,aux6644,aux6645_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux6646_BOOL);
constraint array_bool_and([w_00003_00020_BOOL,aux6645_BOOL,aux6646_BOOL],aux6647_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux6535_INTEGER,aux6541_INTEGER,aux6547_INTEGER,aux6553_INTEGER,aux6559_INTEGER,aux6565_INTEGER,aux6571_INTEGER,aux6577_INTEGER,aux6583_INTEGER,aux6589_INTEGER,aux6595_INTEGER,aux6601_INTEGER,aux6607_INTEGER,aux6613_INTEGER,aux6619_INTEGER,aux6625_INTEGER,aux6631_INTEGER,aux6637_INTEGER,aux6643_INTEGER,aux6647_INTEGER,1],0,aux6648_BOOL);
constraint int_lin_eq([-1,1,1],[aux6649,1,s_00001],0);
constraint int_lt_reif(s_00008,aux6649,aux6650_BOOL);
constraint int_le_reif(s_00001, s_00008,aux6651_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux6652_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6653_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux6650_BOOL,aux6651_BOOL,aux6652_BOOL,aux6653_BOOL],aux6654_BOOL);
constraint int_lin_eq([-1,1,1],[aux6655,2,s_00002],0);
constraint int_lt_reif(s_00008,aux6655,aux6656_BOOL);
constraint int_le_reif(s_00002, s_00008,aux6657_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux6658_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6659_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux6656_BOOL,aux6657_BOOL,aux6658_BOOL,aux6659_BOOL],aux6660_BOOL);
constraint int_lin_eq([-1,1,1],[aux6661,3,s_00003],0);
constraint int_lt_reif(s_00008,aux6661,aux6662_BOOL);
constraint int_le_reif(s_00003, s_00008,aux6663_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux6664_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6665_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux6662_BOOL,aux6663_BOOL,aux6664_BOOL,aux6665_BOOL],aux6666_BOOL);
constraint int_lin_eq([-1,1,1],[aux6667,2,s_00004],0);
constraint int_lt_reif(s_00008,aux6667,aux6668_BOOL);
constraint int_le_reif(s_00004, s_00008,aux6669_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux6670_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6671_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux6668_BOOL,aux6669_BOOL,aux6670_BOOL,aux6671_BOOL],aux6672_BOOL);
constraint int_lin_eq([-1,1,1],[aux6673,2,s_00005],0);
constraint int_lt_reif(s_00008,aux6673,aux6674_BOOL);
constraint int_le_reif(s_00005, s_00008,aux6675_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux6676_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6677_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux6674_BOOL,aux6675_BOOL,aux6676_BOOL,aux6677_BOOL],aux6678_BOOL);
constraint int_lin_eq([-1,1,1],[aux6679,3,s_00006],0);
constraint int_lt_reif(s_00008,aux6679,aux6680_BOOL);
constraint int_le_reif(s_00006, s_00008,aux6681_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux6682_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6683_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux6680_BOOL,aux6681_BOOL,aux6682_BOOL,aux6683_BOOL],aux6684_BOOL);
constraint int_lin_eq([-1,1,1],[aux6685,2,s_00007],0);
constraint int_lt_reif(s_00008,aux6685,aux6686_BOOL);
constraint int_le_reif(s_00007, s_00008,aux6687_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6688_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6689_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux6686_BOOL,aux6687_BOOL,aux6688_BOOL,aux6689_BOOL],aux6690_BOOL);
constraint int_lin_eq([-1,1,1],[aux6691,2,s_00009],0);
constraint int_lt_reif(s_00008,aux6691,aux6692_BOOL);
constraint int_le_reif(s_00009, s_00008,aux6693_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6694_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux6695_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux6692_BOOL,aux6693_BOOL,aux6694_BOOL,aux6695_BOOL],aux6696_BOOL);
constraint int_lin_eq([-1,1,1],[aux6697,1,s_00010],0);
constraint int_lt_reif(s_00008,aux6697,aux6698_BOOL);
constraint int_le_reif(s_00010, s_00008,aux6699_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6700_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux6701_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux6698_BOOL,aux6699_BOOL,aux6700_BOOL,aux6701_BOOL],aux6702_BOOL);
constraint int_lin_eq([-1,1,1],[aux6703,2,s_00011],0);
constraint int_lt_reif(s_00008,aux6703,aux6704_BOOL);
constraint int_le_reif(s_00011, s_00008,aux6705_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6706_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux6707_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux6704_BOOL,aux6705_BOOL,aux6706_BOOL,aux6707_BOOL],aux6708_BOOL);
constraint int_lin_eq([-1,1,1],[aux6709,2,s_00012],0);
constraint int_lt_reif(s_00008,aux6709,aux6710_BOOL);
constraint int_le_reif(s_00012, s_00008,aux6711_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6712_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux6713_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux6710_BOOL,aux6711_BOOL,aux6712_BOOL,aux6713_BOOL],aux6714_BOOL);
constraint int_lin_eq([-1,1,1],[aux6715,1,s_00013],0);
constraint int_lt_reif(s_00008,aux6715,aux6716_BOOL);
constraint int_le_reif(s_00013, s_00008,aux6717_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6718_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux6719_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux6716_BOOL,aux6717_BOOL,aux6718_BOOL,aux6719_BOOL],aux6720_BOOL);
constraint int_lin_eq([-1,1,1],[aux6721,2,s_00015],0);
constraint int_lt_reif(s_00008,aux6721,aux6722_BOOL);
constraint int_le_reif(s_00015, s_00008,aux6723_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6724_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux6725_BOOL);
constraint array_bool_and([w_00003_00015_BOOL,aux6722_BOOL,aux6723_BOOL,aux6724_BOOL,aux6725_BOOL],aux6726_BOOL);
constraint int_lin_eq([-1,1,1],[aux6727,4,s_00014],0);
constraint int_lt_reif(s_00008,aux6727,aux6728_BOOL);
constraint int_le_reif(s_00014, s_00008,aux6729_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6730_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux6731_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux6728_BOOL,aux6729_BOOL,aux6730_BOOL,aux6731_BOOL],aux6732_BOOL);
constraint int_lin_eq([-1,1,1],[aux6733,1,s_00017],0);
constraint int_lt_reif(s_00008,aux6733,aux6734_BOOL);
constraint int_le_reif(s_00017, s_00008,aux6735_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6736_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux6737_BOOL);
constraint array_bool_and([w_00003_00017_BOOL,aux6734_BOOL,aux6735_BOOL,aux6736_BOOL,aux6737_BOOL],aux6738_BOOL);
constraint int_lin_eq([-1,1,1],[aux6739,3,s_00016],0);
constraint int_lt_reif(s_00008,aux6739,aux6740_BOOL);
constraint int_le_reif(s_00016, s_00008,aux6741_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6742_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux6743_BOOL);
constraint array_bool_and([w_00003_00016_BOOL,aux6740_BOOL,aux6741_BOOL,aux6742_BOOL,aux6743_BOOL],aux6744_BOOL);
constraint int_lin_eq([-1,1,1],[aux6745,3,s_00018],0);
constraint int_lt_reif(s_00008,aux6745,aux6746_BOOL);
constraint int_le_reif(s_00018, s_00008,aux6747_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6748_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux6749_BOOL);
constraint array_bool_and([w_00003_00018_BOOL,aux6746_BOOL,aux6747_BOOL,aux6748_BOOL,aux6749_BOOL],aux6750_BOOL);
constraint int_lin_eq([-1,1,1],[aux6751,2,s_00019],0);
constraint int_lt_reif(s_00008,aux6751,aux6752_BOOL);
constraint int_le_reif(s_00019, s_00008,aux6753_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6754_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux6755_BOOL);
constraint array_bool_and([w_00003_00019_BOOL,aux6752_BOOL,aux6753_BOOL,aux6754_BOOL,aux6755_BOOL],aux6756_BOOL);
constraint int_lin_eq([-1,1,1],[aux6757,3,s_00020],0);
constraint int_lt_reif(s_00008,aux6757,aux6758_BOOL);
constraint int_le_reif(s_00020, s_00008,aux6759_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6760_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux6761_BOOL);
constraint array_bool_and([w_00003_00020_BOOL,aux6758_BOOL,aux6759_BOOL,aux6760_BOOL,aux6761_BOOL],aux6762_BOOL);
constraint int_lin_eq([-1,1,1],[aux6763,1,s_00008],0);
constraint int_lt_reif(s_00008,aux6763,aux6764_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6765_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux6764_BOOL,aux6765_BOOL],aux6766_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux6654_INTEGER,aux6660_INTEGER,aux6666_INTEGER,aux6672_INTEGER,aux6678_INTEGER,aux6684_INTEGER,aux6690_INTEGER,aux6696_INTEGER,aux6702_INTEGER,aux6708_INTEGER,aux6714_INTEGER,aux6720_INTEGER,aux6726_INTEGER,aux6732_INTEGER,aux6738_INTEGER,aux6744_INTEGER,aux6750_INTEGER,aux6756_INTEGER,aux6762_INTEGER,aux6766_INTEGER,1],0,aux6767_BOOL);
constraint int_lin_eq([-1,1,1],[aux6768,2,s_00002],0);
constraint int_lt_reif(s_00001,aux6768,aux6769_BOOL);
constraint int_le_reif(s_00002, s_00001,aux6770_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux6771_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux6772_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux6769_BOOL,aux6770_BOOL,aux6771_BOOL,aux6772_BOOL],aux6773_BOOL);
constraint int_lin_eq([-1,1,1],[aux6774,3,s_00003],0);
constraint int_lt_reif(s_00001,aux6774,aux6775_BOOL);
constraint int_le_reif(s_00003, s_00001,aux6776_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux6777_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux6778_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux6775_BOOL,aux6776_BOOL,aux6777_BOOL,aux6778_BOOL],aux6779_BOOL);
constraint int_lin_eq([-1,1,1],[aux6780,2,s_00004],0);
constraint int_lt_reif(s_00001,aux6780,aux6781_BOOL);
constraint int_le_reif(s_00004, s_00001,aux6782_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux6783_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux6784_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux6781_BOOL,aux6782_BOOL,aux6783_BOOL,aux6784_BOOL],aux6785_BOOL);
constraint int_lin_eq([-1,1,1],[aux6786,2,s_00005],0);
constraint int_lt_reif(s_00001,aux6786,aux6787_BOOL);
constraint int_le_reif(s_00005, s_00001,aux6788_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux6789_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux6790_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux6787_BOOL,aux6788_BOOL,aux6789_BOOL,aux6790_BOOL],aux6791_BOOL);
constraint int_lin_eq([-1,1,1],[aux6792,3,s_00006],0);
constraint int_lt_reif(s_00001,aux6792,aux6793_BOOL);
constraint int_le_reif(s_00006, s_00001,aux6794_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux6795_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux6796_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux6793_BOOL,aux6794_BOOL,aux6795_BOOL,aux6796_BOOL],aux6797_BOOL);
constraint int_lin_eq([-1,1,1],[aux6798,2,s_00007],0);
constraint int_lt_reif(s_00001,aux6798,aux6799_BOOL);
constraint int_le_reif(s_00007, s_00001,aux6800_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux6801_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6802_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux6799_BOOL,aux6800_BOOL,aux6801_BOOL,aux6802_BOOL],aux6803_BOOL);
constraint int_lin_eq([-1,1,1],[aux6804,1,s_00008],0);
constraint int_lt_reif(s_00001,aux6804,aux6805_BOOL);
constraint int_le_reif(s_00008, s_00001,aux6806_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux6807_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6808_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux6805_BOOL,aux6806_BOOL,aux6807_BOOL,aux6808_BOOL],aux6809_BOOL);
constraint int_lin_eq([-1,1,1],[aux6810,2,s_00009],0);
constraint int_lt_reif(s_00001,aux6810,aux6811_BOOL);
constraint int_le_reif(s_00009, s_00001,aux6812_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux6813_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux6814_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux6811_BOOL,aux6812_BOOL,aux6813_BOOL,aux6814_BOOL],aux6815_BOOL);
constraint int_lin_eq([-1,1,1],[aux6816,1,s_00010],0);
constraint int_lt_reif(s_00001,aux6816,aux6817_BOOL);
constraint int_le_reif(s_00010, s_00001,aux6818_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux6819_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux6820_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux6817_BOOL,aux6818_BOOL,aux6819_BOOL,aux6820_BOOL],aux6821_BOOL);
constraint int_lin_eq([-1,1,1],[aux6822,2,s_00011],0);
constraint int_lt_reif(s_00001,aux6822,aux6823_BOOL);
constraint int_le_reif(s_00011, s_00001,aux6824_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux6825_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux6826_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux6823_BOOL,aux6824_BOOL,aux6825_BOOL,aux6826_BOOL],aux6827_BOOL);
constraint int_lin_eq([-1,1,1],[aux6828,2,s_00012],0);
constraint int_lt_reif(s_00001,aux6828,aux6829_BOOL);
constraint int_le_reif(s_00012, s_00001,aux6830_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux6831_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux6832_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux6829_BOOL,aux6830_BOOL,aux6831_BOOL,aux6832_BOOL],aux6833_BOOL);
constraint int_lin_eq([-1,1,1],[aux6834,1,s_00013],0);
constraint int_lt_reif(s_00001,aux6834,aux6835_BOOL);
constraint int_le_reif(s_00013, s_00001,aux6836_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux6837_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux6838_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux6835_BOOL,aux6836_BOOL,aux6837_BOOL,aux6838_BOOL],aux6839_BOOL);
constraint int_lin_eq([-1,1,1],[aux6840,2,s_00015],0);
constraint int_lt_reif(s_00001,aux6840,aux6841_BOOL);
constraint int_le_reif(s_00015, s_00001,aux6842_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux6843_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux6844_BOOL);
constraint array_bool_and([w_00003_00015_BOOL,aux6841_BOOL,aux6842_BOOL,aux6843_BOOL,aux6844_BOOL],aux6845_BOOL);
constraint int_lin_eq([-1,1,1],[aux6846,4,s_00014],0);
constraint int_lt_reif(s_00001,aux6846,aux6847_BOOL);
constraint int_le_reif(s_00014, s_00001,aux6848_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux6849_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux6850_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux6847_BOOL,aux6848_BOOL,aux6849_BOOL,aux6850_BOOL],aux6851_BOOL);
constraint int_lin_eq([-1,1,1],[aux6852,1,s_00017],0);
constraint int_lt_reif(s_00001,aux6852,aux6853_BOOL);
constraint int_le_reif(s_00017, s_00001,aux6854_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux6855_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux6856_BOOL);
constraint array_bool_and([w_00003_00017_BOOL,aux6853_BOOL,aux6854_BOOL,aux6855_BOOL,aux6856_BOOL],aux6857_BOOL);
constraint int_lin_eq([-1,1,1],[aux6858,3,s_00016],0);
constraint int_lt_reif(s_00001,aux6858,aux6859_BOOL);
constraint int_le_reif(s_00016, s_00001,aux6860_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux6861_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux6862_BOOL);
constraint array_bool_and([w_00003_00016_BOOL,aux6859_BOOL,aux6860_BOOL,aux6861_BOOL,aux6862_BOOL],aux6863_BOOL);
constraint int_lin_eq([-1,1,1],[aux6864,3,s_00018],0);
constraint int_lt_reif(s_00001,aux6864,aux6865_BOOL);
constraint int_le_reif(s_00018, s_00001,aux6866_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux6867_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux6868_BOOL);
constraint array_bool_and([w_00003_00018_BOOL,aux6865_BOOL,aux6866_BOOL,aux6867_BOOL,aux6868_BOOL],aux6869_BOOL);
constraint int_lin_eq([-1,1,1],[aux6870,2,s_00019],0);
constraint int_lt_reif(s_00001,aux6870,aux6871_BOOL);
constraint int_le_reif(s_00019, s_00001,aux6872_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux6873_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux6874_BOOL);
constraint array_bool_and([w_00003_00019_BOOL,aux6871_BOOL,aux6872_BOOL,aux6873_BOOL,aux6874_BOOL],aux6875_BOOL);
constraint int_lin_eq([-1,1,1],[aux6876,3,s_00020],0);
constraint int_lt_reif(s_00001,aux6876,aux6877_BOOL);
constraint int_le_reif(s_00020, s_00001,aux6878_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux6879_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux6880_BOOL);
constraint array_bool_and([w_00003_00020_BOOL,aux6877_BOOL,aux6878_BOOL,aux6879_BOOL,aux6880_BOOL],aux6881_BOOL);
constraint int_lin_eq([-1,1,1],[aux6882,1,s_00001],0);
constraint int_lt_reif(s_00001,aux6882,aux6883_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux6884_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux6883_BOOL,aux6884_BOOL],aux6885_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux6773_INTEGER,aux6779_INTEGER,aux6785_INTEGER,aux6791_INTEGER,aux6797_INTEGER,aux6803_INTEGER,aux6809_INTEGER,aux6815_INTEGER,aux6821_INTEGER,aux6827_INTEGER,aux6833_INTEGER,aux6839_INTEGER,aux6845_INTEGER,aux6851_INTEGER,aux6857_INTEGER,aux6863_INTEGER,aux6869_INTEGER,aux6875_INTEGER,aux6881_INTEGER,aux6885_INTEGER,1],0,aux6886_BOOL);
constraint int_lin_eq([-1,1,1],[aux6887,1,s_00001],0);
constraint int_lt_reif(s_00014,aux6887,aux6888_BOOL);
constraint int_le_reif(s_00001, s_00014,aux6889_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux6890_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux6891_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux6888_BOOL,aux6889_BOOL,aux6890_BOOL,aux6891_BOOL],aux6892_BOOL);
constraint int_lin_eq([-1,1,1],[aux6893,2,s_00002],0);
constraint int_lt_reif(s_00014,aux6893,aux6894_BOOL);
constraint int_le_reif(s_00002, s_00014,aux6895_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux6896_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux6897_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux6894_BOOL,aux6895_BOOL,aux6896_BOOL,aux6897_BOOL],aux6898_BOOL);
constraint int_lin_eq([-1,1,1],[aux6899,3,s_00003],0);
constraint int_lt_reif(s_00014,aux6899,aux6900_BOOL);
constraint int_le_reif(s_00003, s_00014,aux6901_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux6902_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux6903_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux6900_BOOL,aux6901_BOOL,aux6902_BOOL,aux6903_BOOL],aux6904_BOOL);
constraint int_lin_eq([-1,1,1],[aux6905,2,s_00004],0);
constraint int_lt_reif(s_00014,aux6905,aux6906_BOOL);
constraint int_le_reif(s_00004, s_00014,aux6907_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux6908_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux6909_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux6906_BOOL,aux6907_BOOL,aux6908_BOOL,aux6909_BOOL],aux6910_BOOL);
constraint int_lin_eq([-1,1,1],[aux6911,2,s_00005],0);
constraint int_lt_reif(s_00014,aux6911,aux6912_BOOL);
constraint int_le_reif(s_00005, s_00014,aux6913_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux6914_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux6915_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux6912_BOOL,aux6913_BOOL,aux6914_BOOL,aux6915_BOOL],aux6916_BOOL);
constraint int_lin_eq([-1,1,1],[aux6917,3,s_00006],0);
constraint int_lt_reif(s_00014,aux6917,aux6918_BOOL);
constraint int_le_reif(s_00006, s_00014,aux6919_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux6920_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux6921_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux6918_BOOL,aux6919_BOOL,aux6920_BOOL,aux6921_BOOL],aux6922_BOOL);
constraint int_lin_eq([-1,1,1],[aux6923,2,s_00007],0);
constraint int_lt_reif(s_00014,aux6923,aux6924_BOOL);
constraint int_le_reif(s_00007, s_00014,aux6925_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux6926_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux6927_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux6924_BOOL,aux6925_BOOL,aux6926_BOOL,aux6927_BOOL],aux6928_BOOL);
constraint int_lin_eq([-1,1,1],[aux6929,1,s_00008],0);
constraint int_lt_reif(s_00014,aux6929,aux6930_BOOL);
constraint int_le_reif(s_00008, s_00014,aux6931_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux6932_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux6933_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux6930_BOOL,aux6931_BOOL,aux6932_BOOL,aux6933_BOOL],aux6934_BOOL);
constraint int_lin_eq([-1,1,1],[aux6935,2,s_00009],0);
constraint int_lt_reif(s_00014,aux6935,aux6936_BOOL);
constraint int_le_reif(s_00009, s_00014,aux6937_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux6938_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux6939_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux6936_BOOL,aux6937_BOOL,aux6938_BOOL,aux6939_BOOL],aux6940_BOOL);
constraint int_lin_eq([-1,1,1],[aux6941,1,s_00010],0);
constraint int_lt_reif(s_00014,aux6941,aux6942_BOOL);
constraint int_le_reif(s_00010, s_00014,aux6943_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux6944_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux6945_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux6942_BOOL,aux6943_BOOL,aux6944_BOOL,aux6945_BOOL],aux6946_BOOL);
constraint int_lin_eq([-1,1,1],[aux6947,2,s_00011],0);
constraint int_lt_reif(s_00014,aux6947,aux6948_BOOL);
constraint int_le_reif(s_00011, s_00014,aux6949_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux6950_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux6951_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux6948_BOOL,aux6949_BOOL,aux6950_BOOL,aux6951_BOOL],aux6952_BOOL);
constraint int_lin_eq([-1,1,1],[aux6953,2,s_00012],0);
constraint int_lt_reif(s_00014,aux6953,aux6954_BOOL);
constraint int_le_reif(s_00012, s_00014,aux6955_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux6956_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux6957_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux6954_BOOL,aux6955_BOOL,aux6956_BOOL,aux6957_BOOL],aux6958_BOOL);
constraint int_lin_eq([-1,1,1],[aux6959,1,s_00013],0);
constraint int_lt_reif(s_00014,aux6959,aux6960_BOOL);
constraint int_le_reif(s_00013, s_00014,aux6961_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux6962_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux6963_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux6960_BOOL,aux6961_BOOL,aux6962_BOOL,aux6963_BOOL],aux6964_BOOL);
constraint int_lin_eq([-1,1,1],[aux6965,2,s_00015],0);
constraint int_lt_reif(s_00014,aux6965,aux6966_BOOL);
constraint int_le_reif(s_00015, s_00014,aux6967_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux6968_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux6969_BOOL);
constraint array_bool_and([w_00003_00015_BOOL,aux6966_BOOL,aux6967_BOOL,aux6968_BOOL,aux6969_BOOL],aux6970_BOOL);
constraint int_lin_eq([-1,1,1],[aux6971,1,s_00017],0);
constraint int_lt_reif(s_00014,aux6971,aux6972_BOOL);
constraint int_le_reif(s_00017, s_00014,aux6973_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux6974_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux6975_BOOL);
constraint array_bool_and([w_00003_00017_BOOL,aux6972_BOOL,aux6973_BOOL,aux6974_BOOL,aux6975_BOOL],aux6976_BOOL);
constraint int_lin_eq([-1,1,1],[aux6977,3,s_00016],0);
constraint int_lt_reif(s_00014,aux6977,aux6978_BOOL);
constraint int_le_reif(s_00016, s_00014,aux6979_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux6980_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux6981_BOOL);
constraint array_bool_and([w_00003_00016_BOOL,aux6978_BOOL,aux6979_BOOL,aux6980_BOOL,aux6981_BOOL],aux6982_BOOL);
constraint int_lin_eq([-1,1,1],[aux6983,3,s_00018],0);
constraint int_lt_reif(s_00014,aux6983,aux6984_BOOL);
constraint int_le_reif(s_00018, s_00014,aux6985_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux6986_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux6987_BOOL);
constraint array_bool_and([w_00003_00018_BOOL,aux6984_BOOL,aux6985_BOOL,aux6986_BOOL,aux6987_BOOL],aux6988_BOOL);
constraint int_lin_eq([-1,1,1],[aux6989,2,s_00019],0);
constraint int_lt_reif(s_00014,aux6989,aux6990_BOOL);
constraint int_le_reif(s_00019, s_00014,aux6991_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux6992_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux6993_BOOL);
constraint array_bool_and([w_00003_00019_BOOL,aux6990_BOOL,aux6991_BOOL,aux6992_BOOL,aux6993_BOOL],aux6994_BOOL);
constraint int_lin_eq([-1,1,1],[aux6995,3,s_00020],0);
constraint int_lt_reif(s_00014,aux6995,aux6996_BOOL);
constraint int_le_reif(s_00020, s_00014,aux6997_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux6998_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux6999_BOOL);
constraint array_bool_and([w_00003_00020_BOOL,aux6996_BOOL,aux6997_BOOL,aux6998_BOOL,aux6999_BOOL],aux7000_BOOL);
constraint int_lin_eq([-1,1,1],[aux7001,4,s_00014],0);
constraint int_lt_reif(s_00014,aux7001,aux7002_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux7003_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux7002_BOOL,aux7003_BOOL],aux7004_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux6892_INTEGER,aux6898_INTEGER,aux6904_INTEGER,aux6910_INTEGER,aux6916_INTEGER,aux6922_INTEGER,aux6928_INTEGER,aux6934_INTEGER,aux6940_INTEGER,aux6946_INTEGER,aux6952_INTEGER,aux6958_INTEGER,aux6964_INTEGER,aux6970_INTEGER,aux6976_INTEGER,aux6982_INTEGER,aux6988_INTEGER,aux6994_INTEGER,aux7000_INTEGER,aux7004_INTEGER,1],0,aux7005_BOOL);
constraint int_lin_eq([-1,1,1],[aux7006,1,s_00001],0);
constraint int_lt_reif(s_00005,aux7006,aux7007_BOOL);
constraint int_le_reif(s_00001, s_00005,aux7008_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux7009_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux7010_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux7007_BOOL,aux7008_BOOL,aux7009_BOOL,aux7010_BOOL],aux7011_BOOL);
constraint int_lin_eq([-1,1,1],[aux7012,2,s_00002],0);
constraint int_lt_reif(s_00005,aux7012,aux7013_BOOL);
constraint int_le_reif(s_00002, s_00005,aux7014_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux7015_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux7016_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux7013_BOOL,aux7014_BOOL,aux7015_BOOL,aux7016_BOOL],aux7017_BOOL);
constraint int_lin_eq([-1,1,1],[aux7018,3,s_00003],0);
constraint int_lt_reif(s_00005,aux7018,aux7019_BOOL);
constraint int_le_reif(s_00003, s_00005,aux7020_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux7021_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux7022_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux7019_BOOL,aux7020_BOOL,aux7021_BOOL,aux7022_BOOL],aux7023_BOOL);
constraint int_lin_eq([-1,1,1],[aux7024,2,s_00004],0);
constraint int_lt_reif(s_00005,aux7024,aux7025_BOOL);
constraint int_le_reif(s_00004, s_00005,aux7026_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux7027_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux7028_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux7025_BOOL,aux7026_BOOL,aux7027_BOOL,aux7028_BOOL],aux7029_BOOL);
constraint int_lin_eq([-1,1,1],[aux7030,3,s_00006],0);
constraint int_lt_reif(s_00005,aux7030,aux7031_BOOL);
constraint int_le_reif(s_00006, s_00005,aux7032_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux7033_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux7034_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux7031_BOOL,aux7032_BOOL,aux7033_BOOL,aux7034_BOOL],aux7035_BOOL);
constraint int_lin_eq([-1,1,1],[aux7036,2,s_00007],0);
constraint int_lt_reif(s_00005,aux7036,aux7037_BOOL);
constraint int_le_reif(s_00007, s_00005,aux7038_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux7039_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux7040_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux7037_BOOL,aux7038_BOOL,aux7039_BOOL,aux7040_BOOL],aux7041_BOOL);
constraint int_lin_eq([-1,1,1],[aux7042,1,s_00008],0);
constraint int_lt_reif(s_00005,aux7042,aux7043_BOOL);
constraint int_le_reif(s_00008, s_00005,aux7044_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux7045_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux7046_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux7043_BOOL,aux7044_BOOL,aux7045_BOOL,aux7046_BOOL],aux7047_BOOL);
constraint int_lin_eq([-1,1,1],[aux7048,2,s_00009],0);
constraint int_lt_reif(s_00005,aux7048,aux7049_BOOL);
constraint int_le_reif(s_00009, s_00005,aux7050_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux7051_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux7052_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux7049_BOOL,aux7050_BOOL,aux7051_BOOL,aux7052_BOOL],aux7053_BOOL);
constraint int_lin_eq([-1,1,1],[aux7054,1,s_00010],0);
constraint int_lt_reif(s_00005,aux7054,aux7055_BOOL);
constraint int_le_reif(s_00010, s_00005,aux7056_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux7057_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux7058_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux7055_BOOL,aux7056_BOOL,aux7057_BOOL,aux7058_BOOL],aux7059_BOOL);
constraint int_lin_eq([-1,1,1],[aux7060,2,s_00011],0);
constraint int_lt_reif(s_00005,aux7060,aux7061_BOOL);
constraint int_le_reif(s_00011, s_00005,aux7062_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux7063_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux7064_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux7061_BOOL,aux7062_BOOL,aux7063_BOOL,aux7064_BOOL],aux7065_BOOL);
constraint int_lin_eq([-1,1,1],[aux7066,2,s_00012],0);
constraint int_lt_reif(s_00005,aux7066,aux7067_BOOL);
constraint int_le_reif(s_00012, s_00005,aux7068_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux7069_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux7070_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux7067_BOOL,aux7068_BOOL,aux7069_BOOL,aux7070_BOOL],aux7071_BOOL);
constraint int_lin_eq([-1,1,1],[aux7072,1,s_00013],0);
constraint int_lt_reif(s_00005,aux7072,aux7073_BOOL);
constraint int_le_reif(s_00013, s_00005,aux7074_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux7075_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux7076_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux7073_BOOL,aux7074_BOOL,aux7075_BOOL,aux7076_BOOL],aux7077_BOOL);
constraint int_lin_eq([-1,1,1],[aux7078,2,s_00015],0);
constraint int_lt_reif(s_00005,aux7078,aux7079_BOOL);
constraint int_le_reif(s_00015, s_00005,aux7080_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux7081_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux7082_BOOL);
constraint array_bool_and([w_00003_00015_BOOL,aux7079_BOOL,aux7080_BOOL,aux7081_BOOL,aux7082_BOOL],aux7083_BOOL);
constraint int_lin_eq([-1,1,1],[aux7084,4,s_00014],0);
constraint int_lt_reif(s_00005,aux7084,aux7085_BOOL);
constraint int_le_reif(s_00014, s_00005,aux7086_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux7087_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux7088_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux7085_BOOL,aux7086_BOOL,aux7087_BOOL,aux7088_BOOL],aux7089_BOOL);
constraint int_lin_eq([-1,1,1],[aux7090,1,s_00017],0);
constraint int_lt_reif(s_00005,aux7090,aux7091_BOOL);
constraint int_le_reif(s_00017, s_00005,aux7092_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux7093_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux7094_BOOL);
constraint array_bool_and([w_00003_00017_BOOL,aux7091_BOOL,aux7092_BOOL,aux7093_BOOL,aux7094_BOOL],aux7095_BOOL);
constraint int_lin_eq([-1,1,1],[aux7096,3,s_00016],0);
constraint int_lt_reif(s_00005,aux7096,aux7097_BOOL);
constraint int_le_reif(s_00016, s_00005,aux7098_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux7099_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux7100_BOOL);
constraint array_bool_and([w_00003_00016_BOOL,aux7097_BOOL,aux7098_BOOL,aux7099_BOOL,aux7100_BOOL],aux7101_BOOL);
constraint int_lin_eq([-1,1,1],[aux7102,3,s_00018],0);
constraint int_lt_reif(s_00005,aux7102,aux7103_BOOL);
constraint int_le_reif(s_00018, s_00005,aux7104_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux7105_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux7106_BOOL);
constraint array_bool_and([w_00003_00018_BOOL,aux7103_BOOL,aux7104_BOOL,aux7105_BOOL,aux7106_BOOL],aux7107_BOOL);
constraint int_lin_eq([-1,1,1],[aux7108,2,s_00019],0);
constraint int_lt_reif(s_00005,aux7108,aux7109_BOOL);
constraint int_le_reif(s_00019, s_00005,aux7110_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux7111_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux7112_BOOL);
constraint array_bool_and([w_00003_00019_BOOL,aux7109_BOOL,aux7110_BOOL,aux7111_BOOL,aux7112_BOOL],aux7113_BOOL);
constraint int_lin_eq([-1,1,1],[aux7114,3,s_00020],0);
constraint int_lt_reif(s_00005,aux7114,aux7115_BOOL);
constraint int_le_reif(s_00020, s_00005,aux7116_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux7117_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux7118_BOOL);
constraint array_bool_and([w_00003_00020_BOOL,aux7115_BOOL,aux7116_BOOL,aux7117_BOOL,aux7118_BOOL],aux7119_BOOL);
constraint int_lin_eq([-1,1,1],[aux7120,2,s_00005],0);
constraint int_lt_reif(s_00005,aux7120,aux7121_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux7122_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux7121_BOOL,aux7122_BOOL],aux7123_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux7011_INTEGER,aux7017_INTEGER,aux7023_INTEGER,aux7029_INTEGER,aux7035_INTEGER,aux7041_INTEGER,aux7047_INTEGER,aux7053_INTEGER,aux7059_INTEGER,aux7065_INTEGER,aux7071_INTEGER,aux7077_INTEGER,aux7083_INTEGER,aux7089_INTEGER,aux7095_INTEGER,aux7101_INTEGER,aux7107_INTEGER,aux7113_INTEGER,aux7119_INTEGER,aux7123_INTEGER,1],0,aux7124_BOOL);
constraint int_lin_eq([-1,1,1],[aux7125,1,s_00001],0);
constraint int_lt_reif(s_00004,aux7125,aux7126_BOOL);
constraint int_le_reif(s_00001, s_00004,aux7127_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux7128_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux7129_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux7126_BOOL,aux7127_BOOL,aux7128_BOOL,aux7129_BOOL],aux7130_BOOL);
constraint int_lin_eq([-1,1,1],[aux7131,2,s_00002],0);
constraint int_lt_reif(s_00004,aux7131,aux7132_BOOL);
constraint int_le_reif(s_00002, s_00004,aux7133_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux7134_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux7135_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux7132_BOOL,aux7133_BOOL,aux7134_BOOL,aux7135_BOOL],aux7136_BOOL);
constraint int_lin_eq([-1,1,1],[aux7137,3,s_00003],0);
constraint int_lt_reif(s_00004,aux7137,aux7138_BOOL);
constraint int_le_reif(s_00003, s_00004,aux7139_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux7140_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux7141_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux7138_BOOL,aux7139_BOOL,aux7140_BOOL,aux7141_BOOL],aux7142_BOOL);
constraint int_lin_eq([-1,1,1],[aux7143,2,s_00005],0);
constraint int_lt_reif(s_00004,aux7143,aux7144_BOOL);
constraint int_le_reif(s_00005, s_00004,aux7145_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux7146_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux7147_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux7144_BOOL,aux7145_BOOL,aux7146_BOOL,aux7147_BOOL],aux7148_BOOL);
constraint int_lin_eq([-1,1,1],[aux7149,3,s_00006],0);
constraint int_lt_reif(s_00004,aux7149,aux7150_BOOL);
constraint int_le_reif(s_00006, s_00004,aux7151_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux7152_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux7153_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux7150_BOOL,aux7151_BOOL,aux7152_BOOL,aux7153_BOOL],aux7154_BOOL);
constraint int_lin_eq([-1,1,1],[aux7155,2,s_00007],0);
constraint int_lt_reif(s_00004,aux7155,aux7156_BOOL);
constraint int_le_reif(s_00007, s_00004,aux7157_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux7158_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux7159_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux7156_BOOL,aux7157_BOOL,aux7158_BOOL,aux7159_BOOL],aux7160_BOOL);
constraint int_lin_eq([-1,1,1],[aux7161,1,s_00008],0);
constraint int_lt_reif(s_00004,aux7161,aux7162_BOOL);
constraint int_le_reif(s_00008, s_00004,aux7163_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux7164_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux7165_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux7162_BOOL,aux7163_BOOL,aux7164_BOOL,aux7165_BOOL],aux7166_BOOL);
constraint int_lin_eq([-1,1,1],[aux7167,2,s_00009],0);
constraint int_lt_reif(s_00004,aux7167,aux7168_BOOL);
constraint int_le_reif(s_00009, s_00004,aux7169_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux7170_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux7171_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux7168_BOOL,aux7169_BOOL,aux7170_BOOL,aux7171_BOOL],aux7172_BOOL);
constraint int_lin_eq([-1,1,1],[aux7173,1,s_00010],0);
constraint int_lt_reif(s_00004,aux7173,aux7174_BOOL);
constraint int_le_reif(s_00010, s_00004,aux7175_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux7176_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux7177_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux7174_BOOL,aux7175_BOOL,aux7176_BOOL,aux7177_BOOL],aux7178_BOOL);
constraint int_lin_eq([-1,1,1],[aux7179,2,s_00011],0);
constraint int_lt_reif(s_00004,aux7179,aux7180_BOOL);
constraint int_le_reif(s_00011, s_00004,aux7181_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux7182_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux7183_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux7180_BOOL,aux7181_BOOL,aux7182_BOOL,aux7183_BOOL],aux7184_BOOL);
constraint int_lin_eq([-1,1,1],[aux7185,2,s_00012],0);
constraint int_lt_reif(s_00004,aux7185,aux7186_BOOL);
constraint int_le_reif(s_00012, s_00004,aux7187_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux7188_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux7189_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux7186_BOOL,aux7187_BOOL,aux7188_BOOL,aux7189_BOOL],aux7190_BOOL);
constraint int_lin_eq([-1,1,1],[aux7191,1,s_00013],0);
constraint int_lt_reif(s_00004,aux7191,aux7192_BOOL);
constraint int_le_reif(s_00013, s_00004,aux7193_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux7194_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux7195_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux7192_BOOL,aux7193_BOOL,aux7194_BOOL,aux7195_BOOL],aux7196_BOOL);
constraint int_lin_eq([-1,1,1],[aux7197,2,s_00015],0);
constraint int_lt_reif(s_00004,aux7197,aux7198_BOOL);
constraint int_le_reif(s_00015, s_00004,aux7199_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux7200_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux7201_BOOL);
constraint array_bool_and([w_00003_00015_BOOL,aux7198_BOOL,aux7199_BOOL,aux7200_BOOL,aux7201_BOOL],aux7202_BOOL);
constraint int_lin_eq([-1,1,1],[aux7203,4,s_00014],0);
constraint int_lt_reif(s_00004,aux7203,aux7204_BOOL);
constraint int_le_reif(s_00014, s_00004,aux7205_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux7206_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux7207_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux7204_BOOL,aux7205_BOOL,aux7206_BOOL,aux7207_BOOL],aux7208_BOOL);
constraint int_lin_eq([-1,1,1],[aux7209,1,s_00017],0);
constraint int_lt_reif(s_00004,aux7209,aux7210_BOOL);
constraint int_le_reif(s_00017, s_00004,aux7211_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux7212_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux7213_BOOL);
constraint array_bool_and([w_00003_00017_BOOL,aux7210_BOOL,aux7211_BOOL,aux7212_BOOL,aux7213_BOOL],aux7214_BOOL);
constraint int_lin_eq([-1,1,1],[aux7215,3,s_00016],0);
constraint int_lt_reif(s_00004,aux7215,aux7216_BOOL);
constraint int_le_reif(s_00016, s_00004,aux7217_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux7218_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux7219_BOOL);
constraint array_bool_and([w_00003_00016_BOOL,aux7216_BOOL,aux7217_BOOL,aux7218_BOOL,aux7219_BOOL],aux7220_BOOL);
constraint int_lin_eq([-1,1,1],[aux7221,3,s_00018],0);
constraint int_lt_reif(s_00004,aux7221,aux7222_BOOL);
constraint int_le_reif(s_00018, s_00004,aux7223_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux7224_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux7225_BOOL);
constraint array_bool_and([w_00003_00018_BOOL,aux7222_BOOL,aux7223_BOOL,aux7224_BOOL,aux7225_BOOL],aux7226_BOOL);
constraint int_lin_eq([-1,1,1],[aux7227,2,s_00019],0);
constraint int_lt_reif(s_00004,aux7227,aux7228_BOOL);
constraint int_le_reif(s_00019, s_00004,aux7229_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux7230_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux7231_BOOL);
constraint array_bool_and([w_00003_00019_BOOL,aux7228_BOOL,aux7229_BOOL,aux7230_BOOL,aux7231_BOOL],aux7232_BOOL);
constraint int_lin_eq([-1,1,1],[aux7233,3,s_00020],0);
constraint int_lt_reif(s_00004,aux7233,aux7234_BOOL);
constraint int_le_reif(s_00020, s_00004,aux7235_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux7236_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux7237_BOOL);
constraint array_bool_and([w_00003_00020_BOOL,aux7234_BOOL,aux7235_BOOL,aux7236_BOOL,aux7237_BOOL],aux7238_BOOL);
constraint int_lin_eq([-1,1,1],[aux7239,2,s_00004],0);
constraint int_lt_reif(s_00004,aux7239,aux7240_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux7241_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux7240_BOOL,aux7241_BOOL],aux7242_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux7130_INTEGER,aux7136_INTEGER,aux7142_INTEGER,aux7148_INTEGER,aux7154_INTEGER,aux7160_INTEGER,aux7166_INTEGER,aux7172_INTEGER,aux7178_INTEGER,aux7184_INTEGER,aux7190_INTEGER,aux7196_INTEGER,aux7202_INTEGER,aux7208_INTEGER,aux7214_INTEGER,aux7220_INTEGER,aux7226_INTEGER,aux7232_INTEGER,aux7238_INTEGER,aux7242_INTEGER,1],0,aux7243_BOOL);
constraint int_lin_eq([-1,1,1],[aux7244,1,s_00001],0);
constraint int_lt_reif(s_00010,aux7244,aux7245_BOOL);
constraint int_le_reif(s_00001, s_00010,aux7246_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux7247_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux7248_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux7245_BOOL,aux7246_BOOL,aux7247_BOOL,aux7248_BOOL],aux7249_BOOL);
constraint int_lin_eq([-1,1,1],[aux7250,2,s_00002],0);
constraint int_lt_reif(s_00010,aux7250,aux7251_BOOL);
constraint int_le_reif(s_00002, s_00010,aux7252_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux7253_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux7254_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux7251_BOOL,aux7252_BOOL,aux7253_BOOL,aux7254_BOOL],aux7255_BOOL);
constraint int_lin_eq([-1,1,1],[aux7256,3,s_00003],0);
constraint int_lt_reif(s_00010,aux7256,aux7257_BOOL);
constraint int_le_reif(s_00003, s_00010,aux7258_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux7259_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux7260_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux7257_BOOL,aux7258_BOOL,aux7259_BOOL,aux7260_BOOL],aux7261_BOOL);
constraint int_lin_eq([-1,1,1],[aux7262,2,s_00004],0);
constraint int_lt_reif(s_00010,aux7262,aux7263_BOOL);
constraint int_le_reif(s_00004, s_00010,aux7264_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux7265_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux7266_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux7263_BOOL,aux7264_BOOL,aux7265_BOOL,aux7266_BOOL],aux7267_BOOL);
constraint int_lin_eq([-1,1,1],[aux7268,2,s_00005],0);
constraint int_lt_reif(s_00010,aux7268,aux7269_BOOL);
constraint int_le_reif(s_00005, s_00010,aux7270_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux7271_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux7272_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux7269_BOOL,aux7270_BOOL,aux7271_BOOL,aux7272_BOOL],aux7273_BOOL);
constraint int_lin_eq([-1,1,1],[aux7274,3,s_00006],0);
constraint int_lt_reif(s_00010,aux7274,aux7275_BOOL);
constraint int_le_reif(s_00006, s_00010,aux7276_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux7277_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux7278_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux7275_BOOL,aux7276_BOOL,aux7277_BOOL,aux7278_BOOL],aux7279_BOOL);
constraint int_lin_eq([-1,1,1],[aux7280,2,s_00007],0);
constraint int_lt_reif(s_00010,aux7280,aux7281_BOOL);
constraint int_le_reif(s_00007, s_00010,aux7282_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux7283_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux7284_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux7281_BOOL,aux7282_BOOL,aux7283_BOOL,aux7284_BOOL],aux7285_BOOL);
constraint int_lin_eq([-1,1,1],[aux7286,1,s_00008],0);
constraint int_lt_reif(s_00010,aux7286,aux7287_BOOL);
constraint int_le_reif(s_00008, s_00010,aux7288_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux7289_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux7290_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux7287_BOOL,aux7288_BOOL,aux7289_BOOL,aux7290_BOOL],aux7291_BOOL);
constraint int_lin_eq([-1,1,1],[aux7292,2,s_00009],0);
constraint int_lt_reif(s_00010,aux7292,aux7293_BOOL);
constraint int_le_reif(s_00009, s_00010,aux7294_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux7295_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux7296_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux7293_BOOL,aux7294_BOOL,aux7295_BOOL,aux7296_BOOL],aux7297_BOOL);
constraint int_lin_eq([-1,1,1],[aux7298,2,s_00011],0);
constraint int_lt_reif(s_00010,aux7298,aux7299_BOOL);
constraint int_le_reif(s_00011, s_00010,aux7300_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux7301_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux7302_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux7299_BOOL,aux7300_BOOL,aux7301_BOOL,aux7302_BOOL],aux7303_BOOL);
constraint int_lin_eq([-1,1,1],[aux7304,2,s_00012],0);
constraint int_lt_reif(s_00010,aux7304,aux7305_BOOL);
constraint int_le_reif(s_00012, s_00010,aux7306_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux7307_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux7308_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux7305_BOOL,aux7306_BOOL,aux7307_BOOL,aux7308_BOOL],aux7309_BOOL);
constraint int_lin_eq([-1,1,1],[aux7310,1,s_00013],0);
constraint int_lt_reif(s_00010,aux7310,aux7311_BOOL);
constraint int_le_reif(s_00013, s_00010,aux7312_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux7313_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux7314_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux7311_BOOL,aux7312_BOOL,aux7313_BOOL,aux7314_BOOL],aux7315_BOOL);
constraint int_lin_eq([-1,1,1],[aux7316,2,s_00015],0);
constraint int_lt_reif(s_00010,aux7316,aux7317_BOOL);
constraint int_le_reif(s_00015, s_00010,aux7318_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux7319_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux7320_BOOL);
constraint array_bool_and([w_00003_00015_BOOL,aux7317_BOOL,aux7318_BOOL,aux7319_BOOL,aux7320_BOOL],aux7321_BOOL);
constraint int_lin_eq([-1,1,1],[aux7322,4,s_00014],0);
constraint int_lt_reif(s_00010,aux7322,aux7323_BOOL);
constraint int_le_reif(s_00014, s_00010,aux7324_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux7325_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux7326_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux7323_BOOL,aux7324_BOOL,aux7325_BOOL,aux7326_BOOL],aux7327_BOOL);
constraint int_lin_eq([-1,1,1],[aux7328,1,s_00017],0);
constraint int_lt_reif(s_00010,aux7328,aux7329_BOOL);
constraint int_le_reif(s_00017, s_00010,aux7330_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux7331_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux7332_BOOL);
constraint array_bool_and([w_00003_00017_BOOL,aux7329_BOOL,aux7330_BOOL,aux7331_BOOL,aux7332_BOOL],aux7333_BOOL);
constraint int_lin_eq([-1,1,1],[aux7334,3,s_00016],0);
constraint int_lt_reif(s_00010,aux7334,aux7335_BOOL);
constraint int_le_reif(s_00016, s_00010,aux7336_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux7337_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux7338_BOOL);
constraint array_bool_and([w_00003_00016_BOOL,aux7335_BOOL,aux7336_BOOL,aux7337_BOOL,aux7338_BOOL],aux7339_BOOL);
constraint int_lin_eq([-1,1,1],[aux7340,3,s_00018],0);
constraint int_lt_reif(s_00010,aux7340,aux7341_BOOL);
constraint int_le_reif(s_00018, s_00010,aux7342_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux7343_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux7344_BOOL);
constraint array_bool_and([w_00003_00018_BOOL,aux7341_BOOL,aux7342_BOOL,aux7343_BOOL,aux7344_BOOL],aux7345_BOOL);
constraint int_lin_eq([-1,1,1],[aux7346,2,s_00019],0);
constraint int_lt_reif(s_00010,aux7346,aux7347_BOOL);
constraint int_le_reif(s_00019, s_00010,aux7348_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux7349_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux7350_BOOL);
constraint array_bool_and([w_00003_00019_BOOL,aux7347_BOOL,aux7348_BOOL,aux7349_BOOL,aux7350_BOOL],aux7351_BOOL);
constraint int_lin_eq([-1,1,1],[aux7352,3,s_00020],0);
constraint int_lt_reif(s_00010,aux7352,aux7353_BOOL);
constraint int_le_reif(s_00020, s_00010,aux7354_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux7355_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux7356_BOOL);
constraint array_bool_and([w_00003_00020_BOOL,aux7353_BOOL,aux7354_BOOL,aux7355_BOOL,aux7356_BOOL],aux7357_BOOL);
constraint int_lin_eq([-1,1,1],[aux7358,1,s_00010],0);
constraint int_lt_reif(s_00010,aux7358,aux7359_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux7360_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux7359_BOOL,aux7360_BOOL],aux7361_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux7249_INTEGER,aux7255_INTEGER,aux7261_INTEGER,aux7267_INTEGER,aux7273_INTEGER,aux7279_INTEGER,aux7285_INTEGER,aux7291_INTEGER,aux7297_INTEGER,aux7303_INTEGER,aux7309_INTEGER,aux7315_INTEGER,aux7321_INTEGER,aux7327_INTEGER,aux7333_INTEGER,aux7339_INTEGER,aux7345_INTEGER,aux7351_INTEGER,aux7357_INTEGER,aux7361_INTEGER,1],0,aux7362_BOOL);
constraint int_lin_eq([-1,1,1],[aux7363,1,s_00001],0);
constraint int_lt_reif(s_00017,aux7363,aux7364_BOOL);
constraint int_le_reif(s_00001, s_00017,aux7365_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux7366_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux7367_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux7364_BOOL,aux7365_BOOL,aux7366_BOOL,aux7367_BOOL],aux7368_BOOL);
constraint int_lin_eq([-1,1,1],[aux7369,2,s_00002],0);
constraint int_lt_reif(s_00017,aux7369,aux7370_BOOL);
constraint int_le_reif(s_00002, s_00017,aux7371_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux7372_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux7373_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux7370_BOOL,aux7371_BOOL,aux7372_BOOL,aux7373_BOOL],aux7374_BOOL);
constraint int_lin_eq([-1,1,1],[aux7375,3,s_00003],0);
constraint int_lt_reif(s_00017,aux7375,aux7376_BOOL);
constraint int_le_reif(s_00003, s_00017,aux7377_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux7378_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux7379_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux7376_BOOL,aux7377_BOOL,aux7378_BOOL,aux7379_BOOL],aux7380_BOOL);
constraint int_lin_eq([-1,1,1],[aux7381,2,s_00004],0);
constraint int_lt_reif(s_00017,aux7381,aux7382_BOOL);
constraint int_le_reif(s_00004, s_00017,aux7383_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux7384_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux7385_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux7382_BOOL,aux7383_BOOL,aux7384_BOOL,aux7385_BOOL],aux7386_BOOL);
constraint int_lin_eq([-1,1,1],[aux7387,2,s_00005],0);
constraint int_lt_reif(s_00017,aux7387,aux7388_BOOL);
constraint int_le_reif(s_00005, s_00017,aux7389_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux7390_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux7391_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux7388_BOOL,aux7389_BOOL,aux7390_BOOL,aux7391_BOOL],aux7392_BOOL);
constraint int_lin_eq([-1,1,1],[aux7393,3,s_00006],0);
constraint int_lt_reif(s_00017,aux7393,aux7394_BOOL);
constraint int_le_reif(s_00006, s_00017,aux7395_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux7396_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux7397_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux7394_BOOL,aux7395_BOOL,aux7396_BOOL,aux7397_BOOL],aux7398_BOOL);
constraint int_lin_eq([-1,1,1],[aux7399,2,s_00007],0);
constraint int_lt_reif(s_00017,aux7399,aux7400_BOOL);
constraint int_le_reif(s_00007, s_00017,aux7401_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux7402_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux7403_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux7400_BOOL,aux7401_BOOL,aux7402_BOOL,aux7403_BOOL],aux7404_BOOL);
constraint int_lin_eq([-1,1,1],[aux7405,1,s_00008],0);
constraint int_lt_reif(s_00017,aux7405,aux7406_BOOL);
constraint int_le_reif(s_00008, s_00017,aux7407_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux7408_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux7409_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux7406_BOOL,aux7407_BOOL,aux7408_BOOL,aux7409_BOOL],aux7410_BOOL);
constraint int_lin_eq([-1,1,1],[aux7411,2,s_00009],0);
constraint int_lt_reif(s_00017,aux7411,aux7412_BOOL);
constraint int_le_reif(s_00009, s_00017,aux7413_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux7414_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux7415_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux7412_BOOL,aux7413_BOOL,aux7414_BOOL,aux7415_BOOL],aux7416_BOOL);
constraint int_lin_eq([-1,1,1],[aux7417,1,s_00010],0);
constraint int_lt_reif(s_00017,aux7417,aux7418_BOOL);
constraint int_le_reif(s_00010, s_00017,aux7419_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux7420_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux7421_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux7418_BOOL,aux7419_BOOL,aux7420_BOOL,aux7421_BOOL],aux7422_BOOL);
constraint int_lin_eq([-1,1,1],[aux7423,2,s_00011],0);
constraint int_lt_reif(s_00017,aux7423,aux7424_BOOL);
constraint int_le_reif(s_00011, s_00017,aux7425_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux7426_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux7427_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux7424_BOOL,aux7425_BOOL,aux7426_BOOL,aux7427_BOOL],aux7428_BOOL);
constraint int_lin_eq([-1,1,1],[aux7429,2,s_00012],0);
constraint int_lt_reif(s_00017,aux7429,aux7430_BOOL);
constraint int_le_reif(s_00012, s_00017,aux7431_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux7432_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux7433_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux7430_BOOL,aux7431_BOOL,aux7432_BOOL,aux7433_BOOL],aux7434_BOOL);
constraint int_lin_eq([-1,1,1],[aux7435,1,s_00013],0);
constraint int_lt_reif(s_00017,aux7435,aux7436_BOOL);
constraint int_le_reif(s_00013, s_00017,aux7437_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux7438_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux7439_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux7436_BOOL,aux7437_BOOL,aux7438_BOOL,aux7439_BOOL],aux7440_BOOL);
constraint int_lin_eq([-1,1,1],[aux7441,2,s_00015],0);
constraint int_lt_reif(s_00017,aux7441,aux7442_BOOL);
constraint int_le_reif(s_00015, s_00017,aux7443_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux7444_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux7445_BOOL);
constraint array_bool_and([w_00003_00015_BOOL,aux7442_BOOL,aux7443_BOOL,aux7444_BOOL,aux7445_BOOL],aux7446_BOOL);
constraint int_lin_eq([-1,1,1],[aux7447,4,s_00014],0);
constraint int_lt_reif(s_00017,aux7447,aux7448_BOOL);
constraint int_le_reif(s_00014, s_00017,aux7449_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux7450_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux7451_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux7448_BOOL,aux7449_BOOL,aux7450_BOOL,aux7451_BOOL],aux7452_BOOL);
constraint int_lin_eq([-1,1,1],[aux7453,3,s_00016],0);
constraint int_lt_reif(s_00017,aux7453,aux7454_BOOL);
constraint int_le_reif(s_00016, s_00017,aux7455_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux7456_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux7457_BOOL);
constraint array_bool_and([w_00003_00016_BOOL,aux7454_BOOL,aux7455_BOOL,aux7456_BOOL,aux7457_BOOL],aux7458_BOOL);
constraint int_lin_eq([-1,1,1],[aux7459,3,s_00018],0);
constraint int_lt_reif(s_00017,aux7459,aux7460_BOOL);
constraint int_le_reif(s_00018, s_00017,aux7461_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux7462_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux7463_BOOL);
constraint array_bool_and([w_00003_00018_BOOL,aux7460_BOOL,aux7461_BOOL,aux7462_BOOL,aux7463_BOOL],aux7464_BOOL);
constraint int_lin_eq([-1,1,1],[aux7465,2,s_00019],0);
constraint int_lt_reif(s_00017,aux7465,aux7466_BOOL);
constraint int_le_reif(s_00019, s_00017,aux7467_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux7468_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux7469_BOOL);
constraint array_bool_and([w_00003_00019_BOOL,aux7466_BOOL,aux7467_BOOL,aux7468_BOOL,aux7469_BOOL],aux7470_BOOL);
constraint int_lin_eq([-1,1,1],[aux7471,3,s_00020],0);
constraint int_lt_reif(s_00017,aux7471,aux7472_BOOL);
constraint int_le_reif(s_00020, s_00017,aux7473_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux7474_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux7475_BOOL);
constraint array_bool_and([w_00003_00020_BOOL,aux7472_BOOL,aux7473_BOOL,aux7474_BOOL,aux7475_BOOL],aux7476_BOOL);
constraint int_lin_eq([-1,1,1],[aux7477,1,s_00017],0);
constraint int_lt_reif(s_00017,aux7477,aux7478_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux7479_BOOL);
constraint array_bool_and([w_00003_00017_BOOL,aux7478_BOOL,aux7479_BOOL],aux7480_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux7368_INTEGER,aux7374_INTEGER,aux7380_INTEGER,aux7386_INTEGER,aux7392_INTEGER,aux7398_INTEGER,aux7404_INTEGER,aux7410_INTEGER,aux7416_INTEGER,aux7422_INTEGER,aux7428_INTEGER,aux7434_INTEGER,aux7440_INTEGER,aux7446_INTEGER,aux7452_INTEGER,aux7458_INTEGER,aux7464_INTEGER,aux7470_INTEGER,aux7476_INTEGER,aux7480_INTEGER,1],0,aux7481_BOOL);
constraint int_lin_eq([-1,1,1],[aux7482,1,s_00001],0);
constraint int_lt_reif(s_00009,aux7482,aux7483_BOOL);
constraint int_le_reif(s_00001, s_00009,aux7484_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux7485_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux7486_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux7483_BOOL,aux7484_BOOL,aux7485_BOOL,aux7486_BOOL],aux7487_BOOL);
constraint int_lin_eq([-1,1,1],[aux7488,2,s_00002],0);
constraint int_lt_reif(s_00009,aux7488,aux7489_BOOL);
constraint int_le_reif(s_00002, s_00009,aux7490_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux7491_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux7492_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux7489_BOOL,aux7490_BOOL,aux7491_BOOL,aux7492_BOOL],aux7493_BOOL);
constraint int_lin_eq([-1,1,1],[aux7494,3,s_00003],0);
constraint int_lt_reif(s_00009,aux7494,aux7495_BOOL);
constraint int_le_reif(s_00003, s_00009,aux7496_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux7497_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux7498_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux7495_BOOL,aux7496_BOOL,aux7497_BOOL,aux7498_BOOL],aux7499_BOOL);
constraint int_lin_eq([-1,1,1],[aux7500,2,s_00004],0);
constraint int_lt_reif(s_00009,aux7500,aux7501_BOOL);
constraint int_le_reif(s_00004, s_00009,aux7502_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux7503_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux7504_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux7501_BOOL,aux7502_BOOL,aux7503_BOOL,aux7504_BOOL],aux7505_BOOL);
constraint int_lin_eq([-1,1,1],[aux7506,2,s_00005],0);
constraint int_lt_reif(s_00009,aux7506,aux7507_BOOL);
constraint int_le_reif(s_00005, s_00009,aux7508_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux7509_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux7510_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux7507_BOOL,aux7508_BOOL,aux7509_BOOL,aux7510_BOOL],aux7511_BOOL);
constraint int_lin_eq([-1,1,1],[aux7512,3,s_00006],0);
constraint int_lt_reif(s_00009,aux7512,aux7513_BOOL);
constraint int_le_reif(s_00006, s_00009,aux7514_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux7515_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux7516_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux7513_BOOL,aux7514_BOOL,aux7515_BOOL,aux7516_BOOL],aux7517_BOOL);
constraint int_lin_eq([-1,1,1],[aux7518,2,s_00007],0);
constraint int_lt_reif(s_00009,aux7518,aux7519_BOOL);
constraint int_le_reif(s_00007, s_00009,aux7520_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux7521_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux7522_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux7519_BOOL,aux7520_BOOL,aux7521_BOOL,aux7522_BOOL],aux7523_BOOL);
constraint int_lin_eq([-1,1,1],[aux7524,1,s_00008],0);
constraint int_lt_reif(s_00009,aux7524,aux7525_BOOL);
constraint int_le_reif(s_00008, s_00009,aux7526_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux7527_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux7528_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux7525_BOOL,aux7526_BOOL,aux7527_BOOL,aux7528_BOOL],aux7529_BOOL);
constraint int_lin_eq([-1,1,1],[aux7530,1,s_00010],0);
constraint int_lt_reif(s_00009,aux7530,aux7531_BOOL);
constraint int_le_reif(s_00010, s_00009,aux7532_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux7533_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux7534_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux7531_BOOL,aux7532_BOOL,aux7533_BOOL,aux7534_BOOL],aux7535_BOOL);
constraint int_lin_eq([-1,1,1],[aux7536,2,s_00011],0);
constraint int_lt_reif(s_00009,aux7536,aux7537_BOOL);
constraint int_le_reif(s_00011, s_00009,aux7538_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux7539_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux7540_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux7537_BOOL,aux7538_BOOL,aux7539_BOOL,aux7540_BOOL],aux7541_BOOL);
constraint int_lin_eq([-1,1,1],[aux7542,2,s_00012],0);
constraint int_lt_reif(s_00009,aux7542,aux7543_BOOL);
constraint int_le_reif(s_00012, s_00009,aux7544_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux7545_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux7546_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux7543_BOOL,aux7544_BOOL,aux7545_BOOL,aux7546_BOOL],aux7547_BOOL);
constraint int_lin_eq([-1,1,1],[aux7548,1,s_00013],0);
constraint int_lt_reif(s_00009,aux7548,aux7549_BOOL);
constraint int_le_reif(s_00013, s_00009,aux7550_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux7551_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux7552_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux7549_BOOL,aux7550_BOOL,aux7551_BOOL,aux7552_BOOL],aux7553_BOOL);
constraint int_lin_eq([-1,1,1],[aux7554,2,s_00015],0);
constraint int_lt_reif(s_00009,aux7554,aux7555_BOOL);
constraint int_le_reif(s_00015, s_00009,aux7556_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux7557_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux7558_BOOL);
constraint array_bool_and([w_00003_00015_BOOL,aux7555_BOOL,aux7556_BOOL,aux7557_BOOL,aux7558_BOOL],aux7559_BOOL);
constraint int_lin_eq([-1,1,1],[aux7560,4,s_00014],0);
constraint int_lt_reif(s_00009,aux7560,aux7561_BOOL);
constraint int_le_reif(s_00014, s_00009,aux7562_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux7563_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux7564_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux7561_BOOL,aux7562_BOOL,aux7563_BOOL,aux7564_BOOL],aux7565_BOOL);
constraint int_lin_eq([-1,1,1],[aux7566,1,s_00017],0);
constraint int_lt_reif(s_00009,aux7566,aux7567_BOOL);
constraint int_le_reif(s_00017, s_00009,aux7568_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux7569_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux7570_BOOL);
constraint array_bool_and([w_00003_00017_BOOL,aux7567_BOOL,aux7568_BOOL,aux7569_BOOL,aux7570_BOOL],aux7571_BOOL);
constraint int_lin_eq([-1,1,1],[aux7572,3,s_00016],0);
constraint int_lt_reif(s_00009,aux7572,aux7573_BOOL);
constraint int_le_reif(s_00016, s_00009,aux7574_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux7575_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux7576_BOOL);
constraint array_bool_and([w_00003_00016_BOOL,aux7573_BOOL,aux7574_BOOL,aux7575_BOOL,aux7576_BOOL],aux7577_BOOL);
constraint int_lin_eq([-1,1,1],[aux7578,3,s_00018],0);
constraint int_lt_reif(s_00009,aux7578,aux7579_BOOL);
constraint int_le_reif(s_00018, s_00009,aux7580_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux7581_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux7582_BOOL);
constraint array_bool_and([w_00003_00018_BOOL,aux7579_BOOL,aux7580_BOOL,aux7581_BOOL,aux7582_BOOL],aux7583_BOOL);
constraint int_lin_eq([-1,1,1],[aux7584,2,s_00019],0);
constraint int_lt_reif(s_00009,aux7584,aux7585_BOOL);
constraint int_le_reif(s_00019, s_00009,aux7586_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux7587_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux7588_BOOL);
constraint array_bool_and([w_00003_00019_BOOL,aux7585_BOOL,aux7586_BOOL,aux7587_BOOL,aux7588_BOOL],aux7589_BOOL);
constraint int_lin_eq([-1,1,1],[aux7590,3,s_00020],0);
constraint int_lt_reif(s_00009,aux7590,aux7591_BOOL);
constraint int_le_reif(s_00020, s_00009,aux7592_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux7593_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux7594_BOOL);
constraint array_bool_and([w_00003_00020_BOOL,aux7591_BOOL,aux7592_BOOL,aux7593_BOOL,aux7594_BOOL],aux7595_BOOL);
constraint int_lin_eq([-1,1,1],[aux7596,2,s_00009],0);
constraint int_lt_reif(s_00009,aux7596,aux7597_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux7598_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux7597_BOOL,aux7598_BOOL],aux7599_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux7487_INTEGER,aux7493_INTEGER,aux7499_INTEGER,aux7505_INTEGER,aux7511_INTEGER,aux7517_INTEGER,aux7523_INTEGER,aux7529_INTEGER,aux7535_INTEGER,aux7541_INTEGER,aux7547_INTEGER,aux7553_INTEGER,aux7559_INTEGER,aux7565_INTEGER,aux7571_INTEGER,aux7577_INTEGER,aux7583_INTEGER,aux7589_INTEGER,aux7595_INTEGER,aux7599_INTEGER,1],0,aux7600_BOOL);
constraint int_lin_eq([-1,1,1],[aux7601,1,s_00001],0);
constraint int_lt_reif(s_00011,aux7601,aux7602_BOOL);
constraint int_le_reif(s_00001, s_00011,aux7603_BOOL);
constraint int_eq_reif(TWorkers_00003_00001_INTEGER,1,aux7604_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux7605_BOOL);
constraint array_bool_and([w_00003_00001_BOOL,aux7602_BOOL,aux7603_BOOL,aux7604_BOOL,aux7605_BOOL],aux7606_BOOL);
constraint int_lin_eq([-1,1,1],[aux7607,2,s_00002],0);
constraint int_lt_reif(s_00011,aux7607,aux7608_BOOL);
constraint int_le_reif(s_00002, s_00011,aux7609_BOOL);
constraint int_eq_reif(TWorkers_00003_00002_INTEGER,1,aux7610_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux7611_BOOL);
constraint array_bool_and([w_00003_00002_BOOL,aux7608_BOOL,aux7609_BOOL,aux7610_BOOL,aux7611_BOOL],aux7612_BOOL);
constraint int_lin_eq([-1,1,1],[aux7613,3,s_00003],0);
constraint int_lt_reif(s_00011,aux7613,aux7614_BOOL);
constraint int_le_reif(s_00003, s_00011,aux7615_BOOL);
constraint int_eq_reif(TWorkers_00003_00003_INTEGER,1,aux7616_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux7617_BOOL);
constraint array_bool_and([w_00003_00003_BOOL,aux7614_BOOL,aux7615_BOOL,aux7616_BOOL,aux7617_BOOL],aux7618_BOOL);
constraint int_lin_eq([-1,1,1],[aux7619,2,s_00004],0);
constraint int_lt_reif(s_00011,aux7619,aux7620_BOOL);
constraint int_le_reif(s_00004, s_00011,aux7621_BOOL);
constraint int_eq_reif(TWorkers_00003_00004_INTEGER,1,aux7622_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux7623_BOOL);
constraint array_bool_and([w_00003_00004_BOOL,aux7620_BOOL,aux7621_BOOL,aux7622_BOOL,aux7623_BOOL],aux7624_BOOL);
constraint int_lin_eq([-1,1,1],[aux7625,2,s_00005],0);
constraint int_lt_reif(s_00011,aux7625,aux7626_BOOL);
constraint int_le_reif(s_00005, s_00011,aux7627_BOOL);
constraint int_eq_reif(TWorkers_00003_00005_INTEGER,1,aux7628_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux7629_BOOL);
constraint array_bool_and([w_00003_00005_BOOL,aux7626_BOOL,aux7627_BOOL,aux7628_BOOL,aux7629_BOOL],aux7630_BOOL);
constraint int_lin_eq([-1,1,1],[aux7631,3,s_00006],0);
constraint int_lt_reif(s_00011,aux7631,aux7632_BOOL);
constraint int_le_reif(s_00006, s_00011,aux7633_BOOL);
constraint int_eq_reif(TWorkers_00003_00006_INTEGER,1,aux7634_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux7635_BOOL);
constraint array_bool_and([w_00003_00006_BOOL,aux7632_BOOL,aux7633_BOOL,aux7634_BOOL,aux7635_BOOL],aux7636_BOOL);
constraint int_lin_eq([-1,1,1],[aux7637,2,s_00007],0);
constraint int_lt_reif(s_00011,aux7637,aux7638_BOOL);
constraint int_le_reif(s_00007, s_00011,aux7639_BOOL);
constraint int_eq_reif(TWorkers_00003_00007_INTEGER,1,aux7640_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux7641_BOOL);
constraint array_bool_and([w_00003_00007_BOOL,aux7638_BOOL,aux7639_BOOL,aux7640_BOOL,aux7641_BOOL],aux7642_BOOL);
constraint int_lin_eq([-1,1,1],[aux7643,1,s_00008],0);
constraint int_lt_reif(s_00011,aux7643,aux7644_BOOL);
constraint int_le_reif(s_00008, s_00011,aux7645_BOOL);
constraint int_eq_reif(TWorkers_00003_00008_INTEGER,1,aux7646_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux7647_BOOL);
constraint array_bool_and([w_00003_00008_BOOL,aux7644_BOOL,aux7645_BOOL,aux7646_BOOL,aux7647_BOOL],aux7648_BOOL);
constraint int_lin_eq([-1,1,1],[aux7649,2,s_00009],0);
constraint int_lt_reif(s_00011,aux7649,aux7650_BOOL);
constraint int_le_reif(s_00009, s_00011,aux7651_BOOL);
constraint int_eq_reif(TWorkers_00003_00009_INTEGER,1,aux7652_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux7653_BOOL);
constraint array_bool_and([w_00003_00009_BOOL,aux7650_BOOL,aux7651_BOOL,aux7652_BOOL,aux7653_BOOL],aux7654_BOOL);
constraint int_lin_eq([-1,1,1],[aux7655,1,s_00010],0);
constraint int_lt_reif(s_00011,aux7655,aux7656_BOOL);
constraint int_le_reif(s_00010, s_00011,aux7657_BOOL);
constraint int_eq_reif(TWorkers_00003_00010_INTEGER,1,aux7658_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux7659_BOOL);
constraint array_bool_and([w_00003_00010_BOOL,aux7656_BOOL,aux7657_BOOL,aux7658_BOOL,aux7659_BOOL],aux7660_BOOL);
constraint int_lin_eq([-1,1,1],[aux7661,2,s_00012],0);
constraint int_lt_reif(s_00011,aux7661,aux7662_BOOL);
constraint int_le_reif(s_00012, s_00011,aux7663_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux7664_BOOL);
constraint int_eq_reif(TWorkers_00003_00012_INTEGER,1,aux7665_BOOL);
constraint array_bool_and([w_00003_00012_BOOL,aux7662_BOOL,aux7663_BOOL,aux7664_BOOL,aux7665_BOOL],aux7666_BOOL);
constraint int_lin_eq([-1,1,1],[aux7667,1,s_00013],0);
constraint int_lt_reif(s_00011,aux7667,aux7668_BOOL);
constraint int_le_reif(s_00013, s_00011,aux7669_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux7670_BOOL);
constraint int_eq_reif(TWorkers_00003_00013_INTEGER,1,aux7671_BOOL);
constraint array_bool_and([w_00003_00013_BOOL,aux7668_BOOL,aux7669_BOOL,aux7670_BOOL,aux7671_BOOL],aux7672_BOOL);
constraint int_lin_eq([-1,1,1],[aux7673,2,s_00015],0);
constraint int_lt_reif(s_00011,aux7673,aux7674_BOOL);
constraint int_le_reif(s_00015, s_00011,aux7675_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux7676_BOOL);
constraint int_eq_reif(TWorkers_00003_00015_INTEGER,1,aux7677_BOOL);
constraint array_bool_and([w_00003_00015_BOOL,aux7674_BOOL,aux7675_BOOL,aux7676_BOOL,aux7677_BOOL],aux7678_BOOL);
constraint int_lin_eq([-1,1,1],[aux7679,4,s_00014],0);
constraint int_lt_reif(s_00011,aux7679,aux7680_BOOL);
constraint int_le_reif(s_00014, s_00011,aux7681_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux7682_BOOL);
constraint int_eq_reif(TWorkers_00003_00014_INTEGER,1,aux7683_BOOL);
constraint array_bool_and([w_00003_00014_BOOL,aux7680_BOOL,aux7681_BOOL,aux7682_BOOL,aux7683_BOOL],aux7684_BOOL);
constraint int_lin_eq([-1,1,1],[aux7685,1,s_00017],0);
constraint int_lt_reif(s_00011,aux7685,aux7686_BOOL);
constraint int_le_reif(s_00017, s_00011,aux7687_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux7688_BOOL);
constraint int_eq_reif(TWorkers_00003_00017_INTEGER,1,aux7689_BOOL);
constraint array_bool_and([w_00003_00017_BOOL,aux7686_BOOL,aux7687_BOOL,aux7688_BOOL,aux7689_BOOL],aux7690_BOOL);
constraint int_lin_eq([-1,1,1],[aux7691,3,s_00016],0);
constraint int_lt_reif(s_00011,aux7691,aux7692_BOOL);
constraint int_le_reif(s_00016, s_00011,aux7693_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux7694_BOOL);
constraint int_eq_reif(TWorkers_00003_00016_INTEGER,1,aux7695_BOOL);
constraint array_bool_and([w_00003_00016_BOOL,aux7692_BOOL,aux7693_BOOL,aux7694_BOOL,aux7695_BOOL],aux7696_BOOL);
constraint int_lin_eq([-1,1,1],[aux7697,3,s_00018],0);
constraint int_lt_reif(s_00011,aux7697,aux7698_BOOL);
constraint int_le_reif(s_00018, s_00011,aux7699_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux7700_BOOL);
constraint int_eq_reif(TWorkers_00003_00018_INTEGER,1,aux7701_BOOL);
constraint array_bool_and([w_00003_00018_BOOL,aux7698_BOOL,aux7699_BOOL,aux7700_BOOL,aux7701_BOOL],aux7702_BOOL);
constraint int_lin_eq([-1,1,1],[aux7703,2,s_00019],0);
constraint int_lt_reif(s_00011,aux7703,aux7704_BOOL);
constraint int_le_reif(s_00019, s_00011,aux7705_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux7706_BOOL);
constraint int_eq_reif(TWorkers_00003_00019_INTEGER,1,aux7707_BOOL);
constraint array_bool_and([w_00003_00019_BOOL,aux7704_BOOL,aux7705_BOOL,aux7706_BOOL,aux7707_BOOL],aux7708_BOOL);
constraint int_lin_eq([-1,1,1],[aux7709,3,s_00020],0);
constraint int_lt_reif(s_00011,aux7709,aux7710_BOOL);
constraint int_le_reif(s_00020, s_00011,aux7711_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux7712_BOOL);
constraint int_eq_reif(TWorkers_00003_00020_INTEGER,1,aux7713_BOOL);
constraint array_bool_and([w_00003_00020_BOOL,aux7710_BOOL,aux7711_BOOL,aux7712_BOOL,aux7713_BOOL],aux7714_BOOL);
constraint int_lin_eq([-1,1,1],[aux7715,2,s_00011],0);
constraint int_lt_reif(s_00011,aux7715,aux7716_BOOL);
constraint int_eq_reif(TWorkers_00003_00011_INTEGER,1,aux7717_BOOL);
constraint array_bool_and([w_00003_00011_BOOL,aux7716_BOOL,aux7717_BOOL],aux7718_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux7606_INTEGER,aux7612_INTEGER,aux7618_INTEGER,aux7624_INTEGER,aux7630_INTEGER,aux7636_INTEGER,aux7642_INTEGER,aux7648_INTEGER,aux7654_INTEGER,aux7660_INTEGER,aux7666_INTEGER,aux7672_INTEGER,aux7678_INTEGER,aux7684_INTEGER,aux7690_INTEGER,aux7696_INTEGER,aux7702_INTEGER,aux7708_INTEGER,aux7714_INTEGER,aux7718_INTEGER,1],0,aux7719_BOOL);
constraint array_bool_and([aux5458_BOOL,aux5577_BOOL,aux5696_BOOL,aux5815_BOOL,aux5934_BOOL,aux6053_BOOL,aux6172_BOOL,aux6291_BOOL,aux6410_BOOL,aux6529_BOOL,aux6648_BOOL,aux6767_BOOL,aux6886_BOOL,aux7005_BOOL,aux7124_BOOL,aux7243_BOOL,aux7362_BOOL,aux7481_BOOL,aux7600_BOOL,aux7719_BOOL],aux7720_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[TWorkers_00003_00001_INTEGER,TWorkers_00003_00002_INTEGER,TWorkers_00003_00003_INTEGER,TWorkers_00003_00004_INTEGER,TWorkers_00003_00005_INTEGER,TWorkers_00003_00006_INTEGER,TWorkers_00003_00007_INTEGER,TWorkers_00003_00008_INTEGER,TWorkers_00003_00009_INTEGER,TWorkers_00003_00010_INTEGER,TWorkers_00003_00011_INTEGER,TWorkers_00003_00012_INTEGER,TWorkers_00003_00013_INTEGER,TWorkers_00003_00014_INTEGER,TWorkers_00003_00015_INTEGER,TWorkers_00003_00016_INTEGER,TWorkers_00003_00017_INTEGER,TWorkers_00003_00018_INTEGER,TWorkers_00003_00019_INTEGER,TWorkers_00003_00020_INTEGER,1],0,aux7721_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux7722_BOOL);
constraint int_lin_eq([-1,1,1],[aux7723,1,s_00008],0);
constraint int_lt_reif(s_00008,aux7723,aux7724_BOOL);
constraint array_bool_and([aux7722_BOOL,w_00004_00008_BOOL,aux7724_BOOL],aux7725_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux7726_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux7727_BOOL);
constraint int_lin_eq([-1,1,1],[aux7728,1,s_00001],0);
constraint int_lt_reif(s_00008,aux7728,aux7729_BOOL);
constraint int_le_reif(s_00001, s_00008,aux7730_BOOL);
constraint array_bool_and([aux7726_BOOL,aux7727_BOOL,w_00004_00001_BOOL,aux7729_BOOL,aux7730_BOOL],aux7731_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux7732_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux7733_BOOL);
constraint int_lin_eq([-1,1,1],[aux7734,2,s_00002],0);
constraint int_lt_reif(s_00008,aux7734,aux7735_BOOL);
constraint int_le_reif(s_00002, s_00008,aux7736_BOOL);
constraint array_bool_and([aux7732_BOOL,aux7733_BOOL,w_00004_00002_BOOL,aux7735_BOOL,aux7736_BOOL],aux7737_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux7738_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux7739_BOOL);
constraint int_lin_eq([-1,1,1],[aux7740,3,s_00003],0);
constraint int_lt_reif(s_00008,aux7740,aux7741_BOOL);
constraint int_le_reif(s_00003, s_00008,aux7742_BOOL);
constraint array_bool_and([aux7738_BOOL,aux7739_BOOL,w_00004_00003_BOOL,aux7741_BOOL,aux7742_BOOL],aux7743_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux7744_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux7745_BOOL);
constraint int_lin_eq([-1,1,1],[aux7746,2,s_00004],0);
constraint int_lt_reif(s_00008,aux7746,aux7747_BOOL);
constraint int_le_reif(s_00004, s_00008,aux7748_BOOL);
constraint array_bool_and([aux7744_BOOL,aux7745_BOOL,w_00004_00004_BOOL,aux7747_BOOL,aux7748_BOOL],aux7749_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux7750_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux7751_BOOL);
constraint int_lin_eq([-1,1,1],[aux7752,2,s_00005],0);
constraint int_lt_reif(s_00008,aux7752,aux7753_BOOL);
constraint int_le_reif(s_00005, s_00008,aux7754_BOOL);
constraint array_bool_and([aux7750_BOOL,aux7751_BOOL,w_00004_00005_BOOL,aux7753_BOOL,aux7754_BOOL],aux7755_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux7756_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux7757_BOOL);
constraint int_lin_eq([-1,1,1],[aux7758,3,s_00006],0);
constraint int_lt_reif(s_00008,aux7758,aux7759_BOOL);
constraint int_le_reif(s_00006, s_00008,aux7760_BOOL);
constraint array_bool_and([aux7756_BOOL,aux7757_BOOL,w_00004_00006_BOOL,aux7759_BOOL,aux7760_BOOL],aux7761_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux7762_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux7763_BOOL);
constraint int_lin_eq([-1,1,1],[aux7764,2,s_00007],0);
constraint int_lt_reif(s_00008,aux7764,aux7765_BOOL);
constraint int_le_reif(s_00007, s_00008,aux7766_BOOL);
constraint array_bool_and([aux7762_BOOL,aux7763_BOOL,w_00004_00007_BOOL,aux7765_BOOL,aux7766_BOOL],aux7767_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux7768_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux7769_BOOL);
constraint int_lin_eq([-1,1,1],[aux7770,2,s_00009],0);
constraint int_lt_reif(s_00008,aux7770,aux7771_BOOL);
constraint int_le_reif(s_00009, s_00008,aux7772_BOOL);
constraint array_bool_and([aux7768_BOOL,aux7769_BOOL,w_00004_00009_BOOL,aux7771_BOOL,aux7772_BOOL],aux7773_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux7774_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux7775_BOOL);
constraint int_lin_eq([-1,1,1],[aux7776,1,s_00010],0);
constraint int_lt_reif(s_00008,aux7776,aux7777_BOOL);
constraint int_le_reif(s_00010, s_00008,aux7778_BOOL);
constraint array_bool_and([aux7774_BOOL,aux7775_BOOL,w_00004_00010_BOOL,aux7777_BOOL,aux7778_BOOL],aux7779_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux7780_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux7781_BOOL);
constraint int_lin_eq([-1,1,1],[aux7782,2,s_00011],0);
constraint int_lt_reif(s_00008,aux7782,aux7783_BOOL);
constraint int_le_reif(s_00011, s_00008,aux7784_BOOL);
constraint array_bool_and([aux7780_BOOL,aux7781_BOOL,w_00004_00011_BOOL,aux7783_BOOL,aux7784_BOOL],aux7785_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux7786_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux7787_BOOL);
constraint int_lin_eq([-1,1,1],[aux7788,2,s_00012],0);
constraint int_lt_reif(s_00008,aux7788,aux7789_BOOL);
constraint int_le_reif(s_00012, s_00008,aux7790_BOOL);
constraint array_bool_and([aux7786_BOOL,aux7787_BOOL,w_00004_00012_BOOL,aux7789_BOOL,aux7790_BOOL],aux7791_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux7792_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux7793_BOOL);
constraint int_lin_eq([-1,1,1],[aux7794,1,s_00013],0);
constraint int_lt_reif(s_00008,aux7794,aux7795_BOOL);
constraint int_le_reif(s_00013, s_00008,aux7796_BOOL);
constraint array_bool_and([aux7792_BOOL,aux7793_BOOL,w_00004_00013_BOOL,aux7795_BOOL,aux7796_BOOL],aux7797_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux7798_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux7799_BOOL);
constraint int_lin_eq([-1,1,1],[aux7800,4,s_00014],0);
constraint int_lt_reif(s_00008,aux7800,aux7801_BOOL);
constraint int_le_reif(s_00014, s_00008,aux7802_BOOL);
constraint array_bool_and([aux7798_BOOL,aux7799_BOOL,w_00004_00014_BOOL,aux7801_BOOL,aux7802_BOOL],aux7803_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux7804_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux7805_BOOL);
constraint int_lin_eq([-1,1,1],[aux7806,2,s_00015],0);
constraint int_lt_reif(s_00008,aux7806,aux7807_BOOL);
constraint int_le_reif(s_00015, s_00008,aux7808_BOOL);
constraint array_bool_and([aux7804_BOOL,aux7805_BOOL,w_00004_00015_BOOL,aux7807_BOOL,aux7808_BOOL],aux7809_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux7810_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux7811_BOOL);
constraint int_lin_eq([-1,1,1],[aux7812,3,s_00016],0);
constraint int_lt_reif(s_00008,aux7812,aux7813_BOOL);
constraint int_le_reif(s_00016, s_00008,aux7814_BOOL);
constraint array_bool_and([aux7810_BOOL,aux7811_BOOL,w_00004_00016_BOOL,aux7813_BOOL,aux7814_BOOL],aux7815_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux7816_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux7817_BOOL);
constraint int_lin_eq([-1,1,1],[aux7818,1,s_00017],0);
constraint int_lt_reif(s_00008,aux7818,aux7819_BOOL);
constraint int_le_reif(s_00017, s_00008,aux7820_BOOL);
constraint array_bool_and([aux7816_BOOL,aux7817_BOOL,w_00004_00017_BOOL,aux7819_BOOL,aux7820_BOOL],aux7821_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux7822_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux7823_BOOL);
constraint int_lin_eq([-1,1,1],[aux7824,3,s_00018],0);
constraint int_lt_reif(s_00008,aux7824,aux7825_BOOL);
constraint int_le_reif(s_00018, s_00008,aux7826_BOOL);
constraint array_bool_and([aux7822_BOOL,aux7823_BOOL,w_00004_00018_BOOL,aux7825_BOOL,aux7826_BOOL],aux7827_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux7828_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux7829_BOOL);
constraint int_lin_eq([-1,1,1],[aux7830,2,s_00019],0);
constraint int_lt_reif(s_00008,aux7830,aux7831_BOOL);
constraint int_le_reif(s_00019, s_00008,aux7832_BOOL);
constraint array_bool_and([aux7828_BOOL,aux7829_BOOL,w_00004_00019_BOOL,aux7831_BOOL,aux7832_BOOL],aux7833_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux7834_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux7835_BOOL);
constraint int_lin_eq([-1,1,1],[aux7836,3,s_00020],0);
constraint int_lt_reif(s_00008,aux7836,aux7837_BOOL);
constraint int_le_reif(s_00020, s_00008,aux7838_BOOL);
constraint array_bool_and([aux7834_BOOL,aux7835_BOOL,w_00004_00020_BOOL,aux7837_BOOL,aux7838_BOOL],aux7839_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux7725_INTEGER,aux7731_INTEGER,aux7737_INTEGER,aux7743_INTEGER,aux7749_INTEGER,aux7755_INTEGER,aux7761_INTEGER,aux7767_INTEGER,aux7773_INTEGER,aux7779_INTEGER,aux7785_INTEGER,aux7791_INTEGER,aux7797_INTEGER,aux7803_INTEGER,aux7809_INTEGER,aux7815_INTEGER,aux7821_INTEGER,aux7827_INTEGER,aux7833_INTEGER,aux7839_INTEGER,1],0,aux7840_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux7841_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux7842_BOOL);
constraint int_lin_eq([-1,1,1],[aux7843,1,s_00010],0);
constraint int_lt_reif(s_00014,aux7843,aux7844_BOOL);
constraint int_le_reif(s_00010, s_00014,aux7845_BOOL);
constraint array_bool_and([aux7841_BOOL,aux7842_BOOL,w_00004_00010_BOOL,aux7844_BOOL,aux7845_BOOL],aux7846_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux7847_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux7848_BOOL);
constraint int_lin_eq([-1,1,1],[aux7849,2,s_00011],0);
constraint int_lt_reif(s_00014,aux7849,aux7850_BOOL);
constraint int_le_reif(s_00011, s_00014,aux7851_BOOL);
constraint array_bool_and([aux7847_BOOL,aux7848_BOOL,w_00004_00011_BOOL,aux7850_BOOL,aux7851_BOOL],aux7852_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux7853_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux7854_BOOL);
constraint int_lin_eq([-1,1,1],[aux7855,2,s_00012],0);
constraint int_lt_reif(s_00014,aux7855,aux7856_BOOL);
constraint int_le_reif(s_00012, s_00014,aux7857_BOOL);
constraint array_bool_and([aux7853_BOOL,aux7854_BOOL,w_00004_00012_BOOL,aux7856_BOOL,aux7857_BOOL],aux7858_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux7859_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux7860_BOOL);
constraint int_lin_eq([-1,1,1],[aux7861,1,s_00013],0);
constraint int_lt_reif(s_00014,aux7861,aux7862_BOOL);
constraint int_le_reif(s_00013, s_00014,aux7863_BOOL);
constraint array_bool_and([aux7859_BOOL,aux7860_BOOL,w_00004_00013_BOOL,aux7862_BOOL,aux7863_BOOL],aux7864_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux7865_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux7866_BOOL);
constraint int_lin_eq([-1,1,1],[aux7867,2,s_00015],0);
constraint int_lt_reif(s_00014,aux7867,aux7868_BOOL);
constraint int_le_reif(s_00015, s_00014,aux7869_BOOL);
constraint array_bool_and([aux7865_BOOL,aux7866_BOOL,w_00004_00015_BOOL,aux7868_BOOL,aux7869_BOOL],aux7870_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux7871_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux7872_BOOL);
constraint int_lin_eq([-1,1,1],[aux7873,3,s_00016],0);
constraint int_lt_reif(s_00014,aux7873,aux7874_BOOL);
constraint int_le_reif(s_00016, s_00014,aux7875_BOOL);
constraint array_bool_and([aux7871_BOOL,aux7872_BOOL,w_00004_00016_BOOL,aux7874_BOOL,aux7875_BOOL],aux7876_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux7877_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux7878_BOOL);
constraint int_lin_eq([-1,1,1],[aux7879,1,s_00017],0);
constraint int_lt_reif(s_00014,aux7879,aux7880_BOOL);
constraint int_le_reif(s_00017, s_00014,aux7881_BOOL);
constraint array_bool_and([aux7877_BOOL,aux7878_BOOL,w_00004_00017_BOOL,aux7880_BOOL,aux7881_BOOL],aux7882_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux7883_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux7884_BOOL);
constraint int_lin_eq([-1,1,1],[aux7885,3,s_00018],0);
constraint int_lt_reif(s_00014,aux7885,aux7886_BOOL);
constraint int_le_reif(s_00018, s_00014,aux7887_BOOL);
constraint array_bool_and([aux7883_BOOL,aux7884_BOOL,w_00004_00018_BOOL,aux7886_BOOL,aux7887_BOOL],aux7888_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux7889_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux7890_BOOL);
constraint int_lin_eq([-1,1,1],[aux7891,2,s_00019],0);
constraint int_lt_reif(s_00014,aux7891,aux7892_BOOL);
constraint int_le_reif(s_00019, s_00014,aux7893_BOOL);
constraint array_bool_and([aux7889_BOOL,aux7890_BOOL,w_00004_00019_BOOL,aux7892_BOOL,aux7893_BOOL],aux7894_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux7895_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux7896_BOOL);
constraint int_lin_eq([-1,1,1],[aux7897,3,s_00020],0);
constraint int_lt_reif(s_00014,aux7897,aux7898_BOOL);
constraint int_le_reif(s_00020, s_00014,aux7899_BOOL);
constraint array_bool_and([aux7895_BOOL,aux7896_BOOL,w_00004_00020_BOOL,aux7898_BOOL,aux7899_BOOL],aux7900_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux7901_BOOL);
constraint int_lin_eq([-1,1,1],[aux7902,4,s_00014],0);
constraint int_lt_reif(s_00014,aux7902,aux7903_BOOL);
constraint array_bool_and([aux7901_BOOL,w_00004_00014_BOOL,aux7903_BOOL],aux7904_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux7905_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux7906_BOOL);
constraint int_lin_eq([-1,1,1],[aux7907,1,s_00001],0);
constraint int_lt_reif(s_00014,aux7907,aux7908_BOOL);
constraint int_le_reif(s_00001, s_00014,aux7909_BOOL);
constraint array_bool_and([aux7905_BOOL,aux7906_BOOL,w_00004_00001_BOOL,aux7908_BOOL,aux7909_BOOL],aux7910_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux7911_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux7912_BOOL);
constraint int_lin_eq([-1,1,1],[aux7913,2,s_00002],0);
constraint int_lt_reif(s_00014,aux7913,aux7914_BOOL);
constraint int_le_reif(s_00002, s_00014,aux7915_BOOL);
constraint array_bool_and([aux7911_BOOL,aux7912_BOOL,w_00004_00002_BOOL,aux7914_BOOL,aux7915_BOOL],aux7916_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux7917_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux7918_BOOL);
constraint int_lin_eq([-1,1,1],[aux7919,3,s_00003],0);
constraint int_lt_reif(s_00014,aux7919,aux7920_BOOL);
constraint int_le_reif(s_00003, s_00014,aux7921_BOOL);
constraint array_bool_and([aux7917_BOOL,aux7918_BOOL,w_00004_00003_BOOL,aux7920_BOOL,aux7921_BOOL],aux7922_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux7923_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux7924_BOOL);
constraint int_lin_eq([-1,1,1],[aux7925,2,s_00004],0);
constraint int_lt_reif(s_00014,aux7925,aux7926_BOOL);
constraint int_le_reif(s_00004, s_00014,aux7927_BOOL);
constraint array_bool_and([aux7923_BOOL,aux7924_BOOL,w_00004_00004_BOOL,aux7926_BOOL,aux7927_BOOL],aux7928_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux7929_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux7930_BOOL);
constraint int_lin_eq([-1,1,1],[aux7931,2,s_00005],0);
constraint int_lt_reif(s_00014,aux7931,aux7932_BOOL);
constraint int_le_reif(s_00005, s_00014,aux7933_BOOL);
constraint array_bool_and([aux7929_BOOL,aux7930_BOOL,w_00004_00005_BOOL,aux7932_BOOL,aux7933_BOOL],aux7934_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux7935_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux7936_BOOL);
constraint int_lin_eq([-1,1,1],[aux7937,3,s_00006],0);
constraint int_lt_reif(s_00014,aux7937,aux7938_BOOL);
constraint int_le_reif(s_00006, s_00014,aux7939_BOOL);
constraint array_bool_and([aux7935_BOOL,aux7936_BOOL,w_00004_00006_BOOL,aux7938_BOOL,aux7939_BOOL],aux7940_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux7941_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux7942_BOOL);
constraint int_lin_eq([-1,1,1],[aux7943,2,s_00007],0);
constraint int_lt_reif(s_00014,aux7943,aux7944_BOOL);
constraint int_le_reif(s_00007, s_00014,aux7945_BOOL);
constraint array_bool_and([aux7941_BOOL,aux7942_BOOL,w_00004_00007_BOOL,aux7944_BOOL,aux7945_BOOL],aux7946_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux7947_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux7948_BOOL);
constraint int_lin_eq([-1,1,1],[aux7949,1,s_00008],0);
constraint int_lt_reif(s_00014,aux7949,aux7950_BOOL);
constraint int_le_reif(s_00008, s_00014,aux7951_BOOL);
constraint array_bool_and([aux7947_BOOL,aux7948_BOOL,w_00004_00008_BOOL,aux7950_BOOL,aux7951_BOOL],aux7952_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux7953_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux7954_BOOL);
constraint int_lin_eq([-1,1,1],[aux7955,2,s_00009],0);
constraint int_lt_reif(s_00014,aux7955,aux7956_BOOL);
constraint int_le_reif(s_00009, s_00014,aux7957_BOOL);
constraint array_bool_and([aux7953_BOOL,aux7954_BOOL,w_00004_00009_BOOL,aux7956_BOOL,aux7957_BOOL],aux7958_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux7846_INTEGER,aux7852_INTEGER,aux7858_INTEGER,aux7864_INTEGER,aux7870_INTEGER,aux7876_INTEGER,aux7882_INTEGER,aux7888_INTEGER,aux7894_INTEGER,aux7900_INTEGER,aux7904_INTEGER,aux7910_INTEGER,aux7916_INTEGER,aux7922_INTEGER,aux7928_INTEGER,aux7934_INTEGER,aux7940_INTEGER,aux7946_INTEGER,aux7952_INTEGER,aux7958_INTEGER,1],0,aux7959_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux7960_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux7961_BOOL);
constraint int_lin_eq([-1,1,1],[aux7962,1,s_00010],0);
constraint int_lt_reif(s_00011,aux7962,aux7963_BOOL);
constraint int_le_reif(s_00010, s_00011,aux7964_BOOL);
constraint array_bool_and([aux7960_BOOL,aux7961_BOOL,w_00004_00010_BOOL,aux7963_BOOL,aux7964_BOOL],aux7965_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux7966_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux7967_BOOL);
constraint int_lin_eq([-1,1,1],[aux7968,2,s_00012],0);
constraint int_lt_reif(s_00011,aux7968,aux7969_BOOL);
constraint int_le_reif(s_00012, s_00011,aux7970_BOOL);
constraint array_bool_and([aux7966_BOOL,aux7967_BOOL,w_00004_00012_BOOL,aux7969_BOOL,aux7970_BOOL],aux7971_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux7972_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux7973_BOOL);
constraint int_lin_eq([-1,1,1],[aux7974,1,s_00013],0);
constraint int_lt_reif(s_00011,aux7974,aux7975_BOOL);
constraint int_le_reif(s_00013, s_00011,aux7976_BOOL);
constraint array_bool_and([aux7972_BOOL,aux7973_BOOL,w_00004_00013_BOOL,aux7975_BOOL,aux7976_BOOL],aux7977_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux7978_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux7979_BOOL);
constraint int_lin_eq([-1,1,1],[aux7980,4,s_00014],0);
constraint int_lt_reif(s_00011,aux7980,aux7981_BOOL);
constraint int_le_reif(s_00014, s_00011,aux7982_BOOL);
constraint array_bool_and([aux7978_BOOL,aux7979_BOOL,w_00004_00014_BOOL,aux7981_BOOL,aux7982_BOOL],aux7983_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux7984_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux7985_BOOL);
constraint int_lin_eq([-1,1,1],[aux7986,2,s_00015],0);
constraint int_lt_reif(s_00011,aux7986,aux7987_BOOL);
constraint int_le_reif(s_00015, s_00011,aux7988_BOOL);
constraint array_bool_and([aux7984_BOOL,aux7985_BOOL,w_00004_00015_BOOL,aux7987_BOOL,aux7988_BOOL],aux7989_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux7990_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux7991_BOOL);
constraint int_lin_eq([-1,1,1],[aux7992,3,s_00016],0);
constraint int_lt_reif(s_00011,aux7992,aux7993_BOOL);
constraint int_le_reif(s_00016, s_00011,aux7994_BOOL);
constraint array_bool_and([aux7990_BOOL,aux7991_BOOL,w_00004_00016_BOOL,aux7993_BOOL,aux7994_BOOL],aux7995_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux7996_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux7997_BOOL);
constraint int_lin_eq([-1,1,1],[aux7998,1,s_00017],0);
constraint int_lt_reif(s_00011,aux7998,aux7999_BOOL);
constraint int_le_reif(s_00017, s_00011,aux8000_BOOL);
constraint array_bool_and([aux7996_BOOL,aux7997_BOOL,w_00004_00017_BOOL,aux7999_BOOL,aux8000_BOOL],aux8001_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux8002_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux8003_BOOL);
constraint int_lin_eq([-1,1,1],[aux8004,3,s_00018],0);
constraint int_lt_reif(s_00011,aux8004,aux8005_BOOL);
constraint int_le_reif(s_00018, s_00011,aux8006_BOOL);
constraint array_bool_and([aux8002_BOOL,aux8003_BOOL,w_00004_00018_BOOL,aux8005_BOOL,aux8006_BOOL],aux8007_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux8008_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux8009_BOOL);
constraint int_lin_eq([-1,1,1],[aux8010,2,s_00019],0);
constraint int_lt_reif(s_00011,aux8010,aux8011_BOOL);
constraint int_le_reif(s_00019, s_00011,aux8012_BOOL);
constraint array_bool_and([aux8008_BOOL,aux8009_BOOL,w_00004_00019_BOOL,aux8011_BOOL,aux8012_BOOL],aux8013_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux8014_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux8015_BOOL);
constraint int_lin_eq([-1,1,1],[aux8016,3,s_00020],0);
constraint int_lt_reif(s_00011,aux8016,aux8017_BOOL);
constraint int_le_reif(s_00020, s_00011,aux8018_BOOL);
constraint array_bool_and([aux8014_BOOL,aux8015_BOOL,w_00004_00020_BOOL,aux8017_BOOL,aux8018_BOOL],aux8019_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux8020_BOOL);
constraint int_lin_eq([-1,1,1],[aux8021,2,s_00011],0);
constraint int_lt_reif(s_00011,aux8021,aux8022_BOOL);
constraint array_bool_and([aux8020_BOOL,w_00004_00011_BOOL,aux8022_BOOL],aux8023_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux8024_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux8025_BOOL);
constraint int_lin_eq([-1,1,1],[aux8026,1,s_00001],0);
constraint int_lt_reif(s_00011,aux8026,aux8027_BOOL);
constraint int_le_reif(s_00001, s_00011,aux8028_BOOL);
constraint array_bool_and([aux8024_BOOL,aux8025_BOOL,w_00004_00001_BOOL,aux8027_BOOL,aux8028_BOOL],aux8029_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux8030_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux8031_BOOL);
constraint int_lin_eq([-1,1,1],[aux8032,2,s_00002],0);
constraint int_lt_reif(s_00011,aux8032,aux8033_BOOL);
constraint int_le_reif(s_00002, s_00011,aux8034_BOOL);
constraint array_bool_and([aux8030_BOOL,aux8031_BOOL,w_00004_00002_BOOL,aux8033_BOOL,aux8034_BOOL],aux8035_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux8036_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux8037_BOOL);
constraint int_lin_eq([-1,1,1],[aux8038,3,s_00003],0);
constraint int_lt_reif(s_00011,aux8038,aux8039_BOOL);
constraint int_le_reif(s_00003, s_00011,aux8040_BOOL);
constraint array_bool_and([aux8036_BOOL,aux8037_BOOL,w_00004_00003_BOOL,aux8039_BOOL,aux8040_BOOL],aux8041_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux8042_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux8043_BOOL);
constraint int_lin_eq([-1,1,1],[aux8044,2,s_00004],0);
constraint int_lt_reif(s_00011,aux8044,aux8045_BOOL);
constraint int_le_reif(s_00004, s_00011,aux8046_BOOL);
constraint array_bool_and([aux8042_BOOL,aux8043_BOOL,w_00004_00004_BOOL,aux8045_BOOL,aux8046_BOOL],aux8047_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux8048_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux8049_BOOL);
constraint int_lin_eq([-1,1,1],[aux8050,2,s_00005],0);
constraint int_lt_reif(s_00011,aux8050,aux8051_BOOL);
constraint int_le_reif(s_00005, s_00011,aux8052_BOOL);
constraint array_bool_and([aux8048_BOOL,aux8049_BOOL,w_00004_00005_BOOL,aux8051_BOOL,aux8052_BOOL],aux8053_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux8054_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux8055_BOOL);
constraint int_lin_eq([-1,1,1],[aux8056,3,s_00006],0);
constraint int_lt_reif(s_00011,aux8056,aux8057_BOOL);
constraint int_le_reif(s_00006, s_00011,aux8058_BOOL);
constraint array_bool_and([aux8054_BOOL,aux8055_BOOL,w_00004_00006_BOOL,aux8057_BOOL,aux8058_BOOL],aux8059_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux8060_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux8061_BOOL);
constraint int_lin_eq([-1,1,1],[aux8062,2,s_00007],0);
constraint int_lt_reif(s_00011,aux8062,aux8063_BOOL);
constraint int_le_reif(s_00007, s_00011,aux8064_BOOL);
constraint array_bool_and([aux8060_BOOL,aux8061_BOOL,w_00004_00007_BOOL,aux8063_BOOL,aux8064_BOOL],aux8065_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux8066_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux8067_BOOL);
constraint int_lin_eq([-1,1,1],[aux8068,1,s_00008],0);
constraint int_lt_reif(s_00011,aux8068,aux8069_BOOL);
constraint int_le_reif(s_00008, s_00011,aux8070_BOOL);
constraint array_bool_and([aux8066_BOOL,aux8067_BOOL,w_00004_00008_BOOL,aux8069_BOOL,aux8070_BOOL],aux8071_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux8072_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux8073_BOOL);
constraint int_lin_eq([-1,1,1],[aux8074,2,s_00009],0);
constraint int_lt_reif(s_00011,aux8074,aux8075_BOOL);
constraint int_le_reif(s_00009, s_00011,aux8076_BOOL);
constraint array_bool_and([aux8072_BOOL,aux8073_BOOL,w_00004_00009_BOOL,aux8075_BOOL,aux8076_BOOL],aux8077_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux7965_INTEGER,aux7971_INTEGER,aux7977_INTEGER,aux7983_INTEGER,aux7989_INTEGER,aux7995_INTEGER,aux8001_INTEGER,aux8007_INTEGER,aux8013_INTEGER,aux8019_INTEGER,aux8023_INTEGER,aux8029_INTEGER,aux8035_INTEGER,aux8041_INTEGER,aux8047_INTEGER,aux8053_INTEGER,aux8059_INTEGER,aux8065_INTEGER,aux8071_INTEGER,aux8077_INTEGER,1],0,aux8078_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux8079_BOOL);
constraint int_lin_eq([-1,1,1],[aux8080,3,s_00003],0);
constraint int_lt_reif(s_00003,aux8080,aux8081_BOOL);
constraint array_bool_and([aux8079_BOOL,w_00004_00003_BOOL,aux8081_BOOL],aux8082_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux8083_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux8084_BOOL);
constraint int_lin_eq([-1,1,1],[aux8085,1,s_00001],0);
constraint int_lt_reif(s_00003,aux8085,aux8086_BOOL);
constraint int_le_reif(s_00001, s_00003,aux8087_BOOL);
constraint array_bool_and([aux8083_BOOL,aux8084_BOOL,w_00004_00001_BOOL,aux8086_BOOL,aux8087_BOOL],aux8088_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux8089_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux8090_BOOL);
constraint int_lin_eq([-1,1,1],[aux8091,2,s_00002],0);
constraint int_lt_reif(s_00003,aux8091,aux8092_BOOL);
constraint int_le_reif(s_00002, s_00003,aux8093_BOOL);
constraint array_bool_and([aux8089_BOOL,aux8090_BOOL,w_00004_00002_BOOL,aux8092_BOOL,aux8093_BOOL],aux8094_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux8095_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux8096_BOOL);
constraint int_lin_eq([-1,1,1],[aux8097,2,s_00004],0);
constraint int_lt_reif(s_00003,aux8097,aux8098_BOOL);
constraint int_le_reif(s_00004, s_00003,aux8099_BOOL);
constraint array_bool_and([aux8095_BOOL,aux8096_BOOL,w_00004_00004_BOOL,aux8098_BOOL,aux8099_BOOL],aux8100_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux8101_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux8102_BOOL);
constraint int_lin_eq([-1,1,1],[aux8103,2,s_00005],0);
constraint int_lt_reif(s_00003,aux8103,aux8104_BOOL);
constraint int_le_reif(s_00005, s_00003,aux8105_BOOL);
constraint array_bool_and([aux8101_BOOL,aux8102_BOOL,w_00004_00005_BOOL,aux8104_BOOL,aux8105_BOOL],aux8106_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux8107_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux8108_BOOL);
constraint int_lin_eq([-1,1,1],[aux8109,3,s_00006],0);
constraint int_lt_reif(s_00003,aux8109,aux8110_BOOL);
constraint int_le_reif(s_00006, s_00003,aux8111_BOOL);
constraint array_bool_and([aux8107_BOOL,aux8108_BOOL,w_00004_00006_BOOL,aux8110_BOOL,aux8111_BOOL],aux8112_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux8113_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux8114_BOOL);
constraint int_lin_eq([-1,1,1],[aux8115,2,s_00007],0);
constraint int_lt_reif(s_00003,aux8115,aux8116_BOOL);
constraint int_le_reif(s_00007, s_00003,aux8117_BOOL);
constraint array_bool_and([aux8113_BOOL,aux8114_BOOL,w_00004_00007_BOOL,aux8116_BOOL,aux8117_BOOL],aux8118_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux8119_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux8120_BOOL);
constraint int_lin_eq([-1,1,1],[aux8121,1,s_00008],0);
constraint int_lt_reif(s_00003,aux8121,aux8122_BOOL);
constraint int_le_reif(s_00008, s_00003,aux8123_BOOL);
constraint array_bool_and([aux8119_BOOL,aux8120_BOOL,w_00004_00008_BOOL,aux8122_BOOL,aux8123_BOOL],aux8124_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux8125_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux8126_BOOL);
constraint int_lin_eq([-1,1,1],[aux8127,2,s_00009],0);
constraint int_lt_reif(s_00003,aux8127,aux8128_BOOL);
constraint int_le_reif(s_00009, s_00003,aux8129_BOOL);
constraint array_bool_and([aux8125_BOOL,aux8126_BOOL,w_00004_00009_BOOL,aux8128_BOOL,aux8129_BOOL],aux8130_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux8131_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux8132_BOOL);
constraint int_lin_eq([-1,1,1],[aux8133,1,s_00010],0);
constraint int_lt_reif(s_00003,aux8133,aux8134_BOOL);
constraint int_le_reif(s_00010, s_00003,aux8135_BOOL);
constraint array_bool_and([aux8131_BOOL,aux8132_BOOL,w_00004_00010_BOOL,aux8134_BOOL,aux8135_BOOL],aux8136_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux8137_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux8138_BOOL);
constraint int_lin_eq([-1,1,1],[aux8139,2,s_00011],0);
constraint int_lt_reif(s_00003,aux8139,aux8140_BOOL);
constraint int_le_reif(s_00011, s_00003,aux8141_BOOL);
constraint array_bool_and([aux8137_BOOL,aux8138_BOOL,w_00004_00011_BOOL,aux8140_BOOL,aux8141_BOOL],aux8142_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux8143_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux8144_BOOL);
constraint int_lin_eq([-1,1,1],[aux8145,2,s_00012],0);
constraint int_lt_reif(s_00003,aux8145,aux8146_BOOL);
constraint int_le_reif(s_00012, s_00003,aux8147_BOOL);
constraint array_bool_and([aux8143_BOOL,aux8144_BOOL,w_00004_00012_BOOL,aux8146_BOOL,aux8147_BOOL],aux8148_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux8149_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux8150_BOOL);
constraint int_lin_eq([-1,1,1],[aux8151,1,s_00013],0);
constraint int_lt_reif(s_00003,aux8151,aux8152_BOOL);
constraint int_le_reif(s_00013, s_00003,aux8153_BOOL);
constraint array_bool_and([aux8149_BOOL,aux8150_BOOL,w_00004_00013_BOOL,aux8152_BOOL,aux8153_BOOL],aux8154_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux8155_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux8156_BOOL);
constraint int_lin_eq([-1,1,1],[aux8157,4,s_00014],0);
constraint int_lt_reif(s_00003,aux8157,aux8158_BOOL);
constraint int_le_reif(s_00014, s_00003,aux8159_BOOL);
constraint array_bool_and([aux8155_BOOL,aux8156_BOOL,w_00004_00014_BOOL,aux8158_BOOL,aux8159_BOOL],aux8160_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux8161_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux8162_BOOL);
constraint int_lin_eq([-1,1,1],[aux8163,2,s_00015],0);
constraint int_lt_reif(s_00003,aux8163,aux8164_BOOL);
constraint int_le_reif(s_00015, s_00003,aux8165_BOOL);
constraint array_bool_and([aux8161_BOOL,aux8162_BOOL,w_00004_00015_BOOL,aux8164_BOOL,aux8165_BOOL],aux8166_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux8167_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux8168_BOOL);
constraint int_lin_eq([-1,1,1],[aux8169,3,s_00016],0);
constraint int_lt_reif(s_00003,aux8169,aux8170_BOOL);
constraint int_le_reif(s_00016, s_00003,aux8171_BOOL);
constraint array_bool_and([aux8167_BOOL,aux8168_BOOL,w_00004_00016_BOOL,aux8170_BOOL,aux8171_BOOL],aux8172_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux8173_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux8174_BOOL);
constraint int_lin_eq([-1,1,1],[aux8175,1,s_00017],0);
constraint int_lt_reif(s_00003,aux8175,aux8176_BOOL);
constraint int_le_reif(s_00017, s_00003,aux8177_BOOL);
constraint array_bool_and([aux8173_BOOL,aux8174_BOOL,w_00004_00017_BOOL,aux8176_BOOL,aux8177_BOOL],aux8178_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux8179_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux8180_BOOL);
constraint int_lin_eq([-1,1,1],[aux8181,3,s_00018],0);
constraint int_lt_reif(s_00003,aux8181,aux8182_BOOL);
constraint int_le_reif(s_00018, s_00003,aux8183_BOOL);
constraint array_bool_and([aux8179_BOOL,aux8180_BOOL,w_00004_00018_BOOL,aux8182_BOOL,aux8183_BOOL],aux8184_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux8185_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux8186_BOOL);
constraint int_lin_eq([-1,1,1],[aux8187,2,s_00019],0);
constraint int_lt_reif(s_00003,aux8187,aux8188_BOOL);
constraint int_le_reif(s_00019, s_00003,aux8189_BOOL);
constraint array_bool_and([aux8185_BOOL,aux8186_BOOL,w_00004_00019_BOOL,aux8188_BOOL,aux8189_BOOL],aux8190_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux8191_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux8192_BOOL);
constraint int_lin_eq([-1,1,1],[aux8193,3,s_00020],0);
constraint int_lt_reif(s_00003,aux8193,aux8194_BOOL);
constraint int_le_reif(s_00020, s_00003,aux8195_BOOL);
constraint array_bool_and([aux8191_BOOL,aux8192_BOOL,w_00004_00020_BOOL,aux8194_BOOL,aux8195_BOOL],aux8196_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux8082_INTEGER,aux8088_INTEGER,aux8094_INTEGER,aux8100_INTEGER,aux8106_INTEGER,aux8112_INTEGER,aux8118_INTEGER,aux8124_INTEGER,aux8130_INTEGER,aux8136_INTEGER,aux8142_INTEGER,aux8148_INTEGER,aux8154_INTEGER,aux8160_INTEGER,aux8166_INTEGER,aux8172_INTEGER,aux8178_INTEGER,aux8184_INTEGER,aux8190_INTEGER,aux8196_INTEGER,1],0,aux8197_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux8198_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux8199_BOOL);
constraint int_lin_eq([-1,1,1],[aux8200,1,s_00010],0);
constraint int_lt_reif(s_00015,aux8200,aux8201_BOOL);
constraint int_le_reif(s_00010, s_00015,aux8202_BOOL);
constraint array_bool_and([aux8198_BOOL,aux8199_BOOL,w_00004_00010_BOOL,aux8201_BOOL,aux8202_BOOL],aux8203_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux8204_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux8205_BOOL);
constraint int_lin_eq([-1,1,1],[aux8206,2,s_00011],0);
constraint int_lt_reif(s_00015,aux8206,aux8207_BOOL);
constraint int_le_reif(s_00011, s_00015,aux8208_BOOL);
constraint array_bool_and([aux8204_BOOL,aux8205_BOOL,w_00004_00011_BOOL,aux8207_BOOL,aux8208_BOOL],aux8209_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux8210_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux8211_BOOL);
constraint int_lin_eq([-1,1,1],[aux8212,2,s_00012],0);
constraint int_lt_reif(s_00015,aux8212,aux8213_BOOL);
constraint int_le_reif(s_00012, s_00015,aux8214_BOOL);
constraint array_bool_and([aux8210_BOOL,aux8211_BOOL,w_00004_00012_BOOL,aux8213_BOOL,aux8214_BOOL],aux8215_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux8216_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux8217_BOOL);
constraint int_lin_eq([-1,1,1],[aux8218,1,s_00013],0);
constraint int_lt_reif(s_00015,aux8218,aux8219_BOOL);
constraint int_le_reif(s_00013, s_00015,aux8220_BOOL);
constraint array_bool_and([aux8216_BOOL,aux8217_BOOL,w_00004_00013_BOOL,aux8219_BOOL,aux8220_BOOL],aux8221_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux8222_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux8223_BOOL);
constraint int_lin_eq([-1,1,1],[aux8224,4,s_00014],0);
constraint int_lt_reif(s_00015,aux8224,aux8225_BOOL);
constraint int_le_reif(s_00014, s_00015,aux8226_BOOL);
constraint array_bool_and([aux8222_BOOL,aux8223_BOOL,w_00004_00014_BOOL,aux8225_BOOL,aux8226_BOOL],aux8227_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux8228_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux8229_BOOL);
constraint int_lin_eq([-1,1,1],[aux8230,3,s_00016],0);
constraint int_lt_reif(s_00015,aux8230,aux8231_BOOL);
constraint int_le_reif(s_00016, s_00015,aux8232_BOOL);
constraint array_bool_and([aux8228_BOOL,aux8229_BOOL,w_00004_00016_BOOL,aux8231_BOOL,aux8232_BOOL],aux8233_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux8234_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux8235_BOOL);
constraint int_lin_eq([-1,1,1],[aux8236,1,s_00017],0);
constraint int_lt_reif(s_00015,aux8236,aux8237_BOOL);
constraint int_le_reif(s_00017, s_00015,aux8238_BOOL);
constraint array_bool_and([aux8234_BOOL,aux8235_BOOL,w_00004_00017_BOOL,aux8237_BOOL,aux8238_BOOL],aux8239_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux8240_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux8241_BOOL);
constraint int_lin_eq([-1,1,1],[aux8242,3,s_00018],0);
constraint int_lt_reif(s_00015,aux8242,aux8243_BOOL);
constraint int_le_reif(s_00018, s_00015,aux8244_BOOL);
constraint array_bool_and([aux8240_BOOL,aux8241_BOOL,w_00004_00018_BOOL,aux8243_BOOL,aux8244_BOOL],aux8245_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux8246_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux8247_BOOL);
constraint int_lin_eq([-1,1,1],[aux8248,2,s_00019],0);
constraint int_lt_reif(s_00015,aux8248,aux8249_BOOL);
constraint int_le_reif(s_00019, s_00015,aux8250_BOOL);
constraint array_bool_and([aux8246_BOOL,aux8247_BOOL,w_00004_00019_BOOL,aux8249_BOOL,aux8250_BOOL],aux8251_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux8252_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux8253_BOOL);
constraint int_lin_eq([-1,1,1],[aux8254,3,s_00020],0);
constraint int_lt_reif(s_00015,aux8254,aux8255_BOOL);
constraint int_le_reif(s_00020, s_00015,aux8256_BOOL);
constraint array_bool_and([aux8252_BOOL,aux8253_BOOL,w_00004_00020_BOOL,aux8255_BOOL,aux8256_BOOL],aux8257_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux8258_BOOL);
constraint int_lin_eq([-1,1,1],[aux8259,2,s_00015],0);
constraint int_lt_reif(s_00015,aux8259,aux8260_BOOL);
constraint array_bool_and([aux8258_BOOL,w_00004_00015_BOOL,aux8260_BOOL],aux8261_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux8262_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux8263_BOOL);
constraint int_lin_eq([-1,1,1],[aux8264,1,s_00001],0);
constraint int_lt_reif(s_00015,aux8264,aux8265_BOOL);
constraint int_le_reif(s_00001, s_00015,aux8266_BOOL);
constraint array_bool_and([aux8262_BOOL,aux8263_BOOL,w_00004_00001_BOOL,aux8265_BOOL,aux8266_BOOL],aux8267_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux8268_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux8269_BOOL);
constraint int_lin_eq([-1,1,1],[aux8270,2,s_00002],0);
constraint int_lt_reif(s_00015,aux8270,aux8271_BOOL);
constraint int_le_reif(s_00002, s_00015,aux8272_BOOL);
constraint array_bool_and([aux8268_BOOL,aux8269_BOOL,w_00004_00002_BOOL,aux8271_BOOL,aux8272_BOOL],aux8273_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux8274_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux8275_BOOL);
constraint int_lin_eq([-1,1,1],[aux8276,3,s_00003],0);
constraint int_lt_reif(s_00015,aux8276,aux8277_BOOL);
constraint int_le_reif(s_00003, s_00015,aux8278_BOOL);
constraint array_bool_and([aux8274_BOOL,aux8275_BOOL,w_00004_00003_BOOL,aux8277_BOOL,aux8278_BOOL],aux8279_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux8280_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux8281_BOOL);
constraint int_lin_eq([-1,1,1],[aux8282,2,s_00004],0);
constraint int_lt_reif(s_00015,aux8282,aux8283_BOOL);
constraint int_le_reif(s_00004, s_00015,aux8284_BOOL);
constraint array_bool_and([aux8280_BOOL,aux8281_BOOL,w_00004_00004_BOOL,aux8283_BOOL,aux8284_BOOL],aux8285_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux8286_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux8287_BOOL);
constraint int_lin_eq([-1,1,1],[aux8288,2,s_00005],0);
constraint int_lt_reif(s_00015,aux8288,aux8289_BOOL);
constraint int_le_reif(s_00005, s_00015,aux8290_BOOL);
constraint array_bool_and([aux8286_BOOL,aux8287_BOOL,w_00004_00005_BOOL,aux8289_BOOL,aux8290_BOOL],aux8291_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux8292_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux8293_BOOL);
constraint int_lin_eq([-1,1,1],[aux8294,3,s_00006],0);
constraint int_lt_reif(s_00015,aux8294,aux8295_BOOL);
constraint int_le_reif(s_00006, s_00015,aux8296_BOOL);
constraint array_bool_and([aux8292_BOOL,aux8293_BOOL,w_00004_00006_BOOL,aux8295_BOOL,aux8296_BOOL],aux8297_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux8298_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux8299_BOOL);
constraint int_lin_eq([-1,1,1],[aux8300,2,s_00007],0);
constraint int_lt_reif(s_00015,aux8300,aux8301_BOOL);
constraint int_le_reif(s_00007, s_00015,aux8302_BOOL);
constraint array_bool_and([aux8298_BOOL,aux8299_BOOL,w_00004_00007_BOOL,aux8301_BOOL,aux8302_BOOL],aux8303_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux8304_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux8305_BOOL);
constraint int_lin_eq([-1,1,1],[aux8306,1,s_00008],0);
constraint int_lt_reif(s_00015,aux8306,aux8307_BOOL);
constraint int_le_reif(s_00008, s_00015,aux8308_BOOL);
constraint array_bool_and([aux8304_BOOL,aux8305_BOOL,w_00004_00008_BOOL,aux8307_BOOL,aux8308_BOOL],aux8309_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux8310_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux8311_BOOL);
constraint int_lin_eq([-1,1,1],[aux8312,2,s_00009],0);
constraint int_lt_reif(s_00015,aux8312,aux8313_BOOL);
constraint int_le_reif(s_00009, s_00015,aux8314_BOOL);
constraint array_bool_and([aux8310_BOOL,aux8311_BOOL,w_00004_00009_BOOL,aux8313_BOOL,aux8314_BOOL],aux8315_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux8203_INTEGER,aux8209_INTEGER,aux8215_INTEGER,aux8221_INTEGER,aux8227_INTEGER,aux8233_INTEGER,aux8239_INTEGER,aux8245_INTEGER,aux8251_INTEGER,aux8257_INTEGER,aux8261_INTEGER,aux8267_INTEGER,aux8273_INTEGER,aux8279_INTEGER,aux8285_INTEGER,aux8291_INTEGER,aux8297_INTEGER,aux8303_INTEGER,aux8309_INTEGER,aux8315_INTEGER,1],0,aux8316_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux8317_BOOL);
constraint int_lin_eq([-1,1,1],[aux8318,2,s_00002],0);
constraint int_lt_reif(s_00002,aux8318,aux8319_BOOL);
constraint array_bool_and([aux8317_BOOL,w_00004_00002_BOOL,aux8319_BOOL],aux8320_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux8321_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux8322_BOOL);
constraint int_lin_eq([-1,1,1],[aux8323,1,s_00001],0);
constraint int_lt_reif(s_00002,aux8323,aux8324_BOOL);
constraint int_le_reif(s_00001, s_00002,aux8325_BOOL);
constraint array_bool_and([aux8321_BOOL,aux8322_BOOL,w_00004_00001_BOOL,aux8324_BOOL,aux8325_BOOL],aux8326_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux8327_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux8328_BOOL);
constraint int_lin_eq([-1,1,1],[aux8329,3,s_00003],0);
constraint int_lt_reif(s_00002,aux8329,aux8330_BOOL);
constraint int_le_reif(s_00003, s_00002,aux8331_BOOL);
constraint array_bool_and([aux8327_BOOL,aux8328_BOOL,w_00004_00003_BOOL,aux8330_BOOL,aux8331_BOOL],aux8332_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux8333_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux8334_BOOL);
constraint int_lin_eq([-1,1,1],[aux8335,2,s_00004],0);
constraint int_lt_reif(s_00002,aux8335,aux8336_BOOL);
constraint int_le_reif(s_00004, s_00002,aux8337_BOOL);
constraint array_bool_and([aux8333_BOOL,aux8334_BOOL,w_00004_00004_BOOL,aux8336_BOOL,aux8337_BOOL],aux8338_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux8339_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux8340_BOOL);
constraint int_lin_eq([-1,1,1],[aux8341,2,s_00005],0);
constraint int_lt_reif(s_00002,aux8341,aux8342_BOOL);
constraint int_le_reif(s_00005, s_00002,aux8343_BOOL);
constraint array_bool_and([aux8339_BOOL,aux8340_BOOL,w_00004_00005_BOOL,aux8342_BOOL,aux8343_BOOL],aux8344_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux8345_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux8346_BOOL);
constraint int_lin_eq([-1,1,1],[aux8347,3,s_00006],0);
constraint int_lt_reif(s_00002,aux8347,aux8348_BOOL);
constraint int_le_reif(s_00006, s_00002,aux8349_BOOL);
constraint array_bool_and([aux8345_BOOL,aux8346_BOOL,w_00004_00006_BOOL,aux8348_BOOL,aux8349_BOOL],aux8350_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux8351_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux8352_BOOL);
constraint int_lin_eq([-1,1,1],[aux8353,2,s_00007],0);
constraint int_lt_reif(s_00002,aux8353,aux8354_BOOL);
constraint int_le_reif(s_00007, s_00002,aux8355_BOOL);
constraint array_bool_and([aux8351_BOOL,aux8352_BOOL,w_00004_00007_BOOL,aux8354_BOOL,aux8355_BOOL],aux8356_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux8357_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux8358_BOOL);
constraint int_lin_eq([-1,1,1],[aux8359,1,s_00008],0);
constraint int_lt_reif(s_00002,aux8359,aux8360_BOOL);
constraint int_le_reif(s_00008, s_00002,aux8361_BOOL);
constraint array_bool_and([aux8357_BOOL,aux8358_BOOL,w_00004_00008_BOOL,aux8360_BOOL,aux8361_BOOL],aux8362_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux8363_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux8364_BOOL);
constraint int_lin_eq([-1,1,1],[aux8365,2,s_00009],0);
constraint int_lt_reif(s_00002,aux8365,aux8366_BOOL);
constraint int_le_reif(s_00009, s_00002,aux8367_BOOL);
constraint array_bool_and([aux8363_BOOL,aux8364_BOOL,w_00004_00009_BOOL,aux8366_BOOL,aux8367_BOOL],aux8368_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux8369_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux8370_BOOL);
constraint int_lin_eq([-1,1,1],[aux8371,1,s_00010],0);
constraint int_lt_reif(s_00002,aux8371,aux8372_BOOL);
constraint int_le_reif(s_00010, s_00002,aux8373_BOOL);
constraint array_bool_and([aux8369_BOOL,aux8370_BOOL,w_00004_00010_BOOL,aux8372_BOOL,aux8373_BOOL],aux8374_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux8375_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux8376_BOOL);
constraint int_lin_eq([-1,1,1],[aux8377,2,s_00011],0);
constraint int_lt_reif(s_00002,aux8377,aux8378_BOOL);
constraint int_le_reif(s_00011, s_00002,aux8379_BOOL);
constraint array_bool_and([aux8375_BOOL,aux8376_BOOL,w_00004_00011_BOOL,aux8378_BOOL,aux8379_BOOL],aux8380_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux8381_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux8382_BOOL);
constraint int_lin_eq([-1,1,1],[aux8383,2,s_00012],0);
constraint int_lt_reif(s_00002,aux8383,aux8384_BOOL);
constraint int_le_reif(s_00012, s_00002,aux8385_BOOL);
constraint array_bool_and([aux8381_BOOL,aux8382_BOOL,w_00004_00012_BOOL,aux8384_BOOL,aux8385_BOOL],aux8386_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux8387_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux8388_BOOL);
constraint int_lin_eq([-1,1,1],[aux8389,1,s_00013],0);
constraint int_lt_reif(s_00002,aux8389,aux8390_BOOL);
constraint int_le_reif(s_00013, s_00002,aux8391_BOOL);
constraint array_bool_and([aux8387_BOOL,aux8388_BOOL,w_00004_00013_BOOL,aux8390_BOOL,aux8391_BOOL],aux8392_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux8393_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux8394_BOOL);
constraint int_lin_eq([-1,1,1],[aux8395,4,s_00014],0);
constraint int_lt_reif(s_00002,aux8395,aux8396_BOOL);
constraint int_le_reif(s_00014, s_00002,aux8397_BOOL);
constraint array_bool_and([aux8393_BOOL,aux8394_BOOL,w_00004_00014_BOOL,aux8396_BOOL,aux8397_BOOL],aux8398_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux8399_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux8400_BOOL);
constraint int_lin_eq([-1,1,1],[aux8401,2,s_00015],0);
constraint int_lt_reif(s_00002,aux8401,aux8402_BOOL);
constraint int_le_reif(s_00015, s_00002,aux8403_BOOL);
constraint array_bool_and([aux8399_BOOL,aux8400_BOOL,w_00004_00015_BOOL,aux8402_BOOL,aux8403_BOOL],aux8404_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux8405_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux8406_BOOL);
constraint int_lin_eq([-1,1,1],[aux8407,3,s_00016],0);
constraint int_lt_reif(s_00002,aux8407,aux8408_BOOL);
constraint int_le_reif(s_00016, s_00002,aux8409_BOOL);
constraint array_bool_and([aux8405_BOOL,aux8406_BOOL,w_00004_00016_BOOL,aux8408_BOOL,aux8409_BOOL],aux8410_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux8411_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux8412_BOOL);
constraint int_lin_eq([-1,1,1],[aux8413,1,s_00017],0);
constraint int_lt_reif(s_00002,aux8413,aux8414_BOOL);
constraint int_le_reif(s_00017, s_00002,aux8415_BOOL);
constraint array_bool_and([aux8411_BOOL,aux8412_BOOL,w_00004_00017_BOOL,aux8414_BOOL,aux8415_BOOL],aux8416_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux8417_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux8418_BOOL);
constraint int_lin_eq([-1,1,1],[aux8419,3,s_00018],0);
constraint int_lt_reif(s_00002,aux8419,aux8420_BOOL);
constraint int_le_reif(s_00018, s_00002,aux8421_BOOL);
constraint array_bool_and([aux8417_BOOL,aux8418_BOOL,w_00004_00018_BOOL,aux8420_BOOL,aux8421_BOOL],aux8422_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux8423_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux8424_BOOL);
constraint int_lin_eq([-1,1,1],[aux8425,2,s_00019],0);
constraint int_lt_reif(s_00002,aux8425,aux8426_BOOL);
constraint int_le_reif(s_00019, s_00002,aux8427_BOOL);
constraint array_bool_and([aux8423_BOOL,aux8424_BOOL,w_00004_00019_BOOL,aux8426_BOOL,aux8427_BOOL],aux8428_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux8429_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux8430_BOOL);
constraint int_lin_eq([-1,1,1],[aux8431,3,s_00020],0);
constraint int_lt_reif(s_00002,aux8431,aux8432_BOOL);
constraint int_le_reif(s_00020, s_00002,aux8433_BOOL);
constraint array_bool_and([aux8429_BOOL,aux8430_BOOL,w_00004_00020_BOOL,aux8432_BOOL,aux8433_BOOL],aux8434_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux8320_INTEGER,aux8326_INTEGER,aux8332_INTEGER,aux8338_INTEGER,aux8344_INTEGER,aux8350_INTEGER,aux8356_INTEGER,aux8362_INTEGER,aux8368_INTEGER,aux8374_INTEGER,aux8380_INTEGER,aux8386_INTEGER,aux8392_INTEGER,aux8398_INTEGER,aux8404_INTEGER,aux8410_INTEGER,aux8416_INTEGER,aux8422_INTEGER,aux8428_INTEGER,aux8434_INTEGER,1],0,aux8435_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux8436_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux8437_BOOL);
constraint int_lin_eq([-1,1,1],[aux8438,1,s_00010],0);
constraint int_lt_reif(s_00017,aux8438,aux8439_BOOL);
constraint int_le_reif(s_00010, s_00017,aux8440_BOOL);
constraint array_bool_and([aux8436_BOOL,aux8437_BOOL,w_00004_00010_BOOL,aux8439_BOOL,aux8440_BOOL],aux8441_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux8442_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux8443_BOOL);
constraint int_lin_eq([-1,1,1],[aux8444,2,s_00011],0);
constraint int_lt_reif(s_00017,aux8444,aux8445_BOOL);
constraint int_le_reif(s_00011, s_00017,aux8446_BOOL);
constraint array_bool_and([aux8442_BOOL,aux8443_BOOL,w_00004_00011_BOOL,aux8445_BOOL,aux8446_BOOL],aux8447_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux8448_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux8449_BOOL);
constraint int_lin_eq([-1,1,1],[aux8450,2,s_00012],0);
constraint int_lt_reif(s_00017,aux8450,aux8451_BOOL);
constraint int_le_reif(s_00012, s_00017,aux8452_BOOL);
constraint array_bool_and([aux8448_BOOL,aux8449_BOOL,w_00004_00012_BOOL,aux8451_BOOL,aux8452_BOOL],aux8453_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux8454_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux8455_BOOL);
constraint int_lin_eq([-1,1,1],[aux8456,1,s_00013],0);
constraint int_lt_reif(s_00017,aux8456,aux8457_BOOL);
constraint int_le_reif(s_00013, s_00017,aux8458_BOOL);
constraint array_bool_and([aux8454_BOOL,aux8455_BOOL,w_00004_00013_BOOL,aux8457_BOOL,aux8458_BOOL],aux8459_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux8460_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux8461_BOOL);
constraint int_lin_eq([-1,1,1],[aux8462,4,s_00014],0);
constraint int_lt_reif(s_00017,aux8462,aux8463_BOOL);
constraint int_le_reif(s_00014, s_00017,aux8464_BOOL);
constraint array_bool_and([aux8460_BOOL,aux8461_BOOL,w_00004_00014_BOOL,aux8463_BOOL,aux8464_BOOL],aux8465_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux8466_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux8467_BOOL);
constraint int_lin_eq([-1,1,1],[aux8468,2,s_00015],0);
constraint int_lt_reif(s_00017,aux8468,aux8469_BOOL);
constraint int_le_reif(s_00015, s_00017,aux8470_BOOL);
constraint array_bool_and([aux8466_BOOL,aux8467_BOOL,w_00004_00015_BOOL,aux8469_BOOL,aux8470_BOOL],aux8471_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux8472_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux8473_BOOL);
constraint int_lin_eq([-1,1,1],[aux8474,3,s_00016],0);
constraint int_lt_reif(s_00017,aux8474,aux8475_BOOL);
constraint int_le_reif(s_00016, s_00017,aux8476_BOOL);
constraint array_bool_and([aux8472_BOOL,aux8473_BOOL,w_00004_00016_BOOL,aux8475_BOOL,aux8476_BOOL],aux8477_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux8478_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux8479_BOOL);
constraint int_lin_eq([-1,1,1],[aux8480,3,s_00018],0);
constraint int_lt_reif(s_00017,aux8480,aux8481_BOOL);
constraint int_le_reif(s_00018, s_00017,aux8482_BOOL);
constraint array_bool_and([aux8478_BOOL,aux8479_BOOL,w_00004_00018_BOOL,aux8481_BOOL,aux8482_BOOL],aux8483_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux8484_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux8485_BOOL);
constraint int_lin_eq([-1,1,1],[aux8486,2,s_00019],0);
constraint int_lt_reif(s_00017,aux8486,aux8487_BOOL);
constraint int_le_reif(s_00019, s_00017,aux8488_BOOL);
constraint array_bool_and([aux8484_BOOL,aux8485_BOOL,w_00004_00019_BOOL,aux8487_BOOL,aux8488_BOOL],aux8489_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux8490_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux8491_BOOL);
constraint int_lin_eq([-1,1,1],[aux8492,3,s_00020],0);
constraint int_lt_reif(s_00017,aux8492,aux8493_BOOL);
constraint int_le_reif(s_00020, s_00017,aux8494_BOOL);
constraint array_bool_and([aux8490_BOOL,aux8491_BOOL,w_00004_00020_BOOL,aux8493_BOOL,aux8494_BOOL],aux8495_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux8496_BOOL);
constraint int_lin_eq([-1,1,1],[aux8497,1,s_00017],0);
constraint int_lt_reif(s_00017,aux8497,aux8498_BOOL);
constraint array_bool_and([aux8496_BOOL,w_00004_00017_BOOL,aux8498_BOOL],aux8499_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux8500_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux8501_BOOL);
constraint int_lin_eq([-1,1,1],[aux8502,1,s_00001],0);
constraint int_lt_reif(s_00017,aux8502,aux8503_BOOL);
constraint int_le_reif(s_00001, s_00017,aux8504_BOOL);
constraint array_bool_and([aux8500_BOOL,aux8501_BOOL,w_00004_00001_BOOL,aux8503_BOOL,aux8504_BOOL],aux8505_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux8506_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux8507_BOOL);
constraint int_lin_eq([-1,1,1],[aux8508,2,s_00002],0);
constraint int_lt_reif(s_00017,aux8508,aux8509_BOOL);
constraint int_le_reif(s_00002, s_00017,aux8510_BOOL);
constraint array_bool_and([aux8506_BOOL,aux8507_BOOL,w_00004_00002_BOOL,aux8509_BOOL,aux8510_BOOL],aux8511_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux8512_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux8513_BOOL);
constraint int_lin_eq([-1,1,1],[aux8514,3,s_00003],0);
constraint int_lt_reif(s_00017,aux8514,aux8515_BOOL);
constraint int_le_reif(s_00003, s_00017,aux8516_BOOL);
constraint array_bool_and([aux8512_BOOL,aux8513_BOOL,w_00004_00003_BOOL,aux8515_BOOL,aux8516_BOOL],aux8517_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux8518_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux8519_BOOL);
constraint int_lin_eq([-1,1,1],[aux8520,2,s_00004],0);
constraint int_lt_reif(s_00017,aux8520,aux8521_BOOL);
constraint int_le_reif(s_00004, s_00017,aux8522_BOOL);
constraint array_bool_and([aux8518_BOOL,aux8519_BOOL,w_00004_00004_BOOL,aux8521_BOOL,aux8522_BOOL],aux8523_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux8524_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux8525_BOOL);
constraint int_lin_eq([-1,1,1],[aux8526,2,s_00005],0);
constraint int_lt_reif(s_00017,aux8526,aux8527_BOOL);
constraint int_le_reif(s_00005, s_00017,aux8528_BOOL);
constraint array_bool_and([aux8524_BOOL,aux8525_BOOL,w_00004_00005_BOOL,aux8527_BOOL,aux8528_BOOL],aux8529_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux8530_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux8531_BOOL);
constraint int_lin_eq([-1,1,1],[aux8532,3,s_00006],0);
constraint int_lt_reif(s_00017,aux8532,aux8533_BOOL);
constraint int_le_reif(s_00006, s_00017,aux8534_BOOL);
constraint array_bool_and([aux8530_BOOL,aux8531_BOOL,w_00004_00006_BOOL,aux8533_BOOL,aux8534_BOOL],aux8535_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux8536_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux8537_BOOL);
constraint int_lin_eq([-1,1,1],[aux8538,2,s_00007],0);
constraint int_lt_reif(s_00017,aux8538,aux8539_BOOL);
constraint int_le_reif(s_00007, s_00017,aux8540_BOOL);
constraint array_bool_and([aux8536_BOOL,aux8537_BOOL,w_00004_00007_BOOL,aux8539_BOOL,aux8540_BOOL],aux8541_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux8542_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux8543_BOOL);
constraint int_lin_eq([-1,1,1],[aux8544,1,s_00008],0);
constraint int_lt_reif(s_00017,aux8544,aux8545_BOOL);
constraint int_le_reif(s_00008, s_00017,aux8546_BOOL);
constraint array_bool_and([aux8542_BOOL,aux8543_BOOL,w_00004_00008_BOOL,aux8545_BOOL,aux8546_BOOL],aux8547_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux8548_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux8549_BOOL);
constraint int_lin_eq([-1,1,1],[aux8550,2,s_00009],0);
constraint int_lt_reif(s_00017,aux8550,aux8551_BOOL);
constraint int_le_reif(s_00009, s_00017,aux8552_BOOL);
constraint array_bool_and([aux8548_BOOL,aux8549_BOOL,w_00004_00009_BOOL,aux8551_BOOL,aux8552_BOOL],aux8553_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux8441_INTEGER,aux8447_INTEGER,aux8453_INTEGER,aux8459_INTEGER,aux8465_INTEGER,aux8471_INTEGER,aux8477_INTEGER,aux8483_INTEGER,aux8489_INTEGER,aux8495_INTEGER,aux8499_INTEGER,aux8505_INTEGER,aux8511_INTEGER,aux8517_INTEGER,aux8523_INTEGER,aux8529_INTEGER,aux8535_INTEGER,aux8541_INTEGER,aux8547_INTEGER,aux8553_INTEGER,1],0,aux8554_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux8555_BOOL);
constraint int_lin_eq([-1,1,1],[aux8556,2,s_00005],0);
constraint int_lt_reif(s_00005,aux8556,aux8557_BOOL);
constraint array_bool_and([aux8555_BOOL,w_00004_00005_BOOL,aux8557_BOOL],aux8558_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux8559_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux8560_BOOL);
constraint int_lin_eq([-1,1,1],[aux8561,1,s_00001],0);
constraint int_lt_reif(s_00005,aux8561,aux8562_BOOL);
constraint int_le_reif(s_00001, s_00005,aux8563_BOOL);
constraint array_bool_and([aux8559_BOOL,aux8560_BOOL,w_00004_00001_BOOL,aux8562_BOOL,aux8563_BOOL],aux8564_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux8565_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux8566_BOOL);
constraint int_lin_eq([-1,1,1],[aux8567,2,s_00002],0);
constraint int_lt_reif(s_00005,aux8567,aux8568_BOOL);
constraint int_le_reif(s_00002, s_00005,aux8569_BOOL);
constraint array_bool_and([aux8565_BOOL,aux8566_BOOL,w_00004_00002_BOOL,aux8568_BOOL,aux8569_BOOL],aux8570_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux8571_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux8572_BOOL);
constraint int_lin_eq([-1,1,1],[aux8573,3,s_00003],0);
constraint int_lt_reif(s_00005,aux8573,aux8574_BOOL);
constraint int_le_reif(s_00003, s_00005,aux8575_BOOL);
constraint array_bool_and([aux8571_BOOL,aux8572_BOOL,w_00004_00003_BOOL,aux8574_BOOL,aux8575_BOOL],aux8576_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux8577_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux8578_BOOL);
constraint int_lin_eq([-1,1,1],[aux8579,2,s_00004],0);
constraint int_lt_reif(s_00005,aux8579,aux8580_BOOL);
constraint int_le_reif(s_00004, s_00005,aux8581_BOOL);
constraint array_bool_and([aux8577_BOOL,aux8578_BOOL,w_00004_00004_BOOL,aux8580_BOOL,aux8581_BOOL],aux8582_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux8583_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux8584_BOOL);
constraint int_lin_eq([-1,1,1],[aux8585,3,s_00006],0);
constraint int_lt_reif(s_00005,aux8585,aux8586_BOOL);
constraint int_le_reif(s_00006, s_00005,aux8587_BOOL);
constraint array_bool_and([aux8583_BOOL,aux8584_BOOL,w_00004_00006_BOOL,aux8586_BOOL,aux8587_BOOL],aux8588_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux8589_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux8590_BOOL);
constraint int_lin_eq([-1,1,1],[aux8591,2,s_00007],0);
constraint int_lt_reif(s_00005,aux8591,aux8592_BOOL);
constraint int_le_reif(s_00007, s_00005,aux8593_BOOL);
constraint array_bool_and([aux8589_BOOL,aux8590_BOOL,w_00004_00007_BOOL,aux8592_BOOL,aux8593_BOOL],aux8594_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux8595_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux8596_BOOL);
constraint int_lin_eq([-1,1,1],[aux8597,1,s_00008],0);
constraint int_lt_reif(s_00005,aux8597,aux8598_BOOL);
constraint int_le_reif(s_00008, s_00005,aux8599_BOOL);
constraint array_bool_and([aux8595_BOOL,aux8596_BOOL,w_00004_00008_BOOL,aux8598_BOOL,aux8599_BOOL],aux8600_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux8601_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux8602_BOOL);
constraint int_lin_eq([-1,1,1],[aux8603,2,s_00009],0);
constraint int_lt_reif(s_00005,aux8603,aux8604_BOOL);
constraint int_le_reif(s_00009, s_00005,aux8605_BOOL);
constraint array_bool_and([aux8601_BOOL,aux8602_BOOL,w_00004_00009_BOOL,aux8604_BOOL,aux8605_BOOL],aux8606_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux8607_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux8608_BOOL);
constraint int_lin_eq([-1,1,1],[aux8609,1,s_00010],0);
constraint int_lt_reif(s_00005,aux8609,aux8610_BOOL);
constraint int_le_reif(s_00010, s_00005,aux8611_BOOL);
constraint array_bool_and([aux8607_BOOL,aux8608_BOOL,w_00004_00010_BOOL,aux8610_BOOL,aux8611_BOOL],aux8612_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux8613_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux8614_BOOL);
constraint int_lin_eq([-1,1,1],[aux8615,2,s_00011],0);
constraint int_lt_reif(s_00005,aux8615,aux8616_BOOL);
constraint int_le_reif(s_00011, s_00005,aux8617_BOOL);
constraint array_bool_and([aux8613_BOOL,aux8614_BOOL,w_00004_00011_BOOL,aux8616_BOOL,aux8617_BOOL],aux8618_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux8619_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux8620_BOOL);
constraint int_lin_eq([-1,1,1],[aux8621,2,s_00012],0);
constraint int_lt_reif(s_00005,aux8621,aux8622_BOOL);
constraint int_le_reif(s_00012, s_00005,aux8623_BOOL);
constraint array_bool_and([aux8619_BOOL,aux8620_BOOL,w_00004_00012_BOOL,aux8622_BOOL,aux8623_BOOL],aux8624_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux8625_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux8626_BOOL);
constraint int_lin_eq([-1,1,1],[aux8627,1,s_00013],0);
constraint int_lt_reif(s_00005,aux8627,aux8628_BOOL);
constraint int_le_reif(s_00013, s_00005,aux8629_BOOL);
constraint array_bool_and([aux8625_BOOL,aux8626_BOOL,w_00004_00013_BOOL,aux8628_BOOL,aux8629_BOOL],aux8630_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux8631_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux8632_BOOL);
constraint int_lin_eq([-1,1,1],[aux8633,4,s_00014],0);
constraint int_lt_reif(s_00005,aux8633,aux8634_BOOL);
constraint int_le_reif(s_00014, s_00005,aux8635_BOOL);
constraint array_bool_and([aux8631_BOOL,aux8632_BOOL,w_00004_00014_BOOL,aux8634_BOOL,aux8635_BOOL],aux8636_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux8637_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux8638_BOOL);
constraint int_lin_eq([-1,1,1],[aux8639,2,s_00015],0);
constraint int_lt_reif(s_00005,aux8639,aux8640_BOOL);
constraint int_le_reif(s_00015, s_00005,aux8641_BOOL);
constraint array_bool_and([aux8637_BOOL,aux8638_BOOL,w_00004_00015_BOOL,aux8640_BOOL,aux8641_BOOL],aux8642_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux8643_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux8644_BOOL);
constraint int_lin_eq([-1,1,1],[aux8645,3,s_00016],0);
constraint int_lt_reif(s_00005,aux8645,aux8646_BOOL);
constraint int_le_reif(s_00016, s_00005,aux8647_BOOL);
constraint array_bool_and([aux8643_BOOL,aux8644_BOOL,w_00004_00016_BOOL,aux8646_BOOL,aux8647_BOOL],aux8648_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux8649_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux8650_BOOL);
constraint int_lin_eq([-1,1,1],[aux8651,1,s_00017],0);
constraint int_lt_reif(s_00005,aux8651,aux8652_BOOL);
constraint int_le_reif(s_00017, s_00005,aux8653_BOOL);
constraint array_bool_and([aux8649_BOOL,aux8650_BOOL,w_00004_00017_BOOL,aux8652_BOOL,aux8653_BOOL],aux8654_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux8655_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux8656_BOOL);
constraint int_lin_eq([-1,1,1],[aux8657,3,s_00018],0);
constraint int_lt_reif(s_00005,aux8657,aux8658_BOOL);
constraint int_le_reif(s_00018, s_00005,aux8659_BOOL);
constraint array_bool_and([aux8655_BOOL,aux8656_BOOL,w_00004_00018_BOOL,aux8658_BOOL,aux8659_BOOL],aux8660_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux8661_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux8662_BOOL);
constraint int_lin_eq([-1,1,1],[aux8663,2,s_00019],0);
constraint int_lt_reif(s_00005,aux8663,aux8664_BOOL);
constraint int_le_reif(s_00019, s_00005,aux8665_BOOL);
constraint array_bool_and([aux8661_BOOL,aux8662_BOOL,w_00004_00019_BOOL,aux8664_BOOL,aux8665_BOOL],aux8666_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux8667_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux8668_BOOL);
constraint int_lin_eq([-1,1,1],[aux8669,3,s_00020],0);
constraint int_lt_reif(s_00005,aux8669,aux8670_BOOL);
constraint int_le_reif(s_00020, s_00005,aux8671_BOOL);
constraint array_bool_and([aux8667_BOOL,aux8668_BOOL,w_00004_00020_BOOL,aux8670_BOOL,aux8671_BOOL],aux8672_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux8558_INTEGER,aux8564_INTEGER,aux8570_INTEGER,aux8576_INTEGER,aux8582_INTEGER,aux8588_INTEGER,aux8594_INTEGER,aux8600_INTEGER,aux8606_INTEGER,aux8612_INTEGER,aux8618_INTEGER,aux8624_INTEGER,aux8630_INTEGER,aux8636_INTEGER,aux8642_INTEGER,aux8648_INTEGER,aux8654_INTEGER,aux8660_INTEGER,aux8666_INTEGER,aux8672_INTEGER,1],0,aux8673_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux8674_BOOL);
constraint int_lin_eq([-1,1,1],[aux8675,2,s_00004],0);
constraint int_lt_reif(s_00004,aux8675,aux8676_BOOL);
constraint array_bool_and([aux8674_BOOL,w_00004_00004_BOOL,aux8676_BOOL],aux8677_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux8678_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux8679_BOOL);
constraint int_lin_eq([-1,1,1],[aux8680,1,s_00001],0);
constraint int_lt_reif(s_00004,aux8680,aux8681_BOOL);
constraint int_le_reif(s_00001, s_00004,aux8682_BOOL);
constraint array_bool_and([aux8678_BOOL,aux8679_BOOL,w_00004_00001_BOOL,aux8681_BOOL,aux8682_BOOL],aux8683_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux8684_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux8685_BOOL);
constraint int_lin_eq([-1,1,1],[aux8686,2,s_00002],0);
constraint int_lt_reif(s_00004,aux8686,aux8687_BOOL);
constraint int_le_reif(s_00002, s_00004,aux8688_BOOL);
constraint array_bool_and([aux8684_BOOL,aux8685_BOOL,w_00004_00002_BOOL,aux8687_BOOL,aux8688_BOOL],aux8689_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux8690_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux8691_BOOL);
constraint int_lin_eq([-1,1,1],[aux8692,3,s_00003],0);
constraint int_lt_reif(s_00004,aux8692,aux8693_BOOL);
constraint int_le_reif(s_00003, s_00004,aux8694_BOOL);
constraint array_bool_and([aux8690_BOOL,aux8691_BOOL,w_00004_00003_BOOL,aux8693_BOOL,aux8694_BOOL],aux8695_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux8696_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux8697_BOOL);
constraint int_lin_eq([-1,1,1],[aux8698,2,s_00005],0);
constraint int_lt_reif(s_00004,aux8698,aux8699_BOOL);
constraint int_le_reif(s_00005, s_00004,aux8700_BOOL);
constraint array_bool_and([aux8696_BOOL,aux8697_BOOL,w_00004_00005_BOOL,aux8699_BOOL,aux8700_BOOL],aux8701_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux8702_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux8703_BOOL);
constraint int_lin_eq([-1,1,1],[aux8704,3,s_00006],0);
constraint int_lt_reif(s_00004,aux8704,aux8705_BOOL);
constraint int_le_reif(s_00006, s_00004,aux8706_BOOL);
constraint array_bool_and([aux8702_BOOL,aux8703_BOOL,w_00004_00006_BOOL,aux8705_BOOL,aux8706_BOOL],aux8707_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux8708_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux8709_BOOL);
constraint int_lin_eq([-1,1,1],[aux8710,2,s_00007],0);
constraint int_lt_reif(s_00004,aux8710,aux8711_BOOL);
constraint int_le_reif(s_00007, s_00004,aux8712_BOOL);
constraint array_bool_and([aux8708_BOOL,aux8709_BOOL,w_00004_00007_BOOL,aux8711_BOOL,aux8712_BOOL],aux8713_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux8714_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux8715_BOOL);
constraint int_lin_eq([-1,1,1],[aux8716,1,s_00008],0);
constraint int_lt_reif(s_00004,aux8716,aux8717_BOOL);
constraint int_le_reif(s_00008, s_00004,aux8718_BOOL);
constraint array_bool_and([aux8714_BOOL,aux8715_BOOL,w_00004_00008_BOOL,aux8717_BOOL,aux8718_BOOL],aux8719_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux8720_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux8721_BOOL);
constraint int_lin_eq([-1,1,1],[aux8722,2,s_00009],0);
constraint int_lt_reif(s_00004,aux8722,aux8723_BOOL);
constraint int_le_reif(s_00009, s_00004,aux8724_BOOL);
constraint array_bool_and([aux8720_BOOL,aux8721_BOOL,w_00004_00009_BOOL,aux8723_BOOL,aux8724_BOOL],aux8725_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux8726_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux8727_BOOL);
constraint int_lin_eq([-1,1,1],[aux8728,1,s_00010],0);
constraint int_lt_reif(s_00004,aux8728,aux8729_BOOL);
constraint int_le_reif(s_00010, s_00004,aux8730_BOOL);
constraint array_bool_and([aux8726_BOOL,aux8727_BOOL,w_00004_00010_BOOL,aux8729_BOOL,aux8730_BOOL],aux8731_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux8732_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux8733_BOOL);
constraint int_lin_eq([-1,1,1],[aux8734,2,s_00011],0);
constraint int_lt_reif(s_00004,aux8734,aux8735_BOOL);
constraint int_le_reif(s_00011, s_00004,aux8736_BOOL);
constraint array_bool_and([aux8732_BOOL,aux8733_BOOL,w_00004_00011_BOOL,aux8735_BOOL,aux8736_BOOL],aux8737_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux8738_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux8739_BOOL);
constraint int_lin_eq([-1,1,1],[aux8740,2,s_00012],0);
constraint int_lt_reif(s_00004,aux8740,aux8741_BOOL);
constraint int_le_reif(s_00012, s_00004,aux8742_BOOL);
constraint array_bool_and([aux8738_BOOL,aux8739_BOOL,w_00004_00012_BOOL,aux8741_BOOL,aux8742_BOOL],aux8743_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux8744_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux8745_BOOL);
constraint int_lin_eq([-1,1,1],[aux8746,1,s_00013],0);
constraint int_lt_reif(s_00004,aux8746,aux8747_BOOL);
constraint int_le_reif(s_00013, s_00004,aux8748_BOOL);
constraint array_bool_and([aux8744_BOOL,aux8745_BOOL,w_00004_00013_BOOL,aux8747_BOOL,aux8748_BOOL],aux8749_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux8750_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux8751_BOOL);
constraint int_lin_eq([-1,1,1],[aux8752,4,s_00014],0);
constraint int_lt_reif(s_00004,aux8752,aux8753_BOOL);
constraint int_le_reif(s_00014, s_00004,aux8754_BOOL);
constraint array_bool_and([aux8750_BOOL,aux8751_BOOL,w_00004_00014_BOOL,aux8753_BOOL,aux8754_BOOL],aux8755_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux8756_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux8757_BOOL);
constraint int_lin_eq([-1,1,1],[aux8758,2,s_00015],0);
constraint int_lt_reif(s_00004,aux8758,aux8759_BOOL);
constraint int_le_reif(s_00015, s_00004,aux8760_BOOL);
constraint array_bool_and([aux8756_BOOL,aux8757_BOOL,w_00004_00015_BOOL,aux8759_BOOL,aux8760_BOOL],aux8761_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux8762_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux8763_BOOL);
constraint int_lin_eq([-1,1,1],[aux8764,3,s_00016],0);
constraint int_lt_reif(s_00004,aux8764,aux8765_BOOL);
constraint int_le_reif(s_00016, s_00004,aux8766_BOOL);
constraint array_bool_and([aux8762_BOOL,aux8763_BOOL,w_00004_00016_BOOL,aux8765_BOOL,aux8766_BOOL],aux8767_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux8768_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux8769_BOOL);
constraint int_lin_eq([-1,1,1],[aux8770,1,s_00017],0);
constraint int_lt_reif(s_00004,aux8770,aux8771_BOOL);
constraint int_le_reif(s_00017, s_00004,aux8772_BOOL);
constraint array_bool_and([aux8768_BOOL,aux8769_BOOL,w_00004_00017_BOOL,aux8771_BOOL,aux8772_BOOL],aux8773_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux8774_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux8775_BOOL);
constraint int_lin_eq([-1,1,1],[aux8776,3,s_00018],0);
constraint int_lt_reif(s_00004,aux8776,aux8777_BOOL);
constraint int_le_reif(s_00018, s_00004,aux8778_BOOL);
constraint array_bool_and([aux8774_BOOL,aux8775_BOOL,w_00004_00018_BOOL,aux8777_BOOL,aux8778_BOOL],aux8779_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux8780_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux8781_BOOL);
constraint int_lin_eq([-1,1,1],[aux8782,2,s_00019],0);
constraint int_lt_reif(s_00004,aux8782,aux8783_BOOL);
constraint int_le_reif(s_00019, s_00004,aux8784_BOOL);
constraint array_bool_and([aux8780_BOOL,aux8781_BOOL,w_00004_00019_BOOL,aux8783_BOOL,aux8784_BOOL],aux8785_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux8786_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux8787_BOOL);
constraint int_lin_eq([-1,1,1],[aux8788,3,s_00020],0);
constraint int_lt_reif(s_00004,aux8788,aux8789_BOOL);
constraint int_le_reif(s_00020, s_00004,aux8790_BOOL);
constraint array_bool_and([aux8786_BOOL,aux8787_BOOL,w_00004_00020_BOOL,aux8789_BOOL,aux8790_BOOL],aux8791_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux8677_INTEGER,aux8683_INTEGER,aux8689_INTEGER,aux8695_INTEGER,aux8701_INTEGER,aux8707_INTEGER,aux8713_INTEGER,aux8719_INTEGER,aux8725_INTEGER,aux8731_INTEGER,aux8737_INTEGER,aux8743_INTEGER,aux8749_INTEGER,aux8755_INTEGER,aux8761_INTEGER,aux8767_INTEGER,aux8773_INTEGER,aux8779_INTEGER,aux8785_INTEGER,aux8791_INTEGER,1],0,aux8792_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux8793_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux8794_BOOL);
constraint int_lin_eq([-1,1,1],[aux8795,1,s_00010],0);
constraint int_lt_reif(s_00012,aux8795,aux8796_BOOL);
constraint int_le_reif(s_00010, s_00012,aux8797_BOOL);
constraint array_bool_and([aux8793_BOOL,aux8794_BOOL,w_00004_00010_BOOL,aux8796_BOOL,aux8797_BOOL],aux8798_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux8799_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux8800_BOOL);
constraint int_lin_eq([-1,1,1],[aux8801,2,s_00011],0);
constraint int_lt_reif(s_00012,aux8801,aux8802_BOOL);
constraint int_le_reif(s_00011, s_00012,aux8803_BOOL);
constraint array_bool_and([aux8799_BOOL,aux8800_BOOL,w_00004_00011_BOOL,aux8802_BOOL,aux8803_BOOL],aux8804_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux8805_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux8806_BOOL);
constraint int_lin_eq([-1,1,1],[aux8807,1,s_00013],0);
constraint int_lt_reif(s_00012,aux8807,aux8808_BOOL);
constraint int_le_reif(s_00013, s_00012,aux8809_BOOL);
constraint array_bool_and([aux8805_BOOL,aux8806_BOOL,w_00004_00013_BOOL,aux8808_BOOL,aux8809_BOOL],aux8810_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux8811_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux8812_BOOL);
constraint int_lin_eq([-1,1,1],[aux8813,4,s_00014],0);
constraint int_lt_reif(s_00012,aux8813,aux8814_BOOL);
constraint int_le_reif(s_00014, s_00012,aux8815_BOOL);
constraint array_bool_and([aux8811_BOOL,aux8812_BOOL,w_00004_00014_BOOL,aux8814_BOOL,aux8815_BOOL],aux8816_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux8817_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux8818_BOOL);
constraint int_lin_eq([-1,1,1],[aux8819,2,s_00015],0);
constraint int_lt_reif(s_00012,aux8819,aux8820_BOOL);
constraint int_le_reif(s_00015, s_00012,aux8821_BOOL);
constraint array_bool_and([aux8817_BOOL,aux8818_BOOL,w_00004_00015_BOOL,aux8820_BOOL,aux8821_BOOL],aux8822_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux8823_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux8824_BOOL);
constraint int_lin_eq([-1,1,1],[aux8825,3,s_00016],0);
constraint int_lt_reif(s_00012,aux8825,aux8826_BOOL);
constraint int_le_reif(s_00016, s_00012,aux8827_BOOL);
constraint array_bool_and([aux8823_BOOL,aux8824_BOOL,w_00004_00016_BOOL,aux8826_BOOL,aux8827_BOOL],aux8828_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux8829_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux8830_BOOL);
constraint int_lin_eq([-1,1,1],[aux8831,1,s_00017],0);
constraint int_lt_reif(s_00012,aux8831,aux8832_BOOL);
constraint int_le_reif(s_00017, s_00012,aux8833_BOOL);
constraint array_bool_and([aux8829_BOOL,aux8830_BOOL,w_00004_00017_BOOL,aux8832_BOOL,aux8833_BOOL],aux8834_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux8835_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux8836_BOOL);
constraint int_lin_eq([-1,1,1],[aux8837,3,s_00018],0);
constraint int_lt_reif(s_00012,aux8837,aux8838_BOOL);
constraint int_le_reif(s_00018, s_00012,aux8839_BOOL);
constraint array_bool_and([aux8835_BOOL,aux8836_BOOL,w_00004_00018_BOOL,aux8838_BOOL,aux8839_BOOL],aux8840_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux8841_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux8842_BOOL);
constraint int_lin_eq([-1,1,1],[aux8843,2,s_00019],0);
constraint int_lt_reif(s_00012,aux8843,aux8844_BOOL);
constraint int_le_reif(s_00019, s_00012,aux8845_BOOL);
constraint array_bool_and([aux8841_BOOL,aux8842_BOOL,w_00004_00019_BOOL,aux8844_BOOL,aux8845_BOOL],aux8846_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux8847_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux8848_BOOL);
constraint int_lin_eq([-1,1,1],[aux8849,3,s_00020],0);
constraint int_lt_reif(s_00012,aux8849,aux8850_BOOL);
constraint int_le_reif(s_00020, s_00012,aux8851_BOOL);
constraint array_bool_and([aux8847_BOOL,aux8848_BOOL,w_00004_00020_BOOL,aux8850_BOOL,aux8851_BOOL],aux8852_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux8853_BOOL);
constraint int_lin_eq([-1,1,1],[aux8854,2,s_00012],0);
constraint int_lt_reif(s_00012,aux8854,aux8855_BOOL);
constraint array_bool_and([aux8853_BOOL,w_00004_00012_BOOL,aux8855_BOOL],aux8856_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux8857_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux8858_BOOL);
constraint int_lin_eq([-1,1,1],[aux8859,1,s_00001],0);
constraint int_lt_reif(s_00012,aux8859,aux8860_BOOL);
constraint int_le_reif(s_00001, s_00012,aux8861_BOOL);
constraint array_bool_and([aux8857_BOOL,aux8858_BOOL,w_00004_00001_BOOL,aux8860_BOOL,aux8861_BOOL],aux8862_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux8863_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux8864_BOOL);
constraint int_lin_eq([-1,1,1],[aux8865,2,s_00002],0);
constraint int_lt_reif(s_00012,aux8865,aux8866_BOOL);
constraint int_le_reif(s_00002, s_00012,aux8867_BOOL);
constraint array_bool_and([aux8863_BOOL,aux8864_BOOL,w_00004_00002_BOOL,aux8866_BOOL,aux8867_BOOL],aux8868_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux8869_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux8870_BOOL);
constraint int_lin_eq([-1,1,1],[aux8871,3,s_00003],0);
constraint int_lt_reif(s_00012,aux8871,aux8872_BOOL);
constraint int_le_reif(s_00003, s_00012,aux8873_BOOL);
constraint array_bool_and([aux8869_BOOL,aux8870_BOOL,w_00004_00003_BOOL,aux8872_BOOL,aux8873_BOOL],aux8874_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux8875_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux8876_BOOL);
constraint int_lin_eq([-1,1,1],[aux8877,2,s_00004],0);
constraint int_lt_reif(s_00012,aux8877,aux8878_BOOL);
constraint int_le_reif(s_00004, s_00012,aux8879_BOOL);
constraint array_bool_and([aux8875_BOOL,aux8876_BOOL,w_00004_00004_BOOL,aux8878_BOOL,aux8879_BOOL],aux8880_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux8881_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux8882_BOOL);
constraint int_lin_eq([-1,1,1],[aux8883,2,s_00005],0);
constraint int_lt_reif(s_00012,aux8883,aux8884_BOOL);
constraint int_le_reif(s_00005, s_00012,aux8885_BOOL);
constraint array_bool_and([aux8881_BOOL,aux8882_BOOL,w_00004_00005_BOOL,aux8884_BOOL,aux8885_BOOL],aux8886_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux8887_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux8888_BOOL);
constraint int_lin_eq([-1,1,1],[aux8889,3,s_00006],0);
constraint int_lt_reif(s_00012,aux8889,aux8890_BOOL);
constraint int_le_reif(s_00006, s_00012,aux8891_BOOL);
constraint array_bool_and([aux8887_BOOL,aux8888_BOOL,w_00004_00006_BOOL,aux8890_BOOL,aux8891_BOOL],aux8892_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux8893_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux8894_BOOL);
constraint int_lin_eq([-1,1,1],[aux8895,2,s_00007],0);
constraint int_lt_reif(s_00012,aux8895,aux8896_BOOL);
constraint int_le_reif(s_00007, s_00012,aux8897_BOOL);
constraint array_bool_and([aux8893_BOOL,aux8894_BOOL,w_00004_00007_BOOL,aux8896_BOOL,aux8897_BOOL],aux8898_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux8899_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux8900_BOOL);
constraint int_lin_eq([-1,1,1],[aux8901,1,s_00008],0);
constraint int_lt_reif(s_00012,aux8901,aux8902_BOOL);
constraint int_le_reif(s_00008, s_00012,aux8903_BOOL);
constraint array_bool_and([aux8899_BOOL,aux8900_BOOL,w_00004_00008_BOOL,aux8902_BOOL,aux8903_BOOL],aux8904_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux8905_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux8906_BOOL);
constraint int_lin_eq([-1,1,1],[aux8907,2,s_00009],0);
constraint int_lt_reif(s_00012,aux8907,aux8908_BOOL);
constraint int_le_reif(s_00009, s_00012,aux8909_BOOL);
constraint array_bool_and([aux8905_BOOL,aux8906_BOOL,w_00004_00009_BOOL,aux8908_BOOL,aux8909_BOOL],aux8910_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux8798_INTEGER,aux8804_INTEGER,aux8810_INTEGER,aux8816_INTEGER,aux8822_INTEGER,aux8828_INTEGER,aux8834_INTEGER,aux8840_INTEGER,aux8846_INTEGER,aux8852_INTEGER,aux8856_INTEGER,aux8862_INTEGER,aux8868_INTEGER,aux8874_INTEGER,aux8880_INTEGER,aux8886_INTEGER,aux8892_INTEGER,aux8898_INTEGER,aux8904_INTEGER,aux8910_INTEGER,1],0,aux8911_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux8912_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux8913_BOOL);
constraint int_lin_eq([-1,1,1],[aux8914,1,s_00010],0);
constraint int_lt_reif(s_00013,aux8914,aux8915_BOOL);
constraint int_le_reif(s_00010, s_00013,aux8916_BOOL);
constraint array_bool_and([aux8912_BOOL,aux8913_BOOL,w_00004_00010_BOOL,aux8915_BOOL,aux8916_BOOL],aux8917_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux8918_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux8919_BOOL);
constraint int_lin_eq([-1,1,1],[aux8920,2,s_00011],0);
constraint int_lt_reif(s_00013,aux8920,aux8921_BOOL);
constraint int_le_reif(s_00011, s_00013,aux8922_BOOL);
constraint array_bool_and([aux8918_BOOL,aux8919_BOOL,w_00004_00011_BOOL,aux8921_BOOL,aux8922_BOOL],aux8923_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux8924_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux8925_BOOL);
constraint int_lin_eq([-1,1,1],[aux8926,2,s_00012],0);
constraint int_lt_reif(s_00013,aux8926,aux8927_BOOL);
constraint int_le_reif(s_00012, s_00013,aux8928_BOOL);
constraint array_bool_and([aux8924_BOOL,aux8925_BOOL,w_00004_00012_BOOL,aux8927_BOOL,aux8928_BOOL],aux8929_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux8930_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux8931_BOOL);
constraint int_lin_eq([-1,1,1],[aux8932,4,s_00014],0);
constraint int_lt_reif(s_00013,aux8932,aux8933_BOOL);
constraint int_le_reif(s_00014, s_00013,aux8934_BOOL);
constraint array_bool_and([aux8930_BOOL,aux8931_BOOL,w_00004_00014_BOOL,aux8933_BOOL,aux8934_BOOL],aux8935_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux8936_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux8937_BOOL);
constraint int_lin_eq([-1,1,1],[aux8938,2,s_00015],0);
constraint int_lt_reif(s_00013,aux8938,aux8939_BOOL);
constraint int_le_reif(s_00015, s_00013,aux8940_BOOL);
constraint array_bool_and([aux8936_BOOL,aux8937_BOOL,w_00004_00015_BOOL,aux8939_BOOL,aux8940_BOOL],aux8941_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux8942_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux8943_BOOL);
constraint int_lin_eq([-1,1,1],[aux8944,3,s_00016],0);
constraint int_lt_reif(s_00013,aux8944,aux8945_BOOL);
constraint int_le_reif(s_00016, s_00013,aux8946_BOOL);
constraint array_bool_and([aux8942_BOOL,aux8943_BOOL,w_00004_00016_BOOL,aux8945_BOOL,aux8946_BOOL],aux8947_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux8948_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux8949_BOOL);
constraint int_lin_eq([-1,1,1],[aux8950,1,s_00017],0);
constraint int_lt_reif(s_00013,aux8950,aux8951_BOOL);
constraint int_le_reif(s_00017, s_00013,aux8952_BOOL);
constraint array_bool_and([aux8948_BOOL,aux8949_BOOL,w_00004_00017_BOOL,aux8951_BOOL,aux8952_BOOL],aux8953_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux8954_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux8955_BOOL);
constraint int_lin_eq([-1,1,1],[aux8956,3,s_00018],0);
constraint int_lt_reif(s_00013,aux8956,aux8957_BOOL);
constraint int_le_reif(s_00018, s_00013,aux8958_BOOL);
constraint array_bool_and([aux8954_BOOL,aux8955_BOOL,w_00004_00018_BOOL,aux8957_BOOL,aux8958_BOOL],aux8959_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux8960_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux8961_BOOL);
constraint int_lin_eq([-1,1,1],[aux8962,2,s_00019],0);
constraint int_lt_reif(s_00013,aux8962,aux8963_BOOL);
constraint int_le_reif(s_00019, s_00013,aux8964_BOOL);
constraint array_bool_and([aux8960_BOOL,aux8961_BOOL,w_00004_00019_BOOL,aux8963_BOOL,aux8964_BOOL],aux8965_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux8966_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux8967_BOOL);
constraint int_lin_eq([-1,1,1],[aux8968,3,s_00020],0);
constraint int_lt_reif(s_00013,aux8968,aux8969_BOOL);
constraint int_le_reif(s_00020, s_00013,aux8970_BOOL);
constraint array_bool_and([aux8966_BOOL,aux8967_BOOL,w_00004_00020_BOOL,aux8969_BOOL,aux8970_BOOL],aux8971_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux8972_BOOL);
constraint int_lin_eq([-1,1,1],[aux8973,1,s_00013],0);
constraint int_lt_reif(s_00013,aux8973,aux8974_BOOL);
constraint array_bool_and([aux8972_BOOL,w_00004_00013_BOOL,aux8974_BOOL],aux8975_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux8976_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux8977_BOOL);
constraint int_lin_eq([-1,1,1],[aux8978,1,s_00001],0);
constraint int_lt_reif(s_00013,aux8978,aux8979_BOOL);
constraint int_le_reif(s_00001, s_00013,aux8980_BOOL);
constraint array_bool_and([aux8976_BOOL,aux8977_BOOL,w_00004_00001_BOOL,aux8979_BOOL,aux8980_BOOL],aux8981_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux8982_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux8983_BOOL);
constraint int_lin_eq([-1,1,1],[aux8984,2,s_00002],0);
constraint int_lt_reif(s_00013,aux8984,aux8985_BOOL);
constraint int_le_reif(s_00002, s_00013,aux8986_BOOL);
constraint array_bool_and([aux8982_BOOL,aux8983_BOOL,w_00004_00002_BOOL,aux8985_BOOL,aux8986_BOOL],aux8987_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux8988_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux8989_BOOL);
constraint int_lin_eq([-1,1,1],[aux8990,3,s_00003],0);
constraint int_lt_reif(s_00013,aux8990,aux8991_BOOL);
constraint int_le_reif(s_00003, s_00013,aux8992_BOOL);
constraint array_bool_and([aux8988_BOOL,aux8989_BOOL,w_00004_00003_BOOL,aux8991_BOOL,aux8992_BOOL],aux8993_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux8994_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux8995_BOOL);
constraint int_lin_eq([-1,1,1],[aux8996,2,s_00004],0);
constraint int_lt_reif(s_00013,aux8996,aux8997_BOOL);
constraint int_le_reif(s_00004, s_00013,aux8998_BOOL);
constraint array_bool_and([aux8994_BOOL,aux8995_BOOL,w_00004_00004_BOOL,aux8997_BOOL,aux8998_BOOL],aux8999_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux9000_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux9001_BOOL);
constraint int_lin_eq([-1,1,1],[aux9002,2,s_00005],0);
constraint int_lt_reif(s_00013,aux9002,aux9003_BOOL);
constraint int_le_reif(s_00005, s_00013,aux9004_BOOL);
constraint array_bool_and([aux9000_BOOL,aux9001_BOOL,w_00004_00005_BOOL,aux9003_BOOL,aux9004_BOOL],aux9005_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9006_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux9007_BOOL);
constraint int_lin_eq([-1,1,1],[aux9008,3,s_00006],0);
constraint int_lt_reif(s_00013,aux9008,aux9009_BOOL);
constraint int_le_reif(s_00006, s_00013,aux9010_BOOL);
constraint array_bool_and([aux9006_BOOL,aux9007_BOOL,w_00004_00006_BOOL,aux9009_BOOL,aux9010_BOOL],aux9011_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux9012_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux9013_BOOL);
constraint int_lin_eq([-1,1,1],[aux9014,2,s_00007],0);
constraint int_lt_reif(s_00013,aux9014,aux9015_BOOL);
constraint int_le_reif(s_00007, s_00013,aux9016_BOOL);
constraint array_bool_and([aux9012_BOOL,aux9013_BOOL,w_00004_00007_BOOL,aux9015_BOOL,aux9016_BOOL],aux9017_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux9018_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux9019_BOOL);
constraint int_lin_eq([-1,1,1],[aux9020,1,s_00008],0);
constraint int_lt_reif(s_00013,aux9020,aux9021_BOOL);
constraint int_le_reif(s_00008, s_00013,aux9022_BOOL);
constraint array_bool_and([aux9018_BOOL,aux9019_BOOL,w_00004_00008_BOOL,aux9021_BOOL,aux9022_BOOL],aux9023_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux9024_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux9025_BOOL);
constraint int_lin_eq([-1,1,1],[aux9026,2,s_00009],0);
constraint int_lt_reif(s_00013,aux9026,aux9027_BOOL);
constraint int_le_reif(s_00009, s_00013,aux9028_BOOL);
constraint array_bool_and([aux9024_BOOL,aux9025_BOOL,w_00004_00009_BOOL,aux9027_BOOL,aux9028_BOOL],aux9029_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux8917_INTEGER,aux8923_INTEGER,aux8929_INTEGER,aux8935_INTEGER,aux8941_INTEGER,aux8947_INTEGER,aux8953_INTEGER,aux8959_INTEGER,aux8965_INTEGER,aux8971_INTEGER,aux8975_INTEGER,aux8981_INTEGER,aux8987_INTEGER,aux8993_INTEGER,aux8999_INTEGER,aux9005_INTEGER,aux9011_INTEGER,aux9017_INTEGER,aux9023_INTEGER,aux9029_INTEGER,1],0,aux9030_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux9031_BOOL);
constraint int_lin_eq([-1,1,1],[aux9032,2,s_00009],0);
constraint int_lt_reif(s_00009,aux9032,aux9033_BOOL);
constraint array_bool_and([aux9031_BOOL,w_00004_00009_BOOL,aux9033_BOOL],aux9034_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux9035_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux9036_BOOL);
constraint int_lin_eq([-1,1,1],[aux9037,1,s_00001],0);
constraint int_lt_reif(s_00009,aux9037,aux9038_BOOL);
constraint int_le_reif(s_00001, s_00009,aux9039_BOOL);
constraint array_bool_and([aux9035_BOOL,aux9036_BOOL,w_00004_00001_BOOL,aux9038_BOOL,aux9039_BOOL],aux9040_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux9041_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux9042_BOOL);
constraint int_lin_eq([-1,1,1],[aux9043,2,s_00002],0);
constraint int_lt_reif(s_00009,aux9043,aux9044_BOOL);
constraint int_le_reif(s_00002, s_00009,aux9045_BOOL);
constraint array_bool_and([aux9041_BOOL,aux9042_BOOL,w_00004_00002_BOOL,aux9044_BOOL,aux9045_BOOL],aux9046_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux9047_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux9048_BOOL);
constraint int_lin_eq([-1,1,1],[aux9049,3,s_00003],0);
constraint int_lt_reif(s_00009,aux9049,aux9050_BOOL);
constraint int_le_reif(s_00003, s_00009,aux9051_BOOL);
constraint array_bool_and([aux9047_BOOL,aux9048_BOOL,w_00004_00003_BOOL,aux9050_BOOL,aux9051_BOOL],aux9052_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux9053_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux9054_BOOL);
constraint int_lin_eq([-1,1,1],[aux9055,2,s_00004],0);
constraint int_lt_reif(s_00009,aux9055,aux9056_BOOL);
constraint int_le_reif(s_00004, s_00009,aux9057_BOOL);
constraint array_bool_and([aux9053_BOOL,aux9054_BOOL,w_00004_00004_BOOL,aux9056_BOOL,aux9057_BOOL],aux9058_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux9059_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux9060_BOOL);
constraint int_lin_eq([-1,1,1],[aux9061,2,s_00005],0);
constraint int_lt_reif(s_00009,aux9061,aux9062_BOOL);
constraint int_le_reif(s_00005, s_00009,aux9063_BOOL);
constraint array_bool_and([aux9059_BOOL,aux9060_BOOL,w_00004_00005_BOOL,aux9062_BOOL,aux9063_BOOL],aux9064_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9065_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux9066_BOOL);
constraint int_lin_eq([-1,1,1],[aux9067,3,s_00006],0);
constraint int_lt_reif(s_00009,aux9067,aux9068_BOOL);
constraint int_le_reif(s_00006, s_00009,aux9069_BOOL);
constraint array_bool_and([aux9065_BOOL,aux9066_BOOL,w_00004_00006_BOOL,aux9068_BOOL,aux9069_BOOL],aux9070_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux9071_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux9072_BOOL);
constraint int_lin_eq([-1,1,1],[aux9073,2,s_00007],0);
constraint int_lt_reif(s_00009,aux9073,aux9074_BOOL);
constraint int_le_reif(s_00007, s_00009,aux9075_BOOL);
constraint array_bool_and([aux9071_BOOL,aux9072_BOOL,w_00004_00007_BOOL,aux9074_BOOL,aux9075_BOOL],aux9076_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux9077_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux9078_BOOL);
constraint int_lin_eq([-1,1,1],[aux9079,1,s_00008],0);
constraint int_lt_reif(s_00009,aux9079,aux9080_BOOL);
constraint int_le_reif(s_00008, s_00009,aux9081_BOOL);
constraint array_bool_and([aux9077_BOOL,aux9078_BOOL,w_00004_00008_BOOL,aux9080_BOOL,aux9081_BOOL],aux9082_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux9083_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux9084_BOOL);
constraint int_lin_eq([-1,1,1],[aux9085,1,s_00010],0);
constraint int_lt_reif(s_00009,aux9085,aux9086_BOOL);
constraint int_le_reif(s_00010, s_00009,aux9087_BOOL);
constraint array_bool_and([aux9083_BOOL,aux9084_BOOL,w_00004_00010_BOOL,aux9086_BOOL,aux9087_BOOL],aux9088_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux9089_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux9090_BOOL);
constraint int_lin_eq([-1,1,1],[aux9091,2,s_00011],0);
constraint int_lt_reif(s_00009,aux9091,aux9092_BOOL);
constraint int_le_reif(s_00011, s_00009,aux9093_BOOL);
constraint array_bool_and([aux9089_BOOL,aux9090_BOOL,w_00004_00011_BOOL,aux9092_BOOL,aux9093_BOOL],aux9094_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux9095_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux9096_BOOL);
constraint int_lin_eq([-1,1,1],[aux9097,2,s_00012],0);
constraint int_lt_reif(s_00009,aux9097,aux9098_BOOL);
constraint int_le_reif(s_00012, s_00009,aux9099_BOOL);
constraint array_bool_and([aux9095_BOOL,aux9096_BOOL,w_00004_00012_BOOL,aux9098_BOOL,aux9099_BOOL],aux9100_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux9101_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux9102_BOOL);
constraint int_lin_eq([-1,1,1],[aux9103,1,s_00013],0);
constraint int_lt_reif(s_00009,aux9103,aux9104_BOOL);
constraint int_le_reif(s_00013, s_00009,aux9105_BOOL);
constraint array_bool_and([aux9101_BOOL,aux9102_BOOL,w_00004_00013_BOOL,aux9104_BOOL,aux9105_BOOL],aux9106_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux9107_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux9108_BOOL);
constraint int_lin_eq([-1,1,1],[aux9109,4,s_00014],0);
constraint int_lt_reif(s_00009,aux9109,aux9110_BOOL);
constraint int_le_reif(s_00014, s_00009,aux9111_BOOL);
constraint array_bool_and([aux9107_BOOL,aux9108_BOOL,w_00004_00014_BOOL,aux9110_BOOL,aux9111_BOOL],aux9112_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux9113_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux9114_BOOL);
constraint int_lin_eq([-1,1,1],[aux9115,2,s_00015],0);
constraint int_lt_reif(s_00009,aux9115,aux9116_BOOL);
constraint int_le_reif(s_00015, s_00009,aux9117_BOOL);
constraint array_bool_and([aux9113_BOOL,aux9114_BOOL,w_00004_00015_BOOL,aux9116_BOOL,aux9117_BOOL],aux9118_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux9119_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux9120_BOOL);
constraint int_lin_eq([-1,1,1],[aux9121,3,s_00016],0);
constraint int_lt_reif(s_00009,aux9121,aux9122_BOOL);
constraint int_le_reif(s_00016, s_00009,aux9123_BOOL);
constraint array_bool_and([aux9119_BOOL,aux9120_BOOL,w_00004_00016_BOOL,aux9122_BOOL,aux9123_BOOL],aux9124_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux9125_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux9126_BOOL);
constraint int_lin_eq([-1,1,1],[aux9127,1,s_00017],0);
constraint int_lt_reif(s_00009,aux9127,aux9128_BOOL);
constraint int_le_reif(s_00017, s_00009,aux9129_BOOL);
constraint array_bool_and([aux9125_BOOL,aux9126_BOOL,w_00004_00017_BOOL,aux9128_BOOL,aux9129_BOOL],aux9130_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux9131_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9132_BOOL);
constraint int_lin_eq([-1,1,1],[aux9133,3,s_00018],0);
constraint int_lt_reif(s_00009,aux9133,aux9134_BOOL);
constraint int_le_reif(s_00018, s_00009,aux9135_BOOL);
constraint array_bool_and([aux9131_BOOL,aux9132_BOOL,w_00004_00018_BOOL,aux9134_BOOL,aux9135_BOOL],aux9136_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux9137_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9138_BOOL);
constraint int_lin_eq([-1,1,1],[aux9139,2,s_00019],0);
constraint int_lt_reif(s_00009,aux9139,aux9140_BOOL);
constraint int_le_reif(s_00019, s_00009,aux9141_BOOL);
constraint array_bool_and([aux9137_BOOL,aux9138_BOOL,w_00004_00019_BOOL,aux9140_BOOL,aux9141_BOOL],aux9142_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux9143_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9144_BOOL);
constraint int_lin_eq([-1,1,1],[aux9145,3,s_00020],0);
constraint int_lt_reif(s_00009,aux9145,aux9146_BOOL);
constraint int_le_reif(s_00020, s_00009,aux9147_BOOL);
constraint array_bool_and([aux9143_BOOL,aux9144_BOOL,w_00004_00020_BOOL,aux9146_BOOL,aux9147_BOOL],aux9148_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux9034_INTEGER,aux9040_INTEGER,aux9046_INTEGER,aux9052_INTEGER,aux9058_INTEGER,aux9064_INTEGER,aux9070_INTEGER,aux9076_INTEGER,aux9082_INTEGER,aux9088_INTEGER,aux9094_INTEGER,aux9100_INTEGER,aux9106_INTEGER,aux9112_INTEGER,aux9118_INTEGER,aux9124_INTEGER,aux9130_INTEGER,aux9136_INTEGER,aux9142_INTEGER,aux9148_INTEGER,1],0,aux9149_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux9150_BOOL);
constraint int_lin_eq([-1,1,1],[aux9151,1,s_00001],0);
constraint int_lt_reif(s_00001,aux9151,aux9152_BOOL);
constraint array_bool_and([aux9150_BOOL,w_00004_00001_BOOL,aux9152_BOOL],aux9153_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux9154_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux9155_BOOL);
constraint int_lin_eq([-1,1,1],[aux9156,2,s_00002],0);
constraint int_lt_reif(s_00001,aux9156,aux9157_BOOL);
constraint int_le_reif(s_00002, s_00001,aux9158_BOOL);
constraint array_bool_and([aux9154_BOOL,aux9155_BOOL,w_00004_00002_BOOL,aux9157_BOOL,aux9158_BOOL],aux9159_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux9160_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux9161_BOOL);
constraint int_lin_eq([-1,1,1],[aux9162,3,s_00003],0);
constraint int_lt_reif(s_00001,aux9162,aux9163_BOOL);
constraint int_le_reif(s_00003, s_00001,aux9164_BOOL);
constraint array_bool_and([aux9160_BOOL,aux9161_BOOL,w_00004_00003_BOOL,aux9163_BOOL,aux9164_BOOL],aux9165_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux9166_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux9167_BOOL);
constraint int_lin_eq([-1,1,1],[aux9168,2,s_00004],0);
constraint int_lt_reif(s_00001,aux9168,aux9169_BOOL);
constraint int_le_reif(s_00004, s_00001,aux9170_BOOL);
constraint array_bool_and([aux9166_BOOL,aux9167_BOOL,w_00004_00004_BOOL,aux9169_BOOL,aux9170_BOOL],aux9171_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux9172_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux9173_BOOL);
constraint int_lin_eq([-1,1,1],[aux9174,2,s_00005],0);
constraint int_lt_reif(s_00001,aux9174,aux9175_BOOL);
constraint int_le_reif(s_00005, s_00001,aux9176_BOOL);
constraint array_bool_and([aux9172_BOOL,aux9173_BOOL,w_00004_00005_BOOL,aux9175_BOOL,aux9176_BOOL],aux9177_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux9178_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9179_BOOL);
constraint int_lin_eq([-1,1,1],[aux9180,3,s_00006],0);
constraint int_lt_reif(s_00001,aux9180,aux9181_BOOL);
constraint int_le_reif(s_00006, s_00001,aux9182_BOOL);
constraint array_bool_and([aux9178_BOOL,aux9179_BOOL,w_00004_00006_BOOL,aux9181_BOOL,aux9182_BOOL],aux9183_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux9184_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux9185_BOOL);
constraint int_lin_eq([-1,1,1],[aux9186,2,s_00007],0);
constraint int_lt_reif(s_00001,aux9186,aux9187_BOOL);
constraint int_le_reif(s_00007, s_00001,aux9188_BOOL);
constraint array_bool_and([aux9184_BOOL,aux9185_BOOL,w_00004_00007_BOOL,aux9187_BOOL,aux9188_BOOL],aux9189_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux9190_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux9191_BOOL);
constraint int_lin_eq([-1,1,1],[aux9192,1,s_00008],0);
constraint int_lt_reif(s_00001,aux9192,aux9193_BOOL);
constraint int_le_reif(s_00008, s_00001,aux9194_BOOL);
constraint array_bool_and([aux9190_BOOL,aux9191_BOOL,w_00004_00008_BOOL,aux9193_BOOL,aux9194_BOOL],aux9195_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux9196_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux9197_BOOL);
constraint int_lin_eq([-1,1,1],[aux9198,2,s_00009],0);
constraint int_lt_reif(s_00001,aux9198,aux9199_BOOL);
constraint int_le_reif(s_00009, s_00001,aux9200_BOOL);
constraint array_bool_and([aux9196_BOOL,aux9197_BOOL,w_00004_00009_BOOL,aux9199_BOOL,aux9200_BOOL],aux9201_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux9202_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux9203_BOOL);
constraint int_lin_eq([-1,1,1],[aux9204,1,s_00010],0);
constraint int_lt_reif(s_00001,aux9204,aux9205_BOOL);
constraint int_le_reif(s_00010, s_00001,aux9206_BOOL);
constraint array_bool_and([aux9202_BOOL,aux9203_BOOL,w_00004_00010_BOOL,aux9205_BOOL,aux9206_BOOL],aux9207_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux9208_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux9209_BOOL);
constraint int_lin_eq([-1,1,1],[aux9210,2,s_00011],0);
constraint int_lt_reif(s_00001,aux9210,aux9211_BOOL);
constraint int_le_reif(s_00011, s_00001,aux9212_BOOL);
constraint array_bool_and([aux9208_BOOL,aux9209_BOOL,w_00004_00011_BOOL,aux9211_BOOL,aux9212_BOOL],aux9213_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux9214_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux9215_BOOL);
constraint int_lin_eq([-1,1,1],[aux9216,2,s_00012],0);
constraint int_lt_reif(s_00001,aux9216,aux9217_BOOL);
constraint int_le_reif(s_00012, s_00001,aux9218_BOOL);
constraint array_bool_and([aux9214_BOOL,aux9215_BOOL,w_00004_00012_BOOL,aux9217_BOOL,aux9218_BOOL],aux9219_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux9220_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux9221_BOOL);
constraint int_lin_eq([-1,1,1],[aux9222,1,s_00013],0);
constraint int_lt_reif(s_00001,aux9222,aux9223_BOOL);
constraint int_le_reif(s_00013, s_00001,aux9224_BOOL);
constraint array_bool_and([aux9220_BOOL,aux9221_BOOL,w_00004_00013_BOOL,aux9223_BOOL,aux9224_BOOL],aux9225_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux9226_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux9227_BOOL);
constraint int_lin_eq([-1,1,1],[aux9228,4,s_00014],0);
constraint int_lt_reif(s_00001,aux9228,aux9229_BOOL);
constraint int_le_reif(s_00014, s_00001,aux9230_BOOL);
constraint array_bool_and([aux9226_BOOL,aux9227_BOOL,w_00004_00014_BOOL,aux9229_BOOL,aux9230_BOOL],aux9231_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux9232_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux9233_BOOL);
constraint int_lin_eq([-1,1,1],[aux9234,2,s_00015],0);
constraint int_lt_reif(s_00001,aux9234,aux9235_BOOL);
constraint int_le_reif(s_00015, s_00001,aux9236_BOOL);
constraint array_bool_and([aux9232_BOOL,aux9233_BOOL,w_00004_00015_BOOL,aux9235_BOOL,aux9236_BOOL],aux9237_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux9238_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux9239_BOOL);
constraint int_lin_eq([-1,1,1],[aux9240,3,s_00016],0);
constraint int_lt_reif(s_00001,aux9240,aux9241_BOOL);
constraint int_le_reif(s_00016, s_00001,aux9242_BOOL);
constraint array_bool_and([aux9238_BOOL,aux9239_BOOL,w_00004_00016_BOOL,aux9241_BOOL,aux9242_BOOL],aux9243_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux9244_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux9245_BOOL);
constraint int_lin_eq([-1,1,1],[aux9246,1,s_00017],0);
constraint int_lt_reif(s_00001,aux9246,aux9247_BOOL);
constraint int_le_reif(s_00017, s_00001,aux9248_BOOL);
constraint array_bool_and([aux9244_BOOL,aux9245_BOOL,w_00004_00017_BOOL,aux9247_BOOL,aux9248_BOOL],aux9249_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux9250_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9251_BOOL);
constraint int_lin_eq([-1,1,1],[aux9252,3,s_00018],0);
constraint int_lt_reif(s_00001,aux9252,aux9253_BOOL);
constraint int_le_reif(s_00018, s_00001,aux9254_BOOL);
constraint array_bool_and([aux9250_BOOL,aux9251_BOOL,w_00004_00018_BOOL,aux9253_BOOL,aux9254_BOOL],aux9255_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux9256_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9257_BOOL);
constraint int_lin_eq([-1,1,1],[aux9258,2,s_00019],0);
constraint int_lt_reif(s_00001,aux9258,aux9259_BOOL);
constraint int_le_reif(s_00019, s_00001,aux9260_BOOL);
constraint array_bool_and([aux9256_BOOL,aux9257_BOOL,w_00004_00019_BOOL,aux9259_BOOL,aux9260_BOOL],aux9261_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux9262_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9263_BOOL);
constraint int_lin_eq([-1,1,1],[aux9264,3,s_00020],0);
constraint int_lt_reif(s_00001,aux9264,aux9265_BOOL);
constraint int_le_reif(s_00020, s_00001,aux9266_BOOL);
constraint array_bool_and([aux9262_BOOL,aux9263_BOOL,w_00004_00020_BOOL,aux9265_BOOL,aux9266_BOOL],aux9267_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux9153_INTEGER,aux9159_INTEGER,aux9165_INTEGER,aux9171_INTEGER,aux9177_INTEGER,aux9183_INTEGER,aux9189_INTEGER,aux9195_INTEGER,aux9201_INTEGER,aux9207_INTEGER,aux9213_INTEGER,aux9219_INTEGER,aux9225_INTEGER,aux9231_INTEGER,aux9237_INTEGER,aux9243_INTEGER,aux9249_INTEGER,aux9255_INTEGER,aux9261_INTEGER,aux9267_INTEGER,1],0,aux9268_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux9269_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9270_BOOL);
constraint int_lin_eq([-1,1,1],[aux9271,1,s_00010],0);
constraint int_lt_reif(s_00020,aux9271,aux9272_BOOL);
constraint int_le_reif(s_00010, s_00020,aux9273_BOOL);
constraint array_bool_and([aux9269_BOOL,aux9270_BOOL,w_00004_00010_BOOL,aux9272_BOOL,aux9273_BOOL],aux9274_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux9275_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9276_BOOL);
constraint int_lin_eq([-1,1,1],[aux9277,2,s_00011],0);
constraint int_lt_reif(s_00020,aux9277,aux9278_BOOL);
constraint int_le_reif(s_00011, s_00020,aux9279_BOOL);
constraint array_bool_and([aux9275_BOOL,aux9276_BOOL,w_00004_00011_BOOL,aux9278_BOOL,aux9279_BOOL],aux9280_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux9281_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9282_BOOL);
constraint int_lin_eq([-1,1,1],[aux9283,2,s_00012],0);
constraint int_lt_reif(s_00020,aux9283,aux9284_BOOL);
constraint int_le_reif(s_00012, s_00020,aux9285_BOOL);
constraint array_bool_and([aux9281_BOOL,aux9282_BOOL,w_00004_00012_BOOL,aux9284_BOOL,aux9285_BOOL],aux9286_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux9287_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9288_BOOL);
constraint int_lin_eq([-1,1,1],[aux9289,1,s_00013],0);
constraint int_lt_reif(s_00020,aux9289,aux9290_BOOL);
constraint int_le_reif(s_00013, s_00020,aux9291_BOOL);
constraint array_bool_and([aux9287_BOOL,aux9288_BOOL,w_00004_00013_BOOL,aux9290_BOOL,aux9291_BOOL],aux9292_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux9293_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9294_BOOL);
constraint int_lin_eq([-1,1,1],[aux9295,4,s_00014],0);
constraint int_lt_reif(s_00020,aux9295,aux9296_BOOL);
constraint int_le_reif(s_00014, s_00020,aux9297_BOOL);
constraint array_bool_and([aux9293_BOOL,aux9294_BOOL,w_00004_00014_BOOL,aux9296_BOOL,aux9297_BOOL],aux9298_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux9299_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9300_BOOL);
constraint int_lin_eq([-1,1,1],[aux9301,2,s_00015],0);
constraint int_lt_reif(s_00020,aux9301,aux9302_BOOL);
constraint int_le_reif(s_00015, s_00020,aux9303_BOOL);
constraint array_bool_and([aux9299_BOOL,aux9300_BOOL,w_00004_00015_BOOL,aux9302_BOOL,aux9303_BOOL],aux9304_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux9305_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9306_BOOL);
constraint int_lin_eq([-1,1,1],[aux9307,3,s_00016],0);
constraint int_lt_reif(s_00020,aux9307,aux9308_BOOL);
constraint int_le_reif(s_00016, s_00020,aux9309_BOOL);
constraint array_bool_and([aux9305_BOOL,aux9306_BOOL,w_00004_00016_BOOL,aux9308_BOOL,aux9309_BOOL],aux9310_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux9311_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9312_BOOL);
constraint int_lin_eq([-1,1,1],[aux9313,1,s_00017],0);
constraint int_lt_reif(s_00020,aux9313,aux9314_BOOL);
constraint int_le_reif(s_00017, s_00020,aux9315_BOOL);
constraint array_bool_and([aux9311_BOOL,aux9312_BOOL,w_00004_00017_BOOL,aux9314_BOOL,aux9315_BOOL],aux9316_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9317_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9318_BOOL);
constraint int_lin_eq([-1,1,1],[aux9319,3,s_00018],0);
constraint int_lt_reif(s_00020,aux9319,aux9320_BOOL);
constraint int_le_reif(s_00018, s_00020,aux9321_BOOL);
constraint array_bool_and([aux9317_BOOL,aux9318_BOOL,w_00004_00018_BOOL,aux9320_BOOL,aux9321_BOOL],aux9322_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9323_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9324_BOOL);
constraint int_lin_eq([-1,1,1],[aux9325,2,s_00019],0);
constraint int_lt_reif(s_00020,aux9325,aux9326_BOOL);
constraint int_le_reif(s_00019, s_00020,aux9327_BOOL);
constraint array_bool_and([aux9323_BOOL,aux9324_BOOL,w_00004_00019_BOOL,aux9326_BOOL,aux9327_BOOL],aux9328_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9329_BOOL);
constraint int_lin_eq([-1,1,1],[aux9330,3,s_00020],0);
constraint int_lt_reif(s_00020,aux9330,aux9331_BOOL);
constraint array_bool_and([aux9329_BOOL,w_00004_00020_BOOL,aux9331_BOOL],aux9332_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux9333_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9334_BOOL);
constraint int_lin_eq([-1,1,1],[aux9335,1,s_00001],0);
constraint int_lt_reif(s_00020,aux9335,aux9336_BOOL);
constraint int_le_reif(s_00001, s_00020,aux9337_BOOL);
constraint array_bool_and([aux9333_BOOL,aux9334_BOOL,w_00004_00001_BOOL,aux9336_BOOL,aux9337_BOOL],aux9338_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux9339_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9340_BOOL);
constraint int_lin_eq([-1,1,1],[aux9341,2,s_00002],0);
constraint int_lt_reif(s_00020,aux9341,aux9342_BOOL);
constraint int_le_reif(s_00002, s_00020,aux9343_BOOL);
constraint array_bool_and([aux9339_BOOL,aux9340_BOOL,w_00004_00002_BOOL,aux9342_BOOL,aux9343_BOOL],aux9344_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux9345_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9346_BOOL);
constraint int_lin_eq([-1,1,1],[aux9347,3,s_00003],0);
constraint int_lt_reif(s_00020,aux9347,aux9348_BOOL);
constraint int_le_reif(s_00003, s_00020,aux9349_BOOL);
constraint array_bool_and([aux9345_BOOL,aux9346_BOOL,w_00004_00003_BOOL,aux9348_BOOL,aux9349_BOOL],aux9350_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux9351_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9352_BOOL);
constraint int_lin_eq([-1,1,1],[aux9353,2,s_00004],0);
constraint int_lt_reif(s_00020,aux9353,aux9354_BOOL);
constraint int_le_reif(s_00004, s_00020,aux9355_BOOL);
constraint array_bool_and([aux9351_BOOL,aux9352_BOOL,w_00004_00004_BOOL,aux9354_BOOL,aux9355_BOOL],aux9356_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux9357_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9358_BOOL);
constraint int_lin_eq([-1,1,1],[aux9359,2,s_00005],0);
constraint int_lt_reif(s_00020,aux9359,aux9360_BOOL);
constraint int_le_reif(s_00005, s_00020,aux9361_BOOL);
constraint array_bool_and([aux9357_BOOL,aux9358_BOOL,w_00004_00005_BOOL,aux9360_BOOL,aux9361_BOOL],aux9362_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9363_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9364_BOOL);
constraint int_lin_eq([-1,1,1],[aux9365,3,s_00006],0);
constraint int_lt_reif(s_00020,aux9365,aux9366_BOOL);
constraint int_le_reif(s_00006, s_00020,aux9367_BOOL);
constraint array_bool_and([aux9363_BOOL,aux9364_BOOL,w_00004_00006_BOOL,aux9366_BOOL,aux9367_BOOL],aux9368_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux9369_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9370_BOOL);
constraint int_lin_eq([-1,1,1],[aux9371,2,s_00007],0);
constraint int_lt_reif(s_00020,aux9371,aux9372_BOOL);
constraint int_le_reif(s_00007, s_00020,aux9373_BOOL);
constraint array_bool_and([aux9369_BOOL,aux9370_BOOL,w_00004_00007_BOOL,aux9372_BOOL,aux9373_BOOL],aux9374_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux9375_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9376_BOOL);
constraint int_lin_eq([-1,1,1],[aux9377,1,s_00008],0);
constraint int_lt_reif(s_00020,aux9377,aux9378_BOOL);
constraint int_le_reif(s_00008, s_00020,aux9379_BOOL);
constraint array_bool_and([aux9375_BOOL,aux9376_BOOL,w_00004_00008_BOOL,aux9378_BOOL,aux9379_BOOL],aux9380_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux9381_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9382_BOOL);
constraint int_lin_eq([-1,1,1],[aux9383,2,s_00009],0);
constraint int_lt_reif(s_00020,aux9383,aux9384_BOOL);
constraint int_le_reif(s_00009, s_00020,aux9385_BOOL);
constraint array_bool_and([aux9381_BOOL,aux9382_BOOL,w_00004_00009_BOOL,aux9384_BOOL,aux9385_BOOL],aux9386_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux9274_INTEGER,aux9280_INTEGER,aux9286_INTEGER,aux9292_INTEGER,aux9298_INTEGER,aux9304_INTEGER,aux9310_INTEGER,aux9316_INTEGER,aux9322_INTEGER,aux9328_INTEGER,aux9332_INTEGER,aux9338_INTEGER,aux9344_INTEGER,aux9350_INTEGER,aux9356_INTEGER,aux9362_INTEGER,aux9368_INTEGER,aux9374_INTEGER,aux9380_INTEGER,aux9386_INTEGER,1],0,aux9387_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux9388_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9389_BOOL);
constraint int_lin_eq([-1,1,1],[aux9390,1,s_00010],0);
constraint int_lt_reif(s_00018,aux9390,aux9391_BOOL);
constraint int_le_reif(s_00010, s_00018,aux9392_BOOL);
constraint array_bool_and([aux9388_BOOL,aux9389_BOOL,w_00004_00010_BOOL,aux9391_BOOL,aux9392_BOOL],aux9393_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux9394_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9395_BOOL);
constraint int_lin_eq([-1,1,1],[aux9396,2,s_00011],0);
constraint int_lt_reif(s_00018,aux9396,aux9397_BOOL);
constraint int_le_reif(s_00011, s_00018,aux9398_BOOL);
constraint array_bool_and([aux9394_BOOL,aux9395_BOOL,w_00004_00011_BOOL,aux9397_BOOL,aux9398_BOOL],aux9399_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux9400_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9401_BOOL);
constraint int_lin_eq([-1,1,1],[aux9402,2,s_00012],0);
constraint int_lt_reif(s_00018,aux9402,aux9403_BOOL);
constraint int_le_reif(s_00012, s_00018,aux9404_BOOL);
constraint array_bool_and([aux9400_BOOL,aux9401_BOOL,w_00004_00012_BOOL,aux9403_BOOL,aux9404_BOOL],aux9405_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux9406_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9407_BOOL);
constraint int_lin_eq([-1,1,1],[aux9408,1,s_00013],0);
constraint int_lt_reif(s_00018,aux9408,aux9409_BOOL);
constraint int_le_reif(s_00013, s_00018,aux9410_BOOL);
constraint array_bool_and([aux9406_BOOL,aux9407_BOOL,w_00004_00013_BOOL,aux9409_BOOL,aux9410_BOOL],aux9411_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux9412_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9413_BOOL);
constraint int_lin_eq([-1,1,1],[aux9414,4,s_00014],0);
constraint int_lt_reif(s_00018,aux9414,aux9415_BOOL);
constraint int_le_reif(s_00014, s_00018,aux9416_BOOL);
constraint array_bool_and([aux9412_BOOL,aux9413_BOOL,w_00004_00014_BOOL,aux9415_BOOL,aux9416_BOOL],aux9417_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux9418_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9419_BOOL);
constraint int_lin_eq([-1,1,1],[aux9420,2,s_00015],0);
constraint int_lt_reif(s_00018,aux9420,aux9421_BOOL);
constraint int_le_reif(s_00015, s_00018,aux9422_BOOL);
constraint array_bool_and([aux9418_BOOL,aux9419_BOOL,w_00004_00015_BOOL,aux9421_BOOL,aux9422_BOOL],aux9423_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux9424_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9425_BOOL);
constraint int_lin_eq([-1,1,1],[aux9426,3,s_00016],0);
constraint int_lt_reif(s_00018,aux9426,aux9427_BOOL);
constraint int_le_reif(s_00016, s_00018,aux9428_BOOL);
constraint array_bool_and([aux9424_BOOL,aux9425_BOOL,w_00004_00016_BOOL,aux9427_BOOL,aux9428_BOOL],aux9429_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux9430_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9431_BOOL);
constraint int_lin_eq([-1,1,1],[aux9432,1,s_00017],0);
constraint int_lt_reif(s_00018,aux9432,aux9433_BOOL);
constraint int_le_reif(s_00017, s_00018,aux9434_BOOL);
constraint array_bool_and([aux9430_BOOL,aux9431_BOOL,w_00004_00017_BOOL,aux9433_BOOL,aux9434_BOOL],aux9435_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9436_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9437_BOOL);
constraint int_lin_eq([-1,1,1],[aux9438,2,s_00019],0);
constraint int_lt_reif(s_00018,aux9438,aux9439_BOOL);
constraint int_le_reif(s_00019, s_00018,aux9440_BOOL);
constraint array_bool_and([aux9436_BOOL,aux9437_BOOL,w_00004_00019_BOOL,aux9439_BOOL,aux9440_BOOL],aux9441_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9442_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9443_BOOL);
constraint int_lin_eq([-1,1,1],[aux9444,3,s_00020],0);
constraint int_lt_reif(s_00018,aux9444,aux9445_BOOL);
constraint int_le_reif(s_00020, s_00018,aux9446_BOOL);
constraint array_bool_and([aux9442_BOOL,aux9443_BOOL,w_00004_00020_BOOL,aux9445_BOOL,aux9446_BOOL],aux9447_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9448_BOOL);
constraint int_lin_eq([-1,1,1],[aux9449,3,s_00018],0);
constraint int_lt_reif(s_00018,aux9449,aux9450_BOOL);
constraint array_bool_and([aux9448_BOOL,w_00004_00018_BOOL,aux9450_BOOL],aux9451_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux9452_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9453_BOOL);
constraint int_lin_eq([-1,1,1],[aux9454,1,s_00001],0);
constraint int_lt_reif(s_00018,aux9454,aux9455_BOOL);
constraint int_le_reif(s_00001, s_00018,aux9456_BOOL);
constraint array_bool_and([aux9452_BOOL,aux9453_BOOL,w_00004_00001_BOOL,aux9455_BOOL,aux9456_BOOL],aux9457_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux9458_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9459_BOOL);
constraint int_lin_eq([-1,1,1],[aux9460,2,s_00002],0);
constraint int_lt_reif(s_00018,aux9460,aux9461_BOOL);
constraint int_le_reif(s_00002, s_00018,aux9462_BOOL);
constraint array_bool_and([aux9458_BOOL,aux9459_BOOL,w_00004_00002_BOOL,aux9461_BOOL,aux9462_BOOL],aux9463_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux9464_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9465_BOOL);
constraint int_lin_eq([-1,1,1],[aux9466,3,s_00003],0);
constraint int_lt_reif(s_00018,aux9466,aux9467_BOOL);
constraint int_le_reif(s_00003, s_00018,aux9468_BOOL);
constraint array_bool_and([aux9464_BOOL,aux9465_BOOL,w_00004_00003_BOOL,aux9467_BOOL,aux9468_BOOL],aux9469_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux9470_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9471_BOOL);
constraint int_lin_eq([-1,1,1],[aux9472,2,s_00004],0);
constraint int_lt_reif(s_00018,aux9472,aux9473_BOOL);
constraint int_le_reif(s_00004, s_00018,aux9474_BOOL);
constraint array_bool_and([aux9470_BOOL,aux9471_BOOL,w_00004_00004_BOOL,aux9473_BOOL,aux9474_BOOL],aux9475_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux9476_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9477_BOOL);
constraint int_lin_eq([-1,1,1],[aux9478,2,s_00005],0);
constraint int_lt_reif(s_00018,aux9478,aux9479_BOOL);
constraint int_le_reif(s_00005, s_00018,aux9480_BOOL);
constraint array_bool_and([aux9476_BOOL,aux9477_BOOL,w_00004_00005_BOOL,aux9479_BOOL,aux9480_BOOL],aux9481_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9482_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9483_BOOL);
constraint int_lin_eq([-1,1,1],[aux9484,3,s_00006],0);
constraint int_lt_reif(s_00018,aux9484,aux9485_BOOL);
constraint int_le_reif(s_00006, s_00018,aux9486_BOOL);
constraint array_bool_and([aux9482_BOOL,aux9483_BOOL,w_00004_00006_BOOL,aux9485_BOOL,aux9486_BOOL],aux9487_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux9488_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9489_BOOL);
constraint int_lin_eq([-1,1,1],[aux9490,2,s_00007],0);
constraint int_lt_reif(s_00018,aux9490,aux9491_BOOL);
constraint int_le_reif(s_00007, s_00018,aux9492_BOOL);
constraint array_bool_and([aux9488_BOOL,aux9489_BOOL,w_00004_00007_BOOL,aux9491_BOOL,aux9492_BOOL],aux9493_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux9494_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9495_BOOL);
constraint int_lin_eq([-1,1,1],[aux9496,1,s_00008],0);
constraint int_lt_reif(s_00018,aux9496,aux9497_BOOL);
constraint int_le_reif(s_00008, s_00018,aux9498_BOOL);
constraint array_bool_and([aux9494_BOOL,aux9495_BOOL,w_00004_00008_BOOL,aux9497_BOOL,aux9498_BOOL],aux9499_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux9500_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9501_BOOL);
constraint int_lin_eq([-1,1,1],[aux9502,2,s_00009],0);
constraint int_lt_reif(s_00018,aux9502,aux9503_BOOL);
constraint int_le_reif(s_00009, s_00018,aux9504_BOOL);
constraint array_bool_and([aux9500_BOOL,aux9501_BOOL,w_00004_00009_BOOL,aux9503_BOOL,aux9504_BOOL],aux9505_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux9393_INTEGER,aux9399_INTEGER,aux9405_INTEGER,aux9411_INTEGER,aux9417_INTEGER,aux9423_INTEGER,aux9429_INTEGER,aux9435_INTEGER,aux9441_INTEGER,aux9447_INTEGER,aux9451_INTEGER,aux9457_INTEGER,aux9463_INTEGER,aux9469_INTEGER,aux9475_INTEGER,aux9481_INTEGER,aux9487_INTEGER,aux9493_INTEGER,aux9499_INTEGER,aux9505_INTEGER,1],0,aux9506_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux9507_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux9508_BOOL);
constraint int_lin_eq([-1,1,1],[aux9509,2,s_00011],0);
constraint int_lt_reif(s_00010,aux9509,aux9510_BOOL);
constraint int_le_reif(s_00011, s_00010,aux9511_BOOL);
constraint array_bool_and([aux9507_BOOL,aux9508_BOOL,w_00004_00011_BOOL,aux9510_BOOL,aux9511_BOOL],aux9512_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux9513_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux9514_BOOL);
constraint int_lin_eq([-1,1,1],[aux9515,2,s_00012],0);
constraint int_lt_reif(s_00010,aux9515,aux9516_BOOL);
constraint int_le_reif(s_00012, s_00010,aux9517_BOOL);
constraint array_bool_and([aux9513_BOOL,aux9514_BOOL,w_00004_00012_BOOL,aux9516_BOOL,aux9517_BOOL],aux9518_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux9519_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux9520_BOOL);
constraint int_lin_eq([-1,1,1],[aux9521,1,s_00013],0);
constraint int_lt_reif(s_00010,aux9521,aux9522_BOOL);
constraint int_le_reif(s_00013, s_00010,aux9523_BOOL);
constraint array_bool_and([aux9519_BOOL,aux9520_BOOL,w_00004_00013_BOOL,aux9522_BOOL,aux9523_BOOL],aux9524_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux9525_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux9526_BOOL);
constraint int_lin_eq([-1,1,1],[aux9527,4,s_00014],0);
constraint int_lt_reif(s_00010,aux9527,aux9528_BOOL);
constraint int_le_reif(s_00014, s_00010,aux9529_BOOL);
constraint array_bool_and([aux9525_BOOL,aux9526_BOOL,w_00004_00014_BOOL,aux9528_BOOL,aux9529_BOOL],aux9530_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux9531_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux9532_BOOL);
constraint int_lin_eq([-1,1,1],[aux9533,2,s_00015],0);
constraint int_lt_reif(s_00010,aux9533,aux9534_BOOL);
constraint int_le_reif(s_00015, s_00010,aux9535_BOOL);
constraint array_bool_and([aux9531_BOOL,aux9532_BOOL,w_00004_00015_BOOL,aux9534_BOOL,aux9535_BOOL],aux9536_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux9537_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux9538_BOOL);
constraint int_lin_eq([-1,1,1],[aux9539,3,s_00016],0);
constraint int_lt_reif(s_00010,aux9539,aux9540_BOOL);
constraint int_le_reif(s_00016, s_00010,aux9541_BOOL);
constraint array_bool_and([aux9537_BOOL,aux9538_BOOL,w_00004_00016_BOOL,aux9540_BOOL,aux9541_BOOL],aux9542_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux9543_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux9544_BOOL);
constraint int_lin_eq([-1,1,1],[aux9545,1,s_00017],0);
constraint int_lt_reif(s_00010,aux9545,aux9546_BOOL);
constraint int_le_reif(s_00017, s_00010,aux9547_BOOL);
constraint array_bool_and([aux9543_BOOL,aux9544_BOOL,w_00004_00017_BOOL,aux9546_BOOL,aux9547_BOOL],aux9548_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux9549_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9550_BOOL);
constraint int_lin_eq([-1,1,1],[aux9551,3,s_00018],0);
constraint int_lt_reif(s_00010,aux9551,aux9552_BOOL);
constraint int_le_reif(s_00018, s_00010,aux9553_BOOL);
constraint array_bool_and([aux9549_BOOL,aux9550_BOOL,w_00004_00018_BOOL,aux9552_BOOL,aux9553_BOOL],aux9554_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux9555_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9556_BOOL);
constraint int_lin_eq([-1,1,1],[aux9557,2,s_00019],0);
constraint int_lt_reif(s_00010,aux9557,aux9558_BOOL);
constraint int_le_reif(s_00019, s_00010,aux9559_BOOL);
constraint array_bool_and([aux9555_BOOL,aux9556_BOOL,w_00004_00019_BOOL,aux9558_BOOL,aux9559_BOOL],aux9560_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux9561_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9562_BOOL);
constraint int_lin_eq([-1,1,1],[aux9563,3,s_00020],0);
constraint int_lt_reif(s_00010,aux9563,aux9564_BOOL);
constraint int_le_reif(s_00020, s_00010,aux9565_BOOL);
constraint array_bool_and([aux9561_BOOL,aux9562_BOOL,w_00004_00020_BOOL,aux9564_BOOL,aux9565_BOOL],aux9566_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux9567_BOOL);
constraint int_lin_eq([-1,1,1],[aux9568,1,s_00010],0);
constraint int_lt_reif(s_00010,aux9568,aux9569_BOOL);
constraint array_bool_and([aux9567_BOOL,w_00004_00010_BOOL,aux9569_BOOL],aux9570_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux9571_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux9572_BOOL);
constraint int_lin_eq([-1,1,1],[aux9573,1,s_00001],0);
constraint int_lt_reif(s_00010,aux9573,aux9574_BOOL);
constraint int_le_reif(s_00001, s_00010,aux9575_BOOL);
constraint array_bool_and([aux9571_BOOL,aux9572_BOOL,w_00004_00001_BOOL,aux9574_BOOL,aux9575_BOOL],aux9576_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux9577_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux9578_BOOL);
constraint int_lin_eq([-1,1,1],[aux9579,2,s_00002],0);
constraint int_lt_reif(s_00010,aux9579,aux9580_BOOL);
constraint int_le_reif(s_00002, s_00010,aux9581_BOOL);
constraint array_bool_and([aux9577_BOOL,aux9578_BOOL,w_00004_00002_BOOL,aux9580_BOOL,aux9581_BOOL],aux9582_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux9583_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux9584_BOOL);
constraint int_lin_eq([-1,1,1],[aux9585,3,s_00003],0);
constraint int_lt_reif(s_00010,aux9585,aux9586_BOOL);
constraint int_le_reif(s_00003, s_00010,aux9587_BOOL);
constraint array_bool_and([aux9583_BOOL,aux9584_BOOL,w_00004_00003_BOOL,aux9586_BOOL,aux9587_BOOL],aux9588_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux9589_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux9590_BOOL);
constraint int_lin_eq([-1,1,1],[aux9591,2,s_00004],0);
constraint int_lt_reif(s_00010,aux9591,aux9592_BOOL);
constraint int_le_reif(s_00004, s_00010,aux9593_BOOL);
constraint array_bool_and([aux9589_BOOL,aux9590_BOOL,w_00004_00004_BOOL,aux9592_BOOL,aux9593_BOOL],aux9594_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux9595_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux9596_BOOL);
constraint int_lin_eq([-1,1,1],[aux9597,2,s_00005],0);
constraint int_lt_reif(s_00010,aux9597,aux9598_BOOL);
constraint int_le_reif(s_00005, s_00010,aux9599_BOOL);
constraint array_bool_and([aux9595_BOOL,aux9596_BOOL,w_00004_00005_BOOL,aux9598_BOOL,aux9599_BOOL],aux9600_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9601_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux9602_BOOL);
constraint int_lin_eq([-1,1,1],[aux9603,3,s_00006],0);
constraint int_lt_reif(s_00010,aux9603,aux9604_BOOL);
constraint int_le_reif(s_00006, s_00010,aux9605_BOOL);
constraint array_bool_and([aux9601_BOOL,aux9602_BOOL,w_00004_00006_BOOL,aux9604_BOOL,aux9605_BOOL],aux9606_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux9607_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux9608_BOOL);
constraint int_lin_eq([-1,1,1],[aux9609,2,s_00007],0);
constraint int_lt_reif(s_00010,aux9609,aux9610_BOOL);
constraint int_le_reif(s_00007, s_00010,aux9611_BOOL);
constraint array_bool_and([aux9607_BOOL,aux9608_BOOL,w_00004_00007_BOOL,aux9610_BOOL,aux9611_BOOL],aux9612_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux9613_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux9614_BOOL);
constraint int_lin_eq([-1,1,1],[aux9615,1,s_00008],0);
constraint int_lt_reif(s_00010,aux9615,aux9616_BOOL);
constraint int_le_reif(s_00008, s_00010,aux9617_BOOL);
constraint array_bool_and([aux9613_BOOL,aux9614_BOOL,w_00004_00008_BOOL,aux9616_BOOL,aux9617_BOOL],aux9618_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux9619_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux9620_BOOL);
constraint int_lin_eq([-1,1,1],[aux9621,2,s_00009],0);
constraint int_lt_reif(s_00010,aux9621,aux9622_BOOL);
constraint int_le_reif(s_00009, s_00010,aux9623_BOOL);
constraint array_bool_and([aux9619_BOOL,aux9620_BOOL,w_00004_00009_BOOL,aux9622_BOOL,aux9623_BOOL],aux9624_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux9512_INTEGER,aux9518_INTEGER,aux9524_INTEGER,aux9530_INTEGER,aux9536_INTEGER,aux9542_INTEGER,aux9548_INTEGER,aux9554_INTEGER,aux9560_INTEGER,aux9566_INTEGER,aux9570_INTEGER,aux9576_INTEGER,aux9582_INTEGER,aux9588_INTEGER,aux9594_INTEGER,aux9600_INTEGER,aux9606_INTEGER,aux9612_INTEGER,aux9618_INTEGER,aux9624_INTEGER,1],0,aux9625_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux9626_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9627_BOOL);
constraint int_lin_eq([-1,1,1],[aux9628,1,s_00010],0);
constraint int_lt_reif(s_00019,aux9628,aux9629_BOOL);
constraint int_le_reif(s_00010, s_00019,aux9630_BOOL);
constraint array_bool_and([aux9626_BOOL,aux9627_BOOL,w_00004_00010_BOOL,aux9629_BOOL,aux9630_BOOL],aux9631_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux9632_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9633_BOOL);
constraint int_lin_eq([-1,1,1],[aux9634,2,s_00011],0);
constraint int_lt_reif(s_00019,aux9634,aux9635_BOOL);
constraint int_le_reif(s_00011, s_00019,aux9636_BOOL);
constraint array_bool_and([aux9632_BOOL,aux9633_BOOL,w_00004_00011_BOOL,aux9635_BOOL,aux9636_BOOL],aux9637_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux9638_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9639_BOOL);
constraint int_lin_eq([-1,1,1],[aux9640,2,s_00012],0);
constraint int_lt_reif(s_00019,aux9640,aux9641_BOOL);
constraint int_le_reif(s_00012, s_00019,aux9642_BOOL);
constraint array_bool_and([aux9638_BOOL,aux9639_BOOL,w_00004_00012_BOOL,aux9641_BOOL,aux9642_BOOL],aux9643_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux9644_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9645_BOOL);
constraint int_lin_eq([-1,1,1],[aux9646,1,s_00013],0);
constraint int_lt_reif(s_00019,aux9646,aux9647_BOOL);
constraint int_le_reif(s_00013, s_00019,aux9648_BOOL);
constraint array_bool_and([aux9644_BOOL,aux9645_BOOL,w_00004_00013_BOOL,aux9647_BOOL,aux9648_BOOL],aux9649_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux9650_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9651_BOOL);
constraint int_lin_eq([-1,1,1],[aux9652,4,s_00014],0);
constraint int_lt_reif(s_00019,aux9652,aux9653_BOOL);
constraint int_le_reif(s_00014, s_00019,aux9654_BOOL);
constraint array_bool_and([aux9650_BOOL,aux9651_BOOL,w_00004_00014_BOOL,aux9653_BOOL,aux9654_BOOL],aux9655_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux9656_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9657_BOOL);
constraint int_lin_eq([-1,1,1],[aux9658,2,s_00015],0);
constraint int_lt_reif(s_00019,aux9658,aux9659_BOOL);
constraint int_le_reif(s_00015, s_00019,aux9660_BOOL);
constraint array_bool_and([aux9656_BOOL,aux9657_BOOL,w_00004_00015_BOOL,aux9659_BOOL,aux9660_BOOL],aux9661_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux9662_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9663_BOOL);
constraint int_lin_eq([-1,1,1],[aux9664,3,s_00016],0);
constraint int_lt_reif(s_00019,aux9664,aux9665_BOOL);
constraint int_le_reif(s_00016, s_00019,aux9666_BOOL);
constraint array_bool_and([aux9662_BOOL,aux9663_BOOL,w_00004_00016_BOOL,aux9665_BOOL,aux9666_BOOL],aux9667_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux9668_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9669_BOOL);
constraint int_lin_eq([-1,1,1],[aux9670,1,s_00017],0);
constraint int_lt_reif(s_00019,aux9670,aux9671_BOOL);
constraint int_le_reif(s_00017, s_00019,aux9672_BOOL);
constraint array_bool_and([aux9668_BOOL,aux9669_BOOL,w_00004_00017_BOOL,aux9671_BOOL,aux9672_BOOL],aux9673_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9674_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9675_BOOL);
constraint int_lin_eq([-1,1,1],[aux9676,3,s_00018],0);
constraint int_lt_reif(s_00019,aux9676,aux9677_BOOL);
constraint int_le_reif(s_00018, s_00019,aux9678_BOOL);
constraint array_bool_and([aux9674_BOOL,aux9675_BOOL,w_00004_00018_BOOL,aux9677_BOOL,aux9678_BOOL],aux9679_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9680_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9681_BOOL);
constraint int_lin_eq([-1,1,1],[aux9682,3,s_00020],0);
constraint int_lt_reif(s_00019,aux9682,aux9683_BOOL);
constraint int_le_reif(s_00020, s_00019,aux9684_BOOL);
constraint array_bool_and([aux9680_BOOL,aux9681_BOOL,w_00004_00020_BOOL,aux9683_BOOL,aux9684_BOOL],aux9685_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9686_BOOL);
constraint int_lin_eq([-1,1,1],[aux9687,2,s_00019],0);
constraint int_lt_reif(s_00019,aux9687,aux9688_BOOL);
constraint array_bool_and([aux9686_BOOL,w_00004_00019_BOOL,aux9688_BOOL],aux9689_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux9690_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9691_BOOL);
constraint int_lin_eq([-1,1,1],[aux9692,1,s_00001],0);
constraint int_lt_reif(s_00019,aux9692,aux9693_BOOL);
constraint int_le_reif(s_00001, s_00019,aux9694_BOOL);
constraint array_bool_and([aux9690_BOOL,aux9691_BOOL,w_00004_00001_BOOL,aux9693_BOOL,aux9694_BOOL],aux9695_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux9696_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9697_BOOL);
constraint int_lin_eq([-1,1,1],[aux9698,2,s_00002],0);
constraint int_lt_reif(s_00019,aux9698,aux9699_BOOL);
constraint int_le_reif(s_00002, s_00019,aux9700_BOOL);
constraint array_bool_and([aux9696_BOOL,aux9697_BOOL,w_00004_00002_BOOL,aux9699_BOOL,aux9700_BOOL],aux9701_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux9702_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9703_BOOL);
constraint int_lin_eq([-1,1,1],[aux9704,3,s_00003],0);
constraint int_lt_reif(s_00019,aux9704,aux9705_BOOL);
constraint int_le_reif(s_00003, s_00019,aux9706_BOOL);
constraint array_bool_and([aux9702_BOOL,aux9703_BOOL,w_00004_00003_BOOL,aux9705_BOOL,aux9706_BOOL],aux9707_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux9708_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9709_BOOL);
constraint int_lin_eq([-1,1,1],[aux9710,2,s_00004],0);
constraint int_lt_reif(s_00019,aux9710,aux9711_BOOL);
constraint int_le_reif(s_00004, s_00019,aux9712_BOOL);
constraint array_bool_and([aux9708_BOOL,aux9709_BOOL,w_00004_00004_BOOL,aux9711_BOOL,aux9712_BOOL],aux9713_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux9714_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9715_BOOL);
constraint int_lin_eq([-1,1,1],[aux9716,2,s_00005],0);
constraint int_lt_reif(s_00019,aux9716,aux9717_BOOL);
constraint int_le_reif(s_00005, s_00019,aux9718_BOOL);
constraint array_bool_and([aux9714_BOOL,aux9715_BOOL,w_00004_00005_BOOL,aux9717_BOOL,aux9718_BOOL],aux9719_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9720_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9721_BOOL);
constraint int_lin_eq([-1,1,1],[aux9722,3,s_00006],0);
constraint int_lt_reif(s_00019,aux9722,aux9723_BOOL);
constraint int_le_reif(s_00006, s_00019,aux9724_BOOL);
constraint array_bool_and([aux9720_BOOL,aux9721_BOOL,w_00004_00006_BOOL,aux9723_BOOL,aux9724_BOOL],aux9725_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux9726_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9727_BOOL);
constraint int_lin_eq([-1,1,1],[aux9728,2,s_00007],0);
constraint int_lt_reif(s_00019,aux9728,aux9729_BOOL);
constraint int_le_reif(s_00007, s_00019,aux9730_BOOL);
constraint array_bool_and([aux9726_BOOL,aux9727_BOOL,w_00004_00007_BOOL,aux9729_BOOL,aux9730_BOOL],aux9731_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux9732_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9733_BOOL);
constraint int_lin_eq([-1,1,1],[aux9734,1,s_00008],0);
constraint int_lt_reif(s_00019,aux9734,aux9735_BOOL);
constraint int_le_reif(s_00008, s_00019,aux9736_BOOL);
constraint array_bool_and([aux9732_BOOL,aux9733_BOOL,w_00004_00008_BOOL,aux9735_BOOL,aux9736_BOOL],aux9737_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux9738_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9739_BOOL);
constraint int_lin_eq([-1,1,1],[aux9740,2,s_00009],0);
constraint int_lt_reif(s_00019,aux9740,aux9741_BOOL);
constraint int_le_reif(s_00009, s_00019,aux9742_BOOL);
constraint array_bool_and([aux9738_BOOL,aux9739_BOOL,w_00004_00009_BOOL,aux9741_BOOL,aux9742_BOOL],aux9743_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux9631_INTEGER,aux9637_INTEGER,aux9643_INTEGER,aux9649_INTEGER,aux9655_INTEGER,aux9661_INTEGER,aux9667_INTEGER,aux9673_INTEGER,aux9679_INTEGER,aux9685_INTEGER,aux9689_INTEGER,aux9695_INTEGER,aux9701_INTEGER,aux9707_INTEGER,aux9713_INTEGER,aux9719_INTEGER,aux9725_INTEGER,aux9731_INTEGER,aux9737_INTEGER,aux9743_INTEGER,1],0,aux9744_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux9745_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux9746_BOOL);
constraint int_lin_eq([-1,1,1],[aux9747,1,s_00010],0);
constraint int_lt_reif(s_00016,aux9747,aux9748_BOOL);
constraint int_le_reif(s_00010, s_00016,aux9749_BOOL);
constraint array_bool_and([aux9745_BOOL,aux9746_BOOL,w_00004_00010_BOOL,aux9748_BOOL,aux9749_BOOL],aux9750_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux9751_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux9752_BOOL);
constraint int_lin_eq([-1,1,1],[aux9753,2,s_00011],0);
constraint int_lt_reif(s_00016,aux9753,aux9754_BOOL);
constraint int_le_reif(s_00011, s_00016,aux9755_BOOL);
constraint array_bool_and([aux9751_BOOL,aux9752_BOOL,w_00004_00011_BOOL,aux9754_BOOL,aux9755_BOOL],aux9756_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux9757_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux9758_BOOL);
constraint int_lin_eq([-1,1,1],[aux9759,2,s_00012],0);
constraint int_lt_reif(s_00016,aux9759,aux9760_BOOL);
constraint int_le_reif(s_00012, s_00016,aux9761_BOOL);
constraint array_bool_and([aux9757_BOOL,aux9758_BOOL,w_00004_00012_BOOL,aux9760_BOOL,aux9761_BOOL],aux9762_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux9763_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux9764_BOOL);
constraint int_lin_eq([-1,1,1],[aux9765,1,s_00013],0);
constraint int_lt_reif(s_00016,aux9765,aux9766_BOOL);
constraint int_le_reif(s_00013, s_00016,aux9767_BOOL);
constraint array_bool_and([aux9763_BOOL,aux9764_BOOL,w_00004_00013_BOOL,aux9766_BOOL,aux9767_BOOL],aux9768_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux9769_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux9770_BOOL);
constraint int_lin_eq([-1,1,1],[aux9771,4,s_00014],0);
constraint int_lt_reif(s_00016,aux9771,aux9772_BOOL);
constraint int_le_reif(s_00014, s_00016,aux9773_BOOL);
constraint array_bool_and([aux9769_BOOL,aux9770_BOOL,w_00004_00014_BOOL,aux9772_BOOL,aux9773_BOOL],aux9774_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux9775_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux9776_BOOL);
constraint int_lin_eq([-1,1,1],[aux9777,2,s_00015],0);
constraint int_lt_reif(s_00016,aux9777,aux9778_BOOL);
constraint int_le_reif(s_00015, s_00016,aux9779_BOOL);
constraint array_bool_and([aux9775_BOOL,aux9776_BOOL,w_00004_00015_BOOL,aux9778_BOOL,aux9779_BOOL],aux9780_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux9781_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux9782_BOOL);
constraint int_lin_eq([-1,1,1],[aux9783,1,s_00017],0);
constraint int_lt_reif(s_00016,aux9783,aux9784_BOOL);
constraint int_le_reif(s_00017, s_00016,aux9785_BOOL);
constraint array_bool_and([aux9781_BOOL,aux9782_BOOL,w_00004_00017_BOOL,aux9784_BOOL,aux9785_BOOL],aux9786_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux9787_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9788_BOOL);
constraint int_lin_eq([-1,1,1],[aux9789,3,s_00018],0);
constraint int_lt_reif(s_00016,aux9789,aux9790_BOOL);
constraint int_le_reif(s_00018, s_00016,aux9791_BOOL);
constraint array_bool_and([aux9787_BOOL,aux9788_BOOL,w_00004_00018_BOOL,aux9790_BOOL,aux9791_BOOL],aux9792_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux9793_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9794_BOOL);
constraint int_lin_eq([-1,1,1],[aux9795,2,s_00019],0);
constraint int_lt_reif(s_00016,aux9795,aux9796_BOOL);
constraint int_le_reif(s_00019, s_00016,aux9797_BOOL);
constraint array_bool_and([aux9793_BOOL,aux9794_BOOL,w_00004_00019_BOOL,aux9796_BOOL,aux9797_BOOL],aux9798_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux9799_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9800_BOOL);
constraint int_lin_eq([-1,1,1],[aux9801,3,s_00020],0);
constraint int_lt_reif(s_00016,aux9801,aux9802_BOOL);
constraint int_le_reif(s_00020, s_00016,aux9803_BOOL);
constraint array_bool_and([aux9799_BOOL,aux9800_BOOL,w_00004_00020_BOOL,aux9802_BOOL,aux9803_BOOL],aux9804_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux9805_BOOL);
constraint int_lin_eq([-1,1,1],[aux9806,3,s_00016],0);
constraint int_lt_reif(s_00016,aux9806,aux9807_BOOL);
constraint array_bool_and([aux9805_BOOL,w_00004_00016_BOOL,aux9807_BOOL],aux9808_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux9809_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux9810_BOOL);
constraint int_lin_eq([-1,1,1],[aux9811,1,s_00001],0);
constraint int_lt_reif(s_00016,aux9811,aux9812_BOOL);
constraint int_le_reif(s_00001, s_00016,aux9813_BOOL);
constraint array_bool_and([aux9809_BOOL,aux9810_BOOL,w_00004_00001_BOOL,aux9812_BOOL,aux9813_BOOL],aux9814_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux9815_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux9816_BOOL);
constraint int_lin_eq([-1,1,1],[aux9817,2,s_00002],0);
constraint int_lt_reif(s_00016,aux9817,aux9818_BOOL);
constraint int_le_reif(s_00002, s_00016,aux9819_BOOL);
constraint array_bool_and([aux9815_BOOL,aux9816_BOOL,w_00004_00002_BOOL,aux9818_BOOL,aux9819_BOOL],aux9820_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux9821_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux9822_BOOL);
constraint int_lin_eq([-1,1,1],[aux9823,3,s_00003],0);
constraint int_lt_reif(s_00016,aux9823,aux9824_BOOL);
constraint int_le_reif(s_00003, s_00016,aux9825_BOOL);
constraint array_bool_and([aux9821_BOOL,aux9822_BOOL,w_00004_00003_BOOL,aux9824_BOOL,aux9825_BOOL],aux9826_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux9827_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux9828_BOOL);
constraint int_lin_eq([-1,1,1],[aux9829,2,s_00004],0);
constraint int_lt_reif(s_00016,aux9829,aux9830_BOOL);
constraint int_le_reif(s_00004, s_00016,aux9831_BOOL);
constraint array_bool_and([aux9827_BOOL,aux9828_BOOL,w_00004_00004_BOOL,aux9830_BOOL,aux9831_BOOL],aux9832_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux9833_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux9834_BOOL);
constraint int_lin_eq([-1,1,1],[aux9835,2,s_00005],0);
constraint int_lt_reif(s_00016,aux9835,aux9836_BOOL);
constraint int_le_reif(s_00005, s_00016,aux9837_BOOL);
constraint array_bool_and([aux9833_BOOL,aux9834_BOOL,w_00004_00005_BOOL,aux9836_BOOL,aux9837_BOOL],aux9838_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9839_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux9840_BOOL);
constraint int_lin_eq([-1,1,1],[aux9841,3,s_00006],0);
constraint int_lt_reif(s_00016,aux9841,aux9842_BOOL);
constraint int_le_reif(s_00006, s_00016,aux9843_BOOL);
constraint array_bool_and([aux9839_BOOL,aux9840_BOOL,w_00004_00006_BOOL,aux9842_BOOL,aux9843_BOOL],aux9844_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux9845_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux9846_BOOL);
constraint int_lin_eq([-1,1,1],[aux9847,2,s_00007],0);
constraint int_lt_reif(s_00016,aux9847,aux9848_BOOL);
constraint int_le_reif(s_00007, s_00016,aux9849_BOOL);
constraint array_bool_and([aux9845_BOOL,aux9846_BOOL,w_00004_00007_BOOL,aux9848_BOOL,aux9849_BOOL],aux9850_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux9851_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux9852_BOOL);
constraint int_lin_eq([-1,1,1],[aux9853,1,s_00008],0);
constraint int_lt_reif(s_00016,aux9853,aux9854_BOOL);
constraint int_le_reif(s_00008, s_00016,aux9855_BOOL);
constraint array_bool_and([aux9851_BOOL,aux9852_BOOL,w_00004_00008_BOOL,aux9854_BOOL,aux9855_BOOL],aux9856_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux9857_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux9858_BOOL);
constraint int_lin_eq([-1,1,1],[aux9859,2,s_00009],0);
constraint int_lt_reif(s_00016,aux9859,aux9860_BOOL);
constraint int_le_reif(s_00009, s_00016,aux9861_BOOL);
constraint array_bool_and([aux9857_BOOL,aux9858_BOOL,w_00004_00009_BOOL,aux9860_BOOL,aux9861_BOOL],aux9862_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux9750_INTEGER,aux9756_INTEGER,aux9762_INTEGER,aux9768_INTEGER,aux9774_INTEGER,aux9780_INTEGER,aux9786_INTEGER,aux9792_INTEGER,aux9798_INTEGER,aux9804_INTEGER,aux9808_INTEGER,aux9814_INTEGER,aux9820_INTEGER,aux9826_INTEGER,aux9832_INTEGER,aux9838_INTEGER,aux9844_INTEGER,aux9850_INTEGER,aux9856_INTEGER,aux9862_INTEGER,1],0,aux9863_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9864_BOOL);
constraint int_lin_eq([-1,1,1],[aux9865,3,s_00006],0);
constraint int_lt_reif(s_00006,aux9865,aux9866_BOOL);
constraint array_bool_and([aux9864_BOOL,w_00004_00006_BOOL,aux9866_BOOL],aux9867_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux9868_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9869_BOOL);
constraint int_lin_eq([-1,1,1],[aux9870,1,s_00001],0);
constraint int_lt_reif(s_00006,aux9870,aux9871_BOOL);
constraint int_le_reif(s_00001, s_00006,aux9872_BOOL);
constraint array_bool_and([aux9868_BOOL,aux9869_BOOL,w_00004_00001_BOOL,aux9871_BOOL,aux9872_BOOL],aux9873_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux9874_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9875_BOOL);
constraint int_lin_eq([-1,1,1],[aux9876,2,s_00002],0);
constraint int_lt_reif(s_00006,aux9876,aux9877_BOOL);
constraint int_le_reif(s_00002, s_00006,aux9878_BOOL);
constraint array_bool_and([aux9874_BOOL,aux9875_BOOL,w_00004_00002_BOOL,aux9877_BOOL,aux9878_BOOL],aux9879_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux9880_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9881_BOOL);
constraint int_lin_eq([-1,1,1],[aux9882,3,s_00003],0);
constraint int_lt_reif(s_00006,aux9882,aux9883_BOOL);
constraint int_le_reif(s_00003, s_00006,aux9884_BOOL);
constraint array_bool_and([aux9880_BOOL,aux9881_BOOL,w_00004_00003_BOOL,aux9883_BOOL,aux9884_BOOL],aux9885_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux9886_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9887_BOOL);
constraint int_lin_eq([-1,1,1],[aux9888,2,s_00004],0);
constraint int_lt_reif(s_00006,aux9888,aux9889_BOOL);
constraint int_le_reif(s_00004, s_00006,aux9890_BOOL);
constraint array_bool_and([aux9886_BOOL,aux9887_BOOL,w_00004_00004_BOOL,aux9889_BOOL,aux9890_BOOL],aux9891_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux9892_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9893_BOOL);
constraint int_lin_eq([-1,1,1],[aux9894,2,s_00005],0);
constraint int_lt_reif(s_00006,aux9894,aux9895_BOOL);
constraint int_le_reif(s_00005, s_00006,aux9896_BOOL);
constraint array_bool_and([aux9892_BOOL,aux9893_BOOL,w_00004_00005_BOOL,aux9895_BOOL,aux9896_BOOL],aux9897_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9898_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux9899_BOOL);
constraint int_lin_eq([-1,1,1],[aux9900,2,s_00007],0);
constraint int_lt_reif(s_00006,aux9900,aux9901_BOOL);
constraint int_le_reif(s_00007, s_00006,aux9902_BOOL);
constraint array_bool_and([aux9898_BOOL,aux9899_BOOL,w_00004_00007_BOOL,aux9901_BOOL,aux9902_BOOL],aux9903_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9904_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux9905_BOOL);
constraint int_lin_eq([-1,1,1],[aux9906,1,s_00008],0);
constraint int_lt_reif(s_00006,aux9906,aux9907_BOOL);
constraint int_le_reif(s_00008, s_00006,aux9908_BOOL);
constraint array_bool_and([aux9904_BOOL,aux9905_BOOL,w_00004_00008_BOOL,aux9907_BOOL,aux9908_BOOL],aux9909_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9910_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux9911_BOOL);
constraint int_lin_eq([-1,1,1],[aux9912,2,s_00009],0);
constraint int_lt_reif(s_00006,aux9912,aux9913_BOOL);
constraint int_le_reif(s_00009, s_00006,aux9914_BOOL);
constraint array_bool_and([aux9910_BOOL,aux9911_BOOL,w_00004_00009_BOOL,aux9913_BOOL,aux9914_BOOL],aux9915_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9916_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux9917_BOOL);
constraint int_lin_eq([-1,1,1],[aux9918,1,s_00010],0);
constraint int_lt_reif(s_00006,aux9918,aux9919_BOOL);
constraint int_le_reif(s_00010, s_00006,aux9920_BOOL);
constraint array_bool_and([aux9916_BOOL,aux9917_BOOL,w_00004_00010_BOOL,aux9919_BOOL,aux9920_BOOL],aux9921_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9922_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux9923_BOOL);
constraint int_lin_eq([-1,1,1],[aux9924,2,s_00011],0);
constraint int_lt_reif(s_00006,aux9924,aux9925_BOOL);
constraint int_le_reif(s_00011, s_00006,aux9926_BOOL);
constraint array_bool_and([aux9922_BOOL,aux9923_BOOL,w_00004_00011_BOOL,aux9925_BOOL,aux9926_BOOL],aux9927_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9928_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux9929_BOOL);
constraint int_lin_eq([-1,1,1],[aux9930,2,s_00012],0);
constraint int_lt_reif(s_00006,aux9930,aux9931_BOOL);
constraint int_le_reif(s_00012, s_00006,aux9932_BOOL);
constraint array_bool_and([aux9928_BOOL,aux9929_BOOL,w_00004_00012_BOOL,aux9931_BOOL,aux9932_BOOL],aux9933_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9934_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux9935_BOOL);
constraint int_lin_eq([-1,1,1],[aux9936,1,s_00013],0);
constraint int_lt_reif(s_00006,aux9936,aux9937_BOOL);
constraint int_le_reif(s_00013, s_00006,aux9938_BOOL);
constraint array_bool_and([aux9934_BOOL,aux9935_BOOL,w_00004_00013_BOOL,aux9937_BOOL,aux9938_BOOL],aux9939_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9940_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux9941_BOOL);
constraint int_lin_eq([-1,1,1],[aux9942,4,s_00014],0);
constraint int_lt_reif(s_00006,aux9942,aux9943_BOOL);
constraint int_le_reif(s_00014, s_00006,aux9944_BOOL);
constraint array_bool_and([aux9940_BOOL,aux9941_BOOL,w_00004_00014_BOOL,aux9943_BOOL,aux9944_BOOL],aux9945_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9946_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux9947_BOOL);
constraint int_lin_eq([-1,1,1],[aux9948,2,s_00015],0);
constraint int_lt_reif(s_00006,aux9948,aux9949_BOOL);
constraint int_le_reif(s_00015, s_00006,aux9950_BOOL);
constraint array_bool_and([aux9946_BOOL,aux9947_BOOL,w_00004_00015_BOOL,aux9949_BOOL,aux9950_BOOL],aux9951_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9952_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux9953_BOOL);
constraint int_lin_eq([-1,1,1],[aux9954,3,s_00016],0);
constraint int_lt_reif(s_00006,aux9954,aux9955_BOOL);
constraint int_le_reif(s_00016, s_00006,aux9956_BOOL);
constraint array_bool_and([aux9952_BOOL,aux9953_BOOL,w_00004_00016_BOOL,aux9955_BOOL,aux9956_BOOL],aux9957_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9958_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux9959_BOOL);
constraint int_lin_eq([-1,1,1],[aux9960,1,s_00017],0);
constraint int_lt_reif(s_00006,aux9960,aux9961_BOOL);
constraint int_le_reif(s_00017, s_00006,aux9962_BOOL);
constraint array_bool_and([aux9958_BOOL,aux9959_BOOL,w_00004_00017_BOOL,aux9961_BOOL,aux9962_BOOL],aux9963_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9964_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux9965_BOOL);
constraint int_lin_eq([-1,1,1],[aux9966,3,s_00018],0);
constraint int_lt_reif(s_00006,aux9966,aux9967_BOOL);
constraint int_le_reif(s_00018, s_00006,aux9968_BOOL);
constraint array_bool_and([aux9964_BOOL,aux9965_BOOL,w_00004_00018_BOOL,aux9967_BOOL,aux9968_BOOL],aux9969_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9970_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux9971_BOOL);
constraint int_lin_eq([-1,1,1],[aux9972,2,s_00019],0);
constraint int_lt_reif(s_00006,aux9972,aux9973_BOOL);
constraint int_le_reif(s_00019, s_00006,aux9974_BOOL);
constraint array_bool_and([aux9970_BOOL,aux9971_BOOL,w_00004_00019_BOOL,aux9973_BOOL,aux9974_BOOL],aux9975_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux9976_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux9977_BOOL);
constraint int_lin_eq([-1,1,1],[aux9978,3,s_00020],0);
constraint int_lt_reif(s_00006,aux9978,aux9979_BOOL);
constraint int_le_reif(s_00020, s_00006,aux9980_BOOL);
constraint array_bool_and([aux9976_BOOL,aux9977_BOOL,w_00004_00020_BOOL,aux9979_BOOL,aux9980_BOOL],aux9981_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux9867_INTEGER,aux9873_INTEGER,aux9879_INTEGER,aux9885_INTEGER,aux9891_INTEGER,aux9897_INTEGER,aux9903_INTEGER,aux9909_INTEGER,aux9915_INTEGER,aux9921_INTEGER,aux9927_INTEGER,aux9933_INTEGER,aux9939_INTEGER,aux9945_INTEGER,aux9951_INTEGER,aux9957_INTEGER,aux9963_INTEGER,aux9969_INTEGER,aux9975_INTEGER,aux9981_INTEGER,1],0,aux9982_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux9983_BOOL);
constraint int_lin_eq([-1,1,1],[aux9984,2,s_00007],0);
constraint int_lt_reif(s_00007,aux9984,aux9985_BOOL);
constraint array_bool_and([aux9983_BOOL,w_00004_00007_BOOL,aux9985_BOOL],aux9986_BOOL);
constraint int_eq_reif(TWorkers_00004_00001_INTEGER,1,aux9987_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux9988_BOOL);
constraint int_lin_eq([-1,1,1],[aux9989,1,s_00001],0);
constraint int_lt_reif(s_00007,aux9989,aux9990_BOOL);
constraint int_le_reif(s_00001, s_00007,aux9991_BOOL);
constraint array_bool_and([aux9987_BOOL,aux9988_BOOL,w_00004_00001_BOOL,aux9990_BOOL,aux9991_BOOL],aux9992_BOOL);
constraint int_eq_reif(TWorkers_00004_00002_INTEGER,1,aux9993_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux9994_BOOL);
constraint int_lin_eq([-1,1,1],[aux9995,2,s_00002],0);
constraint int_lt_reif(s_00007,aux9995,aux9996_BOOL);
constraint int_le_reif(s_00002, s_00007,aux9997_BOOL);
constraint array_bool_and([aux9993_BOOL,aux9994_BOOL,w_00004_00002_BOOL,aux9996_BOOL,aux9997_BOOL],aux9998_BOOL);
constraint int_eq_reif(TWorkers_00004_00003_INTEGER,1,aux9999_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux10000_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10001,s_00003],0);
constraint int_lt_reif(s_00007,aux10001,aux10002_BOOL);
constraint int_le_reif(s_00003, s_00007,aux10003_BOOL);
constraint array_bool_and([aux9999_BOOL,aux10000_BOOL,w_00004_00003_BOOL,aux10002_BOOL,aux10003_BOOL],aux10004_BOOL);
constraint int_eq_reif(TWorkers_00004_00004_INTEGER,1,aux10005_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux10006_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10007,s_00004],0);
constraint int_lt_reif(s_00007,aux10007,aux10008_BOOL);
constraint int_le_reif(s_00004, s_00007,aux10009_BOOL);
constraint array_bool_and([aux10005_BOOL,aux10006_BOOL,w_00004_00004_BOOL,aux10008_BOOL,aux10009_BOOL],aux10010_BOOL);
constraint int_eq_reif(TWorkers_00004_00005_INTEGER,1,aux10011_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux10012_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10013,s_00005],0);
constraint int_lt_reif(s_00007,aux10013,aux10014_BOOL);
constraint int_le_reif(s_00005, s_00007,aux10015_BOOL);
constraint array_bool_and([aux10011_BOOL,aux10012_BOOL,w_00004_00005_BOOL,aux10014_BOOL,aux10015_BOOL],aux10016_BOOL);
constraint int_eq_reif(TWorkers_00004_00006_INTEGER,1,aux10017_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux10018_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10019,s_00006],0);
constraint int_lt_reif(s_00007,aux10019,aux10020_BOOL);
constraint int_le_reif(s_00006, s_00007,aux10021_BOOL);
constraint array_bool_and([aux10017_BOOL,aux10018_BOOL,w_00004_00006_BOOL,aux10020_BOOL,aux10021_BOOL],aux10022_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux10023_BOOL);
constraint int_eq_reif(TWorkers_00004_00008_INTEGER,1,aux10024_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10025,s_00008],0);
constraint int_lt_reif(s_00007,aux10025,aux10026_BOOL);
constraint int_le_reif(s_00008, s_00007,aux10027_BOOL);
constraint array_bool_and([aux10023_BOOL,aux10024_BOOL,w_00004_00008_BOOL,aux10026_BOOL,aux10027_BOOL],aux10028_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux10029_BOOL);
constraint int_eq_reif(TWorkers_00004_00009_INTEGER,1,aux10030_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10031,s_00009],0);
constraint int_lt_reif(s_00007,aux10031,aux10032_BOOL);
constraint int_le_reif(s_00009, s_00007,aux10033_BOOL);
constraint array_bool_and([aux10029_BOOL,aux10030_BOOL,w_00004_00009_BOOL,aux10032_BOOL,aux10033_BOOL],aux10034_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux10035_BOOL);
constraint int_eq_reif(TWorkers_00004_00010_INTEGER,1,aux10036_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10037,s_00010],0);
constraint int_lt_reif(s_00007,aux10037,aux10038_BOOL);
constraint int_le_reif(s_00010, s_00007,aux10039_BOOL);
constraint array_bool_and([aux10035_BOOL,aux10036_BOOL,w_00004_00010_BOOL,aux10038_BOOL,aux10039_BOOL],aux10040_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux10041_BOOL);
constraint int_eq_reif(TWorkers_00004_00011_INTEGER,1,aux10042_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10043,s_00011],0);
constraint int_lt_reif(s_00007,aux10043,aux10044_BOOL);
constraint int_le_reif(s_00011, s_00007,aux10045_BOOL);
constraint array_bool_and([aux10041_BOOL,aux10042_BOOL,w_00004_00011_BOOL,aux10044_BOOL,aux10045_BOOL],aux10046_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux10047_BOOL);
constraint int_eq_reif(TWorkers_00004_00012_INTEGER,1,aux10048_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10049,s_00012],0);
constraint int_lt_reif(s_00007,aux10049,aux10050_BOOL);
constraint int_le_reif(s_00012, s_00007,aux10051_BOOL);
constraint array_bool_and([aux10047_BOOL,aux10048_BOOL,w_00004_00012_BOOL,aux10050_BOOL,aux10051_BOOL],aux10052_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux10053_BOOL);
constraint int_eq_reif(TWorkers_00004_00013_INTEGER,1,aux10054_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10055,s_00013],0);
constraint int_lt_reif(s_00007,aux10055,aux10056_BOOL);
constraint int_le_reif(s_00013, s_00007,aux10057_BOOL);
constraint array_bool_and([aux10053_BOOL,aux10054_BOOL,w_00004_00013_BOOL,aux10056_BOOL,aux10057_BOOL],aux10058_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux10059_BOOL);
constraint int_eq_reif(TWorkers_00004_00014_INTEGER,1,aux10060_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux10061,s_00014],0);
constraint int_lt_reif(s_00007,aux10061,aux10062_BOOL);
constraint int_le_reif(s_00014, s_00007,aux10063_BOOL);
constraint array_bool_and([aux10059_BOOL,aux10060_BOOL,w_00004_00014_BOOL,aux10062_BOOL,aux10063_BOOL],aux10064_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux10065_BOOL);
constraint int_eq_reif(TWorkers_00004_00015_INTEGER,1,aux10066_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10067,s_00015],0);
constraint int_lt_reif(s_00007,aux10067,aux10068_BOOL);
constraint int_le_reif(s_00015, s_00007,aux10069_BOOL);
constraint array_bool_and([aux10065_BOOL,aux10066_BOOL,w_00004_00015_BOOL,aux10068_BOOL,aux10069_BOOL],aux10070_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux10071_BOOL);
constraint int_eq_reif(TWorkers_00004_00016_INTEGER,1,aux10072_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10073,s_00016],0);
constraint int_lt_reif(s_00007,aux10073,aux10074_BOOL);
constraint int_le_reif(s_00016, s_00007,aux10075_BOOL);
constraint array_bool_and([aux10071_BOOL,aux10072_BOOL,w_00004_00016_BOOL,aux10074_BOOL,aux10075_BOOL],aux10076_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux10077_BOOL);
constraint int_eq_reif(TWorkers_00004_00017_INTEGER,1,aux10078_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10079,s_00017],0);
constraint int_lt_reif(s_00007,aux10079,aux10080_BOOL);
constraint int_le_reif(s_00017, s_00007,aux10081_BOOL);
constraint array_bool_and([aux10077_BOOL,aux10078_BOOL,w_00004_00017_BOOL,aux10080_BOOL,aux10081_BOOL],aux10082_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux10083_BOOL);
constraint int_eq_reif(TWorkers_00004_00018_INTEGER,1,aux10084_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10085,s_00018],0);
constraint int_lt_reif(s_00007,aux10085,aux10086_BOOL);
constraint int_le_reif(s_00018, s_00007,aux10087_BOOL);
constraint array_bool_and([aux10083_BOOL,aux10084_BOOL,w_00004_00018_BOOL,aux10086_BOOL,aux10087_BOOL],aux10088_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux10089_BOOL);
constraint int_eq_reif(TWorkers_00004_00019_INTEGER,1,aux10090_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10091,s_00019],0);
constraint int_lt_reif(s_00007,aux10091,aux10092_BOOL);
constraint int_le_reif(s_00019, s_00007,aux10093_BOOL);
constraint array_bool_and([aux10089_BOOL,aux10090_BOOL,w_00004_00019_BOOL,aux10092_BOOL,aux10093_BOOL],aux10094_BOOL);
constraint int_eq_reif(TWorkers_00004_00007_INTEGER,1,aux10095_BOOL);
constraint int_eq_reif(TWorkers_00004_00020_INTEGER,1,aux10096_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10097,s_00020],0);
constraint int_lt_reif(s_00007,aux10097,aux10098_BOOL);
constraint int_le_reif(s_00020, s_00007,aux10099_BOOL);
constraint array_bool_and([aux10095_BOOL,aux10096_BOOL,w_00004_00020_BOOL,aux10098_BOOL,aux10099_BOOL],aux10100_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux9986_INTEGER,aux9992_INTEGER,aux9998_INTEGER,aux10004_INTEGER,aux10010_INTEGER,aux10016_INTEGER,aux10022_INTEGER,aux10028_INTEGER,aux10034_INTEGER,aux10040_INTEGER,aux10046_INTEGER,aux10052_INTEGER,aux10058_INTEGER,aux10064_INTEGER,aux10070_INTEGER,aux10076_INTEGER,aux10082_INTEGER,aux10088_INTEGER,aux10094_INTEGER,aux10100_INTEGER,1],0,aux10101_BOOL);
constraint array_bool_and([aux7840_BOOL,aux7959_BOOL,aux8078_BOOL,aux8197_BOOL,aux8316_BOOL,aux8435_BOOL,aux8554_BOOL,aux8673_BOOL,aux8792_BOOL,aux8911_BOOL,aux9030_BOOL,aux9149_BOOL,aux9268_BOOL,aux9387_BOOL,aux9506_BOOL,aux9625_BOOL,aux9744_BOOL,aux9863_BOOL,aux9982_BOOL,aux10101_BOOL],aux10102_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[TWorkers_00004_00001_INTEGER,TWorkers_00004_00002_INTEGER,TWorkers_00004_00003_INTEGER,TWorkers_00004_00004_INTEGER,TWorkers_00004_00005_INTEGER,TWorkers_00004_00006_INTEGER,TWorkers_00004_00007_INTEGER,TWorkers_00004_00008_INTEGER,TWorkers_00004_00009_INTEGER,TWorkers_00004_00010_INTEGER,TWorkers_00004_00011_INTEGER,TWorkers_00004_00012_INTEGER,TWorkers_00004_00013_INTEGER,TWorkers_00004_00014_INTEGER,TWorkers_00004_00015_INTEGER,TWorkers_00004_00016_INTEGER,TWorkers_00004_00017_INTEGER,TWorkers_00004_00018_INTEGER,TWorkers_00004_00019_INTEGER,TWorkers_00004_00020_INTEGER,1],0,aux10103_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10104,s_00001],0);
constraint int_lt_reif(s_00007,aux10104,aux10105_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux10106_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux10107_BOOL);
constraint int_le_reif(s_00001, s_00007,aux10108_BOOL);
constraint array_bool_and([aux10105_BOOL,aux10106_BOOL,aux10107_BOOL,w_00005_00001_BOOL,aux10108_BOOL],aux10109_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10110,s_00008],0);
constraint int_lt_reif(s_00007,aux10110,aux10111_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux10112_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux10113_BOOL);
constraint int_le_reif(s_00008, s_00007,aux10114_BOOL);
constraint array_bool_and([aux10111_BOOL,aux10112_BOOL,aux10113_BOOL,w_00005_00008_BOOL,aux10114_BOOL],aux10115_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10116,s_00002],0);
constraint int_lt_reif(s_00007,aux10116,aux10117_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux10118_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux10119_BOOL);
constraint int_le_reif(s_00002, s_00007,aux10120_BOOL);
constraint array_bool_and([aux10117_BOOL,aux10118_BOOL,aux10119_BOOL,w_00005_00002_BOOL,aux10120_BOOL],aux10121_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10122,s_00010],0);
constraint int_lt_reif(s_00007,aux10122,aux10123_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux10124_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux10125_BOOL);
constraint int_le_reif(s_00010, s_00007,aux10126_BOOL);
constraint array_bool_and([aux10123_BOOL,aux10124_BOOL,aux10125_BOOL,w_00005_00010_BOOL,aux10126_BOOL],aux10127_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10128,s_00004],0);
constraint int_lt_reif(s_00007,aux10128,aux10129_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux10130_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux10131_BOOL);
constraint int_le_reif(s_00004, s_00007,aux10132_BOOL);
constraint array_bool_and([aux10129_BOOL,aux10130_BOOL,aux10131_BOOL,w_00005_00004_BOOL,aux10132_BOOL],aux10133_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10134,s_00005],0);
constraint int_lt_reif(s_00007,aux10134,aux10135_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10136_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux10137_BOOL);
constraint int_le_reif(s_00005, s_00007,aux10138_BOOL);
constraint array_bool_and([aux10135_BOOL,aux10136_BOOL,aux10137_BOOL,w_00005_00005_BOOL,aux10138_BOOL],aux10139_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10140,s_00013],0);
constraint int_lt_reif(s_00007,aux10140,aux10141_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux10142_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux10143_BOOL);
constraint int_le_reif(s_00013, s_00007,aux10144_BOOL);
constraint array_bool_and([aux10141_BOOL,aux10142_BOOL,aux10143_BOOL,w_00005_00013_BOOL,aux10144_BOOL],aux10145_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10146,s_00017],0);
constraint int_lt_reif(s_00007,aux10146,aux10147_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux10148_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux10149_BOOL);
constraint int_le_reif(s_00017, s_00007,aux10150_BOOL);
constraint array_bool_and([aux10147_BOOL,aux10148_BOOL,aux10149_BOOL,w_00005_00017_BOOL,aux10150_BOOL],aux10151_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10152,s_00009],0);
constraint int_lt_reif(s_00007,aux10152,aux10153_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux10154_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux10155_BOOL);
constraint int_le_reif(s_00009, s_00007,aux10156_BOOL);
constraint array_bool_and([aux10153_BOOL,aux10154_BOOL,aux10155_BOOL,w_00005_00009_BOOL,aux10156_BOOL],aux10157_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10158,s_00003],0);
constraint int_lt_reif(s_00007,aux10158,aux10159_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux10160_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux10161_BOOL);
constraint int_le_reif(s_00003, s_00007,aux10162_BOOL);
constraint array_bool_and([aux10159_BOOL,aux10160_BOOL,aux10161_BOOL,w_00005_00003_BOOL,aux10162_BOOL],aux10163_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10164,s_00011],0);
constraint int_lt_reif(s_00007,aux10164,aux10165_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux10166_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux10167_BOOL);
constraint int_le_reif(s_00011, s_00007,aux10168_BOOL);
constraint array_bool_and([aux10165_BOOL,aux10166_BOOL,aux10167_BOOL,w_00005_00011_BOOL,aux10168_BOOL],aux10169_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10170,s_00012],0);
constraint int_lt_reif(s_00007,aux10170,aux10171_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux10172_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux10173_BOOL);
constraint int_le_reif(s_00012, s_00007,aux10174_BOOL);
constraint array_bool_and([aux10171_BOOL,aux10172_BOOL,aux10173_BOOL,w_00005_00012_BOOL,aux10174_BOOL],aux10175_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10176,s_00006],0);
constraint int_lt_reif(s_00007,aux10176,aux10177_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux10178_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux10179_BOOL);
constraint int_le_reif(s_00006, s_00007,aux10180_BOOL);
constraint array_bool_and([aux10177_BOOL,aux10178_BOOL,aux10179_BOOL,w_00005_00006_BOOL,aux10180_BOOL],aux10181_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10182,s_00015],0);
constraint int_lt_reif(s_00007,aux10182,aux10183_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux10184_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux10185_BOOL);
constraint int_le_reif(s_00015, s_00007,aux10186_BOOL);
constraint array_bool_and([aux10183_BOOL,aux10184_BOOL,aux10185_BOOL,w_00005_00015_BOOL,aux10186_BOOL],aux10187_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10188,s_00019],0);
constraint int_lt_reif(s_00007,aux10188,aux10189_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux10190_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux10191_BOOL);
constraint int_le_reif(s_00019, s_00007,aux10192_BOOL);
constraint array_bool_and([aux10189_BOOL,aux10190_BOOL,aux10191_BOOL,w_00005_00019_BOOL,aux10192_BOOL],aux10193_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10194,s_00016],0);
constraint int_lt_reif(s_00007,aux10194,aux10195_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux10196_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux10197_BOOL);
constraint int_le_reif(s_00016, s_00007,aux10198_BOOL);
constraint array_bool_and([aux10195_BOOL,aux10196_BOOL,aux10197_BOOL,w_00005_00016_BOOL,aux10198_BOOL],aux10199_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10200,s_00018],0);
constraint int_lt_reif(s_00007,aux10200,aux10201_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux10202_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux10203_BOOL);
constraint int_le_reif(s_00018, s_00007,aux10204_BOOL);
constraint array_bool_and([aux10201_BOOL,aux10202_BOOL,aux10203_BOOL,w_00005_00018_BOOL,aux10204_BOOL],aux10205_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10206,s_00020],0);
constraint int_lt_reif(s_00007,aux10206,aux10207_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux10208_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux10209_BOOL);
constraint int_le_reif(s_00020, s_00007,aux10210_BOOL);
constraint array_bool_and([aux10207_BOOL,aux10208_BOOL,aux10209_BOOL,w_00005_00020_BOOL,aux10210_BOOL],aux10211_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux10212,s_00014],0);
constraint int_lt_reif(s_00007,aux10212,aux10213_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux10214_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10215_BOOL);
constraint int_le_reif(s_00014, s_00007,aux10216_BOOL);
constraint array_bool_and([aux10213_BOOL,aux10214_BOOL,aux10215_BOOL,w_00005_00014_BOOL,aux10216_BOOL],aux10217_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10218,s_00007],0);
constraint int_lt_reif(s_00007,aux10218,aux10219_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux10220_BOOL);
constraint array_bool_and([aux10219_BOOL,aux10220_BOOL,w_00005_00007_BOOL],aux10221_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux10109_INTEGER,aux10115_INTEGER,aux10121_INTEGER,aux10127_INTEGER,aux10133_INTEGER,aux10139_INTEGER,aux10145_INTEGER,aux10151_INTEGER,aux10157_INTEGER,aux10163_INTEGER,aux10169_INTEGER,aux10175_INTEGER,aux10181_INTEGER,aux10187_INTEGER,aux10193_INTEGER,aux10199_INTEGER,aux10205_INTEGER,aux10211_INTEGER,aux10217_INTEGER,aux10221_INTEGER,1],0,aux10222_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10223,s_00001],0);
constraint int_lt_reif(s_00012,aux10223,aux10224_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux10225_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux10226_BOOL);
constraint int_le_reif(s_00001, s_00012,aux10227_BOOL);
constraint array_bool_and([aux10224_BOOL,aux10225_BOOL,aux10226_BOOL,w_00005_00001_BOOL,aux10227_BOOL],aux10228_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10229,s_00008],0);
constraint int_lt_reif(s_00012,aux10229,aux10230_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux10231_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux10232_BOOL);
constraint int_le_reif(s_00008, s_00012,aux10233_BOOL);
constraint array_bool_and([aux10230_BOOL,aux10231_BOOL,aux10232_BOOL,w_00005_00008_BOOL,aux10233_BOOL],aux10234_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10235,s_00002],0);
constraint int_lt_reif(s_00012,aux10235,aux10236_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux10237_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux10238_BOOL);
constraint int_le_reif(s_00002, s_00012,aux10239_BOOL);
constraint array_bool_and([aux10236_BOOL,aux10237_BOOL,aux10238_BOOL,w_00005_00002_BOOL,aux10239_BOOL],aux10240_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10241,s_00004],0);
constraint int_lt_reif(s_00012,aux10241,aux10242_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux10243_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux10244_BOOL);
constraint int_le_reif(s_00004, s_00012,aux10245_BOOL);
constraint array_bool_and([aux10242_BOOL,aux10243_BOOL,aux10244_BOOL,w_00005_00004_BOOL,aux10245_BOOL],aux10246_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10247,s_00005],0);
constraint int_lt_reif(s_00012,aux10247,aux10248_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10249_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux10250_BOOL);
constraint int_le_reif(s_00005, s_00012,aux10251_BOOL);
constraint array_bool_and([aux10248_BOOL,aux10249_BOOL,aux10250_BOOL,w_00005_00005_BOOL,aux10251_BOOL],aux10252_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10253,s_00007],0);
constraint int_lt_reif(s_00012,aux10253,aux10254_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux10255_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux10256_BOOL);
constraint int_le_reif(s_00007, s_00012,aux10257_BOOL);
constraint array_bool_and([aux10254_BOOL,aux10255_BOOL,aux10256_BOOL,w_00005_00007_BOOL,aux10257_BOOL],aux10258_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10259,s_00009],0);
constraint int_lt_reif(s_00012,aux10259,aux10260_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux10261_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux10262_BOOL);
constraint int_le_reif(s_00009, s_00012,aux10263_BOOL);
constraint array_bool_and([aux10260_BOOL,aux10261_BOOL,aux10262_BOOL,w_00005_00009_BOOL,aux10263_BOOL],aux10264_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10265,s_00010],0);
constraint int_lt_reif(s_00012,aux10265,aux10266_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux10267_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux10268_BOOL);
constraint int_le_reif(s_00010, s_00012,aux10269_BOOL);
constraint array_bool_and([aux10266_BOOL,aux10267_BOOL,aux10268_BOOL,w_00005_00010_BOOL,aux10269_BOOL],aux10270_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10271,s_00013],0);
constraint int_lt_reif(s_00012,aux10271,aux10272_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux10273_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux10274_BOOL);
constraint int_le_reif(s_00013, s_00012,aux10275_BOOL);
constraint array_bool_and([aux10272_BOOL,aux10273_BOOL,aux10274_BOOL,w_00005_00013_BOOL,aux10275_BOOL],aux10276_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10277,s_00003],0);
constraint int_lt_reif(s_00012,aux10277,aux10278_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux10279_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux10280_BOOL);
constraint int_le_reif(s_00003, s_00012,aux10281_BOOL);
constraint array_bool_and([aux10278_BOOL,aux10279_BOOL,aux10280_BOOL,w_00005_00003_BOOL,aux10281_BOOL],aux10282_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10283,s_00017],0);
constraint int_lt_reif(s_00012,aux10283,aux10284_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux10285_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux10286_BOOL);
constraint int_le_reif(s_00017, s_00012,aux10287_BOOL);
constraint array_bool_and([aux10284_BOOL,aux10285_BOOL,aux10286_BOOL,w_00005_00017_BOOL,aux10287_BOOL],aux10288_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10289,s_00006],0);
constraint int_lt_reif(s_00012,aux10289,aux10290_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux10291_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux10292_BOOL);
constraint int_le_reif(s_00006, s_00012,aux10293_BOOL);
constraint array_bool_and([aux10290_BOOL,aux10291_BOOL,aux10292_BOOL,w_00005_00006_BOOL,aux10293_BOOL],aux10294_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10295,s_00011],0);
constraint int_lt_reif(s_00012,aux10295,aux10296_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux10297_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux10298_BOOL);
constraint int_le_reif(s_00011, s_00012,aux10299_BOOL);
constraint array_bool_and([aux10296_BOOL,aux10297_BOOL,aux10298_BOOL,w_00005_00011_BOOL,aux10299_BOOL],aux10300_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10301,s_00015],0);
constraint int_lt_reif(s_00012,aux10301,aux10302_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux10303_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux10304_BOOL);
constraint int_le_reif(s_00015, s_00012,aux10305_BOOL);
constraint array_bool_and([aux10302_BOOL,aux10303_BOOL,aux10304_BOOL,w_00005_00015_BOOL,aux10305_BOOL],aux10306_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10307,s_00019],0);
constraint int_lt_reif(s_00012,aux10307,aux10308_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux10309_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux10310_BOOL);
constraint int_le_reif(s_00019, s_00012,aux10311_BOOL);
constraint array_bool_and([aux10308_BOOL,aux10309_BOOL,aux10310_BOOL,w_00005_00019_BOOL,aux10311_BOOL],aux10312_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10313,s_00016],0);
constraint int_lt_reif(s_00012,aux10313,aux10314_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux10315_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux10316_BOOL);
constraint int_le_reif(s_00016, s_00012,aux10317_BOOL);
constraint array_bool_and([aux10314_BOOL,aux10315_BOOL,aux10316_BOOL,w_00005_00016_BOOL,aux10317_BOOL],aux10318_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10319,s_00018],0);
constraint int_lt_reif(s_00012,aux10319,aux10320_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux10321_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux10322_BOOL);
constraint int_le_reif(s_00018, s_00012,aux10323_BOOL);
constraint array_bool_and([aux10320_BOOL,aux10321_BOOL,aux10322_BOOL,w_00005_00018_BOOL,aux10323_BOOL],aux10324_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10325,s_00020],0);
constraint int_lt_reif(s_00012,aux10325,aux10326_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux10327_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux10328_BOOL);
constraint int_le_reif(s_00020, s_00012,aux10329_BOOL);
constraint array_bool_and([aux10326_BOOL,aux10327_BOOL,aux10328_BOOL,w_00005_00020_BOOL,aux10329_BOOL],aux10330_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux10331,s_00014],0);
constraint int_lt_reif(s_00012,aux10331,aux10332_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux10333_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10334_BOOL);
constraint int_le_reif(s_00014, s_00012,aux10335_BOOL);
constraint array_bool_and([aux10332_BOOL,aux10333_BOOL,aux10334_BOOL,w_00005_00014_BOOL,aux10335_BOOL],aux10336_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10337,s_00012],0);
constraint int_lt_reif(s_00012,aux10337,aux10338_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux10339_BOOL);
constraint array_bool_and([aux10338_BOOL,aux10339_BOOL,w_00005_00012_BOOL],aux10340_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux10228_INTEGER,aux10234_INTEGER,aux10240_INTEGER,aux10246_INTEGER,aux10252_INTEGER,aux10258_INTEGER,aux10264_INTEGER,aux10270_INTEGER,aux10276_INTEGER,aux10282_INTEGER,aux10288_INTEGER,aux10294_INTEGER,aux10300_INTEGER,aux10306_INTEGER,aux10312_INTEGER,aux10318_INTEGER,aux10324_INTEGER,aux10330_INTEGER,aux10336_INTEGER,aux10340_INTEGER,1],0,aux10341_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10342,s_00001],0);
constraint int_lt_reif(s_00005,aux10342,aux10343_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux10344_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10345_BOOL);
constraint int_le_reif(s_00001, s_00005,aux10346_BOOL);
constraint array_bool_and([aux10343_BOOL,aux10344_BOOL,aux10345_BOOL,w_00005_00001_BOOL,aux10346_BOOL],aux10347_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10348,s_00008],0);
constraint int_lt_reif(s_00005,aux10348,aux10349_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10350_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux10351_BOOL);
constraint int_le_reif(s_00008, s_00005,aux10352_BOOL);
constraint array_bool_and([aux10349_BOOL,aux10350_BOOL,aux10351_BOOL,w_00005_00008_BOOL,aux10352_BOOL],aux10353_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10354,s_00002],0);
constraint int_lt_reif(s_00005,aux10354,aux10355_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux10356_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10357_BOOL);
constraint int_le_reif(s_00002, s_00005,aux10358_BOOL);
constraint array_bool_and([aux10355_BOOL,aux10356_BOOL,aux10357_BOOL,w_00005_00002_BOOL,aux10358_BOOL],aux10359_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10360,s_00010],0);
constraint int_lt_reif(s_00005,aux10360,aux10361_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10362_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux10363_BOOL);
constraint int_le_reif(s_00010, s_00005,aux10364_BOOL);
constraint array_bool_and([aux10361_BOOL,aux10362_BOOL,aux10363_BOOL,w_00005_00010_BOOL,aux10364_BOOL],aux10365_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10366,s_00004],0);
constraint int_lt_reif(s_00005,aux10366,aux10367_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux10368_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10369_BOOL);
constraint int_le_reif(s_00004, s_00005,aux10370_BOOL);
constraint array_bool_and([aux10367_BOOL,aux10368_BOOL,aux10369_BOOL,w_00005_00004_BOOL,aux10370_BOOL],aux10371_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10372,s_00013],0);
constraint int_lt_reif(s_00005,aux10372,aux10373_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10374_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux10375_BOOL);
constraint int_le_reif(s_00013, s_00005,aux10376_BOOL);
constraint array_bool_and([aux10373_BOOL,aux10374_BOOL,aux10375_BOOL,w_00005_00013_BOOL,aux10376_BOOL],aux10377_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10378,s_00007],0);
constraint int_lt_reif(s_00005,aux10378,aux10379_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10380_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux10381_BOOL);
constraint int_le_reif(s_00007, s_00005,aux10382_BOOL);
constraint array_bool_and([aux10379_BOOL,aux10380_BOOL,aux10381_BOOL,w_00005_00007_BOOL,aux10382_BOOL],aux10383_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10384,s_00017],0);
constraint int_lt_reif(s_00005,aux10384,aux10385_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10386_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux10387_BOOL);
constraint int_le_reif(s_00017, s_00005,aux10388_BOOL);
constraint array_bool_and([aux10385_BOOL,aux10386_BOOL,aux10387_BOOL,w_00005_00017_BOOL,aux10388_BOOL],aux10389_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10390,s_00009],0);
constraint int_lt_reif(s_00005,aux10390,aux10391_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10392_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux10393_BOOL);
constraint int_le_reif(s_00009, s_00005,aux10394_BOOL);
constraint array_bool_and([aux10391_BOOL,aux10392_BOOL,aux10393_BOOL,w_00005_00009_BOOL,aux10394_BOOL],aux10395_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10396,s_00003],0);
constraint int_lt_reif(s_00005,aux10396,aux10397_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux10398_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10399_BOOL);
constraint int_le_reif(s_00003, s_00005,aux10400_BOOL);
constraint array_bool_and([aux10397_BOOL,aux10398_BOOL,aux10399_BOOL,w_00005_00003_BOOL,aux10400_BOOL],aux10401_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10402,s_00011],0);
constraint int_lt_reif(s_00005,aux10402,aux10403_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10404_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux10405_BOOL);
constraint int_le_reif(s_00011, s_00005,aux10406_BOOL);
constraint array_bool_and([aux10403_BOOL,aux10404_BOOL,aux10405_BOOL,w_00005_00011_BOOL,aux10406_BOOL],aux10407_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10408,s_00012],0);
constraint int_lt_reif(s_00005,aux10408,aux10409_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10410_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux10411_BOOL);
constraint int_le_reif(s_00012, s_00005,aux10412_BOOL);
constraint array_bool_and([aux10409_BOOL,aux10410_BOOL,aux10411_BOOL,w_00005_00012_BOOL,aux10412_BOOL],aux10413_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10414,s_00015],0);
constraint int_lt_reif(s_00005,aux10414,aux10415_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10416_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux10417_BOOL);
constraint int_le_reif(s_00015, s_00005,aux10418_BOOL);
constraint array_bool_and([aux10415_BOOL,aux10416_BOOL,aux10417_BOOL,w_00005_00015_BOOL,aux10418_BOOL],aux10419_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10420,s_00006],0);
constraint int_lt_reif(s_00005,aux10420,aux10421_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10422_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux10423_BOOL);
constraint int_le_reif(s_00006, s_00005,aux10424_BOOL);
constraint array_bool_and([aux10421_BOOL,aux10422_BOOL,aux10423_BOOL,w_00005_00006_BOOL,aux10424_BOOL],aux10425_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10426,s_00019],0);
constraint int_lt_reif(s_00005,aux10426,aux10427_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10428_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux10429_BOOL);
constraint int_le_reif(s_00019, s_00005,aux10430_BOOL);
constraint array_bool_and([aux10427_BOOL,aux10428_BOOL,aux10429_BOOL,w_00005_00019_BOOL,aux10430_BOOL],aux10431_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10432,s_00016],0);
constraint int_lt_reif(s_00005,aux10432,aux10433_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10434_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux10435_BOOL);
constraint int_le_reif(s_00016, s_00005,aux10436_BOOL);
constraint array_bool_and([aux10433_BOOL,aux10434_BOOL,aux10435_BOOL,w_00005_00016_BOOL,aux10436_BOOL],aux10437_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10438,s_00018],0);
constraint int_lt_reif(s_00005,aux10438,aux10439_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10440_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux10441_BOOL);
constraint int_le_reif(s_00018, s_00005,aux10442_BOOL);
constraint array_bool_and([aux10439_BOOL,aux10440_BOOL,aux10441_BOOL,w_00005_00018_BOOL,aux10442_BOOL],aux10443_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10444,s_00020],0);
constraint int_lt_reif(s_00005,aux10444,aux10445_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10446_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux10447_BOOL);
constraint int_le_reif(s_00020, s_00005,aux10448_BOOL);
constraint array_bool_and([aux10445_BOOL,aux10446_BOOL,aux10447_BOOL,w_00005_00020_BOOL,aux10448_BOOL],aux10449_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux10450,s_00014],0);
constraint int_lt_reif(s_00005,aux10450,aux10451_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10452_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10453_BOOL);
constraint int_le_reif(s_00014, s_00005,aux10454_BOOL);
constraint array_bool_and([aux10451_BOOL,aux10452_BOOL,aux10453_BOOL,w_00005_00014_BOOL,aux10454_BOOL],aux10455_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10456,s_00005],0);
constraint int_lt_reif(s_00005,aux10456,aux10457_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10458_BOOL);
constraint array_bool_and([aux10457_BOOL,aux10458_BOOL,w_00005_00005_BOOL],aux10459_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux10347_INTEGER,aux10353_INTEGER,aux10359_INTEGER,aux10365_INTEGER,aux10371_INTEGER,aux10377_INTEGER,aux10383_INTEGER,aux10389_INTEGER,aux10395_INTEGER,aux10401_INTEGER,aux10407_INTEGER,aux10413_INTEGER,aux10419_INTEGER,aux10425_INTEGER,aux10431_INTEGER,aux10437_INTEGER,aux10443_INTEGER,aux10449_INTEGER,aux10455_INTEGER,aux10459_INTEGER,1],0,aux10460_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10461,s_00001],0);
constraint int_lt_reif(s_00013,aux10461,aux10462_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux10463_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux10464_BOOL);
constraint int_le_reif(s_00001, s_00013,aux10465_BOOL);
constraint array_bool_and([aux10462_BOOL,aux10463_BOOL,aux10464_BOOL,w_00005_00001_BOOL,aux10465_BOOL],aux10466_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10467,s_00008],0);
constraint int_lt_reif(s_00013,aux10467,aux10468_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux10469_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux10470_BOOL);
constraint int_le_reif(s_00008, s_00013,aux10471_BOOL);
constraint array_bool_and([aux10468_BOOL,aux10469_BOOL,aux10470_BOOL,w_00005_00008_BOOL,aux10471_BOOL],aux10472_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10473,s_00002],0);
constraint int_lt_reif(s_00013,aux10473,aux10474_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux10475_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux10476_BOOL);
constraint int_le_reif(s_00002, s_00013,aux10477_BOOL);
constraint array_bool_and([aux10474_BOOL,aux10475_BOOL,aux10476_BOOL,w_00005_00002_BOOL,aux10477_BOOL],aux10478_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10479,s_00004],0);
constraint int_lt_reif(s_00013,aux10479,aux10480_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux10481_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux10482_BOOL);
constraint int_le_reif(s_00004, s_00013,aux10483_BOOL);
constraint array_bool_and([aux10480_BOOL,aux10481_BOOL,aux10482_BOOL,w_00005_00004_BOOL,aux10483_BOOL],aux10484_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10485,s_00005],0);
constraint int_lt_reif(s_00013,aux10485,aux10486_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10487_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux10488_BOOL);
constraint int_le_reif(s_00005, s_00013,aux10489_BOOL);
constraint array_bool_and([aux10486_BOOL,aux10487_BOOL,aux10488_BOOL,w_00005_00005_BOOL,aux10489_BOOL],aux10490_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10491,s_00007],0);
constraint int_lt_reif(s_00013,aux10491,aux10492_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux10493_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux10494_BOOL);
constraint int_le_reif(s_00007, s_00013,aux10495_BOOL);
constraint array_bool_and([aux10492_BOOL,aux10493_BOOL,aux10494_BOOL,w_00005_00007_BOOL,aux10495_BOOL],aux10496_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10497,s_00009],0);
constraint int_lt_reif(s_00013,aux10497,aux10498_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux10499_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux10500_BOOL);
constraint int_le_reif(s_00009, s_00013,aux10501_BOOL);
constraint array_bool_and([aux10498_BOOL,aux10499_BOOL,aux10500_BOOL,w_00005_00009_BOOL,aux10501_BOOL],aux10502_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10503,s_00010],0);
constraint int_lt_reif(s_00013,aux10503,aux10504_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux10505_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux10506_BOOL);
constraint int_le_reif(s_00010, s_00013,aux10507_BOOL);
constraint array_bool_and([aux10504_BOOL,aux10505_BOOL,aux10506_BOOL,w_00005_00010_BOOL,aux10507_BOOL],aux10508_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10509,s_00003],0);
constraint int_lt_reif(s_00013,aux10509,aux10510_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux10511_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux10512_BOOL);
constraint int_le_reif(s_00003, s_00013,aux10513_BOOL);
constraint array_bool_and([aux10510_BOOL,aux10511_BOOL,aux10512_BOOL,w_00005_00003_BOOL,aux10513_BOOL],aux10514_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10515,s_00017],0);
constraint int_lt_reif(s_00013,aux10515,aux10516_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux10517_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux10518_BOOL);
constraint int_le_reif(s_00017, s_00013,aux10519_BOOL);
constraint array_bool_and([aux10516_BOOL,aux10517_BOOL,aux10518_BOOL,w_00005_00017_BOOL,aux10519_BOOL],aux10520_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10521,s_00006],0);
constraint int_lt_reif(s_00013,aux10521,aux10522_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux10523_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux10524_BOOL);
constraint int_le_reif(s_00006, s_00013,aux10525_BOOL);
constraint array_bool_and([aux10522_BOOL,aux10523_BOOL,aux10524_BOOL,w_00005_00006_BOOL,aux10525_BOOL],aux10526_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10527,s_00011],0);
constraint int_lt_reif(s_00013,aux10527,aux10528_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux10529_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux10530_BOOL);
constraint int_le_reif(s_00011, s_00013,aux10531_BOOL);
constraint array_bool_and([aux10528_BOOL,aux10529_BOOL,aux10530_BOOL,w_00005_00011_BOOL,aux10531_BOOL],aux10532_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10533,s_00012],0);
constraint int_lt_reif(s_00013,aux10533,aux10534_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux10535_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux10536_BOOL);
constraint int_le_reif(s_00012, s_00013,aux10537_BOOL);
constraint array_bool_and([aux10534_BOOL,aux10535_BOOL,aux10536_BOOL,w_00005_00012_BOOL,aux10537_BOOL],aux10538_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10539,s_00015],0);
constraint int_lt_reif(s_00013,aux10539,aux10540_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux10541_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux10542_BOOL);
constraint int_le_reif(s_00015, s_00013,aux10543_BOOL);
constraint array_bool_and([aux10540_BOOL,aux10541_BOOL,aux10542_BOOL,w_00005_00015_BOOL,aux10543_BOOL],aux10544_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10545,s_00019],0);
constraint int_lt_reif(s_00013,aux10545,aux10546_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux10547_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux10548_BOOL);
constraint int_le_reif(s_00019, s_00013,aux10549_BOOL);
constraint array_bool_and([aux10546_BOOL,aux10547_BOOL,aux10548_BOOL,w_00005_00019_BOOL,aux10549_BOOL],aux10550_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10551,s_00016],0);
constraint int_lt_reif(s_00013,aux10551,aux10552_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux10553_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux10554_BOOL);
constraint int_le_reif(s_00016, s_00013,aux10555_BOOL);
constraint array_bool_and([aux10552_BOOL,aux10553_BOOL,aux10554_BOOL,w_00005_00016_BOOL,aux10555_BOOL],aux10556_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10557,s_00018],0);
constraint int_lt_reif(s_00013,aux10557,aux10558_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux10559_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux10560_BOOL);
constraint int_le_reif(s_00018, s_00013,aux10561_BOOL);
constraint array_bool_and([aux10558_BOOL,aux10559_BOOL,aux10560_BOOL,w_00005_00018_BOOL,aux10561_BOOL],aux10562_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10563,s_00020],0);
constraint int_lt_reif(s_00013,aux10563,aux10564_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux10565_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux10566_BOOL);
constraint int_le_reif(s_00020, s_00013,aux10567_BOOL);
constraint array_bool_and([aux10564_BOOL,aux10565_BOOL,aux10566_BOOL,w_00005_00020_BOOL,aux10567_BOOL],aux10568_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux10569,s_00014],0);
constraint int_lt_reif(s_00013,aux10569,aux10570_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux10571_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10572_BOOL);
constraint int_le_reif(s_00014, s_00013,aux10573_BOOL);
constraint array_bool_and([aux10570_BOOL,aux10571_BOOL,aux10572_BOOL,w_00005_00014_BOOL,aux10573_BOOL],aux10574_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10575,s_00013],0);
constraint int_lt_reif(s_00013,aux10575,aux10576_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux10577_BOOL);
constraint array_bool_and([aux10576_BOOL,aux10577_BOOL,w_00005_00013_BOOL],aux10578_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux10466_INTEGER,aux10472_INTEGER,aux10478_INTEGER,aux10484_INTEGER,aux10490_INTEGER,aux10496_INTEGER,aux10502_INTEGER,aux10508_INTEGER,aux10514_INTEGER,aux10520_INTEGER,aux10526_INTEGER,aux10532_INTEGER,aux10538_INTEGER,aux10544_INTEGER,aux10550_INTEGER,aux10556_INTEGER,aux10562_INTEGER,aux10568_INTEGER,aux10574_INTEGER,aux10578_INTEGER,1],0,aux10579_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10580,s_00001],0);
constraint int_lt_reif(s_00011,aux10580,aux10581_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux10582_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux10583_BOOL);
constraint int_le_reif(s_00001, s_00011,aux10584_BOOL);
constraint array_bool_and([aux10581_BOOL,aux10582_BOOL,aux10583_BOOL,w_00005_00001_BOOL,aux10584_BOOL],aux10585_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10586,s_00008],0);
constraint int_lt_reif(s_00011,aux10586,aux10587_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux10588_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux10589_BOOL);
constraint int_le_reif(s_00008, s_00011,aux10590_BOOL);
constraint array_bool_and([aux10587_BOOL,aux10588_BOOL,aux10589_BOOL,w_00005_00008_BOOL,aux10590_BOOL],aux10591_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10592,s_00002],0);
constraint int_lt_reif(s_00011,aux10592,aux10593_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux10594_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux10595_BOOL);
constraint int_le_reif(s_00002, s_00011,aux10596_BOOL);
constraint array_bool_and([aux10593_BOOL,aux10594_BOOL,aux10595_BOOL,w_00005_00002_BOOL,aux10596_BOOL],aux10597_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10598,s_00004],0);
constraint int_lt_reif(s_00011,aux10598,aux10599_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux10600_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux10601_BOOL);
constraint int_le_reif(s_00004, s_00011,aux10602_BOOL);
constraint array_bool_and([aux10599_BOOL,aux10600_BOOL,aux10601_BOOL,w_00005_00004_BOOL,aux10602_BOOL],aux10603_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10604,s_00005],0);
constraint int_lt_reif(s_00011,aux10604,aux10605_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10606_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux10607_BOOL);
constraint int_le_reif(s_00005, s_00011,aux10608_BOOL);
constraint array_bool_and([aux10605_BOOL,aux10606_BOOL,aux10607_BOOL,w_00005_00005_BOOL,aux10608_BOOL],aux10609_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10610,s_00007],0);
constraint int_lt_reif(s_00011,aux10610,aux10611_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux10612_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux10613_BOOL);
constraint int_le_reif(s_00007, s_00011,aux10614_BOOL);
constraint array_bool_and([aux10611_BOOL,aux10612_BOOL,aux10613_BOOL,w_00005_00007_BOOL,aux10614_BOOL],aux10615_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10616,s_00009],0);
constraint int_lt_reif(s_00011,aux10616,aux10617_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux10618_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux10619_BOOL);
constraint int_le_reif(s_00009, s_00011,aux10620_BOOL);
constraint array_bool_and([aux10617_BOOL,aux10618_BOOL,aux10619_BOOL,w_00005_00009_BOOL,aux10620_BOOL],aux10621_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10622,s_00010],0);
constraint int_lt_reif(s_00011,aux10622,aux10623_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux10624_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux10625_BOOL);
constraint int_le_reif(s_00010, s_00011,aux10626_BOOL);
constraint array_bool_and([aux10623_BOOL,aux10624_BOOL,aux10625_BOOL,w_00005_00010_BOOL,aux10626_BOOL],aux10627_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10628,s_00013],0);
constraint int_lt_reif(s_00011,aux10628,aux10629_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux10630_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux10631_BOOL);
constraint int_le_reif(s_00013, s_00011,aux10632_BOOL);
constraint array_bool_and([aux10629_BOOL,aux10630_BOOL,aux10631_BOOL,w_00005_00013_BOOL,aux10632_BOOL],aux10633_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10634,s_00003],0);
constraint int_lt_reif(s_00011,aux10634,aux10635_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux10636_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux10637_BOOL);
constraint int_le_reif(s_00003, s_00011,aux10638_BOOL);
constraint array_bool_and([aux10635_BOOL,aux10636_BOOL,aux10637_BOOL,w_00005_00003_BOOL,aux10638_BOOL],aux10639_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10640,s_00017],0);
constraint int_lt_reif(s_00011,aux10640,aux10641_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux10642_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux10643_BOOL);
constraint int_le_reif(s_00017, s_00011,aux10644_BOOL);
constraint array_bool_and([aux10641_BOOL,aux10642_BOOL,aux10643_BOOL,w_00005_00017_BOOL,aux10644_BOOL],aux10645_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10646,s_00006],0);
constraint int_lt_reif(s_00011,aux10646,aux10647_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux10648_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux10649_BOOL);
constraint int_le_reif(s_00006, s_00011,aux10650_BOOL);
constraint array_bool_and([aux10647_BOOL,aux10648_BOOL,aux10649_BOOL,w_00005_00006_BOOL,aux10650_BOOL],aux10651_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10652,s_00012],0);
constraint int_lt_reif(s_00011,aux10652,aux10653_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux10654_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux10655_BOOL);
constraint int_le_reif(s_00012, s_00011,aux10656_BOOL);
constraint array_bool_and([aux10653_BOOL,aux10654_BOOL,aux10655_BOOL,w_00005_00012_BOOL,aux10656_BOOL],aux10657_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10658,s_00015],0);
constraint int_lt_reif(s_00011,aux10658,aux10659_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux10660_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux10661_BOOL);
constraint int_le_reif(s_00015, s_00011,aux10662_BOOL);
constraint array_bool_and([aux10659_BOOL,aux10660_BOOL,aux10661_BOOL,w_00005_00015_BOOL,aux10662_BOOL],aux10663_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10664,s_00019],0);
constraint int_lt_reif(s_00011,aux10664,aux10665_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux10666_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux10667_BOOL);
constraint int_le_reif(s_00019, s_00011,aux10668_BOOL);
constraint array_bool_and([aux10665_BOOL,aux10666_BOOL,aux10667_BOOL,w_00005_00019_BOOL,aux10668_BOOL],aux10669_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10670,s_00016],0);
constraint int_lt_reif(s_00011,aux10670,aux10671_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux10672_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux10673_BOOL);
constraint int_le_reif(s_00016, s_00011,aux10674_BOOL);
constraint array_bool_and([aux10671_BOOL,aux10672_BOOL,aux10673_BOOL,w_00005_00016_BOOL,aux10674_BOOL],aux10675_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10676,s_00018],0);
constraint int_lt_reif(s_00011,aux10676,aux10677_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux10678_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux10679_BOOL);
constraint int_le_reif(s_00018, s_00011,aux10680_BOOL);
constraint array_bool_and([aux10677_BOOL,aux10678_BOOL,aux10679_BOOL,w_00005_00018_BOOL,aux10680_BOOL],aux10681_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10682,s_00020],0);
constraint int_lt_reif(s_00011,aux10682,aux10683_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux10684_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux10685_BOOL);
constraint int_le_reif(s_00020, s_00011,aux10686_BOOL);
constraint array_bool_and([aux10683_BOOL,aux10684_BOOL,aux10685_BOOL,w_00005_00020_BOOL,aux10686_BOOL],aux10687_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux10688,s_00014],0);
constraint int_lt_reif(s_00011,aux10688,aux10689_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux10690_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10691_BOOL);
constraint int_le_reif(s_00014, s_00011,aux10692_BOOL);
constraint array_bool_and([aux10689_BOOL,aux10690_BOOL,aux10691_BOOL,w_00005_00014_BOOL,aux10692_BOOL],aux10693_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10694,s_00011],0);
constraint int_lt_reif(s_00011,aux10694,aux10695_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux10696_BOOL);
constraint array_bool_and([aux10695_BOOL,aux10696_BOOL,w_00005_00011_BOOL],aux10697_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux10585_INTEGER,aux10591_INTEGER,aux10597_INTEGER,aux10603_INTEGER,aux10609_INTEGER,aux10615_INTEGER,aux10621_INTEGER,aux10627_INTEGER,aux10633_INTEGER,aux10639_INTEGER,aux10645_INTEGER,aux10651_INTEGER,aux10657_INTEGER,aux10663_INTEGER,aux10669_INTEGER,aux10675_INTEGER,aux10681_INTEGER,aux10687_INTEGER,aux10693_INTEGER,aux10697_INTEGER,1],0,aux10698_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10699,s_00001],0);
constraint int_lt_reif(s_00015,aux10699,aux10700_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux10701_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux10702_BOOL);
constraint int_le_reif(s_00001, s_00015,aux10703_BOOL);
constraint array_bool_and([aux10700_BOOL,aux10701_BOOL,aux10702_BOOL,w_00005_00001_BOOL,aux10703_BOOL],aux10704_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10705,s_00008],0);
constraint int_lt_reif(s_00015,aux10705,aux10706_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux10707_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux10708_BOOL);
constraint int_le_reif(s_00008, s_00015,aux10709_BOOL);
constraint array_bool_and([aux10706_BOOL,aux10707_BOOL,aux10708_BOOL,w_00005_00008_BOOL,aux10709_BOOL],aux10710_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10711,s_00002],0);
constraint int_lt_reif(s_00015,aux10711,aux10712_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux10713_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux10714_BOOL);
constraint int_le_reif(s_00002, s_00015,aux10715_BOOL);
constraint array_bool_and([aux10712_BOOL,aux10713_BOOL,aux10714_BOOL,w_00005_00002_BOOL,aux10715_BOOL],aux10716_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10717,s_00004],0);
constraint int_lt_reif(s_00015,aux10717,aux10718_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux10719_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux10720_BOOL);
constraint int_le_reif(s_00004, s_00015,aux10721_BOOL);
constraint array_bool_and([aux10718_BOOL,aux10719_BOOL,aux10720_BOOL,w_00005_00004_BOOL,aux10721_BOOL],aux10722_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10723,s_00005],0);
constraint int_lt_reif(s_00015,aux10723,aux10724_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10725_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux10726_BOOL);
constraint int_le_reif(s_00005, s_00015,aux10727_BOOL);
constraint array_bool_and([aux10724_BOOL,aux10725_BOOL,aux10726_BOOL,w_00005_00005_BOOL,aux10727_BOOL],aux10728_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10729,s_00007],0);
constraint int_lt_reif(s_00015,aux10729,aux10730_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux10731_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux10732_BOOL);
constraint int_le_reif(s_00007, s_00015,aux10733_BOOL);
constraint array_bool_and([aux10730_BOOL,aux10731_BOOL,aux10732_BOOL,w_00005_00007_BOOL,aux10733_BOOL],aux10734_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10735,s_00009],0);
constraint int_lt_reif(s_00015,aux10735,aux10736_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux10737_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux10738_BOOL);
constraint int_le_reif(s_00009, s_00015,aux10739_BOOL);
constraint array_bool_and([aux10736_BOOL,aux10737_BOOL,aux10738_BOOL,w_00005_00009_BOOL,aux10739_BOOL],aux10740_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10741,s_00010],0);
constraint int_lt_reif(s_00015,aux10741,aux10742_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux10743_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux10744_BOOL);
constraint int_le_reif(s_00010, s_00015,aux10745_BOOL);
constraint array_bool_and([aux10742_BOOL,aux10743_BOOL,aux10744_BOOL,w_00005_00010_BOOL,aux10745_BOOL],aux10746_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10747,s_00003],0);
constraint int_lt_reif(s_00015,aux10747,aux10748_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux10749_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux10750_BOOL);
constraint int_le_reif(s_00003, s_00015,aux10751_BOOL);
constraint array_bool_and([aux10748_BOOL,aux10749_BOOL,aux10750_BOOL,w_00005_00003_BOOL,aux10751_BOOL],aux10752_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10753,s_00013],0);
constraint int_lt_reif(s_00015,aux10753,aux10754_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux10755_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux10756_BOOL);
constraint int_le_reif(s_00013, s_00015,aux10757_BOOL);
constraint array_bool_and([aux10754_BOOL,aux10755_BOOL,aux10756_BOOL,w_00005_00013_BOOL,aux10757_BOOL],aux10758_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10759,s_00006],0);
constraint int_lt_reif(s_00015,aux10759,aux10760_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux10761_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux10762_BOOL);
constraint int_le_reif(s_00006, s_00015,aux10763_BOOL);
constraint array_bool_and([aux10760_BOOL,aux10761_BOOL,aux10762_BOOL,w_00005_00006_BOOL,aux10763_BOOL],aux10764_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10765,s_00017],0);
constraint int_lt_reif(s_00015,aux10765,aux10766_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux10767_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux10768_BOOL);
constraint int_le_reif(s_00017, s_00015,aux10769_BOOL);
constraint array_bool_and([aux10766_BOOL,aux10767_BOOL,aux10768_BOOL,w_00005_00017_BOOL,aux10769_BOOL],aux10770_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10771,s_00011],0);
constraint int_lt_reif(s_00015,aux10771,aux10772_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux10773_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux10774_BOOL);
constraint int_le_reif(s_00011, s_00015,aux10775_BOOL);
constraint array_bool_and([aux10772_BOOL,aux10773_BOOL,aux10774_BOOL,w_00005_00011_BOOL,aux10775_BOOL],aux10776_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10777,s_00012],0);
constraint int_lt_reif(s_00015,aux10777,aux10778_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux10779_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux10780_BOOL);
constraint int_le_reif(s_00012, s_00015,aux10781_BOOL);
constraint array_bool_and([aux10778_BOOL,aux10779_BOOL,aux10780_BOOL,w_00005_00012_BOOL,aux10781_BOOL],aux10782_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10783,s_00019],0);
constraint int_lt_reif(s_00015,aux10783,aux10784_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux10785_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux10786_BOOL);
constraint int_le_reif(s_00019, s_00015,aux10787_BOOL);
constraint array_bool_and([aux10784_BOOL,aux10785_BOOL,aux10786_BOOL,w_00005_00019_BOOL,aux10787_BOOL],aux10788_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10789,s_00016],0);
constraint int_lt_reif(s_00015,aux10789,aux10790_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux10791_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux10792_BOOL);
constraint int_le_reif(s_00016, s_00015,aux10793_BOOL);
constraint array_bool_and([aux10790_BOOL,aux10791_BOOL,aux10792_BOOL,w_00005_00016_BOOL,aux10793_BOOL],aux10794_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10795,s_00018],0);
constraint int_lt_reif(s_00015,aux10795,aux10796_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux10797_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux10798_BOOL);
constraint int_le_reif(s_00018, s_00015,aux10799_BOOL);
constraint array_bool_and([aux10796_BOOL,aux10797_BOOL,aux10798_BOOL,w_00005_00018_BOOL,aux10799_BOOL],aux10800_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10801,s_00020],0);
constraint int_lt_reif(s_00015,aux10801,aux10802_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux10803_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux10804_BOOL);
constraint int_le_reif(s_00020, s_00015,aux10805_BOOL);
constraint array_bool_and([aux10802_BOOL,aux10803_BOOL,aux10804_BOOL,w_00005_00020_BOOL,aux10805_BOOL],aux10806_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux10807,s_00014],0);
constraint int_lt_reif(s_00015,aux10807,aux10808_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10809_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux10810_BOOL);
constraint int_le_reif(s_00014, s_00015,aux10811_BOOL);
constraint array_bool_and([aux10808_BOOL,aux10809_BOOL,aux10810_BOOL,w_00005_00014_BOOL,aux10811_BOOL],aux10812_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10813,s_00015],0);
constraint int_lt_reif(s_00015,aux10813,aux10814_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux10815_BOOL);
constraint array_bool_and([aux10814_BOOL,aux10815_BOOL,w_00005_00015_BOOL],aux10816_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux10704_INTEGER,aux10710_INTEGER,aux10716_INTEGER,aux10722_INTEGER,aux10728_INTEGER,aux10734_INTEGER,aux10740_INTEGER,aux10746_INTEGER,aux10752_INTEGER,aux10758_INTEGER,aux10764_INTEGER,aux10770_INTEGER,aux10776_INTEGER,aux10782_INTEGER,aux10788_INTEGER,aux10794_INTEGER,aux10800_INTEGER,aux10806_INTEGER,aux10812_INTEGER,aux10816_INTEGER,1],0,aux10817_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10818,s_00001],0);
constraint int_lt_reif(s_00014,aux10818,aux10819_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux10820_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10821_BOOL);
constraint int_le_reif(s_00001, s_00014,aux10822_BOOL);
constraint array_bool_and([aux10819_BOOL,aux10820_BOOL,aux10821_BOOL,w_00005_00001_BOOL,aux10822_BOOL],aux10823_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10824,s_00008],0);
constraint int_lt_reif(s_00014,aux10824,aux10825_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux10826_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10827_BOOL);
constraint int_le_reif(s_00008, s_00014,aux10828_BOOL);
constraint array_bool_and([aux10825_BOOL,aux10826_BOOL,aux10827_BOOL,w_00005_00008_BOOL,aux10828_BOOL],aux10829_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10830,s_00002],0);
constraint int_lt_reif(s_00014,aux10830,aux10831_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux10832_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10833_BOOL);
constraint int_le_reif(s_00002, s_00014,aux10834_BOOL);
constraint array_bool_and([aux10831_BOOL,aux10832_BOOL,aux10833_BOOL,w_00005_00002_BOOL,aux10834_BOOL],aux10835_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10836,s_00004],0);
constraint int_lt_reif(s_00014,aux10836,aux10837_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux10838_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10839_BOOL);
constraint int_le_reif(s_00004, s_00014,aux10840_BOOL);
constraint array_bool_and([aux10837_BOOL,aux10838_BOOL,aux10839_BOOL,w_00005_00004_BOOL,aux10840_BOOL],aux10841_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10842,s_00005],0);
constraint int_lt_reif(s_00014,aux10842,aux10843_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10844_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10845_BOOL);
constraint int_le_reif(s_00005, s_00014,aux10846_BOOL);
constraint array_bool_and([aux10843_BOOL,aux10844_BOOL,aux10845_BOOL,w_00005_00005_BOOL,aux10846_BOOL],aux10847_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10848,s_00007],0);
constraint int_lt_reif(s_00014,aux10848,aux10849_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux10850_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10851_BOOL);
constraint int_le_reif(s_00007, s_00014,aux10852_BOOL);
constraint array_bool_and([aux10849_BOOL,aux10850_BOOL,aux10851_BOOL,w_00005_00007_BOOL,aux10852_BOOL],aux10853_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10854,s_00009],0);
constraint int_lt_reif(s_00014,aux10854,aux10855_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux10856_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10857_BOOL);
constraint int_le_reif(s_00009, s_00014,aux10858_BOOL);
constraint array_bool_and([aux10855_BOOL,aux10856_BOOL,aux10857_BOOL,w_00005_00009_BOOL,aux10858_BOOL],aux10859_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10860,s_00010],0);
constraint int_lt_reif(s_00014,aux10860,aux10861_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux10862_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10863_BOOL);
constraint int_le_reif(s_00010, s_00014,aux10864_BOOL);
constraint array_bool_and([aux10861_BOOL,aux10862_BOOL,aux10863_BOOL,w_00005_00010_BOOL,aux10864_BOOL],aux10865_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10866,s_00003],0);
constraint int_lt_reif(s_00014,aux10866,aux10867_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux10868_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10869_BOOL);
constraint int_le_reif(s_00003, s_00014,aux10870_BOOL);
constraint array_bool_and([aux10867_BOOL,aux10868_BOOL,aux10869_BOOL,w_00005_00003_BOOL,aux10870_BOOL],aux10871_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10872,s_00013],0);
constraint int_lt_reif(s_00014,aux10872,aux10873_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux10874_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10875_BOOL);
constraint int_le_reif(s_00013, s_00014,aux10876_BOOL);
constraint array_bool_and([aux10873_BOOL,aux10874_BOOL,aux10875_BOOL,w_00005_00013_BOOL,aux10876_BOOL],aux10877_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10878,s_00017],0);
constraint int_lt_reif(s_00014,aux10878,aux10879_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10880_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux10881_BOOL);
constraint int_le_reif(s_00017, s_00014,aux10882_BOOL);
constraint array_bool_and([aux10879_BOOL,aux10880_BOOL,aux10881_BOOL,w_00005_00017_BOOL,aux10882_BOOL],aux10883_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10884,s_00006],0);
constraint int_lt_reif(s_00014,aux10884,aux10885_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux10886_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10887_BOOL);
constraint int_le_reif(s_00006, s_00014,aux10888_BOOL);
constraint array_bool_and([aux10885_BOOL,aux10886_BOOL,aux10887_BOOL,w_00005_00006_BOOL,aux10888_BOOL],aux10889_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10890,s_00011],0);
constraint int_lt_reif(s_00014,aux10890,aux10891_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux10892_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10893_BOOL);
constraint int_le_reif(s_00011, s_00014,aux10894_BOOL);
constraint array_bool_and([aux10891_BOOL,aux10892_BOOL,aux10893_BOOL,w_00005_00011_BOOL,aux10894_BOOL],aux10895_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10896,s_00012],0);
constraint int_lt_reif(s_00014,aux10896,aux10897_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux10898_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10899_BOOL);
constraint int_le_reif(s_00012, s_00014,aux10900_BOOL);
constraint array_bool_and([aux10897_BOOL,aux10898_BOOL,aux10899_BOOL,w_00005_00012_BOOL,aux10900_BOOL],aux10901_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10902,s_00015],0);
constraint int_lt_reif(s_00014,aux10902,aux10903_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10904_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux10905_BOOL);
constraint int_le_reif(s_00015, s_00014,aux10906_BOOL);
constraint array_bool_and([aux10903_BOOL,aux10904_BOOL,aux10905_BOOL,w_00005_00015_BOOL,aux10906_BOOL],aux10907_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10908,s_00019],0);
constraint int_lt_reif(s_00014,aux10908,aux10909_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10910_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux10911_BOOL);
constraint int_le_reif(s_00019, s_00014,aux10912_BOOL);
constraint array_bool_and([aux10909_BOOL,aux10910_BOOL,aux10911_BOOL,w_00005_00019_BOOL,aux10912_BOOL],aux10913_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10914,s_00016],0);
constraint int_lt_reif(s_00014,aux10914,aux10915_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10916_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux10917_BOOL);
constraint int_le_reif(s_00016, s_00014,aux10918_BOOL);
constraint array_bool_and([aux10915_BOOL,aux10916_BOOL,aux10917_BOOL,w_00005_00016_BOOL,aux10918_BOOL],aux10919_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10920,s_00018],0);
constraint int_lt_reif(s_00014,aux10920,aux10921_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10922_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux10923_BOOL);
constraint int_le_reif(s_00018, s_00014,aux10924_BOOL);
constraint array_bool_and([aux10921_BOOL,aux10922_BOOL,aux10923_BOOL,w_00005_00018_BOOL,aux10924_BOOL],aux10925_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10926,s_00020],0);
constraint int_lt_reif(s_00014,aux10926,aux10927_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10928_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux10929_BOOL);
constraint int_le_reif(s_00020, s_00014,aux10930_BOOL);
constraint array_bool_and([aux10927_BOOL,aux10928_BOOL,aux10929_BOOL,w_00005_00020_BOOL,aux10930_BOOL],aux10931_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux10932,s_00014],0);
constraint int_lt_reif(s_00014,aux10932,aux10933_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux10934_BOOL);
constraint array_bool_and([aux10933_BOOL,aux10934_BOOL,w_00005_00014_BOOL],aux10935_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux10823_INTEGER,aux10829_INTEGER,aux10835_INTEGER,aux10841_INTEGER,aux10847_INTEGER,aux10853_INTEGER,aux10859_INTEGER,aux10865_INTEGER,aux10871_INTEGER,aux10877_INTEGER,aux10883_INTEGER,aux10889_INTEGER,aux10895_INTEGER,aux10901_INTEGER,aux10907_INTEGER,aux10913_INTEGER,aux10919_INTEGER,aux10925_INTEGER,aux10931_INTEGER,aux10935_INTEGER,1],0,aux10936_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10937,s_00001],0);
constraint int_lt_reif(s_00019,aux10937,aux10938_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux10939_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux10940_BOOL);
constraint int_le_reif(s_00001, s_00019,aux10941_BOOL);
constraint array_bool_and([aux10938_BOOL,aux10939_BOOL,aux10940_BOOL,w_00005_00001_BOOL,aux10941_BOOL],aux10942_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10943,s_00008],0);
constraint int_lt_reif(s_00019,aux10943,aux10944_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux10945_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux10946_BOOL);
constraint int_le_reif(s_00008, s_00019,aux10947_BOOL);
constraint array_bool_and([aux10944_BOOL,aux10945_BOOL,aux10946_BOOL,w_00005_00008_BOOL,aux10947_BOOL],aux10948_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10949,s_00002],0);
constraint int_lt_reif(s_00019,aux10949,aux10950_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux10951_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux10952_BOOL);
constraint int_le_reif(s_00002, s_00019,aux10953_BOOL);
constraint array_bool_and([aux10950_BOOL,aux10951_BOOL,aux10952_BOOL,w_00005_00002_BOOL,aux10953_BOOL],aux10954_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10955,s_00004],0);
constraint int_lt_reif(s_00019,aux10955,aux10956_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux10957_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux10958_BOOL);
constraint int_le_reif(s_00004, s_00019,aux10959_BOOL);
constraint array_bool_and([aux10956_BOOL,aux10957_BOOL,aux10958_BOOL,w_00005_00004_BOOL,aux10959_BOOL],aux10960_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10961,s_00005],0);
constraint int_lt_reif(s_00019,aux10961,aux10962_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux10963_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux10964_BOOL);
constraint int_le_reif(s_00005, s_00019,aux10965_BOOL);
constraint array_bool_and([aux10962_BOOL,aux10963_BOOL,aux10964_BOOL,w_00005_00005_BOOL,aux10965_BOOL],aux10966_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10967,s_00007],0);
constraint int_lt_reif(s_00019,aux10967,aux10968_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux10969_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux10970_BOOL);
constraint int_le_reif(s_00007, s_00019,aux10971_BOOL);
constraint array_bool_and([aux10968_BOOL,aux10969_BOOL,aux10970_BOOL,w_00005_00007_BOOL,aux10971_BOOL],aux10972_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux10973,s_00009],0);
constraint int_lt_reif(s_00019,aux10973,aux10974_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux10975_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux10976_BOOL);
constraint int_le_reif(s_00009, s_00019,aux10977_BOOL);
constraint array_bool_and([aux10974_BOOL,aux10975_BOOL,aux10976_BOOL,w_00005_00009_BOOL,aux10977_BOOL],aux10978_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10979,s_00010],0);
constraint int_lt_reif(s_00019,aux10979,aux10980_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux10981_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux10982_BOOL);
constraint int_le_reif(s_00010, s_00019,aux10983_BOOL);
constraint array_bool_and([aux10980_BOOL,aux10981_BOOL,aux10982_BOOL,w_00005_00010_BOOL,aux10983_BOOL],aux10984_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10985,s_00003],0);
constraint int_lt_reif(s_00019,aux10985,aux10986_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux10987_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux10988_BOOL);
constraint int_le_reif(s_00003, s_00019,aux10989_BOOL);
constraint array_bool_and([aux10986_BOOL,aux10987_BOOL,aux10988_BOOL,w_00005_00003_BOOL,aux10989_BOOL],aux10990_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux10991,s_00013],0);
constraint int_lt_reif(s_00019,aux10991,aux10992_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux10993_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux10994_BOOL);
constraint int_le_reif(s_00013, s_00019,aux10995_BOOL);
constraint array_bool_and([aux10992_BOOL,aux10993_BOOL,aux10994_BOOL,w_00005_00013_BOOL,aux10995_BOOL],aux10996_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux10997,s_00006],0);
constraint int_lt_reif(s_00019,aux10997,aux10998_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux10999_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux11000_BOOL);
constraint int_le_reif(s_00006, s_00019,aux11001_BOOL);
constraint array_bool_and([aux10998_BOOL,aux10999_BOOL,aux11000_BOOL,w_00005_00006_BOOL,aux11001_BOOL],aux11002_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11003,s_00017],0);
constraint int_lt_reif(s_00019,aux11003,aux11004_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11005_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux11006_BOOL);
constraint int_le_reif(s_00017, s_00019,aux11007_BOOL);
constraint array_bool_and([aux11004_BOOL,aux11005_BOOL,aux11006_BOOL,w_00005_00017_BOOL,aux11007_BOOL],aux11008_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11009,s_00011],0);
constraint int_lt_reif(s_00019,aux11009,aux11010_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux11011_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux11012_BOOL);
constraint int_le_reif(s_00011, s_00019,aux11013_BOOL);
constraint array_bool_and([aux11010_BOOL,aux11011_BOOL,aux11012_BOOL,w_00005_00011_BOOL,aux11013_BOOL],aux11014_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11015,s_00012],0);
constraint int_lt_reif(s_00019,aux11015,aux11016_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux11017_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux11018_BOOL);
constraint int_le_reif(s_00012, s_00019,aux11019_BOOL);
constraint array_bool_and([aux11016_BOOL,aux11017_BOOL,aux11018_BOOL,w_00005_00012_BOOL,aux11019_BOOL],aux11020_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11021,s_00015],0);
constraint int_lt_reif(s_00019,aux11021,aux11022_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux11023_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux11024_BOOL);
constraint int_le_reif(s_00015, s_00019,aux11025_BOOL);
constraint array_bool_and([aux11022_BOOL,aux11023_BOOL,aux11024_BOOL,w_00005_00015_BOOL,aux11025_BOOL],aux11026_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11027,s_00016],0);
constraint int_lt_reif(s_00019,aux11027,aux11028_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux11029_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux11030_BOOL);
constraint int_le_reif(s_00016, s_00019,aux11031_BOOL);
constraint array_bool_and([aux11028_BOOL,aux11029_BOOL,aux11030_BOOL,w_00005_00016_BOOL,aux11031_BOOL],aux11032_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11033,s_00018],0);
constraint int_lt_reif(s_00019,aux11033,aux11034_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux11035_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux11036_BOOL);
constraint int_le_reif(s_00018, s_00019,aux11037_BOOL);
constraint array_bool_and([aux11034_BOOL,aux11035_BOOL,aux11036_BOOL,w_00005_00018_BOOL,aux11037_BOOL],aux11038_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux11039,s_00014],0);
constraint int_lt_reif(s_00019,aux11039,aux11040_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux11041_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux11042_BOOL);
constraint int_le_reif(s_00014, s_00019,aux11043_BOOL);
constraint array_bool_and([aux11040_BOOL,aux11041_BOOL,aux11042_BOOL,w_00005_00014_BOOL,aux11043_BOOL],aux11044_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11045,s_00020],0);
constraint int_lt_reif(s_00019,aux11045,aux11046_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux11047_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11048_BOOL);
constraint int_le_reif(s_00020, s_00019,aux11049_BOOL);
constraint array_bool_and([aux11046_BOOL,aux11047_BOOL,aux11048_BOOL,w_00005_00020_BOOL,aux11049_BOOL],aux11050_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11051,s_00019],0);
constraint int_lt_reif(s_00019,aux11051,aux11052_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux11053_BOOL);
constraint array_bool_and([aux11052_BOOL,aux11053_BOOL,w_00005_00019_BOOL],aux11054_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux10942_INTEGER,aux10948_INTEGER,aux10954_INTEGER,aux10960_INTEGER,aux10966_INTEGER,aux10972_INTEGER,aux10978_INTEGER,aux10984_INTEGER,aux10990_INTEGER,aux10996_INTEGER,aux11002_INTEGER,aux11008_INTEGER,aux11014_INTEGER,aux11020_INTEGER,aux11026_INTEGER,aux11032_INTEGER,aux11038_INTEGER,aux11044_INTEGER,aux11050_INTEGER,aux11054_INTEGER,1],0,aux11055_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11056,s_00008],0);
constraint int_lt_reif(s_00001,aux11056,aux11057_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux11058_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux11059_BOOL);
constraint int_le_reif(s_00008, s_00001,aux11060_BOOL);
constraint array_bool_and([aux11057_BOOL,aux11058_BOOL,aux11059_BOOL,w_00005_00008_BOOL,aux11060_BOOL],aux11061_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11062,s_00010],0);
constraint int_lt_reif(s_00001,aux11062,aux11063_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux11064_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux11065_BOOL);
constraint int_le_reif(s_00010, s_00001,aux11066_BOOL);
constraint array_bool_and([aux11063_BOOL,aux11064_BOOL,aux11065_BOOL,w_00005_00010_BOOL,aux11066_BOOL],aux11067_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11068,s_00002],0);
constraint int_lt_reif(s_00001,aux11068,aux11069_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux11070_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11071_BOOL);
constraint int_le_reif(s_00002, s_00001,aux11072_BOOL);
constraint array_bool_and([aux11069_BOOL,aux11070_BOOL,aux11071_BOOL,w_00005_00002_BOOL,aux11072_BOOL],aux11073_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11074,s_00013],0);
constraint int_lt_reif(s_00001,aux11074,aux11075_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux11076_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux11077_BOOL);
constraint int_le_reif(s_00013, s_00001,aux11078_BOOL);
constraint array_bool_and([aux11075_BOOL,aux11076_BOOL,aux11077_BOOL,w_00005_00013_BOOL,aux11078_BOOL],aux11079_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11080,s_00004],0);
constraint int_lt_reif(s_00001,aux11080,aux11081_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux11082_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux11083_BOOL);
constraint int_le_reif(s_00004, s_00001,aux11084_BOOL);
constraint array_bool_and([aux11081_BOOL,aux11082_BOOL,aux11083_BOOL,w_00005_00004_BOOL,aux11084_BOOL],aux11085_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11086,s_00005],0);
constraint int_lt_reif(s_00001,aux11086,aux11087_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux11088_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux11089_BOOL);
constraint int_le_reif(s_00005, s_00001,aux11090_BOOL);
constraint array_bool_and([aux11087_BOOL,aux11088_BOOL,aux11089_BOOL,w_00005_00005_BOOL,aux11090_BOOL],aux11091_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11092,s_00007],0);
constraint int_lt_reif(s_00001,aux11092,aux11093_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux11094_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux11095_BOOL);
constraint int_le_reif(s_00007, s_00001,aux11096_BOOL);
constraint array_bool_and([aux11093_BOOL,aux11094_BOOL,aux11095_BOOL,w_00005_00007_BOOL,aux11096_BOOL],aux11097_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11098,s_00017],0);
constraint int_lt_reif(s_00001,aux11098,aux11099_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux11100_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11101_BOOL);
constraint int_le_reif(s_00017, s_00001,aux11102_BOOL);
constraint array_bool_and([aux11099_BOOL,aux11100_BOOL,aux11101_BOOL,w_00005_00017_BOOL,aux11102_BOOL],aux11103_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11104,s_00009],0);
constraint int_lt_reif(s_00001,aux11104,aux11105_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux11106_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux11107_BOOL);
constraint int_le_reif(s_00009, s_00001,aux11108_BOOL);
constraint array_bool_and([aux11105_BOOL,aux11106_BOOL,aux11107_BOOL,w_00005_00009_BOOL,aux11108_BOOL],aux11109_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11110,s_00011],0);
constraint int_lt_reif(s_00001,aux11110,aux11111_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux11112_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux11113_BOOL);
constraint int_le_reif(s_00011, s_00001,aux11114_BOOL);
constraint array_bool_and([aux11111_BOOL,aux11112_BOOL,aux11113_BOOL,w_00005_00011_BOOL,aux11114_BOOL],aux11115_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11116,s_00012],0);
constraint int_lt_reif(s_00001,aux11116,aux11117_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux11118_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux11119_BOOL);
constraint int_le_reif(s_00012, s_00001,aux11120_BOOL);
constraint array_bool_and([aux11117_BOOL,aux11118_BOOL,aux11119_BOOL,w_00005_00012_BOOL,aux11120_BOOL],aux11121_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11122,s_00003],0);
constraint int_lt_reif(s_00001,aux11122,aux11123_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux11124_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux11125_BOOL);
constraint int_le_reif(s_00003, s_00001,aux11126_BOOL);
constraint array_bool_and([aux11123_BOOL,aux11124_BOOL,aux11125_BOOL,w_00005_00003_BOOL,aux11126_BOOL],aux11127_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11128,s_00015],0);
constraint int_lt_reif(s_00001,aux11128,aux11129_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux11130_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux11131_BOOL);
constraint int_le_reif(s_00015, s_00001,aux11132_BOOL);
constraint array_bool_and([aux11129_BOOL,aux11130_BOOL,aux11131_BOOL,w_00005_00015_BOOL,aux11132_BOOL],aux11133_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11134,s_00006],0);
constraint int_lt_reif(s_00001,aux11134,aux11135_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux11136_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux11137_BOOL);
constraint int_le_reif(s_00006, s_00001,aux11138_BOOL);
constraint array_bool_and([aux11135_BOOL,aux11136_BOOL,aux11137_BOOL,w_00005_00006_BOOL,aux11138_BOOL],aux11139_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11140,s_00019],0);
constraint int_lt_reif(s_00001,aux11140,aux11141_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux11142_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux11143_BOOL);
constraint int_le_reif(s_00019, s_00001,aux11144_BOOL);
constraint array_bool_and([aux11141_BOOL,aux11142_BOOL,aux11143_BOOL,w_00005_00019_BOOL,aux11144_BOOL],aux11145_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11146,s_00016],0);
constraint int_lt_reif(s_00001,aux11146,aux11147_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux11148_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux11149_BOOL);
constraint int_le_reif(s_00016, s_00001,aux11150_BOOL);
constraint array_bool_and([aux11147_BOOL,aux11148_BOOL,aux11149_BOOL,w_00005_00016_BOOL,aux11150_BOOL],aux11151_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11152,s_00018],0);
constraint int_lt_reif(s_00001,aux11152,aux11153_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux11154_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux11155_BOOL);
constraint int_le_reif(s_00018, s_00001,aux11156_BOOL);
constraint array_bool_and([aux11153_BOOL,aux11154_BOOL,aux11155_BOOL,w_00005_00018_BOOL,aux11156_BOOL],aux11157_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11158,s_00020],0);
constraint int_lt_reif(s_00001,aux11158,aux11159_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux11160_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11161_BOOL);
constraint int_le_reif(s_00020, s_00001,aux11162_BOOL);
constraint array_bool_and([aux11159_BOOL,aux11160_BOOL,aux11161_BOOL,w_00005_00020_BOOL,aux11162_BOOL],aux11163_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux11164,s_00014],0);
constraint int_lt_reif(s_00001,aux11164,aux11165_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux11166_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux11167_BOOL);
constraint int_le_reif(s_00014, s_00001,aux11168_BOOL);
constraint array_bool_and([aux11165_BOOL,aux11166_BOOL,aux11167_BOOL,w_00005_00014_BOOL,aux11168_BOOL],aux11169_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11170,s_00001],0);
constraint int_lt_reif(s_00001,aux11170,aux11171_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux11172_BOOL);
constraint array_bool_and([aux11171_BOOL,aux11172_BOOL,w_00005_00001_BOOL],aux11173_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux11061_INTEGER,aux11067_INTEGER,aux11073_INTEGER,aux11079_INTEGER,aux11085_INTEGER,aux11091_INTEGER,aux11097_INTEGER,aux11103_INTEGER,aux11109_INTEGER,aux11115_INTEGER,aux11121_INTEGER,aux11127_INTEGER,aux11133_INTEGER,aux11139_INTEGER,aux11145_INTEGER,aux11151_INTEGER,aux11157_INTEGER,aux11163_INTEGER,aux11169_INTEGER,aux11173_INTEGER,1],0,aux11174_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11175,s_00001],0);
constraint int_lt_reif(s_00009,aux11175,aux11176_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux11177_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux11178_BOOL);
constraint int_le_reif(s_00001, s_00009,aux11179_BOOL);
constraint array_bool_and([aux11176_BOOL,aux11177_BOOL,aux11178_BOOL,w_00005_00001_BOOL,aux11179_BOOL],aux11180_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11181,s_00008],0);
constraint int_lt_reif(s_00009,aux11181,aux11182_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux11183_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux11184_BOOL);
constraint int_le_reif(s_00008, s_00009,aux11185_BOOL);
constraint array_bool_and([aux11182_BOOL,aux11183_BOOL,aux11184_BOOL,w_00005_00008_BOOL,aux11185_BOOL],aux11186_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11187,s_00002],0);
constraint int_lt_reif(s_00009,aux11187,aux11188_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11189_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux11190_BOOL);
constraint int_le_reif(s_00002, s_00009,aux11191_BOOL);
constraint array_bool_and([aux11188_BOOL,aux11189_BOOL,aux11190_BOOL,w_00005_00002_BOOL,aux11191_BOOL],aux11192_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11193,s_00004],0);
constraint int_lt_reif(s_00009,aux11193,aux11194_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux11195_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux11196_BOOL);
constraint int_le_reif(s_00004, s_00009,aux11197_BOOL);
constraint array_bool_and([aux11194_BOOL,aux11195_BOOL,aux11196_BOOL,w_00005_00004_BOOL,aux11197_BOOL],aux11198_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11199,s_00010],0);
constraint int_lt_reif(s_00009,aux11199,aux11200_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux11201_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux11202_BOOL);
constraint int_le_reif(s_00010, s_00009,aux11203_BOOL);
constraint array_bool_and([aux11200_BOOL,aux11201_BOOL,aux11202_BOOL,w_00005_00010_BOOL,aux11203_BOOL],aux11204_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11205,s_00005],0);
constraint int_lt_reif(s_00009,aux11205,aux11206_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux11207_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux11208_BOOL);
constraint int_le_reif(s_00005, s_00009,aux11209_BOOL);
constraint array_bool_and([aux11206_BOOL,aux11207_BOOL,aux11208_BOOL,w_00005_00005_BOOL,aux11209_BOOL],aux11210_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11211,s_00013],0);
constraint int_lt_reif(s_00009,aux11211,aux11212_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux11213_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux11214_BOOL);
constraint int_le_reif(s_00013, s_00009,aux11215_BOOL);
constraint array_bool_and([aux11212_BOOL,aux11213_BOOL,aux11214_BOOL,w_00005_00013_BOOL,aux11215_BOOL],aux11216_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11217,s_00007],0);
constraint int_lt_reif(s_00009,aux11217,aux11218_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux11219_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux11220_BOOL);
constraint int_le_reif(s_00007, s_00009,aux11221_BOOL);
constraint array_bool_and([aux11218_BOOL,aux11219_BOOL,aux11220_BOOL,w_00005_00007_BOOL,aux11221_BOOL],aux11222_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11223,s_00017],0);
constraint int_lt_reif(s_00009,aux11223,aux11224_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux11225_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11226_BOOL);
constraint int_le_reif(s_00017, s_00009,aux11227_BOOL);
constraint array_bool_and([aux11224_BOOL,aux11225_BOOL,aux11226_BOOL,w_00005_00017_BOOL,aux11227_BOOL],aux11228_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11229,s_00003],0);
constraint int_lt_reif(s_00009,aux11229,aux11230_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux11231_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux11232_BOOL);
constraint int_le_reif(s_00003, s_00009,aux11233_BOOL);
constraint array_bool_and([aux11230_BOOL,aux11231_BOOL,aux11232_BOOL,w_00005_00003_BOOL,aux11233_BOOL],aux11234_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11235,s_00011],0);
constraint int_lt_reif(s_00009,aux11235,aux11236_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux11237_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux11238_BOOL);
constraint int_le_reif(s_00011, s_00009,aux11239_BOOL);
constraint array_bool_and([aux11236_BOOL,aux11237_BOOL,aux11238_BOOL,w_00005_00011_BOOL,aux11239_BOOL],aux11240_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11241,s_00012],0);
constraint int_lt_reif(s_00009,aux11241,aux11242_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux11243_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux11244_BOOL);
constraint int_le_reif(s_00012, s_00009,aux11245_BOOL);
constraint array_bool_and([aux11242_BOOL,aux11243_BOOL,aux11244_BOOL,w_00005_00012_BOOL,aux11245_BOOL],aux11246_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11247,s_00006],0);
constraint int_lt_reif(s_00009,aux11247,aux11248_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux11249_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux11250_BOOL);
constraint int_le_reif(s_00006, s_00009,aux11251_BOOL);
constraint array_bool_and([aux11248_BOOL,aux11249_BOOL,aux11250_BOOL,w_00005_00006_BOOL,aux11251_BOOL],aux11252_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11253,s_00015],0);
constraint int_lt_reif(s_00009,aux11253,aux11254_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux11255_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux11256_BOOL);
constraint int_le_reif(s_00015, s_00009,aux11257_BOOL);
constraint array_bool_and([aux11254_BOOL,aux11255_BOOL,aux11256_BOOL,w_00005_00015_BOOL,aux11257_BOOL],aux11258_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11259,s_00019],0);
constraint int_lt_reif(s_00009,aux11259,aux11260_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux11261_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux11262_BOOL);
constraint int_le_reif(s_00019, s_00009,aux11263_BOOL);
constraint array_bool_and([aux11260_BOOL,aux11261_BOOL,aux11262_BOOL,w_00005_00019_BOOL,aux11263_BOOL],aux11264_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11265,s_00016],0);
constraint int_lt_reif(s_00009,aux11265,aux11266_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux11267_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux11268_BOOL);
constraint int_le_reif(s_00016, s_00009,aux11269_BOOL);
constraint array_bool_and([aux11266_BOOL,aux11267_BOOL,aux11268_BOOL,w_00005_00016_BOOL,aux11269_BOOL],aux11270_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11271,s_00018],0);
constraint int_lt_reif(s_00009,aux11271,aux11272_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux11273_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux11274_BOOL);
constraint int_le_reif(s_00018, s_00009,aux11275_BOOL);
constraint array_bool_and([aux11272_BOOL,aux11273_BOOL,aux11274_BOOL,w_00005_00018_BOOL,aux11275_BOOL],aux11276_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11277,s_00020],0);
constraint int_lt_reif(s_00009,aux11277,aux11278_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux11279_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11280_BOOL);
constraint int_le_reif(s_00020, s_00009,aux11281_BOOL);
constraint array_bool_and([aux11278_BOOL,aux11279_BOOL,aux11280_BOOL,w_00005_00020_BOOL,aux11281_BOOL],aux11282_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux11283,s_00014],0);
constraint int_lt_reif(s_00009,aux11283,aux11284_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux11285_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux11286_BOOL);
constraint int_le_reif(s_00014, s_00009,aux11287_BOOL);
constraint array_bool_and([aux11284_BOOL,aux11285_BOOL,aux11286_BOOL,w_00005_00014_BOOL,aux11287_BOOL],aux11288_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11289,s_00009],0);
constraint int_lt_reif(s_00009,aux11289,aux11290_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux11291_BOOL);
constraint array_bool_and([aux11290_BOOL,aux11291_BOOL,w_00005_00009_BOOL],aux11292_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux11180_INTEGER,aux11186_INTEGER,aux11192_INTEGER,aux11198_INTEGER,aux11204_INTEGER,aux11210_INTEGER,aux11216_INTEGER,aux11222_INTEGER,aux11228_INTEGER,aux11234_INTEGER,aux11240_INTEGER,aux11246_INTEGER,aux11252_INTEGER,aux11258_INTEGER,aux11264_INTEGER,aux11270_INTEGER,aux11276_INTEGER,aux11282_INTEGER,aux11288_INTEGER,aux11292_INTEGER,1],0,aux11293_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11294,s_00001],0);
constraint int_lt_reif(s_00017,aux11294,aux11295_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux11296_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11297_BOOL);
constraint int_le_reif(s_00001, s_00017,aux11298_BOOL);
constraint array_bool_and([aux11295_BOOL,aux11296_BOOL,aux11297_BOOL,w_00005_00001_BOOL,aux11298_BOOL],aux11299_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11300,s_00008],0);
constraint int_lt_reif(s_00017,aux11300,aux11301_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux11302_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11303_BOOL);
constraint int_le_reif(s_00008, s_00017,aux11304_BOOL);
constraint array_bool_and([aux11301_BOOL,aux11302_BOOL,aux11303_BOOL,w_00005_00008_BOOL,aux11304_BOOL],aux11305_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11306,s_00002],0);
constraint int_lt_reif(s_00017,aux11306,aux11307_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11308_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11309_BOOL);
constraint int_le_reif(s_00002, s_00017,aux11310_BOOL);
constraint array_bool_and([aux11307_BOOL,aux11308_BOOL,aux11309_BOOL,w_00005_00002_BOOL,aux11310_BOOL],aux11311_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11312,s_00004],0);
constraint int_lt_reif(s_00017,aux11312,aux11313_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux11314_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11315_BOOL);
constraint int_le_reif(s_00004, s_00017,aux11316_BOOL);
constraint array_bool_and([aux11313_BOOL,aux11314_BOOL,aux11315_BOOL,w_00005_00004_BOOL,aux11316_BOOL],aux11317_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11318,s_00005],0);
constraint int_lt_reif(s_00017,aux11318,aux11319_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux11320_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11321_BOOL);
constraint int_le_reif(s_00005, s_00017,aux11322_BOOL);
constraint array_bool_and([aux11319_BOOL,aux11320_BOOL,aux11321_BOOL,w_00005_00005_BOOL,aux11322_BOOL],aux11323_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11324,s_00007],0);
constraint int_lt_reif(s_00017,aux11324,aux11325_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux11326_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11327_BOOL);
constraint int_le_reif(s_00007, s_00017,aux11328_BOOL);
constraint array_bool_and([aux11325_BOOL,aux11326_BOOL,aux11327_BOOL,w_00005_00007_BOOL,aux11328_BOOL],aux11329_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11330,s_00009],0);
constraint int_lt_reif(s_00017,aux11330,aux11331_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux11332_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11333_BOOL);
constraint int_le_reif(s_00009, s_00017,aux11334_BOOL);
constraint array_bool_and([aux11331_BOOL,aux11332_BOOL,aux11333_BOOL,w_00005_00009_BOOL,aux11334_BOOL],aux11335_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11336,s_00010],0);
constraint int_lt_reif(s_00017,aux11336,aux11337_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux11338_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11339_BOOL);
constraint int_le_reif(s_00010, s_00017,aux11340_BOOL);
constraint array_bool_and([aux11337_BOOL,aux11338_BOOL,aux11339_BOOL,w_00005_00010_BOOL,aux11340_BOOL],aux11341_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11342,s_00003],0);
constraint int_lt_reif(s_00017,aux11342,aux11343_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux11344_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11345_BOOL);
constraint int_le_reif(s_00003, s_00017,aux11346_BOOL);
constraint array_bool_and([aux11343_BOOL,aux11344_BOOL,aux11345_BOOL,w_00005_00003_BOOL,aux11346_BOOL],aux11347_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11348,s_00013],0);
constraint int_lt_reif(s_00017,aux11348,aux11349_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux11350_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11351_BOOL);
constraint int_le_reif(s_00013, s_00017,aux11352_BOOL);
constraint array_bool_and([aux11349_BOOL,aux11350_BOOL,aux11351_BOOL,w_00005_00013_BOOL,aux11352_BOOL],aux11353_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11354,s_00006],0);
constraint int_lt_reif(s_00017,aux11354,aux11355_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux11356_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11357_BOOL);
constraint int_le_reif(s_00006, s_00017,aux11358_BOOL);
constraint array_bool_and([aux11355_BOOL,aux11356_BOOL,aux11357_BOOL,w_00005_00006_BOOL,aux11358_BOOL],aux11359_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11360,s_00011],0);
constraint int_lt_reif(s_00017,aux11360,aux11361_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux11362_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11363_BOOL);
constraint int_le_reif(s_00011, s_00017,aux11364_BOOL);
constraint array_bool_and([aux11361_BOOL,aux11362_BOOL,aux11363_BOOL,w_00005_00011_BOOL,aux11364_BOOL],aux11365_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11366,s_00012],0);
constraint int_lt_reif(s_00017,aux11366,aux11367_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux11368_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11369_BOOL);
constraint int_le_reif(s_00012, s_00017,aux11370_BOOL);
constraint array_bool_and([aux11367_BOOL,aux11368_BOOL,aux11369_BOOL,w_00005_00012_BOOL,aux11370_BOOL],aux11371_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11372,s_00015],0);
constraint int_lt_reif(s_00017,aux11372,aux11373_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux11374_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11375_BOOL);
constraint int_le_reif(s_00015, s_00017,aux11376_BOOL);
constraint array_bool_and([aux11373_BOOL,aux11374_BOOL,aux11375_BOOL,w_00005_00015_BOOL,aux11376_BOOL],aux11377_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11378,s_00019],0);
constraint int_lt_reif(s_00017,aux11378,aux11379_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11380_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux11381_BOOL);
constraint int_le_reif(s_00019, s_00017,aux11382_BOOL);
constraint array_bool_and([aux11379_BOOL,aux11380_BOOL,aux11381_BOOL,w_00005_00019_BOOL,aux11382_BOOL],aux11383_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11384,s_00016],0);
constraint int_lt_reif(s_00017,aux11384,aux11385_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux11386_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11387_BOOL);
constraint int_le_reif(s_00016, s_00017,aux11388_BOOL);
constraint array_bool_and([aux11385_BOOL,aux11386_BOOL,aux11387_BOOL,w_00005_00016_BOOL,aux11388_BOOL],aux11389_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11390,s_00018],0);
constraint int_lt_reif(s_00017,aux11390,aux11391_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11392_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux11393_BOOL);
constraint int_le_reif(s_00018, s_00017,aux11394_BOOL);
constraint array_bool_and([aux11391_BOOL,aux11392_BOOL,aux11393_BOOL,w_00005_00018_BOOL,aux11394_BOOL],aux11395_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11396,s_00020],0);
constraint int_lt_reif(s_00017,aux11396,aux11397_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11398_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11399_BOOL);
constraint int_le_reif(s_00020, s_00017,aux11400_BOOL);
constraint array_bool_and([aux11397_BOOL,aux11398_BOOL,aux11399_BOOL,w_00005_00020_BOOL,aux11400_BOOL],aux11401_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux11402,s_00014],0);
constraint int_lt_reif(s_00017,aux11402,aux11403_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux11404_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11405_BOOL);
constraint int_le_reif(s_00014, s_00017,aux11406_BOOL);
constraint array_bool_and([aux11403_BOOL,aux11404_BOOL,aux11405_BOOL,w_00005_00014_BOOL,aux11406_BOOL],aux11407_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11408,s_00017],0);
constraint int_lt_reif(s_00017,aux11408,aux11409_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11410_BOOL);
constraint array_bool_and([aux11409_BOOL,aux11410_BOOL,w_00005_00017_BOOL],aux11411_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux11299_INTEGER,aux11305_INTEGER,aux11311_INTEGER,aux11317_INTEGER,aux11323_INTEGER,aux11329_INTEGER,aux11335_INTEGER,aux11341_INTEGER,aux11347_INTEGER,aux11353_INTEGER,aux11359_INTEGER,aux11365_INTEGER,aux11371_INTEGER,aux11377_INTEGER,aux11383_INTEGER,aux11389_INTEGER,aux11395_INTEGER,aux11401_INTEGER,aux11407_INTEGER,aux11411_INTEGER,1],0,aux11412_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11413,s_00001],0);
constraint int_lt_reif(s_00010,aux11413,aux11414_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux11415_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux11416_BOOL);
constraint int_le_reif(s_00001, s_00010,aux11417_BOOL);
constraint array_bool_and([aux11414_BOOL,aux11415_BOOL,aux11416_BOOL,w_00005_00001_BOOL,aux11417_BOOL],aux11418_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11419,s_00008],0);
constraint int_lt_reif(s_00010,aux11419,aux11420_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux11421_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux11422_BOOL);
constraint int_le_reif(s_00008, s_00010,aux11423_BOOL);
constraint array_bool_and([aux11420_BOOL,aux11421_BOOL,aux11422_BOOL,w_00005_00008_BOOL,aux11423_BOOL],aux11424_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11425,s_00002],0);
constraint int_lt_reif(s_00010,aux11425,aux11426_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11427_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux11428_BOOL);
constraint int_le_reif(s_00002, s_00010,aux11429_BOOL);
constraint array_bool_and([aux11426_BOOL,aux11427_BOOL,aux11428_BOOL,w_00005_00002_BOOL,aux11429_BOOL],aux11430_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11431,s_00004],0);
constraint int_lt_reif(s_00010,aux11431,aux11432_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux11433_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux11434_BOOL);
constraint int_le_reif(s_00004, s_00010,aux11435_BOOL);
constraint array_bool_and([aux11432_BOOL,aux11433_BOOL,aux11434_BOOL,w_00005_00004_BOOL,aux11435_BOOL],aux11436_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11437,s_00005],0);
constraint int_lt_reif(s_00010,aux11437,aux11438_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux11439_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux11440_BOOL);
constraint int_le_reif(s_00005, s_00010,aux11441_BOOL);
constraint array_bool_and([aux11438_BOOL,aux11439_BOOL,aux11440_BOOL,w_00005_00005_BOOL,aux11441_BOOL],aux11442_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11443,s_00007],0);
constraint int_lt_reif(s_00010,aux11443,aux11444_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux11445_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux11446_BOOL);
constraint int_le_reif(s_00007, s_00010,aux11447_BOOL);
constraint array_bool_and([aux11444_BOOL,aux11445_BOOL,aux11446_BOOL,w_00005_00007_BOOL,aux11447_BOOL],aux11448_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11449,s_00009],0);
constraint int_lt_reif(s_00010,aux11449,aux11450_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux11451_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux11452_BOOL);
constraint int_le_reif(s_00009, s_00010,aux11453_BOOL);
constraint array_bool_and([aux11450_BOOL,aux11451_BOOL,aux11452_BOOL,w_00005_00009_BOOL,aux11453_BOOL],aux11454_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11455,s_00013],0);
constraint int_lt_reif(s_00010,aux11455,aux11456_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux11457_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux11458_BOOL);
constraint int_le_reif(s_00013, s_00010,aux11459_BOOL);
constraint array_bool_and([aux11456_BOOL,aux11457_BOOL,aux11458_BOOL,w_00005_00013_BOOL,aux11459_BOOL],aux11460_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11461,s_00003],0);
constraint int_lt_reif(s_00010,aux11461,aux11462_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux11463_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux11464_BOOL);
constraint int_le_reif(s_00003, s_00010,aux11465_BOOL);
constraint array_bool_and([aux11462_BOOL,aux11463_BOOL,aux11464_BOOL,w_00005_00003_BOOL,aux11465_BOOL],aux11466_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11467,s_00017],0);
constraint int_lt_reif(s_00010,aux11467,aux11468_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux11469_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11470_BOOL);
constraint int_le_reif(s_00017, s_00010,aux11471_BOOL);
constraint array_bool_and([aux11468_BOOL,aux11469_BOOL,aux11470_BOOL,w_00005_00017_BOOL,aux11471_BOOL],aux11472_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11473,s_00006],0);
constraint int_lt_reif(s_00010,aux11473,aux11474_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux11475_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux11476_BOOL);
constraint int_le_reif(s_00006, s_00010,aux11477_BOOL);
constraint array_bool_and([aux11474_BOOL,aux11475_BOOL,aux11476_BOOL,w_00005_00006_BOOL,aux11477_BOOL],aux11478_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11479,s_00011],0);
constraint int_lt_reif(s_00010,aux11479,aux11480_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux11481_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux11482_BOOL);
constraint int_le_reif(s_00011, s_00010,aux11483_BOOL);
constraint array_bool_and([aux11480_BOOL,aux11481_BOOL,aux11482_BOOL,w_00005_00011_BOOL,aux11483_BOOL],aux11484_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11485,s_00012],0);
constraint int_lt_reif(s_00010,aux11485,aux11486_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux11487_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux11488_BOOL);
constraint int_le_reif(s_00012, s_00010,aux11489_BOOL);
constraint array_bool_and([aux11486_BOOL,aux11487_BOOL,aux11488_BOOL,w_00005_00012_BOOL,aux11489_BOOL],aux11490_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11491,s_00015],0);
constraint int_lt_reif(s_00010,aux11491,aux11492_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux11493_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux11494_BOOL);
constraint int_le_reif(s_00015, s_00010,aux11495_BOOL);
constraint array_bool_and([aux11492_BOOL,aux11493_BOOL,aux11494_BOOL,w_00005_00015_BOOL,aux11495_BOOL],aux11496_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11497,s_00019],0);
constraint int_lt_reif(s_00010,aux11497,aux11498_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux11499_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux11500_BOOL);
constraint int_le_reif(s_00019, s_00010,aux11501_BOOL);
constraint array_bool_and([aux11498_BOOL,aux11499_BOOL,aux11500_BOOL,w_00005_00019_BOOL,aux11501_BOOL],aux11502_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11503,s_00016],0);
constraint int_lt_reif(s_00010,aux11503,aux11504_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux11505_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux11506_BOOL);
constraint int_le_reif(s_00016, s_00010,aux11507_BOOL);
constraint array_bool_and([aux11504_BOOL,aux11505_BOOL,aux11506_BOOL,w_00005_00016_BOOL,aux11507_BOOL],aux11508_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11509,s_00018],0);
constraint int_lt_reif(s_00010,aux11509,aux11510_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux11511_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux11512_BOOL);
constraint int_le_reif(s_00018, s_00010,aux11513_BOOL);
constraint array_bool_and([aux11510_BOOL,aux11511_BOOL,aux11512_BOOL,w_00005_00018_BOOL,aux11513_BOOL],aux11514_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11515,s_00020],0);
constraint int_lt_reif(s_00010,aux11515,aux11516_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux11517_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11518_BOOL);
constraint int_le_reif(s_00020, s_00010,aux11519_BOOL);
constraint array_bool_and([aux11516_BOOL,aux11517_BOOL,aux11518_BOOL,w_00005_00020_BOOL,aux11519_BOOL],aux11520_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux11521,s_00014],0);
constraint int_lt_reif(s_00010,aux11521,aux11522_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux11523_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux11524_BOOL);
constraint int_le_reif(s_00014, s_00010,aux11525_BOOL);
constraint array_bool_and([aux11522_BOOL,aux11523_BOOL,aux11524_BOOL,w_00005_00014_BOOL,aux11525_BOOL],aux11526_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11527,s_00010],0);
constraint int_lt_reif(s_00010,aux11527,aux11528_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux11529_BOOL);
constraint array_bool_and([aux11528_BOOL,aux11529_BOOL,w_00005_00010_BOOL],aux11530_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux11418_INTEGER,aux11424_INTEGER,aux11430_INTEGER,aux11436_INTEGER,aux11442_INTEGER,aux11448_INTEGER,aux11454_INTEGER,aux11460_INTEGER,aux11466_INTEGER,aux11472_INTEGER,aux11478_INTEGER,aux11484_INTEGER,aux11490_INTEGER,aux11496_INTEGER,aux11502_INTEGER,aux11508_INTEGER,aux11514_INTEGER,aux11520_INTEGER,aux11526_INTEGER,aux11530_INTEGER,1],0,aux11531_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11532,s_00001],0);
constraint int_lt_reif(s_00016,aux11532,aux11533_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux11534_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux11535_BOOL);
constraint int_le_reif(s_00001, s_00016,aux11536_BOOL);
constraint array_bool_and([aux11533_BOOL,aux11534_BOOL,aux11535_BOOL,w_00005_00001_BOOL,aux11536_BOOL],aux11537_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11538,s_00008],0);
constraint int_lt_reif(s_00016,aux11538,aux11539_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux11540_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux11541_BOOL);
constraint int_le_reif(s_00008, s_00016,aux11542_BOOL);
constraint array_bool_and([aux11539_BOOL,aux11540_BOOL,aux11541_BOOL,w_00005_00008_BOOL,aux11542_BOOL],aux11543_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11544,s_00002],0);
constraint int_lt_reif(s_00016,aux11544,aux11545_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11546_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux11547_BOOL);
constraint int_le_reif(s_00002, s_00016,aux11548_BOOL);
constraint array_bool_and([aux11545_BOOL,aux11546_BOOL,aux11547_BOOL,w_00005_00002_BOOL,aux11548_BOOL],aux11549_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11550,s_00004],0);
constraint int_lt_reif(s_00016,aux11550,aux11551_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux11552_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux11553_BOOL);
constraint int_le_reif(s_00004, s_00016,aux11554_BOOL);
constraint array_bool_and([aux11551_BOOL,aux11552_BOOL,aux11553_BOOL,w_00005_00004_BOOL,aux11554_BOOL],aux11555_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11556,s_00005],0);
constraint int_lt_reif(s_00016,aux11556,aux11557_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux11558_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux11559_BOOL);
constraint int_le_reif(s_00005, s_00016,aux11560_BOOL);
constraint array_bool_and([aux11557_BOOL,aux11558_BOOL,aux11559_BOOL,w_00005_00005_BOOL,aux11560_BOOL],aux11561_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11562,s_00007],0);
constraint int_lt_reif(s_00016,aux11562,aux11563_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux11564_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux11565_BOOL);
constraint int_le_reif(s_00007, s_00016,aux11566_BOOL);
constraint array_bool_and([aux11563_BOOL,aux11564_BOOL,aux11565_BOOL,w_00005_00007_BOOL,aux11566_BOOL],aux11567_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11568,s_00009],0);
constraint int_lt_reif(s_00016,aux11568,aux11569_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux11570_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux11571_BOOL);
constraint int_le_reif(s_00009, s_00016,aux11572_BOOL);
constraint array_bool_and([aux11569_BOOL,aux11570_BOOL,aux11571_BOOL,w_00005_00009_BOOL,aux11572_BOOL],aux11573_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11574,s_00010],0);
constraint int_lt_reif(s_00016,aux11574,aux11575_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux11576_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux11577_BOOL);
constraint int_le_reif(s_00010, s_00016,aux11578_BOOL);
constraint array_bool_and([aux11575_BOOL,aux11576_BOOL,aux11577_BOOL,w_00005_00010_BOOL,aux11578_BOOL],aux11579_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11580,s_00003],0);
constraint int_lt_reif(s_00016,aux11580,aux11581_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux11582_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux11583_BOOL);
constraint int_le_reif(s_00003, s_00016,aux11584_BOOL);
constraint array_bool_and([aux11581_BOOL,aux11582_BOOL,aux11583_BOOL,w_00005_00003_BOOL,aux11584_BOOL],aux11585_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11586,s_00013],0);
constraint int_lt_reif(s_00016,aux11586,aux11587_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux11588_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux11589_BOOL);
constraint int_le_reif(s_00013, s_00016,aux11590_BOOL);
constraint array_bool_and([aux11587_BOOL,aux11588_BOOL,aux11589_BOOL,w_00005_00013_BOOL,aux11590_BOOL],aux11591_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11592,s_00006],0);
constraint int_lt_reif(s_00016,aux11592,aux11593_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux11594_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux11595_BOOL);
constraint int_le_reif(s_00006, s_00016,aux11596_BOOL);
constraint array_bool_and([aux11593_BOOL,aux11594_BOOL,aux11595_BOOL,w_00005_00006_BOOL,aux11596_BOOL],aux11597_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11598,s_00017],0);
constraint int_lt_reif(s_00016,aux11598,aux11599_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux11600_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11601_BOOL);
constraint int_le_reif(s_00017, s_00016,aux11602_BOOL);
constraint array_bool_and([aux11599_BOOL,aux11600_BOOL,aux11601_BOOL,w_00005_00017_BOOL,aux11602_BOOL],aux11603_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11604,s_00011],0);
constraint int_lt_reif(s_00016,aux11604,aux11605_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux11606_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux11607_BOOL);
constraint int_le_reif(s_00011, s_00016,aux11608_BOOL);
constraint array_bool_and([aux11605_BOOL,aux11606_BOOL,aux11607_BOOL,w_00005_00011_BOOL,aux11608_BOOL],aux11609_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11610,s_00012],0);
constraint int_lt_reif(s_00016,aux11610,aux11611_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux11612_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux11613_BOOL);
constraint int_le_reif(s_00012, s_00016,aux11614_BOOL);
constraint array_bool_and([aux11611_BOOL,aux11612_BOOL,aux11613_BOOL,w_00005_00012_BOOL,aux11614_BOOL],aux11615_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11616,s_00015],0);
constraint int_lt_reif(s_00016,aux11616,aux11617_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux11618_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux11619_BOOL);
constraint int_le_reif(s_00015, s_00016,aux11620_BOOL);
constraint array_bool_and([aux11617_BOOL,aux11618_BOOL,aux11619_BOOL,w_00005_00015_BOOL,aux11620_BOOL],aux11621_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11622,s_00019],0);
constraint int_lt_reif(s_00016,aux11622,aux11623_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux11624_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux11625_BOOL);
constraint int_le_reif(s_00019, s_00016,aux11626_BOOL);
constraint array_bool_and([aux11623_BOOL,aux11624_BOOL,aux11625_BOOL,w_00005_00019_BOOL,aux11626_BOOL],aux11627_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11628,s_00018],0);
constraint int_lt_reif(s_00016,aux11628,aux11629_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux11630_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux11631_BOOL);
constraint int_le_reif(s_00018, s_00016,aux11632_BOOL);
constraint array_bool_and([aux11629_BOOL,aux11630_BOOL,aux11631_BOOL,w_00005_00018_BOOL,aux11632_BOOL],aux11633_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11634,s_00020],0);
constraint int_lt_reif(s_00016,aux11634,aux11635_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux11636_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11637_BOOL);
constraint int_le_reif(s_00020, s_00016,aux11638_BOOL);
constraint array_bool_and([aux11635_BOOL,aux11636_BOOL,aux11637_BOOL,w_00005_00020_BOOL,aux11638_BOOL],aux11639_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux11640,s_00014],0);
constraint int_lt_reif(s_00016,aux11640,aux11641_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux11642_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux11643_BOOL);
constraint int_le_reif(s_00014, s_00016,aux11644_BOOL);
constraint array_bool_and([aux11641_BOOL,aux11642_BOOL,aux11643_BOOL,w_00005_00014_BOOL,aux11644_BOOL],aux11645_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11646,s_00016],0);
constraint int_lt_reif(s_00016,aux11646,aux11647_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux11648_BOOL);
constraint array_bool_and([aux11647_BOOL,aux11648_BOOL,w_00005_00016_BOOL],aux11649_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux11537_INTEGER,aux11543_INTEGER,aux11549_INTEGER,aux11555_INTEGER,aux11561_INTEGER,aux11567_INTEGER,aux11573_INTEGER,aux11579_INTEGER,aux11585_INTEGER,aux11591_INTEGER,aux11597_INTEGER,aux11603_INTEGER,aux11609_INTEGER,aux11615_INTEGER,aux11621_INTEGER,aux11627_INTEGER,aux11633_INTEGER,aux11639_INTEGER,aux11645_INTEGER,aux11649_INTEGER,1],0,aux11650_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11651,s_00001],0);
constraint int_lt_reif(s_00006,aux11651,aux11652_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux11653_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux11654_BOOL);
constraint int_le_reif(s_00001, s_00006,aux11655_BOOL);
constraint array_bool_and([aux11652_BOOL,aux11653_BOOL,aux11654_BOOL,w_00005_00001_BOOL,aux11655_BOOL],aux11656_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11657,s_00008],0);
constraint int_lt_reif(s_00006,aux11657,aux11658_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux11659_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux11660_BOOL);
constraint int_le_reif(s_00008, s_00006,aux11661_BOOL);
constraint array_bool_and([aux11658_BOOL,aux11659_BOOL,aux11660_BOOL,w_00005_00008_BOOL,aux11661_BOOL],aux11662_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11663,s_00002],0);
constraint int_lt_reif(s_00006,aux11663,aux11664_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11665_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux11666_BOOL);
constraint int_le_reif(s_00002, s_00006,aux11667_BOOL);
constraint array_bool_and([aux11664_BOOL,aux11665_BOOL,aux11666_BOOL,w_00005_00002_BOOL,aux11667_BOOL],aux11668_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11669,s_00010],0);
constraint int_lt_reif(s_00006,aux11669,aux11670_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux11671_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux11672_BOOL);
constraint int_le_reif(s_00010, s_00006,aux11673_BOOL);
constraint array_bool_and([aux11670_BOOL,aux11671_BOOL,aux11672_BOOL,w_00005_00010_BOOL,aux11673_BOOL],aux11674_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11675,s_00004],0);
constraint int_lt_reif(s_00006,aux11675,aux11676_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux11677_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux11678_BOOL);
constraint int_le_reif(s_00004, s_00006,aux11679_BOOL);
constraint array_bool_and([aux11676_BOOL,aux11677_BOOL,aux11678_BOOL,w_00005_00004_BOOL,aux11679_BOOL],aux11680_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11681,s_00013],0);
constraint int_lt_reif(s_00006,aux11681,aux11682_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux11683_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux11684_BOOL);
constraint int_le_reif(s_00013, s_00006,aux11685_BOOL);
constraint array_bool_and([aux11682_BOOL,aux11683_BOOL,aux11684_BOOL,w_00005_00013_BOOL,aux11685_BOOL],aux11686_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11687,s_00005],0);
constraint int_lt_reif(s_00006,aux11687,aux11688_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux11689_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux11690_BOOL);
constraint int_le_reif(s_00005, s_00006,aux11691_BOOL);
constraint array_bool_and([aux11688_BOOL,aux11689_BOOL,aux11690_BOOL,w_00005_00005_BOOL,aux11691_BOOL],aux11692_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11693,s_00007],0);
constraint int_lt_reif(s_00006,aux11693,aux11694_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux11695_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux11696_BOOL);
constraint int_le_reif(s_00007, s_00006,aux11697_BOOL);
constraint array_bool_and([aux11694_BOOL,aux11695_BOOL,aux11696_BOOL,w_00005_00007_BOOL,aux11697_BOOL],aux11698_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11699,s_00017],0);
constraint int_lt_reif(s_00006,aux11699,aux11700_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux11701_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11702_BOOL);
constraint int_le_reif(s_00017, s_00006,aux11703_BOOL);
constraint array_bool_and([aux11700_BOOL,aux11701_BOOL,aux11702_BOOL,w_00005_00017_BOOL,aux11703_BOOL],aux11704_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11705,s_00009],0);
constraint int_lt_reif(s_00006,aux11705,aux11706_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux11707_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux11708_BOOL);
constraint int_le_reif(s_00009, s_00006,aux11709_BOOL);
constraint array_bool_and([aux11706_BOOL,aux11707_BOOL,aux11708_BOOL,w_00005_00009_BOOL,aux11709_BOOL],aux11710_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11711,s_00003],0);
constraint int_lt_reif(s_00006,aux11711,aux11712_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux11713_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux11714_BOOL);
constraint int_le_reif(s_00003, s_00006,aux11715_BOOL);
constraint array_bool_and([aux11712_BOOL,aux11713_BOOL,aux11714_BOOL,w_00005_00003_BOOL,aux11715_BOOL],aux11716_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11717,s_00011],0);
constraint int_lt_reif(s_00006,aux11717,aux11718_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux11719_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux11720_BOOL);
constraint int_le_reif(s_00011, s_00006,aux11721_BOOL);
constraint array_bool_and([aux11718_BOOL,aux11719_BOOL,aux11720_BOOL,w_00005_00011_BOOL,aux11721_BOOL],aux11722_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11723,s_00012],0);
constraint int_lt_reif(s_00006,aux11723,aux11724_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux11725_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux11726_BOOL);
constraint int_le_reif(s_00012, s_00006,aux11727_BOOL);
constraint array_bool_and([aux11724_BOOL,aux11725_BOOL,aux11726_BOOL,w_00005_00012_BOOL,aux11727_BOOL],aux11728_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11729,s_00015],0);
constraint int_lt_reif(s_00006,aux11729,aux11730_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux11731_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux11732_BOOL);
constraint int_le_reif(s_00015, s_00006,aux11733_BOOL);
constraint array_bool_and([aux11730_BOOL,aux11731_BOOL,aux11732_BOOL,w_00005_00015_BOOL,aux11733_BOOL],aux11734_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11735,s_00019],0);
constraint int_lt_reif(s_00006,aux11735,aux11736_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux11737_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux11738_BOOL);
constraint int_le_reif(s_00019, s_00006,aux11739_BOOL);
constraint array_bool_and([aux11736_BOOL,aux11737_BOOL,aux11738_BOOL,w_00005_00019_BOOL,aux11739_BOOL],aux11740_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11741,s_00016],0);
constraint int_lt_reif(s_00006,aux11741,aux11742_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux11743_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux11744_BOOL);
constraint int_le_reif(s_00016, s_00006,aux11745_BOOL);
constraint array_bool_and([aux11742_BOOL,aux11743_BOOL,aux11744_BOOL,w_00005_00016_BOOL,aux11745_BOOL],aux11746_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11747,s_00018],0);
constraint int_lt_reif(s_00006,aux11747,aux11748_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux11749_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux11750_BOOL);
constraint int_le_reif(s_00018, s_00006,aux11751_BOOL);
constraint array_bool_and([aux11748_BOOL,aux11749_BOOL,aux11750_BOOL,w_00005_00018_BOOL,aux11751_BOOL],aux11752_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11753,s_00020],0);
constraint int_lt_reif(s_00006,aux11753,aux11754_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux11755_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11756_BOOL);
constraint int_le_reif(s_00020, s_00006,aux11757_BOOL);
constraint array_bool_and([aux11754_BOOL,aux11755_BOOL,aux11756_BOOL,w_00005_00020_BOOL,aux11757_BOOL],aux11758_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux11759,s_00014],0);
constraint int_lt_reif(s_00006,aux11759,aux11760_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux11761_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux11762_BOOL);
constraint int_le_reif(s_00014, s_00006,aux11763_BOOL);
constraint array_bool_and([aux11760_BOOL,aux11761_BOOL,aux11762_BOOL,w_00005_00014_BOOL,aux11763_BOOL],aux11764_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11765,s_00006],0);
constraint int_lt_reif(s_00006,aux11765,aux11766_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux11767_BOOL);
constraint array_bool_and([aux11766_BOOL,aux11767_BOOL,w_00005_00006_BOOL],aux11768_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux11656_INTEGER,aux11662_INTEGER,aux11668_INTEGER,aux11674_INTEGER,aux11680_INTEGER,aux11686_INTEGER,aux11692_INTEGER,aux11698_INTEGER,aux11704_INTEGER,aux11710_INTEGER,aux11716_INTEGER,aux11722_INTEGER,aux11728_INTEGER,aux11734_INTEGER,aux11740_INTEGER,aux11746_INTEGER,aux11752_INTEGER,aux11758_INTEGER,aux11764_INTEGER,aux11768_INTEGER,1],0,aux11769_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11770,s_00001],0);
constraint int_lt_reif(s_00002,aux11770,aux11771_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux11772_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11773_BOOL);
constraint int_le_reif(s_00001, s_00002,aux11774_BOOL);
constraint array_bool_and([aux11771_BOOL,aux11772_BOOL,aux11773_BOOL,w_00005_00001_BOOL,aux11774_BOOL],aux11775_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11776,s_00008],0);
constraint int_lt_reif(s_00002,aux11776,aux11777_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11778_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux11779_BOOL);
constraint int_le_reif(s_00008, s_00002,aux11780_BOOL);
constraint array_bool_and([aux11777_BOOL,aux11778_BOOL,aux11779_BOOL,w_00005_00008_BOOL,aux11780_BOOL],aux11781_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11782,s_00010],0);
constraint int_lt_reif(s_00002,aux11782,aux11783_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11784_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux11785_BOOL);
constraint int_le_reif(s_00010, s_00002,aux11786_BOOL);
constraint array_bool_and([aux11783_BOOL,aux11784_BOOL,aux11785_BOOL,w_00005_00010_BOOL,aux11786_BOOL],aux11787_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11788,s_00013],0);
constraint int_lt_reif(s_00002,aux11788,aux11789_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11790_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux11791_BOOL);
constraint int_le_reif(s_00013, s_00002,aux11792_BOOL);
constraint array_bool_and([aux11789_BOOL,aux11790_BOOL,aux11791_BOOL,w_00005_00013_BOOL,aux11792_BOOL],aux11793_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11794,s_00004],0);
constraint int_lt_reif(s_00002,aux11794,aux11795_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11796_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux11797_BOOL);
constraint int_le_reif(s_00004, s_00002,aux11798_BOOL);
constraint array_bool_and([aux11795_BOOL,aux11796_BOOL,aux11797_BOOL,w_00005_00004_BOOL,aux11798_BOOL],aux11799_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11800,s_00005],0);
constraint int_lt_reif(s_00002,aux11800,aux11801_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11802_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux11803_BOOL);
constraint int_le_reif(s_00005, s_00002,aux11804_BOOL);
constraint array_bool_and([aux11801_BOOL,aux11802_BOOL,aux11803_BOOL,w_00005_00005_BOOL,aux11804_BOOL],aux11805_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11806,s_00007],0);
constraint int_lt_reif(s_00002,aux11806,aux11807_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11808_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux11809_BOOL);
constraint int_le_reif(s_00007, s_00002,aux11810_BOOL);
constraint array_bool_and([aux11807_BOOL,aux11808_BOOL,aux11809_BOOL,w_00005_00007_BOOL,aux11810_BOOL],aux11811_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11812,s_00017],0);
constraint int_lt_reif(s_00002,aux11812,aux11813_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11814_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11815_BOOL);
constraint int_le_reif(s_00017, s_00002,aux11816_BOOL);
constraint array_bool_and([aux11813_BOOL,aux11814_BOOL,aux11815_BOOL,w_00005_00017_BOOL,aux11816_BOOL],aux11817_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11818,s_00009],0);
constraint int_lt_reif(s_00002,aux11818,aux11819_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11820_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux11821_BOOL);
constraint int_le_reif(s_00009, s_00002,aux11822_BOOL);
constraint array_bool_and([aux11819_BOOL,aux11820_BOOL,aux11821_BOOL,w_00005_00009_BOOL,aux11822_BOOL],aux11823_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11824,s_00011],0);
constraint int_lt_reif(s_00002,aux11824,aux11825_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11826_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux11827_BOOL);
constraint int_le_reif(s_00011, s_00002,aux11828_BOOL);
constraint array_bool_and([aux11825_BOOL,aux11826_BOOL,aux11827_BOOL,w_00005_00011_BOOL,aux11828_BOOL],aux11829_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11830,s_00012],0);
constraint int_lt_reif(s_00002,aux11830,aux11831_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11832_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux11833_BOOL);
constraint int_le_reif(s_00012, s_00002,aux11834_BOOL);
constraint array_bool_and([aux11831_BOOL,aux11832_BOOL,aux11833_BOOL,w_00005_00012_BOOL,aux11834_BOOL],aux11835_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11836,s_00003],0);
constraint int_lt_reif(s_00002,aux11836,aux11837_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11838_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux11839_BOOL);
constraint int_le_reif(s_00003, s_00002,aux11840_BOOL);
constraint array_bool_and([aux11837_BOOL,aux11838_BOOL,aux11839_BOOL,w_00005_00003_BOOL,aux11840_BOOL],aux11841_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11842,s_00015],0);
constraint int_lt_reif(s_00002,aux11842,aux11843_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11844_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux11845_BOOL);
constraint int_le_reif(s_00015, s_00002,aux11846_BOOL);
constraint array_bool_and([aux11843_BOOL,aux11844_BOOL,aux11845_BOOL,w_00005_00015_BOOL,aux11846_BOOL],aux11847_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11848,s_00006],0);
constraint int_lt_reif(s_00002,aux11848,aux11849_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11850_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux11851_BOOL);
constraint int_le_reif(s_00006, s_00002,aux11852_BOOL);
constraint array_bool_and([aux11849_BOOL,aux11850_BOOL,aux11851_BOOL,w_00005_00006_BOOL,aux11852_BOOL],aux11853_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11854,s_00019],0);
constraint int_lt_reif(s_00002,aux11854,aux11855_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11856_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux11857_BOOL);
constraint int_le_reif(s_00019, s_00002,aux11858_BOOL);
constraint array_bool_and([aux11855_BOOL,aux11856_BOOL,aux11857_BOOL,w_00005_00019_BOOL,aux11858_BOOL],aux11859_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11860,s_00016],0);
constraint int_lt_reif(s_00002,aux11860,aux11861_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11862_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux11863_BOOL);
constraint int_le_reif(s_00016, s_00002,aux11864_BOOL);
constraint array_bool_and([aux11861_BOOL,aux11862_BOOL,aux11863_BOOL,w_00005_00016_BOOL,aux11864_BOOL],aux11865_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11866,s_00018],0);
constraint int_lt_reif(s_00002,aux11866,aux11867_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11868_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux11869_BOOL);
constraint int_le_reif(s_00018, s_00002,aux11870_BOOL);
constraint array_bool_and([aux11867_BOOL,aux11868_BOOL,aux11869_BOOL,w_00005_00018_BOOL,aux11870_BOOL],aux11871_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11872,s_00020],0);
constraint int_lt_reif(s_00002,aux11872,aux11873_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11874_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11875_BOOL);
constraint int_le_reif(s_00020, s_00002,aux11876_BOOL);
constraint array_bool_and([aux11873_BOOL,aux11874_BOOL,aux11875_BOOL,w_00005_00020_BOOL,aux11876_BOOL],aux11877_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux11878,s_00014],0);
constraint int_lt_reif(s_00002,aux11878,aux11879_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11880_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux11881_BOOL);
constraint int_le_reif(s_00014, s_00002,aux11882_BOOL);
constraint array_bool_and([aux11879_BOOL,aux11880_BOOL,aux11881_BOOL,w_00005_00014_BOOL,aux11882_BOOL],aux11883_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11884,s_00002],0);
constraint int_lt_reif(s_00002,aux11884,aux11885_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11886_BOOL);
constraint array_bool_and([aux11885_BOOL,aux11886_BOOL,w_00005_00002_BOOL],aux11887_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux11775_INTEGER,aux11781_INTEGER,aux11787_INTEGER,aux11793_INTEGER,aux11799_INTEGER,aux11805_INTEGER,aux11811_INTEGER,aux11817_INTEGER,aux11823_INTEGER,aux11829_INTEGER,aux11835_INTEGER,aux11841_INTEGER,aux11847_INTEGER,aux11853_INTEGER,aux11859_INTEGER,aux11865_INTEGER,aux11871_INTEGER,aux11877_INTEGER,aux11883_INTEGER,aux11887_INTEGER,1],0,aux11888_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11889,s_00020],0);
constraint int_lt_reif(s_00020,aux11889,aux11890_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11891_BOOL);
constraint array_bool_and([aux11890_BOOL,aux11891_BOOL,w_00005_00020_BOOL],aux11892_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11893,s_00001],0);
constraint int_lt_reif(s_00020,aux11893,aux11894_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux11895_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11896_BOOL);
constraint int_le_reif(s_00001, s_00020,aux11897_BOOL);
constraint array_bool_and([aux11894_BOOL,aux11895_BOOL,aux11896_BOOL,w_00005_00001_BOOL,aux11897_BOOL],aux11898_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11899,s_00008],0);
constraint int_lt_reif(s_00020,aux11899,aux11900_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux11901_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11902_BOOL);
constraint int_le_reif(s_00008, s_00020,aux11903_BOOL);
constraint array_bool_and([aux11900_BOOL,aux11901_BOOL,aux11902_BOOL,w_00005_00008_BOOL,aux11903_BOOL],aux11904_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11905,s_00002],0);
constraint int_lt_reif(s_00020,aux11905,aux11906_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux11907_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11908_BOOL);
constraint int_le_reif(s_00002, s_00020,aux11909_BOOL);
constraint array_bool_and([aux11906_BOOL,aux11907_BOOL,aux11908_BOOL,w_00005_00002_BOOL,aux11909_BOOL],aux11910_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11911,s_00004],0);
constraint int_lt_reif(s_00020,aux11911,aux11912_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux11913_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11914_BOOL);
constraint int_le_reif(s_00004, s_00020,aux11915_BOOL);
constraint array_bool_and([aux11912_BOOL,aux11913_BOOL,aux11914_BOOL,w_00005_00004_BOOL,aux11915_BOOL],aux11916_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11917,s_00005],0);
constraint int_lt_reif(s_00020,aux11917,aux11918_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux11919_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11920_BOOL);
constraint int_le_reif(s_00005, s_00020,aux11921_BOOL);
constraint array_bool_and([aux11918_BOOL,aux11919_BOOL,aux11920_BOOL,w_00005_00005_BOOL,aux11921_BOOL],aux11922_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11923,s_00007],0);
constraint int_lt_reif(s_00020,aux11923,aux11924_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux11925_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11926_BOOL);
constraint int_le_reif(s_00007, s_00020,aux11927_BOOL);
constraint array_bool_and([aux11924_BOOL,aux11925_BOOL,aux11926_BOOL,w_00005_00007_BOOL,aux11927_BOOL],aux11928_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11929,s_00009],0);
constraint int_lt_reif(s_00020,aux11929,aux11930_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux11931_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11932_BOOL);
constraint int_le_reif(s_00009, s_00020,aux11933_BOOL);
constraint array_bool_and([aux11930_BOOL,aux11931_BOOL,aux11932_BOOL,w_00005_00009_BOOL,aux11933_BOOL],aux11934_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11935,s_00010],0);
constraint int_lt_reif(s_00020,aux11935,aux11936_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux11937_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11938_BOOL);
constraint int_le_reif(s_00010, s_00020,aux11939_BOOL);
constraint array_bool_and([aux11936_BOOL,aux11937_BOOL,aux11938_BOOL,w_00005_00010_BOOL,aux11939_BOOL],aux11940_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11941,s_00003],0);
constraint int_lt_reif(s_00020,aux11941,aux11942_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux11943_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11944_BOOL);
constraint int_le_reif(s_00003, s_00020,aux11945_BOOL);
constraint array_bool_and([aux11942_BOOL,aux11943_BOOL,aux11944_BOOL,w_00005_00003_BOOL,aux11945_BOOL],aux11946_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11947,s_00013],0);
constraint int_lt_reif(s_00020,aux11947,aux11948_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux11949_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11950_BOOL);
constraint int_le_reif(s_00013, s_00020,aux11951_BOOL);
constraint array_bool_and([aux11948_BOOL,aux11949_BOOL,aux11950_BOOL,w_00005_00013_BOOL,aux11951_BOOL],aux11952_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11953,s_00006],0);
constraint int_lt_reif(s_00020,aux11953,aux11954_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux11955_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11956_BOOL);
constraint int_le_reif(s_00006, s_00020,aux11957_BOOL);
constraint array_bool_and([aux11954_BOOL,aux11955_BOOL,aux11956_BOOL,w_00005_00006_BOOL,aux11957_BOOL],aux11958_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux11959,s_00017],0);
constraint int_lt_reif(s_00020,aux11959,aux11960_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux11961_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11962_BOOL);
constraint int_le_reif(s_00017, s_00020,aux11963_BOOL);
constraint array_bool_and([aux11960_BOOL,aux11961_BOOL,aux11962_BOOL,w_00005_00017_BOOL,aux11963_BOOL],aux11964_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11965,s_00011],0);
constraint int_lt_reif(s_00020,aux11965,aux11966_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux11967_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11968_BOOL);
constraint int_le_reif(s_00011, s_00020,aux11969_BOOL);
constraint array_bool_and([aux11966_BOOL,aux11967_BOOL,aux11968_BOOL,w_00005_00011_BOOL,aux11969_BOOL],aux11970_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11971,s_00012],0);
constraint int_lt_reif(s_00020,aux11971,aux11972_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux11973_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11974_BOOL);
constraint int_le_reif(s_00012, s_00020,aux11975_BOOL);
constraint array_bool_and([aux11972_BOOL,aux11973_BOOL,aux11974_BOOL,w_00005_00012_BOOL,aux11975_BOOL],aux11976_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11977,s_00015],0);
constraint int_lt_reif(s_00020,aux11977,aux11978_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux11979_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11980_BOOL);
constraint int_le_reif(s_00015, s_00020,aux11981_BOOL);
constraint array_bool_and([aux11978_BOOL,aux11979_BOOL,aux11980_BOOL,w_00005_00015_BOOL,aux11981_BOOL],aux11982_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux11983,s_00019],0);
constraint int_lt_reif(s_00020,aux11983,aux11984_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux11985_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11986_BOOL);
constraint int_le_reif(s_00019, s_00020,aux11987_BOOL);
constraint array_bool_and([aux11984_BOOL,aux11985_BOOL,aux11986_BOOL,w_00005_00019_BOOL,aux11987_BOOL],aux11988_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11989,s_00016],0);
constraint int_lt_reif(s_00020,aux11989,aux11990_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux11991_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11992_BOOL);
constraint int_le_reif(s_00016, s_00020,aux11993_BOOL);
constraint array_bool_and([aux11990_BOOL,aux11991_BOOL,aux11992_BOOL,w_00005_00016_BOOL,aux11993_BOOL],aux11994_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux11995,s_00018],0);
constraint int_lt_reif(s_00020,aux11995,aux11996_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux11997_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux11998_BOOL);
constraint int_le_reif(s_00018, s_00020,aux11999_BOOL);
constraint array_bool_and([aux11996_BOOL,aux11997_BOOL,aux11998_BOOL,w_00005_00018_BOOL,aux11999_BOOL],aux12000_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux12001,s_00014],0);
constraint int_lt_reif(s_00020,aux12001,aux12002_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux12003_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux12004_BOOL);
constraint int_le_reif(s_00014, s_00020,aux12005_BOOL);
constraint array_bool_and([aux12002_BOOL,aux12003_BOOL,aux12004_BOOL,w_00005_00014_BOOL,aux12005_BOOL],aux12006_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux11892_INTEGER,aux11898_INTEGER,aux11904_INTEGER,aux11910_INTEGER,aux11916_INTEGER,aux11922_INTEGER,aux11928_INTEGER,aux11934_INTEGER,aux11940_INTEGER,aux11946_INTEGER,aux11952_INTEGER,aux11958_INTEGER,aux11964_INTEGER,aux11970_INTEGER,aux11976_INTEGER,aux11982_INTEGER,aux11988_INTEGER,aux11994_INTEGER,aux12000_INTEGER,aux12006_INTEGER,1],0,aux12007_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12008,s_00001],0);
constraint int_lt_reif(s_00018,aux12008,aux12009_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux12010_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux12011_BOOL);
constraint int_le_reif(s_00001, s_00018,aux12012_BOOL);
constraint array_bool_and([aux12009_BOOL,aux12010_BOOL,aux12011_BOOL,w_00005_00001_BOOL,aux12012_BOOL],aux12013_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12014,s_00008],0);
constraint int_lt_reif(s_00018,aux12014,aux12015_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux12016_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux12017_BOOL);
constraint int_le_reif(s_00008, s_00018,aux12018_BOOL);
constraint array_bool_and([aux12015_BOOL,aux12016_BOOL,aux12017_BOOL,w_00005_00008_BOOL,aux12018_BOOL],aux12019_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12020,s_00002],0);
constraint int_lt_reif(s_00018,aux12020,aux12021_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux12022_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux12023_BOOL);
constraint int_le_reif(s_00002, s_00018,aux12024_BOOL);
constraint array_bool_and([aux12021_BOOL,aux12022_BOOL,aux12023_BOOL,w_00005_00002_BOOL,aux12024_BOOL],aux12025_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12026,s_00004],0);
constraint int_lt_reif(s_00018,aux12026,aux12027_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux12028_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux12029_BOOL);
constraint int_le_reif(s_00004, s_00018,aux12030_BOOL);
constraint array_bool_and([aux12027_BOOL,aux12028_BOOL,aux12029_BOOL,w_00005_00004_BOOL,aux12030_BOOL],aux12031_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12032,s_00005],0);
constraint int_lt_reif(s_00018,aux12032,aux12033_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux12034_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux12035_BOOL);
constraint int_le_reif(s_00005, s_00018,aux12036_BOOL);
constraint array_bool_and([aux12033_BOOL,aux12034_BOOL,aux12035_BOOL,w_00005_00005_BOOL,aux12036_BOOL],aux12037_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12038,s_00007],0);
constraint int_lt_reif(s_00018,aux12038,aux12039_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux12040_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux12041_BOOL);
constraint int_le_reif(s_00007, s_00018,aux12042_BOOL);
constraint array_bool_and([aux12039_BOOL,aux12040_BOOL,aux12041_BOOL,w_00005_00007_BOOL,aux12042_BOOL],aux12043_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12044,s_00009],0);
constraint int_lt_reif(s_00018,aux12044,aux12045_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux12046_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux12047_BOOL);
constraint int_le_reif(s_00009, s_00018,aux12048_BOOL);
constraint array_bool_and([aux12045_BOOL,aux12046_BOOL,aux12047_BOOL,w_00005_00009_BOOL,aux12048_BOOL],aux12049_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12050,s_00010],0);
constraint int_lt_reif(s_00018,aux12050,aux12051_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux12052_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux12053_BOOL);
constraint int_le_reif(s_00010, s_00018,aux12054_BOOL);
constraint array_bool_and([aux12051_BOOL,aux12052_BOOL,aux12053_BOOL,w_00005_00010_BOOL,aux12054_BOOL],aux12055_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12056,s_00003],0);
constraint int_lt_reif(s_00018,aux12056,aux12057_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux12058_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux12059_BOOL);
constraint int_le_reif(s_00003, s_00018,aux12060_BOOL);
constraint array_bool_and([aux12057_BOOL,aux12058_BOOL,aux12059_BOOL,w_00005_00003_BOOL,aux12060_BOOL],aux12061_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12062,s_00013],0);
constraint int_lt_reif(s_00018,aux12062,aux12063_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux12064_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux12065_BOOL);
constraint int_le_reif(s_00013, s_00018,aux12066_BOOL);
constraint array_bool_and([aux12063_BOOL,aux12064_BOOL,aux12065_BOOL,w_00005_00013_BOOL,aux12066_BOOL],aux12067_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12068,s_00006],0);
constraint int_lt_reif(s_00018,aux12068,aux12069_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux12070_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux12071_BOOL);
constraint int_le_reif(s_00006, s_00018,aux12072_BOOL);
constraint array_bool_and([aux12069_BOOL,aux12070_BOOL,aux12071_BOOL,w_00005_00006_BOOL,aux12072_BOOL],aux12073_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12074,s_00017],0);
constraint int_lt_reif(s_00018,aux12074,aux12075_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux12076_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux12077_BOOL);
constraint int_le_reif(s_00017, s_00018,aux12078_BOOL);
constraint array_bool_and([aux12075_BOOL,aux12076_BOOL,aux12077_BOOL,w_00005_00017_BOOL,aux12078_BOOL],aux12079_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12080,s_00011],0);
constraint int_lt_reif(s_00018,aux12080,aux12081_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux12082_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux12083_BOOL);
constraint int_le_reif(s_00011, s_00018,aux12084_BOOL);
constraint array_bool_and([aux12081_BOOL,aux12082_BOOL,aux12083_BOOL,w_00005_00011_BOOL,aux12084_BOOL],aux12085_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12086,s_00012],0);
constraint int_lt_reif(s_00018,aux12086,aux12087_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux12088_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux12089_BOOL);
constraint int_le_reif(s_00012, s_00018,aux12090_BOOL);
constraint array_bool_and([aux12087_BOOL,aux12088_BOOL,aux12089_BOOL,w_00005_00012_BOOL,aux12090_BOOL],aux12091_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12092,s_00015],0);
constraint int_lt_reif(s_00018,aux12092,aux12093_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux12094_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux12095_BOOL);
constraint int_le_reif(s_00015, s_00018,aux12096_BOOL);
constraint array_bool_and([aux12093_BOOL,aux12094_BOOL,aux12095_BOOL,w_00005_00015_BOOL,aux12096_BOOL],aux12097_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12098,s_00019],0);
constraint int_lt_reif(s_00018,aux12098,aux12099_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux12100_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux12101_BOOL);
constraint int_le_reif(s_00019, s_00018,aux12102_BOOL);
constraint array_bool_and([aux12099_BOOL,aux12100_BOOL,aux12101_BOOL,w_00005_00019_BOOL,aux12102_BOOL],aux12103_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12104,s_00016],0);
constraint int_lt_reif(s_00018,aux12104,aux12105_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux12106_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux12107_BOOL);
constraint int_le_reif(s_00016, s_00018,aux12108_BOOL);
constraint array_bool_and([aux12105_BOOL,aux12106_BOOL,aux12107_BOOL,w_00005_00016_BOOL,aux12108_BOOL],aux12109_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux12110,s_00014],0);
constraint int_lt_reif(s_00018,aux12110,aux12111_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux12112_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux12113_BOOL);
constraint int_le_reif(s_00014, s_00018,aux12114_BOOL);
constraint array_bool_and([aux12111_BOOL,aux12112_BOOL,aux12113_BOOL,w_00005_00014_BOOL,aux12114_BOOL],aux12115_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12116,s_00020],0);
constraint int_lt_reif(s_00018,aux12116,aux12117_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux12118_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux12119_BOOL);
constraint int_le_reif(s_00020, s_00018,aux12120_BOOL);
constraint array_bool_and([aux12117_BOOL,aux12118_BOOL,aux12119_BOOL,w_00005_00020_BOOL,aux12120_BOOL],aux12121_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12122,s_00018],0);
constraint int_lt_reif(s_00018,aux12122,aux12123_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux12124_BOOL);
constraint array_bool_and([aux12123_BOOL,aux12124_BOOL,w_00005_00018_BOOL],aux12125_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux12013_INTEGER,aux12019_INTEGER,aux12025_INTEGER,aux12031_INTEGER,aux12037_INTEGER,aux12043_INTEGER,aux12049_INTEGER,aux12055_INTEGER,aux12061_INTEGER,aux12067_INTEGER,aux12073_INTEGER,aux12079_INTEGER,aux12085_INTEGER,aux12091_INTEGER,aux12097_INTEGER,aux12103_INTEGER,aux12109_INTEGER,aux12115_INTEGER,aux12121_INTEGER,aux12125_INTEGER,1],0,aux12126_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12127,s_00001],0);
constraint int_lt_reif(s_00003,aux12127,aux12128_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux12129_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux12130_BOOL);
constraint int_le_reif(s_00001, s_00003,aux12131_BOOL);
constraint array_bool_and([aux12128_BOOL,aux12129_BOOL,aux12130_BOOL,w_00005_00001_BOOL,aux12131_BOOL],aux12132_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12133,s_00008],0);
constraint int_lt_reif(s_00003,aux12133,aux12134_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux12135_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux12136_BOOL);
constraint int_le_reif(s_00008, s_00003,aux12137_BOOL);
constraint array_bool_and([aux12134_BOOL,aux12135_BOOL,aux12136_BOOL,w_00005_00008_BOOL,aux12137_BOOL],aux12138_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12139,s_00010],0);
constraint int_lt_reif(s_00003,aux12139,aux12140_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux12141_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux12142_BOOL);
constraint int_le_reif(s_00010, s_00003,aux12143_BOOL);
constraint array_bool_and([aux12140_BOOL,aux12141_BOOL,aux12142_BOOL,w_00005_00010_BOOL,aux12143_BOOL],aux12144_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12145,s_00002],0);
constraint int_lt_reif(s_00003,aux12145,aux12146_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux12147_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux12148_BOOL);
constraint int_le_reif(s_00002, s_00003,aux12149_BOOL);
constraint array_bool_and([aux12146_BOOL,aux12147_BOOL,aux12148_BOOL,w_00005_00002_BOOL,aux12149_BOOL],aux12150_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12151,s_00013],0);
constraint int_lt_reif(s_00003,aux12151,aux12152_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux12153_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux12154_BOOL);
constraint int_le_reif(s_00013, s_00003,aux12155_BOOL);
constraint array_bool_and([aux12152_BOOL,aux12153_BOOL,aux12154_BOOL,w_00005_00013_BOOL,aux12155_BOOL],aux12156_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12157,s_00004],0);
constraint int_lt_reif(s_00003,aux12157,aux12158_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux12159_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux12160_BOOL);
constraint int_le_reif(s_00004, s_00003,aux12161_BOOL);
constraint array_bool_and([aux12158_BOOL,aux12159_BOOL,aux12160_BOOL,w_00005_00004_BOOL,aux12161_BOOL],aux12162_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12163,s_00005],0);
constraint int_lt_reif(s_00003,aux12163,aux12164_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux12165_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux12166_BOOL);
constraint int_le_reif(s_00005, s_00003,aux12167_BOOL);
constraint array_bool_and([aux12164_BOOL,aux12165_BOOL,aux12166_BOOL,w_00005_00005_BOOL,aux12167_BOOL],aux12168_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12169,s_00007],0);
constraint int_lt_reif(s_00003,aux12169,aux12170_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux12171_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux12172_BOOL);
constraint int_le_reif(s_00007, s_00003,aux12173_BOOL);
constraint array_bool_and([aux12170_BOOL,aux12171_BOOL,aux12172_BOOL,w_00005_00007_BOOL,aux12173_BOOL],aux12174_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12175,s_00017],0);
constraint int_lt_reif(s_00003,aux12175,aux12176_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux12177_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux12178_BOOL);
constraint int_le_reif(s_00017, s_00003,aux12179_BOOL);
constraint array_bool_and([aux12176_BOOL,aux12177_BOOL,aux12178_BOOL,w_00005_00017_BOOL,aux12179_BOOL],aux12180_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12181,s_00009],0);
constraint int_lt_reif(s_00003,aux12181,aux12182_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux12183_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux12184_BOOL);
constraint int_le_reif(s_00009, s_00003,aux12185_BOOL);
constraint array_bool_and([aux12182_BOOL,aux12183_BOOL,aux12184_BOOL,w_00005_00009_BOOL,aux12185_BOOL],aux12186_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12187,s_00011],0);
constraint int_lt_reif(s_00003,aux12187,aux12188_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux12189_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux12190_BOOL);
constraint int_le_reif(s_00011, s_00003,aux12191_BOOL);
constraint array_bool_and([aux12188_BOOL,aux12189_BOOL,aux12190_BOOL,w_00005_00011_BOOL,aux12191_BOOL],aux12192_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12193,s_00012],0);
constraint int_lt_reif(s_00003,aux12193,aux12194_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux12195_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux12196_BOOL);
constraint int_le_reif(s_00012, s_00003,aux12197_BOOL);
constraint array_bool_and([aux12194_BOOL,aux12195_BOOL,aux12196_BOOL,w_00005_00012_BOOL,aux12197_BOOL],aux12198_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12199,s_00015],0);
constraint int_lt_reif(s_00003,aux12199,aux12200_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux12201_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux12202_BOOL);
constraint int_le_reif(s_00015, s_00003,aux12203_BOOL);
constraint array_bool_and([aux12200_BOOL,aux12201_BOOL,aux12202_BOOL,w_00005_00015_BOOL,aux12203_BOOL],aux12204_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12205,s_00006],0);
constraint int_lt_reif(s_00003,aux12205,aux12206_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux12207_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux12208_BOOL);
constraint int_le_reif(s_00006, s_00003,aux12209_BOOL);
constraint array_bool_and([aux12206_BOOL,aux12207_BOOL,aux12208_BOOL,w_00005_00006_BOOL,aux12209_BOOL],aux12210_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12211,s_00019],0);
constraint int_lt_reif(s_00003,aux12211,aux12212_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux12213_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux12214_BOOL);
constraint int_le_reif(s_00019, s_00003,aux12215_BOOL);
constraint array_bool_and([aux12212_BOOL,aux12213_BOOL,aux12214_BOOL,w_00005_00019_BOOL,aux12215_BOOL],aux12216_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12217,s_00016],0);
constraint int_lt_reif(s_00003,aux12217,aux12218_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux12219_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux12220_BOOL);
constraint int_le_reif(s_00016, s_00003,aux12221_BOOL);
constraint array_bool_and([aux12218_BOOL,aux12219_BOOL,aux12220_BOOL,w_00005_00016_BOOL,aux12221_BOOL],aux12222_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12223,s_00018],0);
constraint int_lt_reif(s_00003,aux12223,aux12224_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux12225_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux12226_BOOL);
constraint int_le_reif(s_00018, s_00003,aux12227_BOOL);
constraint array_bool_and([aux12224_BOOL,aux12225_BOOL,aux12226_BOOL,w_00005_00018_BOOL,aux12227_BOOL],aux12228_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12229,s_00020],0);
constraint int_lt_reif(s_00003,aux12229,aux12230_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux12231_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux12232_BOOL);
constraint int_le_reif(s_00020, s_00003,aux12233_BOOL);
constraint array_bool_and([aux12230_BOOL,aux12231_BOOL,aux12232_BOOL,w_00005_00020_BOOL,aux12233_BOOL],aux12234_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux12235,s_00014],0);
constraint int_lt_reif(s_00003,aux12235,aux12236_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux12237_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux12238_BOOL);
constraint int_le_reif(s_00014, s_00003,aux12239_BOOL);
constraint array_bool_and([aux12236_BOOL,aux12237_BOOL,aux12238_BOOL,w_00005_00014_BOOL,aux12239_BOOL],aux12240_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12241,s_00003],0);
constraint int_lt_reif(s_00003,aux12241,aux12242_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux12243_BOOL);
constraint array_bool_and([aux12242_BOOL,aux12243_BOOL,w_00005_00003_BOOL],aux12244_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux12132_INTEGER,aux12138_INTEGER,aux12144_INTEGER,aux12150_INTEGER,aux12156_INTEGER,aux12162_INTEGER,aux12168_INTEGER,aux12174_INTEGER,aux12180_INTEGER,aux12186_INTEGER,aux12192_INTEGER,aux12198_INTEGER,aux12204_INTEGER,aux12210_INTEGER,aux12216_INTEGER,aux12222_INTEGER,aux12228_INTEGER,aux12234_INTEGER,aux12240_INTEGER,aux12244_INTEGER,1],0,aux12245_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12246,s_00001],0);
constraint int_lt_reif(s_00008,aux12246,aux12247_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux12248_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux12249_BOOL);
constraint int_le_reif(s_00001, s_00008,aux12250_BOOL);
constraint array_bool_and([aux12247_BOOL,aux12248_BOOL,aux12249_BOOL,w_00005_00001_BOOL,aux12250_BOOL],aux12251_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12252,s_00002],0);
constraint int_lt_reif(s_00008,aux12252,aux12253_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux12254_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux12255_BOOL);
constraint int_le_reif(s_00002, s_00008,aux12256_BOOL);
constraint array_bool_and([aux12253_BOOL,aux12254_BOOL,aux12255_BOOL,w_00005_00002_BOOL,aux12256_BOOL],aux12257_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12258,s_00004],0);
constraint int_lt_reif(s_00008,aux12258,aux12259_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux12260_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux12261_BOOL);
constraint int_le_reif(s_00004, s_00008,aux12262_BOOL);
constraint array_bool_and([aux12259_BOOL,aux12260_BOOL,aux12261_BOOL,w_00005_00004_BOOL,aux12262_BOOL],aux12263_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12264,s_00010],0);
constraint int_lt_reif(s_00008,aux12264,aux12265_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux12266_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux12267_BOOL);
constraint int_le_reif(s_00010, s_00008,aux12268_BOOL);
constraint array_bool_and([aux12265_BOOL,aux12266_BOOL,aux12267_BOOL,w_00005_00010_BOOL,aux12268_BOOL],aux12269_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12270,s_00005],0);
constraint int_lt_reif(s_00008,aux12270,aux12271_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux12272_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux12273_BOOL);
constraint int_le_reif(s_00005, s_00008,aux12274_BOOL);
constraint array_bool_and([aux12271_BOOL,aux12272_BOOL,aux12273_BOOL,w_00005_00005_BOOL,aux12274_BOOL],aux12275_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12276,s_00013],0);
constraint int_lt_reif(s_00008,aux12276,aux12277_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux12278_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux12279_BOOL);
constraint int_le_reif(s_00013, s_00008,aux12280_BOOL);
constraint array_bool_and([aux12277_BOOL,aux12278_BOOL,aux12279_BOOL,w_00005_00013_BOOL,aux12280_BOOL],aux12281_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12282,s_00007],0);
constraint int_lt_reif(s_00008,aux12282,aux12283_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux12284_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux12285_BOOL);
constraint int_le_reif(s_00007, s_00008,aux12286_BOOL);
constraint array_bool_and([aux12283_BOOL,aux12284_BOOL,aux12285_BOOL,w_00005_00007_BOOL,aux12286_BOOL],aux12287_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12288,s_00017],0);
constraint int_lt_reif(s_00008,aux12288,aux12289_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux12290_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux12291_BOOL);
constraint int_le_reif(s_00017, s_00008,aux12292_BOOL);
constraint array_bool_and([aux12289_BOOL,aux12290_BOOL,aux12291_BOOL,w_00005_00017_BOOL,aux12292_BOOL],aux12293_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12294,s_00009],0);
constraint int_lt_reif(s_00008,aux12294,aux12295_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux12296_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux12297_BOOL);
constraint int_le_reif(s_00009, s_00008,aux12298_BOOL);
constraint array_bool_and([aux12295_BOOL,aux12296_BOOL,aux12297_BOOL,w_00005_00009_BOOL,aux12298_BOOL],aux12299_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12300,s_00003],0);
constraint int_lt_reif(s_00008,aux12300,aux12301_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux12302_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux12303_BOOL);
constraint int_le_reif(s_00003, s_00008,aux12304_BOOL);
constraint array_bool_and([aux12301_BOOL,aux12302_BOOL,aux12303_BOOL,w_00005_00003_BOOL,aux12304_BOOL],aux12305_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12306,s_00011],0);
constraint int_lt_reif(s_00008,aux12306,aux12307_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux12308_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux12309_BOOL);
constraint int_le_reif(s_00011, s_00008,aux12310_BOOL);
constraint array_bool_and([aux12307_BOOL,aux12308_BOOL,aux12309_BOOL,w_00005_00011_BOOL,aux12310_BOOL],aux12311_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12312,s_00012],0);
constraint int_lt_reif(s_00008,aux12312,aux12313_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux12314_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux12315_BOOL);
constraint int_le_reif(s_00012, s_00008,aux12316_BOOL);
constraint array_bool_and([aux12313_BOOL,aux12314_BOOL,aux12315_BOOL,w_00005_00012_BOOL,aux12316_BOOL],aux12317_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12318,s_00006],0);
constraint int_lt_reif(s_00008,aux12318,aux12319_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux12320_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux12321_BOOL);
constraint int_le_reif(s_00006, s_00008,aux12322_BOOL);
constraint array_bool_and([aux12319_BOOL,aux12320_BOOL,aux12321_BOOL,w_00005_00006_BOOL,aux12322_BOOL],aux12323_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12324,s_00015],0);
constraint int_lt_reif(s_00008,aux12324,aux12325_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux12326_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux12327_BOOL);
constraint int_le_reif(s_00015, s_00008,aux12328_BOOL);
constraint array_bool_and([aux12325_BOOL,aux12326_BOOL,aux12327_BOOL,w_00005_00015_BOOL,aux12328_BOOL],aux12329_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12330,s_00019],0);
constraint int_lt_reif(s_00008,aux12330,aux12331_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux12332_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux12333_BOOL);
constraint int_le_reif(s_00019, s_00008,aux12334_BOOL);
constraint array_bool_and([aux12331_BOOL,aux12332_BOOL,aux12333_BOOL,w_00005_00019_BOOL,aux12334_BOOL],aux12335_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12336,s_00016],0);
constraint int_lt_reif(s_00008,aux12336,aux12337_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux12338_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux12339_BOOL);
constraint int_le_reif(s_00016, s_00008,aux12340_BOOL);
constraint array_bool_and([aux12337_BOOL,aux12338_BOOL,aux12339_BOOL,w_00005_00016_BOOL,aux12340_BOOL],aux12341_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12342,s_00018],0);
constraint int_lt_reif(s_00008,aux12342,aux12343_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux12344_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux12345_BOOL);
constraint int_le_reif(s_00018, s_00008,aux12346_BOOL);
constraint array_bool_and([aux12343_BOOL,aux12344_BOOL,aux12345_BOOL,w_00005_00018_BOOL,aux12346_BOOL],aux12347_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12348,s_00020],0);
constraint int_lt_reif(s_00008,aux12348,aux12349_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux12350_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux12351_BOOL);
constraint int_le_reif(s_00020, s_00008,aux12352_BOOL);
constraint array_bool_and([aux12349_BOOL,aux12350_BOOL,aux12351_BOOL,w_00005_00020_BOOL,aux12352_BOOL],aux12353_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux12354,s_00014],0);
constraint int_lt_reif(s_00008,aux12354,aux12355_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux12356_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux12357_BOOL);
constraint int_le_reif(s_00014, s_00008,aux12358_BOOL);
constraint array_bool_and([aux12355_BOOL,aux12356_BOOL,aux12357_BOOL,w_00005_00014_BOOL,aux12358_BOOL],aux12359_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12360,s_00008],0);
constraint int_lt_reif(s_00008,aux12360,aux12361_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux12362_BOOL);
constraint array_bool_and([aux12361_BOOL,aux12362_BOOL,w_00005_00008_BOOL],aux12363_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux12251_INTEGER,aux12257_INTEGER,aux12263_INTEGER,aux12269_INTEGER,aux12275_INTEGER,aux12281_INTEGER,aux12287_INTEGER,aux12293_INTEGER,aux12299_INTEGER,aux12305_INTEGER,aux12311_INTEGER,aux12317_INTEGER,aux12323_INTEGER,aux12329_INTEGER,aux12335_INTEGER,aux12341_INTEGER,aux12347_INTEGER,aux12353_INTEGER,aux12359_INTEGER,aux12363_INTEGER,1],0,aux12364_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12365,s_00001],0);
constraint int_lt_reif(s_00004,aux12365,aux12366_BOOL);
constraint int_eq_reif(TWorkers_00005_00001_INTEGER,1,aux12367_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux12368_BOOL);
constraint int_le_reif(s_00001, s_00004,aux12369_BOOL);
constraint array_bool_and([aux12366_BOOL,aux12367_BOOL,aux12368_BOOL,w_00005_00001_BOOL,aux12369_BOOL],aux12370_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12371,s_00008],0);
constraint int_lt_reif(s_00004,aux12371,aux12372_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux12373_BOOL);
constraint int_eq_reif(TWorkers_00005_00008_INTEGER,1,aux12374_BOOL);
constraint int_le_reif(s_00008, s_00004,aux12375_BOOL);
constraint array_bool_and([aux12372_BOOL,aux12373_BOOL,aux12374_BOOL,w_00005_00008_BOOL,aux12375_BOOL],aux12376_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12377,s_00002],0);
constraint int_lt_reif(s_00004,aux12377,aux12378_BOOL);
constraint int_eq_reif(TWorkers_00005_00002_INTEGER,1,aux12379_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux12380_BOOL);
constraint int_le_reif(s_00002, s_00004,aux12381_BOOL);
constraint array_bool_and([aux12378_BOOL,aux12379_BOOL,aux12380_BOOL,w_00005_00002_BOOL,aux12381_BOOL],aux12382_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12383,s_00010],0);
constraint int_lt_reif(s_00004,aux12383,aux12384_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux12385_BOOL);
constraint int_eq_reif(TWorkers_00005_00010_INTEGER,1,aux12386_BOOL);
constraint int_le_reif(s_00010, s_00004,aux12387_BOOL);
constraint array_bool_and([aux12384_BOOL,aux12385_BOOL,aux12386_BOOL,w_00005_00010_BOOL,aux12387_BOOL],aux12388_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12389,s_00013],0);
constraint int_lt_reif(s_00004,aux12389,aux12390_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux12391_BOOL);
constraint int_eq_reif(TWorkers_00005_00013_INTEGER,1,aux12392_BOOL);
constraint int_le_reif(s_00013, s_00004,aux12393_BOOL);
constraint array_bool_and([aux12390_BOOL,aux12391_BOOL,aux12392_BOOL,w_00005_00013_BOOL,aux12393_BOOL],aux12394_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12395,s_00005],0);
constraint int_lt_reif(s_00004,aux12395,aux12396_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux12397_BOOL);
constraint int_eq_reif(TWorkers_00005_00005_INTEGER,1,aux12398_BOOL);
constraint int_le_reif(s_00005, s_00004,aux12399_BOOL);
constraint array_bool_and([aux12396_BOOL,aux12397_BOOL,aux12398_BOOL,w_00005_00005_BOOL,aux12399_BOOL],aux12400_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12401,s_00007],0);
constraint int_lt_reif(s_00004,aux12401,aux12402_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux12403_BOOL);
constraint int_eq_reif(TWorkers_00005_00007_INTEGER,1,aux12404_BOOL);
constraint int_le_reif(s_00007, s_00004,aux12405_BOOL);
constraint array_bool_and([aux12402_BOOL,aux12403_BOOL,aux12404_BOOL,w_00005_00007_BOOL,aux12405_BOOL],aux12406_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12407,s_00017],0);
constraint int_lt_reif(s_00004,aux12407,aux12408_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux12409_BOOL);
constraint int_eq_reif(TWorkers_00005_00017_INTEGER,1,aux12410_BOOL);
constraint int_le_reif(s_00017, s_00004,aux12411_BOOL);
constraint array_bool_and([aux12408_BOOL,aux12409_BOOL,aux12410_BOOL,w_00005_00017_BOOL,aux12411_BOOL],aux12412_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12413,s_00009],0);
constraint int_lt_reif(s_00004,aux12413,aux12414_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux12415_BOOL);
constraint int_eq_reif(TWorkers_00005_00009_INTEGER,1,aux12416_BOOL);
constraint int_le_reif(s_00009, s_00004,aux12417_BOOL);
constraint array_bool_and([aux12414_BOOL,aux12415_BOOL,aux12416_BOOL,w_00005_00009_BOOL,aux12417_BOOL],aux12418_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12419,s_00011],0);
constraint int_lt_reif(s_00004,aux12419,aux12420_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux12421_BOOL);
constraint int_eq_reif(TWorkers_00005_00011_INTEGER,1,aux12422_BOOL);
constraint int_le_reif(s_00011, s_00004,aux12423_BOOL);
constraint array_bool_and([aux12420_BOOL,aux12421_BOOL,aux12422_BOOL,w_00005_00011_BOOL,aux12423_BOOL],aux12424_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12425,s_00003],0);
constraint int_lt_reif(s_00004,aux12425,aux12426_BOOL);
constraint int_eq_reif(TWorkers_00005_00003_INTEGER,1,aux12427_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux12428_BOOL);
constraint int_le_reif(s_00003, s_00004,aux12429_BOOL);
constraint array_bool_and([aux12426_BOOL,aux12427_BOOL,aux12428_BOOL,w_00005_00003_BOOL,aux12429_BOOL],aux12430_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12431,s_00012],0);
constraint int_lt_reif(s_00004,aux12431,aux12432_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux12433_BOOL);
constraint int_eq_reif(TWorkers_00005_00012_INTEGER,1,aux12434_BOOL);
constraint int_le_reif(s_00012, s_00004,aux12435_BOOL);
constraint array_bool_and([aux12432_BOOL,aux12433_BOOL,aux12434_BOOL,w_00005_00012_BOOL,aux12435_BOOL],aux12436_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12437,s_00015],0);
constraint int_lt_reif(s_00004,aux12437,aux12438_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux12439_BOOL);
constraint int_eq_reif(TWorkers_00005_00015_INTEGER,1,aux12440_BOOL);
constraint int_le_reif(s_00015, s_00004,aux12441_BOOL);
constraint array_bool_and([aux12438_BOOL,aux12439_BOOL,aux12440_BOOL,w_00005_00015_BOOL,aux12441_BOOL],aux12442_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12443,s_00006],0);
constraint int_lt_reif(s_00004,aux12443,aux12444_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux12445_BOOL);
constraint int_eq_reif(TWorkers_00005_00006_INTEGER,1,aux12446_BOOL);
constraint int_le_reif(s_00006, s_00004,aux12447_BOOL);
constraint array_bool_and([aux12444_BOOL,aux12445_BOOL,aux12446_BOOL,w_00005_00006_BOOL,aux12447_BOOL],aux12448_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12449,s_00019],0);
constraint int_lt_reif(s_00004,aux12449,aux12450_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux12451_BOOL);
constraint int_eq_reif(TWorkers_00005_00019_INTEGER,1,aux12452_BOOL);
constraint int_le_reif(s_00019, s_00004,aux12453_BOOL);
constraint array_bool_and([aux12450_BOOL,aux12451_BOOL,aux12452_BOOL,w_00005_00019_BOOL,aux12453_BOOL],aux12454_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12455,s_00016],0);
constraint int_lt_reif(s_00004,aux12455,aux12456_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux12457_BOOL);
constraint int_eq_reif(TWorkers_00005_00016_INTEGER,1,aux12458_BOOL);
constraint int_le_reif(s_00016, s_00004,aux12459_BOOL);
constraint array_bool_and([aux12456_BOOL,aux12457_BOOL,aux12458_BOOL,w_00005_00016_BOOL,aux12459_BOOL],aux12460_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12461,s_00018],0);
constraint int_lt_reif(s_00004,aux12461,aux12462_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux12463_BOOL);
constraint int_eq_reif(TWorkers_00005_00018_INTEGER,1,aux12464_BOOL);
constraint int_le_reif(s_00018, s_00004,aux12465_BOOL);
constraint array_bool_and([aux12462_BOOL,aux12463_BOOL,aux12464_BOOL,w_00005_00018_BOOL,aux12465_BOOL],aux12466_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12467,s_00020],0);
constraint int_lt_reif(s_00004,aux12467,aux12468_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux12469_BOOL);
constraint int_eq_reif(TWorkers_00005_00020_INTEGER,1,aux12470_BOOL);
constraint int_le_reif(s_00020, s_00004,aux12471_BOOL);
constraint array_bool_and([aux12468_BOOL,aux12469_BOOL,aux12470_BOOL,w_00005_00020_BOOL,aux12471_BOOL],aux12472_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux12473,s_00014],0);
constraint int_lt_reif(s_00004,aux12473,aux12474_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux12475_BOOL);
constraint int_eq_reif(TWorkers_00005_00014_INTEGER,1,aux12476_BOOL);
constraint int_le_reif(s_00014, s_00004,aux12477_BOOL);
constraint array_bool_and([aux12474_BOOL,aux12475_BOOL,aux12476_BOOL,w_00005_00014_BOOL,aux12477_BOOL],aux12478_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12479,s_00004],0);
constraint int_lt_reif(s_00004,aux12479,aux12480_BOOL);
constraint int_eq_reif(TWorkers_00005_00004_INTEGER,1,aux12481_BOOL);
constraint array_bool_and([aux12480_BOOL,aux12481_BOOL,w_00005_00004_BOOL],aux12482_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux12370_INTEGER,aux12376_INTEGER,aux12382_INTEGER,aux12388_INTEGER,aux12394_INTEGER,aux12400_INTEGER,aux12406_INTEGER,aux12412_INTEGER,aux12418_INTEGER,aux12424_INTEGER,aux12430_INTEGER,aux12436_INTEGER,aux12442_INTEGER,aux12448_INTEGER,aux12454_INTEGER,aux12460_INTEGER,aux12466_INTEGER,aux12472_INTEGER,aux12478_INTEGER,aux12482_INTEGER,1],0,aux12483_BOOL);
constraint array_bool_and([aux10222_BOOL,aux10341_BOOL,aux10460_BOOL,aux10579_BOOL,aux10698_BOOL,aux10817_BOOL,aux10936_BOOL,aux11055_BOOL,aux11174_BOOL,aux11293_BOOL,aux11412_BOOL,aux11531_BOOL,aux11650_BOOL,aux11769_BOOL,aux11888_BOOL,aux12007_BOOL,aux12126_BOOL,aux12245_BOOL,aux12364_BOOL,aux12483_BOOL],aux12484_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[TWorkers_00005_00001_INTEGER,TWorkers_00005_00002_INTEGER,TWorkers_00005_00003_INTEGER,TWorkers_00005_00004_INTEGER,TWorkers_00005_00005_INTEGER,TWorkers_00005_00006_INTEGER,TWorkers_00005_00007_INTEGER,TWorkers_00005_00008_INTEGER,TWorkers_00005_00009_INTEGER,TWorkers_00005_00010_INTEGER,TWorkers_00005_00011_INTEGER,TWorkers_00005_00012_INTEGER,TWorkers_00005_00013_INTEGER,TWorkers_00005_00014_INTEGER,TWorkers_00005_00015_INTEGER,TWorkers_00005_00016_INTEGER,TWorkers_00005_00017_INTEGER,TWorkers_00005_00018_INTEGER,TWorkers_00005_00019_INTEGER,TWorkers_00005_00020_INTEGER,1],0,aux12485_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux12486_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux12487_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12488,s_00001],0);
constraint int_lt_reif(s_00011,aux12488,aux12489_BOOL);
constraint int_le_reif(s_00001, s_00011,aux12490_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux12486_BOOL,aux12487_BOOL,aux12489_BOOL,aux12490_BOOL],aux12491_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux12492_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux12493_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12494,s_00002],0);
constraint int_lt_reif(s_00011,aux12494,aux12495_BOOL);
constraint int_le_reif(s_00002, s_00011,aux12496_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux12492_BOOL,aux12493_BOOL,aux12495_BOOL,aux12496_BOOL],aux12497_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux12498_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux12499_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12500,s_00003],0);
constraint int_lt_reif(s_00011,aux12500,aux12501_BOOL);
constraint int_le_reif(s_00003, s_00011,aux12502_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux12498_BOOL,aux12499_BOOL,aux12501_BOOL,aux12502_BOOL],aux12503_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux12504_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux12505_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12506,s_00004],0);
constraint int_lt_reif(s_00011,aux12506,aux12507_BOOL);
constraint int_le_reif(s_00004, s_00011,aux12508_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux12504_BOOL,aux12505_BOOL,aux12507_BOOL,aux12508_BOOL],aux12509_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux12510_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux12511_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12512,s_00005],0);
constraint int_lt_reif(s_00011,aux12512,aux12513_BOOL);
constraint int_le_reif(s_00005, s_00011,aux12514_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux12510_BOOL,aux12511_BOOL,aux12513_BOOL,aux12514_BOOL],aux12515_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux12516_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux12517_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12518,s_00006],0);
constraint int_lt_reif(s_00011,aux12518,aux12519_BOOL);
constraint int_le_reif(s_00006, s_00011,aux12520_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux12516_BOOL,aux12517_BOOL,aux12519_BOOL,aux12520_BOOL],aux12521_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux12522_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux12523_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12524,s_00007],0);
constraint int_lt_reif(s_00011,aux12524,aux12525_BOOL);
constraint int_le_reif(s_00007, s_00011,aux12526_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux12522_BOOL,aux12523_BOOL,aux12525_BOOL,aux12526_BOOL],aux12527_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux12528_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux12529_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12530,s_00008],0);
constraint int_lt_reif(s_00011,aux12530,aux12531_BOOL);
constraint int_le_reif(s_00008, s_00011,aux12532_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux12528_BOOL,aux12529_BOOL,aux12531_BOOL,aux12532_BOOL],aux12533_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux12534_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux12535_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12536,s_00009],0);
constraint int_lt_reif(s_00011,aux12536,aux12537_BOOL);
constraint int_le_reif(s_00009, s_00011,aux12538_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux12534_BOOL,aux12535_BOOL,aux12537_BOOL,aux12538_BOOL],aux12539_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux12540_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux12541_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12542,s_00010],0);
constraint int_lt_reif(s_00011,aux12542,aux12543_BOOL);
constraint int_le_reif(s_00010, s_00011,aux12544_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux12540_BOOL,aux12541_BOOL,aux12543_BOOL,aux12544_BOOL],aux12545_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux12546_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux12547_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12548,s_00012],0);
constraint int_lt_reif(s_00011,aux12548,aux12549_BOOL);
constraint int_le_reif(s_00012, s_00011,aux12550_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux12546_BOOL,aux12547_BOOL,aux12549_BOOL,aux12550_BOOL],aux12551_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux12552_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux12553_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12554,s_00013],0);
constraint int_lt_reif(s_00011,aux12554,aux12555_BOOL);
constraint int_le_reif(s_00013, s_00011,aux12556_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux12552_BOOL,aux12553_BOOL,aux12555_BOOL,aux12556_BOOL],aux12557_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux12558_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux12559_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux12560,s_00014],0);
constraint int_lt_reif(s_00011,aux12560,aux12561_BOOL);
constraint int_le_reif(s_00014, s_00011,aux12562_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux12558_BOOL,aux12559_BOOL,aux12561_BOOL,aux12562_BOOL],aux12563_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux12564_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux12565_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12566,s_00015],0);
constraint int_lt_reif(s_00011,aux12566,aux12567_BOOL);
constraint int_le_reif(s_00015, s_00011,aux12568_BOOL);
constraint array_bool_and([w_00006_00015_BOOL,aux12564_BOOL,aux12565_BOOL,aux12567_BOOL,aux12568_BOOL],aux12569_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux12570_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux12571_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12572,s_00016],0);
constraint int_lt_reif(s_00011,aux12572,aux12573_BOOL);
constraint int_le_reif(s_00016, s_00011,aux12574_BOOL);
constraint array_bool_and([w_00006_00016_BOOL,aux12570_BOOL,aux12571_BOOL,aux12573_BOOL,aux12574_BOOL],aux12575_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux12576_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux12577_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12578,s_00017],0);
constraint int_lt_reif(s_00011,aux12578,aux12579_BOOL);
constraint int_le_reif(s_00017, s_00011,aux12580_BOOL);
constraint array_bool_and([w_00006_00017_BOOL,aux12576_BOOL,aux12577_BOOL,aux12579_BOOL,aux12580_BOOL],aux12581_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux12582_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux12583_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12584,s_00018],0);
constraint int_lt_reif(s_00011,aux12584,aux12585_BOOL);
constraint int_le_reif(s_00018, s_00011,aux12586_BOOL);
constraint array_bool_and([w_00006_00018_BOOL,aux12582_BOOL,aux12583_BOOL,aux12585_BOOL,aux12586_BOOL],aux12587_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux12588_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux12589_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12590,s_00019],0);
constraint int_lt_reif(s_00011,aux12590,aux12591_BOOL);
constraint int_le_reif(s_00019, s_00011,aux12592_BOOL);
constraint array_bool_and([w_00006_00019_BOOL,aux12588_BOOL,aux12589_BOOL,aux12591_BOOL,aux12592_BOOL],aux12593_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux12594_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux12595_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12596,s_00020],0);
constraint int_lt_reif(s_00011,aux12596,aux12597_BOOL);
constraint int_le_reif(s_00020, s_00011,aux12598_BOOL);
constraint array_bool_and([w_00006_00020_BOOL,aux12594_BOOL,aux12595_BOOL,aux12597_BOOL,aux12598_BOOL],aux12599_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux12600_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12601,s_00011],0);
constraint int_lt_reif(s_00011,aux12601,aux12602_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux12600_BOOL,aux12602_BOOL],aux12603_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux12491_INTEGER,aux12497_INTEGER,aux12503_INTEGER,aux12509_INTEGER,aux12515_INTEGER,aux12521_INTEGER,aux12527_INTEGER,aux12533_INTEGER,aux12539_INTEGER,aux12545_INTEGER,aux12551_INTEGER,aux12557_INTEGER,aux12563_INTEGER,aux12569_INTEGER,aux12575_INTEGER,aux12581_INTEGER,aux12587_INTEGER,aux12593_INTEGER,aux12599_INTEGER,aux12603_INTEGER,1],0,aux12604_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux12605_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux12606_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12607,s_00001],0);
constraint int_lt_reif(s_00015,aux12607,aux12608_BOOL);
constraint int_le_reif(s_00001, s_00015,aux12609_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux12605_BOOL,aux12606_BOOL,aux12608_BOOL,aux12609_BOOL],aux12610_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux12611_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux12612_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12613,s_00002],0);
constraint int_lt_reif(s_00015,aux12613,aux12614_BOOL);
constraint int_le_reif(s_00002, s_00015,aux12615_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux12611_BOOL,aux12612_BOOL,aux12614_BOOL,aux12615_BOOL],aux12616_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux12617_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux12618_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12619,s_00003],0);
constraint int_lt_reif(s_00015,aux12619,aux12620_BOOL);
constraint int_le_reif(s_00003, s_00015,aux12621_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux12617_BOOL,aux12618_BOOL,aux12620_BOOL,aux12621_BOOL],aux12622_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux12623_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux12624_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12625,s_00004],0);
constraint int_lt_reif(s_00015,aux12625,aux12626_BOOL);
constraint int_le_reif(s_00004, s_00015,aux12627_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux12623_BOOL,aux12624_BOOL,aux12626_BOOL,aux12627_BOOL],aux12628_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux12629_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux12630_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12631,s_00005],0);
constraint int_lt_reif(s_00015,aux12631,aux12632_BOOL);
constraint int_le_reif(s_00005, s_00015,aux12633_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux12629_BOOL,aux12630_BOOL,aux12632_BOOL,aux12633_BOOL],aux12634_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux12635_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux12636_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12637,s_00006],0);
constraint int_lt_reif(s_00015,aux12637,aux12638_BOOL);
constraint int_le_reif(s_00006, s_00015,aux12639_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux12635_BOOL,aux12636_BOOL,aux12638_BOOL,aux12639_BOOL],aux12640_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux12641_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux12642_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12643,s_00007],0);
constraint int_lt_reif(s_00015,aux12643,aux12644_BOOL);
constraint int_le_reif(s_00007, s_00015,aux12645_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux12641_BOOL,aux12642_BOOL,aux12644_BOOL,aux12645_BOOL],aux12646_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux12647_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux12648_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12649,s_00008],0);
constraint int_lt_reif(s_00015,aux12649,aux12650_BOOL);
constraint int_le_reif(s_00008, s_00015,aux12651_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux12647_BOOL,aux12648_BOOL,aux12650_BOOL,aux12651_BOOL],aux12652_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux12653_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux12654_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12655,s_00009],0);
constraint int_lt_reif(s_00015,aux12655,aux12656_BOOL);
constraint int_le_reif(s_00009, s_00015,aux12657_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux12653_BOOL,aux12654_BOOL,aux12656_BOOL,aux12657_BOOL],aux12658_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux12659_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux12660_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12661,s_00010],0);
constraint int_lt_reif(s_00015,aux12661,aux12662_BOOL);
constraint int_le_reif(s_00010, s_00015,aux12663_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux12659_BOOL,aux12660_BOOL,aux12662_BOOL,aux12663_BOOL],aux12664_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux12665_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux12666_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12667,s_00011],0);
constraint int_lt_reif(s_00015,aux12667,aux12668_BOOL);
constraint int_le_reif(s_00011, s_00015,aux12669_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux12665_BOOL,aux12666_BOOL,aux12668_BOOL,aux12669_BOOL],aux12670_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux12671_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux12672_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12673,s_00012],0);
constraint int_lt_reif(s_00015,aux12673,aux12674_BOOL);
constraint int_le_reif(s_00012, s_00015,aux12675_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux12671_BOOL,aux12672_BOOL,aux12674_BOOL,aux12675_BOOL],aux12676_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux12677_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux12678_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12679,s_00013],0);
constraint int_lt_reif(s_00015,aux12679,aux12680_BOOL);
constraint int_le_reif(s_00013, s_00015,aux12681_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux12677_BOOL,aux12678_BOOL,aux12680_BOOL,aux12681_BOOL],aux12682_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux12683_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux12684_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux12685,s_00014],0);
constraint int_lt_reif(s_00015,aux12685,aux12686_BOOL);
constraint int_le_reif(s_00014, s_00015,aux12687_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux12683_BOOL,aux12684_BOOL,aux12686_BOOL,aux12687_BOOL],aux12688_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux12689_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux12690_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12691,s_00016],0);
constraint int_lt_reif(s_00015,aux12691,aux12692_BOOL);
constraint int_le_reif(s_00016, s_00015,aux12693_BOOL);
constraint array_bool_and([w_00006_00016_BOOL,aux12689_BOOL,aux12690_BOOL,aux12692_BOOL,aux12693_BOOL],aux12694_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux12695_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux12696_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12697,s_00017],0);
constraint int_lt_reif(s_00015,aux12697,aux12698_BOOL);
constraint int_le_reif(s_00017, s_00015,aux12699_BOOL);
constraint array_bool_and([w_00006_00017_BOOL,aux12695_BOOL,aux12696_BOOL,aux12698_BOOL,aux12699_BOOL],aux12700_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux12701_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux12702_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12703,s_00018],0);
constraint int_lt_reif(s_00015,aux12703,aux12704_BOOL);
constraint int_le_reif(s_00018, s_00015,aux12705_BOOL);
constraint array_bool_and([w_00006_00018_BOOL,aux12701_BOOL,aux12702_BOOL,aux12704_BOOL,aux12705_BOOL],aux12706_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux12707_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux12708_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12709,s_00019],0);
constraint int_lt_reif(s_00015,aux12709,aux12710_BOOL);
constraint int_le_reif(s_00019, s_00015,aux12711_BOOL);
constraint array_bool_and([w_00006_00019_BOOL,aux12707_BOOL,aux12708_BOOL,aux12710_BOOL,aux12711_BOOL],aux12712_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux12713_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux12714_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12715,s_00020],0);
constraint int_lt_reif(s_00015,aux12715,aux12716_BOOL);
constraint int_le_reif(s_00020, s_00015,aux12717_BOOL);
constraint array_bool_and([w_00006_00020_BOOL,aux12713_BOOL,aux12714_BOOL,aux12716_BOOL,aux12717_BOOL],aux12718_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux12719_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12720,s_00015],0);
constraint int_lt_reif(s_00015,aux12720,aux12721_BOOL);
constraint array_bool_and([w_00006_00015_BOOL,aux12719_BOOL,aux12721_BOOL],aux12722_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux12610_INTEGER,aux12616_INTEGER,aux12622_INTEGER,aux12628_INTEGER,aux12634_INTEGER,aux12640_INTEGER,aux12646_INTEGER,aux12652_INTEGER,aux12658_INTEGER,aux12664_INTEGER,aux12670_INTEGER,aux12676_INTEGER,aux12682_INTEGER,aux12688_INTEGER,aux12694_INTEGER,aux12700_INTEGER,aux12706_INTEGER,aux12712_INTEGER,aux12718_INTEGER,aux12722_INTEGER,1],0,aux12723_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux12724_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux12725_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12726,s_00001],0);
constraint int_lt_reif(s_00010,aux12726,aux12727_BOOL);
constraint int_le_reif(s_00001, s_00010,aux12728_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux12724_BOOL,aux12725_BOOL,aux12727_BOOL,aux12728_BOOL],aux12729_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux12730_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux12731_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12732,s_00002],0);
constraint int_lt_reif(s_00010,aux12732,aux12733_BOOL);
constraint int_le_reif(s_00002, s_00010,aux12734_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux12730_BOOL,aux12731_BOOL,aux12733_BOOL,aux12734_BOOL],aux12735_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux12736_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux12737_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12738,s_00003],0);
constraint int_lt_reif(s_00010,aux12738,aux12739_BOOL);
constraint int_le_reif(s_00003, s_00010,aux12740_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux12736_BOOL,aux12737_BOOL,aux12739_BOOL,aux12740_BOOL],aux12741_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux12742_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux12743_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12744,s_00004],0);
constraint int_lt_reif(s_00010,aux12744,aux12745_BOOL);
constraint int_le_reif(s_00004, s_00010,aux12746_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux12742_BOOL,aux12743_BOOL,aux12745_BOOL,aux12746_BOOL],aux12747_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux12748_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux12749_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12750,s_00005],0);
constraint int_lt_reif(s_00010,aux12750,aux12751_BOOL);
constraint int_le_reif(s_00005, s_00010,aux12752_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux12748_BOOL,aux12749_BOOL,aux12751_BOOL,aux12752_BOOL],aux12753_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux12754_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux12755_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12756,s_00006],0);
constraint int_lt_reif(s_00010,aux12756,aux12757_BOOL);
constraint int_le_reif(s_00006, s_00010,aux12758_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux12754_BOOL,aux12755_BOOL,aux12757_BOOL,aux12758_BOOL],aux12759_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux12760_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux12761_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12762,s_00007],0);
constraint int_lt_reif(s_00010,aux12762,aux12763_BOOL);
constraint int_le_reif(s_00007, s_00010,aux12764_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux12760_BOOL,aux12761_BOOL,aux12763_BOOL,aux12764_BOOL],aux12765_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux12766_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux12767_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12768,s_00008],0);
constraint int_lt_reif(s_00010,aux12768,aux12769_BOOL);
constraint int_le_reif(s_00008, s_00010,aux12770_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux12766_BOOL,aux12767_BOOL,aux12769_BOOL,aux12770_BOOL],aux12771_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux12772_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux12773_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12774,s_00009],0);
constraint int_lt_reif(s_00010,aux12774,aux12775_BOOL);
constraint int_le_reif(s_00009, s_00010,aux12776_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux12772_BOOL,aux12773_BOOL,aux12775_BOOL,aux12776_BOOL],aux12777_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux12778_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux12779_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12780,s_00011],0);
constraint int_lt_reif(s_00010,aux12780,aux12781_BOOL);
constraint int_le_reif(s_00011, s_00010,aux12782_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux12778_BOOL,aux12779_BOOL,aux12781_BOOL,aux12782_BOOL],aux12783_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux12784_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux12785_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12786,s_00012],0);
constraint int_lt_reif(s_00010,aux12786,aux12787_BOOL);
constraint int_le_reif(s_00012, s_00010,aux12788_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux12784_BOOL,aux12785_BOOL,aux12787_BOOL,aux12788_BOOL],aux12789_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux12790_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux12791_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12792,s_00013],0);
constraint int_lt_reif(s_00010,aux12792,aux12793_BOOL);
constraint int_le_reif(s_00013, s_00010,aux12794_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux12790_BOOL,aux12791_BOOL,aux12793_BOOL,aux12794_BOOL],aux12795_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux12796_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux12797_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux12798,s_00014],0);
constraint int_lt_reif(s_00010,aux12798,aux12799_BOOL);
constraint int_le_reif(s_00014, s_00010,aux12800_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux12796_BOOL,aux12797_BOOL,aux12799_BOOL,aux12800_BOOL],aux12801_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux12802_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux12803_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12804,s_00015],0);
constraint int_lt_reif(s_00010,aux12804,aux12805_BOOL);
constraint int_le_reif(s_00015, s_00010,aux12806_BOOL);
constraint array_bool_and([w_00006_00015_BOOL,aux12802_BOOL,aux12803_BOOL,aux12805_BOOL,aux12806_BOOL],aux12807_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux12808_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux12809_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12810,s_00016],0);
constraint int_lt_reif(s_00010,aux12810,aux12811_BOOL);
constraint int_le_reif(s_00016, s_00010,aux12812_BOOL);
constraint array_bool_and([w_00006_00016_BOOL,aux12808_BOOL,aux12809_BOOL,aux12811_BOOL,aux12812_BOOL],aux12813_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux12814_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux12815_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12816,s_00017],0);
constraint int_lt_reif(s_00010,aux12816,aux12817_BOOL);
constraint int_le_reif(s_00017, s_00010,aux12818_BOOL);
constraint array_bool_and([w_00006_00017_BOOL,aux12814_BOOL,aux12815_BOOL,aux12817_BOOL,aux12818_BOOL],aux12819_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux12820_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux12821_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12822,s_00018],0);
constraint int_lt_reif(s_00010,aux12822,aux12823_BOOL);
constraint int_le_reif(s_00018, s_00010,aux12824_BOOL);
constraint array_bool_and([w_00006_00018_BOOL,aux12820_BOOL,aux12821_BOOL,aux12823_BOOL,aux12824_BOOL],aux12825_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux12826_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux12827_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12828,s_00019],0);
constraint int_lt_reif(s_00010,aux12828,aux12829_BOOL);
constraint int_le_reif(s_00019, s_00010,aux12830_BOOL);
constraint array_bool_and([w_00006_00019_BOOL,aux12826_BOOL,aux12827_BOOL,aux12829_BOOL,aux12830_BOOL],aux12831_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux12832_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux12833_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12834,s_00020],0);
constraint int_lt_reif(s_00010,aux12834,aux12835_BOOL);
constraint int_le_reif(s_00020, s_00010,aux12836_BOOL);
constraint array_bool_and([w_00006_00020_BOOL,aux12832_BOOL,aux12833_BOOL,aux12835_BOOL,aux12836_BOOL],aux12837_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux12838_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12839,s_00010],0);
constraint int_lt_reif(s_00010,aux12839,aux12840_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux12838_BOOL,aux12840_BOOL],aux12841_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux12729_INTEGER,aux12735_INTEGER,aux12741_INTEGER,aux12747_INTEGER,aux12753_INTEGER,aux12759_INTEGER,aux12765_INTEGER,aux12771_INTEGER,aux12777_INTEGER,aux12783_INTEGER,aux12789_INTEGER,aux12795_INTEGER,aux12801_INTEGER,aux12807_INTEGER,aux12813_INTEGER,aux12819_INTEGER,aux12825_INTEGER,aux12831_INTEGER,aux12837_INTEGER,aux12841_INTEGER,1],0,aux12842_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux12843_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux12844_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12845,s_00001],0);
constraint int_lt_reif(s_00005,aux12845,aux12846_BOOL);
constraint int_le_reif(s_00001, s_00005,aux12847_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux12843_BOOL,aux12844_BOOL,aux12846_BOOL,aux12847_BOOL],aux12848_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux12849_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux12850_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12851,s_00002],0);
constraint int_lt_reif(s_00005,aux12851,aux12852_BOOL);
constraint int_le_reif(s_00002, s_00005,aux12853_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux12849_BOOL,aux12850_BOOL,aux12852_BOOL,aux12853_BOOL],aux12854_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux12855_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux12856_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12857,s_00003],0);
constraint int_lt_reif(s_00005,aux12857,aux12858_BOOL);
constraint int_le_reif(s_00003, s_00005,aux12859_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux12855_BOOL,aux12856_BOOL,aux12858_BOOL,aux12859_BOOL],aux12860_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux12861_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux12862_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12863,s_00004],0);
constraint int_lt_reif(s_00005,aux12863,aux12864_BOOL);
constraint int_le_reif(s_00004, s_00005,aux12865_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux12861_BOOL,aux12862_BOOL,aux12864_BOOL,aux12865_BOOL],aux12866_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux12867_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux12868_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12869,s_00006],0);
constraint int_lt_reif(s_00005,aux12869,aux12870_BOOL);
constraint int_le_reif(s_00006, s_00005,aux12871_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux12867_BOOL,aux12868_BOOL,aux12870_BOOL,aux12871_BOOL],aux12872_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux12873_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux12874_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12875,s_00007],0);
constraint int_lt_reif(s_00005,aux12875,aux12876_BOOL);
constraint int_le_reif(s_00007, s_00005,aux12877_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux12873_BOOL,aux12874_BOOL,aux12876_BOOL,aux12877_BOOL],aux12878_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux12879_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux12880_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12881,s_00008],0);
constraint int_lt_reif(s_00005,aux12881,aux12882_BOOL);
constraint int_le_reif(s_00008, s_00005,aux12883_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux12879_BOOL,aux12880_BOOL,aux12882_BOOL,aux12883_BOOL],aux12884_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux12885_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux12886_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12887,s_00009],0);
constraint int_lt_reif(s_00005,aux12887,aux12888_BOOL);
constraint int_le_reif(s_00009, s_00005,aux12889_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux12885_BOOL,aux12886_BOOL,aux12888_BOOL,aux12889_BOOL],aux12890_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux12891_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux12892_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12893,s_00010],0);
constraint int_lt_reif(s_00005,aux12893,aux12894_BOOL);
constraint int_le_reif(s_00010, s_00005,aux12895_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux12891_BOOL,aux12892_BOOL,aux12894_BOOL,aux12895_BOOL],aux12896_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux12897_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux12898_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12899,s_00011],0);
constraint int_lt_reif(s_00005,aux12899,aux12900_BOOL);
constraint int_le_reif(s_00011, s_00005,aux12901_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux12897_BOOL,aux12898_BOOL,aux12900_BOOL,aux12901_BOOL],aux12902_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux12903_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux12904_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12905,s_00012],0);
constraint int_lt_reif(s_00005,aux12905,aux12906_BOOL);
constraint int_le_reif(s_00012, s_00005,aux12907_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux12903_BOOL,aux12904_BOOL,aux12906_BOOL,aux12907_BOOL],aux12908_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux12909_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux12910_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12911,s_00013],0);
constraint int_lt_reif(s_00005,aux12911,aux12912_BOOL);
constraint int_le_reif(s_00013, s_00005,aux12913_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux12909_BOOL,aux12910_BOOL,aux12912_BOOL,aux12913_BOOL],aux12914_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux12915_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux12916_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux12917,s_00014],0);
constraint int_lt_reif(s_00005,aux12917,aux12918_BOOL);
constraint int_le_reif(s_00014, s_00005,aux12919_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux12915_BOOL,aux12916_BOOL,aux12918_BOOL,aux12919_BOOL],aux12920_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux12921_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux12922_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12923,s_00015],0);
constraint int_lt_reif(s_00005,aux12923,aux12924_BOOL);
constraint int_le_reif(s_00015, s_00005,aux12925_BOOL);
constraint array_bool_and([w_00006_00015_BOOL,aux12921_BOOL,aux12922_BOOL,aux12924_BOOL,aux12925_BOOL],aux12926_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux12927_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux12928_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12929,s_00016],0);
constraint int_lt_reif(s_00005,aux12929,aux12930_BOOL);
constraint int_le_reif(s_00016, s_00005,aux12931_BOOL);
constraint array_bool_and([w_00006_00016_BOOL,aux12927_BOOL,aux12928_BOOL,aux12930_BOOL,aux12931_BOOL],aux12932_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux12933_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux12934_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12935,s_00017],0);
constraint int_lt_reif(s_00005,aux12935,aux12936_BOOL);
constraint int_le_reif(s_00017, s_00005,aux12937_BOOL);
constraint array_bool_and([w_00006_00017_BOOL,aux12933_BOOL,aux12934_BOOL,aux12936_BOOL,aux12937_BOOL],aux12938_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux12939_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux12940_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12941,s_00018],0);
constraint int_lt_reif(s_00005,aux12941,aux12942_BOOL);
constraint int_le_reif(s_00018, s_00005,aux12943_BOOL);
constraint array_bool_and([w_00006_00018_BOOL,aux12939_BOOL,aux12940_BOOL,aux12942_BOOL,aux12943_BOOL],aux12944_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux12945_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux12946_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12947,s_00019],0);
constraint int_lt_reif(s_00005,aux12947,aux12948_BOOL);
constraint int_le_reif(s_00019, s_00005,aux12949_BOOL);
constraint array_bool_and([w_00006_00019_BOOL,aux12945_BOOL,aux12946_BOOL,aux12948_BOOL,aux12949_BOOL],aux12950_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux12951_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux12952_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12953,s_00020],0);
constraint int_lt_reif(s_00005,aux12953,aux12954_BOOL);
constraint int_le_reif(s_00020, s_00005,aux12955_BOOL);
constraint array_bool_and([w_00006_00020_BOOL,aux12951_BOOL,aux12952_BOOL,aux12954_BOOL,aux12955_BOOL],aux12956_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux12957_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12958,s_00005],0);
constraint int_lt_reif(s_00005,aux12958,aux12959_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux12957_BOOL,aux12959_BOOL],aux12960_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux12848_INTEGER,aux12854_INTEGER,aux12860_INTEGER,aux12866_INTEGER,aux12872_INTEGER,aux12878_INTEGER,aux12884_INTEGER,aux12890_INTEGER,aux12896_INTEGER,aux12902_INTEGER,aux12908_INTEGER,aux12914_INTEGER,aux12920_INTEGER,aux12926_INTEGER,aux12932_INTEGER,aux12938_INTEGER,aux12944_INTEGER,aux12950_INTEGER,aux12956_INTEGER,aux12960_INTEGER,1],0,aux12961_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux12962_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux12963_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux12964,s_00001],0);
constraint int_lt_reif(s_00007,aux12964,aux12965_BOOL);
constraint int_le_reif(s_00001, s_00007,aux12966_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux12962_BOOL,aux12963_BOOL,aux12965_BOOL,aux12966_BOOL],aux12967_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux12968_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux12969_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12970,s_00002],0);
constraint int_lt_reif(s_00007,aux12970,aux12971_BOOL);
constraint int_le_reif(s_00002, s_00007,aux12972_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux12968_BOOL,aux12969_BOOL,aux12971_BOOL,aux12972_BOOL],aux12973_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux12974_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux12975_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12976,s_00003],0);
constraint int_lt_reif(s_00007,aux12976,aux12977_BOOL);
constraint int_le_reif(s_00003, s_00007,aux12978_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux12974_BOOL,aux12975_BOOL,aux12977_BOOL,aux12978_BOOL],aux12979_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux12980_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux12981_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12982,s_00004],0);
constraint int_lt_reif(s_00007,aux12982,aux12983_BOOL);
constraint int_le_reif(s_00004, s_00007,aux12984_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux12980_BOOL,aux12981_BOOL,aux12983_BOOL,aux12984_BOOL],aux12985_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux12986_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux12987_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux12988,s_00005],0);
constraint int_lt_reif(s_00007,aux12988,aux12989_BOOL);
constraint int_le_reif(s_00005, s_00007,aux12990_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux12986_BOOL,aux12987_BOOL,aux12989_BOOL,aux12990_BOOL],aux12991_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux12992_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux12993_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux12994,s_00006],0);
constraint int_lt_reif(s_00007,aux12994,aux12995_BOOL);
constraint int_le_reif(s_00006, s_00007,aux12996_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux12992_BOOL,aux12993_BOOL,aux12995_BOOL,aux12996_BOOL],aux12997_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux12998_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux12999_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13000,s_00008],0);
constraint int_lt_reif(s_00007,aux13000,aux13001_BOOL);
constraint int_le_reif(s_00008, s_00007,aux13002_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux12998_BOOL,aux12999_BOOL,aux13001_BOOL,aux13002_BOOL],aux13003_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux13004_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux13005_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13006,s_00009],0);
constraint int_lt_reif(s_00007,aux13006,aux13007_BOOL);
constraint int_le_reif(s_00009, s_00007,aux13008_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux13004_BOOL,aux13005_BOOL,aux13007_BOOL,aux13008_BOOL],aux13009_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux13010_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux13011_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13012,s_00010],0);
constraint int_lt_reif(s_00007,aux13012,aux13013_BOOL);
constraint int_le_reif(s_00010, s_00007,aux13014_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux13010_BOOL,aux13011_BOOL,aux13013_BOOL,aux13014_BOOL],aux13015_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux13016_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux13017_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13018,s_00011],0);
constraint int_lt_reif(s_00007,aux13018,aux13019_BOOL);
constraint int_le_reif(s_00011, s_00007,aux13020_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux13016_BOOL,aux13017_BOOL,aux13019_BOOL,aux13020_BOOL],aux13021_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux13022_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13023_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13024,s_00012],0);
constraint int_lt_reif(s_00007,aux13024,aux13025_BOOL);
constraint int_le_reif(s_00012, s_00007,aux13026_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux13022_BOOL,aux13023_BOOL,aux13025_BOOL,aux13026_BOOL],aux13027_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux13028_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux13029_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13030,s_00013],0);
constraint int_lt_reif(s_00007,aux13030,aux13031_BOOL);
constraint int_le_reif(s_00013, s_00007,aux13032_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux13028_BOOL,aux13029_BOOL,aux13031_BOOL,aux13032_BOOL],aux13033_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux13034_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux13035_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux13036,s_00014],0);
constraint int_lt_reif(s_00007,aux13036,aux13037_BOOL);
constraint int_le_reif(s_00014, s_00007,aux13038_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux13034_BOOL,aux13035_BOOL,aux13037_BOOL,aux13038_BOOL],aux13039_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux13040_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux13041_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13042,s_00015],0);
constraint int_lt_reif(s_00007,aux13042,aux13043_BOOL);
constraint int_le_reif(s_00015, s_00007,aux13044_BOOL);
constraint array_bool_and([w_00006_00015_BOOL,aux13040_BOOL,aux13041_BOOL,aux13043_BOOL,aux13044_BOOL],aux13045_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux13046_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux13047_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13048,s_00016],0);
constraint int_lt_reif(s_00007,aux13048,aux13049_BOOL);
constraint int_le_reif(s_00016, s_00007,aux13050_BOOL);
constraint array_bool_and([w_00006_00016_BOOL,aux13046_BOOL,aux13047_BOOL,aux13049_BOOL,aux13050_BOOL],aux13051_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux13052_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux13053_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13054,s_00017],0);
constraint int_lt_reif(s_00007,aux13054,aux13055_BOOL);
constraint int_le_reif(s_00017, s_00007,aux13056_BOOL);
constraint array_bool_and([w_00006_00017_BOOL,aux13052_BOOL,aux13053_BOOL,aux13055_BOOL,aux13056_BOOL],aux13057_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux13058_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13059_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13060,s_00018],0);
constraint int_lt_reif(s_00007,aux13060,aux13061_BOOL);
constraint int_le_reif(s_00018, s_00007,aux13062_BOOL);
constraint array_bool_and([w_00006_00018_BOOL,aux13058_BOOL,aux13059_BOOL,aux13061_BOOL,aux13062_BOOL],aux13063_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux13064_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux13065_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13066,s_00019],0);
constraint int_lt_reif(s_00007,aux13066,aux13067_BOOL);
constraint int_le_reif(s_00019, s_00007,aux13068_BOOL);
constraint array_bool_and([w_00006_00019_BOOL,aux13064_BOOL,aux13065_BOOL,aux13067_BOOL,aux13068_BOOL],aux13069_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux13070_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux13071_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13072,s_00020],0);
constraint int_lt_reif(s_00007,aux13072,aux13073_BOOL);
constraint int_le_reif(s_00020, s_00007,aux13074_BOOL);
constraint array_bool_and([w_00006_00020_BOOL,aux13070_BOOL,aux13071_BOOL,aux13073_BOOL,aux13074_BOOL],aux13075_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux13076_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13077,s_00007],0);
constraint int_lt_reif(s_00007,aux13077,aux13078_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux13076_BOOL,aux13078_BOOL],aux13079_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux12967_INTEGER,aux12973_INTEGER,aux12979_INTEGER,aux12985_INTEGER,aux12991_INTEGER,aux12997_INTEGER,aux13003_INTEGER,aux13009_INTEGER,aux13015_INTEGER,aux13021_INTEGER,aux13027_INTEGER,aux13033_INTEGER,aux13039_INTEGER,aux13045_INTEGER,aux13051_INTEGER,aux13057_INTEGER,aux13063_INTEGER,aux13069_INTEGER,aux13075_INTEGER,aux13079_INTEGER,1],0,aux13080_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux13081_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux13082_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13083,s_00001],0);
constraint int_lt_reif(s_00003,aux13083,aux13084_BOOL);
constraint int_le_reif(s_00001, s_00003,aux13085_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux13081_BOOL,aux13082_BOOL,aux13084_BOOL,aux13085_BOOL],aux13086_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux13087_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux13088_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13089,s_00002],0);
constraint int_lt_reif(s_00003,aux13089,aux13090_BOOL);
constraint int_le_reif(s_00002, s_00003,aux13091_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux13087_BOOL,aux13088_BOOL,aux13090_BOOL,aux13091_BOOL],aux13092_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux13093_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux13094_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13095,s_00004],0);
constraint int_lt_reif(s_00003,aux13095,aux13096_BOOL);
constraint int_le_reif(s_00004, s_00003,aux13097_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux13093_BOOL,aux13094_BOOL,aux13096_BOOL,aux13097_BOOL],aux13098_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux13099_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux13100_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13101,s_00005],0);
constraint int_lt_reif(s_00003,aux13101,aux13102_BOOL);
constraint int_le_reif(s_00005, s_00003,aux13103_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux13099_BOOL,aux13100_BOOL,aux13102_BOOL,aux13103_BOOL],aux13104_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux13105_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux13106_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13107,s_00006],0);
constraint int_lt_reif(s_00003,aux13107,aux13108_BOOL);
constraint int_le_reif(s_00006, s_00003,aux13109_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux13105_BOOL,aux13106_BOOL,aux13108_BOOL,aux13109_BOOL],aux13110_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux13111_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux13112_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13113,s_00007],0);
constraint int_lt_reif(s_00003,aux13113,aux13114_BOOL);
constraint int_le_reif(s_00007, s_00003,aux13115_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux13111_BOOL,aux13112_BOOL,aux13114_BOOL,aux13115_BOOL],aux13116_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux13117_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux13118_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13119,s_00008],0);
constraint int_lt_reif(s_00003,aux13119,aux13120_BOOL);
constraint int_le_reif(s_00008, s_00003,aux13121_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux13117_BOOL,aux13118_BOOL,aux13120_BOOL,aux13121_BOOL],aux13122_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux13123_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux13124_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13125,s_00009],0);
constraint int_lt_reif(s_00003,aux13125,aux13126_BOOL);
constraint int_le_reif(s_00009, s_00003,aux13127_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux13123_BOOL,aux13124_BOOL,aux13126_BOOL,aux13127_BOOL],aux13128_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux13129_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux13130_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13131,s_00010],0);
constraint int_lt_reif(s_00003,aux13131,aux13132_BOOL);
constraint int_le_reif(s_00010, s_00003,aux13133_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux13129_BOOL,aux13130_BOOL,aux13132_BOOL,aux13133_BOOL],aux13134_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux13135_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux13136_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13137,s_00011],0);
constraint int_lt_reif(s_00003,aux13137,aux13138_BOOL);
constraint int_le_reif(s_00011, s_00003,aux13139_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux13135_BOOL,aux13136_BOOL,aux13138_BOOL,aux13139_BOOL],aux13140_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux13141_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13142_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13143,s_00012],0);
constraint int_lt_reif(s_00003,aux13143,aux13144_BOOL);
constraint int_le_reif(s_00012, s_00003,aux13145_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux13141_BOOL,aux13142_BOOL,aux13144_BOOL,aux13145_BOOL],aux13146_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux13147_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux13148_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13149,s_00013],0);
constraint int_lt_reif(s_00003,aux13149,aux13150_BOOL);
constraint int_le_reif(s_00013, s_00003,aux13151_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux13147_BOOL,aux13148_BOOL,aux13150_BOOL,aux13151_BOOL],aux13152_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux13153_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux13154_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux13155,s_00014],0);
constraint int_lt_reif(s_00003,aux13155,aux13156_BOOL);
constraint int_le_reif(s_00014, s_00003,aux13157_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux13153_BOOL,aux13154_BOOL,aux13156_BOOL,aux13157_BOOL],aux13158_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux13159_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux13160_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13161,s_00015],0);
constraint int_lt_reif(s_00003,aux13161,aux13162_BOOL);
constraint int_le_reif(s_00015, s_00003,aux13163_BOOL);
constraint array_bool_and([w_00006_00015_BOOL,aux13159_BOOL,aux13160_BOOL,aux13162_BOOL,aux13163_BOOL],aux13164_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux13165_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux13166_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13167,s_00016],0);
constraint int_lt_reif(s_00003,aux13167,aux13168_BOOL);
constraint int_le_reif(s_00016, s_00003,aux13169_BOOL);
constraint array_bool_and([w_00006_00016_BOOL,aux13165_BOOL,aux13166_BOOL,aux13168_BOOL,aux13169_BOOL],aux13170_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux13171_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux13172_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13173,s_00017],0);
constraint int_lt_reif(s_00003,aux13173,aux13174_BOOL);
constraint int_le_reif(s_00017, s_00003,aux13175_BOOL);
constraint array_bool_and([w_00006_00017_BOOL,aux13171_BOOL,aux13172_BOOL,aux13174_BOOL,aux13175_BOOL],aux13176_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux13177_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13178_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13179,s_00018],0);
constraint int_lt_reif(s_00003,aux13179,aux13180_BOOL);
constraint int_le_reif(s_00018, s_00003,aux13181_BOOL);
constraint array_bool_and([w_00006_00018_BOOL,aux13177_BOOL,aux13178_BOOL,aux13180_BOOL,aux13181_BOOL],aux13182_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux13183_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux13184_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13185,s_00019],0);
constraint int_lt_reif(s_00003,aux13185,aux13186_BOOL);
constraint int_le_reif(s_00019, s_00003,aux13187_BOOL);
constraint array_bool_and([w_00006_00019_BOOL,aux13183_BOOL,aux13184_BOOL,aux13186_BOOL,aux13187_BOOL],aux13188_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux13189_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux13190_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13191,s_00020],0);
constraint int_lt_reif(s_00003,aux13191,aux13192_BOOL);
constraint int_le_reif(s_00020, s_00003,aux13193_BOOL);
constraint array_bool_and([w_00006_00020_BOOL,aux13189_BOOL,aux13190_BOOL,aux13192_BOOL,aux13193_BOOL],aux13194_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux13195_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13196,s_00003],0);
constraint int_lt_reif(s_00003,aux13196,aux13197_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux13195_BOOL,aux13197_BOOL],aux13198_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux13086_INTEGER,aux13092_INTEGER,aux13098_INTEGER,aux13104_INTEGER,aux13110_INTEGER,aux13116_INTEGER,aux13122_INTEGER,aux13128_INTEGER,aux13134_INTEGER,aux13140_INTEGER,aux13146_INTEGER,aux13152_INTEGER,aux13158_INTEGER,aux13164_INTEGER,aux13170_INTEGER,aux13176_INTEGER,aux13182_INTEGER,aux13188_INTEGER,aux13194_INTEGER,aux13198_INTEGER,1],0,aux13199_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux13200_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux13201_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13202,s_00001],0);
constraint int_lt_reif(s_00002,aux13202,aux13203_BOOL);
constraint int_le_reif(s_00001, s_00002,aux13204_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux13200_BOOL,aux13201_BOOL,aux13203_BOOL,aux13204_BOOL],aux13205_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux13206_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux13207_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13208,s_00003],0);
constraint int_lt_reif(s_00002,aux13208,aux13209_BOOL);
constraint int_le_reif(s_00003, s_00002,aux13210_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux13206_BOOL,aux13207_BOOL,aux13209_BOOL,aux13210_BOOL],aux13211_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux13212_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux13213_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13214,s_00004],0);
constraint int_lt_reif(s_00002,aux13214,aux13215_BOOL);
constraint int_le_reif(s_00004, s_00002,aux13216_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux13212_BOOL,aux13213_BOOL,aux13215_BOOL,aux13216_BOOL],aux13217_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux13218_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux13219_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13220,s_00005],0);
constraint int_lt_reif(s_00002,aux13220,aux13221_BOOL);
constraint int_le_reif(s_00005, s_00002,aux13222_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux13218_BOOL,aux13219_BOOL,aux13221_BOOL,aux13222_BOOL],aux13223_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux13224_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux13225_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13226,s_00006],0);
constraint int_lt_reif(s_00002,aux13226,aux13227_BOOL);
constraint int_le_reif(s_00006, s_00002,aux13228_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux13224_BOOL,aux13225_BOOL,aux13227_BOOL,aux13228_BOOL],aux13229_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux13230_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux13231_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13232,s_00007],0);
constraint int_lt_reif(s_00002,aux13232,aux13233_BOOL);
constraint int_le_reif(s_00007, s_00002,aux13234_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux13230_BOOL,aux13231_BOOL,aux13233_BOOL,aux13234_BOOL],aux13235_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux13236_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux13237_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13238,s_00008],0);
constraint int_lt_reif(s_00002,aux13238,aux13239_BOOL);
constraint int_le_reif(s_00008, s_00002,aux13240_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux13236_BOOL,aux13237_BOOL,aux13239_BOOL,aux13240_BOOL],aux13241_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux13242_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux13243_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13244,s_00009],0);
constraint int_lt_reif(s_00002,aux13244,aux13245_BOOL);
constraint int_le_reif(s_00009, s_00002,aux13246_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux13242_BOOL,aux13243_BOOL,aux13245_BOOL,aux13246_BOOL],aux13247_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux13248_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux13249_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13250,s_00010],0);
constraint int_lt_reif(s_00002,aux13250,aux13251_BOOL);
constraint int_le_reif(s_00010, s_00002,aux13252_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux13248_BOOL,aux13249_BOOL,aux13251_BOOL,aux13252_BOOL],aux13253_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux13254_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux13255_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13256,s_00011],0);
constraint int_lt_reif(s_00002,aux13256,aux13257_BOOL);
constraint int_le_reif(s_00011, s_00002,aux13258_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux13254_BOOL,aux13255_BOOL,aux13257_BOOL,aux13258_BOOL],aux13259_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux13260_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13261_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13262,s_00012],0);
constraint int_lt_reif(s_00002,aux13262,aux13263_BOOL);
constraint int_le_reif(s_00012, s_00002,aux13264_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux13260_BOOL,aux13261_BOOL,aux13263_BOOL,aux13264_BOOL],aux13265_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux13266_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux13267_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13268,s_00013],0);
constraint int_lt_reif(s_00002,aux13268,aux13269_BOOL);
constraint int_le_reif(s_00013, s_00002,aux13270_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux13266_BOOL,aux13267_BOOL,aux13269_BOOL,aux13270_BOOL],aux13271_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux13272_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux13273_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux13274,s_00014],0);
constraint int_lt_reif(s_00002,aux13274,aux13275_BOOL);
constraint int_le_reif(s_00014, s_00002,aux13276_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux13272_BOOL,aux13273_BOOL,aux13275_BOOL,aux13276_BOOL],aux13277_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux13278_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux13279_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13280,s_00015],0);
constraint int_lt_reif(s_00002,aux13280,aux13281_BOOL);
constraint int_le_reif(s_00015, s_00002,aux13282_BOOL);
constraint array_bool_and([w_00006_00015_BOOL,aux13278_BOOL,aux13279_BOOL,aux13281_BOOL,aux13282_BOOL],aux13283_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux13284_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux13285_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13286,s_00016],0);
constraint int_lt_reif(s_00002,aux13286,aux13287_BOOL);
constraint int_le_reif(s_00016, s_00002,aux13288_BOOL);
constraint array_bool_and([w_00006_00016_BOOL,aux13284_BOOL,aux13285_BOOL,aux13287_BOOL,aux13288_BOOL],aux13289_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux13290_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux13291_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13292,s_00017],0);
constraint int_lt_reif(s_00002,aux13292,aux13293_BOOL);
constraint int_le_reif(s_00017, s_00002,aux13294_BOOL);
constraint array_bool_and([w_00006_00017_BOOL,aux13290_BOOL,aux13291_BOOL,aux13293_BOOL,aux13294_BOOL],aux13295_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux13296_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13297_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13298,s_00018],0);
constraint int_lt_reif(s_00002,aux13298,aux13299_BOOL);
constraint int_le_reif(s_00018, s_00002,aux13300_BOOL);
constraint array_bool_and([w_00006_00018_BOOL,aux13296_BOOL,aux13297_BOOL,aux13299_BOOL,aux13300_BOOL],aux13301_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux13302_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux13303_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13304,s_00019],0);
constraint int_lt_reif(s_00002,aux13304,aux13305_BOOL);
constraint int_le_reif(s_00019, s_00002,aux13306_BOOL);
constraint array_bool_and([w_00006_00019_BOOL,aux13302_BOOL,aux13303_BOOL,aux13305_BOOL,aux13306_BOOL],aux13307_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux13308_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux13309_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13310,s_00020],0);
constraint int_lt_reif(s_00002,aux13310,aux13311_BOOL);
constraint int_le_reif(s_00020, s_00002,aux13312_BOOL);
constraint array_bool_and([w_00006_00020_BOOL,aux13308_BOOL,aux13309_BOOL,aux13311_BOOL,aux13312_BOOL],aux13313_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux13314_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13315,s_00002],0);
constraint int_lt_reif(s_00002,aux13315,aux13316_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux13314_BOOL,aux13316_BOOL],aux13317_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux13205_INTEGER,aux13211_INTEGER,aux13217_INTEGER,aux13223_INTEGER,aux13229_INTEGER,aux13235_INTEGER,aux13241_INTEGER,aux13247_INTEGER,aux13253_INTEGER,aux13259_INTEGER,aux13265_INTEGER,aux13271_INTEGER,aux13277_INTEGER,aux13283_INTEGER,aux13289_INTEGER,aux13295_INTEGER,aux13301_INTEGER,aux13307_INTEGER,aux13313_INTEGER,aux13317_INTEGER,1],0,aux13318_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux13319_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13320_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13321,s_00001],0);
constraint int_lt_reif(s_00012,aux13321,aux13322_BOOL);
constraint int_le_reif(s_00001, s_00012,aux13323_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux13319_BOOL,aux13320_BOOL,aux13322_BOOL,aux13323_BOOL],aux13324_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux13325_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13326_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13327,s_00002],0);
constraint int_lt_reif(s_00012,aux13327,aux13328_BOOL);
constraint int_le_reif(s_00002, s_00012,aux13329_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux13325_BOOL,aux13326_BOOL,aux13328_BOOL,aux13329_BOOL],aux13330_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux13331_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13332_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13333,s_00003],0);
constraint int_lt_reif(s_00012,aux13333,aux13334_BOOL);
constraint int_le_reif(s_00003, s_00012,aux13335_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux13331_BOOL,aux13332_BOOL,aux13334_BOOL,aux13335_BOOL],aux13336_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux13337_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13338_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13339,s_00004],0);
constraint int_lt_reif(s_00012,aux13339,aux13340_BOOL);
constraint int_le_reif(s_00004, s_00012,aux13341_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux13337_BOOL,aux13338_BOOL,aux13340_BOOL,aux13341_BOOL],aux13342_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux13343_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13344_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13345,s_00005],0);
constraint int_lt_reif(s_00012,aux13345,aux13346_BOOL);
constraint int_le_reif(s_00005, s_00012,aux13347_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux13343_BOOL,aux13344_BOOL,aux13346_BOOL,aux13347_BOOL],aux13348_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux13349_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13350_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13351,s_00006],0);
constraint int_lt_reif(s_00012,aux13351,aux13352_BOOL);
constraint int_le_reif(s_00006, s_00012,aux13353_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux13349_BOOL,aux13350_BOOL,aux13352_BOOL,aux13353_BOOL],aux13354_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux13355_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13356_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13357,s_00007],0);
constraint int_lt_reif(s_00012,aux13357,aux13358_BOOL);
constraint int_le_reif(s_00007, s_00012,aux13359_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux13355_BOOL,aux13356_BOOL,aux13358_BOOL,aux13359_BOOL],aux13360_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux13361_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13362_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13363,s_00008],0);
constraint int_lt_reif(s_00012,aux13363,aux13364_BOOL);
constraint int_le_reif(s_00008, s_00012,aux13365_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux13361_BOOL,aux13362_BOOL,aux13364_BOOL,aux13365_BOOL],aux13366_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux13367_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13368_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13369,s_00009],0);
constraint int_lt_reif(s_00012,aux13369,aux13370_BOOL);
constraint int_le_reif(s_00009, s_00012,aux13371_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux13367_BOOL,aux13368_BOOL,aux13370_BOOL,aux13371_BOOL],aux13372_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux13373_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13374_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13375,s_00010],0);
constraint int_lt_reif(s_00012,aux13375,aux13376_BOOL);
constraint int_le_reif(s_00010, s_00012,aux13377_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux13373_BOOL,aux13374_BOOL,aux13376_BOOL,aux13377_BOOL],aux13378_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux13379_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13380_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13381,s_00011],0);
constraint int_lt_reif(s_00012,aux13381,aux13382_BOOL);
constraint int_le_reif(s_00011, s_00012,aux13383_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux13379_BOOL,aux13380_BOOL,aux13382_BOOL,aux13383_BOOL],aux13384_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13385_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux13386_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13387,s_00013],0);
constraint int_lt_reif(s_00012,aux13387,aux13388_BOOL);
constraint int_le_reif(s_00013, s_00012,aux13389_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux13385_BOOL,aux13386_BOOL,aux13388_BOOL,aux13389_BOOL],aux13390_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13391_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux13392_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux13393,s_00014],0);
constraint int_lt_reif(s_00012,aux13393,aux13394_BOOL);
constraint int_le_reif(s_00014, s_00012,aux13395_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux13391_BOOL,aux13392_BOOL,aux13394_BOOL,aux13395_BOOL],aux13396_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13397_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux13398_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13399,s_00015],0);
constraint int_lt_reif(s_00012,aux13399,aux13400_BOOL);
constraint int_le_reif(s_00015, s_00012,aux13401_BOOL);
constraint array_bool_and([w_00006_00015_BOOL,aux13397_BOOL,aux13398_BOOL,aux13400_BOOL,aux13401_BOOL],aux13402_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13403_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux13404_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13405,s_00016],0);
constraint int_lt_reif(s_00012,aux13405,aux13406_BOOL);
constraint int_le_reif(s_00016, s_00012,aux13407_BOOL);
constraint array_bool_and([w_00006_00016_BOOL,aux13403_BOOL,aux13404_BOOL,aux13406_BOOL,aux13407_BOOL],aux13408_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13409_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux13410_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13411,s_00017],0);
constraint int_lt_reif(s_00012,aux13411,aux13412_BOOL);
constraint int_le_reif(s_00017, s_00012,aux13413_BOOL);
constraint array_bool_and([w_00006_00017_BOOL,aux13409_BOOL,aux13410_BOOL,aux13412_BOOL,aux13413_BOOL],aux13414_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13415_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13416_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13417,s_00018],0);
constraint int_lt_reif(s_00012,aux13417,aux13418_BOOL);
constraint int_le_reif(s_00018, s_00012,aux13419_BOOL);
constraint array_bool_and([w_00006_00018_BOOL,aux13415_BOOL,aux13416_BOOL,aux13418_BOOL,aux13419_BOOL],aux13420_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13421_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux13422_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13423,s_00019],0);
constraint int_lt_reif(s_00012,aux13423,aux13424_BOOL);
constraint int_le_reif(s_00019, s_00012,aux13425_BOOL);
constraint array_bool_and([w_00006_00019_BOOL,aux13421_BOOL,aux13422_BOOL,aux13424_BOOL,aux13425_BOOL],aux13426_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13427_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux13428_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13429,s_00020],0);
constraint int_lt_reif(s_00012,aux13429,aux13430_BOOL);
constraint int_le_reif(s_00020, s_00012,aux13431_BOOL);
constraint array_bool_and([w_00006_00020_BOOL,aux13427_BOOL,aux13428_BOOL,aux13430_BOOL,aux13431_BOOL],aux13432_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13433_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13434,s_00012],0);
constraint int_lt_reif(s_00012,aux13434,aux13435_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux13433_BOOL,aux13435_BOOL],aux13436_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux13324_INTEGER,aux13330_INTEGER,aux13336_INTEGER,aux13342_INTEGER,aux13348_INTEGER,aux13354_INTEGER,aux13360_INTEGER,aux13366_INTEGER,aux13372_INTEGER,aux13378_INTEGER,aux13384_INTEGER,aux13390_INTEGER,aux13396_INTEGER,aux13402_INTEGER,aux13408_INTEGER,aux13414_INTEGER,aux13420_INTEGER,aux13426_INTEGER,aux13432_INTEGER,aux13436_INTEGER,1],0,aux13437_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux13438_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux13439_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13440,s_00001],0);
constraint int_lt_reif(s_00006,aux13440,aux13441_BOOL);
constraint int_le_reif(s_00001, s_00006,aux13442_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux13438_BOOL,aux13439_BOOL,aux13441_BOOL,aux13442_BOOL],aux13443_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux13444_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux13445_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13446,s_00002],0);
constraint int_lt_reif(s_00006,aux13446,aux13447_BOOL);
constraint int_le_reif(s_00002, s_00006,aux13448_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux13444_BOOL,aux13445_BOOL,aux13447_BOOL,aux13448_BOOL],aux13449_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux13450_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux13451_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13452,s_00003],0);
constraint int_lt_reif(s_00006,aux13452,aux13453_BOOL);
constraint int_le_reif(s_00003, s_00006,aux13454_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux13450_BOOL,aux13451_BOOL,aux13453_BOOL,aux13454_BOOL],aux13455_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux13456_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux13457_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13458,s_00004],0);
constraint int_lt_reif(s_00006,aux13458,aux13459_BOOL);
constraint int_le_reif(s_00004, s_00006,aux13460_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux13456_BOOL,aux13457_BOOL,aux13459_BOOL,aux13460_BOOL],aux13461_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux13462_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux13463_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13464,s_00005],0);
constraint int_lt_reif(s_00006,aux13464,aux13465_BOOL);
constraint int_le_reif(s_00005, s_00006,aux13466_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux13462_BOOL,aux13463_BOOL,aux13465_BOOL,aux13466_BOOL],aux13467_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux13468_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux13469_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13470,s_00007],0);
constraint int_lt_reif(s_00006,aux13470,aux13471_BOOL);
constraint int_le_reif(s_00007, s_00006,aux13472_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux13468_BOOL,aux13469_BOOL,aux13471_BOOL,aux13472_BOOL],aux13473_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux13474_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux13475_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13476,s_00008],0);
constraint int_lt_reif(s_00006,aux13476,aux13477_BOOL);
constraint int_le_reif(s_00008, s_00006,aux13478_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux13474_BOOL,aux13475_BOOL,aux13477_BOOL,aux13478_BOOL],aux13479_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux13480_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux13481_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13482,s_00009],0);
constraint int_lt_reif(s_00006,aux13482,aux13483_BOOL);
constraint int_le_reif(s_00009, s_00006,aux13484_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux13480_BOOL,aux13481_BOOL,aux13483_BOOL,aux13484_BOOL],aux13485_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux13486_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux13487_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13488,s_00010],0);
constraint int_lt_reif(s_00006,aux13488,aux13489_BOOL);
constraint int_le_reif(s_00010, s_00006,aux13490_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux13486_BOOL,aux13487_BOOL,aux13489_BOOL,aux13490_BOOL],aux13491_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux13492_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux13493_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13494,s_00011],0);
constraint int_lt_reif(s_00006,aux13494,aux13495_BOOL);
constraint int_le_reif(s_00011, s_00006,aux13496_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux13492_BOOL,aux13493_BOOL,aux13495_BOOL,aux13496_BOOL],aux13497_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux13498_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13499_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13500,s_00012],0);
constraint int_lt_reif(s_00006,aux13500,aux13501_BOOL);
constraint int_le_reif(s_00012, s_00006,aux13502_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux13498_BOOL,aux13499_BOOL,aux13501_BOOL,aux13502_BOOL],aux13503_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux13504_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux13505_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13506,s_00013],0);
constraint int_lt_reif(s_00006,aux13506,aux13507_BOOL);
constraint int_le_reif(s_00013, s_00006,aux13508_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux13504_BOOL,aux13505_BOOL,aux13507_BOOL,aux13508_BOOL],aux13509_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux13510_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux13511_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux13512,s_00014],0);
constraint int_lt_reif(s_00006,aux13512,aux13513_BOOL);
constraint int_le_reif(s_00014, s_00006,aux13514_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux13510_BOOL,aux13511_BOOL,aux13513_BOOL,aux13514_BOOL],aux13515_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux13516_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux13517_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13518,s_00015],0);
constraint int_lt_reif(s_00006,aux13518,aux13519_BOOL);
constraint int_le_reif(s_00015, s_00006,aux13520_BOOL);
constraint array_bool_and([w_00006_00015_BOOL,aux13516_BOOL,aux13517_BOOL,aux13519_BOOL,aux13520_BOOL],aux13521_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux13522_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux13523_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13524,s_00016],0);
constraint int_lt_reif(s_00006,aux13524,aux13525_BOOL);
constraint int_le_reif(s_00016, s_00006,aux13526_BOOL);
constraint array_bool_and([w_00006_00016_BOOL,aux13522_BOOL,aux13523_BOOL,aux13525_BOOL,aux13526_BOOL],aux13527_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux13528_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux13529_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13530,s_00017],0);
constraint int_lt_reif(s_00006,aux13530,aux13531_BOOL);
constraint int_le_reif(s_00017, s_00006,aux13532_BOOL);
constraint array_bool_and([w_00006_00017_BOOL,aux13528_BOOL,aux13529_BOOL,aux13531_BOOL,aux13532_BOOL],aux13533_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux13534_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13535_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13536,s_00018],0);
constraint int_lt_reif(s_00006,aux13536,aux13537_BOOL);
constraint int_le_reif(s_00018, s_00006,aux13538_BOOL);
constraint array_bool_and([w_00006_00018_BOOL,aux13534_BOOL,aux13535_BOOL,aux13537_BOOL,aux13538_BOOL],aux13539_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux13540_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux13541_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13542,s_00019],0);
constraint int_lt_reif(s_00006,aux13542,aux13543_BOOL);
constraint int_le_reif(s_00019, s_00006,aux13544_BOOL);
constraint array_bool_and([w_00006_00019_BOOL,aux13540_BOOL,aux13541_BOOL,aux13543_BOOL,aux13544_BOOL],aux13545_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux13546_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux13547_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13548,s_00020],0);
constraint int_lt_reif(s_00006,aux13548,aux13549_BOOL);
constraint int_le_reif(s_00020, s_00006,aux13550_BOOL);
constraint array_bool_and([w_00006_00020_BOOL,aux13546_BOOL,aux13547_BOOL,aux13549_BOOL,aux13550_BOOL],aux13551_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux13552_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13553,s_00006],0);
constraint int_lt_reif(s_00006,aux13553,aux13554_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux13552_BOOL,aux13554_BOOL],aux13555_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux13443_INTEGER,aux13449_INTEGER,aux13455_INTEGER,aux13461_INTEGER,aux13467_INTEGER,aux13473_INTEGER,aux13479_INTEGER,aux13485_INTEGER,aux13491_INTEGER,aux13497_INTEGER,aux13503_INTEGER,aux13509_INTEGER,aux13515_INTEGER,aux13521_INTEGER,aux13527_INTEGER,aux13533_INTEGER,aux13539_INTEGER,aux13545_INTEGER,aux13551_INTEGER,aux13555_INTEGER,1],0,aux13556_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux13557_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13558_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13559,s_00001],0);
constraint int_lt_reif(s_00018,aux13559,aux13560_BOOL);
constraint int_le_reif(s_00001, s_00018,aux13561_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux13557_BOOL,aux13558_BOOL,aux13560_BOOL,aux13561_BOOL],aux13562_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux13563_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13564_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13565,s_00002],0);
constraint int_lt_reif(s_00018,aux13565,aux13566_BOOL);
constraint int_le_reif(s_00002, s_00018,aux13567_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux13563_BOOL,aux13564_BOOL,aux13566_BOOL,aux13567_BOOL],aux13568_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux13569_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13570_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13571,s_00003],0);
constraint int_lt_reif(s_00018,aux13571,aux13572_BOOL);
constraint int_le_reif(s_00003, s_00018,aux13573_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux13569_BOOL,aux13570_BOOL,aux13572_BOOL,aux13573_BOOL],aux13574_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux13575_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13576_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13577,s_00004],0);
constraint int_lt_reif(s_00018,aux13577,aux13578_BOOL);
constraint int_le_reif(s_00004, s_00018,aux13579_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux13575_BOOL,aux13576_BOOL,aux13578_BOOL,aux13579_BOOL],aux13580_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux13581_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13582_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13583,s_00005],0);
constraint int_lt_reif(s_00018,aux13583,aux13584_BOOL);
constraint int_le_reif(s_00005, s_00018,aux13585_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux13581_BOOL,aux13582_BOOL,aux13584_BOOL,aux13585_BOOL],aux13586_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux13587_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13588_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13589,s_00006],0);
constraint int_lt_reif(s_00018,aux13589,aux13590_BOOL);
constraint int_le_reif(s_00006, s_00018,aux13591_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux13587_BOOL,aux13588_BOOL,aux13590_BOOL,aux13591_BOOL],aux13592_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux13593_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13594_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13595,s_00007],0);
constraint int_lt_reif(s_00018,aux13595,aux13596_BOOL);
constraint int_le_reif(s_00007, s_00018,aux13597_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux13593_BOOL,aux13594_BOOL,aux13596_BOOL,aux13597_BOOL],aux13598_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux13599_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13600_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13601,s_00008],0);
constraint int_lt_reif(s_00018,aux13601,aux13602_BOOL);
constraint int_le_reif(s_00008, s_00018,aux13603_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux13599_BOOL,aux13600_BOOL,aux13602_BOOL,aux13603_BOOL],aux13604_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux13605_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13606_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13607,s_00009],0);
constraint int_lt_reif(s_00018,aux13607,aux13608_BOOL);
constraint int_le_reif(s_00009, s_00018,aux13609_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux13605_BOOL,aux13606_BOOL,aux13608_BOOL,aux13609_BOOL],aux13610_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux13611_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13612_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13613,s_00010],0);
constraint int_lt_reif(s_00018,aux13613,aux13614_BOOL);
constraint int_le_reif(s_00010, s_00018,aux13615_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux13611_BOOL,aux13612_BOOL,aux13614_BOOL,aux13615_BOOL],aux13616_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux13617_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13618_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13619,s_00011],0);
constraint int_lt_reif(s_00018,aux13619,aux13620_BOOL);
constraint int_le_reif(s_00011, s_00018,aux13621_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux13617_BOOL,aux13618_BOOL,aux13620_BOOL,aux13621_BOOL],aux13622_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13623_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13624_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13625,s_00012],0);
constraint int_lt_reif(s_00018,aux13625,aux13626_BOOL);
constraint int_le_reif(s_00012, s_00018,aux13627_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux13623_BOOL,aux13624_BOOL,aux13626_BOOL,aux13627_BOOL],aux13628_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux13629_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13630_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13631,s_00013],0);
constraint int_lt_reif(s_00018,aux13631,aux13632_BOOL);
constraint int_le_reif(s_00013, s_00018,aux13633_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux13629_BOOL,aux13630_BOOL,aux13632_BOOL,aux13633_BOOL],aux13634_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux13635_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13636_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux13637,s_00014],0);
constraint int_lt_reif(s_00018,aux13637,aux13638_BOOL);
constraint int_le_reif(s_00014, s_00018,aux13639_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux13635_BOOL,aux13636_BOOL,aux13638_BOOL,aux13639_BOOL],aux13640_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux13641_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13642_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13643,s_00015],0);
constraint int_lt_reif(s_00018,aux13643,aux13644_BOOL);
constraint int_le_reif(s_00015, s_00018,aux13645_BOOL);
constraint array_bool_and([w_00006_00015_BOOL,aux13641_BOOL,aux13642_BOOL,aux13644_BOOL,aux13645_BOOL],aux13646_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux13647_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13648_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13649,s_00016],0);
constraint int_lt_reif(s_00018,aux13649,aux13650_BOOL);
constraint int_le_reif(s_00016, s_00018,aux13651_BOOL);
constraint array_bool_and([w_00006_00016_BOOL,aux13647_BOOL,aux13648_BOOL,aux13650_BOOL,aux13651_BOOL],aux13652_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux13653_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13654_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13655,s_00017],0);
constraint int_lt_reif(s_00018,aux13655,aux13656_BOOL);
constraint int_le_reif(s_00017, s_00018,aux13657_BOOL);
constraint array_bool_and([w_00006_00017_BOOL,aux13653_BOOL,aux13654_BOOL,aux13656_BOOL,aux13657_BOOL],aux13658_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13659_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux13660_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13661,s_00019],0);
constraint int_lt_reif(s_00018,aux13661,aux13662_BOOL);
constraint int_le_reif(s_00019, s_00018,aux13663_BOOL);
constraint array_bool_and([w_00006_00019_BOOL,aux13659_BOOL,aux13660_BOOL,aux13662_BOOL,aux13663_BOOL],aux13664_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13665_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux13666_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13667,s_00020],0);
constraint int_lt_reif(s_00018,aux13667,aux13668_BOOL);
constraint int_le_reif(s_00020, s_00018,aux13669_BOOL);
constraint array_bool_and([w_00006_00020_BOOL,aux13665_BOOL,aux13666_BOOL,aux13668_BOOL,aux13669_BOOL],aux13670_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13671_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13672,s_00018],0);
constraint int_lt_reif(s_00018,aux13672,aux13673_BOOL);
constraint array_bool_and([w_00006_00018_BOOL,aux13671_BOOL,aux13673_BOOL],aux13674_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux13562_INTEGER,aux13568_INTEGER,aux13574_INTEGER,aux13580_INTEGER,aux13586_INTEGER,aux13592_INTEGER,aux13598_INTEGER,aux13604_INTEGER,aux13610_INTEGER,aux13616_INTEGER,aux13622_INTEGER,aux13628_INTEGER,aux13634_INTEGER,aux13640_INTEGER,aux13646_INTEGER,aux13652_INTEGER,aux13658_INTEGER,aux13664_INTEGER,aux13670_INTEGER,aux13674_INTEGER,1],0,aux13675_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux13676_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux13677_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13678,s_00002],0);
constraint int_lt_reif(s_00001,aux13678,aux13679_BOOL);
constraint int_le_reif(s_00002, s_00001,aux13680_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux13676_BOOL,aux13677_BOOL,aux13679_BOOL,aux13680_BOOL],aux13681_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux13682_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux13683_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13684,s_00003],0);
constraint int_lt_reif(s_00001,aux13684,aux13685_BOOL);
constraint int_le_reif(s_00003, s_00001,aux13686_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux13682_BOOL,aux13683_BOOL,aux13685_BOOL,aux13686_BOOL],aux13687_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux13688_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux13689_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13690,s_00004],0);
constraint int_lt_reif(s_00001,aux13690,aux13691_BOOL);
constraint int_le_reif(s_00004, s_00001,aux13692_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux13688_BOOL,aux13689_BOOL,aux13691_BOOL,aux13692_BOOL],aux13693_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux13694_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux13695_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13696,s_00005],0);
constraint int_lt_reif(s_00001,aux13696,aux13697_BOOL);
constraint int_le_reif(s_00005, s_00001,aux13698_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux13694_BOOL,aux13695_BOOL,aux13697_BOOL,aux13698_BOOL],aux13699_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux13700_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux13701_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13702,s_00006],0);
constraint int_lt_reif(s_00001,aux13702,aux13703_BOOL);
constraint int_le_reif(s_00006, s_00001,aux13704_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux13700_BOOL,aux13701_BOOL,aux13703_BOOL,aux13704_BOOL],aux13705_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux13706_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux13707_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13708,s_00007],0);
constraint int_lt_reif(s_00001,aux13708,aux13709_BOOL);
constraint int_le_reif(s_00007, s_00001,aux13710_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux13706_BOOL,aux13707_BOOL,aux13709_BOOL,aux13710_BOOL],aux13711_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux13712_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux13713_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13714,s_00008],0);
constraint int_lt_reif(s_00001,aux13714,aux13715_BOOL);
constraint int_le_reif(s_00008, s_00001,aux13716_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux13712_BOOL,aux13713_BOOL,aux13715_BOOL,aux13716_BOOL],aux13717_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux13718_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux13719_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13720,s_00009],0);
constraint int_lt_reif(s_00001,aux13720,aux13721_BOOL);
constraint int_le_reif(s_00009, s_00001,aux13722_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux13718_BOOL,aux13719_BOOL,aux13721_BOOL,aux13722_BOOL],aux13723_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux13724_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux13725_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13726,s_00010],0);
constraint int_lt_reif(s_00001,aux13726,aux13727_BOOL);
constraint int_le_reif(s_00010, s_00001,aux13728_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux13724_BOOL,aux13725_BOOL,aux13727_BOOL,aux13728_BOOL],aux13729_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux13730_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux13731_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13732,s_00011],0);
constraint int_lt_reif(s_00001,aux13732,aux13733_BOOL);
constraint int_le_reif(s_00011, s_00001,aux13734_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux13730_BOOL,aux13731_BOOL,aux13733_BOOL,aux13734_BOOL],aux13735_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux13736_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13737_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13738,s_00012],0);
constraint int_lt_reif(s_00001,aux13738,aux13739_BOOL);
constraint int_le_reif(s_00012, s_00001,aux13740_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux13736_BOOL,aux13737_BOOL,aux13739_BOOL,aux13740_BOOL],aux13741_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux13742_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux13743_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13744,s_00013],0);
constraint int_lt_reif(s_00001,aux13744,aux13745_BOOL);
constraint int_le_reif(s_00013, s_00001,aux13746_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux13742_BOOL,aux13743_BOOL,aux13745_BOOL,aux13746_BOOL],aux13747_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux13748_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux13749_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux13750,s_00014],0);
constraint int_lt_reif(s_00001,aux13750,aux13751_BOOL);
constraint int_le_reif(s_00014, s_00001,aux13752_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux13748_BOOL,aux13749_BOOL,aux13751_BOOL,aux13752_BOOL],aux13753_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux13754_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux13755_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13756,s_00015],0);
constraint int_lt_reif(s_00001,aux13756,aux13757_BOOL);
constraint int_le_reif(s_00015, s_00001,aux13758_BOOL);
constraint array_bool_and([w_00006_00015_BOOL,aux13754_BOOL,aux13755_BOOL,aux13757_BOOL,aux13758_BOOL],aux13759_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux13760_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux13761_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13762,s_00016],0);
constraint int_lt_reif(s_00001,aux13762,aux13763_BOOL);
constraint int_le_reif(s_00016, s_00001,aux13764_BOOL);
constraint array_bool_and([w_00006_00016_BOOL,aux13760_BOOL,aux13761_BOOL,aux13763_BOOL,aux13764_BOOL],aux13765_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux13766_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux13767_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13768,s_00017],0);
constraint int_lt_reif(s_00001,aux13768,aux13769_BOOL);
constraint int_le_reif(s_00017, s_00001,aux13770_BOOL);
constraint array_bool_and([w_00006_00017_BOOL,aux13766_BOOL,aux13767_BOOL,aux13769_BOOL,aux13770_BOOL],aux13771_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux13772_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13773_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13774,s_00018],0);
constraint int_lt_reif(s_00001,aux13774,aux13775_BOOL);
constraint int_le_reif(s_00018, s_00001,aux13776_BOOL);
constraint array_bool_and([w_00006_00018_BOOL,aux13772_BOOL,aux13773_BOOL,aux13775_BOOL,aux13776_BOOL],aux13777_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux13778_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux13779_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13780,s_00019],0);
constraint int_lt_reif(s_00001,aux13780,aux13781_BOOL);
constraint int_le_reif(s_00019, s_00001,aux13782_BOOL);
constraint array_bool_and([w_00006_00019_BOOL,aux13778_BOOL,aux13779_BOOL,aux13781_BOOL,aux13782_BOOL],aux13783_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux13784_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux13785_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13786,s_00020],0);
constraint int_lt_reif(s_00001,aux13786,aux13787_BOOL);
constraint int_le_reif(s_00020, s_00001,aux13788_BOOL);
constraint array_bool_and([w_00006_00020_BOOL,aux13784_BOOL,aux13785_BOOL,aux13787_BOOL,aux13788_BOOL],aux13789_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux13790_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13791,s_00001],0);
constraint int_lt_reif(s_00001,aux13791,aux13792_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux13790_BOOL,aux13792_BOOL],aux13793_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux13681_INTEGER,aux13687_INTEGER,aux13693_INTEGER,aux13699_INTEGER,aux13705_INTEGER,aux13711_INTEGER,aux13717_INTEGER,aux13723_INTEGER,aux13729_INTEGER,aux13735_INTEGER,aux13741_INTEGER,aux13747_INTEGER,aux13753_INTEGER,aux13759_INTEGER,aux13765_INTEGER,aux13771_INTEGER,aux13777_INTEGER,aux13783_INTEGER,aux13789_INTEGER,aux13793_INTEGER,1],0,aux13794_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux13795_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux13796_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13797,s_00001],0);
constraint int_lt_reif(s_00008,aux13797,aux13798_BOOL);
constraint int_le_reif(s_00001, s_00008,aux13799_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux13795_BOOL,aux13796_BOOL,aux13798_BOOL,aux13799_BOOL],aux13800_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux13801_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux13802_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13803,s_00002],0);
constraint int_lt_reif(s_00008,aux13803,aux13804_BOOL);
constraint int_le_reif(s_00002, s_00008,aux13805_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux13801_BOOL,aux13802_BOOL,aux13804_BOOL,aux13805_BOOL],aux13806_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux13807_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux13808_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13809,s_00003],0);
constraint int_lt_reif(s_00008,aux13809,aux13810_BOOL);
constraint int_le_reif(s_00003, s_00008,aux13811_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux13807_BOOL,aux13808_BOOL,aux13810_BOOL,aux13811_BOOL],aux13812_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux13813_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux13814_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13815,s_00004],0);
constraint int_lt_reif(s_00008,aux13815,aux13816_BOOL);
constraint int_le_reif(s_00004, s_00008,aux13817_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux13813_BOOL,aux13814_BOOL,aux13816_BOOL,aux13817_BOOL],aux13818_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux13819_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux13820_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13821,s_00005],0);
constraint int_lt_reif(s_00008,aux13821,aux13822_BOOL);
constraint int_le_reif(s_00005, s_00008,aux13823_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux13819_BOOL,aux13820_BOOL,aux13822_BOOL,aux13823_BOOL],aux13824_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux13825_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux13826_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13827,s_00006],0);
constraint int_lt_reif(s_00008,aux13827,aux13828_BOOL);
constraint int_le_reif(s_00006, s_00008,aux13829_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux13825_BOOL,aux13826_BOOL,aux13828_BOOL,aux13829_BOOL],aux13830_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux13831_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux13832_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13833,s_00007],0);
constraint int_lt_reif(s_00008,aux13833,aux13834_BOOL);
constraint int_le_reif(s_00007, s_00008,aux13835_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux13831_BOOL,aux13832_BOOL,aux13834_BOOL,aux13835_BOOL],aux13836_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux13837_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux13838_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13839,s_00009],0);
constraint int_lt_reif(s_00008,aux13839,aux13840_BOOL);
constraint int_le_reif(s_00009, s_00008,aux13841_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux13837_BOOL,aux13838_BOOL,aux13840_BOOL,aux13841_BOOL],aux13842_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux13843_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux13844_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13845,s_00010],0);
constraint int_lt_reif(s_00008,aux13845,aux13846_BOOL);
constraint int_le_reif(s_00010, s_00008,aux13847_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux13843_BOOL,aux13844_BOOL,aux13846_BOOL,aux13847_BOOL],aux13848_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux13849_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux13850_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13851,s_00011],0);
constraint int_lt_reif(s_00008,aux13851,aux13852_BOOL);
constraint int_le_reif(s_00011, s_00008,aux13853_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux13849_BOOL,aux13850_BOOL,aux13852_BOOL,aux13853_BOOL],aux13854_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux13855_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13856_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13857,s_00012],0);
constraint int_lt_reif(s_00008,aux13857,aux13858_BOOL);
constraint int_le_reif(s_00012, s_00008,aux13859_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux13855_BOOL,aux13856_BOOL,aux13858_BOOL,aux13859_BOOL],aux13860_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux13861_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux13862_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13863,s_00013],0);
constraint int_lt_reif(s_00008,aux13863,aux13864_BOOL);
constraint int_le_reif(s_00013, s_00008,aux13865_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux13861_BOOL,aux13862_BOOL,aux13864_BOOL,aux13865_BOOL],aux13866_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux13867_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux13868_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux13869,s_00014],0);
constraint int_lt_reif(s_00008,aux13869,aux13870_BOOL);
constraint int_le_reif(s_00014, s_00008,aux13871_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux13867_BOOL,aux13868_BOOL,aux13870_BOOL,aux13871_BOOL],aux13872_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux13873_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux13874_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13875,s_00015],0);
constraint int_lt_reif(s_00008,aux13875,aux13876_BOOL);
constraint int_le_reif(s_00015, s_00008,aux13877_BOOL);
constraint array_bool_and([w_00006_00015_BOOL,aux13873_BOOL,aux13874_BOOL,aux13876_BOOL,aux13877_BOOL],aux13878_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux13879_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux13880_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13881,s_00016],0);
constraint int_lt_reif(s_00008,aux13881,aux13882_BOOL);
constraint int_le_reif(s_00016, s_00008,aux13883_BOOL);
constraint array_bool_and([w_00006_00016_BOOL,aux13879_BOOL,aux13880_BOOL,aux13882_BOOL,aux13883_BOOL],aux13884_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux13885_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux13886_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13887,s_00017],0);
constraint int_lt_reif(s_00008,aux13887,aux13888_BOOL);
constraint int_le_reif(s_00017, s_00008,aux13889_BOOL);
constraint array_bool_and([w_00006_00017_BOOL,aux13885_BOOL,aux13886_BOOL,aux13888_BOOL,aux13889_BOOL],aux13890_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux13891_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux13892_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13893,s_00018],0);
constraint int_lt_reif(s_00008,aux13893,aux13894_BOOL);
constraint int_le_reif(s_00018, s_00008,aux13895_BOOL);
constraint array_bool_and([w_00006_00018_BOOL,aux13891_BOOL,aux13892_BOOL,aux13894_BOOL,aux13895_BOOL],aux13896_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux13897_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux13898_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13899,s_00019],0);
constraint int_lt_reif(s_00008,aux13899,aux13900_BOOL);
constraint int_le_reif(s_00019, s_00008,aux13901_BOOL);
constraint array_bool_and([w_00006_00019_BOOL,aux13897_BOOL,aux13898_BOOL,aux13900_BOOL,aux13901_BOOL],aux13902_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux13903_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux13904_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13905,s_00020],0);
constraint int_lt_reif(s_00008,aux13905,aux13906_BOOL);
constraint int_le_reif(s_00020, s_00008,aux13907_BOOL);
constraint array_bool_and([w_00006_00020_BOOL,aux13903_BOOL,aux13904_BOOL,aux13906_BOOL,aux13907_BOOL],aux13908_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux13909_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13910,s_00008],0);
constraint int_lt_reif(s_00008,aux13910,aux13911_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux13909_BOOL,aux13911_BOOL],aux13912_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux13800_INTEGER,aux13806_INTEGER,aux13812_INTEGER,aux13818_INTEGER,aux13824_INTEGER,aux13830_INTEGER,aux13836_INTEGER,aux13842_INTEGER,aux13848_INTEGER,aux13854_INTEGER,aux13860_INTEGER,aux13866_INTEGER,aux13872_INTEGER,aux13878_INTEGER,aux13884_INTEGER,aux13890_INTEGER,aux13896_INTEGER,aux13902_INTEGER,aux13908_INTEGER,aux13912_INTEGER,1],0,aux13913_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux13914_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux13915_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13916,s_00001],0);
constraint int_lt_reif(s_00019,aux13916,aux13917_BOOL);
constraint int_le_reif(s_00001, s_00019,aux13918_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux13914_BOOL,aux13915_BOOL,aux13917_BOOL,aux13918_BOOL],aux13919_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux13920_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux13921_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13922,s_00002],0);
constraint int_lt_reif(s_00019,aux13922,aux13923_BOOL);
constraint int_le_reif(s_00002, s_00019,aux13924_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux13920_BOOL,aux13921_BOOL,aux13923_BOOL,aux13924_BOOL],aux13925_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux13926_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux13927_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13928,s_00003],0);
constraint int_lt_reif(s_00019,aux13928,aux13929_BOOL);
constraint int_le_reif(s_00003, s_00019,aux13930_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux13926_BOOL,aux13927_BOOL,aux13929_BOOL,aux13930_BOOL],aux13931_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux13932_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux13933_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13934,s_00004],0);
constraint int_lt_reif(s_00019,aux13934,aux13935_BOOL);
constraint int_le_reif(s_00004, s_00019,aux13936_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux13932_BOOL,aux13933_BOOL,aux13935_BOOL,aux13936_BOOL],aux13937_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux13938_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux13939_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13940,s_00005],0);
constraint int_lt_reif(s_00019,aux13940,aux13941_BOOL);
constraint int_le_reif(s_00005, s_00019,aux13942_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux13938_BOOL,aux13939_BOOL,aux13941_BOOL,aux13942_BOOL],aux13943_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux13944_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux13945_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux13946,s_00006],0);
constraint int_lt_reif(s_00019,aux13946,aux13947_BOOL);
constraint int_le_reif(s_00006, s_00019,aux13948_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux13944_BOOL,aux13945_BOOL,aux13947_BOOL,aux13948_BOOL],aux13949_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux13950_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux13951_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13952,s_00007],0);
constraint int_lt_reif(s_00019,aux13952,aux13953_BOOL);
constraint int_le_reif(s_00007, s_00019,aux13954_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux13950_BOOL,aux13951_BOOL,aux13953_BOOL,aux13954_BOOL],aux13955_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux13956_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux13957_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13958,s_00008],0);
constraint int_lt_reif(s_00019,aux13958,aux13959_BOOL);
constraint int_le_reif(s_00008, s_00019,aux13960_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux13956_BOOL,aux13957_BOOL,aux13959_BOOL,aux13960_BOOL],aux13961_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux13962_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux13963_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13964,s_00009],0);
constraint int_lt_reif(s_00019,aux13964,aux13965_BOOL);
constraint int_le_reif(s_00009, s_00019,aux13966_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux13962_BOOL,aux13963_BOOL,aux13965_BOOL,aux13966_BOOL],aux13967_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux13968_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux13969_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13970,s_00010],0);
constraint int_lt_reif(s_00019,aux13970,aux13971_BOOL);
constraint int_le_reif(s_00010, s_00019,aux13972_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux13968_BOOL,aux13969_BOOL,aux13971_BOOL,aux13972_BOOL],aux13973_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux13974_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux13975_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13976,s_00011],0);
constraint int_lt_reif(s_00019,aux13976,aux13977_BOOL);
constraint int_le_reif(s_00011, s_00019,aux13978_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux13974_BOOL,aux13975_BOOL,aux13977_BOOL,aux13978_BOOL],aux13979_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux13980_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux13981_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux13982,s_00012],0);
constraint int_lt_reif(s_00019,aux13982,aux13983_BOOL);
constraint int_le_reif(s_00012, s_00019,aux13984_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux13980_BOOL,aux13981_BOOL,aux13983_BOOL,aux13984_BOOL],aux13985_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux13986_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux13987_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux13988,s_00013],0);
constraint int_lt_reif(s_00019,aux13988,aux13989_BOOL);
constraint int_le_reif(s_00013, s_00019,aux13990_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux13986_BOOL,aux13987_BOOL,aux13989_BOOL,aux13990_BOOL],aux13991_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux13992_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux13993_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux13994,s_00014],0);
constraint int_lt_reif(s_00019,aux13994,aux13995_BOOL);
constraint int_le_reif(s_00014, s_00019,aux13996_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux13992_BOOL,aux13993_BOOL,aux13995_BOOL,aux13996_BOOL],aux13997_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux13998_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux13999_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14000,s_00015],0);
constraint int_lt_reif(s_00019,aux14000,aux14001_BOOL);
constraint int_le_reif(s_00015, s_00019,aux14002_BOOL);
constraint array_bool_and([w_00006_00015_BOOL,aux13998_BOOL,aux13999_BOOL,aux14001_BOOL,aux14002_BOOL],aux14003_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux14004_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux14005_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14006,s_00016],0);
constraint int_lt_reif(s_00019,aux14006,aux14007_BOOL);
constraint int_le_reif(s_00016, s_00019,aux14008_BOOL);
constraint array_bool_and([w_00006_00016_BOOL,aux14004_BOOL,aux14005_BOOL,aux14007_BOOL,aux14008_BOOL],aux14009_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux14010_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux14011_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14012,s_00017],0);
constraint int_lt_reif(s_00019,aux14012,aux14013_BOOL);
constraint int_le_reif(s_00017, s_00019,aux14014_BOOL);
constraint array_bool_and([w_00006_00017_BOOL,aux14010_BOOL,aux14011_BOOL,aux14013_BOOL,aux14014_BOOL],aux14015_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux14016_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux14017_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14018,s_00018],0);
constraint int_lt_reif(s_00019,aux14018,aux14019_BOOL);
constraint int_le_reif(s_00018, s_00019,aux14020_BOOL);
constraint array_bool_and([w_00006_00018_BOOL,aux14016_BOOL,aux14017_BOOL,aux14019_BOOL,aux14020_BOOL],aux14021_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux14022_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux14023_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14024,s_00020],0);
constraint int_lt_reif(s_00019,aux14024,aux14025_BOOL);
constraint int_le_reif(s_00020, s_00019,aux14026_BOOL);
constraint array_bool_and([w_00006_00020_BOOL,aux14022_BOOL,aux14023_BOOL,aux14025_BOOL,aux14026_BOOL],aux14027_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux14028_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14029,s_00019],0);
constraint int_lt_reif(s_00019,aux14029,aux14030_BOOL);
constraint array_bool_and([w_00006_00019_BOOL,aux14028_BOOL,aux14030_BOOL],aux14031_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux13919_INTEGER,aux13925_INTEGER,aux13931_INTEGER,aux13937_INTEGER,aux13943_INTEGER,aux13949_INTEGER,aux13955_INTEGER,aux13961_INTEGER,aux13967_INTEGER,aux13973_INTEGER,aux13979_INTEGER,aux13985_INTEGER,aux13991_INTEGER,aux13997_INTEGER,aux14003_INTEGER,aux14009_INTEGER,aux14015_INTEGER,aux14021_INTEGER,aux14027_INTEGER,aux14031_INTEGER,1],0,aux14032_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux14033_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux14034_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14035,s_00001],0);
constraint int_lt_reif(s_00004,aux14035,aux14036_BOOL);
constraint int_le_reif(s_00001, s_00004,aux14037_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux14033_BOOL,aux14034_BOOL,aux14036_BOOL,aux14037_BOOL],aux14038_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux14039_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux14040_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14041,s_00002],0);
constraint int_lt_reif(s_00004,aux14041,aux14042_BOOL);
constraint int_le_reif(s_00002, s_00004,aux14043_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux14039_BOOL,aux14040_BOOL,aux14042_BOOL,aux14043_BOOL],aux14044_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux14045_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux14046_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14047,s_00003],0);
constraint int_lt_reif(s_00004,aux14047,aux14048_BOOL);
constraint int_le_reif(s_00003, s_00004,aux14049_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux14045_BOOL,aux14046_BOOL,aux14048_BOOL,aux14049_BOOL],aux14050_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux14051_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux14052_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14053,s_00005],0);
constraint int_lt_reif(s_00004,aux14053,aux14054_BOOL);
constraint int_le_reif(s_00005, s_00004,aux14055_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux14051_BOOL,aux14052_BOOL,aux14054_BOOL,aux14055_BOOL],aux14056_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux14057_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux14058_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14059,s_00006],0);
constraint int_lt_reif(s_00004,aux14059,aux14060_BOOL);
constraint int_le_reif(s_00006, s_00004,aux14061_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux14057_BOOL,aux14058_BOOL,aux14060_BOOL,aux14061_BOOL],aux14062_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux14063_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux14064_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14065,s_00007],0);
constraint int_lt_reif(s_00004,aux14065,aux14066_BOOL);
constraint int_le_reif(s_00007, s_00004,aux14067_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux14063_BOOL,aux14064_BOOL,aux14066_BOOL,aux14067_BOOL],aux14068_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux14069_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux14070_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14071,s_00008],0);
constraint int_lt_reif(s_00004,aux14071,aux14072_BOOL);
constraint int_le_reif(s_00008, s_00004,aux14073_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux14069_BOOL,aux14070_BOOL,aux14072_BOOL,aux14073_BOOL],aux14074_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux14075_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux14076_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14077,s_00009],0);
constraint int_lt_reif(s_00004,aux14077,aux14078_BOOL);
constraint int_le_reif(s_00009, s_00004,aux14079_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux14075_BOOL,aux14076_BOOL,aux14078_BOOL,aux14079_BOOL],aux14080_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux14081_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux14082_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14083,s_00010],0);
constraint int_lt_reif(s_00004,aux14083,aux14084_BOOL);
constraint int_le_reif(s_00010, s_00004,aux14085_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux14081_BOOL,aux14082_BOOL,aux14084_BOOL,aux14085_BOOL],aux14086_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux14087_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux14088_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14089,s_00011],0);
constraint int_lt_reif(s_00004,aux14089,aux14090_BOOL);
constraint int_le_reif(s_00011, s_00004,aux14091_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux14087_BOOL,aux14088_BOOL,aux14090_BOOL,aux14091_BOOL],aux14092_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux14093_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux14094_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14095,s_00012],0);
constraint int_lt_reif(s_00004,aux14095,aux14096_BOOL);
constraint int_le_reif(s_00012, s_00004,aux14097_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux14093_BOOL,aux14094_BOOL,aux14096_BOOL,aux14097_BOOL],aux14098_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux14099_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux14100_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14101,s_00013],0);
constraint int_lt_reif(s_00004,aux14101,aux14102_BOOL);
constraint int_le_reif(s_00013, s_00004,aux14103_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux14099_BOOL,aux14100_BOOL,aux14102_BOOL,aux14103_BOOL],aux14104_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux14105_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux14106_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux14107,s_00014],0);
constraint int_lt_reif(s_00004,aux14107,aux14108_BOOL);
constraint int_le_reif(s_00014, s_00004,aux14109_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux14105_BOOL,aux14106_BOOL,aux14108_BOOL,aux14109_BOOL],aux14110_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux14111_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux14112_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14113,s_00015],0);
constraint int_lt_reif(s_00004,aux14113,aux14114_BOOL);
constraint int_le_reif(s_00015, s_00004,aux14115_BOOL);
constraint array_bool_and([w_00006_00015_BOOL,aux14111_BOOL,aux14112_BOOL,aux14114_BOOL,aux14115_BOOL],aux14116_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux14117_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux14118_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14119,s_00016],0);
constraint int_lt_reif(s_00004,aux14119,aux14120_BOOL);
constraint int_le_reif(s_00016, s_00004,aux14121_BOOL);
constraint array_bool_and([w_00006_00016_BOOL,aux14117_BOOL,aux14118_BOOL,aux14120_BOOL,aux14121_BOOL],aux14122_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux14123_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux14124_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14125,s_00017],0);
constraint int_lt_reif(s_00004,aux14125,aux14126_BOOL);
constraint int_le_reif(s_00017, s_00004,aux14127_BOOL);
constraint array_bool_and([w_00006_00017_BOOL,aux14123_BOOL,aux14124_BOOL,aux14126_BOOL,aux14127_BOOL],aux14128_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux14129_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux14130_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14131,s_00018],0);
constraint int_lt_reif(s_00004,aux14131,aux14132_BOOL);
constraint int_le_reif(s_00018, s_00004,aux14133_BOOL);
constraint array_bool_and([w_00006_00018_BOOL,aux14129_BOOL,aux14130_BOOL,aux14132_BOOL,aux14133_BOOL],aux14134_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux14135_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux14136_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14137,s_00019],0);
constraint int_lt_reif(s_00004,aux14137,aux14138_BOOL);
constraint int_le_reif(s_00019, s_00004,aux14139_BOOL);
constraint array_bool_and([w_00006_00019_BOOL,aux14135_BOOL,aux14136_BOOL,aux14138_BOOL,aux14139_BOOL],aux14140_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux14141_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux14142_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14143,s_00020],0);
constraint int_lt_reif(s_00004,aux14143,aux14144_BOOL);
constraint int_le_reif(s_00020, s_00004,aux14145_BOOL);
constraint array_bool_and([w_00006_00020_BOOL,aux14141_BOOL,aux14142_BOOL,aux14144_BOOL,aux14145_BOOL],aux14146_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux14147_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14148,s_00004],0);
constraint int_lt_reif(s_00004,aux14148,aux14149_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux14147_BOOL,aux14149_BOOL],aux14150_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux14038_INTEGER,aux14044_INTEGER,aux14050_INTEGER,aux14056_INTEGER,aux14062_INTEGER,aux14068_INTEGER,aux14074_INTEGER,aux14080_INTEGER,aux14086_INTEGER,aux14092_INTEGER,aux14098_INTEGER,aux14104_INTEGER,aux14110_INTEGER,aux14116_INTEGER,aux14122_INTEGER,aux14128_INTEGER,aux14134_INTEGER,aux14140_INTEGER,aux14146_INTEGER,aux14150_INTEGER,1],0,aux14151_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux14152_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux14153_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14154,s_00001],0);
constraint int_lt_reif(s_00009,aux14154,aux14155_BOOL);
constraint int_le_reif(s_00001, s_00009,aux14156_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux14152_BOOL,aux14153_BOOL,aux14155_BOOL,aux14156_BOOL],aux14157_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux14158_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux14159_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14160,s_00002],0);
constraint int_lt_reif(s_00009,aux14160,aux14161_BOOL);
constraint int_le_reif(s_00002, s_00009,aux14162_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux14158_BOOL,aux14159_BOOL,aux14161_BOOL,aux14162_BOOL],aux14163_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux14164_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux14165_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14166,s_00003],0);
constraint int_lt_reif(s_00009,aux14166,aux14167_BOOL);
constraint int_le_reif(s_00003, s_00009,aux14168_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux14164_BOOL,aux14165_BOOL,aux14167_BOOL,aux14168_BOOL],aux14169_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux14170_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux14171_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14172,s_00004],0);
constraint int_lt_reif(s_00009,aux14172,aux14173_BOOL);
constraint int_le_reif(s_00004, s_00009,aux14174_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux14170_BOOL,aux14171_BOOL,aux14173_BOOL,aux14174_BOOL],aux14175_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux14176_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux14177_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14178,s_00005],0);
constraint int_lt_reif(s_00009,aux14178,aux14179_BOOL);
constraint int_le_reif(s_00005, s_00009,aux14180_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux14176_BOOL,aux14177_BOOL,aux14179_BOOL,aux14180_BOOL],aux14181_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux14182_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux14183_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14184,s_00006],0);
constraint int_lt_reif(s_00009,aux14184,aux14185_BOOL);
constraint int_le_reif(s_00006, s_00009,aux14186_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux14182_BOOL,aux14183_BOOL,aux14185_BOOL,aux14186_BOOL],aux14187_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux14188_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux14189_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14190,s_00007],0);
constraint int_lt_reif(s_00009,aux14190,aux14191_BOOL);
constraint int_le_reif(s_00007, s_00009,aux14192_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux14188_BOOL,aux14189_BOOL,aux14191_BOOL,aux14192_BOOL],aux14193_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux14194_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux14195_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14196,s_00008],0);
constraint int_lt_reif(s_00009,aux14196,aux14197_BOOL);
constraint int_le_reif(s_00008, s_00009,aux14198_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux14194_BOOL,aux14195_BOOL,aux14197_BOOL,aux14198_BOOL],aux14199_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux14200_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux14201_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14202,s_00010],0);
constraint int_lt_reif(s_00009,aux14202,aux14203_BOOL);
constraint int_le_reif(s_00010, s_00009,aux14204_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux14200_BOOL,aux14201_BOOL,aux14203_BOOL,aux14204_BOOL],aux14205_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux14206_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux14207_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14208,s_00011],0);
constraint int_lt_reif(s_00009,aux14208,aux14209_BOOL);
constraint int_le_reif(s_00011, s_00009,aux14210_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux14206_BOOL,aux14207_BOOL,aux14209_BOOL,aux14210_BOOL],aux14211_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux14212_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux14213_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14214,s_00012],0);
constraint int_lt_reif(s_00009,aux14214,aux14215_BOOL);
constraint int_le_reif(s_00012, s_00009,aux14216_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux14212_BOOL,aux14213_BOOL,aux14215_BOOL,aux14216_BOOL],aux14217_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux14218_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux14219_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14220,s_00013],0);
constraint int_lt_reif(s_00009,aux14220,aux14221_BOOL);
constraint int_le_reif(s_00013, s_00009,aux14222_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux14218_BOOL,aux14219_BOOL,aux14221_BOOL,aux14222_BOOL],aux14223_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux14224_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux14225_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux14226,s_00014],0);
constraint int_lt_reif(s_00009,aux14226,aux14227_BOOL);
constraint int_le_reif(s_00014, s_00009,aux14228_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux14224_BOOL,aux14225_BOOL,aux14227_BOOL,aux14228_BOOL],aux14229_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux14230_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux14231_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14232,s_00015],0);
constraint int_lt_reif(s_00009,aux14232,aux14233_BOOL);
constraint int_le_reif(s_00015, s_00009,aux14234_BOOL);
constraint array_bool_and([w_00006_00015_BOOL,aux14230_BOOL,aux14231_BOOL,aux14233_BOOL,aux14234_BOOL],aux14235_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux14236_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux14237_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14238,s_00016],0);
constraint int_lt_reif(s_00009,aux14238,aux14239_BOOL);
constraint int_le_reif(s_00016, s_00009,aux14240_BOOL);
constraint array_bool_and([w_00006_00016_BOOL,aux14236_BOOL,aux14237_BOOL,aux14239_BOOL,aux14240_BOOL],aux14241_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux14242_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux14243_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14244,s_00017],0);
constraint int_lt_reif(s_00009,aux14244,aux14245_BOOL);
constraint int_le_reif(s_00017, s_00009,aux14246_BOOL);
constraint array_bool_and([w_00006_00017_BOOL,aux14242_BOOL,aux14243_BOOL,aux14245_BOOL,aux14246_BOOL],aux14247_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux14248_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux14249_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14250,s_00018],0);
constraint int_lt_reif(s_00009,aux14250,aux14251_BOOL);
constraint int_le_reif(s_00018, s_00009,aux14252_BOOL);
constraint array_bool_and([w_00006_00018_BOOL,aux14248_BOOL,aux14249_BOOL,aux14251_BOOL,aux14252_BOOL],aux14253_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux14254_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux14255_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14256,s_00019],0);
constraint int_lt_reif(s_00009,aux14256,aux14257_BOOL);
constraint int_le_reif(s_00019, s_00009,aux14258_BOOL);
constraint array_bool_and([w_00006_00019_BOOL,aux14254_BOOL,aux14255_BOOL,aux14257_BOOL,aux14258_BOOL],aux14259_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux14260_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux14261_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14262,s_00020],0);
constraint int_lt_reif(s_00009,aux14262,aux14263_BOOL);
constraint int_le_reif(s_00020, s_00009,aux14264_BOOL);
constraint array_bool_and([w_00006_00020_BOOL,aux14260_BOOL,aux14261_BOOL,aux14263_BOOL,aux14264_BOOL],aux14265_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux14266_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14267,s_00009],0);
constraint int_lt_reif(s_00009,aux14267,aux14268_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux14266_BOOL,aux14268_BOOL],aux14269_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux14157_INTEGER,aux14163_INTEGER,aux14169_INTEGER,aux14175_INTEGER,aux14181_INTEGER,aux14187_INTEGER,aux14193_INTEGER,aux14199_INTEGER,aux14205_INTEGER,aux14211_INTEGER,aux14217_INTEGER,aux14223_INTEGER,aux14229_INTEGER,aux14235_INTEGER,aux14241_INTEGER,aux14247_INTEGER,aux14253_INTEGER,aux14259_INTEGER,aux14265_INTEGER,aux14269_INTEGER,1],0,aux14270_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux14271_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux14272_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14273,s_00001],0);
constraint int_lt_reif(s_00016,aux14273,aux14274_BOOL);
constraint int_le_reif(s_00001, s_00016,aux14275_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux14271_BOOL,aux14272_BOOL,aux14274_BOOL,aux14275_BOOL],aux14276_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux14277_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux14278_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14279,s_00002],0);
constraint int_lt_reif(s_00016,aux14279,aux14280_BOOL);
constraint int_le_reif(s_00002, s_00016,aux14281_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux14277_BOOL,aux14278_BOOL,aux14280_BOOL,aux14281_BOOL],aux14282_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux14283_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux14284_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14285,s_00003],0);
constraint int_lt_reif(s_00016,aux14285,aux14286_BOOL);
constraint int_le_reif(s_00003, s_00016,aux14287_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux14283_BOOL,aux14284_BOOL,aux14286_BOOL,aux14287_BOOL],aux14288_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux14289_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux14290_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14291,s_00004],0);
constraint int_lt_reif(s_00016,aux14291,aux14292_BOOL);
constraint int_le_reif(s_00004, s_00016,aux14293_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux14289_BOOL,aux14290_BOOL,aux14292_BOOL,aux14293_BOOL],aux14294_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux14295_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux14296_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14297,s_00005],0);
constraint int_lt_reif(s_00016,aux14297,aux14298_BOOL);
constraint int_le_reif(s_00005, s_00016,aux14299_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux14295_BOOL,aux14296_BOOL,aux14298_BOOL,aux14299_BOOL],aux14300_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux14301_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux14302_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14303,s_00006],0);
constraint int_lt_reif(s_00016,aux14303,aux14304_BOOL);
constraint int_le_reif(s_00006, s_00016,aux14305_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux14301_BOOL,aux14302_BOOL,aux14304_BOOL,aux14305_BOOL],aux14306_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux14307_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux14308_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14309,s_00007],0);
constraint int_lt_reif(s_00016,aux14309,aux14310_BOOL);
constraint int_le_reif(s_00007, s_00016,aux14311_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux14307_BOOL,aux14308_BOOL,aux14310_BOOL,aux14311_BOOL],aux14312_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux14313_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux14314_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14315,s_00008],0);
constraint int_lt_reif(s_00016,aux14315,aux14316_BOOL);
constraint int_le_reif(s_00008, s_00016,aux14317_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux14313_BOOL,aux14314_BOOL,aux14316_BOOL,aux14317_BOOL],aux14318_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux14319_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux14320_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14321,s_00009],0);
constraint int_lt_reif(s_00016,aux14321,aux14322_BOOL);
constraint int_le_reif(s_00009, s_00016,aux14323_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux14319_BOOL,aux14320_BOOL,aux14322_BOOL,aux14323_BOOL],aux14324_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux14325_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux14326_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14327,s_00010],0);
constraint int_lt_reif(s_00016,aux14327,aux14328_BOOL);
constraint int_le_reif(s_00010, s_00016,aux14329_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux14325_BOOL,aux14326_BOOL,aux14328_BOOL,aux14329_BOOL],aux14330_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux14331_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux14332_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14333,s_00011],0);
constraint int_lt_reif(s_00016,aux14333,aux14334_BOOL);
constraint int_le_reif(s_00011, s_00016,aux14335_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux14331_BOOL,aux14332_BOOL,aux14334_BOOL,aux14335_BOOL],aux14336_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux14337_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux14338_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14339,s_00012],0);
constraint int_lt_reif(s_00016,aux14339,aux14340_BOOL);
constraint int_le_reif(s_00012, s_00016,aux14341_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux14337_BOOL,aux14338_BOOL,aux14340_BOOL,aux14341_BOOL],aux14342_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux14343_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux14344_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14345,s_00013],0);
constraint int_lt_reif(s_00016,aux14345,aux14346_BOOL);
constraint int_le_reif(s_00013, s_00016,aux14347_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux14343_BOOL,aux14344_BOOL,aux14346_BOOL,aux14347_BOOL],aux14348_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux14349_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux14350_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux14351,s_00014],0);
constraint int_lt_reif(s_00016,aux14351,aux14352_BOOL);
constraint int_le_reif(s_00014, s_00016,aux14353_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux14349_BOOL,aux14350_BOOL,aux14352_BOOL,aux14353_BOOL],aux14354_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux14355_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux14356_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14357,s_00015],0);
constraint int_lt_reif(s_00016,aux14357,aux14358_BOOL);
constraint int_le_reif(s_00015, s_00016,aux14359_BOOL);
constraint array_bool_and([w_00006_00015_BOOL,aux14355_BOOL,aux14356_BOOL,aux14358_BOOL,aux14359_BOOL],aux14360_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux14361_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux14362_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14363,s_00017],0);
constraint int_lt_reif(s_00016,aux14363,aux14364_BOOL);
constraint int_le_reif(s_00017, s_00016,aux14365_BOOL);
constraint array_bool_and([w_00006_00017_BOOL,aux14361_BOOL,aux14362_BOOL,aux14364_BOOL,aux14365_BOOL],aux14366_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux14367_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux14368_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14369,s_00018],0);
constraint int_lt_reif(s_00016,aux14369,aux14370_BOOL);
constraint int_le_reif(s_00018, s_00016,aux14371_BOOL);
constraint array_bool_and([w_00006_00018_BOOL,aux14367_BOOL,aux14368_BOOL,aux14370_BOOL,aux14371_BOOL],aux14372_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux14373_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux14374_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14375,s_00019],0);
constraint int_lt_reif(s_00016,aux14375,aux14376_BOOL);
constraint int_le_reif(s_00019, s_00016,aux14377_BOOL);
constraint array_bool_and([w_00006_00019_BOOL,aux14373_BOOL,aux14374_BOOL,aux14376_BOOL,aux14377_BOOL],aux14378_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux14379_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux14380_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14381,s_00020],0);
constraint int_lt_reif(s_00016,aux14381,aux14382_BOOL);
constraint int_le_reif(s_00020, s_00016,aux14383_BOOL);
constraint array_bool_and([w_00006_00020_BOOL,aux14379_BOOL,aux14380_BOOL,aux14382_BOOL,aux14383_BOOL],aux14384_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux14385_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14386,s_00016],0);
constraint int_lt_reif(s_00016,aux14386,aux14387_BOOL);
constraint array_bool_and([w_00006_00016_BOOL,aux14385_BOOL,aux14387_BOOL],aux14388_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux14276_INTEGER,aux14282_INTEGER,aux14288_INTEGER,aux14294_INTEGER,aux14300_INTEGER,aux14306_INTEGER,aux14312_INTEGER,aux14318_INTEGER,aux14324_INTEGER,aux14330_INTEGER,aux14336_INTEGER,aux14342_INTEGER,aux14348_INTEGER,aux14354_INTEGER,aux14360_INTEGER,aux14366_INTEGER,aux14372_INTEGER,aux14378_INTEGER,aux14384_INTEGER,aux14388_INTEGER,1],0,aux14389_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux14390_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux14391_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14392,s_00001],0);
constraint int_lt_reif(s_00017,aux14392,aux14393_BOOL);
constraint int_le_reif(s_00001, s_00017,aux14394_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux14390_BOOL,aux14391_BOOL,aux14393_BOOL,aux14394_BOOL],aux14395_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux14396_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux14397_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14398,s_00002],0);
constraint int_lt_reif(s_00017,aux14398,aux14399_BOOL);
constraint int_le_reif(s_00002, s_00017,aux14400_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux14396_BOOL,aux14397_BOOL,aux14399_BOOL,aux14400_BOOL],aux14401_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux14402_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux14403_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14404,s_00003],0);
constraint int_lt_reif(s_00017,aux14404,aux14405_BOOL);
constraint int_le_reif(s_00003, s_00017,aux14406_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux14402_BOOL,aux14403_BOOL,aux14405_BOOL,aux14406_BOOL],aux14407_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux14408_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux14409_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14410,s_00004],0);
constraint int_lt_reif(s_00017,aux14410,aux14411_BOOL);
constraint int_le_reif(s_00004, s_00017,aux14412_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux14408_BOOL,aux14409_BOOL,aux14411_BOOL,aux14412_BOOL],aux14413_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux14414_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux14415_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14416,s_00005],0);
constraint int_lt_reif(s_00017,aux14416,aux14417_BOOL);
constraint int_le_reif(s_00005, s_00017,aux14418_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux14414_BOOL,aux14415_BOOL,aux14417_BOOL,aux14418_BOOL],aux14419_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux14420_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux14421_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14422,s_00006],0);
constraint int_lt_reif(s_00017,aux14422,aux14423_BOOL);
constraint int_le_reif(s_00006, s_00017,aux14424_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux14420_BOOL,aux14421_BOOL,aux14423_BOOL,aux14424_BOOL],aux14425_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux14426_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux14427_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14428,s_00007],0);
constraint int_lt_reif(s_00017,aux14428,aux14429_BOOL);
constraint int_le_reif(s_00007, s_00017,aux14430_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux14426_BOOL,aux14427_BOOL,aux14429_BOOL,aux14430_BOOL],aux14431_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux14432_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux14433_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14434,s_00008],0);
constraint int_lt_reif(s_00017,aux14434,aux14435_BOOL);
constraint int_le_reif(s_00008, s_00017,aux14436_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux14432_BOOL,aux14433_BOOL,aux14435_BOOL,aux14436_BOOL],aux14437_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux14438_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux14439_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14440,s_00009],0);
constraint int_lt_reif(s_00017,aux14440,aux14441_BOOL);
constraint int_le_reif(s_00009, s_00017,aux14442_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux14438_BOOL,aux14439_BOOL,aux14441_BOOL,aux14442_BOOL],aux14443_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux14444_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux14445_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14446,s_00010],0);
constraint int_lt_reif(s_00017,aux14446,aux14447_BOOL);
constraint int_le_reif(s_00010, s_00017,aux14448_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux14444_BOOL,aux14445_BOOL,aux14447_BOOL,aux14448_BOOL],aux14449_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux14450_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux14451_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14452,s_00011],0);
constraint int_lt_reif(s_00017,aux14452,aux14453_BOOL);
constraint int_le_reif(s_00011, s_00017,aux14454_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux14450_BOOL,aux14451_BOOL,aux14453_BOOL,aux14454_BOOL],aux14455_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux14456_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux14457_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14458,s_00012],0);
constraint int_lt_reif(s_00017,aux14458,aux14459_BOOL);
constraint int_le_reif(s_00012, s_00017,aux14460_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux14456_BOOL,aux14457_BOOL,aux14459_BOOL,aux14460_BOOL],aux14461_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux14462_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux14463_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14464,s_00013],0);
constraint int_lt_reif(s_00017,aux14464,aux14465_BOOL);
constraint int_le_reif(s_00013, s_00017,aux14466_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux14462_BOOL,aux14463_BOOL,aux14465_BOOL,aux14466_BOOL],aux14467_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux14468_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux14469_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux14470,s_00014],0);
constraint int_lt_reif(s_00017,aux14470,aux14471_BOOL);
constraint int_le_reif(s_00014, s_00017,aux14472_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux14468_BOOL,aux14469_BOOL,aux14471_BOOL,aux14472_BOOL],aux14473_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux14474_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux14475_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14476,s_00015],0);
constraint int_lt_reif(s_00017,aux14476,aux14477_BOOL);
constraint int_le_reif(s_00015, s_00017,aux14478_BOOL);
constraint array_bool_and([w_00006_00015_BOOL,aux14474_BOOL,aux14475_BOOL,aux14477_BOOL,aux14478_BOOL],aux14479_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux14480_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux14481_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14482,s_00016],0);
constraint int_lt_reif(s_00017,aux14482,aux14483_BOOL);
constraint int_le_reif(s_00016, s_00017,aux14484_BOOL);
constraint array_bool_and([w_00006_00016_BOOL,aux14480_BOOL,aux14481_BOOL,aux14483_BOOL,aux14484_BOOL],aux14485_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux14486_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux14487_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14488,s_00018],0);
constraint int_lt_reif(s_00017,aux14488,aux14489_BOOL);
constraint int_le_reif(s_00018, s_00017,aux14490_BOOL);
constraint array_bool_and([w_00006_00018_BOOL,aux14486_BOOL,aux14487_BOOL,aux14489_BOOL,aux14490_BOOL],aux14491_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux14492_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux14493_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14494,s_00019],0);
constraint int_lt_reif(s_00017,aux14494,aux14495_BOOL);
constraint int_le_reif(s_00019, s_00017,aux14496_BOOL);
constraint array_bool_and([w_00006_00019_BOOL,aux14492_BOOL,aux14493_BOOL,aux14495_BOOL,aux14496_BOOL],aux14497_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux14498_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux14499_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14500,s_00020],0);
constraint int_lt_reif(s_00017,aux14500,aux14501_BOOL);
constraint int_le_reif(s_00020, s_00017,aux14502_BOOL);
constraint array_bool_and([w_00006_00020_BOOL,aux14498_BOOL,aux14499_BOOL,aux14501_BOOL,aux14502_BOOL],aux14503_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux14504_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14505,s_00017],0);
constraint int_lt_reif(s_00017,aux14505,aux14506_BOOL);
constraint array_bool_and([w_00006_00017_BOOL,aux14504_BOOL,aux14506_BOOL],aux14507_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux14395_INTEGER,aux14401_INTEGER,aux14407_INTEGER,aux14413_INTEGER,aux14419_INTEGER,aux14425_INTEGER,aux14431_INTEGER,aux14437_INTEGER,aux14443_INTEGER,aux14449_INTEGER,aux14455_INTEGER,aux14461_INTEGER,aux14467_INTEGER,aux14473_INTEGER,aux14479_INTEGER,aux14485_INTEGER,aux14491_INTEGER,aux14497_INTEGER,aux14503_INTEGER,aux14507_INTEGER,1],0,aux14508_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux14509_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux14510_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14511,s_00001],0);
constraint int_lt_reif(s_00020,aux14511,aux14512_BOOL);
constraint int_le_reif(s_00001, s_00020,aux14513_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux14509_BOOL,aux14510_BOOL,aux14512_BOOL,aux14513_BOOL],aux14514_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux14515_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux14516_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14517,s_00002],0);
constraint int_lt_reif(s_00020,aux14517,aux14518_BOOL);
constraint int_le_reif(s_00002, s_00020,aux14519_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux14515_BOOL,aux14516_BOOL,aux14518_BOOL,aux14519_BOOL],aux14520_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux14521_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux14522_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14523,s_00003],0);
constraint int_lt_reif(s_00020,aux14523,aux14524_BOOL);
constraint int_le_reif(s_00003, s_00020,aux14525_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux14521_BOOL,aux14522_BOOL,aux14524_BOOL,aux14525_BOOL],aux14526_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux14527_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux14528_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14529,s_00004],0);
constraint int_lt_reif(s_00020,aux14529,aux14530_BOOL);
constraint int_le_reif(s_00004, s_00020,aux14531_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux14527_BOOL,aux14528_BOOL,aux14530_BOOL,aux14531_BOOL],aux14532_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux14533_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux14534_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14535,s_00005],0);
constraint int_lt_reif(s_00020,aux14535,aux14536_BOOL);
constraint int_le_reif(s_00005, s_00020,aux14537_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux14533_BOOL,aux14534_BOOL,aux14536_BOOL,aux14537_BOOL],aux14538_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux14539_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux14540_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14541,s_00006],0);
constraint int_lt_reif(s_00020,aux14541,aux14542_BOOL);
constraint int_le_reif(s_00006, s_00020,aux14543_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux14539_BOOL,aux14540_BOOL,aux14542_BOOL,aux14543_BOOL],aux14544_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux14545_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux14546_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14547,s_00007],0);
constraint int_lt_reif(s_00020,aux14547,aux14548_BOOL);
constraint int_le_reif(s_00007, s_00020,aux14549_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux14545_BOOL,aux14546_BOOL,aux14548_BOOL,aux14549_BOOL],aux14550_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux14551_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux14552_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14553,s_00008],0);
constraint int_lt_reif(s_00020,aux14553,aux14554_BOOL);
constraint int_le_reif(s_00008, s_00020,aux14555_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux14551_BOOL,aux14552_BOOL,aux14554_BOOL,aux14555_BOOL],aux14556_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux14557_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux14558_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14559,s_00009],0);
constraint int_lt_reif(s_00020,aux14559,aux14560_BOOL);
constraint int_le_reif(s_00009, s_00020,aux14561_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux14557_BOOL,aux14558_BOOL,aux14560_BOOL,aux14561_BOOL],aux14562_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux14563_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux14564_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14565,s_00010],0);
constraint int_lt_reif(s_00020,aux14565,aux14566_BOOL);
constraint int_le_reif(s_00010, s_00020,aux14567_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux14563_BOOL,aux14564_BOOL,aux14566_BOOL,aux14567_BOOL],aux14568_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux14569_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux14570_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14571,s_00011],0);
constraint int_lt_reif(s_00020,aux14571,aux14572_BOOL);
constraint int_le_reif(s_00011, s_00020,aux14573_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux14569_BOOL,aux14570_BOOL,aux14572_BOOL,aux14573_BOOL],aux14574_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux14575_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux14576_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14577,s_00012],0);
constraint int_lt_reif(s_00020,aux14577,aux14578_BOOL);
constraint int_le_reif(s_00012, s_00020,aux14579_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux14575_BOOL,aux14576_BOOL,aux14578_BOOL,aux14579_BOOL],aux14580_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux14581_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux14582_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14583,s_00013],0);
constraint int_lt_reif(s_00020,aux14583,aux14584_BOOL);
constraint int_le_reif(s_00013, s_00020,aux14585_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux14581_BOOL,aux14582_BOOL,aux14584_BOOL,aux14585_BOOL],aux14586_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux14587_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux14588_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux14589,s_00014],0);
constraint int_lt_reif(s_00020,aux14589,aux14590_BOOL);
constraint int_le_reif(s_00014, s_00020,aux14591_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux14587_BOOL,aux14588_BOOL,aux14590_BOOL,aux14591_BOOL],aux14592_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux14593_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux14594_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14595,s_00015],0);
constraint int_lt_reif(s_00020,aux14595,aux14596_BOOL);
constraint int_le_reif(s_00015, s_00020,aux14597_BOOL);
constraint array_bool_and([w_00006_00015_BOOL,aux14593_BOOL,aux14594_BOOL,aux14596_BOOL,aux14597_BOOL],aux14598_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux14599_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux14600_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14601,s_00016],0);
constraint int_lt_reif(s_00020,aux14601,aux14602_BOOL);
constraint int_le_reif(s_00016, s_00020,aux14603_BOOL);
constraint array_bool_and([w_00006_00016_BOOL,aux14599_BOOL,aux14600_BOOL,aux14602_BOOL,aux14603_BOOL],aux14604_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux14605_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux14606_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14607,s_00017],0);
constraint int_lt_reif(s_00020,aux14607,aux14608_BOOL);
constraint int_le_reif(s_00017, s_00020,aux14609_BOOL);
constraint array_bool_and([w_00006_00017_BOOL,aux14605_BOOL,aux14606_BOOL,aux14608_BOOL,aux14609_BOOL],aux14610_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux14611_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux14612_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14613,s_00018],0);
constraint int_lt_reif(s_00020,aux14613,aux14614_BOOL);
constraint int_le_reif(s_00018, s_00020,aux14615_BOOL);
constraint array_bool_and([w_00006_00018_BOOL,aux14611_BOOL,aux14612_BOOL,aux14614_BOOL,aux14615_BOOL],aux14616_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux14617_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux14618_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14619,s_00019],0);
constraint int_lt_reif(s_00020,aux14619,aux14620_BOOL);
constraint int_le_reif(s_00019, s_00020,aux14621_BOOL);
constraint array_bool_and([w_00006_00019_BOOL,aux14617_BOOL,aux14618_BOOL,aux14620_BOOL,aux14621_BOOL],aux14622_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux14623_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14624,s_00020],0);
constraint int_lt_reif(s_00020,aux14624,aux14625_BOOL);
constraint array_bool_and([w_00006_00020_BOOL,aux14623_BOOL,aux14625_BOOL],aux14626_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux14514_INTEGER,aux14520_INTEGER,aux14526_INTEGER,aux14532_INTEGER,aux14538_INTEGER,aux14544_INTEGER,aux14550_INTEGER,aux14556_INTEGER,aux14562_INTEGER,aux14568_INTEGER,aux14574_INTEGER,aux14580_INTEGER,aux14586_INTEGER,aux14592_INTEGER,aux14598_INTEGER,aux14604_INTEGER,aux14610_INTEGER,aux14616_INTEGER,aux14622_INTEGER,aux14626_INTEGER,1],0,aux14627_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux14628_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux14629_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14630,s_00001],0);
constraint int_lt_reif(s_00014,aux14630,aux14631_BOOL);
constraint int_le_reif(s_00001, s_00014,aux14632_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux14628_BOOL,aux14629_BOOL,aux14631_BOOL,aux14632_BOOL],aux14633_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux14634_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux14635_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14636,s_00002],0);
constraint int_lt_reif(s_00014,aux14636,aux14637_BOOL);
constraint int_le_reif(s_00002, s_00014,aux14638_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux14634_BOOL,aux14635_BOOL,aux14637_BOOL,aux14638_BOOL],aux14639_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux14640_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux14641_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14642,s_00003],0);
constraint int_lt_reif(s_00014,aux14642,aux14643_BOOL);
constraint int_le_reif(s_00003, s_00014,aux14644_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux14640_BOOL,aux14641_BOOL,aux14643_BOOL,aux14644_BOOL],aux14645_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux14646_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux14647_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14648,s_00004],0);
constraint int_lt_reif(s_00014,aux14648,aux14649_BOOL);
constraint int_le_reif(s_00004, s_00014,aux14650_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux14646_BOOL,aux14647_BOOL,aux14649_BOOL,aux14650_BOOL],aux14651_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux14652_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux14653_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14654,s_00005],0);
constraint int_lt_reif(s_00014,aux14654,aux14655_BOOL);
constraint int_le_reif(s_00005, s_00014,aux14656_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux14652_BOOL,aux14653_BOOL,aux14655_BOOL,aux14656_BOOL],aux14657_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux14658_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux14659_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14660,s_00006],0);
constraint int_lt_reif(s_00014,aux14660,aux14661_BOOL);
constraint int_le_reif(s_00006, s_00014,aux14662_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux14658_BOOL,aux14659_BOOL,aux14661_BOOL,aux14662_BOOL],aux14663_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux14664_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux14665_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14666,s_00007],0);
constraint int_lt_reif(s_00014,aux14666,aux14667_BOOL);
constraint int_le_reif(s_00007, s_00014,aux14668_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux14664_BOOL,aux14665_BOOL,aux14667_BOOL,aux14668_BOOL],aux14669_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux14670_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux14671_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14672,s_00008],0);
constraint int_lt_reif(s_00014,aux14672,aux14673_BOOL);
constraint int_le_reif(s_00008, s_00014,aux14674_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux14670_BOOL,aux14671_BOOL,aux14673_BOOL,aux14674_BOOL],aux14675_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux14676_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux14677_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14678,s_00009],0);
constraint int_lt_reif(s_00014,aux14678,aux14679_BOOL);
constraint int_le_reif(s_00009, s_00014,aux14680_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux14676_BOOL,aux14677_BOOL,aux14679_BOOL,aux14680_BOOL],aux14681_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux14682_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux14683_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14684,s_00010],0);
constraint int_lt_reif(s_00014,aux14684,aux14685_BOOL);
constraint int_le_reif(s_00010, s_00014,aux14686_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux14682_BOOL,aux14683_BOOL,aux14685_BOOL,aux14686_BOOL],aux14687_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux14688_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux14689_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14690,s_00011],0);
constraint int_lt_reif(s_00014,aux14690,aux14691_BOOL);
constraint int_le_reif(s_00011, s_00014,aux14692_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux14688_BOOL,aux14689_BOOL,aux14691_BOOL,aux14692_BOOL],aux14693_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux14694_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux14695_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14696,s_00012],0);
constraint int_lt_reif(s_00014,aux14696,aux14697_BOOL);
constraint int_le_reif(s_00012, s_00014,aux14698_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux14694_BOOL,aux14695_BOOL,aux14697_BOOL,aux14698_BOOL],aux14699_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux14700_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux14701_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14702,s_00013],0);
constraint int_lt_reif(s_00014,aux14702,aux14703_BOOL);
constraint int_le_reif(s_00013, s_00014,aux14704_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux14700_BOOL,aux14701_BOOL,aux14703_BOOL,aux14704_BOOL],aux14705_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux14706_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux14707_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14708,s_00015],0);
constraint int_lt_reif(s_00014,aux14708,aux14709_BOOL);
constraint int_le_reif(s_00015, s_00014,aux14710_BOOL);
constraint array_bool_and([w_00006_00015_BOOL,aux14706_BOOL,aux14707_BOOL,aux14709_BOOL,aux14710_BOOL],aux14711_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux14712_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux14713_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14714,s_00016],0);
constraint int_lt_reif(s_00014,aux14714,aux14715_BOOL);
constraint int_le_reif(s_00016, s_00014,aux14716_BOOL);
constraint array_bool_and([w_00006_00016_BOOL,aux14712_BOOL,aux14713_BOOL,aux14715_BOOL,aux14716_BOOL],aux14717_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux14718_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux14719_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14720,s_00017],0);
constraint int_lt_reif(s_00014,aux14720,aux14721_BOOL);
constraint int_le_reif(s_00017, s_00014,aux14722_BOOL);
constraint array_bool_and([w_00006_00017_BOOL,aux14718_BOOL,aux14719_BOOL,aux14721_BOOL,aux14722_BOOL],aux14723_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux14724_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux14725_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14726,s_00018],0);
constraint int_lt_reif(s_00014,aux14726,aux14727_BOOL);
constraint int_le_reif(s_00018, s_00014,aux14728_BOOL);
constraint array_bool_and([w_00006_00018_BOOL,aux14724_BOOL,aux14725_BOOL,aux14727_BOOL,aux14728_BOOL],aux14729_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux14730_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux14731_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14732,s_00019],0);
constraint int_lt_reif(s_00014,aux14732,aux14733_BOOL);
constraint int_le_reif(s_00019, s_00014,aux14734_BOOL);
constraint array_bool_and([w_00006_00019_BOOL,aux14730_BOOL,aux14731_BOOL,aux14733_BOOL,aux14734_BOOL],aux14735_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux14736_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux14737_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14738,s_00020],0);
constraint int_lt_reif(s_00014,aux14738,aux14739_BOOL);
constraint int_le_reif(s_00020, s_00014,aux14740_BOOL);
constraint array_bool_and([w_00006_00020_BOOL,aux14736_BOOL,aux14737_BOOL,aux14739_BOOL,aux14740_BOOL],aux14741_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux14742_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux14743,s_00014],0);
constraint int_lt_reif(s_00014,aux14743,aux14744_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux14742_BOOL,aux14744_BOOL],aux14745_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux14633_INTEGER,aux14639_INTEGER,aux14645_INTEGER,aux14651_INTEGER,aux14657_INTEGER,aux14663_INTEGER,aux14669_INTEGER,aux14675_INTEGER,aux14681_INTEGER,aux14687_INTEGER,aux14693_INTEGER,aux14699_INTEGER,aux14705_INTEGER,aux14711_INTEGER,aux14717_INTEGER,aux14723_INTEGER,aux14729_INTEGER,aux14735_INTEGER,aux14741_INTEGER,aux14745_INTEGER,1],0,aux14746_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00001_INTEGER,aux14747_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux14748_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14749,s_00001],0);
constraint int_lt_reif(s_00013,aux14749,aux14750_BOOL);
constraint int_le_reif(s_00001, s_00013,aux14751_BOOL);
constraint array_bool_and([w_00006_00001_BOOL,aux14747_BOOL,aux14748_BOOL,aux14750_BOOL,aux14751_BOOL],aux14752_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00002_INTEGER,aux14753_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux14754_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14755,s_00002],0);
constraint int_lt_reif(s_00013,aux14755,aux14756_BOOL);
constraint int_le_reif(s_00002, s_00013,aux14757_BOOL);
constraint array_bool_and([w_00006_00002_BOOL,aux14753_BOOL,aux14754_BOOL,aux14756_BOOL,aux14757_BOOL],aux14758_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00003_INTEGER,aux14759_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux14760_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14761,s_00003],0);
constraint int_lt_reif(s_00013,aux14761,aux14762_BOOL);
constraint int_le_reif(s_00003, s_00013,aux14763_BOOL);
constraint array_bool_and([w_00006_00003_BOOL,aux14759_BOOL,aux14760_BOOL,aux14762_BOOL,aux14763_BOOL],aux14764_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00004_INTEGER,aux14765_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux14766_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14767,s_00004],0);
constraint int_lt_reif(s_00013,aux14767,aux14768_BOOL);
constraint int_le_reif(s_00004, s_00013,aux14769_BOOL);
constraint array_bool_and([w_00006_00004_BOOL,aux14765_BOOL,aux14766_BOOL,aux14768_BOOL,aux14769_BOOL],aux14770_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00005_INTEGER,aux14771_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux14772_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14773,s_00005],0);
constraint int_lt_reif(s_00013,aux14773,aux14774_BOOL);
constraint int_le_reif(s_00005, s_00013,aux14775_BOOL);
constraint array_bool_and([w_00006_00005_BOOL,aux14771_BOOL,aux14772_BOOL,aux14774_BOOL,aux14775_BOOL],aux14776_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00006_INTEGER,aux14777_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux14778_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14779,s_00006],0);
constraint int_lt_reif(s_00013,aux14779,aux14780_BOOL);
constraint int_le_reif(s_00006, s_00013,aux14781_BOOL);
constraint array_bool_and([w_00006_00006_BOOL,aux14777_BOOL,aux14778_BOOL,aux14780_BOOL,aux14781_BOOL],aux14782_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00007_INTEGER,aux14783_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux14784_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14785,s_00007],0);
constraint int_lt_reif(s_00013,aux14785,aux14786_BOOL);
constraint int_le_reif(s_00007, s_00013,aux14787_BOOL);
constraint array_bool_and([w_00006_00007_BOOL,aux14783_BOOL,aux14784_BOOL,aux14786_BOOL,aux14787_BOOL],aux14788_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00008_INTEGER,aux14789_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux14790_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14791,s_00008],0);
constraint int_lt_reif(s_00013,aux14791,aux14792_BOOL);
constraint int_le_reif(s_00008, s_00013,aux14793_BOOL);
constraint array_bool_and([w_00006_00008_BOOL,aux14789_BOOL,aux14790_BOOL,aux14792_BOOL,aux14793_BOOL],aux14794_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00009_INTEGER,aux14795_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux14796_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14797,s_00009],0);
constraint int_lt_reif(s_00013,aux14797,aux14798_BOOL);
constraint int_le_reif(s_00009, s_00013,aux14799_BOOL);
constraint array_bool_and([w_00006_00009_BOOL,aux14795_BOOL,aux14796_BOOL,aux14798_BOOL,aux14799_BOOL],aux14800_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00010_INTEGER,aux14801_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux14802_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14803,s_00010],0);
constraint int_lt_reif(s_00013,aux14803,aux14804_BOOL);
constraint int_le_reif(s_00010, s_00013,aux14805_BOOL);
constraint array_bool_and([w_00006_00010_BOOL,aux14801_BOOL,aux14802_BOOL,aux14804_BOOL,aux14805_BOOL],aux14806_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00011_INTEGER,aux14807_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux14808_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14809,s_00011],0);
constraint int_lt_reif(s_00013,aux14809,aux14810_BOOL);
constraint int_le_reif(s_00011, s_00013,aux14811_BOOL);
constraint array_bool_and([w_00006_00011_BOOL,aux14807_BOOL,aux14808_BOOL,aux14810_BOOL,aux14811_BOOL],aux14812_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00012_INTEGER,aux14813_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux14814_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14815,s_00012],0);
constraint int_lt_reif(s_00013,aux14815,aux14816_BOOL);
constraint int_le_reif(s_00012, s_00013,aux14817_BOOL);
constraint array_bool_and([w_00006_00012_BOOL,aux14813_BOOL,aux14814_BOOL,aux14816_BOOL,aux14817_BOOL],aux14818_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux14819_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00014_INTEGER,aux14820_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux14821,s_00014],0);
constraint int_lt_reif(s_00013,aux14821,aux14822_BOOL);
constraint int_le_reif(s_00014, s_00013,aux14823_BOOL);
constraint array_bool_and([w_00006_00014_BOOL,aux14819_BOOL,aux14820_BOOL,aux14822_BOOL,aux14823_BOOL],aux14824_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux14825_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00015_INTEGER,aux14826_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14827,s_00015],0);
constraint int_lt_reif(s_00013,aux14827,aux14828_BOOL);
constraint int_le_reif(s_00015, s_00013,aux14829_BOOL);
constraint array_bool_and([w_00006_00015_BOOL,aux14825_BOOL,aux14826_BOOL,aux14828_BOOL,aux14829_BOOL],aux14830_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux14831_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00016_INTEGER,aux14832_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14833,s_00016],0);
constraint int_lt_reif(s_00013,aux14833,aux14834_BOOL);
constraint int_le_reif(s_00016, s_00013,aux14835_BOOL);
constraint array_bool_and([w_00006_00016_BOOL,aux14831_BOOL,aux14832_BOOL,aux14834_BOOL,aux14835_BOOL],aux14836_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux14837_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00017_INTEGER,aux14838_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14839,s_00017],0);
constraint int_lt_reif(s_00013,aux14839,aux14840_BOOL);
constraint int_le_reif(s_00017, s_00013,aux14841_BOOL);
constraint array_bool_and([w_00006_00017_BOOL,aux14837_BOOL,aux14838_BOOL,aux14840_BOOL,aux14841_BOOL],aux14842_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux14843_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00018_INTEGER,aux14844_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14845,s_00018],0);
constraint int_lt_reif(s_00013,aux14845,aux14846_BOOL);
constraint int_le_reif(s_00018, s_00013,aux14847_BOOL);
constraint array_bool_and([w_00006_00018_BOOL,aux14843_BOOL,aux14844_BOOL,aux14846_BOOL,aux14847_BOOL],aux14848_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux14849_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00019_INTEGER,aux14850_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14851,s_00019],0);
constraint int_lt_reif(s_00013,aux14851,aux14852_BOOL);
constraint int_le_reif(s_00019, s_00013,aux14853_BOOL);
constraint array_bool_and([w_00006_00019_BOOL,aux14849_BOOL,aux14850_BOOL,aux14852_BOOL,aux14853_BOOL],aux14854_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux14855_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00020_INTEGER,aux14856_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14857,s_00020],0);
constraint int_lt_reif(s_00013,aux14857,aux14858_BOOL);
constraint int_le_reif(s_00020, s_00013,aux14859_BOOL);
constraint array_bool_and([w_00006_00020_BOOL,aux14855_BOOL,aux14856_BOOL,aux14858_BOOL,aux14859_BOOL],aux14860_BOOL);
constraint int_eq_reif(1,TWorkers_00006_00013_INTEGER,aux14861_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14862,s_00013],0);
constraint int_lt_reif(s_00013,aux14862,aux14863_BOOL);
constraint array_bool_and([w_00006_00013_BOOL,aux14861_BOOL,aux14863_BOOL],aux14864_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux14752_INTEGER,aux14758_INTEGER,aux14764_INTEGER,aux14770_INTEGER,aux14776_INTEGER,aux14782_INTEGER,aux14788_INTEGER,aux14794_INTEGER,aux14800_INTEGER,aux14806_INTEGER,aux14812_INTEGER,aux14818_INTEGER,aux14824_INTEGER,aux14830_INTEGER,aux14836_INTEGER,aux14842_INTEGER,aux14848_INTEGER,aux14854_INTEGER,aux14860_INTEGER,aux14864_INTEGER,1],0,aux14865_BOOL);
constraint array_bool_and([aux12604_BOOL,aux12723_BOOL,aux12842_BOOL,aux12961_BOOL,aux13080_BOOL,aux13199_BOOL,aux13318_BOOL,aux13437_BOOL,aux13556_BOOL,aux13675_BOOL,aux13794_BOOL,aux13913_BOOL,aux14032_BOOL,aux14151_BOOL,aux14270_BOOL,aux14389_BOOL,aux14508_BOOL,aux14627_BOOL,aux14746_BOOL,aux14865_BOOL],aux14866_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[TWorkers_00006_00001_INTEGER,TWorkers_00006_00002_INTEGER,TWorkers_00006_00003_INTEGER,TWorkers_00006_00004_INTEGER,TWorkers_00006_00005_INTEGER,TWorkers_00006_00006_INTEGER,TWorkers_00006_00007_INTEGER,TWorkers_00006_00008_INTEGER,TWorkers_00006_00009_INTEGER,TWorkers_00006_00010_INTEGER,TWorkers_00006_00011_INTEGER,TWorkers_00006_00012_INTEGER,TWorkers_00006_00013_INTEGER,TWorkers_00006_00014_INTEGER,TWorkers_00006_00015_INTEGER,TWorkers_00006_00016_INTEGER,TWorkers_00006_00017_INTEGER,TWorkers_00006_00018_INTEGER,TWorkers_00006_00019_INTEGER,TWorkers_00006_00020_INTEGER,1],0,aux14867_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux14868_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux14869_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14870,s_00001],0);
constraint int_lt_reif(s_00011,aux14870,aux14871_BOOL);
constraint int_le_reif(s_00001, s_00011,aux14872_BOOL);
constraint array_bool_and([w_00007_00001_BOOL,aux14868_BOOL,aux14869_BOOL,aux14871_BOOL,aux14872_BOOL],aux14873_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux14874_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux14875_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14876,s_00002],0);
constraint int_lt_reif(s_00011,aux14876,aux14877_BOOL);
constraint int_le_reif(s_00002, s_00011,aux14878_BOOL);
constraint array_bool_and([w_00007_00002_BOOL,aux14874_BOOL,aux14875_BOOL,aux14877_BOOL,aux14878_BOOL],aux14879_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux14880_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux14881_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14882,s_00003],0);
constraint int_lt_reif(s_00011,aux14882,aux14883_BOOL);
constraint int_le_reif(s_00003, s_00011,aux14884_BOOL);
constraint array_bool_and([w_00007_00003_BOOL,aux14880_BOOL,aux14881_BOOL,aux14883_BOOL,aux14884_BOOL],aux14885_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux14886_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux14887_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14888,s_00004],0);
constraint int_lt_reif(s_00011,aux14888,aux14889_BOOL);
constraint int_le_reif(s_00004, s_00011,aux14890_BOOL);
constraint array_bool_and([w_00007_00004_BOOL,aux14886_BOOL,aux14887_BOOL,aux14889_BOOL,aux14890_BOOL],aux14891_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux14892_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux14893_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14894,s_00005],0);
constraint int_lt_reif(s_00011,aux14894,aux14895_BOOL);
constraint int_le_reif(s_00005, s_00011,aux14896_BOOL);
constraint array_bool_and([w_00007_00005_BOOL,aux14892_BOOL,aux14893_BOOL,aux14895_BOOL,aux14896_BOOL],aux14897_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux14898_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux14899_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14900,s_00006],0);
constraint int_lt_reif(s_00011,aux14900,aux14901_BOOL);
constraint int_le_reif(s_00006, s_00011,aux14902_BOOL);
constraint array_bool_and([w_00007_00006_BOOL,aux14898_BOOL,aux14899_BOOL,aux14901_BOOL,aux14902_BOOL],aux14903_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux14904_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux14905_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14906,s_00007],0);
constraint int_lt_reif(s_00011,aux14906,aux14907_BOOL);
constraint int_le_reif(s_00007, s_00011,aux14908_BOOL);
constraint array_bool_and([w_00007_00007_BOOL,aux14904_BOOL,aux14905_BOOL,aux14907_BOOL,aux14908_BOOL],aux14909_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux14910_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux14911_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14912,s_00008],0);
constraint int_lt_reif(s_00011,aux14912,aux14913_BOOL);
constraint int_le_reif(s_00008, s_00011,aux14914_BOOL);
constraint array_bool_and([w_00007_00008_BOOL,aux14910_BOOL,aux14911_BOOL,aux14913_BOOL,aux14914_BOOL],aux14915_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux14916_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux14917_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14918,s_00009],0);
constraint int_lt_reif(s_00011,aux14918,aux14919_BOOL);
constraint int_le_reif(s_00009, s_00011,aux14920_BOOL);
constraint array_bool_and([w_00007_00009_BOOL,aux14916_BOOL,aux14917_BOOL,aux14919_BOOL,aux14920_BOOL],aux14921_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux14922_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux14923_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14924,s_00010],0);
constraint int_lt_reif(s_00011,aux14924,aux14925_BOOL);
constraint int_le_reif(s_00010, s_00011,aux14926_BOOL);
constraint array_bool_and([w_00007_00010_BOOL,aux14922_BOOL,aux14923_BOOL,aux14925_BOOL,aux14926_BOOL],aux14927_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux14928_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux14929_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14930,s_00012],0);
constraint int_lt_reif(s_00011,aux14930,aux14931_BOOL);
constraint int_le_reif(s_00012, s_00011,aux14932_BOOL);
constraint array_bool_and([w_00007_00012_BOOL,aux14928_BOOL,aux14929_BOOL,aux14931_BOOL,aux14932_BOOL],aux14933_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux14934_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux14935_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14936,s_00013],0);
constraint int_lt_reif(s_00011,aux14936,aux14937_BOOL);
constraint int_le_reif(s_00013, s_00011,aux14938_BOOL);
constraint array_bool_and([w_00007_00013_BOOL,aux14934_BOOL,aux14935_BOOL,aux14937_BOOL,aux14938_BOOL],aux14939_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux14940_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux14941_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux14942,s_00014],0);
constraint int_lt_reif(s_00011,aux14942,aux14943_BOOL);
constraint int_le_reif(s_00014, s_00011,aux14944_BOOL);
constraint array_bool_and([w_00007_00014_BOOL,aux14940_BOOL,aux14941_BOOL,aux14943_BOOL,aux14944_BOOL],aux14945_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux14946_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux14947_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14948,s_00015],0);
constraint int_lt_reif(s_00011,aux14948,aux14949_BOOL);
constraint int_le_reif(s_00015, s_00011,aux14950_BOOL);
constraint array_bool_and([w_00007_00015_BOOL,aux14946_BOOL,aux14947_BOOL,aux14949_BOOL,aux14950_BOOL],aux14951_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux14952_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux14953_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14954,s_00016],0);
constraint int_lt_reif(s_00011,aux14954,aux14955_BOOL);
constraint int_le_reif(s_00016, s_00011,aux14956_BOOL);
constraint array_bool_and([w_00007_00016_BOOL,aux14952_BOOL,aux14953_BOOL,aux14955_BOOL,aux14956_BOOL],aux14957_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux14958_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux14959_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14960,s_00017],0);
constraint int_lt_reif(s_00011,aux14960,aux14961_BOOL);
constraint int_le_reif(s_00017, s_00011,aux14962_BOOL);
constraint array_bool_and([w_00007_00017_BOOL,aux14958_BOOL,aux14959_BOOL,aux14961_BOOL,aux14962_BOOL],aux14963_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux14964_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux14965_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14966,s_00018],0);
constraint int_lt_reif(s_00011,aux14966,aux14967_BOOL);
constraint int_le_reif(s_00018, s_00011,aux14968_BOOL);
constraint array_bool_and([w_00007_00018_BOOL,aux14964_BOOL,aux14965_BOOL,aux14967_BOOL,aux14968_BOOL],aux14969_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux14970_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux14971_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14972,s_00019],0);
constraint int_lt_reif(s_00011,aux14972,aux14973_BOOL);
constraint int_le_reif(s_00019, s_00011,aux14974_BOOL);
constraint array_bool_and([w_00007_00019_BOOL,aux14970_BOOL,aux14971_BOOL,aux14973_BOOL,aux14974_BOOL],aux14975_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux14976_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux14977_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux14978,s_00020],0);
constraint int_lt_reif(s_00011,aux14978,aux14979_BOOL);
constraint int_le_reif(s_00020, s_00011,aux14980_BOOL);
constraint array_bool_and([w_00007_00020_BOOL,aux14976_BOOL,aux14977_BOOL,aux14979_BOOL,aux14980_BOOL],aux14981_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux14982_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14983,s_00011],0);
constraint int_lt_reif(s_00011,aux14983,aux14984_BOOL);
constraint array_bool_and([w_00007_00011_BOOL,aux14982_BOOL,aux14984_BOOL],aux14985_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux14873_INTEGER,aux14879_INTEGER,aux14885_INTEGER,aux14891_INTEGER,aux14897_INTEGER,aux14903_INTEGER,aux14909_INTEGER,aux14915_INTEGER,aux14921_INTEGER,aux14927_INTEGER,aux14933_INTEGER,aux14939_INTEGER,aux14945_INTEGER,aux14951_INTEGER,aux14957_INTEGER,aux14963_INTEGER,aux14969_INTEGER,aux14975_INTEGER,aux14981_INTEGER,aux14985_INTEGER,1],0,aux14986_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux14987_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux14988_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux14989,s_00001],0);
constraint int_lt_reif(s_00015,aux14989,aux14990_BOOL);
constraint int_le_reif(s_00001, s_00015,aux14991_BOOL);
constraint array_bool_and([w_00007_00001_BOOL,aux14987_BOOL,aux14988_BOOL,aux14990_BOOL,aux14991_BOOL],aux14992_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux14993_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux14994_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux14995,s_00002],0);
constraint int_lt_reif(s_00015,aux14995,aux14996_BOOL);
constraint int_le_reif(s_00002, s_00015,aux14997_BOOL);
constraint array_bool_and([w_00007_00002_BOOL,aux14993_BOOL,aux14994_BOOL,aux14996_BOOL,aux14997_BOOL],aux14998_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux14999_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux15000_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15001,s_00003],0);
constraint int_lt_reif(s_00015,aux15001,aux15002_BOOL);
constraint int_le_reif(s_00003, s_00015,aux15003_BOOL);
constraint array_bool_and([w_00007_00003_BOOL,aux14999_BOOL,aux15000_BOOL,aux15002_BOOL,aux15003_BOOL],aux15004_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux15005_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux15006_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15007,s_00004],0);
constraint int_lt_reif(s_00015,aux15007,aux15008_BOOL);
constraint int_le_reif(s_00004, s_00015,aux15009_BOOL);
constraint array_bool_and([w_00007_00004_BOOL,aux15005_BOOL,aux15006_BOOL,aux15008_BOOL,aux15009_BOOL],aux15010_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15011_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux15012_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15013,s_00005],0);
constraint int_lt_reif(s_00015,aux15013,aux15014_BOOL);
constraint int_le_reif(s_00005, s_00015,aux15015_BOOL);
constraint array_bool_and([w_00007_00005_BOOL,aux15011_BOOL,aux15012_BOOL,aux15014_BOOL,aux15015_BOOL],aux15016_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux15017_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux15018_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15019,s_00006],0);
constraint int_lt_reif(s_00015,aux15019,aux15020_BOOL);
constraint int_le_reif(s_00006, s_00015,aux15021_BOOL);
constraint array_bool_and([w_00007_00006_BOOL,aux15017_BOOL,aux15018_BOOL,aux15020_BOOL,aux15021_BOOL],aux15022_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15023_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux15024_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15025,s_00007],0);
constraint int_lt_reif(s_00015,aux15025,aux15026_BOOL);
constraint int_le_reif(s_00007, s_00015,aux15027_BOOL);
constraint array_bool_and([w_00007_00007_BOOL,aux15023_BOOL,aux15024_BOOL,aux15026_BOOL,aux15027_BOOL],aux15028_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux15029_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux15030_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15031,s_00008],0);
constraint int_lt_reif(s_00015,aux15031,aux15032_BOOL);
constraint int_le_reif(s_00008, s_00015,aux15033_BOOL);
constraint array_bool_and([w_00007_00008_BOOL,aux15029_BOOL,aux15030_BOOL,aux15032_BOOL,aux15033_BOOL],aux15034_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux15035_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux15036_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15037,s_00009],0);
constraint int_lt_reif(s_00015,aux15037,aux15038_BOOL);
constraint int_le_reif(s_00009, s_00015,aux15039_BOOL);
constraint array_bool_and([w_00007_00009_BOOL,aux15035_BOOL,aux15036_BOOL,aux15038_BOOL,aux15039_BOOL],aux15040_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux15041_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux15042_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15043,s_00010],0);
constraint int_lt_reif(s_00015,aux15043,aux15044_BOOL);
constraint int_le_reif(s_00010, s_00015,aux15045_BOOL);
constraint array_bool_and([w_00007_00010_BOOL,aux15041_BOOL,aux15042_BOOL,aux15044_BOOL,aux15045_BOOL],aux15046_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux15047_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux15048_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15049,s_00011],0);
constraint int_lt_reif(s_00015,aux15049,aux15050_BOOL);
constraint int_le_reif(s_00011, s_00015,aux15051_BOOL);
constraint array_bool_and([w_00007_00011_BOOL,aux15047_BOOL,aux15048_BOOL,aux15050_BOOL,aux15051_BOOL],aux15052_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux15053_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux15054_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15055,s_00012],0);
constraint int_lt_reif(s_00015,aux15055,aux15056_BOOL);
constraint int_le_reif(s_00012, s_00015,aux15057_BOOL);
constraint array_bool_and([w_00007_00012_BOOL,aux15053_BOOL,aux15054_BOOL,aux15056_BOOL,aux15057_BOOL],aux15058_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux15059_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux15060_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15061,s_00013],0);
constraint int_lt_reif(s_00015,aux15061,aux15062_BOOL);
constraint int_le_reif(s_00013, s_00015,aux15063_BOOL);
constraint array_bool_and([w_00007_00013_BOOL,aux15059_BOOL,aux15060_BOOL,aux15062_BOOL,aux15063_BOOL],aux15064_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux15065_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux15066_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux15067,s_00014],0);
constraint int_lt_reif(s_00015,aux15067,aux15068_BOOL);
constraint int_le_reif(s_00014, s_00015,aux15069_BOOL);
constraint array_bool_and([w_00007_00014_BOOL,aux15065_BOOL,aux15066_BOOL,aux15068_BOOL,aux15069_BOOL],aux15070_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux15071_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux15072_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15073,s_00016],0);
constraint int_lt_reif(s_00015,aux15073,aux15074_BOOL);
constraint int_le_reif(s_00016, s_00015,aux15075_BOOL);
constraint array_bool_and([w_00007_00016_BOOL,aux15071_BOOL,aux15072_BOOL,aux15074_BOOL,aux15075_BOOL],aux15076_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux15077_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux15078_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15079,s_00017],0);
constraint int_lt_reif(s_00015,aux15079,aux15080_BOOL);
constraint int_le_reif(s_00017, s_00015,aux15081_BOOL);
constraint array_bool_and([w_00007_00017_BOOL,aux15077_BOOL,aux15078_BOOL,aux15080_BOOL,aux15081_BOOL],aux15082_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux15083_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux15084_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15085,s_00018],0);
constraint int_lt_reif(s_00015,aux15085,aux15086_BOOL);
constraint int_le_reif(s_00018, s_00015,aux15087_BOOL);
constraint array_bool_and([w_00007_00018_BOOL,aux15083_BOOL,aux15084_BOOL,aux15086_BOOL,aux15087_BOOL],aux15088_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux15089_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux15090_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15091,s_00019],0);
constraint int_lt_reif(s_00015,aux15091,aux15092_BOOL);
constraint int_le_reif(s_00019, s_00015,aux15093_BOOL);
constraint array_bool_and([w_00007_00019_BOOL,aux15089_BOOL,aux15090_BOOL,aux15092_BOOL,aux15093_BOOL],aux15094_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux15095_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux15096_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15097,s_00020],0);
constraint int_lt_reif(s_00015,aux15097,aux15098_BOOL);
constraint int_le_reif(s_00020, s_00015,aux15099_BOOL);
constraint array_bool_and([w_00007_00020_BOOL,aux15095_BOOL,aux15096_BOOL,aux15098_BOOL,aux15099_BOOL],aux15100_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux15101_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15102,s_00015],0);
constraint int_lt_reif(s_00015,aux15102,aux15103_BOOL);
constraint array_bool_and([w_00007_00015_BOOL,aux15101_BOOL,aux15103_BOOL],aux15104_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux14992_INTEGER,aux14998_INTEGER,aux15004_INTEGER,aux15010_INTEGER,aux15016_INTEGER,aux15022_INTEGER,aux15028_INTEGER,aux15034_INTEGER,aux15040_INTEGER,aux15046_INTEGER,aux15052_INTEGER,aux15058_INTEGER,aux15064_INTEGER,aux15070_INTEGER,aux15076_INTEGER,aux15082_INTEGER,aux15088_INTEGER,aux15094_INTEGER,aux15100_INTEGER,aux15104_INTEGER,1],0,aux15105_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux15106_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux15107_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15108,s_00001],0);
constraint int_lt_reif(s_00010,aux15108,aux15109_BOOL);
constraint int_le_reif(s_00001, s_00010,aux15110_BOOL);
constraint array_bool_and([w_00007_00001_BOOL,aux15106_BOOL,aux15107_BOOL,aux15109_BOOL,aux15110_BOOL],aux15111_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux15112_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux15113_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15114,s_00002],0);
constraint int_lt_reif(s_00010,aux15114,aux15115_BOOL);
constraint int_le_reif(s_00002, s_00010,aux15116_BOOL);
constraint array_bool_and([w_00007_00002_BOOL,aux15112_BOOL,aux15113_BOOL,aux15115_BOOL,aux15116_BOOL],aux15117_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15118_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux15119_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15120,s_00003],0);
constraint int_lt_reif(s_00010,aux15120,aux15121_BOOL);
constraint int_le_reif(s_00003, s_00010,aux15122_BOOL);
constraint array_bool_and([w_00007_00003_BOOL,aux15118_BOOL,aux15119_BOOL,aux15121_BOOL,aux15122_BOOL],aux15123_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux15124_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux15125_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15126,s_00004],0);
constraint int_lt_reif(s_00010,aux15126,aux15127_BOOL);
constraint int_le_reif(s_00004, s_00010,aux15128_BOOL);
constraint array_bool_and([w_00007_00004_BOOL,aux15124_BOOL,aux15125_BOOL,aux15127_BOOL,aux15128_BOOL],aux15129_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15130_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux15131_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15132,s_00005],0);
constraint int_lt_reif(s_00010,aux15132,aux15133_BOOL);
constraint int_le_reif(s_00005, s_00010,aux15134_BOOL);
constraint array_bool_and([w_00007_00005_BOOL,aux15130_BOOL,aux15131_BOOL,aux15133_BOOL,aux15134_BOOL],aux15135_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux15136_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux15137_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15138,s_00006],0);
constraint int_lt_reif(s_00010,aux15138,aux15139_BOOL);
constraint int_le_reif(s_00006, s_00010,aux15140_BOOL);
constraint array_bool_and([w_00007_00006_BOOL,aux15136_BOOL,aux15137_BOOL,aux15139_BOOL,aux15140_BOOL],aux15141_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15142_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux15143_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15144,s_00007],0);
constraint int_lt_reif(s_00010,aux15144,aux15145_BOOL);
constraint int_le_reif(s_00007, s_00010,aux15146_BOOL);
constraint array_bool_and([w_00007_00007_BOOL,aux15142_BOOL,aux15143_BOOL,aux15145_BOOL,aux15146_BOOL],aux15147_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux15148_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux15149_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15150,s_00008],0);
constraint int_lt_reif(s_00010,aux15150,aux15151_BOOL);
constraint int_le_reif(s_00008, s_00010,aux15152_BOOL);
constraint array_bool_and([w_00007_00008_BOOL,aux15148_BOOL,aux15149_BOOL,aux15151_BOOL,aux15152_BOOL],aux15153_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux15154_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux15155_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15156,s_00009],0);
constraint int_lt_reif(s_00010,aux15156,aux15157_BOOL);
constraint int_le_reif(s_00009, s_00010,aux15158_BOOL);
constraint array_bool_and([w_00007_00009_BOOL,aux15154_BOOL,aux15155_BOOL,aux15157_BOOL,aux15158_BOOL],aux15159_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux15160_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux15161_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15162,s_00011],0);
constraint int_lt_reif(s_00010,aux15162,aux15163_BOOL);
constraint int_le_reif(s_00011, s_00010,aux15164_BOOL);
constraint array_bool_and([w_00007_00011_BOOL,aux15160_BOOL,aux15161_BOOL,aux15163_BOOL,aux15164_BOOL],aux15165_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux15166_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux15167_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15168,s_00012],0);
constraint int_lt_reif(s_00010,aux15168,aux15169_BOOL);
constraint int_le_reif(s_00012, s_00010,aux15170_BOOL);
constraint array_bool_and([w_00007_00012_BOOL,aux15166_BOOL,aux15167_BOOL,aux15169_BOOL,aux15170_BOOL],aux15171_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux15172_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux15173_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15174,s_00013],0);
constraint int_lt_reif(s_00010,aux15174,aux15175_BOOL);
constraint int_le_reif(s_00013, s_00010,aux15176_BOOL);
constraint array_bool_and([w_00007_00013_BOOL,aux15172_BOOL,aux15173_BOOL,aux15175_BOOL,aux15176_BOOL],aux15177_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux15178_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux15179_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux15180,s_00014],0);
constraint int_lt_reif(s_00010,aux15180,aux15181_BOOL);
constraint int_le_reif(s_00014, s_00010,aux15182_BOOL);
constraint array_bool_and([w_00007_00014_BOOL,aux15178_BOOL,aux15179_BOOL,aux15181_BOOL,aux15182_BOOL],aux15183_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux15184_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux15185_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15186,s_00015],0);
constraint int_lt_reif(s_00010,aux15186,aux15187_BOOL);
constraint int_le_reif(s_00015, s_00010,aux15188_BOOL);
constraint array_bool_and([w_00007_00015_BOOL,aux15184_BOOL,aux15185_BOOL,aux15187_BOOL,aux15188_BOOL],aux15189_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux15190_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux15191_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15192,s_00016],0);
constraint int_lt_reif(s_00010,aux15192,aux15193_BOOL);
constraint int_le_reif(s_00016, s_00010,aux15194_BOOL);
constraint array_bool_and([w_00007_00016_BOOL,aux15190_BOOL,aux15191_BOOL,aux15193_BOOL,aux15194_BOOL],aux15195_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux15196_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux15197_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15198,s_00017],0);
constraint int_lt_reif(s_00010,aux15198,aux15199_BOOL);
constraint int_le_reif(s_00017, s_00010,aux15200_BOOL);
constraint array_bool_and([w_00007_00017_BOOL,aux15196_BOOL,aux15197_BOOL,aux15199_BOOL,aux15200_BOOL],aux15201_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux15202_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux15203_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15204,s_00018],0);
constraint int_lt_reif(s_00010,aux15204,aux15205_BOOL);
constraint int_le_reif(s_00018, s_00010,aux15206_BOOL);
constraint array_bool_and([w_00007_00018_BOOL,aux15202_BOOL,aux15203_BOOL,aux15205_BOOL,aux15206_BOOL],aux15207_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux15208_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux15209_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15210,s_00019],0);
constraint int_lt_reif(s_00010,aux15210,aux15211_BOOL);
constraint int_le_reif(s_00019, s_00010,aux15212_BOOL);
constraint array_bool_and([w_00007_00019_BOOL,aux15208_BOOL,aux15209_BOOL,aux15211_BOOL,aux15212_BOOL],aux15213_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux15214_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux15215_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15216,s_00020],0);
constraint int_lt_reif(s_00010,aux15216,aux15217_BOOL);
constraint int_le_reif(s_00020, s_00010,aux15218_BOOL);
constraint array_bool_and([w_00007_00020_BOOL,aux15214_BOOL,aux15215_BOOL,aux15217_BOOL,aux15218_BOOL],aux15219_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux15220_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15221,s_00010],0);
constraint int_lt_reif(s_00010,aux15221,aux15222_BOOL);
constraint array_bool_and([w_00007_00010_BOOL,aux15220_BOOL,aux15222_BOOL],aux15223_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux15111_INTEGER,aux15117_INTEGER,aux15123_INTEGER,aux15129_INTEGER,aux15135_INTEGER,aux15141_INTEGER,aux15147_INTEGER,aux15153_INTEGER,aux15159_INTEGER,aux15165_INTEGER,aux15171_INTEGER,aux15177_INTEGER,aux15183_INTEGER,aux15189_INTEGER,aux15195_INTEGER,aux15201_INTEGER,aux15207_INTEGER,aux15213_INTEGER,aux15219_INTEGER,aux15223_INTEGER,1],0,aux15224_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux15225_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15226_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15227,s_00001],0);
constraint int_lt_reif(s_00005,aux15227,aux15228_BOOL);
constraint int_le_reif(s_00001, s_00005,aux15229_BOOL);
constraint array_bool_and([w_00007_00001_BOOL,aux15225_BOOL,aux15226_BOOL,aux15228_BOOL,aux15229_BOOL],aux15230_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux15231_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15232_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15233,s_00002],0);
constraint int_lt_reif(s_00005,aux15233,aux15234_BOOL);
constraint int_le_reif(s_00002, s_00005,aux15235_BOOL);
constraint array_bool_and([w_00007_00002_BOOL,aux15231_BOOL,aux15232_BOOL,aux15234_BOOL,aux15235_BOOL],aux15236_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15237_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15238_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15239,s_00003],0);
constraint int_lt_reif(s_00005,aux15239,aux15240_BOOL);
constraint int_le_reif(s_00003, s_00005,aux15241_BOOL);
constraint array_bool_and([w_00007_00003_BOOL,aux15237_BOOL,aux15238_BOOL,aux15240_BOOL,aux15241_BOOL],aux15242_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux15243_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15244_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15245,s_00004],0);
constraint int_lt_reif(s_00005,aux15245,aux15246_BOOL);
constraint int_le_reif(s_00004, s_00005,aux15247_BOOL);
constraint array_bool_and([w_00007_00004_BOOL,aux15243_BOOL,aux15244_BOOL,aux15246_BOOL,aux15247_BOOL],aux15248_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15249_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux15250_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15251,s_00006],0);
constraint int_lt_reif(s_00005,aux15251,aux15252_BOOL);
constraint int_le_reif(s_00006, s_00005,aux15253_BOOL);
constraint array_bool_and([w_00007_00006_BOOL,aux15249_BOOL,aux15250_BOOL,aux15252_BOOL,aux15253_BOOL],aux15254_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15255_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15256_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15257,s_00007],0);
constraint int_lt_reif(s_00005,aux15257,aux15258_BOOL);
constraint int_le_reif(s_00007, s_00005,aux15259_BOOL);
constraint array_bool_and([w_00007_00007_BOOL,aux15255_BOOL,aux15256_BOOL,aux15258_BOOL,aux15259_BOOL],aux15260_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15261_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux15262_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15263,s_00008],0);
constraint int_lt_reif(s_00005,aux15263,aux15264_BOOL);
constraint int_le_reif(s_00008, s_00005,aux15265_BOOL);
constraint array_bool_and([w_00007_00008_BOOL,aux15261_BOOL,aux15262_BOOL,aux15264_BOOL,aux15265_BOOL],aux15266_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15267_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux15268_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15269,s_00009],0);
constraint int_lt_reif(s_00005,aux15269,aux15270_BOOL);
constraint int_le_reif(s_00009, s_00005,aux15271_BOOL);
constraint array_bool_and([w_00007_00009_BOOL,aux15267_BOOL,aux15268_BOOL,aux15270_BOOL,aux15271_BOOL],aux15272_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15273_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux15274_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15275,s_00010],0);
constraint int_lt_reif(s_00005,aux15275,aux15276_BOOL);
constraint int_le_reif(s_00010, s_00005,aux15277_BOOL);
constraint array_bool_and([w_00007_00010_BOOL,aux15273_BOOL,aux15274_BOOL,aux15276_BOOL,aux15277_BOOL],aux15278_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15279_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux15280_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15281,s_00011],0);
constraint int_lt_reif(s_00005,aux15281,aux15282_BOOL);
constraint int_le_reif(s_00011, s_00005,aux15283_BOOL);
constraint array_bool_and([w_00007_00011_BOOL,aux15279_BOOL,aux15280_BOOL,aux15282_BOOL,aux15283_BOOL],aux15284_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15285_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux15286_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15287,s_00012],0);
constraint int_lt_reif(s_00005,aux15287,aux15288_BOOL);
constraint int_le_reif(s_00012, s_00005,aux15289_BOOL);
constraint array_bool_and([w_00007_00012_BOOL,aux15285_BOOL,aux15286_BOOL,aux15288_BOOL,aux15289_BOOL],aux15290_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15291_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux15292_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15293,s_00013],0);
constraint int_lt_reif(s_00005,aux15293,aux15294_BOOL);
constraint int_le_reif(s_00013, s_00005,aux15295_BOOL);
constraint array_bool_and([w_00007_00013_BOOL,aux15291_BOOL,aux15292_BOOL,aux15294_BOOL,aux15295_BOOL],aux15296_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15297_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux15298_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux15299,s_00014],0);
constraint int_lt_reif(s_00005,aux15299,aux15300_BOOL);
constraint int_le_reif(s_00014, s_00005,aux15301_BOOL);
constraint array_bool_and([w_00007_00014_BOOL,aux15297_BOOL,aux15298_BOOL,aux15300_BOOL,aux15301_BOOL],aux15302_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15303_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux15304_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15305,s_00015],0);
constraint int_lt_reif(s_00005,aux15305,aux15306_BOOL);
constraint int_le_reif(s_00015, s_00005,aux15307_BOOL);
constraint array_bool_and([w_00007_00015_BOOL,aux15303_BOOL,aux15304_BOOL,aux15306_BOOL,aux15307_BOOL],aux15308_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15309_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux15310_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15311,s_00016],0);
constraint int_lt_reif(s_00005,aux15311,aux15312_BOOL);
constraint int_le_reif(s_00016, s_00005,aux15313_BOOL);
constraint array_bool_and([w_00007_00016_BOOL,aux15309_BOOL,aux15310_BOOL,aux15312_BOOL,aux15313_BOOL],aux15314_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15315_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux15316_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15317,s_00017],0);
constraint int_lt_reif(s_00005,aux15317,aux15318_BOOL);
constraint int_le_reif(s_00017, s_00005,aux15319_BOOL);
constraint array_bool_and([w_00007_00017_BOOL,aux15315_BOOL,aux15316_BOOL,aux15318_BOOL,aux15319_BOOL],aux15320_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15321_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux15322_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15323,s_00018],0);
constraint int_lt_reif(s_00005,aux15323,aux15324_BOOL);
constraint int_le_reif(s_00018, s_00005,aux15325_BOOL);
constraint array_bool_and([w_00007_00018_BOOL,aux15321_BOOL,aux15322_BOOL,aux15324_BOOL,aux15325_BOOL],aux15326_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15327_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux15328_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15329,s_00019],0);
constraint int_lt_reif(s_00005,aux15329,aux15330_BOOL);
constraint int_le_reif(s_00019, s_00005,aux15331_BOOL);
constraint array_bool_and([w_00007_00019_BOOL,aux15327_BOOL,aux15328_BOOL,aux15330_BOOL,aux15331_BOOL],aux15332_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15333_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux15334_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15335,s_00020],0);
constraint int_lt_reif(s_00005,aux15335,aux15336_BOOL);
constraint int_le_reif(s_00020, s_00005,aux15337_BOOL);
constraint array_bool_and([w_00007_00020_BOOL,aux15333_BOOL,aux15334_BOOL,aux15336_BOOL,aux15337_BOOL],aux15338_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15339_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15340,s_00005],0);
constraint int_lt_reif(s_00005,aux15340,aux15341_BOOL);
constraint array_bool_and([w_00007_00005_BOOL,aux15339_BOOL,aux15341_BOOL],aux15342_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux15230_INTEGER,aux15236_INTEGER,aux15242_INTEGER,aux15248_INTEGER,aux15254_INTEGER,aux15260_INTEGER,aux15266_INTEGER,aux15272_INTEGER,aux15278_INTEGER,aux15284_INTEGER,aux15290_INTEGER,aux15296_INTEGER,aux15302_INTEGER,aux15308_INTEGER,aux15314_INTEGER,aux15320_INTEGER,aux15326_INTEGER,aux15332_INTEGER,aux15338_INTEGER,aux15342_INTEGER,1],0,aux15343_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux15344_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15345_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15346,s_00001],0);
constraint int_lt_reif(s_00007,aux15346,aux15347_BOOL);
constraint int_le_reif(s_00001, s_00007,aux15348_BOOL);
constraint array_bool_and([w_00007_00001_BOOL,aux15344_BOOL,aux15345_BOOL,aux15347_BOOL,aux15348_BOOL],aux15349_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux15350_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15351_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15352,s_00002],0);
constraint int_lt_reif(s_00007,aux15352,aux15353_BOOL);
constraint int_le_reif(s_00002, s_00007,aux15354_BOOL);
constraint array_bool_and([w_00007_00002_BOOL,aux15350_BOOL,aux15351_BOOL,aux15353_BOOL,aux15354_BOOL],aux15355_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15356_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15357_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15358,s_00003],0);
constraint int_lt_reif(s_00007,aux15358,aux15359_BOOL);
constraint int_le_reif(s_00003, s_00007,aux15360_BOOL);
constraint array_bool_and([w_00007_00003_BOOL,aux15356_BOOL,aux15357_BOOL,aux15359_BOOL,aux15360_BOOL],aux15361_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux15362_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15363_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15364,s_00004],0);
constraint int_lt_reif(s_00007,aux15364,aux15365_BOOL);
constraint int_le_reif(s_00004, s_00007,aux15366_BOOL);
constraint array_bool_and([w_00007_00004_BOOL,aux15362_BOOL,aux15363_BOOL,aux15365_BOOL,aux15366_BOOL],aux15367_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15368_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15369_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15370,s_00005],0);
constraint int_lt_reif(s_00007,aux15370,aux15371_BOOL);
constraint int_le_reif(s_00005, s_00007,aux15372_BOOL);
constraint array_bool_and([w_00007_00005_BOOL,aux15368_BOOL,aux15369_BOOL,aux15371_BOOL,aux15372_BOOL],aux15373_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux15374_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15375_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15376,s_00006],0);
constraint int_lt_reif(s_00007,aux15376,aux15377_BOOL);
constraint int_le_reif(s_00006, s_00007,aux15378_BOOL);
constraint array_bool_and([w_00007_00006_BOOL,aux15374_BOOL,aux15375_BOOL,aux15377_BOOL,aux15378_BOOL],aux15379_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15380_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux15381_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15382,s_00008],0);
constraint int_lt_reif(s_00007,aux15382,aux15383_BOOL);
constraint int_le_reif(s_00008, s_00007,aux15384_BOOL);
constraint array_bool_and([w_00007_00008_BOOL,aux15380_BOOL,aux15381_BOOL,aux15383_BOOL,aux15384_BOOL],aux15385_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15386_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux15387_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15388,s_00009],0);
constraint int_lt_reif(s_00007,aux15388,aux15389_BOOL);
constraint int_le_reif(s_00009, s_00007,aux15390_BOOL);
constraint array_bool_and([w_00007_00009_BOOL,aux15386_BOOL,aux15387_BOOL,aux15389_BOOL,aux15390_BOOL],aux15391_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15392_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux15393_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15394,s_00010],0);
constraint int_lt_reif(s_00007,aux15394,aux15395_BOOL);
constraint int_le_reif(s_00010, s_00007,aux15396_BOOL);
constraint array_bool_and([w_00007_00010_BOOL,aux15392_BOOL,aux15393_BOOL,aux15395_BOOL,aux15396_BOOL],aux15397_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15398_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux15399_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15400,s_00011],0);
constraint int_lt_reif(s_00007,aux15400,aux15401_BOOL);
constraint int_le_reif(s_00011, s_00007,aux15402_BOOL);
constraint array_bool_and([w_00007_00011_BOOL,aux15398_BOOL,aux15399_BOOL,aux15401_BOOL,aux15402_BOOL],aux15403_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15404_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux15405_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15406,s_00012],0);
constraint int_lt_reif(s_00007,aux15406,aux15407_BOOL);
constraint int_le_reif(s_00012, s_00007,aux15408_BOOL);
constraint array_bool_and([w_00007_00012_BOOL,aux15404_BOOL,aux15405_BOOL,aux15407_BOOL,aux15408_BOOL],aux15409_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15410_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux15411_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15412,s_00013],0);
constraint int_lt_reif(s_00007,aux15412,aux15413_BOOL);
constraint int_le_reif(s_00013, s_00007,aux15414_BOOL);
constraint array_bool_and([w_00007_00013_BOOL,aux15410_BOOL,aux15411_BOOL,aux15413_BOOL,aux15414_BOOL],aux15415_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15416_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux15417_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux15418,s_00014],0);
constraint int_lt_reif(s_00007,aux15418,aux15419_BOOL);
constraint int_le_reif(s_00014, s_00007,aux15420_BOOL);
constraint array_bool_and([w_00007_00014_BOOL,aux15416_BOOL,aux15417_BOOL,aux15419_BOOL,aux15420_BOOL],aux15421_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15422_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux15423_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15424,s_00015],0);
constraint int_lt_reif(s_00007,aux15424,aux15425_BOOL);
constraint int_le_reif(s_00015, s_00007,aux15426_BOOL);
constraint array_bool_and([w_00007_00015_BOOL,aux15422_BOOL,aux15423_BOOL,aux15425_BOOL,aux15426_BOOL],aux15427_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15428_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux15429_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15430,s_00016],0);
constraint int_lt_reif(s_00007,aux15430,aux15431_BOOL);
constraint int_le_reif(s_00016, s_00007,aux15432_BOOL);
constraint array_bool_and([w_00007_00016_BOOL,aux15428_BOOL,aux15429_BOOL,aux15431_BOOL,aux15432_BOOL],aux15433_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15434_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux15435_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15436,s_00017],0);
constraint int_lt_reif(s_00007,aux15436,aux15437_BOOL);
constraint int_le_reif(s_00017, s_00007,aux15438_BOOL);
constraint array_bool_and([w_00007_00017_BOOL,aux15434_BOOL,aux15435_BOOL,aux15437_BOOL,aux15438_BOOL],aux15439_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15440_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux15441_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15442,s_00018],0);
constraint int_lt_reif(s_00007,aux15442,aux15443_BOOL);
constraint int_le_reif(s_00018, s_00007,aux15444_BOOL);
constraint array_bool_and([w_00007_00018_BOOL,aux15440_BOOL,aux15441_BOOL,aux15443_BOOL,aux15444_BOOL],aux15445_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15446_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux15447_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15448,s_00019],0);
constraint int_lt_reif(s_00007,aux15448,aux15449_BOOL);
constraint int_le_reif(s_00019, s_00007,aux15450_BOOL);
constraint array_bool_and([w_00007_00019_BOOL,aux15446_BOOL,aux15447_BOOL,aux15449_BOOL,aux15450_BOOL],aux15451_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15452_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux15453_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15454,s_00020],0);
constraint int_lt_reif(s_00007,aux15454,aux15455_BOOL);
constraint int_le_reif(s_00020, s_00007,aux15456_BOOL);
constraint array_bool_and([w_00007_00020_BOOL,aux15452_BOOL,aux15453_BOOL,aux15455_BOOL,aux15456_BOOL],aux15457_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15458_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15459,s_00007],0);
constraint int_lt_reif(s_00007,aux15459,aux15460_BOOL);
constraint array_bool_and([w_00007_00007_BOOL,aux15458_BOOL,aux15460_BOOL],aux15461_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux15349_INTEGER,aux15355_INTEGER,aux15361_INTEGER,aux15367_INTEGER,aux15373_INTEGER,aux15379_INTEGER,aux15385_INTEGER,aux15391_INTEGER,aux15397_INTEGER,aux15403_INTEGER,aux15409_INTEGER,aux15415_INTEGER,aux15421_INTEGER,aux15427_INTEGER,aux15433_INTEGER,aux15439_INTEGER,aux15445_INTEGER,aux15451_INTEGER,aux15457_INTEGER,aux15461_INTEGER,1],0,aux15462_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux15463_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15464_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15465,s_00001],0);
constraint int_lt_reif(s_00003,aux15465,aux15466_BOOL);
constraint int_le_reif(s_00001, s_00003,aux15467_BOOL);
constraint array_bool_and([w_00007_00001_BOOL,aux15463_BOOL,aux15464_BOOL,aux15466_BOOL,aux15467_BOOL],aux15468_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux15469_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15470_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15471,s_00002],0);
constraint int_lt_reif(s_00003,aux15471,aux15472_BOOL);
constraint int_le_reif(s_00002, s_00003,aux15473_BOOL);
constraint array_bool_and([w_00007_00002_BOOL,aux15469_BOOL,aux15470_BOOL,aux15472_BOOL,aux15473_BOOL],aux15474_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15475_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux15476_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15477,s_00004],0);
constraint int_lt_reif(s_00003,aux15477,aux15478_BOOL);
constraint int_le_reif(s_00004, s_00003,aux15479_BOOL);
constraint array_bool_and([w_00007_00004_BOOL,aux15475_BOOL,aux15476_BOOL,aux15478_BOOL,aux15479_BOOL],aux15480_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15481_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15482_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15483,s_00005],0);
constraint int_lt_reif(s_00003,aux15483,aux15484_BOOL);
constraint int_le_reif(s_00005, s_00003,aux15485_BOOL);
constraint array_bool_and([w_00007_00005_BOOL,aux15481_BOOL,aux15482_BOOL,aux15484_BOOL,aux15485_BOOL],aux15486_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15487_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux15488_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15489,s_00006],0);
constraint int_lt_reif(s_00003,aux15489,aux15490_BOOL);
constraint int_le_reif(s_00006, s_00003,aux15491_BOOL);
constraint array_bool_and([w_00007_00006_BOOL,aux15487_BOOL,aux15488_BOOL,aux15490_BOOL,aux15491_BOOL],aux15492_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15493_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15494_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15495,s_00007],0);
constraint int_lt_reif(s_00003,aux15495,aux15496_BOOL);
constraint int_le_reif(s_00007, s_00003,aux15497_BOOL);
constraint array_bool_and([w_00007_00007_BOOL,aux15493_BOOL,aux15494_BOOL,aux15496_BOOL,aux15497_BOOL],aux15498_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15499_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux15500_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15501,s_00008],0);
constraint int_lt_reif(s_00003,aux15501,aux15502_BOOL);
constraint int_le_reif(s_00008, s_00003,aux15503_BOOL);
constraint array_bool_and([w_00007_00008_BOOL,aux15499_BOOL,aux15500_BOOL,aux15502_BOOL,aux15503_BOOL],aux15504_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15505_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux15506_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15507,s_00009],0);
constraint int_lt_reif(s_00003,aux15507,aux15508_BOOL);
constraint int_le_reif(s_00009, s_00003,aux15509_BOOL);
constraint array_bool_and([w_00007_00009_BOOL,aux15505_BOOL,aux15506_BOOL,aux15508_BOOL,aux15509_BOOL],aux15510_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15511_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux15512_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15513,s_00010],0);
constraint int_lt_reif(s_00003,aux15513,aux15514_BOOL);
constraint int_le_reif(s_00010, s_00003,aux15515_BOOL);
constraint array_bool_and([w_00007_00010_BOOL,aux15511_BOOL,aux15512_BOOL,aux15514_BOOL,aux15515_BOOL],aux15516_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15517_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux15518_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15519,s_00011],0);
constraint int_lt_reif(s_00003,aux15519,aux15520_BOOL);
constraint int_le_reif(s_00011, s_00003,aux15521_BOOL);
constraint array_bool_and([w_00007_00011_BOOL,aux15517_BOOL,aux15518_BOOL,aux15520_BOOL,aux15521_BOOL],aux15522_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15523_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux15524_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15525,s_00012],0);
constraint int_lt_reif(s_00003,aux15525,aux15526_BOOL);
constraint int_le_reif(s_00012, s_00003,aux15527_BOOL);
constraint array_bool_and([w_00007_00012_BOOL,aux15523_BOOL,aux15524_BOOL,aux15526_BOOL,aux15527_BOOL],aux15528_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15529_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux15530_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15531,s_00013],0);
constraint int_lt_reif(s_00003,aux15531,aux15532_BOOL);
constraint int_le_reif(s_00013, s_00003,aux15533_BOOL);
constraint array_bool_and([w_00007_00013_BOOL,aux15529_BOOL,aux15530_BOOL,aux15532_BOOL,aux15533_BOOL],aux15534_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15535_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux15536_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux15537,s_00014],0);
constraint int_lt_reif(s_00003,aux15537,aux15538_BOOL);
constraint int_le_reif(s_00014, s_00003,aux15539_BOOL);
constraint array_bool_and([w_00007_00014_BOOL,aux15535_BOOL,aux15536_BOOL,aux15538_BOOL,aux15539_BOOL],aux15540_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15541_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux15542_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15543,s_00015],0);
constraint int_lt_reif(s_00003,aux15543,aux15544_BOOL);
constraint int_le_reif(s_00015, s_00003,aux15545_BOOL);
constraint array_bool_and([w_00007_00015_BOOL,aux15541_BOOL,aux15542_BOOL,aux15544_BOOL,aux15545_BOOL],aux15546_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15547_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux15548_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15549,s_00016],0);
constraint int_lt_reif(s_00003,aux15549,aux15550_BOOL);
constraint int_le_reif(s_00016, s_00003,aux15551_BOOL);
constraint array_bool_and([w_00007_00016_BOOL,aux15547_BOOL,aux15548_BOOL,aux15550_BOOL,aux15551_BOOL],aux15552_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15553_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux15554_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15555,s_00017],0);
constraint int_lt_reif(s_00003,aux15555,aux15556_BOOL);
constraint int_le_reif(s_00017, s_00003,aux15557_BOOL);
constraint array_bool_and([w_00007_00017_BOOL,aux15553_BOOL,aux15554_BOOL,aux15556_BOOL,aux15557_BOOL],aux15558_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15559_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux15560_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15561,s_00018],0);
constraint int_lt_reif(s_00003,aux15561,aux15562_BOOL);
constraint int_le_reif(s_00018, s_00003,aux15563_BOOL);
constraint array_bool_and([w_00007_00018_BOOL,aux15559_BOOL,aux15560_BOOL,aux15562_BOOL,aux15563_BOOL],aux15564_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15565_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux15566_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15567,s_00019],0);
constraint int_lt_reif(s_00003,aux15567,aux15568_BOOL);
constraint int_le_reif(s_00019, s_00003,aux15569_BOOL);
constraint array_bool_and([w_00007_00019_BOOL,aux15565_BOOL,aux15566_BOOL,aux15568_BOOL,aux15569_BOOL],aux15570_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15571_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux15572_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15573,s_00020],0);
constraint int_lt_reif(s_00003,aux15573,aux15574_BOOL);
constraint int_le_reif(s_00020, s_00003,aux15575_BOOL);
constraint array_bool_and([w_00007_00020_BOOL,aux15571_BOOL,aux15572_BOOL,aux15574_BOOL,aux15575_BOOL],aux15576_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15577_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15578,s_00003],0);
constraint int_lt_reif(s_00003,aux15578,aux15579_BOOL);
constraint array_bool_and([w_00007_00003_BOOL,aux15577_BOOL,aux15579_BOOL],aux15580_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux15468_INTEGER,aux15474_INTEGER,aux15480_INTEGER,aux15486_INTEGER,aux15492_INTEGER,aux15498_INTEGER,aux15504_INTEGER,aux15510_INTEGER,aux15516_INTEGER,aux15522_INTEGER,aux15528_INTEGER,aux15534_INTEGER,aux15540_INTEGER,aux15546_INTEGER,aux15552_INTEGER,aux15558_INTEGER,aux15564_INTEGER,aux15570_INTEGER,aux15576_INTEGER,aux15580_INTEGER,1],0,aux15581_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux15582_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux15583_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15584,s_00001],0);
constraint int_lt_reif(s_00002,aux15584,aux15585_BOOL);
constraint int_le_reif(s_00001, s_00002,aux15586_BOOL);
constraint array_bool_and([w_00007_00001_BOOL,aux15582_BOOL,aux15583_BOOL,aux15585_BOOL,aux15586_BOOL],aux15587_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux15588_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15589_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15590,s_00003],0);
constraint int_lt_reif(s_00002,aux15590,aux15591_BOOL);
constraint int_le_reif(s_00003, s_00002,aux15592_BOOL);
constraint array_bool_and([w_00007_00003_BOOL,aux15588_BOOL,aux15589_BOOL,aux15591_BOOL,aux15592_BOOL],aux15593_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux15594_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux15595_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15596,s_00004],0);
constraint int_lt_reif(s_00002,aux15596,aux15597_BOOL);
constraint int_le_reif(s_00004, s_00002,aux15598_BOOL);
constraint array_bool_and([w_00007_00004_BOOL,aux15594_BOOL,aux15595_BOOL,aux15597_BOOL,aux15598_BOOL],aux15599_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux15600_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15601_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15602,s_00005],0);
constraint int_lt_reif(s_00002,aux15602,aux15603_BOOL);
constraint int_le_reif(s_00005, s_00002,aux15604_BOOL);
constraint array_bool_and([w_00007_00005_BOOL,aux15600_BOOL,aux15601_BOOL,aux15603_BOOL,aux15604_BOOL],aux15605_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux15606_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux15607_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15608,s_00006],0);
constraint int_lt_reif(s_00002,aux15608,aux15609_BOOL);
constraint int_le_reif(s_00006, s_00002,aux15610_BOOL);
constraint array_bool_and([w_00007_00006_BOOL,aux15606_BOOL,aux15607_BOOL,aux15609_BOOL,aux15610_BOOL],aux15611_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux15612_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15613_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15614,s_00007],0);
constraint int_lt_reif(s_00002,aux15614,aux15615_BOOL);
constraint int_le_reif(s_00007, s_00002,aux15616_BOOL);
constraint array_bool_and([w_00007_00007_BOOL,aux15612_BOOL,aux15613_BOOL,aux15615_BOOL,aux15616_BOOL],aux15617_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux15618_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux15619_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15620,s_00008],0);
constraint int_lt_reif(s_00002,aux15620,aux15621_BOOL);
constraint int_le_reif(s_00008, s_00002,aux15622_BOOL);
constraint array_bool_and([w_00007_00008_BOOL,aux15618_BOOL,aux15619_BOOL,aux15621_BOOL,aux15622_BOOL],aux15623_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux15624_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux15625_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15626,s_00009],0);
constraint int_lt_reif(s_00002,aux15626,aux15627_BOOL);
constraint int_le_reif(s_00009, s_00002,aux15628_BOOL);
constraint array_bool_and([w_00007_00009_BOOL,aux15624_BOOL,aux15625_BOOL,aux15627_BOOL,aux15628_BOOL],aux15629_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux15630_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux15631_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15632,s_00010],0);
constraint int_lt_reif(s_00002,aux15632,aux15633_BOOL);
constraint int_le_reif(s_00010, s_00002,aux15634_BOOL);
constraint array_bool_and([w_00007_00010_BOOL,aux15630_BOOL,aux15631_BOOL,aux15633_BOOL,aux15634_BOOL],aux15635_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux15636_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux15637_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15638,s_00011],0);
constraint int_lt_reif(s_00002,aux15638,aux15639_BOOL);
constraint int_le_reif(s_00011, s_00002,aux15640_BOOL);
constraint array_bool_and([w_00007_00011_BOOL,aux15636_BOOL,aux15637_BOOL,aux15639_BOOL,aux15640_BOOL],aux15641_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux15642_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux15643_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15644,s_00012],0);
constraint int_lt_reif(s_00002,aux15644,aux15645_BOOL);
constraint int_le_reif(s_00012, s_00002,aux15646_BOOL);
constraint array_bool_and([w_00007_00012_BOOL,aux15642_BOOL,aux15643_BOOL,aux15645_BOOL,aux15646_BOOL],aux15647_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux15648_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux15649_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15650,s_00013],0);
constraint int_lt_reif(s_00002,aux15650,aux15651_BOOL);
constraint int_le_reif(s_00013, s_00002,aux15652_BOOL);
constraint array_bool_and([w_00007_00013_BOOL,aux15648_BOOL,aux15649_BOOL,aux15651_BOOL,aux15652_BOOL],aux15653_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux15654_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux15655_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux15656,s_00014],0);
constraint int_lt_reif(s_00002,aux15656,aux15657_BOOL);
constraint int_le_reif(s_00014, s_00002,aux15658_BOOL);
constraint array_bool_and([w_00007_00014_BOOL,aux15654_BOOL,aux15655_BOOL,aux15657_BOOL,aux15658_BOOL],aux15659_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux15660_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux15661_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15662,s_00015],0);
constraint int_lt_reif(s_00002,aux15662,aux15663_BOOL);
constraint int_le_reif(s_00015, s_00002,aux15664_BOOL);
constraint array_bool_and([w_00007_00015_BOOL,aux15660_BOOL,aux15661_BOOL,aux15663_BOOL,aux15664_BOOL],aux15665_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux15666_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux15667_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15668,s_00016],0);
constraint int_lt_reif(s_00002,aux15668,aux15669_BOOL);
constraint int_le_reif(s_00016, s_00002,aux15670_BOOL);
constraint array_bool_and([w_00007_00016_BOOL,aux15666_BOOL,aux15667_BOOL,aux15669_BOOL,aux15670_BOOL],aux15671_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux15672_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux15673_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15674,s_00017],0);
constraint int_lt_reif(s_00002,aux15674,aux15675_BOOL);
constraint int_le_reif(s_00017, s_00002,aux15676_BOOL);
constraint array_bool_and([w_00007_00017_BOOL,aux15672_BOOL,aux15673_BOOL,aux15675_BOOL,aux15676_BOOL],aux15677_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux15678_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux15679_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15680,s_00018],0);
constraint int_lt_reif(s_00002,aux15680,aux15681_BOOL);
constraint int_le_reif(s_00018, s_00002,aux15682_BOOL);
constraint array_bool_and([w_00007_00018_BOOL,aux15678_BOOL,aux15679_BOOL,aux15681_BOOL,aux15682_BOOL],aux15683_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux15684_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux15685_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15686,s_00019],0);
constraint int_lt_reif(s_00002,aux15686,aux15687_BOOL);
constraint int_le_reif(s_00019, s_00002,aux15688_BOOL);
constraint array_bool_and([w_00007_00019_BOOL,aux15684_BOOL,aux15685_BOOL,aux15687_BOOL,aux15688_BOOL],aux15689_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux15690_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux15691_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15692,s_00020],0);
constraint int_lt_reif(s_00002,aux15692,aux15693_BOOL);
constraint int_le_reif(s_00020, s_00002,aux15694_BOOL);
constraint array_bool_and([w_00007_00020_BOOL,aux15690_BOOL,aux15691_BOOL,aux15693_BOOL,aux15694_BOOL],aux15695_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux15696_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15697,s_00002],0);
constraint int_lt_reif(s_00002,aux15697,aux15698_BOOL);
constraint array_bool_and([w_00007_00002_BOOL,aux15696_BOOL,aux15698_BOOL],aux15699_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux15587_INTEGER,aux15593_INTEGER,aux15599_INTEGER,aux15605_INTEGER,aux15611_INTEGER,aux15617_INTEGER,aux15623_INTEGER,aux15629_INTEGER,aux15635_INTEGER,aux15641_INTEGER,aux15647_INTEGER,aux15653_INTEGER,aux15659_INTEGER,aux15665_INTEGER,aux15671_INTEGER,aux15677_INTEGER,aux15683_INTEGER,aux15689_INTEGER,aux15695_INTEGER,aux15699_INTEGER,1],0,aux15700_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux15701_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux15702_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15703,s_00001],0);
constraint int_lt_reif(s_00012,aux15703,aux15704_BOOL);
constraint int_le_reif(s_00001, s_00012,aux15705_BOOL);
constraint array_bool_and([w_00007_00001_BOOL,aux15701_BOOL,aux15702_BOOL,aux15704_BOOL,aux15705_BOOL],aux15706_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux15707_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux15708_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15709,s_00002],0);
constraint int_lt_reif(s_00012,aux15709,aux15710_BOOL);
constraint int_le_reif(s_00002, s_00012,aux15711_BOOL);
constraint array_bool_and([w_00007_00002_BOOL,aux15707_BOOL,aux15708_BOOL,aux15710_BOOL,aux15711_BOOL],aux15712_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15713_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux15714_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15715,s_00003],0);
constraint int_lt_reif(s_00012,aux15715,aux15716_BOOL);
constraint int_le_reif(s_00003, s_00012,aux15717_BOOL);
constraint array_bool_and([w_00007_00003_BOOL,aux15713_BOOL,aux15714_BOOL,aux15716_BOOL,aux15717_BOOL],aux15718_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux15719_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux15720_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15721,s_00004],0);
constraint int_lt_reif(s_00012,aux15721,aux15722_BOOL);
constraint int_le_reif(s_00004, s_00012,aux15723_BOOL);
constraint array_bool_and([w_00007_00004_BOOL,aux15719_BOOL,aux15720_BOOL,aux15722_BOOL,aux15723_BOOL],aux15724_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15725_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux15726_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15727,s_00005],0);
constraint int_lt_reif(s_00012,aux15727,aux15728_BOOL);
constraint int_le_reif(s_00005, s_00012,aux15729_BOOL);
constraint array_bool_and([w_00007_00005_BOOL,aux15725_BOOL,aux15726_BOOL,aux15728_BOOL,aux15729_BOOL],aux15730_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux15731_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux15732_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15733,s_00006],0);
constraint int_lt_reif(s_00012,aux15733,aux15734_BOOL);
constraint int_le_reif(s_00006, s_00012,aux15735_BOOL);
constraint array_bool_and([w_00007_00006_BOOL,aux15731_BOOL,aux15732_BOOL,aux15734_BOOL,aux15735_BOOL],aux15736_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15737_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux15738_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15739,s_00007],0);
constraint int_lt_reif(s_00012,aux15739,aux15740_BOOL);
constraint int_le_reif(s_00007, s_00012,aux15741_BOOL);
constraint array_bool_and([w_00007_00007_BOOL,aux15737_BOOL,aux15738_BOOL,aux15740_BOOL,aux15741_BOOL],aux15742_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux15743_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux15744_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15745,s_00008],0);
constraint int_lt_reif(s_00012,aux15745,aux15746_BOOL);
constraint int_le_reif(s_00008, s_00012,aux15747_BOOL);
constraint array_bool_and([w_00007_00008_BOOL,aux15743_BOOL,aux15744_BOOL,aux15746_BOOL,aux15747_BOOL],aux15748_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux15749_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux15750_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15751,s_00009],0);
constraint int_lt_reif(s_00012,aux15751,aux15752_BOOL);
constraint int_le_reif(s_00009, s_00012,aux15753_BOOL);
constraint array_bool_and([w_00007_00009_BOOL,aux15749_BOOL,aux15750_BOOL,aux15752_BOOL,aux15753_BOOL],aux15754_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux15755_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux15756_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15757,s_00010],0);
constraint int_lt_reif(s_00012,aux15757,aux15758_BOOL);
constraint int_le_reif(s_00010, s_00012,aux15759_BOOL);
constraint array_bool_and([w_00007_00010_BOOL,aux15755_BOOL,aux15756_BOOL,aux15758_BOOL,aux15759_BOOL],aux15760_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux15761_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux15762_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15763,s_00011],0);
constraint int_lt_reif(s_00012,aux15763,aux15764_BOOL);
constraint int_le_reif(s_00011, s_00012,aux15765_BOOL);
constraint array_bool_and([w_00007_00011_BOOL,aux15761_BOOL,aux15762_BOOL,aux15764_BOOL,aux15765_BOOL],aux15766_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux15767_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux15768_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15769,s_00013],0);
constraint int_lt_reif(s_00012,aux15769,aux15770_BOOL);
constraint int_le_reif(s_00013, s_00012,aux15771_BOOL);
constraint array_bool_and([w_00007_00013_BOOL,aux15767_BOOL,aux15768_BOOL,aux15770_BOOL,aux15771_BOOL],aux15772_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux15773_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux15774_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux15775,s_00014],0);
constraint int_lt_reif(s_00012,aux15775,aux15776_BOOL);
constraint int_le_reif(s_00014, s_00012,aux15777_BOOL);
constraint array_bool_and([w_00007_00014_BOOL,aux15773_BOOL,aux15774_BOOL,aux15776_BOOL,aux15777_BOOL],aux15778_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux15779_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux15780_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15781,s_00015],0);
constraint int_lt_reif(s_00012,aux15781,aux15782_BOOL);
constraint int_le_reif(s_00015, s_00012,aux15783_BOOL);
constraint array_bool_and([w_00007_00015_BOOL,aux15779_BOOL,aux15780_BOOL,aux15782_BOOL,aux15783_BOOL],aux15784_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux15785_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux15786_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15787,s_00016],0);
constraint int_lt_reif(s_00012,aux15787,aux15788_BOOL);
constraint int_le_reif(s_00016, s_00012,aux15789_BOOL);
constraint array_bool_and([w_00007_00016_BOOL,aux15785_BOOL,aux15786_BOOL,aux15788_BOOL,aux15789_BOOL],aux15790_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux15791_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux15792_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15793,s_00017],0);
constraint int_lt_reif(s_00012,aux15793,aux15794_BOOL);
constraint int_le_reif(s_00017, s_00012,aux15795_BOOL);
constraint array_bool_and([w_00007_00017_BOOL,aux15791_BOOL,aux15792_BOOL,aux15794_BOOL,aux15795_BOOL],aux15796_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux15797_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux15798_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15799,s_00018],0);
constraint int_lt_reif(s_00012,aux15799,aux15800_BOOL);
constraint int_le_reif(s_00018, s_00012,aux15801_BOOL);
constraint array_bool_and([w_00007_00018_BOOL,aux15797_BOOL,aux15798_BOOL,aux15800_BOOL,aux15801_BOOL],aux15802_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux15803_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux15804_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15805,s_00019],0);
constraint int_lt_reif(s_00012,aux15805,aux15806_BOOL);
constraint int_le_reif(s_00019, s_00012,aux15807_BOOL);
constraint array_bool_and([w_00007_00019_BOOL,aux15803_BOOL,aux15804_BOOL,aux15806_BOOL,aux15807_BOOL],aux15808_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux15809_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux15810_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15811,s_00020],0);
constraint int_lt_reif(s_00012,aux15811,aux15812_BOOL);
constraint int_le_reif(s_00020, s_00012,aux15813_BOOL);
constraint array_bool_and([w_00007_00020_BOOL,aux15809_BOOL,aux15810_BOOL,aux15812_BOOL,aux15813_BOOL],aux15814_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux15815_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15816,s_00012],0);
constraint int_lt_reif(s_00012,aux15816,aux15817_BOOL);
constraint array_bool_and([w_00007_00012_BOOL,aux15815_BOOL,aux15817_BOOL],aux15818_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux15706_INTEGER,aux15712_INTEGER,aux15718_INTEGER,aux15724_INTEGER,aux15730_INTEGER,aux15736_INTEGER,aux15742_INTEGER,aux15748_INTEGER,aux15754_INTEGER,aux15760_INTEGER,aux15766_INTEGER,aux15772_INTEGER,aux15778_INTEGER,aux15784_INTEGER,aux15790_INTEGER,aux15796_INTEGER,aux15802_INTEGER,aux15808_INTEGER,aux15814_INTEGER,aux15818_INTEGER,1],0,aux15819_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux15820_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux15821_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15822,s_00001],0);
constraint int_lt_reif(s_00006,aux15822,aux15823_BOOL);
constraint int_le_reif(s_00001, s_00006,aux15824_BOOL);
constraint array_bool_and([w_00007_00001_BOOL,aux15820_BOOL,aux15821_BOOL,aux15823_BOOL,aux15824_BOOL],aux15825_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux15826_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux15827_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15828,s_00002],0);
constraint int_lt_reif(s_00006,aux15828,aux15829_BOOL);
constraint int_le_reif(s_00002, s_00006,aux15830_BOOL);
constraint array_bool_and([w_00007_00002_BOOL,aux15826_BOOL,aux15827_BOOL,aux15829_BOOL,aux15830_BOOL],aux15831_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15832_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux15833_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15834,s_00003],0);
constraint int_lt_reif(s_00006,aux15834,aux15835_BOOL);
constraint int_le_reif(s_00003, s_00006,aux15836_BOOL);
constraint array_bool_and([w_00007_00003_BOOL,aux15832_BOOL,aux15833_BOOL,aux15835_BOOL,aux15836_BOOL],aux15837_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux15838_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux15839_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15840,s_00004],0);
constraint int_lt_reif(s_00006,aux15840,aux15841_BOOL);
constraint int_le_reif(s_00004, s_00006,aux15842_BOOL);
constraint array_bool_and([w_00007_00004_BOOL,aux15838_BOOL,aux15839_BOOL,aux15841_BOOL,aux15842_BOOL],aux15843_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15844_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux15845_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15846,s_00005],0);
constraint int_lt_reif(s_00006,aux15846,aux15847_BOOL);
constraint int_le_reif(s_00005, s_00006,aux15848_BOOL);
constraint array_bool_and([w_00007_00005_BOOL,aux15844_BOOL,aux15845_BOOL,aux15847_BOOL,aux15848_BOOL],aux15849_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux15850_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15851_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15852,s_00007],0);
constraint int_lt_reif(s_00006,aux15852,aux15853_BOOL);
constraint int_le_reif(s_00007, s_00006,aux15854_BOOL);
constraint array_bool_and([w_00007_00007_BOOL,aux15850_BOOL,aux15851_BOOL,aux15853_BOOL,aux15854_BOOL],aux15855_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux15856_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux15857_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15858,s_00008],0);
constraint int_lt_reif(s_00006,aux15858,aux15859_BOOL);
constraint int_le_reif(s_00008, s_00006,aux15860_BOOL);
constraint array_bool_and([w_00007_00008_BOOL,aux15856_BOOL,aux15857_BOOL,aux15859_BOOL,aux15860_BOOL],aux15861_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux15862_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux15863_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15864,s_00009],0);
constraint int_lt_reif(s_00006,aux15864,aux15865_BOOL);
constraint int_le_reif(s_00009, s_00006,aux15866_BOOL);
constraint array_bool_and([w_00007_00009_BOOL,aux15862_BOOL,aux15863_BOOL,aux15865_BOOL,aux15866_BOOL],aux15867_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux15868_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux15869_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15870,s_00010],0);
constraint int_lt_reif(s_00006,aux15870,aux15871_BOOL);
constraint int_le_reif(s_00010, s_00006,aux15872_BOOL);
constraint array_bool_and([w_00007_00010_BOOL,aux15868_BOOL,aux15869_BOOL,aux15871_BOOL,aux15872_BOOL],aux15873_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux15874_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux15875_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15876,s_00011],0);
constraint int_lt_reif(s_00006,aux15876,aux15877_BOOL);
constraint int_le_reif(s_00011, s_00006,aux15878_BOOL);
constraint array_bool_and([w_00007_00011_BOOL,aux15874_BOOL,aux15875_BOOL,aux15877_BOOL,aux15878_BOOL],aux15879_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux15880_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux15881_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15882,s_00012],0);
constraint int_lt_reif(s_00006,aux15882,aux15883_BOOL);
constraint int_le_reif(s_00012, s_00006,aux15884_BOOL);
constraint array_bool_and([w_00007_00012_BOOL,aux15880_BOOL,aux15881_BOOL,aux15883_BOOL,aux15884_BOOL],aux15885_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux15886_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux15887_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15888,s_00013],0);
constraint int_lt_reif(s_00006,aux15888,aux15889_BOOL);
constraint int_le_reif(s_00013, s_00006,aux15890_BOOL);
constraint array_bool_and([w_00007_00013_BOOL,aux15886_BOOL,aux15887_BOOL,aux15889_BOOL,aux15890_BOOL],aux15891_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux15892_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux15893_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux15894,s_00014],0);
constraint int_lt_reif(s_00006,aux15894,aux15895_BOOL);
constraint int_le_reif(s_00014, s_00006,aux15896_BOOL);
constraint array_bool_and([w_00007_00014_BOOL,aux15892_BOOL,aux15893_BOOL,aux15895_BOOL,aux15896_BOOL],aux15897_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux15898_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux15899_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15900,s_00015],0);
constraint int_lt_reif(s_00006,aux15900,aux15901_BOOL);
constraint int_le_reif(s_00015, s_00006,aux15902_BOOL);
constraint array_bool_and([w_00007_00015_BOOL,aux15898_BOOL,aux15899_BOOL,aux15901_BOOL,aux15902_BOOL],aux15903_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux15904_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux15905_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15906,s_00016],0);
constraint int_lt_reif(s_00006,aux15906,aux15907_BOOL);
constraint int_le_reif(s_00016, s_00006,aux15908_BOOL);
constraint array_bool_and([w_00007_00016_BOOL,aux15904_BOOL,aux15905_BOOL,aux15907_BOOL,aux15908_BOOL],aux15909_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux15910_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux15911_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15912,s_00017],0);
constraint int_lt_reif(s_00006,aux15912,aux15913_BOOL);
constraint int_le_reif(s_00017, s_00006,aux15914_BOOL);
constraint array_bool_and([w_00007_00017_BOOL,aux15910_BOOL,aux15911_BOOL,aux15913_BOOL,aux15914_BOOL],aux15915_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux15916_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux15917_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15918,s_00018],0);
constraint int_lt_reif(s_00006,aux15918,aux15919_BOOL);
constraint int_le_reif(s_00018, s_00006,aux15920_BOOL);
constraint array_bool_and([w_00007_00018_BOOL,aux15916_BOOL,aux15917_BOOL,aux15919_BOOL,aux15920_BOOL],aux15921_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux15922_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux15923_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15924,s_00019],0);
constraint int_lt_reif(s_00006,aux15924,aux15925_BOOL);
constraint int_le_reif(s_00019, s_00006,aux15926_BOOL);
constraint array_bool_and([w_00007_00019_BOOL,aux15922_BOOL,aux15923_BOOL,aux15925_BOOL,aux15926_BOOL],aux15927_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux15928_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux15929_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15930,s_00020],0);
constraint int_lt_reif(s_00006,aux15930,aux15931_BOOL);
constraint int_le_reif(s_00020, s_00006,aux15932_BOOL);
constraint array_bool_and([w_00007_00020_BOOL,aux15928_BOOL,aux15929_BOOL,aux15931_BOOL,aux15932_BOOL],aux15933_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux15934_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15935,s_00006],0);
constraint int_lt_reif(s_00006,aux15935,aux15936_BOOL);
constraint array_bool_and([w_00007_00006_BOOL,aux15934_BOOL,aux15936_BOOL],aux15937_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux15825_INTEGER,aux15831_INTEGER,aux15837_INTEGER,aux15843_INTEGER,aux15849_INTEGER,aux15855_INTEGER,aux15861_INTEGER,aux15867_INTEGER,aux15873_INTEGER,aux15879_INTEGER,aux15885_INTEGER,aux15891_INTEGER,aux15897_INTEGER,aux15903_INTEGER,aux15909_INTEGER,aux15915_INTEGER,aux15921_INTEGER,aux15927_INTEGER,aux15933_INTEGER,aux15937_INTEGER,1],0,aux15938_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux15939_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux15940_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15941,s_00001],0);
constraint int_lt_reif(s_00018,aux15941,aux15942_BOOL);
constraint int_le_reif(s_00001, s_00018,aux15943_BOOL);
constraint array_bool_and([w_00007_00001_BOOL,aux15939_BOOL,aux15940_BOOL,aux15942_BOOL,aux15943_BOOL],aux15944_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux15945_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux15946_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15947,s_00002],0);
constraint int_lt_reif(s_00018,aux15947,aux15948_BOOL);
constraint int_le_reif(s_00002, s_00018,aux15949_BOOL);
constraint array_bool_and([w_00007_00002_BOOL,aux15945_BOOL,aux15946_BOOL,aux15948_BOOL,aux15949_BOOL],aux15950_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux15951_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux15952_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15953,s_00003],0);
constraint int_lt_reif(s_00018,aux15953,aux15954_BOOL);
constraint int_le_reif(s_00003, s_00018,aux15955_BOOL);
constraint array_bool_and([w_00007_00003_BOOL,aux15951_BOOL,aux15952_BOOL,aux15954_BOOL,aux15955_BOOL],aux15956_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux15957_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux15958_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15959,s_00004],0);
constraint int_lt_reif(s_00018,aux15959,aux15960_BOOL);
constraint int_le_reif(s_00004, s_00018,aux15961_BOOL);
constraint array_bool_and([w_00007_00004_BOOL,aux15957_BOOL,aux15958_BOOL,aux15960_BOOL,aux15961_BOOL],aux15962_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux15963_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux15964_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15965,s_00005],0);
constraint int_lt_reif(s_00018,aux15965,aux15966_BOOL);
constraint int_le_reif(s_00005, s_00018,aux15967_BOOL);
constraint array_bool_and([w_00007_00005_BOOL,aux15963_BOOL,aux15964_BOOL,aux15966_BOOL,aux15967_BOOL],aux15968_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux15969_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux15970_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux15971,s_00006],0);
constraint int_lt_reif(s_00018,aux15971,aux15972_BOOL);
constraint int_le_reif(s_00006, s_00018,aux15973_BOOL);
constraint array_bool_and([w_00007_00006_BOOL,aux15969_BOOL,aux15970_BOOL,aux15972_BOOL,aux15973_BOOL],aux15974_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux15975_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux15976_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15977,s_00007],0);
constraint int_lt_reif(s_00018,aux15977,aux15978_BOOL);
constraint int_le_reif(s_00007, s_00018,aux15979_BOOL);
constraint array_bool_and([w_00007_00007_BOOL,aux15975_BOOL,aux15976_BOOL,aux15978_BOOL,aux15979_BOOL],aux15980_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux15981_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux15982_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15983,s_00008],0);
constraint int_lt_reif(s_00018,aux15983,aux15984_BOOL);
constraint int_le_reif(s_00008, s_00018,aux15985_BOOL);
constraint array_bool_and([w_00007_00008_BOOL,aux15981_BOOL,aux15982_BOOL,aux15984_BOOL,aux15985_BOOL],aux15986_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux15987_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux15988_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux15989,s_00009],0);
constraint int_lt_reif(s_00018,aux15989,aux15990_BOOL);
constraint int_le_reif(s_00009, s_00018,aux15991_BOOL);
constraint array_bool_and([w_00007_00009_BOOL,aux15987_BOOL,aux15988_BOOL,aux15990_BOOL,aux15991_BOOL],aux15992_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux15993_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux15994_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux15995,s_00010],0);
constraint int_lt_reif(s_00018,aux15995,aux15996_BOOL);
constraint int_le_reif(s_00010, s_00018,aux15997_BOOL);
constraint array_bool_and([w_00007_00010_BOOL,aux15993_BOOL,aux15994_BOOL,aux15996_BOOL,aux15997_BOOL],aux15998_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux15999_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux16000_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16001,s_00011],0);
constraint int_lt_reif(s_00018,aux16001,aux16002_BOOL);
constraint int_le_reif(s_00011, s_00018,aux16003_BOOL);
constraint array_bool_and([w_00007_00011_BOOL,aux15999_BOOL,aux16000_BOOL,aux16002_BOOL,aux16003_BOOL],aux16004_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux16005_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux16006_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16007,s_00012],0);
constraint int_lt_reif(s_00018,aux16007,aux16008_BOOL);
constraint int_le_reif(s_00012, s_00018,aux16009_BOOL);
constraint array_bool_and([w_00007_00012_BOOL,aux16005_BOOL,aux16006_BOOL,aux16008_BOOL,aux16009_BOOL],aux16010_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux16011_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux16012_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16013,s_00013],0);
constraint int_lt_reif(s_00018,aux16013,aux16014_BOOL);
constraint int_le_reif(s_00013, s_00018,aux16015_BOOL);
constraint array_bool_and([w_00007_00013_BOOL,aux16011_BOOL,aux16012_BOOL,aux16014_BOOL,aux16015_BOOL],aux16016_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux16017_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux16018_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux16019,s_00014],0);
constraint int_lt_reif(s_00018,aux16019,aux16020_BOOL);
constraint int_le_reif(s_00014, s_00018,aux16021_BOOL);
constraint array_bool_and([w_00007_00014_BOOL,aux16017_BOOL,aux16018_BOOL,aux16020_BOOL,aux16021_BOOL],aux16022_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux16023_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux16024_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16025,s_00015],0);
constraint int_lt_reif(s_00018,aux16025,aux16026_BOOL);
constraint int_le_reif(s_00015, s_00018,aux16027_BOOL);
constraint array_bool_and([w_00007_00015_BOOL,aux16023_BOOL,aux16024_BOOL,aux16026_BOOL,aux16027_BOOL],aux16028_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux16029_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux16030_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16031,s_00016],0);
constraint int_lt_reif(s_00018,aux16031,aux16032_BOOL);
constraint int_le_reif(s_00016, s_00018,aux16033_BOOL);
constraint array_bool_and([w_00007_00016_BOOL,aux16029_BOOL,aux16030_BOOL,aux16032_BOOL,aux16033_BOOL],aux16034_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16035_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux16036_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16037,s_00017],0);
constraint int_lt_reif(s_00018,aux16037,aux16038_BOOL);
constraint int_le_reif(s_00017, s_00018,aux16039_BOOL);
constraint array_bool_and([w_00007_00017_BOOL,aux16035_BOOL,aux16036_BOOL,aux16038_BOOL,aux16039_BOOL],aux16040_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux16041_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux16042_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16043,s_00019],0);
constraint int_lt_reif(s_00018,aux16043,aux16044_BOOL);
constraint int_le_reif(s_00019, s_00018,aux16045_BOOL);
constraint array_bool_and([w_00007_00019_BOOL,aux16041_BOOL,aux16042_BOOL,aux16044_BOOL,aux16045_BOOL],aux16046_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux16047_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16048_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16049,s_00020],0);
constraint int_lt_reif(s_00018,aux16049,aux16050_BOOL);
constraint int_le_reif(s_00020, s_00018,aux16051_BOOL);
constraint array_bool_and([w_00007_00020_BOOL,aux16047_BOOL,aux16048_BOOL,aux16050_BOOL,aux16051_BOOL],aux16052_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux16053_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16054,s_00018],0);
constraint int_lt_reif(s_00018,aux16054,aux16055_BOOL);
constraint array_bool_and([w_00007_00018_BOOL,aux16053_BOOL,aux16055_BOOL],aux16056_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux15944_INTEGER,aux15950_INTEGER,aux15956_INTEGER,aux15962_INTEGER,aux15968_INTEGER,aux15974_INTEGER,aux15980_INTEGER,aux15986_INTEGER,aux15992_INTEGER,aux15998_INTEGER,aux16004_INTEGER,aux16010_INTEGER,aux16016_INTEGER,aux16022_INTEGER,aux16028_INTEGER,aux16034_INTEGER,aux16040_INTEGER,aux16046_INTEGER,aux16052_INTEGER,aux16056_INTEGER,1],0,aux16057_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux16058_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux16059_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16060,s_00002],0);
constraint int_lt_reif(s_00001,aux16060,aux16061_BOOL);
constraint int_le_reif(s_00002, s_00001,aux16062_BOOL);
constraint array_bool_and([w_00007_00002_BOOL,aux16058_BOOL,aux16059_BOOL,aux16061_BOOL,aux16062_BOOL],aux16063_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux16064_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux16065_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16066,s_00003],0);
constraint int_lt_reif(s_00001,aux16066,aux16067_BOOL);
constraint int_le_reif(s_00003, s_00001,aux16068_BOOL);
constraint array_bool_and([w_00007_00003_BOOL,aux16064_BOOL,aux16065_BOOL,aux16067_BOOL,aux16068_BOOL],aux16069_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux16070_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16071_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16072,s_00004],0);
constraint int_lt_reif(s_00001,aux16072,aux16073_BOOL);
constraint int_le_reif(s_00004, s_00001,aux16074_BOOL);
constraint array_bool_and([w_00007_00004_BOOL,aux16070_BOOL,aux16071_BOOL,aux16073_BOOL,aux16074_BOOL],aux16075_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux16076_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux16077_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16078,s_00005],0);
constraint int_lt_reif(s_00001,aux16078,aux16079_BOOL);
constraint int_le_reif(s_00005, s_00001,aux16080_BOOL);
constraint array_bool_and([w_00007_00005_BOOL,aux16076_BOOL,aux16077_BOOL,aux16079_BOOL,aux16080_BOOL],aux16081_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux16082_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux16083_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16084,s_00006],0);
constraint int_lt_reif(s_00001,aux16084,aux16085_BOOL);
constraint int_le_reif(s_00006, s_00001,aux16086_BOOL);
constraint array_bool_and([w_00007_00006_BOOL,aux16082_BOOL,aux16083_BOOL,aux16085_BOOL,aux16086_BOOL],aux16087_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux16088_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux16089_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16090,s_00007],0);
constraint int_lt_reif(s_00001,aux16090,aux16091_BOOL);
constraint int_le_reif(s_00007, s_00001,aux16092_BOOL);
constraint array_bool_and([w_00007_00007_BOOL,aux16088_BOOL,aux16089_BOOL,aux16091_BOOL,aux16092_BOOL],aux16093_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux16094_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16095_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16096,s_00008],0);
constraint int_lt_reif(s_00001,aux16096,aux16097_BOOL);
constraint int_le_reif(s_00008, s_00001,aux16098_BOOL);
constraint array_bool_and([w_00007_00008_BOOL,aux16094_BOOL,aux16095_BOOL,aux16097_BOOL,aux16098_BOOL],aux16099_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux16100_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16101_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16102,s_00009],0);
constraint int_lt_reif(s_00001,aux16102,aux16103_BOOL);
constraint int_le_reif(s_00009, s_00001,aux16104_BOOL);
constraint array_bool_and([w_00007_00009_BOOL,aux16100_BOOL,aux16101_BOOL,aux16103_BOOL,aux16104_BOOL],aux16105_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux16106_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux16107_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16108,s_00010],0);
constraint int_lt_reif(s_00001,aux16108,aux16109_BOOL);
constraint int_le_reif(s_00010, s_00001,aux16110_BOOL);
constraint array_bool_and([w_00007_00010_BOOL,aux16106_BOOL,aux16107_BOOL,aux16109_BOOL,aux16110_BOOL],aux16111_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux16112_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux16113_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16114,s_00011],0);
constraint int_lt_reif(s_00001,aux16114,aux16115_BOOL);
constraint int_le_reif(s_00011, s_00001,aux16116_BOOL);
constraint array_bool_and([w_00007_00011_BOOL,aux16112_BOOL,aux16113_BOOL,aux16115_BOOL,aux16116_BOOL],aux16117_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux16118_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux16119_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16120,s_00012],0);
constraint int_lt_reif(s_00001,aux16120,aux16121_BOOL);
constraint int_le_reif(s_00012, s_00001,aux16122_BOOL);
constraint array_bool_and([w_00007_00012_BOOL,aux16118_BOOL,aux16119_BOOL,aux16121_BOOL,aux16122_BOOL],aux16123_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux16124_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux16125_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16126,s_00013],0);
constraint int_lt_reif(s_00001,aux16126,aux16127_BOOL);
constraint int_le_reif(s_00013, s_00001,aux16128_BOOL);
constraint array_bool_and([w_00007_00013_BOOL,aux16124_BOOL,aux16125_BOOL,aux16127_BOOL,aux16128_BOOL],aux16129_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux16130_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux16131_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux16132,s_00014],0);
constraint int_lt_reif(s_00001,aux16132,aux16133_BOOL);
constraint int_le_reif(s_00014, s_00001,aux16134_BOOL);
constraint array_bool_and([w_00007_00014_BOOL,aux16130_BOOL,aux16131_BOOL,aux16133_BOOL,aux16134_BOOL],aux16135_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux16136_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux16137_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16138,s_00015],0);
constraint int_lt_reif(s_00001,aux16138,aux16139_BOOL);
constraint int_le_reif(s_00015, s_00001,aux16140_BOOL);
constraint array_bool_and([w_00007_00015_BOOL,aux16136_BOOL,aux16137_BOOL,aux16139_BOOL,aux16140_BOOL],aux16141_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux16142_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux16143_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16144,s_00016],0);
constraint int_lt_reif(s_00001,aux16144,aux16145_BOOL);
constraint int_le_reif(s_00016, s_00001,aux16146_BOOL);
constraint array_bool_and([w_00007_00016_BOOL,aux16142_BOOL,aux16143_BOOL,aux16145_BOOL,aux16146_BOOL],aux16147_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux16148_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16149_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16150,s_00017],0);
constraint int_lt_reif(s_00001,aux16150,aux16151_BOOL);
constraint int_le_reif(s_00017, s_00001,aux16152_BOOL);
constraint array_bool_and([w_00007_00017_BOOL,aux16148_BOOL,aux16149_BOOL,aux16151_BOOL,aux16152_BOOL],aux16153_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux16154_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux16155_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16156,s_00018],0);
constraint int_lt_reif(s_00001,aux16156,aux16157_BOOL);
constraint int_le_reif(s_00018, s_00001,aux16158_BOOL);
constraint array_bool_and([w_00007_00018_BOOL,aux16154_BOOL,aux16155_BOOL,aux16157_BOOL,aux16158_BOOL],aux16159_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux16160_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux16161_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16162,s_00019],0);
constraint int_lt_reif(s_00001,aux16162,aux16163_BOOL);
constraint int_le_reif(s_00019, s_00001,aux16164_BOOL);
constraint array_bool_and([w_00007_00019_BOOL,aux16160_BOOL,aux16161_BOOL,aux16163_BOOL,aux16164_BOOL],aux16165_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux16166_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16167_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16168,s_00020],0);
constraint int_lt_reif(s_00001,aux16168,aux16169_BOOL);
constraint int_le_reif(s_00020, s_00001,aux16170_BOOL);
constraint array_bool_and([w_00007_00020_BOOL,aux16166_BOOL,aux16167_BOOL,aux16169_BOOL,aux16170_BOOL],aux16171_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux16172_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16173,s_00001],0);
constraint int_lt_reif(s_00001,aux16173,aux16174_BOOL);
constraint array_bool_and([w_00007_00001_BOOL,aux16172_BOOL,aux16174_BOOL],aux16175_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux16063_INTEGER,aux16069_INTEGER,aux16075_INTEGER,aux16081_INTEGER,aux16087_INTEGER,aux16093_INTEGER,aux16099_INTEGER,aux16105_INTEGER,aux16111_INTEGER,aux16117_INTEGER,aux16123_INTEGER,aux16129_INTEGER,aux16135_INTEGER,aux16141_INTEGER,aux16147_INTEGER,aux16153_INTEGER,aux16159_INTEGER,aux16165_INTEGER,aux16171_INTEGER,aux16175_INTEGER,1],0,aux16176_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux16177_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16178_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16179,s_00001],0);
constraint int_lt_reif(s_00008,aux16179,aux16180_BOOL);
constraint int_le_reif(s_00001, s_00008,aux16181_BOOL);
constraint array_bool_and([w_00007_00001_BOOL,aux16177_BOOL,aux16178_BOOL,aux16180_BOOL,aux16181_BOOL],aux16182_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux16183_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16184_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16185,s_00002],0);
constraint int_lt_reif(s_00008,aux16185,aux16186_BOOL);
constraint int_le_reif(s_00002, s_00008,aux16187_BOOL);
constraint array_bool_and([w_00007_00002_BOOL,aux16183_BOOL,aux16184_BOOL,aux16186_BOOL,aux16187_BOOL],aux16188_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux16189_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16190_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16191,s_00003],0);
constraint int_lt_reif(s_00008,aux16191,aux16192_BOOL);
constraint int_le_reif(s_00003, s_00008,aux16193_BOOL);
constraint array_bool_and([w_00007_00003_BOOL,aux16189_BOOL,aux16190_BOOL,aux16192_BOOL,aux16193_BOOL],aux16194_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16195_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16196_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16197,s_00004],0);
constraint int_lt_reif(s_00008,aux16197,aux16198_BOOL);
constraint int_le_reif(s_00004, s_00008,aux16199_BOOL);
constraint array_bool_and([w_00007_00004_BOOL,aux16195_BOOL,aux16196_BOOL,aux16198_BOOL,aux16199_BOOL],aux16200_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux16201_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16202_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16203,s_00005],0);
constraint int_lt_reif(s_00008,aux16203,aux16204_BOOL);
constraint int_le_reif(s_00005, s_00008,aux16205_BOOL);
constraint array_bool_and([w_00007_00005_BOOL,aux16201_BOOL,aux16202_BOOL,aux16204_BOOL,aux16205_BOOL],aux16206_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux16207_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16208_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16209,s_00006],0);
constraint int_lt_reif(s_00008,aux16209,aux16210_BOOL);
constraint int_le_reif(s_00006, s_00008,aux16211_BOOL);
constraint array_bool_and([w_00007_00006_BOOL,aux16207_BOOL,aux16208_BOOL,aux16210_BOOL,aux16211_BOOL],aux16212_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux16213_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16214_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16215,s_00007],0);
constraint int_lt_reif(s_00008,aux16215,aux16216_BOOL);
constraint int_le_reif(s_00007, s_00008,aux16217_BOOL);
constraint array_bool_and([w_00007_00007_BOOL,aux16213_BOOL,aux16214_BOOL,aux16216_BOOL,aux16217_BOOL],aux16218_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16219_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16220_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16221,s_00009],0);
constraint int_lt_reif(s_00008,aux16221,aux16222_BOOL);
constraint int_le_reif(s_00009, s_00008,aux16223_BOOL);
constraint array_bool_and([w_00007_00009_BOOL,aux16219_BOOL,aux16220_BOOL,aux16222_BOOL,aux16223_BOOL],aux16224_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16225_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux16226_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16227,s_00010],0);
constraint int_lt_reif(s_00008,aux16227,aux16228_BOOL);
constraint int_le_reif(s_00010, s_00008,aux16229_BOOL);
constraint array_bool_and([w_00007_00010_BOOL,aux16225_BOOL,aux16226_BOOL,aux16228_BOOL,aux16229_BOOL],aux16230_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16231_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux16232_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16233,s_00011],0);
constraint int_lt_reif(s_00008,aux16233,aux16234_BOOL);
constraint int_le_reif(s_00011, s_00008,aux16235_BOOL);
constraint array_bool_and([w_00007_00011_BOOL,aux16231_BOOL,aux16232_BOOL,aux16234_BOOL,aux16235_BOOL],aux16236_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16237_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux16238_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16239,s_00012],0);
constraint int_lt_reif(s_00008,aux16239,aux16240_BOOL);
constraint int_le_reif(s_00012, s_00008,aux16241_BOOL);
constraint array_bool_and([w_00007_00012_BOOL,aux16237_BOOL,aux16238_BOOL,aux16240_BOOL,aux16241_BOOL],aux16242_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16243_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux16244_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16245,s_00013],0);
constraint int_lt_reif(s_00008,aux16245,aux16246_BOOL);
constraint int_le_reif(s_00013, s_00008,aux16247_BOOL);
constraint array_bool_and([w_00007_00013_BOOL,aux16243_BOOL,aux16244_BOOL,aux16246_BOOL,aux16247_BOOL],aux16248_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16249_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux16250_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux16251,s_00014],0);
constraint int_lt_reif(s_00008,aux16251,aux16252_BOOL);
constraint int_le_reif(s_00014, s_00008,aux16253_BOOL);
constraint array_bool_and([w_00007_00014_BOOL,aux16249_BOOL,aux16250_BOOL,aux16252_BOOL,aux16253_BOOL],aux16254_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16255_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux16256_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16257,s_00015],0);
constraint int_lt_reif(s_00008,aux16257,aux16258_BOOL);
constraint int_le_reif(s_00015, s_00008,aux16259_BOOL);
constraint array_bool_and([w_00007_00015_BOOL,aux16255_BOOL,aux16256_BOOL,aux16258_BOOL,aux16259_BOOL],aux16260_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16261_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux16262_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16263,s_00016],0);
constraint int_lt_reif(s_00008,aux16263,aux16264_BOOL);
constraint int_le_reif(s_00016, s_00008,aux16265_BOOL);
constraint array_bool_and([w_00007_00016_BOOL,aux16261_BOOL,aux16262_BOOL,aux16264_BOOL,aux16265_BOOL],aux16266_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16267_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16268_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16269,s_00017],0);
constraint int_lt_reif(s_00008,aux16269,aux16270_BOOL);
constraint int_le_reif(s_00017, s_00008,aux16271_BOOL);
constraint array_bool_and([w_00007_00017_BOOL,aux16267_BOOL,aux16268_BOOL,aux16270_BOOL,aux16271_BOOL],aux16272_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16273_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux16274_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16275,s_00018],0);
constraint int_lt_reif(s_00008,aux16275,aux16276_BOOL);
constraint int_le_reif(s_00018, s_00008,aux16277_BOOL);
constraint array_bool_and([w_00007_00018_BOOL,aux16273_BOOL,aux16274_BOOL,aux16276_BOOL,aux16277_BOOL],aux16278_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16279_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux16280_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16281,s_00019],0);
constraint int_lt_reif(s_00008,aux16281,aux16282_BOOL);
constraint int_le_reif(s_00019, s_00008,aux16283_BOOL);
constraint array_bool_and([w_00007_00019_BOOL,aux16279_BOOL,aux16280_BOOL,aux16282_BOOL,aux16283_BOOL],aux16284_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16285_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16286_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16287,s_00020],0);
constraint int_lt_reif(s_00008,aux16287,aux16288_BOOL);
constraint int_le_reif(s_00020, s_00008,aux16289_BOOL);
constraint array_bool_and([w_00007_00020_BOOL,aux16285_BOOL,aux16286_BOOL,aux16288_BOOL,aux16289_BOOL],aux16290_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16291_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16292,s_00008],0);
constraint int_lt_reif(s_00008,aux16292,aux16293_BOOL);
constraint array_bool_and([w_00007_00008_BOOL,aux16291_BOOL,aux16293_BOOL],aux16294_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux16182_INTEGER,aux16188_INTEGER,aux16194_INTEGER,aux16200_INTEGER,aux16206_INTEGER,aux16212_INTEGER,aux16218_INTEGER,aux16224_INTEGER,aux16230_INTEGER,aux16236_INTEGER,aux16242_INTEGER,aux16248_INTEGER,aux16254_INTEGER,aux16260_INTEGER,aux16266_INTEGER,aux16272_INTEGER,aux16278_INTEGER,aux16284_INTEGER,aux16290_INTEGER,aux16294_INTEGER,1],0,aux16295_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux16296_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux16297_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16298,s_00001],0);
constraint int_lt_reif(s_00019,aux16298,aux16299_BOOL);
constraint int_le_reif(s_00001, s_00019,aux16300_BOOL);
constraint array_bool_and([w_00007_00001_BOOL,aux16296_BOOL,aux16297_BOOL,aux16299_BOOL,aux16300_BOOL],aux16301_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux16302_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux16303_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16304,s_00002],0);
constraint int_lt_reif(s_00019,aux16304,aux16305_BOOL);
constraint int_le_reif(s_00002, s_00019,aux16306_BOOL);
constraint array_bool_and([w_00007_00002_BOOL,aux16302_BOOL,aux16303_BOOL,aux16305_BOOL,aux16306_BOOL],aux16307_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux16308_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux16309_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16310,s_00003],0);
constraint int_lt_reif(s_00019,aux16310,aux16311_BOOL);
constraint int_le_reif(s_00003, s_00019,aux16312_BOOL);
constraint array_bool_and([w_00007_00003_BOOL,aux16308_BOOL,aux16309_BOOL,aux16311_BOOL,aux16312_BOOL],aux16313_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16314_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux16315_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16316,s_00004],0);
constraint int_lt_reif(s_00019,aux16316,aux16317_BOOL);
constraint int_le_reif(s_00004, s_00019,aux16318_BOOL);
constraint array_bool_and([w_00007_00004_BOOL,aux16314_BOOL,aux16315_BOOL,aux16317_BOOL,aux16318_BOOL],aux16319_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux16320_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux16321_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16322,s_00005],0);
constraint int_lt_reif(s_00019,aux16322,aux16323_BOOL);
constraint int_le_reif(s_00005, s_00019,aux16324_BOOL);
constraint array_bool_and([w_00007_00005_BOOL,aux16320_BOOL,aux16321_BOOL,aux16323_BOOL,aux16324_BOOL],aux16325_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux16326_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux16327_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16328,s_00006],0);
constraint int_lt_reif(s_00019,aux16328,aux16329_BOOL);
constraint int_le_reif(s_00006, s_00019,aux16330_BOOL);
constraint array_bool_and([w_00007_00006_BOOL,aux16326_BOOL,aux16327_BOOL,aux16329_BOOL,aux16330_BOOL],aux16331_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux16332_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux16333_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16334,s_00007],0);
constraint int_lt_reif(s_00019,aux16334,aux16335_BOOL);
constraint int_le_reif(s_00007, s_00019,aux16336_BOOL);
constraint array_bool_and([w_00007_00007_BOOL,aux16332_BOOL,aux16333_BOOL,aux16335_BOOL,aux16336_BOOL],aux16337_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16338_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux16339_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16340,s_00008],0);
constraint int_lt_reif(s_00019,aux16340,aux16341_BOOL);
constraint int_le_reif(s_00008, s_00019,aux16342_BOOL);
constraint array_bool_and([w_00007_00008_BOOL,aux16338_BOOL,aux16339_BOOL,aux16341_BOOL,aux16342_BOOL],aux16343_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16344_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux16345_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16346,s_00009],0);
constraint int_lt_reif(s_00019,aux16346,aux16347_BOOL);
constraint int_le_reif(s_00009, s_00019,aux16348_BOOL);
constraint array_bool_and([w_00007_00009_BOOL,aux16344_BOOL,aux16345_BOOL,aux16347_BOOL,aux16348_BOOL],aux16349_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux16350_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux16351_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16352,s_00010],0);
constraint int_lt_reif(s_00019,aux16352,aux16353_BOOL);
constraint int_le_reif(s_00010, s_00019,aux16354_BOOL);
constraint array_bool_and([w_00007_00010_BOOL,aux16350_BOOL,aux16351_BOOL,aux16353_BOOL,aux16354_BOOL],aux16355_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux16356_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux16357_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16358,s_00011],0);
constraint int_lt_reif(s_00019,aux16358,aux16359_BOOL);
constraint int_le_reif(s_00011, s_00019,aux16360_BOOL);
constraint array_bool_and([w_00007_00011_BOOL,aux16356_BOOL,aux16357_BOOL,aux16359_BOOL,aux16360_BOOL],aux16361_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux16362_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux16363_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16364,s_00012],0);
constraint int_lt_reif(s_00019,aux16364,aux16365_BOOL);
constraint int_le_reif(s_00012, s_00019,aux16366_BOOL);
constraint array_bool_and([w_00007_00012_BOOL,aux16362_BOOL,aux16363_BOOL,aux16365_BOOL,aux16366_BOOL],aux16367_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux16368_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux16369_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16370,s_00013],0);
constraint int_lt_reif(s_00019,aux16370,aux16371_BOOL);
constraint int_le_reif(s_00013, s_00019,aux16372_BOOL);
constraint array_bool_and([w_00007_00013_BOOL,aux16368_BOOL,aux16369_BOOL,aux16371_BOOL,aux16372_BOOL],aux16373_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux16374_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux16375_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux16376,s_00014],0);
constraint int_lt_reif(s_00019,aux16376,aux16377_BOOL);
constraint int_le_reif(s_00014, s_00019,aux16378_BOOL);
constraint array_bool_and([w_00007_00014_BOOL,aux16374_BOOL,aux16375_BOOL,aux16377_BOOL,aux16378_BOOL],aux16379_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux16380_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux16381_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16382,s_00015],0);
constraint int_lt_reif(s_00019,aux16382,aux16383_BOOL);
constraint int_le_reif(s_00015, s_00019,aux16384_BOOL);
constraint array_bool_and([w_00007_00015_BOOL,aux16380_BOOL,aux16381_BOOL,aux16383_BOOL,aux16384_BOOL],aux16385_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux16386_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux16387_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16388,s_00016],0);
constraint int_lt_reif(s_00019,aux16388,aux16389_BOOL);
constraint int_le_reif(s_00016, s_00019,aux16390_BOOL);
constraint array_bool_and([w_00007_00016_BOOL,aux16386_BOOL,aux16387_BOOL,aux16389_BOOL,aux16390_BOOL],aux16391_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16392_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux16393_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16394,s_00017],0);
constraint int_lt_reif(s_00019,aux16394,aux16395_BOOL);
constraint int_le_reif(s_00017, s_00019,aux16396_BOOL);
constraint array_bool_and([w_00007_00017_BOOL,aux16392_BOOL,aux16393_BOOL,aux16395_BOOL,aux16396_BOOL],aux16397_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux16398_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux16399_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16400,s_00018],0);
constraint int_lt_reif(s_00019,aux16400,aux16401_BOOL);
constraint int_le_reif(s_00018, s_00019,aux16402_BOOL);
constraint array_bool_and([w_00007_00018_BOOL,aux16398_BOOL,aux16399_BOOL,aux16401_BOOL,aux16402_BOOL],aux16403_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux16404_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16405_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16406,s_00020],0);
constraint int_lt_reif(s_00019,aux16406,aux16407_BOOL);
constraint int_le_reif(s_00020, s_00019,aux16408_BOOL);
constraint array_bool_and([w_00007_00020_BOOL,aux16404_BOOL,aux16405_BOOL,aux16407_BOOL,aux16408_BOOL],aux16409_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux16410_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16411,s_00019],0);
constraint int_lt_reif(s_00019,aux16411,aux16412_BOOL);
constraint array_bool_and([w_00007_00019_BOOL,aux16410_BOOL,aux16412_BOOL],aux16413_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux16301_INTEGER,aux16307_INTEGER,aux16313_INTEGER,aux16319_INTEGER,aux16325_INTEGER,aux16331_INTEGER,aux16337_INTEGER,aux16343_INTEGER,aux16349_INTEGER,aux16355_INTEGER,aux16361_INTEGER,aux16367_INTEGER,aux16373_INTEGER,aux16379_INTEGER,aux16385_INTEGER,aux16391_INTEGER,aux16397_INTEGER,aux16403_INTEGER,aux16409_INTEGER,aux16413_INTEGER,1],0,aux16414_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux16415_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16416_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16417,s_00001],0);
constraint int_lt_reif(s_00004,aux16417,aux16418_BOOL);
constraint int_le_reif(s_00001, s_00004,aux16419_BOOL);
constraint array_bool_and([w_00007_00001_BOOL,aux16415_BOOL,aux16416_BOOL,aux16418_BOOL,aux16419_BOOL],aux16420_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux16421_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16422_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16423,s_00002],0);
constraint int_lt_reif(s_00004,aux16423,aux16424_BOOL);
constraint int_le_reif(s_00002, s_00004,aux16425_BOOL);
constraint array_bool_and([w_00007_00002_BOOL,aux16421_BOOL,aux16422_BOOL,aux16424_BOOL,aux16425_BOOL],aux16426_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux16427_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16428_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16429,s_00003],0);
constraint int_lt_reif(s_00004,aux16429,aux16430_BOOL);
constraint int_le_reif(s_00003, s_00004,aux16431_BOOL);
constraint array_bool_and([w_00007_00003_BOOL,aux16427_BOOL,aux16428_BOOL,aux16430_BOOL,aux16431_BOOL],aux16432_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16433_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux16434_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16435,s_00005],0);
constraint int_lt_reif(s_00004,aux16435,aux16436_BOOL);
constraint int_le_reif(s_00005, s_00004,aux16437_BOOL);
constraint array_bool_and([w_00007_00005_BOOL,aux16433_BOOL,aux16434_BOOL,aux16436_BOOL,aux16437_BOOL],aux16438_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16439_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux16440_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16441,s_00006],0);
constraint int_lt_reif(s_00004,aux16441,aux16442_BOOL);
constraint int_le_reif(s_00006, s_00004,aux16443_BOOL);
constraint array_bool_and([w_00007_00006_BOOL,aux16439_BOOL,aux16440_BOOL,aux16442_BOOL,aux16443_BOOL],aux16444_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16445_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux16446_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16447,s_00007],0);
constraint int_lt_reif(s_00004,aux16447,aux16448_BOOL);
constraint int_le_reif(s_00007, s_00004,aux16449_BOOL);
constraint array_bool_and([w_00007_00007_BOOL,aux16445_BOOL,aux16446_BOOL,aux16448_BOOL,aux16449_BOOL],aux16450_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16451_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16452_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16453,s_00008],0);
constraint int_lt_reif(s_00004,aux16453,aux16454_BOOL);
constraint int_le_reif(s_00008, s_00004,aux16455_BOOL);
constraint array_bool_and([w_00007_00008_BOOL,aux16451_BOOL,aux16452_BOOL,aux16454_BOOL,aux16455_BOOL],aux16456_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16457_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16458_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16459,s_00009],0);
constraint int_lt_reif(s_00004,aux16459,aux16460_BOOL);
constraint int_le_reif(s_00009, s_00004,aux16461_BOOL);
constraint array_bool_and([w_00007_00009_BOOL,aux16457_BOOL,aux16458_BOOL,aux16460_BOOL,aux16461_BOOL],aux16462_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16463_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux16464_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16465,s_00010],0);
constraint int_lt_reif(s_00004,aux16465,aux16466_BOOL);
constraint int_le_reif(s_00010, s_00004,aux16467_BOOL);
constraint array_bool_and([w_00007_00010_BOOL,aux16463_BOOL,aux16464_BOOL,aux16466_BOOL,aux16467_BOOL],aux16468_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16469_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux16470_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16471,s_00011],0);
constraint int_lt_reif(s_00004,aux16471,aux16472_BOOL);
constraint int_le_reif(s_00011, s_00004,aux16473_BOOL);
constraint array_bool_and([w_00007_00011_BOOL,aux16469_BOOL,aux16470_BOOL,aux16472_BOOL,aux16473_BOOL],aux16474_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16475_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux16476_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16477,s_00012],0);
constraint int_lt_reif(s_00004,aux16477,aux16478_BOOL);
constraint int_le_reif(s_00012, s_00004,aux16479_BOOL);
constraint array_bool_and([w_00007_00012_BOOL,aux16475_BOOL,aux16476_BOOL,aux16478_BOOL,aux16479_BOOL],aux16480_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16481_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux16482_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16483,s_00013],0);
constraint int_lt_reif(s_00004,aux16483,aux16484_BOOL);
constraint int_le_reif(s_00013, s_00004,aux16485_BOOL);
constraint array_bool_and([w_00007_00013_BOOL,aux16481_BOOL,aux16482_BOOL,aux16484_BOOL,aux16485_BOOL],aux16486_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16487_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux16488_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux16489,s_00014],0);
constraint int_lt_reif(s_00004,aux16489,aux16490_BOOL);
constraint int_le_reif(s_00014, s_00004,aux16491_BOOL);
constraint array_bool_and([w_00007_00014_BOOL,aux16487_BOOL,aux16488_BOOL,aux16490_BOOL,aux16491_BOOL],aux16492_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16493_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux16494_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16495,s_00015],0);
constraint int_lt_reif(s_00004,aux16495,aux16496_BOOL);
constraint int_le_reif(s_00015, s_00004,aux16497_BOOL);
constraint array_bool_and([w_00007_00015_BOOL,aux16493_BOOL,aux16494_BOOL,aux16496_BOOL,aux16497_BOOL],aux16498_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16499_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux16500_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16501,s_00016],0);
constraint int_lt_reif(s_00004,aux16501,aux16502_BOOL);
constraint int_le_reif(s_00016, s_00004,aux16503_BOOL);
constraint array_bool_and([w_00007_00016_BOOL,aux16499_BOOL,aux16500_BOOL,aux16502_BOOL,aux16503_BOOL],aux16504_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16505_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16506_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16507,s_00017],0);
constraint int_lt_reif(s_00004,aux16507,aux16508_BOOL);
constraint int_le_reif(s_00017, s_00004,aux16509_BOOL);
constraint array_bool_and([w_00007_00017_BOOL,aux16505_BOOL,aux16506_BOOL,aux16508_BOOL,aux16509_BOOL],aux16510_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16511_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux16512_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16513,s_00018],0);
constraint int_lt_reif(s_00004,aux16513,aux16514_BOOL);
constraint int_le_reif(s_00018, s_00004,aux16515_BOOL);
constraint array_bool_and([w_00007_00018_BOOL,aux16511_BOOL,aux16512_BOOL,aux16514_BOOL,aux16515_BOOL],aux16516_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16517_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux16518_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16519,s_00019],0);
constraint int_lt_reif(s_00004,aux16519,aux16520_BOOL);
constraint int_le_reif(s_00019, s_00004,aux16521_BOOL);
constraint array_bool_and([w_00007_00019_BOOL,aux16517_BOOL,aux16518_BOOL,aux16520_BOOL,aux16521_BOOL],aux16522_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16523_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16524_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16525,s_00020],0);
constraint int_lt_reif(s_00004,aux16525,aux16526_BOOL);
constraint int_le_reif(s_00020, s_00004,aux16527_BOOL);
constraint array_bool_and([w_00007_00020_BOOL,aux16523_BOOL,aux16524_BOOL,aux16526_BOOL,aux16527_BOOL],aux16528_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16529_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16530,s_00004],0);
constraint int_lt_reif(s_00004,aux16530,aux16531_BOOL);
constraint array_bool_and([w_00007_00004_BOOL,aux16529_BOOL,aux16531_BOOL],aux16532_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux16420_INTEGER,aux16426_INTEGER,aux16432_INTEGER,aux16438_INTEGER,aux16444_INTEGER,aux16450_INTEGER,aux16456_INTEGER,aux16462_INTEGER,aux16468_INTEGER,aux16474_INTEGER,aux16480_INTEGER,aux16486_INTEGER,aux16492_INTEGER,aux16498_INTEGER,aux16504_INTEGER,aux16510_INTEGER,aux16516_INTEGER,aux16522_INTEGER,aux16528_INTEGER,aux16532_INTEGER,1],0,aux16533_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux16534_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16535_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16536,s_00001],0);
constraint int_lt_reif(s_00009,aux16536,aux16537_BOOL);
constraint int_le_reif(s_00001, s_00009,aux16538_BOOL);
constraint array_bool_and([w_00007_00001_BOOL,aux16534_BOOL,aux16535_BOOL,aux16537_BOOL,aux16538_BOOL],aux16539_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux16540_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16541_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16542,s_00002],0);
constraint int_lt_reif(s_00009,aux16542,aux16543_BOOL);
constraint int_le_reif(s_00002, s_00009,aux16544_BOOL);
constraint array_bool_and([w_00007_00002_BOOL,aux16540_BOOL,aux16541_BOOL,aux16543_BOOL,aux16544_BOOL],aux16545_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux16546_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16547_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16548,s_00003],0);
constraint int_lt_reif(s_00009,aux16548,aux16549_BOOL);
constraint int_le_reif(s_00003, s_00009,aux16550_BOOL);
constraint array_bool_and([w_00007_00003_BOOL,aux16546_BOOL,aux16547_BOOL,aux16549_BOOL,aux16550_BOOL],aux16551_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16552_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16553_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16554,s_00004],0);
constraint int_lt_reif(s_00009,aux16554,aux16555_BOOL);
constraint int_le_reif(s_00004, s_00009,aux16556_BOOL);
constraint array_bool_and([w_00007_00004_BOOL,aux16552_BOOL,aux16553_BOOL,aux16555_BOOL,aux16556_BOOL],aux16557_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux16558_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16559_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16560,s_00005],0);
constraint int_lt_reif(s_00009,aux16560,aux16561_BOOL);
constraint int_le_reif(s_00005, s_00009,aux16562_BOOL);
constraint array_bool_and([w_00007_00005_BOOL,aux16558_BOOL,aux16559_BOOL,aux16561_BOOL,aux16562_BOOL],aux16563_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux16564_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16565_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16566,s_00006],0);
constraint int_lt_reif(s_00009,aux16566,aux16567_BOOL);
constraint int_le_reif(s_00006, s_00009,aux16568_BOOL);
constraint array_bool_and([w_00007_00006_BOOL,aux16564_BOOL,aux16565_BOOL,aux16567_BOOL,aux16568_BOOL],aux16569_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux16570_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16571_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16572,s_00007],0);
constraint int_lt_reif(s_00009,aux16572,aux16573_BOOL);
constraint int_le_reif(s_00007, s_00009,aux16574_BOOL);
constraint array_bool_and([w_00007_00007_BOOL,aux16570_BOOL,aux16571_BOOL,aux16573_BOOL,aux16574_BOOL],aux16575_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16576_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16577_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16578,s_00008],0);
constraint int_lt_reif(s_00009,aux16578,aux16579_BOOL);
constraint int_le_reif(s_00008, s_00009,aux16580_BOOL);
constraint array_bool_and([w_00007_00008_BOOL,aux16576_BOOL,aux16577_BOOL,aux16579_BOOL,aux16580_BOOL],aux16581_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16582_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux16583_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16584,s_00010],0);
constraint int_lt_reif(s_00009,aux16584,aux16585_BOOL);
constraint int_le_reif(s_00010, s_00009,aux16586_BOOL);
constraint array_bool_and([w_00007_00010_BOOL,aux16582_BOOL,aux16583_BOOL,aux16585_BOOL,aux16586_BOOL],aux16587_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16588_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux16589_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16590,s_00011],0);
constraint int_lt_reif(s_00009,aux16590,aux16591_BOOL);
constraint int_le_reif(s_00011, s_00009,aux16592_BOOL);
constraint array_bool_and([w_00007_00011_BOOL,aux16588_BOOL,aux16589_BOOL,aux16591_BOOL,aux16592_BOOL],aux16593_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16594_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux16595_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16596,s_00012],0);
constraint int_lt_reif(s_00009,aux16596,aux16597_BOOL);
constraint int_le_reif(s_00012, s_00009,aux16598_BOOL);
constraint array_bool_and([w_00007_00012_BOOL,aux16594_BOOL,aux16595_BOOL,aux16597_BOOL,aux16598_BOOL],aux16599_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16600_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux16601_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16602,s_00013],0);
constraint int_lt_reif(s_00009,aux16602,aux16603_BOOL);
constraint int_le_reif(s_00013, s_00009,aux16604_BOOL);
constraint array_bool_and([w_00007_00013_BOOL,aux16600_BOOL,aux16601_BOOL,aux16603_BOOL,aux16604_BOOL],aux16605_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16606_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux16607_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux16608,s_00014],0);
constraint int_lt_reif(s_00009,aux16608,aux16609_BOOL);
constraint int_le_reif(s_00014, s_00009,aux16610_BOOL);
constraint array_bool_and([w_00007_00014_BOOL,aux16606_BOOL,aux16607_BOOL,aux16609_BOOL,aux16610_BOOL],aux16611_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16612_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux16613_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16614,s_00015],0);
constraint int_lt_reif(s_00009,aux16614,aux16615_BOOL);
constraint int_le_reif(s_00015, s_00009,aux16616_BOOL);
constraint array_bool_and([w_00007_00015_BOOL,aux16612_BOOL,aux16613_BOOL,aux16615_BOOL,aux16616_BOOL],aux16617_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16618_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux16619_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16620,s_00016],0);
constraint int_lt_reif(s_00009,aux16620,aux16621_BOOL);
constraint int_le_reif(s_00016, s_00009,aux16622_BOOL);
constraint array_bool_and([w_00007_00016_BOOL,aux16618_BOOL,aux16619_BOOL,aux16621_BOOL,aux16622_BOOL],aux16623_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16624_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16625_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16626,s_00017],0);
constraint int_lt_reif(s_00009,aux16626,aux16627_BOOL);
constraint int_le_reif(s_00017, s_00009,aux16628_BOOL);
constraint array_bool_and([w_00007_00017_BOOL,aux16624_BOOL,aux16625_BOOL,aux16627_BOOL,aux16628_BOOL],aux16629_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16630_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux16631_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16632,s_00018],0);
constraint int_lt_reif(s_00009,aux16632,aux16633_BOOL);
constraint int_le_reif(s_00018, s_00009,aux16634_BOOL);
constraint array_bool_and([w_00007_00018_BOOL,aux16630_BOOL,aux16631_BOOL,aux16633_BOOL,aux16634_BOOL],aux16635_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16636_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux16637_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16638,s_00019],0);
constraint int_lt_reif(s_00009,aux16638,aux16639_BOOL);
constraint int_le_reif(s_00019, s_00009,aux16640_BOOL);
constraint array_bool_and([w_00007_00019_BOOL,aux16636_BOOL,aux16637_BOOL,aux16639_BOOL,aux16640_BOOL],aux16641_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16642_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16643_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16644,s_00020],0);
constraint int_lt_reif(s_00009,aux16644,aux16645_BOOL);
constraint int_le_reif(s_00020, s_00009,aux16646_BOOL);
constraint array_bool_and([w_00007_00020_BOOL,aux16642_BOOL,aux16643_BOOL,aux16645_BOOL,aux16646_BOOL],aux16647_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16648_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16649,s_00009],0);
constraint int_lt_reif(s_00009,aux16649,aux16650_BOOL);
constraint array_bool_and([w_00007_00009_BOOL,aux16648_BOOL,aux16650_BOOL],aux16651_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux16539_INTEGER,aux16545_INTEGER,aux16551_INTEGER,aux16557_INTEGER,aux16563_INTEGER,aux16569_INTEGER,aux16575_INTEGER,aux16581_INTEGER,aux16587_INTEGER,aux16593_INTEGER,aux16599_INTEGER,aux16605_INTEGER,aux16611_INTEGER,aux16617_INTEGER,aux16623_INTEGER,aux16629_INTEGER,aux16635_INTEGER,aux16641_INTEGER,aux16647_INTEGER,aux16651_INTEGER,1],0,aux16652_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux16653_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux16654_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16655,s_00001],0);
constraint int_lt_reif(s_00016,aux16655,aux16656_BOOL);
constraint int_le_reif(s_00001, s_00016,aux16657_BOOL);
constraint array_bool_and([w_00007_00001_BOOL,aux16653_BOOL,aux16654_BOOL,aux16656_BOOL,aux16657_BOOL],aux16658_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux16659_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux16660_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16661,s_00002],0);
constraint int_lt_reif(s_00016,aux16661,aux16662_BOOL);
constraint int_le_reif(s_00002, s_00016,aux16663_BOOL);
constraint array_bool_and([w_00007_00002_BOOL,aux16659_BOOL,aux16660_BOOL,aux16662_BOOL,aux16663_BOOL],aux16664_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux16665_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux16666_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16667,s_00003],0);
constraint int_lt_reif(s_00016,aux16667,aux16668_BOOL);
constraint int_le_reif(s_00003, s_00016,aux16669_BOOL);
constraint array_bool_and([w_00007_00003_BOOL,aux16665_BOOL,aux16666_BOOL,aux16668_BOOL,aux16669_BOOL],aux16670_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16671_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux16672_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16673,s_00004],0);
constraint int_lt_reif(s_00016,aux16673,aux16674_BOOL);
constraint int_le_reif(s_00004, s_00016,aux16675_BOOL);
constraint array_bool_and([w_00007_00004_BOOL,aux16671_BOOL,aux16672_BOOL,aux16674_BOOL,aux16675_BOOL],aux16676_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux16677_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux16678_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16679,s_00005],0);
constraint int_lt_reif(s_00016,aux16679,aux16680_BOOL);
constraint int_le_reif(s_00005, s_00016,aux16681_BOOL);
constraint array_bool_and([w_00007_00005_BOOL,aux16677_BOOL,aux16678_BOOL,aux16680_BOOL,aux16681_BOOL],aux16682_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux16683_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux16684_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16685,s_00006],0);
constraint int_lt_reif(s_00016,aux16685,aux16686_BOOL);
constraint int_le_reif(s_00006, s_00016,aux16687_BOOL);
constraint array_bool_and([w_00007_00006_BOOL,aux16683_BOOL,aux16684_BOOL,aux16686_BOOL,aux16687_BOOL],aux16688_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux16689_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux16690_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16691,s_00007],0);
constraint int_lt_reif(s_00016,aux16691,aux16692_BOOL);
constraint int_le_reif(s_00007, s_00016,aux16693_BOOL);
constraint array_bool_and([w_00007_00007_BOOL,aux16689_BOOL,aux16690_BOOL,aux16692_BOOL,aux16693_BOOL],aux16694_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16695_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux16696_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16697,s_00008],0);
constraint int_lt_reif(s_00016,aux16697,aux16698_BOOL);
constraint int_le_reif(s_00008, s_00016,aux16699_BOOL);
constraint array_bool_and([w_00007_00008_BOOL,aux16695_BOOL,aux16696_BOOL,aux16698_BOOL,aux16699_BOOL],aux16700_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16701_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux16702_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16703,s_00009],0);
constraint int_lt_reif(s_00016,aux16703,aux16704_BOOL);
constraint int_le_reif(s_00009, s_00016,aux16705_BOOL);
constraint array_bool_and([w_00007_00009_BOOL,aux16701_BOOL,aux16702_BOOL,aux16704_BOOL,aux16705_BOOL],aux16706_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux16707_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux16708_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16709,s_00010],0);
constraint int_lt_reif(s_00016,aux16709,aux16710_BOOL);
constraint int_le_reif(s_00010, s_00016,aux16711_BOOL);
constraint array_bool_and([w_00007_00010_BOOL,aux16707_BOOL,aux16708_BOOL,aux16710_BOOL,aux16711_BOOL],aux16712_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux16713_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux16714_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16715,s_00011],0);
constraint int_lt_reif(s_00016,aux16715,aux16716_BOOL);
constraint int_le_reif(s_00011, s_00016,aux16717_BOOL);
constraint array_bool_and([w_00007_00011_BOOL,aux16713_BOOL,aux16714_BOOL,aux16716_BOOL,aux16717_BOOL],aux16718_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux16719_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux16720_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16721,s_00012],0);
constraint int_lt_reif(s_00016,aux16721,aux16722_BOOL);
constraint int_le_reif(s_00012, s_00016,aux16723_BOOL);
constraint array_bool_and([w_00007_00012_BOOL,aux16719_BOOL,aux16720_BOOL,aux16722_BOOL,aux16723_BOOL],aux16724_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux16725_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux16726_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16727,s_00013],0);
constraint int_lt_reif(s_00016,aux16727,aux16728_BOOL);
constraint int_le_reif(s_00013, s_00016,aux16729_BOOL);
constraint array_bool_and([w_00007_00013_BOOL,aux16725_BOOL,aux16726_BOOL,aux16728_BOOL,aux16729_BOOL],aux16730_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux16731_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux16732_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux16733,s_00014],0);
constraint int_lt_reif(s_00016,aux16733,aux16734_BOOL);
constraint int_le_reif(s_00014, s_00016,aux16735_BOOL);
constraint array_bool_and([w_00007_00014_BOOL,aux16731_BOOL,aux16732_BOOL,aux16734_BOOL,aux16735_BOOL],aux16736_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux16737_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux16738_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16739,s_00015],0);
constraint int_lt_reif(s_00016,aux16739,aux16740_BOOL);
constraint int_le_reif(s_00015, s_00016,aux16741_BOOL);
constraint array_bool_and([w_00007_00015_BOOL,aux16737_BOOL,aux16738_BOOL,aux16740_BOOL,aux16741_BOOL],aux16742_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux16743_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16744_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16745,s_00017],0);
constraint int_lt_reif(s_00016,aux16745,aux16746_BOOL);
constraint int_le_reif(s_00017, s_00016,aux16747_BOOL);
constraint array_bool_and([w_00007_00017_BOOL,aux16743_BOOL,aux16744_BOOL,aux16746_BOOL,aux16747_BOOL],aux16748_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux16749_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux16750_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16751,s_00018],0);
constraint int_lt_reif(s_00016,aux16751,aux16752_BOOL);
constraint int_le_reif(s_00018, s_00016,aux16753_BOOL);
constraint array_bool_and([w_00007_00018_BOOL,aux16749_BOOL,aux16750_BOOL,aux16752_BOOL,aux16753_BOOL],aux16754_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux16755_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux16756_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16757,s_00019],0);
constraint int_lt_reif(s_00016,aux16757,aux16758_BOOL);
constraint int_le_reif(s_00019, s_00016,aux16759_BOOL);
constraint array_bool_and([w_00007_00019_BOOL,aux16755_BOOL,aux16756_BOOL,aux16758_BOOL,aux16759_BOOL],aux16760_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux16761_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16762_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16763,s_00020],0);
constraint int_lt_reif(s_00016,aux16763,aux16764_BOOL);
constraint int_le_reif(s_00020, s_00016,aux16765_BOOL);
constraint array_bool_and([w_00007_00020_BOOL,aux16761_BOOL,aux16762_BOOL,aux16764_BOOL,aux16765_BOOL],aux16766_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux16767_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16768,s_00016],0);
constraint int_lt_reif(s_00016,aux16768,aux16769_BOOL);
constraint array_bool_and([w_00007_00016_BOOL,aux16767_BOOL,aux16769_BOOL],aux16770_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux16658_INTEGER,aux16664_INTEGER,aux16670_INTEGER,aux16676_INTEGER,aux16682_INTEGER,aux16688_INTEGER,aux16694_INTEGER,aux16700_INTEGER,aux16706_INTEGER,aux16712_INTEGER,aux16718_INTEGER,aux16724_INTEGER,aux16730_INTEGER,aux16736_INTEGER,aux16742_INTEGER,aux16748_INTEGER,aux16754_INTEGER,aux16760_INTEGER,aux16766_INTEGER,aux16770_INTEGER,1],0,aux16771_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux16772_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16773_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16774,s_00001],0);
constraint int_lt_reif(s_00017,aux16774,aux16775_BOOL);
constraint int_le_reif(s_00001, s_00017,aux16776_BOOL);
constraint array_bool_and([w_00007_00001_BOOL,aux16772_BOOL,aux16773_BOOL,aux16775_BOOL,aux16776_BOOL],aux16777_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux16778_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16779_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16780,s_00002],0);
constraint int_lt_reif(s_00017,aux16780,aux16781_BOOL);
constraint int_le_reif(s_00002, s_00017,aux16782_BOOL);
constraint array_bool_and([w_00007_00002_BOOL,aux16778_BOOL,aux16779_BOOL,aux16781_BOOL,aux16782_BOOL],aux16783_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux16784_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16785_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16786,s_00003],0);
constraint int_lt_reif(s_00017,aux16786,aux16787_BOOL);
constraint int_le_reif(s_00003, s_00017,aux16788_BOOL);
constraint array_bool_and([w_00007_00003_BOOL,aux16784_BOOL,aux16785_BOOL,aux16787_BOOL,aux16788_BOOL],aux16789_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16790_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16791_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16792,s_00004],0);
constraint int_lt_reif(s_00017,aux16792,aux16793_BOOL);
constraint int_le_reif(s_00004, s_00017,aux16794_BOOL);
constraint array_bool_and([w_00007_00004_BOOL,aux16790_BOOL,aux16791_BOOL,aux16793_BOOL,aux16794_BOOL],aux16795_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux16796_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16797_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16798,s_00005],0);
constraint int_lt_reif(s_00017,aux16798,aux16799_BOOL);
constraint int_le_reif(s_00005, s_00017,aux16800_BOOL);
constraint array_bool_and([w_00007_00005_BOOL,aux16796_BOOL,aux16797_BOOL,aux16799_BOOL,aux16800_BOOL],aux16801_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux16802_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16803_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16804,s_00006],0);
constraint int_lt_reif(s_00017,aux16804,aux16805_BOOL);
constraint int_le_reif(s_00006, s_00017,aux16806_BOOL);
constraint array_bool_and([w_00007_00006_BOOL,aux16802_BOOL,aux16803_BOOL,aux16805_BOOL,aux16806_BOOL],aux16807_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux16808_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16809_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16810,s_00007],0);
constraint int_lt_reif(s_00017,aux16810,aux16811_BOOL);
constraint int_le_reif(s_00007, s_00017,aux16812_BOOL);
constraint array_bool_and([w_00007_00007_BOOL,aux16808_BOOL,aux16809_BOOL,aux16811_BOOL,aux16812_BOOL],aux16813_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16814_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16815_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16816,s_00008],0);
constraint int_lt_reif(s_00017,aux16816,aux16817_BOOL);
constraint int_le_reif(s_00008, s_00017,aux16818_BOOL);
constraint array_bool_and([w_00007_00008_BOOL,aux16814_BOOL,aux16815_BOOL,aux16817_BOOL,aux16818_BOOL],aux16819_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16820_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16821_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16822,s_00009],0);
constraint int_lt_reif(s_00017,aux16822,aux16823_BOOL);
constraint int_le_reif(s_00009, s_00017,aux16824_BOOL);
constraint array_bool_and([w_00007_00009_BOOL,aux16820_BOOL,aux16821_BOOL,aux16823_BOOL,aux16824_BOOL],aux16825_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux16826_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16827_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16828,s_00010],0);
constraint int_lt_reif(s_00017,aux16828,aux16829_BOOL);
constraint int_le_reif(s_00010, s_00017,aux16830_BOOL);
constraint array_bool_and([w_00007_00010_BOOL,aux16826_BOOL,aux16827_BOOL,aux16829_BOOL,aux16830_BOOL],aux16831_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux16832_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16833_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16834,s_00011],0);
constraint int_lt_reif(s_00017,aux16834,aux16835_BOOL);
constraint int_le_reif(s_00011, s_00017,aux16836_BOOL);
constraint array_bool_and([w_00007_00011_BOOL,aux16832_BOOL,aux16833_BOOL,aux16835_BOOL,aux16836_BOOL],aux16837_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux16838_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16839_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16840,s_00012],0);
constraint int_lt_reif(s_00017,aux16840,aux16841_BOOL);
constraint int_le_reif(s_00012, s_00017,aux16842_BOOL);
constraint array_bool_and([w_00007_00012_BOOL,aux16838_BOOL,aux16839_BOOL,aux16841_BOOL,aux16842_BOOL],aux16843_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux16844_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16845_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16846,s_00013],0);
constraint int_lt_reif(s_00017,aux16846,aux16847_BOOL);
constraint int_le_reif(s_00013, s_00017,aux16848_BOOL);
constraint array_bool_and([w_00007_00013_BOOL,aux16844_BOOL,aux16845_BOOL,aux16847_BOOL,aux16848_BOOL],aux16849_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux16850_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16851_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux16852,s_00014],0);
constraint int_lt_reif(s_00017,aux16852,aux16853_BOOL);
constraint int_le_reif(s_00014, s_00017,aux16854_BOOL);
constraint array_bool_and([w_00007_00014_BOOL,aux16850_BOOL,aux16851_BOOL,aux16853_BOOL,aux16854_BOOL],aux16855_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux16856_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16857_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16858,s_00015],0);
constraint int_lt_reif(s_00017,aux16858,aux16859_BOOL);
constraint int_le_reif(s_00015, s_00017,aux16860_BOOL);
constraint array_bool_and([w_00007_00015_BOOL,aux16856_BOOL,aux16857_BOOL,aux16859_BOOL,aux16860_BOOL],aux16861_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux16862_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16863_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16864,s_00016],0);
constraint int_lt_reif(s_00017,aux16864,aux16865_BOOL);
constraint int_le_reif(s_00016, s_00017,aux16866_BOOL);
constraint array_bool_and([w_00007_00016_BOOL,aux16862_BOOL,aux16863_BOOL,aux16865_BOOL,aux16866_BOOL],aux16867_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16868_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux16869_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16870,s_00018],0);
constraint int_lt_reif(s_00017,aux16870,aux16871_BOOL);
constraint int_le_reif(s_00018, s_00017,aux16872_BOOL);
constraint array_bool_and([w_00007_00018_BOOL,aux16868_BOOL,aux16869_BOOL,aux16871_BOOL,aux16872_BOOL],aux16873_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16874_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux16875_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16876,s_00019],0);
constraint int_lt_reif(s_00017,aux16876,aux16877_BOOL);
constraint int_le_reif(s_00019, s_00017,aux16878_BOOL);
constraint array_bool_and([w_00007_00019_BOOL,aux16874_BOOL,aux16875_BOOL,aux16877_BOOL,aux16878_BOOL],aux16879_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16880_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16881_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16882,s_00020],0);
constraint int_lt_reif(s_00017,aux16882,aux16883_BOOL);
constraint int_le_reif(s_00020, s_00017,aux16884_BOOL);
constraint array_bool_and([w_00007_00020_BOOL,aux16880_BOOL,aux16881_BOOL,aux16883_BOOL,aux16884_BOOL],aux16885_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16886_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16887,s_00017],0);
constraint int_lt_reif(s_00017,aux16887,aux16888_BOOL);
constraint array_bool_and([w_00007_00017_BOOL,aux16886_BOOL,aux16888_BOOL],aux16889_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux16777_INTEGER,aux16783_INTEGER,aux16789_INTEGER,aux16795_INTEGER,aux16801_INTEGER,aux16807_INTEGER,aux16813_INTEGER,aux16819_INTEGER,aux16825_INTEGER,aux16831_INTEGER,aux16837_INTEGER,aux16843_INTEGER,aux16849_INTEGER,aux16855_INTEGER,aux16861_INTEGER,aux16867_INTEGER,aux16873_INTEGER,aux16879_INTEGER,aux16885_INTEGER,aux16889_INTEGER,1],0,aux16890_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux16891_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16892_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16893,s_00001],0);
constraint int_lt_reif(s_00020,aux16893,aux16894_BOOL);
constraint int_le_reif(s_00001, s_00020,aux16895_BOOL);
constraint array_bool_and([w_00007_00001_BOOL,aux16891_BOOL,aux16892_BOOL,aux16894_BOOL,aux16895_BOOL],aux16896_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux16897_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16898_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16899,s_00002],0);
constraint int_lt_reif(s_00020,aux16899,aux16900_BOOL);
constraint int_le_reif(s_00002, s_00020,aux16901_BOOL);
constraint array_bool_and([w_00007_00002_BOOL,aux16897_BOOL,aux16898_BOOL,aux16900_BOOL,aux16901_BOOL],aux16902_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux16903_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16904_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16905,s_00003],0);
constraint int_lt_reif(s_00020,aux16905,aux16906_BOOL);
constraint int_le_reif(s_00003, s_00020,aux16907_BOOL);
constraint array_bool_and([w_00007_00003_BOOL,aux16903_BOOL,aux16904_BOOL,aux16906_BOOL,aux16907_BOOL],aux16908_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux16909_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16910_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16911,s_00004],0);
constraint int_lt_reif(s_00020,aux16911,aux16912_BOOL);
constraint int_le_reif(s_00004, s_00020,aux16913_BOOL);
constraint array_bool_and([w_00007_00004_BOOL,aux16909_BOOL,aux16910_BOOL,aux16912_BOOL,aux16913_BOOL],aux16914_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux16915_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16916_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16917,s_00005],0);
constraint int_lt_reif(s_00020,aux16917,aux16918_BOOL);
constraint int_le_reif(s_00005, s_00020,aux16919_BOOL);
constraint array_bool_and([w_00007_00005_BOOL,aux16915_BOOL,aux16916_BOOL,aux16918_BOOL,aux16919_BOOL],aux16920_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux16921_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16922_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16923,s_00006],0);
constraint int_lt_reif(s_00020,aux16923,aux16924_BOOL);
constraint int_le_reif(s_00006, s_00020,aux16925_BOOL);
constraint array_bool_and([w_00007_00006_BOOL,aux16921_BOOL,aux16922_BOOL,aux16924_BOOL,aux16925_BOOL],aux16926_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux16927_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16928_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16929,s_00007],0);
constraint int_lt_reif(s_00020,aux16929,aux16930_BOOL);
constraint int_le_reif(s_00007, s_00020,aux16931_BOOL);
constraint array_bool_and([w_00007_00007_BOOL,aux16927_BOOL,aux16928_BOOL,aux16930_BOOL,aux16931_BOOL],aux16932_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux16933_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16934_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16935,s_00008],0);
constraint int_lt_reif(s_00020,aux16935,aux16936_BOOL);
constraint int_le_reif(s_00008, s_00020,aux16937_BOOL);
constraint array_bool_and([w_00007_00008_BOOL,aux16933_BOOL,aux16934_BOOL,aux16936_BOOL,aux16937_BOOL],aux16938_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux16939_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16940_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16941,s_00009],0);
constraint int_lt_reif(s_00020,aux16941,aux16942_BOOL);
constraint int_le_reif(s_00009, s_00020,aux16943_BOOL);
constraint array_bool_and([w_00007_00009_BOOL,aux16939_BOOL,aux16940_BOOL,aux16942_BOOL,aux16943_BOOL],aux16944_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux16945_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16946_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16947,s_00010],0);
constraint int_lt_reif(s_00020,aux16947,aux16948_BOOL);
constraint int_le_reif(s_00010, s_00020,aux16949_BOOL);
constraint array_bool_and([w_00007_00010_BOOL,aux16945_BOOL,aux16946_BOOL,aux16948_BOOL,aux16949_BOOL],aux16950_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux16951_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16952_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16953,s_00011],0);
constraint int_lt_reif(s_00020,aux16953,aux16954_BOOL);
constraint int_le_reif(s_00011, s_00020,aux16955_BOOL);
constraint array_bool_and([w_00007_00011_BOOL,aux16951_BOOL,aux16952_BOOL,aux16954_BOOL,aux16955_BOOL],aux16956_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux16957_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16958_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16959,s_00012],0);
constraint int_lt_reif(s_00020,aux16959,aux16960_BOOL);
constraint int_le_reif(s_00012, s_00020,aux16961_BOOL);
constraint array_bool_and([w_00007_00012_BOOL,aux16957_BOOL,aux16958_BOOL,aux16960_BOOL,aux16961_BOOL],aux16962_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux16963_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16964_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16965,s_00013],0);
constraint int_lt_reif(s_00020,aux16965,aux16966_BOOL);
constraint int_le_reif(s_00013, s_00020,aux16967_BOOL);
constraint array_bool_and([w_00007_00013_BOOL,aux16963_BOOL,aux16964_BOOL,aux16966_BOOL,aux16967_BOOL],aux16968_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux16969_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16970_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux16971,s_00014],0);
constraint int_lt_reif(s_00020,aux16971,aux16972_BOOL);
constraint int_le_reif(s_00014, s_00020,aux16973_BOOL);
constraint array_bool_and([w_00007_00014_BOOL,aux16969_BOOL,aux16970_BOOL,aux16972_BOOL,aux16973_BOOL],aux16974_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux16975_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16976_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux16977,s_00015],0);
constraint int_lt_reif(s_00020,aux16977,aux16978_BOOL);
constraint int_le_reif(s_00015, s_00020,aux16979_BOOL);
constraint array_bool_and([w_00007_00015_BOOL,aux16975_BOOL,aux16976_BOOL,aux16978_BOOL,aux16979_BOOL],aux16980_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux16981_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16982_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16983,s_00016],0);
constraint int_lt_reif(s_00020,aux16983,aux16984_BOOL);
constraint int_le_reif(s_00016, s_00020,aux16985_BOOL);
constraint array_bool_and([w_00007_00016_BOOL,aux16981_BOOL,aux16982_BOOL,aux16984_BOOL,aux16985_BOOL],aux16986_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux16987_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16988_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux16989,s_00017],0);
constraint int_lt_reif(s_00020,aux16989,aux16990_BOOL);
constraint int_le_reif(s_00017, s_00020,aux16991_BOOL);
constraint array_bool_and([w_00007_00017_BOOL,aux16987_BOOL,aux16988_BOOL,aux16990_BOOL,aux16991_BOOL],aux16992_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux16993_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux16994_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux16995,s_00018],0);
constraint int_lt_reif(s_00020,aux16995,aux16996_BOOL);
constraint int_le_reif(s_00018, s_00020,aux16997_BOOL);
constraint array_bool_and([w_00007_00018_BOOL,aux16993_BOOL,aux16994_BOOL,aux16996_BOOL,aux16997_BOOL],aux16998_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux16999_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux17000_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17001,s_00019],0);
constraint int_lt_reif(s_00020,aux17001,aux17002_BOOL);
constraint int_le_reif(s_00019, s_00020,aux17003_BOOL);
constraint array_bool_and([w_00007_00019_BOOL,aux16999_BOOL,aux17000_BOOL,aux17002_BOOL,aux17003_BOOL],aux17004_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux17005_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17006,s_00020],0);
constraint int_lt_reif(s_00020,aux17006,aux17007_BOOL);
constraint array_bool_and([w_00007_00020_BOOL,aux17005_BOOL,aux17007_BOOL],aux17008_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux16896_INTEGER,aux16902_INTEGER,aux16908_INTEGER,aux16914_INTEGER,aux16920_INTEGER,aux16926_INTEGER,aux16932_INTEGER,aux16938_INTEGER,aux16944_INTEGER,aux16950_INTEGER,aux16956_INTEGER,aux16962_INTEGER,aux16968_INTEGER,aux16974_INTEGER,aux16980_INTEGER,aux16986_INTEGER,aux16992_INTEGER,aux16998_INTEGER,aux17004_INTEGER,aux17008_INTEGER,1],0,aux17009_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux17010_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux17011_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17012,s_00001],0);
constraint int_lt_reif(s_00014,aux17012,aux17013_BOOL);
constraint int_le_reif(s_00001, s_00014,aux17014_BOOL);
constraint array_bool_and([w_00007_00001_BOOL,aux17010_BOOL,aux17011_BOOL,aux17013_BOOL,aux17014_BOOL],aux17015_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux17016_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux17017_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17018,s_00002],0);
constraint int_lt_reif(s_00014,aux17018,aux17019_BOOL);
constraint int_le_reif(s_00002, s_00014,aux17020_BOOL);
constraint array_bool_and([w_00007_00002_BOOL,aux17016_BOOL,aux17017_BOOL,aux17019_BOOL,aux17020_BOOL],aux17021_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux17022_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux17023_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17024,s_00003],0);
constraint int_lt_reif(s_00014,aux17024,aux17025_BOOL);
constraint int_le_reif(s_00003, s_00014,aux17026_BOOL);
constraint array_bool_and([w_00007_00003_BOOL,aux17022_BOOL,aux17023_BOOL,aux17025_BOOL,aux17026_BOOL],aux17027_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux17028_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux17029_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17030,s_00004],0);
constraint int_lt_reif(s_00014,aux17030,aux17031_BOOL);
constraint int_le_reif(s_00004, s_00014,aux17032_BOOL);
constraint array_bool_and([w_00007_00004_BOOL,aux17028_BOOL,aux17029_BOOL,aux17031_BOOL,aux17032_BOOL],aux17033_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux17034_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux17035_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17036,s_00005],0);
constraint int_lt_reif(s_00014,aux17036,aux17037_BOOL);
constraint int_le_reif(s_00005, s_00014,aux17038_BOOL);
constraint array_bool_and([w_00007_00005_BOOL,aux17034_BOOL,aux17035_BOOL,aux17037_BOOL,aux17038_BOOL],aux17039_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux17040_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux17041_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17042,s_00006],0);
constraint int_lt_reif(s_00014,aux17042,aux17043_BOOL);
constraint int_le_reif(s_00006, s_00014,aux17044_BOOL);
constraint array_bool_and([w_00007_00006_BOOL,aux17040_BOOL,aux17041_BOOL,aux17043_BOOL,aux17044_BOOL],aux17045_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux17046_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux17047_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17048,s_00007],0);
constraint int_lt_reif(s_00014,aux17048,aux17049_BOOL);
constraint int_le_reif(s_00007, s_00014,aux17050_BOOL);
constraint array_bool_and([w_00007_00007_BOOL,aux17046_BOOL,aux17047_BOOL,aux17049_BOOL,aux17050_BOOL],aux17051_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux17052_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux17053_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17054,s_00008],0);
constraint int_lt_reif(s_00014,aux17054,aux17055_BOOL);
constraint int_le_reif(s_00008, s_00014,aux17056_BOOL);
constraint array_bool_and([w_00007_00008_BOOL,aux17052_BOOL,aux17053_BOOL,aux17055_BOOL,aux17056_BOOL],aux17057_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux17058_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux17059_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17060,s_00009],0);
constraint int_lt_reif(s_00014,aux17060,aux17061_BOOL);
constraint int_le_reif(s_00009, s_00014,aux17062_BOOL);
constraint array_bool_and([w_00007_00009_BOOL,aux17058_BOOL,aux17059_BOOL,aux17061_BOOL,aux17062_BOOL],aux17063_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux17064_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux17065_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17066,s_00010],0);
constraint int_lt_reif(s_00014,aux17066,aux17067_BOOL);
constraint int_le_reif(s_00010, s_00014,aux17068_BOOL);
constraint array_bool_and([w_00007_00010_BOOL,aux17064_BOOL,aux17065_BOOL,aux17067_BOOL,aux17068_BOOL],aux17069_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux17070_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux17071_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17072,s_00011],0);
constraint int_lt_reif(s_00014,aux17072,aux17073_BOOL);
constraint int_le_reif(s_00011, s_00014,aux17074_BOOL);
constraint array_bool_and([w_00007_00011_BOOL,aux17070_BOOL,aux17071_BOOL,aux17073_BOOL,aux17074_BOOL],aux17075_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux17076_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux17077_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17078,s_00012],0);
constraint int_lt_reif(s_00014,aux17078,aux17079_BOOL);
constraint int_le_reif(s_00012, s_00014,aux17080_BOOL);
constraint array_bool_and([w_00007_00012_BOOL,aux17076_BOOL,aux17077_BOOL,aux17079_BOOL,aux17080_BOOL],aux17081_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux17082_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux17083_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17084,s_00013],0);
constraint int_lt_reif(s_00014,aux17084,aux17085_BOOL);
constraint int_le_reif(s_00013, s_00014,aux17086_BOOL);
constraint array_bool_and([w_00007_00013_BOOL,aux17082_BOOL,aux17083_BOOL,aux17085_BOOL,aux17086_BOOL],aux17087_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux17088_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux17089_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17090,s_00015],0);
constraint int_lt_reif(s_00014,aux17090,aux17091_BOOL);
constraint int_le_reif(s_00015, s_00014,aux17092_BOOL);
constraint array_bool_and([w_00007_00015_BOOL,aux17088_BOOL,aux17089_BOOL,aux17091_BOOL,aux17092_BOOL],aux17093_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux17094_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux17095_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17096,s_00016],0);
constraint int_lt_reif(s_00014,aux17096,aux17097_BOOL);
constraint int_le_reif(s_00016, s_00014,aux17098_BOOL);
constraint array_bool_and([w_00007_00016_BOOL,aux17094_BOOL,aux17095_BOOL,aux17097_BOOL,aux17098_BOOL],aux17099_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux17100_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux17101_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17102,s_00017],0);
constraint int_lt_reif(s_00014,aux17102,aux17103_BOOL);
constraint int_le_reif(s_00017, s_00014,aux17104_BOOL);
constraint array_bool_and([w_00007_00017_BOOL,aux17100_BOOL,aux17101_BOOL,aux17103_BOOL,aux17104_BOOL],aux17105_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux17106_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux17107_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17108,s_00018],0);
constraint int_lt_reif(s_00014,aux17108,aux17109_BOOL);
constraint int_le_reif(s_00018, s_00014,aux17110_BOOL);
constraint array_bool_and([w_00007_00018_BOOL,aux17106_BOOL,aux17107_BOOL,aux17109_BOOL,aux17110_BOOL],aux17111_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux17112_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux17113_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17114,s_00019],0);
constraint int_lt_reif(s_00014,aux17114,aux17115_BOOL);
constraint int_le_reif(s_00019, s_00014,aux17116_BOOL);
constraint array_bool_and([w_00007_00019_BOOL,aux17112_BOOL,aux17113_BOOL,aux17115_BOOL,aux17116_BOOL],aux17117_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux17118_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux17119_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17120,s_00020],0);
constraint int_lt_reif(s_00014,aux17120,aux17121_BOOL);
constraint int_le_reif(s_00020, s_00014,aux17122_BOOL);
constraint array_bool_and([w_00007_00020_BOOL,aux17118_BOOL,aux17119_BOOL,aux17121_BOOL,aux17122_BOOL],aux17123_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux17124_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux17125,s_00014],0);
constraint int_lt_reif(s_00014,aux17125,aux17126_BOOL);
constraint array_bool_and([w_00007_00014_BOOL,aux17124_BOOL,aux17126_BOOL],aux17127_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux17015_INTEGER,aux17021_INTEGER,aux17027_INTEGER,aux17033_INTEGER,aux17039_INTEGER,aux17045_INTEGER,aux17051_INTEGER,aux17057_INTEGER,aux17063_INTEGER,aux17069_INTEGER,aux17075_INTEGER,aux17081_INTEGER,aux17087_INTEGER,aux17093_INTEGER,aux17099_INTEGER,aux17105_INTEGER,aux17111_INTEGER,aux17117_INTEGER,aux17123_INTEGER,aux17127_INTEGER,1],0,aux17128_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00001_INTEGER,aux17129_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux17130_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17131,s_00001],0);
constraint int_lt_reif(s_00013,aux17131,aux17132_BOOL);
constraint int_le_reif(s_00001, s_00013,aux17133_BOOL);
constraint array_bool_and([w_00007_00001_BOOL,aux17129_BOOL,aux17130_BOOL,aux17132_BOOL,aux17133_BOOL],aux17134_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00002_INTEGER,aux17135_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux17136_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17137,s_00002],0);
constraint int_lt_reif(s_00013,aux17137,aux17138_BOOL);
constraint int_le_reif(s_00002, s_00013,aux17139_BOOL);
constraint array_bool_and([w_00007_00002_BOOL,aux17135_BOOL,aux17136_BOOL,aux17138_BOOL,aux17139_BOOL],aux17140_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00003_INTEGER,aux17141_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux17142_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17143,s_00003],0);
constraint int_lt_reif(s_00013,aux17143,aux17144_BOOL);
constraint int_le_reif(s_00003, s_00013,aux17145_BOOL);
constraint array_bool_and([w_00007_00003_BOOL,aux17141_BOOL,aux17142_BOOL,aux17144_BOOL,aux17145_BOOL],aux17146_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00004_INTEGER,aux17147_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux17148_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17149,s_00004],0);
constraint int_lt_reif(s_00013,aux17149,aux17150_BOOL);
constraint int_le_reif(s_00004, s_00013,aux17151_BOOL);
constraint array_bool_and([w_00007_00004_BOOL,aux17147_BOOL,aux17148_BOOL,aux17150_BOOL,aux17151_BOOL],aux17152_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00005_INTEGER,aux17153_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux17154_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17155,s_00005],0);
constraint int_lt_reif(s_00013,aux17155,aux17156_BOOL);
constraint int_le_reif(s_00005, s_00013,aux17157_BOOL);
constraint array_bool_and([w_00007_00005_BOOL,aux17153_BOOL,aux17154_BOOL,aux17156_BOOL,aux17157_BOOL],aux17158_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00006_INTEGER,aux17159_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux17160_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17161,s_00006],0);
constraint int_lt_reif(s_00013,aux17161,aux17162_BOOL);
constraint int_le_reif(s_00006, s_00013,aux17163_BOOL);
constraint array_bool_and([w_00007_00006_BOOL,aux17159_BOOL,aux17160_BOOL,aux17162_BOOL,aux17163_BOOL],aux17164_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00007_INTEGER,aux17165_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux17166_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17167,s_00007],0);
constraint int_lt_reif(s_00013,aux17167,aux17168_BOOL);
constraint int_le_reif(s_00007, s_00013,aux17169_BOOL);
constraint array_bool_and([w_00007_00007_BOOL,aux17165_BOOL,aux17166_BOOL,aux17168_BOOL,aux17169_BOOL],aux17170_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00008_INTEGER,aux17171_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux17172_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17173,s_00008],0);
constraint int_lt_reif(s_00013,aux17173,aux17174_BOOL);
constraint int_le_reif(s_00008, s_00013,aux17175_BOOL);
constraint array_bool_and([w_00007_00008_BOOL,aux17171_BOOL,aux17172_BOOL,aux17174_BOOL,aux17175_BOOL],aux17176_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00009_INTEGER,aux17177_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux17178_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17179,s_00009],0);
constraint int_lt_reif(s_00013,aux17179,aux17180_BOOL);
constraint int_le_reif(s_00009, s_00013,aux17181_BOOL);
constraint array_bool_and([w_00007_00009_BOOL,aux17177_BOOL,aux17178_BOOL,aux17180_BOOL,aux17181_BOOL],aux17182_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00010_INTEGER,aux17183_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux17184_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17185,s_00010],0);
constraint int_lt_reif(s_00013,aux17185,aux17186_BOOL);
constraint int_le_reif(s_00010, s_00013,aux17187_BOOL);
constraint array_bool_and([w_00007_00010_BOOL,aux17183_BOOL,aux17184_BOOL,aux17186_BOOL,aux17187_BOOL],aux17188_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00011_INTEGER,aux17189_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux17190_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17191,s_00011],0);
constraint int_lt_reif(s_00013,aux17191,aux17192_BOOL);
constraint int_le_reif(s_00011, s_00013,aux17193_BOOL);
constraint array_bool_and([w_00007_00011_BOOL,aux17189_BOOL,aux17190_BOOL,aux17192_BOOL,aux17193_BOOL],aux17194_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00012_INTEGER,aux17195_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux17196_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17197,s_00012],0);
constraint int_lt_reif(s_00013,aux17197,aux17198_BOOL);
constraint int_le_reif(s_00012, s_00013,aux17199_BOOL);
constraint array_bool_and([w_00007_00012_BOOL,aux17195_BOOL,aux17196_BOOL,aux17198_BOOL,aux17199_BOOL],aux17200_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux17201_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00014_INTEGER,aux17202_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux17203,s_00014],0);
constraint int_lt_reif(s_00013,aux17203,aux17204_BOOL);
constraint int_le_reif(s_00014, s_00013,aux17205_BOOL);
constraint array_bool_and([w_00007_00014_BOOL,aux17201_BOOL,aux17202_BOOL,aux17204_BOOL,aux17205_BOOL],aux17206_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux17207_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00015_INTEGER,aux17208_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17209,s_00015],0);
constraint int_lt_reif(s_00013,aux17209,aux17210_BOOL);
constraint int_le_reif(s_00015, s_00013,aux17211_BOOL);
constraint array_bool_and([w_00007_00015_BOOL,aux17207_BOOL,aux17208_BOOL,aux17210_BOOL,aux17211_BOOL],aux17212_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux17213_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00016_INTEGER,aux17214_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17215,s_00016],0);
constraint int_lt_reif(s_00013,aux17215,aux17216_BOOL);
constraint int_le_reif(s_00016, s_00013,aux17217_BOOL);
constraint array_bool_and([w_00007_00016_BOOL,aux17213_BOOL,aux17214_BOOL,aux17216_BOOL,aux17217_BOOL],aux17218_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux17219_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00017_INTEGER,aux17220_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17221,s_00017],0);
constraint int_lt_reif(s_00013,aux17221,aux17222_BOOL);
constraint int_le_reif(s_00017, s_00013,aux17223_BOOL);
constraint array_bool_and([w_00007_00017_BOOL,aux17219_BOOL,aux17220_BOOL,aux17222_BOOL,aux17223_BOOL],aux17224_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux17225_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00018_INTEGER,aux17226_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17227,s_00018],0);
constraint int_lt_reif(s_00013,aux17227,aux17228_BOOL);
constraint int_le_reif(s_00018, s_00013,aux17229_BOOL);
constraint array_bool_and([w_00007_00018_BOOL,aux17225_BOOL,aux17226_BOOL,aux17228_BOOL,aux17229_BOOL],aux17230_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux17231_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00019_INTEGER,aux17232_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17233,s_00019],0);
constraint int_lt_reif(s_00013,aux17233,aux17234_BOOL);
constraint int_le_reif(s_00019, s_00013,aux17235_BOOL);
constraint array_bool_and([w_00007_00019_BOOL,aux17231_BOOL,aux17232_BOOL,aux17234_BOOL,aux17235_BOOL],aux17236_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux17237_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00020_INTEGER,aux17238_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17239,s_00020],0);
constraint int_lt_reif(s_00013,aux17239,aux17240_BOOL);
constraint int_le_reif(s_00020, s_00013,aux17241_BOOL);
constraint array_bool_and([w_00007_00020_BOOL,aux17237_BOOL,aux17238_BOOL,aux17240_BOOL,aux17241_BOOL],aux17242_BOOL);
constraint int_eq_reif(1,TWorkers_00007_00013_INTEGER,aux17243_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17244,s_00013],0);
constraint int_lt_reif(s_00013,aux17244,aux17245_BOOL);
constraint array_bool_and([w_00007_00013_BOOL,aux17243_BOOL,aux17245_BOOL],aux17246_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux17134_INTEGER,aux17140_INTEGER,aux17146_INTEGER,aux17152_INTEGER,aux17158_INTEGER,aux17164_INTEGER,aux17170_INTEGER,aux17176_INTEGER,aux17182_INTEGER,aux17188_INTEGER,aux17194_INTEGER,aux17200_INTEGER,aux17206_INTEGER,aux17212_INTEGER,aux17218_INTEGER,aux17224_INTEGER,aux17230_INTEGER,aux17236_INTEGER,aux17242_INTEGER,aux17246_INTEGER,1],0,aux17247_BOOL);
constraint array_bool_and([aux14986_BOOL,aux15105_BOOL,aux15224_BOOL,aux15343_BOOL,aux15462_BOOL,aux15581_BOOL,aux15700_BOOL,aux15819_BOOL,aux15938_BOOL,aux16057_BOOL,aux16176_BOOL,aux16295_BOOL,aux16414_BOOL,aux16533_BOOL,aux16652_BOOL,aux16771_BOOL,aux16890_BOOL,aux17009_BOOL,aux17128_BOOL,aux17247_BOOL],aux17248_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[TWorkers_00007_00001_INTEGER,TWorkers_00007_00002_INTEGER,TWorkers_00007_00003_INTEGER,TWorkers_00007_00004_INTEGER,TWorkers_00007_00005_INTEGER,TWorkers_00007_00006_INTEGER,TWorkers_00007_00007_INTEGER,TWorkers_00007_00008_INTEGER,TWorkers_00007_00009_INTEGER,TWorkers_00007_00010_INTEGER,TWorkers_00007_00011_INTEGER,TWorkers_00007_00012_INTEGER,TWorkers_00007_00013_INTEGER,TWorkers_00007_00014_INTEGER,TWorkers_00007_00015_INTEGER,TWorkers_00007_00016_INTEGER,TWorkers_00007_00017_INTEGER,TWorkers_00007_00018_INTEGER,TWorkers_00007_00019_INTEGER,TWorkers_00007_00020_INTEGER,1],0,aux17249_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[TWorkers_00008_00001_INTEGER,TWorkers_00008_00002_INTEGER,TWorkers_00008_00003_INTEGER,TWorkers_00008_00004_INTEGER,TWorkers_00008_00005_INTEGER,TWorkers_00008_00006_INTEGER,TWorkers_00008_00007_INTEGER,TWorkers_00008_00008_INTEGER,TWorkers_00008_00009_INTEGER,TWorkers_00008_00010_INTEGER,TWorkers_00008_00011_INTEGER,TWorkers_00008_00012_INTEGER,TWorkers_00008_00013_INTEGER,TWorkers_00008_00014_INTEGER,TWorkers_00008_00015_INTEGER,TWorkers_00008_00016_INTEGER,TWorkers_00008_00017_INTEGER,TWorkers_00008_00018_INTEGER,TWorkers_00008_00019_INTEGER,TWorkers_00008_00020_INTEGER,1],0,aux17250_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17251,s_00020],0);
constraint int_lt_reif(s_00020,aux17251,aux17252_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux17253_BOOL);
constraint array_bool_and([w_00008_00020_BOOL,aux17252_BOOL,aux17253_BOOL],aux17254_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17255,s_00001],0);
constraint int_lt_reif(s_00020,aux17255,aux17256_BOOL);
constraint int_le_reif(s_00001, s_00020,aux17257_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux17258_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux17259_BOOL);
constraint array_bool_and([w_00008_00001_BOOL,aux17256_BOOL,aux17257_BOOL,aux17258_BOOL,aux17259_BOOL],aux17260_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17261,s_00002],0);
constraint int_lt_reif(s_00020,aux17261,aux17262_BOOL);
constraint int_le_reif(s_00002, s_00020,aux17263_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux17264_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux17265_BOOL);
constraint array_bool_and([w_00008_00002_BOOL,aux17262_BOOL,aux17263_BOOL,aux17264_BOOL,aux17265_BOOL],aux17266_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17267,s_00003],0);
constraint int_lt_reif(s_00020,aux17267,aux17268_BOOL);
constraint int_le_reif(s_00003, s_00020,aux17269_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux17270_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux17271_BOOL);
constraint array_bool_and([w_00008_00003_BOOL,aux17268_BOOL,aux17269_BOOL,aux17270_BOOL,aux17271_BOOL],aux17272_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17273,s_00004],0);
constraint int_lt_reif(s_00020,aux17273,aux17274_BOOL);
constraint int_le_reif(s_00004, s_00020,aux17275_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux17276_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux17277_BOOL);
constraint array_bool_and([w_00008_00004_BOOL,aux17274_BOOL,aux17275_BOOL,aux17276_BOOL,aux17277_BOOL],aux17278_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17279,s_00005],0);
constraint int_lt_reif(s_00020,aux17279,aux17280_BOOL);
constraint int_le_reif(s_00005, s_00020,aux17281_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux17282_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux17283_BOOL);
constraint array_bool_and([w_00008_00005_BOOL,aux17280_BOOL,aux17281_BOOL,aux17282_BOOL,aux17283_BOOL],aux17284_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17285,s_00006],0);
constraint int_lt_reif(s_00020,aux17285,aux17286_BOOL);
constraint int_le_reif(s_00006, s_00020,aux17287_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux17288_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux17289_BOOL);
constraint array_bool_and([w_00008_00006_BOOL,aux17286_BOOL,aux17287_BOOL,aux17288_BOOL,aux17289_BOOL],aux17290_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17291,s_00007],0);
constraint int_lt_reif(s_00020,aux17291,aux17292_BOOL);
constraint int_le_reif(s_00007, s_00020,aux17293_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux17294_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux17295_BOOL);
constraint array_bool_and([w_00008_00007_BOOL,aux17292_BOOL,aux17293_BOOL,aux17294_BOOL,aux17295_BOOL],aux17296_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17297,s_00008],0);
constraint int_lt_reif(s_00020,aux17297,aux17298_BOOL);
constraint int_le_reif(s_00008, s_00020,aux17299_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux17300_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux17301_BOOL);
constraint array_bool_and([w_00008_00008_BOOL,aux17298_BOOL,aux17299_BOOL,aux17300_BOOL,aux17301_BOOL],aux17302_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17303,s_00009],0);
constraint int_lt_reif(s_00020,aux17303,aux17304_BOOL);
constraint int_le_reif(s_00009, s_00020,aux17305_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux17306_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux17307_BOOL);
constraint array_bool_and([w_00008_00009_BOOL,aux17304_BOOL,aux17305_BOOL,aux17306_BOOL,aux17307_BOOL],aux17308_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17309,s_00010],0);
constraint int_lt_reif(s_00020,aux17309,aux17310_BOOL);
constraint int_le_reif(s_00010, s_00020,aux17311_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux17312_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux17313_BOOL);
constraint array_bool_and([w_00008_00010_BOOL,aux17310_BOOL,aux17311_BOOL,aux17312_BOOL,aux17313_BOOL],aux17314_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17315,s_00011],0);
constraint int_lt_reif(s_00020,aux17315,aux17316_BOOL);
constraint int_le_reif(s_00011, s_00020,aux17317_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux17318_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux17319_BOOL);
constraint array_bool_and([w_00008_00011_BOOL,aux17316_BOOL,aux17317_BOOL,aux17318_BOOL,aux17319_BOOL],aux17320_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17321,s_00012],0);
constraint int_lt_reif(s_00020,aux17321,aux17322_BOOL);
constraint int_le_reif(s_00012, s_00020,aux17323_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux17324_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux17325_BOOL);
constraint array_bool_and([w_00008_00012_BOOL,aux17322_BOOL,aux17323_BOOL,aux17324_BOOL,aux17325_BOOL],aux17326_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17327,s_00013],0);
constraint int_lt_reif(s_00020,aux17327,aux17328_BOOL);
constraint int_le_reif(s_00013, s_00020,aux17329_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux17330_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux17331_BOOL);
constraint array_bool_and([w_00008_00013_BOOL,aux17328_BOOL,aux17329_BOOL,aux17330_BOOL,aux17331_BOOL],aux17332_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17333,s_00015],0);
constraint int_lt_reif(s_00020,aux17333,aux17334_BOOL);
constraint int_le_reif(s_00015, s_00020,aux17335_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux17336_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux17337_BOOL);
constraint array_bool_and([w_00008_00015_BOOL,aux17334_BOOL,aux17335_BOOL,aux17336_BOOL,aux17337_BOOL],aux17338_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux17339,s_00014],0);
constraint int_lt_reif(s_00020,aux17339,aux17340_BOOL);
constraint int_le_reif(s_00014, s_00020,aux17341_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux17342_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux17343_BOOL);
constraint array_bool_and([w_00008_00014_BOOL,aux17340_BOOL,aux17341_BOOL,aux17342_BOOL,aux17343_BOOL],aux17344_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17345,s_00017],0);
constraint int_lt_reif(s_00020,aux17345,aux17346_BOOL);
constraint int_le_reif(s_00017, s_00020,aux17347_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux17348_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux17349_BOOL);
constraint array_bool_and([w_00008_00017_BOOL,aux17346_BOOL,aux17347_BOOL,aux17348_BOOL,aux17349_BOOL],aux17350_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17351,s_00016],0);
constraint int_lt_reif(s_00020,aux17351,aux17352_BOOL);
constraint int_le_reif(s_00016, s_00020,aux17353_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux17354_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux17355_BOOL);
constraint array_bool_and([w_00008_00016_BOOL,aux17352_BOOL,aux17353_BOOL,aux17354_BOOL,aux17355_BOOL],aux17356_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17357,s_00018],0);
constraint int_lt_reif(s_00020,aux17357,aux17358_BOOL);
constraint int_le_reif(s_00018, s_00020,aux17359_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux17360_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux17361_BOOL);
constraint array_bool_and([w_00008_00018_BOOL,aux17358_BOOL,aux17359_BOOL,aux17360_BOOL,aux17361_BOOL],aux17362_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17363,s_00019],0);
constraint int_lt_reif(s_00020,aux17363,aux17364_BOOL);
constraint int_le_reif(s_00019, s_00020,aux17365_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux17366_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux17367_BOOL);
constraint array_bool_and([w_00008_00019_BOOL,aux17364_BOOL,aux17365_BOOL,aux17366_BOOL,aux17367_BOOL],aux17368_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux17254_INTEGER,aux17260_INTEGER,aux17266_INTEGER,aux17272_INTEGER,aux17278_INTEGER,aux17284_INTEGER,aux17290_INTEGER,aux17296_INTEGER,aux17302_INTEGER,aux17308_INTEGER,aux17314_INTEGER,aux17320_INTEGER,aux17326_INTEGER,aux17332_INTEGER,aux17338_INTEGER,aux17344_INTEGER,aux17350_INTEGER,aux17356_INTEGER,aux17362_INTEGER,aux17368_INTEGER,1],0,aux17369_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17370,s_00017],0);
constraint int_lt_reif(s_00017,aux17370,aux17371_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux17372_BOOL);
constraint array_bool_and([w_00008_00017_BOOL,aux17371_BOOL,aux17372_BOOL],aux17373_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17374,s_00001],0);
constraint int_lt_reif(s_00017,aux17374,aux17375_BOOL);
constraint int_le_reif(s_00001, s_00017,aux17376_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux17377_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux17378_BOOL);
constraint array_bool_and([w_00008_00001_BOOL,aux17375_BOOL,aux17376_BOOL,aux17377_BOOL,aux17378_BOOL],aux17379_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17380,s_00002],0);
constraint int_lt_reif(s_00017,aux17380,aux17381_BOOL);
constraint int_le_reif(s_00002, s_00017,aux17382_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux17383_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux17384_BOOL);
constraint array_bool_and([w_00008_00002_BOOL,aux17381_BOOL,aux17382_BOOL,aux17383_BOOL,aux17384_BOOL],aux17385_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17386,s_00003],0);
constraint int_lt_reif(s_00017,aux17386,aux17387_BOOL);
constraint int_le_reif(s_00003, s_00017,aux17388_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux17389_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux17390_BOOL);
constraint array_bool_and([w_00008_00003_BOOL,aux17387_BOOL,aux17388_BOOL,aux17389_BOOL,aux17390_BOOL],aux17391_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17392,s_00004],0);
constraint int_lt_reif(s_00017,aux17392,aux17393_BOOL);
constraint int_le_reif(s_00004, s_00017,aux17394_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux17395_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux17396_BOOL);
constraint array_bool_and([w_00008_00004_BOOL,aux17393_BOOL,aux17394_BOOL,aux17395_BOOL,aux17396_BOOL],aux17397_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17398,s_00005],0);
constraint int_lt_reif(s_00017,aux17398,aux17399_BOOL);
constraint int_le_reif(s_00005, s_00017,aux17400_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux17401_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux17402_BOOL);
constraint array_bool_and([w_00008_00005_BOOL,aux17399_BOOL,aux17400_BOOL,aux17401_BOOL,aux17402_BOOL],aux17403_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17404,s_00006],0);
constraint int_lt_reif(s_00017,aux17404,aux17405_BOOL);
constraint int_le_reif(s_00006, s_00017,aux17406_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux17407_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux17408_BOOL);
constraint array_bool_and([w_00008_00006_BOOL,aux17405_BOOL,aux17406_BOOL,aux17407_BOOL,aux17408_BOOL],aux17409_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17410,s_00007],0);
constraint int_lt_reif(s_00017,aux17410,aux17411_BOOL);
constraint int_le_reif(s_00007, s_00017,aux17412_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux17413_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux17414_BOOL);
constraint array_bool_and([w_00008_00007_BOOL,aux17411_BOOL,aux17412_BOOL,aux17413_BOOL,aux17414_BOOL],aux17415_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17416,s_00008],0);
constraint int_lt_reif(s_00017,aux17416,aux17417_BOOL);
constraint int_le_reif(s_00008, s_00017,aux17418_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux17419_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux17420_BOOL);
constraint array_bool_and([w_00008_00008_BOOL,aux17417_BOOL,aux17418_BOOL,aux17419_BOOL,aux17420_BOOL],aux17421_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17422,s_00009],0);
constraint int_lt_reif(s_00017,aux17422,aux17423_BOOL);
constraint int_le_reif(s_00009, s_00017,aux17424_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux17425_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux17426_BOOL);
constraint array_bool_and([w_00008_00009_BOOL,aux17423_BOOL,aux17424_BOOL,aux17425_BOOL,aux17426_BOOL],aux17427_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17428,s_00010],0);
constraint int_lt_reif(s_00017,aux17428,aux17429_BOOL);
constraint int_le_reif(s_00010, s_00017,aux17430_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux17431_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux17432_BOOL);
constraint array_bool_and([w_00008_00010_BOOL,aux17429_BOOL,aux17430_BOOL,aux17431_BOOL,aux17432_BOOL],aux17433_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17434,s_00011],0);
constraint int_lt_reif(s_00017,aux17434,aux17435_BOOL);
constraint int_le_reif(s_00011, s_00017,aux17436_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux17437_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux17438_BOOL);
constraint array_bool_and([w_00008_00011_BOOL,aux17435_BOOL,aux17436_BOOL,aux17437_BOOL,aux17438_BOOL],aux17439_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17440,s_00012],0);
constraint int_lt_reif(s_00017,aux17440,aux17441_BOOL);
constraint int_le_reif(s_00012, s_00017,aux17442_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux17443_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux17444_BOOL);
constraint array_bool_and([w_00008_00012_BOOL,aux17441_BOOL,aux17442_BOOL,aux17443_BOOL,aux17444_BOOL],aux17445_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17446,s_00013],0);
constraint int_lt_reif(s_00017,aux17446,aux17447_BOOL);
constraint int_le_reif(s_00013, s_00017,aux17448_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux17449_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux17450_BOOL);
constraint array_bool_and([w_00008_00013_BOOL,aux17447_BOOL,aux17448_BOOL,aux17449_BOOL,aux17450_BOOL],aux17451_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17452,s_00015],0);
constraint int_lt_reif(s_00017,aux17452,aux17453_BOOL);
constraint int_le_reif(s_00015, s_00017,aux17454_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux17455_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux17456_BOOL);
constraint array_bool_and([w_00008_00015_BOOL,aux17453_BOOL,aux17454_BOOL,aux17455_BOOL,aux17456_BOOL],aux17457_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux17458,s_00014],0);
constraint int_lt_reif(s_00017,aux17458,aux17459_BOOL);
constraint int_le_reif(s_00014, s_00017,aux17460_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux17461_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux17462_BOOL);
constraint array_bool_and([w_00008_00014_BOOL,aux17459_BOOL,aux17460_BOOL,aux17461_BOOL,aux17462_BOOL],aux17463_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17464,s_00016],0);
constraint int_lt_reif(s_00017,aux17464,aux17465_BOOL);
constraint int_le_reif(s_00016, s_00017,aux17466_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux17467_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux17468_BOOL);
constraint array_bool_and([w_00008_00016_BOOL,aux17465_BOOL,aux17466_BOOL,aux17467_BOOL,aux17468_BOOL],aux17469_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17470,s_00018],0);
constraint int_lt_reif(s_00017,aux17470,aux17471_BOOL);
constraint int_le_reif(s_00018, s_00017,aux17472_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux17473_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux17474_BOOL);
constraint array_bool_and([w_00008_00018_BOOL,aux17471_BOOL,aux17472_BOOL,aux17473_BOOL,aux17474_BOOL],aux17475_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17476,s_00019],0);
constraint int_lt_reif(s_00017,aux17476,aux17477_BOOL);
constraint int_le_reif(s_00019, s_00017,aux17478_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux17479_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux17480_BOOL);
constraint array_bool_and([w_00008_00019_BOOL,aux17477_BOOL,aux17478_BOOL,aux17479_BOOL,aux17480_BOOL],aux17481_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17482,s_00020],0);
constraint int_lt_reif(s_00017,aux17482,aux17483_BOOL);
constraint int_le_reif(s_00020, s_00017,aux17484_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux17485_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux17486_BOOL);
constraint array_bool_and([w_00008_00020_BOOL,aux17483_BOOL,aux17484_BOOL,aux17485_BOOL,aux17486_BOOL],aux17487_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux17373_INTEGER,aux17379_INTEGER,aux17385_INTEGER,aux17391_INTEGER,aux17397_INTEGER,aux17403_INTEGER,aux17409_INTEGER,aux17415_INTEGER,aux17421_INTEGER,aux17427_INTEGER,aux17433_INTEGER,aux17439_INTEGER,aux17445_INTEGER,aux17451_INTEGER,aux17457_INTEGER,aux17463_INTEGER,aux17469_INTEGER,aux17475_INTEGER,aux17481_INTEGER,aux17487_INTEGER,1],0,aux17488_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17489,s_00006],0);
constraint int_lt_reif(s_00006,aux17489,aux17490_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux17491_BOOL);
constraint array_bool_and([w_00008_00006_BOOL,aux17490_BOOL,aux17491_BOOL],aux17492_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17493,s_00001],0);
constraint int_lt_reif(s_00006,aux17493,aux17494_BOOL);
constraint int_le_reif(s_00001, s_00006,aux17495_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux17496_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux17497_BOOL);
constraint array_bool_and([w_00008_00001_BOOL,aux17494_BOOL,aux17495_BOOL,aux17496_BOOL,aux17497_BOOL],aux17498_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17499,s_00002],0);
constraint int_lt_reif(s_00006,aux17499,aux17500_BOOL);
constraint int_le_reif(s_00002, s_00006,aux17501_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux17502_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux17503_BOOL);
constraint array_bool_and([w_00008_00002_BOOL,aux17500_BOOL,aux17501_BOOL,aux17502_BOOL,aux17503_BOOL],aux17504_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17505,s_00003],0);
constraint int_lt_reif(s_00006,aux17505,aux17506_BOOL);
constraint int_le_reif(s_00003, s_00006,aux17507_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux17508_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux17509_BOOL);
constraint array_bool_and([w_00008_00003_BOOL,aux17506_BOOL,aux17507_BOOL,aux17508_BOOL,aux17509_BOOL],aux17510_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17511,s_00004],0);
constraint int_lt_reif(s_00006,aux17511,aux17512_BOOL);
constraint int_le_reif(s_00004, s_00006,aux17513_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux17514_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux17515_BOOL);
constraint array_bool_and([w_00008_00004_BOOL,aux17512_BOOL,aux17513_BOOL,aux17514_BOOL,aux17515_BOOL],aux17516_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17517,s_00005],0);
constraint int_lt_reif(s_00006,aux17517,aux17518_BOOL);
constraint int_le_reif(s_00005, s_00006,aux17519_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux17520_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux17521_BOOL);
constraint array_bool_and([w_00008_00005_BOOL,aux17518_BOOL,aux17519_BOOL,aux17520_BOOL,aux17521_BOOL],aux17522_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17523,s_00007],0);
constraint int_lt_reif(s_00006,aux17523,aux17524_BOOL);
constraint int_le_reif(s_00007, s_00006,aux17525_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux17526_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux17527_BOOL);
constraint array_bool_and([w_00008_00007_BOOL,aux17524_BOOL,aux17525_BOOL,aux17526_BOOL,aux17527_BOOL],aux17528_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17529,s_00008],0);
constraint int_lt_reif(s_00006,aux17529,aux17530_BOOL);
constraint int_le_reif(s_00008, s_00006,aux17531_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux17532_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux17533_BOOL);
constraint array_bool_and([w_00008_00008_BOOL,aux17530_BOOL,aux17531_BOOL,aux17532_BOOL,aux17533_BOOL],aux17534_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17535,s_00009],0);
constraint int_lt_reif(s_00006,aux17535,aux17536_BOOL);
constraint int_le_reif(s_00009, s_00006,aux17537_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux17538_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux17539_BOOL);
constraint array_bool_and([w_00008_00009_BOOL,aux17536_BOOL,aux17537_BOOL,aux17538_BOOL,aux17539_BOOL],aux17540_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17541,s_00010],0);
constraint int_lt_reif(s_00006,aux17541,aux17542_BOOL);
constraint int_le_reif(s_00010, s_00006,aux17543_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux17544_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux17545_BOOL);
constraint array_bool_and([w_00008_00010_BOOL,aux17542_BOOL,aux17543_BOOL,aux17544_BOOL,aux17545_BOOL],aux17546_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17547,s_00011],0);
constraint int_lt_reif(s_00006,aux17547,aux17548_BOOL);
constraint int_le_reif(s_00011, s_00006,aux17549_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux17550_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux17551_BOOL);
constraint array_bool_and([w_00008_00011_BOOL,aux17548_BOOL,aux17549_BOOL,aux17550_BOOL,aux17551_BOOL],aux17552_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17553,s_00012],0);
constraint int_lt_reif(s_00006,aux17553,aux17554_BOOL);
constraint int_le_reif(s_00012, s_00006,aux17555_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux17556_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux17557_BOOL);
constraint array_bool_and([w_00008_00012_BOOL,aux17554_BOOL,aux17555_BOOL,aux17556_BOOL,aux17557_BOOL],aux17558_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17559,s_00013],0);
constraint int_lt_reif(s_00006,aux17559,aux17560_BOOL);
constraint int_le_reif(s_00013, s_00006,aux17561_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux17562_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux17563_BOOL);
constraint array_bool_and([w_00008_00013_BOOL,aux17560_BOOL,aux17561_BOOL,aux17562_BOOL,aux17563_BOOL],aux17564_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17565,s_00015],0);
constraint int_lt_reif(s_00006,aux17565,aux17566_BOOL);
constraint int_le_reif(s_00015, s_00006,aux17567_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux17568_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux17569_BOOL);
constraint array_bool_and([w_00008_00015_BOOL,aux17566_BOOL,aux17567_BOOL,aux17568_BOOL,aux17569_BOOL],aux17570_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux17571,s_00014],0);
constraint int_lt_reif(s_00006,aux17571,aux17572_BOOL);
constraint int_le_reif(s_00014, s_00006,aux17573_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux17574_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux17575_BOOL);
constraint array_bool_and([w_00008_00014_BOOL,aux17572_BOOL,aux17573_BOOL,aux17574_BOOL,aux17575_BOOL],aux17576_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17577,s_00017],0);
constraint int_lt_reif(s_00006,aux17577,aux17578_BOOL);
constraint int_le_reif(s_00017, s_00006,aux17579_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux17580_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux17581_BOOL);
constraint array_bool_and([w_00008_00017_BOOL,aux17578_BOOL,aux17579_BOOL,aux17580_BOOL,aux17581_BOOL],aux17582_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17583,s_00016],0);
constraint int_lt_reif(s_00006,aux17583,aux17584_BOOL);
constraint int_le_reif(s_00016, s_00006,aux17585_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux17586_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux17587_BOOL);
constraint array_bool_and([w_00008_00016_BOOL,aux17584_BOOL,aux17585_BOOL,aux17586_BOOL,aux17587_BOOL],aux17588_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17589,s_00018],0);
constraint int_lt_reif(s_00006,aux17589,aux17590_BOOL);
constraint int_le_reif(s_00018, s_00006,aux17591_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux17592_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux17593_BOOL);
constraint array_bool_and([w_00008_00018_BOOL,aux17590_BOOL,aux17591_BOOL,aux17592_BOOL,aux17593_BOOL],aux17594_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17595,s_00019],0);
constraint int_lt_reif(s_00006,aux17595,aux17596_BOOL);
constraint int_le_reif(s_00019, s_00006,aux17597_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux17598_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux17599_BOOL);
constraint array_bool_and([w_00008_00019_BOOL,aux17596_BOOL,aux17597_BOOL,aux17598_BOOL,aux17599_BOOL],aux17600_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17601,s_00020],0);
constraint int_lt_reif(s_00006,aux17601,aux17602_BOOL);
constraint int_le_reif(s_00020, s_00006,aux17603_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux17604_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux17605_BOOL);
constraint array_bool_and([w_00008_00020_BOOL,aux17602_BOOL,aux17603_BOOL,aux17604_BOOL,aux17605_BOOL],aux17606_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux17492_INTEGER,aux17498_INTEGER,aux17504_INTEGER,aux17510_INTEGER,aux17516_INTEGER,aux17522_INTEGER,aux17528_INTEGER,aux17534_INTEGER,aux17540_INTEGER,aux17546_INTEGER,aux17552_INTEGER,aux17558_INTEGER,aux17564_INTEGER,aux17570_INTEGER,aux17576_INTEGER,aux17582_INTEGER,aux17588_INTEGER,aux17594_INTEGER,aux17600_INTEGER,aux17606_INTEGER,1],0,aux17607_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17608,s_00013],0);
constraint int_lt_reif(s_00013,aux17608,aux17609_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux17610_BOOL);
constraint array_bool_and([w_00008_00013_BOOL,aux17609_BOOL,aux17610_BOOL],aux17611_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17612,s_00001],0);
constraint int_lt_reif(s_00013,aux17612,aux17613_BOOL);
constraint int_le_reif(s_00001, s_00013,aux17614_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux17615_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux17616_BOOL);
constraint array_bool_and([w_00008_00001_BOOL,aux17613_BOOL,aux17614_BOOL,aux17615_BOOL,aux17616_BOOL],aux17617_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17618,s_00002],0);
constraint int_lt_reif(s_00013,aux17618,aux17619_BOOL);
constraint int_le_reif(s_00002, s_00013,aux17620_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux17621_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux17622_BOOL);
constraint array_bool_and([w_00008_00002_BOOL,aux17619_BOOL,aux17620_BOOL,aux17621_BOOL,aux17622_BOOL],aux17623_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17624,s_00003],0);
constraint int_lt_reif(s_00013,aux17624,aux17625_BOOL);
constraint int_le_reif(s_00003, s_00013,aux17626_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux17627_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux17628_BOOL);
constraint array_bool_and([w_00008_00003_BOOL,aux17625_BOOL,aux17626_BOOL,aux17627_BOOL,aux17628_BOOL],aux17629_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17630,s_00004],0);
constraint int_lt_reif(s_00013,aux17630,aux17631_BOOL);
constraint int_le_reif(s_00004, s_00013,aux17632_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux17633_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux17634_BOOL);
constraint array_bool_and([w_00008_00004_BOOL,aux17631_BOOL,aux17632_BOOL,aux17633_BOOL,aux17634_BOOL],aux17635_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17636,s_00005],0);
constraint int_lt_reif(s_00013,aux17636,aux17637_BOOL);
constraint int_le_reif(s_00005, s_00013,aux17638_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux17639_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux17640_BOOL);
constraint array_bool_and([w_00008_00005_BOOL,aux17637_BOOL,aux17638_BOOL,aux17639_BOOL,aux17640_BOOL],aux17641_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17642,s_00006],0);
constraint int_lt_reif(s_00013,aux17642,aux17643_BOOL);
constraint int_le_reif(s_00006, s_00013,aux17644_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux17645_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux17646_BOOL);
constraint array_bool_and([w_00008_00006_BOOL,aux17643_BOOL,aux17644_BOOL,aux17645_BOOL,aux17646_BOOL],aux17647_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17648,s_00007],0);
constraint int_lt_reif(s_00013,aux17648,aux17649_BOOL);
constraint int_le_reif(s_00007, s_00013,aux17650_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux17651_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux17652_BOOL);
constraint array_bool_and([w_00008_00007_BOOL,aux17649_BOOL,aux17650_BOOL,aux17651_BOOL,aux17652_BOOL],aux17653_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17654,s_00008],0);
constraint int_lt_reif(s_00013,aux17654,aux17655_BOOL);
constraint int_le_reif(s_00008, s_00013,aux17656_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux17657_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux17658_BOOL);
constraint array_bool_and([w_00008_00008_BOOL,aux17655_BOOL,aux17656_BOOL,aux17657_BOOL,aux17658_BOOL],aux17659_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17660,s_00009],0);
constraint int_lt_reif(s_00013,aux17660,aux17661_BOOL);
constraint int_le_reif(s_00009, s_00013,aux17662_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux17663_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux17664_BOOL);
constraint array_bool_and([w_00008_00009_BOOL,aux17661_BOOL,aux17662_BOOL,aux17663_BOOL,aux17664_BOOL],aux17665_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17666,s_00010],0);
constraint int_lt_reif(s_00013,aux17666,aux17667_BOOL);
constraint int_le_reif(s_00010, s_00013,aux17668_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux17669_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux17670_BOOL);
constraint array_bool_and([w_00008_00010_BOOL,aux17667_BOOL,aux17668_BOOL,aux17669_BOOL,aux17670_BOOL],aux17671_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17672,s_00011],0);
constraint int_lt_reif(s_00013,aux17672,aux17673_BOOL);
constraint int_le_reif(s_00011, s_00013,aux17674_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux17675_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux17676_BOOL);
constraint array_bool_and([w_00008_00011_BOOL,aux17673_BOOL,aux17674_BOOL,aux17675_BOOL,aux17676_BOOL],aux17677_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17678,s_00012],0);
constraint int_lt_reif(s_00013,aux17678,aux17679_BOOL);
constraint int_le_reif(s_00012, s_00013,aux17680_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux17681_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux17682_BOOL);
constraint array_bool_and([w_00008_00012_BOOL,aux17679_BOOL,aux17680_BOOL,aux17681_BOOL,aux17682_BOOL],aux17683_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17684,s_00015],0);
constraint int_lt_reif(s_00013,aux17684,aux17685_BOOL);
constraint int_le_reif(s_00015, s_00013,aux17686_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux17687_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux17688_BOOL);
constraint array_bool_and([w_00008_00015_BOOL,aux17685_BOOL,aux17686_BOOL,aux17687_BOOL,aux17688_BOOL],aux17689_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux17690,s_00014],0);
constraint int_lt_reif(s_00013,aux17690,aux17691_BOOL);
constraint int_le_reif(s_00014, s_00013,aux17692_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux17693_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux17694_BOOL);
constraint array_bool_and([w_00008_00014_BOOL,aux17691_BOOL,aux17692_BOOL,aux17693_BOOL,aux17694_BOOL],aux17695_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17696,s_00017],0);
constraint int_lt_reif(s_00013,aux17696,aux17697_BOOL);
constraint int_le_reif(s_00017, s_00013,aux17698_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux17699_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux17700_BOOL);
constraint array_bool_and([w_00008_00017_BOOL,aux17697_BOOL,aux17698_BOOL,aux17699_BOOL,aux17700_BOOL],aux17701_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17702,s_00016],0);
constraint int_lt_reif(s_00013,aux17702,aux17703_BOOL);
constraint int_le_reif(s_00016, s_00013,aux17704_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux17705_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux17706_BOOL);
constraint array_bool_and([w_00008_00016_BOOL,aux17703_BOOL,aux17704_BOOL,aux17705_BOOL,aux17706_BOOL],aux17707_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17708,s_00018],0);
constraint int_lt_reif(s_00013,aux17708,aux17709_BOOL);
constraint int_le_reif(s_00018, s_00013,aux17710_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux17711_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux17712_BOOL);
constraint array_bool_and([w_00008_00018_BOOL,aux17709_BOOL,aux17710_BOOL,aux17711_BOOL,aux17712_BOOL],aux17713_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17714,s_00019],0);
constraint int_lt_reif(s_00013,aux17714,aux17715_BOOL);
constraint int_le_reif(s_00019, s_00013,aux17716_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux17717_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux17718_BOOL);
constraint array_bool_and([w_00008_00019_BOOL,aux17715_BOOL,aux17716_BOOL,aux17717_BOOL,aux17718_BOOL],aux17719_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17720,s_00020],0);
constraint int_lt_reif(s_00013,aux17720,aux17721_BOOL);
constraint int_le_reif(s_00020, s_00013,aux17722_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux17723_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux17724_BOOL);
constraint array_bool_and([w_00008_00020_BOOL,aux17721_BOOL,aux17722_BOOL,aux17723_BOOL,aux17724_BOOL],aux17725_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux17611_INTEGER,aux17617_INTEGER,aux17623_INTEGER,aux17629_INTEGER,aux17635_INTEGER,aux17641_INTEGER,aux17647_INTEGER,aux17653_INTEGER,aux17659_INTEGER,aux17665_INTEGER,aux17671_INTEGER,aux17677_INTEGER,aux17683_INTEGER,aux17689_INTEGER,aux17695_INTEGER,aux17701_INTEGER,aux17707_INTEGER,aux17713_INTEGER,aux17719_INTEGER,aux17725_INTEGER,1],0,aux17726_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17727,s_00008],0);
constraint int_lt_reif(s_00008,aux17727,aux17728_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux17729_BOOL);
constraint array_bool_and([w_00008_00008_BOOL,aux17728_BOOL,aux17729_BOOL],aux17730_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17731,s_00001],0);
constraint int_lt_reif(s_00008,aux17731,aux17732_BOOL);
constraint int_le_reif(s_00001, s_00008,aux17733_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux17734_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux17735_BOOL);
constraint array_bool_and([w_00008_00001_BOOL,aux17732_BOOL,aux17733_BOOL,aux17734_BOOL,aux17735_BOOL],aux17736_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17737,s_00002],0);
constraint int_lt_reif(s_00008,aux17737,aux17738_BOOL);
constraint int_le_reif(s_00002, s_00008,aux17739_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux17740_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux17741_BOOL);
constraint array_bool_and([w_00008_00002_BOOL,aux17738_BOOL,aux17739_BOOL,aux17740_BOOL,aux17741_BOOL],aux17742_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17743,s_00003],0);
constraint int_lt_reif(s_00008,aux17743,aux17744_BOOL);
constraint int_le_reif(s_00003, s_00008,aux17745_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux17746_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux17747_BOOL);
constraint array_bool_and([w_00008_00003_BOOL,aux17744_BOOL,aux17745_BOOL,aux17746_BOOL,aux17747_BOOL],aux17748_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17749,s_00004],0);
constraint int_lt_reif(s_00008,aux17749,aux17750_BOOL);
constraint int_le_reif(s_00004, s_00008,aux17751_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux17752_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux17753_BOOL);
constraint array_bool_and([w_00008_00004_BOOL,aux17750_BOOL,aux17751_BOOL,aux17752_BOOL,aux17753_BOOL],aux17754_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17755,s_00005],0);
constraint int_lt_reif(s_00008,aux17755,aux17756_BOOL);
constraint int_le_reif(s_00005, s_00008,aux17757_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux17758_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux17759_BOOL);
constraint array_bool_and([w_00008_00005_BOOL,aux17756_BOOL,aux17757_BOOL,aux17758_BOOL,aux17759_BOOL],aux17760_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17761,s_00006],0);
constraint int_lt_reif(s_00008,aux17761,aux17762_BOOL);
constraint int_le_reif(s_00006, s_00008,aux17763_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux17764_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux17765_BOOL);
constraint array_bool_and([w_00008_00006_BOOL,aux17762_BOOL,aux17763_BOOL,aux17764_BOOL,aux17765_BOOL],aux17766_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17767,s_00007],0);
constraint int_lt_reif(s_00008,aux17767,aux17768_BOOL);
constraint int_le_reif(s_00007, s_00008,aux17769_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux17770_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux17771_BOOL);
constraint array_bool_and([w_00008_00007_BOOL,aux17768_BOOL,aux17769_BOOL,aux17770_BOOL,aux17771_BOOL],aux17772_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17773,s_00009],0);
constraint int_lt_reif(s_00008,aux17773,aux17774_BOOL);
constraint int_le_reif(s_00009, s_00008,aux17775_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux17776_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux17777_BOOL);
constraint array_bool_and([w_00008_00009_BOOL,aux17774_BOOL,aux17775_BOOL,aux17776_BOOL,aux17777_BOOL],aux17778_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17779,s_00010],0);
constraint int_lt_reif(s_00008,aux17779,aux17780_BOOL);
constraint int_le_reif(s_00010, s_00008,aux17781_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux17782_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux17783_BOOL);
constraint array_bool_and([w_00008_00010_BOOL,aux17780_BOOL,aux17781_BOOL,aux17782_BOOL,aux17783_BOOL],aux17784_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17785,s_00011],0);
constraint int_lt_reif(s_00008,aux17785,aux17786_BOOL);
constraint int_le_reif(s_00011, s_00008,aux17787_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux17788_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux17789_BOOL);
constraint array_bool_and([w_00008_00011_BOOL,aux17786_BOOL,aux17787_BOOL,aux17788_BOOL,aux17789_BOOL],aux17790_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17791,s_00012],0);
constraint int_lt_reif(s_00008,aux17791,aux17792_BOOL);
constraint int_le_reif(s_00012, s_00008,aux17793_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux17794_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux17795_BOOL);
constraint array_bool_and([w_00008_00012_BOOL,aux17792_BOOL,aux17793_BOOL,aux17794_BOOL,aux17795_BOOL],aux17796_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17797,s_00013],0);
constraint int_lt_reif(s_00008,aux17797,aux17798_BOOL);
constraint int_le_reif(s_00013, s_00008,aux17799_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux17800_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux17801_BOOL);
constraint array_bool_and([w_00008_00013_BOOL,aux17798_BOOL,aux17799_BOOL,aux17800_BOOL,aux17801_BOOL],aux17802_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17803,s_00015],0);
constraint int_lt_reif(s_00008,aux17803,aux17804_BOOL);
constraint int_le_reif(s_00015, s_00008,aux17805_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux17806_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux17807_BOOL);
constraint array_bool_and([w_00008_00015_BOOL,aux17804_BOOL,aux17805_BOOL,aux17806_BOOL,aux17807_BOOL],aux17808_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux17809,s_00014],0);
constraint int_lt_reif(s_00008,aux17809,aux17810_BOOL);
constraint int_le_reif(s_00014, s_00008,aux17811_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux17812_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux17813_BOOL);
constraint array_bool_and([w_00008_00014_BOOL,aux17810_BOOL,aux17811_BOOL,aux17812_BOOL,aux17813_BOOL],aux17814_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17815,s_00017],0);
constraint int_lt_reif(s_00008,aux17815,aux17816_BOOL);
constraint int_le_reif(s_00017, s_00008,aux17817_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux17818_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux17819_BOOL);
constraint array_bool_and([w_00008_00017_BOOL,aux17816_BOOL,aux17817_BOOL,aux17818_BOOL,aux17819_BOOL],aux17820_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17821,s_00016],0);
constraint int_lt_reif(s_00008,aux17821,aux17822_BOOL);
constraint int_le_reif(s_00016, s_00008,aux17823_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux17824_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux17825_BOOL);
constraint array_bool_and([w_00008_00016_BOOL,aux17822_BOOL,aux17823_BOOL,aux17824_BOOL,aux17825_BOOL],aux17826_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17827,s_00018],0);
constraint int_lt_reif(s_00008,aux17827,aux17828_BOOL);
constraint int_le_reif(s_00018, s_00008,aux17829_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux17830_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux17831_BOOL);
constraint array_bool_and([w_00008_00018_BOOL,aux17828_BOOL,aux17829_BOOL,aux17830_BOOL,aux17831_BOOL],aux17832_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17833,s_00019],0);
constraint int_lt_reif(s_00008,aux17833,aux17834_BOOL);
constraint int_le_reif(s_00019, s_00008,aux17835_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux17836_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux17837_BOOL);
constraint array_bool_and([w_00008_00019_BOOL,aux17834_BOOL,aux17835_BOOL,aux17836_BOOL,aux17837_BOOL],aux17838_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17839,s_00020],0);
constraint int_lt_reif(s_00008,aux17839,aux17840_BOOL);
constraint int_le_reif(s_00020, s_00008,aux17841_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux17842_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux17843_BOOL);
constraint array_bool_and([w_00008_00020_BOOL,aux17840_BOOL,aux17841_BOOL,aux17842_BOOL,aux17843_BOOL],aux17844_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux17730_INTEGER,aux17736_INTEGER,aux17742_INTEGER,aux17748_INTEGER,aux17754_INTEGER,aux17760_INTEGER,aux17766_INTEGER,aux17772_INTEGER,aux17778_INTEGER,aux17784_INTEGER,aux17790_INTEGER,aux17796_INTEGER,aux17802_INTEGER,aux17808_INTEGER,aux17814_INTEGER,aux17820_INTEGER,aux17826_INTEGER,aux17832_INTEGER,aux17838_INTEGER,aux17844_INTEGER,1],0,aux17845_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17846,s_00002],0);
constraint int_lt_reif(s_00002,aux17846,aux17847_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux17848_BOOL);
constraint array_bool_and([w_00008_00002_BOOL,aux17847_BOOL,aux17848_BOOL],aux17849_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17850,s_00001],0);
constraint int_lt_reif(s_00002,aux17850,aux17851_BOOL);
constraint int_le_reif(s_00001, s_00002,aux17852_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux17853_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux17854_BOOL);
constraint array_bool_and([w_00008_00001_BOOL,aux17851_BOOL,aux17852_BOOL,aux17853_BOOL,aux17854_BOOL],aux17855_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17856,s_00003],0);
constraint int_lt_reif(s_00002,aux17856,aux17857_BOOL);
constraint int_le_reif(s_00003, s_00002,aux17858_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux17859_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux17860_BOOL);
constraint array_bool_and([w_00008_00003_BOOL,aux17857_BOOL,aux17858_BOOL,aux17859_BOOL,aux17860_BOOL],aux17861_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17862,s_00004],0);
constraint int_lt_reif(s_00002,aux17862,aux17863_BOOL);
constraint int_le_reif(s_00004, s_00002,aux17864_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux17865_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux17866_BOOL);
constraint array_bool_and([w_00008_00004_BOOL,aux17863_BOOL,aux17864_BOOL,aux17865_BOOL,aux17866_BOOL],aux17867_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17868,s_00005],0);
constraint int_lt_reif(s_00002,aux17868,aux17869_BOOL);
constraint int_le_reif(s_00005, s_00002,aux17870_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux17871_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux17872_BOOL);
constraint array_bool_and([w_00008_00005_BOOL,aux17869_BOOL,aux17870_BOOL,aux17871_BOOL,aux17872_BOOL],aux17873_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17874,s_00006],0);
constraint int_lt_reif(s_00002,aux17874,aux17875_BOOL);
constraint int_le_reif(s_00006, s_00002,aux17876_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux17877_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux17878_BOOL);
constraint array_bool_and([w_00008_00006_BOOL,aux17875_BOOL,aux17876_BOOL,aux17877_BOOL,aux17878_BOOL],aux17879_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17880,s_00007],0);
constraint int_lt_reif(s_00002,aux17880,aux17881_BOOL);
constraint int_le_reif(s_00007, s_00002,aux17882_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux17883_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux17884_BOOL);
constraint array_bool_and([w_00008_00007_BOOL,aux17881_BOOL,aux17882_BOOL,aux17883_BOOL,aux17884_BOOL],aux17885_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17886,s_00008],0);
constraint int_lt_reif(s_00002,aux17886,aux17887_BOOL);
constraint int_le_reif(s_00008, s_00002,aux17888_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux17889_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux17890_BOOL);
constraint array_bool_and([w_00008_00008_BOOL,aux17887_BOOL,aux17888_BOOL,aux17889_BOOL,aux17890_BOOL],aux17891_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17892,s_00009],0);
constraint int_lt_reif(s_00002,aux17892,aux17893_BOOL);
constraint int_le_reif(s_00009, s_00002,aux17894_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux17895_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux17896_BOOL);
constraint array_bool_and([w_00008_00009_BOOL,aux17893_BOOL,aux17894_BOOL,aux17895_BOOL,aux17896_BOOL],aux17897_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17898,s_00010],0);
constraint int_lt_reif(s_00002,aux17898,aux17899_BOOL);
constraint int_le_reif(s_00010, s_00002,aux17900_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux17901_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux17902_BOOL);
constraint array_bool_and([w_00008_00010_BOOL,aux17899_BOOL,aux17900_BOOL,aux17901_BOOL,aux17902_BOOL],aux17903_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17904,s_00011],0);
constraint int_lt_reif(s_00002,aux17904,aux17905_BOOL);
constraint int_le_reif(s_00011, s_00002,aux17906_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux17907_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux17908_BOOL);
constraint array_bool_and([w_00008_00011_BOOL,aux17905_BOOL,aux17906_BOOL,aux17907_BOOL,aux17908_BOOL],aux17909_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17910,s_00012],0);
constraint int_lt_reif(s_00002,aux17910,aux17911_BOOL);
constraint int_le_reif(s_00012, s_00002,aux17912_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux17913_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux17914_BOOL);
constraint array_bool_and([w_00008_00012_BOOL,aux17911_BOOL,aux17912_BOOL,aux17913_BOOL,aux17914_BOOL],aux17915_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17916,s_00013],0);
constraint int_lt_reif(s_00002,aux17916,aux17917_BOOL);
constraint int_le_reif(s_00013, s_00002,aux17918_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux17919_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux17920_BOOL);
constraint array_bool_and([w_00008_00013_BOOL,aux17917_BOOL,aux17918_BOOL,aux17919_BOOL,aux17920_BOOL],aux17921_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17922,s_00015],0);
constraint int_lt_reif(s_00002,aux17922,aux17923_BOOL);
constraint int_le_reif(s_00015, s_00002,aux17924_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux17925_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux17926_BOOL);
constraint array_bool_and([w_00008_00015_BOOL,aux17923_BOOL,aux17924_BOOL,aux17925_BOOL,aux17926_BOOL],aux17927_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux17928,s_00014],0);
constraint int_lt_reif(s_00002,aux17928,aux17929_BOOL);
constraint int_le_reif(s_00014, s_00002,aux17930_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux17931_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux17932_BOOL);
constraint array_bool_and([w_00008_00014_BOOL,aux17929_BOOL,aux17930_BOOL,aux17931_BOOL,aux17932_BOOL],aux17933_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17934,s_00017],0);
constraint int_lt_reif(s_00002,aux17934,aux17935_BOOL);
constraint int_le_reif(s_00017, s_00002,aux17936_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux17937_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux17938_BOOL);
constraint array_bool_and([w_00008_00017_BOOL,aux17935_BOOL,aux17936_BOOL,aux17937_BOOL,aux17938_BOOL],aux17939_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17940,s_00016],0);
constraint int_lt_reif(s_00002,aux17940,aux17941_BOOL);
constraint int_le_reif(s_00016, s_00002,aux17942_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux17943_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux17944_BOOL);
constraint array_bool_and([w_00008_00016_BOOL,aux17941_BOOL,aux17942_BOOL,aux17943_BOOL,aux17944_BOOL],aux17945_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17946,s_00018],0);
constraint int_lt_reif(s_00002,aux17946,aux17947_BOOL);
constraint int_le_reif(s_00018, s_00002,aux17948_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux17949_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux17950_BOOL);
constraint array_bool_and([w_00008_00018_BOOL,aux17947_BOOL,aux17948_BOOL,aux17949_BOOL,aux17950_BOOL],aux17951_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17952,s_00019],0);
constraint int_lt_reif(s_00002,aux17952,aux17953_BOOL);
constraint int_le_reif(s_00019, s_00002,aux17954_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux17955_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux17956_BOOL);
constraint array_bool_and([w_00008_00019_BOOL,aux17953_BOOL,aux17954_BOOL,aux17955_BOOL,aux17956_BOOL],aux17957_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17958,s_00020],0);
constraint int_lt_reif(s_00002,aux17958,aux17959_BOOL);
constraint int_le_reif(s_00020, s_00002,aux17960_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux17961_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux17962_BOOL);
constraint array_bool_and([w_00008_00020_BOOL,aux17959_BOOL,aux17960_BOOL,aux17961_BOOL,aux17962_BOOL],aux17963_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux17849_INTEGER,aux17855_INTEGER,aux17861_INTEGER,aux17867_INTEGER,aux17873_INTEGER,aux17879_INTEGER,aux17885_INTEGER,aux17891_INTEGER,aux17897_INTEGER,aux17903_INTEGER,aux17909_INTEGER,aux17915_INTEGER,aux17921_INTEGER,aux17927_INTEGER,aux17933_INTEGER,aux17939_INTEGER,aux17945_INTEGER,aux17951_INTEGER,aux17957_INTEGER,aux17963_INTEGER,1],0,aux17964_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17965,s_00007],0);
constraint int_lt_reif(s_00007,aux17965,aux17966_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux17967_BOOL);
constraint array_bool_and([w_00008_00007_BOOL,aux17966_BOOL,aux17967_BOOL],aux17968_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux17969,s_00001],0);
constraint int_lt_reif(s_00007,aux17969,aux17970_BOOL);
constraint int_le_reif(s_00001, s_00007,aux17971_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux17972_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux17973_BOOL);
constraint array_bool_and([w_00008_00001_BOOL,aux17970_BOOL,aux17971_BOOL,aux17972_BOOL,aux17973_BOOL],aux17974_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17975,s_00002],0);
constraint int_lt_reif(s_00007,aux17975,aux17976_BOOL);
constraint int_le_reif(s_00002, s_00007,aux17977_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux17978_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux17979_BOOL);
constraint array_bool_and([w_00008_00002_BOOL,aux17976_BOOL,aux17977_BOOL,aux17978_BOOL,aux17979_BOOL],aux17980_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17981,s_00003],0);
constraint int_lt_reif(s_00007,aux17981,aux17982_BOOL);
constraint int_le_reif(s_00003, s_00007,aux17983_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux17984_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux17985_BOOL);
constraint array_bool_and([w_00008_00003_BOOL,aux17982_BOOL,aux17983_BOOL,aux17984_BOOL,aux17985_BOOL],aux17986_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17987,s_00004],0);
constraint int_lt_reif(s_00007,aux17987,aux17988_BOOL);
constraint int_le_reif(s_00004, s_00007,aux17989_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux17990_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux17991_BOOL);
constraint array_bool_and([w_00008_00004_BOOL,aux17988_BOOL,aux17989_BOOL,aux17990_BOOL,aux17991_BOOL],aux17992_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux17993,s_00005],0);
constraint int_lt_reif(s_00007,aux17993,aux17994_BOOL);
constraint int_le_reif(s_00005, s_00007,aux17995_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux17996_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux17997_BOOL);
constraint array_bool_and([w_00008_00005_BOOL,aux17994_BOOL,aux17995_BOOL,aux17996_BOOL,aux17997_BOOL],aux17998_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux17999,s_00006],0);
constraint int_lt_reif(s_00007,aux17999,aux18000_BOOL);
constraint int_le_reif(s_00006, s_00007,aux18001_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux18002_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux18003_BOOL);
constraint array_bool_and([w_00008_00006_BOOL,aux18000_BOOL,aux18001_BOOL,aux18002_BOOL,aux18003_BOOL],aux18004_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18005,s_00008],0);
constraint int_lt_reif(s_00007,aux18005,aux18006_BOOL);
constraint int_le_reif(s_00008, s_00007,aux18007_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux18008_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux18009_BOOL);
constraint array_bool_and([w_00008_00008_BOOL,aux18006_BOOL,aux18007_BOOL,aux18008_BOOL,aux18009_BOOL],aux18010_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18011,s_00009],0);
constraint int_lt_reif(s_00007,aux18011,aux18012_BOOL);
constraint int_le_reif(s_00009, s_00007,aux18013_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux18014_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux18015_BOOL);
constraint array_bool_and([w_00008_00009_BOOL,aux18012_BOOL,aux18013_BOOL,aux18014_BOOL,aux18015_BOOL],aux18016_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18017,s_00010],0);
constraint int_lt_reif(s_00007,aux18017,aux18018_BOOL);
constraint int_le_reif(s_00010, s_00007,aux18019_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux18020_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux18021_BOOL);
constraint array_bool_and([w_00008_00010_BOOL,aux18018_BOOL,aux18019_BOOL,aux18020_BOOL,aux18021_BOOL],aux18022_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18023,s_00011],0);
constraint int_lt_reif(s_00007,aux18023,aux18024_BOOL);
constraint int_le_reif(s_00011, s_00007,aux18025_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux18026_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux18027_BOOL);
constraint array_bool_and([w_00008_00011_BOOL,aux18024_BOOL,aux18025_BOOL,aux18026_BOOL,aux18027_BOOL],aux18028_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18029,s_00012],0);
constraint int_lt_reif(s_00007,aux18029,aux18030_BOOL);
constraint int_le_reif(s_00012, s_00007,aux18031_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux18032_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux18033_BOOL);
constraint array_bool_and([w_00008_00012_BOOL,aux18030_BOOL,aux18031_BOOL,aux18032_BOOL,aux18033_BOOL],aux18034_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18035,s_00013],0);
constraint int_lt_reif(s_00007,aux18035,aux18036_BOOL);
constraint int_le_reif(s_00013, s_00007,aux18037_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux18038_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux18039_BOOL);
constraint array_bool_and([w_00008_00013_BOOL,aux18036_BOOL,aux18037_BOOL,aux18038_BOOL,aux18039_BOOL],aux18040_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18041,s_00015],0);
constraint int_lt_reif(s_00007,aux18041,aux18042_BOOL);
constraint int_le_reif(s_00015, s_00007,aux18043_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux18044_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux18045_BOOL);
constraint array_bool_and([w_00008_00015_BOOL,aux18042_BOOL,aux18043_BOOL,aux18044_BOOL,aux18045_BOOL],aux18046_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux18047,s_00014],0);
constraint int_lt_reif(s_00007,aux18047,aux18048_BOOL);
constraint int_le_reif(s_00014, s_00007,aux18049_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux18050_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux18051_BOOL);
constraint array_bool_and([w_00008_00014_BOOL,aux18048_BOOL,aux18049_BOOL,aux18050_BOOL,aux18051_BOOL],aux18052_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18053,s_00017],0);
constraint int_lt_reif(s_00007,aux18053,aux18054_BOOL);
constraint int_le_reif(s_00017, s_00007,aux18055_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux18056_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux18057_BOOL);
constraint array_bool_and([w_00008_00017_BOOL,aux18054_BOOL,aux18055_BOOL,aux18056_BOOL,aux18057_BOOL],aux18058_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18059,s_00016],0);
constraint int_lt_reif(s_00007,aux18059,aux18060_BOOL);
constraint int_le_reif(s_00016, s_00007,aux18061_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux18062_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux18063_BOOL);
constraint array_bool_and([w_00008_00016_BOOL,aux18060_BOOL,aux18061_BOOL,aux18062_BOOL,aux18063_BOOL],aux18064_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18065,s_00018],0);
constraint int_lt_reif(s_00007,aux18065,aux18066_BOOL);
constraint int_le_reif(s_00018, s_00007,aux18067_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux18068_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux18069_BOOL);
constraint array_bool_and([w_00008_00018_BOOL,aux18066_BOOL,aux18067_BOOL,aux18068_BOOL,aux18069_BOOL],aux18070_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18071,s_00019],0);
constraint int_lt_reif(s_00007,aux18071,aux18072_BOOL);
constraint int_le_reif(s_00019, s_00007,aux18073_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux18074_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux18075_BOOL);
constraint array_bool_and([w_00008_00019_BOOL,aux18072_BOOL,aux18073_BOOL,aux18074_BOOL,aux18075_BOOL],aux18076_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18077,s_00020],0);
constraint int_lt_reif(s_00007,aux18077,aux18078_BOOL);
constraint int_le_reif(s_00020, s_00007,aux18079_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux18080_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux18081_BOOL);
constraint array_bool_and([w_00008_00020_BOOL,aux18078_BOOL,aux18079_BOOL,aux18080_BOOL,aux18081_BOOL],aux18082_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux17968_INTEGER,aux17974_INTEGER,aux17980_INTEGER,aux17986_INTEGER,aux17992_INTEGER,aux17998_INTEGER,aux18004_INTEGER,aux18010_INTEGER,aux18016_INTEGER,aux18022_INTEGER,aux18028_INTEGER,aux18034_INTEGER,aux18040_INTEGER,aux18046_INTEGER,aux18052_INTEGER,aux18058_INTEGER,aux18064_INTEGER,aux18070_INTEGER,aux18076_INTEGER,aux18082_INTEGER,1],0,aux18083_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18084,s_00004],0);
constraint int_lt_reif(s_00004,aux18084,aux18085_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux18086_BOOL);
constraint array_bool_and([w_00008_00004_BOOL,aux18085_BOOL,aux18086_BOOL],aux18087_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18088,s_00001],0);
constraint int_lt_reif(s_00004,aux18088,aux18089_BOOL);
constraint int_le_reif(s_00001, s_00004,aux18090_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18091_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux18092_BOOL);
constraint array_bool_and([w_00008_00001_BOOL,aux18089_BOOL,aux18090_BOOL,aux18091_BOOL,aux18092_BOOL],aux18093_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18094,s_00002],0);
constraint int_lt_reif(s_00004,aux18094,aux18095_BOOL);
constraint int_le_reif(s_00002, s_00004,aux18096_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux18097_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux18098_BOOL);
constraint array_bool_and([w_00008_00002_BOOL,aux18095_BOOL,aux18096_BOOL,aux18097_BOOL,aux18098_BOOL],aux18099_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18100,s_00003],0);
constraint int_lt_reif(s_00004,aux18100,aux18101_BOOL);
constraint int_le_reif(s_00003, s_00004,aux18102_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux18103_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux18104_BOOL);
constraint array_bool_and([w_00008_00003_BOOL,aux18101_BOOL,aux18102_BOOL,aux18103_BOOL,aux18104_BOOL],aux18105_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18106,s_00005],0);
constraint int_lt_reif(s_00004,aux18106,aux18107_BOOL);
constraint int_le_reif(s_00005, s_00004,aux18108_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux18109_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux18110_BOOL);
constraint array_bool_and([w_00008_00005_BOOL,aux18107_BOOL,aux18108_BOOL,aux18109_BOOL,aux18110_BOOL],aux18111_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18112,s_00006],0);
constraint int_lt_reif(s_00004,aux18112,aux18113_BOOL);
constraint int_le_reif(s_00006, s_00004,aux18114_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux18115_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux18116_BOOL);
constraint array_bool_and([w_00008_00006_BOOL,aux18113_BOOL,aux18114_BOOL,aux18115_BOOL,aux18116_BOOL],aux18117_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18118,s_00007],0);
constraint int_lt_reif(s_00004,aux18118,aux18119_BOOL);
constraint int_le_reif(s_00007, s_00004,aux18120_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux18121_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux18122_BOOL);
constraint array_bool_and([w_00008_00007_BOOL,aux18119_BOOL,aux18120_BOOL,aux18121_BOOL,aux18122_BOOL],aux18123_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18124,s_00008],0);
constraint int_lt_reif(s_00004,aux18124,aux18125_BOOL);
constraint int_le_reif(s_00008, s_00004,aux18126_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux18127_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux18128_BOOL);
constraint array_bool_and([w_00008_00008_BOOL,aux18125_BOOL,aux18126_BOOL,aux18127_BOOL,aux18128_BOOL],aux18129_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18130,s_00009],0);
constraint int_lt_reif(s_00004,aux18130,aux18131_BOOL);
constraint int_le_reif(s_00009, s_00004,aux18132_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux18133_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux18134_BOOL);
constraint array_bool_and([w_00008_00009_BOOL,aux18131_BOOL,aux18132_BOOL,aux18133_BOOL,aux18134_BOOL],aux18135_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18136,s_00010],0);
constraint int_lt_reif(s_00004,aux18136,aux18137_BOOL);
constraint int_le_reif(s_00010, s_00004,aux18138_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux18139_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux18140_BOOL);
constraint array_bool_and([w_00008_00010_BOOL,aux18137_BOOL,aux18138_BOOL,aux18139_BOOL,aux18140_BOOL],aux18141_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18142,s_00011],0);
constraint int_lt_reif(s_00004,aux18142,aux18143_BOOL);
constraint int_le_reif(s_00011, s_00004,aux18144_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux18145_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux18146_BOOL);
constraint array_bool_and([w_00008_00011_BOOL,aux18143_BOOL,aux18144_BOOL,aux18145_BOOL,aux18146_BOOL],aux18147_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18148,s_00012],0);
constraint int_lt_reif(s_00004,aux18148,aux18149_BOOL);
constraint int_le_reif(s_00012, s_00004,aux18150_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux18151_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux18152_BOOL);
constraint array_bool_and([w_00008_00012_BOOL,aux18149_BOOL,aux18150_BOOL,aux18151_BOOL,aux18152_BOOL],aux18153_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18154,s_00013],0);
constraint int_lt_reif(s_00004,aux18154,aux18155_BOOL);
constraint int_le_reif(s_00013, s_00004,aux18156_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux18157_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux18158_BOOL);
constraint array_bool_and([w_00008_00013_BOOL,aux18155_BOOL,aux18156_BOOL,aux18157_BOOL,aux18158_BOOL],aux18159_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18160,s_00015],0);
constraint int_lt_reif(s_00004,aux18160,aux18161_BOOL);
constraint int_le_reif(s_00015, s_00004,aux18162_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux18163_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux18164_BOOL);
constraint array_bool_and([w_00008_00015_BOOL,aux18161_BOOL,aux18162_BOOL,aux18163_BOOL,aux18164_BOOL],aux18165_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux18166,s_00014],0);
constraint int_lt_reif(s_00004,aux18166,aux18167_BOOL);
constraint int_le_reif(s_00014, s_00004,aux18168_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux18169_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux18170_BOOL);
constraint array_bool_and([w_00008_00014_BOOL,aux18167_BOOL,aux18168_BOOL,aux18169_BOOL,aux18170_BOOL],aux18171_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18172,s_00017],0);
constraint int_lt_reif(s_00004,aux18172,aux18173_BOOL);
constraint int_le_reif(s_00017, s_00004,aux18174_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux18175_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux18176_BOOL);
constraint array_bool_and([w_00008_00017_BOOL,aux18173_BOOL,aux18174_BOOL,aux18175_BOOL,aux18176_BOOL],aux18177_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18178,s_00016],0);
constraint int_lt_reif(s_00004,aux18178,aux18179_BOOL);
constraint int_le_reif(s_00016, s_00004,aux18180_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux18181_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux18182_BOOL);
constraint array_bool_and([w_00008_00016_BOOL,aux18179_BOOL,aux18180_BOOL,aux18181_BOOL,aux18182_BOOL],aux18183_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18184,s_00018],0);
constraint int_lt_reif(s_00004,aux18184,aux18185_BOOL);
constraint int_le_reif(s_00018, s_00004,aux18186_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux18187_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux18188_BOOL);
constraint array_bool_and([w_00008_00018_BOOL,aux18185_BOOL,aux18186_BOOL,aux18187_BOOL,aux18188_BOOL],aux18189_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18190,s_00019],0);
constraint int_lt_reif(s_00004,aux18190,aux18191_BOOL);
constraint int_le_reif(s_00019, s_00004,aux18192_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux18193_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux18194_BOOL);
constraint array_bool_and([w_00008_00019_BOOL,aux18191_BOOL,aux18192_BOOL,aux18193_BOOL,aux18194_BOOL],aux18195_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18196,s_00020],0);
constraint int_lt_reif(s_00004,aux18196,aux18197_BOOL);
constraint int_le_reif(s_00020, s_00004,aux18198_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux18199_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux18200_BOOL);
constraint array_bool_and([w_00008_00020_BOOL,aux18197_BOOL,aux18198_BOOL,aux18199_BOOL,aux18200_BOOL],aux18201_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux18087_INTEGER,aux18093_INTEGER,aux18099_INTEGER,aux18105_INTEGER,aux18111_INTEGER,aux18117_INTEGER,aux18123_INTEGER,aux18129_INTEGER,aux18135_INTEGER,aux18141_INTEGER,aux18147_INTEGER,aux18153_INTEGER,aux18159_INTEGER,aux18165_INTEGER,aux18171_INTEGER,aux18177_INTEGER,aux18183_INTEGER,aux18189_INTEGER,aux18195_INTEGER,aux18201_INTEGER,1],0,aux18202_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18203,s_00018],0);
constraint int_lt_reif(s_00018,aux18203,aux18204_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux18205_BOOL);
constraint array_bool_and([w_00008_00018_BOOL,aux18204_BOOL,aux18205_BOOL],aux18206_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18207,s_00001],0);
constraint int_lt_reif(s_00018,aux18207,aux18208_BOOL);
constraint int_le_reif(s_00001, s_00018,aux18209_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18210_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux18211_BOOL);
constraint array_bool_and([w_00008_00001_BOOL,aux18208_BOOL,aux18209_BOOL,aux18210_BOOL,aux18211_BOOL],aux18212_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18213,s_00002],0);
constraint int_lt_reif(s_00018,aux18213,aux18214_BOOL);
constraint int_le_reif(s_00002, s_00018,aux18215_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux18216_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux18217_BOOL);
constraint array_bool_and([w_00008_00002_BOOL,aux18214_BOOL,aux18215_BOOL,aux18216_BOOL,aux18217_BOOL],aux18218_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18219,s_00003],0);
constraint int_lt_reif(s_00018,aux18219,aux18220_BOOL);
constraint int_le_reif(s_00003, s_00018,aux18221_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux18222_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux18223_BOOL);
constraint array_bool_and([w_00008_00003_BOOL,aux18220_BOOL,aux18221_BOOL,aux18222_BOOL,aux18223_BOOL],aux18224_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18225,s_00004],0);
constraint int_lt_reif(s_00018,aux18225,aux18226_BOOL);
constraint int_le_reif(s_00004, s_00018,aux18227_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux18228_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux18229_BOOL);
constraint array_bool_and([w_00008_00004_BOOL,aux18226_BOOL,aux18227_BOOL,aux18228_BOOL,aux18229_BOOL],aux18230_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18231,s_00005],0);
constraint int_lt_reif(s_00018,aux18231,aux18232_BOOL);
constraint int_le_reif(s_00005, s_00018,aux18233_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux18234_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux18235_BOOL);
constraint array_bool_and([w_00008_00005_BOOL,aux18232_BOOL,aux18233_BOOL,aux18234_BOOL,aux18235_BOOL],aux18236_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18237,s_00006],0);
constraint int_lt_reif(s_00018,aux18237,aux18238_BOOL);
constraint int_le_reif(s_00006, s_00018,aux18239_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux18240_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux18241_BOOL);
constraint array_bool_and([w_00008_00006_BOOL,aux18238_BOOL,aux18239_BOOL,aux18240_BOOL,aux18241_BOOL],aux18242_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18243,s_00007],0);
constraint int_lt_reif(s_00018,aux18243,aux18244_BOOL);
constraint int_le_reif(s_00007, s_00018,aux18245_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux18246_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux18247_BOOL);
constraint array_bool_and([w_00008_00007_BOOL,aux18244_BOOL,aux18245_BOOL,aux18246_BOOL,aux18247_BOOL],aux18248_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18249,s_00008],0);
constraint int_lt_reif(s_00018,aux18249,aux18250_BOOL);
constraint int_le_reif(s_00008, s_00018,aux18251_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux18252_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux18253_BOOL);
constraint array_bool_and([w_00008_00008_BOOL,aux18250_BOOL,aux18251_BOOL,aux18252_BOOL,aux18253_BOOL],aux18254_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18255,s_00009],0);
constraint int_lt_reif(s_00018,aux18255,aux18256_BOOL);
constraint int_le_reif(s_00009, s_00018,aux18257_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux18258_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux18259_BOOL);
constraint array_bool_and([w_00008_00009_BOOL,aux18256_BOOL,aux18257_BOOL,aux18258_BOOL,aux18259_BOOL],aux18260_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18261,s_00010],0);
constraint int_lt_reif(s_00018,aux18261,aux18262_BOOL);
constraint int_le_reif(s_00010, s_00018,aux18263_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux18264_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux18265_BOOL);
constraint array_bool_and([w_00008_00010_BOOL,aux18262_BOOL,aux18263_BOOL,aux18264_BOOL,aux18265_BOOL],aux18266_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18267,s_00011],0);
constraint int_lt_reif(s_00018,aux18267,aux18268_BOOL);
constraint int_le_reif(s_00011, s_00018,aux18269_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux18270_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux18271_BOOL);
constraint array_bool_and([w_00008_00011_BOOL,aux18268_BOOL,aux18269_BOOL,aux18270_BOOL,aux18271_BOOL],aux18272_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18273,s_00012],0);
constraint int_lt_reif(s_00018,aux18273,aux18274_BOOL);
constraint int_le_reif(s_00012, s_00018,aux18275_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux18276_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux18277_BOOL);
constraint array_bool_and([w_00008_00012_BOOL,aux18274_BOOL,aux18275_BOOL,aux18276_BOOL,aux18277_BOOL],aux18278_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18279,s_00013],0);
constraint int_lt_reif(s_00018,aux18279,aux18280_BOOL);
constraint int_le_reif(s_00013, s_00018,aux18281_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux18282_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux18283_BOOL);
constraint array_bool_and([w_00008_00013_BOOL,aux18280_BOOL,aux18281_BOOL,aux18282_BOOL,aux18283_BOOL],aux18284_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18285,s_00015],0);
constraint int_lt_reif(s_00018,aux18285,aux18286_BOOL);
constraint int_le_reif(s_00015, s_00018,aux18287_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux18288_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux18289_BOOL);
constraint array_bool_and([w_00008_00015_BOOL,aux18286_BOOL,aux18287_BOOL,aux18288_BOOL,aux18289_BOOL],aux18290_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux18291,s_00014],0);
constraint int_lt_reif(s_00018,aux18291,aux18292_BOOL);
constraint int_le_reif(s_00014, s_00018,aux18293_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux18294_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux18295_BOOL);
constraint array_bool_and([w_00008_00014_BOOL,aux18292_BOOL,aux18293_BOOL,aux18294_BOOL,aux18295_BOOL],aux18296_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18297,s_00017],0);
constraint int_lt_reif(s_00018,aux18297,aux18298_BOOL);
constraint int_le_reif(s_00017, s_00018,aux18299_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux18300_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux18301_BOOL);
constraint array_bool_and([w_00008_00017_BOOL,aux18298_BOOL,aux18299_BOOL,aux18300_BOOL,aux18301_BOOL],aux18302_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18303,s_00016],0);
constraint int_lt_reif(s_00018,aux18303,aux18304_BOOL);
constraint int_le_reif(s_00016, s_00018,aux18305_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux18306_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux18307_BOOL);
constraint array_bool_and([w_00008_00016_BOOL,aux18304_BOOL,aux18305_BOOL,aux18306_BOOL,aux18307_BOOL],aux18308_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18309,s_00019],0);
constraint int_lt_reif(s_00018,aux18309,aux18310_BOOL);
constraint int_le_reif(s_00019, s_00018,aux18311_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux18312_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux18313_BOOL);
constraint array_bool_and([w_00008_00019_BOOL,aux18310_BOOL,aux18311_BOOL,aux18312_BOOL,aux18313_BOOL],aux18314_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18315,s_00020],0);
constraint int_lt_reif(s_00018,aux18315,aux18316_BOOL);
constraint int_le_reif(s_00020, s_00018,aux18317_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux18318_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux18319_BOOL);
constraint array_bool_and([w_00008_00020_BOOL,aux18316_BOOL,aux18317_BOOL,aux18318_BOOL,aux18319_BOOL],aux18320_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux18206_INTEGER,aux18212_INTEGER,aux18218_INTEGER,aux18224_INTEGER,aux18230_INTEGER,aux18236_INTEGER,aux18242_INTEGER,aux18248_INTEGER,aux18254_INTEGER,aux18260_INTEGER,aux18266_INTEGER,aux18272_INTEGER,aux18278_INTEGER,aux18284_INTEGER,aux18290_INTEGER,aux18296_INTEGER,aux18302_INTEGER,aux18308_INTEGER,aux18314_INTEGER,aux18320_INTEGER,1],0,aux18321_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18322,s_00005],0);
constraint int_lt_reif(s_00005,aux18322,aux18323_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux18324_BOOL);
constraint array_bool_and([w_00008_00005_BOOL,aux18323_BOOL,aux18324_BOOL],aux18325_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18326,s_00001],0);
constraint int_lt_reif(s_00005,aux18326,aux18327_BOOL);
constraint int_le_reif(s_00001, s_00005,aux18328_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18329_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux18330_BOOL);
constraint array_bool_and([w_00008_00001_BOOL,aux18327_BOOL,aux18328_BOOL,aux18329_BOOL,aux18330_BOOL],aux18331_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18332,s_00002],0);
constraint int_lt_reif(s_00005,aux18332,aux18333_BOOL);
constraint int_le_reif(s_00002, s_00005,aux18334_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux18335_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux18336_BOOL);
constraint array_bool_and([w_00008_00002_BOOL,aux18333_BOOL,aux18334_BOOL,aux18335_BOOL,aux18336_BOOL],aux18337_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18338,s_00003],0);
constraint int_lt_reif(s_00005,aux18338,aux18339_BOOL);
constraint int_le_reif(s_00003, s_00005,aux18340_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux18341_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux18342_BOOL);
constraint array_bool_and([w_00008_00003_BOOL,aux18339_BOOL,aux18340_BOOL,aux18341_BOOL,aux18342_BOOL],aux18343_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18344,s_00004],0);
constraint int_lt_reif(s_00005,aux18344,aux18345_BOOL);
constraint int_le_reif(s_00004, s_00005,aux18346_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux18347_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux18348_BOOL);
constraint array_bool_and([w_00008_00004_BOOL,aux18345_BOOL,aux18346_BOOL,aux18347_BOOL,aux18348_BOOL],aux18349_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18350,s_00006],0);
constraint int_lt_reif(s_00005,aux18350,aux18351_BOOL);
constraint int_le_reif(s_00006, s_00005,aux18352_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux18353_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux18354_BOOL);
constraint array_bool_and([w_00008_00006_BOOL,aux18351_BOOL,aux18352_BOOL,aux18353_BOOL,aux18354_BOOL],aux18355_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18356,s_00007],0);
constraint int_lt_reif(s_00005,aux18356,aux18357_BOOL);
constraint int_le_reif(s_00007, s_00005,aux18358_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux18359_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux18360_BOOL);
constraint array_bool_and([w_00008_00007_BOOL,aux18357_BOOL,aux18358_BOOL,aux18359_BOOL,aux18360_BOOL],aux18361_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18362,s_00008],0);
constraint int_lt_reif(s_00005,aux18362,aux18363_BOOL);
constraint int_le_reif(s_00008, s_00005,aux18364_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux18365_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux18366_BOOL);
constraint array_bool_and([w_00008_00008_BOOL,aux18363_BOOL,aux18364_BOOL,aux18365_BOOL,aux18366_BOOL],aux18367_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18368,s_00009],0);
constraint int_lt_reif(s_00005,aux18368,aux18369_BOOL);
constraint int_le_reif(s_00009, s_00005,aux18370_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux18371_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux18372_BOOL);
constraint array_bool_and([w_00008_00009_BOOL,aux18369_BOOL,aux18370_BOOL,aux18371_BOOL,aux18372_BOOL],aux18373_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18374,s_00010],0);
constraint int_lt_reif(s_00005,aux18374,aux18375_BOOL);
constraint int_le_reif(s_00010, s_00005,aux18376_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux18377_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux18378_BOOL);
constraint array_bool_and([w_00008_00010_BOOL,aux18375_BOOL,aux18376_BOOL,aux18377_BOOL,aux18378_BOOL],aux18379_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18380,s_00011],0);
constraint int_lt_reif(s_00005,aux18380,aux18381_BOOL);
constraint int_le_reif(s_00011, s_00005,aux18382_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux18383_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux18384_BOOL);
constraint array_bool_and([w_00008_00011_BOOL,aux18381_BOOL,aux18382_BOOL,aux18383_BOOL,aux18384_BOOL],aux18385_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18386,s_00012],0);
constraint int_lt_reif(s_00005,aux18386,aux18387_BOOL);
constraint int_le_reif(s_00012, s_00005,aux18388_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux18389_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux18390_BOOL);
constraint array_bool_and([w_00008_00012_BOOL,aux18387_BOOL,aux18388_BOOL,aux18389_BOOL,aux18390_BOOL],aux18391_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18392,s_00013],0);
constraint int_lt_reif(s_00005,aux18392,aux18393_BOOL);
constraint int_le_reif(s_00013, s_00005,aux18394_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux18395_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux18396_BOOL);
constraint array_bool_and([w_00008_00013_BOOL,aux18393_BOOL,aux18394_BOOL,aux18395_BOOL,aux18396_BOOL],aux18397_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18398,s_00015],0);
constraint int_lt_reif(s_00005,aux18398,aux18399_BOOL);
constraint int_le_reif(s_00015, s_00005,aux18400_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux18401_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux18402_BOOL);
constraint array_bool_and([w_00008_00015_BOOL,aux18399_BOOL,aux18400_BOOL,aux18401_BOOL,aux18402_BOOL],aux18403_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux18404,s_00014],0);
constraint int_lt_reif(s_00005,aux18404,aux18405_BOOL);
constraint int_le_reif(s_00014, s_00005,aux18406_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux18407_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux18408_BOOL);
constraint array_bool_and([w_00008_00014_BOOL,aux18405_BOOL,aux18406_BOOL,aux18407_BOOL,aux18408_BOOL],aux18409_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18410,s_00017],0);
constraint int_lt_reif(s_00005,aux18410,aux18411_BOOL);
constraint int_le_reif(s_00017, s_00005,aux18412_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux18413_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux18414_BOOL);
constraint array_bool_and([w_00008_00017_BOOL,aux18411_BOOL,aux18412_BOOL,aux18413_BOOL,aux18414_BOOL],aux18415_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18416,s_00016],0);
constraint int_lt_reif(s_00005,aux18416,aux18417_BOOL);
constraint int_le_reif(s_00016, s_00005,aux18418_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux18419_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux18420_BOOL);
constraint array_bool_and([w_00008_00016_BOOL,aux18417_BOOL,aux18418_BOOL,aux18419_BOOL,aux18420_BOOL],aux18421_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18422,s_00018],0);
constraint int_lt_reif(s_00005,aux18422,aux18423_BOOL);
constraint int_le_reif(s_00018, s_00005,aux18424_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux18425_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux18426_BOOL);
constraint array_bool_and([w_00008_00018_BOOL,aux18423_BOOL,aux18424_BOOL,aux18425_BOOL,aux18426_BOOL],aux18427_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18428,s_00019],0);
constraint int_lt_reif(s_00005,aux18428,aux18429_BOOL);
constraint int_le_reif(s_00019, s_00005,aux18430_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux18431_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux18432_BOOL);
constraint array_bool_and([w_00008_00019_BOOL,aux18429_BOOL,aux18430_BOOL,aux18431_BOOL,aux18432_BOOL],aux18433_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18434,s_00020],0);
constraint int_lt_reif(s_00005,aux18434,aux18435_BOOL);
constraint int_le_reif(s_00020, s_00005,aux18436_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux18437_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux18438_BOOL);
constraint array_bool_and([w_00008_00020_BOOL,aux18435_BOOL,aux18436_BOOL,aux18437_BOOL,aux18438_BOOL],aux18439_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux18325_INTEGER,aux18331_INTEGER,aux18337_INTEGER,aux18343_INTEGER,aux18349_INTEGER,aux18355_INTEGER,aux18361_INTEGER,aux18367_INTEGER,aux18373_INTEGER,aux18379_INTEGER,aux18385_INTEGER,aux18391_INTEGER,aux18397_INTEGER,aux18403_INTEGER,aux18409_INTEGER,aux18415_INTEGER,aux18421_INTEGER,aux18427_INTEGER,aux18433_INTEGER,aux18439_INTEGER,1],0,aux18440_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18441,s_00011],0);
constraint int_lt_reif(s_00011,aux18441,aux18442_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux18443_BOOL);
constraint array_bool_and([w_00008_00011_BOOL,aux18442_BOOL,aux18443_BOOL],aux18444_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18445,s_00001],0);
constraint int_lt_reif(s_00011,aux18445,aux18446_BOOL);
constraint int_le_reif(s_00001, s_00011,aux18447_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18448_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux18449_BOOL);
constraint array_bool_and([w_00008_00001_BOOL,aux18446_BOOL,aux18447_BOOL,aux18448_BOOL,aux18449_BOOL],aux18450_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18451,s_00002],0);
constraint int_lt_reif(s_00011,aux18451,aux18452_BOOL);
constraint int_le_reif(s_00002, s_00011,aux18453_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux18454_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux18455_BOOL);
constraint array_bool_and([w_00008_00002_BOOL,aux18452_BOOL,aux18453_BOOL,aux18454_BOOL,aux18455_BOOL],aux18456_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18457,s_00003],0);
constraint int_lt_reif(s_00011,aux18457,aux18458_BOOL);
constraint int_le_reif(s_00003, s_00011,aux18459_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux18460_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux18461_BOOL);
constraint array_bool_and([w_00008_00003_BOOL,aux18458_BOOL,aux18459_BOOL,aux18460_BOOL,aux18461_BOOL],aux18462_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18463,s_00004],0);
constraint int_lt_reif(s_00011,aux18463,aux18464_BOOL);
constraint int_le_reif(s_00004, s_00011,aux18465_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux18466_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux18467_BOOL);
constraint array_bool_and([w_00008_00004_BOOL,aux18464_BOOL,aux18465_BOOL,aux18466_BOOL,aux18467_BOOL],aux18468_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18469,s_00005],0);
constraint int_lt_reif(s_00011,aux18469,aux18470_BOOL);
constraint int_le_reif(s_00005, s_00011,aux18471_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux18472_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux18473_BOOL);
constraint array_bool_and([w_00008_00005_BOOL,aux18470_BOOL,aux18471_BOOL,aux18472_BOOL,aux18473_BOOL],aux18474_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18475,s_00006],0);
constraint int_lt_reif(s_00011,aux18475,aux18476_BOOL);
constraint int_le_reif(s_00006, s_00011,aux18477_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux18478_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux18479_BOOL);
constraint array_bool_and([w_00008_00006_BOOL,aux18476_BOOL,aux18477_BOOL,aux18478_BOOL,aux18479_BOOL],aux18480_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18481,s_00007],0);
constraint int_lt_reif(s_00011,aux18481,aux18482_BOOL);
constraint int_le_reif(s_00007, s_00011,aux18483_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux18484_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux18485_BOOL);
constraint array_bool_and([w_00008_00007_BOOL,aux18482_BOOL,aux18483_BOOL,aux18484_BOOL,aux18485_BOOL],aux18486_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18487,s_00008],0);
constraint int_lt_reif(s_00011,aux18487,aux18488_BOOL);
constraint int_le_reif(s_00008, s_00011,aux18489_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux18490_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux18491_BOOL);
constraint array_bool_and([w_00008_00008_BOOL,aux18488_BOOL,aux18489_BOOL,aux18490_BOOL,aux18491_BOOL],aux18492_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18493,s_00009],0);
constraint int_lt_reif(s_00011,aux18493,aux18494_BOOL);
constraint int_le_reif(s_00009, s_00011,aux18495_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux18496_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux18497_BOOL);
constraint array_bool_and([w_00008_00009_BOOL,aux18494_BOOL,aux18495_BOOL,aux18496_BOOL,aux18497_BOOL],aux18498_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18499,s_00010],0);
constraint int_lt_reif(s_00011,aux18499,aux18500_BOOL);
constraint int_le_reif(s_00010, s_00011,aux18501_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux18502_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux18503_BOOL);
constraint array_bool_and([w_00008_00010_BOOL,aux18500_BOOL,aux18501_BOOL,aux18502_BOOL,aux18503_BOOL],aux18504_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18505,s_00012],0);
constraint int_lt_reif(s_00011,aux18505,aux18506_BOOL);
constraint int_le_reif(s_00012, s_00011,aux18507_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux18508_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux18509_BOOL);
constraint array_bool_and([w_00008_00012_BOOL,aux18506_BOOL,aux18507_BOOL,aux18508_BOOL,aux18509_BOOL],aux18510_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18511,s_00013],0);
constraint int_lt_reif(s_00011,aux18511,aux18512_BOOL);
constraint int_le_reif(s_00013, s_00011,aux18513_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux18514_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux18515_BOOL);
constraint array_bool_and([w_00008_00013_BOOL,aux18512_BOOL,aux18513_BOOL,aux18514_BOOL,aux18515_BOOL],aux18516_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18517,s_00015],0);
constraint int_lt_reif(s_00011,aux18517,aux18518_BOOL);
constraint int_le_reif(s_00015, s_00011,aux18519_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux18520_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux18521_BOOL);
constraint array_bool_and([w_00008_00015_BOOL,aux18518_BOOL,aux18519_BOOL,aux18520_BOOL,aux18521_BOOL],aux18522_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux18523,s_00014],0);
constraint int_lt_reif(s_00011,aux18523,aux18524_BOOL);
constraint int_le_reif(s_00014, s_00011,aux18525_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux18526_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux18527_BOOL);
constraint array_bool_and([w_00008_00014_BOOL,aux18524_BOOL,aux18525_BOOL,aux18526_BOOL,aux18527_BOOL],aux18528_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18529,s_00017],0);
constraint int_lt_reif(s_00011,aux18529,aux18530_BOOL);
constraint int_le_reif(s_00017, s_00011,aux18531_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux18532_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux18533_BOOL);
constraint array_bool_and([w_00008_00017_BOOL,aux18530_BOOL,aux18531_BOOL,aux18532_BOOL,aux18533_BOOL],aux18534_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18535,s_00016],0);
constraint int_lt_reif(s_00011,aux18535,aux18536_BOOL);
constraint int_le_reif(s_00016, s_00011,aux18537_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux18538_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux18539_BOOL);
constraint array_bool_and([w_00008_00016_BOOL,aux18536_BOOL,aux18537_BOOL,aux18538_BOOL,aux18539_BOOL],aux18540_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18541,s_00018],0);
constraint int_lt_reif(s_00011,aux18541,aux18542_BOOL);
constraint int_le_reif(s_00018, s_00011,aux18543_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux18544_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux18545_BOOL);
constraint array_bool_and([w_00008_00018_BOOL,aux18542_BOOL,aux18543_BOOL,aux18544_BOOL,aux18545_BOOL],aux18546_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18547,s_00019],0);
constraint int_lt_reif(s_00011,aux18547,aux18548_BOOL);
constraint int_le_reif(s_00019, s_00011,aux18549_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux18550_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux18551_BOOL);
constraint array_bool_and([w_00008_00019_BOOL,aux18548_BOOL,aux18549_BOOL,aux18550_BOOL,aux18551_BOOL],aux18552_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18553,s_00020],0);
constraint int_lt_reif(s_00011,aux18553,aux18554_BOOL);
constraint int_le_reif(s_00020, s_00011,aux18555_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux18556_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux18557_BOOL);
constraint array_bool_and([w_00008_00020_BOOL,aux18554_BOOL,aux18555_BOOL,aux18556_BOOL,aux18557_BOOL],aux18558_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux18444_INTEGER,aux18450_INTEGER,aux18456_INTEGER,aux18462_INTEGER,aux18468_INTEGER,aux18474_INTEGER,aux18480_INTEGER,aux18486_INTEGER,aux18492_INTEGER,aux18498_INTEGER,aux18504_INTEGER,aux18510_INTEGER,aux18516_INTEGER,aux18522_INTEGER,aux18528_INTEGER,aux18534_INTEGER,aux18540_INTEGER,aux18546_INTEGER,aux18552_INTEGER,aux18558_INTEGER,1],0,aux18559_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18560,s_00001],0);
constraint int_lt_reif(s_00001,aux18560,aux18561_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18562_BOOL);
constraint array_bool_and([w_00008_00001_BOOL,aux18561_BOOL,aux18562_BOOL],aux18563_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18564,s_00002],0);
constraint int_lt_reif(s_00001,aux18564,aux18565_BOOL);
constraint int_le_reif(s_00002, s_00001,aux18566_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18567_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux18568_BOOL);
constraint array_bool_and([w_00008_00002_BOOL,aux18565_BOOL,aux18566_BOOL,aux18567_BOOL,aux18568_BOOL],aux18569_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18570,s_00003],0);
constraint int_lt_reif(s_00001,aux18570,aux18571_BOOL);
constraint int_le_reif(s_00003, s_00001,aux18572_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18573_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux18574_BOOL);
constraint array_bool_and([w_00008_00003_BOOL,aux18571_BOOL,aux18572_BOOL,aux18573_BOOL,aux18574_BOOL],aux18575_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18576,s_00004],0);
constraint int_lt_reif(s_00001,aux18576,aux18577_BOOL);
constraint int_le_reif(s_00004, s_00001,aux18578_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18579_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux18580_BOOL);
constraint array_bool_and([w_00008_00004_BOOL,aux18577_BOOL,aux18578_BOOL,aux18579_BOOL,aux18580_BOOL],aux18581_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18582,s_00005],0);
constraint int_lt_reif(s_00001,aux18582,aux18583_BOOL);
constraint int_le_reif(s_00005, s_00001,aux18584_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18585_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux18586_BOOL);
constraint array_bool_and([w_00008_00005_BOOL,aux18583_BOOL,aux18584_BOOL,aux18585_BOOL,aux18586_BOOL],aux18587_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18588,s_00006],0);
constraint int_lt_reif(s_00001,aux18588,aux18589_BOOL);
constraint int_le_reif(s_00006, s_00001,aux18590_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18591_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux18592_BOOL);
constraint array_bool_and([w_00008_00006_BOOL,aux18589_BOOL,aux18590_BOOL,aux18591_BOOL,aux18592_BOOL],aux18593_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18594,s_00007],0);
constraint int_lt_reif(s_00001,aux18594,aux18595_BOOL);
constraint int_le_reif(s_00007, s_00001,aux18596_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18597_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux18598_BOOL);
constraint array_bool_and([w_00008_00007_BOOL,aux18595_BOOL,aux18596_BOOL,aux18597_BOOL,aux18598_BOOL],aux18599_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18600,s_00008],0);
constraint int_lt_reif(s_00001,aux18600,aux18601_BOOL);
constraint int_le_reif(s_00008, s_00001,aux18602_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18603_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux18604_BOOL);
constraint array_bool_and([w_00008_00008_BOOL,aux18601_BOOL,aux18602_BOOL,aux18603_BOOL,aux18604_BOOL],aux18605_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18606,s_00009],0);
constraint int_lt_reif(s_00001,aux18606,aux18607_BOOL);
constraint int_le_reif(s_00009, s_00001,aux18608_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18609_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux18610_BOOL);
constraint array_bool_and([w_00008_00009_BOOL,aux18607_BOOL,aux18608_BOOL,aux18609_BOOL,aux18610_BOOL],aux18611_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18612,s_00010],0);
constraint int_lt_reif(s_00001,aux18612,aux18613_BOOL);
constraint int_le_reif(s_00010, s_00001,aux18614_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18615_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux18616_BOOL);
constraint array_bool_and([w_00008_00010_BOOL,aux18613_BOOL,aux18614_BOOL,aux18615_BOOL,aux18616_BOOL],aux18617_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18618,s_00011],0);
constraint int_lt_reif(s_00001,aux18618,aux18619_BOOL);
constraint int_le_reif(s_00011, s_00001,aux18620_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18621_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux18622_BOOL);
constraint array_bool_and([w_00008_00011_BOOL,aux18619_BOOL,aux18620_BOOL,aux18621_BOOL,aux18622_BOOL],aux18623_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18624,s_00012],0);
constraint int_lt_reif(s_00001,aux18624,aux18625_BOOL);
constraint int_le_reif(s_00012, s_00001,aux18626_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18627_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux18628_BOOL);
constraint array_bool_and([w_00008_00012_BOOL,aux18625_BOOL,aux18626_BOOL,aux18627_BOOL,aux18628_BOOL],aux18629_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18630,s_00013],0);
constraint int_lt_reif(s_00001,aux18630,aux18631_BOOL);
constraint int_le_reif(s_00013, s_00001,aux18632_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18633_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux18634_BOOL);
constraint array_bool_and([w_00008_00013_BOOL,aux18631_BOOL,aux18632_BOOL,aux18633_BOOL,aux18634_BOOL],aux18635_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18636,s_00015],0);
constraint int_lt_reif(s_00001,aux18636,aux18637_BOOL);
constraint int_le_reif(s_00015, s_00001,aux18638_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18639_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux18640_BOOL);
constraint array_bool_and([w_00008_00015_BOOL,aux18637_BOOL,aux18638_BOOL,aux18639_BOOL,aux18640_BOOL],aux18641_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux18642,s_00014],0);
constraint int_lt_reif(s_00001,aux18642,aux18643_BOOL);
constraint int_le_reif(s_00014, s_00001,aux18644_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18645_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux18646_BOOL);
constraint array_bool_and([w_00008_00014_BOOL,aux18643_BOOL,aux18644_BOOL,aux18645_BOOL,aux18646_BOOL],aux18647_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18648,s_00017],0);
constraint int_lt_reif(s_00001,aux18648,aux18649_BOOL);
constraint int_le_reif(s_00017, s_00001,aux18650_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18651_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux18652_BOOL);
constraint array_bool_and([w_00008_00017_BOOL,aux18649_BOOL,aux18650_BOOL,aux18651_BOOL,aux18652_BOOL],aux18653_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18654,s_00016],0);
constraint int_lt_reif(s_00001,aux18654,aux18655_BOOL);
constraint int_le_reif(s_00016, s_00001,aux18656_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18657_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux18658_BOOL);
constraint array_bool_and([w_00008_00016_BOOL,aux18655_BOOL,aux18656_BOOL,aux18657_BOOL,aux18658_BOOL],aux18659_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18660,s_00018],0);
constraint int_lt_reif(s_00001,aux18660,aux18661_BOOL);
constraint int_le_reif(s_00018, s_00001,aux18662_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18663_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux18664_BOOL);
constraint array_bool_and([w_00008_00018_BOOL,aux18661_BOOL,aux18662_BOOL,aux18663_BOOL,aux18664_BOOL],aux18665_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18666,s_00019],0);
constraint int_lt_reif(s_00001,aux18666,aux18667_BOOL);
constraint int_le_reif(s_00019, s_00001,aux18668_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18669_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux18670_BOOL);
constraint array_bool_and([w_00008_00019_BOOL,aux18667_BOOL,aux18668_BOOL,aux18669_BOOL,aux18670_BOOL],aux18671_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18672,s_00020],0);
constraint int_lt_reif(s_00001,aux18672,aux18673_BOOL);
constraint int_le_reif(s_00020, s_00001,aux18674_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18675_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux18676_BOOL);
constraint array_bool_and([w_00008_00020_BOOL,aux18673_BOOL,aux18674_BOOL,aux18675_BOOL,aux18676_BOOL],aux18677_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux18563_INTEGER,aux18569_INTEGER,aux18575_INTEGER,aux18581_INTEGER,aux18587_INTEGER,aux18593_INTEGER,aux18599_INTEGER,aux18605_INTEGER,aux18611_INTEGER,aux18617_INTEGER,aux18623_INTEGER,aux18629_INTEGER,aux18635_INTEGER,aux18641_INTEGER,aux18647_INTEGER,aux18653_INTEGER,aux18659_INTEGER,aux18665_INTEGER,aux18671_INTEGER,aux18677_INTEGER,1],0,aux18678_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18679,s_00012],0);
constraint int_lt_reif(s_00012,aux18679,aux18680_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux18681_BOOL);
constraint array_bool_and([w_00008_00012_BOOL,aux18680_BOOL,aux18681_BOOL],aux18682_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18683,s_00001],0);
constraint int_lt_reif(s_00012,aux18683,aux18684_BOOL);
constraint int_le_reif(s_00001, s_00012,aux18685_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18686_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux18687_BOOL);
constraint array_bool_and([w_00008_00001_BOOL,aux18684_BOOL,aux18685_BOOL,aux18686_BOOL,aux18687_BOOL],aux18688_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18689,s_00002],0);
constraint int_lt_reif(s_00012,aux18689,aux18690_BOOL);
constraint int_le_reif(s_00002, s_00012,aux18691_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux18692_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux18693_BOOL);
constraint array_bool_and([w_00008_00002_BOOL,aux18690_BOOL,aux18691_BOOL,aux18692_BOOL,aux18693_BOOL],aux18694_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18695,s_00003],0);
constraint int_lt_reif(s_00012,aux18695,aux18696_BOOL);
constraint int_le_reif(s_00003, s_00012,aux18697_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux18698_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux18699_BOOL);
constraint array_bool_and([w_00008_00003_BOOL,aux18696_BOOL,aux18697_BOOL,aux18698_BOOL,aux18699_BOOL],aux18700_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18701,s_00004],0);
constraint int_lt_reif(s_00012,aux18701,aux18702_BOOL);
constraint int_le_reif(s_00004, s_00012,aux18703_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux18704_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux18705_BOOL);
constraint array_bool_and([w_00008_00004_BOOL,aux18702_BOOL,aux18703_BOOL,aux18704_BOOL,aux18705_BOOL],aux18706_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18707,s_00005],0);
constraint int_lt_reif(s_00012,aux18707,aux18708_BOOL);
constraint int_le_reif(s_00005, s_00012,aux18709_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux18710_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux18711_BOOL);
constraint array_bool_and([w_00008_00005_BOOL,aux18708_BOOL,aux18709_BOOL,aux18710_BOOL,aux18711_BOOL],aux18712_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18713,s_00006],0);
constraint int_lt_reif(s_00012,aux18713,aux18714_BOOL);
constraint int_le_reif(s_00006, s_00012,aux18715_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux18716_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux18717_BOOL);
constraint array_bool_and([w_00008_00006_BOOL,aux18714_BOOL,aux18715_BOOL,aux18716_BOOL,aux18717_BOOL],aux18718_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18719,s_00007],0);
constraint int_lt_reif(s_00012,aux18719,aux18720_BOOL);
constraint int_le_reif(s_00007, s_00012,aux18721_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux18722_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux18723_BOOL);
constraint array_bool_and([w_00008_00007_BOOL,aux18720_BOOL,aux18721_BOOL,aux18722_BOOL,aux18723_BOOL],aux18724_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18725,s_00008],0);
constraint int_lt_reif(s_00012,aux18725,aux18726_BOOL);
constraint int_le_reif(s_00008, s_00012,aux18727_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux18728_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux18729_BOOL);
constraint array_bool_and([w_00008_00008_BOOL,aux18726_BOOL,aux18727_BOOL,aux18728_BOOL,aux18729_BOOL],aux18730_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18731,s_00009],0);
constraint int_lt_reif(s_00012,aux18731,aux18732_BOOL);
constraint int_le_reif(s_00009, s_00012,aux18733_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux18734_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux18735_BOOL);
constraint array_bool_and([w_00008_00009_BOOL,aux18732_BOOL,aux18733_BOOL,aux18734_BOOL,aux18735_BOOL],aux18736_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18737,s_00010],0);
constraint int_lt_reif(s_00012,aux18737,aux18738_BOOL);
constraint int_le_reif(s_00010, s_00012,aux18739_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux18740_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux18741_BOOL);
constraint array_bool_and([w_00008_00010_BOOL,aux18738_BOOL,aux18739_BOOL,aux18740_BOOL,aux18741_BOOL],aux18742_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18743,s_00011],0);
constraint int_lt_reif(s_00012,aux18743,aux18744_BOOL);
constraint int_le_reif(s_00011, s_00012,aux18745_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux18746_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux18747_BOOL);
constraint array_bool_and([w_00008_00011_BOOL,aux18744_BOOL,aux18745_BOOL,aux18746_BOOL,aux18747_BOOL],aux18748_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18749,s_00013],0);
constraint int_lt_reif(s_00012,aux18749,aux18750_BOOL);
constraint int_le_reif(s_00013, s_00012,aux18751_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux18752_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux18753_BOOL);
constraint array_bool_and([w_00008_00013_BOOL,aux18750_BOOL,aux18751_BOOL,aux18752_BOOL,aux18753_BOOL],aux18754_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18755,s_00015],0);
constraint int_lt_reif(s_00012,aux18755,aux18756_BOOL);
constraint int_le_reif(s_00015, s_00012,aux18757_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux18758_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux18759_BOOL);
constraint array_bool_and([w_00008_00015_BOOL,aux18756_BOOL,aux18757_BOOL,aux18758_BOOL,aux18759_BOOL],aux18760_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux18761,s_00014],0);
constraint int_lt_reif(s_00012,aux18761,aux18762_BOOL);
constraint int_le_reif(s_00014, s_00012,aux18763_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux18764_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux18765_BOOL);
constraint array_bool_and([w_00008_00014_BOOL,aux18762_BOOL,aux18763_BOOL,aux18764_BOOL,aux18765_BOOL],aux18766_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18767,s_00017],0);
constraint int_lt_reif(s_00012,aux18767,aux18768_BOOL);
constraint int_le_reif(s_00017, s_00012,aux18769_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux18770_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux18771_BOOL);
constraint array_bool_and([w_00008_00017_BOOL,aux18768_BOOL,aux18769_BOOL,aux18770_BOOL,aux18771_BOOL],aux18772_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18773,s_00016],0);
constraint int_lt_reif(s_00012,aux18773,aux18774_BOOL);
constraint int_le_reif(s_00016, s_00012,aux18775_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux18776_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux18777_BOOL);
constraint array_bool_and([w_00008_00016_BOOL,aux18774_BOOL,aux18775_BOOL,aux18776_BOOL,aux18777_BOOL],aux18778_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18779,s_00018],0);
constraint int_lt_reif(s_00012,aux18779,aux18780_BOOL);
constraint int_le_reif(s_00018, s_00012,aux18781_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux18782_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux18783_BOOL);
constraint array_bool_and([w_00008_00018_BOOL,aux18780_BOOL,aux18781_BOOL,aux18782_BOOL,aux18783_BOOL],aux18784_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18785,s_00019],0);
constraint int_lt_reif(s_00012,aux18785,aux18786_BOOL);
constraint int_le_reif(s_00019, s_00012,aux18787_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux18788_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux18789_BOOL);
constraint array_bool_and([w_00008_00019_BOOL,aux18786_BOOL,aux18787_BOOL,aux18788_BOOL,aux18789_BOOL],aux18790_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18791,s_00020],0);
constraint int_lt_reif(s_00012,aux18791,aux18792_BOOL);
constraint int_le_reif(s_00020, s_00012,aux18793_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux18794_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux18795_BOOL);
constraint array_bool_and([w_00008_00020_BOOL,aux18792_BOOL,aux18793_BOOL,aux18794_BOOL,aux18795_BOOL],aux18796_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux18682_INTEGER,aux18688_INTEGER,aux18694_INTEGER,aux18700_INTEGER,aux18706_INTEGER,aux18712_INTEGER,aux18718_INTEGER,aux18724_INTEGER,aux18730_INTEGER,aux18736_INTEGER,aux18742_INTEGER,aux18748_INTEGER,aux18754_INTEGER,aux18760_INTEGER,aux18766_INTEGER,aux18772_INTEGER,aux18778_INTEGER,aux18784_INTEGER,aux18790_INTEGER,aux18796_INTEGER,1],0,aux18797_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux18798,s_00014],0);
constraint int_lt_reif(s_00014,aux18798,aux18799_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux18800_BOOL);
constraint array_bool_and([w_00008_00014_BOOL,aux18799_BOOL,aux18800_BOOL],aux18801_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18802,s_00001],0);
constraint int_lt_reif(s_00014,aux18802,aux18803_BOOL);
constraint int_le_reif(s_00001, s_00014,aux18804_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18805_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux18806_BOOL);
constraint array_bool_and([w_00008_00001_BOOL,aux18803_BOOL,aux18804_BOOL,aux18805_BOOL,aux18806_BOOL],aux18807_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18808,s_00002],0);
constraint int_lt_reif(s_00014,aux18808,aux18809_BOOL);
constraint int_le_reif(s_00002, s_00014,aux18810_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux18811_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux18812_BOOL);
constraint array_bool_and([w_00008_00002_BOOL,aux18809_BOOL,aux18810_BOOL,aux18811_BOOL,aux18812_BOOL],aux18813_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18814,s_00003],0);
constraint int_lt_reif(s_00014,aux18814,aux18815_BOOL);
constraint int_le_reif(s_00003, s_00014,aux18816_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux18817_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux18818_BOOL);
constraint array_bool_and([w_00008_00003_BOOL,aux18815_BOOL,aux18816_BOOL,aux18817_BOOL,aux18818_BOOL],aux18819_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18820,s_00004],0);
constraint int_lt_reif(s_00014,aux18820,aux18821_BOOL);
constraint int_le_reif(s_00004, s_00014,aux18822_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux18823_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux18824_BOOL);
constraint array_bool_and([w_00008_00004_BOOL,aux18821_BOOL,aux18822_BOOL,aux18823_BOOL,aux18824_BOOL],aux18825_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18826,s_00005],0);
constraint int_lt_reif(s_00014,aux18826,aux18827_BOOL);
constraint int_le_reif(s_00005, s_00014,aux18828_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux18829_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux18830_BOOL);
constraint array_bool_and([w_00008_00005_BOOL,aux18827_BOOL,aux18828_BOOL,aux18829_BOOL,aux18830_BOOL],aux18831_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18832,s_00006],0);
constraint int_lt_reif(s_00014,aux18832,aux18833_BOOL);
constraint int_le_reif(s_00006, s_00014,aux18834_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux18835_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux18836_BOOL);
constraint array_bool_and([w_00008_00006_BOOL,aux18833_BOOL,aux18834_BOOL,aux18835_BOOL,aux18836_BOOL],aux18837_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18838,s_00007],0);
constraint int_lt_reif(s_00014,aux18838,aux18839_BOOL);
constraint int_le_reif(s_00007, s_00014,aux18840_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux18841_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux18842_BOOL);
constraint array_bool_and([w_00008_00007_BOOL,aux18839_BOOL,aux18840_BOOL,aux18841_BOOL,aux18842_BOOL],aux18843_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18844,s_00008],0);
constraint int_lt_reif(s_00014,aux18844,aux18845_BOOL);
constraint int_le_reif(s_00008, s_00014,aux18846_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux18847_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux18848_BOOL);
constraint array_bool_and([w_00008_00008_BOOL,aux18845_BOOL,aux18846_BOOL,aux18847_BOOL,aux18848_BOOL],aux18849_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18850,s_00009],0);
constraint int_lt_reif(s_00014,aux18850,aux18851_BOOL);
constraint int_le_reif(s_00009, s_00014,aux18852_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux18853_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux18854_BOOL);
constraint array_bool_and([w_00008_00009_BOOL,aux18851_BOOL,aux18852_BOOL,aux18853_BOOL,aux18854_BOOL],aux18855_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18856,s_00010],0);
constraint int_lt_reif(s_00014,aux18856,aux18857_BOOL);
constraint int_le_reif(s_00010, s_00014,aux18858_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux18859_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux18860_BOOL);
constraint array_bool_and([w_00008_00010_BOOL,aux18857_BOOL,aux18858_BOOL,aux18859_BOOL,aux18860_BOOL],aux18861_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18862,s_00011],0);
constraint int_lt_reif(s_00014,aux18862,aux18863_BOOL);
constraint int_le_reif(s_00011, s_00014,aux18864_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux18865_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux18866_BOOL);
constraint array_bool_and([w_00008_00011_BOOL,aux18863_BOOL,aux18864_BOOL,aux18865_BOOL,aux18866_BOOL],aux18867_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18868,s_00012],0);
constraint int_lt_reif(s_00014,aux18868,aux18869_BOOL);
constraint int_le_reif(s_00012, s_00014,aux18870_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux18871_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux18872_BOOL);
constraint array_bool_and([w_00008_00012_BOOL,aux18869_BOOL,aux18870_BOOL,aux18871_BOOL,aux18872_BOOL],aux18873_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18874,s_00013],0);
constraint int_lt_reif(s_00014,aux18874,aux18875_BOOL);
constraint int_le_reif(s_00013, s_00014,aux18876_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux18877_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux18878_BOOL);
constraint array_bool_and([w_00008_00013_BOOL,aux18875_BOOL,aux18876_BOOL,aux18877_BOOL,aux18878_BOOL],aux18879_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18880,s_00015],0);
constraint int_lt_reif(s_00014,aux18880,aux18881_BOOL);
constraint int_le_reif(s_00015, s_00014,aux18882_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux18883_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux18884_BOOL);
constraint array_bool_and([w_00008_00015_BOOL,aux18881_BOOL,aux18882_BOOL,aux18883_BOOL,aux18884_BOOL],aux18885_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18886,s_00017],0);
constraint int_lt_reif(s_00014,aux18886,aux18887_BOOL);
constraint int_le_reif(s_00017, s_00014,aux18888_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux18889_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux18890_BOOL);
constraint array_bool_and([w_00008_00017_BOOL,aux18887_BOOL,aux18888_BOOL,aux18889_BOOL,aux18890_BOOL],aux18891_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18892,s_00016],0);
constraint int_lt_reif(s_00014,aux18892,aux18893_BOOL);
constraint int_le_reif(s_00016, s_00014,aux18894_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux18895_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux18896_BOOL);
constraint array_bool_and([w_00008_00016_BOOL,aux18893_BOOL,aux18894_BOOL,aux18895_BOOL,aux18896_BOOL],aux18897_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18898,s_00018],0);
constraint int_lt_reif(s_00014,aux18898,aux18899_BOOL);
constraint int_le_reif(s_00018, s_00014,aux18900_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux18901_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux18902_BOOL);
constraint array_bool_and([w_00008_00018_BOOL,aux18899_BOOL,aux18900_BOOL,aux18901_BOOL,aux18902_BOOL],aux18903_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18904,s_00019],0);
constraint int_lt_reif(s_00014,aux18904,aux18905_BOOL);
constraint int_le_reif(s_00019, s_00014,aux18906_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux18907_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux18908_BOOL);
constraint array_bool_and([w_00008_00019_BOOL,aux18905_BOOL,aux18906_BOOL,aux18907_BOOL,aux18908_BOOL],aux18909_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18910,s_00020],0);
constraint int_lt_reif(s_00014,aux18910,aux18911_BOOL);
constraint int_le_reif(s_00020, s_00014,aux18912_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux18913_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux18914_BOOL);
constraint array_bool_and([w_00008_00020_BOOL,aux18911_BOOL,aux18912_BOOL,aux18913_BOOL,aux18914_BOOL],aux18915_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux18801_INTEGER,aux18807_INTEGER,aux18813_INTEGER,aux18819_INTEGER,aux18825_INTEGER,aux18831_INTEGER,aux18837_INTEGER,aux18843_INTEGER,aux18849_INTEGER,aux18855_INTEGER,aux18861_INTEGER,aux18867_INTEGER,aux18873_INTEGER,aux18879_INTEGER,aux18885_INTEGER,aux18891_INTEGER,aux18897_INTEGER,aux18903_INTEGER,aux18909_INTEGER,aux18915_INTEGER,1],0,aux18916_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18917,s_00015],0);
constraint int_lt_reif(s_00015,aux18917,aux18918_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux18919_BOOL);
constraint array_bool_and([w_00008_00015_BOOL,aux18918_BOOL,aux18919_BOOL],aux18920_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18921,s_00001],0);
constraint int_lt_reif(s_00015,aux18921,aux18922_BOOL);
constraint int_le_reif(s_00001, s_00015,aux18923_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux18924_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux18925_BOOL);
constraint array_bool_and([w_00008_00001_BOOL,aux18922_BOOL,aux18923_BOOL,aux18924_BOOL,aux18925_BOOL],aux18926_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18927,s_00002],0);
constraint int_lt_reif(s_00015,aux18927,aux18928_BOOL);
constraint int_le_reif(s_00002, s_00015,aux18929_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux18930_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux18931_BOOL);
constraint array_bool_and([w_00008_00002_BOOL,aux18928_BOOL,aux18929_BOOL,aux18930_BOOL,aux18931_BOOL],aux18932_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18933,s_00003],0);
constraint int_lt_reif(s_00015,aux18933,aux18934_BOOL);
constraint int_le_reif(s_00003, s_00015,aux18935_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux18936_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux18937_BOOL);
constraint array_bool_and([w_00008_00003_BOOL,aux18934_BOOL,aux18935_BOOL,aux18936_BOOL,aux18937_BOOL],aux18938_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18939,s_00004],0);
constraint int_lt_reif(s_00015,aux18939,aux18940_BOOL);
constraint int_le_reif(s_00004, s_00015,aux18941_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux18942_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux18943_BOOL);
constraint array_bool_and([w_00008_00004_BOOL,aux18940_BOOL,aux18941_BOOL,aux18942_BOOL,aux18943_BOOL],aux18944_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18945,s_00005],0);
constraint int_lt_reif(s_00015,aux18945,aux18946_BOOL);
constraint int_le_reif(s_00005, s_00015,aux18947_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux18948_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux18949_BOOL);
constraint array_bool_and([w_00008_00005_BOOL,aux18946_BOOL,aux18947_BOOL,aux18948_BOOL,aux18949_BOOL],aux18950_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux18951,s_00006],0);
constraint int_lt_reif(s_00015,aux18951,aux18952_BOOL);
constraint int_le_reif(s_00006, s_00015,aux18953_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux18954_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux18955_BOOL);
constraint array_bool_and([w_00008_00006_BOOL,aux18952_BOOL,aux18953_BOOL,aux18954_BOOL,aux18955_BOOL],aux18956_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18957,s_00007],0);
constraint int_lt_reif(s_00015,aux18957,aux18958_BOOL);
constraint int_le_reif(s_00007, s_00015,aux18959_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux18960_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux18961_BOOL);
constraint array_bool_and([w_00008_00007_BOOL,aux18958_BOOL,aux18959_BOOL,aux18960_BOOL,aux18961_BOOL],aux18962_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18963,s_00008],0);
constraint int_lt_reif(s_00015,aux18963,aux18964_BOOL);
constraint int_le_reif(s_00008, s_00015,aux18965_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux18966_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux18967_BOOL);
constraint array_bool_and([w_00008_00008_BOOL,aux18964_BOOL,aux18965_BOOL,aux18966_BOOL,aux18967_BOOL],aux18968_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18969,s_00009],0);
constraint int_lt_reif(s_00015,aux18969,aux18970_BOOL);
constraint int_le_reif(s_00009, s_00015,aux18971_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux18972_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux18973_BOOL);
constraint array_bool_and([w_00008_00009_BOOL,aux18970_BOOL,aux18971_BOOL,aux18972_BOOL,aux18973_BOOL],aux18974_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18975,s_00010],0);
constraint int_lt_reif(s_00015,aux18975,aux18976_BOOL);
constraint int_le_reif(s_00010, s_00015,aux18977_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux18978_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux18979_BOOL);
constraint array_bool_and([w_00008_00010_BOOL,aux18976_BOOL,aux18977_BOOL,aux18978_BOOL,aux18979_BOOL],aux18980_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18981,s_00011],0);
constraint int_lt_reif(s_00015,aux18981,aux18982_BOOL);
constraint int_le_reif(s_00011, s_00015,aux18983_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux18984_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux18985_BOOL);
constraint array_bool_and([w_00008_00011_BOOL,aux18982_BOOL,aux18983_BOOL,aux18984_BOOL,aux18985_BOOL],aux18986_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux18987,s_00012],0);
constraint int_lt_reif(s_00015,aux18987,aux18988_BOOL);
constraint int_le_reif(s_00012, s_00015,aux18989_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux18990_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux18991_BOOL);
constraint array_bool_and([w_00008_00012_BOOL,aux18988_BOOL,aux18989_BOOL,aux18990_BOOL,aux18991_BOOL],aux18992_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux18993,s_00013],0);
constraint int_lt_reif(s_00015,aux18993,aux18994_BOOL);
constraint int_le_reif(s_00013, s_00015,aux18995_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux18996_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux18997_BOOL);
constraint array_bool_and([w_00008_00013_BOOL,aux18994_BOOL,aux18995_BOOL,aux18996_BOOL,aux18997_BOOL],aux18998_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux18999,s_00014],0);
constraint int_lt_reif(s_00015,aux18999,aux19000_BOOL);
constraint int_le_reif(s_00014, s_00015,aux19001_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux19002_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux19003_BOOL);
constraint array_bool_and([w_00008_00014_BOOL,aux19000_BOOL,aux19001_BOOL,aux19002_BOOL,aux19003_BOOL],aux19004_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19005,s_00017],0);
constraint int_lt_reif(s_00015,aux19005,aux19006_BOOL);
constraint int_le_reif(s_00017, s_00015,aux19007_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux19008_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux19009_BOOL);
constraint array_bool_and([w_00008_00017_BOOL,aux19006_BOOL,aux19007_BOOL,aux19008_BOOL,aux19009_BOOL],aux19010_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19011,s_00016],0);
constraint int_lt_reif(s_00015,aux19011,aux19012_BOOL);
constraint int_le_reif(s_00016, s_00015,aux19013_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux19014_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux19015_BOOL);
constraint array_bool_and([w_00008_00016_BOOL,aux19012_BOOL,aux19013_BOOL,aux19014_BOOL,aux19015_BOOL],aux19016_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19017,s_00018],0);
constraint int_lt_reif(s_00015,aux19017,aux19018_BOOL);
constraint int_le_reif(s_00018, s_00015,aux19019_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux19020_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux19021_BOOL);
constraint array_bool_and([w_00008_00018_BOOL,aux19018_BOOL,aux19019_BOOL,aux19020_BOOL,aux19021_BOOL],aux19022_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19023,s_00019],0);
constraint int_lt_reif(s_00015,aux19023,aux19024_BOOL);
constraint int_le_reif(s_00019, s_00015,aux19025_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux19026_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux19027_BOOL);
constraint array_bool_and([w_00008_00019_BOOL,aux19024_BOOL,aux19025_BOOL,aux19026_BOOL,aux19027_BOOL],aux19028_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19029,s_00020],0);
constraint int_lt_reif(s_00015,aux19029,aux19030_BOOL);
constraint int_le_reif(s_00020, s_00015,aux19031_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux19032_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux19033_BOOL);
constraint array_bool_and([w_00008_00020_BOOL,aux19030_BOOL,aux19031_BOOL,aux19032_BOOL,aux19033_BOOL],aux19034_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux18920_INTEGER,aux18926_INTEGER,aux18932_INTEGER,aux18938_INTEGER,aux18944_INTEGER,aux18950_INTEGER,aux18956_INTEGER,aux18962_INTEGER,aux18968_INTEGER,aux18974_INTEGER,aux18980_INTEGER,aux18986_INTEGER,aux18992_INTEGER,aux18998_INTEGER,aux19004_INTEGER,aux19010_INTEGER,aux19016_INTEGER,aux19022_INTEGER,aux19028_INTEGER,aux19034_INTEGER,1],0,aux19035_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19036,s_00010],0);
constraint int_lt_reif(s_00010,aux19036,aux19037_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux19038_BOOL);
constraint array_bool_and([w_00008_00010_BOOL,aux19037_BOOL,aux19038_BOOL],aux19039_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19040,s_00001],0);
constraint int_lt_reif(s_00010,aux19040,aux19041_BOOL);
constraint int_le_reif(s_00001, s_00010,aux19042_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux19043_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux19044_BOOL);
constraint array_bool_and([w_00008_00001_BOOL,aux19041_BOOL,aux19042_BOOL,aux19043_BOOL,aux19044_BOOL],aux19045_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19046,s_00002],0);
constraint int_lt_reif(s_00010,aux19046,aux19047_BOOL);
constraint int_le_reif(s_00002, s_00010,aux19048_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux19049_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux19050_BOOL);
constraint array_bool_and([w_00008_00002_BOOL,aux19047_BOOL,aux19048_BOOL,aux19049_BOOL,aux19050_BOOL],aux19051_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19052,s_00003],0);
constraint int_lt_reif(s_00010,aux19052,aux19053_BOOL);
constraint int_le_reif(s_00003, s_00010,aux19054_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux19055_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux19056_BOOL);
constraint array_bool_and([w_00008_00003_BOOL,aux19053_BOOL,aux19054_BOOL,aux19055_BOOL,aux19056_BOOL],aux19057_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19058,s_00004],0);
constraint int_lt_reif(s_00010,aux19058,aux19059_BOOL);
constraint int_le_reif(s_00004, s_00010,aux19060_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux19061_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux19062_BOOL);
constraint array_bool_and([w_00008_00004_BOOL,aux19059_BOOL,aux19060_BOOL,aux19061_BOOL,aux19062_BOOL],aux19063_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19064,s_00005],0);
constraint int_lt_reif(s_00010,aux19064,aux19065_BOOL);
constraint int_le_reif(s_00005, s_00010,aux19066_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux19067_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux19068_BOOL);
constraint array_bool_and([w_00008_00005_BOOL,aux19065_BOOL,aux19066_BOOL,aux19067_BOOL,aux19068_BOOL],aux19069_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19070,s_00006],0);
constraint int_lt_reif(s_00010,aux19070,aux19071_BOOL);
constraint int_le_reif(s_00006, s_00010,aux19072_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux19073_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux19074_BOOL);
constraint array_bool_and([w_00008_00006_BOOL,aux19071_BOOL,aux19072_BOOL,aux19073_BOOL,aux19074_BOOL],aux19075_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19076,s_00007],0);
constraint int_lt_reif(s_00010,aux19076,aux19077_BOOL);
constraint int_le_reif(s_00007, s_00010,aux19078_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux19079_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux19080_BOOL);
constraint array_bool_and([w_00008_00007_BOOL,aux19077_BOOL,aux19078_BOOL,aux19079_BOOL,aux19080_BOOL],aux19081_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19082,s_00008],0);
constraint int_lt_reif(s_00010,aux19082,aux19083_BOOL);
constraint int_le_reif(s_00008, s_00010,aux19084_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux19085_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux19086_BOOL);
constraint array_bool_and([w_00008_00008_BOOL,aux19083_BOOL,aux19084_BOOL,aux19085_BOOL,aux19086_BOOL],aux19087_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19088,s_00009],0);
constraint int_lt_reif(s_00010,aux19088,aux19089_BOOL);
constraint int_le_reif(s_00009, s_00010,aux19090_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux19091_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux19092_BOOL);
constraint array_bool_and([w_00008_00009_BOOL,aux19089_BOOL,aux19090_BOOL,aux19091_BOOL,aux19092_BOOL],aux19093_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19094,s_00011],0);
constraint int_lt_reif(s_00010,aux19094,aux19095_BOOL);
constraint int_le_reif(s_00011, s_00010,aux19096_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux19097_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux19098_BOOL);
constraint array_bool_and([w_00008_00011_BOOL,aux19095_BOOL,aux19096_BOOL,aux19097_BOOL,aux19098_BOOL],aux19099_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19100,s_00012],0);
constraint int_lt_reif(s_00010,aux19100,aux19101_BOOL);
constraint int_le_reif(s_00012, s_00010,aux19102_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux19103_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux19104_BOOL);
constraint array_bool_and([w_00008_00012_BOOL,aux19101_BOOL,aux19102_BOOL,aux19103_BOOL,aux19104_BOOL],aux19105_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19106,s_00013],0);
constraint int_lt_reif(s_00010,aux19106,aux19107_BOOL);
constraint int_le_reif(s_00013, s_00010,aux19108_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux19109_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux19110_BOOL);
constraint array_bool_and([w_00008_00013_BOOL,aux19107_BOOL,aux19108_BOOL,aux19109_BOOL,aux19110_BOOL],aux19111_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19112,s_00015],0);
constraint int_lt_reif(s_00010,aux19112,aux19113_BOOL);
constraint int_le_reif(s_00015, s_00010,aux19114_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux19115_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux19116_BOOL);
constraint array_bool_and([w_00008_00015_BOOL,aux19113_BOOL,aux19114_BOOL,aux19115_BOOL,aux19116_BOOL],aux19117_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux19118,s_00014],0);
constraint int_lt_reif(s_00010,aux19118,aux19119_BOOL);
constraint int_le_reif(s_00014, s_00010,aux19120_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux19121_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux19122_BOOL);
constraint array_bool_and([w_00008_00014_BOOL,aux19119_BOOL,aux19120_BOOL,aux19121_BOOL,aux19122_BOOL],aux19123_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19124,s_00017],0);
constraint int_lt_reif(s_00010,aux19124,aux19125_BOOL);
constraint int_le_reif(s_00017, s_00010,aux19126_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux19127_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux19128_BOOL);
constraint array_bool_and([w_00008_00017_BOOL,aux19125_BOOL,aux19126_BOOL,aux19127_BOOL,aux19128_BOOL],aux19129_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19130,s_00016],0);
constraint int_lt_reif(s_00010,aux19130,aux19131_BOOL);
constraint int_le_reif(s_00016, s_00010,aux19132_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux19133_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux19134_BOOL);
constraint array_bool_and([w_00008_00016_BOOL,aux19131_BOOL,aux19132_BOOL,aux19133_BOOL,aux19134_BOOL],aux19135_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19136,s_00018],0);
constraint int_lt_reif(s_00010,aux19136,aux19137_BOOL);
constraint int_le_reif(s_00018, s_00010,aux19138_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux19139_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux19140_BOOL);
constraint array_bool_and([w_00008_00018_BOOL,aux19137_BOOL,aux19138_BOOL,aux19139_BOOL,aux19140_BOOL],aux19141_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19142,s_00019],0);
constraint int_lt_reif(s_00010,aux19142,aux19143_BOOL);
constraint int_le_reif(s_00019, s_00010,aux19144_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux19145_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux19146_BOOL);
constraint array_bool_and([w_00008_00019_BOOL,aux19143_BOOL,aux19144_BOOL,aux19145_BOOL,aux19146_BOOL],aux19147_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19148,s_00020],0);
constraint int_lt_reif(s_00010,aux19148,aux19149_BOOL);
constraint int_le_reif(s_00020, s_00010,aux19150_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux19151_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux19152_BOOL);
constraint array_bool_and([w_00008_00020_BOOL,aux19149_BOOL,aux19150_BOOL,aux19151_BOOL,aux19152_BOOL],aux19153_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux19039_INTEGER,aux19045_INTEGER,aux19051_INTEGER,aux19057_INTEGER,aux19063_INTEGER,aux19069_INTEGER,aux19075_INTEGER,aux19081_INTEGER,aux19087_INTEGER,aux19093_INTEGER,aux19099_INTEGER,aux19105_INTEGER,aux19111_INTEGER,aux19117_INTEGER,aux19123_INTEGER,aux19129_INTEGER,aux19135_INTEGER,aux19141_INTEGER,aux19147_INTEGER,aux19153_INTEGER,1],0,aux19154_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19155,s_00003],0);
constraint int_lt_reif(s_00003,aux19155,aux19156_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux19157_BOOL);
constraint array_bool_and([w_00008_00003_BOOL,aux19156_BOOL,aux19157_BOOL],aux19158_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19159,s_00001],0);
constraint int_lt_reif(s_00003,aux19159,aux19160_BOOL);
constraint int_le_reif(s_00001, s_00003,aux19161_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux19162_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux19163_BOOL);
constraint array_bool_and([w_00008_00001_BOOL,aux19160_BOOL,aux19161_BOOL,aux19162_BOOL,aux19163_BOOL],aux19164_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19165,s_00002],0);
constraint int_lt_reif(s_00003,aux19165,aux19166_BOOL);
constraint int_le_reif(s_00002, s_00003,aux19167_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux19168_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux19169_BOOL);
constraint array_bool_and([w_00008_00002_BOOL,aux19166_BOOL,aux19167_BOOL,aux19168_BOOL,aux19169_BOOL],aux19170_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19171,s_00004],0);
constraint int_lt_reif(s_00003,aux19171,aux19172_BOOL);
constraint int_le_reif(s_00004, s_00003,aux19173_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux19174_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux19175_BOOL);
constraint array_bool_and([w_00008_00004_BOOL,aux19172_BOOL,aux19173_BOOL,aux19174_BOOL,aux19175_BOOL],aux19176_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19177,s_00005],0);
constraint int_lt_reif(s_00003,aux19177,aux19178_BOOL);
constraint int_le_reif(s_00005, s_00003,aux19179_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux19180_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux19181_BOOL);
constraint array_bool_and([w_00008_00005_BOOL,aux19178_BOOL,aux19179_BOOL,aux19180_BOOL,aux19181_BOOL],aux19182_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19183,s_00006],0);
constraint int_lt_reif(s_00003,aux19183,aux19184_BOOL);
constraint int_le_reif(s_00006, s_00003,aux19185_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux19186_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux19187_BOOL);
constraint array_bool_and([w_00008_00006_BOOL,aux19184_BOOL,aux19185_BOOL,aux19186_BOOL,aux19187_BOOL],aux19188_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19189,s_00007],0);
constraint int_lt_reif(s_00003,aux19189,aux19190_BOOL);
constraint int_le_reif(s_00007, s_00003,aux19191_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux19192_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux19193_BOOL);
constraint array_bool_and([w_00008_00007_BOOL,aux19190_BOOL,aux19191_BOOL,aux19192_BOOL,aux19193_BOOL],aux19194_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19195,s_00008],0);
constraint int_lt_reif(s_00003,aux19195,aux19196_BOOL);
constraint int_le_reif(s_00008, s_00003,aux19197_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux19198_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux19199_BOOL);
constraint array_bool_and([w_00008_00008_BOOL,aux19196_BOOL,aux19197_BOOL,aux19198_BOOL,aux19199_BOOL],aux19200_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19201,s_00009],0);
constraint int_lt_reif(s_00003,aux19201,aux19202_BOOL);
constraint int_le_reif(s_00009, s_00003,aux19203_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux19204_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux19205_BOOL);
constraint array_bool_and([w_00008_00009_BOOL,aux19202_BOOL,aux19203_BOOL,aux19204_BOOL,aux19205_BOOL],aux19206_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19207,s_00010],0);
constraint int_lt_reif(s_00003,aux19207,aux19208_BOOL);
constraint int_le_reif(s_00010, s_00003,aux19209_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux19210_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux19211_BOOL);
constraint array_bool_and([w_00008_00010_BOOL,aux19208_BOOL,aux19209_BOOL,aux19210_BOOL,aux19211_BOOL],aux19212_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19213,s_00011],0);
constraint int_lt_reif(s_00003,aux19213,aux19214_BOOL);
constraint int_le_reif(s_00011, s_00003,aux19215_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux19216_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux19217_BOOL);
constraint array_bool_and([w_00008_00011_BOOL,aux19214_BOOL,aux19215_BOOL,aux19216_BOOL,aux19217_BOOL],aux19218_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19219,s_00012],0);
constraint int_lt_reif(s_00003,aux19219,aux19220_BOOL);
constraint int_le_reif(s_00012, s_00003,aux19221_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux19222_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux19223_BOOL);
constraint array_bool_and([w_00008_00012_BOOL,aux19220_BOOL,aux19221_BOOL,aux19222_BOOL,aux19223_BOOL],aux19224_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19225,s_00013],0);
constraint int_lt_reif(s_00003,aux19225,aux19226_BOOL);
constraint int_le_reif(s_00013, s_00003,aux19227_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux19228_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux19229_BOOL);
constraint array_bool_and([w_00008_00013_BOOL,aux19226_BOOL,aux19227_BOOL,aux19228_BOOL,aux19229_BOOL],aux19230_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19231,s_00015],0);
constraint int_lt_reif(s_00003,aux19231,aux19232_BOOL);
constraint int_le_reif(s_00015, s_00003,aux19233_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux19234_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux19235_BOOL);
constraint array_bool_and([w_00008_00015_BOOL,aux19232_BOOL,aux19233_BOOL,aux19234_BOOL,aux19235_BOOL],aux19236_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux19237,s_00014],0);
constraint int_lt_reif(s_00003,aux19237,aux19238_BOOL);
constraint int_le_reif(s_00014, s_00003,aux19239_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux19240_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux19241_BOOL);
constraint array_bool_and([w_00008_00014_BOOL,aux19238_BOOL,aux19239_BOOL,aux19240_BOOL,aux19241_BOOL],aux19242_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19243,s_00017],0);
constraint int_lt_reif(s_00003,aux19243,aux19244_BOOL);
constraint int_le_reif(s_00017, s_00003,aux19245_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux19246_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux19247_BOOL);
constraint array_bool_and([w_00008_00017_BOOL,aux19244_BOOL,aux19245_BOOL,aux19246_BOOL,aux19247_BOOL],aux19248_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19249,s_00016],0);
constraint int_lt_reif(s_00003,aux19249,aux19250_BOOL);
constraint int_le_reif(s_00016, s_00003,aux19251_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux19252_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux19253_BOOL);
constraint array_bool_and([w_00008_00016_BOOL,aux19250_BOOL,aux19251_BOOL,aux19252_BOOL,aux19253_BOOL],aux19254_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19255,s_00018],0);
constraint int_lt_reif(s_00003,aux19255,aux19256_BOOL);
constraint int_le_reif(s_00018, s_00003,aux19257_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux19258_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux19259_BOOL);
constraint array_bool_and([w_00008_00018_BOOL,aux19256_BOOL,aux19257_BOOL,aux19258_BOOL,aux19259_BOOL],aux19260_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19261,s_00019],0);
constraint int_lt_reif(s_00003,aux19261,aux19262_BOOL);
constraint int_le_reif(s_00019, s_00003,aux19263_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux19264_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux19265_BOOL);
constraint array_bool_and([w_00008_00019_BOOL,aux19262_BOOL,aux19263_BOOL,aux19264_BOOL,aux19265_BOOL],aux19266_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19267,s_00020],0);
constraint int_lt_reif(s_00003,aux19267,aux19268_BOOL);
constraint int_le_reif(s_00020, s_00003,aux19269_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux19270_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux19271_BOOL);
constraint array_bool_and([w_00008_00020_BOOL,aux19268_BOOL,aux19269_BOOL,aux19270_BOOL,aux19271_BOOL],aux19272_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux19158_INTEGER,aux19164_INTEGER,aux19170_INTEGER,aux19176_INTEGER,aux19182_INTEGER,aux19188_INTEGER,aux19194_INTEGER,aux19200_INTEGER,aux19206_INTEGER,aux19212_INTEGER,aux19218_INTEGER,aux19224_INTEGER,aux19230_INTEGER,aux19236_INTEGER,aux19242_INTEGER,aux19248_INTEGER,aux19254_INTEGER,aux19260_INTEGER,aux19266_INTEGER,aux19272_INTEGER,1],0,aux19273_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19274,s_00019],0);
constraint int_lt_reif(s_00019,aux19274,aux19275_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux19276_BOOL);
constraint array_bool_and([w_00008_00019_BOOL,aux19275_BOOL,aux19276_BOOL],aux19277_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19278,s_00001],0);
constraint int_lt_reif(s_00019,aux19278,aux19279_BOOL);
constraint int_le_reif(s_00001, s_00019,aux19280_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux19281_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux19282_BOOL);
constraint array_bool_and([w_00008_00001_BOOL,aux19279_BOOL,aux19280_BOOL,aux19281_BOOL,aux19282_BOOL],aux19283_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19284,s_00002],0);
constraint int_lt_reif(s_00019,aux19284,aux19285_BOOL);
constraint int_le_reif(s_00002, s_00019,aux19286_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux19287_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux19288_BOOL);
constraint array_bool_and([w_00008_00002_BOOL,aux19285_BOOL,aux19286_BOOL,aux19287_BOOL,aux19288_BOOL],aux19289_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19290,s_00003],0);
constraint int_lt_reif(s_00019,aux19290,aux19291_BOOL);
constraint int_le_reif(s_00003, s_00019,aux19292_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux19293_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux19294_BOOL);
constraint array_bool_and([w_00008_00003_BOOL,aux19291_BOOL,aux19292_BOOL,aux19293_BOOL,aux19294_BOOL],aux19295_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19296,s_00004],0);
constraint int_lt_reif(s_00019,aux19296,aux19297_BOOL);
constraint int_le_reif(s_00004, s_00019,aux19298_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux19299_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux19300_BOOL);
constraint array_bool_and([w_00008_00004_BOOL,aux19297_BOOL,aux19298_BOOL,aux19299_BOOL,aux19300_BOOL],aux19301_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19302,s_00005],0);
constraint int_lt_reif(s_00019,aux19302,aux19303_BOOL);
constraint int_le_reif(s_00005, s_00019,aux19304_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux19305_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux19306_BOOL);
constraint array_bool_and([w_00008_00005_BOOL,aux19303_BOOL,aux19304_BOOL,aux19305_BOOL,aux19306_BOOL],aux19307_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19308,s_00006],0);
constraint int_lt_reif(s_00019,aux19308,aux19309_BOOL);
constraint int_le_reif(s_00006, s_00019,aux19310_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux19311_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux19312_BOOL);
constraint array_bool_and([w_00008_00006_BOOL,aux19309_BOOL,aux19310_BOOL,aux19311_BOOL,aux19312_BOOL],aux19313_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19314,s_00007],0);
constraint int_lt_reif(s_00019,aux19314,aux19315_BOOL);
constraint int_le_reif(s_00007, s_00019,aux19316_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux19317_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux19318_BOOL);
constraint array_bool_and([w_00008_00007_BOOL,aux19315_BOOL,aux19316_BOOL,aux19317_BOOL,aux19318_BOOL],aux19319_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19320,s_00008],0);
constraint int_lt_reif(s_00019,aux19320,aux19321_BOOL);
constraint int_le_reif(s_00008, s_00019,aux19322_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux19323_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux19324_BOOL);
constraint array_bool_and([w_00008_00008_BOOL,aux19321_BOOL,aux19322_BOOL,aux19323_BOOL,aux19324_BOOL],aux19325_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19326,s_00009],0);
constraint int_lt_reif(s_00019,aux19326,aux19327_BOOL);
constraint int_le_reif(s_00009, s_00019,aux19328_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux19329_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux19330_BOOL);
constraint array_bool_and([w_00008_00009_BOOL,aux19327_BOOL,aux19328_BOOL,aux19329_BOOL,aux19330_BOOL],aux19331_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19332,s_00010],0);
constraint int_lt_reif(s_00019,aux19332,aux19333_BOOL);
constraint int_le_reif(s_00010, s_00019,aux19334_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux19335_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux19336_BOOL);
constraint array_bool_and([w_00008_00010_BOOL,aux19333_BOOL,aux19334_BOOL,aux19335_BOOL,aux19336_BOOL],aux19337_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19338,s_00011],0);
constraint int_lt_reif(s_00019,aux19338,aux19339_BOOL);
constraint int_le_reif(s_00011, s_00019,aux19340_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux19341_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux19342_BOOL);
constraint array_bool_and([w_00008_00011_BOOL,aux19339_BOOL,aux19340_BOOL,aux19341_BOOL,aux19342_BOOL],aux19343_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19344,s_00012],0);
constraint int_lt_reif(s_00019,aux19344,aux19345_BOOL);
constraint int_le_reif(s_00012, s_00019,aux19346_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux19347_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux19348_BOOL);
constraint array_bool_and([w_00008_00012_BOOL,aux19345_BOOL,aux19346_BOOL,aux19347_BOOL,aux19348_BOOL],aux19349_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19350,s_00013],0);
constraint int_lt_reif(s_00019,aux19350,aux19351_BOOL);
constraint int_le_reif(s_00013, s_00019,aux19352_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux19353_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux19354_BOOL);
constraint array_bool_and([w_00008_00013_BOOL,aux19351_BOOL,aux19352_BOOL,aux19353_BOOL,aux19354_BOOL],aux19355_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19356,s_00015],0);
constraint int_lt_reif(s_00019,aux19356,aux19357_BOOL);
constraint int_le_reif(s_00015, s_00019,aux19358_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux19359_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux19360_BOOL);
constraint array_bool_and([w_00008_00015_BOOL,aux19357_BOOL,aux19358_BOOL,aux19359_BOOL,aux19360_BOOL],aux19361_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux19362,s_00014],0);
constraint int_lt_reif(s_00019,aux19362,aux19363_BOOL);
constraint int_le_reif(s_00014, s_00019,aux19364_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux19365_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux19366_BOOL);
constraint array_bool_and([w_00008_00014_BOOL,aux19363_BOOL,aux19364_BOOL,aux19365_BOOL,aux19366_BOOL],aux19367_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19368,s_00017],0);
constraint int_lt_reif(s_00019,aux19368,aux19369_BOOL);
constraint int_le_reif(s_00017, s_00019,aux19370_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux19371_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux19372_BOOL);
constraint array_bool_and([w_00008_00017_BOOL,aux19369_BOOL,aux19370_BOOL,aux19371_BOOL,aux19372_BOOL],aux19373_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19374,s_00016],0);
constraint int_lt_reif(s_00019,aux19374,aux19375_BOOL);
constraint int_le_reif(s_00016, s_00019,aux19376_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux19377_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux19378_BOOL);
constraint array_bool_and([w_00008_00016_BOOL,aux19375_BOOL,aux19376_BOOL,aux19377_BOOL,aux19378_BOOL],aux19379_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19380,s_00018],0);
constraint int_lt_reif(s_00019,aux19380,aux19381_BOOL);
constraint int_le_reif(s_00018, s_00019,aux19382_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux19383_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux19384_BOOL);
constraint array_bool_and([w_00008_00018_BOOL,aux19381_BOOL,aux19382_BOOL,aux19383_BOOL,aux19384_BOOL],aux19385_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19386,s_00020],0);
constraint int_lt_reif(s_00019,aux19386,aux19387_BOOL);
constraint int_le_reif(s_00020, s_00019,aux19388_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux19389_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux19390_BOOL);
constraint array_bool_and([w_00008_00020_BOOL,aux19387_BOOL,aux19388_BOOL,aux19389_BOOL,aux19390_BOOL],aux19391_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux19277_INTEGER,aux19283_INTEGER,aux19289_INTEGER,aux19295_INTEGER,aux19301_INTEGER,aux19307_INTEGER,aux19313_INTEGER,aux19319_INTEGER,aux19325_INTEGER,aux19331_INTEGER,aux19337_INTEGER,aux19343_INTEGER,aux19349_INTEGER,aux19355_INTEGER,aux19361_INTEGER,aux19367_INTEGER,aux19373_INTEGER,aux19379_INTEGER,aux19385_INTEGER,aux19391_INTEGER,1],0,aux19392_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19393,s_00016],0);
constraint int_lt_reif(s_00016,aux19393,aux19394_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux19395_BOOL);
constraint array_bool_and([w_00008_00016_BOOL,aux19394_BOOL,aux19395_BOOL],aux19396_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19397,s_00001],0);
constraint int_lt_reif(s_00016,aux19397,aux19398_BOOL);
constraint int_le_reif(s_00001, s_00016,aux19399_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux19400_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux19401_BOOL);
constraint array_bool_and([w_00008_00001_BOOL,aux19398_BOOL,aux19399_BOOL,aux19400_BOOL,aux19401_BOOL],aux19402_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19403,s_00002],0);
constraint int_lt_reif(s_00016,aux19403,aux19404_BOOL);
constraint int_le_reif(s_00002, s_00016,aux19405_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux19406_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux19407_BOOL);
constraint array_bool_and([w_00008_00002_BOOL,aux19404_BOOL,aux19405_BOOL,aux19406_BOOL,aux19407_BOOL],aux19408_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19409,s_00003],0);
constraint int_lt_reif(s_00016,aux19409,aux19410_BOOL);
constraint int_le_reif(s_00003, s_00016,aux19411_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux19412_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux19413_BOOL);
constraint array_bool_and([w_00008_00003_BOOL,aux19410_BOOL,aux19411_BOOL,aux19412_BOOL,aux19413_BOOL],aux19414_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19415,s_00004],0);
constraint int_lt_reif(s_00016,aux19415,aux19416_BOOL);
constraint int_le_reif(s_00004, s_00016,aux19417_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux19418_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux19419_BOOL);
constraint array_bool_and([w_00008_00004_BOOL,aux19416_BOOL,aux19417_BOOL,aux19418_BOOL,aux19419_BOOL],aux19420_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19421,s_00005],0);
constraint int_lt_reif(s_00016,aux19421,aux19422_BOOL);
constraint int_le_reif(s_00005, s_00016,aux19423_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux19424_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux19425_BOOL);
constraint array_bool_and([w_00008_00005_BOOL,aux19422_BOOL,aux19423_BOOL,aux19424_BOOL,aux19425_BOOL],aux19426_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19427,s_00006],0);
constraint int_lt_reif(s_00016,aux19427,aux19428_BOOL);
constraint int_le_reif(s_00006, s_00016,aux19429_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux19430_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux19431_BOOL);
constraint array_bool_and([w_00008_00006_BOOL,aux19428_BOOL,aux19429_BOOL,aux19430_BOOL,aux19431_BOOL],aux19432_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19433,s_00007],0);
constraint int_lt_reif(s_00016,aux19433,aux19434_BOOL);
constraint int_le_reif(s_00007, s_00016,aux19435_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux19436_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux19437_BOOL);
constraint array_bool_and([w_00008_00007_BOOL,aux19434_BOOL,aux19435_BOOL,aux19436_BOOL,aux19437_BOOL],aux19438_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19439,s_00008],0);
constraint int_lt_reif(s_00016,aux19439,aux19440_BOOL);
constraint int_le_reif(s_00008, s_00016,aux19441_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux19442_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux19443_BOOL);
constraint array_bool_and([w_00008_00008_BOOL,aux19440_BOOL,aux19441_BOOL,aux19442_BOOL,aux19443_BOOL],aux19444_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19445,s_00009],0);
constraint int_lt_reif(s_00016,aux19445,aux19446_BOOL);
constraint int_le_reif(s_00009, s_00016,aux19447_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux19448_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux19449_BOOL);
constraint array_bool_and([w_00008_00009_BOOL,aux19446_BOOL,aux19447_BOOL,aux19448_BOOL,aux19449_BOOL],aux19450_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19451,s_00010],0);
constraint int_lt_reif(s_00016,aux19451,aux19452_BOOL);
constraint int_le_reif(s_00010, s_00016,aux19453_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux19454_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux19455_BOOL);
constraint array_bool_and([w_00008_00010_BOOL,aux19452_BOOL,aux19453_BOOL,aux19454_BOOL,aux19455_BOOL],aux19456_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19457,s_00011],0);
constraint int_lt_reif(s_00016,aux19457,aux19458_BOOL);
constraint int_le_reif(s_00011, s_00016,aux19459_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux19460_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux19461_BOOL);
constraint array_bool_and([w_00008_00011_BOOL,aux19458_BOOL,aux19459_BOOL,aux19460_BOOL,aux19461_BOOL],aux19462_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19463,s_00012],0);
constraint int_lt_reif(s_00016,aux19463,aux19464_BOOL);
constraint int_le_reif(s_00012, s_00016,aux19465_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux19466_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux19467_BOOL);
constraint array_bool_and([w_00008_00012_BOOL,aux19464_BOOL,aux19465_BOOL,aux19466_BOOL,aux19467_BOOL],aux19468_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19469,s_00013],0);
constraint int_lt_reif(s_00016,aux19469,aux19470_BOOL);
constraint int_le_reif(s_00013, s_00016,aux19471_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux19472_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux19473_BOOL);
constraint array_bool_and([w_00008_00013_BOOL,aux19470_BOOL,aux19471_BOOL,aux19472_BOOL,aux19473_BOOL],aux19474_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19475,s_00015],0);
constraint int_lt_reif(s_00016,aux19475,aux19476_BOOL);
constraint int_le_reif(s_00015, s_00016,aux19477_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux19478_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux19479_BOOL);
constraint array_bool_and([w_00008_00015_BOOL,aux19476_BOOL,aux19477_BOOL,aux19478_BOOL,aux19479_BOOL],aux19480_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux19481,s_00014],0);
constraint int_lt_reif(s_00016,aux19481,aux19482_BOOL);
constraint int_le_reif(s_00014, s_00016,aux19483_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux19484_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux19485_BOOL);
constraint array_bool_and([w_00008_00014_BOOL,aux19482_BOOL,aux19483_BOOL,aux19484_BOOL,aux19485_BOOL],aux19486_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19487,s_00017],0);
constraint int_lt_reif(s_00016,aux19487,aux19488_BOOL);
constraint int_le_reif(s_00017, s_00016,aux19489_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux19490_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux19491_BOOL);
constraint array_bool_and([w_00008_00017_BOOL,aux19488_BOOL,aux19489_BOOL,aux19490_BOOL,aux19491_BOOL],aux19492_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19493,s_00018],0);
constraint int_lt_reif(s_00016,aux19493,aux19494_BOOL);
constraint int_le_reif(s_00018, s_00016,aux19495_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux19496_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux19497_BOOL);
constraint array_bool_and([w_00008_00018_BOOL,aux19494_BOOL,aux19495_BOOL,aux19496_BOOL,aux19497_BOOL],aux19498_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19499,s_00019],0);
constraint int_lt_reif(s_00016,aux19499,aux19500_BOOL);
constraint int_le_reif(s_00019, s_00016,aux19501_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux19502_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux19503_BOOL);
constraint array_bool_and([w_00008_00019_BOOL,aux19500_BOOL,aux19501_BOOL,aux19502_BOOL,aux19503_BOOL],aux19504_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19505,s_00020],0);
constraint int_lt_reif(s_00016,aux19505,aux19506_BOOL);
constraint int_le_reif(s_00020, s_00016,aux19507_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux19508_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux19509_BOOL);
constraint array_bool_and([w_00008_00020_BOOL,aux19506_BOOL,aux19507_BOOL,aux19508_BOOL,aux19509_BOOL],aux19510_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux19396_INTEGER,aux19402_INTEGER,aux19408_INTEGER,aux19414_INTEGER,aux19420_INTEGER,aux19426_INTEGER,aux19432_INTEGER,aux19438_INTEGER,aux19444_INTEGER,aux19450_INTEGER,aux19456_INTEGER,aux19462_INTEGER,aux19468_INTEGER,aux19474_INTEGER,aux19480_INTEGER,aux19486_INTEGER,aux19492_INTEGER,aux19498_INTEGER,aux19504_INTEGER,aux19510_INTEGER,1],0,aux19511_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19512,s_00009],0);
constraint int_lt_reif(s_00009,aux19512,aux19513_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux19514_BOOL);
constraint array_bool_and([w_00008_00009_BOOL,aux19513_BOOL,aux19514_BOOL],aux19515_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19516,s_00001],0);
constraint int_lt_reif(s_00009,aux19516,aux19517_BOOL);
constraint int_le_reif(s_00001, s_00009,aux19518_BOOL);
constraint int_eq_reif(TWorkers_00008_00001_INTEGER,1,aux19519_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux19520_BOOL);
constraint array_bool_and([w_00008_00001_BOOL,aux19517_BOOL,aux19518_BOOL,aux19519_BOOL,aux19520_BOOL],aux19521_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19522,s_00002],0);
constraint int_lt_reif(s_00009,aux19522,aux19523_BOOL);
constraint int_le_reif(s_00002, s_00009,aux19524_BOOL);
constraint int_eq_reif(TWorkers_00008_00002_INTEGER,1,aux19525_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux19526_BOOL);
constraint array_bool_and([w_00008_00002_BOOL,aux19523_BOOL,aux19524_BOOL,aux19525_BOOL,aux19526_BOOL],aux19527_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19528,s_00003],0);
constraint int_lt_reif(s_00009,aux19528,aux19529_BOOL);
constraint int_le_reif(s_00003, s_00009,aux19530_BOOL);
constraint int_eq_reif(TWorkers_00008_00003_INTEGER,1,aux19531_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux19532_BOOL);
constraint array_bool_and([w_00008_00003_BOOL,aux19529_BOOL,aux19530_BOOL,aux19531_BOOL,aux19532_BOOL],aux19533_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19534,s_00004],0);
constraint int_lt_reif(s_00009,aux19534,aux19535_BOOL);
constraint int_le_reif(s_00004, s_00009,aux19536_BOOL);
constraint int_eq_reif(TWorkers_00008_00004_INTEGER,1,aux19537_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux19538_BOOL);
constraint array_bool_and([w_00008_00004_BOOL,aux19535_BOOL,aux19536_BOOL,aux19537_BOOL,aux19538_BOOL],aux19539_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19540,s_00005],0);
constraint int_lt_reif(s_00009,aux19540,aux19541_BOOL);
constraint int_le_reif(s_00005, s_00009,aux19542_BOOL);
constraint int_eq_reif(TWorkers_00008_00005_INTEGER,1,aux19543_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux19544_BOOL);
constraint array_bool_and([w_00008_00005_BOOL,aux19541_BOOL,aux19542_BOOL,aux19543_BOOL,aux19544_BOOL],aux19545_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19546,s_00006],0);
constraint int_lt_reif(s_00009,aux19546,aux19547_BOOL);
constraint int_le_reif(s_00006, s_00009,aux19548_BOOL);
constraint int_eq_reif(TWorkers_00008_00006_INTEGER,1,aux19549_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux19550_BOOL);
constraint array_bool_and([w_00008_00006_BOOL,aux19547_BOOL,aux19548_BOOL,aux19549_BOOL,aux19550_BOOL],aux19551_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19552,s_00007],0);
constraint int_lt_reif(s_00009,aux19552,aux19553_BOOL);
constraint int_le_reif(s_00007, s_00009,aux19554_BOOL);
constraint int_eq_reif(TWorkers_00008_00007_INTEGER,1,aux19555_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux19556_BOOL);
constraint array_bool_and([w_00008_00007_BOOL,aux19553_BOOL,aux19554_BOOL,aux19555_BOOL,aux19556_BOOL],aux19557_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19558,s_00008],0);
constraint int_lt_reif(s_00009,aux19558,aux19559_BOOL);
constraint int_le_reif(s_00008, s_00009,aux19560_BOOL);
constraint int_eq_reif(TWorkers_00008_00008_INTEGER,1,aux19561_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux19562_BOOL);
constraint array_bool_and([w_00008_00008_BOOL,aux19559_BOOL,aux19560_BOOL,aux19561_BOOL,aux19562_BOOL],aux19563_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19564,s_00010],0);
constraint int_lt_reif(s_00009,aux19564,aux19565_BOOL);
constraint int_le_reif(s_00010, s_00009,aux19566_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux19567_BOOL);
constraint int_eq_reif(TWorkers_00008_00010_INTEGER,1,aux19568_BOOL);
constraint array_bool_and([w_00008_00010_BOOL,aux19565_BOOL,aux19566_BOOL,aux19567_BOOL,aux19568_BOOL],aux19569_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19570,s_00011],0);
constraint int_lt_reif(s_00009,aux19570,aux19571_BOOL);
constraint int_le_reif(s_00011, s_00009,aux19572_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux19573_BOOL);
constraint int_eq_reif(TWorkers_00008_00011_INTEGER,1,aux19574_BOOL);
constraint array_bool_and([w_00008_00011_BOOL,aux19571_BOOL,aux19572_BOOL,aux19573_BOOL,aux19574_BOOL],aux19575_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19576,s_00012],0);
constraint int_lt_reif(s_00009,aux19576,aux19577_BOOL);
constraint int_le_reif(s_00012, s_00009,aux19578_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux19579_BOOL);
constraint int_eq_reif(TWorkers_00008_00012_INTEGER,1,aux19580_BOOL);
constraint array_bool_and([w_00008_00012_BOOL,aux19577_BOOL,aux19578_BOOL,aux19579_BOOL,aux19580_BOOL],aux19581_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19582,s_00013],0);
constraint int_lt_reif(s_00009,aux19582,aux19583_BOOL);
constraint int_le_reif(s_00013, s_00009,aux19584_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux19585_BOOL);
constraint int_eq_reif(TWorkers_00008_00013_INTEGER,1,aux19586_BOOL);
constraint array_bool_and([w_00008_00013_BOOL,aux19583_BOOL,aux19584_BOOL,aux19585_BOOL,aux19586_BOOL],aux19587_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19588,s_00015],0);
constraint int_lt_reif(s_00009,aux19588,aux19589_BOOL);
constraint int_le_reif(s_00015, s_00009,aux19590_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux19591_BOOL);
constraint int_eq_reif(TWorkers_00008_00015_INTEGER,1,aux19592_BOOL);
constraint array_bool_and([w_00008_00015_BOOL,aux19589_BOOL,aux19590_BOOL,aux19591_BOOL,aux19592_BOOL],aux19593_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux19594,s_00014],0);
constraint int_lt_reif(s_00009,aux19594,aux19595_BOOL);
constraint int_le_reif(s_00014, s_00009,aux19596_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux19597_BOOL);
constraint int_eq_reif(TWorkers_00008_00014_INTEGER,1,aux19598_BOOL);
constraint array_bool_and([w_00008_00014_BOOL,aux19595_BOOL,aux19596_BOOL,aux19597_BOOL,aux19598_BOOL],aux19599_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19600,s_00017],0);
constraint int_lt_reif(s_00009,aux19600,aux19601_BOOL);
constraint int_le_reif(s_00017, s_00009,aux19602_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux19603_BOOL);
constraint int_eq_reif(TWorkers_00008_00017_INTEGER,1,aux19604_BOOL);
constraint array_bool_and([w_00008_00017_BOOL,aux19601_BOOL,aux19602_BOOL,aux19603_BOOL,aux19604_BOOL],aux19605_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19606,s_00016],0);
constraint int_lt_reif(s_00009,aux19606,aux19607_BOOL);
constraint int_le_reif(s_00016, s_00009,aux19608_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux19609_BOOL);
constraint int_eq_reif(TWorkers_00008_00016_INTEGER,1,aux19610_BOOL);
constraint array_bool_and([w_00008_00016_BOOL,aux19607_BOOL,aux19608_BOOL,aux19609_BOOL,aux19610_BOOL],aux19611_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19612,s_00018],0);
constraint int_lt_reif(s_00009,aux19612,aux19613_BOOL);
constraint int_le_reif(s_00018, s_00009,aux19614_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux19615_BOOL);
constraint int_eq_reif(TWorkers_00008_00018_INTEGER,1,aux19616_BOOL);
constraint array_bool_and([w_00008_00018_BOOL,aux19613_BOOL,aux19614_BOOL,aux19615_BOOL,aux19616_BOOL],aux19617_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19618,s_00019],0);
constraint int_lt_reif(s_00009,aux19618,aux19619_BOOL);
constraint int_le_reif(s_00019, s_00009,aux19620_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux19621_BOOL);
constraint int_eq_reif(TWorkers_00008_00019_INTEGER,1,aux19622_BOOL);
constraint array_bool_and([w_00008_00019_BOOL,aux19619_BOOL,aux19620_BOOL,aux19621_BOOL,aux19622_BOOL],aux19623_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19624,s_00020],0);
constraint int_lt_reif(s_00009,aux19624,aux19625_BOOL);
constraint int_le_reif(s_00020, s_00009,aux19626_BOOL);
constraint int_eq_reif(TWorkers_00008_00009_INTEGER,1,aux19627_BOOL);
constraint int_eq_reif(TWorkers_00008_00020_INTEGER,1,aux19628_BOOL);
constraint array_bool_and([w_00008_00020_BOOL,aux19625_BOOL,aux19626_BOOL,aux19627_BOOL,aux19628_BOOL],aux19629_BOOL);
constraint int_lin_le_reif([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[aux19515_INTEGER,aux19521_INTEGER,aux19527_INTEGER,aux19533_INTEGER,aux19539_INTEGER,aux19545_INTEGER,aux19551_INTEGER,aux19557_INTEGER,aux19563_INTEGER,aux19569_INTEGER,aux19575_INTEGER,aux19581_INTEGER,aux19587_INTEGER,aux19593_INTEGER,aux19599_INTEGER,aux19605_INTEGER,aux19611_INTEGER,aux19617_INTEGER,aux19623_INTEGER,aux19629_INTEGER,1],0,aux19630_BOOL);
constraint array_bool_and([aux17369_BOOL,aux17488_BOOL,aux17607_BOOL,aux17726_BOOL,aux17845_BOOL,aux17964_BOOL,aux18083_BOOL,aux18202_BOOL,aux18321_BOOL,aux18440_BOOL,aux18559_BOOL,aux18678_BOOL,aux18797_BOOL,aux18916_BOOL,aux19035_BOOL,aux19154_BOOL,aux19273_BOOL,aux19392_BOOL,aux19511_BOOL,aux19630_BOOL],aux19631_BOOL);
constraint int_lin_le_reif([1,1,-1],[2,s_00019,s_00018],0,aux19632_BOOL);
constraint int_lin_le_reif([1,1,-1],[3,s_00018,s_00019],0,aux19633_BOOL);
constraint int_lin_le_reif([1,1,-1],[2,s_00019,s_00020],0,aux19634_BOOL);
constraint int_lin_le_reif([1,1,-1],[3,s_00020,s_00019],0,aux19635_BOOL);
constraint int_lin_le_reif([1,1,-1],[2,s_00004,s_00012],0,aux19636_BOOL);
constraint int_lin_le_reif([1,1,-1],[2,s_00012,s_00004],0,aux19637_BOOL);
constraint int_lin_le_reif([1,1,-1],[2,s_00004,s_00015],0,aux19638_BOOL);
constraint int_lin_le_reif([1,1,-1],[2,s_00015,s_00004],0,aux19639_BOOL);
constraint int_lin_le_reif([1,1,-1],[2,s_00004,s_00018],0,aux19640_BOOL);
constraint int_lin_le_reif([1,1,-1],[3,s_00018,s_00004],0,aux19641_BOOL);
constraint int_lin_le_reif([1,1,-1],[2,s_00004,s_00019],0,aux19642_BOOL);
constraint int_lin_le_reif([1,1,-1],[2,s_00019,s_00004],0,aux19643_BOOL);
constraint int_lin_le_reif([1,1,-1],[2,s_00007,s_00009],0,aux19644_BOOL);
constraint int_lin_le_reif([1,1,-1],[2,s_00009,s_00007],0,aux19645_BOOL);
constraint int_lin_le_reif([1,1,-1],[1,s_00010,s_00007],0,aux19646_BOOL);
constraint int_lin_le_reif([1,1,-1],[2,s_00007,s_00010],0,aux19647_BOOL);
constraint int_lin_le_reif([1,1,-1],[1,s_00013,s_00012],0,aux19648_BOOL);
constraint int_lin_le_reif([1,1,-1],[2,s_00012,s_00013],0,aux19649_BOOL);
constraint int_lin_le_reif([1,1,-1],[2,s_00012,s_00015],0,aux19650_BOOL);
constraint int_lin_le_reif([1,1,-1],[2,s_00015,s_00012],0,aux19651_BOOL);
constraint int_lin_le_reif([1,1,-1],[2,s_00012,s_00018],0,aux19652_BOOL);
constraint int_lin_le_reif([1,1,-1],[3,s_00018,s_00012],0,aux19653_BOOL);
constraint int_lin_le_reif([1,1,-1],[2,s_00012,s_00020],0,aux19654_BOOL);
constraint int_lin_le_reif([1,1,-1],[3,s_00020,s_00012],0,aux19655_BOOL);
constraint int_lin_le_reif([1,1,-1],[1,s_00013,s_00019],0,aux19656_BOOL);
constraint int_lin_le_reif([1,1,-1],[2,s_00019,s_00013],0,aux19657_BOOL);
constraint int_lin_le_reif([1,1,-1],[1,s_00013,s_00020],0,aux19658_BOOL);
constraint int_lin_le_reif([1,1,-1],[3,s_00020,s_00013],0,aux19659_BOOL);
constraint int_lin_le_reif([1,1,-1],[2,s_00015,s_00018],0,aux19660_BOOL);
constraint int_lin_le_reif([1,1,-1],[3,s_00018,s_00015],0,aux19661_BOOL);
constraint int_lin_le_reif([1,1,-1],[2,s_00015,s_00019],0,aux19662_BOOL);
constraint int_lin_le_reif([1,1,-1],[2,s_00019,s_00015],0,aux19663_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19664,s_00002],0);
constraint int_lt_reif(s_00001,aux19664,aux19665_BOOL);
constraint int_le_reif(s_00002, s_00001,aux19666_BOOL);
constraint array_bool_and([aux19665_BOOL,aux19666_BOOL],aux19667_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19668,s_00004],0);
constraint int_lt_reif(s_00001,aux19668,aux19669_BOOL);
constraint int_le_reif(s_00004, s_00001,aux19670_BOOL);
constraint array_bool_and([aux19669_BOOL,aux19670_BOOL],aux19671_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19672,s_00007],0);
constraint int_lt_reif(s_00001,aux19672,aux19673_BOOL);
constraint int_le_reif(s_00007, s_00001,aux19674_BOOL);
constraint array_bool_and([aux19673_BOOL,aux19674_BOOL],aux19675_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19676,s_00003],0);
constraint int_lt_reif(s_00001,aux19676,aux19677_BOOL);
constraint int_le_reif(s_00003, s_00001,aux19678_BOOL);
constraint array_bool_and([aux19677_BOOL,aux19678_BOOL],aux19679_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19680,s_00013],0);
constraint int_lt_reif(s_00001,aux19680,aux19681_BOOL);
constraint int_le_reif(s_00013, s_00001,aux19682_BOOL);
constraint array_bool_and([aux19681_BOOL,aux19682_BOOL],aux19683_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19684,s_00006],0);
constraint int_lt_reif(s_00001,aux19684,aux19685_BOOL);
constraint int_le_reif(s_00006, s_00001,aux19686_BOOL);
constraint array_bool_and([aux19685_BOOL,aux19686_BOOL],aux19687_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19688,s_00012],0);
constraint int_lt_reif(s_00001,aux19688,aux19689_BOOL);
constraint int_le_reif(s_00012, s_00001,aux19690_BOOL);
constraint array_bool_and([aux19689_BOOL,aux19690_BOOL],aux19691_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19692,s_00015],0);
constraint int_lt_reif(s_00001,aux19692,aux19693_BOOL);
constraint int_le_reif(s_00015, s_00001,aux19694_BOOL);
constraint array_bool_and([aux19693_BOOL,aux19694_BOOL],aux19695_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19696,s_00019],0);
constraint int_lt_reif(s_00001,aux19696,aux19697_BOOL);
constraint int_le_reif(s_00019, s_00001,aux19698_BOOL);
constraint array_bool_and([aux19697_BOOL,aux19698_BOOL],aux19699_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19700,s_00016],0);
constraint int_lt_reif(s_00001,aux19700,aux19701_BOOL);
constraint int_le_reif(s_00016, s_00001,aux19702_BOOL);
constraint array_bool_and([aux19701_BOOL,aux19702_BOOL],aux19703_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19704,s_00018],0);
constraint int_lt_reif(s_00001,aux19704,aux19705_BOOL);
constraint int_le_reif(s_00018, s_00001,aux19706_BOOL);
constraint array_bool_and([aux19705_BOOL,aux19706_BOOL],aux19707_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19708,s_00001],0);
constraint int_lt_reif(s_00001,aux19708,aux19709_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19710,s_00001],0);
constraint int_lt_reif(s_00002,aux19710,aux19711_BOOL);
constraint int_le_reif(s_00001, s_00002,aux19712_BOOL);
constraint array_bool_and([aux19711_BOOL,aux19712_BOOL],aux19713_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19714,s_00004],0);
constraint int_lt_reif(s_00002,aux19714,aux19715_BOOL);
constraint int_le_reif(s_00004, s_00002,aux19716_BOOL);
constraint array_bool_and([aux19715_BOOL,aux19716_BOOL],aux19717_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19718,s_00007],0);
constraint int_lt_reif(s_00002,aux19718,aux19719_BOOL);
constraint int_le_reif(s_00007, s_00002,aux19720_BOOL);
constraint array_bool_and([aux19719_BOOL,aux19720_BOOL],aux19721_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19722,s_00003],0);
constraint int_lt_reif(s_00002,aux19722,aux19723_BOOL);
constraint int_le_reif(s_00003, s_00002,aux19724_BOOL);
constraint array_bool_and([aux19723_BOOL,aux19724_BOOL],aux19725_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19726,s_00013],0);
constraint int_lt_reif(s_00002,aux19726,aux19727_BOOL);
constraint int_le_reif(s_00013, s_00002,aux19728_BOOL);
constraint array_bool_and([aux19727_BOOL,aux19728_BOOL],aux19729_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19730,s_00006],0);
constraint int_lt_reif(s_00002,aux19730,aux19731_BOOL);
constraint int_le_reif(s_00006, s_00002,aux19732_BOOL);
constraint array_bool_and([aux19731_BOOL,aux19732_BOOL],aux19733_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19734,s_00012],0);
constraint int_lt_reif(s_00002,aux19734,aux19735_BOOL);
constraint int_le_reif(s_00012, s_00002,aux19736_BOOL);
constraint array_bool_and([aux19735_BOOL,aux19736_BOOL],aux19737_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19738,s_00015],0);
constraint int_lt_reif(s_00002,aux19738,aux19739_BOOL);
constraint int_le_reif(s_00015, s_00002,aux19740_BOOL);
constraint array_bool_and([aux19739_BOOL,aux19740_BOOL],aux19741_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19742,s_00019],0);
constraint int_lt_reif(s_00002,aux19742,aux19743_BOOL);
constraint int_le_reif(s_00019, s_00002,aux19744_BOOL);
constraint array_bool_and([aux19743_BOOL,aux19744_BOOL],aux19745_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19746,s_00016],0);
constraint int_lt_reif(s_00002,aux19746,aux19747_BOOL);
constraint int_le_reif(s_00016, s_00002,aux19748_BOOL);
constraint array_bool_and([aux19747_BOOL,aux19748_BOOL],aux19749_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19750,s_00018],0);
constraint int_lt_reif(s_00002,aux19750,aux19751_BOOL);
constraint int_le_reif(s_00018, s_00002,aux19752_BOOL);
constraint array_bool_and([aux19751_BOOL,aux19752_BOOL],aux19753_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19754,s_00002],0);
constraint int_lt_reif(s_00002,aux19754,aux19755_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19756,s_00001],0);
constraint int_lt_reif(s_00003,aux19756,aux19757_BOOL);
constraint int_le_reif(s_00001, s_00003,aux19758_BOOL);
constraint array_bool_and([aux19757_BOOL,aux19758_BOOL],aux19759_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19760,s_00002],0);
constraint int_lt_reif(s_00003,aux19760,aux19761_BOOL);
constraint int_le_reif(s_00002, s_00003,aux19762_BOOL);
constraint array_bool_and([aux19761_BOOL,aux19762_BOOL],aux19763_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19764,s_00004],0);
constraint int_lt_reif(s_00003,aux19764,aux19765_BOOL);
constraint int_le_reif(s_00004, s_00003,aux19766_BOOL);
constraint array_bool_and([aux19765_BOOL,aux19766_BOOL],aux19767_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19768,s_00007],0);
constraint int_lt_reif(s_00003,aux19768,aux19769_BOOL);
constraint int_le_reif(s_00007, s_00003,aux19770_BOOL);
constraint array_bool_and([aux19769_BOOL,aux19770_BOOL],aux19771_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19772,s_00013],0);
constraint int_lt_reif(s_00003,aux19772,aux19773_BOOL);
constraint int_le_reif(s_00013, s_00003,aux19774_BOOL);
constraint array_bool_and([aux19773_BOOL,aux19774_BOOL],aux19775_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19776,s_00006],0);
constraint int_lt_reif(s_00003,aux19776,aux19777_BOOL);
constraint int_le_reif(s_00006, s_00003,aux19778_BOOL);
constraint array_bool_and([aux19777_BOOL,aux19778_BOOL],aux19779_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19780,s_00012],0);
constraint int_lt_reif(s_00003,aux19780,aux19781_BOOL);
constraint int_le_reif(s_00012, s_00003,aux19782_BOOL);
constraint array_bool_and([aux19781_BOOL,aux19782_BOOL],aux19783_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19784,s_00015],0);
constraint int_lt_reif(s_00003,aux19784,aux19785_BOOL);
constraint int_le_reif(s_00015, s_00003,aux19786_BOOL);
constraint array_bool_and([aux19785_BOOL,aux19786_BOOL],aux19787_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19788,s_00019],0);
constraint int_lt_reif(s_00003,aux19788,aux19789_BOOL);
constraint int_le_reif(s_00019, s_00003,aux19790_BOOL);
constraint array_bool_and([aux19789_BOOL,aux19790_BOOL],aux19791_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19792,s_00016],0);
constraint int_lt_reif(s_00003,aux19792,aux19793_BOOL);
constraint int_le_reif(s_00016, s_00003,aux19794_BOOL);
constraint array_bool_and([aux19793_BOOL,aux19794_BOOL],aux19795_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19796,s_00018],0);
constraint int_lt_reif(s_00003,aux19796,aux19797_BOOL);
constraint int_le_reif(s_00018, s_00003,aux19798_BOOL);
constraint array_bool_and([aux19797_BOOL,aux19798_BOOL],aux19799_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19800,s_00003],0);
constraint int_lt_reif(s_00003,aux19800,aux19801_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19802,s_00001],0);
constraint int_lt_reif(s_00004,aux19802,aux19803_BOOL);
constraint int_le_reif(s_00001, s_00004,aux19804_BOOL);
constraint array_bool_and([aux19803_BOOL,aux19804_BOOL],aux19805_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19806,s_00002],0);
constraint int_lt_reif(s_00004,aux19806,aux19807_BOOL);
constraint int_le_reif(s_00002, s_00004,aux19808_BOOL);
constraint array_bool_and([aux19807_BOOL,aux19808_BOOL],aux19809_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19810,s_00007],0);
constraint int_lt_reif(s_00004,aux19810,aux19811_BOOL);
constraint int_le_reif(s_00007, s_00004,aux19812_BOOL);
constraint array_bool_and([aux19811_BOOL,aux19812_BOOL],aux19813_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19814,s_00003],0);
constraint int_lt_reif(s_00004,aux19814,aux19815_BOOL);
constraint int_le_reif(s_00003, s_00004,aux19816_BOOL);
constraint array_bool_and([aux19815_BOOL,aux19816_BOOL],aux19817_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19818,s_00013],0);
constraint int_lt_reif(s_00004,aux19818,aux19819_BOOL);
constraint int_le_reif(s_00013, s_00004,aux19820_BOOL);
constraint array_bool_and([aux19819_BOOL,aux19820_BOOL],aux19821_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19822,s_00006],0);
constraint int_lt_reif(s_00004,aux19822,aux19823_BOOL);
constraint int_le_reif(s_00006, s_00004,aux19824_BOOL);
constraint array_bool_and([aux19823_BOOL,aux19824_BOOL],aux19825_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19826,s_00012],0);
constraint int_lt_reif(s_00004,aux19826,aux19827_BOOL);
constraint int_le_reif(s_00012, s_00004,aux19828_BOOL);
constraint array_bool_and([aux19827_BOOL,aux19828_BOOL],aux19829_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19830,s_00015],0);
constraint int_lt_reif(s_00004,aux19830,aux19831_BOOL);
constraint int_le_reif(s_00015, s_00004,aux19832_BOOL);
constraint array_bool_and([aux19831_BOOL,aux19832_BOOL],aux19833_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19834,s_00019],0);
constraint int_lt_reif(s_00004,aux19834,aux19835_BOOL);
constraint int_le_reif(s_00019, s_00004,aux19836_BOOL);
constraint array_bool_and([aux19835_BOOL,aux19836_BOOL],aux19837_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19838,s_00016],0);
constraint int_lt_reif(s_00004,aux19838,aux19839_BOOL);
constraint int_le_reif(s_00016, s_00004,aux19840_BOOL);
constraint array_bool_and([aux19839_BOOL,aux19840_BOOL],aux19841_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19842,s_00018],0);
constraint int_lt_reif(s_00004,aux19842,aux19843_BOOL);
constraint int_le_reif(s_00018, s_00004,aux19844_BOOL);
constraint array_bool_and([aux19843_BOOL,aux19844_BOOL],aux19845_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19846,s_00004],0);
constraint int_lt_reif(s_00004,aux19846,aux19847_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19848,s_00001],0);
constraint int_lt_reif(s_00006,aux19848,aux19849_BOOL);
constraint int_le_reif(s_00001, s_00006,aux19850_BOOL);
constraint array_bool_and([aux19849_BOOL,aux19850_BOOL],aux19851_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19852,s_00002],0);
constraint int_lt_reif(s_00006,aux19852,aux19853_BOOL);
constraint int_le_reif(s_00002, s_00006,aux19854_BOOL);
constraint array_bool_and([aux19853_BOOL,aux19854_BOOL],aux19855_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19856,s_00004],0);
constraint int_lt_reif(s_00006,aux19856,aux19857_BOOL);
constraint int_le_reif(s_00004, s_00006,aux19858_BOOL);
constraint array_bool_and([aux19857_BOOL,aux19858_BOOL],aux19859_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19860,s_00007],0);
constraint int_lt_reif(s_00006,aux19860,aux19861_BOOL);
constraint int_le_reif(s_00007, s_00006,aux19862_BOOL);
constraint array_bool_and([aux19861_BOOL,aux19862_BOOL],aux19863_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19864,s_00003],0);
constraint int_lt_reif(s_00006,aux19864,aux19865_BOOL);
constraint int_le_reif(s_00003, s_00006,aux19866_BOOL);
constraint array_bool_and([aux19865_BOOL,aux19866_BOOL],aux19867_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19868,s_00013],0);
constraint int_lt_reif(s_00006,aux19868,aux19869_BOOL);
constraint int_le_reif(s_00013, s_00006,aux19870_BOOL);
constraint array_bool_and([aux19869_BOOL,aux19870_BOOL],aux19871_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19872,s_00012],0);
constraint int_lt_reif(s_00006,aux19872,aux19873_BOOL);
constraint int_le_reif(s_00012, s_00006,aux19874_BOOL);
constraint array_bool_and([aux19873_BOOL,aux19874_BOOL],aux19875_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19876,s_00015],0);
constraint int_lt_reif(s_00006,aux19876,aux19877_BOOL);
constraint int_le_reif(s_00015, s_00006,aux19878_BOOL);
constraint array_bool_and([aux19877_BOOL,aux19878_BOOL],aux19879_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19880,s_00019],0);
constraint int_lt_reif(s_00006,aux19880,aux19881_BOOL);
constraint int_le_reif(s_00019, s_00006,aux19882_BOOL);
constraint array_bool_and([aux19881_BOOL,aux19882_BOOL],aux19883_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19884,s_00016],0);
constraint int_lt_reif(s_00006,aux19884,aux19885_BOOL);
constraint int_le_reif(s_00016, s_00006,aux19886_BOOL);
constraint array_bool_and([aux19885_BOOL,aux19886_BOOL],aux19887_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19888,s_00018],0);
constraint int_lt_reif(s_00006,aux19888,aux19889_BOOL);
constraint int_le_reif(s_00018, s_00006,aux19890_BOOL);
constraint array_bool_and([aux19889_BOOL,aux19890_BOOL],aux19891_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19892,s_00006],0);
constraint int_lt_reif(s_00006,aux19892,aux19893_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19894,s_00001],0);
constraint int_lt_reif(s_00007,aux19894,aux19895_BOOL);
constraint int_le_reif(s_00001, s_00007,aux19896_BOOL);
constraint array_bool_and([aux19895_BOOL,aux19896_BOOL],aux19897_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19898,s_00002],0);
constraint int_lt_reif(s_00007,aux19898,aux19899_BOOL);
constraint int_le_reif(s_00002, s_00007,aux19900_BOOL);
constraint array_bool_and([aux19899_BOOL,aux19900_BOOL],aux19901_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19902,s_00004],0);
constraint int_lt_reif(s_00007,aux19902,aux19903_BOOL);
constraint int_le_reif(s_00004, s_00007,aux19904_BOOL);
constraint array_bool_and([aux19903_BOOL,aux19904_BOOL],aux19905_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19906,s_00003],0);
constraint int_lt_reif(s_00007,aux19906,aux19907_BOOL);
constraint int_le_reif(s_00003, s_00007,aux19908_BOOL);
constraint array_bool_and([aux19907_BOOL,aux19908_BOOL],aux19909_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19910,s_00013],0);
constraint int_lt_reif(s_00007,aux19910,aux19911_BOOL);
constraint int_le_reif(s_00013, s_00007,aux19912_BOOL);
constraint array_bool_and([aux19911_BOOL,aux19912_BOOL],aux19913_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19914,s_00006],0);
constraint int_lt_reif(s_00007,aux19914,aux19915_BOOL);
constraint int_le_reif(s_00006, s_00007,aux19916_BOOL);
constraint array_bool_and([aux19915_BOOL,aux19916_BOOL],aux19917_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19918,s_00012],0);
constraint int_lt_reif(s_00007,aux19918,aux19919_BOOL);
constraint int_le_reif(s_00012, s_00007,aux19920_BOOL);
constraint array_bool_and([aux19919_BOOL,aux19920_BOOL],aux19921_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19922,s_00015],0);
constraint int_lt_reif(s_00007,aux19922,aux19923_BOOL);
constraint int_le_reif(s_00015, s_00007,aux19924_BOOL);
constraint array_bool_and([aux19923_BOOL,aux19924_BOOL],aux19925_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19926,s_00019],0);
constraint int_lt_reif(s_00007,aux19926,aux19927_BOOL);
constraint int_le_reif(s_00019, s_00007,aux19928_BOOL);
constraint array_bool_and([aux19927_BOOL,aux19928_BOOL],aux19929_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19930,s_00016],0);
constraint int_lt_reif(s_00007,aux19930,aux19931_BOOL);
constraint int_le_reif(s_00016, s_00007,aux19932_BOOL);
constraint array_bool_and([aux19931_BOOL,aux19932_BOOL],aux19933_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19934,s_00018],0);
constraint int_lt_reif(s_00007,aux19934,aux19935_BOOL);
constraint int_le_reif(s_00018, s_00007,aux19936_BOOL);
constraint array_bool_and([aux19935_BOOL,aux19936_BOOL],aux19937_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19938,s_00007],0);
constraint int_lt_reif(s_00007,aux19938,aux19939_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19940,s_00001],0);
constraint int_lt_reif(s_00012,aux19940,aux19941_BOOL);
constraint int_le_reif(s_00001, s_00012,aux19942_BOOL);
constraint array_bool_and([aux19941_BOOL,aux19942_BOOL],aux19943_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19944,s_00002],0);
constraint int_lt_reif(s_00012,aux19944,aux19945_BOOL);
constraint int_le_reif(s_00002, s_00012,aux19946_BOOL);
constraint array_bool_and([aux19945_BOOL,aux19946_BOOL],aux19947_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19948,s_00004],0);
constraint int_lt_reif(s_00012,aux19948,aux19949_BOOL);
constraint int_le_reif(s_00004, s_00012,aux19950_BOOL);
constraint array_bool_and([aux19949_BOOL,aux19950_BOOL],aux19951_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19952,s_00007],0);
constraint int_lt_reif(s_00012,aux19952,aux19953_BOOL);
constraint int_le_reif(s_00007, s_00012,aux19954_BOOL);
constraint array_bool_and([aux19953_BOOL,aux19954_BOOL],aux19955_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19956,s_00003],0);
constraint int_lt_reif(s_00012,aux19956,aux19957_BOOL);
constraint int_le_reif(s_00003, s_00012,aux19958_BOOL);
constraint array_bool_and([aux19957_BOOL,aux19958_BOOL],aux19959_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19960,s_00013],0);
constraint int_lt_reif(s_00012,aux19960,aux19961_BOOL);
constraint int_le_reif(s_00013, s_00012,aux19962_BOOL);
constraint array_bool_and([aux19961_BOOL,aux19962_BOOL],aux19963_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19964,s_00006],0);
constraint int_lt_reif(s_00012,aux19964,aux19965_BOOL);
constraint int_le_reif(s_00006, s_00012,aux19966_BOOL);
constraint array_bool_and([aux19965_BOOL,aux19966_BOOL],aux19967_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19968,s_00015],0);
constraint int_lt_reif(s_00012,aux19968,aux19969_BOOL);
constraint int_le_reif(s_00015, s_00012,aux19970_BOOL);
constraint array_bool_and([aux19969_BOOL,aux19970_BOOL],aux19971_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19972,s_00019],0);
constraint int_lt_reif(s_00012,aux19972,aux19973_BOOL);
constraint int_le_reif(s_00019, s_00012,aux19974_BOOL);
constraint array_bool_and([aux19973_BOOL,aux19974_BOOL],aux19975_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19976,s_00016],0);
constraint int_lt_reif(s_00012,aux19976,aux19977_BOOL);
constraint int_le_reif(s_00016, s_00012,aux19978_BOOL);
constraint array_bool_and([aux19977_BOOL,aux19978_BOOL],aux19979_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux19980,s_00018],0);
constraint int_lt_reif(s_00012,aux19980,aux19981_BOOL);
constraint int_le_reif(s_00018, s_00012,aux19982_BOOL);
constraint array_bool_and([aux19981_BOOL,aux19982_BOOL],aux19983_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19984,s_00012],0);
constraint int_lt_reif(s_00012,aux19984,aux19985_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux19986,s_00001],0);
constraint int_lt_reif(s_00013,aux19986,aux19987_BOOL);
constraint int_le_reif(s_00001, s_00013,aux19988_BOOL);
constraint array_bool_and([aux19987_BOOL,aux19988_BOOL],aux19989_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19990,s_00002],0);
constraint int_lt_reif(s_00013,aux19990,aux19991_BOOL);
constraint int_le_reif(s_00002, s_00013,aux19992_BOOL);
constraint array_bool_and([aux19991_BOOL,aux19992_BOOL],aux19993_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19994,s_00004],0);
constraint int_lt_reif(s_00013,aux19994,aux19995_BOOL);
constraint int_le_reif(s_00004, s_00013,aux19996_BOOL);
constraint array_bool_and([aux19995_BOOL,aux19996_BOOL],aux19997_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux19998,s_00007],0);
constraint int_lt_reif(s_00013,aux19998,aux19999_BOOL);
constraint int_le_reif(s_00007, s_00013,aux20000_BOOL);
constraint array_bool_and([aux19999_BOOL,aux20000_BOOL],aux20001_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20002,s_00003],0);
constraint int_lt_reif(s_00013,aux20002,aux20003_BOOL);
constraint int_le_reif(s_00003, s_00013,aux20004_BOOL);
constraint array_bool_and([aux20003_BOOL,aux20004_BOOL],aux20005_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20006,s_00006],0);
constraint int_lt_reif(s_00013,aux20006,aux20007_BOOL);
constraint int_le_reif(s_00006, s_00013,aux20008_BOOL);
constraint array_bool_and([aux20007_BOOL,aux20008_BOOL],aux20009_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20010,s_00012],0);
constraint int_lt_reif(s_00013,aux20010,aux20011_BOOL);
constraint int_le_reif(s_00012, s_00013,aux20012_BOOL);
constraint array_bool_and([aux20011_BOOL,aux20012_BOOL],aux20013_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20014,s_00015],0);
constraint int_lt_reif(s_00013,aux20014,aux20015_BOOL);
constraint int_le_reif(s_00015, s_00013,aux20016_BOOL);
constraint array_bool_and([aux20015_BOOL,aux20016_BOOL],aux20017_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20018,s_00019],0);
constraint int_lt_reif(s_00013,aux20018,aux20019_BOOL);
constraint int_le_reif(s_00019, s_00013,aux20020_BOOL);
constraint array_bool_and([aux20019_BOOL,aux20020_BOOL],aux20021_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20022,s_00016],0);
constraint int_lt_reif(s_00013,aux20022,aux20023_BOOL);
constraint int_le_reif(s_00016, s_00013,aux20024_BOOL);
constraint array_bool_and([aux20023_BOOL,aux20024_BOOL],aux20025_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20026,s_00018],0);
constraint int_lt_reif(s_00013,aux20026,aux20027_BOOL);
constraint int_le_reif(s_00018, s_00013,aux20028_BOOL);
constraint array_bool_and([aux20027_BOOL,aux20028_BOOL],aux20029_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20030,s_00013],0);
constraint int_lt_reif(s_00013,aux20030,aux20031_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20032,s_00001],0);
constraint int_lt_reif(s_00015,aux20032,aux20033_BOOL);
constraint int_le_reif(s_00001, s_00015,aux20034_BOOL);
constraint array_bool_and([aux20033_BOOL,aux20034_BOOL],aux20035_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20036,s_00002],0);
constraint int_lt_reif(s_00015,aux20036,aux20037_BOOL);
constraint int_le_reif(s_00002, s_00015,aux20038_BOOL);
constraint array_bool_and([aux20037_BOOL,aux20038_BOOL],aux20039_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20040,s_00004],0);
constraint int_lt_reif(s_00015,aux20040,aux20041_BOOL);
constraint int_le_reif(s_00004, s_00015,aux20042_BOOL);
constraint array_bool_and([aux20041_BOOL,aux20042_BOOL],aux20043_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20044,s_00007],0);
constraint int_lt_reif(s_00015,aux20044,aux20045_BOOL);
constraint int_le_reif(s_00007, s_00015,aux20046_BOOL);
constraint array_bool_and([aux20045_BOOL,aux20046_BOOL],aux20047_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20048,s_00003],0);
constraint int_lt_reif(s_00015,aux20048,aux20049_BOOL);
constraint int_le_reif(s_00003, s_00015,aux20050_BOOL);
constraint array_bool_and([aux20049_BOOL,aux20050_BOOL],aux20051_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20052,s_00013],0);
constraint int_lt_reif(s_00015,aux20052,aux20053_BOOL);
constraint int_le_reif(s_00013, s_00015,aux20054_BOOL);
constraint array_bool_and([aux20053_BOOL,aux20054_BOOL],aux20055_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20056,s_00006],0);
constraint int_lt_reif(s_00015,aux20056,aux20057_BOOL);
constraint int_le_reif(s_00006, s_00015,aux20058_BOOL);
constraint array_bool_and([aux20057_BOOL,aux20058_BOOL],aux20059_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20060,s_00012],0);
constraint int_lt_reif(s_00015,aux20060,aux20061_BOOL);
constraint int_le_reif(s_00012, s_00015,aux20062_BOOL);
constraint array_bool_and([aux20061_BOOL,aux20062_BOOL],aux20063_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20064,s_00019],0);
constraint int_lt_reif(s_00015,aux20064,aux20065_BOOL);
constraint int_le_reif(s_00019, s_00015,aux20066_BOOL);
constraint array_bool_and([aux20065_BOOL,aux20066_BOOL],aux20067_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20068,s_00016],0);
constraint int_lt_reif(s_00015,aux20068,aux20069_BOOL);
constraint int_le_reif(s_00016, s_00015,aux20070_BOOL);
constraint array_bool_and([aux20069_BOOL,aux20070_BOOL],aux20071_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20072,s_00018],0);
constraint int_lt_reif(s_00015,aux20072,aux20073_BOOL);
constraint int_le_reif(s_00018, s_00015,aux20074_BOOL);
constraint array_bool_and([aux20073_BOOL,aux20074_BOOL],aux20075_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20076,s_00015],0);
constraint int_lt_reif(s_00015,aux20076,aux20077_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20078,s_00001],0);
constraint int_lt_reif(s_00016,aux20078,aux20079_BOOL);
constraint int_le_reif(s_00001, s_00016,aux20080_BOOL);
constraint array_bool_and([aux20079_BOOL,aux20080_BOOL],aux20081_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20082,s_00002],0);
constraint int_lt_reif(s_00016,aux20082,aux20083_BOOL);
constraint int_le_reif(s_00002, s_00016,aux20084_BOOL);
constraint array_bool_and([aux20083_BOOL,aux20084_BOOL],aux20085_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20086,s_00004],0);
constraint int_lt_reif(s_00016,aux20086,aux20087_BOOL);
constraint int_le_reif(s_00004, s_00016,aux20088_BOOL);
constraint array_bool_and([aux20087_BOOL,aux20088_BOOL],aux20089_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20090,s_00007],0);
constraint int_lt_reif(s_00016,aux20090,aux20091_BOOL);
constraint int_le_reif(s_00007, s_00016,aux20092_BOOL);
constraint array_bool_and([aux20091_BOOL,aux20092_BOOL],aux20093_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20094,s_00003],0);
constraint int_lt_reif(s_00016,aux20094,aux20095_BOOL);
constraint int_le_reif(s_00003, s_00016,aux20096_BOOL);
constraint array_bool_and([aux20095_BOOL,aux20096_BOOL],aux20097_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20098,s_00013],0);
constraint int_lt_reif(s_00016,aux20098,aux20099_BOOL);
constraint int_le_reif(s_00013, s_00016,aux20100_BOOL);
constraint array_bool_and([aux20099_BOOL,aux20100_BOOL],aux20101_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20102,s_00006],0);
constraint int_lt_reif(s_00016,aux20102,aux20103_BOOL);
constraint int_le_reif(s_00006, s_00016,aux20104_BOOL);
constraint array_bool_and([aux20103_BOOL,aux20104_BOOL],aux20105_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20106,s_00012],0);
constraint int_lt_reif(s_00016,aux20106,aux20107_BOOL);
constraint int_le_reif(s_00012, s_00016,aux20108_BOOL);
constraint array_bool_and([aux20107_BOOL,aux20108_BOOL],aux20109_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20110,s_00015],0);
constraint int_lt_reif(s_00016,aux20110,aux20111_BOOL);
constraint int_le_reif(s_00015, s_00016,aux20112_BOOL);
constraint array_bool_and([aux20111_BOOL,aux20112_BOOL],aux20113_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20114,s_00019],0);
constraint int_lt_reif(s_00016,aux20114,aux20115_BOOL);
constraint int_le_reif(s_00019, s_00016,aux20116_BOOL);
constraint array_bool_and([aux20115_BOOL,aux20116_BOOL],aux20117_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20118,s_00018],0);
constraint int_lt_reif(s_00016,aux20118,aux20119_BOOL);
constraint int_le_reif(s_00018, s_00016,aux20120_BOOL);
constraint array_bool_and([aux20119_BOOL,aux20120_BOOL],aux20121_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20122,s_00016],0);
constraint int_lt_reif(s_00016,aux20122,aux20123_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20124,s_00001],0);
constraint int_lt_reif(s_00018,aux20124,aux20125_BOOL);
constraint int_le_reif(s_00001, s_00018,aux20126_BOOL);
constraint array_bool_and([aux20125_BOOL,aux20126_BOOL],aux20127_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20128,s_00002],0);
constraint int_lt_reif(s_00018,aux20128,aux20129_BOOL);
constraint int_le_reif(s_00002, s_00018,aux20130_BOOL);
constraint array_bool_and([aux20129_BOOL,aux20130_BOOL],aux20131_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20132,s_00004],0);
constraint int_lt_reif(s_00018,aux20132,aux20133_BOOL);
constraint int_le_reif(s_00004, s_00018,aux20134_BOOL);
constraint array_bool_and([aux20133_BOOL,aux20134_BOOL],aux20135_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20136,s_00007],0);
constraint int_lt_reif(s_00018,aux20136,aux20137_BOOL);
constraint int_le_reif(s_00007, s_00018,aux20138_BOOL);
constraint array_bool_and([aux20137_BOOL,aux20138_BOOL],aux20139_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20140,s_00003],0);
constraint int_lt_reif(s_00018,aux20140,aux20141_BOOL);
constraint int_le_reif(s_00003, s_00018,aux20142_BOOL);
constraint array_bool_and([aux20141_BOOL,aux20142_BOOL],aux20143_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20144,s_00013],0);
constraint int_lt_reif(s_00018,aux20144,aux20145_BOOL);
constraint int_le_reif(s_00013, s_00018,aux20146_BOOL);
constraint array_bool_and([aux20145_BOOL,aux20146_BOOL],aux20147_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20148,s_00006],0);
constraint int_lt_reif(s_00018,aux20148,aux20149_BOOL);
constraint int_le_reif(s_00006, s_00018,aux20150_BOOL);
constraint array_bool_and([aux20149_BOOL,aux20150_BOOL],aux20151_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20152,s_00012],0);
constraint int_lt_reif(s_00018,aux20152,aux20153_BOOL);
constraint int_le_reif(s_00012, s_00018,aux20154_BOOL);
constraint array_bool_and([aux20153_BOOL,aux20154_BOOL],aux20155_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20156,s_00015],0);
constraint int_lt_reif(s_00018,aux20156,aux20157_BOOL);
constraint int_le_reif(s_00015, s_00018,aux20158_BOOL);
constraint array_bool_and([aux20157_BOOL,aux20158_BOOL],aux20159_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20160,s_00019],0);
constraint int_lt_reif(s_00018,aux20160,aux20161_BOOL);
constraint int_le_reif(s_00019, s_00018,aux20162_BOOL);
constraint array_bool_and([aux20161_BOOL,aux20162_BOOL],aux20163_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20164,s_00016],0);
constraint int_lt_reif(s_00018,aux20164,aux20165_BOOL);
constraint int_le_reif(s_00016, s_00018,aux20166_BOOL);
constraint array_bool_and([aux20165_BOOL,aux20166_BOOL],aux20167_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20168,s_00018],0);
constraint int_lt_reif(s_00018,aux20168,aux20169_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20170,s_00001],0);
constraint int_lt_reif(s_00019,aux20170,aux20171_BOOL);
constraint int_le_reif(s_00001, s_00019,aux20172_BOOL);
constraint array_bool_and([aux20171_BOOL,aux20172_BOOL],aux20173_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20174,s_00002],0);
constraint int_lt_reif(s_00019,aux20174,aux20175_BOOL);
constraint int_le_reif(s_00002, s_00019,aux20176_BOOL);
constraint array_bool_and([aux20175_BOOL,aux20176_BOOL],aux20177_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20178,s_00004],0);
constraint int_lt_reif(s_00019,aux20178,aux20179_BOOL);
constraint int_le_reif(s_00004, s_00019,aux20180_BOOL);
constraint array_bool_and([aux20179_BOOL,aux20180_BOOL],aux20181_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20182,s_00007],0);
constraint int_lt_reif(s_00019,aux20182,aux20183_BOOL);
constraint int_le_reif(s_00007, s_00019,aux20184_BOOL);
constraint array_bool_and([aux20183_BOOL,aux20184_BOOL],aux20185_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20186,s_00003],0);
constraint int_lt_reif(s_00019,aux20186,aux20187_BOOL);
constraint int_le_reif(s_00003, s_00019,aux20188_BOOL);
constraint array_bool_and([aux20187_BOOL,aux20188_BOOL],aux20189_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20190,s_00013],0);
constraint int_lt_reif(s_00019,aux20190,aux20191_BOOL);
constraint int_le_reif(s_00013, s_00019,aux20192_BOOL);
constraint array_bool_and([aux20191_BOOL,aux20192_BOOL],aux20193_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20194,s_00006],0);
constraint int_lt_reif(s_00019,aux20194,aux20195_BOOL);
constraint int_le_reif(s_00006, s_00019,aux20196_BOOL);
constraint array_bool_and([aux20195_BOOL,aux20196_BOOL],aux20197_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20198,s_00012],0);
constraint int_lt_reif(s_00019,aux20198,aux20199_BOOL);
constraint int_le_reif(s_00012, s_00019,aux20200_BOOL);
constraint array_bool_and([aux20199_BOOL,aux20200_BOOL],aux20201_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20202,s_00015],0);
constraint int_lt_reif(s_00019,aux20202,aux20203_BOOL);
constraint int_le_reif(s_00015, s_00019,aux20204_BOOL);
constraint array_bool_and([aux20203_BOOL,aux20204_BOOL],aux20205_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20206,s_00016],0);
constraint int_lt_reif(s_00019,aux20206,aux20207_BOOL);
constraint int_le_reif(s_00016, s_00019,aux20208_BOOL);
constraint array_bool_and([aux20207_BOOL,aux20208_BOOL],aux20209_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20210,s_00018],0);
constraint int_lt_reif(s_00019,aux20210,aux20211_BOOL);
constraint int_le_reif(s_00018, s_00019,aux20212_BOOL);
constraint array_bool_and([aux20211_BOOL,aux20212_BOOL],aux20213_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20214,s_00019],0);
constraint int_lt_reif(s_00019,aux20214,aux20215_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20216,s_00008],0);
constraint int_lt_reif(s_00001,aux20216,aux20217_BOOL);
constraint int_le_reif(s_00008, s_00001,aux20218_BOOL);
constraint array_bool_and([aux20217_BOOL,aux20218_BOOL],aux20219_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20220,s_00004],0);
constraint int_lt_reif(s_00001,aux20220,aux20221_BOOL);
constraint int_le_reif(s_00004, s_00001,aux20222_BOOL);
constraint array_bool_and([aux20221_BOOL,aux20222_BOOL],aux20223_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20224,s_00005],0);
constraint int_lt_reif(s_00001,aux20224,aux20225_BOOL);
constraint int_le_reif(s_00005, s_00001,aux20226_BOOL);
constraint array_bool_and([aux20225_BOOL,aux20226_BOOL],aux20227_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20228,s_00007],0);
constraint int_lt_reif(s_00001,aux20228,aux20229_BOOL);
constraint int_le_reif(s_00007, s_00001,aux20230_BOOL);
constraint array_bool_and([aux20229_BOOL,aux20230_BOOL],aux20231_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20232,s_00009],0);
constraint int_lt_reif(s_00001,aux20232,aux20233_BOOL);
constraint int_le_reif(s_00009, s_00001,aux20234_BOOL);
constraint array_bool_and([aux20233_BOOL,aux20234_BOOL],aux20235_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20236,s_00010],0);
constraint int_lt_reif(s_00001,aux20236,aux20237_BOOL);
constraint int_le_reif(s_00010, s_00001,aux20238_BOOL);
constraint array_bool_and([aux20237_BOOL,aux20238_BOOL],aux20239_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20240,s_00003],0);
constraint int_lt_reif(s_00001,aux20240,aux20241_BOOL);
constraint int_le_reif(s_00003, s_00001,aux20242_BOOL);
constraint array_bool_and([aux20241_BOOL,aux20242_BOOL],aux20243_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20244,s_00017],0);
constraint int_lt_reif(s_00001,aux20244,aux20245_BOOL);
constraint int_le_reif(s_00017, s_00001,aux20246_BOOL);
constraint array_bool_and([aux20245_BOOL,aux20246_BOOL],aux20247_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20248,s_00012],0);
constraint int_lt_reif(s_00001,aux20248,aux20249_BOOL);
constraint int_le_reif(s_00012, s_00001,aux20250_BOOL);
constraint array_bool_and([aux20249_BOOL,aux20250_BOOL],aux20251_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20252,s_00015],0);
constraint int_lt_reif(s_00001,aux20252,aux20253_BOOL);
constraint int_le_reif(s_00015, s_00001,aux20254_BOOL);
constraint array_bool_and([aux20253_BOOL,aux20254_BOOL],aux20255_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20256,s_00016],0);
constraint int_lt_reif(s_00001,aux20256,aux20257_BOOL);
constraint int_le_reif(s_00016, s_00001,aux20258_BOOL);
constraint array_bool_and([aux20257_BOOL,aux20258_BOOL],aux20259_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20260,s_00018],0);
constraint int_lt_reif(s_00001,aux20260,aux20261_BOOL);
constraint int_le_reif(s_00018, s_00001,aux20262_BOOL);
constraint array_bool_and([aux20261_BOOL,aux20262_BOOL],aux20263_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20264,s_00001],0);
constraint int_lt_reif(s_00001,aux20264,aux20265_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20266,s_00001],0);
constraint int_lt_reif(s_00003,aux20266,aux20267_BOOL);
constraint int_le_reif(s_00001, s_00003,aux20268_BOOL);
constraint array_bool_and([aux20267_BOOL,aux20268_BOOL],aux20269_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20270,s_00008],0);
constraint int_lt_reif(s_00003,aux20270,aux20271_BOOL);
constraint int_le_reif(s_00008, s_00003,aux20272_BOOL);
constraint array_bool_and([aux20271_BOOL,aux20272_BOOL],aux20273_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20274,s_00004],0);
constraint int_lt_reif(s_00003,aux20274,aux20275_BOOL);
constraint int_le_reif(s_00004, s_00003,aux20276_BOOL);
constraint array_bool_and([aux20275_BOOL,aux20276_BOOL],aux20277_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20278,s_00005],0);
constraint int_lt_reif(s_00003,aux20278,aux20279_BOOL);
constraint int_le_reif(s_00005, s_00003,aux20280_BOOL);
constraint array_bool_and([aux20279_BOOL,aux20280_BOOL],aux20281_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20282,s_00007],0);
constraint int_lt_reif(s_00003,aux20282,aux20283_BOOL);
constraint int_le_reif(s_00007, s_00003,aux20284_BOOL);
constraint array_bool_and([aux20283_BOOL,aux20284_BOOL],aux20285_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20286,s_00009],0);
constraint int_lt_reif(s_00003,aux20286,aux20287_BOOL);
constraint int_le_reif(s_00009, s_00003,aux20288_BOOL);
constraint array_bool_and([aux20287_BOOL,aux20288_BOOL],aux20289_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20290,s_00010],0);
constraint int_lt_reif(s_00003,aux20290,aux20291_BOOL);
constraint int_le_reif(s_00010, s_00003,aux20292_BOOL);
constraint array_bool_and([aux20291_BOOL,aux20292_BOOL],aux20293_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20294,s_00017],0);
constraint int_lt_reif(s_00003,aux20294,aux20295_BOOL);
constraint int_le_reif(s_00017, s_00003,aux20296_BOOL);
constraint array_bool_and([aux20295_BOOL,aux20296_BOOL],aux20297_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20298,s_00012],0);
constraint int_lt_reif(s_00003,aux20298,aux20299_BOOL);
constraint int_le_reif(s_00012, s_00003,aux20300_BOOL);
constraint array_bool_and([aux20299_BOOL,aux20300_BOOL],aux20301_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20302,s_00015],0);
constraint int_lt_reif(s_00003,aux20302,aux20303_BOOL);
constraint int_le_reif(s_00015, s_00003,aux20304_BOOL);
constraint array_bool_and([aux20303_BOOL,aux20304_BOOL],aux20305_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20306,s_00016],0);
constraint int_lt_reif(s_00003,aux20306,aux20307_BOOL);
constraint int_le_reif(s_00016, s_00003,aux20308_BOOL);
constraint array_bool_and([aux20307_BOOL,aux20308_BOOL],aux20309_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20310,s_00018],0);
constraint int_lt_reif(s_00003,aux20310,aux20311_BOOL);
constraint int_le_reif(s_00018, s_00003,aux20312_BOOL);
constraint array_bool_and([aux20311_BOOL,aux20312_BOOL],aux20313_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20314,s_00003],0);
constraint int_lt_reif(s_00003,aux20314,aux20315_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20316,s_00001],0);
constraint int_lt_reif(s_00004,aux20316,aux20317_BOOL);
constraint int_le_reif(s_00001, s_00004,aux20318_BOOL);
constraint array_bool_and([aux20317_BOOL,aux20318_BOOL],aux20319_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20320,s_00008],0);
constraint int_lt_reif(s_00004,aux20320,aux20321_BOOL);
constraint int_le_reif(s_00008, s_00004,aux20322_BOOL);
constraint array_bool_and([aux20321_BOOL,aux20322_BOOL],aux20323_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20324,s_00005],0);
constraint int_lt_reif(s_00004,aux20324,aux20325_BOOL);
constraint int_le_reif(s_00005, s_00004,aux20326_BOOL);
constraint array_bool_and([aux20325_BOOL,aux20326_BOOL],aux20327_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20328,s_00007],0);
constraint int_lt_reif(s_00004,aux20328,aux20329_BOOL);
constraint int_le_reif(s_00007, s_00004,aux20330_BOOL);
constraint array_bool_and([aux20329_BOOL,aux20330_BOOL],aux20331_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20332,s_00009],0);
constraint int_lt_reif(s_00004,aux20332,aux20333_BOOL);
constraint int_le_reif(s_00009, s_00004,aux20334_BOOL);
constraint array_bool_and([aux20333_BOOL,aux20334_BOOL],aux20335_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20336,s_00010],0);
constraint int_lt_reif(s_00004,aux20336,aux20337_BOOL);
constraint int_le_reif(s_00010, s_00004,aux20338_BOOL);
constraint array_bool_and([aux20337_BOOL,aux20338_BOOL],aux20339_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20340,s_00003],0);
constraint int_lt_reif(s_00004,aux20340,aux20341_BOOL);
constraint int_le_reif(s_00003, s_00004,aux20342_BOOL);
constraint array_bool_and([aux20341_BOOL,aux20342_BOOL],aux20343_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20344,s_00017],0);
constraint int_lt_reif(s_00004,aux20344,aux20345_BOOL);
constraint int_le_reif(s_00017, s_00004,aux20346_BOOL);
constraint array_bool_and([aux20345_BOOL,aux20346_BOOL],aux20347_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20348,s_00012],0);
constraint int_lt_reif(s_00004,aux20348,aux20349_BOOL);
constraint int_le_reif(s_00012, s_00004,aux20350_BOOL);
constraint array_bool_and([aux20349_BOOL,aux20350_BOOL],aux20351_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20352,s_00015],0);
constraint int_lt_reif(s_00004,aux20352,aux20353_BOOL);
constraint int_le_reif(s_00015, s_00004,aux20354_BOOL);
constraint array_bool_and([aux20353_BOOL,aux20354_BOOL],aux20355_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20356,s_00016],0);
constraint int_lt_reif(s_00004,aux20356,aux20357_BOOL);
constraint int_le_reif(s_00016, s_00004,aux20358_BOOL);
constraint array_bool_and([aux20357_BOOL,aux20358_BOOL],aux20359_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20360,s_00018],0);
constraint int_lt_reif(s_00004,aux20360,aux20361_BOOL);
constraint int_le_reif(s_00018, s_00004,aux20362_BOOL);
constraint array_bool_and([aux20361_BOOL,aux20362_BOOL],aux20363_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20364,s_00004],0);
constraint int_lt_reif(s_00004,aux20364,aux20365_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20366,s_00001],0);
constraint int_lt_reif(s_00005,aux20366,aux20367_BOOL);
constraint int_le_reif(s_00001, s_00005,aux20368_BOOL);
constraint array_bool_and([aux20367_BOOL,aux20368_BOOL],aux20369_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20370,s_00008],0);
constraint int_lt_reif(s_00005,aux20370,aux20371_BOOL);
constraint int_le_reif(s_00008, s_00005,aux20372_BOOL);
constraint array_bool_and([aux20371_BOOL,aux20372_BOOL],aux20373_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20374,s_00004],0);
constraint int_lt_reif(s_00005,aux20374,aux20375_BOOL);
constraint int_le_reif(s_00004, s_00005,aux20376_BOOL);
constraint array_bool_and([aux20375_BOOL,aux20376_BOOL],aux20377_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20378,s_00007],0);
constraint int_lt_reif(s_00005,aux20378,aux20379_BOOL);
constraint int_le_reif(s_00007, s_00005,aux20380_BOOL);
constraint array_bool_and([aux20379_BOOL,aux20380_BOOL],aux20381_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20382,s_00009],0);
constraint int_lt_reif(s_00005,aux20382,aux20383_BOOL);
constraint int_le_reif(s_00009, s_00005,aux20384_BOOL);
constraint array_bool_and([aux20383_BOOL,aux20384_BOOL],aux20385_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20386,s_00010],0);
constraint int_lt_reif(s_00005,aux20386,aux20387_BOOL);
constraint int_le_reif(s_00010, s_00005,aux20388_BOOL);
constraint array_bool_and([aux20387_BOOL,aux20388_BOOL],aux20389_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20390,s_00003],0);
constraint int_lt_reif(s_00005,aux20390,aux20391_BOOL);
constraint int_le_reif(s_00003, s_00005,aux20392_BOOL);
constraint array_bool_and([aux20391_BOOL,aux20392_BOOL],aux20393_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20394,s_00017],0);
constraint int_lt_reif(s_00005,aux20394,aux20395_BOOL);
constraint int_le_reif(s_00017, s_00005,aux20396_BOOL);
constraint array_bool_and([aux20395_BOOL,aux20396_BOOL],aux20397_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20398,s_00012],0);
constraint int_lt_reif(s_00005,aux20398,aux20399_BOOL);
constraint int_le_reif(s_00012, s_00005,aux20400_BOOL);
constraint array_bool_and([aux20399_BOOL,aux20400_BOOL],aux20401_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20402,s_00015],0);
constraint int_lt_reif(s_00005,aux20402,aux20403_BOOL);
constraint int_le_reif(s_00015, s_00005,aux20404_BOOL);
constraint array_bool_and([aux20403_BOOL,aux20404_BOOL],aux20405_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20406,s_00016],0);
constraint int_lt_reif(s_00005,aux20406,aux20407_BOOL);
constraint int_le_reif(s_00016, s_00005,aux20408_BOOL);
constraint array_bool_and([aux20407_BOOL,aux20408_BOOL],aux20409_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20410,s_00018],0);
constraint int_lt_reif(s_00005,aux20410,aux20411_BOOL);
constraint int_le_reif(s_00018, s_00005,aux20412_BOOL);
constraint array_bool_and([aux20411_BOOL,aux20412_BOOL],aux20413_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20414,s_00005],0);
constraint int_lt_reif(s_00005,aux20414,aux20415_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20416,s_00001],0);
constraint int_lt_reif(s_00007,aux20416,aux20417_BOOL);
constraint int_le_reif(s_00001, s_00007,aux20418_BOOL);
constraint array_bool_and([aux20417_BOOL,aux20418_BOOL],aux20419_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20420,s_00008],0);
constraint int_lt_reif(s_00007,aux20420,aux20421_BOOL);
constraint int_le_reif(s_00008, s_00007,aux20422_BOOL);
constraint array_bool_and([aux20421_BOOL,aux20422_BOOL],aux20423_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20424,s_00004],0);
constraint int_lt_reif(s_00007,aux20424,aux20425_BOOL);
constraint int_le_reif(s_00004, s_00007,aux20426_BOOL);
constraint array_bool_and([aux20425_BOOL,aux20426_BOOL],aux20427_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20428,s_00005],0);
constraint int_lt_reif(s_00007,aux20428,aux20429_BOOL);
constraint int_le_reif(s_00005, s_00007,aux20430_BOOL);
constraint array_bool_and([aux20429_BOOL,aux20430_BOOL],aux20431_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20432,s_00009],0);
constraint int_lt_reif(s_00007,aux20432,aux20433_BOOL);
constraint int_le_reif(s_00009, s_00007,aux20434_BOOL);
constraint array_bool_and([aux20433_BOOL,aux20434_BOOL],aux20435_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20436,s_00010],0);
constraint int_lt_reif(s_00007,aux20436,aux20437_BOOL);
constraint int_le_reif(s_00010, s_00007,aux20438_BOOL);
constraint array_bool_and([aux20437_BOOL,aux20438_BOOL],aux20439_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20440,s_00003],0);
constraint int_lt_reif(s_00007,aux20440,aux20441_BOOL);
constraint int_le_reif(s_00003, s_00007,aux20442_BOOL);
constraint array_bool_and([aux20441_BOOL,aux20442_BOOL],aux20443_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20444,s_00017],0);
constraint int_lt_reif(s_00007,aux20444,aux20445_BOOL);
constraint int_le_reif(s_00017, s_00007,aux20446_BOOL);
constraint array_bool_and([aux20445_BOOL,aux20446_BOOL],aux20447_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20448,s_00012],0);
constraint int_lt_reif(s_00007,aux20448,aux20449_BOOL);
constraint int_le_reif(s_00012, s_00007,aux20450_BOOL);
constraint array_bool_and([aux20449_BOOL,aux20450_BOOL],aux20451_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20452,s_00015],0);
constraint int_lt_reif(s_00007,aux20452,aux20453_BOOL);
constraint int_le_reif(s_00015, s_00007,aux20454_BOOL);
constraint array_bool_and([aux20453_BOOL,aux20454_BOOL],aux20455_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20456,s_00016],0);
constraint int_lt_reif(s_00007,aux20456,aux20457_BOOL);
constraint int_le_reif(s_00016, s_00007,aux20458_BOOL);
constraint array_bool_and([aux20457_BOOL,aux20458_BOOL],aux20459_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20460,s_00018],0);
constraint int_lt_reif(s_00007,aux20460,aux20461_BOOL);
constraint int_le_reif(s_00018, s_00007,aux20462_BOOL);
constraint array_bool_and([aux20461_BOOL,aux20462_BOOL],aux20463_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20464,s_00007],0);
constraint int_lt_reif(s_00007,aux20464,aux20465_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20466,s_00001],0);
constraint int_lt_reif(s_00008,aux20466,aux20467_BOOL);
constraint int_le_reif(s_00001, s_00008,aux20468_BOOL);
constraint array_bool_and([aux20467_BOOL,aux20468_BOOL],aux20469_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20470,s_00004],0);
constraint int_lt_reif(s_00008,aux20470,aux20471_BOOL);
constraint int_le_reif(s_00004, s_00008,aux20472_BOOL);
constraint array_bool_and([aux20471_BOOL,aux20472_BOOL],aux20473_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20474,s_00005],0);
constraint int_lt_reif(s_00008,aux20474,aux20475_BOOL);
constraint int_le_reif(s_00005, s_00008,aux20476_BOOL);
constraint array_bool_and([aux20475_BOOL,aux20476_BOOL],aux20477_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20478,s_00007],0);
constraint int_lt_reif(s_00008,aux20478,aux20479_BOOL);
constraint int_le_reif(s_00007, s_00008,aux20480_BOOL);
constraint array_bool_and([aux20479_BOOL,aux20480_BOOL],aux20481_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20482,s_00009],0);
constraint int_lt_reif(s_00008,aux20482,aux20483_BOOL);
constraint int_le_reif(s_00009, s_00008,aux20484_BOOL);
constraint array_bool_and([aux20483_BOOL,aux20484_BOOL],aux20485_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20486,s_00010],0);
constraint int_lt_reif(s_00008,aux20486,aux20487_BOOL);
constraint int_le_reif(s_00010, s_00008,aux20488_BOOL);
constraint array_bool_and([aux20487_BOOL,aux20488_BOOL],aux20489_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20490,s_00003],0);
constraint int_lt_reif(s_00008,aux20490,aux20491_BOOL);
constraint int_le_reif(s_00003, s_00008,aux20492_BOOL);
constraint array_bool_and([aux20491_BOOL,aux20492_BOOL],aux20493_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20494,s_00017],0);
constraint int_lt_reif(s_00008,aux20494,aux20495_BOOL);
constraint int_le_reif(s_00017, s_00008,aux20496_BOOL);
constraint array_bool_and([aux20495_BOOL,aux20496_BOOL],aux20497_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20498,s_00012],0);
constraint int_lt_reif(s_00008,aux20498,aux20499_BOOL);
constraint int_le_reif(s_00012, s_00008,aux20500_BOOL);
constraint array_bool_and([aux20499_BOOL,aux20500_BOOL],aux20501_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20502,s_00015],0);
constraint int_lt_reif(s_00008,aux20502,aux20503_BOOL);
constraint int_le_reif(s_00015, s_00008,aux20504_BOOL);
constraint array_bool_and([aux20503_BOOL,aux20504_BOOL],aux20505_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20506,s_00016],0);
constraint int_lt_reif(s_00008,aux20506,aux20507_BOOL);
constraint int_le_reif(s_00016, s_00008,aux20508_BOOL);
constraint array_bool_and([aux20507_BOOL,aux20508_BOOL],aux20509_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20510,s_00018],0);
constraint int_lt_reif(s_00008,aux20510,aux20511_BOOL);
constraint int_le_reif(s_00018, s_00008,aux20512_BOOL);
constraint array_bool_and([aux20511_BOOL,aux20512_BOOL],aux20513_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20514,s_00008],0);
constraint int_lt_reif(s_00008,aux20514,aux20515_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20516,s_00001],0);
constraint int_lt_reif(s_00009,aux20516,aux20517_BOOL);
constraint int_le_reif(s_00001, s_00009,aux20518_BOOL);
constraint array_bool_and([aux20517_BOOL,aux20518_BOOL],aux20519_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20520,s_00008],0);
constraint int_lt_reif(s_00009,aux20520,aux20521_BOOL);
constraint int_le_reif(s_00008, s_00009,aux20522_BOOL);
constraint array_bool_and([aux20521_BOOL,aux20522_BOOL],aux20523_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20524,s_00004],0);
constraint int_lt_reif(s_00009,aux20524,aux20525_BOOL);
constraint int_le_reif(s_00004, s_00009,aux20526_BOOL);
constraint array_bool_and([aux20525_BOOL,aux20526_BOOL],aux20527_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20528,s_00005],0);
constraint int_lt_reif(s_00009,aux20528,aux20529_BOOL);
constraint int_le_reif(s_00005, s_00009,aux20530_BOOL);
constraint array_bool_and([aux20529_BOOL,aux20530_BOOL],aux20531_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20532,s_00007],0);
constraint int_lt_reif(s_00009,aux20532,aux20533_BOOL);
constraint int_le_reif(s_00007, s_00009,aux20534_BOOL);
constraint array_bool_and([aux20533_BOOL,aux20534_BOOL],aux20535_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20536,s_00010],0);
constraint int_lt_reif(s_00009,aux20536,aux20537_BOOL);
constraint int_le_reif(s_00010, s_00009,aux20538_BOOL);
constraint array_bool_and([aux20537_BOOL,aux20538_BOOL],aux20539_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20540,s_00003],0);
constraint int_lt_reif(s_00009,aux20540,aux20541_BOOL);
constraint int_le_reif(s_00003, s_00009,aux20542_BOOL);
constraint array_bool_and([aux20541_BOOL,aux20542_BOOL],aux20543_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20544,s_00017],0);
constraint int_lt_reif(s_00009,aux20544,aux20545_BOOL);
constraint int_le_reif(s_00017, s_00009,aux20546_BOOL);
constraint array_bool_and([aux20545_BOOL,aux20546_BOOL],aux20547_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20548,s_00012],0);
constraint int_lt_reif(s_00009,aux20548,aux20549_BOOL);
constraint int_le_reif(s_00012, s_00009,aux20550_BOOL);
constraint array_bool_and([aux20549_BOOL,aux20550_BOOL],aux20551_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20552,s_00015],0);
constraint int_lt_reif(s_00009,aux20552,aux20553_BOOL);
constraint int_le_reif(s_00015, s_00009,aux20554_BOOL);
constraint array_bool_and([aux20553_BOOL,aux20554_BOOL],aux20555_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20556,s_00016],0);
constraint int_lt_reif(s_00009,aux20556,aux20557_BOOL);
constraint int_le_reif(s_00016, s_00009,aux20558_BOOL);
constraint array_bool_and([aux20557_BOOL,aux20558_BOOL],aux20559_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20560,s_00018],0);
constraint int_lt_reif(s_00009,aux20560,aux20561_BOOL);
constraint int_le_reif(s_00018, s_00009,aux20562_BOOL);
constraint array_bool_and([aux20561_BOOL,aux20562_BOOL],aux20563_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20564,s_00009],0);
constraint int_lt_reif(s_00009,aux20564,aux20565_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20566,s_00001],0);
constraint int_lt_reif(s_00010,aux20566,aux20567_BOOL);
constraint int_le_reif(s_00001, s_00010,aux20568_BOOL);
constraint array_bool_and([aux20567_BOOL,aux20568_BOOL],aux20569_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20570,s_00008],0);
constraint int_lt_reif(s_00010,aux20570,aux20571_BOOL);
constraint int_le_reif(s_00008, s_00010,aux20572_BOOL);
constraint array_bool_and([aux20571_BOOL,aux20572_BOOL],aux20573_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20574,s_00004],0);
constraint int_lt_reif(s_00010,aux20574,aux20575_BOOL);
constraint int_le_reif(s_00004, s_00010,aux20576_BOOL);
constraint array_bool_and([aux20575_BOOL,aux20576_BOOL],aux20577_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20578,s_00005],0);
constraint int_lt_reif(s_00010,aux20578,aux20579_BOOL);
constraint int_le_reif(s_00005, s_00010,aux20580_BOOL);
constraint array_bool_and([aux20579_BOOL,aux20580_BOOL],aux20581_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20582,s_00007],0);
constraint int_lt_reif(s_00010,aux20582,aux20583_BOOL);
constraint int_le_reif(s_00007, s_00010,aux20584_BOOL);
constraint array_bool_and([aux20583_BOOL,aux20584_BOOL],aux20585_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20586,s_00009],0);
constraint int_lt_reif(s_00010,aux20586,aux20587_BOOL);
constraint int_le_reif(s_00009, s_00010,aux20588_BOOL);
constraint array_bool_and([aux20587_BOOL,aux20588_BOOL],aux20589_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20590,s_00003],0);
constraint int_lt_reif(s_00010,aux20590,aux20591_BOOL);
constraint int_le_reif(s_00003, s_00010,aux20592_BOOL);
constraint array_bool_and([aux20591_BOOL,aux20592_BOOL],aux20593_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20594,s_00017],0);
constraint int_lt_reif(s_00010,aux20594,aux20595_BOOL);
constraint int_le_reif(s_00017, s_00010,aux20596_BOOL);
constraint array_bool_and([aux20595_BOOL,aux20596_BOOL],aux20597_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20598,s_00012],0);
constraint int_lt_reif(s_00010,aux20598,aux20599_BOOL);
constraint int_le_reif(s_00012, s_00010,aux20600_BOOL);
constraint array_bool_and([aux20599_BOOL,aux20600_BOOL],aux20601_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20602,s_00015],0);
constraint int_lt_reif(s_00010,aux20602,aux20603_BOOL);
constraint int_le_reif(s_00015, s_00010,aux20604_BOOL);
constraint array_bool_and([aux20603_BOOL,aux20604_BOOL],aux20605_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20606,s_00016],0);
constraint int_lt_reif(s_00010,aux20606,aux20607_BOOL);
constraint int_le_reif(s_00016, s_00010,aux20608_BOOL);
constraint array_bool_and([aux20607_BOOL,aux20608_BOOL],aux20609_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20610,s_00018],0);
constraint int_lt_reif(s_00010,aux20610,aux20611_BOOL);
constraint int_le_reif(s_00018, s_00010,aux20612_BOOL);
constraint array_bool_and([aux20611_BOOL,aux20612_BOOL],aux20613_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20614,s_00010],0);
constraint int_lt_reif(s_00010,aux20614,aux20615_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20616,s_00001],0);
constraint int_lt_reif(s_00012,aux20616,aux20617_BOOL);
constraint int_le_reif(s_00001, s_00012,aux20618_BOOL);
constraint array_bool_and([aux20617_BOOL,aux20618_BOOL],aux20619_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20620,s_00008],0);
constraint int_lt_reif(s_00012,aux20620,aux20621_BOOL);
constraint int_le_reif(s_00008, s_00012,aux20622_BOOL);
constraint array_bool_and([aux20621_BOOL,aux20622_BOOL],aux20623_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20624,s_00004],0);
constraint int_lt_reif(s_00012,aux20624,aux20625_BOOL);
constraint int_le_reif(s_00004, s_00012,aux20626_BOOL);
constraint array_bool_and([aux20625_BOOL,aux20626_BOOL],aux20627_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20628,s_00005],0);
constraint int_lt_reif(s_00012,aux20628,aux20629_BOOL);
constraint int_le_reif(s_00005, s_00012,aux20630_BOOL);
constraint array_bool_and([aux20629_BOOL,aux20630_BOOL],aux20631_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20632,s_00007],0);
constraint int_lt_reif(s_00012,aux20632,aux20633_BOOL);
constraint int_le_reif(s_00007, s_00012,aux20634_BOOL);
constraint array_bool_and([aux20633_BOOL,aux20634_BOOL],aux20635_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20636,s_00009],0);
constraint int_lt_reif(s_00012,aux20636,aux20637_BOOL);
constraint int_le_reif(s_00009, s_00012,aux20638_BOOL);
constraint array_bool_and([aux20637_BOOL,aux20638_BOOL],aux20639_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20640,s_00010],0);
constraint int_lt_reif(s_00012,aux20640,aux20641_BOOL);
constraint int_le_reif(s_00010, s_00012,aux20642_BOOL);
constraint array_bool_and([aux20641_BOOL,aux20642_BOOL],aux20643_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20644,s_00003],0);
constraint int_lt_reif(s_00012,aux20644,aux20645_BOOL);
constraint int_le_reif(s_00003, s_00012,aux20646_BOOL);
constraint array_bool_and([aux20645_BOOL,aux20646_BOOL],aux20647_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20648,s_00017],0);
constraint int_lt_reif(s_00012,aux20648,aux20649_BOOL);
constraint int_le_reif(s_00017, s_00012,aux20650_BOOL);
constraint array_bool_and([aux20649_BOOL,aux20650_BOOL],aux20651_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20652,s_00015],0);
constraint int_lt_reif(s_00012,aux20652,aux20653_BOOL);
constraint int_le_reif(s_00015, s_00012,aux20654_BOOL);
constraint array_bool_and([aux20653_BOOL,aux20654_BOOL],aux20655_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20656,s_00016],0);
constraint int_lt_reif(s_00012,aux20656,aux20657_BOOL);
constraint int_le_reif(s_00016, s_00012,aux20658_BOOL);
constraint array_bool_and([aux20657_BOOL,aux20658_BOOL],aux20659_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20660,s_00018],0);
constraint int_lt_reif(s_00012,aux20660,aux20661_BOOL);
constraint int_le_reif(s_00018, s_00012,aux20662_BOOL);
constraint array_bool_and([aux20661_BOOL,aux20662_BOOL],aux20663_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20664,s_00012],0);
constraint int_lt_reif(s_00012,aux20664,aux20665_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20666,s_00001],0);
constraint int_lt_reif(s_00015,aux20666,aux20667_BOOL);
constraint int_le_reif(s_00001, s_00015,aux20668_BOOL);
constraint array_bool_and([aux20667_BOOL,aux20668_BOOL],aux20669_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20670,s_00008],0);
constraint int_lt_reif(s_00015,aux20670,aux20671_BOOL);
constraint int_le_reif(s_00008, s_00015,aux20672_BOOL);
constraint array_bool_and([aux20671_BOOL,aux20672_BOOL],aux20673_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20674,s_00004],0);
constraint int_lt_reif(s_00015,aux20674,aux20675_BOOL);
constraint int_le_reif(s_00004, s_00015,aux20676_BOOL);
constraint array_bool_and([aux20675_BOOL,aux20676_BOOL],aux20677_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20678,s_00005],0);
constraint int_lt_reif(s_00015,aux20678,aux20679_BOOL);
constraint int_le_reif(s_00005, s_00015,aux20680_BOOL);
constraint array_bool_and([aux20679_BOOL,aux20680_BOOL],aux20681_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20682,s_00007],0);
constraint int_lt_reif(s_00015,aux20682,aux20683_BOOL);
constraint int_le_reif(s_00007, s_00015,aux20684_BOOL);
constraint array_bool_and([aux20683_BOOL,aux20684_BOOL],aux20685_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20686,s_00009],0);
constraint int_lt_reif(s_00015,aux20686,aux20687_BOOL);
constraint int_le_reif(s_00009, s_00015,aux20688_BOOL);
constraint array_bool_and([aux20687_BOOL,aux20688_BOOL],aux20689_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20690,s_00010],0);
constraint int_lt_reif(s_00015,aux20690,aux20691_BOOL);
constraint int_le_reif(s_00010, s_00015,aux20692_BOOL);
constraint array_bool_and([aux20691_BOOL,aux20692_BOOL],aux20693_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20694,s_00003],0);
constraint int_lt_reif(s_00015,aux20694,aux20695_BOOL);
constraint int_le_reif(s_00003, s_00015,aux20696_BOOL);
constraint array_bool_and([aux20695_BOOL,aux20696_BOOL],aux20697_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20698,s_00017],0);
constraint int_lt_reif(s_00015,aux20698,aux20699_BOOL);
constraint int_le_reif(s_00017, s_00015,aux20700_BOOL);
constraint array_bool_and([aux20699_BOOL,aux20700_BOOL],aux20701_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20702,s_00012],0);
constraint int_lt_reif(s_00015,aux20702,aux20703_BOOL);
constraint int_le_reif(s_00012, s_00015,aux20704_BOOL);
constraint array_bool_and([aux20703_BOOL,aux20704_BOOL],aux20705_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20706,s_00016],0);
constraint int_lt_reif(s_00015,aux20706,aux20707_BOOL);
constraint int_le_reif(s_00016, s_00015,aux20708_BOOL);
constraint array_bool_and([aux20707_BOOL,aux20708_BOOL],aux20709_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20710,s_00018],0);
constraint int_lt_reif(s_00015,aux20710,aux20711_BOOL);
constraint int_le_reif(s_00018, s_00015,aux20712_BOOL);
constraint array_bool_and([aux20711_BOOL,aux20712_BOOL],aux20713_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20714,s_00015],0);
constraint int_lt_reif(s_00015,aux20714,aux20715_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20716,s_00001],0);
constraint int_lt_reif(s_00016,aux20716,aux20717_BOOL);
constraint int_le_reif(s_00001, s_00016,aux20718_BOOL);
constraint array_bool_and([aux20717_BOOL,aux20718_BOOL],aux20719_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20720,s_00008],0);
constraint int_lt_reif(s_00016,aux20720,aux20721_BOOL);
constraint int_le_reif(s_00008, s_00016,aux20722_BOOL);
constraint array_bool_and([aux20721_BOOL,aux20722_BOOL],aux20723_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20724,s_00004],0);
constraint int_lt_reif(s_00016,aux20724,aux20725_BOOL);
constraint int_le_reif(s_00004, s_00016,aux20726_BOOL);
constraint array_bool_and([aux20725_BOOL,aux20726_BOOL],aux20727_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20728,s_00005],0);
constraint int_lt_reif(s_00016,aux20728,aux20729_BOOL);
constraint int_le_reif(s_00005, s_00016,aux20730_BOOL);
constraint array_bool_and([aux20729_BOOL,aux20730_BOOL],aux20731_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20732,s_00007],0);
constraint int_lt_reif(s_00016,aux20732,aux20733_BOOL);
constraint int_le_reif(s_00007, s_00016,aux20734_BOOL);
constraint array_bool_and([aux20733_BOOL,aux20734_BOOL],aux20735_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20736,s_00009],0);
constraint int_lt_reif(s_00016,aux20736,aux20737_BOOL);
constraint int_le_reif(s_00009, s_00016,aux20738_BOOL);
constraint array_bool_and([aux20737_BOOL,aux20738_BOOL],aux20739_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20740,s_00010],0);
constraint int_lt_reif(s_00016,aux20740,aux20741_BOOL);
constraint int_le_reif(s_00010, s_00016,aux20742_BOOL);
constraint array_bool_and([aux20741_BOOL,aux20742_BOOL],aux20743_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20744,s_00003],0);
constraint int_lt_reif(s_00016,aux20744,aux20745_BOOL);
constraint int_le_reif(s_00003, s_00016,aux20746_BOOL);
constraint array_bool_and([aux20745_BOOL,aux20746_BOOL],aux20747_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20748,s_00017],0);
constraint int_lt_reif(s_00016,aux20748,aux20749_BOOL);
constraint int_le_reif(s_00017, s_00016,aux20750_BOOL);
constraint array_bool_and([aux20749_BOOL,aux20750_BOOL],aux20751_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20752,s_00012],0);
constraint int_lt_reif(s_00016,aux20752,aux20753_BOOL);
constraint int_le_reif(s_00012, s_00016,aux20754_BOOL);
constraint array_bool_and([aux20753_BOOL,aux20754_BOOL],aux20755_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20756,s_00015],0);
constraint int_lt_reif(s_00016,aux20756,aux20757_BOOL);
constraint int_le_reif(s_00015, s_00016,aux20758_BOOL);
constraint array_bool_and([aux20757_BOOL,aux20758_BOOL],aux20759_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20760,s_00018],0);
constraint int_lt_reif(s_00016,aux20760,aux20761_BOOL);
constraint int_le_reif(s_00018, s_00016,aux20762_BOOL);
constraint array_bool_and([aux20761_BOOL,aux20762_BOOL],aux20763_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20764,s_00016],0);
constraint int_lt_reif(s_00016,aux20764,aux20765_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20766,s_00001],0);
constraint int_lt_reif(s_00017,aux20766,aux20767_BOOL);
constraint int_le_reif(s_00001, s_00017,aux20768_BOOL);
constraint array_bool_and([aux20767_BOOL,aux20768_BOOL],aux20769_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20770,s_00008],0);
constraint int_lt_reif(s_00017,aux20770,aux20771_BOOL);
constraint int_le_reif(s_00008, s_00017,aux20772_BOOL);
constraint array_bool_and([aux20771_BOOL,aux20772_BOOL],aux20773_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20774,s_00004],0);
constraint int_lt_reif(s_00017,aux20774,aux20775_BOOL);
constraint int_le_reif(s_00004, s_00017,aux20776_BOOL);
constraint array_bool_and([aux20775_BOOL,aux20776_BOOL],aux20777_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20778,s_00005],0);
constraint int_lt_reif(s_00017,aux20778,aux20779_BOOL);
constraint int_le_reif(s_00005, s_00017,aux20780_BOOL);
constraint array_bool_and([aux20779_BOOL,aux20780_BOOL],aux20781_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20782,s_00007],0);
constraint int_lt_reif(s_00017,aux20782,aux20783_BOOL);
constraint int_le_reif(s_00007, s_00017,aux20784_BOOL);
constraint array_bool_and([aux20783_BOOL,aux20784_BOOL],aux20785_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20786,s_00009],0);
constraint int_lt_reif(s_00017,aux20786,aux20787_BOOL);
constraint int_le_reif(s_00009, s_00017,aux20788_BOOL);
constraint array_bool_and([aux20787_BOOL,aux20788_BOOL],aux20789_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20790,s_00010],0);
constraint int_lt_reif(s_00017,aux20790,aux20791_BOOL);
constraint int_le_reif(s_00010, s_00017,aux20792_BOOL);
constraint array_bool_and([aux20791_BOOL,aux20792_BOOL],aux20793_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20794,s_00003],0);
constraint int_lt_reif(s_00017,aux20794,aux20795_BOOL);
constraint int_le_reif(s_00003, s_00017,aux20796_BOOL);
constraint array_bool_and([aux20795_BOOL,aux20796_BOOL],aux20797_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20798,s_00012],0);
constraint int_lt_reif(s_00017,aux20798,aux20799_BOOL);
constraint int_le_reif(s_00012, s_00017,aux20800_BOOL);
constraint array_bool_and([aux20799_BOOL,aux20800_BOOL],aux20801_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20802,s_00015],0);
constraint int_lt_reif(s_00017,aux20802,aux20803_BOOL);
constraint int_le_reif(s_00015, s_00017,aux20804_BOOL);
constraint array_bool_and([aux20803_BOOL,aux20804_BOOL],aux20805_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20806,s_00016],0);
constraint int_lt_reif(s_00017,aux20806,aux20807_BOOL);
constraint int_le_reif(s_00016, s_00017,aux20808_BOOL);
constraint array_bool_and([aux20807_BOOL,aux20808_BOOL],aux20809_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20810,s_00018],0);
constraint int_lt_reif(s_00017,aux20810,aux20811_BOOL);
constraint int_le_reif(s_00018, s_00017,aux20812_BOOL);
constraint array_bool_and([aux20811_BOOL,aux20812_BOOL],aux20813_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20814,s_00017],0);
constraint int_lt_reif(s_00017,aux20814,aux20815_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20816,s_00001],0);
constraint int_lt_reif(s_00018,aux20816,aux20817_BOOL);
constraint int_le_reif(s_00001, s_00018,aux20818_BOOL);
constraint array_bool_and([aux20817_BOOL,aux20818_BOOL],aux20819_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20820,s_00008],0);
constraint int_lt_reif(s_00018,aux20820,aux20821_BOOL);
constraint int_le_reif(s_00008, s_00018,aux20822_BOOL);
constraint array_bool_and([aux20821_BOOL,aux20822_BOOL],aux20823_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20824,s_00004],0);
constraint int_lt_reif(s_00018,aux20824,aux20825_BOOL);
constraint int_le_reif(s_00004, s_00018,aux20826_BOOL);
constraint array_bool_and([aux20825_BOOL,aux20826_BOOL],aux20827_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20828,s_00005],0);
constraint int_lt_reif(s_00018,aux20828,aux20829_BOOL);
constraint int_le_reif(s_00005, s_00018,aux20830_BOOL);
constraint array_bool_and([aux20829_BOOL,aux20830_BOOL],aux20831_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20832,s_00007],0);
constraint int_lt_reif(s_00018,aux20832,aux20833_BOOL);
constraint int_le_reif(s_00007, s_00018,aux20834_BOOL);
constraint array_bool_and([aux20833_BOOL,aux20834_BOOL],aux20835_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20836,s_00009],0);
constraint int_lt_reif(s_00018,aux20836,aux20837_BOOL);
constraint int_le_reif(s_00009, s_00018,aux20838_BOOL);
constraint array_bool_and([aux20837_BOOL,aux20838_BOOL],aux20839_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20840,s_00010],0);
constraint int_lt_reif(s_00018,aux20840,aux20841_BOOL);
constraint int_le_reif(s_00010, s_00018,aux20842_BOOL);
constraint array_bool_and([aux20841_BOOL,aux20842_BOOL],aux20843_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20844,s_00003],0);
constraint int_lt_reif(s_00018,aux20844,aux20845_BOOL);
constraint int_le_reif(s_00003, s_00018,aux20846_BOOL);
constraint array_bool_and([aux20845_BOOL,aux20846_BOOL],aux20847_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20848,s_00017],0);
constraint int_lt_reif(s_00018,aux20848,aux20849_BOOL);
constraint int_le_reif(s_00017, s_00018,aux20850_BOOL);
constraint array_bool_and([aux20849_BOOL,aux20850_BOOL],aux20851_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20852,s_00012],0);
constraint int_lt_reif(s_00018,aux20852,aux20853_BOOL);
constraint int_le_reif(s_00012, s_00018,aux20854_BOOL);
constraint array_bool_and([aux20853_BOOL,aux20854_BOOL],aux20855_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20856,s_00015],0);
constraint int_lt_reif(s_00018,aux20856,aux20857_BOOL);
constraint int_le_reif(s_00015, s_00018,aux20858_BOOL);
constraint array_bool_and([aux20857_BOOL,aux20858_BOOL],aux20859_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20860,s_00016],0);
constraint int_lt_reif(s_00018,aux20860,aux20861_BOOL);
constraint int_le_reif(s_00016, s_00018,aux20862_BOOL);
constraint array_bool_and([aux20861_BOOL,aux20862_BOOL],aux20863_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20864,s_00018],0);
constraint int_lt_reif(s_00018,aux20864,aux20865_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20866,s_00008],0);
constraint int_lt_reif(s_00001,aux20866,aux20867_BOOL);
constraint int_le_reif(s_00008, s_00001,aux20868_BOOL);
constraint array_bool_and([aux20867_BOOL,aux20868_BOOL],aux20869_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20870,s_00004],0);
constraint int_lt_reif(s_00001,aux20870,aux20871_BOOL);
constraint int_le_reif(s_00004, s_00001,aux20872_BOOL);
constraint array_bool_and([aux20871_BOOL,aux20872_BOOL],aux20873_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20874,s_00005],0);
constraint int_lt_reif(s_00001,aux20874,aux20875_BOOL);
constraint int_le_reif(s_00005, s_00001,aux20876_BOOL);
constraint array_bool_and([aux20875_BOOL,aux20876_BOOL],aux20877_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20878,s_00007],0);
constraint int_lt_reif(s_00001,aux20878,aux20879_BOOL);
constraint int_le_reif(s_00007, s_00001,aux20880_BOOL);
constraint array_bool_and([aux20879_BOOL,aux20880_BOOL],aux20881_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20882,s_00010],0);
constraint int_lt_reif(s_00001,aux20882,aux20883_BOOL);
constraint int_le_reif(s_00010, s_00001,aux20884_BOOL);
constraint array_bool_and([aux20883_BOOL,aux20884_BOOL],aux20885_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20886,s_00006],0);
constraint int_lt_reif(s_00001,aux20886,aux20887_BOOL);
constraint int_le_reif(s_00006, s_00001,aux20888_BOOL);
constraint array_bool_and([aux20887_BOOL,aux20888_BOOL],aux20889_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20890,s_00017],0);
constraint int_lt_reif(s_00001,aux20890,aux20891_BOOL);
constraint int_le_reif(s_00017, s_00001,aux20892_BOOL);
constraint array_bool_and([aux20891_BOOL,aux20892_BOOL],aux20893_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20894,s_00011],0);
constraint int_lt_reif(s_00001,aux20894,aux20895_BOOL);
constraint int_le_reif(s_00011, s_00001,aux20896_BOOL);
constraint array_bool_and([aux20895_BOOL,aux20896_BOOL],aux20897_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20898,s_00015],0);
constraint int_lt_reif(s_00001,aux20898,aux20899_BOOL);
constraint int_le_reif(s_00015, s_00001,aux20900_BOOL);
constraint array_bool_and([aux20899_BOOL,aux20900_BOOL],aux20901_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20902,s_00019],0);
constraint int_lt_reif(s_00001,aux20902,aux20903_BOOL);
constraint int_le_reif(s_00019, s_00001,aux20904_BOOL);
constraint array_bool_and([aux20903_BOOL,aux20904_BOOL],aux20905_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20906,s_00016],0);
constraint int_lt_reif(s_00001,aux20906,aux20907_BOOL);
constraint int_le_reif(s_00016, s_00001,aux20908_BOOL);
constraint array_bool_and([aux20907_BOOL,aux20908_BOOL],aux20909_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20910,s_00018],0);
constraint int_lt_reif(s_00001,aux20910,aux20911_BOOL);
constraint int_le_reif(s_00018, s_00001,aux20912_BOOL);
constraint array_bool_and([aux20911_BOOL,aux20912_BOOL],aux20913_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux20914,s_00014],0);
constraint int_lt_reif(s_00001,aux20914,aux20915_BOOL);
constraint int_le_reif(s_00014, s_00001,aux20916_BOOL);
constraint array_bool_and([aux20915_BOOL,aux20916_BOOL],aux20917_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20918,s_00001],0);
constraint int_lt_reif(s_00001,aux20918,aux20919_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20920,s_00001],0);
constraint int_lt_reif(s_00004,aux20920,aux20921_BOOL);
constraint int_le_reif(s_00001, s_00004,aux20922_BOOL);
constraint array_bool_and([aux20921_BOOL,aux20922_BOOL],aux20923_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20924,s_00008],0);
constraint int_lt_reif(s_00004,aux20924,aux20925_BOOL);
constraint int_le_reif(s_00008, s_00004,aux20926_BOOL);
constraint array_bool_and([aux20925_BOOL,aux20926_BOOL],aux20927_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20928,s_00005],0);
constraint int_lt_reif(s_00004,aux20928,aux20929_BOOL);
constraint int_le_reif(s_00005, s_00004,aux20930_BOOL);
constraint array_bool_and([aux20929_BOOL,aux20930_BOOL],aux20931_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20932,s_00007],0);
constraint int_lt_reif(s_00004,aux20932,aux20933_BOOL);
constraint int_le_reif(s_00007, s_00004,aux20934_BOOL);
constraint array_bool_and([aux20933_BOOL,aux20934_BOOL],aux20935_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20936,s_00010],0);
constraint int_lt_reif(s_00004,aux20936,aux20937_BOOL);
constraint int_le_reif(s_00010, s_00004,aux20938_BOOL);
constraint array_bool_and([aux20937_BOOL,aux20938_BOOL],aux20939_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20940,s_00006],0);
constraint int_lt_reif(s_00004,aux20940,aux20941_BOOL);
constraint int_le_reif(s_00006, s_00004,aux20942_BOOL);
constraint array_bool_and([aux20941_BOOL,aux20942_BOOL],aux20943_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20944,s_00017],0);
constraint int_lt_reif(s_00004,aux20944,aux20945_BOOL);
constraint int_le_reif(s_00017, s_00004,aux20946_BOOL);
constraint array_bool_and([aux20945_BOOL,aux20946_BOOL],aux20947_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20948,s_00011],0);
constraint int_lt_reif(s_00004,aux20948,aux20949_BOOL);
constraint int_le_reif(s_00011, s_00004,aux20950_BOOL);
constraint array_bool_and([aux20949_BOOL,aux20950_BOOL],aux20951_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20952,s_00015],0);
constraint int_lt_reif(s_00004,aux20952,aux20953_BOOL);
constraint int_le_reif(s_00015, s_00004,aux20954_BOOL);
constraint array_bool_and([aux20953_BOOL,aux20954_BOOL],aux20955_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20956,s_00019],0);
constraint int_lt_reif(s_00004,aux20956,aux20957_BOOL);
constraint int_le_reif(s_00019, s_00004,aux20958_BOOL);
constraint array_bool_and([aux20957_BOOL,aux20958_BOOL],aux20959_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20960,s_00016],0);
constraint int_lt_reif(s_00004,aux20960,aux20961_BOOL);
constraint int_le_reif(s_00016, s_00004,aux20962_BOOL);
constraint array_bool_and([aux20961_BOOL,aux20962_BOOL],aux20963_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20964,s_00018],0);
constraint int_lt_reif(s_00004,aux20964,aux20965_BOOL);
constraint int_le_reif(s_00018, s_00004,aux20966_BOOL);
constraint array_bool_and([aux20965_BOOL,aux20966_BOOL],aux20967_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux20968,s_00014],0);
constraint int_lt_reif(s_00004,aux20968,aux20969_BOOL);
constraint int_le_reif(s_00014, s_00004,aux20970_BOOL);
constraint array_bool_and([aux20969_BOOL,aux20970_BOOL],aux20971_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20972,s_00004],0);
constraint int_lt_reif(s_00004,aux20972,aux20973_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20974,s_00001],0);
constraint int_lt_reif(s_00005,aux20974,aux20975_BOOL);
constraint int_le_reif(s_00001, s_00005,aux20976_BOOL);
constraint array_bool_and([aux20975_BOOL,aux20976_BOOL],aux20977_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20978,s_00008],0);
constraint int_lt_reif(s_00005,aux20978,aux20979_BOOL);
constraint int_le_reif(s_00008, s_00005,aux20980_BOOL);
constraint array_bool_and([aux20979_BOOL,aux20980_BOOL],aux20981_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20982,s_00004],0);
constraint int_lt_reif(s_00005,aux20982,aux20983_BOOL);
constraint int_le_reif(s_00004, s_00005,aux20984_BOOL);
constraint array_bool_and([aux20983_BOOL,aux20984_BOOL],aux20985_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux20986,s_00007],0);
constraint int_lt_reif(s_00005,aux20986,aux20987_BOOL);
constraint int_le_reif(s_00007, s_00005,aux20988_BOOL);
constraint array_bool_and([aux20987_BOOL,aux20988_BOOL],aux20989_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20990,s_00010],0);
constraint int_lt_reif(s_00005,aux20990,aux20991_BOOL);
constraint int_le_reif(s_00010, s_00005,aux20992_BOOL);
constraint array_bool_and([aux20991_BOOL,aux20992_BOOL],aux20993_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux20994,s_00006],0);
constraint int_lt_reif(s_00005,aux20994,aux20995_BOOL);
constraint int_le_reif(s_00006, s_00005,aux20996_BOOL);
constraint array_bool_and([aux20995_BOOL,aux20996_BOOL],aux20997_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux20998,s_00017],0);
constraint int_lt_reif(s_00005,aux20998,aux20999_BOOL);
constraint int_le_reif(s_00017, s_00005,aux21000_BOOL);
constraint array_bool_and([aux20999_BOOL,aux21000_BOOL],aux21001_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21002,s_00011],0);
constraint int_lt_reif(s_00005,aux21002,aux21003_BOOL);
constraint int_le_reif(s_00011, s_00005,aux21004_BOOL);
constraint array_bool_and([aux21003_BOOL,aux21004_BOOL],aux21005_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21006,s_00015],0);
constraint int_lt_reif(s_00005,aux21006,aux21007_BOOL);
constraint int_le_reif(s_00015, s_00005,aux21008_BOOL);
constraint array_bool_and([aux21007_BOOL,aux21008_BOOL],aux21009_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21010,s_00019],0);
constraint int_lt_reif(s_00005,aux21010,aux21011_BOOL);
constraint int_le_reif(s_00019, s_00005,aux21012_BOOL);
constraint array_bool_and([aux21011_BOOL,aux21012_BOOL],aux21013_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21014,s_00016],0);
constraint int_lt_reif(s_00005,aux21014,aux21015_BOOL);
constraint int_le_reif(s_00016, s_00005,aux21016_BOOL);
constraint array_bool_and([aux21015_BOOL,aux21016_BOOL],aux21017_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21018,s_00018],0);
constraint int_lt_reif(s_00005,aux21018,aux21019_BOOL);
constraint int_le_reif(s_00018, s_00005,aux21020_BOOL);
constraint array_bool_and([aux21019_BOOL,aux21020_BOOL],aux21021_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21022,s_00014],0);
constraint int_lt_reif(s_00005,aux21022,aux21023_BOOL);
constraint int_le_reif(s_00014, s_00005,aux21024_BOOL);
constraint array_bool_and([aux21023_BOOL,aux21024_BOOL],aux21025_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21026,s_00005],0);
constraint int_lt_reif(s_00005,aux21026,aux21027_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21028,s_00001],0);
constraint int_lt_reif(s_00006,aux21028,aux21029_BOOL);
constraint int_le_reif(s_00001, s_00006,aux21030_BOOL);
constraint array_bool_and([aux21029_BOOL,aux21030_BOOL],aux21031_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21032,s_00008],0);
constraint int_lt_reif(s_00006,aux21032,aux21033_BOOL);
constraint int_le_reif(s_00008, s_00006,aux21034_BOOL);
constraint array_bool_and([aux21033_BOOL,aux21034_BOOL],aux21035_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21036,s_00004],0);
constraint int_lt_reif(s_00006,aux21036,aux21037_BOOL);
constraint int_le_reif(s_00004, s_00006,aux21038_BOOL);
constraint array_bool_and([aux21037_BOOL,aux21038_BOOL],aux21039_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21040,s_00005],0);
constraint int_lt_reif(s_00006,aux21040,aux21041_BOOL);
constraint int_le_reif(s_00005, s_00006,aux21042_BOOL);
constraint array_bool_and([aux21041_BOOL,aux21042_BOOL],aux21043_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21044,s_00007],0);
constraint int_lt_reif(s_00006,aux21044,aux21045_BOOL);
constraint int_le_reif(s_00007, s_00006,aux21046_BOOL);
constraint array_bool_and([aux21045_BOOL,aux21046_BOOL],aux21047_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21048,s_00010],0);
constraint int_lt_reif(s_00006,aux21048,aux21049_BOOL);
constraint int_le_reif(s_00010, s_00006,aux21050_BOOL);
constraint array_bool_and([aux21049_BOOL,aux21050_BOOL],aux21051_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21052,s_00017],0);
constraint int_lt_reif(s_00006,aux21052,aux21053_BOOL);
constraint int_le_reif(s_00017, s_00006,aux21054_BOOL);
constraint array_bool_and([aux21053_BOOL,aux21054_BOOL],aux21055_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21056,s_00011],0);
constraint int_lt_reif(s_00006,aux21056,aux21057_BOOL);
constraint int_le_reif(s_00011, s_00006,aux21058_BOOL);
constraint array_bool_and([aux21057_BOOL,aux21058_BOOL],aux21059_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21060,s_00015],0);
constraint int_lt_reif(s_00006,aux21060,aux21061_BOOL);
constraint int_le_reif(s_00015, s_00006,aux21062_BOOL);
constraint array_bool_and([aux21061_BOOL,aux21062_BOOL],aux21063_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21064,s_00019],0);
constraint int_lt_reif(s_00006,aux21064,aux21065_BOOL);
constraint int_le_reif(s_00019, s_00006,aux21066_BOOL);
constraint array_bool_and([aux21065_BOOL,aux21066_BOOL],aux21067_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21068,s_00016],0);
constraint int_lt_reif(s_00006,aux21068,aux21069_BOOL);
constraint int_le_reif(s_00016, s_00006,aux21070_BOOL);
constraint array_bool_and([aux21069_BOOL,aux21070_BOOL],aux21071_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21072,s_00018],0);
constraint int_lt_reif(s_00006,aux21072,aux21073_BOOL);
constraint int_le_reif(s_00018, s_00006,aux21074_BOOL);
constraint array_bool_and([aux21073_BOOL,aux21074_BOOL],aux21075_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21076,s_00014],0);
constraint int_lt_reif(s_00006,aux21076,aux21077_BOOL);
constraint int_le_reif(s_00014, s_00006,aux21078_BOOL);
constraint array_bool_and([aux21077_BOOL,aux21078_BOOL],aux21079_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21080,s_00006],0);
constraint int_lt_reif(s_00006,aux21080,aux21081_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21082,s_00001],0);
constraint int_lt_reif(s_00007,aux21082,aux21083_BOOL);
constraint int_le_reif(s_00001, s_00007,aux21084_BOOL);
constraint array_bool_and([aux21083_BOOL,aux21084_BOOL],aux21085_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21086,s_00008],0);
constraint int_lt_reif(s_00007,aux21086,aux21087_BOOL);
constraint int_le_reif(s_00008, s_00007,aux21088_BOOL);
constraint array_bool_and([aux21087_BOOL,aux21088_BOOL],aux21089_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21090,s_00004],0);
constraint int_lt_reif(s_00007,aux21090,aux21091_BOOL);
constraint int_le_reif(s_00004, s_00007,aux21092_BOOL);
constraint array_bool_and([aux21091_BOOL,aux21092_BOOL],aux21093_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21094,s_00005],0);
constraint int_lt_reif(s_00007,aux21094,aux21095_BOOL);
constraint int_le_reif(s_00005, s_00007,aux21096_BOOL);
constraint array_bool_and([aux21095_BOOL,aux21096_BOOL],aux21097_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21098,s_00010],0);
constraint int_lt_reif(s_00007,aux21098,aux21099_BOOL);
constraint int_le_reif(s_00010, s_00007,aux21100_BOOL);
constraint array_bool_and([aux21099_BOOL,aux21100_BOOL],aux21101_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21102,s_00006],0);
constraint int_lt_reif(s_00007,aux21102,aux21103_BOOL);
constraint int_le_reif(s_00006, s_00007,aux21104_BOOL);
constraint array_bool_and([aux21103_BOOL,aux21104_BOOL],aux21105_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21106,s_00017],0);
constraint int_lt_reif(s_00007,aux21106,aux21107_BOOL);
constraint int_le_reif(s_00017, s_00007,aux21108_BOOL);
constraint array_bool_and([aux21107_BOOL,aux21108_BOOL],aux21109_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21110,s_00011],0);
constraint int_lt_reif(s_00007,aux21110,aux21111_BOOL);
constraint int_le_reif(s_00011, s_00007,aux21112_BOOL);
constraint array_bool_and([aux21111_BOOL,aux21112_BOOL],aux21113_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21114,s_00015],0);
constraint int_lt_reif(s_00007,aux21114,aux21115_BOOL);
constraint int_le_reif(s_00015, s_00007,aux21116_BOOL);
constraint array_bool_and([aux21115_BOOL,aux21116_BOOL],aux21117_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21118,s_00019],0);
constraint int_lt_reif(s_00007,aux21118,aux21119_BOOL);
constraint int_le_reif(s_00019, s_00007,aux21120_BOOL);
constraint array_bool_and([aux21119_BOOL,aux21120_BOOL],aux21121_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21122,s_00016],0);
constraint int_lt_reif(s_00007,aux21122,aux21123_BOOL);
constraint int_le_reif(s_00016, s_00007,aux21124_BOOL);
constraint array_bool_and([aux21123_BOOL,aux21124_BOOL],aux21125_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21126,s_00018],0);
constraint int_lt_reif(s_00007,aux21126,aux21127_BOOL);
constraint int_le_reif(s_00018, s_00007,aux21128_BOOL);
constraint array_bool_and([aux21127_BOOL,aux21128_BOOL],aux21129_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21130,s_00014],0);
constraint int_lt_reif(s_00007,aux21130,aux21131_BOOL);
constraint int_le_reif(s_00014, s_00007,aux21132_BOOL);
constraint array_bool_and([aux21131_BOOL,aux21132_BOOL],aux21133_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21134,s_00007],0);
constraint int_lt_reif(s_00007,aux21134,aux21135_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21136,s_00001],0);
constraint int_lt_reif(s_00008,aux21136,aux21137_BOOL);
constraint int_le_reif(s_00001, s_00008,aux21138_BOOL);
constraint array_bool_and([aux21137_BOOL,aux21138_BOOL],aux21139_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21140,s_00004],0);
constraint int_lt_reif(s_00008,aux21140,aux21141_BOOL);
constraint int_le_reif(s_00004, s_00008,aux21142_BOOL);
constraint array_bool_and([aux21141_BOOL,aux21142_BOOL],aux21143_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21144,s_00005],0);
constraint int_lt_reif(s_00008,aux21144,aux21145_BOOL);
constraint int_le_reif(s_00005, s_00008,aux21146_BOOL);
constraint array_bool_and([aux21145_BOOL,aux21146_BOOL],aux21147_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21148,s_00007],0);
constraint int_lt_reif(s_00008,aux21148,aux21149_BOOL);
constraint int_le_reif(s_00007, s_00008,aux21150_BOOL);
constraint array_bool_and([aux21149_BOOL,aux21150_BOOL],aux21151_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21152,s_00010],0);
constraint int_lt_reif(s_00008,aux21152,aux21153_BOOL);
constraint int_le_reif(s_00010, s_00008,aux21154_BOOL);
constraint array_bool_and([aux21153_BOOL,aux21154_BOOL],aux21155_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21156,s_00006],0);
constraint int_lt_reif(s_00008,aux21156,aux21157_BOOL);
constraint int_le_reif(s_00006, s_00008,aux21158_BOOL);
constraint array_bool_and([aux21157_BOOL,aux21158_BOOL],aux21159_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21160,s_00017],0);
constraint int_lt_reif(s_00008,aux21160,aux21161_BOOL);
constraint int_le_reif(s_00017, s_00008,aux21162_BOOL);
constraint array_bool_and([aux21161_BOOL,aux21162_BOOL],aux21163_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21164,s_00011],0);
constraint int_lt_reif(s_00008,aux21164,aux21165_BOOL);
constraint int_le_reif(s_00011, s_00008,aux21166_BOOL);
constraint array_bool_and([aux21165_BOOL,aux21166_BOOL],aux21167_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21168,s_00015],0);
constraint int_lt_reif(s_00008,aux21168,aux21169_BOOL);
constraint int_le_reif(s_00015, s_00008,aux21170_BOOL);
constraint array_bool_and([aux21169_BOOL,aux21170_BOOL],aux21171_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21172,s_00019],0);
constraint int_lt_reif(s_00008,aux21172,aux21173_BOOL);
constraint int_le_reif(s_00019, s_00008,aux21174_BOOL);
constraint array_bool_and([aux21173_BOOL,aux21174_BOOL],aux21175_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21176,s_00016],0);
constraint int_lt_reif(s_00008,aux21176,aux21177_BOOL);
constraint int_le_reif(s_00016, s_00008,aux21178_BOOL);
constraint array_bool_and([aux21177_BOOL,aux21178_BOOL],aux21179_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21180,s_00018],0);
constraint int_lt_reif(s_00008,aux21180,aux21181_BOOL);
constraint int_le_reif(s_00018, s_00008,aux21182_BOOL);
constraint array_bool_and([aux21181_BOOL,aux21182_BOOL],aux21183_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21184,s_00014],0);
constraint int_lt_reif(s_00008,aux21184,aux21185_BOOL);
constraint int_le_reif(s_00014, s_00008,aux21186_BOOL);
constraint array_bool_and([aux21185_BOOL,aux21186_BOOL],aux21187_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21188,s_00008],0);
constraint int_lt_reif(s_00008,aux21188,aux21189_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21190,s_00001],0);
constraint int_lt_reif(s_00010,aux21190,aux21191_BOOL);
constraint int_le_reif(s_00001, s_00010,aux21192_BOOL);
constraint array_bool_and([aux21191_BOOL,aux21192_BOOL],aux21193_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21194,s_00008],0);
constraint int_lt_reif(s_00010,aux21194,aux21195_BOOL);
constraint int_le_reif(s_00008, s_00010,aux21196_BOOL);
constraint array_bool_and([aux21195_BOOL,aux21196_BOOL],aux21197_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21198,s_00004],0);
constraint int_lt_reif(s_00010,aux21198,aux21199_BOOL);
constraint int_le_reif(s_00004, s_00010,aux21200_BOOL);
constraint array_bool_and([aux21199_BOOL,aux21200_BOOL],aux21201_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21202,s_00005],0);
constraint int_lt_reif(s_00010,aux21202,aux21203_BOOL);
constraint int_le_reif(s_00005, s_00010,aux21204_BOOL);
constraint array_bool_and([aux21203_BOOL,aux21204_BOOL],aux21205_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21206,s_00007],0);
constraint int_lt_reif(s_00010,aux21206,aux21207_BOOL);
constraint int_le_reif(s_00007, s_00010,aux21208_BOOL);
constraint array_bool_and([aux21207_BOOL,aux21208_BOOL],aux21209_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21210,s_00006],0);
constraint int_lt_reif(s_00010,aux21210,aux21211_BOOL);
constraint int_le_reif(s_00006, s_00010,aux21212_BOOL);
constraint array_bool_and([aux21211_BOOL,aux21212_BOOL],aux21213_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21214,s_00017],0);
constraint int_lt_reif(s_00010,aux21214,aux21215_BOOL);
constraint int_le_reif(s_00017, s_00010,aux21216_BOOL);
constraint array_bool_and([aux21215_BOOL,aux21216_BOOL],aux21217_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21218,s_00011],0);
constraint int_lt_reif(s_00010,aux21218,aux21219_BOOL);
constraint int_le_reif(s_00011, s_00010,aux21220_BOOL);
constraint array_bool_and([aux21219_BOOL,aux21220_BOOL],aux21221_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21222,s_00015],0);
constraint int_lt_reif(s_00010,aux21222,aux21223_BOOL);
constraint int_le_reif(s_00015, s_00010,aux21224_BOOL);
constraint array_bool_and([aux21223_BOOL,aux21224_BOOL],aux21225_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21226,s_00019],0);
constraint int_lt_reif(s_00010,aux21226,aux21227_BOOL);
constraint int_le_reif(s_00019, s_00010,aux21228_BOOL);
constraint array_bool_and([aux21227_BOOL,aux21228_BOOL],aux21229_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21230,s_00016],0);
constraint int_lt_reif(s_00010,aux21230,aux21231_BOOL);
constraint int_le_reif(s_00016, s_00010,aux21232_BOOL);
constraint array_bool_and([aux21231_BOOL,aux21232_BOOL],aux21233_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21234,s_00018],0);
constraint int_lt_reif(s_00010,aux21234,aux21235_BOOL);
constraint int_le_reif(s_00018, s_00010,aux21236_BOOL);
constraint array_bool_and([aux21235_BOOL,aux21236_BOOL],aux21237_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21238,s_00014],0);
constraint int_lt_reif(s_00010,aux21238,aux21239_BOOL);
constraint int_le_reif(s_00014, s_00010,aux21240_BOOL);
constraint array_bool_and([aux21239_BOOL,aux21240_BOOL],aux21241_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21242,s_00010],0);
constraint int_lt_reif(s_00010,aux21242,aux21243_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21244,s_00001],0);
constraint int_lt_reif(s_00011,aux21244,aux21245_BOOL);
constraint int_le_reif(s_00001, s_00011,aux21246_BOOL);
constraint array_bool_and([aux21245_BOOL,aux21246_BOOL],aux21247_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21248,s_00008],0);
constraint int_lt_reif(s_00011,aux21248,aux21249_BOOL);
constraint int_le_reif(s_00008, s_00011,aux21250_BOOL);
constraint array_bool_and([aux21249_BOOL,aux21250_BOOL],aux21251_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21252,s_00004],0);
constraint int_lt_reif(s_00011,aux21252,aux21253_BOOL);
constraint int_le_reif(s_00004, s_00011,aux21254_BOOL);
constraint array_bool_and([aux21253_BOOL,aux21254_BOOL],aux21255_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21256,s_00005],0);
constraint int_lt_reif(s_00011,aux21256,aux21257_BOOL);
constraint int_le_reif(s_00005, s_00011,aux21258_BOOL);
constraint array_bool_and([aux21257_BOOL,aux21258_BOOL],aux21259_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21260,s_00007],0);
constraint int_lt_reif(s_00011,aux21260,aux21261_BOOL);
constraint int_le_reif(s_00007, s_00011,aux21262_BOOL);
constraint array_bool_and([aux21261_BOOL,aux21262_BOOL],aux21263_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21264,s_00010],0);
constraint int_lt_reif(s_00011,aux21264,aux21265_BOOL);
constraint int_le_reif(s_00010, s_00011,aux21266_BOOL);
constraint array_bool_and([aux21265_BOOL,aux21266_BOOL],aux21267_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21268,s_00006],0);
constraint int_lt_reif(s_00011,aux21268,aux21269_BOOL);
constraint int_le_reif(s_00006, s_00011,aux21270_BOOL);
constraint array_bool_and([aux21269_BOOL,aux21270_BOOL],aux21271_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21272,s_00017],0);
constraint int_lt_reif(s_00011,aux21272,aux21273_BOOL);
constraint int_le_reif(s_00017, s_00011,aux21274_BOOL);
constraint array_bool_and([aux21273_BOOL,aux21274_BOOL],aux21275_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21276,s_00015],0);
constraint int_lt_reif(s_00011,aux21276,aux21277_BOOL);
constraint int_le_reif(s_00015, s_00011,aux21278_BOOL);
constraint array_bool_and([aux21277_BOOL,aux21278_BOOL],aux21279_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21280,s_00019],0);
constraint int_lt_reif(s_00011,aux21280,aux21281_BOOL);
constraint int_le_reif(s_00019, s_00011,aux21282_BOOL);
constraint array_bool_and([aux21281_BOOL,aux21282_BOOL],aux21283_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21284,s_00016],0);
constraint int_lt_reif(s_00011,aux21284,aux21285_BOOL);
constraint int_le_reif(s_00016, s_00011,aux21286_BOOL);
constraint array_bool_and([aux21285_BOOL,aux21286_BOOL],aux21287_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21288,s_00018],0);
constraint int_lt_reif(s_00011,aux21288,aux21289_BOOL);
constraint int_le_reif(s_00018, s_00011,aux21290_BOOL);
constraint array_bool_and([aux21289_BOOL,aux21290_BOOL],aux21291_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21292,s_00014],0);
constraint int_lt_reif(s_00011,aux21292,aux21293_BOOL);
constraint int_le_reif(s_00014, s_00011,aux21294_BOOL);
constraint array_bool_and([aux21293_BOOL,aux21294_BOOL],aux21295_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21296,s_00011],0);
constraint int_lt_reif(s_00011,aux21296,aux21297_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21298,s_00001],0);
constraint int_lt_reif(s_00014,aux21298,aux21299_BOOL);
constraint int_le_reif(s_00001, s_00014,aux21300_BOOL);
constraint array_bool_and([aux21299_BOOL,aux21300_BOOL],aux21301_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21302,s_00008],0);
constraint int_lt_reif(s_00014,aux21302,aux21303_BOOL);
constraint int_le_reif(s_00008, s_00014,aux21304_BOOL);
constraint array_bool_and([aux21303_BOOL,aux21304_BOOL],aux21305_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21306,s_00004],0);
constraint int_lt_reif(s_00014,aux21306,aux21307_BOOL);
constraint int_le_reif(s_00004, s_00014,aux21308_BOOL);
constraint array_bool_and([aux21307_BOOL,aux21308_BOOL],aux21309_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21310,s_00005],0);
constraint int_lt_reif(s_00014,aux21310,aux21311_BOOL);
constraint int_le_reif(s_00005, s_00014,aux21312_BOOL);
constraint array_bool_and([aux21311_BOOL,aux21312_BOOL],aux21313_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21314,s_00007],0);
constraint int_lt_reif(s_00014,aux21314,aux21315_BOOL);
constraint int_le_reif(s_00007, s_00014,aux21316_BOOL);
constraint array_bool_and([aux21315_BOOL,aux21316_BOOL],aux21317_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21318,s_00010],0);
constraint int_lt_reif(s_00014,aux21318,aux21319_BOOL);
constraint int_le_reif(s_00010, s_00014,aux21320_BOOL);
constraint array_bool_and([aux21319_BOOL,aux21320_BOOL],aux21321_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21322,s_00006],0);
constraint int_lt_reif(s_00014,aux21322,aux21323_BOOL);
constraint int_le_reif(s_00006, s_00014,aux21324_BOOL);
constraint array_bool_and([aux21323_BOOL,aux21324_BOOL],aux21325_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21326,s_00017],0);
constraint int_lt_reif(s_00014,aux21326,aux21327_BOOL);
constraint int_le_reif(s_00017, s_00014,aux21328_BOOL);
constraint array_bool_and([aux21327_BOOL,aux21328_BOOL],aux21329_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21330,s_00011],0);
constraint int_lt_reif(s_00014,aux21330,aux21331_BOOL);
constraint int_le_reif(s_00011, s_00014,aux21332_BOOL);
constraint array_bool_and([aux21331_BOOL,aux21332_BOOL],aux21333_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21334,s_00015],0);
constraint int_lt_reif(s_00014,aux21334,aux21335_BOOL);
constraint int_le_reif(s_00015, s_00014,aux21336_BOOL);
constraint array_bool_and([aux21335_BOOL,aux21336_BOOL],aux21337_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21338,s_00019],0);
constraint int_lt_reif(s_00014,aux21338,aux21339_BOOL);
constraint int_le_reif(s_00019, s_00014,aux21340_BOOL);
constraint array_bool_and([aux21339_BOOL,aux21340_BOOL],aux21341_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21342,s_00016],0);
constraint int_lt_reif(s_00014,aux21342,aux21343_BOOL);
constraint int_le_reif(s_00016, s_00014,aux21344_BOOL);
constraint array_bool_and([aux21343_BOOL,aux21344_BOOL],aux21345_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21346,s_00018],0);
constraint int_lt_reif(s_00014,aux21346,aux21347_BOOL);
constraint int_le_reif(s_00018, s_00014,aux21348_BOOL);
constraint array_bool_and([aux21347_BOOL,aux21348_BOOL],aux21349_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21350,s_00014],0);
constraint int_lt_reif(s_00014,aux21350,aux21351_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21352,s_00001],0);
constraint int_lt_reif(s_00015,aux21352,aux21353_BOOL);
constraint int_le_reif(s_00001, s_00015,aux21354_BOOL);
constraint array_bool_and([aux21353_BOOL,aux21354_BOOL],aux21355_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21356,s_00008],0);
constraint int_lt_reif(s_00015,aux21356,aux21357_BOOL);
constraint int_le_reif(s_00008, s_00015,aux21358_BOOL);
constraint array_bool_and([aux21357_BOOL,aux21358_BOOL],aux21359_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21360,s_00004],0);
constraint int_lt_reif(s_00015,aux21360,aux21361_BOOL);
constraint int_le_reif(s_00004, s_00015,aux21362_BOOL);
constraint array_bool_and([aux21361_BOOL,aux21362_BOOL],aux21363_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21364,s_00005],0);
constraint int_lt_reif(s_00015,aux21364,aux21365_BOOL);
constraint int_le_reif(s_00005, s_00015,aux21366_BOOL);
constraint array_bool_and([aux21365_BOOL,aux21366_BOOL],aux21367_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21368,s_00007],0);
constraint int_lt_reif(s_00015,aux21368,aux21369_BOOL);
constraint int_le_reif(s_00007, s_00015,aux21370_BOOL);
constraint array_bool_and([aux21369_BOOL,aux21370_BOOL],aux21371_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21372,s_00010],0);
constraint int_lt_reif(s_00015,aux21372,aux21373_BOOL);
constraint int_le_reif(s_00010, s_00015,aux21374_BOOL);
constraint array_bool_and([aux21373_BOOL,aux21374_BOOL],aux21375_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21376,s_00006],0);
constraint int_lt_reif(s_00015,aux21376,aux21377_BOOL);
constraint int_le_reif(s_00006, s_00015,aux21378_BOOL);
constraint array_bool_and([aux21377_BOOL,aux21378_BOOL],aux21379_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21380,s_00017],0);
constraint int_lt_reif(s_00015,aux21380,aux21381_BOOL);
constraint int_le_reif(s_00017, s_00015,aux21382_BOOL);
constraint array_bool_and([aux21381_BOOL,aux21382_BOOL],aux21383_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21384,s_00011],0);
constraint int_lt_reif(s_00015,aux21384,aux21385_BOOL);
constraint int_le_reif(s_00011, s_00015,aux21386_BOOL);
constraint array_bool_and([aux21385_BOOL,aux21386_BOOL],aux21387_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21388,s_00019],0);
constraint int_lt_reif(s_00015,aux21388,aux21389_BOOL);
constraint int_le_reif(s_00019, s_00015,aux21390_BOOL);
constraint array_bool_and([aux21389_BOOL,aux21390_BOOL],aux21391_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21392,s_00016],0);
constraint int_lt_reif(s_00015,aux21392,aux21393_BOOL);
constraint int_le_reif(s_00016, s_00015,aux21394_BOOL);
constraint array_bool_and([aux21393_BOOL,aux21394_BOOL],aux21395_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21396,s_00018],0);
constraint int_lt_reif(s_00015,aux21396,aux21397_BOOL);
constraint int_le_reif(s_00018, s_00015,aux21398_BOOL);
constraint array_bool_and([aux21397_BOOL,aux21398_BOOL],aux21399_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21400,s_00014],0);
constraint int_lt_reif(s_00015,aux21400,aux21401_BOOL);
constraint int_le_reif(s_00014, s_00015,aux21402_BOOL);
constraint array_bool_and([aux21401_BOOL,aux21402_BOOL],aux21403_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21404,s_00015],0);
constraint int_lt_reif(s_00015,aux21404,aux21405_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21406,s_00001],0);
constraint int_lt_reif(s_00016,aux21406,aux21407_BOOL);
constraint int_le_reif(s_00001, s_00016,aux21408_BOOL);
constraint array_bool_and([aux21407_BOOL,aux21408_BOOL],aux21409_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21410,s_00008],0);
constraint int_lt_reif(s_00016,aux21410,aux21411_BOOL);
constraint int_le_reif(s_00008, s_00016,aux21412_BOOL);
constraint array_bool_and([aux21411_BOOL,aux21412_BOOL],aux21413_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21414,s_00004],0);
constraint int_lt_reif(s_00016,aux21414,aux21415_BOOL);
constraint int_le_reif(s_00004, s_00016,aux21416_BOOL);
constraint array_bool_and([aux21415_BOOL,aux21416_BOOL],aux21417_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21418,s_00005],0);
constraint int_lt_reif(s_00016,aux21418,aux21419_BOOL);
constraint int_le_reif(s_00005, s_00016,aux21420_BOOL);
constraint array_bool_and([aux21419_BOOL,aux21420_BOOL],aux21421_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21422,s_00007],0);
constraint int_lt_reif(s_00016,aux21422,aux21423_BOOL);
constraint int_le_reif(s_00007, s_00016,aux21424_BOOL);
constraint array_bool_and([aux21423_BOOL,aux21424_BOOL],aux21425_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21426,s_00010],0);
constraint int_lt_reif(s_00016,aux21426,aux21427_BOOL);
constraint int_le_reif(s_00010, s_00016,aux21428_BOOL);
constraint array_bool_and([aux21427_BOOL,aux21428_BOOL],aux21429_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21430,s_00006],0);
constraint int_lt_reif(s_00016,aux21430,aux21431_BOOL);
constraint int_le_reif(s_00006, s_00016,aux21432_BOOL);
constraint array_bool_and([aux21431_BOOL,aux21432_BOOL],aux21433_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21434,s_00017],0);
constraint int_lt_reif(s_00016,aux21434,aux21435_BOOL);
constraint int_le_reif(s_00017, s_00016,aux21436_BOOL);
constraint array_bool_and([aux21435_BOOL,aux21436_BOOL],aux21437_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21438,s_00011],0);
constraint int_lt_reif(s_00016,aux21438,aux21439_BOOL);
constraint int_le_reif(s_00011, s_00016,aux21440_BOOL);
constraint array_bool_and([aux21439_BOOL,aux21440_BOOL],aux21441_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21442,s_00015],0);
constraint int_lt_reif(s_00016,aux21442,aux21443_BOOL);
constraint int_le_reif(s_00015, s_00016,aux21444_BOOL);
constraint array_bool_and([aux21443_BOOL,aux21444_BOOL],aux21445_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21446,s_00019],0);
constraint int_lt_reif(s_00016,aux21446,aux21447_BOOL);
constraint int_le_reif(s_00019, s_00016,aux21448_BOOL);
constraint array_bool_and([aux21447_BOOL,aux21448_BOOL],aux21449_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21450,s_00018],0);
constraint int_lt_reif(s_00016,aux21450,aux21451_BOOL);
constraint int_le_reif(s_00018, s_00016,aux21452_BOOL);
constraint array_bool_and([aux21451_BOOL,aux21452_BOOL],aux21453_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21454,s_00014],0);
constraint int_lt_reif(s_00016,aux21454,aux21455_BOOL);
constraint int_le_reif(s_00014, s_00016,aux21456_BOOL);
constraint array_bool_and([aux21455_BOOL,aux21456_BOOL],aux21457_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21458,s_00016],0);
constraint int_lt_reif(s_00016,aux21458,aux21459_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21460,s_00001],0);
constraint int_lt_reif(s_00017,aux21460,aux21461_BOOL);
constraint int_le_reif(s_00001, s_00017,aux21462_BOOL);
constraint array_bool_and([aux21461_BOOL,aux21462_BOOL],aux21463_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21464,s_00008],0);
constraint int_lt_reif(s_00017,aux21464,aux21465_BOOL);
constraint int_le_reif(s_00008, s_00017,aux21466_BOOL);
constraint array_bool_and([aux21465_BOOL,aux21466_BOOL],aux21467_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21468,s_00004],0);
constraint int_lt_reif(s_00017,aux21468,aux21469_BOOL);
constraint int_le_reif(s_00004, s_00017,aux21470_BOOL);
constraint array_bool_and([aux21469_BOOL,aux21470_BOOL],aux21471_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21472,s_00005],0);
constraint int_lt_reif(s_00017,aux21472,aux21473_BOOL);
constraint int_le_reif(s_00005, s_00017,aux21474_BOOL);
constraint array_bool_and([aux21473_BOOL,aux21474_BOOL],aux21475_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21476,s_00007],0);
constraint int_lt_reif(s_00017,aux21476,aux21477_BOOL);
constraint int_le_reif(s_00007, s_00017,aux21478_BOOL);
constraint array_bool_and([aux21477_BOOL,aux21478_BOOL],aux21479_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21480,s_00010],0);
constraint int_lt_reif(s_00017,aux21480,aux21481_BOOL);
constraint int_le_reif(s_00010, s_00017,aux21482_BOOL);
constraint array_bool_and([aux21481_BOOL,aux21482_BOOL],aux21483_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21484,s_00006],0);
constraint int_lt_reif(s_00017,aux21484,aux21485_BOOL);
constraint int_le_reif(s_00006, s_00017,aux21486_BOOL);
constraint array_bool_and([aux21485_BOOL,aux21486_BOOL],aux21487_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21488,s_00011],0);
constraint int_lt_reif(s_00017,aux21488,aux21489_BOOL);
constraint int_le_reif(s_00011, s_00017,aux21490_BOOL);
constraint array_bool_and([aux21489_BOOL,aux21490_BOOL],aux21491_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21492,s_00015],0);
constraint int_lt_reif(s_00017,aux21492,aux21493_BOOL);
constraint int_le_reif(s_00015, s_00017,aux21494_BOOL);
constraint array_bool_and([aux21493_BOOL,aux21494_BOOL],aux21495_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21496,s_00019],0);
constraint int_lt_reif(s_00017,aux21496,aux21497_BOOL);
constraint int_le_reif(s_00019, s_00017,aux21498_BOOL);
constraint array_bool_and([aux21497_BOOL,aux21498_BOOL],aux21499_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21500,s_00016],0);
constraint int_lt_reif(s_00017,aux21500,aux21501_BOOL);
constraint int_le_reif(s_00016, s_00017,aux21502_BOOL);
constraint array_bool_and([aux21501_BOOL,aux21502_BOOL],aux21503_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21504,s_00018],0);
constraint int_lt_reif(s_00017,aux21504,aux21505_BOOL);
constraint int_le_reif(s_00018, s_00017,aux21506_BOOL);
constraint array_bool_and([aux21505_BOOL,aux21506_BOOL],aux21507_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21508,s_00014],0);
constraint int_lt_reif(s_00017,aux21508,aux21509_BOOL);
constraint int_le_reif(s_00014, s_00017,aux21510_BOOL);
constraint array_bool_and([aux21509_BOOL,aux21510_BOOL],aux21511_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21512,s_00017],0);
constraint int_lt_reif(s_00017,aux21512,aux21513_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21514,s_00001],0);
constraint int_lt_reif(s_00018,aux21514,aux21515_BOOL);
constraint int_le_reif(s_00001, s_00018,aux21516_BOOL);
constraint array_bool_and([aux21515_BOOL,aux21516_BOOL],aux21517_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21518,s_00008],0);
constraint int_lt_reif(s_00018,aux21518,aux21519_BOOL);
constraint int_le_reif(s_00008, s_00018,aux21520_BOOL);
constraint array_bool_and([aux21519_BOOL,aux21520_BOOL],aux21521_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21522,s_00004],0);
constraint int_lt_reif(s_00018,aux21522,aux21523_BOOL);
constraint int_le_reif(s_00004, s_00018,aux21524_BOOL);
constraint array_bool_and([aux21523_BOOL,aux21524_BOOL],aux21525_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21526,s_00005],0);
constraint int_lt_reif(s_00018,aux21526,aux21527_BOOL);
constraint int_le_reif(s_00005, s_00018,aux21528_BOOL);
constraint array_bool_and([aux21527_BOOL,aux21528_BOOL],aux21529_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21530,s_00007],0);
constraint int_lt_reif(s_00018,aux21530,aux21531_BOOL);
constraint int_le_reif(s_00007, s_00018,aux21532_BOOL);
constraint array_bool_and([aux21531_BOOL,aux21532_BOOL],aux21533_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21534,s_00010],0);
constraint int_lt_reif(s_00018,aux21534,aux21535_BOOL);
constraint int_le_reif(s_00010, s_00018,aux21536_BOOL);
constraint array_bool_and([aux21535_BOOL,aux21536_BOOL],aux21537_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21538,s_00006],0);
constraint int_lt_reif(s_00018,aux21538,aux21539_BOOL);
constraint int_le_reif(s_00006, s_00018,aux21540_BOOL);
constraint array_bool_and([aux21539_BOOL,aux21540_BOOL],aux21541_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21542,s_00017],0);
constraint int_lt_reif(s_00018,aux21542,aux21543_BOOL);
constraint int_le_reif(s_00017, s_00018,aux21544_BOOL);
constraint array_bool_and([aux21543_BOOL,aux21544_BOOL],aux21545_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21546,s_00011],0);
constraint int_lt_reif(s_00018,aux21546,aux21547_BOOL);
constraint int_le_reif(s_00011, s_00018,aux21548_BOOL);
constraint array_bool_and([aux21547_BOOL,aux21548_BOOL],aux21549_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21550,s_00015],0);
constraint int_lt_reif(s_00018,aux21550,aux21551_BOOL);
constraint int_le_reif(s_00015, s_00018,aux21552_BOOL);
constraint array_bool_and([aux21551_BOOL,aux21552_BOOL],aux21553_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21554,s_00019],0);
constraint int_lt_reif(s_00018,aux21554,aux21555_BOOL);
constraint int_le_reif(s_00019, s_00018,aux21556_BOOL);
constraint array_bool_and([aux21555_BOOL,aux21556_BOOL],aux21557_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21558,s_00016],0);
constraint int_lt_reif(s_00018,aux21558,aux21559_BOOL);
constraint int_le_reif(s_00016, s_00018,aux21560_BOOL);
constraint array_bool_and([aux21559_BOOL,aux21560_BOOL],aux21561_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21562,s_00014],0);
constraint int_lt_reif(s_00018,aux21562,aux21563_BOOL);
constraint int_le_reif(s_00014, s_00018,aux21564_BOOL);
constraint array_bool_and([aux21563_BOOL,aux21564_BOOL],aux21565_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21566,s_00018],0);
constraint int_lt_reif(s_00018,aux21566,aux21567_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21568,s_00001],0);
constraint int_lt_reif(s_00019,aux21568,aux21569_BOOL);
constraint int_le_reif(s_00001, s_00019,aux21570_BOOL);
constraint array_bool_and([aux21569_BOOL,aux21570_BOOL],aux21571_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21572,s_00008],0);
constraint int_lt_reif(s_00019,aux21572,aux21573_BOOL);
constraint int_le_reif(s_00008, s_00019,aux21574_BOOL);
constraint array_bool_and([aux21573_BOOL,aux21574_BOOL],aux21575_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21576,s_00004],0);
constraint int_lt_reif(s_00019,aux21576,aux21577_BOOL);
constraint int_le_reif(s_00004, s_00019,aux21578_BOOL);
constraint array_bool_and([aux21577_BOOL,aux21578_BOOL],aux21579_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21580,s_00005],0);
constraint int_lt_reif(s_00019,aux21580,aux21581_BOOL);
constraint int_le_reif(s_00005, s_00019,aux21582_BOOL);
constraint array_bool_and([aux21581_BOOL,aux21582_BOOL],aux21583_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21584,s_00007],0);
constraint int_lt_reif(s_00019,aux21584,aux21585_BOOL);
constraint int_le_reif(s_00007, s_00019,aux21586_BOOL);
constraint array_bool_and([aux21585_BOOL,aux21586_BOOL],aux21587_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21588,s_00010],0);
constraint int_lt_reif(s_00019,aux21588,aux21589_BOOL);
constraint int_le_reif(s_00010, s_00019,aux21590_BOOL);
constraint array_bool_and([aux21589_BOOL,aux21590_BOOL],aux21591_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21592,s_00006],0);
constraint int_lt_reif(s_00019,aux21592,aux21593_BOOL);
constraint int_le_reif(s_00006, s_00019,aux21594_BOOL);
constraint array_bool_and([aux21593_BOOL,aux21594_BOOL],aux21595_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21596,s_00017],0);
constraint int_lt_reif(s_00019,aux21596,aux21597_BOOL);
constraint int_le_reif(s_00017, s_00019,aux21598_BOOL);
constraint array_bool_and([aux21597_BOOL,aux21598_BOOL],aux21599_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21600,s_00011],0);
constraint int_lt_reif(s_00019,aux21600,aux21601_BOOL);
constraint int_le_reif(s_00011, s_00019,aux21602_BOOL);
constraint array_bool_and([aux21601_BOOL,aux21602_BOOL],aux21603_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21604,s_00015],0);
constraint int_lt_reif(s_00019,aux21604,aux21605_BOOL);
constraint int_le_reif(s_00015, s_00019,aux21606_BOOL);
constraint array_bool_and([aux21605_BOOL,aux21606_BOOL],aux21607_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21608,s_00016],0);
constraint int_lt_reif(s_00019,aux21608,aux21609_BOOL);
constraint int_le_reif(s_00016, s_00019,aux21610_BOOL);
constraint array_bool_and([aux21609_BOOL,aux21610_BOOL],aux21611_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21612,s_00018],0);
constraint int_lt_reif(s_00019,aux21612,aux21613_BOOL);
constraint int_le_reif(s_00018, s_00019,aux21614_BOOL);
constraint array_bool_and([aux21613_BOOL,aux21614_BOOL],aux21615_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21616,s_00014],0);
constraint int_lt_reif(s_00019,aux21616,aux21617_BOOL);
constraint int_le_reif(s_00014, s_00019,aux21618_BOOL);
constraint array_bool_and([aux21617_BOOL,aux21618_BOOL],aux21619_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21620,s_00019],0);
constraint int_lt_reif(s_00019,aux21620,aux21621_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21622,s_00007],0);
constraint int_lt_reif(s_00001,aux21622,aux21623_BOOL);
constraint int_le_reif(s_00007, s_00001,aux21624_BOOL);
constraint array_bool_and([aux21623_BOOL,aux21624_BOOL],aux21625_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21626,s_00009],0);
constraint int_lt_reif(s_00001,aux21626,aux21627_BOOL);
constraint int_le_reif(s_00009, s_00001,aux21628_BOOL);
constraint array_bool_and([aux21627_BOOL,aux21628_BOOL],aux21629_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21630,s_00003],0);
constraint int_lt_reif(s_00001,aux21630,aux21631_BOOL);
constraint int_le_reif(s_00003, s_00001,aux21632_BOOL);
constraint array_bool_and([aux21631_BOOL,aux21632_BOOL],aux21633_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21634,s_00013],0);
constraint int_lt_reif(s_00001,aux21634,aux21635_BOOL);
constraint int_le_reif(s_00013, s_00001,aux21636_BOOL);
constraint array_bool_and([aux21635_BOOL,aux21636_BOOL],aux21637_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21638,s_00006],0);
constraint int_lt_reif(s_00001,aux21638,aux21639_BOOL);
constraint int_le_reif(s_00006, s_00001,aux21640_BOOL);
constraint array_bool_and([aux21639_BOOL,aux21640_BOOL],aux21641_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21642,s_00017],0);
constraint int_lt_reif(s_00001,aux21642,aux21643_BOOL);
constraint int_le_reif(s_00017, s_00001,aux21644_BOOL);
constraint array_bool_and([aux21643_BOOL,aux21644_BOOL],aux21645_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21646,s_00012],0);
constraint int_lt_reif(s_00001,aux21646,aux21647_BOOL);
constraint int_le_reif(s_00012, s_00001,aux21648_BOOL);
constraint array_bool_and([aux21647_BOOL,aux21648_BOOL],aux21649_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21650,s_00019],0);
constraint int_lt_reif(s_00001,aux21650,aux21651_BOOL);
constraint int_le_reif(s_00019, s_00001,aux21652_BOOL);
constraint array_bool_and([aux21651_BOOL,aux21652_BOOL],aux21653_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21654,s_00014],0);
constraint int_lt_reif(s_00001,aux21654,aux21655_BOOL);
constraint int_le_reif(s_00014, s_00001,aux21656_BOOL);
constraint array_bool_and([aux21655_BOOL,aux21656_BOOL],aux21657_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21658,s_00020],0);
constraint int_lt_reif(s_00001,aux21658,aux21659_BOOL);
constraint int_le_reif(s_00020, s_00001,aux21660_BOOL);
constraint array_bool_and([aux21659_BOOL,aux21660_BOOL],aux21661_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21662,s_00001],0);
constraint int_lt_reif(s_00001,aux21662,aux21663_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21664,s_00001],0);
constraint int_lt_reif(s_00003,aux21664,aux21665_BOOL);
constraint int_le_reif(s_00001, s_00003,aux21666_BOOL);
constraint array_bool_and([aux21665_BOOL,aux21666_BOOL],aux21667_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21668,s_00007],0);
constraint int_lt_reif(s_00003,aux21668,aux21669_BOOL);
constraint int_le_reif(s_00007, s_00003,aux21670_BOOL);
constraint array_bool_and([aux21669_BOOL,aux21670_BOOL],aux21671_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21672,s_00009],0);
constraint int_lt_reif(s_00003,aux21672,aux21673_BOOL);
constraint int_le_reif(s_00009, s_00003,aux21674_BOOL);
constraint array_bool_and([aux21673_BOOL,aux21674_BOOL],aux21675_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21676,s_00013],0);
constraint int_lt_reif(s_00003,aux21676,aux21677_BOOL);
constraint int_le_reif(s_00013, s_00003,aux21678_BOOL);
constraint array_bool_and([aux21677_BOOL,aux21678_BOOL],aux21679_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21680,s_00006],0);
constraint int_lt_reif(s_00003,aux21680,aux21681_BOOL);
constraint int_le_reif(s_00006, s_00003,aux21682_BOOL);
constraint array_bool_and([aux21681_BOOL,aux21682_BOOL],aux21683_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21684,s_00017],0);
constraint int_lt_reif(s_00003,aux21684,aux21685_BOOL);
constraint int_le_reif(s_00017, s_00003,aux21686_BOOL);
constraint array_bool_and([aux21685_BOOL,aux21686_BOOL],aux21687_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21688,s_00012],0);
constraint int_lt_reif(s_00003,aux21688,aux21689_BOOL);
constraint int_le_reif(s_00012, s_00003,aux21690_BOOL);
constraint array_bool_and([aux21689_BOOL,aux21690_BOOL],aux21691_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21692,s_00019],0);
constraint int_lt_reif(s_00003,aux21692,aux21693_BOOL);
constraint int_le_reif(s_00019, s_00003,aux21694_BOOL);
constraint array_bool_and([aux21693_BOOL,aux21694_BOOL],aux21695_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21696,s_00014],0);
constraint int_lt_reif(s_00003,aux21696,aux21697_BOOL);
constraint int_le_reif(s_00014, s_00003,aux21698_BOOL);
constraint array_bool_and([aux21697_BOOL,aux21698_BOOL],aux21699_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21700,s_00020],0);
constraint int_lt_reif(s_00003,aux21700,aux21701_BOOL);
constraint int_le_reif(s_00020, s_00003,aux21702_BOOL);
constraint array_bool_and([aux21701_BOOL,aux21702_BOOL],aux21703_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21704,s_00003],0);
constraint int_lt_reif(s_00003,aux21704,aux21705_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21706,s_00001],0);
constraint int_lt_reif(s_00006,aux21706,aux21707_BOOL);
constraint int_le_reif(s_00001, s_00006,aux21708_BOOL);
constraint array_bool_and([aux21707_BOOL,aux21708_BOOL],aux21709_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21710,s_00007],0);
constraint int_lt_reif(s_00006,aux21710,aux21711_BOOL);
constraint int_le_reif(s_00007, s_00006,aux21712_BOOL);
constraint array_bool_and([aux21711_BOOL,aux21712_BOOL],aux21713_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21714,s_00009],0);
constraint int_lt_reif(s_00006,aux21714,aux21715_BOOL);
constraint int_le_reif(s_00009, s_00006,aux21716_BOOL);
constraint array_bool_and([aux21715_BOOL,aux21716_BOOL],aux21717_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21718,s_00003],0);
constraint int_lt_reif(s_00006,aux21718,aux21719_BOOL);
constraint int_le_reif(s_00003, s_00006,aux21720_BOOL);
constraint array_bool_and([aux21719_BOOL,aux21720_BOOL],aux21721_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21722,s_00013],0);
constraint int_lt_reif(s_00006,aux21722,aux21723_BOOL);
constraint int_le_reif(s_00013, s_00006,aux21724_BOOL);
constraint array_bool_and([aux21723_BOOL,aux21724_BOOL],aux21725_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21726,s_00017],0);
constraint int_lt_reif(s_00006,aux21726,aux21727_BOOL);
constraint int_le_reif(s_00017, s_00006,aux21728_BOOL);
constraint array_bool_and([aux21727_BOOL,aux21728_BOOL],aux21729_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21730,s_00012],0);
constraint int_lt_reif(s_00006,aux21730,aux21731_BOOL);
constraint int_le_reif(s_00012, s_00006,aux21732_BOOL);
constraint array_bool_and([aux21731_BOOL,aux21732_BOOL],aux21733_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21734,s_00019],0);
constraint int_lt_reif(s_00006,aux21734,aux21735_BOOL);
constraint int_le_reif(s_00019, s_00006,aux21736_BOOL);
constraint array_bool_and([aux21735_BOOL,aux21736_BOOL],aux21737_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21738,s_00014],0);
constraint int_lt_reif(s_00006,aux21738,aux21739_BOOL);
constraint int_le_reif(s_00014, s_00006,aux21740_BOOL);
constraint array_bool_and([aux21739_BOOL,aux21740_BOOL],aux21741_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21742,s_00020],0);
constraint int_lt_reif(s_00006,aux21742,aux21743_BOOL);
constraint int_le_reif(s_00020, s_00006,aux21744_BOOL);
constraint array_bool_and([aux21743_BOOL,aux21744_BOOL],aux21745_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21746,s_00006],0);
constraint int_lt_reif(s_00006,aux21746,aux21747_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21748,s_00001],0);
constraint int_lt_reif(s_00007,aux21748,aux21749_BOOL);
constraint int_le_reif(s_00001, s_00007,aux21750_BOOL);
constraint array_bool_and([aux21749_BOOL,aux21750_BOOL],aux21751_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21752,s_00009],0);
constraint int_lt_reif(s_00007,aux21752,aux21753_BOOL);
constraint int_le_reif(s_00009, s_00007,aux21754_BOOL);
constraint array_bool_and([aux21753_BOOL,aux21754_BOOL],aux21755_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21756,s_00003],0);
constraint int_lt_reif(s_00007,aux21756,aux21757_BOOL);
constraint int_le_reif(s_00003, s_00007,aux21758_BOOL);
constraint array_bool_and([aux21757_BOOL,aux21758_BOOL],aux21759_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21760,s_00013],0);
constraint int_lt_reif(s_00007,aux21760,aux21761_BOOL);
constraint int_le_reif(s_00013, s_00007,aux21762_BOOL);
constraint array_bool_and([aux21761_BOOL,aux21762_BOOL],aux21763_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21764,s_00006],0);
constraint int_lt_reif(s_00007,aux21764,aux21765_BOOL);
constraint int_le_reif(s_00006, s_00007,aux21766_BOOL);
constraint array_bool_and([aux21765_BOOL,aux21766_BOOL],aux21767_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21768,s_00017],0);
constraint int_lt_reif(s_00007,aux21768,aux21769_BOOL);
constraint int_le_reif(s_00017, s_00007,aux21770_BOOL);
constraint array_bool_and([aux21769_BOOL,aux21770_BOOL],aux21771_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21772,s_00012],0);
constraint int_lt_reif(s_00007,aux21772,aux21773_BOOL);
constraint int_le_reif(s_00012, s_00007,aux21774_BOOL);
constraint array_bool_and([aux21773_BOOL,aux21774_BOOL],aux21775_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21776,s_00019],0);
constraint int_lt_reif(s_00007,aux21776,aux21777_BOOL);
constraint int_le_reif(s_00019, s_00007,aux21778_BOOL);
constraint array_bool_and([aux21777_BOOL,aux21778_BOOL],aux21779_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21780,s_00014],0);
constraint int_lt_reif(s_00007,aux21780,aux21781_BOOL);
constraint int_le_reif(s_00014, s_00007,aux21782_BOOL);
constraint array_bool_and([aux21781_BOOL,aux21782_BOOL],aux21783_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21784,s_00020],0);
constraint int_lt_reif(s_00007,aux21784,aux21785_BOOL);
constraint int_le_reif(s_00020, s_00007,aux21786_BOOL);
constraint array_bool_and([aux21785_BOOL,aux21786_BOOL],aux21787_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21788,s_00007],0);
constraint int_lt_reif(s_00007,aux21788,aux21789_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21790,s_00001],0);
constraint int_lt_reif(s_00009,aux21790,aux21791_BOOL);
constraint int_le_reif(s_00001, s_00009,aux21792_BOOL);
constraint array_bool_and([aux21791_BOOL,aux21792_BOOL],aux21793_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21794,s_00007],0);
constraint int_lt_reif(s_00009,aux21794,aux21795_BOOL);
constraint int_le_reif(s_00007, s_00009,aux21796_BOOL);
constraint array_bool_and([aux21795_BOOL,aux21796_BOOL],aux21797_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21798,s_00003],0);
constraint int_lt_reif(s_00009,aux21798,aux21799_BOOL);
constraint int_le_reif(s_00003, s_00009,aux21800_BOOL);
constraint array_bool_and([aux21799_BOOL,aux21800_BOOL],aux21801_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21802,s_00013],0);
constraint int_lt_reif(s_00009,aux21802,aux21803_BOOL);
constraint int_le_reif(s_00013, s_00009,aux21804_BOOL);
constraint array_bool_and([aux21803_BOOL,aux21804_BOOL],aux21805_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21806,s_00006],0);
constraint int_lt_reif(s_00009,aux21806,aux21807_BOOL);
constraint int_le_reif(s_00006, s_00009,aux21808_BOOL);
constraint array_bool_and([aux21807_BOOL,aux21808_BOOL],aux21809_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21810,s_00017],0);
constraint int_lt_reif(s_00009,aux21810,aux21811_BOOL);
constraint int_le_reif(s_00017, s_00009,aux21812_BOOL);
constraint array_bool_and([aux21811_BOOL,aux21812_BOOL],aux21813_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21814,s_00012],0);
constraint int_lt_reif(s_00009,aux21814,aux21815_BOOL);
constraint int_le_reif(s_00012, s_00009,aux21816_BOOL);
constraint array_bool_and([aux21815_BOOL,aux21816_BOOL],aux21817_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21818,s_00019],0);
constraint int_lt_reif(s_00009,aux21818,aux21819_BOOL);
constraint int_le_reif(s_00019, s_00009,aux21820_BOOL);
constraint array_bool_and([aux21819_BOOL,aux21820_BOOL],aux21821_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21822,s_00014],0);
constraint int_lt_reif(s_00009,aux21822,aux21823_BOOL);
constraint int_le_reif(s_00014, s_00009,aux21824_BOOL);
constraint array_bool_and([aux21823_BOOL,aux21824_BOOL],aux21825_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21826,s_00020],0);
constraint int_lt_reif(s_00009,aux21826,aux21827_BOOL);
constraint int_le_reif(s_00020, s_00009,aux21828_BOOL);
constraint array_bool_and([aux21827_BOOL,aux21828_BOOL],aux21829_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21830,s_00009],0);
constraint int_lt_reif(s_00009,aux21830,aux21831_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21832,s_00001],0);
constraint int_lt_reif(s_00012,aux21832,aux21833_BOOL);
constraint int_le_reif(s_00001, s_00012,aux21834_BOOL);
constraint array_bool_and([aux21833_BOOL,aux21834_BOOL],aux21835_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21836,s_00007],0);
constraint int_lt_reif(s_00012,aux21836,aux21837_BOOL);
constraint int_le_reif(s_00007, s_00012,aux21838_BOOL);
constraint array_bool_and([aux21837_BOOL,aux21838_BOOL],aux21839_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21840,s_00009],0);
constraint int_lt_reif(s_00012,aux21840,aux21841_BOOL);
constraint int_le_reif(s_00009, s_00012,aux21842_BOOL);
constraint array_bool_and([aux21841_BOOL,aux21842_BOOL],aux21843_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21844,s_00003],0);
constraint int_lt_reif(s_00012,aux21844,aux21845_BOOL);
constraint int_le_reif(s_00003, s_00012,aux21846_BOOL);
constraint array_bool_and([aux21845_BOOL,aux21846_BOOL],aux21847_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21848,s_00013],0);
constraint int_lt_reif(s_00012,aux21848,aux21849_BOOL);
constraint int_le_reif(s_00013, s_00012,aux21850_BOOL);
constraint array_bool_and([aux21849_BOOL,aux21850_BOOL],aux21851_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21852,s_00006],0);
constraint int_lt_reif(s_00012,aux21852,aux21853_BOOL);
constraint int_le_reif(s_00006, s_00012,aux21854_BOOL);
constraint array_bool_and([aux21853_BOOL,aux21854_BOOL],aux21855_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21856,s_00017],0);
constraint int_lt_reif(s_00012,aux21856,aux21857_BOOL);
constraint int_le_reif(s_00017, s_00012,aux21858_BOOL);
constraint array_bool_and([aux21857_BOOL,aux21858_BOOL],aux21859_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21860,s_00019],0);
constraint int_lt_reif(s_00012,aux21860,aux21861_BOOL);
constraint int_le_reif(s_00019, s_00012,aux21862_BOOL);
constraint array_bool_and([aux21861_BOOL,aux21862_BOOL],aux21863_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21864,s_00014],0);
constraint int_lt_reif(s_00012,aux21864,aux21865_BOOL);
constraint int_le_reif(s_00014, s_00012,aux21866_BOOL);
constraint array_bool_and([aux21865_BOOL,aux21866_BOOL],aux21867_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21868,s_00020],0);
constraint int_lt_reif(s_00012,aux21868,aux21869_BOOL);
constraint int_le_reif(s_00020, s_00012,aux21870_BOOL);
constraint array_bool_and([aux21869_BOOL,aux21870_BOOL],aux21871_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21872,s_00012],0);
constraint int_lt_reif(s_00012,aux21872,aux21873_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21874,s_00001],0);
constraint int_lt_reif(s_00013,aux21874,aux21875_BOOL);
constraint int_le_reif(s_00001, s_00013,aux21876_BOOL);
constraint array_bool_and([aux21875_BOOL,aux21876_BOOL],aux21877_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21878,s_00007],0);
constraint int_lt_reif(s_00013,aux21878,aux21879_BOOL);
constraint int_le_reif(s_00007, s_00013,aux21880_BOOL);
constraint array_bool_and([aux21879_BOOL,aux21880_BOOL],aux21881_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21882,s_00009],0);
constraint int_lt_reif(s_00013,aux21882,aux21883_BOOL);
constraint int_le_reif(s_00009, s_00013,aux21884_BOOL);
constraint array_bool_and([aux21883_BOOL,aux21884_BOOL],aux21885_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21886,s_00003],0);
constraint int_lt_reif(s_00013,aux21886,aux21887_BOOL);
constraint int_le_reif(s_00003, s_00013,aux21888_BOOL);
constraint array_bool_and([aux21887_BOOL,aux21888_BOOL],aux21889_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21890,s_00006],0);
constraint int_lt_reif(s_00013,aux21890,aux21891_BOOL);
constraint int_le_reif(s_00006, s_00013,aux21892_BOOL);
constraint array_bool_and([aux21891_BOOL,aux21892_BOOL],aux21893_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21894,s_00017],0);
constraint int_lt_reif(s_00013,aux21894,aux21895_BOOL);
constraint int_le_reif(s_00017, s_00013,aux21896_BOOL);
constraint array_bool_and([aux21895_BOOL,aux21896_BOOL],aux21897_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21898,s_00012],0);
constraint int_lt_reif(s_00013,aux21898,aux21899_BOOL);
constraint int_le_reif(s_00012, s_00013,aux21900_BOOL);
constraint array_bool_and([aux21899_BOOL,aux21900_BOOL],aux21901_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21902,s_00019],0);
constraint int_lt_reif(s_00013,aux21902,aux21903_BOOL);
constraint int_le_reif(s_00019, s_00013,aux21904_BOOL);
constraint array_bool_and([aux21903_BOOL,aux21904_BOOL],aux21905_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21906,s_00014],0);
constraint int_lt_reif(s_00013,aux21906,aux21907_BOOL);
constraint int_le_reif(s_00014, s_00013,aux21908_BOOL);
constraint array_bool_and([aux21907_BOOL,aux21908_BOOL],aux21909_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21910,s_00020],0);
constraint int_lt_reif(s_00013,aux21910,aux21911_BOOL);
constraint int_le_reif(s_00020, s_00013,aux21912_BOOL);
constraint array_bool_and([aux21911_BOOL,aux21912_BOOL],aux21913_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21914,s_00013],0);
constraint int_lt_reif(s_00013,aux21914,aux21915_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21916,s_00001],0);
constraint int_lt_reif(s_00014,aux21916,aux21917_BOOL);
constraint int_le_reif(s_00001, s_00014,aux21918_BOOL);
constraint array_bool_and([aux21917_BOOL,aux21918_BOOL],aux21919_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21920,s_00007],0);
constraint int_lt_reif(s_00014,aux21920,aux21921_BOOL);
constraint int_le_reif(s_00007, s_00014,aux21922_BOOL);
constraint array_bool_and([aux21921_BOOL,aux21922_BOOL],aux21923_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21924,s_00009],0);
constraint int_lt_reif(s_00014,aux21924,aux21925_BOOL);
constraint int_le_reif(s_00009, s_00014,aux21926_BOOL);
constraint array_bool_and([aux21925_BOOL,aux21926_BOOL],aux21927_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21928,s_00003],0);
constraint int_lt_reif(s_00014,aux21928,aux21929_BOOL);
constraint int_le_reif(s_00003, s_00014,aux21930_BOOL);
constraint array_bool_and([aux21929_BOOL,aux21930_BOOL],aux21931_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21932,s_00013],0);
constraint int_lt_reif(s_00014,aux21932,aux21933_BOOL);
constraint int_le_reif(s_00013, s_00014,aux21934_BOOL);
constraint array_bool_and([aux21933_BOOL,aux21934_BOOL],aux21935_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21936,s_00006],0);
constraint int_lt_reif(s_00014,aux21936,aux21937_BOOL);
constraint int_le_reif(s_00006, s_00014,aux21938_BOOL);
constraint array_bool_and([aux21937_BOOL,aux21938_BOOL],aux21939_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21940,s_00017],0);
constraint int_lt_reif(s_00014,aux21940,aux21941_BOOL);
constraint int_le_reif(s_00017, s_00014,aux21942_BOOL);
constraint array_bool_and([aux21941_BOOL,aux21942_BOOL],aux21943_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21944,s_00012],0);
constraint int_lt_reif(s_00014,aux21944,aux21945_BOOL);
constraint int_le_reif(s_00012, s_00014,aux21946_BOOL);
constraint array_bool_and([aux21945_BOOL,aux21946_BOOL],aux21947_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21948,s_00019],0);
constraint int_lt_reif(s_00014,aux21948,aux21949_BOOL);
constraint int_le_reif(s_00019, s_00014,aux21950_BOOL);
constraint array_bool_and([aux21949_BOOL,aux21950_BOOL],aux21951_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21952,s_00020],0);
constraint int_lt_reif(s_00014,aux21952,aux21953_BOOL);
constraint int_le_reif(s_00020, s_00014,aux21954_BOOL);
constraint array_bool_and([aux21953_BOOL,aux21954_BOOL],aux21955_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21956,s_00014],0);
constraint int_lt_reif(s_00014,aux21956,aux21957_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21958,s_00001],0);
constraint int_lt_reif(s_00017,aux21958,aux21959_BOOL);
constraint int_le_reif(s_00001, s_00017,aux21960_BOOL);
constraint array_bool_and([aux21959_BOOL,aux21960_BOOL],aux21961_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21962,s_00007],0);
constraint int_lt_reif(s_00017,aux21962,aux21963_BOOL);
constraint int_le_reif(s_00007, s_00017,aux21964_BOOL);
constraint array_bool_and([aux21963_BOOL,aux21964_BOOL],aux21965_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21966,s_00009],0);
constraint int_lt_reif(s_00017,aux21966,aux21967_BOOL);
constraint int_le_reif(s_00009, s_00017,aux21968_BOOL);
constraint array_bool_and([aux21967_BOOL,aux21968_BOOL],aux21969_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21970,s_00003],0);
constraint int_lt_reif(s_00017,aux21970,aux21971_BOOL);
constraint int_le_reif(s_00003, s_00017,aux21972_BOOL);
constraint array_bool_and([aux21971_BOOL,aux21972_BOOL],aux21973_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21974,s_00013],0);
constraint int_lt_reif(s_00017,aux21974,aux21975_BOOL);
constraint int_le_reif(s_00013, s_00017,aux21976_BOOL);
constraint array_bool_and([aux21975_BOOL,aux21976_BOOL],aux21977_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21978,s_00006],0);
constraint int_lt_reif(s_00017,aux21978,aux21979_BOOL);
constraint int_le_reif(s_00006, s_00017,aux21980_BOOL);
constraint array_bool_and([aux21979_BOOL,aux21980_BOOL],aux21981_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21982,s_00012],0);
constraint int_lt_reif(s_00017,aux21982,aux21983_BOOL);
constraint int_le_reif(s_00012, s_00017,aux21984_BOOL);
constraint array_bool_and([aux21983_BOOL,aux21984_BOOL],aux21985_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux21986,s_00019],0);
constraint int_lt_reif(s_00017,aux21986,aux21987_BOOL);
constraint int_le_reif(s_00019, s_00017,aux21988_BOOL);
constraint array_bool_and([aux21987_BOOL,aux21988_BOOL],aux21989_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux21990,s_00014],0);
constraint int_lt_reif(s_00017,aux21990,aux21991_BOOL);
constraint int_le_reif(s_00014, s_00017,aux21992_BOOL);
constraint array_bool_and([aux21991_BOOL,aux21992_BOOL],aux21993_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux21994,s_00020],0);
constraint int_lt_reif(s_00017,aux21994,aux21995_BOOL);
constraint int_le_reif(s_00020, s_00017,aux21996_BOOL);
constraint array_bool_and([aux21995_BOOL,aux21996_BOOL],aux21997_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux21998,s_00017],0);
constraint int_lt_reif(s_00017,aux21998,aux21999_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22000,s_00001],0);
constraint int_lt_reif(s_00019,aux22000,aux22001_BOOL);
constraint int_le_reif(s_00001, s_00019,aux22002_BOOL);
constraint array_bool_and([aux22001_BOOL,aux22002_BOOL],aux22003_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22004,s_00007],0);
constraint int_lt_reif(s_00019,aux22004,aux22005_BOOL);
constraint int_le_reif(s_00007, s_00019,aux22006_BOOL);
constraint array_bool_and([aux22005_BOOL,aux22006_BOOL],aux22007_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22008,s_00009],0);
constraint int_lt_reif(s_00019,aux22008,aux22009_BOOL);
constraint int_le_reif(s_00009, s_00019,aux22010_BOOL);
constraint array_bool_and([aux22009_BOOL,aux22010_BOOL],aux22011_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22012,s_00003],0);
constraint int_lt_reif(s_00019,aux22012,aux22013_BOOL);
constraint int_le_reif(s_00003, s_00019,aux22014_BOOL);
constraint array_bool_and([aux22013_BOOL,aux22014_BOOL],aux22015_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22016,s_00013],0);
constraint int_lt_reif(s_00019,aux22016,aux22017_BOOL);
constraint int_le_reif(s_00013, s_00019,aux22018_BOOL);
constraint array_bool_and([aux22017_BOOL,aux22018_BOOL],aux22019_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22020,s_00006],0);
constraint int_lt_reif(s_00019,aux22020,aux22021_BOOL);
constraint int_le_reif(s_00006, s_00019,aux22022_BOOL);
constraint array_bool_and([aux22021_BOOL,aux22022_BOOL],aux22023_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22024,s_00017],0);
constraint int_lt_reif(s_00019,aux22024,aux22025_BOOL);
constraint int_le_reif(s_00017, s_00019,aux22026_BOOL);
constraint array_bool_and([aux22025_BOOL,aux22026_BOOL],aux22027_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22028,s_00012],0);
constraint int_lt_reif(s_00019,aux22028,aux22029_BOOL);
constraint int_le_reif(s_00012, s_00019,aux22030_BOOL);
constraint array_bool_and([aux22029_BOOL,aux22030_BOOL],aux22031_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22032,s_00014],0);
constraint int_lt_reif(s_00019,aux22032,aux22033_BOOL);
constraint int_le_reif(s_00014, s_00019,aux22034_BOOL);
constraint array_bool_and([aux22033_BOOL,aux22034_BOOL],aux22035_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22036,s_00020],0);
constraint int_lt_reif(s_00019,aux22036,aux22037_BOOL);
constraint int_le_reif(s_00020, s_00019,aux22038_BOOL);
constraint array_bool_and([aux22037_BOOL,aux22038_BOOL],aux22039_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22040,s_00019],0);
constraint int_lt_reif(s_00019,aux22040,aux22041_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22042,s_00001],0);
constraint int_lt_reif(s_00020,aux22042,aux22043_BOOL);
constraint int_le_reif(s_00001, s_00020,aux22044_BOOL);
constraint array_bool_and([aux22043_BOOL,aux22044_BOOL],aux22045_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22046,s_00007],0);
constraint int_lt_reif(s_00020,aux22046,aux22047_BOOL);
constraint int_le_reif(s_00007, s_00020,aux22048_BOOL);
constraint array_bool_and([aux22047_BOOL,aux22048_BOOL],aux22049_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22050,s_00009],0);
constraint int_lt_reif(s_00020,aux22050,aux22051_BOOL);
constraint int_le_reif(s_00009, s_00020,aux22052_BOOL);
constraint array_bool_and([aux22051_BOOL,aux22052_BOOL],aux22053_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22054,s_00003],0);
constraint int_lt_reif(s_00020,aux22054,aux22055_BOOL);
constraint int_le_reif(s_00003, s_00020,aux22056_BOOL);
constraint array_bool_and([aux22055_BOOL,aux22056_BOOL],aux22057_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22058,s_00013],0);
constraint int_lt_reif(s_00020,aux22058,aux22059_BOOL);
constraint int_le_reif(s_00013, s_00020,aux22060_BOOL);
constraint array_bool_and([aux22059_BOOL,aux22060_BOOL],aux22061_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22062,s_00006],0);
constraint int_lt_reif(s_00020,aux22062,aux22063_BOOL);
constraint int_le_reif(s_00006, s_00020,aux22064_BOOL);
constraint array_bool_and([aux22063_BOOL,aux22064_BOOL],aux22065_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22066,s_00017],0);
constraint int_lt_reif(s_00020,aux22066,aux22067_BOOL);
constraint int_le_reif(s_00017, s_00020,aux22068_BOOL);
constraint array_bool_and([aux22067_BOOL,aux22068_BOOL],aux22069_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22070,s_00012],0);
constraint int_lt_reif(s_00020,aux22070,aux22071_BOOL);
constraint int_le_reif(s_00012, s_00020,aux22072_BOOL);
constraint array_bool_and([aux22071_BOOL,aux22072_BOOL],aux22073_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22074,s_00019],0);
constraint int_lt_reif(s_00020,aux22074,aux22075_BOOL);
constraint int_le_reif(s_00019, s_00020,aux22076_BOOL);
constraint array_bool_and([aux22075_BOOL,aux22076_BOOL],aux22077_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22078,s_00014],0);
constraint int_lt_reif(s_00020,aux22078,aux22079_BOOL);
constraint int_le_reif(s_00014, s_00020,aux22080_BOOL);
constraint array_bool_and([aux22079_BOOL,aux22080_BOOL],aux22081_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22082,s_00020],0);
constraint int_lt_reif(s_00020,aux22082,aux22083_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22084,s_00008],0);
constraint int_lt_reif(s_00001,aux22084,aux22085_BOOL);
constraint int_le_reif(s_00008, s_00001,aux22086_BOOL);
constraint array_bool_and([aux22085_BOOL,aux22086_BOOL],aux22087_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22088,s_00002],0);
constraint int_lt_reif(s_00001,aux22088,aux22089_BOOL);
constraint int_le_reif(s_00002, s_00001,aux22090_BOOL);
constraint array_bool_and([aux22089_BOOL,aux22090_BOOL],aux22091_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22092,s_00007],0);
constraint int_lt_reif(s_00001,aux22092,aux22093_BOOL);
constraint int_le_reif(s_00007, s_00001,aux22094_BOOL);
constraint array_bool_and([aux22093_BOOL,aux22094_BOOL],aux22095_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22096,s_00003],0);
constraint int_lt_reif(s_00001,aux22096,aux22097_BOOL);
constraint int_le_reif(s_00003, s_00001,aux22098_BOOL);
constraint array_bool_and([aux22097_BOOL,aux22098_BOOL],aux22099_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22100,s_00013],0);
constraint int_lt_reif(s_00001,aux22100,aux22101_BOOL);
constraint int_le_reif(s_00013, s_00001,aux22102_BOOL);
constraint array_bool_and([aux22101_BOOL,aux22102_BOOL],aux22103_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22104,s_00006],0);
constraint int_lt_reif(s_00001,aux22104,aux22105_BOOL);
constraint int_le_reif(s_00006, s_00001,aux22106_BOOL);
constraint array_bool_and([aux22105_BOOL,aux22106_BOOL],aux22107_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22108,s_00012],0);
constraint int_lt_reif(s_00001,aux22108,aux22109_BOOL);
constraint int_le_reif(s_00012, s_00001,aux22110_BOOL);
constraint array_bool_and([aux22109_BOOL,aux22110_BOOL],aux22111_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22112,s_00019],0);
constraint int_lt_reif(s_00001,aux22112,aux22113_BOOL);
constraint int_le_reif(s_00019, s_00001,aux22114_BOOL);
constraint array_bool_and([aux22113_BOOL,aux22114_BOOL],aux22115_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22116,s_00016],0);
constraint int_lt_reif(s_00001,aux22116,aux22117_BOOL);
constraint int_le_reif(s_00016, s_00001,aux22118_BOOL);
constraint array_bool_and([aux22117_BOOL,aux22118_BOOL],aux22119_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22120,s_00018],0);
constraint int_lt_reif(s_00001,aux22120,aux22121_BOOL);
constraint int_le_reif(s_00018, s_00001,aux22122_BOOL);
constraint array_bool_and([aux22121_BOOL,aux22122_BOOL],aux22123_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22124,s_00014],0);
constraint int_lt_reif(s_00001,aux22124,aux22125_BOOL);
constraint int_le_reif(s_00014, s_00001,aux22126_BOOL);
constraint array_bool_and([aux22125_BOOL,aux22126_BOOL],aux22127_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22128,s_00020],0);
constraint int_lt_reif(s_00001,aux22128,aux22129_BOOL);
constraint int_le_reif(s_00020, s_00001,aux22130_BOOL);
constraint array_bool_and([aux22129_BOOL,aux22130_BOOL],aux22131_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22132,s_00001],0);
constraint int_lt_reif(s_00001,aux22132,aux22133_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22134,s_00001],0);
constraint int_lt_reif(s_00002,aux22134,aux22135_BOOL);
constraint int_le_reif(s_00001, s_00002,aux22136_BOOL);
constraint array_bool_and([aux22135_BOOL,aux22136_BOOL],aux22137_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22138,s_00008],0);
constraint int_lt_reif(s_00002,aux22138,aux22139_BOOL);
constraint int_le_reif(s_00008, s_00002,aux22140_BOOL);
constraint array_bool_and([aux22139_BOOL,aux22140_BOOL],aux22141_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22142,s_00007],0);
constraint int_lt_reif(s_00002,aux22142,aux22143_BOOL);
constraint int_le_reif(s_00007, s_00002,aux22144_BOOL);
constraint array_bool_and([aux22143_BOOL,aux22144_BOOL],aux22145_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22146,s_00003],0);
constraint int_lt_reif(s_00002,aux22146,aux22147_BOOL);
constraint int_le_reif(s_00003, s_00002,aux22148_BOOL);
constraint array_bool_and([aux22147_BOOL,aux22148_BOOL],aux22149_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22150,s_00013],0);
constraint int_lt_reif(s_00002,aux22150,aux22151_BOOL);
constraint int_le_reif(s_00013, s_00002,aux22152_BOOL);
constraint array_bool_and([aux22151_BOOL,aux22152_BOOL],aux22153_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22154,s_00006],0);
constraint int_lt_reif(s_00002,aux22154,aux22155_BOOL);
constraint int_le_reif(s_00006, s_00002,aux22156_BOOL);
constraint array_bool_and([aux22155_BOOL,aux22156_BOOL],aux22157_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22158,s_00012],0);
constraint int_lt_reif(s_00002,aux22158,aux22159_BOOL);
constraint int_le_reif(s_00012, s_00002,aux22160_BOOL);
constraint array_bool_and([aux22159_BOOL,aux22160_BOOL],aux22161_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22162,s_00019],0);
constraint int_lt_reif(s_00002,aux22162,aux22163_BOOL);
constraint int_le_reif(s_00019, s_00002,aux22164_BOOL);
constraint array_bool_and([aux22163_BOOL,aux22164_BOOL],aux22165_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22166,s_00016],0);
constraint int_lt_reif(s_00002,aux22166,aux22167_BOOL);
constraint int_le_reif(s_00016, s_00002,aux22168_BOOL);
constraint array_bool_and([aux22167_BOOL,aux22168_BOOL],aux22169_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22170,s_00018],0);
constraint int_lt_reif(s_00002,aux22170,aux22171_BOOL);
constraint int_le_reif(s_00018, s_00002,aux22172_BOOL);
constraint array_bool_and([aux22171_BOOL,aux22172_BOOL],aux22173_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22174,s_00014],0);
constraint int_lt_reif(s_00002,aux22174,aux22175_BOOL);
constraint int_le_reif(s_00014, s_00002,aux22176_BOOL);
constraint array_bool_and([aux22175_BOOL,aux22176_BOOL],aux22177_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22178,s_00020],0);
constraint int_lt_reif(s_00002,aux22178,aux22179_BOOL);
constraint int_le_reif(s_00020, s_00002,aux22180_BOOL);
constraint array_bool_and([aux22179_BOOL,aux22180_BOOL],aux22181_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22182,s_00002],0);
constraint int_lt_reif(s_00002,aux22182,aux22183_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22184,s_00001],0);
constraint int_lt_reif(s_00003,aux22184,aux22185_BOOL);
constraint int_le_reif(s_00001, s_00003,aux22186_BOOL);
constraint array_bool_and([aux22185_BOOL,aux22186_BOOL],aux22187_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22188,s_00008],0);
constraint int_lt_reif(s_00003,aux22188,aux22189_BOOL);
constraint int_le_reif(s_00008, s_00003,aux22190_BOOL);
constraint array_bool_and([aux22189_BOOL,aux22190_BOOL],aux22191_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22192,s_00002],0);
constraint int_lt_reif(s_00003,aux22192,aux22193_BOOL);
constraint int_le_reif(s_00002, s_00003,aux22194_BOOL);
constraint array_bool_and([aux22193_BOOL,aux22194_BOOL],aux22195_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22196,s_00007],0);
constraint int_lt_reif(s_00003,aux22196,aux22197_BOOL);
constraint int_le_reif(s_00007, s_00003,aux22198_BOOL);
constraint array_bool_and([aux22197_BOOL,aux22198_BOOL],aux22199_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22200,s_00013],0);
constraint int_lt_reif(s_00003,aux22200,aux22201_BOOL);
constraint int_le_reif(s_00013, s_00003,aux22202_BOOL);
constraint array_bool_and([aux22201_BOOL,aux22202_BOOL],aux22203_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22204,s_00006],0);
constraint int_lt_reif(s_00003,aux22204,aux22205_BOOL);
constraint int_le_reif(s_00006, s_00003,aux22206_BOOL);
constraint array_bool_and([aux22205_BOOL,aux22206_BOOL],aux22207_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22208,s_00012],0);
constraint int_lt_reif(s_00003,aux22208,aux22209_BOOL);
constraint int_le_reif(s_00012, s_00003,aux22210_BOOL);
constraint array_bool_and([aux22209_BOOL,aux22210_BOOL],aux22211_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22212,s_00019],0);
constraint int_lt_reif(s_00003,aux22212,aux22213_BOOL);
constraint int_le_reif(s_00019, s_00003,aux22214_BOOL);
constraint array_bool_and([aux22213_BOOL,aux22214_BOOL],aux22215_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22216,s_00016],0);
constraint int_lt_reif(s_00003,aux22216,aux22217_BOOL);
constraint int_le_reif(s_00016, s_00003,aux22218_BOOL);
constraint array_bool_and([aux22217_BOOL,aux22218_BOOL],aux22219_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22220,s_00018],0);
constraint int_lt_reif(s_00003,aux22220,aux22221_BOOL);
constraint int_le_reif(s_00018, s_00003,aux22222_BOOL);
constraint array_bool_and([aux22221_BOOL,aux22222_BOOL],aux22223_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22224,s_00014],0);
constraint int_lt_reif(s_00003,aux22224,aux22225_BOOL);
constraint int_le_reif(s_00014, s_00003,aux22226_BOOL);
constraint array_bool_and([aux22225_BOOL,aux22226_BOOL],aux22227_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22228,s_00020],0);
constraint int_lt_reif(s_00003,aux22228,aux22229_BOOL);
constraint int_le_reif(s_00020, s_00003,aux22230_BOOL);
constraint array_bool_and([aux22229_BOOL,aux22230_BOOL],aux22231_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22232,s_00003],0);
constraint int_lt_reif(s_00003,aux22232,aux22233_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22234,s_00001],0);
constraint int_lt_reif(s_00006,aux22234,aux22235_BOOL);
constraint int_le_reif(s_00001, s_00006,aux22236_BOOL);
constraint array_bool_and([aux22235_BOOL,aux22236_BOOL],aux22237_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22238,s_00008],0);
constraint int_lt_reif(s_00006,aux22238,aux22239_BOOL);
constraint int_le_reif(s_00008, s_00006,aux22240_BOOL);
constraint array_bool_and([aux22239_BOOL,aux22240_BOOL],aux22241_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22242,s_00002],0);
constraint int_lt_reif(s_00006,aux22242,aux22243_BOOL);
constraint int_le_reif(s_00002, s_00006,aux22244_BOOL);
constraint array_bool_and([aux22243_BOOL,aux22244_BOOL],aux22245_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22246,s_00007],0);
constraint int_lt_reif(s_00006,aux22246,aux22247_BOOL);
constraint int_le_reif(s_00007, s_00006,aux22248_BOOL);
constraint array_bool_and([aux22247_BOOL,aux22248_BOOL],aux22249_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22250,s_00003],0);
constraint int_lt_reif(s_00006,aux22250,aux22251_BOOL);
constraint int_le_reif(s_00003, s_00006,aux22252_BOOL);
constraint array_bool_and([aux22251_BOOL,aux22252_BOOL],aux22253_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22254,s_00013],0);
constraint int_lt_reif(s_00006,aux22254,aux22255_BOOL);
constraint int_le_reif(s_00013, s_00006,aux22256_BOOL);
constraint array_bool_and([aux22255_BOOL,aux22256_BOOL],aux22257_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22258,s_00012],0);
constraint int_lt_reif(s_00006,aux22258,aux22259_BOOL);
constraint int_le_reif(s_00012, s_00006,aux22260_BOOL);
constraint array_bool_and([aux22259_BOOL,aux22260_BOOL],aux22261_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22262,s_00019],0);
constraint int_lt_reif(s_00006,aux22262,aux22263_BOOL);
constraint int_le_reif(s_00019, s_00006,aux22264_BOOL);
constraint array_bool_and([aux22263_BOOL,aux22264_BOOL],aux22265_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22266,s_00016],0);
constraint int_lt_reif(s_00006,aux22266,aux22267_BOOL);
constraint int_le_reif(s_00016, s_00006,aux22268_BOOL);
constraint array_bool_and([aux22267_BOOL,aux22268_BOOL],aux22269_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22270,s_00018],0);
constraint int_lt_reif(s_00006,aux22270,aux22271_BOOL);
constraint int_le_reif(s_00018, s_00006,aux22272_BOOL);
constraint array_bool_and([aux22271_BOOL,aux22272_BOOL],aux22273_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22274,s_00014],0);
constraint int_lt_reif(s_00006,aux22274,aux22275_BOOL);
constraint int_le_reif(s_00014, s_00006,aux22276_BOOL);
constraint array_bool_and([aux22275_BOOL,aux22276_BOOL],aux22277_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22278,s_00020],0);
constraint int_lt_reif(s_00006,aux22278,aux22279_BOOL);
constraint int_le_reif(s_00020, s_00006,aux22280_BOOL);
constraint array_bool_and([aux22279_BOOL,aux22280_BOOL],aux22281_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22282,s_00006],0);
constraint int_lt_reif(s_00006,aux22282,aux22283_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22284,s_00001],0);
constraint int_lt_reif(s_00007,aux22284,aux22285_BOOL);
constraint int_le_reif(s_00001, s_00007,aux22286_BOOL);
constraint array_bool_and([aux22285_BOOL,aux22286_BOOL],aux22287_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22288,s_00008],0);
constraint int_lt_reif(s_00007,aux22288,aux22289_BOOL);
constraint int_le_reif(s_00008, s_00007,aux22290_BOOL);
constraint array_bool_and([aux22289_BOOL,aux22290_BOOL],aux22291_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22292,s_00002],0);
constraint int_lt_reif(s_00007,aux22292,aux22293_BOOL);
constraint int_le_reif(s_00002, s_00007,aux22294_BOOL);
constraint array_bool_and([aux22293_BOOL,aux22294_BOOL],aux22295_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22296,s_00003],0);
constraint int_lt_reif(s_00007,aux22296,aux22297_BOOL);
constraint int_le_reif(s_00003, s_00007,aux22298_BOOL);
constraint array_bool_and([aux22297_BOOL,aux22298_BOOL],aux22299_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22300,s_00013],0);
constraint int_lt_reif(s_00007,aux22300,aux22301_BOOL);
constraint int_le_reif(s_00013, s_00007,aux22302_BOOL);
constraint array_bool_and([aux22301_BOOL,aux22302_BOOL],aux22303_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22304,s_00006],0);
constraint int_lt_reif(s_00007,aux22304,aux22305_BOOL);
constraint int_le_reif(s_00006, s_00007,aux22306_BOOL);
constraint array_bool_and([aux22305_BOOL,aux22306_BOOL],aux22307_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22308,s_00012],0);
constraint int_lt_reif(s_00007,aux22308,aux22309_BOOL);
constraint int_le_reif(s_00012, s_00007,aux22310_BOOL);
constraint array_bool_and([aux22309_BOOL,aux22310_BOOL],aux22311_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22312,s_00019],0);
constraint int_lt_reif(s_00007,aux22312,aux22313_BOOL);
constraint int_le_reif(s_00019, s_00007,aux22314_BOOL);
constraint array_bool_and([aux22313_BOOL,aux22314_BOOL],aux22315_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22316,s_00016],0);
constraint int_lt_reif(s_00007,aux22316,aux22317_BOOL);
constraint int_le_reif(s_00016, s_00007,aux22318_BOOL);
constraint array_bool_and([aux22317_BOOL,aux22318_BOOL],aux22319_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22320,s_00018],0);
constraint int_lt_reif(s_00007,aux22320,aux22321_BOOL);
constraint int_le_reif(s_00018, s_00007,aux22322_BOOL);
constraint array_bool_and([aux22321_BOOL,aux22322_BOOL],aux22323_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22324,s_00014],0);
constraint int_lt_reif(s_00007,aux22324,aux22325_BOOL);
constraint int_le_reif(s_00014, s_00007,aux22326_BOOL);
constraint array_bool_and([aux22325_BOOL,aux22326_BOOL],aux22327_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22328,s_00020],0);
constraint int_lt_reif(s_00007,aux22328,aux22329_BOOL);
constraint int_le_reif(s_00020, s_00007,aux22330_BOOL);
constraint array_bool_and([aux22329_BOOL,aux22330_BOOL],aux22331_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22332,s_00007],0);
constraint int_lt_reif(s_00007,aux22332,aux22333_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22334,s_00001],0);
constraint int_lt_reif(s_00008,aux22334,aux22335_BOOL);
constraint int_le_reif(s_00001, s_00008,aux22336_BOOL);
constraint array_bool_and([aux22335_BOOL,aux22336_BOOL],aux22337_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22338,s_00002],0);
constraint int_lt_reif(s_00008,aux22338,aux22339_BOOL);
constraint int_le_reif(s_00002, s_00008,aux22340_BOOL);
constraint array_bool_and([aux22339_BOOL,aux22340_BOOL],aux22341_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22342,s_00007],0);
constraint int_lt_reif(s_00008,aux22342,aux22343_BOOL);
constraint int_le_reif(s_00007, s_00008,aux22344_BOOL);
constraint array_bool_and([aux22343_BOOL,aux22344_BOOL],aux22345_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22346,s_00003],0);
constraint int_lt_reif(s_00008,aux22346,aux22347_BOOL);
constraint int_le_reif(s_00003, s_00008,aux22348_BOOL);
constraint array_bool_and([aux22347_BOOL,aux22348_BOOL],aux22349_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22350,s_00013],0);
constraint int_lt_reif(s_00008,aux22350,aux22351_BOOL);
constraint int_le_reif(s_00013, s_00008,aux22352_BOOL);
constraint array_bool_and([aux22351_BOOL,aux22352_BOOL],aux22353_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22354,s_00006],0);
constraint int_lt_reif(s_00008,aux22354,aux22355_BOOL);
constraint int_le_reif(s_00006, s_00008,aux22356_BOOL);
constraint array_bool_and([aux22355_BOOL,aux22356_BOOL],aux22357_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22358,s_00012],0);
constraint int_lt_reif(s_00008,aux22358,aux22359_BOOL);
constraint int_le_reif(s_00012, s_00008,aux22360_BOOL);
constraint array_bool_and([aux22359_BOOL,aux22360_BOOL],aux22361_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22362,s_00019],0);
constraint int_lt_reif(s_00008,aux22362,aux22363_BOOL);
constraint int_le_reif(s_00019, s_00008,aux22364_BOOL);
constraint array_bool_and([aux22363_BOOL,aux22364_BOOL],aux22365_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22366,s_00016],0);
constraint int_lt_reif(s_00008,aux22366,aux22367_BOOL);
constraint int_le_reif(s_00016, s_00008,aux22368_BOOL);
constraint array_bool_and([aux22367_BOOL,aux22368_BOOL],aux22369_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22370,s_00018],0);
constraint int_lt_reif(s_00008,aux22370,aux22371_BOOL);
constraint int_le_reif(s_00018, s_00008,aux22372_BOOL);
constraint array_bool_and([aux22371_BOOL,aux22372_BOOL],aux22373_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22374,s_00014],0);
constraint int_lt_reif(s_00008,aux22374,aux22375_BOOL);
constraint int_le_reif(s_00014, s_00008,aux22376_BOOL);
constraint array_bool_and([aux22375_BOOL,aux22376_BOOL],aux22377_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22378,s_00020],0);
constraint int_lt_reif(s_00008,aux22378,aux22379_BOOL);
constraint int_le_reif(s_00020, s_00008,aux22380_BOOL);
constraint array_bool_and([aux22379_BOOL,aux22380_BOOL],aux22381_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22382,s_00008],0);
constraint int_lt_reif(s_00008,aux22382,aux22383_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22384,s_00001],0);
constraint int_lt_reif(s_00012,aux22384,aux22385_BOOL);
constraint int_le_reif(s_00001, s_00012,aux22386_BOOL);
constraint array_bool_and([aux22385_BOOL,aux22386_BOOL],aux22387_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22388,s_00008],0);
constraint int_lt_reif(s_00012,aux22388,aux22389_BOOL);
constraint int_le_reif(s_00008, s_00012,aux22390_BOOL);
constraint array_bool_and([aux22389_BOOL,aux22390_BOOL],aux22391_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22392,s_00002],0);
constraint int_lt_reif(s_00012,aux22392,aux22393_BOOL);
constraint int_le_reif(s_00002, s_00012,aux22394_BOOL);
constraint array_bool_and([aux22393_BOOL,aux22394_BOOL],aux22395_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22396,s_00007],0);
constraint int_lt_reif(s_00012,aux22396,aux22397_BOOL);
constraint int_le_reif(s_00007, s_00012,aux22398_BOOL);
constraint array_bool_and([aux22397_BOOL,aux22398_BOOL],aux22399_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22400,s_00003],0);
constraint int_lt_reif(s_00012,aux22400,aux22401_BOOL);
constraint int_le_reif(s_00003, s_00012,aux22402_BOOL);
constraint array_bool_and([aux22401_BOOL,aux22402_BOOL],aux22403_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22404,s_00013],0);
constraint int_lt_reif(s_00012,aux22404,aux22405_BOOL);
constraint int_le_reif(s_00013, s_00012,aux22406_BOOL);
constraint array_bool_and([aux22405_BOOL,aux22406_BOOL],aux22407_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22408,s_00006],0);
constraint int_lt_reif(s_00012,aux22408,aux22409_BOOL);
constraint int_le_reif(s_00006, s_00012,aux22410_BOOL);
constraint array_bool_and([aux22409_BOOL,aux22410_BOOL],aux22411_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22412,s_00019],0);
constraint int_lt_reif(s_00012,aux22412,aux22413_BOOL);
constraint int_le_reif(s_00019, s_00012,aux22414_BOOL);
constraint array_bool_and([aux22413_BOOL,aux22414_BOOL],aux22415_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22416,s_00016],0);
constraint int_lt_reif(s_00012,aux22416,aux22417_BOOL);
constraint int_le_reif(s_00016, s_00012,aux22418_BOOL);
constraint array_bool_and([aux22417_BOOL,aux22418_BOOL],aux22419_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22420,s_00018],0);
constraint int_lt_reif(s_00012,aux22420,aux22421_BOOL);
constraint int_le_reif(s_00018, s_00012,aux22422_BOOL);
constraint array_bool_and([aux22421_BOOL,aux22422_BOOL],aux22423_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22424,s_00014],0);
constraint int_lt_reif(s_00012,aux22424,aux22425_BOOL);
constraint int_le_reif(s_00014, s_00012,aux22426_BOOL);
constraint array_bool_and([aux22425_BOOL,aux22426_BOOL],aux22427_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22428,s_00020],0);
constraint int_lt_reif(s_00012,aux22428,aux22429_BOOL);
constraint int_le_reif(s_00020, s_00012,aux22430_BOOL);
constraint array_bool_and([aux22429_BOOL,aux22430_BOOL],aux22431_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22432,s_00012],0);
constraint int_lt_reif(s_00012,aux22432,aux22433_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22434,s_00001],0);
constraint int_lt_reif(s_00013,aux22434,aux22435_BOOL);
constraint int_le_reif(s_00001, s_00013,aux22436_BOOL);
constraint array_bool_and([aux22435_BOOL,aux22436_BOOL],aux22437_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22438,s_00008],0);
constraint int_lt_reif(s_00013,aux22438,aux22439_BOOL);
constraint int_le_reif(s_00008, s_00013,aux22440_BOOL);
constraint array_bool_and([aux22439_BOOL,aux22440_BOOL],aux22441_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22442,s_00002],0);
constraint int_lt_reif(s_00013,aux22442,aux22443_BOOL);
constraint int_le_reif(s_00002, s_00013,aux22444_BOOL);
constraint array_bool_and([aux22443_BOOL,aux22444_BOOL],aux22445_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22446,s_00007],0);
constraint int_lt_reif(s_00013,aux22446,aux22447_BOOL);
constraint int_le_reif(s_00007, s_00013,aux22448_BOOL);
constraint array_bool_and([aux22447_BOOL,aux22448_BOOL],aux22449_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22450,s_00003],0);
constraint int_lt_reif(s_00013,aux22450,aux22451_BOOL);
constraint int_le_reif(s_00003, s_00013,aux22452_BOOL);
constraint array_bool_and([aux22451_BOOL,aux22452_BOOL],aux22453_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22454,s_00006],0);
constraint int_lt_reif(s_00013,aux22454,aux22455_BOOL);
constraint int_le_reif(s_00006, s_00013,aux22456_BOOL);
constraint array_bool_and([aux22455_BOOL,aux22456_BOOL],aux22457_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22458,s_00012],0);
constraint int_lt_reif(s_00013,aux22458,aux22459_BOOL);
constraint int_le_reif(s_00012, s_00013,aux22460_BOOL);
constraint array_bool_and([aux22459_BOOL,aux22460_BOOL],aux22461_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22462,s_00019],0);
constraint int_lt_reif(s_00013,aux22462,aux22463_BOOL);
constraint int_le_reif(s_00019, s_00013,aux22464_BOOL);
constraint array_bool_and([aux22463_BOOL,aux22464_BOOL],aux22465_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22466,s_00016],0);
constraint int_lt_reif(s_00013,aux22466,aux22467_BOOL);
constraint int_le_reif(s_00016, s_00013,aux22468_BOOL);
constraint array_bool_and([aux22467_BOOL,aux22468_BOOL],aux22469_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22470,s_00018],0);
constraint int_lt_reif(s_00013,aux22470,aux22471_BOOL);
constraint int_le_reif(s_00018, s_00013,aux22472_BOOL);
constraint array_bool_and([aux22471_BOOL,aux22472_BOOL],aux22473_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22474,s_00014],0);
constraint int_lt_reif(s_00013,aux22474,aux22475_BOOL);
constraint int_le_reif(s_00014, s_00013,aux22476_BOOL);
constraint array_bool_and([aux22475_BOOL,aux22476_BOOL],aux22477_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22478,s_00020],0);
constraint int_lt_reif(s_00013,aux22478,aux22479_BOOL);
constraint int_le_reif(s_00020, s_00013,aux22480_BOOL);
constraint array_bool_and([aux22479_BOOL,aux22480_BOOL],aux22481_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22482,s_00013],0);
constraint int_lt_reif(s_00013,aux22482,aux22483_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22484,s_00001],0);
constraint int_lt_reif(s_00014,aux22484,aux22485_BOOL);
constraint int_le_reif(s_00001, s_00014,aux22486_BOOL);
constraint array_bool_and([aux22485_BOOL,aux22486_BOOL],aux22487_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22488,s_00008],0);
constraint int_lt_reif(s_00014,aux22488,aux22489_BOOL);
constraint int_le_reif(s_00008, s_00014,aux22490_BOOL);
constraint array_bool_and([aux22489_BOOL,aux22490_BOOL],aux22491_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22492,s_00002],0);
constraint int_lt_reif(s_00014,aux22492,aux22493_BOOL);
constraint int_le_reif(s_00002, s_00014,aux22494_BOOL);
constraint array_bool_and([aux22493_BOOL,aux22494_BOOL],aux22495_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22496,s_00007],0);
constraint int_lt_reif(s_00014,aux22496,aux22497_BOOL);
constraint int_le_reif(s_00007, s_00014,aux22498_BOOL);
constraint array_bool_and([aux22497_BOOL,aux22498_BOOL],aux22499_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22500,s_00003],0);
constraint int_lt_reif(s_00014,aux22500,aux22501_BOOL);
constraint int_le_reif(s_00003, s_00014,aux22502_BOOL);
constraint array_bool_and([aux22501_BOOL,aux22502_BOOL],aux22503_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22504,s_00013],0);
constraint int_lt_reif(s_00014,aux22504,aux22505_BOOL);
constraint int_le_reif(s_00013, s_00014,aux22506_BOOL);
constraint array_bool_and([aux22505_BOOL,aux22506_BOOL],aux22507_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22508,s_00006],0);
constraint int_lt_reif(s_00014,aux22508,aux22509_BOOL);
constraint int_le_reif(s_00006, s_00014,aux22510_BOOL);
constraint array_bool_and([aux22509_BOOL,aux22510_BOOL],aux22511_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22512,s_00012],0);
constraint int_lt_reif(s_00014,aux22512,aux22513_BOOL);
constraint int_le_reif(s_00012, s_00014,aux22514_BOOL);
constraint array_bool_and([aux22513_BOOL,aux22514_BOOL],aux22515_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22516,s_00019],0);
constraint int_lt_reif(s_00014,aux22516,aux22517_BOOL);
constraint int_le_reif(s_00019, s_00014,aux22518_BOOL);
constraint array_bool_and([aux22517_BOOL,aux22518_BOOL],aux22519_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22520,s_00016],0);
constraint int_lt_reif(s_00014,aux22520,aux22521_BOOL);
constraint int_le_reif(s_00016, s_00014,aux22522_BOOL);
constraint array_bool_and([aux22521_BOOL,aux22522_BOOL],aux22523_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22524,s_00018],0);
constraint int_lt_reif(s_00014,aux22524,aux22525_BOOL);
constraint int_le_reif(s_00018, s_00014,aux22526_BOOL);
constraint array_bool_and([aux22525_BOOL,aux22526_BOOL],aux22527_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22528,s_00020],0);
constraint int_lt_reif(s_00014,aux22528,aux22529_BOOL);
constraint int_le_reif(s_00020, s_00014,aux22530_BOOL);
constraint array_bool_and([aux22529_BOOL,aux22530_BOOL],aux22531_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22532,s_00014],0);
constraint int_lt_reif(s_00014,aux22532,aux22533_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22534,s_00001],0);
constraint int_lt_reif(s_00016,aux22534,aux22535_BOOL);
constraint int_le_reif(s_00001, s_00016,aux22536_BOOL);
constraint array_bool_and([aux22535_BOOL,aux22536_BOOL],aux22537_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22538,s_00008],0);
constraint int_lt_reif(s_00016,aux22538,aux22539_BOOL);
constraint int_le_reif(s_00008, s_00016,aux22540_BOOL);
constraint array_bool_and([aux22539_BOOL,aux22540_BOOL],aux22541_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22542,s_00002],0);
constraint int_lt_reif(s_00016,aux22542,aux22543_BOOL);
constraint int_le_reif(s_00002, s_00016,aux22544_BOOL);
constraint array_bool_and([aux22543_BOOL,aux22544_BOOL],aux22545_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22546,s_00007],0);
constraint int_lt_reif(s_00016,aux22546,aux22547_BOOL);
constraint int_le_reif(s_00007, s_00016,aux22548_BOOL);
constraint array_bool_and([aux22547_BOOL,aux22548_BOOL],aux22549_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22550,s_00003],0);
constraint int_lt_reif(s_00016,aux22550,aux22551_BOOL);
constraint int_le_reif(s_00003, s_00016,aux22552_BOOL);
constraint array_bool_and([aux22551_BOOL,aux22552_BOOL],aux22553_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22554,s_00013],0);
constraint int_lt_reif(s_00016,aux22554,aux22555_BOOL);
constraint int_le_reif(s_00013, s_00016,aux22556_BOOL);
constraint array_bool_and([aux22555_BOOL,aux22556_BOOL],aux22557_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22558,s_00006],0);
constraint int_lt_reif(s_00016,aux22558,aux22559_BOOL);
constraint int_le_reif(s_00006, s_00016,aux22560_BOOL);
constraint array_bool_and([aux22559_BOOL,aux22560_BOOL],aux22561_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22562,s_00012],0);
constraint int_lt_reif(s_00016,aux22562,aux22563_BOOL);
constraint int_le_reif(s_00012, s_00016,aux22564_BOOL);
constraint array_bool_and([aux22563_BOOL,aux22564_BOOL],aux22565_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22566,s_00019],0);
constraint int_lt_reif(s_00016,aux22566,aux22567_BOOL);
constraint int_le_reif(s_00019, s_00016,aux22568_BOOL);
constraint array_bool_and([aux22567_BOOL,aux22568_BOOL],aux22569_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22570,s_00018],0);
constraint int_lt_reif(s_00016,aux22570,aux22571_BOOL);
constraint int_le_reif(s_00018, s_00016,aux22572_BOOL);
constraint array_bool_and([aux22571_BOOL,aux22572_BOOL],aux22573_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22574,s_00014],0);
constraint int_lt_reif(s_00016,aux22574,aux22575_BOOL);
constraint int_le_reif(s_00014, s_00016,aux22576_BOOL);
constraint array_bool_and([aux22575_BOOL,aux22576_BOOL],aux22577_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22578,s_00020],0);
constraint int_lt_reif(s_00016,aux22578,aux22579_BOOL);
constraint int_le_reif(s_00020, s_00016,aux22580_BOOL);
constraint array_bool_and([aux22579_BOOL,aux22580_BOOL],aux22581_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22582,s_00016],0);
constraint int_lt_reif(s_00016,aux22582,aux22583_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22584,s_00001],0);
constraint int_lt_reif(s_00018,aux22584,aux22585_BOOL);
constraint int_le_reif(s_00001, s_00018,aux22586_BOOL);
constraint array_bool_and([aux22585_BOOL,aux22586_BOOL],aux22587_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22588,s_00008],0);
constraint int_lt_reif(s_00018,aux22588,aux22589_BOOL);
constraint int_le_reif(s_00008, s_00018,aux22590_BOOL);
constraint array_bool_and([aux22589_BOOL,aux22590_BOOL],aux22591_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22592,s_00002],0);
constraint int_lt_reif(s_00018,aux22592,aux22593_BOOL);
constraint int_le_reif(s_00002, s_00018,aux22594_BOOL);
constraint array_bool_and([aux22593_BOOL,aux22594_BOOL],aux22595_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22596,s_00007],0);
constraint int_lt_reif(s_00018,aux22596,aux22597_BOOL);
constraint int_le_reif(s_00007, s_00018,aux22598_BOOL);
constraint array_bool_and([aux22597_BOOL,aux22598_BOOL],aux22599_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22600,s_00003],0);
constraint int_lt_reif(s_00018,aux22600,aux22601_BOOL);
constraint int_le_reif(s_00003, s_00018,aux22602_BOOL);
constraint array_bool_and([aux22601_BOOL,aux22602_BOOL],aux22603_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22604,s_00013],0);
constraint int_lt_reif(s_00018,aux22604,aux22605_BOOL);
constraint int_le_reif(s_00013, s_00018,aux22606_BOOL);
constraint array_bool_and([aux22605_BOOL,aux22606_BOOL],aux22607_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22608,s_00006],0);
constraint int_lt_reif(s_00018,aux22608,aux22609_BOOL);
constraint int_le_reif(s_00006, s_00018,aux22610_BOOL);
constraint array_bool_and([aux22609_BOOL,aux22610_BOOL],aux22611_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22612,s_00012],0);
constraint int_lt_reif(s_00018,aux22612,aux22613_BOOL);
constraint int_le_reif(s_00012, s_00018,aux22614_BOOL);
constraint array_bool_and([aux22613_BOOL,aux22614_BOOL],aux22615_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22616,s_00019],0);
constraint int_lt_reif(s_00018,aux22616,aux22617_BOOL);
constraint int_le_reif(s_00019, s_00018,aux22618_BOOL);
constraint array_bool_and([aux22617_BOOL,aux22618_BOOL],aux22619_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22620,s_00016],0);
constraint int_lt_reif(s_00018,aux22620,aux22621_BOOL);
constraint int_le_reif(s_00016, s_00018,aux22622_BOOL);
constraint array_bool_and([aux22621_BOOL,aux22622_BOOL],aux22623_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22624,s_00014],0);
constraint int_lt_reif(s_00018,aux22624,aux22625_BOOL);
constraint int_le_reif(s_00014, s_00018,aux22626_BOOL);
constraint array_bool_and([aux22625_BOOL,aux22626_BOOL],aux22627_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22628,s_00020],0);
constraint int_lt_reif(s_00018,aux22628,aux22629_BOOL);
constraint int_le_reif(s_00020, s_00018,aux22630_BOOL);
constraint array_bool_and([aux22629_BOOL,aux22630_BOOL],aux22631_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22632,s_00018],0);
constraint int_lt_reif(s_00018,aux22632,aux22633_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22634,s_00001],0);
constraint int_lt_reif(s_00019,aux22634,aux22635_BOOL);
constraint int_le_reif(s_00001, s_00019,aux22636_BOOL);
constraint array_bool_and([aux22635_BOOL,aux22636_BOOL],aux22637_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22638,s_00008],0);
constraint int_lt_reif(s_00019,aux22638,aux22639_BOOL);
constraint int_le_reif(s_00008, s_00019,aux22640_BOOL);
constraint array_bool_and([aux22639_BOOL,aux22640_BOOL],aux22641_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22642,s_00002],0);
constraint int_lt_reif(s_00019,aux22642,aux22643_BOOL);
constraint int_le_reif(s_00002, s_00019,aux22644_BOOL);
constraint array_bool_and([aux22643_BOOL,aux22644_BOOL],aux22645_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22646,s_00007],0);
constraint int_lt_reif(s_00019,aux22646,aux22647_BOOL);
constraint int_le_reif(s_00007, s_00019,aux22648_BOOL);
constraint array_bool_and([aux22647_BOOL,aux22648_BOOL],aux22649_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22650,s_00003],0);
constraint int_lt_reif(s_00019,aux22650,aux22651_BOOL);
constraint int_le_reif(s_00003, s_00019,aux22652_BOOL);
constraint array_bool_and([aux22651_BOOL,aux22652_BOOL],aux22653_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22654,s_00013],0);
constraint int_lt_reif(s_00019,aux22654,aux22655_BOOL);
constraint int_le_reif(s_00013, s_00019,aux22656_BOOL);
constraint array_bool_and([aux22655_BOOL,aux22656_BOOL],aux22657_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22658,s_00006],0);
constraint int_lt_reif(s_00019,aux22658,aux22659_BOOL);
constraint int_le_reif(s_00006, s_00019,aux22660_BOOL);
constraint array_bool_and([aux22659_BOOL,aux22660_BOOL],aux22661_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22662,s_00012],0);
constraint int_lt_reif(s_00019,aux22662,aux22663_BOOL);
constraint int_le_reif(s_00012, s_00019,aux22664_BOOL);
constraint array_bool_and([aux22663_BOOL,aux22664_BOOL],aux22665_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22666,s_00016],0);
constraint int_lt_reif(s_00019,aux22666,aux22667_BOOL);
constraint int_le_reif(s_00016, s_00019,aux22668_BOOL);
constraint array_bool_and([aux22667_BOOL,aux22668_BOOL],aux22669_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22670,s_00018],0);
constraint int_lt_reif(s_00019,aux22670,aux22671_BOOL);
constraint int_le_reif(s_00018, s_00019,aux22672_BOOL);
constraint array_bool_and([aux22671_BOOL,aux22672_BOOL],aux22673_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22674,s_00014],0);
constraint int_lt_reif(s_00019,aux22674,aux22675_BOOL);
constraint int_le_reif(s_00014, s_00019,aux22676_BOOL);
constraint array_bool_and([aux22675_BOOL,aux22676_BOOL],aux22677_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22678,s_00020],0);
constraint int_lt_reif(s_00019,aux22678,aux22679_BOOL);
constraint int_le_reif(s_00020, s_00019,aux22680_BOOL);
constraint array_bool_and([aux22679_BOOL,aux22680_BOOL],aux22681_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22682,s_00019],0);
constraint int_lt_reif(s_00019,aux22682,aux22683_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22684,s_00001],0);
constraint int_lt_reif(s_00020,aux22684,aux22685_BOOL);
constraint int_le_reif(s_00001, s_00020,aux22686_BOOL);
constraint array_bool_and([aux22685_BOOL,aux22686_BOOL],aux22687_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22688,s_00008],0);
constraint int_lt_reif(s_00020,aux22688,aux22689_BOOL);
constraint int_le_reif(s_00008, s_00020,aux22690_BOOL);
constraint array_bool_and([aux22689_BOOL,aux22690_BOOL],aux22691_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22692,s_00002],0);
constraint int_lt_reif(s_00020,aux22692,aux22693_BOOL);
constraint int_le_reif(s_00002, s_00020,aux22694_BOOL);
constraint array_bool_and([aux22693_BOOL,aux22694_BOOL],aux22695_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22696,s_00007],0);
constraint int_lt_reif(s_00020,aux22696,aux22697_BOOL);
constraint int_le_reif(s_00007, s_00020,aux22698_BOOL);
constraint array_bool_and([aux22697_BOOL,aux22698_BOOL],aux22699_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22700,s_00003],0);
constraint int_lt_reif(s_00020,aux22700,aux22701_BOOL);
constraint int_le_reif(s_00003, s_00020,aux22702_BOOL);
constraint array_bool_and([aux22701_BOOL,aux22702_BOOL],aux22703_BOOL);
constraint int_lin_eq([1,-1,1],[1,aux22704,s_00013],0);
constraint int_lt_reif(s_00020,aux22704,aux22705_BOOL);
constraint int_le_reif(s_00013, s_00020,aux22706_BOOL);
constraint array_bool_and([aux22705_BOOL,aux22706_BOOL],aux22707_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22708,s_00006],0);
constraint int_lt_reif(s_00020,aux22708,aux22709_BOOL);
constraint int_le_reif(s_00006, s_00020,aux22710_BOOL);
constraint array_bool_and([aux22709_BOOL,aux22710_BOOL],aux22711_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22712,s_00012],0);
constraint int_lt_reif(s_00020,aux22712,aux22713_BOOL);
constraint int_le_reif(s_00012, s_00020,aux22714_BOOL);
constraint array_bool_and([aux22713_BOOL,aux22714_BOOL],aux22715_BOOL);
constraint int_lin_eq([1,-1,1],[2,aux22716,s_00019],0);
constraint int_lt_reif(s_00020,aux22716,aux22717_BOOL);
constraint int_le_reif(s_00019, s_00020,aux22718_BOOL);
constraint array_bool_and([aux22717_BOOL,aux22718_BOOL],aux22719_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22720,s_00016],0);
constraint int_lt_reif(s_00020,aux22720,aux22721_BOOL);
constraint int_le_reif(s_00016, s_00020,aux22722_BOOL);
constraint array_bool_and([aux22721_BOOL,aux22722_BOOL],aux22723_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22724,s_00018],0);
constraint int_lt_reif(s_00020,aux22724,aux22725_BOOL);
constraint int_le_reif(s_00018, s_00020,aux22726_BOOL);
constraint array_bool_and([aux22725_BOOL,aux22726_BOOL],aux22727_BOOL);
constraint int_lin_eq([1,-1,1],[4,aux22728,s_00014],0);
constraint int_lt_reif(s_00020,aux22728,aux22729_BOOL);
constraint int_le_reif(s_00014, s_00020,aux22730_BOOL);
constraint array_bool_and([aux22729_BOOL,aux22730_BOOL],aux22731_BOOL);
constraint int_lin_eq([1,-1,1],[3,aux22732,s_00020],0);
constraint int_lt_reif(s_00020,aux22732,aux22733_BOOL);
constraint int_lin_le([1,1,-1],[1,s_00008,s_00020],0);
constraint int_lin_le([1,1,-1],[2,s_00009,s_00010],0);
constraint int_lin_le([1,1,-1],[2,s_00011,s_00012],0);
constraint int_lin_le([1,1,-1],[2,s_00012,s_00019],0);
constraint int_lin_le([1,1,-1],[3,s_00016,s_00020],0);
constraint int_lin_le([1,1,-1],[1,s_00017,s_00019],0);
constraint int_lin_le([1,1,-1],[1,s_00001,s_00005],0);
constraint int_lin_le([1,1,-1],[1,s_00001,s_00012],0);
constraint int_lin_le([1,1,-1],[1,s_00001,s_00015],0);
constraint int_lin_le([1,1,-1],[2,s_00002,s_00011],0);
constraint int_lin_le([1,1,-1],[2,s_00002,s_00014],0);
constraint int_lin_le([1,1,-1],[2,s_00002,s_00018],0);
constraint int_lin_le([1,1,-1],[3,s_00003,s_00004],0);
constraint int_lin_le([1,1,-1],[3,s_00003,s_00007],0);
constraint int_lin_le([1,1,-1],[3,s_00003,s_00009],0);
constraint int_lin_le([1,1,-1],[2,s_00004,s_00006],0);
constraint int_lin_le([1,1,-1],[2,s_00004,s_00008],0);
constraint int_lin_le([1,1,-1],[2,s_00004,s_00017],0);
constraint int_lin_le([1,1,-1],[2,s_00005,s_00016],0);
constraint int_lin_le([1,1,-1],[2,s_00005,s_00017],0);
constraint int_lin_le([1,1,-1],[2,s_00005,s_00018],0);
constraint int_lin_le([1,1,-1],[3,s_00006,s_00011],0);
constraint int_lin_le([1,1,-1],[3,s_00006,s_00016],0);
constraint int_lin_le([1,1,-1],[2,s_00007,s_00008],0);
constraint int_lin_le([1,1,-1],[2,s_00007,s_00012],0);
constraint int_lin_le([1,1,-1],[1,s_00010,s_00011],0);
constraint int_lin_le([1,1,-1],[1,s_00010,s_00013],0);
constraint int_lin_le([1,1,-1],[1,s_00013,s_00014],0);
constraint int_lin_le([1,1,-1],[1,s_00013,s_00015],0);
constraint int_lin_le([1,1,-1],[1,s_00013,s_00018],0);
constraint int_lin_le([1,1,-1],[4,s_00014,s_00016],0);
constraint int_lin_le([1,1,-1],[4,s_00014,s_00019],0);
constraint int_lin_le([1,1,-1],[2,s_00015,s_00017],0);
constraint int_lin_le([1,1,-1],[2,s_00015,s_00020],0);
constraint int_eq(1,TWorkers_00001_00001_INTEGER);
constraint int_eq(1,TWorkers_00002_00001_INTEGER);
constraint int_eq(TWorkers_00003_00001_INTEGER,1);
constraint int_eq(TWorkers_00004_00001_INTEGER,1);
constraint int_eq(TWorkers_00005_00001_INTEGER,1);
constraint int_eq(1,TWorkers_00006_00001_INTEGER);
constraint int_eq(1,TWorkers_00007_00001_INTEGER);
constraint int_eq(TWorkers_00008_00001_INTEGER,1);
constraint int_ne(1,TWorkers_00001_00002_INTEGER);
constraint int_eq(1,TWorkers_00002_00002_INTEGER);
constraint int_ne(TWorkers_00003_00002_INTEGER,1);
constraint int_eq(TWorkers_00004_00002_INTEGER,1);
constraint int_ne(TWorkers_00005_00002_INTEGER,1);
constraint int_eq(1,TWorkers_00006_00002_INTEGER);
constraint int_eq(1,TWorkers_00007_00002_INTEGER);
constraint int_eq(TWorkers_00008_00002_INTEGER,1);
constraint int_eq(1,TWorkers_00001_00003_INTEGER);
constraint int_eq(1,TWorkers_00002_00003_INTEGER);
constraint int_eq(TWorkers_00003_00003_INTEGER,1);
constraint int_eq(TWorkers_00004_00003_INTEGER,1);
constraint int_eq(TWorkers_00005_00003_INTEGER,1);
constraint int_eq(1,TWorkers_00006_00003_INTEGER);
constraint int_eq(1,TWorkers_00007_00003_INTEGER);
constraint int_eq(TWorkers_00008_00003_INTEGER,1);
constraint int_eq(1,TWorkers_00001_00004_INTEGER);
constraint int_eq(1,TWorkers_00002_00004_INTEGER);
constraint int_eq(TWorkers_00003_00004_INTEGER,1);
constraint int_eq(TWorkers_00004_00004_INTEGER,1);
constraint int_eq(TWorkers_00005_00004_INTEGER,1);
constraint int_eq(1,TWorkers_00006_00004_INTEGER);
constraint int_eq(1,TWorkers_00007_00004_INTEGER);
constraint int_eq(TWorkers_00008_00004_INTEGER,1);
constraint int_eq(1,TWorkers_00001_00005_INTEGER);
constraint int_ne(1,TWorkers_00002_00005_INTEGER);
constraint int_eq(TWorkers_00003_00005_INTEGER,1);
constraint int_ne(TWorkers_00004_00005_INTEGER,1);
constraint int_eq(TWorkers_00005_00005_INTEGER,1);
constraint int_eq(1,TWorkers_00006_00005_INTEGER);
constraint int_ne(1,TWorkers_00007_00005_INTEGER);
constraint int_eq(TWorkers_00008_00005_INTEGER,1);
constraint int_eq(1,TWorkers_00001_00006_INTEGER);
constraint int_eq(1,TWorkers_00002_00006_INTEGER);
constraint int_eq(TWorkers_00003_00006_INTEGER,1);
constraint int_eq(TWorkers_00004_00006_INTEGER,1);
constraint int_eq(TWorkers_00005_00006_INTEGER,1);
constraint int_eq(1,TWorkers_00006_00006_INTEGER);
constraint int_eq(1,TWorkers_00007_00006_INTEGER);
constraint int_eq(TWorkers_00008_00006_INTEGER,1);
constraint int_eq(1,TWorkers_00001_00007_INTEGER);
constraint int_eq(1,TWorkers_00002_00007_INTEGER);
constraint int_eq(TWorkers_00003_00007_INTEGER,1);
constraint int_eq(TWorkers_00004_00007_INTEGER,1);
constraint int_eq(TWorkers_00005_00007_INTEGER,1);
constraint int_eq(1,TWorkers_00006_00007_INTEGER);
constraint int_eq(1,TWorkers_00007_00007_INTEGER);
constraint int_eq(TWorkers_00008_00007_INTEGER,1);
constraint int_eq(1,TWorkers_00001_00008_INTEGER);
constraint int_ne(1,TWorkers_00002_00008_INTEGER);
constraint int_eq(TWorkers_00003_00008_INTEGER,1);
constraint int_eq(TWorkers_00004_00008_INTEGER,1);
constraint int_eq(TWorkers_00005_00008_INTEGER,1);
constraint int_eq(1,TWorkers_00006_00008_INTEGER);
constraint int_ne(1,TWorkers_00007_00008_INTEGER);
constraint int_eq(TWorkers_00008_00008_INTEGER,1);
constraint int_eq(1,TWorkers_00001_00009_INTEGER);
constraint int_eq(1,TWorkers_00002_00009_INTEGER);
constraint int_eq(TWorkers_00003_00009_INTEGER,1);
constraint int_ne(TWorkers_00004_00009_INTEGER,1);
constraint int_eq(TWorkers_00005_00009_INTEGER,1);
constraint int_eq(1,TWorkers_00006_00009_INTEGER);
constraint int_eq(1,TWorkers_00007_00009_INTEGER);
constraint int_ne(TWorkers_00008_00009_INTEGER,1);
constraint int_eq(1,TWorkers_00001_00010_INTEGER);
constraint int_ne(1,TWorkers_00002_00010_INTEGER);
constraint int_eq(TWorkers_00003_00010_INTEGER,1);
constraint int_ne(TWorkers_00004_00010_INTEGER,1);
constraint int_eq(TWorkers_00005_00010_INTEGER,1);
constraint int_eq(1,TWorkers_00006_00010_INTEGER);
constraint int_ne(1,TWorkers_00007_00010_INTEGER);
constraint int_eq(TWorkers_00008_00010_INTEGER,1);
constraint int_eq(1,TWorkers_00001_00011_INTEGER);
constraint int_ne(1,TWorkers_00002_00011_INTEGER);
constraint int_eq(TWorkers_00003_00011_INTEGER,1);
constraint int_ne(TWorkers_00004_00011_INTEGER,1);
constraint int_eq(TWorkers_00005_00011_INTEGER,1);
constraint int_ne(1,TWorkers_00006_00011_INTEGER);
constraint int_ne(1,TWorkers_00007_00011_INTEGER);
constraint int_eq(TWorkers_00008_00011_INTEGER,1);
constraint int_eq(1,TWorkers_00001_00012_INTEGER);
constraint int_eq(1,TWorkers_00002_00012_INTEGER);
constraint int_eq(TWorkers_00003_00012_INTEGER,1);
constraint int_eq(TWorkers_00004_00012_INTEGER,1);
constraint int_eq(TWorkers_00005_00012_INTEGER,1);
constraint int_eq(1,TWorkers_00006_00012_INTEGER);
constraint int_eq(1,TWorkers_00007_00012_INTEGER);
constraint int_eq(TWorkers_00008_00012_INTEGER,1);
constraint int_eq(1,TWorkers_00001_00013_INTEGER);
constraint int_eq(1,TWorkers_00002_00013_INTEGER);
constraint int_ne(TWorkers_00003_00013_INTEGER,1);
constraint int_eq(TWorkers_00004_00013_INTEGER,1);
constraint int_ne(TWorkers_00005_00013_INTEGER,1);
constraint int_eq(1,TWorkers_00006_00013_INTEGER);
constraint int_eq(1,TWorkers_00007_00013_INTEGER);
constraint int_eq(TWorkers_00008_00013_INTEGER,1);
constraint int_eq(1,TWorkers_00001_00014_INTEGER);
constraint int_eq(1,TWorkers_00002_00014_INTEGER);
constraint int_eq(TWorkers_00003_00014_INTEGER,1);
constraint int_eq(TWorkers_00004_00014_INTEGER,1);
constraint int_eq(TWorkers_00005_00014_INTEGER,1);
constraint int_eq(1,TWorkers_00006_00014_INTEGER);
constraint int_eq(1,TWorkers_00007_00014_INTEGER);
constraint int_eq(TWorkers_00008_00014_INTEGER,1);
constraint int_eq(1,TWorkers_00001_00015_INTEGER);
constraint int_eq(1,TWorkers_00002_00015_INTEGER);
constraint int_eq(TWorkers_00003_00015_INTEGER,1);
constraint int_eq(TWorkers_00004_00015_INTEGER,1);
constraint int_eq(TWorkers_00005_00015_INTEGER,1);
constraint int_eq(1,TWorkers_00006_00015_INTEGER);
constraint int_eq(1,TWorkers_00007_00015_INTEGER);
constraint int_eq(TWorkers_00008_00015_INTEGER,1);
constraint int_eq(1,TWorkers_00001_00016_INTEGER);
constraint int_eq(1,TWorkers_00002_00016_INTEGER);
constraint int_eq(TWorkers_00003_00016_INTEGER,1);
constraint int_eq(TWorkers_00004_00016_INTEGER,1);
constraint int_eq(TWorkers_00005_00016_INTEGER,1);
constraint int_eq(1,TWorkers_00006_00016_INTEGER);
constraint int_eq(1,TWorkers_00007_00016_INTEGER);
constraint int_eq(TWorkers_00008_00016_INTEGER,1);
constraint int_eq(1,TWorkers_00001_00017_INTEGER);
constraint int_eq(1,TWorkers_00002_00017_INTEGER);
constraint int_eq(TWorkers_00003_00017_INTEGER,1);
constraint int_ne(TWorkers_00004_00017_INTEGER,1);
constraint int_eq(TWorkers_00005_00017_INTEGER,1);
constraint int_eq(1,TWorkers_00006_00017_INTEGER);
constraint int_eq(1,TWorkers_00007_00017_INTEGER);
constraint int_eq(TWorkers_00008_00017_INTEGER,1);
constraint int_eq(1,TWorkers_00001_00018_INTEGER);
constraint int_eq(1,TWorkers_00002_00018_INTEGER);
constraint int_eq(TWorkers_00003_00018_INTEGER,1);
constraint int_eq(TWorkers_00004_00018_INTEGER,1);
constraint int_eq(TWorkers_00005_00018_INTEGER,1);
constraint int_eq(1,TWorkers_00006_00018_INTEGER);
constraint int_eq(1,TWorkers_00007_00018_INTEGER);
constraint int_eq(TWorkers_00008_00018_INTEGER,1);
constraint int_eq(1,TWorkers_00001_00019_INTEGER);
constraint int_eq(1,TWorkers_00002_00019_INTEGER);
constraint int_eq(TWorkers_00003_00019_INTEGER,1);
constraint int_eq(TWorkers_00004_00019_INTEGER,1);
constraint int_eq(TWorkers_00005_00019_INTEGER,1);
constraint int_eq(1,TWorkers_00006_00019_INTEGER);
constraint int_eq(1,TWorkers_00007_00019_INTEGER);
constraint int_eq(TWorkers_00008_00019_INTEGER,1);
constraint int_eq(1,TWorkers_00001_00020_INTEGER);
constraint int_eq(1,TWorkers_00002_00020_INTEGER);
constraint int_ne(TWorkers_00003_00020_INTEGER,1);
constraint int_eq(TWorkers_00004_00020_INTEGER,1);
constraint int_ne(TWorkers_00005_00020_INTEGER,1);
constraint int_eq(1,TWorkers_00006_00020_INTEGER);
constraint int_eq(1,TWorkers_00007_00020_INTEGER);
constraint int_eq(TWorkers_00008_00020_INTEGER,1);
constraint int_lin_le([-1,-1,-1,-1,1],[aux11_INTEGER,aux13_INTEGER,aux15_INTEGER,aux17_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux19_INTEGER,aux21_INTEGER,aux23_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux25_INTEGER,aux27_INTEGER,aux29_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,-1,1],[aux31_INTEGER,aux33_INTEGER,aux35_INTEGER,aux37_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux39_INTEGER,aux41_INTEGER,aux43_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux45_INTEGER,aux47_INTEGER,aux49_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux51_INTEGER,aux53_INTEGER,aux55_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux57_INTEGER,aux59_INTEGER,aux61_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux63_INTEGER,aux65_INTEGER,aux67_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux69_INTEGER,aux71_INTEGER,aux73_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux75_INTEGER,aux77_INTEGER,aux79_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux81_INTEGER,aux83_INTEGER,aux85_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux87_INTEGER,aux89_INTEGER,aux91_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,1],[aux93_INTEGER,aux95_INTEGER,aux97_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,-1,1],[aux101_INTEGER,aux103_INTEGER,aux105_INTEGER,aux99_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux107_INTEGER,aux109_INTEGER,aux111_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,-1,1],[aux113_INTEGER,aux115_INTEGER,aux117_INTEGER,aux119_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux121_INTEGER,aux123_INTEGER,aux125_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,-1,1],[aux127_INTEGER,aux129_INTEGER,aux131_INTEGER,aux133_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux135_INTEGER,aux137_INTEGER,aux139_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux141_INTEGER,aux143_INTEGER,aux145_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux147_INTEGER,aux149_INTEGER,aux151_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux153_INTEGER,aux155_INTEGER,aux157_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,1],[aux159_INTEGER,aux161_INTEGER,aux163_INTEGER,aux165_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux167_INTEGER,aux169_INTEGER,aux171_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux173_INTEGER,aux175_INTEGER,aux177_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux179_INTEGER,aux181_INTEGER,aux183_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,-1,1],[aux185_INTEGER,aux187_INTEGER,aux189_INTEGER,aux191_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,1],[aux193_INTEGER,aux195_INTEGER,aux197_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux199_INTEGER,aux201_INTEGER,aux203_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,1],[aux205_INTEGER,aux207_INTEGER,aux209_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux211_INTEGER,aux213_INTEGER,aux215_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,1],[aux217_INTEGER,aux219_INTEGER,aux221_INTEGER,aux223_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,1],[aux225_INTEGER,aux227_INTEGER,aux229_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,1],[aux231_INTEGER,aux233_INTEGER,aux235_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux237_INTEGER,aux239_INTEGER,aux241_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux243_INTEGER,aux245_INTEGER,aux247_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,1],[aux249_INTEGER,aux251_INTEGER,aux253_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux255_INTEGER,aux257_INTEGER,aux259_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux261_INTEGER,aux263_INTEGER,aux265_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,1],[aux267_INTEGER,aux269_INTEGER,aux271_INTEGER,aux273_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,1],[aux275_INTEGER,aux277_INTEGER,aux279_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux281_INTEGER,aux283_INTEGER,aux285_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux287_INTEGER,aux289_INTEGER,aux291_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,1],[aux293_INTEGER,aux295_INTEGER,aux297_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,-1,1],[aux299_INTEGER,aux301_INTEGER,aux303_INTEGER,aux305_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux307_INTEGER,aux309_INTEGER,aux311_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux313_INTEGER,aux315_INTEGER,aux317_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,-1,1],[aux319_INTEGER,aux321_INTEGER,aux323_INTEGER,aux325_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux327_INTEGER,aux329_INTEGER,aux331_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux333_INTEGER,aux335_INTEGER,aux337_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,-1,1],[aux339_INTEGER,aux341_INTEGER,aux343_INTEGER,aux345_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,1],[aux347_INTEGER,aux349_INTEGER,aux351_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux353_INTEGER,aux355_INTEGER,aux357_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,1],[aux359_INTEGER,aux361_INTEGER,aux363_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,-1,1],[aux365_INTEGER,aux367_INTEGER,aux369_INTEGER,aux371_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,1],[aux373_INTEGER,aux375_INTEGER,aux377_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux379_INTEGER,aux381_INTEGER,aux383_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,1],[aux385_INTEGER,aux387_INTEGER,aux389_INTEGER,aux391_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux393_INTEGER,aux395_INTEGER,aux397_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux399_INTEGER,aux401_INTEGER,aux403_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,1],[aux405_INTEGER,aux407_INTEGER,aux409_INTEGER,1],0);
constraint int_lin_le([-1,-1,-1,1],[aux411_INTEGER,aux413_INTEGER,aux415_INTEGER,2],0);
constraint bool_clause([],[aux416_BOOL,w_00001_00001_BOOL]);
constraint bool_clause([],[aux417_BOOL,w_00002_00001_BOOL]);
constraint bool_clause([],[aux418_BOOL,w_00003_00001_BOOL]);
constraint bool_clause([],[aux419_BOOL,w_00004_00001_BOOL]);
constraint bool_clause([],[aux420_BOOL,w_00005_00001_BOOL]);
constraint bool_clause([],[aux421_BOOL,w_00006_00001_BOOL]);
constraint bool_clause([],[aux422_BOOL,w_00007_00001_BOOL]);
constraint bool_clause([],[aux423_BOOL,w_00008_00001_BOOL]);
constraint bool_clause([],[aux424_BOOL,w_00001_00002_BOOL]);
constraint bool_clause([],[aux425_BOOL,w_00002_00002_BOOL]);
constraint bool_clause([],[aux426_BOOL,w_00003_00002_BOOL]);
constraint bool_clause([],[aux427_BOOL,w_00004_00002_BOOL]);
constraint bool_clause([],[aux428_BOOL,w_00005_00002_BOOL]);
constraint bool_clause([],[aux429_BOOL,w_00006_00002_BOOL]);
constraint bool_clause([],[aux430_BOOL,w_00007_00002_BOOL]);
constraint bool_clause([],[aux431_BOOL,w_00008_00002_BOOL]);
constraint bool_clause([],[aux432_BOOL,w_00001_00003_BOOL]);
constraint bool_clause([],[aux433_BOOL,w_00002_00003_BOOL]);
constraint bool_clause([],[aux434_BOOL,w_00003_00003_BOOL]);
constraint bool_clause([],[aux435_BOOL,w_00004_00003_BOOL]);
constraint bool_clause([],[aux436_BOOL,w_00005_00003_BOOL]);
constraint bool_clause([],[aux437_BOOL,w_00006_00003_BOOL]);
constraint bool_clause([],[aux438_BOOL,w_00007_00003_BOOL]);
constraint bool_clause([],[aux439_BOOL,w_00008_00003_BOOL]);
constraint bool_clause([],[aux440_BOOL,w_00001_00004_BOOL]);
constraint bool_clause([],[aux441_BOOL,w_00002_00004_BOOL]);
constraint bool_clause([],[aux442_BOOL,w_00003_00004_BOOL]);
constraint bool_clause([],[aux443_BOOL,w_00004_00004_BOOL]);
constraint bool_clause([],[aux444_BOOL,w_00005_00004_BOOL]);
constraint bool_clause([],[aux445_BOOL,w_00006_00004_BOOL]);
constraint bool_clause([],[aux446_BOOL,w_00007_00004_BOOL]);
constraint bool_clause([],[aux447_BOOL,w_00008_00004_BOOL]);
constraint bool_clause([],[aux448_BOOL,w_00001_00005_BOOL]);
constraint bool_clause([],[aux449_BOOL,w_00002_00005_BOOL]);
constraint bool_clause([],[aux450_BOOL,w_00003_00005_BOOL]);
constraint bool_clause([],[aux451_BOOL,w_00004_00005_BOOL]);
constraint bool_clause([],[aux452_BOOL,w_00005_00005_BOOL]);
constraint bool_clause([],[aux453_BOOL,w_00006_00005_BOOL]);
constraint bool_clause([],[aux454_BOOL,w_00007_00005_BOOL]);
constraint bool_clause([],[aux455_BOOL,w_00008_00005_BOOL]);
constraint bool_clause([],[aux456_BOOL,w_00001_00006_BOOL]);
constraint bool_clause([],[aux457_BOOL,w_00002_00006_BOOL]);
constraint bool_clause([],[aux458_BOOL,w_00003_00006_BOOL]);
constraint bool_clause([],[aux459_BOOL,w_00004_00006_BOOL]);
constraint bool_clause([],[aux460_BOOL,w_00005_00006_BOOL]);
constraint bool_clause([],[aux461_BOOL,w_00006_00006_BOOL]);
constraint bool_clause([],[aux462_BOOL,w_00007_00006_BOOL]);
constraint bool_clause([],[aux463_BOOL,w_00008_00006_BOOL]);
constraint bool_clause([],[aux464_BOOL,w_00001_00007_BOOL]);
constraint bool_clause([],[aux465_BOOL,w_00002_00007_BOOL]);
constraint bool_clause([],[aux466_BOOL,w_00003_00007_BOOL]);
constraint bool_clause([],[aux467_BOOL,w_00004_00007_BOOL]);
constraint bool_clause([],[aux468_BOOL,w_00005_00007_BOOL]);
constraint bool_clause([],[aux469_BOOL,w_00006_00007_BOOL]);
constraint bool_clause([],[aux470_BOOL,w_00007_00007_BOOL]);
constraint bool_clause([],[aux471_BOOL,w_00008_00007_BOOL]);
constraint bool_clause([],[aux472_BOOL,w_00001_00008_BOOL]);
constraint bool_clause([],[aux473_BOOL,w_00002_00008_BOOL]);
constraint bool_clause([],[aux474_BOOL,w_00003_00008_BOOL]);
constraint bool_clause([],[aux475_BOOL,w_00004_00008_BOOL]);
constraint bool_clause([],[aux476_BOOL,w_00005_00008_BOOL]);
constraint bool_clause([],[aux477_BOOL,w_00006_00008_BOOL]);
constraint bool_clause([],[aux478_BOOL,w_00007_00008_BOOL]);
constraint bool_clause([],[aux479_BOOL,w_00008_00008_BOOL]);
constraint bool_clause([],[aux480_BOOL,w_00001_00009_BOOL]);
constraint bool_clause([],[aux481_BOOL,w_00002_00009_BOOL]);
constraint bool_clause([],[aux482_BOOL,w_00003_00009_BOOL]);
constraint bool_clause([],[aux483_BOOL,w_00004_00009_BOOL]);
constraint bool_clause([],[aux484_BOOL,w_00005_00009_BOOL]);
constraint bool_clause([],[aux485_BOOL,w_00006_00009_BOOL]);
constraint bool_clause([],[aux486_BOOL,w_00007_00009_BOOL]);
constraint bool_clause([],[aux487_BOOL,w_00008_00009_BOOL]);
constraint bool_clause([],[aux488_BOOL,w_00001_00010_BOOL]);
constraint bool_clause([],[aux489_BOOL,w_00002_00010_BOOL]);
constraint bool_clause([],[aux490_BOOL,w_00003_00010_BOOL]);
constraint bool_clause([],[aux491_BOOL,w_00004_00010_BOOL]);
constraint bool_clause([],[aux492_BOOL,w_00005_00010_BOOL]);
constraint bool_clause([],[aux493_BOOL,w_00006_00010_BOOL]);
constraint bool_clause([],[aux494_BOOL,w_00007_00010_BOOL]);
constraint bool_clause([],[aux495_BOOL,w_00008_00010_BOOL]);
constraint bool_clause([],[aux496_BOOL,w_00001_00011_BOOL]);
constraint bool_clause([],[aux497_BOOL,w_00002_00011_BOOL]);
constraint bool_clause([],[aux498_BOOL,w_00003_00011_BOOL]);
constraint bool_clause([],[aux499_BOOL,w_00004_00011_BOOL]);
constraint bool_clause([],[aux500_BOOL,w_00005_00011_BOOL]);
constraint bool_clause([],[aux501_BOOL,w_00006_00011_BOOL]);
constraint bool_clause([],[aux502_BOOL,w_00007_00011_BOOL]);
constraint bool_clause([],[aux503_BOOL,w_00008_00011_BOOL]);
constraint bool_clause([],[aux504_BOOL,w_00001_00012_BOOL]);
constraint bool_clause([],[aux505_BOOL,w_00002_00012_BOOL]);
constraint bool_clause([],[aux506_BOOL,w_00003_00012_BOOL]);
constraint bool_clause([],[aux507_BOOL,w_00004_00012_BOOL]);
constraint bool_clause([],[aux508_BOOL,w_00005_00012_BOOL]);
constraint bool_clause([],[aux509_BOOL,w_00006_00012_BOOL]);
constraint bool_clause([],[aux510_BOOL,w_00007_00012_BOOL]);
constraint bool_clause([],[aux511_BOOL,w_00008_00012_BOOL]);
constraint bool_clause([],[aux512_BOOL,w_00001_00013_BOOL]);
constraint bool_clause([],[aux513_BOOL,w_00002_00013_BOOL]);
constraint bool_clause([],[aux514_BOOL,w_00003_00013_BOOL]);
constraint bool_clause([],[aux515_BOOL,w_00004_00013_BOOL]);
constraint bool_clause([],[aux516_BOOL,w_00005_00013_BOOL]);
constraint bool_clause([],[aux517_BOOL,w_00006_00013_BOOL]);
constraint bool_clause([],[aux518_BOOL,w_00007_00013_BOOL]);
constraint bool_clause([],[aux519_BOOL,w_00008_00013_BOOL]);
constraint bool_clause([],[aux520_BOOL,w_00001_00014_BOOL]);
constraint bool_clause([],[aux521_BOOL,w_00002_00014_BOOL]);
constraint bool_clause([],[aux522_BOOL,w_00003_00014_BOOL]);
constraint bool_clause([],[aux523_BOOL,w_00004_00014_BOOL]);
constraint bool_clause([],[aux524_BOOL,w_00005_00014_BOOL]);
constraint bool_clause([],[aux525_BOOL,w_00006_00014_BOOL]);
constraint bool_clause([],[aux526_BOOL,w_00007_00014_BOOL]);
constraint bool_clause([],[aux527_BOOL,w_00008_00014_BOOL]);
constraint bool_clause([],[aux528_BOOL,w_00001_00015_BOOL]);
constraint bool_clause([],[aux529_BOOL,w_00002_00015_BOOL]);
constraint bool_clause([],[aux530_BOOL,w_00003_00015_BOOL]);
constraint bool_clause([],[aux531_BOOL,w_00004_00015_BOOL]);
constraint bool_clause([],[aux532_BOOL,w_00005_00015_BOOL]);
constraint bool_clause([],[aux533_BOOL,w_00006_00015_BOOL]);
constraint bool_clause([],[aux534_BOOL,w_00007_00015_BOOL]);
constraint bool_clause([],[aux535_BOOL,w_00008_00015_BOOL]);
constraint bool_clause([],[aux536_BOOL,w_00001_00016_BOOL]);
constraint bool_clause([],[aux537_BOOL,w_00002_00016_BOOL]);
constraint bool_clause([],[aux538_BOOL,w_00003_00016_BOOL]);
constraint bool_clause([],[aux539_BOOL,w_00004_00016_BOOL]);
constraint bool_clause([],[aux540_BOOL,w_00005_00016_BOOL]);
constraint bool_clause([],[aux541_BOOL,w_00006_00016_BOOL]);
constraint bool_clause([],[aux542_BOOL,w_00007_00016_BOOL]);
constraint bool_clause([],[aux543_BOOL,w_00008_00016_BOOL]);
constraint bool_clause([],[aux544_BOOL,w_00001_00017_BOOL]);
constraint bool_clause([],[aux545_BOOL,w_00002_00017_BOOL]);
constraint bool_clause([],[aux546_BOOL,w_00003_00017_BOOL]);
constraint bool_clause([],[aux547_BOOL,w_00004_00017_BOOL]);
constraint bool_clause([],[aux548_BOOL,w_00005_00017_BOOL]);
constraint bool_clause([],[aux549_BOOL,w_00006_00017_BOOL]);
constraint bool_clause([],[aux550_BOOL,w_00007_00017_BOOL]);
constraint bool_clause([],[aux551_BOOL,w_00008_00017_BOOL]);
constraint bool_clause([],[aux552_BOOL,w_00001_00018_BOOL]);
constraint bool_clause([],[aux553_BOOL,w_00002_00018_BOOL]);
constraint bool_clause([],[aux554_BOOL,w_00003_00018_BOOL]);
constraint bool_clause([],[aux555_BOOL,w_00004_00018_BOOL]);
constraint bool_clause([],[aux556_BOOL,w_00005_00018_BOOL]);
constraint bool_clause([],[aux557_BOOL,w_00006_00018_BOOL]);
constraint bool_clause([],[aux558_BOOL,w_00007_00018_BOOL]);
constraint bool_clause([],[aux559_BOOL,w_00008_00018_BOOL]);
constraint bool_clause([],[aux560_BOOL,w_00001_00019_BOOL]);
constraint bool_clause([],[aux561_BOOL,w_00002_00019_BOOL]);
constraint bool_clause([],[aux562_BOOL,w_00003_00019_BOOL]);
constraint bool_clause([],[aux563_BOOL,w_00004_00019_BOOL]);
constraint bool_clause([],[aux564_BOOL,w_00005_00019_BOOL]);
constraint bool_clause([],[aux565_BOOL,w_00006_00019_BOOL]);
constraint bool_clause([],[aux566_BOOL,w_00007_00019_BOOL]);
constraint bool_clause([],[aux567_BOOL,w_00008_00019_BOOL]);
constraint bool_clause([],[aux568_BOOL,w_00001_00020_BOOL]);
constraint bool_clause([],[aux569_BOOL,w_00002_00020_BOOL]);
constraint bool_clause([],[aux570_BOOL,w_00003_00020_BOOL]);
constraint bool_clause([],[aux571_BOOL,w_00004_00020_BOOL]);
constraint bool_clause([],[aux572_BOOL,w_00005_00020_BOOL]);
constraint bool_clause([],[aux573_BOOL,w_00006_00020_BOOL]);
constraint bool_clause([],[aux574_BOOL,w_00007_00020_BOOL]);
constraint bool_clause([],[aux575_BOOL,w_00008_00020_BOOL]);
constraint array_bool_or([aux2956_BOOL,aux2957_BOOL],true);
constraint array_bool_or([aux5338_BOOL,aux5339_BOOL],true);
constraint array_bool_or([aux7720_BOOL,aux7721_BOOL],true);
constraint array_bool_or([aux10102_BOOL,aux10103_BOOL],true);
constraint array_bool_or([aux12484_BOOL,aux12485_BOOL],true);
constraint array_bool_or([aux14866_BOOL,aux14867_BOOL],true);
constraint array_bool_or([aux17248_BOOL,aux17249_BOOL],true);
constraint array_bool_or([aux17250_BOOL,aux19631_BOOL],true);
constraint array_bool_or([aux19632_BOOL,aux19633_BOOL],true);
constraint array_bool_or([aux19634_BOOL,aux19635_BOOL],true);
constraint array_bool_or([aux19636_BOOL,aux19637_BOOL],true);
constraint array_bool_or([aux19638_BOOL,aux19639_BOOL],true);
constraint array_bool_or([aux19640_BOOL,aux19641_BOOL],true);
constraint array_bool_or([aux19642_BOOL,aux19643_BOOL],true);
constraint array_bool_or([aux19644_BOOL,aux19645_BOOL],true);
constraint array_bool_or([aux19646_BOOL,aux19647_BOOL],true);
constraint array_bool_or([aux19648_BOOL,aux19649_BOOL],true);
constraint array_bool_or([aux19650_BOOL,aux19651_BOOL],true);
constraint array_bool_or([aux19652_BOOL,aux19653_BOOL],true);
constraint array_bool_or([aux19654_BOOL,aux19655_BOOL],true);
constraint array_bool_or([aux19656_BOOL,aux19657_BOOL],true);
constraint array_bool_or([aux19658_BOOL,aux19659_BOOL],true);
constraint array_bool_or([aux19660_BOOL,aux19661_BOOL],true);
constraint array_bool_or([aux19662_BOOL,aux19663_BOOL],true);
constraint int_lin_le([1,2,1,1,1,1,2,2,2,1,2,1,-1],[aux19667_INTEGER,aux19671_INTEGER,aux19675_INTEGER,aux19679_INTEGER,aux19683_INTEGER,aux19687_INTEGER,aux19691_INTEGER,aux19695_INTEGER,aux19699_INTEGER,aux19703_INTEGER,aux19707_INTEGER,aux19709_INTEGER,3],0);
constraint int_lin_le([1,2,1,1,1,1,2,2,2,1,2,1,-1],[aux19713_INTEGER,aux19717_INTEGER,aux19721_INTEGER,aux19725_INTEGER,aux19729_INTEGER,aux19733_INTEGER,aux19737_INTEGER,aux19741_INTEGER,aux19745_INTEGER,aux19749_INTEGER,aux19753_INTEGER,aux19755_INTEGER,3],0);
constraint int_lin_le([1,1,2,1,1,1,2,2,2,1,2,1,-1],[aux19759_INTEGER,aux19763_INTEGER,aux19767_INTEGER,aux19771_INTEGER,aux19775_INTEGER,aux19779_INTEGER,aux19783_INTEGER,aux19787_INTEGER,aux19791_INTEGER,aux19795_INTEGER,aux19799_INTEGER,aux19801_INTEGER,3],0);
constraint int_lin_le([1,1,1,1,1,1,2,2,2,1,2,2,-1],[aux19805_INTEGER,aux19809_INTEGER,aux19813_INTEGER,aux19817_INTEGER,aux19821_INTEGER,aux19825_INTEGER,aux19829_INTEGER,aux19833_INTEGER,aux19837_INTEGER,aux19841_INTEGER,aux19845_INTEGER,aux19847_INTEGER,3],0);
constraint int_lin_le([1,1,2,1,1,1,2,2,2,1,2,1,-1],[aux19851_INTEGER,aux19855_INTEGER,aux19859_INTEGER,aux19863_INTEGER,aux19867_INTEGER,aux19871_INTEGER,aux19875_INTEGER,aux19879_INTEGER,aux19883_INTEGER,aux19887_INTEGER,aux19891_INTEGER,aux19893_INTEGER,3],0);
constraint int_lin_le([1,1,2,1,1,1,2,2,2,1,2,1,-1],[aux19897_INTEGER,aux19901_INTEGER,aux19905_INTEGER,aux19909_INTEGER,aux19913_INTEGER,aux19917_INTEGER,aux19921_INTEGER,aux19925_INTEGER,aux19929_INTEGER,aux19933_INTEGER,aux19937_INTEGER,aux19939_INTEGER,3],0);
constraint int_lin_le([1,1,2,1,1,1,1,2,2,1,2,2,-1],[aux19943_INTEGER,aux19947_INTEGER,aux19951_INTEGER,aux19955_INTEGER,aux19959_INTEGER,aux19963_INTEGER,aux19967_INTEGER,aux19971_INTEGER,aux19975_INTEGER,aux19979_INTEGER,aux19983_INTEGER,aux19985_INTEGER,3],0);
constraint int_lin_le([1,1,2,1,1,1,2,2,2,1,2,1,-1],[aux19989_INTEGER,aux19993_INTEGER,aux19997_INTEGER,aux20001_INTEGER,aux20005_INTEGER,aux20009_INTEGER,aux20013_INTEGER,aux20017_INTEGER,aux20021_INTEGER,aux20025_INTEGER,aux20029_INTEGER,aux20031_INTEGER,3],0);
constraint int_lin_le([1,1,2,1,1,1,1,2,2,1,2,2,-1],[aux20035_INTEGER,aux20039_INTEGER,aux20043_INTEGER,aux20047_INTEGER,aux20051_INTEGER,aux20055_INTEGER,aux20059_INTEGER,aux20063_INTEGER,aux20067_INTEGER,aux20071_INTEGER,aux20075_INTEGER,aux20077_INTEGER,3],0);
constraint int_lin_le([1,1,2,1,1,1,1,2,2,2,2,1,-1],[aux20081_INTEGER,aux20085_INTEGER,aux20089_INTEGER,aux20093_INTEGER,aux20097_INTEGER,aux20101_INTEGER,aux20105_INTEGER,aux20109_INTEGER,aux20113_INTEGER,aux20117_INTEGER,aux20121_INTEGER,aux20123_INTEGER,3],0);
constraint int_lin_le([1,1,2,1,1,1,1,2,2,2,1,2,-1],[aux20127_INTEGER,aux20131_INTEGER,aux20135_INTEGER,aux20139_INTEGER,aux20143_INTEGER,aux20147_INTEGER,aux20151_INTEGER,aux20155_INTEGER,aux20159_INTEGER,aux20163_INTEGER,aux20167_INTEGER,aux20169_INTEGER,3],0);
constraint int_lin_le([1,1,2,1,1,1,1,2,2,1,2,2,-1],[aux20173_INTEGER,aux20177_INTEGER,aux20181_INTEGER,aux20185_INTEGER,aux20189_INTEGER,aux20193_INTEGER,aux20197_INTEGER,aux20201_INTEGER,aux20205_INTEGER,aux20209_INTEGER,aux20213_INTEGER,aux20215_INTEGER,3],0);
constraint int_lin_le([1,1,1,2,2,2,1,1,1,1,1,1,1,-1],[aux20219_INTEGER,aux20223_INTEGER,aux20227_INTEGER,aux20231_INTEGER,aux20235_INTEGER,aux20239_INTEGER,aux20243_INTEGER,aux20247_INTEGER,aux20251_INTEGER,aux20255_INTEGER,aux20259_INTEGER,aux20263_INTEGER,aux20265_INTEGER,3],0);
constraint int_lin_le([1,1,1,1,2,2,2,1,1,1,1,1,1,-1],[aux20269_INTEGER,aux20273_INTEGER,aux20277_INTEGER,aux20281_INTEGER,aux20285_INTEGER,aux20289_INTEGER,aux20293_INTEGER,aux20297_INTEGER,aux20301_INTEGER,aux20305_INTEGER,aux20309_INTEGER,aux20313_INTEGER,aux20315_INTEGER,3],0);
constraint int_lin_le([1,1,1,2,2,2,1,1,1,1,1,1,1,-1],[aux20319_INTEGER,aux20323_INTEGER,aux20327_INTEGER,aux20331_INTEGER,aux20335_INTEGER,aux20339_INTEGER,aux20343_INTEGER,aux20347_INTEGER,aux20351_INTEGER,aux20355_INTEGER,aux20359_INTEGER,aux20363_INTEGER,aux20365_INTEGER,3],0);
constraint int_lin_le([1,1,1,2,2,2,1,1,1,1,1,1,1,-1],[aux20369_INTEGER,aux20373_INTEGER,aux20377_INTEGER,aux20381_INTEGER,aux20385_INTEGER,aux20389_INTEGER,aux20393_INTEGER,aux20397_INTEGER,aux20401_INTEGER,aux20405_INTEGER,aux20409_INTEGER,aux20413_INTEGER,aux20415_INTEGER,3],0);
constraint int_lin_le([1,1,1,1,2,2,1,1,1,1,1,1,2,-1],[aux20419_INTEGER,aux20423_INTEGER,aux20427_INTEGER,aux20431_INTEGER,aux20435_INTEGER,aux20439_INTEGER,aux20443_INTEGER,aux20447_INTEGER,aux20451_INTEGER,aux20455_INTEGER,aux20459_INTEGER,aux20463_INTEGER,aux20465_INTEGER,3],0);
constraint int_lin_le([1,1,1,2,2,2,1,1,1,1,1,1,1,-1],[aux20469_INTEGER,aux20473_INTEGER,aux20477_INTEGER,aux20481_INTEGER,aux20485_INTEGER,aux20489_INTEGER,aux20493_INTEGER,aux20497_INTEGER,aux20501_INTEGER,aux20505_INTEGER,aux20509_INTEGER,aux20513_INTEGER,aux20515_INTEGER,3],0);
constraint int_lin_le([1,1,1,1,2,2,1,1,1,1,1,1,2,-1],[aux20519_INTEGER,aux20523_INTEGER,aux20527_INTEGER,aux20531_INTEGER,aux20535_INTEGER,aux20539_INTEGER,aux20543_INTEGER,aux20547_INTEGER,aux20551_INTEGER,aux20555_INTEGER,aux20559_INTEGER,aux20563_INTEGER,aux20565_INTEGER,3],0);
constraint int_lin_le([1,1,1,1,2,2,1,1,1,1,1,1,2,-1],[aux20569_INTEGER,aux20573_INTEGER,aux20577_INTEGER,aux20581_INTEGER,aux20585_INTEGER,aux20589_INTEGER,aux20593_INTEGER,aux20597_INTEGER,aux20601_INTEGER,aux20605_INTEGER,aux20609_INTEGER,aux20613_INTEGER,aux20615_INTEGER,3],0);
constraint int_lin_le([1,1,1,1,2,2,2,1,1,1,1,1,1,-1],[aux20619_INTEGER,aux20623_INTEGER,aux20627_INTEGER,aux20631_INTEGER,aux20635_INTEGER,aux20639_INTEGER,aux20643_INTEGER,aux20647_INTEGER,aux20651_INTEGER,aux20655_INTEGER,aux20659_INTEGER,aux20663_INTEGER,aux20665_INTEGER,3],0);
constraint int_lin_le([1,1,1,1,2,2,2,1,1,1,1,1,1,-1],[aux20669_INTEGER,aux20673_INTEGER,aux20677_INTEGER,aux20681_INTEGER,aux20685_INTEGER,aux20689_INTEGER,aux20693_INTEGER,aux20697_INTEGER,aux20701_INTEGER,aux20705_INTEGER,aux20709_INTEGER,aux20713_INTEGER,aux20715_INTEGER,3],0);
constraint int_lin_le([1,1,1,1,2,2,2,1,1,1,1,1,1,-1],[aux20719_INTEGER,aux20723_INTEGER,aux20727_INTEGER,aux20731_INTEGER,aux20735_INTEGER,aux20739_INTEGER,aux20743_INTEGER,aux20747_INTEGER,aux20751_INTEGER,aux20755_INTEGER,aux20759_INTEGER,aux20763_INTEGER,aux20765_INTEGER,3],0);
constraint int_lin_le([1,1,1,1,2,2,2,1,1,1,1,1,1,-1],[aux20769_INTEGER,aux20773_INTEGER,aux20777_INTEGER,aux20781_INTEGER,aux20785_INTEGER,aux20789_INTEGER,aux20793_INTEGER,aux20797_INTEGER,aux20801_INTEGER,aux20805_INTEGER,aux20809_INTEGER,aux20813_INTEGER,aux20815_INTEGER,3],0);
constraint int_lin_le([1,1,1,1,2,2,2,1,1,1,1,1,1,-1],[aux20819_INTEGER,aux20823_INTEGER,aux20827_INTEGER,aux20831_INTEGER,aux20835_INTEGER,aux20839_INTEGER,aux20843_INTEGER,aux20847_INTEGER,aux20851_INTEGER,aux20855_INTEGER,aux20859_INTEGER,aux20863_INTEGER,aux20865_INTEGER,3],0);
constraint int_lin_le([2,1,1,1,2,1,2,1,1,1,1,2,2,1,-1],[aux20869_INTEGER,aux20873_INTEGER,aux20877_INTEGER,aux20881_INTEGER,aux20885_INTEGER,aux20889_INTEGER,aux20893_INTEGER,aux20897_INTEGER,aux20901_INTEGER,aux20905_INTEGER,aux20909_INTEGER,aux20913_INTEGER,aux20917_INTEGER,aux20919_INTEGER,4],0);
constraint int_lin_le([1,2,1,1,2,1,2,1,1,1,1,2,2,1,-1],[aux20923_INTEGER,aux20927_INTEGER,aux20931_INTEGER,aux20935_INTEGER,aux20939_INTEGER,aux20943_INTEGER,aux20947_INTEGER,aux20951_INTEGER,aux20955_INTEGER,aux20959_INTEGER,aux20963_INTEGER,aux20967_INTEGER,aux20971_INTEGER,aux20973_INTEGER,4],0);
constraint int_lin_le([1,2,1,1,2,1,2,1,1,1,1,2,2,1,-1],[aux20977_INTEGER,aux20981_INTEGER,aux20985_INTEGER,aux20989_INTEGER,aux20993_INTEGER,aux20997_INTEGER,aux21001_INTEGER,aux21005_INTEGER,aux21009_INTEGER,aux21013_INTEGER,aux21017_INTEGER,aux21021_INTEGER,aux21025_INTEGER,aux21027_INTEGER,4],0);
constraint int_lin_le([1,2,1,1,1,2,2,1,1,1,1,2,2,1,-1],[aux21031_INTEGER,aux21035_INTEGER,aux21039_INTEGER,aux21043_INTEGER,aux21047_INTEGER,aux21051_INTEGER,aux21055_INTEGER,aux21059_INTEGER,aux21063_INTEGER,aux21067_INTEGER,aux21071_INTEGER,aux21075_INTEGER,aux21079_INTEGER,aux21081_INTEGER,4],0);
constraint int_lin_le([1,2,1,1,2,1,2,1,1,1,1,2,2,1,-1],[aux21085_INTEGER,aux21089_INTEGER,aux21093_INTEGER,aux21097_INTEGER,aux21101_INTEGER,aux21105_INTEGER,aux21109_INTEGER,aux21113_INTEGER,aux21117_INTEGER,aux21121_INTEGER,aux21125_INTEGER,aux21129_INTEGER,aux21133_INTEGER,aux21135_INTEGER,4],0);
constraint int_lin_le([1,1,1,1,2,1,2,1,1,1,1,2,2,2,-1],[aux21139_INTEGER,aux21143_INTEGER,aux21147_INTEGER,aux21151_INTEGER,aux21155_INTEGER,aux21159_INTEGER,aux21163_INTEGER,aux21167_INTEGER,aux21171_INTEGER,aux21175_INTEGER,aux21179_INTEGER,aux21183_INTEGER,aux21187_INTEGER,aux21189_INTEGER,4],0);
constraint int_lin_le([1,2,1,1,1,1,2,1,1,1,1,2,2,2,-1],[aux21193_INTEGER,aux21197_INTEGER,aux21201_INTEGER,aux21205_INTEGER,aux21209_INTEGER,aux21213_INTEGER,aux21217_INTEGER,aux21221_INTEGER,aux21225_INTEGER,aux21229_INTEGER,aux21233_INTEGER,aux21237_INTEGER,aux21241_INTEGER,aux21243_INTEGER,4],0);
constraint int_lin_le([1,2,1,1,1,2,1,2,1,1,1,2,2,1,-1],[aux21247_INTEGER,aux21251_INTEGER,aux21255_INTEGER,aux21259_INTEGER,aux21263_INTEGER,aux21267_INTEGER,aux21271_INTEGER,aux21275_INTEGER,aux21279_INTEGER,aux21283_INTEGER,aux21287_INTEGER,aux21291_INTEGER,aux21295_INTEGER,aux21297_INTEGER,4],0);
constraint int_lin_le([1,2,1,1,1,2,1,2,1,1,1,1,2,2,-1],[aux21301_INTEGER,aux21305_INTEGER,aux21309_INTEGER,aux21313_INTEGER,aux21317_INTEGER,aux21321_INTEGER,aux21325_INTEGER,aux21329_INTEGER,aux21333_INTEGER,aux21337_INTEGER,aux21341_INTEGER,aux21345_INTEGER,aux21349_INTEGER,aux21351_INTEGER,4],0);
constraint int_lin_le([1,2,1,1,1,2,1,2,1,1,1,2,2,1,-1],[aux21355_INTEGER,aux21359_INTEGER,aux21363_INTEGER,aux21367_INTEGER,aux21371_INTEGER,aux21375_INTEGER,aux21379_INTEGER,aux21383_INTEGER,aux21387_INTEGER,aux21391_INTEGER,aux21395_INTEGER,aux21399_INTEGER,aux21403_INTEGER,aux21405_INTEGER,4],0);
constraint int_lin_le([1,2,1,1,1,2,1,2,1,1,1,2,2,1,-1],[aux21409_INTEGER,aux21413_INTEGER,aux21417_INTEGER,aux21421_INTEGER,aux21425_INTEGER,aux21429_INTEGER,aux21433_INTEGER,aux21437_INTEGER,aux21441_INTEGER,aux21445_INTEGER,aux21449_INTEGER,aux21453_INTEGER,aux21457_INTEGER,aux21459_INTEGER,4],0);
constraint int_lin_le([1,2,1,1,1,2,1,1,1,1,1,2,2,2,-1],[aux21463_INTEGER,aux21467_INTEGER,aux21471_INTEGER,aux21475_INTEGER,aux21479_INTEGER,aux21483_INTEGER,aux21487_INTEGER,aux21491_INTEGER,aux21495_INTEGER,aux21499_INTEGER,aux21503_INTEGER,aux21507_INTEGER,aux21511_INTEGER,aux21513_INTEGER,4],0);
constraint int_lin_le([1,2,1,1,1,2,1,2,1,1,1,1,2,2,-1],[aux21517_INTEGER,aux21521_INTEGER,aux21525_INTEGER,aux21529_INTEGER,aux21533_INTEGER,aux21537_INTEGER,aux21541_INTEGER,aux21545_INTEGER,aux21549_INTEGER,aux21553_INTEGER,aux21557_INTEGER,aux21561_INTEGER,aux21565_INTEGER,aux21567_INTEGER,4],0);
constraint int_lin_le([1,2,1,1,1,2,1,2,1,1,1,2,2,1,-1],[aux21571_INTEGER,aux21575_INTEGER,aux21579_INTEGER,aux21583_INTEGER,aux21587_INTEGER,aux21591_INTEGER,aux21595_INTEGER,aux21599_INTEGER,aux21603_INTEGER,aux21607_INTEGER,aux21611_INTEGER,aux21615_INTEGER,aux21619_INTEGER,aux21621_INTEGER,4],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,1,1,1,-1],[aux21625_INTEGER,aux21629_INTEGER,aux21633_INTEGER,aux21637_INTEGER,aux21641_INTEGER,aux21645_INTEGER,aux21649_INTEGER,aux21653_INTEGER,aux21657_INTEGER,aux21661_INTEGER,aux21663_INTEGER,3],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,1,1,1,-1],[aux21667_INTEGER,aux21671_INTEGER,aux21675_INTEGER,aux21679_INTEGER,aux21683_INTEGER,aux21687_INTEGER,aux21691_INTEGER,aux21695_INTEGER,aux21699_INTEGER,aux21703_INTEGER,aux21705_INTEGER,3],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,1,1,1,-1],[aux21709_INTEGER,aux21713_INTEGER,aux21717_INTEGER,aux21721_INTEGER,aux21725_INTEGER,aux21729_INTEGER,aux21733_INTEGER,aux21737_INTEGER,aux21741_INTEGER,aux21745_INTEGER,aux21747_INTEGER,3],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,1,1,1,-1],[aux21751_INTEGER,aux21755_INTEGER,aux21759_INTEGER,aux21763_INTEGER,aux21767_INTEGER,aux21771_INTEGER,aux21775_INTEGER,aux21779_INTEGER,aux21783_INTEGER,aux21787_INTEGER,aux21789_INTEGER,3],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,1,1,1,-1],[aux21793_INTEGER,aux21797_INTEGER,aux21801_INTEGER,aux21805_INTEGER,aux21809_INTEGER,aux21813_INTEGER,aux21817_INTEGER,aux21821_INTEGER,aux21825_INTEGER,aux21829_INTEGER,aux21831_INTEGER,3],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,1,1,1,-1],[aux21835_INTEGER,aux21839_INTEGER,aux21843_INTEGER,aux21847_INTEGER,aux21851_INTEGER,aux21855_INTEGER,aux21859_INTEGER,aux21863_INTEGER,aux21867_INTEGER,aux21871_INTEGER,aux21873_INTEGER,3],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,1,1,1,-1],[aux21877_INTEGER,aux21881_INTEGER,aux21885_INTEGER,aux21889_INTEGER,aux21893_INTEGER,aux21897_INTEGER,aux21901_INTEGER,aux21905_INTEGER,aux21909_INTEGER,aux21913_INTEGER,aux21915_INTEGER,3],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,1,1,1,-1],[aux21919_INTEGER,aux21923_INTEGER,aux21927_INTEGER,aux21931_INTEGER,aux21935_INTEGER,aux21939_INTEGER,aux21943_INTEGER,aux21947_INTEGER,aux21951_INTEGER,aux21955_INTEGER,aux21957_INTEGER,3],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,1,1,1,-1],[aux21961_INTEGER,aux21965_INTEGER,aux21969_INTEGER,aux21973_INTEGER,aux21977_INTEGER,aux21981_INTEGER,aux21985_INTEGER,aux21989_INTEGER,aux21993_INTEGER,aux21997_INTEGER,aux21999_INTEGER,3],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,1,1,1,-1],[aux22003_INTEGER,aux22007_INTEGER,aux22011_INTEGER,aux22015_INTEGER,aux22019_INTEGER,aux22023_INTEGER,aux22027_INTEGER,aux22031_INTEGER,aux22035_INTEGER,aux22039_INTEGER,aux22041_INTEGER,3],0);
constraint int_lin_le([1,1,1,1,1,1,1,1,1,1,1,-1],[aux22045_INTEGER,aux22049_INTEGER,aux22053_INTEGER,aux22057_INTEGER,aux22061_INTEGER,aux22065_INTEGER,aux22069_INTEGER,aux22073_INTEGER,aux22077_INTEGER,aux22081_INTEGER,aux22083_INTEGER,3],0);
constraint int_lin_le([1,1,1,1,2,1,2,2,1,1,1,2,1,-1],[aux22087_INTEGER,aux22091_INTEGER,aux22095_INTEGER,aux22099_INTEGER,aux22103_INTEGER,aux22107_INTEGER,aux22111_INTEGER,aux22115_INTEGER,aux22119_INTEGER,aux22123_INTEGER,aux22127_INTEGER,aux22131_INTEGER,aux22133_INTEGER,3],0);
constraint int_lin_le([1,1,1,1,2,1,2,2,1,1,1,2,1,-1],[aux22137_INTEGER,aux22141_INTEGER,aux22145_INTEGER,aux22149_INTEGER,aux22153_INTEGER,aux22157_INTEGER,aux22161_INTEGER,aux22165_INTEGER,aux22169_INTEGER,aux22173_INTEGER,aux22177_INTEGER,aux22181_INTEGER,aux22183_INTEGER,3],0);
constraint int_lin_le([1,1,1,1,2,1,2,2,1,1,1,2,1,-1],[aux22187_INTEGER,aux22191_INTEGER,aux22195_INTEGER,aux22199_INTEGER,aux22203_INTEGER,aux22207_INTEGER,aux22211_INTEGER,aux22215_INTEGER,aux22219_INTEGER,aux22223_INTEGER,aux22227_INTEGER,aux22231_INTEGER,aux22233_INTEGER,3],0);
constraint int_lin_le([1,1,1,1,1,2,2,2,1,1,1,2,1,-1],[aux22237_INTEGER,aux22241_INTEGER,aux22245_INTEGER,aux22249_INTEGER,aux22253_INTEGER,aux22257_INTEGER,aux22261_INTEGER,aux22265_INTEGER,aux22269_INTEGER,aux22273_INTEGER,aux22277_INTEGER,aux22281_INTEGER,aux22283_INTEGER,3],0);
constraint int_lin_le([1,1,1,1,2,1,2,2,1,1,1,2,1,-1],[aux22287_INTEGER,aux22291_INTEGER,aux22295_INTEGER,aux22299_INTEGER,aux22303_INTEGER,aux22307_INTEGER,aux22311_INTEGER,aux22315_INTEGER,aux22319_INTEGER,aux22323_INTEGER,aux22327_INTEGER,aux22331_INTEGER,aux22333_INTEGER,3],0);
constraint int_lin_le([1,1,1,1,2,1,2,2,1,1,1,2,1,-1],[aux22337_INTEGER,aux22341_INTEGER,aux22345_INTEGER,aux22349_INTEGER,aux22353_INTEGER,aux22357_INTEGER,aux22361_INTEGER,aux22365_INTEGER,aux22369_INTEGER,aux22373_INTEGER,aux22377_INTEGER,aux22381_INTEGER,aux22383_INTEGER,3],0);
constraint int_lin_le([1,1,1,1,1,2,1,2,1,1,1,2,2,-1],[aux22387_INTEGER,aux22391_INTEGER,aux22395_INTEGER,aux22399_INTEGER,aux22403_INTEGER,aux22407_INTEGER,aux22411_INTEGER,aux22415_INTEGER,aux22419_INTEGER,aux22423_INTEGER,aux22427_INTEGER,aux22431_INTEGER,aux22433_INTEGER,3],0);
constraint int_lin_le([1,1,1,1,1,1,2,2,1,1,1,2,2,-1],[aux22437_INTEGER,aux22441_INTEGER,aux22445_INTEGER,aux22449_INTEGER,aux22453_INTEGER,aux22457_INTEGER,aux22461_INTEGER,aux22465_INTEGER,aux22469_INTEGER,aux22473_INTEGER,aux22477_INTEGER,aux22481_INTEGER,aux22483_INTEGER,3],0);
constraint int_lin_le([1,1,1,1,1,2,1,2,2,1,1,2,1,-1],[aux22487_INTEGER,aux22491_INTEGER,aux22495_INTEGER,aux22499_INTEGER,aux22503_INTEGER,aux22507_INTEGER,aux22511_INTEGER,aux22515_INTEGER,aux22519_INTEGER,aux22523_INTEGER,aux22527_INTEGER,aux22531_INTEGER,aux22533_INTEGER,3],0);
constraint int_lin_le([1,1,1,1,1,2,1,2,2,1,1,2,1,-1],[aux22537_INTEGER,aux22541_INTEGER,aux22545_INTEGER,aux22549_INTEGER,aux22553_INTEGER,aux22557_INTEGER,aux22561_INTEGER,aux22565_INTEGER,aux22569_INTEGER,aux22573_INTEGER,aux22577_INTEGER,aux22581_INTEGER,aux22583_INTEGER,3],0);
constraint int_lin_le([1,1,1,1,1,2,1,2,2,1,1,2,1,-1],[aux22587_INTEGER,aux22591_INTEGER,aux22595_INTEGER,aux22599_INTEGER,aux22603_INTEGER,aux22607_INTEGER,aux22611_INTEGER,aux22615_INTEGER,aux22619_INTEGER,aux22623_INTEGER,aux22627_INTEGER,aux22631_INTEGER,aux22633_INTEGER,3],0);
constraint int_lin_le([1,1,1,1,1,2,1,2,1,1,1,2,2,-1],[aux22637_INTEGER,aux22641_INTEGER,aux22645_INTEGER,aux22649_INTEGER,aux22653_INTEGER,aux22657_INTEGER,aux22661_INTEGER,aux22665_INTEGER,aux22669_INTEGER,aux22673_INTEGER,aux22677_INTEGER,aux22681_INTEGER,aux22683_INTEGER,3],0);
constraint int_lin_le([1,1,1,1,1,2,1,2,2,1,1,1,2,-1],[aux22687_INTEGER,aux22691_INTEGER,aux22695_INTEGER,aux22699_INTEGER,aux22703_INTEGER,aux22707_INTEGER,aux22711_INTEGER,aux22715_INTEGER,aux22719_INTEGER,aux22723_INTEGER,aux22727_INTEGER,aux22731_INTEGER,aux22733_INTEGER,3],0);
constraint int_lin_le([1,1,-1],[3,s_00018,objective],0);
constraint int_lin_le([1,1,-1],[2,s_00019,objective],0);
constraint int_lin_le([1,1,-1],[3,s_00020,objective],0);

solve :: int_search([s_00001, s_00002, s_00003, s_00004, s_00005, s_00006, s_00007, s_00008, s_00009, s_00010, s_00011, s_00012, s_00013, s_00014, s_00015, s_00016, s_00017, s_00018, s_00019, s_00020, w_00001_00001_INTEGER, w_00001_00002_INTEGER, w_00001_00003_INTEGER, w_00001_00004_INTEGER, w_00001_00005_INTEGER, w_00001_00006_INTEGER, w_00001_00007_INTEGER, w_00001_00008_INTEGER, w_00001_00009_INTEGER, w_00001_00010_INTEGER, w_00001_00011_INTEGER, w_00001_00012_INTEGER, w_00001_00013_INTEGER, w_00001_00014_INTEGER, w_00001_00015_INTEGER, w_00001_00016_INTEGER, w_00001_00017_INTEGER, w_00001_00018_INTEGER, w_00001_00019_INTEGER, w_00001_00020_INTEGER, w_00002_00001_INTEGER, w_00002_00002_INTEGER, w_00002_00003_INTEGER, w_00002_00004_INTEGER, w_00002_00005_INTEGER, w_00002_00006_INTEGER, w_00002_00007_INTEGER, w_00002_00008_INTEGER, w_00002_00009_INTEGER, w_00002_00010_INTEGER, w_00002_00011_INTEGER, w_00002_00012_INTEGER, w_00002_00013_INTEGER, w_00002_00014_INTEGER, w_00002_00015_INTEGER, w_00002_00016_INTEGER, w_00002_00017_INTEGER, w_00002_00018_INTEGER, w_00002_00019_INTEGER, w_00002_00020_INTEGER, w_00003_00001_INTEGER, w_00003_00002_INTEGER, w_00003_00003_INTEGER, w_00003_00004_INTEGER, w_00003_00005_INTEGER, w_00003_00006_INTEGER, w_00003_00007_INTEGER, w_00003_00008_INTEGER, w_00003_00009_INTEGER, w_00003_00010_INTEGER, w_00003_00011_INTEGER, w_00003_00012_INTEGER, w_00003_00013_INTEGER, w_00003_00014_INTEGER, w_00003_00015_INTEGER, w_00003_00016_INTEGER, w_00003_00017_INTEGER, w_00003_00018_INTEGER, w_00003_00019_INTEGER, w_00003_00020_INTEGER, w_00004_00001_INTEGER, w_00004_00002_INTEGER, w_00004_00003_INTEGER, w_00004_00004_INTEGER, w_00004_00005_INTEGER, w_00004_00006_INTEGER, w_00004_00007_INTEGER, w_00004_00008_INTEGER, w_00004_00009_INTEGER, w_00004_00010_INTEGER, w_00004_00011_INTEGER, w_00004_00012_INTEGER, w_00004_00013_INTEGER, w_00004_00014_INTEGER, w_00004_00015_INTEGER, w_00004_00016_INTEGER, w_00004_00017_INTEGER, w_00004_00018_INTEGER, w_00004_00019_INTEGER, w_00004_00020_INTEGER, w_00005_00001_INTEGER, w_00005_00002_INTEGER, w_00005_00003_INTEGER, w_00005_00004_INTEGER, w_00005_00005_INTEGER, w_00005_00006_INTEGER, w_00005_00007_INTEGER, w_00005_00008_INTEGER, w_00005_00009_INTEGER, w_00005_00010_INTEGER, w_00005_00011_INTEGER, w_00005_00012_INTEGER, w_00005_00013_INTEGER, w_00005_00014_INTEGER, w_00005_00015_INTEGER, w_00005_00016_INTEGER, w_00005_00017_INTEGER, w_00005_00018_INTEGER, w_00005_00019_INTEGER, w_00005_00020_INTEGER, w_00006_00001_INTEGER, w_00006_00002_INTEGER, w_00006_00003_INTEGER, w_00006_00004_INTEGER, w_00006_00005_INTEGER, w_00006_00006_INTEGER, w_00006_00007_INTEGER, w_00006_00008_INTEGER, w_00006_00009_INTEGER, w_00006_00010_INTEGER, w_00006_00011_INTEGER, w_00006_00012_INTEGER, w_00006_00013_INTEGER, w_00006_00014_INTEGER, w_00006_00015_INTEGER, w_00006_00016_INTEGER, w_00006_00017_INTEGER, w_00006_00018_INTEGER, w_00006_00019_INTEGER, w_00006_00020_INTEGER, w_00007_00001_INTEGER, w_00007_00002_INTEGER, w_00007_00003_INTEGER, w_00007_00004_INTEGER, w_00007_00005_INTEGER, w_00007_00006_INTEGER, w_00007_00007_INTEGER, w_00007_00008_INTEGER, w_00007_00009_INTEGER, w_00007_00010_INTEGER, w_00007_00011_INTEGER, w_00007_00012_INTEGER, w_00007_00013_INTEGER, w_00007_00014_INTEGER, w_00007_00015_INTEGER, w_00007_00016_INTEGER, w_00007_00017_INTEGER, w_00007_00018_INTEGER, w_00007_00019_INTEGER, w_00007_00020_INTEGER, w_00008_00001_INTEGER, w_00008_00002_INTEGER, w_00008_00003_INTEGER, w_00008_00004_INTEGER, w_00008_00005_INTEGER, w_00008_00006_INTEGER, w_00008_00007_INTEGER, w_00008_00008_INTEGER, w_00008_00009_INTEGER, w_00008_00010_INTEGER, w_00008_00011_INTEGER, w_00008_00012_INTEGER, w_00008_00013_INTEGER, w_00008_00014_INTEGER, w_00008_00015_INTEGER, w_00008_00016_INTEGER, w_00008_00017_INTEGER, w_00008_00018_INTEGER, w_00008_00019_INTEGER, w_00008_00020_INTEGER, objective], input_order, indomain_min, complete)
minimize objective;
