predicate all_different_int(array [int] of var int: xs);
array [1..64] of int: aux0 = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4];
var 2..7: opponent_00001_00001:: output_var ;
var 2..8: opponent_00001_00002:: output_var ;
var 2..8: opponent_00001_00003:: output_var ;
var 2..8: opponent_00001_00004:: output_var ;
var 2..8: opponent_00001_00005:: output_var ;
var 2..8: opponent_00001_00006:: output_var ;
var 3..8: opponent_00001_00007:: output_var ;
var {1,3,4,5,6,7,8}: opponent_00002_00001:: output_var ;
var {1,3,4,5,6,7,8}: opponent_00002_00002:: output_var ;
var {1,3,4,5,6,7,8}: opponent_00002_00003:: output_var ;
var {1,3,4,5,6,7,8}: opponent_00002_00004:: output_var ;
var {1,3,4,5,6,7,8}: opponent_00002_00005:: output_var ;
var {1,3,4,5,6,7,8}: opponent_00002_00006:: output_var ;
var 3..8: opponent_00002_00007:: output_var ;
var {1,2,4,5,6,7,8}: opponent_00003_00001:: output_var ;
var {1,2,4,5,6,7,8}: opponent_00003_00002:: output_var ;
var {1,2,4,5,6,7,8}: opponent_00003_00003:: output_var ;
var {1,2,4,5,6,7,8}: opponent_00003_00004:: output_var ;
var {1,2,4,5,6,7,8}: opponent_00003_00005:: output_var ;
var {1,2,4,5,6,7,8}: opponent_00003_00006:: output_var ;
var {1,2,4,5,6,7,8}: opponent_00003_00007:: output_var ;
var {1,2,3,5,6,7,8}: opponent_00004_00001:: output_var ;
var {1,2,3,5,6,7,8}: opponent_00004_00002:: output_var ;
var {1,2,3,5,6,7,8}: opponent_00004_00003:: output_var ;
var {1,2,3,5,6,7,8}: opponent_00004_00004:: output_var ;
var {1,2,3,5,6,7,8}: opponent_00004_00005:: output_var ;
var {1,2,3,5,6,7,8}: opponent_00004_00006:: output_var ;
var {1,2,3,5,6,7,8}: opponent_00004_00007:: output_var ;
var {1,2,3,4,6,7,8}: opponent_00005_00001:: output_var ;
var {1,2,3,4,6,7,8}: opponent_00005_00002:: output_var ;
var {1,2,3,4,6,7,8}: opponent_00005_00003:: output_var ;
var {1,2,3,4,6,7,8}: opponent_00005_00004:: output_var ;
var {1,2,3,4,6,7,8}: opponent_00005_00005:: output_var ;
var {1,2,3,4,6,7,8}: opponent_00005_00006:: output_var ;
var {1,2,3,4,6,7,8}: opponent_00005_00007:: output_var ;
var {1,2,3,4,5,7,8}: opponent_00006_00001:: output_var ;
var {1,2,3,4,5,7,8}: opponent_00006_00002:: output_var ;
var {1,2,3,4,5,7,8}: opponent_00006_00003:: output_var ;
var {1,2,3,4,5,7,8}: opponent_00006_00004:: output_var ;
var {1,2,3,4,5,7,8}: opponent_00006_00005:: output_var ;
var {1,2,3,4,5,7,8}: opponent_00006_00006:: output_var ;
var {1,2,3,4,5,7,8}: opponent_00006_00007:: output_var ;
var {1,2,3,4,5,6,8}: opponent_00007_00001:: output_var ;
var {1,2,3,4,5,6,8}: opponent_00007_00002:: output_var ;
var {1,2,3,4,5,6,8}: opponent_00007_00003:: output_var ;
var {1,2,3,4,5,6,8}: opponent_00007_00004:: output_var ;
var {1,2,3,4,5,6,8}: opponent_00007_00005:: output_var ;
var {1,2,3,4,5,6,8}: opponent_00007_00006:: output_var ;
var {1,2,3,4,5,6,8}: opponent_00007_00007:: output_var ;
var 2..7: opponent_00008_00001:: output_var ;
var 1..7: opponent_00008_00002:: output_var ;
var 1..7: opponent_00008_00003:: output_var ;
var 1..7: opponent_00008_00004:: output_var ;
var 1..7: opponent_00008_00005:: output_var ;
var 1..7: opponent_00008_00006:: output_var ;
var 1..7: opponent_00008_00007:: output_var ;
var 1..2: venue_00001_00001:: output_var ;
var 1..2: venue_00001_00002:: output_var ;
var 1..2: venue_00001_00003:: output_var ;
var 1..2: venue_00001_00004:: output_var ;
var 1..2: venue_00001_00005:: output_var ;
var 1..2: venue_00001_00006:: output_var ;
var 1..2: venue_00001_00007:: output_var ;
var 1..2: venue_00002_00001:: output_var ;
var 1..2: venue_00002_00002:: output_var ;
var 1..2: venue_00002_00003:: output_var ;
var 1..2: venue_00002_00004:: output_var ;
var 1..2: venue_00002_00005:: output_var ;
var 1..2: venue_00002_00006:: output_var ;
var 1..2: venue_00002_00007:: output_var ;
var 1..2: venue_00003_00001:: output_var ;
var 1..2: venue_00003_00002:: output_var ;
var 1..2: venue_00003_00003:: output_var ;
var 1..2: venue_00003_00004:: output_var ;
var 1..2: venue_00003_00005:: output_var ;
var 1..2: venue_00003_00006:: output_var ;
var 1..2: venue_00003_00007:: output_var ;
var 1..2: venue_00004_00001:: output_var ;
var 1..2: venue_00004_00002:: output_var ;
var 1..2: venue_00004_00003:: output_var ;
var 1..2: venue_00004_00004:: output_var ;
var 1..2: venue_00004_00005:: output_var ;
var 1..2: venue_00004_00006:: output_var ;
var 1..2: venue_00004_00007:: output_var ;
var 1..2: venue_00005_00001:: output_var ;
var 1..2: venue_00005_00002:: output_var ;
var 1..2: venue_00005_00003:: output_var ;
var 1..2: venue_00005_00004:: output_var ;
var 1..2: venue_00005_00005:: output_var ;
var 1..2: venue_00005_00006:: output_var ;
var 1..2: venue_00005_00007:: output_var ;
var 1..2: venue_00006_00001:: output_var ;
var 1..2: venue_00006_00002:: output_var ;
var 1..2: venue_00006_00003:: output_var ;
var 1..2: venue_00006_00004:: output_var ;
var 1..2: venue_00006_00005:: output_var ;
var 1..2: venue_00006_00006:: output_var ;
var 1..2: venue_00006_00007:: output_var ;
var 1..2: venue_00007_00001:: output_var ;
var 1..2: venue_00007_00002:: output_var ;
var 1..2: venue_00007_00003:: output_var ;
var 1..2: venue_00007_00004:: output_var ;
var 1..2: venue_00007_00005:: output_var ;
var 1..2: venue_00007_00006:: output_var ;
var 1..2: venue_00007_00007:: output_var ;
var 1..2: venue_00008_00001:: output_var ;
var 1..2: venue_00008_00002:: output_var ;
var 1..2: venue_00008_00003:: output_var ;
var 1..2: venue_00008_00004:: output_var ;
var 1..2: venue_00008_00005:: output_var ;
var 1..2: venue_00008_00006:: output_var ;
var 1..2: venue_00008_00007:: output_var ;
var 0..3: travel_00001_00001:: output_var ;
var 0..4: travel_00001_00002:: output_var ;
var 0..4: travel_00001_00003:: output_var ;
var 0..4: travel_00001_00004:: output_var ;
var 0..4: travel_00001_00005:: output_var ;
var 0..4: travel_00001_00006:: output_var ;
var 0..4: travel_00001_00007:: output_var ;
var 0..3: travel_00001_00008:: output_var ;
var 0..4: travel_00002_00001:: output_var ;
var 0..4: travel_00002_00002:: output_var ;
var 0..4: travel_00002_00003:: output_var ;
var 0..4: travel_00002_00004:: output_var ;
var 0..4: travel_00002_00005:: output_var ;
var 0..4: travel_00002_00006:: output_var ;
var 0..4: travel_00002_00007:: output_var ;
var 0..4: travel_00002_00008:: output_var ;
var 0..4: travel_00003_00001:: output_var ;
var 0..4: travel_00003_00002:: output_var ;
var 0..4: travel_00003_00003:: output_var ;
var 0..4: travel_00003_00004:: output_var ;
var 0..4: travel_00003_00005:: output_var ;
var 0..4: travel_00003_00006:: output_var ;
var 0..4: travel_00003_00007:: output_var ;
var 0..4: travel_00003_00008:: output_var ;
var 0..4: travel_00004_00001:: output_var ;
var 0..4: travel_00004_00002:: output_var ;
var 0..4: travel_00004_00003:: output_var ;
var 0..4: travel_00004_00004:: output_var ;
var 0..4: travel_00004_00005:: output_var ;
var 0..4: travel_00004_00006:: output_var ;
var 0..4: travel_00004_00007:: output_var ;
var 0..4: travel_00004_00008:: output_var ;
var 0..4: travel_00005_00001:: output_var ;
var 0..4: travel_00005_00002:: output_var ;
var 0..4: travel_00005_00003:: output_var ;
var 0..4: travel_00005_00004:: output_var ;
var 0..4: travel_00005_00005:: output_var ;
var 0..4: travel_00005_00006:: output_var ;
var 0..4: travel_00005_00007:: output_var ;
var 0..4: travel_00005_00008:: output_var ;
var 0..3: travel_00006_00001:: output_var ;
var 0..4: travel_00006_00002:: output_var ;
var 0..4: travel_00006_00003:: output_var ;
var 0..4: travel_00006_00004:: output_var ;
var 0..4: travel_00006_00005:: output_var ;
var 0..4: travel_00006_00006:: output_var ;
var 0..4: travel_00006_00007:: output_var ;
var 0..3: travel_00006_00008:: output_var ;
var 0..3: travel_00007_00001:: output_var ;
var 0..4: travel_00007_00002:: output_var ;
var 0..4: travel_00007_00003:: output_var ;
var 0..4: travel_00007_00004:: output_var ;
var 0..4: travel_00007_00005:: output_var ;
var 0..4: travel_00007_00006:: output_var ;
var 0..4: travel_00007_00007:: output_var ;
var 0..3: travel_00007_00008:: output_var ;
var 0..3: travel_00008_00001:: output_var ;
var 0..4: travel_00008_00002:: output_var ;
var 0..4: travel_00008_00003:: output_var ;
var 0..4: travel_00008_00004:: output_var ;
var 0..4: travel_00008_00005:: output_var ;
var 0..4: travel_00008_00006:: output_var ;
var 0..4: travel_00008_00007:: output_var ;
var 0..3: travel_00008_00008:: output_var ;
var 1..244: objective:: output_var ;
var 1..4: aux1:: var_is_introduced ;
var 1..4: aux2:: var_is_introduced ;
var 1..4: aux3:: var_is_introduced ;
var 1..4: aux4:: var_is_introduced ;
var 1..4: aux5:: var_is_introduced ;
var 1..4: aux6:: var_is_introduced ;
var 1..4: aux7:: var_is_introduced ;
var 1..4: aux8:: var_is_introduced ;
var 1..4: aux9:: var_is_introduced ;
var 1..4: aux10:: var_is_introduced ;
var 1..4: aux11:: var_is_introduced ;
var 1..4: aux12:: var_is_introduced ;
var 1..4: aux13:: var_is_introduced ;
var 1..4: aux14:: var_is_introduced ;
var 1..4: aux15:: var_is_introduced ;
var 1..4: aux16:: var_is_introduced ;
var 1..4: aux17:: var_is_introduced ;
var 1..4: aux18:: var_is_introduced ;
var 1..4: aux19:: var_is_introduced ;
var 1..4: aux20:: var_is_introduced ;
var 1..4: aux21:: var_is_introduced ;
var 1..4: aux22:: var_is_introduced ;
var 1..4: aux23:: var_is_introduced ;
var 1..4: aux24:: var_is_introduced ;
var 1..4: aux25:: var_is_introduced ;
var 1..4: aux26:: var_is_introduced ;
var 1..4: aux27:: var_is_introduced ;
var 1..4: aux28:: var_is_introduced ;
var 1..4: aux29:: var_is_introduced ;
var 1..4: aux30:: var_is_introduced ;
var 1..4: aux31:: var_is_introduced ;
var 1..4: aux32:: var_is_introduced ;
var 1..4: aux33:: var_is_introduced ;
var 1..4: aux34:: var_is_introduced ;
var 1..4: aux35:: var_is_introduced ;
var 1..4: aux36:: var_is_introduced ;
var 1..4: aux37:: var_is_introduced ;
var 1..4: aux38:: var_is_introduced ;
var 1..4: aux39:: var_is_introduced ;
var 1..4: aux40:: var_is_introduced ;
var 1..4: aux41:: var_is_introduced ;
var 1..4: aux42:: var_is_introduced ;
var 1..4: aux43:: var_is_introduced ;
var 1..4: aux44:: var_is_introduced ;
var 1..4: aux45:: var_is_introduced ;
var 1..4: aux46:: var_is_introduced ;
var 1..4: aux47:: var_is_introduced ;
var 1..4: aux48:: var_is_introduced ;
var 1..4: aux49:: var_is_introduced ;
var 1..4: aux50:: var_is_introduced ;
var 1..4: aux51:: var_is_introduced ;
var 1..4: aux52:: var_is_introduced ;
var 1..4: aux53:: var_is_introduced ;
var 1..4: aux54:: var_is_introduced ;
var 1..4: aux55:: var_is_introduced ;
var 1..4: aux56:: var_is_introduced ;
var bool: aux57_BOOL:: var_is_introduced ;
var bool: aux58_BOOL:: var_is_introduced ;
var bool: aux59_BOOL:: var_is_introduced ;
var bool: aux60_BOOL:: var_is_introduced ;
var bool: aux61_BOOL:: var_is_introduced ;
var bool: aux62_BOOL:: var_is_introduced ;
var bool: aux63_BOOL:: var_is_introduced ;
var bool: aux64_BOOL:: var_is_introduced ;
var bool: aux65_BOOL:: var_is_introduced ;
var bool: aux66_BOOL:: var_is_introduced ;
var bool: aux67_BOOL:: var_is_introduced ;
var bool: aux68_BOOL:: var_is_introduced ;
var bool: aux69_BOOL:: var_is_introduced ;
var bool: aux70_BOOL:: var_is_introduced ;
var bool: aux71_BOOL:: var_is_introduced ;
var bool: aux72_BOOL:: var_is_introduced ;
var bool: aux73_BOOL:: var_is_introduced ;
var bool: aux74_BOOL:: var_is_introduced ;
var bool: aux75_BOOL:: var_is_introduced ;
var bool: aux76_BOOL:: var_is_introduced ;
var bool: aux77_BOOL:: var_is_introduced ;
var bool: aux78_BOOL:: var_is_introduced ;
var bool: aux79_BOOL:: var_is_introduced ;
var bool: aux80_BOOL:: var_is_introduced ;
var bool: aux81_BOOL:: var_is_introduced ;
var bool: aux82_BOOL:: var_is_introduced ;
var bool: aux83_BOOL:: var_is_introduced ;
var bool: aux84_BOOL:: var_is_introduced ;
var bool: aux85_BOOL:: var_is_introduced ;
var bool: aux86_BOOL:: var_is_introduced ;
var bool: aux87_BOOL:: var_is_introduced ;
var bool: aux88_BOOL:: var_is_introduced ;
var bool: aux89_BOOL:: var_is_introduced ;
var bool: aux90_BOOL:: var_is_introduced ;
var bool: aux91_BOOL:: var_is_introduced ;
var bool: aux92_BOOL:: var_is_introduced ;
var bool: aux93_BOOL:: var_is_introduced ;
var bool: aux94_BOOL:: var_is_introduced ;
var bool: aux95_BOOL:: var_is_introduced ;
var bool: aux96_BOOL:: var_is_introduced ;
var bool: aux97_BOOL:: var_is_introduced ;
var bool: aux98_BOOL:: var_is_introduced ;
var bool: aux99_BOOL:: var_is_introduced ;
var bool: aux100_BOOL:: var_is_introduced ;
var bool: aux101_BOOL:: var_is_introduced ;
var bool: aux102_BOOL:: var_is_introduced ;
var bool: aux103_BOOL:: var_is_introduced ;
var bool: aux104_BOOL:: var_is_introduced ;
var bool: aux105_BOOL:: var_is_introduced ;
var bool: aux106_BOOL:: var_is_introduced ;
var bool: aux107_BOOL:: var_is_introduced ;
var bool: aux108_BOOL:: var_is_introduced ;
var bool: aux109_BOOL:: var_is_introduced ;
var bool: aux110_BOOL:: var_is_introduced ;
var bool: aux111_BOOL:: var_is_introduced ;
var bool: aux112_BOOL:: var_is_introduced ;
var bool: aux113_BOOL:: var_is_introduced ;
var bool: aux114_BOOL:: var_is_introduced ;
var bool: aux115_BOOL:: var_is_introduced ;
var bool: aux116_BOOL:: var_is_introduced ;
var bool: aux117_BOOL:: var_is_introduced ;
var bool: aux118_BOOL:: var_is_introduced ;
var bool: aux119_BOOL:: var_is_introduced ;
var bool: aux120_BOOL:: var_is_introduced ;
var bool: aux121_BOOL:: var_is_introduced ;
var bool: aux122_BOOL:: var_is_introduced ;
var bool: aux123_BOOL:: var_is_introduced ;
var bool: aux124_BOOL:: var_is_introduced ;
var bool: aux125_BOOL:: var_is_introduced ;
var bool: aux126_BOOL:: var_is_introduced ;
var bool: aux127_BOOL:: var_is_introduced ;
var bool: aux128_BOOL:: var_is_introduced ;
var bool: aux129_BOOL:: var_is_introduced ;
var bool: aux130_BOOL:: var_is_introduced ;
var bool: aux131_BOOL:: var_is_introduced ;
var bool: aux132_BOOL:: var_is_introduced ;
var bool: aux133_BOOL:: var_is_introduced ;
var bool: aux134_BOOL:: var_is_introduced ;
var bool: aux135_BOOL:: var_is_introduced ;
var bool: aux136_BOOL:: var_is_introduced ;
var bool: aux137_BOOL:: var_is_introduced ;
var bool: aux138_BOOL:: var_is_introduced ;
var bool: aux139_BOOL:: var_is_introduced ;
var bool: aux140_BOOL:: var_is_introduced ;
var bool: aux141_BOOL:: var_is_introduced ;
var bool: aux142_BOOL:: var_is_introduced ;
var bool: aux143_BOOL:: var_is_introduced ;
var bool: aux144_BOOL:: var_is_introduced ;
var bool: aux145_BOOL:: var_is_introduced ;
var bool: aux146_BOOL:: var_is_introduced ;
var bool: aux147_BOOL:: var_is_introduced ;
var bool: aux148_BOOL:: var_is_introduced ;
var bool: aux149_BOOL:: var_is_introduced ;
var bool: aux150_BOOL:: var_is_introduced ;
var bool: aux151_BOOL:: var_is_introduced ;
var bool: aux152_BOOL:: var_is_introduced ;
var bool: aux153_BOOL:: var_is_introduced ;
var bool: aux154_BOOL:: var_is_introduced ;
var bool: aux155_BOOL:: var_is_introduced ;
var bool: aux156_BOOL:: var_is_introduced ;
var bool: aux157_BOOL:: var_is_introduced ;
var bool: aux158_BOOL:: var_is_introduced ;
var bool: aux159_BOOL:: var_is_introduced ;
var bool: aux160_BOOL:: var_is_introduced ;
var bool: aux161_BOOL:: var_is_introduced ;
var bool: aux162_BOOL:: var_is_introduced ;
var bool: aux163_BOOL:: var_is_introduced ;
var bool: aux164_BOOL:: var_is_introduced ;
var bool: aux165_BOOL:: var_is_introduced ;
var bool: aux166_BOOL:: var_is_introduced ;
var bool: aux167_BOOL:: var_is_introduced ;
var bool: aux168_BOOL:: var_is_introduced ;
var 1..6: aux169:: var_is_introduced ;
var 1..6: aux170:: var_is_introduced ;
var 1..6: aux171:: var_is_introduced ;
var 1..7: aux172:: var_is_introduced ;
var 1..7: aux173:: var_is_introduced ;
var 1..7: aux174:: var_is_introduced ;
var 1..7: aux175:: var_is_introduced ;
var 1..7: aux176:: var_is_introduced ;
var 1..6: aux177:: var_is_introduced ;
var bool: aux178_BOOL:: var_is_introduced ;
var bool: aux179_BOOL:: var_is_introduced ;
var bool: aux180_BOOL:: var_is_introduced ;
var bool: aux181_BOOL:: var_is_introduced ;
var bool: aux182_BOOL:: var_is_introduced ;
var bool: aux183_BOOL:: var_is_introduced ;
var bool: aux184_BOOL:: var_is_introduced ;
var bool: aux185_BOOL:: var_is_introduced ;
var bool: aux186_BOOL:: var_is_introduced ;
var bool: aux187_BOOL:: var_is_introduced ;
var bool: aux188_BOOL:: var_is_introduced ;
var bool: aux189_BOOL:: var_is_introduced ;
var bool: aux190_BOOL:: var_is_introduced ;
var bool: aux191_BOOL:: var_is_introduced ;
var bool: aux192_BOOL:: var_is_introduced ;
var bool: aux193_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,9,10,11,12,13,14,15,17,18,19,20,21,22,23,25,26,27,28,29,30,31,33,34,35,36,37,38,39,41,42,43,44,45}: aux194:: var_is_introduced ;
var bool: aux195_BOOL:: var_is_introduced ;
var bool: aux196_BOOL:: var_is_introduced ;
var bool: aux197_BOOL:: var_is_introduced ;
var bool: aux198_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,9,10,11,12,13,14,15,17,18,19,20,21,22,23,25,26,27,28,29,30,31,33,34,35,36,37,38,39,41,42,43,44,45,46,47,49,50,51,52,53,54}: aux199:: var_is_introduced ;
var bool: aux200_BOOL:: var_is_introduced ;
var bool: aux201_BOOL:: var_is_introduced ;
var bool: aux202_BOOL:: var_is_introduced ;
var bool: aux203_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,9,10,11,12,13,14,15,17,18,19,20,21,22,23,25,26,27,28,29,30,31,33,34,35,36,37,38,39,41,42,43,44,45,46,47,49,50,51,52,53,54}: aux204:: var_is_introduced ;
var bool: aux205_BOOL:: var_is_introduced ;
var bool: aux206_BOOL:: var_is_introduced ;
var bool: aux207_BOOL:: var_is_introduced ;
var bool: aux208_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,9,10,11,12,13,14,15,17,18,19,20,21,22,23,25,26,27,28,29,30,31,33,34,35,36,37,38,39,41,42,43,44,45,46,47,49,50,51,52,53,54}: aux209:: var_is_introduced ;
var bool: aux210_BOOL:: var_is_introduced ;
var bool: aux211_BOOL:: var_is_introduced ;
var bool: aux212_BOOL:: var_is_introduced ;
var bool: aux213_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,9,10,11,12,13,14,15,17,18,19,20,21,22,23,25,26,27,28,29,30,31,33,34,35,36,37,38,39,41,42,43,44,45,46,47,49,50,51,52,53,54}: aux214:: var_is_introduced ;
var bool: aux215_BOOL:: var_is_introduced ;
var bool: aux216_BOOL:: var_is_introduced ;
var bool: aux217_BOOL:: var_is_introduced ;
var bool: aux218_BOOL:: var_is_introduced ;
var {3,4,5,6,9,10,11,12,13,14,17,18,19,20,21,22,25,26,27,28,29,30,33,34,35,36,37,38,41,42,43,44,45,46,49,50,51,52,53}: aux219:: var_is_introduced ;
var bool: aux220_BOOL:: var_is_introduced ;
var bool: aux221_BOOL:: var_is_introduced ;
var bool: aux222_BOOL:: var_is_introduced ;
var bool: aux223_BOOL:: var_is_introduced ;
var {3,4,5,6,7,8,17,19,20,21,22,23,24,25,27,28,29,30,31,32,33,35,36,37,38,39,40,41,43,44,45,46,47,48,49,51,52,53,54,55,56,57,59,60,61,62,63}: aux224:: var_is_introduced ;
var bool: aux225_BOOL:: var_is_introduced ;
var bool: aux226_BOOL:: var_is_introduced ;
var bool: aux227_BOOL:: var_is_introduced ;
var bool: aux228_BOOL:: var_is_introduced ;
var {3,4,5,6,7,8,17,19,20,21,22,23,24,25,27,28,29,30,31,32,33,35,36,37,38,39,40,41,43,44,45,46,47,48,49,51,52,53,54,55,56,57,59,60,61,62,63}: aux229:: var_is_introduced ;
var bool: aux230_BOOL:: var_is_introduced ;
var bool: aux231_BOOL:: var_is_introduced ;
var bool: aux232_BOOL:: var_is_introduced ;
var bool: aux233_BOOL:: var_is_introduced ;
var {3,4,5,6,7,8,17,19,20,21,22,23,24,25,27,28,29,30,31,32,33,35,36,37,38,39,40,41,43,44,45,46,47,48,49,51,52,53,54,55,56,57,59,60,61,62,63}: aux234:: var_is_introduced ;
var bool: aux235_BOOL:: var_is_introduced ;
var bool: aux236_BOOL:: var_is_introduced ;
var bool: aux237_BOOL:: var_is_introduced ;
var bool: aux238_BOOL:: var_is_introduced ;
var {3,4,5,6,7,8,17,19,20,21,22,23,24,25,27,28,29,30,31,32,33,35,36,37,38,39,40,41,43,44,45,46,47,48,49,51,52,53,54,55,56,57,59,60,61,62,63}: aux239:: var_is_introduced ;
var bool: aux240_BOOL:: var_is_introduced ;
var bool: aux241_BOOL:: var_is_introduced ;
var bool: aux242_BOOL:: var_is_introduced ;
var bool: aux243_BOOL:: var_is_introduced ;
var {3,4,5,6,7,8,17,19,20,21,22,23,24,25,27,28,29,30,31,32,33,35,36,37,38,39,40,41,43,44,45,46,47,48,49,51,52,53,54,55,56,57,59,60,61,62,63}: aux244:: var_is_introduced ;
var bool: aux245_BOOL:: var_is_introduced ;
var bool: aux246_BOOL:: var_is_introduced ;
var bool: aux247_BOOL:: var_is_introduced ;
var bool: aux248_BOOL:: var_is_introduced ;
var {1,2,3,4,5,6,17,18,19,20,21,22,25,26,27,28,29,30,33,34,35,36,37,38,41,42,43,44,45,46,49,50,51,52,53,54,57,58,59,60,61,62}: aux249:: var_is_introduced ;
var bool: aux250_BOOL:: var_is_introduced ;
var bool: aux251_BOOL:: var_is_introduced ;
var bool: aux252_BOOL:: var_is_introduced ;
var bool: aux253_BOOL:: var_is_introduced ;
var {2,4,5,6,7,8,9,10,12,13,14,15,16,25,26,28,29,30,31,32,33,34,36,37,38,39,40,41,42,44,45,46,47,48,49,50,52,53,54,55,56,57,58,60,61,62,63}: aux254:: var_is_introduced ;
var bool: aux255_BOOL:: var_is_introduced ;
var bool: aux256_BOOL:: var_is_introduced ;
var bool: aux257_BOOL:: var_is_introduced ;
var bool: aux258_BOOL:: var_is_introduced ;
var {2,4,5,6,7,8,9,10,12,13,14,15,16,25,26,28,29,30,31,32,33,34,36,37,38,39,40,41,42,44,45,46,47,48,49,50,52,53,54,55,56,57,58,60,61,62,63}: aux259:: var_is_introduced ;
var bool: aux260_BOOL:: var_is_introduced ;
var bool: aux261_BOOL:: var_is_introduced ;
var bool: aux262_BOOL:: var_is_introduced ;
var bool: aux263_BOOL:: var_is_introduced ;
var {2,4,5,6,7,8,9,10,12,13,14,15,16,25,26,28,29,30,31,32,33,34,36,37,38,39,40,41,42,44,45,46,47,48,49,50,52,53,54,55,56,57,58,60,61,62,63}: aux264:: var_is_introduced ;
var bool: aux265_BOOL:: var_is_introduced ;
var bool: aux266_BOOL:: var_is_introduced ;
var bool: aux267_BOOL:: var_is_introduced ;
var bool: aux268_BOOL:: var_is_introduced ;
var {2,4,5,6,7,8,9,10,12,13,14,15,16,25,26,28,29,30,31,32,33,34,36,37,38,39,40,41,42,44,45,46,47,48,49,50,52,53,54,55,56,57,58,60,61,62,63}: aux269:: var_is_introduced ;
var bool: aux270_BOOL:: var_is_introduced ;
var bool: aux271_BOOL:: var_is_introduced ;
var bool: aux272_BOOL:: var_is_introduced ;
var bool: aux273_BOOL:: var_is_introduced ;
var {2,4,5,6,7,8,9,10,12,13,14,15,16,25,26,28,29,30,31,32,33,34,36,37,38,39,40,41,42,44,45,46,47,48,49,50,52,53,54,55,56,57,58,60,61,62,63}: aux274:: var_is_introduced ;
var bool: aux275_BOOL:: var_is_introduced ;
var bool: aux276_BOOL:: var_is_introduced ;
var bool: aux277_BOOL:: var_is_introduced ;
var bool: aux278_BOOL:: var_is_introduced ;
var {2,4,5,6,7,8,9,10,12,13,14,15,16,25,26,28,29,30,31,32,33,34,36,37,38,39,40,41,42,44,45,46,47,48,49,50,52,53,54,55,56,57,58,60,61,62,63}: aux279:: var_is_introduced ;
var bool: aux280_BOOL:: var_is_introduced ;
var bool: aux281_BOOL:: var_is_introduced ;
var bool: aux282_BOOL:: var_is_introduced ;
var bool: aux283_BOOL:: var_is_introduced ;
var {2,3,5,6,7,8,9,10,11,13,14,15,16,17,18,19,21,22,23,24,33,34,35,37,38,39,40,41,42,43,45,46,47,48,49,50,51,53,54,55,56,57,58,59,61,62,63}: aux284:: var_is_introduced ;
var bool: aux285_BOOL:: var_is_introduced ;
var bool: aux286_BOOL:: var_is_introduced ;
var bool: aux287_BOOL:: var_is_introduced ;
var bool: aux288_BOOL:: var_is_introduced ;
var {2,3,5,6,7,8,9,10,11,13,14,15,16,17,18,19,21,22,23,24,33,34,35,37,38,39,40,41,42,43,45,46,47,48,49,50,51,53,54,55,56,57,58,59,61,62,63}: aux289:: var_is_introduced ;
var bool: aux290_BOOL:: var_is_introduced ;
var bool: aux291_BOOL:: var_is_introduced ;
var bool: aux292_BOOL:: var_is_introduced ;
var bool: aux293_BOOL:: var_is_introduced ;
var {2,3,5,6,7,8,9,10,11,13,14,15,16,17,18,19,21,22,23,24,33,34,35,37,38,39,40,41,42,43,45,46,47,48,49,50,51,53,54,55,56,57,58,59,61,62,63}: aux294:: var_is_introduced ;
var bool: aux295_BOOL:: var_is_introduced ;
var bool: aux296_BOOL:: var_is_introduced ;
var bool: aux297_BOOL:: var_is_introduced ;
var bool: aux298_BOOL:: var_is_introduced ;
var {2,3,5,6,7,8,9,10,11,13,14,15,16,17,18,19,21,22,23,24,33,34,35,37,38,39,40,41,42,43,45,46,47,48,49,50,51,53,54,55,56,57,58,59,61,62,63}: aux299:: var_is_introduced ;
var bool: aux300_BOOL:: var_is_introduced ;
var bool: aux301_BOOL:: var_is_introduced ;
var bool: aux302_BOOL:: var_is_introduced ;
var bool: aux303_BOOL:: var_is_introduced ;
var {2,3,5,6,7,8,9,10,11,13,14,15,16,17,18,19,21,22,23,24,33,34,35,37,38,39,40,41,42,43,45,46,47,48,49,50,51,53,54,55,56,57,58,59,61,62,63}: aux304:: var_is_introduced ;
var bool: aux305_BOOL:: var_is_introduced ;
var bool: aux306_BOOL:: var_is_introduced ;
var bool: aux307_BOOL:: var_is_introduced ;
var bool: aux308_BOOL:: var_is_introduced ;
var {2,3,5,6,7,8,9,10,11,13,14,15,16,17,18,19,21,22,23,24,33,34,35,37,38,39,40,41,42,43,45,46,47,48,49,50,51,53,54,55,56,57,58,59,61,62,63}: aux309:: var_is_introduced ;
var bool: aux310_BOOL:: var_is_introduced ;
var bool: aux311_BOOL:: var_is_introduced ;
var bool: aux312_BOOL:: var_is_introduced ;
var bool: aux313_BOOL:: var_is_introduced ;
var {2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,22,23,24,25,26,27,28,30,31,32,41,42,43,44,46,47,48,49,50,51,52,54,55,56,57,58,59,60,62,63}: aux314:: var_is_introduced ;
var bool: aux315_BOOL:: var_is_introduced ;
var bool: aux316_BOOL:: var_is_introduced ;
var bool: aux317_BOOL:: var_is_introduced ;
var bool: aux318_BOOL:: var_is_introduced ;
var {2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,22,23,24,25,26,27,28,30,31,32,41,42,43,44,46,47,48,49,50,51,52,54,55,56,57,58,59,60,62,63}: aux319:: var_is_introduced ;
var bool: aux320_BOOL:: var_is_introduced ;
var bool: aux321_BOOL:: var_is_introduced ;
var bool: aux322_BOOL:: var_is_introduced ;
var bool: aux323_BOOL:: var_is_introduced ;
var {2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,22,23,24,25,26,27,28,30,31,32,41,42,43,44,46,47,48,49,50,51,52,54,55,56,57,58,59,60,62,63}: aux324:: var_is_introduced ;
var bool: aux325_BOOL:: var_is_introduced ;
var bool: aux326_BOOL:: var_is_introduced ;
var bool: aux327_BOOL:: var_is_introduced ;
var bool: aux328_BOOL:: var_is_introduced ;
var {2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,22,23,24,25,26,27,28,30,31,32,41,42,43,44,46,47,48,49,50,51,52,54,55,56,57,58,59,60,62,63}: aux329:: var_is_introduced ;
var bool: aux330_BOOL:: var_is_introduced ;
var bool: aux331_BOOL:: var_is_introduced ;
var bool: aux332_BOOL:: var_is_introduced ;
var bool: aux333_BOOL:: var_is_introduced ;
var {2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,22,23,24,25,26,27,28,30,31,32,41,42,43,44,46,47,48,49,50,51,52,54,55,56,57,58,59,60,62,63}: aux334:: var_is_introduced ;
var bool: aux335_BOOL:: var_is_introduced ;
var bool: aux336_BOOL:: var_is_introduced ;
var bool: aux337_BOOL:: var_is_introduced ;
var bool: aux338_BOOL:: var_is_introduced ;
var {2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,22,23,24,25,26,27,28,30,31,32,41,42,43,44,46,47,48,49,50,51,52,54,55,56,57,58,59,60,62,63}: aux339:: var_is_introduced ;
var bool: aux340_BOOL:: var_is_introduced ;
var bool: aux341_BOOL:: var_is_introduced ;
var bool: aux342_BOOL:: var_is_introduced ;
var bool: aux343_BOOL:: var_is_introduced ;
var {2,3,4,5,7,8,9,10,11,12,13,15,16,17,18,19,20,21,23,24,25,26,27,28,29,31,32,33,34,35,36,37,39,40,49,50,51,52,53,55,56,57,58,59,60,61,63}: aux344:: var_is_introduced ;
var bool: aux345_BOOL:: var_is_introduced ;
var bool: aux346_BOOL:: var_is_introduced ;
var bool: aux347_BOOL:: var_is_introduced ;
var bool: aux348_BOOL:: var_is_introduced ;
var {2,3,4,5,7,8,9,10,11,12,13,15,16,17,18,19,20,21,23,24,25,26,27,28,29,31,32,33,34,35,36,37,39,40,49,50,51,52,53,55,56,57,58,59,60,61,63}: aux349:: var_is_introduced ;
var bool: aux350_BOOL:: var_is_introduced ;
var bool: aux351_BOOL:: var_is_introduced ;
var bool: aux352_BOOL:: var_is_introduced ;
var bool: aux353_BOOL:: var_is_introduced ;
var {2,3,4,5,7,8,9,10,11,12,13,15,16,17,18,19,20,21,23,24,25,26,27,28,29,31,32,33,34,35,36,37,39,40,49,50,51,52,53,55,56,57,58,59,60,61,63}: aux354:: var_is_introduced ;
var bool: aux355_BOOL:: var_is_introduced ;
var bool: aux356_BOOL:: var_is_introduced ;
var bool: aux357_BOOL:: var_is_introduced ;
var bool: aux358_BOOL:: var_is_introduced ;
var {2,3,4,5,7,8,9,10,11,12,13,15,16,17,18,19,20,21,23,24,25,26,27,28,29,31,32,33,34,35,36,37,39,40,49,50,51,52,53,55,56,57,58,59,60,61,63}: aux359:: var_is_introduced ;
var bool: aux360_BOOL:: var_is_introduced ;
var bool: aux361_BOOL:: var_is_introduced ;
var bool: aux362_BOOL:: var_is_introduced ;
var bool: aux363_BOOL:: var_is_introduced ;
var {2,3,4,5,7,8,9,10,11,12,13,15,16,17,18,19,20,21,23,24,25,26,27,28,29,31,32,33,34,35,36,37,39,40,49,50,51,52,53,55,56,57,58,59,60,61,63}: aux364:: var_is_introduced ;
var bool: aux365_BOOL:: var_is_introduced ;
var bool: aux366_BOOL:: var_is_introduced ;
var bool: aux367_BOOL:: var_is_introduced ;
var bool: aux368_BOOL:: var_is_introduced ;
var {2,3,4,5,7,8,9,10,11,12,13,15,16,17,18,19,20,21,23,24,25,26,27,28,29,31,32,33,34,35,36,37,39,40,49,50,51,52,53,55,56,57,58,59,60,61,63}: aux369:: var_is_introduced ;
var bool: aux370_BOOL:: var_is_introduced ;
var bool: aux371_BOOL:: var_is_introduced ;
var bool: aux372_BOOL:: var_is_introduced ;
var bool: aux373_BOOL:: var_is_introduced ;
var {2,3,4,5,6,8,9,10,11,12,13,14,16,17,18,19,20,21,22,24,25,26,27,28,29,30,32,33,34,35,36,37,38,40,41,42,43,44,45,46,48,57,58,59,60,61,62}: aux374:: var_is_introduced ;
var bool: aux375_BOOL:: var_is_introduced ;
var bool: aux376_BOOL:: var_is_introduced ;
var bool: aux377_BOOL:: var_is_introduced ;
var bool: aux378_BOOL:: var_is_introduced ;
var {2,3,4,5,6,8,9,10,11,12,13,14,16,17,18,19,20,21,22,24,25,26,27,28,29,30,32,33,34,35,36,37,38,40,41,42,43,44,45,46,48,57,58,59,60,61,62}: aux379:: var_is_introduced ;
var bool: aux380_BOOL:: var_is_introduced ;
var bool: aux381_BOOL:: var_is_introduced ;
var bool: aux382_BOOL:: var_is_introduced ;
var bool: aux383_BOOL:: var_is_introduced ;
var {2,3,4,5,6,8,9,10,11,12,13,14,16,17,18,19,20,21,22,24,25,26,27,28,29,30,32,33,34,35,36,37,38,40,41,42,43,44,45,46,48,57,58,59,60,61,62}: aux384:: var_is_introduced ;
var bool: aux385_BOOL:: var_is_introduced ;
var bool: aux386_BOOL:: var_is_introduced ;
var bool: aux387_BOOL:: var_is_introduced ;
var bool: aux388_BOOL:: var_is_introduced ;
var {2,3,4,5,6,8,9,10,11,12,13,14,16,17,18,19,20,21,22,24,25,26,27,28,29,30,32,33,34,35,36,37,38,40,41,42,43,44,45,46,48,57,58,59,60,61,62}: aux389:: var_is_introduced ;
var bool: aux390_BOOL:: var_is_introduced ;
var bool: aux391_BOOL:: var_is_introduced ;
var bool: aux392_BOOL:: var_is_introduced ;
var bool: aux393_BOOL:: var_is_introduced ;
var {2,3,4,5,6,8,9,10,11,12,13,14,16,17,18,19,20,21,22,24,25,26,27,28,29,30,32,33,34,35,36,37,38,40,41,42,43,44,45,46,48,57,58,59,60,61,62}: aux394:: var_is_introduced ;
var bool: aux395_BOOL:: var_is_introduced ;
var bool: aux396_BOOL:: var_is_introduced ;
var bool: aux397_BOOL:: var_is_introduced ;
var bool: aux398_BOOL:: var_is_introduced ;
var {2,3,4,5,6,8,9,10,11,12,13,14,16,17,18,19,20,21,22,24,25,26,27,28,29,30,32,33,34,35,36,37,38,40,41,42,43,44,45,46,48,57,58,59,60,61,62}: aux399:: var_is_introduced ;
var bool: aux400_BOOL:: var_is_introduced ;
var bool: aux401_BOOL:: var_is_introduced ;
var bool: aux402_BOOL:: var_is_introduced ;
var bool: aux403_BOOL:: var_is_introduced ;
var {1,2,3,4,5,6,7,9,10,11,12,13,14,15,17,18,19,20,21,22,23,25,26,27,28,29,30,31,33,34,35,36,37,38,39,41,42,43,44,45,46,47}: aux404:: var_is_introduced ;
var bool: aux405_BOOL:: var_is_introduced ;
var bool: aux406_BOOL:: var_is_introduced ;
var bool: aux407_BOOL:: var_is_introduced ;
var bool: aux408_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,9,10,11,12,13,14,15,17,18,19,20,21,22,23,25,26,27,28,29,30,31,33,34,35,36,37,38,39,41,42,43,44,45,46,47,49,50,51,52,53,54}: aux409:: var_is_introduced ;
var bool: aux410_BOOL:: var_is_introduced ;
var bool: aux411_BOOL:: var_is_introduced ;
var bool: aux412_BOOL:: var_is_introduced ;
var bool: aux413_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,9,10,11,12,13,14,15,17,18,19,20,21,22,23,25,26,27,28,29,30,31,33,34,35,36,37,38,39,41,42,43,44,45,46,47,49,50,51,52,53,54}: aux414:: var_is_introduced ;
var bool: aux415_BOOL:: var_is_introduced ;
var bool: aux416_BOOL:: var_is_introduced ;
var bool: aux417_BOOL:: var_is_introduced ;
var bool: aux418_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,9,10,11,12,13,14,15,17,18,19,20,21,22,23,25,26,27,28,29,30,31,33,34,35,36,37,38,39,41,42,43,44,45,46,47,49,50,51,52,53,54}: aux419:: var_is_introduced ;
var bool: aux420_BOOL:: var_is_introduced ;
var bool: aux421_BOOL:: var_is_introduced ;
var bool: aux422_BOOL:: var_is_introduced ;
var bool: aux423_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,9,10,11,12,13,14,15,17,18,19,20,21,22,23,25,26,27,28,29,30,31,33,34,35,36,37,38,39,41,42,43,44,45,46,47,49,50,51,52,53,54}: aux424:: var_is_introduced ;
var bool: aux425_BOOL:: var_is_introduced ;
var bool: aux426_BOOL:: var_is_introduced ;
var bool: aux427_BOOL:: var_is_introduced ;
var bool: aux428_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,9,10,11,12,13,14,15,17,18,19,20,21,22,23,25,26,27,28,29,30,31,33,34,35,36,37,38,39,41,42,43,44,45,46,47,49,50,51,52,53,54}: aux429:: var_is_introduced ;
var bool: aux430_BOOL:: var_is_introduced ;
var bool: aux431_BOOL:: var_is_introduced ;
var bool: aux432_BOOL:: var_is_introduced ;
var bool: aux433_BOOL:: var_is_introduced ;
var bool: aux434_BOOL:: var_is_introduced ;
var bool: aux435_BOOL:: var_is_introduced ;
var bool: aux436_BOOL:: var_is_introduced ;
var bool: aux437_BOOL:: var_is_introduced ;
var bool: aux438_BOOL:: var_is_introduced ;
var bool: aux439_BOOL:: var_is_introduced ;
var bool: aux440_BOOL:: var_is_introduced ;
var bool: aux441_BOOL:: var_is_introduced ;
var bool: aux442_BOOL:: var_is_introduced ;
var bool: aux443_BOOL:: var_is_introduced ;
var bool: aux444_BOOL:: var_is_introduced ;
var bool: aux445_BOOL:: var_is_introduced ;
var bool: aux446_BOOL:: var_is_introduced ;
var bool: aux447_BOOL:: var_is_introduced ;
var bool: aux448_BOOL:: var_is_introduced ;
var bool: aux449_BOOL:: var_is_introduced ;
var 0..4: aux450:: var_is_introduced ;
var 0..4: aux451:: var_is_introduced ;
var 0..4: aux452:: var_is_introduced ;
var 0..4: aux453:: var_is_introduced ;
var 0..4: aux454:: var_is_introduced ;
var 0..4: aux455:: var_is_introduced ;
var 0..4: aux456:: var_is_introduced ;
var 0..4: aux457:: var_is_introduced ;
var 0..4: aux458:: var_is_introduced ;
var 0..4: aux459:: var_is_introduced ;
var 0..4: aux460:: var_is_introduced ;
var 0..4: aux461:: var_is_introduced ;
var 0..4: aux462:: var_is_introduced ;
var 0..4: aux463:: var_is_introduced ;
var 0..4: aux464:: var_is_introduced ;
var 0..4: aux465:: var_is_introduced ;
var 0..4: aux466:: var_is_introduced ;
var 0..4: aux467:: var_is_introduced ;
var 0..4: aux468:: var_is_introduced ;
var 0..4: aux469:: var_is_introduced ;
var 0..4: aux470:: var_is_introduced ;
var 0..4: aux471:: var_is_introduced ;
var 0..4: aux472:: var_is_introduced ;
var 0..4: aux473:: var_is_introduced ;
var 0..4: aux474:: var_is_introduced ;
var 0..4: aux475:: var_is_introduced ;
var 0..4: aux476:: var_is_introduced ;
var 0..4: aux477:: var_is_introduced ;
var 0..4: aux478:: var_is_introduced ;
var 0..4: aux479:: var_is_introduced ;
var 0..4: aux480:: var_is_introduced ;
var 0..4: aux481:: var_is_introduced ;
var 0..4: aux482:: var_is_introduced ;
var 0..4: aux483:: var_is_introduced ;
var 0..4: aux484:: var_is_introduced ;
var 0..4: aux485:: var_is_introduced ;
var 0..4: aux486:: var_is_introduced ;
var 0..4: aux487:: var_is_introduced ;
var 0..4: aux488:: var_is_introduced ;
var 0..4: aux489:: var_is_introduced ;
var 0..4: aux490:: var_is_introduced ;
var 0..4: aux491:: var_is_introduced ;
var 0..4: aux492:: var_is_introduced ;
var 0..4: aux493:: var_is_introduced ;
var 0..4: aux494:: var_is_introduced ;
var 0..4: aux495:: var_is_introduced ;
var 0..4: aux496:: var_is_introduced ;
var 0..4: aux497:: var_is_introduced ;
constraint array_var_int_element(aux194, [0, 1, 2, 3, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 3, 2, 1], aux450);
constraint array_var_int_element(aux199, [0, 1, 2, 3, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 3, 2, 1], aux451);
constraint array_var_int_element(aux204, [0, 1, 2, 3, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 3, 2, 1], aux452);
constraint array_var_int_element(aux209, [0, 1, 2, 3, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 3, 2, 1], aux453);
constraint array_var_int_element(aux214, [0, 1, 2, 3, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 3, 2, 1], aux454);
constraint array_var_int_element(aux219, [1, 2, 3, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 3, 2, 1], aux455);
constraint array_var_int_element(aux224, [0, 1, 2, 3, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 3, 2, 1], aux456);
constraint array_var_int_element(aux229, [0, 1, 2, 3, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 3, 2, 1], aux457);
constraint array_var_int_element(aux234, [0, 1, 2, 3, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 3, 2, 1], aux458);
constraint array_var_int_element(aux239, [0, 1, 2, 3, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 3, 2, 1], aux459);
constraint array_var_int_element(aux244, [0, 1, 2, 3, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 3, 2, 1], aux460);
constraint array_var_int_element(aux249, [2, 3, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 3, 2, 1, 0], aux461);
constraint array_var_int_element(aux254, [0, 1, 2, 3, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 3, 2, 1], aux462);
constraint array_var_int_element(aux259, [0, 1, 2, 3, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 3, 2, 1], aux463);
constraint array_var_int_element(aux264, [0, 1, 2, 3, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 3, 2, 1], aux464);
constraint array_var_int_element(aux269, [0, 1, 2, 3, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 3, 2, 1], aux465);
constraint array_var_int_element(aux274, [0, 1, 2, 3, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 3, 2, 1], aux466);
constraint array_var_int_element(aux279, [0, 1, 2, 3, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 3, 2, 1], aux467);
constraint array_var_int_element(aux284, [0, 1, 2, 3, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 3, 2, 1], aux468);
constraint array_var_int_element(aux289, [0, 1, 2, 3, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 3, 2, 1], aux469);
constraint array_var_int_element(aux294, [0, 1, 2, 3, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 3, 2, 1], aux470);
constraint array_var_int_element(aux299, [0, 1, 2, 3, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 3, 2, 1], aux471);
constraint array_var_int_element(aux304, [0, 1, 2, 3, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 3, 2, 1], aux472);
constraint array_var_int_element(aux309, [0, 1, 2, 3, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 3, 2, 1], aux473);
constraint array_var_int_element(aux314, [0, 1, 2, 3, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 3, 2, 1], aux474);
constraint array_var_int_element(aux319, [0, 1, 2, 3, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 3, 2, 1], aux475);
constraint array_var_int_element(aux324, [0, 1, 2, 3, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 3, 2, 1], aux476);
constraint array_var_int_element(aux329, [0, 1, 2, 3, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 3, 2, 1], aux477);
constraint array_var_int_element(aux334, [0, 1, 2, 3, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 3, 2, 1], aux478);
constraint array_var_int_element(aux339, [0, 1, 2, 3, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 3, 2, 1], aux479);
constraint array_var_int_element(aux344, [0, 1, 2, 3, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 3, 2, 1], aux480);
constraint array_var_int_element(aux349, [0, 1, 2, 3, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 3, 2, 1], aux481);
constraint array_var_int_element(aux354, [0, 1, 2, 3, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 3, 2, 1], aux482);
constraint array_var_int_element(aux359, [0, 1, 2, 3, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 3, 2, 1], aux483);
constraint array_var_int_element(aux364, [0, 1, 2, 3, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 3, 2, 1], aux484);
constraint array_var_int_element(aux369, [0, 1, 2, 3, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 3, 2, 1], aux485);
constraint array_var_int_element(aux374, [0, 1, 2, 3, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 3, 2], aux486);
constraint array_var_int_element(aux379, [0, 1, 2, 3, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 3, 2], aux487);
constraint array_var_int_element(aux384, [0, 1, 2, 3, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 3, 2], aux488);
constraint array_var_int_element(aux389, [0, 1, 2, 3, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 3, 2], aux489);
constraint array_var_int_element(aux394, [0, 1, 2, 3, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 3, 2], aux490);
constraint array_var_int_element(aux399, [0, 1, 2, 3, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 3, 2], aux491);
constraint array_var_int_element(aux404, [1, 0, 1, 2, 3, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 3, 2, 1, 0], aux492);
constraint array_var_int_element(aux409, [0, 1, 2, 3, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 3, 2, 1], aux493);
constraint array_var_int_element(aux414, [0, 1, 2, 3, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 3, 2, 1], aux494);
constraint array_var_int_element(aux419, [0, 1, 2, 3, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 3, 2, 1], aux495);
constraint array_var_int_element(aux424, [0, 1, 2, 3, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 3, 2, 1], aux496);
constraint array_var_int_element(aux429, [0, 1, 2, 3, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 3, 2, 1], aux497);
constraint int_eq_reif(0,travel_00001_00001,aux178_BOOL);
constraint int_eq_reif(aux13,travel_00001_00001,aux179_BOOL);
constraint int_eq_reif(0,travel_00002_00001,aux180_BOOL);
constraint int_eq_reif(aux49,travel_00002_00001,aux181_BOOL);
constraint int_eq_reif(travel_00003_00001,0,aux182_BOOL);
constraint int_eq_reif(travel_00003_00001,aux16,aux183_BOOL);
constraint int_eq_reif(travel_00004_00001,0,aux184_BOOL);
constraint int_eq_reif(travel_00004_00001,aux39,aux185_BOOL);
constraint int_eq_reif(0,travel_00005_00001,aux186_BOOL);
constraint int_eq_reif(aux21,travel_00005_00001,aux187_BOOL);
constraint int_eq_reif(0,travel_00006_00001,aux188_BOOL);
constraint int_eq_reif(aux34,travel_00006_00001,aux189_BOOL);
constraint int_eq_reif(0,travel_00007_00001,aux190_BOOL);
constraint int_eq_reif(aux12,travel_00007_00001,aux191_BOOL);
constraint int_eq_reif(travel_00008_00001,0,aux192_BOOL);
constraint int_eq_reif(travel_00008_00001,aux35,aux193_BOOL);
constraint int_lin_eq([8,1,-1,1],[opponent_00001_00001,opponent_00001_00002,aux194,-17],0);
constraint int_eq_reif(aux450,travel_00001_00002,aux195_BOOL);
constraint int_eq_reif(aux2,travel_00001_00002,aux196_BOOL);
constraint int_eq_reif(0,travel_00001_00002,aux197_BOOL);
constraint int_eq_reif(aux13,travel_00001_00002,aux198_BOOL);
constraint int_lin_eq([8,1,-1,1],[opponent_00001_00002,opponent_00001_00003,aux199,-17],0);
constraint int_eq_reif(aux451,travel_00001_00003,aux200_BOOL);
constraint int_eq_reif(aux3,travel_00001_00003,aux201_BOOL);
constraint int_eq_reif(0,travel_00001_00003,aux202_BOOL);
constraint int_eq_reif(aux2,travel_00001_00003,aux203_BOOL);
constraint int_lin_eq([8,1,-1,1],[opponent_00001_00003,opponent_00001_00004,aux204,-17],0);
constraint int_eq_reif(aux452,travel_00001_00004,aux205_BOOL);
constraint int_eq_reif(aux4,travel_00001_00004,aux206_BOOL);
constraint int_eq_reif(0,travel_00001_00004,aux207_BOOL);
constraint int_eq_reif(aux3,travel_00001_00004,aux208_BOOL);
constraint int_lin_eq([8,1,-1,1],[opponent_00001_00004,opponent_00001_00005,aux209,-17],0);
constraint int_eq_reif(aux453,travel_00001_00005,aux210_BOOL);
constraint int_eq_reif(aux5,travel_00001_00005,aux211_BOOL);
constraint int_eq_reif(0,travel_00001_00005,aux212_BOOL);
constraint int_eq_reif(aux4,travel_00001_00005,aux213_BOOL);
constraint int_lin_eq([8,1,-1,1],[opponent_00001_00005,opponent_00001_00006,aux214,-17],0);
constraint int_eq_reif(aux454,travel_00001_00006,aux215_BOOL);
constraint int_eq_reif(aux1,travel_00001_00006,aux216_BOOL);
constraint int_eq_reif(0,travel_00001_00006,aux217_BOOL);
constraint int_eq_reif(aux5,travel_00001_00006,aux218_BOOL);
constraint int_lin_eq([8,1,-1,1],[opponent_00001_00006,opponent_00001_00007,aux219,-18],0);
constraint int_eq_reif(aux455,travel_00001_00007,aux220_BOOL);
constraint int_eq_reif(aux44,travel_00001_00007,aux221_BOOL);
constraint int_eq_reif(0,travel_00001_00007,aux222_BOOL);
constraint int_eq_reif(aux1,travel_00001_00007,aux223_BOOL);
constraint int_lin_eq([-1,8,1,1],[aux224,opponent_00002_00001,opponent_00002_00002,-8],0);
constraint int_eq_reif(aux456,travel_00002_00002,aux225_BOOL);
constraint int_eq_reif(aux50,travel_00002_00002,aux226_BOOL);
constraint int_eq_reif(0,travel_00002_00002,aux227_BOOL);
constraint int_eq_reif(aux49,travel_00002_00002,aux228_BOOL);
constraint int_lin_eq([-1,8,1,1],[aux229,opponent_00002_00002,opponent_00002_00003,-8],0);
constraint int_eq_reif(aux457,travel_00002_00003,aux230_BOOL);
constraint int_eq_reif(aux47,travel_00002_00003,aux231_BOOL);
constraint int_eq_reif(0,travel_00002_00003,aux232_BOOL);
constraint int_eq_reif(aux50,travel_00002_00003,aux233_BOOL);
constraint int_lin_eq([-1,8,1,1],[aux234,opponent_00002_00003,opponent_00002_00004,-8],0);
constraint int_eq_reif(aux458,travel_00002_00004,aux235_BOOL);
constraint int_eq_reif(aux48,travel_00002_00004,aux236_BOOL);
constraint int_eq_reif(0,travel_00002_00004,aux237_BOOL);
constraint int_eq_reif(aux47,travel_00002_00004,aux238_BOOL);
constraint int_lin_eq([-1,8,1,1],[aux239,opponent_00002_00004,opponent_00002_00005,-8],0);
constraint int_eq_reif(aux459,travel_00002_00005,aux240_BOOL);
constraint int_eq_reif(aux46,travel_00002_00005,aux241_BOOL);
constraint int_eq_reif(0,travel_00002_00005,aux242_BOOL);
constraint int_eq_reif(aux48,travel_00002_00005,aux243_BOOL);
constraint int_lin_eq([-1,8,1,1],[aux244,opponent_00002_00005,opponent_00002_00006,-8],0);
constraint int_eq_reif(aux460,travel_00002_00006,aux245_BOOL);
constraint int_eq_reif(aux45,travel_00002_00006,aux246_BOOL);
constraint int_eq_reif(0,travel_00002_00006,aux247_BOOL);
constraint int_eq_reif(aux46,travel_00002_00006,aux248_BOOL);
constraint int_lin_eq([-1,8,1,1],[aux249,opponent_00002_00006,opponent_00002_00007,-10],0);
constraint int_eq_reif(aux461,travel_00002_00007,aux250_BOOL);
constraint int_eq_reif(aux36,travel_00002_00007,aux251_BOOL);
constraint int_eq_reif(0,travel_00002_00007,aux252_BOOL);
constraint int_eq_reif(aux45,travel_00002_00007,aux253_BOOL);
constraint int_lin_eq([-1,8,1,1],[aux254,opponent_00003_00001,opponent_00003_00002,-8],0);
constraint int_eq_reif(aux462,travel_00003_00002,aux255_BOOL);
constraint int_eq_reif(travel_00003_00002,aux17,aux256_BOOL);
constraint int_eq_reif(travel_00003_00002,0,aux257_BOOL);
constraint int_eq_reif(travel_00003_00002,aux16,aux258_BOOL);
constraint int_lin_eq([-1,8,1,1],[aux259,opponent_00003_00002,opponent_00003_00003,-8],0);
constraint int_eq_reif(aux463,travel_00003_00003,aux260_BOOL);
constraint int_eq_reif(travel_00003_00003,aux18,aux261_BOOL);
constraint int_eq_reif(travel_00003_00003,0,aux262_BOOL);
constraint int_eq_reif(travel_00003_00003,aux17,aux263_BOOL);
constraint int_lin_eq([-1,8,1,1],[aux264,opponent_00003_00003,opponent_00003_00004,-8],0);
constraint int_eq_reif(aux464,travel_00003_00004,aux265_BOOL);
constraint int_eq_reif(travel_00003_00004,aux20,aux266_BOOL);
constraint int_eq_reif(travel_00003_00004,0,aux267_BOOL);
constraint int_eq_reif(travel_00003_00004,aux18,aux268_BOOL);
constraint int_lin_eq([-1,8,1,1],[aux269,opponent_00003_00004,opponent_00003_00005,-8],0);
constraint int_eq_reif(aux465,travel_00003_00005,aux270_BOOL);
constraint int_eq_reif(travel_00003_00005,aux19,aux271_BOOL);
constraint int_eq_reif(travel_00003_00005,0,aux272_BOOL);
constraint int_eq_reif(travel_00003_00005,aux20,aux273_BOOL);
constraint int_lin_eq([-1,8,1,1],[aux274,opponent_00003_00005,opponent_00003_00006,-8],0);
constraint int_eq_reif(aux466,travel_00003_00006,aux275_BOOL);
constraint int_eq_reif(travel_00003_00006,aux15,aux276_BOOL);
constraint int_eq_reif(travel_00003_00006,0,aux277_BOOL);
constraint int_eq_reif(travel_00003_00006,aux19,aux278_BOOL);
constraint int_lin_eq([-1,8,1,1],[aux279,opponent_00003_00006,opponent_00003_00007,-8],0);
constraint int_eq_reif(aux467,travel_00003_00007,aux280_BOOL);
constraint int_eq_reif(travel_00003_00007,aux14,aux281_BOOL);
constraint int_eq_reif(travel_00003_00007,0,aux282_BOOL);
constraint int_eq_reif(travel_00003_00007,aux15,aux283_BOOL);
constraint int_lin_eq([-1,1,8,1],[aux284,-8,opponent_00004_00001,opponent_00004_00002],0);
constraint int_eq_reif(aux468,travel_00004_00002,aux285_BOOL);
constraint int_eq_reif(travel_00004_00002,aux40,aux286_BOOL);
constraint int_eq_reif(travel_00004_00002,0,aux287_BOOL);
constraint int_eq_reif(travel_00004_00002,aux39,aux288_BOOL);
constraint int_lin_eq([-1,1,8,1],[aux289,-8,opponent_00004_00002,opponent_00004_00003],0);
constraint int_eq_reif(aux469,travel_00004_00003,aux290_BOOL);
constraint int_eq_reif(travel_00004_00003,aux38,aux291_BOOL);
constraint int_eq_reif(travel_00004_00003,0,aux292_BOOL);
constraint int_eq_reif(travel_00004_00003,aux40,aux293_BOOL);
constraint int_lin_eq([-1,1,8,1],[aux294,-8,opponent_00004_00003,opponent_00004_00004],0);
constraint int_eq_reif(aux470,travel_00004_00004,aux295_BOOL);
constraint int_eq_reif(travel_00004_00004,aux37,aux296_BOOL);
constraint int_eq_reif(travel_00004_00004,0,aux297_BOOL);
constraint int_eq_reif(travel_00004_00004,aux38,aux298_BOOL);
constraint int_lin_eq([-1,1,8,1],[aux299,-8,opponent_00004_00004,opponent_00004_00005],0);
constraint int_eq_reif(aux471,travel_00004_00005,aux300_BOOL);
constraint int_eq_reif(travel_00004_00005,aux43,aux301_BOOL);
constraint int_eq_reif(travel_00004_00005,0,aux302_BOOL);
constraint int_eq_reif(travel_00004_00005,aux37,aux303_BOOL);
constraint int_lin_eq([-1,1,8,1],[aux304,-8,opponent_00004_00005,opponent_00004_00006],0);
constraint int_eq_reif(aux472,travel_00004_00006,aux305_BOOL);
constraint int_eq_reif(travel_00004_00006,aux42,aux306_BOOL);
constraint int_eq_reif(travel_00004_00006,0,aux307_BOOL);
constraint int_eq_reif(travel_00004_00006,aux43,aux308_BOOL);
constraint int_lin_eq([-1,1,8,1],[aux309,-8,opponent_00004_00006,opponent_00004_00007],0);
constraint int_eq_reif(aux473,travel_00004_00007,aux310_BOOL);
constraint int_eq_reif(travel_00004_00007,aux41,aux311_BOOL);
constraint int_eq_reif(travel_00004_00007,0,aux312_BOOL);
constraint int_eq_reif(travel_00004_00007,aux42,aux313_BOOL);
constraint int_lin_eq([-1,1,8,1],[aux314,-8,opponent_00005_00001,opponent_00005_00002],0);
constraint int_eq_reif(aux474,travel_00005_00002,aux315_BOOL);
constraint int_eq_reif(aux23,travel_00005_00002,aux316_BOOL);
constraint int_eq_reif(0,travel_00005_00002,aux317_BOOL);
constraint int_eq_reif(aux21,travel_00005_00002,aux318_BOOL);
constraint int_lin_eq([-1,1,8,1],[aux319,-8,opponent_00005_00002,opponent_00005_00003],0);
constraint int_eq_reif(aux475,travel_00005_00003,aux320_BOOL);
constraint int_eq_reif(aux22,travel_00005_00003,aux321_BOOL);
constraint int_eq_reif(0,travel_00005_00003,aux322_BOOL);
constraint int_eq_reif(aux23,travel_00005_00003,aux323_BOOL);
constraint int_lin_eq([-1,1,8,1],[aux324,-8,opponent_00005_00003,opponent_00005_00004],0);
constraint int_eq_reif(aux476,travel_00005_00004,aux325_BOOL);
constraint int_eq_reif(aux25,travel_00005_00004,aux326_BOOL);
constraint int_eq_reif(0,travel_00005_00004,aux327_BOOL);
constraint int_eq_reif(aux22,travel_00005_00004,aux328_BOOL);
constraint int_lin_eq([-1,1,8,1],[aux329,-8,opponent_00005_00004,opponent_00005_00005],0);
constraint int_eq_reif(aux477,travel_00005_00005,aux330_BOOL);
constraint int_eq_reif(aux24,travel_00005_00005,aux331_BOOL);
constraint int_eq_reif(0,travel_00005_00005,aux332_BOOL);
constraint int_eq_reif(aux25,travel_00005_00005,aux333_BOOL);
constraint int_lin_eq([-1,1,8,1],[aux334,-8,opponent_00005_00005,opponent_00005_00006],0);
constraint int_eq_reif(aux478,travel_00005_00006,aux335_BOOL);
constraint int_eq_reif(aux27,travel_00005_00006,aux336_BOOL);
constraint int_eq_reif(0,travel_00005_00006,aux337_BOOL);
constraint int_eq_reif(aux24,travel_00005_00006,aux338_BOOL);
constraint int_lin_eq([-1,1,8,1],[aux339,-8,opponent_00005_00006,opponent_00005_00007],0);
constraint int_eq_reif(aux479,travel_00005_00007,aux340_BOOL);
constraint int_eq_reif(aux26,travel_00005_00007,aux341_BOOL);
constraint int_eq_reif(0,travel_00005_00007,aux342_BOOL);
constraint int_eq_reif(aux27,travel_00005_00007,aux343_BOOL);
constraint int_lin_eq([8,1,-1,1],[opponent_00006_00001,opponent_00006_00002,aux344,-8],0);
constraint int_eq_reif(aux480,travel_00006_00002,aux345_BOOL);
constraint int_eq_reif(aux33,travel_00006_00002,aux346_BOOL);
constraint int_eq_reif(0,travel_00006_00002,aux347_BOOL);
constraint int_eq_reif(aux34,travel_00006_00002,aux348_BOOL);
constraint int_lin_eq([8,1,-1,1],[opponent_00006_00002,opponent_00006_00003,aux349,-8],0);
constraint int_eq_reif(aux481,travel_00006_00003,aux350_BOOL);
constraint int_eq_reif(aux32,travel_00006_00003,aux351_BOOL);
constraint int_eq_reif(0,travel_00006_00003,aux352_BOOL);
constraint int_eq_reif(aux33,travel_00006_00003,aux353_BOOL);
constraint int_lin_eq([8,1,-1,1],[opponent_00006_00003,opponent_00006_00004,aux354,-8],0);
constraint int_eq_reif(aux482,travel_00006_00004,aux355_BOOL);
constraint int_eq_reif(aux31,travel_00006_00004,aux356_BOOL);
constraint int_eq_reif(0,travel_00006_00004,aux357_BOOL);
constraint int_eq_reif(aux32,travel_00006_00004,aux358_BOOL);
constraint int_lin_eq([8,1,-1,1],[opponent_00006_00004,opponent_00006_00005,aux359,-8],0);
constraint int_eq_reif(aux483,travel_00006_00005,aux360_BOOL);
constraint int_eq_reif(aux30,travel_00006_00005,aux361_BOOL);
constraint int_eq_reif(0,travel_00006_00005,aux362_BOOL);
constraint int_eq_reif(aux31,travel_00006_00005,aux363_BOOL);
constraint int_lin_eq([8,1,-1,1],[opponent_00006_00005,opponent_00006_00006,aux364,-8],0);
constraint int_eq_reif(aux484,travel_00006_00006,aux365_BOOL);
constraint int_eq_reif(aux29,travel_00006_00006,aux366_BOOL);
constraint int_eq_reif(0,travel_00006_00006,aux367_BOOL);
constraint int_eq_reif(aux30,travel_00006_00006,aux368_BOOL);
constraint int_lin_eq([8,1,-1,1],[opponent_00006_00006,opponent_00006_00007,aux369,-8],0);
constraint int_eq_reif(aux485,travel_00006_00007,aux370_BOOL);
constraint int_eq_reif(aux28,travel_00006_00007,aux371_BOOL);
constraint int_eq_reif(0,travel_00006_00007,aux372_BOOL);
constraint int_eq_reif(aux29,travel_00006_00007,aux373_BOOL);
constraint int_lin_eq([-1,8,1,1],[aux374,opponent_00007_00001,opponent_00007_00002,-8],0);
constraint int_eq_reif(aux486,travel_00007_00002,aux375_BOOL);
constraint int_eq_reif(aux7,travel_00007_00002,aux376_BOOL);
constraint int_eq_reif(0,travel_00007_00002,aux377_BOOL);
constraint int_eq_reif(aux12,travel_00007_00002,aux378_BOOL);
constraint int_lin_eq([-1,8,1,1],[aux379,opponent_00007_00002,opponent_00007_00003,-8],0);
constraint int_eq_reif(aux487,travel_00007_00003,aux380_BOOL);
constraint int_eq_reif(aux6,travel_00007_00003,aux381_BOOL);
constraint int_eq_reif(0,travel_00007_00003,aux382_BOOL);
constraint int_eq_reif(aux7,travel_00007_00003,aux383_BOOL);
constraint int_lin_eq([-1,8,1,1],[aux384,opponent_00007_00003,opponent_00007_00004,-8],0);
constraint int_eq_reif(aux488,travel_00007_00004,aux385_BOOL);
constraint int_eq_reif(aux9,travel_00007_00004,aux386_BOOL);
constraint int_eq_reif(0,travel_00007_00004,aux387_BOOL);
constraint int_eq_reif(aux6,travel_00007_00004,aux388_BOOL);
constraint int_lin_eq([-1,8,1,1],[aux389,opponent_00007_00004,opponent_00007_00005,-8],0);
constraint int_eq_reif(aux489,travel_00007_00005,aux390_BOOL);
constraint int_eq_reif(aux8,travel_00007_00005,aux391_BOOL);
constraint int_eq_reif(0,travel_00007_00005,aux392_BOOL);
constraint int_eq_reif(aux9,travel_00007_00005,aux393_BOOL);
constraint int_lin_eq([-1,8,1,1],[aux394,opponent_00007_00005,opponent_00007_00006,-8],0);
constraint int_eq_reif(aux490,travel_00007_00006,aux395_BOOL);
constraint int_eq_reif(aux11,travel_00007_00006,aux396_BOOL);
constraint int_eq_reif(0,travel_00007_00006,aux397_BOOL);
constraint int_eq_reif(aux8,travel_00007_00006,aux398_BOOL);
constraint int_lin_eq([-1,8,1,1],[aux399,opponent_00007_00006,opponent_00007_00007,-8],0);
constraint int_eq_reif(aux491,travel_00007_00007,aux400_BOOL);
constraint int_eq_reif(aux10,travel_00007_00007,aux401_BOOL);
constraint int_eq_reif(0,travel_00007_00007,aux402_BOOL);
constraint int_eq_reif(aux11,travel_00007_00007,aux403_BOOL);
constraint int_lin_eq([-1,8,1,1],[aux404,opponent_00008_00001,opponent_00008_00002,-16],0);
constraint int_eq_reif(aux492,travel_00008_00002,aux405_BOOL);
constraint int_eq_reif(travel_00008_00002,aux54,aux406_BOOL);
constraint int_eq_reif(travel_00008_00002,0,aux407_BOOL);
constraint int_eq_reif(travel_00008_00002,aux35,aux408_BOOL);
constraint int_lin_eq([-1,8,1,1],[aux409,opponent_00008_00002,opponent_00008_00003,-8],0);
constraint int_eq_reif(aux493,travel_00008_00003,aux410_BOOL);
constraint int_eq_reif(travel_00008_00003,aux53,aux411_BOOL);
constraint int_eq_reif(travel_00008_00003,0,aux412_BOOL);
constraint int_eq_reif(travel_00008_00003,aux54,aux413_BOOL);
constraint int_lin_eq([-1,8,1,1],[aux414,opponent_00008_00003,opponent_00008_00004,-8],0);
constraint int_eq_reif(aux494,travel_00008_00004,aux415_BOOL);
constraint int_eq_reif(travel_00008_00004,aux52,aux416_BOOL);
constraint int_eq_reif(travel_00008_00004,0,aux417_BOOL);
constraint int_eq_reif(travel_00008_00004,aux53,aux418_BOOL);
constraint int_lin_eq([-1,8,1,1],[aux419,opponent_00008_00004,opponent_00008_00005,-8],0);
constraint int_eq_reif(aux495,travel_00008_00005,aux420_BOOL);
constraint int_eq_reif(travel_00008_00005,aux51,aux421_BOOL);
constraint int_eq_reif(travel_00008_00005,0,aux422_BOOL);
constraint int_eq_reif(travel_00008_00005,aux52,aux423_BOOL);
constraint int_lin_eq([-1,8,1,1],[aux424,opponent_00008_00005,opponent_00008_00006,-8],0);
constraint int_eq_reif(aux496,travel_00008_00006,aux425_BOOL);
constraint int_eq_reif(travel_00008_00006,aux56,aux426_BOOL);
constraint int_eq_reif(travel_00008_00006,0,aux427_BOOL);
constraint int_eq_reif(travel_00008_00006,aux51,aux428_BOOL);
constraint int_lin_eq([-1,8,1,1],[aux429,opponent_00008_00006,opponent_00008_00007,-8],0);
constraint int_eq_reif(aux497,travel_00008_00007,aux430_BOOL);
constraint int_eq_reif(travel_00008_00007,aux55,aux431_BOOL);
constraint int_eq_reif(travel_00008_00007,0,aux432_BOOL);
constraint int_eq_reif(travel_00008_00007,aux56,aux433_BOOL);
constraint int_eq_reif(0,travel_00001_00008,aux434_BOOL);
constraint int_eq_reif(aux44,travel_00001_00008,aux435_BOOL);
constraint int_eq_reif(0,travel_00002_00008,aux436_BOOL);
constraint int_eq_reif(aux36,travel_00002_00008,aux437_BOOL);
constraint int_eq_reif(travel_00003_00008,0,aux438_BOOL);
constraint int_eq_reif(travel_00003_00008,aux14,aux439_BOOL);
constraint int_eq_reif(travel_00004_00008,0,aux440_BOOL);
constraint int_eq_reif(travel_00004_00008,aux41,aux441_BOOL);
constraint int_eq_reif(0,travel_00005_00008,aux442_BOOL);
constraint int_eq_reif(aux26,travel_00005_00008,aux443_BOOL);
constraint int_eq_reif(0,travel_00006_00008,aux444_BOOL);
constraint int_eq_reif(aux28,travel_00006_00008,aux445_BOOL);
constraint int_eq_reif(0,travel_00007_00008,aux446_BOOL);
constraint int_eq_reif(aux10,travel_00007_00008,aux447_BOOL);
constraint int_eq_reif(travel_00008_00008,0,aux448_BOOL);
constraint int_eq_reif(travel_00008_00008,aux55,aux449_BOOL);
constraint array_var_int_element(aux174, [1, 2, 3, 4, 3, 2, 1], aux1);
constraint array_var_int_element(aux176, [1, 2, 3, 4, 3, 2, 1], aux2);
constraint array_var_int_element(aux173, [1, 2, 3, 4, 3, 2, 1], aux3);
constraint array_var_int_element(aux172, [1, 2, 3, 4, 3, 2, 1], aux4);
constraint array_var_int_element(aux175, [1, 2, 3, 4, 3, 2, 1], aux5);
constraint array_var_int_element(opponent_00007_00003, [2, 3, 4, 3, 2, 1, 0, 1], aux6);
constraint array_var_int_element(opponent_00007_00002, [2, 3, 4, 3, 2, 1, 0, 1], aux7);
constraint array_var_int_element(opponent_00007_00005, [2, 3, 4, 3, 2, 1, 0, 1], aux8);
constraint array_var_int_element(opponent_00007_00004, [2, 3, 4, 3, 2, 1, 0, 1], aux9);
constraint array_var_int_element(opponent_00007_00007, [2, 3, 4, 3, 2, 1, 0, 1], aux10);
constraint array_var_int_element(opponent_00007_00006, [2, 3, 4, 3, 2, 1, 0, 1], aux11);
constraint array_var_int_element(opponent_00007_00001, [2, 3, 4, 3, 2, 1, 0, 1], aux12);
constraint array_var_int_element(aux177, [1, 2, 3, 4, 3, 2], aux13);
constraint array_var_int_element(opponent_00003_00007, [2, 1, 0, 1, 2, 3, 4, 3], aux14);
constraint array_var_int_element(opponent_00003_00006, [2, 1, 0, 1, 2, 3, 4, 3], aux15);
constraint array_var_int_element(opponent_00003_00001, [2, 1, 0, 1, 2, 3, 4, 3], aux16);
constraint array_var_int_element(opponent_00003_00002, [2, 1, 0, 1, 2, 3, 4, 3], aux17);
constraint array_var_int_element(opponent_00003_00003, [2, 1, 0, 1, 2, 3, 4, 3], aux18);
constraint array_var_int_element(opponent_00003_00005, [2, 1, 0, 1, 2, 3, 4, 3], aux19);
constraint array_var_int_element(opponent_00003_00004, [2, 1, 0, 1, 2, 3, 4, 3], aux20);
constraint array_var_int_element(opponent_00005_00001, [4, 3, 2, 1, 0, 1, 2, 3], aux21);
constraint array_var_int_element(opponent_00005_00003, [4, 3, 2, 1, 0, 1, 2, 3], aux22);
constraint array_var_int_element(opponent_00005_00002, [4, 3, 2, 1, 0, 1, 2, 3], aux23);
constraint array_var_int_element(opponent_00005_00005, [4, 3, 2, 1, 0, 1, 2, 3], aux24);
constraint array_var_int_element(opponent_00005_00004, [4, 3, 2, 1, 0, 1, 2, 3], aux25);
constraint array_var_int_element(opponent_00005_00007, [4, 3, 2, 1, 0, 1, 2, 3], aux26);
constraint array_var_int_element(opponent_00005_00006, [4, 3, 2, 1, 0, 1, 2, 3], aux27);
constraint array_var_int_element(opponent_00006_00007, [3, 4, 3, 2, 1, 0, 1, 2], aux28);
constraint array_var_int_element(opponent_00006_00006, [3, 4, 3, 2, 1, 0, 1, 2], aux29);
constraint array_var_int_element(opponent_00006_00005, [3, 4, 3, 2, 1, 0, 1, 2], aux30);
constraint array_var_int_element(opponent_00006_00004, [3, 4, 3, 2, 1, 0, 1, 2], aux31);
constraint array_var_int_element(opponent_00006_00003, [3, 4, 3, 2, 1, 0, 1, 2], aux32);
constraint array_var_int_element(opponent_00006_00002, [3, 4, 3, 2, 1, 0, 1, 2], aux33);
constraint array_var_int_element(opponent_00006_00001, [3, 4, 3, 2, 1, 0, 1, 2], aux34);
constraint array_var_int_element(aux169, [2, 3, 4, 3, 2, 1], aux35);
constraint array_var_int_element(aux170, [1, 2, 3, 4, 3, 2], aux36);
constraint array_var_int_element(opponent_00004_00004, [3, 2, 1, 0, 1, 2, 3, 4], aux37);
constraint array_var_int_element(opponent_00004_00003, [3, 2, 1, 0, 1, 2, 3, 4], aux38);
constraint array_var_int_element(opponent_00004_00001, [3, 2, 1, 0, 1, 2, 3, 4], aux39);
constraint array_var_int_element(opponent_00004_00002, [3, 2, 1, 0, 1, 2, 3, 4], aux40);
constraint array_var_int_element(opponent_00004_00007, [3, 2, 1, 0, 1, 2, 3, 4], aux41);
constraint array_var_int_element(opponent_00004_00006, [3, 2, 1, 0, 1, 2, 3, 4], aux42);
constraint array_var_int_element(opponent_00004_00005, [3, 2, 1, 0, 1, 2, 3, 4], aux43);
constraint array_var_int_element(aux171, [2, 3, 4, 3, 2, 1], aux44);
constraint array_var_int_element(opponent_00002_00006, [1, 0, 1, 2, 3, 4, 3, 2], aux45);
constraint array_var_int_element(opponent_00002_00005, [1, 0, 1, 2, 3, 4, 3, 2], aux46);
constraint array_var_int_element(opponent_00002_00003, [1, 0, 1, 2, 3, 4, 3, 2], aux47);
constraint array_var_int_element(opponent_00002_00004, [1, 0, 1, 2, 3, 4, 3, 2], aux48);
constraint array_var_int_element(opponent_00002_00001, [1, 0, 1, 2, 3, 4, 3, 2], aux49);
constraint array_var_int_element(opponent_00002_00002, [1, 0, 1, 2, 3, 4, 3, 2], aux50);
constraint array_var_int_element(opponent_00008_00005, [1, 2, 3, 4, 3, 2, 1], aux51);
constraint array_var_int_element(opponent_00008_00004, [1, 2, 3, 4, 3, 2, 1], aux52);
constraint array_var_int_element(opponent_00008_00003, [1, 2, 3, 4, 3, 2, 1], aux53);
constraint array_var_int_element(opponent_00008_00002, [1, 2, 3, 4, 3, 2, 1], aux54);
constraint array_var_int_element(opponent_00008_00007, [1, 2, 3, 4, 3, 2, 1], aux55);
constraint array_var_int_element(opponent_00008_00006, [1, 2, 3, 4, 3, 2, 1], aux56);
constraint int_ne_reif(2,venue_00008_00002,aux57_BOOL);
constraint int_ne_reif(2,venue_00008_00006,aux58_BOOL);
constraint int_ne_reif(venue_00002_00002,2,aux59_BOOL);
constraint int_ne_reif(venue_00002_00002,1,aux60_BOOL);
constraint int_ne_reif(venue_00001_00002,1,aux61_BOOL);
constraint int_ne_reif(1,venue_00008_00003,aux62_BOOL);
constraint int_ne_reif(venue_00001_00002,2,aux63_BOOL);
constraint int_ne_reif(1,venue_00003_00004,aux64_BOOL);
constraint int_ne_reif(2,venue_00008_00005,aux65_BOOL);
constraint int_ne_reif(venue_00001_00001,1,aux66_BOOL);
constraint int_ne_reif(venue_00001_00001,2,aux67_BOOL);
constraint int_ne_reif(venue_00001_00007,1,aux68_BOOL);
constraint int_ne_reif(venue_00001_00007,2,aux69_BOOL);
constraint int_ne_reif(1,venue_00004_00003,aux70_BOOL);
constraint int_ne_reif(venue_00007_00005,2,aux71_BOOL);
constraint int_ne_reif(venue_00002_00006,2,aux72_BOOL);
constraint int_ne_reif(venue_00001_00005,2,aux73_BOOL);
constraint int_ne_reif(venue_00002_00006,1,aux74_BOOL);
constraint int_ne_reif(1,venue_00003_00005,aux75_BOOL);
constraint int_ne_reif(venue_00002_00003,2,aux76_BOOL);
constraint int_ne_reif(2,venue_00004_00005,aux77_BOOL);
constraint int_ne_reif(venue_00005_00005,2,aux78_BOOL);
constraint int_ne_reif(2,venue_00008_00004,aux79_BOOL);
constraint int_ne_reif(1,venue_00003_00002,aux80_BOOL);
constraint int_ne_reif(venue_00002_00005,1,aux81_BOOL);
constraint int_ne_reif(1,venue_00003_00006,aux82_BOOL);
constraint int_ne_reif(venue_00007_00004,2,aux83_BOOL);
constraint int_ne_reif(2,venue_00003_00003,aux84_BOOL);
constraint int_ne_reif(1,venue_00008_00007,aux85_BOOL);
constraint int_ne_reif(1,venue_00008_00001,aux86_BOOL);
constraint int_ne_reif(2,venue_00008_00007,aux87_BOOL);
constraint int_ne_reif(2,venue_00008_00001,aux88_BOOL);
constraint int_ne_reif(2,venue_00004_00003,aux89_BOOL);
constraint int_ne_reif(2,venue_00003_00006,aux90_BOOL);
constraint int_ne_reif(venue_00007_00007,1,aux91_BOOL);
constraint int_ne_reif(venue_00007_00007,2,aux92_BOOL);
constraint int_ne_reif(venue_00007_00001,1,aux93_BOOL);
constraint int_ne_reif(venue_00007_00001,2,aux94_BOOL);
constraint int_ne_reif(2,venue_00003_00002,aux95_BOOL);
constraint int_ne_reif(venue_00005_00005,1,aux96_BOOL);
constraint int_ne_reif(2,venue_00004_00006,aux97_BOOL);
constraint int_ne_reif(venue_00001_00006,2,aux98_BOOL);
constraint int_ne_reif(venue_00001_00006,1,aux99_BOOL);
constraint int_ne_reif(venue_00006_00001,1,aux100_BOOL);
constraint int_ne_reif(venue_00006_00001,2,aux101_BOOL);
constraint int_ne_reif(venue_00006_00007,2,aux102_BOOL);
constraint int_ne_reif(venue_00006_00007,1,aux103_BOOL);
constraint int_ne_reif(venue_00006_00005,1,aux104_BOOL);
constraint int_ne_reif(2,venue_00004_00002,aux105_BOOL);
constraint int_ne_reif(venue_00002_00004,2,aux106_BOOL);
constraint int_ne_reif(2,venue_00003_00004,aux107_BOOL);
constraint int_ne_reif(venue_00007_00004,1,aux108_BOOL);
constraint int_ne_reif(venue_00006_00005,2,aux109_BOOL);
constraint int_ne_reif(venue_00001_00005,1,aux110_BOOL);
constraint int_ne_reif(venue_00001_00003,2,aux111_BOOL);
constraint int_ne_reif(venue_00005_00003,2,aux112_BOOL);
constraint int_ne_reif(1,venue_00003_00001,aux113_BOOL);
constraint int_ne_reif(1,venue_00003_00007,aux114_BOOL);
constraint int_ne_reif(2,venue_00003_00001,aux115_BOOL);
constraint int_ne_reif(2,venue_00003_00007,aux116_BOOL);
constraint int_ne_reif(venue_00002_00005,2,aux117_BOOL);
constraint int_ne_reif(venue_00001_00004,2,aux118_BOOL);
constraint int_ne_reif(venue_00006_00004,1,aux119_BOOL);
constraint int_ne_reif(venue_00005_00003,1,aux120_BOOL);
constraint int_ne_reif(venue_00006_00003,1,aux121_BOOL);
constraint int_ne_reif(1,venue_00004_00005,aux122_BOOL);
constraint int_ne_reif(venue_00007_00002,2,aux123_BOOL);
constraint int_ne_reif(venue_00007_00002,1,aux124_BOOL);
constraint int_ne_reif(venue_00005_00004,1,aux125_BOOL);
constraint int_ne_reif(venue_00006_00004,2,aux126_BOOL);
constraint int_ne_reif(2,venue_00004_00004,aux127_BOOL);
constraint int_ne_reif(venue_00007_00003,1,aux128_BOOL);
constraint int_ne_reif(1,venue_00004_00006,aux129_BOOL);
constraint int_ne_reif(1,venue_00003_00003,aux130_BOOL);
constraint int_ne_reif(1,venue_00004_00002,aux131_BOOL);
constraint int_ne_reif(venue_00006_00003,2,aux132_BOOL);
constraint int_ne_reif(1,venue_00008_00005,aux133_BOOL);
constraint int_ne_reif(venue_00007_00006,1,aux134_BOOL);
constraint int_ne_reif(venue_00007_00006,2,aux135_BOOL);
constraint int_ne_reif(venue_00001_00003,1,aux136_BOOL);
constraint int_ne_reif(1,venue_00008_00002,aux137_BOOL);
constraint int_ne_reif(1,venue_00008_00004,aux138_BOOL);
constraint int_ne_reif(1,venue_00004_00004,aux139_BOOL);
constraint int_ne_reif(venue_00006_00006,1,aux140_BOOL);
constraint int_ne_reif(1,venue_00004_00001,aux141_BOOL);
constraint int_ne_reif(2,venue_00004_00007,aux142_BOOL);
constraint int_ne_reif(1,venue_00004_00007,aux143_BOOL);
constraint int_ne_reif(2,venue_00004_00001,aux144_BOOL);
constraint int_ne_reif(1,venue_00008_00006,aux145_BOOL);
constraint int_ne_reif(2,venue_00003_00005,aux146_BOOL);
constraint int_ne_reif(venue_00001_00004,1,aux147_BOOL);
constraint int_ne_reif(venue_00005_00002,2,aux148_BOOL);
constraint int_ne_reif(venue_00006_00006,2,aux149_BOOL);
constraint int_ne_reif(venue_00005_00002,1,aux150_BOOL);
constraint int_ne_reif(venue_00005_00006,2,aux151_BOOL);
constraint int_ne_reif(venue_00007_00005,1,aux152_BOOL);
constraint int_ne_reif(venue_00005_00006,1,aux153_BOOL);
constraint int_ne_reif(venue_00007_00003,2,aux154_BOOL);
constraint int_ne_reif(2,venue_00008_00003,aux155_BOOL);
constraint int_ne_reif(venue_00002_00001,2,aux156_BOOL);
constraint int_ne_reif(venue_00002_00001,1,aux157_BOOL);
constraint int_ne_reif(venue_00002_00007,1,aux158_BOOL);
constraint int_ne_reif(venue_00002_00007,2,aux159_BOOL);
constraint int_ne_reif(venue_00002_00004,1,aux160_BOOL);
constraint int_ne_reif(venue_00002_00003,1,aux161_BOOL);
constraint int_ne_reif(venue_00005_00007,1,aux162_BOOL);
constraint int_ne_reif(venue_00005_00007,2,aux163_BOOL);
constraint int_ne_reif(venue_00005_00001,2,aux164_BOOL);
constraint int_ne_reif(venue_00005_00001,1,aux165_BOOL);
constraint int_ne_reif(venue_00006_00002,2,aux166_BOOL);
constraint int_ne_reif(venue_00005_00004,2,aux167_BOOL);
constraint int_ne_reif(venue_00006_00002,1,aux168_BOOL);
constraint int_lin_eq([-1,1,1],[aux169,opponent_00008_00001,-1],0);
constraint int_lin_eq([-1,1,1],[aux170,opponent_00002_00007,-2],0);
constraint int_lin_eq([1,-1,1],[opponent_00001_00007,aux171,-2],0);
constraint int_lin_eq([1,-1,1],[opponent_00001_00004,aux172,-1],0);
constraint int_lin_eq([1,-1,1],[opponent_00001_00003,aux173,-1],0);
constraint int_lin_eq([1,-1,1],[opponent_00001_00006,aux174,-1],0);
constraint int_lin_eq([1,-1,1],[opponent_00001_00005,aux175,-1],0);
constraint int_lin_eq([1,-1,1],[opponent_00001_00002,aux176,-1],0);
constraint int_lin_eq([1,-1,1],[opponent_00001_00001,aux177,-1],0);
constraint all_different_int([opponent_00001_00001, opponent_00001_00002, opponent_00001_00003, opponent_00001_00004, opponent_00001_00005, opponent_00001_00006, opponent_00001_00007])::domain;
constraint int_lin_eq([1,1,1,1,1,1,1,1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[travel_00003_00001,travel_00003_00002,travel_00003_00003,travel_00003_00004,travel_00003_00005,travel_00003_00006,travel_00003_00007,travel_00003_00008,objective,travel_00008_00001,travel_00008_00002,travel_00008_00003,travel_00008_00004,travel_00008_00005,travel_00008_00006,travel_00008_00007,travel_00008_00008,travel_00004_00001,travel_00004_00002,travel_00004_00003,travel_00004_00004,travel_00004_00005,travel_00004_00006,travel_00004_00007,travel_00004_00008,travel_00005_00001,travel_00005_00002,travel_00005_00003,travel_00005_00004,travel_00005_00005,travel_00005_00006,travel_00005_00007,travel_00005_00008,travel_00001_00001,travel_00001_00002,travel_00001_00003,travel_00001_00004,travel_00001_00005,travel_00001_00006,travel_00001_00007,travel_00001_00008,travel_00006_00001,travel_00006_00002,travel_00006_00003,travel_00006_00004,travel_00006_00005,travel_00006_00006,travel_00006_00007,travel_00006_00008,travel_00002_00001,travel_00002_00002,travel_00002_00003,travel_00002_00004,travel_00002_00005,travel_00002_00006,travel_00002_00007,travel_00002_00008,travel_00007_00001,travel_00007_00002,travel_00007_00003,travel_00007_00004,travel_00007_00005,travel_00007_00006,travel_00007_00007,travel_00007_00008],0);
constraint int_lt(opponent_00001_00001,opponent_00001_00007);
constraint array_var_int_element(aux177, [2, 2, 2, 1, 1, 1], venue_00001_00001);
constraint array_var_int_element(aux176, [2, 2, 2, 1, 1, 1, 1], venue_00001_00002);
constraint array_var_int_element(aux173, [2, 2, 2, 1, 1, 1, 1], venue_00001_00003);
constraint array_var_int_element(aux172, [2, 2, 2, 1, 1, 1, 1], venue_00001_00004);
constraint array_var_int_element(aux175, [2, 2, 2, 1, 1, 1, 1], venue_00001_00005);
constraint array_var_int_element(aux174, [2, 2, 2, 1, 1, 1, 1], venue_00001_00006);
constraint array_var_int_element(aux171, [2, 2, 1, 1, 1, 1], venue_00001_00007);
constraint array_var_int_element(opponent_00002_00001, [1, 2, 1, 1, 2, 2, 2, 2], venue_00002_00001);
constraint array_var_int_element(opponent_00002_00002, [1, 2, 1, 1, 2, 2, 2, 2], venue_00002_00002);
constraint array_var_int_element(opponent_00002_00003, [1, 2, 1, 1, 2, 2, 2, 2], venue_00002_00003);
constraint array_var_int_element(opponent_00002_00004, [1, 2, 1, 1, 2, 2, 2, 2], venue_00002_00004);
constraint array_var_int_element(opponent_00002_00005, [1, 2, 1, 1, 2, 2, 2, 2], venue_00002_00005);
constraint array_var_int_element(opponent_00002_00006, [1, 2, 1, 1, 2, 2, 2, 2], venue_00002_00006);
constraint array_var_int_element(aux170, [1, 1, 2, 2, 2, 2], venue_00002_00007);
constraint array_var_int_element(opponent_00003_00001, [1, 2, 2, 2, 1, 2, 2, 1], venue_00003_00001);
constraint array_var_int_element(opponent_00003_00002, [1, 2, 2, 2, 1, 2, 2, 1], venue_00003_00002);
constraint array_var_int_element(opponent_00003_00003, [1, 2, 2, 2, 1, 2, 2, 1], venue_00003_00003);
constraint array_var_int_element(opponent_00003_00004, [1, 2, 2, 2, 1, 2, 2, 1], venue_00003_00004);
constraint array_var_int_element(opponent_00003_00005, [1, 2, 2, 2, 1, 2, 2, 1], venue_00003_00005);
constraint array_var_int_element(opponent_00003_00006, [1, 2, 2, 2, 1, 2, 2, 1], venue_00003_00006);
constraint array_var_int_element(opponent_00003_00007, [1, 2, 2, 2, 1, 2, 2, 1], venue_00003_00007);
constraint array_var_int_element(opponent_00004_00001, [1, 2, 1, 2, 2, 2, 1, 2], venue_00004_00001);
constraint array_var_int_element(opponent_00004_00002, [1, 2, 1, 2, 2, 2, 1, 2], venue_00004_00002);
constraint array_var_int_element(opponent_00004_00003, [1, 2, 1, 2, 2, 2, 1, 2], venue_00004_00003);
constraint array_var_int_element(opponent_00004_00004, [1, 2, 1, 2, 2, 2, 1, 2], venue_00004_00004);
constraint array_var_int_element(opponent_00004_00005, [1, 2, 1, 2, 2, 2, 1, 2], venue_00004_00005);
constraint array_var_int_element(opponent_00004_00006, [1, 2, 1, 2, 2, 2, 1, 2], venue_00004_00006);
constraint array_var_int_element(opponent_00004_00007, [1, 2, 1, 2, 2, 2, 1, 2], venue_00004_00007);
constraint array_var_int_element(opponent_00005_00001, [2, 1, 2, 1, 2, 1, 2, 2], venue_00005_00001);
constraint array_var_int_element(opponent_00005_00002, [2, 1, 2, 1, 2, 1, 2, 2], venue_00005_00002);
constraint array_var_int_element(opponent_00005_00003, [2, 1, 2, 1, 2, 1, 2, 2], venue_00005_00003);
constraint array_var_int_element(opponent_00005_00004, [2, 1, 2, 1, 2, 1, 2, 2], venue_00005_00004);
constraint array_var_int_element(opponent_00005_00005, [2, 1, 2, 1, 2, 1, 2, 2], venue_00005_00005);
constraint array_var_int_element(opponent_00005_00006, [2, 1, 2, 1, 2, 1, 2, 2], venue_00005_00006);
constraint array_var_int_element(opponent_00005_00007, [2, 1, 2, 1, 2, 1, 2, 2], venue_00005_00007);
constraint array_var_int_element(opponent_00006_00001, [2, 1, 1, 1, 2, 2, 2, 1], venue_00006_00001);
constraint array_var_int_element(opponent_00006_00002, [2, 1, 1, 1, 2, 2, 2, 1], venue_00006_00002);
constraint array_var_int_element(opponent_00006_00003, [2, 1, 1, 1, 2, 2, 2, 1], venue_00006_00003);
constraint array_var_int_element(opponent_00006_00004, [2, 1, 1, 1, 2, 2, 2, 1], venue_00006_00004);
constraint array_var_int_element(opponent_00006_00005, [2, 1, 1, 1, 2, 2, 2, 1], venue_00006_00005);
constraint array_var_int_element(opponent_00006_00006, [2, 1, 1, 1, 2, 2, 2, 1], venue_00006_00006);
constraint array_var_int_element(opponent_00006_00007, [2, 1, 1, 1, 2, 2, 2, 1], venue_00006_00007);
constraint array_var_int_element(opponent_00007_00001, [2, 1, 1, 2, 1, 1, 2, 2], venue_00007_00001);
constraint array_var_int_element(opponent_00007_00002, [2, 1, 1, 2, 1, 1, 2, 2], venue_00007_00002);
constraint array_var_int_element(opponent_00007_00003, [2, 1, 1, 2, 1, 1, 2, 2], venue_00007_00003);
constraint array_var_int_element(opponent_00007_00004, [2, 1, 1, 2, 1, 1, 2, 2], venue_00007_00004);
constraint array_var_int_element(opponent_00007_00005, [2, 1, 1, 2, 1, 1, 2, 2], venue_00007_00005);
constraint array_var_int_element(opponent_00007_00006, [2, 1, 1, 2, 1, 1, 2, 2], venue_00007_00006);
constraint array_var_int_element(opponent_00007_00007, [2, 1, 1, 2, 1, 1, 2, 2], venue_00007_00007);
constraint array_var_int_element(aux169, [1, 2, 1, 1, 2, 1], venue_00008_00001);
constraint array_var_int_element(opponent_00008_00002, [2, 1, 2, 1, 1, 2, 1], venue_00008_00002);
constraint array_var_int_element(opponent_00008_00003, [2, 1, 2, 1, 1, 2, 1], venue_00008_00003);
constraint array_var_int_element(opponent_00008_00004, [2, 1, 2, 1, 1, 2, 1], venue_00008_00004);
constraint array_var_int_element(opponent_00008_00005, [2, 1, 2, 1, 1, 2, 1], venue_00008_00005);
constraint array_var_int_element(opponent_00008_00006, [2, 1, 2, 1, 1, 2, 1], venue_00008_00006);
constraint array_var_int_element(opponent_00008_00007, [2, 1, 2, 1, 1, 2, 1], venue_00008_00007);
constraint array_var_int_element(aux177, [opponent_00002_00001, opponent_00003_00001, opponent_00004_00001, opponent_00005_00001, opponent_00006_00001, opponent_00007_00001], 1);
constraint array_var_int_element(aux176, [opponent_00002_00002, opponent_00003_00002, opponent_00004_00002, opponent_00005_00002, opponent_00006_00002, opponent_00007_00002, opponent_00008_00002], 1);
constraint array_var_int_element(aux173, [opponent_00002_00003, opponent_00003_00003, opponent_00004_00003, opponent_00005_00003, opponent_00006_00003, opponent_00007_00003, opponent_00008_00003], 1);
constraint array_var_int_element(aux172, [opponent_00002_00004, opponent_00003_00004, opponent_00004_00004, opponent_00005_00004, opponent_00006_00004, opponent_00007_00004, opponent_00008_00004], 1);
constraint array_var_int_element(aux175, [opponent_00002_00005, opponent_00003_00005, opponent_00004_00005, opponent_00005_00005, opponent_00006_00005, opponent_00007_00005, opponent_00008_00005], 1);
constraint array_var_int_element(aux174, [opponent_00002_00006, opponent_00003_00006, opponent_00004_00006, opponent_00005_00006, opponent_00006_00006, opponent_00007_00006, opponent_00008_00006], 1);
constraint array_var_int_element(aux171, [opponent_00003_00007, opponent_00004_00007, opponent_00005_00007, opponent_00006_00007, opponent_00007_00007, opponent_00008_00007], 1);
constraint array_var_int_element(opponent_00002_00001, [opponent_00001_00001, opponent_00002_00001, opponent_00003_00001, opponent_00004_00001, opponent_00005_00001, opponent_00006_00001, opponent_00007_00001, opponent_00008_00001], 2);
constraint array_var_int_element(opponent_00002_00002, [opponent_00001_00002, opponent_00002_00002, opponent_00003_00002, opponent_00004_00002, opponent_00005_00002, opponent_00006_00002, opponent_00007_00002, opponent_00008_00002], 2);
constraint array_var_int_element(opponent_00002_00003, [opponent_00001_00003, opponent_00002_00003, opponent_00003_00003, opponent_00004_00003, opponent_00005_00003, opponent_00006_00003, opponent_00007_00003, opponent_00008_00003], 2);
constraint array_var_int_element(opponent_00002_00004, [opponent_00001_00004, opponent_00002_00004, opponent_00003_00004, opponent_00004_00004, opponent_00005_00004, opponent_00006_00004, opponent_00007_00004, opponent_00008_00004], 2);
constraint array_var_int_element(opponent_00002_00005, [opponent_00001_00005, opponent_00002_00005, opponent_00003_00005, opponent_00004_00005, opponent_00005_00005, opponent_00006_00005, opponent_00007_00005, opponent_00008_00005], 2);
constraint array_var_int_element(opponent_00002_00006, [opponent_00001_00006, opponent_00002_00006, opponent_00003_00006, opponent_00004_00006, opponent_00005_00006, opponent_00006_00006, opponent_00007_00006, opponent_00008_00006], 2);
constraint array_var_int_element(aux170, [opponent_00003_00007, opponent_00004_00007, opponent_00005_00007, opponent_00006_00007, opponent_00007_00007, opponent_00008_00007], 2);
constraint array_var_int_element(opponent_00003_00001, [opponent_00001_00001, opponent_00002_00001, opponent_00003_00001, opponent_00004_00001, opponent_00005_00001, opponent_00006_00001, opponent_00007_00001, opponent_00008_00001], 3);
constraint array_var_int_element(opponent_00003_00002, [opponent_00001_00002, opponent_00002_00002, opponent_00003_00002, opponent_00004_00002, opponent_00005_00002, opponent_00006_00002, opponent_00007_00002, opponent_00008_00002], 3);
constraint array_var_int_element(opponent_00003_00003, [opponent_00001_00003, opponent_00002_00003, opponent_00003_00003, opponent_00004_00003, opponent_00005_00003, opponent_00006_00003, opponent_00007_00003, opponent_00008_00003], 3);
constraint array_var_int_element(opponent_00003_00004, [opponent_00001_00004, opponent_00002_00004, opponent_00003_00004, opponent_00004_00004, opponent_00005_00004, opponent_00006_00004, opponent_00007_00004, opponent_00008_00004], 3);
constraint array_var_int_element(opponent_00003_00005, [opponent_00001_00005, opponent_00002_00005, opponent_00003_00005, opponent_00004_00005, opponent_00005_00005, opponent_00006_00005, opponent_00007_00005, opponent_00008_00005], 3);
constraint array_var_int_element(opponent_00003_00006, [opponent_00001_00006, opponent_00002_00006, opponent_00003_00006, opponent_00004_00006, opponent_00005_00006, opponent_00006_00006, opponent_00007_00006, opponent_00008_00006], 3);
constraint array_var_int_element(opponent_00003_00007, [opponent_00001_00007, opponent_00002_00007, opponent_00003_00007, opponent_00004_00007, opponent_00005_00007, opponent_00006_00007, opponent_00007_00007, opponent_00008_00007], 3);
constraint array_var_int_element(opponent_00004_00001, [opponent_00001_00001, opponent_00002_00001, opponent_00003_00001, opponent_00004_00001, opponent_00005_00001, opponent_00006_00001, opponent_00007_00001, opponent_00008_00001], 4);
constraint array_var_int_element(opponent_00004_00002, [opponent_00001_00002, opponent_00002_00002, opponent_00003_00002, opponent_00004_00002, opponent_00005_00002, opponent_00006_00002, opponent_00007_00002, opponent_00008_00002], 4);
constraint array_var_int_element(opponent_00004_00003, [opponent_00001_00003, opponent_00002_00003, opponent_00003_00003, opponent_00004_00003, opponent_00005_00003, opponent_00006_00003, opponent_00007_00003, opponent_00008_00003], 4);
constraint array_var_int_element(opponent_00004_00004, [opponent_00001_00004, opponent_00002_00004, opponent_00003_00004, opponent_00004_00004, opponent_00005_00004, opponent_00006_00004, opponent_00007_00004, opponent_00008_00004], 4);
constraint array_var_int_element(opponent_00004_00005, [opponent_00001_00005, opponent_00002_00005, opponent_00003_00005, opponent_00004_00005, opponent_00005_00005, opponent_00006_00005, opponent_00007_00005, opponent_00008_00005], 4);
constraint array_var_int_element(opponent_00004_00006, [opponent_00001_00006, opponent_00002_00006, opponent_00003_00006, opponent_00004_00006, opponent_00005_00006, opponent_00006_00006, opponent_00007_00006, opponent_00008_00006], 4);
constraint array_var_int_element(opponent_00004_00007, [opponent_00001_00007, opponent_00002_00007, opponent_00003_00007, opponent_00004_00007, opponent_00005_00007, opponent_00006_00007, opponent_00007_00007, opponent_00008_00007], 4);
constraint array_var_int_element(opponent_00005_00001, [opponent_00001_00001, opponent_00002_00001, opponent_00003_00001, opponent_00004_00001, opponent_00005_00001, opponent_00006_00001, opponent_00007_00001, opponent_00008_00001], 5);
constraint array_var_int_element(opponent_00005_00002, [opponent_00001_00002, opponent_00002_00002, opponent_00003_00002, opponent_00004_00002, opponent_00005_00002, opponent_00006_00002, opponent_00007_00002, opponent_00008_00002], 5);
constraint array_var_int_element(opponent_00005_00003, [opponent_00001_00003, opponent_00002_00003, opponent_00003_00003, opponent_00004_00003, opponent_00005_00003, opponent_00006_00003, opponent_00007_00003, opponent_00008_00003], 5);
constraint array_var_int_element(opponent_00005_00004, [opponent_00001_00004, opponent_00002_00004, opponent_00003_00004, opponent_00004_00004, opponent_00005_00004, opponent_00006_00004, opponent_00007_00004, opponent_00008_00004], 5);
constraint array_var_int_element(opponent_00005_00005, [opponent_00001_00005, opponent_00002_00005, opponent_00003_00005, opponent_00004_00005, opponent_00005_00005, opponent_00006_00005, opponent_00007_00005, opponent_00008_00005], 5);
constraint array_var_int_element(opponent_00005_00006, [opponent_00001_00006, opponent_00002_00006, opponent_00003_00006, opponent_00004_00006, opponent_00005_00006, opponent_00006_00006, opponent_00007_00006, opponent_00008_00006], 5);
constraint array_var_int_element(opponent_00005_00007, [opponent_00001_00007, opponent_00002_00007, opponent_00003_00007, opponent_00004_00007, opponent_00005_00007, opponent_00006_00007, opponent_00007_00007, opponent_00008_00007], 5);
constraint array_var_int_element(opponent_00006_00001, [opponent_00001_00001, opponent_00002_00001, opponent_00003_00001, opponent_00004_00001, opponent_00005_00001, opponent_00006_00001, opponent_00007_00001, opponent_00008_00001], 6);
constraint array_var_int_element(opponent_00006_00002, [opponent_00001_00002, opponent_00002_00002, opponent_00003_00002, opponent_00004_00002, opponent_00005_00002, opponent_00006_00002, opponent_00007_00002, opponent_00008_00002], 6);
constraint array_var_int_element(opponent_00006_00003, [opponent_00001_00003, opponent_00002_00003, opponent_00003_00003, opponent_00004_00003, opponent_00005_00003, opponent_00006_00003, opponent_00007_00003, opponent_00008_00003], 6);
constraint array_var_int_element(opponent_00006_00004, [opponent_00001_00004, opponent_00002_00004, opponent_00003_00004, opponent_00004_00004, opponent_00005_00004, opponent_00006_00004, opponent_00007_00004, opponent_00008_00004], 6);
constraint array_var_int_element(opponent_00006_00005, [opponent_00001_00005, opponent_00002_00005, opponent_00003_00005, opponent_00004_00005, opponent_00005_00005, opponent_00006_00005, opponent_00007_00005, opponent_00008_00005], 6);
constraint array_var_int_element(opponent_00006_00006, [opponent_00001_00006, opponent_00002_00006, opponent_00003_00006, opponent_00004_00006, opponent_00005_00006, opponent_00006_00006, opponent_00007_00006, opponent_00008_00006], 6);
constraint array_var_int_element(opponent_00006_00007, [opponent_00001_00007, opponent_00002_00007, opponent_00003_00007, opponent_00004_00007, opponent_00005_00007, opponent_00006_00007, opponent_00007_00007, opponent_00008_00007], 6);
constraint array_var_int_element(opponent_00007_00001, [opponent_00001_00001, opponent_00002_00001, opponent_00003_00001, opponent_00004_00001, opponent_00005_00001, opponent_00006_00001, opponent_00007_00001, opponent_00008_00001], 7);
constraint array_var_int_element(opponent_00007_00002, [opponent_00001_00002, opponent_00002_00002, opponent_00003_00002, opponent_00004_00002, opponent_00005_00002, opponent_00006_00002, opponent_00007_00002, opponent_00008_00002], 7);
constraint array_var_int_element(opponent_00007_00003, [opponent_00001_00003, opponent_00002_00003, opponent_00003_00003, opponent_00004_00003, opponent_00005_00003, opponent_00006_00003, opponent_00007_00003, opponent_00008_00003], 7);
constraint array_var_int_element(opponent_00007_00004, [opponent_00001_00004, opponent_00002_00004, opponent_00003_00004, opponent_00004_00004, opponent_00005_00004, opponent_00006_00004, opponent_00007_00004, opponent_00008_00004], 7);
constraint array_var_int_element(opponent_00007_00005, [opponent_00001_00005, opponent_00002_00005, opponent_00003_00005, opponent_00004_00005, opponent_00005_00005, opponent_00006_00005, opponent_00007_00005, opponent_00008_00005], 7);
constraint array_var_int_element(opponent_00007_00006, [opponent_00001_00006, opponent_00002_00006, opponent_00003_00006, opponent_00004_00006, opponent_00005_00006, opponent_00006_00006, opponent_00007_00006, opponent_00008_00006], 7);
constraint array_var_int_element(opponent_00007_00007, [opponent_00001_00007, opponent_00002_00007, opponent_00003_00007, opponent_00004_00007, opponent_00005_00007, opponent_00006_00007, opponent_00007_00007, opponent_00008_00007], 7);
constraint array_var_int_element(aux169, [opponent_00002_00001, opponent_00003_00001, opponent_00004_00001, opponent_00005_00001, opponent_00006_00001, opponent_00007_00001], 8);
constraint array_var_int_element(opponent_00008_00002, [opponent_00001_00002, opponent_00002_00002, opponent_00003_00002, opponent_00004_00002, opponent_00005_00002, opponent_00006_00002, opponent_00007_00002], 8);
constraint array_var_int_element(opponent_00008_00003, [opponent_00001_00003, opponent_00002_00003, opponent_00003_00003, opponent_00004_00003, opponent_00005_00003, opponent_00006_00003, opponent_00007_00003], 8);
constraint array_var_int_element(opponent_00008_00004, [opponent_00001_00004, opponent_00002_00004, opponent_00003_00004, opponent_00004_00004, opponent_00005_00004, opponent_00006_00004, opponent_00007_00004], 8);
constraint array_var_int_element(opponent_00008_00005, [opponent_00001_00005, opponent_00002_00005, opponent_00003_00005, opponent_00004_00005, opponent_00005_00005, opponent_00006_00005, opponent_00007_00005], 8);
constraint array_var_int_element(opponent_00008_00006, [opponent_00001_00006, opponent_00002_00006, opponent_00003_00006, opponent_00004_00006, opponent_00005_00006, opponent_00006_00006, opponent_00007_00006], 8);
constraint array_var_int_element(opponent_00008_00007, [opponent_00001_00007, opponent_00002_00007, opponent_00003_00007, opponent_00004_00007, opponent_00005_00007, opponent_00006_00007, opponent_00007_00007], 8);
constraint all_different_int([opponent_00002_00001, opponent_00002_00002, opponent_00002_00003, opponent_00002_00004, opponent_00002_00005, opponent_00002_00006, opponent_00002_00007])::domain;
constraint all_different_int([opponent_00003_00001, opponent_00003_00002, opponent_00003_00003, opponent_00003_00004, opponent_00003_00005, opponent_00003_00006, opponent_00003_00007])::domain;
constraint all_different_int([opponent_00004_00001, opponent_00004_00002, opponent_00004_00003, opponent_00004_00004, opponent_00004_00005, opponent_00004_00006, opponent_00004_00007])::domain;
constraint all_different_int([opponent_00005_00001, opponent_00005_00002, opponent_00005_00003, opponent_00005_00004, opponent_00005_00005, opponent_00005_00006, opponent_00005_00007])::domain;
constraint all_different_int([opponent_00006_00001, opponent_00006_00002, opponent_00006_00003, opponent_00006_00004, opponent_00006_00005, opponent_00006_00006, opponent_00006_00007])::domain;
constraint all_different_int([opponent_00007_00001, opponent_00007_00002, opponent_00007_00003, opponent_00007_00004, opponent_00007_00005, opponent_00007_00006, opponent_00007_00007])::domain;
constraint all_different_int([opponent_00008_00001, opponent_00008_00002, opponent_00008_00003, opponent_00008_00004, opponent_00008_00005, opponent_00008_00006, opponent_00008_00007])::domain;
constraint all_different_int([opponent_00001_00001, opponent_00006_00001, opponent_00002_00001, opponent_00007_00001, opponent_00003_00001, opponent_00008_00001, opponent_00004_00001, opponent_00005_00001])::domain;
constraint all_different_int([opponent_00001_00002, opponent_00006_00002, opponent_00002_00002, opponent_00007_00002, opponent_00003_00002, opponent_00008_00002, opponent_00004_00002, opponent_00005_00002])::domain;
constraint all_different_int([opponent_00001_00003, opponent_00006_00003, opponent_00002_00003, opponent_00007_00003, opponent_00003_00003, opponent_00008_00003, opponent_00004_00003, opponent_00005_00003])::domain;
constraint all_different_int([opponent_00001_00004, opponent_00006_00004, opponent_00002_00004, opponent_00007_00004, opponent_00003_00004, opponent_00008_00004, opponent_00004_00004, opponent_00005_00004])::domain;
constraint all_different_int([opponent_00001_00005, opponent_00006_00005, opponent_00002_00005, opponent_00007_00005, opponent_00003_00005, opponent_00008_00005, opponent_00004_00005, opponent_00005_00005])::domain;
constraint all_different_int([opponent_00001_00006, opponent_00006_00006, opponent_00002_00006, opponent_00007_00006, opponent_00003_00006, opponent_00008_00006, opponent_00004_00006, opponent_00005_00006])::domain;
constraint all_different_int([opponent_00001_00007, opponent_00006_00007, opponent_00002_00007, opponent_00007_00007, opponent_00003_00007, opponent_00008_00007, opponent_00004_00007, opponent_00005_00007])::domain;
constraint array_bool_or([aux66_BOOL,aux61_BOOL,aux136_BOOL,aux147_BOOL],true);
constraint array_bool_or([aux61_BOOL,aux136_BOOL,aux147_BOOL,aux110_BOOL],true);
constraint array_bool_or([aux136_BOOL,aux147_BOOL,aux110_BOOL,aux99_BOOL],true);
constraint array_bool_or([aux147_BOOL,aux110_BOOL,aux99_BOOL,aux68_BOOL],true);
constraint array_bool_or([aux67_BOOL,aux63_BOOL,aux111_BOOL,aux118_BOOL],true);
constraint array_bool_or([aux63_BOOL,aux111_BOOL,aux118_BOOL,aux73_BOOL],true);
constraint array_bool_or([aux111_BOOL,aux118_BOOL,aux73_BOOL,aux98_BOOL],true);
constraint array_bool_or([aux118_BOOL,aux73_BOOL,aux98_BOOL,aux69_BOOL],true);
constraint array_bool_or([aux157_BOOL,aux60_BOOL,aux161_BOOL,aux160_BOOL],true);
constraint array_bool_or([aux60_BOOL,aux161_BOOL,aux160_BOOL,aux81_BOOL],true);
constraint array_bool_or([aux161_BOOL,aux160_BOOL,aux81_BOOL,aux74_BOOL],true);
constraint array_bool_or([aux160_BOOL,aux81_BOOL,aux74_BOOL,aux158_BOOL],true);
constraint array_bool_or([aux156_BOOL,aux59_BOOL,aux76_BOOL,aux106_BOOL],true);
constraint array_bool_or([aux59_BOOL,aux76_BOOL,aux106_BOOL,aux117_BOOL],true);
constraint array_bool_or([aux76_BOOL,aux106_BOOL,aux117_BOOL,aux72_BOOL],true);
constraint array_bool_or([aux106_BOOL,aux117_BOOL,aux72_BOOL,aux159_BOOL],true);
constraint array_bool_or([aux113_BOOL,aux80_BOOL,aux130_BOOL,aux64_BOOL],true);
constraint array_bool_or([aux80_BOOL,aux130_BOOL,aux64_BOOL,aux75_BOOL],true);
constraint array_bool_or([aux130_BOOL,aux64_BOOL,aux75_BOOL,aux82_BOOL],true);
constraint array_bool_or([aux64_BOOL,aux75_BOOL,aux82_BOOL,aux114_BOOL],true);
constraint array_bool_or([aux115_BOOL,aux95_BOOL,aux84_BOOL,aux107_BOOL],true);
constraint array_bool_or([aux95_BOOL,aux84_BOOL,aux107_BOOL,aux146_BOOL],true);
constraint array_bool_or([aux84_BOOL,aux107_BOOL,aux146_BOOL,aux90_BOOL],true);
constraint array_bool_or([aux107_BOOL,aux146_BOOL,aux90_BOOL,aux116_BOOL],true);
constraint array_bool_or([aux141_BOOL,aux131_BOOL,aux70_BOOL,aux139_BOOL],true);
constraint array_bool_or([aux131_BOOL,aux70_BOOL,aux139_BOOL,aux122_BOOL],true);
constraint array_bool_or([aux70_BOOL,aux139_BOOL,aux122_BOOL,aux129_BOOL],true);
constraint array_bool_or([aux139_BOOL,aux122_BOOL,aux129_BOOL,aux143_BOOL],true);
constraint array_bool_or([aux144_BOOL,aux105_BOOL,aux89_BOOL,aux127_BOOL],true);
constraint array_bool_or([aux105_BOOL,aux89_BOOL,aux127_BOOL,aux77_BOOL],true);
constraint array_bool_or([aux89_BOOL,aux127_BOOL,aux77_BOOL,aux97_BOOL],true);
constraint array_bool_or([aux127_BOOL,aux77_BOOL,aux97_BOOL,aux142_BOOL],true);
constraint array_bool_or([aux165_BOOL,aux150_BOOL,aux120_BOOL,aux125_BOOL],true);
constraint array_bool_or([aux150_BOOL,aux120_BOOL,aux125_BOOL,aux96_BOOL],true);
constraint array_bool_or([aux120_BOOL,aux125_BOOL,aux96_BOOL,aux153_BOOL],true);
constraint array_bool_or([aux125_BOOL,aux96_BOOL,aux153_BOOL,aux162_BOOL],true);
constraint array_bool_or([aux164_BOOL,aux148_BOOL,aux112_BOOL,aux167_BOOL],true);
constraint array_bool_or([aux148_BOOL,aux112_BOOL,aux167_BOOL,aux78_BOOL],true);
constraint array_bool_or([aux112_BOOL,aux167_BOOL,aux78_BOOL,aux151_BOOL],true);
constraint array_bool_or([aux167_BOOL,aux78_BOOL,aux151_BOOL,aux163_BOOL],true);
constraint array_bool_or([aux100_BOOL,aux168_BOOL,aux121_BOOL,aux119_BOOL],true);
constraint array_bool_or([aux168_BOOL,aux121_BOOL,aux119_BOOL,aux104_BOOL],true);
constraint array_bool_or([aux121_BOOL,aux119_BOOL,aux104_BOOL,aux140_BOOL],true);
constraint array_bool_or([aux119_BOOL,aux104_BOOL,aux140_BOOL,aux103_BOOL],true);
constraint array_bool_or([aux101_BOOL,aux166_BOOL,aux132_BOOL,aux126_BOOL],true);
constraint array_bool_or([aux166_BOOL,aux132_BOOL,aux126_BOOL,aux109_BOOL],true);
constraint array_bool_or([aux132_BOOL,aux126_BOOL,aux109_BOOL,aux149_BOOL],true);
constraint array_bool_or([aux126_BOOL,aux109_BOOL,aux149_BOOL,aux102_BOOL],true);
constraint array_bool_or([aux93_BOOL,aux124_BOOL,aux128_BOOL,aux108_BOOL],true);
constraint array_bool_or([aux124_BOOL,aux128_BOOL,aux108_BOOL,aux152_BOOL],true);
constraint array_bool_or([aux128_BOOL,aux108_BOOL,aux152_BOOL,aux134_BOOL],true);
constraint array_bool_or([aux108_BOOL,aux152_BOOL,aux134_BOOL,aux91_BOOL],true);
constraint array_bool_or([aux94_BOOL,aux123_BOOL,aux154_BOOL,aux83_BOOL],true);
constraint array_bool_or([aux123_BOOL,aux154_BOOL,aux83_BOOL,aux71_BOOL],true);
constraint array_bool_or([aux154_BOOL,aux83_BOOL,aux71_BOOL,aux135_BOOL],true);
constraint array_bool_or([aux83_BOOL,aux71_BOOL,aux135_BOOL,aux92_BOOL],true);
constraint array_bool_or([aux86_BOOL,aux137_BOOL,aux62_BOOL,aux138_BOOL],true);
constraint array_bool_or([aux137_BOOL,aux62_BOOL,aux138_BOOL,aux133_BOOL],true);
constraint array_bool_or([aux62_BOOL,aux138_BOOL,aux133_BOOL,aux145_BOOL],true);
constraint array_bool_or([aux138_BOOL,aux133_BOOL,aux145_BOOL,aux85_BOOL],true);
constraint array_bool_or([aux88_BOOL,aux57_BOOL,aux155_BOOL,aux79_BOOL],true);
constraint array_bool_or([aux57_BOOL,aux155_BOOL,aux79_BOOL,aux65_BOOL],true);
constraint array_bool_or([aux155_BOOL,aux79_BOOL,aux65_BOOL,aux58_BOOL],true);
constraint array_bool_or([aux79_BOOL,aux65_BOOL,aux58_BOOL,aux87_BOOL],true);
constraint bool_clause([aux66_BOOL,aux178_BOOL],[]);
constraint bool_clause([aux67_BOOL,aux179_BOOL],[]);
constraint bool_clause([aux157_BOOL,aux180_BOOL],[]);
constraint bool_clause([aux156_BOOL,aux181_BOOL],[]);
constraint bool_clause([aux113_BOOL,aux182_BOOL],[]);
constraint bool_clause([aux115_BOOL,aux183_BOOL],[]);
constraint bool_clause([aux141_BOOL,aux184_BOOL],[]);
constraint bool_clause([aux144_BOOL,aux185_BOOL],[]);
constraint bool_clause([aux165_BOOL,aux186_BOOL],[]);
constraint bool_clause([aux164_BOOL,aux187_BOOL],[]);
constraint bool_clause([aux100_BOOL,aux188_BOOL],[]);
constraint bool_clause([aux101_BOOL,aux189_BOOL],[]);
constraint bool_clause([aux93_BOOL,aux190_BOOL],[]);
constraint bool_clause([aux94_BOOL,aux191_BOOL],[]);
constraint bool_clause([aux86_BOOL,aux192_BOOL],[]);
constraint bool_clause([aux88_BOOL,aux193_BOOL],[]);
constraint array_bool_or([aux195_BOOL,aux67_BOOL,aux63_BOOL],true);
constraint array_bool_or([aux66_BOOL,aux63_BOOL,aux196_BOOL],true);
constraint array_bool_or([aux197_BOOL,aux66_BOOL,aux61_BOOL],true);
constraint array_bool_or([aux198_BOOL,aux67_BOOL,aux61_BOOL],true);
constraint array_bool_or([aux200_BOOL,aux63_BOOL,aux111_BOOL],true);
constraint array_bool_or([aux61_BOOL,aux111_BOOL,aux201_BOOL],true);
constraint array_bool_or([aux202_BOOL,aux61_BOOL,aux136_BOOL],true);
constraint array_bool_or([aux63_BOOL,aux136_BOOL,aux203_BOOL],true);
constraint array_bool_or([aux205_BOOL,aux111_BOOL,aux118_BOOL],true);
constraint array_bool_or([aux136_BOOL,aux118_BOOL,aux206_BOOL],true);
constraint array_bool_or([aux207_BOOL,aux136_BOOL,aux147_BOOL],true);
constraint array_bool_or([aux111_BOOL,aux147_BOOL,aux208_BOOL],true);
constraint array_bool_or([aux210_BOOL,aux118_BOOL,aux73_BOOL],true);
constraint array_bool_or([aux147_BOOL,aux73_BOOL,aux211_BOOL],true);
constraint array_bool_or([aux212_BOOL,aux147_BOOL,aux110_BOOL],true);
constraint array_bool_or([aux118_BOOL,aux110_BOOL,aux213_BOOL],true);
constraint array_bool_or([aux215_BOOL,aux73_BOOL,aux98_BOOL],true);
constraint array_bool_or([aux110_BOOL,aux98_BOOL,aux216_BOOL],true);
constraint array_bool_or([aux217_BOOL,aux110_BOOL,aux99_BOOL],true);
constraint array_bool_or([aux73_BOOL,aux99_BOOL,aux218_BOOL],true);
constraint array_bool_or([aux98_BOOL,aux69_BOOL,aux220_BOOL],true);
constraint array_bool_or([aux221_BOOL,aux99_BOOL,aux69_BOOL],true);
constraint array_bool_or([aux222_BOOL,aux99_BOOL,aux68_BOOL],true);
constraint array_bool_or([aux98_BOOL,aux68_BOOL,aux223_BOOL],true);
constraint array_bool_or([aux156_BOOL,aux59_BOOL,aux225_BOOL],true);
constraint array_bool_or([aux157_BOOL,aux59_BOOL,aux226_BOOL],true);
constraint array_bool_or([aux157_BOOL,aux60_BOOL,aux227_BOOL],true);
constraint array_bool_or([aux156_BOOL,aux60_BOOL,aux228_BOOL],true);
constraint array_bool_or([aux59_BOOL,aux76_BOOL,aux230_BOOL],true);
constraint array_bool_or([aux60_BOOL,aux76_BOOL,aux231_BOOL],true);
constraint array_bool_or([aux60_BOOL,aux161_BOOL,aux232_BOOL],true);
constraint array_bool_or([aux59_BOOL,aux161_BOOL,aux233_BOOL],true);
constraint array_bool_or([aux76_BOOL,aux106_BOOL,aux235_BOOL],true);
constraint array_bool_or([aux161_BOOL,aux106_BOOL,aux236_BOOL],true);
constraint array_bool_or([aux161_BOOL,aux160_BOOL,aux237_BOOL],true);
constraint array_bool_or([aux76_BOOL,aux160_BOOL,aux238_BOOL],true);
constraint array_bool_or([aux106_BOOL,aux117_BOOL,aux240_BOOL],true);
constraint array_bool_or([aux160_BOOL,aux117_BOOL,aux241_BOOL],true);
constraint array_bool_or([aux160_BOOL,aux81_BOOL,aux242_BOOL],true);
constraint array_bool_or([aux106_BOOL,aux81_BOOL,aux243_BOOL],true);
constraint array_bool_or([aux117_BOOL,aux72_BOOL,aux245_BOOL],true);
constraint array_bool_or([aux81_BOOL,aux72_BOOL,aux246_BOOL],true);
constraint array_bool_or([aux81_BOOL,aux74_BOOL,aux247_BOOL],true);
constraint array_bool_or([aux117_BOOL,aux74_BOOL,aux248_BOOL],true);
constraint array_bool_or([aux72_BOOL,aux159_BOOL,aux250_BOOL],true);
constraint array_bool_or([aux74_BOOL,aux159_BOOL,aux251_BOOL],true);
constraint array_bool_or([aux74_BOOL,aux158_BOOL,aux252_BOOL],true);
constraint array_bool_or([aux72_BOOL,aux158_BOOL,aux253_BOOL],true);
constraint array_bool_or([aux255_BOOL,aux115_BOOL,aux95_BOOL],true);
constraint array_bool_or([aux113_BOOL,aux95_BOOL,aux256_BOOL],true);
constraint array_bool_or([aux113_BOOL,aux80_BOOL,aux257_BOOL],true);
constraint array_bool_or([aux80_BOOL,aux115_BOOL,aux258_BOOL],true);
constraint array_bool_or([aux260_BOOL,aux95_BOOL,aux84_BOOL],true);
constraint array_bool_or([aux80_BOOL,aux84_BOOL,aux261_BOOL],true);
constraint array_bool_or([aux80_BOOL,aux130_BOOL,aux262_BOOL],true);
constraint array_bool_or([aux130_BOOL,aux95_BOOL,aux263_BOOL],true);
constraint array_bool_or([aux265_BOOL,aux84_BOOL,aux107_BOOL],true);
constraint array_bool_or([aux130_BOOL,aux107_BOOL,aux266_BOOL],true);
constraint array_bool_or([aux130_BOOL,aux64_BOOL,aux267_BOOL],true);
constraint array_bool_or([aux64_BOOL,aux84_BOOL,aux268_BOOL],true);
constraint array_bool_or([aux270_BOOL,aux107_BOOL,aux146_BOOL],true);
constraint array_bool_or([aux64_BOOL,aux146_BOOL,aux271_BOOL],true);
constraint array_bool_or([aux64_BOOL,aux75_BOOL,aux272_BOOL],true);
constraint array_bool_or([aux75_BOOL,aux107_BOOL,aux273_BOOL],true);
constraint array_bool_or([aux275_BOOL,aux146_BOOL,aux90_BOOL],true);
constraint array_bool_or([aux75_BOOL,aux90_BOOL,aux276_BOOL],true);
constraint array_bool_or([aux75_BOOL,aux82_BOOL,aux277_BOOL],true);
constraint array_bool_or([aux82_BOOL,aux146_BOOL,aux278_BOOL],true);
constraint array_bool_or([aux280_BOOL,aux90_BOOL,aux116_BOOL],true);
constraint array_bool_or([aux82_BOOL,aux116_BOOL,aux281_BOOL],true);
constraint array_bool_or([aux82_BOOL,aux114_BOOL,aux282_BOOL],true);
constraint array_bool_or([aux114_BOOL,aux90_BOOL,aux283_BOOL],true);
constraint array_bool_or([aux144_BOOL,aux105_BOOL,aux285_BOOL],true);
constraint array_bool_or([aux286_BOOL,aux141_BOOL,aux105_BOOL],true);
constraint array_bool_or([aux141_BOOL,aux131_BOOL,aux287_BOOL],true);
constraint array_bool_or([aux288_BOOL,aux131_BOOL,aux144_BOOL],true);
constraint array_bool_or([aux105_BOOL,aux89_BOOL,aux290_BOOL],true);
constraint array_bool_or([aux291_BOOL,aux131_BOOL,aux89_BOOL],true);
constraint array_bool_or([aux131_BOOL,aux70_BOOL,aux292_BOOL],true);
constraint array_bool_or([aux293_BOOL,aux70_BOOL,aux105_BOOL],true);
constraint array_bool_or([aux89_BOOL,aux127_BOOL,aux295_BOOL],true);
constraint array_bool_or([aux296_BOOL,aux70_BOOL,aux127_BOOL],true);
constraint array_bool_or([aux70_BOOL,aux139_BOOL,aux297_BOOL],true);
constraint array_bool_or([aux298_BOOL,aux139_BOOL,aux89_BOOL],true);
constraint array_bool_or([aux127_BOOL,aux77_BOOL,aux300_BOOL],true);
constraint array_bool_or([aux301_BOOL,aux139_BOOL,aux77_BOOL],true);
constraint array_bool_or([aux139_BOOL,aux122_BOOL,aux302_BOOL],true);
constraint array_bool_or([aux303_BOOL,aux122_BOOL,aux127_BOOL],true);
constraint array_bool_or([aux77_BOOL,aux97_BOOL,aux305_BOOL],true);
constraint array_bool_or([aux306_BOOL,aux122_BOOL,aux97_BOOL],true);
constraint array_bool_or([aux122_BOOL,aux129_BOOL,aux307_BOOL],true);
constraint array_bool_or([aux308_BOOL,aux129_BOOL,aux77_BOOL],true);
constraint array_bool_or([aux97_BOOL,aux142_BOOL,aux310_BOOL],true);
constraint array_bool_or([aux311_BOOL,aux129_BOOL,aux142_BOOL],true);
constraint array_bool_or([aux129_BOOL,aux143_BOOL,aux312_BOOL],true);
constraint array_bool_or([aux313_BOOL,aux143_BOOL,aux97_BOOL],true);
constraint array_bool_or([aux164_BOOL,aux148_BOOL,aux315_BOOL],true);
constraint array_bool_or([aux316_BOOL,aux165_BOOL,aux148_BOOL],true);
constraint array_bool_or([aux317_BOOL,aux165_BOOL,aux150_BOOL],true);
constraint array_bool_or([aux318_BOOL,aux164_BOOL,aux150_BOOL],true);
constraint array_bool_or([aux148_BOOL,aux112_BOOL,aux320_BOOL],true);
constraint array_bool_or([aux321_BOOL,aux150_BOOL,aux112_BOOL],true);
constraint array_bool_or([aux322_BOOL,aux150_BOOL,aux120_BOOL],true);
constraint array_bool_or([aux323_BOOL,aux148_BOOL,aux120_BOOL],true);
constraint array_bool_or([aux112_BOOL,aux167_BOOL,aux325_BOOL],true);
constraint array_bool_or([aux326_BOOL,aux120_BOOL,aux167_BOOL],true);
constraint array_bool_or([aux327_BOOL,aux120_BOOL,aux125_BOOL],true);
constraint array_bool_or([aux328_BOOL,aux112_BOOL,aux125_BOOL],true);
constraint array_bool_or([aux167_BOOL,aux78_BOOL,aux330_BOOL],true);
constraint array_bool_or([aux331_BOOL,aux125_BOOL,aux78_BOOL],true);
constraint array_bool_or([aux332_BOOL,aux125_BOOL,aux96_BOOL],true);
constraint array_bool_or([aux333_BOOL,aux167_BOOL,aux96_BOOL],true);
constraint array_bool_or([aux78_BOOL,aux151_BOOL,aux335_BOOL],true);
constraint array_bool_or([aux336_BOOL,aux96_BOOL,aux151_BOOL],true);
constraint array_bool_or([aux337_BOOL,aux96_BOOL,aux153_BOOL],true);
constraint array_bool_or([aux338_BOOL,aux78_BOOL,aux153_BOOL],true);
constraint array_bool_or([aux151_BOOL,aux163_BOOL,aux340_BOOL],true);
constraint array_bool_or([aux341_BOOL,aux153_BOOL,aux163_BOOL],true);
constraint array_bool_or([aux342_BOOL,aux153_BOOL,aux162_BOOL],true);
constraint array_bool_or([aux343_BOOL,aux151_BOOL,aux162_BOOL],true);
constraint array_bool_or([aux345_BOOL,aux101_BOOL,aux166_BOOL],true);
constraint array_bool_or([aux346_BOOL,aux100_BOOL,aux166_BOOL],true);
constraint array_bool_or([aux347_BOOL,aux100_BOOL,aux168_BOOL],true);
constraint array_bool_or([aux348_BOOL,aux101_BOOL,aux168_BOOL],true);
constraint array_bool_or([aux350_BOOL,aux166_BOOL,aux132_BOOL],true);
constraint array_bool_or([aux351_BOOL,aux168_BOOL,aux132_BOOL],true);
constraint array_bool_or([aux352_BOOL,aux168_BOOL,aux121_BOOL],true);
constraint array_bool_or([aux353_BOOL,aux166_BOOL,aux121_BOOL],true);
constraint array_bool_or([aux355_BOOL,aux132_BOOL,aux126_BOOL],true);
constraint array_bool_or([aux356_BOOL,aux121_BOOL,aux126_BOOL],true);
constraint array_bool_or([aux357_BOOL,aux121_BOOL,aux119_BOOL],true);
constraint array_bool_or([aux358_BOOL,aux132_BOOL,aux119_BOOL],true);
constraint array_bool_or([aux360_BOOL,aux126_BOOL,aux109_BOOL],true);
constraint array_bool_or([aux361_BOOL,aux119_BOOL,aux109_BOOL],true);
constraint array_bool_or([aux362_BOOL,aux119_BOOL,aux104_BOOL],true);
constraint array_bool_or([aux363_BOOL,aux126_BOOL,aux104_BOOL],true);
constraint array_bool_or([aux365_BOOL,aux109_BOOL,aux149_BOOL],true);
constraint array_bool_or([aux366_BOOL,aux104_BOOL,aux149_BOOL],true);
constraint array_bool_or([aux367_BOOL,aux104_BOOL,aux140_BOOL],true);
constraint array_bool_or([aux368_BOOL,aux109_BOOL,aux140_BOOL],true);
constraint array_bool_or([aux370_BOOL,aux149_BOOL,aux102_BOOL],true);
constraint array_bool_or([aux371_BOOL,aux140_BOOL,aux102_BOOL],true);
constraint array_bool_or([aux372_BOOL,aux140_BOOL,aux103_BOOL],true);
constraint array_bool_or([aux373_BOOL,aux149_BOOL,aux103_BOOL],true);
constraint array_bool_or([aux94_BOOL,aux123_BOOL,aux375_BOOL],true);
constraint array_bool_or([aux93_BOOL,aux123_BOOL,aux376_BOOL],true);
constraint array_bool_or([aux93_BOOL,aux124_BOOL,aux377_BOOL],true);
constraint array_bool_or([aux94_BOOL,aux124_BOOL,aux378_BOOL],true);
constraint array_bool_or([aux123_BOOL,aux154_BOOL,aux380_BOOL],true);
constraint array_bool_or([aux124_BOOL,aux154_BOOL,aux381_BOOL],true);
constraint array_bool_or([aux124_BOOL,aux128_BOOL,aux382_BOOL],true);
constraint array_bool_or([aux123_BOOL,aux128_BOOL,aux383_BOOL],true);
constraint array_bool_or([aux154_BOOL,aux83_BOOL,aux385_BOOL],true);
constraint array_bool_or([aux128_BOOL,aux83_BOOL,aux386_BOOL],true);
constraint array_bool_or([aux128_BOOL,aux108_BOOL,aux387_BOOL],true);
constraint array_bool_or([aux154_BOOL,aux108_BOOL,aux388_BOOL],true);
constraint array_bool_or([aux83_BOOL,aux71_BOOL,aux390_BOOL],true);
constraint array_bool_or([aux108_BOOL,aux71_BOOL,aux391_BOOL],true);
constraint array_bool_or([aux108_BOOL,aux152_BOOL,aux392_BOOL],true);
constraint array_bool_or([aux83_BOOL,aux152_BOOL,aux393_BOOL],true);
constraint array_bool_or([aux71_BOOL,aux135_BOOL,aux395_BOOL],true);
constraint array_bool_or([aux152_BOOL,aux135_BOOL,aux396_BOOL],true);
constraint array_bool_or([aux152_BOOL,aux134_BOOL,aux397_BOOL],true);
constraint array_bool_or([aux71_BOOL,aux134_BOOL,aux398_BOOL],true);
constraint array_bool_or([aux135_BOOL,aux92_BOOL,aux400_BOOL],true);
constraint array_bool_or([aux134_BOOL,aux92_BOOL,aux401_BOOL],true);
constraint array_bool_or([aux134_BOOL,aux91_BOOL,aux402_BOOL],true);
constraint array_bool_or([aux135_BOOL,aux91_BOOL,aux403_BOOL],true);
constraint array_bool_or([aux405_BOOL,aux88_BOOL,aux57_BOOL],true);
constraint array_bool_or([aux86_BOOL,aux57_BOOL,aux406_BOOL],true);
constraint array_bool_or([aux86_BOOL,aux137_BOOL,aux407_BOOL],true);
constraint array_bool_or([aux137_BOOL,aux88_BOOL,aux408_BOOL],true);
constraint array_bool_or([aux410_BOOL,aux57_BOOL,aux155_BOOL],true);
constraint array_bool_or([aux137_BOOL,aux155_BOOL,aux411_BOOL],true);
constraint array_bool_or([aux137_BOOL,aux62_BOOL,aux412_BOOL],true);
constraint array_bool_or([aux62_BOOL,aux57_BOOL,aux413_BOOL],true);
constraint array_bool_or([aux415_BOOL,aux155_BOOL,aux79_BOOL],true);
constraint array_bool_or([aux62_BOOL,aux79_BOOL,aux416_BOOL],true);
constraint array_bool_or([aux62_BOOL,aux138_BOOL,aux417_BOOL],true);
constraint array_bool_or([aux138_BOOL,aux155_BOOL,aux418_BOOL],true);
constraint array_bool_or([aux420_BOOL,aux79_BOOL,aux65_BOOL],true);
constraint array_bool_or([aux138_BOOL,aux65_BOOL,aux421_BOOL],true);
constraint array_bool_or([aux138_BOOL,aux133_BOOL,aux422_BOOL],true);
constraint array_bool_or([aux133_BOOL,aux79_BOOL,aux423_BOOL],true);
constraint array_bool_or([aux425_BOOL,aux65_BOOL,aux58_BOOL],true);
constraint array_bool_or([aux133_BOOL,aux58_BOOL,aux426_BOOL],true);
constraint array_bool_or([aux133_BOOL,aux145_BOOL,aux427_BOOL],true);
constraint array_bool_or([aux145_BOOL,aux65_BOOL,aux428_BOOL],true);
constraint array_bool_or([aux430_BOOL,aux58_BOOL,aux87_BOOL],true);
constraint array_bool_or([aux145_BOOL,aux87_BOOL,aux431_BOOL],true);
constraint array_bool_or([aux145_BOOL,aux85_BOOL,aux432_BOOL],true);
constraint array_bool_or([aux85_BOOL,aux58_BOOL,aux433_BOOL],true);
constraint bool_clause([aux68_BOOL,aux434_BOOL],[]);
constraint bool_clause([aux69_BOOL,aux435_BOOL],[]);
constraint bool_clause([aux158_BOOL,aux436_BOOL],[]);
constraint bool_clause([aux159_BOOL,aux437_BOOL],[]);
constraint bool_clause([aux114_BOOL,aux438_BOOL],[]);
constraint bool_clause([aux116_BOOL,aux439_BOOL],[]);
constraint bool_clause([aux143_BOOL,aux440_BOOL],[]);
constraint bool_clause([aux142_BOOL,aux441_BOOL],[]);
constraint bool_clause([aux162_BOOL,aux442_BOOL],[]);
constraint bool_clause([aux163_BOOL,aux443_BOOL],[]);
constraint bool_clause([aux103_BOOL,aux444_BOOL],[]);
constraint bool_clause([aux102_BOOL,aux445_BOOL],[]);
constraint bool_clause([aux91_BOOL,aux446_BOOL],[]);
constraint bool_clause([aux92_BOOL,aux447_BOOL],[]);
constraint bool_clause([aux85_BOOL,aux448_BOOL],[]);
constraint bool_clause([aux87_BOOL,aux449_BOOL],[]);

solve :: int_search([opponent_00001_00001, opponent_00001_00002, opponent_00001_00003, opponent_00001_00004, opponent_00001_00005, opponent_00001_00006, opponent_00001_00007, opponent_00002_00001, opponent_00002_00002, opponent_00002_00003, opponent_00002_00004, opponent_00002_00005, opponent_00002_00006, opponent_00002_00007, opponent_00003_00001, opponent_00003_00002, opponent_00003_00003, opponent_00003_00004, opponent_00003_00005, opponent_00003_00006, opponent_00003_00007, opponent_00004_00001, opponent_00004_00002, opponent_00004_00003, opponent_00004_00004, opponent_00004_00005, opponent_00004_00006, opponent_00004_00007, opponent_00005_00001, opponent_00005_00002, opponent_00005_00003, opponent_00005_00004, opponent_00005_00005, opponent_00005_00006, opponent_00005_00007, opponent_00006_00001, opponent_00006_00002, opponent_00006_00003, opponent_00006_00004, opponent_00006_00005, opponent_00006_00006, opponent_00006_00007, opponent_00007_00001, opponent_00007_00002, opponent_00007_00003, opponent_00007_00004, opponent_00007_00005, opponent_00007_00006, opponent_00007_00007, opponent_00008_00001, opponent_00008_00002, opponent_00008_00003, opponent_00008_00004, opponent_00008_00005, opponent_00008_00006, opponent_00008_00007, venue_00001_00001, venue_00001_00002, venue_00001_00003, venue_00001_00004, venue_00001_00005, venue_00001_00006, venue_00001_00007, venue_00002_00001, venue_00002_00002, venue_00002_00003, venue_00002_00004, venue_00002_00005, venue_00002_00006, venue_00002_00007, venue_00003_00001, venue_00003_00002, venue_00003_00003, venue_00003_00004, venue_00003_00005, venue_00003_00006, venue_00003_00007, venue_00004_00001, venue_00004_00002, venue_00004_00003, venue_00004_00004, venue_00004_00005, venue_00004_00006, venue_00004_00007, venue_00005_00001, venue_00005_00002, venue_00005_00003, venue_00005_00004, venue_00005_00005, venue_00005_00006, venue_00005_00007, venue_00006_00001, venue_00006_00002, venue_00006_00003, venue_00006_00004, venue_00006_00005, venue_00006_00006, venue_00006_00007, venue_00007_00001, venue_00007_00002, venue_00007_00003, venue_00007_00004, venue_00007_00005, venue_00007_00006, venue_00007_00007, venue_00008_00001, venue_00008_00002, venue_00008_00003, venue_00008_00004, venue_00008_00005, venue_00008_00006, venue_00008_00007, travel_00001_00001, travel_00001_00002, travel_00001_00003, travel_00001_00004, travel_00001_00005, travel_00001_00006, travel_00001_00007, travel_00001_00008, travel_00002_00001, travel_00002_00002, travel_00002_00003, travel_00002_00004, travel_00002_00005, travel_00002_00006, travel_00002_00007, travel_00002_00008, travel_00003_00001, travel_00003_00002, travel_00003_00003, travel_00003_00004, travel_00003_00005, travel_00003_00006, travel_00003_00007, travel_00003_00008, travel_00004_00001, travel_00004_00002, travel_00004_00003, travel_00004_00004, travel_00004_00005, travel_00004_00006, travel_00004_00007, travel_00004_00008, travel_00005_00001, travel_00005_00002, travel_00005_00003, travel_00005_00004, travel_00005_00005, travel_00005_00006, travel_00005_00007, travel_00005_00008, travel_00006_00001, travel_00006_00002, travel_00006_00003, travel_00006_00004, travel_00006_00005, travel_00006_00006, travel_00006_00007, travel_00006_00008, travel_00007_00001, travel_00007_00002, travel_00007_00003, travel_00007_00004, travel_00007_00005, travel_00007_00006, travel_00007_00007, travel_00007_00008, travel_00008_00001, travel_00008_00002, travel_00008_00003, travel_00008_00004, travel_00008_00005, travel_00008_00006, travel_00008_00007, travel_00008_00008], input_order, indomain_min, complete)
minimize objective;
