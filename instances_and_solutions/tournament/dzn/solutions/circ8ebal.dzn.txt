{"type": "statistics", "statistics": {"paths": 0, "flatBoolVars": 336, "flatIntVars": 329, "flatBoolConstraints": 224, "flatIntConstraints": 625, "evaluatedHalfReifiedConstraints": 336, "method": "minimize", "flatTime": 0.68927}}
{"type": "comment", "comment": "% Pruned 49999 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49999 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49998 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49997 learnt clauses"}
{"type": "comment", "comment": "% Pruned 50000 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49999 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49998 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49997 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49999 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49998 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49998 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49997 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49995 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49998 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49997 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49995 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49994 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49997 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49995 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49994 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49993 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49995 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49995 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49994 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49993 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49992 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49991 learnt clauses"}
{"type": "comment", "comment": "% Pruned 50000 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49998 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49997 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49999 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49998 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49998 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49997 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49995 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49997 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49994 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49995 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49993 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49995 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49993 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49999 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49998 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49997 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49998 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49997 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49995 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49997 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49994 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49994 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49995 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49993 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49994 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49993 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49991 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49998 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49997 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49995 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49995 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49994 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49992 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49997 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49995 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49994 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49994 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49995 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49994 learnt clauses"}
{"type": "statistics", "statistics": {"nodes": 4343633, "failures": 4340867, "restarts": 8, "variables": 11714, "intVars": 385, "boolVariables": 11327, "propagators": 491, "propagations": 1252746176, "peakDepth": 24, "nogoods": 4340867, "backjumps": 2598, "peakMem": 0.0, "time": 549.9829999999999, "initTime": 0.013, "solveTime": 549.97, "objective": 78, "optTime": 185.421, "baseMem": 0.0, "trailMem": 0.05, "randomSeed": 1667827973}}
{"type": "solution", "output": {"default": "%% SCHEDULE\n%%  2  7 @8 @5 @6  4  3 \n%% @1 @8  7 @4 @3  5  6 \n%%  4 @5 @6  7  2  8 @1 \n%% @3  6  5  2 @7 @1 @8 \n%%  6  3 @4  1  8 @2 @7 \n%% @5 @4  3  8  1 @7 @2 \n%%  8 @1 @2 @3  4  6  5 \n%% @7  2  1 @6 @5 @3  4 \nopponent = array2d(1..8, 1..7, [2, 7, 8, 5, 6, 4, 3, 1, 8, 7, 4, 3, 5, 6, 4, 5, 6, 7, 2, 8, 1, 3, 6, 5, 2, 7, 1, 8, 6, 3, 4, 1, 8, 2, 7, 5, 4, 3, 8, 1, 7, 2, 8, 1, 2, 3, 4, 6, 5, 7, 2, 1, 6, 5, 3, 4]);\nvenue = array2d(1..8, 1..7, [1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 2, 1, 1, 1, 2, 2, 1, 1, 1, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 2, 1, 2, 2, 2, 1, 1, 1, 2, 1, 1, 2, 2, 2, 1]);\ntravel = array2d(1..8, 1..8, [0, 0, 1, 3, 1, 3, 0, 0, 1, 1, 2, 2, 1, 1, 0, 0, 0, 2, 1, 3, 0, 0, 2, 2, 1, 1, 0, 0, 3, 2, 1, 4, 0, 0, 1, 1, 0, 3, 3, 2, 1, 1, 2, 0, 0, 1, 3, 4, 0, 2, 1, 1, 4, 0, 0, 0, 1, 1, 0, 2, 1, 2, 3, 0]);\nobjective = 78;\n", "raw": "%% SCHEDULE\n%%  2  7 @8 @5 @6  4  3 \n%% @1 @8  7 @4 @3  5  6 \n%%  4 @5 @6  7  2  8 @1 \n%% @3  6  5  2 @7 @1 @8 \n%%  6  3 @4  1  8 @2 @7 \n%% @5 @4  3  8  1 @7 @2 \n%%  8 @1 @2 @3  4  6  5 \n%% @7  2  1 @6 @5 @3  4 \nopponent = array2d(1..8, 1..7, [2, 7, 8, 5, 6, 4, 3, 1, 8, 7, 4, 3, 5, 6, 4, 5, 6, 7, 2, 8, 1, 3, 6, 5, 2, 7, 1, 8, 6, 3, 4, 1, 8, 2, 7, 5, 4, 3, 8, 1, 7, 2, 8, 1, 2, 3, 4, 6, 5, 7, 2, 1, 6, 5, 3, 4]);\nvenue = array2d(1..8, 1..7, [1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 2, 1, 1, 1, 2, 2, 1, 1, 1, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 2, 1, 2, 2, 2, 1, 1, 1, 2, 1, 1, 2, 2, 2, 1]);\ntravel = array2d(1..8, 1..8, [0, 0, 1, 3, 1, 3, 0, 0, 1, 1, 2, 2, 1, 1, 0, 0, 0, 2, 1, 3, 0, 0, 2, 2, 1, 1, 0, 0, 3, 2, 1, 4, 0, 0, 1, 1, 0, 3, 3, 2, 1, 1, 2, 0, 0, 1, 3, 4, 0, 2, 1, 1, 4, 0, 0, 0, 1, 1, 0, 2, 1, 2, 3, 0]);\nobjective = 78;\n", "json": {  "opponent" : [[2, 7, 8, 5, 6, 4, 3], [1, 8, 7, 4, 3, 5, 6], [4, 5, 6, 7, 2, 8, 1], [3, 6, 5, 2, 7, 1, 8], [6, 3, 4, 1, 8, 2, 7], [5, 4, 3, 8, 1, 7, 2], [8, 1, 2, 3, 4, 6, 5], [7, 2, 1, 6, 5, 3, 4]],  "venue" : [[1, 1, 2, 2, 2, 1, 1], [2, 2, 1, 2, 2, 1, 1], [1, 2, 2, 1, 1, 1, 2], [2, 1, 1, 1, 2, 2, 2], [1, 1, 2, 1, 1, 2, 2], [2, 2, 1, 1, 1, 2, 2], [1, 2, 2, 2, 1, 1, 1], [2, 1, 1, 2, 2, 2, 1]],  "travel" : [[0, 0, 1, 3, 1, 3, 0, 0], [1, 1, 2, 2, 1, 1, 0, 0], [0, 2, 1, 3, 0, 0, 2, 2], [1, 1, 0, 0, 3, 2, 1, 4], [0, 0, 1, 1, 0, 3, 3, 2], [1, 1, 2, 0, 0, 1, 3, 4], [0, 2, 1, 1, 4, 0, 0, 0], [1, 1, 0, 2, 1, 2, 3, 0]],  "objective" : 78}}, "sections": ["default", "raw", "json"]}
{"type": "status", "status": "OPTIMAL_SOLUTION"}
{"type": "statistics", "statistics": {"nSolutions": 1}}
