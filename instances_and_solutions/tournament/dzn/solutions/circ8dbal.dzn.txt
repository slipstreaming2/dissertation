{"type": "statistics", "statistics": {"paths": 0, "flatBoolVars": 336, "flatIntVars": 329, "flatBoolConstraints": 224, "flatIntConstraints": 625, "evaluatedHalfReifiedConstraints": 336, "method": "minimize", "flatTime": 0.718204}}
{"type": "comment", "comment": "% Pruned 50000 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49999 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49998 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49997 learnt clauses"}
{"type": "comment", "comment": "% Pruned 50000 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49999 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49998 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49997 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49999 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49998 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49997 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49995 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49998 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49997 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49995 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49994 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49992 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49995 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49994 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49993 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49995 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49994 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49993 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49992 learnt clauses"}
{"type": "comment", "comment": "% Pruned 50000 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49999 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49998 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49997 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49999 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49998 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49997 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49995 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49998 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49997 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49995 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49994 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49995 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49993 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49995 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49994 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49993 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49992 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49995 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49994 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49993 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49991 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49999 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49998 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49998 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49997 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49994 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49997 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49995 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49995 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49995 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49994 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49993 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49998 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49997 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49997 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49995 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49995 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49993 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49995 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49993 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49994 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49992 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49993 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49997 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "statistics", "statistics": {"nodes": 4472828, "failures": 4469773, "restarts": 8, "variables": 11714, "intVars": 385, "boolVariables": 11327, "propagators": 491, "propagations": 1307954533, "peakDepth": 23, "nogoods": 4469773, "backjumps": 2887, "peakMem": 0.0, "time": 600.013, "initTime": 0.012, "solveTime": 600.001, "objective": 80, "optTime": 59.858, "baseMem": 0.0, "trailMem": 0.05, "randomSeed": 1667827372}}
{"type": "solution", "output": {"default": "%% SCHEDULE\n%%  2 @4 @6 @7  8  5  3 \n%% @1 @6  4 @3  5  8  7 \n%% @7 @8 @5  2  4  6 @1 \n%% @5  1 @2 @8 @3  7  6 \n%%  4 @7  3  6 @2 @1 @8 \n%%  8  2  1 @5  7 @3 @4 \n%%  3  5 @8  1 @6 @4 @2 \n%% @6  3  7  4 @1 @2  5 \nopponent = array2d(1..8, 1..7, [2, 4, 6, 7, 8, 5, 3, 1, 6, 4, 3, 5, 8, 7, 7, 8, 5, 2, 4, 6, 1, 5, 1, 2, 8, 3, 7, 6, 4, 7, 3, 6, 2, 1, 8, 8, 2, 1, 5, 7, 3, 4, 3, 5, 8, 1, 6, 4, 2, 6, 3, 7, 4, 1, 2, 5]);\nvenue = array2d(1..8, 1..7, [1, 2, 2, 2, 1, 1, 1, 2, 2, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 2, 2, 1, 2, 2, 2, 1, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 1, 1, 1, 2, 2, 1]);\ntravel = array2d(1..8, 1..8, [0, 3, 2, 1, 2, 0, 0, 0, 1, 3, 4, 1, 1, 0, 0, 0, 4, 1, 3, 2, 0, 0, 2, 2, 1, 1, 2, 2, 3, 1, 0, 0, 0, 2, 2, 0, 3, 1, 1, 3, 0, 0, 0, 1, 1, 3, 1, 2, 0, 0, 1, 1, 1, 2, 2, 3, 2, 2, 0, 0, 1, 1, 2, 0]);\nobjective = 80;\n", "raw": "%% SCHEDULE\n%%  2 @4 @6 @7  8  5  3 \n%% @1 @6  4 @3  5  8  7 \n%% @7 @8 @5  2  4  6 @1 \n%% @5  1 @2 @8 @3  7  6 \n%%  4 @7  3  6 @2 @1 @8 \n%%  8  2  1 @5  7 @3 @4 \n%%  3  5 @8  1 @6 @4 @2 \n%% @6  3  7  4 @1 @2  5 \nopponent = array2d(1..8, 1..7, [2, 4, 6, 7, 8, 5, 3, 1, 6, 4, 3, 5, 8, 7, 7, 8, 5, 2, 4, 6, 1, 5, 1, 2, 8, 3, 7, 6, 4, 7, 3, 6, 2, 1, 8, 8, 2, 1, 5, 7, 3, 4, 3, 5, 8, 1, 6, 4, 2, 6, 3, 7, 4, 1, 2, 5]);\nvenue = array2d(1..8, 1..7, [1, 2, 2, 2, 1, 1, 1, 2, 2, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 2, 2, 1, 2, 2, 2, 1, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 1, 1, 1, 2, 2, 1]);\ntravel = array2d(1..8, 1..8, [0, 3, 2, 1, 2, 0, 0, 0, 1, 3, 4, 1, 1, 0, 0, 0, 4, 1, 3, 2, 0, 0, 2, 2, 1, 1, 2, 2, 3, 1, 0, 0, 0, 2, 2, 0, 3, 1, 1, 3, 0, 0, 0, 1, 1, 3, 1, 2, 0, 0, 1, 1, 1, 2, 2, 3, 2, 2, 0, 0, 1, 1, 2, 0]);\nobjective = 80;\n", "json": {  "opponent" : [[2, 4, 6, 7, 8, 5, 3], [1, 6, 4, 3, 5, 8, 7], [7, 8, 5, 2, 4, 6, 1], [5, 1, 2, 8, 3, 7, 6], [4, 7, 3, 6, 2, 1, 8], [8, 2, 1, 5, 7, 3, 4], [3, 5, 8, 1, 6, 4, 2], [6, 3, 7, 4, 1, 2, 5]],  "venue" : [[1, 2, 2, 2, 1, 1, 1], [2, 2, 1, 2, 1, 1, 1], [2, 2, 2, 1, 1, 1, 2], [2, 1, 2, 2, 2, 1, 1], [1, 2, 1, 1, 2, 2, 2], [1, 1, 1, 2, 1, 2, 2], [1, 1, 2, 1, 2, 2, 2], [2, 1, 1, 1, 2, 2, 1]],  "travel" : [[0, 3, 2, 1, 2, 0, 0, 0], [1, 3, 4, 1, 1, 0, 0, 0], [4, 1, 3, 2, 0, 0, 2, 2], [1, 1, 2, 2, 3, 1, 0, 0], [0, 2, 2, 0, 3, 1, 1, 3], [0, 0, 0, 1, 1, 3, 1, 2], [0, 0, 1, 1, 1, 2, 2, 3], [2, 2, 0, 0, 1, 1, 2, 0]],  "objective" : 80}}, "sections": ["default", "raw", "json"]}
{"type": "comment", "comment": "% Time limit exceeded!"}
{"type": "statistics", "statistics": {"nSolutions": 1}}
