{"type": "statistics", "statistics": {"paths": 0, "flatBoolVars": 336, "flatIntVars": 329, "flatBoolConstraints": 224, "flatIntConstraints": 625, "evaluatedHalfReifiedConstraints": 336, "method": "minimize", "flatTime": 0.6779}}
{"type": "comment", "comment": "% Pruned 50000 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49999 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49998 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49997 learnt clauses"}
{"type": "comment", "comment": "% Pruned 50000 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49999 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49999 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49998 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49997 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49999 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49998 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49997 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49995 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49998 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49995 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49994 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49997 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49995 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49994 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49993 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49995 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49994 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49994 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49993 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49992 learnt clauses"}
{"type": "comment", "comment": "% Pruned 50000 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49999 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49998 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49997 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49999 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49998 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49998 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49997 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49997 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49994 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49995 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49993 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49995 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49994 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49999 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49998 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49997 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49995 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49997 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49995 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49997 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49995 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49995 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49993 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49995 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49993 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49994 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49993 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49998 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49997 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49997 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49994 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49995 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49994 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49993 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49993 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49997 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49996 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49995 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49995 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49994 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49994 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49992 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49993 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49992 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49995 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49994 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49993 learnt clauses"}
{"type": "comment", "comment": "% Pruned 49992 learnt clauses"}
{"type": "statistics", "statistics": {"nodes": 4706632, "failures": 4703708, "restarts": 12, "variables": 11714, "intVars": 385, "boolVariables": 11327, "propagators": 491, "propagations": 1359335091, "peakDepth": 29, "nogoods": 4703708, "backjumps": 2650, "peakMem": 0.0, "time": 571.471, "initTime": 0.012, "solveTime": 571.4589999999999, "objective": 78, "optTime": 11.905, "baseMem": 0.0, "trailMem": 0.04, "randomSeed": 1667826800}}
{"type": "solution", "output": {"default": "%% SCHEDULE\n%% @2  3  5 @7 @6 @4  8 \n%%  1  6  8 @3 @4 @5  7 \n%% @8 @1  6  2 @5  7  4 \n%% @5 @8 @7  6  2  1 @3 \n%%  4 @7 @1  8  3  2 @6 \n%%  7 @2 @3 @4  1  8  5 \n%% @6  5  4  1 @8 @3 @2 \n%%  3  4 @2 @5  7 @6 @1 \nopponent = array2d(1..8, 1..7, [2, 3, 5, 7, 6, 4, 8, 1, 6, 8, 3, 4, 5, 7, 8, 1, 6, 2, 5, 7, 4, 5, 8, 7, 6, 2, 1, 3, 4, 7, 1, 8, 3, 2, 6, 7, 2, 3, 4, 1, 8, 5, 6, 5, 4, 1, 8, 3, 2, 3, 4, 2, 5, 7, 6, 1]);\nvenue = array2d(1..8, 1..7, [2, 1, 1, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 2, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 2]);\ntravel = array2d(1..8, 1..8, [1, 1, 0, 2, 1, 2, 3, 0, 0, 0, 0, 1, 1, 1, 3, 0, 3, 1, 2, 0, 2, 2, 0, 0, 1, 3, 1, 3, 0, 0, 1, 1, 0, 2, 2, 4, 0, 0, 1, 1, 0, 4, 1, 1, 2, 0, 0, 0, 1, 1, 0, 0, 1, 3, 1, 3, 0, 0, 2, 3, 3, 2, 3, 1]);\nobjective = 78;\n", "raw": "%% SCHEDULE\n%% @2  3  5 @7 @6 @4  8 \n%%  1  6  8 @3 @4 @5  7 \n%% @8 @1  6  2 @5  7  4 \n%% @5 @8 @7  6  2  1 @3 \n%%  4 @7 @1  8  3  2 @6 \n%%  7 @2 @3 @4  1  8  5 \n%% @6  5  4  1 @8 @3 @2 \n%%  3  4 @2 @5  7 @6 @1 \nopponent = array2d(1..8, 1..7, [2, 3, 5, 7, 6, 4, 8, 1, 6, 8, 3, 4, 5, 7, 8, 1, 6, 2, 5, 7, 4, 5, 8, 7, 6, 2, 1, 3, 4, 7, 1, 8, 3, 2, 6, 7, 2, 3, 4, 1, 8, 5, 6, 5, 4, 1, 8, 3, 2, 3, 4, 2, 5, 7, 6, 1]);\nvenue = array2d(1..8, 1..7, [2, 1, 1, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 2, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 2]);\ntravel = array2d(1..8, 1..8, [1, 1, 0, 2, 1, 2, 3, 0, 0, 0, 0, 1, 1, 1, 3, 0, 3, 1, 2, 0, 2, 2, 0, 0, 1, 3, 1, 3, 0, 0, 1, 1, 0, 2, 2, 4, 0, 0, 1, 1, 0, 4, 1, 1, 2, 0, 0, 0, 1, 1, 0, 0, 1, 3, 1, 3, 0, 0, 2, 3, 3, 2, 3, 1]);\nobjective = 78;\n", "json": {  "opponent" : [[2, 3, 5, 7, 6, 4, 8], [1, 6, 8, 3, 4, 5, 7], [8, 1, 6, 2, 5, 7, 4], [5, 8, 7, 6, 2, 1, 3], [4, 7, 1, 8, 3, 2, 6], [7, 2, 3, 4, 1, 8, 5], [6, 5, 4, 1, 8, 3, 2], [3, 4, 2, 5, 7, 6, 1]],  "venue" : [[2, 1, 1, 2, 2, 2, 1], [1, 1, 1, 2, 2, 2, 1], [2, 2, 1, 1, 2, 1, 1], [2, 2, 2, 1, 1, 1, 2], [1, 2, 2, 1, 1, 1, 2], [1, 2, 2, 2, 1, 1, 1], [2, 1, 1, 1, 2, 2, 2], [1, 1, 2, 2, 1, 2, 2]],  "travel" : [[1, 1, 0, 2, 1, 2, 3, 0], [0, 0, 0, 1, 1, 1, 3, 0], [3, 1, 2, 0, 2, 2, 0, 0], [1, 3, 1, 3, 0, 0, 1, 1], [0, 2, 2, 4, 0, 0, 1, 1], [0, 4, 1, 1, 2, 0, 0, 0], [1, 1, 0, 0, 1, 3, 1, 3], [0, 0, 2, 3, 3, 2, 3, 1]],  "objective" : 78}}, "sections": ["default", "raw", "json"]}
{"type": "status", "status": "OPTIMAL_SOLUTION"}
{"type": "statistics", "statistics": {"nSolutions": 1}}
